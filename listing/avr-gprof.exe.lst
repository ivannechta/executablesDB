sub esp 1Ch +
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
mov ds:dword_4A88CC 1 +
mov ds:dword_4A88C8 1 +
mov ds:dword_4A88C4 1 +
mov ds:dword_4A88D4 1 +
jz loc_4010B0  +
mov ds:dword_4A4008 eax +
mov eax ds:dword_4A88D8 +
test eax eax +
jz loc_4010A0  +
mov dword ptr [esp] 2 +
call __set_app_type  +
mov dword ptr [esp] 0FFFFFFFFh +
call sub_4791D0  +
mov edx ds:dword_4A88DC +
mov ds:dword_4A8D58 eax +
mov ds:dword_4A8D5C eax +
mov eax ds:_fmode +
mov [eax] edx +
call sub_479410  +
cmp dword_47DB70 1 +
jz loc_401100  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 1 +
call __set_app_type  +
jmp loc_401062  +
***
mov edx ds:40003Ch +
cmp dword ptr [edx+400000h] 4550h +
lea ecx [edx+400000h] +
jnz loc_401048  +
movzx edx word ptr [ecx+18h] +
cmp dx 10Bh +
jz loc_401112  +
cmp dx 20Bh +
jnz loc_401048  +
cmp dword ptr [ecx+84h] 0Eh +
jbe loc_401048  +
mov edx [ecx+0F8h] +
xor eax eax +
test edx edx +
setnz al  +
jmp loc_401048  +
***
mov dword ptr [esp] offset sub_479480 +
call sub_479470  +
xor eax eax +
add esp 1Ch +
retn   +
***
cmp dword ptr [ecx+74h] 0Eh +
jbe loc_401048  +
mov ecx [ecx+0E8h] +
xor eax eax +
test ecx ecx +
setnz al  +
jmp loc_401048  +
***
sub esp 2Ch +
mov eax ds:dword_4A88E0 +
mov dword ptr [esp+10h] offset dword_4A4000 +
mov dword ptr [esp+8] offset dword_4A4014 +
mov dword ptr [esp+4] offset dword_4A4018 +
mov ds:dword_4A4000 eax +
mov eax ds:dword_4A88E4 +
mov dword ptr [esp] offset dword_4A401C +
mov [esp+0Ch] eax +
call __getmainargs  +
mov ds:dword_4A4010 eax +
add esp 2Ch +
retn   +
***
mov ebp esp +
mov ecx 11h +
push edi  +
push esi  +
lea edx [ebp+var_5C] +
push ebx  +
mov edi edx +
sub esp 7Ch +
stos   +
mov al 30h +
call sub_47A1D0  +
sub esp eax +
lea eax [esp+88h+var_6E+1] +
and eax 0FFFFFFF0h +
mov dword ptr [eax] 0CCCCCCCCh +
mov dword ptr [eax+4] 0CCCCCCCCh +
mov dword ptr [eax+8] 0CCCCCCCCh +
mov dword ptr [eax+0Ch] 0CCCCCCCCh +
mov dword ptr [eax+10h] 0CCCCCCCCh +
mov dword ptr [eax+14h] 0CCCCCCCCh +
mov dword ptr [eax+18h] 0CCCCCCCCh +
mov dword ptr [eax+1Ch] 0CCCCCCCCh +
and esp 0FFFFFFF0h +
mov esi ds:dword_4A88D8 +
test esi esi +
jnz loc_401470  +
mov eax large fs:18h +
xor esi esi +
mov ebx [eax+4] +
mov edi ds:Sleep +
jmp loc_401216  +
cmp eax ebx +
jz loc_401410  +
mov [esp+88h+var_88] 3E8h +
call edi  +
sub esp 4 +
mov eax esi +
cmpxchg ds:dword_4A8D60 ebx +
test eax eax +
jnz loc_401202  +
mov eax ds:dword_4A8D64 +
xor ebx ebx +
cmp eax 1 +
jz loc_401423  +
mov eax ds:dword_4A8D64 +
test eax eax +
jz loc_401481  +
mov ds:dword_4A4004 1 +
mov eax ds:dword_4A8D64 +
cmp eax 1 +
jz loc_40143D  +
test ebx ebx +
jz loc_401463  +
mov eax ds:off_4A2990 +
test eax eax +
jz loc_401286  +
mov [esp+88h+var_80] 0 +
mov [esp+88h+var_84] 2 +
mov [esp+88h+var_88] 0 +
call eax  +
sub esp 0Ch +
call sub_479780  +
mov [esp+88h+var_88] offset sub_4792C0 +
call ds:SetUnhandledExceptionFilter  +
sub esp 4 +
mov ds:dword_4A88E8 eax +
mov [esp+88h+var_88] offset dword_401000 +
call loc_47DB78  +
call sub_479A50  +
mov eax ds:_acmdln +
mov ds:dword_4A8C6C 400000h +
mov eax [eax] +
test eax eax +
jz loc_401309  +
xor ecx ecx +
jmp loc_4012E0  +
test dl dl +
jz loc_401304  +
test ecx ecx +
jz loc_4012F9  +
mov ecx 1 +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012D0  +
mov ebx ecx +
xor ebx 1 +
cmp dl 22h +
cmovz ecx ebx +
jmp loc_4012DD  +
test dl dl +
jz loc_401304  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012F5  +
mov ds:dword_4A8C68 eax +
mov ebx ds:dword_4A88D8 +
test ebx ebx +
jz loc_401328  +
movzx edx [ebp+var_2C] +
mov eax 0Ah +
test [ebp+var_30] 1 +
cmovnz eax edx +
mov dword_47D000 eax +
mov eax ds:dword_4A401C +
mov [ebp-70h] eax +
mov esi eax +
lea eax ds:4[eax*4] +
mov [ebp+var_74] eax +
mov [esp+88h+var_88] eax +
call malloc  +
test esi esi +
mov edi ds:dword_4A4018 +
mov [ebp+var_6E+2] eax +
jle loc_4014A4  +
xor ebx ebx +
mov esi edi +
lea esi [esi+0] +
mov eax [esi+ebx*4] +
mov [esp+88h+var_88] eax +
call strlen  +
lea edi [eax+1] +
mov [esp+88h+var_88] edi +
call malloc  +
mov ecx [ebp+var_6E+2] +
mov [ecx+ebx*4] eax +
mov ecx [esi+ebx*4] +
add ebx 1 +
mov [esp+88h+var_80] edi +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_84] ecx +
call memcpy  +
cmp ebx [ebp-70h] +
jnz loc_401360  +
mov eax [ebp+var_74] +
sub eax 4 +
mov esi [ebp+var_6E+2] +
mov dword ptr [esi+eax] 0 +
mov ds:dword_4A4018 esi +
call sub_479AE0  +
mov edx ds:dword_4A4014 +
mov eax ds:__initenv +
mov [eax] edx +
mov eax ds:dword_4A401C +
mov ecx ds:dword_4A4014 +
mov edx ds:dword_4A4018 +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] edx +
call sub_47B420  +
mov ecx ds:dword_4A4008 +
test ecx ecx +
mov ds:dword_4A400C eax +
jz loc_4014AB  +
mov edx ds:dword_4A4004 +
test edx edx +
jnz loc_401407  +
call _cexit  +
mov eax ds:dword_4A400C +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_4A8D64 +
mov ebx 1 +
cmp eax 1 +
jnz loc_401234  +
mov [esp+88h+var_88] 1Fh +
call _amsg_exit  +
mov eax ds:dword_4A8D64 +
cmp eax 1 +
jnz loc_401259  +
mov [esp+88h+var_84] offset unk_4AA008 +
mov [esp+88h+var_88] offset unk_4AA000 +
call _initterm  +
test ebx ebx +
mov ds:dword_4A8D64 2 +
jnz loc_401261  +
xchg ebx ds:dword_4A8D60 +
jmp loc_401261  +
mov [esp+88h+var_88] edx +
call ds:GetStartupInfoA  +
sub esp 4 +
jmp loc_4011EF  +
mov ds:dword_4A8D64 1 +
mov [esp+88h+var_84] offset unk_4AA018 +
mov [esp+88h+var_88] offset unk_4AA00C +
call _initterm  +
jmp loc_40124B  +
xor eax eax +
jmp loc_40139D  +
mov [esp+88h+var_88] eax +
nop   +
call exit  +
***
sub esp 0Ch +
mov ds:dword_4A88D8 1 +
call sub_479B00  +
add esp 0Ch +
jmp sub_401180  +
***
sub esp 0Ch +
mov ds:dword_4A88D8 0 +
call sub_479B00  +
add esp 0Ch +
jmp sub_401180  +
***
mov eax dword_47DB84 +
test eax eax +
jz locret_40154C  +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [esp+1Ch+var_1C] offset aLibgcj13_dll +
call ds:GetModuleHandleA  +
mov edx 0 +
sub esp 4 +
test eax eax +
jz loc_40153E  +
mov [esp+1Ch+var_18] offset a_jv_registercl +
mov [esp+1Ch+var_1C] eax +
call ds:GetProcAddress  +
sub esp 8 +
mov edx eax +
test edx edx +
jz locret_40154B  +
mov [esp+1Ch+var_1C] offset dword_47DB84 +
call edx  +
leave   +
retn   +
***
mov ebp esp +
pop ebp  +
retn   +
***
mov edx [eax] +
mov eax [esp+arg_4] +
test edx edx +
mov ecx [eax] +
jz loc_401590  +
test ecx ecx +
jz loc_401597  +
mov ebx [ecx+18h] +
mov eax 1 +
cmp [edx+18h] ebx +
jb loc_40158A  +
ja loc_401597  +
mov eax [edx+10h] +
sub eax [ecx+10h] +
pop ebx  +
retn   +
mov eax 1 +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov eax [esp+20h] +
mov ebx [eax] +
mov eax [esp+24h] +
mov esi [eax] +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_4015E7  +
mov edx [esi+0Ch] +
test edx edx +
jz loc_4015E7  +
mov edx [edx+4] +
mov eax [eax+4] +
mov [esp+4] edx +
mov [esp] eax +
call sub_461F50  +
test eax eax +
jnz loc_4015E1  +
mov eax [ebx+10h] +
mov edx [esi+10h] +
cmp eax edx +
jz loc_4015E7  +
sub eax edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esi] +
xor edx edx +
cmp [ebx] eax +
mov eax 0FFFFFFFFh +
setnbe dl  +
cmovnb eax edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 15Ch +
mov edx [esp+15Ch+arg_C] +
mov eax [esp+15Ch+arg_8] +
cmp [edx+0Ch] eax +
jge loc_401660  +
mov eax [esp+15Ch+arg_0] +
mov edx [esp+15Ch+arg_4] +
mov ebx [esp+15Ch+arg_4] +
add edx eax +
test ebx ebx +
jz loc_401642  +
mov byte ptr [eax] 20h +
add eax 1 +
cmp eax edx +
jnz loc_401638  +
mov eax [esp+15Ch+arg_0] +
mov esi [esp+15Ch+arg_4] +
mov byte ptr [eax+esi] 0 +
add esp 15Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [edx+14h] +
mov edi [edx+eax*4-4] +
test edi edi +
jz loc_40161D  +
add ds:dword_4A4030 1 +
test byte ptr [edi+14h] 1 +
mov byte ptr [esp+15Ch+var_138] 0 +
jnz loc_401836  +
mov ecx ds:dword_4A4020 +
mov eax [edi+20h] +
test ecx ecx +
jz loc_4016A0  +
test eax eax +
jz loc_401900  +
cmp eax [edi] +
ja loc_401922  +
nop   +
lea ebx [esp+15Ch+var_138] +
xor edx edx +
xor esi esi +
mov [esp+15Ch+var_140] ebx +
mov [esp+15Ch+var_144] 0FFFFFFFFh +
xor ebp ebp +
jmp loc_4016C0  +
mov eax [edi+20h] +
mov edx 1 +
test eax eax +
jz loc_40172B  +
mov eax [edi+48h] +
test edx edx +
mov edx 0 +
cmovz esi edx +
add esi eax +
test ecx ecx +
mov ds:dword_4A4024 eax +
jz loc_4016E2  +
cmp [esp+15Ch+var_144] eax +
jz loc_40171B  +
cmp ebx [esp+15Ch+var_140] +
jbe loc_4016EE  +
mov byte ptr [ebx] 2Ch +
add ebx 1 +
mov [esp+15Ch+var_15C] ebx +
mov [esp+15Ch+var_154] eax +
mov [esp+15Ch+var_158] offset aLu +
call sprintf  +
mov [esp+15Ch+var_15C] ebx +
call strlen  +
mov ecx ds:dword_4A4020 +
add ebx eax +
mov eax ds:dword_4A4024 +
mov [esp+15Ch+var_144] eax +
add ebp 1 +
add edi 4 +
cmp ebp 0Ah +
jnz loc_4016B8  +
mov edx 1 +
test ecx ecx +
jz loc_401735  +
cmp ebx [esp+15Ch+var_140] +
jz loc_40176F  +
test edx edx +
jnz loc_4017C7  +
mov eax [esp+15Ch+arg_0] +
mov edx [esp+15Ch+arg_4] +
mov ecx [esp+15Ch+arg_4] +
add edx eax +
test ecx ecx +
jz loc_401642  +
lea esi [esi+0] +
mov byte ptr [eax] 20h +
add eax 1 +
cmp eax edx +
jnz loc_401760  +
jmp loc_401642  +
mov eax ds:dword_4A4024 +
mov [esp+15Ch+var_158] offset aLu +
mov [esp+15Ch+var_15C] ebx +
mov [esp+15Ch+var_154] eax +
call sprintf  +
mov edx ebx +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_40178A  +
mov ecx eax +
mov esi ds:dword_4A4024 +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
mov eax [esp+15Ch+var_140] +
sbb edx 3 +
sub edx ebx +
lea ebx [eax+edx] +
add ds:dword_4A402C 1 +
cmp dword_47D008 esi +
ja loc_401907  +
mov dword ptr [ebx] 203E2D20h +
add ebx 4 +
mov byte ptr [ebx] 0 +
sub ebx [esp+15Ch+var_140] +
cmp [esp+15Ch+arg_4] ebx +
ja loc_4018A8  +
mov eax [esp+15Ch+arg_4] +
mov [esp+15Ch+var_154] eax +
mov eax [esp+15Ch+var_140] +
mov [esp+15Ch+var_158] eax +
mov eax [esp+15Ch+arg_0] +
mov [esp+15Ch+var_15C] eax +
call strncpy  +
mov eax [esp+15Ch+arg_0] +
mov ecx [esp+15Ch+arg_4] +
mov byte ptr [eax+ecx] 0 +
add esp 15Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi+18h] +
mov [esp+15Ch+var_158] offset aLu +
mov [esp+15Ch+var_154] eax +
lea eax [esp+15Ch+var_138] +
mov esi eax +
mov [esp+15Ch+var_15C] eax +
mov [esp+15Ch+var_140] eax +
call sprintf  +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_401859  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
mov ecx ds:dword_4A4020 +
lea ebx [edx+2] +
cmovnz ebx edx +
add al al +
mov eax [edi+18h] +
sbb ebx 3 +
mov edx 1 +
mov esi eax +
mov [esp+15Ch+var_144] eax +
mov ds:dword_4A4024 eax +
mov eax [edi+20h] +
jmp loc_4016B4  +
mov esi [esp+15Ch+arg_4] +
mov eax [esp+15Ch+var_140] +
sub esi ebx +
mov ebx [esp+15Ch+arg_0] +
mov [esp+15Ch+var_158] eax +
add ebx esi +
mov [esp+15Ch+var_15C] ebx +
call strcpy  +
test esi esi +
mov eax [esp+15Ch+arg_0] +
jz loc_401654  +
lea esi [esi+0] +
mov byte ptr [eax] 20h +
add eax 1 +
cmp eax ebx +
jz loc_401654  +
mov byte ptr [eax] 20h +
add eax 1 +
cmp eax ebx +
jnz loc_4018E0  +
jmp loc_401654  +
xor eax eax +
jmp loc_4016A0  +
mov eax 23h +
mov [esp+15Ch+var_138] 23232323h +
lea ebx [esp+15Ch+var_133] +
mov [esp+28h] ax +
jmp loc_4017DA  +
mov eax ds:dword_4A4024 +
mov [esp+15Ch+var_158] offset aLu +
mov [esp+15Ch+var_154] eax +
lea eax [esp+15Ch+var_138] +
mov esi eax +
mov [esp+15Ch+var_15C] eax +
mov [esp+15Ch+var_140] eax +
call sprintf  +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_401947  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
mov ecx ds:dword_4A4020 +
lea ebx [edx+2] +
cmovnz ebx edx +
add al al +
mov eax ds:dword_4A4024 +
sbb ebx 3 +
mov edx 1 +
mov esi eax +
mov [esp+15Ch+var_144] eax +
mov eax [edi+20h] +
jmp loc_4016B4  +
***
push esi  +
push esi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax dword_47D338 +
test eax eax +
jz loc_401EEA  +
mov dword_47D338 0 +
mov eax ds:dword_4A8CB4 +
shl eax 2 +
mov [esp+3Ch+var_3C] eax +
call sub_462140  +
mov ebx ds:dword_4A8CB8 +
cmp ebx ds:dword_4A8CBC +
mov [esp+3Ch+var_14] eax +
jnb loc_401EFB  +
xor esi esi +
mov edi eax +
jmp loc_401D84  +
mov [edi+esi*4] ebx +
add esi 1 +
add ebx 0D8h +
cmp ds:dword_4A8CBC ebx +
jbe loc_401DC8  +
mov eax [ebx] +
mov [esp+3Ch+var_3C] offset dword_4A8D38 +
mov [esp+3Ch+var_38] eax +
call sub_409A80  +
test eax eax +
jnz loc_401D70  +
mov ebp ds:dword_4A8D38 +
test ebp ebp +
jnz loc_401D76  +
mov eax [ebx] +
mov [esp+3Ch+var_3C] offset unk_4A8D44 +
mov [esp+3Ch+var_38] eax +
call sub_409A80  +
test eax eax +
jz loc_401D70  +
add ebx 0D8h +
cmp ds:dword_4A8CBC ebx +
ja loc_401D84  +
mov eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_30] offset loc_4015A0 +
mov [esp+3Ch+var_34] 4 +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_10] esi +
call qsort  +
test esi esi +
jz loc_401ECB  +
mov [esp+3Ch+var_18] 0 +
lea esi [esi+0] +
mov eax [esp+3Ch+var_14] +
mov edi [esp+3Ch+var_18] +
mov esi [eax+edi*4] +
mov eax [esi+18h] +
test eax eax +
jnz loc_401E1C  +
mov ebx dword_47D340 +
test ebx ebx +
jnz loc_401E52  +
mov edx [esi+0Ch] +
mov edi [esi] +
mov ebx [esi+8] +
mov ecx [esi+10h] +
test edx edx +
jz loc_401EE0  +
mov edx [edx+4] +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_30] ebx +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] offset aSDS0xLxLuExecu +
call printf  +
lea eax [esi+28h] +
mov ebx esi +
mov [esp+3Ch+var_1C] eax +
jmp loc_401E8C  +
mov ecx [ecx+4] +
mov [esp+3Ch+var_28] edx +
mov [esp+3Ch+var_2C] eax +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] offset aSDS0xLxLuExecu +
call printf  +
add ebx 4 +
cmp ebx [esp+3Ch+var_1C] +
jz loc_401EB8  +
mov eax [ebx+20h] +
test eax eax +
jz loc_401EB8  +
mov edx [ebx+48h] +
test edx edx +
jnz loc_401EA4  +
mov ecx dword_47D340 +
test ecx ecx +
jnz loc_401E83  +
mov ecx [esi+0Ch] +
mov ebp [esi+8] +
mov edi [esi+10h] +
test ecx ecx +
jnz loc_401E60  +
mov ecx offset aUnknown +
jmp loc_401E63  +
add [esp+3Ch+var_18] 1 +
mov eax [esp+3Ch+var_10] +
cmp [esp+3Ch+var_18] eax +
jnz loc_401E00  +
mov eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_3C] eax +
call free  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset aUnknown +
jmp loc_401E32  +
mov [esp+3Ch+var_3C] offset unk_47E0C0 +
call puts  +
jmp loc_401D3E  +
mov eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_30] offset loc_4015A0 +
mov [esp+3Ch+var_34] 4 +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] eax +
call qsort  +
jmp loc_401ECB  +
***
jmp sub_401F30  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx ds:dword_4A8CB8 +
cmp ebx ds:dword_4A8CBC +
jb loc_401F55  +
jmp loc_401F98  +
add ebx 0D8h +
cmp ds:dword_4A8CBC ebx +
jbe loc_401F98  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_401F47  +
mov eax [eax+0Ch] +
cmp [ebx+10h] eax +
jle loc_401F47  +
mov eax [ebx] +
mov [esp+2Ch+var_2C] offset dword_4A8D20 +
mov [esp+2Ch+var_28] eax +
call sub_409A80  +
test eax eax +
jz loc_4022D0  +
mov eax [ebx+0Ch] +
add ebx 0D8h +
mov edx [ebx-0C8h] +
cmp ds:dword_4A8CBC ebx +
mov [eax+0Ch] edx +
ja loc_401F55  +
mov ebx ds:dword_4A40A8 +
test ebx ebx +
jz loc_401FDB  +
mov eax [ebx+0Ch] +
test eax eax +
jle loc_401FD5  +
shl eax 2 +
mov [esp+2Ch+var_2C] eax +
call sub_462140  +
mov edi [ebx+0Ch] +
lea edx ds:0[edi*4] +
mov [ebx+14h] eax +
mov dword ptr [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call memset  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_401FA2  +
mov ebx ds:dword_4A8CB8 +
mov ebp 36h +
cmp ebx ds:dword_4A8CBC +
jb loc_401FFE  +
jmp loc_402060  +
add ebx 0D8h +
cmp ds:dword_4A8CBC ebx +
jbe loc_402060  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_401FF0  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_401FF0  +
mov eax [ebx] +
mov [esp+2Ch+var_2C] offset dword_4A8D20 +
mov [esp+2Ch+var_28] eax +
call sub_409A80  +
test eax eax +
jz loc_402300  +
mov eax [ebx+0Ch] +
mov edx [ebx+18h] +
mov ecx [ebx+10h] +
add [eax+8] edx +
mov eax [eax+14h] +
lea eax [eax+ecx*4-4] +
mov esi [eax] +
test esi esi +
jz loc_402330  +
mov edi [esi] +
test edi edi +
jnz loc_4022A0  +
add [esi+18h] edx +
add ebx 0D8h +
cmp ds:dword_4A8CBC ebx +
ja loc_401FFE  +
nop   +
mov esi ds:dword_4A40A8 +
test esi esi +
jnz loc_40217F  +
jmp loc_402295  +
mov ecx [esi+14h] +
mov [esp+2Ch+var_2C] ecx +
call free  +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esp+2Ch+var_24+4] edi +
mov dword ptr [esp+2Ch+var_24] 15h +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] offset aExecutionSumma +
call fwrite  +
mov eax ds:dword_4A4030 +
mov [esp+2Ch+var_28] offset a9ldExecutableL +
mov [esp+2Ch+var_2C] edi +
mov dword ptr [esp+2Ch+var_24] eax +
call fprintf  +
mov eax ds:dword_4A402C +
mov [esp+2Ch+var_28] offset a9ldLinesExecut +
mov [esp+2Ch+var_2C] edi +
mov dword ptr [esp+2Ch+var_24] eax +
call fprintf  +
mov eax ds:dword_4A4030 +
test eax eax +
jz loc_402288  +
fild  ds:dword_4A402C +
fmul  ds:flt_47E1F0 +
mov [esp+2Ch+var_18] eax +
fild  [esp+2Ch+var_18] +
fdivp st(1) st +
fstp  [esp+2Ch+var_24] +
mov [esp+2Ch+var_28] offset a9_2fPercentOfT +
mov [esp+2Ch+var_2C] edi +
call fprintf  +
mov eax [esi+8] +
mov [esp+2Ch+var_28] offset a9luTotalNumber +
mov [esp+2Ch+var_2C] edi +
mov dword ptr [esp+2Ch+var_24] eax +
call fprintf  +
mov eax ds:dword_4A4030 +
test eax eax +
jz loc_402281  +
mov ecx [esi+8] +
xor ebx ebx +
mov dword ptr [esp+2Ch+var_14+4] ebx +
mov [esp+2Ch+var_18] eax +
mov dword ptr [esp+2Ch+var_14] ecx +
fild  [esp+2Ch+var_14] +
fild  [esp+2Ch+var_18] +
fdivp st(1) st +
fstp  [esp+2Ch+var_24] +
mov [esp+2Ch+var_28] offset a9_2fAverageExe +
mov [esp+2Ch+var_2C] edi +
call fprintf  +
mov eax ds:_iob +
add eax 20h +
cmp edi eax +
jz loc_402175  +
mov [esp+2Ch+var_2C] edi +
call fclose  +
mov esi [esi] +
test esi esi +
jz loc_402295  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_402175  +
mov edx dword_47D340 +
test edx edx +
jz loc_402197  +
mov eax [esi+8] +
test eax eax +
jz loc_402175  +
mov dword ptr [esp+2Ch+var_24+4] esi +
mov dword ptr [esp+2Ch+var_24] offset sub_401600 +
mov [esp+2Ch+var_28] 10h +
mov [esp+2Ch+var_2C] esi +
mov ds:dword_4A402C 0 +
mov ds:dword_4A4030 0 +
call sub_408F70  +
test eax eax +
mov edi eax +
jz loc_402175  +
mov eax dword_47D004 +
test eax eax +
jle loc_402073  +
mov dword ptr [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] offset aTopDLinesLineC +
mov [esp+2Ch+var_2C] edi +
call fprintf  +
mov eax [esi+14h] +
mov dword ptr [esp+2Ch+var_24+4] offset sub_401560 +
mov dword ptr [esp+2Ch+var_24] 4 +
mov edx [esi+0Ch] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call qsort  +
mov eax dword_47D004 +
mov ebx [esi+0Ch] +
mov ecx [esi+14h] +
cmp ebx eax +
cmovg ebx eax +
test ebx ebx +
jle loc_402076  +
mov eax [ecx] +
test eax eax +
jz loc_402076  +
mov edx [eax+18h] +
test edx edx +
jz loc_402076  +
xor ebp ebp +
jmp loc_402257  +
mov eax [ecx+ebp*4] +
test eax eax +
jz loc_402076  +
mov edx [eax+18h] +
test edx edx +
jz loc_402076  +
mov eax [eax+10h] +
add ebp 1 +
mov dword ptr [esp+2Ch+var_24+4] edx +
mov [esp+2Ch+var_28] offset a9d10lu +
mov [esp+2Ch+var_2C] edi +
mov dword ptr [esp+2Ch+var_24] eax +
call fprintf  +
cmp ebp ebx +
mov ecx [esi+14h] +
jnz loc_402241  +
jmp loc_402076  +
fldz   +
jmp loc_40214D  +
fld  ds:flt_47E1F0 +
nop   +
jmp loc_4020FA  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] 0D8h +
call sub_462140  +
mov ecx ebp +
mov edi eax +
movs   +
mov dword ptr [eax] 0 +
mov edx [ebx+18h] +
add [eax+18h] edx +
mov edx [ebx+0Ch] +
mov ecx [ebx+10h] +
mov edx [edx+14h] +
mov [edx+ecx*4-4] eax +
jmp loc_401FF0  +
mov eax ds:dword_4A8D20 +
test eax eax +
jnz loc_401F47  +
mov eax [ebx] +
mov [esp+2Ch+var_2C] offset unk_4A8D2C +
mov [esp+2Ch+var_28] eax +
call sub_409A80  +
test eax eax +
jnz loc_401F47  +
jmp loc_401F7E  +
mov eax ds:dword_4A8D20 +
test eax eax +
jnz loc_401FF0  +
mov eax [ebx] +
mov [esp+2Ch+var_2C] offset unk_4A8D2C +
mov [esp+2Ch+var_28] eax +
call sub_409A80  +
test eax eax +
jnz loc_401FF0  +
jmp loc_402026  +
mov [eax] ebx +
jmp loc_401FF0  +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] offset dword_4A8CB4 +
mov ebx [esp+10h+arg_4] +
mov edi [esp+10h+arg_8] +
mov [esp+10h+var_C] eax +
call sub_409A80  +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] offset dword_4A8CB4 +
mov esi eax +
call sub_409A80  +
test esi esi +
jz loc_4023F0  +
test eax eax +
mov ebx eax +
jz loc_4023F0  +
mov edx ds:dword_4A8CB8 +
cmp eax edx +
jnb loc_40239A  +
jmp loc_4023F0  +
sub ebx 0D8h +
cmp ebx edx +
jb loc_4023F0  +
test byte ptr [ebx+14h] 1 +
jz loc_402390  +
mov [esp+10h+var_8] ebx +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] offset dword_4A8CD8 +
call sub_40A3B0  +
test eax eax +
jz loc_4023E0  +
add [ebx+18h] edi +
test byte ptr ds:dword_4A4088 10h +
jnz loc_402411  +
mov [esp+10h+arg_8] edi +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_4027B0  +
mov eax ds:dword_4A8CD8 +
test eax eax +
jz loc_4023F7  +
lea esi [esi+0] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_8] ebx +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] offset unk_4A8CE4 +
call sub_40A3B0  +
test eax eax +
jz loc_4023B8  +
jmp loc_4023F0  +
mov edx [ebx+8] +
mov eax [esi+8] +
mov [esp+10h+var_4] edi +
mov [esp+10h+var_10] offset aCg_tallyArcFro +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_C] eax +
call printf  +
jmp loc_4023C4  +
***
jmp sub_402440  +
***
mov ebx [esp+28h+arg_0] +
push ebx  +
sub esp 10h +
mov edi ds:dword_4A8CB8 +
cmp edi ds:dword_4A8CBC +
mov esi [esp+10h+arg_0] +
jnb loc_4025E9  +
lea esi [esi+0] +
mov ebx [edi+0D0h] +
test ebx ebx +
jnz loc_40254B  +
jmp loc_4025D7  +
mov ebx [ebx+24h] +
test ebx ebx +
jz loc_4025D7  +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] esi +
call sub_4070C0  +
test eax eax +
jnz loc_4025F0  +
mov eax [ebx] +
mov eax [eax] +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
call sub_407060  +
test eax eax +
jnz loc_4025F0  +
mov eax [ebx+4] +
mov eax [eax] +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
call sub_407060  +
test eax eax +
jnz loc_4025F0  +
mov eax [ebx+8] +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
call sub_407010  +
test eax eax +
jnz loc_4025F0  +
test byte ptr ds:dword_4A4088 40h +
jz loc_402540  +
mov eax [ebx+4] +
mov ecx [ebx+8] +
mov edx [eax] +
mov eax [ebx] +
mov eax [eax] +
mov [esp+10h+var_4] ecx +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_10] offset aCg_write_arcsF +
mov [esp+10h+var_C] eax +
call printf  +
mov ebx [ebx+24h] +
test ebx ebx +
jnz loc_40254B  +
add edi 0D8h +
cmp ds:dword_4A8CBC edi +
ja loc_402530  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] eax +
call perror  +
mov [esp+10h+var_10] 1 +
call sub_407CE0  +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov eax [esp+10h+var_C] +
mov edx [esp+10h+var_8] +
mov eax [eax] +
mov edx [edx] +
mov eax [eax+9Ch] +
sub eax [edx+9Ch] +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
mov edx [eax] +
mov eax [esp+10h] +
fld  qword ptr [edx+0B0h] +
fadd  qword ptr [edx+0B8h] +
mov ecx [eax] +
fld  qword ptr [ecx+0B0h] +
fadd  qword ptr [ecx+0B8h] +
fsubp st(1) st +
fldz   +
fucomi st st(1) +
ja loc_402697  +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
ja loc_4026C0  +
mov ebx [edx+8] +
test ebx ebx +
jz loc_4026B0  +
mov esi [ecx+8] +
test esi esi +
jz loc_4026C8  +
cmp byte ptr [ebx] 5Fh +
jz loc_4026A3  +
cmp byte ptr [esi] 5Fh +
jz loc_4026C0  +
mov eax [ecx+18h] +
cmp [edx+18h] eax +
ja loc_4026C0  +
jb loc_40269B  +
mov [esp+10h] esi +
mov [esp+0Ch] ebx +
pop ebx  +
pop esi  +
jmp strcmp  +
***
fstp  st +
fstp  st +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
cmp byte ptr [esi] 5Fh +
mov eax 1 +
jz loc_40267E  +
pop ebx  +
pop esi  +
retn   +
***
mov esi [edx+0C0h] +
test esi esi +
jnz loc_4026C0  +
cmp dword ptr [ecx+8] 0 +
jz loc_4026C8  +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
retn   +
***
mov edx [ecx+0C0h] +
mov eax 1 +
test edx edx +
jnz loc_4026A0  +
cmp ebx 1 +
sbb eax eax +
or eax 1 +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
test ebx ebx +
jz loc_402794  +
test esi esi +
jz loc_402794  +
test byte ptr ds:dword_4A4088+1 2 +
jnz loc_402778  +
mov ebx [ebx+0D0h] +
test ebx ebx +
jnz loc_40273A  +
jmp loc_402764  +
mov eax [ebx+4] +
mov ecx [eax] +
cmp [esi] ecx +
jb loc_402733  +
mov eax [eax+4] +
cmp [esi+4] eax +
jbe loc_402770  +
mov ebx [ebx+24h] +
test ebx ebx +
jz loc_402764  +
test byte ptr ds:dword_4A4088+1 2 +
jz loc_402722  +
mov eax [ebx+4] +
mov edx [eax+8] +
mov eax [ebx] +
mov eax [eax+8] +
mov [esp+14h+var_C] edx +
mov [esp+14h+var_14] offset aArc_lookupPare +
mov [esp+14h+var_10] eax +
call printf  +
jmp loc_402722  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
mov edx [esi+8] +
mov eax [ebx+8] +
mov [esp+14h+var_14] offset aArc_lookupPa_0 +
mov [esp+14h+var_C] edx +
mov [esp+14h+var_10] eax +
call printf  +
jmp loc_402716  +
mov [esp+14h+var_14] offset aArc_lookupPa_1 +
call puts  +
xor eax eax +
jmp loc_402766  +
***
push esi  +
push ebx  +
sub esp 2Ch +
test byte ptr ds:dword_4A4088 10h +
mov ebp [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_8] +
jnz loc_402810  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebp +
call sub_4026F0  +
test eax eax +
mov edi eax +
jz loc_402830  +
test byte ptr ds:dword_4A4088 10h +
jz loc_4027FE  +
mov eax [eax+8] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_2C] offset aTallyHitLuLu +
mov [esp+2Ch+var_28] eax +
call printf  +
add [edi+8] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+8] +
mov eax [ebp+8] +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] offset aArc_addLuArcsF +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_24] eax +
call printf  +
jmp loc_4027CC  +
mov [esp+2Ch+var_2C] 30h +
call sub_462140  +
mov [esp+2Ch+var_10] 30h +
test al 1 +
mov edx eax +
mov edi eax +
jnz loc_40294C  +
test edi 2 +
jnz loc_402939  +
mov ecx [esp+2Ch+var_10] +
xor eax eax +
shr ecx 2 +
stos   +
test byte ptr [esp+2Ch+var_10] 2 +
jnz loc_4028C8  +
test byte ptr [esp+2Ch+var_10] 1 +
jnz loc_4028C3  +
cmp ebp esi +
mov [edx] ebp +
mov [edx+4] esi +
mov [edx+8] ebx +
jz loc_4028A0  +
mov ecx ds:dword_4A8C78 +
cmp ecx ds:dword_4A4034 +
mov eax ds:dword_4A8C7C +
jz loc_4028D3  +
lea ebx [ecx+1] +
mov ds:dword_4A8C78 ebx +
mov [eax+ecx*4] edx +
mov eax [ebp+0D0h] +
mov [edx+24h] eax +
mov eax [esi+0CCh] +
mov [ebp+0D0h] edx +
mov [edx+20h] eax +
mov [esi+0CCh] edx +
jmp loc_402801  +
mov byte ptr [edi] 0 +
jmp loc_402875  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
jmp loc_40286E  +
test ecx ecx +
jz loc_40292D  +
lea eax [ecx+ecx] +
shl ecx 3 +
mov [esp+2Ch+var_2C] ecx +
mov [esp+2Ch+var_10] edx +
mov ds:dword_4A4034 eax +
call sub_462140  +
mov edi ds:dword_4A8C7C +
mov [esp+2Ch+var_28] edi +
mov ebx eax +
mov eax ds:dword_4A8C78 +
mov [esp+2Ch+var_2C] ebx +
shl eax 2 +
mov [esp+2Ch+var_24] eax +
call memcpy  +
mov [esp+2Ch+var_2C] edi +
call free  +
mov ecx ds:dword_4A8C78 +
mov eax ebx +
mov ds:dword_4A8C7C ebx +
mov edx [esp+2Ch+var_10] +
jmp loc_402894  +
mov ecx 8 +
mov eax 2 +
jmp loc_4028DD  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub [esp+2Ch+var_10] 2 +
jmp loc_40285C  +
mov byte ptr [eax] 0 +
lea edi [eax+1] +
mov [esp+2Ch+var_10] 2Fh +
jmp loc_402850  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx ds:dword_4A8CB8 +
cmp ebx ds:dword_4A8CBC +
jb loc_402994  +
jmp loc_403490  +
mov edx ds:dword_4A8CBC +
add ebx 0D8h +
cmp edx ebx +
jbe loc_402A3B  +
fldz   +
fstp  qword ptr [ebx+90h] +
mov dword ptr [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] ebx +
call sub_4026F0  +
test eax eax +
jz loc_4029B5  +
cmp [eax+4] ebx +
jz loc_4030BF  +
mov dword ptr [ebx+88h] 0 +
fldz   +
mov ebp ds:dword_4A407C +
fst  qword ptr [ebx+0A8h] +
mov dword ptr [ebx+0A0h] 0 +
fst  qword ptr [ebx+0B0h] +
test ebp ebp +
mov dword ptr [ebx+9Ch] 0 +
fstp  qword ptr [ebx+0B8h] +
mov dword ptr [ebx+0C0h] 0 +
mov [ebx+0C4h] ebx +
mov dword ptr [ebx+0C8h] 0 +
jz loc_402980  +
mov edx [ebx+0D8h] +
mov eax [ebx] +
mov [esp+4Ch+var_4C] ebx +
add ebx 0D8h +
mov dword ptr [esp+4Ch+var_48+4] edx +
mov dword ptr [esp+4Ch+var_48] eax +
call sub_4060F0  +
mov edx ds:dword_4A8CBC +
cmp edx ebx +
ja loc_402994  +
mov ebx ds:dword_4A8CB8 +
cmp ebx edx +
jb loc_402A5A  +
jmp loc_4034A4  +
add ebx 0D8h +
cmp edx ebx +
jbe loc_402A7C  +
mov edi [ebx+9Ch] +
test edi edi +
jnz loc_402A50  +
mov [esp+4Ch+var_4C] ebx +
add ebx 0D8h +
call sub_4034C0  +
mov edx ds:dword_4A8CBC +
cmp edx ebx +
ja loc_402A5A  +
mov eax ds:dword_4A8CB8 +
cmp edx eax +
mov ds:dword_4A8C74 0 +
jbe loc_4034AB  +
xor ebx ebx +
xor ecx ecx +
jmp loc_402AA9  +
add eax 0D8h +
cmp eax edx +
jnb loc_402AC9  +
cmp eax [eax+0C4h] +
jnz loc_402AA0  +
mov esi [eax+0C8h] +
test esi esi +
jz loc_402AA0  +
add eax 0D8h +
add ecx 1 +
cmp eax edx +
mov ebx ecx +
jb loc_402AA9  +
lea eax [ecx+1] +
imul eax eax +
mov ds:dword_4A8C74 ebx +
mov [esp+4Ch+var_4C] eax +
xor esi esi +
call sub_462140  +
mov edi ds:dword_4A8CB8 +
cmp edi ds:dword_4A8CBC +
mov ebx eax +
mov ds:dword_4A8C70 eax +
jb loc_402B12  +
jmp loc_402BDD  +
add edi 0D8h +
cmp edi ds:dword_4A8CBC +
jnb loc_402BDD  +
cmp edi [edi+0C4h] +
jnz loc_402B00  +
mov ebp [edi+0C8h] +
test ebp ebp +
jz loc_402B00  +
lea ebp [ebx+0D8h] +
add esi 1 +
mov [esp+4Ch+var_4C] ebp +
call sub_4094F0  +
test byte ptr ds:dword_4A4088 4 +
mov dword ptr [ebx+178h] 1 +
mov dword ptr [ebx+174h] 0 +
mov [ebx+198h] esi +
mov [ebx+19Ch] ebp +
mov [ebx+1A0h] edi +
jnz loc_4033A7  +
mov eax edi +
lea esi [esi+0] +
mov [eax+0C0h] esi +
mov [eax+0C4h] ebp +
mov eax [eax+0C8h] +
test eax eax +
jnz loc_402B70  +
mov ecx edi +
mov eax [ecx+0CCh] +
test eax eax +
jnz loc_402BA1  +
jmp loc_402BBF  +
add [ebx+0F0h] edx +
mov eax [eax+20h] +
test eax eax +
jz loc_402BBF  +
mov edx [eax] +
cmp ecx edx +
jz loc_402B9A  +
cmp esi [edx+0C0h] +
mov edx [eax+8] +
jnz loc_402B94  +
mov eax [eax+20h] +
add [ebx+160h] edx +
test eax eax +
jnz loc_402BA1  +
mov ecx [ecx+0C8h] +
test ecx ecx +
jnz loc_402B88  +
add edi 0D8h +
mov ebx ebp +
cmp edi ds:dword_4A8CBC +
jb loc_402B12  +
mov eax ds:dword_4A8CB4 +
shl eax 2 +
mov [esp+4Ch+var_4C] eax +
call sub_462140  +
mov ebx ds:dword_4A8CB4 +
test ebx ebx +
mov [esp+4Ch+var_20] eax +
jz loc_402C1F  +
mov ecx [esp+4Ch+var_20] +
mov edx ds:dword_4A8CB8 +
mov eax ecx +
lea ecx [ecx+ebx*4] +
lea esi [esi+0] +
mov [eax] edx +
add eax 4 +
add edx 0D8h +
cmp eax ecx +
jnz loc_402C10  +
mov eax [esp+4Ch+var_20] +
mov dword ptr [esp+4Ch+var_40] offset loc_402610 +
mov dword ptr [esp+4Ch+var_48+4] 4 +
mov dword ptr [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] eax +
call qsort  +
mov esi ds:dword_4A8CB4 +
test byte ptr ds:dword_4A4088 2 +
jnz loc_4033FF  +
mov eax esi +
sub eax 1 +
mov [esp+4Ch+var_1C] eax +
js loc_402E18  +
xor esi esi +
mov eax [esp+4Ch+var_20] +
mov ebx [esp+4Ch+var_1C] +
mov eax [eax+ebx*4] +
mov edi [eax+0C4h] +
mov [esp+4Ch+var_24] eax +
cmp edi esi +
jz loc_402D56  +
cmp eax edi +
jz loc_4032D6  +
mov eax [edi+0C8h] +
fldz   +
mov dword ptr [edi+0A0h] 0 +
fst  qword ptr [edi+0A8h] +
test eax eax +
mov [esp+4Ch+var_18] eax +
jz loc_4033A0  +
mov dword ptr [esp+4Ch+var_2C] eax +
xor edx edx +
mov eax dword ptr [esp+4Ch+var_2C] +
mov esi [eax+0CCh] +
test esi esi +
jz loc_402D13  +
mov ebp [esi] +
cmp edi [ebp+0C4h] +
jz loc_402D0C  +
mov eax [edi+18h] +
or edx [ebp+0A0h] +
test eax eax +
mov [edi+0A0h] edx +
jz loc_402D0C  +
mov ecx [esi+8] +
xor ebx ebx +
mov dword ptr [esp+4Ch+var_14+4] ebx +
xor ebx ebx +
mov dword ptr [esp+4Ch+var_14] ecx +
fild  [esp+4Ch+var_14] +
mov dword ptr [esp+4Ch+var_14] eax +
mov dword ptr [esp+4Ch+var_14+4] ebx +
fild  [esp+4Ch+var_14] +
fdivp st(1) st +
fmul  qword ptr [ebp+0A8h] +
faddp st(1) st +
fst  qword ptr [edi+0A8h] +
mov esi [esi+20h] +
test esi esi +
jnz loc_402CC0  +
mov eax dword ptr [esp+4Ch+var_2C] +
mov eax [eax+0C8h] +
test eax eax +
mov dword ptr [esp+4Ch+var_2C] eax +
jnz loc_402CB2  +
mov eax edi +
mov ecx [esp+4Ch+var_18] +
jmp loc_402D44  +
mov eax ecx +
mov edx [edi+0A0h] +
mov ecx [ecx+0C8h] +
fld  qword ptr [edi+0A8h] +
test ecx ecx +
mov [eax+0A0h] edx +
fstp  qword ptr [eax+0A8h] +
jnz loc_402D30  +
mov esi edi +
test byte ptr ds:dword_4A4088+1 4 +
jnz loc_4031B5  +
mov eax [esp+4Ch+var_24] +
mov ebx [eax+0A0h] +
test ebx ebx +
jnz loc_4030F9  +
mov eax [eax] +
mov [esp+4Ch+var_4C] offset dword_4A8CC0 +
mov dword ptr [esp+4Ch+var_48] eax +
call sub_409A80  +
test eax eax +
jz loc_40336D  +
mov eax [esp+4Ch+var_24] +
mov dword ptr [eax+0A0h] 1 +
mov eax [esp+4Ch+var_24] +
fld  qword ptr [eax+0A8h] +
fldz   +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jp loc_4030D0  +
jnz loc_4030D0  +
mov eax [eax] +
mov [esp+4Ch+var_4C] offset dword_4A8D08 +
mov dword ptr [esp+4Ch+var_48] eax +
call sub_409A80  +
test eax eax +
jz loc_403350  +
mov eax [esp+4Ch+var_24] +
fld1   +
fst  qword ptr [eax+0A8h] +
mov eax [esp+4Ch+var_24] +
test byte ptr ds:dword_4A4088+1 4 +
fmul  qword ptr [eax+78h] +
fst  qword ptr [eax+0B0h] +
fadd  ds:dbl_4A4048 +
fstp  ds:dbl_4A4048 +
jnz loc_40314F  +
sub [esp+4Ch+var_1C] 1 +
jns loc_402C63  +
mov esi ds:dword_4A8CB4 +
mov ebx ds:dword_4A8C74 +
fldz   +
mov eax ds:dword_4A8C70 +
imul ecx ebx +
lea edx [eax+0D8h] +
add ecx eax +
cmp edx ecx +
ja loc_402E95  +
mov eax [edx+0C8h] +
fld  qword ptr [edx+78h] +
test eax eax +
jz loc_402E7E  +
fld  st(1) +
jmp loc_402E4A  +
fxch  st(1) +
fld  qword ptr [eax+0A8h] +
fucomip st st(1) +
jp loc_402E60  +
jz loc_402E70  +
fxch  st(1) +
jmp loc_402E62  +
fxch  st(1) +
fadd  qword ptr [eax+78h] +
fst  qword ptr [edx+78h] +
jmp loc_402E72  +
fxch  st(1) +
mov eax [eax+0C8h] +
test eax eax +
jnz loc_402E48  +
fstp  st(1) +
fmul  qword ptr [edx+0A8h] +
add edx 0D8h +
fstp  qword ptr [edx-28h] +
cmp edx ecx +
jbe loc_402E37  +
fstp  st +
jmp loc_402E97  +
fstp  st +
xor ebp ebp +
test esi esi +
jz loc_403002  +
mov eax [esp+4Ch+var_20] +
mov edi [eax+ebp*4] +
fld  qword ptr [edi+0A8h] +
fldz   +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jnp loc_403144  +
mov ebx [edi+0D0h] +
test ebx ebx +
jz loc_402FF1  +
lea esi [esi+0] +
mov eax [ebx+8] +
mov esi [ebx+4] +
test eax eax +
jz loc_402FE0  +
cmp edi esi +
jz loc_402FE0  +
fld  qword ptr [esi+0A8h] +
fldz   +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jp loc_402EFC  +
jz loc_402FE0  +
mov eax [esi+0C4h] +
cmp esi eax +
jz loc_403225  +
mov ecx [esi+0C0h] +
cmp [edi+0C0h] ecx +
jz loc_402FE0  +
mov ecx [esi+9Ch] +
cmp [edi+9Ch] ecx +
jle loc_4031F2  +
mov esi eax +
mov eax [esi+18h] +
test eax eax +
jz loc_402FE0  +
mov edx [ebx+8] +
xor ecx ecx +
mov dword ptr [esp+4Ch+var_14+4] ecx +
mov dword ptr [esp+4Ch+var_14] edx +
xor edx edx +
fild  [esp+4Ch+var_14] +
mov dword ptr [esp+4Ch+var_14] eax +
mov dword ptr [esp+4Ch+var_14+4] edx +
mov eax [edi+0C4h] +
fild  [esp+4Ch+var_14] +
fdivp st(1) st +
cmp edi eax +
fld  qword ptr [esi+78h] +
fmul st st(1) +
fxch  st(1) +
fmul  qword ptr [esi+90h] +
fld  st(1) +
fadd st st(1) +
fld  qword ptr [edi+90h] +
fadd st st(1) +
fstp  qword ptr [edi+90h] +
fld  qword ptr [edi+0A8h] +
fld  st(1) +
fmul st st(1) +
fld  qword ptr [edi+0B8h] +
fadd st st(1) +
fstp  qword ptr [edi+0B8h] +
fxch  st(4) +
fmul st st(1) +
fstp  qword ptr [ebx+10h] +
fmulp st(2) st +
fxch  st(1) +
fstp  qword ptr [ebx+18h] +
jz loc_402FC9  +
fld  qword ptr [eax+90h] +
fadd st st(1) +
fstp  qword ptr [eax+90h] +
fxch  st(1) +
fadd  qword ptr [eax+0B8h] +
fstp  qword ptr [eax+0B8h] +
jmp loc_402FCB  +
fstp  st(1) +
test byte ptr ds:dword_4A4088+1 4 +
jnz loc_403264  +
fstp  st +
lea esi [esi+0] +
mov ebx [ebx+24h] +
test ebx ebx +
jnz loc_402ED0  +
mov esi ds:dword_4A8CB4 +
add ebp 1 +
cmp esi ebp +
ja loc_402EA1  +
mov ebx ds:dword_4A8C74 +
mov eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_4C] eax +
call free  +
lea eax [ebx+esi] +
shl eax 2 +
mov [esp+4Ch+var_4C] eax +
call sub_462140  +
mov esi ds:dword_4A8CB4 +
test esi esi +
jz loc_403040  +
mov ecx ds:dword_4A8CB8 +
mov edx eax +
lea ebx [eax+esi*4] +
mov [edx] ecx +
add edx 4 +
add ecx 0D8h +
cmp edx ebx +
jnz loc_403031  +
mov ebx ds:dword_4A8C74 +
test ebx ebx +
jz loc_403071  +
mov ecx ds:dword_4A8C70 +
lea edi [eax+esi*4] +
mov edx 1 +
add ecx 0D8h +
nop   +
mov [edi+edx*4-4] ecx +
add edx 1 +
add ecx 0D8h +
cmp edx ebx +
jbe loc_403060  +
add ebx esi +
mov dword ptr [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] eax +
mov dword ptr [esp+4Ch+var_40] offset loc_402630 +
mov dword ptr [esp+4Ch+var_48+4] 4 +
mov dword ptr [esp+4Ch+var_2C] eax +
call qsort  +
mov ebx ds:dword_4A8C74 +
xor edx edx +
add ebx ds:dword_4A8CB4 +
mov eax dword ptr [esp+4Ch+var_2C] +
jz loc_4030B7  +
mov ecx [eax+edx*4] +
add edx 1 +
cmp edx ebx +
mov [ecx+98h] edx +
jnz loc_4030A7  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+8] +
sub [ebx+18h] eax +
mov [ebx+88h] eax +
jmp loc_4029BF  +
mov ebx [esp+4Ch+var_24] +
mov eax [ebx] +
mov [esp+4Ch+var_4C] offset dword_4A8D08 +
mov dword ptr [esp+4Ch+var_48] eax +
call sub_409A80  +
test eax eax +
jz loc_4033D0  +
fld  qword ptr [ebx+0A8h] +
jmp loc_402DE1  +
mov eax [esp+4Ch+var_24] +
mov eax [eax] +
mov [esp+4Ch+var_4C] offset dword_4A8CC0 +
mov dword ptr [esp+4Ch+var_48] eax +
call sub_409A80  +
test eax eax +
jnz loc_402D9D  +
mov ebx [esp+4Ch+var_24] +
mov eax [ebx] +
mov [esp+4Ch+var_4C] offset unk_4A8CCC +
mov dword ptr [esp+4Ch+var_48] eax +
call sub_409A80  +
test eax eax +
jz loc_402D9D  +
mov dword ptr [ebx+0A0h] 0 +
jmp loc_402D9D  +
jnz loc_402EBC  +
jmp loc_402FF1  +
mov [esp+4Ch+var_4C] offset aProp_flags +
call printf  +
mov ebx [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] ebx +
call sub_40A5F0  +
mov eax [ebx+0A0h] +
fld  qword ptr [ebx+0A8h] +
fstp  [esp+4Ch+var_48+4] +
mov dword ptr [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] offset aEndsUpWithPrin +
call printf  +
fld  qword ptr [ebx+0B0h] +
fld  qword ptr [ebx+78h] +
fld  ds:dbl_4A4048 +
fstp  [esp+4Ch+var_38] +
fxch  st(1) +
fstp  [esp+4Ch+var_40] +
fstp  [esp+4Ch+var_48] +
mov [esp+4Ch+var_4C] offset aProp_flagsTime +
call printf  +
jmp loc_402E07  +
mov [esp+4Ch+var_4C] offset aProp_flags +
call printf  +
mov ebx [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] ebx +
call sub_40A5F0  +
mov eax [ebx+0A0h] +
fld  qword ptr [ebx+0A8h] +
fstp  [esp+4Ch+var_48+4] +
mov dword ptr [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] offset aInheritsPrintF +
call printf  +
jmp loc_402D63  +
mov eax ds:_iob +
mov dword ptr [esp+4Ch+var_48+4] 1Dh +
mov dword ptr [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPropagateTopor +
add eax 40h +
mov dword ptr [esp+4Ch+var_40] eax +
call fwrite  +
mov esi [esi+0C4h] +
jmp loc_402F30  +
mov eax [esi+9Ch] +
cmp [edi+9Ch] eax +
jg loc_402F30  +
mov eax ds:_iob +
mov dword ptr [esp+4Ch+var_48+4] 1Dh +
mov dword ptr [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] offset aPropagateTopor +
add eax 40h +
mov dword ptr [esp+4Ch+var_40] eax +
call fwrite  +
jmp loc_402FE0  +
mov [esp+4Ch+var_4C] offset aProp_timeChild +
fstp  [esp+4Ch+var_2C] +
call printf  +
mov [esp+4Ch+var_4C] esi +
call sub_40A5F0  +
mov edx [esi+18h] +
mov eax [ebx+8] +
fld  qword ptr [esi+90h] +
fld  qword ptr [esi+78h] +
fxch  st(1) +
fstp  [esp+4Ch+var_40] +
fstp  [esp+4Ch+var_48] +
mov dword ptr [esp+4Ch+var_38+4] edx +
mov dword ptr [esp+4Ch+var_38] eax +
mov [esp+4Ch+var_4C] offset aWithFFLuLu +
call printf  +
mov [esp+4Ch+var_4C] offset aProp_timeParen +
call printf  +
mov [esp+4Ch+var_4C] edi +
call sub_40A5F0  +
mov [esp+4Ch+var_4C] offset aProp_timeShare +
fld  [esp+4Ch+var_2C] +
fstp  [esp+4Ch+var_48] +
call printf  +
jmp loc_402FE0  +
mov esi [eax+0CCh] +
fldz   +
mov dword ptr [eax+0A0h] 0 +
fstp  qword ptr [eax+0A8h] +
test esi esi +
jz loc_403347  +
mov edi eax +
mov ebp [esi] +
cmp edi ebp +
jz loc_403340  +
mov eax [ebp+0A0h] +
or [edi+0A0h] eax +
mov eax [edi+18h] +
test eax eax +
jz loc_403340  +
mov ecx [esi+8] +
xor ebx ebx +
xor edx edx +
mov dword ptr [esp+4Ch+var_14+4] ebx +
mov dword ptr [esp+4Ch+var_14] ecx +
fild  [esp+4Ch+var_14] +
mov dword ptr [esp+4Ch+var_14] eax +
mov dword ptr [esp+4Ch+var_14+4] edx +
fild  [esp+4Ch+var_14] +
fdivp st(1) st +
fmul  qword ptr [ebp+0A8h] +
fadd  qword ptr [edi+0A8h] +
fstp  qword ptr [edi+0A8h] +
mov esi [esi+20h] +
test esi esi +
jnz loc_4032F4  +
mov esi [esp+4Ch+var_24] +
jmp loc_402D56  +
mov edx ds:dword_4A8D08 +
test edx edx +
jz loc_40346D  +
mov eax [esp+4Ch+var_24] +
fld  qword ptr [eax+0A8h] +
jmp loc_402DE1  +
mov ecx ds:dword_4A8CC0 +
test ecx ecx +
jnz loc_402D9D  +
mov eax [esp+4Ch+var_24] +
mov eax [eax] +
mov [esp+4Ch+var_4C] offset unk_4A8CCC +
mov dword ptr [esp+4Ch+var_48] eax +
call sub_409A80  +
test eax eax +
jnz loc_402D9D  +
jmp loc_402D8F  +
xor edx edx +
jmp loc_402D25  +
mov [esp+4Ch+var_4C] offset aCycle_link +
call printf  +
mov [esp+4Ch+var_4C] edi +
call sub_40A5F0  +
mov dword ptr [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] offset aIsTheHeadOfCyc +
call printf  +
jmp loc_402B68  +
mov eax [esp+4Ch+var_24] +
mov eax [eax] +
mov [esp+4Ch+var_4C] offset unk_4A8D14 +
mov dword ptr [esp+4Ch+var_48] eax +
call sub_409A80  +
test eax eax +
jz loc_40335E  +
mov eax [esp+4Ch+var_24] +
fldz   +
fst  qword ptr [eax+0A8h] +
jmp loc_402DE1  +
mov [esp+4Ch+var_4C] offset aCg_assembleTop +
call puts  +
mov esi ds:dword_4A8CB4 +
test esi esi +
jz loc_402E18  +
mov edi [esp+4Ch+var_20] +
xor ebx ebx +
mov [esp+4Ch+var_4C] offset aCg_assemble +
call printf  +
mov eax [edi+ebx*4] +
mov eax [eax+9Ch] +
mov [esp+4Ch+var_4C] offset aD_2 +
mov dword ptr [esp+4Ch+var_48] eax +
call printf  +
mov eax [edi+ebx*4] +
add ebx 1 +
mov [esp+4Ch+var_4C] eax +
call sub_40A5F0  +
mov [esp+4Ch+var_4C] 0Ah +
call putchar  +
mov esi ds:dword_4A8CB4 +
cmp esi ebx +
ja loc_40341F  +
jmp loc_402C52  +
mov ebx [esp+4Ch+var_24] +
mov eax [ebx] +
mov [esp+4Ch+var_4C] offset unk_4A8D14 +
mov dword ptr [esp+4Ch+var_48] eax +
call sub_409A80  +
test eax eax +
jnz loc_4030EE  +
jmp loc_402DD5  +
mov ds:dword_4A8C74 0 +
mov eax 0D8h +
jmp loc_402AD8  +
mov eax ebx +
jmp loc_402A81  +
mov eax 0D8h +
jmp loc_402AD8  +
***
push esi  +
xor ebx ebx +
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [edx+8] +
cmp [ecx+8] eax +
mov eax 0FFFFFFFFh +
setb bl  +
cmovbe eax ebx +
pop ebx  +
retn   +
***
xor ebx ebx +
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [edx+1Ch] +
cmp [ecx+1Ch] eax +
mov eax 0FFFFFFFFh +
setl bl  +
cmovle eax ebx +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 5Ch +
test ecx ecx +
mov [esp+5Ch+var_40] eax +
mov [esp+5Ch+var_48] edx +
mov [esp+5Ch+var_44] ecx +
jnz loc_403BF8  +
test edx edx +
jz loc_403BF0  +
mov eax [esp+5Ch+var_40] +
xor edx edx +
mov edi [esp+5Ch+var_48] +
mov ecx eax +
lea ebx [eax+edi*4] +
xor eax eax +
mov esi [ecx] +
xor edi edi +
mov esi [esi+8] +
add eax esi +
adc edx edi +
add ecx 4 +
cmp ecx ebx +
jnz loc_403A44  +
mov [esp+5Ch+var_3C] eax +
mov [esp+5Ch+var_38] edx +
mov ebp [esp+5Ch+var_40] +
xor esi esi +
xor edi edi +
xor ebx ebx +
fld  ds:dbl_47EAB0 +
mov dword ptr [esp+5Ch+var_54] esi +
mov dword ptr [esp+5Ch+var_54+4] edi +
mov ecx [ebp+0] +
xor edx edx +
mov edi [ecx+28h] +
mov eax [ecx+8] +
add dword ptr [esp+5Ch+var_54] eax +
adc dword ptr [esp+5Ch+var_54+4] edx +
test edi edi +
jnz loc_403B27  +
mov esi [esp+5Ch+var_44] +
mov eax [ecx+4] +
mov edx [ecx] +
test esi esi +
jnz loc_403AE0  +
mov edi dword ptr [esp+5Ch+var_54+4] +
fild  [esp+5Ch+var_54] +
test edi edi +
js loc_403C21  +
mov edi [esp+5Ch+var_38] +
fstp  [esp+5Ch+var_14] +
mov esi [esp+5Ch+var_3C] +
fld  [esp+5Ch+var_14] +
mov dword ptr [esp+5Ch+var_1C+4] edi +
test edi edi +
mov dword ptr [esp+5Ch+var_1C] esi +
fild  [esp+5Ch+var_1C] +
js loc_403C16  +
fstp  [esp+5Ch+var_14] +
fld  [esp+5Ch+var_14] +
fdivp st(1) st +
fucomip st st(1) +
ja loc_403B11  +
test byte ptr [eax+14h] 10h +
jnz loc_403B11  +
test byte ptr [edx+14h] 10h +
jnz loc_403B11  +
mov edi [edx+70h] +
test edi edi +
mov [esp+5Ch+var_34] edi +
jz loc_403C39  +
mov esi [edx+74h] +
test esi esi +
jz loc_403C48  +
mov edi [eax+70h] +
test edi edi +
jz loc_403E8D  +
mov eax [esp+5Ch+arg_4] +
mov edi [esp+5Ch+arg_4] +
mov eax [eax] +
lea edx [eax+1] +
mov [edi] edx +
mov edi [esp+5Ch+arg_0] +
mov [edi+eax*4] ecx +
add ebx 1 +
add ebp 4 +
cmp [esp+5Ch+var_48] ebx +
ja loc_403A76  +
fstp  st +
mov ebp [esp+5Ch+var_48] +
test ebp ebp +
jz loc_403B9D  +
mov edi [esp+5Ch+var_40] +
xor ebx ebx +
mov eax [edi+ebx*4] +
mov esi [eax] +
test byte ptr [esi+14h] 10h +
jnz loc_403B96  +
mov eax [eax+4] +
test byte ptr [eax+14h] 10h +
jnz loc_403B96  +
mov eax [esi+70h] +
test eax eax +
mov eax [esi+74h] +
jnz loc_403B75  +
jmp loc_403C2C  +
mov esi eax +
mov eax [eax+74h] +
test eax eax +
jnz loc_403B70  +
lea esi [esi+0] +
mov eax [esi+8] +
or byte ptr [esi+14h] 10h +
mov [esp+5Ch+var_5C] eax +
call puts  +
mov esi [esi+70h] +
test esi esi +
jnz loc_403B80  +
add ebx 1 +
cmp ebx ebp +
jnz loc_403B47  +
mov eax [esp+5Ch+var_44] +
test eax eax +
jz loc_403BF0  +
mov edi [esp+5Ch+var_48] +
test edi edi +
jz loc_403BF0  +
xor ebx ebx +
mov esi [esp+5Ch+var_40] +
jmp loc_403BBC  +
add ebx 1 +
cmp ebx edi +
jz loc_403BF0  +
mov eax [esi+ebx*4] +
mov edx [eax] +
movzx ecx byte ptr [edx+14h] +
test cl 10h +
jnz loc_403BB5  +
mov eax [eax+4] +
test byte ptr [eax+14h] 10h +
jnz loc_403BB5  +
mov eax [edx+8] +
or ecx 10h +
add ebx 1 +
mov [edx+14h] cl +
mov [esp+5Ch+var_5C] eax +
call puts  +
cmp ebx edi +
jnz loc_403BBC  +
nop   +
lea esi [esi+0] +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esp+5Ch+var_48] +
mov [esp+5Ch+var_3C] 0 +
mov [esp+5Ch+var_38] 0 +
test ebp ebp +
jnz loc_403A5E  +
jmp loc_403BF0  +
fadd  ds:flt_47EAA8 +
jmp loc_403AD2  +
fadd  ds:flt_47EAA8 +
jmp loc_403AAE  +
test eax eax +
jnz loc_403B75  +
jmp loc_403B96  +
mov edi [edx+74h] +
test edi edi +
mov [esp+5Ch+var_2C] edi +
jz loc_403D6A  +
mov esi [eax+70h] +
test esi esi +
jnz loc_403B11  +
mov edi [eax+74h] +
test edi edi +
jnz loc_403B11  +
mov esi [esp+5Ch+var_34] +
test esi esi +
jz loc_403EC1  +
mov [esp+5Ch+var_30] 0 +
mov edi [esp+5Ch+var_34] +
jmp loc_403C7A  +
mov edi esi +
mov esi [edi+70h] +
add [esp+5Ch+var_30] 1 +
test esi esi +
jnz loc_403C78  +
mov [esp+5Ch+var_34] edi +
mov edi [edx+74h] +
test edi edi +
mov esi edi +
jz loc_403EE6  +
xor edi edi +
jmp loc_403C9D  +
mov esi edx +
mov edx [esi+74h] +
add edi 1 +
test edx edx +
jnz loc_403C9B  +
mov edx edi +
mov edi esi +
cmp [esp+5Ch+var_30] edx +
mov edx edi +
cmovle edx [esp+5Ch+var_34] +
mov [esp+5Ch+var_34] edx +
mov edx [edx+70h] +
test edx edx +
mov [esp+5Ch+var_2C] edx +
jz loc_403ED2  +
mov edi [esp+5Ch+var_2C] +
mov [esp+5Ch+var_30] ebp +
mov ebp dword ptr [esp+5Ch+var_54+4] +
mov esi edi +
mov edi dword ptr [esp+5Ch+var_54] +
jmp loc_403CE2  +
mov esi edx +
mov edx [esi+70h] +
test edx edx +
jnz loc_403CE0  +
mov dword ptr [esp+5Ch+var_54+4] ebp +
mov ebp [esp+5Ch+var_30] +
mov [esp+5Ch+var_28] esi +
mov dword ptr [esp+5Ch+var_54] edi +
mov edx [eax+70h] +
test edx edx +
mov [esp+5Ch+var_24] edx +
mov [esp+5Ch+var_30] edx +
jz loc_403E27  +
mov [esp+5Ch+var_20] ebp +
mov edi dword ptr [esp+5Ch+var_54] +
mov ebp dword ptr [esp+5Ch+var_54+4] +
mov esi [esp+5Ch+var_30] +
jmp loc_403D20  +
mov esi edx +
mov edx [esi+70h] +
test edx edx +
jnz loc_403D1E  +
mov dword ptr [esp+5Ch+var_54+4] ebp +
mov ebp [esp+5Ch+var_20] +
mov [esp+5Ch+var_30] esi +
mov dword ptr [esp+5Ch+var_54] edi +
mov edx [esp+5Ch+var_34] +
cmp [esp+5Ch+var_30] edx +
jnz loc_403DFA  +
cmp [esp+5Ch+var_28] eax +
jnz loc_403DFA  +
mov eax [esp+5Ch+arg_4] +
mov edi [esp+5Ch+arg_4] +
mov eax [eax] +
lea edx [eax+1] +
mov [edi] edx +
mov edx [esp+5Ch+arg_0] +
mov [edx+eax*4] ecx +
jmp loc_403B27  +
mov edi [eax+70h] +
test edi edi +
jz loc_403E7C  +
mov [esp+5Ch+var_34] 0 +
jmp loc_403D82  +
mov edi esi +
mov esi [edi+70h] +
add [esp+5Ch+var_34] 1 +
test esi esi +
jnz loc_403D80  +
mov [esp+5Ch+var_30] edi +
mov edi [eax+74h] +
test edi edi +
mov esi edi +
jz loc_403EDD  +
xor edi edi +
jmp loc_403DA5  +
mov esi eax +
mov eax [esi+74h] +
add edi 1 +
test eax eax +
jnz loc_403DA3  +
mov eax [esp+5Ch+var_34] +
cmp edi eax +
mov eax [esp+5Ch+var_30] +
cmovle eax esi +
mov [esp+5Ch+var_30] eax +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_28] edx +
mov esi dword ptr [esp+5Ch+var_54] +
mov edi dword ptr [esp+5Ch+var_54+4] +
jmp loc_403DD9  +
mov [esp+5Ch+var_28] eax +
mov eax [eax+74h] +
test eax eax +
jnz loc_403DD2  +
mov dword ptr [esp+5Ch+var_54] esi +
mov eax [esp+5Ch+var_30] +
mov dword ptr [esp+5Ch+var_54+4] edi +
mov [esp+5Ch+var_34] edx +
mov [esp+5Ch+var_2C] 0 +
jmp loc_403CF9  +
mov edx [esp+5Ch+var_2C] +
test edx edx +
jz loc_403E51  +
mov edi [esp+5Ch+var_24] +
test edi edi +
jnz loc_403B27  +
mov edx [esp+5Ch+var_34] +
mov [edx+74h] eax +
mov [eax+70h] edx +
mov eax [ebp+0] +
mov dword ptr [eax+28h] 1 +
jmp loc_403B27  +
mov [esp+5Ch+var_30] eax +
mov esi dword ptr [esp+5Ch+var_54] +
mov edi dword ptr [esp+5Ch+var_54+4] +
jmp loc_403E39  +
mov [esp+5Ch+var_30] edx +
mov edx [esp+5Ch+var_30] +
mov edx [edx+74h] +
test edx edx +
jnz loc_403E35  +
mov dword ptr [esp+5Ch+var_54] esi +
mov dword ptr [esp+5Ch+var_54+4] edi +
jmp loc_403D37  +
mov edx [esp+5Ch+var_34] +
mov esi [edx+74h] +
test esi esi +
jz loc_403E9D  +
mov ecx [eax+74h] +
test ecx ecx +
jnz loc_403B27  +
mov [edx+70h] eax +
mov [eax+74h] edx +
mov eax [ebp+0] +
mov dword ptr [eax+28h] 1 +
jmp loc_403B27  +
mov [esp+5Ch+var_30] eax +
mov [esp+5Ch+var_34] 0 +
jmp loc_403D92  +
mov esi [eax+74h] +
test esi esi +
jnz loc_403B11  +
jmp loc_403C6A  +
mov edx [eax+74h] +
test edx edx +
jnz loc_403E0E  +
mov edi [esp+5Ch+var_34] +
mov [edi+70h] eax +
mov [eax+74h] edi +
mov eax [ebp+0] +
mov dword ptr [eax+28h] 1 +
jmp loc_403B27  +
mov [esp+5Ch+var_34] edx +
mov [esp+5Ch+var_30] 0 +
jmp loc_403C8A  +
mov edx [esp+5Ch+var_34] +
mov edi [edx+74h] +
mov [esp+5Ch+var_2C] edi +
mov [esp+5Ch+var_30] eax +
jmp loc_403DC0  +
mov edi edx +
xor edx edx +
jmp loc_403CAB  +
***
mov ebx eax +
sub esp 234h +
mov eax [eax+98h] +
lea esi [esp+234h+var_204] +
mov [esp+234h+var_230] offset aD +
mov [esp+234h+var_234] esi +
mov dword ptr [esp+234h+var_22C] eax +
call sprintf  +
mov ecx ds:dword_4A4080 +
mov eax offset a6_6s5_1f7_2f_0 +
mov edx [ebx+18h] +
mov [esp+234h+var_230] esi +
test ecx ecx +
mov ecx offset a6_6s5_1f7_2f_1 +
cmovz eax ecx +
fld  qword ptr [ebx+0B8h] +
fild  ds:dword_4A408C +
fld  st(1) +
fdiv st st(1) +
mov [esp+234h+var_214] edx +
mov [esp+234h+var_234] eax +
fld  qword ptr [ebx+0B0h] +
fdivr st(2) st +
faddp st(3) st +
fxch  st(2) +
fmul  ds:flt_47EAB8 +
fdiv  ds:dbl_4A4048 +
fxch  st(2) +
fstp  [esp+234h+var_21C] +
fstp  [esp+234h+var_224] +
fstp  [esp+234h+var_22C] +
call printf  +
mov eax [ebx+88h] +
test eax eax +
jnz loc_403FC0  +
mov [esp+234h+var_230] offset unk_47E699 +
mov [esp+234h+var_234] offset a7_7s_0 +
call printf  +
mov edx [ebx+98h] +
mov eax [ebx+0C0h] +
mov [esp+234h+var_234] offset aCycleDAsAWhole +
mov dword ptr [esp+234h+var_22C] edx +
mov [esp+234h+var_230] eax +
call printf  +
add esp 234h +
pop ebx  +
pop esi  +
retn   +
mov [esp+234h+var_230] eax +
mov [esp+234h+var_234] offset a7lu_1 +
call printf  +
jmp loc_403F94  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov ebp [edx] +
test byte ptr ds:dword_4A4088 20h +
mov edi [eax] +
mov ecx [eax+4] +
mov edx [edx+4] +
jnz loc_404088  +
cmp edi ecx +
jz loc_404187  +
cmp ebp edx +
jz loc_404191  +
mov eax [edi+0C0h] +
test eax eax +
jz loc_404030  +
mov ecx [ecx+0C0h] +
test ecx ecx +
jz loc_404030  +
cmp eax ecx +
jz loc_404165  +
nop   +
mov eax [ebp+0C0h] +
test eax eax +
jz loc_40404C  +
mov edx [edx+0C0h] +
test edx edx +
jz loc_40404C  +
cmp eax edx +
jz loc_404191  +
fld  qword ptr [ebx+10h] +
fadd  qword ptr [ebx+18h] +
fld  qword ptr [esi+10h] +
fadd  qword ptr [esi+18h] +
fucomi st st(1) +
ja loc_404183  +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
mov eax 1 +
ja loc_404080  +
mov eax [esi+8] +
xor edx edx +
cmp [ebx+8] eax +
mov eax 0FFFFFFFFh +
setnbe dl  +
cmovnb eax edx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+40h+var_40] offset aCmp_arc +
mov [esp+40h+var_14] edx +
mov [esp+40h+var_1C] ecx +
call printf  +
mov [esp+40h+var_40] edi +
call sub_40A5F0  +
mov [esp+40h+var_40] offset aCalls_0 +
call printf  +
mov ecx [esp+40h+var_1C] +
mov [esp+40h+var_40] ecx +
call sub_40A5F0  +
mov ecx [esp+40h+var_1C] +
mov eax [ecx+18h] +
mov [esp+40h+var_40] offset aFFLuLu +
fld  qword ptr [ebx+18h] +
fld  qword ptr [ebx+10h] +
fxch  st(1) +
mov [esp+40h+var_28] eax +
mov eax [ebx+8] +
fstp  [esp+40h+var_34] +
fstp  [esp+40h+var_3C] +
mov [esp+40h+var_18] ecx +
mov [esp+40h+var_2C] eax +
call printf  +
mov [esp+40h+var_40] offset aCmp_arc +
call printf  +
mov [esp+40h+var_40] ebp +
call sub_40A5F0  +
mov [esp+40h+var_40] offset aCalls_0 +
call printf  +
mov edx [esp+40h+var_14] +
mov [esp+40h+var_40] edx +
mov [esp+40h+var_1C] edx +
call sub_40A5F0  +
mov edx [esp+40h+var_1C] +
mov eax [edx+18h] +
mov [esp+40h+var_40] offset aFFLuLu +
fld  qword ptr [esi+18h] +
fld  qword ptr [esi+10h] +
fxch  st(1) +
mov [esp+40h+var_28] eax +
mov eax [esi+8] +
fstp  [esp+40h+var_34] +
fstp  [esp+40h+var_3C] +
mov [esp+40h+var_2C] eax +
call printf  +
mov [esp+40h+var_40] 0Ah +
call putchar  +
mov ecx [esp+40h+var_18] +
mov edx [esp+40h+var_1C] +
jmp loc_404002  +
mov eax [ebp+0C0h] +
test eax eax +
jz loc_404187  +
mov edx [edx+0C0h] +
test edx edx +
jz loc_404187  +
cmp eax edx +
jz loc_40406D  +
jmp loc_404187  +
fstp  st +
fstp  st +
mov eax 0FFFFFFFFh +
jmp loc_404080  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx eax +
sub esp 224h +
mov eax [eax+98h] +
lea esi [esp+224h+var_204] +
mov [esp+224h+var_220] offset aD +
mov [esp+224h+var_224] esi +
mov dword ptr [esp+224h+var_21C] eax +
call sprintf  +
mov edx ds:dword_4A4080 +
mov eax offset a6_6s5_1f7_2f11 +
mov [esp+224h+var_220] esi +
test edx edx +
mov edx offset a6_6s5_1f7_2f7_ +
cmovz eax edx +
fld  qword ptr [ebx+0B8h] +
fild  ds:dword_4A408C +
fld  st(1) +
fdiv st st(1) +
mov [esp+224h+var_224] eax +
fld  qword ptr [ebx+0B0h] +
fdivr st(2) st +
faddp st(3) st +
fxch  st(2) +
fmul  ds:flt_47EAB8 +
fdiv  ds:dbl_4A4048 +
fxch  st(2) +
fstp  [esp+224h+var_20C] +
fstp  [esp+224h+var_214] +
fstp  [esp+224h+var_21C] +
call printf  +
mov eax [ebx+18h] +
mov edx [ebx+88h] +
add edx eax +
test edx edx +
jz loc_404260  +
mov [esp+224h+var_220] eax +
mov [esp+224h+var_224] offset a7lu +
call printf  +
mov eax [ebx+88h] +
test eax eax +
jz loc_4042A0  +
mov [esp+224h+var_220] eax +
mov [esp+224h+var_224] offset a7lu_0 +
call printf  +
jmp loc_40427C  +
mov dword ptr [esp+224h+var_21C] offset unk_47E699 +
mov [esp+224h+var_220] offset unk_47E699 +
mov [esp+224h+var_224] offset a7_7s7_7s +
call printf  +
mov [esp+224h+var_224] ebx +
call sub_40A5F0  +
mov [esp+224h+var_224] 0Ah +
call putchar  +
add esp 224h +
pop ebx  +
pop esi  +
retn   +
mov [esp+224h+var_220] offset unk_47E699 +
mov [esp+224h+var_224] offset a7_7s +
call printf  +
jmp loc_40427C  +
***
mov eax [esp+8] +
mov eax [eax] +
mov eax [eax+8] +
mov [esp+8] eax +
mov eax [esp+4] +
mov eax [eax] +
mov eax [eax+8] +
mov [esp+4] eax +
jmp strcmp  +
***
mov eax [esp+8] +
mov edx [eax+4] +
mov eax [esp+4] +
mov eax [eax+4] +
mov [esp+8] edx +
mov [esp+4] eax +
jmp sub_461F50  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_4C] eax +
mov eax dword_47D33C +
test eax eax +
jz loc_404328  +
mov eax ds:dword_4A4080 +
test eax eax +
jnz loc_404B98  +
mov eax dword_47D338 +
test eax eax +
jz loc_404A8E  +
mov dword_47D338 0 +
mov eax ds:dword_4A4080 +
test eax eax +
jnz loc_404362  +
mov ebp dword_47D33C +
test ebp ebp +
jz loc_40497D  +
mov [esp+7Ch+var_7C] offset aCallGraphExpla +
call puts  +
fnstcw  [esp+7Ch+var_3E] +
fld  ds:dbl_4A8CA8 +
mov [esp+7Ch+var_7C] offset aGranularityE_0 +
movzx eax [esp+7Ch+var_3E] +
mov ah 0Ch +
mov [esp+7Ch+var_40] ax +
fldcw  [esp+7Ch+var_40] +
fistp  [esp+7Ch+var_44] +
fldcw  [esp+7Ch+var_3E] +
mov eax [esp+7Ch+var_44] +
add eax eax +
mov dword ptr [esp+7Ch+var_78] eax +
call printf  +
fld  ds:dbl_4A4048 +
fldz   +
fxch  st(1) +
fucomi st st(1) +
fstp  st(1) +
jbe loc_404AB2  +
fild  ds:dword_4A408C +
fdivr st st(1) +
mov [esp+7Ch+var_7C] offset aFor_2fOf_2fSec +
fstp  [esp+7Ch+var_70] +
fdivr  ds:flt_47EAB8 +
fstp  [esp+7Ch+var_78] +
call printf  +
mov edi ds:dword_4A4080 +
test edi edi +
jnz loc_4049A9  +
mov [esp+7Ch+var_7C] offset aIndexTimeSelfC +
call printf  +
mov edx ds:dword_4A8C74 +
mov ecx ds:dword_4A8CB4 +
mov [esp+7Ch+var_50] 0 +
lea eax [ecx+edx] +
test eax eax +
jz loc_4047E0  +
lea esi [esi+0] +
mov eax [esp+7Ch+var_4C] +
mov esi [esp+7Ch+var_50] +
mov ebx dword_47D340 +
mov eax [eax+esi*4] +
test ebx ebx +
mov [esp+7Ch+var_54] eax +
jz loc_404454  +
mov ebp [eax+18h] +
test ebp ebp +
jnz loc_404454  +
mov edi [eax+88h] +
test edi edi +
jnz loc_404454  +
fld  qword ptr [eax+0B0h] +
fldz   +
fxch  st(1) +
fucomip st st(1) +
jp loc_404452  +
jz loc_40480B  +
fstp  st +
jmp loc_404454  +
fstp  st +
mov eax [esp+7Ch+var_54] +
mov esi [eax+0A0h] +
test esi esi +
jz loc_4047CE  +
mov ebx ds:dword_4A4074 +
test ebx ebx +
jz loc_40447A  +
test byte ptr [eax+14h] 1 +
jz loc_4047CE  +
mov eax [esp+7Ch+var_54] +
mov ecx [eax+8] +
test ecx ecx +
jz loc_404864  +
mov eax [esp+7Ch+var_54] +
mov edi [eax+0C4h] +
test edi edi +
cmovz edi eax +
mov eax [eax+0CCh] +
test eax eax +
jz loc_40492B  +
mov ebx [eax+20h] +
xor edx edx +
lea ebp [esp+7Ch+var_3C] +
mov [esp+7Ch+var_1C] 0 +
mov [eax+20h] edx +
test ebx ebx +
mov [ebp+20h] eax +
jz loc_4044F9  +
mov edx [esp+7Ch+var_1C] +
lea ebp [esp+7Ch+var_3C] +
mov esi [ebx+20h] +
test edx edx +
jnz loc_4044DC  +
jmp loc_4044EB  +
mov ebp [ebp+20h] +
mov edx [ebp+20h] +
test edx edx +
jz loc_4044EB  +
mov eax ebx +
call sub_403FE0  +
cmp eax 1 +
jz loc_4044D2  +
mov edx [ebp+20h] +
mov eax ebx +
mov ebx esi +
test ebx ebx +
mov [eax+20h] edx +
mov [ebp+20h] eax +
jnz loc_4044C1  +
mov ebx [esp+7Ch+var_1C] +
mov ebp offset a6_6s5_5s7_2f7_ +
mov eax [esp+7Ch+var_54] +
test ebx ebx +
mov [eax+0CCh] ebx +
jnz loc_40459C  +
jmp loc_404611  +
mov eax [eax+0C0h] +
test eax eax +
jz loc_404532  +
cmp eax [esi+0C0h] +
jz loc_4045AA  +
fild  ds:dword_4A408C +
fld  st +
mov eax ds:dword_4A4080 +
fdivr  qword ptr [ebx+18h] +
fxch  st(1) +
mov ecx [ebx+8] +
mov edx [edi+18h] +
test eax eax +
mov eax offset a6_6s5_5s7_2f11 +
cmovz eax ebp +
fdivr  qword ptr [ebx+10h] +
fxch  st(1) +
mov [esp+7Ch+var_5C] edx +
mov [esp+7Ch+var_60] ecx +
mov dword ptr [esp+7Ch+var_78+4] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_78] offset unk_47E699 +
mov [esp+7Ch+var_7C] eax +
fstp  [esp+7Ch+var_68] +
fstp  [esp+7Ch+var_70] +
call printf  +
mov [esp+7Ch+var_7C] esi +
call sub_40A5F0  +
mov [esp+7Ch+var_7C] 0Ah +
call putchar  +
mov ebx [ebx+20h] +
test ebx ebx +
jz loc_404611  +
mov esi [ebx] +
mov eax [esp+7Ch+var_54] +
cmp eax esi +
jnz loc_404520  +
mov edx ds:dword_4A4080 +
mov eax offset a6_6s5_5s7_7s11 +
mov ecx [ebx+8] +
mov dword ptr [esp+7Ch+var_68+4] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_70+4] offset unk_47E699 +
test edx edx +
mov edx offset a6_6s5_5s7_7s7_ +
cmovz eax edx +
mov dword ptr [esp+7Ch+var_68] ecx +
mov dword ptr [esp+7Ch+var_70] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_78+4] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_78] offset unk_47E699 +
mov [esp+7Ch+var_7C] eax +
call printf  +
mov [esp+7Ch+var_7C] esi +
call sub_40A5F0  +
mov [esp+7Ch+var_7C] 0Ah +
call putchar  +
mov ebx [ebx+20h] +
test ebx ebx +
jnz loc_40459C  +
mov esi [esp+7Ch+var_54] +
mov eax esi +
call sub_4041A0  +
mov eax [esi+0D0h] +
mov [esp+7Ch+var_18] 0 +
test eax eax +
jz loc_404A9F  +
mov ebx [eax+24h] +
xor edx edx +
lea edi [esp+7Ch+var_3C] +
mov [eax+24h] edx +
mov [edi+24h] eax +
test ebx ebx +
jz loc_40467D  +
mov edx [esp+7Ch+var_18] +
lea edi [esp+7Ch+var_3C] +
mov esi [ebx+24h] +
test edx edx +
jnz loc_404660  +
jmp loc_40466F  +
mov edi [edi+24h] +
mov edx [edi+24h] +
test edx edx +
jz loc_40466F  +
mov eax ebx +
call sub_403FE0  +
cmp eax 0FFFFFFFFh +
jz loc_404656  +
mov edx [edi+24h] +
mov eax ebx +
mov ebx esi +
test ebx ebx +
mov [eax+24h] edx +
mov [edi+24h] eax +
jnz loc_404645  +
mov ebx [esp+7Ch+var_18] +
mov eax [esp+7Ch+var_54] +
test ebx ebx +
mov [eax+0D0h] ebx +
jz loc_40479E  +
mov ebp offset a6_6s5_5s7_7s11 +
jmp loc_404730  +
mov eax [esi+0C0h] +
test eax eax +
jz loc_4046BA  +
mov ecx [esp+7Ch+var_54] +
cmp eax [ecx+0C0h] +
jz loc_40473D  +
fild  ds:dword_4A408C +
fld  st +
mov eax [esi+0C4h] +
fdivr  qword ptr [ebx+18h] +
fxch  st(1) +
mov edi ds:dword_4A4080 +
mov edx [ebx+8] +
mov ecx [eax+18h] +
mov eax offset a6_6s5_5s7_2f11 +
test edi edi +
mov edi offset a6_6s5_5s7_2f7_ +
cmovz eax edi +
fdivr  qword ptr [ebx+10h] +
fxch  st(1) +
mov [esp+7Ch+var_5C] ecx +
mov [esp+7Ch+var_60] edx +
mov dword ptr [esp+7Ch+var_78+4] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_78] offset unk_47E699 +
mov [esp+7Ch+var_7C] eax +
fstp  [esp+7Ch+var_68] +
fstp  [esp+7Ch+var_70] +
call printf  +
mov [esp+7Ch+var_7C] esi +
call sub_40A5F0  +
mov [esp+7Ch+var_7C] 0Ah +
call putchar  +
mov ebx [ebx+24h] +
test ebx ebx +
jz loc_40479E  +
mov esi [ebx+4] +
cmp [esp+7Ch+var_54] esi +
jnz loc_4046A0  +
mov eax ds:dword_4A4080 +
mov edx [ebx+8] +
mov dword ptr [esp+7Ch+var_68+4] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_70+4] offset unk_47E699 +
test eax eax +
mov eax offset a6_6s5_5s7_7s7_ +
cmovnz eax ebp +
mov dword ptr [esp+7Ch+var_68] edx +
mov dword ptr [esp+7Ch+var_70] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_78+4] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_78] offset unk_47E699 +
mov [esp+7Ch+var_7C] eax +
call printf  +
mov [esp+7Ch+var_7C] esi +
call sub_40A5F0  +
mov [esp+7Ch+var_7C] 0Ah +
call putchar  +
mov ebx [ebx+24h] +
test ebx ebx +
jnz loc_404730  +
mov esi ds:dword_4A4080 +
test esi esi +
jnz loc_40491A  +
mov [esp+7Ch+var_7C] offset asc_47EA20 +
call puts  +
mov ebx ds:dword_4A4080 +
mov edx ds:dword_4A8C74 +
mov ecx ds:dword_4A8CB4 +
test ebx ebx +
jnz loc_404835  +
add [esp+7Ch+var_50] 1 +
lea eax [edx+ecx] +
cmp eax [esp+7Ch+var_50] +
ja loc_404410  +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov esi dword_47D33C +
test esi esi +
jz loc_404803  +
mov eax ds:dword_4A4080 +
test eax eax +
jz loc_40498E  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
fld  qword ptr [eax+0B8h] +
fucomip st st(1) +
fstp  st +
jp loc_404454  +
jnz loc_404454  +
add [esp+7Ch+var_50] 1 +
lea eax [edx+ecx] +
cmp eax [esp+7Ch+var_50] +
ja loc_404410  +
jmp loc_4047E0  +
mov [esp+7Ch+var_7C] 0Ah +
call putchar  +
mov edx ds:dword_4A8C74 +
mov ecx ds:dword_4A8CB4 +
add [esp+7Ch+var_50] 1 +
lea eax [edx+ecx] +
cmp eax [esp+7Ch+var_50] +
ja loc_404410  +
jmp loc_4047E0  +
mov edx [eax+0C0h] +
test edx edx +
jz loc_404489  +
mov esi eax +
call sub_403EF0  +
mov ebp [esi+0C8h] +
xor eax eax +
mov dword ptr [esi+0C8h] 0 +
test ebp ebp +
jz loc_40479E  +
mov ecx [ebp+0C8h] +
mov edi [esp+7Ch+var_54] +
mov [esp+7Ch+var_48] ecx +
jmp loc_4048BB  +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
ja loc_4048B3  +
add ebx esi +
add edx ecx +
cmp ebx edx +
ja loc_4048F3  +
mov edi eax +
mov eax [eax+0C8h] +
test eax eax +
jz loc_4048F3  +
fld  qword ptr [ebp+0B0h] +
fadd  qword ptr [ebp+0B8h] +
mov ebx [ebp+18h] +
mov esi [ebp+88h] +
mov edx [eax+18h] +
mov ecx [eax+88h] +
fld  qword ptr [eax+0B0h] +
fadd  qword ptr [eax+0B8h] +
fxch  st(1) +
fucomi st st(1) +
jbe loc_4048A3  +
fstp  st +
fstp  st +
mov [ebp+0C8h] eax +
mov eax [esp+7Ch+var_54] +
mov [edi+0C8h] ebp +
mov ebp [esp+7Ch+var_48] +
test ebp ebp +
jz loc_404ACD  +
mov eax [eax+0C8h] +
jmp loc_404893  +
mov [esp+7Ch+var_7C] 0Ah +
call putchar  +
jmp loc_4047AC  +
mov ecx ds:dword_4A4080 +
mov edx offset a6_6s5_5s7_7s_0 +
mov eax offset a6_6s5_5s7_7s_1 +
mov dword ptr [esp+7Ch+var_68+4] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_68] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_70+4] offset unk_47E699 +
test ecx ecx +
cmovz eax edx +
mov dword ptr [esp+7Ch+var_70] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_78+4] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_78] offset unk_47E699 +
mov [esp+7Ch+var_7C] eax +
call printf  +
jmp loc_404611  +
mov [esp+7Ch+var_7C] offset aCallGraph +
call puts  +
jmp loc_404362  +
mov eax ds:_iob +
add eax 20h +
mov [esp+7Ch+arg_0] eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_40C870  +
mov [esp+7Ch+var_60] offset aParents +
mov dword ptr [esp+7Ch+var_68+4] offset aTotal_0 +
mov dword ptr [esp+7Ch+var_68] offset aCalled +
mov dword ptr [esp+7Ch+var_70+4] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_70] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_78+4] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_78] offset unk_47E699 +
mov [esp+7Ch+var_7C] offset a6_6s5_5s7_7s_2 +
call printf  +
mov [esp+7Ch+var_5C] offset aIndex +
mov [esp+7Ch+var_60] offset aName_0 +
mov dword ptr [esp+7Ch+var_68+4] offset aSelf_0 +
mov dword ptr [esp+7Ch+var_68] offset aCalled +
mov dword ptr [esp+7Ch+var_70+4] offset aDescendants +
mov dword ptr [esp+7Ch+var_70] offset aSelf_0 +
mov dword ptr [esp+7Ch+var_78+4] offset aTime_0 +
mov dword ptr [esp+7Ch+var_78] offset aIndex +
mov [esp+7Ch+var_7C] offset a6_6s5_5s7_7s_3 +
call printf  +
mov [esp+7Ch+var_60] offset aChildren +
mov dword ptr [esp+7Ch+var_68+4] offset aTotal_0 +
mov dword ptr [esp+7Ch+var_68] offset aCalled +
mov dword ptr [esp+7Ch+var_70+4] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_70] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_78+4] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_78] offset unk_47E699 +
mov [esp+7Ch+var_7C] offset a6_6s5_5s7_7s_2 +
call printf  +
mov [esp+7Ch+var_7C] 0Ah +
call putchar  +
jmp loc_4043EA  +
mov [esp+7Ch+var_7C] offset unk_47E894 +
call puts  +
jmp loc_40433F  +
mov eax [esp+7Ch+var_54] +
mov dword ptr [eax+0D0h] 0 +
jmp loc_40479E  +
fstp  st +
mov [esp+7Ch+var_7C] offset aNoTimePropagat +
call puts  +
fld1   +
fstp  ds:dbl_4A4048 +
jmp loc_4043D0  +
mov edi [eax+0C8h] +
test edi edi +
jz loc_40479E  +
mov esi offset a6_6s5_5s7_2f_0 +
mov ebx offset a6_6s5_5s7_2f_1 +
jmp loc_404B25  +
mov dword ptr [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] offset a7lu_1 +
call printf  +
mov [esp+7Ch+var_7C] offset asc_47EA18 +
call printf  +
mov [esp+7Ch+var_7C] edi +
call sub_40A5F0  +
mov [esp+7Ch+var_7C] 0Ah +
call putchar  +
mov edi [edi+0C8h] +
test edi edi +
jz loc_40479E  +
fild  ds:dword_4A408C +
mov eax ebx +
fld  st +
mov ebp ds:dword_4A4080 +
fdivr  qword ptr [edi+0B8h] +
fxch  st(1) +
mov edx [edi+18h] +
test ebp ebp +
cmovz eax esi +
fdivr  qword ptr [edi+0B0h] +
fxch  st(1) +
mov [esp+7Ch+var_60] edx +
mov dword ptr [esp+7Ch+var_78+4] offset unk_47E699 +
mov dword ptr [esp+7Ch+var_78] offset unk_47E699 +
mov [esp+7Ch+var_7C] eax +
fstp  [esp+7Ch+var_68] +
fstp  [esp+7Ch+var_70] +
call printf  +
mov eax [edi+88h] +
test eax eax +
jnz loc_404AE7  +
mov dword ptr [esp+7Ch+var_78] offset unk_47E699 +
mov [esp+7Ch+var_7C] offset a7_7s_0 +
call printf  +
jmp loc_404AF7  +
mov eax ds:_iob +
add eax 20h +
mov [esp+7Ch+var_7C] eax +
call sub_40BCA0  +
jmp loc_404328  +
***
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov eax dword_47D348 +
lea ecx [eax-1] +
mov eax ecx +
imul  edx +
mov eax ds:dword_4A8C74 +
add eax ds:dword_4A8CB4 +
sar ecx 1Fh +
shl eax 2 +
mov [esp+68h+var_68] eax +
mov [esp+68h+var_40] edx +
sub [esp+68h+var_40] ecx +
call sub_462140  +
mov edi ds:dword_4A8CB4 +
test edi edi +
mov [esp+68h+var_4C] eax +
jz loc_404FB0  +
mov esi dword_47D340 +
xor ebx ebx +
xor edx edx +
mov eax ds:dword_4A8CB8 +
fldz   +
mov ebp edi +
mov [esp+68h+var_54] esi +
mov ecx eax +
jmp loc_404C34  +
mov edi ecx +
mov esi [esp+68h+var_4C] +
mov [esi+ebx*4] edi +
add ebx 1 +
add edx 1 +
add eax 0D8h +
add ecx 0D8h +
cmp edx ebp +
jz loc_404C56  +
mov edi [esp+68h+var_54] +
test edi edi +
jz loc_404C16  +
mov esi [eax+18h] +
mov edi eax +
test esi esi +
jnz loc_404C18  +
fld  qword ptr [eax+78h] +
fld  st(1) +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
jp loc_404C18  +
jz loc_404C22  +
jmp loc_404C18  +
fstp  st +
mov [esp+68h+var_44] ebx +
mov ebx [esp+68h+var_44] +
mov esi [esp+68h+var_4C] +
mov [esp+68h+var_5C] offset loc_4042C0 +
mov [esp+68h+var_60] 4 +
mov [esp+68h+var_64] ebx +
mov [esp+68h+var_68] esi +
call qsort  +
mov ecx ds:dword_4A8C74 +
test ecx ecx +
jz loc_404FBD  +
mov eax ds:dword_4A8C70 +
lea edx [eax+0D8h] +
mov eax 1 +
nop   +
add ebx 1 +
add eax 1 +
mov [esi+ebx*4-4] edx +
add edx 0D8h +
cmp eax ecx +
jbe loc_404CA0  +
mov [esp+68h+var_50] ebx +
mov [esp+68h+var_68] offset unk_47E894 +
call puts  +
mov [esp+68h+var_68] offset aIndexByFunctio +
call puts  +
mov eax [esp+68h+var_50] +
mov edx 0AAAAAAABh +
add eax 2 +
mul  edx +
shr edx 1 +
mov [esp+68h+var_48] edx +
jz loc_404E59  +
mov [esp+68h+var_3C] 0 +
lea esi [esp+68h+var_2C] +
mov edx [esp+68h+var_50] +
mov eax [esp+68h+var_3C] +
cmp eax edx +
jnb loc_404E3A  +
mov [esp+68h+var_54] eax +
mov ebx 4 +
xor edi edi +
mov eax [esp+68h+var_4C] +
mov ecx [esp+68h+var_54] +
mov ebp [eax+ecx*4] +
mov eax [ebp+0A0h] +
test eax eax +
mov eax [ebp+98h] +
mov [esp+68h+var_60] eax +
jz loc_404F40  +
mov [esp+68h+var_64] offset aD +
mov [esp+68h+var_68] esi +
call sprintf  +
mov eax [esp+68h+var_54] +
mov edx esi +
cmp [esp+68h+var_44] eax +
jbe loc_404E70  +
mov eax ds:dword_4A4080 +
test eax eax +
jnz loc_404F94  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_404D61  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx esi +
add edi edx +
cmp edi ebx +
jg loc_404DAA  +
mov [esp+68h+var_68] 20h +
add edi 1 +
call putchar  +
cmp edi ebx +
jle loc_404D97  +
mov [esp+68h+var_64] esi +
mov [esp+68h+var_68] offset aS_3 +
call printf  +
mov [esp+68h+var_68] ebp +
call sub_40A410  +
mov ecx ds:dword_4A4074 +
add eax edi +
test ecx ecx +
mov edi eax +
jnz loc_404E20  +
test byte ptr [ebp+14h] 2 +
jz loc_404E20  +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_404E20  +
mov edx ds:dword_4A4070 +
mov ebp [eax+4] +
test edx edx +
jnz loc_404E02  +
mov [esp+68h+var_68] ebp +
mov [esp+68h+var_64] 2Fh +
call strrchr  +
lea edx [eax+1] +
test eax eax +
cmovnz ebp edx +
mov [esp+68h+var_64] ebp +
mov [esp+68h+var_68] offset aS_4 +
call printf  +
mov [esp+68h+var_68] ebp +
call strlen  +
lea eax [edi+eax+3] +
mov edi eax +
mov eax [esp+68h+var_48] +
add [esp+68h+var_54] eax +
mov eax [esp+68h+var_50] +
add ebx [esp+68h+var_40] +
cmp [esp+68h+var_54] eax +
jb loc_404D11  +
mov [esp+68h+var_68] 0Ah +
call putchar  +
mov eax [esp+68h+var_48] +
add [esp+68h+var_3C] 1 +
cmp [esp+68h+var_3C] eax +
jnz loc_404CF6  +
mov eax [esp+68h+var_4C] +
mov [esp+68h+var_68] eax +
call free  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_4A4080 +
test eax eax +
jnz loc_404F55  +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_404E7D  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx esi +
add edi edx +
cmp edi ebx +
jg loc_404EC6  +
mov [esp+68h+var_68] 20h +
add edi 1 +
call putchar  +
cmp edi ebx +
jle loc_404EB3  +
mov [esp+68h+var_64] esi +
mov [esp+68h+var_68] offset aS_3 +
call printf  +
mov eax [ebp+0C0h] +
mov [esp+68h+var_64] offset aCycleD +
mov [esp+68h+var_68] esi +
mov [esp+68h+var_60] eax +
call sprintf  +
mov [esp+68h+var_64] esi +
mov [esp+68h+var_68] offset aS_6 +
call printf  +
mov ecx esi +
mov edx [ecx] +
add ecx 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_404F02  +
mov ebp eax +
shr ebp 10h +
test eax 8080h +
cmovz eax ebp +
lea ebp [ecx+2] +
cmovz ecx ebp +
add al al +
sbb ecx 3 +
sub ecx esi +
lea eax [edi+ecx] +
mov edi eax +
jmp loc_404E20  +
mov [esp+68h+var_64] offset aD_0 +
mov [esp+68h+var_68] esi +
call sprintf  +
jmp loc_404D44  +
mov [esp+68h+var_64] esi +
mov [esp+68h+var_68] offset a6_6s +
call printf  +
mov eax [ebp+0C0h] +
mov [esp+68h+var_64] offset aCycleD +
mov [esp+68h+var_68] esi +
mov [esp+68h+var_60] eax +
call sprintf  +
mov [esp+68h+var_64] esi +
mov [esp+68h+var_68] offset a19_19s +
call printf  +
jmp loc_404E20  +
mov eax [ebp+8] +
mov [esp+68h+var_64] esi +
mov [esp+68h+var_68] offset a6_6s19_19s +
mov [esp+68h+var_60] eax +
call printf  +
jmp loc_404E20  +
mov [esp+68h+var_44] 0 +
jmp loc_404C5C  +
mov eax [esp+68h+var_44] +
mov [esp+68h+var_50] eax +
jmp loc_404CB8  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax ds:dword_4A8CB4 +
mov [esp+7Ch+var_14] 0 +
mov [esp+7Ch+var_10] 0 +
shl eax 2 +
mov [esp+7Ch+var_7C] eax +
call sub_462140  +
mov [esp+7Ch+var_30] eax +
mov edi eax +
mov eax ds:dword_4A8CB4 +
shl eax 2 +
mov [esp+7Ch+var_7C] eax +
call sub_462140  +
mov [esp+7Ch+var_48] eax +
mov ebp eax +
mov eax ds:dword_4A8CB4 +
shl eax 2 +
mov [esp+7Ch+var_7C] eax +
call sub_462140  +
mov [esp+7Ch+var_54] eax +
mov eax ds:dword_4A8C78 +
shl eax 2 +
mov [esp+7Ch+var_7C] eax +
call sub_462140  +
mov [esp+7Ch+var_58] eax +
mov eax ds:dword_4A8C78 +
shl eax 2 +
mov [esp+7Ch+var_7C] eax +
call sub_462140  +
mov esi eax +
mov eax ds:dword_4A8C78 +
shl eax 2 +
mov [esp+7Ch+var_7C] eax +
call sub_462140  +
mov ecx ds:dword_4A8CB4 +
test ecx ecx +
mov [esp+7Ch+var_34] eax +
jz loc_405514  +
mov [esp+7Ch+var_60] esi +
mov eax ds:dword_4A8CB8 +
xor ebx ebx +
mov [esp+7Ch+var_50] 0 +
xor edx edx +
xor esi esi +
jmp loc_40509E  +
add edx 1 +
mov [edi+esi*4] eax +
add esi 1 +
or byte ptr [eax+14h] 10h +
add eax 0D8h +
cmp edx ecx +
jnb loc_4050D3  +
cmp dword ptr [eax+18h] 0 +
jz loc_405088  +
add edx 1 +
mov [ebp+ebx*4+0] eax +
add ebx 1 +
and byte ptr [eax+14h] 0EFh +
add eax 0D8h +
mov dword ptr [eax-68h] 0 +
mov dword ptr [eax-64h] 0 +
mov dword ptr [eax-0BCh] 0 +
cmp edx ecx +
jb loc_40509E  +
mov eax ebx +
mov edx 0CCCCCCCDh +
mul  edx +
mov [esp+7Ch+var_50] esi +
mov esi [esp+7Ch+var_60] +
lea edi ds:0[ebx*4] +
mov [esp+7Ch+var_4C] ebx +
mov [esp+7Ch+var_38] edi +
mov [esp+7Ch+var_5C] edx +
shr [esp+7Ch+var_5C] 6 +
mov eax ds:dword_4A8C78 +
mov [esp+7Ch+var_70] offset sub_4039B0 +
mov [esp+7Ch+var_74] 4 +
mov [esp+7Ch+var_78] eax +
mov eax ds:dword_4A8C7C +
mov [esp+7Ch+var_7C] eax +
call qsort  +
mov eax ds:dword_4A8C78 +
test eax eax +
mov [esp+7Ch+var_60] eax +
jz loc_405230  +
mov eax ds:dword_4A8C7C +
xor ebx ebx +
mov ecx [esp+7Ch+var_60] +
mov dword ptr [esp+7Ch+var_44] esi +
mov [esp+7Ch+var_3C] eax +
lea edi [eax+ecx*4] +
xor ecx ecx +
mov ebp edi +
lea esi [esi+0] +
mov edx [eax] +
xor edi edi +
mov esi [edx+8] +
mov dword ptr [edx+28h] 0 +
add ecx esi +
adc ebx edi +
add eax 4 +
cmp eax ebp +
jnz loc_405150  +
mov eax [esp+7Ch+var_3C] +
xor edx edx +
mov esi dword ptr [esp+7Ch+var_44] +
mov ebp edx +
mov dword ptr [esp+7Ch+var_44] ecx +
mov dword ptr [esp+7Ch+var_44+4] ebx +
mov ebx dword ptr [esp+7Ch+var_44+4] +
mov ecx [eax] +
fild  [esp+7Ch+var_44] +
test ebx ebx +
mov eax [ecx+8] +
mov edi eax +
js loc_405509  +
fstp  [esp+7Ch+var_24] +
fld  [esp+7Ch+var_24] +
mov dword ptr [esp+7Ch+var_2C] eax +
mov dword ptr [esp+7Ch+var_2C+4] edx +
fild  [esp+7Ch+var_2C] +
fdiv st st(1) +
fld  ds:dbl_47EAC0 +
fxch  st(1) +
fucomip st st(1) +
ja loc_40522B  +
mov edx ebp +
xor ebx ebx +
mov ebp [esp+7Ch+var_3C] +
mov dword ptr [esp+7Ch+var_44] esi +
mov eax edi +
jmp loc_4051D4  +
fstp  [esp+7Ch+var_24] +
fld  [esp+7Ch+var_24] +
fdiv st st(2) +
fucomip st st(1) +
ja loc_40521B  +
mov ecx [ecx+4] +
add ebx 1 +
add dword ptr [ecx+1Ch] 1 +
cmp ebx [esp+7Ch+var_60] +
jz loc_405221  +
mov ecx [ebp+ebx*4+0] +
xor edi edi +
mov esi [ecx+8] +
add eax esi +
adc edx edi +
mov dword ptr [esp+7Ch+var_2C] eax +
test edx edx +
mov dword ptr [esp+7Ch+var_2C+4] edx +
fild  [esp+7Ch+var_2C] +
jns loc_4051C6  +
fadd  ds:flt_47EAA8 +
fstp  [esp+7Ch+var_24] +
fld  [esp+7Ch+var_24] +
fdiv st st(2) +
fucomip st st(1) +
jbe loc_4051D4  +
fstp  st +
fstp  st +
jmp loc_405225  +
fstp  st +
fstp  st +
jmp loc_405225  +
fstp  st +
fstp  st +
mov esi dword ptr [esp+7Ch+var_44] +
jmp loc_405230  +
fstp  st +
fstp  st +
nop   +
mov eax [esp+7Ch+var_38] +
mov edi [esp+7Ch+var_54] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+var_48] +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
call memcpy  +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_70] offset sub_4039E0 +
mov [esp+7Ch+var_74] 4 +
mov [esp+7Ch+var_78] eax +
call qsort  +
mov edi [esp+7Ch+var_5C] +
test edi edi +
jz loc_405539  +
mov eax [esp+7Ch+var_54] +
mov edi [eax] +
cmp dword ptr [edi+1Ch] 5 +
jz loc_405539  +
mov edx [esp+7Ch+var_10] +
xor ebx ebx +
mov ebp [esp+7Ch+var_54] +
mov ecx edx +
mov eax [edi+0D0h] +
test eax eax +
jz loc_4052C3  +
mov [esp+7Ch+var_60] ebx +
mov ebx [eax+4] +
cmp [eax] ebx +
jz loc_4052B1  +
mov [esi+edx*4] eax +
add edx 1 +
mov ecx edx +
mov dword ptr [eax+28h] 1 +
mov eax [eax+24h] +
test eax eax +
jnz loc_4052A2  +
mov ebx [esp+7Ch+var_60] +
mov eax [edi+0CCh] +
test eax eax +
jz loc_4052F2  +
mov [esp+7Ch+var_60] ebx +
mov ebx [eax+4] +
cmp [eax] ebx +
jz loc_4052E0  +
mov [esi+edx*4] eax +
add edx 1 +
mov ecx edx +
mov dword ptr [eax+28h] 1 +
mov eax [eax+20h] +
test eax eax +
jnz loc_4052D1  +
mov ebx [esp+7Ch+var_60] +
or byte ptr [edi+14h] 10h +
lea eax [ebx+1] +
cmp eax [esp+7Ch+var_5C] +
jz loc_40530D  +
mov edi [ebp+eax*4+0] +
cmp dword ptr [edi+1Ch] 5 +
jz loc_40530D  +
mov ebx eax +
jmp loc_405294  +
mov [esp+7Ch+var_10] ecx +
xor edi edi +
test edx edx +
jz loc_405351  +
mov eax esi +
xor edi edi +
lea ebp [esi+edx*4] +
nop   +
mov edx [eax] +
mov ecx [edx+4] +
test byte ptr [ecx+14h] 10h +
jz loc_40534A  +
mov ecx [edx] +
test byte ptr [ecx+14h] 10h +
jz loc_40534A  +
mov ecx [esp+7Ch+var_58] +
mov [ecx+edi*4] edx +
mov ecx [edx+4] +
add edi 1 +
mov edx [edx] +
and byte ptr [ecx+14h] 0EFh +
and byte ptr [edx+14h] 0EFh +
add eax 4 +
cmp eax ebp +
jnz loc_405320  +
xor ebp ebp +
test ebx ebx +
jz loc_405389  +
mov [esp+7Ch+var_60] esi +
mov esi ebx +
mov ebx [esp+7Ch+var_54] +
jmp loc_40536A  +
add ebp 1 +
cmp ebp esi +
jz loc_405385  +
mov eax [ebx+ebp*4] +
test byte ptr [eax+14h] 10h +
jz loc_405363  +
mov eax [eax+8] +
add ebp 1 +
mov [esp+7Ch+var_7C] eax +
call puts  +
cmp ebp esi +
jnz loc_40536A  +
mov esi [esp+7Ch+var_60] +
mov eax [esp+7Ch+var_58] +
lea ebx [esp+7Ch+var_14] +
mov [esp+7Ch+var_70] offset sub_4039B0 +
mov [esp+7Ch+var_74] 4 +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call qsort  +
mov ebp [esp+7Ch+var_34] +
mov ecx 1 +
mov eax [esp+7Ch+var_58] +
mov edx edi +
mov [esp+7Ch+var_78] ebx +
mov [esp+7Ch+var_7C] ebp +
call sub_403A10  +
mov edx ds:dword_4A8C78 +
xor ecx ecx +
mov eax ds:dword_4A8C7C +
mov [esp+7Ch+var_78] ebx +
xor ebx ebx +
mov [esp+7Ch+var_7C] ebp +
call sub_403A10  +
mov edx [esp+7Ch+var_14] +
lea eax [esp+7Ch+var_10] +
mov [esp+7Ch+var_78] eax +
mov ecx 1 +
mov eax ebp +
mov [esp+7Ch+var_7C] esi +
call sub_403A10  +
mov edx [esp+7Ch+var_4C] +
test edx edx +
jz loc_405432  +
mov esi [esp+7Ch+var_4C] +
mov edi [esp+7Ch+var_48] +
jmp loc_405417  +
add ebx 1 +
cmp ebx esi +
jz loc_405432  +
mov eax [edi+ebx*4] +
test byte ptr [eax+14h] 10h +
jnz loc_405410  +
mov eax [eax+8] +
add ebx 1 +
mov [esp+7Ch+var_7C] eax +
call puts  +
cmp ebx esi +
jnz loc_405417  +
mov eax [esp+7Ch+var_50] +
xor ebx ebx +
test eax eax +
jz loc_405459  +
mov esi [esp+7Ch+var_50] +
mov edi [esp+7Ch+var_30] +
mov eax [edi+ebx*4] +
add ebx 1 +
mov eax [eax+8] +
mov [esp+7Ch+var_7C] eax +
call puts  +
cmp ebx esi +
jnz loc_405444  +
mov eax ds:dword_4A8CB4 +
shl eax 2 +
mov [esp+7Ch+var_7C] eax +
call sub_462140  +
mov [esp+7Ch+var_5C] eax +
mov eax ds:dword_4A8CB4 +
shl eax 2 +
mov [esp+7Ch+var_7C] eax +
call sub_462140  +
mov ebp eax +
mov eax ds:dword_4A8CB4 +
shl eax 2 +
mov [esp+7Ch+var_7C] eax +
call sub_462140  +
mov edi eax +
mov eax ds:dword_4A8C78 +
shl eax 2 +
mov [esp+7Ch+var_7C] eax +
call sub_462140  +
mov esi eax +
mov eax ds:dword_4A8C78 +
shl eax 2 +
mov [esp+7Ch+var_7C] eax +
call sub_462140  +
mov ebx eax +
mov eax ds:dword_4A8C78 +
shl eax 2 +
mov [esp+7Ch+var_7C] eax +
call sub_462140  +
mov edx [esp+7Ch+var_5C] +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_60] eax +
call free  +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov [esp+7Ch+var_7C] edi +
call free  +
mov [esp+7Ch+var_7C] esi +
call free  +
mov [esp+7Ch+var_7C] ebx +
call free  +
mov eax [esp+7Ch+var_60] +
mov [esp+7Ch+var_7C] eax +
call free  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
fadd  ds:flt_47EAA8 +
jmp loc_405194  +
mov [esp+7Ch+var_5C] 0 +
mov [esp+7Ch+var_38] 0 +
mov [esp+7Ch+var_50] 0 +
mov [esp+7Ch+var_4C] 0 +
jmp loc_4050FC  +
mov edx [esp+7Ch+var_10] +
xor ebx ebx +
jmp loc_405311  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax ds:dword_4A8C78 +
mov [esp+2Ch+var_10] 0 +
shl eax 2 +
mov [esp+2Ch+var_2C] eax +
call sub_462140  +
mov edx ds:dword_4A8C78 +
mov ebp ds:dword_4A8C7C +
test edx edx +
mov ecx ebp +
lea edi [ebp+edx*4+0] +
jz loc_4055A6  +
mov ebx [ecx] +
mov esi [ebx] +
test byte ptr [esi+14h] 8 +
jz loc_405598  +
mov esi [ebx+4] +
test byte ptr [esi+14h] 8 +
jnz loc_40559F  +
mov dword ptr [ebx+28h] 1 +
add ecx 4 +
cmp ecx edi +
jnz loc_405585  +
lea ecx [esp+2Ch+var_10] +
xor esi esi +
mov [esp+2Ch+var_28] ecx +
xor ecx ecx +
xor ebx ebx +
mov [esp+2Ch+var_2C] eax +
mov eax ebp +
call sub_403A10  +
mov ecx ds:dword_4A8CB4 +
test ecx ecx +
jnz loc_4055E1  +
jmp loc_405601  +
add ebx 1 +
add esi 0D8h +
cmp ds:dword_4A8CB4 ebx +
jbe loc_405601  +
mov edx ds:dword_4A8CB8 +
add edx esi +
movzx eax byte ptr [edx+14h] +
and eax 18h +
cmp al 8 +
jnz loc_4055D0  +
mov eax [edx+8] +
mov [esp+2Ch+var_2C] eax +
call puts  +
jmp loc_4055D0  +
mov eax ds:dword_4A8C94 +
xor edi edi +
xor ebx ebx +
mov [esp+2Ch+var_20] offset loc_4042E0 +
xor ebp ebp +
mov [esp+2Ch+var_24] 0Ch +
mov [esp+2Ch+var_28] eax +
mov eax ds:dword_4A8C8C +
mov [esp+2Ch+var_2C] eax +
call qsort  +
mov edx ds:dword_4A8C94 +
test edx edx +
jz loc_4056D0  +
nop   +
lea esi [esi+0] +
test ebx ebx +
jz loc_40565D  +
mov eax ds:dword_4A8C8C +
mov eax [eax+edi+4] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call sub_461F50  +
test eax eax +
jz loc_4056BE  +
mov eax ds:dword_4A8CB4 +
xor esi esi +
xor ebx ebx +
test eax eax +
jnz loc_405682  +
jmp loc_4056D8  +
mov eax ds:dword_4A8CB4 +
add ebx 1 +
add esi 0D8h +
cmp eax ebx +
jbe loc_4056B1  +
mov eax ds:dword_4A8CB8 +
add eax esi +
test byte ptr [eax+14h] 8 +
jz loc_405670  +
mov edx ds:dword_4A8C8C +
mov eax [eax+8] +
mov edx [edx+edi+4] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_461F50  +
test eax eax +
jnz loc_405670  +
mov eax ds:dword_4A8CB4 +
cmp ebx eax +
jz loc_4056D8  +
mov eax ds:dword_4A8C8C +
mov ebx [eax+edi+4] +
add ebp 1 +
add edi 0Ch +
cmp ds:dword_4A8C94 ebp +
ja loc_405640  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_4A8C8C +
mov eax [eax+edi+4] +
mov [esp+2Ch+var_2C] eax +
call puts  +
jmp loc_4056B5  +
***
sub esp 1Ch +
push esi  +
push ebx  +
sub esp 42Ch +
mov [esp+42Ch+var_428] offset aR +
mov [esp+42Ch+var_42C] eax +
mov [esp+42Ch+var_410] eax +
call fopen  +
test eax eax +
mov ebp eax +
jz loc_4059E7  +
mov [esp+42Ch+var_418] 0 +
lea ebx [esp+42Ch+var_40C] +
mov [esp+42Ch+var_42C] ebp +
call feof  +
test eax eax +
jnz loc_4057DF  +
mov [esp+42Ch+var_424] ebx +
mov [esp+42Ch+var_428] offset asc_47EB08 +
mov [esp+42Ch+var_42C] ebp +
call fscanf  +
test eax eax +
jz loc_4057AD  +
mov edi offset aNoSymbolsIn +
mov esi ebx +
mov ecx 0Eh +
cmps   +
jnz loc_4057B6  +
mov [esp+42Ch+var_428] offset asc_47EB1E +
mov [esp+42Ch+var_42C] ebp +
call fscanf  +
cmp eax 0FFFFFFFFh +
jnz loc_405764  +
mov eax [esp+42Ch+var_410] +
call sub_4056F0  +
mov [esp+42Ch+var_424] ebx +
mov [esp+42Ch+var_428] offset asc_47EB20 +
mov [esp+42Ch+var_42C] ebp +
call fscanf  +
test eax eax +
jz loc_4057AD  +
mov [esp+42Ch+var_42C] ebp +
add [esp+42Ch+var_418] 1 +
call feof  +
test eax eax +
jz loc_405770  +
mov eax [esp+42Ch+var_418] +
lea ebx [esp+42Ch+var_40C] +
lea eax [eax+eax*2] +
shl eax 2 +
mov [esp+42Ch+var_42C] eax +
call sub_462140  +
mov [esp+42Ch+var_42C] ebp +
mov ds:dword_4A8C8C eax +
call rewind  +
mov [esp+42Ch+var_418] 0 +
lea esi [esi+0] +
mov [esp+42Ch+var_42C] ebp +
call feof  +
test eax eax +
jnz loc_405871  +
mov [esp+42Ch+var_424] ebx +
mov [esp+42Ch+var_428] offset asc_47EB08 +
mov [esp+42Ch+var_42C] ebp +
call fscanf  +
test eax eax +
jz loc_4057AD  +
mov edi offset aNoSymbolsIn +
mov esi ebx +
mov ecx 0Eh +
cmps   +
jnz loc_405905  +
mov [esp+42Ch+var_428] offset asc_47EB1E +
mov [esp+42Ch+var_42C] ebp +
call fscanf  +
cmp eax 0FFFFFFFFh +
jz loc_4057AD  +
mov [esp+42Ch+var_42C] ebp +
call feof  +
test eax eax +
jz loc_40581C  +
mov edi [esp+42Ch+var_418] +
xor ebx ebx +
xor esi esi +
xor edx edx +
mov eax ds:dword_4A8C8C +
test edi edi +
mov ds:dword_4A8C94 edi +
jnz loc_4058A5  +
jmp loc_4058D6  +
mov edx ds:dword_4A8C94 +
add esi 1 +
or byte ptr [eax+ebx+8] 1 +
add ebx 0Ch +
cmp edx esi +
jbe loc_4058D6  +
test esi esi +
jz loc_405890  +
mov edx [eax+ebx-8] +
mov eax [eax+ebx+4] +
mov [esp+42Ch+var_428] edx +
mov [esp+42Ch+var_42C] eax +
call sub_461F50  +
test eax eax +
mov eax ds:dword_4A8C8C +
jnz loc_405890  +
mov edx ds:dword_4A8C94 +
add esi 1 +
add ebx 0Ch +
cmp edx esi +
ja loc_4058A5  +
mov [esp+42Ch+var_428] edx +
mov [esp+42Ch+var_42C] eax +
mov [esp+42Ch+var_420] offset loc_405A20 +
mov [esp+42Ch+var_424] 0Ch +
call qsort  +
mov [esp+42Ch+var_42C] ebp +
call fclose  +
add esp 42Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+42Ch+var_418] +
mov edx ebx +
lea edi [eax+eax*2] +
mov eax ds:dword_4A8C8C +
lea esi ds:0[edi*4] +
add eax esi +
mov [esp+42Ch+var_414] eax +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_405920  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx ebx +
add edx 1 +
mov [esp+42Ch+var_42C] edx +
call sub_462140  +
mov ecx [esp+42Ch+var_414] +
mov [ecx+4] eax +
mov eax ds:dword_4A8C8C +
mov eax [eax+esi+4] +
mov [esp+42Ch+var_428] ebx +
mov [esp+42Ch+var_42C] eax +
call strcpy  +
mov [esp+42Ch+var_424] ebx +
mov [esp+42Ch+var_428] offset asc_47EB20 +
mov [esp+42Ch+var_42C] ebp +
call fscanf  +
test eax eax +
jz loc_4057AD  +
mov [esp+42Ch+var_428] 20h +
mov [esp+42Ch+var_42C] ebx +
call strrchr  +
add esi ds:dword_4A8C8C +
lea edx [eax+1] +
mov [esp+42Ch+var_42C] edx +
mov [esp+42Ch+var_414] edx +
call strlen  +
add eax 1 +
mov [esp+42Ch+var_42C] eax +
call sub_462140  +
mov edx [esp+42Ch+var_414] +
mov [esi] eax +
mov eax ds:dword_4A8C8C +
mov eax [eax+edi*4] +
mov [esp+42Ch+var_428] edx +
mov [esp+42Ch+var_42C] eax +
call strcpy  +
add [esp+42Ch+var_418] 1 +
jmp loc_405810  +
mov eax [esp+42Ch+var_410] +
mov [esp+42Ch+var_428] offset aSCouldNotOpenS +
mov [esp+42Ch+var_420] eax +
mov eax ds:dword_4A8C98 +
mov [esp+42Ch+var_424] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+42Ch+var_42C] eax +
call fprintf  +
mov [esp+42Ch+var_42C] 1 +
call sub_407CE0  +
lea esi [esi+0] +
mov eax [esp+42Ch+var_424] +
mov eax [eax] +
mov [esp+42Ch+var_424] eax +
mov eax [esp+42Ch+var_428] +
mov eax [eax] +
mov [esp+42Ch+var_428] eax +
jmp strcmp  +
***
mov eax [esp+8] +
mov eax [eax] +
mov [esp+8] eax +
jmp strcmp  +
***
push edi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 3Ch +
mov ebx ds:dword_4A8C88 +
lea ecx [esp+48h+var_1C] +
mov [esp+48h+var_24] 0 +
mov [esp+48h+var_20] 0 +
mov eax [ebx+4] +
mov [esp+48h+var_1C] 0 +
mov edx [eax+128h] +
mov eax ds:dword_4A8C90 +
mov [esp+48h+var_30] ecx +
lea ecx [esp+48h+var_20] +
mov [esp+48h+var_34] ecx +
lea ecx [esp+48h+var_24] +
mov [esp+48h+var_38] ecx +
mov ecx esi +
mov [esp+48h+var_2C] 0 +
sub ecx [eax+1Ch] +
mov [esp+48h+var_40] eax +
mov eax ds:dword_4A4054 +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] ecx +
mov [esp+48h+var_44] eax +
call edx  +
test eax eax +
jz loc_405B30  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_405B30  +
mov edx [esp+48h+var_20] +
test edx edx +
jz loc_405B30  +
mov ecx [esp+48h+var_1C] +
test ecx ecx +
jz loc_405B30  +
test byte ptr ds:dword_4A4088 80h +
jz loc_405B11  +
mov [esp+48h+var_38] edx +
mov [esp+48h+var_3C] ecx +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] offset aGet_src_info0x +
call printf  +
mov eax [esp+48h+var_24] +
mov edx [esp+48h+var_20] +
mov ecx [esp+48h+var_1C] +
mov [ebp+0] eax +
mov eax [esp+48h+arg_0] +
mov ebx 1 +
mov [edi] edx +
mov [eax] ecx +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebx ebx +
test byte ptr ds:dword_4A4088 80h +
jz loc_405B21  +
mov edx [esp+48h+var_20] +
mov eax offset aUnknown_0 +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] offset aGet_src_infoNo +
test edx edx +
cmovz edx eax +
mov ecx edx +
mov edx [esp+48h+var_24] +
mov [esp+48h+var_38] ecx +
test edx edx +
cmovnz eax edx +
mov edx [esp+48h+var_1C] +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_3C] edx +
call printf  +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 4Ch +
mov esi [eax+10h] +
test esi esi +
jz loc_405C41  +
mov edx [eax+0Ch] +
xor eax eax +
test dl 4 +
jnz loc_405BD0  +
mov ecx ds:dword_4A4078 +
test ecx ecx +
jz loc_405BD8  +
and edx 1 +
jz loc_405BD8  +
mov eax ds:dword_4A4088 +
and eax 80h +
jz loc_405BD0  +
mov eax [ebx+4] +
mov [esp+4Ch+var_4C] offset aCore_sym_class +
mov [esp+4Ch+var_48] eax +
call printf  +
xor eax eax +
nop   +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_4A8C88 +
lea ecx [esp+4Ch+var_20] +
mov edx [eax+4] +
mov edx [edx+114h] +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] ebx +
call edx  +
movsx edx [esp+4Ch+var_1C] +
mov eax 54h +
cmp edx 54h +
jz loc_405BD0  +
cmp edx 57h +
jz loc_405BD0  +
cmp edx 74h +
jz loc_405C50  +
mov eax ds:dword_4A4088 +
and eax 80h +
jz loc_405BD0  +
mov eax [ebx+4] +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] offset aCore_sym_cla_0 +
mov [esp+4Ch+var_48] eax +
call printf  +
xor eax eax +
jmp loc_405BD0  +
test byte ptr [ebx+0Ch] 8 +
jnz loc_405D8E  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx ds:dword_4A4078 +
xor eax eax +
test edx edx +
jnz loc_405BD0  +
mov edx [ebx+4] +
test edx edx +
jz loc_405BD0  +
movzx ecx byte ptr [edx] +
test cl cl +
mov byte ptr [esp+4Ch+var_34] cl +
jz loc_405BD0  +
cmp cl 24h +
jz loc_405BD0  +
mov eax ecx +
mov ebp edx +
mov [esp+4Ch+var_30] edx +
cmp al 2Eh +
jnz loc_405CDF  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
cmp eax 7 +
jbe loc_405CAF  +
mov edi offset a_clone_ +
mov esi ebp +
mov ecx 7 +
cmps   +
jnz loc_405CF6  +
add ebp 6 +
movzx eax byte ptr [ebp+1] +
lea edx [ebp+1] +
test al al +
jnz loc_405CCE  +
jmp loc_405CF2  +
add edx 1 +
movzx eax byte ptr [edx] +
test al al +
jz loc_405CF2  +
cmp al 2Eh +
jz loc_405CF2  +
test ds:byte_49F240[eax+eax] 4 +
jnz loc_405CC0  +
xor eax eax +
jmp loc_405C43  +
movzx eax byte ptr [ebp+1] +
lea edx [ebp+1] +
test al al +
jz loc_405D19  +
cmp al 24h +
jz loc_405C41  +
mov ebp edx +
jmp loc_405C8B  +
cmp eax 0Bh +
jbe loc_405CAF  +
mov esi ebp +
mov ecx 0Bh +
mov edi offset a_constprop_ +
cmps   +
lea eax [ebp+0Ah] +
setnbe cl  +
setb dl  +
cmp cl dl +
cmovz ebp eax +
jmp loc_405CAF  +
mov eax ds:dword_4A8C88 +
mov edx [esp+4Ch+var_30] +
mov eax [eax+4] +
movzx ecx byte ptr [eax+18h] +
test cl cl +
jz loc_405D39  +
xor eax eax +
cmp byte ptr [esp+4Ch+var_34] cl +
jnz loc_405BD0  +
mov [esp+4Ch+var_44] 0Eh +
mov [esp+4Ch+var_48] offset a__gnu_compiled +
mov [esp+4Ch+var_4C] edx +
mov [esp+4Ch+var_34] edx +
call strncmp  +
test eax eax +
jz loc_405BD0  +
mov edx [esp+4Ch+var_34] +
mov [esp+4Ch+var_44] 0Fh +
mov [esp+4Ch+var_48] offset a___gnu_compile +
mov [esp+4Ch+var_4C] edx +
call strncmp  +
test eax eax +
jz loc_405BD0  +
cmp ds:dword_4A406C 0 +
jnz loc_405C37  +
mov eax 74h +
jmp loc_405BD0  +
***
sub esp 34h +
sub esp 24h +
mov eax ds:dword_4A8C84 +
test eax eax +
jz locret_406185  +
sub esp 1Ch +
lea eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] eax +
lea eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] eax +
call sub_408900  +
mov eax ds:dword_4A8C88 +
mov [esp+1Ch+var_1C] eax +
call sub_4101B0  +
cmp eax 9 +
jz loc_406257  +
jbe loc_406187  +
cmp eax 26h +
nop   +
jz loc_4061F4  +
cmp eax 59h +
jz loc_4061B8  +
cmp eax 0Eh +
nop   +
jz loc_406215  +
mov eax ds:dword_4A8C88 +
mov [esp+1Ch+var_1C] eax +
call sub_410050  +
mov [esp+1Ch+var_18] offset aSCNotSupported +
mov [esp+1Ch+var_10] eax +
mov eax ds:dword_4A8C98 +
mov [esp+1Ch+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
mov ds:dword_4A407C 0 +
add esp 1Ch +
retn   +
cmp eax 6 +
jz loc_406236  +
cmp eax 8 +
jz loc_4061D6  +
cmp eax 3 +
jnz loc_406146  +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_40ABF0  +
jmp loc_406182  +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_40B7A0  +
jmp loc_406182  +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_40B570  +
jmp loc_406182  +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_40A780  +
jmp loc_406182  +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_40B0F0  +
jmp loc_406182  +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_40B400  +
jmp loc_406182  +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_40A660  +
jmp loc_406182  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] 400h +
mov edi eax +
mov [esp+4Ch+var_20] eax +
call sub_462140  +
mov [esp+4Ch+var_4C] 400h +
mov ebp eax +
call sub_462140  +
mov [esp+4Ch+var_4C] 400h +
mov [esp+4Ch+var_30] eax +
call sub_462140  +
mov [esp+4Ch+var_48] offset aR +
mov [esp+4Ch+var_4C] edi +
mov esi eax +
call fopen  +
test eax eax +
mov ebx eax +
jz loc_40653C  +
mov [esp+4Ch+var_4C] 400h +
call sub_462140  +
mov [esp+4Ch+var_4C] 400h +
mov edi eax +
call sub_462140  +
mov [esp+4Ch+var_4C] 400h +
mov [esp+4Ch+var_2C] eax +
call sub_462140  +
mov [esp+4Ch+var_24] 0 +
mov [esp+4Ch+var_28] eax +
lea esi [esi+0] +
mov [esp+4Ch+var_4C] ebx +
call feof  +
test eax eax +
jnz loc_406381  +
mov [esp+4Ch+var_44] ebx +
mov [esp+4Ch+var_48] 3FFh +
mov [esp+4Ch+var_4C] edi +
call fgets  +
test eax eax +
jz loc_406381  +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_48] offset aSCS +
mov [esp+4Ch+var_4C] edi +
mov [esp+4Ch+var_3C] eax +
lea eax [esp+4Ch+var_D] +
mov [esp+4Ch+var_40] eax +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_44] eax +
call sscanf  +
cmp eax 3 +
jnz loc_406310  +
movzx eax byte ptr [esp+4Ch+var_D] +
mov [esp+4Ch+var_4C] ebx +
and eax 0FFFFFFDFh +
cmp al 54h +
setz al  +
movzx eax al +
add [esp+4Ch+var_24] eax +
call feof  +
test eax eax +
jz loc_40631C  +
mov [esp+4Ch+var_4C] edi +
call free  +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_24] +
test eax eax +
mov ds:dword_4A8CB4 eax +
jz loc_406589  +
imul eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] eax +
call sub_462140  +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebx +
mov ds:dword_4A8CB8 eax +
mov ds:dword_4A8CBC eax +
call fseek  +
test eax eax +
jnz loc_406571  +
mov [esp+4Ch+var_4C] ebx +
call feof  +
test eax eax +
jnz loc_4064EB  +
mov [esp+4Ch+var_44] ebx +
mov [esp+4Ch+var_48] 3FFh +
mov [esp+4Ch+var_4C] ebp +
call fgets  +
test eax eax +
jz loc_4064EB  +
lea eax [esp+4Ch+var_D] +
mov [esp+4Ch+var_40] eax +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_3C] esi +
mov [esp+4Ch+var_48] offset aSCS +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_44] eax +
call sscanf  +
cmp eax 3 +
jnz loc_40644D  +
movzx eax byte ptr [esp+4Ch+var_D] +
and eax 0FFFFFFDFh +
cmp al 54h +
jnz loc_4063EC  +
mov eax ds:dword_4A8CBC +
mov [esp+4Ch+var_4C] eax +
call sub_4094F0  +
mov eax ds:dword_4A8CBC +
mov [esp+4Ch+var_48] offset aLx +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_4C] eax +
call sscanf  +
mov edi ds:dword_4A8CBC +
mov [esp+4Ch+var_4C] esi +
call strlen  +
add eax 1 +
mov [esp+4Ch+var_4C] eax +
call sub_462140  +
mov [edi+8] eax +
mov eax ds:dword_4A8CBC +
mov eax [eax+8] +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] eax +
call strcpy  +
mov edx ds:dword_4A8CBC +
movzx eax byte ptr [edx+14h] +
and eax 0FFFFFFF7h +
or eax 5 +
mov [edx+14h] al +
cmp byte ptr [esp+4Ch+var_D] 74h +
setz cl  +
and eax 0FFFFFFFDh +
add ecx ecx +
add edx 0D8h +
or eax ecx +
mov [edx-0C4h] al +
mov [esp+4Ch+var_4C] ebx +
mov ds:dword_4A8CBC edx +
call feof  +
test eax eax +
jz loc_4063FC  +
mov [esp+4Ch+var_4C] ebx +
call fclose  +
mov eax ds:dword_4A8CBC +
sub eax ds:dword_4A8CB8 +
mov [esp+4Ch+var_4C] offset dword_4A8CB4 +
sar eax 3 +
imul eax eax +
mov ds:dword_4A8CB4 eax +
call sub_409570  +
mov [esp+4Ch+var_4C] ebp +
call free  +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov [esp+4Ch+arg_0] esi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
mov eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] offset aSCouldNotOpenS +
mov [esp+4Ch+var_40] eax +
mov eax ds:dword_4A8C98 +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov [esp+4Ch+var_4C] 1 +
call sub_407CE0  +
mov eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_4C] eax +
call perror  +
mov [esp+4Ch+var_4C] 1 +
call sub_407CE0  +
mov eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] offset aSFileSHasNoSym +
mov [esp+4Ch+var_40] eax +
mov eax ds:dword_4A8C98 +
mov [esp+4Ch+var_44] eax +
jmp loc_406555  +
***
push esi  +
push esi  +
push ebx  +
sub esp 24h +
lea ebx [esp+28h+var_10] +
mov [esp+28h+var_1C] eax +
mov [esp+28h+var_20] 8 +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_28] ebx +
call fread  +
cmp eax 8 +
jz loc_406DE7  +
add esp 24h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov eax ds:dword_4A8C88 +
mov eax [eax+4] +
mov eax [eax+1Ch] +
mov [esp+28h+var_28] ebx +
call eax  +
mov [esi] eax +
xor eax eax +
mov [esi+4] edx +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax ds:dword_4A8C88 +
mov [esp+1Ch+var_1C] eax +
call sub_410AC0  +
cmp eax 0FFFFFFFFh +
jz loc_406E76  +
cmp eax 20h +
jz loc_406E70  +
cmp eax 40h +
jnz loc_406E38  +
mov eax 1 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_10] eax +
mov eax ds:dword_4A8C98 +
mov [esp+1Ch+var_18] offset aSAddressSizeHa +
mov [esp+1Ch+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
mov [esp+1Ch+var_1C] 1 +
call sub_407CE0  +
lea esi [esi+0] +
xor eax eax +
add esp 1Ch +
retn   +
mov eax ds:dword_4A8C88 +
mov [esp+1Ch+var_1C] eax +
call sub_4101E0  +
jmp loc_406E25  +
***
push ebx  +
sub esp 24h +
mov eax ds:dword_4A8C88 +
lea ebx [esp+28h+var_10] +
mov eax [eax+4] +
mov eax [eax+24h] +
mov [esp+28h+var_20] ebx +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_24] 0 +
call eax  +
mov [esp+28h+var_1C] esi +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_20] 8 +
mov [esp+28h+var_24] 1 +
call fwrite  +
cmp eax 8 +
setnz al  +
add esp 24h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+28h+arg_0] +
lea ebx [esp+28h+var_C] +
mov [esp+28h+var_20] 4 +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_1C] eax +
call fread  +
mov edx 1 +
cmp eax 4 +
jz loc_406F30  +
add esp 28h +
mov eax edx +
pop ebx  +
retn   +
mov eax ds:dword_4A8C88 +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx [esp+28h+arg_4] +
mov [edx] eax +
xor edx edx +
add esp 28h +
mov eax edx +
pop ebx  +
retn   +
***
call sub_406E10  +
test eax eax +
jz loc_406F90  +
cmp eax 1 +
jnz loc_406F81  +
mov eax [esp+28h+arg_0] +
lea edx [esp+28h+var_10] +
call sub_406DB0  +
test eax eax +
mov ebx eax +
jz loc_406FAA  +
mov ebx 1 +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
xor ebx ebx +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call sub_406EF0  +
test eax eax +
mov ebx eax +
jnz loc_406F75  +
mov eax ds:dword_4A8C88 +
mov [esp+28h+var_28] eax +
call sub_410B00  +
mov eax [esp+28h+var_10] +
mov ecx [esp+28h+arg_4] +
mov [ecx] eax +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_8] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_C] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_18] eax +
call fread  +
cmp ebx eax +
setnz al  +
add esp 18h +
movzx eax al +
pop ebx  +
retn   +
***
mov eax ds:dword_4A8C88 +
mov edx [esp+28h+arg_4] +
lea ebx [esp+28h+var_C] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_20] 4 +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_1C] eax +
call fwrite  +
cmp eax 4 +
setnz al  +
add esp 28h +
movzx eax al +
pop ebx  +
retn   +
***
sub esp 1Ch +
call sub_406E10  +
test eax eax +
jz loc_407092  +
cmp eax 1 +
jz loc_407077  +
xor eax eax +
add esp 1Ch +
retn   +
mov edx [esp+1Ch+arg_4] +
xor ecx ecx +
mov eax [esp+1Ch+arg_0] +
call sub_406E90  +
test eax eax +
setnz al  +
add esp 1Ch +
movzx eax al +
retn   +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_407010  +
test eax eax +
setnz al  +
add esp 1Ch +
movzx eax al +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] 1 +
mov byte ptr [esp+2Ch+var_D] al +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_20] eax +
lea eax [esp+2Ch+var_D] +
mov [esp+2Ch+var_2C] eax +
call fwrite  +
cmp eax 1 +
setnz al  +
add esp 2Ch +
movzx eax al +
retn   +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_8] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_C] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_18] eax +
call fwrite  +
cmp ebx eax +
setnz al  +
add esp 18h +
movzx eax al +
pop ebx  +
retn   +
***
push edi  +
mov edi offset asc_47EE9B +
push esi  +
push ebx  +
sub esp 7Ch +
mov esi [esp+88h+arg_0] +
cmps   +
jnz loc_4071E0  +
mov ebp ds:_iob +
mov [esp+88h+var_88] ebp +
call ds:__imp__fileno  +
mov [esp+88h+var_84] 8000h +
mov [esp+88h+var_88] eax +
call ds:_setmode  +
lea esi [esp+88h+var_2C] +
mov [esp+88h+var_7C] ebp +
mov [esp+88h+var_80] 1 +
mov [esp+88h+var_84] 14h +
mov [esp+88h+var_88] esi +
call fread  +
cmp eax 1 +
jnz loc_40784E  +
mov eax ds:dword_4A4064 +
cmp eax 1 +
jz loc_4074D0  +
test eax eax +
jz loc_407220  +
lea edx [eax-2] +
cmp edx 1 +
jbe loc_407232  +
mov [esp+88h+var_7C] eax +
mov eax ds:dword_4A8C98 +
mov [esp+88h+var_84] offset aSDonTKnowHowTo +
mov [esp+88h+var_80] eax +
jmp loc_407899  +
mov eax [esp+88h+arg_0] +
mov [esp+88h+var_84] offset aRb_0 +
mov [esp+88h+var_88] eax +
call fopen  +
test eax eax +
mov ebp eax +
jnz loc_407180  +
mov eax [esp+88h+arg_0] +
mov [esp+88h+var_88] eax +
call perror  +
mov [esp+88h+var_88] 1 +
call sub_407CE0  +
lea esi [esi+0] +
mov edi offset aGmon +
mov ecx 4 +
cmps   +
jz loc_4074E2  +
mov [esp+88h+var_80] 0 +
mov [esp+88h+var_84] 0 +
mov [esp+88h+var_88] ebp +
mov ds:dword_4A4060 3 +
call fseek  +
test eax eax +
js loc_407201  +
lea eax [esp+88h+var_38] +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_88] ebp +
call sub_406F50  +
test eax eax +
jnz loc_40784E  +
lea eax [esp+88h+var_34] +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_88] ebp +
call sub_406F50  +
test eax eax +
jnz loc_40784E  +
lea eax [esp+88h+var_30] +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_88] ebp +
call sub_406EF0  +
test eax eax +
jnz loc_40784E  +
lea eax [esp+88h+var_44] +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_88] ebp +
call sub_406EF0  +
test eax eax +
mov ebx eax +
jnz loc_40784E  +
cmp [esp+88h+var_44] 51879h +
jz loc_407741  +
cmp ds:dword_4A4064 3 +
jz loc_40787D  +
call sub_406E10  +
mov esi 0Ch +
test eax eax +
jz loc_4072ED  +
cmp eax 1 +
mov si 14h +
cmovnz esi ebx +
mov [esp+88h+var_80] 0 +
mov [esp+88h+var_84] esi +
mov [esp+88h+var_88] ebp +
call fseek  +
test eax eax +
js loc_407201  +
mov ebx [esp+88h+var_30] +
sub ebx esi +
mov eax ebx +
shr eax 1 +
mov ecx eax +
mov [esp+88h+var_68] eax +
mov eax ds:dword_4A8CB0 +
test eax eax +
jz loc_40779B  +
mov edx [eax] +
cmp [esp+88h+var_38] edx +
jnz loc_407910  +
mov edx [eax+4] +
cmp [esp+88h+var_34] edx +
jnz loc_407910  +
cmp [eax+8] ecx +
jnz loc_407910  +
test byte ptr ds:dword_4A4088 40h +
jnz loc_407700  +
test ebx ebx +
js loc_4078F2  +
mov eax ds:dword_4A8CB0 +
mov ecx [eax+4] +
cmp [eax] ecx +
ja loc_4078F2  +
mov edx [esp+88h+var_68] +
lea esi [esp+88h+var_4E] +
test edx edx +
setnz al  +
xor ebx ebx +
movzx edx al +
test al al +
mov [esp+88h+var_60] edx +
jz loc_4073E9  +
mov [esp+88h+var_64] ebp +
nop   +
lea esi [esi+0] +
mov eax [esp+88h+var_64] +
mov [esp+88h+var_80] 1 +
mov [esp+88h+var_84] 2 +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_7C] eax +
call fread  +
cmp eax 1 +
jnz loc_407829  +
mov eax ds:dword_4A8CB0 +
mov eax [eax+0Ch] +
lea ebp [eax+ebx*4] +
mov eax ds:dword_4A8C88 +
add ebx 1 +
mov edi [ebp+0] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+88h+var_88] esi +
call eax  +
add edi eax +
cmp [esp+88h+var_68] ebx +
mov [ebp+0] edi +
ja loc_407390  +
mov ebp [esp+88h+var_64] +
mov [esp+88h+var_68] 0 +
lea ebx [esp+88h+var_4E+2] +
lea edi [esp+88h+var_48] +
lea esi [esi+0] +
mov [esp+88h+var_84] ebx +
mov [esp+88h+var_88] ebp +
call sub_406F50  +
test eax eax +
jz loc_407596  +
mov eax ds:dword_4A408C +
test eax eax +
jz loc_4076B5  +
xor ebx ebx +
cmp ds:_iob ebp +
jz loc_407433  +
mov [esp+88h+var_88] ebp +
call fclose  +
test byte ptr ds:dword_4A4084 20h +
jz loc_4074C6  +
mov eax ds:dword_4A405C +
mov [esp+88h+var_88] offset aFileSVersionDC +
mov [esp+88h+var_80] eax +
mov eax [esp+88h+arg_0] +
mov [esp+88h+var_84] eax +
call printf  +
mov ecx [esp+88h+var_60] +
mov edx offset aDHistogramReco +
mov eax offset aDHistogramRe_0 +
cmp ecx 1 +
cmovnz eax edx +
mov [esp+88h+var_84] ecx +
mov [esp+88h+var_88] eax +
call printf  +
mov ecx [esp+88h+var_68] +
mov edx offset aDCallGraphReco +
mov eax offset aDCallGraphRe_0 +
cmp ecx 1 +
cmovnz eax edx +
mov [esp+88h+var_84] ecx +
mov [esp+88h+var_88] eax +
call printf  +
cmp ebx 1 +
mov edx offset aDBasicBlockCou +
mov eax offset aDBasicBlockC_0 +
cmovnz eax edx +
mov [esp+88h+var_84] ebx +
mov [esp+88h+var_88] eax +
call printf  +
mov dword_47D338 0 +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi offset aGmon +
mov ecx 4 +
cmps   +
jnz loc_40787D  +
mov eax ds:dword_4A8C88 +
lea edx [esp+88h+var_28] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+88h+var_88] edx +
call eax  +
cmp eax 1 +
mov ds:dword_4A405C eax +
ja loc_4078B5  +
xor ebx ebx +
mov [esp+88h+var_68] 0 +
lea edi [esp+88h+var_38] +
mov [esp+88h+var_60] 0 +
mov [esp+88h+var_7C] ebp +
mov [esp+88h+var_80] 1 +
mov [esp+88h+var_84] 1 +
mov [esp+88h+var_88] edi +
call fread  +
cmp eax 1 +
jnz loc_407423  +
movzx eax byte ptr [esp+88h+var_38] +
cmp al 1 +
jz loc_407668  +
jb loc_407644  +
cmp al 2 +
jz loc_407622  +
mov [esp+88h+var_78] eax +
mov eax [esp+88h+arg_0] +
mov [esp+88h+var_84] offset aSSFoundBadTagD +
mov [esp+88h+var_7C] eax +
mov eax ds:dword_4A8C98 +
mov [esp+88h+var_80] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+88h+var_88] eax +
call fprintf  +
mov [esp+88h+var_88] 1 +
call sub_407CE0  +
mov [esp+88h+var_84] edi +
mov [esp+88h+var_88] ebp +
call sub_406F50  +
test eax eax +
jnz loc_407414  +
call sub_406E10  +
test eax eax +
jz loc_407690  +
cmp eax 1 +
jnz loc_407414  +
lea edx [esp+88h+var_40] +
mov eax ebp +
call sub_406DB0  +
test eax eax +
jnz loc_407414  +
add [esp+88h+var_68] 1 +
test byte ptr ds:dword_4A4088 40h +
mov esi [esp+88h+var_40] +
jz loc_407605  +
mov eax [esp+88h+var_48] +
mov [esp+88h+var_7C] esi +
mov [esp+88h+var_88] offset aGmon_out_readF +
mov [esp+88h+var_80] eax +
mov eax [esp+88h+var_4E+2] +
mov [esp+88h+var_84] eax +
call printf  +
mov eax [esp+88h+var_48] +
mov [esp+88h+var_80] esi +
mov [esp+88h+var_84] eax +
mov eax [esp+88h+var_4E+2] +
mov [esp+88h+var_88] eax +
call sub_402340  +
jmp loc_407400  +
mov eax [esp+88h+arg_0] +
add ebx 1 +
mov [esp+88h+var_88] ebp +
or ds:dword_4A4060 4 +
mov [esp+88h+var_84] eax +
call sub_4019A0  +
jmp loc_40751A  +
mov eax [esp+88h+arg_0] +
mov [esp+88h+var_88] ebp +
add [esp+88h+var_60] 1 +
or ds:dword_4A4060 1 +
mov [esp+88h+var_84] eax +
call sub_408990  +
jmp loc_40751A  +
mov eax [esp+88h+arg_0] +
mov [esp+88h+var_88] ebp +
add [esp+88h+var_68] 1 +
or ds:dword_4A4060 2 +
mov [esp+88h+var_84] eax +
call sub_402440  +
jmp loc_40751A  +
lea eax [esp+88h+var_40] +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_88] ebp +
call sub_406EF0  +
test eax eax +
jz loc_4075D3  +
mov eax ds:dword_4A408C +
test eax eax +
jnz loc_407421  +
call sub_407CF0  +
test eax eax +
mov ds:dword_4A408C eax +
jnz loc_407421  +
mov eax ds:_iob +
mov [esp+88h+var_80] 1Eh +
mov [esp+88h+var_84] 1 +
mov [esp+88h+var_88] offset aTimeIsInTicksN +
add eax 40h +
mov [esp+88h+var_7C] eax +
mov ds:dword_4A408C 1 +
call fwrite  +
jmp loc_407421  +
mov eax [esp+88h+var_30] +
mov [esp+88h+var_88] offset aGmon_out_readL +
mov [esp+88h+var_7C] eax +
mov eax [esp+88h+var_34] +
mov [esp+88h+var_80] eax +
mov eax [esp+88h+var_38] +
mov [esp+88h+var_84] eax +
call printf  +
mov eax [esp+88h+var_68] +
mov [esp+88h+var_84] ebx +
mov [esp+88h+var_88] offset aGmon_out_readS +
mov [esp+88h+var_80] eax +
call printf  +
jmp loc_407355  +
lea eax [esp+88h+var_40] +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_88] ebp +
call sub_406EF0  +
test eax eax +
jnz loc_40784E  +
mov ecx ds:dword_4A8CB0 +
test ecx ecx +
jz loc_40781B  +
mov eax ds:dword_4A408C +
cmp [esp+88h+var_40] eax +
jnz loc_4078DA  +
call sub_406E10  +
mov esi 20h +
test eax eax +
jz loc_4072ED  +
xor si si +
cmp eax 1 +
mov eax 28h +
cmovz esi eax +
jmp loc_4072ED  +
mov [esp+88h+var_88] 10h +
mov ds:dword_4A8CA0 1 +
call sub_462140  +
mov edx [esp+88h+var_38] +
mov ecx [esp+88h+var_68] +
lea edi ds:0[ecx*4] +
mov [eax] edx +
mov esi eax +
mov ds:dword_4A8CB0 eax +
mov eax [esp+88h+var_34] +
mov [esi+8] ecx +
mov [esi+4] eax +
sub eax edx +
shr eax 1 +
mov [esp+88h+var_5C] eax +
fild  [esp+88h+var_5C] +
mov [esp+88h+var_5C] ecx +
fild  [esp+88h+var_5C] +
fdivp st(1) st +
mov [esp+88h+var_88] edi +
fstp  ds:dbl_4A8CA8 +
call sub_462140  +
mov [esi+0Ch] eax +
mov eax ds:dword_4A8CB0 +
mov eax [eax+0Ch] +
mov [esp+88h+var_80] edi +
mov [esp+88h+var_84] 0 +
mov [esp+88h+var_88] eax +
call memset  +
jmp loc_407348  +
mov eax [esp+88h+var_40] +
mov ds:dword_4A408C eax +
jmp loc_407776  +
mov eax [esp+88h+var_68] +
sub ebx 1 +
mov [esp+88h+var_7C] ebx +
mov [esp+88h+var_84] offset aSUnexpectedEof +
mov [esp+88h+var_78] eax +
mov eax ds:dword_4A8C98 +
mov [esp+88h+var_80] eax +
jmp loc_40757A  +
mov eax [esp+88h+arg_0] +
mov [esp+88h+var_84] offset aSFileTooShortT +
mov [esp+88h+var_80] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+88h+var_88] eax +
call fprintf  +
mov [esp+88h+var_88] 1 +
call sub_407CE0  +
mov eax [esp+88h+arg_0] +
mov [esp+88h+var_84] offset aSFileSHasBadMa +
mov [esp+88h+var_7C] eax +
mov eax ds:dword_4A8C98 +
mov [esp+88h+var_80] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+88h+var_88] eax +
call fprintf  +
mov [esp+88h+var_88] 1 +
call sub_407CE0  +
mov [esp+88h+var_78] eax +
mov eax [esp+88h+arg_0] +
mov [esp+88h+var_84] offset aSFileSHasUnsup +
mov [esp+88h+var_7C] eax +
mov eax ds:dword_4A8C98 +
mov [esp+88h+var_80] eax +
jmp loc_40757A  +
mov eax [esp+88h+arg_0] +
mov [esp+88h+var_84] offset aSProfilingRate +
mov [esp+88h+var_80] eax +
jmp loc_407861  +
mov eax [esp+88h+arg_0] +
mov [esp+88h+var_84] offset aSFileSDoesNotA +
mov [esp+88h+var_7C] eax +
mov eax ds:dword_4A8C98 +
mov [esp+88h+var_80] eax +
jmp loc_407899  +
mov eax [esp+88h+arg_0] +
mov [esp+88h+var_84] offset aSIncompatibleW +
mov [esp+88h+var_80] eax +
jmp loc_407861  +
***
push esi  +
sub esp 1Ch +
retn   +
***
mov edx [eax] +
mov eax [esp+arg_4] +
mov ecx [eax] +
mov eax 1 +
fld  qword ptr [ecx+78h] +
fsub  qword ptr [edx+78h] +
fldz   +
fxch  st(1) +
fucomi st st(1) +
jbe loc_407D26  +
fstp  st +
fstp  st +
pop ebx  +
retn   +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
ja loc_407D50  +
mov ebx [edx+18h] +
cmp [ecx+18h] ebx +
ja loc_407D24  +
jb loc_407D50  +
mov eax [ecx+8] +
mov [esp+arg_4] eax +
mov eax [edx+8] +
mov [esp+arg_0] eax +
pop ebx  +
jmp strcmp  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov ebx ds:dword_4A8CB8 +
cmp ebx ds:dword_4A8CBC +
mov ecx ds:dword_4A8CA0 +
jnb loc_407F2F  +
nop   +
lea esi [esi+0] +
test ecx ecx +
mov edi [ebx] +
jz loc_407F19  +
mov eax ds:dword_4A8CB0 +
xor edx edx +
lea esi [esi+0] +
mov ebp [eax] +
cmp edi ebp +
jb loc_407F0F  +
cmp edi [eax+4] +
jb loc_40823F  +
add edx 1 +
add eax 10h +
cmp edx ecx +
jnz loc_407F00  +
shr edi 1 +
mov [ebx+80h] edi +
add ebx 0D8h +
cmp ebx ds:dword_4A8CBC +
jb loc_407EF0  +
test ecx ecx +
mov [esp+6Ch+var_1C] 0 +
jz loc_40821A  +
nop   +
mov eax [esp+6Ch+var_1C] +
mov ebp 1 +
mov edi ds:dword_4A4088 +
mov [esp+6Ch+var_34] 1 +
shl eax 4 +
mov [esp+6Ch+var_24] eax +
mov eax ds:dword_4A8CB0 +
add [esp+6Ch+var_24] eax +
mov eax [esp+6Ch+var_24] +
mov [esp+6Ch+var_30] edi +
mov ebx [eax] +
mov edx [eax+8] +
mov [esp+6Ch+var_20] ebx +
shr [esp+6Ch+var_20] 1 +
test edx edx +
jz loc_4081E8  +
mov edi [esp+6Ch+var_24] +
mov ebx [esp+6Ch+var_34] +
mov edx [edi+0Ch] +
mov eax ebx +
sub eax 1 +
mov ecx [edx+ebx*4-4] +
test ecx ecx +
jz loc_408167  +
fnstcw  [esp+6Ch+var_16] +
xor edx edx +
fld  ds:dbl_4A8CA8 +
mov dword ptr [esp+6Ch+var_14] eax +
mov ebx [esp+6Ch+var_20] +
mov dword ptr [esp+6Ch+var_14+4] edx +
xor edx edx +
fild  [esp+6Ch+var_14] +
movzx eax [esp+6Ch+var_16] +
fmul st st(1) +
mov ah 0Ch +
mov [esp+6Ch+var_18] ax +
fldcw  [esp+6Ch+var_18] +
fistp  [esp+6Ch+var_14] +
fldcw  [esp+6Ch+var_16] +
mov dword ptr [esp+6Ch+var_14+4] edx +
xor edx edx +
mov eax dword ptr [esp+6Ch+var_14] +
add eax ebx +
mov [esp+6Ch+var_44] eax +
mov eax [esp+6Ch+var_34] +
mov dword ptr [esp+6Ch+var_14] eax +
fild  [esp+6Ch+var_14] +
fmulp st(1) st +
fldcw  [esp+6Ch+var_18] +
fistp  [esp+6Ch+var_14] +
fldcw  [esp+6Ch+var_16] +
mov dword ptr [esp+6Ch+var_14+4] edx +
mov eax dword ptr [esp+6Ch+var_14] +
mov dword ptr [esp+6Ch+var_14] ecx +
fild  [esp+6Ch+var_14] +
add eax ebx +
test byte ptr [esp+6Ch+var_30] 40h +
mov [esp+6Ch+var_40] eax +
fstp  [esp+6Ch+var_2C] +
jnz loc_4081B6  +
fld  [esp+6Ch+var_2C] +
lea ebx [ebp-1] +
mov eax ebp +
fadd  ds:dbl_4A4098 +
mov edi ds:dword_4A8CB4 +
imul esi ebp +
mov dword ptr [esp+6Ch+var_3C] edi +
fstp  ds:dbl_4A4098 +
mov edi ebx +
jmp loc_4080B2  +
xor edx edx +
mov dword ptr [esp+6Ch+var_14] eax +
mov dword ptr [esp+6Ch+var_14+4] edx +
fild  [esp+6Ch+var_14] +
fmul  [esp+6Ch+var_2C] +
fdiv  ds:dbl_4A8CA8 +
mov ebp [ebp+0] +
mov [esp+6Ch+var_6C] offset dword_4A8CF0 +
mov dword ptr [esp+6Ch+var_68] ebp +
fstp  [esp+6Ch+var_3C] +
call sub_409A80  +
test eax eax +
jz loc_408182  +
mov eax ds:dword_4A8CB8 +
fld  [esp+6Ch+var_3C] +
add eax ebx +
fadd  qword ptr [eax+78h] +
fstp  qword ptr [eax+78h] +
mov eax ds:dword_4A8CB4 +
mov dword ptr [esp+6Ch+var_3C] eax +
mov eax ds:dword_4A4088 +
mov [esp+6Ch+var_30] eax +
add esi 0D8h +
mov eax edi +
cmp edi dword ptr [esp+6Ch+var_3C] +
jnb loc_408165  +
mov edx ds:dword_4A8CB8 +
lea ebx [esi-0D8h] +
add edi 1 +
lea ebp [edx+ebx] +
mov edx [edx+esi+80h] +
mov ecx [ebp+80h] +
cmp [esp+6Ch+var_40] ecx +
jb loc_408165  +
cmp [esp+6Ch+var_44] edx +
jnb loc_4080AA  +
mov eax [esp+6Ch+var_40] +
cmp eax edx +
cmova eax edx +
cmp [esp+6Ch+var_44] ecx +
cmovnb ecx [esp+6Ch+var_44] +
sub eax ecx +
jz loc_4080AA  +
test byte ptr [esp+6Ch+var_30] 40h +
jz loc_408050  +
mov dword ptr [esp+6Ch+var_3C] eax +
mov ecx [ebp+8] +
add edx edx +
mov dword ptr [esp+6Ch+var_3C+4] 0 +
mov ebp [ebp+0] +
fild  [esp+6Ch+var_3C] +
fmul  [esp+6Ch+var_2C] +
mov [esp+6Ch+var_54] eax +
mov dword ptr [esp+6Ch+var_68] ebp +
mov [esp+6Ch+var_60] ecx +
mov dword ptr [esp+6Ch+var_68+4] edx +
mov [esp+6Ch+var_6C] offset aAssign_samples +
fld  st +
fstp  [esp+6Ch+var_3C] +
fdiv  ds:dbl_4A8CA8 +
fstp  [esp+6Ch+var_5C] +
call printf  +
mov ebp ds:dword_4A8CB8 +
add ebp ebx +
fld  [esp+6Ch+var_3C] +
jmp loc_408062  +
mov ebp eax +
mov esi [esp+6Ch+var_34] +
mov ebx [esp+6Ch+var_24] +
mov eax esi +
add eax 1 +
cmp [ebx+8] esi +
jbe loc_4081E8  +
mov [esp+6Ch+var_34] eax +
jmp loc_407F84  +
mov eax ds:dword_4A8CF0 +
test eax eax +
jz loc_408222  +
mov eax ds:dword_4A8CB4 +
fld  [esp+6Ch+var_3C] +
fsubr  ds:dbl_4A4098 +
mov dword ptr [esp+6Ch+var_3C] eax +
mov eax ds:dword_4A4088 +
fstp  ds:dbl_4A4098 +
mov [esp+6Ch+var_30] eax +
jmp loc_4080AA  +
mov eax [esp+6Ch+var_40] +
mov [esp+6Ch+var_60] ecx +
mov [esp+6Ch+var_6C] offset aAssign_sampl_0 +
add eax eax +
mov dword ptr [esp+6Ch+var_68+4] eax +
mov eax [esp+6Ch+var_44] +
add eax eax +
mov dword ptr [esp+6Ch+var_68] eax +
call printf  +
mov eax ds:dword_4A4088 +
mov [esp+6Ch+var_30] eax +
jmp loc_408027  +
test byte ptr [esp+6Ch+var_30] 40h +
jz loc_408205  +
fld  ds:dbl_4A4098 +
fstp  [esp+6Ch+var_68] +
mov [esp+6Ch+var_6C] offset aAssign_sampl_1 +
call printf  +
add [esp+6Ch+var_1C] 1 +
mov eax [esp+6Ch+var_1C] +
cmp ds:dword_4A8CA0 eax +
ja loc_407F40  +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esp+6Ch+var_68] ebp +
mov [esp+6Ch+var_6C] offset unk_4A8CFC +
call sub_409A80  +
test eax eax +
jnz loc_40818F  +
jmp loc_408087  +
shr edi 1 +
xor edx edx +
fld  ds:dbl_4A8CA8 +
mov eax edi +
mov esi ds:dword_4A8C80 +
sub eax ebp +
mov [ebx+80h] edi +
mov dword ptr [esp+6Ch+var_14] eax +
mov dword ptr [esp+6Ch+var_14+4] edx +
shr esi 1 +
xor edx edx +
fild  [esp+6Ch+var_14] +
add esi edi +
fdiv st st(1) +
fnstcw  [esp+6Ch+var_16] +
movzx eax [esp+6Ch+var_16] +
mov ah 0Ch +
mov [esp+6Ch+var_18] ax +
fldcw  [esp+6Ch+var_18] +
fistp  [esp+6Ch+var_14] +
fldcw  [esp+6Ch+var_16] +
mov dword ptr [esp+6Ch+var_14+4] edx +
mov eax dword ptr [esp+6Ch+var_14] +
mov [esp+6Ch+var_44] eax +
mov eax esi +
sub eax ebp +
mov dword ptr [esp+6Ch+var_14] eax +
fild  [esp+6Ch+var_14] +
fdivrp st(1) st +
fldcw  [esp+6Ch+var_18] +
fistp  [esp+6Ch+var_14] +
fldcw  [esp+6Ch+var_16] +
mov eax dword ptr [esp+6Ch+var_14] +
cmp [esp+6Ch+var_44] eax +
jnb loc_407F21  +
test byte ptr ds:dword_4A4088 40h +
jnz loc_4082D1  +
mov [ebx+80h] esi +
jmp loc_407F21  +
mov dword ptr [esp+6Ch+var_68+4] esi +
mov dword ptr [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] offset aScale_and_alig +
call printf  +
mov esi ds:dword_4A8C80 +
mov ecx ds:dword_4A8CA0 +
shr esi 1 +
add esi [ebx+80h] +
jmp loc_4082C6  +
***
push esi  +
push ebx  +
sub esp 8Ch +
mov edi dword_47D338 +
test edi edi +
jz loc_408881  +
mov dword_47D338 0 +
mov esi ds:dword_4A4080 +
fldz   +
fstp  ds:dbl_4A40A0 +
test esi esi +
jz loc_408870  +
mov ebx dword_47D33C +
test ebx ebx +
jnz loc_408892  +
mov eax ds:dword_4A8CB4 +
shl eax 2 +
mov [esp+8Ch+var_8C] eax +
call sub_462140  +
mov ebx ds:dword_4A8CB4 +
test ebx ebx +
mov esi eax +
jz loc_40837F  +
mov edx ds:dword_4A8CB8 +
lea ecx [esi+ebx*4] +
nop   +
lea esi [esi+0] +
mov [eax] edx +
add eax 4 +
add edx 0D8h +
cmp eax ecx +
jnz loc_408370  +
mov dword ptr [esp+8Ch+var_80] offset sub_407D00 +
mov edi 5 +
mov dword ptr [esp+8Ch+var_88+4] 4 +
mov dword ptr [esp+8Ch+var_88] ebx +
mov [esp+8Ch+var_8C] esi +
call qsort  +
mov ecx ds:dword_4A4080 +
test ecx ecx +
jnz loc_408460  +
mov eax ds:dword_4A8CB4 +
test eax eax +
jz loc_4088B3  +
mov ecx esi +
xor ebp ebp +
lea edi [esi+eax*4] +
fldz   +
mov ebx [ecx] +
mov eax [ebx+18h] +
test eax eax +
jz loc_4083F2  +
fld  qword ptr [ebx+78h] +
xor edx edx +
fadd  qword ptr [ebx+90h] +
mov dword ptr [esp+8Ch+var_54] eax +
mov dword ptr [esp+8Ch+var_54+4] edx +
fild  [esp+8Ch+var_54] +
fdivp st(1) st +
fucomi st st(1) +
jbe loc_4083F0  +
fstp  st(1) +
mov ebp ebx +
jmp loc_4083F2  +
fstp  st +
add ecx 4 +
cmp ecx edi +
jnz loc_4083C4  +
xor edi edi +
test ebp ebp +
jz loc_408450  +
mov edx [ebp+18h] +
test edx edx +
jz loc_408454  +
fldz   +
fxch  st(1) +
fucomi st st(1) +
fstp  st(1) +
jbe loc_408458  +
fild  ds:dword_4A408C +
fdivp st(1) st +
fld1   +
lea esi [esi+0] +
mov eax edi +
shl eax 4 +
fld  qword ptr [eax+47FEC8h] +
fmul st st(2) +
fucomi st st(1) +
jb loc_408440  +
fld  ds:flt_47FF74 +
fucomip st st(1) +
fstp  st +
jbe loc_408442  +
jmp loc_40845C  +
fstp  st +
add edi 1 +
cmp edi 0Bh +
jnz loc_408420  +
fstp  st +
fstp  st +
jmp loc_408460  +
fstp  st +
jmp loc_408460  +
fstp  st +
jmp loc_408460  +
fstp  st +
jmp loc_408460  +
fstp  st +
fstp  st +
movsx eax byte_47D360 +
lea ebx [esp+8Ch+var_4C] +
mov dword ptr [esp+8Ch+var_88] offset aCCCall +
mov [esp+8Ch+var_8C] ebx +
mov dword ptr [esp+8Ch+var_80] eax +
mov eax edi +
shl eax 4 +
movsx eax ds:byte_47FEC0[eax] +
mov dword ptr [esp+8Ch+var_88+4] eax +
call sprintf  +
mov eax ds:dword_4A4080 +
test eax eax +
jz loc_408800  +
fnstcw  [esp+8Ch+var_56] +
fld  ds:dbl_4A8CA8 +
mov [esp+8Ch+var_8C] offset aGranularityEac +
movzx eax [esp+8Ch+var_56] +
mov ah 0Ch +
mov [esp+8Ch+var_58] ax +
fldcw  [esp+8Ch+var_58] +
fistp  [esp+8Ch+var_5C] +
fldcw  [esp+8Ch+var_56] +
mov eax [esp+8Ch+var_5C] +
add eax eax +
mov dword ptr [esp+8Ch+var_88] eax +
call printf  +
fld  ds:dbl_4A4098 +
fldz   +
fxch  st(1) +
fucomi st st(1) +
fstp  st(1) +
jbe loc_408514  +
fild  ds:dword_4A408C +
fdivr st st(1) +
mov dword ptr [esp+8Ch+var_78] offset aSeconds +
mov [esp+8Ch+var_8C] offset aFor_2fOf_2fS +
fstp  [esp+8Ch+var_80] +
fdivr  ds:flt_47FF78 +
fstp  [esp+8Ch+var_88] +
call printf  +
fld  ds:dbl_4A4098 +
fldz   +
fucomip st st(1) +
fstp  st +
jnb loc_408836  +
mov [esp+8Ch+var_70] offset unk_47FC05 +
shl edi 4 +
mov dword ptr [esp+8Ch+var_78+4] offset aTotal +
mov dword ptr [esp+8Ch+var_78] offset aSelf +
mov dword ptr [esp+8Ch+var_80+4] offset unk_47FC05 +
mov dword ptr [esp+8Ch+var_80] offset aSelf +
mov dword ptr [esp+8Ch+var_88+4] offset aCumulative +
mov dword ptr [esp+8Ch+var_88] offset asc_47FC1F +
mov [esp+8Ch+var_8C] offset a5_5s10_10s8_8s +
call printf  +
mov dword ptr [esp+8Ch+var_78+4] ebx +
mov dword ptr [esp+8Ch+var_78] ebx +
xor ebx ebx +
mov [esp+8Ch+var_70] offset aName +
mov dword ptr [esp+8Ch+var_80+4] offset aCalls +
mov dword ptr [esp+8Ch+var_80] offset aSeconds +
mov dword ptr [esp+8Ch+var_88+4] offset aSeconds +
mov dword ptr [esp+8Ch+var_88] offset aTime +
mov [esp+8Ch+var_8C] offset a5_5s9_9s8_8s8_ +
call printf  +
mov eax ds:dword_4A8CB4 +
test eax eax +
jnz loc_4086B9  +
jmp loc_4087A0  +
mov eax [ebp+18h] +
fld  qword ptr [ebp+78h] +
test eax eax +
jnz loc_4085D0  +
fldz   +
fxch  st(1) +
fucomi st st(1) +
fstp  st(1) +
jnp loc_4087F0  +
nop   +
fld  ds:dbl_4A40A0 +
fadd st st(1) +
mov ecx ds:dword_4A4080 +
fst  ds:dbl_4A40A0 +
fild  ds:dword_4A408C +
test ecx ecx +
fld  st(2) +
fdiv st st(1) +
fxch  st(2) +
fdivrp st(1) st +
fld  ds:dbl_4A4098 +
fldz   +
fld  st +
jz loc_408730  +
fxch  st(2) +
fucomi st st(2) +
fstp  st(2) +
jbe loc_4087D0  +
fstp  st +
fxch  st(3) +
fmul  ds:flt_47FF78 +
fdivrp st(3) st +
fxch  st(1) +
fstp  [esp+8Ch+var_78] +
fstp  [esp+8Ch+var_80] +
fstp  [esp+8Ch+var_88] +
mov [esp+8Ch+var_8C] offset a5_1f10_2f8_2f +
call printf  +
mov ecx [ebp+18h] +
test ecx ecx +
jz loc_408702  +
fld  qword ptr [ebp+78h] +
xor edx edx +
fild  ds:dword_4A408C +
mov dword ptr [esp+8Ch+var_54] ecx +
mov dword ptr [esp+8Ch+var_54+4] edx +
fild  [esp+8Ch+var_54] +
fld  qword ptr [ebp+90h] +
fadd st st(3) +
mov dword ptr [esp+8Ch+var_88] ecx +
mov [esp+8Ch+var_8C] offset a8lu8_2f8_2f +
fld  [esp+8Ch+var_64] +
fmul st(1) st +
fxch  st(1) +
fdiv st st(3) +
fdiv st st(2) +
fstp  [esp+8Ch+var_80+4] +
fmulp st(3) st +
fxch  st(2) +
fdivrp st(1) st +
fdivrp st(1) st +
fstp  [esp+8Ch+var_88+4] +
call printf  +
mov edx ds:dword_4A4080 +
mov [esp+8Ch+var_8C] ebp +
test edx edx +
jz loc_4086F8  +
call sub_40A5F0  +
mov [esp+8Ch+var_8C] 0Ah +
call putchar  +
add ebx 1 +
cmp ds:dword_4A8CB4 ebx +
jbe loc_4087A0  +
mov eax [esi+ebx*4] +
mov ebp [eax] +
mov [esp+8Ch+var_8C] offset dword_4A8CF0 +
mov dword ptr [esp+8Ch+var_88] ebp +
call sub_409A80  +
test eax eax +
jz loc_408767  +
mov eax dword_47D340 +
fld  qword ptr [edi+47FEC8h] +
fstp  [esp+8Ch+var_64] +
mov ebp [esi+ebx*4] +
test eax eax +
jnz loc_4085B7  +
fld  qword ptr [ebp+78h] +
jmp loc_4085D0  +
call sub_40A410  +
lea esi [esi+0] +
jmp loc_40869E  +
mov dword ptr [esp+8Ch+var_80] offset unk_47FC05 +
mov dword ptr [esp+8Ch+var_88+4] offset unk_47FC05 +
mov dword ptr [esp+8Ch+var_88] offset unk_47FC05 +
mov [esp+8Ch+var_8C] offset a8_8s8_8s8_8s +
call printf  +
jmp loc_40868C  +
fxch  st(2) +
fucomi st st(2) +
fstp  st(2) +
jbe loc_4087E0  +
fstp  st +
fxch  st(3) +
fmul  ds:flt_47FF78 +
fdivrp st(3) st +
fxch  st(1) +
fstp  [esp+8Ch+var_78] +
fstp  [esp+8Ch+var_80] +
fstp  [esp+8Ch+var_88] +
mov [esp+8Ch+var_8C] offset a6_2f9_2f8_2f +
call printf  +
jmp loc_408636  +
mov eax ds:dword_4A8CF0 +
test eax eax +
jnz loc_4086AA  +
mov dword ptr [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] offset unk_4A8CFC +
call sub_409A80  +
test eax eax +
jz loc_4086D6  +
add ebx 1 +
cmp ds:dword_4A8CB4 ebx +
ja loc_4086B9  +
nop   +
lea esi [esi+0] +
mov [esp+8Ch+var_8C] esi +
call free  +
mov eax dword_47D33C +
test eax eax +
jz loc_4087BE  +
mov eax ds:dword_4A4080 +
test eax eax +
jz loc_408850  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
fstp  st(4) +
fstp  st +
fxch  st(1) +
fxch  st(2) +
fxch  st(2) +
jmp loc_40861E  +
fstp  st(4) +
fstp  st +
fxch  st(1) +
fxch  st(2) +
fxch  st(2) +
jmp loc_40874A  +
jnz loc_4085D0  +
fstp  st +
jmp loc_4086AA  +
fild  ds:dword_4A408C +
fdivr  ds:flt_47FF70 +
mov dword ptr [esp+8Ch+var_80] offset aSeconds +
mov [esp+8Ch+var_8C] offset aEachSampleCoun +
fstp  [esp+8Ch+var_88] +
call printf  +
fld  ds:dbl_4A4098 +
fldz   +
fucomip st st(1) +
fstp  st +
jb loc_408520  +
mov [esp+8Ch+var_8C] offset aNoTimeAccumula +
call puts  +
fld1   +
fstp  ds:dbl_4A4098 +
jmp loc_408520  +
mov eax ds:_iob +
add eax 20h +
mov [esp+8Ch+var_8C] eax +
call sub_40B8F0  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+8Ch+var_8C] offset aFlatProfile +
call puts  +
jmp loc_408346  +
mov [esp+8Ch+var_8C] offset unk_47FB58 +
call puts  +
jmp loc_408322  +
mov [esp+8Ch+var_8C] offset aFlatProfile_0 +
call puts  +
mov eax ds:_iob +
add eax 20h +
mov [esp+8Ch+var_8C] eax +
call sub_40B8F0  +
jmp loc_408346  +
xor edi edi +
jmp loc_408460  +
***
mov ecx [esp+arg_0] +
test ebx ebx +
jz loc_4088E9  +
mov eax ds:dword_4A8CB0 +
xor edx edx +
cmp [eax] ecx +
ja loc_4088DF  +
cmp ecx [eax+4] +
jb loc_4088F0  +
add edx 1 +
add eax 10h +
cmp edx ebx +
jnz loc_4088D6  +
xor eax eax +
pop ebx  +
retn   +
mov eax 1 +
pop ebx  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov ebp ds:dword_4A8CA0 +
lea eax [esp+7Ch+var_1C] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_406F50  +
test eax eax +
jnz loc_408D95  +
lea eax [esp+7Ch+var_18] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_406F50  +
test eax eax +
jnz loc_408D95  +
lea eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_406EF0  +
test eax eax +
jnz loc_408D95  +
lea eax [esp+7Ch+var_30] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_406EF0  +
test eax eax +
jnz loc_408D95  +
lea eax [esp+7Ch+var_2C] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] 0Fh +
mov [esp+7Ch+var_7C] eax +
call sub_406FD0  +
test eax eax +
jnz loc_408D95  +
mov eax [esp+7Ch+arg_0] +
lea ebx [esp+4Ah] +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_78] ebx +
mov [esp+7Ch+var_7C] eax +
call sub_406FD0  +
test eax eax +
jnz loc_408D95  +
mov eax [esp+7Ch+var_18] +
xor edx edx +
mov edi [esp+7Ch+var_1C] +
mov dword ptr [esp+7Ch+var_4C+4] edx +
mov [esp+7Ch+var_44] eax +
sub eax edi +
shr eax 1 +
test ebp ebp +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_14] +
fild  [esp+7Ch+var_40] +
mov dword ptr [esp+7Ch+var_4C] eax +
fild  [esp+7Ch+var_4C] +
fdivp st(1) st +
jz loc_408CB0  +
lea eax [esp+7Ch+var_2C] +
mov [esp+7Ch+var_74] 0Fh +
fstp  [esp+7Ch+var_54] +
mov [esp+7Ch+var_78] offset aSeconds +
mov [esp+7Ch+var_7C] eax +
call strncmp  +
test eax eax +
fld  [esp+7Ch+var_54] +
jnz loc_408E20  +
movsx edx [esp+7Ch+var_32] +
movsx eax byte_47D360 +
cmp dl al +
jnz loc_408DE0  +
fsubr  ds:dbl_4A8CA8 +
fabs   +
fld  ds:dbl_47FF80 +
fxch  st(1) +
fucomip st st(1) +
fstp  st +
ja loc_408DCD  +
mov ebp ds:dword_4A8CA0 +
test ebp ebp +
jz loc_408BE8  +
mov eax ds:dword_4A8CB0 +
xor edx edx +
mov ecx [esp+7Ch+var_44] +
jmp loc_408B1E  +
add edx 1 +
add eax 10h +
cmp edx ebp +
jz loc_408BE8  +
cmp [eax] edi +
mov esi eax +
jnz loc_408B10  +
cmp [eax+4] ecx +
jnz loc_408B10  +
test byte ptr ds:dword_4A4088 40h +
jnz loc_408D00  +
mov eax [esi+8] +
xor edi edi +
test eax eax +
jnz loc_408B50  +
jmp loc_408BE0  +
add edi 1 +
cmp [esi+8] edi +
jbe loc_408BE0  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_78] 2 +
mov [esp+7Ch+var_7C] ebx +
mov [esp+7Ch+var_70] eax +
call fread  +
cmp eax 1 +
jnz loc_408D25  +
mov eax [esi+0Ch] +
lea edx [eax+edi*4] +
mov eax ds:dword_4A8C88 +
mov ebp [edx] +
mov [esp+7Ch+var_44] edx +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+7Ch+var_7C] ebx +
call eax  +
mov edx [esp+7Ch+var_44] +
add ebp eax +
mov [edx] ebp +
test byte ptr ds:dword_4A4088 40h +
jz loc_408B44  +
mov eax [esi+0Ch] +
xor edx edx +
mov ecx [esi] +
mov eax [eax+edi*4] +
mov [esp+7Ch+var_74] eax +
mov eax [esi+4] +
sub eax ecx +
imul eax edi +
add edi 1 +
div  dword ptr [esi+8] +
mov [esp+7Ch+var_7C] offset aHist_read_rec0 +
add eax ecx +
mov [esp+7Ch+var_78] eax +
call printf  +
cmp [esi+8] edi +
ja loc_408B50  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+7Ch+var_44] +
mov [esp+7Ch+var_30] edi +
mov [esp+7Ch+var_2C] eax +
lea eax [esp+7Ch+var_2C] +
mov [esp+7Ch+var_78] eax +
lea eax [esp+7Ch+var_30] +
mov [esp+7Ch+var_7C] eax +
call sub_408900  +
mov eax [esp+7Ch+var_2C] +
cmp [esp+7Ch+var_30] eax +
jnz loc_408D68  +
mov eax ds:dword_4A8CA0 +
add eax 1 +
shl eax 4 +
mov [esp+7Ch+var_78] eax +
mov eax ds:dword_4A8CB0 +
mov [esp+7Ch+var_7C] eax +
call sub_4621C0  +
mov edx ds:dword_4A8CA0 +
shl edx 4 +
mov ds:dword_4A8CB0 eax +
add eax edx +
mov edx [esp+7Ch+var_1C] +
mov [eax] edx +
mov edx [esp+7Ch+var_18] +
mov [eax+4] edx +
mov edx [esp+7Ch+var_14] +
mov [eax+8] edx +
mov edx [esp+7Ch+var_10] +
mov [eax+0Ch] edx +
mov eax ds:dword_4A8CA0 +
mov esi eax +
add eax 1 +
shl esi 4 +
add esi ds:dword_4A8CB0 +
mov ds:dword_4A8CA0 eax +
mov eax [esi+8] +
shl eax 2 +
mov [esp+7Ch+var_7C] eax +
call sub_462140  +
mov ecx [esi+8] +
lea edx ds:0[ecx*4] +
mov [esi+0Ch] eax +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] eax +
call memset  +
jmp loc_408B29  +
mov eax [esp+7Ch+var_30] +
fstp  ds:dbl_4A8CA8 +
mov ds:dword_4A408C eax +
mov eax [esp+7Ch+var_2C] +
mov dword ptr aSeconds eax +
mov eax [esp+7Ch+var_28] +
mov dword ptr aSeconds+4 eax +
mov eax [esp+7Ch+var_24] +
mov dword_47D369 eax +
movzx eax [esp+7Ch+var_20] +
mov word_47D36D ax +
movzx eax [esp+7Ch+var_1E] +
mov byte_47D36F al +
movzx eax [esp+7Ch+var_32] +
mov byte_47D360 al +
jmp loc_408AF5  +
mov edi [esi+8] +
mov edx [esi+4] +
mov eax [esi] +
mov [esp+7Ch+var_7C] offset aHist_read_recN +
mov [esp+7Ch+var_70] edi +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] eax +
call printf  +
jmp loc_408B36  +
mov eax [esi+8] +
mov [esp+7Ch+var_6C] edi +
mov [esp+7Ch+var_78] offset aSSUnexpectedEo +
mov [esp+7Ch+var_68] eax +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_70] eax +
mov eax ds:dword_4A8C98 +
mov [esp+7Ch+var_74] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+7Ch+var_7C] eax +
call fprintf  +
mov [esp+7Ch+var_7C] 1 +
call sub_407CE0  +
mov eax ds:dword_4A8C98 +
mov [esp+7Ch+var_78] offset aSOverlappingHi +
mov [esp+7Ch+var_74] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+7Ch+var_7C] eax +
call fprintf  +
mov [esp+7Ch+var_7C] 1 +
call sub_407CE0  +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_78] offset aSSUnexpectedEn +
mov [esp+7Ch+var_70] eax +
mov eax ds:dword_4A8C98 +
mov [esp+7Ch+var_74] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+7Ch+var_7C] eax +
call fprintf  +
mov [esp+7Ch+var_7C] 1 +
call sub_407CE0  +
mov eax ds:dword_4A8C98 +
mov [esp+7Ch+var_78] offset aSDifferentScal +
mov [esp+7Ch+var_74] eax +
jmp loc_408D79  +
fstp  st +
mov ecx ds:dword_4A8C98 +
mov [esp+7Ch+var_64] edx +
mov [esp+7Ch+var_6C] eax +
mov [esp+7Ch+var_78] offset aSDimensionAbbr +
mov [esp+7Ch+var_68] ecx +
mov [esp+7Ch+var_70] ecx +
mov [esp+7Ch+var_74] ecx +
mov eax ds:_iob +
add eax 40h +
mov [esp+7Ch+var_7C] eax +
call fprintf  +
mov [esp+7Ch+var_7C] 1 +
call sub_407CE0  +
fstp  st +
mov eax ds:dword_4A8C98 +
lea ecx [esp+7Ch+var_2C] +
mov [esp+7Ch+var_64] ecx +
mov [esp+7Ch+var_6C] offset aSeconds +
mov [esp+7Ch+var_78] offset aSDimensionUnit +
mov [esp+7Ch+var_68] eax +
mov [esp+7Ch+var_70] eax +
mov [esp+7Ch+var_74] eax +
jmp loc_408E04  +
***
push ebx  +
sub esp 10h +
mov ebx ds:dword_4A40A8 +
mov esi [esp+10h+arg_0] +
test ebx ebx +
jnz loc_408E6C  +
jmp loc_408E88  +
mov ebx [ebx] +
test ebx ebx +
jz loc_408E88  +
mov eax [ebx+4] +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
call sub_461F50  +
test eax eax +
jnz loc_408E66  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] 18h +
call sub_462140  +
mov ecx 18h +
test al 1 +
mov ebx eax +
mov edx eax +
jnz loc_408EE1  +
test dl 2 +
jnz loc_408EEB  +
mov edi ecx +
xor eax eax +
and edi 0FFFFFFFCh +
mov dword ptr [edx+eax] 0 +
add eax 4 +
cmp eax edi +
jb loc_408EAD  +
add edx eax +
test cl 2 +
jnz loc_408EFE  +
and ecx 1 +
jnz loc_408EF9  +
mov [esp+10h+var_10] esi +
call sub_462210  +
mov [ebx+4] eax +
mov eax ds:dword_4A40A8 +
mov ds:dword_4A40A8 ebx +
mov [ebx] eax +
jmp loc_408E7F  +
mov byte ptr [eax] 0 +
lea edx [eax+1] +
mov cl 17h +
jmp loc_408EA1  +
xor edi edi +
add edx 2 +
mov [edx-2] di +
sub ecx 2 +
jmp loc_408EA6  +
mov byte ptr [edx] 0 +
jmp loc_408EC7  +
xor eax eax +
add edx 2 +
mov [edx-2] ax +
jmp loc_408EC2  +
***
push ebx  +
sub esp 10h +
mov esi ds:dword_4A40A8 +
mov edi [esp+10h+arg_0] +
test esi esi +
jnz loc_408F2C  +
jmp loc_408F60  +
mov esi [esi] +
test esi esi +
jz loc_408F60  +
mov ebx [esi+4] +
mov [esp+10h+var_C] 2Fh +
mov [esp+10h+var_10] ebx +
call strrchr  +
mov [esp+10h+var_10] edi +
test eax eax +
lea edx [eax+1] +
cmovnz ebx edx +
mov [esp+10h+var_C] ebx +
call sub_461F50  +
test eax eax +
jnz loc_408F26  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
xor esi esi +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
lea ebp [eax-1] +
jmp loc_409457  +
mov esi eax +
sub esi edi +
lea eax [esi+8] +
mov [esp+1Ch+var_1C] eax +
call sub_462140  +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] edi +
mov ebx eax +
lea eax [eax+4] +
mov [esp+1Ch+var_1C] eax +
call memcpy  +
mov eax [esp+1Ch+arg_0] +
mov byte ptr [ebx+esi+4] 0 +
mov dword ptr [ebx] 0 +
mov eax [eax+4] +
test eax eax +
jz loc_409480  +
mov [eax] ebx +
mov eax [esp+1Ch+arg_0] +
test ebp ebp +
mov [eax+4] ebx +
jz loc_409491  +
lea edi [ebp+1] +
mov [esp+1Ch+var_18] 3Bh +
mov [esp+1Ch+var_1C] edi +
call strchr  +
test eax eax +
mov ebp eax +
jnz loc_409410  +
mov [esp+1Ch+var_1C] edi +
call strlen  +
mov esi eax +
jmp loc_409414  +
mov eax [esp+1Ch+arg_0] +
test ebp ebp +
mov [eax] ebx +
mov eax [esp+1Ch+arg_0] +
mov [eax+4] ebx +
jnz loc_409457  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 1 +
mov ecx [esp+arg_0] +
mov ebx [edx] +
cmp [ecx] ebx +
ja loc_4094D4  +
jb loc_4094E2  +
movzx edx byte ptr [edx+14h] +
movzx ecx byte ptr [ecx+14h] +
mov eax edx +
xor eax ecx +
test al 1 +
jnz loc_4094D6  +
shr cl 1 +
mov eax ecx +
shr dl 1 +
and eax 1 +
and edx 1 +
sub eax edx +
pop ebx  +
retn   +
mov eax edx +
and ecx 1 +
and eax 1 +
sub eax ecx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
mov edx [esp+arg_0] +
mov ebx 0D8h +
test dl 1 +
mov edi edx +
jnz loc_409550  +
test edi 2 +
jnz loc_409560  +
mov ecx ebx +
xor eax eax +
shr ecx 2 +
test bl 2 +
stos   +
jz loc_409521  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and ebx 1 +
jz loc_409529  +
mov byte ptr [edi] 0 +
fldz   +
fst  qword ptr [edx+78h] +
fst  qword ptr [edx+90h] +
fst  qword ptr [edx+0A8h] +
fst  qword ptr [edx+0B0h] +
fstp  qword ptr [edx+0B8h] +
pop ebx  +
pop edi  +
retn   +
lea edi [edx+1] +
mov bl 0D7h +
test edi 2 +
mov byte ptr [edx] 0 +
jz loc_40950A  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub ebx 2 +
jmp loc_40950A  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+3Ch+arg_0] +
mov eax [ebp+0] +
test eax eax +
jnz loc_409590  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebp+4] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_30] offset sub_4094A0 +
mov [esp+3Ch+var_34] 0D8h +
mov [esp+3Ch+var_3C] edx +
call qsort  +
mov ebx [ebp+4] +
cmp ebx [ebp+8] +
mov eax [ebx] +
lea esi [eax+1] +
jnb loc_40993B  +
mov edi ds:dword_4A4088 +
mov edx ebx +
mov [esp+3Ch+arg_0] ebp +
mov ebp edx +
mov edx eax +
mov [esp+3Ch+var_18] edi +
jmp loc_40962E  +
mov eax [esp+3Ch+arg_0] +
cmp [eax+4] ebp +
jnb loc_4095F2  +
mov eax [ebp-0D4h] +
test eax eax +
jnz loc_4095F2  +
lea eax [edx-1] +
mov [ebp-0D4h] eax +
mov eax [ebx+4] +
test eax eax +
jz loc_4095FD  +
cmp eax edx +
jb loc_409610  +
mov edi ebp +
mov esi ebx +
mov ecx 36h +
add ebp 0D8h +
movs   +
mov esi [ebx] +
mov eax [esp+3Ch+var_18] +
and eax 1080h +
mov edi [esp+3Ch+arg_0] +
add ebx 0D8h +
cmp [edi+8] ebx +
jbe loc_409721  +
mov edx [ebx] +
cmp edx esi +
jnz loc_4095D6  +
movzx ecx byte ptr [ebx+14h] +
movzx edi byte ptr [ebp-0C4h] +
mov eax ecx +
and eax 2 +
mov byte ptr [esp+3Ch+var_14] al +
jnz loc_409780  +
test edi 2 +
jz loc_409780  +
mov eax [esp+3Ch+var_18] +
and eax 1080h +
jz loc_4096FD  +
mov eax edi +
and eax 1 +
cmp al 1 +
mov eax edi +
mov edi [ebp-0D0h] +
sbb esi esi +
and eax 2 +
and esi 20h +
add esi 46h +
cmp al 1 +
sbb eax eax +
and ecx 1 +
and eax 0FFFFFFE0h +
add eax 74h +
cmp cl 1 +
sbb ecx ecx +
and ecx 20h +
add ecx 46h +
cmp byte ptr [esp+3Ch+var_14] 1 +
mov [esp+3Ch+var_18] edi +
mov [esp+3Ch+var_10] edx +
mov edx [ebx+8] +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+var_18] +
sbb edi edi +
and edi 0FFFFFFE0h +
add edi 74h +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_30] ecx +
mov [esp+3Ch+var_24] esi +
mov [esp+3Ch+var_2C] eax +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_3C] offset aSymtab_finaliz +
call printf  +
mov eax [ebx] +
mov [esp+3Ch+var_3C] offset aAddrLx +
mov [esp+3Ch+var_38] eax +
call printf  +
mov eax ds:dword_4A4088 +
mov edx [esp+3Ch+var_10] +
mov [esp+3Ch+var_18] eax +
and eax 1080h +
mov esi ebx +
mov ecx 36h +
lea edi [ebp-0D8h] +
add ebx 0D8h +
movs   +
mov edi [esp+3Ch+arg_0] +
mov esi edx +
cmp [edi+8] ebx +
ja loc_40962C  +
mov edx ebp +
mov ebp [esp+3Ch+arg_0] +
mov ecx edx +
mov ebx edx +
mov [esp+3Ch+var_18] eax +
sub ecx [ebp+4] +
mov eax [ebp+0] +
test eax eax +
jz loc_409758  +
mov edi [edx-0D4h] +
test edi edi +
jnz loc_409758  +
mov edi ds:dword_4A8C90 +
mov esi [edi+1Ch] +
add esi [edi+24h] +
sub esi 1 +
mov [edx-0D4h] esi +
mov esi [esp+3Ch+var_18] +
test esi esi +
jnz loc_4098A5  +
sar ecx 3 +
imul ecx ecx +
mov [ebp+8] edx +
mov [ebp+0] ecx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edi +
xor eax ecx +
test al 2 +
jnz loc_4097D0  +
test cl 1 +
jz loc_409799  +
test edi 1 +
jz loc_409658  +
test al 1 +
jnz loc_4097D0  +
mov eax [ebx+8] +
movzx esi byte ptr [eax] +
mov [esp+3Ch+var_10] eax +
mov eax esi +
cmp al 5Fh +
jz loc_409882  +
mov eax [ebp-0D0h] +
cmp byte ptr [eax] 5Fh +
jz loc_409658  +
mov eax esi +
test al al +
jnz loc_409882  +
lea esi [esi+0] +
mov eax [esp+3Ch+var_18] +
mov esi edx +
and eax 1080h +
jz loc_409619  +
and ecx 1 +
cmp cl 1 +
mov ecx [ebx+8] +
sbb edx edx +
and edx 20h +
add edx 46h +
cmp byte ptr [esp+3Ch+var_14] 1 +
mov [esp+3Ch+var_14] ecx +
mov ecx edi +
sbb eax eax +
and ecx 1 +
and eax 0FFFFFFE0h +
add eax 74h +
cmp cl 1 +
sbb ecx ecx +
mov [esp+3Ch+var_18] ecx +
mov ecx edi +
mov edi [ebp-0D0h] +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+var_14] +
and ecx 2 +
and [esp+3Ch+var_18] 20h +
add [esp+3Ch+var_18] 46h +
cmp cl 1 +
sbb ecx ecx +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+var_18] +
and ecx 0FFFFFFE0h +
add ecx 74h +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] offset aSymtab_finaliz +
call printf  +
mov eax [ebx] +
mov [esp+3Ch+var_3C] offset aAddrLx +
mov [esp+3Ch+var_38] eax +
call printf  +
mov eax ds:dword_4A4088 +
mov [esp+3Ch+var_18] eax +
and eax 1080h +
jmp loc_409619  +
mov eax [esp+3Ch+var_10] +
cmp byte ptr [eax+1] 5Fh +
jz loc_4097D0  +
mov eax [ebp-0D0h] +
cmp byte ptr [eax+1] 5Fh +
jnz loc_4097D0  +
jmp loc_409658  +
sar ecx 3 +
imul ecx ecx +
mov [esp+3Ch+var_3C] offset aSymtab_final_0 +
mov [esp+3Ch+var_18] edx +
add eax ecx +
mov [esp+3Ch+var_38] eax +
call printf  +
mov eax [ebp+4] +
mov ecx ds:dword_4A4088 +
mov edx [esp+3Ch+var_18] +
sub ebx eax +
sar ebx 3 +
imul ebx ebx +
and ecx 1080h +
mov [ebp+8] edx +
mov [ebp+0] ebx +
jz loc_409582  +
test ebx ebx +
jz loc_409582  +
xor ebx ebx +
jmp loc_409903  +
mov eax [ebp+4] +
imul edx ebx +
add ebx 1 +
add eax edx +
mov ecx [eax+8] +
mov edx [eax+4] +
mov eax [eax] +
mov [esp+3Ch+var_3C] offset aSymtab_final_1 +
mov [esp+3Ch+var_30] ecx +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] eax +
call printf  +
cmp [ebp+0] ebx +
ja loc_409900  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_4A4088 +
mov edx ebx +
xor ecx ecx +
mov [esp+3Ch+var_18] eax +
and [esp+3Ch+var_18] 1080h +
jmp loc_409732  +
***
push ebp  +
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+44h] +
mov ebx [esp+40h] +
mov dword ptr [esp+4] offset aDbg_sym_lookup +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call fprintf  +
mov esi [ebx] +
mov eax [ebx+4] +
sub esi 1 +
mov [esp+1Ch] eax +
jnz loc_4099B6  +
jmp loc_409A42  +
mov eax [edx] +
cmp [esp+44h] eax +
jb loc_409A6C  +
mov edi ecx +
cmp edi esi +
jz loc_409A42  +
mov eax ds:_iob +
lea ebx [esi+edi] +
shr ebx 1 +
mov [esp+10h] esi +
mov [esp+0Ch] ebx +
add eax 40h +
mov [esp+8] edi +
mov dword ptr [esp+4] offset aDbg_sym_look_0 +
mov [esp] eax +
call fprintf  +
lea ecx [ebx+1] +
imul eax ecx +
mov [esp+18h] ecx +
mov ecx [esp+1Ch] +
lea ebp [ecx+eax-0D8h] +
lea edx [ecx+eax] +
mov eax [ebp+0] +
mov ecx [edx] +
mov dword ptr [esp+4] offset aDbg_sym_look_1 +
mov [esp+14h] edx +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+0Ch] ecx +
add eax 40h +
mov [esp] eax +
call fprintf  +
mov eax [ebp+0] +
cmp [esp+44h] eax +
mov edx [esp+14h] +
mov ecx [esp+18h] +
jnb loc_4099A0  +
mov esi ebx +
cmp edi esi +
jnz loc_4099B6  +
mov eax ds:_iob +
xor ebp ebp +
mov dword ptr [esp+8] 28h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aDbg_sym_look_2 +
add eax 40h +
mov [esp+0Ch] eax +
call fwrite  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
mov eax [edx] +
test eax eax +
jz loc_409B50  +
mov ebx [edx+4] +
sub eax 1 +
test eax eax +
mov [esp+2Ch+var_10] eax +
mov [esp+2Ch+var_18] ebx +
mov ebx eax +
jz loc_409BB6  +
mov eax ds:dword_4A4088 +
xor ecx ecx +
mov [esp+2Ch+var_14] 0 +
and eax 200h +
test eax eax +
jnz loc_409B27  +
lea edx [ebx+ecx] +
mov esi edx +
shr esi 1Fh +
add edx esi +
sar edx 1 +
imul esi edx +
mov ebp edx +
add esi [esp+2Ch+var_18] +
cmp edi [esi] +
jb loc_409B48  +
add ebp 1 +
mov ecx [esp+2Ch+var_18] +
imul ebp ebp +
cmp edi [ecx+ebp] +
jb loc_409B60  +
lea ecx [edx+1] +
cmp ecx ebx +
jnz loc_409AC5  +
lea esi [edx+1] +
imul esi esi +
add esi [esp+2Ch+var_18] +
cmp edi [esi] +
jb loc_409B50  +
cmp edi [esi+4] +
ja loc_409B50  +
test byte ptr ds:dword_4A4088+1 2 +
jnz loc_409B90  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [ebx+ecx] +
mov esi edx +
shr esi 1Fh +
add edx esi +
sar edx 1 +
imul esi edx +
mov ebp edx +
add esi [esp+2Ch+var_18] +
add [esp+2Ch+var_14] 1 +
cmp [esi] edi +
jbe loc_409AE5  +
mov ebx edx +
jmp loc_409AFA  +
add esp 2Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edi [esi+4] +
ja loc_409B50  +
test eax eax +
jz loc_409B1D  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] offset aSym_lookupDPro +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] eax +
call printf  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] offset aSym_lookupDUPr +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] eax +
call printf  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi esi +
mov [esp+2Ch+var_14] 0 +
jmp loc_409B07  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 10h +
mov [esp+18h+var_18] edx +
call sub_4094F0  +
mov [esp+18h+var_14] 3Ah +
mov [esp+18h+var_18] esi +
call strrchr  +
test eax eax +
mov ebx eax +
jz loc_409C50  +
cmp esi eax +
mov byte ptr [eax] 0 +
jb loc_409C20  +
movzx eax byte ptr [ebx+1] +
test al al +
jz loc_409C17  +
add ebx 1 +
test ds:byte_49F240[eax+eax] 4 +
jnz loc_409C37  +
mov [edi+8] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+18h+var_18] esi +
call sub_408F10  +
mov edx offset unk_47D378 +
test eax eax +
cmovnz edx eax +
mov [edi+0Ch] edx +
jmp loc_409BFF  +
mov [esp+18h+var_18] ebx +
call atoi  +
mov [edi+10h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx ebx byte ptr [esi] +
test bl bl +
jz loc_409C17  +
mov [esp+18h+var_14] 2Eh +
mov [esp+18h+var_18] esi +
call strchr  +
test eax eax +
jz loc_409C82  +
mov [esp+18h+var_18] esi +
call sub_408F10  +
mov edx offset unk_47D378 +
test eax eax +
cmovnz edx eax +
mov [edi+0Ch] edx +
jmp loc_409C17  +
test ds:byte_49F240[ebx+ebx] 4 +
jnz loc_409C91  +
mov [edi+8] esi +
jmp loc_409C17  +
mov [esp+18h+var_18] esi +
call atoi  +
mov [edi+10h] eax +
jmp loc_409C17  +
***
jmp sub_409CB0  +
***
sub esp 18h +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_409CD0  +
xor eax eax +
cmp ecx [edx+0Ch] +
jz loc_409CD0  +
add esp 18h +
pop ebx  +
retn   +
mov ecx [ebx+10h] +
test ecx ecx +
jz loc_409CDE  +
xor eax eax +
cmp ecx [edx+10h] +
jnz loc_409CC4  +
mov ecx [ebx+8] +
test ecx ecx +
jz loc_409D20  +
mov eax [edx+8] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_409D03  +
mov ebx ds:dword_4A8C88 +
mov ebx [ebx+4] +
cmp dl [ebx+18h] +
setz dl  +
movzx edx dl +
add eax edx +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] ecx +
call strcmp  +
test eax eax +
setz al  +
add esp 18h +
movzx eax al +
pop ebx  +
retn   +
mov eax 1 +
jmp loc_409CC4  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov [esp+10h+var_10] esi +
call strlen  +
add eax 1E1h +
mov [esp+10h+var_10] eax +
call sub_462140  +
mov edx 1E0h +
test al 1 +
mov ebx eax +
mov edi eax +
jnz loc_409DB3  +
test edi 2 +
jnz loc_409DC3  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_409D7B  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_409D83  +
mov byte ptr [edi] 0 +
lea eax [ebx+1E0h] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] eax +
mov [ebx+4] eax +
call strcpy  +
mov eax [esp+10h+arg_4] +
mov [ebx+8] eax +
mov eax ds:dword_4A40C4 +
mov ds:dword_4A40C4 ebx +
mov [ebx] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea edi [eax+1] +
mov dl 0DFh +
test edi 2 +
mov byte ptr [eax] 0 +
jz loc_409D64  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_409D64  +
***
jmp sub_409DE0  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx ds:dword_4A40C4 +
test ebx ebx +
jnz loc_409EDC  +
jmp loc_409F21  +
mov esi [ebx+4] +
mov [esp+4Ch+var_48] 2Fh +
mov [esp+4Ch+var_4C] esi +
call strchr  +
test eax eax +
mov edi eax +
jz loc_409E34  +
lea edx [ebx+108h] +
lea eax [eax+1] +
call sub_409BD0  +
mov byte ptr [edi] 0 +
mov esi [ebx+4] +
mov dword ptr [ebx+0Ch] 1 +
lea edx [ebx+20h] +
mov eax esi +
call sub_409BD0  +
test byte ptr ds:dword_4A4088+1 10h +
jz loc_409ED6  +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_40A324  +
mov eax [eax+4] +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] offset aS_7 +
call printf  +
mov eax [ebx+28h] +
test eax eax +
jz loc_409F01  +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] offset aS_8 +
call printf  +
mov esi [ebx+0Ch] +
test esi esi +
jz loc_409ECA  +
mov eax [ebx+114h] +
test eax eax +
jz loc_40A36F  +
mov eax [eax+4] +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] offset aS_2 +
call printf  +
mov eax [ebx+110h] +
test eax eax +
jz loc_40A32E  +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] offset aS_8 +
call printf  +
mov [esp+4Ch+var_4C] 0Ah +
call putchar  +
mov ebx [ebx] +
test ebx ebx +
jz loc_409F21  +
test byte ptr ds:dword_4A4088+1 10h +
jz loc_409E00  +
mov eax [ebx+4] +
mov [esp+4Ch+var_4C] offset aParse_idS +
mov [esp+4Ch+var_48] eax +
call printf  +
jmp loc_409E00  +
mov eax [ebx+30h] +
test eax eax +
jz loc_40A34D  +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] offset aD_5 +
call printf  +
jmp loc_409E84  +
mov ebx ds:dword_4A8CB8 +
mov eax ds:dword_4A8CBC +
mov edi ds:dword_4A40C4 +
lea esi [ebx-0D8h] +
cmp ebx eax +
mov [esp+4Ch+var_20] eax +
jnb loc_409FC9  +
test edi edi +
mov ebp edi +
jnz loc_409F6F  +
jmp loc_409FB3  +
mov ecx [ebp+0Ch] +
test ecx ecx +
jz loc_409F68  +
lea eax [ebp+108h] +
mov edx ebx +
call sub_409CB0  +
test eax eax +
jnz loc_409F97  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_409FB3  +
lea eax [ebp+20h] +
mov edx ebx +
call sub_409CB0  +
test eax eax +
jz loc_409F50  +
mov eax [ebp+8] +
cmp [ebp+14h] esi +
lea eax [eax+eax*2] +
lea eax ds:4A8CC0h[eax*4] +
jz loc_409F92  +
add dword ptr [eax] 1 +
mov [ebp+14h] ebx +
jmp loc_409F50  +
cmp [ebp+0FCh] esi +
jz loc_409FA6  +
add ds:dword_4A40B8 1 +
mov [ebp+0FCh] ebx +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_409F6F  +
add ebx 0D8h +
add esi 0D8h +
cmp ebx [esp+4Ch+var_20] +
jb loc_409F44  +
mov ebx offset dword_4A8CC0 +
jmp loc_409FDB  +
add ebx 0Ch +
cmp ebx offset dword_4A8D50 +
jnb loc_40A010  +
mov eax [ebx] +
test eax eax +
jz loc_409FD0  +
imul eax eax +
add ebx 0Ch +
mov [esp+4Ch+var_4C] eax +
call sub_462140  +
imul edx [ebx-0Ch] +
mov dword ptr [ebx-0Ch] 0 +
mov [ebx-8] eax +
add eax edx +
mov [ebx-4] eax +
cmp ebx offset dword_4A8D50 +
jb loc_409FDB  +
mov eax ds:dword_4A40B8 +
test eax eax +
jnz loc_40A379  +
mov ebp ds:dword_4A8CB8 +
mov eax ds:dword_4A8CBC +
mov ebx ds:dword_4A40C4 +
cmp ebp eax +
mov [esp+4Ch+var_18] ebx +
lea ebx [ebp-0D8h] +
mov [esp+4Ch+var_14] eax +
mov [esp+4Ch+var_1C] ebx +
jnb loc_40A180  +
mov ebx ebp +
lea esi [esi+0] +
mov eax [esp+4Ch+var_18] +
test eax eax +
mov ebp eax +
jnz loc_40A083  +
jmp loc_40A168  +
mov edx [ebp+0Ch] +
test edx edx +
jz loc_40A078  +
lea eax [ebp+108h] +
mov edx ebx +
call sub_409CB0  +
test eax eax +
jnz loc_40A0F5  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_40A168  +
lea eax [ebp+20h] +
mov edx ebx +
call sub_409CB0  +
test eax eax +
jz loc_40A060  +
mov eax [ebp+8] +
mov edx [esp+4Ch+var_1C] +
cmp [ebp+14h] edx +
lea eax [eax+eax*2] +
lea ecx ds:4A8CC0h[eax*4] +
mov [esp+4Ch+var_20] ecx +
jz loc_40A0D9  +
mov eax ds:dword_4A8CC0[eax*4] +
mov esi ebx +
imul edx eax +
add edx [ecx+4] +
mov ecx 36h +
mov edi edx +
movs   +
mov ecx [esp+4Ch+var_20] +
mov [ebp+10h] eax +
mov eax [ebp+18h] +
mov [edx+70h] eax +
mov [ebp+18h] edx +
add dword ptr [ecx] 1 +
mov ecx [esp+4Ch+var_20] +
mov edx [ebx+4] +
imul eax [ebp+10h] +
add eax [ecx+4] +
mov [eax+4] edx +
mov [ebp+14h] ebx +
jmp loc_40A060  +
mov eax [esp+4Ch+var_1C] +
cmp [ebp+0FCh] eax +
mov eax ds:dword_4A40BC +
jz loc_40A30D  +
mov edx ds:dword_4A40B8 +
mov ecx eax +
mov esi ebx +
mov [esp+4Ch+var_20] eax +
imul eax edx +
add eax ecx +
mov ecx 36h +
mov edi eax +
movs   +
mov ecx [ebp+100h] +
mov [ebp+0F8h] edx +
mov [eax+70h] ecx +
mov [ebp+100h] eax +
lea eax [edx+1] +
mov ds:dword_4A40B8 eax +
mov eax [ebx+4] +
imul edx edx +
mov ecx [esp+4Ch+var_20] +
mov [ecx+edx+4] eax +
mov [ebp+0FCh] ebx +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_40A083  +
add ebx 0D8h +
add [esp+4Ch+var_1C] 0D8h +
cmp [esp+4Ch+var_14] ebx +
ja loc_40A050  +
mov esi [esp+4Ch+var_18] +
test esi esi +
jz loc_40A29E  +
lea esi [esi+0] +
mov eax [esi+0Ch] +
test eax eax +
jz loc_40A294  +
mov edi [esi+18h] +
test edi edi +
jz loc_40A294  +
mov ebp [esi+100h] +
test ebp ebp +
jz loc_40A289  +
mov [esp+4Ch+var_10] esi +
test byte ptr ds:dword_4A4088+1 10h +
jz loc_40A266  +
mov eax [esp+4Ch+var_10] +
mov ecx offset asc_4801A0 +
mov eax [eax+8] +
mov eax ds:off_4802C0[eax*4] +
mov esi eax +
mov eax [ebp+4] +
mov [esp+4Ch+var_1C] eax +
mov eax [ebp+0] +
mov [esp+4Ch+var_18] eax +
mov eax [ebp+8] +
test eax eax +
cmovz eax ecx +
mov [esp+4Ch+var_20] eax +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_40A300  +
mov eax [eax+4] +
mov [esp+4Ch+var_14] eax +
mov edx [edi+8] +
mov eax offset asc_4801A0 +
mov ebx [edi+4] +
mov ecx [edi] +
test edx edx +
cmovz edx eax +
mov eax [edi+0Ch] +
test eax eax +
jz loc_40A2F0  +
mov eax [eax+4] +
mov [esp+4Ch+var_28] esi +
mov esi [esp+4Ch+var_1C] +
mov [esp+4Ch+var_3C] ebx +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_2C] esi +
mov esi [esp+4Ch+var_18] +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] offset aSym_id_parseAr +
mov [esp+4Ch+var_30] esi +
mov esi [esp+4Ch+var_20] +
mov [esp+4Ch+var_34] esi +
mov esi [esp+4Ch+var_14] +
mov [esp+4Ch+var_38] esi +
call printf  +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_4C] edi +
call sub_4027B0  +
mov ebp [ebp+70h] +
test ebp ebp +
jnz loc_40A1B8  +
mov esi [esp+4Ch+var_10] +
mov edi [edi+70h] +
test edi edi +
jnz loc_40A1A6  +
mov esi [esi] +
test esi esi +
jnz loc_40A190  +
mov ebx offset dword_4A8CC0 +
jmp loc_40A2B8  +
mov [esp+4Ch+var_4C] ebx +
add ebx 0Ch +
call sub_409570  +
cmp ebx offset dword_4A8D50 +
jz loc_40A31C  +
test byte ptr ds:dword_4A4088+1 10h +
jz loc_40A2A5  +
mov eax ebx +
sub eax offset dword_4A8CC0 +
sar eax 2 +
imul eax eax +
mov [esp+4Ch+var_4C] offset aSym_id_parseSy +
mov eax ds:off_4802C0[eax*4] +
mov [esp+4Ch+var_48] eax +
call printf  +
jmp loc_40A2A5  +
mov eax offset asc_4801A0 +
jmp loc_40A226  +
mov [esp+4Ch+var_14] offset asc_4801A0 +
jmp loc_40A206  +
mov [esp+4Ch+var_20] eax +
mov edx [ebp+0F8h] +
jmp loc_40A146  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax offset asc_4801A0 +
jmp loc_409E59  +
mov eax [ebx+118h] +
test eax eax +
jz loc_40A35E  +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] offset aD_5 +
call printf  +
jmp loc_409ECA  +
mov [esp+4Ch+var_4C] 2Ah +
call putchar  +
jmp loc_409E84  +
mov [esp+4Ch+var_4C] 2Ah +
call putchar  +
jmp loc_409ECA  +
mov eax offset asc_4801A0 +
jmp loc_409E9C  +
imul eax eax +
mov [esp+4Ch+var_4C] eax +
call sub_462140  +
imul edx ds:dword_4A40B8 +
mov ds:dword_4A40B8 0 +
mov ds:dword_4A40BC eax +
add eax edx +
mov ds:dword_4A40C0 eax +
jmp loc_40A01D  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
mov ebx [esi+4] +
cmp ebx [esi+8] +
jb loc_40A3DB  +
jmp loc_40A404  +
add ebx 0D8h +
cmp [esi+8] ebx +
jbe loc_40A404  +
mov eax [ebp+0] +
cmp eax [ebx] +
jb loc_40A3D0  +
cmp eax [ebx+4] +
ja loc_40A3D0  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebx +
call sub_4026F0  +
test eax eax +
jz loc_40A3D0  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 13Ch +
mov ebx [esp+13Ch+arg_0] +
mov edi [ebx+8] +
test edi edi +
jz loc_40A5D5  +
mov eax ds:dword_4A4080 +
xor esi esi +
test eax eax +
jnz loc_40A445  +
mov ebp dword_47D344 +
test ebp ebp +
jnz loc_40A5B0  +
mov dword ptr [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] offset unk_480300 +
call printf  +
mov [esp+13Ch+var_13C] edi +
call strlen  +
mov edx ds:dword_4A4074 +
test edx edx +
mov edi eax +
mov ebp eax +
jz loc_40A557  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_40A514  +
mov ebp [eax+4] +
mov eax ds:dword_4A4070 +
test eax eax +
jnz loc_40A4A6  +
mov [esp+13Ch+var_13C] ebp +
mov dword ptr [esp+13Ch+var_138] 2Fh +
mov [esp+13Ch+var_120] edx +
call strrchr  +
mov edx [esp+13Ch+var_120] +
lea ecx [eax+1] +
test eax eax +
cmovnz ebp ecx +
test edx edx +
jnz loc_40A566  +
mov eax [ebx+10h] +
mov dword ptr [esp+13Ch+var_138+4] ebp +
lea ebp [esp+13Ch+var_110] +
mov dword ptr [esp+13Ch+var_138] offset aSD +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_130] eax +
call sprintf  +
mov dword ptr [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] offset unk_480300 +
call printf  +
mov eax ebp +
mov ecx [eax] +
add eax 4 +
lea edx [ecx-1010101h] +
not ecx  +
and edx ecx +
and edx 80808080h +
jz loc_40A4DF  +
mov ecx edx +
shr ecx 10h +
test edx 8080h +
cmovz edx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add dl dl +
sbb eax 3 +
sub eax ebp +
lea ebp [eax+edi] +
test esi esi +
jz loc_40A520  +
mov [esp+13Ch+var_13C] esi +
call free  +
mov eax ds:dword_4A4088 +
test al 2 +
jnz loc_40A590  +
test ah 4 +
jz loc_40A54A  +
fld  ds:flt_480344 +
fmul  qword ptr [ebx+0A8h] +
mov [esp+13Ch+var_13C] offset a4_0f +
fstp  [esp+13Ch+var_138] +
call printf  +
add esp 13Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ds:dword_4A4068 +
test ecx ecx +
jz loc_40A514  +
jmp loc_40A46F  +
mov edx [ebx] +
mov eax [ebx+10h] +
mov dword ptr [esp+13Ch+var_138+4] ebp +
lea ebp [esp+13Ch+var_110] +
mov dword ptr [esp+13Ch+var_138] offset aSD@Lx +
mov [esp+13Ch+var_12C] edx +
mov [esp+13Ch+var_130] eax +
mov [esp+13Ch+var_13C] ebp +
call sprintf  +
jmp loc_40A4CD  +
mov eax [ebx+9Ch] +
mov [esp+13Ch+var_13C] offset aD_1 +
mov dword ptr [esp+13Ch+var_138] eax +
call printf  +
mov eax ds:dword_4A4088 +
jmp loc_40A529  +
mov eax ds:dword_4A8C88 +
mov dword ptr [esp+13Ch+var_138] edi +
mov dword ptr [esp+13Ch+var_138+4] 3 +
mov [esp+13Ch+var_13C] eax +
call sub_4110E0  +
test eax eax +
mov esi eax +
cmovnz edi eax +
jmp loc_40A445  +
add esp 13Ch +
xor ebp ebp +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call sub_40A410  +
mov eax [ebx+0C0h] +
test eax eax +
jnz loc_40A644  +
mov eax [ebx+98h] +
test eax eax +
jz loc_40A62E  +
mov edx [ebx+0A0h] +
mov [esp+18h+var_14] eax +
test edx edx +
jnz loc_40A633  +
mov [esp+18h+var_18] offset aD_3 +
call printf  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] offset aD_4 +
call printf  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] offset aCycleD_0 +
call printf  +
jmp loc_40A60A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
test byte ptr ds:dword_4A4088+1 1 +
mov ebx [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
jnz loc_40A742  +
cmp ebx edi +
jb loc_40A689  +
jmp loc_40A6F6  +
add ebx 1 +
cmp edi ebx +
jbe loc_40A6F6  +
mov eax ds:dword_4A8C90 +
mov esi ebx +
sub esi [eax+1Ch] +
add esi ds:dword_4A8C84 +
cmp byte ptr [esi] 0E8h +
jnz loc_40A682  +
test byte ptr ds:dword_4A4088+1 1 +
jz loc_40A6B7  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] offset aFindcall0xLxCa +
call printf  +
mov eax ds:dword_4A8C88 +
add esi 1 +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+1Ch+var_1C] esi +
call eax  +
lea esi [eax+ebx+5] +
mov [esp+1Ch+var_1C] esi +
call sub_4088C0  +
test eax eax +
jnz loc_40A700  +
test byte ptr ds:dword_4A4088+1 1 +
jz loc_40A682  +
mov [esp+1Ch+var_1C] offset aButItSABotch +
add ebx 1 +
call puts  +
cmp edi ebx +
ja loc_40A689  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] offset dword_4A8CB4 +
call sub_409A80  +
test eax eax +
mov ebp eax +
jz loc_40A6DA  +
mov eax [eax] +
cmp eax esi +
jnz loc_40A6DA  +
test byte ptr ds:dword_4A4088+1 1 +
jnz loc_40A766  +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call sub_4027B0  +
jmp loc_40A682  +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+8] +
mov [esp+1Ch+var_10] edi +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_1C] offset aFindcallS0xLxT +
mov [esp+1Ch+var_18] eax +
call printf  +
jmp loc_40A67C  +
mov edx [ebp+8] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] offset aDestpc0xLxS +
mov [esp+1Ch+var_14] edx +
call printf  +
jmp loc_40A725  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax ds:dword_4A40E8 +
mov ebx [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_8] +
test eax eax +
jz loc_40A9C9  +
test byte ptr ds:dword_4A4088+1 1 +
jnz loc_40A941  +
add ebx 3 +
and ebx 0FFFFFFFCh +
cmp esi ebx +
ja loc_40A80F  +
jmp loc_40A8A7  +
cmp eax 0D0000000h +
jnz loc_40A804  +
test byte ptr ds:dword_4A4088+1 1 +
jnz loc_40A915  +
and ebp 1FFFFFh +
xor ebp 100000h +
add ebp ebx +
lea edi [ebp-0FFFFCh] +
mov [esp+2Ch+var_2C] edi +
call sub_4088C0  +
mov edx ds:dword_4A4088 +
and edx 100h +
test eax eax +
jnz loc_40A8B0  +
test edx edx +
jnz loc_40A930  +
add ebx 4 +
cmp esi ebx +
jbe loc_40A8A7  +
mov eax ds:dword_4A8C88 +
mov ecx ebx +
mov eax [eax+4] +
mov edx [eax+28h] +
mov eax ds:dword_4A8C90 +
sub ecx [eax+1Ch] +
mov eax ds:dword_4A8C84 +
add eax ecx +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov ebp eax +
and eax 0FC000000h +
cmp eax 68000000h +
jnz loc_40A7B8  +
test ebp 4000h +
jz loc_40A804  +
test byte ptr ds:dword_4A4088+1 1 +
jz loc_40A880  +
and ebp 0C000h +
mov eax offset unk_4803A4 +
cmp ebp 4000h +
mov edi offset a_coroutine +
cmovnz eax edi +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] offset aFind_call0xLxJ +
call printf  +
mov eax [esp+2Ch+arg_0] +
add ebx 4 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] offset unk_4A40E0 +
mov [esp+2Ch+var_2C] eax +
call sub_4027B0  +
cmp esi ebx +
ja loc_40A80F  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] offset dword_4A8CB4 +
call sub_409A80  +
mov edx ds:dword_4A4088 +
test eax eax +
mov ecx eax +
jz loc_40A9A0  +
and edx 100h +
jnz loc_40A965  +
mov eax [ecx] +
cmp eax edi +
jz loc_40A8F0  +
sub ebp 100004h +
cmp eax ebp +
jnz loc_40A7FC  +
test edx edx +
jnz loc_40A9B0  +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] eax +
call sub_4027B0  +
jmp loc_40A804  +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] offset aFind_call0xLxB +
call printf  +
jmp loc_40A7CC  +
mov [esp+2Ch+var_2C] offset aButItSABotch_0 +
call puts  +
jmp loc_40A804  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+8] +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_2C] offset aFind_callS0xLx +
mov [esp+2Ch+var_28] eax +
call printf  +
jmp loc_40A7A9  +
mov edx [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] offset a0xLxNameSAddr0 +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_10] ecx +
call printf  +
mov edx ds:dword_4A4088 +
mov ecx [esp+2Ch+var_10] +
and edx 100h +
jmp loc_40A8DC  +
and edx 100h +
jmp loc_40A7FC  +
mov [esp+2Ch+var_2C] 0Ah +
mov [esp+2Ch+var_10] ecx +
call putchar  +
mov ecx [esp+2Ch+var_10] +
jmp loc_40A8F8  +
mov [esp+2Ch+var_2C] offset unk_4A40E0 +
call sub_4094F0  +
mov ds:dword_4A40E8 offset aIndirectChild +
mov ds:dword_4A41A4 offset unk_4A40E0 +
fld1   +
fstp  ds:dbl_4A4188 +
jmp loc_40A79C  +
***
cmp eax 14h +
mov edx eax +
shr al 4 +
and edx 0Fh +
movzx eax al +
jmp ds:off_480614[eax*4]  +
mov eax 1 +
retn   +
mov eax 2 +
retn   +
mov eax 3 +
retn   +
mov eax 4 +
retn   +
xor eax eax +
cmp edx 0Fh +
setz al  +
lea eax ds:5[eax*8] +
retn   +
xor eax eax +
cmp edx 0Fh +
setz al  +
lea eax ds:6[eax*8] +
retn   +
xor eax eax +
cmp edx 0Fh +
setz al  +
lea eax ds:7[eax*8] +
retn   +
xor eax eax +
cmp edx 0Fh +
setz al  +
lea eax ds:8[eax*8] +
retn   +
xor eax eax +
cmp edx 0Fh +
setz al  +
lea eax ds:9[eax*8] +
retn   +
xor eax eax +
cmp edx 0Fh +
setz al  +
lea eax ds:0Ah[eax*8] +
retn   +
xor eax eax +
cmp edx 0Fh +
setz al  +
lea eax ds:0Bh[eax*8] +
retn   +
xor eax eax +
cmp edx 0Fh +
setz al  +
lea eax ds:0Ch[eax*8] +
retn   +
xor eax eax +
retn   +
***
push ebx  +
xor ebx ebx +
sub esp 4 +
movzx eax byte ptr [esi+ebx] +
call sub_40AAC0  +
cmp eax 14h +
ja loc_40ABC1  +
jmp ds:off_480654[eax*4]  +
add esp 4 +
mov eax 2 +
add eax ebx +
pop ebx  +
pop esi  +
retn   +
add ebx 1 +
movzx eax byte ptr [esi+ebx] +
call sub_40AAC0  +
cmp eax 14h +
jbe loc_40AB97  +
call abort  +
add esp 4 +
mov eax 1 +
add eax ebx +
pop ebx  +
pop esi  +
retn   +
add esp 4 +
mov eax 5 +
add eax ebx +
pop ebx  +
pop esi  +
retn   +
add esp 4 +
mov eax 3 +
add eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax ds:dword_4A41C0 +
mov ebx [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_8] +
test eax eax +
jz loc_40AD30  +
test byte ptr ds:dword_4A4088+1 1 +
jnz loc_40AD08  +
cmp ebx esi +
jb loc_40AC2B  +
jmp loc_40AC80  +
mov eax 1 +
add ebx eax +
cmp esi ebx +
jbe loc_40AC80  +
mov eax ds:dword_4A8C90 +
mov ebp ebx +
sub ebp [eax+1Ch] +
add ebp ds:dword_4A8C84 +
cmp byte ptr [ebp+0] 0FBh +
jnz loc_40AC20  +
mov edi ds:dword_4A4088 +
and edi 100h +
jnz loc_40ACE7  +
movzx eax byte ptr [ebp+1] +
call sub_40AAC0  +
test eax eax +
mov edx eax +
jz loc_40AC88  +
cmp eax 0Dh +
jz loc_40AC88  +
test edi edi +
jz loc_40AC20  +
mov [esp+2Ch+var_2C] offset aFindcallButItS +
call puts  +
jmp loc_40AC20  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+1] +
mov [esp+2Ch+var_14] edx +
call sub_40AB80  +
add eax 1 +
add ebp eax +
mov [esp+2Ch+var_10] eax +
movzx eax byte ptr [ebp+0] +
call sub_40AAC0  +
test edi edi +
mov edx [esp+2Ch+var_14] +
mov ecx eax +
jnz loc_40AD60  +
sub ecx 3 +
cmp ecx 11h +
ja loc_40ACD9  +
mov eax 1 +
shl eax cl +
test eax 2A2A1h +
jnz loc_40AE40  +
test eax 15000h +
jnz loc_40AD9F  +
mov edi ds:dword_4A4088 +
and edi 100h +
jmp loc_40AC67  +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] offset aFindcall0xLx_0 +
call printf  +
mov edi ds:dword_4A4088 +
and edi 100h +
jmp loc_40AC53  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+8] +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_2C] offset aFindcallS0xL_0 +
mov [esp+2Ch+var_28] eax +
call printf  +
jmp loc_40AC19  +
mov [esp+2Ch+var_2C] offset unk_4A41E0 +
mov ds:dword_4A41C0 1 +
call sub_4094F0  +
mov ds:dword_4A42A4 offset unk_4A41E0 +
fld1   +
fstp  ds:dbl_4A4288 +
jmp loc_40AC0C  +
mov [esp+2Ch+var_14] eax +
mov eax edx +
call sub_40AA00  +
mov [esp+2Ch+var_2C] offset aFirstOperandIs +
mov [esp+2Ch+var_28] eax +
call printf  +
mov ecx [esp+2Ch+var_14] +
mov eax ecx +
call sub_40AA00  +
mov [esp+2Ch+var_2C] offset aSecondOperandI +
mov [esp+2Ch+var_28] eax +
call printf  +
mov ecx [esp+2Ch+var_14] +
jmp loc_40ACB4  +
movzx eax byte ptr [ebp+0] +
call sub_40AAC0  +
lea edx [ebp+1] +
cmp eax 11h +
jz loc_40AE84  +
cmp eax 13h +
jz loc_40AE6C  +
cmp eax 0Fh +
jz loc_40AE9C  +
mov eax ds:_iob +
xor edi edi +
mov [esp+2Ch+var_24] 1Fh +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] offset aReladdrNotRela +
add eax 40h +
mov [esp+2Ch+var_20] eax +
call fwrite  +
add edi ebx +
mov [esp+2Ch+var_2C] edi +
call sub_4088C0  +
test eax eax +
jz loc_40ACD9  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] offset dword_4A8CB4 +
call sub_409A80  +
test eax eax +
mov edx eax +
jz loc_40ACD9  +
test byte ptr ds:dword_4A4088+1 1 +
jnz loc_40AEAE  +
cmp [edx] edi +
jnz loc_40ACD9  +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] edx +
jmp loc_40AE50  +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] offset unk_4A41E0 +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_4027B0  +
mov eax ebp +
call sub_40AB80  +
add eax [esp+2Ch+var_10] +
jmp loc_40AC25  +
mov eax ds:dword_4A8C88 +
mov eax [eax+4] +
mov eax [eax+2Ch] +
mov [esp+2Ch+var_2C] edx +
call eax  +
lea edi [eax+4] +
jmp loc_40ADF0  +
mov eax ds:dword_4A8C88 +
mov eax [eax+4] +
mov eax [eax+38h] +
mov [esp+2Ch+var_2C] edx +
call eax  +
lea edi [eax+2] +
jmp loc_40ADF0  +
movzx eax byte ptr [ebp+1] +
add eax 0FFFFFF80h +
movzx edi al +
sub edi 7Fh +
jmp loc_40ADF0  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] offset aFindcallDestpc +
mov [esp+2Ch+var_14] eax +
call printf  +
mov edx [esp+2Ch+var_14] +
mov eax [edx+8] +
mov [esp+2Ch+var_2C] offset aChildNameS +
mov [esp+2Ch+var_28] eax +
call printf  +
mov edx [esp+2Ch+var_14] +
mov eax [edx] +
mov [esp+2Ch+var_2C] offset aChildAddr0xLx +
mov [esp+2Ch+var_28] eax +
call printf  +
mov edx [esp+2Ch+var_14] +
jmp loc_40AE29  +
***
cmp eax 14h +
mov edx eax +
shr al 4 +
and edx 0Fh +
movzx eax al +
jmp ds:off_480940[eax*4]  +
mov eax 1 +
retn   +
mov eax 2 +
retn   +
mov eax 3 +
retn   +
mov eax 4 +
retn   +
xor eax eax +
cmp edx 0Eh +
setz al  +
lea eax ds:5[eax*8] +
retn   +
xor eax eax +
cmp edx 0Fh +
setz al  +
lea eax ds:6[eax*8] +
retn   +
xor eax eax +
cmp edx 0Fh +
setz al  +
lea eax ds:7[eax*8] +
retn   +
xor eax eax +
cmp edx 0Fh +
setz al  +
lea eax ds:8[eax*8] +
retn   +
xor eax eax +
cmp edx 0Fh +
setz al  +
lea eax ds:9[eax*8] +
retn   +
xor eax eax +
cmp edx 0Fh +
setz al  +
lea eax ds:0Ah[eax*8] +
retn   +
xor eax eax +
cmp edx 0Fh +
setz al  +
lea eax ds:0Bh[eax*8] +
retn   +
xor eax eax +
cmp edx 0Fh +
setz al  +
lea eax ds:0Ch[eax*8] +
retn   +
xor eax eax +
retn   +
***
push ebx  +
xor ebx ebx +
sub esp 4 +
movzx eax byte ptr [esi+ebx] +
call sub_40AFC0  +
cmp eax 14h +
ja loc_40B0C1  +
jmp ds:off_480980[eax*4]  +
add esp 4 +
mov eax 2 +
add eax ebx +
pop ebx  +
pop esi  +
retn   +
add ebx 1 +
movzx eax byte ptr [esi+ebx] +
call sub_40AFC0  +
cmp eax 14h +
jbe loc_40B097  +
call abort  +
add esp 4 +
mov eax 1 +
add eax ebx +
pop ebx  +
pop esi  +
retn   +
add esp 4 +
mov eax 5 +
add eax ebx +
pop ebx  +
pop esi  +
retn   +
add esp 4 +
mov eax 3 +
add eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax ds:dword_4A42C0 +
mov ebx [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_8] +
test eax eax +
jz loc_40B230  +
test byte ptr ds:dword_4A4088+1 1 +
jnz loc_40B208  +
cmp ebx esi +
jb loc_40B12B  +
jmp loc_40B180  +
mov eax 1 +
add ebx eax +
cmp esi ebx +
jbe loc_40B180  +
mov eax ds:dword_4A8C90 +
mov ebp ebx +
sub ebp [eax+1Ch] +
add ebp ds:dword_4A8C84 +
cmp byte ptr [ebp+0] 0FEh +
jnz loc_40B120  +
mov edi ds:dword_4A4088 +
and edi 100h +
jnz loc_40B1E7  +
movzx eax byte ptr [ebp+1] +
call sub_40AFC0  +
test eax eax +
mov edx eax +
jz loc_40B188  +
cmp eax 0Dh +
jz loc_40B188  +
test edi edi +
jz loc_40B120  +
mov [esp+2Ch+var_2C] offset aFindcallButI_0 +
call puts  +
jmp loc_40B120  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+1] +
mov [esp+2Ch+var_14] edx +
call sub_40B080  +
add eax 1 +
add ebp eax +
mov [esp+2Ch+var_10] eax +
movzx eax byte ptr [ebp+0] +
call sub_40AFC0  +
test edi edi +
mov edx [esp+2Ch+var_14] +
mov ecx eax +
jnz loc_40B260  +
sub ecx 3 +
cmp ecx 11h +
ja loc_40B1D9  +
mov eax 1 +
shl eax cl +
test eax 2A2A1h +
jnz loc_40B340  +
test eax 15000h +
jnz loc_40B29F  +
mov edi ds:dword_4A4088 +
and edi 100h +
jmp loc_40B167  +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] offset aFindcall0xLx_1 +
call printf  +
mov edi ds:dword_4A4088 +
and edi 100h +
jmp loc_40B153  +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+8] +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_2C] offset aFindcallS0xL_1 +
mov [esp+2Ch+var_28] eax +
call printf  +
jmp loc_40B119  +
mov [esp+2Ch+var_2C] offset unk_4A42E0 +
mov ds:dword_4A42C0 1 +
call sub_4094F0  +
mov ds:dword_4A43A4 offset unk_4A42E0 +
fld1   +
fstp  ds:dbl_4A4388 +
jmp loc_40B10C  +
mov [esp+2Ch+var_14] eax +
mov eax edx +
call sub_40AF00  +
mov [esp+2Ch+var_2C] offset aFirstOperand_0 +
mov [esp+2Ch+var_28] eax +
call printf  +
mov ecx [esp+2Ch+var_14] +
mov eax ecx +
call sub_40AF00  +
mov [esp+2Ch+var_2C] offset aSecondOperan_0 +
mov [esp+2Ch+var_28] eax +
call printf  +
mov ecx [esp+2Ch+var_14] +
jmp loc_40B1B4  +
movzx eax byte ptr [ebp+0] +
call sub_40AFC0  +
lea edx [ebp+1] +
cmp eax 11h +
jz loc_40B384  +
cmp eax 13h +
jz loc_40B36C  +
cmp eax 0Fh +
jz loc_40B39C  +
mov eax ds:_iob +
xor edi edi +
mov [esp+2Ch+var_24] 1Fh +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] offset aReladdrNotRe_0 +
add eax 40h +
mov [esp+2Ch+var_20] eax +
call fwrite  +
add edi ebx +
mov [esp+2Ch+var_2C] edi +
call sub_4088C0  +
test eax eax +
jz loc_40B1D9  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] offset dword_4A8CB4 +
call sub_409A80  +
test eax eax +
mov edx eax +
jz loc_40B1D9  +
test byte ptr ds:dword_4A4088+1 1 +
jnz loc_40B3AE  +
cmp [edx] edi +
jnz loc_40B1D9  +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] edx +
jmp loc_40B350  +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] offset unk_4A42E0 +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_4027B0  +
mov eax ebp +
call sub_40B080  +
add eax [esp+2Ch+var_10] +
jmp loc_40B125  +
mov eax ds:dword_4A8C88 +
mov eax [eax+4] +
mov eax [eax+2Ch] +
mov [esp+2Ch+var_2C] edx +
call eax  +
lea edi [eax+4] +
jmp loc_40B2F0  +
mov eax ds:dword_4A8C88 +
mov eax [eax+4] +
mov eax [eax+38h] +
mov [esp+2Ch+var_2C] edx +
call eax  +
lea edi [eax+2] +
jmp loc_40B2F0  +
movzx eax byte ptr [ebp+1] +
add eax 0FFFFFF80h +
movzx edi al +
sub edi 7Fh +
jmp loc_40B2F0  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] offset aFindcallDest_0 +
mov [esp+2Ch+var_14] eax +
call printf  +
mov edx [esp+2Ch+var_14] +
mov eax [edx+8] +
mov [esp+2Ch+var_2C] offset aChildNameS_0 +
mov [esp+2Ch+var_28] eax +
call printf  +
mov edx [esp+2Ch+var_14] +
mov eax [edx] +
mov [esp+2Ch+var_2C] offset aChildAddr0xL_0 +
mov [esp+2Ch+var_28] eax +
call printf  +
mov edx [esp+2Ch+var_14] +
jmp loc_40B329  +
***
push esi  +
push ebx  +
sub esp 1Ch +
test byte ptr ds:dword_4A4088+1 1 +
mov ebx [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
jnz loc_40B540  +
add ebx 3 +
and ebx 0FFFFFFFCh +
cmp edi ebx +
ja loc_40B467  +
jmp loc_40B500  +
and esi 3FFFFFFFh +
xor esi 20000000h +
lea esi [ebx+esi-20000000h] +
mov [esp+1Ch+var_1C] esi +
call sub_4088C0  +
test eax eax +
jnz loc_40B4B0  +
test byte ptr ds:dword_4A4088+1 1 +
jnz loc_40B508  +
add ebx 4 +
cmp edi ebx +
jbe loc_40B500  +
mov eax ds:dword_4A8C88 +
mov ecx ebx +
mov eax [eax+4] +
mov edx [eax+28h] +
mov eax ds:dword_4A8C90 +
sub ecx [eax+1Ch] +
mov eax ds:dword_4A8C84 +
add eax ecx +
mov [esp+1Ch+var_1C] eax +
call edx  +
test eax 0C0000000h +
mov esi eax +
jz loc_40B45C  +
test byte ptr ds:dword_4A4088+1 1 +
jz loc_40B430  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] offset aFind_call0xLxC +
call printf  +
jmp loc_40B430  +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] offset dword_4A8CB4 +
call sub_409A80  +
test eax eax +
mov ebp eax +
jz loc_40B44F  +
test byte ptr ds:dword_4A4088+1 1 +
jnz loc_40B520  +
cmp [ebp+0] esi +
jnz loc_40B44F  +
mov eax [esp+1Ch+arg_0] +
add ebx 4 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call sub_4027B0  +
cmp edi ebx +
ja loc_40B467  +
nop   +
lea esi [esi+0] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] offset aButItSABotch_1 +
call puts  +
jmp loc_40B45C  +
mov edx [eax] +
mov eax [eax+8] +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] offset aDest_pc0xLxNam +
mov [esp+1Ch+var_10] edx +
mov [esp+1Ch+var_14] eax +
call printf  +
jmp loc_40B4CF  +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+8] +
mov [esp+1Ch+var_10] edi +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_1C] offset aFind_callS0x_0 +
mov [esp+1Ch+var_18] eax +
call printf  +
jmp loc_40B41C  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax ds:dword_4A43C0 +
mov edi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_8] +
test eax eax +
jz loc_40B750  +
test byte ptr ds:dword_4A4088+1 1 +
jnz loc_40B730  +
cmp ebx esi +
jb loc_40B5C3  +
jmp loc_40B640  +
and ebp 0FC00F83Fh +
cmp ebp 0F809h +
jz loc_40B648  +
add ebx 4 +
cmp esi ebx +
jbe loc_40B640  +
mov eax ds:dword_4A8C88 +
mov ecx ebx +
mov eax [eax+4] +
mov edx [eax+28h] +
mov eax ds:dword_4A8C90 +
sub ecx [eax+1Ch] +
mov eax ds:dword_4A8C84 +
add eax ecx +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov ebp eax +
and eax 0FC000000h +
cmp eax 0C000000h +
jnz loc_40B5A6  +
test byte ptr ds:dword_4A4088+1 1 +
jnz loc_40B6A5  +
and ebp 3FFFFFFh +
mov eax ebx +
and eax 0F0000000h +
shl ebp 2 +
or ebp eax +
mov [esp+2Ch+var_2C] ebp +
call sub_4088C0  +
mov edx ds:dword_4A4088 +
and edx 100h +
test eax eax +
jnz loc_40B670  +
test edx edx +
jz loc_40B5B8  +
mov [esp+2Ch+var_2C] offset aButItSABotch_2 +
add ebx 4 +
call puts  +
cmp esi ebx +
ja loc_40B5C3  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr ds:dword_4A4088+1 1 +
jnz loc_40B6C0  +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] offset unk_4A43E0 +
mov [esp+2Ch+var_2C] edi +
call sub_4027B0  +
jmp loc_40B5B8  +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] offset dword_4A8CB4 +
call sub_409A80  +
mov edx ds:dword_4A4088 +
and edx 100h +
test eax eax +
mov ecx eax +
jz loc_40B629  +
test byte ptr ds:dword_4A4088+1 1 +
jnz loc_40B6D5  +
cmp [eax] ebp +
jnz loc_40B5B8  +
jmp loc_40B712  +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] offset aFind_call0xL_0 +
call printf  +
jmp loc_40B5FF  +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] offset aFind_call0xL_1 +
call printf  +
jmp loc_40B651  +
mov edx [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] offset a0xLxNameSAdd_0 +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_10] ecx +
call printf  +
mov edx ds:dword_4A4088 +
mov ecx [esp+2Ch+var_10] +
and edx 100h +
cmp [ecx] ebp +
jnz loc_40B629  +
test edx edx +
jnz loc_40B787  +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] edi +
call sub_4027B0  +
jmp loc_40B5B8  +
mov eax [edi+8] +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_2C] offset aFind_callS0x_1 +
mov [esp+2Ch+var_28] eax +
call printf  +
jmp loc_40B59D  +
mov [esp+2Ch+var_2C] offset unk_4A43E0 +
mov ds:dword_4A43C0 1 +
call sub_4094F0  +
mov ds:dword_4A43E8 offset aIndirectChil_0 +
mov ds:dword_4A44A4 offset unk_4A43E0 +
fld1   +
fstp  ds:dbl_4A4488 +
jmp loc_40B590  +
mov [esp+2Ch+var_2C] 0Ah +
call putchar  +
mov ecx [esp+2Ch+var_10] +
jmp loc_40B712  +
***
push esi  +
push ebx  +
sub esp 1Ch +
test byte ptr ds:dword_4A4088+1 1 +
mov ebx [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
jnz loc_40B8C0  +
cmp ebx edi +
jb loc_40B7C9  +
jmp loc_40B835  +
add ebx 4 +
cmp edi ebx +
jbe loc_40B835  +
mov eax ds:dword_4A8C88 +
mov ecx ebx +
mov eax [eax+4] +
mov edx [eax+28h] +
mov eax ds:dword_4A8C90 +
sub ecx [eax+1Ch] +
mov eax ds:dword_4A8C84 +
add eax ecx +
mov [esp+1Ch+var_1C] eax +
call edx  +
mov esi eax +
and eax 7C000000h +
cmp eax 14000000h +
jnz loc_40B7C2  +
test byte ptr ds:dword_4A4088+1 1 +
jnz loc_40B881  +
shl esi 6 +
sar esi 4 +
add esi ebx +
mov [esp+1Ch+var_1C] esi +
call sub_4088C0  +
test eax eax +
jnz loc_40B840  +
test byte ptr ds:dword_4A4088+1 1 +
jz loc_40B7C2  +
mov [esp+1Ch+var_1C] offset aButItSABotch_3 +
add ebx 4 +
call puts  +
cmp edi ebx +
ja loc_40B7C9  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] offset dword_4A8CB4 +
call sub_409A80  +
test eax eax +
mov ebp eax +
jz loc_40B819  +
test byte ptr ds:dword_4A4088+1 1 +
jnz loc_40B896  +
cmp [ebp+0] esi +
jnz loc_40B819  +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call sub_4027B0  +
jmp loc_40B7C2  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] offset aFind_call0xL_2 +
call printf  +
jmp loc_40B805  +
mov edx [eax] +
mov eax [eax+8] +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] offset aDest_pc0xLxN_0 +
mov [esp+1Ch+var_10] edx +
mov [esp+1Ch+var_14] eax +
call printf  +
cmp [ebp+0] esi +
jnz loc_40B819  +
jmp loc_40B864  +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+8] +
mov [esp+1Ch+var_10] edi +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_1C] offset aFind_callS0x_2 +
mov [esp+1Ch+var_18] eax +
call printf  +
jmp loc_40B7BC  +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] 0Ah +
mov [esp+18h+var_14] ebx +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Bh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aThePercentageO +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2Ah +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTimeProgramUse +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCumulativeARun +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Bh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aSecondsForByTh +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 37h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aSelfTheNumberO +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aSecondsFunctio +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 14h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aListing_ +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCallsTheNumber +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 32h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aThisFunctionIs +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aSelfTheAverage +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aMsCallFunction +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 10h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aElseBlank_ +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTotalTheAverag +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ah +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aMsCallFuncti_0 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 26h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aFunctionIsProf +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aNameTheNameOfT +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aForThisListing +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 37h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheFunctionInT +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 35h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aInParenthesisI +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 30h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheGprofListin +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2 +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset unk_481069 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 37h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCopyrightC2012 +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 45h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCopyingAndDist +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 43h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aArePermittedIn +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 26h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aNoticeAndThisN +
call fwrite  +
add esp 18h +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] 0Ah +
mov [esp+18h+var_14] ebx +
call fputc  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 14h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCallGraphProfi +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheSumOfSelfAn +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 1Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aForThisListi_0 +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 1Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aFunctionEntrie +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 36h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aIndexTheIndexO +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 39h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aListingAsAnAid +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ah +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTimeThePercent +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 31h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aAccountedForBy +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 17h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aDescendents_ +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 37h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aSelfTheNumbe_0 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 12h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aItself_ +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 0Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aDescendents +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheNumberOfSec +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 34h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aThisFunctionOn +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCalledTheNumbe +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 21h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aThanRecursiveC +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 39h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aSelfTheNumbe_1 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 17h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aRecursively_ +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ah +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aNameTheNameO_0 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aItsMembershipI +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 36h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aIndexTheIndexO +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aListingAsAnA_0 +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 1Bh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aParentListings +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aSelfTheNumbe_2 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 32h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aWhichIsDueToCa +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 0Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aDescendents_0 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 33h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheNumberOfS_0 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ah +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aDescendentTime +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 12h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aParent_ +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 39h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCalledTheNum_0 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 35h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aThisParent_Thi +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Bh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aFractionWhichD +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 17h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aItsParents_ +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ah +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTotalTheNumber +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ah +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aAllOfItsParent +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 24h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aThePropagation +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aParentsTheName +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 32h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aParentSMembers +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 35h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aIndexTheInde_0 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aListingAsAnA_1 +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 1Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aChildrenListin +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ah +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aSelfTheNumbe_3 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 39h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aWhichIsDueToBe +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 0Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aDescendent +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheNumberOfS_1 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 34h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTimeWhichIsDue +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 14h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aFunction_ +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Bh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCalledTheNum_1 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 32h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aFunction_ThisI +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2Fh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aPropagationFra +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ah +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTotalTheNumb_0 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 35h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aFunctions_This +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 20h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aPropagationF_0 +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Bh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aChildrenTheNam +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 29h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aMembershipInAC +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aIndexTheInde_1 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 24h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aAsAnAidToLocat +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 35h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheseFieldsAre +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Bh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aChildrenInTheS +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ah +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheFunctionOrC +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Bh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aThePropagatedT +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aRepresentTheSe +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 1Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCycleAsAWhole_ +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aStaticOnlyPare +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 20h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aByACallCountOf +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 1Ah +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCycleListings +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 37h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheCycleAsAWho +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Bh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aFieldsAsAFunct +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheMembersOfTh +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 34h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aToTheTimeAndCa +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2 +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset unk_481E51 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 37h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCopyrightC20_0 +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 45h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCopyingAndDi_0 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 43h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aArePermitted_0 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 26h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aNoticeAndThi_0 +
call fwrite  +
add esp 18h +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] 0Ah +
mov [esp+18h+var_14] ebx +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 46h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aThisTableDescr +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 43h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheTotalAmount +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 48h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aEachEntryInThi +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 42h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aIndexNumberAtT +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 42h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheLinesAboveI +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aAndTheLinesBel +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 12h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aThisLineLists +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Fh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aIndexAUniqueNu +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 28h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aIndexNumbersAr +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheIndexNumber +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Eh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aItIsEasierToLo +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 46h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTimeThisIsTheP +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 37h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aInThisFunction +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aDifferentViewp +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 29h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheseNumbersWi +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 43h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aSelfThisIsTheT +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 44h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aChildrenThisIs +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 1Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aFunctionByItsC +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 41h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCalledThisIsTh +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 38h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aIfTheFunctionC +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 38h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aOnlyIncludesNo +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2Bh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aAAndTheNumberO +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 41h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aNameTheNameO_1 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 36h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aPrintedAfterIt +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 31h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCycleTheCycleN +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 28h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aFunctionSNameA +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 45h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aForTheFunction +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 42h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aSelfThisIsTheA +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 26h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aFromTheFunctio +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 42h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aChildrenThis_0 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheFunctionSCh +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Fh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCalledThisIs_0 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 36h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aFunctionTheTot +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 37h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aWasCalled_Recu +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 28h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aIncludedInTheN +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Eh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aNameThisIsTheN +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 32h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aNumberIsPrinte +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 39h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aMemberOfACycle +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 21h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheNameAndTheI +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Fh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aIfTheParentsOf +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 43h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aSpontaneousIsP +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 13h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aFieldsAreBlank +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 46h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aForTheFuncti_0 +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 42h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aSelfThisIsTheA +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 24h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aFromTheChildIn +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 46h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aChildrenThis_1 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 24h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aChildSChildren +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCalledThisIs_1 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 35h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aThisChildTheTo +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 34h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aWasCalled_Re_0 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 26h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aListedInTheNum +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aNameThisIsTh_0 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 31h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aNumberIsPrin_0 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 31h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aMemberOfACyc_0 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 29h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aBetweenTheName +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 42h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aIfThereAreAnyC +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 42h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aEntryForTheCyc +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 40h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCycleAsParents +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 47h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheRecursiveCa +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 48h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aWereInternalTo +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 45h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aForThatMemberH +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 0Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheCycle_ +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2 +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset unk_482CE3 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 37h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCopyrightC20_1 +
call fwrite  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] 0Ah +
call fputc  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 45h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCopyingAndDi_1 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 43h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aArePermitted_1 +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 26h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aNoticeAndThi_1 +
call fwrite  +
add esp 18h +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+8] +
mov edx [eax+14h] +
mov eax [eax+10h] +
retn   +
***
mov edx [esp+arg_C] +
mov eax [esp+arg_0] +
mov ecx [esp+arg_4] +
mov ebx [esp+arg_8] +
cmp edx 1 +
mov esi [eax+8] +
jz loc_40D280  +
cmp edx 2 +
mov eax 0FFFFFFFFh +
jz loc_40D26A  +
xor eax eax +
test edx edx +
jz loc_40D270  +
pop ebx  +
pop esi  +
retn   +
mov [esi+10h] ecx +
xor eax eax +
mov [esi+14h] ebx +
pop ebx  +
pop esi  +
retn   +
add [esi+10h] ecx +
adc [esi+14h] ebx +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 20h +
mov ecx [esp+20h+arg_0] +
mov ebx [ecx+8] +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov esi [ebx+4] +
mov edi [ebx] +
mov [esp+20h+var_C] eax +
mov eax [esp+20h+arg_8] +
mov [esp+20h+var_8] edx +
mov edx [esp+20h+arg_C] +
mov [esp+20h+var_20] ecx +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_14] eax +
mov eax [esp+20h+arg_4] +
mov [esp+20h+var_10] edx +
mov [esp+20h+var_18] eax +
call esi  +
test edx edx +
js loc_40D2DB  +
add [ebx+10h] eax +
adc [ebx+14h] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
retn   +
***
sub esp 18h +
mov ebx [esp+18h+arg_0] +
mov ecx [ebx+8] +
mov edx [ecx+8] +
test edx edx +
jz loc_40D31F  +
mov eax [ecx] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call edx  +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
***
retn   +
***
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_4] +
mov ebp [esp+28h+arg_0] +
test esi 1 +
mov edi esi +
mov ebx [ebp+8] +
jnz loc_40D3B8  +
test edi 2 +
jnz loc_40D3C8  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_40D390  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_40D398  +
mov byte ptr [edi] 0 +
mov edx [ebx+0Ch] +
xor eax eax +
test edx edx +
jz loc_40D3B0  +
mov eax [ebx] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] ebp +
mov [esp+28h+var_24] eax +
call edx  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edi [esi+1] +
mov dl 2Fh +
test edi 2 +
mov byte ptr [esi] 0 +
jz loc_40D379  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_40D379  +
***
sub esp 18h +
mov eax [eax+0A8h] +
test eax eax +
jz loc_40D409  +
lea eax [ebx+48h] +
mov [esp+18h+var_18] eax +
call sub_412190  +
mov eax [ebx+0A8h] +
mov [esp+18h+var_18] eax +
call sub_469650  +
mov eax [ebx] +
test eax eax +
jz loc_40D417  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+88h] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+var_18] ebx +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
test ebx ebx +
jz loc_40D500  +
test edi edi +
jz loc_40D4E0  +
mov [esp+2Ch+var_28] offset a_gnu_debuglink +
mov [esp+2Ch+var_2C] ebx +
call sub_40F280  +
test eax eax +
mov esi eax +
jz loc_40D49D  +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_40FBE0  +
test eax eax +
jnz loc_40D4A7  +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_40D49D  +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+24h] +
mov ebp [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] ebp +
call sub_47A650  +
add eax 4 +
and eax 0FFFFFFFCh +
cmp eax [esi+24h] +
jnb loc_40D49D  +
mov edx [ebx+4] +
add eax [esp+2Ch+var_10] +
mov edx [edx+28h] +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov [edi] eax +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] 49Fh +
mov [esp+2Ch+var_2C] offset a____Binutils_4 +
call sub_410530  +
jmp loc_40D45F  +
mov [esp+2Ch+var_28] 49Eh +
mov [esp+2Ch+var_2C] offset a____Binutils_4 +
call sub_410530  +
jmp loc_40D457  +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_40D556  +
mov [esp+18h+var_14] offset aRb_2 +
mov [esp+18h+var_18] ebx +
call j_j_fopen  +
xor edx edx +
test eax eax +
jz loc_40D54F  +
mov [esp+18h+var_18] eax +
call fclose  +
mov edx 1 +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
mov [esp+18h+var_14] 529h +
mov [esp+18h+var_18] offset a____Binutils_4 +
call sub_410530  +
jmp loc_40D52C  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test ebx ebx +
jz loc_40D61E  +
mov [esp+14h+var_10] offset aRb_2 +
mov [esp+14h+var_14] ebx +
call j_j_fopen  +
test eax eax +
mov esi eax +
jz loc_40D616  +
xor ebx ebx +
lea esi [esi+0] +
mov [esp+14h+var_8] esi +
mov [esp+14h+var_C] 2000h +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] offset unk_4A64E0 +
call fread  +
test eax eax +
jz loc_40D5FF  +
add eax offset unk_4A64E0 +
mov edx ebx +
cmp eax offset unk_4A64E0 +
not edx  +
jbe loc_40D5F9  +
mov ecx offset unk_4A64E0 +
lea esi [esi+0] +
mov ebx edx +
add ecx 1 +
xor bl [ecx-1] +
shr edx 8 +
movzx ebx bl +
xor edx ds:dword_482E40[ebx*4] +
cmp ecx eax +
jnz loc_40D5E0  +
not edx  +
mov ebx edx +
jmp loc_40D5A0  +
mov [esp+14h+var_14] esi +
call fclose  +
xor eax eax +
cmp ebx [esp+14h+arg_4] +
setz al  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 508h +
mov [esp+14h+var_14] offset a____Binutils_4 +
call sub_410530  +
jmp loc_40D581  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
test eax eax +
mov [esp+48h+var_34] edx +
jz loc_40D8C3  +
mov esi [esp+48h+var_34] +
mov eax offset a__1 +
mov edx [ebp+0] +
test esi esi +
cmovnz eax esi +
test edx edx +
mov [esp+48h+var_34] eax +
jz loc_40D925  +
lea eax [esp+48h+var_1C] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebp +
call ecx  +
test eax eax +
mov esi eax +
jz loc_40D91E  +
cmp byte ptr [eax] 0 +
jz loc_40D8EB  +
mov edi [ebp+0] +
mov [esp+48h+var_48] edi +
call strlen  +
test eax eax +
jz loc_40D8E4  +
movzx edx byte ptr [edi+eax-1] +
lea ebx [eax-1] +
cmp dl 5Ch +
jz loc_40D90D  +
cmp dl 2Fh +
jnz loc_40D6DA  +
jmp loc_40D90D  +
movzx eax byte ptr [edi+ebx-1] +
lea edx [ebx-1] +
cmp al 5Ch +
jz loc_40D7F4  +
cmp al 2Fh +
jz loc_40D7F4  +
mov ebx edx +
test ebx ebx +
jnz loc_40D6C0  +
mov edx 1 +
mov [esp+48h+var_48] edx +
call sub_412BD0  +
test eax eax +
mov [esp+48h+var_30] eax +
jz loc_40D938  +
mov eax [ebp+0] +
mov edi [esp+48h+var_30] +
mov [esp+48h+var_40] ebx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] edi +
call memcpy  +
mov byte ptr [edi+ebx] 0 +
mov eax [ebp+0] +
mov [esp+48h+var_48] eax +
call sub_4697C0  +
mov [esp+48h+var_48] eax +
mov edi eax +
call strlen  +
test eax eax +
jz loc_40D906  +
movzx ecx byte ptr [edi+eax-1] +
lea ebp [eax-1] +
cmp cl 2Fh +
jz loc_40D917  +
cmp cl 5Ch +
jnz loc_40D762  +
jmp loc_40D917  +
movzx eax byte ptr [edi+ebp-1] +
lea edx [ebp-1] +
cmp al 5Ch +
jz loc_40D766  +
cmp al 2Fh +
jz loc_40D766  +
mov ebp edx +
test ebp ebp +
jnz loc_40D750  +
mov eax [esp+48h+var_34] +
mov byte ptr [edi+ebp] 0 +
mov [esp+48h+var_48] eax +
call strlen  +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_2C] eax +
call strlen  +
mov ecx [esp+48h+var_2C] +
cmp ebp ebx +
cmovnb ebx ebp +
lea eax [ecx+eax+9] +
add ebx eax +
mov [esp+48h+var_48] ebx +
call sub_412BD0  +
test eax eax +
mov ebx eax +
jz loc_40D7CE  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_4694A0  +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] eax +
call strcpy  +
mov eax [esp+48h+var_1C] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call [esp+48h+arg_0]  +
test eax eax +
jz loc_40D800  +
mov [esp+48h+var_48] esi +
call free  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_48] edi +
call free  +
mov eax ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [ebx+1] +
jmp loc_40D6E3  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_4694A0  +
mov dword ptr [eax] 6265642Eh +
add eax 7 +
mov dword ptr [eax-3] 2F6775h +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] eax +
call strcpy  +
mov eax [esp+48h+var_1C] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call [esp+48h+arg_0]  +
test eax eax +
jnz loc_40D7CE  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_4694A0  +
mov ebp eax +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_48] eax +
call strlen  +
cmp eax 1 +
jz loc_40D87B  +
mov ecx [esp+48h+var_34] +
cmp byte ptr [ecx+eax-1] 2Fh +
jz loc_40D87B  +
cmp byte ptr [edi] 2Fh +
jz loc_40D87B  +
mov eax 2Fh +
mov [ebp+0] ax +
mov [esp+48h+var_48] ebx +
call strlen  +
mov [esp+48h+var_44] edi +
add eax ebx +
mov [esp+48h+var_48] eax +
call sub_4694A0  +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] eax +
call strcpy  +
mov eax [esp+48h+var_1C] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call [esp+48h+arg_0]  +
test eax eax +
jnz loc_40D7CE  +
mov [esp+48h+var_48] ebx +
xor ebx ebx +
call free  +
jmp loc_40D7CE  +
mov [esp+48h+var_44] 559h +
mov [esp+48h+var_48] offset a____Binutils_4 +
mov [esp+48h+var_30] ecx +
call sub_410530  +
mov ecx [esp+48h+var_30] +
jmp loc_40D655  +
xor ebx ebx +
jmp loc_40D6DE  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_48] 10h +
call sub_4105E0  +
xor eax eax +
jmp loc_40D7EC  +
xor ebp ebp +
jmp loc_40D766  +
lea edx [eax+1] +
mov ebx eax +
jmp loc_40D6E3  +
mov ebp eax +
jmp loc_40D766  +
xor eax eax +
jmp loc_40D7EC  +
mov [esp+48h+var_48] 5 +
call sub_4105E0  +
xor eax eax +
jmp loc_40D7EC  +
mov [esp+48h+var_48] esi +
call free  +
xor eax eax +
jmp loc_40D7EC  +
***
mov [esp+18h+var_18] 0B0h +
call sub_412D60  +
test eax eax +
mov ebx eax +
jz loc_40DA00  +
mov eax ds:dword_4A44C0 +
test eax eax +
jnz loc_40D9D0  +
mov eax ds:dword_4A84E4 +
lea edx [eax+1] +
mov ds:dword_4A84E4 edx +
mov [ebx+24h] eax +
call sub_4694E0  +
test eax eax +
mov [ebx+0A8h] eax +
jz loc_40DA04  +
lea eax [ebx+48h] +
mov dword ptr [ebx+84h] offset asc_4833C0 +
mov [esp+18h+var_C] 0Dh +
mov [esp+18h+var_10] 0B8h +
mov [esp+18h+var_14] offset sub_40F120 +
mov [esp+18h+var_18] eax +
call sub_412080  +
test eax eax +
jz loc_40D9F0  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
mov ecx ds:dword_4A84E0 +
sub eax 1 +
mov ds:dword_4A44C0 eax +
lea edx [ecx-1] +
mov ds:dword_4A84E0 edx +
mov [ebx+24h] edx +
jmp loc_40D984  +
mov [esp+18h+var_18] ebx +
xor ebx ebx +
call free  +
jmp loc_40D9C4  +
xor ebx ebx +
jmp loc_40D9C4  +
mov [esp+18h+var_18] 6 +
call sub_4105E0  +
mov [esp+18h+var_18] ebx +
xor ebx ebx +
call free  +
jmp loc_40D9C4  +
***
sub esp 4 +
mov ebx [esp+4+arg_0] +
call sub_40D950  +
test eax eax +
jz loc_40DAA0  +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+0Ch] +
mov [eax+0Ch] edx +
cmp dword ptr [ebx+0Ch] offset off_483240 +
jz loc_40DA95  +
movzx edx byte ptr [eax+28h] +
mov [eax+8Ch] ebx +
movzx ecx byte ptr [ebx+2Bh] +
and edx 0FFFFFFE7h +
or edx 8 +
and ecx 1 +
mov [eax+28h] dl +
movzx edx byte ptr [eax+2Bh] +
and edx 0FFFFFFFEh +
or edx ecx +
movzx ecx byte ptr [eax+2Ch] +
mov [eax+2Bh] dl +
movzx esi byte ptr [ebx+2Ch] +
and edx 0FFFFFFF7h +
and ecx 0FFFFFFEFh +
and esi 10h +
or ecx esi +
mov [eax+2Ch] cl +
movzx ecx byte ptr [ebx+2Bh] +
and ecx 8 +
or edx ecx +
mov [eax+2Bh] dl +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+8] +
mov [eax+8] edx +
jmp loc_40DA47  +
xor eax eax +
jmp loc_40DA8F  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov eax [ebx+0A8h] +
test eax eax +
jz loc_40DB0E  +
lea eax [ebx+48h] +
mov [esp] eax +
call sub_412190  +
mov eax [ebx+0A8h] +
mov [esp] eax +
call sub_469650  +
mov dword ptr [ebx+64h] 0 +
mov dword ptr [ebx+68h] 0 +
mov dword ptr [ebx+78h] 0 +
mov dword ptr [ebx+0A0h] 0 +
mov dword ptr [ebx+0A4h] 0 +
mov dword ptr [ebx+0A8h] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_8] +
mov esi [esp+10h+arg_C] +
call sub_40D950  +
test eax eax +
mov ebx eax +
jz loc_40DBF0  +
mov [esp+10h+var_C] eax +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] eax +
call sub_413A10  +
test eax eax +
jz loc_40DC40  +
cmp esi 0FFFFFFFFh +
mov [esp+10h+var_C] edi +
jz loc_40DC06  +
mov [esp+10h+var_10] esi +
call _fdopen  +
mov [ebx+8] eax +
test eax eax +
jz loc_40DC5E  +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call sub_462210  +
mov [ebx] eax +
movzx eax byte ptr [edi] +
cmp al 72h +
setz dl  +
cmp al 77h +
jz loc_40DBD0  +
test dl dl +
jnz loc_40DBD0  +
cmp al 61h +
jz loc_40DC2D  +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 10h +
mov [ebx+28h] al +
mov [esp+10h+var_10] ebx +
call sub_413F30  +
test eax eax +
jz loc_40DC50  +
or byte ptr [ebx+2Bh] 2 +
cmp esi 0FFFFFFFFh +
jz loc_40DC20  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [edi+1] 2Bh +
jz loc_40DC37  +
test dl dl +
jz loc_40DB9B  +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
jmp loc_40DBA8  +
cmp esi 0FFFFFFFFh +
jz loc_40DBC1  +
mov [esp+10h+var_10] esi +
call _close  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call j_j_fopen  +
mov [ebx+8] eax +
jmp loc_40DB6D  +
or byte ptr [ebx+2Ah] 80h +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [edi+1] 2Bh +
jnz loc_40DB9B  +
or byte ptr [ebx+28h] 18h +
jmp loc_40DBA8  +
cmp esi 0FFFFFFFFh +
jz loc_40DC50  +
mov [esp+10h+var_10] esi +
call _close  +
lea esi [esi+0] +
mov eax ebx +
xor ebx ebx +
call sub_40D3E0  +
jmp loc_40DBC1  +
mov [esp+10h+var_10] 1 +
call sub_4105E0  +
jmp loc_40DC50  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 0FFFFFFFFh +
mov [esp+1Ch+var_14] offset aRb_2 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_40DB20  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov eax [esp+28h] +
mov dword ptr [esp+8] offset aRB_0 +
mov [esp+0Ch] eax +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_40DB20  +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 18h +
call sub_40D950  +
test eax eax +
mov ebx eax +
jz loc_40DD33  +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_413A10  +
test eax eax +
jz loc_40DD28  +
mov eax [esp+28h] +
mov [ebx+8] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_462210  +
mov [ebx] eax +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
mov [esp] ebx +
call sub_413F30  +
test eax eax +
jz loc_40DD28  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
mov eax ebx +
xor ebx ebx +
call sub_40D3E0  +
jmp loc_40DD21  +
***
xor ebx ebx +
jmp loc_40DD21  +
***
push ebx  +
sub esp 18h +
call sub_40D950  +
test eax eax +
mov ebx eax +
jz loc_40DDA4  +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_413A10  +
test eax eax +
jz loc_40DD9D  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_462210  +
mov [ebx] eax +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 10h +
mov [ebx+28h] al +
mov [esp] ebx +
call sub_414060  +
test eax eax +
jz loc_40DD91  +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_4105E0  +
mov eax ebx +
call sub_40D3E0  +
xor eax eax +
jmp loc_40DD8C  +
***
push ebx  +
sub esp 40h +
mov ebx [esp+40h+arg_0] +
movzx eax byte ptr [ebx+28h] +
test al 10h +
jz loc_40DDD8  +
mov edx [ebx+4] +
and eax 7 +
mov eax [edx+eax*4+84h] +
mov [esp+40h+var_40] ebx +
call eax  +
test eax eax +
jz loc_40DDEA  +
mov eax [ebx+4] +
mov eax [eax+94h] +
mov [esp+40h+var_40] ebx +
call eax  +
test eax eax +
jnz loc_40DDF3  +
add esp 40h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+0Ch] +
mov eax [eax+10h] +
mov [esp+40h+var_40] ebx +
call eax  +
test eax eax +
setz al  +
movzx eax al +
mov esi eax +
jz loc_40DE20  +
mov eax ebx +
call sub_40D3E0  +
add esp 40h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax byte ptr [ebx+28h] +
and eax 18h +
cmp al 10h +
jnz loc_40DE0A  +
mov eax [ebx+28h] +
shr eax 5 +
test al 42h +
jz loc_40DE0A  +
mov eax [ebx] +
lea edx [esp+40h+var_30] +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] eax +
call ds:_stati64  +
test eax eax +
jnz loc_40DE0A  +
movzx eax [esp+40h+var_2A] +
and ax 0F000h +
cmp ax 8000h +
jnz loc_40DE0A  +
mov [esp+40h+var_40] 0 +
call _umask  +
mov [esp+40h+var_40] eax +
mov edi eax +
call _umask  +
movzx ecx [esp+40h+var_2A] +
mov eax edi +
mov edx [ebx] +
not eax  +
and eax 49h +
or eax ecx +
and eax 1FFh +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] edx +
call _chmod  +
jmp loc_40DE0A  +
***
push ebx  +
sub esp 40h +
mov ebx [esp+40h+arg_0] +
mov [esp+40h+var_40] ebx +
call sub_413FF0  +
test eax eax +
mov esi eax +
jnz loc_40DEC8  +
mov eax ebx +
call sub_40D3E0  +
add esp 40h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax byte ptr [ebx+28h] +
and eax 18h +
cmp al 10h +
jnz loc_40DEB8  +
mov eax [ebx+28h] +
shr eax 5 +
test al 42h +
jz loc_40DEB8  +
mov eax [ebx] +
lea edx [esp+40h+var_30] +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] eax +
call ds:_stati64  +
test eax eax +
jnz loc_40DEB8  +
movzx eax [esp+40h+var_2A] +
and ax 0F000h +
cmp ax 8000h +
jnz loc_40DEB8  +
mov [esp+40h+var_40] 0 +
call _umask  +
mov [esp+40h+var_40] eax +
mov edi eax +
call _umask  +
movzx ecx [esp+40h+var_2A] +
mov eax edi +
mov edx [ebx] +
not eax  +
and eax 49h +
or eax ecx +
and eax 1FFh +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] edx +
call _chmod  +
jmp loc_40DEB8  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+24h] +
call sub_40D950  +
test eax eax +
mov ebx eax +
jz loc_40DF88  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_462210  +
test esi esi +
mov [ebx] eax +
jz loc_40DF6C  +
mov eax [esi+4] +
mov [ebx+4] eax +
and byte ptr [ebx+28h] 0E7h +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_40EFF0  +
mov eax ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
jmp loc_40DF82  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
test byte ptr [ebx+28h] 18h +
jnz loc_40E000  +
mov dword ptr [esp] 8 +
call sub_412BD0  +
test eax eax +
jz loc_40E013  +
mov [ebx+8] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
or dword ptr [ebx+28h] 10000h +
movzx eax byte ptr [ebx+28h] +
mov dword ptr [ebx+0Ch] offset off_483840 +
mov dword ptr [ebx+38h] 0 +
mov dword ptr [ebx+3Ch] 0 +
and eax 0FFFFFFE7h +
or eax 10h +
mov [ebx+28h] al +
mov eax 1 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+1Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [esp] 5 +
call sub_4105E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
xor eax eax +
jmp loc_40DFFA  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
movzx eax byte ptr [ebx+28h] +
mov edx eax +
and edx 18h +
cmp dl 10h +
jnz loc_40E03C  +
test byte ptr [ebx+2Ah] 1 +
jnz loc_40E050  +
mov dword ptr [esp] 5 +
call sub_4105E0  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [ebx+4] +
and eax 7 +
mov eax [edx+eax*4+84h] +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_40E070  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov eax [ebx+4] +
mov eax [eax+94h] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_40E066  +
and byte ptr [ebx+28h] 0F8h +
and byte ptr [ebx+2Bh] 0EDh +
and byte ptr [ebx+2Ah] 7Fh +
or dword ptr [ebx+28h] 10000h +
movzx eax byte ptr [ebx+2Bh] +
mov dword ptr [ebx+84h] offset asc_4833C0 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+1Ch] 0 +
and eax 0FFFFFFFBh +
or eax 1 +
mov [ebx+2Bh] al +
movzx eax byte ptr [ebx+28h] +
mov dword ptr [ebx+8Ch] 0 +
mov dword ptr [ebx+38h] 0 +
mov dword ptr [ebx+3Ch] 0 +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
mov dword ptr [ebx+6Ch] 0 +
mov dword ptr [ebx+0A4h] 0 +
mov dword ptr [ebx+64h] 0 +
mov dword ptr [ebx+7Ch] 0 +
mov dword ptr [ebx+78h] 0 +
mov dword ptr [ebx+0A0h] 0 +
mov [esp] ebx +
call sub_40F230  +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_40EFC0  +
mov eax 1 +
jmp loc_40E04A  +
***
jmp sub_40E140  +
***
mov ecx [esp+18h+arg_4] +
test ecx ecx +
js loc_40E1A6  +
mov eax [esp+18h+arg_0] +
mov edx [eax+0A8h] +
jz loc_40E175  +
add ecx 7 +
and ecx 0FFFFFFF8h +
jnz loc_40E17A  +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call sub_469540  +
test eax eax +
jz loc_40E190  +
add esp 18h +
pop ebx  +
retn   +
mov ecx 8 +
mov ebx [edx+4] +
cmp ebx ecx +
jb loc_40E160  +
mov eax [edx] +
sub ebx ecx +
mov [edx+4] ebx +
add eax ecx +
mov [edx] eax +
sub eax ecx +
jmp loc_40E16C  +
mov [esp+18h+var_18] 6 +
mov [esp+18h+var_C] eax +
call sub_4105E0  +
mov eax [esp+18h+var_C] +
jmp loc_40E170  +
mov [esp+18h+var_18] 6 +
call sub_4105E0  +
xor eax eax +
jmp loc_40E170  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
mov esi [esp+14h+arg_0] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_40E1ED  +
test ecx ecx +
jz loc_40E1ED  +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
ja loc_40E202  +
imul ecx ebx +
mov [esp+14h+arg_0] esi +
mov [esp+14h+arg_4] ecx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_40E140  +
mov [esp+14h+var_14] 6 +
call sub_4105E0  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_40E140  +
test eax eax +
mov ebx eax +
jz loc_40E253  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] eax +
call memset  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
call sub_40D950  +
test eax eax +
mov ebx eax +
jz loc_40E2F1  +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_413A10  +
test eax eax +
jz loc_40E2F5  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_462210  +
mov [ebx] eax +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
mov eax [esp+2Ch] +
mov [esp] ebx +
mov [esp+4] eax +
call dword ptr [esp+28h]  +
test eax eax +
mov esi eax +
jz loc_40E2F5  +
mov dword ptr [esp+4] 18h +
mov [esp] ebx +
call sub_40E220  +
mov edx [esp+30h] +
mov [eax+4] edx +
mov edx [esp+34h] +
mov [eax] esi +
mov [eax+8] edx +
mov edx [esp+38h] +
mov [eax+0Ch] edx +
mov [ebx+8] eax +
mov eax ebx +
mov dword ptr [ebx+0Ch] offset off_483240 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
jmp loc_40E2EB  +
***
mov eax ebx +
call sub_40D3E0  +
xor eax eax +
nop   +
jmp loc_40E2EB  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_40E32C  +
test ecx ecx +
jnz loc_40E365  +
mov esi ebx +
mov eax [esp+14h+arg_0] +
imul esi ecx +
mov [esp+14h+var_14] eax +
mov [esp+14h+var_10] esi +
call sub_40E140  +
mov ebx eax +
xor eax eax +
test ebx ebx +
jz loc_40E35F  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] ebx +
call memset  +
mov eax ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
jbe loc_40E32C  +
mov [esp+14h+var_14] 6 +
call sub_4105E0  +
xor eax eax +
jmp loc_40E35F  +
***
mov eax [esp+arg_0] +
mov eax [eax+0A8h] +
mov [esp+arg_0] eax +
jmp sub_469680  +
***
push ebx  +
mov edx [esp+0Ch] +
mov ebx [esp+10h] +
mov eax [esp+8] +
add ebx edx +
cmp edx ebx +
not eax  +
jnb loc_40E3DE  +
mov ecx eax +
add edx 1 +
xor cl [edx-1] +
shr eax 8 +
movzx ecx cl +
xor eax ds:dword_482E40[ecx*4] +
cmp edx ebx +
jnz loc_40E3C5  +
not eax  +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
test ebx ebx +
jz loc_40E4D0  +
test edi edi +
jz loc_40E4F0  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_40E4B4  +
mov [esp+2Ch+var_28] offset a_gnu_debugaltl +
mov [esp+2Ch+var_2C] ebx +
call sub_40F280  +
test eax eax +
mov esi eax +
jz loc_40E459  +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_40FBE0  +
test eax eax +
jnz loc_40E463  +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_40E459  +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+24h] +
mov ebx [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] ebx +
call sub_47A650  +
lea ebp [eax+1] +
mov eax [esi+24h] +
cmp ebp eax +
jnb loc_40E459  +
sub eax ebp +
mov [edi] eax +
mov [esp+2Ch+var_2C] eax +
call sub_412BD0  +
mov ecx [esp+2Ch+arg_8] +
mov edx [esp+2Ch+var_10] +
add edx ebp +
mov [ecx] eax +
mov ecx [edi] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_24] ecx +
call memcpy  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] 4D8h +
mov [esp+2Ch+var_2C] offset a____Binutils_4 +
call sub_410530  +
jmp loc_40E41B  +
mov [esp+2Ch+var_28] 4D6h +
mov [esp+2Ch+var_2C] offset a____Binutils_4 +
call sub_410530  +
jmp loc_40E407  +
mov [esp+2Ch+var_28] 4D7h +
mov [esp+2Ch+var_2C] offset a____Binutils_4 +
call sub_410530  +
jmp loc_40E40F  +
***
lea eax [esp+28h+var_C] +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_C] 0 +
mov [esp+28h+var_28] eax +
call sub_40E3F0  +
mov ebx eax +
mov eax [esp+28h+arg_4] +
mov dword ptr [eax] 0 +
mov eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call free  +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx offset sub_40D440 +
mov edx [esp+arg_4] +
mov [esp+arg_0] offset sub_40D570 +
jmp sub_40D640  +
***
mov eax [esp+arg_0] +
mov ecx offset sub_40E510 +
mov edx [esp+arg_4] +
mov [esp+arg_0] offset sub_40D520 +
jmp sub_40D640  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov eax [esp+24h] +
test ebx ebx +
jz loc_40E620  +
test eax eax +
jz loc_40E620  +
mov [esp] eax +
call sub_4698B0  +
mov dword ptr [esp+4] offset a_gnu_debuglink +
mov [esp] ebx +
mov edi eax +
call sub_40F280  +
test eax eax +
jnz loc_40E620  +
mov dword ptr [esp+8] 2108h +
mov dword ptr [esp+4] offset a_gnu_debuglink +
mov [esp] ebx +
call sub_40F740  +
test eax eax +
mov esi eax +
jz loc_40E635  +
mov [esp] edi +
call strlen  +
mov [esp+4] esi +
mov [esp] ebx +
add eax 4 +
and eax 0FFFFFFFCh +
add eax 4 +
mov [esp+8] eax +
call sub_40F950  +
test eax eax +
jz loc_40E635  +
mov eax esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [esp] 5 +
call sub_4105E0  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
xor eax eax +
jmp loc_40E619  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+40h] +
mov edi [esp+48h] +
test edx edx +
jz loc_40E7A5  +
mov eax [esp+44h] +
test eax eax +
jz loc_40E7A5  +
test edi edi +
jz loc_40E7A5  +
mov dword ptr [esp+4] offset aRb_2 +
mov [esp] edi +
call j_j_fopen  +
test eax eax +
mov esi eax +
jz loc_40E7CD  +
xor ebx ebx +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 2000h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset unk_4A44E0 +
call fread  +
test eax eax +
jz loc_40E6DD  +
add eax offset unk_4A44E0 +
not ebx  +
cmp eax offset unk_4A44E0 +
jbe loc_40E6D9  +
mov edx offset unk_4A44E0 +
nop   +
mov ecx ebx +
add edx 1 +
xor cl [edx-1] +
shr ebx 8 +
movzx ecx cl +
xor ebx ds:dword_482E40[ecx*4] +
cmp edx eax +
jnz loc_40E6C0  +
not ebx  +
jmp loc_40E687  +
***
mov [esp] esi +
call fclose  +
mov [esp] edi +
call sub_4698B0  +
mov [esp] eax +
mov [esp+1Ch] eax +
call strlen  +
lea edi [eax+4] +
mov ebp eax +
and edi 0FFFFFFFCh +
lea eax [edi+4] +
mov [esp] eax +
mov [esp+18h] eax +
call sub_412BD0  +
mov esi eax +
xor eax eax +
test esi esi +
jz loc_40E79D  +
mov ecx [esp+1Ch] +
mov [esp+8] ebp +
mov [esp] esi +
mov [esp+4] ecx +
call memcpy  +
mov edx edi +
add edi esi +
sub edx ebp +
mov eax edx +
lea edx [esi+ebp] +
mov [esp] edx +
mov [esp+8] eax +
mov dword ptr [esp+4] 0 +
call memset  +
mov edx [esp+40h] +
mov eax [edx+4] +
mov eax [eax+30h] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
mov eax [esp+18h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+10h] 0 +
mov [esp+8] esi +
mov [esp+14h] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_40F990  +
mov edx eax +
mov eax 1 +
test edx edx +
jz loc_40E7BB  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 5 +
call sub_4105E0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] esi +
call free  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_4105E0  +
xor eax eax +
jmp loc_40E79D  +
***
push esi  +
push ebx  +
sub esp 8Ch +
mov eax [esp+8Ch+arg_8] +
mov ebx [esp+8Ch+arg_0] +
test eax eax +
jz loc_40E809  +
mov eax [esp+8Ch+arg_8] +
mov dword ptr [eax] 0 +
movzx eax byte ptr [ebx+28h] +
test al 8 +
jz loc_40EC00  +
and eax 7 +
cmp al 3 +
ja loc_40EC00  +
test al al +
jnz loc_40ED60  +
mov eax [esp+8Ch+arg_8] +
test eax eax +
jz loc_40ED8B  +
mov eax ds:dword_483C30 +
shl eax 3 +
mov [esp+8Ch+var_8C] eax +
call sub_412BD0  +
test eax eax +
mov ebp eax +
jz loc_40ECF3  +
movzx eax byte ptr [ebx+28h] +
movzx edx byte ptr [esp+8Ch+arg_4] +
mov [esp+8Ch+var_44] 0 +
and eax 0FFFFFFF8h +
and edx 7 +
or eax edx +
mov [ebx+28h] al +
mov eax [ebx+4] +
test byte ptr [ebx+2Bh] 1 +
mov [esp+8Ch+var_70] eax +
jz loc_40EC19  +
mov eax ds:dword_483C30 +
mov edi off_47D678 +
mov [esp+8Ch+var_50] eax +
mov eax [edi] +
test eax eax +
jz loc_40EF78  +
xor esi esi +
mov ecx 100h +
lea edx [ebx+48h] +
mov [esp+8Ch+var_60] esi +
mov esi ecx +
mov [esp+8Ch+var_64] 0 +
mov [esp+8Ch+var_6C] 0 +
mov [esp+8Ch+var_5C] 0 +
mov [esp+8Ch+var_54] 0 +
mov [esp+8Ch+var_58] edx +
mov [esp+8Ch+var_68] ebp +
jmp loc_40E8E1  +
add edi 4 +
mov eax [edi] +
test eax eax +
jz loc_40EA8F  +
cmp eax offset off_483D40 +
jz loc_40E8D4  +
test byte ptr [ebx+2Bh] 1 +
jnz loc_40E8F4  +
cmp [esp+8Ch+var_70] eax +
jz loc_40E8D4  +
movzx eax byte ptr [eax+1Bh] +
cmp eax esi +
jg loc_40E8D4  +
and dword ptr [ebx+28h] 0FFF9001Fh +
mov dword ptr [ebx+0A0h] 0 +
mov dword ptr [ebx+84h] offset asc_4833C0 +
mov [esp+8Ch+var_8C] ebx +
call sub_40F230  +
mov eax [edi] +
mov [ebx+4] eax +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_8C] ebx +
call sub_411E10  +
test eax eax +
jnz loc_40ED51  +
mov [esp+8Ch+var_8C] 3 +
call sub_4105E0  +
movzx eax byte ptr [ebx+28h] +
mov ecx [ebx+4] +
and eax 7 +
mov eax [ecx+eax*4+64h] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
test eax eax +
mov ebp eax +
jz loc_40ED43  +
mov eax [esp+8Ch+var_44] +
test eax eax +
jz loc_40E991  +
lea eax [esp+8Ch+var_28] +
mov [esp+8Ch+var_8C] eax +
call sub_412190  +
mov [esp+8Ch+var_44] 0 +
movzx eax byte ptr [ebx+28h] +
and eax 7 +
cmp al 2 +
jz loc_40ED10  +
cmp off_47D670 ebp +
jz loc_40EF55  +
mov eax [esp+8Ch+var_68] +
test eax eax +
jz loc_40E9BB  +
mov ecx [esp+8Ch+var_6C] +
mov [eax+ecx*4] ebp +
movzx eax byte ptr [ebp+1Bh] +
add [esp+8Ch+var_6C] 1 +
cmp eax esi +
jl loc_40ED00  +
add [esp+8Ch+var_64] 1 +
mov [esp+8Ch+var_60] ebp +
mov eax [ebx+0A0h] +
mov [esp+8Ch+var_40] eax +
mov eax [ebx+84h] +
mov [esp+8Ch+var_38] eax +
mov eax [ebx+28h] +
shr eax 5 +
and eax 3FFFFh +
mov [esp+8Ch+var_3C] eax +
mov eax [ebx+64h] +
mov [esp+8Ch+var_34] eax +
mov eax [ebx+68h] +
mov [esp+8Ch+var_30] eax +
mov eax [ebx+6Ch] +
mov [esp+8Ch+var_2C] eax +
mov eax [ebx+48h] +
mov [esp+8Ch+var_28] eax +
mov eax [ebx+4Ch] +
mov [esp+8Ch+var_24] eax +
mov eax [ebx+50h] +
mov [esp+8Ch+var_20] eax +
mov eax [ebx+54h] +
mov [esp+8Ch+var_1C] eax +
mov eax [ebx+58h] +
mov [esp+8Ch+var_18] eax +
mov eax [ebx+5Ch] +
mov [esp+8Ch+var_14] eax +
mov eax [ebx+60h] +
mov [esp+8Ch+var_88] 1 +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_10] eax +
call sub_40E140  +
test eax eax +
mov [esp+8Ch+var_44] eax +
jz loc_40ED51  +
mov eax [esp+8Ch+var_58] +
mov [esp+8Ch+var_84] 0B8h +
mov [esp+8Ch+var_88] offset sub_40F120 +
mov [esp+8Ch+var_8C] eax +
call sub_412160  +
test eax eax +
jz loc_40ED51  +
add edi 4 +
mov eax [edi] +
mov [esp+8Ch+var_5C] ebp +
test eax eax +
jnz loc_40E8E1  +
cmp [esp+8Ch+var_64] 1 +
mov ebp [esp+8Ch+var_68] +
mov [esp+8Ch+var_68] esi +
mov esi [esp+8Ch+var_60] +
jz loc_40EDD9  +
mov eax [esp+8Ch+var_6C] +
test eax eax +
jnz loc_40EF10  +
mov eax [esp+8Ch+var_54] +
cmp eax off_47D670 +
jz loc_40EF67  +
mov eax [esp+8Ch+var_50] +
sub eax ds:dword_483C30 +
cmp eax 1 +
mov [esp+8Ch+var_6C] eax +
jg loc_40EDE6  +
cmp [esp+8Ch+var_6C] 1 +
jle loc_40EFB6  +
mov [esp+8Ch+arg_0] ebx +
mov ecx off_47D66C +
mov edi [esp+8Ch+var_6C] +
mov ebx [esp+8Ch+var_68] +
lea esi [esi+0] +
add ecx 4 +
mov esi [ecx-4] +
test esi esi +
jz loc_40EDA1  +
mov eax edi +
sub eax 1 +
js loc_40EB00  +
cmp [ebp+eax*4+0] esi +
jnz loc_40EB10  +
movzx edx byte ptr [esi+1Bh] +
cmp ebx edx +
jl loc_40EB10  +
mov ebx [esp+8Ch+arg_0] +
mov [esp+8Ch+var_6C] 1 +
mov edi [esp+8Ch+var_44] +
test edi edi +
jz loc_40EBD5  +
lea eax [ebx+48h] +
mov [esp+8Ch+var_8C] eax +
call sub_412190  +
mov eax [esp+8Ch+var_40] +
mov edx [esp+8Ch+var_3C] +
mov [ebx+0A0h] eax +
mov eax [esp+8Ch+var_38] +
and edx 3FFFFh +
shl edx 5 +
mov [ebx+84h] eax +
mov eax [ebx+28h] +
and eax 0FF80001Fh +
or eax edx +
mov [ebx+28h] eax +
mov eax [esp+8Ch+var_28] +
mov [ebx+48h] eax +
mov eax [esp+8Ch+var_24] +
mov [ebx+4Ch] eax +
mov eax [esp+8Ch+var_20] +
mov [ebx+50h] eax +
mov eax [esp+8Ch+var_1C] +
mov [ebx+54h] eax +
mov eax [esp+8Ch+var_18] +
mov [ebx+58h] eax +
mov eax [esp+8Ch+var_14] +
mov [ebx+5Ch] eax +
mov eax [esp+8Ch+var_10] +
mov [ebx+60h] eax +
mov eax [esp+8Ch+var_34] +
mov [ebx+64h] eax +
mov eax [esp+8Ch+var_30] +
mov [ebx+68h] eax +
mov eax [esp+8Ch+var_2C] +
mov [ebx+6Ch] eax +
mov eax [esp+8Ch+var_44] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_88] eax +
call sub_40E390  +
mov [esp+8Ch+var_44] 0 +
cmp [esp+8Ch+var_6C] 1 +
jz loc_40EE13  +
mov ecx [esp+8Ch+var_6C] +
test ecx ecx +
jnz loc_40EEB3  +
mov [esp+8Ch+var_8C] 0Ch +
call sub_4105E0  +
jmp loc_40EC41  +
mov [esp+8Ch+var_8C] 5 +
call sub_4105E0  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_8C] ebx +
call sub_411E10  +
test eax eax +
jz loc_40EF19  +
mov eax [esp+8Ch+var_70] +
and byte ptr [ebx+28h] 0F8h +
test ebp ebp +
mov [ebx+4] eax +
jz loc_40EC58  +
mov [esp+8Ch+var_8C] ebp +
call free  +
mov edx [esp+8Ch+var_44] +
test edx edx +
jz loc_40ECF3  +
lea eax [ebx+48h] +
mov [esp+8Ch+var_8C] eax +
call sub_412190  +
mov eax [esp+8Ch+var_40] +
mov edx [esp+8Ch+var_3C] +
mov [ebx+0A0h] eax +
mov eax [esp+8Ch+var_38] +
and edx 3FFFFh +
shl edx 5 +
mov [ebx+84h] eax +
mov eax [ebx+28h] +
and eax 0FF80001Fh +
or eax edx +
mov [ebx+28h] eax +
mov eax [esp+8Ch+var_28] +
mov [ebx+48h] eax +
mov eax [esp+8Ch+var_24] +
mov [ebx+4Ch] eax +
mov eax [esp+8Ch+var_20] +
mov [ebx+50h] eax +
mov eax [esp+8Ch+var_1C] +
mov [ebx+54h] eax +
mov eax [esp+8Ch+var_18] +
mov [ebx+58h] eax +
mov eax [esp+8Ch+var_14] +
mov [ebx+5Ch] eax +
mov eax [esp+8Ch+var_10] +
mov [ebx+60h] eax +
mov eax [esp+8Ch+var_34] +
mov [ebx+64h] eax +
mov eax [esp+8Ch+var_30] +
mov [ebx+68h] eax +
mov eax [esp+8Ch+var_2C] +
mov [ebx+6Ch] eax +
mov eax [esp+8Ch+var_44] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_88] eax +
call sub_40E390  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi eax +
mov [esp+8Ch+var_64] 1 +
jmp loc_40E9D1  +
test byte ptr [ebx+2Bh] 20h +
jnz loc_40ED7B  +
mov eax [esp+8Ch+var_54] +
cmp off_47D670 eax +
jz loc_40ED28  +
mov eax [edi] +
mov [esp+8Ch+var_54] eax +
mov edx [esp+8Ch+var_68] +
test edx edx +
jz loc_40ED39  +
mov eax [edi] +
mov ecx [esp+8Ch+var_50] +
mov [edx+ecx*4] eax +
add [esp+8Ch+var_50] 1 +
jmp loc_40E9D5  +
call sub_410390  +
cmp eax 3 +
jz loc_40E8D4  +
mov ebp [esp+8Ch+var_68] +
jmp loc_40EC41  +
movzx eax al +
cmp eax [esp+8Ch+arg_4] +
setz al  +
add esp 8Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_410390  +
cmp eax 4 +
jnz loc_40E9A0  +
jmp loc_40ED16  +
mov eax off_47D66C +
mov eax [eax] +
test eax eax +
jnz loc_40E837  +
xor ebp ebp +
jmp loc_40E851  +
test ebp ebp +
mov ebx [esp+8Ch+arg_0] +
jz loc_40EB32  +
mov eax [esp+8Ch+var_64] +
mov edi [esp+8Ch+var_6C] +
cmp edi eax +
jz loc_40EB32  +
mov ecx [esp+8Ch+var_68] +
xor eax eax +
mov esi [ebp+eax*4+0] +
movzx edx byte ptr [esi+1Bh] +
cmp ecx edx +
jge loc_40EDD9  +
add eax 1 +
cmp eax edi +
jl loc_40EDC6  +
mov [esp+8Ch+var_6C] 1 +
jmp loc_40EB32  +
test ebp ebp +
jz loc_40EAD9  +
lea edx ds:0[eax*4] +
mov eax ds:dword_483C30 +
mov [esp+8Ch+var_84] edx +
mov [esp+8Ch+var_8C] ebp +
lea eax [ebp+eax*4+0] +
mov [esp+8Ch+var_88] eax +
call memcpy  +
jmp loc_40EAE4  +
cmp [esp+8Ch+var_5C] esi +
mov [ebx+4] esi +
jz loc_40EE82  +
and dword ptr [ebx+28h] 0FFF9001Fh +
mov dword ptr [ebx+0A0h] 0 +
mov dword ptr [ebx+84h] offset asc_4833C0 +
mov [esp+8Ch+var_8C] ebx +
call sub_40F230  +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_8C] ebx +
call sub_411E10  +
test eax eax +
jnz loc_40EC41  +
movzx edx byte ptr [ebx+28h] +
mov eax [ebx+4] +
and edx 7 +
mov eax [eax+edx*4+64h] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
test eax eax +
jz loc_40EF9D  +
movzx eax byte ptr [ebx+28h] +
and eax 18h +
cmp al 18h +
jz loc_40EF5E  +
test ebp ebp +
mov eax 1 +
jz loc_40EC0E  +
mov [esp+8Ch+var_8C] ebp +
mov [esp+8Ch+var_70] eax +
call free  +
mov eax [esp+8Ch+var_70] +
jmp loc_40EC0E  +
mov eax [esp+8Ch+var_70] +
and byte ptr [ebx+28h] 0F8h +
mov [ebx+4] eax +
mov [esp+8Ch+var_8C] 0Dh +
call sub_4105E0  +
mov eax [esp+8Ch+arg_8] +
test eax eax +
jz loc_40ECF3  +
mov eax [esp+8Ch+arg_8] +
mov [eax] ebp +
mov eax [esp+8Ch+var_6C] +
mov dword ptr [ebp+eax*4+0] 0 +
sub eax 1 +
js loc_40ECF3  +
mov edx [ebp+eax*4+0] +
mov edx [edx] +
mov [ebp+eax*4+0] edx +
sub eax 1 +
cmp eax 0FFFFFFFFh +
jnz loc_40EEF7  +
xor eax eax +
jmp loc_40ECF5  +
mov [esp+8Ch+var_54] esi +
jmp loc_40EAD9  +
movzx edx byte ptr [ebx+28h] +
mov eax [ebx+4] +
and edx 7 +
mov eax [eax+edx*4+64h] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
test eax eax +
jnz loc_40EE82  +
cmp [esp+8Ch+arg_4] 2 +
jnz loc_40E881  +
cmp [esp+8Ch+var_70] offset off_483D40 +
jnz loc_40E881  +
jmp loc_40EBEC  +
mov ebp [esp+8Ch+var_68] +
jmp loc_40EE82  +
or byte ptr [ebx+2Bh] 10h +
jmp loc_40EE91  +
mov esi [esp+8Ch+var_54] +
mov [esp+8Ch+var_6C] 1 +
jmp loc_40EB32  +
mov [esp+8Ch+var_68] 100h +
mov [esp+8Ch+var_54] 0 +
mov [esp+8Ch+var_64] 0 +
mov [esp+8Ch+var_5C] 0 +
jmp loc_40EAB2  +
mov [esp+8Ch+var_88] 1B5h +
mov [esp+8Ch+var_8C] offset a____Binutils_1 +
call sub_410530  +
jmp loc_40EE82  +
mov esi [esp+8Ch+var_54] +
jmp loc_40EB32  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_40E7E0  +
add esp 1Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
movzx eax byte ptr [ebx+28h] +
test al 8 +
jnz loc_40F020  +
mov edx eax +
and edx 7 +
cmp dl 3 +
ja loc_40F020  +
test dl dl +
jz loc_40F033  +
xor eax eax +
movzx edx dl +
cmp edx [esp+18h+arg_4] +
setz al  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] 5 +
call sub_4105E0  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
movzx edx byte ptr [esp+18h+arg_4] +
and eax 0FFFFFFF8h +
and edx 7 +
or eax edx +
movzx edx dl +
mov [ebx+28h] al +
mov eax [ebx+4] +
mov eax [eax+edx*4+74h] +
mov [esp+18h+var_18] ebx +
call eax  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_40F02E  +
and byte ptr [ebx+28h] 0F8h +
add esp 18h +
xor al al +
pop ebx  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 14h +
mov eax dword_47D3A0 +
mov [edx+4] eax +
mov eax [esi+6Ch] +
mov [edx+94h] esi +
mov [edx+8] eax +
mov eax [esi+4] +
mov eax [eax+9Ch] +
mov [esp+0Ch+var_8] edx +
mov [esp+0Ch+var_C] esi +
call eax  +
test eax eax +
jz loc_40F110  +
mov eax [esi+68h] +
add dword ptr [esi+6Ch] 1 +
add dword_47D3A0 1 +
test eax eax +
mov dword ptr [ebx+0Ch] 0 +
jz loc_40F100  +
mov [ebx+10h] eax +
mov [eax+0Ch] ebx +
mov [esi+68h] ebx +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [ebx+10h] 0 +
mov [esi+64h] ebx +
jmp loc_40F0F2  +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
test eax eax +
jz loc_40F195  +
mov edx [esp+14h+arg_8] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
mov [esp+14h+var_C] edx +
call sub_4126E0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_40F17A  +
lea edi [edx+10h] +
mov ebx 0A8h +
test edi 1 +
jnz loc_40F1B0  +
test edi 2 +
jnz loc_40F1C0  +
mov ecx ebx +
xor eax eax +
shr ecx 2 +
test bl 2 +
stos   +
jnz loc_40F185  +
and ebx 1 +
jnz loc_40F180  +
mov eax edx +
add esp 14h +
pop ebx  +
pop edi  +
retn   +
mov byte ptr [edi] 0 +
jmp loc_40F178  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and ebx 1 +
jz loc_40F178  +
jmp loc_40F180  +
mov [esp+14h+var_10] 0B8h +
mov [esp+14h+var_14] ebx +
call sub_412630  +
test eax eax +
jnz loc_40F131  +
xor eax eax +
jmp loc_40F17A  +
mov byte ptr [edx+10h] 0 +
lea edi [edx+11h] +
mov bl 0A7h +
jmp loc_40F15D  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub ebx 2 +
jmp loc_40F165  +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov ebx [esp+24h] +
mov edx [eax+4] +
mov edx [edx+10Ch] +
mov [esp] eax +
call edx  +
test eax eax +
mov [ebx+98h] eax +
jz loc_40F220  +
mov edx [ebx] +
mov dword ptr [eax+8] 0 +
mov [eax+10h] ebx +
mov dword ptr [eax+0Ch] 100h +
mov [eax+4] edx +
lea eax [ebx+98h] +
mov [ebx+9Ch] eax +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov ecx [ebx+54h] +
mov eax [ebx+48h] +
mov dword ptr [ebx+64h] 0 +
mov dword ptr [ebx+68h] 0 +
lea edx ds:0[ecx*4] +
mov dword ptr [ebx+6Ch] 0 +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] eax +
call memset  +
mov dword ptr [ebx+58h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
add eax 48h +
mov [esp+1Ch+var_1C] eax +
call sub_4123C0  +
test eax eax +
jz loc_40F2B5  +
add eax 10h +
add esp 1Ch +
retn   +
xor eax eax +
jmp loc_40F2B1  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov esi [esp+1Ch+arg_0] +
mov ebx [eax-10h] +
mov ebp [eax-8] +
mov edi [eax] +
test ebx ebx +
jnz loc_40F2E6  +
jmp loc_40F310  +
mov ebx [ebx] +
test ebx ebx +
jz loc_40F310  +
cmp [ebx+8] ebp +
jnz loc_40F2E0  +
mov [esp+1Ch+var_18] edi +
mov eax [ebx+4] +
mov [esp+1Ch+var_1C] eax +
call strcmp  +
test eax eax +
jnz loc_40F2E0  +
add esp 1Ch +
lea eax [ebx+10h] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jz loc_40F350  +
mov esi [esi+9Ch] +
test esi esi +
jz loc_40F350  +
lea eax [esi+48h] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] eax +
call sub_4123C0  +
test eax eax +
jz loc_40F314  +
add esp 1Ch +
add eax 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
add eax 48h +
mov [esp+1Ch+var_1C] eax +
call sub_4123C0  +
test eax eax +
mov edx eax +
jz loc_40F3BA  +
test byte ptr [edx+26h] 10h +
lea eax [eax+10h] +
jz loc_40F3A6  +
jmp loc_40F3BC  +
test byte ptr [eax+16h] 10h +
jnz loc_40F3BC  +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] 0 +
call sub_40F2C0  +
test eax eax +
jnz loc_40F3A0  +
xor eax eax +
add esp 1Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov esi [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
add eax 48h +
mov [esp+4] esi +
mov [esp] eax +
call sub_4123C0  +
test eax eax +
mov ebx eax +
jz loc_40F448  +
mov edi [eax+8] +
mov eax edi +
jmp loc_40F409  +
mov ebx [ebx] +
test ebx ebx +
jz loc_40F448  +
mov eax [ebx+8] +
cmp eax edi +
jnz loc_40F400  +
mov [esp+4] esi +
mov eax [ebx+4] +
mov [esp] eax +
call strcmp  +
test eax eax +
jnz loc_40F400  +
mov eax [esp+3Ch] +
lea ebp [ebx+10h] +
mov [esp+4] ebp +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp] eax +
call dword ptr [esp+38h]  +
test eax eax +
jz loc_40F400  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor ebp ebp +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx ebp +
mov [esp+8] edx +
lea ebp [edx+1] +
mov dword ptr [esp+4] offset a_D +
mov [esp] edi +
call sprintf  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov [esp] esi +
call sub_4123C0  +
test eax eax +
jnz loc_40F4C0  +
mov eax [esp+38h] +
test eax eax +
jz loc_40F520  +
mov eax [esp+38h] +
mov [eax] ebp +
mov eax ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx 1 +
jmp loc_40F4B0  +
***
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
jmp loc_40F511  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
test byte ptr [ebx+2Bh] 10h +
jnz loc_40F640  +
mov edi offset aAbs +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_40F5D0  +
mov edi offset aCom +
mov ecx 6 +
mov esi ebp +
cmps   +
jnz loc_40F5B2  +
mov edi offset off_47D3C0 +
mov eax [ebx+4] +
mov eax [eax+9Ch] +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebx +
call eax  +
test eax eax +
jz loc_40F636  +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi offset aUnd +
mov ecx 6 +
mov esi ebp +
cmps   +
jnz loc_40F5D7  +
mov edi offset off_47D468 +
jmp loc_40F58E  +
mov edi offset off_47D510 +
jmp loc_40F58E  +
mov edi offset aInd +
mov ecx 6 +
mov esi ebp +
cmps   +
mov edi offset off_47D5B8 +
setnbe dl  +
setb al  +
cmp dl al +
jz loc_40F58E  +
lea eax [ebx+48h] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call sub_4123C0  +
test eax eax +
mov ecx eax +
jz loc_40F636  +
mov esi [ecx+10h] +
lea edx [eax+10h] +
mov eax edx +
test esi esi +
jnz loc_40F5AA  +
mov [ecx+10h] ebp +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_40F0A0  +
xor eax eax +
jmp loc_40F5AA  +
mov [esp+1Ch+var_1C] 5 +
call sub_4105E0  +
xor eax eax +
jmp loc_40F5AA  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
test byte ptr [esi+2Bh] 10h +
jnz loc_40F6F5  +
lea edx [esi+48h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_10] edx +
call sub_4123C0  +
test eax eax +
mov ebx eax +
jz loc_40F701  +
mov eax [eax+10h] +
mov edx [esp+2Ch+var_10] +
test eax eax +
jz loc_40F6F0  +
mov [esp+2Ch+var_24] ebp +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] 0 +
call sub_40F120  +
test eax eax +
jz loc_40F701  +
mov edx [ebx] +
mov [eax] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
lea edx [eax+10h] +
mov [ebx] eax +
mov [edx+14h] edi +
mov eax esi +
mov [edx] ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_40F0A0  +
lea edx [ebx+10h] +
jmp loc_40F6DA  +
mov [esp+2Ch+var_2C] 5 +
call sub_4105E0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_40F660  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
mov edx [esp+2Ch+arg_8] +
test byte ptr [ebp+2Bh] 10h +
jnz loc_40F7F7  +
mov [esp+2Ch+var_10] edx +
mov edi offset aAbs +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_40F7CF  +
mov edi offset aCom +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_40F7CF  +
mov edi offset aUnd +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_40F7CF  +
mov edi offset aInd +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_40F7CF  +
lea eax [ebp+48h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
call sub_4123C0  +
test eax eax +
jz loc_40F7CF  +
mov edx [eax+10h] +
test edx edx +
mov edx [esp+2Ch+var_10] +
jz loc_40F7E0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [eax+24h] edx +
lea edx [eax+10h] +
mov [eax+10h] ebx +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_40F0A0  +
mov [esp+2Ch+var_2C] 5 +
call sub_4105E0  +
jmp loc_40F7CF  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_40F740  +
add esp 1Ch +
retn   +
***
mov eax dword_47D3A0 +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_8] +
mov [eax+14h] edx +
mov eax 1 +
retn   +
***
jmp sub_40F870  +
***
mov eax [esp+arg_8] +
mov edx [esp+arg_4] +
mov [edx] eax +
sub edx 10h +
mov [esp+arg_4] eax +
mov eax [esp+arg_0] +
mov [esp+arg_8] edx +
add eax 48h +
mov [esp+arg_0] eax +
jmp sub_412510  +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_8] +
mov edi [esi+64h] +
test edi edi +
jz loc_40F8D1  +
mov [esp+1Ch+var_18] edi +
add ebx 1 +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_1C] esi +
call [esp+1Ch+arg_4]  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_40F8B8  +
cmp [esi+6Ch] ebx +
jnz loc_40F8DE  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_14] offset aBfd_map_over_s +
mov [esp+1Ch+var_18] 573h +
mov [esp+1Ch+var_1C] offset a____Binutils_6 +
call sub_410560  +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+48h+var_18] +
mov ebp [esp+48h+var_14] +
mov edi [esp+48h+var_10] +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_40F927  +
jmp loc_40F942  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_40F942  +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] esi +
call ebp  +
test eax eax +
jz loc_40F920  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
test byte ptr [eax+2Bh] 10h +
jnz loc_40F971  +
mov eax [esp+1Ch+arg_4] +
mov edx [esp+1Ch+arg_8] +
mov [eax+24h] edx +
mov eax 1 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] 5 +
call sub_4105E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_C] +
mov edi [esp+2Ch+arg_10] +
mov ebx [esp+2Ch+arg_14] +
test byte ptr [ebp+15h] 1 +
jz loc_40FA62  +
mov ecx [ebp+24h] +
cmp ecx esi +
jb loc_40F9D0  +
cmp ecx ebx +
jb loc_40F9D0  +
mov eax ebx +
xor edx edx +
add eax esi +
adc edx edi +
cmp edx 0 +
jl loc_40F9E6  +
jg loc_40F9D0  +
cmp eax ecx +
jbe loc_40F9E6  +
nop   +
mov [esp+2Ch+var_2C] 11h +
call sub_4105E0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_0] +
test byte ptr [eax+28h] 10h +
jz loc_40FA78  +
mov eax [ebp+6Ch] +
test eax eax +
jz loc_40FA17  +
add eax esi +
cmp eax [esp+2Ch+arg_8] +
jz loc_40FA17  +
mov edx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call memcpy  +
mov eax [esp+2Ch+arg_0] +
mov edx [esp+2Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+154h] +
mov [esp+2Ch+var_1C] edi +
mov edi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_18] ebx +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] ebp +
call eax  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_40F9DE  +
mov eax [esp+2Ch+arg_0] +
or byte ptr [eax+2Bh] 10h +
add esp 2Ch +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] 0Eh +
call sub_4105E0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] 5 +
call sub_4105E0  +
xor eax eax +
jmp loc_40F9DE  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+2Ch+arg_4] +
mov eax [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_C] +
mov ebx [edx+14h] +
mov [esp+2Ch+var_20] eax +
mov ebp [esp+2Ch+arg_10] +
mov ecx [esp+2Ch+arg_14] +
test bl 80h +
jnz loc_40FB62  +
movzx eax byte ptr [esi+28h] +
and eax 18h +
cmp al 10h +
jz loc_40FB26  +
mov eax [edx+28h] +
test eax eax +
jz loc_40FB26  +
cmp eax edi +
jb loc_40FB10  +
cmp eax ecx +
jb loc_40FB10  +
mov [esp+2Ch+var_1C] ecx +
add [esp+2Ch+var_1C] edi +
mov [esp+2Ch+var_18] 0 +
adc [esp+2Ch+var_18] ebp +
cmp [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_10] 0 +
jl loc_40FB30  +
jg loc_40FB10  +
mov eax [esp+2Ch+var_14] +
cmp [esp+2Ch+var_1C] eax +
jbe loc_40FB30  +
lea esi [esi+0] +
mov [esp+2Ch+var_2C] 11h +
call sub_4105E0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+24h] +
jmp loc_40FAD1  +
test ecx ecx +
jz loc_40FB87  +
test bh 1 +
jz loc_40FB62  +
test bh 40h +
jz loc_40FB90  +
mov eax [edx+6Ch] +
test eax eax +
jz loc_40FBC0  +
add eax edi +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_2C] eax +
call memmove  +
mov eax 1 +
jmp loc_40FB1E  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call memset  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 1 +
jmp loc_40FB1E  +
mov eax [esi+4] +
mov eax [eax+0A0h] +
mov [esp+2Ch+arg_C] edi +
mov edi [esp+2Ch+var_20] +
mov [esp+2Ch+arg_10] ebp +
mov [esp+2Ch+arg_0] esi +
mov [esp+2Ch+arg_14] ecx +
mov [esp+2Ch+arg_8] edi +
mov [esp+2Ch+arg_4] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
and bh 0BFh +
mov [edx+14h] ebx +
mov [esp+2Ch+var_2C] 5 +
call sub_4105E0  +
xor eax eax +
jmp loc_40FB1E  +
***
mov eax [esp+arg_8] +
mov dword ptr [eax] 0 +
jmp sub_414B50  +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov [esp] esi +
call sub_412BD0  +
test eax eax +
mov ebx eax +
jz loc_40FC3B  +
mov [esp+8] esi +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call memset  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov edx [esp+0Ch] +
xor eax eax +
mov ecx [esp+8] +
mov ebx [edx+0Ch] +
cmp [ecx+0Ch] ebx +
jnz loc_40FC79  +
mov ebx [edx] +
cmp [ecx] ebx +
jnz loc_40FC79  +
mov ebx [edx+10h] +
mov eax ecx +
cmp [ecx+10h] ebx +
mov ecx edx +
cmovnb ecx eax +
cmovbe eax ecx +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi ds:_stricmp +
mov esi [esp+30h] +
mov ebx [esp+34h] +
mov eax [esi+14h] +
mov [esp] ebx +
mov [esp+4] eax +
call edi  +
test eax eax +
jnz loc_40FCB0  +
mov eax [esi+20h] +
test eax eax +
jnz loc_40FE18  +
mov eax [esi+18h] +
mov [esp] ebx +
mov [esp+4] eax +
call edi  +
test eax eax +
jz loc_40FE18  +
mov ebp [esi+18h] +
mov dword ptr [esp+4] 3Ah +
mov [esp] ebp +
call strchr  +
test eax eax +
jz loc_40FDCC  +
sub eax ebp +
mov [esp+8] eax +
mov [esp+0Ch] eax +
mov [esp+4] ebp +
mov [esp] ebx +
call ds:_strnicmp  +
mov edx [esp+0Ch] +
test eax eax +
jz loc_40FE84  +
movzx eax byte ptr [ebx] +
mov edx [esi+14h] +
test al al +
jnz loc_40FD26  +
jmp loc_40FE31  +
cmp al cl +
jnz loc_40FD2D  +
add ebx 1 +
movzx eax byte ptr [ebx] +
add edx 1 +
test al al +
jz loc_40FE31  +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_40FD11  +
cmp al 3Ah +
jz loc_40FE25  +
movsx edx byte ptr [ebx] +
test dl dl +
jz loc_40FE31  +
movzx ecx dl +
xor eax eax +
test ds:byte_49F240[ecx+ecx] 4 +
jz loc_40FE1D  +
add ebx 1 +
lea eax [eax+eax*4] +
lea eax [edx+eax*2-30h] +
movsx edx byte ptr [ebx] +
movzx ecx dl +
test ds:byte_49F240[ecx+ecx] 4 +
jnz loc_40FD53  +
cmp eax 1CF2h +
mov edx eax +
jz loc_40FF93  +
jbe loc_40FE40  +
cmp eax 109AAh +
jz loc_40FFAC  +
nop   +
lea esi [esi+0] +
ja loc_40FEA3  +
cmp eax 1E46h +
jz loc_40FF02  +
ja loc_40FF72  +
cmp eax 1E1Ch +
jz loc_40FFE8  +
cmp eax 1E31h +
jnz loc_410039  +
mov ecx 25h +
mov edx 3Dh +
jmp loc_40FED2  +
mov ebp [esi+14h] +
mov [esp] ebp +
call strlen  +
mov [esp+4] ebp +
mov [esp] ebx +
mov [esp+8] eax +
mov [esp+0Ch] eax +
call ds:_strnicmp  +
mov edx [esp+0Ch] +
test eax eax +
jnz loc_40FD02  +
lea eax [ebx+edx] +
cmp byte ptr [eax] 3Ah +
jz loc_41001C  +
mov edx [esi+18h] +
mov [esp] eax +
mov [esp+4] edx +
call edi  +
test eax eax +
jnz loc_40FD02  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movsx edx byte ptr [ebx+1] +
add ebx 1 +
jmp loc_40FD38  +
***
mov eax [esi+20h] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp eax 1450h +
jz loc_40FFCA  +
jbe loc_40FF0E  +
cmp eax 14BBh +
jz loc_40FEEA  +
lea esi [esi+0] +
ja loc_40FF52  +
cmp eax 1456h +
jz loc_40FEEA  +
cmp eax 14A2h +
jnz loc_410039  +
mov ecx 2 +
mov edx 10h +
jmp loc_40FED2  +
mov eax [esi+18h] +
lea eax [eax+edx+1] +
add edx ebx +
mov [esp+4] eax +
mov [esp] edx +
call edi  +
test eax eax +
jnz loc_40FD02  +
jmp loc_40FE18  +
***
cmp eax 109C8h +
jz loc_40FEF6  +
lea esi [esi+0] +
ja loc_40FF30  +
cmp eax 109B4h +
jz loc_40FFBB  +
cmp eax 109BEh +
jnz loc_410039  +
mov ecx 2 +
mov edx 5 +
xor eax eax +
cmp [esi+0Ch] ecx +
jnz loc_40FE1D  +
xor eax eax +
cmp [esi+10h] edx +
setz al  +
jmp loc_40FE1D  +
***
mov ecx 2 +
mov edx 0Ch +
jmp loc_40FED2  +
***
mov ecx 2 +
mov edx 6 +
jmp loc_40FED2  +
***
mov ecx 25h +
mov edx 40h +
jmp loc_40FED2  +
***
cmp eax 8 +
jbe loc_410006  +
cmp eax 0BB8h +
jz loc_40FF29  +
cmp eax 0FA0h +
jnz loc_410039  +
mov ecx 8 +
jmp loc_40FED2  +
***
cmp eax 109DCh +
jz loc_40FFD9  +
cmp eax 10AECh +
jnz loc_410039  +
mov ecx 2 +
mov edx 8 +
jmp loc_40FED2  +
***
cmp eax 151Fh +
jz loc_40FFF7  +
cmp eax 1770h +
jnz loc_410039  +
mov ecx 1Ah +
jmp loc_40FED2  +
***
cmp eax 7D00h +
jz loc_40FFA2  +
cmp eax 109A0h +
jnz loc_410039  +
mov ecx 2 +
mov edx 1 +
jmp loc_40FED2  +
***
mov ecx 25h +
mov edx 2Dh +
jmp loc_40FED2  +
***
mov ecx 0Dh +
jmp loc_40FED2  +
***
mov ecx 2 +
mov edx 3 +
jmp loc_40FED2  +
***
mov ecx 2 +
mov edx 4 +
jmp loc_40FED2  +
***
mov ecx 2 +
mov edx 0Ah +
jmp loc_40FED2  +
***
mov ecx 2 +
mov edx 7 +
jmp loc_40FED2  +
***
mov ecx 25h +
mov edx 30h +
jmp loc_40FED2  +
***
mov ecx 2 +
mov edx 12h +
jmp loc_40FED2  +
***
cmp eax 3 +
jnb loc_410010  +
cmp eax 1 +
jnz loc_410039  +
mov edx eax +
mov ecx 2 +
jmp loc_40FED2  +
***
mov eax [esi+18h] +
mov [esp+4] eax +
lea eax [ebx+edx+1] +
mov [esp] eax +
call edi  +
test eax eax +
jnz loc_40FD02  +
jmp loc_40FE18  +
***
xor eax eax +
nop   +
lea esi [esi+0] +
jmp loc_40FE1D  +
***
mov eax [esp+arg_0] +
mov eax [eax+84h] +
mov eax [eax+18h] +
retn   +
***
push edi  +
mov edi offset off_4833F4 +
push esi  +
push ebx  +
mov ebx offset unk_484020 +
sub esp 10h +
mov esi [esp+20h] +
mov eax [ebx+28h] +
mov [esp+4] esi +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_410098  +
mov ebx [ebx+30h] +
test ebx ebx +
jnz loc_410074  +
add edi 4 +
mov ebx [edi] +
test ebx ebx +
jnz loc_410074  +
xor eax eax +
jmp loc_41009A  +
mov eax ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_4100B0  +
***
push ebx  +
xor edx edx +
sub esp 14h +
mov eax [eax+30h] +
mov ebx offset off_4833F4 +
lea ecx [edx+1] +
test eax eax +
jz loc_4100DC  +
nop   +
lea esi [esi+0] +
mov eax [eax+30h] +
mov edx ecx +
lea ecx [edx+1] +
test eax eax +
jnz loc_4100D0  +
add ebx 4 +
mov eax [ebx] +
test eax eax +
jnz loc_4100D0  +
lea eax ds:8[edx*4] +
mov [esp+14h+var_14] eax +
call sub_412BD0  +
test eax eax +
jz loc_410129  +
mov ecx eax +
mov ebx offset off_4833F4 +
mov edx offset unk_484020 +
mov esi [edx+18h] +
add ecx 4 +
mov [ecx-4] esi +
mov edx [edx+30h] +
test edx edx +
jnz loc_410104  +
add ebx 4 +
mov edx [ebx] +
test edx edx +
jnz loc_410104  +
mov dword ptr [ecx] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
jmp loc_410123  +
***
push edi  +
push esi  +
push ebx  +
mov eax [esp+10h] +
mov edx [esp+14h] +
mov ebx [esp+18h] +
mov ecx [eax+84h] +
mov edi [ecx+0Ch] +
test edi edi +
jz loc_41015F  +
mov edi [edx+84h] +
mov esi [edi+0Ch] +
test esi esi +
jnz loc_410187  +
mov ecx eax +
mov eax edx +
mov edx ecx +
test ebx ebx +
jz loc_410170  +
mov eax [edx+84h] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+4] +
mov edi offset aBinary_0 +
mov ecx 7 +
mov esi [eax] +
cmps   +
jz loc_410163  +
xor eax eax +
jmp loc_410169  +
***
mov eax [ecx+24h] +
mov [esp+14h] edi +
mov [esp+10h] ecx +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax+84h] edx +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+84h] +
mov eax [eax+0Ch] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+84h] +
mov eax [eax+10h] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+84h] +
mov eax [eax+8] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+84h] +
mov eax [eax+4] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+84h] +
retn   +
***
mov edx [esp+arg_0] +
mov ecx [esp+arg_4] +
mov ebx offset off_4833F4 +
jmp loc_41021C  +
mov eax [eax+30h] +
test eax eax +
jz loc_410234  +
cmp [eax+0Ch] edx +
jnz loc_410215  +
cmp [eax+10h] ecx +
jz loc_410232  +
test ecx ecx +
jnz loc_410215  +
cmp dword ptr [eax+20h] 0 +
nop   +
jz loc_410215  +
pop ebx  +
retn   +
add ebx 4 +
mov eax [ebx] +
test eax eax +
jnz loc_41021C  +
xor eax eax +
pop ebx  +
retn   +
***
jmp sub_410250  +
***
mov eax [esp+18h+arg_8] +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_410200  +
mov edx eax +
test edx edx +
mov [ebx+84h] eax +
mov eax 1 +
jz loc_410282  +
add esp 18h +
pop ebx  +
retn   +
mov dword ptr [ebx+84h] offset asc_4833C0 +
mov [esp+18h+var_18] 11h +
call sub_4105E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 8 +
mov eax [esp+10h] +
mov [esp+4] eax +
mov eax [esp+0Ch] +
mov [esp] eax +
call sub_410200  +
test eax eax +
jz loc_4102C2  +
mov eax [eax+18h] +
add esp 8 +
retn   +
***
mov eax offset aUnknown_3 +
add esp 8 +
retn   +
***
sub esp 8 +
mov eax [esp+8+arg_0] +
mov eax [eax+84h] +
mov edx [eax+10h] +
mov [esp+8+var_4] edx +
mov eax [eax+0Ch] +
mov [esp+8+var_8] eax +
call sub_410200  +
test eax eax +
jz loc_410305  +
mov eax [eax+8] +
test eax eax +
lea edx [eax+7] +
cmovs eax edx +
add esp 8 +
sar eax 3 +
retn   +
mov eax 1 +
add esp 8 +
retn   +
***
sub esp 8 +
mov eax [esp+10h] +
mov [esp+4] eax +
mov eax [esp+0Ch] +
mov [esp] eax +
call sub_410200  +
test eax eax +
jz loc_410340  +
mov eax [eax+8] +
test eax eax +
lea edx [eax+7] +
cmovs eax edx +
add esp 8 +
sar eax 3 +
retn   +
***
mov eax 1 +
add esp 8 +
retn   +
***
mov eax off_47D664 +
jmp eax  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
retn   +
***
mov eax [esp+28h+arg_0] +
cmp eax 14h +
jz loc_4103D0  +
cmp eax 1 +
jz loc_410411  +
cmp eax 15h +
mov edx 15h +
cmovbe edx eax +
mov eax ds:off_4837C0[edx*4] +
add esp 28h +
pop ebx  +
retn   +
mov eax ds:dword_4A8504 +
mov [esp+28h+var_28] eax +
call sub_4103A0  +
mov ebx eax +
mov eax ds:dword_4A8508 +
mov eax [eax] +
mov [esp+28h+var_1C] ebx +
mov [esp+28h+var_24] offset aErrorReadingSS +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call sub_47A690  +
cmp eax 0FFFFFFFFh +
mov eax ebx +
cmovnz eax [esp+28h+var_C] +
add esp 28h +
pop ebx  +
retn   +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+28h+var_28] eax +
call sub_4698C0  +
jmp loc_4103C4  +
***
mov eax ds:_iob +
mov ebx [esp+18h+arg_0] +
add eax 20h +
mov [esp+18h+var_18] eax +
call fflush  +
test ebx ebx +
mov eax ds:dword_4A850C +
jz loc_410456  +
cmp byte ptr [ebx] 0 +
jnz loc_410490  +
mov [esp+18h+var_18] eax +
call sub_4103A0  +
mov [esp+18h+var_14] offset aS_1 +
mov [esp+18h+var_10] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp fflush  +
mov [esp+18h+var_18] eax +
call sub_4103A0  +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aSS_1 +
mov [esp+18h+var_C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
jmp loc_41047A  +
***
mov edx [esp+4] +
mov eax off_47D664 +
mov off_47D664 edx +
retn   +
***
mov eax [esp+4] +
mov ds:dword_4A8500 eax +
retn   +
***
mov eax off_47D664 +
retn   +
***
mov edx [esp+4] +
mov eax off_47D660 +
mov off_47D660 edx +
retn   +
***
mov eax off_47D660 +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [eax+48h] edx +
mov edx [esp+10h] +
mov [eax+4Ch] edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] offset aGnuBinutils2_2 +
mov [esp+1Ch+var_1C] offset aBfdSAssertionF +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] eax +
call off_47D660  +
add esp 1Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_4105AD  +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] offset aGnuBinutils2_2 +
mov [esp+2Ch+var_2C] offset aBfdSInternalEr +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] eax +
call off_47D664  +
mov [esp+2Ch+var_2C] offset aPleaseReportTh +
call off_47D664  +
mov [esp+2Ch+var_2C] 1 +
call _exit  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] offset aGnuBinutils2_2 +
mov [esp+2Ch+var_2C] offset aBfdSInternal_0 +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] eax +
call off_47D664  +
jmp loc_410594  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
cmp eax 14h +
mov ds:dword_4A850C eax +
jz loc_4105F5  +
add esp 1Ch +
retn   +
mov eax [esp+1Ch+arg_4] +
mov ds:dword_4A8508 eax +
mov eax [esp+1Ch+arg_8] +
cmp eax 13h +
mov ds:dword_4A8504 eax +
jbe loc_4105F1  +
mov [esp+1Ch+var_14] offset aBfd_set_error +
mov [esp+1Ch+var_18] 203h +
mov [esp+1Ch+var_1C] offset a____BinutilsBf +
call sub_410560  +
nop   +
lea esi [esi+0] +
sub esp 1Ch +
mov edx [esp+38h+var_18] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 1 +
jnz loc_410650  +
mov eax [edx+4] +
mov eax [eax+140h] +
add esp 1Ch +
jmp eax  +
mov [esp+38h+var_38] 5 +
call sub_4105E0  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov edx [esp+14h+arg_0] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 1 +
jnz loc_410694  +
mov eax [edx+4] +
mov eax [eax+144h] +
add esp 14h +
pop ebx  +
pop esi  +
jmp eax  +
mov [esp+14h+var_14] 5 +
call sub_4105E0  +
add esp 14h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov ecx [esp+24h] +
movzx edx byte ptr [eax+28h] +
mov ebx edx +
and ebx 7 +
cmp bl 1 +
jnz loc_410707  +
and edx 8 +
jnz loc_4106F4  +
mov edx [eax+28h] +
mov ebx ecx +
and ebx 3FFFFh +
shl ebx 5 +
and edx 0FF80001Fh +
or edx ebx +
mov [eax+28h] edx +
mov eax [eax+4] +
mov edx [eax+10h] +
and edx ecx +
cmp edx ecx +
jz loc_410720  +
mov dword ptr [esp] 5 +
call sub_4105E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4105E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 41Ch +
mov eax ds:_iob +
mov edi [esp+41Ch+arg_0] +
add eax 20h +
mov [esp+41Ch+var_41C] eax +
call fflush  +
mov eax ds:dword_4A8500 +
test eax eax +
jz loc_410A1C  +
mov [esp+41Ch+var_414] eax +
mov eax ds:_iob +
mov [esp+41Ch+var_418] offset aS +
add eax 40h +
mov [esp+41Ch+var_41C] eax +
call fprintf  +
lea eax [esp+41Ch+arg_4] +
mov ebp 3E7h +
mov [esp+41Ch+var_41C] edi +
mov [esp+41Ch+var_400] eax +
call strlen  +
sub ebp eax +
cmp ebp 3E8h +
ja loc_410A89  +
lea eax [esp+41Ch+var_3F4] +
mov ecx edi +
mov esi edi +
mov [esp+41Ch+var_408] eax +
lea esi [esi+0] +
mov [esp+41Ch+var_418] 25h +
mov [esp+41Ch+var_41C] ecx +
call strchr  +
test eax eax +
mov ebx eax +
jz loc_4108FA  +
movzx eax byte ptr [eax+1] +
test al al +
jz loc_4108FA  +
sub eax 41h +
cmp al 1 +
lea ecx [ebx+2] +
ja loc_4107B0  +
mov esi ebx +
sub esi edi +
mov [esp+41Ch+var_418] edi +
mov edi [esp+41Ch+var_408] +
mov [esp+41Ch+var_414] esi +
mov [esp+41Ch+var_404] ecx +
mov [esp+41Ch+var_41C] edi +
call memcpy  +
mov ecx [esp+41Ch+var_404] +
test ebp ebp +
lea edx [edi+esi] +
mov edi ecx +
jnz loc_410821  +
lea eax [edx+2] +
mov byte ptr [edx] 2Ah +
lea esi [esp+41Ch+var_3F4] +
mov [esp+41Ch+var_408] eax +
mov byte ptr [edx+1] 2Ah +
mov byte ptr [edx+2] 0 +
jmp loc_4107B0  +
mov eax [esp+41Ch+var_400] +
cmp byte ptr [ebx+1] 42h +
lea ebx [eax+4] +
mov eax [eax] +
jz loc_41097E  +
test eax eax +
jz loc_410A95  +
mov ecx [eax+94h] +
test ecx ecx +
jz loc_41085E  +
mov ecx [ecx+4] +
mov ecx [ecx+4] +
cmp ecx 5 +
jz loc_4109C5  +
cmp ecx 2 +
jz loc_4109E5  +
mov eax [eax] +
mov [esp+41Ch+var_41C] edx +
mov [esp+41Ch+var_414] offset aS_9 +
mov [esp+41Ch+var_418] ebp +
mov [esp+41Ch+var_410] eax +
mov [esp+41Ch+var_408] edx +
call sub_410360  +
mov edx [esp+41Ch+var_408] +
mov [esp+41Ch+var_400] ebx +
mov [esp+41Ch+var_41C] edx +
add ebp 2 +
xor esi esi +
mov [esp+41Ch+var_408] edx +
call strlen  +
mov edx [esp+41Ch+var_408] +
sub ebp eax +
lea ebx [edx+eax] +
mov eax edx +
jmp loc_4108A8  +
add eax 1 +
add esi 1 +
mov [esp+41Ch+var_418] 25h +
mov [esp+41Ch+var_41C] eax +
call strchr  +
test eax eax +
jnz loc_4108A2  +
lea eax [ebx+esi] +
cmp ebp esi +
mov [esp+41Ch+var_408] eax +
jb loc_410955  +
sub ebp esi +
test esi esi +
jnz loc_4108D6  +
jmp loc_4108EF  +
sub ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 25h +
mov [ebx+esi] al +
jnz loc_4108D3  +
sub esi 1 +
sub ebx 1 +
mov byte ptr [ebx+esi+1] 25h +
test esi esi +
jnz loc_4108D6  +
mov ecx edi +
lea esi [esp+41Ch+var_3F4] +
jmp loc_4107B0  +
lea eax [esp+41Ch+var_3F4] +
cmp esi eax +
jz loc_410A49  +
mov eax [esp+41Ch+var_400] +
mov [esp+41Ch+var_418] esi +
mov [esp+41Ch+var_414] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+41Ch+var_41C] eax +
call vfprintf  +
mov eax ds:_iob +
mov [esp+41Ch+var_41C] 0Ah +
add eax 40h +
mov [esp+41Ch+var_418] eax +
call fputc  +
mov eax ds:_iob +
add eax 40h +
mov [esp+41Ch+var_41C] eax +
call fflush  +
add esp 41Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
sub eax ebp +
mov edx eax +
neg edx  +
add [esp+41Ch+var_408] edx +
add ebx edx +
xor edx edx +
cmp byte ptr [ebx+eax-1] 25h +
setz dl  +
sub esi edx +
sub eax 1 +
jnz loc_410963  +
mov byte ptr [ebx] 0 +
xor ebp ebp +
jmp loc_4108CD  +
test eax eax +
jz loc_410A6D  +
mov ecx [eax+8Ch] +
test ecx ecx +
jz loc_41085E  +
mov esi [eax] +
mov eax [ecx] +
mov [esp+41Ch+var_414] offset aSS +
mov [esp+41Ch+var_40C] esi +
mov [esp+41Ch+var_410] eax +
mov [esp+41Ch+var_41C] edx +
mov [esp+41Ch+var_418] ebp +
mov [esp+41Ch+var_408] edx +
call sub_410360  +
mov edx [esp+41Ch+var_408] +
mov [esp+41Ch+var_400] ebx +
jmp loc_410884  +
mov ecx [eax+8Ch] +
mov esi [ecx+7Ch] +
test esi esi +
jz loc_41085E  +
test byte ptr [eax+17h] 2 +
jnz loc_41085E  +
mov ecx [ecx+74h] +
jmp loc_410A00  +
mov ecx [eax+8Ch] +
test ecx ecx +
jz loc_41085E  +
mov ecx [ecx+1Ch] +
test ecx ecx +
jz loc_41085E  +
mov ecx [ecx] +
test ecx ecx +
jz loc_41085E  +
mov eax [eax] +
mov [esp+41Ch+var_40C] ecx +
mov [esp+41Ch+var_414] offset aSS_0 +
mov [esp+41Ch+var_410] eax +
jmp loc_4109A8  +
mov eax ds:_iob +
mov [esp+41Ch+var_414] 5 +
mov [esp+41Ch+var_418] 1 +
mov [esp+41Ch+var_41C] offset aBfd +
add eax 40h +
mov [esp+41Ch+var_410] eax +
call fwrite  +
jmp loc_41077A  +
mov [esp+41Ch+var_41C] edi +
call strlen  +
mov [esp+41Ch+var_418] edi +
add eax 1 +
mov [esp+41Ch+var_414] eax +
mov eax [esp+41Ch+var_408] +
mov [esp+41Ch+var_41C] eax +
call memcpy  +
jmp loc_410906  +
mov [esp+41Ch+var_414] offset a_bfd_default_e +
mov [esp+41Ch+var_418] 2BAh +
mov [esp+41Ch+var_41C] offset a____BinutilsBf +
call sub_410560  +
mov [esp+41Ch+var_41C] 1 +
call _exit  +
mov [esp+41Ch+var_414] offset a_bfd_default_e +
mov [esp+41Ch+var_418] 2CAh +
mov [esp+41Ch+var_41C] offset a____BinutilsBf +
call sub_410560  +
jmp sub_410AC0  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jz loc_410AE7  +
mov [esp+1Ch+var_1C] eax +
call sub_4101E0  +
cmp eax 21h +
sbb eax eax +
add esp 1Ch +
and eax 0FFFFFFE0h +
add eax 40h +
retn   +
mov eax [edx+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ah] +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jz loc_410BE7  +
mov edx [eax] +
mov ecx 9 +
mov edi offset aCoffGo32 +
mov eax 1 +
mov esi edx +
cmps   +
setnbe bl  +
setb cl  +
cmp bl cl +
jz loc_410BE0  +
mov edi offset aPeI386 +
mov ecx 8 +
mov esi edx +
cmps   +
jz loc_410BE0  +
mov edi offset aPeiI386 +
mov ecx 9 +
mov esi edx +
cmps   +
jz loc_410BE0  +
mov edi offset aPeX8664 +
mov ecx 0Ah +
mov esi edx +
cmps   +
jz loc_410BE0  +
mov edi offset aPeiX8664 +
mov ecx 0Bh +
mov esi edx +
cmps   +
jz loc_410BE0  +
mov edi offset aPeArmWinceLitt +
mov ecx 14h +
mov esi edx +
cmps   +
jz loc_410BE0  +
mov edi offset aPeiArmWinceLit +
mov ecx 15h +
mov esi edx +
cmps   +
jz loc_410BE0  +
mov edi offset aAixcoffRs6000 +
mov ecx 0Fh +
mov esi edx +
cmps   +
jz loc_410BE0  +
mov esi edx +
mov edi offset aMachO +
mov ecx 6 +
cmps   +
setnbe al  +
setb dl  +
sub eax edx +
movsx eax al +
test eax eax +
jz loc_410BE0  +
mov [esp+10h+var_10] 3 +
call sub_4105E0  +
or eax 0FFFFFFFFh +
nop   +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
shr al 7 +
movzx eax al +
retn   +
***
jmp sub_410C10  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov [eax+74h] edx +
mov eax 1 +
retn   +
***
jmp loc_410C30  +
mov ecx [esp+4] +
xor eax eax +
movzx edx byte ptr [ecx+28h] +
and edx 7 +
cmp dl 1 +
jz loc_410C44  +
retn   +
***
mov edx [ecx+4] +
mov edx [edx+4] +
cmp edx 3 +
jz loc_410C61  +
cmp edx 5 +
jnz locret_410C42  +
mov eax [ecx+0A0h] +
mov eax [eax+210h] +
retn   +
***
mov eax [ecx+0A0h] +
mov eax [eax+1Ch] +
retn   +
***
sub esp 1Ch +
mov edx [esp+20h] +
test edx edx +
jz loc_410D53  +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 1 +
jz loc_410D20  +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+4] +
cmp eax 3 +
jz loc_410D44  +
cmp eax 5 +
jnz loc_410D16  +
mov eax [edx+0A0h] +
mov ecx [esp+24h] +
mov [eax+20Ch] ecx +
add esp 1Ch +
retn   +
***
mov eax [edx+0A0h] +
mov ecx [esp+24h] +
mov [eax+18h] ecx +
jmp loc_410D16  +
***
mov dword ptr [esp+8] offset a_bfd_set_gp_va +
mov dword ptr [esp+4] 502h +
mov dword ptr [esp] offset a____BinutilsBf +
call sub_410560  +
nop   +
jmp strtoul  +
***
push esi  +
push ebx  +
mov ecx [esp+arg_8] +
mov edx [esp+arg_0] +
mov ebx [esp+arg_4] +
mov esi [esp+arg_C] +
cmp dword ptr [ecx+4] 1 +
mov edi [esp+arg_10] +
mov eax edx +
mov ebp [esp+arg_14] +
jnz loc_410DB2  +
mov eax [ecx+10h] +
mov eax [eax+94h] +
test eax eax +
cmovz eax edx +
mov eax [eax+4] +
mov eax [eax+15Ch] +
mov [esp+arg_14] ebp +
mov [esp+arg_10] edi +
mov [esp+arg_C] esi +
mov [esp+arg_8] ecx +
mov [esp+arg_4] ebx +
mov [esp+arg_0] edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push edi  +
mov eax 1 +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov edx [ebx+4] +
cmp dword ptr [edx+4] 5 +
jz loc_410E00  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+40h] +
mov [esp] ebx +
lea edi ds:0FFFFFFFCh[eax*4] +
lea eax [edi+2Ch] +
mov [esp+4] eax +
call sub_40E220  +
test eax eax +
mov esi eax +
jz loc_410ED0  +
mov eax [esp+24h] +
movzx edx byte ptr [esi+20h] +
movzx ecx byte ptr [esp+28h] +
mov [esi+4] eax +
mov eax [esp+2Ch] +
and edx 0FFFFFFFCh +
and ecx 1 +
or edx ecx +
movzx ecx byte ptr [esp+38h] +
mov [esi+8] eax +
mov eax [esp+34h] +
and ecx 1 +
mov [esi+0Ch] eax +
movzx eax byte ptr [esp+30h] +
shl ecx 4 +
and eax 1 +
add eax eax +
or edx eax +
movzx eax byte ptr [esp+3Ch] +
and edx 0FFFFFFCFh +
or edx ecx +
and eax 1 +
shl eax 5 +
or edx eax +
mov eax [esp+40h] +
mov [esi+20h] dl +
test eax eax +
mov [esi+24h] eax +
jnz loc_410EB0  +
mov eax [ebx+0A0h] +
mov eax [eax+934h] +
mov ecx [eax] +
test ecx ecx +
jnz loc_410E97  +
jmp loc_410ED7  +
mov ecx edx +
mov edx [ecx] +
test edx edx +
jnz loc_410E95  +
mov [ecx] esi +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+44h] +
lea eax [esi+28h] +
add edi 4 +
mov [esp+8] edi +
mov [esp] eax +
mov [esp+4] edx +
call memcpy  +
jmp loc_410E81  +
***
xor eax eax +
jmp loc_410DF8  +
***
mov ecx eax +
lea esi [esi+0] +
jmp loc_410E9D  +
***
mov eax [esp+arg_4] +
mov [esp+arg_4] offset a08lx +
mov [esp+arg_0] eax +
jmp sprintf  +
***
mov eax [esp+arg_4] +
mov [esp+arg_4] offset a08lx +
mov [esp+arg_0] eax +
jmp fprintf  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_413A10  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_410FCE  +
cmp dword ptr [edx+4] 5 +
jnz loc_410FCE  +
mov eax [edx+1B0h] +
mov eax [eax+10h] +
add esp 1Ch +
retn   +
***
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_14] 0 +
mov ebx [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_413A10  +
test eax eax +
mov edx eax +
jnz loc_411012  +
jmp loc_411030  +
mov edx [edx+1ACh] +
test edx edx +
jz loc_411030  +
cmp edx eax +
jz loc_411030  +
cmp dword ptr [edx+4] 5 +
jnz loc_411004  +
mov ecx [edx+1B0h] +
mov edx [edx+1ACh] +
mov [ecx+10h] ebx +
test edx edx +
jnz loc_41100E  +
nop   +
lea esi [esi+0] +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_413A10  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_41106E  +
cmp dword ptr [edx+4] 5 +
jnz loc_41106E  +
mov eax [edx+1B0h] +
mov eax [eax+18h] +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov ebx [esp+24h] +
mov [esp] eax +
call sub_413A10  +
test eax eax +
mov edx eax +
jnz loc_4110B2  +
jmp loc_4110D0  +
mov edx [edx+1ACh] +
test edx edx +
jz loc_4110D0  +
cmp edx eax +
jz loc_4110D0  +
cmp dword ptr [edx+4] 5 +
jnz loc_4110A4  +
mov ecx [edx+1B0h] +
mov edx [edx+1ACh] +
mov [ecx+18h] ebx +
test edx edx +
jnz loc_4110AE  +
nop   +
lea esi [esi+0] +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
test eax eax +
jz loc_4112D3  +
mov ecx [esp+2Ch+arg_4] +
movzx edx byte ptr [ecx] +
test dl dl +
jz loc_411253  +
mov eax [eax+4] +
cmp dl [eax+18h] +
jz loc_4112E7  +
mov [esp+2Ch+var_14] 0 +
cmp dl 2Eh +
jnz loc_41130A  +
mov ebp [esp+2Ch+arg_4] +
add ebp 1 +
movzx eax byte ptr [ebp+0] +
cmp al 24h +
jz loc_411123  +
cmp al 2Eh +
jz loc_411123  +
mov eax ebp +
mov edi ebp +
sub eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_28] 40h +
mov [esp+2Ch+var_2C] ebp +
call strchr  +
test eax eax +
mov ebx eax +
jz loc_411270  +
sub eax edi +
mov edi eax +
lea eax [eax+1] +
mov [esp+2Ch+var_2C] eax +
call sub_412BD0  +
test eax eax +
mov esi eax +
jz loc_411303  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] eax +
call memcpy  +
mov eax [esp+2Ch+arg_8] +
mov byte ptr [esi+edi] 0 +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] eax +
call sub_464930  +
mov [esp+2Ch+var_2C] esi +
mov edi eax +
call free  +
test edi edi +
jz loc_411290  +
test ebx ebx +
jnz loc_4111B9  +
mov edx [esp+2Ch+var_18] +
mov eax edi +
test edx edx +
jz loc_41124B  +
mov [esp+2Ch+var_2C] edi +
call strlen  +
mov esi eax +
add eax edi +
test ebx ebx +
cmovz ebx eax +
mov [esp+2Ch+var_2C] ebx +
call strlen  +
mov ecx [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] esi +
add ecx esi +
mov esi ecx +
add eax 1 +
mov [esp+2Ch+var_14] eax +
add eax ecx +
mov [esp+2Ch+var_2C] eax +
call sub_412BD0  +
test eax eax +
mov ebp eax +
jz loc_411241  +
mov edx [esp+2Ch+var_18] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_24] edx +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] edx +
call memcpy  +
mov edx [esp+2Ch+var_18] +
mov [esp+2Ch+var_28] edi +
lea eax [ebp+edx+0] +
mov edx [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_24] edx +
call memcpy  +
mov ecx [esp+2Ch+var_14] +
mov eax esi +
add eax ebp +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_24] ecx +
call memcpy  +
mov [esp+2Ch+var_2C] edi +
call free  +
mov eax ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_14] 0 +
mov edi [esp+2Ch+arg_4] +
mov [esp+2Ch+var_18] 0 +
mov ebp edi +
jmp loc_41113E  +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call sub_464930  +
mov edi eax +
test edi edi +
jnz loc_4111A7  +
lea esi [esi+0] +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
jz loc_411303  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] eax +
call strlen  +
lea ebx [eax+1] +
mov [esp+2Ch+var_2C] ebx +
call sub_412BD0  +
test eax eax +
mov ebp eax +
jz loc_411303  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call memcpy  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_14] 0 +
movzx edx byte ptr [eax] +
jmp loc_411116  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_14] 1 +
movzx edx byte ptr [eax+1] +
add eax 1 +
mov [esp+2Ch+arg_4] eax +
jmp loc_411116  +
xor eax eax +
jmp loc_41124B  +
cmp dl 24h +
jz loc_41111F  +
jmp loc_41125B  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov edi [esp+10h+arg_8] +
mov eax [ebx+28h] +
shr eax 5 +
and eax 3FFFFh +
test ah 40h +
jz loc_411465  +
mov edx [ebx+4] +
cmp dword ptr [edx+4] 5 +
jz loc_411356  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax 20000h +
jz loc_411430  +
mov ecx [edx+1B0h] +
mov eax [edi+8Ch] +
or dword ptr [eax+8] 800h +
mov eax [ecx+174h] +
cmp byte ptr [eax+0Ch] 1 +
mov eax [edx+30h] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] 1 +
jz loc_4113F0  +
call eax  +
mov eax [ebx+4] +
lea edx [esi+4] +
mov eax [eax+30h] +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] 0 +
call eax  +
mov eax [ebx+4] +
lea edx [esi+8] +
add esi 10h +
mov eax [eax+24h] +
mov [esp+10h+var_8] edx +
mov ecx [edi+24h] +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] ecx +
call eax  +
mov eax [ebx+4] +
mov edx [eax+24h] +
mov eax 1 +
mov [esp+10h+arg_8] esi +
mov ecx [edi+40h] +
shl eax cl +
mov [esp+10h+arg_0] eax +
sar eax 1Fh +
mov [esp+10h+arg_4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp edx  +
call eax  +
mov eax [ebx+4] +
lea ecx [esi+4] +
mov edx [edi+24h] +
add esi 8 +
mov eax [eax+30h] +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [ebx+4] +
mov edx [eax+30h] +
mov eax 1 +
mov [esp+10h+arg_4] esi +
mov ecx [edi+40h] +
shl eax cl +
mov [esp+10h+arg_0] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp edx  +
mov eax [edi+8Ch] +
add esi 4 +
and dword ptr [eax+8] 0FFFFF7FFh +
mov dword ptr [esi-4] 42494C5Ah +
mov [esp+10h+arg_8] esi +
mov eax [edi+24h] +
mov [esp+10h+arg_4] 0 +
mov [esp+10h+arg_0] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp loc_413240  +
mov [esp+10h+var_8] offset aBfd_update_com +
mov [esp+10h+var_C] 7E8h +
mov [esp+10h+var_10] offset a____BinutilsBf +
call sub_410560  +
jmp sub_411490  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_4114B0  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [esp+10h+arg_8] +
mov edx [ecx+8Ch] +
test byte ptr [edx+9] 8 +
jz loc_4114A3  +
mov edx [eax+1B0h] +
mov eax [eax+28h] +
mov edx [edx+174h] +
cmp byte ptr [edx+0Ch] 1 +
jz loc_411525  +
mov edi [esp+10h+arg_4] +
mov [esp+10h+var_10] edi +
call eax  +
mov edi [esp+10h+arg_4] +
lea edx [edi+8] +
mov esi eax +
mov eax [ebx+4] +
mov eax [eax+1Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov edi eax +
mov eax [ebx+4] +
mov edx [eax+1Ch] +
mov eax [esp+10h+arg_4] +
add eax 10h +
mov [esp+10h+var_10] eax +
call edx  +
cmp esi 1 +
jnz loc_4114A3  +
mov ecx [esp+10h+arg_8] +
mov ecx [ecx+40h] +
shl esi cl +
cmp eax esi +
jnz loc_4114A3  +
mov eax [esp+10h+arg_C] +
mov [eax] edi +
mov eax 1 +
jmp loc_4114A5  +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_10] esi +
call eax  +
mov ecx [esp+10h+arg_4] +
lea edx [ecx+4] +
mov esi eax +
mov eax [ebx+4] +
mov eax [eax+28h] +
mov [esp+10h+var_10] edx +
call eax  +
mov ecx [esp+10h+arg_4] +
lea edx [ecx+8] +
mov edi eax +
mov eax [ebx+4] +
mov eax [eax+28h] +
mov [esp+10h+var_10] edx +
call eax  +
jmp loc_411506  +
***
mov ecx [esp+arg_0] +
xor eax eax +
mov edx [ecx+4] +
cmp dword ptr [edx+4] 5 +
jz loc_411571  +
retn   +
cmp [esp+arg_4] 0 +
jz loc_4115A6  +
mov ecx [esp+arg_4] +
mov ecx [ecx+8Ch] +
test byte ptr [ecx+9] 8 +
jz locret_41156F  +
mov eax [edx+1B0h] +
mov edx [eax+174h] +
mov eax 0Ch +
cmp byte ptr [edx+0Ch] 1 +
mov edx 18h +
cmovnz eax edx +
retn   +
test byte ptr [ecx+2Ah] 40h +
jnz loc_411588  +
retn   +
***
push esi  +
push ebx  +
sub esp 8 +
mov edx [esp+14h] +
mov ebx [esp+20h] +
test byte ptr [edx+2Ah] 10h +
jnz loc_4115CC  +
mov eax [edx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_4115D4  +
add esp 8 +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [esp+1Ch] +
mov ecx [ecx+4] +
cmp dword ptr [ecx+4] 5 +
jnz loc_4115CC  +
mov eax [eax+1B0h] +
mov esi [eax+174h] +
mov eax [ecx+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [esi+0Ch] al +
jz loc_4115CC  +
mov eax [esp+18h] +
mov [esp] edx +
mov [esp+4] eax +
call sub_411560  +
test eax eax +
jz loc_4115CC  +
lea edx [ebx+0Ch] +
sub ebx 0Ch +
cmp eax 0Ch +
cmovz ebx edx +
jmp loc_4115CC  +
***
push ebp  +
push edi  +
push esi  +
mov esi 1 +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
test byte ptr [ebx+2Ah] 10h +
jnz loc_41164F  +
mov ebp [ebx+4] +
cmp dword ptr [ebp+4] 5 +
jz loc_411660  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+48h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_41164F  +
mov eax [eax+1B0h] +
mov edx [ebp+1B0h] +
mov eax [eax+174h] +
mov edx [edx+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [edx+0Ch] al +
jz loc_41164F  +
mov eax [esp+44h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_411560  +
test eax eax +
mov edi eax +
jz loc_41164F  +
mov eax [esp+4Ch] +
cmp edi 0Ch +
mov esi [eax] +
mov eax [ebp+28h] +
mov [esp] esi +
jz loc_411764  +
call eax  +
mov eax [ebx+4] +
lea ebp [esi+8] +
mov eax [eax+1Ch] +
mov [esp] ebp +
call eax  +
lea edx [esi+10h] +
mov [esp+1Ch] eax +
mov eax [ebx+4] +
mov eax [eax+1Ch] +
mov [esp] edx +
call eax  +
mov ecx [esp+44h] +
mov ebx [ecx+24h] +
mov [esp+18h] eax +
sub ebx edi +
lea ecx [ebx+0Ch] +
mov [esp+14h] ecx +
mov ecx [esp+48h] +
mov eax [ecx+4] +
mov eax [eax+30h] +
mov [esp+4] esi +
mov dword ptr [esp] 1 +
call eax  +
mov ecx [esp+48h] +
lea edx [esi+4] +
add esi 0Ch +
mov eax [ecx+4] +
mov ecx [esp+1Ch] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
mov ecx [esp+48h] +
mov eax [ecx+4] +
mov ecx [esp+18h] +
mov eax [eax+30h] +
mov [esp+4] ebp +
mov [esp] ecx +
call eax  +
mov eax [esp+4Ch] +
mov [esp+8] ebx +
add edi [eax] +
mov [esp] esi +
mov [esp+4] edi +
call memmove  +
mov eax [esp+50h] +
mov esi 1 +
mov ecx [esp+14h] +
mov [eax] ecx +
jmp loc_41164F  +
***
call eax  +
mov eax [ebx+4] +
lea edx [esi+4] +
add esi 8 +
mov eax [eax+28h] +
mov [esp] edx +
call eax  +
mov ebp eax +
mov eax [ebx+4] +
mov eax [eax+28h] +
mov [esp] esi +
call eax  +
mov edi eax +
mov eax [esp+44h] +
mov eax [eax+24h] +
lea esi [eax-0Ch] +
add eax 0Ch +
mov [esp] eax +
mov [esp+14h] eax +
call sub_412BD0  +
test eax eax +
mov ebx eax +
jz loc_41184F  +
mov eax [esp+48h] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+4] ebx +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esp+48h] +
lea edx [ebx+4] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
mov eax [esp+48h] +
lea edx [ebx+8] +
mov eax [eax+4] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov [esp] ebp +
mov dword ptr [esp+4] 0 +
call eax  +
mov eax [esp+48h] +
lea edx [ebx+10h] +
mov eax [eax+4] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov [esp] edi +
mov dword ptr [esp+4] 0 +
call eax  +
mov edi [esp+4Ch] +
lea eax [ebx+18h] +
mov edi [edi] +
mov [esp+8] esi +
mov [esp] eax +
lea edx [edi+0Ch] +
mov [esp+4] edx +
mov [esp+18h] edi +
call memcpy  +
mov eax [esp+4Ch] +
mov eax [eax] +
mov [esp] eax +
call free  +
mov eax [esp+4Ch] +
mov [eax] ebx +
jmp loc_411750  +
***
xor esi esi +
jmp loc_41164F  +
***
mov eax [esp+arg_0] +
mov edx [eax+1Ch] +
mov eax [eax+18h] +
retn   +
***
retn   +
***
retn   +
***
push esi  +
push ebx  +
mov esi [esp+8+arg_4] +
mov eax [esp+8+arg_0] +
test esi 1 +
mov edi esi +
mov ebx [eax+8] +
jnz loc_4118E6  +
test edi 2 +
jnz loc_4118F6  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_4118CC  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_4118D4  +
mov byte ptr [edi] 0 +
mov eax [ebx] +
mov dword ptr [esi+1Ch] 0 +
mov [esi+18h] eax +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea edi [esi+1] +
mov dl 2Fh +
test edi 2 +
mov byte ptr [esi] 0 +
jz loc_4118B5  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_4118B5  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [ebx+8] +
mov eax [esi+4] +
test eax eax +
jz loc_41192B  +
mov [esp+14h+var_14] eax +
call free  +
mov [esp+14h+var_14] esi +
call free  +
xor eax eax +
mov dword ptr [ebx+8] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_C] +
mov ecx [esp+10h+arg_0] +
mov eax [esp+10h+arg_4] +
mov edx [esp+10h+arg_8] +
test esi esi +
mov ebx [ecx+8] +
jz loc_411973  +
add eax [ecx+18h] +
adc edx [ecx+1Ch] +
test edx edx +
js loc_4119FD  +
mov edi [ebx] +
mov esi eax +
cmp eax edi +
jbe loc_41199B  +
test byte ptr [ecx+28h] 10h +
jz loc_4119D4  +
add edi 7Fh +
add esi 7Fh +
and edi 0FFFFFF80h +
and esi 0FFFFFF80h +
cmp edi esi +
mov [ebx] eax +
jb loc_4119A4  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+4] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] eax +
call sub_412D20  +
test eax eax +
mov [ebx+4] eax +
jz loc_411A21  +
sub esi edi +
add edi eax +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] edi +
call memset  +
jmp loc_41199B  +
mov [ecx+18h] edi +
mov dword ptr [ecx+1Ch] 0 +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
mov [esp+10h+var_10] 12h +
call sub_4105E0  +
mov eax 0FFFFFFFFh +
jmp loc_41199D  +
mov dword ptr [ecx+18h] 0 +
mov dword ptr [ecx+1Ch] 0 +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_41199D  +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
mov dword ptr [ebx] 0 +
jmp loc_41199D  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov ecx [esp+38h+arg_8] +
mov edi [eax+18h] +
mov ebp [eax+1Ch] +
mov ebx [eax+8] +
mov eax ecx +
add eax edi +
adc edx ebp +
cmp edx 0 +
mov esi [ebx] +
ja loc_411B4B  +
cmp eax esi +
jbe loc_411BB0  +
cmp esi edi +
jb loc_411B97  +
sub esi edi +
mov [esp+38h+var_20] esi +
mov [esp+38h+var_1C] 0 +
mov [esp+38h+var_38] 12h +
call sub_4105E0  +
mov eax [esp+38h+arg_0] +
mov eax [eax+18h] +
add eax [ebx+4] +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] eax +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_38] eax +
call memcpy  +
mov eax [esp+38h+var_20] +
mov edx [esp+38h+var_1C] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_20] 0 +
xor esi esi +
mov [esp+38h+var_1C] 0 +
jmp loc_411B5D  +
mov esi ecx +
mov eax edi +
mov [esp+38h+var_20] ecx +
mov [esp+38h+var_1C] 0 +
jmp loc_411B70  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_4] +
mov eax [esi+88h] +
test eax eax +
jz loc_411C48  +
mov ecx [esi+18h] +
xor edx edx +
mov ebx [esi+1Ch] +
mov ebp [eax+4] +
mov eax edi +
add eax ecx +
adc edx ebx +
cmp edx 0 +
jbe loc_411C90  +
cmp ebx 0 +
jbe loc_411C40  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx ebp +
jnb loc_411C34  +
mov edi ebp +
sub edi ecx +
mov eax [esi+0Ch] +
test eax eax +
jz loc_411CA0  +
mov edx [esp+1Ch+arg_0] +
mov eax [eax] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] esi +
call eax  +
mov edx eax +
mov eax 0FFFFFFFFh +
cmp edx 0FFFFFFFFh +
jz loc_411C36  +
mov ecx edx +
xor ebx ebx +
add [esi+18h] ecx +
mov eax edx +
adc [esi+1Ch] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax ebp +
ja loc_411C2F  +
mov eax [esi+0Ch] +
test eax eax +
jnz loc_411C4F  +
nop   +
lea esi [esi+0] +
xor ecx ecx +
xor ebx ebx +
xor edx edx +
jmp loc_411C7A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_4] +
mov eax [esi+0Ch] +
test eax eax +
jz loc_411D20  +
mov edx [esp+1Ch+arg_0] +
mov eax [eax+4] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] esi +
call eax  +
cmp eax 0FFFFFFFFh +
mov ebp eax +
jz loc_411CF3  +
mov ecx eax +
xor ebx ebx +
add [esi+18h] ecx +
adc [esi+1Ch] ebx +
cmp ebp edi +
jz loc_411D0F  +
call ds:__imp__errno  +
mov dword ptr [eax] 1Ch +
mov [esp+1Ch+var_1C] 1 +
call sub_4105E0  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
xor ebx ebx +
xor ebp ebp +
jmp loc_411CED  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov eax [esi+0Ch] +
test eax eax +
jz loc_411D80  +
mov eax [eax+8] +
mov edi esi +
mov [esp+10h+var_10] esi +
call eax  +
mov ecx [esi+8Ch] +
test ecx ecx +
jnz loc_411D5B  +
jmp loc_411D6B  +
mov edi ecx +
mov ecx ebx +
mov ebx [ecx+8Ch] +
sub eax [edi+38h] +
sbb edx [edi+3Ch] +
test ebx ebx +
jnz loc_411D57  +
mov ebx edx +
mov ecx eax +
mov [esi+18h] ecx +
mov [esi+1Ch] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor ebx ebx +
xor ecx ecx +
mov [esi+18h] ecx +
xor eax eax +
xor edx edx +
mov [esi+1Ch] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_411DB0  +
mov edx [edx+14h] +
jmp edx  +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_411DE6  +
mov ecx [esp+1Ch+arg_4] +
mov edx [edx+18h] +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_18] ecx +
call edx  +
test eax eax +
js loc_411DF0  +
add esp 1Ch +
retn   +
mov eax 0FFFFFFFFh +
nop   +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] 1 +
mov [esp+1Ch+var_10] eax +
call sub_4105E0  +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
cmp [esp+1Ch+arg_C] 1 +
mov esi [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
jbe loc_411E3A  +
mov [esp+1Ch+var_18] 11Fh +
mov [esp+1Ch+var_1C] offset a____Binutils_2 +
call sub_410530  +
cmp [esp+1Ch+arg_C] 1 +
jz loc_411F30  +
mov eax [esp+1Ch+arg_0] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 2 +
jz loc_411E66  +
mov eax [esp+1Ch+arg_0] +
mov ebp [eax+8Ch] +
test ebp ebp +
jz loc_411F54  +
mov ecx [esp+1Ch+arg_C] +
test ecx ecx +
jnz loc_411EE3  +
mov eax [esp+1Ch+arg_0] +
mov ecx [eax+8Ch] +
test ecx ecx +
jz loc_411EE3  +
mov ebp [esp+1Ch+arg_0] +
mov eax esi +
mov edx edi +
jmp loc_411E8A  +
mov ebp ecx +
mov ecx ebx +
mov ebx [ecx+8Ch] +
add eax [ebp+38h] +
adc edx [ebp+3Ch] +
test ebx ebx +
jnz loc_411E86  +
mov ebx [esp+1Ch+arg_0] +
mov ecx [ebx+0Ch] +
test ecx ecx +
jz loc_411EF2  +
mov ecx [ecx+0Ch] +
mov ebx [esp+1Ch+arg_C] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_10] ebx +
mov [esp+1Ch+var_1C] eax +
call ecx  +
test eax eax +
mov ebx eax +
jnz loc_411EF7  +
mov edx [esp+1Ch+arg_C] +
mov eax [esp+1Ch+arg_0] +
test edx edx +
jnz loc_411F44  +
mov [eax+18h] esi +
mov [eax+1Ch] edi +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+1Ch+arg_0] +
mov eax esi +
mov edx edi +
mov ecx [ebx+0Ch] +
test ecx ecx +
jnz loc_411EA5  +
mov ebx 0FFFFFFFFh +
mov ebp ds:__imp__errno +
call ebp  +
mov edi [eax] +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_411D30  +
cmp edi 16h +
jz loc_411F80  +
mov [esp+1Ch+var_1C] 1 +
call sub_4105E0  +
call ebp  +
mov [eax] edi +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx esi +
xor eax eax +
or edx edi +
jnz loc_411E45  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add [eax+18h] esi +
adc [eax+1Ch] edi +
add esp 1Ch +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+1Ch+arg_C] +
mov eax esi +
test ebx ebx +
jnz loc_411F75  +
mov edx [esp+1Ch+arg_0] +
xor eax [edx+18h] +
or eax [edx+1Ch] +
jnz loc_411EE3  +
xor eax eax +
jmp loc_411EDB  +
mov edx edi +
jmp loc_411E9A  +
mov [esp+1Ch+var_1C] 12h +
call sub_4105E0  +
mov eax ebx +
jmp loc_411EDB  +
***
push ebx  +
sub esp 48h +
mov ebx [esp+50h] +
test byte ptr [ebx+2Bh] 4 +
jnz loc_411FE0  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_411FD5  +
mov eax [eax+18h] +
lea edx [esp+10h] +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_411FD5  +
mov eax [esp+34h] +
mov [ebx+20h] eax +
add esp 48h +
pop ebx  +
retn   +
***
add esp 48h +
xor eax eax +
pop ebx  +
retn   +
***
mov eax [ebx+20h] +
add esp 48h +
pop ebx  +
retn   +
***
sub esp 4Ch +
mov eax [esp+50h] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_412020  +
mov edx [edx+18h] +
lea ecx [esp+10h] +
mov [esp+4] ecx +
mov [esp] eax +
call edx  +
test eax eax +
jnz loc_412020  +
mov eax [esp+28h] +
mov edx [esp+2Ch] +
add esp 4Ch +
retn   +
***
xor eax eax +
xor edx edx +
add esp 4Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 18h +
mov eax [esp+2Ch] +
mov ecx [esp+30h] +
mov edi [esp+40h] +
mov ebp [esp+44h] +
mov edx [eax+0Ch] +
mov [esp] ecx +
mov [esp+4] edi +
mov [esp+8] ebp +
test edx edx +
jz loc_412065  +
mov edx [edx+1Ch] +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp edx  +
***
add esp 18h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_C] +
mov ebx [esp+1Ch+arg_0] +
lea esi ds:0[eax*4] +
mov edi esi +
shr edi 2 +
cmp edi eax +
jz loc_4120B5  +
mov [esp+1Ch+var_1C] 6 +
call sub_4105E0  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_4694E0  +
test eax eax +
mov [ebx+8] eax +
jz loc_41209F  +
test esi esi +
jnz loc_412123  +
mov edx 8 +
mov ecx [eax+4] +
cmp ecx edx +
jb loc_41212B  +
mov ebp [eax] +
sub ecx edx +
mov [eax+4] ecx +
add ebp edx +
mov [eax] ebp +
mov eax ebp +
sub eax edx +
test eax eax +
mov [ebx] eax +
jz loc_412140  +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] eax +
call memset  +
mov eax [esp+1Ch+arg_8] +
mov [ebx+0Ch] edi +
mov dword ptr [ebx+10h] 0 +
and byte ptr [ebx+18h] 0FEh +
mov [ebx+14h] eax +
mov eax [esp+1Ch+arg_4] +
mov [ebx+4] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [esi+7] +
and edx 0FFFFFFF8h +
jnz loc_4120CA  +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] eax +
call sub_469540  +
jmp loc_4120E0  +
mov eax [ebx+8] +
mov [esp+1Ch+var_1C] eax +
call sub_469650  +
mov dword ptr [ebx+8] 0 +
jmp loc_41209F  +
***
sub esp 1Ch +
mov eax dword_47D668 +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_412080  +
add esp 1Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call sub_469650  +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_8] +
mov eax [edi+4] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] 0 +
call eax  +
test eax eax +
mov ebp eax +
jz loc_4123B2  +
mov ecx [edi+0Ch] +
xor edx edx +
mov [eax+4] esi +
mov [eax+8] ebx +
mov eax ebx +
div  ecx +
mov eax [edi] +
lea eax [eax+edx*4] +
mov edx [eax] +
mov [ebp+0] edx +
mov [eax] ebp +
mov eax [edi+10h] +
test byte ptr [edi+18h] 1 +
lea edx [eax+1] +
mov eax ebp +
mov [edi+10h] edx +
jnz loc_412360  +
lea ebx [ecx+ecx*2] +
shr ebx 2 +
cmp edx ebx +
jbe loc_412360  +
mov esi offset unk_483950 +
mov edx offset unk_4838E0 +
mov eax esi +
sub eax edx +
sar eax 2 +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
sar eax 1 +
lea ebx [edx+eax*4] +
cmp ecx [ebx] +
jb loc_412262  +
jmp loc_412376  +
mov eax ebx +
sub eax edx +
sar eax 2 +
mov esi eax +
shr esi 1Fh +
add eax esi +
sar eax 1 +
lea eax [edx+eax*4] +
cmp ecx [eax] +
jnb loc_41237A  +
mov ebx eax +
cmp edx ebx +
jnz loc_412245  +
mov eax [edx] +
cmp ecx eax +
jnb loc_412368  +
test eax eax +
lea ebx ds:0[eax*4] +
jz loc_412368  +
mov esi ebx +
shr esi 2 +
cmp esi eax +
mov [esp+2Ch+var_1C] esi +
jnz loc_412368  +
test ebx ebx +
mov edx [edi+8] +
jz loc_41238C  +
lea eax [ebx+7] +
and eax 0FFFFFFF8h +
jnz loc_412391  +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
call sub_469540  +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_20] +
test eax eax +
jz loc_412368  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call memset  +
mov eax [edi+0Ch] +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_412350  +
mov eax [edi] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_10] ebp +
mov esi [esp+2Ch+var_18] +
lea ebp ds:0[esi*4] +
lea edx [eax+ebp] +
mov esi [edx] +
test esi esi +
jz loc_41233D  +
mov eax [esi+8] +
mov ebx esi +
jmp loc_412317  +
cmp [ecx+8] eax +
jnz loc_41231D  +
mov ebx ecx +
mov ecx [ebx] +
test ecx ecx +
jnz loc_412310  +
mov [edx] ecx +
xor edx edx +
div  [esp+2Ch+var_1C] +
mov eax [esp+2Ch+var_20] +
lea eax [eax+edx*4] +
mov edx [eax] +
mov [ebx] edx +
mov [eax] esi +
mov eax [edi] +
lea edx [eax+ebp] +
mov esi [edx] +
test esi esi +
jnz loc_412308  +
add [esp+2Ch+var_18] 1 +
mov esi [esp+2Ch+var_14] +
cmp [esp+2Ch+var_18] esi +
jnz loc_4122F4  +
mov ebp [esp+2Ch+var_10] +
mov eax [esp+2Ch+var_20] +
mov [edi] eax +
mov eax [esp+2Ch+var_1C] +
mov [edi+0Ch] eax +
mov eax ebp +
nop   +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
or byte ptr [edi+18h] 1 +
add esp 2Ch +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov ebx esi +
lea edx [eax+4] +
cmp edx ebx +
jz loc_412266  +
mov esi ebx +
jmp loc_412229  +
mov eax 8 +
mov ecx [edx+4] +
cmp ecx eax +
jb loc_4122A7  +
mov esi [edx] +
sub ecx eax +
mov [edx+4] ecx +
add esi eax +
mov [edx] esi +
sub esi eax +
mov [esp+2Ch+var_20] esi +
jmp loc_4122B7  +
xor eax eax +
jmp loc_412360  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov ebx [esp+38h+arg_4] +
mov [esp+38h+var_24] eax +
mov eax [esp+38h+arg_8] +
lea ebp [ebx+1] +
mov [esp+38h+var_20] eax +
mov eax [esp+38h+arg_C] +
mov [esp+38h+var_1C] eax +
movzx eax byte ptr [ebx] +
test eax eax +
jz loc_41240B  +
nop   +
mov ecx eax +
add ebp 1 +
shl ecx 11h +
add eax ecx +
add eax edx +
mov edx eax +
shr edx 2 +
xor edx eax +
movzx eax byte ptr [ebp-1] +
test eax eax +
jnz loc_4123F0  +
sub ebp ebx +
mov ecx [esp+38h+var_24] +
sub ebp 1 +
mov eax ebp +
add edx ebp +
shl eax 11h +
add edx eax +
mov esi edx +
shr esi 2 +
xor esi edx +
xor edx edx +
mov eax esi +
div  dword ptr [ecx+0Ch] +
mov eax [ecx] +
mov edi [eax+edx*4] +
test edi edi +
jnz loc_41243C  +
jmp loc_412460  +
mov edi [edi] +
test edi edi +
jz loc_412460  +
cmp [edi+8] esi +
nop   +
jnz loc_412436  +
mov [esp+38h+var_34] ebx +
mov eax [edi+4] +
mov [esp+38h+var_38] eax +
call strcmp  +
test eax eax +
jnz loc_412436  +
mov eax edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+38h+var_20] +
test edx edx +
jz loc_4124F4  +
mov eax [esp+38h+var_1C] +
test eax eax +
jz loc_4124F0  +
mov eax [esp+38h+var_24] +
mov edi ebp +
add edi 1 +
mov eax [eax+8] +
jnz loc_4124D0  +
mov edx [eax+4] +
mov ebp 8 +
cmp edx ebp +
jnb loc_4124DF  +
mov [esp+38h+var_34] ebp +
mov [esp+38h+var_38] eax +
call sub_469540  +
mov ebp eax +
test ebp ebp +
jz loc_4124FB  +
mov [esp+38h+var_30] edi +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] ebp +
call memcpy  +
mov eax [esp+38h+var_24] +
mov [esp+38h+arg_8] esi +
mov [esp+38h+arg_4] ebp +
mov [esp+38h+arg_0] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4121B0  +
add ebp 8 +
and ebp 0FFFFFFF8h +
jz loc_41248E  +
mov edx [eax+4] +
cmp edx ebp +
jb loc_41248E  +
mov ecx [eax] +
sub edx ebp +
mov [eax+4] edx +
add ecx ebp +
mov [eax] ecx +
sub ecx ebp +
mov ebp ecx +
jmp loc_41249C  +
mov ebp ebx +
jmp loc_4124B0  +
xor eax eax +
jmp loc_412457  +
mov [esp+38h+var_38] 6 +
call sub_4105E0  +
xor eax eax +
jmp loc_412457  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov ecx [esp+28h+arg_8] +
mov ebx [esi+0Ch] +
mov eax [ecx+8] +
div  ebx +
mov eax [esi] +
lea eax [eax+edx*4] +
mov edx [eax] +
test edx edx +
jz loc_41254C  +
cmp ecx edx +
jnz loc_412546  +
jmp loc_41256A  +
cmp ecx eax +
jz loc_412568  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_412540  +
mov [esp+28h+var_20] offset aBfd_hash_renam +
mov [esp+28h+var_24] 243h +
mov [esp+28h+var_28] offset a____Binutils_7 +
call sub_410560  +
mov eax edx +
mov edx [ecx] +
mov [eax] edx +
mov eax [esp+28h+arg_4] +
mov [ecx+4] eax +
movzx edx byte ptr [eax] +
lea edi [eax+1] +
xor eax eax +
test edx edx +
jz loc_41259C  +
mov ebp edx +
add edi 1 +
shl ebp 11h +
add edx ebp +
add edx eax +
mov eax edx +
shr eax 2 +
xor eax edx +
movzx edx byte ptr [edi-1] +
test edx edx +
jnz loc_412581  +
sub edi [esp+28h+arg_4] +
sub edi 1 +
add eax edi +
shl edi 11h +
lea edx [eax+edi] +
mov eax edx +
shr eax 2 +
xor eax edx +
xor edx edx +
mov [ecx+8] eax +
div  ebx +
mov eax [esi] +
lea eax [eax+edx*4] +
mov edx [eax] +
mov [ecx] edx +
mov [eax] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 18h +
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
test ebx ebx +
mov edx [eax+8] +
jz loc_412662  +
lea ecx [ebx+7] +
and ecx 0FFFFFFF8h +
jnz loc_412667  +
mov [esp+14h+var_10] ecx +
mov [esp+14h+var_14] edx +
call sub_469540  +
test eax eax +
jz loc_41267F  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov ecx 8 +
mov esi [edx+4] +
cmp esi ecx +
jb loc_41264C  +
mov eax [edx] +
sub esi ecx +
mov [edx+4] esi +
add eax ecx +
mov [edx] eax +
sub eax ecx +
test eax eax +
jnz loc_41265C  +
test ebx ebx +
jz loc_41265C  +
mov [esp+14h+var_14] 6 +
mov [esp+14h+var_8] eax +
call sub_4105E0  +
mov eax [esp+14h+var_8] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
test edx edx +
jz loc_4126C0  +
mov dword ptr [edx+0Ch] 0FFFFFFFFh +
mov eax edx +
mov dword ptr [edx+10h] 0 +
add esp 1Ch +
retn   +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] 14h +
mov [esp+1Ch+var_1C] eax +
call sub_412630  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_4126AB  +
jmp loc_4126BB  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
test eax eax +
jz loc_4126F0  +
retn   +
mov [esp+arg_4] 0Ch +
mov [esp+arg_0] edx +
jmp sub_412630  +
***
jmp sub_412710  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov ebx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_10] 0 +
movzx eax byte ptr [edi+18h] +
mov edx [edi+0Ch] +
or eax 1 +
test edx edx +
mov [edi+18h] al +
jz loc_412768  +
mov eax [edi] +
mov edx [esp+1Ch+var_10] +
mov ebp [eax+edx*4] +
test ebp ebp +
jnz loc_412757  +
jmp loc_412776  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_412776  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] ebp +
call esi  +
test eax eax +
jnz loc_412750  +
movzx eax byte ptr [edi+18h] +
and eax 0FFFFFFFEh +
mov [edi+18h] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add [esp+1Ch+var_10] 1 +
mov eax [esp+1Ch+var_10] +
cmp [edi+0Ch] eax +
ja loc_41273C  +
jmp loc_412764  +
***
mov ecx [esp+4] +
xor edx edx +
mov eax ds:dword_483880[edx*4] +
cmp eax ecx +
jnb loc_4127AE  +
add edx 1 +
cmp edx 0Bh +
jnz loc_412796  +
mov eax 10001h +
mov dword_47D668 eax +
retn   +
***
mov [esp+18h+var_18] 2Ch +
call sub_412BD0  +
test eax eax +
mov ebx eax +
jz loc_412820  +
mov eax dword_47D668 +
mov [esp+18h+var_10] 14h +
mov [esp+18h+var_14] offset sub_4126A0 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
call sub_412080  +
test eax eax +
jz loc_412824  +
mov dword ptr [ebx+1Ch] 0 +
mov eax ebx +
mov dword ptr [ebx+20h] 0 +
mov dword ptr [ebx+24h] 0 +
mov dword ptr [ebx+28h] 0 +
add esp 18h +
pop ebx  +
retn   +
xor eax eax +
jmp loc_412819  +
mov [esp+18h+var_18] ebx +
call free  +
xor eax eax +
jmp loc_412819  +
***
sub esp 0Ch +
call sub_4127C0  +
test eax eax +
jz loc_412843  +
mov dword ptr [eax+28h] 1 +
add esp 0Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call sub_469650  +
mov dword ptr [ebx+8] 0 +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_8] +
mov esi [esp+1Ch+arg_0] +
test ebx ebx +
jz loc_4128D0  +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
call sub_4123C0  +
test eax eax +
mov ebx eax +
jz loc_412940  +
mov eax [eax+0Ch] +
cmp eax 0FFFFFFFFh +
jz loc_412903  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_18] 14h +
mov [esp+1Ch+var_1C] esi +
call sub_412630  +
test eax eax +
mov ebx eax +
jz loc_412940  +
mov ecx [esp+1Ch+arg_C] +
mov eax [esp+1Ch+arg_4] +
test ecx ecx +
jnz loc_412960  +
mov [ebx+4] eax +
mov dword ptr [ebx+0Ch] 0FFFFFFFFh +
mov dword ptr [ebx+10h] 0 +
mov ebp [esi+1Ch] +
mov eax [esp+1Ch+arg_4] +
mov [ebx+0Ch] ebp +
mov [esp+1Ch+var_1C] eax +
call strlen  +
add eax ebp +
lea edx [eax+1] +
mov [esi+1Ch] edx +
mov edx [esi+28h] +
test edx edx +
jnz loc_412950  +
mov eax [esi+20h] +
test eax eax +
jz loc_4129A0  +
mov eax [esi+24h] +
mov [eax+10h] ebx +
mov [esi+24h] ebx +
mov eax [ebx+0Ch] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebp 2 +
add eax 3 +
mov [ebx+0Ch] ebp +
mov [esi+1Ch] eax +
jmp loc_412924  +
mov [esp+1Ch+var_1C] eax +
call strlen  +
mov [esp+1Ch+var_1C] esi +
lea edi [eax+1] +
mov [esp+1Ch+var_18] edi +
call sub_412630  +
test eax eax +
mov ebp eax +
jz loc_412940  +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_18] eax +
call memcpy  +
mov [ebx+4] ebp +
jmp loc_4128F5  +
mov [esi+20h] ebx +
jmp loc_412931  +
***
mov eax [esp+arg_0] +
mov eax [eax+1Ch] +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_0] +
mov ebx [eax+20h] +
mov ecx [eax+28h] +
test ebx ebx +
mov [esp+2Ch+var_20] ecx +
jnz loc_4129E7  +
jmp loc_412A50  +
mov ebx [ebx+10h] +
test ebx ebx +
jz loc_412A50  +
mov esi [ebx+4] +
mov [esp+2Ch+var_2C] esi +
call strlen  +
lea ebp [eax+1] +
mov eax [esp+2Ch+var_20] +
test eax eax +
jz loc_412A2D  +
mov eax [edi+4] +
lea edx [esp+2Ch+var_E] +
mov eax [eax+3Ch] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] ebp +
call eax  +
lea eax [esp+2Ch+var_E] +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] eax +
call sub_411CB0  +
cmp eax 2 +
jnz loc_412A41  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] esi +
call sub_411CB0  +
cmp eax ebp +
jz loc_4129E0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4105E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax 1 +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4105E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4105E0  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
***
mov eax 4 +
retn   +
***
mov eax [esp+0Ch] +
mov dword ptr [eax] 0 +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4105E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4105E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4105E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_4105E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 3 +
call sub_4105E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
js loc_412BF4  +
mov [esp+18h+var_18] ebx +
call malloc  +
test eax eax +
jz loc_412BF0  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
jz loc_412BE8  +
mov [esp+18h+var_18] 6 +
call sub_4105E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov ecx [esp+18h+arg_4] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_412C38  +
test ecx ecx +
jz loc_412C38  +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
ja loc_412C45  +
imul ecx ebx +
mov [esp+18h+arg_0] ecx +
add esp 18h +
pop ebx  +
jmp sub_412BD0  +
mov [esp+18h+var_18] 6 +
call sub_4105E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_412CA7  +
test ebx ebx +
js loc_412C94  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call realloc  +
test eax eax +
jz loc_412C90  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
jz loc_412C84  +
mov [esp+18h+var_18] 6 +
call sub_4105E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp sub_412BD0  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov ecx [esp+28h] +
mov esi [esp+20h] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_412CED  +
test ecx ecx +
jz loc_412CED  +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
ja loc_412D02  +
imul ecx ebx +
mov [esp+20h] esi +
mov [esp+24h] ecx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_412C60  +
***
mov dword ptr [esp] 6 +
call sub_4105E0  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call sub_412C60  +
test eax eax +
jz loc_412D41  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
jz loc_412D3C  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
call free  +
mov eax [esp+18h+var_C] +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov [esp+14h+var_14] esi +
call sub_412BD0  +
test eax eax +
mov ebx eax +
jnz loc_412D80  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
test esi esi +
jz loc_412D77  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] eax +
call memset  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov [esp] edi +
mov [esp+4] esi +
call sub_412C10  +
test eax eax +
mov ebx eax +
jz loc_412DDB  +
imul esi edi +
test esi esi +
jz loc_412DDB  +
mov [esp+8] esi +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call memset  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] 4 +
mov edx eax +
shr edx 18h +
mov [esp+2Ch+var_10] dl +
mov edx eax +
shr edx 10h +
mov [esp+1Dh] dl +
mov edx eax +
mov [esp+2Ch+var_D] al +
mov eax [esp+2Ch+arg_0] +
shr edx 8 +
mov [esp+2Ch+var_E] dl +
mov [esp+2Ch+var_24] eax +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call sub_411CB0  +
cmp eax 4 +
setz al  +
add esp 2Ch +
movzx eax al +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx edx byte ptr [edx+1] +
shl eax 8 +
or eax edx +
retn   +
***
jmp loc_412E60  +
mov edx [esp+4] +
movzx eax byte ptr [edx+1] +
movzx edx byte ptr [edx] +
shl eax 8 +
or eax edx +
retn   +
***
jmp loc_412E80  +
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx edx byte ptr [edx+1] +
shl eax 8 +
or eax edx +
xor ah 80h +
sub eax 8000h +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx+1] +
movzx edx byte ptr [edx] +
shl eax 8 +
or eax edx +
xor ah 80h +
sub eax 8000h +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov ecx edx +
shr ecx 8 +
mov [eax] cl +
mov [eax+1] dl +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov [eax] dl +
shr edx 8 +
mov [eax+1] dl +
retn   +
***
jmp sub_412F00  +
***
mov edx [esp+arg_0] +
movzx eax byte ptr [edx] +
movzx ecx byte ptr [edx+1] +
shl eax 18h +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx+3] +
movzx edx byte ptr [edx+2] +
or eax ecx +
shl edx 8 +
or eax edx +
retn   +
***
movzx eax byte ptr [edx+1] +
movzx ecx byte ptr [edx+2] +
movzx ebx byte ptr [edx] +
movzx edx byte ptr [edx+3] +
shl eax 8 +
shl ecx 10h +
or eax ecx +
or eax ebx +
shl edx 18h +
or eax edx +
pop ebx  +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx ecx byte ptr [edx+1] +
shl eax 18h +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx+3] +
movzx edx byte ptr [edx+2] +
or eax ecx +
shl edx 8 +
or eax edx +
retn   +
***
push ebx  +
mov edx [esp+8] +
movzx eax byte ptr [edx+1] +
movzx ecx byte ptr [edx+2] +
movzx ebx byte ptr [edx] +
movzx edx byte ptr [edx+3] +
shl eax 8 +
shl ecx 10h +
or eax ecx +
or eax ebx +
shl edx 18h +
or eax edx +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ecx [esp+8+arg_0] +
movzx eax byte ptr [ecx] +
movzx ebx byte ptr [ecx+1] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+2] +
shl esi 8 +
mov edx edi +
or ebx esi +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+5] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+6] +
shl eax 8 +
movzx ecx byte ptr [ecx+7] +
or ebx eax +
mov eax ebx +
shl eax 8 +
or ecx eax +
shld edx ebx +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
xor edx edx +
push esi  +
push ebx  +
mov ecx [esp+10h] +
movzx eax byte ptr [ecx+7] +
movzx ebx byte ptr [ecx+6] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+5] +
shl esi 8 +
mov edx edi +
or ebx esi +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+2] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+1] +
shl eax 8 +
movzx ecx byte ptr [ecx] +
or ebx eax +
mov eax ebx +
shl eax 8 +
or ecx eax +
shld edx ebx +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
xor edx edx +
push esi  +
push ebx  +
mov ecx [esp+10h] +
movzx eax byte ptr [ecx] +
movzx ebx byte ptr [ecx+1] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+2] +
shl esi 8 +
mov edx edi +
or ebx esi +
movzx esi byte ptr [ecx+7] +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+5] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+6] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shl eax 8 +
shld edx ebx +
or esi eax +
lea ebx [edx-80000000h] +
mov eax esi +
mov edx ebx +
add eax 0 +
pop ebx  +
adc edx 80000000h +
pop esi  +
pop edi  +
retn   +
***
push edi  +
xor edx edx +
push esi  +
push ebx  +
mov ecx [esp+10h] +
movzx eax byte ptr [ecx+7] +
movzx ebx byte ptr [ecx+6] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+5] +
shl esi 8 +
mov edx edi +
or ebx esi +
movzx esi byte ptr [ecx] +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+2] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+1] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shl eax 8 +
shld edx ebx +
or esi eax +
lea ebx [edx-80000000h] +
mov eax esi +
mov edx ebx +
add eax 0 +
pop ebx  +
adc edx 80000000h +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov ecx edx +
shr ecx 18h +
mov [eax] cl +
mov ecx edx +
shr ecx 10h +
mov [eax+1] cl +
mov ecx edx +
shr ecx 8 +
mov [eax+2] cl +
mov [eax+3] dl +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov ecx edx +
shr ecx 8 +
mov [eax+1] cl +
mov ecx edx +
mov [eax] dl +
shr ecx 10h +
shr edx 18h +
mov [eax+2] cl +
mov [eax+3] dl +
retn   +
***
jmp loc_413240  +
***
push esi  +
push ebx  +
mov edx [esp-4+arg_4] +
mov esi [esp-4+arg_8] +
mov eax [esp-4+arg_0] +
mov ecx edx +
mov ebx edx +
shr ecx 18h +
mov [esi] cl +
mov ecx edx +
shr ecx 10h +
mov [esi+1] cl +
mov ecx edx +
shr ecx 8 +
mov [esi+2] cl +
mov ecx eax +
shrd ecx ebx +
mov ebx edx +
mov [esi+4] cl +
mov ecx eax +
shrd ecx ebx +
mov [esi+5] cl +
mov ecx eax +
shrd ecx edx +
mov [esi+3] dl +
mov [esi+6] cl +
mov [esi+7] al +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
mov edx [esp+10h] +
mov esi [esp+14h] +
mov eax [esp+0Ch] +
mov ecx edx +
mov ebx edx +
shr ecx 18h +
mov [esi+7] cl +
mov ecx edx +
shr ecx 10h +
mov [esi+6] cl +
mov ecx edx +
shr ecx 8 +
mov [esi+5] cl +
mov ecx eax +
shrd ecx ebx +
mov ebx edx +
mov [esi+3] cl +
mov ecx eax +
shrd ecx ebx +
mov [esi+2] cl +
mov ecx eax +
shrd ecx edx +
mov [esi+4] dl +
mov [esi+1] cl +
mov [esi] al +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ecx [esp+3Ch] +
mov eax [esp+30h] +
mov edx [esp+34h] +
mov ebp [esp+38h] +
test cl 7 +
mov esi [esp+40h] +
jnz loc_41333D  +
test ecx ecx +
lea edi [ecx+7] +
cmovns edi ecx +
xor ecx ecx +
sar edi 3 +
lea ebx [edi-1] +
test edi edi +
mov [esp+0Ch] ebx +
jle loc_413335  +
mov ebx [esp+0Ch] +
sub ebx ecx +
test esi esi +
cmovz ebx ecx +
add ecx 1 +
mov [ebp+ebx+0] al +
shrd eax edx +
shr edx 8 +
cmp ecx edi +
jnz loc_413318  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+8] offset aBfd_put_bits +
mov dword ptr [esp+4] 2E2h +
mov dword ptr [esp] offset a____Binutils_8 +
call sub_410560  +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+44h] +
mov ebp [esp+48h] +
test al 7 +
jnz loc_4133E0  +
test eax eax +
lea edx [eax+7] +
cmovs eax edx +
mov [esp+18h] eax +
sar dword ptr [esp+18h] 3 +
mov ebx [esp+18h] +
test ebx ebx +
jle loc_4133DA  +
sub ebx 1 +
xor esi esi +
xor eax eax +
xor edx edx +
mov [esp+1Ch] ebx +
mov [esp+48h] ebp +
lea esi [esi+0] +
mov ecx [esp+48h] +
mov ebx edx +
mov edi [esp+1Ch] +
mov ebp [esp+40h] +
sub edi esi +
test ecx ecx +
cmovnz edi esi +
mov ecx eax +
movzx edi byte ptr [ebp+edi+0] +
shl ecx 8 +
add esi 1 +
shld ebx eax +
mov edx ebx +
or edi ecx +
cmp esi [esp+18h] +
mov eax edi +
jnz loc_4133A0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
xor edx edx +
jmp loc_4133D2  +
***
mov dword ptr [esp+8] offset aBfd_get_bits +
mov dword ptr [esp+4] 2F7h +
mov dword ptr [esp] offset a____Binutils_8 +
call sub_410560  +
lea esi [esi+0] +
push ebp  +
mov eax 1 +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+44h] +
mov ecx [esp+3Ch] +
mov ebx [esp+40h] +
test edx edx +
jz loc_4134C5  +
mov eax [esp+34h] +
test byte ptr [eax+18h] 30h +
jnz loc_413500  +
mov eax [esp+30h] +
movzx eax byte ptr [eax+28h] +
and eax 18h +
cmp al 10h +
jz loc_4134D0  +
mov eax [esp+34h] +
mov ebp [eax+28h] +
test ebp ebp +
jz loc_4134D0  +
mov eax [esp+44h] +
xor edx edx +
mov edi edx +
mov esi eax +
add esi ecx +
adc edi ebx +
cmp edx edi +
jg loc_4134E6  +
jge loc_413530  +
cmp edi 0 +
jge loc_4134E0  +
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
add ecx [eax+50h] +
adc ebx [eax+54h] +
mov eax [esp+30h] +
mov [esp+4] ecx +
mov [esp+8] ebx +
mov [esp] eax +
call sub_411E10  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_4134C5  +
mov eax [esp+30h] +
mov [esp+8] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+38h] +
mov [esp] eax +
call sub_411C00  +
cmp [esp+44h] eax +
setz al  +
movzx eax al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+34h] +
mov ebp [eax+24h] +
jmp loc_413450  +
***
jg loc_4134E6  +
cmp esi ebp +
jbe loc_413471  +
mov dword ptr [esp] 5 +
call sub_4105E0  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+8] eax +
mov eax [esp+30h] +
mov dword ptr [esp] offset aBUnableToGetDe +
mov [esp+4] eax +
call off_47D664  +
mov dword ptr [esp] 5 +
call sub_4105E0  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp [esp+44h] esi +
ja loc_4134E6  +
jmp loc_41346C  +
***
sub esp 1Ch +
mov dword ptr [esp+8] offset a_bfd_generic_g +
mov dword ptr [esp+4] 362h +
mov dword ptr [esp] offset a____Binutils_8 +
call sub_410560  +
nop   +
push esi  +
mov eax 1 +
push ebx  +
sub esp 14h +
mov esi [esp+34h] +
mov ecx [esp+2Ch] +
mov ebx [esp+30h] +
test esi esi +
jnz loc_413580  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+24h] +
mov dword ptr [esp+0Ch] 0 +
add ecx [eax+50h] +
adc ebx [eax+54h] +
mov eax [esp+20h] +
mov [esp+4] ecx +
mov [esp+8] ebx +
mov [esp] eax +
call sub_411E10  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_41357A  +
mov eax [esp+20h] +
mov [esp+4] esi +
mov [esp+8] eax +
mov eax [esp+28h] +
mov [esp] eax +
call sub_411CB0  +
cmp esi eax +
setz al  +
add esp 14h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
add eax 1 +
shr edx 1 +
jnz loc_4135F0  +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov eax 4Ch +
cmp byte ptr [edx+18h] 5Fh +
mov edx 2Eh +
cmovnz eax edx +
mov edx [esp+8] +
cmp al [edx] +
setz al  +
movzx eax al +
retn   +
***
sub esp 1Ch +
mov ecx [esp+20h] +
mov edx [esp+24h] +
mov eax [ecx+4] +
mov edx [edx+4] +
mov eax [eax+8] +
mov edx [edx+8] +
cmp eax edx +
jz loc_413693  +
cmp eax 2 +
jz loc_413693  +
cmp edx 2 +
jz loc_413693  +
test eax eax +
mov edx offset aBCompiledForAB +
mov eax offset aBCompiledForAL +
cmovnz edx eax +
mov [esp+4] ecx +
mov [esp] edx +
call off_47D664  +
mov dword ptr [esp] 3 +
call sub_4105E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax 1 +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 28h +
mov eax ds:dword_4A8510 +
mov ebx [esp+3Ch] +
or eax ebx +
cmp eax 0FFFFFFFFh +
jz loc_413714  +
mov eax ds:_iob +
add eax 20h +
mov [esp] eax +
call fflush  +
test ebx ebx +
jz loc_413720  +
mov eax [esp+38h] +
mov [esp+14h] ebx +
mov dword ptr [esp+4] offset aDeprecatedSCal +
mov [esp+10h] eax +
mov eax [esp+34h] +
mov [esp+0Ch] eax +
mov eax [esp+30h] +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call fprintf  +
mov eax ds:_iob +
not ebx  +
add eax 40h +
mov [esp] eax +
call fflush  +
or ds:dword_4A8510 ebx +
add esp 28h +
pop ebx  +
retn   +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] offset aDeprecatedSC_0 +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call fprintf  +
jmp loc_4136FC  +
***
push edi  +
xor ecx ecx +
push esi  +
xor esi esi +
push ebx  +
mov edi [esp+14h] +
xor ebx ebx +
lea esi [esi+0] +
movzx eax byte ptr [edi+ebx] +
add ebx 1 +
mov edx eax +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or esi edx +
test al al +
js loc_413760  +
mov eax [esp+18h] +
mov [eax] ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov edi [esp+arg_4] +
mov ebp [esp+arg_10] +
cmp edi ebp +
jnb loc_41380F  +
movzx eax byte ptr [edi] +
mov esi eax +
and esi 7Fh +
test al al +
jns loc_41381E  +
sub ebp edi +
mov ecx 7 +
mov edx 1 +
jmp loc_4137D7  +
movzx eax byte ptr [edi+edx] +
add edx 1 +
mov ebx eax +
and ebx 7Fh +
shl ebx cl +
add ecx 7 +
or esi ebx +
test al al +
jns loc_4137DB  +
cmp edx ebp +
jnz loc_4137C0  +
cmp ecx 1Fh +
setbe bl  +
mov edi [esp+arg_8] +
test edi edi +
jz loc_4137EF  +
mov edi [esp+arg_8] +
mov [edi] edx +
mov edx [esp+arg_C] +
test edx edx +
jz loc_413808  +
test bl bl +
jz loc_413808  +
test al 40h +
jz loc_413808  +
mov eax 0FFFFFFFFh +
shl eax cl +
or esi eax +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx 1 +
xor eax eax +
xor ecx ecx +
xor edx edx +
xor esi esi +
jmp loc_4137E1  +
mov ebx 1 +
mov ecx 7 +
mov edx 1 +
jmp loc_4137E1  +
***
push edi  +
xor ecx ecx +
push esi  +
xor esi esi +
push ebx  +
mov edi [esp+14h] +
xor ebx ebx +
lea esi [esi+0] +
movzx eax byte ptr [edi+ebx] +
add ebx 1 +
mov edx eax +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or esi edx +
test al al +
js loc_413840  +
cmp ecx 1Fh +
ja loc_413869  +
test al 40h +
jz loc_413869  +
mov eax 0FFFFFFFFh +
shl eax cl +
or esi eax +
mov eax [esp+18h] +
mov [eax] ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 1 +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
test edx edx +
mov [esp+20h+var_14] ecx +
jz loc_413900  +
mov ebx [edx] +
mov edi eax +
test ebx ebx +
jnz loc_4138B9  +
jmp loc_413900  +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jz loc_413900  +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_20] ebx +
call strstr  +
test eax eax +
mov ebp eax +
jz loc_4138B0  +
mov [esp+20h+var_20] edi +
call strlen  +
cmp ebx ebp +
movzx eax byte ptr [ebp+eax+0] +
jz loc_4138E2  +
cmp byte ptr [ebp-1] 3Ah +
jnz loc_4138B0  +
test al al +
jnz loc_4138B0  +
mov eax [esp+20h+var_14] +
mov [eax] ebx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov esi off_47D678 +
mov ebx [esi] +
test ebx ebx +
jnz loc_41392F  +
jmp loc_413950  +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jz loc_413950  +
mov eax [ebx] +
mov [esp+18h+var_18] edi +
mov [esp+18h+var_14] eax +
call strcmp  +
test eax eax +
jnz loc_413926  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov esi offset off_483C20 +
mov eax offset aAvr +
jmp loc_413969  +
add esi 8 +
mov eax [esi] +
test eax eax +
jz loc_4139A0  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call sub_469910  +
test eax eax +
jnz loc_413960  +
mov ebx [esi+4] +
test ebx ebx +
jnz loc_413941  +
add esi 8 +
mov ebx [esi+4] +
test ebx ebx +
jz loc_413988  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+18h+var_18] 2 +
xor ebx ebx +
call sub_4105E0  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 18h +
mov edx off_47D670 +
mov ebx [esp+20h] +
test edx edx +
jz loc_4139E9  +
mov eax [edx] +
mov [esp] ebx +
mov [esp+4] eax +
call strcmp  +
mov edx 1 +
test eax eax +
jz loc_4139FE  +
mov eax ebx +
call sub_413910  +
test eax eax +
jz loc_413A05  +
mov off_47D670 eax +
mov edx 1 +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
***
xor edx edx +
jmp loc_4139FE  +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
test eax eax +
jz loc_413A90  +
mov edi offset aDefault +
mov ecx 8 +
mov esi eax +
cmps   +
jnz loc_413A50  +
mov eax off_47D670 +
test eax eax +
jz loc_413A80  +
test ebx ebx +
jz loc_413A46  +
or byte ptr [ebx+2Bh] 1 +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test ebx ebx +
jz loc_413A70  +
and byte ptr [ebx+2Bh] 0FEh +
call sub_413910  +
test eax eax +
jz loc_413A79  +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
call sub_413910  +
test eax eax +
jnz loc_413A46  +
xor eax eax +
jmp loc_413A46  +
mov eax off_47D678 +
mov eax [eax] +
jmp loc_413A3B  +
mov [esp+10h+var_10] offset aGnutarget +
call getenv  +
test eax eax +
jz loc_413A32  +
jmp loc_413A22  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov ebp [esp+78h] +
mov edi [esp+7Ch] +
mov esi [esp+80h] +
test ebp ebp +
jz loc_413AD1  +
mov dword ptr [ebp+0] 0 +
test edi edi +
jz loc_413ADB  +
mov dword ptr [edi] 0FFFFFFFFh +
test esi esi +
jz loc_413AE5  +
mov dword ptr [esi] 0 +
mov eax [esp+74h] +
mov [esp+4] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_413A10  +
test eax eax +
mov ebx eax +
jz loc_413BD0  +
test ebp ebp +
jz loc_413B14  +
mov edx [ebx+8] +
xor eax eax +
test edx edx +
setz al  +
mov [ebp+0] eax +
test edi edi +
jz loc_413B1E  +
movzx eax byte ptr [ebx+18h] +
mov [edi] eax +
test esi esi +
mov eax ebx +
jz loc_413B33  +
mov ebp [ebx] +
call sub_4100B0  +
mov edi eax +
mov eax ebx +
test edi edi +
jnz loc_413B40  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test ebp ebp +
jz loc_413B6A  +
mov dword ptr [esp+4] 2Dh +
mov [esp] ebp +
call strchr  +
test eax eax +
jz loc_413BC0  +
lea ebp [eax+1] +
mov ecx esi +
mov edx edi +
mov eax ebp +
call sub_413890  +
test eax eax +
jz loc_413B80  +
mov [esp] edi +
call free  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+4] ebp +
lea ebp [esp+1Eh] +
mov [esp] ebp +
call strcpy  +
jmp loc_413BA4  +
mov byte ptr [eax] 0 +
mov ecx esi +
mov edx edi +
mov eax ebp +
call sub_413890  +
test eax eax +
jnz loc_413B6A  +
mov dword ptr [esp+4] 2Dh +
mov [esp] ebp +
call strrchr  +
test eax eax +
jnz loc_413B92  +
jmp loc_413B6A  +
***
mov ecx esi +
mov edx edi +
mov eax ebp +
call sub_413890  +
jmp loc_413B6A  +
***
xor eax eax +
jmp loc_413B33  +
***
push esi  +
push ebx  +
sub esp 14h +
mov edx off_47D678 +
mov ebx [edx] +
test ebx ebx +
jz loc_413C4D  +
xor eax eax +
add eax 1 +
mov ecx [edx+eax*4] +
test ecx ecx +
jnz loc_413BF3  +
lea eax ds:4[eax*4] +
mov [esp] eax +
call sub_412BD0  +
test eax eax +
jz loc_413C58  +
mov edx off_47D678 +
mov ecx [edx] +
test ecx ecx +
jz loc_413C54  +
mov ebx edx +
mov esi eax +
jmp loc_413C28  +
mov ebx off_47D678 +
cmp edx ebx +
jz loc_413C30  +
cmp ecx [ebx] +
jz loc_413C38  +
mov ecx [ecx] +
add esi 4 +
mov [esi-4] ecx +
add edx 4 +
mov ecx [edx] +
test ecx ecx +
jnz loc_413C22  +
mov dword ptr [esi] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax 4 +
jmp loc_413C04  +
***
mov esi eax +
jmp loc_413C41  +
***
xor eax eax +
jmp loc_413C47  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx off_47D678 +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov eax [ebx] +
test eax eax +
jnz loc_413C89  +
jmp loc_413CA0  +
add ebx 4 +
mov eax [ebx] +
test eax eax +
jz loc_413CA0  +
mov [esp+4] esi +
mov [esp] eax +
call edi  +
test eax eax +
jz loc_413C80  +
mov eax [ebx] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax offset aA_out_0 +
mov eax offset aUnknownFileFor +
jmp loc_413CD0  +
***
mov eax offset aSym +
mov eax offset aPef_xlib +
jmp loc_413CD0  +
***
mov eax offset off_483B7E +
mov eax offset aMach_o +
jmp loc_413CD0  +
***
mov eax offset aMmo +
mov eax offset aEvax +
jmp loc_413CD0  +
***
mov eax offset aOvax +
mov eax offset aMsdos +
jmp loc_413CD0  +
***
mov eax offset aVersados +
mov eax offset aOs9k +
jmp loc_413CD0  +
***
mov eax offset aSom +
mov eax offset aIhex +
jmp loc_413CD0  +
***
mov eax offset aVerilog +
mov eax offset aSrec +
jmp loc_413CD0  +
***
mov eax offset aTekhex +
jmp loc_413CD0  +
***
mov eax offset aOasys +
jmp loc_413CD0  +
***
mov eax offset aNlm +
jmp loc_413CD0  +
***
mov eax offset aIeee +
jmp loc_413CD0  +
***
mov eax offset off_483B25 +
jmp loc_413CD0  +
***
mov eax offset aXcoff +
jmp loc_413CD0  +
***
mov eax offset aEcoff +
jmp loc_413CD0  +
***
mov eax offset aCoff +
jmp loc_413CD0  +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax [eax+8] +
mov [esp+18h+var_18] eax +
call fclose  +
test eax eax +
jnz loc_413E38  +
mov edx [ebx+10h] +
mov eax [ebx+14h] +
cmp ebx ds:dword_4A8518 +
mov [edx+14h] eax +
mov ecx [ebx+14h] +
mov [ecx+10h] edx +
jz loc_413E50  +
mov dword ptr [ebx+8] 0 +
mov eax esi +
sub ds:dword_4A851C 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_18] 1 +
xor si si +
call sub_4105E0  +
jmp loc_413E0B  +
***
xor eax eax +
cmp ebx ecx +
cmovnz eax ecx +
mov ds:dword_4A8518 eax +
jmp loc_413E22  +
***
mov eax ds:dword_4A8518 +
test eax eax +
jz loc_413EB0  +
push ebx  +
sub esp 18h +
mov ebx [eax+10h] +
cmp byte ptr [ebx+2Ah] 0 +
jns loc_413E81  +
jmp loc_413E90  +
mov ebx [ebx+10h] +
cmp byte ptr [ebx+2Ah] 0 +
js loc_413E90  +
cmp eax ebx +
jnz loc_413E78  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov eax [ebx+8] +
mov [esp+1Ch+var_1C] eax +
call sub_411BD0  +
mov [ebx+18h] eax +
mov eax ebx +
mov [ebx+1Ch] edx +
add esp 18h +
pop ebx  +
jmp sub_413DF0  +
mov eax 1 +
retn   +
***
sub esp 1Ch +
sub esp 0Ch +
xor eax eax +
mov edx [esp+0Ch+arg_0] +
cmp dword ptr [edx+0Ch] offset off_483CE0 +
jz loc_413F16  +
add esp 0Ch +
retn   +
mov ecx [edx+8] +
test ecx ecx +
jz loc_413F12  +
mov eax edx +
call sub_413DF0  +
sub eax 1 +
jmp loc_413F12  +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
test eax eax +
jz loc_413FC8  +
mov eax ds:dword_4A8520 +
test eax eax +
jnz loc_413F58  +
mov ds:dword_4A8520 0Ah +
mov al 0Ah +
cmp ds:dword_4A851C eax +
jge loc_413FA0  +
mov eax ds:dword_4A8518 +
mov dword ptr [ebx+0Ch] offset off_483CE0 +
test eax eax +
jz loc_413FC0  +
mov [ebx+14h] eax +
mov eax [eax+10h] +
mov [ebx+10h] eax +
mov [eax+14h] ebx +
mov eax [ebx+14h] +
mov [eax+10h] ebx +
add ds:dword_4A851C 1 +
mov eax 1 +
mov ds:dword_4A8518 ebx +
add esp 18h +
pop ebx  +
retn   +
call sub_413E60  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_413F94  +
mov eax ds:dword_4A8518 +
mov dword ptr [ebx+0Ch] offset off_483CE0 +
test eax eax +
jnz loc_413F70  +
lea esi [esi+0] +
mov [ebx+14h] ebx +
mov [ebx+10h] ebx +
jmp loc_413F82  +
mov [esp+18h+var_14] 1FFh +
mov [esp+18h+var_18] offset a____Binutils_0 +
call sub_410530  +
jmp loc_413F43  +
***
jmp sub_413FF0  +
***
mov eax [esp+arg_0] +
cmp dword ptr [eax+0Ch] offset off_483CE0 +
jz loc_414003  +
mov eax 1 +
retn   +
mov edx [eax+8] +
test edx edx +
jz loc_413FFD  +
jmp sub_413DF0  +
***
push ebx  +
mov ebx 1 +
sub esp 8 +
mov edx ds:dword_4A8518 +
test edx edx +
jz loc_414037  +
cmp dword ptr [edx+0Ch] offset off_483CE0 +
mov eax 1 +
jz loc_414040  +
and ebx eax +
test edx edx +
jnz loc_414023  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
mov ecx [edx+8] +
test ecx ecx +
jz loc_414031  +
mov eax edx +
call sub_413DF0  +
mov edx ds:dword_4A8518 +
jmp loc_414031  +
***
mov ebx [esp+48h+arg_0] +
or byte ptr [ebx+2Ah] 80h +
mov eax ds:dword_4A8520 +
test eax eax +
jnz loc_414081  +
mov ds:dword_4A8520 0Ah +
mov al 0Ah +
cmp ds:dword_4A851C eax +
jge loc_414140  +
movzx eax byte ptr [ebx+28h] +
shr al 3 +
and eax 3 +
sub eax 2 +
cmp eax 1 +
ja loc_414154  +
test byte ptr [ebx+2Bh] 2 +
mov eax [ebx] +
jz loc_4140E0  +
mov [esp+48h+var_44] offset aRB +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
test eax eax +
mov [ebx+8] eax +
jz loc_414170  +
mov [esp+48h+var_48] ebx +
call sub_413F30  +
test eax eax +
jz loc_41414D  +
mov eax [ebx+8] +
add esp 48h +
pop ebx  +
retn   +
lea edx [esp+48h+var_38] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call ds:_stati64  +
test eax eax +
jnz loc_414110  +
mov eax [esp+48h+var_1C] +
or eax [esp+48h+var_20] +
jz loc_414110  +
mov eax [ebx] +
mov [esp+48h+var_48] eax +
call sub_469D90  +
lea esi [esi+0] +
mov eax [ebx] +
mov [esp+48h+var_44] offset aWB +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
or byte ptr [ebx+2Bh] 2 +
mov [ebx+8] eax +
test eax eax +
jnz loc_4140C6  +
mov [esp+48h+var_48] 1 +
call sub_4105E0  +
jmp loc_4140D2  +
call sub_413E60  +
test eax eax +
jnz loc_41408D  +
add esp 48h +
xor eax eax +
pop ebx  +
retn   +
mov eax [ebx] +
mov [esp+48h+var_44] offset aRb +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
mov [ebx+8] eax +
jmp loc_414129  +
mov eax [ebx] +
mov [esp+48h+var_44] offset aWB +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
mov [ebx+8] eax +
jmp loc_414129  +
***
push ebx  +
sub esp 24h +
test byte ptr [eax+2Ah] 1 +
jnz loc_414289  +
mov ebx eax +
jmp loc_4141A7  +
mov ebx ecx +
mov ecx [ebx+8Ch] +
test ecx ecx +
jnz loc_4141A5  +
mov eax [ebx+8] +
test eax eax +
jz loc_4141F3  +
mov edx ds:dword_4A8518 +
cmp ebx edx +
jz loc_4141ED  +
mov esi [ebx+14h] +
test edx edx +
mov ecx [ebx+10h] +
mov [ecx+14h] esi +
mov esi [ebx+14h] +
mov [esi+10h] ecx +
jz loc_41421C  +
mov [ebx+14h] edx +
mov edx [edx+10h] +
mov [ebx+10h] edx +
mov [edx+14h] ebx +
mov edx [ebx+14h] +
mov [edx+10h] ebx +
mov ds:dword_4A8518 ebx +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
test dl 1 +
mov [esp+28h+var_C] edx +
jnz loc_4141ED  +
mov [esp+28h+var_28] ebx +
call sub_414060  +
test eax eax +
jz loc_41425E  +
mov edx [esp+28h+var_C] +
and edx 2 +
jz loc_414224  +
mov eax [ebx+8] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [ebx+14h] ebx +
mov [ebx+10h] ebx +
jmp loc_4141E7  +
mov eax [ebx+8] +
mov [esp+28h+var_1C] 0 +
mov edx [ebx+18h] +
mov ecx [ebx+1Ch] +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_20] ecx +
call sub_411BE0  +
test eax eax +
jz loc_414213  +
mov edx [esp+28h+var_C] +
and edx 4 +
jnz loc_414213  +
mov [esp+28h+var_28] 1 +
call sub_4105E0  +
mov ebx off_47D664 +
call sub_410390  +
mov [esp+28h+var_28] eax +
call sub_4103A0  +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_28] offset aReopeningBS +
mov [esp+28h+var_20] eax +
call ebx  +
xor eax eax +
jmp loc_4141ED  +
mov [esp+28h+var_20] offset aBfd_cache_look +
mov [esp+28h+var_24] 0F2h +
mov [esp+28h+var_28] offset a____Binutils_0 +
call sub_410560  +
lea esi [esi+0] +
lea edi [edi+0] +
sub esp 1Ch +
mov eax [esp+44h+var_24] +
cmp eax ds:dword_4A8518 +
jz loc_4142F0  +
mov edx 4 +
call sub_414190  +
test eax eax +
jz loc_414310  +
mov [esp+44h+var_44] eax +
call _fileno_0  +
mov edx [esp+44h+var_20] +
mov [esp+44h+var_40] edx +
mov [esp+44h+var_44] eax +
call ds:_fstati64  +
test eax eax +
js loc_4142F5  +
add esp 1Ch +
retn   +
mov eax [eax+8] +
jmp loc_4142C9  +
mov [esp+44h+var_44] 1 +
mov [esp+44h+var_38] eax +
call sub_4105E0  +
mov eax [esp+44h+var_38] +
add esp 1Ch +
retn   +
mov eax 0FFFFFFFFh +
jmp loc_4142EA  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
cmp eax ds:dword_4A8518 +
jz loc_414351  +
mov edx 1 +
call sub_414190  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_41434D  +
mov [esp+1Ch+var_1C] edx +
call fflush  +
test eax eax +
js loc_414356  +
add esp 1Ch +
retn   +
mov edx [eax+8] +
jmp loc_41433B  +
mov [esp+1Ch+var_1C] 1 +
mov [esp+1Ch+var_10] eax +
call sub_4105E0  +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
retn   +
***
push ebx  +
mov eax [esp+arg_0] +
cmp eax ds:dword_4A8518 +
mov esi [esp+arg_4] +
mov edi [esp+arg_8] +
mov ebx [esp+arg_C] +
jz loc_4143B6  +
xor edx edx +
cmp ebx 1 +
setnz dl  +
add edx edx +
call sub_414190  +
test eax eax +
jz loc_4143C0  +
mov [esp+arg_C] ebx +
mov [esp+arg_4] esi +
mov [esp+arg_8] edi +
mov [esp+arg_0] eax +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_411BE0  +
mov eax [eax+8] +
jmp loc_41439A  +
pop ebx  +
mov eax 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
***
mov ebx [esp+8+arg_0] +
cmp ebx ds:dword_4A8518 +
jz loc_414400  +
mov edx 1 +
mov eax ebx +
call sub_414190  +
test eax eax +
jz loc_414407  +
mov [esp+8+arg_0] eax +
add esp 8 +
pop ebx  +
jmp sub_411BD0  +
mov eax [ebx+8] +
test eax eax +
jnz loc_4143F0  +
mov eax [ebx+18h] +
mov edx [ebx+1Ch] +
add esp 8 +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov ecx [esp+2Ch+arg_C] +
cmp eax ds:dword_4A8518 +
mov ebx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_10] ecx +
jz loc_4144B0  +
xor edx edx +
call sub_414190  +
mov ebp eax +
xor eax eax +
xor edx edx +
test ebp ebp +
jz loc_41447B  +
mov eax [esp+2Ch+arg_4] +
xor edi edi +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] eax +
call fwrite  +
cmp [esp+2Ch+var_10] 0 +
mov esi eax +
jge loc_414483  +
mov eax esi +
mov edx edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jle loc_4144B5  +
mov [esp+2Ch+var_2C] ebp +
call ferror  +
test eax eax +
nop   +
jz loc_414477  +
mov [esp+2Ch+var_2C] 1 +
call sub_4105E0  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_41447B  +
mov ebp [eax+8] +
jmp loc_414448  +
cmp ebx eax +
jbe loc_414477  +
jmp loc_414485  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edx [esp+3Ch+arg_C] +
mov eax [esp+3Ch+arg_8] +
cmp edx 0 +
mov [esp+3Ch+var_1C] eax +
mov [esp+3Ch+var_18] edx +
jl loc_4146BB  +
jle loc_4146B0  +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_20] 0 +
mov ecx [esp+3Ch+var_1C] +
mov ebx [esp+3Ch+var_18] +
sub ecx [esp+3Ch+var_24] +
sbb ebx [esp+3Ch+var_20] +
cmp ebx 0 +
jle loc_414653  +
mov esi [esp+3Ch+var_24] +
xor ebx ebx +
mov ecx 800000h +
mov eax ds:dword_4A8518 +
add esi [esp+3Ch+arg_4] +
cmp [esp+3Ch+arg_0] eax +
jz loc_414686  +
mov eax [esp+3Ch+arg_0] +
xor edx edx +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] ebx +
call sub_414190  +
mov ecx [esp+3Ch+var_14] +
mov ebx [esp+3Ch+var_10] +
mov ebp eax +
test ebp ebp +
jz loc_414695  +
mov [esp+3Ch+var_34] ecx +
xor edi edi +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_30] ebp +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] ebx +
call fread  +
mov ebx [esp+3Ch+var_10] +
mov ecx [esp+3Ch+var_14] +
cmp edi ebx +
mov esi eax +
jge loc_414634  +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] ebx +
call ferror  +
mov ecx [esp+3Ch+var_14] +
mov ebx [esp+3Ch+var_10] +
test eax eax +
jnz loc_4146A0  +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] ebx +
mov [esp+3Ch+var_3C] 12h +
call sub_4105E0  +
mov eax esi +
mov edx edi +
neg eax  +
mov ecx [esp+3Ch+var_14] +
adc edx 0 +
mov ebx [esp+3Ch+var_10] +
neg edx  +
mov eax edx +
shr eax 1Fh +
test al al +
jnz loc_4145E4  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_20] +
mov ebp eax +
or ebp edx +
jnz loc_4145EC  +
add [esp+3Ch+var_24] esi +
adc [esp+3Ch+var_20] edi +
cmp edi ebx +
jge loc_414600  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_20] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jg loc_414606  +
cmp esi ecx +
jb loc_4145F0  +
mov eax [esp+3Ch+var_18] +
cmp [esp+3Ch+var_20] eax +
jg loc_4145F0  +
jl loc_4144F6  +
mov eax [esp+3Ch+var_1C] +
cmp [esp+3Ch+var_24] eax +
jb loc_4144F6  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_20] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jg loc_41463E  +
cmp eax ecx +
jb loc_414586  +
mov eax esi +
mov edx edi +
neg eax  +
adc edx 0 +
neg edx  +
mov eax edx +
shr eax 1Fh +
jmp loc_4145D2  +
jl loc_414661  +
cmp ecx 800000h +
ja loc_41450F  +
mov eax ebx +
xor esi esi +
xor edi edi +
or eax ecx +
jz loc_4145D6  +
mov esi [esp+3Ch+var_24] +
mov eax ds:dword_4A8518 +
add esi [esp+3Ch+arg_4] +
cmp [esp+3Ch+arg_0] eax +
jnz loc_41452D  +
mov eax [esp+3Ch+arg_0] +
mov ebp [eax+8] +
test ebp ebp +
jnz loc_414552  +
xor esi esi +
xor edi edi +
jmp loc_4145D6  +
mov [esp+3Ch+var_3C] 1 +
jmp loc_4145B5  +
cmp [esp+3Ch+var_1C] 0 +
ja loc_4144E6  +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_20] 0 +
jmp loc_4145F0  +
***
mov eax 1 +
retn   +
***
mov eax 10h +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_41DF10  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 10h +
mov eax [eax] +
mov [esp+18h+var_18] eax +
call strlen  +
mov [esp+18h+var_18] edi +
mov ebx eax +
call strlen  +
mov [esp+18h+var_18] esi +
lea eax [ebx+eax+0Ah] +
mov [esp+18h+var_14] eax +
call sub_40E140  +
mov ebx eax +
mov eax offset unk_483D00 +
test ebx ebx +
jz loc_414799  +
mov eax [esi] +
mov [esp+18h+var_C] edi +
mov [esp+18h+var_14] offset a_binary_S_S +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call sprintf  +
movzx ecx byte ptr [ebx] +
test cl cl +
jz loc_414797  +
mov edx ebx +
lea esi [esi+0] +
test ds:byte_49F240[ecx+ecx] 8Ch +
jnz loc_41478D  +
mov byte ptr [edx] 5Fh +
add edx 1 +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_414780  +
mov eax ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov edi [esp+34h] +
mov ebp [esi+0A0h] +
mov dword ptr [esp+4] 48h +
mov [esp] esi +
call sub_40E140  +
test eax eax +
mov ebx eax +
jz loc_414870  +
mov [eax] esi +
mov edx offset aStart +
mov eax esi +
call sub_414720  +
mov edx offset aEnd +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 2 +
mov [ebx+10h] ebp +
mov dword ptr [ebx+14h] 0 +
mov [ebx+18h] esi +
mov [ebx+4] eax +
mov eax esi +
call sub_414720  +
mov edx offset aSize +
mov [ebx+1Ch] eax +
mov eax [ebp+24h] +
mov dword ptr [ebx+24h] 2 +
mov [ebx+28h] ebp +
mov dword ptr [ebx+2Ch] 0 +
mov [ebx+20h] eax +
mov eax esi +
mov [ebx+30h] esi +
call sub_414720  +
mov [ebx+34h] eax +
mov eax [ebp+24h] +
mov dword ptr [ebx+3Ch] 2 +
mov dword ptr [ebx+40h] offset off_47D510 +
mov dword ptr [ebx+44h] 0 +
mov [ebx+38h] eax +
lea eax [ebx+18h] +
mov [edi] ebx +
add ebx 30h +
mov [edi+4] eax +
mov eax 3 +
mov [edi+8] ebx +
mov dword ptr [edi+0Ch] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_414868  +
***
push ebx  +
sub esp 48h +
mov ebx [esp+50h] +
test byte ptr [ebx+2Bh] 1 +
jnz loc_4148F0  +
lea eax [esp+10h] +
mov dword ptr [ebx+7Ch] 3 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_411DC0  +
test eax eax +
js loc_414903  +
mov dword ptr [esp+8] 123h +
mov dword ptr [esp+4] offset a_data +
mov [esp] ebx +
call sub_40F740  +
test eax eax +
jz loc_414913  +
mov edx [esp+28h] +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+50h] 0 +
mov dword ptr [eax+54h] 0 +
mov [eax+24h] edx +
mov [ebx+0A0h] eax +
mov eax [ebx+4] +
add esp 48h +
pop ebx  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4105E0  +
add esp 48h +
xor eax eax +
pop ebx  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_4105E0  +
xor eax eax +
jmp loc_4148EA  +
***
xor eax eax +
jmp loc_4148EA  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+38h] +
mov edi [esp+44h] +
mov edx [esp+40h] +
mov esi [esp+30h] +
mov [esp+4] eax +
mov eax [esp+3Ch] +
test edi edi +
mov ebp [esp+34h] +
mov [esp+0Ch] edx +
mov [esp+8] eax +
jz loc_4149CD  +
test byte ptr [esi+2Bh] 10h +
jnz loc_4149C1  +
mov eax [esi+64h] +
xor ebx ebx +
mov dword ptr [esp] 0 +
test eax eax +
mov edx eax +
jnz loc_414977  +
jmp loc_4149BD  +
mov edx [edx+0Ch] +
test edx edx +
jz loc_4149A7  +
mov ecx [edx+14h] +
and ecx 303h +
cmp ecx 103h +
jnz loc_414970  +
mov ecx [edx+24h] +
test ecx ecx +
jz loc_414970  +
mov ecx [esp] +
test ecx ecx +
jnz loc_4149E0  +
mov ebx [edx+20h] +
mov edx [edx+0Ch] +
mov dword ptr [esp] 1 +
test edx edx +
jnz loc_414977  +
mov edx [eax+20h] +
mov dword ptr [eax+54h] 0 +
sub edx ebx +
mov [eax+50h] edx +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_4149A7  +
or byte ptr [esi+2Bh] 10h +
mov eax [ebp+14h] +
test al 3 +
jz loc_4149CD  +
test ah 2 +
jz loc_4149F2  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [edx+20h] +
mov dword ptr [esp] 1 +
cmp ecx ebx +
jnb loc_414970  +
mov ebx ecx +
jmp loc_414999  +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+44h] edi +
mov [esp+34h] ebp +
mov [esp+3Ch] eax +
mov eax [esp+4] +
mov [esp+30h] esi +
mov [esp+40h] edx +
mov [esp+38h] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_413560  +
***
push ebx  +
sub esp 18h +
mov edx [esp+30h] +
mov ebx [esp+20h] +
mov eax [esp+2Ch] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] edx +
mov [esp] ebx +
mov [esp+4] eax +
call sub_411E10  +
xor edx edx +
test eax eax +
jnz loc_414A7F  +
mov eax [esp+34h] +
mov [esp+8] ebx +
mov [esp+4] eax +
mov eax [esp+28h] +
mov [esp] eax +
call sub_411C00  +
xor edx edx +
cmp [esp+34h] eax +
setz dl  +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
***
push edi  +
mov ecx 0Eh +
push esi  +
push ebx  +
sub esp 5Ch +
lea ebx [esp+68h+var_50] +
mov esi [esp+68h+arg_0] +
mov [esp+68h+var_5C] eax +
mov edi ebx +
xor eax eax +
stos   +
mov eax [esp+68h+var_5C] +
mov [esp+68h+var_60] 38h +
mov [esp+68h+var_64] offset a1_2_7 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_4C] edx +
mov [esp+68h+var_50] eax +
mov [esp+68h+var_40] esi +
call sub_459B80  +
mov ecx [esp+68h+var_4C] +
test ecx ecx +
mov edi eax +
jnz loc_414B1D  +
jmp loc_414B25  +
test edi edi +
jnz loc_414B25  +
mov ecx esi +
sub ecx eax +
mov eax ecx +
add eax ebp +
mov [esp+68h+var_64] 4 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_44] eax +
call sub_459C20  +
cmp eax 1 +
mov edi eax +
jnz loc_414B25  +
mov [esp+68h+var_68] ebx +
call sub_4599A0  +
mov edx [esp+68h+var_4C] +
test edx edx +
mov edi eax +
jz loc_414B25  +
mov eax [esp+68h+var_40] +
test eax eax +
jnz loc_414AE4  +
mov [esp+68h+var_68] ebx +
call sub_45BA30  +
xor edx edx +
or eax edi +
jnz loc_414B3E  +
mov eax [esp+68h+var_40] +
xor edx edx +
test eax eax +
setz dl  +
add esp 5Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov ebx [esp+3Ch+arg_4] +
movzx eax byte ptr [eax+28h] +
mov edi [esi] +
and eax 18h +
cmp al 10h +
jz loc_414BB0  +
mov ebp [ebx+28h] +
test ebp ebp +
jz loc_414BB0  +
movzx eax byte ptr [ebx+18h] +
shr al 4 +
and eax 3 +
cmp eax 1 +
jz loc_414BD0  +
cmp eax 2 +
jz loc_414C50  +
test eax eax +
jz loc_414C00  +
mov [esp+3Ch+var_34] offset aBfd_get_full_s +
mov [esp+3Ch+var_38] 145h +
mov [esp+3Ch+var_3C] offset a____Binutils_5 +
call sub_410560  +
nop   +
mov ebp [ebx+24h] +
test ebp ebp +
jnz loc_414B77  +
mov dword ptr [esi] 0 +
mov ebx 1 +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+6Ch] +
test eax eax +
jz loc_414D62  +
test edi edi +
jz loc_414D69  +
cmp edi eax +
mov ebx 1 +
jz loc_414BC2  +
mov [esp+3Ch+var_34] ebp +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call memcpy  +
jmp loc_414BC2  +
test edi edi +
jz loc_414D50  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_40FA90  +
test eax eax +
jnz loc_414D3D  +
cmp [esi] edi +
jz loc_414D62  +
mov [esp+3Ch+var_3C] edi +
xor ebx ebx +
call free  +
jmp loc_414BC2  +
mov eax [ebx+2Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_412BD0  +
test eax eax +
mov ecx eax +
mov [esp+3Ch+var_18] eax +
jz loc_414D62  +
mov edx [ebx+28h] +
mov eax [ebx+24h] +
and byte ptr [ebx+18h] 0CFh +
mov [esp+3Ch+var_10] edx +
mov edx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_14] eax +
mov eax [ebx+2Ch] +
mov dword ptr [ebx+28h] 0 +
mov [ebx+24h] eax +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_38] ebx +
call sub_40FA90  +
mov edx [esp+3Ch+var_10] +
mov ecx [esp+3Ch+var_14] +
mov [ebx+28h] edx +
movzx edx byte ptr [ebx+18h] +
mov [ebx+24h] ecx +
and edx 0FFFFFFCFh +
or edx 20h +
test eax eax +
mov [ebx+18h] dl +
jz loc_414D1E  +
test edi edi +
jz loc_414D81  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_411560  +
mov edx 0Ch +
mov ecx edi +
test eax eax +
cmovz eax edx +
mov edx [ebx+2Ch] +
add eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] ebp +
call sub_414A90  +
test eax eax +
jnz loc_414D31  +
mov [esp+3Ch+var_3C] 11h +
call sub_4105E0  +
cmp [esi] edi +
jz loc_414D1E  +
mov [esp+3Ch+var_3C] edi +
call free  +
mov eax [esp+3Ch+var_18] +
xor ebx ebx +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_414BC2  +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call free  +
mov [esi] edi +
mov ebx 1 +
jmp loc_414BC2  +
mov [esp+3Ch+var_3C] ebp +
call sub_412BD0  +
test eax eax +
mov edi eax +
jnz loc_414C08  +
xor ebx ebx +
jmp loc_414BC2  +
mov [esp+3Ch+var_3C] ebp +
call sub_412BD0  +
test eax eax +
mov edi eax +
jz loc_414D62  +
mov [esi] eax +
mov eax [ebx+6Ch] +
jmp loc_414BE3  +
mov [esp+3Ch+var_3C] ebp +
call sub_412BD0  +
test eax eax +
mov edi eax +
jz loc_414D1E  +
jmp loc_414CD7  +
***
mov eax [esp+4] +
movzx edx byte ptr [eax+18h] +
mov ecx edx +
and ecx 30h +
cmp cl 20h +
jnz loc_414DBB  +
and edx 0FFFFFFCFh +
or edx 10h +
mov [eax+18h] dl +
mov edx [esp+8] +
or dword ptr [eax+14h] 4000h +
mov [eax+6Ch] edx +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_4] +
mov edi [esp+4Ch+arg_0] +
movzx ebp byte ptr [ebx+18h] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] edi +
mov eax ebp +
shr al 4 +
mov ebp eax +
call sub_411560  +
and ebp 3 +
cmp eax 18h +
mov [esp+4Ch+var_30] eax +
jg loc_414F46  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_414E75  +
and byte ptr [ebx+18h] 0CFh +
lea esi [esp+4Ch+var_24] +
mov [esp+4Ch+var_38] 0Ch +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] edi +
call sub_40FA90  +
test eax eax +
jnz loc_414EE2  +
mov eax [ebx+24h] +
mov esi [esp+4Ch+arg_C] +
mov [esi] eax +
xor eax eax +
movzx edx byte ptr [ebx+18h] +
and ebp 3 +
shl ebp 4 +
mov ecx [esp+4Ch+var_30] +
and edx 0FFFFFFCFh +
or edx ebp +
mov [ebx+18h] dl +
mov edx [esp+4Ch+arg_8] +
mov [edx] ecx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4Ch+var_30] +
lea esi [esp+4Ch+var_24] +
and byte ptr [ebx+18h] 0CFh +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_38] eax +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] edi +
call sub_40FA90  +
test eax eax +
jz loc_414E46  +
mov eax [ebx+24h] +
mov ecx [esp+4Ch+arg_C] +
mov [ecx] eax +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_44] ebx +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] edi +
call sub_411490  +
mov edx eax +
mov eax 1 +
test edx edx +
mov edx 0FFFFFFFFh +
cmovnz edx [esp+4Ch+var_30] +
mov [esp+4Ch+var_30] edx +
jmp loc_414E51  +
mov ecx 4 +
mov edi offset aZlib +
cmps   +
mov ecx [ebx+24h] +
mov esi [esp+4Ch+arg_C] +
mov [esi] ecx +
setnbe dl  +
setb al  +
cmp dl al +
jnz loc_414E4F  +
mov esi [ebx] +
mov edi offset a_debug_str +
mov ecx 0Bh +
cmps   +
jnz loc_414F2A  +
movzx edx byte ptr [esp+4Ch+var_20] +
xor eax eax +
test ds:byte_49F240[edx+edx] 10h +
jnz loc_414E51  +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_4C] eax +
call sub_412FC0  +
mov esi [esp+4Ch+arg_C] +
mov [esi] eax +
mov eax 1 +
jmp loc_414E51  +
mov [esp+4Ch+var_44] offset aBfd_is_section +
mov [esp+4Ch+var_48] 17Eh +
mov [esp+4Ch+var_4C] offset a____Binutils_5 +
call sub_410560  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 3Ch +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_84] ecx +
call sub_411560  +
mov [esp+98h+var_94] ebx +
mov [esp+98h+var_98] esi +
mov ebp eax +
lea eax [esp+98h+var_6C] +
mov [esp+98h+var_8C] eax +
lea eax [esp+98h+var_70] +
mov [esp+98h+var_90] eax +
call sub_414DD0  +
test ebp ebp +
mov edx 0Ch +
cmovz ebp edx +
test eax eax +
jz loc_415060  +
mov eax [esp+98h+var_70] +
test eax eax +
js loc_4151C3  +
mov edx [esp+98h+var_48] +
sub edx eax +
test eax eax +
jnz loc_414FE4  +
mov eax [esp+98h+var_48] +
mov [esp+98h+var_70] 0Ch +
lea edx [eax-0Ch] +
mov ecx [esp+98h+var_6C] +
lea eax [edx+ebp] +
mov [esp+98h+var_74] eax +
cmp eax ecx +
jbe loc_415142  +
mov [esp+98h+var_94] ecx +
mov [esp+98h+var_98] esi +
mov [esp+98h+var_7C] edx +
mov [esp+98h+var_80] ecx +
call sub_40E140  +
test eax eax +
mov edi eax +
jz loc_415138  +
mov eax [esp+98h+var_6C] +
mov ecx [esp+98h+var_80] +
mov edx [esp+98h+var_7C] +
mov [ebx+24h] eax +
mov eax [esp+98h+var_84] +
add eax [esp+98h+var_70] +
mov [esp+98h+var_98] ecx +
mov ecx edi +
call sub_414A90  +
test eax eax +
jnz loc_41519B  +
mov [esp+98h+var_98] 11h +
call sub_4105E0  +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call sub_40E390  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+98h+var_48] +
mov [esp+98h+var_98] eax +
call sub_45C0A0  +
mov [esp+98h+var_98] esi +
add eax ebp +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_74] eax +
call sub_40E140  +
test eax eax +
mov edi eax +
jz loc_415138  +
mov eax [esp+98h+var_48] +
mov [esp+98h+var_8C] eax +
mov eax [esp+98h+var_84] +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_74] +
mov [esp+98h+var_94] eax +
lea eax [edi+ebp] +
mov [esp+98h+var_98] eax +
call sub_45C060  +
test eax eax +
jnz loc_415120  +
mov ecx [esp+98h+var_74] +
add ecx ebp +
cmp [esp+98h+var_48] ecx +
mov [esp+98h+var_74] ecx +
jbe loc_415100  +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call sub_411320  +
nop   +
mov eax [esp+98h+var_84] +
mov [esp+98h+var_98] eax +
call free  +
mov eax [esp+98h+var_74] +
mov [ebx+6Ch] edi +
mov [ebx+24h] eax +
movzx eax byte ptr [ebx+18h] +
and eax 0FFFFFFCFh +
or eax 10h +
mov [ebx+18h] al +
mov eax [esp+98h+var_48] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call sub_40E390  +
mov eax [esp+98h+var_84] +
and byte ptr [ebx+18h] 0CFh +
mov [ebx+6Ch] eax +
mov eax [esp+98h+var_48] +
jmp loc_4150F7  +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call sub_40E390  +
mov [esp+98h+var_98] 11h +
call sub_4105E0  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] esi +
mov [esp+98h+var_80] edx +
call sub_40E140  +
mov edx [esp+98h+var_80] +
test eax eax +
mov edi eax +
jz loc_415138  +
mov eax [esp+98h+var_6C] +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
mov [ebx+24h] eax +
mov [esp+98h+var_80] edx +
call sub_411320  +
mov edx [esp+98h+var_80] +
lea ecx [edi+ebp] +
mov eax [esp+98h+var_84] +
add eax [esp+98h+var_70] +
mov [esp+98h+var_98] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] eax +
call memmove  +
jmp loc_4150D0  +
mov eax [esp+98h+var_84] +
mov [esp+98h+var_98] eax +
call free  +
movzx eax byte ptr [ebx+18h] +
mov [ebx+6Ch] edi +
and eax 0FFFFFFCFh +
or eax 10h +
mov [ebx+18h] al +
mov eax [esp+98h+var_6C] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+98h+var_90] offset aBfd_compress_s +
mov [esp+98h+var_94] 66h +
mov [esp+98h+var_98] offset a____Binutils_5 +
call sub_410560  +
nop   +
sub esp 2Ch +
lea eax [esp+0C4h+var_A8] +
mov [esp+0C4h+var_B8] eax +
lea eax [esp+0C4h+var_AC] +
mov [esp+0C4h+var_BC] eax +
mov eax [esp+0C4h+var_90] +
mov [esp+0C4h+var_C0] eax +
mov eax [esp+0C4h+var_94] +
mov [esp+0C4h+var_C4] eax +
call sub_414DD0  +
xor edx edx +
test eax eax +
jz loc_415220  +
mov ecx [esp+0C4h+var_AC] +
test ecx ecx +
js loc_415220  +
mov eax [esp+0C4h+var_A8] +
xor edx edx +
test eax eax +
setnz dl  +
mov eax edx +
add esp 2Ch +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
movzx ecx byte ptr [esi+28h] +
and ecx 18h +
cmp cl 8 +
jnz loc_415380  +
mov edi [ebx+24h] +
test edi edi +
jz loc_415380  +
mov edx [ebx+28h] +
test edx edx +
jnz loc_415380  +
mov eax [ebx+6Ch] +
test eax eax +
jz loc_415396  +
mov [esp+2Ch+var_2C] 5 +
call sub_4105E0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [ebx+18h] 30h +
jnz loc_415380  +
mov [esp+2Ch+var_2C] edi +
call sub_412BD0  +
mov [esp+2Ch+var_18] edi +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov ebp eax +
call sub_40FA90  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_41538E  +
mov [esp+2Ch+var_2C] edi +
mov ecx ebp +
mov edx ebx +
mov eax esi +
call loc_414F70  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_41538E  +
***
mov eax [esp+18h+arg_0] +
mov edx [esp+18h+arg_4] +
movzx ecx byte ptr [eax+28h] +
mov ebx [edx+24h] +
and ecx 18h +
cmp cl 10h +
jnz loc_41541E  +
test ebx ebx +
jz loc_41541E  +
mov ecx [esp+18h+arg_8] +
test ecx ecx +
jz loc_41541E  +
mov ecx [edx+6Ch] +
test ecx ecx +
jz loc_415431  +
mov [esp+18h+var_18] 5 +
call sub_4105E0  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
mov ecx [edx+2Ch] +
test ecx ecx +
jnz loc_41541E  +
test byte ptr [edx+18h] 30h +
jnz loc_41541E  +
mov ecx [esp+18h+arg_8] +
mov [esp+18h+var_18] ebx +
call loc_414F70  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_41542C  +
***
push ebx  +
mov ebx [esp+0Ch] +
mov eax [esp+8] +
mov ecx [ebx+0Ch] +
cmp [eax+0Ch] ecx +
jnz loc_4154C0  +
mov edx [eax+10h] +
mov ecx [ebx+10h] +
cmp edx ecx +
jz loc_4154A2  +
cmp edx 6 +
jz loc_4154C0  +
cmp ecx 6 +
jz loc_4154C0  +
cmp edx 5 +
ja loc_4154A4  +
cmp ecx 5 +
ja loc_4154C4  +
cmp edx 3 +
jz loc_415512  +
cmp edx 4 +
jz loc_415520  +
cmp edx ecx +
nop   +
jbe loc_4154D7  +
pop ebx  +
retn   +
***
cmp edx 19h +
jz loc_4154D2  +
cmp edx 3 +
lea esi [esi+0] +
jnz loc_4154E0  +
cmp ecx 1Fh +
jz loc_4154A2  +
cmp ecx 23h +
jz loc_4154A2  +
lea esi [esi+0] +
xor eax eax +
pop ebx  +
retn   +
***
cmp edx 2 +
jnz loc_4154A9  +
cmp ecx 19h +
jz loc_4154A2  +
xor eax eax +
jmp loc_4154C2  +
***
cmp ecx 2 +
jnz loc_4154C0  +
mov eax ebx +
pop ebx  +
retn   +
***
cmp edx 1Fh +
jnz loc_4154EE  +
cmp ecx 3 +
jz loc_4154D7  +
xor eax eax +
jmp loc_4154C2  +
***
cmp edx 23h +
jz loc_4154E5  +
cmp edx 5 +
jnz loc_415502  +
cmp ecx 33h +
jz loc_4154A2  +
xor eax eax +
nop   +
jmp loc_4154C2  +
***
cmp edx 33h +
jnz loc_4154C0  +
cmp ecx 5 +
jnz loc_4154C0  +
mov eax ebx +
nop   +
jmp loc_4154D9  +
***
cmp ecx 4 +
jnz loc_41549D  +
xor eax eax +
jmp loc_4154C2  +
***
cmp ecx 3 +
jnz loc_41549D  +
xor eax eax +
jmp loc_4154C2  +
***
mov edx [esp+8] +
xor eax eax +
jmp loc_415540  +
add eax 1 +
cmp eax 25h +
jz loc_415557  +
cmp ds:dword_484FA0[eax*8] edx +
jnz loc_415538  +
imul eax ds:dword_484FA4[eax*8] +
add eax offset dword_4852E0 +
retn   +
***
xor al al +
retn   +
***
sub esp 1Ch +
mov eax [esp+28h] +
movzx eax byte ptr [eax+4] +
cmp eax 24h +
jbe loc_41558B  +
mov [esp+8] eax +
mov eax [esp+20h] +
mov dword ptr [esp] offset aBInvalidAvrRel +
mov [esp+4] eax +
call off_47D664  +
xor eax eax +
imul eax eax +
mov edx [esp+24h] +
add eax offset dword_4852E0 +
mov [edx+0Ch] eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 4 +
mov ecx [edx+120h] +
mov ebx [ecx+3Ch] +
mov ebp [ecx+38h] +
mov edi [ebx+1Ch] +
mov ebx [edx+13Ch] +
mov [esp+4+var_4] edi +
test ebx ebx +
jz loc_4155E4  +
mov esi [edx+144h] +
xor ecx ecx +
cmp [esi] eax +
jnz loc_4155DD  +
jmp loc_4155F1  +
cmp [esi+ecx*4] eax +
lea edi ds:0[ecx*4] +
jz loc_4155F3  +
add ecx 1 +
cmp ecx ebx +
jnz loc_4155D1  +
add esp 4 +
mov eax 20000h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
mov eax [esp+4+var_4] +
mov edx [edx+140h] +
add eax ebp +
add eax [edx+edi] +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov dword ptr [eax+14h] 0 +
mov eax 1 +
retn   +
***
jmp loc_415640  +
mov eax [esp+4] +
mov edx [esp+8] +
cmp dword ptr [eax+14h] 1 +
mov edx [edx+120h] +
sbb eax eax +
not eax  +
and eax 4 +
add [edx+24h] eax +
mov eax 1 +
retn   +
***
mov ebx [eax+0A0h] +
mov ecx [ebx+68h] +
mov edx [ebx+78h] +
test ecx ecx +
jnz loc_415697  +
test edx edx +
jz loc_415690  +
cmp [ebx+78h] edx +
jz loc_415690  +
mov [ebx+78h] edx +
add esp 28h +
mov eax edx +
pop ebx  +
retn   +
test edx edx +
jnz loc_415684  +
lea edx [ebx+48h] +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_10] 0 +
mov [esp+28h+var_14] 0 +
mov [esp+28h+var_18] 0 +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_28] eax +
call sub_42B780  +
mov edx eax +
jmp loc_415684  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov [esp] ebx +
call sub_4101C0  +
mov edx 2 +
lea ecx [eax-1] +
cmp ecx 6Ah +
ja loc_415704  +
movzx edx ds:byte_484D3F[eax] +
mov eax [ebx+0A0h] +
mov ecx 53h +
mov [eax+26h] cx +
mov eax [ebx+0A0h] +
and dword ptr [eax+20h] 0FFFFFF80h +
mov eax [ebx+0A0h] +
or [eax+20h] edx +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov edx [eax+0A0h] +
movzx ecx word ptr [edx+26h] +
cmp cx 1057h +
jnz loc_415780  +
mov edx [edx+20h] +
mov ebx 2 +
and edx 7Fh +
lea ecx [edx-1] +
cmp ecx 6Ah +
ja loc_415763  +
movzx ebx ds:byte_484CBF[edx] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 44h +
mov [esp] eax +
call sub_410250  +
add esp 18h +
pop ebx  +
retn   +
***
cmp cx 53h +
mov ebx 2 +
jz loc_415749  +
jmp loc_415763  +
***
push ebx  +
sub esp 28h +
mov dword ptr [esp] 148h +
call sub_412D60  +
test eax eax +
mov ebx eax +
jz loc_415810  +
mov eax [esp+30h] +
mov dword ptr [esp+10h] 4 +
mov dword ptr [esp+0Ch] 48h +
mov dword ptr [esp+8] offset loc_4158E0 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_4464C0  +
test eax eax +
jz loc_415802  +
lea eax [ebx+0FCh] +
mov dword ptr [esp+8] 18h +
mov dword ptr [esp+4] offset sub_415880 +
mov [esp] eax +
call sub_412160  +
test eax eax +
jz loc_415814  +
mov dword ptr [ebx+24h] offset loc_415830 +
mov eax ebx +
add esp 28h +
pop ebx  +
retn   +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_4157FD  +
***
xor eax eax +
jmp loc_4157FD  +
***
mov eax [esp+30h] +
mov [esp] eax +
call sub_439CD0  +
xor eax eax +
jmp loc_4157FD  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esi+9Ch] +
mov eax [ebx+140h] +
test eax eax +
jz loc_415851  +
mov [esp] eax +
call free  +
mov eax [ebx+144h] +
test eax eax +
jz loc_415863  +
mov [esp] eax +
call free  +
add ebx 0FCh +
mov [esp] ebx +
call sub_412190  +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_439CD0  +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_4158C0  +
mov edx [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_4126E0  +
test eax eax +
jz loc_4158D4  +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_14] 18h +
mov [esp+18h+var_18] ebx +
call sub_412630  +
test eax eax +
jnz loc_415890  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
jmp loc_439C00  +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 6Ch +
mov edi [eax+0A0h] +
mov [esp+70h+var_40] ecx +
mov ecx eax +
mov [esp+70h+var_6C] edx +
mov [esp+70h+var_70] ecx +
mov [esp+70h+var_50] edx +
mov [esp+70h+var_48] eax +
call sub_42F700  +
mov [esp+70h+var_2C] eax +
mov eax [esi+8Ch] +
mov ecx [eax+30h] +
lea edx [eax+90h] +
mov [esp+70h+var_54] ecx +
xor ecx ecx +
cmp esi [esi+3Ch] +
mov esi [esi+24h] +
cmovnz ecx edx +
mov edx [ecx] +
mov [esp+70h+var_4C] esi +
test edx edx +
jz loc_415E35  +
mov eax [esp+70h+arg_0] +
xor ebx ebx +
mov esi [esp+70h+var_40] +
lea ebp [eax+esi] +
mov eax ebp +
mov ebp edi +
mov edi eax +
nop   +
mov eax [ecx+8] +
lea esi [ebx+ebx*2] +
lea esi [eax+esi*8] +
mov eax [esi+4] +
cmp eax [esp+70h+var_40] +
jbe loc_415E12  +
cmp eax edi +
jb loc_415E40  +
mov [esp+70h+var_3C] eax +
mov eax [esp+70h+var_50] +
mov edi ebp +
mov eax [eax+8Ch] +
mov eax [eax+68h] +
xor ebx ebx +
mov ecx [esp+70h+var_40] +
mov [esp+70h+var_4C] eax +
mov eax [esp+70h+var_50] +
mov ebp [eax+4Ch] +
mov eax [esp+70h+var_3C] +
sub eax ecx +
cmp eax [esp+70h+arg_0] +
jz loc_4159E0  +
sub eax [esp+70h+arg_0] +
mov ebx [esp+70h+var_54] +
mov [esp+70h+var_68] eax +
mov eax [esp+70h+arg_0] +
add eax ecx +
add eax ebx +
mov [esp+70h+var_6C] eax +
mov eax ebx +
mov ebx 1 +
add eax ecx +
mov [esp+70h+var_70] eax +
call memmove  +
test esi esi +
jz loc_41618B  +
mov eax [esi+8] +
cmp eax 2 +
jz loc_416055  +
cmp eax 3 +
jz loc_415E5E  +
cmp eax 1 +
jz loc_41604D  +
xor eax eax +
mov esi [esp+70h+arg_0] +
mov [esp+70h+var_6C] eax +
mov eax [esp+70h+var_3C] +
mov [esp+70h+var_68] esi +
sub eax esi +
add eax [esp+70h+var_54] +
mov [esp+70h+var_70] eax +
call memset  +
test ebx ebx +
mov [esp+70h+var_30] 1 +
jz loc_415F60  +
mov esi [esp+70h+var_4C] +
lea eax [ebp+ebp*2+0] +
lea esi [esi+eax*4] +
mov eax [esp+70h+var_50] +
mov eax [eax+8Ch] +
mov ebx [eax+68h] +
cmp esi ebx +
jbe loc_415A9B  +
mov [esp+70h+var_4C] edi +
mov ebp [esp+70h+var_40] +
mov edi [esp+70h+var_50] +
mov eax [edi+3Ch] +
mov ecx [ebx] +
mov edx [edi+38h] +
mov eax [eax+1Ch] +
cmp ebp ecx +
mov [esp+70h+var_54] eax +
jnb loc_415A90  +
cmp [esp+70h+var_3C] ecx +
jbe loc_415A90  +
mov eax ds:dword_4A8530 +
test eax eax +
jnz loc_415FCD  +
sub ecx [esp+70h+arg_0] +
mov [ebx] ecx +
add ebx 0Ch +
cmp esi ebx +
ja loc_415A61  +
mov edi [esp+70h+var_4C] +
mov eax [esp+70h+var_48] +
xor ecx ecx +
lea esi [edi+48h] +
mov [esp+70h+var_28] esi +
mov eax [eax+64h] +
test eax eax +
mov [esp+70h+var_4C] eax +
jz loc_415C35  +
mov ebp edi +
mov edi ecx +
nop   +
lea esi [esi+0] +
mov eax [esp+70h+var_4C] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_415C20  +
mov ecx [esp+70h+var_50] +
mov esi [esp+70h+var_40] +
mov ebx [esp+70h+arg_4] +
mov edx [ecx+3Ch] +
add esi [ecx+38h] +
mov ecx [edx+1Ch] +
mov [esp+70h+var_44] esi +
add [esp+70h+var_44] ecx +
mov ecx [esp+70h+var_44] +
mov edx ecx +
sub edx [esp+70h+arg_0] +
test ebx ebx +
cmovz edx ecx +
mov ecx [esp+70h+var_4C] +
mov [esp+70h+var_44] edx +
mov edx [ecx+8Ch] +
mov ebx [edx+68h] +
test ebx ebx +
jz loc_41600B  +
lea eax [eax+eax*2] +
lea ecx [ebx+eax*4] +
cmp ebx ecx +
jnb loc_415C20  +
mov esi ecx +
jmp loc_415B3B  +
add ebx 0Ch +
cmp esi ebx +
jbe loc_415C20  +
test edi edi +
mov edx [ebp+68h] +
jz loc_415E70  +
mov eax [ebx+4] +
shr eax 8 +
cmp eax edx +
jnb loc_415B30  +
lea eax [eax+eax*4] +
lea edx [edi+eax*4] +
mov eax [edx+10h] +
mov [esp+70h+var_54] edx +
mov [esp+70h+var_6C] eax +
mov eax [esp+70h+var_48] +
mov [esp+70h+var_70] eax +
call sub_42E1E0  +
mov edx [esp+70h+var_54] +
cmp eax [esp+70h+var_50] +
mov ecx [edx] +
jnz loc_415B30  +
mov edx [esp+70h+var_50] +
mov eax [edx+3Ch] +
mov edx [edx+38h] +
mov eax [eax+1Ch] +
mov [esp+70h+var_38] eax +
add ecx [esp+70h+var_38] +
lea eax [ecx+edx] +
mov [esp+70h+var_54] eax +
mov eax ds:dword_4A8530 +
test eax eax +
jnz loc_415ED0  +
movzx eax byte ptr [ebx+4] +
lea ecx [eax-1Eh] +
cmp ecx 2 +
jbe loc_415F0D  +
mov eax [ebx+8] +
mov ecx [esp+70h+var_54] +
add ecx eax +
mov [esp+70h+var_34] ecx +
mov ecx [esp+70h+var_54] +
cmp [esp+70h+var_44] ecx +
jb loc_415B30  +
mov ecx [esp+70h+var_34] +
cmp [esp+70h+var_44] ecx +
jnb loc_415B30  +
add edx [esp+70h+var_38] +
add edx [esp+70h+var_3C] +
cmp edx ecx +
jb loc_415B30  +
mov ecx ds:dword_4A8530 +
sub eax [esp+70h+arg_0] +
test ecx ecx +
mov [ebx+8] eax +
jz loc_415B30  +
mov [esp+70h+var_70] offset aRelocationSAdd +
add ebx 0Ch +
call puts  +
cmp esi ebx +
ja loc_415B3B  +
lea esi [esi+0] +
mov eax [esp+70h+var_4C] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+70h+var_4C] eax +
jnz loc_415AC0  +
mov edi ebp +
mov esi [edi+78h] +
test esi esi +
jz loc_415D15  +
mov eax [edi+68h] +
lea edx [eax+eax*4] +
lea ebp [esi+edx*4] +
cmp esi ebp +
jnb loc_415D18  +
movzx eax byte ptr [esp+70h+var_30] +
mov [esp+70h+var_4C] edi +
mov edi [esp+70h+var_2C] +
and eax 1 +
mov byte ptr [esp+70h+var_44] al +
mov eax [esp+70h+var_40] +
add eax [esp+70h+arg_0] +
mov [esp+70h+var_38] eax +
jmp loc_415C81  +
add esi 14h +
cmp ebp esi +
jbe loc_415D11  +
cmp [esi+10h] edi +
jnz loc_415C76  +
mov eax [esi+4] +
mov ebx [esi] +
mov edx [esp+70h+var_30] +
mov [esp+70h+var_54] eax +
add eax ebx +
test edx edx +
jz loc_415FFD  +
xor edx edx +
cmp [esp+70h+var_3C] eax +
setnbe dl  +
cmp [esp+70h+var_40] ebx +
jb loc_415F70  +
cmp [esp+70h+var_40] eax +
jnb loc_415F70  +
test edx edx +
jz loc_415F70  +
cmp eax [esp+70h+var_38] +
jb loc_416065  +
mov ecx [esp+70h+var_54] +
sub ecx [esp+70h+arg_0] +
xor edx edx +
mov [esi+4] ecx +
mov ecx [esp+70h+var_30] +
test ecx ecx +
jz loc_415FBF  +
xor eax eax +
cmp [esp+70h+var_3C] ebx +
setnbe al  +
test eax eax +
jz loc_415C76  +
test dl dl +
jz loc_415C76  +
mov eax [esp+70h+arg_0] +
sub [esi] eax +
add esi 14h +
cmp ebp esi +
ja loc_415C81  +
mov edi [esp+70h+var_4C] +
mov eax [edi+68h] +
mov esi [esp+70h+var_48] +
mov edx [esi+0A0h] +
mov ebp [edx+218h] +
mov edx [edi+60h] +
shr edx 4 +
sub edx eax +
lea eax [ebp+edx*4+0] +
cmp ebp eax +
mov esi eax +
jnb loc_415F60  +
movzx eax byte ptr [esp+70h+var_30] +
mov ecx [esp+70h+var_50] +
and eax 1 +
mov byte ptr [esp+70h+var_4C] al +
mov eax [esp+70h+var_40] +
add eax [esp+70h+arg_0] +
mov [esp+70h+var_48] eax +
jmp loc_415D6B  +
add ebp 4 +
cmp esi ebp +
jbe loc_415F60  +
mov ebx [ebp+0] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
ja loc_415D60  +
cmp [ebx+14h] ecx +
jnz loc_415D60  +
mov eax [ebx+2Ch] +
mov edi [ebx+18h] +
mov edx [esp+70h+var_30] +
mov [esp+70h+var_50] eax +
add eax edi +
test edx edx +
mov [esp+70h+var_54] eax +
jz loc_416202  +
cmp [esp+70h+var_3C] eax +
setnbe al  +
movzx eax al +
cmp [esp+70h+var_40] edi +
jb loc_415DB8  +
mov edx [esp+70h+var_54] +
cmp [esp+70h+var_40] edx +
jb loc_416081  +
mov eax [esp+70h+var_30] +
test eax eax +
jz loc_416267  +
xor eax eax +
cmp [esp+70h+var_3C] edi +
setnbe al  +
mov edx eax +
cmp [esp+70h+var_40] edi +
setb al  +
and dl al +
jnz loc_41624F  +
mov edx [esp+70h+var_30] +
test edx edx +
jz loc_4161F4  +
xor edx edx +
cmp [esp+70h+var_3C] edi +
setnbe dl  +
test edx edx +
jz loc_415D60  +
test al al +
jz loc_415D60  +
mov eax [esp+70h+arg_0] +
sub [ebx+18h] eax +
jmp loc_415D60  +
cmp eax edi +
jnb loc_41597E  +
add ebx 1 +
cmp [ecx] ebx +
ja loc_415960  +
mov eax [esp+70h+var_50] +
mov edi ebp +
mov esi [esp+70h+var_4C] +
mov eax [eax+8Ch] +
mov [esp+70h+var_3C] esi +
xor esi esi +
jmp loc_41598E  +
mov [esp+70h+var_6C] 7A2h +
mov [esp+70h+var_70] offset a____Binutil_12 +
mov [esp+70h+var_44] ecx +
call sub_410530  +
mov ecx [esp+70h+var_44] +
jmp loc_415E1A  +
mov eax [esi+10h] +
mov ecx [esp+70h+arg_0] +
add [esi+14h] ecx +
jmp loc_415A08  +
test edx edx +
jz loc_415B30  +
mov edi [ebp+78h] +
test edi edi +
jnz loc_415B46  +
mov eax [esp+70h+var_28] +
mov [esp+70h+var_58] 0 +
mov [esp+70h+var_5C] 0 +
mov [esp+70h+var_60] 0 +
mov [esp+70h+var_6C] eax +
mov eax [esp+70h+var_48] +
mov [esp+70h+var_64] 0 +
mov [esp+70h+var_68] edx +
mov [esp+70h+var_70] eax +
call sub_42B780  +
test eax eax +
mov edi eax +
jnz loc_4161A6  +
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+70h+var_44] +
mov ecx [esp+70h+var_54] +
mov [esp+70h+var_34] edx +
mov [esp+70h+var_64] eax +
mov eax [ebx+8] +
mov [esp+70h+var_6C] ecx +
mov [esp+70h+var_70] offset aCheckingIfTheR +
add eax ecx +
mov [esp+70h+var_68] eax +
call printf  +
movzx eax byte ptr [ebx+4] +
mov edx [esp+70h+var_34] +
lea ecx [eax-1Eh] +
cmp ecx 2 +
ja loc_415BB2  +
mov ecx [esp+70h+var_4C] +
mov edx [ecx+8Ch] +
mov edx [edx+30h] +
test edx edx +
mov [esp+70h+var_14] edx +
jz loc_416215  +
add edx [ebx] +
cmp eax 1Fh +
mov [esp+70h+var_34] edx +
jz loc_41616F  +
cmp eax 20h +
jz loc_416153  +
cmp eax 1Eh +
jz loc_4160AC  +
mov [esp+70h+var_6C] 6F0h +
mov [esp+70h+var_70] offset a____Binutil_12 +
call sub_410530  +
jmp loc_415B30  +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+70h+var_30] +
test edx edx +
jz loc_41603F  +
xor ecx ecx +
cmp [esp+70h+var_3C] ebx +
setnbe cl  +
cmp [esp+70h+var_40] ebx +
setb dl  +
and cl dl +
jz loc_415CDC  +
cmp [esp+70h+var_3C] eax +
setbe dl  +
and dl byte ptr [esp+70h+var_44] +
jz loc_41605C  +
mov ecx [esp+70h+var_54] +
add ecx [esp+70h+arg_0] +
mov [esi+4] ecx +
mov ecx [esp+70h+var_30] +
test ecx ecx +
jnz loc_415CE8  +
xor eax eax +
cmp [esp+70h+var_3C] ebx +
setnb al  +
jmp loc_415CF1  +
mov eax ecx +
sub eax [esp+70h+arg_0] +
mov [esp+70h+var_68] ecx +
mov [esp+70h+var_70] offset aRelocationAtAd +
mov [esp+70h+var_64] eax +
mov eax [esp+70h+var_54] +
add eax edx +
add eax ecx +
mov [esp+70h+var_6C] eax +
call printf  +
mov ecx [ebx] +
jmp loc_415A87  +
xor edx edx +
cmp [esp+70h+var_3C] eax +
setnb dl  +
jmp loc_415CA6  +
mov eax [esp+70h+var_48] +
mov esi ecx +
mov [esp+70h+var_60] 1 +
mov [esp+70h+var_64] 0 +
mov [esp+70h+var_68] 0 +
mov [esp+70h+var_6C] ecx +
mov [esp+70h+var_70] eax +
call sub_43F980  +
mov ebx eax +
mov eax [esi+4Ch] +
jmp loc_415B1A  +
xor ecx ecx +
cmp [esp+70h+var_3C] ebx +
setnb cl  +
jmp loc_415F85  +
mov eax [esi+0Ch] +
jmp loc_415A08  +
xor eax eax +
jmp loc_415E61  +
mov edx ecx +
nop   +
jmp loc_415CDC  +
mov [esp+70h+var_6C] 864h +
mov [esp+70h+var_70] offset a____Binutil_12 +
call sub_410530  +
mov ecx [esi+4] +
jmp loc_415CD0  +
test eax eax +
jz loc_415DB8  +
mov eax [esp+70h+var_48] +
cmp [esp+70h+var_54] eax +
jb loc_416277  +
mov eax [esp+70h+var_50] +
sub eax [esp+70h+arg_0] +
mov [ebx+2Ch] eax +
xor eax eax +
jmp loc_415DDE  +
movzx eax byte ptr [edx] +
add eax 0FFFFFF80h +
movzx eax al +
add eax 0FFFFFF80h +
mov [esp+70h+var_38] eax +
mov eax [ebx+8] +
mov ecx [esp+70h+var_54] +
mov [esp+70h+var_24] eax +
add ecx eax +
mov edx ecx +
mov eax ecx +
sub edx [esp+70h+var_38] +
cmp edx ecx +
cmovnb ecx edx +
cmp [esp+70h+var_44] ecx +
jnb loc_415B30  +
cmp edx eax +
cmova edx eax +
cmp [esp+70h+var_44] edx +
jb loc_415B30  +
mov edx [esp+70h+var_38] +
mov ecx [esp+70h+arg_0] +
add ecx edx +
sub edx [esp+70h+arg_0] +
cmp [esp+70h+var_38] 0 +
cmovns ecx edx +
cmp [esp+70h+var_44] eax +
jnb loc_41611F  +
mov eax [esp+70h+var_24] +
sub eax [esp+70h+arg_0] +
mov [ebx+8] eax +
movzx eax byte ptr [ebx+4] +
cmp eax 1Fh +
jz loc_4161D5  +
cmp eax 20h +
jz loc_4161B9  +
cmp eax 1Eh +
jz loc_4161AE  +
mov [esp+70h+var_6C] 723h +
mov [esp+70h+var_70] offset a____Binutil_12 +
call sub_410530  +
jmp loc_415B30  +
mov eax [esp+70h+var_48] +
mov ecx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+2Ch] +
mov [esp+70h+var_70] ecx +
call eax  +
mov [esp+70h+var_38] eax +
jmp loc_4160BC  +
mov eax [esp+70h+var_48] +
mov ecx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+38h] +
mov [esp+70h+var_70] ecx +
call eax  +
mov [esp+70h+var_38] eax +
jmp loc_4160BC  +
mov eax [esp+70h+var_50] +
mov esi [esp+70h+arg_0] +
mov [esp+70h+var_30] 0 +
sub [eax+24h] esi +
jmp loc_415A39  +
mov edx [ebp+68h] +
jmp loc_415B46  +
mov eax [esp+70h+var_34] +
mov [eax] cl +
jmp loc_415B30  +
mov eax [esp+70h+var_48] +
mov edx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+70h+var_6C] edx +
mov [esp+70h+var_70] ecx +
call eax  +
jmp loc_415B30  +
mov eax [esp+70h+var_48] +
movzx ecx cx +
mov edx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+3Ch] +
mov [esp+70h+var_6C] edx +
mov [esp+70h+var_70] ecx +
call eax  +
jmp loc_415B30  +
xor edx edx +
cmp [esp+70h+var_3C] edi +
setnb dl  +
jmp loc_415DF3  +
mov eax [esp+70h+var_54] +
cmp [esp+70h+var_3C] eax +
setnb al  +
movzx eax al +
jmp loc_415DA4  +
lea eax [esp+70h+var_14] +
mov [esp+70h+var_68] eax +
mov eax [esp+70h+var_48] +
mov [esp+70h+var_6C] ecx +
mov [esp+70h+var_70] eax +
call sub_40FBE0  +
test eax eax +
jz loc_415B30  +
mov eax [esp+70h+var_4C] +
mov edx [esp+70h+var_14] +
mov eax [eax+8Ch] +
mov [eax+30h] edx +
movzx eax byte ptr [ebx+4] +
jmp loc_415F26  +
mov eax [esp+70h+var_54] +
cmp [esp+70h+var_3C] eax +
setbe al  +
and al byte ptr [esp+70h+var_4C] +
jnz loc_41629B  +
mov eax edx +
jmp loc_415DDE  +
xor eax eax +
cmp [esp+70h+var_3C] edi +
setnb al  +
mov edx eax +
jmp loc_415DCF  +
mov [esp+70h+var_6C] 886h +
mov [esp+70h+var_70] offset a____Binutil_12 +
mov [esp+70h+var_54] ecx +
call sub_410530  +
mov eax [ebx+2Ch] +
mov ecx [esp+70h+var_54] +
jmp loc_41609B  +
mov edx [esp+70h+var_50] +
add edx [esp+70h+arg_0] +
mov [ebx+2Ch] edx +
jmp loc_415DDE  +
***
push ebp  +
push edi  +
push esi  +
mov esi offset off_485300 +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov edi ds:_stricmp +
mov ebp [esp+34h] +
jmp loc_4162DB  +
add ebx 1 +
add esi 34h +
cmp ebx 25h +
jz loc_416300  +
mov eax [esi] +
test eax eax +
jz loc_4162D0  +
mov [esp+4] ebp +
mov [esp] eax +
call edi  +
test eax eax +
jnz loc_4162D0  +
imul eax ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
add eax offset dword_4852E0 +
pop ebp  +
retn   +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov esi [esp+20h] +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_416340  +
mov [esp+24h] ebx +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_42E380  +
***
mov dword ptr [esp+4] 0A0h +
mov [esp] esi +
call sub_40E220  +
test eax eax +
jz loc_416360  +
mov [ebx+8Ch] eax +
jmp loc_416327  +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [ebx+4] +
mov edx [ecx+4] +
cmp eax edx +
jz loc_416387  +
sub eax edx +
pop ebx  +
retn   +
mov eax [ebx] +
mov edx [ecx] +
cmp eax edx +
jz loc_416397  +
mov eax [eax+1Ch] +
sub eax [edx+1Ch] +
pop ebx  +
retn   +
mov eax [ebx+8] +
sub eax [ecx+8] +
pop ebx  +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [ebx] +
mov edx [ecx] +
cmp eax edx +
jz loc_4163B5  +
sub eax edx +
pop ebx  +
retn   +
mov eax [ebx+4] +
mov edx [ecx+4] +
cmp eax edx +
jnz loc_4163B1  +
mov eax [ebx+8] +
sub eax [ecx+8] +
pop ebx  +
retn   +
***
mov edx [eax+4] +
test edx edx +
jz loc_4163E0  +
pop ebx  +
retn   +
mov edx [esp+arg_4] +
test byte ptr [edx+14h] 11h +
jz loc_4163DC  +
mov ecx [esp+arg_4] +
mov edx [eax] +
mov ecx [ecx+1Ch] +
cmp edx ecx +
jb loc_4163DC  +
mov ebx [esp+arg_4] +
add ecx [ebx+24h] +
cmp edx ecx +
jnb loc_4163DC  +
mov [eax+4] ebx +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov edx [esi+14h] +
test edx edx +
jz loc_416436  +
mov eax [esp+1Ch+arg_4] +
mov ebx [eax+1Ch] +
cmp dword ptr [ebx+2Ch] 4 +
jz loc_416440  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_0] +
mov ecx [esp+1Ch+arg_0] +
mov esi [eax+10h] +
mov eax [ebx+120h] +
mov edx [eax+24h] +
mov edi [eax+6Ch] +
mov ebp [eax+94h] +
mov eax ds:dword_4A852C +
mov [ecx+0Ch] edx +
add edi edx +
mov [esp+1Ch+var_10] edi +
test eax eax +
jz loc_416483  +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] offset aBuildingOneStu +
call printf  +
test esi 1 +
jnz loc_416434  +
mov eax [ebp+4] +
mov edi esi +
shr edi 1 +
mov ecx edi +
and ecx 10000h +
mov edx [eax+3Ch] +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] eax +
lea eax ds:0[edi*8] +
movzx edi di +
and eax 1F00000h +
or eax ecx +
shr eax 10h +
or eax 940Ch +
mov [esp+1Ch+var_1C] eax +
call edx  +
mov eax [ebp+4] +
mov ecx [esp+1Ch+var_10] +
mov eax [eax+3Ch] +
lea edx [ecx+2] +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edi +
call eax  +
mov eax [ebx+120h] +
mov edx [ebx+138h] +
add dword ptr [eax+24h] 4 +
mov eax 1 +
lea ecx [edx+1] +
cmp ecx [ebx+13Ch] +
ja loc_416436  +
mov edi [esp+1Ch+arg_0] +
add edx 40000000h +
mov [ebx+138h] ecx +
mov ecx [ebx+140h] +
mov edi [edi+0Ch] +
mov [ecx+edx*4] edi +
mov ecx [ebx+144h] +
mov [ecx+edx*4] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov edi [esp+6Ch+arg_4] +
mov ebp [esp+6Ch+arg_14] +
mov eax [edi+1Ch] +
cmp dword ptr [eax+2Ch] 4 +
mov [esp+6Ch+var_2C] eax +
jz loc_41655C  +
***
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+6Ch+arg_8] +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_40] eax +
mov eax [eax+218h] +
mov [esp+6Ch+var_30] eax +
mov eax [esp+6Ch+arg_C] +
mov eax [eax+4Ch] +
lea eax [eax+eax*2] +
lea eax [ebp+eax*4+0] +
cmp ebp eax +
mov [esp+6Ch+var_34] eax +
jnb loc_41676D  +
***
mov edx [ebp+4] +
mov [esp+arg_58] 0 +
movzx esi dl +
mov eax edx +
imul esi esi +
shr eax 8 +
lea ecx dword_4852E0[esi] +
mov [esp+arg_30] ecx +
mov ecx [esp+arg_28] +
mov edx [ecx+68h] +
cmp eax edx +
jb loc_417000  +
mov ecx [esp+arg_38] +
test ecx ecx +
jz loc_416552  +
sub eax edx +
mov ebx [ecx+eax*4] +
mov eax [edi+28h] +
test eax eax +
jz loc_4165F3  +
mov eax [esp+arg_88] +
test byte ptr [eax+15h] 20h +
jz loc_4165F3  +
jmp loc_417096  +
***
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
lea edx [eax-6] +
cmp dl 1 +
jbe loc_4165F0  +
lea edx [eax-3] +
cmp dl 1 +
jbe loc_417076  +
cmp al 2 +
jz loc_416685  +
movzx edx byte ptr [edi+2] +
and edx 6 +
cmp dl 2 +
jz loc_4170B4  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jz loc_416685  +
cmp dl 6 +
mov eax 1 +
jz loc_416642  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
test al al +
setnz al  +
movzx eax al +
mov edx [edi+18h] +
mov ecx [edx+18h] +
mov edx [ebx+4] +
mov [esp+arg_24] ecx +
mov ecx [ebp+0] +
mov [esp+arg_10] eax +
mov eax [esp+arg_88] +
mov [esp+arg_0] edx +
mov [esp+0] edi +
mov [esp+arg_C] ecx +
mov [esp+arg_8] eax +
mov eax [esp+arg_84] +
mov [esp+arg_4] eax +
mov eax [esp+arg_24] +
call eax  +
test eax eax +
jz loc_416552  +
mov eax [esp+arg_58] +
xor edx edx +
mov ecx [ebx+4] +
mov [esp+arg_2C] ecx +
test eax eax +
jz loc_4166A6  +
cmp eax offset off_47D510 +
jz loc_4166A6  +
cmp dword ptr [eax+3Ch] offset off_47D510 +
jz loc_416700  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jz sub_416760  +
mov eax [ebp+0] +
mov [esp+arg_24] eax +
mov eax [esp+arg_3C] +
mov eax [eax+124h] +
mov [esp+arg_40] eax +
mov eax [esp+arg_88] +
mov ecx [eax+3Ch] +
mov eax [eax+38h] +
add eax [ecx+1Ch] +
mov ecx [esp+arg_24] +
add ecx eax +
cmp ds:dword_4852E0[esi] 23h +
ja sub_416881  +
mov esi ds:dword_4852E0[esi] +
jmp ds:off_484788[esi*4]  +
***
add ebp 0Ch +
add edx [ebp+8] +
mov eax 2 +
mov esi [esp+arg_24] +
movzx ecx dx +
cmp ecx 1Fh +
mov [esp+arg_40] edx +
jbe loc_417177  +
***
mov edx offset aInternalErrorO +
mov eax [edi+18h] +
mov edx offset aInternalErrorD +
mov eax [edi+18h] +
mov edx offset aInternalErrorU +
mov eax [ebp+8] +
mov ecx [ebp+8] +
mov ecx [ebp+8] +
mov eax [esp+arg_24] +
mov eax [esp+arg_24] +
mov ebx [ebp+8] +
mov ebx [ebp+8] +
mov esi [ebp+8] +
mov esi [ebp+8] +
add esi edx +
movzx eax si +
cmp eax 3Fh +
jg loc_416FF0  +
test esi esi +
js loc_416FF0  +
mov eax [esp+arg_84] +
add ebp 0Ch +
mov ebx [esp+arg_24] +
add ebx [esp+arg_8C] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+0] ebx +
call eax  +
mov edx esi +
and edx 20h +
shl edx 8 +
mov ecx eax +
mov eax [esp+arg_84] +
and ecx 0D3F8h +
mov eax [eax+4] +
mov eax [eax+3Ch] +
mov [esp+arg_0] ebx +
mov [esp+arg_24] eax +
mov eax esi +
and esi 7 +
and eax 18h +
shl eax 7 +
or eax edx +
or eax esi +
or ecx eax +
mov eax [esp+arg_24] +
mov [esp+0] ecx +
call eax  +
cmp [esp+arg_34] ebp +
ja loc_416594  +
jmp loc_41676D  +
***
mov esi [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
mov esi [ebp+8] +
mov eax [esp+arg_24] +
add edx [ebp+8] +
add edx [ebp+8] +
mov ebx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
mov esi [ebp+8] +
mov eax [esp+arg_3C] +
mov esi [esp-7Ch+arg_A0] +
mov esi [esp+arg_24] +
sub edx esi +
add edx [ebp+8] +
lea ecx [edx-2] +
sub ecx eax +
mov eax 2 +
test cl 1 +
jnz loc_416796  +
lea edx [ecx+80h] +
mov al 1 +
cmp edx 0FFh +
ja loc_416796  +
mov eax [esp+arg_84] +
mov ebx [esp+arg_8C] +
mov [esp+arg_2C] ecx +
mov eax [eax+4] +
add ebx esi +
mov eax [eax+34h] +
mov [esp+0] ebx +
call eax  +
mov esi [esp+arg_84] +
mov ecx [esp+arg_2C] +
mov edx [esi+4] +
shl ecx 2 +
and eax 0FC07h +
and ecx 3F8h +
or eax ecx +
mov edx [edx+3Ch] +
mov [esp+arg_0] ebx +
mov [esp+0] eax +
call edx  +
jmp sub_416760  +
***
jz loc_416BEC  +
mov eax esi +
neg eax  +
movzx eax ax +
add eax 0FFFFFF80h +
jle loc_416BEC  +
***
mov esi [esp+28h] +
mov eax 1 +
jmp loc_416796  +
***
mov ecx [esp-7Ch+arg_110] +
lea edx [eax+eax*4] +
lea ebx [ecx+edx*4] +
mov ecx [esp-7Ch+arg_114] +
mov eax [ecx+eax*4] +
mov [esp-7Ch+arg_84] ebp +
mov [esp-7Ch+arg_7C] ebx +
mov [esp-7Ch+arg_D4] eax +
lea eax [esp-7Ch+arg_D4] +
mov [esp-7Ch+arg_80] eax +
mov eax [esp-7Ch+arg_F8] +
mov [esp-7Ch+arg_78] eax +
call sub_438C70  +
mov ecx [esp-7Ch+arg_A4] +
mov ecx [ecx+64h] +
mov [esp-7Ch+arg_A0] eax +
mov eax [ebx+8] +
mov [esp-7Ch+arg_7C] ecx +
mov [esp-7Ch+arg_80] eax +
mov eax [esp-7Ch+arg_100] +
mov [esp-7Ch+arg_78] eax +
call sub_42B580  +
mov edx [esp-7Ch+arg_A0] +
test eax eax +
mov [esp-7Ch+arg_A8] eax +
mov eax [esp-7Ch+arg_D4] +
jz loc_4170D5  +
xor ebx ebx +
jmp loc_416692  +
mov eax [ebx+14h] +
test eax eax +
mov [esp+arg_58] eax +
jz loc_4170E2  +
mov edx [eax+3Ch] +
test edx edx +
jz loc_4170EB  +
mov edx [edx+1Ch] +
add edx [ebx+18h] +
add edx [eax+38h] +
jmp loc_41668B  +
mov eax [esp+arg_84] +
mov [esp+arg_4] ebx +
mov [esp+0] edi +
mov [esp+arg_0] eax +
call sub_424510  +
mov ebx eax +
jmp loc_4165F3  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jz loc_416685  +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 2 +
jnz loc_41663A  +
jmp loc_416685  +
mov ecx [eax] +
xor ebx ebx +
mov [esp-7Ch+arg_A8] ecx +
jmp loc_416696  +
xor eax eax +
xor edx edx +
jmp loc_41668B  +
xor edx edx +
jmp loc_41668B  +
mov eax [esp+arg_88] +
test byte ptr [eax+15h] 20h +
jz loc_416752  +
mov eax [eax+3Ch] +
mov [esp+0] eax +
call sub_42E970  +
mov ecx [eax+18h] +
mov edx [eax+28h] +
cmp ecx edx +
jbe loc_416752  +
sub ecx edx +
mov [eax+18h] ecx +
mov eax [esp+arg_88] +
mov [esp+0] eax +
call sub_42E970  +
mov edx [eax+28h] +
sub [eax+18h] edx +
mov eax [esp+arg_34] +
mov [esp+0] ebp +
sub eax ebp +
sar eax 2 +
imul eax eax +
lea eax [eax+eax*2-3] +
shl eax 2 +
mov [esp+arg_4] eax +
lea eax [ebp+0Ch] +
sub ebp 0Ch +
mov [esp+arg_0] eax +
call memmove  +
mov eax [esp+arg_88] +
sub [esp+arg_34] 0Ch +
sub dword ptr [eax+4Ch] 1 +
jmp sub_416760  +
***
mov edx 1 +
shl edx cl +
test ds:dword_4A8528 edx +
jnz loc_416796  +
mov eax [esp+arg_84] +
mov ebx [esp+arg_8C] +
mov eax [eax+4] +
add ebx esi +
mov eax [eax+34h] +
mov [esp+0] ebx +
call eax  +
mov esi [esp+arg_84] +
mov ecx [esp+arg_40] +
mov edx [esi+4] +
shl ecx 3 +
and eax 0FF07h +
movzx ecx cl +
or eax ecx +
mov edx [edx+3Ch] +
mov [esp+arg_0] ebx +
mov [esp+0] eax +
call edx  +
jmp sub_416760  +
***
mov edx [esp+40h] +
mov eax esi +
mov [esp+4Ch] ecx +
call sub_4155A0  +
mov ecx [esp+4Ch] +
mov esi eax +
mov eax ds:dword_4A852C +
test eax eax +
jz loc_41720B  +
mov eax [esp+48h] +
mov [esp+0Ch] ecx +
mov [esp+4] esi +
mov dword ptr [esp] offset aLdUsingJumpStu +
mov [esp+8] eax +
call printf  +
mov eax esi +
sub eax [esp+44h] +
cmp eax 1FFFFh +
ja loc_416A0A  +
jmp loc_416A4E  +
***
mov edx [esp+40h] +
mov eax esi +
mov [esp+4Ch] ecx +
call sub_4155A0  +
mov ecx ds:dword_4A852C +
test ecx ecx +
mov ecx [esp+4Ch] +
mov esi eax +
jz loc_41725C  +
mov eax [esp+48h] +
mov [esp+0Ch] ecx +
mov [esp+4] esi +
mov dword ptr [esp] offset aLdUsingJumpStu +
mov [esp+8] eax +
call printf  +
mov eax esi +
sub eax [esp+44h] +
cmp eax 1FFFFh +
ja loc_416A0A  +
jmp loc_4169FE  +
***
mov eax [esp-7Ch+arg_100] +
and esi 0FFFh +
mov ebx [esp-7Ch+arg_A0] +
add ebx [esp-7Ch+arg_108] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp-7Ch+arg_78] ebx +
call eax  +
mov ecx [esp-7Ch+arg_100] +
mov edx [ecx+4] +
and eax 0F000h +
or eax esi +
mov edx [edx+3Ch] +
mov [esp-7Ch+arg_7C] ebx +
mov [esp-7Ch+arg_78] eax +
call edx  +
jmp sub_416760  +
***
mov eax [esp+48h] +
mov [esp+0Ch] ecx +
mov [esp+4] esi +
mov dword ptr [esp] offset aLdUsingJumpStu +
mov [esp+8] eax +
call printf  +
jmp loc_416E97  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+60h] +
mov edx [esp+70h] +
mov esi [esp+6Ch] +
mov edi [esp+74h] +
mov [esp+20h] eax +
mov eax [esp+64h] +
test edx edx +
mov [esp+24h] eax +
mov eax [esp+68h] +
mov ebx [eax+10h] +
mov ebp [ebx+94h] +
jnz loc_417355  +
mov ecx [ebx+8Ch] +
mov ecx [ecx+30h] +
test ecx ecx +
jz loc_417355  +
mov eax [ebp+0A0h] +
mov [esp+28h] eax +
mov eax [ebx+24h] +
mov [esp+4] ecx +
mov [esp] esi +
mov [esp+8] eax +
call memcpy  +
test byte ptr [ebx+14h] 4 +
jz loc_41734B  +
mov eax [ebx+4Ch] +
test eax eax +
jnz loc_417381  +
mov eax esi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+68h] eax +
mov eax [esp+24h] +
mov [esp+74h] edi +
mov [esp+6Ch] esi +
mov [esp+70h] edx +
mov [esp+64h] eax +
mov eax [esp+20h] +
mov [esp+60h] eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_423640  +
***
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov [esp] ebp +
call sub_43F980  +
test eax eax +
mov [esp+30h] eax +
jz loc_4175A8  +
mov eax [esp+28h] +
mov edi [eax+68h] +
test edi edi +
jz loc_417430  +
mov eax [eax+78h] +
test eax eax +
mov [esp+2Ch] eax +
jz loc_417559  +
shl edi 2 +
mov [esp] edi +
call sub_412BD0  +
test edi edi +
mov [esp+34h] eax +
jz loc_417448  +
test eax eax +
jnz loc_417448  +
mov eax [esp+2Ch] +
test eax eax +
jz loc_4173FB  +
mov edx [esp+28h] +
cmp [edx+78h] eax +
jz loc_4173FB  +
mov [esp] eax +
call free  +
mov esi [esp+30h] +
test esi esi +
jz loc_4175A8  +
mov edx [ebx+8Ch] +
xor eax eax +
cmp [edx+68h] esi +
jz loc_41734D  +
mov [esp] esi +
mov [esp+20h] eax +
call free  +
mov eax [esp+20h] +
jmp loc_41734D  +
***
mov dword ptr [esp] 0 +
call sub_412BD0  +
mov dword ptr [esp+2Ch] 0 +
mov [esp+34h] eax +
mov eax [esp+28h] +
mov edx [esp+2Ch] +
mov eax [eax+68h] +
mov edi edx +
lea eax [eax+eax*4] +
lea eax [edx+eax*4] +
mov ecx eax +
mov eax edx +
mov edx [esp+34h] +
cmp ecx eax +
jbe loc_4174B5  +
mov [esp+38h] ebx +
mov ebx edx +
mov [esp+3Ch] esi +
mov esi ecx +
mov ecx [edi+10h] +
mov eax offset off_47D468 +
test ecx ecx +
jz loc_4174A0  +
cmp ecx 0FFFFFFF1h +
mov eax offset off_47D510 +
jz loc_4174A0  +
cmp ecx 0FFFFFFF2h +
mov eax offset off_47D3C0 +
jz loc_4174A0  +
mov [esp+4] ecx +
mov [esp] ebp +
call sub_42E1E0  +
nop   +
add edi 14h +
add ebx 4 +
mov [ebx-4] eax +
cmp esi edi +
ja loc_417473  +
mov ebx [esp+38h] +
mov esi [esp+3Ch] +
mov eax [esp+34h] +
mov [esp+10h] esi +
mov [esp+0Ch] ebx +
mov [esp+8] ebp +
mov [esp+1Ch] eax +
mov eax [esp+2Ch] +
mov [esp+18h] eax +
mov eax [esp+30h] +
mov [esp+14h] eax +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_416530  +
test eax eax +
jz loc_417540  +
mov eax [esp+34h] +
test eax eax +
jz loc_417501  +
mov [esp] eax +
call free  +
mov eax [esp+2Ch] +
test eax eax +
jz loc_41751A  +
mov edx [esp+28h] +
cmp [edx+78h] eax +
jz loc_41751A  +
mov [esp] eax +
call free  +
mov eax [ebx+8Ch] +
mov edx [esp+30h] +
cmp [eax+68h] edx +
jz loc_41734B  +
mov [esp] edx +
call free  +
jmp loc_41734B  +
***
mov eax [esp+34h] +
test eax eax +
jz loc_4173E2  +
mov [esp] eax +
call free  +
jmp loc_4173E2  +
***
mov eax [esp+28h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
add eax 48h +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] edi +
mov [esp+4] eax +
mov [esp] ebp +
call sub_42B780  +
test eax eax +
mov [esp+2Ch] eax +
jz loc_4173FB  +
mov eax [esp+28h] +
mov edi [eax+68h] +
jmp loc_4173CB  +
***
xor eax eax +
jmp loc_41734D  +
***
mov dword ptr [edx] offset off_47D510 +
sub edx 4 +
cmp edx ecx +
jnz loc_4176B0  +
mov esi [esp+20h] +
mov edx [esi+64h] +
test edx edx +
jz loc_4176DF  +
test byte ptr [edx+14h] 10h +
jz loc_4176D8  +
mov ecx [edx+8] +
mov dword ptr [eax+ecx*4] 0 +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_4176C8  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
shr al 6 +
and eax 1 +
mov [esp+10h] eax +
mov [esp] esi +
call sub_43F980  +
test eax eax +
mov ebx eax +
mov [esp+4Ch] eax +
jz loc_417BD7  +
mov eax [edi+4Ch] +
lea eax [eax+eax*2] +
lea eax [ebx+eax*4] +
cmp ebx eax +
mov [esp+20h] eax +
jnb loc_417B2B  +
mov [esp+44h] edi +
mov edi esi +
jmp loc_417A4B  +
mov esi [esp+38h] +
lea eax [eax+eax*4] +
xor ecx ecx +
lea edx [esi+eax*4] +
movzx eax byte ptr [edx+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_417979  +
mov ecx [edx] +
mov eax [edx+10h] +
mov edx [edi+0A0h] +
cmp eax [edx+214h] +
jnb loc_417AE0  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov edx [eax+2Ch] +
mov eax [edx+3Ch] +
mov esi [eax+1Ch] +
add esi [edx+38h] +
add esi [ebx+8] +
add esi ecx +
mov ebp [esp+24h] +
mov eax esi +
sub eax [ebp+124h] +
cmp eax 1FFFFh +
ja loc_4179C0  +
mov eax [esp+78h] +
test eax eax +
jz loc_417A3E  +
mov dword ptr [esp] 13h +
mov [esp+30h] ecx +
mov [esp+2Ch] edx +
call sub_412BD0  +
mov edx [esp+2Ch] +
mov ecx [esp+30h] +
add ecx [ebx+8] +
mov ebp eax +
mov eax [edx+4] +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] offset a08x08x +
mov [esp] ebp +
mov [esp+8] eax +
call sprintf  +
test ebp ebp +
jz loc_417C14  +
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov [esp] eax +
call sub_4123C0  +
test eax eax +
jz loc_417B50  +
mov dword ptr [eax+14h] 1 +
mov [eax+10h] esi +
mov [esp] ebp +
call free  +
add ebx 0Ch +
cmp [esp+20h] ebx +
jbe loc_417B27  +
mov eax [ebx+4] +
movzx edx al +
lea ecx [edx-18h] +
cmp ecx 1 +
jbe loc_417A5E  +
cmp edx 5 +
jnz loc_417A3E  +
mov esi [esp+28h] +
shr eax 8 +
mov edx [esi+68h] +
cmp eax edx +
jb loc_417960  +
mov ecx [edi+0A0h] +
sub eax edx +
mov edx [ecx+218h] +
mov eax [edx+eax*4] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_417A9F  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_417A90  +
lea ecx [edx-3] +
cmp cl 1 +
jbe loc_417AF0  +
cmp dl 2 +
jz loc_417B11  +
cmp dl 1 +
jnz loc_417C40  +
mov esi [esp+74h] +
movzx edx byte ptr [esi+2] +
and edx 6 +
cmp dl 2 +
jnz loc_417A3E  +
test byte ptr [eax+31h] 3 +
jnz loc_417A3E  +
xor esi esi +
xor ecx ecx +
xor edx edx +
jmp loc_4179A5  +
***
xor esi esi +
xor edx edx +
jmp loc_4179A5  +
***
mov edx [eax+14h] +
mov ecx [eax+18h] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_417BA0  +
mov esi [edx+38h] +
add esi ecx +
add esi [eax+1Ch] +
add esi [ebx+8] +
jmp loc_4179A5  +
***
mov eax [esp+74h] +
test byte ptr [eax] 1 +
jnz loc_417AD3  +
add ebx 0Ch +
cmp [esp+20h] ebx +
ja loc_417A4B  +
mov edi [esp+44h] +
mov eax [edi+8Ch] +
mov edx [eax+68h] +
test edx edx +
jnz near ptr dword_4176EC+144h  +
mov eax [esp+4Ch] +
mov [esp] eax +
call free  +
jmp near ptr dword_4176EC+144h  +
***
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1 +
mov [esp+4] ebp +
mov [esp] eax +
call sub_4123C0  +
test eax eax +
jz loc_417C52  +
mov ebp ds:dword_4A852C +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+14h] 1 +
mov [eax+10h] esi +
test ebp ebp +
jnz loc_417BA7  +
mov dword ptr [esp+48h] 1 +
jmp loc_417A3E  +
***
xor esi esi +
jmp loc_4179A5  +
***
mov [esp+4] esi +
mov dword ptr [esp] offset aAddingStubWith +
call printf  +
mov ecx ds:dword_4A852C +
test ecx ecx +
jz loc_417B93  +
mov eax [esp+78h] +
mov dword ptr [esp] offset aPreAllocRunI +
mov [esp+4] eax +
call printf  +
jmp loc_417B93  +
***
mov eax [esp+24h] +
mov eax [eax+134h] +
jmp near ptr dword_4176EC+204h  +
***
mov ebp [esp+44h] +
mov eax [ebp+8Ch] +
mov eax [eax+68h] +
test eax eax +
jnz loc_417BD7  +
mov eax [esp+4Ch] +
mov [esp] eax +
call free  +
mov eax [esp+24h] +
mov eax [eax+134h] +
jmp near ptr dword_4176EC+204h  +
***
mov dword ptr [esp] 11h +
mov ebp [esp+44h] +
call sub_4105E0  +
jmp loc_417C18  +
***
mov esi ebp +
mov ebp [esp+44h] +
mov [esp+8] esi +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset aBCannotCreateS +
call off_47D664  +
mov [esp] esi +
call free  +
jmp loc_417C18  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov edi [eax+1Ch] +
cmp dword ptr [edi+2Ch] 4 +
jz loc_417CA0  +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+11Ch] +
mov ebx [eax+64h] +
test ebx ebx +
jz loc_417DA8  +
xor esi esi +
jmp loc_417CC9  +
mov dword ptr [ebx+24h] 0 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_417CF3  +
mov eax [edi+11Ch] +
mov ebp [ebx+24h] +
mov [esp] eax +
mov [esp+4] ebp +
add esi ebp +
call sub_40E220  +
test eax eax +
mov [ebx+6Ch] eax +
jnz loc_417CB5  +
test ebp ebp +
jnz loc_417C94  +
mov dword ptr [ebx+24h] 0 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_417CC3  +
shr esi 2 +
lea eax ds:0[esi*4] +
mov dword ptr [edi+138h] 0 +
mov [edi+13Ch] esi +
mov [esp] eax +
call sub_412BD0  +
mov [edi+140h] eax +
mov eax [edi+13Ch] +
shl eax 2 +
mov [esp] eax +
call sub_412BD0  +
mov edx ds:dword_4A852C +
test edx edx +
mov [edi+144h] eax +
jnz loc_417D90  +
mov eax [esp+30h] +
mov ebx 1 +
mov dword ptr [esp+4] offset sub_416410 +
mov [esp+8] eax +
lea eax [edi+0FCh] +
mov [esp] eax +
call sub_412710  +
mov eax ds:dword_4A852C +
test eax eax +
jz loc_417C96  +
mov eax [edi+120h] +
mov eax [eax+24h] +
mov dword ptr [esp] offset aFinalStubSecti +
mov [esp+4] eax +
call printf  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+13Ch] +
mov dword ptr [esp] offset aAllocatingIEnt +
mov [esp+4] eax +
call printf  +
jmp loc_417D3C  +
***
xor eax eax +
xor esi esi +
jmp loc_417CFD  +
***
jmp sub_417DC0  +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] offset a_avr_prop +
mov [esp+6Ch+var_6C] eax +
call sub_40F280  +
test eax eax +
mov edi eax +
mov [esp+6Ch+var_34] eax +
jz loc_41838F  +
mov ebx [eax+24h] +
mov [esp+6Ch+var_10] 0 +
mov [esp+6Ch+var_6C] ebx +
call sub_412BD0  +
mov [esp+6Ch+var_58] ebx +
mov [esp+6Ch+var_60] 0 +
mov [esp+6Ch+var_5C] 0 +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_40] eax +
mov [esp+6Ch+var_64] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_40FA90  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_5C] 0 +
mov [esp+6Ch+var_60] 0 +
mov [esp+6Ch+var_64] 0 +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] eax +
call sub_43F980  +
test eax eax +
mov ecx eax +
mov [esp+6Ch+var_38] eax +
jz loc_417E82  +
mov eax [edi+4Ch] +
mov [esp+6Ch+var_60] offset sub_4163A0 +
mov [esp+6Ch+var_64] 0Ch +
mov [esp+6Ch+var_6C] ecx +
mov [esp+6Ch+var_68] eax +
call qsort  +
cmp ebx 3 +
jbe loc_418320  +
mov eax [esp+6Ch+var_40] +
movzx ecx byte ptr [eax] +
lea esi [eax+4] +
movzx edx byte ptr [eax+1] +
mov [esp+6Ch+var_3C] ecx +
movzx ecx word ptr [eax+2] +
mov [esp+6Ch+var_48] edx +
movzx ebp cx +
lea eax [ebp+ebp*2+0] +
lea eax ds:10h[eax*8] +
mov [esp+6Ch+var_6C] eax +
mov word ptr [esp+6Ch+var_44] cx +
call sub_412BD0  +
test eax eax +
mov edi eax +
jz loc_418320  +
mov edx [esp+6Ch+var_48] +
sub ebx 4 +
mov ecx [esp+6Ch+var_3C] +
mov [esp+6Ch+var_48] ebx +
mov [eax+1] dl +
mov edx [esp+6Ch+var_34] +
mov [eax] cl +
cmp cl 1 +
lea eax [edi+10h] +
mov [edi+4] ebp +
mov [edi+8] edx +
mov [edi+0Ch] eax +
jnz loc_418052  +
mov edx [edx+4Ch] +
mov ebx [esp+6Ch+var_38] +
cmp word ptr [esp+6Ch+var_44] 0 +
lea edx [edx+edx*2] +
lea ebx [ebx+edx*4] +
jz loc_418338  +
cmp [esp+6Ch+var_48] 4 +
jbe loc_418052  +
movzx edx word ptr [esp+6Ch+var_44] +
mov ebp [esp+6Ch+var_38] +
mov [esp+6Ch+var_44] edi +
sub edx 1 +
movzx edx dx +
lea edx [edx+edx*2] +
lea ecx ds:0[edx*8] +
xor edx edx +
mov [esp+6Ch+var_30] ecx +
mov ecx esi +
mov edi edx +
mov esi ebx +
mov ebx ecx +
add eax edi +
test ebp ebp +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
jz loc_417F86  +
mov eax ebx +
sub eax [esp+6Ch+var_40] +
cmp esi ebp +
ja loc_417F6C  +
jmp loc_417F72  +
add ebp 0Ch +
cmp esi ebp +
jbe loc_417F72  +
cmp eax [ebp+0] +
nop   +
ja loc_417F65  +
cmp esi ebp +
jz loc_418172  +
cmp eax [ebp+0] +
lea esi [esi+0] +
jz loc_418180  +
mov eax [esp+6Ch+var_44] +
mov edx [eax+0Ch] +
mov eax [ebx] +
mov [esp+6Ch+var_3C] eax +
lea eax [edx+edi] +
mov ecx [eax] +
test ecx ecx +
jz loc_4180E8  +
movzx edx byte ptr [ebx+4] +
movzx ecx dl +
mov [eax+8] ecx +
mov ecx [esp+6Ch+var_48] +
sub ecx 5 +
cmp dl 1 +
jz loc_4180D0  +
jb loc_4180C0  +
cmp dl 2 +
jz loc_418096  +
cmp dl 3 +
lea esi [esi+0] +
jnz loc_418090  +
cmp ecx 7 +
jbe loc_418090  +
mov edx [ebx+5] +
add ebx 0Dh +
mov ecx [esp+6Ch+var_44] +
sub [esp+6Ch+var_48] 0Dh +
mov [eax+0Ch] edx +
mov edx [ebx-4] +
mov eax [ecx+0Ch] +
mov [eax+edi+10h] edx +
mov eax [ecx+0Ch] +
mov dword ptr [eax+edi+14h] 0 +
cmp edi [esp+6Ch+var_30] +
jz loc_418334  +
add edi 18h +
cmp [esp+6Ch+var_48] 4 +
jbe loc_418090  +
mov eax [esp+6Ch+var_44] +
mov eax [eax+0Ch] +
jmp loc_417F46  +
mov eax ds:_iob +
mov [esp+6Ch+var_64] 21h +
mov edi [esp+6Ch+var_44] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] offset aFailedToFindMa +
add eax 40h +
mov [esp+6Ch+var_60] eax +
call fwrite  +
mov eax [esp+6Ch+var_34] +
mov ebx [esp+6Ch+var_38] +
mov eax [eax+8Ch] +
cmp ebx [eax+68h] +
jz loc_41806D  +
mov [esp+6Ch+var_6C] ebx +
call free  +
mov eax [esp+6Ch+var_40] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov [esp+6Ch+var_6C] edi +
call free  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+6Ch+var_44] +
jmp loc_418052  +
cmp ecx 3 +
jbe loc_418090  +
mov edx [ebx+5] +
add ebx 9 +
sub [esp+6Ch+var_48] 9 +
mov [eax+0Ch] edx +
mov eax [esp+6Ch+var_44] +
mov eax [eax+0Ch] +
mov dword ptr [eax+edi+14h] 0 +
jmp loc_418006  +
add ebx 5 +
mov [esp+6Ch+var_48] ecx +
jmp loc_418006  +
cmp ecx 3 +
jbe loc_418090  +
mov edx [ebx+5] +
add ebx 9 +
sub [esp+6Ch+var_48] 9 +
mov [eax+0Ch] edx +
jmp loc_418006  +
mov ecx [esp+6Ch+var_10] +
test ecx ecx +
mov [esp+6Ch+var_2C] ecx +
jz loc_41810D  +
mov ecx [ecx+1Ch] +
cmp [esp+6Ch+var_3C] ecx +
mov [esp+6Ch+var_28] ecx +
jnb loc_41827F  +
mov [esp+6Ch+var_10] 0 +
mov eax [esp+6Ch+var_3C] +
mov [esp+6Ch+var_68] offset sub_4163D0 +
mov [esp+6Ch+var_14] eax +
lea eax [esp+6Ch+var_14] +
mov [esp+6Ch+var_64] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_40F8A0  +
mov eax [esp+6Ch+var_10] +
test eax eax +
mov [esp+6Ch+var_2C] eax +
jz loc_418026  +
mov eax [esp+6Ch+var_44] +
mov ecx [esp+6Ch+var_2C] +
mov edx [eax+0Ch] +
mov ecx [ecx+1Ch] +
lea eax [edx+edi] +
mov [esp+6Ch+var_28] ecx +
mov ecx [esp+6Ch+var_2C] +
mov [eax] ecx +
mov ecx [esp+6Ch+var_3C] +
sub ecx [esp+6Ch+var_28] +
mov [eax+4] ecx +
lea eax [edx+edi] +
jmp loc_417FA0  +
xor ebp ebp +
jmp loc_417F86  +
mov eax [ebp+4] +
mov [esp+6Ch+var_3C] eax +
mov eax [esp+6Ch+arg_0] +
shr [esp+6Ch+var_3C] 8 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
cmp [esp+6Ch+var_3C] eax +
mov [esp+6Ch+var_28] eax +
jb loc_4182A5  +
mov edx [esp+6Ch+var_2C] +
mov eax [esp+6Ch+var_3C] +
sub eax [esp+6Ch+var_28] +
mov edx [edx+218h] +
lea ecx ds:0[eax*4] +
mov [esp+6Ch+var_20] ecx +
mov eax [edx+eax*4] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_4181EF  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_4181E0  +
cmp dl 3 +
jb loc_418327  +
cmp dl 4 +
jbe loc_418396  +
cmp dl 5 +
mov [esp+6Ch+var_24] offset off_47D3C0 +
jnz loc_418327  +
mov eax [esp+6Ch+var_3C] +
sub eax [esp+6Ch+var_28] +
shl eax 2 +
mov [esp+6Ch+var_20] eax +
mov eax [esp+6Ch+var_2C] +
mov edx [esp+6Ch+var_20] +
mov eax [eax+218h] +
mov eax [eax+edx] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_41824F  +
nop   +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_418240  +
sub edx 3 +
xor ecx ecx +
cmp dl 1 +
ja loc_41825C  +
mov ecx [eax+18h] +
mov eax [esp+6Ch+var_44] +
add ecx [ebp+8] +
mov edx [eax+0Ch] +
mov [esp+6Ch+var_3C] ecx +
mov ecx [esp+6Ch+var_24] +
lea eax [edx+edi] +
mov [eax] ecx +
mov ecx [esp+6Ch+var_3C] +
mov [eax+4] ecx +
jmp loc_417F8D  +
mov [esp+6Ch+var_24] edx +
mov edx [esp+6Ch+var_2C] +
mov ecx eax +
mov eax [esp+6Ch+var_28] +
add eax [edx+24h] +
cmp [esp+6Ch+var_3C] eax +
mov eax ecx +
mov edx [esp+6Ch+var_24] +
jnb loc_418105  +
jmp loc_418159  +
mov eax [esp+6Ch+arg_0] +
call sub_415670  +
mov ecx [esp+6Ch+var_3C] +
lea edx [ecx+ecx*4] +
mov eax [eax+edx*4+10h] +
test eax eax +
jz loc_41836A  +
cmp eax 0FFFFFFF1h +
jz loc_4183DE  +
cmp eax 0FFFFFFF2h +
jnz loc_4183A2  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_24] offset off_47D3C0 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
mov eax [esp+6Ch+var_28] +
cmp [esp+6Ch+var_3C] eax +
mov [esp+6Ch+var_20] edx +
jnb loc_418212  +
mov eax [esp+6Ch+arg_0] +
call sub_415670  +
mov edx [esp+6Ch+var_20] +
mov ecx [eax+edx*4] +
jmp loc_41825C  +
xor edi edi +
jmp loc_418052  +
mov [esp+6Ch+var_24] offset off_47D468 +
jmp loc_418221  +
mov edi [esp+6Ch+var_44] +
mov eax [esp+6Ch+var_40] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax [esp+6Ch+var_34] +
mov ebx [esp+6Ch+var_38] +
mov eax [eax+8Ch] +
cmp ebx [eax+68h] +
jz loc_418363  +
mov eax [esp+6Ch+var_38] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax edi +
jmp loc_418083  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_24] offset off_47D468 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
jmp loc_4182F6  +
xor eax eax +
jmp loc_418083  +
mov eax [eax+14h] +
mov [esp+6Ch+var_24] eax +
jmp loc_418221  +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_20] edx +
mov [esp+6Ch+var_6C] eax +
call sub_42E1E0  +
mov edx [esp+6Ch+var_20] +
mov [esp+6Ch+var_24] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
jmp loc_4182F6  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_24] offset off_47D510 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
jmp loc_4182F6  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax ds:dword_4A8524 +
mov dword ptr [esp+5Ch] 0 +
test eax eax +
jz loc_4187D4  +
mov eax [esp+84h] +
mov ecx 9 +
mov edi offset a_vectors +
mov dword ptr [esp+2Ch] 0 +
mov eax [eax] +
mov esi eax +
cmps   +
setnbe cl  +
setb dl  +
cmp cl dl +
jz loc_41846D  +
mov esi eax +
mov edi offset a_jumptables +
mov ecx 0Ch +
cmps   +
setnz al  +
movzx eax al +
mov [esp+2Ch] eax +
mov eax [esp+88h] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_418CE6  +
mov eax [esp+88h] +
mov ebx [eax+1Ch] +
cmp dword ptr [ebx+2Ch] 4 +
jz loc_41849C  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+8Ch] +
mov dword ptr [eax] 0 +
mov eax [ebx+118h] +
test eax eax +
jz loc_418750  +
mov eax [esp+88h] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_4187C7  +
mov eax [esp+84h] +
mov eax [eax+14h] +
test al 4 +
jz loc_4187C7  +
mov edi [esp+84h] +
mov edx [edi+4Ch] +
test edx edx +
jz loc_4187C7  +
test al 10h +
jz loc_4187C7  +
mov eax [esp+80h] +
mov eax [eax+0A0h] +
test byte ptr [eax+20h] 80h +
mov [esp+24h] eax +
jz loc_4187C7  +
add eax 48h +
mov [esp+44h] eax +
mov eax [esp+88h] +
movzx eax byte ptr [eax+2] +
mov [esp+4] edi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
shr al 6 +
and eax 1 +
mov [esp+10h] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_43F980  +
test eax eax +
mov edi eax +
mov [esp+40h] eax +
jz loc_41922D  +
mov eax [esp+84h] +
mov eax [eax+4Ch] +
lea eax [eax+eax*2] +
lea eax [edi+eax*4] +
cmp edi eax +
mov [esp+20h] eax +
jnb loc_418D7C  +
mov ebp [esp+40h] +
xor esi esi +
jmp loc_4185C0  +
mov edi [esp+80h] +
sub eax edx +
mov ecx [edi+0A0h] +
mov edx [ecx+218h] +
mov ebx [edx+eax*4] +
test ebx ebx +
jz loc_418D63  +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_418A74  +
add ebp 0Ch +
cmp [esp+20h] ebp +
jbe loc_418D7C  +
movzx eax byte ptr [ebp+4] +
lea edx [eax-2] +
cmp edx 1 +
jbe loc_4185D1  +
cmp eax 12h +
jnz loc_4185B3  +
mov eax [esp+5Ch] +
test eax eax +
jz loc_418B10  +
mov eax [esp+24h] +
test esi esi +
mov edx [eax+68h] +
jz loc_418AA5  +
mov eax [ebp+4] +
shr eax 8 +
cmp eax edx +
jnb loc_418584  +
lea eax [eax+eax*4] +
lea ebx [esi+eax*4] +
mov eax [ebx+10h] +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_42E1E0  +
mov ecx [ebx] +
test eax eax +
jz loc_418621  +
mov edx [eax+3Ch] +
add ecx [edx+1Ch] +
add ecx [eax+38h] +
cmp byte ptr [ebp+4] 12h +
jnz loc_4189F1  +
mov eax [esp+84h] +
mov ebx [ebp+0] +
mov eax [eax+3Ch] +
mov [esp+30h] ebx +
mov eax [eax+1Ch] +
mov edi eax +
mov [esp+34h] eax +
mov eax [esp+84h] +
mov eax [eax+38h] +
mov [esp+38h] eax +
add eax edi +
add eax ebx +
sub ecx eax +
mov [esp+3Ch] eax +
mov eax [esp+2Ch] +
add ecx [ebp+8] +
test eax eax +
jz loc_418CC5  +
cmp ecx 1001h +
setle al  +
xor ebx ebx +
cmp ecx 0FFFFF002h +
setnl bl  +
mov [esp+1Ch] ebx +
and [esp+1Ch] eax +
mov edx dword_47D834 +
cmp edx 4001h +
sbb ebx ebx +
and ebx 0FFFFFDA8h +
sub ebx 8F4h +
cmp edx 4001h +
lea eax [edx-1] +
sbb edi edi +
and eax ecx +
mov ecx edx +
shr ecx 1 +
and edi 0FFFFFDA8h +
mov [esp+28h] ecx +
mov ecx eax +
add edi 708h +
sub ecx edx +
cmp eax [esp+28h] +
cmovg eax ecx +
cmp eax ebx +
jl loc_418A88  +
mov edx 0FFEh +
sub edx edi +
cmp edx eax +
jl loc_418A88  +
mov eax ds:dword_4A8530 +
mov edx [esp+30h] +
test eax eax +
jnz loc_418EEB  +
mov eax [esp+84h] +
mov ebx [esp+5Ch] +
mov edi [esp+40h] +
mov eax [eax+8Ch] +
lea ecx [ebx+edx] +
mov [eax+68h] edi +
mov [eax+30h] ebx +
mov eax [esp+24h] +
mov [eax+78h] esi +
movzx edx byte ptr [ebx+edx+1] +
movzx eax byte ptr [ecx] +
and edx 0FFFFFF94h +
and eax 0Eh +
cmp dl 94h +
jz loc_4189AB  +
mov dword ptr [esp+8] offset aElf32_avr_rela +
mov dword ptr [esp+4] 0AA6h +
mov dword ptr [esp] offset a____Binutil_12 +
call sub_410560  +
nop   +
mov eax [ebx+120h] +
cmp eax [esp+84h] +
jnz loc_4184B7  +
mov edi [esp+84h] +
mov esi [edi+24h] +
mov edi ds:dword_4A8530 +
test edi edi +
jnz loc_4192CB  +
mov eax [eax+3Ch] +
mov edi [esp+88h] +
mov eax [eax+94h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
mov [esp] eax +
call near ptr dword_4176EC+14h  +
mov eax [ebx+120h] +
mov eax [eax+24h] +
cmp eax esi +
jz loc_4187B9  +
mov edi [esp+8Ch] +
mov dword ptr [edi] 1 +
mov ecx ds:dword_4A8530 +
test ecx ecx +
jnz loc_418EBA  +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+88h] +
mov ds:dword_4A8524 1 +
mov edi [eax+34h] +
test edi edi +
jz loc_41842C  +
mov ecx edi +
mov eax [ecx+64h] +
test eax eax +
jnz loc_418827  +
jmp loc_418830  +
mov esi [eax+8Ch] +
lea edx [esi+90h] +
mov eax [eax+0Ch] +
mov dword ptr [edx] 0 +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx+8] 0 +
test eax eax +
jz loc_418830  +
cmp eax [eax+3Ch] +
jnz loc_418800  +
xor edx edx +
jmp loc_41880C  +
***
mov ecx [ecx+9Ch] +
test ecx ecx +
jnz loc_4187F2  +
lea esi [esi+0] +
mov [esp] edi +
call sub_417DC0  +
test eax eax +
mov ebp eax +
jz loc_418919  +
mov eax [eax+4] +
test eax eax +
jz loc_418919  +
xor ecx ecx +
xor esi esi +
mov [esp+1Ch] edi +
mov edi ecx +
jmp loc_4188C8  +
cmp eax [eax+3Ch] +
jz loc_4188D2  +
mov ebx [eax+8Ch] +
add ebx 90h +
jz loc_4188D2  +
mov edx [ebx] +
cmp edx [ebx+4] +
jz loc_4188F0  +
mov eax [ebx+8] +
lea edx [edx+edx*2] +
add edi 1 +
lea eax [eax+edx*8] +
mov edx [ebp+0Ch] +
add edx esi +
add esi 18h +
mov ecx [edx] +
mov [eax] ecx +
mov ecx [edx+4] +
mov [eax+4] ecx +
mov ecx [edx+8] +
mov [eax+8] ecx +
mov ecx [edx+0Ch] +
mov [eax+0Ch] ecx +
mov ecx [edx+10h] +
mov [eax+10h] ecx +
mov edx [edx+14h] +
mov [eax+14h] edx +
add dword ptr [ebx] 1 +
cmp edi [ebp+4] +
jnb loc_418915  +
mov eax [ebp+0Ch] +
mov eax [eax+esi] +
test eax eax +
jnz loc_418870  +
xor ebx ebx +
mov dword ptr [esp+4] 913h +
mov dword ptr [esp] offset a____Binutil_12 +
call sub_410530  +
mov edx [ebx] +
cmp edx [ebx+4] +
jnz loc_41888A  +
nop   +
mov eax [ebx+8] +
add edx 0Ah +
mov [ebx+4] edx +
lea edx [edx+edx*2] +
shl edx 3 +
mov [esp+4] edx +
mov [esp] eax +
call sub_412C60  +
mov edx [ebx] +
mov [ebx+8] eax +
jmp loc_41888D  +
***
mov edi [esp+1Ch] +
mov [esp] ebp +
call free  +
mov edi [edi+9Ch] +
test edi edi +
jnz loc_418840  +
mov eax [esp+88h] +
mov esi [eax+34h] +
test esi esi +
jz loc_41842C  +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_418957  +
jmp loc_41899C  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_41899C  +
cmp ebx [ebx+3Ch] +
jz loc_418950  +
mov eax [ebx+8Ch] +
cmp eax 0FFFFFF70h +
jz loc_418950  +
mov edx [eax+90h] +
test edx edx +
jz loc_418950  +
mov eax [eax+98h] +
mov dword ptr [esp+0Ch] offset sub_416370 +
mov dword ptr [esp+8] 18h +
mov [esp+4] edx +
mov [esp] eax +
call qsort  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_418957  +
mov esi [esi+9Ch] +
test esi esi +
jnz loc_418941  +
jmp loc_41842C  +
***
cmp al 0Eh +
jnz loc_418E9E  +
mov byte ptr [ecx] 0 +
mov eax [ebp+0] +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+1] 0D0h +
mov eax [ebp+4] +
mov edi [esp+2Ch] +
xor al al +
add eax 3 +
test edi edi +
mov [ebp+4] eax +
mov eax [ebp+0] +
jnz loc_418F14  +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+2] 0 +
mov eax [ebp+0] +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+3] 0 +
mov eax [esp+84h] +
mov edi [ebp+0] +
mov eax [eax+3Ch] +
mov ebx [eax+1Ch] +
mov eax [esp+84h] +
mov ecx [eax+38h] +
mov edx [esp+5Ch] +
add ebx edi +
lea eax [edx+edi+1] +
mov [esp+34h] eax +
movzx eax byte ptr [eax] +
mov [esp+1Ch] al +
lea eax [edx+edi] +
mov [esp+38h] eax +
movzx eax byte ptr [eax] +
mov [esp+28h] al +
lea eax [ebx+ecx] +
movzx ecx byte ptr [esp+1Ch] +
mov [esp+30h] eax +
and ecx 0FFFFFFF0h +
cmp cl 0D0h +
jz loc_418B31  +
movzx eax byte ptr [esp+1Ch] +
and eax 0FFFFFFFEh +
cmp al 94h +
jz loc_418B4F  +
cmp cl 0C0h +
jnz loc_4185B3  +
mov dword ptr [esp+3Ch] 2 +
mov dword ptr [esp+34h] 2 +
jmp loc_418B80  +
mov eax [ebx+14h] +
mov edx [eax+3Ch] +
mov ecx [edx+1Ch] +
add ecx [ebx+18h] +
add ecx [eax+38h] +
jmp loc_418621  +
***
mov eax [esp+1Ch] +
test eax eax +
jnz loc_4186E5  +
mov ecx [esp+38h] +
mov ebx [esp+34h] +
mov edi [esp+30h] +
jmp loc_418A0B  +
***
test edx edx +
jz loc_418D01  +
mov esi [eax+78h] +
test esi esi +
jnz loc_4185EC  +
mov eax [esp+44h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] edx +
mov [esp] eax +
call sub_42B780  +
test eax eax +
mov esi eax +
jz loc_41922D  +
mov eax [esp+24h] +
mov edx [eax+68h] +
jmp loc_4185EC  +
***
mov eax [esp+84h] +
mov eax [eax+8Ch] +
mov eax [eax+30h] +
test eax eax +
jz loc_419349  +
mov [esp+5Ch] eax +
jmp loc_4185DD  +
***
mov ebx dword_47D830 +
test ebx ebx +
jnz loc_418D0C  +
movzx eax byte ptr [esp+1Ch] +
and eax 0FFFFFFFEh +
cmp al 94h +
jnz loc_4185B3  +
movzx eax byte ptr [esp+28h] +
and eax 0Eh +
cmp al 0Eh +
jz loc_418F53  +
cmp cl 0C0h +
jz loc_418A5F  +
cmp al 0Ch +
jnz loc_4185B3  +
mov dword ptr [esp+3Ch] 4 +
mov dword ptr [esp+34h] 4 +
mov eax [esp+3Ch] +
mov ebx [esp+84h] +
add eax edi +
lea ecx [eax+1] +
cmp ecx [ebx+24h] +
jnb loc_4185B3  +
cmp byte ptr [edx+eax+1] 95h +
jnz loc_4185B3  +
cmp byte ptr [edx+eax] 8 +
jnz loc_4185B3  +
mov eax ds:dword_4A8530 +
test eax eax +
jz loc_418BCD  +
cmp dword ptr [esp+34h] 2 +
jz loc_419394  +
cmp dword ptr [esp+34h] 4 +
jz loc_419378  +
cmp edi 1 +
jbe loc_4185B3  +
mov edx [esp+5Ch] +
movzx eax byte ptr [edx+edi-1] +
movzx edx byte ptr [edx+edi-2] +
cmp al 99h +
jz loc_41931C  +
cmp al 9Bh +
jz loc_419295  +
mov ebx eax +
and ebx 0FFFFFFFEh +
cmp bl 0FCh +
jnz loc_41927E  +
shr dl 3 +
mov ecx edx +
and ecx 1 +
and eax 0FFFFFFFCh +
cmp al 10h +
jz loc_419295  +
test ecx ecx +
jz loc_419295  +
mov eax [esp+84h] +
add edi [esp+3Ch] +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp+1Ch] edi +
mov edi 1 +
mov [esp] eax +
call sub_42F700  +
mov ecx eax +
mov eax [esp+24h] +
mov ebx [eax+78h] +
mov eax [eax+68h] +
lea edx [eax+eax*4] +
lea edx [ebx+edx*4] +
cmp ebx edx +
jnb loc_418FCA  +
test ebx ebx +
jz loc_418FCA  +
mov eax [esp+30h] +
add eax [esp+34h] +
mov [esp+28h] eax +
jmp loc_418C87  +
add ebx 14h +
cmp edx ebx +
jbe loc_418FC3  +
test ebx ebx +
jz loc_418FC3  +
mov eax [esp+1Ch] +
cmp [ebx] eax +
jnz loc_418C74  +
cmp [ebx+10h] ecx +
jnz loc_418C74  +
mov eax ds:dword_4A8530 +
xor edi edi +
test eax eax +
jz loc_418C74  +
mov eax [esp+28h] +
mov dword ptr [esp] offset aLocalLabelPrev +
mov [esp+48h] edx +
mov [esp+38h] ecx +
mov [esp+4] eax +
call printf  +
mov edx [esp+48h] +
mov ecx [esp+38h] +
jmp loc_418C74  +
***
cmp ecx 0FFFh +
setle al  +
xor ebx ebx +
cmp ecx 0FFFFF000h +
setnl bl  +
mov [esp+1Ch] ebx +
and [esp+1Ch] eax +
jmp loc_418688  +
***
mov eax [esp+88h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aPFRelaxAndRMay +
call eax  +
jmp loc_418482  +
***
mov eax [ebp+4] +
shr eax 8 +
jmp loc_418584  +
***
mov eax [esp+84h] +
lea ecx [edi+3] +
cmp ecx [eax+24h] +
jnb loc_4185B3  +
cmp byte ptr [edx+edi+2] 8 +
jnz loc_4185B3  +
cmp byte ptr [edx+edi+3] 95h +
jnz loc_4185B3  +
movzx eax byte ptr [esp+1Ch] +
mov edx ds:dword_4A8530 +
mov edi [esp+34h] +
and eax 0FFFFFFEFh +
test edx edx +
mov [edi] al +
jnz loc_419323  +
mov eax [esp+8Ch] +
mov dword ptr [eax] 1 +
jmp loc_4185B3  +
***
mov dword ptr [esp+4] 0A34h +
mov dword ptr [esp] offset a____Binutil_12 +
call sub_410530  +
jmp loc_4185A4  +
***
mov eax [esp+8Ch] +
mov eax [eax] +
test eax eax +
jnz loc_418E5A  +
mov eax [esp+84h] +
mov eax [eax+3Ch] +
cmp [esp+84h] eax +
jz loc_4193B0  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
mov [esp+1Ch] eax +
lea ebp [eax+90h] +
mov edx [ebp+0] +
test edx edx +
jz loc_418E5A  +
mov dword ptr [esp+1Ch] 0 +
mov eax [esp+1Ch] +
lea edx [eax+eax*2] +
mov eax [ebp+8] +
lea esi [eax+edx*8] +
mov eax [esi+8] +
sub eax 2 +
cmp eax 1 +
ja loc_418E48  +
mov ecx [esi+0Ch] +
mov eax 1 +
mov ebx [esi+14h] +
shl eax cl +
mov edx ebx +
mov ecx eax +
sub edx eax +
cmp eax ebx +
jbe loc_418E02  +
jmp loc_418E48  +
mov edx ebx +
mov ebx edx +
mov edi ecx +
sub ebx eax +
add ecx eax +
cmp edx eax +
jnb loc_418E00  +
test edi edi +
mov [esi+14h] edx +
jle loc_418E48  +
mov ecx [esi+4] +
mov edx [esp+84h] +
mov eax [esp+80h] +
sub ecx edi +
mov [esi+4] ecx +
mov dword ptr [esp+4] 0 +
mov [esp] edi +
call sub_4158F0  +
mov eax [esp+8Ch] +
mov dword ptr [eax] 1 +
add dword ptr [esp+1Ch] 1 +
mov eax [esp+1Ch] +
cmp [ebp+0] eax +
ja loc_418DCE  +
mov edx [esp+5Ch] +
test edx edx +
jz loc_418EDC  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
cmp edx [eax+30h] +
jz loc_418E84  +
mov edi [esp+88h] +
test byte ptr [edi+2] 40h +
jz loc_418ED4  +
mov [eax+30h] edx +
mov edi [esp+40h] +
cmp [eax+68h] edi +
jz loc_4187C7  +
mov [esp] edi +
call free  +
jmp loc_4187C7  +
***
cmp al 0Ch +
jnz loc_418732  +
mov byte ptr [ecx] 0 +
mov eax [ebp+0] +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+1] 0C0h +
jmp loc_4189C2  +
***
mov [esp+4] eax +
mov dword ptr [esp] offset aSizeOfStubSect +
call printf  +
mov eax 1 +
jmp loc_418494  +
***
mov [esp] edx +
call free  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
jmp loc_418E84  +
***
mov eax [esp+84h] +
mov eax [eax] +
mov dword ptr [esp] offset aShrinkingJumpC +
mov [esp+8] eax +
mov eax [esp+3Ch] +
mov [esp+4] eax +
call printf  +
mov edx [ebp+0] +
jmp loc_4186F6  +
***
lea ecx [eax+2] +
mov edx [esp+84h] +
mov eax [esp+80h] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 2 +
call sub_4158F0  +
test eax eax +
jz loc_419218  +
mov eax [esp+8Ch] +
mov dword ptr [eax] 1 +
jmp loc_4189F1  +
***
mov eax dword_47D830 +
test eax eax +
jz loc_418A56  +
mov ecx [esp+84h] +
lea eax [edi+5] +
cmp eax [ecx+24h] +
jnb loc_4185B3  +
cmp byte ptr [edx+edi+4] 8 +
jnz loc_4185B3  +
cmp byte ptr [edx+edi+5] 95h +
jnz loc_4185B3  +
movzx eax byte ptr [esp+28h] +
mov edi [esp+38h] +
and eax 0FFFFFFFDh +
mov [edi] al +
mov eax ds:dword_4A8530 +
test eax eax +
jz loc_418D51  +
mov eax [ecx] +
mov dword ptr [esp] offset aConvertedCallR +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp+4] eax +
call printf  +
jmp loc_418D51  +
***
mov eax [esp+24h] +
mov eax [eax+68h] +
mov ecx [esp+80h] +
mov edx [ecx+0A0h] +
mov ecx [esp+24h] +
mov ebx [edx+218h] +
mov edx [ecx+60h] +
shr edx 4 +
sub edx eax +
lea ecx [ebx+edx*4] +
cmp ebx ecx +
jnb loc_419051  +
mov eax [esp+30h] +
add eax [esp+34h] +
mov [esp+28h] eax +
jmp loc_419005  +
add ebx 4 +
cmp ecx ebx +
jbe loc_419051  +
mov eax [ebx] +
movzx edx byte ptr [eax+0Ch] +
sub edx 3 +
cmp dl 1 +
ja loc_418FFE  +
mov edx [esp+84h] +
cmp [eax+14h] edx +
jnz loc_418FFE  +
mov edx [esp+1Ch] +
cmp [eax+18h] edx +
jnz loc_418FFE  +
mov eax ds:dword_4A8530 +
xor edi edi +
test eax eax +
jz loc_418FFE  +
mov eax [esp+28h] +
mov dword ptr [esp] offset aGlobalLabelPre +
mov [esp+38h] ecx +
mov [esp+4] eax +
call printf  +
mov ecx [esp+38h] +
jmp loc_418FFE  +
***
mov eax [esp+80h] +
mov eax [eax+64h] +
mov ecx eax +
mov [esp+38h] eax +
mov eax edi +
test al al +
mov [esp+4Fh] al +
jz loc_4185B3  +
test ecx ecx +
jz loc_4191CE  +
mov eax [esp+3Ch] +
add eax [esp+30h] +
mov edi [esp+24h] +
mov [esp+48h] ebp +
mov [esp+1Ch] eax +
mov eax [esp+38h] +
mov eax [eax+8Ch] +
mov ebx [eax+68h] +
test ebx ebx +
jz loc_4192E6  +
mov eax [esp+38h] +
mov eax [eax+4Ch] +
lea eax [eax+eax*2] +
lea ebp [ebx+eax*4] +
cmp ebx ebp +
jb loc_4190C7  +
jmp loc_4191B7  +
cmp [esp+1Ch] ecx +
jz loc_419122  +
add ebx 0Ch +
cmp ebp ebx +
jbe loc_4191B7  +
test ebx ebx +
jz loc_4191B7  +
test esi esi +
mov eax [edi+68h] +
jz loc_419150  +
mov edx [ebx+4] +
xor ecx ecx +
shr edx 8 +
cmp edx eax +
jnb loc_4190B6  +
lea eax [edx+edx*4] +
lea edx [esi+eax*4] +
mov eax [edx+10h] +
mov [esp+28h] edx +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_42E1E0  +
mov edx [esp+28h] +
mov ecx [edx] +
test eax eax +
jz loc_4191AF  +
mov edx [eax+3Ch] +
add ecx [edx+1Ch] +
add ecx [eax+38h] +
add ecx [ebx+8] +
cmp [esp+1Ch] ecx +
jnz loc_4190BC  +
mov ebx ds:dword_4A8530 +
mov ebp [esp+48h] +
test ebx ebx +
jz loc_4185B3  +
mov eax [esp+1Ch] +
mov dword ptr [esp] offset aRetFromRjmpJmp +
mov [esp+4] eax +
call printf  +
jmp loc_4185B3  +
***
test eax eax +
jz loc_4191A8  +
mov esi [edi+78h] +
test esi esi +
jnz loc_4190D6  +
mov [esp+8] eax +
mov eax [esp+44h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] eax +
call sub_42B780  +
test eax eax +
mov esi eax +
jz loc_4191B7  +
mov eax [edi+68h] +
jmp loc_4190D6  +
***
xor ecx ecx +
jmp loc_4190B6  +
***
add ecx [ebx+8] +
jmp loc_4190B6  +
***
mov eax [esp+38h] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+38h] eax +
jnz loc_41908B  +
mov ebp [esp+48h] +
cmp byte ptr [esp+4Fh] 0 +
jz loc_4185B3  +
mov ecx ds:dword_4A8530 +
test ecx ecx +
jnz loc_4193B7  +
mov ecx [esp+3Ch] +
mov edx [esp+84h] +
mov eax [esp+80h] +
add ecx [ebp+0] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 2 +
call sub_4158F0  +
test eax eax +
jnz loc_418D51  +
test esi esi +
jz loc_41922D  +
mov eax [esp+24h] +
cmp [eax+78h] esi +
jz loc_41922D  +
mov [esp] esi +
call free  +
mov eax [esp+5Ch] +
test eax eax +
jz loc_41924F  +
mov edi [esp+84h] +
mov edx [edi+8Ch] +
cmp eax [edx+30h] +
jz loc_41924F  +
mov [esp] eax +
call free  +
mov edi [esp+40h] +
test edi edi +
jz loc_418492  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
cmp [eax+68h] edi +
jz loc_418492  +
mov [esp] edi +
call free  +
jmp loc_418492  +
***
cmp bl 0FEh +
mov ecx 1 +
jnz loc_418C0A  +
and edx 8 +
jnz loc_418C0A  +
mov eax ds:dword_4A8530 +
test eax eax +
jz loc_4185B3  +
mov eax [esp+84h] +
mov eax [eax] +
mov dword ptr [esp] offset aPrecedingSkipI +
mov [esp+8] eax +
mov eax [esp+30h] +
add eax 2 +
mov [esp+4] eax +
call printf  +
jmp loc_4185B3  +
***
mov [esp+4] esi +
mov dword ptr [esp] offset aRelaxingTheStu +
call printf  +
mov eax [ebx+120h] +
jmp loc_41877B  +
***
mov eax [esp+38h] +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_43F980  +
mov ebx eax +
jmp loc_4190A0  +
***
xor ecx ecx +
jmp loc_418C0A  +
***
mov eax [esp+84h] +
mov eax [eax] +
mov dword ptr [esp] offset aConvertedRcall +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp+4] eax +
call printf  +
jmp loc_418D51  +
***
lea eax [esp+5Ch] +
mov [esp+8] eax +
mov eax [esp+84h] +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_40FBE0  +
test eax eax +
jnz loc_4185DD  +
jmp loc_419218  +
***
mov eax [esp+30h] +
mov dword ptr [esp] offset aFoundJmpRetSeq +
mov [esp+4] eax +
call printf  +
mov edi [ebp+0] +
jmp loc_418BCD  +
***
mov eax [esp+30h] +
mov dword ptr [esp] offset aFoundRjmpRetSe +
mov [esp+4] eax +
call printf  +
mov edi [ebp+0] +
jmp loc_418BCD  +
***
xor ebp ebp +
jmp loc_418DBB  +
***
mov eax [esp+30h] +
add eax [esp+34h] +
mov dword ptr [esp] offset aUnreachableRet +
mov [esp+4] eax +
call printf  +
jmp loc_4191E7  +
***
mov [esp] ebx +
call sub_40F8A0  +
mov edx [esp+1Ch] +
xor eax eax +
test edx edx +
jnz loc_419462  +
mov eax [esp+34h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_440720  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov edx [esp+20h] +
test byte ptr [eax+14h] 4 +
jz loc_4194B6  +
mov eax [edx+0A0h] +
movzx eax word ptr [eax+26h] +
mov [esp+4] edx +
mov dword ptr [esp] offset aBRelocationsIn +
mov [esp+8] eax +
call off_47D664  +
mov dword ptr [esp] 3 +
call sub_4105E0  +
mov eax [esp+28h] +
mov dword ptr [eax] 1 +
add esp 1Ch +
retn   +
***
mov eax [esp+4] +
mov ds:dword_4A86B4 eax +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 227h +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_410530  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp+8] 20Ch +
mov dword ptr [esp+4] offset a____Binutil_17 +
jmp sub_410530  +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov eax [eax+0A0h] +
mov ebx [eax] +
test ebx ebx +
js loc_419530  +
add esp 18h +
lea eax ds:4[ebx*4] +
pop ebx  +
retn   +
***
mov dword ptr [esp+4] 1BDh +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_410530  +
add esp 18h +
lea eax ds:4[ebx*4] +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 1B3h +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_410530  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 1ACh +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_410530  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 1A5h +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_410530  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 19Eh +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_410530  +
mov eax 1 +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 197h +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_410530  +
mov eax 1 +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 18Ah +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_410530  +
mov eax 1 +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 17Dh +
mov dword ptr [esp] offset a____Binutil_17 +
call sub_410530  +
mov eax 1 +
add esp 1Ch +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_41DF10  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 18h +
mov [esp] ebx +
call sub_40E220  +
test eax eax +
jz loc_41966E  +
mov [eax] ebx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 8 +
mov esi [esp+24h] +
mov [esp] ebx +
call sub_40E140  +
mov edx [esp+28h] +
test esi esi +
mov [eax] esi +
mov [eax+4] edx +
jz loc_4196B1  +
or dword ptr [ebx+28h] 200h +
mov [ebx+0A0h] eax +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+18h+var_18] offset aBfdPlugin +
lea ebx [esp+18h+arg_8] +
call printf  +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call vprintf  +
mov [esp+18h+var_18] 0Ah +
call putchar  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 9Ch +
mov dword ptr [ecx] 0 +
mov [esp+0A8h+var_A8] eax +
call ds:LoadLibraryA  +
sub esp 4 +
test eax eax +
jz loc_4198B0  +
mov [esp+0A8h+var_A4] offset aOnload +
mov [esp+0A8h+var_A8] eax +
call ds:GetProcAddress  +
sub esp 8 +
test eax eax +
jz loc_4198A3  +
lea edx [ebp+var_68] +
mov [ebp+var_68] 0Bh +
mov [ebp+var_64] offset sub_4196C0 +
mov [ebp+var_60] 5 +
mov [ebp+var_5C] offset loc_4194C0 +
mov [ebp+var_58] 8 +
mov [ebp+var_54] offset loc_419680 +
mov [ebp+var_50] 0 +
mov [ebp+var_4C] 0 +
mov [esp+0A8h+var_A8] edx +
call eax  +
test eax eax +
jnz loc_4198A3  +
mov dword ptr [esi] 1 +
movzx eax byte ptr [ebx+2Ch] +
and eax 0FFFFFFF3h +
or eax 8 +
mov [ebx+2Ch] al +
mov ecx ds:dword_4A86B4 +
test ecx ecx +
jz loc_4198A3  +
mov esi [ebx+8Ch] +
mov eax [ebx] +
mov [ebp+var_8C] 0 +
test esi esi +
mov [ebp+var_88] eax +
jz loc_4198D0  +
mov eax [ebx+38h] +
mov edx [ebx+3Ch] +
mov [ebp+var_80] eax +
mov eax [ebx+88h] +
mov [ebp+var_7C] edx +
mov eax [eax+4] +
mov [ebp+var_74] 0 +
mov [ebp+var_78] eax +
mov eax [esi+8] +
test eax eax +
jz loc_419897  +
mov [esp+0A8h+var_A8] eax +
call _fileno_0  +
mov edx [ebx+8Ch] +
test edx edx +
mov [ebp+var_84] eax +
jz loc_419900  +
mov [esp+0A8h+var_9C] 1 +
mov [esp+0A8h+var_A4] 0 +
mov [esp+0A8h+var_A0] 0 +
mov [esp+0A8h+var_A8] eax +
mov [ebp+var_70] ebx +
call j__lseeki64  +
mov esi eax +
mov edi edx +
lea eax [ebp+var_8C] +
mov [esp+0A8h+var_A4] eax +
lea eax [ebp+var_88] +
mov [esp+0A8h+var_A8] eax +
call ds:dword_4A86B4  +
mov eax [ebp+var_84] +
mov [esp+0A8h+var_9C] 0 +
mov [esp+0A8h+var_A4] esi +
mov [esp+0A8h+var_A0] edi +
mov [esp+0A8h+var_A8] eax +
call j__lseeki64  +
mov eax [ebp+var_8C] +
test eax eax +
jz loc_4198A3  +
movzx eax byte ptr [ebx+2Ch] +
and eax 0FFFFFFF3h +
or eax 4 +
mov [ebx+2Ch] al +
lea esp [ebp-0Ch] +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+0A8h+var_A8] esi +
call sub_414060  +
test eax eax +
jnz loc_4198F3  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+0A8h+var_A4] offset aUnableToLoadDl +
mov [esp+0A8h+var_A8] offset aS_0 +
call off_47D664  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [ebp+var_80] 0 +
mov esi ebx +
mov [ebp+var_7C] 0 +
mov [ebp+var_78] 0 +
mov [ebp+var_74] 0 +
jmp loc_4197EE  +
mov eax [esi+8] +
jmp loc_4197F9  +
lea edx [ebp+var_48] +
mov [esp+0A8h+var_A4] edx +
mov [esp+0A8h+var_A8] eax +
call ds:_fstati64  +
test eax eax +
jnz loc_4198A3  +
mov eax [ebp+var_30] +
mov edx [ebp+var_2C] +
mov [ebp+var_78] eax +
mov eax [ebp+var_84] +
mov [ebp+var_74] edx +
jmp loc_419815  +
***
push ebp  +
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+30h] +
mov eax [ebp+0A0h] +
mov edx [eax] +
mov esi [eax+4] +
mov ds:dword_4A8600 offset a_text_0 +
mov ds:dword_4A8554 1000h +
test edx edx +
mov [esp+0Ch] edx +
jle loc_4199D6  +
***
mov [esp+arg_0] 18h +
mov [esp+0] ebp +
call sub_40E140  +
test eax eax +
mov ebx eax +
jz loc_419A40  +
mov eax [esp+arg_30] +
mov [eax+edi*4] ebx +
mov ecx [esi+8] +
mov eax [esi] +
mov [ebx] ebp +
mov dword ptr [ebx+8] 0 +
cmp ecx 4 +
mov [ebx+4] eax +
ja loc_419A07  +
mov edx 1 +
mov eax 2 +
shl edx cl +
test dl 15h +
jz loc_419A00  +
cmp ecx 4 +
mov [ebx+0Ch] eax +
ja loc_419A28  +
jmp ds:off_485ED0[ecx*4]  +
***
mov dword ptr [ebx+10h] offset off_47D468 +
mov dword ptr [ebx+10h] offset dword_4A8600 +
jmp loc_4199C7  +
***
mov dword ptr [ebx+10h] offset unk_4A8540 +
jmp loc_4199C7  +
***
and edx 0Ah +
mov al 82h +
jnz loc_4199AC  +
mov [esp-2Ch+arg_2C] 1D1h +
mov [esp-2Ch+arg_28] offset a____Binutil_17 +
call sub_410530  +
mov ecx [esi+8] +
xor eax eax +
mov [ebx+0Ch] eax +
cmp ecx 4 +
jbe loc_4199B4  +
mov [esp-2Ch+arg_2C] 1FDh +
mov [esp-2Ch+arg_28] offset a____Binutil_17 +
call sub_410530  +
jmp loc_4199C7  +
***
mov [esp+arg_0] 1E8h +
mov dword ptr [esp+0] offset a____Binutil_17 +
call sub_410530  +
jmp loc_41997E  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax ds:dword_4A86AC +
mov ebx [esp+80h] +
test eax eax +
jz loc_419A84  +
mov [esp] ebx +
call eax  +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx edx byte ptr [ebx+2Ch] +
and edx 0Ch +
jz loc_419AA0  +
xor eax eax +
cmp dl 4 +
jnz loc_419A7C  +
mov eax [ebx+4] +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx dword_47DA00 +
test ecx ecx +
jz loc_419AD8  +
mov eax ds:dword_4A86A8 +
test eax eax +
jz loc_419AE0  +
mov ecx offset dword_47DA00 +
mov edx ebx +
call sub_419700  +
test eax eax +
jz loc_419AD8  +
movzx edx byte ptr [ebx+2Ch] +
and edx 0Ch +
jmp loc_419A8D  +
***
mov eax [esp+1Ch] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_419A7C  +
***
mov edx ds:dword_4A86B0 +
test edx edx +
jz loc_419AD8  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset a__LibBfdPlugin +
mov dword ptr [esp] offset aHomeJenkinsMin +
call sub_469ED0  +
mov dword ptr [esp+4] offset aHomeJenkinsMin +
mov esi eax +
mov [esp+8] eax +
mov eax ds:dword_4A86B0 +
mov [esp] eax +
call sub_46A6C0  +
mov [esp] esi +
mov edi eax +
mov [esp+1Ch] eax +
call free  +
mov [esp] edi +
call sub_47ACC0  +
test eax eax +
mov ebp eax +
jz loc_419ACC  +
mov esi [esp+1Ch] +
mov [esp+80h] ebx +
jmp loc_419B60  +
mov [esp] edi +
call free  +
test ebx ebx +
jnz loc_419C01  +
mov [esp] ebp +
call sub_47AE80  +
test eax eax +
jz loc_419BDD  +
add eax 8 +
xor ebx ebx +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov dword ptr [esp+4] offset asc_485F50 +
mov [esp] esi +
call sub_469ED0  +
mov edi eax +
lea eax [esp+30h] +
mov [esp+4] eax +
mov [esp] edi +
call ds:_stati64  +
test eax eax +
jnz loc_419BB3  +
movzx eax word ptr [esp+36h] +
and ax 0F000h +
cmp ax 8000h +
jz loc_419BC7  +
mov eax dword_47DA00 +
test eax eax +
jg loc_419B50  +
mov eax [esp+2Ch] +
mov dword_47DA00 eax +
jmp loc_419B50  +
***
mov edx [esp+80h] +
lea ecx [esp+2Ch] +
mov eax edi +
call sub_419700  +
mov ebx eax +
jmp loc_419BB3  +
***
mov ebx [esp+80h] +
xor edi edi +
mov eax [esp+1Ch] +
mov [esp] eax +
call free  +
mov [esp] ebp +
call sub_47AFA0  +
mov eax edi +
jmp loc_419ABF  +
***
mov edi ebx +
mov ebx [esp+80h] +
jmp loc_419BE6  +
***
mov eax [esp+4] +
mov ds:dword_4A86B0 eax +
retn   +
***
mov eax [esp+4] +
test eax eax +
mov ds:dword_4A86A8 eax +
setnz al  +
movzx eax al +
mov dword_47DA00 eax +
retn   +
***
mov edx dword_47DA00 +
xor eax eax +
test edx edx +
setnle al  +
retn   +
***
xor eax eax +
cmp dword ptr [esp+4] offset off_485F60 +
setz al  +
retn   +
***
mov eax [esp+4] +
mov ds:dword_4A86AC eax +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov eax [eax+7Ch] +
lea eax ds:4[eax*4] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov ebx [esp+34h] +
mov esi [edi+7Ch] +
mov eax [edi+0A0h] +
test esi esi +
mov eax [eax+14h] +
jnz loc_419CC0  +
mov dword ptr [ebx] 0 +
mov eax esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test eax eax +
jz loc_419CDC  +
xor edx edx +
jmp loc_419CCA  +
mov eax ecx +
add edx 1 +
add ebx 4 +
cmp esi edx +
lea ecx [eax+18h] +
mov [ebx-4] eax +
ja loc_419CC8  +
jmp loc_419CAF  +
***
lea eax [esi+esi*2] +
shl eax 3 +
mov [esp+4] eax +
mov [esp] edi +
call sub_40E140  +
test eax eax +
jz loc_419D33  +
mov edx [edi+0A0h] +
mov ecx [edx+0Ch] +
mov [edx+14h] eax +
test ecx ecx +
jz loc_419CC4  +
mov edx eax +
mov ebp [ecx+4] +
add edx 18h +
mov [edx-18h] edi +
mov [edx-14h] ebp +
mov ebp [ecx+8] +
mov ecx [ecx] +
mov dword ptr [edx-0Ch] 2 +
mov dword ptr [edx-8] offset off_47D510 +
mov [edx-10h] ebp +
mov dword ptr [edx-4] 0 +
test ecx ecx +
jnz loc_419D04  +
jmp loc_419CC4  +
***
mov eax 0FFFFFFFFh +
jmp loc_419CB7  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+50h] +
mov edx [esp+60h] +
mov eax [esp+5Ch] +
mov [esp] ebx +
mov [esp+14h] edx +
mov [esp+10h] eax +
call sub_4102D0  +
mov esi [ebx+0A0h] +
mov dword ptr [esp+4] 10h +
mov [esp] ebx +
mov ebp eax +
call sub_40E140  +
test eax eax +
mov edi eax +
jz loc_419ED3  +
mov ecx [esp+64h] +
test ecx ecx +
jz loc_419D9C  +
mov eax [esp+54h] +
mov eax [eax+14h] +
and eax 3 +
cmp eax 3 +
jz loc_419DB0  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+64h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_40E140  +
test eax eax +
mov ecx eax +
mov [esp+20h] eax +
jz loc_419ED3  +
mov eax [esp+64h] +
mov [esp] ecx +
mov [esp+8] eax +
mov eax [esp+58h] +
mov [esp+4] eax +
call memcpy  +
mov edx ds:dword_4A86C0 +
test edx edx +
jnz loc_419EE0  +
mov eax [esp+54h] +
xor ebx ebx +
mov [esp+18h] ebp +
mov dword ptr [esp+2Ch] 0 +
mov eax [eax+20h] +
mov [esp+8] ebp +
mov ecx eax +
mov [esp+24h] eax +
mov eax ebp +
mov [esp+28h] ecx +
mov ecx [esp+64h] +
cdq   +
add ecx [esp+10h] +
adc ebx [esp+14h] +
mov [esp+0Ch] edx +
mov [esp] ecx +
mov [esp+4] ebx +
mov [esp+1Ch] edx +
call sub_47A200  +
add eax [esp+28h] +
adc edx [esp+2Ch] +
cmp edx 0 +
jl loc_419F15  +
jle loc_419F1E  +
mov ebx [esp+24h] +
mov dword ptr [esi+8] 3 +
lea esi [esi+0] +
mov eax [esp+20h] +
mov edx [esp+1Ch] +
mov [edi+4] eax +
mov eax [esp+18h] +
mov [esp+0Ch] edx +
mov edx [esp+14h] +
mov [esp+8] eax +
mov eax [esp+10h] +
mov [esp+4] edx +
mov [esp] eax +
call sub_47A200  +
add ebx eax +
mov eax [esp+64h] +
mov [edi+8] ebx +
mov [edi+0Ch] eax +
mov eax [esi+4] +
test eax eax +
jz loc_419EA3  +
cmp ebx [eax+8] +
jnb loc_419F00  +
mov edx [esi] +
mov eax esi +
test edx edx +
jnz loc_419EB8  +
jmp loc_419EBD  +
mov eax edx +
mov edx [edx] +
test edx edx +
jz loc_419EBD  +
cmp ebx [edx+8] +
ja loc_419EB0  +
mov [edi] edx +
mov [eax] edi +
mov eax [edi] +
test eax eax +
jnz loc_419D9C  +
mov [esi+4] edi +
jmp loc_419D9C  +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+54h] +
mov [esp+18h] ebp +
sar ebp 1Fh +
mov dword ptr [esi+8] 3 +
mov [esp+1Ch] ebp +
mov ebx [eax+20h] +
jmp loc_419E60  +
***
mov [eax] edi +
mov eax 1 +
mov dword ptr [edi] 0 +
mov [esi+4] edi +
jmp loc_419DA1  +
***
mov ebx [esp+24h] +
jmp loc_419E60  +
***
cmp eax 10000h +
jbe loc_419F15  +
cmp edx 0 +
jg loc_419E51  +
nop   +
jl loc_419F3D  +
cmp eax 1000000h +
ja loc_419E51  +
cmp dword ptr [esi+8] 2 +
ja loc_419E51  +
mov dword ptr [esi+8] 2 +
mov ebx [esp+24h] +
jmp loc_419E60  +
***
mov eax [esp+8] +
mov edx [esp+4] +
test eax eax +
jnz loc_419F80  +
mov dword ptr [edx+84h] offset asc_4833C0 +
mov eax 1 +
retn   +
***
jmp sub_410250  +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_41DF10  +
***
push esi  +
push ebx  +
sub esp 23Ch +
cmp edx 9 +
mov [esp+23Ch+var_220] eax +
mov eax ecx +
mov edi [esp+23Ch+arg_4] +
lea ecx [edx+30h] +
mov byte ptr [esp+23Ch+var_210] 53h +
mov byte ptr [esp+23Ch+var_210+1] cl +
ja loc_41A050  +
mov ebx 1 +
mov ecx edx +
shl ebx cl +
test ebx 203h +
jz loc_41A145  +
lea ebp [esp+23Ch+var_20C] +
xor esi esi +
mov ecx eax +
movzx ebx al +
shr ecx 8 +
add ebp 4 +
mov edx ecx +
movzx ecx cl +
and edx 0Fh +
add ebx ecx +
movzx edx ds:byte_486594[edx] +
add ebx esi +
mov [ebp-3] dl +
mov edx eax +
shr edx 0Ch +
and edx 0Fh +
movzx edx ds:byte_486594[edx] +
mov [ebp-4] dl +
mov edx eax +
and edx 0Fh +
movzx edx ds:byte_486594[edx] +
mov [ebp-1] dl +
mov edx eax +
shr edx 4 +
and edx 0Fh +
movzx edx ds:byte_486594[edx] +
mov [ebp-2] dl +
jmp loc_41A056  +
lea ebp [esp+23Ch+var_20C] +
xor ebx ebx +
cmp [esp+23Ch+arg_0] edi +
jnb loc_41A0B1  +
mov eax [esp+23Ch+arg_0] +
mov edx ebp +
mov [esp+23Ch+var_224] ebx +
lea esi [esi+0] +
movzx ecx byte ptr [eax] +
add eax 1 +
add edx 2 +
add [esp+23Ch+var_224] ecx +
mov esi ecx +
and esi 0Fh +
movzx ebx ds:byte_486594[esi] +
mov [edx-1] bl +
mov ebx ecx +
shr bl 4 +
movzx esi bl +
movzx ebx ds:byte_486594[esi] +
mov [edx-2] bl +
cmp eax edi +
jnz loc_41A070  +
sub eax [esp+23Ch+arg_0] +
mov ebx [esp+23Ch+var_224] +
lea ebp [ebp+eax*2+0] +
lea eax [esp+2Eh] +
mov edi ebp +
sub edi eax +
add ebp 4 +
mov esi edi +
shr esi 1Fh +
add esi edi +
mov ecx esi +
sar ecx 1 +
mov eax ecx +
movzx ecx cl +
and eax 0Fh +
add ebx ecx +
movzx eax ds:byte_486594[eax] +
not ebx  +
movzx ebx bl +
lea edx [esp+23Ch+var_210] +
mov byte ptr [esp+23Ch+var_210+3] al +
mov eax esi +
sar eax 5 +
and eax 0Fh +
movzx eax ds:byte_486594[eax] +
mov byte ptr [ebp-1] 0Ah +
mov byte ptr [esp+23Ch+var_210+2] al +
mov eax ebx +
and eax 0Fh +
movzx eax ds:byte_486594[eax] +
shr ebx 4 +
mov byte ptr [ebp-2] 0Dh +
mov [ebp-3] al +
movzx eax ds:byte_486594[ebx] +
mov [ebp-4] al +
mov eax [esp+23Ch+var_220] +
sub ebp edx +
mov [esp+23Ch+var_238] ebp +
mov [esp+23Ch+var_23C] edx +
mov [esp+23Ch+var_234] eax +
call sub_411CB0  +
cmp eax ebp +
setz al  +
add esp 23Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx 104h +
jnz loc_41A184  +
and ebx 88h +
jz loc_41A050  +
mov ebx eax +
shr ebx 18h +
mov edx ebx +
and edx 0Fh +
movzx edx ds:byte_486594[edx] +
lea ebp [esp+23Ch+var_20C+2] +
mov byte ptr [esp+23Ch+var_20C+1] dl +
mov edx eax +
shr edx 1Ch +
movzx edx ds:byte_486594[edx] +
mov byte ptr [esp+23Ch+var_20C] dl +
jmp loc_41A18A  +
lea ebp [esp+23Ch+var_20C] +
xor ebx ebx +
mov ecx eax +
add ebp 2 +
shr ecx 10h +
mov edx ecx +
movzx ecx cl +
and edx 0Fh +
movzx edx ds:byte_486594[edx] +
lea esi [ebx+ecx] +
mov [ebp-1] dl +
mov edx eax +
shr edx 14h +
and edx 0Fh +
movzx edx ds:byte_486594[edx] +
mov [ebp-2] dl +
jmp loc_419FF3  +
***
mov eax ds:dword_4A86C4 +
mov ebx [esp+18h+arg_0] +
test eax eax +
jz loc_41A220  +
mov [esp+18h+var_14] 18h +
mov [esp+18h+var_18] ebx +
call sub_40E140  +
test eax eax +
jz loc_41A231  +
mov [ebx+0A0h] eax +
mov dword ptr [eax+8] 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov ds:dword_4A86C4 1 +
call nullsub_1  +
jmp loc_41A1D1  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov edx [esp+2Ch] +
mov eax [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
test edx edx +
jz loc_41A290  +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] eax +
call sub_41DBD0  +
mov eax [ebx+10h] +
mov edx [ebx+4] +
mov eax [eax] +
mov [esp+20h] esi +
mov [esp+2Ch] edx +
mov dword ptr [esp+24h] offset a5sS +
mov [esp+28h] eax +
add esp 14h +
pop ebx  +
pop esi  +
jmp fprintf  +
***
mov eax [ebx+4] +
mov [esp+20h] eax +
add esp 14h +
pop ebx  +
pop esi  +
jmp fputs  +
***
jmp sub_41A2B0  +
***
sub esp 28h +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_9] +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_28] eax +
call sub_411C00  +
cmp eax 1 +
jz loc_41A2F0  +
call sub_410390  +
mov edx eax +
mov eax 0FFFFFFFFh +
cmp edx 12h +
jz loc_41A2EA  +
mov dword ptr [ebx] 1 +
add esp 28h +
pop ebx  +
retn   +
movzx eax byte ptr [esp+28h+var_9] +
add esp 28h +
pop ebx  +
retn   +
***
push ebp  +
mov eax 1 +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp [esp+74h] +
mov esi [esp+6Ch] +
mov edi [esp+70h] +
test ebp ebp +
jz loc_41A338  +
mov eax esi +
xor ebx ebx +
mov edx edi +
add eax ebp +
adc edx ebx +
cmp ebx edx +
jle loc_41A340  +
mov dword ptr [esp] 5 +
call sub_4105E0  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jge loc_41A385  +
mov ebx [esp+64h] +
cmp edx 0 +
mov ecx [ebx+24h] +
jl loc_41A354  +
jg loc_41A32A  +
cmp eax ecx +
ja loc_41A32A  +
mov eax [esp+64h] +
mov eax [eax+8Ch] +
test eax eax +
jz loc_41A390  +
add eax esi +
mov [esp+4] eax +
mov eax [esp+68h] +
mov [esp+8] ebp +
mov [esp] eax +
call memcpy  +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp ebp eax +
ja loc_41A32A  +
jmp loc_41A342  +
***
mov eax [esp+60h] +
mov [esp+4] ecx +
mov [esp] eax +
call sub_40E140  +
mov edx [esp+64h] +
mov ebx eax +
mov [esp+24h] eax +
mov [edx+8Ch] eax +
xor eax eax +
test ebx ebx +
jz loc_41A338  +
mov eax edx +
mov edx [edx+54h] +
mov eax [eax+50h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+3Ch] 0 +
mov [esp+8] edx +
mov [esp+4] eax +
mov eax [esp+60h] +
mov [esp] eax +
call sub_411E10  +
test eax eax +
jnz loc_41A562  +
mov dword ptr [esp+20h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 0 +
mov [esp+28h] esi +
mov [esp+2Ch] edi +
mov [esp+74h] ebp +
nop   +
mov eax [esp+60h] +
lea edx [esp+3Ch] +
call sub_41A2B0  +
cmp eax 0FFFFFFFFh +
jz loc_41A6A2  +
cmp eax 0Ah +
jz loc_41A410  +
cmp eax 0Dh +
nop   +
jz loc_41A410  +
cmp eax 53h +
jz loc_41A44B  +
mov dword ptr [esp+4] 2E3h +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_410530  +
mov eax [esp+60h] +
mov dword ptr [esp+4] 3 +
mov [esp+8] eax +
lea eax [esp+39h] +
mov [esp] eax +
call sub_411C00  +
cmp eax 3 +
jnz loc_41A552  +
movzx eax byte ptr [esp+3Ah] +
movzx eax ds:byte_4A07C0[eax] +
cmp al 63h +
jz loc_41A570  +
movzx edx byte ptr [esp+3Bh] +
movzx edx ds:byte_4A07C0[edx] +
cmp dl 63h +
jz loc_41A570  +
shl eax 4 +
lea ebp [eax+edx] +
lea ebx [ebp+ebp+0] +
cmp ebx [esp+20h] +
jbe loc_41A4D1  +
mov eax [esp+18h] +
test eax eax +
jz loc_41A4B9  +
mov [esp] eax +
call free  +
mov [esp] ebx +
call sub_412BD0  +
test eax eax +
mov [esp+18h] eax +
jz loc_41A562  +
mov [esp+20h] ebx +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+18h] +
mov [esp] eax +
call sub_411C00  +
cmp ebx eax +
jnz loc_41A552  +
movzx eax byte ptr [esp+39h] +
cmp al 32h +
jz loc_41A68C  +
cmp al 33h +
jz loc_41A5A1  +
cmp al 31h +
jz loc_41A697  +
mov eax [esp+64h] +
mov ebx [esp+1Ch] +
mov esi [esp+28h] +
mov ebp [esp+74h] +
cmp [eax+24h] ebx +
jz loc_41A533  +
mov dword ptr [esp+4] 2FEh +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_410530  +
mov eax [esp+18h] +
test eax eax +
jz loc_41A543  +
mov [esp] eax +
call free  +
mov eax [esp+64h] +
mov eax [eax+8Ch] +
jmp loc_41A362  +
***
mov eax [esp+18h] +
test eax eax +
jz loc_41A562  +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_41A338  +
***
mov dword ptr [esp+4] 2E8h +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_410530  +
movzx eax byte ptr [esp+3Ah] +
movzx edx byte ptr [esp+3Bh] +
movzx eax ds:byte_4A07C0[eax] +
movzx edx ds:byte_4A07C0[edx] +
jmp loc_41A499  +
***
mov edi [esp+18h] +
sub ebp 1 +
movzx eax byte ptr [edi] +
lea edx [edi+2] +
movzx ecx byte ptr [edi+1] +
movzx eax ds:byte_4A07C0[eax] +
movzx ebx ds:byte_4A07C0[ecx] +
shl eax 4 +
add ebx eax +
shl ebx 8 +
movzx eax byte ptr [edx] +
lea ecx [edx+2] +
sub ebp 1 +
movzx edx byte ptr [edx+1] +
movzx eax ds:byte_4A07C0[eax] +
movzx edx ds:byte_4A07C0[edx] +
shl eax 4 +
add edx eax +
or edx ebx +
shl edx 8 +
movzx eax byte ptr [ecx] +
movzx ebx byte ptr [ecx+1] +
mov edi [esp+64h] +
movzx eax ds:byte_4A07C0[eax] +
movzx ebx ds:byte_4A07C0[ebx] +
shl eax 4 +
add eax ebx +
movzx ebx byte ptr [ecx+2] +
or eax edx +
lea edx [ecx+4] +
movzx ecx byte ptr [ecx+3] +
shl eax 8 +
movzx ebx ds:byte_4A07C0[ebx] +
movzx ecx ds:byte_4A07C0[ecx] +
shl ebx 4 +
add ecx ebx +
or eax ecx +
mov ecx [esp+1Ch] +
add ecx [edi+1Ch] +
cmp eax ecx +
jnz loc_41A6E0  +
cmp ebp 3 +
jz loc_41A410  +
mov eax [esp+24h] +
lea edi [ebp-3] +
xor ecx ecx +
mov esi [esp+1Ch] +
add esi eax +
movzx eax byte ptr [edx] +
add edx 2 +
movzx ebx byte ptr [edx-1] +
movzx eax ds:byte_4A07C0[eax] +
shl eax 4 +
add al ds:byte_4A07C0[ebx] +
mov [esi+ecx] al +
add ecx 1 +
cmp ecx edi +
jnz loc_41A657  +
mov eax [esp+1Ch] +
lea eax [ebp+eax-3] +
mov [esp+1Ch] eax +
jmp loc_41A410  +
***
mov edx [esp+18h] +
xor ebx ebx +
jmp loc_41A5C8  +
***
mov ecx [esp+18h] +
xor edx edx +
jmp loc_41A5ED  +
***
mov eax [esp+3Ch] +
mov esi [esp+28h] +
mov ebp [esp+74h] +
test eax eax +
jnz loc_41A552  +
mov eax [esp+64h] +
mov ebx [esp+1Ch] +
cmp ebx [eax+24h] +
jz loc_41A533  +
mov dword ptr [esp+4] 32Eh +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_410530  +
jmp loc_41A533  +
***
mov eax [esp+64h] +
mov ebx [esp+1Ch] +
mov esi [esp+28h] +
mov ebp [esp+74h] +
cmp ebx [eax+24h] +
jz loc_41A533  +
mov dword ptr [esp+4] 317h +
mov dword ptr [esp] offset a____Binutil_18 +
call sub_410530  +
jmp loc_41A533  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
test edx edx +
mov [esp+10h] eax +
mov eax [eax+0A0h] +
mov [esp+1Ch] eax +
jz loc_41A748  +
mov eax [esp+10h] +
mov ebx [eax+7Ch] +
test ebx ebx +
jnz loc_41A894  +
mov esi [esp+10h] +
mov ebx [esi] +
mov [esp] ebx +
call strlen  +
mov edx 28h +
mov [esp] ebx +
cmp eax 28h +
cmovbe edx eax +
xor ecx ecx +
add edx ebx +
mov eax esi +
mov [esp+4] edx +
xor edx edx +
call sub_419FB0  +
test eax eax +
jz loc_41A82A  +
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+0Ch] eax +
jz loc_41A846  +
nop   +
mov eax [esp+0Ch] +
mov edi [eax+4] +
mov eax dword_47DA04 +
test eax eax +
jnz loc_41A875  +
mov dword_47DA04 1 +
mov eax [esp+0Ch] +
mov ebx [eax+0Ch] +
test ebx ebx +
jz loc_41A834  +
xor ebp ebp +
mov eax ebp +
mov ebp edi +
mov edi eax +
jmp loc_41A7D2  +
mov eax [esp+0Ch] +
add edi ebx +
mov ebx [eax+0Ch] +
cmp ebx edi +
jbe loc_41A834  +
mov ebp esi +
mov eax dword_47DA04 +
sub ebx edi +
cmp ebx eax +
cmova ebx eax +
mov eax [esp+0Ch] +
lea esi [ebp+ebx+0] +
mov edx [eax+8] +
mov eax [esp+10h] +
mov [esp+14h] edx +
mov [esp] eax +
call sub_4102D0  +
mov edx [esp+1Ch] +
mov edx [edx+8] +
mov [esp+4] esi +
mov ecx eax +
mov eax edi +
mov [esp] ebp +
mov [esp+18h] edx +
xor edx edx +
div  ecx +
mov ecx [esp+14h] +
mov edx [esp+18h] +
add ecx eax +
mov eax [esp+10h] +
call sub_419FB0  +
test eax eax +
jnz loc_41A7C3  +
add esp 5Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0Ch] +
mov eax [eax] +
test eax eax +
mov [esp+0Ch] eax +
jnz loc_41A790  +
mov eax [esp+10h] +
mov edx 0Ah +
mov esi [esp+1Ch] +
mov ecx [eax+74h] +
sub edx [esi+8] +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_419FB0  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+1Ch] +
mov edx 0FDh +
sub edx [esi+8] +
cmp eax edx +
jbe loc_41A7AE  +
mov dword_47DA04 edx +
jmp loc_41A7AE  +
***
mov esi [eax+78h] +
mov edi eax +
mov eax [eax] +
mov [esp+0Ch] esi +
mov [esp] eax +
call strlen  +
mov [esp+8] edi +
mov dword ptr [esp+4] 3 +
mov dword ptr [esp] offset asc_486143 +
mov esi eax +
call sub_411CB0  +
cmp eax 3 +
jnz loc_41A82A  +
mov edi [esp+10h] +
mov eax [edi] +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] eax +
call sub_411CB0  +
cmp esi eax +
jnz loc_41A82A  +
mov eax [esp+10h] +
mov dword ptr [esp+4] 2 +
mov dword ptr [esp] offset asc_486147 +
mov [esp+8] eax +
call sub_411CB0  +
cmp eax 2 +
jnz loc_41A82A  +
xor edi edi +
test ebx ebx +
lea ebp [esp+27h] +
jle loc_41AA32  +
mov [esp+14h] ebx +
jmp loc_41A92E  +
add edi 1 +
cmp [esp+14h] edi +
jz loc_41AA32  +
mov eax [esp+0Ch] +
mov ebx [eax+edi*4] +
mov eax [esp+10h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41DB50  +
test eax eax +
jnz loc_41A921  +
test byte ptr [ebx+0Ch] 4 +
jnz loc_41A921  +
mov eax [ebx+4] +
mov [esp] eax +
call strlen  +
mov dword ptr [esp+4] 2 +
mov dword ptr [esp] offset asc_486150 +
mov esi eax +
mov eax [esp+10h] +
mov [esp+8] eax +
call sub_411CB0  +
cmp eax 2 +
jnz loc_41A82A  +
mov eax [ebx+4] +
mov ecx [esp+10h] +
mov [esp+4] esi +
mov [esp] eax +
mov [esp+8] ecx +
call sub_411CB0  +
cmp esi eax +
jnz loc_41A82A  +
mov ecx [ebx+10h] +
mov eax [ecx+3Ch] +
mov eax [eax+20h] +
add eax [ebx+8] +
add eax [ecx+38h] +
mov dword ptr [esp+4] offset a08lx_0 +
mov [esp] ebp +
mov [esp+8] eax +
call sprintf  +
cmp byte ptr [esp+27h] 30h +
jnz loc_41AA2E  +
movzx eax byte ptr [esp+28h] +
mov esi ebp +
test al al +
jnz loc_41A9DF  +
jmp loc_41A9E6  +
movzx eax byte ptr [esi+1] +
test al al +
jz loc_41A9E6  +
add esi 1 +
cmp al 30h +
jz loc_41A9D7  +
mov [esp] esi +
sub esi 2 +
call strlen  +
mov byte ptr [esi+eax+2] 0Dh +
lea edx [eax+4] +
mov byte ptr [esi+eax+3] 0Ah +
mov eax [esp+10h] +
mov byte ptr [esi+1] 24h +
mov byte ptr [esi] 20h +
mov [esp+4] edx +
mov [esp+8] eax +
mov [esp] esi +
mov [esp+18h] edx +
call sub_411CB0  +
mov edx [esp+18h] +
cmp edx eax +
jz loc_41A921  +
jmp loc_41A82A  +
***
mov esi ebp +
jmp loc_41A9E6  +
***
mov eax [esp+10h] +
mov dword ptr [esp+4] 5 +
mov dword ptr [esp] offset asc_48614A +
mov [esp+8] eax +
call sub_411CB0  +
cmp eax 5 +
jnz loc_41A82A  +
jmp loc_41A748  +
***
mov eax [esp+4] +
xor edx edx +
jmp loc_41A720  +
***
mov eax [esp+4] +
mov edx 1 +
jmp loc_41A720  +
***
sub esp 54h +
cmp ecx 0FFFFFFFFh +
jz loc_41AAD1  +
mov ebx eax +
movzx eax cl +
test ds:byte_49F240[eax+eax] 10h +
jz loc_41AAE7  +
mov byte ptr [esp+54h+var_2C] cl +
lea esi [esp+54h+var_2C] +
mov byte ptr [esp+54h+var_2C+1] 0 +
mov [esp+54h+var_48] esi +
mov [esp+54h+var_4C] edx +
mov [esp+54h+var_50] ebx +
mov [esp+54h+var_54] offset aBDUnexpectedCh +
call off_47D664  +
mov [esp+54h+var_54] 11h +
call sub_4105E0  +
add esp 54h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+54h+arg_0] +
test eax eax +
jnz loc_41AACB  +
mov [esp+54h+var_54] 12h +
call sub_4105E0  +
jmp loc_41AACB  +
lea esi [esp+54h+var_2C] +
mov [esp+54h+var_4C] eax +
mov [esp+54h+var_50] offset a03o +
mov [esp+54h+var_54] esi +
mov [esp+54h+var_38] edx +
call sprintf  +
mov edx [esp+54h+var_38] +
jmp loc_41AAA6  +
***
push edi  +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_41A2B0  +
cmp eax 0FFFFFFFFh +
jz loc_41B1FE  +
cmp eax 0Dh +
jz loc_41AB8B  +
cmp eax 53h +
jnz loc_41ACB0  +
cmp eax 20h +
nop   +
jz loc_41ACD0  +
jle loc_41ADB5  +
cmp eax 24h +
nop   +
jz loc_41AD9B  +
cmp eax 53h +
jnz loc_41ADC3  +
mov [esp+0] ebp +
call sub_411D30  +
mov [esp+arg_4] ebp +
mov [esp+arg_0] 3 +
mov [esp+arg_2C] eax +
lea eax [esp+arg_41] +
mov [esp+0] eax +
mov [esp+arg_30] edx +
call sub_411C00  +
cmp eax 3 +
jnz loc_41AE44  +
movzx ecx byte ptr [esp+46h] +
movzx eax ds:byte_4A07C0[ecx] +
cmp al 63h +
jz loc_41B2F1  +
movzx ecx [esp+arg_43] +
movzx edx ds:byte_4A07C0[ecx] +
cmp dl 63h +
jz loc_41B2F1  +
shl eax 4 +
lea esi [eax+edx] +
movzx eax [esp+arg_41] +
mov ebx esi +
cmp al 38h +
jz loc_41AE62  +
cmp al 32h +
jz loc_41AE62  +
and eax 0FFFFFFFBh +
cmp al 33h +
setz al  +
movzx eax al +
lea eax [eax+eax+3] +
cmp eax esi +
ja loc_41B308  +
lea edi [esi+esi] +
cmp [esp+arg_34] edi +
jnb loc_41AC6E  +
mov eax [esp+arg_20] +
test eax eax +
jz loc_41AC56  +
mov [esp+0] eax +
call free  +
mov [esp+0] edi +
call sub_412BD0  +
test eax eax +
mov [esp+arg_20] eax +
jz loc_41AD88  +
mov [esp+arg_34] edi +
mov eax [esp+arg_20] +
mov [esp+arg_4] ebp +
mov [esp+arg_0] edi +
mov [esp+0] eax +
call sub_411C00  +
cmp edi eax +
jnz loc_41AE44  +
lea eax [esi-1] +
mov [esp+arg_18] eax +
movzx eax [esp+arg_41] +
sub eax 30h +
cmp al 9 +
ja sub_41AB69  +
movzx eax al +
jmp ds:off_4861E4[eax*4]  +
***
cmp eax 0Ah +
jz loc_41ADAB  +
cmp eax 20h +
mov [esp+arg_28] 0 +
jnz loc_41AB96  +
lea esi [esi+0] +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_41A2B0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_41AE2D  +
cmp eax 9 +
jz loc_41ACD0  +
cmp eax 20h +
jz loc_41ACD0  +
cmp eax 0Ah +
jz loc_41B2DD  +
cmp eax 0Dh +
jz loc_41B2DD  +
mov dword ptr [esp+0] 0Bh +
call sub_412BD0  +
test eax eax +
mov esi eax +
jz loc_41AE44  +
mov [eax] bl +
lea edi [eax+1] +
mov ebx 0Ah +
jmp loc_41AD29  +
mov [edi] dl +
add edi 1 +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_41A2B0  +
cmp eax 0FFFFFFFFh +
mov edx eax +
jz loc_41B336  +
movzx eax al +
test ds:byte_49F240[eax+eax] 40h +
jnz loc_41ADE0  +
mov ecx edi +
sub ecx esi +
cmp ebx ecx +
ja loc_41AD24  +
add ebx ebx +
lea eax [ebx+1] +
mov [esp+arg_0] eax +
mov [esp+0] esi +
mov [esp+arg_1C] ecx +
mov [esp+arg_18] edx +
call sub_412C60  +
test eax eax +
jz loc_41B34D  +
mov ecx [esp+arg_1C] +
mov esi eax +
mov edx [esp+arg_18] +
lea edi [eax+ecx] +
jmp loc_41AD24  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 0FFFFFFFFh +
jz loc_41AE2D  +
lea edx [esp-7Ch+arg_C0] +
mov eax ebp +
call sub_41A2B0  +
cmp eax 0Ah +
jnz loc_41AD92  +
add [esp-7Ch+arg_A0] 1 +
jmp sub_41AB69  +
cmp eax 0Ah +
jz loc_41ADAB  +
cmp eax 0Dh +
jz sub_41AB69  +
mov edx [esp+arg_44] +
mov ecx eax +
mov eax ebp +
mov [esp+0] edx +
mov edx [esp+arg_24] +
call sub_41AA80  +
jmp loc_41AE44  +
***
mov eax [esp+arg_20] +
mov eax [esp+arg_20] +
mov eax [esp+arg_20] +
mov eax [esp+arg_20] +
mov [esp+arg_28] 0 +
mov edi ebx +
mov edi [esp+arg_20] +
movzx eax byte ptr [edi] +
movzx edx ds:byte_4A07C0[eax] +
movzx eax byte ptr [edi+1] +
movzx ecx ds:byte_4A07C0[eax] +
mov eax edx +
shl eax 4 +
shl edx 4 +
lea ebx [ecx+esi] +
add ecx edx +
add ebx eax +
mov eax edi +
lea edi [esi-2] +
add eax 2 +
mov [esp+arg_18] edi +
shl ecx 8 +
jmp loc_41AF6B  +
***
mov eax [esp+arg_20] +
test eax eax +
jz loc_41B1F4  +
mov [esp+0] eax +
call free  +
mov eax 1 +
jmp loc_41AD8A  +
mov eax [esp+arg_44] +
test eax eax +
jnz loc_41AE44  +
mov ebx [esp+arg_20] +
mov eax 1 +
test ebx ebx +
jz loc_41AD8A  +
mov [esp+0] ebx +
mov [esp+arg_18] eax +
call free  +
mov eax [esp+arg_18] +
jmp loc_41AD8A  +
***
add eax edi +
mov [ecx+24h] eax +
jmp loc_41B0E4  +
***
cmp eax 20h +
jz loc_41AE1D  +
cmp eax 24h +
mov ebx eax +
jz loc_41B35A  +
xor esi esi +
mov eax ebx +
jmp loc_41B279  +
***
shl esi 4 +
mov eax ebp +
add esi edx +
lea edx [esp+arg_44] +
call sub_41A2B0  +
cmp eax 0FFFFFFFFh +
jz loc_41AE2D  +
movzx edx al +
movzx edx ds:byte_4A07C0[edx] +
cmp dl 63h +
jnz loc_41B260  +
mov [esp+arg_0] 0Ch +
mov ebx eax +
mov [esp+0] ebp +
call sub_40E140  +
test eax eax +
jz loc_41AE44  +
mov [eax+4] edi +
mov [eax+8] esi +
mov edx [ebp+0A0h] +
mov ecx [edx+0Ch] +
test ecx ecx +
jz loc_41B375  +
mov ecx [edx+10h] +
mov [ecx] eax +
mov [edx+10h] eax +
mov dword ptr [eax] 0 +
add dword ptr [ebp+7Ch] 1 +
cmp ebx 9 +
jz loc_41ACD0  +
cmp ebx 20h +
jz loc_41ACD0  +
cmp ebx 0Ah +
jz loc_41ADAB  +
cmp ebx 0Dh +
jz sub_41AB69  +
mov ecx ebx +
mov eax [esp+arg_44] +
mov edx [esp+arg_24] +
mov [esp+0] eax +
mov eax ebp +
call sub_41AA80  +
jmp loc_41AE44  +
mov eax [esp+arg_24] +
mov [esp+arg_8] esi +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBDByteCountDTo +
mov [esp+arg_4] eax +
call off_47D664  +
mov dword ptr [esp+0] 11h +
call sub_4105E0  +
jmp loc_41AE44  +
mov eax [esp+arg_44] +
mov ecx 0FFFFFFFFh +
mov edx [esp+arg_24] +
mov [esp+0] eax +
mov eax ebp +
call sub_41AA80  +
mov [esp+0] esi +
call free  +
jmp loc_41AE44  +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_41A2B0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_41B254  +
jmp loc_41AE2D  +
mov [edx+0Ch] eax +
jmp loc_41B2BE  +
***
push esi  +
push ebx  +
sub esp 24h +
mov edx ds:dword_4A86C4 +
mov ebx [esp+30h] +
test edx edx +
jz loc_41B455  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_411E10  +
test eax eax +
jnz loc_41B44D  +
lea eax [esp+1Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_411C00  +
cmp eax 4 +
jnz loc_41B44D  +
cmp byte ptr [esp+1Ch] 53h +
jnz loc_41B441  +
movzx eax byte ptr [esp+1Dh] +
cmp ds:byte_4A07C0[eax] 63h +
jz loc_41B441  +
movzx eax byte ptr [esp+1Eh] +
cmp ds:byte_4A07C0[eax] 63h +
jz loc_41B441  +
movzx eax byte ptr [esp+1Fh] +
cmp ds:byte_4A07C0[eax] 63h +
jz loc_41B441  +
mov esi [ebx+0A0h] +
mov [esp] ebx +
call sub_41A1C0  +
test eax eax +
jz loc_41B470  +
mov eax ebx +
call sub_41AB10  +
test eax eax +
jz loc_41B470  +
mov eax [ebx+7Ch] +
test eax eax +
jz loc_41B438  +
or dword ptr [ebx+28h] 200h +
mov eax [ebx+4] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4105E0  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov ds:dword_4A86C4 1 +
call nullsub_1  +
jmp loc_41B397  +
***
mov eax [ebx+0A0h] +
cmp eax esi +
jz loc_41B48A  +
test eax eax +
jz loc_41B48A  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_40E390  +
mov [ebx+0A0h] esi +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 24h +
mov edx ds:dword_4A86C4 +
mov ebx [esp+30h] +
test edx edx +
jz loc_41B554  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_411E10  +
test eax eax +
jnz loc_41B54C  +
lea eax [esp+1Eh] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 2 +
mov [esp] eax +
call sub_411C00  +
cmp eax 2 +
jnz loc_41B54C  +
cmp byte ptr [esp+1Eh] 24h +
jnz loc_41B540  +
cmp byte ptr [esp+1Fh] 24h +
jnz loc_41B540  +
mov esi [ebx+0A0h] +
mov [esp] ebx +
call sub_41A1C0  +
test eax eax +
jz loc_41B568  +
mov eax ebx +
call sub_41AB10  +
test eax eax +
jz loc_41B568  +
mov eax [ebx+7Ch] +
test eax eax +
jz loc_41B531  +
or dword ptr [ebx+28h] 200h +
mov eax [ebx+4] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4105E0  +
xor eax eax +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov ds:dword_4A86C4 1 +
call nullsub_1  +
jmp loc_41B4B7  +
***
mov eax [ebx+0A0h] +
cmp esi eax +
jz loc_41B582  +
test eax eax +
jz loc_41B582  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_40E390  +
mov [ebx+0A0h] esi +
xor eax eax +
jmp loc_41B54E  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov ebp [esp+3Ch] +
mov edi [ebx+0A0h] +
mov dword ptr [esp+4] 10h +
mov [esp] ebx +
call sub_40E140  +
test eax eax +
mov esi eax +
jz loc_41B663  +
mov edx [esp+44h] +
test edx edx +
jz loc_41B5D6  +
mov eax [esp+34h] +
mov eax [eax+14h] +
and eax 3 +
cmp eax 3 +
jz loc_41B5E3  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+44h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_40E140  +
test eax eax +
mov ebx eax +
jz loc_41B663  +
mov eax [esp+44h] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+38h] +
mov [esp+4] eax +
call memcpy  +
mov eax [esp+34h] +
mov [esi+4] ebx +
add ebp [eax+20h] +
mov eax [esp+44h] +
mov [esi+8] ebp +
mov [esi+0Ch] eax +
mov eax [edi+4] +
test eax eax +
jz loc_41B631  +
cmp ebp [eax+8] +
jnb loc_41B670  +
mov edx [edi] +
mov eax edi +
test edx edx +
jnz loc_41B648  +
jmp loc_41B64D  +
mov eax edx +
mov edx [edx] +
test edx edx +
jz loc_41B64D  +
cmp ebp [edx+8] +
ja loc_41B640  +
mov [esi] edx +
mov [eax] esi +
mov eax [esi] +
test eax eax +
jnz loc_41B5D6  +
mov [edi+4] esi +
jmp loc_41B5D6  +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [eax] esi +
mov eax 1 +
mov dword ptr [esi] 0 +
mov [edi+4] esi +
jmp loc_41B5DB  +
***
mov eax [esp+8] +
mov edx [esp+4] +
test eax eax +
jnz loc_41B6B0  +
mov dword ptr [edx+84h] offset asc_4833C0 +
mov eax 1 +
retn   +
***
jmp sub_410250  +
***
push ebx  +
sub esp 18h +
mov eax ds:dword_4A86C8 +
mov ebx [esp+20h] +
test eax eax +
jz loc_41B702  +
mov dword ptr [esp+4] 8 +
mov [esp] ebx +
call sub_40E140  +
test eax eax +
jz loc_41B713  +
mov [ebx+0A0h] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
mov ds:dword_4A86C8 1 +
call nullsub_1  +
jmp loc_41B6D1  +
***
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+80h] +
mov eax [eax+0A0h] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_41B8DA  +
lea edi [esp+2Eh] +
mov ebx [esp+1Ch] +
mov eax [ebx+8] +
mov esi [ebx+4] +
mov dword ptr [esp+4] 0Bh +
mov [esp] edi +
mov edx eax +
shr edx 18h +
mov ebp esi +
and edx 0Fh +
movzx edx ds:byte_486794[edx] +
mov byte ptr [esp+2Eh] 40h +
mov byte ptr [esp+37h] 0Dh +
mov byte ptr [esp+38h] 0Ah +
mov [esp+30h] dl +
mov edx eax +
shr edx 1Ch +
movzx edx ds:byte_486794[edx] +
mov [esp+2Fh] dl +
mov edx eax +
shr edx 10h +
and edx 0Fh +
movzx edx ds:byte_486794[edx] +
mov [esp+32h] dl +
mov edx eax +
shr edx 14h +
and edx 0Fh +
movzx edx ds:byte_486794[edx] +
mov [esp+31h] dl +
mov edx eax +
shr edx 8 +
and edx 0Fh +
movzx edx ds:byte_486794[edx] +
mov [esp+34h] dl +
mov edx eax +
shr edx 0Ch +
and edx 0Fh +
movzx edx ds:byte_486794[edx] +
mov [esp+33h] dl +
mov edx eax +
shr eax 4 +
and edx 0Fh +
and eax 0Fh +
movzx edx ds:byte_486794[edx] +
movzx eax ds:byte_486794[eax] +
mov [esp+36h] dl +
mov [esp+35h] al +
mov eax [esp+80h] +
mov [esp+8] eax +
call sub_411CB0  +
mov esi [ebx+0Ch] +
test esi esi +
jz loc_41B8C8  +
mov dword ptr [esp+14h] 0 +
mov eax esi +
sub eax [esp+14h] +
mov edx 10h +
mov esi ebp +
cmp eax 10h +
cmova eax edx +
lea ebp [ebp+eax+0] +
cmp ebp esi +
mov [esp+18h] eax +
jbe loc_41B8E7  +
mov edx esi +
mov eax edi +
movzx ebx byte ptr [edx] +
add edx 1 +
add eax 3 +
mov ecx ebx +
and ecx 0Fh +
movzx ecx ds:byte_486794[ecx] +
shr bl 4 +
movzx ebx bl +
mov [eax-2] cl +
movzx ecx ds:byte_486794[ebx] +
mov [eax-3] cl +
cmp edx ebp +
mov byte ptr [eax-1] 20h +
jnz loc_41B846  +
add esi 1 +
mov eax 1 +
sub eax esi +
add eax ebp +
lea ebx [eax+eax*2] +
add ebx edi +
mov eax [esp+80h] +
add ebx 2 +
mov byte ptr [ebx-2] 0Dh +
mov byte ptr [ebx-1] 0Ah +
sub ebx edi +
mov [esp+4] ebx +
mov [esp+8] eax +
mov [esp] edi +
call sub_411CB0  +
cmp ebx eax +
jnz loc_41B8EB  +
mov eax [esp+18h] +
add [esp+14h] eax +
mov eax [esp+1Ch] +
mov eax [eax+0Ch] +
cmp eax [esp+14h] +
ja loc_41B821  +
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jnz loc_41B746  +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx edi +
jmp loc_41B887  +
***
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 4 +
mov eax [eax] +
mov [esp+0Ch+var_C] edx +
movzx edx byte ptr [eax] +
movzx ebx ds:byte_4A07C0[edx] +
cmp bl 63h +
jz loc_41B982  +
test ebx ebx +
mov esi 0Fh +
lea edx [eax+1] +
lea ebp [ebx-1] +
cmovnz esi ebp +
cmp edx ecx +
jnb loc_41B994  +
movzx eax byte ptr [eax+1] +
movzx eax ds:byte_4A07C0[eax] +
cmp al 63h +
jz loc_41B982  +
sub esi 1 +
xor ebx ebx +
jmp loc_41B95C  +
cmp edx ecx +
jz loc_41B990  +
movzx eax byte ptr [edx] +
sub esi 1 +
movzx eax ds:byte_4A07C0[eax] +
cmp al 63h +
jz loc_41B982  +
shl ebx 4 +
add edx 1 +
mov ebp ebx +
movzx ebx al +
or ebx ebp +
cmp esi 0FFFFFFFFh +
jnz loc_41B947  +
mov eax 1 +
mov [edi] edx +
mov edi [esp+0Ch+var_C] +
mov [edi] ebx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_41B973  +
xor eax eax +
xor ebx ebx +
jmp loc_41B973  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi [edx] +
movzx ebx byte ptr [edi] +
movzx ebx ds:byte_4A07C0[ebx] +
cmp bl 63h +
jz loc_41BA00  +
movzx esi bl +
mov ebx 10h +
test esi esi +
lea ebp [edi+1] +
cmovz esi ebx +
cmp ebp [esp+4+arg_0] +
jnb loc_41BA0A  +
xor bl bl +
mov [esp+4+var_4] edx +
movzx edx byte ptr [edi+ebx+1] +
mov [eax+ebx] dl +
add ebx 1 +
cmp esi ebx +
ja loc_41B9D3  +
mov edx [esp+4+var_4] +
mov byte ptr [eax+ebx] 0 +
add ebp ebx +
xor eax eax +
cmp ebx esi +
mov [edx] ebp +
setz al  +
mov [ecx] esi +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebx ebx +
jmp loc_41B9E5  +
***
mov [ecx-4] edx +
mov edx [edx+18h] +
sub ecx 4 +
test edx edx +
jnz loc_41BA35  +
retn   +
***
mov eax [esp+4] +
mov eax [eax+7Ch] +
lea eax ds:4[eax*4] +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx 8 +
sub esp 0Ch +
mov esi [eax] +
mov [esp+18h+var_18] edx +
mov edi edx +
shr edi cl +
and edi 0Fh +
jnz loc_41BAA0  +
sub ebx 1 +
sub ecx 4 +
cmp ebx 1 +
jnz loc_41BA76  +
mov byte ptr [esi] 31h +
add esi 2 +
mov byte ptr [esi-1] 30h +
mov [eax] esi +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+18h+var_18] edx +
lea edi [ebx+30h] +
lea edx [esi+1] +
mov ebp edx +
mov [esp+18h+var_14] edx +
mov edx edi +
mov [esi] dl +
mov edx [esp+18h+var_18] +
lea edi [esi+ebx+1] +
mov [esp+18h+var_10] eax +
mov esi ebp +
mov ebp edx +
add esi 1 +
shr ebp cl +
sub ecx 4 +
and ebp 0Fh +
cmp esi edi +
movzx eax ss:byte_486AB4[ebp] +
mov [esi-1] al +
jnz loc_41BAC0  +
mov eax [esp+18h+var_10] +
add ebx [esp+18h+var_14] +
mov [eax] ebx +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
retn   +
***
push ebx  +
and edx 0FFFFE000h +
sub esp 14h +
mov eax [eax+0A0h] +
mov ebx [eax+0Ch] +
test ebx ebx +
jnz loc_41BB2A  +
jmp loc_41BB40  +
mov ebx [ebx+2104h] +
test ebx ebx +
jz loc_41BB40  +
cmp [ebx+2100h] edx +
jnz loc_41BB20  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
xor ebx ebx +
test ecx ecx +
mov [esp+18h+var_C] edx +
jz loc_41BB32  +
mov [esp+18h+var_14] 2108h +
mov [esp+18h+var_18] esi +
call sub_40E220  +
test eax eax +
jz loc_41BB32  +
mov ecx [esi+0A0h] +
mov ebx eax +
mov edx [esp+18h+var_C] +
mov ecx [ecx+0Ch] +
mov [eax+2100h] edx +
mov [eax+2104h] ecx +
mov edx [esi+0A0h] +
mov [edx+0Ch] eax +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 1Ch +
mov [esp] ebx +
call sub_40E220  +
test eax eax +
jz loc_41BBB5  +
mov [eax] ebx +
mov dword ptr [eax+18h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+28h] +
mov ebx [esp+24h] +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_410250  +
mov edx 1 +
test eax eax +
jnz loc_41BBF0  +
xor edx edx +
test ebx ebx +
setz dl  +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_41DF10  +
***
push edi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 10h +
test edx edx +
mov edi [eax] +
jz loc_41BDC5  +
mov [esp+14h+var_14] edx +
call strlen  +
cmp eax 0Fh +
jle loc_41BDB0  +
lea edx [edi+1] +
mov eax 0Fh +
mov byte ptr [edi] 30h +
lea edi [eax+1] +
xor ecx ecx +
lea esi [esi+0] +
movzx eax byte ptr [ebx+ecx] +
mov [edx+ecx] al +
add ecx 1 +
cmp ecx edi +
jnz loc_41BD90  +
add ecx edx +
mov [esi] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax eax +
jz loc_41BDC5  +
movzx ecx ds:byte_486AB4[eax] +
lea edx [edi+1] +
sub eax 1 +
mov [edi] cl +
jmp loc_41BD88  +
lea edx [edi+1] +
xor eax eax +
mov byte ptr [edi] 31h +
mov ebx offset asc_4867DC +
jmp loc_41BD88  +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] 10h +
mov [esp+18h+var_18] ebx +
call sub_40E140  +
test eax eax +
jz loc_41BE27  +
mov [ebx+0A0h] eax +
mov dword ptr [eax+4] 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_4] +
mov ebp [esp+4Ch+arg_0] +
mov ebx [esp+4Ch+arg_C] +
cmp eax 33h +
jz loc_41BF00  +
cmp eax 36h +
jnz loc_41BEF1  +
lea edx [esp+4Ch+var_20] +
mov ecx ebx +
lea eax [esp+4Ch+arg_8] +
call sub_41B900  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_41BEF6  +
mov eax [esp+4Ch+arg_8] +
movzx edx byte ptr [eax] +
mov ecx eax +
test dl dl +
jz loc_41BEF1  +
lea edi [ebx-1] +
cmp eax edi +
jnb loc_41BEF1  +
mov esi [esp+4Ch+var_20] +
jmp loc_41BE96  +
cmp eax edi +
jnb loc_41BEF1  +
mov ecx eax +
movzx ecx byte ptr [ecx+1] +
movzx edx ds:byte_4A07C0[edx] +
movzx ebx ds:byte_4A07C0[ecx] +
shl edx 4 +
add ebx edx +
jz loc_41BED9  +
mov edx esi +
mov ecx 1 +
mov eax ebp +
and esi 1FFFh +
call sub_41BB00  +
mov [eax+esi] bl +
shr esi 5 +
mov byte ptr [eax+esi+2000h] 1 +
mov eax [esp+4Ch+arg_8] +
mov esi [esp+4Ch+var_20] +
mov edx eax +
add esi 1 +
add eax 2 +
mov [esp+4Ch+arg_8] eax +
mov [esp+4Ch+var_20] esi +
movzx edx byte ptr [edx+2] +
test dl dl +
jnz loc_41BE90  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_4C] ebx +
lea ecx [esp+4Ch+var_28] +
lea edx [esp+4Ch+arg_8] +
lea eax [esp+4Ch+var_20] +
call sub_41B9A0  +
test eax eax +
jnz loc_41BF22  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] ebp +
call sub_40F280  +
test eax eax +
mov esi eax +
jz loc_41C162  +
lea eax [esi+1Ch] +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_38] eax +
mov edx [esp+4Ch+arg_8] +
cmp ebx edx +
jbe loc_41BEF1  +
movzx ecx byte ptr [edx] +
test cl cl +
jz loc_41BEF1  +
sub ecx 30h +
cmp cl 8 +
ja loc_41BF18  +
mov eax 1 +
shl eax cl +
test eax 1DDh +
jnz loc_41BFE0  +
test al 2 +
jz loc_41BF18  +
add edx 1 +
mov ecx ebx +
mov [esp+4Ch+arg_8] edx +
mov edx [esp+4Ch+var_38] +
lea eax [esp+4Ch+arg_8] +
call sub_41B900  +
test eax eax +
jz loc_41BF18  +
mov ecx ebx +
lea edx [esp+4Ch+var_24] +
lea eax [esp+4Ch+arg_8] +
call sub_41B900  +
test eax eax +
jz loc_41BF18  +
mov eax [esi+1Ch] +
mov edx [esp+4Ch+var_24] +
cmp eax edx +
jbe loc_41BFD0  +
mov [esp+4Ch+var_24] eax +
mov dword ptr [esi+24h] 0 +
mov edx [esp+4Ch+arg_8] +
mov dword ptr [esi+14h] 103h +
cmp ebx edx +
ja loc_41BF53  +
jmp loc_41BEF1  +
sub edx eax +
test edx edx +
mov [esi+24h] edx +
jns loc_41BFBB  +
xor eax eax +
jmp loc_41BF1A  +
mov [esp+4Ch+var_48] 1Ch +
mov [esp+4Ch+var_4C] ebp +
call sub_40E140  +
mov edi eax +
mov eax [esp+4Ch+arg_8] +
test edi edi +
movzx ecx byte ptr [eax] +
mov [esp+4Ch+var_31] cl +
jz loc_41BF18  +
add eax 1 +
mov [edi] ebp +
mov [esp+4Ch+arg_8] eax +
mov eax [ebp+0A0h] +
or dword ptr [ebp+28h] 200h +
add dword ptr [ebp+7Ch] 1 +
mov edx [eax+8] +
mov [edi+18h] edx +
lea edx [esp+4Ch+var_28] +
mov [eax+8] edi +
mov ecx edx +
mov [esp+4Ch+var_4C] ebx +
lea edx [esp+4Ch+arg_8] +
lea eax [esp+4Ch+var_20] +
call sub_41B9A0  +
test eax eax +
jz loc_41BF18  +
mov edx [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] ebp +
lea eax [edx+1] +
mov [esp+4Ch+var_48] eax +
call sub_40E140  +
test eax eax +
mov [edi+4] eax +
jz loc_41BF18  +
mov edx [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] eax +
add edx 1 +
mov [esp+4Ch+var_44] edx +
lea edx [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] edx +
call memcpy  +
movzx ecx [esp+4Ch+var_31] +
xor eax eax +
mov [edi+10h] esi +
cmp cl 34h +
setle al  +
add eax 1 +
mov [edi+0Ch] eax +
mov eax ecx +
and eax 0FFFFFFFBh +
cmp al 32h +
jnz loc_41C0D0  +
mov dword ptr [edi+10h] offset off_47D510 +
mov ecx ebx +
lea edx [esp+4Ch+var_24] +
lea eax [esp+4Ch+arg_8] +
call sub_41B900  +
test eax eax +
jz loc_41BF18  +
mov eax [esp+4Ch+var_24] +
sub eax [esi+1Ch] +
mov [edi+8] eax +
jmp loc_41BF4B  +
cmp al 33h +
jnz loc_41C0F0  +
mov eax [esi+14h] +
test al 20h +
jz loc_41C110  +
mov edx [esp+4Ch+var_30] +
test edx edx +
jz loc_41C1B7  +
mov eax [esp+4Ch+var_30] +
mov [edi+10h] eax +
jmp loc_41C0A5  +
cmp [esp+4Ch+var_31] 38h +
jz loc_41C0FE  +
cmp [esp+4Ch+var_31] 34h +
jnz loc_41C0A5  +
mov eax [esi+14h] +
test al 10h +
jnz loc_41C118  +
or eax 20h +
mov [esi+14h] eax +
jmp loc_41C0A5  +
or eax 10h +
mov [esi+14h] eax +
jmp loc_41C0A5  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_41C0E7  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] 0 +
call sub_40F2C0  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jnz loc_41C0E7  +
mov eax [esi+14h] +
mov edx [esi] +
and eax 0FFFFFFCFh +
or eax 20h +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] edx +
mov [esp+4Ch+var_4C] ebp +
call sub_40F660  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jnz loc_41C0E7  +
xor eax eax +
jmp loc_41BF1A  +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] ebp +
add eax 1 +
mov [esp+4Ch+var_48] eax +
call sub_40E140  +
test eax eax +
mov esi eax +
jz loc_41BF18  +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] esi +
add eax 1 +
mov [esp+4Ch+var_44] eax +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] eax +
call memcpy  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] ebp +
call sub_40F810  +
test eax eax +
mov esi eax +
jnz loc_41BF3C  +
xor eax eax +
jmp loc_41BF1A  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] 0 +
call sub_40F2C0  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jnz loc_41C0E7  +
mov eax [esi+14h] +
mov edx [esi] +
and eax 0FFFFFFCFh +
or eax 10h +
jmp loc_41C143  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_4] +
or eax [esp+2Ch+arg_0] +
jnz loc_41C2C8  +
mov eax [edx] +
mov ebx ecx +
mov edx 1 +
mov esi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_18] eax +
xor eax eax +
sub [esp+2Ch+var_18] ecx +
test esi esi +
jnz loc_41C24A  +
jmp loc_41C2B4  +
test eax eax +
jz loc_41C2C0  +
movzx edx byte ptr [eax+ebp] +
mov [ebx] dl +
add ebx 1 +
sub [esp+2Ch+arg_8] 1 +
jz loc_41C2B4  +
mov edx esi +
mov ecx [esp+2Ch+var_18] +
xor edi edi +
lea ebp [ebx+ecx] +
mov ecx [esp+2Ch+arg_C] +
mov esi ebp +
and ebp 1FFFh +
and esi 0FFFFE000h +
test ecx ecx +
jnz loc_41C273  +
xor ecx ecx +
cmp byte ptr [ebx] 0 +
setnz cl  +
mov edi ecx +
cmp esi edx +
jnz loc_41C280  +
test edi edi +
jz loc_41C28D  +
test eax eax +
jnz loc_41C28D  +
nop   +
mov eax [esp+2Ch+var_14] +
mov ecx edi +
mov edx esi +
call sub_41BB00  +
mov edx [esp+2Ch+arg_C] +
test edx edx +
jnz loc_41C230  +
test edi edi +
jz loc_41C23E  +
movzx edx byte ptr [ebx] +
add ebx 1 +
mov [eax+ebp] dl +
shr ebp 5 +
sub [esp+2Ch+arg_8] 1 +
mov byte ptr [eax+ebp+2000h] 1 +
jnz loc_41C248  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [ebx] 0 +
jmp loc_41C23E  +
mov [esp+2Ch+var_28] 27Ah +
mov [esp+2Ch+var_2C] offset a____Binutil_19 +
mov [esp+2Ch+var_10] ecx +
mov [esp+2Ch+var_18] edx +
call sub_410530  +
mov ecx [esp+2Ch+var_10] +
mov edx [esp+2Ch+var_18] +
jmp loc_41C209  +
***
jmp loc_41C300  +
push ebx  +
xor eax eax +
sub esp 18h +
mov edx [esp+24h] +
mov ecx [esp+2Ch] +
mov ebx [esp+30h] +
test byte ptr [edx+14h] 3 +
jz loc_41C344  +
mov eax [esp+34h] +
add edx 1Ch +
mov [esp] ecx +
mov ecx [esp+28h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+20h] +
call sub_41C1F0  +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
xor eax eax +
sub esp 18h +
mov edx [esp+24h] +
mov ecx [esp+2Ch] +
mov ebx [esp+30h] +
test byte ptr [edx+14h] 3 +
jz loc_41C394  +
mov eax [esp+34h] +
add edx 1Ch +
mov [esp] ecx +
mov ecx [esp+28h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+20h] +
call sub_41C1F0  +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+2Ch] +
mov edx [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
test eax eax +
jz loc_41C400  +
cmp eax 2 +
jnz loc_41C3F6  +
mov eax [ebx+10h] +
mov edi [eax] +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edx +
call sub_41DBD0  +
mov eax [ebx+4] +
mov [esp+28h] edi +
mov [esp+20h] esi +
mov dword ptr [esp+24h] offset a5sS_0 +
mov [esp+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp fprintf  +
***
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx+4] +
mov [esp+24h] esi +
mov [esp+20h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp fputs  +
***
sub esp 0Ch +
mov ds:dword_4A86E0 1 +
call nullsub_1  +
xor eax eax +
mov ds:byte_4A8730[eax] al +
add eax 1 +
cmp eax 0Ah +
jnz loc_41C434  +
mov ds:byte_4A8737[eax] al +
add eax 1 +
cmp eax 24h +
jnz loc_41C442  +
mov ds:byte_4A8724 24h +
mov al 28h +
mov ds:byte_4A8725 25h +
mov ds:byte_4A872E 26h +
mov ds:byte_4A875F 27h +
nop   +
mov ds:byte_4A8739[eax] al +
add eax 1 +
cmp eax 42h +
jnz loc_41C470  +
add esp 0Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov eax ds:dword_4A86E0 +
test eax eax +
jz loc_41C72F  +
mov eax [esp+0A0h] +
lea edi [esp+1Ch] +
mov eax [eax+0A0h] +
mov esi [eax+0Ch] +
test esi esi +
jz loc_41C572  +
xor ebp ebp +
jmp loc_41C4D6  +
add ebp 20h +
cmp ebp 2000h +
jz loc_41C564  +
mov eax ebp +
sar eax 5 +
cmp byte ptr [esi+eax+2000h] 0 +
jz loc_41C4C7  +
mov edx [esi+2100h] +
lea eax [esp+18h] +
mov [esp+18h] edi +
add edx ebp +
call sub_41BA60  +
mov edx [esp+18h] +
mov eax ebp +
lea ecx [esi+ebp+20h] +
add eax esi +
movzx ebx byte ptr [eax] +
add eax 1 +
and ebx 0Fh +
movzx ebx ds:byte_486AB4[ebx] +
mov [edx+1] bl +
movzx edx byte ptr [eax-1] +
shr dl 4 +
cmp eax ecx +
movzx edx dl +
movzx ebx ds:byte_486AB4[edx] +
mov edx [esp+18h] +
mov [edx] bl +
mov ebx [esp+18h] +
lea edx [ebx+2] +
mov [esp+18h] edx +
jnz loc_41C506  +
mov eax [esp+0A0h] +
mov ecx edi +
add ebp 20h +
mov [esp] edx +
mov edx 36h +
call sub_41BC20  +
cmp ebp 2000h +
jnz loc_41C4D6  +
mov esi [esi+2104h] +
test esi esi +
jnz loc_41C4C3  +
mov eax [esp+0A0h] +
lea esi [esp+1Ch] +
mov ebx [eax+64h] +
test ebx ebx +
jz loc_41C5DD  +
mov [esp+18h] esi +
mov edx [ebx] +
lea eax [esp+18h] +
call sub_41BD60  +
mov eax [esp+18h] +
lea edx [eax+1] +
mov [esp+18h] edx +
mov byte ptr [eax] 31h +
mov edx [ebx+1Ch] +
lea eax [esp+18h] +
call sub_41BA60  +
mov edx [ebx+24h] +
lea eax [esp+18h] +
add edx [ebx+1Ch] +
call sub_41BA60  +
mov eax [esp+18h] +
mov ecx esi +
mov edx 33h +
mov [esp] eax +
mov eax [esp+0A0h] +
call sub_41BC20  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_41C584  +
mov eax [esp+0A0h] +
mov ebx [eax+78h] +
test ebx ebx +
jz loc_41C682  +
mov eax [ebx] +
test eax eax +
jz loc_41C682  +
lea edi [esp+1Ch] +
***
mov eax [esp+arg_14] +
mov edx [esi+4] +
mov eax [esp+arg_14] +
mov dword ptr [esp+0] 3 +
mov eax [esp+arg_14] +
mov eax [esp+arg_14] +
mov eax [esp+arg_14] +
mov eax [esp+arg_14] +
lea edx [eax+1] +
mov [esp+arg_14] edx +
mov byte ptr [eax] 36h +
jmp sub_41C63D  +
***
call sub_41C420  +
jmp loc_41C4A7  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 11Ch +
mov [esp+120h+var_114] 0 +
mov [esp+120h+var_11C] 0 +
mov [esp+120h+var_118] 0 +
mov [esp+120h+var_120] eax +
call sub_411E10  +
test eax eax +
jnz loc_41C860  +
lea ebx [esp+120h+var_10F] +
jmp loc_41C7A8  +
***
test edx edx +
jnz loc_41C870  +
mov [esp-9Ch+arg_A0] esi +
mov [esp-9Ch+arg_9C] 1 +
mov [esp-9Ch+arg_98] ebx +
call sub_411C00  +
xor edx edx +
cmp eax 1 +
setnz dl  +
cmp byte ptr [esp+11h] 25h +
mov eax edx +
jnz loc_41C7A0  +
test eax eax +
jnz loc_41C870  +
mov [esp-9Ch+arg_A0] esi +
mov [esp-9Ch+arg_9C] 5 +
mov [esp-9Ch+arg_98] ebx +
call sub_411C00  +
cmp eax 5 +
jnz loc_41C860  +
movzx eax byte ptr [esp+11h] +
movzx ebp byte ptr [esp+13h] +
movzx eax ds:byte_4A07C0[eax] +
cmp al 63h +
jz loc_41C870  +
movzx edx byte ptr [esp+12h] +
movzx edx ds:byte_4A07C0[edx] +
cmp dl 63h +
jz loc_41C870  +
shl eax 4 +
lea edi [edx+eax-5] +
cmp edi 0FEh +
ja loc_41C860  +
mov [esp-9Ch+arg_A0] esi +
mov [esp-9Ch+arg_9C] edi +
mov [esp-9Ch+arg_98] ebx +
call sub_411C00  +
cmp edi eax +
jnz loc_41C860  +
mov eax ebp +
mov byte ptr [esp+edi+11h] 0 +
movsx ebp al +
add edi ebx +
mov [esp+0Ch] edi +
mov [esp-9Ch+arg_A0] ebx +
mov [esp-9Ch+arg_9C] ebp +
mov [esp-9Ch+arg_98] esi +
call sub_41BE30  +
test eax eax +
jnz loc_41C7A8  +
nop   +
add esp 11Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 11Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 28h +
mov eax ds:dword_4A86E0 +
mov ebx [esp+30h] +
test eax eax +
jz loc_41C930  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_411E10  +
test eax eax +
jnz loc_41C922  +
lea eax [esp+1Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_411C00  +
cmp eax 4 +
jnz loc_41C922  +
cmp byte ptr [esp+1Ch] 25h +
jnz loc_41C922  +
movzx eax byte ptr [esp+1Dh] +
cmp ds:byte_4A07C0[eax] 63h +
jz loc_41C922  +
movzx eax byte ptr [esp+1Eh] +
cmp ds:byte_4A07C0[eax] 63h +
jz loc_41C922  +
movzx eax byte ptr [esp+1Fh] +
cmp ds:byte_4A07C0[eax] 63h +
jz loc_41C922  +
mov [esp] ebx +
call sub_41BDE0  +
mov eax ebx +
call sub_41C760  +
test eax eax +
jz loc_41C922  +
mov eax [ebx+4] +
add esp 28h +
pop ebx  +
retn   +
***
add esp 28h +
xor eax eax +
pop ebx  +
retn   +
***
call sub_41C420  +
jmp loc_41C895  +
***
xor eax eax +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] 8 +
mov [esp+18h+var_18] ebx +
call sub_40E140  +
test eax eax +
jz loc_41C990  +
mov [ebx+0A0h] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+28h] +
mov ebx [esp+24h] +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_410250  +
mov edx 1 +
test eax eax +
jnz loc_41C9D0  +
xor edx edx +
test ebx ebx +
setz dl  +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 5Ch +
mov [esp+5Ch+var_40] eax +
mov eax edx +
mov esi [esp+5Ch+arg_0] +
shr eax 4 +
mov ebp [esp+5Ch+arg_4] +
and eax 0Fh +
movzx eax ds:byte_486D54[eax] +
shr ebx 8 +
mov [esp+5Ch+var_39] 3Ah +
mov [esp+24h] al +
mov eax edx +
and eax 0Fh +
movzx eax ds:byte_486D54[eax] +
mov [esp+25h] al +
movzx eax bl +
shr eax 4 +
movzx eax ds:byte_486D54[eax] +
mov [esp+5Ch+var_36] al +
mov eax ebx +
and eax 0Fh +
movzx eax ds:byte_486D54[eax] +
mov [esp+5Ch+var_35] al +
movzx eax cl +
shr eax 4 +
movzx eax ds:byte_486D54[eax] +
mov [esp+5Ch+var_34] al +
mov eax ecx +
add ecx esi +
and eax 0Fh +
add ecx edx +
movzx eax ds:byte_486D54[eax] +
add ebx ecx +
mov [esp+5Ch+var_33] al +
mov eax esi +
shr eax 4 +
and eax 0Fh +
movzx eax ds:byte_486D54[eax] +
mov [esp+5Ch+var_32] al +
mov eax esi +
and eax 0Fh +
test edx edx +
movzx eax ds:byte_486D54[eax] +
mov [esp+5Ch+var_31] al +
jz loc_41CB29  +
xor eax eax +
lea esi [esp+5Ch+var_39] +
mov [esp+5Ch+var_44] edx +
lea esi [esi+0] +
movzx ecx byte ptr [ebp+eax+0] +
mov edx ecx +
add ebx ecx +
shr dl 4 +
movzx edi dl +
movzx edx ds:byte_486D54[edi] +
mov edi ecx +
and edi 0Fh +
mov [esi+eax*2+9] dl +
movzx edx ds:byte_486D54[edi] +
mov [esi+eax*2+0Ah] dl +
add eax 1 +
cmp eax [esp+5Ch+var_44] +
jnz loc_41CAA0  +
mov edx [esp+5Ch+var_44] +
lea ecx [esp+edx*2+5Ch+var_30] +
neg ebx  +
movzx eax bl +
and ebx 0Fh +
shr eax 4 +
movzx eax ds:byte_486D54[eax] +
mov byte ptr [ecx+2] 0Dh +
mov byte ptr [ecx+3] 0Ah +
mov [ecx] al +
movzx eax ds:byte_486D54[ebx] +
lea ebx [edx+edx+0Dh] +
mov [ecx+1] al +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_54] eax +
call sub_411CB0  +
cmp ebx eax +
setz al  +
add esp 5Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [esp+5Ch+var_30] +
lea esi [esp+5Ch+var_39] +
jmp loc_41CADB  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+60h] +
mov eax [eax+0A0h] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_41CD22  +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov eax [esp+1Ch] +
mov esi [eax+0Ch] +
mov ebp [eax+8] +
mov edi [eax+4] +
test esi esi +
jz loc_41CD10  +
mov eax [esp+14h] +
mov edx [esp+18h] +
add eax edx +
mov [esp+10h] eax +
jmp loc_41CC2E  +
mov edx [esp+14h] +
test edx edx +
jnz loc_41CCB6  +
mov eax ebp +
xor ecx ecx +
and eax 0F0000h +
mov edx 2 +
mov [esp+18h] eax +
shr eax 0Ch +
mov [esp+2Ah] al +
lea eax [esp+2Ah] +
mov [esp+4] eax +
mov eax [esp+60h] +
mov dword ptr [esp] 2 +
mov byte ptr [esp+2Bh] 0 +
call sub_41C9E0  +
test eax eax +
jz loc_41CD01  +
mov eax [esp+14h] +
add eax [esp+18h] +
mov [esp+10h] eax +
mov ecx ebp +
sub ecx [esp+10h] +
lea eax [ecx+ebx] +
cmp eax 0FFFFh +
jbe loc_41CC04  +
mov ebx 10000h +
sub ebx ecx +
mov eax [esp+60h] +
mov edx ebx +
mov [esp+4] edi +
mov dword ptr [esp] 0 +
call sub_41C9E0  +
test eax eax +
jz loc_41CD01  +
add ebp ebx +
add edi ebx +
sub esi ebx +
jz loc_41CD10  +
mov eax [esp+10h] +
cmp esi 10h +
mov ebx 10h +
cmovbe ebx esi +
add eax 0FFFFh +
cmp eax ebp +
jnb loc_41CBED  +
cmp ebp 0FFFFFh +
jbe loc_41CB97  +
mov eax [esp+18h] +
test eax eax +
jnz loc_41CCD0  +
mov eax ebp +
xor ax ax +
mov [esp+14h] eax +
add eax 0FFFFh +
cmp eax ebp +
jb loc_41CDA5  +
mov edx [esp+14h] +
xor ecx ecx +
mov dword ptr [esp] 4 +
mov eax edx +
shr eax 18h +
mov [esp+2Ah] al +
mov eax edx +
mov edx 2 +
shr eax 10h +
mov [esp+2Bh] al +
lea eax [esp+2Ah] +
mov [esp+4] eax +
mov eax [esp+60h] +
call sub_41C9E0  +
test eax eax +
jz loc_41CD01  +
mov dword ptr [esp+18h] 0 +
jmp loc_41CBE1  +
***
mov dword ptr [esp+4] 319h +
mov dword ptr [esp] offset a____Binutil_20 +
call sub_410530  +
jmp loc_41CBA3  +
***
lea eax [esp+2Ah] +
xor ecx ecx +
mov [esp+4] eax +
mov eax [esp+60h] +
mov edx 2 +
mov dword ptr [esp] 2 +
mov byte ptr [esp+2Ah] 0 +
mov byte ptr [esp+2Bh] 0 +
call sub_41C9E0  +
test eax eax +
jnz loc_41CC5A  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jnz loc_41CB6F  +
mov eax [esp+60h] +
mov eax [eax+74h] +
test eax eax +
jz loc_41CD7C  +
cmp eax 0FFFFFh +
mov edx eax +
ja loc_41CDE9  +
and edx 0F0000h +
shr edx 0Ch +
mov [esp+2Ch] dl +
mov edx eax +
shr edx 8 +
mov [esp+2Fh] al +
lea eax [esp+2Ch] +
mov byte ptr [esp+2Dh] 0 +
mov [esp+2Eh] dl +
mov [esp+4] eax +
mov dword ptr [esp] 3 +
mov eax [esp+60h] +
xor ecx ecx +
mov edx 4 +
call sub_41C9E0  +
test eax eax +
jz loc_41CD01  +
mov eax [esp+60h] +
xor ecx ecx +
xor edx edx +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 1 +
call sub_41C9E0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_41CD03  +
***
lea ebx [esp+2Ch] +
mov [esp+8] ebp +
mov dword ptr [esp+4] offset a08lx_1 +
mov [esp] ebx +
call sprintf  +
mov eax [esp+60h] +
mov eax [eax] +
mov [esp+8] ebx +
mov dword ptr [esp] offset aSAddress0xSOut +
mov [esp+4] eax +
call off_47D664  +
mov dword ptr [esp] 11h +
call sub_4105E0  +
jmp loc_41CD01  +
***
shr edx 18h +
mov [esp+2Ch] dl +
mov edx eax +
shr edx 10h +
mov [esp+2Dh] dl +
mov edx eax +
shr edx 8 +
mov [esp+2Fh] al +
lea eax [esp+2Ch] +
mov [esp+2Eh] dl +
mov [esp+4] eax +
mov dword ptr [esp] 5 +
jmp loc_41CD68  +
***
push ebp  +
push edi  +
push esi  +
mov esi 1 +
push ebx  +
sub esp 1Ch +
mov ebx [esp+44h] +
mov edi [esp+3Ch] +
test ebx ebx +
jz loc_41CE47  +
mov eax [esp+34h] +
mov edx [eax+14h] +
and edx 3 +
cmp edx 3 +
jz loc_41CE51  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] 10h +
mov [esp] eax +
call sub_40E140  +
test eax eax +
mov ebp eax +
jz loc_41CF11  +
mov eax [esp+30h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_40E140  +
test eax eax +
mov edx eax +
jz loc_41CF11  +
mov eax [esp+38h] +
mov [esp] edx +
mov [esp+8] ebx +
mov [esp+0Ch] edx +
mov [esp+4] eax +
call memcpy  +
mov eax [esp+34h] +
mov edx [esp+0Ch] +
add edi [eax+20h] +
mov eax [esp+30h] +
mov [ebp+4] edx +
mov [ebp+8] edi +
mov [ebp+0Ch] ebx +
mov ecx [eax+0A0h] +
mov eax [ecx+4] +
test eax eax +
jz loc_41CECB  +
cmp edi [eax+8] +
jnb loc_41CF00  +
mov edx [ecx] +
mov eax ecx +
test edx edx +
jnz loc_41CEDD  +
jmp loc_41CEE2  +
mov eax edx +
mov edx [edx] +
test edx edx +
jz loc_41CEE2  +
cmp edi [edx+8] +
ja loc_41CED5  +
mov [ebp+0] edx +
mov esi 1 +
mov [eax] ebp +
mov eax [ebp+0] +
test eax eax +
jnz loc_41CE47  +
mov [ecx+4] ebp +
jmp loc_41CE47  +
***
mov [eax] ebp +
mov dword ptr [ebp+0] 0 +
mov [ecx+4] ebp +
jmp loc_41CE47  +
***
xor esi esi +
jmp loc_41CE47  +
***
sub esp 34h +
cmp ecx 0FFFFFFFFh +
jz loc_41CF71  +
mov ebx eax +
movzx eax cl +
test ds:byte_49F240[eax+eax] 10h +
jz loc_41CF87  +
mov byte ptr [esp+34h+var_E] cl +
lea esi [esp+34h+var_E] +
mov byte ptr [esp+34h+var_E+1] 0 +
mov [esp+34h+var_28] esi +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_30] ebx +
mov [esp+34h+var_34] offset aBDUnexpected_0 +
call off_47D664  +
mov [esp+34h+var_34] 11h +
call sub_4105E0  +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+34h+arg_0] +
test eax eax +
jnz loc_41CF6B  +
mov [esp+34h+var_34] 12h +
call sub_4105E0  +
jmp loc_41CF6B  +
lea esi [esp+34h+var_E] +
mov [esp+34h+var_2C] eax +
mov [esp+34h+var_30] offset a03o_0 +
mov [esp+34h+var_34] esi +
mov [esp+34h+var_18] edx +
call sprintf  +
mov edx [esp+34h+var_18] +
jmp loc_41CF46  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov ebx ds:dword_4A8800 +
mov ebp [esp+0A0h] +
test ebx ebx +
jz loc_41D0F4  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebp +
call sub_411E10  +
test eax eax +
jnz loc_41D01E  +
lea edi [esp+63h] +
mov [esp+8] ebp +
mov dword ptr [esp+4] 9 +
mov [esp] edi +
call sub_411C00  +
cmp eax 9 +
jz loc_41D030  +
call sub_410390  +
cmp eax 12h +
jz loc_41D0E3  +
xor eax eax +
***
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+63h] 3Ah +
jnz loc_41D0E3  +
lea eax [esp+64h] +
lea ebx [esp+6Ch] +
movzx edx byte ptr [eax] +
cmp ds:byte_4A07C0[edx] 63h +
jz loc_41D0E3  +
add eax 1 +
cmp eax ebx +
jnz loc_41D043  +
movzx eax byte ptr [esp+6Ah] +
movzx edx byte ptr [esp+6Bh] +
movzx eax ds:byte_4A07C0[eax] +
movzx edx ds:byte_4A07C0[edx] +
shl eax 4 +
add eax edx +
cmp eax 5 +
ja loc_41D0E3  +
mov eax [ebp+0A0h] +
mov [esp] ebp +
mov [esp+1Ch] eax +
call sub_41C950  +
test eax eax +
jz loc_41D0B6  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebp +
call sub_411E10  +
test eax eax +
jz loc_41D108  +
***
mov eax [ebp+0A0h] +
cmp eax [esp+arg_18] +
jz loc_41D0D2  +
test eax eax +
jz loc_41D0D2  +
mov [esp+arg_0] eax +
mov [esp+0] ebp +
call sub_40E390  +
mov eax [esp+arg_18] +
mov [ebp+0A0h] eax +
xor eax eax +
jmp loc_41D020  +
***
mov dword ptr [esp] 3 +
call sub_4105E0  +
jmp loc_41D01E  +
***
mov ds:dword_4A8800 1 +
call nullsub_1  +
jmp loc_41CFCF  +
***
mov dword ptr [ebp+74h] 0 +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+20h] 1 +
mov dword ptr [esp+3Ch] 0 +
mov dword ptr [esp+48h] 0 +
mov dword ptr [esp+4Ch] 0 +
***
mov [esp+arg_4] ebp +
mov [esp+arg_0] 1 +
mov [esp+0] ebx +
call sub_411C00  +
cmp eax 1 +
jz loc_41D180  +
call sub_410390  +
cmp eax 12h +
jz loc_41D700  +
mov eax [esp+arg_14] +
test eax eax +
jz loc_41D0B6  +
mov [esp+0] eax +
call free  +
jmp loc_41D0B6  +
***
movzx ecx [esp+arg_68] +
cmp ecx 0Dh +
jz loc_41D13F  +
cmp ecx 0Ah +
jz loc_41D6F5  +
cmp ecx 3Ah +
jnz loc_41D398  +
mov [esp+0] ebp +
call sub_411D30  +
mov [esp+arg_4] ebp +
mov [esp+arg_0] 8 +
mov [esp+arg_3C] eax +
lea eax [esp+arg_57] +
mov [esp+0] eax +
mov [esp+arg_40] edx +
call sub_411C00  +
cmp eax 8 +
jnz loc_41D166  +
lea eax [esp+arg_57] +
lea esi [esi+0] +
movzx ecx byte ptr [eax] +
cmp ds:byte_4A07C0[ecx] 63h +
jz loc_41D398  +
add eax 1 +
cmp eax edi +
jnz loc_41D1D0  +
movzx eax byte ptr [esp+arg_57] +
movzx edx byte ptr [esp+arg_57+1] +
movzx eax ds:byte_4A07C0[eax] +
movzx edx ds:byte_4A07C0[edx] +
shl eax 4 +
add eax edx +
mov esi eax +
mov [esp+arg_24] eax +
movzx eax byte ptr [esp+arg_57+2] +
lea esi [esi+esi+2] +
cmp esi [esp+arg_20] +
movzx eax ds:byte_4A07C0[eax] +
mov byte ptr [esp+arg_28] al +
movzx eax byte ptr [esp+arg_57+3] +
movzx eax ds:byte_4A07C0[eax] +
mov byte ptr [esp+arg_2C] al +
movzx eax [esp+arg_5B] +
movzx eax ds:byte_4A07C0[eax] +
mov byte ptr [esp+arg_30] al +
movzx eax [esp+arg_5C] +
movzx eax ds:byte_4A07C0[eax] +
mov [esp+arg_35] al +
movzx eax [esp+arg_5D] +
movzx eax ds:byte_4A07C0[eax] +
mov [esp+arg_36] al +
movzx eax [esp+arg_5E] +
movzx eax ds:byte_4A07C0[eax] +
mov [esp+arg_37] al +
jnb loc_41D3B0  +
mov eax [esp+arg_14] +
mov [esp+arg_4] ebp +
mov [esp+arg_0] esi +
mov [esp+0] eax +
call sub_411C00  +
cmp esi eax +
jnz loc_41D166  +
mov edx [esp+arg_14] +
xor eax eax +
lea esi [esi+0] +
movzx ecx byte ptr [edx+eax] +
cmp ds:byte_4A07C0[ecx] 63h +
jz loc_41D398  +
add eax 1 +
cmp esi eax +
ja loc_41D2A0  +
movzx edx byte ptr [esp+arg_30] +
movzx eax [esp+arg_35] +
shl edx 4 +
lea ecx [edx+eax] +
movzx eax byte ptr [esp+arg_28] +
movzx edx byte ptr [esp+arg_2C] +
shl eax 4 +
add eax edx +
movzx edx [esp+arg_37] +
shl eax 8 +
add eax ecx +
mov [esp+arg_28] eax +
movzx eax [esp+arg_36] +
shl eax 4 +
lea ecx [eax+edx] +
mov edx [esp+arg_24] +
mov eax [esp+arg_28] +
mov [esp+arg_2C] ecx +
add ecx edx +
add ecx eax +
shr eax 8 +
add ecx eax +
test edx edx +
jz loc_41D747  +
mov edx [esp+arg_14] +
sub esi 2 +
mov [esp+arg_30] esi +
mov [esp+arg_9C] ebp +
add esi edx +
mov eax edx +
mov ebp esi +
movzx edx byte ptr [eax] +
add eax 2 +
movzx esi byte ptr [eax-1] +
movzx edx ds:byte_4A07C0[edx] +
movzx esi ds:byte_4A07C0[esi] +
shl edx 4 +
add edx esi +
add ecx edx +
cmp eax ebp +
jnz loc_41D325  +
mov edx [esp+arg_30] +
mov ebp [esp+arg_9C] +
mov eax edx +
add eax 1 +
mov esi [esp+arg_14] +
neg ecx  +
movzx ecx cl +
movzx edx byte ptr [esi+edx] +
movzx eax byte ptr [esi+eax] +
movzx edx ds:byte_4A07C0[edx] +
movzx eax ds:byte_4A07C0[eax] +
shl edx 4 +
add eax edx +
cmp ecx eax +
jnz loc_41D7B4  +
mov eax [esp+arg_2C] +
cmp eax 5 +
ja loc_41D715  +
jmp ds:off_486CE8[eax*4]  +
mov edx [esp+arg_1C] +
mov eax ebp +
mov dword ptr [esp+0] 0 +
call sub_41CF20  +
jmp loc_41D166  +
***
cmp [esp+arg_24] 2 +
cmp [esp+arg_24] 4 +
cmp [esp+arg_24] 2 +
mov edx [ebp+74h] +
cmp [esp+arg_24] 4 +
mov eax [esp+arg_38] +
test eax eax +
jz loc_41D622  +
mov ecx [eax+24h] +
mov edx [eax+1Ch] +
mov eax [esp+arg_44] +
add eax [esp+arg_48] +
add eax [esp+arg_28] +
add edx ecx +
cmp edx eax +
jz loc_41D7A4  +
mov ecx [esp+arg_24] +
test ecx ecx +
jz loc_41D13F  +
mov eax [ebp+6Ch] +
mov [esp+arg_0] offset a_secD_0 +
mov [esp+0] ebx +
add eax 1 +
mov [esp+arg_4] eax +
call sprintf  +
mov edx ebx +
mov eax [edx] +
add edx 4 +
lea ecx [eax-1010101h] +
not eax  +
and ecx eax +
and ecx 80808080h +
jz loc_41D64A  +
mov eax ecx +
shr eax 10h +
test ecx 8080h +
cmovz ecx eax +
lea eax [edx+2] +
cmovz edx eax +
add cl cl +
sbb edx 3 +
sub edx ebx +
add edx 1 +
mov [esp+arg_0] edx +
mov [esp+0] ebp +
call sub_40E140  +
test eax eax +
mov esi eax +
jz loc_41D166  +
mov [esp+arg_0] ebx +
mov [esp+0] eax +
call strcpy  +
mov [esp+arg_0] esi +
mov [esp+arg_4] 103h +
mov [esp+0] ebp +
call sub_40F740  +
test eax eax +
mov esi eax +
mov [esp+arg_38] eax +
jz loc_41D166  +
mov eax [esp+arg_44] +
add eax [esp+arg_48] +
add eax [esp+arg_28] +
mov edx [esp+arg_40] +
mov [esi+1Ch] eax +
mov [esi+20h] eax +
mov eax [esp+arg_24] +
mov [esi+24h] eax +
mov eax [esp+arg_3C] +
add eax 0FFFFFFFFh +
adc edx 0FFFFFFFFh +
mov [esi+50h] eax +
mov [esi+54h] edx +
jmp loc_41D13F  +
add [esp+arg_1C] 1 +
jmp loc_41D13F  +
mov eax [esp+arg_14] +
test eax eax +
jz loc_41D552  +
mov eax [esp+arg_14] +
jmp loc_41D54A  +
mov eax [esp+arg_2C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUUnrecognized +
mov [esp+arg_8] eax +
mov eax [esp+arg_1C] +
mov [esp+arg_4] eax +
call off_47D664  +
mov dword ptr [esp+0] 11h +
call sub_4105E0  +
jmp loc_41D166  +
mov eax 1 +
xor edx edx +
jmp loc_41D358  +
mov esi [esp+arg_14] +
mov [esp+arg_38] 0 +
movzx eax byte ptr [esi+2] +
movzx edx byte ptr [esi+3] +
movzx eax ds:byte_4A07C0[eax] +
movzx ecx ds:byte_4A07C0[edx] +
shl eax 4 +
add ecx eax +
movzx eax byte ptr [esi] +
movzx edx ds:byte_4A07C0[eax] +
movzx eax byte ptr [esi+1] +
shl edx 4 +
movzx eax ds:byte_4A07C0[eax] +
add eax edx +
shl eax 8 +
add eax ecx +
shl eax 10h +
add [ebp+74h] eax +
jmp loc_41D13F  +
mov eax [esp+arg_38] +
add ecx [esp+arg_24] +
mov [eax+24h] ecx +
jmp loc_41D13F  +
***
mov [esp+arg_C] eax +
mov eax [esp+arg_1C] +
mov [esp+arg_8] ecx +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadChecksumI +
mov [esp+arg_4] eax +
call off_47D664  +
mov dword ptr [esp+0] 11h +
call sub_4105E0  +
jmp loc_41D166  +
***
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtendedA +
mov [esp+arg_4] eax +
call off_47D664  +
mov dword ptr [esp+0] 11h +
call sub_4105E0  +
jmp loc_41D166  +
***
cmp [esp+arg_24] 2 +
jz loc_41D565  +
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtendedL +
mov [esp+arg_4] eax +
call off_47D664  +
mov dword ptr [esp+0] 11h +
call sub_4105E0  +
jmp loc_41D166  +
***
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtende_0 +
mov [esp+arg_4] eax +
call off_47D664  +
mov dword ptr [esp+0] 11h +
call sub_4105E0  +
jmp loc_41D166  +
***
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtendedS +
mov [esp+arg_4] eax +
call off_47D664  +
mov dword ptr [esp+0] 11h +
call sub_4105E0  +
jmp loc_41D166  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+54h] +
mov esi [esp+5Ch] +
mov eax [eax+8Ch] +
test eax eax +
jz loc_41D8E0  +
add esi eax +
mov eax [esp+64h] +
mov [esp+4] esi +
mov [esp+8] eax +
mov eax [esp+58h] +
mov [esp] eax +
call memcpy  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+54h] +
mov eax [eax+24h] +
mov [esp+4] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_40E140  +
mov ecx [esp+54h] +
mov ebx eax +
mov [esp+14h] eax +
mov [ecx+8Ch] eax +
xor eax eax +
test ebx ebx +
jz loc_41D8D8  +
mov eax [ecx+50h] +
mov edx [ecx+54h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] eax +
mov eax [esp+50h] +
mov [esp+8] edx +
mov [esp] eax +
call sub_411E10  +
test eax eax +
jnz loc_41DADB  +
mov ebx [esp+14h] +
xor edi edi +
mov dword ptr [esp+1Ch] 0 +
mov eax [esp+50h] +
mov dword ptr [esp+4] 1 +
mov [esp+8] eax +
lea eax [esp+28h] +
mov [esp] eax +
call sub_411C00  +
cmp eax 1 +
jz loc_41D997  +
call sub_410390  +
mov eax [esp+54h] +
sub ebx [esp+14h] +
cmp ebx [eax+24h] +
jb loc_41DB08  +
test edi edi +
jz loc_41D988  +
mov [esp] edi +
call free  +
mov eax [esp+54h] +
mov eax [eax+8Ch] +
jmp loc_41D8B9  +
***
movzx eax byte ptr [esp+28h] +
cmp eax 0Ah +
jz loc_41D945  +
cmp eax 0Dh +
jz loc_41D945  +
cmp eax 3Ah +
jz loc_41D9BF  +
mov dword ptr [esp+4] 236h +
mov dword ptr [esp] offset a____Binutil_20 +
call sub_410530  +
mov eax [esp+50h] +
mov dword ptr [esp+4] 8 +
mov [esp+8] eax +
lea eax [esp+28h] +
mov [esp] eax +
call sub_411C00  +
cmp eax 8 +
jnz loc_41DACF  +
movzx eax byte ptr [esp+28h] +
movzx edx byte ptr [esp+29h] +
movzx eax ds:byte_4A07C0[eax] +
movzx ebp ds:byte_4A07C0[edx] +
movzx edx byte ptr [esp+2Fh] +
shl eax 4 +
add ebp eax +
movzx eax byte ptr [esp+2Eh] +
movzx edx ds:byte_4A07C0[edx] +
movzx eax ds:byte_4A07C0[eax] +
shl eax 4 +
add eax edx +
jnz loc_41DAE5  +
lea edx [ebp+ebp+0] +
cmp edx [esp+1Ch] +
jbe loc_41DA50  +
mov [esp] edi +
mov [esp+4] edx +
mov [esp+18h] edx +
call sub_412C60  +
test eax eax +
mov edi eax +
jz loc_41DADB  +
mov edx [esp+18h] +
mov [esp+1Ch] edx +
mov eax [esp+50h] +
mov [esp+4] edx +
mov [esp] edi +
mov [esp+18h] edx +
mov [esp+8] eax +
call sub_411C00  +
mov edx [esp+18h] +
cmp edx eax +
jnz loc_41DACF  +
test ebp ebp +
jz loc_41DA9B  +
xor edx edx +
movzx eax byte ptr [edi+edx*2] +
movzx ecx byte ptr [edi+edx*2+1] +
movzx eax ds:byte_4A07C0[eax] +
shl eax 4 +
add al ds:byte_4A07C0[ecx] +
mov [ebx+edx] al +
add edx 1 +
cmp edx ebp +
jnz loc_41DA76  +
add ebx edx +
mov ecx [esp+54h] +
mov eax ebx +
sub eax [esp+14h] +
cmp eax [ecx+24h] +
jnb loc_41D97C  +
mov eax [esp+50h] +
mov dword ptr [esp+4] 2 +
mov [esp] edi +
mov [esp+8] eax +
call sub_411C00  +
cmp eax 2 +
jz loc_41D945  +
test edi edi +
jz loc_41DADB  +
mov [esp] edi +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+50h] +
mov dword ptr [esp] offset aBInternalError +
mov [esp+4] eax +
call off_47D664  +
mov dword ptr [esp] 11h +
call sub_4105E0  +
jmp loc_41DACF  +
***
mov eax [esp+50h] +
mov dword ptr [esp] offset aBBadSectionLen +
mov [esp+4] eax +
call off_47D664  +
mov dword ptr [esp] 11h +
call sub_4105E0  +
jmp loc_41DACF  +
***
xor ebx ebx +
mov ecx [esp+arg_0] +
mov eax [edx] +
cmp [ecx] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_0] +
test dword ptr [eax+0Ch] 4182h +
jnz loc_41DB77  +
mov eax [eax+4] +
test eax eax +
jz loc_41DB77  +
mov ecx [edx+4] +
mov ecx [ecx+11Ch] +
mov [esp+arg_4] eax +
jmp ecx  +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
movzx edx byte ptr [eax+28h] +
mov ecx edx +
and ecx 7 +
cmp cl 1 +
jnz loc_41DBB1  +
and edx 8 +
jnz loc_41DBB1  +
mov edx [esp+1Ch+arg_4] +
mov [eax+78h] edx +
mov edx [esp+1Ch+arg_8] +
mov [eax+7Ch] edx +
mov eax 1 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] 5 +
call sub_4105E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_8] +
mov edx [eax+10h] +
mov ebx [eax+0Ch] +
test edx edx +
jz loc_41DD20  +
mov edx [edx+1Ch] +
add edx [eax+8] +
mov [esp+3Ch+var_34] edx +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_410F10  +
test bl 8 +
mov [esp+3Ch+var_10] 46h +
jnz loc_41DC25  +
test bh 40h +
mov [esp+3Ch+var_10] 66h +
jz loc_41DD00  +
test bl 4 +
mov ebp 64h +
jnz loc_41DC41  +
mov eax ebx +
and eax 8000h +
cmp eax 1 +
sbb ebp ebp +
and ebp 0FFFFFFDCh +
add ebp 44h +
test bh 20h +
mov edi 49h +
jnz loc_41DC5D  +
mov eax ebx +
and eax 400000h +
cmp eax 1 +
sbb edi edi +
and edi 0FFFFFFB7h +
add edi 69h +
mov eax ebx +
and eax 1000h +
cmp eax 1 +
mov eax ebx +
sbb ecx ecx +
and eax 800h +
and ecx 0FFFFFFC9h +
add ecx 57h +
cmp eax 1 +
sbb edx edx +
mov eax ebx +
and edx 0FFFFFFDDh +
and eax 80h +
add edx 43h +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFA9h +
add eax 77h +
test bl 1 +
jz loc_41DCE2  +
and ebx 2 +
cmp ebx 1 +
sbb esi esi +
and esi 4Bh +
add esi 21h +
mov ebx [esp+3Ch+var_10] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_20] ebp +
mov [esp+3Ch+var_24] edi +
mov [esp+3Ch+var_1C] ebx +
mov [esp+3Ch+var_34] esi +
mov [esp+3Ch+var_28] ecx +
mov [esp+3Ch+var_2C] edx +
mov [esp+3Ch+var_38] offset aCCCCCCC +
mov [esp+3Ch+var_3C] eax +
call fprintf  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl 2 +
mov esi 67h +
jnz loc_41DCA6  +
and ebx 800000h +
cmp ebx 1 +
sbb esi esi +
and esi 0FFFFFFABh +
add esi 75h +
jmp loc_41DCA6  +
mov eax ebx +
and eax 10000h +
cmp eax 1 +
sbb eax eax +
mov [esp+3Ch+var_10] eax +
and [esp+3Ch+var_10] 0FFFFFFD1h +
add [esp+3Ch+var_10] 4Fh +
jmp loc_41DC25  +
mov eax [eax+8] +
mov [esp+3Ch+var_34] eax +
jmp loc_41DBF3  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 18h +
mov [esp] ebx +
call sub_40E220  +
test eax eax +
jz loc_41DD4E  +
mov [eax] ebx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
mov ebx [edx+10h] +
test ebx ebx +
jz loc_41DD9E  +
test byte ptr [ebx+15h] 10h +
mov eax 43h +
jz loc_41DD85  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx offset off_47D468 +
jz loc_41DE40  +
cmp ebx offset off_47D5B8 +
mov eax 49h +
jz loc_41DD7D  +
mov esi [edx+0Ch] +
mov eax 69h +
test esi 400000h +
jnz loc_41DD7D  +
test esi 80h +
jnz loc_41DE60  +
test esi 800000h +
mov eax 75h +
jnz loc_41DD7D  +
test esi 3 +
mov al 3Fh +
jz loc_41DD7D  +
cmp ebx offset off_47D510 +
jz loc_41DE70  +
test ebx ebx +
jz loc_41DD7D  +
mov eax [ebx] +
mov edi offset off_487020 +
mov ebp offset a_bss +
mov [esp+1Ch+var_10] eax +
mov eax 4 +
jmp loc_41DE09  +
add edi 8 +
mov ebp [edi] +
test ebp ebp +
jz loc_41DE77  +
mov [esp+1Ch+var_1C] ebp +
call strlen  +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call strncmp  +
test eax eax +
jnz loc_41DDF8  +
movzx eax byte ptr [edi+4] +
cmp al 3Fh +
jz loc_41DE77  +
and esi 2 +
jz loc_41DE38  +
movzx eax al +
movzx eax ds:byte_49F040[eax] +
movsx eax al +
jmp loc_41DD7D  +
mov edx [edx+0Ch] +
mov al 55h +
test dl 80h +
jz loc_41DD7D  +
mov eax edx +
shl eax 0Fh +
sar eax 1Fh +
add eax 77h +
jmp loc_41DD7D  +
mov eax esi +
shl eax 0Fh +
sar eax 1Fh +
add eax 57h +
jmp loc_41DD7D  +
mov eax 61h +
jmp loc_41DE29  +
mov edx [ebx+14h] +
mov eax 74h +
test dl 10h +
jnz loc_41DE29  +
test dl 20h +
jz loc_41DEA6  +
test dl 8 +
mov eax 72h +
jnz loc_41DE29  +
and edx 400000h +
cmp edx 1 +
sbb eax eax +
and eax 0FFFFFFFDh +
add eax 67h +
jmp loc_41DE29  +
test dh 1 +
jnz loc_41DEC1  +
and edx 400000h +
cmp edx 1 +
sbb eax eax +
and eax 0FFFFFFEFh +
add eax 73h +
jmp loc_41DE29  +
test dh 20h +
mov eax 4Eh +
jnz loc_41DE29  +
and edx 108h +
mov eax 6Eh +
cmp edx 108h +
mov edx 3Fh +
cmovnz eax edx +
jmp loc_41DE29  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov [esp] esi +
call sub_41DD60  +
cmp al 55h +
mov [ebx+4] al +
jz loc_41DF50  +
sub eax 76h +
cmp al 1 +
jbe loc_41DF50  +
mov eax [esi+10h] +
mov eax [eax+1Ch] +
add eax [esi+8] +
mov [ebx] eax +
mov eax [esi+4] +
mov [ebx+8] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esi+4] +
mov dword ptr [ebx] 0 +
mov [ebx+8] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+24h] +
mov ebx [esp+20h] +
test esi esi +
mov eax [ebx+4] +
jz loc_41DFA4  +
mov eax [eax+198h] +
mov [esp] ebx +
call eax  +
mov edx eax +
test edx edx +
js loc_41DFB5  +
mov eax 0 +
jnz loc_41DFD0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+104h] +
mov [esp] ebx +
call eax  +
mov edx eax +
test edx edx +
jns loc_41DF96  +
mov dword ptr [esp] 7 +
call sub_4105E0  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp] edx +
call sub_412BD0  +
test eax eax +
mov edi eax +
jz loc_41DFB5  +
test esi esi +
mov eax [ebx+4] +
jnz loc_41E010  +
mov eax [eax+108h] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
test eax eax +
js loc_41E023  +
mov edx [esp+28h] +
mov [edx] edi +
mov edx [esp+2Ch] +
mov dword ptr [edx] 4 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+19Ch] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
test eax eax +
jns loc_41DFF8  +
mov dword ptr [esp] 7 +
call sub_4105E0  +
mov [esp] edi +
call free  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+0Ch] +
mov eax [eax] +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_10] +
mov edi [esp+4Ch+arg_14] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_0] +
mov eax [eax] +
mov [edi] eax +
mov eax [esp+4Ch+arg_18] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_1C] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_20] +
mov eax [eax] +
test eax eax +
mov [esp+4Ch+var_30] eax +
jz loc_41E442  +
mov esi [eax] +
test esi esi +
jz loc_41E2F8  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+4] +
test eax eax +
jz loc_41E2F8  +
mov edi [eax+28h] +
test edi edi +
mov [esp+4Ch+var_20] edi +
jz loc_41E305  +
mov eax [esp+4Ch+arg_8] +
mov edx [esp+4Ch+arg_C] +
add edx [eax+1Ch] +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_2C] edx +
mov ebx [eax+18h] +
test ebx ebx +
jz loc_41E0ED  +
cmp edx [eax+1Ch] +
jnb loc_41E160  +
mov eax [esp+4Ch+var_30] +
xor ecx ecx +
mov ebp [esp+4Ch+var_2C] +
mov eax [eax+14h] +
mov [esp+4Ch+var_34] eax +
lea edx [eax-1] +
jmp loc_41E117  +
lea eax [eax+eax*2+3] +
cmp ebp [esi+eax*8] +
jb loc_41E430  +
mov ecx [esp+4Ch+var_34] +
add ecx 1 +
cmp ecx edx +
jz loc_41E2F8  +
mov edi [esp+4Ch+var_30] +
lea eax [ecx+edx] +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
mov esi [edi+10h] +
sar eax 1 +
mov [esp+4Ch+var_34] eax +
lea ebx [eax+eax*2] +
lea ebx [esi+ebx*8] +
cmp ebp [ebx] +
jnb loc_41E103  +
cmp ecx eax +
mov edx eax +
jz loc_41E2F8  +
lea eax [ecx+edx] +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
sar eax 1 +
mov [esp+4Ch+var_34] eax +
jmp loc_41E136  +
cmp edx [ebx+18h] +
jnb loc_41E0ED  +
mov eax [esp+4Ch+var_30] +
mov ebp [eax+20h] +
mov eax [eax+24h] +
mov [esp+4Ch+var_28] eax +
mov eax [ebx+0Ch] +
cmp ebp [ebx+1Ch] +
mov [esp+4Ch+var_18] eax +
mov eax [ebx+8] +
mov [esp+4Ch+var_1C] eax +
jnb loc_41E1E8  +
mov edi [esp+4Ch+arg_0] +
xor esi esi +
mov [esp+4Ch+var_34] esi +
mov esi ebx +
mov [esp+4Ch+var_24] 0 +
lea esi [esi+0] +
movzx eax byte ptr [ebp+4] +
cmp al 46h +
jz loc_41E31D  +
jbe loc_41E311  +
cmp al 64h +
jz loc_41E363  +
cmp al 84h +
lea esi [esi+0] +
jnz loc_41E386  +
mov eax [edi+4] +
lea ecx [ebp+8] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
cmp [esp+4Ch+var_2C] eax +
jnb loc_41E3A0  +
add ebp 0Ch +
cmp [esi+1Ch] ebp +
ja loc_41E1A0  +
mov ebx esi +
mov eax [esp+4Ch+arg_10] +
mov dword ptr [eax] 1 +
mov eax [esp+4Ch+var_28] +
test eax eax +
jz loc_41E410  +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jz loc_41E410  +
cmp al 2Fh +
jz loc_41E410  +
test al al +
jz loc_41E223  +
mov eax [esp+4Ch+var_28] +
cmp byte ptr [eax+1] 3Ah +
jz loc_41E410  +
mov eax [esp+4Ch+var_18] +
test eax eax +
jz loc_41E410  +
mov eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_4C] eax +
call strlen  +
mov edi eax +
mov eax [esp+4Ch+var_30] +
mov eax [eax+28h] +
test eax eax +
jz loc_41E264  +
mov esi [esp+4Ch+var_18] +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] esi +
call sub_461FA0  +
test eax eax +
jz loc_41E6CA  +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] eax +
call strlen  +
lea esi [eax+1] +
lea eax [esi+edi] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_40E140  +
mov edx [esp+4Ch+var_30] +
test eax eax +
mov [edx+28h] eax +
jz loc_41E6C0  +
mov edx [esp+4Ch+var_18] +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] edx +
call memcpy  +
mov eax [esp+4Ch+var_30] +
add edi [eax+28h] +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] edi +
mov [esp+4Ch+var_48] eax +
call memcpy  +
mov eax [esp+4Ch+var_30] +
mov edi [esp+4Ch+arg_14] +
mov eax [eax+28h] +
mov [edi] eax +
mov esi [ebx+14h] +
test esi esi +
jz loc_41E2F8  +
mov [esp+4Ch+var_48] 3Ah +
mov [esp+4Ch+var_4C] esi +
call strchr  +
test eax eax +
jz loc_41E2F2  +
mov byte ptr [eax] 0 +
mov esi [ebx+14h] +
mov eax [esp+4Ch+arg_18] +
mov [eax] esi +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+24h] +
mov [esp+4Ch+var_20] eax +
jmp loc_41E0CE  +
cmp al 24h +
jz loc_41E363  +
cmp al 44h +
jnz loc_41E1DE  +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_41E395  +
mov ebx [esi] +
mov eax [edi+4] +
lea ecx [ebp+8] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
add ebx eax +
cmp ebx [esp+4Ch+var_2C] +
jbe loc_41E3E3  +
mov edx [esp+4Ch+var_34] +
test edx edx +
jz loc_41E3E3  +
cmp [esp+4Ch+var_2C] ebx +
jb loc_41E1E6  +
mov [esp+4Ch+var_34] 1 +
jmp loc_41E1DE  +
mov eax [esp+4Ch+var_34] +
or eax [esp+4Ch+var_24] +
jnz loc_41E1E6  +
mov [esp+4Ch+var_24] 1 +
mov [esp+4Ch+var_34] 0 +
jmp loc_41E1DE  +
cmp al 48h +
jnz loc_41E1DE  +
mov ecx [esi+14h] +
test ecx ecx +
jnz loc_41E324  +
xor ebx ebx +
jmp loc_41E326  +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
mov ecx [esp+4Ch+var_30] +
add eax [esp+4Ch+var_1C] +
mov edx eax +
mov [esp+4Ch+var_28] eax +
mov eax [esp+4Ch+var_20] +
add eax [ecx+0Ch] +
cmp edx eax +
jnb loc_41E420  +
cmp [esp+4Ch+var_1C] edx +
mov eax 0 +
cmovbe eax edx +
mov [esp+4Ch+var_28] eax +
mov eax [esp+4Ch+arg_1C] +
mov dword ptr [eax] 0 +
jmp loc_41E1DE  +
mov eax [edi+4] +
lea ecx [ebp+6] +
mov eax [eax+34h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+arg_1C] +
mov [edx] eax +
mov eax [esp+4Ch+var_30] +
mov edx [esp+4Ch+var_28] +
mov [eax+20h] ebp +
mov [eax+1Ch] ebx +
mov [eax+24h] edx +
mov [eax+18h] esi +
jmp loc_41E34C  +
mov eax [esp+4Ch+arg_14] +
mov edi [esp+4Ch+var_28] +
mov [eax] edi +
jmp loc_41E2D1  +
mov [esp+4Ch+var_28] 0 +
jmp loc_41E3D4  +
mov eax [ebx+4] +
lea ebp [eax+0Ch] +
mov eax [ebx+10h] +
mov [esp+4Ch+var_28] eax +
jmp loc_41E173  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] 2Ch +
mov [esp+4Ch+var_4C] eax +
call sub_40E220  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jz loc_41E6C0  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset a_stab_0 +
mov [esp+4Ch+var_4C] eax +
call sub_40F280  +
mov edi [esp+4Ch+var_30] +
mov [edi] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset a_stabstr_1 +
mov [esp+4Ch+var_4C] eax +
call sub_40F280  +
mov edx [edi] +
test edx edx +
mov ecx eax +
mov [edi+4] eax +
jz loc_41E6F0  +
test eax eax +
jz loc_41E6F0  +
mov eax [edx+28h] +
test eax eax +
jnz loc_41E4B1  +
mov eax [edx+24h] +
mov edx 0AAAAAAABh +
mul  edx +
shr edx 3 +
lea eax [edx+edx*2] +
shl eax 2 +
mov [esp+4Ch+var_34] eax +
mov eax [ecx+28h] +
test eax eax +
mov [esp+4Ch+var_20] eax +
jnz loc_41E4D7  +
mov eax [ecx+24h] +
mov [esp+4Ch+var_20] eax +
mov esi [esp+4Ch+var_34] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] eax +
call sub_40E140  +
mov edi [esp+4Ch+var_30] +
mov [edi+8] eax +
mov eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_40E140  +
mov edx [edi+8] +
test edx edx +
mov [edi+0Ch] eax +
jz loc_41E6C0  +
test eax eax +
jz loc_41E6C0  +
mov eax [edi] +
mov [esp+4Ch+var_38] esi +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] eax +
call sub_40FA90  +
test eax eax +
jz loc_41E6C0  +
mov eax [esp+4Ch+var_30] +
mov edi [esp+4Ch+var_20] +
mov edx [eax+0Ch] +
mov eax [eax+4] +
mov [esp+4Ch+var_38] edi +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] eax +
call sub_40FA90  +
test eax eax +
jz loc_41E6C0  +
mov eax [esp+4Ch+var_30] +
mov eax [eax] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call loc_410630  +
test eax eax +
mov ebx eax +
js loc_41E6C0  +
mov [esp+4Ch+var_4C] eax +
call sub_412BD0  +
test eax eax +
mov edi eax +
jnz loc_41E5C2  +
test ebx ebx +
jnz loc_41E6C0  +
mov eax [esp+4Ch+var_30] +
mov edx [eax] +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_48] edx +
mov [esp+4Ch+var_40] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_410670  +
test eax eax +
js loc_41E96C  +
jz loc_41E748  +
mov esi [edi] +
test esi esi +
jz loc_41E74C  +
mov ebp edi +
nop   +
jmp loc_41E688  +
cmp dword ptr [eax+8] 2 +
jnz loc_41E69D  +
cmp dword ptr [eax+0Ch] 20h +
jnz loc_41E69D  +
mov ecx [eax+10h] +
test ecx ecx +
jnz loc_41E69D  +
mov ebx [eax+14h] +
test ebx ebx +
jnz loc_41E69D  +
cmp edx 0FFFFFFFFh +
jnz loc_41E69D  +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov edx [eax+28h] +
mov eax [esp+4Ch+var_30] +
mov eax [eax+8] +
add eax [esi+4] +
mov [esp+4Ch+var_4C] eax +
call edx  +
mov edx [esi+0Ch] +
mov ebx [esp+4Ch+arg_0] +
and eax [edx+28h] +
mov edx [esi] +
mov ecx [edx] +
mov edx [ebx+4] +
mov ebx [edx+30h] +
mov edx [esp+4Ch+var_30] +
mov edx [edx+8] +
add edx [esi+4] +
mov [esp+4Ch+var_48] edx +
mov edx [ecx+10h] +
mov edx [edx+1Ch] +
add edx [ecx+8] +
add edx [esi+8] +
add eax edx +
mov [esp+4Ch+var_4C] eax +
call ebx  +
add ebp 4 +
mov esi [ebp+0] +
test esi esi +
jz loc_41E74C  +
mov eax [esi+0Ch] +
mov edx [eax+2Ch] +
test edx edx +
jz loc_41E67A  +
mov ebx [eax+4] +
test ebx ebx +
jz loc_41E605  +
mov [esp+4Ch+var_4C] offset aUnsupported_st +
call off_47D664  +
mov [esp+4Ch+var_4C] 5 +
call sub_4105E0  +
mov [esp+4Ch+var_4C] edi +
call free  +
nop   +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4Ch+var_28] +
mov esi [esp+4Ch+var_30] +
mov [esp+4Ch+var_48] eax +
mov eax [esi+28h] +
add eax edi +
mov [esp+4Ch+var_4C] eax +
call sub_461F50  +
test eax eax +
jnz loc_41E264  +
jmp loc_41E2C4  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset aGdb_symbols +
mov [esp+4Ch+var_4C] eax +
call sub_40F280  +
mov edi [esp+4Ch+var_30] +
mov [edi] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset aGdb_strings +
mov [esp+4Ch+var_4C] eax +
call sub_40F280  +
mov edx [edi] +
test edx edx +
mov ecx eax +
mov [edi+4] eax +
jz loc_41E731  +
test eax eax +
jnz loc_41E4A7  +
mov eax [esp+4Ch+arg_20] +
mov edi [esp+4Ch+var_30] +
mov [eax] edi +
mov eax 1 +
jmp loc_41E2FD  +
test edi edi +
jz loc_41E754  +
mov [esp+4Ch+var_4C] edi +
call free  +
mov edi [esp+4Ch+var_30] +
xor esi esi +
mov ebp [esp+4Ch+var_34] +
mov ecx [edi+8] +
mov eax ebp +
mov dword ptr [edi+14h] 0 +
add eax ecx +
mov ebx ecx +
cmp ecx eax +
jb loc_41E786  +
jmp loc_41E7D3  +
cmp al 24h +
jz loc_41E901  +
lea eax [ecx+ebp] +
add ebx 0Ch +
cmp eax ebx +
jbe loc_41E7C7  +
movzx eax byte ptr [ebx+4] +
cmp al 64h +
jnz loc_41E774  +
test esi esi +
jz loc_41E796  +
add dword ptr [edi+14h] 1 +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebx +
call eax  +
mov ecx [edi+8] +
test eax eax +
lea eax [ecx+ebp] +
jz loc_41E91E  +
lea edx [ebx+10h] +
mov esi ebx +
cmp eax edx +
jbe loc_41E77F  +
cmp byte ptr [ebx+10h] 64h +
jnz loc_41E77F  +
add ebx 0Ch +
jmp loc_41E77F  +
test esi esi +
jz loc_41E7D3  +
mov eax [esp+4Ch+var_30] +
add dword ptr [eax+14h] 1 +
mov eax [esp+4Ch+var_30] +
mov eax [eax+14h] +
test eax eax +
jz loc_41E2F8  +
mov edi [esp+4Ch+var_30] +
add eax 1 +
mov [edi+14h] eax +
imul eax eax +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_40E140  +
test eax eax +
mov ebx eax +
mov [edi+10h] eax +
jz loc_41E6C0  +
mov ebp [edi+8] +
cmp dword ptr [edi+14h] 0 +
mov esi [edi+0Ch] +
mov ecx ebp +
jle loc_41EAE8  +
mov eax [esp+4Ch+var_34] +
add eax ebp +
cmp ebp eax +
jnb loc_41EAE8  +
xor edi edi +
xor ecx ecx +
mov edx edi +
mov ebx ecx +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_24] esi +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_1C] 0 +
jmp loc_41E8BC  +
cmp al 64h +
jz loc_41E97D  +
cmp al 84h +
jnz loc_41E895  +
mov eax [edi+4] +
mov [esp+4Ch+var_18] edx +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
mov edx [esp+4Ch+var_30] +
lea ebx [esi+eax] +
mov eax [esp+4Ch+var_20] +
add eax [edx+0Ch] +
mov edx [esp+4Ch+var_18] +
cmp ebx eax +
jnb loc_41E965  +
cmp ebx esi +
mov eax 0 +
cmovb ebx eax +
mov eax [esp+4Ch+var_30] +
add ebp 0Ch +
mov ecx [esp+4Ch+var_28] +
cmp ecx [eax+14h] +
jge loc_41EB56  +
mov ecx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_34] +
add eax [ecx+8] +
cmp ebp eax +
jnb loc_41EB56  +
movzx eax byte ptr [ebp+4] +
cmp al 24h +
jz loc_41EA5F  +
ja loc_41E856  +
test al al +
jnz loc_41E895  +
mov ecx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_20] +
add eax [ecx+0Ch] +
sub eax esi +
cmp eax [esp+4Ch+var_1C] +
jb loc_41E895  +
mov eax [edi+4] +
lea ecx [ebp+8] +
mov [esp+4Ch+var_18] edx +
add esi [esp+4Ch+var_1C] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+var_18] +
mov [esp+4Ch+var_1C] eax +
jmp loc_41E895  +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebx +
call eax  +
test eax eax +
jz loc_41E925  +
mov ecx [edi+8] +
add dword ptr [edi+14h] 1 +
lea eax [ecx+ebp] +
xor esi esi +
jmp loc_41E77F  +
mov ecx [edi+8] +
jmp loc_41E77C  +
mov eax [edi+4] +
lea ecx [ebp+0Ch] +
mov [esp+4Ch+var_24] ecx +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+var_30] +
mov ecx [esp+4Ch+var_24] +
mov [esp+4Ch+var_24] esi +
lea ebx [esi+eax] +
mov eax [esp+4Ch+var_20] +
add eax [edx+0Ch] +
mov edx ebp +
mov ebp ecx +
cmp ebx eax +
jnb loc_41E965  +
cmp ebx esi +
jnb loc_41E895  +
xor ebx ebx +
jmp loc_41E895  +
test edi edi +
nop   +
jnz loc_41E6B6  +
xor eax eax +
jmp loc_41E6C2  +
test edx edx +
nop   +
jz loc_41E9DD  +
imul eax [esp+4Ch+var_28] +
mov ecx [esp+4Ch+var_30] +
mov [esp+4Ch+var_10] edx +
mov [esp+4Ch+var_18] eax +
add eax [ecx+10h] +
lea ecx [edx+8] +
mov [esp+4Ch+var_14] eax +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+var_14] +
mov ecx [esp+4Ch+var_30] +
add [esp+4Ch+var_28] 1 +
mov [edx] eax +
mov edx [esp+4Ch+var_10] +
mov eax [esp+4Ch+var_18] +
add eax [ecx+10h] +
mov [eax+4] edx +
mov edx [esp+4Ch+var_24] +
mov [eax+10h] ebx +
mov dword ptr [eax+14h] 0 +
mov [eax+8] edx +
mov edx [esp+4Ch+var_2C] +
mov [eax+0Ch] edx +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
add eax esi +
cmp eax esi +
mov edx eax +
mov [esp+4Ch+var_2C] eax +
jz loc_41EA4E  +
mov ecx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_20] +
add eax [ecx+0Ch] +
cmp edx eax +
jnb loc_41EA44  +
cmp edx esi +
mov eax 0 +
cmovnb eax edx +
mov [esp+4Ch+var_2C] eax +
mov ecx [esp+4Ch+var_30] +
lea edx [ebp+10h] +
mov eax [esp+4Ch+var_34] +
add eax [ecx+8] +
cmp edx eax +
jnb loc_41EA2D  +
cmp byte ptr [ebp+10h] 64h +
jz loc_41E92D  +
mov ebx [esp+4Ch+var_2C] +
mov edx ebp +
mov [esp+4Ch+var_24] esi +
mov [esp+4Ch+var_2C] 0 +
jmp loc_41E895  +
mov [esp+4Ch+var_2C] 0 +
jmp loc_41EA11  +
mov [esp+4Ch+var_2C] 0 +
xor ebx ebx +
xor edx edx +
jmp loc_41E895  +
mov eax [edi+4] +
mov [esp+4Ch+var_18] edx +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
mov edx [esp+4Ch+var_18] +
lea ecx [esi+eax] +
cmp ecx esi +
jz loc_41E895  +
mov edx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_20] +
add eax [edx+0Ch] +
cmp ecx eax +
mov eax 0 +
cmovnb ecx eax +
imul eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_10] ecx +
mov [esp+4Ch+var_18] eax +
add eax [edx+10h] +
lea edx [ebp+8] +
mov [esp+4Ch+var_14] eax +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov edx [esp+4Ch+var_14] +
mov ecx [esp+4Ch+var_10] +
add [esp+4Ch+var_28] 1 +
mov [edx] eax +
mov edx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_18] +
add eax [edx+10h] +
mov edx [esp+4Ch+var_2C] +
mov [eax+4] ebp +
mov [eax+8] esi +
mov [eax+0Ch] edx +
xor edx edx +
mov [eax+10h] ebx +
mov [eax+14h] ecx +
jmp loc_41E895  +
mov [esp+4Ch+var_28] 0 +
mov edi [esp+4Ch+var_28] +
mov edx [esp+4Ch+var_34] +
imul eax edi +
add edx ecx +
add eax ebx +
mov dword ptr [eax] 0FFFFFFFFh +
mov [eax+4] edx +
mov [eax+8] esi +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov eax edi +
mov edi [esp+4Ch+var_30] +
add eax 1 +
mov [edi+14h] eax +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_40] offset sub_41DB30 +
mov [esp+4Ch+var_44] 18h +
mov [esp+4Ch+var_4C] ebx +
call qsort  +
mov eax [esp+4Ch+arg_20] +
mov [eax] edi +
jmp loc_41E0CE  +
test edx edx +
mov edi edx +
jz loc_41EBB8  +
mov eax [esp+4Ch+var_30] +
lea edx [edx+8] +
mov ecx [esp+4Ch+arg_0] +
mov [esp+4Ch+var_1C] ebx +
imul ebp [esp+4Ch+var_28] +
mov ebx [eax+10h] +
mov eax [ecx+4] +
add ebx ebp +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov edx [esp+4Ch+var_30] +
mov ecx [esp+4Ch+var_1C] +
add [esp+4Ch+var_28] 1 +
mov [ebx] eax +
mov ebx [edx+10h] +
lea eax [ebx+ebp] +
mov [eax+4] edi +
mov edi [esp+4Ch+var_24] +
mov [eax+10h] ecx +
mov ecx [edx+8] +
mov dword ptr [eax+14h] 0 +
mov [eax+8] edi +
mov edi [esp+4Ch+var_2C] +
mov [eax+0Ch] edi +
jmp loc_41EAF0  +
mov eax [esp+4Ch+var_30] +
mov ecx [eax+8] +
mov ebx [eax+10h] +
jmp loc_41EAF0  +
***
mov eax [esp+4] +
mov eax [eax] +
retn   +
***
mov eax [esp+4] +
mov ecx [esp+8] +
mov edx [eax] +
mov eax [eax+4] +
xor eax [ecx+4] +
xor edx [ecx] +
or edx eax +
setz al  +
movzx eax al +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
jmp calloc  +
***
sub esp 18h +
xor edx edx +
test byte ptr [ebx+2Bh] 1 +
jnz loc_41EC53  +
mov edx [ebx+4] +
mov edx [edx] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_40DC70  +
test eax eax +
jz loc_41EC89  +
movzx edx byte ptr [ebx+2Ch] +
movzx ecx byte ptr [eax+2Ch] +
and edx 10h +
and ecx 0FFFFFFEFh +
or ecx edx +
movzx edx byte ptr [eax+2Bh] +
mov [eax+2Ch] cl +
movzx ecx byte ptr [ebx+2Bh] +
and edx 0FFFFFFF7h +
and ecx 8 +
or edx ecx +
mov [eax+2Bh] dl +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov ebp [eax+0A0h] +
mov eax [eax+4] +
mov eax [eax+0ECh] +
mov [esp+30h+var_30] esi +
call eax  +
test eax eax +
jz loc_41ECC1  +
mov ebx [eax+4] +
mov [esp+30h+var_30] eax +
call free  +
cmp ebx 3 +
ja loc_41ECD0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] esi +
call sub_40E220  +
test eax eax +
mov edi eax +
jz loc_41ECC1  +
mov [esp+30h+var_28] esi +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] eax +
call sub_411C00  +
cmp eax ebx +
jz loc_41ED20  +
call sub_410390  +
cmp eax 1 +
nop   +
jz loc_41ED0E  +
mov [esp+30h+var_30] 0Ah +
call sub_4105E0  +
mov [esp+30h+var_2C] edi +
mov [esp+30h+var_30] esi +
call sub_40E390  +
jmp loc_41ECC1  +
mov [esp+30h+var_20] eax +
mov eax [esi+4] +
mov eax [eax+4Ch] +
mov [esp+30h+var_30] edi +
call eax  +
mov ecx [esp+30h+var_20] +
sub ecx 4 +
shr eax 3 +
lea edx ds:0[eax*8] +
cmp edx ecx +
mov [ebp+14h] eax +
ja loc_41EE33  +
shl eax 4 +
add edi 4 +
mov dword ptr [ebp+8] 0 +
lea edx [edi+edx+4] +
mov [esp+30h+var_2C] eax +
mov [esp+30h+var_30] esi +
mov [esp+30h+var_18] edx +
call sub_40E140  +
test eax eax +
mov ebx eax +
mov [ebp+10h] eax +
jz loc_41ECC1  +
mov eax [ebp+14h] +
xor edx edx +
test eax eax +
jz loc_41EDD0  +
mov [esp+30h+var_20] ebp +
mov ebp esi +
mov esi edx +
lea esi [esi+0] +
mov eax [ebp+4] +
add esi 1 +
add ebx 10h +
mov eax [eax+4Ch] +
mov [esp+30h+var_30] edi +
call eax  +
lea ecx [edi+4] +
add edi 8 +
add eax [esp+30h+var_18] +
mov [ebx-10h] eax +
mov eax [ebp+4] +
mov eax [eax+4Ch] +
mov [esp+30h+var_30] ecx +
call eax  +
mov dword ptr [ebx-4] 0 +
mov [ebx-8] eax +
mov eax [esp+30h+var_20] +
cmp [eax+14h] esi +
ja loc_41ED90  +
mov esi ebp +
mov ebp eax +
mov [esp+30h+var_30] esi +
call sub_411D30  +
mov [esp+30h+var_1C] edx +
mov edi [esp+30h+var_1C] +
mov [esp+30h+var_20] eax +
sar edi 1Fh +
mov eax edi +
sar eax 1Fh +
mov [esp+30h+var_14] eax +
mov eax [esp+30h+var_20] +
mov [esp+30h+var_18] edi +
mov edx [esp+30h+var_14] +
xor eax edi +
mov ecx eax +
mov ebx edx +
sub ecx [esp+30h+var_18] +
and ecx 1 +
mov eax ecx +
xor eax edi +
mov ecx eax +
mov eax [esp+30h+var_18] +
sub ecx eax +
mov eax 1 +
sbb ebx edx +
add ecx [esp+30h+var_20] +
adc ebx [esp+30h+var_1C] +
mov [ebp+0] ecx +
mov [ebp+4] ebx +
or byte ptr [esi+2Bh] 20h +
jmp loc_41ECC3  +
mov [esp+30h+var_30] 3 +
call sub_4105E0  +
jmp loc_41ED0E  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
sub esp 3Ch +
mov [esp+48h+var_20] edx +
call sub_46A710  +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_1C] eax +
call sub_4697C0  +
mov [esp+48h+var_48] edi +
test eax eax +
cmovnz ebp eax +
mov [esp+48h+var_28] eax +
call sub_4697C0  +
test eax eax +
mov [esp+48h+var_24] eax +
cmovnz edi eax +
lea esi [esi+0] +
movzx eax byte ptr [ebp+0] +
mov ebx ebp +
test al al +
jnz loc_41EEAE  +
jmp loc_41EEB2  +
cmp al 2Fh +
jz loc_41EEB2  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_41EEB2  +
cmp al 5Ch +
jnz loc_41EEA0  +
movzx ecx byte ptr [edi] +
test cl cl +
jz loc_41EFFD  +
cmp cl 5Ch +
jz loc_41F079  +
cmp cl 2Fh +
mov esi edi +
jnz loc_41EEE7  +
lea esi [esi+0] +
jmp loc_41F079  +
cmp dl 5Ch +
jz loc_41F080  +
cmp dl 2Fh +
jz loc_41F080  +
add esi 1 +
movzx edx byte ptr [esi] +
test dl dl +
jnz loc_41EED5  +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_2C] ecx +
call strlen  +
mov ecx [esp+48h+var_2C] +
lea esi [eax+1] +
mov eax [esp+48h+var_20] +
xor edx edx +
xor ebx ebx +
add eax 1 +
nop   +
cmp cl 5Ch +
jz loc_41EF1A  +
cmp cl 2Fh +
jnz loc_41EF2B  +
cmp edi eax +
jbe loc_41EF28  +
cmp byte ptr [edi-1] 2Eh +
jz loc_41EFEB  +
add ebx 1 +
add edi 1 +
movzx ecx byte ptr [edi] +
test cl cl +
jnz loc_41EF10  +
lea eax [ebx+ebx*2] +
add esi eax +
test edx edx +
mov [esp+48h+var_2C] edx +
jz loc_41F0D4  +
mov edi [esp+48h+var_1C] +
mov [esp+48h+var_48] edi +
call strlen  +
mov edx [esp+48h+var_2C] +
mov ecx edi +
lea edi [edi+eax-1] +
cmp ecx edi +
setb cl  +
test edx edx +
jz loc_41EF7F  +
test cl cl +
jz loc_41EF7F  +
movzx eax byte ptr [edi] +
jmp loc_41EF74  +
cmp al 2Fh +
jz loc_41EF78  +
cmp al 5Ch +
jnz loc_41EF70  +
sub edx 1 +
test edx edx +
jnz loc_41EF65  +
test edx edx +
jnz loc_41F0BB  +
mov [esp+48h+var_48] edi +
call strlen  +
lea esi [esi+eax+1] +
cmp esi ds:dword_4A8808 +
jbe loc_41F014  +
mov eax ds:dword_4A8804 +
test eax eax +
jz loc_41EFAC  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_48] esi +
mov ds:dword_4A8808 0 +
call sub_412BD0  +
test eax eax +
mov ds:dword_4A8804 eax +
jz loc_41F0B7  +
test ebx ebx +
mov ds:dword_4A8808 esi +
mov esi eax +
jnz loc_41F01E  +
test edi edi +
mov eax esi +
jnz loc_41F039  +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] eax +
call strcpy  +
jmp loc_41F057  +
cmp byte ptr [edi-2] 2Eh +
jnz loc_41EF28  +
add edx 1 +
jmp loc_41EF2B  +
mov [esp+48h+var_48] ebp +
call strlen  +
lea esi [eax+1] +
xor ebx ebx +
xor edi edi +
cmp esi ds:dword_4A8808 +
ja loc_41EF9B  +
test ebx ebx +
mov esi ds:dword_4A8804 +
jz loc_41EFD7  +
mov edx ebx +
mov eax esi +
mov dword ptr [eax] 2F2E2Eh +
add eax 3 +
sub edx 1 +
jnz loc_41F022  +
lea eax [ebx+ebx*2] +
add eax esi +
test edi edi +
jz loc_41EFDD  +
mov [esp+48h+var_3C] ebp +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] offset aSS_2 +
mov [esp+48h+var_48] eax +
call sprintf  +
mov esi ds:dword_4A8804 +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] eax +
call free  +
mov eax [esp+48h+var_24] +
mov [esp+48h+var_48] eax +
call free  +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edi +
nop   +
lea esi [esi+0] +
test al al +
jz loc_41EEF1  +
mov eax ebx +
mov edx esi +
sub eax ebp +
sub edx edi +
cmp eax edx +
jnz loc_41EEF1  +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] ebp +
call sub_461FA0  +
test eax eax +
jnz loc_41F0DB  +
lea ebp [ebx+1] +
lea edi [esi+1] +
jmp loc_41EE90  +
xor esi esi +
jmp loc_41F057  +
mov [esp+48h+var_44] 5F3h +
mov [esp+48h+var_48] offset a____Binutil_21 +
call sub_410530  +
jmp loc_41EF87  +
xor edi edi +
jmp loc_41F00C  +
mov [esp+48h+var_48] ebp +
nop   +
call strlen  +
movzx ecx byte ptr [edi] +
test cl cl +
lea esi [eax+1] +
jz loc_41F008  +
jmp loc_41EF04  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov eax [eax] +
mov eax [eax+8] +
mov [esp+1Ch+var_1C] eax +
call sub_40DEA0  +
mov eax 1 +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_C] +
mov [esp+10h+var_C] 14h +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_10] offset unk_4A8821 +
mov edi [esp+10h+arg_0] +
mov [esp+10h+var_4] eax +
mov eax [esp+10h+arg_8] +
mov [esp+10h+var_8] eax +
call sub_41EC00  +
mov [esp+10h+var_10] offset unk_4A8821 +
call strlen  +
cmp eax esi +
mov ebx eax +
jb loc_41F180  +
mov [esp+10h+arg_8] esi +
mov [esp+10h+arg_0] edi +
mov [esp+10h+arg_4] offset unk_4A8821 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp memcpy  +
mov [esp+10h+var_10] edi +
sub esi ebx +
add ebx edi +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] offset unk_4A8821 +
call memcpy  +
mov [esp+10h+arg_8] esi +
mov [esp+10h+arg_0] ebx +
mov [esp+10h+arg_4] 20h +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp memset  +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_8] +
mov [esp+10h+var_8] offset a10lu +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_C] 15h +
mov edi [esp+10h+arg_0] +
mov [esp+10h+var_10] offset unk_4A880C +
mov [esp+10h+var_4] eax +
call sub_41EC00  +
mov [esp+10h+var_10] offset unk_4A880C +
call strlen  +
cmp eax esi +
mov ebx eax +
ja loc_41F260  +
jb loc_41F226  +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_C] offset unk_4A880C +
call memcpy  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] edi +
sub esi ebx +
add ebx edi +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] offset unk_4A880C +
call memcpy  +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_C] 20h +
call memset  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] 13h +
call sub_4105E0  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 38h +
mov [esp] ebx +
call sub_40E220  +
test eax eax +
mov [ebx+0A0h] eax +
setnz al  +
add esp 18h +
movzx eax al +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
test byte ptr [eax+2Bh] 20h +
jz loc_41F2E2  +
mov edx [esp+24h] +
lea ecx [edx+1] +
xor edx edx +
cmp dword ptr [esp+24h] 0FFFFFFFFh +
cmovnz edx ecx +
mov ecx [eax+0A0h] +
mov eax 0FFFFFFFFh +
cmp edx [ecx+14h] +
jb loc_41F2F7  +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 5 +
call sub_4105E0  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
***
mov eax edx +
shl eax 4 +
add eax [ecx+10h] +
mov ecx [esp+28h] +
mov [ecx] eax +
mov eax edx +
add esp 1Ch +
retn   +
***
jmp sub_40DA20  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov [eax+94h] edx +
mov eax 1 +
retn   +
***
mov ebx [esp+28h+arg_0] +
mov edx [esp+28h+arg_8] +
mov eax [ebx+0A0h] +
mov ecx [eax+8] +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_14] edx +
test ecx ecx +
mov [esp+28h+var_18] eax +
jz loc_41F394  +
lea eax [esp+28h+var_18] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] ecx +
call sub_46AFC0  +
test eax eax +
jz loc_41F394  +
mov eax [eax+8] +
movzx ecx byte ptr [ebx+2Bh] +
movzx edx byte ptr [eax+2Bh] +
and ecx 8 +
and edx 0FFFFFFF7h +
or edx ecx +
mov [eax+2Bh] dl +
add esp 28h +
pop ebx  +
retn   +
xor eax eax +
jmp loc_41F38F  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
mov eax [ebx+0A0h] +
mov ebp [eax+8] +
test ebp ebp +
jz loc_41F414  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] 10h +
call sub_40E220  +
mov [eax] esi +
mov ebx eax +
mov [eax+4] edi +
mov eax [esp+2Ch+arg_C] +
mov [ebx+8] eax +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_46B1C0  +
mov [eax] ebx +
mov eax [esp+2Ch+arg_C] +
mov eax [eax+88h] +
mov [eax+18h] ebp +
mov [eax+20h] esi +
mov [eax+24h] edi +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_18] offset free +
mov [esp+2Ch+var_1C] offset loc_41EC30 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] offset loc_41EBE0 +
mov [esp+2Ch+var_28] offset loc_41EBD0 +
mov [esp+2Ch+var_2C] 10h +
call sub_46AC00  +
test eax eax +
mov ebp eax +
jz loc_41F460  +
mov eax [ebx+0A0h] +
mov [eax+8] ebp +
jmp loc_41F3C0  +
xor eax eax +
jmp loc_41F40C  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov ebx [esp+7Ch+arg_0] +
lea ebp [esp+7Ch+var_48] +
mov [esp+7Ch+var_78] 3Ch +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] ebx +
call sub_411C00  +
cmp eax 3Ch +
jz loc_41F4D6  +
call sub_410390  +
cmp eax 1 +
jz loc_41F4CC  +
mov [esp+7Ch+var_7C] 9 +
call sub_4105E0  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esp+0] 0Ah +
call sub_4105E0  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+7Ch+var_E] +
mov edi offset asc_4870EA +
mov ecx 2 +
mov esi eax +
cmps   +
jz loc_41F514  +
mov esi [esp+7Ch+arg_4] +
test esi esi +
jz loc_41F4C0  +
mov edi [esp+7Ch+arg_4] +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_78] edi +
call strncmp  +
test eax eax +
jnz loc_41F4C0  +
mov esi ds:__imp__errno +
call esi  +
mov dword ptr [eax] 0 +
lea eax [esp+7Ch+var_50] +
movzx edi byte ptr [esp+7Ch+var_E] +
mov [esp+7Ch+var_74] eax +
lea eax [esp+7Ch+var_18] +
mov [esp+7Ch+var_78] offset aLu_0 +
mov [esp+7Ch+var_7C] eax +
mov byte ptr [esp+7Ch+var_E] 0 +
call sscanf  +
mov ecx edi +
mov byte ptr [esp+7Ch+var_E] cl +
cmp eax 1 +
jnz loc_41F4C0  +
movzx edx byte ptr [esp+7Ch+var_48] +
cmp dl 2Fh +
jz loc_41F730  +
cmp dl 20h +
jz loc_41F702  +
cmp dl 23h +
jz loc_41F670  +
mov eax [ebx+4] +
movzx edi byte ptr [eax+1Ah] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] ebp +
call memchr  +
test eax eax +
jz loc_41F835  +
sub eax ebp +
mov edi eax +
lea eax [edi+65h] +
xor edx edx +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_68] 0 +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_60] edx +
call sub_412D60  +
test eax eax +
mov esi eax +
jz loc_41F4CC  +
mov edx [esp+7Ch+var_60] +
xor ecx ecx +
lea eax [esi+28h] +
test edx edx +
mov [esi] eax +
mov eax [esp+7Ch+var_48] +
mov [esi+28h] eax +
mov eax [esp+7Ch+var_44] +
mov [esi+2Ch] eax +
mov eax [esp+7Ch+var_40] +
mov [esi+30h] eax +
mov eax [esp+7Ch+var_3C] +
mov [esi+34h] eax +
mov eax [esp+7Ch+var_38] +
mov [esi+38h] eax +
mov eax [esp+7Ch+var_34] +
mov [esi+3Ch] eax +
mov eax [esp+7Ch+var_30] +
mov [esi+40h] eax +
mov eax [esp+7Ch+var_2C] +
mov [esi+44h] eax +
mov eax [esp+7Ch+var_28] +
mov [esi+48h] eax +
mov eax [esp+7Ch+var_24] +
mov [esi+4Ch] eax +
mov eax [esp+7Ch+var_20] +
mov [esi+50h] eax +
mov eax [esp+7Ch+var_1C] +
mov [esi+54h] eax +
mov eax [esp+7Ch+var_18] +
mov [esi+58h] eax +
mov eax [esp+7Ch+var_14] +
mov [esi+5Ch] eax +
mov eax [esp+6Ch] +
mov [esi+60h] eax +
mov eax [esp+7Ch+var_50] +
mov [esi+4] eax +
mov [esi+8] ecx +
mov ecx [esp+7Ch+var_6C] +
mov ebx [esp+7Ch+var_68] +
mov [esi+10h] ecx +
mov [esi+14h] ebx +
jz loc_41F7E0  +
mov [esi+0Ch] edx +
add esp 7Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [esp+7Ch+var_48+1] 31h +
jnz loc_41F577  +
cmp byte ptr [esp+7Ch+var_48+2] 2Fh +
jnz loc_41F577  +
movzx eax byte ptr [esp+7Ch+var_48+3] +
test ds:byte_49F240[eax+eax] 4 +
jz loc_41F577  +
lea eax [esp+7Ch+var_48+3] +
mov [esp+7Ch+var_7C] eax +
call atoi  +
sub [esp+7Ch+var_50] eax +
mov ecx eax +
lea eax [eax+65h] +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_6C] ecx +
call sub_412D60  +
test eax eax +
mov esi eax +
jz loc_41F4CC  +
mov ecx [esp+7Ch+var_6C] +
lea edx [eax+64h] +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] ebx +
mov [esp+7Ch+var_6C] edx +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_60] ecx +
call sub_411C00  +
mov ecx [esp+7Ch+var_60] +
mov edx [esp+7Ch+var_6C] +
cmp eax ecx +
mov edi eax +
jz loc_41F872  +
mov [esp+7Ch+var_7C] esi +
call free  +
jmp loc_41F49B  +
mov eax [ebx+4] +
mov [esp+7Ch+var_6C] edx +
movzx edi byte ptr [eax+1Ah] +
mov [esp+7Ch+var_78] 2Fh +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] edi +
call memchr  +
mov edx [esp+7Ch+var_6C] +
test eax eax +
jnz loc_41F57E  +
lea esi [esi+0] +
mov eax [ebx+0A0h] +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_41F56E  +
call esi  +
mov dword ptr [eax] 0 +
lea eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_78] eax +
lea eax [esp+7Ch+var_48+1] +
mov [esp+7Ch+var_74] 0Ah +
mov [esp+7Ch+var_7C] eax +
call strtol  +
mov edi eax +
call esi  +
mov edx [eax] +
test edx edx +
jnz loc_41F4C0  +
mov eax [ebx+0A0h] +
cmp edi [eax+1Ch] +
jnb loc_41F4C0  +
test byte ptr [ebx+2Bh] 40h +
jz loc_41F7F5  +
mov edx [esp+7Ch+var_4C] +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_68] 0 +
test edx edx +
jz loc_41F805  +
cmp byte ptr [edx] 3Ah +
jnz loc_41F805  +
add edx 1 +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] 0Ah +
mov [esp+7Ch+var_78] 0 +
call strtol  +
mov [esp+7Ch+var_6C] eax +
sar eax 1Fh +
mov [esp+7Ch+var_68] eax +
call esi  +
mov eax [eax] +
test eax eax +
jnz loc_41F4C0  +
mov eax [ebx+0A0h] +
jmp loc_41F805  +
lea eax [esi+64h] +
test edi edi +
mov [esi+0Ch] eax +
jnz loc_41F820  +
mov byte ptr [eax+edi] 0 +
mov eax esi +
jmp loc_41F4B3  +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_68] 0 +
mov edx edi +
add edx [eax+18h] +
jz loc_41F4CC  +
mov eax 64h +
xor edi edi +
jmp loc_41F5B3  +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov eax [esi+0Ch] +
jmp loc_41F7EA  +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] 2Fh +
mov [esp+7Ch+var_7C] ebp +
call memchr  +
test eax eax +
jnz loc_41F59A  +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] 20h +
mov [esp+7Ch+var_7C] ebp +
call memchr  +
test eax eax +
jz loc_41F59E  +
jmp loc_41F59A  +
mov byte ptr [esi+eax+64h] 0 +
mov ecx eax +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_68] 0 +
jmp loc_41F5CF  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_41F470  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov ebx [edi] +
mov [esp+1Ch+var_1C] ebx +
call sub_4698B0  +
mov esi [esp+1Ch+arg_4] +
cmp eax ebx +
jz loc_41F90F  +
sub eax ebx +
mov [esp+1Ch+var_1C] esi +
mov ebp eax +
call strlen  +
mov [esp+1Ch+var_1C] edi +
lea eax [ebp+eax+1] +
mov [esp+1Ch+var_18] eax +
call sub_40E140  +
test eax eax +
mov edi eax +
jz loc_41F920  +
mov [esp+1Ch+var_14] ebp +
add ebp edi +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] eax +
call strncpy  +
mov [esp+1Ch+var_18] esi +
mov esi edi +
mov [esp+1Ch+var_1C] ebp +
call strcpy  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi esi +
jmp loc_41F90F  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
call sub_41F340  +
test eax eax +
mov ebx eax +
jz loc_41F963  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
call sub_411E10  +
test eax eax +
js loc_41F959  +
mov eax [ebp+4] +
mov eax [eax+0ECh] +
mov [esp+2Ch+var_2C] ebp +
call eax  +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_41F959  +
test byte ptr [ebp+2Bh] 40h +
mov ebx [eax+0Ch] +
jz loc_41FB55  +
movzx eax byte ptr [ebx] +
cmp al 5Ch +
jz loc_41F9D8  +
cmp al 2Fh +
jz loc_41F9D8  +
test al al +
nop   +
jz loc_41F9B8  +
cmp byte ptr [ebx+1] 3Ah +
jz loc_41F9D8  +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_41F8B0  +
test eax eax +
mov ebx eax +
jnz loc_41F9D8  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call free  +
jmp loc_41F959  +
mov eax [esp+2Ch+var_14] +
cmp dword ptr [eax+14h] 0 +
jl loc_41FA8B  +
jle loc_41FA81  +
mov eax [ebp+0] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call sub_461F50  +
test eax eax +
jz loc_41FBC3  +
mov esi [ebp+98h] +
test esi esi +
jnz loc_41FA20  +
jmp loc_41FB80  +
mov esi [esi+90h] +
test esi esi +
jz loc_41FB80  +
mov eax [esi] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call sub_461F50  +
test eax eax +
jnz loc_41FA12  +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] esi +
call sub_40EFC0  +
test eax eax +
jz loc_41FB67  +
mov eax [esp+2Ch+var_14] +
mov ebx [eax+14h] +
mov ecx [eax+10h] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] ecx +
call sub_41F930  +
test eax eax +
mov ebx eax +
jz loc_41F9CA  +
mov [esp+2Ch+var_2C] ebp +
call sub_411D30  +
mov [ebx+40h] eax +
mov [ebx+44h] edx +
jmp loc_41F959  +
cmp dword ptr [eax+10h] 0 +
ja loc_41F9EC  +
mov edx ebp +
mov eax ebx +
call sub_41EC40  +
test eax eax +
mov ecx eax +
jz loc_41FBC3  +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_10] ecx +
call sub_411D30  +
mov ecx [esp+2Ch+var_10] +
mov [ecx+40h] eax +
mov [ecx+44h] edx +
test byte ptr [ebp+2Bh] 40h +
jz loc_41FBA6  +
mov dword ptr [ecx+38h] 0 +
mov dword ptr [ecx+3Ch] 0 +
mov eax [esp+2Ch+var_14] +
mov ebx [ecx+28h] +
mov [ecx+88h] eax +
mov eax [ebp+28h] +
mov edx ebx +
and ebx 0FF80001Fh +
shr edx 5 +
and edx 3FFFFh +
shr eax 5 +
and eax 2C000h +
or eax edx +
shl eax 5 +
or ebx eax +
movzx eax byte ptr [ecx+2Ch] +
mov [ecx+28h] ebx +
movzx edx byte ptr [ebp+2Ch] +
and eax 0FFFFFFFDh +
and edx 2 +
or eax edx +
mov [ecx+2Ch] al +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_10] ecx +
call sub_41F3A0  +
mov ecx [esp+2Ch+var_10] +
mov ebx ecx +
test eax eax +
jnz loc_41F959  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call free  +
mov dword ptr [ebx+88h] 0 +
xor ebx ebx +
jmp loc_41F959  +
mov [esp+2Ch+var_2C] ebp +
call sub_40DA20  +
test eax eax +
mov ecx eax +
jnz loc_41FA9E  +
mov eax [esp+2Ch+var_14] +
xor ebx ebx +
mov [esp+2Ch+var_2C] eax +
call free  +
jmp loc_41F959  +
mov edx ebp +
mov eax ebx +
call sub_41EC40  +
test eax eax +
jz loc_41FB67  +
mov edx [ebp+98h] +
mov esi eax +
mov [eax+90h] edx +
mov [ebp+98h] eax +
jmp loc_41FA32  +
mov [ecx+38h] eax +
mov [ecx+3Ch] edx +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] ecx +
call sub_462210  +
mov ecx [esp+2Ch+var_10] +
mov [ecx] eax +
jmp loc_41FACC  +
mov [esp+2Ch+var_2C] 0Ah +
call sub_4105E0  +
jmp loc_41FB67  +
***
jmp loc_41FBE0  +
sub esp 1Ch +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [ecx+0A0h] +
shl eax 4 +
add eax [edx+10h] +
mov edx [eax+0Ch] +
mov eax [eax+8] +
mov [esp] ecx +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_41F930  +
add esp 1Ch +
retn   +
***
jmp sub_41FC20  +
***
mov eax [esp+18h+arg_0] +
movzx edx byte ptr [eax+28h] +
mov ecx edx +
and ecx 7 +
cmp cl 2 +
jnz loc_41FC50  +
and edx 18h +
cmp dl 10h +
jz loc_41FC50  +
mov edx [eax+4] +
mov edx [edx+0F4h] +
add esp 18h +
pop ebx  +
jmp edx  +
mov [esp+18h+var_18] 5 +
call sub_4105E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ecx [esp+34h] +
test ecx ecx +
jz loc_41FCE3  +
mov ebx [esp+30h] +
mov eax [ecx+40h] +
mov edx [ecx+44h] +
test byte ptr [ebx+2Bh] 40h +
jnz loc_41FCC7  +
mov ecx [ecx+88h] +
xor ebx ebx +
mov ecx [ecx+4] +
add ecx eax +
mov ebp ecx +
adc ebx edx +
and ebp 1 +
xor edi edi +
add ecx ebp +
adc ebx edi +
cmp edx ebx +
jb loc_41FCC3  +
ja loc_41FCB3  +
cmp eax ecx +
jb loc_41FCC3  +
mov dword ptr [esp] 0Ah +
call sub_4105E0  +
xor eax eax +
jmp loc_41FCDB  +
mov eax ecx +
mov edx ebx +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp+8] edx +
mov [esp] eax +
call sub_41F930  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+30h] +
mov eax [eax+0A0h] +
mov edx [eax+4] +
mov eax [eax] +
jmp loc_41FCC7  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
lea ebp [esp+17h] +
mov dword ptr [esp+4] 8 +
mov [esp] ebp +
mov [esp+8] ebx +
call sub_411C00  +
cmp eax 8 +
jz loc_41FD48  +
call sub_410390  +
cmp eax 1 +
jz loc_41FD3E  +
mov dword ptr [esp] 3 +
call sub_4105E0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi offset aThin +
mov ecx 8 +
movzx eax byte ptr [ebx+2Bh] +
mov esi ebp +
cmps   +
mov edi offset aArch +
mov ecx 8 +
mov esi ebp +
setz dl  +
and eax 0FFFFFFBFh +
shl edx 6 +
or eax edx +
mov [ebx+2Bh] al +
cmps   +
jz loc_41FD88  +
mov edi offset aBout +
mov ecx 8 +
mov esi ebp +
cmps   +
jnz loc_41FDF3  +
mov esi [ebx+0A0h] +
mov dword ptr [esp+4] 38h +
mov [esp] ebx +
call sub_40E220  +
test eax eax +
mov [ebx+0A0h] eax +
jz loc_41FE84  +
mov dword ptr [eax] 8 +
mov dword ptr [eax+4] 0 +
mov eax [ebx+4] +
mov eax [eax+0D8h] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_41FE00  +
mov eax [ebx+4] +
mov eax [eax+0DCh] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_41FE00  +
movzx eax byte ptr [ebx+2Bh] +
and eax 21h +
cmp al 21h +
jz loc_41FE35  +
mov eax [ebx+4] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test al 40h +
jnz loc_41FD88  +
jmp loc_41FD3E  +
***
call sub_410390  +
cmp eax 1 +
jz loc_41FE16  +
mov dword ptr [esp] 3 +
call sub_4105E0  +
mov eax [ebx+0A0h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_40E390  +
xor eax eax +
mov [ebx+0A0h] esi +
jmp loc_41FD40  +
***
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_41FC20  +
test eax eax +
mov esi eax +
jz loc_41FDE8  +
and byte ptr [eax+2Bh] 0FEh +
mov dword ptr [esp+4] 1 +
mov [esp] eax +
call sub_40EFC0  +
test eax eax +
mov eax [ebx+4] +
jz loc_41FD40  +
cmp [esi+4] eax +
jz loc_41FD40  +
mov dword ptr [esp] 4 +
call sub_4105E0  +
jmp loc_41FDE8  +
***
mov [ebx+0A0h] esi +
jmp loc_41FD40  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov ebx [esp+0C0h] +
lea ebp [esp+3Eh] +
mov dword ptr [esp+4] 10h +
mov [esp] ebp +
mov [esp+8] ebx +
call sub_411C00  +
mov edx 1 +
test eax eax +
jz loc_41FEC9  +
cmp eax 10h +
jz loc_41FED6  +
xor edx edx +
add esp 0ACh +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFF0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] ebx +
call sub_411E10  +
test eax eax +
jnz loc_41FEC7  +
mov edi offset a___symdef +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_420013  +
mov edi offset a___symdef_0 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_420013  +
mov edi offset asc_48712E +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_420021  +
mov edi offset aSym64 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_420086  +
mov edi offset a120 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_41FF68  +
and byte ptr [ebx+2Bh] 0DFh +
mov edx 1 +
jmp loc_41FEC9  +
***
lea eax [esp+64h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 3Ch +
mov [esp] eax +
call sub_411C00  +
cmp eax 3Ch +
jnz loc_41FEC7  +
lea esi [esp+4Fh] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 14h +
mov [esp] esi +
call sub_411C00  +
cmp eax 14h +
jnz loc_41FEC7  +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFB0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] ebx +
call sub_411E10  +
test eax eax +
jnz loc_41FEC7  +
mov dword ptr [esp+8] 10h +
mov dword ptr [esp+4] offset a___symdefSorte +
mov [esp] esi +
mov byte ptr [esp+63h] 0 +
call strncmp  +
test eax eax +
jz loc_420013  +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] offset a___symdef_1 +
mov [esp] esi +
call strncmp  +
test eax eax +
jnz loc_41FF5A  +
mov eax ebx +
call sub_41EC90  +
mov edx eax +
jmp loc_41FEC9  +
***
mov eax [ebx+4] +
mov ebp [ebx+0A0h] +
mov eax [eax+0ECh] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_41FEC7  +
mov edi [eax+4] +
lea esi [esp+64h] +
mov [esp] eax +
call free  +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] esi +
call sub_411C00  +
cmp eax 4 +
jz loc_420097  +
call sub_410390  +
cmp eax 1 +
jz loc_41FEC7  +
mov dword ptr [esp] 0Ah +
call sub_4105E0  +
xor edx edx +
jmp loc_41FEC9  +
***
mov dword ptr [esp] 3 +
call sub_4105E0  +
jmp loc_41FEC7  +
***
mov [esp] esi +
sub edi 4 +
call sub_412F00  +
mov ecx edi +
mov dword ptr [esp+28h] offset sub_412F00 +
mov [esp+18h] eax +
shl eax 2 +
sub ecx eax +
cmp ecx 0FFFFFh +
mov [esp+20h] ecx +
ja loc_420179  +
mov eax [esp+18h] +
cmp eax 0FFFFFFFh +
ja loc_41FEC7  +
mov edi [esp+20h] +
shl eax 4 +
mov ecx eax +
mov [esp+2Ch] eax +
lea eax [edi+eax+1] +
cmp ecx eax +
jnb loc_41FEC7  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_40E220  +
test eax eax +
mov esi eax +
mov [ebp+10h] eax +
jz loc_41FEC7  +
mov eax [esp+18h] +
mov [esp] ebx +
lea edi ds:0[eax*4] +
mov [esp+4] edi +
call sub_40E140  +
test eax eax +
mov [esp+24h] eax +
jz loc_420163  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call sub_411C00  +
cmp edi eax +
jz loc_4201C1  +
call sub_410390  +
sub eax 1 +
jz loc_420153  +
mov dword ptr [esp] 0Ah +
call sub_4105E0  +
mov eax [esp+24h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_40E390  +
mov eax [ebp+10h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_40E390  +
xor edx edx +
jmp loc_41FEC9  +
***
mov [esp] ebx +
call sub_4101B0  +
cmp eax 4 +
jnz loc_4200C5  +
mov eax [ebx+4] +
mov dword ptr [esp+28h] offset sub_412F00 +
cmp dword ptr [eax+4] 2 +
jnz loc_4200C5  +
mov [esp] esi +
call sub_412F30  +
mov dword ptr [esp+28h] offset sub_412F30 +
mov [esp+18h] eax +
shl eax 2 +
sub edi eax +
mov [esp+20h] edi +
jmp loc_4200C5  +
***
mov edi [esp+2Ch] +
mov eax [esp+20h] +
mov [esp+8] ebx +
add edi esi +
mov [esp+4] eax +
mov [esp] edi +
call sub_411C00  +
cmp [esp+20h] eax +
jnz loc_42013D  +
mov [esp+0C0h] ebx +
xor edx edx +
mov ebx [esp+20h] +
jmp loc_420239  +
cmp [esp+18h] edx +
jbe loc_42023D  +
mov eax [esp+24h] +
mov [esp+20h] edx +
lea eax [eax+edx*4] +
mov [esp] eax +
mov eax [esp+28h] +
call eax  +
mov [esi] edi +
mov dword ptr [esi+0Ch] 0 +
mov [esi+8] eax +
mov [esp+4] ebx +
mov [esp] edi +
call sub_47A650  +
mov edx [esp+20h] +
cmp eax ebx +
adc eax 0 +
add esi 10h +
add edi eax +
sub ebx eax +
add edx 1 +
test ebx ebx +
jnz loc_4201F4  +
mov ebx [esp+0C0h] +
mov eax [esp+18h] +
mov byte ptr [edi] 0 +
mov [ebp+14h] eax +
mov [esp] ebx +
call sub_411D30  +
mov ecx eax +
and ecx 1 +
mov esi ecx +
mov ecx edx +
and ecx 80000000h +
test ecx ecx +
mov edi ecx +
jns loc_42028D  +
add esi 0FFFFFFFFh +
mov ecx esi +
or ecx 0FFFFFFFEh +
mov [esp+18h] ecx +
mov esi [esp+18h] +
mov dword ptr [esp+1Ch] 0FFFFFFFFh +
mov edi [esp+1Ch] +
add esi 1 +
adc edi 0 +
add eax esi +
adc edx edi +
mov [ebp+0] eax +
mov [ebp+4] edx +
or byte ptr [ebx+2Bh] 20h +
mov eax [esp+24h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_40E390  +
mov edx [ebp+4] +
mov eax [ebp+0] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebx +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_411E10  +
mov eax [ebx+4] +
mov eax [eax+0ECh] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_41FF5E  +
mov edx [eax] +
cmp byte ptr [edx] 2Fh +
jz loc_4202F8  +
mov [esp] eax +
call free  +
mov edx 1 +
jmp loc_41FEC9  +
***
cmp byte ptr [edx+1] 20h +
jnz loc_4202E6  +
mov ecx [eax+4] +
xor ebx ebx +
add ecx 3Dh +
and ecx 0FFFFFFFEh +
add [ebp+0] ecx +
adc [ebp+4] ebx +
jmp loc_4202E6  +
***
jmp loc_420320  +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx 1 +
sub esp 4Ch +
mov eax [esp+60h] +
lea ebp [esp+2Fh] +
mov eax [eax+0A0h] +
mov dword ptr [esp+4] 10h +
mov [esp] ebp +
mov [esp+18h] eax +
mov eax [esp+60h] +
mov [esp+8] eax +
call sub_411C00  +
test eax eax +
jz loc_420361  +
cmp eax 10h +
jz loc_420370  +
xor ebx ebx +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+60h] +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFF0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] eax +
call sub_411E10  +
test eax eax +
jnz loc_42035F  +
mov edi offset a___symdef +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_4203D2  +
mov edi offset a___symdef_0 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_4203D2  +
mov edi offset asc_48712E +
mov ecx 10h +
mov eax [esp+60h] +
mov esi ebp +
cmps   +
jz loc_4203E0  +
and byte ptr [eax+2Bh] 0DFh +
jmp loc_420361  +
***
mov eax [esp+60h] +
call sub_41EC90  +
mov ebx eax +
jmp loc_420361  +
***
mov eax [eax+4] +
mov edx [esp+60h] +
mov eax [eax+0ECh] +
mov [esp] edx +
call eax  +
test eax eax +
jz loc_42035F  +
mov ebx [eax+4] +
mov [esp] eax +
cmp ebx 5 +
ja loc_42041B  +
call free  +
mov dword ptr [esp] 3 +
call sub_4105E0  +
jmp loc_42035F  +
***
call free  +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_40E220  +
test eax eax +
mov ebp eax +
jz loc_42035F  +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp] ebp +
mov [esp+8] eax +
call sub_411C00  +
cmp ebx eax +
jz loc_420473  +
call sub_410390  +
cmp eax 1 +
jz loc_42035F  +
mov dword ptr [esp] 0Ah +
xor ebx ebx +
call sub_4105E0  +
jmp loc_420361  +
***
mov eax [esp+60h] +
sub ebx 6 +
mov eax [eax+4] +
mov eax [eax+58h] +
mov [esp] ebp +
call eax  +
mov edi [esp+18h] +
lea edx [ebp+2] +
mov dword ptr [edi+8] 0 +
mov [edi+14h] eax +
mov eax [esp+60h] +
mov eax [eax+4] +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
cmp ebx eax +
mov esi eax +
jb loc_42040A  +
mov eax [edi+14h] +
sub ebx esi +
mov [esp+1Ch] eax +
shl eax 3 +
cmp ebx eax +
jb loc_42040A  +
mov [esp+4] eax +
mov eax [esp+60h] +
mov [esp] eax +
call sub_40E140  +
mov ebx eax +
mov eax [esp+18h] +
test ebx ebx +
mov [eax+10h] ebx +
jz loc_42035F  +
cmp dword ptr [eax+14h] 0 +
jz loc_420537  +
add ebp 6 +
xor edi edi +
add esi ebp +
mov [esp+1Ch] ebp +
mov ebp edi +
mov edi [esp+60h] +
mov eax [edi+4] +
add ebp 1 +
add ebx 10h +
mov eax [eax+4Ch] +
mov [esp] esi +
call eax  +
lea ecx [esi+4] +
add esi 8 +
add eax [esp+1Ch] +
mov [ebx-10h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] ecx +
call eax  +
mov dword ptr [ebx-4] 0 +
mov [ebx-8] eax +
mov eax [esp+18h] +
cmp [eax+14h] ebp +
ja loc_4204FB  +
mov eax [esp+60h] +
mov [esp] eax +
call sub_411D30  +
mov edi edx +
mov esi eax +
and edi 80000000h +
and esi 1 +
test edi edi +
mov ecx esi +
mov ebx edi +
jns loc_420569  +
add ecx 0FFFFFFFFh +
or edi 0FFFFFFFFh +
or ecx 0FFFFFFFEh +
mov ebx edi +
add ecx 1 +
adc ebx 0 +
add eax ecx +
mov ecx [esp+18h] +
adc edx ebx +
mov ebx 1 +
mov [ecx] eax +
mov eax [esp+60h] +
mov [ecx+4] edx +
or byte ptr [eax+2Bh] 20h +
jmp loc_420361  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+60h] +
mov eax [ebx+0A0h] +
mov edx [eax+4] +
mov eax [eax] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebx +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_411E10  +
test eax eax +
jz loc_4205D0  +
xor ebp ebp +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+2Fh] +
mov ebp 1 +
mov [esp+8] ebx +
mov dword ptr [esp+4] 10h +
mov [esp] eax +
call sub_411C00  +
cmp eax 10h +
jnz loc_4205C4  +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFF0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] ebx +
call sub_411E10  +
test eax eax +
jnz loc_4205C2  +
mov edi offset aArfilenames +
mov ecx 10h +
lea esi [esp+2Fh] +
cmps   +
jz loc_42063E  +
mov edi offset asc_48718D +
mov ecx 10h +
lea esi [esp+2Fh] +
cmps   +
jnz loc_4206F3  +
mov eax [ebx+4] +
mov eax [eax+0ECh] +
mov [esp] ebx +
call eax  +
test eax eax +
mov esi eax +
jz loc_4205C2  +
mov edi [eax+4] +
cmp edi 0FFFFFFFFh +
jz loc_4206D2  +
mov ebp [ebx+0A0h] +
lea eax [edi+1] +
mov [ebp+1Ch] edi +
mov [esp+4] eax +
mov [esp] ebx +
call sub_40E220  +
mov [ebp+18h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+18h] +
test eax eax +
jz loc_4206D2  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call sub_411C00  +
cmp eax edi +
jz loc_42070C  +
call sub_410390  +
cmp eax 1 +
jz loc_4206B0  +
mov dword ptr [esp] 0Ah +
call sub_4105E0  +
mov eax [ebx+0A0h] +
mov eax [eax+18h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_40E390  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+18h] 0 +
mov [esp] esi +
call free  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+1Ch] 0 +
jmp loc_4205C2  +
***
mov eax [ebx+0A0h] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+1Ch] 0 +
jmp loc_4205C4  +
***
mov eax [ebx+0A0h] +
mov ecx [esi+4] +
mov edi [eax+18h] +
add ecx edi +
mov eax edi +
cmp edi ecx +
jb loc_42072E  +
jmp loc_420757  +
cmp dl 5Ch +
jz loc_420752  +
add eax 1 +
cmp eax ecx +
jz loc_420757  +
movzx edx byte ptr [eax] +
cmp dl 0Ah +
jnz loc_420722  +
cmp edi eax +
jnb loc_4207C1  +
xor edx edx +
cmp byte ptr [eax-1] 2Fh +
setz dl  +
neg edx  +
mov byte ptr [eax+edx] 0 +
movzx edx byte ptr [eax] +
jmp loc_420722  +
***
mov byte ptr [eax] 2Fh +
jmp loc_420727  +
***
mov byte ptr [ecx] 0 +
mov edi [ebx+0A0h] +
mov [esp] ebx +
call sub_411D30  +
mov [edi] eax +
mov [edi+4] edx +
mov ebx [ebx+0A0h] +
mov ecx [ebx+4] +
mov edi [ebx] +
sar ecx 1Fh +
xor edi ecx +
mov eax ecx +
cdq   +
mov eax edi +
mov [esp+18h] ecx +
sub eax [esp+18h] +
mov [esp+1Ch] edx +
mov ebp [esp+1Ch] +
and eax 1 +
mov edi eax +
xor edi ecx +
mov edx ebp +
mov eax edi +
mov edi [esp+18h] +
sub eax edi +
sbb edx ebp +
mov ebp 1 +
add eax [ebx] +
adc edx [ebx+4] +
mov [ebx] eax +
mov [ebx+4] edx +
mov [esp] esi +
call free  +
jmp loc_4205C4  +
***
xor edx edx +
jmp loc_420749  +
***
push ebp  +
push edi  +
xor edi edi +
push esi  +
xor esi esi +
push ebx  +
sub esp 3Ch +
mov eax [esp+50h] +
mov eax [eax+4] +
movzx eax byte ptr [eax+1Ah] +
mov [esp+20h] eax +
mov eax [esp+5Ch] +
mov dword ptr [eax] 0 +
mov eax [esp+50h] +
mov ebx [eax+94h] +
test ebx ebx +
jnz loc_4208A9  +
jmp loc_42090E  +
mov eax [ebx+8Ch] +
mov ebp [ebx] +
test eax eax +
jz loc_420824  +
test byte ptr [eax+2Bh] 40h +
jnz loc_420824  +
mov ebp [eax] +
test esi esi +
jz loc_420838  +
mov [esp+4] ebp +
mov [esp] esi +
call sub_461F50  +
test eax eax +
jz loc_42089F  +
movzx eax byte ptr [ebp+0] +
cmp al 5Ch +
jz loc_420920  +
cmp al 2Fh +
jz loc_420920  +
test al al +
jz loc_420858  +
cmp byte ptr [ebp+1] 3Ah +
mov eax ebp +
jz loc_420884  +
mov eax [esp+50h] +
mov edx [eax] +
movzx eax byte ptr [edx] +
cmp al 5Ch +
jz loc_420920  +
cmp al 2Fh +
jz loc_420920  +
test al al +
jz loc_42087D  +
cmp byte ptr [edx+1] 3Ah +
mov eax ebp +
jz loc_420884  +
mov eax ebp +
call sub_41EE50  +
mov [esp] eax +
call strlen  +
mov esi [esp+54h] +
add edi eax +
test esi esi +
jnz loc_420927  +
add edi 1 +
mov esi ebp +
mov ebx [ebx+90h] +
test ebx ebx +
jz loc_420906  +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jnz loc_420810  +
mov eax [ebx] +
mov [esp] eax +
call sub_4698B0  +
test eax eax +
jz loc_420BA0  +
mov [esp] eax +
mov [esp+18h] eax +
call strlen  +
mov edx [esp+18h] +
cmp [esp+20h] eax +
mov ebp eax +
jnb loc_420935  +
mov eax [esp+50h] +
test byte ptr [eax+29h] 80h +
jnz loc_420931  +
mov ecx [esp+54h] +
add ebp edi +
mov ebx [ebx+90h] +
lea edi [ebp+1] +
add ebp 2 +
test ecx ecx +
cmovnz edi ebp +
test ebx ebx +
jnz loc_4208A9  +
test edi edi +
jnz loc_4209C0  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax ebp +
jmp loc_420884  +
***
add edi 2 +
mov esi ebp +
jmp loc_42089F  +
***
mov ebp [esp+20h] +
mov eax [ebx+88h] +
mov [esp+18h] edx +
mov ecx [eax] +
mov [esp] edx +
mov [esp+8] ebp +
mov [esp+4] ecx +
mov [esp+1Ch] ecx +
call sub_461FA0  +
mov edx [esp+18h] +
mov ecx [esp+1Ch] +
test eax eax +
jnz loc_42097A  +
cmp ebp 0Fh +
ja loc_42089F  +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
cmp [ecx+ebp] al +
jz loc_42089F  +
mov [esp] ecx +
mov [esp+8] ebp +
mov [esp+4] edx +
mov [esp+18h] ecx +
call memcpy  +
mov ecx [esp+18h] +
cmp [esp+20h] ebp +
jbe loc_4209A7  +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
mov [ecx+ebp] al +
jmp loc_42089F  +
***
cmp ebp 0Fh +
ja loc_42089F  +
cmp [esp+20h] ebp +
jnz loc_42089F  +
jmp loc_420998  +
***
mov eax [esp+50h] +
mov [esp+4] edi +
mov [esp] eax +
call sub_40E220  +
mov ebp eax +
mov eax [esp+58h] +
test ebp ebp +
mov [eax] ebp +
jz loc_420BA0  +
mov eax [esp+5Ch] +
mov [eax] edi +
mov eax [esp+50h] +
mov ebx [eax+94h] +
test ebx ebx +
jz loc_42090E  +
mov eax [esp+20h] +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+1Ch] 0 +
sub eax 1 +
mov [esp+28h] eax +
jmp loc_420B75  +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_420A2E  +
test byte ptr [eax+2Bh] 40h +
jnz loc_420A2E  +
mov eax [eax] +
mov [esp+18h] eax +
mov edx [esp+1Ch] +
test edx edx +
jz loc_420A4E  +
mov eax [esp+18h] +
mov esi [esp+1Ch] +
mov [esp+4] eax +
mov [esp] esi +
call sub_461F50  +
test eax eax +
jz loc_420AA7  +
mov eax [esp+18h] +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jz loc_420BB0  +
cmp al 2Fh +
jz loc_420BB0  +
test al al +
jz loc_420A75  +
mov eax [esp+18h] +
cmp byte ptr [eax+1] 3Ah +
mov esi eax +
jz loc_420AA7  +
mov eax [esp+50h] +
mov edx [eax] +
movzx eax byte ptr [edx] +
cmp al 5Ch +
jz loc_420BB0  +
cmp al 2Fh +
jz loc_420BB0  +
test al al +
jz loc_420A9C  +
cmp byte ptr [edx+1] 3Ah +
mov esi [esp+18h] +
jz loc_420AA7  +
mov eax [esp+18h] +
call sub_41EE50  +
mov esi eax +
mov [esp] esi +
call strlen  +
cmp [esp+20h] eax +
mov edi eax +
jb loc_420AC5  +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jz loc_420B67  +
mov eax [ebx+88h] +
cmp esi [esp+1Ch] +
mov edx [eax] +
jz loc_420B0B  +
lea eax [edi+1] +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebp +
mov [esp+24h] edx +
call memcpy  +
mov eax [esp+54h] +
mov edx [esp+24h] +
test eax eax +
jnz loc_420BC0  +
mov byte ptr [ebp+edi+0] 0Ah +
mov ecx [esp+58h] +
mov eax ebp +
sub eax [ecx] +
mov [esp+24h] eax +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
mov [edx] al +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jz loc_420B2A  +
mov eax [ebx+3Ch] +
or eax [ebx+38h] +
jnz loc_420BD0  +
mov eax [esp+24h] +
add edx 1 +
mov dword ptr [esp+8] offset aLd +
mov [esp] edx +
mov [esp+0Ch] eax +
mov eax [esp+28h] +
mov [esp+4] eax +
call sub_41F120  +
cmp esi [esp+1Ch] +
jz loc_420B67  +
mov eax [esp+18h] +
lea ebp [ebp+edi+1] +
cmp dword ptr [esp+54h] 1 +
mov [esp+1Ch] eax +
sbb ebp 0FFFFFFFFh +
mov ebx [ebx+90h] +
test ebx ebx +
jz loc_42090E  +
mov eax [ebx] +
mov [esp+18h] eax +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jnz loc_420A18  +
mov eax [esp+18h] +
mov [esp] eax +
call sub_4698B0  +
test eax eax +
mov esi eax +
jnz loc_420AA7  +
nop   +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+18h] +
jmp loc_420AA7  +
***
mov byte ptr [ebp+edi+0] 2Fh +
mov byte ptr [ebp+edi+1] 0Ah +
jmp loc_420AFF  +
***
mov eax [esp+24h] +
mov dword ptr [esp+8] offset aLd_0 +
mov [esp+2Ch] edx +
mov [esp+0Ch] eax +
mov eax [esp+28h] +
mov [esp+4] eax +
lea eax [edx+1] +
mov [esp] eax +
call sub_41EC00  +
mov edx [ebx+38h] +
mov dword ptr [esp+8] offset aLd +
lea ecx [edx-3Ch] +
mov edx [esp+2Ch] +
mov [esp+0Ch] ecx +
mov ecx [esp+28h] +
sub ecx eax +
lea eax [edx+eax+1] +
mov [esp+4] ecx +
mov [esp] eax +
call sub_41F120  +
jmp loc_420B4D  +
***
mov eax [esp+10h] +
mov dword ptr [eax] offset aArfilenames_0 +
mov eax [esp+0Ch] +
mov [esp+10h] eax +
mov eax [esp+8] +
mov dword ptr [esp+8] 0 +
mov [esp+0Ch] eax +
jmp loc_4207D0  +
***
mov eax [esp+10h] +
mov dword ptr [eax] offset asc_4871B6 +
mov eax [esp+0Ch] +
mov [esp+10h] eax +
mov eax [esp+8] +
mov dword ptr [esp+8] 1 +
mov [esp+0Ch] eax +
jmp loc_4207D0  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov edx [eax+4] +
movzx edi byte ptr [edx+1Ah] +
mov edx [esp+48h] +
mov [esp+1Ch] edi +
mov edi 1 +
mov dword ptr [edx] 0 +
mov edx [esp+44h] +
mov dword ptr [edx] 0 +
mov edx [esp+4Ch] +
mov dword ptr [edx] 0 +
mov ebp [eax+94h] +
test ebp ebp +
jz loc_420D19  +
mov eax [ebp+0] +
mov [esp] eax +
call sub_4698B0  +
test eax eax +
jz loc_420D55  +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_420D0F  +
xor ecx ecx +
xor ebx ebx +
jmp loc_420CF2  +
mov ecx esi +
cmp dl 20h +
movzx edx byte ptr [eax+ecx+1] +
cmovz ebx edi +
lea esi [ecx+1] +
test dl dl +
jnz loc_420CF0  +
and ebx 1 +
jnz loc_420D26  +
cmp [esp+1Ch] esi +
jb loc_420D26  +
mov ebp [ebp+90h] +
test ebp ebp +
jnz loc_420CD3  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+88h] +
add ecx 4 +
and ecx 0FFFFFFFCh +
mov edx [eax] +
mov [eax+8] ecx +
mov eax [esp+1Ch] +
mov [esp+0Ch] ecx +
mov dword ptr [esp+8] offset a1Lu +
mov [esp] edx +
mov [esp+4] eax +
call sub_41F120  +
jmp loc_420D0F  +
***
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov edx [esp+20h] +
mov eax [eax+88h] +
mov eax [eax] +
mov [esp+8] edx +
mov dword ptr [esp+4] 3Ch +
mov [esp] eax +
call sub_411CB0  +
cmp eax 3Ch +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+34h] +
mov eax [esi+88h] +
mov ebx [eax] +
cmp byte ptr [ebx] 23h +
jz loc_420DE1  +
mov eax [esp+30h] +
mov dword ptr [esp+4] 3Ch +
mov [esp] ebx +
mov [esp+8] eax +
call sub_411CB0  +
cmp eax 3Ch +
setz al  +
movzx eax al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [ebx+1] 31h +
jnz loc_420DB8  +
cmp byte ptr [ebx+2] 2Fh +
jnz loc_420DB8  +
movzx eax byte ptr [ebx+3] +
test ds:byte_49F240[eax+eax] 4 +
jz loc_420DB8  +
mov eax [esi] +
mov [esp] eax +
call sub_4698B0  +
mov [esp] eax +
mov ebp eax +
call strlen  +
mov edx [esi+88h] +
mov edi eax +
lea eax [eax+3] +
and eax 0FFFFFFFCh +
cmp [edx+8] eax +
jz loc_420E44  +
mov dword ptr [esp+4] 73Dh +
mov dword ptr [esp] offset a____Binutil_21 +
mov [esp+0Ch] eax +
call sub_410530  +
mov edx [esi+88h] +
mov eax [esp+0Ch] +
add eax [edx+4] +
mov dword ptr [esp+4] 0Ah +
mov [esp+8] eax +
lea eax [ebx+30h] +
mov [esp] eax +
call sub_41F1C0  +
test eax eax +
jnz loc_420E69  +
xor eax eax +
jmp loc_420DD9  +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] 3Ch +
mov [esp] ebx +
mov [esp+8] eax +
call sub_411CB0  +
cmp eax 3Ch +
jnz loc_420E62  +
mov eax [esp+30h] +
mov [esp+4] edi +
mov [esp] ebp +
mov [esp+8] eax +
call sub_411CB0  +
cmp eax edi +
jnz loc_420E62  +
and edi 3 +
mov eax 1 +
jz loc_420DD9  +
mov eax [esp+30h] +
mov ebx 4 +
sub ebx edi +
mov [esp+4] ebx +
mov dword ptr [esp] offset unk_4872A7 +
mov [esp+8] eax +
call sub_411CB0  +
cmp ebx eax +
setz al  +
movzx eax al +
jmp loc_420DD9  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov esi [esp+44h] +
mov eax [eax+88h] +
test eax eax +
jz loc_420FBA  +
mov ebx [eax] +
test ebx ebx +
jz loc_420FB3  +
lea ebp [ebx+10h] +
lea edi [esp+1Ch] +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebp +
call strtol  +
cmp ebp [esp+1Ch] +
mov [esi+24h] eax +
jz loc_420FB3  +
lea ebp [ebx+1Ch] +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebp +
call strtol  +
cmp ebp [esp+1Ch] +
mov [esi+0Ah] ax +
jz loc_420FB3  +
lea ebp [ebx+22h] +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebp +
call strtol  +
cmp ebp [esp+1Ch] +
mov [esi+0Ch] ax +
jz loc_420FB3  +
add ebx 28h +
mov dword ptr [esp+8] 8 +
mov [esp+4] edi +
mov [esp] ebx +
call strtol  +
cmp ebx [esp+1Ch] +
mov [esi+6] ax +
jz loc_420FB3  +
mov eax [esp+40h] +
mov eax [eax+88h] +
mov eax [eax+4] +
mov dword ptr [esi+1Ch] 0 +
mov [esi+18h] eax +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_420FAB  +
***
mov dword ptr [esp] 5 +
call sub_4105E0  +
mov eax 0FFFFFFFFh +
jmp loc_420FAB  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
mov edi [esp+38h] +
mov [esp] eax +
call sub_4698B0  +
mov edx eax +
mov eax [ebp+4] +
mov [esp+0Ch] edx +
movzx esi byte ptr [eax+1Ah] +
mov [esp] edx +
call strlen  +
mov edx [esp+0Ch] +
cmp esi eax +
mov ebx eax +
jb loc_421030  +
mov [esp+8] eax +
mov [esp+4] edx +
mov [esp] edi +
call memcpy  +
cmp esi ebx +
jbe loc_421028  +
mov eax [ebp+4] +
movzx eax byte ptr [eax+19h] +
mov [edi+ebx] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+38h] esi +
mov [esp+30h] edi +
mov [esp+34h] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp memcpy  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [esp+34h] +
mov edi [esp+38h] +
mov edx [ebx+4] +
test byte ptr [ebx+29h] 80h +
movzx ebp byte ptr [edx+1Ah] +
jnz loc_4210B4  +
mov [esp] eax +
call sub_4698B0  +
test eax eax +
mov edx eax +
jz loc_4210D6  +
mov eax ebp +
mov [esp] edx +
movzx ebp al +
mov [esp+0Ch] edx +
call strlen  +
mov edx [esp+0Ch] +
cmp ebp eax +
mov esi eax +
jnb loc_4210C0  +
cmp esi 0Fh +
ja loc_4210AC  +
cmp esi ebp +
jnz loc_4210AC  +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
mov [edi+esi] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_420FD0  +
***
mov [esp+8] eax +
mov [esp+4] edx +
mov [esp] edi +
call memcpy  +
cmp ebp esi +
ja loc_4210A2  +
jmp loc_421099  +
***
mov dword ptr [esp+8] offset aBfd_dont_trunc +
mov dword ptr [esp+4] 818h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_410560  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
mov [esp] eax +
call sub_4698B0  +
mov edi eax +
mov eax [ebp+4] +
movzx ebx byte ptr [eax+1Ah] +
mov [esp] edi +
call strlen  +
cmp ebx eax +
mov esi eax +
jb loc_421160  +
mov [esp+8] eax +
mov eax [esp+38h] +
mov ebx esi +
mov [esp+4] edi +
mov [esp] eax +
call memcpy  +
cmp ebx 0Fh +
ja loc_421157  +
mov eax [ebp+4] +
mov edx [esp+38h] +
movzx eax byte ptr [eax+19h] +
mov [edx+ebx] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+38h] +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call memcpy  +
cmp byte ptr [edi+esi-2] 2Eh +
jnz loc_421144  +
cmp byte ptr [edi+esi-1] 6Fh +
jnz loc_421144  +
mov eax [esp+38h] +
mov byte ptr [eax+ebx-2] 2Eh +
mov byte ptr [eax+ebx-1] 6Fh +
jmp loc_421144  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_14] 0 +
test eax eax +
jz loc_4211C4  +
mov edx eax +
and edx 1 +
lea eax [edx+eax+3Ch] +
mov [esp+4Ch+var_14] eax +
mov [esp+4Ch+var_4C] 6000h +
call sub_412BD0  +
mov edi eax +
mov [esp+4Ch+var_24] eax +
xor eax eax +
test edi edi +
jz loc_42146A  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] eax +
call sub_40E140  +
test eax eax +
mov [esp+4Ch+var_10] eax +
jz loc_421440  +
mov eax [esp+4Ch+arg_0] +
mov edx offset a___symdef_1 +
mov ebp [eax+94h] +
mov eax 0Ah +
test ebp ebp +
jnz loc_421238  +
jmp loc_4214A4  +
mov ebp [ebp+90h] +
mov edi [esp+4Ch+arg_0] +
test ebp ebp +
mov [edi+94h] ebp +
jz loc_4214A4  +
mov esi [ebp+0] +
mov edi edx +
mov ecx eax +
cmps   +
jz loc_421220  +
xor ebx ebx +
xor esi esi +
mov [esp+4Ch+var_34] 0 +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_1C] 400h +
jmp loc_42126F  +
mov ebp [ebp+90h] +
test ebp ebp +
jz loc_421516  +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] ebp +
call sub_40EFC0  +
test eax eax +
jz loc_421261  +
test byte ptr [ebp+29h] 2 +
jz loc_421261  +
mov eax [ebp+4] +
mov eax [eax+104h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
test eax eax +
mov [esp+4Ch+var_18] eax +
js loc_421430  +
jz loc_42141A  +
cmp eax ebx +
jle loc_421506  +
test ebx ebx +
jz loc_4212C1  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_4C] eax +
call sub_412BD0  +
test eax eax +
mov [esp+4Ch+var_34] eax +
jz loc_421434  +
mov eax [ebp+4] +
mov ebx [esp+4Ch+var_34] +
mov eax [eax+108h] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] ebp +
call eax  +
test eax eax +
mov [esp+4Ch+var_28] eax +
js loc_421434  +
jz loc_421416  +
mov [esp+4Ch+var_20] ebp +
xor ebx ebx +
mov ebp esi +
jmp loc_4213A4  +
mov [esp+4Ch+var_4C] eax +
call strlen  +
mov ecx [esp+4Ch+var_24] +
mov [esp+4Ch+var_48] 4 +
mov edi eax +
lea eax [ebp+ebp*2+0] +
lea esi [ecx+eax*8] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_40E140  +
test eax eax +
mov [esi] eax +
mov [esp+4Ch+var_30] eax +
jz loc_421434  +
lea eax [edi+1] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_40E140  +
mov edx [esp+4Ch+var_30] +
mov [edx] eax +
mov eax [esi] +
mov eax [eax] +
test eax eax +
jz loc_421434  +
mov ecx [esp+4Ch+var_34] +
add ebp 1 +
mov edx [ecx+ebx*4] +
mov edx [edx+4] +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] edx +
call strcpy  +
mov eax [esp+4Ch+var_20] +
mov [esi+8] eax +
mov eax [esp+4Ch+var_2C] +
mov [esi+10h] eax +
lea eax [eax+edi+1] +
mov [esp+4Ch+var_2C] eax +
add ebx 1 +
cmp ebx [esp+4Ch+var_28] +
jz loc_421410  +
mov eax [esp+4Ch+var_34] +
mov edx [eax+ebx*4] +
test dword ptr [edx+0Ch] 802082h +
mov eax [edx+10h] +
jnz loc_4213BD  +
test byte ptr [eax+15h] 10h +
jz loc_42139B  +
cmp eax offset off_47D468 +
jz loc_42139B  +
cmp ebp [esp+4Ch+var_1C] +
jz loc_421472  +
mov eax [edx+4] +
mov edi offset a__gnu_lto_sl_0 +
mov ecx 0Fh +
mov esi eax +
cmps   +
jnz loc_421310  +
mov eax [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_4C] offset aSPluginNeede_0 +
mov [esp+4Ch+var_48] eax +
call off_47D664  +
mov eax [esp+4Ch+var_34] +
mov eax [eax+ebx*4] +
mov eax [eax+4] +
jmp loc_421310  +
mov esi ebp +
mov ebp [esp+4Ch+var_20] +
mov ebx [esp+4Ch+var_18] +
mov eax [ebp+4] +
mov eax [eax+98h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
test eax eax +
jnz loc_421261  +
test ebx ebx +
jz loc_421440  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_10] +
test eax eax +
jz loc_42150F  +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_40E390  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+ebp+0] +
mov [esp+4Ch+var_1C] eax +
lea eax [eax+ebp*4] +
shl eax 3 +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] eax +
call sub_412C60  +
test eax eax +
jz loc_421434  +
mov edi [esp+4Ch+var_34] +
mov [esp+4Ch+var_24] eax +
mov edx [edi+ebx*4] +
jmp loc_4213CE  +
mov eax [esp+4Ch+arg_0] +
mov ebx [esp+4Ch+var_24] +
mov eax [eax+4] +
mov eax [eax+0E8h] +
mov [esp+4Ch+var_44] ebx +
mov ebx [esp+4Ch+var_14] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_48] ebx +
mov ebx [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] ebx +
call eax  +
mov esi eax +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_40E390  +
add esp 4Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_18] ebx +
jmp loc_4212D9  +
xor eax eax +
jmp loc_42146A  +
mov eax [esp+4Ch+arg_0] +
mov edi [esp+4Ch+var_2C] +
mov eax [eax+4] +
mov eax [eax+0E8h] +
mov [esp+4Ch+var_3C] edi +
mov edi [esp+4Ch+var_24] +
mov [esp+4Ch+var_40] esi +
mov [esp+4Ch+var_44] edi +
mov edi [esp+4Ch+var_14] +
mov [esp+4Ch+var_48] edi +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] edi +
call eax  +
test ebx ebx +
mov esi eax +
jz loc_4214DC  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
call free  +
jmp loc_4214DC  +
***
push ebp  +
mov eax 203Ch +
push edi  +
push esi  +
push ebx  +
call sub_47A1D0  +
sub esp eax +
mov eax [esp+2050h] +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+2Ch] 0 +
movzx eax byte ptr [eax+2Bh] +
mov [esp+1Bh] al +
mov eax [esp+2050h] +
shr byte ptr [esp+1Bh] 5 +
and byte ptr [esp+1Bh] 1 +
mov edi [eax+94h] +
test edi edi +
jz loc_421A7A  +
test byte ptr [edi+28h] 10h +
jnz loc_421821  +
xor esi esi +
mov ebp [esp+2050h] +
mov ebx esi +
jmp loc_4215E4  +
mov edi [edi+90h] +
test edi edi +
jz loc_42161A  +
test byte ptr [edi+28h] 10h +
jnz loc_421821  +
mov eax [edi+88h] +
test eax eax +
jz loc_421665  +
test ebx ebx +
jnz loc_4215D0  +
cmp byte ptr [esp+1Bh] 0 +
jz loc_4215D0  +
mov [esp] edi +
xor ebx ebx +
mov dword ptr [esp+4] 1 +
call sub_40EFC0  +
mov edi [edi+90h] +
test eax eax +
setnz bl  +
test edi edi +
jnz loc_4215DA  +
mov esi ebx +
mov eax [esp+2050h] +
lea edx [esp+2Ch] +
mov ecx [esp+2050h] +
mov eax [eax+4] +
mov eax [eax+0E0h] +
mov [esp+0Ch] edx +
lea edx [esp+28h] +
mov [esp+8] edx +
lea edx [esp+24h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
test eax eax +
jnz loc_421890  +
xor eax eax +
add esp 203Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test byte ptr [edi+2Ah] 1 +
mov eax [edi] +
jnz loc_421850  +
lea ecx [esp+30h] +
mov [esp+4] ecx +
mov [esp] eax +
call ds:_stati64  +
test eax eax +
jnz loc_4219A3  +
test byte ptr [ebp+2Ah] 4 +
jz loc_4216B0  +
xor eax eax +
xor esi esi +
mov [esp+3Ch] ax +
mov eax 1A4h +
mov dword ptr [esp+54h] 0 +
mov [esp+3Ah] si +
mov [esp+36h] ax +
mov dword ptr [esp] 64h +
call sub_412D60  +
test eax eax +
mov esi eax +
jz loc_4219B0  +
lea edx [eax+28h] +
mov dword ptr [eax+28h] 20202020h +
mov dword ptr [eax+2Ch] 20202020h +
mov dword ptr [eax+30h] 20202020h +
mov dword ptr [eax+34h] 20202020h +
mov dword ptr [eax+38h] 20202020h +
mov dword ptr [eax+3Ch] 20202020h +
mov dword ptr [eax+40h] 20202020h +
mov dword ptr [eax+44h] 20202020h +
mov dword ptr [eax+48h] 20202020h +
mov dword ptr [eax+4Ch] 20202020h +
mov dword ptr [eax+50h] 20202020h +
mov dword ptr [eax+54h] 20202020h +
mov dword ptr [eax+58h] 20202020h +
mov dword ptr [eax+5Ch] 20202020h +
mov dword ptr [eax+60h] 20202020h +
mov eax [esp+54h] +
mov dword ptr [esp+8] offset a12ld +
mov dword ptr [esp+4] 0Ch +
mov [esp+1Ch] edx +
mov [esp+0Ch] eax +
lea eax [esi+38h] +
mov [esp] eax +
call sub_41F120  +
movsx eax word ptr [esp+3Ah] +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
mov [esp+0Ch] eax +
lea eax [esi+44h] +
mov [esp] eax +
call sub_41F120  +
movsx eax word ptr [esp+3Ch] +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
mov [esp+0Ch] eax +
lea eax [esi+4Ah] +
mov [esp] eax +
call sub_41F120  +
movzx eax word ptr [esp+36h] +
mov dword ptr [esp+8] offset a8lo +
mov dword ptr [esp+4] 8 +
mov [esp+0Ch] eax +
lea eax [esi+50h] +
mov [esp] eax +
call sub_41F120  +
mov eax [esp+48h] +
mov dword ptr [esp+4] 0Ah +
mov [esp+8] eax +
lea eax [esi+58h] +
mov [esp] eax +
call sub_41F1C0  +
mov edx [esp+1Ch] +
test eax eax +
jz loc_4219BF  +
mov ecx 0A60h +
mov [esi+62h] cx +
mov eax [esp+48h] +
mov ecx [edi] +
mov [esi] edx +
mov [esi+4] eax +
mov eax [ebp+4] +
mov [edi+88h] esi +
mov eax [eax+0E4h] +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] ebp +
call eax  +
jmp loc_4215EE  +
***
mov dword ptr [esp] 5 +
call sub_4105E0  +
call sub_410390  +
mov [esp+4] edi +
mov dword ptr [esp] 14h +
mov [esp+8] eax +
call sub_4105E0  +
jmp loc_421658  +
***
lea eax [esp+54h] +
mov esi [edi+8] +
mov [esp] eax +
call time  +
xor eax eax +
mov [esp+3Ah] ax +
xor eax eax +
mov [esp+3Ch] ax +
mov eax 1A4h +
mov [esp+36h] ax +
mov eax [esi] +
mov dword ptr [esp+4Ch] 0 +
mov [esp+48h] eax +
jmp loc_42168A  +
***
mov eax [esp+2050h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_411E10  +
test eax eax +
jnz loc_421658  +
mov ecx [esp+2050h] +
mov edx offset aThin +
mov eax offset aArch +
test byte ptr [ecx+2Bh] 40h +
mov [esp+8] ecx +
mov dword ptr [esp+4] 8 +
cmovnz eax edx +
mov [esp] eax +
call sub_411CB0  +
cmp eax 8 +
jnz loc_421658  +
mov eax esi +
and al [esp+1Bh] +
mov [esp+1Bh] al +
jnz loc_421AC0  +
mov esi [esp+28h] +
test esi esi +
jnz loc_421AE4  +
mov eax [esp+2050h] +
mov edi [eax+94h] +
test edi edi +
jz loc_421962  +
mov eax [edi+88h] +
mov ecx [esp+2050h] +
mov ebx [eax+4] +
mov eax [edi+4] +
mov eax [eax+0F0h] +
mov [esp+4] edi +
mov [esp] ecx +
call eax  +
test eax eax +
jz loc_421658  +
mov eax [esp+2050h] +
test byte ptr [eax+2Bh] 40h +
jz loc_4219C9  +
mov edi [edi+90h] +
test edi edi +
jnz loc_421921  +
cmp byte ptr [esp+1Bh] 0 +
mov esi 5 +
mov ebx [esp+2050h] +
jz loc_421999  +
mov eax [ebx+4] +
mov eax [eax+100h] +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_421999  +
mov dword ptr [esp] offset aWarningWriting +
call off_47D664  +
sub esi 1 +
jnz loc_421975  +
mov eax 1 +
jmp loc_42165A  +
***
mov dword ptr [esp] 1 +
call sub_4105E0  +
nop   +
mov dword ptr [edi+88h] 0 +
jmp loc_42182D  +
***
mov [esp] esi +
call free  +
jmp loc_4219B0  +
***
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] edi +
call sub_411E10  +
test eax eax +
jnz loc_42182D  +
test ebx ebx +
jnz loc_421A27  +
jmp loc_421A81  +
mov eax [esp+2050h] +
mov [esp+4] ebp +
mov [esp+8] eax +
lea eax [esp+30h] +
mov [esp] eax +
call sub_411CB0  +
cmp ebp eax +
jnz loc_421658  +
sub ebx ebp +
jz loc_421A81  +
cmp ebx 2000h +
mov esi 2000h +
cmovb esi ebx +
call ds:__imp__errno  +
mov dword ptr [eax] 0 +
lea eax [esp+30h] +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] eax +
call sub_411C00  +
cmp eax esi +
mov ebp eax +
jz loc_421A00  +
call sub_410390  +
cmp eax 1 +
jz loc_42182D  +
mov dword ptr [esp] 12h +
call sub_4105E0  +
jmp loc_42182D  +
***
xor esi esi +
jmp loc_42161C  +
***
mov eax [edi+88h] +
test byte ptr [eax+4] 1 +
jz loc_421958  +
mov eax [esp+2050h] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 4870EBh +
mov [esp+8] eax +
call sub_411CB0  +
cmp eax 1 +
jz loc_421958  +
jmp loc_421658  +
***
mov eax [esp+28h] +
mov [esp+4] eax +
mov eax [esp+2050h] +
mov [esp] eax +
call sub_4211A0  +
test eax eax +
jnz loc_421904  +
jmp loc_421658  +
***
mov ebp [esp+2Ch] +
lea edi [esp+30h] +
add esi 1 +
mov dword ptr [esp+30h] 20202020h +
and esi 0FFFFFFFEh +
mov dword ptr [esp+34h] 20202020h +
mov dword ptr [esp+38h] 20202020h +
mov [esp] ebp +
mov dword ptr [esp+3Ch] 20202020h +
mov dword ptr [esp+40h] 20202020h +
mov dword ptr [esp+44h] 20202020h +
mov dword ptr [esp+48h] 20202020h +
mov dword ptr [esp+4Ch] 20202020h +
mov dword ptr [esp+50h] 20202020h +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
mov dword ptr [esp+60h] 20202020h +
mov dword ptr [esp+64h] 20202020h +
mov dword ptr [esp+68h] 20202020h +
call strlen  +
mov [esp+4] ebp +
mov [esp] edi +
mov [esp+8] eax +
call memcpy  +
lea eax [esp+60h] +
mov [esp+8] esi +
mov dword ptr [esp+4] 0Ah +
mov [esp] eax +
call sub_41F1C0  +
test eax eax +
jz loc_421658  +
mov eax 0A60h +
mov [esp+6Ah] ax +
mov eax [esp+2050h] +
mov dword ptr [esp+4] 3Ch +
mov [esp] edi +
mov [esp+8] eax +
call sub_411CB0  +
cmp eax 3Ch +
jnz loc_421658  +
mov eax [esp+2050h] +
mov [esp+8] eax +
mov eax [esp+28h] +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_411CB0  +
cmp eax [esp+28h] +
jnz loc_421658  +
test al 1 +
jz loc_421910  +
mov eax [esp+2050h] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 4870EBh +
mov [esp+8] eax +
call sub_411CB0  +
cmp eax 1 +
jnz loc_421658  +
jmp loc_421910  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov eax [esp+0B0h] +
mov ecx [esp+0ACh] +
mov ebx [esp+0A0h] +
mov edi eax +
and edi 1 +
add eax edi +
mov ebp [ebx+94h] +
lea esi ds:0[ecx*8] +
mov [esp+24h] edi +
lea edi [esi+eax+8] +
mov [esp+20h] eax +
mov eax [ebx+0A0h] +
test byte ptr [ebx+2Ah] 4 +
mov dword ptr [eax+20h] 0 +
jz loc_421FC0  +
mov dword ptr [esp+48h] 20202020h +
mov dword ptr [esp+4Ch] 20202020h +
mov dword ptr [esp+50h] 20202020h +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
mov dword ptr [esp+60h] 20202020h +
mov dword ptr [esp+64h] 20202020h +
mov dword ptr [esp+68h] 20202020h +
mov dword ptr [esp+6Ch] 20202020h +
mov dword ptr [esp+70h] 20202020h +
mov dword ptr [esp+74h] 20202020h +
mov dword ptr [esp+78h] 20202020h +
mov dword ptr [esp+40h] 532E5F5Fh +
mov dword ptr [esp+44h] 45444D59h +
mov byte ptr [esp+48h] 46h +
mov dword ptr [eax+28h] 18h +
mov dword ptr [eax+2Ch] 0 +
mov eax [eax+20h] +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 0Ch +
mov [esp+0Ch] eax +
lea eax [esp+50h] +
mov [esp] eax +
call sub_41F120  +
lea eax [esp+5Ch] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
call sub_41F120  +
lea eax [esp+62h] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
call sub_41F120  +
lea eax [esp+70h] +
mov [esp+8] edi +
mov dword ptr [esp+4] 0Ah +
mov [esp] eax +
call sub_41F1C0  +
test eax eax +
jnz loc_421DB0  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+40h] +
mov ecx 0A60h +
mov [esp+8] ebx +
mov dword ptr [esp+4] 3Ch +
mov [esp] eax +
mov [esp+7Ah] cx +
call sub_411CB0  +
cmp eax 3Ch +
jnz loc_421D9C  +
mov eax [ebx+4] +
lea ecx [esp+34h] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] esi +
call eax  +
lea eax [esp+34h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_411CB0  +
cmp eax 4 +
jnz loc_421D9C  +
mov edx [esp+0ACh] +
test edx edx +
jz loc_422040  +
mov eax [esp+0A4h] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+2Ch] 0 +
mov [esp+0A0h] ebx +
lea eax [edi+eax+44h] +
mov [esp+18h] eax +
mov eax [esp+0A8h] +
mov [esp+28h] eax +
mov eax [esp+28h] +
mov ecx [esp+18h] +
mov ebx [esp+1Ch] +
mov eax [eax+8] +
cmp eax ebp +
mov [esp+10h] eax +
jz loc_421E90  +
nop   +
mov edx [ebp+88h] +
mov ebp [ebp+90h] +
mov eax [edx+4] +
add eax [edx+8] +
xor edx edx +
add eax 3Ch +
add eax ecx +
adc edx ebx +
mov ebx eax +
and ebx 1 +
xor edi edi +
add eax ebx +
adc edx edi +
mov ecx eax +
cmp [esp+10h] ebp +
mov ebx edx +
jnz loc_421E60  +
mov [esp+18h] ecx +
mov eax ebx +
xor ecx ecx +
or eax ecx +
mov dword ptr [esp+1Ch] 0 +
jnz loc_421FF0  +
mov eax [esp+0A0h] +
lea ecx [esp+38h] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov ecx [esp+28h] +
mov edx [ecx+10h] +
mov [esp] edx +
call eax  +
mov eax [esp+0A0h] +
lea ecx [esp+3Ch] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov ecx [esp+18h] +
mov [esp] ecx +
call eax  +
mov eax [esp+0A0h] +
mov dword ptr [esp+4] 8 +
mov [esp+8] eax +
lea eax [esp+38h] +
mov [esp] eax +
call sub_411CB0  +
cmp eax 8 +
jnz loc_421D9C  +
add dword ptr [esp+2Ch] 1 +
mov eax [esp+2Ch] +
add dword ptr [esp+28h] 18h +
cmp eax [esp+0ACh] +
jnz loc_421E47  +
mov ebx [esp+0A0h] +
lea edi [esp+34h] +
mov eax [ebx+4] +
mov eax [eax+54h] +
mov [esp+4] edi +
mov edi [esp+20h] +
mov [esp] edi +
call eax  +
lea eax [esp+34h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_411CB0  +
cmp eax 4 +
jnz loc_421D9C  +
xor edx edx +
mov ebp [esp+0A8h] +
mov [esp+0A0h] ebx +
mov ebx edx +
jmp loc_421F8F  +
add ebx 1 +
add ebp 18h +
cmp ebx [esp+0ACh] +
jz loc_422001  +
mov eax [ebp+0] +
mov edi [eax] +
mov [esp] edi +
call strlen  +
mov [esp] edi +
lea esi [eax+1] +
mov eax [esp+0A0h] +
mov [esp+4] esi +
mov [esp+8] eax +
call sub_411CB0  +
cmp eax esi +
jz loc_421F80  +
jmp loc_421D9C  +
***
mov eax [ebx] +
lea ecx [esp+40h] +
mov [esp+4] ecx +
mov [esp] eax +
call ds:_stati64  +
test eax eax +
mov eax [ebx+0A0h] +
jnz loc_421C86  +
mov ecx [esp+64h] +
lea edx [ecx+3Ch] +
mov [eax+20h] edx +
jmp loc_421C86  +
***
mov dword ptr [esp] 12h +
call sub_4105E0  +
jmp loc_421D9C  +
***
mov ebx [esp+0A0h] +
mov eax [esp+24h] +
test eax eax +
jnz loc_42201A  +
mov eax 1 +
jmp loc_421D9E  +
***
mov [esp+8] ebx +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset unk_487240 +
call sub_411CB0  +
sub eax 1 +
setz al  +
movzx eax al +
jmp loc_421D9E  +
***
mov eax [ebx+4] +
lea edi [esp+34h] +
mov eax [eax+54h] +
mov [esp+4] edi +
mov edi [esp+20h] +
mov [esp] edi +
call eax  +
lea eax [esp+34h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_411CB0  +
cmp eax 4 +
jnz loc_421D9C  +
jmp loc_422008  +
***
push esi  +
push ebx  +
sub esp 84h +
mov ebx [esp+90h] +
test byte ptr [ebx+2Ah] 4 +
jz loc_4220A3  +
mov eax 1 +
add esp 84h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp] ebx +
call sub_411DA0  +
lea eax [esp+10h] +
mov [esp+4] eax +
mov [esp] ebx +
call sub_411DC0  +
cmp eax 0FFFFFFFFh +
jz loc_422180  +
mov eax [ebx+0A0h] +
mov edx [esp+34h] +
cmp edx [eax+20h] +
jle loc_422095  +
add edx 3Ch +
lea esi [esp+54h] +
mov [eax+20h] edx +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 0Ch +
mov [esp] esi +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
call sub_41F120  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+28h] 18h +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 18h +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_411E10  +
test eax eax +
jnz loc_422162  +
mov [esp+8] ebx +
mov dword ptr [esp+4] 0Ch +
mov [esp] esi +
call sub_411CB0  +
cmp eax 0Ch +
jz loc_422191  +
mov dword ptr [esp] offset aWritingUpdated +
call sub_410430  +
add esp 84h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] offset aReadingArchive +
call sub_410430  +
jmp loc_422095  +
***
xor al al +
jmp loc_42209A  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov ebp [esp+9Ch] +
mov dword ptr [esp+4] 0Ah +
mov esi [esp+90h] +
mov dword ptr [esp+34h] 20202020h +
mov dword ptr [esp+38h] 20202020h +
lea ebx ds:4[ebp*4] +
add ebx [esp+0A0h] +
mov dword ptr [esp+3Ch] 20202020h +
mov dword ptr [esp+40h] 20202020h +
mov eax ebx +
and eax 1 +
cmp eax 1 +
sbb ebx 0FFFFFFFFh +
mov [esp+20h] eax +
lea eax [esp+64h] +
mov [esp+8] ebx +
mov [esp] eax +
mov dword ptr [esp+44h] 20202020h +
mov dword ptr [esp+48h] 20202020h +
mov dword ptr [esp+4Ch] 20202020h +
mov dword ptr [esp+50h] 20202020h +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
mov dword ptr [esp+60h] 20202020h +
mov dword ptr [esp+64h] 20202020h +
mov dword ptr [esp+68h] 20202020h +
mov dword ptr [esp+6Ch] 20202020h +
mov byte ptr [esp+34h] 2Fh +
call sub_41F1C0  +
test eax eax +
jz loc_422332  +
xor eax eax +
test byte ptr [esi+2Ah] 4 +
jz loc_422340  +
mov [esp+0Ch] eax +
lea eax [esp+44h] +
mov [esp] eax +
lea edi [esp+34h] +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 0Ch +
call sub_41F120  +
lea eax [esp+50h] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
call sub_41F120  +
lea eax [esp+56h] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
call sub_41F120  +
lea eax [esp+5Ch] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset a7lo +
mov dword ptr [esp+4] 8 +
call sub_41F120  +
mov edx 0A60h +
mov [esp+8] esi +
mov dword ptr [esp+4] 3Ch +
mov [esp] edi +
mov [esp+6Eh] dx +
call sub_411CB0  +
cmp eax 3Ch +
jz loc_422351  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 0 +
call time  +
jmp loc_42227B  +
***
mov [esp+4] ebp +
mov [esp] esi +
call sub_412DF0  +
test eax eax +
jz loc_422332  +
mov eax [esi+94h] +
test ebp ebp +
mov edx eax +
mov [esp+24h] eax +
jz loc_4224DA  +
mov eax [esp+94h] +
mov dword ptr [esp+1Ch] 0 +
lea eax [ebx+eax+44h] +
xor ebx ebx +
test edx edx +
mov [esp+18h] eax +
jz loc_42242A  +
cmp ebp ebx +
jbe loc_422400  +
mov edx [esp+98h] +
lea eax [ebx+ebx*2] +
lea edx [edx+eax*8] +
mov eax [edx+8] +
cmp eax [esp+24h] +
mov [esp+10h] eax +
jnz loc_422400  +
mov ecx [esp+1Ch] +
mov eax [esp+18h] +
test ecx ecx +
mov [esp+14h] eax +
jnz loc_4224C2  +
mov edi edx +
add ebx 1 +
jmp loc_4223E9  +
cmp ebx ebp +
jz loc_422400  +
mov eax [edi+20h] +
add edi 18h +
cmp eax [esp+10h] +
lea ecx [ebx+1] +
jnz loc_422400  +
mov eax [esp+14h] +
mov ebx ecx +
mov [esp+4] eax +
mov [esp] esi +
call sub_412DF0  +
test eax eax +
jnz loc_4223D0  +
jmp loc_422332  +
***
add dword ptr [esp+18h] 3Ch +
adc dword ptr [esp+1Ch] 0 +
test byte ptr [esi+2Bh] 40h +
jz loc_422485  +
mov eax [esp+24h] +
cmp ebp ebx +
mov eax [eax+90h] +
mov [esp+24h] eax +
jbe loc_42242A  +
test eax eax +
jnz loc_422396  +
mov ecx [esp+98h] +
xor edx edx +
mov [esp+90h] esi +
mov [esp+9Ch] ebp +
mov ebp edx +
mov esi ecx +
jmp loc_422456  +
add ebp 1 +
add esi 18h +
cmp [esp+9Ch] ebp +
jbe loc_4224D3  +
mov eax [esi] +
mov edi [eax] +
mov [esp] edi +
call strlen  +
mov [esp] edi +
lea ebx [eax+1] +
mov eax [esp+90h] +
mov [esp+4] ebx +
mov [esp+8] eax +
call sub_411CB0  +
cmp eax ebx +
jz loc_422447  +
jmp loc_422332  +
***
mov eax [esp+24h] +
xor edx edx +
mov dword ptr [esp+2Ch] 0 +
mov eax [eax+88h] +
mov eax [eax+4] +
add eax [esp+18h] +
adc edx [esp+1Ch] +
mov ecx eax +
and ecx 1 +
mov [esp+28h] ecx +
add eax [esp+28h] +
adc edx [esp+2Ch] +
mov [esp+18h] eax +
mov [esp+1Ch] edx +
jmp loc_422410  +
***
mov dword ptr [esp] 12h +
call sub_4105E0  +
jmp loc_422332  +
***
mov esi [esp+90h] +
mov eax [esp+20h] +
test eax eax +
jnz loc_4224EC  +
mov eax 1 +
jmp loc_422334  +
***
mov [esp+8] esi +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset unk_487240 +
call sub_411CB0  +
sub eax 1 +
setz al  +
movzx eax al +
jmp loc_422334  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+30h] +
movzx eax byte ptr [ebx+28h] +
test al 8 +
jz loc_42253D  +
and eax 7 +
cmp al 2 +
jz loc_4225C1  +
mov eax [ebx+88h] +
test eax eax +
jz loc_4225A1  +
mov esi [eax+18h] +
test esi esi +
jz loc_4225A1  +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov dword ptr [esp+8] 0 +
mov [esp] esi +
mov [esp+14h] edx +
mov [esp+10h] eax +
lea eax [esp+10h] +
mov [esp+4] eax +
call sub_46B1C0  +
test eax eax +
mov edi eax +
jz loc_4225A1  +
mov eax [eax] +
cmp [eax+8] ebx +
jz loc_422595  +
mov dword ptr [esp+4] 0AEDh +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_410530  +
mov [esp+4] edi +
mov [esp] esi +
call sub_46B280  +
test byte ptr [ebx+2Ch] 1 +
jz loc_4225B5  +
mov eax [ebx+9Ch] +
mov eax [eax+24h] +
mov [esp] ebx +
call eax  +
add esp 20h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx+98h] +
test eax eax +
jnz loc_4225D2  +
jmp loc_4225E4  +
mov eax esi +
mov esi [eax+90h] +
mov [esp] eax +
call sub_40DDB0  +
test esi esi +
jnz loc_4225D0  +
mov eax [ebx+0A0h] +
mov esi [eax+8] +
test esi esi +
jz loc_42253D  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset sub_41F100 +
mov [esp] esi +
call sub_46B2D0  +
mov [esp] esi +
call sub_46AD10  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+8] 0 +
jmp loc_42253D  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+8] +
add eax 2 +
cmp eax 0Ah +
ja loc_4226A0  +
jmp ds:off_4872DC[eax*4]  +
mov eax 2 +
add esp 1Ch +
retn   +
mov eax 4 +
add esp 1Ch +
retn   +
mov eax 1 +
add esp 1Ch +
retn   +
mov eax 8 +
add esp 1Ch +
retn   +
xor eax eax +
add esp 1Ch +
retn   +
mov eax 10h +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_14] offset aBfd_get_reloc_ +
mov [esp+1Ch+var_18] 1BAh +
mov [esp+1Ch+var_1C] offset a____Binutil_13 +
call sub_410560  +
lea esi [esi+0] +
push ebp  +
mov edx 1 +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+48h+var_14] +
mov ebx [esp+48h+var_C] +
mov esi [esp+48h+var_10] +
mov edi [esp+48h+var_18] +
lea ecx [eax-1] +
mov eax edx +
shl eax cl +
lea eax [eax+eax-2] +
lea ecx [ebx-1] +
or eax 1 +
shl edx cl +
mov ebx eax +
mov ecx esi +
mov ebp eax +
lea edx [edx+edx-2] +
not ebp  +
shl ebx cl +
or edx 1 +
or edx ebx +
mov ebx [esp+48h+var_8] +
mov ecx esi +
and ebx edx +
shr ebx cl +
cmp edi 1 +
jz loc_422737  +
jb loc_422770  +
cmp edi 2 +
jz loc_422731  +
cmp edi 3 +
nop   +
lea esi [esi+0] +
jnz loc_422752  +
xor eax eax +
test ebp ebx +
setnz al  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shr eax 1 +
mov ebp eax +
not ebp  +
xor eax eax +
and ebx ebp +
jz loc_422729  +
mov ecx esi +
xor eax eax +
shr edx cl +
and edx ebp +
cmp ebx edx +
setnz al  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+48h+var_40] offset aBfd_check_over +
mov [esp+48h+var_44] 217h +
mov [esp+48h+var_48] offset a____Binutil_13 +
call sub_410560  +
nop   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_4] +
mov eax [ebx] +
mov ebp [ebx+0Ch] +
mov esi [eax] +
mov eax [esi+10h] +
cmp eax offset off_47D510 +
jz loc_422965  +
test ebp ebp +
jz loc_422920  +
cmp eax offset off_47D468 +
mov [esp+3Ch+var_1C] 0 +
jz loc_422985  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_422800  +
mov edx [esp+3Ch+arg_14] +
mov edi [esp+3Ch+arg_10] +
mov ecx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_34] esi +
mov [esp+3Ch+var_24] edx +
mov edx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_28] edi +
mov edi [esp+3Ch+arg_8] +
mov [esp+3Ch+var_2C] ecx +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_30] edi +
call eax  +
cmp eax 3 +
jz loc_422800  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
mov edi [ebx+4] +
mov [esp+3Ch+var_3C] eax +
call sub_4102D0  +
mov [esp+3Ch+var_3C] ebp +
mov edx eax +
imul edx edi +
mov [esp+3Ch+var_18] edx +
call sub_422630  +
mov edx [esp+3Ch+var_18] +
lea edi [edx+eax] +
mov eax [esp+3Ch+arg_0] +
movzx eax byte ptr [eax+28h] +
and eax 18h +
cmp al 10h +
jz loc_422930  +
mov eax [esp+3Ch+arg_C] +
mov ecx [eax+28h] +
test ecx ecx +
jz loc_422930  +
cmp ecx edi +
mov eax 2 +
jb loc_4227F8  +
mov eax [esi+10h] +
xor ecx ecx +
test byte ptr [eax+15h] 10h +
jnz loc_422860  +
mov ecx [esi+8] +
mov esi [esp+3Ch+arg_10] +
mov edi [eax+3Ch] +
test esi esi +
jz loc_422950  +
xor esi esi +
cmp dword ptr [ebp+24h] 0 +
jnz loc_422950  +
mov edi [ebx+8] +
mov [esp+3Ch+var_14] edi +
add edi [eax+38h] +
add ecx edi +
lea eax [ecx+esi] +
mov [esp+3Ch+var_18] eax +
mov eax [ebp+10h] +
test eax eax +
jz loc_4228B9  +
mov eax [esp+3Ch+arg_C] +
mov ecx [esp+3Ch+arg_C] +
mov eax [eax+3Ch] +
mov ecx [ecx+38h] +
sub [esp+3Ch+var_18] ecx +
mov eax [eax+1Ch] +
sub [esp+3Ch+var_18] eax +
mov eax [ebp+30h] +
test eax eax +
jnz loc_4229F4  +
mov edi [esp+3Ch+arg_10] +
test edi edi +
jz loc_4228EE  +
mov esi [ebp+24h] +
test esi esi +
jz loc_422B90  +
mov eax [esp+3Ch+arg_C] +
mov eax [eax+38h] +
add [ebx+4] eax +
mov eax [esp+3Ch+arg_0] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 2 +
jz loc_422A00  +
mov eax [esp+3Ch+var_18] +
mov [ebx+8] eax +
mov ecx [ebp+18h] +
test ecx ecx +
jnz loc_4229A4  +
mov ecx [ebp+4] +
mov ebx [esp+3Ch+var_18] +
mov eax [ebp+8] +
shr ebx cl +
mov ecx [ebp+14h] +
add eax 2 +
shl ebx cl +
cmp eax 6 +
ja loc_422BAA  +
jmp ds:off_48732C[eax*4]  +
add esp 3Ch +
mov eax 6 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_C] +
mov ecx [eax+24h] +
mov eax 2 +
cmp ecx edi +
jb loc_4227F8  +
jmp loc_422852  +
test edi edi +
jz loc_422A50  +
mov esi [edi+1Ch] +
nop   +
lea esi [esi+0] +
jmp loc_42287B  +
mov edi [esp+3Ch+arg_10] +
test edi edi +
jz loc_422BB4  +
mov eax [esp+3Ch+arg_C] +
mov eax [eax+38h] +
add [ebx+4] eax +
add esp 3Ch +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [esi+0Ch] 80h +
jnz loc_4227BB  +
cmp [esp+3Ch+arg_10] 1 +
sbb eax eax +
mov [esp+3Ch+var_1C] eax +
and [esp+3Ch+var_1C] 6 +
jmp loc_4227BB  +
mov eax [esp+3Ch+var_1C] +
test eax eax +
jnz loc_4228F9  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_14] edx +
mov [esp+3Ch+var_3C] eax +
call sub_4101E0  +
mov ebx [ebp+4] +
mov ecx [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_2C] ecx +
mov [esp+3Ch+var_30] eax +
mov eax [ebp+0Ch] +
mov [esp+3Ch+var_38] eax +
mov eax [ebp+18h] +
mov [esp+3Ch+var_3C] eax +
call loc_4226C0  +
mov ecx ebx +
mov edx [esp+3Ch+var_14] +
mov [esp+3Ch+var_1C] eax +
jmp loc_4228FC  +
mov eax [ebx+4] +
sub [esp+3Ch+var_18] eax +
jmp loc_4228B9  +
mov eax [eax] +
mov ecx 12h +
mov edi offset aCoffIntelLittl +
mov esi eax +
cmps   +
mov [esp+3Ch+var_10] eax +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_4228E7  +
mov esi [esp+3Ch+var_10] +
mov edi offset aCoffIntelBig +
mov ecx 0Fh +
cmps   +
jz loc_4228E7  +
mov eax [esp+3Ch+var_14] +
sub [esp+3Ch+var_18] eax +
mov dword ptr [ebx+8] 0 +
jmp loc_4228EE  +
xor esi esi +
jmp loc_42287B  +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+4] +
add esi edx +
mov eax [eax+34h] +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov ecx [esp+3Ch+arg_0] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+3Ch] +
mov [esp+3Ch+var_38] esi +
mov esi [ebp+28h] +
and esi eax +
sub esi ebx +
and esi edx +
not edx  +
and edx eax +
or esi edx +
mov [esp+3Ch+var_3C] esi +
call ecx  +
mov eax [esp+3Ch+var_1C] +
jmp loc_4227F8  +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+4] +
add esi edx +
mov eax [eax+28h] +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov ecx [esp+3Ch+arg_0] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
mov [esp+3Ch+var_38] esi +
mov esi [ebp+28h] +
and esi eax +
add ebx esi +
and ebx edx +
not edx  +
and edx eax +
or ebx edx +
mov [esp+3Ch+var_3C] ebx +
call ecx  +
mov eax [esp+3Ch+var_1C] +
jmp loc_4227F8  +
mov [esp+3Ch+var_34] offset aBfd_perform_re +
mov [esp+3Ch+var_38] 3A6h +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_410560  +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+4] +
add esi edx +
mov eax [eax+34h] +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov ecx [esp+3Ch+arg_0] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+3Ch] +
mov [esp+3Ch+var_38] esi +
mov esi eax +
and si [ebp+28h] +
add ebx esi +
and ebx edx +
not edx  +
and edx eax +
or ebx edx +
movsx ebx bx +
mov [esp+3Ch+var_3C] ebx +
call ecx  +
mov eax [esp+3Ch+var_1C] +
jmp loc_4227F8  +
add edx [esp+3Ch+arg_8] +
movzx esi byte ptr [ebp+28h] +
mov ecx [ebp+2Ch] +
movzx eax byte ptr [edx] +
and esi eax +
add ebx esi +
and ebx ecx +
not ecx  +
and ecx eax +
mov eax [esp+3Ch+var_1C] +
or ebx ecx +
mov [edx] bl +
jmp loc_4227F8  +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+4] +
add esi edx +
mov eax [eax+28h] +
mov [esp+3Ch+var_3C] esi +
call eax  +
mov ecx [esp+3Ch+arg_0] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
jmp loc_422A79  +
mov eax [esp+3Ch+var_18] +
mov [ebx+8] eax +
mov eax [esp+3Ch+arg_C] +
mov eax [eax+38h] +
add [ebx+4] eax +
mov eax [esp+3Ch+var_1C] +
jmp loc_4227F8  +
mov eax 5 +
jmp loc_4227F8  +
test ebp ebp +
jz loc_422920  +
mov [esp+3Ch+var_1C] 0 +
jmp loc_4227BB  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+54h] +
mov eax [ebx] +
mov ebp [ebx+0Ch] +
mov esi [eax] +
cmp dword ptr [esi+10h] offset off_47D510 +
jz loc_422D70  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_422C34  +
mov edx [esp+64h] +
mov edi [esp+50h] +
mov ecx [esp+60h] +
mov [esp+8] esi +
mov [esp+18h] edx +
mov edx [esp+58h] +
sub edx [esp+5Ch] +
mov [esp+14h] edi +
mov [esp+10h] ecx +
mov [esp+0Ch] edx +
mov [esp+4] ebx +
mov [esp] edi +
call eax  +
cmp eax 3 +
jz loc_422C34  +
***
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test esi esi +
jz loc_422D84  +
mov ecx [ebx+4] +
add eax ecx +
mov [ebx+4] eax +
mov eax [esp+50h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 2 +
jz loc_422F22  +
mov eax [esp+24h] +
mov [ebx+8] eax +
mov eax [ebp+18h] +
test eax eax +
jnz loc_422EE0  +
mov ecx [ebp+4] +
xor ebx ebx +
mov edi [esp+24h] +
mov eax [ebp+8] +
mov esi [esp+58h] +
sub edx [esp+5Ch] +
shr edi cl +
mov ecx [ebp+14h] +
add eax 2 +
add esi edx +
shl edi cl +
cmp eax 6 +
ja sub_422ED0  +
jmp ds:off_487354[eax*4]  +
***
mov eax [esp+60h] +
mov ecx [eax+24h] +
mov eax 2 +
cmp ecx edi +
jb loc_422C2C  +
jmp loc_422C86  +
***
mov eax [esp+60h] +
mov eax [eax+38h] +
add [ebx+4] eax +
add esp 3Ch +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+24h] +
add [ebx+4] eax +
xor eax eax +
mov [ebx+8] esi +
jmp loc_422C2C  +
***
mov eax ebx +
jmp loc_422C2C  +
***
mov eax [esp+arg_4C] +
mov eax [esp+arg_4C] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+0] esi +
call eax  +
mov ecx [esp+arg_4C] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
mov [esp+arg_0] esi +
mov esi [ebp+28h] +
and esi eax +
add edi esi +
and edi edx +
not edx  +
and edx eax +
or edi edx +
mov [esp+0] edi +
call ecx  +
mov eax ebx +
jmp loc_422C2C  +
***
mov eax [esp+arg_4C] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+0] esi +
call eax  +
mov ecx [esp+arg_4C] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+3Ch] +
mov [esp+arg_0] esi +
mov esi eax +
and si [ebp+28h] +
add edi esi +
and edi edx +
not edx  +
and edx eax +
or edi edx +
movsx edi di +
mov [esp+0] edi +
call ecx  +
mov eax ebx +
jmp loc_422C2C  +
***
movzx eax byte ptr [esi] +
mov ecx [ebp+2Ch] +
mov edx eax +
and dl [ebp+28h] +
add edx edi +
and edx ecx +
not ecx  +
and ecx eax +
mov eax ebx +
or edx ecx +
mov [esi] dl +
jmp loc_422C2C  +
***
mov eax [esp+arg_4C] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+0] esi +
call eax  +
mov ecx [esp+arg_4C] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
mov [esp+arg_0] esi +
mov esi [ebp+28h] +
and esi eax +
sub esi edi +
and esi edx +
not edx  +
and edx eax +
or esi edx +
mov [esp+0] esi +
call ecx  +
mov eax ebx +
jmp loc_422C2C  +
***
mov eax 5 +
jmp loc_422C2C  +
***
mov eax [esp+50h] +
mov [esp+28h] edx +
mov [esp] eax +
call sub_4101E0  +
mov esi [ebp+4] +
mov ebx [esp+24h] +
mov [esp+8] esi +
mov [esp+10h] ebx +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
mov eax [ebp+18h] +
mov [esp] eax +
call loc_4226C0  +
mov ecx esi +
mov edx [esp+28h] +
mov ebx eax +
jmp loc_422D26  +
***
mov eax [eax] +
mov ecx 12h +
mov edi offset aCoffIntelLittl +
mov esi eax +
cmps   +
mov [esp+2Ch] eax +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_422D0F  +
mov esi [esp+2Ch] +
mov edi offset aCoffIntelBig +
mov ecx 0Fh +
cmps   +
jz loc_422D0F  +
mov eax [esp+28h] +
mov edi offset aCoffZ8k +
mov ecx 9 +
sub [esp+24h] eax +
mov esi [esp+2Ch] +
cmps   +
jz loc_422D16  +
mov dword ptr [ebx+8] 0 +
jmp loc_422D16  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov eax [ebx+4] +
mov edx [ebx+8] +
mov [esp+3Ch+var_30] eax +
mov eax [ebx+14h] +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_2C] eax +
mov eax esi +
neg eax  +
test edx edx +
cmovs esi eax +
call sub_422630  +
cmp eax 8 +
mov edi eax +
ja loc_423180  +
jmp ds:off_487370[eax*4]  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_C] +
movzx eax byte ptr [eax] +
mov [esp+3Ch+var_28] eax +
mov eax [ebx+18h] +
test eax eax +
jnz loc_423084  +
mov ebp [esp+3Ch+var_28] +
and ebp [ebx+28h] +
mov [esp+3Ch+var_24] 0 +
movzx ecx byte ptr [esp+3Ch+var_30] +
mov edx [ebx+2Ch] +
shr esi cl +
movzx ecx byte ptr [esp+3Ch+var_2C] +
mov eax edx +
not eax  +
and eax [esp+3Ch+var_28] +
shl esi cl +
lea ecx [esi+ebp] +
and ecx edx +
or ecx eax +
cmp edi 2 +
jz loc_423273  +
jle loc_423220  +
cmp edi 4 +
jz loc_423234  +
cmp edi 8 +
jnz loc_423257  +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 60Bh +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_410560  +
mov eax [esp+3Ch+arg_4] +
mov edx [esp+3Ch+arg_C] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+3Ch+var_3C] edx +
call eax  +
mov [esp+3Ch+var_28] eax +
mov eax [ebx+18h] +
test eax eax +
jz loc_422FF6  +
mov eax [ebx+0Ch] +
mov ebp 1 +
lea ecx [eax-1] +
mov eax ebp +
shl eax cl +
mov ecx [esp+3Ch+arg_4] +
lea eax [eax+eax-2] +
mov [esp+3Ch+var_24] eax +
or [esp+3Ch+var_24] 1 +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] ecx +
not eax  +
mov [esp+3Ch+var_1C] eax +
call sub_4101E0  +
movzx ecx byte ptr [esp+3Ch+var_30] +
mov edx [esp+3Ch+var_24] +
shl edx cl +
lea ecx [eax-1] +
or edx 1 +
shl ebp cl +
lea eax [ebp+ebp-2] +
mov ebp [esp+3Ch+var_28] +
or edx eax +
mov eax [esp+3Ch+var_30] +
mov ecx edx +
and ecx esi +
mov [esp+3Ch+var_20] ecx +
mov ecx eax +
shr [esp+3Ch+var_20] cl +
mov ecx [ebx+28h] +
and ebp ecx +
mov [esp+3Ch+var_10] ecx +
mov ecx edx +
and ecx ebp +
mov [esp+3Ch+var_18] ecx +
movzx ecx byte ptr [esp+3Ch+var_2C] +
shr [esp+3Ch+var_18] cl +
mov ecx eax +
mov eax [ebx+18h] +
shr edx cl +
mov [esp+3Ch+var_14] edx +
cmp eax 2 +
jz loc_4231A0  +
cmp eax 3 +
jz loc_423280  +
cmp eax 1 +
jz loc_4231AE  +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 5EDh +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_410560  +
mov eax [esp+3Ch+arg_4] +
mov edx [esp+3Ch+arg_C] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+3Ch+var_3C] edx +
call eax  +
mov [esp+3Ch+var_28] eax +
jmp loc_422FEB  +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 58Dh +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_410560  +
lea esi [esi+0] +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 57Dh +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_410560  +
lea esi [esi+0] +
mov eax [esp+3Ch+var_24] +
shr eax 1 +
mov [esp+3Ch+var_1C] eax +
not [esp+3Ch+var_1C]  +
mov eax [esp+3Ch+var_1C] +
and eax [esp+3Ch+var_20] +
mov [esp+3Ch+var_24] 0 +
jz loc_4231D4  +
mov edx [esp+3Ch+var_1C] +
and edx [esp+3Ch+var_14] +
cmp eax edx +
setnz al  +
movzx eax al +
mov [esp+3Ch+var_24] eax +
mov edx [esp+3Ch+var_10] +
movzx ecx byte ptr [esp+3Ch+var_2C] +
mov eax edx +
not eax  +
shr eax 1 +
and eax edx +
mov edx [esp+3Ch+var_18] +
shr eax cl +
mov ecx [esp+3Ch+var_20] +
xor edx eax +
sub edx eax +
mov eax ecx +
xor eax edx +
add edx ecx +
xor edx ecx +
not eax  +
and eax edx +
and eax [esp+3Ch+var_14] +
test [esp+3Ch+var_1C] eax +
mov eax 1 +
cmovz eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_24] eax +
jmp loc_423005  +
cmp edi 1 +
jnz loc_423257  +
mov eax [esp+3Ch+arg_C] +
mov [eax] cl +
mov eax [esp+3Ch+var_24] +
jmp loc_422FD5  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov edi [esp+3Ch+arg_C] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_38] edi +
call eax  +
mov eax [esp+3Ch+var_24] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_34] offset a_bfd_relocate_ +
mov [esp+3Ch+var_38] 5FDh +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_410560  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov eax [eax+3Ch] +
jmp loc_42323E  +
mov edx [esp+3Ch+var_18] +
mov ecx [esp+3Ch+var_20] +
mov eax edx +
add edx ecx +
or eax ecx +
and edx [esp+3Ch+var_14] +
or eax edx +
test [esp+3Ch+var_1C] eax +
setnz al  +
movzx eax al +
mov [esp+3Ch+var_24] eax +
jmp loc_423005  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov edx [esp+2Ch+arg_4] +
mov ecx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_18] +
mov [esp+2Ch+var_2C] edx +
mov edi [esp+2Ch+arg_10] +
mov [esp+2Ch+var_18] ecx +
mov ebp [esp+2Ch+arg_14] +
mov [esp+2Ch+var_1C] edx +
mov [esp+2Ch+var_10] eax +
call sub_4102D0  +
mov [esp+2Ch+var_2C] esi +
mov ebx eax +
call sub_422630  +
imul ebx edi +
mov edx [esp+2Ch+var_1C] +
mov ecx [esp+2Ch+var_18] +
add ebx eax +
movzx eax byte ptr [edx+28h] +
and eax 18h +
cmp al 10h +
jz loc_423325  +
mov eax [ecx+28h] +
test eax eax +
jz loc_423325  +
cmp eax ebx +
jnb loc_42332C  +
add esp 2Ch +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ecx+24h] +
cmp eax ebx +
jb loc_423318  +
mov ebx [esi+10h] +
add ebp [esp+2Ch+var_10] +
test ebx ebx +
jz loc_42334C  +
mov eax [ecx+3Ch] +
sub ebp [eax+1Ch] +
sub ebp [ecx+38h] +
mov ecx [esi+30h] +
mov eax ebp +
sub eax edi +
test ecx ecx +
cmovnz ebp eax +
add edi [esp+2Ch+var_14] +
mov [esp+2Ch+arg_8] ebp +
mov [esp+2Ch+arg_0] esi +
mov [esp+2Ch+arg_C] edi +
mov [esp+2Ch+arg_4] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_422F90  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov eax [esp+2Ch+arg_C] +
mov ebp [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_14] eax +
call sub_422630  +
cmp eax 8 +
mov ebx eax +
ja loc_423462  +
jmp ds:off_4873A4[eax*4]  +
cmp ebx 1 +
jnz loc_4234A0  +
mov eax [esp+2Ch+var_14] +
mov [eax] dl +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_24] offset a_bfd_clear_con +
mov [esp+2Ch+var_28] 636h +
mov [esp+2Ch+var_2C] offset a____Binutil_13 +
call sub_410560  +
lea esi [esi+0] +
mov eax [esp+2Ch+var_14] +
movzx eax byte ptr [eax] +
mov edx [edi+2Ch] +
mov ecx 0Eh +
mov edi offset a_debug_ranges +
mov esi [esi] +
mov [esp+2Ch+var_10] edx +
not edx  +
and edx eax +
cmps   +
jnz loc_42340F  +
mov eax edx +
or eax 1 +
test byte ptr [esp+2Ch+var_10] 1 +
cmovnz edx eax +
cmp ebx 2 +
jz loc_423480  +
jle loc_4233A5  +
cmp ebx 4 +
jz loc_4234C0  +
cmp ebx 8 +
jnz loc_4234A0  +
mov [esp+2Ch+var_24] offset a_bfd_clear_con +
mov [esp+2Ch+var_28] 658h +
mov [esp+2Ch+var_2C] offset a____Binutil_13 +
call sub_410560  +
mov eax [ebp+4] +
mov ecx [esp+2Ch+var_14] +
mov eax [eax+34h] +
mov [esp+2Ch+var_2C] ecx +
call eax  +
jmp loc_4233E7  +
mov eax [ebp+4] +
mov ecx [esp+2Ch+var_14] +
mov eax [eax+28h] +
mov [esp+2Ch+var_2C] ecx +
call eax  +
jmp loc_4233E7  +
mov [esp+2Ch+var_24] offset a_bfd_clear_con +
mov [esp+2Ch+var_28] 626h +
mov [esp+2Ch+var_2C] offset a____Binutil_13 +
call sub_410560  +
nop   +
mov eax [ebp+4] +
mov eax [eax+3Ch] +
mov ecx [esp+2Ch+var_14] +
mov [esp+2Ch+arg_0] edx +
mov [esp+2Ch+arg_4] ecx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov [esp+2Ch+var_24] offset a_bfd_clear_con +
mov [esp+2Ch+var_28] 64Ah +
mov [esp+2Ch+var_2C] offset a____Binutil_13 +
call sub_410560  +
lea esi [esi+0] +
mov eax [ebp+4] +
mov eax [eax+30h] +
jmp loc_423486  +
***
mov eax [esp+arg_0] +
mov edx [eax+4] +
mov edx [edx+148h] +
jmp edx  +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov edx [edx+14Ch] +
jmp edx  +
***
sub esp 1Ch +
cmp dword ptr [esp+24h] 225h +
jnz loc_423547  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_4101E0  +
mov edx eax +
mov eax offset unk_4875C0 +
cmp edx 20h +
jz loc_42355D  +
cmp edx 40h +
jz loc_423561  +
cmp edx 10h +
jnz loc_423533  +
mov dword ptr [esp+4] 1E30h +
mov dword ptr [esp] offset a____Binutil_13 +
call sub_410530  +
mov dword ptr [esp+4] 1E32h +
mov dword ptr [esp] offset a____Binutil_13 +
call sub_410530  +
mov dword ptr [esp+4] 1E35h +
mov dword ptr [esp] offset a____Binutil_13 +
call sub_410530  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp+4] 1E2Ch +
mov dword ptr [esp] offset a____Binutil_13 +
mov [esp+0Ch] eax +
call sub_410530  +
mov eax [esp+0Ch] +
add esp 1Ch +
retn   +
***
jmp loc_423590  +
mov eax [esp+4] +
cmp eax 87Ah +
ja loc_4235A3  +
mov eax ds:off_495040[eax*4] +
retn   +
***
xor eax eax +
retn   +
***
sub esp 1Ch +
mov edx [esp+28h] +
movzx eax byte ptr [edx] +
and eax 3 +
cmp al 2 +
jz loc_4235D4  +
mov eax [esp+2Ch] +
mov dword ptr [eax] 0 +
mov eax 1 +
add esp 1Ch +
retn   +
***
mov eax [edx+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aPFRelaxAndRM_0 +
call eax  +
jmp loc_4235C1  +
***
mov eax 1 +
retn   +
***
sub esp 1Ch +
mov eax 1 +
mov edx [esp+24h] +
test edx edx +
jz loc_42361F  +
mov dword ptr [esp] offset aInput_section_ +
call off_47D664  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax 1 +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+68h] +
mov edi [esp+70h] +
mov ebx [eax+10h] +
mov ebp [ebx+94h] +
mov [esp+4] ebx +
mov [esp] ebp +
call loc_410630  +
test eax eax +
mov esi eax +
js loc_423801  +
lea eax [esp+6Ch] +
mov [esp+8] eax +
mov [esp+4] ebx +
mov [esp] ebp +
call sub_414B50  +
test eax eax +
jz loc_423801  +
test esi esi +
jnz loc_4236A0  +
***
mov eax [esp+arg_68] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] esi +
call sub_412BD0  +
test eax eax +
mov esi eax +
mov [esp+2Ch] eax +
jz loc_423801  +
mov eax [esp+74h] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] ebp +
mov [esp+0Ch] eax +
call sub_410670  +
test eax eax +
js loc_4237F5  +
jz loc_4237BD  +
mov eax [esi] +
test eax eax +
jz loc_4237BD  +
mov [esp+28h] ebp +
mov [esp+70h] edi +
nop   +
***
mov dword ptr [esp+3Ch] 0 +
mov edx [esi] +
mov eax [edx] +
mov eax [eax] +
mov eax [eax+10h] +
test eax eax +
jz loc_423719  +
cmp eax offset off_47D510 +
jz loc_423719  +
cmp dword ptr [eax+3Ch] offset off_47D510 +
jz loc_423960  +
mov ecx [esp+70h] +
xor eax eax +
mov [esp-5Ch+arg_64] ebx +
mov [esp-5Ch+arg_5C] edx +
test ecx ecx +
cmovnz eax [esp+60h] +
lea ecx [esp+3Ch] +
mov [esp-5Ch+arg_6C] ecx +
mov [esp-5Ch+arg_68] eax +
mov eax [esp-5Ch+arg_C4] +
mov [esp-5Ch+arg_60] eax +
mov eax [esp-5Ch+arg_80] +
mov [esp-5Ch+arg_58] eax +
call sub_422780  +
mov edx [esp+70h] +
test edx edx +
jz loc_42376B  +
mov edx [ebx+3Ch] +
mov edi [esi] +
mov ecx [edx+4Ch] +
mov ebp [edx+48h] +
mov [ebp+ecx*4+0] edi +
add ecx 1 +
mov [edx+4Ch] ecx +
test eax eax +
jz loc_4237B0  +
cmp eax 7 +
ja sub_423780  +
jmp ds:off_4874C4[eax*4]  +
***
mov edi [esp+64h] +
mov ecx [esi] +
mov edx [edi+18h] +
mov edx [edx+2Ch] +
mov [esp-5Ch+arg_68] eax +
mov eax [esp+60h] +
mov [esp-5Ch+arg_64] ecx +
mov [esp-5Ch+arg_60] ebx +
mov [esp-5Ch+arg_58] offset aXPBARelocation +
mov [esp-5Ch+arg_5C] eax +
call edx  +
lea esi [esi+0] +
add esi 4 +
mov eax [esi] +
test eax eax +
jnz loc_4236F0  +
mov eax [esp+2Ch] +
mov [esp-5Ch+arg_58] eax +
call free  +
jmp loc_42368E  +
***
mov eax [esp+arg_60] +
mov edx [esi] +
mov edi [esp+arg_5C] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+arg_8] edx +
mov [esp+arg_4] ebx +
mov [esp+arg_0] edi +
mov dword ptr [esp+0] offset aXPBARelocati_0 +
call eax  +
mov eax [esp+arg_28] +
mov [esp+0] eax +
call free  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_38] +
test eax eax +
jz loc_4239D6  +
mov edi [esp+arg_60] +
mov ecx [esi] +
mov edx [edi+18h] +
mov ecx [ecx+4] +
mov edi [esp+arg_24] +
mov edx [edx+20h] +
mov [esp+arg_0] eax +
mov eax [esp+arg_60] +
mov [esp+arg_C] ecx +
mov [esp+arg_8] ebx +
mov [esp+arg_4] edi +
mov [esp+0] eax +
call edx  +
test eax eax +
jz loc_4237F5  +
add esi 4 +
mov eax [esi] +
test eax eax +
jnz loc_4236F0  +
jmp loc_4237BD  +
***
mov eax [esp+arg_60] +
mov eax [esp+arg_60] +
mov edx [esi] +
mov edi [esp+arg_5C] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+arg_8] edx +
mov [esp+arg_4] ebx +
mov [esp+arg_0] edi +
mov dword ptr [esp+0] offset aXPBARelocati_1 +
call eax  +
mov eax [esp+arg_28] +
mov [esp+0] eax +
call free  +
jmp loc_423801  +
***
mov eax [esp+arg_60] +
mov eax [eax+18h] +
mov eax [eax+1Ch] +
mov edi eax +
mov eax [esi] +
mov edx [eax+8] +
mov ecx [eax+4] +
mov ebp edx +
mov edx [eax+0Ch] +
mov eax [eax] +
mov edx [edx+20h] +
mov eax [eax] +
mov eax [eax+4] +
mov [esp+arg_18] ecx +
mov ecx [esp+arg_24] +
mov [esp+arg_14] ebx +
mov [esp+arg_C] ebp +
mov [esp+arg_4] eax +
mov eax [esp+arg_60] +
mov [esp+arg_10] ecx +
mov [esp+arg_8] edx +
mov [esp+arg_0] 0 +
mov [esp+0] eax +
call edi  +
test eax eax +
jz loc_4237F5  +
add esi 4 +
mov eax [esi] +
test eax eax +
jnz loc_4236F0  +
jmp loc_4237BD  +
***
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 100h +
jz loc_423719  +
cmp ax 200h +
jz loc_423719  +
mov eax [esp-5Ch+arg_C4] +
mov edi eax +
mov eax [edx+4] +
mov ebp eax +
mov eax [esp-5Ch+arg_80] +
mov [esp-5Ch+arg_58] eax +
call sub_4102D0  +
mov edx [esi] +
mov edx [edx+0Ch] +
mov [esp-5Ch+arg_60] ebx +
imul eax ebp +
mov [esp-5Ch+arg_58] edx +
add eax edi +
mov [esp-5Ch+arg_64] eax +
mov eax [esp-5Ch+arg_80] +
mov [esp-5Ch+arg_5C] eax +
call sub_423370  +
mov eax [esi] +
mov edx off_47D5AC +
mov [eax] edx +
mov eax [esi] +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] offset unk_487500 +
xor eax eax +
jmp loc_42374E  +
***
mov [esp+arg_0] 1F1Ch +
mov dword ptr [esp+0] offset a____Binutil_13 +
call sub_410530  +
mov eax [esp+arg_38] +
jmp loc_42381C  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] 10h +
mov [esp+1Ch+var_1C] eax +
call sub_412630  +
test eax eax +
jz loc_423A22  +
mov dword ptr [eax+0Ch] 0 +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test byte ptr [ebx+2Ch] 1 +
jz loc_423A70  +
mov esi [ebx+9Ch] +
test esi esi +
jz loc_423A70  +
mov [esp+14h+var_14] esi +
call sub_412190  +
mov [esp+14h+var_14] esi +
call free  +
mov dword ptr [ebx+9Ch] 0 +
and byte ptr [ebx+2Ch] 0FEh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+14h+var_10] 30Ch +
mov [esp+14h+var_14] offset a____Binutil_11 +
call sub_410530  +
mov esi [ebx+9Ch] +
jmp loc_423A49  +
***
sub esp 1Ch +
mov edx [edx+18h] +
retn   +
***
or dword ptr [eax+0Ch] 80h +
***
mov ecx [edx+14h] +
mov dword ptr [eax+10h] offset off_47D468 +
mov edx [eax+10h] +
test edx edx +
jz loc_423B71  +
test byte ptr [eax+0Dh] 8 +
jnz sub_423AE6  +
mov dword ptr [esp+4] 8E9h +
mov dword ptr [esp+0] offset a____Binutil_11 +
call sub_410530  +
jmp sub_423AE6  +
mov dword ptr [eax+10h] offset off_47D468 +
mov dword ptr [eax+8] 0 +
add esp 1Ch +
retn   +
mov dword ptr [esp+8] offset aSet_symbol_fro +
mov [esp-1Ch+arg_1C] 8E2h +
mov [esp-1Ch+arg_18] offset a____Binutil_11 +
call sub_410560  +
or dword ptr [eax+0Ch] 800h +
mov dword ptr [eax+10h] offset off_47D510 +
mov dword ptr [eax+8] 0 +
jmp sub_423AE6  +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
mov ebx [edx] +
mov eax [ecx] +
mov edi [esp+28h+arg_0] +
cmp ebx eax +
jnb loc_423BC3  +
mov eax [ebp+0] +
test edi edi +
mov [eax+ebx*4] edi +
jz loc_423C00  +
add ebx 1 +
mov eax 1 +
mov [esi] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test eax eax +
jz loc_423BF0  +
lea edx [eax+eax] +
mov [ecx] edx +
shl eax 3 +
mov edx [ebp+0] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call sub_412C60  +
test eax eax +
jz loc_423C07  +
mov [ebp+0] eax +
mov ebx [esi] +
jmp loc_423BAA  +
mov dword ptr [ecx] 7Ch +
mov ax 1F0h +
jmp loc_423BCF  +
mov eax 1 +
jmp loc_423BBB  +
xor eax eax +
jmp loc_423BBB  +
***
sub esp 24h +
mov edx [esp+24h+arg_0] +
mov esi [esp+24h+arg_4] +
mov eax [edx+1Ch] +
test eax eax +
jnz loc_423C66  +
mov ecx [esi] +
mov dword ptr [edx+1Ch] 1 +
movzx eax byte ptr [ecx+1] +
and eax 18h +
cmp al 18h +
jz loc_423C66  +
cmp al 10h +
jz loc_423CA0  +
mov ebx [edx+20h] +
test ebx ebx +
jz loc_423C71  +
mov eax ebx +
call sub_423A90  +
mov eax [esi+4] +
or dword ptr [ebx+0Ch] 2 +
mov ecx [esi+8] +
mov [esp+24h+var_24] ebx +
lea edx [eax+7Ch] +
add eax 78h +
call sub_423B90  +
test eax eax +
jz loc_423CD4  +
mov eax 1 +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [esi+4] +
mov [esp+24h+var_8] edx +
mov ecx [eax+4] +
mov ecx [ecx+10Ch] +
mov [esp+24h+var_24] eax +
call ecx  +
test eax eax +
mov ebx eax +
jz loc_423CF0  +
mov edx [esp+24h+var_8] +
mov eax [edx+4] +
mov dword ptr [ebx+0Ch] 0 +
mov [ebx+4] eax +
jmp loc_423C43  +
mov ebx [edx+4] +
mov eax [ecx+20h] +
mov [esp+24h+var_18] 0 +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_8] edx +
call sub_4123C0  +
mov edx [esp+24h+var_8] +
test eax eax +
jnz loc_423C3C  +
jmp loc_423C66  +
mov [esp+24h+var_1C] offset a_bfd_generic_1 +
mov [esp+24h+var_20] 93Fh +
mov [esp+24h+var_24] offset a____Binutil_11 +
call sub_410560  +
xor eax eax +
jmp loc_423C6B  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+4] +
mov eax [eax+104h] +
mov [esp+14h+var_14] ebx +
call eax  +
test eax eax +
mov esi eax +
js loc_423D56  +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] ebx +
call sub_40E140  +
test eax eax +
mov [ebx+78h] eax +
jz loc_423D52  +
mov edx [ebx+4] +
mov edx [edx+108h] +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] ebx +
call edx  +
test eax eax +
js loc_423D56  +
mov [ebx+7Ch] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
test esi esi +
jz loc_423D2E  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_423DB0  +
mov edx [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_4126E0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_423DAA  +
mov dword ptr [edx+0Ch] 0 +
mov eax edx +
mov dword ptr [edx+10h] 0 +
mov dword ptr [edx+14h] 0 +
mov dword ptr [edx+18h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_14] 1Ch +
mov [esp+18h+var_18] ebx +
call sub_412630  +
test eax eax +
jnz loc_423D70  +
xor eax eax +
jmp loc_423DAA  +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_423E10  +
mov edx [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_423D60  +
test eax eax +
jz loc_423E24  +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+20h] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_14] 24h +
mov [esp+18h+var_18] ebx +
call sub_412630  +
test eax eax +
jnz loc_423DE0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esp+14h+arg_0] +
test byte ptr [esi+2Ch] 1 +
jnz loc_423E4D  +
mov eax [esi+9Ch] +
test eax eax +
jz loc_423E61  +
mov [esp+14h+var_10] 1DEh +
mov [esp+14h+var_14] offset a____Binutil_11 +
call sub_410530  +
mov eax [esp+14h+arg_C] +
mov dword ptr [ebx+1Ch] 0 +
mov dword ptr [ebx+20h] 0 +
mov dword ptr [ebx+28h] 0 +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_8] +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
call sub_412160  +
test eax eax +
jz loc_423EA3  +
mov dword ptr [ebx+24h] offset sub_423A30 +
or byte ptr [esi+2Ch] 1 +
mov [esi+9Ch] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_4123C0  +
test eax eax +
jz loc_423EE3  +
mov edx [esp+1Ch+arg_10] +
test edx edx +
jnz loc_423EEA  +
add esp 1Ch +
retn   +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_423EE7  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_C] +
mov ebx [esp+3Ch+arg_4] +
mov ecx [esp+3Ch+arg_0] +
mov edx [esp+3Ch+arg_8] +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_10] +
mov edi [ebx+28h] +
mov [esp+3Ch+var_10] eax +
mov eax [esp+3Ch+arg_14] +
test edi edi +
mov [esp+3Ch+var_18] eax +
jz loc_42401E  +
mov ecx [ecx+4] +
movzx eax byte ptr [edx] +
cmp al [ecx+18h] +
mov [esp+3Ch+var_1D] al +
jz loc_424010  +
cmp al [ebx+8] +
jz loc_424010  +
mov ebp edx +
mov [esp+3Ch+var_1D] 0 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_14] edx +
call sub_4123C0  +
mov edx [esp+3Ch+var_14] +
test eax eax +
jz loc_424018  +
mov [esp+3Ch+var_3C] ebp +
call strlen  +
add eax 9 +
mov [esp+3Ch+var_3C] eax +
call sub_412BD0  +
test eax eax +
mov esi eax +
jz loc_4240E0  +
movzx eax [esp+3Ch+var_1D] +
mov byte ptr [esi+1] 0 +
mov [esi] al +
mov [esp+3Ch+var_3C] esi +
call strlen  +
lea edx [esi+eax] +
lea eax [esi+eax+7] +
mov dword ptr [edx] 72775F5Fh +
mov dword ptr [edx+4] 5F7061h +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] eax +
call strcpy  +
mov edi [esp+3Ch+var_18] +
mov eax [ebx+1Ch] +
mov [esp+3Ch+var_30] 1 +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+var_1C] +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] eax +
call sub_423EB0  +
mov [esp+3Ch+var_3C] esi +
mov ebx eax +
call free  +
mov eax ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebp [edx+1] +
jmp loc_423F59  +
cmp byte ptr [ebp+0] 5Fh +
jz loc_424050  +
mov edi [esp+3Ch+var_18] +
mov eax [ebx+1Ch] +
mov [esp+3Ch+arg_4] edx +
mov [esp+3Ch+arg_10] edi +
mov edi [esp+3Ch+var_10] +
mov [esp+3Ch+arg_0] eax +
mov [esp+3Ch+arg_C] edi +
mov edi [esp+3Ch+var_1C] +
mov [esp+3Ch+arg_8] edi +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_423EB0  +
mov edi offset a__real_ +
mov ecx 7 +
mov esi ebp +
cmps   +
jnz loc_42401E  +
mov eax [ebx+28h] +
add ebp 7 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_14] edx +
call sub_4123C0  +
mov edx [esp+3Ch+var_14] +
test eax eax +
jz loc_42401E  +
mov [esp+3Ch+var_3C] ebp +
call strlen  +
add eax 2 +
mov [esp+3Ch+var_3C] eax +
call sub_412BD0  +
test eax eax +
mov esi eax +
jz loc_4240E0  +
movzx eax [esp+3Ch+var_1D] +
mov byte ptr [esi+1] 0 +
mov [esi] al +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] esi +
call strcat  +
mov ecx [esp+3Ch+var_18] +
mov eax [ebx+1Ch] +
mov [esp+3Ch+var_30] 1 +
mov [esp+3Ch+var_2C] ecx +
mov ecx [esp+3Ch+var_1C] +
mov [esp+3Ch+var_34] ecx +
jmp loc_423FF0  +
xor eax eax +
jmp loc_424008  +
***
mov edi ecx +
push esi  +
push ebx  +
sub esp 3Ch +
test byte ptr [ecx+15h] 1 +
mov [esp+44h+var_20] eax +
mov [esp+44h+var_24] edx +
jz loc_424360  +
mov eax [esp+44h+arg_0] +
mov ebp [eax+10h] +
mov eax [ebp+94h] +
mov [esp+44h+var_1C] eax +
mov eax [ebp+24h] +
test eax eax +
jz loc_424350  +
cmp [ebp+3Ch] edi +
jz loc_424140  +
mov [esp+44h+var_40] 0A32h +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_410530  +
mov eax [esp+44h+arg_0] +
mov eax [eax+8] +
cmp [ebp+38h] eax +
jz loc_424160  +
mov [esp+44h+var_40] 0A33h +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_410530  +
mov eax [esp+44h+arg_0] +
mov eax [eax+0Ch] +
cmp [ebp+24h] eax +
jz loc_424180  +
mov [esp+44h+var_40] 0A34h +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_410530  +
mov eax [esp+44h+var_24] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_4243C2  +
mov ecx [esp+44h+arg_4] +
test ecx ecx +
jnz loc_424207  +
mov eax [esp+44h+var_1C] +
mov ebx [eax+78h] +
test ebx ebx +
jz loc_4244D3  +
mov eax [esp+44h+var_1C] +
mov eax [eax+7Ch] +
lea eax [ebx+eax*4] +
cmp eax ebx +
jbe loc_424207  +
mov [esp+44h+var_18] edi +
mov edi ebx +
mov ebx eax +
jmp loc_4241DF  +
mov eax [esi+10h] +
cmp eax offset off_47D468 +
jz loc_4241EA  +
test byte ptr [eax+15h] 10h +
jnz loc_4241EA  +
cmp eax offset off_47D5B8 +
jz loc_4241EA  +
add edi 4 +
cmp ebx edi +
jbe loc_424203  +
mov esi [edi] +
test dword ptr [esi+0Ch] 3882h +
jz loc_4241C1  +
mov edx [esi+14h] +
test edx edx +
jz loc_424420  +
mov eax esi +
add edi 4 +
call sub_423A90  +
cmp ebx edi +
ja loc_4241DF  +
mov edi [esp+44h+var_18] +
mov eax [edi+14h] +
and eax 2100000h +
cmp eax 2000000h +
jnz loc_424290  +
mov edx [ebp+24h] +
test edx edx +
jz loc_424412  +
mov eax [esp+44h+var_20] +
test byte ptr [eax+2Bh] 10h +
jz loc_424380  +
mov ebx [edi+6Ch] +
test ebx ebx +
jz loc_4244F0  +
mov eax [ebp+38h] +
xor esi esi +
test eax eax +
jnz loc_4244B7  +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_4102D0  +
mov edx [ebp+24h] +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_30] edx +
imul esi eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] esi +
mov [esp+44h+var_44] eax +
call sub_40F990  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_424355  +
mov esi [ebp+24h] +
mov eax [ebp+28h] +
cmp esi eax +
cmovb esi eax +
mov [esp+44h+var_44] esi +
call sub_412BD0  +
test esi esi +
mov ebx eax +
jz loc_4242B1  +
test eax eax +
jz loc_4243B8  +
mov eax [esp+44h+var_1C] +
mov ecx [esp+44h+var_24] +
mov eax [eax+78h] +
mov [esp+44h+var_30] eax +
movzx eax byte ptr [ecx] +
mov [esp+44h+var_38] ebx +
mov [esp+44h+var_40] ecx +
and eax 3 +
cmp al 2 +
setz al  +
movzx eax al +
mov [esp+44h+var_34] eax +
mov eax [esp+44h+arg_0] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_410D80  +
test eax eax +
mov esi eax +
jz loc_424466  +
mov eax [esp+44h+var_20] +
mov ecx [ebp+38h] +
mov [esp+44h+var_44] eax +
mov [esp+44h+var_24] ecx +
call sub_4102D0  +
mov edx [ebp+24h] +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_3C] esi +
imul eax [esp+44h+var_24] +
mov [esp+44h+var_30] edx +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_38] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_40F990  +
test eax eax +
jz loc_424466  +
test ebx ebx +
jz loc_424350  +
mov [esp+44h+var_44] ebx +
call free  +
nop   +
lea esi [esi+0] +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+44h+var_40] 0A2Bh +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_410530  +
jmp loc_42410B  +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_30] 1 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_3C] offset unk_4972BF +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_44] eax +
call sub_40F990  +
test eax eax +
jnz loc_42422F  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+4Ch] +
test esi esi +
jz loc_424192  +
mov ebx [edi+48h] +
test ebx ebx +
jnz loc_424192  +
mov eax [esp+44h+var_20] +
mov eax [eax+4] +
mov edx [eax] +
mov eax [esp+44h+var_1C] +
mov eax [eax+4] +
mov eax [eax] +
mov [esp+44h+var_3C] edx +
mov [esp+44h+var_44] offset aAttemptToDoRel +
mov [esp+44h+var_40] eax +
call off_47D664  +
mov [esp+44h+var_44] 3 +
call sub_4105E0  +
xor eax eax +
jmp loc_424355  +
xor esi esi +
jmp loc_424293  +
cmp dword ptr [esi+10h] offset off_47D468 +
jz loc_424480  +
mov eax [esp+44h+var_24] +
mov edx [esi+4] +
mov eax [eax+1Ch] +
mov [esp+44h+var_40] edx +
mov [esp+44h+var_34] 1 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_3C] 0 +
mov [esp+44h+var_44] eax +
call sub_423EB0  +
mov edx eax +
test edx edx +
jz loc_4241D8  +
jmp loc_4241F5  +
test ebx ebx +
jz loc_4243B8  +
mov [esp+44h+var_44] ebx +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+4] +
mov [esp+44h+var_30] 1 +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_24] +
mov [esp+44h+var_40] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_423F00  +
mov edx eax +
jmp loc_424459  +
mov [esp+44h+var_40] 0A87h +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_410530  +
mov esi [ebp+38h] +
jmp loc_424247  +
call sub_423D00  +
test eax eax +
jz loc_4243B8  +
mov eax [esp+44h+var_1C] +
mov ebx [eax+78h] +
jmp loc_4241A9  +
mov [esp+44h+var_40] 0A86h +
mov [esp+44h+var_44] offset a____Binutil_11 +
call sub_410530  +
jmp loc_42423A  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_8] +
mov ecx [esp+2Ch+arg_4] +
mov edx [esp+2Ch+arg_0] +
mov ebx [ebp+4] +
mov ecx [ecx+4] +
movzx eax byte ptr [ebx] +
cmp al [ecx+18h] +
jz loc_424550  +
cmp al [edx+8] +
jz loc_424550  +
mov edi offset a__wrap_ +
mov ecx 7 +
mov esi ebx +
cmps   +
jz loc_424563  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov edi offset a__wrap_ +
mov ecx 7 +
mov esi ebx +
cmps   +
jnz loc_424546  +
mov eax [edx+28h] +
lea esi [ebx+7] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_10] edx +
call sub_4123C0  +
test eax eax +
jz loc_424546  +
mov eax [ebp+4] +
mov edx [esp+2Ch+var_10] +
cmp ebx eax +
jz loc_4245E5  +
movzx eax byte ptr [eax] +
movzx esi byte ptr [ebx+6] +
mov [ebx+6] al +
mov eax [edx+1Ch] +
lea edx [ebx+6] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call sub_423EB0  +
mov ebp eax +
mov eax esi +
test al al +
jz loc_424546  +
mov [ebx+6] al +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+1Ch] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call sub_423EB0  +
mov ebp eax +
jmp loc_424546  +
***
push esi  +
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esp+14h+arg_0] +
mov edx [esi+10h] +
test edx edx +
jz loc_4246D8  +
mov [esp+14h+var_10] 2A3h +
mov [esp+14h+var_14] offset a____Binutil_11 +
call sub_410530  +
mov eax [ebx+20h] +
test eax eax +
jz loc_4246E2  +
mov [eax+10h] esi +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_4246F2  +
mov [ebx+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [ebx+1Ch] esi +
mov [ebx+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+arg_0] +
lea esi [ebx+1Ch] +
mov edx esi +
nop   +
lea esi [esi+0] +
mov eax [edx] +
test eax eax +
jz loc_424737  +
test byte ptr [eax+0Ch] 0FDh +
jnz loc_424740  +
mov ecx [eax+10h] +
mov [edx] ecx +
mov dword ptr [eax+10h] 0 +
cmp eax [ebx+20h] +
jnz loc_424710  +
cmp edx esi +
jz loc_424745  +
sub edx 10h +
mov [ebx+20h] edx +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+10h] +
jmp loc_424710  +
mov dword ptr [ebx+20h] 0 +
jmp loc_424737  +
***
mov [esp+18h+var_18] 2Ch +
call sub_412BD0  +
test eax eax +
jz loc_424791  +
mov ebx eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_C] 24h +
mov [esp+18h+var_10] offset sub_423DD0 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call sub_423E30  +
test eax eax +
jz loc_424795  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
xor ebx ebx +
jmp loc_42478A  +
mov [esp+18h+var_18] ebx +
xor ebx ebx +
call free  +
jmp loc_42478A  +
***
jmp sub_4247B0  +
***
mov eax [esp+arg_0] +
mov edx [eax+78h] +
test edx edx +
jz loc_4247C1  +
mov eax 1 +
retn   +
jmp sub_423D00  +
***
mov eax [esp+4] +
movzx edx word ptr [eax+18h] +
mov dword ptr [eax+3Ch] offset off_47D510 +
and dx 0FC7Fh +
or dh 2 +
mov [eax+18h] dx +
mov edx [eax+1Ch] +
mov [eax+38h] edx +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+3Ch+arg_10] +
mov ebp [esp+3Ch+arg_0] +
test edx edx +
jz loc_425464  +
cmp [esp+3Ch+arg_10] offset off_47D5B8 +
jz loc_424BC0  +
test [esp+3Ch+arg_C] 2000h +
jnz loc_424BC0  +
test [esp+3Ch+arg_C] 1000h +
jnz loc_425320  +
test [esp+3Ch+arg_C] 800h +
jnz loc_425350  +
cmp [esp+3Ch+arg_10] offset off_47D468 +
jz loc_4254DA  +
test byte ptr [esp+3Ch+arg_C] 80h +
jnz loc_42547D  +
mov eax [esp+3Ch+arg_10] +
test byte ptr [eax+15h] 10h +
jz loc_425490  +
mov esi [esp+3Ch+arg_8] +
mov edi offset a__gnu_lto_slim +
mov ecx 0Fh +
cmps   +
mov esi 4 +
setnbe dl  +
setb al  +
xor edi edi +
cmp dl al +
jnz loc_424BFF  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax] +
mov [esp+3Ch+var_3C] offset aSPluginNeededT +
mov [esp+3Ch+var_38] eax +
call off_47D664  +
jmp loc_424BFF  +
mov eax [esp+3Ch+arg_1C] +
mov [esp+3Ch+var_28] 0 +
mov dword ptr [esp+0Ch] 1 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+8] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call sub_423F00  +
test eax eax +
mov edi eax +
jz loc_424DF0  +
mov esi 5 +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_4252C0  +
mov eax [esp+3Ch+arg_24] +
mov ebx [eax] +
test ebx ebx +
jz loc_4252C0  +
cmp byte ptr [ebp+0] 0 +
js loc_424C4A  +
mov eax [ebp+24h] +
test eax eax +
jz loc_424C85  +
mov ecx [esp+3Ch+arg_8] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] ecx +
call sub_4123C0  +
test eax eax +
jz loc_424C85  +
mov eax [ebp+18h] +
mov ecx [esp+3Ch+arg_C] +
mov eax [eax+28h] +
mov [esp+3Ch+var_24] ecx +
mov ecx [esp+3Ch+arg_14] +
mov [esp+8] edi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_28] ecx +
mov ecx [esp+3Ch+arg_10] +
mov [esp+3Ch+var_2C] ecx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+0Ch] ecx +
call eax  +
test eax eax +
jz loc_424DF0  +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_424C93  +
mov eax [esp+3Ch+arg_24] +
mov [eax] ebx +
movzx edx byte ptr [ebx+0Ch] +
movzx eax dl +
lea eax [eax+esi*8] +
mov eax ds:dword_4975C0[eax*4] +
cmp eax 14h +
ja loc_424F00  +
jmp ds:off_497344[eax*4]  +
cmp dl 5 +
jz loc_424CCD  +
mov [esp+3Ch+var_38] 609h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_410530  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_4] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] 0 +
mov dword ptr [esp+0Ch] 3 +
mov [esp+8] edi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
call eax  +
test eax eax +
jz loc_424DF0  +
movzx edx byte ptr [ebx+0Ch] +
mov byte ptr [ebx+0Ch] 3 +
mov eax [esp+3Ch+arg_10] +
mov [ebx+14h] eax +
mov eax [esp+3Ch+arg_14] +
and byte ptr [ebx+0Dh] 0FDh +
mov [ebx+18h] eax +
mov eax [esp+3Ch+arg_20] +
test eax eax +
jz loc_424F00  +
mov eax [esp+3Ch+arg_8] +
cmp byte ptr [eax] 5Fh +
jnz loc_424F00  +
add eax 1 +
mov esi eax +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_8] +
movzx ecx byte ptr [eax+1] +
cmp cl 5Fh +
jnz loc_424D56  +
mov eax esi +
add eax 1 +
movzx ecx byte ptr [eax] +
cmp cl 5Fh +
jz loc_424D47  +
mov [esp+3Ch+var_20] eax +
cmp cl 47h +
jnz loc_424F00  +
mov esi [esp+3Ch+var_20] +
mov ecx 7 +
mov edi offset aGlobal_ +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jnz loc_424F00  +
mov eax [esp+3Ch+var_20] +
cmp byte ptr [eax+8] 49h +
setz cl  +
cmp byte ptr [eax+8] 44h +
jnz loc_42549C  +
mov edi [esp+3Ch+var_20] +
movzx eax byte ptr [edi+9] +
cmp [edi+7] al +
jnz loc_424F00  +
cmp dl 4 +
jz loc_4254EB  +
mov eax [ebp+18h] +
movzx esi cl +
mov edi [esp+3Ch+arg_14] +
mov edx [ebx+4] +
mov eax [eax+10h] +
mov [esp+3Ch+var_28] edi +
mov edi [esp+3Ch+arg_10] +
mov [esp+8] edx +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_4] +
mov [esp+0Ch] edi +
call eax  +
test eax eax +
jnz loc_424F00  +
lea esi [esi+0] +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+10h] +
test eax eax +
jnz loc_424E12  +
mov eax [ebp+1Ch] +
cmp [eax+20h] ebx +
jz loc_424E12  +
mov [ebx+10h] ebx +
mov ebx [ebx+14h] +
jmp loc_424C93  +
cmp dl 5 +
jz loc_424E39  +
mov [esp+3Ch+var_38] 6C9h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_410530  +
mov eax [ebp+18h] +
mov esi [esp+3Ch+arg_4] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] 0 +
mov dword ptr [esp+0Ch] 6 +
mov [esp+8] esi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
call eax  +
test eax eax +
jz loc_424DF0  +
movzx eax byte ptr [edi+0Ch] +
cmp al 6 +
jz loc_425408  +
test al al +
jnz loc_424E8E  +
mov eax [esp+3Ch+arg_4] +
mov byte ptr [edi+0Ch] 1 +
mov [edi+14h] eax +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] eax +
call sub_4246B0  +
cmp byte ptr [ebx+0Ch] 0 +
jz loc_4252B0  +
mov byte ptr [ebx+0Ch] 6 +
mov edx 6 +
xor esi esi +
mov [ebx+14h] edi +
jmp loc_424C97  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_38] eax +
mov eax [ebx+14h] +
mov eax [eax+4] +
mov [esp+3Ch+var_3C] eax +
call strcmp  +
test eax eax +
jz loc_424F00  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+4] +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_10] +
mov [esp+0Ch] edi +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+8] edi +
call eax  +
test eax eax +
jz loc_424DF0  +
lea esi [esi+0] +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+1Ch] +
mov ecx [ebx+4] +
mov edx [eax+4] +
mov [esp+8] ecx +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] 0 +
call edx  +
test eax eax +
mov esi eax +
jz loc_424DF0  +
mov eax [ebx] +
mov edx [esp+3Ch+arg_1C] +
mov [esi] eax +
mov eax [ebx+4] +
test edx edx +
mov [esi+4] eax +
mov eax [ebx+8] +
mov [esi+8] eax +
mov eax [ebx+0Ch] +
mov [esi+0Ch] eax +
mov eax [ebx+10h] +
mov [esi+10h] eax +
mov eax [ebx+14h] +
mov [esi+14h] eax +
mov eax [ebx+18h] +
mov byte ptr [esi+0Ch] 7 +
mov [esi+14h] ebx +
mov [esi+18h] eax +
mov eax [esp+3Ch+arg_18] +
jz loc_4254B0  +
mov [esp+3Ch+var_3C] eax +
call strlen  +
lea edx [eax+1] +
mov [esp+3Ch+var_38] edx +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_20] edx +
mov [esp+3Ch+var_3C] eax +
call sub_412630  +
test eax eax +
mov edi eax +
jz loc_424DF0  +
mov edx [esp+3Ch+var_20] +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] edi +
mov [esp+8] edx +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov [esi+18h] edi +
mov [esp+8] esi +
mov [esp+3Ch+var_38] ebx +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_4125D0  +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_424F00  +
mov eax [esp+3Ch+arg_24] +
mov [eax] esi +
jmp loc_424F00  +
test byte ptr [ebp+1] 1 +
mov eax ebx +
jz loc_425330  +
test byte ptr [ebx+0Dh] 1 +
jz loc_424F10  +
mov ecx [ebp+18h] +
cmp dl 7 +
mov ecx [ecx+14h] +
jnz loc_42500D  +
mov ebx [ebx+14h] +
movzx edx byte ptr [ebx+0Ch] +
cmp dl 7 +
jz loc_425001  +
cmp dl 5 +
ja loc_425489  +
jmp ds:off_497398[edx*4]  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] edi +
mov dword ptr [esp+0Ch] 5 +
jmp loc_424EE0  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_424F00  +
mov eax [ebp+1Ch] +
cmp [eax+20h] ebx +
jz loc_424F00  +
mov [ebx+10h] ebx +
jmp loc_424F00  +
test dl dl +
jz loc_425450  +
mov byte ptr [ebx+0Ch] 5 +
mov [esp+3Ch+var_38] 8 +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_412630  +
test eax eax +
mov [ebx+14h] eax +
jz loc_424DF0  +
mov eax [esp+3Ch+arg_14] +
mov [ebx+18h] eax +
mov [esp+3Ch+var_3C] eax +
call near ptr dword_4135E0  +
mov esi [ebx+14h] +
mov edx 4 +
cmp eax 4 +
cmovbe edx eax +
cmp [esp+3Ch+arg_10] offset off_47D3C0 +
mov [esi] edx +
jz loc_4254B8  +
mov eax [esp+3Ch+arg_10] +
mov edi [esp+3Ch+arg_4] +
cmp [eax+94h] edi +
jz loc_425360  +
mov eax [eax] +
mov [esp+3Ch+var_38] eax +
mov eax edi +
mov [esp+3Ch+var_3C] eax +
call sub_40F550  +
mov [esi+4] eax +
mov eax [ebx+14h] +
mov eax [eax+4] +
or dword ptr [eax+14h] 1 +
and byte ptr [ebx+0Dh] 0FDh +
jmp loc_424F00  +
cmp eax 4 +
jnz loc_424D00  +
mov byte ptr [ebx+0Ch] 4 +
jmp loc_424D04  +
mov eax [esp+3Ch+arg_4] +
mov byte ptr [ebx+0Ch] 2 +
mov [ebx+14h] eax +
jmp loc_424F00  +
mov dword ptr [esp+8] offset a_bfd_generic_l +
mov [esp+3Ch+var_38] 5F3h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_410560  +
nop   +
mov eax [esp+3Ch+arg_4] +
mov byte ptr [ebx+0Ch] 1 +
mov [ebx+14h] eax +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_4246B0  +
jmp loc_424F00  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+0Ch] +
mov [esp+3Ch+var_28] edi +
mov edi [esp+3Ch+arg_10] +
mov dword ptr [esp+8] 225h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_4] +
mov [esp+0Ch] edi +
call eax  +
test eax eax +
jnz loc_424F00  +
jmp loc_424DF0  +
mov eax [ebx+18h] +
test eax eax +
jz loc_424E12  +
mov ecx [esp+3Ch+arg_4] +
test byte ptr [ecx+2Ah] 20h +
jnz loc_424E12  +
mov ecx [ebx+4] +
mov edx [ebp+18h] +
mov [esp+3Ch+var_20] ecx +
mov ecx [esp+3Ch+arg_4] +
mov edx [edx+14h] +
mov [esp+3Ch+var_28] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+0Ch] ecx +
mov ecx [esp+3Ch+var_20] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] ebp +
mov [esp+8] ecx +
call edx  +
test eax eax +
jz loc_424DF0  +
mov dword ptr [ebx+18h] 0 +
jmp loc_424E12  +
cmp dl 5 +
jz loc_42520C  +
mov [esp+3Ch+var_38] 68Ch +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_410530  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_4] +
mov dword ptr [esp+0Ch] 5 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+8] edi +
call eax  +
test eax eax +
jz loc_424DF0  +
mov eax [ebx+18h] +
cmp [esp+3Ch+arg_14] eax +
jbe loc_424F00  +
mov eax [esp+3Ch+arg_14] +
mov [ebx+18h] eax +
mov [esp+3Ch+var_3C] eax +
call near ptr dword_4135E0  +
mov esi [ebx+14h] +
mov edx 4 +
cmp eax 4 +
cmovbe edx eax +
cmp [esp+3Ch+arg_10] offset off_47D3C0 +
mov [esi] edx +
jz loc_4254C9  +
mov eax [esp+3Ch+arg_10] +
mov edi [esp+3Ch+arg_4] +
cmp [eax+94h] edi +
jz loc_425370  +
mov eax [eax] +
mov [esp+3Ch+var_38] eax +
mov eax edi +
mov [esp+3Ch+var_3C] eax +
call sub_40F550  +
mov [esi+4] eax +
mov eax [ebx+14h] +
mov eax [eax+4] +
or dword ptr [eax+14h] 1 +
jmp loc_424F00  +
mov byte ptr [ebx+0Ch] 6 +
mov [ebx+14h] edi +
jmp loc_424F00  +
cmp esi 1 +
jbe loc_425380  +
mov ecx [esp+3Ch+arg_1C] +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_2C] 0 +
mov dword ptr [esp+8] 1 +
mov [esp+0Ch] ecx +
mov ecx [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] ecx +
call sub_423EB0  +
mov ebx eax +
test ebx ebx +
jnz loc_424C19  +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_424DF0  +
mov eax [esp+3Ch+arg_24] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_424DF2  +
xor edi edi +
mov esi 6 +
jmp loc_424BFF  +
mov ecx [ebx+10h] +
test ecx ecx +
jnz loc_424FF6  +
mov ecx [ebp+1Ch] +
cmp [ecx+20h] ebx +
jnz loc_424FEC  +
jmp loc_424FF6  +
xor edi edi +
mov esi 7 +
jmp loc_424BFF  +
mov eax [esp+3Ch+arg_10] +
mov [esi+4] eax +
jmp loc_4250E8  +
mov eax [esp+3Ch+arg_10] +
mov [esi+4] eax +
jmp loc_424F00  +
mov eax [esp+3Ch+arg_1C] +
mov [esp+3Ch+var_28] 0 +
mov dword ptr [esp+0Ch] 1 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+8] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call sub_423F00  +
mov ebx eax +
jmp loc_4252F6  +
mov edx [ebx+14h] +
mov edx [edx+4] +
mov edx [edx+94h] +
mov eax [eax+4] +
mov [esp+3Ch+var_28] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+0Ch] edx +
mov [esp+8] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_38] eax +
call ecx  +
test eax eax +
jnz loc_424F00  +
jmp loc_424DF0  +
mov edx [ebx+14h] +
mov edx [edx+94h] +
jmp loc_4253C3  +
mov edx [ebx+14h] +
jmp loc_4253C3  +
cmp [edi+14h] ebx +
jnz loc_424E8E  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] offset aBIndirectSymbo +
mov [esp+0Ch] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+8] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
call off_47D664  +
mov [esp+3Ch+var_3C] 5 +
call sub_4105E0  +
xor eax eax +
jmp loc_424DF2  +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_4246B0  +
jmp loc_425068  +
mov [esp+3Ch+var_38] 5A8h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_410530  +
jmp loc_424B35  +
xor edi edi +
mov esi 3 +
jmp loc_424BFF  +
xor edx edx +
jmp loc_4253C3  +
xor edi edi +
mov esi 2 +
jmp loc_424BFF  +
test cl cl +
jnz loc_424D96  +
jmp loc_424F00  +
mov [esi+18h] eax +
jmp loc_424FB6  +
mov [esp+3Ch+var_38] offset aCommon +
mov eax [esp+3Ch+arg_4] +
jmp loc_4250D3  +
mov [esp+3Ch+var_38] offset aCommon +
mov eax [esp+3Ch+arg_4] +
jmp loc_425291  +
mov esi [esp+3Ch+arg_C] +
xor edi edi +
shr esi 7 +
and esi 1 +
jmp loc_424BFF  +
mov dword ptr [esp+8] offset a_bfd_generic_l +
mov [esp+3Ch+var_38] 643h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_410560  +
mov esi esi +
lea edi [edi+0] +
push ebp  +
mov ebp edx +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi [eax+78h] +
mov [esp+0A8h+var_74] eax +
mov [esp+0A8h+var_6C] ecx +
test esi esi +
jz loc_4256C0  +
mov eax [esp+0A8h+var_74] +
mov eax [eax+7Ch] +
lea eax [esi+eax*4] +
cmp eax esi +
mov [esp+0A8h+var_78] eax +
jbe loc_42563D  +
mov [esp+0A8h+var_70] ebp +
jmp loc_425573  +
cmp edx offset off_47D468 +
jz loc_4256FA  +
test byte ptr [edx+15h] 10h +
jnz loc_425582  +
cmp edx offset off_47D5B8 +
jz loc_42566B  +
add esi 4 +
cmp [esp+0A8h+var_78] esi +
jbe loc_42563D  +
mov ebx [esi] +
mov eax [ebx+0Ch] +
mov edx [ebx+10h] +
test eax 3882h +
jz loc_425548  +
mov edi [ebx+4] +
test ah 20h +
mov [esp+0A8h+var_7C] edi +
jnz loc_425672  +
cmp edx offset off_47D5B8 +
jz loc_425672  +
test ah 10h +
mov edi [esp+0A8h+var_7C] +
jz loc_4255C0  +
lea edi [esi+4] +
mov ecx edi +
mov edi [esp+0A8h+var_7C] +
cmp [esp+0A8h+var_78] ecx +
jbe loc_4255C0  +
mov esi [esi+4] +
mov edi [esi+4] +
mov esi ecx +
nop   +
lea ecx [esp+0A8h+var_5C] +
mov ebp [ebx+8] +
mov [esp+0A8h+var_84] ecx +
mov ecx [esp+0A8h+var_6C] +
mov [esp+0A8h+var_9C] eax +
mov eax [esp+0A8h+var_74] +
mov [esp+0A8h+var_8C] 0 +
mov [esp+0A8h+var_94] ebp +
mov [esp+0A8h+var_88] ecx +
mov ecx [esp+0A8h+var_7C] +
mov [esp+0A8h+var_A4] eax +
mov eax [esp+0A8h+var_70] +
mov [esp+0A8h+var_98] edx +
mov [esp+0A8h+var_A0] edi +
mov [esp+0A8h+var_90] ecx +
mov [esp+0A8h+var_A8] eax +
mov [esp+0A8h+var_5C] 0 +
call sub_424B10  +
test eax eax +
jz loc_425642  +
mov edx [ebx+0Ch] +
mov eax [esp+0A8h+var_5C] +
test dh 8 +
jz loc_425650  +
test eax eax +
jz loc_425629  +
cmp byte ptr [eax+0Ch] 0 +
jnz loc_425650  +
add esi 4 +
cmp [esp+0A8h+var_78] esi +
mov dword ptr [ebx+14h] 0 +
ja loc_425573  +
mov eax 1 +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+0A8h+var_70] +
mov ecx [edi+30h] +
mov edi [esp+0A8h+var_74] +
mov edi [edi+4] +
cmp [ecx+4] edi +
jz loc_425694  +
mov [ebx+14h] eax +
jmp loc_425566  +
mov edi [ebx+4] +
mov [esp+0A8h+var_7C] edi +
lea ecx [esi+4] +
cmp [esp+0A8h+var_78] ecx +
jbe loc_42559E  +
mov esi [esi+4] +
mov edi [esp+0A8h+var_7C] +
mov esi [esi+4] +
mov [esp+0A8h+var_7C] esi +
mov esi ecx +
jmp loc_4255C0  +
mov edi [eax+20h] +
mov ecx [ebx+10h] +
test edi edi +
jz loc_4256E0  +
cmp ecx offset off_47D468 +
jz loc_425663  +
test byte ptr [ecx+15h] 10h +
jnz loc_4256B1  +
mov [eax+20h] ebx +
jmp loc_425663  +
cmp dword ptr [edi+10h] offset off_47D468 +
jnz loc_425663  +
mov [eax+20h] ebx +
jmp loc_4256EF  +
call sub_423D00  +
test eax eax +
jz loc_425642  +
mov eax [esp+0A8h+var_74] +
mov esi [eax+78h] +
jmp loc_42552C  +
mov ecx [ecx+14h] +
mov [eax+20h] ebx +
and ch 10h +
jz loc_425663  +
or dh 2 +
mov [ebx+0Ch] edx +
jmp loc_425663  +
mov edi [ebx+4] +
test ah 20h +
mov [esp+0A8h+var_7C] edi +
jnz loc_425672  +
jmp loc_42559E  +
push ebx  +
sub esp 18h +
movzx ebx byte ptr [eax+28h] +
and ebx 7 +
cmp ebx 1 +
jz loc_425760  +
cmp ebx 2 +
jz loc_425738  +
mov dword ptr [esp] 3 +
call sub_4105E0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
test ecx ecx +
mov ebx offset loc_4259A0 +
mov ecx offset loc_425980 +
cmovz ebx ecx +
mov [esp+8] ebx +
mov [esp+4] edx +
mov [esp] eax +
call sub_424810  +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
pop ebx  +
jmp loc_425510  +
mov edx [esp+8] +
xor ecx ecx +
mov eax [esp+4] +
jmp loc_425710  +
mov edx [esp+8] +
mov ecx 1 +
mov eax [esp+4] +
jmp loc_425710  +
push ebp  +
mov ebp edx +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov [esp+2Ch] eax +
mov eax ebx +
mov ebx [ebx+78h] +
mov [esp+28h] ecx +
mov dword ptr [ecx] 0 +
test ebx ebx +
jz loc_4258FD  +
mov eax [eax+7Ch] +
lea eax [ebx+eax*4] +
cmp eax ebx +
mov edi eax +
ja loc_4257E0  +
jmp loc_4258F0  +
mov eax [esi+8] +
add eax [ecx+1Ch] +
cmp eax [edx+18h] +
jbe loc_4257D5  +
mov [edx+18h] eax +
add ebx 4 +
cmp edi ebx +
jbe loc_4258F0  +
mov esi [ebx] +
mov eax [esi+10h] +
test byte ptr [eax+15h] 10h +
jnz loc_4257F4  +
test dword ptr [esi+0Ch] 2082h +
jz loc_4257D5  +
mov edx [esi+4] +
mov eax [ebp+1Ch] +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] edx +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_423EB0  +
test eax eax +
mov edx eax +
jz loc_4257D5  +
movzx eax byte ptr [eax+0Ch] +
mov ecx eax +
and ecx 0FFFFFFFBh +
cmp cl 1 +
jnz loc_4257D5  +
mov ecx [esi+10h] +
test byte ptr [ecx+15h] 10h +
jz loc_425910  +
cmp al 1 +
jnz loc_4257C7  +
mov ecx [edx+14h] +
test ecx ecx +
jz loc_425910  +
mov byte ptr [edx+0Ch] 5 +
mov dword ptr [esp+4] 8 +
mov eax [ebp+1Ch] +
mov [esp+20h] edx +
mov [esp+24h] ecx +
mov [esp] eax +
call sub_412630  +
mov edx [esp+20h] +
test eax eax +
mov [edx+14h] eax +
jz loc_425906  +
mov ecx [esi+10h] +
mov eax [esi+8] +
add eax [ecx+1Ch] +
mov [edx+18h] eax +
mov [esp] eax +
call near ptr dword_4135E0  +
mov edx [esp+20h] +
mov ecx [edx+14h] +
cmp eax 4 +
mov [esp+20h] ecx +
mov ecx 4 +
cmova eax ecx +
mov ecx [esp+20h] +
mov [ecx] eax +
mov eax [esi+10h] +
mov ecx [esp+24h] +
mov [esp+24h] edx +
cmp eax offset off_47D3C0 +
jz loc_425950  +
mov eax [eax] +
mov [esp] ecx +
mov [esp+4] eax +
call sub_40F550  +
mov esi [esp+20h] +
mov edx [esp+24h] +
mov [esi+4] eax +
mov eax [edx+14h] +
add ebx 4 +
mov eax [eax+4] +
or dword ptr [eax+14h] 1 +
cmp edi ebx +
ja loc_4257E0  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_423D00  +
test eax eax +
jnz loc_425970  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+28h] +
lea ecx [esp+2Ch] +
mov edx [esi+4] +
mov dword ptr [eax] 1 +
mov eax [ebp+18h] +
mov eax [eax] +
mov [esp+8] edx +
mov edx [esp+2Ch] +
mov [esp+0Ch] ecx +
mov [esp] ebp +
mov [esp+4] edx +
call eax  +
test eax eax +
jz loc_425906  +
mov ecx [esp+50h] +
mov edx ebp +
mov eax [esp+2Ch] +
call loc_425510  +
jmp loc_4258F5  +
mov [esp+0A8h+var_A4] offset aCommon +
mov [esp] ecx +
call sub_40F550  +
mov edx [esp+20h] +
mov [edx+4] eax +
mov edx [esp+24h] +
jmp loc_4258DB  +
mov eax [esp+2Ch] +
mov ebx [eax+78h] +
jmp loc_4257B6  +
mov eax [esp+4] +
mov ecx [esp+14h] +
mov edx [esp+8] +
mov dword ptr [esp+4] 0 +
jmp loc_425790  +
mov eax [esp+4] +
mov ecx [esp+14h] +
mov edx [esp+8] +
mov dword ptr [esp+4] 1 +
jmp loc_425790  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+54h] +
mov ebp [esp+58h] +
mov eax [eax+78h] +
test eax eax +
jz loc_425DE0  +
mov eax [ebp+3Ch] +
test eax eax +
jz loc_4259F0  +
mov edi [esp+54h] +
mov ebx [edi+64h] +
test ebx ebx +
jnz loc_425B20  +
mov eax [esp+54h] +
mov edi [eax+78h] +
mov eax [eax+7Ch] +
lea eax [edi+eax*4] +
cmp edi eax +
mov [esp+20h] eax +
jnb loc_425DD0  +
mov eax [esp+50h] +
add eax 7Ch +
mov [esp+24h] eax +
mov eax [esp+50h] +
add eax 78h +
mov [esp+28h] eax +
jmp loc_425AD2  +
mov edx [ebx+10h] +
cmp edx offset off_47D468 +
jz loc_425AE2  +
test byte ptr [edx+15h] 10h +
jnz loc_425AE2  +
xor esi esi +
cmp edx offset off_47D5B8 +
jz loc_425AE2  +
movzx eax byte ptr [ebp+1] +
and eax 18h +
cmp al 18h +
jz loc_425A76  +
cmp al 10h +
jz loc_425D48  +
mov edx [ebx+0Ch] +
test dl 82h +
jz loc_425C20  +
mov eax [esp+54h] +
cmp [ebx] eax +
jz loc_425DC0  +
mov eax [ebx+10h] +
xor ecx ecx +
cmp eax offset off_47D510 +
jz loc_425A9A  +
mov eax [eax+3Ch] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_425D25  +
cmp eax [edx+10h] +
setnz al  +
test al al +
jnz loc_425AC5  +
test ecx ecx +
jz loc_425AC5  +
mov ecx [esp+0A8h+var_4C] +
mov edx [esp+0A8h+var_84] +
mov eax [esp+0A8h+var_80] +
mov [esp+0A8h+var_A8] ebx +
call sub_423B90  +
test eax eax +
jz loc_425B79  +
test esi esi +
jz loc_425AC5  +
mov dword ptr [esi+1Ch] 1 +
add edi 4 +
cmp [esp+0A8h+var_88] edi +
jbe loc_425DD0  +
mov ebx [edi] +
mov eax [ebx+0Ch] +
test eax 3882h +
jz loc_425A24  +
mov esi [ebx+14h] +
test esi esi +
jz loc_425CD6  +
mov ecx [esp+54h] +
mov eax [ebp+30h] +
mov ecx [ecx+4] +
cmp [eax+4] ecx +
jz loc_425D34  +
cmp byte ptr [esi+0Ch] 6 +
ja loc_425C00  +
movzx eax byte ptr [esi+0Ch] +
jmp ds:off_4973B0[eax*4]  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_4259F0  +
cmp eax [ebx+3Ch] +
jnz loc_425B15  +
mov eax [esp+54h] +
mov edi [esp+54h] +
mov eax [eax+4] +
mov eax [eax+10Ch] +
mov [esp] edi +
call eax  +
test eax eax +
mov ecx eax +
jz loc_425B79  +
mov eax [esp+54h] +
mov eax [eax] +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+0Ch] 4001h +
mov [ecx+10h] ebx +
mov [ecx+4] eax +
mov eax [esp+50h] +
mov [esp] ecx +
mov ecx [esp+5Ch] +
lea edx [eax+7Ch] +
add eax 78h +
call sub_423B90  +
test eax eax +
jnz loc_4259F0  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esi+14h] +
mov eax [ebx+0Ch] +
and eax 0FFFFF77Fh +
or eax 2 +
mov [ebx+0Ch] eax +
mov eax [esi+18h] +
mov [ebx+8] eax +
mov eax [esi+14h] +
mov [ebx+10h] eax +
jmp loc_425A4B  +
or dword ptr [ebx+0Ch] 80h +
jmp loc_425A4B  +
mov eax [esi+18h] +
or dword ptr [ebx+0Ch] 2 +
mov [ebx+8] eax +
mov eax [ebx+10h] +
test byte ptr [eax+15h] 10h +
jnz loc_425A4B  +
cmp eax offset off_47D468 +
jz loc_425BE3  +
mov [esp+3Ch+var_38] 86Ah +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_410530  +
mov dword ptr [ebx+10h] offset off_47D3C0 +
jmp loc_425A4B  +
mov eax [ebx+0Ch] +
and ah 0F7h +
or al 80h +
jmp loc_425B91  +
mov dword ptr [esp+8] offset a_bfd_generic_0 +
mov [esp+3Ch+var_38] 850h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_410560  +
lea esi [esi+0] +
mov eax [ebx+10h] +
cmp eax offset off_47D5B8 +
jz loc_425DA0  +
test dl 4 +
jz loc_425C41  +
xor ecx ecx +
test byte ptr [ebp+1] 18h +
setz cl  +
jmp loc_425A7B  +
cmp eax offset off_47D468 +
jz loc_425DA0  +
mov ecx [eax+14h] +
mov [esp+3Ch+var_10] ecx +
and ch 10h +
jnz loc_425D96  +
test dl 1 +
jz loc_425DA7  +
xor ecx ecx +
and dh 10h +
jnz loc_425A7B  +
movzx edx byte ptr [ebp+1] +
mov cl 1 +
shr dl 5 +
and edx 3 +
cmp edx 1 +
jz loc_425A7B  +
cmp edx 2 +
jz loc_425CB7  +
xor cl cl +
test edx edx +
jnz loc_425A7B  +
movzx edx byte ptr [ebp+0] +
mov ecx 1 +
and edx 3 +
cmp dl 2 +
jz loc_425A7B  +
test [esp+3Ch+var_10] 800000h +
jz loc_425A7B  +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_41DB50  +
xor ecx ecx +
test eax eax +
mov eax [ebx+10h] +
setz cl  +
jmp loc_425A7B  +
test ah 8 +
jnz loc_425A4B  +
cmp dword ptr [ebx+10h] offset off_47D468 +
mov eax [ebx+4] +
jz loc_425DF6  +
mov [esp+0A8h+var_98] 1 +
mov [esp+0A8h+var_9C] 0 +
mov [esp+0A8h+var_A0] 0 +
mov [esp+0A8h+var_A4] eax +
mov eax [ebp+1Ch] +
mov [esp+0A8h+var_A8] eax +
call sub_423EB0  +
mov esi eax +
test esi esi +
jz loc_425A4B  +
jmp loc_425AED  +
mov edx [esp+0A8h+var_58] +
cmp eax [edx+68h] +
setnz al  +
jmp loc_425A96  +
mov eax [esi+20h] +
test eax eax +
jz loc_425B00  +
mov [edi] eax +
mov ebx eax +
jmp loc_425B00  +
mov edx [ebx+4] +
mov eax [ebp+20h] +
mov [esp+0A8h+var_9C] 0 +
mov [esp+0A8h+var_A0] 0 +
mov [esp+0A8h+var_A4] edx +
mov [esp+0A8h+var_A8] eax +
call sub_4123C0  +
test eax eax +
jnz loc_425A5E  +
jmp loc_425A76  +
test edx edx +
lea esi [esi+0] +
jnz loc_425E29  +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jz loc_425E29  +
xor ecx ecx +
jmp loc_425A7B  +
xor ecx ecx +
jmp loc_425A82  +
test dh 8 +
jz loc_425D77  +
movzx edx byte ptr [ebp+1] +
xor ecx ecx +
and edx 18h +
cmp dl 18h +
setnz cl  +
jmp loc_425A7B  +
mov ecx edx +
mov eax [ebx+10h] +
shr ecx 0Ah +
and ecx 1 +
jmp loc_425A7B  +
mov eax 1 +
jmp loc_425B7B  +
mov eax [esp+54h] +
call sub_423D00  +
test eax eax +
jz loc_425B79  +
jmp loc_4259DA  +
mov [esp+0A8h+var_A0] eax +
mov eax [esp+0A8h+var_58] +
mov [esp+0A8h+var_94] 1 +
mov [esp+0A8h+var_98] 0 +
mov [esp+0A8h+var_9C] 0 +
mov [esp+0A8h+var_A4] ebp +
mov [esp+0A8h+var_A8] eax +
call sub_423F00  +
mov esi eax +
jmp loc_425D18  +
mov [esp+0A8h+var_A0] offset a_bfd_generic_0 +
mov [esp+0A8h+var_A4] 8C3h +
mov [esp+0A8h+var_A8] offset a____Binutil_11 +
call sub_410560  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+0F4h+var_A0] +
mov esi [esp+0F4h+var_9C] +
mov ebx [esp+0F4h+var_98] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jnz loc_426124  +
mov edi [esi+48h] +
test edi edi +
jz loc_426108  +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F0] 10h +
mov [esp+0F4h+var_F4] eax +
call sub_40E140  +
test eax eax +
mov edi eax +
jz loc_425F4C  +
mov eax [ebx+8] +
mov [edi+4] eax +
mov eax [ebx+10h] +
mov eax [eax] +
mov [esp+0F4h+var_F0] eax +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F4] eax +
call sub_4234D0  +
test eax eax +
mov [edi+0Ch] eax +
jz loc_426010  +
cmp dword ptr [ebx+4] 3 +
jz loc_425F56  +
mov eax [ebx+10h] +
mov eax [eax+4] +
mov [esp+0F4h+var_E0] 1 +
mov [esp+0F4h+var_E4] 0 +
mov [esp+0F4h+var_E8] 0 +
mov [esp+0F4h+var_EC] eax +
mov eax [esp+0F4h+var_A0] +
mov [esp+0F4h+var_F0] eax +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F4] eax +
call sub_423F00  +
test eax eax +
jz loc_425F0F  +
mov ecx [eax+1Ch] +
test ecx ecx +
jnz loc_425F90  +
mov eax [esp+0F4h+var_A0] +
mov edx [ebx+10h] +
mov ecx [esp+0F4h+var_A0] +
mov eax [eax+18h] +
mov edx [edx+4] +
mov eax [eax+24h] +
mov [esp+0F4h+var_E4] 0 +
mov [esp+0F4h+var_E8] 0 +
mov [esp+0F4h+var_EC] 0 +
mov [esp+0F4h+var_F0] edx +
mov [esp+0F4h+var_F4] ecx +
call eax  +
test eax eax +
jnz loc_426010  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx+10h] +
mov edx [eax+24h] +
mov ebp [ebp+4] +
test edx edx +
mov ebp [ebp+9Ch] +
mov [edi] ebp +
jnz loc_425F9F  +
mov eax [ebx+10h] +
mov eax [eax+8] +
mov [edi+8] eax +
mov eax [esi+4Ch] +
mov ecx [esi+48h] +
mov [ecx+eax*4] edi +
add eax 1 +
mov [esi+4Ch] eax +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add eax 20h +
mov [edi] eax +
mov eax [edi+0Ch] +
mov edx [eax+24h] +
test edx edx +
jz loc_425F6B  +
mov [esp+0F4h+var_F4] eax +
call sub_422630  +
mov [esp+0F4h+var_F4] eax +
mov ebp eax +
call sub_412D60  +
test ebp ebp +
mov edx eax +
jz loc_425FBB  +
test eax eax +
jz loc_425F4C  +
mov eax [ebx+10h] +
mov ecx [edi+0Ch] +
mov [esp+0F4h+var_D0] edx +
mov eax [eax+8] +
mov [esp+0F4h+var_E8] edx +
mov [esp+0F4h+var_F4] ecx +
mov [esp+0F4h+var_EC] eax +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F0] eax +
call sub_422F90  +
mov edx [esp+0F4h+var_D0] +
test eax eax +
jz loc_426021  +
cmp eax 1 +
jz loc_426081  +
mov [esp+0F4h+var_EC] offset a_bfd_generic_r +
mov [esp+0F4h+var_F0] 990h +
mov [esp+0F4h+var_F4] offset a____Binutil_11 +
call sub_410560  +
lea esi [esi+0] +
mov [esp+0F4h+var_F4] 11h +
call sub_4105E0  +
jmp loc_425F4C  +
mov eax [esp+0F4h+var_A4] +
mov ebx [ebx+8] +
mov [esp+0F4h+var_D0] edx +
mov [esp+0F4h+var_F4] eax +
call sub_4102D0  +
mov edx [esp+0F4h+var_D0] +
mov [esp+0F4h+var_E0] ebp +
mov [esp+0F4h+var_E4] 0 +
mov [esp+0F4h+var_F0] esi +
mov [esp+0F4h+var_EC] edx +
imul eax ebx +
mov [esp+0F4h+var_E8] eax +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F4] eax +
call sub_40F990  +
mov edx [esp+0F4h+var_D0] +
mov [esp+0F4h+var_F4] edx +
mov ebx eax +
call free  +
test ebx ebx +
jz loc_425F4C  +
mov dword ptr [edi+8] 0 +
jmp loc_425F74  +
mov eax [esp+0F4h+var_A0] +
cmp dword ptr [ebx+4] 3 +
mov eax [eax+18h] +
mov eax [eax+1Ch] +
mov [esp+0F4h+var_D0] eax +
mov eax [ebx+10h] +
mov ecx [eax+8] +
mov [esp+0F4h+var_CC] ecx +
mov ecx [edi+0Ch] +
mov eax [eax+4] +
mov ecx [ecx+20h] +
jz loc_426104  +
mov [esp+0F4h+var_EC] eax +
mov eax [esp+0F4h+var_A0] +
mov [esp+0F4h+var_C8] edx +
mov edx [esp+0F4h+var_CC] +
mov [esp+0F4h+var_D8] 0 +
mov [esp+0F4h+var_DC] 0 +
mov [esp+0F4h+var_F4] eax +
mov eax [esp+0F4h+var_D0] +
mov [esp+0F4h+var_E4] edx +
mov [esp+0F4h+var_E0] 0 +
mov [esp+0F4h+var_E8] ecx +
mov [esp+0F4h+var_F0] 0 +
call eax  +
mov edx [esp+0F4h+var_C8] +
test eax eax +
jnz loc_426021  +
mov [esp+0F4h+var_F4] edx +
call free  +
xor eax eax +
jmp loc_425F4E  +
mov eax [eax] +
jmp loc_4260A8  +
mov [esp+0F4h+var_EC] offset a_bfd_generic_r +
mov [esp+0F4h+var_F0] 952h +
mov [esp+0F4h+var_F4] offset a____Binutil_11 +
call sub_410560  +
mov [esp+0F4h+var_EC] offset a_bfd_generic_r +
mov [esp+0F4h+var_F0] 950h +
mov [esp+0F4h+var_F4] offset a____Binutil_11 +
call sub_410560  +
push ebx  +
sub esp 18h +
mov eax [esp+110h+var_F0] +
mov [esp+110h+var_10C] 18h +
mov ebx [esp+110h+var_EC] +
mov [esp+110h+var_110] eax +
call sub_40E220  +
test eax eax +
jz loc_426188  +
mov dword ptr [eax+4] 0 +
mov edx [ebx+0A4h] +
test edx edx +
jz loc_426180  +
mov [edx] eax +
mov [ebx+0A4h] eax +
add esp 18h +
pop ebx  +
retn   +
mov [ebx+0A0h] eax +
jmp loc_426173  +
xor eax eax +
jmp loc_426179  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_C] +
mov esi [esp+3Ch+arg_0] +
mov edx [esp+3Ch+arg_4] +
mov edi [esp+3Ch+arg_8] +
mov eax [ebx+4] +
cmp eax 1 +
jz loc_426260  +
cmp eax 2 +
jnz loc_426243  +
test byte ptr [edi+15h] 1 +
jz loc_4262C8  +
mov edx [ebx+0Ch] +
mov eax 1 +
test edx edx +
jz loc_42623B  +
mov ebp [ebx+10h] +
mov eax [ebx+14h] +
test ebp ebp +
mov [esp+3Ch+var_1C] eax +
jz loc_426280  +
cmp edx ebp +
ja loc_4262E1  +
mov ebp [ebx+8] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_18] edx +
call sub_4102D0  +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_28] edx +
imul eax ebp +
mov ebp [esp+3Ch+var_1C] +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_34] ebp +
call sub_40F990  +
cmp ebp [ebx+14h] +
jz loc_42623B  +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_1C] eax +
call free  +
mov eax [esp+3Ch+var_1C] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_34] offset a_bfd_default_l +
mov [esp+3Ch+var_38] 9D5h +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_410560  +
nop   +
mov [esp+3Ch+arg_0] ebx +
mov ecx edi +
mov eax esi +
mov [esp+3Ch+arg_4] 0 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4240F0  +
mov eax [esi+84h] +
mov [esp+3Ch+var_18] edx +
mov ecx [eax+2Ch] +
mov eax [edi+14h] +
shr eax 4 +
and eax 1 +
mov [esp+3Ch+var_34] eax +
mov eax [esi+4] +
mov eax [eax+8] +
mov [esp+3Ch+var_3C] edx +
test eax eax +
setz al  +
movzx eax al +
mov [esp+3Ch+var_38] eax +
call ecx  +
mov edx [esp+3Ch+var_18] +
test eax eax +
mov [esp+3Ch+var_1C] eax +
jnz loc_4261EC  +
xor eax eax +
jmp loc_42623B  +
mov [esp+3Ch+var_38] 9ECh +
mov [esp+3Ch+var_3C] offset a____Binutil_11 +
call sub_410530  +
jmp loc_4261C6  +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_18] edx +
call sub_412BD0  +
test eax eax +
mov ecx eax +
mov [esp+3Ch+var_1C] eax +
jz loc_4262C1  +
mov edx [esp+3Ch+var_18] +
mov eax edx +
sub eax ebp +
cmp ebp 1 +
mov [esp+3Ch+var_18] eax +
jz loc_426376  +
mov [esp+3Ch+var_14] esi +
mov esi [esp+3Ch+var_18] +
mov [esp+3Ch+var_10] edi +
mov edi ebx +
mov ebx ecx +
jmp loc_426322  +
mov esi eax +
mov eax [edi+14h] +
mov [esp+3Ch+var_3C] ebx +
add ebx ebp +
mov [esp+3Ch+var_34] ebp +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax esi +
sub eax ebp +
cmp ebp esi +
jbe loc_426320  +
mov eax esi +
mov ecx ebx +
test eax eax +
mov ebx edi +
mov edi [esp+3Ch+var_10] +
mov [esp+3Ch+var_18] esi +
mov esi [esp+3Ch+var_14] +
jnz loc_42635D  +
mov edx [ebx+0Ch] +
jmp loc_4261EC  +
mov eax [ebx+14h] +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call memcpy  +
jmp loc_426355  +
mov [esp+3Ch+var_34] edx +
mov eax [ebx+14h] +
mov [esp+3Ch+var_18] edx +
movzx eax byte ptr [eax] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_38] eax +
call memset  +
mov edx [esp+3Ch+var_18] +
jmp loc_4261EC  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+50h] +
mov ebp [esp+54h] +
mov dword ptr [esp+20h] 0 +
mov ecx [esi+64h] +
mov dword ptr [esi+78h] 0 +
mov dword ptr [esi+7Ch] 0 +
test ecx ecx +
jz loc_426400  +
lea esi [esi+0] +
mov eax [ecx+0A0h] +
test eax eax +
jnz loc_4263E6  +
jmp loc_4263F9  +
mov eax [eax] +
test eax eax +
jz loc_4263F9  +
cmp dword ptr [eax+4] 1 +
jnz loc_4263E0  +
mov edx [eax+10h] +
mov eax [eax] +
or byte ptr [edx+18h] 2 +
test eax eax +
jnz loc_4263E6  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jnz loc_4263D0  +
mov ebx [ebp+34h] +
lea edi [esp+20h] +
test ebx ebx +
jnz loc_42641A  +
jmp loc_42643C  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_42643C  +
mov [esp+0Ch] edi +
mov [esp+8] ebp +
mov [esp+4] ebx +
mov [esp] esi +
call loc_4259C0  +
test eax eax +
jnz loc_426410  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+24h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_423C10 +
mov eax [ebp+1Ch] +
mov [esp+24h] ebp +
mov [esp+28h] esi +
mov [esp+2Ch] edi +
mov [esp] eax +
call sub_424620  +
lea edx [esi+7Ch] +
mov ecx edi +
lea eax [esi+78h] +
mov dword ptr [esp] 0 +
call sub_423B90  +
test eax eax +
jz loc_426432  +
movzx eax byte ptr [ebp+0] +
and eax 3 +
cmp al 2 +
jz loc_42651E  +
mov edi [esi+64h] +
test edi edi +
jz loc_4264FF  +
mov ebx [edi+0A0h] +
test ebx ebx +
jnz loc_4264CC  +
jmp loc_4264F8  +
mov [esp+0Ch] ebx +
mov [esp+8] edi +
mov [esp+4] ebp +
mov [esp] esi +
jb loc_426510  +
sub eax 3 +
cmp eax 1 +
ja loc_426510  +
call loc_425E50  +
test eax eax +
jz loc_426432  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4264F8  +
mov eax [ebx+4] +
cmp eax 1 +
jnz loc_4264A0  +
mov dword ptr [esp+4] 1 +
mov ecx edi +
mov edx ebp +
mov [esp] ebx +
mov eax esi +
call sub_4240F0  +
test eax eax +
jz loc_426432  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_4264CC  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_426491  +
mov eax 1 +
jmp loc_426434  +
***
call sub_426190  +
test eax eax +
jnz loc_4264C6  +
jmp loc_426432  +
***
mov edi [esi+64h] +
test edi edi +
jz loc_4264FF  +
mov [esp+50h] esi +
mov [esp+54h] ebp +
mov ebx [edi+0A0h] +
mov dword ptr [edi+4Ch] 0 +
test ebx ebx +
jnz loc_42654B  +
jmp loc_426590  +
cmp eax 1 +
jz loc_4265A4  +
mov ebx [ebx] +
test ebx ebx +
jz loc_426560  +
mov eax [ebx+4] +
lea edx [eax-3] +
cmp edx 1 +
ja loc_426540  +
mov ebx [ebx] +
add dword ptr [edi+4Ch] 1 +
test ebx ebx +
jnz loc_42654B  +
mov eax [edi+4Ch] +
test eax eax +
jz loc_426590  +
shl eax 2 +
mov [esp+4] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_40E140  +
test eax eax +
mov [edi+48h] eax +
jz loc_426432  +
or dword ptr [edi+14h] 4 +
mov dword ptr [edi+4Ch] 0 +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_42652D  +
mov esi [esp+50h] +
mov ebp [esp+54h] +
jmp loc_42648A  +
***
mov esi [ebx+10h] +
mov edx [esi+94h] +
mov [esp+4] esi +
mov [esp] edx +
mov [esp+1Ch] edx +
call loc_410630  +
test eax eax +
js loc_426432  +
mov [esp] eax +
mov [esp+18h] eax +
call sub_412BD0  +
mov ecx [esp+18h] +
mov edx [esp+1Ch] +
test eax eax +
mov ebp eax +
jz loc_426633  +
mov eax [edx+78h] +
mov [esp] edx +
mov [esp+8] ebp +
mov [esp+4] esi +
mov [esp+0Ch] eax +
call sub_410670  +
mov [esp] ebp +
mov [esp+18h] eax +
call free  +
mov eax [esp+18h] +
test eax eax +
js loc_426432  +
cmp eax [esi+4Ch] +
jz loc_42662B  +
mov dword ptr [esp+4] 79Bh +
mov dword ptr [esp] offset a____Binutil_11 +
call sub_410530  +
mov eax [esp+18h] +
add [edi+4Ch] eax +
jmp loc_426545  +
***
test ecx ecx +
jz loc_4265DF  +
jmp loc_426432  +
***
mov ecx [edx+4] +
mov edx [edx] +
sub ecx 3 +
cmp ecx 2 +
adc eax 0 +
test edx edx +
jnz loc_426650  +
retn   +
***
xor eax eax +
retn   +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov dword ptr [esp] offset unk_4A8838 +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp+4] eax +
call sub_412710  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_1C] offset unk_4A8838 +
mov [esp+1Ch+var_18] eax +
call sub_4123C0  +
add esp 1Ch +
retn   +
***
mov [esp+18h+var_14] 8 +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] offset unk_4A8838 +
call sub_412630  +
test eax eax +
jz loc_426720  +
mov edx [esp+18h+arg_4] +
mov [eax+4] edx +
mov edx [ebx+0Ch] +
mov [eax] edx +
mov [ebx+0Ch] eax +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+0Ch] 2Ah +
mov dword ptr [esp+8] 10h +
mov dword ptr [esp+4] offset sub_423A00 +
mov dword ptr [esp] offset unk_4A8838 +
call sub_412080  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] offset unk_4A8838 +
call sub_412190  +
add esp 1Ch +
retn   +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov eax [ebx+14h] +
and eax 0C0000h +
cmp eax 40000h +
jz loc_426881  +
jbe loc_426830  +
cmp eax 80000h +
jz loc_4267E5  +
cmp eax 0C0000h +
jnz loc_426865  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jz loc_4268B0  +
nop   +
lea esi [esi+0] +
mov [ebx+7Ch] eax +
mov eax 1 +
mov dword ptr [ebx+3Ch] offset off_47D510 +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jnz loc_4267D0  +
mov esi [eax+24h] +
cmp [ebx+24h] esi +
jz loc_4267D0  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] offset aBDuplicateSect +
call eax  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jmp loc_4267D0  +
test eax eax +
jnz loc_426865  +
mov eax [ebx+94h] +
test byte ptr [eax+2Ch] 10h +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jz loc_4267D0  +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jz loc_4267D0  +
mov eax [esp+24h+arg_4] +
mov [eax+4] ebx +
xor eax eax +
jmp loc_4267DF  +
mov [esp+24h+var_1C] offset a_bfd_handle_al +
mov [esp+24h+var_20] 0B4Ah +
mov [esp+24h+var_24] offset a____Binutil_11 +
call sub_410560  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] offset aBIgnoringDupli +
call eax  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jmp loc_4267D0  +
mov edx [ebx+24h] +
cmp edx [eax+24h] +
jnz loc_426800  +
test edx edx +
jz loc_4267D0  +
mov eax [ebx+94h] +
lea edx [esp+24h+var_C] +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_8] 0 +
mov [esp+24h+var_24] eax +
call sub_40FBE0  +
test eax eax +
jnz loc_426937  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_24] offset aBCouldNotReadC +
call eax  +
mov edx [esp+24h+var_C] +
test edx edx +
jz loc_42691B  +
mov [esp+24h+var_24] edx +
call free  +
mov eax [esp+24h+var_8] +
test eax eax +
jz loc_42692B  +
mov [esp+24h+var_24] eax +
call free  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jmp loc_4267D0  +
mov eax [esp+24h+arg_4] +
lea ecx [esp+24h+var_8] +
mov eax [eax+4] +
mov edx [eax+94h] +
mov [esp+24h+var_1C] ecx +
mov [esp+24h+var_20] eax +
mov [esp+24h+var_24] edx +
call sub_40FBE0  +
test eax eax +
jz loc_4269A7  +
mov eax [ebx+24h] +
mov esi [esp+24h+var_C] +
mov [esp+24h+var_1C] eax +
mov eax [esp+24h+var_8] +
mov [esp+24h+var_24] esi +
mov [esp+24h+var_20] eax +
call memcmp  +
mov edx esi +
test eax eax +
jz loc_42690F  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_24] offset aBDuplicateSe_0 +
call eax  +
mov edx [esp+24h+var_C] +
jmp loc_42690F  +
mov eax [esp+24h+arg_8] +
mov eax [eax+18h] +
mov edx [eax+2Ch] +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
mov ecx [eax+94h] +
mov [esp+24h+var_1C] eax +
mov [esp+24h+var_24] offset aBCouldNotReadC +
mov [esp+24h+var_20] ecx +
call edx  +
mov edx [esp+24h+var_C] +
jmp loc_42690F  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+24h] +
mov esi [esp+28h] +
mov eax [ebx+14h] +
test eax 20000h +
jz loc_4269FF  +
test eax 2000000h +
jz loc_426A08  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp] offset unk_4A8838 +
mov [esp+4] eax +
call sub_4123C0  +
mov edx [eax+0Ch] +
mov edi eax +
test edx edx +
jz loc_426A50  +
mov [esp+28h] esi +
mov [esp+20h] ebx +
mov [esp+24h] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_426780  +
***
mov dword ptr [esp+4] 8 +
mov dword ptr [esp] offset unk_4A8838 +
call sub_412630  +
test eax eax +
jz loc_426A75  +
mov edx [edi+0Ch] +
mov [eax+4] ebx +
mov [eax] edx +
mov [edi+0Ch] eax +
jmp loc_4269FF  +
***
mov eax [esi+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aFPAlready_link +
call eax  +
jmp loc_4269FF  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi [esp+4+arg_4] +
mov esi [esp+4+arg_0] +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_426B9F  +
mov eax ecx +
jmp loc_426AC1  +
cmp [edx+10h] eax +
setz dl  +
test dl dl +
jnz loc_426AD8  +
mov eax [eax+10h] +
test eax eax +
jz loc_426AD8  +
test byte ptr [eax+15h] 80h +
jnz loc_426ABA  +
mov edx [eax+0Ch] +
test edx edx +
jnz loc_426AB0  +
cmp [esi+68h] eax +
setz dl  +
test dl dl +
jz loc_426ABA  +
mov edx [ecx+0Ch] +
nop   +
lea esi [esi+0] +
test edx edx +
jz loc_426AF3  +
mov ecx [edx+14h] +
test ch 80h +
jz loc_426B00  +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_426AE4  +
test eax eax +
mov edx offset off_47D510 +
cmovz eax edx +
jmp loc_426B7A  +
mov ebx [edx+0Ch] +
test ebx ebx +
mov [esp+4+var_4] ebx +
jz loc_426B20  +
mov ebx [esp+4+var_4] +
cmp [ebx+10h] edx +
setz bl  +
mov ebp ebx +
mov ebx ebp +
test bl bl +
jnz loc_426B30  +
mov edx [esp+4+var_4] +
jmp loc_426AE0  +
cmp [esi+68h] edx +
setz bl  +
mov ebp ebx +
mov ebx ebp +
test bl bl +
jz loc_426B1B  +
nop   +
test eax eax +
jz loc_426B78  +
mov esi [eax+14h] +
mov ebx ecx +
xor ebx esi +
test ebx 403h +
jz loc_426B63  +
mov ebx [edi+14h] +
xor ebx ecx +
and ebx 401h +
jnz loc_426B7A  +
and esi 2 +
jz loc_426B78  +
and ecx 2 +
cmovnz eax edx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl 8 +
jnz loc_426B82  +
and ebx 10h +
jz loc_426B93  +
xor ecx [edi+14h] +
and ecx 10h +
cmovz eax edx +
jmp loc_426B7A  +
mov eax edx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx [edi+14h] +
and ecx 8 +
cmovz eax edx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+4+arg_8] +
cmp [edx+1Ch] edi +
cmovbe eax edx +
jmp loc_426B7A  +
mov eax [edi+94h] +
mov edx [eax+64h] +
xor eax eax +
jmp loc_426AE0  +
***
sub esp 0Ch +
mov ebx [esp+0Ch+arg_0] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_426BD0  +
add esp 0Ch +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+14h] +
test edx edx +
jz loc_426BC4  +
mov eax [edx+3Ch] +
test eax eax +
jz loc_426BC4  +
test byte ptr [eax+15h] 80h +
jz loc_426BC4  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_426C20  +
cmp eax [ecx+10h] +
setnz cl  +
test cl cl +
jz loc_426BC4  +
mov esi [edx+38h] +
add esi [ebx+18h] +
add esi [eax+1Ch] +
mov [ebx+18h] esi +
mov [esp+0Ch+var_8] eax +
mov eax [esp+0Ch+arg_4] +
mov [esp+0Ch+var_4] esi +
mov [esp+0Ch+var_C] eax +
call sub_426A90  +
sub esi [eax+1Ch] +
mov [ebx+14h] eax +
mov [ebx+18h] esi +
jmp loc_426BC4  +
mov esi [esp+0Ch+arg_4] +
cmp eax [esi+68h] +
setnz cl  +
jmp loc_426BF1  +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov edx [esp+20h] +
mov eax [eax+1Ch] +
mov [esp+8] edx +
mov dword ptr [esp+4] offset sub_426BB0 +
mov [esp] eax +
call sub_424620  +
add esp 1Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+38h] +
test esi esi +
jz loc_426C75  +
cmp byte ptr [esi+0Ch] 5 +
jz loc_426C89  +
mov dword ptr [esp+4] 0C49h +
mov dword ptr [esp] offset a____Binutil_11 +
call sub_410530  +
mov eax [esi+18h] +
mov [esp+8] eax +
mov eax [esi+14h] +
mov ebp [eax] +
mov ebx [eax+4] +
mov eax [esp+30h] +
mov [esp] eax +
call sub_4102D0  +
mov ecx ebp +
mov edi eax +
shl edi cl +
test edi edi +
jz loc_426D16  +
mov edx edi +
neg edx  +
mov eax edx +
and eax edi +
cmp eax edi +
jz loc_426CD6  +
mov dword ptr [esp+4] 0C52h +
mov dword ptr [esp] offset a____Binutil_11 +
mov [esp+0Ch] edx +
call sub_410530  +
mov edx [esp+0Ch] +
mov eax [ebx+24h] +
lea eax [edi+eax-1] +
and eax edx +
cmp ebp [ebx+40h] +
mov [ebx+24h] eax +
jbe loc_426CEA  +
mov [ebx+40h] ebp +
mov ebp [esp+8] +
mov [esi+14h] ebx +
mov [esi+18h] eax +
mov byte ptr [esi+0Ch] 3 +
add ebp eax +
mov eax [ebx+14h] +
mov [ebx+24h] ebp +
and ah 0EFh +
or eax 1 +
mov [ebx+14h] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor edx edx +
jmp loc_426CBA  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+3Ch+arg_0] +
test ebp ebp +
jz loc_426ECF  +
mov [esp+3Ch+var_1C] 0 +
mov [esp+3Ch+var_10] 0 +
mov [esp+3Ch+var_20] 0 +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_14] 0 +
nop   +
lea esi [esi+0] +
mov ebx [ebp+0Ch] +
test ebx ebx +
jz loc_426DF4  +
lea ebx [ebp+0Ch] +
xor eax eax +
mov [esp+3Ch+var_18] ebx +
jmp loc_426DC9  +
mov esi [eax+4] +
mov edi offset asc_4974A8 +
mov ecx 2 +
cmps   +
mov edi [esp+3Ch+var_1C] +
setb cl  +
setnbe bl  +
sub ebx ecx +
movsx ecx bl +
mov ebx [esp+3Ch+var_24] +
test ecx ecx +
cmovz edi ebp +
mov [esp+3Ch+var_1C] edi +
cmovnz ebx ebp +
mov [esp+3Ch+var_24] ebx +
and edx 2 +
mov ebx [esp+3Ch+var_20] +
movzx edx byte ptr [eax+8] +
cmovnz ebx ebp +
or edx 4 +
mov [eax+8] dl +
and edx 1 +
mov [esp+3Ch+var_20] ebx +
jnz loc_426EA3  +
mov edx [ebp+38h] +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_3C] eax +
call edx  +
test eax eax +
jz loc_426DF4  +
movzx edx byte ptr [eax+8] +
test dl 1 +
jz loc_426D76  +
mov [esp+3Ch+var_24] ebp +
jmp loc_426DA8  +
mov ecx [ebp+1Ch] +
xor eax eax +
lea ebx [ebp+1Ch] +
test ecx ecx +
jz loc_426E98  +
mov esi [esp+3Ch+arg_4] +
mov edx [ebp+38h] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_34] esi +
call edx  +
test eax eax +
jz loc_426E98  +
test byte ptr [eax+8] 1 +
jnz loc_426E56  +
mov esi [eax+4] +
mov edi offset asc_4974A8 +
mov ecx 2 +
cmps   +
mov edi [esp+3Ch+var_10] +
setb cl  +
setnbe dl  +
sub edx ecx +
mov ecx [esp+3Ch+var_14] +
movsx edx dl +
test edx edx +
cmovz edi ebp +
cmovnz ecx ebp +
mov [esp+3Ch+var_10] edi +
mov [esp+3Ch+var_14] ecx +
jmp loc_426E04  +
test ebp ebp +
mov eax 1 +
mov [esp+3Ch+var_1C] 0 +
setz dl  +
mov [esp+3Ch+var_24] 0 +
jz loc_426EB7  +
mov eax [esp+3Ch+var_24] +
test eax eax +
jz loc_426ED3  +
mov ebx [esp+3Ch+var_24] +
cmp [esp+3Ch+var_20] ebx +
mov esi [esp+3Ch+arg_8] +
setz al  +
movzx eax al +
mov [esi] eax +
mov eax ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_426D60  +
mov edx [esp+3Ch+var_24] +
mov ebp [esp+3Ch+var_14] +
test edx edx +
setz al  +
test ebp ebp +
setz dl  +
jnz loc_426E72  +
test al al +
jz loc_426E72  +
mov eax [esp+3Ch+var_1C] +
test eax eax +
mov [esp+3Ch+var_24] eax +
jnz loc_426E7A  +
mov ebp [esp+3Ch+var_10] +
test ebp ebp +
jnz loc_426ED7  +
xor eax eax +
jmp loc_426E90  +
test dl dl +
jnz loc_426EC7  +
mov eax [esp+3Ch+arg_8] +
mov dword ptr [eax] 1 +
add esp 3Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 2Ch +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_10] 0 +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_426D20  +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+2Ch] +
mov eax [edi+4] +
mov edx [eax+1B0h] +
mov eax [eax+4Ch] +
movzx edx byte ptr [edx+1ACh] +
mov [esp] esi +
shr dl 7 +
mov [esp+0Ch] edx +
call eax  +
mov edx [esp+0Ch] +
test dl dl +
mov [ebx+8] eax +
mov eax [edi+4] +
jz loc_426FC0  +
mov eax [eax+50h] +
lea edx [esi+4] +
mov [esp] edx +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
lea edx [esi+8] +
add esi 0Eh +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
mov [ebx+4] eax +
movzx eax byte ptr [esi-2] +
mov [ebx+0Ch] al +
movzx eax byte ptr [esi-1] +
mov [ebx+0Dh] al +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp] esi +
call eax  +
cmp eax 0FFFFh +
mov [ebx+10h] eax +
jz loc_426FE0  +
cmp eax 0FEFFh +
ja loc_426FD0  +
mov byte ptr [ebx+0Eh] 0 +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+4Ch] +
lea edx [esi+4] +
mov [esp] edx +
call eax  +
mov [ebx] eax +
jmp loc_426F6C  +
***
sub eax 10000h +
mov [ebx+10h] eax +
jmp loc_426FAA  +
***
mov edx [esp+28h] +
xor ax ax +
test edx edx +
jz loc_426FB3  +
mov eax [edi+4] +
mov ecx [esp+28h] +
mov eax [eax+4Ch] +
mov [esp] ecx +
call eax  +
mov [ebx+10h] eax +
jmp loc_426FAA  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
add esi 4 +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
call eax  +
mov dword ptr [ebx+8] 0 +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
lea edx [esi+4] +
add esi 8 +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+4] eax +
mov eax [edi+4] +
mov eax [eax+50h] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+8] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ebx +
add ebx 4 +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
mov edx [esi+4] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea ecx [ebx+4] +
mov edx [esi+4] +
add ebx 8 +
mov eax [eax+54h] +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] ecx +
call eax  +
mov eax [edi+4] +
mov edx [esi+8] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
add esi 4 +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
call eax  +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+4] ebx +
add ebx 4 +
mov [esp] edx +
call eax  +
mov eax [edi+4] +
mov edx [esi+4] +
mov eax [eax+54h] +
mov [esp+24h] ebx +
mov [esp+20h] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov ebx [esp+34h] +
mov esi [esp+38h] +
mov ebp [esp+3Ch] +
mov eax [edi+4] +
mov edx [ebx+8] +
mov eax [eax+54h] +
mov [esp] edx +
mov [esp+4] esi +
call eax  +
mov eax [edi+4] +
lea ecx [esi+4] +
mov edx [ebx] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [edi+4] +
lea ecx [esi+8] +
mov edx [ebx+4] +
mov eax [eax+54h] +
mov [esp] edx +
mov [esp+4] ecx +
call eax  +
movzx eax byte ptr [ebx+0Ch] +
mov [esi+0Ch] al +
movzx eax byte ptr [ebx+0Dh] +
mov [esi+0Dh] al +
mov eax [ebx+10h] +
lea edx [eax-0FF00h] +
cmp edx 0FFFEFFFFh +
ja loc_427239  +
test ebp ebp +
jz loc_427253  +
mov edx [edi+4] +
mov edx [edx+54h] +
mov [esp] eax +
mov [esp+4] ebp +
call edx  +
mov eax 0FFFFh +
mov edx [edi+4] +
add esi 0Eh +
mov edx [edx+60h] +
mov [esp+34h] esi +
mov [esp+30h] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp edx  +
***
mov dword ptr [esp+8] offset aBfd_elf32_swap +
mov dword ptr [esp+4] 0E0h +
mov dword ptr [esp] offset a____Binutil_22 +
call sub_410560  +
nop   +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov edx [esp+78h] +
mov ebp [esp+70h] +
test edx edx +
mov eax [ebp+0A0h] +
jnz loc_427360  +
add eax 48h +
xor ebx ebx +
mov [esp+24h] eax +
mov eax [ebp+4] +
mov eax [eax+1B0h] +
mov [esp+2Ch] eax +
mov eax [esp+24h] +
mov eax [eax+18h] +
mov [esp+28h] eax +
shr dword ptr [esp+28h] 4 +
mov esi [esp+28h] +
test esi esi +
jnz loc_4273E0  +
xor ebx ebx +
xor edi edi +
mov dword ptr [esp+38h] 0 +
mov dword ptr [esp+30h] 0 +
***
mov eax [esp+arg_28] +
mov eax [eax+38h] +
test eax eax +
jz loc_4272EF  +
mov edx [esp+arg_24] +
mov [esp+arg_0] edi +
mov [esp+0] ebp +
mov [esp+arg_4] edx +
call eax  +
mov eax [esp+arg_70] +
test eax eax +
jz loc_427328  +
test ebx ebx +
lea eax [ebx-1] +
jle loc_42731E  +
mov edx [esp+arg_70] +
add edx 4 +
sub eax 1 +
mov [edx-4] edi +
add edi 34h +
cmp eax 0FFFFFFFFh +
jnz loc_427302  +
mov eax [esp+arg_70] +
lea eax [eax+ebx*4] +
mov [esp+arg_70] eax +
mov eax [esp+arg_70] +
mov dword ptr [eax] 0 +
mov eax [esp+arg_34] +
test eax eax +
jz loc_427338  +
mov [esp+0] eax +
call free  +
mov eax [esp+arg_2C] +
test eax eax +
jz loc_427351  +
mov edx [esp+arg_20] +
cmp [edx+30h] eax +
jz loc_427351  +
mov [esp+0] eax +
call free  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [eax+914h] +
xor ebx ebx +
mov edi [eax+918h] +
lea ecx [eax+160h] +
lea edx [eax+0F0h] +
mov [esp+24h] edx +
test esi esi +
cmovnz ebx ecx +
test edi edi +
jnz loc_4273D0  +
mov edx [eax+91Ch] +
test edx edx +
jz loc_427296  +
mov edi [eax+244h] +
test edi edi +
jnz loc_427296  +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call sub_434F00  +
test eax eax +
jnz loc_427296  +
nop   +
lea esi [esi+0] +
***
mov ebx 0FFFFFFFFh +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [eax+240h] +
test ecx ecx +
jnz loc_427387  +
jmp loc_4273A3  +
***
mov esi [esp+28h] +
mov eax [esp+24h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] esi +
mov [esp+4] eax +
mov [esp] ebp +
call sub_42B780  +
test eax eax +
mov [esp+30h] eax +
jz loc_4273C0  +
imul eax esi +
mov [esp] ebp +
mov [esp+4] eax +
call sub_40E220  +
test eax eax +
mov edi eax +
jz loc_4275AC  +
test ebx ebx +
jz loc_427466  +
mov eax [ebx+18h] +
shr eax 1 +
cmp eax esi +
jz loc_427545  +
mov ecx [ebp+0] +
mov [esp+0Ch] esi +
mov [esp+8] eax +
mov dword ptr [esp] offset aSVersionCountL +
mov [esp+4] ecx +
call off_47D664  +
mov dword ptr [esp+38h] 0 +
xor ecx ecx +
mov eax [esp+28h] +
mov edx [esp+30h] +
lea eax [eax+eax*4] +
lea eax [edx+eax*4] +
lea esi [edx+14h] +
cmp eax esi +
mov [esp+34h] eax +
jbe loc_4277C1  +
mov ebx edi +
mov [esp+3Ch] edi +
mov edi ecx +
***
mov ecx [esi] +
mov eax [esp+24h] +
mov [ebx+18h] ecx +
mov ecx [esi+4] +
mov [ebx+1Ch] ecx +
mov ecx [esi+8] +
mov [ebx+20h] ecx +
mov ecx [esi+0Ch] +
mov [ebx+24h] ecx +
mov ecx [esi+10h] +
mov [ebx] ebp +
mov [ebx+28h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] esi +
mov [esp+4] eax +
mov [esp-0D8h+arg_D4] ebp +
call sub_42BAD0  +
mov [ebx+4] eax +
mov eax [esi] +
mov [ebx+8] eax +
mov eax [esi+10h] +
test eax eax +
jnz loc_4276B0  +
mov dword ptr [ebx+10h] offset off_47D468 +
mov eax [ebp+28h] +
shr eax 5 +
test al 42h +
jz loc_4274FD  +
mov eax [ebx+10h] +
mov eax [eax+1Ch] +
sub [ebx+8] eax +
movzx eax byte ptr [esi+0Ch] +
mov ecx eax +
shr cl 4 +
cmp cl 1 +
jz loc_4276D2  +
jb loc_427703  +
cmp cl 2 +
jz loc_4276F3  +
cmp cl 0Ah +
jnz loc_427530  +
or dword ptr [ebx+0Ch] 800000h +
movzx eax byte ptr [esi+0Ch] +
nop   +
and eax 0Fh +
cmp al 0Ah +
ja sub_4275D7  +
movzx eax al +
jmp ds:off_497724[eax*4]  +
***
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebp +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_411E10  +
test eax eax +
jnz loc_4275AC  +
mov eax [ebx+18h] +
mov [esp] eax +
call sub_412BD0  +
test eax eax +
mov edx eax +
mov [esp+38h] eax +
jz loc_42776A  +
mov eax [ebx+18h] +
mov [esp+8] ebp +
mov [esp] edx +
mov [esp+4] eax +
call sub_411C00  +
cmp eax [ebx+18h] +
jz loc_42775C  +
***
mov eax [esp+38h] +
test eax eax +
jz loc_4275AC  +
mov [esp-0D8h+arg_D4] eax +
call free  +
mov edx [esp+24h] +
mov eax [esp+30h] +
cmp [edx+30h] eax +
jz loc_4273C0  +
mov [esp-0D8h+arg_D4] eax +
mov ebx 0FFFFFFFFh +
call free  +
jmp loc_4273C5  +
***
or dword ptr [ebx+0Ch] 400000h +
***
mov edx [esp+78h] +
or dword ptr [ebx+0Ch] 100000h +
jmp sub_4275D7  +
***
or dword ptr [ebx+0Ch] 80000h +
jmp sub_4275D7  +
***
or dword ptr [ebx+0Ch] 10000h +
jmp sub_4275D7  +
***
or dword ptr [ebx+0Ch] 40000h +
jmp sub_4275D7  +
***
or dword ptr [ebx+0Ch] 4004h +
jmp sub_4275D7  +
***
or dword ptr [ebx+0Ch] 104h +
jmp sub_4275D7  +
***
or dword ptr [ebx+0Ch] 8 +
jmp sub_4275D7  +
***
cmp eax 0FFFFFFF1h +
jz loc_427730  +
cmp eax 0FFFFFFF2h +
jnz loc_427710  +
mov dword ptr [ebx+10h] offset off_47D3C0 +
test byte ptr [ebp+2Ah] 20h +
jnz loc_427740  +
mov eax [esi+4] +
mov [ebx+8] eax +
jmp loc_4274EA  +
mov ecx [esi+10h] +
cmp ecx 0FFFFFFF2h +
jz loc_427530  +
test ecx ecx +
jz loc_427530  +
or dword ptr [ebx+0Ch] 2 +
movzx eax byte ptr [esi+0Ch] +
jmp loc_427530  +
or dword ptr [ebx+0Ch] 80h +
movzx eax byte ptr [esi+0Ch] +
jmp loc_427530  +
or dword ptr [ebx+0Ch] 1 +
movzx eax byte ptr [esi+0Ch] +
jmp loc_427530  +
mov [esp+4] eax +
mov [esp-0D8h+arg_D4] ebp +
call sub_42E1E0  +
mov edx offset off_47D510 +
test eax eax +
cmovz eax edx +
mov [ebx+10h] eax +
jmp loc_4274EA  +
***
mov dword ptr [ebx+10h] offset off_47D510 +
jmp loc_4274EA  +
***
mov dword ptr [esp+4] offset aCommon_1 +
mov [esp-0D8h+arg_D4] ebp +
call sub_40F280  +
test eax eax +
jz loc_4277A0  +
mov [ebx+10h] eax +
jmp loc_4276C7  +
***
mov eax [esp+38h] +
add eax 2 +
mov ecx eax +
jmp loc_427470  +
***
mov ecx [ebx+18h] +
test ecx ecx +
jnz loc_4275AC  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_411C00  +
xor ecx ecx +
cmp eax [ebx+18h] +
jnz loc_4275AC  +
jmp loc_427470  +
***
mov dword ptr [esp+8] 209001h +
mov dword ptr [esp+4] offset aCommon_1 +
mov [esp-0D8h+arg_D4] ebp +
call sub_40F740  +
test eax eax +
jnz loc_427754  +
jmp loc_42759C  +
***
xor ebx ebx +
jmp loc_4272D3  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [eax] +
mov edx [eax+1B0h] +
mov eax [eax+4Ch] +
movzx edx byte ptr [edx+1ACh] +
mov [esp+18h+var_18] esi +
shr dl 7 +
mov [esp+18h+var_C] edx +
call eax  +
lea ecx [esi+4] +
mov [ebx] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] ecx +
call eax  +
lea ecx [esi+8] +
mov [ebx+4] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] ecx +
call eax  +
mov edx [esp+18h+var_C] +
test dl dl +
mov [ebx+8] eax +
mov eax [edi] +
jnz loc_4278B4  +
mov eax [eax+4Ch] +
lea edx [esi+0Ch] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+0Ch] eax +
mov eax [edi] +
lea edx [esi+10h] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+14h] +
mov dword ptr [ebx+14h] 0 +
mov [ebx+10h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+18h] +
mov [ebx+18h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+1Ch] +
mov [ebx+1Ch] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+20h] +
add esi 24h +
mov [ebx+20h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+24h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] esi +
call eax  +
mov dword ptr [ebx+2Ch] 0 +
mov dword ptr [ebx+30h] 0 +
mov [ebx+28h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+50h] +
lea edx [esi+0Ch] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+0Ch] eax +
jmp loc_427838  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [eax] +
mov edx [edx] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+4] +
mov edx [edi+4] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+8] +
mov edx [edi+8] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+0Ch] +
mov edx [edi+0Ch] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea edx [ebx+10h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] edx +
mov edx [edi+10h] +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+14h] +
mov edx [edi+18h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+18h] +
mov edx [edi+1Ch] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+1Ch] +
mov edx [edi+20h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+20h] +
mov edx [edi+24h] +
add ebx 24h +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
mov edx [edi+28h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
call eax  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [eax] +
mov eax [eax+1B0h] +
movzx edx byte ptr [eax+1ACh] +
mov eax [esi] +
shr dl 7 +
mov [ecx] eax +
mov eax [esi+4] +
mov [esp+18h+var_C] edx +
mov [ecx+4] eax +
mov eax [esi+8] +
mov [ecx+8] eax +
mov eax [esi+0Ch] +
mov [ecx+0Ch] eax +
mov eax [edi] +
lea ecx [esi+10h] +
mov eax [eax+58h] +
mov [esp+18h+var_18] ecx +
call eax  +
lea ecx [esi+12h] +
mov [ebx+24h] ax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] ecx +
call eax  +
lea ecx [esi+14h] +
mov [ebx+26h] ax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] ecx +
call eax  +
mov edx [esp+18h+var_C] +
test dl dl +
mov [ebx+1Ch] eax +
mov eax [edi] +
jnz loc_427AD0  +
mov eax [eax+4Ch] +
lea edx [esi+18h] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+10h] eax +
mov eax [edi] +
lea edx [esi+1Ch] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+20h] +
mov [ebx+14h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+24h] +
mov [ebx+18h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+28h] +
mov [ebx+20h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+2Ah] +
mov [ebx+28h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+2Ch] +
mov [ebx+2Ch] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+2Eh] +
mov [ebx+30h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+30h] +
add esi 32h +
mov [ebx+34h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+38h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] esi +
call eax  +
mov [ebx+3Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+50h] +
lea edx [esi+18h] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+10h] eax +
jmp loc_427A36  +
***
mov edi eax +
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 1Ch +
mov eax [eax] +
mov edx [edx] +
lea ecx [ecx+10h] +
lea ebp [ebx+14h] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
mov [ecx-10h] edx +
mov edx [esi+4] +
shr al 7 +
mov [ecx-0Ch] edx +
mov edx [esi+8] +
mov [esp+24h+var_18] eax +
mov [ecx-8] edx +
mov edx [esi+0Ch] +
mov [ecx-4] edx +
mov edx [edi] +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
movzx ecx word ptr [esi+24h] +
mov [esp+24h+var_24] ecx +
call edx  +
mov edx [edi] +
lea ecx [ebx+12h] +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
movzx ecx word ptr [esi+26h] +
mov [esp+24h+var_24] ecx +
call edx  +
mov edx [edi] +
mov ecx [esi+1Ch] +
mov edx [edx+54h] +
mov [esp+24h+var_20] ebp +
mov ebp 0FFFFh +
mov [esp+24h+var_24] ecx +
call edx  +
mov eax [edi] +
lea ecx [ebx+18h] +
mov edx [esi+10h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+1Ch] +
mov edx [esi+14h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+20h] +
mov edx [esi+18h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+24h] +
mov edx [esi+20h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+28h] +
mov edx [esi+28h] +
mov eax [eax+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+2Ah] +
mov edx [esi+2Ch] +
mov eax [eax+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [esi+30h] +
lea ecx [ebx+2Ch] +
mov edx [edi] +
cmp eax 0FFFFh +
cmova eax ebp +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] eax +
call edx  +
mov eax [edi] +
lea ecx [ebx+2Eh] +
mov edx [esi+34h] +
mov eax [eax+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [esi+38h] +
mov edx 0 +
lea ecx [ebx+30h] +
cmp eax 0FF00h +
cmovnb eax edx +
mov edx [edi] +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] eax +
call edx  +
mov eax [esi+3Ch] +
mov edx [edi] +
cmp eax 0FF00h +
cmovnb eax ebp +
mov edx [edx+60h] +
add ebx 32h +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] eax +
call edx  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+80h] +
lea ecx [esp+2Ch] +
mov esi [eax+0A0h] +
add eax 4 +
mov [esp+14h] eax +
mov edx esi +
mov ebp [esi+40h] +
call sub_427AF0  +
mov eax [esp+80h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_411E10  +
test eax eax +
jz loc_427CC0  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+80h] +
mov dword ptr [esp+4] 34h +
mov [esp+8] eax +
lea eax [esp+2Ch] +
mov [esp] eax +
call sub_411CB0  +
cmp eax 34h +
jnz loc_427CB4  +
mov eax [esi+30h] +
cmp eax 0FFFEh +
jbe loc_427CF4  +
mov edx [ebp+0] +
mov [edx+20h] eax +
mov eax [esi+38h] +
cmp eax 0FEFFh +
jbe loc_427D04  +
mov edx [ebp+0] +
mov [edx+18h] eax +
mov edx [esi+3Ch] +
cmp edx 0FEFFh +
jbe loc_427D15  +
mov ecx [ebp+0] +
mov [ecx+1Ch] edx +
lea eax [eax+eax*4] +
shl eax 3 +
mov [esp+1Ch] eax +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_40E140  +
test eax eax +
mov [esp+18h] eax +
jz loc_427CB4  +
mov edi eax +
mov eax [esi+38h] +
xor ebx ebx +
test eax eax +
jz loc_427D6A  +
lea esi [esi+0] +
mov edx [ebp+ebx*4+0] +
mov ecx edi +
add ebx 1 +
mov eax [esp+14h] +
add edi 28h +
call sub_4278D0  +
cmp [esi+38h] ebx +
ja loc_427D50  +
mov dword ptr [esp+0Ch] 0 +
mov eax [esi+18h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_411E10  +
test eax eax +
jnz loc_427CB4  +
mov eax [esp+80h] +
mov edi [esp+1Ch] +
mov [esp+8] eax +
mov eax [esp+18h] +
mov [esp+4] edi +
mov [esp] eax +
call sub_411CB0  +
cmp edi eax +
setz al  +
movzx eax al +
jmp loc_427CB6  +
***
mov dword ptr [esp+28h] 8 +
mov dword ptr [esp+24h] offset sub_427090 +
mov eax [edi+28h] +
mov dword ptr [esp+20h] 0 +
shr eax 5 +
test al 42h +
jz loc_427E7E  +
mov eax [ebp+1Ch] +
mov [esp+20h] eax +
mov ebx [ebp+4Ch] +
test ebx ebx +
jz loc_427F80  +
mov dword ptr [esp+2Ch] 0 +
xor esi esi +
mov dword ptr [esp+18h] 0 +
jmp loc_427F3A  +
lea eax [esp+30h] +
mov [esp+4] eax +
mov [esp] edi +
mov [esp+18h] edx +
call sub_432D40  +
test eax eax +
mov ecx eax +
js loc_427F70  +
mov eax [ebx] +
mov [esp+2Ch] ecx +
mov eax [eax] +
mov eax [eax] +
test eax eax +
jz loc_427EF0  +
mov edx [edi+4] +
cmp [eax+4] edx +
jz loc_427EF0  +
mov [esp+4] ebx +
mov [esp] edi +
mov [esp+1Ch] ecx +
call sub_4367F0  +
mov ecx [esp+1Ch] +
test eax eax +
jz loc_427F70  +
mov eax [esp+20h] +
shl ecx 8 +
add esi 1 +
add eax [ebx+4] +
mov [esp+34h] eax +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
add ecx eax +
mov eax [ebx+8] +
mov [esp+38h] ecx +
mov [esp] edi +
mov [esp+3Ch] eax +
mov eax [esp+14h] +
mov [esp+8] eax +
lea eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+24h] +
call eax  +
mov eax [esp+28h] +
add [esp+14h] eax +
cmp esi [ebp+4Ch] +
jnb loc_427F80  +
mov eax [ebp+48h] +
mov ebx [eax+esi*4] +
mov eax [ebx] +
mov edx [eax] +
cmp edx [esp+18h] +
mov [esp+30h] edx +
jz loc_427F88  +
cmp dword ptr [edx+10h] offset off_47D510 +
jnz loc_427EA0  +
mov ecx [edx+8] +
test ecx ecx +
jnz loc_427EA0  +
xor ecx ecx +
jmp loc_427EC4  +
***
mov eax [esp+68h] +
mov dword ptr [eax] 1 +
lea esi [esi+0] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+2Ch] +
jmp loc_427EC4  +
***
mov dword ptr [esp+28h] 0Ch +
mov dword ptr [esp+24h] offset sub_4270D0 +
jmp loc_427E65  +
***
mov ebx [edx+3Ch] +
jmp loc_427E1E  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 4Ch +
mov eax [eax+4] +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_28] edx +
mov esi [esp+4Ch+arg_8] +
mov [esp+4Ch+var_2C] ecx +
mov eax [eax+1B0h] +
mov [esp+4Ch+var_30] eax +
mov eax [edi+18h] +
mov [esp+4Ch+var_4C] eax +
call sub_412BD0  +
test eax eax +
mov ebp eax +
jz loc_428031  +
mov eax [edi+10h] +
mov edx [edi+14h] +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_4C] ebx +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_44] edx +
call sub_411E10  +
test eax eax +
jz loc_428040  +
mov [esp+4Ch+var_4C] ebp +
call free  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi+18h] +
mov [esp+4Ch+var_44] ebx +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call sub_411C00  +
cmp eax [edi+18h] +
jnz loc_428029  +
mov eax [edi+28h] +
mov [esp+4Ch+var_34] eax +
and eax 0FFFFFFFBh +
cmp eax 8 +
jnz loc_4281F6  +
mov ecx [esp+4Ch+arg_10] +
mov edi ebp +
mov eax [ebx+80h] +
mov edx [esp+4Ch+arg_4] +
test ecx ecx +
cmovz eax [ebx+7Ch] +
mov [esp+4Ch+var_24] eax +
xor eax eax +
test edx edx +
jz loc_4281E4  +
mov [esp+4Ch+var_20] ebp +
mov ebp eax +
jmp loc_4280F1  +
cmp eax [esp+4Ch+var_24] +
ja loc_4281B0  +
mov edx [esp+4Ch+arg_C] +
cmp [esp+4Ch+var_34] 0Ch +
lea eax [edx+eax*4-4] +
mov [esi] eax +
mov eax [esp+4Ch+var_10] +
mov [esi+8] eax +
jz loc_428169  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+28h] +
test eax eax +
jz loc_4281A0  +
lea edx [esp+4Ch+var_18] +
add ebp 1 +
mov [esp+4Ch+var_48] esi +
add esi 10h +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] ebx +
call eax  +
add edi [esp+4Ch+var_34] +
cmp ebp [esp+4Ch+arg_4] +
jz loc_4281E0  +
cmp [esp+4Ch+var_34] 0Ch +
jz loc_428180  +
mov eax [ebx+4] +
mov eax [eax+4Ch] +
mov [esp+4Ch+var_4C] edi +
call eax  +
lea ecx [edi+4] +
mov [esp+4Ch+var_18] eax +
mov eax [ebx+4] +
mov eax [eax+4Ch] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov [esp+4Ch+var_10] 0 +
mov [esp+4Ch+var_14] eax +
mov ecx [ebx+28h] +
shr ecx 5 +
and ecx 42h +
mov ecx [esp+4Ch+var_18] +
jz loc_428142  +
mov edx [esp+4Ch+arg_10] +
test edx edx +
jnz loc_428142  +
mov edx [esp+4Ch+var_2C] +
sub ecx [edx] +
shr eax 8 +
test eax eax +
mov [esi+4] ecx +
jnz loc_428097  +
mov eax off_47D5AC +
cmp [esp+4Ch+var_34] 0Ch +
mov [esi] eax +
mov eax [esp+4Ch+var_10] +
mov [esi+8] eax +
jnz loc_4280BD  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+24h] +
test eax eax +
jnz loc_4280CC  +
jmp loc_4280BD  +
lea eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] ebx +
call sub_427040  +
mov eax [esp+4Ch+var_14] +
jmp loc_428125  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+24h] +
jmp loc_4280CC  +
mov edx [esp+4Ch+var_28] +
mov ecx [edx] +
mov [esp+4Ch+var_3C] eax +
mov eax [ebx] +
mov [esp+4Ch+var_40] ebp +
mov [esp+4Ch+var_4C] offset aSSRelocationDH +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] eax +
call off_47D664  +
jmp loc_428150  +
mov ebp [esp+4Ch+var_20] +
mov [esp+4Ch+var_4C] ebp +
call free  +
mov eax 1 +
jmp loc_428033  +
mov [esp+4Ch+var_48] 582h +
mov [esp+4Ch+var_4C] offset a____Binutil_22 +
call sub_410530  +
jmp loc_42806B  +
***
push ebp  +
mov eax 1 +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+44h] +
mov edi [ebx+44h] +
mov esi [ebx+8Ch] +
test edi edi +
jz loc_428235  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+4Ch] +
test ecx ecx +
jnz loc_4282B0  +
test byte ptr [ebx+14h] 4 +
jz loc_42822D  +
mov edi [ebx+4Ch] +
test edi edi +
jz loc_42822D  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_4283EC  +
mov eax [ecx+28h] +
xor ebp ebp +
test eax eax +
mov [esp+18h] eax +
jz loc_42826D  +
mov eax [ecx+18h] +
xor edx edx +
div  dword ptr [esp+18h] +
mov ebp eax +
mov esi [esi+4Ch] +
test esi esi +
jz loc_4283DF  +
mov eax [esi+28h] +
mov dword ptr [esp+18h] 0 +
test eax eax +
mov [esp+1Ch] eax +
jz loc_428298  +
mov eax [esi+18h] +
xor edx edx +
div  dword ptr [esp+1Ch] +
mov [esp+18h] eax +
mov eax [esp+18h] +
add eax ebp +
cmp edi eax +
jz loc_428391  +
xor eax eax +
jmp loc_42822D  +
***
mov edx [ebx+24h] +
test edx edx +
jz loc_42822D  +
mov ecx esi +
mov esi [esi+28h] +
test esi esi +
jnz loc_428376  +
xor eax eax +
xor ebp ebp +
mov dword ptr [esp+18h] 0 +
xor esi esi +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp+1Ch] ecx +
mov [esp] eax +
call sub_40E140  +
test eax eax +
mov edi eax +
jz loc_4282A6  +
mov ecx [esp+1Ch] +
test ecx ecx +
jz loc_42832B  +
mov edx [esp+4Ch] +
lea eax [ebx+1Ch] +
mov [esp] ecx +
mov ecx eax +
mov eax [esp+40h] +
mov [esp+8] edi +
mov [esp+4] ebp +
mov [esp+10h] edx +
mov edx [esp+48h] +
mov [esp+0Ch] edx +
mov edx ebx +
call sub_427FD0  +
test eax eax +
jz loc_4282A6  +
test esi esi +
jz loc_428369  +
mov eax [esp+4Ch] +
shl ebp 4 +
mov edx ebx +
add ebp edi +
lea ecx [ebx+1Ch] +
mov [esp+8] ebp +
mov [esp+10h] eax +
mov eax [esp+48h] +
mov [esp] esi +
mov [esp+0Ch] eax +
mov eax [esp+18h] +
mov [esp+4] eax +
mov eax [esp+40h] +
call sub_427FD0  +
test eax eax +
jz loc_4282A6  +
mov [ebx+44h] edi +
mov eax 1 +
jmp loc_42822D  +
***
mov eax [ecx+18h] +
xor edx edx +
mov dword ptr [esp+18h] 0 +
div  esi +
xor esi esi +
mov ebp eax +
shl eax 4 +
jmp loc_4282D6  +
***
test ecx ecx +
jz loc_4283A5  +
mov eax [ebx+58h] +
mov edx [ebx+5Ch] +
xor edx [ecx+14h] +
xor eax [ecx+10h] +
or edx eax +
jz loc_4283FD  +
test esi esi +
jz loc_4283B9  +
mov eax [ebx+58h] +
mov edx [ebx+5Ch] +
xor edx [esi+14h] +
xor eax [esi+10h] +
or edx eax +
jz loc_4283F3  +
mov dword ptr [esp+4] 5E6h +
mov dword ptr [esp] offset a____Binutil_22 +
mov [esp+1Ch] ecx +
call sub_410530  +
mov eax edi +
mov ecx [esp+1Ch] +
shl eax 4 +
jmp loc_4282D6  +
***
mov dword ptr [esp+18h] 0 +
jmp loc_428298  +
***
xor ebp ebp +
jmp loc_42826D  +
***
mov eax edi +
shl eax 4 +
jmp loc_4282D6  +
***
mov eax edi +
shl eax 4 +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp+1Ch] ecx +
mov [esp] eax +
call sub_40E140  +
mov ecx [esp+1Ch] +
test eax eax +
mov edi eax +
jnz loc_4282F8  +
xor eax eax +
jmp loc_42822D  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [eax+1B0h] +
mov eax [eax+4Ch] +
movzx edx byte ptr [edx+1ACh] +
mov [esp+10h+var_10] esi +
shr dl 7 +
mov [esp+10h+var_4] edx +
call eax  +
lea ecx [esi+18h] +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] ecx +
call eax  +
lea ecx [esi+4] +
mov [ebx+4] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] ecx +
call eax  +
mov edx [esp+10h+var_4] +
test dl dl +
mov [ebx+8] eax +
mov eax [edi+4] +
jnz loc_4284F0  +
lea edx [esi+8] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+0Ch] +
mov [ebx+0Ch] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+10h] eax +
mov eax [edi+4] +
lea edx [esi+10h] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+14h] +
add esi 1Ch +
mov [ebx+14h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+18h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+1Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea edx [esi+8] +
mov eax [eax+50h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+0Ch] +
mov [ebx+0Ch] eax +
mov eax [edi+4] +
mov eax [eax+50h] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+10h] eax +
jmp loc_4284AF  +
***
jmp sub_428520  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov edi [esp+28h+arg_4] +
mov ebx [esp+28h+arg_8] +
mov eax [esi+4] +
mov edx [eax+1B0h] +
test byte ptr [edx+1AEh] 10h +
jnz loc_42854A  +
mov ebp [edi+10h] +
mov edx [edi] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+4] +
mov edx [edi+8] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+8] +
mov edx [edi+0Ch] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea edx [ebx+0Ch] +
mov eax [eax+54h] +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] ebp +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+10h] +
mov edx [edi+14h] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+14h] +
mov edx [edi+18h] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+18h] +
mov edx [edi+4] +
add ebx 1Ch +
mov eax [eax+54h] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_24] ecx +
call eax  +
mov eax [esi+4] +
mov edx [edi+1Ch] +
mov eax [eax+54h] +
mov [esp+28h+arg_4] ebx +
mov [esp+28h+arg_0] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+58h] +
lea edi [esp+10h] +
mov ebp [esp+50h] +
mov esi [esp+54h] +
test ebx ebx +
jnz loc_428618  +
jmp loc_428650  +
add esi 20h +
sub ebx 1 +
jz loc_428650  +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] ebp +
call sub_428520  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 20h +
mov [esp] edi +
call sub_411CB0  +
cmp eax 20h +
jz loc_428610  +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0C0h] +
lea esi [esp+60h] +
mov edi [esp+0C4h] +
mov edx esi +
mov ebp [esp+0C8h] +
mov ebx [eax+0A0h] +
mov eax [ebx+40h] +
mov [esp+10h] eax +
mov eax [ebx+44h] +
mov [esp+1Ch] eax +
mov eax [ebx] +
mov [esp+60h] eax +
mov eax [ebx+4] +
mov [esp+64h] eax +
mov eax [ebx+8] +
mov [esp+68h] eax +
mov eax [ebx+0Ch] +
mov [esp+6Ch] eax +
mov eax [ebx+10h] +
mov [esp+70h] eax +
mov eax [ebx+14h] +
mov [esp+74h] eax +
mov eax [ebx+18h] +
mov [esp+78h] eax +
mov eax [ebx+1Ch] +
mov [esp+7Ch] eax +
mov eax [ebx+20h] +
mov [esp+80h] eax +
mov eax [ebx+24h] +
mov [esp+84h] eax +
mov eax [ebx+28h] +
mov [esp+88h] eax +
mov eax [ebx+2Ch] +
mov ecx [esp+0C0h] +
mov [esp+8Ch] eax +
mov eax [ebx+30h] +
mov [esp+90h] eax +
mov eax [ebx+34h] +
mov [esp+94h] eax +
mov eax [ebx+38h] +
mov [esp+98h] eax +
mov eax [ebx+3Ch] +
mov dword ptr [esp+78h] 0 +
mov dword ptr [esp+74h] 0 +
mov [esp+9Ch] eax +
lea eax [ecx+4] +
lea ecx [esp+2Ch] +
mov [esp+14h] eax +
call sub_427AF0  +
lea ecx [esp+2Ch] +
mov [esp+8] ebp +
mov dword ptr [esp+4] 34h +
mov [esp] ecx +
call edi  +
mov eax [ebx+30h] +
xor ebx ebx +
mov edx [esp+1Ch] +
test eax eax +
mov [esp+18h] eax +
jz loc_4287C0  +
mov [esp+0C4h] edi +
mov edi edx +
lea esi [esi+0] +
mov eax [esp+0C0h] +
add ebx 1 +
mov [esp+4] edi +
add edi 20h +
mov [esp+8] esi +
mov [esp] eax +
call sub_428520  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 20h +
mov [esp] esi +
call dword ptr [esp+0C4h]  +
cmp ebx [esp+18h] +
jnz loc_428780  +
mov edi [esp+0C4h] +
mov eax [esp+0C0h] +
xor ebx ebx +
mov eax [eax+0A0h] +
mov eax [eax+214h] +
test eax eax +
mov [esp+18h] eax +
jz loc_4288D7  +
mov eax [esp+10h] +
lea ecx [esp+2Ch] +
mov eax [eax+ebx*4] +
mov edx [eax] +
mov [esp+60h] edx +
mov edx [eax+4] +
mov [esp+64h] edx +
mov edx [eax+8] +
mov [esp+68h] edx +
mov edx [eax+0Ch] +
mov [esp+6Ch] edx +
mov edx [eax+10h] +
mov [esp+70h] edx +
mov edx [eax+14h] +
mov [esp+74h] edx +
mov edx [eax+18h] +
mov [esp+78h] edx +
mov edx [eax+1Ch] +
mov [esp+7Ch] edx +
mov edx [eax+20h] +
mov [esp+80h] edx +
mov edx [eax+24h] +
mov [esp+84h] edx +
mov edx [eax+28h] +
mov [esp+88h] edx +
mov edx [eax+2Ch] +
mov [esp+8Ch] edx +
mov edx [eax+30h] +
mov [esp+90h] edx +
mov eax [eax+34h] +
mov edx esi +
mov dword ptr [esp+70h] 0 +
mov dword ptr [esp+74h] 0 +
mov [esp+94h] eax +
mov eax [esp+14h] +
call sub_4278D0  +
lea eax [esp+2Ch] +
mov [esp+8] ebp +
mov dword ptr [esp+4] 28h +
mov [esp] eax +
call edi  +
cmp dword ptr [esp+64h] 8 +
jz loc_4288CA  +
mov edx [esp+90h] +
mov dword ptr [esp+28h] 0 +
test edx edx +
jz loc_4288E7  +
mov eax [esp+78h] +
mov [esp+8] ebp +
mov [esp] edx +
mov [esp+4] eax +
call edi  +
mov eax [esp+28h] +
test eax eax +
jz loc_4288CA  +
mov [esp] eax +
call free  +
add ebx 1 +
cmp ebx [esp+18h] +
jnz loc_4287E1  +
add esp 0ACh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0C0h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_42E1E0  +
test eax eax +
jz loc_4288CA  +
mov edx [eax+6Ch] +
test edx edx +
jnz loc_4288A9  +
and dword ptr [eax+14h] 0FFFFBFFFh +
lea ecx [esp+28h] +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] ecx +
mov [esp] eax +
call sub_40FBE0  +
test eax eax +
jz loc_4288CA  +
mov edx [esp+28h] +
test edx edx +
jz loc_4288CA  +
jmp loc_4288A9  +
***
mov dword ptr [esp+0] 3 +
call sub_4105E0  +
xor eax eax +
add esp 0FCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+84h] 7Fh +
jnz sub_42897B  +
cmp byte ptr [esp+85h] 45h +
jnz sub_42897B  +
cmp byte ptr [esp+86h] 4Ch +
jnz sub_42897B  +
cmp byte ptr [esp+87h] 46h +
jnz sub_42897B  +
cmp byte ptr [esp+8Ah] 1 +
jnz sub_42897B  +
cmp byte ptr [esp+88h] 1 +
jnz sub_42897B  +
movzx eax byte ptr [esp+89h] +
cmp al 1 +
jz loc_428DE5  +
cmp al 2 +
jnz sub_42897B  +
mov eax [ebx+4] +
mov edi [eax+0Ch] +
mov [esp+24h] eax +
test edi edi +
jnz sub_42897B  +
***
mov eax [esp+arg_20] +
mov eax [eax+78h] +
mov [esp+0] ebx +
call eax  +
test eax eax +
jz loc_428987  +
mov ebp [ebx+0A0h] +
lea eax [ebx+4] +
mov edx esi +
mov [esp+arg_1C] eax +
mov ecx ebp +
call sub_4279B0  +
movzx eax word ptr [ebp+24h] +
cmp ax 4 +
jz sub_42897B  +
mov edx [ebp+18h] +
test edx edx +
jnz loc_428A37  +
cmp ax 1 +
jz sub_42897B  +
cmp dword ptr [ebp+34h] 28h +
jz loc_428A48  +
mov ecx [ebp+38h] +
test ecx ecx +
jnz sub_42897B  +
test edx edx +
jnz loc_428A57  +
mov edi [ebp+38h] +
test edi edi +
jnz sub_42897B  +
mov edx [ebx+4] +
mov ecx [edx+1B0h] +
mov edx [ecx+174h] +
mov edi ecx +
mov [esp+arg_24] ecx +
cmp byte ptr [edx+0Ah] 20h +
jnz sub_42897B  +
mov ecx [ecx+8] +
movzx edx word ptr [ebp+26h] +
cmp ecx edx +
jz loc_428AA9  +
mov esi [edi+16Ch] +
test esi esi +
jz loc_428A8F  +
cmp edx esi +
jz loc_428AA9  +
mov edi [esp+arg_24] +
mov esi [edi+170h] +
test esi esi +
jz loc_428AA1  +
cmp edx esi +
jz loc_428AA9  +
test ecx ecx +
jnz sub_42897B  +
cmp ax 2 +
lea esi [esi+0] +
jz loc_428E3B  +
cmp ax 3 +
jz loc_429009  +
mov esi [ebp+30h] +
test esi esi +
jz loc_428ACE  +
or dword ptr [ebx+28h] 2000h +
mov eax [esp+arg_24] +
mov eax [eax] +
mov [esp+arg_4] 0 +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_410250  +
test eax eax +
mov eax [esp+arg_24] +
jnz loc_428E00  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_428987  +
mov esi [ebp+18h] +
test esi esi +
jnz loc_428E45  +
mov eax [ebp+38h] +
test eax eax +
jz loc_428E27  +
cmp eax 4924924h +
ja sub_42897B  +
imul eax eax +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_40E140  +
test eax eax +
mov esi eax +
jz loc_428987  +
mov eax [ebp+38h] +
mov ecx eax +
mov [esp+arg_18] eax +
mov eax [ebx+0A0h] +
mov [eax+214h] ecx +
mov eax ecx +
mov edi [ebx+0A0h] +
shl eax 2 +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_40E140  +
mov [edi+40h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+40h] +
test eax eax +
jz loc_428987  +
mov eax [esp+arg_B4] +
xor edx edx +
mov ecx esi +
mov edi [esp+arg_18] +
mov [esi] eax +
mov eax [esp+arg_B8] +
test edi edi +
mov [esi+4] eax +
mov eax [esp+arg_BC] +
mov [esi+8] eax +
mov eax [esp+arg_C0] +
mov [esi+0Ch] eax +
mov eax [esp+arg_C4] +
mov [esi+10h] eax +
mov eax [esp+arg_C8] +
mov [esi+14h] eax +
mov eax [esp+arg_CC] +
mov [esi+18h] eax +
mov eax [esp+arg_D0] +
mov [esi+1Ch] eax +
mov eax [esp+arg_D4] +
mov [esi+20h] eax +
mov eax [esp+arg_D8] +
mov [esi+24h] eax +
mov eax [esp+arg_DC] +
mov [esi+28h] eax +
mov eax [esp+arg_E0] +
mov [esi+2Ch] eax +
mov eax [esp+arg_E4] +
mov [esi+30h] eax +
mov eax [esp+arg_E8] +
mov [esi+34h] eax +
jz loc_428C3C  +
mov [esp+arg_28] ebp +
mov ebp [esp+arg_18] +
jmp loc_428C22  +
***
sub eax 0FF00h +
cmp eax 1 +
ja sub_42897B  +
mov eax [esi+8] +
test al 40h +
jnz loc_428DD0  +
mov edx [esi+4] +
cmp edx 4 +
jz loc_428DD0  +
cmp edx 9 +
jz loc_428DD0  +
mov edx [esi+18h] +
test edx edx +
jz loc_428D28  +
test al 2 +
jz loc_428D28  +
cmp dword ptr [esi+4] 8 +
jz loc_428D28  +
mov eax [esi+0Ch] +
xor edx edx +
mov ecx [ebp+14h] +
sub eax [esi+10h] +
sbb edx [esi+14h] +
mov [esp+arg_8] 0 +
mov [esp+arg_4] ecx +
mov [esp+0] eax +
mov [esp+arg_0] edx +
call sub_47A360  +
or edx eax +
jz loc_428D28  +
mov eax [esp+arg_10C] +
and dword ptr [eax+28h] 0FFFFDFFFh +
mov eax [esp+arg_28] +
add edi 1 +
add esi 38h +
cmp [eax+38h] edi +
ja loc_428C63  +
mov ebx [esp+arg_10C] +
mov ebp eax +
mov ecx [ebp+38h] +
test ecx ecx +
jz loc_428E27  +
mov eax [ebx+0A0h] +
mov eax [eax+214h] +
cmp [ebp+3Ch] eax +
jnb loc_4290CD  +
mov eax [ebp+30h] +
test eax eax +
jnz loc_429015  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+44h] 0 +
mov edx [ebp+3Ch] +
test edx edx +
jz loc_428F8D  +
mov eax [ebp+18h] +
test eax eax +
jz loc_428F8D  +
mov eax [ebx+0A0h] +
mov edi 1 +
mov esi [eax+214h] +
cmp esi 1 +
ja loc_428DBB  +
jmp loc_428F77  +
add edi 1 +
cmp edi esi +
jz loc_428F77  +
mov [esp+arg_0] edi +
mov [esp+0] ebx +
call sub_42C2E0  +
test eax eax +
jnz loc_428DB0  +
jmp loc_428987  +
mov ecx [esp+arg_18] +
cmp ecx [esi+20h] +
ja loc_428CDF  +
lea esi [esi+0] +
jmp sub_42897B  +
mov eax [ebx+4] +
cmp dword ptr [eax+0Ch] 1 +
mov [esp+arg_20] eax +
jz loc_4289F2  +
jmp sub_42897B  +
mov edx [eax+8] +
test edx edx +
jz loc_428AFF  +
mov eax [eax+0Ch] +
movzx edx byte ptr [ebp+7] +
cmp edx eax +
jz loc_428AFF  +
test eax eax +
jz loc_428AFF  +
jmp sub_42897B  +
mov edi [ebp+3Ch] +
test edi edi +
lea esi [esi+0] +
jz loc_428D64  +
jmp sub_42897B  +
or dword ptr [ebx+28h] 40h +
nop   +
jmp loc_428AC0  +
xor edi edi +
mov [esp+arg_8] 0 +
mov [esp+arg_0] esi +
mov [esp+arg_4] edi +
mov [esp+0] ebx +
call sub_411E10  +
test eax eax +
jnz loc_428987  +
lea eax [esp+arg_58] +
mov [esp+arg_4] ebx +
mov [esp+arg_0] 28h +
mov [esp+0] eax +
mov [esp+arg_18] eax +
call sub_411C00  +
cmp eax 28h +
jnz loc_428987  +
mov eax [esp+arg_1C] +
lea ecx [esp+arg_B4] +
mov edx [esp+arg_18] +
call sub_4277D0  +
mov eax [ebp+38h] +
test eax eax +
jnz loc_428EC0  +
mov eax [esp+arg_CC] +
lea edx [eax-1] +
cmp edx 0FFFFFEFEh +
mov [ebp+38h] eax +
ja sub_42897B  +
cmp dword ptr [ebp+3Ch] 0FFFFh +
jz loc_429103  +
cmp dword ptr [ebp+30h] 0FFFFh +
jz loc_4290EC  +
cmp eax 1 +
jz loc_428B20  +
cmp eax 4924924h +
ja sub_42897B  +
lea eax [eax+eax*4] +
xor edx edx +
lea eax ds:0FFFFFFD8h[eax*8] +
add eax esi +
adc edx edi +
cmp [ebp+18h] eax +
jnb sub_42897B  +
mov [esp+arg_8] 0 +
mov [esp+arg_0] eax +
mov [esp+arg_4] edx +
mov [esp+0] ebx +
call sub_411E10  +
test eax eax +
jnz loc_428987  +
mov eax [esp+arg_18] +
mov [esp+arg_4] ebx +
mov [esp+arg_0] 28h +
mov [esp+0] eax +
call sub_411C00  +
cmp eax 28h +
jnz loc_428987  +
mov [esp+arg_8] 0 +
mov eax [ebp+18h] +
mov [esp+arg_4] 0 +
mov [esp+0] ebx +
add eax 28h +
mov [esp+arg_0] eax +
call sub_411E10  +
test eax eax +
jz loc_428B0A  +
jmp loc_428987  +
mov [esp+0] ebx +
lea esi [esi+0] +
call sub_42BB50  +
test eax eax +
jz sub_42897B  +
mov eax [esp+arg_24] +
mov eax [eax+30h] +
test eax eax +
jz loc_428FA5  +
mov [esp+0] ebx +
call eax  +
test eax eax +
jz sub_42897B  +
mov eax [ebp+10h] +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_410C10  +
mov esi [ebx+64h] +
test esi esi +
jnz loc_428FC7  +
jmp loc_429000  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_429000  +
mov eax [esi+8Ch] +
mov edx [eax+4] +
cmp edx 4 +
jz loc_428FDA  +
cmp edx 9 +
jnz loc_428FC0  +
mov eax [eax+20h] +
test eax eax +
jz loc_428FC0  +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_42E1E0  +
test eax eax +
jz loc_428FC0  +
test byte ptr [eax+15h] 20h +
jz loc_428FC0  +
or dword ptr [esi+14h] 2000h +
jmp loc_428FC0  +
mov eax [esp+arg_20] +
jmp loc_428989  +
or dword ptr [ebx+28h] 800h +
jmp loc_428AC0  +
cmp eax 7FFFFFFh +
ja sub_42897B  +
shl eax 5 +
mov esi [ebx+0A0h] +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_40E140  +
mov [esi+44h] eax +
mov eax [ebx+0A0h] +
mov esi [eax+44h] +
test esi esi +
jz loc_428987  +
mov [esp+arg_8] 0 +
mov eax [ebp+14h] +
mov [esp+arg_4] 0 +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_411E10  +
test eax eax +
jnz loc_428987  +
mov ecx [ebp+30h] +
mov eax [ebx+0A0h] +
test ecx ecx +
mov edi [eax+44h] +
jz loc_428D7C  +
xor esi esi +
jmp loc_4290AB  +
lea eax [esp+arg_38] +
add esi 1 +
mov [esp+arg_4] edi +
add edi 20h +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_428430  +
cmp [ebp+30h] esi +
jbe loc_428D7C  +
lea eax [esp+arg_38] +
mov [esp+arg_4] ebx +
mov [esp+arg_0] 20h +
mov [esp+0] eax +
call sub_411C00  +
cmp eax 20h +
jz loc_429088  +
jmp loc_428987  +
mov eax [ebx] +
mov dword ptr [ebp+3Ch] 0 +
mov dword ptr [esp+0] offset aWarningSHasACo +
mov [esp+arg_0] eax +
call off_47D664  +
jmp loc_428D64  +
***
mov edx [esp+arg_D4] +
test edx edx +
jz loc_428EDA  +
mov [ebp+30h] edx +
jmp loc_428EDA  +
mov edx [esp+arg_D0] +
mov [ebp+3Ch] edx +
jmp loc_428ECD  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0BCh +
mov eax [esp+0D4h] +
lea ebx [esp+3Ch] +
mov edi [esp+0D0h] +
mov dword ptr [esp+8] 34h +
mov [esp+4] ebx +
mov [esp] eax +
call dword ptr [esp+0E0h]  +
test eax eax +
mov esi eax +
jnz loc_429560  +
cmp byte ptr [esp+3Ch] 7Fh +
jz loc_429180  +
mov dword ptr [esp] 3 +
call sub_4105E0  +
xor eax eax +
add esp 0BCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+3Dh] 45h +
jnz loc_429163  +
cmp byte ptr [esp+3Eh] 4Ch +
jnz loc_429163  +
cmp byte ptr [esp+3Fh] 46h +
jnz loc_429163  +
cmp byte ptr [esp+42h] 1 +
jnz loc_429163  +
cmp byte ptr [esp+40h] 1 +
jnz loc_429163  +
movzx eax byte ptr [esp+41h] +
cmp al 1 +
jz loc_4293F6  +
cmp al 2 +
jnz loc_429163  +
mov eax [edi+4] +
mov ecx [eax+0Ch] +
test ecx ecx +
jnz loc_429163  +
lea eax [edi+4] +
mov edx ebx +
lea ecx [esp+70h] +
call sub_4279B0  +
cmp dword ptr [esp+9Ch] 20h +
jnz loc_429163  +
mov eax [esp+0A0h] +
test eax eax +
jz loc_429163  +
shl eax 6 +
mov [esp] eax +
call sub_412BD0  +
test eax eax +
mov ecx eax +
mov [esp+24h] eax +
jz loc_42916F  +
mov eax [esp+0A0h] +
mov [esp+4] ecx +
shl eax 5 +
mov [esp+8] eax +
mov eax [esp+0D4h] +
add eax [esp+84h] +
mov [esp] eax +
call dword ptr [esp+0E0h]  +
test eax eax +
mov ebx eax +
jnz loc_429593  +
mov eax [esp+0A0h] +
mov ebx eax +
shl ebx 5 +
add ebx [esp+24h] +
test eax eax +
mov [esp+28h] ebx +
jz loc_429582  +
mov ebp [esp+24h] +
xor esi esi +
mov ebx [esp+28h] +
mov dword ptr [esp+20h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 0 +
jmp loc_429288  +
add esi 1 +
add ebp 20h +
add ebx 20h +
cmp [esp+0A0h] esi +
jbe loc_4292E3  +
mov [esp+8] ebx +
mov [esp+4] ebp +
mov [esp] edi +
call sub_428430  +
cmp dword ptr [ebx] 1 +
jnz loc_429276  +
mov eax [ebx+8] +
mov edx [ebx+14h] +
add edx eax +
cmp edx [esp+14h] +
jbe loc_4292B3  +
mov [esp+14h] edx +
mov [esp+1Ch] ebx +
mov edx [esp+18h] +
test edx edx +
jnz loc_429276  +
mov ecx [ebx+1Ch] +
mov edx [ebx+0Ch] +
cmp ecx 1 +
jbe loc_4292CC  +
neg ecx  +
and eax ecx +
and edx ecx +
test eax eax +
jnz loc_429276  +
mov eax [esp+0D4h] +
mov [esp+18h] ebx +
sub eax edx +
mov [esp+20h] eax +
jmp loc_429276  +
***
mov eax [esp+14h] +
test eax eax +
jz loc_429582  +
mov eax [esp+88h] +
mov dword ptr [esp+2Ch] 0 +
test eax eax +
jz loc_429331  +
mov edx [esp+0A8h] +
test edx edx +
jz loc_429331  +
mov ecx [esp+0A4h] +
test ecx ecx +
jz loc_429331  +
imul edx ecx +
mov ecx [esp+1Ch] +
add eax edx +
mov [esp+2Ch] eax +
mov eax [ecx+14h] +
cmp eax [ecx+18h] +
jz loc_4295BA  +
mov eax [esp+14h] +
mov [esp] eax +
call sub_412D60  +
test eax eax +
mov ebp eax +
jz loc_429630  +
mov eax [esp+0A0h] +
xor esi esi +
mov ebx [esp+28h] +
test eax eax +
jz loc_42940F  +
mov [esp+0D0h] edi +
mov edi [esp+0E0h] +
jmp loc_429383  +
add esi 1 +
add ebx 20h +
cmp [esp+0A0h] esi +
jbe loc_429408  +
cmp dword ptr [ebx] 1 +
jnz loc_429370  +
mov eax [ebx+8] +
mov edx [ebx+14h] +
mov ecx [ebx+0Ch] +
add edx eax +
cmp ebx [esp+18h] +
jz loc_429530  +
cmp [esp+1Ch] ebx +
cmovz edx [esp+14h] +
add ecx [esp+20h] +
sub edx eax +
add eax ebp +
mov [esp+8] edx +
mov [esp+4] eax +
mov [esp] ecx +
call edi  +
test eax eax +
jz loc_429370  +
mov [esp+14h] eax +
mov eax [esp+24h] +
mov [esp] eax +
call free  +
mov [esp] ebp +
call free  +
mov dword ptr [esp] 1 +
call sub_4105E0  +
call ds:__imp__errno  +
mov edx [esp+14h] +
mov [eax] edx +
xor eax eax +
jmp loc_429171  +
***
mov eax [edi+4] +
cmp dword ptr [eax+0Ch] 1 +
jz loc_4291BE  +
jmp loc_429163  +
***
mov edi [esp+0D0h] +
mov eax [esp+24h] +
mov [esp] eax +
call free  +
mov eax [esp+2Ch] +
cmp [esp+14h] eax +
jb loc_429540  +
mov eax [esp+3Ch] +
mov [ebp+0] eax +
mov eax [esp+40h] +
mov [ebp+4] eax +
mov eax [esp+44h] +
mov [ebp+8] eax +
mov eax [esp+48h] +
mov [ebp+0Ch] eax +
mov eax [esp+4Ch] +
mov [ebp+10h] eax +
mov eax [esp+50h] +
mov [ebp+14h] eax +
mov eax [esp+54h] +
mov [ebp+18h] eax +
mov eax [esp+58h] +
mov [ebp+1Ch] eax +
mov eax [esp+5Ch] +
mov [ebp+20h] eax +
mov eax [esp+60h] +
mov [ebp+24h] eax +
mov eax [esp+64h] +
mov [ebp+28h] eax +
mov eax [esp+68h] +
mov [ebp+2Ch] eax +
mov eax [esp+6Ch] +
mov [ebp+30h] eax +
mov dword ptr [esp] 8 +
call sub_412BD0  +
test eax eax +
mov esi eax +
jz loc_429613  +
call sub_40D950  +
test eax eax +
mov ebx eax +
jz loc_42960B  +
mov dword ptr [esp] offset aInMemory +
call sub_462210  +
mov [ebx] eax +
mov eax [edi+4] +
mov [ebx+4] eax +
mov eax [esp+14h] +
mov [esi+4] ebp +
mov [esi] eax +
mov eax [ebx+28h] +
mov [ebx+8] esi +
mov dword ptr [ebx+0Ch] offset off_483840 +
mov dword ptr [ebx+38h] 0 +
and eax 0FF80001Fh +
or eax 10000h +
mov [ebx+28h] eax +
and eax 7 +
or eax 8 +
mov dword ptr [ebx+3Ch] 0 +
mov [ebx+28h] al +
mov dword ptr [esp] 0 +
call time  +
or byte ptr [ebx+2Bh] 4 +
mov [ebx+20h] eax +
mov eax [esp+0DCh] +
test eax eax +
jz loc_42957B  +
mov eax [esp+0DCh] +
mov ecx [esp+20h] +
mov [eax] ecx +
add esp 0BCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub ecx eax +
xor eax eax +
jmp loc_42939D  +
***
xor edx edx +
xor ecx ecx +
mov dword ptr [esp+5Ch] 0 +
mov [esp+6Ch] dx +
mov [esp+6Eh] cx +
jmp loc_429429  +
***
mov dword ptr [esp] 1 +
call sub_4105E0  +
call ds:__imp__errno  +
mov [eax] esi +
xor eax eax +
jmp loc_429171  +
***
mov eax ebx +
jmp loc_429171  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
jmp loc_429163  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
mov dword ptr [esp] 1 +
call sub_4105E0  +
call ds:__imp__errno  +
mov [eax] ebx +
xor eax eax +
jmp loc_429171  +
***
mov ecx [esp+2Ch] +
cmp ecx [esp+0D8h] +
jbe loc_429620  +
mov edx [edi+4] +
mov ecx [esp+1Ch] +
mov edx [edx+1B0h] +
add eax [ecx+8] +
cmp [esp+2Ch] eax +
mov edx [edx+14h] +
jbe loc_429331  +
cmp edx 1 +
jbe loc_429331  +
mov ecx [esp+2Ch] +
lea eax [edx+eax-1] +
neg edx  +
and eax edx +
cmp ecx eax +
mov eax [esp+14h] +
cmovbe eax ecx +
mov [esp+14h] eax +
jmp loc_429331  +
***
mov [esp] esi +
call free  +
mov [esp] ebp +
call free  +
jmp loc_42916F  +
***
mov eax [esp+0D8h] +
mov [esp+14h] eax +
jmp loc_429331  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_429171  +
***
mov eax [esp+4] +
movzx edx byte ptr [esp+8] +
shl eax 8 +
add eax edx +
retn   +
***
mov eax [esp+4] +
shr eax 8 +
retn   +
***
mov eax [esp+4] +
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov eax [eax+10h] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov eax [eax] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov eax [eax+4] +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov edx [esp+24h] +
mov eax [esp+20h] +
mov ecx [edx+4] +
cmp [eax+4] ecx +
jz loc_429700  +
mov dword ptr [esp] 1 +
call sub_4105E0  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov esi [eax+0Ch] +
test esi esi +
jz loc_429747  +
mov ebx [edx] +
mov dword ptr [esp+4] 2Fh +
mov [esp] ebx +
call strrchr  +
mov [esp+4] esi +
test eax eax +
lea edx [eax+1] +
cmovnz ebx edx +
mov [esp] ebx +
call strcmp  +
test eax eax +
setz al  +
add esp 14h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
mov eax 1 +
jmp loc_4296F3  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0CCh +
mov ebx [esp+0E0h] +
lea esi [esp+54h] +
mov dword ptr [esp+4] 34h +
mov [esp] esi +
mov [esp+8] ebx +
call sub_411C00  +
cmp eax 34h +
jz loc_4297A1  +
call sub_410390  +
cmp eax 1 +
jz loc_429794  +
mov dword ptr [esp] 3 +
call sub_4105E0  +
xor eax eax +
add esp 0CCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+54h] 7Fh +
jnz loc_429788  +
cmp byte ptr [esp+55h] 45h +
jnz loc_429788  +
cmp byte ptr [esp+56h] 4Ch +
jnz loc_429788  +
cmp byte ptr [esp+57h] 46h +
jnz loc_429788  +
cmp byte ptr [esp+58h] 1 +
jnz loc_429788  +
movzx eax byte ptr [esp+59h] +
cmp al 1 +
jz loc_4299F0  +
cmp al 2 +
jnz loc_429788  +
mov eax [ebx+4] +
mov edi [eax+8] +
test edi edi +
jnz loc_429788  +
mov eax [eax+80h] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_429794  +
mov ebp [ebx+0A0h] +
lea edi [ebx+4] +
mov edx esi +
mov eax edi +
mov ecx ebp +
call sub_4279B0  +
mov eax [ebx+4] +
movzx esi word ptr [ebp+26h] +
mov eax [eax+1B0h] +
mov ecx eax +
mov [esp+18h] eax +
mov eax [eax+8] +
cmp eax esi +
jz loc_4298A4  +
mov edx [ecx+16Ch] +
test edx edx +
jz loc_42982E  +
cmp esi edx +
jz loc_4298A4  +
mov ecx [esp+18h] +
mov edx [ecx+170h] +
test edx edx +
jz loc_429840  +
cmp esi edx +
jz loc_4298A4  +
test eax eax +
jnz loc_429788  +
mov eax off_47D678 +
mov edx [eax] +
test edx edx +
jnz loc_42985E  +
jmp loc_4298A4  +
add eax 4 +
mov edx [eax] +
test edx edx +
jz loc_4298A4  +
cmp dword ptr [edx+4] 5 +
jnz loc_429855  +
mov edx [edx+1B0h] +
mov ecx [edx+174h] +
cmp byte ptr [ecx+0Ah] 20h +
jnz loc_429855  +
cmp esi [edx+8] +
jz loc_429788  +
mov ecx [edx+16Ch] +
test ecx ecx +
jz loc_429891  +
cmp esi ecx +
jz loc_429788  +
mov edx [edx+170h] +
test edx edx +
jz loc_429855  +
cmp esi edx +
jnz loc_429855  +
jmp loc_429788  +
***
mov esi [ebp+14h] +
test esi esi +
jz loc_429788  +
cmp word ptr [ebp+24h] 4 +
jnz loc_429788  +
cmp dword ptr [ebp+2Ch] 20h +
jnz loc_429788  +
mov edx [ebp+18h] +
mov eax [ebp+30h] +
test edx edx +
jz loc_4298D9  +
cmp eax 0FFFFh +
jz loc_429AFF  +
cmp eax 1 +
jbe loc_429945  +
cmp eax 7FFFFFFh +
ja loc_429788  +
mov ecx [ebp+14h] +
add eax 7FFFFFFh +
xor edx edx +
shl eax 5 +
lea esi [eax+ecx] +
cmp ecx esi +
jnb loc_429788  +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] esi +
mov [esp+8] edx +
mov [esp] ebx +
call sub_411E10  +
test eax eax +
jnz loc_429794  +
lea eax [esp+88h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 20h +
mov [esp] eax +
call sub_411C00  +
cmp eax 20h +
jnz loc_429794  +
mov dword ptr [esp+0Ch] 0 +
mov eax [ebp+14h] +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
mov [esp+4] eax +
call sub_411E10  +
test eax eax +
jnz loc_429788  +
mov eax [ebp+30h] +
mov [esp] ebx +
shl eax 5 +
mov [esp+4] eax +
call sub_40E140  +
test eax eax +
mov edi eax +
mov [esp+1Ch] eax +
jz loc_429794  +
mov ecx [ebp+30h] +
mov eax [ebx+0A0h] +
test ecx ecx +
mov [eax+44h] edi +
jz loc_429A07  +
lea eax [esp+88h] +
xor esi esi +
mov [esp+14h] ebp +
mov ebp eax +
jmp loc_4299CF  +
mov [esp+8] edi +
add esi 1 +
add edi 20h +
mov [esp+4] ebp +
mov [esp] ebx +
call sub_428430  +
mov eax [esp+14h] +
cmp [eax+30h] esi +
jbe loc_429A05  +
mov [esp+8] ebx +
mov dword ptr [esp+4] 20h +
mov [esp] ebp +
call sub_411C00  +
cmp eax 20h +
jz loc_4299B0  +
jmp loc_429794  +
***
mov eax [ebx+4] +
cmp dword ptr [eax+8] 1 +
jz loc_4297DF  +
lea esi [esi+0] +
jmp loc_429788  +
***
mov ebp eax +
mov eax [esp+18h] +
mov eax [eax] +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
mov [esp+4] eax +
call sub_410250  +
test eax eax +
jnz loc_429A34  +
mov eax [esp+18h] +
mov edx [eax+8] +
test edx edx +
jnz loc_429794  +
mov eax [esp+18h] +
mov eax [eax+30h] +
test eax eax +
jz loc_429A4C  +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_429788  +
mov eax [ebp+30h] +
xor esi esi +
mov edi [esp+1Ch] +
test eax eax +
jnz loc_429A6D  +
jmp loc_429B71  +
mov eax [ebp+30h] +
add esi 1 +
add edi 20h +
cmp eax esi +
jbe loc_429A86  +
mov [esp+8] esi +
mov [esp+4] edi +
mov [esp] ebx +
call sub_42E760  +
test eax eax +
jnz loc_429A60  +
jmp loc_429794  +
***
test eax eax +
jz loc_429B71  +
mov edi [esp+1Ch] +
shl eax 5 +
xor esi esi +
lea ecx [edi+eax] +
mov eax edi +
lea esi [esi+0] +
mov edx [eax+14h] +
test edx edx +
jz loc_429AAF  +
add edx [eax+8] +
cmp esi edx +
cmovb esi edx +
add eax 20h +
cmp eax ecx +
jnz loc_429AA0  +
lea eax [esp+88h] +
mov [esp+4] eax +
mov [esp] ebx +
call sub_411DC0  +
test eax eax +
jnz loc_429AF1  +
mov eax [esp+0A0h] +
cmp eax esi +
jnb loc_429AF1  +
mov [esp+0Ch] eax +
mov [esp+8] esi +
mov [esp+4] ebx +
mov dword ptr [esp] offset aWarningBIsTrun +
call off_47D664  +
mov eax [ebp+10h] +
mov [ebx+74h] eax +
mov eax [ebx+4] +
jmp loc_429796  +
***
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] edx +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_411E10  +
test eax eax +
jnz loc_429794  +
lea esi [esp+2Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 28h +
mov [esp] esi +
call sub_411C00  +
cmp eax 28h +
jnz loc_429794  +
lea eax [esp+88h] +
mov edx esi +
mov ecx eax +
mov eax edi +
call sub_4277D0  +
mov eax [esp+0A8h] +
test eax eax +
jnz loc_429B69  +
mov eax [ebp+30h] +
jmp loc_4298D9  +
***
mov [ebp+30h] eax +
jmp loc_4298D9  +
***
xor esi esi +
jmp loc_429AB6  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
mov ebx esi +
sub ebx ecx +
lea edx ds:28h[ebx*4] +
mov [esp+28h+var_24] edx +
call sub_40E220  +
test eax eax +
jz loc_429D3A  +
xor edx edx +
cmp esi edi +
mov dword ptr [eax] 0 +
lea ecx [ebp+edi*4+0] +
mov dword ptr [eax+4] 1 +
jbe loc_429D1F  +
mov esi [ecx+edx*4] +
mov [eax+edx*4+28h] esi +
add edx 1 +
cmp edx ebx +
jnz loc_429D11  +
test edi edi +
mov [eax+24h] ebx +
jnz loc_429D32  +
mov edx [esp+28h+arg_4] +
test edx edx +
jz loc_429D32  +
or byte ptr [eax+20h] 30h +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_429D32  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_4] +
mov ebp [esp+1Ch+arg_0] +
mov edi [esi] +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_18] edi +
call sub_40E140  +
test eax eax +
mov ebx eax +
jz loc_429DC0  +
mov eax [esi+0Ch] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_1C] ebx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
mov byte ptr [ebx+edi-1] 0 +
mov [esp+1Ch+var_14] 100h +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] ebp +
call sub_40F660  +
test eax eax +
jz loc_429DC0  +
mov edx [esi+4] +
mov ecx [esi+14h] +
mov dword ptr [eax+54h] 0 +
mov dword ptr [eax+40h] 1 +
mov [eax+24h] edx +
mov [eax+50h] ecx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
mov edi eax +
call sub_40E140  +
test eax eax +
mov ebx eax +
jz loc_429E12  +
mov byte ptr [eax] 2Eh +
sub edi 1 +
add esi 2 +
lea eax [eax+1] +
mov [esp+14h+var_C] edi +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_18] edx +
call strlen  +
mov [esp+18h+var_18] ebx +
mov esi eax +
lea eax [eax+2] +
mov [esp+18h+var_14] eax +
call sub_40E140  +
test eax eax +
mov ebx eax +
jz loc_429E66  +
mov byte ptr [eax] 2Eh +
add edi 1 +
mov byte ptr [eax+1] 7Ah +
lea eax [eax+2] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call memcpy  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_28] offset a_interp_0 +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_14] edx +
call sub_40F280  +
test eax eax +
jz loc_429E9D  +
test byte ptr [eax+14h] 2 +
jnz loc_429FE8  +
mov [esp+2Ch+var_1C] 2 +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_28] offset a_dynamic_1 +
mov [esp+2Ch+var_2C] eax +
call sub_40F280  +
cmp eax 1 +
mov eax [esp+2Ch+var_14] +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
test eax eax +
jz loc_429ED7  +
movzx eax byte ptr [eax+3] +
and eax 1 +
cmp al 1 +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
mov edi [esp+2Ch+var_18] +
mov eax [edi+0A0h] +
mov ebp [edi+64h] +
mov eax [eax+934h] +
cmp dword ptr [eax+0Ch] 1 +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
cmp dword ptr [eax+34h] 1 +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
test ebp ebp +
jz loc_429F62  +
mov eax [ebp+14h] +
mov ebx ebp +
mov [esp+2Ch+var_10] eax +
mov edx eax +
jmp loc_429F13  +
mov edx [ebx+14h] +
and edx 2 +
jz loc_429F37  +
mov esi [ebx] +
mov edi offset a_note +
mov ecx 5 +
cmps   +
jnz loc_429F37  +
add [esp+2Ch+var_1C] 1 +
cmp dword ptr [ebx+40h] 2 +
jz loc_429FDC  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_429F10  +
test [esp+2Ch+var_10] 400h +
jz loc_429F5A  +
jmp loc_429FF5  +
test byte ptr [ebp+15h] 4 +
jnz loc_429FF5  +
mov ebp [ebp+0Ch] +
test ebp ebp +
nop   +
jnz loc_429F50  +
mov edi [esp+2Ch+var_18] +
mov eax [edi+4] +
mov ebx [eax+1B0h] +
mov eax [ebx+0A8h] +
test eax eax +
jz loc_429F8F  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] edx +
call eax  +
cmp eax 0FFFFFFFFh +
jz loc_429FFF  +
add [esp+10h] eax +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+1] +
imul eax [esp+10h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebx+40h] 2 +
jnz loc_429F10  +
mov edx [ebx+14h] +
test dl 2 +
jz loc_429F13  +
mov esi [ebx] +
mov ecx 5 +
mov edi offset a_note +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jnz loc_429F13  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_429FA6  +
jmp loc_429F3E  +
mov [esp+2Ch+var_1C] 4 +
jmp loc_429EA5  +
add [esp+2Ch+var_1C] 1 +
jmp loc_429F62  +
mov dword ptr [esp+8] offset aGet_program_he +
mov dword ptr [esp+4] 0FD2h +
mov dword ptr [esp+0] offset a____Binutil_10 +
call sub_410560  +
nop   +
lea esi [esi+0] +
mov ecx [eax+4] +
mov ecx [ecx+1B0h] +
mov ecx [ecx+2Ch] +
test ecx ecx +
jz loc_42A041  +
sub esp 1Ch +
mov [esp+4] edx +
mov [esp+0] eax +
call ecx  +
add esp 1Ch +
retn   +
test dword ptr [edx+0Ch] 800082h +
mov eax 1 +
jnz locret_42A03F  +
mov edx [edx+10h] +
cmp edx offset off_47D468 +
jz locret_42A03F  +
mov eax [edx+14h] +
shr eax 0Ch +
and eax 1 +
retn   +
***
mov ebx [ecx+4] +
cmp dword ptr [ebx+4] 5 +
jz loc_42A0B0  +
mov edx [edx+10h] +
cmp [edx+94h] eax +
jz loc_42A0A8  +
mov ecx [edx+3Ch] +
cmp eax [ecx+94h] +
jz loc_42A0A1  +
cmp edx offset off_47D510 +
jz loc_42A0A8  +
mov eax 1 +
pop ebx  +
retn   +
mov ebx [edx+38h] +
test ebx ebx +
jnz loc_42A092  +
xor eax eax +
pop ebx  +
retn   +
mov ecx [ecx+0A0h] +
test ecx ecx +
jz loc_42A07C  +
mov ecx [edx+28h] +
test ecx ecx +
jz loc_42A07C  +
mov edx [edx+10h] +
cmp edx offset off_47D510 +
jnz loc_42A07F  +
jmp loc_42A09A  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_8] +
mov eax [ebp+14h] +
and eax 2100000h +
cmp eax 2000000h +
jz loc_42A100  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
test eax eax +
jnz loc_42A0F2  +
mov ecx [ebp+8Ch] +
mov eax [ecx+20h] +
test eax eax +
jz loc_42A194  +
cmp eax 0FFFFFFFEh +
jz loc_42A208  +
mov eax [ebp+6Ch] +
mov edx 1 +
test eax eax +
jz loc_42A267  +
mov ecx [ecx+7Ch] +
mov esi [ebp+24h] +
mov [esp+2Ch+var_14] ecx +
add esi eax +
test ecx ecx +
jz loc_42A1BB  +
mov [esp+2Ch+var_10] ebp +
mov ebx ecx +
mov ebp edi +
mov edi esi +
mov esi edx +
jmp loc_42A18C  +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_42A179  +
cmp eax offset off_47D510 +
jz loc_42A179  +
mov edx [ebp+4] +
sub edi 4 +
mov edx [edx+54h] +
mov [esp+2Ch+var_28] edi +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov eax [ebx+8Ch] +
mov ebx [eax+7Ch] +
cmp [esp+2Ch+var_14] ebx +
jz loc_42A1B0  +
test ebx ebx +
jz loc_42A1B0  +
test esi esi +
jz loc_42A150  +
mov eax ebx +
jmp loc_42A157  +
mov eax [ecx+74h] +
test eax eax +
jz loc_42A1E6  +
mov eax [eax+14h] +
test eax eax +
jz loc_42A1E6  +
mov [ecx+20h] eax +
jmp loc_42A120  +
mov esi edi +
mov edi ebp +
mov ebp [esp+2Ch+var_10] +
mov eax [ebp+6Ch] +
sub esi 4 +
cmp esi eax +
jnz loc_42A2C5  +
mov edx [edi+4] +
mov edx [edx+54h] +
mov [esp+2Ch+arg_4] eax +
mov eax [ebp+14h] +
shr eax 11h +
and eax 1 +
mov [esp+2Ch+arg_0] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp edx  +
mov eax [edi+0A0h] +
mov eax [eax+934h] +
mov eax [eax+8] +
test eax eax +
jz loc_42A297  +
mov esi [ebp+8] +
mov eax [eax+esi*4] +
mov eax [eax+14h] +
jmp loc_42A1A2  +
mov eax [ecx+7Ch] +
xor edx edx +
mov eax [eax+8Ch] +
mov eax [eax+78h] +
mov esi [eax+8Ch] +
mov eax [eax+94h] +
mov esi [esi+20h] +
mov eax [eax+0A0h] +
cmp dword ptr [eax+928h] 0 +
jnz loc_42A237  +
mov edx [eax+68h] +
mov eax [eax+218h] +
sub esi edx +
mov eax [eax+esi*4] +
movzx esi byte ptr [eax+0Ch] +
lea edx [esi-6] +
cmp dl 1 +
ja loc_42A25F  +
nop   +
mov eax [eax+14h] +
movzx esi byte ptr [eax+0Ch] +
lea edx [esi-6] +
cmp dl 1 +
jbe loc_42A250  +
mov eax [eax+1Ch] +
jmp loc_42A1A2  +
mov eax [ebp+24h] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] eax +
call sub_40E140  +
mov ecx [ebp+8Ch] +
xor edx edx +
test eax eax +
mov [ebp+6Ch] eax +
mov [ecx+30h] eax +
jnz loc_42A130  +
mov dword ptr [ebx] 1 +
jmp loc_42A0F2  +
mov [esp+2Ch+var_28] 0C8Bh +
mov [esp+2Ch+var_2C] offset a____Binutil_10 +
call sub_410530  +
mov eax [edi+0A0h] +
mov ecx [ebp+8Ch] +
mov eax [eax+934h] +
mov eax [eax+8] +
jmp loc_42A1FD  +
mov [esp+2Ch+var_24] offset aBfd_elf_set_gr +
mov [esp+2Ch+var_28] 0CDAh +
mov [esp+2Ch+var_2C] offset a____Binutil_10 +
call sub_410560  +
jmp sub_42A2F0  +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_40F280  +
test eax eax +
jz loc_42A658  +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [edi+14h] +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call sub_40F740  +
test eax eax +
jz loc_42A690  +
mov edx [edi+24h] +
mov ecx [edi+50h] +
mov ebx [edi+54h] +
mov [eax+24h] edx +
mov edx [edi+40h] +
mov [eax+50h] ecx +
mov [eax+54h] ebx +
mov [eax+40h] edx +
mov eax 1 +
jmp loc_42A651  +
xor eax eax +
jmp loc_42A651  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 9Ch +
mov eax [esp+0A8h+arg_0] +
lea edi [esp+0A8h+var_7C] +
mov [esp+0A8h+var_A4] offset aSLd +
mov [esp+0A8h+var_A8] edi +
mov [esp+0A8h+var_8C] ecx +
mov [esp+0A8h+var_9C] eax +
mov eax [esp+0A8h+arg_4] +
mov [esp+0A8h+var_A0] eax +
call sprintf  +
mov eax edi +
mov edx [eax] +
add eax 4 +
lea ebx [edx-1010101h] +
not edx  +
and ebx edx +
and ebx 80808080h +
jz loc_42A6DE  +
mov ecx ebx +
shr ecx 10h +
test ebx 8080h +
cmovz ebx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add bl bl +
sbb eax 3 +
sub eax edi +
add eax 1 +
mov [esp+0A8h+var_A4] eax +
mov [esp+0A8h+var_A8] esi +
call sub_40E140  +
test eax eax +
mov ebx eax +
jz loc_42A790  +
mov [esp+0A8h+var_A4] edi +
mov [esp+0A8h+var_A8] eax +
call strcpy  +
mov [esp+0A8h+var_A0] 100h +
mov [esp+0A8h+var_A4] ebx +
mov [esp+0A8h+var_A8] esi +
call sub_40F660  +
test eax eax +
mov ecx eax +
jz loc_42A790  +
mov eax [ebp+0] +
mov [ecx+24h] eax +
mov eax [esp+0A8h+var_8C] +
mov eax [eax] +
mov dword ptr [ecx+54h] 0 +
mov dword ptr [ecx+40h] 2 +
mov [ecx+50h] eax +
mov eax [esi+0A0h] +
mov edx [eax+930h] +
mov eax 1 +
mov edi [edx+8] +
cmp [esp+0A8h+arg_0] edi +
jz loc_42A7A0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 9Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+0A8h+arg_4] +
mov eax esi +
call sub_42A630  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+38h+var_38] ecx +
mov [esp+38h+var_1C] ecx +
call strlen  +
mov [esp+38h+var_38] edi +
add eax 6 +
mov [esp+38h+var_34] eax +
call sub_40E140  +
test eax eax +
mov ebx eax +
jz loc_42A852  +
mov eax [esp+38h+arg_0] +
mov esi offset a_rela +
mov ecx [esp+38h+var_1C] +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_34] offset aSS_3 +
test eax eax +
mov eax offset a_rel +
cmovz esi eax +
mov [esp+38h+var_2C] ecx +
mov [esp+38h+var_30] esi +
call sprintf  +
mov eax [edi+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_38] eax +
call sub_455970  +
cmp eax 0FFFFFFFFh +
mov [ebp+0] eax +
setnz al  +
add esp 2Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [eax+4] +
mov [esp+28h+var_1C] ecx +
mov ecx [edx] +
mov edi [eax+1B0h] +
test ecx ecx +
jz loc_42A892  +
mov [esp+28h+var_24] 0B19h +
mov [esp+28h+var_28] offset a____Binutil_10 +
call sub_410530  +
mov [esp+28h+var_24] 38h +
mov [esp+28h+var_28] esi +
call sub_40E220  +
mov edx [esp+28h+arg_4] +
test edx edx +
mov ebx eax +
mov [ebp+0] eax +
jz loc_42A923  +
mov dword ptr [eax] 0FFFFFFFFh +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_42A910  +
mov eax [edi+174h] +
mov dword ptr [ebx+4] 4 +
movzx edx byte ptr [eax+4] +
mov [ebx+28h] edx +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+18h] 0 +
shl eax cl +
mov [ebx+24h] eax +
mov eax 1 +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi+174h] +
mov dword ptr [ebx+4] 9 +
movzx edx byte ptr [eax+3] +
jmp loc_42A8CE  +
mov eax [esp+28h+arg_0] +
mov edx ebx +
mov ecx [esp+28h+var_1C] +
mov [esp+28h+var_28] eax +
mov eax esi +
call sub_42A7C0  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_42A8B5  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov eax [edi+4] +
mov ebx [esi+8Ch] +
mov ebp [esi] +
mov eax [eax+1B0h] +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_8] +
mov edx [eax+4] +
test edx edx +
jnz loc_42AC20  +
mov eax [eax] +
test eax eax +
jz loc_42AD90  +
test byte ptr [eax+0Ch] 1 +
jz loc_42A9A5  +
mov edx [esi+14h] +
test dh 20h +
jz loc_42A9A5  +
cmp byte ptr [ebp+1] 64h +
jz loc_42AE40  +
mov eax [edi+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_455970  +
cmp eax 0FFFFFFFFh +
mov [ebx] eax +
jz loc_42AD47  +
mov edx [esi+14h] +
mov [esp+2Ch+var_10] 0 +
mov eax edx +
and eax 1 +
mov [esp+2Ch+var_18] eax +
jnz loc_42A9F3  +
test byte ptr [esi+18h] 1 +
jz loc_42ACD2  +
mov eax [esi+1Ch] +
mov [ebx+0Ch] eax +
mov ecx [esi+40h] +
mov eax [esi+24h] +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 0 +
cmp ecx 1Eh +
mov [ebx+18h] eax +
mov dword ptr [ebx+1Ch] 0 +
ja loc_42AD63  +
mov eax 1 +
shl eax cl +
mov ecx edx +
and ecx 2000000h +
mov [ebx+24h] eax +
mov eax 11h +
mov [ebx+2Ch] esi +
mov dword ptr [ebx+30h] 0 +
mov [esp+2Ch+var_14] ecx +
jnz loc_42AA5C  +
mov ecx edx +
mov al 8 +
and ecx 103h +
cmp ecx 1 +
mov ecx 1 +
cmovnz eax ecx +
mov ecx [ebx+4] +
test ecx ecx +
jnz loc_42AC28  +
mov [ebx+4] eax +
mov ecx eax +
cmp ecx 0Bh +
jz loc_42AEA6  +
jbe loc_42AC80  +
cmp ecx 6FFFFFFDh +
jz loc_42AE80  +
ja loc_42ADD0  +
cmp ecx 11h +
jz loc_42AE16  +
cmp ecx 6FFFFFF6h +
jnz loc_42AAB8  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
cmp byte ptr [eax+0Ah] 40h +
setnz al  +
movzx eax al +
shl eax 2 +
mov [ebx+28h] eax +
mov eax [esp+2Ch+var_18] +
test eax eax +
jz loc_42AAC4  +
or dword ptr [ebx+8] 2 +
test dl 8 +
jnz loc_42AACD  +
or dword ptr [ebx+8] 1 +
test dl 10h +
jz loc_42AAD6  +
or dword ptr [ebx+8] 4 +
test edx 800000h +
jz loc_42AAFD  +
mov eax [ebx+8] +
mov ecx eax +
or ecx 10h +
test edx 1000000h +
mov [ebx+8] ecx +
mov ecx [esi+78h] +
mov [ebx+28h] ecx +
jz loc_42AAFD  +
or eax 30h +
mov [ebx+8] eax +
mov eax [esp+2Ch+var_14] +
test eax eax +
jnz loc_42AB19  +
mov eax [esi+8Ch] +
mov eax [eax+74h] +
test eax eax +
jz loc_42AB19  +
or dword ptr [ebx+8] 200h +
test dh 4 +
jz loc_42AB56  +
mov eax [esi+24h] +
or dword ptr [ebx+8] 400h +
test eax eax +
jnz loc_42AB56  +
test dh 1 +
jnz loc_42AB56  +
mov ecx [esi+0A4h] +
mov dword ptr [ebx+18h] 0 +
test ecx ecx +
jz loc_42AB56  +
mov eax [ecx+0Ch] +
add eax [ecx+8] +
test eax eax +
mov [ebx+18h] eax +
jz loc_42AB56  +
mov dword ptr [ebx+4] 8 +
mov eax edx +
and eax 2008000h +
cmp eax 8000h +
jz loc_42AD57  +
and edx 4 +
jz loc_42ABE0  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax] +
test eax eax +
jz loc_42ABA0  +
mov ecx [ebx+40h] +
mov edx [ebx+50h] +
mov [esp+2Ch+var_18] ecx +
add ecx edx +
test ecx ecx +
jz loc_42ABA0  +
movzx ecx byte ptr [eax] +
and ecx 3 +
cmp cl 2 +
jz loc_42ACE0  +
cmp byte ptr [eax+2] 0 +
js loc_42ACE0  +
movzx ecx byte ptr [esi+19h] +
lea eax [ebx+3Ch] +
lea edx [ebx+4Ch] +
shr cl 2 +
and ecx 1 +
test byte ptr [esi+19h] 4 +
mov [esp+2Ch+var_2C] ecx +
mov ecx ebp +
cmovz edx eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov eax edi +
call sub_42A860  +
test eax eax +
jnz loc_42ABE0  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
lea esi [esi+0] +
mov eax [esp+2Ch+var_1C] +
mov ebp [ebx+4] +
mov eax [eax+5Ch] +
test eax eax +
jz loc_42AC0A  +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] edi +
call eax  +
test eax eax +
jnz loc_42AC0A  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
cmp ebp 8 +
jnz loc_42AC20  +
mov eax [esi+24h] +
test eax eax +
jz loc_42AC20  +
mov dword ptr [ebx+4] 8 +
lea esi [esi+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx 8 +
jnz loc_42AA6C  +
cmp eax 1 +
jnz loc_42AAB8  +
mov eax [esp+2Ch+var_18] +
test eax eax +
jz loc_42AAC4  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] offset aWarningSection +
call off_47D664  +
mov dword ptr [ebx+4] 1 +
mov edx [esi+14h] +
mov eax edx +
and eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax edx +
and eax 2000000h +
mov [esp+2Ch+var_14] eax +
jmp loc_42AAB8  +
cmp ecx 5 +
jz loc_42AE66  +
jbe loc_42AEC0  +
cmp ecx 6 +
jz loc_42AE00  +
cmp ecx 9 +
nop   +
lea esi [esi+0] +
jnz loc_42AAB8  +
mov eax [edi+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1ACh] 4 +
jz loc_42AAB8  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+3] +
mov [ebx+28h] eax +
jmp loc_42AAB8  +
mov dword ptr [ebx+0Ch] 0 +
jmp loc_42A9F9  +
mov eax [esp+2Ch+var_18] +
test eax eax +
jz loc_42AD11  +
mov ecx [ebx+3Ch] +
test ecx ecx +
jnz loc_42AD11  +
mov eax [esp+2Ch+var_10] +
lea edx [ebx+3Ch] +
mov ecx ebp +
mov [esp+2Ch+var_2C] 0 +
mov [esp+2Ch+var_28] eax +
mov eax edi +
call sub_42A860  +
test eax eax +
jz loc_42AD47  +
mov edx [ebx+50h] +
test edx edx +
jz loc_42ABE0  +
mov edx [ebx+4Ch] +
test edx edx +
jnz loc_42ABE0  +
mov eax [esp+2Ch+var_10] +
lea edx [ebx+4Ch] +
mov ecx ebp +
mov [esp+2Ch+var_2C] 1 +
mov [esp+2Ch+var_28] eax +
mov eax edi +
call sub_42A860  +
test eax eax +
jnz loc_42ABE0  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
jmp loc_42AC20  +
or dword ptr [ebx+8] 80000000h +
jmp loc_42AB68  +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] offset aBErrorAlignmen +
call off_47D664  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [esi+17h] 10h +
jz loc_42A9A5  +
mov eax [edi+28h] +
shr eax 5 +
test eax 28000h +
jz loc_42AEF5  +
cmp byte ptr [ebp+1] 7Ah +
jnz loc_42A9A5  +
mov edx ebp +
mov eax edi +
call sub_429DD0  +
test eax eax +
mov ebp eax +
jnz loc_42A9A5  +
jmp loc_42AD47  +
cmp ecx 6FFFFFFEh +
jnz loc_42AE22  +
mov eax [ebx+20h] +
mov dword ptr [ebx+28h] 0 +
test eax eax +
jnz loc_42AF25  +
mov eax [edi+0A0h] +
mov eax [eax+23Ch] +
mov [ebx+20h] eax +
jmp loc_42AAB8  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+6] +
mov [ebx+28h] eax +
jmp loc_42AAB8  +
mov dword ptr [ebx+28h] 4 +
jmp loc_42AAB8  +
cmp ecx 6FFFFFFFh +
jnz loc_42AAB8  +
mov dword ptr [ebx+28h] 2 +
jmp loc_42AAB8  +
cmp byte ptr [ebp+6] 5Fh +
jnz loc_42A9A5  +
or edx 8000000h +
mov [esi+14h] edx +
mov [esp+2Ch+var_10] 1 +
mov dword ptr [ebx] 0FFFFFFFFh +
jmp loc_42A9DE  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+8] +
mov [ebx+28h] eax +
jmp loc_42AAB8  +
mov eax [ebx+20h] +
mov dword ptr [ebx+28h] 0 +
test eax eax +
jnz loc_42AF60  +
mov eax [edi+0A0h] +
mov eax [eax+238h] +
mov [ebx+20h] eax +
jmp loc_42AAB8  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
mov [ebx+28h] eax +
jmp loc_42AAB8  +
cmp ecx 4 +
jnz loc_42AAB8  +
mov eax [edi+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1ACh] 8 +
jz loc_42AAB8  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+4] +
mov [ebx+28h] eax +
jmp loc_42AAB8  +
movzx eax byte ptr [esi+18h] +
and eax 30h +
cmp al 10h +
jnz loc_42A9A5  +
mov edx ebp +
mov eax edi +
call sub_429E20  +
test eax eax +
jz loc_42AD47  +
cmp byte ptr [ebp+1] 7Ah +
jz loc_42AF86  +
mov ebp eax +
lea esi [esi+0] +
jmp loc_42A9A5  +
mov ecx [edi+0A0h] +
mov ecx [ecx+23Ch] +
test ecx ecx +
jz loc_42AAB8  +
cmp eax ecx +
jz loc_42AAB8  +
mov [esp+2Ch+var_28] 0C08h +
mov [esp+2Ch+var_2C] offset a____Binutil_10 +
call sub_410530  +
jmp loc_42AC5E  +
mov ecx [edi+0A0h] +
mov ecx [ecx+238h] +
test ecx ecx +
jz loc_42AAB8  +
cmp eax ecx +
jz loc_42AAB8  +
mov [esp+2Ch+var_28] 0BFCh +
jmp loc_42AF49  +
mov [esp+2Ch+var_28] 0B87h +
mov [esp+2Ch+var_2C] offset a____Binutil_10 +
mov [esp+2Ch+var_18] eax +
call sub_410530  +
mov eax [esp+2Ch+var_18] +
mov ebp eax +
jmp loc_42A9A5  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] offset a8_8x +
mov [esp+1Ch+var_18] 20h +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
push ebx  +
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+60h] +
mov [esp+10h+var_C] ebx +
movzx edx word ptr [esi] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea edx [ebx+2] +
mov eax [eax+60h] +
mov [esp+10h+var_C] edx +
movzx edx word ptr [esi+2] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea edx [ebx+4] +
mov eax [eax+60h] +
mov [esp+10h+var_C] edx +
movzx edx word ptr [esi+4] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea edx [ebx+6] +
mov eax [eax+60h] +
mov [esp+10h+var_C] edx +
movzx edx word ptr [esi+6] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea ecx [ebx+8] +
mov edx [esi+8] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea ecx [ebx+0Ch] +
mov edx [esi+0Ch] +
add ebx 10h +
mov eax [eax+54h] +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] ecx +
call eax  +
mov eax [edi+4] +
mov edx [esi+10h] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
add esi 4 +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ebx +
add ebx 4 +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
mov edx [esi+4] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] esi +
call eax  +
lea edx [esi+2] +
mov [ebx] ax +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+4] +
mov [ebx+2] ax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+8] +
add esi 0Ch +
mov [ebx+4] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+8] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+0Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
lea edx [esi+4] +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+6] +
mov [ebx+4] ax +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+8] +
add esi 0Ch +
mov [ebx+6] ax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+8] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+0Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [esp+1Ch+arg_4] +
mov eax [eax+4] +
mov eax [eax+58h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov edx [esp+1Ch+arg_8] +
mov [edx] ax +
add esp 1Ch +
retn   +
***
jmp sub_42B3B0  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov ecx [esp+arg_8] +
mov eax [eax+4] +
mov eax [eax+60h] +
mov [esp+arg_4] ecx +
movzx edx word ptr [edx] +
mov [esp+arg_0] edx +
jmp eax  +
***
xor eax eax +
add edx 1 +
movzx ecx byte ptr [edx-1] +
test cl cl +
jz locret_42B402  +
shl eax 4 +
add eax ecx +
mov ecx eax +
and ecx 0F0000000h +
jz loc_42B3D6  +
xor eax ecx +
add edx 1 +
shr ecx 18h +
xor eax ecx +
movzx ecx byte ptr [edx-1] +
test cl cl +
jnz loc_42B3E1  +
retn   +
***
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
mov eax 1505h +
test dl dl +
jz loc_42B438  +
mov ebx eax +
add ecx 1 +
shl ebx 5 +
add edx ebx +
add eax edx +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_42B424  +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esp+14h+arg_0] +
cmp esi 937h +
jbe loc_42B4C1  +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] ebx +
call sub_40E220  +
test eax eax +
mov [ebx+0A0h] eax +
jz loc_42B4E0  +
mov edx [esp+14h+arg_8] +
mov esi 1 +
mov [eax+920h] edx +
movzx edx byte ptr [ebx+28h] +
and edx 18h +
cmp dl 8 +
jz loc_42B4B9  +
mov [esp+14h+var_10] 40h +
mov [esp+14h+var_14] ebx +
call sub_40E220  +
test eax eax +
jz loc_42B4E0  +
mov edx [ebx+0A0h] +
mov [edx+934h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax+1Ch] 0FFFFFFFFh +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 0F0h +
mov [esp+14h+var_14] offset a____Binutil_10 +
call sub_410530  +
jmp loc_42B455  +
xor esi esi +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+4] +
mov dword ptr [esp+4] 938h +
mov [esp] eax +
mov [esp+8] edx +
call sub_42B440  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov eax [ebx+4] +
mov eax [eax+78h] +
mov [esp] ebx +
call eax  +
xor edx edx +
test eax eax +
jz loc_42B569  +
mov esi [ebx+0A0h] +
mov dword ptr [esp+4] 14h +
mov [esp] ebx +
call sub_40E220  +
xor edx edx +
mov [esi+930h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+930h] +
test eax eax +
setnz dl  +
add esp 14h +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_42B580  +
***
mov ecx [esp+arg_8] +
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
test ecx ecx +
jz loc_42B592  +
jmp loc_42B5A0  +
mov eax offset unk_497A12 +
retn   +
push ebp  +
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 3Ch +
mov eax [eax+0A0h] +
mov ebx [eax+40h] +
test ebx ebx +
jz loc_42B6D7  +
cmp [eax+214h] edx +
jbe loc_42B6D7  +
lea edi [ebx+edx*4] +
mov ebx [edi] +
mov eax [ebx+30h] +
test eax eax +
jz loc_42B5F0  +
mov eax [ebx+18h] +
cmp eax ecx +
jbe loc_42B6E1  +
mov eax [ebx+30h] +
add eax ecx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+4] +
cmp eax 5FFFFFFFh +
jbe loc_42B742  +
mov ebp [ebx+18h] +
mov [esp+4Ch+var_28] ecx +
mov eax [ebx+10h] +
mov [esp+4Ch+var_2C] edx +
mov edx [ebx+14h] +
lea ecx [ebp+1] +
cmp ecx 1 +
mov [esp+4Ch+var_24] ecx +
jbe loc_42B6D0  +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
call sub_411E10  +
mov edx [esp+4Ch+var_2C] +
mov ecx [esp+4Ch+var_28] +
test eax eax +
jnz loc_42B73E  +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_20] ecx +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_48] eax +
call sub_40E140  +
mov edx [esp+4Ch+var_28] +
mov ecx [esp+4Ch+var_20] +
test eax eax +
mov [esp+4Ch+var_2C] eax +
jz loc_42B73E  +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_24] ecx +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_28] edx +
call sub_411C00  +
mov edx [esp+4Ch+var_28] +
mov ecx [esp+4Ch+var_24] +
cmp ebp eax +
jz loc_42B767  +
call sub_410390  +
sub eax 1 +
jz loc_42B6B5  +
mov [esp+4Ch+var_4C] 12h +
call sub_4105E0  +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] eax +
call sub_40E390  +
mov ebx [edi] +
mov dword ptr [ebx+18h] 0 +
nop   +
mov dword ptr [ebx+30h] 0 +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esi+0A0h] +
mov ebp [edi+3Ch] +
mov edi off_47D664 +
cmp edx ebp +
mov edx [ebx] +
jz loc_42B731  +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_2C] ecx +
call sub_42B580  +
mov edx [ebx+18h] +
mov ecx [esp+4Ch+var_2C] +
mov [esp+4Ch+var_3C] eax +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] offset aBInvalidString +
call edi  +
xor eax eax +
jmp loc_42B5E2  +
cmp ecx edx +
jnz loc_42B6F6  +
mov edx eax +
mov eax offset a_shstrtab +
jmp loc_42B711  +
mov ebx [edi] +
jmp loc_42B6D0  +
cmp eax 3 +
jz loc_42B5FE  +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] offset aBAttemptToLoad +
call off_47D664  +
xor eax eax +
jmp loc_42B5E2  +
mov eax [esp+4Ch+var_2C] +
mov byte ptr [eax+ebp] 0 +
mov eax [edi] +
mov edi [esp+4Ch+var_2C] +
mov [eax+30h] edi +
jmp loc_42B5D2  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_4] +
mov esi [eax+4] +
cmp dword ptr [esi+4] 5 +
jnz loc_42BAA0  +
mov ebx [esp+3Ch+arg_8] +
test ebx ebx +
jz loc_42B859  +
mov eax [esp+3Ch+arg_0] +
mov ebp [eax+0A0h] +
mov edi [ebp+208h] +
test edi edi +
jz loc_42B900  +
mov ebx [ebp+40h] +
mov eax edi +
mov edx [eax+1Ch] +
cmp [ebx+edx*4] ecx +
jz loc_42B7DC  +
mov eax [eax+3Ch] +
test eax eax +
jnz loc_42B7C5  +
add ebp 48h +
cmp ecx ebp +
cmovz eax edi +
mov [esp+3Ch+var_24] eax +
mov ebp [esi+1B0h] +
xor ebx ebx +
mov edx [esp+3Ch+arg_14] +
mov esi [ecx+10h] +
mov edi [ecx+14h] +
mov eax [ebp+174h] +
test edx edx +
movzx eax byte ptr [eax+5] +
mov [esp+3Ch+var_1C] eax +
jz loc_42B90D  +
mov eax [esp+3Ch+var_1C] +
xor edx edx +
imul eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
add eax esi +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
adc edx edi +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_411E10  +
test eax eax +
jz loc_42B865  +
xor esi esi +
mov [esp+3Ch+arg_10] 0 +
test ebx ebx +
jz loc_42B84D  +
mov [esp+3Ch+var_3C] ebx +
call free  +
test esi esi +
jz loc_42B859  +
mov [esp+3Ch+var_3C] esi +
call free  +
mov eax [esp+3Ch+arg_10] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+var_1C] +
imul esi [esp+3Ch+arg_8] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] eax +
call sub_411C00  +
cmp eax esi +
jnz loc_42B837  +
mov eax [esp+3Ch+var_24] +
test eax eax +
jz loc_42B936  +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_42B936  +
mov edx [eax+14h] +
xor esi esi +
mov eax [eax+10h] +
mov [esp+3Ch+var_20] edx +
mov edx [esp+3Ch+arg_18] +
mov [esp+3Ch+var_24] eax +
test edx edx +
jz loc_42BA73  +
mov eax [esp+3Ch+arg_C] +
xor edx edx +
mov [esp+3Ch+var_30] 0 +
shl eax 2 +
add eax [esp+3Ch+var_24] +
adc edx [esp+3Ch+var_20] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_411E10  +
test eax eax +
jz loc_42BA1A  +
mov [esp+3Ch+arg_10] 0 +
jmp loc_42B841  +
mov [esp+3Ch+var_24] 0 +
jmp loc_42B7E0  +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] eax +
call sub_412C10  +
test eax eax +
mov [esp+3Ch+arg_14] eax +
jnz loc_42BABC  +
mov [esp+3Ch+arg_10] 0 +
jmp loc_42B859  +
xor esi esi +
mov [esp+3Ch+arg_18] 0 +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_18] 0 +
test eax eax +
jz loc_42BA4A  +
mov eax [esp+3Ch+arg_8] +
mov edi [esp+3Ch+arg_10] +
lea eax [eax+eax*4] +
lea eax [edi+eax*4] +
cmp edi eax +
mov [esp+3Ch+var_24] eax +
jnb loc_42B841  +
mov edx [esp+3Ch+arg_14] +
mov [esp+3Ch+var_14] esi +
mov esi ebp +
mov [esp+3Ch+var_10] ebx +
mov ebx [esp+3Ch+arg_18] +
mov ebp edx +
jmp loc_42B999  +
add edi 14h +
add ebp [esp+3Ch+var_1C] +
test ebx ebx +
lea eax [ebx+4] +
cmovnz ebx eax +
cmp [esp+3Ch+var_24] edi +
jbe loc_42BA0D  +
mov eax [esi+174h] +
mov ecx [esp+3Ch+arg_0] +
mov eax [eax+20h] +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] ecx +
call eax  +
test eax eax +
jnz loc_42B984  +
mov eax ebp +
xor edx edx +
mov esi [esp+3Ch+var_14] +
sub eax [esp+3Ch+arg_14] +
mov ebx [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] offset aBSymbolNumberL +
div  [esp+3Ch+var_1C] +
add eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] eax +
call off_47D664  +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+arg_10] 0 +
test eax eax +
jz loc_42B841  +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_42B841  +
mov esi [esp+3Ch+var_14] +
mov ebx [esp+3Ch+var_10] +
jmp loc_42B841  +
mov eax [esp+3Ch+arg_8] +
lea edi ds:0[eax*4] +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] eax +
call sub_411C00  +
cmp eax edi +
jnz loc_42B8F2  +
jmp loc_42B940  +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 14h +
mov [esp+3Ch+var_3C] eax +
call sub_412C10  +
test eax eax +
mov [esp+3Ch+arg_10] eax +
jz loc_42B841  +
mov [esp+3Ch+var_18] eax +
jmp loc_42B954  +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] eax +
call sub_412C10  +
test eax eax +
mov esi eax +
jz loc_42B8F2  +
mov [esp+3Ch+arg_18] eax +
jmp loc_42B8BD  +
mov [esp+3Ch+var_34] offset aBfd_elf_get_el +
mov [esp+3Ch+var_38] 18Ch +
mov [esp+3Ch+var_3C] offset a____Binutil_10 +
call sub_410560  +
mov ebx eax +
jmp loc_42B808  +
***
sub esp 4 +
mov ebx [esp+4+arg_8] +
mov eax [esp+4+arg_4] +
mov esi [esp+4+arg_C] +
mov ecx [ebx+8] +
mov edx [eax+1Ch] +
test ecx ecx +
jz loc_42BB10  +
mov eax [esp+4+arg_0] +
call loc_42B5A0  +
test eax eax +
jz loc_42BB47  +
test esi esi +
jz loc_42BB04  +
cmp byte ptr [eax] 0 +
nop   +
jnz loc_42BB04  +
mov eax [esi] +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
movzx edx byte ptr [ebx+0Ch] +
mov eax offset unk_497A12 +
and edx 0Fh +
cmp dl 3 +
jnz loc_42BAF8  +
mov ecx [ebx+10h] +
mov ebx [esp+4+arg_0] +
mov edx [ebx+0A0h] +
cmp ecx [edx+214h] +
jnb loc_42BAF8  +
mov ebx [edx+40h] +
mov edx [edx+3Ch] +
mov ecx [ebx+ecx*4] +
mov ecx [ecx] +
test ecx ecx +
jz loc_42BAF8  +
jmp loc_42BAEB  +
mov eax offset aNull_0 +
jmp loc_42BB04  +
***
mov edi 1 +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+44h+arg_0] +
mov eax [ebp+0A0h] +
mov ebx [ebp+64h] +
mov eax [eax+908h] +
test ebx ebx +
mov [esp+44h+var_24] eax +
jnz loc_42BBAB  +
jmp loc_42BC07  +
mov eax [ebp+4] +
mov eax [eax+1B0h] +
mov eax [eax+164h] +
test eax eax +
jz loc_42BBA4  +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] offset aBWarningSh_lin +
call eax  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_42BC07  +
mov eax [ebx+8Ch] +
test byte ptr [eax+8] 80h +
jz loc_42BBA4  +
mov edx [eax+1Ch] +
test edx edx +
jz loc_42BB80  +
mov ecx [ebp+0A0h] +
cmp edx [ecx+214h] +
jb loc_42BC90  +
mov eax [ebx+94h] +
xor edi edi +
mov [esp+44h+var_38] edx +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_44] offset aBSh_linkDInSec +
mov [esp+44h+var_40] eax +
call off_47D664  +
mov eax [ebx+8Ch] +
xor ecx ecx +
mov [eax+64h] ecx +
lea esi [esi+0] +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_42BBAB  +
mov eax [esp+44h+var_24] +
cmp eax 0FFFFFFFFh +
jz loc_42BCE0  +
test eax eax +
jz loc_42BCE0  +
mov [esp+44h+var_28] 0 +
mov edx edi +
mov eax [ebp+0A0h] +
mov edi [esp+44h+var_28] +
mov eax [eax+904h] +
mov ebx [eax+edi*4] +
test ebx ebx +
jz loc_42BCB0  +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_42BCB0  +
mov eax [ebx+30h] +
test eax eax +
jz loc_42BCB0  +
mov edi [ebx+18h] +
lea esi [eax+4] +
shr edi 2 +
jmp loc_42BC65  +
mov eax [eax+8Ch] +
mov ecx [ebx+2Ch] +
mov [eax+78h] ecx +
add esi 4 +
sub edi 1 +
jz loc_42BCCB  +
mov ecx [esi] +
mov eax [ecx+2Ch] +
test eax eax +
jnz loc_42BC56  +
mov eax [ecx+4] +
cmp eax 9 +
jz loc_42BC80  +
cmp eax 4 +
jnz loc_42BCF0  +
mov eax [ebx+2Ch] +
sub dword ptr [eax+24h] 4 +
jmp loc_42BC62  +
mov ecx [ecx+40h] +
mov ecx [ecx+edx*4] +
mov ecx [ecx+2Ch] +
test ecx ecx +
jz loc_42BBD0  +
mov [eax+64h] ecx +
jmp loc_42BC00  +
mov eax [esp+44h+var_28] +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] offset aBSectionGroupE +
mov [esp+44h+var_3C] eax +
call off_47D664  +
xor edx edx +
add [esp+44h+var_28] 1 +
mov eax [esp+44h+var_28] +
cmp [esp+44h+var_24] eax +
jnz loc_42BC26  +
mov edi edx +
add esp 3Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx off_47D664 +
mov ecx [ecx] +
mov [esp+44h+var_20] edx +
mov edx [ebx+2Ch] +
test ecx ecx +
mov edx [edx] +
mov [esp+44h+var_1C] edx +
mov edx [ebp+0A0h] +
mov edx [edx+3Ch] +
mov [esp+44h+var_18] edx +
mov edx offset unk_497A12 +
jnz loc_42BD43  +
mov ecx [esp+44h+var_1C] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] edx +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_34] ecx +
mov [esp+44h+var_44] offset aBUnknownDSecti +
call eax  +
xor edx edx +
jmp loc_42BC62  +
mov edx [esp+44h+var_18] +
mov eax ebp +
call loc_42B5A0  +
mov edx eax +
mov eax [esi] +
mov eax [eax+4] +
jmp loc_42BD1B  +
***
mov eax [esp+8] +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
test eax eax +
setnz al  +
movzx eax al +
retn   +
***
mov ecx [esp+8] +
mov edx [ecx+0Ch] +
mov edx [edx+24h] +
test edx edx +
jnz loc_42BDC0  +
mov eax [esp+14h] +
mov ecx [esp+8] +
mov eax [eax+38h] +
add [ecx+4] eax +
xor eax eax +
retn   +
***
mov edx [ecx+8] +
test edx edx +
jz loc_42BDAE  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
mov esi [esp+44h] +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_42BDF5  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_42BDE8  +
mov eax [esi+0A0h] +
mov edx [eax+934h] +
mov edx [edx+3Ch] +
test edx edx +
jnz loc_42BE30  +
mov edx [ebx+0A0h] +
mov edx [edx+20h] +
mov [eax+20h] edx +
mov eax [esi+0A0h] +
mov edx [eax+934h] +
mov dword ptr [edx+3Ch] 1 +
mov edx [ebx+0A0h] +
mov edx [edx+20Ch] +
mov [eax+20Ch] edx +
mov edx [ebx+0A0h] +
mov eax [esi+0A0h] +
movzx edx byte ptr [edx+7] +
mov [eax+7] dl +
mov [esp+4] esi +
mov [esp] ebx +
call sub_456650  +
mov eax [ebx+0A0h] +
mov [esp+10h] eax +
mov ebp [eax+40h] +
mov eax [esi+0A0h] +
mov edx [eax+40h] +
test edx edx +
jz loc_42BDE8  +
test ebp ebp +
jz loc_42BDE8  +
mov eax [eax+214h] +
test eax eax +
jz loc_42BDE8  +
lea eax [edx+eax*4] +
mov edi edx +
mov [esp+8] eax +
jmp loc_42BEAD  +
add edi 4 +
cmp edi [esp+8] +
jz loc_42BDE8  +
mov ecx [edi] +
test ecx ecx +
jz loc_42BEA0  +
cmp dword ptr [ecx+4] 8 +
jnz loc_42BEA0  +
mov eax [ecx+18h] +
test eax eax +
mov [esp+0Ch] eax +
jz loc_42BEA0  +
mov eax [ecx+20h] +
test eax eax +
mov [esp+18h] eax +
jz loc_42BED6  +
mov eax [ecx+1Ch] +
test eax eax +
jnz loc_42BEA0  +
mov eax [esp+10h] +
mov ebx [eax+214h] +
test ebx ebx +
jz loc_42BEA0  +
mov esi [ecx+8] +
xor eax eax +
mov [esp+14h] edi +
jmp loc_42BEF7  +
add eax 1 +
cmp eax ebx +
jz loc_42BF65  +
mov edx [ebp+eax*4+0] +
cmp [edx+8] esi +
jnz loc_42BEF0  +
mov edi [ecx+24h] +
cmp [edx+24h] edi +
jnz loc_42BEF0  +
mov edi [ecx+28h] +
cmp [edx+28h] edi +
jnz loc_42BEF0  +
mov edi [esp+0Ch] +
cmp edi [edx+18h] +
jnz loc_42BEF0  +
mov edi [ecx+0Ch] +
cmp [edx+0Ch] edi +
jnz loc_42BEF0  +
mov edi [edx+20h] +
cmp [esp+18h] edi +
mov [esp+1Ch] edi +
jnz loc_42BF6E  +
mov edi [ecx+1Ch] +
cmp [edx+1Ch] edi +
jz loc_42BEF0  +
mov eax [esp+18h] +
mov edi [esp+14h] +
mov [esp+1Ch] eax +
cmp dword ptr [ecx+1Ch] 0 +
jnz loc_42BF4E  +
mov eax [edx+1Ch] +
mov [ecx+1Ch] eax +
cmp dword ptr [esp+18h] 0 +
jnz loc_42BEA0  +
mov eax [esp+1Ch] +
mov [ecx+20h] eax +
jmp loc_42BEA0  +
***
mov edi [esp+14h] +
jmp loc_42BEA0  +
***
mov edi [esp+14h] +
jmp loc_42BF42  +
***
mov edx [esp+arg_0] +
mov eax [edx+0A0h] +
mov ecx [eax+914h] +
test ecx ecx +
jz loc_42C01A  +
mov esi [eax+918h] +
test esi esi +
jz loc_42C010  +
mov eax [esp+arg_4] +
mov ecx [esp+arg_8] +
movzx ebx word ptr [eax+30h] +
movsx eax bx +
shr eax 1Fh +
and ebx 7FFFh +
mov [ecx] eax +
mov eax offset unk_497A12 +
jz loc_42C009  +
cmp ebx 1 +
jz loc_42C01F  +
mov edx [edx+0A0h] +
cmp ebx [edx+238h] +
jbe loc_42C027  +
mov esi [edx+244h] +
test esi esi +
jz loc_42C009  +
mov edx [esi+18h] +
test edx edx +
jnz loc_42BFF7  +
jmp loc_42C002  +
mov edx [edx+14h] +
test edx edx +
jz loc_42C002  +
movzx ecx word ptr [edx+6] +
cmp ecx ebx +
jnz loc_42BFF0  +
mov eax [edx+10h] +
mov esi [esi+1Ch] +
test esi esi +
jnz loc_42BFE2  +
pop ebx  +
pop esi  +
retn   +
mov ebx [eax+91Ch] +
test ebx ebx +
jnz loc_42BFA4  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov eax offset aBase +
pop ebx  +
pop esi  +
retn   +
mov ecx [edx+240h] +
lea eax [ebx+ebx*4] +
pop ebx  +
pop esi  +
lea eax [ecx+eax*8] +
mov eax [eax-10h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+4Ch] +
mov ebx [esp+44h] +
mov edi [esp+48h] +
cmp eax 1 +
jz loc_42C1A0  +
jb loc_42C186  +
cmp eax 2 +
jnz loc_42C17E  +
mov eax [edi+10h] +
test eax eax +
jz loc_42C2D0  +
mov esi [eax] +
mov eax [esp+40h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+0CCh] +
test eax eax +
jz loc_42C1F6  +
mov edx [esp+40h] +
mov [esp+8] edi +
mov [esp+4] ebx +
mov [esp] edx +
call eax  +
test eax eax +
mov ebp eax +
jz loc_42C1F6  +
mov [esp+8] esi +
mov dword ptr [esp+4] offset aS_10 +
mov [esp] ebx +
call fprintf  +
mov eax [edi+10h] +
test eax eax +
jz loc_42C212  +
test byte ptr [eax+15h] 10h +
jz loc_42C212  +
mov eax [edi+18h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_410F10  +
lea eax [esp+1Ch] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] edi +
mov [esp] eax +
call sub_42BF80  +
test eax eax +
mov esi eax +
jz loc_42C12C  +
mov eax [esp+1Ch] +
mov [esp+8] esi +
test eax eax +
jnz loc_42C220  +
mov dword ptr [esp+4] offset a11s +
mov [esp] ebx +
call fprintf  +
movzx eax byte ptr [edi+25h] +
cmp al 1 +
jz loc_42C2A5  +
jb loc_42C16A  +
cmp al 2 +
jz loc_42C280  +
cmp al 3 +
jnz loc_42C261  +
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 0Bh +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a_protected +
call fwrite  +
mov [esp+8] ebp +
mov dword ptr [esp+4] offset aS_12 +
mov [esp] ebx +
call fprintf  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+4] +
mov [esp+4] ebx +
mov [esp] eax +
call fputs  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 4 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aElf +
call fwrite  +
mov eax [edi+8] +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_410F10  +
mov eax [edi+0Ch] +
mov [esp] ebx +
mov dword ptr [esp+4] offset aLx_0 +
mov [esp+8] eax +
call fprintf  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+40h] +
mov ebp [edi+4] +
mov [esp+8] edi +
mov [esp+4] ebx +
mov [esp] eax +
call sub_41DBD0  +
jmp loc_42C0AE  +
***
mov eax [edi+1Ch] +
jmp loc_42C0DA  +
***
mov dword ptr [esp+4] offset aS_11 +
mov [esp] ebx +
call fprintf  +
mov [esp] esi +
mov esi 0Ah +
call strlen  +
sub esi eax +
test esi esi +
jle loc_42C12C  +
mov [esp+4] ebx +
mov dword ptr [esp] 20h +
call putc  +
sub esi 1 +
jnz loc_42C247  +
jmp loc_42C12C  +
***
mov [esp+8] eax +
mov dword ptr [esp+4] offset a0x02x +
mov [esp] ebx +
call fprintf  +
jmp loc_42C16A  +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 8 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a_hidden +
call fwrite  +
jmp loc_42C16A  +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 0Ah +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a_internal +
call fwrite  +
jmp loc_42C16A  +
***
mov esi offset aNone_1 +
jmp loc_42C078  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+48h+arg_0] +
mov esi [ebx+0A0h] +
mov edx [esi+214h] +
cmp edx [esp+48h+arg_4] +
jbe loc_42C48B  +
mov eax ds:dword_4A885C +
add eax 1 +
cmp eax 3 +
mov ds:dword_4A885C eax +
ja loc_42C493  +
mov eax [esp+48h+arg_4] +
shl eax 2 +
mov [esp+48h+var_30] eax +
mov eax [esi+40h] +
mov edx offset unk_497A12 +
mov edi [esp+48h+var_30] +
mov ebp [eax+edi] +
mov eax [esi+3Ch] +
mov ecx [ebp+0] +
test ecx ecx +
jnz loc_42C6E4  +
mov eax [ebx+4] +
mov ecx [eax+1B0h] +
mov eax [ebp+4] +
cmp eax 0Ah +
jz loc_42C7B4  +
jbe loc_42C4F0  +
cmp eax 12h +
jz loc_42CD73  +
jbe loc_42C660  +
cmp eax 6FFFFFFDh +
jz loc_42CCD8  +
jbe loc_42CC32  +
cmp eax 6FFFFFFEh +
jz loc_42C958  +
cmp eax 6FFFFFFFh +
jnz loc_42CC40  +
cmp dword ptr [ebp+28h] 2 +
jnz loc_42C450  +
mov eax [ebx+0A0h] +
mov edi [esp+48h+arg_4] +
mov ecx [ebp+0] +
mov [eax+914h] edi +
mov eax [ebx+0A0h] +
mov [eax+160h] ecx +
mov ecx [ebp+4] +
mov [eax+164h] ecx +
mov ecx [ebp+8] +
mov [eax+168h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+16Ch] ecx +
mov ecx [ebp+10h] +
mov [eax+170h] ecx +
mov ecx [ebp+14h] +
mov [eax+174h] ecx +
mov ecx [ebp+18h] +
mov [eax+178h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+17Ch] ecx +
mov ecx [ebp+20h] +
mov [eax+180h] ecx +
mov ecx [ebp+24h] +
mov [eax+184h] ecx +
mov ecx [ebp+28h] +
mov [eax+188h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+18Ch] ecx +
mov ecx [ebp+30h] +
mov [eax+190h] ecx +
mov ecx [ebp+34h] +
mov [eax+194h] ecx +
mov eax edi +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
call sub_42D300  +
jmp loc_42C452  +
mov ebx ebp +
lea esi [esi+0] +
xor eax eax +
mov edx ds:dword_4A8854 +
test edx edx +
jz loc_42C468  +
cmp ds:dword_4A8858 ebx +
jz loc_42C7C0  +
mov edi ds:dword_4A885C +
lea edx [edi-1] +
test edx edx +
mov ds:dword_4A885C edx +
jnz loc_42C48B  +
mov ds:dword_4A8854 0 +
mov ds:dword_4A8858 ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ds:dword_4A8858 ebx +
jz loc_42CC20  +
mov ds:dword_4A8854 0 +
shl edx 2 +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] ebx +
call sub_40E220  +
mov ds:dword_4A8858 ebx +
mov ds:dword_4A8854 eax +
mov esi [esp+48h+arg_4] +
lea edi ds:0[esi*4] +
add eax edi +
mov ebp [eax] +
mov [esp+48h+var_30] edi +
test ebp ebp +
jnz loc_42C7D0  +
mov dword ptr [eax] 1 +
mov esi [ebx+0A0h] +
jmp loc_42C324  +
cmp eax 4 +
jz loc_42C9F3  +
ja loc_42C700  +
cmp eax 1 +
jz loc_42CC10  +
nop   +
lea esi [esi+0] +
jb loc_42C7B4  +
cmp eax 2 +
jz loc_42C7E8  +
cmp eax 3 +
jnz loc_42CC40  +
mov edi [ebp+2Ch] +
test edi edi +
jnz loc_42C7B4  +
mov eax [esp+48h+arg_4] +
cmp [esi+3Ch] eax +
jz loc_42D102  +
mov edi [ebx+0A0h] +
mov ecx [esp+48h+arg_4] +
mov esi [edi+90Ch] +
mov eax [edi+40h] +
mov [esp+48h+var_2C] esi +
mov esi [eax+esi*4] +
cmp [esi+1Ch] ecx +
jz loc_42D1AB  +
mov esi [edi+910h] +
mov ecx [eax+esi*4] +
mov [esp+48h+var_28] esi +
mov esi [esp+48h+arg_4] +
cmp [ecx+1Ch] esi +
jz loc_42C618  +
mov esi [esp+48h+var_2C] +
test esi esi +
jz loc_42C591  +
mov ecx [esp+48h+var_28] +
test ecx ecx +
jnz loc_42CC10  +
mov ecx [edi+214h] +
cmp ecx 1 +
jbe loc_42CC10  +
mov [esp+48h+var_28] edx +
mov edx edi +
mov esi 1 +
mov [esp+48h+var_2C] ebp +
mov edi ecx +
mov ebp ebx +
mov ecx edx +
mov ebx [esp+48h+arg_4] +
jmp loc_42C5CE  +
add esi 1 +
cmp esi edi +
jz loc_42CC06  +
mov eax [ecx+40h] +
mov eax [eax+esi*4] +
cmp [eax+1Ch] ebx +
jnz loc_42C5C0  +
cmp esi ebx +
jz loc_42C448  +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] ebp +
call sub_42C2E0  +
test eax eax +
jz loc_42C448  +
mov ecx [ebp+0A0h] +
cmp [ecx+90Ch] esi +
jz loc_42D1A3  +
cmp [ecx+910h] esi +
jnz loc_42C5C0  +
mov ebx ebp +
mov edx [esp+48h+var_28] +
mov edi ecx +
mov ebp [esp+48h+var_2C] +
add edi 128h +
mov ecx 0Eh +
mov esi ebp +
movs   +
mov edi [esp+48h+var_30] +
mov ecx [ebx+0A0h] +
lea eax [ecx+128h] +
mov ecx [ecx+40h] +
mov [ecx+edi] eax +
mov edi [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] edi +
call sub_42D300  +
jmp loc_42C452  +
cmp eax 10h +
ja loc_42CE85  +
cmp eax 0Eh +
lea esi [esi+0] +
jnb loc_42CC10  +
cmp eax 0Bh +
jnz loc_42CC40  +
mov esi [ebx+0A0h] +
mov eax [esi+910h] +
cmp eax [esp+48h+arg_4] +
jz loc_42C7B4  +
mov ecx [ecx+174h] +
mov edi [ebp+28h] +
movzx ecx byte ptr [ecx+5] +
cmp edi ecx +
jnz loc_42C450  +
mov ecx [ebp+18h] +
imul edi [ebp+20h] +
cmp edi ecx +
ja loc_42CF28  +
test eax eax +
mov eax [esp+48h+arg_4] +
jz loc_42D036  +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBWarningMultip +
call off_47D664  +
mov eax 1 +
jmp loc_42C452  +
mov edx eax +
mov eax ebx +
call loc_42B5A0  +
test eax eax +
mov edx eax +
jz loc_42C450  +
jmp loc_42C341  +
cmp eax 8 +
ja loc_42C9F3  +
cmp eax 7 +
lea esi [esi+0] +
jnb loc_42CC10  +
cmp eax 5 +
jz loc_42CC10  +
cmp eax 6 +
jnz loc_42CC40  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_42D300  +
test eax eax +
jz loc_42C450  +
mov eax [ebx+0A0h] +
mov edx [ebp+1Ch] +
mov ecx [eax+214h] +
cmp edx ecx +
ja loc_42CF41  +
mov esi [eax+40h] +
mov edx [esi+edx*4] +
test edx edx +
jz loc_42C450  +
cmp dword ptr [edx+4] 3 +
jz loc_42C7B4  +
mov eax [eax+910h] +
test eax eax +
jnz loc_42CF6D  +
cmp ecx 1 +
jbe loc_42C7B4  +
mov edx [esi+4] +
mov eax 1 +
cmp dword ptr [edx+4] 0Bh +
jnz loc_42C7AD  +
jmp loc_42D026  +
mov edx [esi+eax*4] +
cmp dword ptr [edx+4] 0Bh +
jz loc_42D026  +
add eax 1 +
cmp eax ecx +
jnz loc_42C7A0  +
mov eax 1 +
jmp loc_42C452  +
mov edi [esp+48h+var_30] +
mov dword ptr [edx+edi] 0 +
jmp loc_42C468  +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBWarningLoopIn +
call off_47D664  +
xor eax eax +
jmp loc_42C48B  +
mov esi [ebx+0A0h] +
mov eax [esi+90Ch] +
cmp eax [esp+48h+arg_4] +
jz loc_42C7B4  +
mov ecx [ecx+174h] +
mov edi [ebp+28h] +
movzx ecx byte ptr [ecx+5] +
cmp edi ecx +
jnz loc_42C450  +
mov ecx [ebp+18h] +
imul edi [ebp+20h] +
cmp edi ecx +
ja loc_42CF28  +
test eax eax +
mov eax [esp+48h+arg_4] +
jnz loc_42D268  +
mov [esi+90Ch] eax +
mov ecx [ebp+0] +
mov eax [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov [eax+48h] ecx +
mov ecx [ebp+4] +
mov [eax+4Ch] ecx +
mov ecx [ebp+8] +
mov [eax+50h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+54h] ecx +
mov ecx [ebp+10h] +
mov [eax+58h] ecx +
mov ecx [ebp+14h] +
mov [eax+5Ch] ecx +
mov ecx [ebp+18h] +
mov [eax+60h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+64h] ecx +
mov ecx [ebp+20h] +
mov [eax+68h] ecx +
mov ecx [ebp+24h] +
mov [eax+6Ch] ecx +
mov ecx [ebp+28h] +
mov [eax+70h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+74h] ecx +
mov ecx [ebp+30h] +
mov [eax+78h] ecx +
mov ecx [ebp+34h] +
mov [eax+7Ch] ecx +
mov ecx [ebx+0A0h] +
mov eax [ecx+40h] +
lea ebp [ecx+48h] +
mov [eax+edi] ebp +
mov esi [ebx+28h] +
mov eax esi +
and esi 0FF80001Fh +
shr eax 5 +
and eax 3FFFFh +
mov edi eax +
or edi 10h +
shl edi 5 +
or esi edi +
mov [ebx+28h] esi +
test byte ptr [ecx+50h] 2 +
jz loc_42C8CB  +
test al 40h +
jnz loc_42D2CE  +
mov esi [ebx+0A0h] +
mov eax [esi+208h] +
test eax eax +
jz loc_42C902  +
mov edi [esp+48h+arg_4] +
cmp [eax+1Ch] edi +
mov edx [esp+48h+arg_4] +
jnz loc_42C8F9  +
jmp loc_42C7B4  +
cmp [eax+1Ch] edx +
jz loc_42C7B4  +
mov eax [eax+3Ch] +
test eax eax +
nop   +
jnz loc_42C8F0  +
mov eax [esp+48h+arg_4] +
mov ecx [esi+214h] +
add eax 1 +
cmp ecx eax +
jbe loc_42C935  +
mov edi [esi+40h] +
mov ebp [esp+48h+arg_4] +
jmp loc_42C927  +
add eax 1 +
cmp ecx eax +
jbe loc_42C935  +
mov edx [edi+eax*4] +
cmp dword ptr [edx+4] 12h +
jnz loc_42C920  +
cmp [edx+1Ch] ebp +
jnz loc_42C920  +
cmp eax ecx +
jz loc_42D294  +
cmp eax [esp+48h+arg_4] +
jz loc_42C7B4  +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_42C2E0  +
jmp loc_42C452  +
mov eax [ebx+0A0h] +
mov edi [esp+48h+arg_4] +
mov ecx [ebp+0] +
mov [eax+91Ch] edi +
mov eax [ebx+0A0h] +
mov [eax+198h] ecx +
mov ecx [ebp+4] +
mov [eax+19Ch] ecx +
mov ecx [ebp+8] +
mov [eax+1A0h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+1A4h] ecx +
mov ecx [ebp+10h] +
mov [eax+1A8h] ecx +
mov ecx [ebp+14h] +
mov [eax+1ACh] ecx +
mov ecx [ebp+18h] +
mov [eax+1B0h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+1B4h] ecx +
mov ecx [ebp+20h] +
mov [eax+1B8h] ecx +
mov ecx [ebp+24h] +
mov [eax+1BCh] ecx +
mov ecx [ebp+28h] +
mov [eax+1C0h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+1C4h] ecx +
mov ecx [ebp+30h] +
mov [eax+1C8h] ecx +
mov ecx [ebp+34h] +
mov [eax+1CCh] ecx +
mov eax edi +
jmp loc_42C432  +
mov edi [ebx+0A0h] +
cmp eax 9 +
mov eax [ecx+174h] +
mov esi [edi+214h] +
mov [esp+48h+var_2C] esi +
mov esi [ebp+28h] +
jz loc_42CE7C  +
movzx eax byte ptr [eax+4] +
cmp esi eax +
jnz loc_42C450  +
mov eax [ebp+1Ch] +
cmp [esp+48h+var_2C] eax +
mov [esp+48h+var_28] eax +
jbe loc_42CF80  +
mov eax [ebx+28h] +
mov esi [edi+40h] +
shr eax 5 +
test al 42h +
jnz loc_42CAB6  +
mov eax [esp+48h+var_28] +
mov eax [esi+eax*4] +
mov eax [eax+4] +
cmp eax 2 +
jz loc_42CFCA  +
cmp eax 0Bh +
jz loc_42CFCA  +
mov ecx [esp+48h+var_2C] +
cmp ecx 1 +
jbe loc_42CAD2  +
mov [esp+48h+var_24] ebp +
mov eax 1 +
mov ebp ecx +
mov [esp+48h+var_20] edi +
xor edi edi +
mov [esp+48h+var_1C] 0 +
lea esi [esi+0] +
mov ecx [esi+eax*4] +
mov ecx [ecx+4] +
cmp ecx 0Bh +
jz loc_42CA90  +
cmp ecx 2 +
jnz loc_42CA9A  +
test edi edi +
jnz loc_42D287  +
mov edi eax +
add eax 1 +
cmp eax ebp +
jnz loc_42CA80  +
mov eax edi +
mov ebp [esp+48h+var_24] +
test eax eax +
mov edi [esp+48h+var_20] +
jz loc_42CAD2  +
mov [ebp+1Ch] eax +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+var_28] +
mov eax [esi+eax*4] +
mov eax [eax+4] +
cmp eax 0Bh +
jz loc_42CFCA  +
cmp eax 2 +
jz loc_42CFCA  +
mov eax [esp+48h+var_28] +
cmp [edi+90Ch] eax +
jnz loc_42CC10  +
test eax eax +
jz loc_42CC10  +
mov eax [ebp+20h] +
test eax eax +
jz loc_42CC10  +
cmp [esp+48h+var_2C] eax +
jbe loc_42CC10  +
mov ecx [edi+40h] +
mov ecx [ecx+eax*4] +
mov ecx [ecx+4] +
cmp ecx 9 +
jz loc_42CC10  +
cmp ecx 4 +
jz loc_42CC10  +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_42C2E0  +
test eax eax +
jz loc_42C450  +
mov edx [ebx+0A0h] +
mov eax [ebp+20h] +
cmp eax [edx+214h] +
jnb loc_42C450  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+2Ch] +
test eax eax +
mov [esp+48h+var_2C] eax +
jz loc_42C450  +
mov eax [eax+8Ch] +
lea edx [eax+4Ch] +
add eax 3Ch +
cmp dword ptr [ebp+4] 4 +
cmovnz edx eax +
cmp dword ptr [edx] 0 +
jnz loc_42C450  +
mov [esp+48h+var_44] 38h +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_28] edx +
call sub_40E140  +
test eax eax +
jz loc_42C450  +
mov edx [esp+48h+var_28] +
mov edi eax +
mov ecx 0Eh +
mov esi ebp +
movs   +
mov edi [esp+48h+var_30] +
mov [edx] eax +
mov edx [ebx+0A0h] +
mov ecx [ebp+28h] +
mov edx [edx+40h] +
mov [edx+edi] eax +
mov eax [esp+48h+var_2C] +
mov esi [eax+4Ch] +
xor eax eax +
test ecx ecx +
jz loc_42CBC8  +
mov eax [ebp+18h] +
xor edx edx +
div  ecx +
mov edi [esp+48h+var_2C] +
add eax esi +
mov edx [ebp+14h] +
mov [edi+4Ch] eax +
mov eax [ebp+10h] +
or dword ptr [edi+14h] 4 +
cmp dword ptr [ebp+18h] 0 +
mov dword ptr [edi+44h] 0 +
mov [edi+58h] eax +
mov [edi+5Ch] edx +
jz loc_42CBF8  +
cmp dword ptr [ebp+4] 4 +
jnz loc_42CBF8  +
or byte ptr [edi+19h] 4 +
or dword ptr [ebx+28h] 20h +
mov eax 1 +
jmp loc_42C452  +
mov ebx ebp +
mov edx [esp+48h+var_28] +
mov ebp [esp+48h+var_2C] +
mov eax [esp+48h+arg_4] +
jmp loc_42C432  +
mov eax ds:dword_4A8854 +
test eax eax +
jnz loc_42C4C3  +
jmp loc_42C4A9  +
lea esi [eax-6FFFFFF6h] +
cmp esi 1 +
jbe loc_42CC10  +
lea esi [esi+0] +
cmp eax 6FFFFFF5h +
jz loc_42CE46  +
cmp eax [ecx+190h] +
jz loc_42CE46  +
mov edi [esp+48h+arg_4] +
mov eax [ecx+4Ch] +
mov [esp+48h+var_2C] edx +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_3C] edi +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
call eax  +
mov edx [esp+48h+var_2C] +
test eax eax +
jnz loc_42C7B4  +
mov eax [ebp+4] +
test eax eax +
js loc_42CFFC  +
lea ecx [eax-70000000h] +
cmp ecx 0FFFFFFFh +
jbe loc_42D0E2  +
lea ecx [eax-60000000h] +
cmp ecx 0FFFFFFFh +
ja loc_42D248  +
test byte ptr [ebp+9] 1 +
jz loc_42CC10  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHowTo +
call off_47D664  +
xor eax eax +
jmp loc_42C452  +
mov eax [ebx+0A0h] +
mov edi [esp+48h+arg_4] +
mov ecx [ebp+0] +
mov [eax+918h] edi +
mov eax [ebx+0A0h] +
mov [eax+1D0h] ecx +
mov ecx [ebp+4] +
mov [eax+1D4h] ecx +
mov ecx [ebp+8] +
mov [eax+1D8h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+1DCh] ecx +
mov ecx [ebp+10h] +
mov [eax+1E0h] ecx +
mov ecx [ebp+14h] +
mov [eax+1E4h] ecx +
mov ecx [ebp+18h] +
mov [eax+1E8h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+1ECh] ecx +
mov ecx [ebp+20h] +
mov [eax+1F0h] ecx +
mov ecx [ebp+24h] +
mov [eax+1F4h] ecx +
mov ecx [ebp+28h] +
mov [eax+1F8h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+1FCh] ecx +
mov ecx [ebp+30h] +
mov [eax+200h] ecx +
mov ecx [ebp+34h] +
mov [eax+204h] ecx +
mov eax edi +
jmp loc_42C432  +
mov eax [ebx+0A0h] +
mov eax [eax+208h] +
test eax eax +
jz loc_42CDA5  +
mov edi [esp+48h+arg_4] +
cmp [eax+38h] edi +
mov edx [esp+48h+arg_4] +
jnz loc_42CD9E  +
jmp loc_42C7B4  +
cmp [eax+38h] edx +
jz loc_42C7B4  +
mov eax [eax+3Ch] +
test eax eax +
jnz loc_42CD95  +
mov [esp+48h+var_44] 40h +
mov [esp+48h+var_48] ebx +
call sub_40E140  +
test eax eax +
jz loc_42C450  +
mov edx [ebp+0] +
mov edi [esp+48h+arg_4] +
mov [eax] edx +
mov edx [ebp+4] +
mov [eax+38h] edi +
mov [eax+4] edx +
mov edx [ebp+8] +
mov [eax+8] edx +
mov edx [ebp+0Ch] +
mov [eax+0Ch] edx +
mov edx [ebp+10h] +
mov [eax+10h] edx +
mov edx [ebp+14h] +
mov [eax+14h] edx +
mov edx [ebp+18h] +
mov [eax+18h] edx +
mov edx [ebp+1Ch] +
mov [eax+1Ch] edx +
mov edx [ebp+20h] +
mov [eax+20h] edx +
mov edx [ebp+24h] +
mov [eax+24h] edx +
mov edx [ebp+28h] +
mov [eax+28h] edx +
mov edx [ebp+2Ch] +
mov [eax+2Ch] edx +
mov edx [ebp+30h] +
mov [eax+30h] edx +
mov edx [ebp+34h] +
mov [eax+34h] edx +
mov edx [ebx+0A0h] +
mov ecx [edx+208h] +
mov [eax+3Ch] ecx +
mov [edx+208h] eax +
mov edx [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov edx [edx+40h] +
mov [edx+edi] eax +
mov eax 1 +
jmp loc_42C452  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_42D300  +
test eax eax +
jz loc_42C450  +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
call sub_4567C0  +
mov eax 1 +
jmp loc_42C452  +
movzx eax byte ptr [eax+3] +
jmp loc_42CA19  +
mov eax [ebp+18h] +
cmp eax 3 +
jbe loc_42C450  +
cmp dword ptr [ebp+28h] 4 +
jnz loc_42C450  +
test al 3 +
jnz loc_42C450  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_42D300  +
test eax eax +
jz loc_42C450  +
mov edx [ebp+30h] +
test edx edx +
jz loc_42C7B4  +
mov eax [ebp+18h] +
shr eax 2 +
test eax eax +
jz loc_42C450  +
test byte ptr [edx] 1 +
jz loc_42CEEB  +
mov ecx [ebp+2Ch] +
or dword ptr [ecx+14h] 20000h +
lea esi [edx-4] +
sub eax 1 +
jz loc_42C7B4  +
mov edx [esi+eax*4+4] +
test edx edx +
jz loc_42CEEE  +
mov edx [edx+2Ch] +
test edx edx +
jz loc_42CEEE  +
mov ecx [edx+8Ch] +
cmp dword ptr [ecx+7Ch] 0 +
jz loc_42CEEE  +
mov eax [ebp+2Ch] +
mov eax [eax+8Ch] +
mov [eax+7Ch] edx +
mov eax 1 +
jmp loc_42C452  +
test ecx ecx +
jnz loc_42C450  +
mov dword ptr [ebp+20h] 0 +
mov eax 1 +
jmp loc_42C452  +
mov [esp+48h+var_48] ebx +
call sub_4101B0  +
cmp eax 6 +
jz loc_42CF57  +
cmp eax 9 +
jnz loc_42C450  +
mov eax [ebp+1Ch] +
sub eax 0FF00h +
cmp eax 1 +
setbe al  +
movzx eax al +
jmp loc_42C452  +
mov eax [esi+eax*4] +
mov eax [eax+1Ch] +
mov [ebp+1Ch] eax +
mov eax 1 +
jmp loc_42C452  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_2C] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_38] eax +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] offset aBInvalidLinkLu +
mov [esp+48h+var_40] eax +
call off_47D664  +
mov eax [esp+48h+arg_4] +
mov edx [esp+48h+var_2C] +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
call sub_42D300  +
jmp loc_42C452  +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_24] edx +
mov [esp+48h+var_44] eax +
call sub_42C2E0  +
mov edx [esp+48h+var_24] +
test eax eax +
jz loc_42C450  +
mov eax [ebp+1Ch] +
mov edi [ebx+0A0h] +
mov [esp+48h+var_28] eax +
jmp loc_42CAD2  +
test byte ptr [ebp+8] 2 +
jz loc_42CC10  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHow_0 +
call off_47D664  +
xor eax eax +
jmp loc_42C452  +
mov eax [edx+1Ch] +
mov [ebp+1Ch] eax +
mov eax 1 +
jmp loc_42C452  +
mov [esi+910h] eax +
mov ecx [ebp+0] +
mov eax [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov [eax+0F0h] ecx +
mov ecx [ebp+4] +
mov [eax+0F4h] ecx +
mov ecx [ebp+8] +
mov [eax+0F8h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+0FCh] ecx +
mov ecx [ebp+10h] +
mov [eax+100h] ecx +
mov ecx [ebp+14h] +
mov [eax+104h] ecx +
mov ecx [ebp+18h] +
mov [eax+108h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+10Ch] ecx +
mov ecx [ebp+20h] +
mov [eax+110h] ecx +
mov ecx [ebp+24h] +
mov [eax+114h] ecx +
mov ecx [ebp+28h] +
mov [eax+118h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+11Ch] ecx +
mov ecx [ebp+30h] +
mov [eax+120h] ecx +
mov ecx [ebp+34h] +
mov [eax+124h] ecx +
mov ecx [ebx+0A0h] +
lea eax [ecx+0F0h] +
mov ecx [ecx+40h] +
mov [ecx+edi] eax +
or dword ptr [ebx+28h] 200h +
jmp loc_42C63D  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHow_1 +
call off_47D664  +
xor eax eax +
jmp loc_42C452  +
mov eax [ebx+0A0h] +
mov edx [ebp+0] +
mov edi [esp+48h+var_30] +
mov [eax+80h] edx +
mov edx [ebp+4] +
mov [eax+84h] edx +
mov edx [ebp+8] +
mov [eax+88h] edx +
mov edx [ebp+0Ch] +
mov [eax+8Ch] edx +
mov edx [ebp+10h] +
mov [eax+90h] edx +
mov edx [ebp+14h] +
mov [eax+94h] edx +
mov edx [ebp+18h] +
mov [eax+98h] edx +
mov edx [ebp+1Ch] +
mov [eax+9Ch] edx +
mov edx [ebp+20h] +
mov [eax+0A0h] edx +
mov edx [ebp+24h] +
mov [eax+0A4h] edx +
mov edx [ebp+28h] +
mov [eax+0A8h] edx +
mov edx [ebp+2Ch] +
mov [eax+0ACh] edx +
mov edx [ebp+30h] +
mov [eax+0B0h] edx +
mov edx [ebp+34h] +
mov [eax+0B4h] edx +
mov eax [ebx+0A0h] +
mov edx [eax+40h] +
sub eax 0FFFFFF80h +
mov [edx+edi] eax +
mov eax 1 +
jmp loc_42C452  +
mov ebx ebp +
mov ebp [esp+48h+var_2C] +
mov edi ecx +
mov eax [ebp+0] +
mov [edi+0B8h] eax +
mov eax [ebp+4] +
mov [edi+0BCh] eax +
mov eax [ebp+8] +
mov [edi+0C0h] eax +
mov eax [ebp+0Ch] +
mov [edi+0C4h] eax +
mov eax [ebp+10h] +
mov [edi+0C8h] eax +
mov eax [ebp+14h] +
mov [edi+0CCh] eax +
mov eax [ebp+18h] +
mov [edi+0D0h] eax +
mov eax [ebp+1Ch] +
mov [edi+0D4h] eax +
mov eax [ebp+20h] +
mov [edi+0D8h] eax +
mov eax [ebp+24h] +
mov [edi+0DCh] eax +
mov eax [ebp+28h] +
mov [edi+0E0h] eax +
mov eax [ebp+2Ch] +
mov [edi+0E4h] eax +
mov eax [ebp+30h] +
mov [edi+0E8h] eax +
mov eax [ebp+34h] +
mov [edi+0ECh] eax +
mov eax [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov edx [eax+40h] +
add eax 0B8h +
mov [edx+edi] eax +
mov eax 1 +
jmp loc_42C452  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHow_2 +
call off_47D664  +
xor eax eax +
jmp loc_42C452  +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBWarningMult_0 +
call off_47D664  +
mov eax 1 +
jmp loc_42C452  +
mov ebp [esp+48h+var_24] +
mov edi [esp+48h+var_20] +
jmp loc_42CAD2  +
cmp [esp+48h+arg_4] 1 +
jbe loc_42D2F3  +
mov ecx [esi+40h] +
mov eax 1 +
mov esi [esp+48h+arg_4] +
jmp loc_42D2BB  +
add eax 1 +
cmp eax esi +
jz loc_42C7B4  +
mov edx [ecx+eax*4] +
cmp dword ptr [edx+4] 12h +
jnz loc_42D2B0  +
cmp [edx+1Ch] esi +
jnz loc_42D2B0  +
jmp loc_42C93D  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_42D300  +
test eax eax +
jz loc_42C450  +
jmp loc_42C8CB  +
mov eax 1 +
jmp loc_42C93D  +
***
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov ebx [esp+8Ch+arg_4] +
mov edx [ebx+2Ch] +
test edx edx +
jz loc_42D328  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_40F710  +
test eax eax +
mov ebp eax +
jz loc_42D3F8  +
mov [ebx+2Ch] eax +
mov edx [ebx] +
mov eax [eax+8Ch] +
mov [eax] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
mov edx [ebx+0Ch] +
mov [eax+0Ch] edx +
mov edx [ebx+10h] +
mov [eax+10h] edx +
mov edx [ebx+14h] +
mov [eax+14h] edx +
mov edx [ebx+18h] +
mov [eax+18h] edx +
mov edx [ebx+1Ch] +
mov [eax+1Ch] edx +
mov edx [ebx+20h] +
mov [eax+20h] edx +
mov edx [ebx+24h] +
mov [eax+24h] edx +
mov edx [ebx+28h] +
mov [eax+28h] edx +
mov edx [ebx+2Ch] +
mov [eax+2Ch] edx +
mov edx [ebx+30h] +
mov [eax+30h] edx +
mov edx [ebx+34h] +
mov [eax+34h] edx +
mov edx [esp+8Ch+arg_C] +
mov [eax+5Ch] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov [ebp+50h] eax +
mov eax [ebx+0Ch] +
mov [ebp+54h] edx +
or byte ptr [ebp+18h] 1 +
mov [ebp+20h] eax +
mov [ebp+1Ch] eax +
mov eax [ebx+18h] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_40F950  +
test eax eax +
jnz loc_42D400  +
xor eax eax +
jmp loc_42D31D  +
mov eax [ebx+24h] +
mov [esp+8Ch+var_8C] eax +
call near ptr dword_4135E0  +
mov [esp+8Ch+var_40] 0 +
mov [ebp+40h] eax +
mov eax [ebx+4] +
cmp eax 8 +
jz loc_42DF91  +
cmp eax 11h +
jz loc_42D63E  +
mov [esp+8Ch+var_40] 100h +
mov edx 100h +
mov eax [ebx+8] +
test al 2 +
jz loc_42D446  +
or edx 3 +
mov [esp+8Ch+var_40] edx +
test al 1 +
jnz loc_42D451  +
or edx 8 +
mov [esp+8Ch+var_40] edx +
test al 4 +
jz loc_42D5A6  +
or edx 10h +
mov [esp+8Ch+var_40] edx +
test al 10h +
jz loc_42D488  +
mov edx [esp+8Ch+var_40] +
mov ecx edx +
or ecx 800000h +
test al 20h +
mov [esp+8Ch+var_40] ecx +
mov ecx [ebx+28h] +
mov [ebp+78h] ecx +
jz loc_42D488  +
or edx 1800000h +
mov [esp+8Ch+var_40] edx +
test ah 2 +
jnz loc_42D5CD  +
test ah 4 +
jnz loc_42D5BB  +
mov esi [esp+8Ch+var_40] +
test eax eax +
js loc_42D806  +
test esi 1 +
jnz loc_42D4BE  +
mov eax [esp+8Ch+arg_8] +
cmp byte ptr [eax] 2Eh +
jz loc_42D9CF  +
mov esi [esp+8Ch+arg_8] +
mov edi offset a_gnu_linkonce +
mov ecx 0Dh +
cmps   +
jnz loc_42D4E4  +
mov eax [ebp+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_42DA35  +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+50h] +
test eax eax +
jz loc_42D510  +
lea edx [esp+8Ch+var_40] +
mov [esp+8Ch+var_88] ebx +
mov [esp+8Ch+var_8C] edx +
call eax  +
test eax eax +
jz loc_42D3F8  +
mov eax [esp+8Ch+var_40] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_40F850  +
test eax eax +
jz loc_42D3F8  +
cmp dword ptr [ebx+4] 7 +
jz loc_42DA42  +
mov eax [esp+8Ch+var_40] +
test al 1 +
mov [esp+8Ch+var_60] eax +
jz loc_42D7CA  +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov edi [eax+30h] +
mov esi [eax+44h] +
test edi edi +
jz loc_42D7CA  +
mov eax [esi+10h] +
test eax eax +
jnz loc_42D661  +
mov eax esi +
xor edx edx +
xor ecx ecx +
jmp loc_42D598  +
add edx 1 +
add eax 20h +
cmp edx edi +
jz loc_42D650  +
cmp dword ptr [eax+10h] 0 +
jnz loc_42D661  +
cmp dword ptr [eax] 1 +
jnz loc_42D580  +
cmp dword ptr [eax+18h] 1 +
sbb ecx 0FFFFFFFFh +
jmp loc_42D580  +
test dl 2 +
jz loc_42D460  +
or edx 20h +
mov [esp+8Ch+var_40] edx +
jmp loc_42D460  +
mov edx [esp+8Ch+var_40] +
or dh 4 +
mov [esp+8Ch+var_40] edx +
mov esi edx +
jmp loc_42D49E  +
mov eax [esp+8Ch+arg_0] +
mov edi [eax+0A0h] +
mov eax [edi+908h] +
test eax eax +
mov [esp+8Ch+var_64] eax +
jnz loc_42D816  +
mov eax [edi+214h] +
test eax eax +
mov ecx eax +
mov [esp+8Ch+var_60] eax +
jz loc_42D9C0  +
mov eax [edi+40h] +
mov [esp+8Ch+var_68] 0 +
lea ecx [eax+ecx*4] +
jmp loc_42D61B  +
add eax 4 +
cmp eax ecx +
jz loc_42D9B4  +
mov edx [eax] +
cmp dword ptr [edx+4] 11h +
jnz loc_42D610  +
mov esi [edx+18h] +
cmp esi 7 +
jbe loc_42D610  +
cmp dword ptr [edx+28h] 4 +
jnz loc_42D610  +
and esi 3 +
cmp esi 1 +
adc [esp+8Ch+var_68] 0 +
jmp loc_42D610  +
mov [esp+8Ch+var_40] 2008100h +
mov edx 2008100h +
jmp loc_42D438  +
cmp ecx 1 +
ja loc_42D7FC  +
test edi edi +
jz loc_42D7CA  +
mov eax [esp+8Ch+var_60] +
xor edx edx +
mov [esp+8Ch+arg_4] ebx +
mov ebx edx +
mov [esp+8Ch+var_54] ebp +
mov [esp+8Ch+var_68] edi +
and eax 2 +
mov [esp+8Ch+var_50] eax +
jmp loc_42D69A  +
cmp ecx 7 +
jz loc_42DF70  +
add ebx 1 +
add esi 20h +
cmp ebx [esp+8Ch+var_68] +
jnb loc_42D7C6  +
mov ecx [esi] +
cmp ecx 1 +
jnz loc_42D681  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+8] +
mov edi eax +
and edi 400h +
mov [esp+8Ch+var_64] edi +
jnz loc_42D68A  +
and eax 2 +
mov [esp+8Ch+var_5C] eax +
jnz loc_42D6D5  +
lea eax [ecx-6474E550h] +
cmp eax 2 +
jbe loc_42D68A  +
lea eax [ecx-1] +
cmp eax 1 +
jbe loc_42D68A  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+4] +
cmp eax 8 +
mov [esp+8Ch+var_58] eax +
jz loc_42D730  +
mov eax [esp+8Ch+arg_4] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov ebp edx +
mov edi eax +
mov eax [esi+8] +
cmp eax edi +
ja loc_42D68A  +
xor edx edx +
sub edi eax +
mov eax edi +
mov edi [esp+8Ch+arg_4] +
sbb ebp edx +
mov edx ebp +
xor ebp ebp +
mov edi [edi+18h] +
add eax edi +
mov edi [esi+14h] +
adc edx ebp +
cmp edx 0 +
jg loc_42D68A  +
jl loc_42D730  +
cmp eax edi +
ja loc_42D68A  +
mov ebp [esp+8Ch+var_5C] +
test ebp ebp +
jz loc_42D779  +
mov eax [esp+8Ch+arg_4] +
mov edx [esi+0Ch] +
mov eax [eax+0Ch] +
cmp eax edx +
jb loc_42D68A  +
mov edi [esp+8Ch+var_64] +
sub eax edx +
mov edx eax +
test edi edi +
jz loc_42D764  +
cmp [esp+8Ch+var_58] 8 +
jz loc_42DF60  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+18h] +
add eax edx +
cmp eax [esi+18h] +
ja loc_42D68A  +
cmp ecx 2 +
mov eax [esp+8Ch+arg_4] +
jz loc_42DE6A  +
mov eax [eax+0Ch] +
mov edx [esi+0Ch] +
mov ecx [esp+8Ch+var_50] +
test ecx ecx +
jnz loc_42DCF7  +
mov ecx [esi+10h] +
mov edi [esp+8Ch+var_54] +
add ecx eax +
sub ecx edx +
mov [edi+20h] ecx +
cmp edx eax +
ja loc_42D68A  +
mov edi [esp+8Ch+arg_4] +
add edx [esi+18h] +
add eax [edi+18h] +
cmp eax edx +
ja loc_42D68A  +
mov ebp [esp+8Ch+var_54] +
test [esp+8Ch+var_60] 2000h +
jz loc_42D7FC  +
mov eax [esp+8Ch+arg_8] +
movzx eax byte ptr [eax+1] +
cmp al 64h +
jz loc_42DA98  +
cmp al 7Ah +
jnz loc_42D7FC  +
mov eax [esp+8Ch+arg_8] +
cmp byte ptr [eax+7] 5Fh +
jz loc_42DAA9  +
mov eax 1 +
jmp loc_42D31D  +
mov eax esi +
or ah 80h +
mov [esp+8Ch+var_40] eax +
mov esi eax +
jmp loc_42D4A6  +
mov eax [esp+8Ch+var_64] +
xor edi edi +
sub eax 1 +
cmp eax 0FFFFFFFDh +
mov [esp+8Ch+var_5C] eax +
ja loc_42D879  +
mov [esp+8Ch+var_60] ebp +
lea esi [esi+0] +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov [esp+8Ch+var_68] eax +
mov eax [eax+904h] +
mov ebp [eax+edi*4] +
mov ecx [ebp+18h] +
mov esi [ebp+30h] +
shr ecx 2 +
mov eax ecx +
mov edx esi +
jmp loc_42D867  +
add edx 4 +
cmp ebx [edx] +
jz loc_42D892  +
sub eax 1 +
jnz loc_42D860  +
add edi 1 +
cmp [esp+8Ch+var_64] edi +
ja loc_42D830  +
mov ebp [esp+8Ch+var_60] +
mov eax [ebp+8Ch] +
mov ecx [eax+74h] +
test ecx ecx +
jz loc_42DE47  +
mov eax [ebx+8] +
jmp loc_42D491  +
sub ecx 1 +
jz loc_42D8E0  +
add esi 4 +
mov eax [esi] +
mov eax [eax+2Ch] +
test eax eax +
jz loc_42D892  +
mov eax [eax+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_42D892  +
mov edi [esp+8Ch+var_60] +
mov esi [eax+74h] +
mov ecx [edi+8Ch] +
mov [ecx+74h] esi +
mov [ecx+7Ch] edx +
mov [eax+7Ch] edi +
mov eax [ebp+2Ch] +
test eax eax +
jz loc_42D8DA  +
mov eax [eax+8Ch] +
mov edi [esp+8Ch+var_60] +
mov [eax+7Ch] edi +
mov edi [esp+8Ch+var_5C] +
jmp loc_42D86C  +
mov edi [esp+8Ch+var_68] +
mov eax [ebp+1Ch] +
cmp eax [edi+214h] +
jnb loc_42D3F8  +
mov edi [esp+8Ch+var_68] +
mov edx [edi+40h] +
mov edx [edx+eax*4] +
cmp dword ptr [edx+4] 2 +
jnz loc_42D3F8  +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_42C2E0  +
test eax eax +
jz loc_42D3F8  +
mov eax [esp+8Ch+arg_0] +
lea edi [esp+8Ch+var_3C] +
mov eax [eax+0A0h] +
mov [esp+8Ch+var_68] eax +
lea esi [eax+48h] +
mov eax [ebp+20h] +
mov [esp+8Ch+var_74] edi +
lea edi [esp+8Ch+var_24] +
mov [esp+8Ch+var_78] edi +
lea edi [esp+8Ch+var_38] +
mov [esp+8Ch+var_7C] edi +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] 1 +
mov [esp+8Ch+var_88] esi +
mov [esp+8Ch+var_8C] eax +
call sub_42B780  +
test eax eax +
jz loc_42D3F8  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] edi +
mov [esp+8Ch+var_88] esi +
mov [esp+8Ch+var_8C] eax +
call sub_42BAD0  +
test eax eax +
jz loc_42D3F8  +
mov edi [esp+8Ch+var_60] +
mov edx [edi+8Ch] +
mov [edx+74h] eax +
mov [edx+7Ch] edi +
jmp loc_42D8C6  +
mov eax [esp+8Ch+var_68] +
test eax eax +
jnz loc_42DB76  +
mov dword ptr [edi+908h] 0FFFFFFFFh +
jmp loc_42D879  +
movzx eax byte ptr [eax+1] +
cmp al 64h +
jz loc_42DD13  +
cmp al 67h +
jz loc_42DDA2  +
cmp al 6Ch +
jz loc_42DEF1  +
cmp al 73h +
lea esi [esi+0] +
jz loc_42DF00  +
cmp al 7Ah +
jnz loc_42D4BE  +
mov edx 7 +
mov eax offset a_zdebug +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_84] edx +
mov [esp+8Ch+var_8C] eax +
call strncmp  +
test eax eax +
jnz loc_42D4BE  +
mov eax esi +
or ah 20h +
mov [esp+8Ch+var_40] eax +
jmp loc_42D4BE  +
or [esp+8Ch+var_40] 20000h +
jmp loc_42D4E4  +
lea eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_40FBE0  +
test eax eax +
jz loc_42D31D  +
mov ecx [ebx+18h] +
mov edx [esp+8Ch+var_24] +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] 0FFFFFFFFh +
mov [esp+8Ch+var_88] 0FFFFFFFFh +
call sub_42A2F0  +
mov eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_8C] eax +
call free  +
jmp loc_42D53D  +
mov eax [esp+8Ch+arg_8] +
cmp byte ptr [eax+6] 5Fh +
jnz loc_42D7FC  +
lea eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_80] eax +
lea eax [esp+8Ch+var_38] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_414DD0  +
test eax eax +
mov ecx eax +
jz loc_42DDCC  +
mov eax [esp+8Ch+arg_0] +
test byte ptr [eax+2Ah] 10h +
jz loc_42DDCC  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_415230  +
test eax eax +
jz loc_42DF36  +
mov eax 2 +
mov edi [esp+8Ch+arg_0] +
test byte ptr [edi+2Ch] 2 +
jz loc_42DF1B  +
mov edi [esp+8Ch+arg_8] +
cmp byte ptr [edi+1] 7Ah +
jnz loc_42D7FC  +
cmp eax 2 +
jz loc_42DB3F  +
mov eax [esp+8Ch+arg_0] +
test byte ptr [eax+2Ah] 40h +
jz loc_42D7FC  +
mov edx [esp+8Ch+arg_8] +
mov eax [esp+8Ch+arg_0] +
call sub_429DD0  +
test eax eax +
jz loc_42D3F8  +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_40F870  +
jmp loc_42D7FC  +
mov eax [esp+8Ch+var_68] +
mov [edi+908h] eax +
mov edi [esp+8Ch+arg_0] +
mov esi [edi+0A0h] +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_84] 4 +
mov [esp+8Ch+var_88] eax +
call sub_40E1C0  +
mov [esi+904h] eax +
mov eax [esp+8Ch+arg_0] +
xor esi esi +
mov edx [eax+0A0h] +
mov edi [edx+904h] +
test edi edi +
jz loc_42D3F8  +
mov [esp+8Ch+arg_4] ebx +
mov ebx [esp+8Ch+var_60] +
mov [esp+8Ch+var_5C] ebp +
jmp loc_42DBE0  +
add esi 1 +
cmp esi ebx +
jz loc_42DD22  +
mov eax [edx+40h] +
mov edi [eax+esi*4] +
cmp dword ptr [edi+4] 11h +
jnz loc_42DBD5  +
mov eax [edi+18h] +
cmp eax 7 +
jbe loc_42DBD5  +
cmp dword ptr [edi+28h] 4 +
jnz loc_42DBD5  +
test al 3 +
jnz loc_42DBD5  +
mov edx [edx+904h] +
mov ebp eax +
mov ecx [esp+8Ch+var_64] +
and ebp 3FFFFFFFh +
mov [edx+ecx*4] edi +
add ecx 1 +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] 1 +
mov [esp+8Ch+var_68] ecx +
mov [esp+8Ch+var_8C] eax +
call sub_40E1C0  +
test eax eax +
mov [edi+30h] eax +
jz loc_42DFDA  +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] eax +
call memset  +
mov eax [edi+10h] +
mov edx [edi+14h] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] edx +
mov [esp+8Ch+var_8C] eax +
call sub_411E10  +
test eax eax +
jnz loc_42DCA3  +
mov eax [edi+18h] +
mov edx [edi+30h] +
mov ecx [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
mov [esp+8Ch+var_8C] edx +
mov [esp+8Ch+var_84] ecx +
call sub_411C00  +
cmp eax [edi+18h] +
jz loc_42E017  +
mov eax [edi+18h] +
mov [esp+8Ch+var_8C] offset aBInvalidSizeFi +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_47D664  +
mov [esp+8Ch+var_8C] 11h +
call sub_4105E0  +
mov eax [edi+30h] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] eax +
call memset  +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+0A0h] +
jmp loc_42DBD5  +
mov edi [esp+8Ch+arg_4] +
mov ecx [esi+10h] +
add ecx [edi+10h] +
mov edi [esp+8Ch+var_54] +
sub ecx [esi+8] +
mov [edi+20h] ecx +
jmp loc_42D7A9  +
mov edx 6 +
mov eax offset a_debug +
jmp loc_42DA08  +
mov eax [esp+8Ch+var_64] +
cmp [edx+908h] eax +
mov ebp [esp+8Ch+var_5C] +
mov ebx [esp+8Ch+arg_4] +
jz loc_42D816  +
test eax eax +
mov [edx+908h] eax +
jnz loc_42D816  +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov dword ptr [eax+904h] 0 +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov dword ptr [eax+908h] 0FFFFFFFFh +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] offset aBNoValidGroupS +
mov [esp+8Ch+var_88] eax +
call off_47D664  +
mov [esp+8Ch+var_8C] 11h +
call sub_4105E0  +
jmp loc_42D879  +
mov eax [esp+8Ch+arg_8] +
movzx eax byte ptr [eax+2] +
cmp al 6Eh +
jz loc_42DF27  +
cmp al 64h +
jnz loc_42D4BE  +
mov edx 0Bh +
mov eax offset a_gdb_index +
jmp loc_42DA08  +
cmp dword ptr [ebp+24h] 0 +
jz loc_42D7FC  +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+28h] +
mov eax 1 +
shr edx 5 +
and edx 3FFFFh +
test dh 40h +
jz loc_42D31D  +
mov ebx [esp+8Ch+var_38] +
test ebx ebx +
js loc_42D31D  +
cmp [esp+8Ch+var_24] 0 +
jz loc_42D31D  +
test ecx ecx +
jz loc_42DE22  +
shr edx 11h +
test ebx ebx +
setnle cl  +
cmp dl cl +
jz loc_42D31D  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_415350  +
test eax eax +
jz loc_42DFB0  +
mov eax 1 +
jmp loc_42DB07  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_8C] offset aBNoGroupInfoFo +
mov [esp+8Ch+var_88] eax +
call off_47D664  +
xor eax eax +
jmp loc_42D31D  +
cmp dword ptr [eax+18h] 0 +
jnz loc_42D789  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_42DF0F  +
cmp [esp+8Ch+var_58] 8 +
jz loc_42DEC0  +
mov eax [esp+8Ch+arg_4] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov ebp edx +
mov edi eax +
mov eax [esi+8] +
cmp eax edi +
jnb loc_42D68A  +
xor edx edx +
sub edi eax +
sbb ebp edx +
mov eax edi +
mov edi [esi+14h] +
cmp ebp 0 +
jg loc_42D68A  +
jl loc_42DEC0  +
cmp eax edi +
jnb loc_42D68A  +
mov eax [esp+8Ch+arg_4] +
cmp [esp+8Ch+var_5C] 0 +
mov edx [esi+0Ch] +
mov eax [eax+0Ch] +
jz loc_42D78F  +
cmp eax edx +
jbe loc_42D68A  +
mov edi eax +
sub edi edx +
cmp ecx edi +
jbe loc_42D68A  +
jmp loc_42D78F  +
mov edx 5 +
mov eax offset a_line +
jmp loc_42DA08  +
mov edx 5 +
mov eax offset a_stab_1 +
jmp loc_42DA08  +
mov eax [esp+8Ch+arg_4] +
jmp loc_42D789  +
or dword ptr [ebp+14h] 10000000h +
jmp loc_42D7FC  +
mov edx 11h +
mov eax offset a_gnu_linkonce_ +
jmp loc_42DA08  +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_8C] offset aBUnableToIniti +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_47D664  +
xor eax eax +
jmp loc_42D31D  +
xor eax eax +
cmp ecx 7 +
jnz loc_42D76E  +
jmp loc_42D764  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+8] +
mov edi eax +
and edi 400h +
mov [esp+8Ch+var_64] edi +
jnz loc_42D6B9  +
jmp loc_42D68A  +
mov eax [ebx+8] +
xor edx edx +
test al 2 +
jz loc_42D446  +
mov [esp+8Ch+var_40] 1 +
mov edx 1 +
jmp loc_42D446  +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_8C] offset aBUnableToIni_0 +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_47D664  +
xor eax eax +
jmp loc_42D31D  +
mov eax [edi+18h] +
mov [esp+8Ch+var_8C] offset aBCorruptSizeFi +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_47D664  +
mov [esp+8Ch+var_8C] 11h +
call sub_4105E0  +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+0A0h] +
jmp loc_42DBD5  +
mov ecx [edi+30h] +
mov [esp+8Ch+var_64] esi +
mov esi ebx +
lea edx [ecx+eax] +
add ebp ecx +
mov ebx edx +
jmp loc_42E043  +
cmp esi eax +
jbe loc_42E095  +
mov ecx [esp+8Ch+arg_0] +
mov ecx [ecx+0A0h] +
mov ecx [ecx+40h] +
mov eax [ecx+eax*4] +
mov [ebp+0] eax +
mov eax [esp+8Ch+arg_0] +
sub ebx 4 +
sub ebp 4 +
mov eax [eax+4] +
mov eax [eax+4Ch] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
cmp ebx [edi+30h] +
jnz loc_42E029  +
mov [ebp+0] eax +
mov edx [edi+2Ch] +
mov ebx esi +
mov esi [esp+8Ch+var_64] +
test edx edx +
jz loc_42E07B  +
test al 1 +
jz loc_42E07B  +
or dword ptr [edx+14h] 20000h +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+0A0h] +
mov eax [esp+8Ch+var_68] +
mov [esp+8Ch+var_64] eax +
jmp loc_42DBD5  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] offset aBInvalidSht_gr +
mov [esp+8Ch+var_88] eax +
call off_47D664  +
xor eax eax +
jmp loc_42E02D  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+60h] +
mov ebp [esp+68h] +
mov esi [esp+64h] +
and ebp 1Fh +
cmp [ebx] esi +
jz loc_42E193  +
lea eax [ebp+ebp*4+0] +
lea eax [ebx+eax*4+84h] +
mov ecx eax +
mov [esp+1Ch] eax +
lea eax [esp+24h] +
mov [esp+18h] eax +
lea eax [esp+28h] +
mov [esp+14h] eax +
mov eax [esp+68h] +
mov [esp+10h] ecx +
mov dword ptr [esp+8] 1 +
mov [esp+0Ch] eax +
mov eax [esi+0A0h] +
mov [esp] esi +
add eax 48h +
mov [esp+4] eax +
call sub_42B780  +
test eax eax +
jz loc_42E1D4  +
cmp [ebx] esi +
jz loc_42E164  +
lea edi [ebx+4] +
mov edx 80h +
test edi 1 +
jnz loc_42E1B2  +
test edi 2 +
jnz loc_42E1C0  +
mov ecx edx +
mov eax 0FFFFFFFFh +
shr ecx 2 +
test dl 2 +
stos   +
jnz loc_42E180  +
and edx 1 +
jnz loc_42E178  +
mov [ebx] esi +
mov eax [esp+68h] +
mov [ebx+ebp*4+4] eax +
mov eax [esp+1Ch] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov byte ptr [edi] 0FFh +
jmp loc_42E162  +
***
mov eax 0FFFFFFFFh +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_42E162  +
jmp loc_42E178  +
***
mov eax [esp+68h] +
cmp [ebx+ebp*4+4] eax +
jnz loc_42E0DE  +
lea eax [ebp+ebp*4+0] +
lea eax [ebx+eax*4+84h] +
mov [esp+1Ch] eax +
jmp loc_42E16C  +
***
mov byte ptr [ebx+4] 0FFh +
lea edi [ebx+5] +
mov dl 7Fh +
jmp loc_42E144  +
***
mov ecx 0FFFFFFFFh +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_42E14C  +
***
mov dword ptr [esp+1Ch] 0 +
jmp loc_42E16C  +
***
mov edx [esp+arg_0] +
mov eax [esp+arg_4] +
mov edx [edx+0A0h] +
cmp [edx+214h] eax +
jbe loc_42E200  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+2Ch] +
retn   +
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
mov edx [ebx] +
test edx edx +
jz loc_42E2D2  +
mov ebp eax +
mov edi edx +
lea esi [ebx+14h] +
jmp loc_42E272  +
lea edx [ecx+eax] +
cmp ebp edx +
jl loc_42E267  +
mov edx ebp +
add ecx edi +
sub edx eax +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] ecx +
add eax edx +
mov [esp+1Ch+var_1C] eax +
call memcmp  +
test eax eax +
jz loc_42E2C8  +
mov ebx esi +
mov edi [esi] +
lea esi [esi+14h] +
test edi edi +
jz loc_42E2D2  +
mov ecx [ebx+4] +
cmp ebp ecx +
jl loc_42E267  +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] ecx +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_10] ecx +
mov [esp+1Ch+var_1C] eax +
call memcmp  +
mov ecx [esp+1Ch+var_10] +
test eax eax +
jnz loc_42E267  +
mov eax [ebx+8] +
test eax eax +
jg loc_42E240  +
mov edx [esp+1Ch+arg_0] +
movzx edx byte ptr [edx+ecx] +
test dl dl +
jz loc_42E2C8  +
test eax eax +
jz loc_42E267  +
cmp dl 2Eh +
jz loc_42E2C8  +
cmp eax 0FFFFFFFEh +
jz loc_42E267  +
mov eax [esp+1Ch+arg_8] +
test eax eax +
jz loc_42E2C8  +
cmp dword ptr [ebx+0Ch] 9 +
jz loc_42E267  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+24h] +
mov ebx [esi] +
test ebx ebx +
jz loc_42E370  +
mov eax [esp+20h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov edx [eax+178h] +
test edx edx +
jz loc_42E330  +
movzx eax byte ptr [esi+19h] +
mov [esp+4] edx +
mov [esp] ebx +
shr al 2 +
and eax 1 +
mov [esp+8] eax +
call sub_42E210  +
test eax eax +
jz loc_42E330  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
cmp byte ptr [ebx] 2Eh +
jnz loc_42E328  +
movsx edx byte ptr [ebx+1] +
sub edx 62h +
cmp edx 18h +
ja loc_42E328  +
mov edx ds:off_498D20[edx*4] +
test edx edx +
jz loc_42E328  +
movzx eax byte ptr [esi+19h] +
mov [esp] ebx +
mov [esp+4] edx +
shr al 2 +
and eax 1 +
mov [esp+8] eax +
call sub_42E210  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
jmp loc_42E328  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov esi [esp+20h] +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_42E422  +
mov eax [esi+4] +
mov ecx [eax+1B0h] +
movzx eax byte ptr [ebx+19h] +
movzx edx byte ptr [ecx+1ACh] +
and eax 0FFFFFFFBh +
shr dl 2 +
and edx 4 +
or eax edx +
mov [ebx+19h] al +
movzx eax byte ptr [esi+28h] +
and eax 18h +
cmp al 8 +
jz loc_42E415  +
mov eax [ecx+54h] +
mov [esp+4] ebx +
mov [esp] esi +
call eax  +
test eax eax +
jz loc_42E3F1  +
mov edx [ebx+14h] +
mov ecx [eax+0Ch] +
test edx edx +
jnz loc_42E403  +
mov edx [ebx+8Ch] +
mov eax [eax+10h] +
mov [edx+4] ecx +
mov [edx+8] eax +
mov [esp+24h] ebx +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_40F1D0  +
***
and edx 100000h +
jnz loc_42E3E2  +
lea edx [ecx-0Eh] +
cmp edx 1 +
ja loc_42E3F1  +
jmp loc_42E3E2  +
***
test byte ptr [ebx+16h] 10h +
jz loc_42E3F1  +
nop   +
lea esi [esi+0] +
jmp loc_42E3C8  +
***
mov dword ptr [esp+4] 90h +
mov [esp] esi +
call sub_40E220  +
test eax eax +
jz loc_42E441  +
mov [ebx+8Ch] eax +
jmp loc_42E39B  +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov ebx [esp+6Ch+arg_4] +
mov eax [ebx+18h] +
test eax eax +
jnz loc_42E480  +
cmp dword ptr [ebx+14h] 0 +
jnz loc_42E74A  +
nop   +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+14h] +
lea esi [esp+6Ch+var_4C] +
test edx edx +
jnz loc_42E5A1  +
mov eax offset unk_497A12 +
mov [esp+6Ch+var_5C] eax +
mov eax [esp+6Ch+arg_8] +
mov [esp+6Ch+var_68] offset aSDS +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_60] eax +
mov eax [esp+6Ch+arg_C] +
mov [esp+6Ch+var_64] eax +
call sprintf  +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_42E4C0  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
mov eax [esp+6Ch+arg_0] +
sbb edx 3 +
sub edx esi +
lea edi [edx+1] +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] eax +
call sub_40E140  +
test eax eax +
mov ebp eax +
jz loc_42E6C8  +
mov [esp+6Ch+var_68] esi +
mov [esp+6Ch+var_64] edi +
mov [esp+6Ch+var_6C] eax +
call memcpy  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] ebp +
mov [esp+6Ch+var_6C] eax +
call sub_40F810  +
test eax eax +
mov esi eax +
jz loc_42E6C8  +
mov edx [ebx+14h] +
mov ecx [ebx+10h] +
mov eax [ebx+0Ch] +
add ecx edx +
mov [esi+20h] ecx +
mov ecx [ebx+18h] +
add eax edx +
mov [esi+1Ch] eax +
sub ecx edx +
add edx [ebx+8] +
mov [esi+24h] ecx +
mov dword ptr [esi+54h] 0 +
mov [esi+50h] edx +
mov edx eax +
neg edx  +
and eax edx +
jz loc_42E6D2  +
mov edx [ebx+1Ch] +
cmp eax edx +
cmova eax edx +
mov [esp+6Ch+var_6C] eax +
call near ptr dword_4135E0  +
cmp dword ptr [ebx] 1 +
mov [esi+40h] eax +
jz loc_42E6E6  +
mov eax [ebx+4] +
test al 2 +
jnz loc_42E470  +
or dword ptr [esi+14h] 8 +
jmp loc_42E470  +
xor ecx ecx +
cmp edx eax +
setb cl  +
cmp eax edx +
mov ebp ecx +
mov eax offset unk_497A12 +
mov ecx offset aA +
cmovbe ecx eax +
mov eax [esp+6Ch+arg_8] +
lea esi [esp+6Ch+var_4C] +
mov [esp+6Ch+var_5C] ecx +
mov [esp+6Ch+var_68] offset aSDS +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_60] eax +
mov eax [esp+6Ch+arg_C] +
mov [esp+6Ch+var_64] eax +
call sprintf  +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_42E5E9  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
mov eax [esp+6Ch+arg_0] +
sbb edx 3 +
sub edx esi +
add edx 1 +
mov [esp+6Ch+var_68] edx +
mov [esp+6Ch+var_6C] eax +
mov [esp+6Ch+var_50] edx +
call sub_40E140  +
mov edx [esp+6Ch+var_50] +
test eax eax +
mov edi eax +
jz loc_42E6C8  +
mov [esp+6Ch+var_64] edx +
mov [esp+6Ch+var_68] esi +
mov [esp+6Ch+var_6C] eax +
call memcpy  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] eax +
call sub_40F810  +
test eax eax +
mov edi eax +
jz loc_42E6C8  +
mov eax [ebx+0Ch] +
mov [edi+1Ch] eax +
mov eax [ebx+10h] +
mov [edi+20h] eax +
mov eax [ebx+14h] +
mov [edi+24h] eax +
mov eax [ebx+8] +
or dword ptr [edi+14h] 100h +
mov dword ptr [edi+54h] 0 +
mov [edi+50h] eax +
mov eax [ebx+1Ch] +
mov [esp+6Ch+var_6C] eax +
call near ptr dword_4135E0  +
cmp dword ptr [ebx] 1 +
mov [edi+40h] eax +
jz loc_42E720  +
mov eax [ebx+4] +
test al 2 +
jz loc_42E6E0  +
mov eax [ebx+14h] +
cmp [ebx+18h] eax +
jbe loc_42E470  +
test ebp ebp +
mov eax offset aB +
jnz loc_42E494  +
jmp loc_42E48F  +
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+1Ch] +
jmp loc_42E579  +
or dword ptr [edi+14h] 8 +
jmp loc_42E6AA  +
mov eax [esp+6Ch+arg_0] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jz loc_42E741  +
mov edx [esi+14h] +
mov eax edx +
or eax 1 +
mov [esi+14h] eax +
mov eax [ebx+4] +
test al 1 +
jz loc_42E590  +
or edx 11h +
mov [esi+14h] edx +
jmp loc_42E590  +
mov ecx [edi+14h] +
mov eax ecx +
or eax 3 +
mov [edi+14h] eax +
mov eax [ebx+4] +
test al 1 +
jz loc_42E6A6  +
or ecx 13h +
mov [edi+14h] ecx +
jmp loc_42E6A6  +
mov dword ptr [esi+24h] 0 +
jmp loc_42E6F8  +
xor ebp ebp +
mov ecx offset unk_497A12 +
jmp loc_42E5B9  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_0] +
mov edx [esi] +
cmp edx 4 +
jz loc_42E880  +
jbe loc_42E7A6  +
cmp edx 6474E550h +
jz loc_42E870  +
ja loc_42E7F0  +
cmp edx 5 +
jz loc_42E830  +
cmp edx 6 +
jnz loc_42E840  +
mov [esp+2Ch+var_20] offset aPhdr +
jmp loc_42E7D0  +
cmp edx 1 +
jz loc_42E8D0  +
jb loc_42E8C0  +
cmp edx 2 +
jz loc_42E810  +
cmp edx 3 +
lea esi [esi+0] +
jnz loc_42E840  +
mov [esp+2Ch+var_20] offset aInterp +
lea esi [esi+0] +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
call sub_42E450  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx 6474E551h +
jz loc_42E820  +
cmp edx 6474E552h +
jnz loc_42E840  +
mov [esp+2Ch+var_20] offset aRelro +
jmp loc_42E7D0  +
mov [esp+2Ch+var_20] offset aDynamic +
jmp loc_42E7D0  +
mov [esp+2Ch+var_20] offset aStack +
jmp loc_42E7D0  +
mov [esp+2Ch+var_20] offset aShlib +
jmp loc_42E7D0  +
mov eax [ebx+4] +
mov edi [esp+2Ch+arg_8] +
mov eax [eax+1B0h] +
mov eax [eax+58h] +
mov [esp+2Ch+var_20] offset aProc +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call eax  +
jmp loc_42E7E4  +
mov [esp+2Ch+var_20] offset aEh_frame_hdr +
jmp loc_42E7D0  +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_20] offset aNote +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
call sub_42E450  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_42E7E4  +
mov ebp [esi+14h] +
mov esi [esi+8] +
test ebp ebp +
jnz loc_42E8DD  +
mov eax 1 +
jmp loc_42E7E4  +
mov [esp+2Ch+var_20] offset aNull_1 +
jmp loc_42E7D0  +
mov [esp+2Ch+var_20] offset aLoad +
jmp loc_42E7D0  +
xor edi edi +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebx +
call sub_411E10  +
test eax eax +
jz loc_42E902  +
xor eax eax +
jmp loc_42E7E4  +
lea eax [ebp+1] +
mov [esp+2Ch+var_2C] eax +
call sub_412BD0  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_42E8FB  +
mov byte ptr [eax+ebp] 0 +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_411C00  +
cmp ebp eax +
jz loc_42E940  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call free  +
xor eax eax +
jmp loc_42E7E4  +
mov edx [esp+2Ch+var_10] +
mov ecx ebp +
mov eax ebx +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] edi +
call sub_42A2F0  +
test eax eax +
jz loc_42E92D  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call free  +
jmp loc_42E8B2  +
***
mov ebx [esp+18h+arg_0] +
mov edx [ebx+8Ch] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_42E9B0  +
mov edx [edx+4Ch] +
test edx edx +
jz loc_42E9A9  +
mov [esp+18h+var_14] 0AECh +
mov [esp+18h+var_18] offset a____Binutil_10 +
call sub_410530  +
mov eax [ebx+8Ch] +
mov eax [eax+3Ch] +
add esp 18h +
pop ebx  +
retn   +
mov eax [edx+4Ch] +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [esp+4] +
mov eax 8 +
and edx 103h +
cmp edx 1 +
mov edx 1 +
cmovnz eax edx +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
test eax eax +
jz loc_42EA65  +
mov edx [eax+8Ch] +
mov ecx [edx+4] +
cmp ecx 4 +
jnz loc_42EA60  +
mov ebx [eax] +
lea edx [ebx+4] +
add ebx 5 +
cmp ecx 9 +
cmovnz edx ebx +
mov ebx [eax+94h] +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1ADh] 1 +
jz loc_42EA32  +
mov edi offset a_plt +
mov ecx 5 +
mov esi edx +
cmps   +
jz loc_42EA45  +
mov [esp+4] edx +
mov [esp] ebx +
call sub_40F280  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [esp+4] offset a_got_plt +
mov [esp] ebx +
call sub_40F280  +
test eax eax +
jnz loc_42EA3E  +
mov edx offset a_got +
jmp loc_42EA32  +
***
cmp ecx 9 +
jz loc_42E9FC  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx [esp+arg_C] +
mov ecx [esp+arg_0] +
mov eax [esp+arg_4] +
mov edx [esp+arg_8] +
test ebx ebx +
jz loc_42EAA0  +
mov ebx [ecx+24h] +
cmp ebx 1 +
jbe loc_42EAA0  +
mov esi eax +
xor edx edx +
lea edi [ebx+eax-1] +
mov eax 0FFFFFFFFh +
cmp esi edi +
jbe loc_42EAC6  +
mov ebx [ecx+2Ch] +
mov [ecx+10h] eax +
mov [ecx+14h] edx +
test ebx ebx +
jz loc_42EAB3  +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
cmp dword ptr [ecx+4] 8 +
jz loc_42EAC2  +
mov ecx [ecx+18h] +
xor ebx ebx +
add eax ecx +
adc edx ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ebx +
xor edx edx +
neg eax  +
and eax edi +
jmp loc_42EAA0  +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
mov ebx [esp+10h] +
mov eax [eax+0A0h] +
mov edx [eax+934h] +
mov eax [eax+44h] +
mov ecx [edx] +
test ecx ecx +
jz loc_42EB18  +
mov esi [ecx+24h] +
mov edx esi +
sub edx 1 +
js loc_42EB0F  +
cmp [ecx+esi*4+24h] ebx +
jnz loc_42EB07  +
jmp loc_42EB20  +
cmp [ecx+edx*4+28h] ebx +
jz loc_42EB20  +
sub edx 1 +
cmp edx 0FFFFFFFFh +
jnz loc_42EB01  +
mov ecx [ecx] +
add eax 20h +
test ecx ecx +
jnz loc_42EAEF  +
xor eax eax +
lea esi [esi+0] +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] 2Ch +
mov [esp+1Ch+var_1C] eax +
call sub_40E220  +
test eax eax +
jz loc_42EB66  +
mov edx [esp+1Ch+arg_4] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 2 +
mov dword ptr [eax+24h] 1 +
mov [eax+28h] edx +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+6Ch+var_3C] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov eax [eax] +
test eax eax +
setz dl  +
movzx eax dl +
mov [esp+6Ch+var_58] eax +
mov eax [esp+6Ch+arg_4] +
test eax eax +
jz loc_42EBD7  +
mov eax [esp+6Ch+arg_4] +
xor edx 1 +
mov edi [esp+6Ch+arg_4] +
shl edx 6 +
movzx eax byte ptr [eax+5] +
and eax 0FFFFFFBFh +
or eax edx +
mov [edi+5] al +
mov eax [esp+6Ch+var_58] +
test eax eax +
jz loc_42EBF1  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+6Ch] +
test eax eax +
jnz loc_42ED01  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov edi [eax+934h] +
mov eax [edi] +
test eax eax +
jz loc_42EC65  +
lea esi [esi+0] +
mov edx [eax+24h] +
xor esi esi +
test edx edx +
jz loc_42EC48  +
xor edx edx +
nop   +
lea esi [esi+0] +
mov ebx [eax+edx*4+28h] +
mov ecx [ebx+14h] +
test ch 80h +
jnz loc_42EC3E  +
and ecx 1 +
jnz loc_42EC37  +
cmp dword ptr [eax+4] 1 +
jz loc_42EC3E  +
mov [eax+esi*4+28h] ebx +
add esi 1 +
mov eax [edi] +
add edx 1 +
cmp edx [eax+24h] +
jb loc_42EC20  +
mov ecx [esp+6Ch+var_58] +
mov [eax+24h] esi +
test ecx ecx +
jz loc_42EC5D  +
cmp dword ptr [eax+4] 1 +
jz loc_42ECF0  +
mov edi eax +
mov eax [eax] +
test eax eax +
jnz loc_42EC10  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+0ACh] +
test eax eax +
jz loc_42EC9E  +
mov edi [esp+6Ch+arg_4] +
mov esi [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] esi +
call eax  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_42ECE2  +
mov eax [esp+6Ch+arg_0] +
xor edx edx +
mov eax [eax+0A0h] +
mov ecx [eax+934h] +
mov eax [ecx] +
test eax eax +
jz loc_42ECC9  +
lea esi [esi+0] +
mov eax [eax] +
add edx 1 +
test eax eax +
jnz loc_42ECC0  +
mov eax [esp+6Ch+var_3C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+1] +
imul edx eax +
mov eax 1 +
mov [ecx+1Ch] edx +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jnz loc_42EC5D  +
mov eax [eax] +
mov [edi] eax +
jmp loc_42EC06  +
mov [esp+6Ch+var_68] 4 +
mov [esp+6Ch+var_6C] eax +
call sub_412C10  +
mov ebp eax +
mov [esp+6Ch+var_4C] eax +
xor eax eax +
test ebp ebp +
jz loc_42ECE2  +
mov eax [esp+6Ch+arg_0] +
xor ebx ebx +
mov [esp+6Ch+var_6C] eax +
call sub_4101E0  +
lea ecx [eax-1] +
mov eax 1 +
shl eax cl +
lea esi [eax+eax-1] +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+64h] +
test eax eax +
jz loc_42F6E9  +
xor ecx ecx +
test byte ptr [eax+14h] 1 +
jz loc_42ED6E  +
mov edi [eax+20h] +
mov edx [eax+24h] +
mov [ebp+ecx*4+0] eax +
add ecx 1 +
add edx edi +
and edi esi +
and edx esi +
cmp edx edi +
cmovb ebx edx +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_42ED50  +
mov edi [esp+6Ch+arg_0] +
mov [esp+6Ch+var_40] ecx +
cmp [edi+6Ch] ecx +
jb loc_42F6B6  +
mov eax [esp+6Ch+var_40] +
mov [esp+6Ch+var_60] 429C20h +
mov [esp+6Ch+var_64] 4 +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] eax +
call qsort  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] offset a_interp_0 +
mov [esp+6Ch+var_10] 0 +
mov [esp+6Ch+var_6C] eax +
call sub_40F280  +
mov ebp eax +
test ebp ebp +
lea eax [esp+6Ch+var_10] +
mov [esp+6Ch+var_48] eax +
jz loc_42EDE4  +
test byte ptr [ebp+14h] 2 +
jnz loc_42F638  +
mov eax [esp+6Ch+var_3C] +
mov eax [eax+10h] +
mov [esp+6Ch+var_68] offset a_dynamic_1 +
test eax eax +
mov edi eax +
mov eax 1 +
cmovnz eax edi +
mov [esp+6Ch+var_30] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_40F280  +
test eax eax +
mov edi eax +
mov [esp+6Ch+var_28] eax +
jz loc_42EE2C  +
test byte ptr [eax+14h] 2 +
mov eax 0 +
cmovnz eax edi +
mov [esp+6Ch+var_28] eax +
mov eax [esp+6Ch+var_40] +
test eax eax +
jz loc_42F031  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov edx [eax+1Ch] +
cmp edx 0FFFFFFFFh +
jz loc_42F6CF  +
mov eax [esp+6Ch+var_3C] +
mov edi [esp+6Ch+arg_0] +
mov eax [eax+174h] +
test byte ptr [edi+29h] 20h +
movzx eax byte ptr [eax] +
jnz loc_42F44A  +
mov eax [esp+6Ch+var_4C] +
mov ecx [eax] +
mov [esp+6Ch+var_34] 0 +
mov eax [esp+6Ch+var_30] +
mov ebx ecx +
xor esi esi +
xor edi edi +
xor edx edx +
mov [esp+6Ch+var_38] 0 +
mov ebp esi +
mov [esp+6Ch+var_54] 0 +
lea ecx [eax-1] +
neg eax  +
mov [esp+6Ch+var_20] ecx +
mov [esp+6Ch+var_2C] eax +
mov [esp+6Ch+var_50] edi +
jmp loc_42EEF2  +
mov eax [ebx+14h] +
mov edx 1 +
mov [esp+6Ch+var_50] 0 +
test al 8 +
cmovz ebp edx +
and eax 402h +
cmp eax 400h +
jz loc_42EEDC  +
mov eax [ebx+24h] +
mov [esp+6Ch+var_50] eax +
add esi 1 +
cmp esi [esp+6Ch+var_40] +
jz loc_42EFDA  +
mov eax [esp+6Ch+var_4C] +
mov edx ebx +
mov ebx [eax+esi*4] +
test edx edx +
jz loc_42EEB4  +
mov eax [ebx+20h] +
mov ecx [edx+20h] +
mov [esp+6Ch+var_54] 1 +
mov [esp+6Ch+var_44] eax +
mov edi ecx +
sub eax [ebx+1Ch] +
sub edi [edx+1Ch] +
cmp edi eax +
jz loc_42F524  +
mov eax [esp+6Ch+arg_4] +
test eax eax +
jz loc_42EF5F  +
mov eax [esp+6Ch+arg_4] +
mov ecx [eax+18h] +
mov ecx [ecx+38h] +
test ecx ecx +
jz loc_42EF5F  +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_60] edx +
mov [esp+6Ch+var_64] ebx +
mov [esp+6Ch+var_5C] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_4] +
mov [esp+6Ch+var_6C] eax +
call ecx  +
mov [esp+6Ch+var_54] eax +
mov eax [esp+6Ch+var_54] +
test eax eax +
jz loc_42EEB4  +
mov eax [esp+6Ch+var_34] +
mov ecx [esp+6Ch+var_38] +
mov edx [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
call sub_429CD0  +
test eax eax +
jz loc_42F38C  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [ebx+14h] +
mov ebp eax +
and eax 402h +
shr ebp 3 +
xor ebp 1 +
and ebp 1 +
cmp eax 400h +
jz loc_42F5E0  +
mov eax [ebx+24h] +
mov [esp+6Ch+var_38] esi +
add esi 1 +
cmp esi [esp+6Ch+var_40] +
mov [esp+6Ch+var_34] 0 +
mov [esp+6Ch+var_50] eax +
jnz loc_42EEE9  +
test ebx ebx +
mov eax esi +
mov [esp+6Ch+var_54] esi +
jz loc_42F031  +
sub eax [esp+6Ch+var_38] +
cmp eax 1 +
jnz loc_42EFFC  +
mov eax [ebx+14h] +
and eax 402h +
cmp eax 400h +
jz loc_42F031  +
mov eax [esp+6Ch+var_34] +
mov ecx [esp+6Ch+var_38] +
mov edx [esp+6Ch+var_4C] +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_6C] eax +
mov eax [esp+6Ch+arg_0] +
call sub_429CD0  +
test eax eax +
jz loc_42F38C  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+var_28] +
test eax eax +
jz loc_42F05E  +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_42EB30  +
test eax eax +
jz loc_42F38C  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+arg_0] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_42F237  +
mov [esp+6Ch+var_50] 0 +
mov [esp+6Ch+var_54] 0 +
mov eax [ebp+14h] +
test al 2 +
jz loc_42F148  +
mov esi [ebp+0] +
mov edi offset a_note +
mov ecx 5 +
cmps   +
jnz loc_42F148  +
cmp dword ptr [ebp+40h] 2 +
mov eax 2Ch +
mov ebx 1 +
jz loc_42F3A2  +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_40E220  +
test eax eax +
mov edi eax +
jz loc_42F38C  +
cmp ebx 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 4 +
mov [eax+24h] ebx +
mov eax ebx +
ja loc_42F0FA  +
jmp loc_42F12A  +
cmp esi 1 +
mov ebp [ebp+0Ch] +
jz loc_42F12A  +
mov ebx esi +
mov edx eax +
sub edx ebx +
test byte ptr [ebp+15h] 4 +
lea esi [ebx-1] +
mov [edi+edx*4+28h] ebp +
jz loc_42F0F0  +
mov [esp+6Ch+var_68] 11A6h +
mov [esp+6Ch+var_6C] offset a____Binutil_10 +
call sub_410530  +
cmp esi 1 +
mov eax [edi+24h] +
mov ebp [ebp+0Ch] +
jnz loc_42F0F8  +
mov [edi+eax*4+24h] ebp +
mov eax [ebp+14h] +
and eax 400h +
jnz loc_42F429  +
mov esi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] edi +
mov [esi] edi +
jmp loc_42F14D  +
and eax 400h +
test eax eax +
jz loc_42F167  +
mov edi [esp+6Ch+var_54] +
mov eax [esp+6Ch+var_50] +
test edi edi +
cmovz eax ebp +
add [esp+6Ch+var_54] 1 +
mov [esp+6Ch+var_50] eax +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_42F080  +
mov ebx [esp+6Ch+var_54] +
test ebx ebx +
jz loc_42F237  +
lea eax ds:28h[ebx*4] +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_40E220  +
test eax eax +
jz loc_42F38C  +
mov dword ptr [eax] 0 +
mov ecx [esp+6Ch+var_50] +
xor edx edx +
mov dword ptr [eax+4] 7 +
mov [eax+24h] ebx +
mov dword ptr [eax+8] 4 +
or byte ptr [eax+20h] 1 +
jmp loc_42F1D1  +
mov [eax+edx*4+28h] ecx +
add edx 1 +
mov ecx [ecx+0Ch] +
cmp ebx edx +
jz loc_42F22D  +
test byte ptr [ecx+15h] 4 +
jnz loc_42F1C3  +
mov eax [esp+6Ch+arg_0] +
xor ebx ebx +
mov [esp+6Ch+var_6C] offset aBTlsSectionsAr +
mov [esp+6Ch+var_68] eax +
call off_47D664  +
mov esi [esp+6Ch+var_50] +
jmp loc_42F214  +
mov [esp+6Ch+var_6C] offset aTlsA +
add ebx 1 +
call off_47D664  +
cmp ebx [esp+6Ch+var_54] +
mov esi [esi+0Ch] +
jnb loc_42F380  +
test byte ptr [esi+15h] 4 +
mov [esp+6Ch+var_68] esi +
jnz loc_42F1F7  +
mov [esp+6Ch+var_6C] offset aNonTlsA +
call off_47D664  +
jmp loc_42F207  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov ebx [eax+0Ch] +
test ebx ebx +
jz loc_42F2B0  +
mov edx [ebx+3Ch] +
test byte ptr [edx+14h] 2 +
jz loc_42F2B0  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_40E220  +
test eax eax +
jz loc_42F38C  +
mov edx [ebx+3Ch] +
mov edi [esp+6Ch+var_48] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 6474E550h +
mov dword ptr [eax+24h] 1 +
mov [eax+28h] edx +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov esi [eax+34h] +
test esi esi +
jnz loc_42F495  +
mov ebx [esp+6Ch+arg_4] +
test ebx ebx +
jz loc_42F356  +
mov eax [esp+6Ch+arg_4] +
test byte ptr [eax+3] 1 +
jz loc_42F356  +
mov eax [esp+6Ch+var_10] +
test eax eax +
jz loc_42F356  +
mov ebx [esp+6Ch+arg_4] +
jmp loc_42F2EE  +
mov eax [eax] +
test eax eax +
jz loc_42F356  +
cmp dword ptr [eax+4] 1 +
jnz loc_42F2E8  +
mov edx [eax+24h] +
test edx edx +
jz loc_42F2E8  +
mov ecx [eax+28h] +
mov ecx [ecx+1Ch] +
cmp ecx [ebx+70h] +
jb loc_42F2E8  +
cmp ecx [ebx+74h] +
jnb loc_42F2E8  +
sub edx 1 +
cmp edx 0FFFFFFFFh +
jz loc_42F2E8  +
mov ecx [eax+edx*4+28h] +
mov ecx [ecx+14h] +
and ecx 102h +
cmp ecx 102h +
jnz loc_42F30B  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_40E220  +
test eax eax +
jz loc_42F38C  +
mov esi [esp+6Ch+var_48] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 6474E552h +
mov [esi] eax +
mov eax [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax [esp+6Ch+arg_0] +
mov ecx [esp+6Ch+var_10] +
mov eax [eax+0A0h] +
mov edx [eax+934h] +
mov [edx] ecx +
jmp loc_42EBFE  +
mov [esp+6Ch+var_6C] 11h +
call sub_4105E0  +
mov eax [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] eax +
call free  +
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebp+0Ch] +
test edx edx +
jz loc_42F0B4  +
cmp dword ptr [edx+40h] 2 +
jnz loc_42F0B4  +
test byte ptr [edx+14h] 2 +
jz loc_42F0B4  +
mov eax ebp +
mov [esp+6Ch+var_44] ebx +
jmp loc_42F3FD  +
mov ecx [eax+20h] +
add ecx [eax+24h] +
lea eax [ecx+3] +
and eax 0FFFFFFFCh +
cmp eax [edx+20h] +
jnz loc_42F419  +
mov ecx [edx+0Ch] +
add [esp+6Ch+var_44] 1 +
test ecx ecx +
jz loc_42F419  +
cmp dword ptr [ecx+40h] 2 +
jnz loc_42F419  +
test byte ptr [ecx+14h] 2 +
jz loc_42F419  +
mov eax edx +
mov edx ecx +
mov esi [edx] +
mov ecx 5 +
mov edi offset a_note +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov ebx esi +
cmp bl cl +
jz loc_42F3D0  +
mov ebx [esp+6Ch+var_44] +
lea eax ds:28h[ebx*4] +
jmp loc_42F0B4  +
mov [esp+6Ch+var_68] 11AAh +
mov [esp+6Ch+var_6C] offset a____Binutil_10 +
call sub_410530  +
mov eax [ebp+14h] +
and eax 400h +
jmp loc_42F13C  +
lea edi [edx+eax] +
mov eax [esp+6Ch+var_4C] +
mov ecx [eax] +
and esi [ecx+20h] +
cmp edi esi +
ja loc_42EE7B  +
xor edx edx +
mov eax esi +
div  [esp+6Ch+var_30] +
mov eax edi +
mov ebp edx +
xor edx edx +
div  [esp+6Ch+var_30] +
cmp ebp edx +
jb loc_42EE7B  +
mov eax [esp+6Ch+var_30] +
mov [esp+6Ch+var_34] 1 +
neg eax  +
and eax esi +
cmp ebx eax +
jbe loc_42EE83  +
jmp loc_42EE7B  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_40E220  +
test eax eax +
jz loc_42F38C  +
mov esi [esp+6Ch+arg_0] +
mov dword ptr [eax] 0 +
mov edi [esp+6Ch+var_3C] +
mov dword ptr [eax+4] 6474E551h +
mov edx [esi+0A0h] +
mov ecx [edi+1A8h] +
mov esi [esp+6Ch+arg_4] +
mov edx [edx+934h] +
mov edx [edx+34h] +
mov [eax+14h] ecx +
mov [eax+8] edx +
movzx edx byte ptr [eax+20h] +
or edx 1 +
test ecx ecx +
setnz cl  +
and edx 0FFFFFFFBh +
shl ecx 2 +
or edx ecx +
mov ecx [esi+10h] +
mov [eax+20h] dl +
test ecx ecx +
jle loc_42F515  +
or edx 8 +
mov [eax+18h] ecx +
mov [eax+20h] dl +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
jmp loc_42F2CA  +
mov eax [esp+6Ch+var_50] +
add eax ecx +
cmp [esp+6Ch+var_44] eax +
mov [esp+6Ch+var_50] eax +
jb loc_42EF18  +
cmp ecx eax +
ja loc_42EF18  +
mov edi [esp+6Ch+var_30] +
sub eax 1 +
mov [esp+6Ch+var_24] eax +
add edi eax +
cmp [esp+6Ch+var_50] edi +
mov eax edi +
jbe loc_42F5F9  +
mov eax [esp+6Ch+var_20] +
cmp eax ecx +
mov edi eax +
jbe loc_42F575  +
cmp [esp+6Ch+var_44] edi +
mov [esp+6Ch+var_54] 1 +
jnb loc_42EF18  +
test dword ptr [edx+14h] 402h +
jnz loc_42F610  +
test dword ptr [ebx+14h] 402h +
jz loc_42F610  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_54] 1 +
test byte ptr [eax+29h] 20h +
jz loc_42EF18  +
mov ecx [esp+6Ch+var_24] +
xor ecx [esp+6Ch+var_44] +
test [esp+6Ch+var_2C] ecx +
jnz loc_42EF18  +
test ebp ebp +
jnz loc_42F62B  +
test byte ptr [ebx+14h] 8 +
jnz loc_42F62B  +
mov eax [esp+6Ch+var_24] +
xor eax [esp+6Ch+var_44] +
test [esp+6Ch+var_2C] eax +
jz loc_42F62B  +
mov [esp+6Ch+var_54] 1 +
jmp loc_42EF18  +
mov [esp+6Ch+var_38] esi +
mov [esp+6Ch+var_34] 0 +
mov [esp+6Ch+var_50] 0 +
jmp loc_42EEDC  +
mov edi [esp+6Ch+var_30] +
and eax [esp+6Ch+var_2C] +
add edi eax +
cmp edi ecx +
jbe loc_42F575  +
jmp loc_42F563  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_54] 0 +
test byte ptr [eax+29h] 20h +
jz loc_42EF18  +
jmp loc_42F5BA  +
mov [esp+6Ch+var_54] 0 +
jmp loc_42EF18  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_40E220  +
test eax eax +
mov edi eax +
jz loc_42F38C  +
mov dword ptr [eax] 0 +
or byte ptr [eax+20h] 21h +
mov dword ptr [eax+4] 6 +
mov dword ptr [eax+8] 5 +
mov [esp+6Ch+var_10] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_40E220  +
test eax eax +
jz loc_42F38C  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 3 +
mov dword ptr [eax+24h] 1 +
mov [eax+28h] ebp +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
jmp loc_42EDE4  +
mov [esp+6Ch+var_68] 1092h +
mov [esp+6Ch+var_6C] offset a____Binutil_10 +
call sub_410530  +
jmp loc_42ED89  +
mov edx [esp+6Ch+arg_4] +
mov eax [esp+6Ch+arg_0] +
call sub_429E70  +
mov edx eax +
jmp loc_42EE57  +
mov [esp+6Ch+var_40] 0 +
jmp loc_42ED89  +
***
sub esp 24h +
mov edx [esp+24h+arg_4] +
mov ecx [esp+24h+arg_0] +
mov eax [edx+8Ch] +
test eax eax +
jz loc_42F71E  +
mov eax [eax+5Ch] +
test eax eax +
jnz loc_42F76D  +
cmp edx offset off_47D510 +
jz loc_42F7B2  +
mov esi [edx+14h] +
mov ebx 0FFFFFFF2h +
and esi 1000h +
jz loc_42F773  +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
mov eax [eax+60h] +
test eax eax +
jz loc_42F763  +
lea esi [esp+24h+var_8] +
mov [esp+24h+var_8] ebx +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] ecx +
call eax  +
test eax eax +
jnz loc_42F7A8  +
cmp ebx 0FFFFFEFFh +
mov eax ebx +
jz loc_42F792  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [ecx+4] +
cmp edx offset off_47D468 +
mov bx 0FEFFh +
cmovz ebx esi +
mov eax [eax+1B0h] +
mov eax [eax+60h] +
test eax eax +
jnz loc_42F74A  +
jmp loc_42F763  +
mov [esp+24h+var_24] 0Fh +
mov [esp+24h+var_18] ebx +
call sub_4105E0  +
mov eax [esp+24h+var_18] +
jmp loc_42F76D  +
mov eax [esp+24h+var_8] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [ecx+4] +
mov ebx 0FFFFFFF1h +
mov eax [eax+1B0h] +
mov eax [eax+60h] +
test eax eax +
jnz loc_42F74A  +
jmp loc_42F763  +
***
push esi  +
push ebx  +
sub esp 0ACh +
mov ebp [esp+0ACh+arg_0] +
mov eax [ebp+4] +
test byte ptr [ebp+2Bh] 10h +
mov esi [eax+1B0h] +
jnz loc_42F9E2  +
mov eax [esi+0A0h] +
mov edx esi +
test eax eax +
jz loc_42F819  +
mov edi [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_A8] edi +
call eax  +
mov eax [ebp+4] +
mov edx [eax+1B0h] +
mov [esp+0ACh+var_94] edx +
mov ebx [ebp+0A0h] +
call sub_4558C0  +
test eax eax +
mov edi eax +
jz loc_42F9BE  +
mov eax [ebp+0A0h] +
mov edx [esp+0ACh+var_94] +
mov eax [eax+934h] +
mov [eax+4] edi +
mov byte ptr [ebx] 7Fh +
mov byte ptr [ebx+1] 45h +
mov byte ptr [ebx+2] 4Ch +
mov byte ptr [ebx+3] 46h +
mov eax [edx+174h] +
movzx eax byte ptr [eax+0Ch] +
mov [ebx+4] al +
mov eax [ebp+4] +
cmp dword ptr [eax+8] 1 +
sbb eax eax +
not eax  +
add eax 2 +
mov [ebx+5] al +
mov eax [edx+174h] +
movzx eax byte ptr [eax+0Dh] +
mov [ebx+6] al +
mov eax [ebp+28h] +
shr eax 5 +
and eax 3FFFFh +
test al 40h +
jz loc_42F9D0  +
mov eax 3 +
mov [ebx+24h] ax +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_94] edx +
call sub_4101B0  +
mov edx [esp+0ACh+var_94] +
test eax eax +
jnz loc_42F9F2  +
xor eax eax +
mov [ebx+26h] ax +
mov eax [edx+174h] +
movzx edx byte ptr [eax+0Dh] +
mov [ebx+1Ch] edx +
movzx edx byte ptr [eax] +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+2Ch] 0 +
mov dword ptr [ebx+30h] 0 +
mov [ebx+28h] edx +
mov edx [ebp+74h] +
mov [ebx+10h] edx +
movzx eax byte ptr [eax+2] +
mov [ebx+34h] eax +
mov ebx [ebp+0A0h] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_symtab +
mov [esp+0ACh+var_AC] edi +
call sub_455970  +
mov [ebx+48h] eax +
mov ebx [ebp+0A0h] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_strtab +
mov [esp+0ACh+var_AC] edi +
call sub_455970  +
mov [ebx+0B8h] eax +
mov ebx [ebp+0A0h] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_shstrtab +
mov [esp+0ACh+var_AC] edi +
call sub_455970  +
mov [ebx+80h] eax +
mov eax [ebp+0A0h] +
cmp dword ptr [eax+48h] 0FFFFFFFFh +
jz loc_42F9BE  +
cmp dword ptr [eax+0B8h] 0FFFFFFFFh +
jz loc_42F9BE  +
cmp dword ptr [eax+80h] 0FFFFFFFFh +
jz loc_42F9BE  +
mov eax [esi+0C8h] +
mov esi [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_A8] esi +
call eax  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_A8] offset sub_42A950 +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_30] 0 +
mov [esp+0ACh+var_34] eax +
lea eax [esp+0ACh+var_34] +
mov [esp+0ACh+var_A4] eax +
call sub_40F8A0  +
mov ecx [esp+0ACh+var_30] +
test ecx ecx +
jz loc_42FA20  +
***
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test al 2 +
jz loc_42FA00  +
mov eax 2 +
mov [ebx+24h] ax +
jmp loc_42F89B  +
add esp 0ACh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+8] +
mov [ebx+26h] ax +
jmp loc_42F8B9  +
***
movzx eax byte ptr [ebp+28h] +
and eax 7 +
cmp al 3 +
setz al  +
movzx eax al +
lea eax [eax+eax*2+1] +
mov [ebx+24h] ax +
jmp loc_42F89B  +
***
mov eax [ebp+0A0h] +
mov [esp+0ACh+var_8C] eax +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+0ACh+var_AC] eax +
call sub_455B80  +
mov esi [esp+0ACh+arg_4] +
test esi esi +
jz loc_430340  +
mov eax [esp+0ACh+arg_4] +
mov edi 2 +
mov esi 1 +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_430340  +
mov eax [ebp+64h] +
test eax eax +
jz loc_42FB69  +
mov ecx esi +
mov edx ebp +
mov esi eax +
jmp loc_42FAFA  +
***
mov eax [eax] +
lea ebp [edi+1] +
mov [ebx+44h] edi +
cmp eax 0FFFFFFFFh +
jz loc_42FAB0  +
mov ecx [edx+0A0h] +
mov [esp+0ACh+var_94] edx +
mov ecx [ecx+934h] +
mov ecx [ecx+4] +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_AC] ecx +
call sub_455A50  +
mov edx [esp+0ACh+var_94] +
mov eax [ebx+4Ch] +
test eax eax +
jz loc_42FB57  +
mov eax [eax] +
lea ecx [ebp+1] +
mov [ebx+54h] ebp +
cmp eax 0FFFFFFFFh +
jz loc_42FAF3  +
mov ebx [edx+0A0h] +
mov [esp+0ACh+var_84] ecx +
mov [esp+0ACh+var_94] edx +
mov ebx [ebx+934h] +
mov ebx [ebx+4] +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_AC] ebx +
call sub_455A50  +
mov edx [esp+0ACh+var_94] +
mov ecx [esp+0ACh+var_84] +
mov esi [esi+0Ch] +
test esi esi +
jz loc_42FB62  +
mov ebx [esi+8Ch] +
mov edi ecx +
cmp dword ptr [ebx+4] 11h +
jz loc_42FB0E  +
add edi 1 +
mov [ebx+5Ch] ecx +
mov eax [ebx] +
cmp eax 0FFFFFFFFh +
jz loc_42FB38  +
mov ecx [edx+0A0h] +
mov [esp+0ACh+var_94] edx +
mov ecx [ecx+934h] +
mov ecx [ecx+4] +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_AC] ecx +
call sub_455A50  +
mov edx [esp+0ACh+var_94] +
mov eax [ebx+3Ch] +
test eax eax +
jnz loc_42FA80  +
mov eax [ebx+4Ch] +
mov ebp edi +
mov dword ptr [ebx+44h] 0 +
test eax eax +
jnz loc_42FABB  +
mov dword ptr [ebx+54h] 0 +
mov ecx ebp +
jmp loc_42FAF3  +
mov esi ecx +
mov ebp edx +
lea edi [ecx+1] +
mov eax [ebp+0A0h] +
mov ecx [esp+0ACh+var_8C] +
mov eax [eax+934h] +
mov edx [ecx+80h] +
mov [eax+2Ch] esi +
mov eax [eax+4] +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_AC] eax +
call sub_455A50  +
mov eax [ebp+0A0h] +
mov ebx [ebp+7Ch] +
mov edx [eax+934h] +
test ebx ebx +
mov edx [edx+2Ch] +
mov [eax+3Ch] edx +
jz loc_42FF32  +
mov eax [ebp+0A0h] +
lea ebx [esi+2] +
mov [eax+90Ch] edi +
mov eax [esp+0ACh+var_8C] +
mov edx [eax+48h] +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_AC] eax +
call sub_455A50  +
cmp ebx 0FEFEh +
jbe loc_431454  +
mov eax [ebp+0A0h] +
mov edx [eax+208h] +
test edx edx +
jz loc_42FC0F  +
mov [esp+0ACh+var_A8] 0D5Ch +
mov [esp+0ACh+var_AC] offset a____Binutil_10 +
call sub_410530  +
mov [esp+0ACh+var_A8] 40h +
add esi 3 +
mov [esp+0ACh+var_AC] ebp +
call sub_40E220  +
mov [eax+38h] ebx +
mov edi eax +
mov eax [ebp+0A0h] +
mov [eax+208h] edi +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_symtab_shndx +
mov [esp+0ACh+var_AC] eax +
call sub_455970  +
cmp eax 0FFFFFFFFh +
mov [edi] eax +
jz loc_42F9BE  +
mov eax [ebp+0A0h] +
lea edi [esi+1] +
mov ebx 1 +
mov eax [eax+934h] +
mov [eax+30h] esi +
mov esi [esp+0ACh+var_8C] +
mov eax [eax+4] +
mov edx [esi+0B8h] +
mov [esp+0ACh+var_AC] eax +
mov [esp+0ACh+var_A8] edx +
call sub_455A50  +
cmp edi 0FFFFFEFFh +
ja loc_4303A0  +
mov eax [ebp+0A0h] +
mov [eax+214h] edi +
mov eax [ebp+0A0h] +
mov [eax+38h] edi +
mov [esp+0ACh+var_A4] 4 +
mov [esp+0ACh+var_A8] edi +
mov [esp+0ACh+var_AC] ebp +
call sub_40E310  +
test eax eax +
mov esi eax +
mov [esp+0ACh+var_94] eax +
jz loc_42F9BE  +
mov [esp+0ACh+var_A8] 38h +
mov [esp+0ACh+var_AC] ebp +
call sub_40E220  +
test eax eax +
mov [esi] eax +
jz loc_431DDB  +
mov eax [ebp+0A0h] +
test ebx ebx +
mov esi [esp+0ACh+var_94] +
mov edi [esp+0ACh+var_8C] +
mov [eax+40h] esi +
mov eax [ebp+0A0h] +
lea edx [edi+80h] +
mov eax [eax+934h] +
mov eax [eax+2Ch] +
mov [esi+eax*4] edx +
jz loc_42FD9A  +
mov eax [ebp+0A0h] +
lea edx [edi+48h] +
mov esi [esp+0ACh+var_94] +
mov eax [eax+90Ch] +
mov [esi+eax*4] edx +
mov eax [ebp+0A0h] +
cmp dword ptr [eax+214h] 0FF00h +
jbe loc_42FD6E  +
mov ebx [eax+208h] +
test ebx ebx +
jz loc_4327E3  +
mov eax [ebx+38h] +
mov esi [esp+0ACh+var_94] +
mov [esi+eax*4] ebx +
mov eax [ebp+0A0h] +
mov edx [eax+90Ch] +
mov [ebx+1Ch] edx +
mov eax [eax+934h] +
mov esi [esp+0ACh+var_8C] +
mov edi [esp+0ACh+var_94] +
mov eax [eax+30h] +
lea edx [esi+0B8h] +
mov [edi+eax*4] edx +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+30h] +
mov [esi+64h] eax +
mov edx [ebp+64h] +
test edx edx +
jz loc_4301BC  +
mov [esp+0ACh+arg_0] ebp +
jmp loc_42FE1B  +
***
cmp eax 5 +
jz loc_430035  +
ja loc_42FF61  +
cmp eax 3 +
jnz loc_430060  +
mov esi [edx] +
mov edi offset a_stab_1 +
mov ecx 5 +
mov ebp esi +
cmps   +
jnz loc_42FE10  +
mov [esp+0ACh+var_AC] ebp +
mov edi ebp +
mov [esp+0ACh+var_84] edx +
mov esi edi +
mov edi offset aStr +
call strlen  +
mov ecx 4 +
mov edx [esp+0ACh+var_84] +
mov ebp eax +
sub eax 3 +
mov [esp+0ACh+var_8C] eax +
add esi eax +
cmps   +
jz loc_4303C0  +
nop   +
lea esi [esi+0] +
mov edx [edx+0Ch] +
test edx edx +
jz loc_4301B5  +
mov ebx [edx+8Ch] +
mov eax [esp+0ACh+var_94] +
mov ecx [ebx+44h] +
mov esi [ebx+5Ch] +
test ecx ecx +
mov [eax+esi*4] ebx +
jz loc_42FE3C  +
mov eax [ebx+3Ch] +
mov edi [esp+0ACh+var_94] +
mov [edi+ecx*4] eax +
mov eax [ebx+54h] +
test eax eax +
jz loc_42FE4E  +
mov edi [ebx+4Ch] +
mov ebp [esp+0ACh+var_94] +
mov [ebp+eax*4+0] edi +
test ecx ecx +
jz loc_42FE72  +
mov edi [esp+0ACh+arg_0] +
mov ecx [ebx+3Ch] +
mov edi [edi+0A0h] +
mov edi [edi+90Ch] +
or dword ptr [ecx+8] 40h +
mov [ecx+20h] esi +
mov [ecx+1Ch] edi +
test eax eax +
jz loc_42FE96  +
mov edi [esp+0ACh+arg_0] +
mov eax [ebx+4Ch] +
mov ecx [edi+0A0h] +
mov ecx [ecx+90Ch] +
or dword ptr [eax+8] 40h +
mov [eax+20h] esi +
mov [eax+1Ch] ecx +
test byte ptr [ebx+8] 80h +
jz loc_42FEEB  +
mov eax [edx+8Ch] +
mov edi [eax+64h] +
test edi edi +
jz loc_430080  +
mov eax [esp+0ACh+arg_4] +
test eax eax +
jz loc_4300C3  +
cmp edi offset off_47D510 +
jz loc_430110  +
mov esi [edi+3Ch] +
cmp esi offset off_47D510 +
jz loc_430120  +
test esi esi +
jz loc_430194  +
mov eax [esi+8Ch] +
mov eax [eax+5Ch] +
mov [ebx+1Ch] eax +
mov eax [ebx+4] +
cmp eax 0Bh +
jz loc_42FFE0  +
jbe loc_42FDB0  +
cmp eax 6FFFFFF7h +
jz loc_430043  +
ja loc_430018  +
cmp eax 11h +
jnz loc_430070  +
mov eax [esp+0ACh+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+90Ch] +
mov [ebx+1Ch] eax +
jmp loc_42FE10  +
mov ecx [esp+0ACh+arg_4] +
xor ebx ebx +
test ecx ecx +
jnz loc_42FC95  +
mov eax [ebp+28h] +
shr eax 5 +
and eax 43h +
cmp eax 1 +
jz loc_42FBAE  +
mov ebx [esp+0ACh+arg_4] +
jmp loc_42FC95  +
cmp eax 6 +
jz loc_42FFE0  +
cmp eax 9 +
jnz loc_42FE10  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_dynsym_0 +
mov [esp+28h] edx +
mov [esp] eax +
call sub_40F280  +
mov edx [esp+28h] +
test eax eax +
jz loc_42FF9E  +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
mov [ebx+1Ch] eax +
mov eax [esp+0C0h] +
mov [esp+28h] edx +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+160h] +
mov [esp] edx +
call eax  +
mov edx [esp+28h] +
test eax eax +
jz loc_42FE10  +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
or dword ptr [ebx+8] 40h +
mov [ebx+20h] eax +
jmp loc_42FE10  +
***
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_A8] offset a_dynstr_0 +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_AC] eax +
call sub_40F280  +
mov edx [esp+0ACh+var_84] +
test eax eax +
jz loc_42FE10  +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
mov [ebx+1Ch] eax +
jmp loc_42FE10  +
cmp eax 6FFFFFFDh +
jb loc_42FE10  +
cmp eax 6FFFFFFEh +
jbe loc_42FFE0  +
cmp eax 6FFFFFFFh +
jnz loc_42FE10  +
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_A8] offset a_dynsym_0 +
jmp loc_42FFEC  +
test byte ptr [edx+14h] 1 +
mov eax offset a_dynstr_0 +
mov esi offset a_gnu_libstr +
mov [esp+0ACh+var_84] edx +
cmovz eax esi +
mov [esp+0ACh+var_A8] eax +
jmp loc_42FFEC  +
***
cmp eax 4 +
jz loc_42FF6F  +
jmp loc_42FE10  +
***
cmp eax 6FFFFFF6h +
jz loc_430035  +
jmp loc_42FE10  +
***
mov eax [esp+0ACh+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+164h] +
test eax eax +
jz loc_42FEEB  +
mov esi [esp+0ACh+arg_0] +
mov [esp+0ACh+var_A4] edx +
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_AC] offset aBWarningSh_lin +
mov [esp+0ACh+var_A8] esi +
call eax  +
mov edx [esp+0ACh+var_84] +
jmp loc_42FEEB  +
mov esi [edi+3Ch] +
test esi esi +
jnz loc_42FEDF  +
mov edx [edi+94h] +
mov eax [ebx+2Ch] +
mov ebp [esp+0ACh+arg_0] +
mov [esp+0ACh+var_A0] edi +
mov [esp+0ACh+var_9C] edx +
mov [esp+0ACh+var_A4] eax +
mov [esp+0ACh+var_A8] ebp +
mov [esp+0ACh+var_AC] offset aBSh_linkOfSect +
call off_47D664  +
mov [esp+0ACh+var_AC] 11h +
call sub_4105E0  +
jmp loc_42F9BE  +
***
mov esi off_47D54C +
jmp loc_42FED7  +
***
movzx eax word ptr [edi+18h] +
and ax 380h +
cmp ax 100h +
jz loc_42FEDF  +
cmp ax 200h +
jz loc_42FEDF  +
mov eax [ebx+2Ch] +
mov ecx [edi+94h] +
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_A0] edi +
mov [esp+0ACh+var_A4] eax +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_9C] ecx +
mov [esp+0ACh+var_AC] offset aBSh_linkOfSe_0 +
mov [esp+0ACh+var_A8] eax +
call off_47D664  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] edi +
mov [esp+0ACh+var_A8] eax +
call sub_446BB0  +
test eax eax +
jz loc_431E35  +
mov esi [eax+3Ch] +
mov edx [esp+0ACh+var_84] +
jmp loc_42FED7  +
mov [esp+0ACh+var_A8] 0DD0h +
mov [esp+0ACh+var_AC] offset a____Binutil_10 +
mov [esp+0ACh+var_84] edx +
call sub_410530  +
mov edx [esp+0ACh+var_84] +
jmp loc_42FEDF  +
mov ebp [esp+0ACh+arg_0] +
mov edx [esp+0ACh+arg_4] +
test edx edx +
jz loc_4315AE  +
mov [esp+0ACh+var_38] 0 +
mov [esp+0ACh+var_58] 0 +
mov [esp+0ACh+var_4C] 0 +
***
mov eax [ebp+4] +
mov esi [ebp+0A0h] +
mov eax [eax+1B0h] +
mov [esp-0BCh+arg_114] esi +
mov dword ptr [esi+84h] 3 +
mov dword ptr [esi+88h] 0 +
mov [esp-0BCh+arg_104] eax +
mov eax [ebp+28h] +
mov dword ptr [esi+8Ch] 0 +
mov dword ptr [esi+0A8h] 0 +
mov dword ptr [esi+9Ch] 0 +
shr eax 5 +
test al 42h +
mov dword ptr [esi+0A0h] 0 +
mov dword ptr [esi+0A4h] 1 +
jnz loc_430468  +
movzx eax byte ptr [ebp+28h] +
and eax 7 +
cmp al 3 +
jz loc_430468  +
mov eax esi +
xor edx edx +
mov esi [esi+40h] +
mov edi [eax+214h] +
mov eax [eax+28h] +
cmp edi 1 +
mov [esp-0BCh+arg_D0] edi +
jbe loc_431D87  +
mov edi [esp-0BCh+arg_114] +
mov ebx 1 +
mov [esp-0BCh+arg_178] ebp +
mov ecx [edi+934h] +
mov ebp edi +
mov [esp-0BCh+arg_E0] ecx +
jmp loc_4302FD  +
cmp [ebp+90Ch] ebx +
jz loc_43031E  +
mov edi [ebp+208h] +
test edi edi +
jz loc_4302B2  +
mov edi [edi+38h] +
cmp ecx [esi+edi*4] +
jz loc_43031E  +
mov edi [esp-0BCh+arg_E0] +
cmp ebx [edi+30h] +
jz loc_43031E  +
cmp ebx [edi+2Ch] +
jz loc_43031E  +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] ecx +
call sub_42EA70  +
mov edi [esp-0BCh+arg_178] +
mov ebp [edi+0A0h] +
mov edi [ebp+934h] +
mov [esp-0BCh+arg_E0] edi +
nop   +
add ebx 1 +
cmp ebx [esp-0BCh+arg_D0] +
jz loc_4313B9  +
mov ecx [esi+ebx*4] +
mov edi [ecx+4] +
cmp edi 4 +
jz loc_43030D  +
cmp edi 9 +
jnz loc_430330  +
mov edi [ecx+2Ch] +
test edi edi +
jz loc_43031E  +
test byte ptr [edi+17h] 8 +
jz loc_430298  +
mov dword ptr [ecx+10h] 0FFFFFFFFh +
mov dword ptr [ecx+14h] 0FFFFFFFFh +
jmp loc_4302F0  +
***
mov edi [ecx+2Ch] +
test edi edi +
jnz loc_430314  +
jmp loc_430298  +
***
mov eax [ebp+64h] +
test eax eax +
jz loc_431CB9  +
mov esi 1 +
jmp loc_43035F  +
mov edx [eax+0Ch] +
test edx edx +
mov eax edx +
jz loc_430460  +
mov edx [eax+8Ch] +
cmp dword ptr [edx+4] 11h +
jnz loc_430352  +
test byte ptr [eax+16h] 10h +
jz loc_430398  +
mov ecx [eax+10h] +
mov edx [eax+0Ch] +
test ecx ecx +
mov ebx edx +
jz loc_431AE6  +
mov [ecx+0Ch] edx +
mov edx [eax+0Ch] +
test ebx ebx +
jz loc_431ADE  +
mov [ebx+10h] ecx +
sub dword ptr [ebp+6Ch] 1 +
jmp loc_430355  +
mov [edx+5Ch] esi +
add esi 1 +
jmp loc_430352  +
mov [esp+0ACh+var_A4] edi +
mov [esp+0ACh+var_A8] ebp +
mov [esp+0ACh+var_AC] offset aBTooManySectio +
call off_47D664  +
jmp loc_42F9BE  +
***
lea eax [ebp-2] +
mov [esp+0ACh+var_AC] eax +
call sub_412BD0  +
test eax eax +
mov esi eax +
jz loc_42F9BE  +
mov edx [esp+0ACh+var_84] +
mov ecx [esp+0ACh+var_8C] +
mov eax [edx] +
mov [esp+0ACh+var_A4] ecx +
mov [esp+0ACh+var_AC] esi +
mov [esp+0ACh+var_A8] eax +
call memcpy  +
mov eax [esp+0ACh+arg_0] +
mov byte ptr [esi+ebp-3] 0 +
mov [esp+0ACh+var_A8] esi +
mov [esp+0ACh+var_AC] eax +
call sub_40F280  +
mov [esp+0ACh+var_AC] esi +
mov edi eax +
call free  +
test edi edi +
mov edx [esp+0ACh+var_84] +
jz loc_42FE10  +
mov esi [edi+8Ch] +
mov eax [ebx+5Ch] +
mov [esi+1Ch] eax +
mov eax [esi+28h] +
test eax eax +
jnz loc_42FE10  +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_AC] eax +
call sub_410AC0  +
mov edx [esp+0ACh+var_84] +
test eax eax +
lea ecx [eax+3] +
cmovs eax ecx +
sar eax 2 +
add eax 4 +
mov [esi+28h] eax +
jmp loc_42FE10  +
***
lea edi [esi+1] +
jmp loc_42FA69  +
***
mov edi [esp-0BCh+arg_17C] +
mov esi [esp-0BCh+arg_114] +
test edi edi +
jz loc_431DFA  +
mov eax [esi+934h] +
xor edi edi +
mov eax [eax] +
test eax eax +
jz loc_431468  +
xor ecx ecx +
nop   +
mov edx [eax+1Ch] +
add ecx 1 +
mov eax [eax] +
test edx edx +
cmovnz edi edx +
test eax eax +
jnz loc_430490  +
test ecx ecx +
mov [esp-0BCh+arg_108] ecx +
jz loc_431468  +
mov eax [esp-0BCh+arg_104] +
mov ecx [eax+174h] +
movzx eax byte ptr [ecx] +
mov [esi+14h] eax +
mov eax [ebp+0A0h] +
movzx edx byte ptr [ecx+1] +
mov [eax+2Ch] edx +
mov eax [ebp+0A0h] +
mov esi [esp-0BCh+arg_108] +
mov [eax+30h] esi +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov esi [edx+1Ch] +
cmp esi 0FFFFFFFFh +
jz loc_431B15  +
movzx ebx byte ptr [ecx+1] +
imul ebx [esp-0BCh+arg_108] +
cmp esi ebx +
jb loc_431C54  +
mov ebx [esp-0BCh+arg_108] +
test ebx ebx +
jz loc_431596  +
mov esi [edx+1Ch] +
xor edx edx +
movzx ecx byte ptr [ecx+1] +
mov eax esi +
div  ecx +
mov eax esi +
test edx edx +
jnz loc_431C83  +
xor edx edx +
div  ecx +
mov [esp-0BCh+arg_C0] 20h +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call sub_40E310  +
mov ebx eax +
mov eax [ebp+0A0h] +
test ebx ebx +
mov [eax+44h] ebx +
jz loc_42F9BE  +
test byte ptr [ebp+29h] 20h +
mov [esp-0BCh+arg_11C] 1 +
jz loc_430567  +
mov eax [esp-0BCh+arg_104] +
mov eax [eax+10h] +
mov [esp-0BCh+arg_11C] eax +
mov eax [esp-0BCh+arg_104] +
xor edx edx +
mov [esp-0BCh+arg_D4] 0 +
mov eax [eax+174h] +
movzx esi byte ptr [eax] +
movzx eax byte ptr [eax+1] +
imul eax [esp-0BCh+arg_108] +
mov [esp-0BCh+arg_D0] esi +
add [esp-0BCh+arg_D0] eax +
mov eax [esp-0BCh+arg_D0] +
adc [esp-0BCh+arg_D4] edx +
cmp eax edi +
ja loc_431B26  +
sub edi eax +
xor edx edx +
mov [esp-0BCh+arg_120] edi +
mov eax edi +
add eax [esp-0BCh+arg_D0] +
adc edx [esp-0BCh+arg_D4] +
mov [esp-0BCh+arg_E8] eax +
mov eax [ebp+0A0h] +
mov [esp-0BCh+arg_EC] edx +
mov edx [eax+934h] +
mov esi [edx] +
test esi esi +
mov [esp-0BCh+arg_E0] esi +
jz loc_430B98  +
mov [esp-0BCh+arg_178] ebp +
mov ebp ebx +
mov [esp-0BCh+arg_100] 0 +
mov eax [esp-0BCh+arg_E0] +
mov ebx [eax+24h] +
cmp ebx 1 +
jbe loc_430EE7  +
mov eax [esp-0BCh+arg_178] +
mov eax [eax+0A0h] +
cmp word ptr [eax+24h] 4 +
jnz loc_43061C  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+4] +
cmp eax 4 +
mov [esp-0BCh+arg_D0] eax +
jz loc_430D20  +
mov esi [esp-0BCh+arg_E0] +
mov [esp-0BCh+arg_BC] ebx +
mov [esp-0BCh+arg_C4] 429C20h +
mov [esp-0BCh+arg_C0] 4 +
lea eax [esi+28h] +
mov [esp-0BCh+arg_B8] eax +
call qsort  +
mov eax esi +
mov esi [esi+4] +
mov ebx [eax+24h] +
mov [esp-0BCh+arg_D0] esi +
mov eax [esp-0BCh+arg_D0] +
test ebx ebx +
mov esi [esp-0BCh+arg_E0] +
mov [ebp+0] eax +
mov eax [esi+8] +
mov [esp-0BCh+arg_F0] eax +
mov [ebp+4] eax +
jnz loc_430D35  +
movzx eax byte ptr [esi+20h] +
mov dword ptr [ebp+0Ch] 0 +
mov byte ptr [esp-0BCh+arg_D8] al +
and eax 2 +
mov byte ptr [esp-0BCh+arg_E4] al +
jnz loc_430D11  +
mov dword ptr [ebp+10h] 0 +
cmp [esp-0BCh+arg_D0] 1 +
jz loc_430DC0  +
test byte ptr [esp-0BCh+arg_D8] 4 +
jz loc_430D65  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+14h] +
mov [ebp+1Ch] eax +
cmp [esp-0BCh+arg_D0] 1 +
jz loc_430DEA  +
cmp [esp-0BCh+arg_D0] 2 +
jz loc_431282  +
xor esi esi +
cmp [esp-0BCh+arg_D0] 4 +
mov [esp-0BCh+arg_F8] 0 +
jz loc_430EB0  +
movzx eax byte ptr [esp-0BCh+arg_D8] +
mov dword ptr [ebp+8] 0 +
mov dword ptr [ebp+14h] 0 +
mov dword ptr [ebp+18h] 0 +
and eax 10h +
jz loc_430740  +
test byte ptr [esp-0BCh+arg_D8] 1 +
jnz loc_430706  +
mov edx [esp-0BCh+arg_F0] +
or edx 4 +
mov [ebp+4] edx +
mov edi [esp-0BCh+arg_104] +
test ebx ebx +
mov edx [edi+174h] +
movzx ecx byte ptr [edx] +
mov [ebp+14h] ecx +
movzx edx byte ptr [edx] +
mov [ebp+18h] edx +
jz loc_430740  +
mov ecx [ebp+0Ch] +
mov edx [esp-0BCh+arg_E8] +
cmp ecx edx +
jb loc_431E1D  +
sub ecx edx +
cmp byte ptr [esp-0BCh+arg_E4] 0 +
mov [ebp+0Ch] ecx +
jnz loc_430740  +
sub [ebp+10h] edx +
nop   +
test byte ptr [esp-0BCh+arg_D8] 20h +
jz loc_4307AC  +
test byte ptr [esp-0BCh+arg_D8] 1 +
jnz loc_430752  +
or dword ptr [ebp+4] 4 +
test al al +
mov eax [esp-0BCh+arg_104] +
mov edx [eax+174h] +
jnz loc_431257  +
movzx eax byte ptr [edx] +
test ebx ebx +
mov [ebp+8] eax +
jz loc_431437  +
sub eax [esp-0BCh+arg_E8] +
add [ebp+0Ch] eax +
cmp byte ptr [esp-0BCh+arg_E4] 0 +
jnz loc_430783  +
add [ebp+10h] eax +
movzx eax byte ptr [edx+1] +
mov edi [esp-0BCh+arg_108] +
imul eax edi +
add eax [ebp+14h] +
mov [ebp+14h] eax +
movzx edx byte ptr [edx+1] +
imul edx edi +
add edx [ebp+18h] +
mov edi [esp-0BCh+arg_120] +
add eax edi +
add edx edi +
mov [ebp+14h] eax +
mov [ebp+18h] edx +
mov eax [esp-0BCh+arg_D0] +
cmp eax 1 +
jz loc_430DA6  +
cmp eax 4 +
jz loc_430D90  +
mov eax [esp-0BCh+arg_E0] +
mov ecx [eax+24h] +
lea esi [eax+28h] +
mov [esp-0BCh+arg_F0] esi +
test ecx ecx +
jz loc_431C48  +
mov edi [ebp+0] +
mov esi ebp +
mov [esp-0BCh+arg_D0] 0 +
mov [esp-0BCh+arg_E4] edi +
jmp loc_430879  +
***
cmp edi 1 +
jz loc_430980  +
cmp dword ptr [ebp+4] 8 +
jz loc_4309B0  +
mov ecx [ebp+18h] +
add [esi+14h] ecx +
test byte ptr [ebp+8] 2 +
jz loc_430812  +
add [esi+18h] ecx +
mov eax [esp-0BCh+arg_D8] +
cmp eax [esi+1Ch] +
mov eax [esp-0BCh+arg_E0] +
movzx eax byte ptr [eax+20h] +
jbe loc_430839  +
test al 4 +
jnz loc_430839  +
cmp [esp-0BCh+arg_E4] 1 +
jz loc_430B00  +
mov ecx [esp-0BCh+arg_D8] +
mov [esi+1Ch] ecx +
test al 1 +
jnz loc_43085F  +
mov eax [esi+4] +
mov edx eax +
or edx 4 +
mov [esi+4] edx +
mov edx [ebp+8] +
test dl 4 +
jz loc_430856  +
or eax 5 +
mov [esi+4] eax +
and edx 1 +
jz loc_43085F  +
or dword ptr [esi+4] 2 +
mov [esp-0BCh+arg_E4] edi +
mov eax [esp-0BCh+arg_E0] +
add [esp-0BCh+arg_D0] 1 +
mov ecx [eax+24h] +
cmp [esp-0BCh+arg_D0] ecx +
jnb loc_430B56  +
mov eax [esp-0BCh+arg_F0] +
mov ecx [esp-0BCh+arg_D0] +
mov ebx [eax+ecx*4] +
mov eax 1 +
mov ecx [ebx+40h] +
mov ebp [ebx+8Ch] +
shl eax cl +
cmp edi 7 +
mov [esp-0BCh+arg_D8] eax +
setz dl  +
jz loc_4308A5  +
cmp edi 1 +
jnz loc_43090F  +
mov eax [ebp+4] +
cmp eax 8 +
jz loc_430A43  +
mov edi [esi+18h] +
mov edx [esi+10h] +
mov ecx [ebx+20h] +
mov [esp-0BCh+arg_E4] edi +
mov [esp-0BCh+arg_F4] edx +
add edx edi +
mov edi ecx +
sub edi edx +
jz loc_4308DC  +
cmp [esp-0BCh+arg_F4] edx +
ja loc_430B16  +
cmp edx ecx +
ja loc_430B16  +
mov edx [esp-0BCh+arg_E4] +
add edx edi +
cmp eax 8 +
mov [esi+18h] edx +
jz loc_430909  +
mov eax [esi+14h] +
lea ecx [edi+eax] +
cmp edx ecx +
mov [esp-0BCh+arg_E4] eax +
ja loc_430A65  +
xor edx edx +
add [esp-0BCh+arg_E8] edi +
adc [esp-0BCh+arg_EC] edx +
mov [esi+14h] ecx +
mov edi [esi] +
mov [esp-0BCh+arg_E4] edi +
cmp edi 4 +
jnz loc_4307F0  +
mov eax [esp-0BCh+arg_178] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jnz loc_4307F9  +
mov eax [esp-0BCh+arg_D0] +
test eax eax +
jnz loc_430CF0  +
mov eax [esp-0BCh+arg_E8] +
mov edx [esp-0BCh+arg_EC] +
mov ecx [ebp+18h] +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
mov [ebp+10h] eax +
mov eax [esp-0BCh+arg_E0] +
mov [ebp+14h] edx +
xor edx edx +
add [esp-0BCh+arg_E8] ecx +
adc [esp-0BCh+arg_EC] edx +
movzx eax byte ptr [eax+20h] +
mov [esi+14h] ecx +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 1 +
jmp loc_430839  +
***
mov eax [esp-0BCh+arg_E8] +
mov edx [esp-0BCh+arg_EC] +
cmp dword ptr [ebp+4] 8 +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
mov [ebp+10h] eax +
mov [ebp+14h] edx +
jz loc_430AF5  +
mov ecx [ebp+18h] +
xor edx edx +
add [esp-0BCh+arg_E8] ecx +
adc [esp-0BCh+arg_EC] edx +
jmp loc_430806  +
mov ecx [ebp+8] +
test ch 4 +
mov eax ecx +
jz loc_430A20  +
mov edx [ebp+14h] +
or edx [ebp+10h] +
jnz loc_430A20  +
mov eax [ebp+0Ch] +
xor edx edx +
mov [esp-0BCh+arg_F4] eax +
xor eax eax +
cmp [esp-0BCh+arg_D8] 0 +
jz loc_430A08  +
mov edi [esp-0BCh+arg_D8] +
xor edx edx +
mov eax [esp-0BCh+arg_F4] +
sub eax [esp-0BCh+arg_E8] +
sbb edx [esp-0BCh+arg_EC] +
mov [esp-0BCh+arg_C0] edi +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] eax +
mov [esp-0BCh+arg_BC] edx +
mov [esp-0BCh+arg_110] ecx +
call sub_47A500  +
mov edi [esi] +
mov ecx [esp-0BCh+arg_110] +
add eax [esp-0BCh+arg_E8] +
adc edx [esp-0BCh+arg_EC] +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
mov [ebp+10h] eax +
mov eax ecx +
mov [ebp+14h] edx +
nop   +
test al 2 +
jz loc_430812  +
cmp [esp-0BCh+arg_E4] 7 +
jz loc_430A38  +
test ah 4 +
jnz loc_430812  +
mov eax [ebp+18h] +
add [esi+18h] eax +
jmp loc_430812  +
mov ecx [ebp+8] +
test cl 2 +
jz loc_43090F  +
and ch 4 +
jz loc_4308B1  +
test dl dl +
jz loc_43090F  +
jmp loc_4308B1  +
mov eax [esp-0BCh+arg_E8] +
mov [esp-0BCh+arg_F4] edx +
mov edx [esp-0BCh+arg_EC] +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] eax +
call sub_411E10  +
mov edx [esp-0BCh+arg_F4] +
test eax eax +
jnz loc_42F9BE  +
mov edi edx +
sub edi [esp-0BCh+arg_E4] +
mov [esp-0BCh+arg_B8] edi +
call sub_412D60  +
test eax eax +
mov edx eax +
jz loc_42F9BE  +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] edx +
mov [esp-0BCh+arg_BC] edi +
mov [esp-0BCh+arg_F4] edx +
mov [esp-0BCh+arg_C0] eax +
call sub_411CB0  +
mov edx [esp-0BCh+arg_F4] +
mov [esp-0BCh+arg_B8] edx +
mov [esp-0BCh+arg_E4] eax +
call free  +
mov eax [esp-0BCh+arg_E4] +
cmp edi eax +
jnz loc_42F9BE  +
mov ecx [esi+14h] +
add ecx edi +
jmp loc_4308FC  +
mov eax [ebp+8] +
jmp loc_430A20  +
***
mov ecx [esp-0BCh+arg_178] +
test byte ptr [ecx+29h] 20h +
jnz loc_430839  +
jmp loc_430832  +
mov eax [esp-0BCh+arg_178] +
xor edi edi +
mov [esp-0BCh+arg_C8] edx +
mov [esp-0BCh+arg_E4] edx +
mov [esp-0BCh+arg_C4] ecx +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] ebx +
mov [esp-0BCh+arg_B8] offset aBSectionALmaLx +
call off_47D664  +
mov edx [esp-0BCh+arg_E4] +
mov eax [esi+18h] +
mov [ebx+20h] edx +
mov [esp-0BCh+arg_E4] eax +
mov eax [ebp+4] +
jmp loc_4308DC  +
mov ebp esi +
mov eax [esp-0BCh+arg_F8] +
xor edx edx +
sub [esp-0BCh+arg_E8] eax +
sbb [esp-0BCh+arg_EC] edx +
cmp [esp-0BCh+arg_E4] 1 +
jz loc_430EF3  +
mov eax [esp-0BCh+arg_E0] +
add ebp 20h +
add [esp-0BCh+arg_100] 1 +
mov eax [eax] +
test eax eax +
mov [esp-0BCh+arg_E0] eax +
jnz loc_4305E4  +
mov ebp [esp-0BCh+arg_178] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov esi [esp-0BCh+arg_E8] +
mov edi [esp-0BCh+arg_EC] +
mov [edx+20h] esi +
mov [edx+24h] edi +
mov [esp-0BCh+arg_D8] esi +
mov [esp-0BCh+arg_DC] edi +
mov ecx [ebp+4] +
mov esi [ecx+1B0h] +
mov ecx [eax+214h] +
mov [esp-0BCh+arg_E0] esi +
mov esi [eax+40h] +
lea edi [esi+ecx*4] +
mov [esp-0BCh+arg_D0] esi +
add esi 4 +
cmp edi esi +
jbe loc_4314B6  +
mov [esp-0BCh+arg_178] ebp +
jmp loc_430CB2  +
cmp dword ptr [ebx+4] 8 +
jz loc_431493  +
test byte ptr [ebx+8] 2 +
jz loc_4312D0  +
mov edx [ebx+18h] +
test edx edx +
jz loc_430C2B  +
test eax eax +
mov edx off_47D664 +
jz loc_431DF0  +
mov eax [eax] +
mov [esp-0BCh+arg_C0] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBWarningAlloca +
mov [esp-0BCh+arg_BC] eax +
call edx  +
mov eax [esp-0BCh+arg_178] +
test byte ptr [eax+29h] 20h +
jz loc_43142F  +
mov ebp [ebx+18h] +
test ebp ebp +
jz loc_43142F  +
mov eax [esp-0BCh+arg_E0] +
mov ecx [eax+10h] +
mov eax [ebx+0Ch] +
xor edx edx +
mov ebp eax +
xor eax eax +
test ecx ecx +
jz loc_430C7F  +
xor edx edx +
mov eax ebp +
sub eax [esp-0BCh+arg_D8] +
sbb edx [esp-0BCh+arg_DC] +
mov [esp-0BCh+arg_C0] ecx +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] eax +
mov [esp-0BCh+arg_BC] edx +
call sub_47A500  +
add eax [esp-0BCh+arg_D8] +
adc edx [esp-0BCh+arg_DC] +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] ebx +
call sub_42EA70  +
mov [esp-0BCh+arg_D8] eax +
mov [esp-0BCh+arg_DC] edx +
add esi 4 +
cmp edi esi +
jbe loc_4314A3  +
mov ebx [esi] +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_430BF2  +
mov ecx [eax+54h] +
mov edx [eax+50h] +
mov ebp ecx +
or ebp edx +
jz loc_430BE8  +
xor ecx [ebx+14h] +
xor edx [ebx+10h] +
or ecx edx +
jz loc_430CA7  +
mov [esp-0BCh+arg_BC] 14BEh +
mov [esp-0BCh+arg_B8] offset a____Binutil_10 +
call sub_410530  +
jmp loc_430CA7  +
***
mov dword ptr [ebx+50h] 0 +
mov dword ptr [ebx+54h] 0 +
mov dword ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
jmp loc_430863  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+0Ch] +
mov [ebp+10h] eax +
jmp loc_43068B  +
mov eax [esp-0BCh+arg_E0] +
mov dword ptr [ebp+0] 4 +
mov eax [eax+8] +
mov [esp-0BCh+arg_F0] eax +
mov [ebp+4] eax +
mov edi [esp-0BCh+arg_E0] +
mov ecx [edi+28h] +
mov edx [edi+10h] +
mov eax [ecx+1Ch] +
sub eax edx +
mov [ebp+0Ch] eax +
movzx eax byte ptr [edi+20h] +
mov byte ptr [esp-0BCh+arg_D8] al +
and eax 2 +
mov byte ptr [esp-0BCh+arg_E4] al +
jnz loc_430D11  +
mov eax [ecx+20h] +
sub eax edx +
mov [ebp+10h] eax +
jmp loc_43068B  +
test ebx ebx +
jnz loc_431360  +
mov eax [esp-0BCh+arg_104] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
shl eax cl +
mov [ebp+1Ch] eax +
jmp loc_4306AB  +
***
mov eax [esp-0BCh+arg_178] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jnz loc_4307C2  +
test byte ptr [esp-0BCh+arg_D8] 30h +
jnz loc_431400  +
mov eax [esp-0BCh+arg_E8] +
mov [ebp+8] eax +
jmp loc_4307C2  +
***
mov eax [esp-0BCh+arg_178] +
test byte ptr [eax+29h] 20h +
jz loc_430696  +
test byte ptr [esp-0BCh+arg_D8] 4 +
jz loc_430DE3  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+14h] +
mov [esp-0BCh+arg_11C] eax +
mov eax [esp-0BCh+arg_11C] +
mov [ebp+1Ch] eax +
test ebx ebx +
jz loc_430ED8  +
test byte ptr [esp-0BCh+arg_D8] 4 +
jz loc_431A8B  +
mov ecx [ebp+1Ch] +
mov esi [esp-0BCh+arg_E0] +
xor eax eax +
mov edx [esi+eax*4+28h] +
test dword ptr [edx+14h] 102h +
jnz loc_430E20  +
mov edx [edx+8Ch] +
mov dword ptr [edx+4] 8 +
add eax 1 +
cmp eax ebx +
jnz loc_430E06  +
mov esi [esp-0BCh+arg_E0] +
mov eax [esi+28h] +
mov eax [eax+8Ch] +
cmp dword ptr [eax+4] 8 +
jnz loc_431ABF  +
xor eax eax +
jmp loc_430E56  +
mov edx [esi+eax*4+28h] +
mov edx [edx+8Ch] +
cmp dword ptr [edx+4] 8 +
jnz loc_431ABF  +
add eax 1 +
cmp eax ebx +
jnz loc_430E42  +
mov esi 1 +
test ecx ecx +
mov eax [ebp+0Ch] +
jz loc_431622  +
xor edx edx +
sub eax [esp-0BCh+arg_E8] +
sbb edx [esp-0BCh+arg_EC] +
mov [esp-0BCh+arg_C0] ecx +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] eax +
mov [esp-0BCh+arg_BC] edx +
call sub_47A500  +
mov edi edx +
mov edx eax +
mov ecx edi +
mov [esp-0BCh+arg_F8] eax +
add [esp-0BCh+arg_E8] edx +
adc [esp-0BCh+arg_EC] ecx +
test esi esi +
jz loc_430EDA  +
mov esi 1 +
jmp loc_4306D6  +
***
test ebx ebx +
jz loc_431D7C  +
mov ecx [esp-0BCh+arg_E0] +
xor eax eax +
nop   +
mov edx [ecx+eax*4+28h] +
add eax 1 +
cmp eax ebx +
mov edx [edx+8Ch] +
mov dword ptr [edx+4] 7 +
jnz loc_430EC0  +
xor esi esi +
mov [esp-0BCh+arg_F8] 0 +
jmp loc_4306D6  +
mov eax [eax+4] +
mov [esp-0BCh+arg_D0] eax +
jmp loc_43064B  +
mov eax [esp+0C0h] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jz loc_430B71  +
cmp ecx 1 +
jbe loc_431422  +
mov eax 1 +
mov esi [esp+28h] +
jmp loc_430F2B  +
***
add eax 1 +
cmp eax ecx +
jz loc_431422  +
mov ebx [esi+eax*4+24h] +
mov edx [esi+eax*4+28h] +
mov edi [ebx+1Ch] +
cmp [edx+1Ch] edi +
jnz loc_430F20  +
mov edx [edx+8Ch] +
test byte ptr [edx+9] 4 +
jz loc_430F4D  +
cmp dword ptr [edx+4] 8 +
jz loc_430F20  +
mov edi [edx+18h] +
test edi edi +
jz loc_430F20  +
mov edx [ebx+8Ch] +
test byte ptr [edx+9] 4 +
jz loc_430F66  +
cmp dword ptr [edx+4] 8 +
jz loc_430F20  +
mov ebx [edx+18h] +
test ebx ebx +
jz loc_430F20  +
mov dword ptr [esp+58h] 0 +
***
mov esi [esp-0BCh+arg_E0] +
mov edx [esi+24h] +
test edx edx +
jz loc_430B71  +
xor edi edi +
mov [esp-0BCh+arg_D8] ebp +
mov ebp edi +
jmp loc_431096  +
mov ecx [esp-0BCh+arg_E4] +
lea edx [ecx-6] +
cmp edx 1 +
jbe loc_4310E7  +
and eax 2 +
mov [esp-0BCh+arg_F4] eax +
jnz loc_430FCC  +
mov eax [esp-0BCh+arg_E4] +
sub eax 1 +
cmp eax 1 +
jbe loc_431236  +
mov eax [esp-0BCh+arg_E4] +
sub eax 6474E550h +
cmp eax 2 +
jbe loc_431236  +
mov eax [edi+4] +
cmp eax 8 +
mov [esp-0BCh+arg_F8] eax +
jz loc_431020  +
mov ecx [esp-0BCh+arg_D8] +
mov eax [edi+10h] +
mov edx [edi+14h] +
mov ecx [ecx+8] +
cmp ecx eax +
ja loc_431236  +
xor ebx ebx +
sub eax ecx +
mov ecx eax +
mov eax [edi+18h] +
sbb edx ebx +
mov ebx edx +
xor edx edx +
add ecx eax +
mov eax [esp-0BCh+arg_D8] +
adc ebx edx +
cmp ebx 0 +
mov eax [eax+14h] +
jg loc_431236  +
jl loc_431020  +
cmp ecx eax +
ja loc_431236  +
lea esi [esi+0] +
mov eax [esp-0BCh+arg_110] +
test eax eax +
jz loc_431070  +
mov eax [esp-0BCh+arg_F4] +
test eax eax +
jz loc_431070  +
mov eax [esp-0BCh+arg_D8] +
mov edx [edi+0Ch] +
mov eax [eax+0Ch] +
cmp edx eax +
jb loc_431236  +
sub edx eax +
mov eax [esp-0BCh+arg_F0] +
test eax eax +
jz loc_431057  +
cmp [esp-0BCh+arg_F8] 8 +
jz loc_432842  +
mov eax [edi+18h] +
mov ecx [esp-0BCh+arg_D8] +
add eax edx +
cmp eax [ecx+18h] +
ja loc_431236  +
lea esi [esi+0] +
cmp [esp-0BCh+arg_E4] 2 +
jz loc_4311AF  +
nop   +
lea esi [esi+0] +
add ebp 1 +
cmp ebp [esi+24h] +
jnb loc_4313E4  +
mov eax [esp-0BCh+arg_D8] +
mov eax [eax] +
mov [esp-0BCh+arg_E4] eax +
mov eax [esi+ebp*4+28h] +
mov edi [eax+8Ch] +
mov [esp-0BCh+arg_D0] eax +
mov eax [edi+8] +
mov ecx eax +
and ecx 400h +
mov [esp-0BCh+arg_F0] ecx +
jz loc_430F91  +
cmp [esp-0BCh+arg_E4] 7 +
jz loc_430FA1  +
cmp [esp-0BCh+arg_E4] 6474E552h +
jz loc_430FA1  +
cmp [esp-0BCh+arg_E4] 1 +
jz loc_430FA1  +
cmp dword ptr [edi+4] 8 +
jz loc_431247  +
mov eax [esp-0BCh+arg_100] +
mov [esp-0BCh+arg_B8] offset aBSectionACanTB +
mov [esp-0BCh+arg_C4] eax +
mov eax [esp-0BCh+arg_D0] +
mov [esp-0BCh+arg_C0] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_BC] eax +
call off_47D664  +
mov edi [esi+4] +
mov eax edi +
call near ptr dword_429B80  +
test eax eax +
mov ebx eax +
jz loc_431370  +
mov eax ds:_iob +
add eax 20h +
mov [esp-0BCh+arg_B8] eax +
call fflush  +
mov eax ds:_iob +
mov [esp-0BCh+arg_C0] ebx +
xor ebx ebx +
mov [esp-0BCh+arg_BC] offset aS_13 +
add eax 40h +
mov [esp-0BCh+arg_B8] eax +
call fprintf  +
mov eax [esi+24h] +
test eax eax +
jz loc_431182  +
mov eax [esi+ebx*4+28h] +
add ebx 1 +
mov eax [eax] +
mov [esp-0BCh+arg_BC] offset aS_12 +
mov [esp-0BCh+arg_C0] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp-0BCh+arg_B8] eax +
call fprintf  +
cmp ebx [esi+24h] +
jb loc_431158  +
mov eax ds:_iob +
mov [esp-0BCh+arg_B8] 0Ah +
add eax 40h +
mov [esp-0BCh+arg_BC] eax +
call putc  +
mov eax ds:_iob +
add eax 40h +
mov [esp-0BCh+arg_B8] eax +
call fflush  +
jmp loc_431080  +
mov eax [edi+18h] +
test eax eax +
jnz loc_431080  +
mov eax [esp-0BCh+arg_D8] +
mov eax [eax+18h] +
test eax eax +
mov [esp-0BCh+arg_124] eax +
jz loc_431080  +
cmp [esp-0BCh+arg_F8] 8 +
jz loc_431211  +
mov eax [edi+10h] +
mov ecx [esp-0BCh+arg_D8] +
mov edx [edi+14h] +
mov [esp-0BCh+arg_F8] eax +
mov eax [ecx+8] +
cmp eax [esp-0BCh+arg_F8] +
mov [esp-0BCh+arg_FC] edx +
jnb loc_431236  +
mov ecx [esp-0BCh+arg_F8] +
xor edx edx +
mov ebx [esp-0BCh+arg_FC] +
sub ecx eax +
mov eax ecx +
mov ecx [esp-0BCh+arg_D8] +
sbb ebx edx +
cmp ebx 0 +
mov ecx [ecx+14h] +
jg loc_431236  +
jl loc_431211  +
cmp eax ecx +
jnb loc_431236  +
cmp [esp-0BCh+arg_F4] 0 +
jz loc_431080  +
mov ecx [esp-0BCh+arg_D8] +
mov eax [edi+0Ch] +
mov edx [ecx+0Ch] +
cmp eax edx +
jbe loc_431236  +
sub eax edx +
cmp [esp-0BCh+arg_124] eax +
ja loc_431080  +
mov eax [esp-0BCh+arg_F0] +
test eax eax +
jnz loc_4310DD  +
jmp loc_4310E7  +
cmp [esp-0BCh+arg_E4] 7 +
jnz loc_431080  +
jmp loc_4310E7  +
movzx eax byte ptr [edx+1] +
mov edi [esp-0BCh+arg_108] +
imul eax edi +
add eax [ebp+14h] +
mov [ebp+14h] eax +
movzx edx byte ptr [edx+1] +
imul edx edi +
add edx [ebp+18h] +
test ebx ebx +
mov [ebp+18h] edx +
jnz loc_43079E  +
jmp loc_4307AC  +
cmp ebx 1 +
jbe loc_430ED8  +
mov eax [esp-0BCh+arg_E0] +
mov edi offset a_dynamic_1 +
mov ecx 9 +
mov eax [eax+28h] +
mov esi [eax] +
cmps   +
jz loc_430ED8  +
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBTheFirstSecti +
mov [esp-0BCh+arg_BC] ebp +
call off_47D664  +
mov [esp-0BCh+arg_B8] 11h +
call sub_4105E0  +
jmp loc_42F9BE  +
***
mov edx [ebx+4] +
cmp edx 4 +
jz loc_4312E1  +
cmp edx 9 +
jnz loc_43145B  +
test eax eax +
jz loc_4313ED  +
test byte ptr [eax+17h] 8 +
jnz loc_4313ED  +
mov eax [esp-0BCh+arg_178] +
mov ecx [esp-0BCh+arg_D0] +
mov eax [eax+0A0h] +
mov edx [eax+90Ch] +
cmp ebx [ecx+edx*4] +
jz loc_4313ED  +
mov edx [eax+208h] +
test edx edx +
jz loc_431329  +
mov edx [edx+38h] +
cmp ebx [ecx+edx*4] +
jz loc_4313ED  +
mov eax [eax+934h] +
mov ecx [esp-0BCh+arg_D0] +
mov edx [eax+30h] +
cmp ebx [ecx+edx*4] +
jz loc_4313ED  +
mov eax [eax+2Ch] +
cmp ebx [ecx+eax*4] +
jz loc_4313ED  +
mov [esp-0BCh+arg_C4] 1 +
mov eax [esp-0BCh+arg_D8] +
mov edx [esp-0BCh+arg_DC] +
jmp loc_430C8F  +
mov dword ptr [ebp+1Ch] 0 +
jmp loc_4306AB  +
***
lea eax [edi-70000000h] +
cmp eax 0FFFFFFFh +
jbe loc_431AEE  +
lea eax [edi-60000000h] +
cmp eax 0FFFFFFFh +
ja loc_431567  +
mov [esp-0BCh+arg_C0] eax +
lea eax [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_BC] offset aLoos7_7x +
lea ebx [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_B8] eax +
call sprintf  +
jmp loc_431123  +
mov ebp [esp-0BCh+arg_178] +
mov esi [esp-0BCh+arg_E0] +
mov [esi+20h] eax +
mov [esi+24h] edx +
mov eax [esp-0BCh+arg_118] +
test eax eax +
jnz loc_4319BE  +
or byte ptr [ebp+2Bh] 10h +
mov eax 1 +
jmp loc_42F9C0  +
mov ebp [esp-0BCh+arg_D8] +
jmp loc_430B71  +
mov dword ptr [ebx+10h] 0FFFFFFFFh +
mov dword ptr [ebx+14h] 0FFFFFFFFh +
jmp loc_430CA7  +
mov edi [ebp+14h] +
mov eax [ebp+8] +
mov ecx [esp-0BCh+arg_E8] +
add eax edi +
sub ecx eax +
test esi esi +
mov eax ecx +
jnz loc_43141A  +
lea ecx [edi+ecx] +
mov [ebp+14h] ecx +
add [ebp+18h] eax +
jmp loc_4307C2  +
mov [esp-0BCh+arg_110] 1 +
jmp loc_430F75  +
mov ecx [ebx+24h] +
jmp loc_430C4E  +
movzx eax byte ptr [edx+1] +
mov edi [esp-0BCh+arg_108] +
imul eax edi +
add [ebp+14h] eax +
movzx eax byte ptr [edx+1] +
imul eax edi +
add [ebp+18h] eax +
jmp loc_4307AC  +
***
mov esi ebx +
jmp loc_42FC65  +
***
test eax eax +
jnz loc_4312E9  +
jmp loc_4312F3  +
mov dword ptr [esi+14h] 0 +
mov eax [ebp+0A0h] +
mov [esp-0BCh+arg_108] 0 +
mov dword ptr [eax+2Ch] 0 +
mov eax [esp-0BCh+arg_104] +
mov ecx [eax+174h] +
jmp loc_4304CA  +
mov ebp [ebx+30h] +
test ebp ebp +
jnz loc_430BF2  +
jmp loc_430CCF  +
mov ebp [esp-0BCh+arg_178] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov edi [esp-0BCh+arg_E0] +
mov eax [eax+44h] +
mov ecx [edi+174h] +
mov [esp-0BCh+arg_E4] eax +
movzx esi byte ptr [ecx] +
mov [esp-0BCh+arg_F8] esi +
add esi [edi+10h] +
mov edi [edx] +
mov [esp-0BCh+arg_F0] esi +
test edi edi +
jz loc_432819  +
mov edx edi +
xor esi esi +
mov [esp-0BCh+arg_100] 0 +
mov [esp-0BCh+arg_F4] 0 +
mov [esp-0BCh+arg_E8] 0 +
mov [esp-0BCh+arg_E0] 0 +
mov [esp-0BCh+arg_D0] edi +
jmp loc_43151D  +
***
mov edx [edx] +
add eax 20h +
test edx edx +
jz loc_431633  +
add esi 1 +
cmp dword ptr [eax] 1 +
jnz loc_431510  +
movzx ecx byte ptr [edx+20h] +
mov ebx ecx +
and ebx 10h +
jz loc_43153E  +
mov edi [eax+0Ch] +
mov [esp-0BCh+arg_E8] edi +
mov edi [eax+10h] +
mov [esp-0BCh+arg_F4] edi +
and ecx 20h +
jz loc_431510  +
mov edi [eax+0Ch] +
test bl bl +
mov [esp-0BCh+arg_F0] edi +
mov edi [eax+10h] +
mov [esp-0BCh+arg_100] edi +
jz loc_431510  +
mov ecx [esp-0BCh+arg_F8] +
add [esp-0BCh+arg_F0] ecx +
add [esp-0BCh+arg_100] ecx +
mov [esp-0BCh+arg_E0] edx +
jmp loc_431510  +
lea eax [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_C4] edi +
lea ebx [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_C0] offset a8_8x +
mov [esp-0BCh+arg_BC] 20h +
mov [esp-0BCh+arg_B8] eax +
call sub_42AFB0  +
jmp loc_431123  +
movzx ecx byte ptr [ecx] +
xor ebx ebx +
mov [edx+24h] ebx +
mov [esp-0BCh+arg_DC] ebx +
mov [edx+20h] ecx +
mov [esp-0BCh+arg_D8] ecx +
jmp loc_430BB4  +
***
mov eax [ebp+7Ch] +
mov [esp+0ACh+var_94] eax +
test eax eax +
mov eax [ebp+28h] +
mov [esp+0ACh+var_64] eax +
jnz loc_431B37  +
shr [esp+0ACh+var_64] 5 +
and [esp+0ACh+var_64] 3FFFFh +
mov eax [esp+0ACh+var_64] +
and eax 43h +
cmp eax 1 +
jz loc_431B44  +
mov [esp+0ACh+var_38] 0 +
mov [esp+0ACh+var_58] 0 +
mov [esp+0ACh+var_4C] 0 +
***
lea eax [esp+74h] +
mov [esp-0BCh+arg_C0] eax +
mov [esp-0BCh+arg_BC] offset sub_42A0D0 +
mov [esp-0BCh+arg_B8] ebp +
call sub_40F8A0  +
mov eax [esp+74h] +
test eax eax +
jz loc_4301E3  +
jmp loc_42F9BE  +
mov dword ptr [esp+40h] 0 +
xor edx edx +
xor ecx ecx +
jmp loc_430E99  +
mov ecx [esp-0BCh+arg_17C] +
mov ebx [esp-0BCh+arg_E0] +
mov edi [esp-0BCh+arg_D0] +
test ecx ecx +
setnz cl  +
test ebx ebx +
setnz al  +
mov ebx edi +
and al cl +
mov byte ptr [esp-0BCh+arg_D0] cl +
mov edi eax +
jnz loc_431CC8  +
mov eax [esp-0BCh+arg_E4] +
shl esi 5 +
mov edi [esp-0BCh+arg_17C] +
mov [esp-0BCh+arg_178] ebp +
add esi eax +
mov [esp-0BCh+arg_E0] esi +
mov esi eax +
lea esi [esi+0] +
mov edx [esi] +
cmp edx 6474E552h +
jz loc_4317D5  +
cmp edx 6474E551h +
jz loc_4318D0  +
mov eax [ebx+24h] +
test eax eax +
jz loc_431888  +
cmp edx 1 +
jz loc_4316F0  +
cmp edx 4 +
jz loc_43196C  +
test byte ptr [ebx+20h] 30h +
jnz loc_432776  +
mov edx [ebx+28h] +
mov dword ptr [esi+14h] 0 +
mov ebp [edx+50h] +
mov [esi+8] ebp +
lea esi [esi+0] +
mov ecx [ebx+eax*4+24h] +
mov edx [ecx+8Ch] +
cmp dword ptr [edx+4] 8 +
jnz loc_43195C  +
sub eax 1 +
jnz loc_4316D0  +
lea esi [esi+0] +
mov ebx [ebx] +
add esi 20h +
test ebx ebx +
jnz loc_431680  +
mov ebp [esp-0BCh+arg_178] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov esi [esp-0BCh+arg_D8] +
mov edi [esp-0BCh+arg_DC] +
mov [edx+20h] esi +
mov esi [esp-0BCh+arg_104] +
mov [edx+24h] edi +
mov edx [esi+0B0h] +
test edx edx +
jz loc_431746  +
mov eax [esp-0BCh+arg_17C] +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call edx  +
test eax eax +
jz loc_42F9BE  +
mov eax [ebp+0A0h] +
cmp byte ptr [esp-0BCh+arg_D0] 0 +
jz loc_431763  +
mov esi [esp-0BCh+arg_17C] +
movzx edx byte ptr [esi] +
and edx 3 +
cmp dl 1 +
jz loc_432793  +
mov eax [eax+934h] +
mov esi [eax+1Ch] +
mov eax [esp-0BCh+arg_104] +
mov eax [eax+174h] +
movzx ebx byte ptr [eax+1] +
mov [esp-0BCh+arg_C4] 0 +
movzx eax byte ptr [eax] +
mov [esp-0BCh+arg_C0] 0 +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call sub_411E10  +
test eax eax +
jnz loc_42F9BE  +
mov eax [esp-0BCh+arg_104] +
xor edx edx +
mov eax [eax+174h] +
mov ecx [eax+10h] +
mov eax [esp-0BCh+arg_114] +
mov edi [eax+44h] +
mov eax esi +
div  ebx +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] edi +
mov [esp-0BCh+arg_C0] eax +
call ecx  +
test eax eax +
jnz loc_42F9BE  +
jmp loc_4313CA  +
cmp byte ptr [esp-0BCh+arg_D0] 0 +
jz loc_431988  +
mov eax [esp-0BCh+arg_178] +
mov ebp [esp-0BCh+arg_E4] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov eax [eax] +
test eax eax +
jnz loc_43180F  +
jmp loc_4318B0  +
mov eax [eax] +
add ebp 20h +
test eax eax +
jz loc_4318B0  +
cmp dword ptr [ebp+0] 1 +
jnz loc_431802  +
mov ecx [edi+74h] +
cmp [ebp+0Ch] ecx +
jnb loc_431802  +
mov edx [eax+24h] +
test edx edx +
jz loc_431802  +
mov edx [eax+28h] +
mov ecx [edi+70h] +
cmp [edx+1Ch] ecx +
jb loc_431802  +
nop   +
cmp ebp [esp-0BCh+arg_E0] +
jnb loc_431908  +
mov eax [ebp+0Ch] +
cmp byte ptr [esp-0BCh+arg_D0] 0 +
mov [esi+0Ch] eax +
mov eax [ebp+10h] +
mov [esi+10h] eax +
mov eax [ebp+8] +
mov [esi+8] eax +
jz loc_431AC6  +
mov eax [edi+74h] +
sub eax [ebp+0Ch] +
movzx edx byte ptr [ebx+20h] +
mov [esi+14h] eax +
test dl 4 +
mov [esi+18h] eax +
jnz loc_431873  +
mov dword ptr [esi+1Ch] 1 +
and edx 1 +
jnz loc_4316F0  +
mov dword ptr [esi+4] 4 +
jmp loc_4316F0  +
movzx eax byte ptr [ebx+20h] +
test al 10h +
jz loc_4318E5  +
mov ecx [esp-0BCh+arg_E8] +
test al 2 +
mov [esi+0Ch] ecx +
jnz loc_4316F0  +
mov eax [esp-0BCh+arg_F4] +
mov [esi+10h] eax +
jmp loc_4316F0  +
***
mov [esp-0BCh+arg_BC] 1546h +
mov [esp-0BCh+arg_B8] offset a____Binutil_10 +
call sub_410530  +
jmp loc_431830  +
***
test byte ptr [ebx+20h] 8 +
jz loc_4316F0  +
mov eax [ebx+18h] +
mov [esi+18h] eax +
jmp loc_4316F0  +
test al 20h +
jz loc_4316F0  +
mov ecx [esp-0BCh+arg_F0] +
test al 2 +
mov [esi+0Ch] ecx +
jnz loc_4316F0  +
mov eax [esp-0BCh+arg_100] +
mov [esi+10h] eax +
jmp loc_4316F0  +
test esi 1 +
mov edx esi +
mov ecx 20h +
jnz loc_431DCE  +
test dl 2 +
jnz loc_431DBD  +
mov ebp ecx +
xor eax eax +
and ebp 0FFFFFFFCh +
mov dword ptr [edx+eax] 0 +
add eax 4 +
cmp eax ebp +
jb loc_43192B  +
add edx eax +
test cl 2 +
jz loc_431949  +
xor ebp ebp +
add edx 2 +
mov [edx-2] bp +
and ecx 1 +
jz loc_431951  +
mov byte ptr [edx] 0 +
mov dword ptr [esi] 0 +
jmp loc_4316F0  +
mov eax [ecx+50h] +
add eax [edx+18h] +
sub eax ebp +
mov [esi+14h] eax +
jmp loc_4316F0  +
mov ecx [esp-0BCh+arg_178] +
movzx edx byte ptr [ecx+28h] +
and edx 7 +
cmp dl 3 +
jnz loc_4316B3  +
jmp loc_4316F0  +
mov eax [esp-0BCh+arg_E4] +
mov ecx [esp-0BCh+arg_E0] +
mov ebp eax +
cmp eax ecx +
jnb loc_431908  +
mov eax [esp-0BCh+arg_E0] +
jmp loc_4319AB  +
add ebp 20h +
cmp ebp eax +
jnb loc_431908  +
cmp dword ptr [ebp+0] 1 +
jnz loc_4319A0  +
mov ecx [esi+10h] +
cmp [ebp+10h] ecx +
jnz loc_4319A0  +
jmp loc_431830  +
mov ecx [ebp+0A0h] +
mov eax [ecx+934h] +
add ecx 48h +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov [esp-0BCh+arg_B8] ecx +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_BC] eax +
call sub_42EA70  +
mov ebx [ebp+0A0h] +
mov ecx [ebx+208h] +
test ecx ecx +
jz loc_431A06  +
mov esi [ecx+18h] +
test esi esi +
jnz loc_431D9A  +
mov [esp-0BCh+arg_BC] eax +
lea eax [ebx+0B8h] +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] eax +
call sub_42EA70  +
mov ecx [ebp+0A0h] +
mov ecx [ecx+934h] +
mov [ecx+20h] eax +
mov eax [ebx+0C8h] +
mov [ecx+24h] edx +
mov edx [ebx+0CCh] +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
call sub_411E10  +
test eax eax +
jnz loc_42F9BE  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call sub_455CE0  +
test eax eax +
jz loc_42F9BE  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_455940  +
jmp loc_4313D6  +
mov eax [esp-0BCh+arg_E0] +
xor ecx ecx +
lea esi [eax+28h] +
xor eax eax +
mov edx [esi+eax*4] +
mov edx [edx+40h] +
cmp ecx edx +
cmovb ecx edx +
add eax 1 +
cmp eax ebx +
jnz loc_431A96  +
mov esi [esp-0BCh+arg_11C] +
mov eax 1 +
shl eax cl +
cmp eax esi +
cmovb eax esi +
mov ecx eax +
jmp loc_430E00  +
xor esi esi +
jmp loc_430E62  +
movzx edx byte ptr [ebx+20h] +
test dl 8 +
jz loc_43285F  +
mov eax [ebx+18h] +
mov [esi+14h] eax +
jmp loc_431864  +
***
mov [ebp+68h] ecx +
jmp loc_430392  +
mov [ebp+64h] edx +
jmp loc_430387  +
***
mov [esp-0BCh+arg_C0] eax +
lea eax [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_BC] offset aLoproc7_7x +
lea ebx [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_B8] eax +
call sprintf  +
jmp loc_431123  +
movzx esi byte ptr [ecx+1] +
imul esi [esp-0BCh+arg_108] +
mov [edx+1Ch] esi +
jmp loc_430500  +
xor eax eax +
xor edx edx +
mov [esp-0BCh+arg_120] 0 +
jmp loc_4305A9  +
***
shr [esp+0ACh+var_64] 5 +
and [esp+0ACh+var_64] 3FFFFh +
mov eax [ebp+64h] +
xor edx edx +
mov esi [ebp+78h] +
test eax eax +
jz loc_431B5F  +
mov ecx [eax+8] +
mov eax [eax+0Ch] +
cmp edx ecx +
cmovb edx ecx +
test eax eax +
jnz loc_431B50  +
lea ebx [edx+1] +
mov [esp+0ACh+var_A4] 4 +
mov [esp+0ACh+var_A8] ebx +
mov [esp+0ACh+var_AC] ebp +
call sub_40E310  +
test eax eax +
mov edi eax +
mov [esp+0ACh+var_74] eax +
jz loc_42F9BE  +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov [eax+8] edi +
mov [eax+28h] ebx +
mov eax [esp+0ACh+var_94] +
test eax eax +
jz loc_431E46  +
lea eax [esi+eax*4] +
mov edi esi +
mov [esp+0ACh+var_84] eax +
mov ebx [edi] +
test byte ptr [ebx+0Dh] 1 +
jnz loc_431C10  +
add edi 4 +
cmp edi [esp+0ACh+var_84] +
jnz loc_431BAB  +
xor ebx ebx +
xor edi edi +
mov eax ebx +
mov ebx esi +
mov [esp+0ACh+var_8C] 0 +
mov esi eax +
jmp loc_431BE0  +
add esi 1 +
add edi 1 +
cmp edi [esp+0ACh+var_94] +
jz loc_432886  +
mov edx [ebx+edi*4] +
mov eax ebp +
call loc_42A020  +
test eax eax +
jnz loc_431BD0  +
mov edx [ebx+edi*4] +
test byte ptr [edx+0Dh] 1 +
jz loc_431C02  +
mov eax ebp +
call sub_42A070  +
test eax eax +
jnz loc_431BD3  +
add [esp+0ACh+var_8C] 1 +
jmp loc_431BD3  +
***
mov eax [ebx+8] +
test eax eax +
jnz loc_431BB3  +
mov edx ebx +
mov eax ebp +
call sub_42A070  +
test eax eax +
jnz loc_431BB3  +
mov eax [ebx+10h] +
cmp eax offset off_47D510 +
jz loc_431BB3  +
cmp ebp [eax+94h] +
jz loc_431C39  +
mov eax [eax+3Ch] +
mov eax [eax+8] +
mov ecx [esp+0ACh+var_74] +
mov [ecx+eax*4] ebx +
jmp loc_431BB3  +
***
mov eax [ebp+0] +
mov [esp-0BCh+arg_E4] eax +
jmp loc_430B58  +
mov [esp-0BCh+arg_BC] 12F7h +
mov [esp-0BCh+arg_B8] offset a____Binutil_10 +
call sub_410530  +
mov eax [ebp+0A0h] +
mov esi [esp-0BCh+arg_104] +
mov edx [eax+934h] +
mov ecx [esi+174h] +
jmp loc_430500  +
mov [esp-0BCh+arg_BC] 1309h +
mov [esp-0BCh+arg_B8] offset a____Binutil_10 +
call sub_410530  +
mov eax [ebp+0A0h] +
mov esi [esp-0BCh+arg_104] +
mov eax [eax+934h] +
mov edx [esi+174h] +
mov eax [eax+1Ch] +
movzx ecx byte ptr [edx+1] +
jmp loc_430523  +
***
mov edi 2 +
mov esi 1 +
jmp loc_42FB69  +
***
mov eax [esp-0BCh+arg_17C] +
mov [esp-0BCh+arg_C8] 1 +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_C0] 0 +
mov [esp-0BCh+arg_BC] offset a__ehdr_start +
mov eax [eax+1Ch] +
mov [esp-0BCh+arg_B8] eax +
call sub_423EB0  +
test eax eax +
mov ecx eax +
jz loc_431D5B  +
movzx eax byte ptr [eax+0Ch] +
cmp al 5 +
jz loc_431D0C  +
cmp al 2 +
ja loc_431D5B  +
mov eax [esp-0BCh+arg_E0] +
mov edx [eax+24h] +
test edx edx +
jnz loc_4327FC  +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
jmp loc_431D3B  +
***
mov ebx [eax+24h] +
test ebx ebx +
jnz loc_4327FC  +
mov eax [eax] +
test eax eax +
jnz loc_431D30  +
mov eax [esp-0BCh+arg_E8] +
mov dword ptr [ecx+14h] offset off_47D510 +
mov [ecx+18h] eax +
or byte ptr [ecx+33h] 2 +
and byte ptr [ecx+34h] 0FEh +
mov byte ptr [ecx+0Ch] 3 +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov ebx [edx] +
test ebx ebx +
jz loc_43287B  +
mov eax edi +
mov byte ptr [esp-0BCh+arg_D0] al +
jmp loc_43165C  +
mov esi ebx +
mov [esp-0BCh+arg_F8] ebx +
jmp loc_4306D6  +
mov esi [esp-0BCh+arg_114] +
mov esi [esi+934h] +
mov [esp-0BCh+arg_E0] esi +
jmp loc_4313C0  +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] ecx +
call sub_42EA70  +
mov ebx [ebp+0A0h] +
jmp loc_431A06  +
xor eax eax +
add edx 2 +
mov [edx-2] ax +
sub ecx 2 +
jmp loc_431924  +
mov byte ptr [esi] 0 +
lea edx [esi+1] +
mov cl 1Fh +
jmp loc_43191B  +
***
mov eax [esp+0ACh+var_94] +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_A8] eax +
call sub_40E390  +
jmp loc_42F9BE  +
***
mov eax offset aUnknown_5 +
jmp loc_430C13  +
mov [esp-0BCh+arg_BC] 0 +
mov [esp-0BCh+arg_B8] ebp +
call sub_42EB70  +
test eax eax +
jz loc_42F9BE  +
mov esi [ebp+0A0h] +
jmp loc_43047B  +
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBNotEnoughRoom +
mov [esp-0BCh+arg_BC] ebp +
call off_47D664  +
mov [esp-0BCh+arg_B8] 11h +
call sub_4105E0  +
jmp loc_42F9BE  +
***
mov [esp+0ACh+var_8C] 0 +
xor ebx ebx +
mov edi [ebp+64h] +
test edi edi +
jz loc_431E7C  +
mov [esp+0ACh+var_84] esi +
mov esi ebx +
mov ebx [esp+0ACh+var_74] +
mov eax [edi+8] +
mov eax [ebx+eax*4] +
test eax eax +
jz loc_4324CC  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_431E61  +
mov ebx esi +
mov esi [esp+0ACh+var_84] +
mov eax [esp+0ACh+var_8C] +
mov [esp+0ACh+var_A4] 4 +
mov [esp+0ACh+var_AC] ebp +
add eax ebx +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_70] eax +
call sub_40E1C0  +
test eax eax +
mov [esp+0ACh+var_80] eax +
jz loc_42F9BE  +
mov eax [esp+0ACh+var_94] +
mov [esp+0ACh+var_7C] 0 +
test eax eax +
jz loc_4326E8  +
xor eax eax +
xor edi edi +
mov [esp+0ACh+var_84] esi +
mov esi eax +
jmp loc_431EE5  +
mov eax [esp+0ACh+var_8C] +
add eax esi +
add esi 1 +
lea edx [eax+1] +
mov ecx [esp+0ACh+var_80] +
mov [ecx+eax*4] ebx +
mov [ebx+14h] edx +
add edi 1 +
cmp edi [esp+0ACh+var_94] +
jz loc_431F1D  +
mov eax [esp+0ACh+var_84] +
mov ebx [eax+edi*4] +
mov eax ebp +
mov edx ebx +
call loc_42A020  +
test eax eax +
jnz loc_431EC6  +
test byte ptr [ebx+0Dh] 1 +
jz loc_431F10  +
mov edx ebx +
mov eax ebp +
call sub_42A070  +
test eax eax +
jnz loc_431EDC  +
lea esi [esi+0] +
mov eax [esp+0ACh+var_7C] +
lea edx [eax+1] +
mov [esp+0ACh+var_7C] edx +
jmp loc_431ED2  +
mov [esp+18h] esi +
mov ebx [ebp+64h] +
mov esi [esp+38h] +
test ebx ebx +
jz loc_431F47  +
lea esi [esi+0] +
mov edx [ebx+8] +
lea ecx [esi+edx*4] +
mov eax [ecx] +
test eax eax +
jz loc_4324EB  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_431F30  +
mov eax [esp+3Ch] +
mov [esp] ebp +
mov [esp+8] eax +
mov eax [esp+2Ch] +
mov [esp+4] eax +
call sub_41DB80  +
call sub_4558C0  +
test eax eax +
mov [esp+54h] eax +
jz loc_42F9BE  +
mov eax [ebp+4] +
mov esi [ebp+7Ch] +
mov eax [eax+1B0h] +
mov edi esi +
mov [esp+5Ch] esi +
mov esi [ebp+0A0h] +
add edi 1 +
mov [esp+40h] edi +
mov [esp+3Ch] eax +
mov eax [eax+174h] +
mov dword ptr [esi+4Ch] 2 +
mov [esp+68h] esi +
movzx edx byte ptr [eax+5] +
mov [esi+70h] edx +
imul edx edi +
mov [esi+60h] edx +
mov edx [esp+20h] +
add edx 1 +
mov [esi+68h] edx +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
mov dword ptr [esi+0BCh] 3 +
shl eax cl +
mov [esi+6Ch] eax +
mov eax edi +
shl eax 5 +
lea esi ds:0[edi*4] +
sub eax esi +
mov [esp] eax +
call sub_412BD0  +
test eax eax +
mov [esp+64h] eax +
jz loc_432831  +
mov eax [esp+3Ch] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
mov [esp] ebp +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] eax +
call sub_40E1C0  +
test eax eax +
mov [esp+60h] eax +
jz loc_4326CB  +
mov eax [esp+68h] +
mov edi [esp+60h] +
mov [eax+78h] edi +
mov eax [ebp+0A0h] +
mov ebx [eax+208h] +
test ebx ebx +
jz loc_432048  +
mov edi [ebx] +
test edi edi +
jnz loc_4326F5  +
mov eax [esp+64h] +
mov dword ptr [esp+4Ch] 0 +
mov dword ptr [esp+2Ch] 0 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov byte ptr [eax+0Ch] 0 +
mov byte ptr [eax+0Dh] 0 +
mov byte ptr [eax+0Eh] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+18h] 0 +
mov eax [esp+3Ch] +
mov dword ptr [esp+50h] 0 +
mov eax [eax+44h] +
test eax eax +
jz loc_4320B5  +
mov [esp] ebp +
call eax  +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+50h] eax +
mov ecx [esp+5Ch] +
mov eax [ebp+78h] +
test ecx ecx +
jle loc_432605  +
mov edi eax +
mov eax [esp+64h] +
mov dword ptr [esp+28h] 1 +
mov [esp+0C0h] ebp +
lea esi [eax+1Ch] +
mov eax [esp+48h] +
and eax 42h +
mov [esp+58h] eax +
***
mov eax [edi] +
mov edx [esp-0BCh+arg_108] +
mov ecx [eax+8] +
test edx edx +
mov ebp [eax+0Ch] +
mov [esp-0BCh+arg_D0] ecx +
jnz loc_43210F  +
mov edx ebp +
and edx 102h +
cmp edx 100h +
jz loc_43240C  +
mov eax [eax+4] +
mov [esp-0BCh+arg_C0] 0 +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_455970  +
cmp eax 0FFFFFFFFh +
mov [esp-0BCh+arg_E8] eax +
jz loc_4326CB  +
mov eax [edi] +
mov edx [eax] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_432314  +
xor ebx ebx +
mov ecx ebp +
mov eax [eax+10h] +
and ecx 100h +
mov [esp-0BCh+arg_F0] ecx +
jnz loc_432330  +
test byte ptr [eax+15h] 10h +
jz loc_432330  +
test ebx ebx +
jz loc_432178  +
mov ecx [ebx+18h] +
test ecx ecx +
mov [esp-0BCh+arg_D8] ecx +
jnz loc_43218B  +
cmp [esp-0BCh+arg_D0] 0Fh +
mov [esp-0BCh+arg_D8] 10h +
jbe loc_4325C8  +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_42F700  +
mov ecx eax +
mov eax [edi] +
mov eax [eax+10h] +
test ebp 40000h +
mov edx 6 +
jnz loc_4321E5  +
test ebp 400000h +
mov dl 0Ah +
jnz loc_4321E5  +
test ebp 8 +
mov dl 2 +
jnz loc_4321E5  +
test ebp 10000h +
mov dl 1 +
jnz loc_4321E5  +
test ebp 80000h +
mov dl 8 +
jnz loc_4321E5  +
mov edx ebp +
shl edx 0Bh +
sar edx 1Fh +
and edx 9 +
test byte ptr [eax+15h] 4 +
mov eax 6 +
cmovnz edx eax +
test ebx ebx +
jz loc_432216  +
mov eax [esp-0BCh+arg_F4] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_432216  +
mov [esp-0BCh+arg_BC] edx +
lea edx [ebx+18h] +
mov [esp-0BCh+arg_100] ecx +
mov [esp-0BCh+arg_B8] edx +
call eax  +
mov ecx [esp-0BCh+arg_100] +
mov edx eax +
mov eax [esp-0BCh+arg_F0] +
test eax eax +
jz loc_4323A2  +
and ebp 2 +
cmp ebp 1 +
sbb eax eax +
and eax 0FFFFFFF0h +
add eax 13h +
test ebx ebx +
jz loc_4324C3  +
movzx edx byte ptr [ebx+25h] +
movzx ebx byte ptr [ebx+26h] +
mov ebp [esp-0BCh+arg_D8] +
mov [esi+0Ch] al +
mov eax [esp-0BCh+arg_E0] +
add [esp-0BCh+arg_E0] 1 +
cmp [esp-0BCh+arg_104] 1 +
mov [esi] ebp +
mov ebp [esp-0BCh+arg_D0] +
mov [esi+14h] eax +
mov eax [esp-0BCh+arg_E4] +
mov [esi+0Dh] dl +
sbb [esp-0BCh+arg_E4] 0FFFFFFFFh +
add edi 4 +
add esi 1Ch +
mov [esi-18h] ebp +
mov ebp [esp-0BCh+arg_E8] +
mov [esi-4] eax +
mov eax [esp-0BCh+arg_E0] +
mov [esi-0Eh] bl +
mov [esi-0Ch] ecx +
mov [esi-14h] ebp +
cmp eax [esp-0BCh+arg_F8] +
jnz loc_4320E7  +
mov eax [esp-0BCh+arg_10C] +
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_455DB0  +
mov ebx [esp-0BCh+arg_11C] +
xor esi esi +
mov edi [esp-0BCh+arg_104] +
jmp loc_4322F7  +
mov dword ptr [ebx+8] 0 +
mov eax [esp-0BCh+arg_F4] +
add esi 1 +
mov ecx [ebx+18h] +
mov eax [eax+174h] +
lea ecx [edi+ecx*4] +
mov edx [eax+24h] +
mov [esp-0BCh+arg_C4] ecx +
movzx eax byte ptr [eax+5] +
imul eax [ebx+14h] +
add eax [esp-0BCh+arg_118] +
mov [esp-0BCh+arg_BC] ebx +
add ebx 1Ch +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_C0] eax +
call edx  +
cmp [esp-0BCh+arg_114] esi +
jl loc_43261C  +
mov eax [ebx+8] +
cmp eax 0FFFFFFFFh +
jz loc_4322B0  +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_455C40  +
mov [ebx+8] eax +
jmp loc_4322B7  +
mov ebx [edx+0A0h] +
test ebx ebx +
jz loc_432148  +
mov ebx eax +
jmp loc_43214A  +
***
mov ecx [esp+arg_BC] +
mov ecx [esp+arg_BC] +
mov ecx [esp+arg_BC] +
mov ecx [esp+arg_BC] +
mov edx [esp-0BCh+arg_178] +
mov edx [edx+0A0h] +
mov edx [edx+208h] +
test edx edx +
jz loc_4321A5  +
mov ecx [edx+38h] +
jmp loc_4321A5  +
***
xor ebx ebx +
xor edx edx +
jmp loc_432240  +
***
mov edx [edi+98h] +
mov eax ebp +
call loc_42A020  +
test eax eax +
jnz loc_4325A7  +
add [esp+0ACh+var_8C] 1 +
jmp loc_431E6F  +
***
mov edi [ebx+98h] +
mov eax ebp +
mov [ecx] edi +
mov edx edi +
call loc_42A020  +
test eax eax +
jnz loc_4325AF  +
mov edx [esp+30h] +
mov eax edx +
add eax 1 +
mov [esp+30h] eax +
mov ecx [esp+2Ch] +
mov [ecx+edx*4] edi +
mov [edi+14h] eax +
jmp loc_431F40  +
***
mov [esp-0BCh+arg_D0] 0 +
jmp loc_432370  +
mov ecx [esp-0BCh+arg_D0] +
mov edx eax +
mov [esp-0BCh+arg_D8] ecx +
jmp loc_432346  +
mov eax [edx] +
mov [esp-0BCh+arg_100] edx +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_40F280  +
mov edx [esp-0BCh+arg_100] +
test eax eax +
jz loc_432699  +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_42F700  +
cmp eax 0FFFFFEFFh +
mov ecx eax +
jnz loc_432398  +
mov [esp-0BCh+arg_BC] 1D04h +
mov [esp-0BCh+arg_B8] offset a____Binutil_10 +
mov [esp-0BCh+arg_100] eax +
call sub_410530  +
mov eax [edi] +
mov ecx [esp-0BCh+arg_100] +
mov eax [eax+10h] +
jmp loc_4321A5  +
***
add esi 1 +
jmp loc_431E6F  +
***
mov ecx [esp+18h] +
mov edx [esp+20h] +
add edx ecx +
add ecx 1 +
lea eax [edx+1] +
mov [esp+18h] ecx +
jmp loc_432511  +
***
mov eax [esp-0BCh+arg_D0] +
mov [esp-0BCh+arg_B8] eax +
call near ptr dword_4135E0  +
mov edx 1 +
mov ecx eax +
mov eax [edi] +
shl edx cl +
mov [esp-0BCh+arg_D8] edx +
mov eax [eax+10h] +
jmp loc_43218B  +
and ebp 80h +
cmp ebp 1 +
sbb eax eax +
and edx 0Fh +
and eax 0FFFFFFF0h +
lea eax [eax+edx+20h] +
jmp loc_432230  +
***
mov eax [esp+54h] +
mov [esp] eax +
call sub_455DB0  +
cmp dword ptr [esp+5Ch] 0 +
jz loc_4322A4  +
***
mov eax [esp-0BCh+arg_11C] +
mov [esp-0BCh+arg_B8] eax +
call free  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_455C30  +
mov esi [esp-0BCh+arg_120] +
mov dword ptr [esp+74h] 0 +
mov [esp-0BCh+arg_118] 1 +
mov dword ptr [esi+0BCh] 3 +
mov dword ptr [esi+0C0h] 0 +
mov [esi+0D0h] eax +
mov dword ptr [esi+0C4h] 0 +
mov dword ptr [esi+0E0h] 0 +
mov dword ptr [esi+0D4h] 0 +
mov dword ptr [esi+0D8h] 0 +
mov dword ptr [esi+0DCh] 1 +
jmp loc_4315F9  +
mov eax [edi] +
mov ecx [edx] +
mov edx [eax+4] +
mov eax offset aLocalSym +
mov [esp-0BCh+arg_C0] ecx +
mov [esp-0BCh+arg_B8] offset aUnableToFindEq +
test edx edx +
cmovnz eax edx +
mov [esp-0BCh+arg_BC] eax +
call off_47D664  +
mov [esp-0BCh+arg_B8] 5 +
call sub_4105E0  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_455940  +
mov eax [esp-0BCh+arg_11C] +
mov [esp-0BCh+arg_B8] eax +
call free  +
jmp loc_42F9BE  +
***
mov [esp+0ACh+var_94] 0 +
jmp loc_431F21  +
***
mov eax [esp+40h] +
mov dword ptr [esp+8] 4 +
mov [esp] ebp +
mov [esp+4] eax +
call sub_40E310  +
test eax eax +
mov [esp+4Ch] eax +
jz loc_4326CB  +
mov [ebx+30h] eax +
mov eax [esp+64h] +
mov dword ptr [ebx+4] 12h +
mov [ebx+18h] esi +
mov dword ptr [ebx+24h] 4 +
mov dword ptr [ebx+28h] 4 +
mov dword ptr [esp+2Ch] 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov byte ptr [eax+0Ch] 0 +
mov byte ptr [eax+0Dh] 0 +
mov byte ptr [eax+0Eh] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+18h] 0 +
jmp loc_432091  +
***
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBWarningNonLoa +
mov [esp-0BCh+arg_BC] ebp +
call off_47D664  +
jmp loc_42F9BE  +
mov ecx [eax+30h] +
mov edx [eax+44h] +
shl ecx 5 +
lea ebx [edx+ecx] +
cmp edx ebx +
jnb loc_4327CE  +
mov esi 0FFFFFFFFh +
jmp loc_4327B7  +
***
add edx 20h +
cmp ebx edx +
jbe loc_4327C6  +
cmp dword ptr [edx] 1 +
jnz loc_4327B0  +
mov ecx [edx+0Ch] +
cmp esi ecx +
cmova esi ecx +
jmp loc_4327B0  +
test esi esi +
jz loc_431763  +
mov eax [esp-0BCh+arg_114] +
mov word ptr [eax+24h] 2 +
mov eax [ebp+0A0h] +
jmp loc_431763  +
***
mov [esp+0ACh+var_A8] 0D8Dh +
mov [esp+0ACh+var_AC] offset a____Binutil_10 +
call sub_410530  +
jmp loc_42FD55  +
***
mov eax [eax+28h] +
test eax eax +
jz loc_431D41  +
mov edx [esp-0BCh+arg_E8] +
sub edx [eax+1Ch] +
mov [ecx+14h] eax +
mov [ecx+18h] edx +
jmp loc_431D4F  +
cmp [esp-0BCh+arg_17C] 0 +
mov eax [ebp+0A0h] +
setnz byte ptr [esp-0BCh+arg_D0]  +
jmp loc_431706  +
***
mov eax [esp+54h] +
mov [esp] eax +
call sub_455940  +
jmp loc_42F9BE  +
***
xor eax eax +
cmp [esp-0BCh+arg_E4] 7 +
jnz loc_43105A  +
nop   +
jmp loc_431057  +
mov ecx 0FFFFFFF1h +
jmp loc_4321A5  +
mov dword ptr [esp+8] offset aAssign_file_po +
mov dword ptr [esp+4] 155Eh +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_410560  +
mov ecx edi +
mov [esp+18h] cl +
jmp loc_431706  +
***
mov eax esi +
mov esi ebx +
mov ebx eax +
jmp loc_431E50  +
***
jmp loc_4328A0  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp [esp+60h] +
mov eax [ebp+4] +
test byte ptr [ebp+2Bh] 10h +
mov eax [eax+1B0h] +
mov [esp+20h] eax +
jnz loc_4328D2  +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call sub_42F7D0  +
test eax eax +
jz loc_432910  +
mov eax [ebp+0A0h] +
lea edx [esp+3Ch] +
mov dword ptr [esp+3Ch] 0 +
mov eax [eax+40h] +
mov [esp+2Ch] eax +
mov eax [esp+20h] +
mov eax [eax+174h] +
mov eax [eax+1Ch] +
mov [esp+8] edx +
mov [esp] ebp +
mov [esp+4] eax +
call sub_40F8A0  +
mov ecx [esp+3Ch] +
test ecx ecx +
jz loc_432920  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov ecx [edx+20h] +
mov ebx [edx+24h] +
mov [esp+18h] ecx +
mov ecx [eax+40h] +
mov eax [eax+214h] +
mov [esp+1Ch] ebx +
lea edi [ecx+4] +
lea eax [ecx+eax*4] +
cmp eax edi +
jbe loc_432AB1  +
mov [esp+60h] ebp +
mov ebp eax +
jmp loc_43296B  +
add edi 4 +
cmp ebp edi +
jbe loc_432AA1  +
mov ebx [edi] +
mov eax [ebx+10h] +
and eax [ebx+14h] +
cmp eax 0FFFFFFFFh +
jnz loc_432960  +
mov eax [ebx+4] +
mov esi [ebx+2Ch] +
cmp eax 4 +
jz loc_432A6E  +
cmp eax 9 +
jz loc_432A6E  +
test esi esi +
jz loc_432960  +
test byte ptr [esi+17h] 8 +
jz loc_432960  +
mov eax [esi] +
mov [esp+24h] eax +
mov eax [ebx+30h] +
mov [esp+4] esi +
mov [esp+8] eax +
mov eax [esp+60h] +
mov [esp] eax +
call sub_4153F0  +
test eax eax +
jz loc_432910  +
movzx eax byte ptr [esi+18h] +
and eax 30h +
cmp al 10h +
jz loc_432CE0  +
cmp dword ptr [ebx] 0FFFFFFFFh +
jnz loc_432D08  +
mov eax [esp+60h] +
mov ecx [esp+24h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_455970  +
mov [ebx] eax +
mov eax [esi+8Ch] +
mov edx [eax+3Ch] +
mov [esp+28h] eax +
test edx edx +
jz loc_432A31  +
mov ecx [esp+24h] +
mov eax [esp+60h] +
mov dword ptr [esp] 0 +
call sub_42A7C0  +
test eax eax +
jz loc_432910  +
mov eax [esp+28h] +
mov edx [eax+4Ch] +
test edx edx +
jz loc_432A58  +
mov ecx [esp+24h] +
mov eax [esp+60h] +
mov dword ptr [esp] 1 +
call sub_42A7C0  +
test eax eax +
jz loc_432910  +
mov eax [esi+24h] +
mov [ebx+18h] eax +
mov eax [esi+6Ch] +
mov [ebx+30h] eax +
mov eax [ebx+2Ch] +
mov dword ptr [eax+6Ch] 0 +
mov eax [esp+18h] +
add edi 4 +
mov edx [esp+1Ch] +
mov dword ptr [esp+0Ch] 1 +
mov [esp] ebx +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_42EA70  +
cmp ebp edi +
mov [esp+18h] eax +
mov [esp+1Ch] edx +
ja loc_43296B  +
mov ebp [esp+60h] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov eax [edx+4] +
mov esi 1 +
mov [esp] eax +
call sub_455DB0  +
mov ebx [ebp+0A0h] +
mov eax [ebx+934h] +
sub ebx 0FFFFFF80h +
mov eax [eax+4] +
mov [esp] eax +
call sub_455C30  +
mov edx [esp+1Ch] +
mov [ebx+18h] eax +
mov eax [esp+18h] +
mov [esp] ebx +
mov dword ptr [esp+0Ch] 1 +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_42EA70  +
mov ecx [ebp+4] +
mov edi [ebp+0A0h] +
mov ecx [ecx+1B0h] +
mov ecx [ecx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
shl esi cl +
mov ebx esi +
sar ebx 1Fh +
add eax esi +
adc edx ebx +
add eax 0FFFFFFFFh +
adc edx 0FFFFFFFFh +
neg esi  +
mov ebx esi +
and esi eax +
sar ebx 1Fh +
mov eax edx +
and eax ebx +
xor edx edx +
mov [edi+18h] esi +
mov ebx [ebp+0A0h] +
mov [esp+18h] esi +
mov [esp+1Ch] eax +
mov eax [edi+34h] +
imul eax [edi+38h] +
mov esi [ebx+214h] +
mov ecx [ebx+934h] +
add eax [esp+18h] +
adc edx [esp+1Ch] +
cmp esi 1 +
mov [ecx+20h] eax +
mov [ecx+24h] edx +
jbe loc_432C24  +
mov edi 1 +
mov ebx [esp+2Ch] +
mov [esp+18h] esi +
jmp loc_432B8D  +
mov eax [ebp+0A0h] +
mov ecx [eax+934h] +
mov esi [ebx+edi*4] +
mov eax [ecx+4] +
mov ecx [esi] +
mov [esp] eax +
mov [esp+4] ecx +
call sub_455C40  +
mov [esi] eax +
mov eax [esp+20h] +
mov eax [eax+48h] +
test eax eax +
jz loc_432BBA  +
mov ecx [ebx+edi*4] +
mov [esp] ebp +
mov [esp+4] ecx +
call eax  +
mov eax [ebx+edi*4] +
mov edx [eax+30h] +
test edx edx +
jz loc_432C0B  +
mov esi [eax+18h] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebp +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_411E10  +
test eax eax +
jnz loc_432910  +
mov eax [ebx+edi*4] +
mov eax [eax+30h] +
mov [esp+8] ebp +
mov [esp+4] esi +
mov [esp] eax +
call sub_411CB0  +
cmp eax esi +
jnz loc_432910  +
add edi 1 +
cmp edi [esp+18h] +
jnz loc_432B81  +
mov ebx [ebp+0A0h] +
mov ecx [ebx+934h] +
mov eax [ecx+4] +
test eax eax +
jz loc_432C7A  +
mov eax [ebx+90h] +
mov edx [ebx+94h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebp +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_411E10  +
test eax eax +
jnz loc_432910  +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp] ebp +
mov [esp+4] eax +
call sub_455CE0  +
test eax eax +
jz loc_432910  +
mov eax [esp+20h] +
mov eax [eax+0A4h] +
test eax eax +
jz loc_432CA0  +
mov edx [ebp+0A0h] +
mov edx [edx+934h] +
mov edx [edx+38h] +
mov [esp] ebp +
mov [esp+4] edx +
call eax  +
mov eax [esp+20h] +
mov eax [eax+174h] +
mov eax [eax+14h] +
mov [esp] ebp +
call eax  +
test eax eax +
jz loc_432910  +
mov eax [ebx+934h] +
mov edx [eax+10h] +
mov eax 1 +
test edx edx +
jz loc_432912  +
mov [esp] ebp +
call edx  +
jmp loc_432912  +
***
mov eax [esp+60h] +
test byte ptr [eax+2Ah] 40h +
jnz loc_4329CE  +
mov edx [esp+24h] +
call sub_429E20  +
test eax eax +
mov [esp+24h] eax +
jnz loc_4329CE  +
jmp loc_432910  +
***
mov dword ptr [esp+8] offset a_bfd_elf_assig +
mov dword ptr [esp+4] 16A7h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_410560  +
lea esi [esi+0] +
lea edi [edi+0] +
jmp loc_4328A0  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov edx [eax] +
mov eax [edx+14h] +
mov ecx [edx+0Ch] +
test eax eax +
jnz loc_432DD7  +
and ch 1 +
jz loc_432D82  +
mov eax [edx+10h] +
test eax eax +
jz loc_432D82  +
mov ecx [eax+94h] +
cmp ecx [esp+1Ch+arg_0] +
jz loc_432DB3  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_432D82  +
mov ecx [eax+94h] +
cmp ecx [esp+1Ch+arg_0] +
jz loc_432DB3  +
mov eax [edx+4] +
mov [esp+1Ch+var_1C] offset aBSymbolSRequir +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] eax +
call off_47D664  +
mov [esp+1Ch+var_1C] 7 +
call sub_4105E0  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
mov ecx [ecx+0A0h] +
mov eax [eax+8] +
mov ecx [ecx+934h] +
cmp eax [ecx+28h] +
jge loc_432D82  +
mov ecx [ecx+8] +
mov eax [ecx+eax*4] +
test eax eax +
jz loc_432D82  +
mov eax [eax+14h] +
mov [edx+14h] eax +
test eax eax +
jz loc_432D82  +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_10] +
mov ebx [esp+14h+arg_0] +
test eax eax +
jz loc_432EA0  +
movzx eax byte ptr [eax] +
xor edx edx +
and eax 3 +
cmp al 2 +
setnz dl  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_432E16  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+14h+arg_8] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_432E0B  +
mov eax [esp+14h+arg_C] +
mov eax [eax+8Ch] +
test eax eax +
jz loc_432F65  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_432EA7  +
mov ecx [esp+14h+arg_4] +
mov esi [ecx+8Ch] +
mov ecx [esi+8] +
and ecx 0FFF00000h +
or ecx [eax+8] +
test edx edx +
mov [eax+8] ecx +
jz loc_432EDA  +
mov edx [esi+8] +
and edx 80h +
jz loc_432E75  +
mov edx [esi+64h] +
or dword ptr [eax+8] 80h +
mov [eax+64h] edx +
mov eax [esp+14h+arg_4] +
mov esi [esp+14h+arg_C] +
movzx edx byte ptr [eax+19h] +
mov eax [esp+14h+arg_C] +
and edx 4 +
movzx eax byte ptr [eax+19h] +
and eax 0FFFFFFFBh +
or eax edx +
mov [esi+19h] al +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
xor edx edx +
jmp loc_432E02  +
mov ecx [esp+14h+arg_C] +
mov esi [esp+14h+arg_4] +
mov ecx [ecx+14h] +
mov esi [esi+14h] +
cmp ecx esi +
jz loc_432F50  +
test edx edx +
jnz loc_432F25  +
mov esi [esp+14h+arg_4] +
mov esi [esi+8Ch] +
mov ecx [esi+8] +
and ecx 0FFF00000h +
or ecx [eax+8] +
mov [eax+8] ecx +
mov edx [esi+78h] +
test edx edx +
jz loc_432EE7  +
test byte ptr [edx+16h] 10h +
jnz loc_432F20  +
mov edx [esi+8] +
test dh 2 +
jz loc_432EF8  +
or ch 2 +
mov [eax+8] ecx +
mov edx [esi+8] +
mov ecx [esi+7Ch] +
mov [eax+7Ch] ecx +
mov ecx [esi+74h] +
mov [eax+74h] ecx +
test byte ptr [ebx+2Ah] 10h +
jnz loc_432E60  +
and edx 800h +
or [eax+8] edx +
jmp loc_432E5D  +
mov edx [esi+8] +
jmp loc_432F04  +
xor ecx esi +
and ecx 0FFF1FFFBh +
jz loc_432F50  +
mov ecx [esp+14h+arg_4] +
mov esi [ecx+8Ch] +
mov edx [esi+8] +
and edx 0FFF00000h +
or [eax+8] edx +
mov edx [esi+8] +
jmp loc_432E60  +
mov ecx [esp+14h+arg_4] +
mov esi [ecx+8Ch] +
mov ecx [esi+4] +
mov [eax+4] ecx +
jmp loc_432E46  +
mov [esp+14h+var_10] 1B41h +
mov [esp+14h+var_14] offset a____Binutil_10 +
mov [esp+14h+var_8] edx +
call sub_410530  +
mov eax [esp+14h+arg_C] +
mov edx [esp+14h+var_8] +
mov eax [eax+8Ch] +
jmp loc_432E35  +
***
push ebx  +
mov eax 1 +
sub esp 28h +
mov edx [esp+30h] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_432FB0  +
add esp 28h +
pop ebx  +
retn   +
***
mov ebx [esp+38h] +
mov ecx [ebx+4] +
cmp dword ptr [ecx+4] 5 +
jnz loc_432FA6  +
mov eax [esp+34h] +
mov ebx [esp+3Ch] +
mov eax [eax+8Ch] +
mov ebx [ebx+8Ch] +
mov ecx [eax+28h] +
mov [ebx+28h] ecx +
mov ecx [eax+4] +
cmp ecx 2 +
jz loc_432FE4  +
cmp ecx 0Bh +
jnz loc_433017  +
mov eax [eax+20h] +
mov [ebx+20h] eax +
mov eax [esp+3Ch] +
mov dword ptr [esp+10h] 0 +
mov [esp] edx +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
call sub_432DE0  +
add esp 28h +
pop ebx  +
retn   +
***
sub ecx 6FFFFFFDh +
cmp ecx 1 +
ja loc_432FEA  +
jmp loc_432FE4  +
***
push ebx  +
mov eax [esp+arg_0] +
mov ebx [esp+arg_4] +
mov edx [eax+64h] +
test edx edx +
jnz loc_43304B  +
jmp loc_4330B8  +
mov edx [edx+0Ch] +
test edx edx +
jz loc_4330B8  +
mov eax [edx+8Ch] +
cmp dword ptr [eax+4] 11h +
jnz loc_433044  +
mov esi [eax+7Ch] +
test esi esi +
jz loc_433044  +
mov eax esi +
xor edi edi +
jmp loc_43307A  +
cmp [edx+3Ch] ebx +
jz loc_4330C1  +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
cmp eax esi +
jz loc_433097  +
test eax eax +
jz loc_433097  +
mov ecx [eax+3Ch] +
cmp ecx ebx +
jnz loc_433064  +
mov eax [eax+8Ch] +
lea ecx [edi+4] +
cmp [edx+3Ch] ebx +
mov eax [eax+7Ch] +
cmovnz edi ecx +
cmp eax esi +
jnz loc_433076  +
test edi edi +
jz loc_433044  +
test ebx ebx +
jz loc_4330D7  +
mov eax [edx+28h] +
test eax eax +
jnz loc_4330AC  +
mov eax [edx+24h] +
mov [edx+28h] eax +
sub eax edi +
mov [edx+24h] eax +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_43304B  +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
mov ecx [ecx+8Ch] +
and dword ptr [ecx+8] 0FFFFFDFFh +
mov dword ptr [ecx+74h] 0 +
jmp loc_433069  +
mov eax [edx+3Ch] +
sub [eax+24h] edi +
jmp loc_433044  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 9Ch +
mov eax [esp+0B0h] +
mov edx [eax+4] +
mov eax 1 +
cmp dword ptr [edx+4] 5 +
jz loc_433120  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx [esp+0B4h] +
mov edi [ebx+4] +
cmp dword ptr [edi+4] 5 +
mov ecx edi +
jnz loc_43310F  +
mov eax [ebx+0A0h] +
mov eax [eax+934h] +
mov eax [eax] +
test eax eax +
jz loc_433166  +
mov eax [esp+0B0h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_433030  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0B0h] +
mov eax [eax+0A0h] +
mov ebp [eax+44h] +
mov [esp+48h] eax +
test ebp ebp +
jz loc_433144  +
cmp edx edi +
jz loc_434018  +
mov eax [edx+1B0h] +
mov dword ptr [esp+8Ch] 0 +
mov [esp+68h] eax +
mov eax [esp+48h] +
mov eax [eax+30h] +
mov [esp+58h] eax +
mov eax [ecx+1B0h] +
mov eax [eax+10h] +
mov [esp+3Ch] eax +
mov eax [esp+0B0h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+34h] eax +
jz loc_4331D0  +
and byte ptr [eax+18h] 0BFh +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_4331C5  +
mov eax [esp+48h] +
mov ebp [eax+44h] +
mov eax [esp+58h] +
test eax eax +
jz loc_434412  +
mov eax [ebp+10h] +
test eax eax +
jnz loc_433F6A  +
mov edx ebp +
xor eax eax +
mov ecx [esp+58h] +
jmp loc_433203  +
mov edi [edx+10h] +
test edi edi +
jnz loc_433F6A  +
add eax 1 +
add edx 20h +
cmp eax ecx +
jnz loc_4331F8  +
mov dword ptr [esp+64h] 0 +
xor esi esi +
mov edi ebp +
mov [esp+30h] ebp +
mov ebp esi +
jmp loc_433243  +
cmp eax 1 +
jz loc_4332A4  +
cmp eax 6474E552h +
jnz loc_433233  +
mov dword ptr [edi] 0 +
add ebp 1 +
add edi 20h +
cmp [esp+58h] ebp +
jbe loc_433359  +
mov eax [edi] +
cmp eax 3 +
jnz loc_433221  +
mov eax [esp+34h] +
test eax eax +
jz loc_433233  +
mov edx [edi+0Ch] +
jmp loc_43325E  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_433233  +
test edx edx +
jnz loc_433257  +
mov esi [edi+10h] +
test esi esi +
jnz loc_433257  +
mov ebx [edi+18h] +
test ebx ebx +
jnz loc_433257  +
mov ecx [edi+14h] +
test ecx ecx +
jz loc_433257  +
test byte ptr [eax+15h] 1 +
jz loc_433257  +
mov esi [eax+24h] +
test esi esi +
mov [esp+10h] esi +
jz loc_433257  +
mov esi [eax+50h] +
mov ebx [edi+8] +
cmp esi ebx +
jb loc_433257  +
add esi [esp+10h] +
add ecx ebx +
cmp esi ecx +
ja loc_433257  +
mov eax [eax+1Ch] +
mov [edi+0Ch] eax +
jmp loc_433233  +
***
test ebp ebp +
jz loc_433233  +
mov ebx [esp+30h] +
xor edx edx +
jmp loc_4332BE  +
add edx 1 +
add ebx 20h +
cmp edx ebp +
jz loc_433233  +
cmp dword ptr [ebx] 1 +
jnz loc_4332B0  +
mov eax [edi+0Ch] +
mov esi [ebx+18h] +
mov ecx [ebx+14h] +
mov [esp+10h] eax +
mov eax [ebx+0Ch] +
cmp esi ecx +
cmovnb ecx esi +
mov [esp+14h] ecx +
add ecx eax +
cmp [esp+10h] ecx +
mov [esp+18h] ecx +
jnb loc_4332B0  +
mov ecx [edi+18h] +
cmp ecx [edi+14h] +
mov [esp+28h] ecx +
cmovb ecx [edi+14h] +
mov [esp+1Ch] ecx +
add ecx [esp+10h] +
cmp eax ecx +
mov [esp+20h] ecx +
jnb loc_4332B0  +
mov ecx [edi+10h] +
mov [esp+24h] ecx +
mov ecx [ebx+10h] +
mov [esp+2Ch] ecx +
add ecx [esp+14h] +
cmp [esp+24h] ecx +
jnb loc_4332B0  +
mov ecx [esp+1Ch] +
add ecx [esp+24h] +
cmp [esp+2Ch] ecx +
jnb loc_4332B0  +
cmp [esp+10h] eax +
ja loc_434430  +
mov eax [esp+18h] +
sub eax [esp+20h] +
test eax eax +
jle loc_43334E  +
mov ecx [esp+28h] +
add [edi+14h] eax +
add ecx eax +
mov [edi+18h] ecx +
mov dword ptr [ebx] 0 +
jmp loc_4332B0  +
***
lea eax [esp+8Ch] +
mov ebp [esp+30h] +
mov [esp+4Ch] eax +
movzx eax byte ptr [esp+64h] +
mov dword ptr [esp+74h] 0 +
mov dword ptr [esp+6Ch] 0 +
mov dword ptr [esp+50h] 0 +
add eax eax +
mov dword ptr [esp+60h] 0 +
mov [esp+5Ch] al +
mov eax [ebp+0] +
test eax eax +
mov [esp+10h] eax +
jz loc_4335F0  +
mov eax [esp+0B0h] +
mov eax [eax+64h] +
test eax eax +
jz loc_433ED9  +
mov edx [ebp+10h] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
jmp loc_433467  +
mov ebx [eax+20h] +
cmp ebx edx +
jb loc_4334B0  +
mov ecx [eax+14h] +
mov esi ecx +
and esi 500h +
cmp esi 400h +
jz loc_433663  +
mov esi [eax+24h] +
add ebx esi +
mov esi [ebp+14h] +
cmp [ebp+18h] esi +
cmovnb esi [ebp+18h] +
add esi edx +
cmp ebx esi +
ja loc_4334B0  +
test cl 1 +
jz loc_4334B0  +
mov esi [esp+10h] +
cmp esi 6474E551h +
jz loc_433460  +
cmp esi 7 +
jz loc_433689  +
cmp dword ptr [esp+10h] 1 +
jz loc_433435  +
test ch 4 +
jnz loc_433460  +
cmp dword ptr [esp+10h] 2 +
jz loc_433697  +
test byte ptr [eax+18h] 40h +
jnz loc_433460  +
mov edi [esp+18h] +
test edi edi +
cmovz edi eax +
cmp dword ptr [eax+3Ch] 1 +
sbb dword ptr [esp+1Ch] 0FFFFFFFFh +
mov [esp+18h] edi +
lea esi [esi+0] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_4334DF  +
test edx edx +
jnz loc_4333D0  +
mov esi [eax+1Ch] +
mov ebx [ebp+0Ch] +
cmp esi ebx +
jb loc_4334B0  +
mov ecx [eax+14h] +
mov edi ecx +
and edi 500h +
cmp edi 400h +
jz loc_433676  +
mov edi [eax+24h] +
add esi edi +
mov edi [ebp+14h] +
cmp [ebp+18h] edi +
cmovnb edi [ebp+18h] +
add edi ebx +
cmp esi edi +
jbe loc_43340B  +
lea esi [esi+0] +
cmp dword ptr [esp+10h] 4 +
jnz loc_433460  +
mov ecx [eax+8Ch] +
cmp dword ptr [ecx+4] 7 +
jnz loc_433460  +
mov ebx [eax+50h] +
mov ecx [ebp+8] +
cmp ebx ecx +
jb loc_433460  +
add ebx [eax+24h] +
add ecx [ebp+14h] +
cmp ebx ecx +
ja loc_433460  +
mov ecx [eax+14h] +
jmp loc_433430  +
***
mov eax [esp+1Ch] +
lea eax ds:28h[eax*4] +
mov [esp+54h] eax +
mov eax [esp+54h] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call sub_40E220  +
test eax eax +
mov [esp+10h] eax +
jz loc_433F02  +
mov edi [esp+10h] +
mov eax [ebp+4] +
mov edx [ebp+0] +
or byte ptr [edi+20h] 1 +
mov [edi+8] eax +
mov eax [esp+18h] +
mov dword ptr [edi] 0 +
mov [edi+4] edx +
test eax eax +
jz loc_43353A  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_433552  +
mov eax [ebp+10h] +
mov esi [esp+10h] +
mov [esi+0Ch] eax +
movzx eax byte ptr [esi+20h] +
and eax 0FFFFFFFDh +
or al [esp+5Ch] +
mov [esi+20h] al +
mov ecx [ebp+8] +
xor eax eax +
test ecx ecx +
jnz loc_433568  +
mov eax [esp+48h] +
mov eax [eax+28h] +
cmp [ebp+14h] eax +
setnb al  +
mov edi [esp+10h] +
shl eax 4 +
mov ebx eax +
movzx eax byte ptr [edi+20h] +
and eax 0FFFFFFCFh +
or eax ebx +
mov [edi+20h] al +
mov eax [esp+60h] +
test eax eax +
jz loc_43358E  +
cmp edx 1 +
jz loc_433AF1  +
mov eax [esp+48h] +
mov ebx [eax+14h] +
xor eax eax +
cmp ecx ebx +
ja loc_4335B0  +
mov esi [esp+48h] +
add ecx [ebp+14h] +
mov eax [esi+2Ch] +
imul eax [esi+30h] +
add eax ebx +
cmp ecx eax +
setnb al  +
mov esi [esp+10h] +
shl eax 5 +
mov ecx eax +
movzx eax byte ptr [esi+20h] +
and eax 0FFFFFFDFh +
or eax ecx +
cmp edx 1 +
mov [esi+20h] al +
jz loc_433AE6  +
cmp dword ptr [esp+1Ch] 0 +
jnz loc_4336DA  +
mov eax [esp+10h] +
mov ebx [esp+4Ch] +
mov dword ptr [eax+24h] 0 +
mov [esp+4Ch] eax +
mov [ebx] eax +
nop   +
add dword ptr [esp+50h] 1 +
add ebp 20h +
mov eax [esp+58h] +
cmp [esp+50h] eax +
jnz loc_433393  +
mov edi [esp+0B4h] +
mov eax [esp+8Ch] +
mov edx [edi+0A0h] +
mov edx [edx+934h] +
mov [edx] eax +
mov edx [esp+6Ch] +
test edx edx +
jz loc_433144  +
test eax eax +
jz loc_433144  +
xor edx edx +
mov eax [eax] +
add edx 1 +
test eax eax +
jnz loc_433638  +
mov eax [esp+74h] +
cmp eax edx +
jnb loc_433144  +
sub edx eax +
mov eax [esp+48h] +
imul edx [eax+2Ch] +
mov eax [esp+6Ch] +
sub [eax+0Ch] edx +
jmp loc_433144  +
***
xor si si +
cmp dword ptr [esp+10h] 7 +
jnz loc_4333F5  +
jmp loc_4333F2  +
***
xor di di +
cmp dword ptr [esp+10h] 7 +
jnz loc_433493  +
jmp loc_433490  +
***
and ch 4 +
jnz loc_433440  +
jmp loc_433460  +
***
and ecx 500h +
cmp ecx 400h +
jz loc_4336B0  +
mov ecx [eax+24h] +
test ecx ecx +
jnz loc_433440  +
test edx edx +
jz loc_433EC8  +
cmp [eax+20h] edx +
jnz loc_433440  +
mov esi [eax] +
mov edi offset a_dynamic_1 +
mov ecx 9 +
cmps   +
jnz loc_433460  +
jmp loc_433440  +
***
mov eax [esp+1Ch] +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_412C10  +
test eax eax +
mov [esp+14h] eax +
jz loc_433F02  +
mov eax [esp+0B0h] +
mov edx [eax+64h] +
test edx edx +
jz loc_433726  +
cmp [esp+18h] edx +
mov eax [esp+18h] +
jnz loc_43371F  +
jmp loc_433B19  +
cmp eax edx +
jz loc_433B19  +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_433717  +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+30h] 1 +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+4] 192Dh +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_410530  +
mov eax [esp+24h] +
cmp [esp+1Ch] eax +
jz loc_433F09  +
mov ebx [esp+30h] +
mov eax [esp+10h] +
mov edx [esp+28h] +
test ebx ebx +
cmovnz edx [esp+34h] +
mov [eax+0Ch] edx +
movzx eax byte ptr [eax+20h] +
test al 10h +
jz loc_43379E  +
mov edi [esp+48h] +
mov ecx [edi+28h] +
cmp edx ecx +
jb loc_433FE5  +
mov edi [esp+10h] +
sub edx ecx +
mov [edi+0Ch] edx +
test al 20h +
jz loc_4337CF  +
mov eax [esp+10h] +
mov edi [esp+48h] +
mov ecx [eax+0Ch] +
mov edx [edi+2Ch] +
mov eax [edi+30h] +
imul edx eax +
cmp ecx edx +
jb loc_433FF4  +
mov edi [esp+10h] +
sub ecx edx +
mov [esp+74h] eax +
mov [edi+0Ch] ecx +
mov [esp+6Ch] edi +
mov dword ptr [esp+38h] 0 +
mov eax [esp+10h] +
xor ecx ecx +
mov dword ptr [esp+24h] 0 +
mov ebx ecx +
mov dword ptr [esp+18h] 1 +
mov dword ptr [eax+24h] 0 +
mov eax [esp+3Ch] +
lea esi [eax-1] +
neg eax  +
mov [esp+40h] esi +
mov [esp+34h] eax +
jmp loc_4338D4  +
mov ecx [esi+14h] +
and ecx 500h +
cmp ecx 400h +
jz loc_4339D0  +
mov ecx [esi+24h] +
add ecx eax +
mov [esp+20h] ecx +
mov ecx [ebp+14h] +
cmp [ebp+18h] ecx +
cmovnb ecx [ebp+18h] +
add ecx edx +
cmp [esp+20h] ecx +
ja loc_4338FC  +
mov ecx [esp+10h] +
mov ecx [ecx+24h] +
test ecx ecx +
mov [esp+20h] ecx +
mov ecx [esp+10h] +
jnz loc_4339E5  +
movzx ecx byte ptr [ecx+20h] +
mov dword ptr [esp+28h] 0 +
mov [esp+2Ch] cl +
and ecx 10h +
jz loc_43387B  +
mov ecx [esp+48h] +
mov ecx [ecx+28h] +
mov [esp+28h] ecx +
add edx [esp+28h] +
mov [esp+28h] edx +
xor edx edx +
test byte ptr [esp+2Ch] 20h +
jz loc_433897  +
mov ecx [esp+48h] +
mov edx [ecx+2Ch] +
imul edx [ecx+30h] +
add edx [esp+28h] +
cmp eax edx +
jnz loc_4343F6  +
mov ecx [esp+20h] +
mov edx [esp+10h] +
add dword ptr [esp+38h] 1 +
mov eax ecx +
add eax 1 +
mov [edx+24h] eax +
mov eax [esp+14h] +
mov [edx+ecx*4+28h] esi +
mov dword ptr [eax+ebx*4] 0 +
or byte ptr [edi+18h] 40h +
add ebx 1 +
cmp [esp+1Ch] ebx +
jbe loc_43391F  +
mov eax [esp+14h] +
mov edi [eax+ebx*4] +
test edi edi +
jz loc_4338CB  +
mov esi [edi+3Ch] +
test esi esi +
jz loc_433A50  +
mov edx [esp+10h] +
mov eax [esi+20h] +
mov edx [edx+0Ch] +
cmp eax edx +
jnb loc_433810  +
cmp dword ptr [ebp+0] 4 +
jz loc_433960  +
mov esi [esp+18h] +
test esi esi +
jz loc_4338CB  +
add ebx 1 +
cmp [esp+1Ch] ebx +
mov [esp+24h] eax +
mov dword ptr [esp+18h] 0 +
ja loc_4338D4  +
mov eax [esp+10h] +
mov ecx [eax+24h] +
test ecx ecx +
jz loc_433A70  +
mov eax [esp+10h] +
mov edi [esp+4Ch] +
mov [esp+4Ch] eax +
mov [edi] eax +
mov eax [esp+38h] +
cmp [esp+1Ch] eax +
ja loc_433A90  +
mov eax [esp+14h] +
mov [esp] eax +
call free  +
jmp loc_4335F0  +
***
mov ecx [edi+8Ch] +
cmp dword ptr [ecx+4] 7 +
jnz loc_433902  +
mov ecx [edi+50h] +
mov [esp+20h] ecx +
mov ecx [ebp+8] +
cmp [esp+20h] ecx +
mov [esp+28h] ecx +
jb loc_433902  +
mov ecx [esp+20h] +
add ecx [edi+24h] +
mov [esp+20h] ecx +
mov ecx [esp+28h] +
add ecx [ebp+14h] +
cmp [esp+20h] ecx +
ja loc_433902  +
mov ecx [esp+0B0h] +
movzx ecx byte ptr [ecx+28h] +
and ecx 7 +
cmp cl 3 +
jnz loc_433902  +
mov ecx [edi+1Ch] +
test ecx ecx +
jnz loc_433902  +
mov ecx [edi+20h] +
test ecx ecx +
jnz loc_433902  +
jmp loc_433844  +
***
xor cx cx +
cmp dword ptr [ebp+0] 7 +
jnz loc_433828  +
lea esi [esi+0] +
jmp loc_433825  +
***
mov edx [esp+20h] +
mov dword ptr [esp+2Ch] 0FFFFFFFFh +
mov edx [ecx+edx*4+24h] +
mov ecx [edx+24h] +
mov edx [edx+20h] +
mov [esp+28h] ecx +
add [esp+28h] edx +
mov edx [esp+40h] +
add edx [esp+28h] +
jb loc_433A15  +
and edx [esp+34h] +
mov [esp+2Ch] edx +
mov edx [esp+3Ch] +
mov ecx [esp+34h] +
lea edx [edx+eax-1] +
and ecx edx +
mov [esp+30h] edx +
mov edx 0FFFFFFFFh +
cmp eax [esp+30h] +
cmovbe edx ecx +
cmp [esp+2Ch] edx +
jb loc_433902  +
cmp eax [esp+28h] +
jnb loc_4338A3  +
jmp loc_433902  +
***
mov dword ptr [esp+4] 1991h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_410530  +
jmp loc_4338EA  +
***
mov dword ptr [esp+4] 19C8h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_410530  +
jmp loc_43392E  +
***
mov eax [esp+54h] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call sub_40E220  +
test eax eax +
mov [esp+10h] eax +
jz loc_433EF6  +
mov ebx [esp+10h] +
mov eax [ebp+0] +
mov edi [esp+24h] +
mov dword ptr [ebx] 0 +
mov [ebx+4] eax +
mov eax [ebp+4] +
mov [ebx+0Ch] edi +
mov [ebx+8] eax +
movzx eax byte ptr [ebx+20h] +
or eax 1 +
and eax 0FFFFFFCDh +
or al [esp+5Ch] +
mov [ebx+20h] al +
jmp loc_4337D7  +
***
test al 20h +
cmovz edx [esp+60h] +
mov [esp+60h] edx +
cmp dword ptr [esp+1Ch] 0 +
jnz loc_4336DA  +
mov eax [esp+0B0h] +
mov dword ptr [esp] offset aBWarningEmptyL +
mov [esp+4] eax +
call off_47D664  +
jmp loc_4335D9  +
***
mov eax [ebp+10h] +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+70h] 1 +
mov dword ptr [esp+28h] 0 +
mov [esp+18h] eax +
mov eax [ebp+0] +
mov dword ptr [esp+30h] 1 +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+2Ch] 0 +
mov [esp+20h] eax +
mov eax [esp+18h] +
test eax eax +
jz loc_433DA0  +
mov eax [edx+20h] +
cmp [esp+18h] eax +
ja loc_433DD8  +
mov ecx [edx+14h] +
mov ebx ecx +
and ebx 500h +
cmp ebx 400h +
jz loc_433E1B  +
mov esi [edx+24h] +
add esi eax +
mov eax [ebp+14h] +
cmp [ebp+18h] eax +
mov ebx eax +
cmovnb ebx [ebp+18h] +
add ebx [esp+18h] +
cmp esi ebx +
ja loc_433DD8  +
test cl 1 +
jz loc_433DD8  +
mov esi [esp+20h] +
cmp esi 6474E551h +
jz loc_433D30  +
cmp esi 7 +
jz loc_433E39  +
cmp dword ptr [esp+20h] 1 +
jz loc_433BE1  +
test ch 4 +
jnz loc_433D30  +
cmp dword ptr [esp+20h] 2 +
jz loc_433D50  +
xor edi edi +
test byte ptr [edx+18h] 40h +
jnz loc_433D30  +
mov ecx [edx+3Ch] +
test ecx ecx +
jz loc_433D30  +
mov ebx [esp+2Ch] +
lea esi [ebx+1] +
mov [esp+38h] esi +
mov esi [esp+14h] +
mov [esi+ebx*4] edx +
mov ebx [esp+64h] +
test ebx ebx +
jnz loc_433C86  +
mov ebx [ebp+0Ch] +
test ebx ebx +
mov [esp+2Ch] ebx +
jz loc_433C86  +
mov esi [esp+68h] +
test byte ptr [esi+1AEh] 10h +
jnz loc_433C86  +
mov esi [esp+24h] +
test esi esi +
jnz loc_433C86  +
mov ebx [ecx+20h] +
test ebx ebx +
jz loc_433C86  +
mov ebx [esp+10h] +
mov esi [ecx+1Ch] +
movzx ebx byte ptr [ebx+20h] +
mov [esp+78h] esi +
mov [esp+40h] bl +
xor ebx ebx +
test byte ptr [esp+40h] 10h +
jz loc_433C5C  +
mov esi [esp+48h] +
mov ebx [esi+28h] +
add ebx [esp+2Ch] +
mov [esp+7Ch] ebx +
xor ebx ebx +
test byte ptr [esp+40h] 20h +
jz loc_433C78  +
mov esi [esp+48h] +
mov ebx [esi+2Ch] +
imul ebx [esi+30h] +
add ebx [esp+7Ch] +
cmp [esp+78h] ebx +
jz loc_434456  +
mov esi [ecx+20h] +
mov ebx esi +
mov [esp+2Ch] esi +
mov esi [esp+10h] +
mov esi [esi+0Ch] +
cmp ebx esi +
jb loc_433E4C  +
mov ebx [ecx+14h] +
and ebx 500h +
cmp ebx 400h +
jz loc_434001  +
mov ebx [ecx+24h] +
mov [esp+40h] ebx +
mov ebx [esp+40h] +
add ebx [esp+2Ch] +
cmp [ebp+18h] eax +
mov [esp+40h] ebx +
mov ebx eax +
cmovnb ebx [ebp+18h] +
add ebx esi +
cmp [esp+40h] ebx +
ja loc_433E4C  +
mov eax [esp+30h] +
test eax eax +
jnz loc_433CF4  +
mov edi [esp+2Ch] +
mov eax [esp+28h] +
cmp edi eax +
cmovbe eax edi +
mov [esp+2Ch] eax +
mov eax [esp+24h] +
mov edi [esp+10h] +
mov dword ptr [esp+30h] 0 +
mov [edi+eax*4+28h] ecx +
mov edi [esp+2Ch] +
add eax 1 +
mov [esp+24h] eax +
mov [esp+28h] edi +
mov eax [esp+38h] +
cmp [esp+1Ch] eax +
jz loc_43375A  +
mov [esp+2Ch] eax +
lea esi [esi+0] +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_433B57  +
mov eax [esp+2Ch] +
cmp [esp+1Ch] eax +
jz loc_43375A  +
jmp loc_433746  +
***
and ecx 500h +
cmp ecx 400h +
jz loc_433D69  +
mov edi [edx+24h] +
test edi edi +
jnz loc_433BE1  +
mov esi [esp+18h] +
xor edi edi +
test esi esi +
jz loc_433F77  +
mov esi [esp+18h] +
cmp esi [edx+20h] +
jnz loc_433BE3  +
mov esi [edx] +
mov edi offset a_dynamic_1 +
mov ecx 9 +
cmps   +
jnz loc_433D30  +
jmp loc_433BE1  +
***
mov eax [edx+1Ch] +
mov ebx [ebp+0Ch] +
cmp eax ebx +
jb loc_433DD8  +
mov ecx [edx+14h] +
mov esi ecx +
and esi 500h +
cmp esi 400h +
jz loc_433E2D  +
mov esi [edx+24h] +
add esi eax +
mov eax [ebp+14h] +
cmp [ebp+18h] eax +
mov edi eax +
cmovnb edi [ebp+18h] +
add ebx edi +
cmp esi ebx +
jbe loc_433BA4  +
cmp dword ptr [esp+20h] 4 +
jnz loc_433D30  +
mov eax [edx+8Ch] +
cmp dword ptr [eax+4] 7 +
jnz loc_433D30  +
mov eax [edx+50h] +
mov ecx [ebp+8] +
cmp eax ecx +
jb loc_433D30  +
add eax [edx+24h] +
mov ebx eax +
mov eax [ebp+14h] +
add ecx eax +
cmp ebx ecx +
ja loc_433D30  +
mov ecx [edx+14h] +
jmp loc_433BCD  +
***
xor esi esi +
cmp dword ptr [esp+20h] 7 +
jnz loc_433B8A  +
jmp loc_433B87  +
***
xor si si +
cmp dword ptr [esp+20h] 7 +
jnz loc_433DC0  +
jmp loc_433DBD  +
***
and ch 4 +
jz loc_433D30  +
mov edi 1 +
jmp loc_433BE3  +
***
cmp dword ptr [esp+20h] 4 +
jz loc_433F88  +
mov esi [esp+68h] +
test byte ptr [esi+1AEh] 10h +
jz loc_433EA7  +
mov ebx [ebp+0Ch] +
mov esi [ecx+1Ch] +
mov [esp+78h] ebx +
cmp esi ebx +
jb loc_433EA7  +
mov ebx [ecx+14h] +
and ebx 500h +
cmp ebx 400h +
jz loc_434341  +
mov edi [ecx+24h] +
mov [esp+40h] edi +
mov ebx [esp+40h] +
add ebx esi +
cmp [ebp+18h] eax +
cmovnb eax [ebp+18h] +
add eax [esp+78h] +
cmp ebx eax +
jbe loc_433CDB  +
mov edi [esp+70h] +
test edi edi +
jz loc_433D17  +
mov eax [esp+2Ch] +
mov dword ptr [esp+70h] 0 +
mov [esp+34h] eax +
jmp loc_433D17  +
***
mov edi [eax+1Ch] +
cmp [ebp+0Ch] edi +
jnz loc_433440  +
jmp loc_4336C1  +
***
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+54h] 28h +
mov dword ptr [esp+1Ch] 0 +
jmp loc_4334EE  +
***
mov eax [esp+14h] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_43310F  +
***
mov eax [esp+10h] +
mov edi [esp+1Ch] +
mov esi [esp+64h] +
mov [eax+24h] edi +
mov edi [esp+4Ch] +
test esi esi +
mov [esp+4Ch] eax +
mov [edi] eax +
jz loc_43394A  +
mov eax [esp+68h] +
test byte ptr [eax+1AEh] 10h +
jnz loc_43394A  +
mov edi [esp+4Ch] +
mov eax [edi+0Ch] +
cmp eax [esp+28h] +
jz loc_43394A  +
test byte ptr [edi+20h] 30h +
jnz loc_43394A  +
mov edi [esp+28h] +
sub edi eax +
mov eax edi +
mov edi [esp+4Ch] +
mov [edi+10h] eax +
jmp loc_43394A  +
***
mov dword ptr [esp+64h] 1 +
jmp loc_433215  +
***
mov esi [edx+1Ch] +
cmp [ebp+0Ch] esi +
jnz loc_433BE3  +
jmp loc_433D84  +
***
mov ebx [edx+8Ch] +
cmp dword ptr [ebx+4] 7 +
jnz loc_433E57  +
mov esi [edx+50h] +
mov ebx [ebp+8] +
cmp esi ebx +
jb loc_433E57  +
add esi [edx+24h] +
add ebx eax +
cmp esi ebx +
ja loc_433E57  +
mov ebx [esp+0B0h] +
movzx ebx byte ptr [ebx+28h] +
and ebx 7 +
cmp bl 3 +
jnz loc_433E57  +
cmp dword ptr [edx+1Ch] 0 +
jnz loc_433E57  +
cmp dword ptr [edx+20h] 0 +
jz loc_433CDB  +
nop   +
jmp loc_433E57  +
***
mov edi [esp+10h] +
and eax 0FFFFFFCFh +
mov [edi+20h] al +
jmp loc_43379E  +
***
mov eax [esp+10h] +
and byte ptr [eax+20h] 0DFh +
jmp loc_4337CF  +
***
mov ebx edi +
test bl bl +
mov dword ptr [esp+40h] 0 +
jz loc_433CBA  +
jmp loc_433CB3  +
***
mov eax [edi+1B0h] +
test byte ptr [eax+1AEh] 10h +
jz loc_43406F  +
mov eax [esp+48h] +
mov eax [eax+30h] +
mov [esp+20h] eax +
cmp dword ptr [esp+20h] 0 +
jz loc_43448C  +
xor esi esi +
xor ebx ebx +
jmp loc_434053  +
add esi 1 +
add ebp 20h +
cmp esi [esp+20h] +
jz loc_434358  +
cmp dword ptr [ebp+0] 1 +
jnz loc_434043  +
mov eax [ebp+1Ch] +
cmp eax ebx +
jbe loc_434043  +
cmp eax 40000000h +
ja loc_434388  +
mov ebx eax +
jmp loc_434043  +
***
mov eax [esp+0B4h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+30h] eax +
jz loc_43408C  +
and byte ptr [eax+18h] 0BFh +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_434081  +
mov eax [esp+48h] +
mov dword ptr [esp+34h] 0 +
mov eax [eax+30h] +
test eax eax +
mov [esp+20h] eax +
jz loc_43431D  +
mov [esp+18h] edi +
mov edi ebp +
mov [esp+14h] ebp +
mov eax [edi+10h] +
test eax eax +
jnz loc_4340CC  +
cmp dword ptr [edi+18h] 0 +
jnz loc_4340CC  +
mov eax [edi] +
sub eax 2 +
cmp eax 1 +
jbe loc_434493  +
mov eax [esp+0B0h] +
mov esi [eax+64h] +
test esi esi +
jz loc_4342FF  +
mov eax [edi] +
mov [esp+10h] edi +
lea ebx [eax-6474E550h] +
mov [esp+24h] eax +
mov [esp+3Ch] ebx +
lea ebx [eax-1] +
sub eax 6 +
mov [esp+40h] ebx +
mov [esp+38h] eax +
jmp loc_434226  +
cmp dword ptr [esp+38h] 1 +
jbe loc_43421B  +
and eax 2 +
mov [esp+28h] eax +
jnz loc_43412F  +
cmp dword ptr [esp+3Ch] 2 +
jbe loc_43421B  +
cmp dword ptr [esp+40h] 1 +
jbe loc_43421B  +
mov eax [ebx+4] +
cmp eax 8 +
mov [esp+2Ch] eax +
jz loc_434181  +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov edi eax +
mov eax [esp+10h] +
mov ebp edx +
mov eax [eax+8] +
cmp eax edi +
ja loc_43421B  +
xor edx edx +
sub edi eax +
mov eax edi +
mov edi [ebx+18h] +
sbb ebp edx +
mov edx ebp +
xor ebp ebp +
add eax edi +
mov edi [esp+10h] +
adc edx ebp +
cmp edx 0 +
mov edi [edi+14h] +
jg loc_43421B  +
jl loc_434181  +
cmp eax edi +
ja loc_43421B  +
mov ebp [esp+28h] +
test ebp ebp +
jz loc_4341BE  +
mov eax [esp+10h] +
mov edx [ebx+0Ch] +
mov eax [eax+0Ch] +
cmp edx eax +
jb loc_43421B  +
mov edi [esp+1Ch] +
sub edx eax +
test edi edi +
jz loc_4341B0  +
cmp dword ptr [esp+2Ch] 8 +
jz loc_4343E2  +
mov eax [ebx+18h] +
mov edi [esp+10h] +
add eax edx +
cmp eax [edi+18h] +
ja loc_43421B  +
mov eax [esp+10h] +
cmp dword ptr [eax] 2 +
jz loc_434271  +
test ecx ecx +
jz loc_434493  +
mov eax [ecx+14h] +
cmp [esi+14h] eax +
jnz loc_434493  +
mov eax [ecx+20h] +
cmp [esi+20h] eax +
jnz loc_434493  +
mov eax [ecx+1Ch] +
cmp [esi+1Ch] eax +
jnz loc_434493  +
mov eax [ecx+24h] +
cmp [esi+24h] eax +
jnz loc_434493  +
mov eax [ecx+28h] +
cmp [esi+28h] eax +
jnz loc_434493  +
mov eax [ecx+40h] +
cmp [esi+40h] eax +
jnz loc_434493  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_4342FB  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_434231  +
or byte ptr [ecx+18h] 40h +
mov ebx [esi+8Ch] +
mov eax [ebx+8] +
mov ebp eax +
and ebp 400h +
mov [esp+1Ch] ebp +
jz loc_434105  +
cmp dword ptr [esp+24h] 7 +
jz loc_434110  +
cmp dword ptr [esp+24h] 6474E552h +
jz loc_434110  +
cmp dword ptr [esp+24h] 1 +
jnz loc_43421B  +
jmp loc_434110  +
***
mov edx [ebx+18h] +
test edx edx +
jnz loc_4341CB  +
mov eax [eax+18h] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_4341CB  +
cmp dword ptr [esp+2Ch] 8 +
jz loc_4342CD  +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov edi eax +
mov eax [esp+10h] +
mov ebp edx +
mov eax [eax+8] +
cmp eax edi +
jnb loc_43421B  +
xor edx edx +
sub edi eax +
mov eax edi +
mov edi [esp+10h] +
sbb ebp edx +
cmp ebp 0 +
mov edi [edi+14h] +
jg loc_43421B  +
jl loc_4342CD  +
cmp eax edi +
jnb loc_43421B  +
cmp dword ptr [esp+28h] 0 +
jz loc_4341CB  +
mov eax [esp+10h] +
mov edx [ebx+0Ch] +
mov eax [eax+0Ch] +
cmp edx eax +
jbe loc_43421B  +
sub edx eax +
cmp [esp+1Ch] edx +
jbe loc_43421B  +
jmp loc_4341CB  +
***
mov edi [esp+10h] +
add dword ptr [esp+34h] 1 +
add edi 20h +
mov eax [esp+20h] +
cmp [esp+34h] eax +
jnz loc_4340B1  +
mov ebp [esp+14h] +
mov edi [esp+18h] +
mov eax [esp+30h] +
test eax eax +
jz loc_434466  +
movzx edx byte ptr [eax+18h] +
test dl 40h +
jz loc_434032  +
and edx 0FFFFFFBFh +
mov [eax+18h] dl +
mov eax [eax+0Ch] +
jmp loc_434321  +
***
mov ebx edi +
test bl bl +
mov dword ptr [esp+40h] 0 +
jz loc_433E8E  +
jmp loc_433E87  +
***
mov eax [esp+0B4h] +
mov edi [eax+4] +
mov eax [edi+1B0h] +
mov ecx edi +
cmp ebx [eax+10h] +
jnz loc_4343B1  +
mov eax [esp+0B0h] +
mov edx [eax+4] +
mov eax [eax+0A0h] +
mov [esp+48h] eax +
jmp loc_433186  +
***
mov [esp+8] eax +
mov eax [esp+0B0h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp] offset aBWarningSegmen +
mov [esp+4] eax +
call off_47D664  +
jmp loc_434043  +
***
mov eax [edi] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_410FE0  +
mov eax [esp+0B0h] +
mov edx [eax+4] +
mov eax [eax+0A0h] +
mov [esp+48h] eax +
mov eax [esp+0B4h] +
mov ecx [eax+4] +
jmp loc_433186  +
***
mov edi [esp+10h] +
xor eax eax +
cmp dword ptr [edi] 7 +
jnz loc_4341B3  +
jmp loc_4341B0  +
***
mov dword ptr [esp+8] offset aRewrite_elf_pr +
mov dword ptr [esp+4] 19A1h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_410560  +
mov eax [esp+0B4h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax] 0 +
jmp loc_433144  +
***
mov eax [esp+20h] +
sub eax [esp+18h] +
test eax eax +
jle loc_434445  +
add [ebx+14h] eax +
lea edx [eax+esi] +
mov [ebx+18h] edx +
mov dword ptr [edi] 0 +
xor ebp ebp +
mov edi [esp+30h] +
jmp loc_433233  +
***
mov esi [esp+10h] +
mov ebx [esp+2Ch] +
mov [esi+0Ch] ebx +
jmp loc_433C86  +
***
mov dword ptr [esp+8Ch] 0 +
cmp eax [esp+20h] +
jz loc_4349BD  +
mov edx eax +
shl edx 5 +
cmp dword ptr [ebp+edx+10h] 0 +
jnz loc_4344A0  +
add eax 1 +
jmp loc_434471  +
***
xor ebx ebx +
jmp loc_434362  +
***
mov ebp [esp+14h] +
mov edi [esp+18h] +
jmp loc_434032  +
***
mov eax 1 +
lea edi [esp+8Ch] +
add eax eax +
mov [esp+38h] edi +
mov edi ebp +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+3Ch] 0 +
mov [esp+60h] al +
mov eax [esp+20h] +
cmp [esp+3Ch] eax +
jz loc_43499C  +
mov eax [esp+0B0h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+14h] eax +
jz loc_434681  +
mov ebp [edi] +
mov [esp+10h] eax +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+14h] 0 +
lea eax [ebp-6474E550h] +
mov [esp+30h] eax +
lea eax [ebp-1] +
mov [esp+34h] eax +
lea eax [ebp-6] +
mov [esp+40h] eax +
jmp loc_434541  +
cmp ebp 7 +
jz loc_434563  +
cmp ebp 6474E552h +
jz loc_434563  +
cmp ebp 1 +
jz loc_434563  +
mov eax [esp+10h] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+10h] eax +
jz loc_4349C4  +
mov eax [esp+10h] +
mov esi [eax+8Ch] +
mov eax [esi+8] +
mov ebx eax +
and ebx 400h +
mov [esp+2Ch] ebx +
jnz loc_43451C  +
cmp dword ptr [esp+40h] 1 +
jbe loc_43452E  +
and eax 2 +
mov [esp+18h] eax +
jnz loc_43457A  +
cmp dword ptr [esp+30h] 2 +
jbe loc_43452E  +
cmp dword ptr [esp+34h] 1 +
jbe loc_43452E  +
mov eax [esi+4] +
cmp eax 8 +
mov [esp+24h] eax +
jz loc_4345B8  +
mov ecx [esi+10h] +
mov eax [edi+8] +
mov ebx [esi+14h] +
cmp eax ecx +
ja loc_43452E  +
xor edx edx +
sub ecx eax +
mov eax ecx +
mov ecx [esi+18h] +
sbb ebx edx +
mov edx ebx +
xor ebx ebx +
add eax ecx +
mov ecx [edi+14h] +
adc edx ebx +
cmp edx 0 +
jg loc_43452E  +
jl loc_4345B8  +
cmp eax ecx +
ja loc_43452E  +
cmp dword ptr [esp+18h] 0 +
lea esi [esi+0] +
jz loc_4345EE  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jb loc_43452E  +
sub edx eax +
cmp dword ptr [esp+2Ch] 0 +
jz loc_4345E0  +
cmp dword ptr [esp+24h] 8 +
jz loc_43460C  +
mov eax [esi+18h] +
add eax edx +
cmp eax [edi+18h] +
ja loc_43452E  +
cmp dword ptr [edi] 2 +
jz loc_434615  +
mov eax [esp+14h] +
test eax eax +
cmovz eax [esp+10h] +
add dword ptr [esp+28h] 1 +
mov [esp+14h] eax +
jmp loc_43452E  +
***
xor eax eax +
cmp dword ptr [edi] 7 +
jnz loc_4345E3  +
jmp loc_4345E0  +
***
cmp dword ptr [esi+18h] 0 +
jnz loc_4345F3  +
mov eax [edi+18h] +
test eax eax +
mov [esp+2Ch] eax +
jz loc_4345F3  +
cmp dword ptr [esp+24h] 8 +
jz loc_43465A  +
mov ecx [esi+10h] +
mov eax [edi+8] +
mov ebx [esi+14h] +
cmp eax ecx +
jnb loc_43452E  +
xor edx edx +
sub ecx eax +
mov eax [edi+14h] +
sbb ebx edx +
cmp ebx 0 +
jg loc_43452E  +
jl loc_43465A  +
cmp ecx eax +
jnb loc_43452E  +
cmp dword ptr [esp+18h] 0 +
nop   +
jz loc_4345F3  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jbe loc_43452E  +
sub edx eax +
cmp [esp+2Ch] edx +
jbe loc_43452E  +
jmp loc_4345F3  +
***
mov dword ptr [esp+24h] 0 +
mov eax 2Ch +
mov [esp+4] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call sub_40E220  +
test eax eax +
mov ebp eax +
jz loc_433F02  +
mov ebx [edi] +
mov dword ptr [eax] 0 +
mov edx [edi+1Ch] +
mov esi [edi+10h] +
mov [eax+4] ebx +
mov eax [edi+4] +
mov [ebp+14h] edx +
mov [esp+2Ch] esi +
mov [ebp+0Ch] esi +
mov [ebp+8] eax +
movzx eax byte ptr [ebp+20h] +
mov dword ptr [ebp+10h] 0 +
or eax 1 +
and eax 0FFFFFFFDh +
or eax [esp+60h] +
mov edx eax +
or edx 4 +
mov [ebp+20h] dl +
lea edx [ebx-6474E551h] +
cmp edx 1 +
ja loc_434700  +
mov edx [edi+18h] +
or eax 0Ch +
mov [ebp+20h] al +
mov [ebp+18h] edx +
mov eax [edi+8] +
mov esi eax +
mov [esp+10h] eax +
xor eax eax +
test esi esi +
jnz loc_43471F  +
mov eax [esp+48h] +
mov eax [eax+28h] +
cmp [edi+14h] eax +
setnb al  +
movzx eax al +
mov edx eax +
movzx eax byte ptr [ebp+20h] +
shl edx 4 +
and eax 0FFFFFFCFh +
or eax edx +
cmp dword ptr [esp+1Ch] 0 +
mov [ebp+20h] al +
jz loc_434740  +
cmp ebx 1 +
jz loc_4349E4  +
mov eax [esp+48h] +
mov edx [eax+14h] +
xor eax eax +
cmp [esp+10h] edx +
ja loc_43476B  +
mov esi [esp+48h] +
mov ecx [esp+10h] +
add ecx [edi+14h] +
mov eax [esi+2Ch] +
imul eax [esi+30h] +
add eax edx +
cmp ecx eax +
setnb al  +
movzx eax al +
mov edx eax +
movzx eax byte ptr [ebp+20h] +
shl edx 5 +
and eax 0FFFFFFDFh +
or eax edx +
cmp ebx 1 +
mov [ebp+20h] al +
jnz loc_43478E  +
test al 20h +
mov eax [esp+1Ch] +
cmovnz eax ebx +
mov [esp+1Ch] eax +
cmp dword ptr [esp+24h] 0 +
jz loc_4349F1  +
mov eax [esp+14h] +
test eax eax +
jz loc_4349F1  +
mov esi [esp+10h] +
xor ecx ecx +
mov [esp+28h] ebp +
mov ebp eax +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+44h] 0 +
mov [esp+40h] esi +
lea esi [ebx-6474E550h] +
mov [esp+54h] esi +
lea esi [ebx-1] +
mov [esp+58h] esi +
lea esi [ebx-6] +
mov [esp+5Ch] esi +
mov [esp+18h] ebx +
mov [esp+4Ch] ecx +
jmp loc_43480A  +
cmp dword ptr [esp+18h] 7 +
jz loc_434828  +
cmp dword ptr [esp+18h] 6474E552h +
jz loc_434828  +
cmp dword ptr [esp+18h] 1 +
jz loc_434828  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jz loc_434A1A  +
mov esi [ebp+8Ch] +
mov eax [esi+8] +
mov ebx eax +
and ebx 400h +
mov [esp+50h] ebx +
jnz loc_4347E7  +
cmp dword ptr [esp+5Ch] 1 +
jbe loc_4347FF  +
and eax 2 +
mov [esp+30h] eax +
jnz loc_43483F  +
cmp dword ptr [esp+54h] 2 +
jbe loc_4347FF  +
cmp dword ptr [esp+58h] 1 +
jbe loc_4347FF  +
mov eax [esi+4] +
cmp eax 8 +
mov [esp+34h] eax +
jz loc_434876  +
mov eax [esi+10h] +
cmp [esp+10h] eax +
mov edx [esi+14h] +
ja loc_4347FF  +
mov ecx [esi+18h] +
sub eax [esp+40h] +
sbb edx [esp+44h] +
xor ebx ebx +
add eax ecx +
mov ecx [edi+14h] +
adc edx ebx +
cmp edx 0 +
jg loc_4347FF  +
jl loc_434876  +
cmp eax ecx +
ja loc_4347FF  +
cmp dword ptr [esp+30h] 0 +
jz loc_4348AD  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jb loc_4347FF  +
sub edx eax +
cmp dword ptr [esp+50h] 0 +
jz loc_43489F  +
cmp dword ptr [esp+34h] 8 +
jz loc_43498A  +
mov eax [esi+18h] +
add eax edx +
cmp eax [edi+18h] +
ja loc_4347FF  +
cmp dword ptr [esp+18h] 2 +
jz loc_43491A  +
mov ebx [esp+4Ch] +
mov edx [esp+28h] +
mov eax [ebp+3Ch] +
lea ecx [ebx+1] +
mov [edx+ebx*4+28h] eax +
mov edx [ebp+14h] +
test dl 1 +
jz loc_434907  +
mov ebx [esp+14h] +
test ebx ebx +
jz loc_434A74  +
mov eax [ebp+20h] +
cmp eax [ebx+20h] +
cmovb ebx ebp +
mov [esp+14h] ebx +
and dl 2 +
jz loc_434A69  +
mov edx [esi+10h] +
sub edx [esp+10h] +
sub eax [esp+2Ch] +
cmp eax edx +
jz loc_434907  +
mov eax [esp+28h] +
and byte ptr [eax+20h] 0FDh +
cmp [esp+24h] ecx +
jz loc_434A1A  +
mov [esp+4Ch] ecx +
jmp loc_4347FF  +
***
cmp dword ptr [esi+18h] 0 +
jnz loc_4348B4  +
mov eax [edi+18h] +
test eax eax +
mov [esp+50h] eax +
jz loc_4348B4  +
cmp dword ptr [esp+34h] 8 +
jz loc_434960  +
mov eax [esi+10h] +
cmp [esp+10h] eax +
mov edx [esi+14h] +
jnb loc_4347FF  +
sub eax [esp+40h] +
sbb edx [esp+44h] +
mov ecx [edi+14h] +
cmp edx 0 +
jg loc_4347FF  +
jl loc_434960  +
cmp eax ecx +
jnb loc_4347FF  +
cmp dword ptr [esp+30h] 0 +
jz loc_4348B4  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jbe loc_4347FF  +
sub edx eax +
cmp [esp+50h] edx +
jbe loc_4347FF  +
jmp loc_4348B4  +
***
xor eax eax +
cmp dword ptr [esp+18h] 7 +
jnz loc_4348A2  +
jmp loc_43489F  +
***
mov eax [esp+0B4h] +
mov edx [esp+8Ch] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov [eax] edx +
jmp loc_433144  +
***
xor eax eax +
jmp loc_4344A5  +
***
mov eax [esp+28h] +
mov esi eax +
mov [esp+24h] eax +
test esi esi +
mov eax 2Ch +
lea edx ds:28h[esi*4] +
cmovnz eax edx +
jmp loc_43468E  +
***
mov dword ptr [esp+1Ch] 1 +
jmp loc_43478E  +
***
movzx eax byte ptr [ebp+20h] +
and eax 32h +
cmp al 2 +
jz loc_434A55  +
mov eax [esp+24h] +
add edi 20h +
add dword ptr [esp+3Ch] 1 +
mov [ebp+24h] eax +
mov eax [esp+38h] +
mov [esp+38h] ebp +
mov [eax] ebp +
jmp loc_4344C8  +
***
mov ebp [esp+28h] +
movzx eax byte ptr [ebp+20h] +
test al 10h +
jz loc_434A59  +
mov ebx [esp+14h] +
test ebx ebx +
jz loc_434A4E  +
mov edx [ebx+1Ch] +
and eax 32h +
sub edx [edi+0Ch] +
cmp al 2 +
mov [ebp+1Ch] edx +
jnz loc_4349FC  +
mov eax [esp+14h] +
mov eax [eax+20h] +
sub eax [esp+2Ch] +
mov [ebp+10h] eax +
jmp loc_4349FC  +
***
and eax 32h +
cmp al 2 +
jnz loc_4349FC  +
xor eax eax +
jmp loc_434A45  +
***
and eax 32h +
cmp al 2 +
jnz loc_4349FC  +
cmp dword ptr [esp+14h] 0 +
jnz loc_434A3E  +
jmp loc_434A55  +
***
mov edx [esi+0Ch] +
sub edx [edi+0Ch] +
jmp loc_4348F7  +
***
mov [esp+14h] ebp +
mov eax [ebp+20h] +
jmp loc_4348E7  +
***
mov eax [esp+4] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jz loc_434A93  +
mov eax 1 +
retn   +
***
mov edx [esp+0Ch] +
mov edx [edx+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_434A8D  +
mov ecx [esp+8] +
mov edx [ecx] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_434B53  +
mov dword ptr [esp+8] 0 +
mov ecx [esp+10h] +
mov edx [ecx] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_434B44  +
mov dword ptr [esp+10h] 0 +
mov edx [esp+8] +
test edx edx +
jz loc_434A8D  +
mov ecx [esp+8] +
mov edx [ecx+28h] +
test edx edx +
jz loc_434A8D  +
cmp dword ptr [esp+10h] 0 +
jz loc_434A8D  +
cmp dword ptr [ecx+10h] offset off_47D510 +
jnz loc_434A8D  +
mov eax [eax+0A0h] +
cmp edx [eax+90Ch] +
jz loc_434B66  +
cmp edx [eax+910h] +
jz loc_434B6D  +
mov ecx [eax+934h] +
cmp edx [ecx+30h] +
jz loc_434B74  +
cmp edx [ecx+2Ch] +
jz loc_434B7B  +
mov eax [eax+208h] +
test eax eax +
jnz loc_434B2E  +
jmp loc_434B38  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_434B38  +
cmp edx [eax+38h] +
jnz loc_434B27  +
mov edx 0FFFFFF44h +
mov eax [esp+10h] +
mov [eax+28h] edx +
jmp loc_434A8D  +
***
mov ecx [edx+0A0h] +
test ecx ecx +
jnz loc_434AD2  +
jmp loc_434ACA  +
***
mov edx [edx+0A0h] +
test edx edx +
jnz loc_434ABB  +
jmp loc_434AB3  +
***
mov edx 0FFFFFF40h +
jmp loc_434B38  +
***
mov edx 0FFFFFF41h +
jmp loc_434B38  +
***
mov edx 0FFFFFF42h +
jmp loc_434B38  +
***
mov edx 0FFFFFF43h +
jmp loc_434B38  +
***
mov eax [esp+4] +
mov edx [eax+0A0h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+5] +
mov eax [edx+60h] +
xor edx edx +
div  ecx +
lea edx ds:4[eax*4] +
test eax eax +
lea ecx [edx-4] +
mov eax edx +
cmovg eax ecx +
retn   +
***
sub esp 1Ch +
mov edx [esp+20h] +
mov eax [edx+0A0h] +
mov ecx [eax+910h] +
test ecx ecx +
jz loc_434C20  +
mov edx [edx+4] +
mov eax [eax+108h] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
movzx ecx byte ptr [edx+5] +
xor edx edx +
div  ecx +
lea edx ds:4[eax*4] +
test eax eax +
lea ecx [edx-4] +
cmovle ecx edx +
mov eax ecx +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 5 +
call sub_4105E0  +
mov ecx 0FFFFFFFFh +
jmp loc_434C13  +
***
mov eax [esp+8] +
mov eax [eax+4Ch] +
lea eax ds:4[eax*4] +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov esi [esp+24h] +
mov ecx [esp+2Ch] +
mov edi [esp+28h] +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
mov edx [edx+28h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] ecx +
mov [esp+4] esi +
mov [esp] eax +
call edx  +
test eax eax +
jz loc_434CC3  +
mov eax [esi+4Ch] +
mov ebx [esi+44h] +
test eax eax +
jz loc_434CB6  +
mov ecx edi +
xor edx edx +
jmp loc_434CA3  +
mov ebx esi +
add edx 1 +
add ecx 4 +
cmp edx eax +
lea esi [ebx+10h] +
mov [ecx-4] ebx +
jnz loc_434CA1  +
lea edi [edi+eax*4] +
mov dword ptr [edi] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_434CBC  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov edx [esp+24h] +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+8] 0 +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
js loc_434D06  +
mov [ebx+7Ch] eax +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov edx [esp+24h] +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+8] 1 +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
js loc_434D49  +
mov [ebx+80h] eax +
add esp 18h +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov edx [eax+0A0h] +
mov ebx [edx+910h] +
test ebx ebx +
jz loc_434DC2  +
mov ecx [eax+64h] +
test ecx ecx +
jz loc_434DBB  +
mov edi 4 +
jmp loc_434D87  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_434DB1  +
mov ebp [ecx+8Ch] +
cmp ebx [ebp+1Ch] +
jnz loc_434D80  +
mov esi [ebp+4] +
cmp esi 4 +
jz loc_434D9F  +
cmp esi 9 +
jnz loc_434D80  +
mov eax [ecx+24h] +
xor edx edx +
mov ecx [ecx+0Ch] +
div  dword ptr [ebp+28h] +
test ecx ecx +
lea edi [edi+eax*4] +
jnz loc_434D87  +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 4 +
jmp loc_434DB3  +
***
mov dword ptr [esp] 5 +
call sub_4105E0  +
mov eax 0FFFFFFFFh +
jmp loc_434DB3  +
***
mov eax [edi+4] +
mov ebx [edi+64h] +
mov dword ptr [esp+18h] 0 +
mov eax [eax+1B0h] +
test ebx ebx +
mov eax [eax+174h] +
mov eax [eax+28h] +
mov [esp+1Ch] eax +
jnz loc_434E47  +
jmp loc_434ED0  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_434ED0  +
mov eax [edi+0A0h] +
mov edx [eax+910h] +
mov eax [ebx+8Ch] +
cmp [eax+1Ch] edx +
jnz loc_434E30  +
mov eax [eax+4] +
cmp eax 4 +
jz loc_434E5F  +
cmp eax 9 +
jnz loc_434E30  +
mov eax [esp+48h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp] edi +
mov [esp+8] eax +
mov eax [esp+1Ch] +
call eax  +
test eax eax +
jz loc_434EE6  +
mov ecx [ebx+8Ch] +
xor edx edx +
mov eax [ebx+24h] +
mov ebp [ebx+44h] +
div  dword ptr [ecx+28h] +
test eax eax +
jle loc_434EBD  +
mov esi [esp+44h] +
xor ecx ecx +
jmp loc_434EA2  +
mov ebp edx +
add ecx 1 +
add esi 4 +
cmp eax ecx +
lea edx [ebp+10h] +
mov [esi-4] ebp +
jnz loc_434EA0  +
mov ecx [esp+44h] +
lea esi [ecx+eax*4] +
mov [esp+44h] esi +
mov ebx [ebx+0Ch] +
add [esp+18h] eax +
test ebx ebx +
jnz loc_434E3B  +
lea esi [esi+0] +
mov eax [esp+44h] +
mov dword ptr [eax] 0 +
mov eax [esp+18h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_434EDE  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [esp+7Ch+arg_0] +
mov ebx [edi+0A0h] +
mov esi [ebx+91Ch] +
test esi esi +
jz loc_434F90  +
mov ecx [ebx+1B8h] +
test ecx ecx +
jz loc_434F37  +
mov eax [ebx+1B0h] +
cmp eax 0Fh +
ja loc_4350C2  +
xor ebp ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aB_gnu_version_ +
call off_47D664  +
mov [esp+7Ch+var_7C] 11h +
call sub_4105E0  +
mov eax [edi+0A0h] +
mov dword ptr [eax+244h] 0 +
mov eax [edi+0A0h] +
mov dword ptr [eax+23Ch] 0 +
test ebp ebp +
jz loc_434F82  +
mov [esp+7Ch+var_7C] ebp +
call free  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi esi +
mov eax [ebx+918h] +
test eax eax +
jz loc_434FF6  +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_434FB5  +
mov eax [ebx+1E8h] +
cmp eax 13h +
ja loc_4352D0  +
xor ebp ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aB_gnu_versio_0 +
call off_47D664  +
mov [esp+7Ch+var_7C] 11h +
call sub_4105E0  +
mov eax [edi+0A0h] +
mov dword ptr [eax+240h] 0 +
mov eax [edi+0A0h] +
mov dword ptr [eax+238h] 0 +
jmp loc_434F76  +
mov ebp [esp+7Ch+arg_4] +
test ebp ebp +
jz loc_4350B5  +
cmp esi 3 +
mov eax 3 +
lea edx [esi+1] +
cmovnb eax edx +
mov [esp+7Ch+var_74] 28h +
mov esi eax +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] edi +
call sub_40E310  +
mov [ebx+240h] eax +
mov eax [edi+0A0h] +
mov ebx [eax+240h] +
test ebx ebx +
jz loc_434F82  +
mov [eax+238h] esi +
mov eax [edi+0A0h] +
lea edx [esi+esi*4] +
mov ecx 1 +
mov eax [eax+240h] +
lea ebx [eax+edx*8-28h] +
xor edx edx +
mov eax 1 +
mov [ebx] ax +
mov [ebx+2] dx +
mov [ebx+4] si +
mov [ebx+6] cx +
mov [ebx+14h] edi +
mov [esp+7Ch+var_7C] edi +
call sub_446660  +
test eax eax +
mov [ebx+18h] eax +
jz loc_4353D0  +
mov dword ptr [ebx+1Ch] 0 +
mov [esp+7Ch+var_78] 10h +
mov [esp+7Ch+var_7C] edi +
call sub_40E220  +
test eax eax +
mov [ebx+20h] eax +
jz loc_4353D0  +
mov edx [ebx+18h] +
mov [eax+8] edx +
add esp 7Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+7Ch+var_7C] eax +
call sub_412BD0  +
test eax eax +
mov ebp eax +
jz loc_434F56  +
mov eax [ebx+1A8h] +
mov edx [ebx+1ACh] +
mov [esp+7Ch+var_70] 0 +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] edx +
call sub_411E10  +
test eax eax +
jnz loc_434F56  +
mov eax [ebx+1B0h] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_411C00  +
cmp eax [ebx+1B0h] +
jnz loc_434F56  +
mov eax [ebx+1B8h] +
mov esi [edi+0A0h] +
mov [esp+7Ch+var_74] 20h +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
call sub_40E310  +
mov [esi+244h] eax +
mov eax [edi+0A0h] +
mov ecx [eax+244h] +
test ecx ecx +
mov [esp+7Ch+var_68] ecx +
jz loc_434F5C  +
mov edx [ebx+1B0h] +
lea edx [ebp+edx-10h] +
mov [esp+7Ch+var_60] edx +
mov edx [ebx+1B8h] +
test edx edx +
jz loc_435793  +
mov [esp+7Ch+var_5C] ebp +
xor esi esi +
mov [esp+7Ch+var_58] 0 +
mov [esp+7Ch+var_54] ebp +
mov [esp+7Ch+var_64] ebx +
mov [esp+7Ch+arg_0] edi +
mov eax [esp+7Ch+var_5C] +
mov edi [esp+7Ch+var_68] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_7C] eax +
call sub_42B1A0  +
mov ecx [esp+7Ch+arg_0] +
mov eax [esp+7Ch+var_64] +
mov [edi+10h] ecx +
mov ecx [edi+4] +
mov edx [eax+1B4h] +
test ecx ecx +
jnz loc_435463  +
mov eax [esp+7Ch+var_68] +
mov dword ptr [eax+14h] offset unk_497A12 +
mov ecx [esp+7Ch+var_68] +
movzx eax word ptr [ecx+2] +
test ax ax +
jnz loc_435483  +
mov dword ptr [ecx+18h] 0 +
mov eax [esp+7Ch+var_68] +
mov ecx [esp+7Ch+var_60] +
mov edx [esp+7Ch+var_5C] +
mov ebp [eax+8] +
sub ecx edx +
mov [esp+7Ch+var_50] ecx +
cmp ebp ecx +
ja loc_4352BD  +
add ebp edx +
mov ebx [eax+18h] +
cmp word ptr [eax+2] 0 +
jz loc_4353E5  +
xor edi edi +
jmp loc_43527E  +
mov dword ptr [ebx+10h] offset unk_497A12 +
movzx eax word ptr [ebx+6] +
mov dword ptr [ebx+14h] 0 +
cmp esi eax +
cmovb esi eax +
mov eax [ebx+0Ch] +
add edi 1 +
test eax eax +
jz loc_4353DD  +
mov ecx [esp+7Ch+var_68] +
movzx edx word ptr [ecx+2] +
cmp edi edx +
jnb loc_435267  +
lea ecx [ebx+18h] +
mov [ebx+14h] ecx +
mov ecx [esp+7Ch+var_60] +
sub ecx ebp +
cmp eax ecx +
ja loc_4352BD  +
add ebp eax +
add ebx 18h +
cmp edi edx +
jnb loc_4353E5  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] ebx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_42B290  +
mov ecx [ebx+8] +
mov eax [esp+7Ch+var_64] +
test ecx ecx +
mov edx [eax+1B4h] +
jz loc_435230  +
mov eax [esp+7Ch+arg_0] +
call loc_42B5A0  +
test eax eax +
mov [ebx+10h] eax +
jnz loc_435237  +
mov ebp [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
jmp loc_434F39  +
mov [esp+7Ch+var_7C] eax +
call sub_412BD0  +
test eax eax +
mov ebp eax +
jz loc_4353D0  +
mov eax [ebx+1E0h] +
mov edx [ebx+1E4h] +
mov [esp+7Ch+var_70] 0 +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] edx +
call sub_411E10  +
test eax eax +
jnz loc_434FD4  +
mov eax [ebx+1E8h] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_411C00  +
cmp eax [ebx+1E8h] +
mov [esp+7Ch+var_5C] eax +
jnz loc_434FD4  +
mov eax [esp+7Ch+var_5C] +
lea eax [ebp+eax-14h] +
mov [esp+7Ch+var_60] eax +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_435786  +
xor edx edx +
lea eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_54] ebp +
mov [esp+7Ch+var_50] esi +
mov esi ebp +
xor ebp ebp +
mov [esp+7Ch+var_64] ebx +
mov ebx edx +
mov [esp+7Ch+var_58] 0 +
mov [esp+7Ch+var_68] eax +
jmp loc_4353A7  +
movzx eax ax +
cmp ebp eax +
cmovb ebp eax +
mov eax [esp+7Ch+var_24] +
test eax eax +
jz loc_43573F  +
mov ecx [esp+7Ch+var_60] +
sub ecx esi +
cmp eax ecx +
ja loc_4353C6  +
add esi eax +
mov eax [esp+7Ch+var_64] +
add ebx 1 +
cmp [eax+1F0h] ebx +
jbe loc_4354C3  +
mov eax [esp+7Ch+var_68] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_74] eax +
call sub_42AFE0  +
movzx eax [esp+7Ch+var_30] +
and ax 7FFFh +
jnz loc_435374  +
mov ebp [esp+7Ch+var_54] +
jmp loc_434FB7  +
xor ebp ebp +
mov eax [edi+0A0h] +
jmp loc_434FDA  +
mov eax [esp+7Ch+var_68] +
mov [eax+2] di +
mov eax [esp+7Ch+var_68] +
mov dword ptr [eax+1Ch] 0 +
mov eax [eax+0Ch] +
test eax eax +
jz loc_435435  +
mov ecx [esp+7Ch+var_64] +
add [esp+7Ch+var_58] 1 +
mov edx [ecx+1B8h] +
cmp [esp+7Ch+var_58] edx +
jnb loc_435418  +
mov edi [esp+7Ch+var_68] +
mov ecx edi +
add ecx 20h +
mov [edi+1Ch] ecx +
cmp [esp+7Ch+var_50] eax +
jb loc_4352BD  +
add [esp+7Ch+var_5C] eax +
add [esp+7Ch+var_68] 20h +
cmp [esp+7Ch+var_58] edx +
jb loc_435199  +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+var_54] +
mov eax [edi+0A0h] +
mov edx [esp+7Ch+var_58] +
mov [eax+23Ch] edx +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov ebx [edi+0A0h] +
jmp loc_434F92  +
mov eax [esp+7Ch+arg_0] +
call loc_42B5A0  +
mov edx [esp+7Ch+var_68] +
test eax eax +
mov [edx+14h] eax +
jnz loc_4351E2  +
jmp loc_4352BD  +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] 18h +
mov [esp+7Ch+var_7C] eax +
call sub_40E1C0  +
mov edx [esp+7Ch+var_68] +
test eax eax +
mov [edx+18h] eax +
jnz loc_4351FA  +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+var_54] +
mov eax [edi+0A0h] +
jmp loc_434F5C  +
mov [esp+7Ch+var_58] ebp +
mov esi [esp+7Ch+var_50] +
mov ebx eax +
mov ebp [esp+7Ch+var_54] +
mov ecx [esp+7Ch+arg_4] +
test ecx ecx +
jz loc_4354ED  +
cmp esi [esp+7Ch+var_58] +
ja loc_4354E6  +
mov esi [esp+7Ch+var_58] +
add esi 1 +
mov [esp+7Ch+var_58] esi +
mov eax [esp+7Ch+var_58] +
mov edx [edi+0A0h] +
mov [esp+7Ch+var_74] 28h +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_68] edx +
call sub_40E310  +
mov edx [esp+7Ch+var_68] +
mov [edx+240h] eax +
mov eax [edi+0A0h] +
mov edx [eax+240h] +
test edx edx +
jz loc_434FDA  +
mov ecx [esp+7Ch+var_58] +
mov [eax+238h] ecx +
mov eax [edi+0A0h] +
mov eax [eax+240h] +
mov [esp+7Ch+var_4C] eax +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_435724  +
lea eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_68] eax +
mov eax [esp+7Ch+var_5C] +
mov [esp+7Ch+var_50] ebp +
mov [esp+7Ch+var_44] 0 +
mov [esp+7Ch+var_54] ebp +
lea eax [ebp+eax-8] +
mov [esp+7Ch+var_60] eax +
mov [esp+7Ch+var_40] esi +
mov [esp+7Ch+var_5C] ebx +
mov eax [esp+7Ch+var_50] +
mov esi [esp+7Ch+var_68] +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] esi +
call sub_42AFE0  +
movzx eax [esp+7Ch+var_30] +
and ax 7FFFh +
jz loc_4353C6  +
mov edx [esp+7Ch+var_4C] +
movzx eax ax +
lea eax [eax+eax*4] +
lea eax [edx+eax*8-28h] +
mov ecx eax +
mov [esp+7Ch+var_64] eax +
mov eax [esi] +
mov [ecx] eax +
mov eax [esi+4] +
mov [ecx+4] eax +
mov eax [esi+8] +
mov [ecx+8] eax +
mov eax [esi+0Ch] +
mov [ecx+0Ch] eax +
mov eax [esi+10h] +
mov [ecx+14h] edi +
mov [ecx+10h] eax +
movzx eax word ptr [ecx+6] +
test ax ax +
jnz loc_435754  +
mov dword ptr [ecx+20h] 0 +
mov ecx [esp+7Ch+var_64] +
mov eax [esp+7Ch+var_60] +
mov edx [esp+7Ch+var_50] +
mov esi [ecx+0Ch] +
sub eax edx +
cmp esi eax +
ja loc_4353C6  +
mov eax ecx +
mov ecx [ecx+20h] +
add esi edx +
xor ebp ebp +
cmp word ptr [eax+6] 0 +
mov [esp+7Ch+var_48] ecx +
lea ebx [ecx+10h] +
jnz loc_43565F  +
jmp loc_4356AE  +
mov dword ptr [ebx-8] offset unk_497A12 +
add ebp 1 +
test eax eax +
mov dword ptr [ebx-4] 0 +
jz loc_4356A6  +
mov ecx [esp+7Ch+var_64] +
movzx edx word ptr [ecx+6] +
cmp ebp edx +
jnb loc_435648  +
mov [ebx-4] ebx +
mov ecx [esp+7Ch+var_60] +
sub ecx esi +
cmp ecx eax +
jb loc_4353C6  +
add esi eax +
add ebx 10h +
cmp ebp edx +
jnb loc_4356AE  +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+7Ch+var_7C] esi +
call eax  +
lea edx [esi+4] +
mov [ebx-10h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov ecx [ebx-10h] +
mov edx [esp+7Ch+var_5C] +
test ecx ecx +
mov edx [edx+1ECh] +
mov [ebx-0Ch] eax +
jz loc_435624  +
mov eax edi +
call loc_42B5A0  +
test eax eax +
mov [ebx-8] eax +
jz loc_4353C6  +
mov eax [ebx-0Ch] +
jmp loc_43562B  +
mov eax [esp+7Ch+var_64] +
mov [eax+6] bp +
mov eax [esp+7Ch+var_64] +
cmp word ptr [eax+6] 0 +
mov dword ptr [eax+18h] 0 +
jz loc_4356CB  +
mov ecx eax +
mov eax [eax+20h] +
mov eax [eax+8] +
mov [ecx+18h] eax +
mov eax [esp+7Ch+var_64] +
mov edx [eax+10h] +
mov dword ptr [eax+1Ch] 0 +
test edx edx +
jz loc_43571C  +
sub eax [esp+7Ch+var_4C] +
sar eax 3 +
imul eax eax +
add eax 1 +
cmp [esp+7Ch+var_58] eax +
jbe loc_4356FF  +
mov ecx [esp+7Ch+var_64] +
mov eax ecx +
add eax 28h +
mov [ecx+1Ch] eax +
mov eax [esp+7Ch+var_5C] +
add [esp+7Ch+var_44] 1 +
mov ecx [esp+7Ch+var_44] +
add [esp+7Ch+var_50] edx +
cmp [eax+1F0h] ecx +
ja loc_435581  +
mov ebp [esp+7Ch+var_54] +
mov esi [esp+7Ch+var_40] +
mov [esp+7Ch+var_7C] ebp +
call free  +
cmp [esp+7Ch+arg_4] 0 +
jz loc_4350B5  +
jmp loc_435049  +
mov [esp+7Ch+var_58] ebp +
mov esi [esp+7Ch+var_50] +
mov ebx [esp+7Ch+var_64] +
mov ebp [esp+7Ch+var_54] +
jmp loc_4354D1  +
mov [esp+7Ch+var_74] 10h +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] edi +
call sub_40E1C0  +
mov edx [esp+7Ch+var_64] +
test eax eax +
mov [edx+20h] eax +
jnz loc_4355EF  +
mov ebp [esp+7Ch+var_54] +
mov eax [edi+0A0h] +
jmp loc_434FDA  +
mov [esp+7Ch+var_58] 0 +
jmp loc_4354D1  +
mov [esp+7Ch+var_58] 0 +
xor esi esi +
jmp loc_435446  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi [esp+70h] +
mov ebp [esp+74h] +
mov dword ptr [esp+30h] 0 +
mov eax [esi+0A0h] +
mov ebx [eax+44h] +
test ebx ebx +
jz loc_4359C8  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 11h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aProgramHeader +
call fwrite  +
mov eax [esi+0A0h] +
mov eax [eax+30h] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_4359C8  +
xor edi edi +
jmp loc_435831  +
mov [esp+4] ebp +
add edi 1 +
add ebx 20h +
mov dword ptr [esp] 0Ah +
call fputc  +
cmp edi [esp+1Ch] +
jz loc_4359C8  +
mov eax [ebx] +
mov [esp+20h] eax +
call near ptr dword_429B80  +
test eax eax +
jz loc_435B26  +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a8sOff0x +
mov [esp] ebp +
call fprintf  +
mov eax [ebx+8] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_410F10  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aVaddr0x +
call fwrite  +
mov eax [ebx+0Ch] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_410F10  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aPaddr0x +
call fwrite  +
mov eax [ebx+10h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_410F10  +
mov eax [ebx+1Ch] +
mov [esp] eax +
call near ptr dword_4135E0  +
mov dword ptr [esp+4] offset aAlign2U +
mov [esp] ebp +
mov [esp+8] eax +
call fprintf  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 12h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aFilesz0x +
call fwrite  +
mov eax [ebx+14h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_410F10  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aMemsz0x +
call fwrite  +
mov eax [ebx+18h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_410F10  +
mov eax [ebx+4] +
mov dword ptr [esp+4] offset aFlagsCCC +
mov [esp] ebp +
mov edx eax +
and edx 1 +
cmp edx 1 +
mov edx eax +
sbb ecx ecx +
and edx 2 +
and ecx 0FFFFFFB5h +
add ecx 78h +
cmp edx 1 +
sbb edx edx +
and eax 4 +
and edx 0FFFFFFB6h +
add edx 77h +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFBBh +
add eax 72h +
mov [esp+10h] ecx +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call fprintf  +
mov eax [ebx+4] +
and eax 0FFFFFFF8h +
jz loc_435811  +
mov [esp+8] eax +
mov dword ptr [esp+4] offset aLx_0 +
mov [esp] ebp +
call fprintf  +
jmp loc_435811  +
***
mov dword ptr [esp+4] offset a_dynamic_1 +
mov [esp] esi +
call sub_40F280  +
test eax eax +
mov edi eax +
jz loc_435B60  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 12h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aDynamicSection +
call fwrite  +
lea eax [esp+30h] +
mov [esp+8] eax +
mov [esp+4] edi +
mov [esp] esi +
call sub_40FBE0  +
mov ebx [esp+30h] +
test eax eax +
jnz loc_435A34  +
test ebx ebx +
jz loc_435A2A  +
mov [esp] ebx +
call free  +
add esp 5Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+4] edi +
mov [esp] esi +
call sub_42F700  +
cmp eax 0FFFFFEFFh +
jz loc_435BEA  +
mov edx [esi+0A0h] +
mov ebx [esp+30h] +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+1Ch] +
mov [esp+2Ch] eax +
mov eax [esi+4] +
mov edx [eax+1B0h] +
mov eax [edx+174h] +
movzx ecx byte ptr [eax+6] +
mov eax [eax+30h] +
mov [esp+1Ch] ecx +
mov [esp+24h] eax +
mov eax [edi+24h] +
cmp ecx eax +
ja loc_435A1E  +
add eax ebx +
mov [esp+20h] eax +
sub [esp+20h] ecx +
cmp ebx [esp+20h] +
ja loc_435B4F  +
mov [esp+28h] edx +
lea edi [esp+34h] +
mov eax [esp+24h] +
mov [esp+8] edi +
mov [esp+4] ebx +
mov [esp] esi +
call eax  +
mov edx [esp+34h] +
test edx edx +
jz loc_435B4B  +
cmp edx 1Dh +
jz loc_436178  +
ja loc_435BF3  +
cmp edx 0Eh +
jz loc_43616E  +
nop   +
lea esi [esi+0] +
ja loc_435C50  +
cmp edx 7 +
jz loc_4361B4  +
nop   +
ja loc_435E6E  +
cmp edx 3 +
jz loc_4361AA  +
nop   +
jbe loc_436118  +
cmp edx 5 +
mov eax offset aStrtab +
jz loc_435E94  +
mov eax offset aHash +
mov edx offset aSymtab +
cmova eax edx +
jmp loc_435E94  +
mov eax [esp+20h] +
mov dword ptr [esp+4] offset a0xLx +
mov [esp+8] eax +
lea eax [esp+3Ch] +
mov [esp] eax +
call sprintf  +
lea eax [esp+3Ch] +
jmp loc_435844  +
***
mov ebx [esp+30h] +
mov [esp] ebx +
call free  +
mov dword ptr [esp+30h] 0 +
nop   +
mov eax [esi+0A0h] +
mov edx [eax+918h] +
test edx edx +
jz loc_435B7A  +
mov edi [eax+240h] +
test edi edi +
jz loc_435BB1  +
mov ebx [eax+91Ch] +
test ebx ebx +
jnz loc_435BA7  +
test edx edx +
jnz loc_435D85  +
mov eax [eax+91Ch] +
test eax eax +
jnz loc_435CDD  +
add esp 5Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [eax+244h] +
test ecx ecx +
jnz loc_435B84  +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
call sub_434F00  +
test eax eax +
jz loc_435A2A  +
mov eax [esi+0A0h] +
mov edx [eax+918h] +
jmp loc_435B84  +
***
mov edx [esp+2Ch] +
mov eax esi +
call loc_42B5A0  +
test eax eax +
jnz loc_436099  +
mov ebx [esp+30h] +
jmp loc_435A1E  +
***
cmp edx 6FFFFEFCh +
jz loc_436182  +
ja loc_435C96  +
cmp edx 6FFFFDFBh +
jz loc_4361A0  +
jbe loc_435F50  +
cmp edx 6FFFFDFFh +
jz loc_436196  +
ja loc_435FE6  +
cmp edx 6FFFFDFDh +
mov eax offset aPosflag_1 +
jz loc_435E94  +
mov eax offset aFeature +
mov edx offset aSyminsz +
cmova eax edx +
jmp loc_435E94  +
cmp edx 15h +
jz loc_4361C8  +
jbe loc_435F95  +
cmp edx 19h +
jz loc_4361BE  +
nop   +
lea esi [esi+0] +
ja loc_435FC6  +
cmp edx 17h +
mov eax offset aJmprel +
jz loc_435E94  +
mov eax offset aTextrel +
mov edx offset aBind_now +
cmova eax edx +
jmp loc_435E94  +
cmp edx 6FFFFFFBh +
jz loc_4361F0  +
jbe loc_435F0C  +
cmp edx 6FFFFFFFh +
jz loc_4361E6  +
ja loc_43604F  +
cmp edx 6FFFFFFDh +
mov eax offset aVerdefnum +
jz loc_435E94  +
mov eax offset aVerdef +
mov ecx offset aVerneed +
cmova eax ecx +
jmp loc_435E94  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 15h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aVersionReferen +
call fwrite  +
mov eax [esi+0A0h] +
mov edi [eax+244h] +
test edi edi +
jz loc_435B9A  +
mov esi offset aCorrupt +
mov eax [edi+14h] +
mov dword ptr [esp+4] offset aRequiredFromS +
mov [esp] ebp +
test eax eax +
cmovz eax esi +
mov [esp+8] eax +
call fprintf  +
mov ebx [edi+18h] +
test ebx ebx +
jz loc_435D79  +
lea esi [esi+0] +
mov eax [ebx+10h] +
mov edx [ebx] +
test eax eax +
cmovz eax esi +
mov [esp+14h] eax +
movzx eax word ptr [ebx+6] +
mov [esp+10h] eax +
movzx eax word ptr [ebx+4] +
mov [esp+8] edx +
mov dword ptr [esp+4] offset a0x8_8lx0x2_2x2 +
mov [esp] ebp +
mov [esp+0Ch] eax +
call fprintf  +
mov ebx [ebx+14h] +
test ebx ebx +
jnz loc_435D40  +
mov edi [edi+1Ch] +
test edi edi +
jnz loc_435D16  +
jmp loc_435B9A  +
***
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 16h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aVersionDefinit +
call fwrite  +
mov eax [esi+0A0h] +
mov ebx [eax+240h] +
test ebx ebx +
jz loc_435B8C  +
lea esi [esi+0] +
mov eax [ebx+18h] +
mov ecx offset aCorrupt +
mov edx [ebx+8] +
test eax eax +
cmovz eax ecx +
mov [esp+14h] eax +
mov [esp+10h] edx +
movzx eax word ptr [ebx+2] +
mov [esp+0Ch] eax +
movzx eax word ptr [ebx+4] +
mov dword ptr [esp+4] offset aD0x2_2x0x8_8lx +
mov [esp] ebp +
mov [esp+8] eax +
call fprintf  +
mov eax [ebx+20h] +
test eax eax +
jz loc_435E58  +
mov edx [eax+0Ch] +
test edx edx +
jz loc_435E58  +
mov [esp+4] ebp +
mov dword ptr [esp] 9 +
call fputc  +
mov eax [ebx+20h] +
mov edi [eax+0Ch] +
test edi edi +
jz loc_435E48  +
mov eax [edi+8] +
mov ecx offset aCorrupt +
mov dword ptr [esp+4] offset aS_14 +
mov [esp] ebp +
test eax eax +
cmovz eax ecx +
mov [esp+8] eax +
call fprintf  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_435E20  +
mov [esp+4] ebp +
mov dword ptr [esp] 0Ah +
call fputc  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jnz loc_435DC0  +
mov eax [esi+0A0h] +
jmp loc_435B8C  +
***
cmp edx 0Ah +
jz loc_4361DC  +
jbe loc_4360F7  +
cmp edx 0Ch +
mov eax offset aInit_0 +
jz loc_435E94  +
mov eax offset aSyment +
mov edx offset aFini +
cmova eax edx +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a20s +
mov [esp] ebp +
call fprintf  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 2 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a0x +
call fwrite  +
mov eax [esp+38h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_410F10  +
mov [esp+4] ebp +
mov dword ptr [esp] 0Ah +
call fputc  +
add ebx [esp+1Ch] +
cmp ebx [esp+20h] +
ja loc_435B4B  +
mov eax [esi+4] +
mov eax [eax+1B0h] +
mov [esp+28h] eax +
jmp loc_435AA3  +
***
cmp edx 6FFFFEFFh +
jz loc_436164  +
jbe loc_4360D0  +
cmp edx 6FFFFFF9h +
mov eax offset aRelacount +
jz loc_435E94  +
mov eax offset aRelcount +
ja loc_435E94  +
cmp edx 6FFFFFF0h +
mov eax offset aVersym +
jz loc_435E94  +
jmp loc_436009  +
cmp edx 21h +
jz loc_43615A  +
lea esi [esi+0] +
jbe loc_4360AA  +
cmp edx 6FFFFDF9h +
mov eax offset aPltpadsz +
jz loc_435E94  +
mov eax offset aMoveent +
ja loc_435E94  +
cmp edx 6FFFFDF8h +
mov eax offset aChecksum +
jz loc_435E94  +
jmp loc_436009  +
cmp edx 11h +
jz loc_43618C  +
nop   +
jbe loc_436134  +
cmp edx 13h +
mov eax offset aRelent +
jz loc_435E94  +
mov eax offset aRelsz +
mov edx offset aPltrel +
cmova eax edx +
jmp loc_435E94  +
***
cmp edx 1Bh +
mov eax offset aInit_arraysz +
jz loc_435E94  +
mov eax offset aFini_array +
mov edx offset aFini_arraysz +
cmova eax edx +
jmp loc_435E94  +
***
cmp edx 6FFFFEFAh +
jz loc_436150  +
ja loc_4361D2  +
cmp edx 6FFFFEF5h +
mov eax offset aGnu_hash +
jz loc_435E94  +
mov eax [esp+28h] +
mov ecx [eax+0E8h] +
mov eax offset unk_497A12 +
test ecx ecx +
jz loc_436021  +
mov [esp] edx +
call ecx  +
cmp byte ptr [eax] 0 +
jnz loc_435E94  +
mov eax [esp+34h] +
mov dword ptr [esp+4] offset a0xLx +
mov [esp+8] eax +
lea eax [esp+3Ch] +
mov [esp] eax +
call sprintf  +
lea eax [esp+3Ch] +
jmp loc_435E94  +
***
cmp edx 7FFFFFFEh +
jz loc_436204  +
cmp edx 7FFFFFFFh +
jz loc_4361FA  +
cmp edx 7FFFFFFDh +
jnz loc_436009  +
mov eax offset aAuxiliary +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a20s +
mov [esp] ebp +
call fprintf  +
mov ecx [esp+38h] +
mov eax offset unk_497A12 +
test ecx ecx +
jnz loc_435BD7  +
mov [esp+4] ebp +
mov [esp] eax +
call fputs  +
jmp loc_435EDC  +
***
cmp edx 1Eh +
mov eax offset aFlags +
jz loc_435E94  +
cmp edx 20h +
mov eax offset aPreinit_array +
jz loc_435E94  +
jmp loc_436009  +
***
cmp edx 6FFFFEFDh +
mov eax offset aPltpad +
jz loc_435E94  +
cmp edx 6FFFFEFEh +
mov eax offset aMovetab +
jz loc_435E94  +
jmp loc_436009  +
***
cmp edx 8 +
mov eax offset aRelasz +
jz loc_435E94  +
cmp edx 9 +
mov eax offset aRelaent +
jz loc_435E94  +
jmp loc_436009  +
***
cmp edx 1 +
jz loc_43620E  +
cmp edx 2 +
mov eax offset aPltrelsz +
jz loc_435E94  +
jmp loc_436009  +
***
cmp edx 0Fh +
jz loc_436218  +
cmp edx 10h +
mov eax offset aSymbolic +
jz loc_435E94  +
jmp loc_436009  +
***
mov eax offset aConfig +
jmp loc_436074  +
***
mov eax offset aPreinit_arrays +
jmp loc_435E94  +
***
mov eax offset aSyminfo +
jmp loc_435E94  +
***
mov eax offset aSoname +
jmp loc_436074  +
***
mov eax offset aRunpath +
jmp loc_436074  +
***
mov eax offset aAudit +
jmp loc_436074  +
***
mov eax offset aRel +
jmp loc_435E94  +
***
mov eax offset aSyminent +
jmp loc_435E94  +
***
mov eax offset aMovesz +
jmp loc_435E94  +
***
mov eax offset aPltgot +
jmp loc_435E94  +
***
mov eax offset aRela +
jmp loc_435E94  +
***
mov eax offset aInit_array +
jmp loc_435E94  +
***
mov eax offset aDebug +
jmp loc_435E94  +
***
mov eax offset aDepaudit +
jmp loc_436074  +
***
mov eax offset aStrsz +
jmp loc_435E94  +
***
mov eax offset aVerneednum +
jmp loc_435E94  +
***
mov eax offset aFlags_1 +
jmp loc_435E94  +
***
mov eax offset aFilter +
jmp loc_436074  +
***
mov eax offset aUsed +
jmp loc_435E94  +
***
mov eax offset aNeeded +
jmp loc_436074  +
***
mov eax offset aRpath +
jmp loc_436074  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 34h +
mov [esp] ebx +
call sub_40E220  +
test eax eax +
jz loc_43624E  +
mov [eax] ebx +
add esp 18h +
pop ebx  +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_41DF10  +
***
push esi  +
push ebx  +
mov edx [esp+10h] +
movzx ecx byte ptr [edx] +
cmp cl 2Eh +
jz loc_4362F3  +
cmp cl 5Fh +
jz loc_4362E8  +
xor eax eax +
cmp cl 4Ch +
jnz loc_4362F0  +
movzx ecx byte ptr [edx+1] +
test ds:byte_49F240[ecx+ecx] 4 +
jz loc_4362F0  +
lea esi [edx+2] +
movzx edx byte ptr [edx+2] +
test dl dl +
jz loc_4362F0  +
mov ecx esi +
jmp loc_4362CB  +
test ds:byte_49F240[edx+edx] 4 +
jz loc_4362EE  +
add ecx 1 +
movzx edx byte ptr [ecx] +
test dl dl +
jz loc_4362F0  +
lea ebx [edx-1] +
cmp bl 1 +
ja loc_4362B7  +
cmp dl 1 +
mov eax 1 +
jnz loc_4362B7  +
cmp ecx esi +
jnz loc_4362B7  +
mov eax 1 +
jmp loc_4362F0  +
cmp byte ptr [edx+1] 2Eh +
jz loc_436306  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
movzx eax byte ptr [edx+1] +
cmp al 4Ch +
jz loc_4362E1  +
cmp al 2Eh +
setz al  +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
cmp byte ptr [edx+2] 4Ch +
jnz loc_4362EE  +
cmp byte ptr [edx+3] 5Fh +
jnz loc_4362EE  +
jmp loc_4362E1  +
***
sub esp 1Ch +
mov dword ptr [esp+8] offset a_bfd_elf_get_l +
mov dword ptr [esp+4] 1FE5h +
mov dword ptr [esp] offset a____Binutil_10 +
call sub_410560  +
nop   +
push ebx  +
mov edx [esp+8] +
mov eax [esp+0Ch] +
mov ebx [esp+10h] +
mov ecx [edx+4] +
mov ecx [ecx+1B0h] +
mov ecx [ecx] +
cmp ecx eax +
jz loc_436364  +
test eax eax +
jz loc_436364  +
test ecx ecx +
jnz loc_436376  +
mov [esp+10h] ebx +
mov [esp+0Ch] eax +
mov [esp+8] edx +
pop ebx  +
jmp sub_410250  +
***
xor eax eax +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp [esp+60h] +
mov edi [esp+64h] +
mov esi [esp+70h] +
mov ebx [esp+74h] +
mov eax [ebp+0A0h] +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+24h] offset off_49B3C0 +
mov [esp+18h] ebx +
add eax 230h +
mov [esp+2Ch] eax +
mov eax [esp+7Ch] +
mov [esp+14h] esi +
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
mov [esp+20h] eax +
mov eax [esp+78h] +
mov [esp] ebp +
mov [esp+1Ch] eax +
mov eax [esp+6Ch] +
mov [esp+10h] eax +
mov eax [esp+68h] +
mov [esp+0Ch] eax +
call sub_454730  +
test eax eax +
jz loc_436410  +
mov ecx [ebx] +
test ecx ecx +
jz loc_4364D2  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+78h] +
mov [esp+14h] ebx +
mov [esp+10h] esi +
mov [esp+4] edi +
mov [esp+18h] eax +
mov eax [esp+6Ch] +
mov [esp] ebp +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp+8] eax +
call sub_4572F0  +
test eax eax +
jnz loc_4363F6  +
mov eax [ebp+0A0h] +
mov [esp+18h] ebx +
mov [esp+14h] esi +
mov [esp+4] edi +
add eax 228h +
mov [esp+20h] eax +
mov eax [esp+78h] +
mov [esp] ebp +
mov [esp+1Ch] eax +
lea eax [esp+3Ch] +
mov [esp+10h] eax +
mov eax [esp+6Ch] +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp+8] eax +
call sub_41E060  +
test eax eax +
jz loc_436530  +
mov ecx [esp+3Ch] +
test ecx ecx +
jnz loc_436510  +
test edi edi +
jz loc_436530  +
mov eax [esp+6Ch] +
mov [esp+14h] ebx +
mov [esp+10h] esi +
mov [esp+4] edi +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp] ebp +
mov [esp+8] eax +
call sub_454520  +
test eax eax +
jz loc_436530  +
mov eax [esp+78h] +
mov dword ptr [eax] 0 +
jmp loc_436400  +
***
mov edx [esi] +
xor eax eax +
mov [esp+14h] ebx +
mov [esp+4] edi +
mov [esp] ebp +
test edx edx +
cmovz eax esi +
mov [esp+10h] eax +
mov eax [esp+6Ch] +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp+8] eax +
call sub_454520  +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [ebx] +
test edx edx +
jnz loc_436400  +
mov eax [esp+78h] +
mov eax [eax] +
test eax eax +
jz loc_436493  +
jmp loc_436400  +
***
xor eax eax +
jmp loc_436405  +
***
sub esp 3Ch +
mov eax [esp+40h] +
mov ecx [eax+0A0h] +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+24h] offset off_49B3C0 +
mov dword ptr [esp+20h] 0 +
lea edx [ecx+230h] +
mov [esp+2Ch] edx +
mov edx [esp+50h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+1Ch] edx +
mov edx [esp+4Ch] +
mov [esp] eax +
mov [esp+14h] edx +
mov edx [esp+48h] +
mov [esp+8] edx +
mov edx [esp+44h] +
mov [esp+4] edx +
call sub_454730  +
add esp 3Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+30h] +
mov ecx [eax+0A0h] +
mov [esp] eax +
lea edx [ecx+230h] +
mov [esp+10h] edx +
mov edx [esp+3Ch] +
mov [esp+0Ch] edx +
mov edx [esp+38h] +
mov [esp+8] edx +
mov edx [esp+34h] +
mov [esp+4] edx +
call sub_453C90  +
add esp 2Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0Ch +
mov ebx [esp+20h] +
mov edx [esp+24h] +
mov eax [ebx+4] +
movzx ecx byte ptr [edx] +
mov eax [eax+1B0h] +
and ecx 3 +
cmp cl 2 +
mov edi [eax+174h] +
movzx esi byte ptr [edi] +
mov eax esi +
movzx eax al +
jz loc_43664F  +
mov eax [ebx+0A0h] +
mov ebp [eax+934h] +
mov eax [ebp+1Ch] +
cmp eax 0FFFFFFFFh +
jz loc_436657  +
mov edx esi +
movzx esi dl +
mov [ebp+1Ch] eax +
add eax esi +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [ebp+0] +
test ecx ecx +
jz loc_436670  +
movzx edi byte ptr [edi+1] +
xor eax eax +
mov ecx [ecx] +
add eax edi +
test ecx ecx +
jnz loc_436664  +
test eax eax +
jnz loc_436645  +
mov eax ebx +
call sub_429E70  +
mov edx [ebx+0A0h] +
mov ebp [edx+934h] +
jmp loc_436645  +
***
add esi eax +
adc edi edx +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] esi +
mov [esp+8] edi +
mov [esp] ebx +
call sub_411E10  +
test eax eax +
jz loc_436782  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+44h] +
add esi ebp +
mov [esp] esi +
mov [esp+8] eax +
mov eax [esp+38h] +
mov [esp+4] eax +
call memcpy  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_42F7D0  +
test eax eax +
jnz loc_4366AD  +
jmp loc_4366F6  +
***
mov eax [esp+44h] +
mov [esp+8] ebx +
mov [esp+4] eax +
mov eax [esp+38h] +
mov [esp] eax +
call sub_411CB0  +
cmp [esp+44h] eax +
setz al  +
add esp 1Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
mov eax [ebx] +
mov ecx [esi+4] +
mov eax [eax] +
mov eax [eax] +
cmp [eax+4] ecx +
jz loc_436968  +
mov eax [ebx+0Ch] +
mov edx [eax+10h] +
mov ecx [eax+0Ch] +
test edx edx +
lea edx [ecx-8] +
jz loc_436830  +
cmp edx 38h +
ja loc_436858  +
jmp ds:off_4987EC[edx*4]  +
cmp edx 38h +
ja loc_436858  +
jmp ds:off_4988D0[edx*4]  +
mov eax 6 +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] esi +
call sub_4234D0  +
test eax eax +
jnz loc_4368B5  +
mov eax [ebx+0Ch] +
mov eax [eax+20h] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] offset aBUnsupportedRe +
mov [esp+14h+var_C] eax +
call off_47D664  +
mov [esp+14h+var_14] 11h +
call sub_4105E0  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov eax 0Ch +
lea esi [esi+0] +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] esi +
call sub_4234D0  +
mov ecx [ebx+0Ch] +
mov edx [eax+30h] +
cmp [ecx+30h] edx +
jz loc_4368B5  +
test edx edx +
mov edx [ebx+4] +
jz loc_436960  +
add [ebx+8] edx +
mov [ebx+0Ch] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov eax 0Dh +
jmp loc_436890  +
mov eax 1 +
jmp loc_436845  +
mov eax 2 +
jmp loc_436845  +
mov eax 3 +
jmp loc_436845  +
mov eax 5 +
jmp loc_436845  +
mov eax 7 +
jmp loc_436845  +
mov eax 8 +
jmp loc_436890  +
mov eax 9 +
jmp loc_436890  +
mov eax 0Ah +
jmp loc_436890  +
mov eax 0Bh +
jmp loc_436890  +
sub [ebx+8] edx +
jmp loc_4368B5  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
movzx eax byte ptr [ebx+28h] +
mov esi [ebx+0A0h] +
and eax 7 +
cmp al 1 +
jz loc_4369A8  +
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_422520  +
***
test esi esi +
jz loc_43699A  +
mov eax [esi+934h] +
test eax eax +
jz loc_4369C5  +
mov eax [eax+4] +
test eax eax +
jz loc_4369C5  +
mov [esp] eax +
call sub_455940  +
add esi 230h +
mov [esp+4] esi +
mov [esp] ebx +
call sub_453CE0  +
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_422520  +
***
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 9Ch +
mov ebx [esp+9Ch+arg_0] +
mov esi [esp+9Ch+arg_C] +
mov edi [esp+9Ch+arg_10] +
mov eax [ebx+0A0h] +
mov edx [eax+930h] +
mov eax [edx+8] +
test eax eax +
jnz loc_436A35  +
mov eax [edx+4] +
mov [esp+9Ch+var_90] eax +
mov eax [esp+9Ch+arg_4] +
lea ebp [esp+9Ch+var_70] +
mov [esp+9Ch+var_98] offset aSD_0 +
mov [esp+9Ch+var_9C] ebp +
mov [esp+9Ch+var_94] eax +
call sprintf  +
mov eax ebp +
mov ecx [eax] +
add eax 4 +
lea edx [ecx-1010101h] +
not ecx  +
and edx ecx +
and edx 80808080h +
jz loc_436A5A  +
mov ecx edx +
shr ecx 10h +
test edx 8080h +
cmovz edx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add dl dl +
sbb eax 3 +
sub eax ebp +
lea ecx [eax+1] +
mov [esp+9Ch+var_98] ecx +
mov [esp+9Ch+var_9C] ebx +
mov [esp+9Ch+var_80] ecx +
call sub_40E140  +
mov ecx [esp+9Ch+var_80] +
test eax eax +
jz loc_436B10  +
mov [esp+9Ch+var_94] ecx +
mov [esp+9Ch+var_98] ebp +
mov [esp+9Ch+var_9C] eax +
mov [esp+9Ch+var_80] eax +
call memcpy  +
mov edx [esp+9Ch+var_80] +
mov [esp+9Ch+var_94] 100h +
mov [esp+9Ch+var_9C] ebx +
mov [esp+9Ch+var_98] edx +
call sub_40F660  +
test eax eax +
jz loc_436B10  +
mov edx [esp+9Ch+arg_8] +
mov ecx eax +
mov [eax+50h] esi +
mov [eax+54h] edi +
mov dword ptr [eax+40h] 2 +
mov [eax+24h] edx +
mov edx [esp+9Ch+arg_4] +
mov eax ebx +
call sub_42A630  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 9Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 9Ch +
mov ebx [esp+9Ch+arg_4] +
mov esi [esp+9Ch+arg_0] +
mov eax [ebx+8] +
cmp eax 8 +
jz loc_436BF0  +
jbe loc_436BA8  +
cmp eax 9 +
jz loc_436B80  +
cmp eax 0Ah +
nop   +
jnz loc_436BE0  +
mov eax dword_47DA20 +
lea ecx [ebx+14h] +
lea edx [ebx+4] +
mov [esp+9Ch+var_98] offset a_reg2 +
mov [esp+9Ch+var_9C] eax +
mov eax esi +
call sub_42A6A0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax dword_47DA20 +
lea ecx [ebx+14h] +
lea edx [ebx+4] +
mov [esp+9Ch+var_98] offset a_reg +
mov [esp+9Ch+var_9C] eax +
mov eax esi +
call sub_42A6A0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 7 +
jnz loc_436BE0  +
mov edi [ebx+14h] +
mov eax [ebx+4] +
mov [esp+9Ch+var_9C] esi +
mov [esp+9Ch+var_8C] 0 +
mov [esp+9Ch+var_90] edi +
mov [esp+9Ch+var_94] eax +
mov [esp+9Ch+var_98] offset a_qnx_core_info +
call sub_436A00  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 9Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+0A0h] +
mov edi [ebx+10h] +
mov ebp [eax+930h] +
mov eax [esi+4] +
mov eax [eax+28h] +
mov [esp+9Ch+var_9C] edi +
call eax  +
lea edx [edi+4] +
mov [ebp+4] eax +
mov eax [esi+4] +
mov eax [eax+28h] +
mov [esp+9Ch+var_9C] edx +
call eax  +
lea edx [edi+8] +
add edi 0Eh +
mov dword_47DA20 eax +
mov eax [esi+4] +
mov eax [eax+28h] +
mov [esp+9Ch+var_9C] edx +
call eax  +
mov ebp eax +
mov eax [esi+4] +
mov eax [eax+34h] +
mov [esp+9Ch+var_9C] edi +
call eax  +
test ax ax +
jle loc_436D30  +
mov edx [esi+0A0h] +
cwde   +
mov edx [edx+930h] +
mov [edx] eax +
mov eax dword_47DA20 +
mov [edx+8] eax +
and ebp 80h +
jz loc_436C75  +
mov edx [esi+0A0h] +
mov edx [edx+930h] +
mov [edx+8] eax +
lea edi [esp+9Ch+var_70] +
mov [esp+9Ch+var_94] eax +
mov [esp+9Ch+var_98] offset a_qnx_core_stat +
mov [esp+9Ch+var_9C] edi +
call sprintf  +
mov edx edi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_436C8F  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx edi +
add edx 1 +
mov [esp+9Ch+var_98] edx +
mov [esp+9Ch+var_9C] esi +
call sub_40E140  +
test eax eax +
mov ebp eax +
jz loc_436D40  +
mov [esp+9Ch+var_98] edi +
mov [esp+9Ch+var_9C] eax +
call strcpy  +
mov [esp+9Ch+var_94] 100h +
mov [esp+9Ch+var_98] ebp +
mov [esp+9Ch+var_9C] esi +
call sub_40F660  +
test eax eax +
jz loc_436D40  +
mov edx [ebx+4] +
mov ecx eax +
mov edi [ebx+14h] +
mov dword ptr [eax+54h] 0 +
mov dword ptr [eax+40h] 2 +
mov [eax+24h] edx +
mov edx offset a_qnx_core_st_0 +
mov [eax+50h] edi +
mov eax esi +
call sub_42A630  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax dword_47DA20 +
jmp loc_436C5E  +
xor eax eax +
jmp loc_436B73  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_4] +
mov eax [esp+4Ch+arg_0] +
mov edx [ebx+8] +
mov eax [eax+4] +
cmp edx 304h +
mov ecx [eax+1B0h] +
jz loc_437650  +
jbe loc_436E18  +
cmp edx 400h +
jz loc_437171  +
ja loc_436EA2  +
cmp edx 307h +
jz loc_437375  +
nop   +
lea esi [esi+0] +
jbe loc_437020  +
cmp edx 309h +
jz loc_437550  +
jb loc_437478  +
cmp edx 30Ah +
jnz loc_436F31  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390VxrsHi +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
cmp edx 100h +
jz loc_4376A4  +
jbe loc_436F07  +
cmp edx 300h +
jz loc_4373D0  +
jbe loc_436FA8  +
cmp edx 302h +
jz loc_4375A4  +
ja loc_437244  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Timer +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
cmp edx 403h +
jz loc_437424  +
nop   +
jbe loc_436F40  +
cmp edx 46E62B7Fh +
jz loc_4375F8  +
cmp edx 53494749h +
jz loc_437344  +
cmp edx 46494C45h +
jnz loc_436F31  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_note_linuxcor +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
cmp edx 3 +
jz loc_437531  +
jbe loc_437085  +
cmp edx 0Dh +
jz loc_437531  +
cmp edx 12h +
jz loc_4370D0  +
cmp edx 6 +
jz loc_4374D0  +
mov ebp 1 +
jmp loc_4370C3  +
cmp edx 401h +
jz loc_4371F0  +
cmp edx 402h +
jnz loc_436F31  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regAarchHwBre +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
cmp edx 102h +
jz loc_4372F0  +
cmp edx 202h +
jnz loc_436F31  +
mov eax [ebx] +
cmp eax 6 +
jz loc_4376F8  +
cmp eax 8 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aFreebsd +
mov ecx 8 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regXstate +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
cmp edx 305h +
jz loc_437298  +
cmp edx 306h +
jnz loc_436F31  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390LastBr +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
cmp edx 1 +
jz loc_4371C5  +
cmp edx 2 +
jnz loc_436F31  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_reg2 +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebx+4] 2D7h +
jbe loc_436F31  +
mov esi [ebx+0Ch] +
mov edi offset aWin32 +
mov ecx 5 +
cmps   +
jnz loc_436F31  +
mov edx [ebx+10h] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
cmp eax 2 +
jz loc_4377C5  +
cmp eax 3 +
jz loc_43771F  +
cmp eax 1 +
jnz loc_436F31  +
mov eax [esp+4Ch+arg_0] +
mov ebp 1 +
mov edi [ebx+10h] +
mov eax [eax+0A0h] +
lea edx [edi+8] +
mov esi [eax+930h] +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov edx [ebx+10h] +
add edx 0Ch +
mov [esi+4] eax +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+0A0h] +
mov esi [eax+930h] +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov [esi] eax +
jmp loc_4370C3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regArmVfp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
mov eax [ecx+0FCh] +
mov ebp 1 +
test eax eax +
jz loc_4370C3  +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] edi +
call eax  +
jmp loc_4370C3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regAarchTls +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Todpre +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Prefix +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regPpcVsx +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_note_linuxc_0 +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390System +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390HighGp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov esi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regAarchHwWat +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] esi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Tdb +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
mov eax [esp+4Ch+arg_0] +
xor ebp ebp +
mov [esp+4Ch+var_44] 100h +
mov [esp+4Ch+var_48] offset a_auxv +
mov [esp+4Ch+var_4C] eax +
call sub_40F660  +
test eax eax +
mov esi eax +
jz loc_4370C3  +
mov eax [ebx+4] +
mov bp 1 +
mov [esi+24h] eax +
mov eax [ebx+14h] +
mov dword ptr [esi+54h] 0 +
mov [esi+50h] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_410AC0  +
test eax eax +
lea edx [eax+1Fh] +
cmovs eax edx +
sar eax 5 +
add eax 1 +
mov [esi+40h] eax +
jmp loc_4370C3  +
mov eax [ecx+100h] +
mov ebp 1 +
test eax eax +
jnz loc_4371D8  +
jmp loc_4370C3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390VxrsLo +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Todcmp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regXfp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Ctrs +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_4370C3  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regPpcVmx +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_436A00  +
mov ebp eax +
jmp loc_4370C3  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
mov ebp 1 +
cmps   +
setnbe dl  +
setb al  +
cmp dl al +
jnz loc_4370C3  +
jmp loc_436FEE  +
mov eax [esp+4Ch+arg_0] +
lea esi [esp+4Ch+var_2A] +
mov edi [ebx+10h] +
mov eax [eax+4] +
lea edx [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov [esp+4Ch+var_48] offset a_module08lx +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
lea ebp [eax+1] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] eax +
call sub_40E140  +
test eax eax +
mov edi eax +
jz loc_43789F  +
mov [esp+4Ch+var_44] ebp +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] eax +
call memcpy  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] 100h +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] eax +
call sub_40F660  +
test eax eax +
jz loc_43789F  +
mov edx [ebx+4] +
mov ebp 1 +
mov esi [ebx+14h] +
mov dword ptr [eax+54h] 0 +
mov dword ptr [eax+40h] 2 +
mov [eax+24h] edx +
mov [eax+50h] esi +
jmp loc_4370C3  +
mov eax [esp+4Ch+arg_0] +
mov esi [ebx+10h] +
mov eax [eax+4] +
lea edx [esi+8] +
lea esi [esp+4Ch+var_2A] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov [esp+4Ch+var_48] offset a_regLd +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
lea ebp [eax+1] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] eax +
call sub_40E140  +
test eax eax +
mov edi eax +
jz loc_43789F  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_44] ebp +
mov [esp+4Ch+var_4C] eax +
call memcpy  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] 100h +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] eax +
call sub_40F660  +
test eax eax +
mov esi eax +
jz loc_43789F  +
mov dword ptr [eax+24h] 2CCh +
mov eax [ebx+14h] +
mov edx [ebx+10h] +
mov dword ptr [esi+54h] 0 +
mov dword ptr [esi+40h] 2 +
add eax 0Ch +
mov [esi+50h] eax +
mov eax [esp+4Ch+arg_0] +
add edx 8 +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
test eax eax +
jz loc_436F31  +
mov eax [esp+4Ch+arg_0] +
mov ecx esi +
mov edx offset a_reg +
call sub_42A630  +
test eax eax +
setnz al  +
movzx eax al +
mov ebp eax +
jmp loc_4370C3  +
xor ebp ebp +
jmp loc_4370C3  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_8] ebx +
call memchr  +
mov edx eax +
sub edx edi +
test eax eax +
cmovnz ebx edx +
lea eax [ebx+1] +
mov [esp+10h+var_C] eax +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call sub_40E140  +
test eax eax +
mov esi eax +
jz loc_437908  +
mov [esp+10h+var_8] ebx +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] eax +
call memcpy  +
mov byte ptr [esi+ebx] 0 +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_437920  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_0] +
mov edx [ebx+8] +
cmp edx 0Ah +
jz loc_437A18  +
cmp edx 14h +
jz loc_437A90  +
cmp edx 15h +
jz loc_437AC0  +
cmp edx 16h +
jz loc_437AF0  +
cmp edx 0Bh +
jz loc_4379C0  +
cmp edx 17h +
mov edi 1 +
jz loc_437970  +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_24] 100h +
mov [esp+2Ch+var_28] offset a_wcookie +
mov [esp+2Ch+var_2C] esi +
call sub_40F660  +
test eax eax +
mov ebp eax +
jz loc_437B20  +
mov eax [ebx+4] +
mov [ebp+24h] eax +
mov eax [ebx+14h] +
mov dword ptr [ebp+54h] 0 +
mov [ebp+50h] eax +
mov [esp+2Ch+var_2C] esi +
call sub_410AC0  +
test eax eax +
lea edx [eax+1Fh] +
cmovs eax edx +
sar eax 5 +
add eax 1 +
mov [ebp+40h] eax +
jmp loc_437965  +
mov [esp+2Ch+var_24] 100h +
mov [esp+2Ch+var_28] offset a_auxv +
mov [esp+2Ch+var_2C] esi +
call sub_40F660  +
test eax eax +
mov edi eax +
jz loc_437B20  +
mov eax [ebx+4] +
mov [edi+24h] eax +
mov eax [ebx+14h] +
mov dword ptr [edi+54h] 0 +
mov [edi+50h] eax +
mov [esp+2Ch+var_2C] esi +
call sub_410AC0  +
test eax eax +
lea edx [eax+1Fh] +
cmovs eax edx +
sar eax 5 +
add eax 1 +
mov [edi+40h] eax +
mov edi 1 +
jmp loc_437965  +
mov eax [esi+0A0h] +
mov ecx [ebx+10h] +
mov edi [eax+930h] +
mov eax [esi+4] +
lea edx [ecx+8] +
mov eax [eax+4Ch] +
mov [esp+2Ch+var_2C] edx +
call eax  +
mov ecx [ebx+10h] +
lea edx [ecx+20h] +
mov [edi] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov eax [esi+4] +
mov eax [eax+4Ch] +
mov [esp+2Ch+var_2C] edx +
call eax  +
mov [edi+4] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov [esp+2Ch+var_24] 1Fh +
mov eax [ebx+10h] +
mov [esp+2Ch+var_2C] esi +
add eax 48h +
mov [esp+2Ch+var_28] eax +
call sub_4378B0  +
mov [edi+10h] eax +
mov edi 1 +
jmp loc_437965  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] offset a_reg +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] esi +
call sub_436A00  +
mov edi eax +
jmp loc_437965  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] offset a_reg2 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] esi +
call sub_436A00  +
mov edi eax +
jmp loc_437965  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] offset a_regXfp +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] esi +
call sub_436A00  +
mov edi eax +
jmp loc_437965  +
xor edi edi +
jmp loc_437965  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+34h] +
mov dword ptr [esp+4] 40h +
mov esi [esp+30h] +
mov eax [ebx+0Ch] +
mov [esp] eax +
call strchr  +
test eax eax +
jz loc_437B6F  +
add eax 1 +
mov [esp] eax +
call atoi  +
mov edx [esi+0A0h] +
mov edx [edx+930h] +
mov [edx+8] eax +
mov edx [ebx+8] +
cmp edx 1 +
jz loc_437C25  +
cmp edx 1Fh +
mov edi 1 +
ja loc_437B90  +
add esp 20h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp] esi +
call sub_4101B0  +
cmp eax 6 +
jz loc_437BE0  +
cmp eax 26h +
jz loc_437BE0  +
mov eax [ebx+8] +
cmp eax 21h +
jz loc_437BF4  +
cmp eax 23h +
jnz loc_437B85  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp] esi +
mov dword ptr [esp+10h] 0 +
mov [esp+8] eax +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] offset a_reg2 +
call sub_436A00  +
add esp 20h +
pop ebx  +
pop esi  +
mov edi eax +
mov eax edi +
pop edi  +
retn   +
***
mov eax [ebx+8] +
cmp eax 20h +
jz loc_437BF4  +
cmp eax 22h +
jz loc_437BAF  +
mov edi 1 +
jmp loc_437B85  +
***
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp] esi +
mov dword ptr [esp+10h] 0 +
mov [esp+8] eax +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] offset a_reg +
call sub_436A00  +
add esp 20h +
pop ebx  +
pop esi  +
mov edi eax +
mov eax edi +
pop edi  +
retn   +
***
mov eax [esi+0A0h] +
mov ecx [ebx+10h] +
mov edi [eax+930h] +
mov eax [esi+4] +
lea edx [ecx+8] +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
mov ecx [ebx+10h] +
lea edx [ecx+50h] +
mov [edi] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov eax [esi+4] +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
mov [edi+4] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov dword ptr [esp+8] 1Fh +
mov eax [ebx+10h] +
mov [esp] esi +
add eax 7Ch +
mov [esp+4] eax +
call sub_4378B0  +
mov ecx [ebx+14h] +
mov [edi+10h] eax +
mov eax [ebx+4] +
mov [esp+0Ch] ecx +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+4] offset a_note_netbsdco +
mov [esp+8] eax +
mov [esp] esi +
call sub_436A00  +
mov edi eax +
jmp loc_437B85  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+1Ch+arg_C] +
mov ebx [esp+1Ch+arg_18] +
test edx edx +
jz loc_437DE6  +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
lea esi [eax+1] +
add eax 4 +
and eax 0FFFFFFFCh +
lea edx [ebx+3] +
and edx 0FFFFFFFCh +
lea ecx [eax+edx+0Ch] +
mov edx [esp+1Ch+arg_8] +
mov eax ecx +
mov [esp+1Ch+var_10] ecx +
add eax [edx] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] eax +
call realloc  +
test eax eax +
mov ebp eax +
jz loc_437DDC  +
mov eax [esp+1Ch+arg_8] +
mov ecx [esp+1Ch+var_10] +
mov eax [eax] +
lea edi [ebp+eax+0] +
add ecx eax +
mov eax [esp+1Ch+arg_8] +
mov [eax] ecx +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] esi +
call eax  +
mov eax [esp+1Ch+arg_0] +
lea ecx [edi+4] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+1Ch+var_18] ecx +
mov [esp+1Ch+var_1C] ebx +
call eax  +
mov eax [esp+1Ch+arg_0] +
lea ecx [edi+8] +
add edi 0Ch +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+1Ch+var_18] ecx +
mov ecx [esp+1Ch+arg_10] +
mov [esp+1Ch+var_1C] ecx +
call eax  +
mov eax [esp+1Ch+arg_C] +
test eax eax +
jz loc_437DB1  +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] eax +
call memcpy  +
lea ecx [edi+esi] +
test esi 3 +
mov edi ecx +
jz loc_437DB1  +
add edi 1 +
lea eax [edi+esi] +
sub eax ecx +
test al 3 +
mov byte ptr [edi-1] 0 +
jnz loc_437DA1  +
mov eax [esp+1Ch+arg_14] +
mov [esp+1Ch+var_1C] edi +
add edi ebx +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
test bl 3 +
jz loc_437DDC  +
sub edi ebx +
nop   +
mov byte ptr [edi+ebx] 0 +
add ebx 1 +
test bl 3 +
jnz loc_437DD0  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
xor esi esi +
jmp loc_437CEC  +
***
push ebx  +
sub esp 28h +
mov edx [esp+30h] +
mov ebx [esp+34h] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
mov eax [eax+104h] +
test eax eax +
jz loc_437E41  +
mov ecx [esp+40h] +
mov dword ptr [esp+0Ch] 3 +
mov [esp+4] ebx +
mov [esp] edx +
mov [esp+14h] ecx +
mov ecx [esp+3Ch] +
mov [esp+10h] ecx +
mov ecx [esp+38h] +
mov [esp+8] ecx +
call eax  +
test eax eax +
jz loc_437E41  +
add esp 28h +
pop ebx  +
retn   +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_437E3C  +
***
push ebp  +
xor eax eax +
push edi  +
mov ecx 1Fh +
push esi  +
push ebx  +
sub esp 0ACh +
mov ebx [esp+0CCh] +
lea ebp [esp+24h] +
mov edi ebp +
mov esi [esp+0C0h] +
stos   +
lea ecx [esp+28h] +
movzx eax byte ptr [ebx] +
mov edx [ebx+4] +
mov [esp+24h] al +
movzx eax byte ptr [ebx+1] +
mov [esp+25h] al +
movzx eax byte ptr [ebx+2] +
mov [esp+26h] al +
movzx eax byte ptr [ebx+3] +
mov [esp+27h] al +
mov eax [esi+4] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea ecx [esp+2Ch] +
mov edx [ebx+8] +
mov eax [eax+60h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea ecx [esp+2Eh] +
mov edx [ebx+0Ch] +
mov eax [eax+60h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+30h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+10h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+34h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+14h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+38h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+18h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+3Ch] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+1Ch] +
mov [esp] edx +
call eax  +
lea eax [ebx+20h] +
add ebx 31h +
mov [esp+4] eax +
lea eax [esp+40h] +
mov dword ptr [esp+8] 10h +
mov [esp] eax +
call strncpy  +
lea eax [esp+50h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 50h +
mov [esp] eax +
call strncpy  +
mov eax [esp+0C8h] +
mov [esp+14h] ebp +
mov [esp] esi +
mov dword ptr [esp+18h] 7Ch +
mov [esp+8] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+10h] 3 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+4] eax +
call sub_437CC0  +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
xor eax eax +
push edi  +
mov ecx 22h +
push esi  +
push ebx  +
sub esp 0BCh +
mov ebx [esp+0DCh] +
lea ebp [esp+28h] +
mov edi ebp +
mov esi [esp+0D0h] +
stos   +
lea edx [esp+2Ch] +
movzx eax byte ptr [ebx] +
mov [esp+28h] al +
movzx eax byte ptr [ebx+1] +
mov [esp+29h] al +
movzx eax byte ptr [ebx+2] +
mov [esp+2Ah] al +
movzx eax byte ptr [ebx+3] +
mov [esp+2Bh] al +
mov eax [esi+4] +
mov eax [eax+48h] +
mov [esp+8] edx +
mov edi [ebx+4] +
mov dword ptr [esp+4] 0 +
mov [esp] edi +
call eax  +
mov eax [esi+4] +
lea ecx [esp+38h] +
mov edx [ebx+8] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea ecx [esp+3Ch] +
mov edx [ebx+0Ch] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+40h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+10h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+44h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+14h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+48h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+18h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+4Ch] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+1Ch] +
mov [esp] edx +
call eax  +
lea eax [ebx+20h] +
add ebx 31h +
mov [esp+4] eax +
lea eax [esp+50h] +
mov dword ptr [esp+8] 10h +
mov [esp] eax +
call strncpy  +
lea eax [esp+60h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 50h +
mov [esp] eax +
call strncpy  +
mov eax [esp+0D8h] +
mov [esp+14h] ebp +
mov [esp] esi +
mov dword ptr [esp+18h] 88h +
mov [esp+8] eax +
mov eax [esp+0D4h] +
mov dword ptr [esp+10h] 3 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+4] eax +
call sub_437CC0  +
add esp 0BCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 28h +
mov edx [esp+30h] +
mov ebx [esp+34h] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
mov eax [eax+104h] +
test eax eax +
jz loc_438180  +
mov ecx [esp+44h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp] edx +
mov [esp+18h] ecx +
mov ecx [esp+40h] +
mov [esp+14h] ecx +
mov ecx [esp+3Ch] +
mov [esp+10h] ecx +
mov ecx [esp+38h] +
mov [esp+8] ecx +
call eax  +
test eax eax +
jz loc_438180  +
add esp 28h +
pop ebx  +
retn   +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_438174  +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 2 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 46E62B7Fh +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov edx [esp+30h] +
mov eax [edx+4] +
mov ecx [eax+1B0h] +
mov eax offset aFreebsd +
cmp dword ptr [ecx+0Ch] 9 +
mov ecx offset aLinux +
mov dword ptr [esp+10h] 202h +
mov [esp] edx +
cmovnz eax ecx +
mov ecx [esp+40h] +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+18h] ecx +
mov ecx [esp+3Ch] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+14h] ecx +
mov [esp+4] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 100h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 102h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 301h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 302h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 303h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 304h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 305h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 306h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 307h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 308h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 309h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 30Ah +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 400h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 401h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 402h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 403h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_437CC0  +
add esp 2Ch +
retn   +
***
push ebp  +
mov ecx 6 +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+50h] +
mov edi [esp+64h] +
mov ebp [esp+58h] +
mov ebx [esp+60h] +
mov [esp+24h] eax +
mov eax [esp+54h] +
mov [esp+2Ch] edi +
mov edi offset a_reg2 +
mov [esp+28h] eax +
mov eax [esp+5Ch] +
mov esi eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_438977  +
mov edi offset a_regXfp +
mov ecx 9 +
mov esi eax +
cmps   +
jz loc_438A00  +
mov edi offset a_regXstate +
mov ecx 0Ch +
mov esi eax +
cmps   +
jz loc_4389B3  +
mov edi offset a_regPpcVmx +
mov ecx 0Dh +
mov esi eax +
cmps   +
jz loc_438A16  +
mov edi offset a_regPpcVsx +
mov ecx 0Dh +
mov esi eax +
cmps   +
jz loc_438A30  +
mov edi offset a_regS390HighGp +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_438A46  +
mov edi offset a_regS390Timer +
mov ecx 10h +
mov esi eax +
cmps   +
jz loc_4389E0  +
mov edi offset a_regS390Todcmp +
mov ecx 11h +
mov esi eax +
cmps   +
jz loc_438A80  +
mov edi offset a_regS390Todpre +
mov ecx 12h +
mov esi eax +
cmps   +
jz loc_438AA0  +
mov edi offset a_regS390Ctrs +
mov ecx 0Fh +
mov esi eax +
cmps   +
jz loc_438AC0  +
mov edi offset a_regS390Prefix +
mov ecx 11h +
mov esi eax +
cmps   +
jz loc_438AE0  +
mov edi offset a_regS390LastBr +
mov ecx 15h +
mov esi eax +
cmps   +
jz loc_438B00  +
mov edi offset a_regS390System +
mov ecx 16h +
mov esi eax +
cmps   +
jz loc_438A60  +
mov edi offset a_regS390Tdb +
mov ecx 0Eh +
mov esi eax +
cmps   +
jz loc_438B20  +
mov edi offset a_regS390VxrsLo +
mov ecx 13h +
mov esi eax +
cmps   +
jz loc_438B39  +
mov edi offset a_regS390VxrsHi +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_438B52  +
mov edi offset a_regArmVfp +
mov ecx 0Dh +
mov esi eax +
cmps   +
jz loc_438B6B  +
mov edi offset a_regAarchTls +
mov ecx 0Fh +
mov esi eax +
cmps   +
jz loc_438B84  +
mov edi offset a_regAarchHwBre +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_438B9D  +
mov esi eax +
mov ecx 14h +
mov edi offset a_regAarchHwWat +
cmps   +
setnbe al  +
setb cl  +
mov esi eax +
xor eax eax +
mov edx esi +
cmp dl cl +
jnz loc_4389AB  +
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 403h +
mov [esp+18h] eax +
jmp loc_4389F4  +
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 2 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+18h] eax +
mov eax [esp+28h] +
mov [esp+8] ebp +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_437CC0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+2Ch] +
mov [esp+5Ch] ebx +
mov [esp+58h] ebp +
mov [esp+60h] eax +
mov eax [esp+28h] +
mov [esp+54h] eax +
mov eax [esp+24h] +
mov [esp+50h] eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_438230  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 301h +
mov [esp+18h] eax +
mov dword ptr [esp+0Ch] offset aLinux +
jmp loc_438993  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 46E62B7Fh +
mov [esp+18h] eax +
jmp loc_4389F4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 100h +
mov [esp+18h] eax +
jmp loc_4389F4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 102h +
mov [esp+18h] eax +
jmp loc_4389F4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 300h +
mov [esp+18h] eax +
jmp loc_4389F4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 307h +
mov [esp+18h] eax +
jmp loc_4389F4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 302h +
mov [esp+18h] eax +
jmp loc_4389F4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 303h +
mov [esp+18h] eax +
jmp loc_4389F4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 304h +
mov [esp+18h] eax +
jmp loc_4389F4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 305h +
mov [esp+18h] eax +
jmp loc_4389F4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 306h +
mov [esp+18h] eax +
jmp loc_4389F4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 308h +
mov [esp+18h] eax +
jmp loc_4389F4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 309h +
mov [esp+18h] eax +
jmp loc_4389F4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 30Ah +
mov [esp+18h] eax +
jmp loc_4389F4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 400h +
mov [esp+18h] eax +
jmp loc_4389F4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 401h +
mov [esp+18h] eax +
jmp loc_4389F4  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 402h +
mov [esp+18h] eax +
jmp loc_4389F4  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_438BE0  +
mov eax [eax+0A0h] +
mov eax [eax+30h] +
shl eax 5 +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4105E0  +
mov eax 0FFFFFFFFh +
jmp loc_438BDC  +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_438C40  +
mov eax [eax+0A0h] +
mov ebx [eax+30h] +
mov eax [eax+44h] +
mov edx ebx +
mov [esp+4] eax +
mov eax [esp+24h] +
shl edx 5 +
mov [esp+8] edx +
mov [esp] eax +
call memcpy  +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_4105E0  +
mov eax 0FFFFFFFFh +
jmp loc_438C38  +
***
xor eax eax +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_8] +
mov eax [esp+10h+arg_4] +
mov ebx [edi] +
mov edx [eax] +
mov ecx [ebx+3Ch] +
mov esi [ebx+38h] +
add esi edx +
add esi [ecx+1Ch] +
test byte ptr [ebx+16h] 80h +
jz loc_438C9E  +
movzx eax byte ptr [eax+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_438CA7  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 100h +
jnz loc_438C9E  +
mov eax [ebx+8Ch] +
mov ecx [esp+10h+arg_C] +
mov eax [eax+88h] +
add edx [ecx+8] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_8] eax +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_4] edx +
mov [esp+10h+var_10] eax +
call sub_4582D0  +
mov edx [edi] +
mov ecx [esp+10h+arg_C] +
cmp edx ebx +
mov [ecx+8] eax +
jz loc_438CF8  +
test byte ptr [ebx+15h] 80h +
jz loc_438D10  +
mov [ebx+7Ch] edx +
mov ebx [edi] +
mov ecx [ebx+3Ch] +
mov edx [ebx+38h] +
mov edi [esp+10h+arg_C] +
add edx [ecx+1Ch] +
sub edx esi +
add eax edx +
mov [edi+8] eax +
jmp loc_438C9E  +
mov ebx edx +
jmp loc_438CF8  +
***
push ebx  +
mov ecx [esp+arg_8] +
mov esi [esp+arg_4] +
mov eax [esp+arg_C] +
mov ebx [ecx] +
movzx edx word ptr [ebx+18h] +
and dx 380h +
cmp dx 100h +
jz loc_438D47  +
add eax [esi] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+8Ch] +
add eax [esi] +
mov edx [edx+88h] +
mov [esp+arg_C] eax +
mov [esp+arg_4] ecx +
mov [esp+arg_8] edx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_4582D0  +
***
mov ecx [esp+arg_8] +
mov ebx [esp+arg_0] +
mov esi [esp+arg_4] +
mov eax [esp+arg_C] +
movzx edx word ptr [ecx+18h] +
shr dx 7 +
and edx 7 +
cmp edx 1 +
jz loc_438DE0  +
cmp edx 3 +
jnz loc_438DB0  +
mov [esp+arg_C] eax +
mov [esp+arg_8] ecx +
mov [esp+arg_4] esi +
mov [esp+arg_0] ebx +
pop ebx  +
pop esi  +
jmp sub_44EF00  +
test byte ptr [ecx+17h] 4 +
jz loc_438DD8  +
mov edx [ecx+24h] +
sub edx eax +
mov eax edx +
mov edx [ebx+4] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
movzx edx byte ptr [edx+0Ah] +
shr dl 3 +
movzx edx dl +
sub eax edx +
pop ebx  +
pop esi  +
retn   +
mov edx [ecx+8Ch] +
mov edx [edx+88h] +
mov [esp+arg_8] eax +
mov [esp+arg_0] ecx +
mov [esp+arg_4] edx +
pop ebx  +
pop esi  +
jmp loc_459330  +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+13Ch] +
jmp edx  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi [esp+70h] +
mov eax [esi+4] +
mov edi [eax+1B0h] +
mov eax [esp+84h] +
mov dword ptr [eax] 0 +
mov eax [esi+28h] +
shr eax 5 +
test al 42h +
jz loc_438E94  +
mov ebx [esp+7Ch] +
test ebx ebx +
jle loc_438E94  +
mov ecx [edi+140h] +
test ecx ecx +
jz loc_438E94  +
mov eax [edi+168h] +
test eax eax +
jz loc_439120  +
mov [esp+4] eax +
mov [esp] esi +
call sub_40F280  +
test eax eax +
mov ebp eax +
jz loc_438E94  +
mov ebx [eax+8Ch] +
mov eax [esi+0A0h] +
mov eax [eax+910h] +
cmp [ebx+1Ch] eax +
jz loc_438EA0  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx+4] +
cmp eax 4 +
jz loc_438EAD  +
cmp eax 9 +
jnz loc_438E94  +
mov dword ptr [esp+4] offset a_plt +
mov [esp] esi +
call sub_40F280  +
test eax eax +
mov [esp+24h] eax +
jz loc_438E94  +
mov eax [esi+4] +
mov edx [esp+80h] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
mov eax [eax+28h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+8] edx +
mov [esp+4] ebp +
mov [esp] esi +
call eax  +
test eax eax +
jz loc_439152  +
mov eax [ebp+24h] +
xor edx edx +
div  dword ptr [ebx+28h] +
mov edx [ebp+44h] +
mov ecx eax +
mov [esp+1Ch] eax +
lea eax [eax+eax*2] +
shl eax 3 +
test ecx ecx +
mov ebx eax +
mov [esp+18h] eax +
jle loc_439149  +
mov eax [edi+174h] +
xor ecx ecx +
mov [esp+20h] edi +
mov [esp+28h] ebp +
mov ebp edx +
mov [esp+70h] esi +
mov esi ecx +
movzx eax byte ptr [eax+9] +
shl eax 4 +
mov edi eax +
mov eax [ebp+0] +
mov eax [eax] +
mov eax [eax+4] +
mov [esp] eax +
call strlen  +
mov edx [ebp+8] +
add eax ebx +
lea ebx [eax+5] +
add eax 10h +
test edx edx +
cmovnz ebx eax +
add esi 1 +
add ebp edi +
cmp [esp+1Ch] esi +
jnz loc_438F41  +
mov edi [esp+20h] +
mov ebp [esp+28h] +
mov esi [esp+70h] +
mov [esp] ebx +
call sub_412BD0  +
mov ebx eax +
mov eax [esp+84h] +
test ebx ebx +
mov [eax] ebx +
jz loc_439152  +
mov eax [esp+18h] +
mov ecx [ebp+44h] +
mov ebp [esp+1Ch] +
add eax ebx +
test ebp ebp +
jle loc_438E94  +
mov [esp+20h] edi +
mov edi eax +
mov [esp+70h] esi +
mov esi ecx +
mov dword ptr [esp+2Ch] 0 +
mov dword ptr [esp+18h] 0 +
jmp loc_439002  +
add dword ptr [esp+2Ch] 1 +
add edi 5 +
add ebx 18h +
mov dword ptr [edi-5] 746C7040h +
mov byte ptr [edi-1] 0 +
mov eax [esp+20h] +
add dword ptr [esp+18h] 1 +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
shl eax 4 +
add esi eax +
mov eax [esp+18h] +
cmp [esp+1Ch] eax +
jz loc_439140  +
mov ecx [esp+24h] +
mov eax [esp+20h] +
mov eax [eax+140h] +
mov [esp+4] ecx +
mov ecx [esp+18h] +
mov [esp+8] esi +
mov [esp] ecx +
call eax  +
cmp eax 0FFFFFFFFh +
jz loc_438FDC  +
mov ecx [esi] +
mov edx [ecx] +
mov [esp+28h] ecx +
mov ebp [edx] +
mov [ebx] ebp +
mov ebp [edx+4] +
mov [ebx+4] ebp +
mov ebp [edx+8] +
mov [ebx+8] ebp +
mov ebp [edx+0Ch] +
mov [ebx+0Ch] ebp +
mov ecx [edx+10h] +
test ebp 1 +
mov [ebx+10h] ecx +
mov edx [edx+14h] +
mov [ebx+14h] edx +
jnz loc_43905B  +
or ebp 2 +
mov edx [esp+24h] +
or ebp 200000h +
mov [ebx+0Ch] ebp +
sub eax [edx+1Ch] +
mov [ebx+10h] edx +
mov [ebx+4] edi +
mov [ebx+8] eax +
mov eax [esp+28h] +
mov dword ptr [ebx+14h] 0 +
mov eax [eax] +
mov edx [eax+4] +
mov [esp] edx +
mov [esp+28h] edx +
call strlen  +
mov edx [esp+28h] +
mov [esp] edi +
mov [esp+4] edx +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov edx [esi+8] +
add edi ebp +
test edx edx +
jz loc_438FC6  +
mov eax 302Bh +
mov [edi] ax +
lea eax [edi+3] +
mov byte ptr [edi+2] 78h +
lea edi [esp+32h] +
mov [esp+28h] eax +
mov eax [esi+8] +
mov [esp+8] eax +
lea eax [esp+32h] +
mov [esp+4] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_410EF0  +
cmp byte ptr [esp+32h] 30h +
jnz loc_4390F8  +
lea esi [esi+0] +
add edi 1 +
cmp byte ptr [edi] 30h +
jz loc_4390F0  +
mov [esp] edi +
call strlen  +
mov [esp+4] edi +
mov edi [esp+28h] +
mov [esp] edi +
mov ebp eax +
mov [esp+8] eax +
lea edi [edi+ebp] +
call memcpy  +
jmp loc_438FC6  +
***
test byte ptr [edi+1ACh] 20h +
mov eax offset a_rela_plt +
mov edx offset a_rel_plt +
cmovz eax edx +
jmp loc_438E6B  +
***
mov eax [esp+2Ch] +
jmp loc_438E96  +
***
mov ebx [esp+18h] +
jmp loc_438F78  +
***
mov eax 0FFFFFFFFh +
jmp loc_438E96  +
***
mov eax [esp+4] +
and eax 0FFFFFFF7h +
cmp eax 2 +
setz al  +
movzx eax al +
retn   +
***
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [eax+78h] +
test byte ptr [edx+34h] 10h +
jnz loc_43923E  +
movzx ebx byte ptr [eax] +
and ebx 3 +
cmp bl 2 +
jz loc_43923E  +
test byte ptr [eax+1] 4 +
jz loc_439234  +
cmp byte ptr [edx+30h] 1 +
jz loc_439267  +
test ecx ecx +
jz loc_439234  +
movzx eax byte ptr [ecx+0Ch] +
and eax 0Fh +
cmp al 1 +
jz loc_439267  +
test esi esi +
jz loc_43923E  +
cmp byte ptr [edx+0Ch] 0 +
jz loc_439244  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov ecx [edx+4] +
mov eax [esi+10h] +
mov [esp+14h+var_8] edx +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_14] esi +
call eax  +
mov edx [esp+14h+var_8] +
test eax eax +
jz loc_43923E  +
or byte ptr [edx+34h] 10h +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_439280  +
***
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [ecx+18h] +
sub eax [edx+18h] +
cmp eax 0 +
jz loc_4392A6  +
mov eax 0FFFFFFFFh +
jle loc_4392A4  +
mov eax 1 +
pop ebx  +
retn   +
mov eax [ecx+14h] +
mov ebx [edx+14h] +
mov eax [eax+4] +
sub eax [ebx+4] +
cmp eax 0 +
jz loc_4392C0  +
jg loc_43929F  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
mov ecx [ecx+2Ch] +
xor eax eax +
sub ecx [edx+2Ch] +
cmp ecx 0 +
jz loc_4392A4  +
jg loc_43929F  +
jmp loc_4392B9  +
***
jmp loc_4392E0  +
mov eax [esp+4] +
mov edx [esp+8] +
mov eax [eax] +
mov edx [edx] +
mov eax [eax+10h] +
sub eax [edx+10h] +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx+1] +
movzx ecx byte ptr [edx+2] +
shl eax 8 +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx] +
movzx edx byte ptr [edx+3] +
or eax ecx +
shl edx 18h +
or eax edx +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx ecx byte ptr [edx+1] +
shl eax 18h +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx+3] +
movzx edx byte ptr [edx+2] +
or eax ecx +
shl edx 8 +
or eax edx +
retn   +
***
mov eax [esp+arg_0] +
movzx ecx byte ptr [eax+1] +
movzx edx byte ptr [eax+2] +
shl ecx 8 +
shl edx 10h +
or edx ecx +
movzx ecx byte ptr [eax] +
movzx eax byte ptr [eax+3] +
or edx ecx +
shl eax 18h +
or eax edx +
retn   +
***
mov ecx [esp+arg_0] +
movzx eax byte ptr [ecx+4] +
movzx edx byte ptr [ecx+7] +
shl eax 18h +
or eax edx +
movzx edx byte ptr [ecx+5] +
shl edx 10h +
or edx eax +
movzx eax byte ptr [ecx+6] +
shl eax 8 +
or eax edx +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov eax [edi+44h] +
test eax eax +
jz loc_439458  +
mov edx [eax+8] +
test edx edx +
jz loc_439458  +
cmp edx 0FFFFFFFFh +
jz loc_439458  +
mov eax [eax+4] +
test eax eax +
jz loc_4393EF  +
mov ebx [eax-4] +
test ebx ebx +
jnz loc_439458  +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] eax +
call sub_4393C0  +
mov eax [edi+44h] +
mov esi [eax+4] +
test esi esi +
jz loc_439464  +
mov eax [eax+8] +
mov dword ptr [esi-4] 1 +
mov eax [eax+44h] +
mov ebx [eax+4] +
test ebx ebx +
jz loc_439458  +
mov edx [edi+14h] +
mov edx [edx+94h] +
mov edx [edx+4] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
movzx ecx byte ptr [edx+0Bh] +
mov edx [eax] +
shr edx cl +
test edx edx +
jz loc_439458  +
xor eax eax +
mov ecx [ebx+eax*4] +
test ecx ecx +
jz loc_439451  +
mov dword ptr [esi+eax*4] 1 +
add eax 1 +
cmp eax edx +
jnz loc_439443  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [eax+8] +
mov edx [edx+44h] +
mov ecx [edx+4] +
mov edx [edx] +
mov [eax+4] ecx +
mov [eax] edx +
jmp loc_439458  +
***
push ebx  +
sub esp 20h +
mov ebx [esp+20h+arg_4] +
mov edx [esp+20h+arg_0] +
mov eax [ebx+4] +
mov ecx [eax+30h] +
mov edi [ecx+4] +
mov esi [edi+1B0h] +
mov edi [edx+24h] +
test edi edi +
jg loc_4394B7  +
mov dword ptr [edx+24h] 0FFFFFFFFh +
add esp 20h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edi [ebx] +
mov [edx+24h] edi +
mov esi [esi+180h] +
mov [esp+20h+var_10] 0 +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] edx +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] ecx +
call esi  +
add edi eax +
mov eax 1 +
mov [ebx] edi +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edx [esp+10h+arg_4] +
mov ebx [esp+10h+arg_0] +
mov esi [edx+24h] +
mov ecx [edx] +
mov eax [edx+4] +
test esi esi +
jz loc_43950F  +
mov [edx+4] ecx +
mov eax ecx +
mov edi [edx+8] +
cmp eax edi +
jnb loc_439530  +
test esi esi +
mov ecx [eax] +
jnz loc_439520  +
cmp ecx ebx +
ja loc_439530  +
cmp ebx ecx +
jz loc_439540  +
add eax 0Ch +
cmp eax edi +
mov [edx+4] eax +
jb loc_439516  +
nop   +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [edx+20h] +
mov eax [eax+4] +
shr eax cl +
test eax eax +
jz loc_43958B  +
cmp eax [edx+14h] +
jb loc_439597  +
mov ecx [edx+1Ch] +
sub eax [edx+18h] +
mov eax [ecx+eax*4] +
movzx ecx byte ptr [eax+0Ch] +
lea ebx [ecx-6] +
cmp bl 1 +
ja loc_439575  +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea ebx [ecx-6] +
cmp bl 1 +
jbe loc_439566  +
sub ecx 3 +
cmp cl 1 +
ja loc_439530  +
mov eax [eax+14h] +
mov edi [edx+10h] +
cmp [eax+94h] edi +
jz loc_4395C5  +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [edx+0Ch] +
lea ebx [eax+eax*4] +
lea ebx [ecx+ebx*4] +
movzx ecx byte ptr [ebx+0Ch] +
shr cl 4 +
test cl cl +
jnz loc_439551  +
mov ecx [ebx+10h] +
mov eax [edx+10h] +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] eax +
call sub_42E1E0  +
test eax eax +
jz loc_439530  +
mov edx [eax+7Ch] +
test edx edx +
jnz loc_43958B  +
cmp eax offset off_47D510 +
jz loc_439530  +
cmp dword ptr [eax+3Ch] offset off_47D510 +
jnz loc_439530  +
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 100h +
jz loc_439530  +
cmp ax 200h +
setnz al  +
movzx eax al +
jmp loc_439590  +
***
push edi  +
push ebx  +
mov ebx eax +
sub esp 14h +
mov ecx [eax] +
test ecx ecx +
jz loc_439722  +
mov eax [edx+8Ch] +
cmp ecx [eax+68h] +
jz loc_439722  +
mov [esp+18h+var_18] ecx +
call free  +
mov eax [ebx+0Ch] +
mov edx [esi+94h] +
test eax eax +
mov edx [edx+0A0h] +
jz loc_439742  +
cmp eax [edx+78h] +
jz loc_439742  +
mov [esp+18h+var_18] eax +
call free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_4] +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 100h +
jz loc_43977A  +
mov [esp+18h+var_14] 1AA1h +
mov [esp+18h+var_18] offset a____Binutils_3 +
call sub_410530  +
and word ptr [ebx+18h] 0FC7Fh +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
test byte ptr [eax+5] 8 +
mov [esp+4Ch+var_24] edx +
mov [esp+4Ch+var_30] ecx +
jz loc_439970  +
mov eax [eax+1Ch] +
mov ebx [eax+4Ch] +
mov eax [eax+38h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+4Ch+var_20] eax +
mov eax ecx +
shr eax 2 +
test eax eax +
mov edi eax +
jnz loc_43993B  +
mov eax [esp+4Ch+var_30] +
mov edx [esp+4Ch+arg_0] +
add eax eax +
test edx edx +
mov [esp+4Ch+var_14] eax +
jnz loc_4399C9  +
mov [esp+4Ch+var_34] eax +
mov edi 1 +
lea esi [esi+0] +
mov esi [esp+4Ch+var_34] +
mov eax esi +
shl eax 2 +
mov [esp+4Ch+var_4C] eax +
call sub_412BD0  +
test eax eax +
mov ebp eax +
jz loc_4399D8  +
cmp edi esi +
jnb loc_439927  +
lea edx ds:0[edi*4] +
mov esi [esp+4Ch+var_30] +
add ebx 2 +
mov [esp+4Ch+var_3C] edx +
mov edx [esp+4Ch+var_24] +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_10] 0FFFFFFFFh +
mov [esp+4Ch+var_28] 0FFFFFFFFh +
lea edx [edx+esi*4] +
mov esi edi +
mov [esp+4Ch+var_18] edx +
mov [esp+4Ch+var_1C] ebx +
nop   +
mov edi [esp+4Ch+arg_0] +
test edi edi +
jz loc_439864  +
test esi 1Fh +
jz loc_439915  +
mov eax [esp+4Ch+var_3C] +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_44] eax +
call memset  +
mov ebx [esp+4Ch+var_30] +
mov ecx [esp+4Ch+var_24] +
test ebx ebx +
jz loc_4398A2  +
mov ebx [esp+4Ch+var_18] +
lea esi [esi+0] +
mov eax [ecx] +
xor edx edx +
add ecx 4 +
div  esi +
add dword ptr [ebp+edx*4+0] 1 +
cmp ecx ebx +
jnz loc_439890  +
mov eax [esp+4Ch+var_20] +
xor ebx ebx +
xor edi edi +
mov ecx [esp+4Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+8] +
imul ecx eax +
mov [esp+4Ch+var_38] eax +
nop   +
mov eax [ebp+edi*4+0] +
xor edx edx +
imul eax eax +
add ecx eax +
adc ebx edx +
add edi 1 +
cmp edi esi +
jb loc_4398C0  +
mov eax 1000h +
cdq   +
idiv  [esp+4Ch+var_38] +
xor edx edx +
mov edi eax +
mov eax esi +
div  edi +
add eax 1 +
imul eax eax +
imul ebx eax +
mul  ecx +
add edx ebx +
cmp edx [esp+4Ch+var_28] +
jb loc_4399B0  +
ja loc_439909  +
cmp eax [esp+4Ch+var_10] +
jb loc_4399B0  +
add [esp+4Ch+var_2C] 1 +
cmp [esp+4Ch+var_2C] 64h +
jz loc_439927  +
add esi 1 +
add [esp+4Ch+var_3C] 4 +
cmp [esp+4Ch+var_34] esi +
ja loc_439850  +
mov [esp+4Ch+var_4C] ebp +
call free  +
mov eax [esp+4Ch+var_14] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esp+4Ch+arg_0] +
mov eax ecx +
add eax eax +
mov [esp+4Ch+var_14] eax +
mov [esp+4Ch+var_34] eax +
test ebp ebp +
jz loc_4397F0  +
cmp edi 1 +
jz loc_4399C9  +
mov eax [esp+4Ch+var_14] +
and eax 1Fh +
cmp eax 1 +
adc [esp+4Ch+var_14] 0 +
jmp loc_4397F0  +
mov eax 1 +
xor ecx ecx +
mov ebx [esp+4Ch+var_30] +
jmp loc_439982  +
mov eax edx +
add ecx 1 +
mov edx ds:dword_49A5A0[ecx*4] +
cmp ebx edx +
jb loc_439994  +
test edx edx +
jnz loc_439980  +
cmp eax 1 +
ja loc_439933  +
mov ecx [esp+4Ch+arg_0] +
test ecx ecx +
jz loc_439933  +
add esp 4Ch +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_10] eax +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_14] esi +
mov [esp+4Ch+var_2C] 0 +
jmp loc_439915  +
mov eax [esp+4Ch+var_14] +
mov edi 2 +
mov [esp+4Ch+var_34] eax +
jmp loc_439958  +
xor eax eax +
jmp loc_439933  +
***
mov eax [esp+8] +
mov eax [eax+4] +
mov [esp+8] eax +
mov eax [esp+4] +
mov eax [eax+4] +
mov [esp+4] eax +
jmp strcmp  +
***
mov edi eax +
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
test byte ptr [edx] 1 +
mov [esp+34h+var_18] 0 +
jnz loc_439A24  +
mov eax [edx+1Ch] +
xor edx edx +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_439A9F  +
mov ebx [edi+64h] +
mov eax [edi+4] +
test ebx ebx +
mov ebp [eax+1B0h] +
jnz loc_439A54  +
jmp loc_439B12  +
mov eax [ebx+8Ch] +
mov ebx [ebx+0Ch] +
mov dword ptr [eax+60h] 0 +
test ebx ebx +
jz loc_439A98  +
mov eax [ebx+14h] +
and eax 8001h +
cmp eax 1 +
jnz loc_439A40  +
mov eax [ebp+70h] +
mov [esp+34h+var_28] ecx +
mov [esp+34h+var_2C] ebx +
mov [esp+34h+var_30] esi +
mov [esp+34h+var_34] edi +
call eax  +
mov ecx [esp+34h+var_28] +
test eax eax +
jnz loc_439A40  +
mov edx [ebx+8Ch] +
mov eax [esp+34h+var_18] +
mov ebx [ebx+0Ch] +
add eax 1 +
test ebx ebx +
mov [esp+34h+var_18] eax +
mov [edx+60h] eax +
jnz loc_439A54  +
mov edx [esp+34h+var_18] +
mov eax [esi+1Ch] +
lea edi [esp+34h+var_18] +
mov [ecx] edx +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_30] offset loc_43A490 +
call sub_424620  +
mov ebx [esi+1Ch] +
mov eax [ebx+0C0h] +
test eax eax +
jz loc_439AE2  +
mov ecx [esp+34h+var_18] +
lea edx [ecx+1] +
jmp loc_439AD2  +
mov edx ecx +
mov [eax+0Ch] edx +
mov eax [eax] +
lea ecx [edx+1] +
test eax eax +
jnz loc_439AD0  +
mov [esp+34h+var_18] edx +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_34] ebx +
mov [esp+34h+var_30] offset sub_43A460 +
call sub_424620  +
mov edx [esp+34h+var_18] +
xor eax eax +
lea ecx [edx+1] +
test edx edx +
mov edx [esi+1Ch] +
cmovnz eax ecx +
mov [edx+4Ch] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1Ch] +
xor edx edx +
jmp loc_439A9F  +
***
mov eax [esp+34h] +
mov dword ptr [eax+4] 1 +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
and ebx 1 +
jnz loc_439CC0  +
or byte ptr [edx+34h] 1 +
mov eax edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp+4] 48h +
mov [esp] ebx +
call sub_412630  +
test eax eax +
jnz loc_439C11  +
xor eax eax +
jmp loc_439C80  +
***
mov byte ptr [edx+2Ch] 0 +
lea ecx [edx+2Dh] +
mov bl 1Bh +
jmp loc_439C54  +
***
xor esi esi +
add ecx 2 +
mov [ecx-2] si +
sub ebx 2 +
jmp loc_439C59  +
***
mov byte ptr [ecx] 0 +
jmp loc_439C7A  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [ebx+9Ch] +
mov eax [esi+50h] +
test eax eax +
jz loc_439CEE  +
mov [esp+14h+var_14] eax +
call sub_455940  +
mov eax [esi+7Ch] +
mov [esp+14h+var_14] eax +
call sub_4584B0  +
mov [esp+14h+arg_0] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_423A30  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [eax+94h] +
mov esi [edx+94h] +
mov edi [ebx+4] +
cmp dword ptr [edi+4] 5 +
jz loc_439D36  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esi+4] +
cmp dword ptr [edi+4] 5 +
jnz loc_439D2C  +
mov edi [edx+8Ch] +
mov ebp [eax+8Ch] +
mov edi [edi+4] +
cmp [ebp+4] edi +
jnz loc_439D2C  +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebx +
mov [esp+5Ch+var_30] ecx +
mov [esp+5Ch+var_34] edx +
call sub_42F700  +
mov edx [esp+5Ch+var_34] +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] edx +
mov edi eax +
mov [esp+5Ch+var_2C] eax +
call sub_42F700  +
cmp eax 0FFFFFEFFh +
mov [esp+5Ch+var_28] eax +
jz loc_439D2C  +
cmp edi 0FFFFFEFFh +
jz loc_439D2C  +
mov eax [ebx+0A0h] +
xor edx edx +
mov ecx eax +
mov [esp+5Ch+var_34] eax +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx edi byte ptr [eax+5] +
mov eax [ecx+60h] +
mov ecx [esi+0A0h] +
div  edi +
xor edx edx +
mov [esp+5Ch+var_18] ecx +
mov [esp+5Ch+var_20] eax +
mov eax [esi+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx edi byte ptr [eax+5] +
mov eax [ecx+60h] +
div  edi +
test eax eax +
mov ebp eax +
jz loc_439D2C  +
mov eax [esp+5Ch+var_20] +
test eax eax +
jz loc_439D2C  +
mov eax [esp+5Ch+var_34] +
lea edx [ecx+48h] +
mov [esp+5Ch+var_14] edx +
mov [esp+5Ch+var_1C] 0 +
mov edi [eax+24Ch] +
mov eax [ecx+24Ch] +
mov ecx [esp+5Ch+var_30] +
test edi edi +
mov [esp+5Ch+var_24] eax +
jz loc_439FC8  +
test edi edi +
jz loc_439F4C  +
mov eax [esp+5Ch+var_24] +
mov [esp+5Ch+var_30] 0 +
test eax eax +
jz loc_439F4C  +
mov ecx [esp+5Ch+var_24] +
test ecx ecx +
jz loc_43A05D  +
test edi edi +
jz loc_43A05D  +
mov [esp+5Ch+var_20] ebx +
mov ebp [edi+4] +
lea eax [edi+0Ch] +
mov ebx [esp+5Ch+var_2C] +
xor edx edx +
mov [esp+5Ch+var_14] esi +
mov esi eax +
mov [esp+5Ch+var_10] eax +
lea esi [esi+0] +
cmp edx ebp +
jnb loc_439EAB  +
lea eax [ebp+edx+0] +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jnb loc_439E9E  +
cmp edx eax +
mov ebp eax +
jnb loc_439EAB  +
add eax edx +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jb loc_439E87  +
cmp ebx ecx +
jbe loc_43A0B9  +
lea edx [eax+1] +
jmp loc_439E70  +
mov ebx [esp+5Ch+var_20] +
mov esi [esp+5Ch+var_14] +
mov [esp+5Ch+var_2C] 0 +
mov eax [esp+5Ch+var_24] +
xor edx edx +
mov [esp+5Ch+var_24] ebx +
mov ebx [esp+5Ch+var_28] +
mov [esp+5Ch+var_20] esi +
mov ebp [eax+4] +
add eax 0Ch +
mov esi eax +
cmp ebp edx +
jbe loc_439F17  +
lea eax [edx+ebp] +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jnb loc_439F02  +
cmp edx eax +
mov ebp eax +
jnb loc_439F17  +
add eax edx +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jb loc_439EEB  +
cmp ebx ecx +
jbe loc_43A0D1  +
lea edx [eax+1] +
jmp loc_439ED5  +
mov [esp+5Ch+var_30] 0 +
xor edi edi +
mov eax [esp+5Ch+var_1C] +
test eax eax +
jz loc_439F29  +
mov [esp+5Ch+var_5C] eax +
call free  +
mov esi [esp+5Ch+var_30] +
mov eax edi +
test esi esi +
jz loc_439D2E  +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_34] edi +
call free  +
mov eax [esp+5Ch+var_34] +
jmp loc_439D2E  +
mov eax [esp+5Ch+var_14] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_10] ecx +
call sub_42B780  +
test eax eax +
mov [esp+5Ch+var_30] eax +
jz loc_439F17  +
test edi edi +
jz loc_43A05D  +
mov ecx [esp+5Ch+var_10] +
cmp byte ptr [ecx+3] 0 +
js loc_439E3F  +
mov ecx [esi+0A0h] +
mov edx eax +
mov eax ebp +
mov [esp+5Ch+var_14] ecx +
call loc_47BE90  +
mov ecx [esp+5Ch+var_14] +
mov [esp+5Ch+var_24] eax +
mov [ecx+24Ch] eax +
jmp loc_439E3F  +
mov eax [esp+5Ch+var_20] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_34] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_5C] ebx +
add eax 48h +
mov [esp+5Ch+var_58] eax +
call sub_42B780  +
test eax eax +
mov [esp+5Ch+var_1C] eax +
jz loc_439F0F  +
mov ecx [esp+5Ch+var_30] +
cmp byte ptr [ecx+3] 0 +
jns loc_43A425  +
mov eax [esp+5Ch+var_14] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] esi +
call sub_42B780  +
test eax eax +
mov [esp+5Ch+var_30] eax +
jz loc_439F17  +
mov eax [esp+5Ch+var_20] +
shl eax 3 +
mov [esp+5Ch+var_5C] eax +
call sub_412BD0  +
mov [esp+5Ch+var_24] eax +
lea eax ds:0[ebp*8] +
mov [esp+5Ch+var_5C] eax +
call sub_412BD0  +
test eax eax +
mov [esp+5Ch+var_14] eax +
jnz loc_43A263  +
xor edi edi +
cmp [esp+5Ch+var_24] 0 +
jz loc_43A0A0  +
mov eax [esp+5Ch+var_24] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_14] +
test eax eax +
jz loc_439F19  +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_439F19  +
mov eax [edi+4] +
mov ebx [esp+5Ch+var_20] +
mov esi [esp+5Ch+var_14] +
mov [esp+5Ch+var_10] edi +
mov [esp+5Ch+var_2C] eax +
jmp loc_439EBB  +
mov edx [esp+5Ch+var_2C] +
mov ebx [esp+5Ch+var_24] +
mov esi [esp+5Ch+var_20] +
mov eax [edi+4] +
test edx edx +
jz loc_439F17  +
test eax eax +
jz loc_439F17  +
cmp [esp+5Ch+var_2C] eax +
jnz loc_439F17  +
mov eax [esp+5Ch+var_2C] +
shl eax 3 +
mov [esp+5Ch+var_5C] eax +
mov ebp eax +
mov [esp+5Ch+var_28] eax +
call sub_412BD0  +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_24] eax +
call sub_412BD0  +
test eax eax +
mov [esp+5Ch+var_14] eax +
jz loc_43A08B  +
cmp [esp+5Ch+var_24] 0 +
jz loc_43A08B  +
mov eax [esp+5Ch+var_10] +
mov edx [esp+5Ch+var_24] +
mov ebp [eax] +
mov eax [esp+5Ch+var_28] +
add eax ebp +
cmp ebp eax +
mov [esp+5Ch+var_20] eax +
jnb loc_43A182  +
mov [esp+5Ch+var_10] esi +
mov esi ebx +
mov ebx edx +
mov eax [esp+5Ch+var_34] +
add ebx 8 +
mov [ebx-8] ebp +
mov ecx [ebp+0] +
add ebp 8 +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] ecx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_42B580  +
mov [ebx-4] eax +
cmp [esp+5Ch+var_20] ebp +
ja loc_43A152  +
mov esi [esp+5Ch+var_10] +
mov ebx [edi] +
mov ebp [esp+5Ch+var_28] +
mov edi [esp+5Ch+var_14] +
add ebp ebx +
cmp ebx ebp +
jnb loc_43A1BB  +
mov eax [esp+5Ch+var_18] +
add edi 8 +
mov [edi-8] ebx +
mov edx [ebx] +
add ebx 8 +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_42B580  +
mov [edi-4] eax +
cmp ebp ebx +
ja loc_43A192  +
mov esi [esp+5Ch+var_2C] +
mov ebx [esp+5Ch+var_24] +
mov [esp+5Ch+var_50] offset loc_4399E0 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_58] esi +
mov [esp+5Ch+var_5C] ebx +
call qsort  +
mov [esp+5Ch+var_58] esi +
mov esi [esp+5Ch+var_14] +
mov [esp+5Ch+var_50] offset loc_4399E0 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_5C] esi +
call qsort  +
mov eax [esi] +
mov edx [ebx] +
movzx eax word ptr [eax+4] +
cmp [edx+4] ax +
jnz loc_43A25C  +
mov ebx [esp+5Ch+var_14] +
xor ebp ebp +
mov eax [esp+5Ch+var_24] +
lea edi [ebx+8] +
mov edx ebx +
lea esi [eax+8] +
jmp loc_43A246  +
add ebp 1 +
cmp ebp [esp+5Ch+var_2C] +
jz loc_43A41A  +
mov edx edi +
mov eax esi +
mov ecx [edx] +
add esi 8 +
add edi 8 +
mov ebx [eax] +
movzx ecx word ptr [ecx+4] +
cmp [ebx+4] cx +
jnz loc_43A25C  +
mov edx [edx+4] +
mov [esp+5Ch+var_58] edx +
mov eax [eax+4] +
mov [esp+5Ch+var_5C] eax +
call strcmp  +
test eax eax +
jz loc_43A221  +
xor edi edi +
jmp loc_43A094  +
mov eax [esp+5Ch+var_24] +
test eax eax +
jz loc_43A08B  +
mov eax [esp+5Ch+var_20] +
mov ecx [esp+5Ch+var_1C] +
lea eax [eax+eax*4] +
lea edx [ecx+eax*4] +
cmp edx ecx +
jbe loc_43A455  +
mov eax ecx +
mov edi ebx +
mov ebx [esp+5Ch+var_2C] +
xor ecx ecx +
mov [esp+5Ch+var_20] esi +
jmp loc_43A29C  +
add eax 14h +
cmp edx eax +
jbe loc_43A2AD  +
cmp [eax+10h] ebx +
jnz loc_43A295  +
mov esi [esp+5Ch+var_24] +
mov [esi+ecx*8] eax +
add ecx 1 +
jmp loc_43A295  +
mov esi [esp+5Ch+var_20] +
mov ebx edi +
mov edi [esp+5Ch+var_30] +
lea eax [ebp+ebp*4+0] +
lea edx [edi+eax*4] +
cmp edx edi +
jbe loc_43A25C  +
mov eax edi +
xor ebp ebp +
mov edi ecx +
mov ecx [esp+5Ch+var_28] +
mov [esp+5Ch+var_2C] ebx +
jmp loc_43A2D9  +
add eax 14h +
cmp edx eax +
jbe loc_43A2EA  +
cmp [eax+10h] ecx +
jnz loc_43A2D2  +
mov ebx [esp+5Ch+var_14] +
mov [ebx+ebp*8] eax +
add ebp 1 +
jmp loc_43A2D2  +
mov ecx edi +
xor edi edi +
mov ebx [esp+5Ch+var_2C] +
test ecx ecx +
jz loc_43A094  +
test ebp ebp +
jz loc_43A094  +
cmp ebp ecx +
jnz loc_43A094  +
mov edi [esp+5Ch+var_24] +
xor edx edx +
mov [esp+5Ch+var_2C] esi +
mov esi ebx +
mov ebx edx +
mov eax [edi] +
add ebx 1 +
add edi 8 +
mov ecx [eax+8] +
mov eax [esp+5Ch+var_34] +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] ecx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_42B580  +
mov [edi-4] eax +
cmp ebx ebp +
jnz loc_43A318  +
mov esi [esp+5Ch+var_2C] +
xor edi edi +
mov ebx [esp+5Ch+var_14] +
mov eax [ebx] +
add edi 1 +
add ebx 8 +
mov ecx [eax+8] +
mov eax [esp+5Ch+var_18] +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] ecx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_42B580  +
mov [ebx-4] eax +
cmp edi ebp +
jnz loc_43A34B  +
mov esi [esp+5Ch+var_24] +
mov [esp+5Ch+var_50] offset loc_4399E0 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_58] ebp +
mov [esp+5Ch+var_5C] esi +
call qsort  +
mov ebx [esp+5Ch+var_14] +
mov [esp+5Ch+var_50] offset loc_4399E0 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_58] ebp +
mov [esp+5Ch+var_5C] ebx +
call qsort  +
mov eax [ebx] +
mov edx [esi] +
movzx eax word ptr [eax+0Ch] +
cmp [edx+0Ch] ax +
jnz loc_43A25C  +
mov eax esi +
mov edx ebx +
lea edi [ebx+8] +
xor ebx ebx +
lea esi [esi+8] +
mov [esp+5Ch+var_34] ebp +
jmp loc_43A3FD  +
add ebx 1 +
cmp ebx [esp+5Ch+var_34] +
jz loc_43A41A  +
mov edx edi +
mov eax esi +
mov ebp [edx] +
add esi 8 +
add edi 8 +
mov ecx [eax] +
movzx ebp word ptr [ebp+0Ch] +
cmp [ecx+0Ch] bp +
jnz loc_43A25C  +
mov edx [edx+4] +
mov [esp+5Ch+var_58] edx +
mov eax [eax+4] +
mov [esp+5Ch+var_5C] eax +
call strcmp  +
test eax eax +
jz loc_43A3D8  +
xor edi edi +
jmp loc_43A094  +
mov edi 1 +
nop   +
jmp loc_43A094  +
mov eax [ebx+0A0h] +
mov edx [esp+5Ch+var_1C] +
mov [esp+5Ch+var_10] ecx +
mov [esp+5Ch+var_30] eax +
mov eax [esp+5Ch+var_20] +
call loc_47BE90  +
mov ecx [esp+5Ch+var_10] +
mov edi eax +
mov eax [esp+5Ch+var_30] +
mov [eax+24Ch] edi +
jmp loc_439E23  +
xor ecx ecx +
jmp loc_43A2B3  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
test byte ptr [eax+34h] 8 +
jnz loc_43A47E  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jz loc_43A47E  +
mov ecx [edx] +
add ecx 1 +
mov [edx] ecx +
mov [eax+20h] ecx +
mov eax 1 +
retn   +
***
mov eax [esp+4] +
mov edx [esp+8] +
test byte ptr [eax+34h] 8 +
jz loc_43A4AE  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jz loc_43A4AE  +
mov ecx [edx] +
add ecx 1 +
mov [edx] ecx +
mov [eax+20h] ecx +
mov eax 1 +
retn   +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
mov eax [eax+1B0h] +
mov edi [esp+28h+arg_4] +
mov ebx [esp+28h+arg_8] +
mov eax [eax+0E4h] +
test eax eax +
jz loc_43A4F4  +
mov [esp+28h+var_1C] ebx +
mov [esp+28h+var_20] edi +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
test ebx ebx +
jnz loc_43A525  +
movzx eax byte ptr [ebp+0Dh] +
movzx edx byte ptr [esi+31h] +
and eax 3 +
mov ecx edx +
movzx ebx al +
and ecx 3 +
sub ebx 1 +
sub ecx 1 +
cmp ebx ecx +
jnb loc_43A51D  +
and edx 0FFFFFFFCh +
or edx eax +
mov [esi+31h] dl +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_43A51D  +
test byte ptr [ebp+0Dh] 3 +
jz loc_43A51D  +
mov eax [esp+28h+arg_0] +
test byte ptr [eax] 8 +
jnz loc_43A51D  +
or byte ptr [esi+35h] 8 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
cmp dword ptr [esi+20h] 0FFFFFFFFh +
jz loc_43A58B  +
mov eax [ebx+4] +
mov eax [eax+154h] +
mov [esp+1Ch+var_1C] esi +
call eax  +
test eax eax +
jnz loc_43A598  +
mov eax [ebx+28h] +
cmp [esi+20h] eax +
jl loc_43A58B  +
mov eax [ebx+34h] +
lea edx [eax+1] +
mov [ebx+34h] edx +
mov [esi+20h] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+14h] +
xor edx edx +
mov eax [esi+20h] +
mov ecx [ebx+38h] +
mov ebp [edi+eax*4] +
mov eax ebp +
div  dword ptr [ebx+2Ch] +
mov eax ebp +
shr eax cl +
mov [esp+1Ch+var_10] edx +
mov edx [ebx+0Ch] +
shr edx cl +
mov ecx [ebx+40h] +
sub edx 1 +
and eax edx +
mov edx [ebx+20h] +
and ecx ebp +
mov ebp 1 +
shl ebp cl +
lea eax [edx+eax*4] +
or ebp [eax] +
mov [esp+1Ch+var_14] eax +
mov [eax] ebp +
mov edx [esi+20h] +
mov eax 1 +
mov ecx [ebx+3Ch] +
mov edx [edi+edx*4] +
shr edx cl +
and edx [ebx+40h] +
mov ecx edx +
shl eax cl +
mov ecx [ebx+1Ch] +
mov edx eax +
mov eax [esp+1Ch+var_14] +
or edx ebp +
mov ebp [esp+1Ch+var_10] +
mov [eax] edx +
mov eax [esi+20h] +
mov eax [edi+eax*4] +
lea edi ds:0[ebp*4] +
and eax 0FFFFFFFEh +
mov edx eax +
or edx 1 +
cmp dword ptr [ecx+ebp*4] 1 +
cmovz eax edx +
mov edx [ebx] +
mov edx [edx+4] +
mov ecx [edx+30h] +
mov edx [ebx+18h] +
mov edx [edx+ebp*4] +
mov ebp [ebx+24h] +
sub edx [ebx+30h] +
mov [esp+1Ch+var_1C] eax +
lea edx [ebp+edx*4+0] +
mov [esp+1Ch+var_18] edx +
call ecx  +
mov eax [ebx+1Ch] +
add eax edi +
add edi [ebx+18h] +
sub dword ptr [eax] 1 +
mov eax [edi] +
lea ecx [eax+1] +
mov [edi] ecx +
mov [esi+20h] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ecx [esp+4+arg_0] +
mov edx [esp+4+arg_4] +
cmp dword ptr [ecx+4] 1 +
setz al  +
xor ebx ebx +
cmp dword ptr [edx+4] 1 +
mov esi eax +
mov eax 1 +
setz bl  +
cmp esi ebx +
jl loc_43A6AC  +
jg loc_43A6B0  +
mov esi [ecx] +
mov ebx [edx] +
and esi [ecx+0Ch] +
and ebx [edx+0Ch] +
cmp esi ebx +
jb loc_43A6B0  +
ja loc_43A6AC  +
mov eax [edx+8] +
xor ebx ebx +
cmp [ecx+8] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
pop esi  +
retn   +
mov eax 0FFFFFFFFh +
jmp loc_43A6AC  +
***
mov ecx [esp+arg_0] +
mov eax [edx+4] +
cmp [ecx+4] eax +
jb loc_43A6F7  +
mov eax 1 +
ja loc_43A6F5  +
mov ebx [edx] +
cmp [ecx] ebx +
jb loc_43A6F7  +
nop   +
ja loc_43A6F5  +
mov eax [edx+8] +
xor ebx ebx +
cmp [ecx+8] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov edx [esp+18h+arg_4] +
test byte ptr [ebx+34h] 20h +
jnz loc_43A726  +
movzx eax byte ptr [ebx+0Ch] +
lea ecx [eax-3] +
cmp cl 1 +
jbe loc_43A730  +
cmp al 1 +
jz loc_43A742  +
cmp al 2 +
jz loc_43A742  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
movzx ecx byte ptr [ebx+33h] +
test cl 2 +
jnz loc_43A766  +
and ecx 0Ah +
jnz loc_43A742  +
cmp al 3 +
jz loc_43A766  +
mov eax [edx+4] +
mov edx [edx] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_18] edx +
call eax  +
mov eax 1 +
and byte ptr [ebx+33h] 0ECh +
add esp 18h +
pop ebx  +
retn   +
mov eax [ebx+14h] +
test byte ptr [eax+18h] 8 +
jz loc_43A742  +
jmp loc_43A726  +
***
jmp sub_43A780  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [ecx+18h] +
mov ebx [esp+48h+arg_0] +
mov [esp+48h+var_40] ebp +
mov esi [esp+48h+arg_4] +
mov [esp+48h+var_20] edx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_411C00  +
mov ecx eax +
xor eax eax +
cmp ecx [edi+18h] +
jz loc_43A7C0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0A0h] +
mov [esp+48h+var_1C] 0 +
mov edx [eax+70h] +
test edx edx +
mov [esp+48h+var_30] edx +
jnz loc_43A8D0  +
mov eax [ebp+4] +
mov edx [edi+28h] +
mov eax [eax+1B0h] +
mov [esp+48h+var_2C] edx +
mov [esp+48h+var_30] eax +
mov eax [eax+174h] +
movzx edx byte ptr [eax+3] +
cmp [esp+48h+var_2C] edx +
jz loc_43A905  +
movzx edx byte ptr [eax+4] +
cmp [esp+48h+var_2C] edx +
jnz loc_43A8E2  +
mov eax [eax+40h] +
mov [esp+48h+var_2C] eax +
lea eax [ebx+ecx] +
cmp ebx eax +
mov [esp+48h+var_28] eax +
jnb loc_43A8F8  +
mov [esp+48h+var_24] edi +
mov edi ebx +
mov ebx [esp+48h+var_1C] +
jmp loc_43A858  +
cmp eax ebx +
jnb loc_43A911  +
movzx eax byte ptr [ecx+9] +
lea eax [eax+eax*2] +
lea esi [esi+eax*4] +
mov eax [esp+48h+var_24] +
add edi [eax+28h] +
cmp [esp+48h+var_28] edi +
jbe loc_43A8F8  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] ebp +
call eax  +
mov edx [esp+48h+var_30] +
mov eax [esi+4] +
mov ecx [edx+174h] +
shr eax 8 +
cmp byte ptr [ecx+0Ah] 40h +
jz loc_43A94F  +
test ebx ebx +
jnz loc_43A835  +
test eax eax +
jz loc_43A83D  +
mov edx [esi] +
mov [esp+48h+var_3C] eax +
mov eax [esp+48h+var_20] +
mov [esp+48h+var_38] 0 +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_34] edx +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_48] offset aBNonZeroSymbol +
call off_47D664  +
mov [esp+48h+var_48] 11h +
call sub_4105E0  +
xor eax eax +
jmp loc_43A7B3  +
mov eax [eax+60h] +
xor edx edx +
div  [esp+48h+var_30] +
mov [esp+48h+var_1C] eax +
jmp loc_43A7DD  +
mov [esp+48h+var_48] 3 +
call sub_4105E0  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+38h] +
mov [esp+48h+var_2C] eax +
jmp loc_43A81A  +
mov edx [esi] +
mov ebx [esp+48h+var_1C] +
mov [esp+48h+var_3C] eax +
mov eax [esp+48h+var_20] +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_34] edx +
mov [esp+48h+var_38] ebx +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_48] offset aBBadRelocSymbo +
call off_47D664  +
mov [esp+48h+var_48] 11h +
call sub_4105E0  +
xor eax eax +
jmp loc_43A7B3  +
test ebx ebx +
jz loc_43A83D  +
xor eax eax +
jmp loc_43A835  +
***
sub esp 1Ch +
mov edx [eax+6Ch] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_10] 0FF00h +
mov [esp+1Ch+var_1C] offset aBTooManySect_0 +
mov [esp+1Ch+var_14] edx +
call off_47D664  +
mov [esp+1Ch+var_1C] 0Fh +
call sub_4105E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 20h +
mov esi [esp+20h+arg_0] +
mov edi [esp+20h+arg_4] +
mov ebx [esp+20h+arg_8] +
mov eax [esi+4] +
mov edx [eax+0A0h] +
mov edx [edx+90Ch] +
test edx edx +
jz loc_43AA93  +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+68h] +
test eax eax +
jz loc_43AA04  +
mov ecx [esp+20h+arg_10] +
mov edx [esi] +
mov [esp+20h+var_18] ebx +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_10] ecx +
mov ecx [esp+20h+arg_C] +
mov [esp+20h+var_20] edx +
mov [esp+20h+var_14] ecx +
call eax  +
cmp eax 1 +
jz loc_43AA04  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test edi edi +
jz loc_43AA1B  +
cmp byte ptr [edi] 0 +
jz loc_43AA1B  +
mov eax [esp+20h+arg_C] +
test byte ptr [eax+15h] 80h +
jz loc_43AAB0  +
mov dword ptr [ebx+8] 0FFFFFFFFh +
mov eax [esi] +
mov edi [eax+1Ch] +
mov eax [edi+58h] +
mov edx [edi+54h] +
cmp eax edx +
jbe loc_43AAE0  +
mov eax [edi+5Ch] +
imul edx edx +
add eax edx +
mov edx [ebx] +
mov [eax] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
mov edx [ebx+0Ch] +
mov [eax+0Ch] edx +
mov edx [ebx+10h] +
mov [eax+10h] edx +
mov edx [edi+54h] +
mov ecx [esi+34h] +
imul eax edx +
add eax [edi+5Ch] +
test ecx ecx +
mov ecx [esi+4] +
mov [eax+14h] edx +
jz loc_43AB07  +
mov ebx [ecx+7Ch] +
mov esi ebx +
mov [eax+18h] ebx +
add edx 1 +
lea eax [esi+1] +
mov [ecx+7Ch] eax +
mov eax 1 +
mov [edi+54h] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+20h+var_1C] 2213h +
mov [esp+20h+var_20] offset a____Binutils_3 +
call sub_410530  +
mov eax [esi+4] +
jmp loc_43A9C9  +
mov eax [esi+8] +
mov [esp+20h+var_18] 0 +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_20] eax +
call sub_455970  +
cmp eax 0FFFFFFFFh +
mov [ebx+8] eax +
jnz loc_43AA22  +
xor eax eax +
jmp loc_43A9FD  +
lea edx [eax+eax] +
mov [edi+58h] edx +
imul eax eax +
mov edx [edi+5Ch] +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] edx +
call sub_412C60  +
test eax eax +
mov [edi+5Ch] eax +
jz loc_43AAD3  +
mov edx [edi+54h] +
jmp loc_43AA38  +
mov esi [ecx+7Ch] +
xor ebx ebx +
jmp loc_43AA78  +
***
jmp sub_43AB20  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+94h] +
mov edx [eax+0A0h] +
mov esi [edx+40h] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call sub_42F700  +
mov eax [esi+eax*4] +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_43AB86  +
mov ecx [ebx+94h] +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
mov edx [eax+164h] +
xor eax eax +
test edx edx +
jz loc_43AB80  +
mov [esp+14h+var_8] eax +
mov [esp+14h+var_C] ebx +
mov [esp+14h+var_10] ecx +
mov [esp+14h+var_14] offset aBWarningSh_l_0 +
call edx  +
mov eax [esp+14h+var_8] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [esi+eax*4] +
mov eax [eax+2Ch] +
mov edx [eax+3Ch] +
mov eax [eax+38h] +
add eax [edx+1Ch] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+8+arg_0] +
mov eax [eax] +
mov eax [eax+10h] +
call sub_43AB20  +
mov ebx eax +
mov eax [esp+8+arg_4] +
mov eax [eax] +
mov eax [eax+10h] +
call sub_43AB20  +
xor ecx ecx +
mov edx 0FFFFFFFFh +
cmp ebx eax +
setnbe cl  +
cmovnb edx ecx +
add esp 8 +
mov eax edx +
pop ebx  +
retn   +
***
push edi  +
mov eax 1 +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
movzx edx byte ptr [esi+33h] +
and edx 0Ah +
cmp dl 8 +
jz loc_43AC02  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp dword ptr [esi+20h] 0FFFFFFFFh +
jz loc_43ABFB  +
mov ecx [esi+40h] +
test ecx ecx +
jz loc_43ABFB  +
mov edx [ecx+14h] +
mov ebx [edx+0A0h] +
test byte ptr [ebx+924h] 0Bh +
jnz loc_43ABFB  +
mov eax [esp+24h] +
mov eax [eax] +
mov edi [eax+30h] +
mov eax [edi+0A0h] +
mov ebx [eax+244h] +
test ebx ebx +
jnz loc_43AC4B  +
jmp loc_43ACD0  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jz loc_43ACD0  +
cmp edx [ebx+10h] +
nop   +
jnz loc_43AC40  +
mov edx [ebx+18h] +
test edx edx +
jz loc_43AC72  +
mov eax [ecx+18h] +
cmp [edx+10h] eax +
jnz loc_43AC68  +
jmp loc_43ACC5  +
cmp [edx+10h] eax +
jz loc_43ACC5  +
mov edx [edx+14h] +
test edx edx +
lea esi [esi+0] +
jnz loc_43AC63  +
mov dword ptr [esp+4] 18h +
mov [esp] edi +
call sub_40E220  +
test eax eax +
jz loc_43AD12  +
mov ecx [esi+40h] +
mov edi [esp+24h] +
mov edx [ecx+18h] +
mov [eax+10h] edx +
movzx edx word ptr [ecx+2] +
mov [eax+4] dx +
mov edx [ebx+18h] +
mov [eax+14h] edx +
mov edx [edi+4] +
mov [ecx+24h] edx +
lea ecx [edx+1] +
add edx 1 +
mov [edi+4] ecx +
mov [eax+6] dx +
mov [ebx+18h] eax +
mov eax 1 +
jmp loc_43ABFB  +
***
mov eax 1 +
jmp loc_43ABFB  +
***
mov dword ptr [esp+4] 20h +
mov [esp] edi +
call sub_40E220  +
test eax eax +
mov ebx eax +
jz loc_43AD12  +
mov eax [esi+40h] +
mov eax [eax+14h] +
mov [ebx+10h] eax +
mov eax [esp+24h] +
mov eax [eax] +
mov edi [eax+30h] +
mov eax [edi+0A0h] +
mov edx [eax+244h] +
mov [ebx+1Ch] edx +
mov [eax+244h] ebx +
jmp loc_43AC72  +
***
mov eax [esp+24h] +
mov dword ptr [eax+8] 1 +
xor eax eax +
jmp loc_43ABFB  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov [esp+5Ch+var_30] edx +
movzx edx byte ptr [ecx+0Ch] +
mov [esp+5Ch+var_24] ecx +
cmp dl 6 +
jnz loc_43AD58  +
mov ecx [ecx+14h] +
movzx edx byte ptr [ecx+0Ch] +
cmp dl 6 +
jz loc_43AD48  +
mov [esp+5Ch+var_24] ecx +
cmp dl 5 +
ja loc_43B033  +
jmp ds:off_499670[edx*4]  +
mov ecx [esp+5Ch+var_24] +
mov edx [ecx+14h] +
mov edx [edx+4] +
mov esi [edx+94h] +
mov [esp+5Ch+var_3C] esi +
mov edi [esp+5Ch+var_3C] +
test edi edi +
jz loc_43B033  +
mov eax [eax] +
mov edi [eax+0D0h] +
test edi edi +
jnz loc_43ADAA  +
jmp loc_43B008  +
mov edi [edi] +
test edi edi +
jz loc_43B008  +
mov ebp [edi+4] +
cmp [esp+5Ch+var_3C] ebp +
jz loc_43ADA0  +
test byte ptr [ebp+29h] 8 +
jz loc_43ADA0  +
mov ecx [ebp+0A0h] +
mov esi [ecx+914h] +
test esi esi +
jz loc_43ADA0  +
mov eax [esp+5Ch+var_30] +
xor edx edx +
xor esi esi +
mov eax [eax] +
movzx ebx byte ptr [eax+5] +
mov eax [ecx+108h] +
div  ebx +
mov ebx [ecx+928h] +
test ebx ebx +
mov [esp+5Ch+var_38] eax +
jnz loc_43ADF7  +
mov esi [ecx+110h] +
sub [esp+5Ch+var_38] esi +
mov edx [esp+5Ch+var_38] +
test edx edx +
jz loc_43ADA0  +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_54] eax +
lea eax [ecx+0F0h] +
mov [esp+5Ch+var_50] esi +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_34] ecx +
call sub_42B780  +
test eax eax +
mov [esp+5Ch+var_28] eax +
jz loc_43B008  +
mov edx [ebp+0A0h] +
mov eax [edx+178h] +
mov [esp+5Ch+var_20] edx +
mov [esp+5Ch+var_5C] eax +
call sub_412BD0  +
test eax eax +
mov [esp+5Ch+var_2C] eax +
jz loc_43B068  +
mov edx [esp+5Ch+var_20] +
mov ecx [edx+170h] +
mov ebx [edx+174h] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_54] ebx +
call sub_411E10  +
mov edx [esp+5Ch+var_20] +
mov ecx [esp+5Ch+var_34] +
test eax eax +
jnz loc_43B05C  +
mov eax [edx+178h] +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_20] ecx +
mov [esp+5Ch+var_34] edx +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call sub_411C00  +
mov edx [esp+5Ch+var_34] +
mov ecx [esp+5Ch+var_20] +
cmp eax [edx+178h] +
jnz loc_43B05C  +
mov eax [esp+5Ch+var_2C] +
mov ebx [esp+5Ch+var_28] +
lea esi [eax+esi*2] +
mov eax [esp+5Ch+var_38] +
lea eax [eax+eax*4] +
lea edx [ebx+eax*4] +
cmp ebx edx +
jnb loc_43B016  +
mov [esp+5Ch+var_38] ebp +
mov ebp esi +
mov esi edx +
mov [esp+5Ch+var_20] edi +
mov edi [esp+5Ch+var_24] +
mov [esp+5Ch+var_34] ecx +
jmp loc_43AF1E  +
add ebx 14h +
add ebp 2 +
cmp esi ebx +
jbe loc_43B012  +
movzx eax byte ptr [ebx+0Ch] +
shr al 4 +
test al al +
jz loc_43AF10  +
mov eax [ebx+10h] +
test eax eax +
jz loc_43AF10  +
mov eax [esp+5Ch+var_34] +
mov edx [ebx+8] +
mov eax [eax+10Ch] +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_5C] eax +
call sub_42B580  +
mov edx [edi+4] +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_5C] eax +
call strcmp  +
test eax eax +
jnz loc_43AF10  +
lea eax [esp+5Ch+var_E] +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_58] ebp +
mov [esp+5Ch+var_5C] eax +
call sub_42B380  +
movzx eax word ptr [esp+5Ch+var_E] +
test ax ax +
js loc_43AF9A  +
test byte ptr [edi+33h] 2 +
jz loc_43B076  +
test byte ptr [edi+34h] 8 +
jz loc_43B076  +
and ax 7FFFh +
sub eax 1 +
cmp ax 1 +
ja loc_43AF10  +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax 1 +
jmp loc_43B00A  +
mov ecx [esp+5Ch+var_24] +
mov edx [ecx+14h] +
mov ecx [edx+94h] +
mov [esp+5Ch+var_3C] ecx +
jmp loc_43AD7C  +
mov ecx [esp+5Ch+var_24] +
mov esi [ecx+14h] +
test byte ptr [esi+29h] 8 +
mov [esp+5Ch+var_3C] esi +
jz loc_43B008  +
mov ecx [esp+5Ch+var_3C] +
mov edx [ecx+0A0h] +
test byte ptr [edx+924h] 2 +
jnz loc_43AD88  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+5Ch+var_20] +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_43ADA0  +
mov [esp+5Ch+var_58] 22D0h +
mov [esp+5Ch+var_5C] offset a____Binutils_3 +
mov [esp+5Ch+var_38] eax +
call sub_410530  +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_3C] 0 +
jmp loc_43AD88  +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_43B008  +
mov [esp+5Ch+var_54] offset aElf_link_check +
mov [esp+5Ch+var_58] 232Ch +
mov [esp+5Ch+var_5C] offset a____Binutils_3 +
call sub_410560  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
mov edi 1 +
push esi  +
push ebx  +
sub esp 7Ch +
mov ebx [esp+0E8h+var_58] +
mov ebp [esp+0E8h+var_54] +
movzx eax byte ptr [ebx+34h] +
mov esi [ebp+0Ch] +
test al 8 +
jnz loc_43B0DA  +
mov edx [esi] +
movzx edx byte ptr [edx] +
mov ecx edx +
and ecx 3 +
cmp cl 1 +
jbe loc_43B300  +
xor edi edi +
cmp byte ptr [ebx+0Ch] 7 +
jz loc_43B205  +
mov ecx [ebp+4] +
test ecx ecx +
jnz loc_43B1A0  +
test edi edi +
jnz loc_43B1A8  +
mov eax [esi+4] +
cmp byte ptr [ebx+0Ch] 1 +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+0E8h+var_C4] eax +
jz loc_43B234  +
mov eax [esi] +
movzx edx byte ptr [eax] +
and edx 3 +
cmp dl 1 +
jbe loc_43B880  +
cmp dword ptr [ebx+1Ch] 0FFFFFFFEh +
jz loc_43B870  +
movzx eax byte ptr [ebx+33h] +
test al 0Ch +
jz loc_43B1B5  +
test al 3 +
jnz loc_43B1BF  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
movzx ecx byte ptr [ebx+30h] +
jz loc_43B810  +
movzx eax byte ptr [ebx+0Ch] +
mov [esp+0E8h+var_BC] 1 +
mov edx [ebx+2Ch] +
and ecx 0Fh +
test edi edi +
mov [esp+0E8h+var_A0] 0 +
mov [esp+0E8h+var_9C] edx +
movzx edx byte ptr [ebx+31h] +
mov [esp+0E8h+var_93] dl +
jz loc_43B214  +
and edx 0FFFFFFFCh +
mov [esp+0E8h+var_94] cl +
mov [esp+0E8h+var_93] dl +
movzx edx byte ptr [ebx+32h] +
cmp al 6 +
mov [esp+0E8h+var_92] dl +
ja loc_43B828  +
jmp ds:off_499810[eax*4]  +
test edi edi +
jnz loc_43B0F7  +
mov eax 1 +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+0Ch] 0 +
jz loc_43B138  +
mov edx [esi] +
movzx eax byte ptr [edx+1] +
and eax 18h +
cmp al 18h +
jz loc_43B140  +
cmp al 10h +
jz loc_43BA50  +
movzx eax byte ptr [ebx+0Ch] +
lea edx [eax-3] +
cmp dl 1 +
jbe loc_43B9E0  +
lea edx [eax-1] +
cmp dl 1 +
jbe loc_43BA27  +
movzx ecx byte ptr [ebx+30h] +
mov [esp+0E8h+var_BC] 0 +
jmp loc_43B15A  +
mov ebx [ebx+14h] +
cmp byte ptr [ebx+0Ch] 0 +
jnz loc_43B0E4  +
jmp loc_43B1A8  +
test byte ptr [ebx+35h] 4 +
jz loc_43B330  +
test byte ptr [ebx+33h] 2 +
jz loc_43B330  +
sub ecx 60h +
mov [esp+0E8h+var_94] cl +
jmp loc_43B187  +
mov eax [eax+0ECh] +
test eax eax +
jz loc_43B24B  +
mov [esp+0E8h+var_E8] ebx +
call eax  +
test eax eax +
jnz loc_43B111  +
movzx eax byte ptr [ebx+33h] +
test al 4 +
jz loc_43B111  +
test al 1 +
mov eax [esi] +
jz loc_43B269  +
movzx edx byte ptr [eax] +
test dl 40h +
jz loc_43B116  +
mov edx [eax+1Ch] +
cmp dword ptr [edx+28h] 1 +
jz loc_43BBC5  +
movzx edx byte ptr [eax+2] +
and edx 18h +
cmp dl 8 +
jz loc_43B113  +
mov ecx [eax+18h] +
mov ecx [ecx+18h] +
mov [esp+0E8h+var_C0] ecx +
xor ecx ecx +
cmp dl 18h +
setz cl  +
xor edx edx +
test byte ptr [ebx+33h] 1 +
mov [esp+0E8h+var_BC] ecx +
jnz loc_43B2A7  +
mov edx [ebx+14h] +
mov ecx [ebx+4] +
mov [esp+0E8h+var_E8] eax +
mov eax [esp+0E8h+var_C0] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_B8] ecx +
mov ecx [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_D4] ecx +
mov ecx [esp+0E8h+var_B8] +
mov [esp+0E8h+var_E4] ecx +
call eax  +
test eax eax +
jnz loc_43B111  +
mov [esp+0E8h+var_E8] 11h +
call sub_4105E0  +
nop   +
mov dword ptr [ebp+0] 1 +
xor eax eax +
jmp loc_43B1AD  +
or edx eax +
and edx 10h +
jnz loc_43B0D8  +
movzx edx byte ptr [ebx+33h] +
and edx 6 +
cmp dl 2 +
jnz loc_43B0D8  +
and eax 6 +
cmp al 6 +
jz loc_43B0DA  +
xor edi edi +
jmp loc_43B0DA  +
cmp al 4 +
jz loc_43B844  +
cmp al 2 +
jz loc_43B844  +
add ecx 10h +
mov [esp+0E8h+var_94] cl +
jmp loc_43B187  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+94h] +
test eax eax +
jz loc_43B378  +
test byte ptr [eax+29h] 8 +
jnz loc_43B378  +
mov [esp+0E8h+var_E4] 2429h +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_410530  +
mov eax [esi] +
mov [esp+0E8h+var_90] 0 +
movzx ecx byte ptr [eax] +
mov [esp+0E8h+var_B8] offset off_47D468 +
mov byte ptr [esp+0E8h+var_C0] cl +
mov edx [ebx+30h] +
and edx 20000FFh +
cmp edx 200000Ah +
jz loc_43B921  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_43B937  +
test byte ptr [esp+0E8h+var_C0] 1 +
jz loc_43B850  +
test byte ptr [ebx+31h] 3 +
jz loc_43B3CB  +
cmp byte ptr [ebx+0Ch] 2 +
jz loc_43B850  +
mov edx [eax+1Ch] +
mov edx [edx+30h] +
test edx edx +
jz loc_43B410  +
mov ecx [esp+0E8h+var_C4] +
mov edx [ecx+98h] +
mov ecx [esi+4] +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_C0] ecx +
lea ecx [esp+0E8h+var_A0] +
mov [esp+0E8h+var_DC] ecx +
mov ecx [esp+0E8h+var_C0] +
mov [esp+0E8h+var_E8] ecx +
call edx  +
test eax eax +
jz loc_43B2F0  +
mov eax [esi] +
movzx ecx byte ptr [eax] +
mov byte ptr [esp+0E8h+var_C0] cl +
mov edx [esp+0E8h+var_90] +
test edx edx +
mov [esp+0E8h+var_B4] edx +
jnz loc_43B44C  +
movzx edx byte ptr [ebx+33h] +
test dl 1 +
jz loc_43B440  +
mov ecx eax +
movzx eax [esp+0E8h+var_94] +
mov byte ptr [esp+0E8h+var_B0] al +
shr al 4 +
sub eax 1 +
cmp al 1 +
mov eax ecx +
jbe loc_43B99A  +
and edx 0Ah +
cmp dl 8 +
jz loc_43BA41  +
movzx ecx byte ptr [esp+0E8h+var_C0] +
and ecx 3 +
cmp cl 2 +
mov byte ptr [esp+0E8h+var_C0] cl +
jz loc_43B480  +
movzx ecx [esp+0E8h+var_93] +
and ecx 3 +
mov edx ecx +
jz loc_43B480  +
movzx ecx [esp+0E8h+var_94] +
shr cl 4 +
cmp cl 2 +
jz loc_43B480  +
cmp byte ptr [ebx+0Ch] 1 +
jz loc_43B946  +
mov eax [eax+1Ch] +
mov ecx [eax+0F8h] +
test ecx ecx +
jz loc_43B650  +
mov edx [ebx+20h] +
cmp edx 0FFFFFFFFh +
mov [esp+0E8h+var_B0] edx +
jz loc_43B650  +
mov eax [eax+30h] +
test eax eax +
jz loc_43B650  +
mov eax [ebx+40h] +
test eax eax +
jz loc_43BAA7  +
mov eax [ebx+38h] +
mov edi [esp+0E8h+var_B4] +
mov [esp+0E8h+var_98] eax +
mov eax [ecx+6Ch] +
sub edi 0FF00h +
cmp edi 0FFFEFFFFh +
mov [esp+0E8h+var_C0] eax +
mov eax [esp+0E8h+var_C4] +
mov edx [eax+174h] +
mov eax [esi+4] +
movzx ecx byte ptr [edx+5] +
jbe loc_43BA80  +
movzx edi cl +
mov edx [edx+24h] +
imul edi [esp+0E8h+var_B0] +
add edi [esp+0E8h+var_C0] +
lea ecx [esp+0E8h+var_A0] +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] edi +
mov [esp+0E8h+var_E8] eax +
call edx  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_43B5D8  +
mov eax [esi] +
xor edx edx +
mov eax [eax+1Ch] +
mov eax [eax+60h] +
mov edi eax +
mov [esp+0E8h+var_C0] eax +
mov eax [ecx+8Ch] +
mov eax [eax+28h] +
mov [esp+0E8h+var_C4] eax +
mov eax [ebx+3Ch] +
div  edi +
mov eax [esp+0E8h+var_C4] +
lea edi [edx+2] +
imul edi eax +
shl eax 3 +
add edi [ecx+6Ch] +
cmp eax 8 +
jz loc_43BB41  +
cmp eax 10h +
jz loc_43BC0C  +
cmp eax 20h +
jz loc_43BC64  +
cmp eax 40h +
nop   +
jnz loc_43BCEB  +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+1Ch] +
mov [esp+0E8h+var_E8] edi +
call eax  +
mov [esp+0E8h+var_B4] eax +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+24h] +
mov [esp+0E8h+var_E0] edi +
mov edx [ebx+20h] +
mov [esp+0E8h+var_E8] edx +
sar edx 1Fh +
mov [esp+0E8h+var_E4] edx +
call eax  +
mov eax [esi+4] +
mov edx [ebx+20h] +
mov edi [esp+0E8h+var_C0] +
mov ecx [esi+0Ch] +
mov eax [eax+4] +
lea edx [edi+edx+2] +
mov edi [esp+0E8h+var_B4] +
imul edx [esp+0E8h+var_C4] +
add edx [ecx+6Ch] +
mov eax [eax+24h] +
mov [esp+0E8h+var_E8] edi +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] 0 +
call eax  +
mov eax [esi+10h] +
test eax eax +
jz loc_43B650  +
mov eax [eax+6Ch] +
test eax eax +
jz loc_43B650  +
movzx edi byte ptr [ebx+33h] +
mov edx [ebx+40h] +
test edi 2 +
jnz loc_43BB10  +
test edx edx +
jz loc_43BBA4  +
mov ecx [edx+14h] +
mov ecx [ecx+0A0h] +
test byte ptr [ecx+924h] 0Bh +
jnz loc_43BBA4  +
mov edx [edx+24h] +
add edx 1 +
mov word ptr [esp+0E8h+var_8C] dx +
movzx edx byte ptr [ebx+34h] +
and edx 6 +
cmp dl 6 +
jz loc_43BBB0  +
mov ecx [ebx+20h] +
mov edx [esi+4] +
lea eax [eax+ecx*2] +
mov [esp+0E8h+var_E0] eax +
lea eax [esp+0E8h+var_8C] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] edx +
call sub_42B3B0  +
nop   +
mov eax [esp+0E8h+var_BC] +
test eax eax +
jnz loc_43B1A8  +
mov eax [esp+0E8h+var_B8] +
test byte ptr [eax+15h] 80h +
jnz loc_43B1A8  +
mov edi [ebp+4] +
test edi edi +
jz loc_43B6E6  +
mov ecx [ebp+8] +
test ecx ecx +
jnz loc_43B6E6  +
mov eax [ebp+0Ch] +
mov edx [eax+38h] +
test edx edx +
jz loc_43B6E6  +
lea edx [esp+0E8h+var_8C] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] offset off_47D468 +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] 0 +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_80] 0 +
mov [esp+0E8h+var_8C] 0 +
mov [esp+0E8h+var_88] 0 +
mov [esp+0E8h+var_84] 0 +
mov byte ptr [esp+0E8h+var_80] 4 +
mov [esp+0E8h+var_7C] 0FFFFFFF1h +
call sub_43A9A0  +
test eax eax +
jz loc_43B1AD  +
mov dword ptr [ebp+8] 1 +
mov eax [esi+4] +
lea edx [esp+0E8h+var_A0] +
mov ecx [esp+0E8h+var_B8] +
mov edi [eax+7Ch] +
mov eax [ebx+4] +
mov [esp+0E8h+var_D8] ebx +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] esi +
call sub_43A9A0  +
test eax eax +
jz loc_43B860  +
cmp eax 1 +
jz loc_43BB39  +
cmp dword ptr [ebx+1Ch] 0FFFFFFFEh +
jnz loc_43B1A8  +
mov [esp+0E8h+var_E0] offset aElf_link_outpu +
mov [esp+0E8h+var_E4] 251Bh +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_410560  +
mov eax [ebx+14h] +
mov [esp+0E8h+var_B8] eax +
mov eax [eax+3Ch] +
test eax eax +
jz loc_43B350  +
mov edx [esi+4] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] edx +
call sub_42F700  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_90] eax +
jz loc_43BB67  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+38h] +
mov ecx eax +
mov eax [ebx+18h] +
add ecx eax +
mov eax [esi] +
mov [esp+0E8h+var_A0] ecx +
movzx edx byte ptr [eax] +
mov byte ptr [esp+0E8h+var_C0] dl +
and edx 3 +
cmp dl 2 +
jz loc_43B391  +
mov edx [esp+0E8h+var_B8] +
mov edx [edx+3Ch] +
add ecx [edx+1Ch] +
cmp byte ptr [ebx+30h] 6 +
mov [esp+0E8h+var_A0] ecx +
jnz loc_43B391  +
mov edx [eax+1Ch] +
mov edx [edx+0C8h] +
test edx edx +
jz loc_43B391  +
sub ecx [edx+1Ch] +
mov [esp+0E8h+var_A0] ecx +
jmp loc_43B391  +
mov eax [ebx+14h] +
mov eax [eax+4] +
mov ecx eax +
mov [esp+0E8h+var_B8] eax +
mov eax [esp+0E8h+var_C4] +
mov eax [eax+148h] +
mov [esp+0E8h+var_E8] ecx +
call eax  +
mov [esp+0E8h+var_90] eax +
mov eax [ebx+14h] +
mov ecx [eax] +
mov eax 1 +
shl eax cl +
mov [esp+0E8h+var_A0] eax +
mov eax [esi] +
movzx ecx byte ptr [eax] +
mov byte ptr [esp+0E8h+var_C0] cl +
jmp loc_43B391  +
cmp cl 0Ah +
jz loc_43B14E  +
test byte ptr [ebx+34h] 8 +
jnz loc_43B14E  +
jmp loc_43B1A8  +
mov [esp+0E8h+var_E0] offset aElf_link_outpu +
mov [esp+0E8h+var_E4] 23FBh +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_410560  +
add ecx 20h +
mov [esp+0E8h+var_94] cl +
jmp loc_43B187  +
test byte ptr [ebx+34h] 8 +
jnz loc_43B410  +
jmp loc_43B3CB  +
mov dword ptr [ebp+0] 1 +
jmp loc_43B1AD  +
movzx eax byte ptr [ebx+0Ch] +
jmp loc_43B1F4  +
test byte ptr [ebx+34h] 8 +
jz loc_43B122  +
movzx edx byte ptr [ebx+33h] +
and edx 6 +
cmp dl 6 +
jnz loc_43B122  +
movzx edx word ptr [ebx+34h] +
and dx 180h +
cmp dx 100h +
jnz loc_43B122  +
mov edx [eax+1Ch] +
cmp dword ptr [edx+28h] 1 +
jz loc_43BCC3  +
cmp byte ptr [ebx+0Ch] 6 +
mov eax ebx +
jnz loc_43B8CC  +
mov eax [eax+14h] +
cmp byte ptr [eax+0Ch] 6 +
jz loc_43B8C3  +
movzx ecx byte ptr [ebx+31h] +
mov edx offset aBInternalSymbo +
and ecx 3 +
cmp cl 1 +
jz loc_43B8ED  +
cmp cl 2 +
mov edx offset aBHiddenSymbolS +
mov ecx offset aBLocalSymbolSI +
cmovnz edx ecx +
mov eax [eax+14h] +
mov ecx [esi+4] +
cmp eax offset off_47D510 +
jz loc_43BCE4  +
mov eax [eax+94h] +
mov ebx [ebx+4] +
mov [esp+0E8h+var_E0] eax +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] edx +
mov [esp+0E8h+var_DC] ebx +
call off_47D664  +
jmp loc_43B2E3  +
movzx edx byte ptr [esp+0E8h+var_C0] +
and edx 3 +
cmp dl 2 +
jnz loc_43B3D5  +
jmp loc_43B3A6  +
test byte ptr [ebx+34h] 8 +
jz loc_43B410  +
jmp loc_43B3B0  +
test byte ptr [ebx+33h] 2 +
jnz loc_43B480  +
cmp dl 3 +
jz loc_43BC96  +
cmp dl 1 +
mov eax offset aBInternalSym_0 +
mov edx offset aBHiddenSymbo_0 +
cmovnz eax edx +
mov ecx [ebx+4] +
mov edx [esi+4] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] edx +
call off_47D664  +
mov [esp+0E8h+var_E8] 11h +
call sub_4105E0  +
xor eax eax +
mov dword ptr [ebp+0] 1 +
jmp loc_43B1AD  +
movzx eax byte ptr [esp+0E8h+var_B0] +
mov [esp+0E8h+var_AC] ecx +
mov ecx edx +
and eax 0Fh +
movzx edx al +
cmp edx 0Ah +
mov edx 2 +
cmovz eax edx +
mov byte ptr [esp+0E8h+var_B0] al +
mov eax ecx +
and eax 10h +
cmp al 1 +
sbb eax eax +
mov edx eax +
movzx eax byte ptr [esp+0E8h+var_B0] +
and edx 10h +
lea eax [eax+edx+10h] +
mov edx ecx +
mov [esp+0E8h+var_94] al +
mov eax [esp+0E8h+var_AC] +
jmp loc_43B440  +
mov edx [esi] +
test byte ptr [edx+1] 2 +
mov edx [ebx+14h] +
jz loc_43BA00  +
cmp edx offset off_47D510 +
jz loc_43BA00  +
cmp dword ptr [edx+3Ch] offset off_47D510 +
jz loc_43BBE8  +
test byte ptr [edx+16h] 10h +
jnz loc_43B1E8  +
mov edx [edx+94h] +
test edx edx +
jz loc_43B1E8  +
test byte ptr [edx+2Ah] 20h +
jnz loc_43B140  +
jmp loc_43B1E8  +
mov edx [ebx+14h] +
test edx edx +
jz loc_43B1F4  +
test byte ptr [edx+2Ah] 20h +
jnz loc_43B140  +
jmp loc_43B1F4  +
mov [esp+0E8h+var_9C] 0 +
jmp loc_43B44C  +
mov ecx [ebx+4] +
mov eax [edx+20h] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] eax +
call sub_4123C0  +
test eax eax +
jnz loc_43B1D8  +
jmp loc_43B140  +
mov [esp+0E8h+var_B4] ecx +
call sub_43A960  +
mov ecx [esp+0E8h+var_B4] +
test eax eax +
jz loc_43B860  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax+174h] +
mov eax [esi+4] +
jmp loc_43B4EC  +
test edi edi +
jnz loc_43B4B7  +
cmp byte ptr [esp+0E8h+var_C0] 1 +
jbe loc_43BCA0  +
mov edi [ebx+4] +
mov [esp+0E8h+var_E4] 40h +
mov [esp+0E8h+var_C0] ecx +
mov [esp+0E8h+var_E8] edi +
call strrchr  +
mov ecx [esp+0E8h+var_C0] +
test eax eax +
jz loc_43B4B7  +
cmp byte ptr [eax+1] 0 +
jz loc_43B4B7  +
mov eax [esi+4] +
mov [esp+0E8h+var_E0] edi +
mov [esp+0E8h+var_E8] offset aBNoSymbolVersi +
mov [esp+0E8h+var_E4] eax +
call off_47D664  +
xor eax eax +
mov dword ptr [ebp+0] 1 +
jmp loc_43B1AD  +
test edx edx +
jz loc_43BCB4  +
mov edx [edx+8] +
add edx 1 +
mov word ptr [esp+0E8h+var_8C] dx +
mov edx [esi] +
test byte ptr [edx] 20h +
jz loc_43B622  +
add word ptr [esp+0E8h+var_8C] 1 +
jmp loc_43B622  +
mov [ebx+1Ch] edi +
jmp loc_43B1AD  +
mov eax [ebx+20h] +
movzx edx byte ptr [edi] +
mov [edi] al +
mov edi [esp+0E8h+var_C0] +
mov ecx [esi+0Ch] +
mov eax [ebx+20h] +
mov ecx [ecx+6Ch] +
lea eax [edi+eax+2] +
imul eax [esp+0E8h+var_C4] +
mov [ecx+eax] dl +
jmp loc_43B5D8  +
mov edi [esp+0E8h+var_B8] +
mov eax [esi+4] +
mov edx [edi+3Ch] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_DC] edi +
mov [esp+0E8h+var_E8] offset aBCouldNotFindO +
mov [esp+0E8h+var_E0] edx +
call off_47D664  +
mov [esp+0E8h+var_E8] 0Fh +
call sub_4105E0  +
xor eax eax +
mov dword ptr [ebp+0] 1 +
jmp loc_43B1AD  +
xor ecx ecx +
mov word ptr [esp+0E8h+var_8C] cx +
jmp loc_43B622  +
and edi 2 +
jz loc_43B632  +
or word ptr [esp+0E8h+var_8C] 8000h +
jmp loc_43B632  +
mov ecx [esp+0E8h+var_C4] +
add eax 1Ch +
lea edx [ecx+174h] +
mov ecx ebx +
call sub_43AD30  +
test eax eax +
mov eax [esi] +
jnz loc_43B113  +
jmp loc_43B276  +
movzx ecx word ptr [edx+18h] +
and cx 380h +
cmp cx 100h +
jz loc_43BA00  +
cmp cx 200h +
jnz loc_43B140  +
jmp loc_43BA00  +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+0E8h+var_E8] edi +
call eax  +
mov [esp+0E8h+var_B4] eax +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+3Ch] +
mov [esp+0E8h+var_E4] edi +
mov edx [ebx+20h] +
mov [esp+0E8h+var_E8] edx +
call eax  +
mov eax [esi+4] +
mov eax [eax+4] +
mov edx [eax+3Ch] +
mov eax [ebx+20h] +
mov edi [esp+0E8h+var_C0] +
mov ecx [esi+0Ch] +
lea eax [edi+eax+2] +
imul eax [esp+0E8h+var_C4] +
add eax [ecx+6Ch] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B4] +
mov [esp+0E8h+var_E8] eax +
call edx  +
jmp loc_43B5D8  +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+0E8h+var_E8] edi +
call eax  +
mov [esp+0E8h+var_B4] eax +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+0E8h+var_E4] edi +
mov edx [ebx+20h] +
mov [esp+0E8h+var_E8] edx +
call eax  +
mov eax [esi+4] +
mov eax [eax+4] +
mov edx [eax+30h] +
jmp loc_43BC3C  +
mov eax offset aBProtectedSymb +
jmp loc_43B969  +
movzx eax byte ptr [ebx+33h] +
and eax 6 +
cmp al 2 +
jnz loc_43BABA  +
jmp loc_43B4B7  +
mov edx 1 +
mov word ptr [esp+0E8h+var_8C] dx +
jmp loc_43BB23  +
mov ecx [esp+0E8h+var_C4] +
add eax 1Ch +
lea edx [ecx+174h] +
mov ecx ebx +
call sub_43AD30  +
test eax eax +
jnz loc_43B122  +
jmp loc_43B8BB  +
mov eax ecx +
jmp loc_43B904  +
mov [esp+0E8h+var_E0] offset aElf_link_outpu +
mov [esp+0E8h+var_E4] 24C9h +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_410560  +
mov esi esi +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
test edx edx +
mov [esp+124h+var_108] ecx +
jz loc_43BD9F  +
mov ebp eax +
mov esi edx +
jmp loc_43BD2E  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_43BD56  +
mov [esp+124h+var_120] ebp +
mov eax [esi] +
mov [esp+124h+var_124] eax +
call strcmp  +
test eax eax +
jnz loc_43BD27  +
mov eax [esi+1Ch] +
mov edx [esp+124h+var_108] +
mov [edx] eax +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+124h+var_124] ebp +
call strlen  +
mov [esp+124h+var_10C] eax +
mov esi [ebx] +
mov [esp+124h+var_124] esi +
call strlen  +
cmp eax [esp+124h+var_10C] +
mov edi eax +
ja loc_43BD98  +
mov [esp+124h+var_11C] eax +
mov [esp+124h+var_120] ebp +
mov [esp+124h+var_124] esi +
call strncmp  +
test eax eax +
jnz loc_43BD98  +
add edi ebp +
mov esi offset a_end +
mov ecx 4 +
cmps   +
jz loc_43BDA9  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_43BD62  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+24h] +
mov ecx [esp+124h+var_108] +
add eax [ebx+1Ch] +
mov [ecx] eax +
mov eax 1 +
jmp loc_43BD4E  +
***
push ebx  +
mov ebx edx +
sub esp 10h +
mov esi [edx] +
mov ecx [edx+4] +
imul ecx [esi+28h] +
mov [esi+18h] ecx +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] eax +
call sub_40E220  +
test eax eax +
mov [esi+30h] eax +
jz loc_43BE20  +
mov eax [ebx+0Ch] +
mov edi 1 +
test eax eax +
jz loc_43BE00  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+4] +
test eax eax +
jz loc_43BDF3  +
shl eax 2 +
mov [esp+10h+var_10] eax +
call sub_412D60  +
test eax eax +
jz loc_43BE2B  +
mov [ebx+0Ch] eax +
jmp loc_43BDF3  +
mov edx [esi+18h] +
xor edi edi +
test edx edx +
jz loc_43BDE7  +
jmp loc_43BDF3  +
xor edi edi +
jmp loc_43BDF3  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_43BF15  +
mov eax [esi+4] +
mov eax [eax+154h] +
mov [esp+1Ch+var_1C] ebx +
call eax  +
test eax eax +
jz loc_43BF15  +
movzx eax byte ptr [ebx+34h] +
mov ebp [ebx+4] +
shr al 1 +
and eax 3 +
cmp eax 1 +
jle loc_43BF22  +
mov [esp+1Ch+var_18] 40h +
mov [esp+1Ch+var_1C] ebp +
call strchr  +
test eax eax +
jz loc_43BF22  +
sub eax ebp +
mov [esp+1Ch+var_10] eax +
add eax 1 +
mov [esp+1Ch+var_1C] eax +
call sub_412BD0  +
test eax eax +
mov edi eax +
jz loc_43BF26  +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] ebp +
mov ebp edi +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_14] eax +
call memcpy  +
mov eax [esp+1Ch+var_10] +
mov byte ptr [edi+eax] 0 +
mov [esp+1Ch+var_1C] ebp +
call sub_42B410  +
mov ecx [esi+8] +
mov edx [esi+10h] +
mov [edx+ecx*4] eax +
mov edx [esi+14h] +
mov ecx [ebx+20h] +
mov [edx+ecx*4] eax +
mov eax [esi+28h] +
add dword ptr [esi+8] 1 +
mov edx [ebx+20h] +
test eax eax +
js loc_43BEF1  +
cmp eax edx +
jle loc_43BEF4  +
mov [esi+28h] edx +
test edi edi +
mov eax 1 +
jz loc_43BF1A  +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
jmp loc_43BEC5  +
mov dword ptr [esi+44h] 1 +
xor eax eax +
jmp loc_43BF1A  +
***
jmp sub_43BF40  +
***
mov ebx [esp+18h+arg_0] +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_43BF64  +
mov eax [ebx+38h] +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_455C40  +
mov [ebx+38h] eax +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 14h +
mov eax [edx+8] +
test eax eax +
jz loc_43BF88  +
mov [esp+18h+var_18] eax +
call sub_455940  +
mov eax [ebx+14h] +
test eax eax +
jz loc_43BF97  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+18h] +
test eax eax +
jz loc_43BFA6  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_43BFB5  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+20h] +
test eax eax +
jz loc_43BFC4  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+24h] +
test eax eax +
jz loc_43BFD3  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+28h] +
test eax eax +
jz loc_43BFE2  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_43BFF1  +
mov [esp+18h+var_18] eax +
call free  +
mov edx [ebx+30h] +
test edx edx +
jz loc_43C000  +
mov [esp+18h+var_18] edx +
call free  +
mov edx [ebx+34h] +
test edx edx +
jz loc_43C00F  +
mov [esp+18h+var_18] edx +
call free  +
mov ebx [esi] +
test ebx ebx +
jz loc_43C04C  +
test byte ptr [ebx+14h] 4 +
mov esi [ebx+8Ch] +
jz loc_43C045  +
mov eax [esi+48h] +
test eax eax +
jz loc_43C036  +
mov [esp+18h+var_18] eax +
call free  +
test byte ptr [ebx+14h] 4 +
jz loc_43C045  +
mov eax [esi+58h] +
test eax eax +
jz loc_43C045  +
mov [esp+18h+var_18] eax +
call free  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_43C015  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_0] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_43C080  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov eax [ebx+14h] +
test byte ptr [eax+16h] 80h +
jz loc_43C073  +
movzx edx word ptr [eax+18h] +
and dx 380h +
cmp dx 100h +
jnz loc_43C073  +
mov eax [eax+8Ch] +
mov edx [ebx+18h] +
mov eax [eax+88h] +
mov [esp+18h+var_C] edx +
mov [esp+18h+var_10] eax +
lea eax [ebx+14h] +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_4582D0  +
mov [ebx+18h] eax +
jmp loc_43C073  +
***
push esi  +
mov esi edx +
push ebx  +
mov edx offset a_rel_0 +
sub esp 1Ch +
mov ebx offset a_rela_0 +
test ecx ecx +
cmovz ebx edx +
test esi esi +
jz loc_43C134  +
mov [esp+20h+var_20] ebx +
mov edi eax +
call strlen  +
mov [esp+20h+var_20] esi +
mov ebp eax +
call strlen  +
mov [esp+20h+var_20] edi +
lea eax [ebp+eax+1] +
mov [esp+20h+var_1C] eax +
call sub_40E140  +
mov [esp+20h+var_14] esi +
mov [esp+20h+var_18] ebx +
mov [esp+20h+var_1C] offset aSS_5 +
mov edi eax +
mov [esp+20h+var_20] eax +
call sprintf  +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_43C12C  +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+44h+arg_C] +
mov [esp+44h+var_30] eax +
mov eax [edx+0A0h] +
mov [esp+44h+var_28] ecx +
mov ebp [esp+44h+arg_8] +
test ebx ebx +
mov [esp+44h+var_2C] eax +
jz loc_43C211  +
mov esi ebp +
mov ebp edi +
mov edi edx +
jmp loc_43C181  +
add ebp 1 +
add esi 14h +
cmp ebp ebx +
jz loc_43C211  +
movzx eax byte ptr [esi+0Ch] +
shr al 4 +
test al al +
jnz loc_43C173  +
mov eax [esp+44h+var_2C] +
mov ecx [esi+8] +
mov eax [eax+64h] +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_40] eax +
call sub_42B580  +
test eax eax +
jz loc_43C173  +
mov edx [esp+44h+var_30] +
mov [esp+44h+var_44] eax +
mov [esp+44h+var_40] edx +
call strcmp  +
test eax eax +
jnz loc_43C173  +
mov eax edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
mov eax [esp+44h+arg_0] +
mov eax [eax] +
mov eax [eax+edi*4] +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] esi +
mov [esp+44h+var_18] eax +
lea eax [esp+44h+var_18] +
mov [esp+44h+var_3C] eax +
call sub_438D20  +
mov edx [esp+44h+var_18] +
mov edi [esp+44h+arg_4] +
mov ecx [edx+3Ch] +
mov [edi] eax +
add eax [ecx+1Ch] +
add eax [edx+38h] +
mov [edi] eax +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+44h+var_28] +
mov edi [esp+44h+var_30] +
mov eax [eax] +
mov eax [eax+1Ch] +
mov [esp+44h+var_34] 1 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_3C] 0 +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_44] eax +
call sub_423EB0  +
test eax eax +
mov edx eax +
jz loc_43C278  +
movzx eax byte ptr [eax+0Ch] +
lea ecx [eax-3] +
xor eax eax +
cmp cl 1 +
ja loc_43C209  +
mov ecx [edx+14h] +
mov edi [esp+44h+arg_4] +
mov eax [ecx+3Ch] +
mov eax [eax+1Ch] +
add eax [edx+18h] +
add eax [ecx+38h] +
mov [edi] eax +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_43C209  +
***
push esi  +
push ebx  +
push eax  +
mov eax 1048h +
call sub_47A1D0  +
sub esp eax +
mov ebx [edx] +
mov ebp edx +
mov eax [esp+14h+arg_1030] +
mov [esp+14h+arg_C] ecx +
mov [esp+14h+var_14] ebx +
mov [esp+14h+arg_8] eax +
call strlen  +
mov ecx eax +
lea eax [eax-1] +
cmp eax 0FFFh +
ja loc_43C317  +
movzx edx byte ptr [ebx] +
cmp dl 2Eh +
jz loc_43C4A0  +
jle loc_43C330  +
cmp dl 53h +
jz loc_43C4C3  +
cmp dl 73h +
mov [esp+14h+arg_14] 0 +
jnz loc_43C415  +
lea eax [ebx+1] +
mov [esp+14h+var_C] 0Ah +
mov [esp+14h+var_10] ebp +
mov [esp+14h+var_14] eax +
mov [esp+14h+arg_10] ecx +
call strtol  +
mov ecx [esp+14h+arg_10] +
add ebx ecx +
mov esi eax +
mov eax [ebp+0] +
lea edi [eax+1] +
cmp edi ebx +
ja loc_43C317  +
lea eax [esi+1] +
cmp eax 1000h +
jbe loc_43C366  +
mov [esp+14h+var_14] 5 +
call sub_4105E0  +
xor eax eax +
add esp 104Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dl 23h +
jnz loc_43C415  +
add ebx 1 +
mov [esp+14h+var_10] ebp +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_C] 10h +
call strtoul  +
mov esi [esp+14h+arg_8] +
mov [esi] eax +
add esp 104Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [esp+14h+arg_28] +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] edi +
mov [esp+14h+var_14] ebx +
call memcpy  +
mov byte ptr [esp+esi+14h+arg_28] 0 +
add esi edi +
mov [ebp+0] esi +
mov esi [esp+14h+arg_14] +
test esi esi +
jz loc_43C5D0  +
mov eax [esp+14h+arg_1048] +
mov ecx [esp+14h+arg_8] +
mov eax [eax+4] +
mov edx [eax+64h] +
mov eax ebx +
call loc_43BD10  +
test eax eax +
jnz loc_43C615  +
mov eax [esp+14h+arg_1054] +
mov ecx [esp+14h+arg_1048] +
mov edx [esp+14h+arg_C] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_8] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
add eax 30h +
mov [esp+14h+var_14] eax +
mov eax ebx +
call sub_43C140  +
test eax eax +
jnz loc_43C615  +
mov [esp+14h+var_C] ebx +
mov [esp+14h+var_10] offset aSection +
mov [esp+14h+var_14] offset aUndefinedSRefe +
call off_47D664  +
xor eax eax +
jmp loc_43C325  +
mov edi offset a0_0 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_43C4D0  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
neg eax  +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
mov eax [esp+14h+arg_8] +
add ebx 1 +
mov edi [esp+14h+arg_104C] +
mov [eax] edi +
mov eax 1 +
mov [ebp+0] ebx +
add esp 104Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+14h+arg_14] 1 +
jmp loc_43C2E0  +
mov edi offset asc_499883 +
mov ecx 2 +
mov esi ebx +
cmps   +
jz loc_43C620  +
mov edi offset asc_499886 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_43C6E8  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov edx [esp+14h+arg_1058] +
mov eax [esp+14h+arg_24] +
mov ecx [esp+14h+arg_28] +
test edx edx +
jz loc_43CAB4  +
mov edi [esp+14h+arg_8] +
sar eax cl +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
mov eax [esp+14h+arg_1054] +
mov ecx [esp+14h+arg_1048] +
mov edx [esp+14h+arg_C] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_8] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
add eax 30h +
mov [esp+14h+var_14] eax +
mov eax ebx +
call sub_43C140  +
test eax eax +
jz loc_43C7C3  +
mov eax 1 +
jmp loc_43C325  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_24] +
mov ecx [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
shl eax cl +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
mov edi offset asc_499889 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_43C803  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_28] +
cmp [esp+14h+arg_24] eax +
setz al  +
movzx eax al +
mov edi [esp+14h+arg_8] +
mov [edi] eax +
jmp loc_43C615  +
mov eax [esp+14h+arg_1048] +
mov ecx [esp+14h+arg_8] +
mov eax [eax+4] +
mov edx [eax+64h] +
mov eax ebx +
call loc_43BD10  +
test eax eax +
jnz loc_43C615  +
mov [esp+14h+var_C] ebx +
mov [esp+14h+var_10] offset aSymbol +
mov [esp+14h+var_14] offset aUndefinedSRefe +
call off_47D664  +
xor eax eax +
jmp loc_43C325  +
mov edi offset asc_49988C +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_43C8D8  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_28] +
cmp [esp+14h+arg_24] eax +
setnz al  +
movzx eax al +
jmp loc_43C7B8  +
mov edi offset asc_49988F +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_43C9C6  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_43CC8A  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setle al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
mov edi offset asc_499892 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_43CAC6  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_43CDEB  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnl al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
mov edi [esp+14h+arg_8] +
shr eax cl +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
mov edi offset asc_499895 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_43CB9F  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
xor eax eax +
cmp [esp+14h+arg_24] 0 +
jz loc_43C7B8  +
cmp [esp+14h+arg_28] 0 +
jmp loc_43C8CD  +
mov [esp+14h+var_C] 2 +
mov [esp+14h+var_10] offset asc_499898 +
mov [esp+14h+var_14] ebx +
mov [esp+14h+arg_10] edx +
call strncmp  +
mov edx [esp+14h+arg_10] +
test eax eax +
jnz loc_43CCA4  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
cmp [esp+14h+arg_24] 0 +
mov eax 1 +
jz loc_43CB95  +
jmp loc_43C7B8  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setbe al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
cmp dl 7Eh +
jz loc_43CE6C  +
cmp dl 21h +
jz loc_43CE05  +
cmp dl 2Ah +
jz loc_43CFC3  +
cmp dl 2Fh +
jz loc_43CEF9  +
cmp dl 25h +
jz loc_43D5BA  +
cmp dl 5Eh +
jz loc_43D4F4  +
cmp dl 7Ch +
jz loc_43D42E  +
cmp dl 26h +
jz loc_43D368  +
cmp dl 2Bh +
nop   +
jz loc_43D271  +
cmp dl 2Dh +
jz loc_43D1AB  +
cmp dl 3Ch +
jz loc_43D0D1  +
cmp dl 3Eh +
jnz loc_43D0B8  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_43CEDF  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnle al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnb al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
cmp [esp+14h+arg_24] 0 +
jmp loc_43C7B2  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
not eax  +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnbe al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_24] +
jz loc_43D089  +
cdq   +
idiv  [esp+14h+arg_28] +
jmp loc_43C7B8  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
cmp [esp+14h+arg_1058] 0 +
jz loc_43D09F  +
mov eax [esp+14h+arg_24] +
imul eax [esp+14h+arg_28] +
jmp loc_43C7B8  +
xor edx edx +
mov edi [esp+14h+arg_8] +
div  [esp+14h+arg_28] +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
mov eax [esp+14h+arg_28] +
imul eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
movsx edx dl +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] offset aUnknownOperato +
call off_47D664  +
jmp loc_43C317  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_43D336  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setl al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
sub eax [esp+14h+arg_28] +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
cmp [esp+14h+arg_1058] 0 +
jz loc_43D350  +
mov eax [esp+14h+arg_24] +
add eax [esp+14h+arg_28] +
jmp loc_43C7B8  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setb al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
add eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
and eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
or eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
xor eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_43C325  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_43C280  +
test eax eax +
jz loc_43C323  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_24] +
jz loc_43D686  +
cdq   +
idiv  [esp+14h+arg_28] +
mov eax [esp+14h+arg_8] +
mov [eax] edx +
jmp loc_43C615  +
xor edx edx +
div  [esp+14h+arg_28] +
mov eax [esp+14h+arg_8] +
mov [eax] edx +
mov eax 1 +
jmp loc_43C325  +
***
mov eax [esp+18h+arg_0] +
mov edx [esp+18h+arg_4] +
cmp [eax+14h] edx +
jbe loc_43D6C5  +
mov ecx [eax+0Ch] +
lea ebx [edx+edx*4] +
lea ebx [ecx+ebx*4] +
movzx ecx byte ptr [ebx+0Ch] +
shr cl 4 +
test cl cl +
jz loc_43D728  +
sub edx [eax+18h] +
mov eax [eax+1Ch] +
mov eax [eax+edx*4] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_43D6EF  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_43D6E0  +
sub edx 3 +
cmp dl 1 +
ja loc_43D721  +
mov eax [eax+14h] +
cmp eax offset off_47D510 +
jz loc_43D721  +
cmp dword ptr [eax+3Ch] offset off_47D510 +
jnz loc_43D721  +
movzx edx word ptr [eax+18h] +
and dx 380h +
cmp dx 100h +
jz loc_43D721  +
cmp dx 200h +
jnz loc_43D723  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
mov edx [ebx+10h] +
mov eax [eax+10h] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_42E1E0  +
test eax eax +
jz loc_43D723  +
mov edx [esp+18h+arg_8] +
test edx edx +
jz loc_43D723  +
cmp eax offset off_47D510 +
jnz loc_43D701  +
jmp loc_43D721  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+4Ch+arg_4] +
mov ebx [esp+4Ch+arg_C] +
mov [esp+4Ch+var_3C] 0 +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] ebx +
mov eax [esi+1Ch] +
mov [esp+4Ch+var_4C] eax +
call sub_423EB0  +
test eax eax +
jz loc_43D792  +
mov byte ptr [eax+0Ch] 0 +
mov [esp+4Ch+var_10] eax +
mov eax [edi+4] +
mov ebp [eax+1B0h] +
lea eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_28] eax +
movzx eax byte ptr [ebp+1ACh] +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_34] 0 +
mov [esp+4Ch+var_38] 0 +
and eax 1 +
mov [esp+4Ch+var_2C] eax +
mov eax [esp+4Ch+arg_8] +
mov [esp+4Ch+var_40] 2 +
mov [esp+4Ch+var_44] ebx +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_3C] eax +
mov [esp+4Ch+var_4C] esi +
call sub_424B10  +
test eax eax +
jz loc_43D840  +
mov ebx [esp+4Ch+var_10] +
movzx eax byte ptr [ebx+31h] +
or byte ptr [ebx+33h] 2 +
and byte ptr [ebx+34h] 0FEh +
or byte ptr [ebx+0Dh] 2 +
mov edx eax +
and edx 3 +
cmp dl 1 +
mov byte ptr [ebx+30h] 1 +
jz loc_43D81C  +
and eax 0FFFFFFFCh +
or eax 2 +
mov [ebx+31h] al +
mov eax [ebp+0DCh] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_44] 1 +
call eax  +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
mov ebx [esi+1Ch] +
cmp dword ptr [ebx+28h] 1 +
jz loc_43D9B0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+30h] +
mov eax 1 +
test ecx ecx +
jnz loc_43D9A6  +
mov edx [ebx+38h] +
test edx edx +
jz loc_43DB78  +
mov eax [ebx+50h] +
test eax eax +
jz loc_43DB85  +
mov ebp [ebx+38h] +
mov eax [ebp+4] +
mov ebx [eax+1B0h] +
mov eax [ebx+1Ch] +
mov edi eax +
mov [esp+2Ch+var_10] eax +
movzx eax byte ptr [esi] +
or edi 8 +
and eax 3 +
cmp al 1 +
ja loc_43DA05  +
mov edi [esp+2Ch+var_10] +
or edi 8 +
test byte ptr [esi+6] 1 +
jz loc_43DB57  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_version_d +
mov [esp+2Ch+var_2C] ebp +
call sub_40F660  +
test eax eax +
jz loc_43D9A4  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_version +
mov [esp+2Ch+var_2C] ebp +
call sub_40F660  +
test eax eax +
jz loc_43D9A4  +
mov dword ptr [eax+40h] 1 +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_version_r +
mov [esp+2Ch+var_2C] ebp +
call sub_40F660  +
test eax eax +
jz loc_43D9A4  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_dynsym +
mov [esp+2Ch+var_2C] ebp +
call sub_40F660  +
test eax eax +
jz loc_43D9A4  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov ecx [esi+1Ch] +
mov [ecx+0F8h] eax +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_dynstr +
mov [esp+2Ch+var_2C] ebp +
call sub_40F660  +
test eax eax +
jz loc_43D9A4  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] offset a_dynamic +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_24] eax +
call sub_40F660  +
test eax eax +
jz loc_43D9A4  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [esp+2Ch+var_20] offset a_dynamic_0 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebp +
call sub_43D750  +
mov ecx [esi+1Ch] +
test eax eax +
mov [ecx+78h] eax +
jz loc_43D9A4  +
movzx eax byte ptr [esi+3] +
test al 20h +
jnz loc_43DB9D  +
test al 40h +
jnz loc_43DBDC  +
mov eax [ebx+6Ch] +
test eax eax +
jz loc_43D9A4  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebp +
call eax  +
test eax eax +
jz loc_43D9A4  +
mov eax [esi+1Ch] +
mov dword ptr [eax+30h] 1 +
mov eax 1 +
jmp loc_43D9A6  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_interp +
mov [esp+2Ch+var_2C] ebp +
call sub_40F660  +
test eax eax +
jnz loc_43DA05  +
jmp loc_43D9A4  +
mov eax [esp+2Ch+arg_0] +
mov [ebx+38h] eax +
nop   +
jmp loc_43D9C7  +
call sub_4558C0  +
test eax eax +
mov [ebx+50h] eax +
jz loc_43D9A4  +
mov ebx [esi+1Ch] +
jmp loc_43D9D2  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_hash +
mov [esp+2Ch+var_2C] ebp +
call sub_40F660  +
test eax eax +
jz loc_43D9A4  +
mov ecx [ebx+174h] +
movzx edx byte ptr [ecx+0Bh] +
mov [eax+40h] edx +
mov eax [eax+8Ch] +
movzx ecx byte ptr [ecx+8] +
mov [eax+28h] ecx +
movzx eax byte ptr [esi+3] +
jmp loc_43DB1F  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_hash +
mov [esp+2Ch+var_2C] ebp +
call sub_40F660  +
test eax eax +
jz loc_43D9A4  +
mov ecx [ebx+174h] +
movzx edi byte ptr [ecx+0Bh] +
mov [eax+40h] edi +
mov eax [eax+8Ch] +
cmp byte ptr [ecx+0Ah] 40h +
jz loc_43DC1D  +
mov dword ptr [eax+28h] 4 +
jmp loc_43DB27  +
mov dword ptr [eax+28h] 0 +
jmp loc_43DB27  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [ebx+4] +
mov esi [eax+1B0h] +
mov eax [esp+34h] +
mov ebp [esi+1Ch] +
movzx edx byte ptr [esi+1ADh] +
mov edi [eax+1Ch] +
mov dword ptr [esp+4] offset a_plt_0 +
mov eax ebp +
mov ecx ebp +
or ecx 13h +
and eax 0FFFFFEEDh +
test dl 8 +
cmovz eax ecx +
mov ecx eax +
or ecx 8 +
and edx 2 +
cmovnz eax ecx +
mov [esp+8] eax +
mov [esp] ebx +
call sub_40F660  +
test eax eax +
jz loc_43DD43  +
movzx ecx byte ptr [esi+1ADh] +
shr cl 4 +
movzx ecx cl +
mov [eax+40h] ecx +
test byte ptr [esi+1ADh] 4 +
mov [edi+0E0h] eax +
jnz loc_43DD15  +
or ebp 8 +
mov ecx offset a_rela_plt_0 +
test byte ptr [esi+1ACh] 20h +
mov eax offset a_rel_plt_0 +
mov [esp+8] ebp +
mov [esp] ebx +
cmovnz eax ecx +
mov [esp+4] eax +
call sub_40F660  +
test eax eax +
jz loc_43DD43  +
mov ecx [esi+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [edi+0E4h] eax +
mov eax [esp+34h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_43D850  +
test eax eax +
jz loc_43DD43  +
test byte ptr [esi+1AEh] 8 +
jnz loc_43DD50  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+8] eax +
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] offset a_procedure_lin +
mov [esp] ebx +
mov [esp+4] eax +
call sub_43D750  +
mov edx [esp+34h] +
mov ecx [edx+1Ch] +
test eax eax +
mov [ecx+74h] eax +
jnz loc_43DCAD  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+8] 100001h +
mov dword ptr [esp+4] offset a_dynbss +
mov [esp] ebx +
call sub_40F660  +
test eax eax +
jz loc_43DD43  +
mov eax [esp+34h] +
test byte ptr [eax] 1 +
jnz loc_43DD08  +
test byte ptr [esi+1ACh] 20h +
mov ecx offset a_rel_bss +
mov eax offset a_rela_bss +
mov [esp+8] ebp +
cmovz eax ecx +
mov [esp+4] eax +
mov [esp] ebx +
call sub_40F660  +
test eax eax +
jz loc_43DD43  +
mov edx [esi+174h] +
movzx edx byte ptr [edx+0Bh] +
mov [eax+40h] edx +
jmp loc_43DD08  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_4] +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_43DDD0  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
jbe loc_43DE35  +
mov eax [esp+1Ch+arg_0] +
mov esi [eax+1Ch] +
mov eax [esi+4Ch] +
mov edi [esi+50h] +
mov [ebx+20h] eax +
add eax 1 +
test edi edi +
mov [esi+4Ch] eax +
jz loc_43DE57  +
mov ebp [ebx+4] +
mov [esp+1Ch+var_18] 40h +
mov [esp+1Ch+var_1C] ebp +
call strchr  +
test eax eax +
mov esi eax +
jz loc_43DE70  +
mov byte ptr [eax] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_455970  +
mov byte ptr [esi] 40h +
cmp eax 0FFFFFFFFh +
jz loc_43DE65  +
mov [ebx+38h] eax +
jmp loc_43DDC1  +
movzx eax byte ptr [ebx+0Ch] +
sub eax 1 +
cmp al 1 +
jbe loc_43DDDE  +
or byte ptr [ebx+34h] 8 +
mov eax [esp+1Ch+arg_0] +
mov esi [eax+1Ch] +
mov eax [esi+34h] +
test eax eax +
jnz loc_43DDE5  +
jmp loc_43DDC1  +
call sub_4558C0  +
test eax eax +
mov edi eax +
mov [esi+50h] eax +
jnz loc_43DDF8  +
xor eax eax +
jmp loc_43DDC6  +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_455970  +
jmp loc_43DE2B  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 8Ch +
mov esi [esp+94h+arg_8] +
mov edx [esp+94h+arg_10] +
mov ecx [esp+94h+arg_4] +
mov ebp [esp+94h+arg_20] +
mov [esp+94h+var_38] esi +
mov esi [esp+94h+arg_C] +
mov [esp+94h+var_64] edx +
mov edx [esp+94h+arg_14] +
mov [esp+94h+var_70] eax +
mov eax [esp+94h+arg_0] +
mov [esp+94h+var_44] ecx +
mov ecx [ecx] +
mov [esp+94h+var_74] esi +
mov esi [esp+94h+arg_24] +
mov [esp+94h+var_5C] edx +
mov edx [esp+94h+arg_18] +
mov [esp+94h+var_58] eax +
mov [esp+94h+var_34] ebp +
mov [esp+94h+var_48] esi +
mov esi [esp+94h+arg_28] +
mov [esp+94h+var_50] edx +
mov edx [esp+94h+arg_1C] +
mov [esp+94h+var_40] esi +
mov esi [esp+94h+arg_2C] +
mov dword ptr [edx] 0 +
mov [esp+94h+var_3C] edx +
mov dword ptr [ebp+0] 0 +
mov [esp+94h+var_6C] esi +
mov [esp+94h+var_54] ecx +
movzx eax byte ptr [eax+0Ch] +
shr al 4 +
cmp ecx offset off_47D468 +
movzx eax al +
mov [esp+94h+var_60] eax +
jz loc_43E9C0  +
mov [esp+94h+var_84] 0 +
mov [esp+94h+var_88] 0 +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov eax [edi+1Ch] +
mov [esp+94h+var_94] eax +
call sub_423EB0  +
mov ebp eax +
test ebp ebp +
jz loc_43E460  +
mov eax [esp+94h+var_74] +
xor esi esi +
mov [eax] ebp +
mov eax [esp+94h+var_70] +
movzx edx byte ptr [ebp+34h] +
mov ecx [eax+4] +
and edx 6 +
cmp dl 2 +
mov [esp+94h+var_74] edx +
mov eax [ecx+1B0h] +
mov [esp+94h+var_68] eax +
jz loc_43DFEA  +
mov [esp+94h+var_90] 40h +
mov [esp+94h+var_94] ebx +
mov [esp+94h+var_4C] ecx +
call strrchr  +
mov ecx [esp+94h+var_4C] +
test eax eax +
mov esi eax +
jz loc_43EA20  +
mov edx [esp+94h+var_74] +
test dl dl +
jz loc_43E0C7  +
cmp byte ptr [esi+1] 0 +
lea eax [esi+1] +
mov esi 0 +
cmovnz esi eax +
movzx eax byte ptr [ebp+0Ch] +
mov byte ptr [esp+94h+var_74] al +
sub eax 6 +
cmp al 1 +
ja loc_43E1A4  +
mov ebx ebp +
nop   +
mov ebx [ebx+14h] +
movzx edx byte ptr [ebx+0Ch] +
lea eax [edx-6] +
cmp al 1 +
jbe loc_43E000  +
mov eax [esp+94h+var_6C] +
mov byte ptr [esp+94h+var_74] dl +
mov eax [eax] +
test eax eax +
jnz loc_43E0B0  +
cmp ebp ebx +
jz loc_43E1B3  +
test dl dl +
jz loc_43E1B3  +
movzx eax byte ptr [ebp+34h] +
and eax 6 +
cmp al 6 +
movzx eax byte ptr [ebx+34h] +
jz loc_43E04D  +
mov edx eax +
and edx 6 +
cmp dl 6 +
jnz loc_43E1B3  +
shr al 1 +
and eax 3 +
mov edx eax +
xor eax eax +
cmp edx 1 +
jle loc_43E079  +
mov [esp+94h+var_90] 40h +
mov eax [ebx+4] +
mov [esp+94h+var_4C] ecx +
mov [esp+94h+var_94] eax +
call strrchr  +
mov ecx [esp+94h+var_4C] +
add eax 1 +
cmp eax esi +
jz loc_43EB82  +
test eax eax +
jz loc_43E0A5  +
test esi esi +
jz loc_43E0A5  +
mov [esp+94h+var_90] esi +
mov [esp+94h+var_94] eax +
mov [esp+94h+var_4C] ecx +
call strcmp  +
mov ecx [esp+94h+var_4C] +
test eax eax +
jnz loc_43E0A5  +
mov al 1 +
jmp loc_43E0A7  +
xor eax eax +
mov esi [esp+94h+var_6C] +
mov [esi] eax +
lea esi [esi+0] +
movzx eax byte ptr [esp+94h+var_74] +
cmp al 5 +
ja loc_43E1D0  +
movzx edx al +
jmp ds:off_499AD0[edx*4]  +
cmp ebx eax +
jnb loc_43E371  +
cmp byte ptr [eax-1] 40h +
jz loc_43E371  +
or byte ptr [ebp+34h] 6 +
jmp loc_43DFDB  +
mov eax [ebx+14h] +
mov esi [eax+4] +
mov [esp+94h+var_30] esi +
mov esi [esi+94h] +
mov [esp+94h+var_74] esi +
mov esi [esp+94h+var_50] +
test esi esi +
jz loc_43E115  +
mov eax [eax] +
mov [esi] eax +
jmp loc_43E115  +
mov eax [ebx+14h] +
mov [esp+94h+var_30] eax +
mov eax [eax+94h] +
mov [esp+94h+var_74] eax +
mov eax [esp+94h+var_64] +
test eax eax +
jz loc_43E127  +
mov edx [eax] +
test edx edx +
jz loc_43EA07  +
cmp [esp+94h+var_60] 2 +
setz al  +
mov byte ptr [esp+94h+var_2C] al +
movzx eax al +
mov [esp+94h+var_64] eax +
movzx eax byte ptr [ebx+0Ch] +
cmp al 2 +
setz dl  +
cmp al 4 +
mov esi edx +
mov edx [esp+94h+var_5C] +
setz al  +
or esi eax +
mov eax esi +
movzx eax al +
test edx edx +
mov [esp+94h+var_4C] eax +
jz loc_43E15F  +
mov [edx] eax +
mov edx [edi+30h] +
mov eax [esp+94h+var_68] +
mov edx [edx+4] +
mov eax [eax+74h] +
mov [esp+94h+var_94] ecx +
mov [esp+94h+var_90] edx +
call eax  +
test eax eax +
jnz loc_43E1E5  +
mov eax 1 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+14h] +
mov [esp+94h+var_30] 0 +
mov [esp+94h+var_74] eax +
jmp loc_43E115  +
mov eax [esp+94h+var_6C] +
mov ebx ebp +
cmp dword ptr [eax] 0 +
jnz loc_43E0B0  +
mov eax [esp+94h+var_6C] +
mov dword ptr [eax] 1 +
movzx eax byte ptr [esp+94h+var_74] +
cmp al 5 +
jbe loc_43E0BD  +
lea esi [esi+0] +
mov [esp+94h+var_74] 0 +
mov [esp+94h+var_30] 0 +
jmp loc_43E115  +
mov ecx [esp+94h+var_58] +
mov edx ebx +
mov eax edi +
call sub_439200  +
mov eax [esp+94h+var_70] +
mov eax [eax+28h] +
shr eax 5 +
and eax 40h +
mov edx eax +
setnz al  +
mov byte ptr [esp+94h+var_5C] al +
movzx eax al +
test eax eax +
mov [esp+94h+var_28] eax +
jz loc_43E233  +
cmp [esp+94h+var_54] offset off_47D468 +
jz loc_43EB6A  +
mov eax [esp+94h+var_6C] +
mov eax [eax] +
test eax eax +
jz loc_43E22F  +
or byte ptr [ebx+34h] 80h +
or byte ptr [ebp+34h] 80h +
movzx eax byte ptr [ebx+0Ch] +
test al al +
jz loc_43E9F3  +
mov ecx [esp+94h+var_74] +
cmp [esp+94h+var_70] ecx +
jz loc_43EACA  +
mov ecx [esp+94h+var_74] +
test ecx ecx +
jz loc_43EB37  +
mov ecx [esp+94h+var_74] +
mov ecx [ecx+28h] +
shr ecx 0Bh +
and ecx 1 +
mov esi [esp+94h+var_54] +
cmp esi offset off_47D468 +
jz loc_43EB30  +
mov esi [esi+14h] +
shr esi 0Ch +
xor esi 1 +
and esi 1 +
lea edx [eax-1] +
cmp dl 1 +
setnbe byte ptr [esp+94h+var_6C]  +
cmp al 5 +
setnz al  +
and byte ptr [esp+94h+var_6C] al +
movzx eax byte ptr [esp+94h+var_6C] +
mov [esp+94h+var_24] 0 +
mov [esp+94h+var_60] eax +
mov eax [esp+94h+var_58] +
movzx eax byte ptr [eax+0Ch] +
mov byte ptr [esp+94h+var_2C] al +
and eax 0Fh +
jnz loc_43EA5A  +
movzx eax byte ptr [ebx+30h] +
mov [esp+94h+var_2C] 0 +
test al al +
jnz loc_43EA32  +
mov edx [esp+94h+var_50] +
test edx edx +
setz byte ptr [esp+94h+var_20]  +
cmp byte ptr [esp+94h+var_5C] 0 +
jz loc_43E390  +
cmp byte ptr [esp+94h+var_20] 0 +
jz loc_43E390  +
mov eax ecx +
mov edx esi +
xor eax 1 +
test al dl +
jz loc_43E390  +
mov eax [esp+94h+var_60] +
test eax eax +
jz loc_43E383  +
mov eax [esp+94h+var_58] +
movzx edx byte ptr [eax+0Ch] +
movzx eax byte ptr [ebx+30h] +
and edx 0Fh +
cmp al dl +
jz loc_43E347  +
test dl dl +
jz loc_43E347  +
test al al +
jz loc_43E347  +
mov [esp+94h+var_16] dl +
mov edx [esp+94h+var_24] +
mov byte ptr [esp+94h+var_1C] al +
mov eax [esp+94h+var_2C] +
xor edx 1 +
xor eax 1 +
or al dl +
movzx eax byte ptr [esp+94h+var_1C] +
movzx edx [esp+94h+var_16] +
jnz loc_43E35D  +
cmp [esp+94h+var_60] 0 +
jz loc_43E390  +
cmp dl 0Ah +
setz dl  +
cmp al 0Ah +
setz al  +
cmp dl al +
jz loc_43E390  +
mov eax [esp+94h+var_3C] +
mov dword ptr [eax] 1 +
mov eax 1 +
jmp loc_43E17E  +
movzx eax byte ptr [ebp+34h] +
and eax 0FFFFFFF9h +
or eax 4 +
mov [ebp+34h] al +
jmp loc_43DFDB  +
cmp byte ptr [ebx+0Ch] 5 +
jz loc_43E308  +
lea esi [esi+0] +
mov eax [esp+94h+var_74] +
test eax eax +
jz loc_43E470  +
test byte ptr [eax+2Ah] 20h +
jnz loc_43E470  +
mov eax [esp+94h+var_70] +
test byte ptr [eax+2Ah] 20h +
jnz loc_43E470  +
mov eax [esp+94h+var_58] +
movzx edx byte ptr [ebx+30h] +
movzx eax byte ptr [eax+0Ch] +
and eax 0Fh +
cmp al dl +
jz loc_43E470  +
cmp al 6 +
jz loc_43EB9B  +
cmp dl 6 +
jnz loc_43E470  +
mov eax [esp+94h+var_30] +
mov edi [esp+94h+var_54] +
mov [esp+94h+var_54] eax +
mov eax [esp+94h+var_60] +
mov [esp+94h+var_30] edi +
mov edi [esp+94h+var_70] +
mov [esp+94h+var_60] esi +
mov esi eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_74] edi +
mov [esp+94h+var_70] eax +
mov eax [esp+94h+var_60] +
and eax esi +
test al 1 +
jnz loc_43EBD5  +
mov eax [esp+94h+var_60] +
or eax esi +
mov eax [ebx+4] +
jz loc_43EC54  +
test esi esi +
mov [esp+94h+var_84] eax +
jz loc_43EC0E  +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_94] offset aSTlsDefinition +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_54] +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_47D664  +
mov [esp+94h+var_94] 11h +
call sub_4105E0  +
add esp 8Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+94h+var_28] +
test eax eax +
jnz loc_43E50D  +
mov eax [esp+94h+var_58] +
test byte ptr [eax+0Dh] 3 +
jz loc_43E51A  +
movzx eax byte ptr [ebx+33h] +
test al 8 +
jz loc_43E51A  +
cmp byte ptr [ebp+0Ch] 6 +
jz loc_43EBBF  +
mov eax [ebx+10h] +
test eax eax +
jz loc_43EC38  +
mov eax [esp+94h+var_70] +
mov byte ptr [ebx+0Ch] 1 +
mov [ebx+14h] eax +
mov eax [esp+94h+var_58] +
movzx eax byte ptr [eax+0Dh] +
and eax 3 +
cmp al 3 +
jz loc_43EB8C  +
mov eax [esp+94h+var_68] +
mov eax [eax+0DCh] +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
movzx eax byte ptr [ebx+33h] +
and byte ptr [ebx+34h] 0F7h +
and eax 0FFFFFFFBh +
mov [ebx+33h] al +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
mov eax 1 +
mov dword ptr [ebx+2Ch] 0 +
mov byte ptr [ebx+30h] 0 +
jmp loc_43E17E  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jnz loc_43EA85  +
mov edx esi +
and edx 1 +
jz loc_43E52C  +
cmp byte ptr [esp+94h+var_5C] 0 +
jz loc_43E704  +
cmp byte ptr [esp+94h+var_6C] 0 +
jz loc_43E546  +
cmp byte ptr [esp+94h+var_5C] 0 +
mov eax 0 +
cmovz eax [esp+94h+var_4C] +
mov [esp+94h+var_4C] eax +
movzx eax byte ptr [esp+94h+var_24] +
test byte ptr [esp+94h+var_2C] al +
jz loc_43E55B  +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_4C] +
or eax [esp+94h+var_64] +
jnz loc_43E780  +
test esi esi +
jnz loc_43E776  +
mov eax [esp+94h+var_48] +
mov eax [eax] +
test eax eax +
jnz loc_43E78A  +
cmp byte ptr [ebx+0Ch] 1 +
jz loc_43E78A  +
and dl byte ptr [esp+94h+var_5C] +
mov [esp+94h+var_1C] 0 +
mov [esp+94h+var_16] dl +
jz loc_43E5D5  +
mov eax [esp+94h+var_64] +
test eax eax +
jnz loc_43E5D5  +
mov eax [esp+94h+var_54] +
mov edx [esp+94h+var_64] +
mov eax [eax+14h] +
mov [esp+94h+var_1C] edx +
and eax 3 +
cmp eax 1 +
jnz loc_43E5D5  +
mov eax [esp+94h+var_58] +
mov edx [esp+94h+var_24] +
mov eax [eax+4] +
xor edx 1 +
test eax eax +
mov eax edx +
cmovz eax [esp+94h+var_64] +
mov [esp+94h+var_1C] eax +
mov eax ecx +
and al byte ptr [esp+94h+var_6C] +
mov [esp+94h+var_5C] 0 +
mov [esp+94h+var_15] al +
jz loc_43E5F3  +
cmp byte ptr [ebx+0Ch] 3 +
jz loc_43EAF5  +
mov eax [esp+94h+var_68] +
mov eax [eax+150h] +
test eax eax +
jz loc_43E644  +
mov ecx [esp+94h+var_30] +
mov edx [esp+94h+var_58] +
mov [esp+94h+var_88] esi +
mov [esp+94h+var_94] ebx +
mov [esp+94h+var_7C] ecx +
mov ecx [esp+94h+var_74] +
mov [esp+94h+var_90] edx +
mov [esp+94h+var_80] ecx +
mov ecx [esp+94h+var_60] +
mov [esp+94h+var_84] ecx +
mov ecx [esp+94h+var_44] +
mov [esp+94h+var_8C] ecx +
call eax  +
test eax eax +
jz loc_43E460  +
mov ecx [esp+94h+var_44] +
mov eax [ecx] +
mov [esp+94h+var_54] eax +
movzx eax byte ptr [esp+94h+var_1C] +
test byte ptr [esp+94h+var_5C] al +
jz loc_43E69F  +
mov eax [esp+94h+var_58] +
mov eax [eax+4] +
cmp eax [ebx+2Ch] +
jz loc_43E69F  +
mov edx [edi+18h] +
mov ecx [esp+94h+var_70] +
mov edx [edx+8] +
mov [esp+94h+var_84] eax +
mov [esp+94h+var_88] 5 +
mov [esp+94h+var_8C] ecx +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call edx  +
test eax eax +
jz loc_43E460  +
mov eax [esp+94h+var_58] +
mov eax [eax+4] +
cmp eax [ebx+2Ch] +
jbe loc_43E695  +
mov [ebx+2Ch] eax +
mov eax [esp+94h+var_40] +
mov dword ptr [eax] 1 +
cmp [esp+94h+var_16] 0 +
jz loc_43E719  +
mov eax [esp+94h+var_60] +
test eax eax +
jnz loc_43E6C3  +
cmp byte ptr [ebx+0Ch] 5 +
mov esi 1 +
jnz loc_43E719  +
mov eax [esp+94h+var_24] +
or eax [esp+94h+var_64] +
jz loc_43E719  +
mov eax [esp+94h+var_34] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_44] +
mov dword ptr [eax] offset off_47D468 +
mov eax [esp+94h+var_40] +
cmp byte ptr [ebx+0Ch] 5 +
mov dword ptr [eax] 1 +
jz loc_43EBB0  +
mov eax [esp+94h+var_28] +
test eax eax +
jnz loc_43E179  +
mov [esp+94h+var_54] offset off_47D468 +
jmp loc_43E90A  +
test ecx ecx +
mov eax 0 +
cmovz eax [esp+94h+var_64] +
mov [esp+94h+var_64] eax +
jmp loc_43E52C  +
mov eax [esp+94h+var_1C] +
test eax eax +
jz loc_43E799  +
cmp byte ptr [ebx+0Ch] 5 +
jnz loc_43E799  +
mov eax [esp+94h+var_34] +
mov ecx [esp+94h+var_38] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_58] +
mov eax [eax+4] +
mov [ecx] eax +
mov eax [esp+94h+var_68] +
mov ecx [esp+94h+var_30] +
mov eax [eax+14Ch] +
mov [esp+94h+var_94] ecx +
call eax  +
mov ecx [esp+94h+var_44] +
mov [esp+94h+var_54] eax +
mov [ecx] eax +
mov eax [esp+94h+var_40] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_28] +
test eax eax +
jz loc_43E90A  +
jmp loc_43E179  +
cmp byte ptr [ebx+0Ch] 1 +
jnz loc_43E571  +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_40] +
mov dword ptr [eax] 1 +
jmp loc_43E589  +
test esi 1 +
jz loc_43E8F6  +
cmp byte ptr [esp+94h+var_6C] 0 +
jz loc_43E8F6  +
mov eax [esp+94h+var_64] +
test eax eax +
jnz loc_43E876  +
cmp [esp+94h+var_28] 0 +
jnz loc_43E179  +
cmp [esp+94h+var_15] 0 +
jz loc_43EB57  +
movzx eax byte ptr [ebx+33h] +
test al 8 +
jz loc_43EB57  +
mov edx [ebx+14h] +
mov ecx [esp+94h+var_40] +
mov byte ptr [ebx+0Ch] 1 +
mov edx [edx+94h] +
mov [ebx+14h] edx +
mov dword ptr [ecx] 1 +
mov ecx [esp+94h+var_54] +
test byte ptr [ecx+15h] 10h +
jz loc_43E81E  +
mov ecx [esp+94h+var_2C] +
test ecx ecx +
jz loc_43E814  +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
mov byte ptr [ebx+30h] 0 +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
cmp byte ptr [ebp+0Ch] 6 +
jnz loc_43E9B3  +
test ebp ebp +
jz loc_43E179  +
movzx edx byte ptr [ebx+0Ch] +
mov eax [ebx+14h] +
mov [ebp+14h] eax +
mov eax [esp+94h+var_68] +
mov [ebp+0Ch] dl +
mov [ebx+14h] ebp +
mov byte ptr [ebx+0Ch] 6 +
mov eax [eax+0D8h] +
mov [esp+94h+var_8C] ebx +
mov [esp+94h+var_90] ebp +
mov [esp+94h+var_94] edi +
call eax  +
movzx eax byte ptr [ebx+33h] +
test al 8 +
jz loc_43E179  +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
or byte ptr [ebp+33h] 4 +
jmp loc_43E179  +
mov eax [esp+94h+var_74] +
test eax eax +
jz loc_43E893  +
test byte ptr [eax+2Ah] 20h +
jz loc_43E893  +
mov eax [esp+94h+var_70] +
mov esi 1 +
test byte ptr [eax+2Ah] 20h +
jz loc_43E89F  +
mov eax [esp+94h+var_3C] +
xor esi esi +
mov dword ptr [eax] 1 +
mov ecx [esp+94h+var_28] +
mov eax [esp+94h+var_70] +
mov eax [eax+4] +
mov [esp+94h+var_8C] ecx +
mov ecx [esp+94h+var_54] +
mov [esp+94h+var_90] esi +
lea edx [ecx+14h] +
mov ecx [esp+94h+var_58] +
mov [esp+94h+var_94] edx +
mov edx ebx +
call sub_43A4C0  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_43E8F6  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
ja loc_43E8F6  +
mov eax [esp+94h+var_68] +
mov eax [eax+0DCh] +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
mov eax [esp+94h+var_28] +
test eax eax +
jnz loc_43E179  +
test esi esi +
jnz loc_43E7C7  +
mov eax [esp+94h+var_54] +
test byte ptr [eax+15h] 10h +
jz loc_43E179  +
mov eax [esp+94h+var_4C] +
or eax [esp+94h+var_2C] +
jnz loc_43E7C7  +
mov edx [esp+94h+var_5C] +
test edx edx +
jz loc_43E179  +
mov ecx [esp+94h+var_58] +
mov eax [edi+18h] +
mov edx [ecx+4] +
mov ecx [esp+94h+var_70] +
mov eax [eax+8] +
mov [esp+94h+var_88] 5 +
mov [esp+94h+var_84] edx +
mov [esp+94h+var_8C] ecx +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
test eax eax +
jz loc_43E460  +
mov ecx [esp+94h+var_38] +
mov eax [ebx+2Ch] +
cmp eax [ecx] +
jbe loc_43E971  +
mov [ecx] eax +
cmp byte ptr [esp+94h+var_20] 0 +
jnz loc_43ED01  +
mov eax [ebx+14h] +
mov ecx [esp+94h+var_50] +
mov edx [eax+40h] +
mov eax [eax+94h] +
mov [ecx] edx +
mov ecx [esp+94h+var_40] +
mov byte ptr [ebx+0Ch] 1 +
mov [ebx+14h] eax +
cmp byte ptr [ebp+0Ch] 6 +
mov dword ptr [ecx] 1 +
mov ecx [esp+94h+var_48] +
mov dword ptr [ecx] 1 +
jz loc_43EC7A  +
mov dword ptr [ebx+40h] 0 +
jmp loc_43E179  +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_80] 0 +
mov [esp+94h+var_84] 0 +
mov [esp+94h+var_88] 1 +
mov [esp+94h+var_8C] ebx +
mov [esp+94h+var_90] edi +
mov [esp+94h+var_94] eax +
call sub_423F00  +
mov ebp eax +
jmp loc_43DF7C  +
and byte ptr [ebx+34h] 0FEh +
add esp 8Ch +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+94h+var_74] +
mov [eax] ecx +
mov eax [esp+94h+var_70] +
mov ecx [eax+4] +
jmp loc_43E127  +
movzx eax byte ptr [ebp+34h] +
and eax 0FFFFFFF9h +
or eax 2 +
mov [ebp+34h] al +
jmp loc_43DFEA  +
mov [esp+94h+var_20] ecx +
mov ecx [esp+94h+var_68] +
mov edx [ecx+158h] +
mov [esp+94h+var_94] eax +
call edx  +
mov ecx [esp+94h+var_20] +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+94h+var_2C] eax +
jmp loc_43E2D0  +
mov [esp+94h+var_2C] ecx +
mov ecx [esp+94h+var_68] +
movzx eax al +
mov edx [ecx+158h] +
mov [esp+94h+var_94] eax +
call edx  +
mov ecx [esp+94h+var_2C] +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+94h+var_24] eax +
jmp loc_43E2BC  +
cmp [esp+94h+var_54] offset off_47D468 +
jz loc_43E51A  +
mov ecx [esp+94h+var_3C] +
mov dword ptr [ecx] 1 +
or byte ptr [ebx+33h] 4 +
or byte ptr [ebp+33h] 4 +
cmp al 3 +
jnz loc_43E179  +
mov [esp+94h+arg_4] ebx +
mov [esp+94h+arg_0] edi +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_43DDB0  +
cmp byte ptr [esp+94h+var_2C] 0 +
jnz loc_43EADB  +
mov ecx esi +
test cl cl +
jz loc_43E259  +
test edx edx +
jz loc_43E179  +
test byte ptr [ebx+33h] 2 +
jnz loc_43E259  +
lea esi [esi+0] +
jmp loc_43E179  +
test byte ptr [ebx+33h] 8 +
jz loc_43E5F3  +
mov eax [ebx+14h] +
mov eax [eax+14h] +
and eax 3 +
cmp eax 1 +
jnz loc_43E5F3  +
mov eax [esp+94h+var_2C] +
mov edx [ebx+2Ch] +
xor eax 1 +
test edx edx +
cmovz eax [esp+94h+var_5C] +
mov [esp+94h+var_5C] eax +
jmp loc_43E5F3  +
xor esi esi +
jmp loc_43E282  +
mov ecx [esp+94h+var_30] +
test ecx ecx +
jz loc_43EBCE  +
mov edx [ecx+98h] +
mov ecx [edx+0Ch] +
shr ecx 0Fh +
and ecx 1 +
jmp loc_43E266  +
mov eax [esp+94h+var_54] +
test byte ptr [eax+15h] 10h +
jnz loc_43E926  +
jmp loc_43E179  +
cmp [esp+94h+var_60] 2 +
jz loc_43E233  +
or byte ptr [ebx+35h] 1 +
or byte ptr [ebp+35h] 1 +
jmp loc_43E233  +
mov eax 1 +
jmp loc_43E0A7  +
movzx eax byte ptr [ebx+33h] +
or eax 4 +
mov [ebx+33h] al +
jmp loc_43E4F2  +
cmp dl 6 +
jnz loc_43E406  +
jmp loc_43E3DC  +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
jmp loc_43E6EB  +
test al 1 +
jnz loc_43EC84  +
mov ebx ebp +
jmp loc_43E4A0  +
xor ecx ecx +
jmp loc_43E266  +
mov eax [ebx+4] +
mov [esp+94h+var_94] offset aSTlsDefiniti_0 +
mov [esp+94h+var_80] eax +
mov eax [esp+94h+var_30] +
mov [esp+94h+var_84] eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_54] +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_47D664  +
jmp loc_43E454  +
mov eax [esp+94h+var_30] +
mov [esp+94h+var_94] offset aSTlsReferenceI +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_47D664  +
jmp loc_43E454  +
mov eax [edi+1Ch] +
cmp [eax+20h] ebx +
jz loc_43E4AB  +
mov byte ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+14h] 0 +
jmp loc_43E4B6  +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_94] offset aSTlsReferenc_0 +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_47D664  +
jmp loc_43E454  +
mov edx 1 +
jmp loc_43E837  +
movzx eax byte ptr [ebx+0Ch] +
mov esi [esp+94h+var_68] +
mov [ebp+0Ch] al +
mov eax [esi+0D8h] +
mov byte ptr [ebx+0Ch] 6 +
mov [esp+94h+var_8C] ebx +
mov [esp+94h+var_90] ebp +
mov [esp+94h+var_94] edi +
call eax  +
mov eax [esp+94h+var_58] +
mov [ebx+14h] ebp +
movzx eax byte ptr [eax+0Dh] +
and eax 3 +
cmp al 3 +
jz loc_43ECF5  +
mov eax [esi+0DCh] +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
movzx eax byte ptr [ebx+33h] +
and byte ptr [ebx+34h] 0F7h +
and eax 0FFFFFFFBh +
mov [ebx+33h] al +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
mov dword ptr [ebx+2Ch] 0 +
mov byte ptr [ebx+30h] 0 +
mov ebx ebp +
jmp loc_43E4A0  +
movzx eax byte ptr [ebx+33h] +
or eax 4 +
mov [ebx+33h] al +
jmp loc_43ECDD  +
mov [esp+94h+var_90] 657h +
mov [esp+94h+var_94] offset a____Binutils_3 +
call sub_410530  +
jmp loc_43E97C  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
test byte ptr [eax+34h] 1 +
movzx eax byte ptr [eax+0Ch] +
jnz loc_43EDCB  +
sub eax 3 +
cmp al 1 +
jbe loc_43EF40  +
mov edx [ebp+0] +
mov eax [edx+1Ch] +
mov eax [eax+38h] +
mov eax [eax+4] +
mov edi [eax+1B0h] +
mov eax [edi+0E0h] +
test eax eax +
jz loc_43ED6F  +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_24] ebx +
call eax  +
xor edx edx +
test eax eax +
jz loc_43EDBA  +
cmp byte ptr [ebx+0Ch] 3 +
jz loc_43EEE0  +
movzx edx byte ptr [ebx+33h] +
test dl dl +
js loc_43EE90  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
test al al +
jz loc_43ED9A  +
cmp byte ptr [ebx+0Ch] 2 +
jz loc_43EF9B  +
mov esi [ebx+3Ch] +
test esi esi +
jz loc_43EF91  +
movzx edx byte ptr [esi+33h] +
test dl 2 +
jz loc_43EE17  +
mov dword ptr [ebx+3Ch] 0 +
mov edx 1 +
add esp 1Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
cmp al 6 +
jz loc_43EDC4  +
sub eax 3 +
cmp al 1 +
jbe loc_43EF16  +
or byte ptr [ebx+33h] 11h +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jnz loc_43ED44  +
test byte ptr [ebx+33h] 0Ch +
jz loc_43ED44  +
mov eax [ebp+0] +
mov [esp-4+arg_0] ebx +
mov [esp+0] eax +
call sub_43DDB0  +
test eax eax +
jnz loc_43ED44  +
mov dword ptr [ebp+4] 1 +
xor edx edx +
jmp loc_43EDBA  +
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
cmp al 6 +
jz loc_43EE14  +
sub eax 3 +
cmp al 1 +
jbe loc_43EE3E  +
mov [esp-4+arg_0] 0A4Ah +
mov dword ptr [esp+0] offset a____Binutils_3 +
call sub_410530  +
movzx edx byte ptr [esi+33h] +
and edx 8 +
jz loc_43EF78  +
movzx eax byte ptr [esi+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_43EE66  +
mov [esp-4+arg_0] 0A4Dh +
mov dword ptr [esp+0] offset a____Binutils_3 +
call sub_410530  +
mov edx [ebp+0] +
mov eax [edi+0D8h] +
mov [esp-4+arg_4] ebx +
mov [esp-4+arg_0] esi +
mov [esp+0] edx +
call eax  +
add esp 1Ch +
mov edx 1 +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebp+0] +
movzx eax byte ptr [ecx] +
test al 1 +
jz loc_43ED85  +
mov esi [ecx+1Ch] +
cmp dword ptr [esi+28h] 1 +
jnz loc_43ED85  +
test byte ptr [ebx+35h] 4 +
jnz loc_43EFBA  +
test al 4 +
jnz loc_43EECD  +
test byte ptr [ecx+5] 1 +
jz loc_43EFBA  +
test byte ptr [ebx+34h] 10h +
jnz loc_43EFBA  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jmp loc_43EFC7  +
movzx edx byte ptr [ebx+33h] +
mov eax edx +
and eax 0Bh +
cmp al 1 +
jnz loc_43ED7D  +
mov eax [ebx+14h] +
mov eax [eax+94h] +
mov eax [eax+28h] +
shr eax 5 +
test eax 10040h +
jnz loc_43ED7D  +
or edx 2 +
mov [ebx+33h] dl +
jmp loc_43ED7D  +
mov eax [ebx+14h] +
mov eax [eax+94h] +
test eax eax +
jz loc_43EF30  +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jz loc_43EDDA  +
or byte ptr [ebx+33h] 2 +
jmp loc_43EDDE  +
movzx eax byte ptr [ebx+33h] +
test al 2 +
jnz loc_43ED44  +
mov ecx [ebx+14h] +
mov edx [ecx+94h] +
test edx edx +
jz loc_43EFF7  +
mov eax [edx+4] +
cmp dword ptr [eax+4] 5 +
setnz al  +
test al al +
jz loc_43ED44  +
or byte ptr [ebx+33h] 2 +
jmp loc_43ED44  +
mov [esp-4+arg_0] 0A4Bh +
mov dword ptr [esp+0] offset a____Binutils_3 +
call sub_410530  +
jmp loc_43EE47  +
mov edx 1 +
jmp loc_43EDBA  +
mov edx [ebp+0] +
mov eax [edi+0DCh] +
mov [esp+28h+var_20] 1 +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] edx +
call eax  +
jmp loc_43ED9A  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jz loc_43ED9A  +
and edx 2 +
jz loc_43ED8C  +
movzx eax al +
mov edx [edi+0DCh] +
sub eax 1 +
cmp eax 1 +
setbe al  +
movzx eax al +
mov [esp+28h+var_20] eax +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] ecx +
call edx  +
jmp loc_43ED85  +
xor edx edx +
cmp ecx offset off_47D510 +
jz loc_43F008  +
mov eax edx +
jmp loc_43EF67  +
shr al 3 +
mov edx eax +
xor edx 1 +
and edx 1 +
mov eax edx +
jmp loc_43EF67  +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
lea edx [esp+3Ch+var_14] +
mov ebx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_10] 0 +
mov esi [eax] +
mov eax ebx +
mov [esp+3Ch+var_14] esi +
call sub_43ED20  +
test eax eax +
jnz loc_43F167  +
mov ecx [esp+3Ch+var_10] +
test ecx ecx +
jz loc_43F15F  +
mov ecx [esp+3Ch+arg_4] +
mov dword ptr [ecx+4] 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [ebx+33h] 2 +
jz loc_43F19F  +
mov ebp [esi+30h] +
mov edi [ebx+4] +
mov eax [ebp+4] +
mov eax [eax+1B0h] +
mov [esp+3Ch+var_38] 40h +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_28] eax +
call strchr  +
test eax eax +
jz loc_43F2A5  +
mov edx [ebx+40h] +
test edx edx +
jz loc_43F1B0  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx edx byte ptr [eax+1] +
cmp dl 40h +
jz loc_43F358  +
add eax 1 +
mov [esp+3Ch+var_24] eax +
test dl dl +
jz loc_43F19F  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_43F317  +
mov [esp+3Ch+var_20] ebp +
mov ebp [esp+3Ch+var_24] +
mov [esp+3Ch+arg_0] ebx +
mov ebx edx +
jmp loc_43F1FA  +
mov ebx [ebx] +
test ebx ebx +
jz loc_43F30F  +
mov [esp+3Ch+var_38] ebp +
mov eax [ebx+4] +
mov [esp+3Ch+var_3C] eax +
call strcmp  +
test eax eax +
jnz loc_43F1F0  +
mov ebp [esp+3Ch+var_24] +
mov [esp+3Ch+var_20] ebx +
mov ebx [esp+3Ch+arg_0] +
sub ebp edi +
mov [esp+3Ch+var_3C] ebp +
call sub_412BD0  +
mov edx [esp+3Ch+var_20] +
test eax eax +
mov edi eax +
jz loc_43F346  +
mov ecx [ebx+4] +
lea eax [ebp-1] +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] ecx +
call memcpy  +
lea eax [edi+ebp-2] +
mov edx [esp+3Ch+var_24] +
mov byte ptr [edi+ebp-1] 0 +
cmp byte ptr [eax] 40h +
jz loc_43F3C6  +
mov [ebx+40h] edx +
mov ebp [edx+0Ch] +
mov dword ptr [edx+34h] 1 +
test ebp ebp +
jz loc_43F368  +
mov eax [edx+38h] +
lea ecx [edx+0Ch] +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] ecx +
call eax  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_43F368  +
mov [esp+3Ch+var_3C] edi +
call free  +
mov edx [ebx+40h] +
test edx edx +
jnz loc_43F19F  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax] +
mov eax [eax+7Ch] +
test eax eax +
jz loc_43F19F  +
mov edx [ebx+4] +
lea ecx [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_426D20  +
test eax eax +
mov [ebx+40h] eax +
jz loc_43F19F  +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_43F19F  +
mov eax [esp+3Ch+var_28] +
mov eax [eax+0DCh] +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] esi +
call eax  +
jmp loc_43F19F  +
mov ebp [esp+3Ch+var_20] +
mov ebx [esp+3Ch+arg_0] +
movzx eax byte ptr [esi] +
and eax 3 +
cmp al 1 +
jbe loc_43F3CE  +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] offset aBVersionNodeNo +
call off_47D664  +
mov [esp+3Ch+var_3C] 11h +
call sub_4105E0  +
mov eax [esp+3Ch+arg_4] +
mov dword ptr [eax+4] 1 +
xor eax eax +
jmp loc_43F15F  +
lea ecx [eax+2] +
movzx edx byte ptr [eax+2] +
mov [esp+3Ch+var_24] ecx +
jmp loc_43F1C4  +
mov ecx [edx+1Ch] +
test ecx ecx +
jz loc_43F29D  +
mov eax [edx+38h] +
add edx 1Ch +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] edx +
call eax  +
test eax eax +
jz loc_43F29D  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_43F29D  +
test byte ptr [esi] 10h +
nop   +
jnz loc_43F29D  +
mov eax [esp+3Ch+var_28] +
mov eax [eax+0DCh] +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] esi +
call eax  +
jmp loc_43F29D  +
mov byte ptr [eax] 0 +
jmp loc_43F261  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_43F19F  +
mov [esp+3Ch+var_38] 3Ch +
mov [esp+3Ch+var_3C] ebp +
call sub_40E220  +
test eax eax +
jz loc_43F346  +
mov ecx [esp+3Ch+var_24] +
mov dword ptr [eax+30h] 0FFFFFFFFh +
mov dword ptr [eax+34h] 1 +
mov [eax+4] ecx +
mov ecx [esp+3Ch+arg_4] +
mov edx [ecx] +
mov ecx [edx+7Ch] +
test ecx ecx +
jz loc_43F442  +
cmp dword ptr [ecx+8] 0 +
setnz cl  +
movzx ecx cl +
mov esi [edx+7Ch] +
add edx 7Ch +
test esi esi +
jnz loc_43F42A  +
jmp loc_43F435  +
mov esi edx +
mov edx [esi] +
add ecx 1 +
test edx edx +
jnz loc_43F428  +
mov edx esi +
mov [eax+8] ecx +
mov [edx] eax +
mov [ebx+40h] eax +
jmp loc_43F19F  +
mov ecx 1 +
jmp loc_43F41C  +
***
mov ebx [esp+18h+arg_0] +
cmp byte ptr [ebx+0Ch] 6 +
jz loc_43F475  +
mov eax [esp+18h+arg_4] +
mov eax [eax] +
test byte ptr [eax] 10h +
jnz loc_43F46F  +
test byte ptr [ebx+34h] 10h +
jz loc_43F475  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_43F480  +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
test byte ptr [ebx+33h] 3 +
jz loc_43F475  +
mov edx [ebx+4] +
mov eax [eax+7Ch] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_426EF0  +
test eax eax +
jnz loc_43F475  +
mov eax [esp+18h+arg_4] +
mov eax [eax] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call sub_43DDB0  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_43F47A  +
mov eax [esp+18h+arg_4] +
mov dword ptr [eax+4] 1 +
xor eax eax +
jmp loc_43F47A  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+34h] +
mov edi [ebx+1Ch] +
cmp dword ptr [edi+28h] 1 +
jz loc_43F4F0  +
***
mov eax 1 +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+3Ch] +
xor eax eax +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 1 +
mov [esp] edi +
test edx edx +
setz al  +
mov [esp+8] eax +
mov eax [esp+38h] +
mov [esp+4] eax +
call sub_423EB0  +
test eax eax +
mov esi eax +
jz loc_43F6D5  +
cmp byte ptr [eax+0Ch] 7 +
ja sub_43F557  +
movzx eax byte ptr [eax+0Ch] +
jmp ds:off_499B54[eax*4]  +
***
mov eax [esi+10h] +
movzx eax byte ptr [esi+33h] +
mov eax [esp+arg_2C] +
mov [esp+arg_4] offset aBfd_elf_record +
xor ecx ecx +
mov edx esi +
mov eax ebx +
call sub_439200  +
and byte ptr [esi+34h] 0FEh +
jmp sub_43F557  +
***
mov eax [esp+3Ch] +
jmp loc_43F4E8  +
***
or byte ptr [esi+34h] 8 +
jmp loc_43F5DC  +
***
mov byte ptr [esi+0Ch] 1 +
jmp loc_43F572  +
***
cmp [edi+20h] esi +
jnz sub_43F557  +
jmp loc_43F54F  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov edi [esp+70h] +
mov ebx [esp+74h] +
mov esi [esp+78h] +
mov eax [edi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_43F736  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [eax+0C0h] +
test eax eax +
jnz loc_43F748  +
jmp loc_43F760  +
mov eax [eax] +
test eax eax +
jz loc_43F760  +
cmp [eax+4] ebx +
jnz loc_43F742  +
cmp [eax+8] esi +
jnz loc_43F742  +
mov eax 1 +
jmp loc_43F72E  +
***
mov dword ptr [esp+4] 24h +
mov [esp] ebx +
call sub_40E140  +
test eax eax +
mov ebp eax +
jz loc_43F72C  +
lea eax [esp+34h] +
mov [esp+18h] eax +
lea eax [esp+38h] +
mov [esp+14h] eax +
lea eax [ebp+10h] +
mov [esp+10h] eax +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 1 +
mov eax [ebx+0A0h] +
mov [esp] ebx +
add eax 48h +
mov [esp+4] eax +
call sub_42B780  +
test eax eax +
jz loc_43F896  +
mov eax [ebp+20h] +
lea edx [eax-1] +
cmp edx 0FFFFFEFEh +
ja loc_43F7E5  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_42E1E0  +
test eax eax +
jz loc_43F880  +
cmp dword ptr [eax+3Ch] offset off_47D510 +
jz loc_43F880  +
mov eax [ebx+0A0h] +
mov edx [ebp+18h] +
mov eax [eax+64h] +
mov [esp+8] edx +
mov [esp] ebx +
mov [esp+4] eax +
call sub_42B580  +
mov edx [edi+1Ch] +
mov ecx eax +
mov eax [edx+50h] +
test eax eax +
jz loc_43F85A  +
mov dword ptr [esp+8] 0 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_455970  +
cmp eax 0FFFFFFFFh +
jz loc_43F72C  +
mov [ebp+18h] eax +
mov eax [edi+1Ch] +
mov edx [eax+0C0h] +
mov [ebp+0] edx +
mov [eax+0C0h] ebp +
mov [ebp+4] ebx +
mov [ebp+8] esi +
add dword ptr [eax+4Ch] 1 +
mov eax 1 +
and byte ptr [ebp+1Ch] 0Fh +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+2Ch] edx +
mov [esp+28h] ecx +
call sub_4558C0  +
mov edx [esp+2Ch] +
mov ecx [esp+28h] +
test eax eax +
mov [edx+50h] eax +
jnz loc_43F80D  +
jmp loc_43F72C  +
***
mov [esp+4] ebp +
mov [esp] ebx +
call sub_40E390  +
mov eax 2 +
jmp loc_43F72E  +
***
mov [esp+4] ebp +
mov [esp] ebx +
call sub_40E390  +
jmp loc_43F72C  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov ecx [esp+0Ch] +
mov eax [eax+1Ch] +
mov eax [eax+0C0h] +
test eax eax +
jnz loc_43F8D6  +
jmp loc_43F8E4  +
mov eax [eax] +
test eax eax +
jz loc_43F8E4  +
cmp [eax+4] edx +
jnz loc_43F8D0  +
cmp [eax+8] ecx +
jnz loc_43F8D0  +
mov eax [eax+0Ch] +
retn   +
***
mov eax 0FFFFFFFFh +
retn   +
***
mov ebx [esp+18h+arg_8] +
mov eax [ebx+8Ch] +
mov ecx [eax+4] +
mov eax 1 +
cmp ecx 8 +
ja loc_43F940  +
mov edx eax +
shl edx cl +
mov ecx edx +
and ecx 103h +
jz loc_43F940  +
mov eax [esp+18h+arg_4] +
mov eax [eax+1Ch] +
cmp ebx [eax+0C8h] +
jz loc_43F945  +
mov edx [eax+68h] +
test edx edx +
jz loc_43F950  +
cmp ebx edx +
jz loc_43F945  +
cmp ebx [eax+6Ch] +
setnz al  +
movzx eax al +
lea esi [esi+0] +
add esp 18h +
pop ebx  +
retn   +
xor eax eax +
jmp loc_43F940  +
mov eax [eax+38h] +
test eax eax +
jz loc_43F945  +
mov edx [ebx] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_40F360  +
test eax eax +
jz loc_43F945  +
cmp ebx [eax+3Ch] +
setz al  +
movzx eax al +
jmp loc_43F940  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov eax [edi+4] +
mov ebp [eax+1B0h] +
mov eax [esp+2Ch+arg_4] +
mov esi [eax+8Ch] +
mov ebx [esi+68h] +
test ebx ebx +
jz loc_43F9B0  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4Ch] +
test eax eax +
jz loc_43F9A5  +
mov ecx [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] 0 +
test ecx ecx +
jz loc_43FB32  +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_14] 0 +
test eax eax +
jz loc_43FB72  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_43FA51  +
mov eax [ecx+10h] +
mov edx [ecx+14h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_10] ecx +
call sub_411E10  +
mov ecx [esp+2Ch+var_10] +
test eax eax +
jz loc_43FAD7  +
mov eax [esp+2Ch+var_14] +
test eax eax +
jz loc_43FA24  +
mov [esp+2Ch+var_2C] eax +
call free  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
jz loc_43F9A5  +
mov edx [esp+2Ch+arg_10] +
mov eax [esp+2Ch+var_18] +
test edx edx +
jz loc_43FAC5  +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edi +
call sub_40E390  +
jmp loc_43F9A5  +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_10] eax +
mov ebp [esi+4Ch] +
test ebp ebp +
jz loc_43FAA6  +
mov eax [ebp+10h] +
mov edx [ebp+14h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_24] edx +
call sub_411E10  +
test eax eax +
jnz loc_43FA14  +
mov eax [esp+2Ch+var_10] +
mov ecx ebp +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] eax +
mov eax edi +
call sub_43A780  +
test eax eax +
jz loc_43FA14  +
mov ebx [esp+2Ch+arg_10] +
test ebx ebx +
jz loc_43FAB5  +
mov eax [esp+2Ch+arg_C] +
mov [esi+68h] eax +
mov eax [esp+2Ch+var_14] +
mov ebx [esp+2Ch+arg_C] +
test eax eax +
jz loc_43F9A5  +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_C] +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] eax +
mov eax edi +
call sub_43A780  +
test eax eax +
jz loc_43FA14  +
mov eax [esi+3Ch] +
mov ecx [eax+28h] +
mov edx [eax+18h] +
xor eax eax +
add [esp+2Ch+arg_8] edx +
test ecx ecx +
jz loc_43FB12  +
mov eax edx +
xor edx edx +
div  ecx +
mov edx [ebp+174h] +
movzx edx byte ptr [edx+9] +
lea ebp [edx+edx*2] +
shl ebp 2 +
imul ebp eax +
add ebp [esp+2Ch+arg_C] +
mov [esp+2Ch+var_10] ebp +
jmp loc_43FA59  +
mov edx [ebp+174h] +
lea eax [eax+eax*2] +
shl eax 2 +
movzx edx byte ptr [edx+9] +
imul eax edx +
mov edx [esp+2Ch+arg_10] +
test edx edx +
jz loc_43FB9F  +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edi +
call sub_40E140  +
mov [esp+2Ch+arg_C] eax +
mov eax [esp+2Ch+arg_C] +
test eax eax +
jz loc_43FBB5  +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] eax +
jmp loc_43F9CB  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_43FBC2  +
mov eax [eax+18h] +
mov edx [esi+4Ch] +
test edx edx +
jz loc_43FB86  +
add eax [edx+18h] +
mov [esp+2Ch+var_2C] eax +
call sub_412BD0  +
test eax eax +
mov [esp+2Ch+arg_8] eax +
jz loc_43FBAD  +
mov [esp+2Ch+var_14] eax +
jmp loc_43F9DF  +
mov [esp+2Ch+var_2C] eax +
call sub_412BD0  +
mov [esp+2Ch+arg_C] eax +
jmp loc_43FB5D  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+arg_C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] eax +
jmp loc_43FA24  +
xor eax eax +
jmp loc_43FB7C  +
***
push ebx  +
mov ebx eax +
sub esp 20h +
mov esi [esp+20h+arg_0] +
mov eax [esi+4Ch] +
test eax eax +
jnz loc_43FC01  +
mov dword ptr [ebx] 0 +
xor eax eax +
mov dword ptr [ebx+8] 0 +
mov [ebx+4] eax +
mov eax 1 +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ecx+4] +
mov edi [eax+1B0h] +
movzx eax byte ptr [edx+2] +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] 0 +
mov [esp+20h+var_1C] esi +
shr al 6 +
and eax 1 +
mov [esp+20h+var_10] eax +
mov [esp+20h+var_20] ecx +
call sub_43F980  +
test eax eax +
mov [ebx] eax +
jz loc_43FC60  +
mov ecx [edi+174h] +
mov edx [esi+4Ch] +
mov [ebx+4] eax +
movzx ecx byte ptr [ecx+9] +
lea edx [edx+edx*2] +
shl edx 2 +
imul edx ecx +
add edx eax +
mov [ebx+8] edx +
jmp loc_43FBF2  +
xor eax eax +
jmp loc_43FBFA  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov ecx [ecx+94h] +
call sub_439610  +
test eax eax +
jnz loc_43FC94  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [ebx+94h] +
mov edx edi +
mov eax esi +
mov [esp+18h+var_18] ebx +
call sub_43FBD0  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_43FC8D  +
mov eax [esi+0Ch] +
mov edx [ebx+94h] +
test eax eax +
mov edx [edx+0A0h] +
jz loc_43FC8B  +
cmp eax [edx+78h] +
jz loc_43FC8B  +
mov [esp+18h+var_18] eax +
call free  +
jmp loc_43FC8B  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov eax [esi+44h] +
test eax eax +
jz loc_43FDC7  +
mov ebx [eax+8] +
test ebx ebx +
jz loc_43FDC7  +
movzx eax byte ptr [esi+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_43FD20  +
mov [esp+2Ch+var_28] 3125h +
mov [esp+2Ch+var_2C] offset a____Binutils_3 +
call sub_410530  +
mov ebx [esi+18h] +
mov eax [esi+2Ch] +
mov edi [esi+14h] +
add eax ebx +
mov [esp+2Ch+var_14] eax +
mov eax [edi+94h] +
mov [esp+2Ch+var_1C] 1 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] eax +
call sub_43F980  +
test eax eax +
jz loc_43FDF2  +
mov edx [edi+94h] +
mov edx [edx+4] +
mov edx [edx+1B0h] +
mov ecx [edx+174h] +
movzx edx byte ptr [ecx+0Bh] +
movzx ecx byte ptr [ecx+9] +
mov [esp+2Ch+var_D] dl +
mov edx [edi+4Ch] +
lea edx [edx+edx*2] +
shl edx 2 +
imul edx ecx +
add edx eax +
cmp eax edx +
jnb loc_43FDC7  +
mov ebp [eax] +
cmp ebx ebp +
ja loc_43FDC0  +
cmp [esp+2Ch+var_14] ebp +
jbe loc_43FDC0  +
mov ecx [esi+44h] +
mov edi [ecx+4] +
test edi edi +
jz loc_43FDD4  +
sub ebp ebx +
cmp ebp [ecx] +
jnb loc_43FDD4  +
movzx ecx [esp+2Ch+var_D] +
shr ebp cl +
mov ecx [edi+ebp*4] +
test ecx ecx +
jz loc_43FDD4  +
nop   +
add eax 0Ch +
cmp edx eax +
ja loc_43FD94  +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [eax+8] 0 +
add eax 0Ch +
mov dword ptr [eax-8] 0 +
mov dword ptr [eax-0Ch] 0 +
cmp edx eax +
ja loc_43FD94  +
jmp loc_43FDC7  +
mov eax [esp+2Ch+arg_4] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_43FDCC  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+50h] +
mov ecx [esp+54h] +
mov eax [ebp+4] +
mov esi [eax+1B0h] +
mov eax [ecx+3Ch] +
mov edx [eax+8Ch] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_43FE38  +
mov ebx [esp+58h] +
mov edi [eax+28h] +
cmp edi [ebx+28h] +
jz loc_43FF58  +
mov eax [edx+4Ch] +
test eax eax +
jz loc_43FE4B  +
mov ebx [esp+58h] +
mov edi [eax+28h] +
cmp edi [ebx+28h] +
jz loc_43FE80  +
mov eax [ecx+94h] +
mov [esp+0Ch] ecx +
mov [esp+4] ebp +
mov dword ptr [esp] offset aBRelocationSiz +
mov [esp+8] eax +
call off_47D664  +
mov dword ptr [esp] 3 +
call sub_4105E0  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea ecx [edx+4Ch] +
mov edx [esi+174h] +
mov [esp+24h] ecx +
mov ecx [edx+44h] +
mov [esp+1Ch] ecx +
mov ecx edi +
mov eax [eax+30h] +
mov [esp+2Ch] eax +
mov eax [esp+24h] +
mov eax [eax+4] +
mov ebx eax +
xor eax eax +
test ecx ecx +
jz loc_43FF42  +
movzx eax byte ptr [edx+9] +
xor edx edx +
lea edi [eax+eax*2] +
mov eax [esp+58h] +
shl edi 2 +
mov eax [eax+18h] +
mov [esp+28h] eax +
div  ecx +
imul edi eax +
add edi [esp+5Ch] +
cmp [esp+5Ch] edi +
mov [esp+20h] edi +
jnb loc_43FF3A  +
mov eax ebx +
mov edi [esp+2Ch] +
imul eax ecx +
mov ebx [esp+5Ch] +
add edi eax +
mov eax edi +
mov edi esi +
mov esi eax +
nop   +
mov eax [esp+1Ch] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] ebp +
call eax  +
mov edx [edi+174h] +
mov eax [esp+58h] +
movzx edx byte ptr [edx+9] +
lea edx [edx+edx*2] +
lea ebx [ebx+edx*4] +
mov edx [eax+28h] +
add esi edx +
cmp [esp+20h] ebx +
ja loc_43FEF0  +
mov eax [esp+24h] +
test edx edx +
mov eax [eax+4] +
mov ebx eax +
jz loc_43FF73  +
mov eax [esp+58h] +
mov ecx edx +
mov eax [eax+18h] +
mov [esp+28h] eax +
mov eax [esp+28h] +
xor edx edx +
div  ecx +
mov ecx [esp+24h] +
add eax ebx +
mov [ecx+4] eax +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea ecx [edx+3Ch] +
mov edx [esi+174h] +
mov [esp+24h] ecx +
mov ecx [edx+3Ch] +
mov [esp+1Ch] ecx +
mov ecx edi +
jmp loc_43FE96  +
***
xor eax eax +
jmp loc_43FF42  +
***
mov edx [esp+4] +
mov ecx [esp+8] +
movzx eax byte ptr [edx] +
and eax 3 +
cmp al 1 +
jz loc_43FF98  +
mov eax 1 +
retn   +
***
cmp dword ptr [ecx+20h] 0FFFFFFFFh +
jnz loc_43FF92  +
cmp byte ptr [ecx+0Ch] 2 +
jnz loc_43FF92  +
jmp sub_43DDB0  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov esi [esp+28h] +
mov eax [ebx+14h] +
mov edx [ebx+18h] +
mov ecx [eax+40h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
test edx eax +
jz loc_43FFDD  +
shr eax 1 +
sub ecx 1 +
test eax edx +
jnz loc_43FFD4  +
cmp [esi+40h] ecx +
jnb loc_43FFE5  +
mov [esi+40h] ecx +
mov ecx eax +
mov edx 0FFFFFFFFh +
add ecx [esi+24h] +
jb loc_43FFF7  +
not eax  +
mov edx eax +
and edx ecx +
mov [ebx+18h] edx +
add edx [ebx+2Ch] +
test byte ptr [ebx+35h] 8 +
mov [ebx+14h] esi +
mov [esi+24h] edx +
jz loc_440016  +
mov eax [esp+20h] +
mov eax [eax+58h] +
test eax eax +
jz loc_440039  +
js loc_440021  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esi+94h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
cmp byte ptr [eax+1AEh] 0 +
js loc_440016  +
mov eax [esp+20h] +
mov edx [ebx+4] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+4] edx +
mov dword ptr [esp] offset aPCopyRelocAgai +
call eax  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
test ebx ebx +
jnz loc_440075  +
jmp loc_440116  +
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 6 +
cmp al 1 +
jbe loc_440072  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_440116  +
movzx edx byte ptr [ebx+34h] +
xor eax eax +
test dl 8 +
jnz loc_440110  +
mov eax [esp+24h] +
mov esi 1 +
movzx eax byte ptr [eax] +
mov ecx eax +
and ecx 3 +
cmp cl 1 +
jbe loc_4400B4  +
xor si si +
test byte ptr [ebx+35h] 4 +
jz loc_440120  +
movzx edx byte ptr [ebx+31h] +
and edx 3 +
jz loc_4400F0  +
xor eax eax +
cmp dl 2 +
jbe loc_440110  +
cmp dl 3 +
jnz loc_4400F0  +
mov ecx [esp+24h] +
mov edx [ecx+1Ch] +
cmp dword ptr [edx+28h] 1 +
jnz loc_440110  +
mov eax [edx+38h] +
mov edx [esp+28h] +
mov eax [eax+4] +
test edx edx +
mov eax [eax+1B0h] +
jnz loc_44015E  +
mov esi 1 +
nop   +
movzx edx byte ptr [ebx+33h] +
test dl 2 +
jnz loc_440150  +
and edx 0Ah +
mov eax 1 +
jnz loc_440110  +
cmp byte ptr [ebx+0Ch] 3 +
jz loc_440150  +
lea esi [esi+0] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
test al 4 +
mov si 1 +
jnz loc_4400B4  +
mov eax [esp+24h] +
xor si si +
test byte ptr [eax+5] 1 +
jz loc_4400B4  +
shr dl 4 +
xor edx 1 +
mov esi edx +
and esi 1 +
jmp loc_4400B4  +
***
mov eax esi +
add esp 14h +
xor eax 1 +
and eax 1 +
pop ebx  +
pop esi  +
retn   +
***
movzx edx byte ptr [ebx+30h] +
mov eax [eax+158h] +
mov [esp] edx +
call eax  +
test eax eax +
mov eax 1 +
cmovz esi eax +
jmp loc_4400F0  +
***
push ebx  +
sub esp 10h +
mov edx [esp+10h+arg_0] +
test edx edx +
jz loc_440200  +
movzx ecx byte ptr [edx+31h] +
and ecx 3 +
movzx eax cl +
sub eax 1 +
cmp eax 1 +
jbe loc_440200  +
movzx ebx byte ptr [edx+33h] +
test bl 0Ah +
jnz loc_4401AF  +
cmp byte ptr [edx+0Ch] 3 +
jz loc_4401B6  +
xor eax eax +
and ebx 2 +
jz loc_440205  +
movzx eax byte ptr [edx+34h] +
test al 8 +
jnz loc_440200  +
cmp dword ptr [edx+20h] 0FFFFFFFFh +
jz loc_440200  +
mov esi [esp+10h+arg_4] +
movzx edi byte ptr [esi] +
mov esi edi +
and esi 3 +
mov ebx esi +
cmp bl 1 +
jbe loc_440200  +
test byte ptr [edx+35h] 4 +
jnz loc_4401EC  +
and edi 4 +
jnz loc_440200  +
mov esi [esp+10h+arg_4] +
test byte ptr [esi+5] 1 +
jnz loc_440250  +
xor eax eax +
test cl cl +
jz loc_440205  +
mov eax [esp+10h+arg_4] +
mov eax [eax+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_440210  +
nop   +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+38h] +
mov eax [eax+4] +
mov ecx [eax+1B0h] +
mov eax [esp+10h+arg_4] +
mov eax [eax+58h] +
test eax eax +
jz loc_440236  +
mov eax [esp+10h+arg_8] +
jns loc_440205  +
cmp byte ptr [ecx+1AEh] 0 +
js loc_440205  +
movzx edx byte ptr [edx+30h] +
mov eax [ecx+158h] +
mov [esp+10h+var_10] edx +
call eax  +
test eax eax +
jz loc_440200  +
mov eax [esp+10h+arg_8] +
jmp loc_440205  +
test al 10h +
jnz loc_4401EC  +
jmp loc_440200  +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
mov esi [esp+10h] +
mov eax [eax+64h] +
test eax eax +
jnz loc_44027A  +
jmp loc_4402B0  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_4402B0  +
test byte ptr [eax+15h] 4 +
nop   +
jz loc_440273  +
mov edx eax +
xor ecx ecx +
jmp loc_44028E  +
test byte ptr [edx+15h] 4 +
jz loc_44029D  +
mov ebx [edx+40h] +
mov edx [edx+0Ch] +
cmp ecx ebx +
cmovb ecx ebx +
test edx edx +
jnz loc_440288  +
mov edx [esi+1Ch] +
mov [edx+0C8h] eax +
mov [eax+40h] ecx +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esi+1Ch] +
mov dword ptr [eax+0C8h] 0 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov ebx [eax+1Ch] +
cmp dword ptr [ebx+28h] 1 +
jz loc_4402F0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+38h] +
mov edx [eax+4] +
mov ebp [edx+1B0h] +
mov [esp+2Ch+var_28] offset a_dynamic +
mov [esp+2Ch+var_2C] eax +
call sub_40F360  +
test eax eax +
mov esi eax +
jz loc_440380  +
mov eax [ebp+174h] +
movzx edi byte ptr [eax+6] +
mov eax [esi+6Ch] +
add edi [esi+24h] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call sub_412C60  +
test eax eax +
jz loc_4402E4  +
mov edx [esp+2Ch+arg_4] +
mov ecx [ebx+38h] +
mov ebx eax +
add ebx [esi+24h] +
mov [esp+2Ch+var_20] eax +
mov [esp+2Ch+var_14] edx +
mov edx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_10] edx +
mov edx [ebp+174h] +
mov edx [edx+34h] +
mov [esp+2Ch+var_24] ebx +
lea ebx [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ecx +
call edx  +
mov eax [esp+2Ch+var_20] +
mov [esi+24h] edi +
mov [esi+6Ch] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] 0C51h +
mov [esp+2Ch+var_2C] offset a____Binutils_3 +
call sub_410530  +
jmp loc_440312  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [edx+1Ch] +
mov [esp+3Ch+var_20] edx +
mov esi [ebx+38h] +
test esi esi +
jz loc_440510  +
mov edx [ebx+50h] +
test edx edx +
jz loc_440520  +
mov eax [esp+3Ch+var_20] +
mov ebp [eax+1Ch] +
mov eax [ebp+50h] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] eax +
call sub_455970  +
cmp eax 0FFFFFFFFh +
mov [esp+3Ch+var_24] eax +
jz loc_440538  +
mov eax [ebp+50h] +
mov edi [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edi +
call sub_455B60  +
cmp eax 1 +
jz loc_4404A2  +
mov eax [ebp+38h] +
mov edx [eax+4] +
mov esi [edx+1B0h] +
mov [esp+3Ch+var_38] offset a_dynamic +
mov [esp+3Ch+var_3C] eax +
call sub_40F360  +
test eax eax +
jz loc_4404A2  +
mov ebx [eax+6Ch] +
mov edx [eax+24h] +
add edx ebx +
cmp ebx edx +
jnb loc_4404A2  +
mov edi ebp +
mov ecx [esi+174h] +
mov ebp eax +
jmp loc_440459  +
mov ecx [esi+174h] +
movzx eax byte ptr [ecx+6] +
add ebx eax +
mov eax [ebp+6Ch] +
add eax [ebp+24h] +
cmp ebx eax +
jnb loc_4404A0  +
mov eax [ecx+30h] +
lea edx [esp+3Ch+var_14] +
mov ecx [edi+38h] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ecx +
call eax  +
cmp [esp+3Ch+var_14] 1 +
jnz loc_440443  +
mov eax [esp+3Ch+var_24] +
cmp [esp+3Ch+var_10] eax +
jnz loc_440443  +
mov eax [edi+50h] +
mov edi [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edi +
call sub_455AC0  +
mov eax 1 +
jmp loc_440505  +
mov ebp edi +
mov eax [esp+3Ch+arg_0] +
test eax eax +
jz loc_4404F0  +
mov eax [ebp+38h] +
mov edi [esp+3Ch+var_20] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edi +
call sub_43D990  +
test eax eax +
jz loc_440538  +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
call sub_4402D0  +
test eax eax +
setz al  +
add esp 3Ch +
movzx eax al +
pop ebx  +
neg eax  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+50h] +
mov esi [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] esi +
call sub_455AC0  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+50h] +
mov [ebx+38h] eax +
test edx edx +
jnz loc_4403C4  +
nop   +
mov [esp+3Ch+var_24] ecx +
call sub_4558C0  +
mov ecx [esp+3Ch+var_24] +
test eax eax +
mov [ebx+50h] eax +
jnz loc_4403C4  +
mov eax 0FFFFFFFFh +
jmp loc_440505  +
***
mov eax [esp+8] +
cmp [esp+4] eax +
setz al  +
movzx eax al +
retn   +
***
push ebx  +
mov edx [esp+8] +
mov eax [esp+0Ch] +
cmp edx eax +
jz loc_440581  +
mov ecx [edx+1B0h] +
mov edx [eax+1B0h] +
xor eax eax +
mov ebx [edx] +
cmp [ecx] ebx +
jz loc_440573  +
pop ebx  +
retn   +
***
mov eax [edx+74h] +
cmp [ecx+74h] eax +
pop ebx  +
setz al  +
movzx eax al +
retn   +
***
mov eax 1 +
pop ebx  +
retn   +
***
sub esp 2Ch +
mov eax [esp+34h] +
mov ecx [esp+38h] +
mov edx [eax+18h] +
mov edx [edx+28h] +
mov [esp+14h] ecx +
mov ecx [esp+30h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call edx  +
add esp 2Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+44h] +
mov esi [esp+48h] +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_423EB0  +
test eax eax +
mov ebx eax +
jz loc_440626  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 40h +
mov [esp] esi +
call strchr  +
test eax eax +
jz loc_44061C  +
cmp byte ptr [eax+1] 40h +
jnz loc_44061C  +
mov [esp] esi +
mov ebx 0FFFFFFB8h +
mov [esp+1Ch] eax +
call strlen  +
mov ecx [esp+40h] +
mov [esp] ecx +
mov [esp+4] eax +
mov [esp+18h] eax +
call sub_40E140  +
test eax eax +
mov ebp eax +
jz loc_44061C  +
mov ecx [esp+1Ch] +
mov [esp+4] esi +
mov [esp] eax +
sub ecx esi +
lea ebx [ecx+1] +
mov [esp+8] ebx +
mov [esp+1Ch] ecx +
call memcpy  +
mov edx [esp+18h] +
lea eax [ebp+ebx+0] +
mov ecx [esp+1Ch] +
mov [esp] eax +
sub edx ebx +
lea ecx [esi+ecx+2] +
mov [esp+8] edx +
mov [esp+4] ecx +
call memcpy  +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_423EB0  +
test eax eax +
mov esi eax +
jz loc_4406EE  +
mov eax [esp+40h] +
mov ebx esi +
mov [esp+4] ebp +
mov [esp] eax +
call sub_40E390  +
jmp loc_44061C  +
***
mov byte ptr [ebp+ebx-1] 0 +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_423EB0  +
mov esi eax +
jmp loc_4406D7  +
***
push esi  +
push ebx  +
sub esp 13Ch +
mov ebp [esp+13Ch+arg_0] +
movzx eax byte ptr [ebp+28h] +
and eax 7 +
cmp eax 1 +
jz loc_440770  +
cmp eax 2 +
jnz loc_4407B5  +
test byte ptr [ebp+2Bh] 20h +
jz loc_440BC0  +
mov eax [ebp+0A0h] +
mov ebx [eax+14h] +
test ebx ebx +
jnz loc_440972  +
add esp 13Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+13Ch+arg_4] +
test byte ptr [ebp+29h] 8 +
mov eax [eax+1Ch] +
mov [esp+13Ch+var_FC] eax +
mov eax [ebp+4] +
mov edi [eax+1B0h] +
mov [esp+13Ch+var_104] edi +
jz loc_4407D0  +
mov edi [esp+13Ch+arg_4] +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 2 +
jz loc_441020  +
mov edi [esp+13Ch+var_FC] +
cmp dword ptr [edi+28h] 1 +
jz loc_440DE6  +
mov [esp+13Ch+var_13C] 3 +
call sub_4105E0  +
xor eax eax +
add esp 13Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+13Ch+var_100] 0 +
mov edi [esp+13Ch+arg_4] +
mov eax [ebp+0A0h] +
test byte ptr [edi+5] 20h +
jz loc_440832  +
mov edi [esp+13Ch+var_104] +
movzx eax word ptr [eax+26h] +
mov edx [edi+8] +
cmp edx eax +
jz loc_440832  +
mov ecx [edi+16Ch] +
test ecx ecx +
jz loc_440B80  +
cmp eax ecx +
jnz loc_440B80  +
mov edi [esp+13Ch+arg_4] +
mov ecx [edi+18h] +
mov ecx [ecx+2Ch] +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] ebp +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_13C] offset aPAlternateElfM +
call ecx  +
mov ebx [ebp+64h] +
test ebx ebx +
jnz loc_44084B  +
jmp loc_440C09  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_440BF0  +
mov eax [ebx] +
mov edi offset a_gnu_warning_ +
mov ecx 0Dh +
mov esi eax +
cmps   +
jnz loc_440840  +
mov ecx [esp+13Ch+var_100] +
lea edi [eax+0Dh] +
test ecx ecx +
jz loc_44089F  +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_12C] 1 +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] eax +
call sub_423EB0  +
test eax eax +
jz loc_44089F  +
movzx eax byte ptr [eax+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_440840  +
mov esi [ebx+24h] +
mov [esp+13Ch+var_13C] ebp +
lea eax [esi+1] +
mov [esp+13Ch+var_138] eax +
call sub_40E140  +
test eax eax +
jz loc_440BB0  +
mov [esp+13Ch+var_128] esi +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_108] eax +
call sub_40FA90  +
test eax eax +
jz loc_440BB0  +
mov edx [esp+13Ch+var_108] +
mov eax [esp+13Ch+var_104] +
mov byte ptr [edx+esi] 0 +
mov [esp+13Ch+var_118] 0 +
movzx eax byte ptr [eax+1ACh] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_124] edx +
mov [esp+13Ch+var_128] 0 +
and eax 1 +
mov [esp+13Ch+var_11C] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_12C] ebx +
mov [esp+13Ch+var_130] 1000h +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] eax +
call sub_424B10  +
test eax eax +
jz loc_440BB0  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 1 +
ja loc_440840  +
mov dword ptr [ebx+24h] 0 +
or dword ptr [ebx+14h] 8000h +
jmp loc_440840  +
mov [esp+13Ch+var_13C] ebx +
call sub_412D60  +
mov edi eax +
mov [esp+13Ch+var_F8] eax +
xor eax eax +
test edi edi +
jz loc_4407C3  +
mov eax [ebp+0A0h] +
shl ebx 4 +
mov eax [eax+10h] +
mov edi eax +
mov [esp+13Ch+var_EC] eax +
mov eax [ebp+4] +
add ebx edi +
cmp edi ebx +
mov [esp+13Ch+var_108] ebx +
mov eax [eax+1B0h] +
mov eax [eax+40h] +
mov [esp+13Ch+var_100] eax +
jnb loc_44207C  +
mov [esp+13Ch+arg_0] ebp +
mov ebp [esp+13Ch+var_F8] +
mov ecx [esp+13Ch+var_EC] +
xor edi edi +
mov ebx 0FFFFFFFFh +
mov eax edi +
mov esi 0FFFFFFFFh +
mov edi ebp +
mov ebp eax +
mov [esp+13Ch+var_104] ebx +
mov [esp+13Ch+var_FC] 0 +
mov ebx ecx +
jmp loc_440A08  +
cmp al 2 +
jz loc_4409F8  +
mov byte ptr [edi+ebp] 1 +
add ebx 10h +
add ebp 1 +
cmp ebx [esp+13Ch+var_108] +
jnb loc_44206E  +
cmp byte ptr [edi+ebp] 0 +
jnz loc_4409F8  +
mov edx [ebx+0Ch] +
mov eax [esp+13Ch+var_104] +
xor eax [ebx+8] +
xor edx esi +
or edx eax +
jz loc_4409F4  +
mov eax [ebx] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_0] +
mov [esp+13Ch+var_13C] eax +
mov eax [esp+13Ch+var_100] +
call eax  +
cmp eax 0FFFFFFB8h +
jz loc_440B9F  +
test eax eax +
jz loc_4409F8  +
movzx eax byte ptr [eax+0Ch] +
cmp al 5 +
jz loc_441048  +
cmp al 1 +
jnz loc_4409F0  +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_0] +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] eax +
call sub_41F930  +
test eax eax +
mov [esp+13Ch+var_14] eax +
jz loc_440B9F  +
mov [esp+13Ch+var_138] 1 +
mov [esp+13Ch+var_13C] eax +
call sub_40EFC0  +
test eax eax +
jz loc_440B9F  +
mov eax [esp+13Ch+arg_4] +
lea ecx [esp+13Ch+var_14] +
mov edx [ebx] +
mov eax [eax+1Ch] +
mov esi [eax+20h] +
mov eax [esp+13Ch+arg_4] +
mov eax [eax+18h] +
mov eax [eax] +
mov [esp+13Ch+var_130] ecx +
mov ecx [esp+13Ch+arg_4] +
mov [esp+13Ch+var_134] edx +
mov edx [esp+13Ch+var_14] +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_138] edx +
call eax  +
test eax eax +
jz loc_440B9F  +
mov eax [esp+13Ch+var_14] +
mov ecx [esp+13Ch+arg_4] +
mov edx [eax+4] +
mov edx [edx+168h] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] eax +
call edx  +
test eax eax +
jz loc_440B9F  +
mov eax [esp+13Ch+arg_4] +
lea edx [ebx-8] +
mov [esp+13Ch+var_104] edi +
mov [esp+13Ch+var_F4] ebp +
mov eax [eax+1Ch] +
cmp esi [eax+20h] +
mov eax 1 +
cmovz eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_FC] eax +
mov eax ebp +
jmp loc_440B5D  +
mov ecx [edx] +
sub eax 1 +
sub edx 10h +
mov esi [edx+14h] +
mov edi [ebx+8] +
mov ebp [ebx+0Ch] +
xor ecx edi +
xor esi ebp +
or esi ecx +
jnz loc_441033  +
mov edi [esp+13Ch+var_104] +
test eax eax +
mov byte ptr [edi+eax] 1 +
jnz loc_440B40  +
mov eax [ebx+8] +
mov ebp [esp+13Ch+var_F4] +
mov esi [ebx+0Ch] +
mov [esp+13Ch+var_104] eax +
jmp loc_4409F8  +
mov edi [esp+13Ch+var_104] +
mov ecx [edi+170h] +
test ecx ecx +
jz loc_440832  +
cmp eax ecx +
jnz loc_440832  +
jmp loc_440810  +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_13C] eax +
call free  +
nop   +
lea esi [esi+0] +
xor eax eax +
add esp 13Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+13Ch+var_138] 0 +
mov [esp+13Ch+var_13C] ebp +
call sub_41FC20  +
test eax eax +
jz loc_44075D  +
mov [esp+13Ch+var_13C] 8 +
call sub_4105E0  +
xor eax eax +
jmp loc_4407C3  +
mov eax [ebp+64h] +
test eax eax +
jz loc_440C09  +
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 200h +
jz loc_440E06  +
mov edx [esp+13Ch+var_100] +
xor eax eax +
test edx edx +
jnz loc_440E16  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax] 1 +
jz loc_440C31  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_442BF3  +
mov ecx [ebp+0A0h] +
mov [esp+13Ch+var_AC] 1 +
lea eax [ecx+48h] +
mov [esp+13Ch+var_E4] eax +
mov eax [esp+13Ch+var_104] +
xor edx edx +
mov [esp+13Ch+var_108] 0 +
mov eax [eax+174h] +
movzx ebx byte ptr [eax+5] +
mov eax [esp+13Ch+var_E4] +
mov eax [eax+18h] +
div  ebx +
mov [esp+13Ch+var_D0] eax +
mov eax [ecx+928h] +
test eax eax +
jnz loc_440C87  +
mov eax [esp+13Ch+var_E4] +
mov eax [eax+20h] +
sub [esp+13Ch+var_D0] eax +
mov [esp+13Ch+var_108] eax +
mov eax [ecx+218h] +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_F0] eax +
mov eax [esp+13Ch+var_D0] +
test eax eax +
jnz loc_44237A  +
mov edi [esp+13Ch+var_100] +
test edi edi +
jnz loc_442400  +
mov ebx [ebp+0A0h] +
mov [esp+13Ch+var_C0] 0 +
test byte ptr [ebx+924h] 1 +
jz loc_4411CA  +
mov ecx [esp+13Ch+var_FC] +
mov edi [ecx+0Ch] +
test edi edi +
mov [esp+13Ch+var_F8] edi +
jz loc_442DB0  +
mov esi [ecx] +
xor eax eax +
mov [esp+13Ch+arg_0] ebp +
mov ebp ecx +
lea edi [esi+edi*4] +
nop   +
mov edx [esi] +
test edx edx +
jz loc_440D12  +
mov ecx [ebp+14h] +
lea esi [esi+0] +
add eax ecx +
cmp byte ptr [edx+0Ch] 7 +
mov edx [edx] +
lea ebx [eax+ecx] +
cmovz eax ebx +
test edx edx +
jnz loc_440D00  +
add esi 4 +
cmp esi edi +
jnz loc_440CF0  +
mov ebp [esp+13Ch+arg_0] +
mov edi [esp+13Ch+var_F8] +
shl edi 2 +
add eax edi +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_A8] edi +
call sub_412BD0  +
test eax eax +
mov [esp+13Ch+var_B8] eax +
jz loc_440DB7  +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_138] 1 +
mov [esp+13Ch+var_13C] eax +
call sub_412630  +
test eax eax +
mov [esp+13Ch+var_A4] eax +
jz loc_4427BA  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+80h] +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov [esp+13Ch+var_C8] 0 +
test eax eax +
jnz loc_442C40  +
mov eax [esp+13Ch+var_B8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_C8] +
test eax eax +
jz loc_440DB7  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_C0] +
test eax eax +
jz loc_440DC7  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov ebx [esp+13Ch+var_D4] +
test ebx ebx +
jz loc_440BB0  +
mov eax [esp+13Ch+var_D4] +
mov [esp+13Ch+var_13C] eax +
call free  +
xor eax eax +
jmp loc_4407C3  +
mov edi [esp+13Ch+arg_4] +
mov edx [edi+30h] +
cmp eax [edx+4] +
jnz loc_4407B5  +
mov [esp+13Ch+var_100] 1 +
jmp loc_4407D8  +
cmp [esp+13Ch+var_100] 0 +
mov eax 1 +
jz loc_440C31  +
mov edi [esp+13Ch+var_FC] +
cmp dword ptr [edi+28h] 1 +
jnz loc_440BB0  +
test eax eax +
mov [esp+13Ch+var_20] 0 +
mov [esp+13Ch+var_1C] 0 +
jnz loc_44376C  +
mov eax [ebp+0A0h] +
mov eax [eax+924h] +
mov [esp+13Ch+var_138] offset a_dynamic +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_E4] eax +
call sub_40F280  +
test eax eax +
mov edi eax +
mov [esp+13Ch+var_108] eax +
jz loc_4425F7  +
lea eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call sub_40FBE0  +
test eax eax +
jz loc_442560  +
mov esi [esp+13Ch+var_108] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] esi +
call sub_42F700  +
cmp eax 0FFFFFEFFh +
jz loc_442560  +
mov edx [ebp+0A0h] +
mov edi [esp+13Ch+var_18] +
mov ecx [esi+24h] +
mov edx [edx+40h] +
add ecx edi +
cmp edi ecx +
mov eax [edx+eax*4] +
mov eax [eax+1Ch] +
mov [esp+13Ch+var_F8] eax +
jnb loc_442D2F  +
mov eax [esp+13Ch+var_104] +
mov [esp+13Ch+var_F0] 0 +
mov [esp+13Ch+var_F4] 0 +
mov eax [eax+174h] +
jmp loc_440F23  +
cmp eax 6FFFFEFCh +
jz loc_442229  +
mov eax [esp+13Ch+var_104] +
mov esi [esp+13Ch+var_108] +
mov eax [eax+174h] +
mov ecx [esi+24h] +
movzx edx byte ptr [eax+6] +
add edi edx +
mov edx [esp+13Ch+var_18] +
add ecx edx +
cmp edi ecx +
jnb loc_442D41  +
mov eax [eax+30h] +
lea ecx [esp+13Ch+var_14] +
mov [esp+13Ch+var_134] ecx +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov eax [esp+13Ch+var_14] +
cmp eax 0Eh +
jz loc_4421F6  +
cmp eax 1 +
jz loc_442146  +
cmp eax 1Dh +
jz loc_442090  +
mov edx [esp+13Ch+var_1C] +
test edx edx +
jnz loc_440EF0  +
cmp eax 0Fh +
jnz loc_440EF0  +
mov [esp+13Ch+var_138] 0Ch +
mov esi [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
call sub_40E140  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] esi +
mov ebx eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_42B580  +
test eax eax +
jz loc_442560  +
test ebx ebx +
jz loc_442560  +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_E8] eax +
call strlen  +
mov [esp+13Ch+var_13C] ebp +
lea ecx [eax+1] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_EC] ecx +
call sub_40E140  +
test eax eax +
mov esi eax +
jz loc_442560  +
mov edx [esp+13Ch+var_E8] +
mov ecx [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov [ebx+8] esi +
mov [ebx+4] ebp +
mov dword ptr [ebx] 0 +
mov edx [esp+13Ch+var_20] +
test edx edx +
jnz loc_441008  +
jmp loc_44363D  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_441006  +
mov [edx] ebx +
mov eax [esp+13Ch+var_14] +
jmp loc_440EF0  +
mov [esp+13Ch+var_13C] 5 +
call sub_4105E0  +
xor eax eax +
jmp loc_4407C3  +
mov eax edi +
mov esi ebp +
mov edi [esp+13Ch+var_104] +
mov ebp [esp+13Ch+var_F4] +
mov [esp+13Ch+var_104] eax +
jmp loc_4409F8  +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_0] +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] eax +
call sub_41F930  +
test eax eax +
mov ecx eax +
jz loc_4409F8  +
movzx eax byte ptr [eax+2Ch] +
and eax 0Ch +
cmp al 4 +
jz loc_4409F8  +
mov [esp+13Ch+var_138] 1 +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_F4] ecx +
call sub_40EFC0  +
test eax eax +
jz loc_4409F8  +
mov eax [esp+13Ch+var_F4] +
test byte ptr [eax+29h] 8 +
jnz loc_44270D  +
mov eax [eax+0A0h] +
mov [esp+13Ch+var_F0] eax +
mov eax [esp+13Ch+var_F0] +
add eax 48h +
mov [esp+13Ch+var_E8] eax +
mov eax [esp+13Ch+var_F4] +
xor edx edx +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+5] +
mov eax [esp+13Ch+var_E8] +
mov eax [eax+18h] +
div  ecx +
mov edx [esp+13Ch+var_F0] +
mov edx [edx+928h] +
mov ecx eax +
xor eax eax +
test edx edx +
jnz loc_4410FA  +
mov eax [esp+13Ch+var_E8] +
mov eax [eax+20h] +
sub ecx eax +
test ecx ecx +
jz loc_4409F8  +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_E8] +
mov [esp+13Ch+var_134] ecx +
mov [esp+13Ch+var_F0] ecx +
mov ecx [esp+13Ch+var_F4] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_13C] ecx +
call sub_42B780  +
test eax eax +
mov edx eax +
mov [esp+13Ch+var_E4] eax +
jz loc_4409F8  +
mov ecx [esp+13Ch+var_F0] +
lea eax [ecx+ecx*4] +
mov ecx edx +
lea edx [edx+eax*4] +
cmp ecx edx +
mov [esp+13Ch+var_F0] edx +
jnb loc_4411B9  +
mov [esp+13Ch+var_E0] edi +
mov edi [esp+13Ch+var_F4] +
mov [esp+13Ch+var_DC] ebp +
mov ebp [esp+13Ch+var_E8] +
mov [esp+13Ch+var_E8] esi +
mov esi ecx +
jmp loc_441193  +
mov edx [ebx] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
call strcmp  +
test eax eax +
jz loc_443378  +
add esi 14h +
cmp [esp+13Ch+var_F0] esi +
jbe loc_4411AD  +
mov edx [esi+8] +
mov eax [ebp+1Ch] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_138] eax +
call sub_42B580  +
test eax eax +
jnz loc_441174  +
mov edi [esp+13Ch+var_E0] +
mov ebp [esp+13Ch+var_DC] +
mov esi [esp+13Ch+var_E8] +
mov eax [esp+13Ch+var_E4] +
mov [esp+13Ch+var_13C] eax +
call free  +
jmp loc_4409F8  +
mov [esp+13Ch+var_A8] 0 +
mov [esp+13Ch+var_BC] 0 +
mov [esp+13Ch+var_D8] 0 +
mov [esp+13Ch+var_98] 0 +
mov [esp+13Ch+var_9C] 0 +
mov [esp+13Ch+var_B8] 0 +
mov [esp+13Ch+var_8C] 0 +
mov [esp+13Ch+var_90] 0 +
mov [esp+13Ch+var_94] 0 +
mov [esp+13Ch+var_A4] 0 +
mov edi [esp+13Ch+var_C0] +
mov ecx [esp+13Ch+var_108] +
mov ebx [esp+13Ch+var_D4] +
mov [esp+13Ch+var_B0] 0 +
test edi edi +
lea eax [edi+ecx*2] +
mov ecx 0 +
cmovz eax ecx +
mov [esp+13Ch+var_EC] eax +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_C8] 0 +
mov [esp+13Ch+var_CC] 0 +
lea eax [eax+eax*4] +
lea eax [ebx+eax*4] +
cmp ebx eax +
mov [esp+13Ch+var_E0] eax +
jnb loc_441832  +
mov eax [esp+13Ch+var_100] +
xor eax 1 +
mov [esp+13Ch+var_A0] eax +
mov eax [ebx] +
mov [esp+13Ch+var_44] 0 +
mov [esp+13Ch+var_58] 0 +
mov [esp+13Ch+var_5C] 0 +
mov [esp+13Ch+var_60] eax +
mov eax [esp+13Ch+var_104] +
mov eax [eax+144h] +
mov [esp+13Ch+var_13C] ebx +
call eax  +
mov [esp+13Ch+var_E8] eax +
movzx eax byte ptr [ebx+0Ch] +
mov byte ptr [esp+13Ch+var_F8] al +
shr byte ptr [esp+13Ch+var_F8] 4 +
movzx eax byte ptr [esp+13Ch+var_F8] +
cmp al 1 +
jz loc_441A70  +
jb loc_44180E  +
cmp al 2 +
jz loc_441A58  +
cmp al 0Ah +
jnz loc_441305  +
mov [esp+13Ch+var_58] 800000h +
mov eax [ebx+10h] +
test eax eax +
jz loc_4419A7  +
cmp eax 0FFFFFFF1h +
jz loc_441AFB  +
cmp eax 0FFFFFFF2h +
jnz loc_441AB2  +
mov eax [ebx+4] +
mov [esp+13Ch+var_5C] offset off_47D3C0 +
mov [esp+13Ch+var_60] eax +
mov eax [esp+13Ch+var_E4] +
mov edx [ebx+8] +
mov eax [eax+1Ch] +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_42B580  +
test eax eax +
mov [esp+13Ch+var_54] eax +
jz loc_441FD3  +
cmp dword ptr [ebx+10h] 0FFFFFFF2h +
jz loc_4419F2  +
mov eax [esp+13Ch+var_104] +
mov eax [eax+64h] +
test eax eax +
jz loc_441A48  +
lea edx [esp+13Ch+var_60] +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_124] edx +
lea edx [esp+13Ch+var_5C] +
mov [esp+13Ch+var_128] edx +
lea edx [esp+13Ch+var_58] +
mov [esp+13Ch+var_12C] edx +
lea edx [esp+13Ch+var_54] +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] ebx +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
test eax eax +
jz loc_441FD3  +
mov eax [esp+13Ch+var_5C] +
mov [esp+13Ch+var_F4] eax +
mov eax [esp+13Ch+var_54] +
test eax eax +
jz loc_44180E  +
mov eax [esp+13Ch+var_F4] +
test eax eax +
jz loc_4425E6  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 6 +
jz loc_441A97  +
mov eax [esp+13Ch+var_F4] +
cmp eax offset off_47D468 +
jz loc_442035  +
mov eax [eax+14h] +
mov [esp+13Ch+var_108] eax +
shr [esp+13Ch+var_108] 0Ch +
xor [esp+13Ch+var_108] 1 +
and [esp+13Ch+var_108] 1 +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+var_FC] +
mov [esp+13Ch+var_50] 0 +
mov [esp+13Ch+var_48] 0 +
movzx eax byte ptr [eax+1ACh] +
mov [esp+13Ch+var_38] 0 +
mov [esp+13Ch+var_40] 0 +
mov [esp+13Ch+var_3C] 0 +
shr al 1 +
and eax 1 +
cmp dword ptr [edi+28h] 1 +
mov [esp+13Ch+var_4C] eax +
mov eax [esp+13Ch+var_F4] +
jnz loc_441721  +
mov eax [esp+13Ch+var_EC] +
test eax eax +
jz loc_442042  +
lea eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_42B380  +
movzx eax word ptr [esp+13Ch+var_18] +
mov esi eax +
and esi 7FFFh +
test ax ax +
js loc_4414D1  +
cmp esi 1 +
jbe loc_44226B  +
cmp [esp+13Ch+var_5C] offset off_47D510 +
jz loc_44224D  +
mov eax [ebx+10h] +
test eax eax +
jz loc_441F30  +
mov eax [ebp+0A0h] +
mov ecx [eax+238h] +
cmp esi ecx +
ja loc_4425C2  +
cmp esi 1 +
jbe loc_44259E  +
mov edi [eax+240h] +
lea edx [esi+esi*4] +
lea edx [edi+edx*8] +
mov edx [edx-10h] +
test edx edx +
jz loc_4425C2  +
mov [esp+13Ch+var_13C] edx +
mov [esp+13Ch+var_DC] edx +
call strlen  +
mov edx [esp+13Ch+var_DC] +
mov [esp+13Ch+var_B4] eax +
mov edi [esp+13Ch+var_54] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
mov eax ecx +
mov ecx [esp+13Ch+var_B4] +
not eax  +
sub eax 1 +
mov [esp+13Ch+var_DC] eax +
add ecx eax +
lea eax [ecx+3] +
add ecx 2 +
cmp word ptr [esp+13Ch+var_18] 0 +
cmovs eax ecx +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_C4] edx +
mov [esp+13Ch+var_13C] eax +
call sub_412630  +
test eax eax +
mov edi eax +
jz loc_441FD3  +
mov eax [esp+13Ch+var_DC] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_138] eax +
call memcpy  +
mov eax [esp+13Ch+var_DC] +
mov edx [esp+13Ch+var_C4] +
lea ecx [edi+eax] +
mov byte ptr [ecx] 40h +
lea eax [ecx+1] +
cmp word ptr [esp+13Ch+var_18] 0 +
js loc_4415BD  +
cmp dword ptr [ebx+10h] 0 +
jz loc_4415BD  +
lea eax [ecx+2] +
mov byte ptr [ecx+1] 40h +
mov ecx [esp+13Ch+var_B4] +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_13C] eax +
add ecx 1 +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov eax [esp+13Ch+var_5C] +
mov ecx edi +
mov [esp+13Ch+var_54] edi +
cmp eax offset off_47D468 +
jz loc_441613  +
mov eax [esp+13Ch+var_100] +
test eax eax +
jnz loc_441613  +
test byte ptr [ebp+2Bh] 8 +
jz loc_441613  +
movzx eax byte ptr [ebx+0Dh] +
mov edx eax +
and edx 3 +
cmp dl 1 +
jz loc_441613  +
and eax 0FFFFFFFCh +
or eax 2 +
mov [ebx+0Dh] al +
lea eax [esp+13Ch+var_38] +
mov edx [esp+13Ch+arg_4] +
mov [esp+13Ch+var_110] eax +
lea eax [esp+13Ch+var_50] +
mov [esp+13Ch+var_114] eax +
lea eax [esp+13Ch+var_4C] +
mov [esp+13Ch+var_118] eax +
lea eax [esp+13Ch+var_44] +
mov [esp+13Ch+var_11C] eax +
lea eax [esp+13Ch+var_14] +
mov [esp+13Ch+var_120] eax +
lea eax [esp+13Ch+var_40] +
mov [esp+13Ch+var_124] eax +
lea eax [esp+13Ch+var_48] +
mov [esp+13Ch+var_128] eax +
lea eax [esp+13Ch+var_3C] +
mov [esp+13Ch+var_12C] eax +
mov eax [esp+13Ch+var_F0] +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_130] eax +
lea eax [esp+13Ch+var_60] +
mov [esp+13Ch+var_134] eax +
lea eax [esp+13Ch+var_5C] +
mov [esp+13Ch+var_138] eax +
mov eax ebp +
call sub_43DE90  +
test eax eax +
jz loc_441FD3  +
mov eax [esp+13Ch+var_14] +
test eax eax +
jnz loc_44180E  +
mov eax [esp+13Ch+var_44] +
test eax eax +
jz loc_4416D3  +
mov eax [esp+13Ch+var_38] +
test eax eax +
mov eax 0 +
cmovz eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_108] eax +
mov eax [esp+13Ch+var_F0] +
mov eax [eax] +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-6] +
cmp dl 1 +
ja loc_4416F4  +
mov eax [eax+14h] +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-6] +
cmp dl 1 +
jbe loc_4416E5  +
mov edx [ebp+0A0h] +
mov edx [edx+240h] +
test edx edx +
jz loc_44171A  +
cmp esi 1 +
jbe loc_44171A  +
test byte ptr [esp+13Ch+var_108] 1 +
jz loc_44171A  +
lea ecx [esi+esi*4] +
lea edx [edx+ecx*8-28h] +
mov [eax+40h] edx +
mov eax [esp+13Ch+var_5C] +
mov edi [esp+13Ch+var_F0] +
mov ecx [esp+13Ch+var_104] +
mov [esp+13Ch+var_118] edi +
movzx edx byte ptr [ecx+1ACh] +
mov [esp+13Ch+var_12C] eax +
mov eax [esp+13Ch+var_58] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_124] 0 +
and edx 1 +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_11C] edx +
mov edx [esp+13Ch+var_60] +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_128] edx +
mov [esp+13Ch+var_13C] eax +
call sub_424B10  +
test eax eax +
jz loc_441FD3  +
mov edi [edi] +
movzx eax byte ptr [edi+0Ch] +
mov esi edi +
sub eax 6 +
cmp al 1 +
ja loc_4417AE  +
lea esi [esi+0] +
mov esi [esi+14h] +
movzx eax byte ptr [esi+0Ch] +
sub eax 6 +
cmp al 1 +
jbe loc_4417A0  +
mov eax [esp+13Ch+var_F0] +
mov [esp+13Ch+var_C4] 0 +
mov [eax] esi +
mov eax [esp+13Ch+var_58] +
shr eax 7 +
and eax 1 +
mov byte ptr [esp+13Ch+var_DC] al +
movzx eax byte ptr [esp+13Ch+var_100] +
test byte ptr [esp+13Ch+var_108] al +
jz loc_4417E3  +
cmp byte ptr [esp+13Ch+var_DC] 0 +
jnz loc_44227E  +
mov eax [esp+13Ch+var_E8] +
test eax eax +
jz loc_4419B7  +
cmp byte ptr [esi+0Ch] 5 +
jz loc_4425B3  +
lea esi [esi+0] +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_441B0B  +
mov edi [esp+13Ch+var_EC] +
add ebx 14h +
add [esp+13Ch+var_F0] 4 +
mov eax edi +
add eax 2 +
test edi edi +
cmovz eax edi +
cmp [esp+13Ch+var_E0] ebx +
mov [esp+13Ch+var_EC] eax +
ja loc_441291  +
mov eax [esp+13Ch+var_C0] +
test eax eax +
jz loc_441842  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_D4] +
test eax eax +
jz loc_441852  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [ebp+0A0h] +
test byte ptr [eax+924h] 1 +
jnz loc_442F2F  +
mov eax [esp+13Ch+var_B8] +
test eax eax +
jz loc_4418B9  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+80h] +
mov [esp+13Ch+var_134] 2 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_C0] 0 +
test eax eax +
jz loc_440D98  +
mov eax [esp+13Ch+var_B8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_442DCA  +
mov eax [esp+13Ch+var_C8] +
test eax eax +
jz loc_442DCA  +
mov eax [esp+13Ch+var_B0] +
xor esi esi +
test eax eax +
jz loc_442DBE  +
mov [esp+13Ch+arg_0] ebp +
jmp loc_441904  +
add esi 1 +
cmp esi [esp+13Ch+var_B0] +
jz loc_442DB7  +
mov eax [esp+13Ch+var_C8] +
mov ebx [eax+esi*4] +
mov edi [ebx+4] +
mov [esp+13Ch+var_138] 40h +
mov [esp+13Ch+var_13C] edi +
call strchr  +
test eax eax +
jz loc_4418F4  +
movzx ecx byte ptr [ebx+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
ja loc_4418F4  +
sub eax edi +
mov edi eax +
lea eax [eax+1] +
mov [esp+13Ch+var_13C] eax +
call sub_412BD0  +
test eax eax +
mov ebp eax +
jz loc_443757  +
mov eax [ebx+4] +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call memcpy  +
mov eax [esp+13Ch+var_FC] +
mov byte ptr [ebp+edi+0] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] eax +
call sub_423EB0  +
test eax eax +
mov edi eax +
jz loc_44199A  +
movzx eax byte ptr [ebx+0Ch] +
cmp [edi+0Ch] al +
jz loc_443574  +
mov [esp+13Ch+var_13C] ebp +
call free  +
jmp loc_4418F4  +
mov [esp+13Ch+var_5C] offset off_47D468 +
jmp loc_441337  +
mov eax [esp+13Ch+var_5C] +
test byte ptr [eax+15h] 10h +
jz loc_441800  +
cmp byte ptr [esi+0Ch] 5 +
jnz loc_441800  +
mov eax [esp+13Ch+var_F4] +
mov eax [eax+40h] +
mov edx [esp+13Ch+var_40] +
cmp edx eax +
jnb loc_44253A  +
mov edx [esi+14h] +
mov [edx] eax +
jmp loc_441800  +
test byte ptr [ebp+2Ah] 20h +
jnz loc_4422D0  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 6 +
jnz loc_44136A  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_44136A  +
mov [esp+13Ch+var_138] offset a_tcommon +
mov [esp+13Ch+var_13C] ebp +
call sub_40F280  +
test eax eax +
jz loc_443618  +
mov [esp+13Ch+var_5C] eax +
mov [esp+13Ch+var_F4] eax +
jmp loc_4413E7  +
mov eax [esp+13Ch+var_5C] +
mov [esp+13Ch+var_F4] eax +
jmp loc_4413DB  +
mov [esp+13Ch+var_58] 80h +
mov eax [ebx+10h] +
jmp loc_441308  +
mov eax [ebx+10h] +
test eax eax +
jz loc_4419A7  +
mov edx [esp+13Ch+var_E8] +
test edx edx +
jnz loc_441310  +
mov [esp+13Ch+var_58] 2 +
jmp loc_441310  +
mov eax [esp+13Ch+var_F4] +
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 200h +
jnz loc_4413F6  +
jmp loc_44180E  +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_13C] ebp +
call sub_42E1E0  +
test eax eax +
mov [esp+13Ch+var_5C] eax +
jz loc_441AFB  +
cmp eax offset off_47D510 +
jz loc_441ADD  +
cmp dword ptr [eax+3Ch] offset off_47D510 +
jz loc_4427E3  +
mov edx [ebp+28h] +
shr edx 5 +
and edx 42h +
jz loc_441337  +
mov eax [eax+1Ch] +
sub [esp+13Ch+var_60] eax +
jmp loc_441337  +
mov [esp+13Ch+var_5C] offset off_47D510 +
jmp loc_441337  +
test byte ptr [ebp+2Ah] 20h +
jnz loc_442028  +
mov ecx [esp+13Ch+var_100] +
test ecx ecx +
jnz loc_441FE7  +
mov edx [esp+13Ch+var_108] +
movzx eax byte ptr [esi+33h] +
test edx edx +
jnz loc_4427C7  +
mov edx eax +
or edx 1 +
mov [esi+33h] dl +
cmp byte ptr [esp+13Ch+var_F8] 2 +
jz loc_441B46  +
or eax 11h +
mov [esi+33h] al +
cmp edi esi +
jz loc_441B54  +
test byte ptr [edi+34h] 8 +
jnz loc_442028  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 3 +
jz loc_441B6F  +
test byte ptr [esi+33h] 0Ch +
jz loc_442028  +
mov [esp+13Ch+var_F8] 1 +
mov eax [esp+13Ch+var_108] +
test eax eax +
jnz loc_4424B4  +
mov eax [esp+13Ch+var_44] +
test eax eax +
jnz loc_441B98  +
cmp byte ptr [esi+0Ch] 5 +
jz loc_4424B4  +
mov eax [esp+13Ch+var_40] +
test eax eax +
jnz loc_441BAF  +
mov edx [esp+13Ch+var_E8] +
test edx edx +
jz loc_441C76  +
movzx edx byte ptr [esi+0Ch] +
cmp dl 5 +
jz loc_441C76  +
sub edx 3 +
cmp dl 1 +
jbe loc_441BDF  +
mov [esp+13Ch+var_138] 1135h +
mov [esp+13Ch+var_13C] offset a____Binutils_3 +
call sub_410530  +
mov eax [esp+13Ch+var_40] +
bsf edx [esi+18h] +
mov ecx 0FFFFFFFFh +
cmovz edx ecx +
mov ecx [esi+14h] +
mov [esp+13Ch+var_F4] edx +
mov edx [ecx+94h] +
test edx edx +
jz loc_441C12  +
test byte ptr [edx+29h] 8 +
jnz loc_441C12  +
mov edi [esp+13Ch+var_F4] +
mov edx [ecx+40h] +
cmp edi edx +
cmovbe edx edi +
mov [esp+13Ch+var_F4] edx +
test eax eax +
jz loc_4426CC  +
mov ecx [esp+13Ch+var_3C] +
mov edx ebp +
mov [esp+13Ch+var_E8] ecx +
cmp [esp+13Ch+var_F4] eax +
jnb loc_441C76  +
test edx edx +
jz loc_4432D0  +
mov ecx eax +
mov edi 1 +
mov eax [esp+13Ch+var_54] +
shl edi cl +
movzx ecx byte ptr [esp+13Ch+var_F4] +
mov [esp+13Ch+var_128] edi +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_12C] eax +
mov eax 1 +
shl eax cl +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_E8] +
mov [esp+13Ch+var_13C] offset aWarningAlignme +
mov [esp+13Ch+var_134] eax +
call off_47D664  +
mov eax [ebx+4] +
test eax eax +
jz loc_441C9A  +
mov edi [ebx+10h] +
test edi edi +
jz loc_441C9A  +
mov ecx [esp+13Ch+var_108] +
test ecx ecx +
jnz loc_442761  +
mov edx [esi+2Ch] +
test edx edx +
jnz loc_441C9A  +
mov [esi+2Ch] eax +
movzx eax byte ptr [esi+0Ch] +
cmp al 5 +
jz loc_44257F  +
movzx ecx byte ptr [esp+13Ch+var_108] +
movzx edx byte ptr [ebx+0Ch] +
and ecx 1 +
and edx 0Fh +
mov byte ptr [esp+13Ch+var_F4] cl +
jz loc_441D0E  +
test cl cl +
jz loc_441CCA  +
cmp byte ptr [esp+13Ch+var_DC] 0 +
jz loc_442576  +
mov ecx [esp+13Ch+var_48] +
test ecx ecx +
jz loc_441CDD  +
cmp al 5 +
jz loc_442576  +
movzx eax byte ptr [esi+30h] +
test al al +
jnz loc_441D0E  +
movzx ecx dl +
cmp ecx 0Ah +
jz loc_442826  +
movzx edx al +
cmp edx ecx +
jz loc_441D0E  +
test al al +
jz loc_441D0B  +
mov eax [esp+13Ch+var_4C] +
test eax eax +
jz loc_443347  +
mov [esi+30h] cl +
mov edx [esp+13Ch+var_5C] +
mov ecx [esp+13Ch+var_100] +
mov edi [esp+13Ch+var_108] +
mov eax [ebp+4] +
add edx 14h +
mov [esp+13Ch+var_134] ecx +
mov ecx ebx +
mov [esp+13Ch+var_13C] edx +
mov edx esi +
mov [esp+13Ch+var_138] edi +
call sub_43A4C0  +
test edi edi +
jz loc_441D65  +
mov eax [esp+13Ch+var_5C] +
test byte ptr [eax+15h] 20h +
jz loc_441D65  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
mov eax 0 +
cmovz eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_F8] eax +
test byte ptr [ebp+2Ah] 20h +
mov eax 0 +
cmovz eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_F8] eax +
mov eax [esp+13Ch+var_108] +
test eax eax +
jz loc_441DF9  +
movzx eax byte ptr [ebx+0Eh] +
mov [esi+32h] al +
mov eax [esp+13Ch+var_58] +
shr eax 17h +
and eax 1 +
lea edx ds:0[eax*4] +
movzx eax byte ptr [esi+35h] +
and eax 0FFFFFFFBh +
or eax edx +
mov [esi+35h] al +
movzx eax byte ptr [esp+13Ch+var_A0] +
test byte ptr [esp+13Ch+var_108] al +
jz loc_441DF9  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_138] 40h +
mov [esp+13Ch+var_13C] eax +
call strchr  +
test eax eax +
jz loc_441DF9  +
cmp byte ptr [eax+1] 40h +
jz loc_441DF9  +
mov edi [esp+13Ch+var_C8] +
test edi edi +
jz loc_443545  +
mov eax [esp+13Ch+var_B0] +
mov ecx [esp+13Ch+var_C8] +
mov [ecx+eax*4] esi +
add eax 1 +
mov [esp+13Ch+var_B0] eax +
mov ecx [esp+13Ch+var_F8] +
test ecx ecx +
jnz loc_442310  +
cmp byte ptr [esp+13Ch+var_F4] 0 +
jz loc_44180E  +
cmp [esp+13Ch+var_AC] 0 +
jnz loc_44180E  +
test byte ptr [esi+35h] 1 +
jz loc_44258E  +
mov eax [ebp+0A0h] +
mov [esp+13Ch+var_AC] 0 +
test byte ptr [eax+924h] 1 +
jz loc_44180E  +
mov edi [esp+13Ch+var_FC] +
mov edx [edi+64h] +
mov edi [eax+220h] +
test edx edx +
jz loc_441E90  +
mov [esp+13Ch+var_108] ebx +
mov ebx edx +
mov eax [ebx+4] +
mov eax [eax+0A0h] +
test byte ptr [eax+924h] 1 +
jnz loc_441E86  +
mov eax [ebx+8] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_138] eax +
call strcmp  +
test eax eax +
jz loc_44258A  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_441E5D  +
mov ebx [esp+13Ch+var_108] +
mov eax [esp+13Ch+var_3C] +
mov ecx [esp+13Ch+arg_4] +
mov edx [ecx+18h] +
mov ecx [esi+4] +
mov edx [edx+34h] +
mov [esp+13Ch+var_130] ecx +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] offset asc_499DED +
call edx  +
mov ecx [esp+13Ch+var_3C] +
mov eax [ebp+0A0h] +
test ecx ecx +
mov edx [eax+924h] +
jz loc_441EDC  +
test dl 8 +
jnz loc_44372A  +
and edx 0FFFFFFFEh +
mov ecx edi +
mov [eax+924h] edx +
mov edx [esp+13Ch+arg_4] +
mov eax ebp +
mov [esp+13Ch+var_13C] 1 +
call sub_4403A0  +
test eax eax +
js loc_441FD3  +
mov [esp+13Ch+var_AC] 1 +
jz loc_44180E  +
mov [esp+13Ch+var_138] 11FDh +
mov [esp+13Ch+var_13C] offset a____Binutils_3 +
call sub_410530  +
jmp loc_44180E  +
mov eax [ebp+0A0h] +
mov ecx [eax+244h] +
test ecx ecx +
jz loc_441FA7  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_441F57  +
jmp loc_441FA0  +
mov eax [eax+14h] +
test eax eax +
jz loc_441FA0  +
movzx edx word ptr [eax+6] +
cmp esi edx +
jnz loc_441F50  +
mov edx [eax+10h] +
test edx edx +
jz loc_441FA7  +
mov edi [esp+13Ch+var_54] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
not ecx  +
lea edi [ecx-1] +
or ecx 0FFFFFFFFh +
mov [esp+13Ch+var_DC] edi +
mov edi edx +
scas   +
mov edi [esp+13Ch+var_DC] +
not ecx  +
lea eax [ecx-1] +
mov [esp+13Ch+var_B4] eax +
lea eax [eax+edi+2] +
jmp loc_44155B  +
mov ecx [ecx+1Ch] +
test ecx ecx +
jnz loc_441F40  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_130] esi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] offset aBSInvalidNeede +
mov [esp+13Ch+var_134] eax +
call off_47D664  +
mov [esp+13Ch+var_13C] 11h +
call sub_4105E0  +
mov esi [esp+13Ch+var_B8] +
test esi esi +
jnz loc_440D98  +
jmp loc_440DA7  +
mov ecx [esp+13Ch+var_108] +
test ecx ecx +
jnz loc_442819  +
or byte ptr [esi+33h] 4 +
or byte ptr [edi+33h] 4 +
cmp edi esi +
jz loc_442005  +
test byte ptr [edi+34h] 8 +
jnz loc_442028  +
test byte ptr [esi+33h] 3 +
jnz loc_441B6F  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_442028  +
mov edx [esp+13Ch+var_C4] +
test edx edx +
jnz loc_442028  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jnz loc_441B6F  +
mov [esp+13Ch+var_F8] 0 +
jmp loc_441B77  +
mov [esp+13Ch+var_108] 0 +
jmp loc_44141B  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax+4] 4 +
jz loc_442544  +
mov eax [ebp+0A0h] +
mov edx [eax+238h] +
mov eax edx +
mov word ptr [esp+13Ch+var_18] dx +
jmp loc_4414AA  +
mov ecx [esp+13Ch+var_FC] +
mov ebp edi +
test ecx ecx +
jnz loc_4409C5  +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_13C] eax +
call free  +
jmp loc_44075D  +
mov [esp+13Ch+var_138] 0Ch +
mov esi [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
call sub_40E140  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] esi +
mov ebx eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_42B580  +
test eax eax +
jz loc_442560  +
test ebx ebx +
jz loc_442560  +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_E8] eax +
call strlen  +
mov [esp+13Ch+var_13C] ebp +
lea ecx [eax+1] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_EC] ecx +
call sub_40E140  +
test eax eax +
mov esi eax +
jz loc_442560  +
mov edx [esp+13Ch+var_E8] +
mov ecx [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov [ebx+8] esi +
mov [ebx+4] ebp +
mov dword ptr [ebx] 0 +
mov edx [esp+13Ch+var_1C] +
test edx edx +
jnz loc_442132  +
jmp loc_442F23  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_442130  +
mov [edx] ebx +
mov eax [esp+13Ch+var_14] +
jmp loc_440F5C  +
mov [esp+13Ch+var_138] 0Ch +
mov esi [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
call sub_40E140  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] esi +
mov ebx eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_42B580  +
test eax eax +
jz loc_442560  +
test ebx ebx +
jz loc_442560  +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_E8] eax +
call strlen  +
mov [esp+13Ch+var_13C] ebp +
lea ecx [eax+1] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_EC] ecx +
call sub_40E140  +
test eax eax +
mov esi eax +
jz loc_442560  +
mov edx [esp+13Ch+var_E8] +
mov ecx [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov eax [esp+13Ch+var_FC] +
mov [ebx+8] esi +
mov [ebx+4] ebp +
mov dword ptr [ebx] 0 +
mov edx [eax+64h] +
test edx edx +
jnz loc_4421E2  +
jmp loc_442F1B  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_4421E0  +
mov [edx] ebx +
mov eax [esp+13Ch+var_14] +
jmp loc_440F53  +
mov eax [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_42B580  +
test eax eax +
mov [esp+13Ch+var_F4] eax +
jz loc_442560  +
mov eax [esp+13Ch+var_14] +
jmp loc_440F4A  +
mov eax [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_42B580  +
mov [esp+13Ch+var_F0] eax +
jmp loc_440EFB  +
movzx edx byte ptr [ebx+0Ch] +
mov eax [esp+13Ch+var_104] +
and edx 0Fh +
mov eax [eax+158h] +
mov [esp+13Ch+var_13C] edx +
call eax  +
test eax eax +
jnz loc_4414D1  +
mov eax [esp+13Ch+var_5C] +
mov ecx [esp+13Ch+var_54] +
jmp loc_4415E7  +
movzx edx byte ptr [ebx+0Ch] +
mov eax [esp+13Ch+var_104] +
and edx 0Fh +
mov eax [eax+158h] +
mov [esp+13Ch+var_13C] edx +
call eax  +
test eax eax +
jnz loc_4417E3  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jnz loc_4417E3  +
mov eax [esi+3Ch] +
test eax eax +
jnz loc_4417E3  +
mov eax [esp+13Ch+var_CC] +
mov [esp+13Ch+var_C4] 1 +
mov [esp+13Ch+var_CC] esi +
mov [esi+3Ch] eax +
jmp loc_4417E3  +
mov [esp+13Ch+var_138] offset aCommon_0 +
mov [esp+13Ch+var_13C] ebp +
call sub_40F280  +
test eax eax +
jnz loc_441A38  +
mov [esp+13Ch+var_134] 209001h +
mov [esp+13Ch+var_138] offset aCommon_0 +
mov [esp+13Ch+var_13C] ebp +
call sub_40F740  +
test eax eax +
jnz loc_441A38  +
jmp loc_441FD3  +
cmp dword ptr [esi+20h] 0FFFFFFFFh +
jz loc_442D4E  +
movzx eax byte ptr [esi+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
jbe loc_4426E6  +
cmp byte ptr [esp+13Ch+var_F4] 0 +
jz loc_44180E  +
mov eax [esp+13Ch+var_AC] +
test eax eax +
jnz loc_44180E  +
test byte ptr [esi+33h] 10h +
jz loc_441E1E  +
mov eax [esp+13Ch+var_3C] +
test eax eax +
jz loc_443422  +
test byte ptr [eax+2Ah] 20h +
jnz loc_441E1E  +
mov edx [ebp+0A0h] +
mov edi [edx+220h] +
jmp loc_441E97  +
mov eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_E4] +
mov [esp+13Ch+var_138] eax +
call sub_42B780  +
test eax eax +
mov [esp+13Ch+var_D4] eax +
jz loc_440BB0  +
mov eax [esp+13Ch+var_F0] +
test eax eax +
jnz loc_440CA5  +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_13C] ebp +
shl eax 2 +
mov [esp+13Ch+var_138] eax +
call sub_40E220  +
test eax eax +
mov edi eax +
mov [esp+13Ch+var_F0] eax +
jz loc_440DD3  +
mov eax [ebp+0A0h] +
mov [eax+218h] edi +
jmp loc_440CA5  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax+4] +
mov [esp+13Ch+var_13C] ebp +
shr al 2 +
and eax 1 +
mov [esp+13Ch+var_138] eax +
call sub_434F00  +
test eax eax +
jz loc_440DC7  +
mov ebx [ebp+0A0h] +
mov [esp+13Ch+var_C0] 0 +
mov esi [ebx+914h] +
test esi esi +
jz loc_440CBF  +
mov eax [ebx+178h] +
mov [esp+13Ch+var_13C] eax +
call sub_412BD0  +
test eax eax +
mov [esp+13Ch+var_C0] eax +
jz loc_440DC7  +
mov eax [ebx+170h] +
mov edx [ebx+174h] +
mov esi [ebx+178h] +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] ebp +
call sub_411E10  +
test eax eax +
jnz loc_440DB7  +
mov eax [esp+13Ch+var_C0] +
mov [esp+13Ch+var_134] ebp +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] eax +
call sub_411C00  +
cmp esi eax +
jnz loc_440DB7  +
mov ebx [ebp+0A0h] +
jmp loc_440CBF  +
mov eax [esp+13Ch+var_5C] +
movzx edx byte ptr [esi+34h] +
mov [esp+13Ch+var_88] eax +
mov eax [esp+13Ch+var_54] +
test dl 2 +
mov [esp+13Ch+var_84] edx +
mov ecx eax +
mov [esp+13Ch+var_F4] eax +
mov eax [esp+13Ch+var_60] +
mov [esp+13Ch+var_34] eax +
jnz loc_441B98  +
mov [esp+13Ch+var_138] 40h +
mov [esp+13Ch+var_13C] ecx +
call strchr  +
mov edx [esp+13Ch+var_84] +
and edx 6 +
mov [esp+13Ch+var_B4] eax +
jnz loc_442837  +
test eax eax +
jz loc_443649  +
mov eax [esp+13Ch+var_B4] +
cmp byte ptr [eax+1] 40h +
jz loc_443335  +
or byte ptr [esi+34h] 6 +
jmp loc_441B98  +
mov eax [esi+14h] +
mov [eax] edx +
jmp loc_441800  +
xor eax eax +
mov ecx [esp+13Ch+var_54] +
xor esi esi +
mov word ptr [esp+13Ch+var_18] ax +
mov eax [esp+13Ch+var_F4] +
jmp loc_4415E7  +
mov eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_13C] eax +
call free  +
xor eax eax +
jmp loc_440BB2  +
movzx eax byte ptr [esi+30h] +
jmp loc_441CE5  +
mov edx [esi+18h] +
mov [esi+2Ch] edx +
jmp loc_441CA6  +
mov ebx [esp+13Ch+var_108] +
mov [esp+13Ch+var_AC] 0 +
jmp loc_44180E  +
mov [esp+13Ch+var_B4] 0 +
mov edx offset unk_499BD8 +
jmp loc_441527  +
mov eax [ebx] +
mov [esp+13Ch+var_13C] eax +
call near ptr dword_4135E0  +
jmp loc_4419D9  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_12C] ecx +
mov [esp+13Ch+var_130] esi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_13C] offset aBSInvalidVersi +
call off_47D664  +
mov [esp+13Ch+var_13C] 11h +
call sub_4105E0  +
jmp loc_441FD3  +
mov [esp+13Ch+var_F0] 0 +
mov [esp+13Ch+var_F4] 0 +
mov ecx [esp+13Ch+var_1C] +
test ecx ecx +
jz loc_443321  +
mov [esp+13Ch+var_20] ecx +
mov eax [esp+13Ch+var_FC] +
mov edx [eax+0C4h] +
test edx edx +
jnz loc_442632  +
jmp loc_44360D  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_442630  +
mov [edx] ecx +
mov [esp+13Ch+var_13C] ebp +
call sub_40F230  +
mov eax [esp+13Ch+var_F4] +
test eax eax +
jz loc_442738  +
cmp byte ptr [eax] 0 +
jz loc_442738  +
mov eax [ebp+0A0h] +
mov edi [esp+13Ch+var_F4] +
xor ecx ecx +
test byte ptr [esp+13Ch+var_E4] 0Bh +
mov edx [esp+13Ch+arg_4] +
setz cl  +
mov [eax+220h] edi +
mov eax ebp +
mov [esp+13Ch+var_AC] ecx +
mov [esp+13Ch+var_13C] ecx +
mov ecx edi +
call sub_4403A0  +
test eax eax +
js loc_440BB0  +
jnz loc_44075D  +
mov eax [ebp+0A0h] +
mov edi [esp+13Ch+var_F0] +
mov [eax+224h] edi +
mov ecx [ebp+0A0h] +
mov eax [ecx+910h] +
test eax eax +
jz loc_440C42  +
lea eax [ecx+0F0h] +
mov [esp+13Ch+var_E4] eax +
jmp loc_440C49  +
mov eax [ebx] +
mov [esp+13Ch+var_13C] eax +
call near ptr dword_4135E0  +
mov edx [esp+13Ch+var_3C] +
mov [esp+13Ch+var_E8] ebp +
jmp loc_441C27  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+0DCh] +
mov [esp+13Ch+var_134] 1 +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] edi +
call eax  +
jmp loc_441E05  +
mov eax [esp+13Ch+var_F4] +
mov eax [eax+0A0h] +
lea ecx [eax+0F0h] +
mov [esp+13Ch+var_E8] ecx +
mov ecx [eax+910h] +
mov [esp+13Ch+var_F0] eax +
test ecx ecx +
jnz loc_4410BD  +
jmp loc_4410B2  +
mov eax [ebp+0A0h] +
mov edi [eax+220h] +
test edi edi +
mov [esp+13Ch+var_F4] edi +
jz loc_442755  +
cmp byte ptr [edi] 0 +
jnz loc_44265D  +
mov edi [ebp+0] +
mov [esp+13Ch+var_F4] edi +
jmp loc_44265D  +
mov edx [esi+2Ch] +
test edx edx +
jz loc_441C97  +
cmp eax edx +
jz loc_441C97  +
mov edi [esp+13Ch+var_50] +
test edi edi +
jnz loc_441C97  +
mov [esp+13Ch+var_128] eax +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_12C] edx +
mov [esp+13Ch+var_134] ebp +
mov [esp+13Ch+var_13C] offset aWarningSizeOfS +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_3C] +
mov [esp+13Ch+var_138] eax +
call off_47D664  +
mov eax [ebx+4] +
jmp loc_441C97  +
mov [esp+13Ch+var_C8] 0 +
jmp loc_440D98  +
or eax 2 +
test al 8 +
mov [esi+33h] al +
jz loc_441B46  +
and eax 0FFFFFFF7h +
or eax 4 +
mov [esi+33h] al +
jmp loc_441B46  +
movzx edx word ptr [eax+18h] +
and dx 380h +
cmp dx 100h +
jz loc_441ADD  +
cmp dx 200h +
jz loc_441ADD  +
mov [esp+13Ch+var_5C] offset off_47D468 +
mov dword ptr [ebx+10h] 0 +
jmp loc_441337  +
or byte ptr [esi+33h] 8 +
or byte ptr [edi+33h] 8 +
jmp loc_441FFB  +
test byte ptr [ebp+29h] 8 +
mov edx 2 +
cmovnz ecx edx +
jmp loc_441CF1  +
mov eax [esp+13Ch+var_B4] +
test eax eax +
jz loc_441B98  +
mov eax [ebp+4] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+1B0h] +
mov [esp+13Ch+var_7C] eax +
movzx eax byte ptr [eax+1ACh] +
mov byte ptr [esp+13Ch+var_78] al +
mov eax [ebp+28h] +
and byte ptr [esp+13Ch+var_78] 1 +
mov [esp+13Ch+var_80] eax +
mov eax [esp+13Ch+var_B4] +
sub eax [esp+13Ch+var_F4] +
shr [esp+13Ch+var_80] 5 +
and [esp+13Ch+var_80] 3FFFFh +
mov [esp+13Ch+var_84] eax +
add eax 1 +
mov [esp+13Ch+var_138] eax +
mov eax [edi+1Ch] +
mov [esp+13Ch+var_13C] eax +
call sub_412630  +
test eax eax +
mov edi eax +
jz loc_441FD3  +
mov edx [esp+13Ch+var_F4] +
mov eax [esp+13Ch+var_84] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] eax +
call memcpy  +
mov eax [esp+13Ch+var_84] +
mov ecx edi +
mov edx [esp+13Ch+arg_4] +
mov byte ptr [edi+eax] 0 +
mov eax [esp+13Ch+var_88] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_18] eax +
lea eax [esp+13Ch+var_14] +
mov [esp+13Ch+var_110] eax +
lea eax [esp+13Ch+var_2C] +
mov [esp+13Ch+var_114] eax +
lea eax [esp+13Ch+var_30] +
mov [esp+13Ch+var_118] eax +
lea eax [esp+13Ch+var_1C] +
mov [esp+13Ch+var_11C] eax +
lea eax [esp+13Ch+var_28] +
mov [esp+13Ch+var_120] eax +
lea eax [esp+13Ch+var_3C] +
mov [esp+13Ch+var_12C] eax +
lea eax [esp+13Ch+var_24] +
mov [esp+13Ch+var_130] eax +
lea eax [esp+13Ch+var_34] +
mov [esp+13Ch+var_134] eax +
lea eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_138] eax +
mov eax ebp +
mov [esp+13Ch+var_30] 0 +
mov [esp+13Ch+var_2C] 0 +
mov [esp+13Ch+var_14] 1 +
call sub_43DE90  +
test eax eax +
jz loc_441FD3  +
movzx eax byte ptr [esp+13Ch+var_78] +
mov [esp+13Ch+var_78] eax +
mov eax [esp+13Ch+var_80] +
shr eax 6 +
mov [esp+13Ch+var_80] eax +
mov eax [esp+13Ch+var_28] +
and [esp+13Ch+var_80] 1 +
test eax eax +
jnz loc_442A6A  +
mov eax [esp+13Ch+var_1C] +
test eax eax +
jz loc_4434B2  +
mov eax [esp+13Ch+var_24] +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-6] +
mov edi [esp+13Ch+var_F8] +
cmp dl 1 +
ja loc_442A18  +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_4429FE  +
mov [esp+13Ch+var_F8] edi +
mov [esp+13Ch+var_24] eax +
movzx edx byte ptr [esi+33h] +
mov byte ptr [esi+0Ch] 6 +
mov [esi+14h] eax +
test dl 8 +
jz loc_442A41  +
and edx 0FFFFFFF7h +
mov [esi+33h] dl +
movzx edx byte ptr [eax+33h] +
or edx 4 +
mov [eax+33h] dl +
and dl 3 +
jnz loc_4439C3  +
mov [esp+13Ch+var_24] esi +
mov eax esi +
movzx edx byte ptr [eax+0Ch] +
cmp dl 7 +
jnz loc_442A61  +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
mov [esp+13Ch+var_24] eax +
cmp dl 6 +
jz loc_44365B  +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_13C] eax +
call strlen  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_70] eax +
mov [esp+13Ch+var_138] eax +
mov eax [edi+1Ch] +
mov [esp+13Ch+var_13C] eax +
call sub_412630  +
test eax eax +
mov edi eax +
jz loc_441FD3  +
mov edx [esp+13Ch+var_84] +
mov ecx [esp+13Ch+var_F4] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_138] ecx +
call memcpy  +
mov edx [esp+13Ch+var_84] +
mov eax edi +
mov ecx [esp+13Ch+var_70] +
mov [esp+13Ch+var_74] edi +
add eax edx +
sub ecx edx +
mov edx [esp+13Ch+var_B4] +
mov [esp+13Ch+var_134] ecx +
mov [esp+13Ch+var_13C] eax +
add edx 1 +
mov [esp+13Ch+var_138] edx +
call memcpy  +
mov edi [esp+13Ch+var_88] +
mov eax ebp +
mov edx [esp+13Ch+arg_4] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_18] edi +
lea edi [esp+13Ch+var_14] +
mov [esp+13Ch+var_110] edi +
lea edi [esp+13Ch+var_2C] +
mov [esp+13Ch+var_114] edi +
lea edi [esp+13Ch+var_30] +
mov [esp+13Ch+var_118] edi +
lea edi [esp+13Ch+var_1C] +
mov [esp+13Ch+var_11C] edi +
lea edi [esp+13Ch+var_28] +
mov [esp+13Ch+var_120] edi +
lea edi [esp+13Ch+var_3C] +
mov [esp+13Ch+var_12C] edi +
lea edi [esp+13Ch+var_24] +
mov [esp+13Ch+var_130] edi +
lea edi [esp+13Ch+var_34] +
mov [esp+13Ch+var_134] edi +
lea edi [esp+13Ch+var_18] +
mov [esp+13Ch+var_138] edi +
mov edi [esp+13Ch+var_74] +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_30] 0 +
mov [esp+13Ch+var_2C] 0 +
mov ecx edi +
call sub_43DE90  +
test eax eax +
jz loc_441FD3  +
mov ecx [esp+13Ch+var_28] +
test ecx ecx +
jnz loc_441B98  +
cmp [esp+13Ch+var_1C] 0 +
mov eax [esp+13Ch+var_24] +
jz loc_44388D  +
movzx eax byte ptr [eax+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_441B98  +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] offset aBUnexpectedRed +
call off_47D664  +
jmp loc_441B98  +
mov eax [esp+13Ch+arg_4] +
mov edi [ebp+4] +
mov eax [eax+30h] +
cmp [eax+4] edi +
jnz loc_440C31  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+30h] 0 +
jnz loc_440C31  +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_43D990  +
test eax eax +
jnz loc_440C31  +
xor eax eax +
jmp loc_440BB2  +
mov esi [esp+13Ch+var_FC] +
mov ecx [esp+13Ch+var_B8] +
mov ebx [esp+13Ch+var_A8] +
mov eax [esi] +
mov [esp+13Ch+var_13C] ecx +
mov edi ecx +
mov [esp+13Ch+var_134] ebx +
add edi ebx +
mov [esp+13Ch+var_138] eax +
call memcpy  +
mov ecx [esi+1Ch] +
mov eax [esi+50h] +
mov [esp+13Ch+var_9C] ecx +
mov ecx [esi+20h] +
mov [esp+13Ch+var_98] ecx +
mov ecx [esi] +
mov [esp+13Ch+var_94] ecx +
mov ecx [esi+0Ch] +
mov [esp+13Ch+var_90] ecx +
mov ecx [esi+10h] +
mov [esp+13Ch+var_8C] ecx +
mov ecx [esi+4Ch] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_D8] ecx +
call sub_455C30  +
mov ecx [esi+0Ch] +
test ecx ecx +
mov [esp+13Ch+var_BC] eax +
jz loc_441235  +
xor ebx ebx +
mov [esp+13Ch+arg_0] ebp +
mov ebp edi +
mov edi ebx +
mov ebx esi +
mov eax [ebx] +
mov esi [eax+edi*4] +
test esi esi +
jz loc_442D1B  +
mov eax [ebx+14h] +
jmp loc_442CE6  +
mov esi [esi] +
test esi esi +
jz loc_442D1B  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] esi +
call memcpy  +
mov eax [ebx+14h] +
add ebp eax +
cmp byte ptr [esi+0Ch] 7 +
jnz loc_442CE0  +
mov edx [esi+14h] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] edx +
call memcpy  +
mov eax [ebx+14h] +
add ebp eax +
jmp loc_442CE0  +
add edi 1 +
cmp edi [ebx+0Ch] +
jb loc_442CCC  +
mov ebp [esp+13Ch+arg_0] +
jmp loc_441235  +
mov edx edi +
mov [esp+13Ch+var_F0] 0 +
mov [esp+13Ch+var_F4] 0 +
mov [esp+13Ch+var_13C] edx +
call free  +
jmp loc_442607  +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] eax +
call sub_43DDB0  +
test eax eax +
jz loc_441FD3  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_44232C  +
mov edx [esp+13Ch+var_C4] +
test edx edx +
jnz loc_44232C  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jnz loc_44232C  +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_43DDB0  +
test eax eax +
jnz loc_44232C  +
jmp loc_441FD3  +
xor eax eax +
jmp loc_440D20  +
mov ebp [esp+13Ch+arg_0] +
mov eax [esp+13Ch+var_C8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_CC] +
test eax eax +
jz loc_442E69  +
mov ebx [esp+13Ch+var_D0] +
shl ebx 2 +
mov [esp+13Ch+var_13C] ebx +
call sub_412BD0  +
test eax eax +
mov edi eax +
jz loc_440BB0  +
mov eax [ebp+0A0h] +
mov esi [eax+218h] +
lea eax [esi+ebx] +
cmp esi eax +
mov [esp+13Ch+var_108] eax +
jnb loc_44315D  +
mov ecx edi +
mov [esp+13Ch+var_F4] 0 +
jmp loc_442E23  +
add esi 4 +
cmp [esp+13Ch+var_108] esi +
jbe loc_443165  +
mov ebx [esi] +
test ebx ebx +
jz loc_442E16  +
cmp byte ptr [ebx+0Ch] 3 +
jnz loc_442E16  +
mov eax [esp+13Ch+var_104] +
movzx edx byte ptr [ebx+30h] +
mov [esp+13Ch+var_F8] ecx +
mov eax [eax+158h] +
mov [esp+13Ch+var_13C] edx +
call eax  +
mov ecx [esp+13Ch+var_F8] +
test eax eax +
jnz loc_442E16  +
mov [ecx] ebx +
add ecx 4 +
add [esp+13Ch+var_F4] 1 +
jmp loc_442E16  +
mov [esp+13Ch+var_13C] edi +
mov ebp [esp+13Ch+arg_0] +
call free  +
mov eax [esp+13Ch+var_104] +
mov eax [eax+7Ch] +
test eax eax +
jz loc_442E8C  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] edi +
call eax  +
test eax eax +
jz loc_440BB0  +
mov edi [esp+13Ch+var_100] +
test edi edi +
jnz loc_44349F  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_443788  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax+4] 1 +
jnz loc_44349F  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jnz loc_44075D  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax+1] 8 +
jz loc_443435  +
cmp [esp+13Ch+var_AC] 0 +
jz loc_44075D  +
mov [esp+13Ch+var_138] 8 +
mov [esp+13Ch+var_13C] ebp +
call sub_40E140  +
test eax eax +
jz loc_440BB0  +
mov edi [esp+13Ch+var_FC] +
mov [eax+4] ebp +
mov edx [edi+0D0h] +
mov [eax] edx +
mov [edi+0D0h] eax +
mov eax 1 +
jmp loc_4407C3  +
lea edx [eax+64h] +
jmp loc_4421E8  +
lea edx [esp+13Ch+var_1C] +
jmp loc_442138  +
mov edx [eax+218h] +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_138] 0 +
mov ebx [esp+13Ch+var_B8] +
mov esi [esp+13Ch+var_A8] +
mov [esp+13Ch+var_13C] edx +
shl eax 2 +
mov [esp+13Ch+var_134] eax +
call memset  +
mov eax [esp+13Ch+var_FC] +
add esi ebx +
mov ecx [esp+13Ch+var_94] +
mov edi [esp+13Ch+var_90] +
mov edx [esp+13Ch+var_8C] +
mov [eax] ecx +
mov [eax+0Ch] edi +
mov edi eax +
mov [eax+10h] edx +
mov eax [esp+13Ch+var_A8] +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_134] eax +
call memcpy  +
mov eax edi +
mov edi [esp+13Ch+var_9C] +
mov ecx [esp+13Ch+var_BC] +
mov [eax+1Ch] edi +
mov edi [esp+13Ch+var_98] +
mov [eax+20h] edi +
mov edi eax +
mov eax [eax+50h] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] eax +
call sub_455BB0  +
mov eax [edi+0Ch] +
mov [esp+13Ch+var_100] 0 +
test eax eax +
jz loc_4430D9  +
mov [esp+13Ch+arg_0] ebp +
mov ebp [esp+13Ch+var_FC] +
mov eax [ebp+0] +
mov edi [esp+13Ch+var_100] +
mov ebx [eax+edi*4] +
test ebx ebx +
jnz loc_443051  +
jmp loc_4430C0  +
mov edi [esp+13Ch+var_D8] +
cmp [eax+20h] edi +
jl loc_443015  +
mov edx [eax+38h] +
cmp [esp+13Ch+var_BC] edx +
ja loc_443085  +
xor edi edi +
cmp byte ptr [eax+0Ch] 5 +
mov [esp+13Ch+var_108] 0 +
jz loc_443077  +
mov eax [ebp+14h] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_134] eax +
call memcpy  +
mov edx [ebp+14h] +
mov ecx ebx +
movzx eax byte ptr [ebx+0Ch] +
add esi edx +
cmp al 7 +
jz loc_4430A1  +
cmp al 5 +
jz loc_443060  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4430C0  +
cmp byte ptr [ebx+0Ch] 7 +
mov eax ebx +
jnz loc_443000  +
mov eax [ebx+14h] +
jmp loc_443000  +
cmp [ecx+18h] edi +
jnb loc_443068  +
mov [ecx+18h] edi +
mov eax [ecx+14h] +
mov edi [esp+13Ch+var_108] +
cmp [eax] edi +
jnb loc_44304B  +
mov [eax] edi +
jmp loc_44304B  +
mov edi [eax+18h] +
mov eax [eax+14h] +
mov eax [eax] +
mov [esp+13Ch+var_108] eax +
jmp loc_443025  +
mov ecx [ebp+50h] +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_108] eax +
mov [esp+13Ch+var_13C] ecx +
call sub_455AC0  +
mov eax [esp+13Ch+var_108] +
jmp loc_443015  +
mov eax [ebx+14h] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] eax +
call memcpy  +
mov ecx [ebx+14h] +
add esi [ebp+14h] +
movzx eax byte ptr [ecx+0Ch] +
jmp loc_443047  +
add [esp+13Ch+var_100] 1 +
mov eax [esp+13Ch+var_100] +
cmp eax [ebp+0Ch] +
jb loc_442FE6  +
mov ebp [esp+13Ch+arg_0] +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+80h] +
mov [esp+13Ch+var_134] 1 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_C0] 0 +
test eax eax +
jz loc_441FD3  +
mov eax [esp+13Ch+var_B8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_FC] +
mov edi [esp+13Ch+var_A4] +
mov eax [eax+8] +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] eax +
call sub_469680  +
cmp [esp+13Ch+var_C8] 0 +
jz loc_44075D  +
mov eax [esp+13Ch+var_C8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax 1 +
jmp loc_4407C3  +
mov [esp+13Ch+var_F4] 0 +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_130] offset sub_439280 +
mov [esp+13Ch+var_134] 4 +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_138] eax +
call qsort  +
mov [esp+13Ch+arg_0] ebp +
mov eax [esp+13Ch+var_CC] +
mov ecx [eax+3Ch] +
mov dword ptr [eax+3Ch] 0 +
movzx eax byte ptr [eax+0Ch] +
mov [esp+13Ch+var_108] ecx +
mov byte ptr [esp+13Ch+var_F8] al +
sub eax 3 +
cmp al 3 +
ja loc_443251  +
mov eax [esp+13Ch+var_CC] +
xor ecx ecx +
mov ebp [eax+14h] +
mov esi [eax+18h] +
mov eax [esp+13Ch+var_F4] +
test eax eax +
mov edx eax +
jnz loc_4431D9  +
jmp loc_443238  +
jz loc_4431F0  +
lea ecx [eax+1] +
cmp ecx edx +
jz loc_443238  +
lea eax [edx+ecx] +
shr eax 1 +
mov ebx [edi+eax*4] +
cmp esi [ebx+18h] +
jns loc_4431D0  +
mov edx eax +
jmp loc_4431D5  +
mov ebx [ebx+14h] +
mov ebx [ebx+4] +
cmp [ebp+4] ebx +
js loc_4431E6  +
jnz loc_4431D2  +
jmp loc_44320D  +
mov ebx [edi+eax*4] +
cmp ebp [ebx+14h] +
jnz loc_443214  +
cmp esi [ebx+18h] +
jnz loc_443214  +
add eax 1 +
cmp eax edx +
jnz loc_443200  +
sub eax 1 +
sub ecx 1 +
mov edx [esp+13Ch+var_CC] +
jmp loc_443234  +
mov ebx [edi+eax*4] +
cmp ebp [ebx+14h] +
jnz loc_443238  +
cmp esi [ebx+18h] +
jnz loc_443238  +
sub eax 1 +
cmp edx ebx +
jnz loc_44326A  +
cmp eax ecx +
jnz loc_443220  +
mov ebp [esp+13Ch+var_108] +
test ebp ebp +
jz loc_442E5A  +
mov eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_CC] eax +
jmp loc_44318C  +
mov [esp+13Ch+var_138] 12D6h +
mov [esp+13Ch+var_13C] offset a____Binutils_3 +
call sub_410530  +
jmp loc_4431B1  +
mov eax [esp+13Ch+var_CC] +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
mov [eax+3Ch] ebx +
jz loc_443294  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jnz loc_443238  +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_13C] eax +
call sub_43DDB0  +
test eax eax +
jz loc_4432C1  +
mov eax [ebx+20h] +
cmp eax 0FFFFFFFFh +
jz loc_443238  +
mov eax [esp+13Ch+var_CC] +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jnz loc_443238  +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_43DDB0  +
test eax eax +
jnz loc_443238  +
mov [esp+13Ch+var_13C] edi +
call free  +
xor eax eax +
jmp loc_4407C3  +
mov edi [esi+14h] +
mov dl 1 +
movzx ecx byte ptr [esp+13Ch+var_F4] +
mov [esp+13Ch+var_13C] offset aWarningAlign_0 +
mov [esp+13Ch+var_B4] edi +
mov edi edx +
shl edi cl +
mov ecx [esp+13Ch+var_54] +
mov [esp+13Ch+var_128] edi +
mov edi [esp+13Ch+var_B4] +
mov [esp+13Ch+var_12C] ecx +
mov ecx eax +
mov eax [esp+13Ch+var_E8] +
shl edx cl +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] eax +
call off_47D664  +
jmp loc_441C76  +
mov ecx [esp+13Ch+var_20] +
test ecx ecx +
jz loc_44263A  +
jmp loc_44261D  +
movzx eax byte ptr [esi+34h] +
and eax 0FFFFFFF9h +
or eax 4 +
mov [esi+34h] al +
jmp loc_442846  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_12C] ecx +
mov [esp+13Ch+var_E8] ecx +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] offset aWarningTypeOfS +
call off_47D664  +
mov ecx [esp+13Ch+var_E8] +
jmp loc_441D0B  +
mov ecx esi +
mov edi [esp+13Ch+var_E0] +
movzx edx byte ptr [ecx+0Ch] +
mov ebp [esp+13Ch+var_DC] +
mov esi [esp+13Ch+var_E8] +
mov eax edx +
shr al 4 +
cmp al 9 +
ja loc_44339B  +
sub al 1 +
jnz loc_4411B9  +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_F0] ecx +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+13Ch+var_F4] eax +
mov eax [eax+158h] +
mov ecx eax +
mov eax edx +
and eax 0Fh +
mov [esp+13Ch+var_13C] eax +
call ecx  +
test eax eax +
jnz loc_4411B9  +
mov ecx [esp+13Ch+var_F0] +
cmp dword ptr [ecx+10h] 0 +
jz loc_4411B9  +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_F4] ecx +
mov eax [eax+144h] +
mov [esp+13Ch+var_13C] ecx +
call eax  +
test eax eax +
jnz loc_4411B9  +
mov ecx [esp+13Ch+var_F4] +
mov eax [ecx+10h] +
mov ecx [esp+13Ch+var_E4] +
add eax 100h +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_F4] eax +
call free  +
cmp [esp+13Ch+var_F4] 0F0h +
ja loc_440A5C  +
jmp loc_4409F8  +
mov eax [ebp+0A0h] +
mov edi [eax+220h] +
xor eax eax +
jmp loc_441E97  +
mov [esp+13Ch+var_138] offset a_stabstr +
mov [esp+13Ch+var_13C] ebp +
call sub_40F280  +
test eax eax +
mov ebx eax +
jz loc_44349F  +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_14] 0 +
mov esi [ebp+64h] +
sub eax 0FFFFFF80h +
mov [esp+13Ch+var_108] eax +
jmp loc_44349B  +
mov edi [esi] +
mov [esp+13Ch+var_134] 5 +
mov [esp+13Ch+var_138] offset a_stab +
mov [esp+13Ch+var_13C] edi +
call strncmp  +
test eax eax +
jnz loc_443498  +
movzx eax byte ptr [edi+5] +
test al al +
jz loc_4439F5  +
cmp al 2Eh +
jz loc_4439E3  +
mov esi [esi+0Ch] +
test esi esi +
jnz loc_443466  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_442ED6  +
jmp loc_44075D  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
mov eax [esp+13Ch+var_24] +
jz loc_442A4A  +
mov [esp+13Ch+var_20] eax +
lea eax [esp+13Ch+var_20] +
mov [esp+13Ch+var_118] eax +
mov eax [esp+13Ch+var_78] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] offset off_47D5B8 +
mov [esp+13Ch+var_11C] eax +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_130] 2000h +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_124] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_424B10  +
test eax eax +
jz loc_441FD3  +
mov eax [esp+13Ch+var_20] +
mov [esp+13Ch+var_24] eax +
jmp loc_442A4A  +
mov eax [esp+13Ch+var_E0] +
sub eax ebx +
sar eax 2 +
imul eax eax +
lea eax ds:4[eax*4] +
mov [esp+13Ch+var_13C] eax +
call sub_412BD0  +
test eax eax +
mov [esp+13Ch+var_C8] eax +
jnz loc_441DE1  +
jmp loc_441FD3  +
mov eax [ebx+18h] +
cmp [edi+18h] eax +
jnz loc_44199A  +
mov eax [ebx+14h] +
cmp [edi+14h] eax +
jnz loc_44199A  +
mov eax [esp+13Ch+var_104] +
mov ecx [esp+13Ch+arg_4] +
mov eax [eax+0DCh] +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_134] 1 +
mov [esp+13Ch+var_138] edi +
call eax  +
mov eax [esp+13Ch+var_104] +
mov ecx [esp+13Ch+arg_4] +
mov [edi+14h] ebx +
mov byte ptr [edi+0Ch] 6 +
mov eax [eax+0D8h] +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_13C] ecx +
call eax  +
mov eax [esp+13Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+218h] +
test eax eax +
jz loc_44199A  +
xor ecx ecx +
cmp ecx [esp+13Ch+var_D0] +
jz loc_44199A  +
mov edx eax +
add eax 4 +
cmp edi [eax-4] +
jz loc_443704  +
add ecx 1 +
jmp loc_4435F0  +
lea edx [eax+0C4h] +
jmp loc_442638  +
mov [esp+13Ch+var_134] 101401h +
mov [esp+13Ch+var_138] offset a_tcommon +
mov [esp+13Ch+var_13C] ebp +
call sub_40F740  +
test eax eax +
jnz loc_441A38  +
jmp loc_441FD3  +
lea edx [esp+13Ch+var_20] +
jmp loc_44100E  +
movzx eax byte ptr [esi+34h] +
and eax 0FFFFFFF9h +
or eax 2 +
mov [esi+34h] al +
jmp loc_441B98  +
mov edi [eax+14h] +
mov ecx edi +
mov edi [esp+13Ch+var_7C] +
mov edx [edi+0D8h] +
mov edi ecx +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] eax +
call edx  +
movzx edx byte ptr [edi+35h] +
mov eax [esp+13Ch+var_24] +
mov [esp+13Ch+var_74] edi +
mov ecx edx +
and edx 0FFFFFFFEh +
or cl [eax+35h] +
mov edi ecx +
and edi 1 +
or edx edi +
mov edi [esp+13Ch+var_74] +
mov [edi+35h] dl +
movzx edx byte ptr [eax+34h] +
mov ecx edx +
and edx 7Fh +
or ecx [edi+34h] +
and ecx 0FFFFFF80h +
or edx ecx +
mov [eax+34h] dl +
cmp [esp+13Ch+var_F8] 0 +
jnz loc_44371D  +
cmp [esp+13Ch+var_80] 0 +
jnz loc_44370B  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_F8] 1 +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 1 +
ja loc_442A6A  +
test byte ptr [eax+33h] 0Ch +
setnz al  +
movzx eax al +
mov [esp+13Ch+var_F8] eax +
jmp loc_442A6A  +
mov [edx] ebx +
jmp loc_44199A  +
movzx eax byte ptr [eax+33h] +
mov edi eax +
and edi 1 +
mov [esp+13Ch+var_F8] edi +
jmp loc_442A6A  +
mov [esp+13Ch+var_F8] 1 +
jmp loc_442A6A  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] offset aBUndefinedRefe +
mov [esp+13Ch+var_134] eax +
call off_47D664  +
mov [esp+13Ch+var_13C] 0Bh +
call sub_4105E0  +
jmp loc_441FD3  +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_C0] 0 +
jmp loc_440DA7  +
mov [esp+13Ch+var_134] offset aElf_link_add_o +
mov [esp+13Ch+var_138] 0E2Ah +
mov [esp+13Ch+var_13C] offset a____Binutils_3 +
call sub_410560  +
mov eax [esp+13Ch+var_104] +
cmp dword ptr [eax+78h] 0 +
jz loc_442EA6  +
mov edi [esp+13Ch+var_FC] +
mov eax [ebp+0A0h] +
mov edi [edi+2Ch] +
cmp [eax+920h] edi +
jnz loc_442EA6  +
mov edi [esp+13Ch+arg_4] +
mov eax [esp+13Ch+var_104] +
mov edx [edi+30h] +
mov eax [eax+74h] +
mov ecx [edx+4] +
mov edx [ebp+4] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] edx +
call eax  +
test eax eax +
jz loc_442EA6  +
mov ebx [ebp+64h] +
jmp loc_44381B  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+78h] +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_130] esi +
mov [esp+13Ch+var_134] ebx +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov edx [ebx+8Ch] +
cmp esi [edx+68h] +
mov edi eax +
jz loc_443810  +
mov [esp+13Ch+var_13C] esi +
call free  +
test edi edi +
jz loc_440BB0  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_442EA6  +
mov eax [ebx+14h] +
test al 4 +
jz loc_443818  +
cmp dword ptr [ebx+4Ch] 0 +
jz loc_443818  +
mov edi [esp+13Ch+arg_4] +
test byte ptr [edi+1] 8 +
jz loc_443842  +
test ah 20h +
jnz loc_443818  +
cmp dword ptr [ebx+3Ch] offset off_47D510 +
jz loc_443818  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax+2] +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] ebx +
shr al 6 +
and eax 1 +
mov [esp+13Ch+var_12C] eax +
mov [esp+13Ch+var_13C] ebp +
call sub_43F980  +
test eax eax +
mov esi eax +
jnz loc_4437DC  +
xor eax eax +
jmp loc_440BB2  +
mov [esp+13Ch+var_20] eax +
lea eax [esp+13Ch+var_20] +
mov [esp+13Ch+var_118] eax +
mov eax [esp+13Ch+var_78] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] offset off_47D5B8 +
mov [esp+13Ch+var_11C] eax +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_130] 2000h +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_124] eax +
mov eax [esp+13Ch+var_74] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_424B10  +
test eax eax +
jz loc_441FD3  +
mov eax [esp+13Ch+var_20] +
cmp byte ptr [eax+0Ch] 6 +
mov [esp+13Ch+var_24] eax +
jnz loc_441B98  +
mov edi [esp+13Ch+var_7C] +
mov edx [edi+0D8h] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] eax +
call edx  +
mov eax [esp+13Ch+var_24] +
movzx edx byte ptr [esi+35h] +
mov ecx edx +
and edx 0FFFFFFFEh +
or cl [eax+35h] +
and ecx 1 +
or edx ecx +
mov [esi+35h] dl +
movzx edx byte ptr [eax+34h] +
mov ecx edx +
and edx 7Fh +
or ecx [esi+34h] +
and ecx 0FFFFFF80h +
or edx ecx +
mov [eax+34h] dl +
cmp [esp+13Ch+var_F8] 0 +
jnz loc_4439B6  +
cmp [esp+13Ch+var_80] 0 +
jnz loc_4439A4  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_F8] 1 +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 1 +
ja loc_441B98  +
movzx eax byte ptr [eax+33h] +
shr al 2 +
mov edi eax +
and edi 1 +
mov [esp+13Ch+var_F8] edi +
jmp loc_441B98  +
movzx eax byte ptr [eax+33h] +
mov edi eax +
and edi 1 +
mov [esp+13Ch+var_F8] edi +
jmp loc_441B98  +
mov [esp+13Ch+var_F8] 1 +
jmp loc_441B98  +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_43DDB0  +
test eax eax +
jnz loc_442A41  +
jmp loc_441FD3  +
movzx eax byte ptr [edi+6] +
test ds:byte_49F240[eax+eax] 4 +
jz loc_443498  +
test byte ptr [esi+16h] 80h +
jnz loc_443498  +
cmp dword ptr [esi+3Ch] offset off_47D510 +
jz loc_443498  +
mov edi [esi+8Ch] +
lea eax [esp+13Ch+var_14] +
mov [esp+13Ch+var_128] eax +
mov [esp+13Ch+var_130] ebx +
mov [esp+13Ch+var_134] esi +
lea eax [edi+88h] +
mov [esp+13Ch+var_12C] eax +
mov eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_458550  +
test eax eax +
jz loc_440BB0  +
cmp dword ptr [edi+88h] 0 +
jz loc_443498  +
movzx eax word ptr [esi+18h] +
and ax 0FC7Fh +
or al 80h +
mov [esi+18h] ax +
jmp loc_443498  +
***
push ebx  +
mov edx [esp+8] +
xor eax eax +
test byte ptr [edx+34h] 8 +
jnz loc_443A96  +
movzx ecx byte ptr [edx+0Ch] +
lea ebx [ecx-1] +
cmp bl 1 +
jbe loc_443A96  +
sub ecx 3 +
cmp cl 1 +
jbe loc_443A98  +
mov eax 1 +
pop ebx  +
retn   +
***
mov edx [edx+14h] +
mov edx [edx+3Ch] +
test edx edx +
jnz loc_443A91  +
jmp loc_443A96  +
***
mov eax [esp+18h+arg_0] +
mov ebx [eax+34h] +
test ebx ebx +
jnz loc_443ACB  +
jmp loc_443AF0  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_443AF0  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_443AC1  +
mov [esp+18h+var_14] offset off_47D510 +
mov [esp+18h+var_18] ebx +
call sub_433030  +
test eax eax +
jnz loc_443AC1  +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 40h +
mov esi [esp+58h] +
mov ebx [esp+54h] +
test esi esi +
jz loc_443B78  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov eax [ebx+1Ch] +
mov [esp] eax +
call sub_423EB0  +
test eax eax +
jz loc_443B49  +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
jbe loc_443B80  +
mov edx [ebx+10h] +
test edx edx +
jnz loc_443B57  +
mov edx [esp+5Ch] +
mov [ebx+10h] edx +
test eax eax +
jz loc_443C58  +
movzx eax byte ptr [eax+0Ch] +
mov edi 1 +
sub eax 1 +
cmp al 1 +
jbe loc_443BD1  +
add esp 40h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [ebx+10h] +
xor eax eax +
jmp loc_443B4C  +
***
test byte ptr [eax+33h] 2 +
jz loc_443B49  +
cmp byte ptr [eax+30h] 1 +
ja loc_443B49  +
mov ecx [ebx+10h] +
mov byte ptr [eax+30h] 1 +
test ecx ecx +
jnz loc_443C6E  +
cmp dword ptr [eax+14h] offset off_47D510 +
jz loc_443C97  +
mov [esp+2Ch] eax +
mov eax [esp+50h] +
mov [esp+8] esi +
mov dword ptr [esp] offset aBSNotAbsolute +
mov [esp+4] eax +
call off_47D664  +
mov edx [ebx+10h] +
mov eax [esp+2Ch] +
jmp loc_443B4C  +
***
lea eax [esp+3Ch] +
mov [esp+24h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+3Ch] 0 +
mov eax [eax+4] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
and eax 1 +
mov [esp+20h] eax +
mov edx [ebx+10h] +
xor eax eax +
test edx edx +
cmovns eax [ebx+10h] +
mov dword ptr [esp+10h] offset off_47D510 +
mov dword ptr [esp+0Ch] 2 +
mov [esp+14h] eax +
mov eax [esp+50h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] eax +
call sub_424B10  +
test eax eax +
jz loc_443C66  +
mov eax [esp+3Ch] +
or byte ptr [eax+33h] 2 +
mov byte ptr [eax+30h] 1 +
add esp 40h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
add esp 40h +
mov edi 1 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
xor di di +
jmp loc_443B6F  +
***
mov [esp+2Ch] eax +
mov eax [esp+50h] +
mov [esp+8] esi +
mov dword ptr [esp] offset aBStackSizeSpec +
mov [esp+4] eax +
call off_47D664  +
mov edx [ebx+10h] +
mov eax [esp+2Ch] +
jmp loc_443B4C  +
***
mov edx [eax+18h] +
mov [ebx+10h] edx +
jmp loc_443B4C  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0E0h] +
mov edi [esp+0DCh] +
mov dword ptr [eax] 0 +
mov eax [edi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_443CE7  +
add esp 0ACh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+0C0h] +
mov edx [ecx+4] +
mov esi [edx+1B0h] +
mov edx [eax+44h] +
mov [eax+3Ch] edx +
mov edx [eax+48h] +
mov [eax+40h] edx +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jz loc_444560  +
mov eax [esi+88h] +
test eax eax +
jz loc_443D33  +
mov ebx [esp+0C0h] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_4442A5  +
movzx eax byte ptr [edi+5] +
test al 2 +
jnz loc_4442B2  +
test al 4 +
jz loc_4444A0  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax+34h] 6 +
mov eax [edi+1Ch] +
mov ebx [eax+38h] +
test ebx ebx +
mov [esp+30h] ebx +
jz loc_4442D1  +
mov eax [eax+30h] +
mov ebx 0FFFFFFFFh +
test eax eax +
jnz loc_4442E5  +
mov [esp] edi +
call sub_44EDB0  +
test eax eax +
jz loc_4442A5  +
mov eax [esi+8Ch] +
test eax eax +
jz loc_443DB5  +
mov ecx [esp+0C0h] +
mov [esp+4] edi +
mov [esp] ecx +
call eax  +
test eax eax +
jz loc_4442A5  +
mov eax [edi+1Ch] +
mov eax [eax+30h] +
test eax eax +
jz loc_443CD7  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_gnu_version_d +
mov [esp] eax +
call sub_40F360  +
test eax eax +
mov ebp eax +
jz loc_444D27  +
mov esi [edi+7Ch] +
test esi esi +
jz loc_444CF0  +
mov eax [esi+8] +
test eax eax +
jnz loc_443DFD  +
mov esi [esi] +
test esi esi +
jz loc_444CF0  +
test byte ptr [edi] 20h +
mov edx 1Ch +
mov dword ptr [esp+3Ch] 1 +
jnz loc_4448A5  +
mov [esp+34h] ebx +
mov ebx [esp+3Ch] +
mov ecx esi +
lea esi [esi+0] +
mov eax [ecx+8] +
test eax eax +
jz loc_443E3D  +
mov eax [ecx+2Ch] +
add edx 1Ch +
add ebx 1 +
test eax eax +
jz loc_443E3D  +
mov eax [eax] +
add edx 8 +
test eax eax +
jnz loc_443E34  +
mov ecx [ecx] +
test ecx ecx +
jnz loc_443E20  +
mov [esp+3Ch] ebx +
mov ebx [esp+34h] +
mov eax [esp+0C0h] +
mov [ebp+24h] edx +
mov [esp+4] edx +
mov [esp] eax +
call sub_40E140  +
test eax eax +
mov edx eax +
mov [ebp+6Ch] eax +
jz loc_444D01  +
mov eax 1 +
mov ebp 1 +
test byte ptr [edi] 20h +
mov [esp+7Ah] ax +
mov eax 1 +
mov [esp+7Ch] ax +
mov eax 1 +
mov [esp+78h] bp +
mov [esp+7Eh] ax +
jz loc_4448BF  +
mov dword ptr [esp+84h] 28h +
mov dword ptr [esp+88h] 14h +
cmp ebx 0FFFFFFFFh +
mov [esp+34h] edx +
jz loc_444961  +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_455A50  +
mov eax [esp+0C4h] +
mov [esp] eax +
call near ptr dword_42B3D0  +
mov edx [esp+34h] +
mov [esp+68h] ebx +
mov [esp+80h] eax +
lea eax [esp+78h] +
mov [esp+38h] eax +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] edx +
mov [esp+34h] edx +
mov dword ptr [esp+6Ch] 0 +
mov [esp] eax +
call sub_42B070  +
mov edx [esp+34h] +
test byte ptr [edi] 20h +
lea ebx [edx+14h] +
jz loc_444019  +
mov ecx [esp+30h] +
lea eax [esp+5Ch] +
mov [esp+24h] eax +
mov dword ptr [esp+5Ch] 0 +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
and eax 1 +
mov [esp+20h] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+10h] offset off_47D510 +
mov dword ptr [esp+0Ch] 2 +
mov [esp+4] ecx +
mov [esp+8] eax +
mov [esp] edi +
call sub_424B10  +
test eax eax +
jz loc_4442A5  +
mov eax [esp+5Ch] +
and byte ptr [eax+34h] 0FEh +
or byte ptr [eax+33h] 2 +
mov byte ptr [eax+30h] 1 +
mov dword ptr [eax+40h] 0 +
mov [esp+4] eax +
mov [esp] edi +
call sub_43DDB0  +
test eax eax +
jz loc_4442A5  +
xor edx edx +
cmp esi 1 +
sbb eax eax +
mov ecx 2 +
not eax  +
and eax 1Ch +
mov [esp+88h] eax +
mov eax [esp+38h] +
mov [esp+8] ebx +
mov [esp+7Ah] dx +
mov [esp+7Ch] cx +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov dword ptr [esp+84h] 14h +
mov [esp] eax +
call sub_42B070  +
mov edx [esp+34h] +
lea ebx [edx+28h] +
lea eax [esp+68h] +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] ebx +
add ebx 8 +
mov [esp] eax +
call sub_42B160  +
test esi esi +
jz loc_44458F  +
nop   +
mov eax [esi+8] +
test eax eax +
jz loc_444585  +
mov eax [esi+2Ch] +
xor edx edx +
test eax eax +
jz loc_44405D  +
mov eax [eax] +
add edx 1 +
test eax eax +
jnz loc_444054  +
mov [esp+34h] edx +
mov edx [esp+30h] +
lea ecx [esp+5Ch] +
mov eax [esi+4] +
mov [esp+24h] ecx +
mov dword ptr [esp+5Ch] 0 +
mov ecx [edx+4] +
mov ecx [ecx+1B0h] +
movzx ecx byte ptr [ecx+1ACh] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
and ecx 1 +
mov [esp+20h] ecx +
mov dword ptr [esp+10h] offset off_47D510 +
mov dword ptr [esp+0Ch] 2 +
mov [esp+8] eax +
mov [esp+4] edx +
mov [esp] edi +
call sub_424B10  +
test eax eax +
jz loc_4442A5  +
mov ebp [esp+5Ch] +
and byte ptr [ebp+34h] 0FEh +
or byte ptr [ebp+33h] 2 +
mov byte ptr [ebp+30h] 1 +
mov [ebp+40h] esi +
mov [esp+4] ebp +
mov [esp] edi +
call sub_43DDB0  +
test eax eax +
jz loc_4442A5  +
mov eax 1 +
mov edx [esp+34h] +
mov [esp+78h] ax +
xor eax eax +
mov [esp+7Ah] ax +
mov eax [esi+0Ch] +
test eax eax +
jz loc_444880  +
movzx eax byte ptr [edi] +
mov [esp+34h] edx +
and eax 20h +
cmp al 1 +
sbb eax eax +
add eax 2 +
add ax [esi+8] +
mov [esp+7Ch] ax +
lea eax [edx+1] +
mov [esp+7Eh] ax +
mov eax [esi+4] +
mov [esp] eax +
call near ptr dword_42B3D0  +
mov dword ptr [esp+84h] 14h +
mov dword ptr [esp+88h] 0 +
mov [esp+80h] eax +
mov eax [esi] +
test eax eax +
jz loc_4441A4  +
mov edx [eax+8] +
test edx edx +
mov edx [esp+34h] +
jnz loc_444854  +
mov eax [eax] +
test eax eax +
jz loc_4441A4  +
mov dword ptr [esp+4] 1877h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410530  +
mov eax [esi] +
test eax eax +
jz loc_4441A4  +
mov eax [eax+8] +
mov edx [esp+34h] +
test eax eax +
jnz loc_444854  +
mov eax [esp+38h] +
mov [esp+8] ebx +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp] eax +
call sub_42B070  +
mov ecx [edi+1Ch] +
lea edx [ebx+14h] +
mov eax [ebp+38h] +
mov [esp+34h] edx +
mov ecx [ecx+50h] +
mov [esp+4] eax +
mov [esp+68h] eax +
mov [esp] ecx +
call sub_455A50  +
mov ebp [esi+2Ch] +
mov dword ptr [esp+6Ch] 0 +
mov edx [esp+34h] +
test ebp ebp +
jz loc_4441FA  +
mov dword ptr [esp+6Ch] 8 +
mov eax [esp+68h] +
add ebx 1Ch +
mov [esi+30h] eax +
lea eax [esp+68h] +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] edx +
mov [esp] eax +
call sub_42B160  +
mov ebp [esi+2Ch] +
test ebp ebp +
jz loc_444585  +
mov [esp+34h] esi +
mov esi ebp +
mov ebp [esp+0C0h] +
jmp loc_444288  +
mov ecx [edi+1Ch] +
mov eax [eax+30h] +
mov ecx [ecx+50h] +
mov [esp+4] eax +
mov [esp+68h] eax +
mov [esp] ecx +
call sub_455A50  +
cmp dword ptr [esi] 1 +
mov [esp+8] ebx +
mov [esp] ebp +
sbb eax eax +
add ebx 8 +
not eax  +
and eax 8 +
mov [esp+6Ch] eax +
lea eax [esp+68h] +
mov [esp+4] eax +
call sub_42B160  +
mov esi [esi] +
test esi esi +
jz loc_444581  +
mov eax [esi+4] +
test eax eax +
jnz loc_444240  +
mov dword ptr [esp+68h] 0 +
jmp loc_444259  +
***
mov dword ptr [esp] 11h +
call sub_4105E0  +
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax+34h] 7 +
jmp loc_443D61  +
***
mov [esp] edi +
call sub_44EDB0  +
test eax eax +
jnz loc_443CD7  +
xor eax eax +
jmp loc_4442A7  +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_interp +
mov [esp] eax +
call sub_40F360  +
mov ebx [esp+0E0h] +
test eax eax +
mov [ebx] eax +
jz loc_444903  +
mov eax [esp+0C4h] +
test eax eax +
jz loc_444577  +
mov eax [edi+1Ch] +
mov ebx [esp+0C4h] +
mov eax [eax+50h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 1 +
mov [esp] eax +
call sub_455970  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_4442A5  +
mov [esp+8] eax +
mov dword ptr [esp+4] 0Eh +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
test byte ptr [edi] 4 +
jnz loc_4448DA  +
mov eax [esp+0C8h] +
test eax eax +
jz loc_4443C9  +
mov eax [edi+1Ch] +
mov ecx [esp+0C8h] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_455970  +
cmp eax 0FFFFFFFFh +
jz loc_4442A5  +
movzx edx byte ptr [edi+4] +
mov [esp+8] eax +
mov [esp] edi +
and edx 8 +
cmp dl 1 +
sbb edx edx +
and edx 0FFFFFFF2h +
add edx 1Dh +
mov [esp+4] edx +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
mov eax [esp+0CCh] +
test eax eax +
jz loc_44441A  +
mov eax [edi+1Ch] +
mov ecx [esp+0CCh] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_455970  +
cmp eax 0FFFFFFFFh +
jz loc_4442A5  +
mov [esp+8] eax +
mov dword ptr [esp+4] 7FFFFFFFh +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
mov ebp [esp+0D8h] +
test ebp ebp +
jz loc_4449BF  +
mov eax [esp+0D8h] +
mov eax [eax] +
test eax eax +
jnz loc_444475  +
jmp loc_4449BF  +
mov [esp+8] eax +
mov dword ptr [esp+4] 7FFFFFFDh +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
add dword ptr [esp+0D8h] 4 +
mov eax [esp+0D8h] +
mov eax [eax] +
test eax eax +
jz loc_4449BF  +
mov edx [edi+1Ch] +
mov edx [edx+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] eax +
mov [esp] edx +
call sub_455970  +
cmp eax 0FFFFFFFFh +
jnz loc_444440  +
xor eax eax +
jmp loc_4442A7  +
***
mov ebx [edi+34h] +
test ebx ebx +
jz loc_444934  +
xor eax eax +
xor ecx ecx +
mov [esp+30h] esi +
mov ebp 1 +
mov esi ebx +
mov [esp+0DCh] edi +
mov ebx eax +
mov edi ecx +
jmp loc_4444D1  +
mov esi [esi+9Ch] +
test esi esi +
jz loc_444501  +
mov eax [esi+28h] +
shr eax 5 +
test eax 11042h +
jnz loc_4444C7  +
mov dword ptr [esp+4] offset a_note_gnuStack +
mov [esp] esi +
call sub_40F280  +
test eax eax +
jz loc_444867  +
test byte ptr [eax+14h] 10h +
mov edi eax +
cmovnz ebx ebp +
jmp loc_4444C7  +
***
mov ecx edi +
mov esi [esp+30h] +
test ecx ecx +
mov edi [esp+0DCh] +
jz loc_444936  +
mov eax [esp+0C0h] +
mov edx ebx +
or edx 6 +
and ebx 1 +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov [eax+34h] edx +
jz loc_443D61  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jnz loc_443D61  +
mov eax [ecx+3Ch] +
cmp eax offset off_47D510 +
jz loc_443D61  +
or dword ptr [eax+14h] 10h +
jmp loc_443D61  +
***
mov [esp] edi +
call sub_443AB0  +
test eax eax +
jnz loc_443D11  +
xor eax eax +
jmp loc_4442A7  +
***
mov ebx 0FFFFFFFFh +
jmp loc_444361  +
***
mov esi [esp+34h] +
mov esi [esi] +
test esi esi +
jnz loc_444040  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFFFCh +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
mov eax [esp+3Ch] +
mov dword ptr [esp+4] 6FFFFFFDh +
mov [esp] edi +
mov [esp+8] eax +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
mov eax [esp+0C0h] +
mov ebx [esp+3Ch] +
mov eax [eax+0A0h] +
mov [eax+238h] ebx +
test byte ptr [edi+4] 8 +
mov eax [edi+68h] +
jz loc_444E76  +
test eax eax +
jz loc_444613  +
mov [esp+8] eax +
mov dword ptr [esp+4] 1Eh +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
mov eax [edi+6Ch] +
test eax eax +
jz loc_444645  +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 1 +
jbe loc_444F8D  +
mov [esp+8] eax +
mov dword ptr [esp+4] 6FFFFFFBh +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_gnu_version_r +
mov [esp] eax +
call sub_40F360  +
test eax eax +
mov esi eax +
jz loc_444FAD  +
mov eax [esp+0C0h] +
mov [esp+78h] edi +
mov eax [eax+0A0h] +
mov edx [eax+238h] +
mov eax 1 +
mov dword ptr [esp+4] offset loc_43ABE0 +
mov dword ptr [esp+80h] 0 +
test edx edx +
cmovnz eax edx +
mov [esp+7Ch] eax +
lea eax [esp+78h] +
mov [esp+38h] eax +
mov [esp+8] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_424620  +
mov ebx [esp+80h] +
test ebx ebx +
jnz loc_4442A5  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov ecx [eax+244h] +
test ecx ecx +
jz loc_444FA4  +
xor ebp ebp +
xor edx edx +
mov eax [ecx+18h] +
add edx 10h +
add ebp 1 +
test eax eax +
jz loc_4446FA  +
lea esi [esi+0] +
mov eax [eax+14h] +
add edx 10h +
test eax eax +
jnz loc_4446F0  +
mov ecx [ecx+1Ch] +
test ecx ecx +
jnz loc_4446E0  +
mov eax [esp+0C0h] +
mov [esi+24h] edx +
mov [esp+4] edx +
mov [esp] eax +
call sub_40E140  +
test eax eax +
mov ebx eax +
mov [esi+6Ch] eax +
jz loc_4442A5  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov eax [eax+244h] +
test eax eax +
jz loc_444EF7  +
mov [esp+34h] ebp +
mov esi eax +
mov eax [esi+18h] +
xor ebp ebp +
test eax eax +
jz loc_444758  +
mov eax [eax+14h] +
add ebp 1 +
test eax eax +
jnz loc_44474E  +
mov ecx 1 +
mov [esi] cx +
mov ecx [esi+10h] +
mov [esi+2] bp +
mov eax [ecx+0A0h] +
mov eax [eax+220h] +
test eax eax +
jz loc_4451F9  +
mov ecx [edi+1Ch] +
mov ecx [ecx+50h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov [esp] ecx +
call sub_455970  +
cmp eax 0FFFFFFFFh +
jz loc_4442A5  +
mov edx [esi+1Ch] +
mov [esi+4] eax +
mov dword ptr [esi+8] 10h +
test edx edx +
jz loc_444F98  +
lea edx [ebp+1] +
shl edx 4 +
mov [esi+0Ch] edx +
mov eax [esp+0C0h] +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] esi +
mov [esp] eax +
call sub_42B210  +
mov ebp [esi+18h] +
test ebp ebp +
jz loc_444EE8  +
mov [esp+3Ch] esi +
mov esi [esp+0C0h] +
jmp loc_44481D  +
cmp dword ptr [ebp+14h] 1 +
mov [ebp+8] eax +
sbb eax eax +
not eax  +
and eax 10h +
mov [ebp+0Ch] eax +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] ebp +
mov [esp] esi +
call sub_42B300  +
mov ebp [ebp+14h] +
test ebp ebp +
jz loc_444EE4  +
mov eax [ebp+10h] +
mov [esp] eax +
call near ptr dword_42B3D0  +
mov ecx [ebp+10h] +
mov [ebp+0] eax +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_455970  +
cmp eax 0FFFFFFFFh +
jnz loc_4447EE  +
xor eax eax +
jmp loc_4442A7  +
***
lea eax ds:1Ch[edx*8] +
mov [esp+88h] eax +
jmp loc_4441A4  +
***
mov eax [esp+30h] +
test byte ptr [eax+1AEh] 20h +
cmovnz ebx ebp +
jmp loc_4444C7  +
***
mov eax [esi+1Ch] +
test eax eax +
jnz loc_444116  +
mov eax [esi+34h] +
test eax eax +
jnz loc_444116  +
mov ecx 2 +
mov [esp+7Ah] cx +
jmp loc_444116  +
***
test esi esi +
jz loc_444D15  +
mov edx 30h +
mov dword ptr [esp+3Ch] 2 +
jmp loc_443E13  +
***
mov dword ptr [esp+84h] 14h +
mov dword ptr [esp+88h] 1Ch +
jmp loc_443EB5  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 10h +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
or dword ptr [edi+68h] 2 +
jmp loc_44436A  +
***
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 1 +
ja loc_44430A  +
test byte ptr [edi+6] 1 +
jnz loc_44430A  +
mov dword ptr [esp+4] 168Dh +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410530  +
jmp loc_44430A  +
***
xor ebx ebx +
mov eax [edi+10h] +
test eax eax +
jle loc_443D61  +
mov eax [esp+0C0h] +
mov edx ebx +
or edx 6 +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov [eax+34h] edx +
jmp loc_443D61  +
***
mov eax [esp+0C0h] +
mov eax [eax] +
mov [esp] eax +
call sub_4698B0  +
mov [esp] eax +
mov [esp+0C4h] eax +
call near ptr dword_42B3D0  +
mov ebx [esp+0C4h] +
mov [esp+80h] eax +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov [esp] eax +
call sub_455970  +
cmp eax 0FFFFFFFFh +
jz loc_4442A5  +
mov [esp+68h] eax +
mov edx [esp+34h] +
jmp loc_443EF2  +
***
mov ecx [esp+0D0h] +
test ecx ecx +
jz loc_444A10  +
mov eax [edi+1Ch] +
mov ecx [esp+0D0h] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_455970  +
cmp eax 0FFFFFFFFh +
jz loc_4442A5  +
mov [esp+8] eax +
mov dword ptr [esp+4] 6FFFFEFCh +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
mov edx [esp+0D4h] +
test edx edx +
jz loc_444A61  +
mov eax [edi+1Ch] +
mov ecx [esp+0D4h] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_455970  +
cmp eax 0FFFFFFFFh +
jz loc_4442A5  +
mov [esp+8] eax +
mov dword ptr [esp+4] 6FFFFEFBh +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
movzx eax byte ptr [edi] +
mov [esp+78h] edi +
mov dword ptr [esp+7Ch] 0 +
test al 10h +
jnz loc_444EB7  +
and eax 3 +
cmp al 1 +
jbe loc_444EAD  +
mov eax [edi+7Ch] +
test eax eax +
mov [esp+3Ch] eax +
jz loc_444C4E  +
mov [esp+48h] ebx +
mov [esp+4Ch] esi +
mov [esp+0DCh] edi +
mov eax [esp+3Ch] +
mov edi [eax+0Ch] +
test edi edi +
mov ebp edi +
jnz loc_444ABE  +
jmp loc_444C2D  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_444C2D  +
movzx eax byte ptr [ebp+8] +
and eax 3 +
cmp al 1 +
jnz loc_444AB3  +
mov eax [esp+0C0h] +
mov edx [ebp+4] +
mov eax [eax+4] +
mov [esp+44h] edx +
movzx eax byte ptr [eax+18h] +
mov [esp] edx +
mov ebx eax +
call strlen  +
mov edi [esp+3Ch] +
xor ecx ecx +
test bl bl +
setnz cl  +
mov [esp+38h] bl +
mov edi [edi+4] +
mov [esp+40h] ecx +
lea esi [eax+ecx] +
mov [esp] edi +
mov [esp+34h] edi +
call strlen  +
mov edi eax +
lea eax [esi+eax+3] +
mov [esp] eax +
call sub_412BD0  +
test eax eax +
mov ebx eax +
jz loc_4442A5  +
mov ecx [esp+40h] +
mov edx [esp+44h] +
movzx eax byte ptr [esp+38h] +
add ecx ebx +
mov [ebx] al +
mov [esp] ecx +
mov [esp+8] esi +
add esi ebx +
mov [esp+4] edx +
call memcpy  +
lea edx [edi+1] +
mov edi [esp+34h] +
lea eax [esi+1] +
mov byte ptr [esi] 40h +
mov [esp+8] edx +
mov [esp+4] edi +
mov [esp] eax +
mov [esp+38h] edx +
call memcpy  +
mov eax [esp+0DCh] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_423EB0  +
mov edx [esp+38h] +
test eax eax +
mov edi eax +
jz loc_444BB0  +
movzx eax byte ptr [eax+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_444CE3  +
mov eax [esp+34h] +
add esi 2 +
mov byte ptr [esi-1] 40h +
mov [esp+8] edx +
mov [esp] esi +
mov [esp+4] eax +
call memcpy  +
mov eax [esp+0DCh] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_423EB0  +
mov [esp] ebx +
mov edi eax +
call free  +
test edi edi +
jz loc_444AB3  +
test byte ptr [edi+33h] 8 +
jnz loc_444AB3  +
movzx eax byte ptr [edi+0Ch] +
sub eax 3 +
cmp al 1 +
ja loc_444AB3  +
or byte ptr [ebp+8] 2 +
jmp loc_444AB3  +
***
mov eax [esp+3Ch] +
mov eax [eax] +
test eax eax +
mov [esp+3Ch] eax +
jnz loc_444AA1  +
mov ebx [esp+48h] +
mov esi [esp+4Ch] +
mov edi [esp+0DCh] +
lea eax [esp+60h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_43F120 +
mov eax [edi+1Ch] +
mov [esp+60h] edi +
mov dword ptr [esp+64h] 0 +
mov [esp] eax +
call sub_424620  +
cmp dword ptr [esp+64h] 0 +
jnz loc_4442A5  +
cmp byte ptr [edi+4] 0 +
js loc_444D56  +
mov ecx [edi+7Ch] +
test ecx ecx +
jz loc_444D56  +
mov edx 1 +
mov ebp [ecx+0Ch] +
test ebp ebp +
jnz loc_444CB1  +
jmp loc_444D40  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_444D40  +
movzx eax byte ptr [ebp+8] +
and eax 7 +
cmp al 1 +
jnz loc_444CA6  +
mov edx [ecx+4] +
mov eax [ebp+4] +
mov [esp+34h] ecx +
mov dword ptr [esp] offset aSUndefinedVers +
mov [esp+8] edx +
mov [esp+4] eax +
call off_47D664  +
xor edx edx +
mov ecx [esp+34h] +
jmp loc_444CA6  +
***
mov [esp] ebx +
call free  +
jmp loc_444C0B  +
***
test byte ptr [edi] 20h +
jnz loc_444D13  +
or dword ptr [ebp+14h] 8000h +
jmp loc_4445E6  +
***
mov eax [ebp+24h] +
test eax eax +
jz loc_443E6E  +
xor eax eax +
jmp loc_4442A7  +
***
xor esi esi +
mov edx 30h +
mov dword ptr [esp+3Ch] 2 +
jmp loc_443E4B  +
***
mov dword ptr [esp+4] 17BEh +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410530  +
jmp loc_443DE1  +
***
mov ecx [ecx] +
test ecx ecx +
jnz loc_444C9A  +
test edx edx +
lea esi [esi+0] +
jz loc_444299  +
lea eax [esp+78h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_43F020 +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_424620  +
cmp dword ptr [esp+7Ch] 0 +
jnz loc_4442A5  +
mov eax [edi+48h] +
test eax eax +
jz loc_444DB8  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_423EB0  +
test eax eax +
jz loc_444DB8  +
test byte ptr [eax+33h] 3 +
jnz loc_445242  +
mov eax [edi+4Ch] +
test eax eax +
jz loc_444DF4  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_423EB0  +
test eax eax +
jz loc_444DF4  +
test byte ptr [eax+33h] 3 +
jnz loc_445208  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_preinit_array +
mov [esp] eax +
call sub_40F280  +
test eax eax +
jz loc_445006  +
test byte ptr [eax+18h] 4 +
jz loc_445006  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 1 +
jbe loc_444FC6  +
mov ebx [edi+34h] +
jmp loc_444E36  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_44522F  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_444E30  +
mov eax [ebx+64h] +
test eax eax +
jnz loc_444E57  +
jmp loc_444E30  +
***
mov eax [eax+0Ch] +
test eax eax +
jz loc_444E30  +
mov edx [eax+8Ch] +
cmp dword ptr [edx+4] 10h +
jnz loc_444E50  +
mov [esp+4] ebx +
mov dword ptr [esp] offset aB_preinit_arra +
call off_47D664  +
jmp loc_444E30  +
***
test al 10h +
jnz loc_4445F7  +
test al 8 +
jz loc_444613  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 18h +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jnz loc_444613  +
xor eax eax +
jmp loc_4442A7  +
***
test byte ptr [edi+5] 1 +
jz loc_444A83  +
lea eax [esp+78h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_43F450 +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_424620  +
cmp dword ptr [esp+7Ch] 0 +
jz loc_444A83  +
xor eax eax +
jmp loc_4442A7  +
***
mov esi [esp+3Ch] +
mov esi [esi+1Ch] +
test esi esi +
jnz loc_444745  +
mov ebp [esp+34h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFFFEh +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 6FFFFFFFh +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov [eax+23Ch] ebp +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
cmp dword ptr [eax+23Ch] 0 +
jnz loc_445269  +
cmp dword ptr [eax+238h] 0 +
jnz loc_445269  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_gnu_version +
mov [esp] eax +
call sub_40F360  +
or dword ptr [eax+14h] 8000h +
jmp loc_443CD7  +
***
and eax 0FFFFFF97h +
mov [edi+6Ch] eax +
jmp loc_444629  +
***
mov dword ptr [esi+0Ch] 0 +
jmp loc_4447BC  +
***
or dword ptr [esi+14h] 8000h +
jmp loc_444F46  +
***
mov dword ptr [esp+4] 18C5h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410530  +
jmp loc_444663  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 20h +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 21h +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_init_array +
mov [esp] eax +
call sub_40F280  +
test eax eax +
jz loc_44502B  +
test byte ptr [eax+18h] 4 +
jnz loc_44516B  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_fini_array +
mov [esp] eax +
call sub_40F280  +
test eax eax +
jz loc_445050  +
test byte ptr [eax+18h] 4 +
jnz loc_4451B2  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_dynstr +
mov [esp] eax +
call sub_40F360  +
test eax eax +
jz loc_443D83  +
cmp dword ptr [eax+3Ch] offset off_47D510 +
jz loc_443D83  +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov [esp] eax +
call sub_455C30  +
mov ebp eax +
movzx eax byte ptr [edi+3] +
test al 20h +
jnz loc_445142  +
test al 40h +
jz loc_4450B9  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFEF5h +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 5 +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6 +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 0Ah +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
mov eax [esi+174h] +
movzx eax byte ptr [eax+5] +
mov dword ptr [esp+4] 0Bh +
mov [esp] edi +
mov [esp+8] eax +
call sub_4402D0  +
test eax eax +
jnz loc_443D83  +
xor eax eax +
jmp loc_4442A7  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
movzx eax byte ptr [edi+3] +
jmp loc_445095  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 19h +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1Bh +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jnz loc_44502B  +
xor eax eax +
jmp loc_4442A7  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1Ah +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jz loc_4442A5  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1Ch +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jnz loc_445050  +
xor eax eax +
jmp loc_4442A7  +
***
mov eax [ecx] +
mov [esp] eax +
call sub_4698B0  +
jmp loc_44477B  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0Dh +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jnz loc_444DF4  +
xor eax eax +
jmp loc_4442A7  +
***
mov dword ptr [esp] 0Fh +
call sub_4105E0  +
xor eax eax +
jmp loc_4442A7  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0Ch +
mov [esp] edi +
call sub_4402D0  +
test eax eax +
jnz loc_444DB8  +
xor eax eax +
jmp loc_4442A7  +
***
mov ecx [esp+38h] +
mov edx edi +
mov eax [esp+0C0h] +
call sub_439A00  +
test eax eax +
jz loc_444F6D  +
jmp loc_443CD7  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov edi [esp+24h] +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_4452AE  +
jmp loc_4452D5  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_4452D5  +
mov eax [ebx+14h] +
and eax 8001h +
cmp eax 1 +
jnz loc_4452A7  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] esi +
call sub_43F8F0  +
test eax eax +
jnz loc_4452A7  +
mov eax [edi+1Ch] +
mov [eax+68h] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov edi [esp+24h] +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_4452FE  +
jmp loc_445372  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_445325  +
mov eax [ebx+14h] +
and eax 8009h +
cmp eax 1 +
jnz loc_4452F7  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] esi +
call sub_43F8F0  +
test eax eax +
jnz loc_4452F7  +
mov eax [edi+1Ch] +
mov [eax+6Ch] ebx +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_445337  +
jmp loc_445372  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_445372  +
mov eax [ebx+14h] +
and eax 8009h +
cmp eax 9 +
jnz loc_445330  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] esi +
call sub_43F8F0  +
test eax eax +
jnz loc_445330  +
mov eax [edi+1Ch] +
mov [eax+68h] ebx +
mov edx [eax+68h] +
test edx edx +
jnz loc_44537C  +
mov edx [eax+6Ch] +
mov [eax+68h] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [edi+1Ch] +
mov edx [eax+68h] +
test edx edx +
jz loc_445365  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0C4h] +
mov esi [esp+0C0h] +
mov eax [eax+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_4453C1  +
mov eax 1 +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+4] +
mov edx [esp+0C4h] +
mov ebx [eax+1B0h] +
mov eax [ebx+90h] +
mov [esp+4] edx +
mov [esp] esi +
call eax  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov edi [eax+30h] +
test edi edi +
jz loc_4453B1  +
mov eax [eax+38h] +
lea ecx [esp+3Ch] +
mov edx [esp+0C4h] +
mov edi eax +
mov [esp+14h] eax +
mov eax esi +
call sub_439A00  +
mov [esp] edi +
mov dword ptr [esp+4] offset a_gnu_version +
mov ebp eax +
call sub_40F360  +
test eax eax +
mov edi eax +
jz loc_445C51  +
test ebp ebp +
jz loc_445477  +
test byte ptr [edi+15h] 80h +
jnz loc_445477  +
lea eax [ebp+ebp+0] +
mov [edi+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_40E220  +
test eax eax +
mov [edi+6Ch] eax +
jz loc_445854  +
mov eax [esp+0C4h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFFF0h +
mov [esp] eax +
call sub_4402D0  +
test eax eax +
jz loc_445854  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov edi [eax+0F8h] +
test edi edi +
jz loc_445C6A  +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+5] +
imul eax ebp +
test ebp ebp +
mov [edi+24h] eax +
jnz loc_445A2F  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov dword ptr [eax+60h] 0 +
mov eax [esp+0C4h] +
movzx eax byte ptr [eax+3] +
test al 20h +
jnz loc_4457FD  +
test al 40h +
jz loc_4456C0  +
xor eax eax +
mov ecx 12h +
lea edi [esp+58h] +
mov [esp+1Ch] edi +
stos   +
lea eax ds:0[ebp*8] +
mov [esp] eax +
call sub_412BD0  +
test eax eax +
mov [esp+68h] eax +
jz loc_445854  +
lea eax [eax+ebp*4] +
mov edi [esp+1Ch] +
mov [esp+6Ch] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+4] offset sub_43BE30 +
mov dword ptr [esp+80h] 0FFFFFFFFh +
mov [esp+8] edi +
mov eax [eax+1Ch] +
mov [esp+58h] esi +
mov [esp+5Ch] ebx +
mov [esp] eax +
call sub_424620  +
mov edx [esp+9Ch] +
test edx edx +
jnz loc_445A83  +
mov ecx [esp+60h] +
mov edx [esp+68h] +
mov eax [esp+0C4h] +
mov dword ptr [esp] 1 +
call sub_439790  +
test eax eax +
mov [esp+18h] eax +
jz loc_445A83  +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset a_gnu_hash +
mov [esp] eax +
call sub_40F360  +
test eax eax +
mov [esp+24h] eax +
jz loc_4460D3  +
mov edi [esp+60h] +
test edi edi +
jnz loc_445C83  +
cmp dword ptr [esp+80h] 0FFFFFFFFh +
jz loc_4455BB  +
mov dword ptr [esp+4] 1A12h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410530  +
mov eax [esp+68h] +
mov [esp] eax +
call free  +
mov eax [ebx+174h] +
mov ebp [esp+24h] +
movzx eax byte ptr [eax+0Ah] +
shr al 3 +
movzx eax al +
add eax 14h +
mov [ebp+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_40E220  +
test eax eax +
mov edi eax +
jz loc_445854  +
mov ecx ebp +
mov [ecx+6Ch] eax +
mov eax [esi+4] +
mov eax [eax+30h] +
mov [esp+4] edi +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esi+4] +
lea edx [edi+4] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esi+4] +
lea edx [edi+8] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esi+4] +
lea edx [edi+0Ch] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+0Ah] +
cmp al 8 +
jz loc_4460AF  +
cmp al 10h +
jz loc_4460B8  +
cmp al 20h +
jz loc_4461D1  +
cmp al 40h +
jnz loc_44617C  +
mov eax [esi+4] +
lea edx [edi+10h] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov dword ptr [esp] 0 +
mov dword ptr [esp+4] 0 +
call eax  +
mov eax [esi+4] +
mov edx [eax+30h] +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+0Ah] +
mov dword ptr [esp] 0 +
shr al 3 +
movzx eax al +
lea eax [edi+eax+10h] +
mov [esp+4] eax +
call edx  +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset a_dynstr +
mov [esp] eax +
call sub_40F360  +
test eax eax +
mov [esp+24h] eax +
jz loc_445F20  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov edx [eax+50h] +
mov [esp+20h] eax +
mov eax [eax+38h] +
mov edi edx +
mov [esp] edx +
mov ebx eax +
mov [esp+14h] edx +
mov [esp+18h] eax +
call sub_455DB0  +
mov [esp] edi +
call sub_455C30  +
mov [esp+1Ch] eax +
mov eax [ebx+4] +
mov edi [eax+1B0h] +
mov dword ptr [esp+4] offset a_dynamic +
mov [esp] ebx +
call sub_40F360  +
test eax eax +
mov ebp eax +
jz loc_445F07  +
mov ebx [ebp+6Ch] +
mov eax [ebp+24h] +
add eax ebx +
cmp ebx eax +
jnb loc_44589D  +
lea eax [esp+58h] +
mov ecx [edi+174h] +
mov [esp+0C0h] esi +
mov esi ebx +
mov ebx eax +
jmp loc_4457A5  +
cmp eax 0Ah +
jnz loc_445860  +
mov eax [esp+1Ch] +
mov [esp+5Ch] eax +
mov eax [edi+174h] +
mov edx [esp+18h] +
mov eax [eax+34h] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] edx +
call eax  +
mov ecx [edi+174h] +
movzx eax byte ptr [ecx+6] +
add esi eax +
mov eax [ebp+6Ch] +
add eax [ebp+24h] +
cmp esi eax +
jnb loc_445896  +
mov edx [esp+18h] +
mov eax [ecx+30h] +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edx +
call eax  +
mov eax [esp+58h] +
cmp eax 1Dh +
jz loc_4457E0  +
jbe loc_445760  +
cmp eax 7FFFFFFDh +
jz loc_4457E0  +
nop   +
lea esi [esi+0] +
ja loc_445875  +
sub eax 6FFFFEFBh +
cmp eax 1 +
ja loc_44578B  +
mov eax [esp+5Ch] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_455C40  +
mov [esp+5Ch] eax +
jmp loc_445771  +
***
lea eax ds:0[ebp*4] +
mov [esp] eax +
call sub_412BD0  +
test eax eax +
mov edi eax +
jz loc_445854  +
mov [esp+58h] eax +
lea eax [esp+58h] +
mov [esp+8] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+4] offset dword_439B20 +
mov dword ptr [esp+5Ch] 0 +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_424620  +
mov ecx [esp+5Ch] +
test ecx ecx +
jz loc_445B44  +
mov [esp] edi +
call free  +
xor eax eax +
jmp loc_4453B6  +
***
ja loc_445885  +
cmp eax 1 +
jnz loc_44578B  +
nop   +
lea esi [esi+0] +
jmp loc_4457E0  +
***
cmp eax 7FFFFFFFh +
jnz loc_44578B  +
jmp loc_4457E0  +
***
sub eax 0Eh +
cmp eax 1 +
ja loc_44578B  +
jmp loc_4457E0  +
***
mov esi [esp+0C0h] +
mov eax [esp+20h] +
mov edi [esp+14h] +
mov ebx [eax+0C0h] +
test ebx ebx +
jz loc_4458C8  +
nop   +
mov eax [ebx+18h] +
mov [esp] edi +
mov [esp+4] eax +
call sub_455C40  +
mov [ebx+18h] eax +
mov ebx [ebx] +
test ebx ebx +
jnz loc_4458B0  +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset sub_43BF40 +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_424620  +
mov eax [esi+0A0h] +
mov ebx [eax+238h] +
test ebx ebx +
jnz loc_445A96  +
mov edx [eax+244h] +
test edx edx +
jz loc_4459D3  +
mov eax [esp+18h] +
lea edi [esp+40h] +
mov dword ptr [esp+4] offset a_gnu_version_r +
mov [esp] eax +
call sub_40F360  +
mov ebx [eax+6Ch] +
lea eax [esp+58h] +
mov [esp+1Ch] eax +
lea esi [esi+0] +
mov ebp [esp+1Ch] +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] ebp +
call sub_42B1A0  +
mov eax [esp+5Ch] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_455C40  +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+5Ch] eax +
call sub_42B210  +
cmp word ptr [esp+5Ah] 0 +
jz loc_4459C7  +
xor ebp ebp +
lea esi [esi+0] +
mov [esp+4] ebx +
add ebp 1 +
mov [esp+8] edi +
mov [esp] esi +
call sub_42B290  +
mov eax [esp+48h] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_455C40  +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] edi +
mov [esp] esi +
mov [esp+48h] eax +
call sub_42B300  +
movzx eax word ptr [esp+5Ah] +
cmp ebp eax +
jb loc_445980  +
mov eax [esp+64h] +
test eax eax +
jnz loc_445930  +
mov eax [esp+0C4h] +
xor ebx ebx +
mov eax [eax+1Ch] +
mov eax [eax+50h] +
mov [esp] eax +
call sub_455C30  +
mov ecx [esp+24h] +
mov esi [esp+0C4h] +
mov [ecx+24h] eax +
jmp loc_445A0C  +
add ebx 1 +
cmp [esi+64h] ebx +
jb loc_4453B1  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
call sub_4402D0  +
test eax eax +
jnz loc_445A00  +
xor eax eax +
jmp loc_4453B6  +
***
mov [esp+4] eax +
mov [esp] esi +
call sub_40E140  +
test eax eax +
mov [edi+6Ch] eax +
jz loc_445854  +
mov edx [ebx+174h] +
mov ecx [esp+3Ch] +
movzx edx byte ptr [edx+5] +
add ecx 1 +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
imul edx ecx +
mov [esp+3Ch] ecx +
mov [esp+8] edx +
call memset  +
jmp loc_4454A7  +
***
mov eax [esp+78h] +
mov [esp] eax +
call free  +
mov eax [esp+68h] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_4453B6  +
***
mov eax [esp+18h] +
lea edi [esp+40h] +
mov dword ptr [esp+4] offset a_gnu_version_d +
mov [esp] eax +
call sub_40F360  +
mov ebx [eax+6Ch] +
lea eax [esp+58h] +
mov [esp+1Ch] eax +
jmp loc_445AC8  +
mov ecx [esp+68h] +
test ecx ecx +
jz loc_445B39  +
mov eax [esp+1Ch] +
mov [esp+4] ebx +
add ebx 14h +
mov [esp] esi +
mov [esp+8] eax +
call sub_42AFE0  +
cmp dword ptr [esp+64h] 14h +
jnz loc_445AC0  +
cmp word ptr [esp+5Eh] 0 +
jz loc_445AC0  +
xor ebp ebp +
mov [esp+4] ebx +
add ebp 1 +
mov [esp+8] edi +
mov [esp] esi +
call sub_42B120  +
mov eax [esp+40h] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_455C40  +
mov [esp+8] ebx +
add ebx 8 +
mov [esp+4] edi +
mov [esp] esi +
mov [esp+40h] eax +
call sub_42B160  +
movzx eax word ptr [esp+5Eh] +
cmp ebp eax +
jb loc_445AF0  +
jmp loc_445AC0  +
***
mov eax [esi+0A0h] +
jmp loc_4458F8  +
***
mov ecx [esp+58h] +
mov edx edi +
mov eax [esp+0C4h] +
mov dword ptr [esp] 0 +
sub ecx edi +
sar ecx 2 +
call sub_439790  +
mov [esp] edi +
mov [esp+18h] eax +
call free  +
mov edx [esp+18h] +
test edx edx +
jz loc_445854  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov [eax+60h] edx +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset a_hash +
mov [esp] eax +
call sub_40F360  +
mov edx [esp+18h] +
test eax eax +
mov edi eax +
jz loc_4461B4  +
mov eax [edi+8Ch] +
mov [esp+1Ch] edx +
mov eax [eax+28h] +
mov ecx eax +
mov [esp+18h] eax +
lea eax [ebp+edx+2] +
imul eax ecx +
mov [edi+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_40E220  +
test eax eax +
mov [edi+6Ch] eax +
jz loc_445854  +
mov ecx [esp+18h] +
mov edx [esp+1Ch] +
shl ecx 3 +
cmp ecx 8 +
jz loc_446061  +
cmp ecx 10h +
jz loc_446116  +
cmp ecx 20h +
jz loc_4460EC  +
cmp ecx 40h +
jnz loc_44614A  +
mov ecx [esi+4] +
mov ecx [ecx+24h] +
mov [esp+8] eax +
mov [esp] edx +
mov dword ptr [esp+4] 0 +
call ecx  +
mov eax [esi+4] +
mov edx [esp+18h] +
add edx [edi+6Ch] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov [esp] ebp +
mov dword ptr [esp+4] 0 +
call eax  +
mov eax [esp+0C4h] +
movzx eax byte ptr [eax+3] +
jmp loc_4454CB  +
***
mov dword ptr [esp+4] 1989h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410530  +
jmp loc_445428  +
***
mov dword ptr [esp+4] 199Dh +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410530  +
jmp loc_44548F  +
***
cmp dword ptr [esp+80h] 0FFFFFFFFh +
jz loc_44612D  +
mov eax edi +
shr eax 1 +
jz loc_446166  +
mov edx 1 +
jmp loc_445CA4  +
mov edx ecx +
shr eax 1 +
lea ecx [edx+1] +
jnz loc_445CA2  +
cmp ecx 2 +
jbe loc_446166  +
lea eax [edx-1] +
bt edi eax +
jnb loc_446074  +
mov eax [ebx+174h] +
add edx 4 +
cmp byte ptr [eax+0Ah] 40h +
jz loc_446092  +
mov dword ptr [esp+90h] 5 +
mov eax 1Fh +
mov dword ptr [esp+20h] 5 +
mov [esp+98h] eax +
mov eax 1 +
mov ecx edx +
mov edi eax +
shl edi cl +
mov ecx edx +
sub ecx [esp+20h] +
mov [esp+64h] edi +
mov [esp+94h] edx +
shl eax cl +
mov [esp+20h] eax +
lea edi ds:0[eax*4] +
mov eax [esp+18h] +
lea eax [edi+eax*8] +
mov [esp] eax +
call sub_412BD0  +
test eax eax +
mov [esp+78h] eax +
jz loc_445A83  +
mov edx [esp+18h] +
lea ecx [eax+edi] +
mov [esp+74h] ecx +
mov [esp+2Ch] ecx +
mov [esp+8] edi +
shl edx 2 +
mov [esp+28h] edx +
add edx ecx +
mov ecx ebp +
sub ecx [esp+60h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
mov [esp+70h] edx +
mov [esp+88h] ecx +
call memset  +
mov edx [esp+28h] +
mov ecx [esp+2Ch] +
mov dword ptr [esp+4] 0 +
mov [esp+8] edx +
mov [esp] ecx +
call memset  +
mov eax [esp+60h] +
mov edi [esp+74h] +
test eax eax +
jz loc_445DC1  +
mov eax [esp+68h] +
xor ecx ecx +
mov [esp+2Ch] ebx +
mov ebx eax +
mov eax [ebx+ecx*4] +
xor edx edx +
add ecx 1 +
div  dword ptr [esp+18h] +
add dword ptr [edi+edx*4] 1 +
cmp [esp+60h] ecx +
ja loc_445DA7  +
mov ebx [esp+2Ch] +
mov edx [esp+88h] +
xor eax eax +
mov ecx [esp+70h] +
cmp dword ptr [edi+eax*4] 0 +
jz loc_445DDA  +
mov [ecx+eax*4] edx +
add edx [edi+eax*4] +
add eax 1 +
cmp eax [esp+18h] +
jnz loc_445DCE  +
cmp edx ebp +
jz loc_445DFB  +
mov dword ptr [esp+4] 1A5Bh +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410530  +
mov eax [esp+80h] +
mov ecx [esp+18h] +
mov [esp+8Ch] eax +
mov eax [esp+60h] +
mov [esp+84h] ecx +
add eax ecx +
mov ecx [esp+24h] +
mov edx eax +
mov eax [esp+64h] +
shr eax 3 +
lea eax [eax+edx*4+10h] +
mov [ecx+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_40E220  +
test eax eax +
mov edi eax +
jz loc_445A77  +
mov eax [esp+24h] +
mov ecx [esp+18h] +
mov [eax+6Ch] edi +
mov eax [esi+4] +
mov eax [eax+30h] +
mov [esp] ecx +
mov [esp+4] edi +
call eax  +
mov eax [esi+4] +
lea edx [edi+4] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov edx [esp+88h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [edi+8] +
mov ecx [esp+20h] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
mov eax [esi+4] +
lea edx [edi+0Ch] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov edx [esp+94h] +
mov [esp] edx +
call eax  +
mov eax [esp+64h] +
mov [esp+0C0h] esi +
mov esi ebx +
mov ebx [esp+0C0h] +
shr eax 3 +
lea eax [edi+eax+10h] +
xor edi edi +
mov [esp+2Ch] eax +
mov ebp eax +
jmp loc_445EE4  +
mov [esp+4] ebp +
mov dword ptr [esp] 0 +
call eax  +
add ebp 4 +
add edi 1 +
cmp edi [esp+18h] +
jz loc_445F39  +
mov eax [esp+74h] +
mov eax [eax+edi*4] +
test eax eax +
mov eax [ebx+4] +
mov eax [eax+30h] +
jz loc_445ECB  +
mov ecx [esp+70h] +
mov ecx [ecx+edi*4] +
mov [esp+4] ebp +
mov [esp] ecx +
call eax  +
jmp loc_445ED8  +
***
mov dword ptr [esp+4] 0CE2h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410530  +
jmp loc_445737  +
***
mov dword ptr [esp+4] 1A8Dh +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410530  +
jmp loc_4456E0  +
***
mov eax [esp+2Ch] +
add eax [esp+28h] +
mov dword ptr [esp+4] offset sub_43A550 +
mov [esp+0C0h] ebx +
mov ebx esi +
mov esi [esp+0C0h] +
mov [esp+7Ch] eax +
mov eax [esp+1Ch] +
mov [esp+8] eax +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_424620  +
mov eax [esp+24h] +
mov edi [esp+20h] +
mov ebp [eax+6Ch] +
add ebp 10h +
test edi edi +
jz loc_446044  +
mov eax [ebx+174h] +
xor ecx ecx +
xor edi edi +
mov [esp+0C0h] esi +
mov esi ebx +
mov ebx ecx +
mov ecx [esp+0C0h] +
movzx eax byte ptr [eax+0Ah] +
jmp loc_446006  +
cmp al 10h +
jz loc_446016  +
cmp al 20h +
jz loc_446036  +
cmp al 40h +
jnz loc_446198  +
mov eax [ecx+4] +
mov edx [esp+78h] +
mov [esp+18h] ecx +
mov eax [eax+24h] +
mov [esp+8] ebp +
mov ecx [edx+edi] +
mov dword ptr [esp+4] 0 +
mov [esp] ecx +
call eax  +
mov ecx [esp+18h] +
mov eax [esi+174h] +
add ebx 1 +
add edi 4 +
movzx eax byte ptr [eax+0Ah] +
mov edx eax +
shr dl 3 +
movzx edx dl +
add ebp edx +
cmp [esp+20h] ebx +
jz loc_446042  +
cmp al 8 +
jnz loc_445FB0  +
mov eax [esp+78h] +
mov eax [eax+edi] +
mov [ebp+0] al +
jmp loc_445FE6  +
***
mov eax [ecx+4] +
mov [esp+18h] ecx +
mov edx [eax+3Ch] +
mov eax [esp+78h] +
mov eax [eax+edi] +
mov [esp+4] ebp +
mov [esp] eax +
call edx  +
mov ecx [esp+18h] +
jmp loc_445FE6  +
***
mov eax [ecx+4] +
mov [esp+18h] ecx +
mov edx [eax+30h] +
jmp loc_446020  +
***
mov esi ecx +
mov eax [esp+78h] +
mov [esp] eax +
call free  +
mov eax [esp+68h] +
mov [esp] eax +
call free  +
jmp loc_4456C0  +
***
mov [eax] dl +
mov ecx [esp+18h] +
mov edx ebp +
mov eax [edi+6Ch] +
mov [eax+ecx] dl +
jmp loc_445C41  +
***
mov eax [ebx+174h] +
add edx 3 +
cmp byte ptr [eax+0Ah] 40h +
jnz loc_445CD3  +
cmp edx 5 +
mov eax 6 +
cmovz edx eax +
mov dword ptr [esp+90h] 6 +
mov eax 3Fh +
mov dword ptr [esp+20h] 6 +
jmp loc_445CEB  +
***
mov byte ptr [edi+10h] 0 +
jmp loc_445699  +
***
mov eax [esi+4] +
lea edx [edi+10h] +
mov eax [eax+3Ch] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
jmp loc_445699  +
***
mov dword ptr [esp+4] 1A0Dh +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410530  +
jmp loc_445591  +
***
mov ecx [esi+4] +
mov ecx [ecx+30h] +
mov [esp+4] eax +
mov [esp] edx +
call ecx  +
mov eax [esi+4] +
mov eax [eax+30h] +
mov edx [esp+18h] +
add edx [edi+6Ch] +
mov [esp] ebp +
mov [esp+4] edx +
call eax  +
jmp loc_445C41  +
***
mov ecx [esi+4] +
mov ecx [ecx+3Ch] +
mov [esp+4] eax +
mov [esp] edx +
call ecx  +
mov eax [esi+4] +
mov eax [eax+3Ch] +
jmp loc_446101  +
***
mov dword ptr [esp+4] 1A2Ah +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410530  +
mov edi [esp+60h] +
jmp loc_445C91  +
***
mov dword ptr [esp+8] offset aBfd_elf_size_d +
mov dword ptr [esp+4] 19DEh +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410560  +
mov eax [ebx+174h] +
cmp byte ptr [eax+0Ah] 40h +
jz loc_4461EC  +
mov edx 5 +
jmp loc_445CD3  +
***
mov dword ptr [esp+8] offset aBfd_elf_size_d +
mov dword ptr [esp+4] 1A22h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410560  +
mov dword ptr [esp+8] offset aBfd_elf_size_d +
mov dword ptr [esp+4] 1A83h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410560  +
mov dword ptr [esp+4] 19D7h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410530  +
mov edx [esp+18h] +
jmp loc_445BA9  +
***
mov eax [esi+4] +
lea edx [edi+10h] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
jmp loc_445699  +
***
mov edx 6 +
jmp loc_446092  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
mov edx [eax+1Ch] +
cmp dword ptr [edx+28h] 1 +
jz loc_446224  +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+34h] +
mov ebx [eax+34h] +
test ebx ebx +
jnz loc_446242  +
jmp loc_4462E0  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_4462E0  +
test byte ptr [ebx+29h] 8 +
jnz loc_446234  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_446234  +
mov eax [ebp+4] +
mov ecx [ebx+0A0h] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [ecx+4] al +
jnz loc_446234  +
mov esi [ebx+64h] +
test esi esi +
jnz loc_44629F  +
jmp loc_446234  +
***
mov eax [edi+88h] +
test eax eax +
jz loc_446291  +
movzx eax word ptr [esi+18h] +
and ax 0FC7Fh +
or ah 1 +
mov [esi+18h] ax +
mov eax [esp+34h] +
mov edx [eax+1Ch] +
mov esi [esi+0Ch] +
test esi esi +
jz loc_446234  +
test byte ptr [esi+16h] 80h +
jz loc_446298  +
cmp dword ptr [esi+3Ch] offset off_47D510 +
jz loc_446298  +
mov edi [esi+8Ch] +
add edx 7Ch +
mov [esp+8] esi +
mov [esp+4] edx +
mov [esp] ebp +
lea eax [edi+88h] +
mov [esp+0Ch] eax +
call sub_4578D0  +
test eax eax +
jnz loc_446278  +
jmp loc_446218  +
***
mov eax [edx+7Ch] +
mov ebx 1 +
test eax eax +
jz loc_44621A  +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp] ebp +
mov dword ptr [esp+0Ch] offset sub_439750 +
mov [esp+4] eax +
call sub_457B50  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+24h] +
mov esi [esp+28h] +
movzx edx byte ptr [ebx+34h] +
mov eax edx +
and eax 6 +
cmp al 6 +
jz loc_4463A3  +
movzx eax byte ptr [ebx+33h] +
mov ecx eax +
and eax 0FFFFFFFBh +
or cl [esi+33h] +
and ecx 4 +
or eax ecx +
mov [ebx+33h] al +
mov ecx eax +
and eax 0FFFFFFFEh +
or cl [esi+33h] +
and ecx 1 +
or eax ecx +
mov [ebx+33h] al +
mov ecx eax +
and eax 0FFFFFFEFh +
or cl [esi+33h] +
and ecx 10h +
or eax ecx +
mov ecx edx +
mov [ebx+33h] al +
and edx 0FFFFFFBFh +
or cl [esi+34h] +
and ecx 40h +
or edx ecx +
mov [ebx+34h] dl +
mov edx eax +
and eax 7Fh +
or dl [esi+33h] +
and edx 0FFFFFF80h +
or eax edx +
mov [ebx+33h] al +
movzx eax byte ptr [ebx+35h] +
mov edx eax +
and eax 0FFFFFFFDh +
or dl [esi+35h] +
and edx 2 +
or eax edx +
mov [ebx+35h] al +
cmp byte ptr [esi+0Ch] 6 +
jz loc_4463B0  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+20h] +
mov ecx [esi+24h] +
mov eax [eax+1Ch] +
mov edx [eax+3Ch] +
cmp ecx edx +
jle loc_4463D0  +
mov edi [ebx+24h] +
test edi edi +
js loc_446440  +
add ecx edi +
mov [ebx+24h] ecx +
mov [esi+24h] edx +
mov ecx [esi+28h] +
mov edx [eax+40h] +
cmp ecx edx +
jle loc_4463E9  +
mov edi [ebx+28h] +
test edi edi +
js loc_446430  +
add ecx edi +
mov [ebx+28h] ecx +
mov [esi+28h] edx +
mov edx [esi+20h] +
cmp edx 0FFFFFFFFh +
jz loc_4463A9  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_44640C  +
mov edx [ebx+38h] +
mov eax [eax+50h] +
mov [esp+4] edx +
mov [esp] eax +
call sub_455AC0  +
mov edx [esi+20h] +
mov eax [esi+38h] +
mov [ebx+20h] edx +
mov [ebx+38h] eax +
mov dword ptr [esi+20h] 0FFFFFFFFh +
mov dword ptr [esi+38h] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [ebx+28h] 0 +
xor edi edi +
mov ecx [esi+28h] +
jmp loc_4463E1  +
***
mov dword ptr [ebx+24h] 0 +
xor edi edi +
mov ecx [esi+24h] +
jmp loc_4463C8  +
***
jmp loc_446460  +
push ebx  +
mov eax [esp+0Ch] +
mov edx [esp+8] +
mov ecx [esp+10h] +
cmp byte ptr [eax+30h] 0Ah +
jz loc_446480  +
mov ebx [edx+1Ch] +
mov ebx [ebx+48h] +
and byte ptr [eax+33h] 7Fh +
mov [eax+28h] ebx +
test ecx ecx +
jz loc_4464B0  +
or byte ptr [eax+34h] 8 +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jz loc_4464B0  +
mov dword ptr [eax+20h] 0FFFFFFFFh +
mov ecx [eax+38h] +
mov eax [edx+1Ch] +
mov eax [eax+50h] +
mov [esp+0Ch] ecx +
mov [esp+8] eax +
pop ebx  +
jmp sub_455AC0  +
***
pop ebx  +
retn   +
***
mov edx [esp+18h+arg_4] +
mov ebx [esp+18h+arg_0] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1AEh] +
mov dword ptr [ebx+44h] 0FFFFFFFFh +
mov dword ptr [ebx+48h] 0FFFFFFFFh +
mov dword ptr [ebx+4Ch] 1 +
shr al 1 +
and eax 1 +
sub eax 1 +
mov [ebx+3Ch] eax +
mov [ebx+40h] eax +
mov eax [esp+18h+arg_C] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_10] eax +
call sub_423E30  +
mov edx [esp+18h+arg_10] +
mov dword ptr [ebx+28h] 1 +
mov [ebx+2Ch] edx +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 28h +
mov dword ptr [esp] 0FCh +
call sub_412D60  +
test eax eax +
mov ebx eax +
jz loc_446580  +
mov eax [esp+30h] +
mov dword ptr [esp+10h] 23h +
mov dword ptr [esp+0Ch] 48h +
mov dword ptr [esp+8] offset loc_439C00 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_4464C0  +
test eax eax +
jz loc_446584  +
mov dword ptr [ebx+24h] offset sub_439CD0 +
mov eax ebx +
add esp 28h +
pop ebx  +
retn   +
***
xor eax eax +
jmp loc_44657B  +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_44657B  +
***
mov edx [esp+arg_0] +
xor eax eax +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jnz locret_446687  +
movzx ecx byte ptr [edx+28h] +
and ecx 7 +
cmp cl 1 +
jnz locret_446687  +
mov eax [edx+0A0h] +
mov eax [eax+220h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+54h] +
mov ebx [esp+50h] +
mov dword ptr [esp+24h] 0 +
mov dword ptr [eax] 0 +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_4466C3  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [ebx+28h] +
and eax 7 +
cmp al 1 +
jnz loc_4466B6  +
mov dword ptr [esp+4] offset a_dynamic +
mov [esp] ebx +
call sub_40F280  +
test eax eax +
mov esi eax +
jz loc_4466B6  +
mov eax [eax+24h] +
test eax eax +
jz loc_4466B6  +
lea eax [esp+24h] +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebx +
call sub_40FBE0  +
test eax eax +
jnz loc_44671F  +
mov edx [esp+24h] +
xor eax eax +
test edx edx +
jz loc_4466BB  +
mov [esp] edx +
mov [esp+14h] eax +
call free  +
mov eax [esp+14h] +
jmp loc_4466BB  +
***
mov [esp+4] esi +
mov [esp] ebx +
call sub_42F700  +
cmp eax 0FFFFFEFFh +
jz loc_446703  +
mov edx [ebx+0A0h] +
mov edi [esp+24h] +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+1Ch] +
mov [esp+1Ch] eax +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx edx byte ptr [eax+6] +
mov ebp [eax+30h] +
mov eax edi +
mov [esp+14h] edx +
mov edx [esi+24h] +
add edx edi +
cmp edi edx +
jnb loc_4467F4  +
mov esi edi +
mov edi edx +
jmp loc_446780  +
add esi [esp+14h] +
cmp esi edi +
jnb loc_4467F0  +
lea eax [esp+28h] +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebx +
call ebp  +
mov eax [esp+28h] +
test eax eax +
jz loc_4467F0  +
cmp eax 1 +
jnz loc_446778  +
mov eax [esp+2Ch] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call sub_42B580  +
test eax eax +
mov [esp+18h] eax +
jz loc_446703  +
mov dword ptr [esp+4] 0Ch +
mov [esp] ebx +
call sub_40E140  +
test eax eax +
jz loc_446703  +
mov ecx [esp+18h] +
mov edx [esp+54h] +
mov [eax+4] ebx +
mov [eax+8] ecx +
mov ecx [edx] +
mov [eax] ecx +
mov [edx] eax +
jmp loc_446778  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
jmp loc_4466B6  +
***
jmp loc_446810  +
mov edx [esp+8] +
test edx edx +
jz loc_446834  +
mov eax [esp+10h] +
test eax eax +
jz loc_446834  +
mov eax [esp+4] +
mov ecx [eax+4] +
mov eax 1 +
cmp dword ptr [ecx+4] 5 +
jz loc_446840  +
retn   +
***
mov eax 1 +
retn   +
***
mov ecx [esp+0Ch] +
mov ecx [ecx+4] +
cmp dword ptr [ecx+4] 5 +
jnz locret_446832  +
mov eax [esp+10h] +
mov edx [edx+8Ch] +
mov eax [eax+8Ch] +
mov eax [eax+4] +
cmp [edx+4] eax +
setz al  +
movzx eax al +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+5Ch] +
mov eax [eax+8] +
mov esi eax +
mov edx eax +
shr esi 6 +
mov edi eax +
mov [esp+18h] esi +
mov ebx eax +
mov esi eax +
and dword ptr [esp+18h] 3Fh +
and edx 3Fh +
shr edi 12h +
mov [esp+28h] eax +
mov eax [esp+18h] +
shr ebx 16h +
and edi 0Fh +
and ebx 0Fh +
lea ecx [eax-1] +
mov eax 1 +
shl eax cl +
lea eax [eax+eax-2] +
mov [esp+20h] eax +
or dword ptr [esp+20h] 1 +
and esi 8000000h +
jz loc_446A85  +
lea eax [edx+1] +
mov [esp+1Ch] eax +
mov eax [esp+18h] +
sub [esp+1Ch] eax +
mov eax [esp+5Ch] +
mov esi [esp+58h] +
add esi [eax] +
cmp edi ebx +
jb loc_4468F7  +
lea eax [ebx-1] +
cmp eax 3 +
jbe loc_446AA1  +
mov dword ptr [esp+4] 1F35h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410530  +
cmp ebx 4 +
lea ecx ds:0[ebx*8] +
jz loc_446AC8  +
xor ebp ebp +
test edi edi +
jz loc_44699A  +
mov edx edi +
xor eax eax +
sub edx ebx +
mov [esp+2Ch] edi +
cmp ebx 2 +
mov edi edx +
jz loc_446960  +
cmp ebx 4 +
jz loc_446A63  +
cmp ebx 1 +
jz loc_446A55  +
mov dword ptr [esp+8] offset aGet_value +
mov dword ptr [esp+4] 1F56h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410560  +
shl eax cl +
mov ebp eax +
mov eax [esp+50h] +
mov [esp+24h] ecx +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp] esi +
call eax  +
mov ecx [esp+24h] +
or eax ebp +
mov edx edi +
add esi ebx +
sub edx ebx +
test edi edi +
jnz loc_44692B  +
mov ebp [esp+20h] +
movzx ecx byte ptr [esp+1Ch] +
mov edi [esp+2Ch] +
shl ebp cl +
not ebp  +
and ebp eax +
mov ecx [esp+28h] +
xor eax eax +
test ecx 20000000h +
jnz loc_4469DE  +
mov eax ecx +
mov ecx [esp+60h] +
shl eax 3 +
sar eax 1Fh +
lea edx ds:0[edi*8] +
add eax 3 +
mov [esp+10h] ecx +
mov ecx [esp+18h] +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
mov [esp+4] ecx +
call loc_4226C0  +
movzx ecx byte ptr [esp+1Ch] +
mov esi [esp+20h] +
and esi [esp+60h] +
mov edx [esp+58h] +
shl esi cl +
mov ecx edi +
or esi ebp +
mov ebp [esp+5Ch] +
sub ecx ebx +
add edx [ebp+0] +
mov ebp ebx +
neg ebp  +
mov [esp+18h] ebp +
mov ebp ecx +
add edx ecx +
test edi edi +
jz loc_446AFB  +
cmp ebx 2 +
mov edi edx +
mov [esp+20h] eax +
mov edx esi +
mov esi [esp+50h] +
jz loc_446B1F  +
cmp ebx 4 +
jz loc_446B40  +
cmp ebx 1 +
jz loc_446B03  +
mov dword ptr [esp+8] offset aPut_value +
mov dword ptr [esp+4] 1F20h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410560  +
shl eax cl +
mov edx eax +
movzx eax byte ptr [esi] +
or eax edx +
jmp loc_44697D  +
***
shl eax cl +
mov ebp eax +
mov eax [esp+50h] +
mov [esp+24h] ecx +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp] esi +
call eax  +
mov ecx [esp+24h] +
or eax ebp +
jmp loc_44697D  +
***
lea eax ds:0[edi*8] +
mov [esp+1Ch] eax +
mov eax [esp+18h] +
sub [esp+1Ch] eax +
sub [esp+1Ch] edx +
jmp loc_4468DD  +
***
xor edx edx +
mov eax edi +
div  ebx +
test edx edx +
jnz loc_4468F7  +
mov eax [esp+50h] +
test eax eax +
jz loc_4468F7  +
test esi esi +
jnz loc_44690B  +
jmp loc_4468F7  +
***
cmp edi 4 +
nop   +
lea esi [esi+0] +
jz loc_446AF0  +
mov dword ptr [esp+4] 1F39h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410530  +
xor ecx ecx +
jmp loc_44691B  +
***
xor ecx ecx +
jmp loc_446921  +
***
mov eax [esp+20h] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [edi] dl +
shr edx 8 +
mov ecx ebp +
add edi [esp+18h] +
sub ecx ebx +
test ebp ebp +
jz loc_446AF7  +
cmp ebx 2 +
mov ebp ecx +
jnz loc_446A27  +
mov ecx [esi+4] +
mov [esp+1Ch] edx +
mov ecx [ecx+3Ch] +
mov [esp] edx +
mov [esp+4] edi +
call ecx  +
mov edx [esp+1Ch] +
shr edx 10h +
jmp loc_446B08  +
***
mov ecx [esi+4] +
mov ecx [ecx+30h] +
mov [esp] edx +
mov [esp+4] edi +
call ecx  +
xor edx edx +
jmp loc_446B08  +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+10h] +
mov eax [edx+14h] +
and eax 2000h +
jz loc_446B80  +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [edx] +
mov esi offset a_eh_frame_0 +
mov ecx 0Ah +
mov edi edx +
cmps   +
jz loc_446B76  +
mov edi edx +
mov esi offset a_gcc_except_ta +
mov ecx 12h +
mov edx 3 +
cmps   +
pop ebx  +
pop esi  +
pop edi  +
cmovnz eax edx +
retn   +
***
push esi  +
push ebx  +
sub esp 0Ch +
mov esi [esp+0Ch+arg_0] +
mov edi [esp+0Ch+arg_4] +
mov ebx [esi+7Ch] +
test ebx ebx +
jz loc_446BE3  +
test byte ptr [ebx+17h] 2 +
jnz loc_446C10  +
mov edx [esi+28h] +
test edx edx +
jz loc_446C00  +
mov eax [ebx+28h] +
test eax eax +
jz loc_446BF0  +
cmp edx eax +
jz loc_446BE0  +
xor ebx ebx +
mov [esi+7Ch] ebx +
add esp 0Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+24h] +
cmp edx eax +
jnz loc_446BDE  +
jmp loc_446BE0  +
mov eax [ebx+28h] +
mov edx [esi+24h] +
test eax eax +
jnz loc_446BDA  +
jmp loc_446BF0  +
mov eax [ebx+8Ch] +
mov ebp [eax+7Ch] +
test ebp ebp +
jz loc_446BDE  +
mov ebx ebp +
jmp loc_446C32  +
mov eax [ebx+8Ch] +
mov ebx [eax+7Ch] +
cmp ebp ebx +
jz loc_446BDE  +
test ebx ebx +
jz loc_446BDE  +
mov ecx edi +
mov edx esi +
mov eax ebx +
call sub_439D10  +
test eax eax +
jz loc_446C21  +
test ebx ebx +
jnz loc_446BCC  +
jmp loc_446BE0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 0DCh +
mov eax [eax+4] +
test byte ptr [edx+29h] 8 +
mov [esp+0E8h+var_B0] edx +
mov [esp+0E8h+var_BC] eax +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+0E8h+var_B8] eax +
mov eax [eax+94h] +
mov [esp+0E8h+var_84] eax +
jnz loc_44718B  +
mov eax [esp+0E8h+var_B0] +
mov eax [eax+0A0h] +
mov ecx [eax+928h] +
lea edi [eax+48h] +
mov [esp+0E8h+var_AC] eax +
mov [esp+0E8h+var_88] edi +
test ecx ecx +
jnz loc_4471A0  +
mov eax [esp+0E8h+var_AC] +
mov eax [eax+68h] +
mov [esp+0E8h+var_A8] eax +
mov [esp+0E8h+var_94] eax +
mov eax [esp+0E8h+var_AC] +
mov edx [esp+0E8h+var_A8] +
mov eax [eax+78h] +
test edx edx +
mov [esp+0E8h+var_A0] eax +
jnz loc_4477D9  +
mov eax [esp+0E8h+var_A8] +
mov ebx [esp+0E8h+var_A0] +
mov esi [ebp+2Ch] +
mov edi [ebp+30h] +
lea eax [eax+eax*4] +
lea eax [ebx+eax*4] +
cmp ebx eax +
mov [esp+0E8h+var_C0] eax +
jnb loc_446FF5  +
mov [esp+0E8h+var_C4] ebp +
mov ebx [esp+0E8h+var_A0] +
mov [esp+0E8h+var_9C] 0 +
mov ebp [esp+0E8h+var_B0] +
jmp loc_446D2B  +
movzx eax byte ptr [ebx+0Ch] +
shr al 4 +
test al al +
jz loc_446D41  +
mov dword ptr [edi] 0 +
add ebx 14h +
add esi 4 +
add edi 4 +
cmp [esp+0E8h+var_C0] ebx +
jbe loc_446FF1  +
mov dword ptr [esi] 0FFFFFFFFh +
mov eax [ebp+0A0h] +
mov eax [eax+928h] +
test eax eax +
jnz loc_446D07  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_4471D0  +
mov [esp+0E8h+var_3C] offset off_47D468 +
mov edx offset off_47D468 +
mov ecx [esp+0E8h+var_C4] +
mov [edi] edx +
cmp [ecx+30h] edi +
jz loc_446D18  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_446D18  +
mov eax [ecx] +
movzx eax byte ptr [eax+1] +
mov edx eax +
and edx 18h +
cmp dl 18h +
jz loc_446D18  +
and eax 60h +
cmp al 60h +
jz loc_446D18  +
mov eax [ebx+10h] +
sub eax 1 +
cmp eax 0FFFFFEFEh +
ja loc_446DB9  +
mov eax [esp+0E8h+var_3C] +
mov eax [eax+3Ch] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_4472C0  +
cmp eax [edx+10h] +
setnz al  +
test al al +
jnz loc_446D18  +
mov eax [esp+0E8h+var_AC] +
mov edx [ebx+8] +
mov eax [eax+64h] +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E8] ebp +
mov [esp+0E8h+var_E4] eax +
call sub_42B580  +
test eax eax +
mov [esp+0E8h+var_B4] eax +
jz loc_4473C0  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax] +
movzx eax byte ptr [edx+1] +
mov ecx eax +
and ecx 18h +
cmp cl 10h +
jz loc_447360  +
and eax 60h +
jnz loc_447285  +
mov eax [esp+0E8h+var_3C] +
test byte ptr [eax+16h] 80h +
jz loc_446E35  +
movzx eax byte ptr [edx] +
and eax 3 +
cmp al 2 +
jz loc_446E35  +
mov eax [ebp+4] +
mov ecx [esp+0E8h+var_B4] +
mov eax [eax+11Ch] +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] ebp +
call eax  +
test eax eax +
jnz loc_446D18  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 4 +
jz loc_44729C  +
mov eax [esp+0E8h+var_9C] +
test eax eax +
jnz loc_446EDD  +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_2C] 0 +
mov [esp+0E8h+var_38] 0 +
mov [esp+0E8h+var_34] 0 +
add dword ptr [eax+38h] 1 +
xor eax eax +
test byte ptr [ebp+2Ch] 10h +
mov [esp+0E8h+var_30] 0 +
mov byte ptr [esp+0E8h+var_2C] 4 +
mov [esp+0E8h+var_28] 0FFFFFFF1h +
jnz loc_446EA2  +
mov eax [ebp+0] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_C4] +
lea ecx [esp+0E8h+var_38] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] offset off_47D510 +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E8] eax +
call sub_43A9A0  +
test eax eax +
jz loc_4473C0  +
mov [esp+0E8h+var_9C] 1 +
mov eax [ebx] +
mov [esp+0E8h+var_38] eax +
mov eax [ebx+4] +
mov [esp+0E8h+var_34] eax +
mov eax [ebx+8] +
mov [esp+0E8h+var_30] eax +
mov eax [ebx+0Ch] +
mov [esp+0E8h+var_2C] eax +
mov eax [ebx+10h] +
mov [esp+0E8h+var_28] eax +
mov eax [esp+0E8h+var_3C] +
mov eax [eax+3Ch] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_42F700  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_28] eax +
jz loc_4473C0  +
mov ecx [esp+0E8h+var_3C] +
mov edx [esp+0E8h+var_C4] +
mov eax [ecx+38h] +
mov edx [edx] +
add eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_A4] ecx +
mov [esp+0E8h+var_38] eax +
mov [esp+0E8h+var_98] edx +
movzx edx byte ptr [edx] +
and edx 3 +
cmp dl 2 +
jz loc_446F8C  +
mov edx [ecx+3Ch] +
add eax [edx+1Ch] +
movzx edx byte ptr [esp+0E8h+var_2C] +
mov [esp+0E8h+var_38] eax +
and edx 0Fh +
cmp dl 6 +
jz loc_4473D0  +
mov eax [esp+0E8h+var_BC] +
mov eax [eax+7Ch] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_98] eax +
mov eax [esp+0E8h+var_A4] +
mov [esp+0E8h+var_DC] eax +
lea eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_B4] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_E8] eax +
call sub_43A9A0  +
test eax eax +
jz loc_4473C0  +
cmp eax 1 +
jnz loc_446D18  +
mov eax [esp+0E8h+var_98] +
add ebx 14h +
add esi 4 +
add edi 4 +
mov [esi-4] eax +
cmp [esp+0E8h+var_C0] ebx +
ja loc_446D2B  +
mov ebp [esp+0E8h+var_C4] +
mov eax [esp+0E8h+var_B8] +
mov edi 20h +
mov edx 8 +
mov esi 0FFFFFFFFh +
mov eax [eax+174h] +
cmp byte ptr [eax+0Ah] 20h +
cmovnz edx edi +
mov edi [esp+0E8h+var_B0] +
setnz al  +
movzx eax al +
lea eax ds:4[eax*4] +
mov [esp+0E8h+var_98] eax +
mov eax [edi+0A0h] +
mov ebx [edi+64h] +
mov [esp+0E8h+var_C0] edx +
mov edx 0FFh +
cmovnz edx esi +
mov eax [eax+218h] +
test ebx ebx +
mov [esp+0E8h+var_74] edx +
mov [esp+0E8h+var_8C] eax +
jz loc_44718B  +
mov eax [esp+0E8h+var_98] +
mov [esp+0E8h+var_C4] ebp +
mov ebp ebx +
mov [esp+0E8h+var_6C] 0 +
mov [esp+0E8h+var_70] eax +
nop   +
lea esi [esi+0] +
test byte ptr [ebp+18h] 2 +
jz loc_447180  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_4472D0  +
mov eax [ebp+14h] +
test ah 1 +
jz loc_447180  +
mov edx [ebp+24h] +
test edx edx +
jnz loc_4470A9  +
test al 4 +
jz loc_447180  +
test eax 100000h +
jnz loc_447180  +
mov ecx [ebp+8Ch] +
mov ecx [ecx+30h] +
test ecx ecx +
jz loc_447EB4  +
mov edi [esp+0E8h+var_B8] +
mov [esp+0E8h+var_40] ecx +
test byte ptr [edi+1AEh] 40h +
jz loc_4470E8  +
mov ebx [ebp+28h] +
test ebx ebx +
jz loc_4470E8  +
cmp edx ebx +
ja loc_4477B0  +
test al 4 +
jnz loc_4473F4  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+12Ch] +
test eax eax +
jz loc_447124  +
mov esi [esp+0E8h+var_C4] +
mov ecx [esp+0E8h+var_40] +
mov edi [esp+0E8h+var_BC] +
mov edx [esi] +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E8] edi +
mov [esp+0E8h+var_E4] edx +
call eax  +
test eax eax +
jnz loc_447180  +
movzx eax word ptr [ebp+18h] +
shr ax 7 +
and eax 7 +
cmp eax 2 +
jz loc_4478E3  +
jle loc_44782D  +
cmp eax 3 +
jz loc_44777A  +
cmp eax 6 +
jnz loc_447910  +
mov eax [esp+0E8h+var_C4] +
mov edx [esp+0E8h+var_40] +
mov eax [eax] +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_44F0F0  +
test eax eax +
jz loc_4473C0  +
lea esi [esi+0] +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_447070  +
add esp 0DCh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0E8h+var_B8] +
xor edx edx +
mov [esp+0E8h+var_94] 0 +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+5] +
mov eax [esp+0E8h+var_AC] +
mov eax [eax+60h] +
div  ecx +
mov [esp+0E8h+var_A8] eax +
jmp loc_446CBA  +
cmp eax 0FFFFFFF1h +
jz loc_447270  +
cmp eax 0FFFFFFF2h +
jnz loc_4471F3  +
mov [esp+0E8h+var_3C] offset off_47D3C0 +
mov edx offset off_47D3C0 +
jmp loc_446D5C  +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] ebp +
call sub_42E1E0  +
test eax eax +
mov [esp+0E8h+var_3C] eax +
jz loc_446D12  +
movzx ecx word ptr [eax+18h] +
mov edx eax +
and cx 380h +
cmp cx 100h +
jnz loc_446D5C  +
movzx ecx byte ptr [ebx+0Ch] +
and ecx 0Fh +
cmp cl 3 +
jz loc_446D5C  +
mov eax [eax+8Ch] +
mov edx [ebx] +
mov eax [eax+88h] +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] eax +
lea eax [esp+0E8h+var_3C] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_4582D0  +
mov [ebx] eax +
mov edx [esp+0E8h+var_3C] +
jmp loc_446D5C  +
mov [esp+0E8h+var_3C] offset off_47D510 +
mov edx offset off_47D510 +
jmp loc_446D5C  +
cmp al 40h +
jz loc_446E17  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 4 +
jnz loc_446E44  +
test byte ptr [ebp+2Ch] 10h +
jnz loc_446D18  +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_9C] 1 +
add dword ptr [eax+38h] 1 +
jmp loc_446EDD  +
mov ecx [esp+0E8h+var_BC] +
cmp eax [ecx+68h] +
setnz al  +
jmp loc_446DB1  +
mov edx [ebp+14h] +
mov ecx edx +
mov eax edx +
and ecx 2100000h +
cmp ecx 2000000h +
jnz loc_447091  +
mov eax [ebp+8Ch] +
mov ebx [ebp+3Ch] +
mov eax [eax+20h] +
cmp [esp+0E8h+var_A8] eax +
jbe loc_447732  +
mov edi [esp+0E8h+var_B0] +
mov ecx [edi+0A0h] +
lea edi ds:0[eax*4] +
mov esi [ecx+928h] +
test esi esi +
jnz loc_447720  +
mov esi [esp+0E8h+var_A0] +
lea eax [eax+eax*4] +
lea ecx [esi+eax*4] +
movzx eax byte ptr [ecx+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_447F60  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax+2Ch] +
mov esi [eax+edi] +
mov eax edx +
cmp esi 0FFFFFFFFh +
jz loc_448173  +
mov edx [ebx+8Ch] +
mov [edx+20h] esi +
jmp loc_447091  +
mov eax [edx+20h] +
mov ecx [esp+0E8h+var_B4] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E4] ecx +
call sub_4123C0  +
test eax eax +
jz loc_446D18  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax] +
movzx eax byte ptr [edx+1] +
jmp loc_446DF7  +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E8] offset aErrorBSizeOfSe +
mov [esp+0E8h+var_E4] eax +
call off_47D664  +
mov [esp+0E8h+var_E8] 14h +
call sub_4105E0  +
nop   +
xor eax eax +
add esp 0DCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+0E8h+var_98] +
mov edx [ecx+1Ch] +
mov edx [edx+0C8h] +
test edx edx +
jz loc_448098  +
sub eax [edx+1Ch] +
mov [esp+0E8h+var_38] eax +
jmp loc_446F8C  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax+1Ch] +
mov eax [eax+18h] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_43F980  +
test eax eax +
mov [esp+0E8h+var_7C] eax +
jz loc_44807E  +
mov edx [ebp+24h] +
cmp [esp+0E8h+var_98] edx +
jnb loc_447484  +
mov eax [ebp+0] +
mov edi offset a_ctors +
mov ecx 6 +
mov esi eax +
cmps   +
jnz loc_447880  +
mov ecx [ebp+3Ch] +
mov edi offset a_init_array +
mov esi [ecx] +
mov ecx 0Ch +
cmps   +
jnz loc_447880  +
movzx eax byte ptr [eax+6] +
cmp al 2Eh +
jz loc_44746D  +
test al al +
jnz loc_447484  +
mov eax [esp+0E8h+var_98] +
imul eax [ebp+4Ch] +
cmp edx eax +
jnz loc_44739A  +
or dword ptr [ebp+14h] 4000000h +
movzx eax word ptr [ebp+18h] +
shr ax 7 +
and eax 7 +
lea ecx [eax-1] +
cmp ecx 5 +
ja loc_4474B0  +
mov eax 1 +
shl eax cl +
test al 25h +
jz loc_4474B0  +
mov [esp+0E8h+var_A4] 0FFFFFFFFh +
jmp loc_4474E5  +
mov eax [ebp+94h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+114h] +
test eax eax +
jz loc_4474D2  +
mov [esp+0E8h+var_E8] ebp +
call eax  +
test eax eax +
jnz loc_4474A2  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+118h] +
mov [esp+0E8h+var_E8] ebp +
call eax  +
mov [esp+0E8h+var_A4] eax +
mov edi [esp+0E8h+var_B8] +
mov eax [ebp+4Ch] +
mov ecx [esp+0E8h+var_7C] +
mov esi [esp+0E8h+var_A4] +
mov edx [edi+174h] +
lea eax [eax+eax*2] +
shl eax 2 +
mov edi ecx +
movzx edx byte ptr [edx+9] +
imul eax edx +
add eax ecx +
mov ebx eax +
mov [esp+0E8h+var_B4] eax +
mov eax esi +
and eax 1 +
mov [esp+0E8h+var_90] eax +
mov eax esi +
and eax 2 +
cmp ecx ebx +
mov [esp+0E8h+var_80] eax +
jnb loc_447995  +
mov [esp+0E8h+var_9C] ebp +
jmp loc_4475D1  +
mov eax [esp+0E8h+var_B0] +
mov eax [eax+0A0h] +
mov esi [eax+928h] +
mov eax [esp+0E8h+var_C4] +
test esi esi +
mov eax [eax+30h] +
lea esi [eax+ebx*4] +
mov eax [esi] +
jz loc_44755C  +
test eax eax +
jz loc_4475EB  +
mov ecx [esp+0E8h+var_A0] +
lea edx [ebx+ebx*4] +
lea edx [ecx+edx*4] +
movzx ecx byte ptr [edx+0Ch] +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_88] +
mov [esp+0E8h+var_E0] edx +
mov ebp ecx +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B0] +
and ebp 0Fh +
mov [esp+0E8h+var_E8] eax +
call sub_42BAD0  +
mov [esp+0E8h+var_3C] eax +
lea eax [ebp-8] +
cmp eax 1 +
jbe loc_44764E  +
test esi esi +
jz loc_4475C4  +
cmp [esp+0E8h+var_A4] 0FFFFFFFFh +
jz loc_4475C4  +
mov ebx [esi] +
test ebx ebx +
jz loc_4475C4  +
cmp ebx offset off_47D510 +
jz loc_4475C4  +
cmp dword ptr [ebx+3Ch] offset off_47D510 +
jz loc_447D22  +
add edi 0Ch +
cmp [esp+0E8h+var_B4] edi +
jbe loc_447991  +
mov edx [edi+4] +
movzx ecx byte ptr [esp+0E8h+var_C0] +
mov ebx edx +
shr ebx cl +
test ebx ebx +
jz loc_4475C4  +
cmp [esp+0E8h+var_A8] ebx +
ja loc_447534  +
mov esi [esp+0E8h+var_8C] +
mov eax ebx +
sub eax [esp+0E8h+var_94] +
mov eax [esi+eax*4] +
test eax eax +
jnz loc_447604  +
jmp loc_4480F9  +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_447601  +
test byte ptr [eax+0Dh] 1 +
movzx ebp byte ptr [eax+30h] +
jz loc_447626  +
sub edx 3 +
cmp dl 1 +
jbe loc_4478B0  +
movzx esi byte ptr [eax+0Ch] +
lea edx [eax+14h] +
lea ecx [esi-3] +
xor esi esi +
cmp cl 1 +
cmovbe esi edx +
mov eax [eax+4] +
mov [esp+0E8h+var_3C] eax +
lea eax [ebp-8] +
cmp eax 1 +
ja loc_44759E  +
mov ecx [esp+0E8h+var_C4] +
mov eax [ecx] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_44759E  +
xor eax eax +
cmp ebp 9 +
mov esi [esp+0E8h+var_9C] +
setz al  +
mov [esp+0E8h+var_D8] eax +
mov eax [esp+0E8h+var_A8] +
lea edx [esp+0E8h+var_3C] +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_A0] +
mov [esp+0E8h+var_E0] eax +
mov eax [esi+3Ch] +
mov eax [eax+1Ch] +
add eax [esi+38h] +
add eax [edi] +
mov [esp+0E8h+var_E8] ecx +
mov ecx [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E4] eax +
lea eax [esp+0E8h+var_38] +
call sub_43C280  +
test eax eax +
jz loc_4473C0  +
cmp [esp+0E8h+var_A8] ebx +
mov esi [esp+0E8h+var_38] +
jbe loc_447F83  +
mov ecx [esp+0E8h+var_A0] +
lea eax [ebx+ebx*4] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax+0Ch] +
shr dl 4 +
test dl dl +
jz loc_44825B  +
mov eax [esp+0E8h+var_B0] +
xor ebp ebp +
mov eax [eax+0A0h] +
mov ecx [eax+928h] +
test ecx ecx +
jnz loc_447F91  +
mov [esp+0E8h+var_E4] 1DE1h +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_410530  +
mov eax [esp+0E8h+var_B0] +
mov eax [eax+0A0h] +
jmp loc_447F91  +
mov esi [esp+0E8h+var_C4] +
mov ecx [esi+30h] +
mov ecx [ecx+eax*4] +
test ecx ecx +
jnz loc_44731E  +
mov edi [esp+0E8h+var_8C] +
sub eax [esp+0E8h+var_94] +
mov eax [edi+eax*4] +
movzx edi byte ptr [eax+0Ch] +
lea ecx [edi-6] +
cmp cl 1 +
ja loc_44775F  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx esi byte ptr [eax+0Ch] +
lea ecx [esi-6] +
cmp cl 1 +
jbe loc_447750  +
mov dword ptr [eax+1Ch] 0FFFFFFFEh +
mov eax [ebx+8Ch] +
mov dword ptr [eax+20h] 0FFFFFFFEh +
mov eax edx +
jmp loc_447091  +
mov eax [esp+0E8h+var_C4] +
mov edx [esp+0E8h+var_40] +
mov eax [eax] +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_44F370  +
test eax eax +
jnz loc_447180  +
jmp loc_4473C0  +
mov edi [esp+0E8h+var_C4] +
mov eax [edi+14h] +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] eax +
call memcpy  +
mov eax [edi+14h] +
mov [esp+0E8h+var_40] eax +
mov eax [ebp+14h] +
jmp loc_4470E8  +
test eax eax +
jnz loc_446CD1  +
mov eax [ebp+28h] +
mov ecx [ebp+24h] +
mov edx [ebp+20h] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_D8] eax +
mov eax [esp+0E8h+var_A8] +
mov [esp+0E8h+var_D0] ecx +
mov [esp+0E8h+var_D4] edx +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_88] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_42B780  +
test eax eax +
mov [esp+0E8h+var_A0] eax +
jnz loc_446CD1  +
xor eax eax +
jmp loc_4473C2  +
cmp eax 1 +
jnz loc_447910  +
mov eax [esp+0E8h+var_40] +
mov [esp+0E8h+var_D8] eax +
mov eax [ebp+8Ch] +
mov [esp+0E8h+var_E0] ebp +
add eax 88h +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_C4] +
mov eax [eax] +
mov eax [eax+1Ch] +
sub eax 0FFFFFF80h +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_459090  +
test eax eax +
jnz loc_447180  +
jmp loc_4473C0  +
mov edi offset a_dtors +
mov ecx 6 +
mov esi eax +
cmps   +
jnz loc_447484  +
mov ecx [ebp+3Ch] +
mov edi offset a_fini_array +
mov esi [ecx] +
mov ecx 0Ch +
cmps   +
jnz loc_447484  +
jmp loc_447461  +
mov edx [eax+14h] +
test byte ptr [edx+16h] 10h +
jnz loc_447626  +
mov edx [edx+94h] +
test edx edx +
jz loc_447626  +
test byte ptr [edx+2Ah] 20h +
jz loc_447626  +
mov byte ptr [eax+0Ch] 1 +
xor esi esi +
mov [eax+14h] edx +
jmp loc_447638  +
mov eax [ebp+8Ch] +
mov eax [eax+88h] +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_458050  +
test eax eax +
jnz loc_447180  +
jmp loc_4473C0  +
mov eax [ebp+14h] +
test ah 80h +
jnz loc_447180  +
xor edi edi +
test eax 4000000h +
mov esi [ebp+38h] +
mov ebx [ebp+24h] +
jz loc_447FE1  +
sub ebx [esp+0E8h+var_98] +
mov eax ebp +
mov ebp ebx +
mov ebx eax +
jmp loc_447954  +
test ebp ebp +
jz loc_448254  +
add esi [esp+0E8h+var_70] +
adc edi [esp+0E8h+var_6C] +
sub ebp [esp+0E8h+var_98] +
mov eax [ebx+3Ch] +
mov [esp+0E8h+var_DC] esi +
mov [esp+0E8h+var_D8] edi +
mov ecx eax +
mov eax [esp+0E8h+var_98] +
mov [esp+0E8h+var_E4] ecx +
mov ecx [esp+0E8h+var_BC] +
mov [esp+0E8h+var_D4] eax +
mov eax [esp+0E8h+var_40] +
mov [esp+0E8h+var_E8] ecx +
add eax ebp +
mov [esp+0E8h+var_E0] eax +
call sub_40F990  +
test eax eax +
jnz loc_447940  +
xor eax eax +
jmp loc_4473C2  +
mov ebp [esp+0E8h+var_9C] +
mov eax [esp+0E8h+var_C4] +
mov edi [esp+0E8h+var_A0] +
mov edx [eax+30h] +
mov eax [eax] +
mov [esp+0E8h+var_D0] edi +
mov edi [esp+0E8h+var_7C] +
mov [esp+0E8h+var_DC] ebp +
mov [esp+0E8h+var_CC] edx +
mov edx [esp+0E8h+var_40] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_D4] edi +
mov edi [esp+0E8h+var_B0] +
mov [esp+0E8h+var_D8] edx +
mov [esp+0E8h+var_E8] eax +
mov eax [esp+0E8h+var_84] +
mov [esp+0E8h+var_E0] edi +
call eax  +
test eax eax +
jz loc_4473C0  +
cmp eax 2 +
mov eax [esp+0E8h+var_C4] +
mov ecx [eax] +
movzx edi byte ptr [ecx] +
jz loc_448090  +
and edi 3 +
mov eax edi +
cmp al 2 +
jz loc_447A07  +
cmp byte ptr [ecx+2] 0 +
jns loc_4470F0  +
mov eax [ebp+8Ch] +
mov ebx eax +
mov [esp+0E8h+var_64] eax +
mov eax [ebp+3Ch] +
mov [esp+0E8h+var_80] eax +
mov eax [eax+8Ch] +
mov esi eax +
mov [esp+0E8h+var_50] eax +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
mov edx eax +
mov byte ptr [esp+0E8h+var_90] al +
mov [esp+0E8h+var_B4] eax +
mov eax [ebp+4Ch] +
lea eax [eax+eax*2] +
shl eax 2 +
imul eax edx +
mov edx [esi+40h] +
add eax [esp+0E8h+var_7C] +
mov [esp+0E8h+var_A4] eax +
mov eax [esi+48h] +
mov esi [ebx+3Ch] +
lea eax [eax+edx*4] +
test esi esi +
mov [esp+0E8h+var_60] eax +
jz loc_448269  +
mov ebx [esi+28h] +
test ebx ebx +
jnz loc_447FCA  +
add ebx [esp+0E8h+var_7C] +
mov [esp+0E8h+var_9C] ebx +
mov eax [ebp+38h] +
mov [esp+0E8h+var_B4] eax +
mov eax edi +
cmp al 2 +
jz loc_447A9E  +
mov eax [esp+0E8h+var_80] +
mov eax [eax+1Ch] +
add [esp+0E8h+var_B4] eax +
mov eax [esp+0E8h+var_A4] +
mov edi [esp+0E8h+var_7C] +
cmp edi eax +
jnb loc_4482CC  +
mov esi [esp+0E8h+var_60] +
movzx eax byte ptr [esp+0E8h+var_90] +
mov [esp+0E8h+var_68] 0 +
mov ebx [esp+0E8h+var_C4] +
mov [esp+0E8h+var_5C] 0 +
mov [esp+0E8h+var_90] esi +
mov esi edi +
xor edi edi +
jmp loc_447B14  +
mov eax [esp+0E8h+var_B4] +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov [esi] eax +
add esi 0Ch +
add edi 1 +
cmp [esp+0E8h+var_A4] esi +
jbe loc_447EED  +
mov eax [esp+0E8h+var_B8] +
mov ecx [ebx] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
cmp eax edi +
jz loc_447C44  +
cmp esi [esp+0E8h+var_9C] +
jz loc_4482EF  +
mov eax [esi] +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_438D70  +
cmp eax 0FFFFFFFDh +
mov [esi] eax +
ja loc_447AE0  +
mov edx [ebx] +
add eax [ebp+38h] +
mov [esi] eax +
movzx edx byte ptr [edx] +
mov ecx eax +
mov [esp+0E8h+var_B4] eax +
and edx 3 +
cmp dl 2 +
jz loc_447B6B  +
mov eax [ebp+3Ch] +
add ecx [eax+1Ch] +
mov [esi] ecx +
mov [esp+0E8h+var_B4] ecx +
mov eax [esi+4] +
movzx ecx byte ptr [esp+0E8h+var_C0] +
shr eax cl +
test eax eax +
jz loc_447AF4  +
mov ecx [esp+0E8h+var_B0] +
cmp [esp+0E8h+var_A8] eax +
mov edx [ecx+0A0h] +
jbe loc_447C50  +
cmp dword ptr [edx+928h] 0 +
lea ecx ds:0[eax*4] +
mov [esp+0E8h+var_80] ecx +
jz loc_447BB3  +
mov ecx [ebx+30h] +
mov ecx [ecx+eax*4] +
test ecx ecx +
jz loc_447C50  +
mov edx [esp+0E8h+var_90] +
lea eax [eax+eax*4] +
mov dword ptr [edx] 0 +
mov edx [esp+0E8h+var_A0] +
lea eax [edx+eax*4] +
mov edx [eax] +
mov [esp+0E8h+var_38] edx +
mov edx [eax+4] +
mov [esp+0E8h+var_34] edx +
mov ecx [eax+8] +
mov [esp+0E8h+var_30] ecx +
mov edx [eax+0Ch] +
mov [esp+0E8h+var_2C] edx +
mov eax [eax+10h] +
mov edx [esp+0E8h+var_80] +
mov [esp+0E8h+var_28] eax +
mov eax [ebx+30h] +
mov eax [eax+edx] +
mov [esp+0E8h+var_78] eax +
movzx eax byte ptr [esp+0E8h+var_2C] +
and eax 0Fh +
cmp al 3 +
jz loc_447CB4  +
mov eax [ebx+2Ch] +
mov edx [esp+0E8h+var_80] +
mov eax [eax+edx] +
cmp eax 0FFFFFFFFh +
jz loc_447D77  +
movzx ecx byte ptr [esp+0E8h+var_C0] +
shl eax cl +
mov edx [esp+0E8h+var_74] +
and edx [esi+4] +
or edx eax +
mov [esi+4] edx +
jmp loc_447AF4  +
add [esp+0E8h+var_90] 4 +
xor edi edi +
jmp loc_447B1C  +
mov edx [edx+218h] +
sub eax [esp+0E8h+var_94] +
mov eax [edx+eax*4] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
ja loc_447C7F  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_447C70  +
mov edx [eax+1Ch] +
test edx edx +
js loc_447CA2  +
mov [esp+0E8h+var_E4] 281Ch +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
mov [esp+0E8h+var_80] eax +
call sub_410530  +
mov eax [esp+0E8h+var_80] +
mov ecx [esp+0E8h+var_90] +
mov dword ptr [eax+1Ch] 0FFFFFFFEh +
mov [ecx] eax +
jmp loc_447AF4  +
cmp [esp+0E8h+var_78] offset off_47D510 +
jz loc_4480F2  +
mov eax [esp+0E8h+var_78] +
test eax eax +
jz loc_4482B9  +
mov ecx [eax+94h] +
test ecx ecx +
jz loc_4482B9  +
mov eax [esp+0E8h+var_78] +
mov edx [eax+3Ch] +
cmp edx offset off_47D510 +
jz loc_4480D2  +
mov eax [edx+88h] +
test eax eax +
jz loc_448148  +
movzx ecx byte ptr [esp+0E8h+var_C0] +
shl eax cl +
mov edx [esp+0E8h+var_68] +
test edx edx +
jz loc_447C33  +
mov ecx [esp+0E8h+var_78] +
mov edx [ecx+38h] +
add [esi+8] edx +
jmp loc_447C33  +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 100h +
jz loc_4475C4  +
cmp ax 200h +
jz loc_4475C4  +
mov edx [esp+0E8h+var_90] +
test edx edx +
jnz loc_448276  +
mov eax [esp+0E8h+var_80] +
test eax eax +
jz loc_4475C4  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax] +
mov [esp+0E8h+var_E8] ebx +
mov [esp+0E8h+var_E4] eax +
call sub_446BB0  +
test eax eax +
jz loc_4475C4  +
mov [esi] eax +
jmp loc_4475C4  +
mov eax [ebx] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jz loc_4482DC  +
mov eax [esp+0E8h+var_AC] +
mov eax [eax+64h] +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_42B580  +
test eax eax +
mov [esp+0E8h+var_58] eax +
jz loc_4473C0  +
mov eax [esp+0E8h+var_78] +
mov edx [esp+0E8h+var_BC] +
mov ecx [eax+3Ch] +
mov [esp+0E8h+var_E8] edx +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_54] ecx +
call sub_42F700  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_28] eax +
jz loc_4473C0  +
mov eax [esp+0E8h+var_78] +
mov ecx [ebx] +
mov eax [eax+38h] +
add eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_4C] ecx +
mov [esp+0E8h+var_38] eax +
movzx edx byte ptr [ecx] +
and edx 3 +
cmp dl 2 +
jz loc_447E4F  +
mov ecx [esp+0E8h+var_54] +
add eax [ecx+1Ch] +
mov edx eax +
mov [esp+0E8h+var_38] eax +
movzx eax byte ptr [esp+0E8h+var_2C] +
and eax 0Fh +
cmp al 6 +
jnz loc_447E4F  +
mov eax [esp+0E8h+var_4C] +
mov eax [eax+1Ch] +
mov eax [eax+0C8h] +
test eax eax +
jz loc_448345  +
sub edx [eax+1Ch] +
mov [esp+0E8h+var_38] edx +
mov eax [esp+0E8h+var_BC] +
mov edx [eax+7Ch] +
mov eax [esp+0E8h+var_78] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_E8] ebx +
mov [esp+0E8h+var_54] edx +
mov [esp+0E8h+var_DC] eax +
lea eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_58] +
mov [esp+0E8h+var_E4] eax +
call sub_43A9A0  +
test eax eax +
jz loc_4473C0  +
cmp eax 1 +
jnz loc_448329  +
mov eax [ebx+2Ch] +
mov edx [esp+0E8h+var_54] +
mov ecx [esp+0E8h+var_80] +
mov [eax+ecx] edx +
mov eax edx +
jmp loc_447C2C  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax+14h] +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_40] eax +
lea eax [esp+0E8h+var_40] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_414B50  +
test eax eax +
jz loc_4473C0  +
mov eax [ebp+14h] +
jmp loc_4470E8  +
mov eax [esp+0E8h+var_64] +
mov esi [eax+3Ch] +
test esi esi +
jz loc_447F06  +
mov ecx [esi+18h] +
test ecx ecx +
jnz loc_448018  +
mov eax [esp+0E8h+var_64] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_4470F0  +
mov edx [eax+18h] +
test edx edx +
jz loc_4470F0  +
mov edi [esp+0E8h+var_B8] +
mov edx [edi+0F0h] +
mov edi [esp+0E8h+var_5C] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_D8] edi +
mov edi [esp+0E8h+var_7C] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_DC] edi +
call edx  +
test eax eax +
jnz loc_4470F0  +
xor eax eax +
jmp loc_4473C2  +
mov esi [esp+0E8h+var_C4] +
mov eax [ebx+8Ch] +
mov ecx [esi+30h] +
mov ecx [ecx+edi] +
mov ecx [ecx+3Ch] +
mov ecx [ecx+88h] +
mov [eax+20h] ecx +
mov eax edx +
jmp loc_447091  +
mov eax [esp+0E8h+var_B0] +
mov ebp [esp+0E8h+var_A8] +
mov eax [eax+0A0h] +
mov eax [eax+218h] +
sub ebx ebp +
mov eax [eax+ebx*4] +
movzx ebx byte ptr [eax+0Ch] +
lea edx [ebx-6] +
cmp dl 1 +
ja loc_447FB7  +
mov eax [eax+14h] +
movzx ebx byte ptr [eax+0Ch] +
lea edx [ebx-6] +
cmp dl 1 +
jbe loc_447FA8  +
mov byte ptr [eax+0Ch] 3 +
mov [eax+18h] esi +
mov dword ptr [eax+14h] offset off_47D510 +
jmp loc_4475C4  +
mov eax [esi+18h] +
xor edx edx +
div  ebx +
imul eax [esp+0E8h+var_B4] +
lea ebx [eax+eax*2] +
shl ebx 2 +
jmp loc_447A7E  +
mov eax [ebp+3Ch] +
mov edx [esp+0E8h+var_40] +
mov [esp+0E8h+var_D4] ebx +
mov [esp+0E8h+var_DC] esi +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_D8] edi +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E8] eax +
call sub_40F990  +
test eax eax +
jnz loc_447180  +
jmp loc_4473C0  +
mov edi [esp+0E8h+var_60] +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+0F0h] +
mov [esp+0E8h+var_D8] edi +
mov edi [esp+0E8h+var_7C] +
mov [esp+0E8h+var_E0] esi +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_DC] edi +
mov edi [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] edi +
call eax  +
test eax eax +
jz loc_4473C0  +
mov ecx [esi+28h] +
xor eax eax +
test ecx ecx +
jz loc_44805E  +
mov eax [esi+18h] +
xor edx edx +
div  ecx +
mov edi [esp+0E8h+var_B8] +
mov edx [edi+174h] +
movzx edx byte ptr [edx+9] +
lea edx [edx+edx*2] +
shl edx 2 +
imul edx eax +
add [esp+0E8h+var_7C] edx +
jmp loc_447F06  +
mov edi [ebp+4Ch] +
test edi edi +
jz loc_44742A  +
xor eax eax +
jmp loc_4473C2  +
and edi 3 +
jmp loc_447A07  +
mov [esp+0E8h+var_E4] 2656h +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_410530  +
mov ecx [esp+0E8h+var_C4] +
mov eax [esp+0E8h+var_38] +
mov edx [ecx] +
mov ecx [esp+0E8h+var_3C] +
mov edx [edx+1Ch] +
mov [esp+0E8h+var_A4] ecx +
mov edx [edx+0C8h] +
jmp loc_4473E5  +
mov eax [eax+7Ch] +
test eax eax +
jz loc_4480F2  +
mov edx [eax+3Ch] +
test edx edx +
jz loc_4480F2  +
mov eax [edx+1Ch] +
sub [esi+8] eax +
cmp edx offset off_47D510 +
jnz loc_447CEF  +
xor eax eax +
jmp loc_447D04  +
lea esi [esp+0E8h+var_38] +
mov ebx [esp+0E8h+var_9C] +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] offset a08lx_2 +
mov [esp+0E8h+var_E8] esi +
call sprintf  +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_DC] esi +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E8] offset aErrorBContains +
mov [esp+0E8h+var_E4] eax +
call off_47D664  +
mov [esp+0E8h+var_E8] 11h +
call sub_4105E0  +
xor eax eax +
jmp loc_4473C2  +
mov eax [edx+1Ch] +
add [esi+8] eax +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_426A90  +
mov edx [eax+1Ch] +
sub [esi+8] edx +
mov eax [eax+88h] +
jmp loc_447CFD  +
mov eax [ecx] +
mov esi [esp+0E8h+var_C4] +
mov [esp+0E8h+var_38] eax +
mov eax [ecx+4] +
mov [esp+0E8h+var_34] eax +
mov eax [ecx+8] +
mov [esp+0E8h+var_30] eax +
mov edx [ecx+0Ch] +
mov [esp+0E8h+var_2C] edx +
mov edx [ecx+10h] +
mov ecx [esp+0E8h+var_AC] +
mov [esp+0E8h+var_28] edx +
mov edx [esi+30h] +
mov edx [edx+edi] +
mov esi [edx+3Ch] +
mov edx [ecx+64h] +
mov ecx [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E0] eax +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] ecx +
call sub_42B580  +
test eax eax +
mov [esp+0E8h+var_B4] eax +
jz loc_4473C0  +
mov [esp+0E8h+var_E4] esi +
mov esi [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] esi +
call sub_42F700  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_28] eax +
jz loc_4473C0  +
mov eax [ebp+38h] +
add [esp+0E8h+var_38] eax +
lea eax [esp+0E8h+var_38] +
mov esi [esi+7Ch] +
mov edx [esp+0E8h+var_B4] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] ebp +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] eax +
call sub_43A9A0  +
test eax eax +
jz loc_4473C0  +
cmp eax 1 +
jnz loc_448370  +
mov eax [esp+0E8h+var_C4] +
add edi [eax+2Ch] +
mov eax [ebp+14h] +
mov [edi] esi +
jmp loc_44734C  +
mov ebp ebx +
jmp loc_447180  +
mov dword ptr [eax+10h] 0FFFFFFF1h +
mov [eax] esi +
jmp loc_4475C4  +
mov eax [esp+0E8h+var_7C] +
mov [esp+0E8h+var_9C] eax +
jmp loc_447A86  +
mov eax [esp+0E8h+var_C4] +
mov edx [ebx+94h] +
mov ecx [esp+0E8h+var_B0] +
mov eax [eax] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+0E8h+var_D4] edx +
mov edx [esp+0E8h+var_3C] +
mov [esp+0E8h+var_DC] ecx +
mov ecx [esp+0E8h+var_9C] +
mov [esp+0E8h+var_D8] ebx +
mov [esp+0E8h+var_E8] offset aXSReferencedIn +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E0] ecx +
call eax  +
jmp loc_447D4A  +
mov [esp+0E8h+var_E8] 11h +
call sub_4105E0  +
xor eax eax +
jmp loc_4473C2  +
mov [esp+0E8h+var_5C] 0 +
jmp loc_447EF7  +
mov [esp+0E8h+var_E8] 5 +
call sub_4105E0  +
xor eax eax +
jmp loc_4473C2  +
mov eax [esp+0E8h+var_50] +
mov edx [eax+50h] +
mov eax [eax+58h] +
lea eax [eax+edx*4] +
mov edx eax +
mov [esp+0E8h+var_90] eax +
mov eax [esp+0E8h+var_B8] +
mov [esp+0E8h+var_5C] edx +
movzx eax byte ptr [eax+1ACh] +
shr al 6 +
and eax 1 +
mov [esp+0E8h+var_68] eax +
jmp loc_447B26  +
mov [esp+0E8h+var_E0] offset aElf_link_input +
mov [esp+0E8h+var_E4] 2893h +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_410560  +
mov [esp+0E8h+var_E4] 2884h +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_410530  +
mov eax [ebx] +
mov edx [esp+0E8h+var_38] +
mov eax [eax+1Ch] +
mov eax [eax+0C8h] +
jmp loc_447E45  +
mov [esp+0E8h+var_E0] offset aElf_link_input +
mov [esp+0E8h+var_E4] 26B6h +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_410560  +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0FCh +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1C0] eax +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_4483D0  +
xor ebx ebx +
add esp 0FCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+1F4h+var_E0] +
movzx edx byte ptr [ecx] +
test dl 1 +
jnz loc_448DD9  +
mov ecx [eax+30h] +
and edx 3 +
mov eax [eax+38h] +
cmp dl 2 +
mov [esp+1F4h+var_1C4] 1 +
mov [esp+1F4h+var_19C] ecx +
mov [esp+1F4h+var_198] eax +
jz loc_448415  +
mov eax [esp+1F4h+var_E0] +
movsx eax byte ptr [eax+2] +
mov [esp+1F4h+var_1C4] eax +
shr [esp+1F4h+var_1C4] 1Fh +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_140] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_13C] eax +
call sub_4558C0  +
test eax eax +
mov [esp+1F4h+var_138] eax +
jz loc_4483BE  +
mov eax [esp+1F4h+var_19C] +
test eax eax +
jnz loc_448F8A  +
mov [esp+1F4h+var_134] 0 +
mov [esp+1F4h+var_130] 0 +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_12C] 0 +
mov [esp+1F4h+var_128] 0 +
mov [esp+1F4h+var_124] 0 +
mov eax [eax+4] +
mov [esp+1F4h+var_120] 0 +
mov [esp+1F4h+var_11C] 0 +
mov [esp+1F4h+var_118] 0 +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_114] 0 +
mov [esp+1F4h+var_110] 0 +
mov [esp+1F4h+var_10C] 0 +
mov ebp [eax+188h] +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_108] 0 +
mov [esp+1F4h+var_1BC] 0 +
mov ebx [eax+64h] +
test ebx ebx +
jz loc_449B4F  +
mov [esp+1F4h+var_1A4] 0 +
lea esi [esi+0] +
test ebp ebp +
mov esi [ebx] +
jz loc_448526  +
mov [esp+1F4h+var_1F0] ebp +
mov [esp+1F4h+var_1F4] esi +
call strcmp  +
test eax eax +
jz loc_448534  +
mov edi offset a_gnu_attribute +
mov ecx 10h +
cmps   +
jnz loc_44857E  +
mov eax [ebx+0A0h] +
test eax eax +
jnz loc_448546  +
jmp loc_44855C  +
mov eax [eax] +
test eax eax +
jz loc_44855C  +
cmp dword ptr [eax+4] 1 +
jnz loc_448540  +
mov edx [eax+10h] +
mov eax [eax] +
and dword ptr [edx+14h] 0FFFFFEFFh +
test eax eax +
jnz loc_448546  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_4561D0  +
test eax eax +
mov [esp+1F4h+var_1BC] eax +
jnz loc_448C40  +
or dword ptr [ebx+14h] 8000h +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_448510  +
mov eax [esp+1F4h+var_E4] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_449B4B  +
mov [esp+1F4h+var_1CC] 0 +
mov edi ebp +
mov [esp+1F4h+var_1B0] 0 +
mov [esp+1F4h+var_1B8] 0 +
mov [esp+1F4h+var_1AC] 0 +
mov [esp+1F4h+var_1A8] 0 +
mov [esp+1F4h+var_1D4] 0 +
lea esi [esi+0] +
mov esi [edi+0A0h] +
mov ebp [edi+8Ch] +
mov dword ptr [edi+4Ch] 0 +
test esi esi +
jnz loc_448602  +
jmp loc_448C30  +
cmp eax 1 +
jz loc_448A68  +
mov esi [esi] +
test esi esi +
lea esi [esi+0] +
jz loc_448629  +
mov eax [esi+4] +
lea edx [eax-3] +
cmp edx 1 +
ja loc_4485F0  +
add dword ptr [edi+4Ch] 1 +
mov ecx 1 +
test byte ptr [edi+19h] 4 +
jz loc_448A60  +
mov esi [esi] +
add [ebp+50h] ecx +
test esi esi +
jnz loc_448602  +
mov edx [edi+4Ch] +
test edx edx +
jz loc_448C30  +
mov eax [edi+14h] +
or eax 4 +
mov [edi+14h] eax +
test al 1 +
jnz loc_44864E  +
test byte ptr [edi+18h] 1 +
jnz loc_44864E  +
mov dword ptr [edi+1Ch] 0 +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_4485D0  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_448676  +
mov eax [esp+1F4h+var_1CC] +
test eax eax +
jnz loc_448DF6  +
mov eax [esp+1F4h+var_E0] +
mov edi [esp+1F4h+var_E4] +
movzx edx byte ptr [eax+1] +
mov eax 1 +
and edx 18h +
cmp dl 18h +
cmovz eax [esp+1F4h+var_1C4] +
test byte ptr [edi+2Bh] 10h +
mov [edi+7Ch] eax +
jnz loc_448FC1  +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_42F7D0  +
test eax eax +
jz loc_448DAC  +
mov eax [esp+1F4h+var_E4] +
mov esi [eax+64h] +
test esi esi +
jz loc_44877A  +
mov edi [esp+1F4h+var_E4] +
jmp loc_4486ED  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_44877A  +
test byte ptr [esi+14h] 4 +
mov ebx [esi+8Ch] +
jz loc_44872B  +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_448712  +
lea edx [ebx+3Ch] +
mov eax edi +
call sub_43BDC0  +
test eax eax +
jz loc_448DAC  +
mov eax [ebx+4Ch] +
test eax eax +
jz loc_44872B  +
lea edx [ebx+4Ch] +
mov eax edi +
call sub_43BDC0  +
test eax eax +
jz loc_448DAC  +
mov edx [ebx+10h] +
and edx [ebx+14h] +
mov dword ptr [ebx+40h] 0 +
mov dword ptr [ebx+50h] 0 +
cmp edx 0FFFFFFFFh +
jnz loc_4486E2  +
test byte ptr [esi+17h] 8 +
mov eax [ebx+30h] +
jz loc_449C06  +
test eax eax +
jnz loc_449C06  +
mov eax [ebx+18h] +
mov [esp+1F4h+var_1F4] eax +
call sub_412BD0  +
test eax eax +
jz loc_448DAC  +
mov esi [esi+0Ch] +
mov [ebx+30h] eax +
test esi esi +
jnz loc_4486ED  +
mov eax [esp+1F4h+var_E4] +
mov dword ptr [eax+7Ch] 0 +
mov eax [eax+0A0h] +
mov edi eax +
mov dword ptr [eax+4Ch] 2 +
mov [esp+1F4h+var_1B4] eax +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx edx byte ptr [eax+5] +
mov [edi+70h] edx +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
shl eax cl +
cmp [esp+1F4h+var_1B8] 13h +
mov [edi+6Ch] eax +
ja loc_448FE1  +
mov eax 230h +
mov [esp+1F4h+var_1B8] 14h +
mov ecx [esp+1F4h+var_E0] +
mov edi [esp+1F4h+var_1B8] +
mov ebx [ecx+1Ch] +
mov [ebx+58h] edi +
mov [esp+1F4h+var_1F4] eax +
call sub_412BD0  +
mov [ebx+5Ch] eax +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
mov eax [eax+5Ch] +
test eax eax +
jz loc_448DAC  +
mov eax [esp+1F4h+var_E4] +
mov edx [eax+0A0h] +
cmp dword ptr [edx+214h] 0FF01h +
sbb eax eax +
not eax  +
mov [esp+1F4h+var_10C] eax +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jnz loc_448E20  +
mov eax [esp+1F4h+var_1C4] +
test eax eax +
jnz loc_448E20  +
mov eax [esp+1F4h+var_1D4] +
test eax eax +
jnz loc_449497  +
mov ebp [esp+1F4h+var_1A8] +
test ebp ebp +
jnz loc_449477  +
mov edi [esp+1F4h+var_1AC] +
test edi edi +
jnz loc_449442  +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
imul eax [esp+1F4h+var_1B8] +
mov [esp+1F4h+var_1F4] eax +
call sub_412BD0  +
test eax eax +
mov [esp+1F4h+var_120] eax +
jz loc_448DAC  +
mov eax [esp+1F4h+var_1B8] +
lea ebx ds:0[eax*4] +
add eax ebx +
shl eax 2 +
mov [esp+1F4h+var_1F4] eax +
call sub_412BD0  +
test eax eax +
mov [esp+1F4h+var_118] eax +
jz loc_448DAC  +
mov [esp+1F4h+var_1F4] ebx +
call sub_412BD0  +
test eax eax +
mov [esp+1F4h+var_114] eax +
jz loc_448DAC  +
mov [esp+1F4h+var_1F4] ebx +
call sub_412BD0  +
test eax eax +
mov [esp+1F4h+var_110] eax +
jz loc_448DAC  +
mov esi [esp+1F4h+var_1B0] +
test esi esi +
jnz loc_4494B7  +
mov eax [esp+1F4h+var_E0] +
xor edx edx +
mov esi [eax+1Ch] +
mov ebx [esi+0C8h] +
test ebx ebx +
mov eax ebx +
jnz loc_448936  +
jmp loc_44896A  +
mov edx [eax+24h] +
test edx edx +
jnz loc_44892C  +
and ch 1 +
jnz loc_44892C  +
mov ecx [eax+0A4h] +
test ecx ecx +
jz loc_44892C  +
mov edx [ecx+0Ch] +
add edx [ecx+8] +
add edx [eax+1Ch] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_44893E  +
mov ecx [eax+14h] +
test ch 4 +
jnz loc_448910  +
mov eax [esp+1F4h+var_1C0] +
mov edi [ebx+1Ch] +
cmp dword ptr [eax+1A4h] 1 +
jnz loc_448960  +
mov ecx [ebx+40h] +
mov eax 1 +
shl eax cl +
lea edx [edx+eax-1] +
neg eax  +
and edx eax +
mov eax edx +
sub eax edi +
mov [esi+0CCh] eax +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+64h] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jz loc_449109  +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_1D4] +
mov ebx [eax+0A0h] +
test ebx ebx +
jz loc_4490F6  +
xor ecx ecx +
xor esi esi +
mov [esp+1F4h+var_1B8] 0 +
xor edi edi +
mov [esp+1F4h+var_1CC] ecx +
jmp loc_4489D1  +
add esi 1 +
test edi edi +
jnz loc_4489F8  +
mov ebx [ebx] +
test ebx ebx +
jz loc_449060  +
cmp dword ptr [ebx+4] 1 +
jnz loc_4489C0  +
mov ebp [ebx+10h] +
mov edx [ebp+94h] +
mov eax [edx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_448FEB  +
add esi 1 +
test edi edi +
mov [esp+1F4h+var_1CC] ebp +
jz loc_4489C7  +
test esi esi +
jz loc_4489C7  +
mov ebx [esp+1F4h+var_1B8] +
mov ecx [esp+1F4h+var_1CC] +
test ebx ebx +
jz loc_449389  +
test ecx ecx +
jz loc_449389  +
mov edi [esp+1F4h+var_1B8] +
mov edx [ecx+94h] +
mov eax [edi+94h] +
mov [esp+1F4h+var_1E0] edx +
mov [esp+1F4h+var_1E4] ecx +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1E8] eax +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] offset aAHasBothOrdere +
mov [esp+1F4h+var_1F0] eax +
call off_47D664  +
mov [esp+1F4h+var_1F4] 11h +
call sub_4105E0  +
jmp loc_4483BE  +
add [ebp+40h] ecx +
jmp loc_4485F9  +
mov ebx [esi+10h] +
or byte ptr [ebx+18h] 2 +
test byte ptr [ebx+16h] 80h +
cmovz eax [esp+1F4h+var_1CC] +
mov ecx [ebx+8Ch] +
mov [esp+1F4h+var_1CC] eax +
mov eax [ebp+4] +
mov [esp+1F4h+var_1C8] ecx +
cmp eax 4 +
jz loc_448B43  +
cmp eax 9 +
jz loc_448B43  +
mov eax [esp+1F4h+var_1C4] +
test eax eax +
jz loc_448C05  +
mov ecx [ebx+4Ch] +
mov edx [ebx+24h] +
mov eax [ebx+28h] +
cmp edx eax +
cmovnb eax edx +
mov edx [esp+1F4h+var_1D4] +
cmp edx eax +
cmovnb eax edx +
mov [esp+1F4h+var_1D4] eax +
mov eax [ebx+94h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jz loc_448B50  +
test ecx ecx +
jz loc_4485F9  +
mov eax [esi+4] +
add [edi+4Ch] ecx +
cmp eax 1 +
jnz loc_448616  +
mov ebx [esp+1F4h+var_1C4] +
test ebx ebx +
jz loc_448616  +
mov eax [esp+1F4h+var_1C8] +
mov edx [eax+3Ch] +
test edx edx +
jz loc_448B17  +
mov ecx [edx+28h] +
xor eax eax +
mov ebx [ebp+40h] +
test ecx ecx +
jz loc_448B12  +
mov eax [edx+18h] +
xor edx edx +
div  ecx +
add eax ebx +
mov [ebp+40h] eax +
mov eax [esp+1F4h+var_1C8] +
mov edx [eax+4Ch] +
test edx edx +
jz loc_4485F9  +
mov ecx [edx+28h] +
xor eax eax +
mov ebx [ebp+50h] +
test ecx ecx +
jz loc_448B39  +
mov eax [edx+18h] +
xor edx edx +
div  ecx +
add eax ebx +
mov [ebp+50h] eax +
jmp loc_4485F9  +
xor ecx ecx +
jmp loc_448AAA  +
test byte ptr [eax+29h] 8 +
jnz loc_448AD1  +
mov eax [eax+0A0h] +
mov [esp+1F4h+var_1B4] eax +
mov eax [eax+928h] +
test eax eax +
jz loc_448C80  +
mov eax [esp+1F4h+var_1C0] +
xor edx edx +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
mov [esp+1F4h+var_1A0] eax +
mov eax [esp+1F4h+var_1B4] +
mov eax [eax+60h] +
div  [esp+1F4h+var_1A0] +
mov edx [esp+1F4h+var_1B8] +
cmp edx eax +
cmovb edx eax +
cmp eax [esp+1F4h+var_1B0] +
mov [esp+1F4h+var_1B8] edx +
jbe loc_448BB9  +
mov edx [esp+1F4h+var_1B4] +
mov edx [edx+208h] +
test edx edx +
cmovz eax [esp+1F4h+var_1B0] +
mov [esp+1F4h+var_1B0] eax +
test byte ptr [ebx+14h] 4 +
jz loc_448AD1  +
mov eax [esp+1F4h+var_1C8] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_448FDA  +
mov eax [eax+18h] +
mov edx [esp+1F4h+var_1C8] +
mov edx [edx+4Ch] +
test edx edx +
jz loc_448BE3  +
add eax [edx+18h] +
mov edx [esp+1F4h+var_1A8] +
cmp edx eax +
cmovnb eax edx +
mov [esp+1F4h+var_1A8] eax +
mov eax [ebx+4Ch] +
mov ebx [esp+1F4h+var_1AC] +
cmp ebx eax +
cmovnb eax ebx +
mov [esp+1F4h+var_1AC] eax +
jmp loc_448AD1  +
mov eax [esp+1F4h+var_1C0] +
xor ecx ecx +
mov eax [eax+0F4h] +
test eax eax +
jz loc_448AAA  +
mov ecx [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] ecx +
call eax  +
mov ecx eax +
jmp loc_448AAA  +
mov eax [edi+14h] +
and eax 0FFFFFFFBh +
mov [edi+14h] eax +
jmp loc_44863D  +
mov eax [esp+1F4h+var_1BC] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_40F950  +
mov dword ptr [ebx+0A0h] 0 +
mov [esp+1F4h+var_1A4] ebx +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_448510  +
jmp loc_448585  +
mov eax [esp+1F4h+var_1B4] +
mov eax [eax+68h] +
jmp loc_448B91  +
mov [esp+1F4h+var_1F4] edi +
call sub_422630  +
mov [esp+1F4h+var_1F4] eax +
mov [esp+1F4h+var_1C8] eax +
call sub_412D60  +
mov edx eax +
mov eax [esp+1F4h+var_1C8] +
test eax eax +
jz loc_448CB2  +
test edx edx +
jz loc_448DAC  +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E8] edx +
mov [esp+1F4h+var_1F4] edi +
mov [esp+1F4h+var_1AC] edx +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] eax +
call sub_422F90  +
mov edx [esp+1F4h+var_1AC] +
test eax eax +
jz loc_448D5A  +
cmp eax 1 +
jnz loc_449A7F  +
cmp dword ptr [ebp+4] 3 +
mov eax [ebp+10h] +
jz loc_449B41  +
mov ecx [eax+4] +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1A8] edx +
mov edx [edi+20h] +
mov eax [eax+18h] +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_1E8] edx +
mov [esp+1F4h+var_1D8] 0 +
mov [esp+1F4h+var_1DC] 0 +
mov [esp+1F4h+var_1AC] eax +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E0] 0 +
mov [esp+1F4h+var_1EC] ecx +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1E4] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1AC] +
call eax  +
mov edx [esp+1F4h+var_1A8] +
test eax eax +
jz loc_449BEE  +
mov eax [esp+1F4h+var_1C8] +
mov [esp+1F4h+var_1AC] edx +
mov [esp+1F4h+var_1E0] eax +
mov eax [ebp+8] +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] eax +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_40F990  +
mov edx [esp+1F4h+var_1AC] +
mov [esp+1F4h+var_1F4] edx +
mov [esp+1F4h+var_1C8] eax +
call free  +
mov eax [esp+1F4h+var_1C8] +
test eax eax +
jnz loc_4492C1  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
mov eax [esp+1F4h+var_E4] +
xor ebx ebx +
mov edx [esp+1F4h+var_1CC] +
add eax 64h +
call sub_43BF70  +
add esp 0FCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+1F4h+var_E4] +
or dword ptr [ecx+28h] 800h +
mov ecx [esp+1F4h+var_E0] +
movzx edx byte ptr [ecx] +
jmp loc_4483E3  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] offset sub_43C060 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_1F4] eax +
call sub_424620  +
jmp loc_448676  +
mov eax [edx+934h] +
lea esi [esp+1F4h+var_178] +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov [esp+1F4h+var_1E8] 1 +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_1B4] +
add eax 48h +
mov [esp+1F4h+var_1F4] eax +
call sub_42EA70  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] offset off_47D468 +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1F4] eax +
mov [esp+1F4h+var_178] 0 +
mov [esp+1F4h+var_174] 0 +
mov [esp+1F4h+var_16C] 0 +
mov [esp+1F4h+var_16B] 0 +
mov [esp+1F4h+var_168] 0 +
mov [esp+1F4h+var_16A] 0 +
mov [esp+1F4h+var_1CC] eax +
call sub_43A9A0  +
cmp eax 1 +
jnz loc_448DB7  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_174] 0 +
mov [esp+1F4h+var_16C] 3 +
mov [esp+1F4h+var_16B] 0 +
mov eax [eax+0A0h] +
mov [esp+1F4h+var_178] 0 +
mov [esp+1F4h+var_16A] 0 +
cmp dword ptr [eax+214h] 1 +
jbe loc_448847  +
mov edi [esp+1F4h+var_E4] +
mov ebx 1 +
mov ebp [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] edi +
call sub_42E1E0  +
test eax eax +
jz loc_448F74  +
mov ecx [edi+7Ch] +
mov [esp+1F4h+var_168] ebx +
mov [eax+88h] ecx +
mov ecx [esp+1F4h+var_E0] +
movzx ecx byte ptr [ecx] +
and ecx 3 +
cmp cl 2 +
jz loc_448F4B  +
mov ecx [eax+1Ch] +
mov [esp+1F4h+var_178] ecx +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] eax +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1F4] ebp +
call sub_43A9A0  +
cmp eax 1 +
jnz loc_448DB7  +
mov eax [edi+0A0h] +
add ebx 1 +
cmp [eax+214h] ebx +
ja loc_448F12  +
jmp loc_448847  +
mov edi [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F0] offset a_hash +
mov [esp+1F4h+var_1F4] edi +
call sub_40F360  +
mov [esp+1F4h+var_1F0] offset a_gnu_version +
mov [esp+1F4h+var_1F4] edi +
mov [esp+1F4h+var_134] eax +
call sub_40F360  +
mov [esp+1F4h+var_130] eax +
jmp loc_448467  +
mov [esp+1F4h+var_1F0] 2B5Fh +
mov [esp+1F4h+var_1F4] offset a____Binutils_3 +
call sub_410530  +
jmp loc_4486A5  +
xor eax eax +
jmp loc_448BD5  +
imul eax [esp+1F4h+var_1B8] +
jmp loc_4487D2  +
mov eax [esp+1F4h+var_1C8] +
mov ecx [edx+0A0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [ecx+4] al +
jnz loc_4489ED  +
mov [esp+1F4h+var_1F4] edx +
mov [esp+1F4h+var_1F0] ebp +
mov [esp+1F4h+var_1B0] edx +
call sub_42F700  +
mov edx [esp+1F4h+var_1B0] +
test eax eax +
jz loc_4489ED  +
mov edx [edx+0A0h] +
mov ecx [edx+214h] +
cmp eax ecx +
jnb loc_4489ED  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
test byte ptr [eax+8] 80h +
jz loc_4489ED  +
cmp ecx [eax+1Ch] +
jbe loc_4489ED  +
add edi 1 +
mov [esp+1F4h+var_1B8] ebp +
jmp loc_4489C3  +
test edi edi +
jz loc_4490F6  +
shl edi 2 +
mov [esp+1F4h+var_1F4] edi +
call sub_412BD0  +
test eax eax +
mov ebp eax +
jz loc_4483BE  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+0A0h] +
test eax eax +
jz loc_449A9B  +
nop   +
add ebx 1 +
mov [ebp+ebx*4-4] eax +
mov eax [eax] +
test eax eax +
jnz loc_449090  +
mov [esp+1F4h+var_1E8] offset sub_43ABA0 +
xor edi edi +
mov [esp+1F4h+var_1EC] 4 +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] ebp +
call qsort  +
mov edx ebp +
lea eax [ebp+ebx*4+0] +
mov [esp+1F4h+var_1CC] ebp +
mov ebx [edx] +
mov ebp 0FFFFFFFFh +
add edx 4 +
mov esi [ebx+10h] +
mov ecx [esi+40h] +
shl ebp cl +
mov ecx ebp +
and ecx edi +
mov [esi+38h] ecx +
mov [ebx+8] ecx +
add ecx [ebx+0Ch] +
cmp edx eax +
mov edi ecx +
jnz loc_4490C5  +
mov ebp [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1F4] ebp +
call free  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jnz loc_448980  +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F4] eax +
call sub_450160  +
test eax eax +
jz loc_4483BE  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+34h] +
test eax eax +
jz loc_44913C  +
and byte ptr [eax+2Bh] 0EFh +
mov eax [eax+9Ch] +
test eax eax +
jnz loc_44912E  +
mov eax [esp+1F4h+var_E4] +
xor edi edi +
mov esi edi +
mov eax [eax+64h] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jz loc_449523  +
mov eax [esp+1F4h+var_1D4] +
mov edi [eax+0A0h] +
test edi edi +
jz loc_449510  +
mov ebp edi +
jmp loc_4491B5  +
sub eax 3 +
cmp eax 1 +
jbe loc_449210  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1E8] ebp +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_426190  +
test eax eax +
jz loc_449AC0  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_449510  +
mov eax [ebp+4] +
cmp eax 1 +
jnz loc_449170  +
mov eax [ebp+10h] +
mov esi [eax+94h] +
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_44917C  +
mov eax [esp+1F4h+var_1C0] +
mov edx [esi+0A0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [edx+4] al +
jnz loc_44917C  +
test byte ptr [esi+2Bh] 10h +
jnz loc_4491AA  +
lea eax [esp+1F4h+var_140] +
mov edx esi +
mov [esp+1F4h+var_1CC] eax +
call sub_446C50  +
test eax eax +
jz loc_448DB7  +
or byte ptr [esi+2Bh] 10h +
jmp loc_4491AA  +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1B0] eax +
mov eax [esp+1F4h+var_1D4] +
mov ebx [eax+8Ch] +
mov eax [ebp+10h] +
mov eax [eax] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_4234D0  +
test eax eax +
mov edi eax +
jz loc_449A63  +
mov eax [ebp+10h] +
mov ecx [eax+8] +
mov [esp+1F4h+var_1CC] ecx +
mov ecx [ebx+3Ch] +
test ecx ecx +
jz loc_44942F  +
add ebx 3Ch +
mov edx [ebx+4] +
mov ecx [ebx+0Ch] +
cmp dword ptr [ebp+4] 3 +
lea ecx [ecx+edx*4] +
mov [esp+1F4h+var_1C8] ecx +
mov eax [eax+4] +
jnz loc_4493A3  +
mov eax [eax+88h] +
test eax eax +
mov [esp+1F4h+var_1B8] eax +
jnz loc_4492A4  +
mov [esp+1F4h+var_1F0] 2932h +
mov [esp+1F4h+var_1F4] offset a____Binutils_3 +
call sub_410530  +
mov eax [esp+1F4h+var_1C8] +
mov dword ptr [eax] 0 +
mov eax [edi+24h] +
test eax eax +
jz loc_4492C1  +
mov eax [esp+1F4h+var_1CC] +
test eax eax +
jnz loc_448C8C  +
mov eax [ebp+8] +
mov [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_4492E4  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+1Ch] +
add [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_1B0] +
mov ecx [eax+174h] +
movzx edx byte ptr [ecx+9] +
test dl dl +
jz loc_44932B  +
lea edx [edx+edx*2] +
lea eax [esp+1F4h+var_164] +
lea edx [esp+edx*4+1F4h+var_164] +
mov [esp+1F4h+var_1B0] ecx +
mov ecx [esp+1F4h+var_1C8] +
add eax 0Ch +
mov dword ptr [eax-8] 0 +
mov dword ptr [eax-4] 0 +
mov [eax-0Ch] ecx +
cmp eax edx +
jnz loc_44930B  +
mov ecx [esp+1F4h+var_1B0] +
cmp byte ptr [ecx+0Ah] 20h +
jz loc_449417  +
mov eax [edi] +
mov [esp+1F4h+var_160] eax +
mov eax [ebx] +
cmp dword ptr [eax+4] 9 +
mov edx [eax+30h] +
jz loc_44940B  +
mov eax [esp+1F4h+var_1CC] +
mov edi [ecx+44h] +
mov [esp+1F4h+var_15C] eax +
movzx eax byte ptr [ecx+4] +
imul eax [ebx+4] +
add eax edx +
mov [esp+1F4h+var_1EC] eax +
lea eax [esp+1F4h+var_164] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edi  +
add dword ptr [ebx+4] 1 +
jmp loc_4491AA  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] offset aAHasBothOrde_0 +
mov [esp+1F4h+var_1F0] eax +
call off_47D664  +
jmp loc_448A49  +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1E0] 1 +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_423F00  +
test eax eax +
jz loc_449B9E  +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
jbe loc_4494E0  +
mov ecx [esp+1F4h+var_1C8] +
mov dword ptr [eax+1Ch] 0FFFFFFFEh +
mov [esp+1F4h+var_1B8] 0 +
mov [ecx] eax +
jmp loc_4492AE  +
mov edi [ecx+3Ch] +
movzx eax byte ptr [ecx+3] +
jmp loc_44935F  +
mov edx [esp+1F4h+var_1B8] +
movzx eax byte ptr [edi] +
shl edx 8 +
add eax edx +
mov [esp+1F4h+var_160] eax +
jmp loc_44933E  +
mov edx [ebx+4Ch] +
test edx edx +
jz loc_449B80  +
add ebx 4Ch +
jmp loc_449268  +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
lea eax [eax+eax*2] +
shl eax 2 +
imul eax [esp+1F4h+var_1AC] +
mov [esp+1F4h+var_1F4] eax +
call sub_412BD0  +
test eax eax +
mov [esp+1F4h+var_124] eax +
jnz loc_44886B  +
jmp loc_448DAC  +
mov eax [esp+1F4h+var_1A8] +
mov [esp+1F4h+var_1F4] eax +
call sub_412BD0  +
test eax eax +
mov [esp+1F4h+var_128] eax +
jnz loc_44885F  +
jmp loc_448DAC  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] eax +
call sub_412BD0  +
test eax eax +
mov [esp+1F4h+var_12C] eax +
jnz loc_448853  +
jmp loc_448DAC  +
mov eax [esp+1F4h+var_1B0] +
shl eax 2 +
mov [esp+1F4h+var_1F4] eax +
call sub_412BD0  +
test eax eax +
mov [esp+1F4h+var_11C] eax +
jnz loc_4488F6  +
jmp loc_448DAC  +
mov eax [eax+14h] +
mov edx [eax+3Ch] +
mov ecx [edx+88h] +
mov [esp+1F4h+var_1B8] ecx +
mov ecx [esp+1F4h+var_1C8] +
mov dword ptr [ecx] 0 +
mov edx [eax+3Ch] +
mov eax [eax+38h] +
mov ecx [edx+1Ch] +
add [esp+1F4h+var_1CC] ecx +
add [esp+1F4h+var_1CC] eax +
jmp loc_4492AE  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jnz loc_449156  +
mov eax [esp+1F4h+var_E0] +
cmp byte ptr [eax+3] 0 +
js loc_449555  +
mov eax [esp+1F4h+var_E0] +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_449555  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_449C22  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jnz loc_44953E  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
mov [esp+1F4h+var_17C] eax +
lea eax [esp+1F4h+var_188] +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] offset loc_43B0A0 +
mov [esp+1F4h+var_188] 0 +
mov [esp+1F4h+var_184] 1 +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_180] 0 +
mov [esp+1F4h+var_1F4] eax +
call sub_412710  +
mov eax [esp+1F4h+var_188] +
test eax eax +
jnz loc_4483BE  +
mov eax [esp+1F4h+var_1C0] +
mov edx [eax+0D0h] +
test edx edx +
jz loc_449601  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jnz loc_4495D2  +
mov eax [esp+1F4h+var_1C4] +
test eax eax +
jz loc_449601  +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E8] offset sub_43A9A0 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edx  +
test eax eax +
jz loc_4483BE  +
mov eax [esp+1F4h+var_E4] +
mov edi [esp+1F4h+var_1B4] +
mov eax [eax+7Ch] +
mov [edi+68h] eax +
mov eax [esp+1F4h+var_19C] +
test eax eax +
jz loc_44AB54  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
mov eax [ecx+0F8h] +
test eax eax +
jz loc_449842  +
cmp dword ptr [eax+3Ch] offset off_47D510 +
jz loc_449842  +
mov eax [eax+6Ch] +
mov [esp+1F4h+var_1D4] eax +
mov eax [esp+1F4h+var_E0] +
test byte ptr [eax] 1 +
jnz loc_449661  +
mov ebp [ecx+34h] +
test ebp ebp +
jz loc_44AB63  +
mov eax [esp+1F4h+var_E4] +
xor edi edi +
mov [esp+1F4h+var_160] 0 +
mov [esp+1F4h+var_15C] 0 +
mov [esp+1F4h+var_158] 3 +
mov ebp [eax+64h] +
mov [esp+1F4h+var_157] 0 +
mov [esp+1F4h+var_156] 0 +
test ebp ebp +
jz loc_449743  +
mov eax [ebp+8Ch] +
mov ebx [eax+60h] +
test ebx ebx +
jle loc_44972E  +
mov esi [eax+5Ch] +
test esi esi +
jg loc_4496CB  +
mov [esp+1F4h+var_1F0] 2CD3h +
mov [esp+1F4h+var_1F4] offset a____Binutils_3 +
call sub_410530  +
mov [esp+1F4h+var_154] esi +
sub esi 0FF00h +
cmp esi 0FFFEFFFFh +
jbe loc_449C53  +
mov eax [ebp+1Ch] +
cmp edi ebx +
cmovl edi ebx +
mov [esp+1F4h+var_164] eax +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
mov edx [eax+24h] +
mov [esp+1F4h+var_1E8] 0 +
movzx eax byte ptr [eax+5] +
imul eax ebx +
add eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1EC] eax +
lea eax [esp+1F4h+var_164] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edx  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_4496A3  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
mov esi [ecx+0C0h] +
test esi esi +
jz loc_44982D  +
lea ebp [esp+1F4h+var_164] +
mov eax [esi+10h] +
mov [esp+1F4h+var_164] eax +
mov eax [esi+14h] +
mov [esp+1F4h+var_160] eax +
mov eax [esi+18h] +
mov [esp+1F4h+var_15C] eax +
mov eax [esi+1Ch] +
mov dword ptr [esp+1F4h+var_158] eax +
mov eax [esi+20h] +
and [esp+1F4h+var_157] 0FCh +
mov [esp+1F4h+var_154] eax +
mov edx [esi+20h] +
mov eax [esi+4] +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1F4] eax +
call sub_42E1E0  +
test eax eax +
mov ebx eax +
jz loc_4497DD  +
mov edx [eax+3Ch] +
mov eax [edx+8Ch] +
mov eax [eax+5Ch] +
mov [esp+1F4h+var_154] eax +
sub eax 0FF00h +
cmp eax 0FFFEFFFFh +
jbe loc_44AB6A  +
mov eax [ebx+38h] +
add eax [edx+1Ch] +
add eax [esi+10h] +
mov [esp+1F4h+var_164] eax +
mov ecx [esp+1F4h+var_1C0] +
mov eax [esi+0Ch] +
mov edx [ecx+174h] +
cmp edi eax +
cmovl edi eax +
mov ecx [edx+24h] +
mov [esp+1F4h+var_1E8] 0 +
movzx edx byte ptr [edx+5] +
mov [esp+1F4h+var_1F0] ebp +
imul eax edx +
add eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call ecx  +
mov esi [esi] +
test esi esi +
jnz loc_449758  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
mov eax [ecx+0F8h] +
lea edx [edi+1] +
mov eax [eax+3Ch] +
mov eax [eax+8Ch] +
mov [eax+20h] edx +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1F0] offset loc_43B0A0 +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_188] 0 +
mov [esp+1F4h+var_17C] eax +
lea eax [esp+1F4h+var_188] +
mov [esp+1F4h+var_1EC] eax +
mov [esp+1F4h+var_184] 0 +
call sub_412710  +
mov edi [esp+1F4h+var_188] +
test edi edi +
jnz loc_4483BE  +
mov eax [esp+1F4h+var_1C0] +
mov edx [eax+0D4h] +
test edx edx +
jz loc_4498D5  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jnz loc_4498A6  +
mov esi [esp+1F4h+var_1C4] +
test esi esi +
jz loc_4498D5  +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E8] offset sub_43A9A0 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edx  +
test eax eax +
jz loc_4483BE  +
mov eax [esp+1F4h+var_138] +
mov [esp+1F4h+var_1F4] eax +
call sub_455DB0  +
mov eax [esp+1F4h+var_140] +
mov edi [eax+1Ch] +
mov edx [edi+54h] +
test edx edx +
jz loc_449CA8  +
mov eax [esp+1F4h+var_13C] +
mov ecx [eax+0A0h] +
mov ebx [ecx+90Ch] +
test ebx ebx +
jnz loc_44992E  +
mov [esp+1F4h+var_1F0] 2257h +
mov [esp+1F4h+var_1F4] offset a____Binutils_3 +
call sub_410530  +
mov eax [esp+1F4h+var_13C] +
mov edx [edi+54h] +
mov eax [eax+4] +
mov esi [eax+1B0h] +
mov eax [esi+174h] +
movzx eax byte ptr [eax+5] +
imul eax edx +
mov [esp+1F4h+var_1F4] eax +
call sub_412BD0  +
test eax eax +
mov ebp eax +
jz loc_4483BE  +
mov ecx [esp+1F4h+var_10C] +
test ecx ecx +
jz loc_449985  +
mov eax [esp+1F4h+var_13C] +
mov eax [eax+7Ch] +
shl eax 2 +
mov [esp+1F4h+var_1F4] eax +
call sub_412D60  +
test eax eax +
mov [esp+1F4h+var_10C] eax +
jz loc_44ABA1  +
mov edx [edi+54h] +
mov [esp+1F4h+var_1D4] 0 +
test edx edx +
jz loc_4499FD  +
imul ebx [esp+1F4h+var_1D4] +
add ebx [edi+5Ch] +
mov eax [ebx+8] +
cmp eax 0FFFFFFFFh +
jnz loc_44AB86  +
mov dword ptr [ebx+8] 0 +
mov eax [esi+174h] +
mov edx [esp+1F4h+var_10C] +
mov ecx [eax+24h] +
mov [esp+1F4h+var_1C8] ecx +
mov ecx [ebx+18h] +
lea edx [edx+ecx*4] +
mov [esp+1F4h+var_1E8] edx +
movzx eax byte ptr [eax+5] +
imul eax [ebx+14h] +
mov [esp+1F4h+var_1F0] ebx +
add eax ebp +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_13C] +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1C8] +
call eax  +
mov edx [edi+54h] +
add [esp+1F4h+var_1D4] 1 +
cmp [esp+1F4h+var_1D4] edx +
jb loc_449994  +
mov eax [esi+174h] +
mov esi edx +
xor edx edx +
mov ecx [esp+1F4h+var_13C] +
movzx eax byte ptr [eax+5] +
mov ebx [ecx+0A0h] +
mov [esp+1F4h+var_1E8] 0 +
imul esi eax +
mov eax [ebx+60h] +
add eax [ebx+58h] +
adc edx [ebx+5Ch] +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1EC] edx +
call sub_411E10  +
test eax eax +
jz loc_449C6C  +
mov [esp+1F4h+var_1F4] ebp +
call free  +
mov eax [edi+5Ch] +
mov [esp+1F4h+var_1F4] eax +
call free  +
mov dword ptr [edi+5Ch] 0 +
jmp loc_4483BE  +
mov [esp+1F4h+var_1F4] 11h +
call sub_4105E0  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
jmp loc_448DB7  +
mov [esp+1F4h+var_1EC] offset aElf_reloc_link +
mov [esp+1F4h+var_1F0] 2974h +
mov [esp+1F4h+var_1F4] offset a____Binutils_3 +
call sub_410560  +
mov [esp+1F4h+var_1E8] offset sub_43ABA0 +
mov [esp+1F4h+var_1EC] 4 +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1F4] ebp +
call qsort  +
jmp loc_4490EE  +
cmp dword ptr [ebp+4] 1 +
mov edi esi +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
jnz loc_448DB7  +
mov eax [edi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_448DB7  +
mov eax [esp+1F4h+var_1C0] +
mov edx [edi+0A0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [edx+4] al +
jz loc_448DB7  +
mov edx offset aElfclass32 +
mov ecx offset aElfclass64 +
cmp al 2 +
mov ebx ecx +
mov esi edx +
cmovnz ebx edx +
cmovnz esi ecx +
mov [esp+1F4h+var_1F4] 3 +
call sub_4105E0  +
mov [esp+1F4h+var_1E8] ebx +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] edi +
mov [esp+1F4h+var_1F4] offset aBFileClassSInc +
call off_47D664  +
jmp loc_448DB7  +
mov eax [eax+4] +
mov ecx [eax] +
jmp loc_448CF6  +
mov ebx [esp+1F4h+var_1A4] +
mov [esp+1F4h+var_1A4] ebx +
mov [esp+1F4h+var_1B0] 0 +
mov [esp+1F4h+var_1B8] 0 +
mov [esp+1F4h+var_1A8] 0 +
mov [esp+1F4h+var_1AC] 0 +
mov [esp+1F4h+var_1D4] 0 +
jmp loc_448676  +
mov [esp+1F4h+var_1F0] 292Ah +
xor ebx ebx +
mov [esp+1F4h+var_1F4] offset a____Binutils_3 +
call sub_410530  +
mov eax [ebp+10h] +
jmp loc_449268  +
mov eax [esp+1F4h+var_E0] +
mov edx [ebp+10h] +
mov ecx [esp+1F4h+var_E0] +
mov eax [eax+18h] +
mov edx [edx+4] +
mov eax [eax+24h] +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1EC] 0 +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1F4] ecx +
call eax  +
test eax eax +
jz loc_448DAC  +
mov [esp+1F4h+var_1B8] 0 +
jmp loc_4492AE  +
mov [esp+1F4h+var_1F4] edx +
call free  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
jmp loc_448DB7  +
mov [esp+1F4h+var_1EC] offset aBfd_elf_final_ +
mov [esp+1F4h+var_1F0] 2B7Eh +
mov [esp+1F4h+var_1F4] offset a____Binutils_3 +
call sub_410560  +
mov eax [ebx+0A0h] +
mov eax [eax+24Ch] +
test eax eax +
jz loc_44954B  +
mov [esp+1F4h+var_1F4] eax +
call free  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+24Ch] 0 +
jmp loc_44954B  +
mov eax [esp+1F4h+var_E4] +
call sub_43A960  +
test eax eax +
jnz loc_4496E4  +
jmp loc_4483BE  +
mov eax [esp+1F4h+var_13C] +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1F4] ebp +
mov [esp+1F4h+var_1EC] eax +
call sub_411CB0  +
cmp esi eax +
jnz loc_449A44  +
add [ebx+60h] esi +
mov [esp+1F4h+var_1F4] ebp +
call free  +
mov eax [edi+5Ch] +
mov [esp+1F4h+var_1F4] eax +
call free  +
mov dword ptr [edi+5Ch] 0 +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+7Ch] +
test eax eax +
jnz loc_44A7F0  +
mov eax [esp+1F4h+var_E4] +
mov edi [eax+64h] +
test edi edi +
jz loc_449D44  +
test byte ptr [edi+14h] 4 +
mov ebx [edi+8Ch] +
jz loc_449D3D  +
mov eax [esp+1F4h+var_1C0] +
mov esi 1 +
mov eax [eax+0F8h] +
test eax eax +
jz loc_449CF6  +
mov [esp+1F4h+var_1F4] edi +
call eax  +
test eax eax +
setnz al  +
movzx eax al +
mov esi eax +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_449D16  +
mov eax [esp+1F4h+var_E4] +
lea edx [ebx+3Ch] +
mov ecx esi +
call sub_47C00E  +
test eax eax +
jz loc_4483BE  +
mov ebp [ebx+4Ch] +
test ebp ebp +
jz loc_449D36  +
mov eax [esp+1F4h+var_E4] +
lea edx [ebx+4Ch] +
mov ecx esi +
call sub_47C00E  +
test eax eax +
jz loc_4483BE  +
mov dword ptr [edi+4Ch] 0 +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_449CC8  +
mov eax [esp+1F4h+var_19C] +
test eax eax +
jz loc_449F7B  +
mov eax [esp+1F4h+var_E0] +
test byte ptr [eax+4] 2 +
jz loc_449E45  +
mov esi [esp+1F4h+var_198] +
test esi esi +
jz loc_449E45  +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1C8] eax +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
mov [esp+1F4h+var_1F0] offset a_rela_dyn +
mov [esp+1F4h+var_1B4] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_40F280  +
mov [esp+1F4h+var_1F0] offset a_rel_dyn +
mov ebx eax +
mov [esp+1F4h+var_1D4] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_40F280  +
test ebx ebx +
mov edi eax +
jz loc_44A63B  +
mov eax [ebx+24h] +
test eax eax +
mov [esp+1F4h+var_1AC] eax +
jz loc_44A63B  +
test edi edi +
jz loc_44A622  +
mov eax [edi+24h] +
test eax eax +
mov [esp+1F4h+var_1B0] eax +
mov eax [esp+1F4h+var_1D4] +
jnz loc_44A173  +
mov ebx [eax+0A0h] +
mov eax [esp+1F4h+var_1C8] +
mov esi [eax+174h] +
movzx eax byte ptr [esi+4] +
mov ecx [esp+1F4h+var_1AC] +
mov edi [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1C4] eax +
mov eax [esi+40h] +
mov [esp+1F4h+var_1B0] eax +
mov eax [esi+44h] +
mov [esp+1F4h+var_1A8] eax +
test ebx ebx +
jz loc_449E45  +
xor edx edx +
cmp dword ptr [ebx+4] 1 +
jnz loc_449E37  +
mov eax [ebx+10h] +
add edx [eax+24h] +
mov ebx [ebx] +
test ebx ebx +
jnz loc_449E2B  +
cmp edx ecx +
jz loc_44A1B7  +
xor edi edi +
xor ebp ebp +
mov eax [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F0] offset a_dynamic +
mov [esp+1F4h+var_1F4] eax +
call sub_40F360  +
test eax eax +
mov ebx eax +
jnz loc_449E77  +
mov [esp+1F4h+var_1F0] 2D73h +
mov [esp+1F4h+var_1F4] offset a____Binutils_3 +
call sub_410530  +
mov esi [ebx+6Ch] +
mov eax [ebx+24h] +
add eax esi +
cmp esi eax +
mov [esp+1F4h+var_1C4] eax +
jnb loc_449F7B  +
mov eax [esp+1F4h+var_1C0] +
lea ecx [esp+1F4h+var_164] +
mov [esp+1F4h+var_1D4] ecx +
mov [esp+1F4h+var_1B4] edi +
mov edx [eax+174h] +
mov ebx eax +
mov edi [esp+1F4h+var_1D4] +
mov eax [edx+30h] +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1EC] edi +
mov edi [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F4] edi +
call eax  +
mov eax [esp+1F4h+var_164] +
cmp eax 12h +
jbe loc_44A598  +
cmp eax 20h +
jz loc_44A58E  +
jbe loc_44A4B3  +
cmp eax 6FFFFFF0h +
jz loc_44A4A9  +
ja loc_44A454  +
cmp eax 21h +
jz loc_44A3E0  +
cmp eax 6FFFFEF5h +
mov edx offset a_gnu_hash +
jnz loc_44A46B  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1C8] edx +
mov [esp+1F4h+var_1F4] eax +
call sub_40F280  +
mov edx [esp+1F4h+var_1C8] +
test eax eax +
jz loc_44A488  +
mov ecx [eax+3Ch] +
mov ecx [ecx+8Ch] +
cmp dword ptr [ecx+4] 7 +
jz loc_44A2C8  +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_160] eax +
mov eax [ebx+174h] +
mov edi [esp+1F4h+var_1D4] +
mov eax [eax+34h] +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] edi +
mov edi [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F4] edi +
call eax  +
mov edx [ebx+174h] +
movzx eax byte ptr [edx+6] +
add esi eax +
cmp [esp+1F4h+var_1C4] esi +
ja loc_449EA6  +
mov edi [esp+1F4h+var_198] +
test edi edi +
jz loc_44A067  +
mov edi [esp+1F4h+var_E0] +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+9Ch] +
mov [esp+1F4h+var_1F0] edi +
mov edi [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] edi +
call eax  +
test eax eax +
jz loc_448DB7  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+3] +
test al 8 +
jz loc_449FCB  +
mov edi [esp+1F4h+var_E0] +
test byte ptr [edi] 1 +
jnz loc_449FCF  +
test al 10h +
jz loc_44A042  +
mov eax [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F0] offset a_dynamic +
mov [esp+1F4h+var_1F4] eax +
call sub_40F360  +
test eax eax +
jz loc_44A042  +
mov ebx [eax+6Ch] +
mov esi [eax+24h] +
add esi ebx +
cmp ebx esi +
jnb loc_44A042  +
mov eax [esp+1F4h+var_1C0] +
lea edi [esp+1F4h+var_164] +
mov [esp+1F4h+var_1D4] edi +
mov eax [eax+174h] +
mov edi [esp+1F4h+var_1D4] +
mov ecx [esp+1F4h+var_198] +
mov eax [eax+30h] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F4] ecx +
call eax  +
cmp [esp+1F4h+var_164] 16h +
jz loc_44AA1C  +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx edx byte ptr [eax+6] +
add ebx edx +
cmp esi ebx +
ja loc_44A008  +
mov eax [esp+1F4h+var_198] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_44A067  +
mov ebx [esp+1F4h+var_E0] +
mov ecx [ebp+14h] +
test ch 1 +
jnz loc_44AA41  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_44A054  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_44A9DB  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
mov edx [eax+0A0h] +
test edx edx +
jz loc_44A0AE  +
sub eax 0FFFFFF80h +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_459260  +
test eax eax +
jz loc_448DB7  +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_450250  +
test eax eax +
jz loc_448DB7  +
mov eax [esp+1F4h+var_E4] +
mov ebx 1 +
mov edx [esp+1F4h+var_1CC] +
add eax 64h +
call sub_43BF70  +
mov eax [esp+1F4h+var_E4] +
mov ebp [esp+1F4h+var_1A4] +
mov eax [eax+0A0h] +
test ebp ebp +
mov eax [eax+934h] +
mov dword ptr [eax+38h] 1 +
jz loc_4483C0  +
mov edi [esp+1F4h+var_1BC] +
mov [esp+1F4h+var_1F4] edi +
call sub_412BD0  +
test eax eax +
mov esi eax +
jz loc_4483BE  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1F4] eax +
call sub_456210  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1E0] edi +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] ebp +
mov [esp+1F4h+var_1F4] eax +
call sub_40F990  +
mov [esp+1F4h+var_1F4] esi +
call free  +
jmp loc_4483C0  +
mov eax [eax+0A0h] +
mov [esp+1F4h+var_1C4] eax +
test eax eax +
mov eax [esp+1F4h+var_1C8] +
mov esi [eax+174h] +
jz loc_44A966  +
mov ebx [esp+1F4h+var_1C4] +
mov ebp 1 +
xor ecx ecx +
mov [esp+1F4h+var_1A8] edi +
cmp dword ptr [ebx+4] 1 +
jz loc_44A91D  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44A19E  +
mov edi [esp+1F4h+var_1A8] +
jmp loc_44A96D  +
mov eax [esp+1F4h+var_1B4] +
lea eax [eax+eax*2-3] +
lea eax ds:14h[eax*4] +
mov [esp+1F4h+var_1D4] eax +
mov eax edx +
xor edx edx +
div  [esp+1F4h+var_1C4] +
test eax eax +
mov [esp+1F4h+var_1B8] eax +
jz loc_449E45  +
imul eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] eax +
call sub_412D60  +
test eax eax +
mov [esp+1F4h+var_1B4] eax +
jz loc_44A373  +
mov eax [esp+1F4h+var_1C8] +
mov ecx 0FFFFFF00h +
mov eax [eax+174h] +
cmp byte ptr [eax+0Ah] 20h +
cmovz ebx ecx +
mov ecx [edi+0A0h] +
mov [esp+1F4h+var_1AC] ebx +
test ecx ecx +
jz loc_44A236  +
mov [esp+1F4h+var_1A0] edi +
mov ebp ecx +
cmp dword ptr [ebp+4] 1 +
jz loc_44A2EA  +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_44A221  +
mov edi [esp+1F4h+var_1A0] +
mov eax [esp+1F4h+var_1D4] +
xor ebp ebp +
mov ebx [esp+1F4h+var_1B4] +
mov [esp+1F4h+var_1E8] offset sub_43A660 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_1B8] +
mov [esp+1F4h+var_1F4] ebx +
mov [esp+1F4h+var_1F0] eax +
call qsort  +
mov ecx ebx +
cmp dword ptr [ecx+4] 1 +
jnz loc_44A4D2  +
add ebp 1 +
add ecx [esp+1F4h+var_1D4] +
cmp ebp [esp+1F4h+var_1B8] +
jnz loc_44A25E  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_1E8] offset sub_43A6C0 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_1B8] +
sub eax ebp +
mov [esp+1F4h+var_1F0] eax +
call qsort  +
mov ecx [edi+0A0h] +
test ecx ecx +
jz loc_44A2B7  +
mov esi ecx +
mov ecx edi +
cmp dword ptr [esi+4] 1 +
jz loc_44A52D  +
mov esi [esi] +
test esi esi +
jnz loc_44A2A5  +
mov edi ecx +
mov eax [esp+1F4h+var_1B4] +
mov [esp+1F4h+var_1F4] eax +
call free  +
jmp loc_449E49  +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1F4] offset aWarningSecti_0 +
call off_47D664  +
mov [esp+1F4h+var_1F4] 0Fh +
call sub_4105E0  +
jmp loc_448DB7  +
mov esi [ebp+10h] +
mov ebx [esi+6Ch] +
test ebx ebx +
jz loc_44A3C0  +
mov eax [esi+38h] +
xor edx edx +
mov ecx [esi+24h] +
div  [esp+1F4h+var_1C4] +
add ecx ebx +
imul eax [esp+1F4h+var_1D4] +
add eax [esp+1F4h+var_1B4] +
cmp ebx ecx +
jnb loc_44A22B  +
lea edi [eax+8] +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_19C] ecx +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1B0] +
call eax  +
mov eax [esp+1F4h+var_1C8] +
mov ecx [esp+1F4h+var_E0] +
mov eax [eax+10Ch] +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_1F0] esi +
call eax  +
mov ecx [esp+1F4h+var_19C] +
add ebx [esp+1F4h+var_1C4] +
mov [edi-4] eax +
mov eax [esp+1F4h+var_1AC] +
mov [edi-8] eax +
add edi [esp+1F4h+var_1D4] +
cmp ecx ebx +
ja loc_44A31A  +
jmp loc_44A22B  +
mov eax [esp+1F4h+var_E0] +
xor ebp ebp +
mov edi [esp+1F4h+var_E4] +
mov eax [eax+18h] +
mov eax [eax+14h] +
mov [esp+1F4h+var_1E8] edi +
mov edi [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1E0] 0 +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1EC] 0 +
mov [esp+1F4h+var_1F4] edi +
xor edi edi +
mov [esp+1F4h+var_1F0] offset aNotEnoughMemor +
call eax  +
jmp loc_449E49  +
mov ebx [esi+24h] +
test ebx ebx +
jz loc_44A22B  +
mov eax [esp+1F4h+var_1B4] +
xor edi edi +
xor ebp ebp +
mov [esp+1F4h+var_1F4] eax +
call free  +
jmp loc_449E49  +
mov ecx offset a_preinit_array +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] ecx +
mov [esp+1F4h+var_1C8] ecx +
mov [esp+1F4h+var_1F4] eax +
call sub_40F280  +
mov ecx [esp+1F4h+var_1C8] +
test eax eax +
mov edi eax +
jz loc_44A433  +
mov edx [eax+24h] +
test edx edx +
jnz loc_44A421  +
mov [esp+1F4h+var_1F0] ecx +
mov [esp+1F4h+var_1F4] offset aWarningSSectio +
call off_47D664  +
mov edx [edi+24h] +
mov [esp+1F4h+var_160] edx +
mov eax [ebx+174h] +
jmp loc_449F4D  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] ecx +
mov [esp+1F4h+var_1F4] offset aBCouldNotFin_0 +
mov [esp+1F4h+var_1F0] eax +
call off_47D664  +
jmp loc_448DB7  +
cmp eax 6FFFFFFCh +
jz loc_44A47E  +
cmp eax 6FFFFFFEh +
mov edx offset a_gnu_version_r +
jz loc_449F07  +
mov edx [ebx+174h] +
movzx ecx byte ptr [edx+6] +
add ecx esi +
mov esi ecx +
jmp loc_449F71  +
mov edx offset a_gnu_version_d +
jmp loc_449F07  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F4] offset aBCouldNotFin_0 +
mov [esp+1F4h+var_1F0] eax +
call off_47D664  +
jmp loc_448DB7  +
mov edx offset a_gnu_version +
jmp loc_449F07  +
cmp eax 1Ah +
jz loc_44A519  +
jbe loc_44A506  +
cmp eax 1Bh +
lea esi [esi+0] +
jz loc_44A523  +
cmp eax 1Ch +
mov ecx offset a_fini_array +
jz loc_44A3E5  +
jmp loc_44A46B  +
cmp [esp+1F4h+var_1B8] ebp +
jbe loc_44A275  +
mov esi ebp +
mov edx ecx +
mov ebx ecx +
mov eax [ebx+0Ch] +
xor eax [edx+0Ch] +
test [esp+1F4h+var_1AC] eax +
cmovnz edx ebx +
add esi 1 +
mov eax [edx+8] +
mov [ebx] eax +
add ebx [esp+1F4h+var_1D4] +
cmp esi [esp+1F4h+var_1B8] +
jnz loc_44A4E2  +
jmp loc_44A275  +
cmp eax 19h +
mov edx offset a_init_array +
jz loc_449F07  +
jmp loc_44A46B  +
mov edx offset a_fini_array +
jmp loc_449F07  +
mov ecx offset a_init_array +
jmp loc_44A3E5  +
mov eax [esi+10h] +
xor edx edx +
mov ebx [eax+6Ch] +
mov edi [eax+24h] +
mov eax [eax+38h] +
add edi ebx +
div  [esp+1F4h+var_1C4] +
imul eax [esp+1F4h+var_1D4] +
add eax [esp+1F4h+var_1B4] +
cmp ebx edi +
jnb loc_44A2AF  +
add eax 8 +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1B8] ecx +
mov [esp+1F4h+var_1EC] ebx +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1A8] +
call eax  +
mov eax [esp+1F4h+var_1C8] +
add ebx [esp+1F4h+var_1C4] +
add eax [esp+1F4h+var_1D4] +
mov ecx [esp+1F4h+var_1B8] +
cmp edi ebx +
ja loc_44A555  +
jmp loc_44A2AF  +
mov edx offset a_preinit_array +
jmp loc_449F07  +
cmp eax 11h +
jnb loc_44A74B  +
cmp eax 6 +
jz loc_44A738  +
ja loc_44A69A  +
cmp eax 4 +
jz loc_44A690  +
lea esi [esi+0] +
ja loc_44A686  +
test eax eax +
jnz loc_44A46B  +
mov edx [ebx+174h] +
movzx ecx byte ptr [edx+6] +
add ecx esi +
test ebp ebp +
jz loc_44A477  +
cmp [esp+1F4h+var_1C4] ecx +
jbe loc_44A477  +
mov eax [esp+1F4h+var_1B4] +
mov eax [eax+8Ch] +
mov eax [eax+4] +
cmp eax 4 +
jz loc_44A679  +
cmp eax 9 +
jnz loc_44A477  +
mov [esp+1F4h+var_164] 6FFFFFFAh +
mov [esp+1F4h+var_160] ebp +
mov eax edx +
xor ebp ebp +
jmp loc_449F4D  +
mov eax [esp+1F4h+var_1D4] +
mov ebx [eax+0A0h] +
mov eax [esp+1F4h+var_1C8] +
mov esi [eax+174h] +
jmp loc_449E07  +
test edi edi +
jz loc_449E47  +
mov ecx [edi+24h] +
test ecx ecx +
jz loc_449E45  +
mov eax [esp+1F4h+var_1C8] +
mov ebx [edi+0A0h] +
mov esi [eax+174h] +
movzx eax byte ptr [esi+3] +
mov [esp+1F4h+var_1C4] eax +
mov eax [esi+38h] +
mov [esp+1F4h+var_1B0] eax +
mov eax [esi+3Ch] +
mov [esp+1F4h+var_1A8] eax +
jmp loc_449E25  +
mov [esp+1F4h+var_164] 6FFFFFF9h +
jmp loc_44A612  +
mov edx offset a_dynstr +
jmp loc_449F07  +
mov edx offset a_hash +
jmp loc_449F07  +
cmp eax 0Ch +
jz loc_44AC5A  +
jbe loc_44A742  +
cmp eax 0Dh +
lea esi [esi+0] +
jnz loc_44A46B  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+4Ch] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1E4] 1 +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1EC] 0 +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_1F4] eax +
call sub_423EB0  +
test eax eax +
jz loc_44A46B  +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-3] +
cmp dl 1 +
ja loc_44A46B  +
mov ecx [eax+18h] +
mov [esp+1F4h+var_160] ecx +
mov edx [eax+14h] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_44A7BA  +
add ecx [eax+1Ch] +
mov eax [edx+38h] +
add eax ecx +
mov [esp+1F4h+var_160] eax +
mov eax [ebx+174h] +
jmp loc_449F4D  +
mov edx offset a_dynsym +
jmp loc_449F07  +
cmp eax 8 +
ja loc_44A46B  +
mov ecx [esp+1F4h+var_E4] +
lea edx [eax-11h] +
cmp edx 2 +
mov [esp+1F4h+var_160] 0 +
sbb edi edi +
and edi 5 +
mov edx [ecx+0A0h] +
add edi 4 +
mov ecx [edx+214h] +
cmp ecx 1 +
mov [esp+1F4h+var_1B8] ecx +
jbe loc_44A7AF  +
mov edx [edx+40h] +
lea ecx [edx+4] +
mov [esp+1F4h+var_1C8] ecx +
mov ecx [esp+1F4h+var_1B8] +
lea ecx [edx+ecx*4] +
mov [esp+1F4h+var_1B8] ecx +
mov ecx [esp+1F4h+var_1C8] +
mov edx [ecx] +
cmp [edx+4] edi +
jz loc_44A7D0  +
add [esp+1F4h+var_1C8] 4 +
mov ecx [esp+1F4h+var_1B8] +
cmp [esp+1F4h+var_1C8] ecx +
jnz loc_44A795  +
mov eax [ebx+174h] +
jmp loc_449F4D  +
mov [esp+1F4h+var_160] 0 +
mov eax [ebx+174h] +
jmp loc_449F4D  +
test byte ptr [edx+8] 2 +
jz loc_44A7A0  +
cmp eax 8 +
jz loc_44A7E4  +
cmp eax 12h +
jnz loc_44AC69  +
mov edx [edx+18h] +
add [esp+1F4h+var_160] edx +
jmp loc_44A7A0  +
mov edi [esp+1F4h+var_1B4] +
xor ebx ebx +
mov [esp+1F4h+var_1D0] ebx +
mov ecx [edi+60h] +
mov ebx [edi+5Ch] +
mov [esp+1F4h+var_1D4] ecx +
mov ecx [edi+58h] +
mov edi [esp+1F4h+var_E4] +
add [esp+1F4h+var_1D4] ecx +
adc [esp+1F4h+var_1D0] ebx +
mov esi [edi+0A0h] +
mov ebx [esi+208h] +
test ebx ebx +
jz loc_44A830  +
mov edx [ebx] +
test edx edx +
jnz loc_44ABAE  +
mov eax [esp+1F4h+var_138] +
mov dword ptr [esi+0BCh] 3 +
mov dword ptr [esi+0C0h] 0 +
mov dword ptr [esi+0C4h] 0 +
mov [esp+1F4h+var_1F4] eax +
call sub_455C30  +
mov edx [esp+1F4h+var_1D0] +
mov dword ptr [esi+0E0h] 0 +
mov dword ptr [esi+0D4h] 0 +
mov dword ptr [esi+0D8h] 0 +
mov dword ptr [esi+0DCh] 1 +
mov [esi+0D0h] eax +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1E8] 1 +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F0] eax +
lea eax [esi+0B8h] +
mov [esp+1F4h+var_1F4] eax +
call sub_42EA70  +
mov edi [esp+1F4h+var_E4] +
mov ecx [edi+0A0h] +
mov ecx [ecx+934h] +
mov [ecx+20h] eax +
mov eax [esi+0C8h] +
mov [ecx+24h] edx +
mov edx [esi+0CCh] +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1F4] edi +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1EC] edx +
call sub_411E10  +
test eax eax +
jnz loc_4483BE  +
mov eax [esp+1F4h+var_138] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_455CE0  +
test eax eax +
jnz loc_449CBA  +
jmp loc_4483BE  +
mov eax [ebx+10h] +
xor edx edx +
movzx edi byte ptr [esi+4] +
mov eax [eax+24h] +
mov [esp+1F4h+var_1B8] eax +
div  edi +
movzx edi byte ptr [esi+3] +
mov eax [esp+1F4h+var_1B8] +
test edx edx +
mov edx 0 +
jnz loc_44AC8B  +
div  edi +
test edx edx +
jz loc_44A1A8  +
mov eax ebp +
xor eax 1 +
test cl al +
jnz loc_44A9AE  +
mov ecx 1 +
mov ebp 1 +
jmp loc_44A1A8  +
mov ebp 1 +
xor ecx ecx +
mov eax [edi+0A0h] +
test eax eax +
mov [esp+1F4h+var_1A8] eax +
jz loc_44A995  +
mov ebx eax +
mov [esp+1F4h+var_1A0] edi +
cmp dword ptr [ebx+4] 1 +
jz loc_44ACA7  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44A981  +
mov edi [esp+1F4h+var_1A0] +
test ecx ecx +
jnz loc_44ACFE  +
mov ebx [esp+1F4h+var_1C4] +
jmp loc_449E07  +
test ecx ecx +
jz loc_44AD50  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] offset aBUnableToSortR +
mov [esp+1F4h+var_1F0] eax +
call off_47D664  +
xor edi edi +
xor ebp ebp +
mov [esp+1F4h+var_1F4] 5 +
call sub_4105E0  +
jmp loc_449E49  +
lea eax [esp+1F4h+var_164] +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] offset sub_42A0D0 +
mov [esp+1F4h+var_164] 0 +
mov [esp+1F4h+var_1F4] eax +
call sub_40F8A0  +
mov ecx [esp+1F4h+var_164] +
test ecx ecx +
jnz loc_448DB7  +
jmp loc_44A07C  +
mov eax [esp+1F4h+var_E0] +
test byte ptr [eax+3] 10h +
jz loc_44AAE0  +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+1F4h+var_1F4] offset aPXReadOnlySegm +
call eax  +
jmp loc_44A042  +
mov eax [ebp+24h] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jz loc_44A060  +
mov eax [ebp+3Ch] +
cmp eax offset off_47D510 +
jz loc_44A060  +
and ecx 100000h +
jz loc_44A060  +
mov ecx [ebx+1Ch] +
cmp [ecx+0A0h] ebp +
jz loc_44A060  +
cmp [ecx+0A4h] ebp +
jz loc_44A060  +
mov esi [ebp+0] +
mov ecx 8 +
mov edi offset a_dynstr +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_44AAFB  +
mov edi [esp+1F4h+var_1D4] +
mov ecx [ebp+6Ch] +
mov [esp+1F4h+var_1E0] edi +
mov edi [ebp+38h] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1EC] ecx +
mov [esp+1F4h+var_1E8] edi +
mov [esp+1F4h+var_1F4] eax +
call sub_40F990  +
test eax eax +
jnz loc_44A060  +
jmp loc_448DB7  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+1F4h+var_1F4] offset aPWarningCreati +
call eax  +
jmp loc_44A042  +
mov eax [eax+8Ch] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_411E10  +
test eax eax +
jnz loc_448DB7  +
mov eax [ebx+1Ch] +
mov eax [eax+50h] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_455CE0  +
test eax eax +
jnz loc_44A060  +
jmp loc_448DB7  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
jmp loc_449842  +
xor edi edi +
jmp loc_449743  +
mov eax [esp+1F4h+var_E4] +
call sub_43A960  +
test eax eax +
jz loc_4483BE  +
mov edx [ebx+3Ch] +
jmp loc_4497CD  +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_138] +
mov [esp+1F4h+var_1F4] eax +
call sub_455C40  +
mov [ebx+8] eax +
jmp loc_4499AF  +
mov [esp+1F4h+var_1F4] ebp +
call free  +
jmp loc_4483BE  +
lea esi ds:0[eax*4] +
mov edx [esp+1F4h+var_1D0] +
mov eax [esp+1F4h+var_1D4] +
mov dword ptr [ebx+4] 12h +
mov dword ptr [ebx+28h] 4 +
mov dword ptr [ebx+24h] 4 +
mov [ebx+18h] esi +
mov [esp+1F4h+var_1E8] 1 +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F4] ebx +
call sub_42EA70  +
mov [esp+1F4h+var_1D4] eax +
mov eax [ebx+10h] +
mov [esp+1F4h+var_1D0] edx +
mov edx [ebx+14h] +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F4] eax +
call sub_411E10  +
test eax eax +
jnz loc_4483BE  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_10C] +
mov [esp+1F4h+var_1F4] eax +
call sub_411CB0  +
cmp eax esi +
jnz loc_4483BE  +
mov eax [esp+1F4h+var_E4] +
mov esi [eax+0A0h] +
jmp loc_44A830  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+48h] +
jmp loc_44A6C0  +
mov ecx [esp+1F4h+var_160] +
mov edx [edx+0Ch] +
test ecx ecx +
jz loc_44AC7F  +
cmp ecx edx +
jbe loc_44A7A0  +
mov [esp+1F4h+var_160] edx +
jmp loc_44A7A0  +
div  edi +
test edx edx +
jnz loc_44ACE7  +
mov eax ebp +
test cl al +
jnz loc_44A9AE  +
mov ecx 1 +
xor ebp ebp +
jmp loc_44A1A8  +
mov eax [ebx+10h] +
xor edx edx +
movzx edi byte ptr [esi+4] +
mov eax [eax+24h] +
mov [esp+1F4h+var_1B8] eax +
div  edi +
movzx edi byte ptr [esi+3] +
mov eax [esp+1F4h+var_1B8] +
test edx edx +
mov edx 0 +
jnz loc_44AD42  +
div  edi +
test edx edx +
jz loc_44A98B  +
test ebp ebp +
jz loc_44AD13  +
mov ecx 1 +
mov ebp 1 +
jmp loc_44A98B  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] offset aBUnableToSor_0 +
mov [esp+1F4h+var_1F0] eax +
jmp loc_44A9C0  +
test ebp ebp +
jnz loc_44A99D  +
mov ebx [esp+1F4h+var_1A8] +
mov ecx [esp+1F4h+var_1B0] +
jmp loc_44A65E  +
test ecx ecx +
jz loc_44ACD8  +
mov eax [esp+1F4h+var_E4] +
xor edi edi +
mov [esp+1F4h+var_1F4] offset aBUnableToSortR +
mov [esp+1F4h+var_1F0] eax +
call off_47D664  +
mov [esp+1F4h+var_1F4] 5 +
call sub_4105E0  +
jmp loc_449E49  +
div  edi +
test edx edx +
jnz loc_44ACE7  +
test ebp ebp +
jnz loc_44A9A6  +
mov ecx 1 +
xor ebp ebp +
jmp loc_44A98B  +
***
mov eax [esp+10h] +
mov edx [esp+4] +
mov ecx [esp+14h] +
test eax eax +
jz loc_44AD97  +
movzx edx byte ptr [eax+0Ch] +
cmp dl 3 +
jb loc_44AD94  +
cmp dl 4 +
jbe loc_44AD90  +
cmp dl 5 +
jnz loc_44AD94  +
mov eax [eax+14h] +
mov eax [eax+4] +
retn   +
***
mov eax [eax+14h] +
retn   +
***
xor eax eax +
retn   +
***
mov ecx [ecx+10h] +
mov eax [edx+94h] +
mov [esp+8] ecx +
mov [esp+4] eax +
jmp sub_42E1E0  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_4] +
mov ecx [ebp+20h] +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_14] eax +
mov eax [ebp+4] +
mov edx [eax+4] +
shr edx cl +
test edx edx +
jz loc_44AF21  +
cmp edx [ebp+14h] +
jb loc_44AE60  +
mov ecx [ebp+1Ch] +
sub edx [ebp+18h] +
mov ebx [ecx+edx*4] +
test ebx ebx +
jnz loc_44AE08  +
jmp loc_44AF37  +
mov ebx [ebx+14h] +
movzx edx byte ptr [ebx+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_44AE05  +
mov ecx [ebx+3Ch] +
or byte ptr [ebx+34h] 20h +
test ecx ecx +
jz loc_44AE23  +
or byte ptr [ecx+34h] 20h +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
jz loc_44AE33  +
sub edx 1 +
cmp dl 1 +
jbe loc_44AE86  +
mov [esp+2Ch+arg_10] 0 +
mov [esp+2Ch+arg_C] ebx +
mov [esp+2Ch+arg_8] eax +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+arg_4] eax +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+arg_0] eax +
mov eax [esp+2Ch+var_18] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov ecx [ebp+0Ch] +
lea ebx [edx+edx*4] +
lea ebx [ecx+ebx*4] +
movzx ecx byte ptr [ebx+0Ch] +
shr cl 4 +
test cl cl +
jnz loc_44ADF3  +
mov [esp+2Ch+arg_10] ebx +
mov [esp+2Ch+arg_C] 0 +
jmp loc_44AE3F  +
mov esi [ebx+4] +
mov ecx 8 +
mov edi offset a__start_ +
mov [esp+2Ch+var_10] esi +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_44AF18  +
mov esi [esp+2Ch+var_10] +
mov ecx 7 +
mov edi offset a__stop_ +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jnz loc_44AE33  +
mov esi [esp+2Ch+var_10] +
add esi 7 +
test esi esi +
jz loc_44AE33  +
cmp byte ptr [esi] 0 +
jz loc_44AE33  +
mov edi [esp+2Ch+var_20] +
mov edi [edi+34h] +
test edi edi +
jz loc_44AE33  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] edi +
call sub_40F280  +
test eax eax +
jz loc_44AF06  +
test byte ptr [eax+18h] 8 +
jz loc_44AF2B  +
mov edi [edi+9Ch] +
test edi edi +
jnz loc_44AEF0  +
mov eax [ebp+4] +
jmp loc_44AE33  +
mov esi [esp+2Ch+var_10] +
add esi 8 +
jmp loc_44AED0  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+2Ch+var_14] +
mov dword ptr [esi] 1 +
jmp loc_44AF23  +
mov eax [esp+2Ch+var_20] +
mov esi [esp+2Ch+var_1C] +
mov eax [eax+18h] +
mov edx [esi+94h] +
mov eax [eax+2Ch] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] offset aFPCorruptInput +
call eax  +
xor eax eax +
jmp loc_44AF23  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [esp+5Ch+arg_4] +
mov eax [ebx+8Ch] +
or byte ptr [ebx+18h] 8 +
mov eax [eax+7Ch] +
test eax eax +
jz loc_44AF86  +
test byte ptr [eax+18h] 8 +
jz loc_44B100  +
mov eax [ebx+94h] +
test byte ptr [ebx+14h] 4 +
mov eax [eax+0A0h] +
mov esi [eax+248h] +
jz loc_44B040  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jz loc_44B040  +
cmp ebx esi +
jz loc_44B090  +
mov edx [esp+5Ch+arg_0] +
lea ebp [esp+5Ch+var_34] +
mov ecx ebx +
mov eax ebp +
call sub_43FC70  +
test eax eax +
jz loc_44B168  +
mov eax [esp+5Ch+var_30] +
cmp [esp+5Ch+var_2C] eax +
jbe loc_44B175  +
mov [esp+5Ch+var_44] esi +
mov edi [esp+5Ch+arg_8] +
mov esi [esp+5Ch+arg_0] +
jmp loc_44B005  +
mov eax [esp+5Ch+var_30] +
add eax 0Ch +
cmp [esp+5Ch+var_2C] eax +
mov [esp+5Ch+var_30] eax +
jbe loc_44B171  +
mov [esp+5Ch+var_50] ebp +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] esi +
call sub_44B190  +
test eax eax +
jnz loc_44AFF0  +
mov esi [esp+5Ch+var_44] +
xor ecx ecx +
xor edi edi +
mov byte ptr [esp+5Ch+var_44] 0 +
mov edx ebx +
mov eax ebp +
mov [esp+5Ch+var_40] ecx +
call sub_439700  +
mov ecx [esp+5Ch+var_40] +
jmp loc_44B051  +
test esi esi +
mov ecx 1 +
setnz byte ptr [esp+5Ch+var_44]  +
mov edi 1 +
cmp byte ptr [esp+5Ch+var_44] 0 +
jnz loc_44B090  +
mov eax [ebx+8Ch] +
test cl cl +
mov edx [eax+84h] +
jz loc_44B083  +
test edx edx +
jz loc_44B083  +
test byte ptr [edx+18h] 8 +
mov eax 1 +
jz loc_44B140  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+8Ch] +
mov edx [eax+80h] +
test edx edx +
jz loc_44B130  +
mov edx [esp+5Ch+arg_0] +
mov ecx esi +
xor edi edi +
lea eax [esp+5Ch+var_34] +
call sub_43FC70  +
xor ecx ecx +
test eax eax +
jz loc_44B058  +
lea eax [esp+5Ch+var_34] +
mov [esp+5Ch+var_4C] eax +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
call sub_44E4F0  +
mov edx esi +
test eax eax +
setnz cl  +
lea eax [esp+5Ch+var_34] +
movzx edi cl +
mov [esp+5Ch+var_44] ecx +
call sub_439700  +
mov ecx [esp+5Ch+var_44] +
jmp loc_44B058  +
mov edi [esp+5Ch+arg_8] +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_5C] eax +
call sub_44AF60  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_44AF86  +
jmp loc_44B07B  +
mov ecx 1 +
mov edi 1 +
jmp loc_44B05E  +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
call sub_44AF60  +
test eax eax +
setnz al  +
add esp 5Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
xor edi edi +
jmp loc_44B058  +
mov esi [esp+5Ch+var_44] +
test esi esi +
mov ecx 1 +
setnz byte ptr [esp+5Ch+var_44]  +
mov edi 1 +
jmp loc_44B02A  +
***
push ebx  +
sub esp 30h +
lea eax [esp+30h+var_4] +
mov esi [esp+30h+arg_0] +
mov [esp+30h+var_20] eax +
mov eax [esp+30h+arg_C] +
mov edi [esp+30h+arg_8] +
mov [esp+30h+var_4] 0 +
mov [esp+30h+var_30] esi +
mov [esp+30h+var_24] eax +
mov eax [esp+30h+arg_4] +
mov [esp+30h+var_28] edi +
mov [esp+30h+var_2C] eax +
call sub_44ADB0  +
test eax eax +
mov ebx eax +
jnz loc_44B1F6  +
jmp loc_44B230  +
or byte ptr [ebx+18h] 8 +
mov eax [esp+30h+var_4] +
test eax eax +
jz loc_44B230  +
mov eax [ebx+94h] +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] eax +
call sub_40F2C0  +
test eax eax +
mov ebx eax +
jz loc_44B230  +
test byte ptr [ebx+18h] 8 +
jnz loc_44B1D6  +
mov eax [ebx+94h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_44B1D2  +
test byte ptr [eax+29h] 8 +
jnz loc_44B1D2  +
mov [esp+30h+var_28] edi +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] esi +
call sub_44AF60  +
test eax eax +
jnz loc_44B1D6  +
xor eax eax +
jmp loc_44B235  +
mov eax 1 +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov eax [eax+34h] +
test eax eax +
mov [esp+14h] eax +
jnz loc_44B276  +
jmp loc_44B403  +
mov eax [esp+14h] +
mov eax [eax+9Ch] +
test eax eax +
mov [esp+14h] eax +
jz loc_44B403  +
mov eax [esp+14h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_44B260  +
mov eax [esp+14h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+18h] eax +
jz loc_44B260  +
xor ebx ebx +
xor edx edx +
jmp loc_44B2C0  +
or byte ptr [eax+18h] 8 +
test ebx ebx +
jnz loc_44B2DB  +
and ch 20h +
jz loc_44B2B9  +
mov esi [eax] +
mov edi offset a_debug_line_ +
mov ecx 0Ch +
cmps   +
setz bl  +
movzx ebx bl +
mov eax [eax+0Ch] +
test eax eax +
jz loc_44B2E7  +
mov ecx [eax+14h] +
test ecx 100000h +
jnz loc_44B298  +
test byte ptr [eax+18h] 8 +
mov esi 1 +
cmovnz edx esi +
test ebx ebx +
jz loc_44B2A0  +
mov eax [eax+0Ch] +
mov ebx 1 +
test eax eax +
jnz loc_44B2C0  +
test edx edx +
mov [esp+1Ch] ebx +
jz loc_44B260  +
mov ebp [esp+18h] +
xor esi esi +
jmp loc_44B321  +
test ah 20h +
jnz loc_44B309  +
test al 7 +
jnz loc_44B31A  +
mov eax [ebp+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_44B410  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jz loc_44B378  +
mov eax [ebp+14h] +
test eax 2000000h +
jz loc_44B300  +
mov eax [ebp+8Ch] +
mov ebx 1 +
mov ecx 1 +
mov edi [eax+7Ch] +
mov eax edi +
mov edx [eax+14h] +
mov eax [eax+8Ch] +
test dh 20h +
mov eax [eax+7Ch] +
cmovz ebx esi +
and edx 7 +
cmovnz ecx esi +
cmp edi eax +
jnz loc_44B340  +
or ebx ecx +
jz loc_44B31A  +
or byte ptr [eax+18h] 8 +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
cmp edi eax +
jnz loc_44B360  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_44B321  +
mov eax [esp+1Ch] +
test eax eax +
jz loc_44B260  +
mov ebp [esp+18h] +
test byte ptr [ebp+14h] 10h +
jz loc_44B3F7  +
test byte ptr [ebp+18h] 8 +
jnz loc_44B3F7  +
mov eax [ebp+0] +
mov [esp] eax +
mov [esp+1Ch] eax +
call strlen  +
mov ebx [esp+18h] +
mov esi eax +
lea esi [esi+0] +
test byte ptr [ebx+18h] 8 +
jz loc_44B3F0  +
test byte ptr [ebx+15h] 20h +
jz loc_44B3F0  +
mov edi [ebx] +
mov [esp] edi +
call strlen  +
cmp esi eax +
jnb loc_44B3F0  +
mov ecx [esp+1Ch] +
sub eax esi +
lea edx [edi+eax] +
mov [esp+8] esi +
mov [esp] edx +
mov [esp+4] ecx +
call strncmp  +
test eax eax +
jnz loc_44B3F0  +
and byte ptr [ebx+18h] 0F7h +
nop   +
lea esi [esi+0] +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_44B3B0  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_44B388  +
jmp loc_44B260  +
***
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
or byte ptr [ebp+18h] 8 +
jmp loc_44B31A  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
movzx eax byte ptr [ebx+0Ch] +
mov ecx [esi+78h] +
lea edx [eax-3] +
cmp dl 1 +
jbe loc_44B447  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
movzx edx byte ptr [ebx+33h] +
test dl 4 +
jnz loc_44B489  +
test dl 2 +
jnz loc_44B460  +
and edx 0Ah +
jnz loc_44B43C  +
cmp al 3 +
jnz loc_44B43C  +
nop   +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
jbe loc_44B43C  +
movzx eax byte ptr [esi] +
mov edx eax +
and edx 3 +
cmp dl 1 +
jbe loc_44B4B6  +
movzx eax byte ptr [ebx+34h] +
shr al 1 +
and eax 3 +
cmp eax 1 +
jle loc_44B49E  +
mov eax [ebx+14h] +
or dword ptr [eax+14h] 200000h +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [ebx+4] +
mov eax [esi+7Ch] +
mov [esp+4] edx +
mov [esp] eax +
call sub_426EF0  +
test eax eax +
jz loc_44B489  +
jmp loc_44B43C  +
***
test al 10h +
jnz loc_44B47B  +
test byte ptr [ebx+34h] 10h +
nop   +
jz loc_44B43C  +
test ecx ecx +
jz loc_44B43C  +
mov edx [ebx+4] +
mov eax [ecx+10h] +
mov dword ptr [esp+4] 0 +
mov [esp] ecx +
mov [esp+8] edx +
call eax  +
test eax eax +
jnz loc_44B47B  +
jmp loc_44B43C  +
***
push esi  +
push ebx  +
sub esp 24h +
mov esi [esp+30h] +
mov ebx [esi+40h] +
test ebx ebx +
jnz loc_44B508  +
jmp loc_44B560  +
mov ebx [ebx] +
test ebx ebx +
jz loc_44B560  +
mov eax [ebx+4] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esi+1Ch] +
mov [esp] eax +
call sub_423EB0  +
test eax eax +
jz loc_44B502  +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
ja loc_44B502  +
mov eax [eax+14h] +
cmp eax offset off_47D510 +
jz loc_44B502  +
mov ebx [ebx] +
or dword ptr [eax+14h] 200000h +
test ebx ebx +
jnz loc_44B508  +
lea esi [esi+0] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+64h] +
mov ebp [eax+34h] +
test ebp ebp +
jnz loc_44B595  +
jmp loc_44B622  +
mov ebp [ebp+9Ch] +
test ebp ebp +
jz loc_44B622  +
mov eax [ebp+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_44B587  +
mov edx [esp+64h] +
mov ecx ebp +
lea eax [esp+18h] +
call sub_439610  +
test eax eax +
jz loc_44B627  +
mov ebx [ebp+64h] +
test ebx ebx +
jnz loc_44B5C7  +
jmp loc_44B587  +
***
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_44B587  +
mov esi [ebx] +
mov edi offset a_eh_frame_en_0 +
mov ecx 0Fh +
cmps   +
jnz loc_44B5C0  +
mov edx [esp+64h] +
mov ecx ebp +
mov [esp] ebx +
lea eax [esp+18h] +
call sub_43FBD0  +
test eax eax +
jz loc_44B5C0  +
lea eax [esp+18h] +
mov [esp+8] eax +
mov eax [esp+64h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_44CE40  +
mov eax [esp+18h] +
test eax eax +
jz loc_44B5C0  +
mov edx [ebx+8Ch] +
cmp eax [edx+68h] +
jz loc_44B5C0  +
mov [esp] eax +
call free  +
jmp loc_44B5C0  +
***
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov eax [esp+70h] +
mov edi [esp+74h] +
mov dword ptr [esp+20h] 1 +
mov eax [eax+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1AEh] 1 +
mov [esp+18h] eax +
jz loc_44B666  +
mov eax [edi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_44B680  +
mov dword ptr [esp] offset aWarningGcSecti +
call off_47D664  +
mov eax 1 +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+18h] +
mov eax [eax+0B4h] +
mov [esp] edi +
call eax  +
mov eax [edi+1Ch] +
mov ebp [edi+34h] +
mov [esp+1Ch] eax +
movzx eax byte ptr [edi+3] +
and eax 6 +
cmp al 4 +
jz loc_44B74D  +
test ebp ebp +
jz loc_44B74D  +
lea esi [esp+28h] +
mov dword ptr [esp+4] offset a_eh_frame_0 +
mov [esp] ebp +
call sub_40F280  +
test eax eax +
mov ebx eax +
jnz loc_44B725  +
jmp loc_44B734  +
mov [esp+0Ch] esi +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] ebp +
call sub_44CFA0  +
mov eax [ebx+8Ch] +
mov eax [eax+88h] +
test eax eax +
jz loc_44B706  +
test byte ptr [ebx+16h] 10h +
jnz loc_44B706  +
mov eax [ebp+0A0h] +
mov [eax+248h] ebx +
mov edx ebx +
mov eax esi +
call sub_439700  +
mov [esp+4] ebx +
mov dword ptr [esp] 0 +
call sub_40F2C0  +
test eax eax +
mov ebx eax +
jz loc_44B734  +
mov ecx ebx +
mov edx edi +
mov eax esi +
call sub_43FC70  +
test eax eax +
jnz loc_44B6D0  +
movzx eax byte ptr [edi+3] +
mov ebp [ebp+9Ch] +
and eax 6 +
cmp al 4 +
jz loc_44B74D  +
test ebp ebp +
jnz loc_44B6B4  +
mov eax [esp+1Ch] +
lea ebx [esp+20h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset sub_4393C0 +
mov [esp] eax +
call sub_424620  +
mov eax [esp+20h] +
test eax eax +
jnz loc_44B77B  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+1Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset sub_43FCE0 +
mov [esp] esi +
call sub_424620  +
mov eax [esp+20h] +
test eax eax +
jz loc_44B771  +
mov eax [esi+30h] +
test eax eax +
jnz loc_44BA3F  +
mov esi [edi+34h] +
mov eax [esp+18h] +
test esi esi +
mov ebx [eax+0BCh] +
jz loc_44B85D  +
mov [esp+1Ch] ebx +
mov ebp esi +
mov ebx [esp+70h] +
jmp loc_44B7D5  +
mov ebp [ebp+9Ch] +
test ebp ebp +
jz loc_44B859  +
mov eax [ebp+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_44B7C7  +
mov ecx [esp+18h] +
mov edx [ebx+4] +
mov ecx [ecx+74h] +
mov [esp+4] edx +
mov [esp] eax +
call ecx  +
test eax eax +
jz loc_44B7C7  +
mov esi [ebp+64h] +
test esi esi +
jnz loc_44B817  +
lea esi [esi+0] +
jmp loc_44B7C7  +
***
mov eax [esi+8Ch] +
cmp dword ptr [eax+4] 7 +
jz loc_44B850  +
nop   +
mov esi [esi+0Ch] +
test esi esi +
jz loc_44B7C7  +
test byte ptr [esi+18h] 8 +
jnz loc_44B810  +
mov eax [esi+14h] +
test ah 80h +
jnz loc_44B810  +
test eax 200000h +
jz loc_44B802  +
mov eax [esp+1Ch] +
mov [esp+4] esi +
mov [esp] edi +
mov [esp+8] eax +
call sub_44AF60  +
test eax eax +
jnz loc_44B810  +
xor eax eax +
jmp loc_44B773  +
***
mov eax [eax+7Ch] +
test eax eax +
jnz loc_44B810  +
jmp loc_44B82C  +
***
mov ebx [esp+1Ch] +
mov eax [esp+18h] +
mov eax [eax+0C0h] +
mov [esp+4] ebx +
mov [esp] edi +
call eax  +
mov eax [esp+70h] +
mov esi [edi+34h] +
mov eax [eax+4] +
test esi esi +
mov eax [eax+1B0h] +
mov [esp+18h] eax +
mov ebp [eax+0C4h] +
jnz loc_44B8A1  +
jmp loc_44B9F9  +
mov esi [esi+9Ch] +
test esi esi +
jz loc_44B9F9  +
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_44B893  +
mov ecx [esp+18h] +
mov edx [ecx+74h] +
mov ecx [esp+70h] +
mov ecx [ecx+4] +
mov [esp] eax +
mov [esp+4] ecx +
call edx  +
test eax eax +
jz loc_44B893  +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_44B990  +
jmp loc_44B893  +
***
test ebp ebp +
jz loc_44B985  +
mov eax [ebx+14h] +
test al 4 +
nop   +
jz loc_44B985  +
mov edx [ebx+4Ch] +
test edx edx +
jz loc_44B985  +
test byte ptr [edi+1] 8 +
jz loc_44B900  +
test ah 20h +
jnz loc_44B985  +
cmp dword ptr [ebx+3Ch] offset off_47D510 +
jz loc_44B985  +
movzx eax byte ptr [edi+2] +
mov edx [ebx+94h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
shr al 6 +
and eax 1 +
mov [esp] edx +
mov [esp+10h] eax +
mov [esp+4] ebx +
call sub_43F980  +
test eax eax +
mov edx eax +
jz loc_44B771  +
mov eax [ebx+94h] +
mov [esp+1Ch] edx +
mov [esp+0Ch] edx +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call ebp  +
mov ecx [ebx+8Ch] +
mov edx [esp+1Ch] +
cmp edx [ecx+68h] +
jz loc_44B97D  +
mov [esp] edx +
mov [esp+1Ch] eax +
call free  +
mov eax [esp+1Ch] +
test eax eax +
jz loc_44B771  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_44B893  +
mov edx [ebx+14h] +
test edx 2000000h +
jz loc_44B9B7  +
mov eax [ebx+8Ch] +
mov eax [eax+7Ch] +
movzx ecx byte ptr [eax+18h] +
movzx eax byte ptr [ebx+18h] +
and ecx 8 +
and eax 0FFFFFFF7h +
or eax ecx +
mov [ebx+18h] al +
test byte ptr [ebx+18h] 8 +
jnz loc_44B985  +
test dh 80h +
jnz loc_44B985  +
or dh 80h +
mov [ebx+14h] edx +
test byte ptr [edi+5] 10h +
jz loc_44B8D2  +
mov ecx [ebx+24h] +
test ecx ecx +
jz loc_44B8D2  +
mov eax [ebx] +
mov [esp+4] esi +
mov dword ptr [esp] offset aRemovingUnused +
mov [esp+8] eax +
call off_47D664  +
jmp loc_44B8D2  +
***
mov eax [esp+18h] +
mov [esp+28h] edi +
mov eax [eax+0DCh] +
mov dword ptr [esp+4] offset sub_43A700 +
mov [esp+2Ch] eax +
lea eax [esp+28h] +
mov [esp+8] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_424620  +
mov eax [esp+70h] +
lea ecx [esp+24h] +
mov edx edi +
call sub_439A00  +
mov eax 1 +
jmp loc_44B678  +
***
mov eax [esp+18h] +
mov eax [eax+0B8h] +
mov [esp+8] edi +
mov [esp+4] eax +
mov eax [esp+1Ch] +
mov [esp] eax +
call sub_424620  +
jmp loc_44B7A6  +
***
push ebp  +
xor edx edx +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov esi [esp+34h] +
mov ebp [esp+3Ch] +
mov eax [edi+4] +
mov ecx [edi+0A0h] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ebx byte ptr [eax+5] +
mov eax [ecx+60h] +
div  ebx +
mov ebx [ecx+928h] +
test ebx ebx +
jnz loc_44BAB0  +
sub eax [ecx+68h] +
mov ecx [ecx+218h] +
lea edx [ecx+eax*4] +
cmp ecx edx +
jnz loc_44BAC7  +
jmp loc_44BB00  +
add ecx 4 +
cmp edx ecx +
jz loc_44BB00  +
mov ebx [ecx] +
test ebx ebx +
jz loc_44BAC0  +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
ja loc_44BAC0  +
cmp [ebx+14h] esi +
jnz loc_44BAC0  +
cmp [ebx+18h] ebp +
jnz loc_44BAC0  +
mov eax [ebx+44h] +
test eax eax +
jz loc_44BB2F  +
mov edx [esp+38h] +
test edx edx +
jz loc_44BB50  +
mov edi [esp+38h] +
mov [eax+8] edi +
mov eax 1 +
jmp loc_44BB27  +
mov [esp+0Ch] ebp +
mov [esp+8] esi +
mov [esp+4] edi +
mov dword ptr [esp] offset aBALuNoSymbolFo +
call off_47D664  +
mov dword ptr [esp] 5 +
call sub_4105E0  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov [esp] edi +
call sub_40E220  +
test eax eax +
mov [ebx+44h] eax +
jnz loc_44BAE9  +
xor eax eax +
jmp loc_44BB27  +
***
mov dword ptr [eax+8] 0FFFFFFFFh +
mov eax 1 +
jmp loc_44BB27  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+40h] +
mov esi [esp+48h] +
mov ebx [esp+4Ch] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+0Bh] +
mov eax [esi+44h] +
test eax eax +
jz loc_44BC52  +
cmp [eax] ebx +
ja loc_44BC35  +
mov edx 1 +
movzx edi cl +
mov eax [eax+4] +
shl edx cl +
cmp byte ptr [esi+0Ch] 1 +
mov [esp+14h] edi +
lea edi [edx+ebx] +
jz loc_44BBBE  +
mov edi [esi+2Ch] +
lea ebp [edx+ebx] +
cmp ebx edi +
cmovnb edi ebp +
lea edi [edi+edx-1] +
neg edx  +
and edi edx +
mov edx edi +
shr edx cl +
test eax eax +
mov [esp+18h] ecx +
lea edx ds:4[edx*4] +
jz loc_44BC80  +
sub eax 4 +
mov [esp+4] edx +
mov [esp] eax +
mov [esp+1Ch] edx +
call sub_412C60  +
test eax eax +
mov ebp eax +
jz loc_44BC75  +
mov eax [esi+44h] +
mov ecx [esp+18h] +
mov edx [esp+1Ch] +
mov eax [eax] +
mov dword ptr [esp+4] 0 +
shr eax cl +
lea eax ds:4[eax*4] +
sub edx eax +
add eax ebp +
mov [esp+8] edx +
mov [esp] eax +
call memset  +
mov eax [esi+44h] +
add ebp 4 +
mov ecx [esp+14h] +
mov [eax+4] ebp +
mov [eax] edi +
jmp loc_44BC3B  +
mov ebp [eax+4] +
movzx ecx cl +
shr ebx cl +
mov eax 1 +
mov dword ptr [ebp+ebx*4+0] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov [esp] edx +
mov [esp+14h] ecx +
call sub_40E220  +
mov ecx [esp+14h] +
test eax eax +
mov [esi+44h] eax +
jnz loc_44BB91  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] edx +
call sub_412D60  +
test eax eax +
mov ebp eax +
jnz loc_44BC24  +
xor eax eax +
jmp loc_44BC77  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+48h] +
mov eax [eax+8Ch] +
mov eax [eax+8] +
mov [esp+1Ch] eax +
mov eax [esp+44h] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_44BCF0  +
mov edx [eax] +
mov ecx [esp+1Ch] +
xor eax eax +
and ecx edx +
cmp ecx edx +
jnz loc_44BCE2  +
mov eax [esp+44h] +
mov ecx [esp+1Ch] +
test [eax+4] ecx +
setz al  +
movzx eax al +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+40h] +
mov eax [eax+30h] +
mov eax [eax+4] +
mov edi [eax+1B0h] +
mov eax [esp+44h] +
mov ebx [eax+8] +
test ebx ebx +
jz loc_44BDFE  +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
jmp loc_44BD4D  +
mov edx [ebx] +
test edx edx +
jz loc_44BDBD  +
mov ecx [esp+14h] +
or eax ecx +
cmp edx 1 +
cmovnz eax ecx +
mov [esp+14h] eax +
mov dword ptr [ebx+8] 1 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_44BDDF  +
mov eax [edi+108h] +
test eax eax +
jz loc_44BD63  +
mov edx [ebx+4] +
mov [esp] edx +
call eax  +
test eax eax +
jnz loc_44BD21  +
mov esi [ebx+4] +
xor ebp ebp +
mov eax ds:off_49A540[ebp*8] +
mov [esp] esi +
mov [esp+4] eax +
call strcmp  +
test eax eax +
jz loc_44BDB0  +
add ebp 1 +
cmp ebp 0Ch +
jnz loc_44BD68  +
mov eax [ebx+8] +
test eax eax +
jnz loc_44BD42  +
mov eax [esp+40h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+4] esi +
mov dword ptr [esp] offset aUnrecognizedIn +
call eax  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx] +
test eax eax +
jnz loc_44BDC6  +
mov eax ds:dword_49A544[ebp*8] +
or [esp+18h] eax +
jmp loc_44BD3B  +
***
cmp eax 1 +
jnz loc_44BD3B  +
mov eax ds:dword_49A544[ebp*8] +
or [esp+14h] eax +
jmp loc_44BD3B  +
***
mov edx [esp+18h] +
mov ebp [esp+14h] +
mov eax [esp+44h] +
or edx [eax] +
mov dword ptr [eax+0Ch] 1 +
or [eax+4] ebp +
mov [eax] edx +
jmp loc_44BCC5  +
***
xor ebp ebp +
xor edx edx +
jmp loc_44BDE7  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_4] +
cmp [eax+30h] ecx +
jz loc_44BE49  +
mov [esp+3Ch+var_38] 32FAh +
mov [esp+3Ch+var_3C] offset a____Binutils_3 +
call sub_410530  +
mov eax [esp+3Ch+arg_4] +
mov edx [eax+1Ch] +
xor eax eax +
cmp dword ptr [edx+28h] 1 +
jz loc_44BE60  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_20] +
xor ebp ebp +
test byte ptr [eax+1ADh] 1 +
jz loc_44BF78  +
mov eax [esp+3Ch+arg_4] +
mov ebx [eax+34h] +
test ebx ebx +
jnz loc_44BE91  +
jmp loc_44BF47  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_44BF40  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_44BE83  +
mov eax [ebx+0A0h] +
mov esi [eax+21Ch] +
test esi esi +
jz loc_44BE83  +
mov ecx [eax+928h] +
test ecx ecx +
jz loc_44BF30  +
mov ecx [esp+3Ch+var_20] +
mov eax [eax+60h] +
mov edx [ecx+174h] +
movzx edi byte ptr [edx+5] +
xor edx edx +
div  edi +
mov [esp+3Ch+var_24] eax +
mov edx [esp+3Ch+var_24] +
test edx edx +
jz loc_44BE83  +
xor edi edi +
jmp loc_44BF1D  +
mov eax [esp+3Ch+var_20] +
mov ecx [esp+3Ch+arg_4] +
mov edx [esp+3Ch+arg_0] +
mov [esi+edi*4] ebp +
mov eax [eax+180h] +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_30] ebx +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] edx +
call eax  +
add ebp eax +
add edi 1 +
cmp edi [esp+3Ch+var_24] +
jz loc_44BE83  +
mov eax [esi+edi*4] +
test eax eax +
jg loc_44BEE0  +
mov dword ptr [esi+edi*4] 0FFFFFFFFh +
jmp loc_44BF10  +
mov eax [eax+68h] +
mov [esp+3Ch+var_24] eax +
jmp loc_44BECD  +
mov eax [esp+3Ch+arg_4] +
mov edx [eax+1Ch] +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] offset sub_439480 +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_34] eax +
call sub_424620  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [eax+17Ch] +
jmp loc_44BE73  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov [esp] ebx +
mov [esp+4] esi +
call sub_44BE10  +
test eax eax +
jnz loc_44BFB5  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+24h] esi +
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_448390  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 5Ch +
mov esi [esp+74h] +
test byte ptr [esi+4] 1 +
jnz loc_44BFEC  +
mov eax [esi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_44BFF6  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+70h] +
mov dword ptr [esp+4] offset a_stab +
mov [esp] eax +
call sub_40F280  +
test eax eax +
jz loc_44C0C7  +
mov ebx [eax+0A0h] +
mov dword ptr [esp+1Ch] 0 +
test ebx ebx +
jz loc_44C0D0  +
mov ebp 1 +
jmp loc_44C03E  +
mov ebx [ebx+0A0h] +
test ebx ebx +
jz loc_44C0D0  +
mov edi [ebx+24h] +
test edi edi +
jz loc_44C030  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jz loc_44C030  +
movzx eax word ptr [ebx+18h] +
and ax 380h +
add ax 0FF80h +
jnz loc_44C030  +
mov edi [ebx+94h] +
mov eax [edi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_44C030  +
mov ecx ebx +
mov edx esi +
lea eax [esp+28h] +
call sub_43FC70  +
test eax eax +
jz loc_44C260  +
mov eax [ebx+8Ch] +
lea ecx [esp+28h] +
mov eax [eax+88h] +
mov [esp+10h] ecx +
mov dword ptr [esp+0Ch] offset sub_4394F0 +
mov [esp+4] ebx +
mov [esp+8] eax +
mov [esp] edi +
call sub_458DC0  +
mov edx ebx +
test eax eax +
mov eax [esp+1Ch] +
cmovnz eax ebp +
mov [esp+1Ch] eax +
lea eax [esp+28h] +
call sub_439700  +
jmp loc_44C030  +
***
mov dword ptr [esp+1Ch] 0 +
nop   +
movzx eax byte ptr [esi+3] +
and eax 6 +
cmp al 4 +
jz loc_44C190  +
mov eax [esp+70h] +
mov dword ptr [esp+4] offset a_eh_frame_0 +
mov [esp] eax +
call sub_40F280  +
test eax eax +
jz loc_44C190  +
mov ebx [eax+0A0h] +
test ebx ebx +
jz loc_44C190  +
lea ebp [esp+28h] +
jmp loc_44C11A  +
mov ebx [ebx+0A0h] +
test ebx ebx +
jz loc_44C190  +
mov edx [ebx+24h] +
test edx edx +
jz loc_44C110  +
mov edi [ebx+94h] +
mov eax [edi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_44C110  +
mov ecx ebx +
mov edx esi +
mov eax ebp +
call sub_43FC70  +
test eax eax +
jz loc_44C260  +
mov [esp+0Ch] ebp +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edi +
call sub_44CFA0  +
mov [esp+10h] ebp +
mov dword ptr [esp+0Ch] offset sub_4394F0 +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edi +
call sub_44E590  +
mov edx ebx +
test eax eax +
mov eax 1 +
cmovz eax [esp+1Ch] +
mov [esp+1Ch] eax +
mov eax ebp +
call sub_439700  +
jmp loc_44C110  +
***
mov ebx [esi+34h] +
test ebx ebx +
jz loc_44C216  +
lea ebp [esp+28h] +
jmp loc_44C1AA  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_44C216  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_44C1A0  +
mov edi [eax+1B0h] +
mov eax [edi+110h] +
test eax eax +
jz loc_44C1A0  +
mov ecx ebx +
mov edx esi +
mov eax ebp +
call sub_439610  +
test eax eax +
jz loc_44C260  +
mov eax [edi+110h] +
mov [esp+8] esi +
mov [esp+4] ebp +
mov [esp] ebx +
call eax  +
mov edx [ebx+0A0h] +
test eax eax +
mov eax 1 +
cmovz eax [esp+1Ch] +
mov [esp+1Ch] eax +
mov eax [esp+34h] +
test eax eax +
jz loc_44C1A0  +
cmp eax [edx+78h] +
jz loc_44C1A0  +
mov [esp] eax +
call free  +
jmp loc_44C1A0  +
***
movzx eax byte ptr [esi+3] +
and eax 6 +
cmp al 4 +
jz loc_44C26A  +
test al al +
mov ebx [esp+1Ch] +
jz loc_44BFEC  +
movzx eax byte ptr [esi] +
and eax 3 +
cmp al 2 +
jz loc_44BFEC  +
mov eax [esp+70h] +
mov [esp+4] esi +
mov [esp] eax +
call sub_44EC50  +
test eax eax +
mov eax 1 +
cmovnz ebx eax +
jmp loc_44BFEC  +
***
mov ebx 0FFFFFFFFh +
jmp loc_44BFEC  +
***
mov [esp] esi +
call sub_44E320  +
movzx eax byte ptr [esi+3] +
and eax 6 +
jmp loc_44C221  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+44h] +
cmp dword ptr [ebx+3Ch] offset off_47D510 +
jz loc_44C2AC  +
mov ebp [ebx+14h] +
test ebp 20000h +
jz loc_44C2AC  +
mov eax [ebx+8Ch] +
mov esi [eax+78h] +
test esi esi +
jz loc_44C2B6  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [ebx] +
mov [esp+14h] edx +
mov edx ebp +
and edx 2000000h +
mov [esp+10h] edx +
jz loc_44C3D5  +
mov eax [eax+7Ch] +
test eax eax +
jz loc_44C3D5  +
mov eax [eax+8Ch] +
mov edx [eax+74h] +
test edx edx +
jz loc_44C3D5  +
mov [esp] edx +
call sub_4266B0  +
mov edi [eax+0Ch] +
mov [esp+18h] eax +
test edi edi +
jz loc_44C5D5  +
mov [esp+44h] ebx +
mov esi edi +
mov ebx ebp +
mov [esp+1Ch] edi +
mov ebp [esp+14h] +
jmp loc_44C31D  +
mov esi [esi] +
test esi esi +
jz loc_44C420  +
mov edi [esi+4] +
mov eax [edi+14h] +
xor eax ebx +
test eax 2000000h +
jnz loc_44C34E  +
mov ecx [esp+10h] +
test ecx ecx +
jnz loc_44C5B0  +
mov eax [edi] +
mov [esp] ebp +
mov [esp+4] eax +
call strcmp  +
test eax eax +
jz loc_44C4EB  +
mov eax [edi+94h] +
test byte ptr [eax+2Ah] 20h +
jz loc_44C313  +
mov ebx [esp+44h] +
mov eax [esp+48h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_426780  +
test eax eax +
jz loc_44C2AC  +
mov edx [esp+10h] +
test edx edx +
jz loc_44C3CB  +
mov eax [ebx+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_44C3CB  +
mov ecx [esi+4] +
mov eax [edx+8Ch] +
mov dword ptr [edx+3Ch] offset off_47D510 +
mov [edx+7Ch] ecx +
mov eax [eax+7Ch] +
cmp eax edx +
jnz loc_44C3C7  +
jmp loc_44C3CB  +
mov [eax+7Ch] ecx +
mov dword ptr [eax+3Ch] offset off_47D510 +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
cmp eax edx +
jz loc_44C3CB  +
test eax eax +
jnz loc_44C3B0  +
mov eax 1 +
jmp loc_44C2AE  +
***
mov esi [esp+14h] +
mov ecx 0Eh +
mov edi offset a_gnu_linkonc_1 +
mov edx [esp+14h] +
cmps   +
setnbe cl  +
setb al  +
cmp cl al +
jnz loc_44C2EA  +
mov eax edx +
mov esi edx +
add eax 0Eh +
mov dword ptr [esp+4] 2Eh +
mov [esp] eax +
call strchr  +
lea edx [eax+1] +
test eax eax +
cmovz edx esi +
jmp loc_44C2EA  +
***
mov eax [esp+10h] +
mov edi [esp+1Ch] +
mov ebx [esp+44h] +
test eax eax +
jz loc_44C477  +
mov eax [ebx+8Ch] +
mov eax [eax+7Ch] +
test eax eax +
jz loc_44C44E  +
mov edx [eax+8Ch] +
mov esi [edx+7Ch] +
cmp esi eax +
jz loc_44C56C  +
mov eax [esp+18h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_4266E0  +
test eax eax +
jz loc_44C534  +
xor eax eax +
cmp dword ptr [ebx+3Ch] offset off_47D510 +
setz al  +
jmp loc_44C2AE  +
***
mov eax [edi+4] +
test byte ptr [eax+17h] 2 +
jz loc_44C49A  +
mov eax [eax+8Ch] +
mov ecx [eax+7Ch] +
test ecx ecx +
jz loc_44C49A  +
mov eax [ecx+8Ch] +
mov esi [eax+7Ch] +
cmp esi ecx +
jz loc_44C510  +
mov edi [edi] +
test edi edi +
jnz loc_44C477  +
mov esi [esp+14h] +
mov edi offset a_gnu_linkonc_2 +
mov ecx 10h +
cmps   +
jnz loc_44C44E  +
mov eax [esp+18h] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_44C44E  +
mov ebp 10h +
mov [esp+44h] ebx +
mov edx [eax+4] +
test byte ptr [edx+17h] 2 +
jnz loc_44C4DC  +
mov esi [edx] +
mov edi offset a_gnu_linkonc_3 +
mov ecx ebp +
cmps   +
jz loc_44C54C  +
mov eax [eax] +
test eax eax +
jnz loc_44C4C6  +
mov ebx [esp+44h] +
jmp loc_44C44E  +
***
mov ebx [esp+44h] +
mov eax [esp+48h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_426780  +
test eax eax +
jnz loc_44C3CB  +
jmp loc_44C2AC  +
***
mov ecx [esp+48h] +
mov edx ebx +
mov eax esi +
call sub_439D10  +
test eax eax +
jz loc_44C49A  +
mov dword ptr [ebx+3Ch] offset off_47D510 +
mov [ebx+7Ch] esi +
jmp loc_44C4A0  +
***
mov eax [esp+48h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aFPAlready_li_0 +
call eax  +
jmp loc_44C466  +
***
mov eax [esp+40h] +
cmp [edx+94h] eax +
mov ebx [esp+44h] +
jz loc_44C44E  +
mov dword ptr [ebx+3Ch] offset off_47D510 +
jmp loc_44C44E  +
***
test edi edi +
jnz loc_44C57F  +
jmp loc_44C44E  +
***
mov edi [edi] +
test edi edi +
jz loc_44C44E  +
mov eax [edi+4] +
test byte ptr [eax+17h] 2 +
jnz loc_44C575  +
mov ecx [esp+48h] +
mov edx esi +
call sub_439D10  +
test eax eax +
jz loc_44C575  +
mov eax [edi+4] +
mov dword ptr [esi+3Ch] offset off_47D510 +
mov [esi+7Ch] eax +
mov dword ptr [ebx+3Ch] offset off_47D510 +
jmp loc_44C44E  +
***
mov ebx [esp+44h] +
mov eax [esp+48h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_426780  +
test eax eax +
jnz loc_44C382  +
jmp loc_44C2AC  +
***
cmp dword ptr [esp+10h] 0 +
jnz loc_44C430  +
jmp loc_44C4A0  +
***
mov eax [esp+4] +
cmp dword ptr [eax+10h] 0FFFFFFF2h +
setz al  +
movzx eax al +
retn   +
***
mov eax 0FFFFFFF2h +
retn   +
***
mov eax offset off_47D3C0 +
retn   +
***
mov eax [esp+4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ah] +
shr al 3 +
movzx eax al +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+24h] +
mov eax [esi+8Ch] +
mov ebx [eax+70h] +
test ebx ebx +
jz loc_44C660  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov edx [esi] +
mov ecx [esp+28h] +
mov eax [esp+20h] +
call sub_43C0D0  +
test eax eax +
jz loc_44C656  +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_40F360  +
test eax eax +
mov ebx eax +
jz loc_44C656  +
mov eax [esi+8Ch] +
mov [eax+70h] ebx +
jmp loc_44C656  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov eax [esi+8Ch] +
mov ebx [eax+70h] +
test ebx ebx +
jz loc_44C6C0  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esi] +
mov ecx [esp+30h] +
mov eax [esp+2Ch] +
call sub_43C0D0  +
test eax eax +
mov edi eax +
jz loc_44C6B7  +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_40F360  +
test eax eax +
mov ebx eax +
jz loc_44C6F6  +
mov eax [esi+8Ch] +
mov [eax+70h] ebx +
jmp loc_44C6B7  +
***
mov eax [esi+14h] +
mov [esp+4] edi +
and eax 1 +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFFDh +
add eax 10410Bh +
mov [esp+8] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_40F660  +
test eax eax +
mov ebx eax +
jz loc_44C6EB  +
cmp dword ptr [esp+30h] 1 +
mov edx [eax+8Ch] +
sbb eax eax +
and eax 5 +
add eax 4 +
mov [edx+4] eax +
mov eax [esp+28h] +
mov [ebx+40h] eax +
jmp loc_44C6EB  +
***
sub esp 3Ch +
mov eax [esp+48h] +
mov edx [esp+44h] +
movzx ecx byte ptr [eax+30h] +
mov [edx+30h] cl +
movzx ecx byte ptr [eax+32h] +
movzx eax byte ptr [eax+31h] +
mov [edx+32h] cl +
lea ecx [esp+1Ch] +
mov [esp+29h] al +
mov eax [esp+40h] +
mov eax [eax+4] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 14h +
call sub_43A4C0  +
add esp 3Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [esp+34h] +
mov ebp [esp+38h] +
mov edx [ebx+4] +
mov esi [eax+4Ch] +
mov edi [edx+1B0h] +
lea ecx [esi+1] +
mov edx [eax+6Ch] +
mov [eax+4Ch] ecx +
mov ecx [edi+174h] +
movzx ecx byte ptr [ecx+4] +
imul esi ecx +
add esi edx +
add edx [eax+24h] +
add ecx esi +
mov eax [edi+174h] +
cmp ecx edx +
jbe loc_44C800  +
mov dword ptr [esp+4] 3519h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410530  +
mov eax [edi+174h] +
mov eax [eax+44h] +
mov [esp+38h] esi +
mov [esp+34h] ebp +
mov [esp+30h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [esp+34h] +
mov ebp [esp+38h] +
mov edx [ebx+4] +
mov esi [eax+4Ch] +
mov edi [edx+1B0h] +
lea ecx [esi+1] +
mov edx [eax+6Ch] +
mov [eax+4Ch] ecx +
mov ecx [edi+174h] +
movzx ecx byte ptr [ecx+3] +
imul esi ecx +
add esi edx +
add edx [eax+24h] +
add ecx esi +
mov eax [edi+174h] +
cmp ecx edx +
jbe loc_44C880  +
mov dword ptr [esp+4] 3524h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_410530  +
mov eax [edi+174h] +
mov eax [eax+3Ch] +
mov [esp+38h] esi +
mov [esp+34h] ebp +
mov [esp+30h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi [eax] +
mov [esp+4+var_4] ecx +
mov ebx edi +
jmp loc_44C8BE  +
lea esi [ebx+1] +
mov [eax] esi +
movzx ecx byte ptr [ebx] +
test cl cl +
jns loc_44C8D0  +
mov ebx esi +
cmp edx ebx +
ja loc_44C8B0  +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4+var_4] +
movzx ebp cl +
cmp edi ebx +
mov [eax] ebp +
jb loc_44C8E2  +
jmp loc_44C8F9  +
mov ebp eax +
sub ebx 1 +
movzx eax byte ptr [ebx] +
mov edx [esp+4+var_4] +
shl ebp 7 +
and eax 7Fh +
or eax ebp +
cmp ebx edi +
mov [edx] eax +
jnz loc_44C8E0  +
add esp 4 +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+4] +
mov eax [eax+4] +
retn   +
***
mov ecx eax +
xor eax eax +
test bl 2 +
jnz loc_44C956  +
mov eax [ecx+0Ch] +
cmp eax 4 +
jz loc_44C956  +
test bl 1 +
jz loc_44C958  +
shr bl 2 +
and ebx 1 +
test byte ptr [ecx+5] 10h +
jz loc_44C94A  +
add ebx 1 +
lea ecx [ebx+edx-1] +
add eax ebx +
add eax ecx +
neg edx  +
and eax edx +
pop ebx  +
retn   +
shr bl 2 +
and ebx 1 +
lea ecx [ebx+edx-1] +
neg edx  +
add eax ecx +
and eax edx +
pop ebx  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax [eax] +
cmp edx eax +
jbe loc_44C9C0  +
lea edi [eax+1] +
mov [ebx] edi +
movzx ebp byte ptr [eax] +
mov edx ebp +
and edx 0FFFFFFC0h +
mov [esp+18h+var_15] dl +
movzx edx dl +
cmp [esp+18h+var_15] 0 +
cmovz edx ebp +
cmp edx 0C0h +
ja loc_44C9C0  +
jmp ds:off_49A600[edx*4]  +
mov eax esi +
sub eax edi +
cmp ecx eax +
jbe loc_44CAE8  +
mov [ebx] esi +
nop   +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx esi +
sub edx edi +
cmp edx 7 +
jbe loc_44C9BC  +
add eax 9 +
mov [ebx] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [esp+18h+var_8] +
mov edx esi +
mov eax ebx +
call sub_44C8A0  +
test eax eax +
jz loc_44C9C0  +
mov edx [ebx] +
mov ecx esi +
mov eax [esp+18h+var_8] +
sub ecx edx +
cmp eax ecx +
ja loc_44C9BC  +
add eax edx +
mov [ebx] eax +
mov eax 1 +
jmp loc_44C9C2  +
add eax 2 +
add esi 1 +
jmp loc_44CA35  +
mov edx eax +
mov [ebx] eax +
add eax 1 +
cmp byte ptr [edx-1] 0 +
jns loc_44C9DE  +
cmp eax esi +
jnz loc_44CA28  +
jmp loc_44C9C0  +
add eax 2 +
lea ecx [esi+1] +
jmp loc_44CA55  +
mov edx eax +
mov [ebx] eax +
add eax 1 +
cmp byte ptr [edx-1] 0 +
jns loc_44C9F0  +
cmp eax ecx +
jnz loc_44CA48  +
jmp loc_44C9C0  +
cmp esi edi +
jz loc_44C9BC  +
add eax 2 +
mov [ebx] eax +
mov eax 1 +
jmp loc_44C9C2  +
mov edx esi +
sub edx edi +
cmp edx 1 +
jbe loc_44C9BC  +
add eax 3 +
mov [ebx] eax +
mov eax 1 +
jmp loc_44C9C2  +
mov edx esi +
sub edx edi +
cmp edx 3 +
jbe loc_44C9BC  +
add eax 5 +
mov [ebx] eax +
mov eax 1 +
jmp loc_44C9C2  +
add eax 2 +
lea ecx [esi+1] +
jmp loc_44CAC5  +
mov edx eax +
mov [ebx] eax +
add eax 1 +
cmp byte ptr [edx-1] 0 +
jns loc_44CADF  +
cmp eax ecx +
jnz loc_44CAB8  +
jmp loc_44C9C0  +
add edx 1 +
mov [ebx] edx +
cmp byte ptr [edx-1] 0 +
jns loc_44C9DE  +
cmp esi edx +
ja loc_44CAD0  +
jmp loc_44C9C0  +
add ecx edi +
mov eax 1 +
mov [ebx] ecx +
jmp loc_44C9C2  +
***
mov eax [eax] +
mov eax [eax+8Ch] +
mov eax [eax+88h] +
mov edx [eax+3Ch] +
mov ecx [eax+38h] +
mov eax [esp+arg_4] +
add ecx [edx+1Ch] +
mov eax [eax] +
mov eax [eax+8Ch] +
mov eax [eax+88h] +
mov ebx [eax+3Ch] +
mov edx [eax+38h] +
mov eax 0FFFFFFFFh +
add edx [ebx+1Ch] +
xor ebx ebx +
cmp ecx edx +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
***
push edi  +
mov edi edx +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [ecx+8] +
mov ebx [esp+28h+arg_4] +
lea edx [eax+eax*2] +
mov eax [ebx] +
lea eax [eax+edx*4] +
cmp eax [ebx+8] +
mov [ebx+4] eax +
jnb loc_44CBC0  +
mov edx [ecx+0Ch] +
add edx [ecx+10h] +
cmp [eax] edx +
jb loc_44CB99  +
jmp loc_44CBC0  +
mov edx [ebx+4] +
lea eax [edx+0Ch] +
cmp [ebx+8] eax +
mov [ebx+4] eax +
jbe loc_44CBC0  +
mov eax [ebp+0Ch] +
add eax [ebp+10h] +
cmp [edx+0Ch] eax +
jnb loc_44CBC0  +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_1C] ebx +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_20] eax +
call sub_44B190  +
test eax eax +
jnz loc_44CB80  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
mov eax [ebp+4] +
cmp [ebx+4] eax +
jz loc_44CBF3  +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0] +
cmp [ebx] eax +
jnz loc_44CBE9  +
movzx eax word ptr [ebp+8] +
cmp [ebx+8] ax +
jnz loc_44CBE9  +
lea eax [ebp+0Ah] +
lea esi [ebx+0Ah] +
mov [esp+24h+var_20] eax +
mov [esp+24h+var_24] esi +
call strcmp  +
test eax eax +
jnz loc_44CBE9  +
mov edi offset unk_49A904 +
mov ecx 3 +
cmps   +
setnbe dl  +
setb al  +
sub edx eax +
movsx edi dl +
test edi edi +
jz loc_44CBE9  +
mov eax [ebp+20h] +
xor edi edi +
cmp [ebx+20h] eax +
jnz loc_44CBE9  +
mov eax [ebp+24h] +
cmp [ebx+24h] eax +
jnz loc_44CBE9  +
mov eax [ebp+28h] +
cmp [ebx+28h] eax +
jnz loc_44CBE9  +
mov eax [ebp+2Ch] +
cmp [ebx+2Ch] eax +
jnz loc_44CBE9  +
lea eax [ebp+30h] +
mov [esp+24h+var_20] eax +
lea eax [ebx+30h] +
mov [esp+24h+var_1C] 8 +
mov [esp+24h+var_24] eax +
call memcmp  +
test eax eax +
mov edi eax +
jnz loc_44CCCA  +
mov eax [ebx+38h] +
mov edx [eax] +
mov eax [ebp+38h] +
mov eax [eax] +
mov eax [eax+3Ch] +
cmp [edx+3Ch] eax +
jnz loc_44CBE9  +
mov eax [ebp+3Ch] +
cmp [ebx+3Ch] eax +
jnz loc_44CBE9  +
movzx eax byte ptr [ebx+3Fh] +
cmp al 32h +
ja loc_44CBE9  +
add ebp 41h +
add ebx 41h +
mov [esp+24h+var_1C] eax +
mov [esp+24h+var_20] ebp +
mov [esp+24h+var_24] ebx +
call memcmp  +
test eax eax +
setz al  +
movzx eax al +
mov edi eax +
jmp loc_44CBE9  +
xor edi edi +
jmp loc_44CBE9  +
***
jmp sub_44CCE0  +
***
mov eax 1 +
mov ecx [esp+arg_0] +
mov ebx [edx] +
cmp [ecx] ebx +
ja loc_44CD07  +
jb loc_44CD10  +
mov ebx [edx+4] +
cmp [ecx+4] ebx +
mov edx [edx+4] +
sbb ebx ebx +
cmp [ecx+4] edx +
cmovbe eax ebx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
cmp ecx 4 +
mov ebx [esp+18h+arg_0] +
jz loc_44CD78  +
cmp ecx 8 +
jz loc_44CD65  +
cmp ecx 2 +
jz loc_44CD52  +
mov [esp+18h+var_14] 0C1h +
mov [esp+18h+var_18] offset a____Binutil_25 +
call sub_410530  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
test ebx ebx +
mov eax [eax] +
jz loc_44CDB0  +
mov eax [eax+38h] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
test ebx ebx +
mov eax [eax] +
jz loc_44CDA0  +
mov eax [eax+20h] +
mov [esp+18h+var_18] edx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
mov eax [eax] +
jz loc_44CD90  +
mov eax [eax+2Ch] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
mov eax [eax+28h] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
mov eax [eax+1Ch] +
mov [esp+18h+var_18] edx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax+34h] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
***
mov ebx [esp+18h+arg_0] +
cmp ebx 4 +
jz loc_44CE20  +
cmp ebx 8 +
jz loc_44CE03  +
cmp ebx 2 +
jz loc_44CDF0  +
mov [esp+18h+var_14] 0D2h +
mov [esp+18h+var_18] offset a____Binutil_25 +
call sub_410530  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax] +
mov eax [eax+3Ch] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] ecx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax] +
mov eax [eax+24h] +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_18] ecx +
mov [esp+18h+var_14] 0 +
call eax  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax] +
mov eax [eax+30h] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] ecx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov edx [esp+14h+arg_8] +
mov ecx [ebx+24h] +
mov esi [eax+1Ch] +
mov eax 1 +
test ecx ecx +
jz loc_44CE8D  +
test word ptr [ebx+18h] 380h +
jnz loc_44CE8D  +
mov ecx [ebx+3Ch] +
test ecx ecx +
jz loc_44CE77  +
cmp ecx offset off_47D510 +
jz loc_44CE8D  +
mov eax [edx+4] +
cmp eax [edx+8] +
jz loc_44CE8B  +
mov ecx [edx+20h] +
mov eax [eax+4] +
shr eax cl +
test eax eax +
jnz loc_44CE93  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_C] 0 +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] edx +
call sub_43D6A0  +
test eax eax +
jz loc_44CE8B  +
mov edx [eax+8Ch] +
mov [edx+84h] ebx +
mov edx [eax+3Ch] +
test edx edx +
jz loc_44CECA  +
cmp edx offset off_47D510 +
jz loc_44CF70  +
movzx edx word ptr [ebx+18h] +
and dx 0FC7Fh +
or dh 3 +
mov [ebx+18h] dx +
mov edx [ebx+8Ch] +
mov [edx+88h] eax +
mov edx [esi+0A8h] +
cmp edx [esi+0B0h] +
jz loc_44CF11  +
mov eax [esi+0B4h] +
lea ecx [edx+1] +
mov [esi+0A8h] ecx +
mov [eax+edx*4] ebx +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
test edx edx +
jnz loc_44CF47  +
mov dword ptr [esi+0ACh] 1 +
mov dword ptr [esi+0B0h] 2 +
mov [esp+14h+var_14] 8 +
call sub_412BD0  +
mov [esi+0B4h] eax +
test eax eax +
jz loc_44CF7C  +
mov edx [esi+0A8h] +
jmp loc_44CEFA  +
lea eax [edx+edx] +
mov [esi+0B0h] eax +
mov eax [esi+0B4h] +
shl edx 3 +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_412C60  +
mov [esi+0B4h] eax +
jmp loc_44CF3B  +
or dword ptr [ebx+14h] 8000h +
jmp loc_44CECA  +
mov [esp+14h+var_10] 1F6h +
mov [esp+14h+var_14] offset a____Binutil_25 +
call sub_410530  +
mov eax [esi+0B4h] +
jmp loc_44CF3F  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_4] +
mov ebp [esp+7Ch+arg_8] +
mov edi [esp+7Ch+arg_0] +
mov [esp+7Ch+var_20] 0 +
mov eax [eax+1Ch] +
mov [esp+7Ch+var_64] eax +
mov eax [ebp+24h] +
test eax eax +
jz loc_44CFDA  +
test word ptr [ebp+18h] 380h +
jz loc_44CFE2  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebp+3Ch] offset off_47D510 +
jz loc_44CFDA  +
lea eax [esp+7Ch+var_20] +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] edi +
call sub_40FBE0  +
test eax eax +
jz loc_44D110  +
cmp dword ptr [ebp+24h] 3 +
jbe loc_44D024  +
mov eax [edi+4] +
mov edx [esp+7Ch+var_20] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
test eax eax +
jz loc_44D166  +
mov eax [edi+4] +
mov eax [eax+1B0h] +
mov eax [eax+11Ch] +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] edi +
call eax  +
test eax eax +
mov [esp+7Ch+var_58] eax +
jz loc_44D110  +
mov eax [esp+7Ch+var_20] +
mov ebx [ebp+24h] +
mov [esp+7Ch+var_1C] eax +
add ebx eax +
cmp eax ebx +
jz loc_44DE71  +
mov edx ebx +
sub edx eax +
cmp edx 3 +
mov [esp+7Ch+var_5C] 1 +
mov [esp+7Ch+var_60] 0 +
jbe loc_44D10C  +
mov [esp+7Ch+arg_8] ebp +
mov esi eax +
mov ebp [esp+7Ch+var_5C] +
jmp loc_44D0D3  +
lea ecx [eax+4] +
mov [esp+7Ch+var_1C] ecx +
mov ecx [edi+4] +
mov ecx [ecx+28h] +
mov [esp+7Ch+var_7C] eax +
call ecx  +
mov ecx ebx +
cmp eax 1 +
mov eax [esp+7Ch+var_1C] +
adc [esp+7Ch+var_60] 0 +
sub esi 4 +
sub ecx eax +
cmp esi ecx +
ja loc_44D105  +
add esi eax +
cmp ebx esi +
mov [esp+7Ch+var_1C] esi +
jz loc_44D190  +
mov eax ebx +
add ebp 1 +
sub eax esi +
cmp eax 3 +
jbe loc_44D105  +
lea eax [esi+4] +
mov [esp+7Ch+var_1C] eax +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] esi +
call eax  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_44D489  +
test eax eax +
jz loc_44D190  +
mov eax [esp+7Ch+var_1C] +
mov ecx ebx +
sub ecx eax +
cmp ecx 3 +
ja loc_44D090  +
mov ebp [esp+7Ch+arg_8] +
mov [esp+7Ch+var_1C] ebx +
mov eax [esp+7Ch+arg_4] +
xor esi esi +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+7Ch+var_74] ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aPErrorInBANo_e +
call eax  +
mov eax [esp+7Ch+var_64] +
mov dword ptr [eax+0B8h] 0 +
mov eax [esp+7Ch+var_20] +
test eax eax +
jz loc_44D14E  +
mov [esp+7Ch+var_7C] eax +
call free  +
test esi esi +
jz loc_44CFDA  +
mov [esp+7Ch+var_7C] esi +
call free  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+7Ch+arg_C] +
mov edx [eax+8] +
cmp [eax+4] edx +
jnz loc_44D024  +
mov eax [esp+7Ch+var_20] +
mov [esp+7Ch+var_7C] eax +
call free  +
jmp loc_44CFDA  +
mov eax ebp +
mov [esp+7Ch+var_5C] ebp +
mov ebp [esp+7Ch+arg_8] +
shl eax 5 +
add eax 8 +
mov [esp+7Ch+var_7C] eax +
call sub_412D60  +
test eax eax +
mov [esp+7Ch+var_4C] eax +
jz loc_44D110  +
imul eax [esp+7Ch+var_60] +
mov [esp+7Ch+var_7C] eax +
call sub_412D60  +
test eax eax +
mov esi eax +
jz loc_44D44C  +
mov ebx [edi+4] +
mov ecx [ebp+24h] +
mov eax [esp+7Ch+var_20] +
mov edx [ebx+1B0h] +
test ecx ecx +
mov [esp+7Ch+var_1C] eax +
mov [esp+7Ch+var_48] eax +
mov edx [edx+0BCh] +
mov [esp+7Ch+var_38] edx +
jz loc_44E18F  +
mov edx [esp+7Ch+var_4C] +
mov eax [edx] +
shl eax 5 +
lea eax [edx+eax+8] +
mov edx [esp+7Ch+var_48] +
mov [esp+7Ch+var_50] eax +
mov eax edx +
add eax ecx +
cmp ecx 3 +
jbe loc_44DDFC  +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_40] 0 +
mov [esp+7Ch+var_54] esi +
mov [esp+7Ch+arg_0] edi +
mov [esp+7Ch+arg_8] ebp +
mov edx [esp+7Ch+var_44] +
mov eax edx +
add eax 4 +
mov [esp+7Ch+var_1C] eax +
mov eax [ebx+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov edx [esp+7Ch+var_1C] +
mov ebx edx +
mov esi eax +
mov eax [esp+7Ch+var_20] +
sub ebx eax +
mov ecx ebx +
mov [esp+7Ch+var_34] ebx +
mov ebx [esp+7Ch+arg_8] +
lea ecx [esi+ecx] +
mov edi [ebx+24h] +
cmp ecx edi +
ja loc_44D43A  +
mov ecx [esp+7Ch+var_48] +
lea ebp [edx+esi] +
mov ebx [esp+7Ch+arg_C] +
sub ecx eax +
mov eax ecx +
mov ecx [esp+7Ch+var_50] +
mov [ecx+10h] eax +
lea eax [esi+4] +
mov [esp+7Ch+var_3C] eax +
mov [ecx+0Ch] eax +
mov eax [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov [esp+7Ch+var_48] eax +
sub eax [ebx] +
sar eax 2 +
imul eax eax +
test esi esi +
mov [ecx+8] eax +
jz loc_44E114  +
mov eax ebp +
sub eax edx +
cmp eax 3 +
jbe loc_44D9C2  +
lea eax [edx+4] +
mov [esp+7Ch+var_1C] eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
test eax eax +
jnz loc_44D495  +
mov eax [esp+7Ch+var_50] +
or byte ptr [eax+1Bh] 1 +
mov edx [esp+7Ch+var_40] +
lea ebx [edx+1] +
mov [esp+7Ch+var_3C] ebx +
imul ebx edx +
add ebx [esp+7Ch+var_54] +
mov [ebx+38h] eax +
mov eax [esp+7Ch+var_1C] +
mov [ebx] esi +
cmp ebp eax +
mov [esp+7Ch+var_48] eax +
jbe loc_44D43A  +
lea esi [eax+1] +
mov [esp+7Ch+var_1C] esi +
movzx eax byte ptr [eax] +
lea edx [eax-3] +
cmp dl 1 +
mov [ebx+8] al +
jbe loc_44D337  +
cmp al 1 +
jnz loc_44D43A  +
mov [esp+7Ch+var_7C] esi +
call strlen  +
cmp eax 13h +
ja loc_44D43A  +
lea edx [ebx+0Ah] +
add eax 1 +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_40] edx +
call memcpy  +
mov eax [esp+7Ch+var_1C] +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] eax +
call strchr  +
mov edi [esp+7Ch+arg_C] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_1C] edx +
mov edx [esp+7Ch+arg_C] +
mov edx [edx+4] +
cmp ecx edx +
jbe loc_44D3D6  +
mov esi [esp+7Ch+var_44] +
sub esi [esp+7Ch+var_20] +
cmp esi [edx] +
jbe loc_44D3D6  +
mov edi [edx+4] +
test edi edi +
jnz loc_44D43A  +
add edx 0Ch +
jmp loc_44D3C6  +
cmp [edx] esi +
jnb loc_44D3CC  +
add edx 0Ch +
cmp dword ptr [edx-8] 0 +
jnz loc_44DBE0  +
cmp edx ecx +
mov edi edx +
jb loc_44D3B5  +
mov edi [esp+7Ch+arg_C] +
mov [edi+4] edx +
cmp byte ptr [eax+1] 65h +
jz loc_44DE05  +
cmp byte ptr [ebx+8] 3 +
jbe loc_44D407  +
mov eax [esp+7Ch+var_1C] +
lea edx [eax+1] +
cmp ebp edx +
jbe loc_44D43A  +
movzx edx byte ptr [eax] +
cmp edx [esp+7Ch+var_58] +
jnz loc_44D43A  +
cmp byte ptr [eax+1] 0 +
jnz loc_44D43A  +
add eax 2 +
mov [esp+7Ch+var_1C] eax +
lea ecx [ebx+20h] +
mov edx ebp +
lea eax [esp+7Ch+var_1C] +
call sub_44C8A0  +
test eax eax +
jz loc_44D43A  +
mov edi [esp+7Ch+var_1C] +
mov eax edi +
jmp loc_44D436  +
lea edx [eax+1] +
mov [esp+7Ch+var_1C] edx +
movzx ecx byte ptr [edx-1] +
test cl cl +
jns loc_44D9DF  +
mov eax edx +
cmp ebp eax +
ja loc_44D421  +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov eax [esp+7Ch+arg_4] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+7Ch+var_74] ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aPErrorInBANo_e +
call eax  +
mov eax [esp+7Ch+var_64] +
mov dword ptr [eax+0B8h] 0 +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_7C] eax +
call free  +
jmp loc_44D13E  +
mov ebp [esp+7Ch+arg_8] +
jmp loc_44D110  +
mov edx [esp+7Ch+var_50] +
imul ecx [esp+7Ch+var_40] +
mov ebx [esp+7Ch+var_54] +
mov edx [edx+10h] +
add ecx ebx +
mov [esp+7Ch+var_48] edx +
add edx 4 +
sub edx eax +
cmp ebx ecx +
jnb loc_44DF92  +
mov eax [ebx+38h] +
cmp [eax+10h] edx +
jnz loc_44D4CD  +
jmp loc_44DF92  +
mov eax [ebx+38h] +
cmp [eax+10h] edx +
jz loc_44D4D4  +
add ebx 74h +
cmp ebx ecx +
jb loc_44D4C5  +
cmp ebx ecx +
jz loc_44D43A  +
mov eax [ebx+38h] +
mov edi [esp+7Ch+var_50] +
mov [edi] eax +
mov ecx [ebx+38h] +
movzx eax byte ptr [edi+1Bh] +
movzx edx byte ptr [ecx+1Bh] +
and eax 0FFFFFFF7h +
and edx 8 +
or eax edx +
mov [edi+1Bh] al +
movzx edx byte ptr [ecx+1Bh] +
and eax 0FFFFFFFBh +
and edx 4 +
or eax edx +
mov [edi+1Bh] al +
mov eax [esp+7Ch+arg_C] +
mov edx [eax+4] +
mov esi [eax+8] +
cmp edx esi +
jnb loc_44D559  +
mov ecx [esp+7Ch+var_1C] +
sub ecx [esp+7Ch+var_20] +
cmp ecx [edx] +
jbe loc_44D559  +
mov eax [edx+4] +
test eax eax +
jnz loc_44D43A  +
lea eax [edx+0Ch] +
jmp loc_44D549  +
cmp [eax] ecx +
jnb loc_44D54F  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_44D976  +
cmp eax esi +
mov edx eax +
jb loc_44D537  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
mov eax [esp+7Ch+arg_8] +
test byte ptr [eax+16h] 10h +
jz loc_44D573  +
mov eax [esp+7Ch+arg_C] +
mov eax [eax] +
test eax eax +
jz loc_44D5F0  +
cmp edx esi +
jnb loc_44D43A  +
mov eax [esp+7Ch+var_1C] +
sub eax [esp+7Ch+var_20] +
cmp [edx] eax +
jnz loc_44D43A  +
mov eax [esp+7Ch+arg_C] +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_70] eax +
mov eax [esp+7Ch+var_38] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_7C] eax +
call sub_44ADB0  +
test eax eax +
jz loc_44D5F0  +
mov edx [esp+7Ch+arg_0] +
cmp [eax+94h] edx +
jnz loc_44D43A  +
mov eax [eax+8Ch] +
mov edi [esp+7Ch+var_50] +
mov edx [eax+80h] +
mov [edi+4] edx +
mov [eax+80h] edi +
mov eax [esp+7Ch+var_1C] +
mov [esp+7Ch+var_48] eax +
movzx eax byte ptr [ebx+3Eh] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_44DC13  +
and eax 7 +
cmp al 2 +
jz loc_44DFB7  +
jbe loc_44DC03  +
cmp al 3 +
lea esi [esi+0] +
jz loc_44DF85  +
cmp al 4 +
mov [esp+7Ch+var_34] 8 +
jnz loc_44DC13  +
mov eax [esp+7Ch+var_34] +
lea esi [eax+eax] +
mov [esp+7Ch+var_18] eax +
mov eax ebp +
sub eax [esp+7Ch+var_48] +
cmp esi eax +
ja loc_44D9C2  +
mov edi [esp+7Ch+var_34] +
neg edi  +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
add esi [esp+7Ch+var_48] +
mov eax [eax+4] +
mov ecx [edx+8] +
mov [esp+7Ch+var_1C] esi +
cmp ecx eax +
jbe loc_44E183  +
add edi esi +
mov edx [eax] +
mov esi edi +
sub esi [esp+7Ch+var_20] +
mov [esp+7Ch+var_30] edi +
cmp edx esi +
jnb loc_44D9A1  +
add eax 0Ch +
jmp loc_44D6A2  +
add eax 0Ch +
mov edx [eax-0Ch] +
cmp edx esi +
jnb loc_44D997  +
cmp eax ecx +
mov edi eax +
jb loc_44D694  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
mov eax [esp+7Ch+arg_0] +
mov ecx [esp+7Ch+var_34] +
mov edx [esp+7Ch+var_30] +
mov [esp+7Ch+var_7C] 0 +
add eax 4 +
call sub_44CD20  +
test eax eax +
jz loc_44DF10  +
cmp byte ptr [ebx+0Ah] 7Ah +
jz loc_44DF9B  +
mov [esp+7Ch+var_18] 0 +
cmp byte ptr [ebx+3Dh] 0FFh +
jz loc_44D9AE  +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
mov edi [esp+7Ch+var_1C] +
mov eax [eax+4] +
mov esi [edx+8] +
cmp esi eax +
jbe loc_44D73F  +
mov ecx edi +
sub ecx [esp+7Ch+var_20] +
cmp ecx [eax] +
jbe loc_44DDC8  +
lea edx [eax+0Ch] +
jmp loc_44D72F  +
lea edx [edx+0Ch] +
cmp [edx-0Ch] ecx +
jnb loc_44DDBE  +
cmp edx esi +
mov eax edx +
jb loc_44D723  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
mov edx [esp+7Ch+var_50] +
mov eax edi +
sub eax [esp+7Ch+var_48] +
mov [edx+1Ah] al +
cmp byte ptr [ebx+0Ah] 7Ah +
jz loc_44DF5E  +
mov eax ebp +
sub eax edi +
mov [esp+7Ch+var_18] eax +
add eax edi +
mov edx [esp+7Ch+arg_C] +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+arg_C] +
mov ecx [esp+7Ch+var_44] +
add ecx [esp+7Ch+var_3C] +
mov edx [edx+8] +
mov eax [eax+4] +
mov [esp+7Ch+var_1C] ecx +
cmp edx eax +
jbe loc_44D7B1  +
sub ecx [esp+7Ch+var_20] +
cmp ecx [eax] +
jbe loc_44D7B1  +
add eax 0Ch +
jmp loc_44D7A1  +
add eax 0Ch +
cmp [eax-0Ch] ecx +
jnb loc_44DC2C  +
cmp eax edx +
mov esi eax +
jb loc_44D795  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+3Eh] +
xor edi edi +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_44D7E7  +
and eax 7 +
cmp al 2 +
jz loc_44DF7A  +
jbe loc_44DF4B  +
cmp al 3 +
mov edi 4 +
jz loc_44D7E7  +
cmp al 4 +
mov di 8 +
jnz loc_44DF57  +
mov ecx [esp+7Ch+var_34] +
xor esi esi +
mov [esp+7Ch+var_18] edi +
mov eax ecx +
mov [esp+7Ch+var_10] ecx +
cmp ebp eax +
jbe loc_44D811  +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_44D8D0  +
add eax 1 +
cmp ebp eax +
mov [esp+7Ch+var_10] eax +
ja loc_44D7FB  +
test ecx ecx +
jz loc_44D43A  +
test esi esi +
jz loc_44D82B  +
mov eax [esp+7Ch+var_50] +
test byte ptr [eax+1Bh] 1 +
jnz loc_44D43A  +
mov edx [esp+7Ch+var_50] +
mov eax ecx +
sub eax ebp +
add [edx+0Ch] eax +
cmp ebp ecx +
jz loc_44D845  +
test byte ptr [edx+1Bh] 1 +
jz loc_44D845  +
add [ebx+3Fh] al +
add [ebx] eax +
test esi esi +
jz loc_44D8FA  +
movzx eax byte ptr [ebx+3Eh] +
and eax 70h +
cmp al 10h +
jz loc_44D866  +
mov eax [esp+7Ch+var_50] +
test byte ptr [eax+1Bh] 8 +
jz loc_44D8FA  +
lea eax ds:4[esi*4] +
mov [esp+7Ch+var_7C] eax +
call sub_412BD0  +
mov edx [esp+7Ch+var_50] +
test eax eax +
mov [edx+1Ch] eax +
jz loc_44D43A  +
mov [eax] esi +
mov eax [esp+7Ch+var_34] +
xor esi esi +
mov edi edx +
mov [esp+7Ch+var_14] eax +
jmp loc_44D8AF  +
mov ecx [esp+7Ch+var_18] +
mov edx ebp +
lea eax [esp+7Ch+var_14] +
call sub_44C970  +
test eax eax +
jz loc_44D43A  +
mov eax [esp+7Ch+var_14] +
cmp ebp eax +
jbe loc_44D8FA  +
cmp byte ptr [eax] 1 +
jnz loc_44D894  +
mov edx [edi+1Ch] +
add eax 1 +
add esi 1 +
sub eax [esp+7Ch+var_48] +
mov [edx+esi*4] eax +
jmp loc_44D894  +
xor eax eax +
cmp dl 1 +
setz al  +
mov ecx edi +
add esi eax +
mov edx ebp +
lea eax [esp+7Ch+var_10] +
call sub_44C970  +
test eax eax +
jz loc_44D43A  +
mov ecx [esp+7Ch+var_10] +
mov eax ecx +
jmp loc_44D7F7  +
mov edx [esp+7Ch+var_50] +
or byte ptr [edx+1Bh] 2 +
movzx eax byte ptr [ebx+3Eh] +
mov [edx+18h] al +
movzx eax byte ptr [ebx+3Dh] +
mov [edx+19h] al +
mov eax [esp+7Ch+var_4C] +
mov edx [eax] +
lea ecx [edx+1] +
mov [eax] ecx +
mov eax [esp+7Ch+var_1C] +
mov [esp+7Ch+var_50] edx +
mov edx [esp+7Ch+var_20] +
mov ebx eax +
mov [esp+7Ch+var_44] eax +
sub ebx edx +
mov [esp+7Ch+var_48] eax +
mov eax [esp+7Ch+arg_8] +
mov eax [eax+24h] +
cmp ebx eax +
jz loc_44E2AD  +
add eax edx +
mov ebx [esp+7Ch+var_4C] +
mov edx eax +
sub edx [esp+7Ch+var_44] +
shl ecx 5 +
lea ebx [ebx+ecx+8] +
cmp edx 3 +
mov [esp+7Ch+var_50] ebx +
jbe loc_44DDEA  +
mov eax [esp+7Ch+arg_0] +
mov ebx [eax+4] +
jmp loc_44D238  +
mov edx esi +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [eax+4] edx +
jmp loc_44D44C  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edi +
cmp esi edx +
jnz loc_44D6B2  +
jmp loc_44D6D8  +
mov edi [esp+7Ch+var_1C] +
mov edx ebp +
mov eax [esp+7Ch+var_18] +
sub edx edi +
cmp eax edx +
jbe loc_44D75E  +
mov eax ebp +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [esp+7Ch+var_1C] eax +
jmp loc_44D44C  +
xor ecx 40h +
movzx esi cl +
sub esi 40h +
cmp edi eax +
mov [ebx+24h] esi +
jb loc_44D9F3  +
jmp loc_44DA08  +
mov esi ecx +
sub eax 1 +
movzx ecx byte ptr [eax] +
shl esi 7 +
and ecx 7Fh +
or ecx esi +
cmp eax edi +
mov [ebx+24h] ecx +
jnz loc_44D9F1  +
cmp byte ptr [ebx+8] 1 +
jnz loc_44DBC2  +
cmp ebp edx +
jbe loc_44D43A  +
lea eax [edx+1] +
mov [esp+7Ch+var_1C] eax +
movzx eax byte ptr [edx] +
mov [ebx+28h] eax +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov esi [edx+8] +
cmp esi eax +
jbe loc_44DA82  +
mov edx [esp+7Ch+var_1C] +
sub edx [esp+7Ch+var_20] +
cmp edx [eax] +
jbe loc_44DA82  +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_44D43A  +
add eax 0Ch +
jmp loc_44DA72  +
cmp [eax] edx +
jnb loc_44DA78  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_44DD00  +
cmp eax esi +
mov ecx eax +
jb loc_44DA60  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+0Ah] +
mov byte ptr [ebx+3Dh] 0FFh +
mov byte ptr [ebx+3Eh] 0FFh +
mov byte ptr [ebx+3Ch] 0FFh +
cmp al 65h +
jz loc_44DF6B  +
cmp al 7Ah +
jz loc_44DFC4  +
mov edx [esp+7Ch+var_20] +
mov [esp+7Ch+var_44] edx +
test al al +
jz loc_44DADE  +
cmp al 50h +
jz loc_44DC3B  +
jle loc_44DD21  +
cmp al 52h +
nop   +
jz loc_44DE8B  +
cmp al 53h +
jnz loc_44D43A  +
add [esp+7Ch+var_40] 1 +
mov eax [esp+7Ch+var_40] +
movzx eax byte ptr [eax] +
test al al +
jnz loc_44DAAE  +
mov eax [esp+7Ch+arg_4] +
test byte ptr [eax] 1 +
jnz loc_44E24A  +
cmp byte ptr [ebx+3Eh] 0FFh +
jnz loc_44DAF8  +
mov byte ptr [ebx+3Eh] 0 +
mov ecx [esp+7Ch+var_1C] +
mov esi ebp +
lea edx [ebx+41h] +
sub esi ecx +
mov eax esi +
cmp esi 32h +
mov [ebx+3Fh] al +
mov eax 32h +
cmovbe eax esi +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] eax +
call memcpy  +
mov eax [esp+7Ch+var_1C] +
mov edx [esp+7Ch+arg_C] +
lea ecx [eax+esi] +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+arg_C] +
mov edx [edx+8] +
mov [esp+7Ch+var_1C] ecx +
mov eax [eax+4] +
cmp edx eax +
jbe loc_44DB83  +
sub ecx [esp+7Ch+var_20] +
cmp [eax] ecx +
jnb loc_44DB83  +
cmp dword ptr [eax+4] 0 +
jnz loc_44D43A  +
add eax 0Ch +
jmp loc_44DB73  +
cmp [eax] ecx +
jnb loc_44DB79  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_44D974  +
cmp eax edx +
mov esi eax +
jb loc_44DB61  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
mov eax [esp+7Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_44DBB5  +
mov edi [esp+7Ch+var_50] +
mov [edi] ebx +
movzx eax byte ptr [ebx+3Ch] +
and eax 70h +
cmp al 10h +
movzx eax byte ptr [edi+5] +
setz dl  +
shl edx 3 +
and eax 0FFFFFFF7h +
or eax edx +
mov [edi+5] al +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_40] eax +
jmp loc_44D7B1  +
lea ecx [ebx+28h] +
mov edx ebp +
lea eax [esp+7Ch+var_1C] +
call sub_44C8A0  +
test eax eax +
jnz loc_44DA27  +
jmp loc_44D43A  +
mov edx [esp+7Ch+arg_C] +
mov eax edi +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [edx+4] eax +
jmp loc_44D44C  +
mov edx [esp+7Ch+var_58] +
test al al +
mov [esp+7Ch+var_34] edx +
jz loc_44D636  +
mov [esp+7Ch+var_18] 0 +
xor edi edi +
xor esi esi +
mov [esp+7Ch+var_34] 0 +
jmp loc_44D655  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] esi +
jmp loc_44D7B1  +
mov eax [esp+7Ch+var_1C] +
cmp ebp eax +
jbe loc_44D43A  +
lea edx [eax+1] +
mov [esp+7Ch+var_1C] edx +
movzx eax byte ptr [eax] +
mov ecx eax +
and ecx 60h +
cmp cl 60h +
mov [ebx+3Ch] al +
jz loc_44D43A  +
mov ecx eax +
and ecx 7 +
cmp cl 2 +
jz loc_44E22D  +
jbe loc_44E103  +
cmp cl 3 +
jz loc_44E223  +
cmp cl 4 +
jnz loc_44D43A  +
mov edi 8 +
and eax 70h +
cmp al 50h +
jz loc_44E0DD  +
mov eax [esp+7Ch+var_1C] +
mov esi [esp+7Ch+var_50] +
mov edx eax +
mov [esp+7Ch+var_34] eax +
sub eax [esp+7Ch+var_48] +
mov [esi+4] al +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov esi [esi+8] +
cmp eax esi +
jnb loc_44D43A  +
sub edx [esp+7Ch+var_44] +
cmp [eax] edx +
jnb loc_44E076  +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_44D43A  +
lea ecx [eax+0Ch] +
jmp loc_44DCFA  +
cmp [ecx] edx +
jnb loc_44E06C  +
add ecx 0Ch +
cmp dword ptr [ecx-8] 0 +
jnz loc_44E04B  +
cmp ecx esi +
mov eax ecx +
jb loc_44DCE5  +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [eax+4] ecx +
jmp loc_44D44C  +
cmp al 4Ch +
jnz loc_44D43A  +
mov eax [esp+7Ch+var_1C] +
cmp ebp eax +
jbe loc_44D43A  +
lea esi [eax+1] +
mov edx [esp+7Ch+arg_C] +
mov [esp+7Ch+var_1C] esi +
movzx eax byte ptr [eax] +
mov [ebx+3Dh] al +
mov eax [esp+7Ch+arg_C] +
mov ecx [edx+8] +
mov eax [eax+4] +
cmp ecx eax +
jbe loc_44DD93  +
sub esi [esp+7Ch+var_44] +
cmp [eax] esi +
jnb loc_44DD93  +
cmp dword ptr [eax+4] 0 +
jnz loc_44D43A  +
add eax 0Ch +
jmp loc_44DD83  +
cmp [eax] esi +
jnb loc_44DD89  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_44D976  +
cmp eax ecx +
mov edx eax +
jb loc_44DD71  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+3Dh] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_44D43A  +
and eax 7 +
jz loc_44DACE  +
sub eax 2 +
cmp al 2 +
jbe loc_44DACE  +
jmp loc_44D43A  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
cmp byte ptr [ebx+40h] 0 +
jz loc_44D73F  +
cmp [eax] ecx +
jnz loc_44D73F  +
mov eax [ebx+38h] +
or byte ptr [eax+5] 2 +
mov edi [esp+7Ch+var_1C] +
jmp loc_44D73F  +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [esp+7Ch+var_1C] eax +
jmp loc_44D44C  +
cmp byte ptr [eax+2] 68h +
jnz loc_44D3E0  +
mov eax ebp +
sub eax [esp+7Ch+var_44] +
cmp [esp+7Ch+var_58] eax +
ja loc_44D9C2  +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_44] +
add esi [esp+7Ch+var_58] +
mov eax [eax+4] +
mov [esp+7Ch+var_1C] esi +
cmp ecx eax +
jbe loc_44D3E0  +
sub esi [esp+7Ch+var_20] +
cmp [eax] esi +
jnb loc_44D3E0  +
add eax 0Ch +
jmp loc_44DE5C  +
add eax 0Ch +
cmp [eax-0Ch] esi +
jnb loc_44E214  +
cmp eax ecx +
mov edx eax +
jb loc_44DE50  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
jmp loc_44D3E0  +
mov eax 8 +
mov [esp+7Ch+var_60] 0 +
mov [esp+7Ch+var_5C] 0 +
jmp loc_44D1A3  +
mov eax [esp+7Ch+var_1C] +
cmp ebp eax +
jbe loc_44D43A  +
lea edx [eax+1] +
mov edi [esp+7Ch+arg_C] +
mov [esp+7Ch+var_1C] edx +
movzx eax byte ptr [eax] +
mov [ebx+3Eh] al +
mov eax [esp+7Ch+arg_C] +
mov esi [edi+8] +
mov eax [eax+4] +
cmp eax esi +
jnb loc_44DEF5  +
sub edx [esp+7Ch+var_44] +
cmp edx [eax] +
jbe loc_44DEF5  +
cmp dword ptr [eax+4] 0 +
jnz loc_44D43A  +
add eax 0Ch +
jmp loc_44DEE5  +
cmp [eax] edx +
jnb loc_44DEEB  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_44DD00  +
cmp eax esi +
mov ecx eax +
jb loc_44DED3  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+3Eh] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jnz loc_44DDA5  +
jmp loc_44D43A  +
mov eax [esp+7Ch+arg_4] +
mov edx [esp+7Ch+arg_8] +
mov eax [eax+18h] +
mov eax [eax+34h] +
mov [esp+7Ch+var_74] edx +
mov edx [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] offset aDiscardingZero +
mov [esp+7Ch+var_78] edx +
call eax  +
mov eax [esp+7Ch+var_50] +
mov dword ptr [eax] 0 +
jmp loc_44D6D8  +
test al al +
mov edi [esp+7Ch+var_58] +
jz loc_44D7E7  +
xor edi edi +
jmp loc_44D7E7  +
mov edx ebp +
mov eax [esp+7Ch+var_18] +
sub edx edi +
jmp loc_44D9BA  +
cmp byte ptr [ebx+0Bh] 68h +
jnz loc_44DAA2  +
jmp loc_44DADE  +
mov edi 2 +
nop   +
jmp loc_44D7E7  +
mov [esp+7Ch+var_34] 4 +
jmp loc_44D636  +
mov ebx [esp+7Ch+var_54] +
jmp loc_44D4D4  +
lea ecx [esp+7Ch+var_18] +
mov edx ebp +
lea eax [esp+7Ch+var_1C] +
call sub_44C8A0  +
test eax eax +
jnz loc_44D6EA  +
jmp loc_44D43A  +
mov [esp+7Ch+var_34] 2 +
jmp loc_44D636  +
lea eax [ebx+0Bh] +
mov edx ebp +
mov [esp+7Ch+var_40] eax +
lea ecx [ebx+2Ch] +
lea eax [esp+7Ch+var_1C] +
call sub_44C8A0  +
test eax eax +
jz loc_44D43A  +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov ecx [edx+8] +
cmp ecx eax +
jbe loc_44E2BD  +
mov edx [esp+7Ch+var_20] +
mov edi edx +
mov [esp+7Ch+var_44] edx +
mov edx [esp+7Ch+var_1C] +
sub edx edi +
cmp edx [eax] +
jbe loc_44E042  +
cmp dword ptr [eax+4] 0 +
jnz loc_44D43A  +
add eax 0Ch +
jmp loc_44E032  +
cmp [eax] edx +
jnb loc_44E038  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_44D974  +
cmp eax ecx +
mov esi eax +
jb loc_44E020  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+0Bh] +
jmp loc_44DAAA  +
mov edx [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [edx+4] eax +
jmp loc_44D44C  +
mov esi [esp+7Ch+arg_C] +
mov [esi+4] ecx +
mov ecx [eax] +
cmp ecx edx +
jnz loc_44D43A  +
mov edx [esp+7Ch+arg_C] +
sub eax [edx] +
sar eax 2 +
imul eax eax +
mov [ebx+30h] eax +
mov eax [edx+4] +
mov edx [edx+8] +
mov [esp+7Ch+var_30] eax +
mov eax [esp+7Ch+var_30] +
jmp loc_44E0B1  +
cmp ecx [eax] +
jnz loc_44E0B8  +
test eax eax +
jz loc_44E237  +
add eax 0Ch +
cmp eax edx +
jb loc_44E0A5  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
mov eax ebp +
sub eax [esp+7Ch+var_34] +
cmp edi eax +
ja loc_44D9C2  +
add edi [esp+7Ch+var_34] +
mov [esp+7Ch+var_1C] edi +
jmp loc_44DACE  +
mov ecx [esp+7Ch+var_44] +
lea eax [edi-1] +
sub ecx edx +
and eax ecx +
mov ecx ebp +
sub ecx edx +
cmp eax ecx +
mov [esp+7Ch+var_18] eax +
ja loc_44D9C2  +
add eax edx +
mov [esp+7Ch+var_1C] eax +
jmp loc_44DC98  +
test cl cl +
jnz loc_44D43A  +
mov edi [esp+7Ch+var_58] +
jmp loc_44DC8D  +
mov ebx [esp+7Ch+var_34] +
mov eax edi +
mov esi [esp+7Ch+var_54] +
mov ecx [esp+7Ch+var_48] +
mov edi [esp+7Ch+arg_0] +
cmp ebx eax +
mov ebp [esp+7Ch+arg_8] +
jnz loc_44D44C  +
mov eax [esp+7Ch+arg_C] +
mov eax [eax+8] +
cmp eax ecx +
jbe loc_44E17A  +
cmp [ecx] ebx +
jnb loc_44E17A  +
cmp dword ptr [ecx+4] 0 +
jnz loc_44D44C  +
add ecx 0Ch +
jmp loc_44E16A  +
cmp [ecx] ebx +
jnb loc_44E170  +
add ecx 0Ch +
cmp dword ptr [ecx-8] 0 +
jnz loc_44E2C6  +
cmp ecx eax +
mov edx ecx +
jb loc_44E159  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] ecx +
mov eax [esp+7Ch+var_4C] +
add dword ptr [eax] 1 +
jmp loc_44E197  +
lea eax [esi+edi] +
mov [esp+7Ch+var_30] eax +
jmp loc_44D6B2  +
mov [esp+7Ch+var_40] 0 +
mov eax [esp+7Ch+var_4C] +
mov edx [esp+7Ch+var_5C] +
cmp [eax] edx +
jz loc_44E1B7  +
mov [esp+7Ch+var_78] 3F8h +
mov [esp+7Ch+var_7C] offset a____Binutil_25 +
call sub_410530  +
mov eax [esp+7Ch+var_60] +
cmp [esp+7Ch+var_40] eax +
jz loc_44E1D5  +
mov [esp+7Ch+var_78] 3F9h +
mov [esp+7Ch+var_7C] offset a____Binutil_25 +
call sub_410530  +
mov eax [ebp+8Ch] +
mov edx [esp+7Ch+var_4C] +
mov [eax+88h] edx +
movzx eax word ptr [ebp+18h] +
and ax 0FC7Fh +
or ax 180h +
mov [ebp+18h] ax +
mov eax [esp+7Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_44D13E  +
mov [edx+4] esi +
xor esi esi +
jmp loc_44D13E  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
jmp loc_44D3E0  +
mov edi 4 +
jmp loc_44DC8D  +
mov edi 2 +
jmp loc_44DC8D  +
mov eax [esp+7Ch+arg_C] +
mov dword ptr [eax+4] 0 +
jmp loc_44E0C2  +
mov eax [esp+7Ch+arg_0] +
mov edx [esp+7Ch+arg_8] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+120h] +
mov [esp+7Ch+var_74] edx +
mov edx [esp+7Ch+arg_4] +
mov [esp+7Ch+var_78] edx +
mov edx [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] edx +
call eax  +
test eax eax +
jz loc_44DAEE  +
movzx eax byte ptr [ebx+3Eh] +
test al 70h +
jnz loc_44E2D5  +
mov eax [esp+7Ch+var_50] +
or byte ptr [eax+1Bh] 8 +
test byte ptr [ebx+3Dh] 70h +
jnz loc_44DAEE  +
mov byte ptr [ebx+40h] 1 +
jmp loc_44DAEE  +
mov esi [esp+7Ch+var_54] +
mov ebp [esp+7Ch+arg_8] +
jmp loc_44E197  +
movzx eax byte ptr [ebx+0Bh] +
jmp loc_44DAA2  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
jmp loc_44D44C  +
add al 1 +
jnz loc_44E29A  +
movzx eax byte ptr [ebx+3Ch] +
and eax 70h +
cmp al 50h +
jz loc_44E29A  +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_44E302  +
mov eax [esp+7Ch+var_50] +
movzx eax byte ptr [eax+1Bh] +
mov edx [esp+7Ch+var_50] +
or eax 8 +
or byte ptr [edx+5] 10h +
mov [edx+1Bh] al +
jmp loc_44E29A  +
mov edx [esp+7Ch+var_50] +
movzx eax byte ptr [edx+1Bh] +
or eax 4 +
mov [edx+1Bh] al +
jmp loc_44E2F2  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
movzx edx byte ptr [eax+3] +
mov ebx [eax+1Ch] +
xor eax eax +
and edx 6 +
cmp dl 4 +
jz loc_44E344  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+0A8h] +
test edi edi +
jz loc_44E33C  +
mov edx [ebx+0B4h] +
xor ebp ebp +
jmp loc_44E365  +
mov edi [ebx+0A8h] +
add ebp 1 +
cmp ebp edi +
jnb loc_44E3C5  +
mov ecx [edx+ebp*4] +
lea eax ds:0[ebp*4] +
test byte ptr [ecx+15h] 80h +
jz loc_44E358  +
lea ecx [ebp+1] +
cmp ecx edi +
jnb loc_44E3A5  +
mov [esp+2Ch+var_1C] ebp +
jmp loc_44E38A  +
mov edx [ebx+0B4h] +
mov eax esi +
mov ebp [edx+eax+4] +
add ecx 1 +
cmp ecx edi +
lea esi [eax+4] +
mov [edx+eax] ebp +
jnz loc_44E382  +
mov ebp [esp+2Ch+var_1C] +
mov edx [ebx+0B4h] +
sub ebp 1 +
sub edi 1 +
add ebp 1 +
cmp ebp edi +
mov [ebx+0A8h] edi +
mov dword ptr [edx+edi*4] 0 +
mov edx [ebx+0B4h] +
jb loc_44E365  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_20] offset sub_44CB00 +
mov [esp+2Ch+var_24] 4 +
mov [esp+2Ch+var_2C] edx +
call qsort  +
mov eax [ebx+0A8h] +
mov edi [ebx+0B4h] +
mov [esp+2Ch+var_10] ebx +
sub eax 1 +
mov [esp+2Ch+var_18] edi +
mov ebp [edi] +
xor edi edi +
mov [esp+2Ch+var_1C] eax +
cmp edi [esp+2Ch+var_1C] +
jnb loc_44E4AA  +
add edi 1 +
lea eax ds:0[edi*4] +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+var_18] +
mov edx [eax+edi*4] +
test edx edx +
jz loc_44E458  +
mov eax [ebp+8Ch] +
mov ecx [edx+8Ch] +
mov eax [eax+88h] +
mov ecx [ecx+88h] +
mov ebx [eax+3Ch] +
mov esi [eax+38h] +
add esi [ebx+1Ch] +
add esi [eax+24h] +
mov eax [ecx+3Ch] +
mov ecx [ecx+38h] +
add ecx [eax+1Ch] +
cmp esi ecx +
jz loc_44E4E0  +
mov edx [ebp+28h] +
test edx edx +
mov edx [ebp+24h] +
jnz loc_44E465  +
mov [ebp+28h] edx +
mov eax [ebp+94h] +
add edx 8 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call sub_40F950  +
mov ebx [esp+2Ch+var_10] +
mov eax [ebx+0A8h] +
mov esi [ebx+0B4h] +
mov ebx [esp+2Ch+var_14] +
sub eax 1 +
mov [esp+2Ch+var_1C] eax +
cmp edi [esp+2Ch+var_1C] +
mov [esp+2Ch+var_18] esi +
mov ebp [esi+ebx] +
jb loc_44E40A  +
mov eax [ebp+28h] +
mov edx [ebp+24h] +
test eax eax +
jnz loc_44E4B7  +
mov [ebp+28h] edx +
mov eax [ebp+94h] +
add edx 8 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call sub_40F950  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp edx +
jmp loc_44E400  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov ebp [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_C] +
mov esi [esp+1Ch+arg_10] +
mov eax [eax+8Ch] +
mov ebx [eax+80h] +
test ebx ebx +
jnz loc_44E527  +
jmp loc_44E580  +
mov ebx [ebx+4] +
test ebx ebx +
jz loc_44E580  +
mov edx [esp+1Ch+arg_8] +
mov ecx ebx +
mov eax ebp +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] edi +
call sub_44CB50  +
test eax eax +
jz loc_44E570  +
mov ecx [ebx] +
test ecx ecx +
jz loc_44E520  +
movzx eax byte ptr [ecx+5] +
test al 1 +
jnz loc_44E520  +
or eax 1 +
mov [ecx+5] al +
mov edx [esp+1Ch+arg_8] +
mov eax ebp +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] edi +
call sub_44CB50  +
test eax eax +
jnz loc_44E520  +
lea esi [esi+0] +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_8] +
movzx edx word ptr [eax+18h] +
xor eax eax +
and dx 380h +
cmp dx 180h +
jz loc_44E5B5  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+3Ch+arg_8] +
mov edx [edi+8Ch] +
mov ecx [edx+88h] +
test ecx ecx +
mov esi ecx +
mov [esp+3Ch+var_2C] ecx +
jz loc_44E5AD  +
mov eax [edi+94h] +
lea ebx [esi+8] +
mov ebp ebx +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+11Ch] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] eax +
call edx  +
mov edx [esi] +
mov edi [esp+3Ch+arg_0] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+1Ch] +
mov [esp+3Ch+var_28] eax +
mov eax edx +
shl eax 5 +
lea eax [esi+eax+8] +
cmp ebx eax +
lea esi [edi+4] +
mov [esp+3Ch+var_1C] esi +
jnb loc_44E9CC  +
mov [esp+3Ch+var_20] ebx +
mov ebx [esp+3Ch+var_2C] +
cmp dword ptr [ebp+0Ch] 4 +
jz loc_44EA40  +
test byte ptr [ebp+1Bh] 1 +
jnz loc_44E9B4  +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_44E9B4  +
mov eax [esp+3Ch+arg_8] +
test byte ptr [eax+16h] 10h +
mov eax [esp+3Ch+arg_10] +
mov edx [eax] +
jz loc_44E65E  +
test edx edx +
jz loc_44EA90  +
mov eax [ebp+8] +
mov edi [esp+3Ch+arg_10] +
lea eax [eax+eax*2] +
lea eax [edx+eax*4] +
cmp eax [edi+8] +
mov [edi+4] eax +
jnb loc_44E67D  +
mov esi [ebp+10h] +
lea edx [esi+8] +
cmp [eax] edx +
jz loc_44E697  +
mov [esp+3Ch+var_38] 552h +
mov [esp+3Ch+var_3C] offset a____Binutil_25 +
call sub_410530  +
mov eax [ebp+10h] +
lea edx [eax+8] +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_38] eax +
call [esp+3Ch+arg_C]  +
test eax eax +
setz al  +
movzx eax al +
test eax eax +
jz loc_44E9B2  +
mov eax [esp+3Ch+arg_4] +
test byte ptr [eax] 1 +
jz loc_44E703  +
movzx eax byte ptr [ebp+18h] +
and eax 70h +
jnz loc_44EA78  +
test byte ptr [ebp+1Bh] 8 +
jnz loc_44E703  +
mov eax [esp+3Ch+var_28] +
mov edi [esp+3Ch+arg_8] +
mov dword ptr [eax+0B8h] 0 +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_34] edi +
mov edi [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] offset aPFdeEncodingIn +
mov [esp+3Ch+var_38] edi +
call eax  +
and byte ptr [ebp+1Bh] 0FDh +
mov eax [esp+3Ch+var_28] +
add dword ptr [eax+0B4h] 1 +
mov edi [ebp+0] +
movzx eax byte ptr [edi+1Bh] +
test al 2 +
jz loc_44E9AF  +
test byte ptr [edi+5] 20h +
jnz loc_44EA85  +
and eax 0FFFFFFFDh +
mov esi [edi] +
mov [edi+1Bh] al +
mov eax [esp+3Ch+arg_8] +
test esi esi +
mov [edi] eax +
jz loc_44E9AF  +
cmp byte ptr [esi+3Ch] 0FFh +
jz loc_44EBB1  +
mov eax [esi+30h] +
lea ecx [esi+30h] +
mov [esp+3Ch+var_18] ecx +
lea edx [eax+eax*2] +
mov eax [esp+3Ch+arg_10] +
mov eax [eax] +
mov dword ptr [esi+30h] 0 +
mov dword ptr [esi+34h] 0 +
mov ecx [eax+edx*4+4] +
mov eax [esp+3Ch+arg_10] +
shr ecx 8 +
cmp ecx [eax+14h] +
jnb loc_44E798  +
mov edx [esp+3Ch+arg_10] +
lea eax [ecx+ecx*4] +
mov edx [edx+0Ch] +
lea edx [edx+eax*4] +
movzx eax byte ptr [edx+0Ch] +
shr al 4 +
test al al +
jz loc_44EAFF  +
mov edx [esp+3Ch+arg_10] +
mov eax ecx +
sub eax [edx+18h] +
mov edx [edx+1Ch] +
mov eax [edx+eax*4] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
ja loc_44E7C2  +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_44E7B3  +
mov ecx [esp+3Ch+arg_4] +
mov [esi+30h] eax +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] ecx +
call sub_440180  +
test eax eax +
jnz loc_44EB46  +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] esi +
call sub_46B3E0  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+8] +
mov [esp+3Ch+var_3C] eax +
call sub_46B3E0  +
lea edx [esi+0Ah] +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_14] edx +
mov [esp+3Ch+var_10] eax +
call strlen  +
mov ecx [esp+3Ch+var_10] +
mov edx [esp+3Ch+var_14] +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_3C] edx +
add eax 1 +
mov [esp+3Ch+var_38] eax +
call sub_46B3E0  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+20h] +
mov [esp+3Ch+var_3C] eax +
call sub_46B3E0  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+24h] +
mov [esp+3Ch+var_3C] eax +
call sub_46B3E0  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+28h] +
mov [esp+3Ch+var_3C] eax +
call sub_46B3E0  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+2Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_46B3E0  +
mov [esp+3Ch+var_38] 8 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call sub_46B3E0  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
mov eax [esi+38h] +
mov eax [eax] +
add eax 3Ch +
mov [esp+3Ch+var_3C] eax +
call sub_46B3E0  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_46B3E0  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Dh] +
mov [esp+3Ch+var_3C] eax +
call sub_46B3E0  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Eh] +
mov [esp+3Ch+var_3C] eax +
call sub_46B3E0  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Fh] +
mov [esp+3Ch+var_3C] eax +
call sub_46B3E0  +
movzx edx byte ptr [esi+3Fh] +
cmp edx 32h +
mov [esp+3Ch+var_34] eax +
mov eax 32h +
cmova edx eax +
lea eax [esi+41h] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call sub_46B3E0  +
mov ecx [esp+3Ch+var_28] +
mov edx [ecx+0B0h] +
mov [esi+4] eax +
test edx edx +
jz loc_44EBBD  +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_30] 1 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_38] esi +
call sub_46AFF0  +
test eax eax +
mov edx eax +
jz loc_44E9AF  +
mov eax [eax] +
test eax eax +
jz loc_44EC1B  +
movzx edx byte ptr [edi+5] +
or byte ptr [edi+1Bh] 2 +
or edx 20h +
mov [edi+5] dl +
mov ecx [eax+38h] +
and edx 2 +
mov [edi] ecx +
jz loc_44E9AC  +
mov edx [eax+38h] +
or byte ptr [edx+5] 2 +
mov edi [eax+38h] +
mov [ebp+0] edi +
mov edx [ebx] +
mov eax edx +
add ebp 20h +
shl eax 5 +
lea eax [ebx+eax+8] +
cmp ebp eax +
jb loc_44E627  +
mov ebx [esp+3Ch+var_20] +
mov eax [esp+3Ch+var_2C] +
mov eax [eax+4] +
test eax eax +
jz loc_44E9EC  +
mov [esp+3Ch+var_3C] eax +
call free  +
mov eax [esp+3Ch+var_2C] +
mov edx [eax] +
mov dword ptr [eax+4] 0 +
mov eax [esp+3Ch+var_2C] +
shl edx 5 +
xor edi edi +
lea esi [eax+edx+8] +
cmp ebx esi +
jnb loc_44EA1C  +
mov ebp [esp+3Ch+var_24] +
test byte ptr [ebx+1Bh] 2 +
jnz loc_44EA15  +
mov [ebx+14h] edi +
mov edx ebp +
mov eax ebx +
call sub_44C920  +
add edi eax +
add ebx 20h +
cmp ebx esi +
jb loc_44EA01  +
mov eax [esp+3Ch+arg_8] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+24h] +
mov [esi+24h] edi +
cmp edi eax +
mov [esi+28h] eax +
setnz al  +
add esp 3Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_8] +
mov esi [eax+0A0h] +
movzx eax byte ptr [ebp+1Bh] +
test esi esi +
setnz dl  +
and eax 0FFFFFFFDh +
add edx edx +
add ebp 20h +
or eax edx +
mov [ebp-5] al +
mov edx [ebx] +
mov eax edx +
shl eax 5 +
lea eax [ebx+eax+8] +
cmp ebp eax +
jb loc_44E627  +
jmp loc_44E9C8  +
cmp al 50h +
jnz loc_44E703  +
jmp loc_44E6D2  +
mov edi [edi] +
mov [ebp+0] edi +
jmp loc_44E9B2  +
movzx eax byte ptr [ebp+18h] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_44EBA8  +
mov edx eax +
and edx 7 +
cmp dl 2 +
jz loc_44EBFD  +
jbe loc_44EB9A  +
cmp dl 3 +
jz loc_44EC0C  +
cmp dl 4 +
mov esi 8 +
mov ecx 8 +
jnz loc_44EBA8  +
mov edx [ebp+10h] +
shr al 3 +
and eax 1 +
lea edx [esi+edx+8] +
mov esi [esp+3Ch+arg_8] +
add edx [esi+6Ch] +
mov [esp+3Ch+var_3C] eax +
mov eax [esp+3Ch+var_1C] +
call sub_44CD20  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_44E6AE  +
mov eax [edx+10h] +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_42E1E0  +
test eax eax +
jz loc_44E9AF  +
mov edx [eax+7Ch] +
test edx edx +
cmovz edx eax +
mov eax [edx+3Ch] +
test eax eax +
jz loc_44E9AF  +
mov eax [esp+3Ch+arg_0] +
mov byte ptr [esi+9] 1 +
mov ecx [esp+3Ch+var_14] +
mov eax [eax+24h] +
mov [esi+34h] ecx +
mov [esi+30h] eax +
mov eax [esp+3Ch+arg_4] +
test byte ptr [eax] 1 +
jz loc_44E7E5  +
test byte ptr [esi+3Ch] 70h +
jnz loc_44E7E5  +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_8] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+120h] +
mov [esp+3Ch+var_34] ecx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] ecx +
mov ecx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] ecx +
call eax  +
test eax eax +
jz loc_44E7E5  +
or byte ptr [edi+5] 0Ch +
jmp loc_44E7E5  +
mov ecx [esp+3Ch+var_24] +
test dl dl +
mov esi ecx +
jz loc_44EAD2  +
xor esi esi +
xor ecx ecx +
jmp loc_44EAD2  +
lea eax [esi+30h] +
mov [esp+3Ch+var_18] eax +
jmp loc_44E7E5  +
mov [esp+3Ch+var_30] offset free +
mov [esp+3Ch+var_34] offset sub_44CBD0 +
mov [esp+3Ch+var_38] offset loc_44C910 +
mov [esp+3Ch+var_3C] 1 +
call sub_46ACC0  +
mov edx eax +
mov eax [esp+3Ch+var_28] +
test edx edx +
mov [eax+0B0h] edx +
jz loc_44E9AF  +
mov eax [esi+4] +
jmp loc_44E965  +
mov esi 2 +
mov ecx 2 +
jmp loc_44EAD2  +
mov esi 4 +
mov ecx 4 +
jmp loc_44EAD2  +
mov [esp+3Ch+var_3C] 74h +
mov [esp+3Ch+var_18] edx +
call malloc  +
test eax eax +
jz loc_44E9AF  +
mov edx [esp+3Ch+var_18] +
mov ecx 1Dh +
mov edi eax +
movs   +
mov [edx] eax +
jmp loc_44E9AC  +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esi+1Ch] +
mov ecx [ebx+0ACh] +
test ecx ecx +
jnz loc_44EC82  +
mov eax [ebx+0B0h] +
test eax eax +
jz loc_44EC82  +
mov [esp+14h+var_14] eax +
call sub_46AD10  +
mov dword ptr [ebx+0B0h] 0 +
mov eax [ebx+0A4h] +
test eax eax +
jz loc_44ECE0  +
movzx edx byte ptr [esi+3] +
mov dword ptr [eax+24h] 8 +
and edx 6 +
cmp dl 4 +
jz loc_44ECA9  +
mov edx [ebx+0B8h] +
test edx edx +
jnz loc_44ECC7  +
mov edx [esp+14h+arg_0] +
mov edx [edx+0A0h] +
mov edx [edx+934h] +
mov [edx+0Ch] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+0B4h] +
lea edx ds:0Ch[edx*8] +
mov [eax+24h] edx +
jmp loc_44ECA9  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+30h] +
mov [esp+1Ch+var_18] offset a_eh_frame +
mov [esp+1Ch+var_1C] eax +
call sub_40F280  +
test eax eax +
jz loc_44ED40  +
mov eax [eax+0A0h] +
test eax eax +
jnz loc_44ED2A  +
jmp loc_44ED40  +
mov eax [eax+0A0h] +
test eax eax +
jz loc_44ED35  +
cmp dword ptr [eax+24h] 8 +
jbe loc_44ED20  +
mov eax 1 +
add esp 1Ch +
retn   +
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ebp [eax+34h] +
test ebp ebp +
jz loc_44ED97  +
mov eax [ebp+64h] +
test eax eax +
jz loc_44ED8D  +
mov edx offset a_eh_frame_entr +
nop   +
lea esi [esi+0] +
mov esi [eax] +
mov edi edx +
mov ecx 10h +
cmps   +
jz loc_44ED86  +
cmp dword ptr [eax+3Ch] offset off_47D510 +
jnz loc_44EDA0  +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_44ED70  +
mov ebp [ebp+9Ch] +
test ebp ebp +
jnz loc_44ED5F  +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 40h +
mov esi [esp+40h+arg_0] +
mov [esp+40h+var_4] 0 +
mov edi [esi+1Ch] +
mov ebx [edi+0A4h] +
test ebx ebx +
jz loc_44EEC6  +
cmp dword ptr [ebx+3Ch] offset off_47D510 +
jz loc_44EE66  +
movzx eax byte ptr [esi+3] +
and eax 6 +
jz loc_44EE66  +
cmp al 2 +
jz loc_44EE50  +
cmp al 4 +
jz loc_44EED2  +
mov eax [esi+30h] +
lea edx [esp+40h+var_4] +
mov [esp+40h+var_1C] edx +
mov [esp+40h+var_20] 0 +
mov [esp+40h+var_24] 0 +
mov [esp+40h+var_28] 0 +
mov [esp+40h+var_2C] 0 +
mov [esp+40h+var_30] ebx +
mov [esp+40h+var_34] 1 +
mov [esp+40h+var_38] offset a__gnu_eh_frame +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] esi +
call sub_424B10  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_44EE83  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+40h+var_40] esi +
call sub_44ECF0  +
test eax eax +
jnz loc_44EEE4  +
mov ebx [edi+0A4h] +
or dword ptr [ebx+14h] 8000h +
mov eax 1 +
mov dword ptr [edi+0A4h] 0 +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esp+40h+var_4] +
or byte ptr [eax+33h] 2 +
mov edx [esi+30h] +
mov byte ptr [eax+31h] 2 +
mov edx [edx+4] +
mov edx [edx+1B0h] +
mov edx [edx+0DCh] +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_38] 1 +
mov [esp+40h+var_40] esi +
call edx  +
mov eax [edi+0ACh] +
test eax eax +
jnz loc_44EEC6  +
mov dword ptr [edi+0B8h] 1 +
add esp 40h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+40h+var_40] esi +
call sub_44ED50  +
test eax eax +
jnz loc_44EDF5  +
jmp loc_44EE66  +
movzx eax byte ptr [esi+3] +
mov ebx [edi+0A4h] +
and eax 6 +
jmp loc_44EDED  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ecx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_C] +
movzx edx word ptr [ecx+18h] +
mov eax esi +
and dx 380h +
cmp dx 180h +
jz loc_44EF30  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ecx+8Ch] +
mov edi [edx+88h] +
mov edx [ecx+28h] +
cmp esi edx +
jnb loc_44EF90  +
mov eax [edi] +
test eax eax +
jz loc_44F0D3  +
xor edx edx +
jmp loc_44EF5F  +
add ebp [ecx+14h] +
cmp esi ebp +
jb loc_44EFA0  +
lea edx [ebx+1] +
cmp edx eax +
jnb loc_44EF78  +
lea ebx [edx+eax] +
shr ebx 1 +
mov ecx ebx +
shl ecx 5 +
add ecx edi +
mov ebp [ecx+18h] +
cmp esi ebp +
jnb loc_44EF51  +
mov eax ebx +
cmp edx eax +
jb loc_44EF5F  +
mov [esp+2Ch+var_28] 628h +
mov [esp+2Ch+var_2C] offset a____Binutil_25 +
call sub_410530  +
jmp loc_44EFA4  +
sub eax edx +
add eax [ecx+24h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx eax +
jnb loc_44EF78  +
mov edx ebx +
mov eax 0FFFFFFFFh +
shl edx 5 +
add edx edi +
movzx ecx byte ptr [edx+23h] +
test cl 2 +
jnz loc_44EF21  +
test cl 1 +
jz loc_44F080  +
test byte ptr [edx+0Dh] 4 +
mov ebp [edx+18h] +
jz loc_44EFE4  +
movzx eax byte ptr [edx+0Ch] +
lea edx [ebp+eax+8] +
mov eax 0FFFFFFFEh +
cmp edx esi +
jz loc_44EF21  +
mov eax ebx +
shl eax 5 +
add eax edi +
mov edx [eax+24h] +
test edx edx +
jz loc_44F050  +
test byte ptr [eax+23h] 8 +
jz loc_44F050  +
lea eax [ebp+8] +
mov [esp+2Ch+var_18] eax +
add eax [edx+4] +
cmp esi eax +
jb loc_44F050  +
mov ecx [edx] +
test ecx ecx +
jz loc_44F050  +
cmp esi eax +
jz loc_44F0DA  +
mov [esp+2Ch+var_14] edi +
mov eax 1 +
mov edi [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] ebx +
mov ebx ecx +
jmp loc_44F03D  +
mov ecx [edx+eax*4] +
add ecx edi +
cmp ecx esi +
jz loc_44F0DA  +
add eax 1 +
cmp eax ebx +
jbe loc_44F030  +
mov edi [esp+2Ch+var_14] +
mov ebx [esp+2Ch+var_10] +
lea esi [esi+0] +
shl ebx 5 +
add edi ebx +
movzx eax byte ptr [edi+23h] +
add edi 8 +
add esi [edi+14h] +
sub esi ebp +
test al 1 +
jz loc_44F0C6  +
shr al 2 +
and eax 1 +
test byte ptr [edi+5] 10h +
jz loc_44F074  +
add eax 1 +
add esi eax +
add eax esi +
jmp loc_44EF21  +
and ecx 8 +
mov ebp [edx+18h] +
jz loc_44F098  +
lea edx [ebp+8] +
mov eax 0FFFFFFFEh +
cmp edx esi +
jz loc_44EF21  +
mov eax ebx +
shl eax 5 +
add eax edi +
mov edx [eax+8] +
test byte ptr [edx+5] 2 +
jz loc_44EFE4  +
movzx eax byte ptr [eax+22h] +
lea edx [ebp+eax+8] +
mov eax 0FFFFFFFEh +
cmp edx esi +
jnz loc_44EFE4  +
jmp loc_44EF21  +
shr al 2 +
and eax 1 +
add eax esi +
jmp loc_44EF21  +
xor ebx ebx +
jmp loc_44EF78  +
mov eax 0FFFFFFFEh +
jmp loc_44EF21  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_8] +
mov edx [ebx+28h] +
mov eax [ebx+8Ch] +
test edx edx +
mov ebp [eax+88h] +
jnz loc_44F114  +
mov eax [ebx+24h] +
mov [ebx+28h] eax +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 300h +
jz loc_44F136  +
mov [esp+3Ch+var_38] 66Ch +
mov [esp+3Ch+var_3C] offset a____Binutil_25 +
call sub_410530  +
test byte ptr [ebx+15h] 80h +
jnz loc_44F142  +
test byte ptr [ebp+15h] 80h +
jz loc_44F150  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+28h] +
mov eax [ebx+3Ch] +
mov [esp+3Ch+var_28] edx +
mov edx [ebx+38h] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] edx +
mov edx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_34] edx +
call sub_40F990  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_44F147  +
mov eax [esp+3Ch+arg_0] +
mov edi [esp+3Ch+arg_C] +
mov eax [eax+4] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_3C] edi +
call eax  +
mov ecx [ebx+28h] +
cmp ecx 8 +
mov edi eax +
jbe loc_44F204  +
mov [esp+3Ch+var_20] ebp +
mov esi 8 +
mov ebp [esp+3Ch+arg_0] +
jmp loc_44F1C1  +
mov ecx [ebx+28h] +
add esi 8 +
cmp ecx esi +
jbe loc_44F200  +
mov edi eax +
mov eax [ebp+4] +
mov ecx [esp+3Ch+arg_C] +
mov eax [eax+2Ch] +
add ecx esi +
mov [esp+3Ch+var_3C] ecx +
call eax  +
add eax esi +
cmp eax edi +
ja loc_44F1B5  +
mov eax [ebx+94h] +
mov edx [ebx] +
mov [esp+3Ch+var_3C] offset aBSNotInOrder +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call off_47D664  +
xor eax eax +
jmp loc_44F147  +
mov ebp [esp+3Ch+var_20] +
mov edi [ebp+3Ch] +
mov edx [ebp+38h] +
add edx [edi+1Ch] +
mov edi [ebx+3Ch] +
add edx [ebp+24h] +
and edx 0FFFFFFFEh +
sub edx [edi+1Ch] +
sub edx [ebx+38h] +
mov ebp edx +
sub ebp ecx +
test ebp 1 +
jnz loc_44F2F0  +
cmp edx eax +
jbe loc_44F320  +
mov eax [ebx+24h] +
cmp ecx eax +
jz loc_44F142  +
mov edx [esp+3Ch+arg_0] +
add ecx 8 +
cmp eax ecx +
mov edx [edx+4] +
mov edi [edx+1B0h] +
jz loc_44F267  +
mov [esp+3Ch+var_38] 69Eh +
mov [esp+3Ch+var_3C] offset a____Binutil_25 +
call sub_410530  +
mov eax [edi+1A0h] +
test eax eax +
jz loc_44F350  +
mov eax [esp+3Ch+arg_0] +
lea edx [esp+3Ch+var_14] +
mov [esp+3Ch+var_20] edx +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] ebp +
call eax  +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov ebp [eax+30h] +
mov eax [edi+1A0h] +
mov [esp+3Ch+var_3C] ecx +
call eax  +
lea ecx [esp+3Ch+var_10] +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] eax +
call ebp  +
mov ecx [ebx+3Ch] +
mov [esp+3Ch+var_28] 8 +
mov eax [ebx+28h] +
add eax [ebx+38h] +
mov edx [esp+3Ch+var_20] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_40F990  +
jmp loc_44F147  +
mov eax [ebx+94h] +
mov edx [ebx] +
mov [esp+3Ch+var_3C] offset aBSInvalidInput +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call off_47D664  +
mov [esp+3Ch+var_3C] 11h +
call sub_4105E0  +
xor eax eax +
jmp loc_44F147  +
mov eax [ebx+94h] +
mov edx [ebx] +
mov [esp+3Ch+var_3C] offset aBSPointsPastEn +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call off_47D664  +
mov [esp+3Ch+var_3C] 11h +
call sub_4105E0  +
xor eax eax +
jmp loc_44F147  +
mov [esp+3Ch+var_38] 6A0h +
mov [esp+3Ch+var_3C] offset a____Binutil_25 +
call sub_410530  +
jmp loc_44F275  +
***
push esi  +
push esi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov eax [esp+5Ch+arg_4] +
mov esi [esp+5Ch+arg_0] +
mov ebx [eax+1Ch] +
movzx eax byte ptr [eax+3] +
mov edi [ebx+0A4h] +
mov byte ptr [esp+5Ch+var_34] al +
and eax 6 +
jz loc_450551  +
test edi edi +
jz loc_450551  +
cmp al 4 +
jz loc_450560  +
mov eax [ebx+0BCh] +
test eax eax +
jz loc_450628  +
mov edx [ebx+0A8h] +
mov eax 8 +
cmp edx [ebx+0B4h] +
lea ecx ds:0Ch[edx*8] +
cmovz eax ecx +
mov [esp+5Ch+var_5C] eax +
xor ebp ebp +
call sub_412BD0  +
test eax eax +
mov [esp+5Ch+var_20] eax +
jz loc_450547  +
mov [esp+5Ch+var_58] offset a_eh_frame +
mov [esp+5Ch+var_5C] esi +
call sub_40F280  +
test eax eax +
jz loc_450678  +
mov ebp [esp+5Ch+var_20] +
lea ecx [esp+5Ch+var_14] +
mov dword ptr [ebp+0] 0 +
mov dword ptr [ebp+4] 0 +
mov byte ptr [ebp+0] 1 +
mov edx [esi+4] +
mov edx [edx+1B0h] +
mov edx [edx+128h] +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_44] ecx +
mov [esp+5Ch+var_48] 4 +
mov [esp+5Ch+var_4C] edi +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] esi +
call edx  +
mov [ebp+1] al +
mov ebp [ebx+0BCh] +
test ebp ebp +
jz loc_450351  +
mov eax [ebx+0B4h] +
cmp [ebx+0A8h] eax +
jz loc_450600  +
mov eax [esp+3Ch] +
mov byte ptr [eax+2] 0FFh +
mov byte ptr [eax+3] 0FFh +
mov ebp [esp+3Ch] +
mov eax [esi+4] +
lea edx [ebp+4] +
mov eax [eax+30h] +
mov [esp-10h+arg_0] edx +
mov edx [esp+48h] +
mov [esp+0] edx +
call eax  +
cmp byte ptr [ebp+2] 0FFh +
jz loc_4504F1  +
mov ebp [esp+3Ch] +
mov eax [esi+4] +
mov ecx [ebx+0B4h] +
mov edx ebp +
mov eax [eax+30h] +
add edx 8 +
mov [esp-10h+arg_0] edx +
mov [esp+0] ecx +
call eax  +
mov eax [ebx+0BCh] +
mov edx [ebx+0B4h] +
mov dword ptr [esp+0Ch] offset sub_44CCE0 +
mov [esp-10h+arg_4] 0Ch +
mov [esp+0] eax +
mov [esp-10h+arg_0] edx +
call qsort  +
lea eax [ebp+10h] +
xor ebp ebp +
mov [esp+2Ch] eax +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+38h] 0 +
mov [esp+30h] edi +
jmp loc_45047D  +
mov edx [esi+4] +
mov edi [esp+2Ch] +
mov edx [edx+30h] +
lea ecx [edi-4] +
mov [esp-10h+arg_0] ecx +
mov [esp+0] eax +
call edx  +
mov eax [ebx+0BCh] +
mov edi [esi+0A0h] +
mov edx [eax+ebp+8] +
mov eax [esp+30h] +
mov eax [eax+3Ch] +
mov ecx [eax+1Ch] +
mov eax edx +
sub eax ecx +
cmp byte ptr [edi+4] 2 +
jz loc_450611  +
mov edx [esi+4] +
mov edi [esp+2Ch] +
mov edx [edx+30h] +
mov [esp-10h+arg_0] edi +
mov [esp+0] eax +
call edx  +
mov ecx [esp+28h] +
test ecx ecx +
jz loc_45046A  +
mov edx [ebx+0BCh] +
lea ecx [edx+ebp-0Ch] +
mov eax [ecx+4] +
add eax [ecx] +
cmp [edx+ebp] eax +
mov eax 1 +
cmovnb eax [esp+38h] +
mov [esp+38h] eax +
mov eax [esp+28h] +
add ebp 0Ch +
add dword ptr [esp+2Ch] 8 +
add eax 1 +
mov [esp+28h] eax +
mov eax [esp+28h] +
cmp eax [ebx+0B4h] +
jnb loc_4504C7  +
mov eax [ebx+0BCh] +
mov edi [esi+0A0h] +
mov edx [eax+ebp] +
mov eax [esp+30h] +
mov eax [eax+3Ch] +
mov ecx [eax+1Ch] +
mov eax edx +
sub eax ecx +
cmp byte ptr [edi+4] 2 +
jnz loc_4503F1  +
add ecx eax +
mov edi 1 +
cmp edx ecx +
cmovz edi [esp+34h] +
mov [esp+34h] edi +
jmp loc_4503F1  +
mov edx [esp+34h] +
mov edi [esp+30h] +
test edx edx +
jnz loc_450660  +
mov eax [esp+38h] +
test eax eax +
jnz loc_450645  +
mov eax [esp+34h] +
or eax [esp+38h] +
jnz loc_450632  +
mov ebp 1 +
mov edx [edi+24h] +
mov eax [edi+3Ch] +
mov [esp+14h] edx +
mov edi [edi+38h] +
mov dword ptr [esp+10h] 0 +
mov [esp-10h+arg_0] eax +
mov [esp+0] esi +
mov [esp+0Ch] edi +
mov edi [esp+3Ch] +
mov [esp-10h+arg_4] edi +
call sub_40F990  +
mov [esp+0] edi +
test eax eax +
mov eax 0 +
cmovz ebp eax +
call free  +
mov eax [ebx+0BCh] +
test eax eax +
jz loc_450547  +
mov [esp+0] eax +
call free  +
add esp 5Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5Ch +
mov ebp 1 +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [edi+24h] 8 +
jnz loc_4506A8  +
lea ebx [esp+5Ch+var_14] +
mov eax ebx +
lea edx [esp+5Ch+var_C] +
mov byte ptr [eax] 0 +
add eax 1 +
cmp eax edx +
jnz loc_450574  +
mov eax [esi+4] +
mov byte ptr [esp+5Ch+var_14] 2 +
mov ebp [eax+1B0h] +
mov eax [ebp+19Ch] +
test eax eax +
jz loc_450689  +
mov ecx [esp+5Ch+arg_4] +
mov [esp+5Ch+var_5C] ecx +
call eax  +
mov [esp+49h] al +
mov eax [esi+4] +
mov edx [eax+30h] +
lea eax [esp+4Ch] +
mov [esp-10h+arg_0] eax +
mov eax [edi+3Ch] +
mov eax [eax+24h] +
sub eax 8 +
shr eax 3 +
mov [esp+0] eax +
call edx  +
mov edx [edi+24h] +
mov eax [edi+3Ch] +
mov [esp+14h] edx +
mov ecx [edi+38h] +
mov [esp-10h+arg_4] ebx +
mov [esp+0] esi +
mov dword ptr [esp+10h] 0 +
mov [esp+0Ch] ecx +
mov [esp-10h+arg_0] eax +
call sub_40F990  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
mov ebp eax +
mov eax ebp +
pop ebp  +
retn   +
mov eax [esp+3Ch] +
mov byte ptr [eax+2] 3 +
mov byte ptr [eax+3] 3Bh +
jmp loc_45035D  +
add ecx eax +
mov edi 1 +
cmp edx ecx +
cmovz edi [esp+34h] +
mov [esp+34h] edi +
jmp loc_45042F  +
mov eax 8 +
jmp loc_4502B2  +
mov dword ptr [esp+0] 11h +
xor ebp ebp +
call sub_4105E0  +
jmp loc_4504F6  +
mov eax [esp+74h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+0] offset aP_eh_frame_hdr +
call eax  +
jmp loc_4504E3  +
mov eax [esp+74h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+0] offset aP_eh_frame_h_0 +
call eax  +
jmp loc_4504D7  +
mov eax [esp+5Ch+var_20] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_450547  +
mov [esp+5Ch+var_58] 87Fh +
mov [esp+5Ch+var_5C] offset a____Binutil_25 +
call sub_410530  +
mov eax [ebp+19Ch] +
jmp loc_45059A  +
mov [esp+5Ch+var_54] offset aWrite_compact_ +
mov [esp+5Ch+var_58] 877h +
mov [esp+5Ch+var_5C] offset a____Binutil_25 +
call sub_410560  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+5Ch+var_58] +
mov eax [eax+0A0h] +
cmp byte ptr [eax+4] 2 +
setz al  +
movzx eax al +
lea eax ds:4[eax*4] +
retn   +
***
mov eax 1 +
retn   +
***
mov eax [esp+14h] +
mov edx [eax+3Ch] +
mov edx [edx+1Ch] +
add edx [eax+38h] +
mov eax [esp+0Ch] +
mov eax [eax+1Ch] +
sub eax edx +
mov edx [esp+1Ch] +
sub eax [esp+18h] +
add eax [esp+10h] +
mov [edx] eax +
mov eax 1Bh +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jnz loc_450750  +
mov eax [edx+4] +
mov eax [eax+0C8h] +
add esp 1Ch +
jmp eax  +
mov [esp+1Ch+var_1C] 5 +
call sub_4105E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov edx [esp+20h] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jz loc_450794  +
mov dword ptr [esp] 5 +
call sub_4105E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+0CCh] +
add esp 1Ch +
jmp eax  +
***
sub esp 1Ch +
mov edx [esp+20h] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jz loc_4507D4  +
mov dword ptr [esp] 5 +
call sub_4105E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+0D4h] +
add esp 1Ch +
jmp eax  +
***
sub esp 1Ch +
mov edx [esp+20h] +
mov ecx [esp+24h] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jnz loc_450811  +
movzx eax byte ptr [ecx+28h] +
and eax 7 +
cmp al 1 +
jz loc_450823  +
mov dword ptr [esp] 3 +
call sub_4105E0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+0D0h] +
add esp 1Ch +
jmp eax  +
***
jmp loc_450840  +
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
test ebx ebx +
jnz loc_450858  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+20h] +
test eax eax +
jz loc_45084D  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_450730  +
test eax eax +
mov esi eax +
jz loc_45084D  +
mov ebx [ebx] +
test ebx ebx +
jz loc_45084D  +
mov dword ptr [esp+4] 2Fh +
mov [esp] eax +
call strrchr  +
mov [esp] ebx +
mov dword ptr [esp+4] 2Fh +
lea edx [eax+1] +
test eax eax +
cmovnz esi edx +
call strrchr  +
mov [esp+4] esi +
test eax eax +
lea edx [eax+1] +
cmovnz ebx edx +
mov [esp] ebx +
call sub_461F50  +
test eax eax +
setz al  +
add esp 14h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [edx] +
mov eax [esp+44h+arg_8] +
mov esi [esp+44h+arg_0] +
mov ebx [esp+44h+arg_4] +
mov eax [eax] +
test eax eax +
jz loc_450938  +
mov edi ebx +
mov eax 1 +
or edi esi +
jz loc_45092A  +
mov ecx [esp+44h+arg_C] +
cmp ebx 0 +
mov edx [ecx] +
jbe loc_450932  +
mov [esp+44h+var_38] edx +
mov [esp+44h+var_3C] ebp +
mov [esp+44h+var_40] esi +
mov [esp+44h+var_44] offset aDwarfErrorOffs +
call off_47D664  +
mov [esp+44h+var_44] 11h +
call sub_4105E0  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi edx +
jb loc_45092A  +
jmp loc_450903  +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_18] ecx +
mov [esp+44h+var_1C] edx +
call sub_40F280  +
mov edx [esp+44h+var_1C] +
mov ecx [esp+44h+var_18] +
test eax eax +
mov [esp+44h+var_20] eax +
jz loc_4509B0  +
mov eax [esp+44h+var_20] +
mov eax [eax+28h] +
test eax eax +
jz loc_4509A3  +
mov edx [esp+44h+arg_C] +
test ecx ecx +
mov [edx] eax +
jz loc_450A01  +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_38] ecx +
mov [esp+44h+var_3C] 0 +
mov [esp+44h+var_40] eax +
call sub_459470  +
mov edi [esp+44h+arg_8] +
test eax eax +
mov [edi] eax +
jnz loc_4508ED  +
xor eax eax +
jmp loc_45092A  +
mov eax [esp+44h+var_20] +
mov eax [eax+24h] +
jmp loc_450967  +
mov ebp [edx+4] +
test ebp ebp +
jz loc_4509DB  +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_18] ecx +
mov [esp+44h+var_1C] edx +
call sub_40F280  +
mov edx [esp+44h+var_1C] +
mov ecx [esp+44h+var_18] +
test eax eax +
mov [esp+44h+var_20] eax +
jnz loc_45095C  +
mov eax [edx] +
mov [esp+44h+var_44] offset aDwarfErrorCanT +
mov [esp+44h+var_40] eax +
call off_47D664  +
mov [esp+44h+var_44] 11h +
call sub_4105E0  +
xor eax eax +
jmp loc_45092A  +
mov [esp+44h+var_44] eax +
call sub_412BD0  +
mov ecx [esp+44h+arg_8] +
test eax eax +
mov [ecx] eax +
jz loc_450928  +
mov ecx [esp+44h+arg_C] +
mov edx [ecx] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_30] edx +
mov [esp+44h+var_40] eax +
mov [esp+44h+var_44] edi +
call sub_40FA90  +
test eax eax +
jnz loc_4508ED  +
xor eax eax +
jmp loc_45092A  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov eax [eax+1Ch] +
mov [esp+38h+var_24] edx +
mov edi [esp+38h+arg_0] +
mov [esp+38h+var_20] eax +
mov eax [esi] +
mov [esp+38h+var_34] 1Ch +
mov [esp+38h+var_38] eax +
call sub_40E140  +
test eax eax +
mov ebx eax +
jz loc_450C42  +
mov dword ptr [eax] 0 +
mov eax [esp+38h+var_24] +
test edi edi +
mov [ebx+4] eax +
mov eax ebp +
mov [ebx+18h] al +
mov eax [esp+38h+arg_4] +
mov [ebx+0Ch] eax +
mov eax [esp+38h+arg_8] +
mov [ebx+10h] eax +
mov eax [esp+38h+arg_C] +
mov [ebx+14h] eax +
movzx eax [esp+38h+arg_10] +
mov [ebx+19h] al +
jz loc_450AD2  +
cmp byte ptr [edi] 0 +
jnz loc_450C11  +
mov dword ptr [ebx+8] 0 +
mov eax [esp+38h+var_20] +
test eax eax +
jz loc_450AF9  +
mov eax [eax+8] +
mov edi [eax+4] +
cmp edi [esp+38h+var_24] +
jz loc_450C50  +
movzx edx byte ptr [eax+19h] +
test dl dl +
jz loc_450B33  +
mov [esp+38h+var_38] 0Ch +
call sub_412BD0  +
test eax eax +
jz loc_450C42  +
mov edx [esi+1Ch] +
mov edi [esp+38h+var_24] +
mov [eax+8] ebx +
mov [eax+4] edx +
mov [eax] edi +
add dword ptr [esi+0Ch] 1 +
mov [esi+1Ch] eax +
mov eax 1 +
mov [esi+20h] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx+4] +
cmp edi ebp +
jb loc_450BF0  +
jz loc_450BE3  +
mov ecx [esi+20h] +
cmp ebp [ecx+4] +
mov [esp+38h+var_1C] ecx +
ja loc_450B90  +
jz loc_450D03  +
mov ecx [esp+38h+var_1C] +
mov ecx [ecx] +
test ecx ecx +
jz loc_450CE4  +
cmp ebp [ecx+4] +
ja loc_450CE4  +
jnz loc_450B90  +
movzx edx byte ptr [ecx+18h] +
cmp [ebx+18h] dl +
ja loc_450CE4  +
lea esi [esi+0] +
jnz loc_450B90  +
movzx edx byte ptr [ecx+19h] +
cmp [ebx+19h] dl +
jb loc_450CE4  +
nop   +
mov edx [eax] +
test edx edx +
jnz loc_450BC7  +
jmp loc_450D30  +
cmp ebp [edx+4] +
ja loc_450CB0  +
lea esi [esi+0] +
jz loc_450C90  +
mov ecx [edx] +
test ecx ecx +
jz loc_450CE0  +
mov edi [edx+4] +
mov eax edx +
mov edx ecx +
cmp ebp edi +
ja loc_450BB6  +
jnz loc_450BA0  +
movzx ecx byte ptr [eax+18h] +
cmp [ebx+18h] cl +
ja loc_450BB6  +
jnz loc_450BA0  +
movzx ecx byte ptr [eax+19h] +
cmp [ebx+19h] cl +
jb loc_450BB6  +
jmp loc_450BA0  +
movzx ecx byte ptr [eax+18h] +
cmp [ebx+18h] cl +
jbe loc_450B44  +
mov [ebx] eax +
mov eax [esp+38h+var_20] +
mov [eax+8] ebx +
mov eax [esi+20h] +
test eax eax +
jz loc_450CF6  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] edi +
call strlen  +
mov edx [esi] +
mov [esp+38h+var_38] edx +
add eax 1 +
mov [esp+38h+var_34] eax +
call sub_40E140  +
test eax eax +
mov [ebx+8] eax +
jz loc_450C42  +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
call strcpy  +
jmp loc_450AD9  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ebp +
movzx edx byte ptr [eax+19h] +
cmp [eax+18h] cl +
jnz loc_450AF5  +
movzx ecx dl +
cmp ecx dword ptr [esp+38h+arg_10] +
jnz loc_450AF5  +
cmp eax [esi+20h] +
jz loc_450D39  +
mov eax [eax] +
mov [ebx] eax +
mov eax [esp+38h+var_20] +
mov [eax+8] ebx +
mov eax 1 +
jmp loc_450B2B  +
movzx ecx byte ptr [edx+18h] +
cmp [ebx+18h] cl +
ja loc_450CB0  +
jnz loc_450BB6  +
movzx ecx byte ptr [edx+19h] +
cmp [ebx+19h] cl +
jnb loc_450BB6  +
lea esi [esi+0] +
mov ecx [eax] +
mov edx eax +
mov eax [esp+38h+var_20] +
mov [esi+20h] edx +
mov esi [esp+38h+var_24] +
mov [ebx] ecx +
mov [edx] ebx +
cmp esi [eax] +
jnb loc_450C04  +
mov eax [esp+38h+var_20] +
mov esi [esp+38h+var_24] +
mov [eax] esi +
jmp loc_450C04  +
xor ecx ecx +
jmp loc_450CB4  +
mov eax [esp+38h+var_1C] +
mov [ebx] ecx +
mov [eax] ebx +
mov eax 1 +
jmp loc_450B2B  +
mov [esi+20h] ebx +
mov eax 1 +
jmp loc_450B2B  +
mov ecx [esp+38h+var_1C] +
movzx ecx byte ptr [ecx+18h] +
cmp [ebx+18h] cl +
ja loc_450B90  +
jnz loc_450B56  +
mov ecx [esp+38h+var_1C] +
movzx ecx byte ptr [ecx+19h] +
cmp [ebx+19h] cl +
jb loc_450B90  +
jmp loc_450B56  +
mov edx eax +
xor ecx ecx +
jmp loc_450CB4  +
mov [esi+20h] ebx +
lea esi [esi+0] +
jmp loc_450C75  +
***
push ebx  +
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_450DE4  +
mov edx [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_10] edx +
call sub_4126E0  +
test eax eax +
jz loc_450DF8  +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_14] 10h +
mov [esp+18h+var_18] ebx +
call sub_412630  +
test eax eax +
jnz loc_450DC0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [eax] +
mov eax [eax+34h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
***
jmp sub_450E20  +
***
sub esp 1Ch +
mov eax [eax] +
mov eax [eax+28h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
***
jmp sub_450E40  +
***
sub esp 1Ch +
mov eax [eax] +
mov eax [eax+1Ch] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
***
jmp sub_450E60  +
***
mov ecx [esp+arg_0] +
mov eax [edx] +
cmp [ecx] eax +
jb loc_450EA0  +
mov eax 1 +
ja loc_450E97  +
mov edx [edx+8] +
mov ecx [ecx+8] +
mov ebx [edx+4] +
cmp [ecx+4] ebx +
jb loc_450E97  +
ja loc_450EA0  +
movzx edx byte ptr [edx+18h] +
cmp [ecx+18h] dl +
jb loc_450E97  +
setnbe al  +
movzx eax al +
neg eax  +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
add eax 0Ch +
cmp [eax+4] edx +
ja loc_450EBD  +
cmp edx [eax+8] +
jb loc_450EC6  +
mov eax [eax] +
test eax eax +
jnz loc_450EB3  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [edx+18h] +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_1C] eax +
call sub_40F280  +
test eax eax +
jz loc_450EF6  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1Ch] +
test eax eax +
jz loc_450F0D  +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] ebx +
call sub_40F280  +
test eax eax +
jnz loc_450EEE  +
mov eax [ebx+64h] +
mov ebp offset a_gnu_linkonc_0 +
mov ebx 11h +
test eax eax +
jz loc_450EEE  +
nop   +
mov esi [eax] +
mov edi ebp +
mov ecx ebx +
cmps   +
jz loc_450EEE  +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_450F20  +
xor eax eax +
jmp loc_450EEE  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
test ecx ecx +
jz loc_450FBA  +
mov ebx [ecx+0Ch] +
test ebx ebx +
jz loc_450FB0  +
mov eax [edx+18h] +
mov [esp+28h+var_1C] eax +
jmp loc_450F8C  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_450F77  +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] esi +
call strcmp  +
test eax eax +
jz loc_450FA2  +
mov edi offset a_gnu_linkonc_0 +
mov ecx 11h +
cmps   +
jz loc_450FA2  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_450FB0  +
mov esi [ebx] +
mov eax [esp+28h+var_1C] +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] eax +
call strcmp  +
test eax eax +
jnz loc_450F60  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_450ED0  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
cmp ecx edi +
jz loc_451021  +
mov esi [edx+8] +
mov ebx edx +
test esi esi +
jnz loc_45100E  +
mov [edx+4] ecx +
mov eax 1 +
mov [edx+8] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edi [ebx+4] +
jz loc_451030  +
mov ebx [ebx] +
test ebx ebx +
jz loc_451040  +
mov esi [ebx+8] +
cmp ecx esi +
jnz loc_451000  +
mov [ebx+8] edi +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [ebx+4] ecx +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax] +
mov [esp-0Ch+arg_0] 0Ch +
mov [esp-0Ch+arg_8] ecx +
mov [esp-0Ch+arg_4] edx +
mov [esp+0] eax +
call sub_40E140  +
test eax eax +
jz loc_45107E  +
mov ecx [esp-0Ch+arg_8] +
mov edx [esp-0Ch+arg_4] +
mov [eax+8] edi +
mov [eax+4] ecx +
mov ecx [edx] +
mov [eax] ecx +
mov [edx] eax +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor eax eax +
jmp loc_450FF2  +
***
push ebx  +
sub esp 10h +
mov eax [eax+4] +
mov esi [esp+10h+arg_0] +
cmp dword ptr [eax+4] 5 +
jz loc_4510E7  +
movzx ebx dl +
add ebx ecx +
cmp esi ebx +
jb loc_451130  +
cmp dl 4 +
jz loc_451170  +
cmp dl 8 +
jz loc_451150  +
cmp dl 2 +
jz loc_451180  +
mov [esp+10h+var_8] offset aRead_address +
mov [esp+10h+var_C] 346h +
mov [esp+10h+var_10] offset a____Binutil_24 +
call sub_410560  +
mov ebx [eax+1B0h] +
movzx edi dl +
add edi ecx +
movzx ebx byte ptr [ebx+1ACh] +
shr bl 7 +
cmp esi edi +
jb loc_451130  +
test bl bl +
jz loc_4510B0  +
cmp dl 4 +
jz loc_451155  +
cmp dl 8 +
jz loc_451140  +
cmp dl 2 +
jz loc_451160  +
mov [esp+10h+var_8] offset aRead_address +
mov [esp+10h+var_C] 338h +
mov [esp+10h+var_10] offset a____Binutil_24 +
call sub_410560  +
nop   +
xor eax eax +
xor edx edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+20h] +
mov [esp+10h+arg_0] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
mov eax [eax+1Ch] +
jmp loc_451143  +
mov eax [eax+2Ch] +
mov [esp+10h+var_10] ecx +
call eax  +
cdq   +
jmp loc_451134  +
mov eax [eax+38h] +
mov [esp+10h+var_10] ecx +
call eax  +
cdq   +
jmp loc_451134  +
mov eax [eax+28h] +
mov [esp+10h+var_10] ecx +
call eax  +
xor edx edx +
jmp loc_451134  +
mov eax [eax+34h] +
mov [esp+10h+var_10] ecx +
call eax  +
xor edx edx +
jmp loc_451134  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+5Ch] +
mov [esp+2Ch+var_14] edx +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_1C] eax +
mov eax [ebx+50h] +
mov edi [eax+54h] +
test edi edi +
jz loc_45124F  +
add esi edi +
jb loc_451283  +
movzx edx byte ptr [ebx+58h] +
add edi [eax+58h] +
lea eax [ebx+8] +
mov [esp+2Ch+var_10] eax +
movzx ecx dl +
mov [esp+2Ch+var_18] edi +
jmp loc_4511DE  +
cmp ebp 0FFFFFFFFh +
jnz loc_451226  +
mov [esp+2Ch+var_1C] eax +
mov edi [esp+2Ch+var_18] +
lea eax [esi+ecx*2] +
cmp edi eax +
jb loc_451283  +
mov eax [ebx+8] +
mov ecx esi +
mov [esp+2Ch+var_2C] edi +
call sub_451090  +
movzx edx byte ptr [ebx+58h] +
mov [esp+2Ch+var_2C] edi +
mov ebp eax +
movzx eax dl +
add esi eax +
mov eax [ebx+8] +
mov ecx esi +
call sub_451090  +
movzx edx byte ptr [ebx+58h] +
movzx ecx dl +
add esi ecx +
mov edi eax +
or edi ebp +
jz loc_451290  +
cmp eax 0FFFFFFFFh +
jnz loc_4511D5  +
mov edi [esp+2Ch+var_1C] +
mov edx [esp+2Ch+var_14] +
add eax edi +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_10] +
lea ecx [ebp+edi+0] +
call sub_450FD0  +
test eax eax +
jz loc_451283  +
movzx edx byte ptr [ebx+58h] +
mov eax edi +
movzx ecx dl +
jmp loc_4511DA  +
mov edi [eax+8] +
lea edx [eax+58h] +
add eax 54h +
mov ecx [eax-1Ch] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+8] +
mov [esp+2Ch+var_20] edx +
add edi 58h +
mov [esp+2Ch+var_2C] 0 +
mov edx edi +
mov [esp+2Ch+var_28] 0 +
call sub_4508D0  +
test eax eax +
jnz loc_45129D  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+50h] +
mov edi [eax+54h] +
jmp loc_4511B6  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov edi [ecx+8] +
mov eax [esp+40h+arg_4] +
cmp [esp+40h+arg_0] eax +
jnb loc_451380  +
cmp edx 0Fh +
mov [esi+4] edx +
jz loc_451435  +
ja loc_451330  +
cmp edx 8 +
jz loc_4518C5  +
ja loc_4513A5  +
cmp edx 4 +
lea esi [esi+0] +
jz loc_4517A5  +
jbe loc_4514B0  +
cmp edx 6 +
nop   +
jz loc_45135C  +
ja loc_451413  +
mov eax [esp+40h+arg_0] +
xor ecx ecx +
xor ebx ebx +
lea ebp [eax+2] +
cmp [esp+40h+arg_4] ebp +
jnb loc_4516A7  +
mov [esi+0Ch] ebx +
mov eax ebp +
mov [esi+8] ecx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx 16h +
jz loc_451800  +
ja loc_4513E5  +
cmp edx 12h +
jz loc_451308  +
jbe loc_451474  +
cmp edx 14h +
lea esi [esi+0] +
jz loc_451413  +
ja loc_451435  +
mov eax [esp+40h+arg_0] +
xor ecx ecx +
xor ebx ebx +
lea ebp [eax+4] +
cmp [esp+40h+arg_4] ebp +
jb loc_45131D  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
xor ebx ebx +
call sub_450E20  +
mov ecx eax +
jmp loc_45131D  +
mov [esp+40h+var_40] offset aDwarfErrorInfo +
call off_47D664  +
mov [esp+40h+var_40] 11h +
call sub_4105E0  +
mov eax [esp+40h+arg_0] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx 0Bh +
jz loc_4513C6  +
jbe loc_4516C0  +
cmp edx 0Dh +
jz loc_451790  +
lea esi [esi+0] +
ja loc_451604  +
mov eax [esp+40h+arg_0] +
xor ecx ecx +
xor ebx ebx +
lea ebp [eax+1] +
cmp [esp+40h+arg_4] ebp +
jb loc_45131D  +
movzx ecx byte ptr [eax] +
xor ebx ebx +
jmp loc_45131D  +
cmp edx 19h +
jz loc_451884  +
nop   +
jbe loc_451715  +
cmp edx 1F20h +
jz loc_451850  +
cmp edx 1F21h +
jz loc_451561  +
cmp edx 20h +
jnz loc_451486  +
mov eax [esp+40h+arg_0] +
xor edx edx +
lea ebp [eax+8] +
xor eax eax +
cmp [esp+40h+arg_4] ebp +
jnb loc_4518A0  +
mov [esi+8] eax +
mov eax ebp +
mov [esi+0Ch] edx +
jmp loc_45139D  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_34] 0 +
mov [esp+40h+var_30] eax +
lea eax [esp+40h+var_14] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_3C] eax +
call sub_413790  +
mov dword ptr [esi+0Ch] 0 +
mov [esi+8] eax +
mov eax [esp+40h+arg_0] +
add eax [esp+40h+var_14] +
jmp loc_45139D  +
cmp edx 10h +
jz loc_451524  +
cmp edx 11h +
jz loc_4513C6  +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] offset aDwarfErrorIn_0 +
call off_47D664  +
mov [esp+40h+var_40] 11h +
call sub_4105E0  +
xor eax eax +
jmp loc_45139D  +
cmp edx 1 +
jz loc_4514F8  +
cmp edx 3 +
jnz loc_451486  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_40E140  +
test eax eax +
mov ebx eax +
jz loc_4514A3  +
mov eax [esp+40h+arg_0] +
lea ecx [eax+2] +
cmp [esp+40h+arg_4] ecx +
jnb loc_4518F4  +
mov dword ptr [ebx] 0 +
mov ebp ecx +
xor ecx ecx +
mov [ebx+4] ecx +
mov eax ebp +
mov [esi+8] ebx +
jmp loc_45139D  +
mov edi [esp+40h+arg_4] +
mov eax [ebx+8] +
movzx edx byte ptr [ebx+58h] +
mov ecx [esp+40h+arg_0] +
mov [esp+40h+var_40] edi +
call sub_451090  +
mov [esi+8] eax +
mov eax [esp+40h+arg_0] +
mov [esi+0Ch] edx +
movzx ebp byte ptr [ebx+58h] +
add eax ebp +
jmp loc_45139D  +
mov eax [ecx+54h] +
sub eax 3 +
cmp eax 1 +
ja loc_4514F8  +
cmp byte ptr [ecx+59h] 4 +
mov eax [esp+40h+arg_0] +
jz loc_451A89  +
lea ecx [eax+8] +
xor edx edx +
xor eax eax +
cmp [esp+40h+arg_4] ecx +
jnb loc_451AAD  +
mov [esi+8] eax +
mov [esi+0Ch] edx +
movzx eax byte ptr [ebx+59h] +
add eax [esp+40h+arg_0] +
jmp loc_45139D  +
movzx eax byte ptr [ecx+59h] +
mov edx [esp+40h+arg_0] +
mov ebp [ecx+50h] +
movzx ecx al +
add edx ecx +
cmp [esp+40h+arg_4] edx +
jb loc_4519C0  +
cmp al 4 +
mov eax [esp+40h+arg_0] +
jz loc_451925  +
add eax 8 +
cmp [esp+40h+arg_4] eax +
jnb loc_4519ED  +
xor edi edi +
mov [esp+40h+var_2C] 0 +
mov eax [ebp+20h] +
mov [esp+40h+var_14] ecx +
test eax eax +
jz loc_451A08  +
mov ecx [ebp+8] +
mov eax [ebx+50h] +
lea edx [ecx+78h] +
lea ecx [ebp+28h] +
mov eax [eax+20h] +
mov [esp+40h+var_34] ecx +
lea ecx [ebp+24h] +
mov [esp+40h+var_38] ecx +
mov ecx [esp+40h+var_2C] +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_3C] ecx +
xor ecx ecx +
call sub_4508D0  +
test eax eax +
jz loc_4515F0  +
cmp [esp+40h+var_2C] 0 +
mov eax [ebp+28h] +
ja loc_4515F0  +
cmp edi eax +
jb loc_4518B1  +
nop   +
mov ebp [esp+40h+var_14] +
xor edi edi +
mov eax [esp+40h+arg_0] +
mov [esi+8] edi +
add eax ebp +
jmp loc_45139D  +
movzx eax byte ptr [ecx+59h] +
mov edx [esp+40h+arg_0] +
mov ebp [ecx+50h] +
movzx ecx al +
add edx ecx +
cmp [esp+40h+arg_4] edx +
jb loc_4519C0  +
cmp al 4 +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_28] edi +
jz loc_451951  +
add eax 8 +
cmp [esp+40h+arg_4] eax +
jnb loc_4519C9  +
xor edi edi +
mov [esp+40h+var_2C] 0 +
mov eax [ebp+8] +
mov [esp+40h+var_14] ecx +
mov ecx [ebp+38h] +
mov [esp+40h+var_40] edi +
lea edx [eax+70h] +
lea eax [ebp+50h] +
mov [esp+40h+var_34] eax +
lea eax [ebp+4Ch] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_2C] +
mov [esp+40h+var_3C] eax +
mov eax [esp+40h+var_28] +
call sub_4508D0  +
test eax eax +
jz loc_4515F0  +
cmp [esp+40h+var_2C] 0 +
mov eax [ebp+50h] +
ja loc_4515F0  +
cmp edi eax +
jnb loc_4515F0  +
add edi [ebp+4Ch] +
cmp byte ptr [edi] 0 +
jz loc_4515F0  +
mov ebp [esp+40h+var_14] +
jmp loc_4515F6  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
xor ebx ebx +
call sub_450E00  +
mov ecx eax +
jmp loc_45131D  +
cmp edx 9 +
jz loc_451727  +
cmp edx 0Ah +
jnz loc_451486  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_40E140  +
test eax eax +
jz loc_4514A3  +
mov edi [esp+40h+arg_0] +
lea edx [edi+1] +
cmp [esp+40h+arg_4] edx +
jb loc_4518E5  +
movzx ebp byte ptr [edi] +
mov [eax] ebp +
add ebp edx +
cmp [esp+40h+arg_4] ebp +
jb loc_451ADD  +
mov [eax+4] edx +
mov [esi+8] eax +
mov eax ebp +
jmp loc_45139D  +
cmp edx 17h +
jz loc_451850  +
cmp edx 18h +
jnz loc_451486  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_40E140  +
test eax eax +
mov ebx eax +
jz loc_4514A3  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_34] 0 +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_30] eax +
lea eax [esp+40h+var_14] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_3C] eax +
call sub_413790  +
mov ecx [esp+40h+arg_0] +
xor edx edx +
add ecx [esp+40h+var_14] +
lea ebp [ecx+eax] +
cmp [esp+40h+arg_4] ebp +
mov [ebx] eax +
mov eax ebp +
cmovnb edx ecx +
mov [ebx+4] edx +
mov [esi+8] ebx +
jmp loc_45139D  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_34] 1 +
mov [esp+40h+var_30] eax +
jmp loc_451445  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_40E140  +
test eax eax +
mov ebx eax +
jz loc_4514A3  +
mov eax [esp+40h+arg_0] +
lea ecx [eax+4] +
cmp [esp+40h+arg_4] ecx +
jb loc_4514E1  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
mov [esp+40h+var_2C] ecx +
call sub_450E20  +
mov ecx [esp+40h+var_2C] +
mov [ebx] eax +
lea ebp [ecx+eax] +
cmp [esp+40h+arg_4] ebp +
jnb loc_4514EB  +
mov ecx ebp +
jmp loc_4514E7  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_34] 0 +
mov [esp+40h+var_30] eax +
lea eax [esp+40h+var_14] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_3C] eax +
call sub_413790  +
mov edx [esp+40h+arg_0] +
mov ecx ebx +
mov edi [esp+40h+arg_4] +
add edx [esp+40h+var_14] +
mov [esp+40h+var_3C] edi +
mov [esp+40h+var_40] edx +
mov edx eax +
mov eax esi +
call sub_4512B0  +
jmp loc_45139D  +
cmp byte ptr [ebx+59h] 4 +
mov eax [esp+40h+arg_0] +
jz loc_451909  +
lea ecx [eax+8] +
xor edx edx +
xor eax eax +
cmp [esp+40h+arg_4] ecx +
jnb loc_4519AF  +
mov [esi+8] eax +
mov [esi+0Ch] edx +
movzx ebp byte ptr [ebx+59h] +
mov eax [esp+40h+arg_0] +
add eax ebp +
jmp loc_45139D  +
mov dword ptr [esi+8] 1 +
mov eax [esp+40h+arg_0] +
mov dword ptr [esi+0Ch] 0 +
jmp loc_45139D  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_450E40  +
jmp loc_451428  +
add edi [ebp+24h] +
cmp byte ptr [edi] 0 +
jnz loc_45169E  +
lea esi [esi+0] +
jmp loc_4515F0  +
mov eax [esp+40h+arg_0] +
cmp byte ptr [eax] 0 +
jnz loc_451986  +
mov eax 1 +
xor edx edx +
mov [esi+8] edx +
add eax [esp+40h+arg_0] +
jmp loc_45139D  +
mov dword ptr [eax] 0 +
mov ebp edx +
xor edx edx +
jmp loc_451708  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
mov [esp+40h+var_2C] ecx +
call sub_450E00  +
jmp loc_4517E0  +
add eax 4 +
xor edx edx +
xor ecx ecx +
cmp [esp+40h+arg_4] eax +
jnb loc_451A74  +
mov [esi+8] edx +
mov [esi+0Ch] ecx +
jmp loc_451875  +
add eax 4 +
cmp [esp+40h+arg_4] eax +
jb loc_451594  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_450E20  +
movzx ecx byte ptr [ebx+59h] +
mov [esp+40h+var_2C] 0 +
mov edi eax +
jmp loc_45159E  +
add eax 4 +
cmp [esp+40h+arg_4] eax +
jb loc_45163B  +
mov edx [esp+40h+arg_0] +
mov eax edi +
add eax 4 +
call sub_450E20  +
mov edi [ebx+8] +
movzx ecx byte ptr [ebx+59h] +
mov [esp+40h+var_2C] 0 +
mov [esp+40h+var_28] edi +
mov edi eax +
jmp loc_451645  +
mov eax [esp+40h+arg_0] +
mov edx [esp+40h+arg_4] +
add eax 1 +
jmp loc_4519A0  +
add eax 1 +
cmp byte ptr [eax-1] 0 +
jz loc_451A67  +
cmp eax edx +
jnz loc_451993  +
sub eax [esp+40h+arg_0] +
xor edx edx +
jmp loc_4518D9  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_450E40  +
jmp loc_45186F  +
xor ebp ebp +
xor edi edi +
jmp loc_4515F6  +
mov edx [esp+40h+arg_0] +
mov eax edi +
add eax 4 +
call sub_450E40  +
movzx ecx byte ptr [ebx+59h] +
mov edi eax +
mov eax [ebx+8] +
mov [esp+40h+var_2C] edx +
mov [esp+40h+var_28] eax +
jmp loc_451645  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_450E40  +
movzx ecx byte ptr [ebx+59h] +
mov edi eax +
mov [esp+40h+var_2C] edx +
jmp loc_45159E  +
mov eax [ebx+8] +
mov [esp+40h+var_3C] offset aHomeJenkinsM_0 +
mov [esp+40h+var_40] eax +
call sub_40E580  +
test eax eax +
mov [esp+40h+var_28] eax +
jz loc_4515F0  +
mov eax [esp+40h+var_28] +
mov [esp+40h+var_3C] 0 +
mov [esp+40h+var_40] eax +
call sub_40DC70  +
test eax eax +
jz loc_451AC6  +
mov [esp+40h+var_3C] 1 +
mov [esp+40h+var_40] eax +
mov [esp+40h+var_24] eax +
call sub_40EFC0  +
mov edx [esp+40h+var_24] +
test eax eax +
jz loc_451ABE  +
mov [ebp+20h] edx +
jmp loc_4515AD  +
sub eax [esp+40h+arg_0] +
mov edx [esp+40h+arg_0] +
jmp loc_4518D9  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_450E20  +
xor ecx ecx +
mov edx eax +
jmp loc_45191A  +
lea ecx [eax+4] +
xor edx edx +
xor eax eax +
cmp [esp+40h+arg_4] ecx +
jb loc_45154E  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_450E20  +
xor edx edx +
jmp loc_45154E  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_450E40  +
jmp loc_45154E  +
mov [esp+40h+var_40] edx +
call sub_40DDB0  +
mov eax [esp+40h+var_28] +
xor edi edi +
mov [esp+40h+var_40] eax +
call free  +
mov ebp [esp+40h+var_14] +
jmp loc_4515F6  +
mov edx ebp +
jmp loc_4518EB  +
***
push esi  +
push ebx  +
sub esp 2Ch +
lea ecx [edx-1] +
cmp ecx [eax+4] +
jb loc_451B20  +
test edx edx +
jnz loc_451BE0  +
mov [esp+2Ch+var_2C] offset aUnknown_6 +
call _strdup  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 0FFFFFFFh +
shl edx 4 +
add edx [eax+18h] +
mov ebx [edx] +
movzx ecx byte ptr [ebx] +
cmp cl 5Ch +
jz loc_451BD0  +
cmp cl 2Fh +
jz loc_451BD0  +
test cl cl +
jnz loc_451BC2  +
mov edx [edx+4] +
test edx edx +
jz loc_451B57  +
cmp edx [eax+8] +
jbe loc_451BF2  +
mov edi [eax+10h] +
test edi edi +
jz loc_451BD0  +
xor esi esi +
mov [esp+2Ch+var_2C] edi +
call strlen  +
mov [esp+2Ch+var_2C] ebx +
mov ebp eax +
call strlen  +
add ebp eax +
test esi esi +
jz loc_451C78  +
mov [esp+2Ch+var_2C] esi +
call strlen  +
lea eax [ebp+eax+3] +
mov [esp+2Ch+var_2C] eax +
call sub_412BD0  +
mov ebp eax +
xor eax eax +
test ebp ebp +
jz loc_451B13  +
mov [esp+2Ch+var_1C] ebx +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] offset aSSS_0 +
call sprintf  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+1] 3Ah +
jnz loc_451B47  +
lea esi [esi+0] +
mov [esp+2Ch+var_2C] ebx +
call _strdup  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] offset aDwarfErrorMang +
call off_47D664  +
jmp loc_451B07  +
mov ecx [eax+14h] +
test ecx ecx +
jz loc_451B57  +
mov esi [ecx+edx*4-4] +
test esi esi +
jz loc_451B57  +
movzx edx byte ptr [esi] +
cmp dl 5Ch +
jz loc_451C25  +
cmp dl 2Fh +
jz loc_451C25  +
test dl dl +
jnz loc_451C70  +
mov edi [eax+10h] +
test edi edi +
jnz loc_451B60  +
mov [esp+2Ch+var_2C] esi +
call strlen  +
mov [esp+2Ch+var_2C] ebx +
mov edi eax +
call strlen  +
lea ebp [edi+eax+2] +
mov [esp+2Ch+var_2C] ebp +
call sub_412BD0  +
mov edi eax +
xor eax eax +
test edi edi +
jz loc_451B13  +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] offset aSS_4 +
mov [esp+2Ch+var_2C] edi +
call sprintf  +
mov eax edi +
jmp loc_451B13  +
cmp byte ptr [esi+1] 3Ah +
jnz loc_451C1A  +
jmp loc_451C25  +
add ebp 2 +
mov esi edi +
jmp loc_451C3B  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 7Ch +
mov ecx [edx+38h] +
mov [esp+80h+var_34] eax +
mov eax [eax+8] +
mov edi eax +
mov [esp+80h+var_68] eax +
mov eax [edx+8] +
lea edx [eax+28h] +
lea eax [ebx+48h] +
mov [esp+80h+var_74] eax +
lea eax [ebx+44h] +
mov [esp+80h+var_78] eax +
mov eax [esi+38h] +
mov [esp+80h+var_7C] 0 +
mov [esp+80h+var_80] eax +
mov eax edi +
call sub_4508D0  +
test eax eax +
jz loc_451DBD  +
mov edi [esp+80h+var_68] +
mov [esp+80h+var_7C] 24h +
mov [esp+80h+var_80] edi +
call sub_40E140  +
test eax eax +
mov esi eax +
mov [esp+80h+var_6C] eax +
jz loc_451DBD  +
mov [eax] edi +
mov eax [esp+80h+var_34] +
mov eax [eax+28h] +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+8] 0 +
mov [esi+10h] eax +
mov eax [ebx+48h] +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+1Ch] 0 +
cmp eax 0Fh +
mov dword ptr [esi+20h] 0 +
jbe loc_45290E  +
mov esi [esp+80h+var_34] +
mov edx [ebx+44h] +
mov edi [esi+38h] +
lea ebp [edx+eax] +
mov eax [esp+80h+var_68] +
add edi edx +
lea esi [edi+4] +
add eax 4 +
cmp ebp esi +
mov [esp+80h+var_30] eax +
jnb loc_451DC7  +
mov eax [esp+80h+var_34] +
cmp byte ptr [eax+58h] 8 +
jz loc_452637  +
mov edi 4 +
xor eax eax +
lea ebp [esi+eax] +
xor eax eax +
lea ebx [esi+2] +
cmp ebp ebx +
jnb loc_451E22  +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_80] offset aDwarfErrorUnha +
call off_47D664  +
mov [esp+80h+var_80] 11h +
call sub_4105E0  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esp+0] offset aDwarfErrorRanO +
call off_47D664  +
mov dword ptr [esp+0] 11h +
call sub_4105E0  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+80h+var_30] +
mov edx edi +
call sub_450E20  +
cmp eax 0FFFFFFFFh +
jnz loc_45299C  +
add edi 0Ch +
xor eax eax +
cmp ebp edi +
jnb loc_45264E  +
mov esi edi +
mov edi 8 +
mov edx [ebx+48h] +
cmp edx eax +
jnb loc_451D6D  +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_78] edx +
mov [esp+80h+var_80] offset aDwarfErrorLine +
call off_47D664  +
mov [esp+80h+var_80] 11h +
call sub_4105E0  +
xor eax eax +
jmp loc_451D9C  +
mov eax [esp+80h+var_30] +
mov edx esi +
call sub_450E00  +
mov ecx eax +
lea eax [eax-2] +
cmp ax 2 +
ja loc_452994  +
xor eax eax +
cmp cx 4 +
setz al  +
lea eax [edi+eax+5] +
add eax ebx +
cmp ebp eax +
jbe loc_452932  +
cmp edi 4 +
jz loc_4526C4  +
add esi 0Ah +
cmp ebp esi +
jnb loc_45271F  +
add ebx edi +
lea eax [ebx+1] +
cmp ebp eax +
mov [esp+80h+var_40] 0 +
jb loc_451E7F  +
movzx esi byte ptr [ebx] +
mov [esp+80h+var_40] esi +
cmp cx 4 +
jnz loc_451EB0  +
lea eax [ebx+2] +
cmp ebp eax +
jnb loc_452622  +
mov [esp+80h+var_80] offset aDwarfErrorInva +
call off_47D664  +
mov [esp+80h+var_80] 11h +
call sub_4105E0  +
xor eax eax +
jmp loc_451D9C  +
mov [esp+80h+var_49] 1 +
lea edx [eax+2] +
cmp ebp edx +
mov [esp+80h+var_38] 0 +
jb loc_451ED5  +
movzx esi byte ptr [eax+1] +
lea edx [esi-80h] +
movzx edx dl +
lea esi [edx-80h] +
mov [esp+80h+var_38] esi +
lea edx [eax+3] +
cmp ebp edx +
jb loc_4525C5  +
movzx ecx byte ptr [eax+2] +
movzx esi cl +
mov [esp+80h+var_4A] cl +
mov [esp+80h+var_28] esi +
lea esi [eax+4] +
cmp ebp esi +
jb loc_4525AE  +
movzx eax byte ptr [eax+3] +
mov [esp+80h+var_4B] al +
mov [esp+80h+var_5C] eax +
sub eax 1 +
add eax esi +
cmp ebp eax +
jbe loc_451DA4  +
mov edi [esp+80h+var_5C] +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_80] eax +
call sub_40E140  +
cmp edi 1 +
mov [esp+80h+var_2C] eax +
mov ebx eax +
mov byte ptr [eax] 1 +
jbe loc_451F5E  +
add eax 1 +
add ebx edi +
mov edx esi +
lea esi [esi+0] +
add edx 1 +
xor ecx ecx +
cmp ebp edx +
jb loc_451F4D  +
movzx ecx byte ptr [edx-1] +
mov [eax] cl +
add eax 1 +
cmp eax ebx +
jnz loc_451F40  +
mov eax [esp+80h+var_5C] +
lea esi [esi+eax-1] +
cmp esi ebp +
jnb loc_452510  +
movzx eax byte ptr [esi] +
test al al +
jz loc_452537  +
test al al +
lea ebx [esi+1] +
jnz loc_451F8D  +
jmp loc_452351  +
add ebx 1 +
cmp byte ptr [ebx-1] 0 +
jz loc_452351  +
cmp ebp ebx +
nop   +
ja loc_451F80  +
sub ebx esi +
mov [esp+80h+var_14] ebx +
add ebx esi +
cmp ebp ebx +
jbe loc_452528  +
movzx eax byte ptr [ebx] +
test al al +
jz loc_4524B9  +
mov edi [esp+80h+var_6C] +
lea esi [esp+80h+var_14] +
test al al +
lea edx [ebx+1] +
jnz loc_451FCE  +
jmp loc_4523D0  +
add edx 1 +
cmp byte ptr [edx-1] 0 +
jz loc_4523D0  +
cmp ebp edx +
ja loc_451FC1  +
mov edi edx +
sub edi ebx +
mov [esp+80h+var_14] edi +
add edi ebx +
cmp ebp edi +
jbe loc_4527EC  +
mov eax [esp+80h+var_5C] +
mov [esp+80h+var_48] 0FFh +
sub [esp+80h+var_48] eax +
mov [esp+80h+var_64] ebp +
mov eax [esp+80h+var_6C] +
mov [esp+80h+var_44] 0 +
mov edx [eax+4] +
test edx edx +
jnz loc_452737  +
mov [esp+80h+var_50] 0 +
xor esi esi +
mov [esp+80h+var_54] 0FFFFFFFFh +
mov [esp+80h+var_5C] 0 +
mov [esp+80h+var_3C] 0 +
mov [esp+80h+var_58] 1 +
mov byte ptr [esp+80h+var_60] 0 +
nop   +
lea ebx [edi+1] +
cmp [esp+80h+var_64] ebx +
jb loc_45211E  +
movzx ecx byte ptr [edi] +
cmp cl [esp+80h+var_4B] +
movzx ebp cl +
jb loc_45212C  +
sub cl [esp+80h+var_4B] +
cmp [esp+80h+var_4A] 0 +
jz loc_4522C4  +
cmp [esp+80h+var_49] 1 +
jz loc_4524F8  +
movzx ecx cl +
movzx edx byte ptr [esp+80h+var_60] +
mov eax ecx +
movzx edi [esp+80h+var_49] +
div  [esp+80h+var_4A] +
movzx eax al +
add eax edx +
cdq   +
idiv  edi +
imul eax [esp+80h+var_40] +
mov byte ptr [esp+80h+var_60] dl +
add esi eax +
mov eax ecx +
div  [esp+80h+var_4A] +
movzx eax ah +
add eax [esp+80h+var_38] +
add [esp+80h+var_58] eax +
mov eax [esp+80h+var_5C] +
mov edx esi +
movzx ecx byte ptr [esp+80h+var_60] +
mov [esp+80h+var_70] 0 +
mov [esp+80h+var_74] eax +
mov eax [esp+80h+var_3C] +
mov [esp+80h+var_78] eax +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_7C] eax +
mov eax [esp+80h+var_44] +
mov [esp+80h+var_80] eax +
mov eax [esp+80h+var_6C] +
call sub_450A60  +
test eax eax +
jz loc_4522C4  +
mov eax [esp+80h+var_54] +
mov edi ebx +
lea ebx [edi+1] +
mov [esp+80h+var_5C] 0 +
cmp eax esi +
cmova eax esi +
mov [esp+80h+var_54] eax +
mov eax [esp+80h+var_50] +
cmp eax esi +
cmovb eax esi +
cmp [esp+80h+var_64] ebx +
mov [esp+80h+var_50] eax +
jnb loc_45204D  +
xor ecx ecx +
xor ebp ebp +
cmp cl [esp+80h+var_4B] +
jnb loc_45205D  +
cmp ebp 9 +
ja loc_45254D  +
jmp ds:off_49AEF0[ebp*4]  +
mov edi ebx +
nop   +
jmp loc_452040  +
add edi 3 +
xor eax eax +
cmp [esp+80h+var_64] edi +
jnb loc_45270F  +
add esi eax +
mov byte ptr [esp+80h+var_60] 0 +
jmp loc_452040  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_413790  +
mov edi [esp+80h+var_14] +
add edi ebx +
mov [esp+80h+var_3C] eax +
jmp loc_452040  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_413790  +
mov edi [esp+80h+var_14] +
add edi ebx +
mov ebp eax +
mov eax [esp+80h+var_44] +
test eax eax +
jz loc_4521D7  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov edx ebp +
call sub_451AF0  +
mov [esp+80h+var_44] eax +
jmp loc_452040  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov [esp+80h+var_74] 1 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_413790  +
add [esp+80h+var_58] eax +
mov edi [esp+80h+var_14] +
add edi ebx +
jmp loc_452040  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
cmp [esp+80h+var_49] 1 +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_80] eax +
jz loc_4526FE  +
call sub_413790  +
movzx edx byte ptr [esp+80h+var_60] +
movzx ecx [esp+80h+var_49] +
add eax edx +
xor edx edx +
div  ecx +
imul eax [esp+80h+var_40] +
mov byte ptr [esp+80h+var_60] dl +
mov esi eax +
jmp loc_452217  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov ecx [esp+80h+var_68] +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_70] eax +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_80] ecx +
call sub_413790  +
add ebx [esp+80h+var_14] +
lea edi [ebx+1] +
cmp [esp+80h+var_64] edi +
jnb loc_4525D7  +
mov [esp+80h+var_80] offset aDwarfErrorMa_0 +
call off_47D664  +
mov [esp+80h+var_80] 11h +
call sub_4105E0  +
mov eax [esp+80h+var_44] +
test eax eax +
jz loc_4522D4  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_4522E7  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov eax [eax+18h] +
test eax eax +
jz loc_4522FA  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov eax [eax+14h] +
test eax eax +
jz loc_451DBD  +
mov [esp+80h+var_80] eax +
call free  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+80h+var_49] 1 +
jz loc_4526E7  +
mov eax [esp+80h+var_48] +
mov edi ebx +
movzx ecx byte ptr [esp+80h+var_60] +
cdq   +
idiv  [esp+80h+var_28] +
xor edx edx +
add eax ecx +
movzx ecx [esp+80h+var_49] +
div  ecx +
imul eax [esp+80h+var_40] +
mov byte ptr [esp+80h+var_60] dl +
add esi eax +
jmp loc_452040  +
mov edi [esp+80h+var_6C] +
mov edx 0CCCCCCCDh +
sub ebx esi +
mov [esp+80h+var_14] ebx +
add ebx esi +
mov ecx [edi+8] +
mov eax ecx +
mul  edx +
shr edx 2 +
lea eax [edx+edx*4] +
cmp ecx eax +
jz loc_4523A0  +
mov eax [edi+14h] +
mov edi [esp+80h+var_6C] +
lea edx [ecx+1] +
cmp ebp ebx +
mov [edi+8] edx +
mov [eax+ecx*4] esi +
jbe loc_452512  +
movzx eax byte ptr [ebx] +
test al al +
jz loc_452539  +
mov esi ebx +
jmp loc_451F71  +
mov edi [esp+80h+var_6C] +
lea edx ds:14h[ecx*4] +
mov eax [edi+14h] +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_80] eax +
call sub_412C60  +
test eax eax +
jz loc_4522D4  +
mov [edi+14h] eax +
mov ecx [edi+8] +
jmp loc_452376  +
mov ecx [edi+4] +
sub edx ebx +
lea eax [ebx+edx] +
mov [esp+80h+var_60] eax +
mov eax 0CCCCCCCDh +
mov [esp+80h+var_14] edx +
mul  ecx +
shr edx 2 +
lea eax [edx+edx*4] +
cmp ecx eax +
jz loc_4524D0  +
mov eax [edi+18h] +
shl ecx 4 +
add ecx eax +
mov eax [esp+80h+var_68] +
mov [ecx] ebx +
mov ebx [esp+80h+var_60] +
mov [esp+80h+var_70] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_80] eax +
mov [esp+80h+var_64] ecx +
call sub_413790  +
mov ecx [esp+80h+var_64] +
mov edx [esp+80h+var_14] +
add edx ebx +
mov ebx [edi+4] +
mov [ecx+4] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_64] edx +
shl ebx 4 +
add ebx [edi+18h] +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_70] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_80] eax +
call sub_413790  +
mov edx [esp+80h+var_64] +
add edx [esp+80h+var_14] +
mov [esp+80h+var_64] edx +
mov [ebx+8] eax +
mov ebx [edi+4] +
mov eax [esp+80h+var_68] +
shl ebx 4 +
add ebx [edi+18h] +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_70] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_80] eax +
call sub_413790  +
mov edx [esp+80h+var_64] +
add edx [esp+80h+var_14] +
mov [ebx+0Ch] eax +
mov ebx edx +
add dword ptr [edi+4] 1 +
cmp ebp edx +
jbe loc_452528  +
movzx eax byte ptr [edx] +
test al al +
jnz loc_451FB5  +
mov [esp+80h+var_14] 1 +
mov edi 1 +
jmp loc_451FDA  +
mov eax [edi+18h] +
add ecx 5 +
shl ecx 4 +
mov [esp+80h+var_7C] ecx +
mov [esp+80h+var_80] eax +
call sub_412C60  +
test eax eax +
jz loc_4522D4  +
mov [edi+18h] eax +
mov ecx [edi+4] +
jmp loc_4523F8  +
movzx ecx cl +
mov eax ecx +
div  [esp+80h+var_4A] +
movzx eax al +
imul eax [esp+80h+var_40] +
add esi eax +
jmp loc_45209D  +
mov ebx esi +
mov esi ebx +
xor ebx ebx +
add ebx esi +
cmp ebp ebx +
mov [esp+80h+var_14] 0 +
ja loc_451FA2  +
mov [esp+80h+var_14] 0 +
xor edi edi +
jmp loc_451FDA  +
mov ebx esi +
mov esi ebx +
mov ebx 1 +
mov [esp+80h+var_14] 1 +
jmp loc_451F98  +
add ebp [esp+80h+var_2C] +
mov edi ebx +
xor ebx ebx +
mov eax ebp +
cmp byte ptr [eax] 0 +
lea ebp [esp+80h+var_14] +
jz loc_452040  +
mov [esp+80h+var_24] esi +
mov esi edi +
mov edi ebp +
mov ebp eax +
nop   +
mov eax [esp+80h+var_64] +
add ebx 1 +
mov [esp+80h+var_7C] esi +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] edi +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_413790  +
movzx eax byte ptr [ebp+0] +
add esi [esp+80h+var_14] +
cmp eax ebx +
ja loc_452570  +
mov edi esi +
mov esi [esp+80h+var_24] +
jmp loc_452040  +
mov eax 0FFFFFFFFh +
mov [esp+80h+var_4B] 0 +
mov [esp+80h+var_5C] 0 +
jmp loc_451F09  +
mov [esp+80h+var_4A] 0 +
mov [esp+80h+var_28] 0 +
jmp loc_451EEF  +
movzx edx byte ptr [ebx] +
cmp dl 3 +
jz loc_45265E  +
ja loc_45274A  +
cmp dl 1 +
jz loc_452765  +
cmp dl 2 +
jnz loc_4522AB  +
mov ebx [esp+80h+var_34] +
mov ecx edi +
mov esi [esp+80h+var_64] +
mov eax [ebx+8] +
movzx edx byte ptr [ebx+58h] +
mov [esp+80h+var_80] esi +
call sub_451090  +
mov byte ptr [esp+80h+var_60] 0 +
mov esi eax +
movzx eax byte ptr [ebx+58h] +
add edi eax +
jmp loc_452040  +
movzx ecx byte ptr [ebx+1] +
test cl cl +
mov [esp+80h+var_49] cl +
jnz loc_451EB5  +
jmp loc_451E90  +
add edi 8 +
cmp ebp edi +
jnb loc_452952  +
mov esi edi +
mov edi 8 +
jmp loc_451D6B  +
mov eax [esp+80h+var_30] +
mov edx esi +
call sub_450E40  +
jmp loc_451DE8  +
cmp [esp+80h+var_64] edi +
ja loc_4528F4  +
mov [esp+80h+var_14] 0 +
xor eax eax +
xor ebx ebx +
add edi eax +
mov eax [esp+80h+var_6C] +
mov edx 0CCCCCCCDh +
mov ecx [eax+4] +
mov eax ecx +
mul  edx +
shr edx 2 +
lea eax [edx+edx*4] +
cmp ecx eax +
jnz loc_452835  +
mov eax [esp+80h+var_6C] +
add ecx 5 +
shl ecx 4 +
mov eax [eax+18h] +
mov [esp+80h+var_7C] ecx +
mov [esp+80h+var_80] eax +
call sub_412C60  +
test eax eax +
jz loc_4522C4  +
mov ecx [esp+80h+var_6C] +
mov [ecx+18h] eax +
mov ecx [ecx+4] +
jmp loc_45283C  +
add esi 6 +
cmp ebp esi +
jb loc_451E67  +
mov eax [esp+80h+var_30] +
mov edx ebx +
mov [esp+80h+var_64] ecx +
call sub_450E20  +
mov ecx [esp+80h+var_64] +
jmp loc_451E67  +
mov eax [esp+80h+var_48] +
mov edi ebx +
cdq   +
idiv  [esp+80h+var_28] +
imul eax [esp+80h+var_40] +
add esi eax +
jmp loc_452040  +
call sub_413790  +
imul eax [esp+80h+var_40] +
add esi eax +
jmp loc_452217  +
mov eax [esp+80h+var_30] +
mov edx ebx +
call sub_450E00  +
jmp loc_452154  +
mov eax [esp+80h+var_30] +
mov edx ebx +
mov [esp+80h+var_64] ecx +
call sub_450E40  +
mov ecx [esp+80h+var_64] +
jmp loc_451E67  +
mov edx 1 +
call sub_451AF0  +
mov [esp+80h+var_44] eax +
jmp loc_45200F  +
cmp dl 4 +
jz loc_452804  +
cmp dl 80h +
jnz loc_4522AB  +
lea edi [edi+eax-1] +
jmp loc_452040  +
mov eax [esp+80h+var_5C] +
mov edx esi +
movzx ecx byte ptr [esp+80h+var_60] +
mov [esp+80h+var_70] 1 +
mov [esp+80h+var_74] eax +
mov eax [esp+80h+var_3C] +
mov [esp+80h+var_78] eax +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_7C] eax +
mov eax [esp+80h+var_44] +
mov [esp+80h+var_80] eax +
mov eax [esp+80h+var_6C] +
call sub_450A60  +
test eax eax +
jz loc_4522C4  +
mov eax [esp+80h+var_34] +
mov ecx [esp+80h+var_54] +
lea edx [eax+0Ch] +
lea ebx [eax+8] +
mov eax [esp+80h+var_50] +
cmp ecx esi +
cmova ecx esi +
cmp eax esi +
cmovb eax esi +
mov [esp+80h+var_80] eax +
mov eax ebx +
call sub_450FD0  +
test eax eax +
jz loc_4522C4  +
mov eax [esp+80h+var_44] +
test eax eax +
jz loc_4527E2  +
mov [esp+80h+var_80] eax +
call free  +
cmp [esp+80h+var_64] edi +
ja loc_451FF8  +
mov eax [esp+80h+var_6C] +
mov esi [eax+0Ch] +
test esi esi +
jnz loc_4529AE  +
mov eax [esp+80h+var_6C] +
jmp loc_451D9C  +
mov eax [esp+80h+var_64] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_413790  +
add edi [esp+80h+var_14] +
mov [esp+80h+var_5C] eax +
jmp loc_452040  +
mov eax [esp+80h+var_6C] +
mov eax [eax+18h] +
shl ecx 4 +
lea edx [eax+ecx] +
mov eax [esp+80h+var_64] +
mov [edx] ebx +
mov [esp+80h+var_24] edx +
mov edx [esp+80h+var_68] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_70] eax +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_80] edx +
mov [esp+80h+var_78] ebp +
call sub_413790  +
mov edx [esp+80h+var_24] +
mov ecx [esp+80h+var_64] +
add edi [esp+80h+var_14] +
mov [edx+4] eax +
mov eax [esp+80h+var_6C] +
mov edx [esp+80h+var_68] +
mov ebx [eax+4] +
shl ebx 4 +
add ebx [eax+18h] +
mov [esp+80h+var_70] ecx +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_80] edx +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
call sub_413790  +
mov ecx [esp+80h+var_64] +
mov edx [esp+80h+var_68] +
add edi [esp+80h+var_14] +
mov [ebx+8] eax +
mov eax [esp+80h+var_6C] +
mov ebx [eax+4] +
shl ebx 4 +
add ebx [eax+18h] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_70] ecx +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_80] edx +
call sub_413790  +
add edi [esp+80h+var_14] +
mov [ebx+0Ch] eax +
mov eax [esp+80h+var_6C] +
add dword ptr [eax+4] 1 +
jmp loc_452040  +
cmp byte ptr [ebx+1] 0 +
jnz loc_452962  +
mov [esp+80h+var_14] 1 +
mov eax 1 +
xor ebx ebx +
jmp loc_452674  +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_80] offset aDwarfErrorLi_0 +
call off_47D664  +
mov [esp+80h+var_80] 11h +
call sub_4105E0  +
xor eax eax +
jmp loc_451D9C  +
mov [esp+80h+var_80] offset aDwarfErrorRa_0 +
call off_47D664  +
mov [esp+80h+var_80] 11h +
call sub_4105E0  +
xor eax eax +
jmp loc_451D9C  +
mov eax [esp+80h+var_30] +
mov edx esi +
call sub_450E20  +
jmp loc_451DE8  +
add ebx 2 +
jmp loc_452970  +
add ebx 1 +
cmp byte ptr [ebx-1] 0 +
jz loc_452985  +
cmp [esp+80h+var_64] ebx +
ja loc_452967  +
mov eax ebx +
xor ebx ebx +
sub eax edi +
mov [esp+80h+var_14] eax +
jmp loc_452674  +
mov eax ebx +
mov ebx edi +
sub eax edi +
mov [esp+80h+var_14] eax +
jmp loc_452674  +
movzx eax cx +
jmp loc_451D7D  +
test eax eax +
jz loc_451D58  +
mov edi 4 +
jmp loc_451DEF  +
mov edi eax +
mov eax [eax] +
lea edx [esi+esi*2] +
shl edx 2 +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_80] eax +
call sub_40E140  +
test eax eax +
mov ebx eax +
jz loc_4522D4  +
mov eax [edi+1Ch] +
mov ebp ebx +
xor edi edi +
jmp loc_452A08  +
mov edx [eax] +
add edi 1 +
add ebp 0Ch +
mov dword ptr [ebp-8] 0 +
mov [ebp-0Ch] edx +
mov edx [eax+8] +
mov [ebp-4] edx +
mov edx [eax+4] +
mov [esp+80h+var_80] eax +
mov [esp+80h+var_68] edx +
call free  +
cmp edi esi +
mov edx [esp+80h+var_68] +
jz loc_452A2A  +
mov eax edx +
test eax eax +
jnz loc_4529D7  +
mov [esp+80h+var_7C] 648h +
mov [esp+80h+var_80] offset a____Binutil_24 +
mov [esp+80h+var_68] eax +
call sub_410530  +
mov eax [esp+80h+var_68] +
jmp loc_4529D7  +
test edx edx +
jz loc_452A42  +
mov [esp+80h+var_7C] 64Fh +
mov [esp+80h+var_80] offset a____Binutil_24 +
call sub_410530  +
mov [esp+80h+var_74] offset sub_450E60 +
mov [esp+80h+var_78] 0Ch +
mov [esp+80h+var_7C] esi +
mov [esp+80h+var_80] ebx +
call qsort  +
mov eax [ebx+8] +
mov ecx [eax+4] +
mov eax [esp+80h+var_6C] +
mov eax [eax+0Ch] +
cmp eax 1 +
mov [esp+80h+var_64] eax +
jbe loc_452AC2  +
mov eax ebx +
mov edx 1 +
mov ebp 1 +
mov [esp+80h+var_68] ebx +
cmp [eax+0Ch] ecx +
mov esi [eax+14h] +
jnb loc_452A94  +
cmp [esi+4] ecx +
jbe loc_452AB0  +
mov [eax+0Ch] ecx +
cmp edx ebp +
mov ecx [esi+4] +
jnb loc_452AAD  +
mov ebx [esp+80h+var_68] +
lea edi [edx+edx*2] +
lea edi [ebx+edi*4] +
mov ebx [eax+0Ch] +
mov [edi+8] esi +
mov [edi] ebx +
add edx 1 +
add ebp 1 +
add eax 0Ch +
cmp ebp [esp+80h+var_64] +
jnz loc_452A84  +
mov ebx [esp+80h+var_68] +
jmp loc_452AC7  +
mov edx 1 +
mov eax [esp+80h+var_6C] +
mov [eax+1Ch] ebx +
mov [eax+0Ch] edx +
jmp loc_4527FB  +
***
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [eax+8] +
mov ebp [eax+3Ch] +
mov [esp+7Ch+var_64] eax +
mov [esp+7Ch+var_50] edi +
mov edi eax +
mov eax [eax+50h] +
mov eax [eax+10h] +
mov [esp+7Ch+var_7C] 80h +
mov esi eax +
mov [esp+7Ch+var_60] eax +
call sub_412BD0  +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_4534E7  +
cmp ebp esi +
mov dword ptr [eax+4] 0 +
jnb loc_452F08  +
mov eax edi +
add eax 8 +
mov [esp+7Ch+var_38] 20h +
mov [esp+7Ch+var_54] 1 +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+var_60] +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_70] 0 +
mov [esp+7Ch+var_6C] eax +
lea eax [esp+7Ch+var_20] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_7C] eax +
call sub_413790  +
add ebp [esp+7Ch+var_20] +
test eax eax +
mov ecx eax +
jnz loc_452F20  +
sub [esp+7Ch+var_54] 1 +
mov eax [esp+7Ch+var_54] +
test eax eax +
jz loc_453525  +
cmp ebp [esp+7Ch+var_60] +
jb loc_452EBF  +
mov eax [esp+7Ch+var_44] +
mov [esp+7Ch+var_7C] eax +
call free  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 0ECF56BFh +
mul  edx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add edx eax +
mov eax ecx +
shr edx 6 +
imul edx edx +
sub eax edx +
mov edx eax +
mov eax [esp+7Ch+var_64] +
mov eax [eax+1Ch] +
mov ebx [eax+edx*4] +
test ebx ebx +
jnz loc_452F5B  +
jmp loc_453330  +
mov ebx [ebx+14h] +
test ebx ebx +
jz loc_453330  +
cmp ecx [ebx] +
lea esi [esi+0] +
jnz loc_452F50  +
mov eax [ebx+4] +
cmp eax 2Eh +
jz loc_453105  +
cmp eax 3 +
jz loc_453105  +
cmp eax 1Dh +
jz loc_453105  +
cmp eax 34h +
mov [esp+7Ch+var_5C] 0 +
jz loc_45348B  +
mov edi [esp+7Ch+var_54] +
mov eax [esp+7Ch+var_44] +
mov dword ptr [eax+edi*4] 0 +
xor edi edi +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_4530D3  +
lea eax [edi+1Ch] +
xor esi esi +
mov [esp+7Ch+var_40] eax +
lea eax [edi+24h] +
mov [esp+7Ch+var_48] 0 +
mov [esp+7Ch+var_4C] 0 +
mov [esp+7Ch+var_58] 0 +
mov [esp+7Ch+var_3C] eax +
jmp loc_45300C  +
cmp eax 12h +
jz loc_453275  +
ja loc_4531A6  +
cmp eax 3 +
jz loc_453220  +
cmp eax 11h +
mov eax [esp+7Ch+var_58] +
cmovz eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_58] eax +
nop   +
add esi 1 +
cmp [ebx+0Ch] esi +
jbe loc_453092  +
mov eax [ebx+10h] +
mov ecx [esp+7Ch+var_64] +
lea eax [eax+esi*8] +
mov edx [eax] +
mov [esp+7Ch+var_1C] edx +
mov edx [eax+4] +
mov eax [esp+7Ch+var_60] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
lea eax [esp+7Ch+var_1C] +
call sub_4512B0  +
test eax eax +
mov ebp eax +
jz loc_452F08  +
test edi edi +
jz loc_453161  +
mov eax [esp+7Ch+var_1C] +
cmp eax 3Bh +
jz loc_453210  +
jbe loc_452FD7  +
cmp eax 58h +
jz loc_4532C3  +
lea esi [esi+0] +
jbe loc_4531D0  +
cmp eax 6Eh +
jz loc_453290  +
cmp eax 2007h +
jz loc_453290  +
cmp eax 59h +
jnz loc_453000  +
mov eax [esp+7Ch+var_14] +
add esi 1 +
cmp [ebx+0Ch] esi +
mov [edi+10h] eax +
ja loc_45300C  +
mov esi [esp+7Ch+var_48] +
test esi esi +
jz loc_453420  +
mov eax [esp+7Ch+var_58] +
add [esp+7Ch+var_4C] eax +
setnz al  +
test edi edi +
setnz dl  +
and eax edx +
test al al +
jz loc_4530D3  +
mov eax [esp+7Ch+var_4C] +
lea edx [edi+24h] +
mov ecx [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+var_34] +
call sub_450FD0  +
test eax eax +
jz loc_452F08  +
mov edx [ebx+8] +
test edx edx +
jz loc_452EF6  +
add [esp+7Ch+var_54] 1 +
mov eax [esp+7Ch+var_38] +
cmp [esp+7Ch+var_54] eax +
jge loc_4534F1  +
mov eax [esp+7Ch+var_44] +
mov edi [esp+7Ch+var_54] +
mov dword ptr [eax+edi*4] 0 +
jmp loc_452EF6  +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_78] 34h +
mov [esp+7Ch+var_7C] eax +
call sub_40E220  +
test eax eax +
mov edi eax +
jz loc_452F08  +
mov ecx [esp+7Ch+var_64] +
mov eax [ebx+4] +
mov edx [ecx+48h] +
mov [edi+18h] eax +
mov [edi] edx +
mov edx [ecx+60h] +
mov [ecx+48h] edi +
test edx edx +
jnz loc_453435  +
cmp eax 1Dh +
jz loc_453455  +
mov eax [esp+7Ch+var_44] +
mov ecx [esp+7Ch+var_54] +
mov [esp+7Ch+var_5C] 0 +
mov [eax+ecx*4] edi +
jmp loc_452FA2  +
mov eax [esp+7Ch+var_5C] +
test eax eax +
jz loc_453000  +
mov eax [esp+7Ch+var_1C] +
cmp eax 3Ah +
jz loc_453352  +
ja loc_453300  +
cmp eax 2 +
jz loc_453370  +
cmp eax 3 +
lea esi [esi+0] +
jnz loc_453000  +
mov eax [esp+7Ch+var_14] +
mov ecx [esp+7Ch+var_5C] +
mov [ecx+10h] eax +
jmp loc_453000  +
cmp eax 31h +
jz loc_4532E0  +
cmp eax 3Ah +
jnz loc_453000  +
mov eax [esp+7Ch+var_64] +
mov edx [esp+7Ch+var_14] +
mov eax [eax+44h] +
call sub_451AF0  +
mov [edi+0Ch] eax +
jmp loc_453000  +
cmp eax 47h +
jz loc_4532E0  +
cmp eax 55h +
jnz loc_453000  +
mov eax [esp+7Ch+var_14] +
mov edx [esp+7Ch+var_10] +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+var_64] +
mov [esp+7Ch+var_78] edx +
mov edx [esp+7Ch+var_3C] +
call sub_451190  +
test eax eax +
jnz loc_453000  +
jmp loc_452F08  +
mov eax [esp+7Ch+var_14] +
mov [edi+14h] eax +
jmp loc_453000  +
mov eax [edi+20h] +
test eax eax +
jnz loc_453000  +
mov eax [esp+7Ch+var_18] +
cmp eax 8 +
jz loc_453244  +
cmp eax 0Eh +
jz loc_453244  +
cmp eax 1F21h +
jnz loc_453000  +
mov eax [esp+7Ch+var_14] +
mov [edi+20h] eax +
mov eax [esp+7Ch+var_64] +
mov eax [eax+20h] +
lea ecx [eax-1] +
cmp ecx 1Ch +
mov [esp+7Ch+var_30] eax +
ja loc_453000  +
mov eax 1 +
shl eax cl +
test eax 10025977h +
jnz loc_4532B7  +
jmp loc_453000  +
mov eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_4C] eax +
xor eax eax +
cmp [esp+7Ch+var_18] 1 +
setnz al  +
mov [esp+7Ch+var_48] eax +
jmp loc_453000  +
mov eax [esp+7Ch+var_18] +
cmp eax 8 +
jz loc_4532B0  +
cmp eax 0Eh +
jz loc_4532B0  +
cmp eax 1F21h +
jnz loc_453000  +
lea esi [esi+0] +
mov eax [esp+7Ch+var_14] +
mov [edi+20h] eax +
mov dword ptr [edi+1Ch] 1 +
jmp loc_453000  +
mov eax [esp+7Ch+var_64] +
mov edx [esp+7Ch+var_14] +
mov eax [eax+44h] +
call sub_451AF0  +
mov [edi+8] eax +
jmp loc_453000  +
mov ecx [esp+7Ch+var_40] +
lea edx [esp+7Ch+var_1C] +
mov eax [esp+7Ch+var_64] +
call sub_452AE0  +
mov [edi+20h] eax +
jmp loc_453000  +
cmp eax 3Bh +
jz loc_453410  +
cmp eax 3Fh +
jnz loc_453000  +
mov eax [esp+7Ch+var_10] +
or eax [esp+7Ch+var_14] +
jz loc_453000  +
mov eax [esp+7Ch+var_5C] +
and byte ptr [eax+1Ch] 0FEh +
jmp loc_453000  +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] offset aDwarfErrorCoul +
call off_47D664  +
mov [esp+7Ch+var_7C] 11h +
call sub_4105E0  +
jmp loc_452F08  +
mov eax [esp+7Ch+var_64] +
mov edx [esp+7Ch+var_14] +
mov eax [eax+44h] +
call sub_451AF0  +
mov ecx [esp+7Ch+var_5C] +
mov [ecx+4] eax +
jmp loc_453000  +
mov eax [esp+7Ch+var_18] +
lea ecx [eax-3] +
cmp ecx 15h +
ja loc_453000  +
mov eax 1 +
shl eax cl +
test eax 2000C3h +
jz loc_453000  +
mov eax [esp+7Ch+var_14] +
mov ecx [eax+4] +
cmp byte ptr [ecx] 3 +
jnz loc_453000  +
mov edx [esp+7Ch+var_5C] +
mov [esp+7Ch+var_30] ecx +
and byte ptr [edx+1Ch] 0FEh +
mov edx [esp+7Ch+var_64] +
movzx edx byte ptr [edx+58h] +
lea ecx [edx+1] +
cmp [eax] ecx +
mov ecx [esp+7Ch+var_30] +
jnz loc_453000  +
shl edx 3 +
cmp edx 8 +
jz loc_45353B  +
cmp edx 10h +
jz loc_453544  +
cmp edx 20h +
jz loc_45357A  +
cmp edx 40h +
jnz loc_45355E  +
mov eax [esp+7Ch+var_64] +
lea edx [ecx+1] +
mov eax [eax+8] +
mov eax [eax+4] +
mov eax [eax+1Ch] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov ecx [esp+7Ch+var_5C] +
mov [ecx+14h] eax +
jmp loc_453000  +
mov eax [esp+7Ch+var_14] +
mov ecx [esp+7Ch+var_5C] +
mov [ecx+8] eax +
jmp loc_453000  +
mov ecx [esp+7Ch+var_4C] +
test ecx ecx +
setnz al  +
test edi edi +
setnz dl  +
and eax edx +
jmp loc_4530B0  +
mov [esp+7Ch+var_78] 9D4h +
mov [esp+7Ch+var_7C] offset a____Binutil_24 +
call sub_410530  +
mov eax [edi+18h] +
cmp eax 1Dh +
jnz loc_453149  +
mov eax [esp+7Ch+var_54] +
sub eax 1 +
jz loc_453149  +
mov ecx [esp+7Ch+var_44] +
mov edx [ecx+eax*4] +
mov ecx [esp+7Ch+var_44] +
test edx edx +
jz loc_453481  +
jmp loc_45351D  +
mov edx [ecx+eax*4] +
test edx edx +
jnz loc_45351D  +
sub eax 1 +
jnz loc_453476  +
jmp loc_453149  +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_78] 20h +
mov [esp+7Ch+var_7C] eax +
call sub_40E220  +
test eax eax +
mov edi eax +
mov [esp+7Ch+var_5C] eax +
jz loc_452F08  +
mov eax [ebx+4] +
mov ecx [esp+7Ch+var_64] +
or byte ptr [edi+1Ch] 1 +
mov [edi+0Ch] eax +
mov eax [ecx+4Ch] +
mov [edi] eax +
mov eax [ecx+60h] +
mov [ecx+4Ch] edi +
test eax eax +
jz loc_452F91  +
mov [esp+7Ch+var_78] 9ECh +
mov [esp+7Ch+var_7C] offset a____Binutil_24 +
call sub_410530  +
jmp loc_452F91  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shl [esp+7Ch+var_38] 1 +
mov eax [esp+7Ch+var_38] +
shl eax 2 +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+var_44] +
mov [esp+7Ch+var_7C] eax +
call sub_412C60  +
test eax eax +
jz loc_452F08  +
mov [esp+7Ch+var_44] eax +
jmp loc_4530F1  +
mov [edi+4] edx +
jmp loc_453149  +
mov eax [esp+7Ch+var_44] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax 1 +
jmp loc_452F16  +
movzx eax byte ptr [ecx+1] +
jmp loc_453401  +
mov eax [esp+7Ch+var_64] +
lea edx [ecx+1] +
mov eax [eax+8] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
jmp loc_453401  +
mov [esp+7Ch+var_74] offset aScan_unit_for_ +
mov [esp+7Ch+var_78] 0A68h +
mov [esp+7Ch+var_7C] offset a____Binutil_24 +
call sub_410560  +
mov eax [esp+7Ch+var_64] +
lea edx [ecx+1] +
mov eax [eax+8] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
jmp loc_453401  +
***
sub esp 8 +
mov eax [eax+24h] +
test eax eax +
jnz loc_4535C0  +
mov ecx [ebx+44h] +
test ecx ecx +
jz loc_4535C7  +
mov eax 1 +
add esp 8 +
pop ebx  +
retn   +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
mov eax [ebx+2Ch] +
test eax eax +
jnz loc_4535E0  +
mov dword ptr [ebx+24h] 1 +
xor eax eax +
jmp loc_4535B9  +
mov eax ebx +
call sub_451C80  +
test eax eax +
mov [ebx+44h] eax +
jz loc_453613  +
mov eax [ebx+40h] +
cmp [ebx+3Ch] eax +
jnb loc_4535B4  +
mov eax ebx +
call sub_452E60  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_4535B9  +
mov dword ptr [ebx+24h] 1 +
xor al al +
jmp loc_4535B9  +
mov dword ptr [ebx+24h] 1 +
jmp loc_4535B9  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov edx [esp+30h+arg_8] +
mov [esp+30h+var_28] ecx +
call sub_4535A0  +
test eax eax +
jz loc_4536B7  +
test byte ptr [ebx+0Ch] 8 +
mov ecx [esp+30h+var_28] +
jnz loc_4536C1  +
mov esi [esi+4Ch] +
mov edi [ebx+4] +
mov ebp [ebx+10h] +
test esi esi +
jz loc_4536B7  +
mov [esp+30h+var_28] edi +
mov edi ecx +
jmp loc_453666  +
mov esi [esi] +
test esi esi +
jz loc_4536B7  +
test byte ptr [esi+1Ch] 1 +
jnz loc_453660  +
mov ebx [esi+4] +
test ebx ebx +
jz loc_453660  +
mov eax [esi+10h] +
test eax eax +
jz loc_453660  +
cmp edi [esi+14h] +
jnz loc_453660  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_45368A  +
cmp ebp ecx +
jnz loc_453660  +
mov [esp+30h+var_2C] eax +
mov eax [esp+30h+var_28] +
mov [esp+30h+var_30] eax +
call strcmp  +
test eax eax +
jnz loc_453660  +
mov eax [esp+30h+arg_0] +
mov [esi+18h] ebp +
mov ecx [esp+30h+arg_4] +
mov [eax] ebx +
mov eax [esi+8] +
mov [ecx] eax +
mov eax 1 +
jmp loc_4536B9  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+48h] +
mov eax [ebx+4] +
mov edi [ebx+10h] +
test ebp ebp +
mov [esp+30h+var_1C] eax +
jz loc_4536B7  +
mov [esp+30h+var_14] 0 +
mov edx ebp +
mov [esp+30h+var_18] 0 +
lea ebx [edx+24h] +
mov esi [edx+30h] +
mov [esp+30h+var_28] edx +
jmp loc_4536FA  +
cmp edi esi +
jz loc_4536FE  +
mov ebx [ebx] +
test ebx ebx +
jz loc_453760  +
test esi esi +
jnz loc_4536F0  +
mov ebp [ebx+4] +
cmp ecx ebp +
jb loc_4536F4  +
mov edx [ebx+8] +
cmp ecx edx +
jnb loc_4536F4  +
mov eax [esp+30h+var_28] +
mov [esp+30h+var_24] edx +
mov eax [eax+20h] +
test eax eax +
jz loc_4536F4  +
mov [esp+30h+var_2C] eax +
mov eax [esp+30h+var_1C] +
mov [esp+30h+var_20] ecx +
mov [esp+30h+var_30] eax +
call strcmp  +
mov ecx [esp+30h+var_20] +
mov edx [esp+30h+var_24] +
test eax eax +
jnz loc_4536F4  +
mov eax [esp+30h+var_18] +
sub edx ebp +
test eax eax +
jz loc_45374B  +
cmp edx [esp+30h+var_14] +
jnb loc_4536F4  +
mov ebx [ebx] +
mov eax [esp+30h+var_28] +
mov [esp+30h+var_14] edx +
test ebx ebx +
mov [esp+30h+var_18] eax +
jnz loc_4536FA  +
lea esi [esi+0] +
mov edx [esp+30h+var_28] +
mov edx [edx] +
test edx edx +
jnz loc_4536E4  +
mov edx [esp+30h+var_18] +
test edx edx +
jz loc_4536B7  +
mov eax [edx+0Ch] +
mov ecx [esp+30h+arg_0] +
mov [edx+30h] edi +
mov [ecx] eax +
mov eax [edx+14h] +
mov edx [esp+30h+arg_4] +
mov [edx] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [eax+24h] +
mov [esp+1Ch+var_14] eax +
mov [esp+1Ch+var_10] ecx +
test edi edi +
jnz loc_453882  +
mov esi [eax+44h] +
mov ebx edx +
test esi esi +
jz loc_453874  +
mov eax [esp+1Ch+arg_0] +
xor ebp ebp +
xor edi edi +
mov dword ptr [eax] 0 +
mov eax [esp+1Ch+var_14] +
mov esi [eax+48h] +
test esi esi +
jz loc_453820  +
lea eax [esi+24h] +
mov edx [eax+4] +
cmp ebx edx +
jb loc_453800  +
mov ecx [eax+8] +
cmp ebx ecx +
jnb loc_453800  +
sub ecx edx +
test edi edi +
jz loc_4537FB  +
cmp ecx ebp +
jnb loc_453800  +
mov ebp ecx +
mov edi esi +
nop   +
mov eax [eax] +
test eax eax +
jnz loc_4537E3  +
mov esi [esi] +
test esi esi +
jnz loc_4537E0  +
test edi edi +
jz loc_453820  +
mov eax [esp+1Ch+arg_0] +
cmp dword ptr [edi+18h] 1Dh +
mov [eax] edi +
jz loc_4538E0  +
mov eax [esp+1Ch+var_14] +
mov eax [eax+44h] +
mov edx [eax+0Ch] +
test edx edx +
jle loc_453860  +
mov ebp [eax+1Ch] +
xor ecx ecx +
jmp loc_453844  +
mov ecx [esi+8] +
cmp ebx [ecx+4] +
jb loc_453894  +
lea ecx [eax+1] +
cmp ecx edx +
jge loc_45385C  +
lea eax [ecx+edx] +
sar eax 1 +
lea esi [eax+eax*2] +
lea esi [ebp+esi*4+0] +
mov edi [esi] +
cmp ebx edi +
jnb loc_453835  +
mov edx eax +
cmp ecx edx +
jl loc_453844  +
cmp ebx edi +
jnb loc_45388C  +
mov eax [esp+1Ch+var_10] +
mov dword ptr [eax] 0 +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [eax+2Ch] +
test ecx ecx +
jnz loc_4538A5  +
mov dword ptr [eax+24h] 1 +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esi+8] +
cmp [ecx+4] ebx +
jbe loc_453860  +
mov eax ecx +
jmp loc_45389D  +
cmp ebx [eax+4] +
jnb loc_4538EC  +
mov eax [eax] +
test eax eax +
jnz loc_453898  +
jmp loc_453860  +
mov edi [esp+1Ch+var_14] +
mov edx [esp+1Ch+arg_C] +
mov eax edi +
call sub_451C80  +
test eax eax +
mov [edi+44h] eax +
mov eax [esp+1Ch+var_14] +
jz loc_45387B  +
mov edi [eax+40h] +
cmp [eax+3Ch] edi +
jnb loc_4537C7  +
call sub_452E60  +
test eax eax +
jnz loc_4537C7  +
mov eax [esp+1Ch+var_14] +
jmp loc_45387B  +
mov eax [esp+1Ch+arg_C] +
mov [eax+5Ch] edi +
jmp loc_453820  +
cmp byte ptr [eax+19h] 0 +
jnz loc_453860  +
cmp ecx eax +
jz loc_453860  +
mov edx [eax+8] +
mov ebx [esp+1Ch+var_10] +
mov ecx [eax+0Ch] +
mov [ebx] edx +
mov edx [esp+1Ch+arg_4] +
mov [edx] ecx +
mov edx [esp+1Ch+arg_8] +
test edx edx +
jz loc_453921  +
mov eax [eax+14h] +
mov ebx [esp+1Ch+arg_8] +
mov [ebx] eax +
mov eax [esi+8] +
mov eax [eax+4] +
sub eax edi +
jmp loc_453884  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [eax] +
mov eax [eax+78h] +
cmp edx eax +
jz loc_453B79  +
test eax eax +
jz loc_453B71  +
mov esi [eax+4] +
test esi esi +
jz loc_453ADE  +
lea esi [esi+0] +
mov eax [ebp+74h] +
cmp dword ptr [ebp+7Ch] 2 +
mov edi [ebp+70h] +
mov [esp+28h+var_1C] eax +
jz loc_453B36  +
mov edx ebp +
mov eax esi +
call sub_4535A0  +
test eax eax +
jz loc_453B60  +
mov ecx [esi+60h] +
test ecx ecx +
jnz loc_453AF0  +
mov ebx [esi+48h] +
test ebx ebx +
jz loc_453B0F  +
xor edx edx +
jmp loc_453A04  +
mov edx ebx +
mov ebx eax +
mov eax [ebx] +
mov [ebx] edx +
test eax eax +
jnz loc_453A00  +
mov [esi+48h] ebx +
mov eax 1 +
jmp loc_453A1A  +
test ebx ebx +
jz loc_453A30  +
mov edx [ebx+20h] +
test edx edx +
jz loc_453A2A  +
mov ecx ebx +
mov eax edi +
call sub_453930  +
test eax eax +
mov ebx [ebx] +
jnz loc_453A16  +
mov edx [esi+48h] +
test edx edx +
jz loc_453A4C  +
xor ebx ebx +
jmp loc_453A44  +
mov ebx edx +
mov edx ecx +
mov ecx [edx] +
mov [edx] ebx +
test ecx ecx +
jnz loc_453A40  +
test eax eax +
mov [esi+48h] edx +
jz loc_453B60  +
mov ebx [esi+4Ch] +
test ebx ebx +
jz loc_453B26  +
xor ecx ecx +
jmp loc_453A6A  +
mov ecx ebx +
mov ebx edx +
mov edx [ebx] +
mov [ebx] ecx +
test edx edx +
jnz loc_453A66  +
mov [esi+4Ch] ebx +
mov edi [esp+28h+var_1C] +
jmp loc_453A84  +
test ebx ebx +
jz loc_453AA7  +
test byte ptr [ebx+1Ch] 1 +
jnz loc_453AA1  +
mov edx [ebx+4] +
test edx edx +
jz loc_453AA1  +
mov edx [ebx+10h] +
test edx edx +
jz loc_453AA1  +
mov ecx ebx +
mov eax edi +
call sub_453930  +
test eax eax +
mov ebx [ebx] +
jnz loc_453A80  +
mov edx [esi+4Ch] +
test edx edx +
jz loc_453ABE  +
xor ebx ebx +
jmp loc_453AB6  +
mov ebx edx +
mov edx ecx +
mov ecx [edx] +
mov [edx] ebx +
test ecx ecx +
jnz loc_453AB2  +
test eax eax +
mov [esi+4Ch] edx +
mov dword ptr [esi+60h] 1 +
jz loc_453B60  +
mov esi [esi+4] +
test esi esi +
jnz loc_4539C0  +
mov edx [ebp+0] +
mov [ebp+78h] edx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_24] 0C23h +
mov [esp+28h+var_28] offset a____Binutil_24 +
call sub_410530  +
mov ebx [esi+48h] +
test ebx ebx +
jnz loc_4539FB  +
mov ebx [esi+4Ch] +
mov eax 1 +
mov dword ptr [esi+48h] 0 +
test ebx ebx +
jnz loc_453A62  +
mov dword ptr [esi+4Ch] 0 +
mov dword ptr [esi+60h] 1 +
jmp loc_453AD0  +
mov [esp+28h+var_24] 0C1Eh +
mov [esp+28h+var_28] offset a____Binutil_24 +
call sub_410530  +
mov edx ebp +
mov eax esi +
call sub_4535A0  +
test eax eax +
jnz loc_4539E5  +
nop   +
lea esi [esi+0] +
mov dword ptr [ebp+7Ch] 2 +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+4] +
jmp loc_4539B1  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+44h] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_453C37  +
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+18h] eax +
jz loc_453C37  +
mov eax [esp+18h] +
mov esi [eax+48h] +
test esi esi +
jz loc_453C53  +
mov [esp+10h] esi +
nop   +
mov eax [esp+10h] +
mov edi [eax+20h] +
test edi edi +
jz loc_453C1B  +
mov eax [eax+28h] +
test eax eax +
mov [esp+14h] eax +
jz loc_453C1B  +
mov eax [esp+40h] +
mov ebx [eax] +
test ebx ebx +
jz loc_453C1B  +
mov esi eax +
test byte ptr [ebx+0Ch] 8 +
jz loc_453C12  +
mov ebp [ebx+10h] +
test ebp ebp +
jz loc_453C12  +
mov [esp+4] edi +
mov eax [ebx+4] +
mov [esp] eax +
call strcmp  +
test eax eax +
jz loc_453C41  +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jnz loc_453BF2  +
mov eax [esp+10h] +
mov eax [eax] +
test eax eax +
mov [esp+10h] eax +
jnz loc_453BD0  +
mov eax [esp+18h] +
mov eax [eax] +
test eax eax +
mov [esp+18h] eax +
jnz loc_453BBB  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+14h] +
sub eax [ebp+1Ch] +
sub eax [ebx+8] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [eax+44h] +
test eax eax +
jz loc_453C74  +
mov eax [esp+18h] +
call sub_452E60  +
mov eax [esp+18h] +
mov esi [eax+48h] +
test esi esi +
jnz loc_453BCA  +
jmp loc_453C29  +
***
mov edi [esp+18h] +
mov edx [esp+1Ch] +
mov eax edi +
call sub_451C80  +
test eax eax +
mov [edi+44h] eax +
jz loc_453C63  +
jmp loc_453C5A  +
***
mov edx [eax] +
test edx edx +
jz loc_453CD4  +
mov eax [edx+5Ch] +
test eax eax +
jz loc_453CD4  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_453CD4  +
mov ebx [eax+8] +
mov ecx [esp+arg_4] +
mov [ecx] ebx +
mov ecx [eax+4] +
mov ebx [ecx+20h] +
mov ecx [esp+arg_8] +
mov [ecx] ebx +
mov ebx [eax+10h] +
mov ecx [esp+arg_C] +
mov eax [eax+4] +
mov [ecx] ebx +
mov [edx+5Ch] eax +
mov eax 1 +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
mov ecx [edx] +
test ecx ecx +
mov [esp+1Ch+var_18] ecx +
jz loc_453EBF  +
test eax eax +
jz loc_453EBF  +
mov eax [ecx] +
test eax eax +
mov [esp+1Ch+var_14] eax +
jz loc_453DDE  +
mov eax [esp+1Ch+var_14] +
xor ebx ebx +
mov esi [eax+1Ch] +
mov edi [eax+48h] +
mov eax [eax+4Ch] +
mov [esp+1Ch+var_10] eax +
mov ebp [esi+ebx*4] +
test ebp ebp +
jz loc_453D42  +
lea esi [esi+0] +
mov eax [ebp+10h] +
mov [esp+1Ch+var_1C] eax +
call free  +
mov ebp [ebp+14h] +
test ebp ebp +
jnz loc_453D30  +
add ebx 1 +
cmp ebx 79h +
jnz loc_453D26  +
mov esi [esp+1Ch+var_14] +
mov eax [esi+44h] +
test eax eax +
jz loc_453D6E  +
mov eax [eax+14h] +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esi+44h] +
mov eax [eax+18h] +
mov [esp+1Ch+var_1C] eax +
call free  +
test edi edi +
jz loc_453DA4  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_453D88  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [edi+0Ch] 0 +
mov eax [edi+8] +
test eax eax +
jz loc_453D9E  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [edi+8] 0 +
mov edi [edi] +
test edi edi +
jnz loc_453D72  +
mov ecx [esp+1Ch+var_10] +
mov ebx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_453DCC  +
mov eax [ebx+4] +
test eax eax +
jz loc_453DC6  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [ebx+4] 0 +
mov ebx [ebx] +
test ebx ebx +
jnz loc_453DB0  +
mov eax [esp+1Ch+var_14] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch+var_14] eax +
jnz loc_453D13  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_453DF1  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+44h] +
test eax eax +
jz loc_453E04  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_453E17  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+54h] +
test eax eax +
jz loc_453E2A  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+34h] +
test eax eax +
jz loc_453E3D  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov edx [eax+80h] +
test edx edx +
jnz loc_453EB2  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+24h] +
test eax eax +
jz loc_453E5E  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+2Ch] +
test eax eax +
jz loc_453E71  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+60h] +
test eax eax +
jz loc_453E84  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+68h] +
test eax eax +
jz loc_453E97  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+20h] +
test eax eax +
jz loc_453EBF  +
mov [esp+1Ch+arg_0] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_40DDB0  +
mov eax [eax+14h] +
mov [esp+1Ch+var_1C] eax +
call sub_40DDB0  +
jmp loc_453E4B  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_10] +
mov ebp [eax] +
test ebp ebp +
jz loc_4542C0  +
mov edi [esp+4Ch+arg_0] +
mov eax [esp+4Ch+arg_0] +
mov esi [edi+6Ch] +
mov eax [eax+64h] +
test esi esi +
jz loc_454088  +
mov edi [ebp+60h] +
xor edx edx +
jmp loc_453F1B  +
mov ecx [eax+38h] +
add ecx [ebx+1Ch] +
cmp [edi+edx*4] ecx +
jnz loc_453F30  +
add edx 1 +
mov eax [eax+0Ch] +
cmp edx esi +
jz loc_454088  +
mov ebx [eax+3Ch] +
test ebx ebx +
jnz loc_453F02  +
mov ecx [eax+1Ch] +
cmp [edi+edx*4] ecx +
jz loc_453F0D  +
lea esi [esi+0] +
mov eax [esp+4Ch+arg_10] +
mov edi ebp +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_453CE0  +
test ebp 1 +
mov edx 84h +
jnz loc_454438  +
test edi 2 +
jnz loc_454446  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_453F7A  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
and edx 1 +
jz loc_453F82  +
mov byte ptr [edi] 0 +
mov eax [esp+4Ch+arg_8] +
mov [ebp+8] eax +
mov eax [esp+4Ch+arg_C] +
mov [ebp+38h] eax +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+6Ch] +
test eax eax +
jnz loc_454105  +
mov eax [esp+4Ch+arg_10] +
mov [eax] ebp +
mov eax [esp+4Ch+arg_4] +
test eax eax +
jz loc_4542E5  +
mov eax [esp+4Ch+arg_4] +
cmp [esp+4Ch+arg_0] eax +
setz bl  +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
call sub_450ED0  +
test eax eax +
mov [esp+4Ch+var_2C] eax +
jz loc_454095  +
mov eax [esp+4Ch+arg_4] +
mov [ebp+14h] eax +
mov eax [esp+4Ch+arg_14] +
test eax eax +
jz loc_454170  +
mov eax [ebp+64h] +
cmp eax 0 +
mov [esp+4Ch+var_30] eax +
jnz loc_454156  +
mov eax [ebp+8] +
mov [esp+4Ch+var_28] ebp +
mov eax [eax+18h] +
mov [esp+4Ch+var_34] eax +
mov eax [esp+4Ch+arg_0] +
mov ebp eax +
lea esi [esi+0] +
mov ebx [ebp+64h] +
test ebx ebx +
jz loc_454078  +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_454028  +
cmp ebx eax +
jz loc_454028  +
test byte ptr [ebx+15h] 20h +
jz loc_454071  +
mov eax [ebx+1Ch] +
test eax eax +
jnz loc_454071  +
mov esi [ebx] +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] eax +
call strcmp  +
mov edx 1 +
test eax eax +
jz loc_45405C  +
mov edi offset a_gnu_linkonc_0 +
mov ecx 11h +
cmps   +
setz dl  +
movzx edx dl +
test byte ptr [ebx+14h] 1 +
jz loc_454068  +
cmp [esp+4Ch+arg_0] ebp +
jz loc_45406C  +
test edx edx +
jz loc_454071  +
add [esp+4Ch+var_30] 1 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_454017  +
cmp [esp+4Ch+arg_4] ebp +
jz loc_4542F7  +
mov ebp [esp+4Ch+arg_4] +
jmp loc_454010  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl bl +
jz loc_453FD5  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset aHomeJenkinsM_0 +
mov [esp+4Ch+var_4C] eax +
call sub_40E560  +
test eax eax +
mov ebx eax +
jz loc_4540FB  +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] eax +
call sub_40DC70  +
test eax eax +
mov [esp+4Ch+arg_4] eax +
jz loc_4540F3  +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] eax +
call sub_40EFC0  +
test eax eax +
jnz loc_4544D1  +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_4C] eax +
call sub_40DDB0  +
mov [esp+4Ch+var_4C] ebx +
call free  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shl eax 2 +
mov [esp+4Ch+var_4C] eax +
call sub_412BD0  +
test eax eax +
mov [ebp+60h] eax +
jz loc_4540FB  +
mov edi [esp+4Ch+arg_0] +
mov edx [edi+64h] +
mov edi [edi+6Ch] +
test edi edi +
jz loc_453F9F  +
xor ecx ecx +
jmp loc_454147  +
mov ebx [edx+38h] +
add ebx [esi+1Ch] +
mov [eax+ecx*4] ebx +
add ecx 1 +
mov edx [edx+0Ch] +
cmp ecx edi +
jz loc_453F9F  +
mov esi [edx+3Ch] +
test esi esi +
jnz loc_454130  +
mov ebx [edx+1Ch] +
mov [eax+ecx*4] ebx +
jmp loc_454139  +
mov eax [ebp+68h] +
jle loc_454170  +
mov edx [esp+4Ch+var_30] +
nop   +
mov ecx [eax] +
add eax 8 +
mov ebx [eax-4] +
sub edx 1 +
mov [ecx+1Ch] ebx +
jnz loc_454160  +
mov ecx [esp+4Ch+var_2C] +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
call sub_450F40  +
test eax eax +
jz loc_45424F  +
mov ecx [esp+4Ch+var_2C] +
xor eax eax +
mov [esp+4Ch+var_10] 0 +
test ecx ecx +
jz loc_4541BD  +
mov ebx [esp+4Ch+arg_4] +
mov esi [esp+4Ch+arg_8] +
add eax [ecx+24h] +
mov edx esi +
mov [esp+4Ch+var_10] eax +
mov eax ebx +
call sub_450F40  +
mov ecx eax +
mov eax [esp+4Ch+var_10] +
test ecx ecx +
jnz loc_4541A3  +
mov [esp+4Ch+var_4C] eax +
call sub_412BD0  +
test eax eax +
mov [ebp+34h] eax +
jz loc_4540FB  +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_10] 0 +
call sub_450ED0  +
test eax eax +
mov ecx eax +
jz loc_454293  +
mov ebx [esp+4Ch+arg_4] +
mov esi [esp+4Ch+arg_8] +
jmp loc_454213  +
mov edx esi +
mov eax ebx +
call sub_450F40  +
test eax eax +
mov ecx eax +
jz loc_454293  +
mov edi [ecx+24h] +
test edi edi +
jz loc_454200  +
mov eax [esp+4Ch+arg_C] +
mov [esp+4Ch+var_34] ecx +
mov [esp+4Ch+var_40] eax +
mov eax [ebp+34h] +
add eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_4C] ebx +
mov [esp+4Ch+var_44] eax +
call sub_459470  +
test eax eax +
jz loc_4540FB  +
add [esp+4Ch+var_10] edi +
mov ecx [esp+4Ch+var_34] +
jmp loc_454200  +
mov eax [esp+4Ch+var_2C] +
mov ecx [esp+4Ch+arg_C] +
mov eax [eax+24h] +
mov [esp+4Ch+var_10] eax +
mov eax [ebp+8] +
mov [esp+4Ch+var_4C] 0 +
mov [esp+4Ch+var_48] 0 +
lea edx [eax+18h] +
lea eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_40] eax +
lea eax [ebp+34h] +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_4] +
call sub_4508D0  +
test eax eax +
jz loc_4540FB  +
mov eax [ebp+34h] +
mov edx [esp+4Ch+arg_8] +
mov [ebp+0Ch] eax +
add eax [esp+4Ch+var_10] +
mov [ebp+10h] eax +
mov eax [esp+4Ch+arg_4] +
call sub_450ED0  +
mov [ebp+18h] eax +
mov eax [ebp+0Ch] +
mov [ebp+1Ch] eax +
mov eax 1 +
jmp loc_45408D  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] 84h +
mov [esp+4Ch+var_4C] eax +
call sub_40E220  +
test eax eax +
mov ebp eax +
jnz loc_453F82  +
xor eax eax +
jmp loc_4540FD  +
mov eax [esp+4Ch+arg_0] +
mov ebx 1 +
mov [esp+4Ch+arg_4] eax +
jmp loc_453FBC  +
cmp [esp+4Ch+var_30] 1 +
mov ebp [esp+4Ch+var_28] +
jle loc_454457  +
mov edi [esp+4Ch+var_30] +
mov eax edi +
shl eax 3 +
mov [esp+4Ch+var_4C] eax +
call sub_412BD0  +
test eax eax +
jz loc_4540FB  +
mov [ebp+64h] edi +
mov edi [esp+4Ch+arg_0] +
mov ebx eax +
mov [ebp+68h] eax +
mov [esp+4Ch+var_24] 0 +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_30] edi +
mov [esp+4Ch+var_20] ebp +
mov eax [esp+4Ch+var_30] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_4543E0  +
mov eax [ebp+3Ch] +
test eax eax +
jz loc_454363  +
cmp ebp eax +
jz loc_454363  +
test byte ptr [ebp+15h] 20h +
jz loc_4543D5  +
mov eax [ebp+1Ch] +
test eax eax +
jnz loc_4543D5  +
mov esi [ebp+0] +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] eax +
call strcmp  +
mov ecx 1 +
test eax eax +
jz loc_454395  +
mov cl 11h +
mov edi offset a_gnu_linkonc_0 +
cmps   +
setz cl  +
movzx ecx cl +
test byte ptr [ebp+14h] 1 +
jz loc_4543A5  +
mov eax [esp+4Ch+var_30] +
cmp [esp+4Ch+arg_0] eax +
jz loc_4543A9  +
test ecx ecx +
jz loc_4543D5  +
mov esi [ebp+28h] +
test esi esi +
jnz loc_4543B3  +
mov esi [ebp+24h] +
test ecx ecx +
jz loc_454400  +
mov edi [ebp+40h] +
test edi edi +
jnz loc_454422  +
mov edi [esp+4Ch+var_24] +
mov eax edi +
mov [ebp+1Ch] edi +
add edi esi +
mov [esp+4Ch+var_24] edi +
mov [ebx] ebp +
add ebx 8 +
mov [ebx-4] eax +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_454352  +
mov eax [esp+4Ch+var_20] +
mov eax [eax+14h] +
cmp [esp+4Ch+var_30] eax +
jz loc_4544C7  +
mov [esp+4Ch+var_30] eax +
jmp loc_454343  +
mov ecx [ebp+40h] +
mov edi 1 +
mov eax [esp+4Ch+var_28] +
shl edi cl +
lea eax [eax+edi-1] +
neg edi  +
and eax edi +
lea edi [esi+eax] +
mov [ebp+1Ch] eax +
mov [esp+4Ch+var_28] edi +
jmp loc_4543CD  +
mov [esp+4Ch+var_48] 0D14h +
mov [esp+4Ch+var_4C] offset a____Binutil_24 +
call sub_410530  +
jmp loc_4543BE  +
mov byte ptr [ebp+0] 0 +
lea edi [ebp+1] +
mov dl 83h +
jmp loc_453F57  +
xor ebx ebx +
add edi 2 +
mov [edi-2] bx +
sub edx 2 +
jmp loc_453F63  +
mov eax [esp+4Ch+arg_4] +
mov dword ptr [ebp+64h] 0FFFFFFFFh +
cmp [esp+4Ch+arg_0] eax +
jz loc_454170  +
mov ebx [eax+64h] +
mov edi [esp+4Ch+arg_0] +
test ebx ebx +
mov esi [edi+64h] +
jnz loc_4544BE  +
jmp loc_454170  +
test byte ptr [ebx+15h] 20h +
jnz loc_454170  +
mov eax [ebx] +
mov [esp+4Ch+var_48] eax +
mov eax [esi] +
mov [esp+4Ch+var_4C] eax +
call strcmp  +
test eax eax +
jnz loc_4544B0  +
mov eax [esi+3Ch] +
mov [ebx+3Ch] eax +
mov eax [esi+38h] +
mov [ebx+38h] eax +
mov eax [esi+1Ch] +
mov [ebx+1Ch] eax +
mov ebx [ebx+0Ch] +
mov esi [esi+0Ch] +
test ebx ebx +
jz loc_454170  +
test esi esi +
jnz loc_454480  +
jmp loc_454170  +
mov ebp [esp+4Ch+var_20] +
mov eax [esp+4Ch+var_30] +
jmp loc_454462  +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
call sub_450ED0  +
test eax eax +
mov [esp+4Ch+var_2C] eax +
jz loc_4540E7  +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_4C] eax +
call sub_4247B0  +
test eax eax +
jz loc_4540E7  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax+78h] +
mov dword ptr [ebp+80h] 1 +
mov [esp+4Ch+arg_C] eax +
mov [ebp+38h] eax +
jmp loc_453FD5  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+3Ch+arg_4] +
mov ebx [esp+3Ch+arg_0] +
test esi esi +
jz loc_4546D0  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_4546D0  +
mov eax [ebx+0A0h] +
mov ebp [eax+234h] +
test ebp ebp +
jz loc_4546A4  +
mov eax [esp+3Ch+arg_8] +
cmp [ebp+0] eax +
jz loc_4546F2  +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov dword ptr [ebp+8] 0 +
mov dword ptr [ebp+4] 0 +
mov dword ptr [ebp+0Ch] 0 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_8] +
mov [ebp+0] eax +
mov ebx [esi] +
test ebx ebx +
jz loc_4546D0  +
xor edx edx +
xor edi edi +
mov [esp+3Ch+var_24] ebp +
mov ebp edx +
mov [esp+3Ch+var_20] 0 +
jmp loc_4545CA  +
cmp edi 1 +
mov eax 2 +
cmovz edi eax +
mov ebp ebx +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jz loc_45464F  +
test byte ptr [ebx+0Dh] 40h +
jnz loc_4545B0  +
mov eax [esp+3Ch+var_28] +
lea edx [esp+3Ch+var_10] +
mov ecx [esp+3Ch+arg_8] +
mov eax [eax+15Ch] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
test eax eax +
jz loc_454638  +
mov ecx [esp+3Ch+var_10] +
cmp [esp+3Ch+arg_C] ecx +
jb loc_454638  +
cmp ecx [esp+3Ch+var_20] +
jbe loc_454690  +
mov edx [esp+3Ch+var_24] +
test ebp ebp +
mov [edx+4] ebx +
mov [edx+0Ch] eax +
mov dword ptr [edx+8] 0 +
jz loc_45471C  +
test byte ptr [ebx+0Ch] 1 +
jz loc_4546E0  +
mov eax [ebp+4] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_20] ecx +
mov [edx+8] eax +
test edi edi +
mov eax 1 +
cmovz edi eax +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jnz loc_4545CA  +
mov ebp [esp+3Ch+var_24] +
mov edx [ebp+4] +
test edx edx +
jz loc_4546D0  +
mov ecx [esp+3Ch+arg_10] +
test ecx ecx +
jz loc_45466B  +
mov eax [ebp+8] +
mov edx [esp+3Ch+arg_10] +
mov [edx] eax +
mov eax [esp+3Ch+arg_14] +
test eax eax +
jz loc_45467F  +
mov eax [ebp+4] +
mov edx [esp+3Ch+arg_14] +
mov eax [eax+4] +
mov [edx] eax +
mov eax [ebp+4] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+3Ch+var_20] ecx +
jnz loc_454638  +
mov edx [esp+3Ch+var_24] +
cmp eax [edx+0Ch] +
jbe loc_454638  +
jmp loc_454607  +
mov [esp+3Ch+var_38] 10h +
mov [esp+3Ch+var_3C] ebx +
call sub_40E220  +
mov ebp eax +
mov eax [ebx+0A0h] +
test ebp ebp +
mov [eax+234h] ebp +
jnz loc_454558  +
lea esi [esi+0] +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edi 2 +
mov [esp+3Ch+var_20] ecx +
jnz loc_45462A  +
jmp loc_4545BD  +
mov eax [ebp+4] +
test eax eax +
jz loc_454565  +
mov eax [eax+8] +
cmp eax [esp+3Ch+arg_C] +
ja loc_454565  +
add eax [ebp+0Ch] +
cmp [esp+3Ch+arg_C] eax +
jnb loc_454565  +
jmp loc_45465A  +
mov [esp+3Ch+var_20] ecx +
jmp loc_454638  +
***
push esi  +
push ebx  +
sub esp 8Ch +
mov esi [esp+8Ch+arg_18] +
mov eax [esp+8Ch+arg_14] +
mov ebx [esp+8Ch+arg_2C] +
mov [esp+8Ch+var_2C] 0 +
test esi esi +
mov dword ptr [eax] 0 +
jz loc_45476E  +
mov eax [esp+8Ch+arg_18] +
mov dword ptr [eax] 0 +
mov ecx [esp+8Ch+arg_20] +
mov eax [esp+8Ch+arg_1C] +
test ecx ecx +
mov dword ptr [eax] 0 +
jz loc_454793  +
mov eax [esp+8Ch+arg_20] +
mov dword ptr [eax] 0 +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+28h] +
mov [esp+8Ch+var_7C] ebx +
mov [esp+8Ch+var_88] 0 +
shr eax 5 +
test al 42h +
setz al  +
movzx eax al +
mov [esp+8Ch+var_78] eax +
mov eax [esp+8Ch+arg_4] +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+arg_24] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_453ED0  +
test eax eax +
jz loc_454972  +
mov edx [esp+8Ch+arg_8] +
xor eax eax +
mov ebp [ebx] +
test edx edx +
setnz al  +
mov [esp+8Ch+var_5C] eax +
jz loc_454911  +
mov eax [esp+8Ch+arg_C] +
test eax eax +
jnz loc_454820  +
mov eax [esp+8Ch+arg_10] +
test eax eax +
jnz loc_454820  +
mov eax [esp+8Ch+arg_18] +
test eax eax +
jz loc_454834  +
mov [esp+8Ch+var_88] 0F3Dh +
mov [esp+8Ch+var_8C] offset a____Binutil_24 +
call sub_410530  +
mov eax [esp+8Ch+arg_8] +
mov eax [eax+10h] +
mov [esp+8Ch+arg_C] eax +
mov eax [esp+8Ch+arg_8] +
mov edx [eax+8] +
mov eax [esp+8Ch+arg_C] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_45495F  +
mov ecx [esp+8Ch+arg_C] +
mov eax [eax+1Ch] +
add edx [ecx+38h] +
mov [esp+8Ch+var_6C] edx +
add [esp+8Ch+var_6C] eax +
mov ebx [ebp+0Ch] +
test ebx ebx +
jz loc_454972  +
mov ecx [esp+8Ch+var_5C] +
mov dword ptr [ebp+5Ch] 0 +
test ecx ecx +
jz loc_454997  +
mov eax [ebp+7Ch] +
test eax eax +
jz loc_454BFC  +
cmp eax 1 +
jz loc_454C4D  +
mov ebx [ebp+0] +
test ebx ebx +
jz loc_454B18  +
mov esi [esp+8Ch+arg_8] +
mov edi [esp+8Ch+arg_1C] +
jmp loc_4548D8  +
mov eax [ebx+24h] +
test eax eax +
jz loc_45497F  +
mov ebx [ebx] +
test ebx ebx +
jz loc_454B18  +
test byte ptr [esi+0Ch] 8 +
jz loc_4548E5  +
mov eax [ebx+14h] +
test eax eax +
jnz loc_4548C3  +
mov eax [esp+8Ch+arg_14] +
mov edx esi +
mov ecx [esp+8Ch+var_6C] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_8C] eax +
mov eax ebx +
call sub_453620  +
test eax eax +
jz loc_4548CE  +
mov [esp+8Ch+var_68] eax +
jmp loc_454A0E  +
mov edi [esp+8Ch+arg_18] +
test edi edi +
jz loc_454932  +
mov esi [esp+8Ch+arg_C] +
mov edx [esp+8Ch+arg_10] +
test esi esi +
jnz loc_45484F  +
mov [esp+8Ch+var_88] 0F43h +
mov [esp+8Ch+var_8C] offset a____Binutil_24 +
call sub_410530  +
mov eax [esp+8Ch+arg_C] +
mov edx [esp+8Ch+arg_10] +
mov eax [eax+3Ch] +
test eax eax +
jnz loc_454861  +
mov eax [esp+8Ch+arg_C] +
add edx [eax+1Ch] +
mov [esp+8Ch+var_6C] edx +
jmp loc_454876  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+8Ch+var_6C] +
mov eax ebx +
call sub_450EB0  +
test eax eax +
jnz loc_4548E5  +
jmp loc_4548CE  +
mov ebx [ebp+0] +
mov [esp+8Ch+var_28] 0 +
mov [esp+8Ch+var_24] 0 +
mov [esp+8Ch+var_20] 0 +
test ebx ebx +
mov [esp+8Ch+var_1C] 0 +
jz loc_455710  +
mov edi 0FFFFFFFFh +
mov [esp+8Ch+var_74] edi +
mov edi [esp+8Ch+var_6C] +
lea esi [esp+8Ch+var_1C] +
mov eax [ebx+14h] +
test eax eax +
jz loc_454A86  +
mov ecx [ebx+24h] +
test ecx ecx +
jz loc_454A75  +
xor eax eax +
mov ebx [ebx] +
test ebx ebx +
jnz loc_4549D3  +
mov [esp+8Ch+var_68] eax +
mov eax [esp+8Ch+arg_1C] +
mov eax [eax] +
test eax eax +
jz loc_454B20  +
mov [esp+8Ch+var_68] 1 +
mov eax [esp+8Ch+var_2C] +
test eax eax +
jz loc_454A2D  +
mov ecx [eax+1Ch] +
test ecx ecx +
jz loc_454D17  +
mov eax [eax+20h] +
mov edi [esp+8Ch+arg_18] +
mov [edi] eax +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+28h] +
mov eax [esp+8Ch+var_68] +
shr edx 5 +
and edx 42h +
jnz loc_454974  +
mov edx [ebp+64h] +
mov ecx [ebp+68h] +
test edx edx +
jle loc_454974  +
mov eax [ecx] +
add ecx 8 +
sub edx 1 +
mov dword ptr [eax+1Ch] 0 +
jnz loc_454A55  +
mov eax [esp+8Ch+var_68] +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx edi +
mov eax ebx +
call sub_450EB0  +
test eax eax +
jz loc_4549E9  +
lea eax [esp+8Ch+var_20] +
mov edx edi +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_8C] eax +
lea ecx [esp+8Ch+var_28] +
mov eax ebx +
mov [esp+8Ch+var_80] ebp +
mov [esp+8Ch+var_84] esi +
call sub_4537A0  +
test eax eax +
jz loc_4549E9  +
cmp eax [esp+8Ch+var_74] +
ja loc_454BBD  +
mov edx [esp+8Ch+var_28] +
test edx edx +
jz loc_454ACD  +
mov ecx [esp+8Ch+arg_14] +
mov [ecx] edx +
mov edx [esp+8Ch+var_24] +
test edx edx +
jz loc_454AD9  +
mov [esp+8Ch+var_2C] edx +
mov edx [esp+8Ch+arg_20] +
test edx edx +
jz loc_454AF5  +
mov edx [esp+8Ch+var_1C] +
test edx edx +
jz loc_454AF5  +
mov ecx [esp+8Ch+arg_20] +
mov [ecx] edx +
mov edx [esp+8Ch+var_20] +
test edx edx +
jz loc_454BB9  +
mov ecx [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_74] eax +
mov eax 1 +
mov [ecx] edx +
jmp loc_4549EB  +
mov [esp+8Ch+var_68] 0 +
mov eax [esp+8Ch+arg_28] +
test eax eax +
jnz loc_454BC7  +
mov [esp+8Ch+arg_28] 4 +
lea eax [ebp+40h] +
mov ebx [ebp+0Ch] +
mov [esp+8Ch+var_3C] eax +
lea eax [ebp+3Ch] +
mov [esp+8Ch+var_38] eax +
jmp loc_454B68  +
add ebx 8 +
xor edi edi +
cmp ecx ebx +
jnb loc_454D05  +
test edi edi +
mov [ebp+0Ch] ebx +
jnz loc_4557C9  +
mov ecx [ebp+10h] +
mov esi ebx +
cmp ecx ebx +
jbe loc_454A0E  +
mov eax [ebp+14h] +
lea edx [esi+4] +
mov ebx esi +
add eax 4 +
cmp ecx edx +
jb loc_454B50  +
mov edx esi +
call sub_450E20  +
cmp eax 0FFFFFFFFh +
jnz loc_454DAA  +
mov edx [ebp+0Ch] +
xor edi edi +
mov eax [ebp+14h] +
lea ebx [edx+0Ch] +
cmp [ebp+10h] ebx +
jb loc_454B5D  +
add edx 4 +
add eax 4 +
call sub_450E40  +
mov edx [ebp+0Ch] +
lea ebx [edx+0Ch] +
mov edi eax +
jmp loc_454B5D  +
mov [esp+8Ch+var_74] eax +
mov eax 1 +
jmp loc_4549EB  +
cmp [esp+8Ch+arg_28] 8 +
jz loc_454B3A  +
cmp [esp+8Ch+arg_28] 4 +
jz loc_454B3A  +
mov [esp+8Ch+var_88] 0FB3h +
mov [esp+8Ch+var_8C] offset a____Binutil_24 +
call sub_410530  +
jmp loc_454B3A  +
mov eax [ebp+6Ch] +
lea edx [eax+1] +
cmp eax 63h +
mov [ebp+6Ch] edx +
jle loc_4548A8  +
mov eax [esp+8Ch+arg_0] +
call sub_450D50  +
mov [ebp+70h] eax +
mov eax [esp+8Ch+arg_0] +
call sub_450D50  +
mov edx [ebp+70h] +
test edx edx +
mov [ebp+74h] eax +
jz loc_45571D  +
test eax eax +
jz loc_45571D  +
mov eax ebp +
call sub_453990  +
mov dword ptr [ebp+7Ch] 1 +
mov eax ebp +
call sub_453990  +
cmp dword ptr [ebp+7Ch] 1 +
jnz loc_4548A8  +
mov eax [esp+8Ch+arg_8] +
test byte ptr [eax+0Ch] 8 +
jnz loc_45563E  +
mov eax [esp+8Ch+arg_8] +
mov edi [esp+8Ch+arg_8] +
mov eax [eax+4] +
mov ebx [edi+10h] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_88] eax +
mov eax [ebp+74h] +
mov [esp+8Ch+var_8C] eax +
call sub_4123C0  +
test eax eax +
jz loc_454B18  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_454B18  +
mov ecx [esp+8Ch+var_6C] +
jmp loc_454CCA  +
mov eax [eax] +
test eax eax +
jz loc_454B18  +
mov edx [eax+4] +
cmp ecx [edx+14h] +
jnz loc_454CC0  +
mov esi [edx+18h] +
test esi esi +
jz loc_454CDD  +
cmp ebx esi +
jnz loc_454CC0  +
mov eax [edx+4] +
mov edi [esp+8Ch+arg_14] +
mov [edx+18h] ebx +
mov [esp+8Ch+var_68] 1 +
mov [edi] eax +
mov eax [edx+8] +
mov edi [esp+8Ch+arg_1C] +
mov [edi] eax +
jmp loc_454A0E  +
call sub_450E20  +
mov ebx [ebp+0Ch] +
add ebx 8 +
mov edi eax +
jmp loc_454B5D  +
mov edi [esp+8Ch+arg_14] +
xor eax eax +
mov edx [edi] +
test edx edx +
cmovz eax edi +
mov edi [esp+8Ch+arg_18] +
mov [esp+8Ch+var_7C] eax +
mov eax [esp+8Ch+arg_10] +
mov [esp+8Ch+var_78] edi +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+arg_C] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_4] +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_454520  +
mov edi [esp+8Ch+arg_C] +
mov edx [edi+3Ch] +
mov ecx [edi+1Ch] +
test edx edx +
jz loc_454D7D  +
mov ecx [edi+38h] +
add ecx [edx+1Ch] +
test eax eax +
mov edx [esp+8Ch+var_2C] +
jz loc_454D8D  +
add ecx [eax+8] +
cmp ecx [edx+28h] +
jz loc_454D9C  +
mov eax [edx+20h] +
mov dword ptr [edx+1Ch] 1 +
jmp loc_454A24  +
mov eax [esp+8Ch+arg_18] +
mov eax [eax] +
mov [edx+20h] eax +
jmp loc_454D90  +
test eax eax +
jz loc_4557A8  +
cmp [esp+8Ch+arg_28] 8 +
mov [esp+8Ch+var_60] eax +
jz loc_454E60  +
mov eax [esp+8Ch+arg_28] +
add dword ptr [ebp+0Ch] 4 +
cmp [esp+8Ch+arg_28] 4 +
mov [esp+8Ch+var_64] eax +
setnz cl  +
mov ebx [ebp+0Ch] +
mov edi [ebp+14h] +
mov eax [esp+8Ch+var_60] +
mov [esp+8Ch+var_74] 0FFFFFFFEh +
mov [esp+8Ch+var_40] 0 +
mov [esp+8Ch+var_58] edi +
add edi 4 +
add eax ebx +
mov [esp+8Ch+var_70] edi +
lea edi [ebx+2] +
cmp eax edi +
mov [esp+8Ch+var_4C] eax +
mov [esp+8Ch+var_54] edi +
jnb loc_4555BB  +
test cl cl +
jnz loc_4555A2  +
cmp [esp+8Ch+var_64] 4 +
jz loc_4555DE  +
lea eax [ebx+0Ah] +
xor edi edi +
xor ebx ebx +
cmp [esp+8Ch+var_4C] eax +
jnb loc_455603  +
mov eax [esp+8Ch+var_54] +
add eax [esp+8Ch+var_64] +
lea ecx [eax+1] +
cmp [esp+8Ch+var_4C] ecx +
mov [esp+8Ch+var_34] ecx +
jnb loc_454E73  +
cmp [esp+8Ch+var_74] 2 +
ja loc_455782  +
xor eax eax +
jmp loc_454E95  +
add dword ptr [ebp+0Ch] 4 +
xor ecx ecx +
mov [esp+8Ch+var_64] 4 +
jmp loc_454DDE  +
movzx eax byte ptr [eax] +
cmp [esp+8Ch+var_74] 2 +
mov [esp+8Ch+var_2D] al +
ja loc_455782  +
cmp eax 4 +
ja loc_455732  +
jz loc_454EB7  +
cmp eax 2 +
jz loc_454EB7  +
mov [esp+8Ch+var_88] eax +
mov [esp+8Ch+var_8C] offset aDwarfErrorFoun +
call off_47D664  +
mov [esp+8Ch+var_8C] 11h +
call sub_4105E0  +
jmp loc_454A0E  +
mov eax [esp+8Ch+var_3C] +
mov ecx [ebp+38h] +
mov edx [ebp+8] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+var_38] +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_58] +
call sub_4508D0  +
test eax eax +
jz loc_454A0E  +
cmp edi 0 +
mov eax [ebp+40h] +
ja loc_454A0E  +
cmp ebx eax +
jnb loc_454A0E  +
mov edi [esp+8Ch+var_58] +
mov [esp+8Ch+var_88] 1E4h +
mov [esp+8Ch+var_8C] edi +
call sub_40E220  +
test eax eax +
mov [esp+8Ch+var_48] eax +
jz loc_454A0E  +
mov eax [ebp+3Ch] +
mov [esp+8Ch+var_58] edi +
add ebx eax +
add eax [ebp+40h] +
mov [esp+8Ch+var_88] ebx +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_74] eax +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] edi +
call sub_413790  +
add ebx [esp+8Ch+var_1C] +
test eax eax +
mov [esp+8Ch+var_50] eax +
jz loc_45511F  +
mov edi [esp+8Ch+var_58] +
mov [esp+8Ch+var_54] ebp +
mov ebp ebx +
mov [esp+8Ch+var_44] esi +
mov [esp+8Ch+var_88] 18h +
mov [esp+8Ch+var_8C] edi +
call sub_40E220  +
test eax eax +
mov ebx eax +
jz loc_455729  +
mov eax [esp+8Ch+var_50] +
mov esi [esp+8Ch+var_74] +
mov [ebx] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_7C] esi +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] edi +
call sub_413790  +
mov edx [esp+8Ch+var_1C] +
add edx ebp +
lea ebp [edx+1] +
mov [ebx+4] eax +
xor eax eax +
cmp esi ebp +
jb loc_454FC0  +
movzx eax byte ptr [edx] +
mov [ebx+8] eax +
jmp loc_454FD6  +
mov eax [ebx+10h] +
lea eax [eax+edx*8] +
add edx 1 +
mov [eax] esi +
mov [ebx+0Ch] edx +
mov [eax+4] ecx +
mov eax [esp+8Ch+var_74] +
lea ecx [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] ecx +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_7C] eax +
mov [esp+8Ch+var_8C] edi +
call sub_413790  +
add ebp [esp+8Ch+var_1C] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_88] ebp +
mov esi eax +
mov eax [esp+8Ch+var_74] +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] eax +
call sub_413790  +
add ebp [esp+8Ch+var_1C] +
test esi esi +
mov ecx eax +
jz loc_455069  +
mov edx [ebx+0Ch] +
test dl 3 +
jnz loc_454FC5  +
mov [esp+8Ch+var_70] eax +
mov eax [ebx+10h] +
mov ecx eax +
lea eax ds:20h[edx*8] +
mov [esp+8Ch+var_8C] ecx +
mov [esp+8Ch+var_88] eax +
call sub_412C60  +
mov ecx [esp+8Ch+var_70] +
test eax eax +
jz loc_4553B9  +
mov [ebx+10h] eax +
mov edx [ebx+0Ch] +
jmp loc_454FC8  +
mov ecx [esp+8Ch+var_50] +
mov eax 0ECF56BFh +
mov esi [esp+8Ch+var_48] +
mul  ecx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax 6 +
imul eax eax +
sub ecx eax +
mov eax ecx +
mov ecx [esp+8Ch+var_54] +
lea eax [esi+eax*4] +
mov edx [eax] +
mov [ebx+14h] edx +
mov [eax] ebx +
mov eax ebp +
sub eax [ecx+3Ch] +
cmp eax [ecx+40h] +
jnb loc_455117  +
mov eax [esp+8Ch+var_74] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] eax +
call sub_413790  +
add ebp [esp+8Ch+var_1C] +
mov ecx eax +
mov [esp+8Ch+var_50] eax +
mov eax 0ECF56BFh +
mul  ecx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx ecx +
shr eax 6 +
imul eax eax +
sub ecx eax +
mov eax ecx +
mov eax [esi+eax*4] +
test eax eax +
jz loc_45510B  +
cmp edx [eax] +
jz loc_455117  +
mov edx [esp+8Ch+var_50] +
jmp loc_455104  +
cmp edx [eax] +
jz loc_455117  +
mov eax [eax+14h] +
test eax eax +
jnz loc_455100  +
mov eax [esp+8Ch+var_50] +
test eax eax +
jnz loc_454F67  +
mov ebp [esp+8Ch+var_54] +
mov esi [esp+8Ch+var_44] +
mov eax [esp+8Ch+var_4C] +
mov edi [esp+8Ch+var_34] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_20] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_58] +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_8C] eax +
call sub_413790  +
mov ecx eax +
mov eax [esp+8Ch+var_20] +
add eax edi +
test ecx ecx +
mov edi eax +
jz loc_45575C  +
mov eax ecx +
mov edx 0ECF56BFh +
mul  edx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx ecx +
shr eax 6 +
imul eax eax +
sub edx eax +
mov eax edx +
mov edx [esp+8Ch+var_48] +
mov ebx [edx+eax*4] +
test ebx ebx +
jnz loc_45519B  +
jmp loc_4553EF  +
mov ebx [ebx+14h] +
test ebx ebx +
jz loc_4553EF  +
cmp ecx [ebx] +
lea esi [esi+0] +
jnz loc_455190  +
mov eax [esp+8Ch+var_58] +
mov [esp+8Ch+var_88] 64h +
mov [esp+8Ch+var_8C] eax +
call sub_40E220  +
test eax eax +
mov [esp+8Ch+var_74] eax +
jz loc_454A0E  +
mov eax [esp+8Ch+var_74] +
mov ecx [esp+8Ch+var_58] +
mov edx [esp+8Ch+var_4C] +
mov [eax+8] ecx +
mov ecx [esp+8Ch+var_40] +
mov [eax+54h] ecx +
mov ecx eax +
movzx eax [esp+8Ch+var_2D] +
mov [ecx+58h] al +
movzx eax byte ptr [esp+8Ch+var_64] +
mov [ecx+59h] al +
mov eax ecx +
mov ecx [esp+8Ch+var_48] +
mov [eax+30h] esi +
mov esi [ebx+0Ch] +
mov [eax+40h] edx +
mov [eax+50h] ebp +
mov [eax+1Ch] ecx +
mov ecx eax +
mov eax [ebp+1Ch] +
test esi esi +
mov [ecx+34h] eax +
jz loc_455454  +
mov eax ecx +
xor esi esi +
lea ecx [ecx+0Ch] +
mov [esp+8Ch+var_48] ecx +
mov ecx edi +
mov edi edx +
mov [esp+8Ch+var_50] ebp +
mov ebp eax +
mov [esp+8Ch+var_64] 0 +
mov [esp+8Ch+var_58] 0 +
mov [esp+8Ch+var_54] 0 +
jmp loc_45526C  +
cmp eax 10h +
jz loc_455362  +
ja loc_4552BB  +
cmp eax 3 +
nop   +
jnz loc_455260  +
mov eax [esp+8Ch+var_14] +
mov [ebp+18h] eax +
lea esi [esi+0] +
add esi 1 +
cmp esi [ebx+0Ch] +
jnb loc_455411  +
mov eax [ebx+10h] +
lea eax [eax+esi*8] +
mov edx [eax] +
mov [esp+8Ch+var_1C] edx +
mov edx [eax+4] +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_8C] ecx +
mov ecx ebp +
mov [esp+8Ch+var_88] edi +
call sub_4512B0  +
test eax eax +
mov ecx eax +
jz loc_4552F8  +
mov eax [esp+8Ch+var_1C] +
cmp eax 12h +
jz loc_455347  +
jbe loc_455240  +
cmp eax 1Bh +
jz loc_455301  +
cmp eax 55h +
jz loc_4552CE  +
cmp eax 13h +
nop   +
jnz loc_455260  +
mov eax [esp+8Ch+var_14] +
mov [ebp+20h] eax +
jmp loc_455260  +
mov eax [esp+8Ch+var_14] +
cmp dword ptr [ebx+4] 11h +
mov [esp+8Ch+var_64] eax +
jnz loc_455260  +
mov [ebp+5Ch] eax +
jmp loc_455260  +
mov edx [esp+8Ch+var_10] +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_70] ecx +
mov [esp+8Ch+var_88] edx +
mov edx [esp+8Ch+var_48] +
mov [esp+8Ch+var_8C] eax +
mov eax ebp +
call sub_451190  +
mov ecx [esp+8Ch+var_70] +
test eax eax +
jnz loc_455260  +
mov ebp [esp+8Ch+var_50] +
jmp loc_454A0E  +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_70] eax +
mov eax [esp+8Ch+var_18] +
cmp eax 8 +
jz loc_455375  +
cmp eax 0Eh +
jz loc_455375  +
cmp eax 1F21h +
jz loc_455375  +
mov [esp+8Ch+var_4C] ecx +
mov [esp+8Ch+var_8C] offset aDwarfErrorDw_a +
call off_47D664  +
mov ecx [esp+8Ch+var_4C] +
mov [esp+8Ch+var_70] 0 +
mov eax [esp+8Ch+var_70] +
mov [ebp+28h] eax +
jmp loc_455260  +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_58] eax +
xor eax eax +
cmp [esp+8Ch+var_18] 1 +
setnz al  +
mov [esp+8Ch+var_54] eax +
jmp loc_455260  +
mov dword ptr [ebp+2Ch] 1 +
mov eax [esp+8Ch+var_14] +
mov [ebp+38h] eax +
jmp loc_455260  +
mov eax [esp+8Ch+var_70] +
test eax eax +
jz loc_45533B  +
mov [esp+8Ch+var_88] 3Ah +
mov [esp+8Ch+var_8C] eax +
mov [esp+8Ch+var_4C] ecx +
call strchr  +
mov ecx [esp+8Ch+var_4C] +
cmp [esp+8Ch+var_70] eax +
jz loc_45533B  +
test eax eax +
jz loc_45533B  +
cmp byte ptr [eax-1] 2Eh +
jnz loc_45533B  +
lea edx [eax+1] +
cmp byte ptr [eax+1] 2Fh +
mov eax edx +
cmovnz eax [esp+8Ch+var_70] +
mov [esp+8Ch+var_70] eax +
jmp loc_45533B  +
mov ebp [esp+8Ch+var_54] +
xor ebx ebx +
mov edi [esp+8Ch+var_48] +
mov esi [edi+ebx*4] +
test esi esi +
jz loc_4553E2  +
lea esi [esi+0] +
mov eax [esi+10h] +
mov [esp+8Ch+var_8C] eax +
call free  +
mov esi [esi+14h] +
test esi esi +
jnz loc_4553D0  +
add ebx 1 +
cmp ebx 79h +
jnz loc_4553C3  +
jmp loc_454A0E  +
mov [esp+8Ch+var_88] ecx +
mov [esp+8Ch+var_8C] offset aDwarfErrorCoul +
call off_47D664  +
mov [esp+8Ch+var_8C] 11h +
call sub_4105E0  +
jmp loc_454A0E  +
mov edi ecx +
mov eax [esp+8Ch+var_64] +
mov ecx [esp+8Ch+var_58] +
mov edx [esp+8Ch+var_54] +
mov ebp [esp+8Ch+var_50] +
add eax ecx +
test edx edx +
cmovz eax ecx +
test eax eax +
mov [esp+8Ch+var_58] eax +
jz loc_455454  +
mov ecx [esp+8Ch+var_58] +
mov eax [esp+8Ch+var_74] +
mov [esp+8Ch+var_8C] ecx +
mov ecx [esp+8Ch+var_64] +
lea edx [eax+0Ch] +
add eax 8 +
call sub_450FD0  +
test eax eax +
jz loc_454A0E  +
mov eax [esp+8Ch+var_74] +
mov [eax+3Ch] edi +
mov eax [esp+8Ch+var_60] +
add eax [ebp+0Ch] +
jb loc_4557BC  +
mov [ebp+0Ch] eax +
mov eax [ebp+0] +
mov edi [esp+8Ch+var_74] +
test eax eax +
jz loc_455619  +
mov [eax+4] edi +
mov esi [esp+8Ch+var_5C] +
mov edi [esp+8Ch+var_74] +
test esi esi +
mov [edi] eax +
mov [ebp+0] edi +
jz loc_4554E0  +
mov eax [esp+8Ch+arg_8] +
test byte ptr [eax+0Ch] 8 +
jz loc_45551E  +
mov ebx [edi+14h] +
mov eax edi +
test ebx ebx +
jz loc_45551E  +
mov ecx [edi+24h] +
mov [esp+8Ch+var_68] 0 +
test ecx ecx +
jz loc_455511  +
mov ecx [ebp+18h] +
mov ebx [ebp+0Ch] +
mov eax ebx +
sub eax [ebp+1Ch] +
cmp eax [ecx+24h] +
jz loc_455621  +
mov esi [esp+8Ch+var_68] +
test esi esi +
jz loc_454B68  +
jmp loc_454A06  +
mov eax [esp+8Ch+var_74] +
mov edx [eax+14h] +
test edx edx +
jz loc_45555C  +
mov edi [eax+24h] +
mov [esp+8Ch+var_68] 0 +
test edi edi +
jnz loc_4554B7  +
mov edx [esp+8Ch+var_6C] +
call sub_450EB0  +
test eax eax +
jnz loc_45555C  +
mov eax [esp+8Ch+var_5C] +
mov [esp+8Ch+var_68] eax +
jmp loc_4554B7  +
mov edx [esp+8Ch+var_6C] +
call sub_450EB0  +
test eax eax +
jz loc_4554B7  +
mov eax [esp+8Ch+arg_1C] +
mov ecx [esp+8Ch+var_6C] +
mov edx [esp+8Ch+arg_8] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_14] +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_74] +
call sub_453620  +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+8Ch+var_68] eax +
jmp loc_4554B7  +
mov eax [esp+8Ch+arg_20] +
mov ecx [esp+8Ch+arg_14] +
mov edx [esp+8Ch+var_6C] +
mov [esp+8Ch+var_80] ebp +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_2C] +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_74] +
call sub_4537A0  +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+8Ch+var_68] eax +
jmp loc_4554B7  +
mov [esp+8Ch+var_88] 0ABDh +
mov [esp+8Ch+var_8C] offset a____Binutil_24 +
call sub_410530  +
jmp loc_454E2B  +
mov eax [esp+8Ch+var_70] +
mov edx ebx +
mov [esp+8Ch+var_50] ecx +
call sub_450E00  +
mov ecx [esp+8Ch+var_50] +
mov [esp+8Ch+var_40] eax +
sub eax 2 +
mov [esp+8Ch+var_74] eax +
jmp loc_454E18  +
lea eax [ebx+6] +
xor edi edi +
xor ebx ebx +
cmp [esp+8Ch+var_4C] eax +
jb loc_454E3C  +
mov edx [esp+8Ch+var_54] +
mov eax [esp+8Ch+var_70] +
call sub_450E20  +
mov ebx eax +
jmp loc_454E3C  +
mov edx [esp+8Ch+var_54] +
mov eax [esp+8Ch+var_70] +
call sub_450E40  +
mov ebx eax +
mov edi edx +
jmp loc_454E3C  +
mov [ebp+4] edi +
jmp loc_45547D  +
mov eax [ebp+14h] +
mov edx [esp+8Ch+arg_24] +
call sub_450F40  +
mov ebx [ebp+0Ch] +
mov [ebp+1Ch] ebx +
mov [ebp+18h] eax +
jmp loc_4554CB  +
mov eax [eax+4] +
mov edi [esp+8Ch+arg_8] +
mov ebx [edi+10h] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_88] eax +
mov eax [ebp+70h] +
mov [esp+8Ch+var_8C] eax +
call sub_4123C0  +
test eax eax +
jz loc_454B18  +
mov esi [eax+0Ch] +
test esi esi +
jz loc_454B18  +
mov [esp+8Ch+var_74] 0 +
xor edi edi +
mov [esp+8Ch+var_68] ebp +
mov eax [esi+4] +
mov ecx eax +
mov [esp+8Ch+var_70] eax +
add eax 24h +
jz loc_4556D6  +
mov edx [ecx+30h] +
jmp loc_4556AA  +
cmp ebx edx +
jz loc_4556AE  +
mov eax [eax] +
test eax eax +
jz loc_4556D6  +
test edx edx +
jnz loc_4556A0  +
mov ecx [eax+4] +
cmp [esp+8Ch+var_6C] ecx +
jb loc_4556A4  +
mov ebp [eax+8] +
cmp [esp+8Ch+var_6C] ebp +
jnb loc_4556A4  +
sub ebp ecx +
test edi edi +
jz loc_4556CC  +
cmp ebp [esp+8Ch+var_74] +
jnb loc_4556A4  +
mov [esp+8Ch+var_74] ebp +
mov edi [esp+8Ch+var_70] +
jmp loc_4556A4  +
mov esi [esi] +
test esi esi +
jnz loc_45568B  +
test edi edi +
mov ebp [esp+8Ch+var_68] +
jz loc_454B18  +
mov eax [edi+0Ch] +
mov ecx [esp+8Ch+arg_14] +
mov [edi+30h] ebx +
mov [esp+8Ch+var_68] 1 +
mov [ecx] eax +
mov eax [edi+14h] +
mov edi [esp+8Ch+arg_1C] +
mov [edi] eax +
jmp loc_454A0E  +
mov [esp+8Ch+var_68] 0 +
jmp loc_4549F5  +
mov dword ptr [ebp+7Ch] 2 +
jmp loc_4548A8  +
mov ebp [esp+8Ch+var_54] +
jmp loc_454A0E  +
mov [esp+8Ch+var_84] 4 +
mov [esp+8Ch+var_88] eax +
mov [esp+8Ch+var_8C] offset aDwarfErrorFo_0 +
call off_47D664  +
mov [esp+8Ch+var_8C] 11h +
call sub_4105E0  +
jmp loc_454A0E  +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] offset aDwarfErrorBadA +
call off_47D664  +
mov [esp+8Ch+var_8C] 11h +
call sub_4105E0  +
jmp loc_454A0E  +
mov eax [esp+8Ch+var_40] +
mov [esp+8Ch+var_8C] offset aDwarfErrorFo_1 +
mov [esp+8Ch+var_88] eax +
call off_47D664  +
mov [esp+8Ch+var_8C] 11h +
call sub_4105E0  +
jmp loc_454A0E  +
mov ebx [ebp+0Ch] +
mov eax [ebp+14h] +
mov ecx [ebp+10h] +
lea edx [ebx+4] +
add eax 4 +
jmp loc_454B50  +
mov [esp+8Ch+var_68] 0 +
jmp loc_454A0E  +
mov [esp+8Ch+var_60] edi +
xor ecx ecx +
mov [esp+8Ch+var_64] 8 +
jmp loc_454DE1  +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [ecx+0Ch] +
mov ecx [ecx+4] +
mov ebp [edx+0Ch] +
mov edx [edx+4] +
lea edi [ecx+eax-1] +
cmp ebp eax +
lea esi [edx+ebp-1] +
mov edx eax +
cmovbe edx ebp +
test edx edx +
jz loc_455834  +
movzx ebx byte ptr [edi] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_455840  +
mov ecx edx +
neg ecx  +
add edi ecx +
add esi ecx +
jmp loc_45582F  +
movzx ebx byte ptr [edi+edx] +
movzx ecx byte ptr [esi+edx] +
cmp bl cl +
jnz loc_455840  +
sub edx 1 +
jnz loc_455823  +
pop ebx  +
sub eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax bl +
sub eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test edx edx +
jz loc_4558A0  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_10] eax +
call sub_4126E0  +
test eax eax +
jz loc_455892  +
mov dword ptr [eax+14h] 0FFFFFFFFh +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+var_14] 18h +
mov [esp+18h+var_18] ebx +
call sub_412630  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_45588D  +
jmp loc_455860  +
***
mov [esp+18h+var_18] 2Ch +
call sub_412BD0  +
test eax eax +
mov ebx eax +
jz loc_455936  +
mov [esp+18h+var_10] 18h +
mov [esp+18h+var_14] offset sub_455850 +
mov [esp+18h+var_18] eax +
call sub_412160  +
test eax eax +
jz loc_455927  +
mov dword ptr [ebx+24h] 0 +
mov dword ptr [ebx+1Ch] 1 +
mov dword ptr [ebx+20h] 40h +
mov [esp+18h+var_18] 100h +
call sub_412BD0  +
test eax eax +
mov [ebx+28h] eax +
jz loc_455927  +
mov dword ptr [eax] 0 +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
call free  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
xor eax eax +
jmp loc_455922  +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call sub_412190  +
mov eax [ebx+28h] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+18h+arg_4] +
mov esi [esp+18h+arg_0] +
cmp byte ptr [edi] 0 +
jz loc_4559E5  +
mov edx [esi+24h] +
test edx edx +
jnz loc_4559F0  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] esi +
mov [esp+18h+var_C] eax +
call sub_4123C0  +
test eax eax +
mov ebx eax +
jz loc_455A06  +
add dword ptr [eax+10h] 1 +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_4559E2  +
mov [esp+18h+var_18] edi +
call strlen  +
add eax 1 +
test eax eax +
mov [ebx+0Ch] eax +
jle loc_455A36  +
mov edx [esi+1Ch] +
cmp edx [esi+20h] +
jz loc_455A12  +
mov eax [esi+28h] +
lea ecx [edx+1] +
mov [esi+1Ch] ecx +
mov [ebx+14h] edx +
mov [eax+edx*4] ebx +
mov eax [ebx+14h] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+18h+var_14] 99h +
mov [esp+18h+var_18] offset a____Binutil_15 +
call sub_410530  +
jmp loc_45598C  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea eax [edx+edx] +
mov [esi+20h] eax +
mov eax [esi+28h] +
shl edx 3 +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_412D20  +
test eax eax +
mov [esi+28h] eax +
jz loc_455A06  +
mov edx [esi+1Ch] +
jmp loc_4559D6  +
mov [esp+18h+var_14] 0A5h +
mov [esp+18h+var_18] offset a____Binutil_15 +
call sub_410530  +
jmp loc_4559CB  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
lea eax [ebx-1] +
cmp eax 0FFFFFFFDh +
ja loc_455A7B  +
mov eax [esi+24h] +
test eax eax +
jnz loc_455A97  +
cmp ebx [esi+1Ch] +
jnb loc_455A81  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
add dword ptr [eax+10h] 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 0BCh +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_410530  +
jmp loc_455A71  +
mov [esp+14h+var_10] 0BBh +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_410530  +
cmp ebx [esi+1Ch] +
jb loc_455A71  +
jmp loc_455A81  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
lea eax [ebx-1] +
cmp eax 0FFFFFFFDh +
ja loc_455AF4  +
mov eax [esi+24h] +
test eax eax +
jnz loc_455B20  +
cmp ebx [esi+1Ch] +
jnb loc_455B39  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
mov edx [eax+10h] +
test edx edx +
jz loc_455B00  +
sub edx 1 +
mov [eax+10h] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 0C7h +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_410530  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
mov edx [eax+10h] +
jmp loc_455AEE  +
mov [esp+14h+var_10] 0C5h +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_410530  +
cmp ebx [esi+1Ch] +
jb loc_455AE1  +
mov [esp+14h+var_10] 0C6h +
mov [esp+14h+var_14] offset a____Binutil_15 +
call sub_410530  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
mov edx [eax+10h] +
test edx edx +
jnz loc_455AEE  +
jmp loc_455B00  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov eax [eax+28h] +
mov eax [eax+edx*4] +
mov eax [eax+10h] +
retn   +
***
mov eax [esp+arg_0] +
mov edx [eax+1Ch] +
cmp edx 1 +
jbe locret_455BA5  +
mov ecx [eax+28h] +
lea eax [ecx+4] +
lea ecx [ecx+edx*4] +
mov edx [eax] +
add eax 4 +
cmp eax ecx +
mov dword ptr [edx+10h] 0 +
jnz loc_455B95  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [edi+24h] +
mov esi [edi+1Ch] +
test eax eax +
jnz loc_455BF5  +
cmp esi ebx +
jb loc_455C0D  +
cmp esi ebx +
mov [edi+1Ch] ebx +
jbe loc_455BEE  +
mov edx [edi+28h] +
mov eax [edx+ebx*4] +
add ebx 1 +
cmp ebx esi +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+0Ch] 0 +
jnz loc_455BD6  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_C] 0E1h +
mov [esp+10h+var_10] offset a____Binutil_15 +
call sub_410530  +
cmp esi ebx +
jnb loc_455BCC  +
mov [esp+10h+var_C] 0E2h +
mov [esp+10h+var_10] offset a____Binutil_15 +
call sub_410530  +
jmp loc_455BCC  +
***
mov edx [esp+arg_0] +
push esi  +
push esi  +
push esi  +
mov edx [eax] +
mov ecx eax +
test dl 1 +
jz loc_455F51  +
xor eax eax +
cmp dword ptr [ecx+4] 0 +
jnz locret_455F6C  +
test dl 2 +
jz loc_455F64  +
mov ecx [ecx+8] +
test ecx ecx +
jz loc_455F64  +
xor eax eax +
cmp byte ptr [ecx] 0 +
jnz locret_455F6C  +
xor eax eax +
and edx 4 +
setz al  +
retn   +
***
push ebx  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov eax ecx +
jmp loc_455FE9  +
add ebx 1 +
or ecx 0FFFFFF80h +
mov [ebx-1] cl +
mov ecx edx +
shr edx 7 +
and ecx 7Fh +
test edx edx +
jnz loc_455FE0  +
mov [ebx] cl +
mov edx [eax] +
lea esi [ebx+1] +
test dl 1 +
jz loc_456019  +
mov ecx [eax+4] +
mov edx esi +
mov ebx ecx +
shr ecx 7 +
and ebx 7Fh +
test ecx ecx +
jnz loc_456027  +
lea esi [edx+1] +
mov [edx] bl +
mov edx [eax] +
and edx 2 +
jnz loc_456040  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
or ebx 0FFFFFF80h +
add edx 1 +
mov [edx-1] bl +
mov ebx ecx +
shr ecx 7 +
and ebx 7Fh +
test ecx ecx +
jz loc_456012  +
jmp loc_456027  +
mov edi [eax+8] +
mov [esp+10h+var_10] edi +
call strlen  +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] esi +
lea ebx [eax+1] +
mov [esp+10h+var_8] ebx +
add esi ebx +
call memcpy  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 1Ch +
test edx edx +
mov [esp+1Ch+var_14] edx +
jnz loc_4561B0  +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov ecx [edx+184h] +
test ecx ecx +
mov [esp+1Ch+var_10] ecx +
jz loc_4561BD  +
mov eax [eax+0A0h] +
mov ebx 2 +
xor edi edi +
mov ecx eax +
mov ebp eax +
imul eax [esp+1Ch+var_14] +
lea esi [ecx+eax+268h] +
nop   +
mov eax esi +
call sub_455F40  +
xor edx edx +
test eax eax +
jnz loc_456148  +
mov edx esi +
mov eax ebx +
call sub_455F70  +
mov edx eax +
add ebx 1 +
add edi edx +
add esi 0Ch +
cmp ebx 47h +
jnz loc_456130  +
mov ecx [esp+1Ch+var_14] +
mov ebx [ebp+ecx*4+8F8h] +
test ebx ebx +
jz loc_45618A  +
lea esi [ebx+8] +
mov ebp [ebx+4] +
mov eax esi +
call sub_455F40  +
xor edx edx +
test eax eax +
jnz loc_456182  +
mov edx esi +
mov eax ebp +
call sub_455F70  +
mov edx eax +
mov ebx [ebx] +
add edi edx +
test ebx ebx +
jnz loc_456164  +
test edi edi +
jnz loc_456198  +
mov edx [esp+1Ch+var_14] +
xor eax eax +
test edx edx +
jnz loc_4561A8  +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
lea eax [edi+eax+0Ah] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_10] offset aGnu_0 +
jmp loc_45610E  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 4 +
mov ebx [esp+8+arg_0] +
mov eax ebx +
call sub_4560E0  +
mov edx 1 +
mov esi eax +
mov eax ebx +
call sub_4560E0  +
lea edx [eax+esi] +
xor eax eax +
lea ecx [edx+1] +
test edx edx +
cmovnz eax ecx +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
mov ebp [esp+3Ch+arg_0] +
mov [esp+3Ch+var_14] 1 +
mov [esp+3Ch+var_1C] 0 +
lea edx [eax+1] +
mov [esp+3Ch+var_10] edx +
mov byte ptr [eax] 41h +
mov edx [esp+3Ch+var_1C] +
mov eax ebp +
call sub_4560E0  +
test eax eax +
mov [esp+3Ch+var_18] eax +
jnz loc_456280  +
mov eax [esp+3Ch+var_18] +
add [esp+3Ch+var_1C] 1 +
add [esp+3Ch+var_10] eax +
add [esp+3Ch+var_14] eax +
cmp [esp+3Ch+var_1C] 2 +
jnz loc_456239  +
mov eax [esp+3Ch+var_14] +
cmp eax [esp+3Ch+arg_8] +
jnz loc_4563BA  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_1C] +
mov edi [ebp+4] +
test eax eax +
jz loc_45639E  +
mov ebx 4 +
mov esi offset aGnu_0 +
mov eax [edi+30h] +
mov edi [esp+3Ch+var_10] +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_38] edi +
lea edi [edi+4] +
mov [esp+3Ch+var_3C] edx +
call eax  +
mov [esp-10h+arg_4] ebx +
mov [esp-10h+arg_0] esi +
lea esi [edi+ebx] +
mov [esp+0] edi +
call memcpy  +
mov byte ptr [esi] 1 +
mov eax [ebp+4] +
mov edx [eax+30h] +
lea eax [esi+1] +
mov [esp-10h+arg_0] eax +
mov eax [esp+24h] +
sub eax 4 +
sub eax ebx +
mov ebx 2 +
mov [esp+0] eax +
call edx  +
lea eax [esi+5] +
mov edx [ebp+0A0h] +
mov [esp+18h] eax +
imul eax [esp+20h] +
lea eax [edx+eax+250h] +
mov [esp+1Ch] eax +
mov eax [ebp+4] +
mov edi ebx +
mov eax [eax+1B0h] +
mov eax [eax+194h] +
test eax eax +
jz loc_456322  +
mov [esp+0] ebx +
call eax  +
mov edi eax +
mov ecx [esp+1Ch] +
lea eax [edi+edi*2] +
lea esi [ecx+eax*4] +
mov eax esi +
call sub_455F40  +
test eax eax +
jnz loc_456348  +
mov eax [esp+18h] +
mov ecx esi +
mov edx edi +
call sub_455FD0  +
mov [esp+18h] eax +
add ebx 1 +
cmp ebx 47h +
jnz loc_456306  +
mov eax [ebp+0A0h] +
mov edx [esp+20h] +
mov ebx [eax+edx*4+8F8h] +
test ebx ebx +
jz loc_45624C  +
mov edi [esp+18h] +
mov [esp+50h] ebp +
lea ebp [ebx+8] +
mov esi [ebx+4] +
mov eax ebp +
call sub_455F40  +
test eax eax +
jnz loc_45638F  +
mov eax edi +
mov ecx ebp +
mov edx esi +
call sub_455FD0  +
mov edi eax +
mov ebx [ebx] +
test ebx ebx +
jnz loc_456371  +
mov ebp [esp+50h] +
jmp loc_45624C  +
mov eax [edi+1B0h] +
mov esi [eax+184h] +
mov [esp+3Ch+var_3C] esi +
call strlen  +
lea ebx [eax+1] +
jmp loc_456299  +
mov [esp+3Ch+var_34] offset aBfd_elf_set_ob +
mov [esp+3Ch+var_38] 0E1h +
mov [esp+3Ch+var_3C] offset a____Binutil_23 +
call sub_410560  +
lea esi [esi+0] +
lea edi [edi+0] +
mov ecx [esp+3Ch+var_30] +
cmp ecx 46h +
jbe loc_456420  +
mov eax [esp+3Ch+var_38] +
mov edx [esp+3Ch+var_34] +
mov eax [eax+0A0h] +
mov eax [eax+edx*4+8F8h] +
test eax eax +
jnz loc_456412  +
jmp loc_456440  +
cmp ecx edx +
jb loc_456440  +
mov eax [eax] +
test eax eax +
lea esi [esi+0] +
jz locret_456443  +
mov edx [eax+4] +
cmp edx ecx +
jnz loc_456404  +
mov eax [eax+0Ch] +
retn   +
lea edx [ecx+ecx*2] +
mov ecx [esp+3Ch+var_38] +
imul eax [esp+3Ch+var_34] +
lea eax [eax+edx*4] +
add eax [ecx+0A0h] +
mov eax [eax+254h] +
retn   +
xor eax eax +
retn   +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea esi [eax+1] +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_40E140  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov ecx [esp+1Ch+arg_0] +
mov edx [esp+1Ch+arg_8] +
test eax eax +
jz loc_4564E0  +
cmp eax 1 +
jnz loc_4564C0  +
cmp edx 20h +
jz loc_4564F8  +
and edx 1 +
cmp edx 1 +
sbb eax eax +
add eax 2 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_14] offset a_bfd_elf_obj_a +
mov [esp+1Ch+var_18] 1A8h +
mov [esp+1Ch+var_1C] offset a____Binutil_23 +
call sub_410560  +
lea esi [esi+0] +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
mov eax [eax+18Ch] +
mov [esp+1Ch+arg_0] edx +
add esp 1Ch +
jmp eax  +
mov eax 3 +
jmp loc_4564B8  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
cmp ebx 46h +
ja loc_456550  +
imul eax ebp +
lea edx [ebx+ebx*2] +
lea esi [eax+edx*4+250h] +
add esi [edi+0A0h] +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_456490  +
mov [esi] eax +
mov eax [esp+1Ch+arg_C] +
mov [esi+4] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_456070  +
mov esi eax +
jmp loc_45652E  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
cmp ebx 46h +
ja loc_4565C0  +
imul eax ebp +
lea edx [ebx+ebx*2] +
lea esi [eax+edx*4+250h] +
add esi [edi+0A0h] +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_456490  +
mov [esi] eax +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_18] eax +
call sub_456450  +
mov [esi+8] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_456070  +
mov esi eax +
jmp loc_45658E  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
cmp esi 46h +
ja loc_456632  +
imul eax ebp +
lea edx [esi+esi*2] +
lea ebx [eax+edx*4+250h] +
add ebx [edi+0A0h] +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_456490  +
mov [ebx] eax +
mov eax [esp+1Ch+arg_C] +
mov [ebx+4] eax +
mov eax [esp+1Ch+arg_10] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_18] eax +
call sub_456450  +
mov [ebx+8] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx esi +
mov edx ebp +
mov eax edi +
call sub_456070  +
mov ebx eax +
jmp loc_4565FE  +
***
jmp sub_456650  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jz loc_456670  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_456668  +
mov [esp+2Ch+var_10] 0 +
mov eax [esp+2Ch+arg_0] +
imul edx [esp+2Ch+var_10] +
mov ebx [eax+0A0h] +
add edx 268h +
add ebx edx +
add edx [esi+0A0h] +
lea ebp [ebx+33Ch] +
mov edi edx +
jmp loc_4566BA  +
add ebx 0Ch +
add edi 0Ch +
cmp ebx ebp +
jz loc_4566E9  +
mov eax [ebx] +
mov [edi] eax +
mov eax [ebx+4] +
mov [edi+4] eax +
mov eax [ebx+8] +
test eax eax +
jz loc_4566B0  +
cmp byte ptr [eax] 0 +
jz loc_4566B0  +
mov [esp+2Ch+var_28] eax +
add ebx 0Ch +
add edi 0Ch +
mov [esp+2Ch+var_2C] esi +
call sub_456450  +
mov [edi-4] eax +
cmp ebx ebp +
jnz loc_4566BA  +
mov eax [esp+2Ch+arg_0] +
mov ecx [esp+2Ch+var_10] +
mov eax [eax+0A0h] +
mov ebx [eax+ecx*4+8F8h] +
test ebx ebx +
jz loc_456757  +
mov eax [ebx+8] +
and eax 3 +
cmp eax 2 +
jz loc_456733  +
cmp eax 3 +
jz loc_456790  +
cmp eax 1 +
jz loc_456770  +
mov [esp+2Ch+var_24] offset a_bfd_elf_copy_ +
mov [esp+2Ch+var_28] 185h +
mov [esp+2Ch+var_2C] offset a____Binutil_23 +
call sub_410560  +
mov eax [ebx+4] +
mov edx [ebx+10h] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] eax +
call sub_456560  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_456702  +
add [esp+2Ch+var_10] 1 +
cmp [esp+2Ch+var_10] 2 +
jz loc_456668  +
jmp loc_456681  +
mov eax [ebx+4] +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] eax +
call sub_456500  +
jmp loc_456751  +
mov eax [ebx+4] +
mov ecx [ebx+10h] +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_1C] ecx +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] eax +
call sub_4565D0  +
jmp loc_456751  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [esp+5Ch+arg_4] +
mov eax [ebx+18h] +
test eax eax +
jnz loc_4567E0  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+5Ch+var_5C] eax +
call sub_412BD0  +
test eax eax +
mov ebp eax +
jz loc_4567D2  +
mov eax [ebx+2Ch] +
mov edx [ebx+18h] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_48] edx +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_5C] eax +
call sub_40FA90  +
test eax eax +
jz loc_456840  +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [ebp+0] 41h +
mov edx [ebx+18h] +
mov eax [eax+4] +
mov ecx [eax+1B0h] +
mov ecx [ecx+184h] +
mov [esp+5Ch+var_30] ecx +
jz loc_456850  +
mov [esp+5Ch+var_5C] ebp +
call free  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
sub esi 1 +
mov [esp+5Ch+var_28] esi +
jz loc_456840  +
add edx ebp +
lea ecx [edx-4] +
lea ebx [ebp+1] +
cmp ebx ecx +
mov [esp+5Ch+var_3C] edx +
mov [esp+5Ch+var_34] ecx +
jnb loc_456840  +
mov [esp+5Ch+var_20] ebp +
mov ebp [esp+5Ch+arg_0] +
mov edi ebx +
mov eax [eax+28h] +
lea ebx [edi+4] +
mov [esp+5Ch+var_5C] edi +
call eax  +
test eax eax +
jz loc_456B38  +
mov ecx [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] ebx +
cmp ecx eax +
cmovbe eax ecx +
mov [esp+5Ch+var_24] eax +
sub eax 4 +
mov [esp+5Ch+var_58] eax +
mov esi eax +
mov [esp+5Ch+var_38] eax +
call sub_47A650  +
lea edx [eax+1] +
cmp edx esi +
jnb loc_456B38  +
test edx edx +
jz loc_456B38  +
mov eax [esp+5Ch+var_30] +
test eax eax +
jz loc_456B00  +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebx +
mov [esp+5Ch+var_40] edx +
call strcmp  +
mov edx [esp+5Ch+var_40] +
test eax eax +
jnz loc_456B00  +
mov [esp+5Ch+var_40] 0 +
mov eax [esp+5Ch+var_38] +
lea edi [ebx+edx] +
sub eax edx +
mov [esp+5Ch+var_38] eax +
jz loc_456A20  +
cmp [esp+5Ch+var_3C] edi +
jbe loc_456A20  +
mov ebx edi +
mov eax [esp+5Ch+var_3C] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_4C] eax +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_54] eax +
call sub_413790  +
mov edi [esp+5Ch+var_10] +
add edi ebx +
cmp edi [esp+5Ch+var_34] +
mov esi eax +
jnb loc_456B30  +
mov eax [ebp+4] +
mov eax [eax+28h] +
mov [esp+5Ch+var_5C] edi +
add edi 4 +
call eax  +
test eax eax +
jz loc_456A20  +
mov ecx [esp+5Ch+var_38] +
mov ebx 0FFFFFFFCh +
cmp eax ecx +
cmova eax ecx +
sub ebx [esp+5Ch+var_10] +
mov [esp+5Ch+var_2C] eax +
add ebx eax +
add ebx edi +
cmp esi 1 +
jnz loc_456A02  +
mov eax [esp+5Ch+var_3C] +
cmp ebx eax +
cmova ebx eax +
cmp ebx edi +
jbe loc_456A00  +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_413790  +
mov [esp+5Ch+var_5C] ebp +
add edi [esp+5Ch+var_10] +
mov [esp+5Ch+var_54] eax +
mov esi eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] eax +
call sub_456490  +
and eax 3 +
cmp eax 2 +
jz loc_456AD2  +
cmp eax 3 +
jz loc_456A81  +
cmp eax 1 +
jz loc_456A40  +
mov [esp+5Ch+var_54] offset a_bfd_elf_parse +
mov [esp+5Ch+var_58] 21Fh +
mov [esp+5Ch+var_5C] offset a____Binutil_23 +
call sub_410560  +
lea esi [esi+0] +
mov ebx edi +
mov eax [esp+5Ch+var_2C] +
sub [esp+5Ch+var_38] eax +
cmp ebx [esp+5Ch+var_3C] +
jnb loc_456A1C  +
mov eax [esp+5Ch+var_38] +
test eax eax +
jnz loc_456910  +
mov edi ebx +
nop   +
mov eax [esp+5Ch+var_24] +
sub [esp+5Ch+var_28] eax +
jz loc_456B38  +
cmp edi [esp+5Ch+var_34] +
jnb loc_456B38  +
mov eax [ebp+4] +
jmp loc_456879  +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_413790  +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_5C] ebp +
add edi [esp+5Ch+var_10] +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] eax +
call sub_456500  +
jmp loc_456988  +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_413790  +
add edi [esp+5Ch+var_10] +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_4C] edi +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] eax +
call sub_4565D0  +
mov [esp+5Ch+var_5C] edi +
call strlen  +
lea edi [edi+eax+1] +
jmp loc_456988  +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_50] edi +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] eax +
call sub_456560  +
mov [esp+5Ch+var_5C] edi +
call strlen  +
lea edi [edi+eax+1] +
jmp loc_456988  +
mov edi offset aGnu_0 +
mov ecx 4 +
mov esi ebx +
cmps   +
jnz loc_456B20  +
mov [esp+5Ch+var_40] 1 +
jmp loc_4568F1  +
mov edi [esp+5Ch+var_38] +
add edi ebx +
jmp loc_456A20  +
add edi 4 +
jmp loc_456A20  +
mov ebp [esp+5Ch+var_20] +
jmp loc_456840  +
***
jmp loc_456B50  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+50h] +
mov dword ptr [esp+24h] 2 +
mov eax [eax+0A0h] +
lea ebx [eax+3D0h] +
mov eax [esp+54h] +
mov ebp [eax+0A0h] +
add ebp 3D0h +
mov edx [ebx+4] +
test edx edx +
jnz loc_456BB1  +
mov ecx [ebp+4] +
test ecx ecx +
jnz loc_456C5A  +
add ebx 354h +
add ebp 354h +
sub dword ptr [esp+24h] 1 +
jnz loc_456B7F  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [ebx+8] +
mov edi offset aGnu_0 +
mov ecx 4 +
mov [esp+28h] esi +
cmps   +
jnz loc_456C31  +
mov ecx [ebp+4] +
cmp edx ecx +
jnz loc_456C55  +
mov esi [ebp+8] +
mov eax [esp+28h] +
mov [esp+2Ch] edx +
mov [esp+4] esi +
mov [esp] eax +
call strcmp  +
mov edx [esp+2Ch] +
test eax eax +
jz loc_456B91  +
mov ecx edx +
mov edi [esp+28h] +
mov eax offset unk_49B4C7 +
test esi esi +
cmovz esi eax +
mov [esp+14h] esi +
mov [esp+10h] ecx +
test edi edi +
cmovnz eax edi +
mov [esp+0Ch] eax +
mov eax [esp+50h] +
mov [esp+8] edx +
mov dword ptr [esp] offset aErrorBObjectTa +
mov [esp+4] eax +
call off_47D664  +
xor eax eax +
jmp loc_456BA9  +
***
mov eax [esp+28h] +
mov dword ptr [esp] offset aErrorBObjectHa +
mov [esp+8] eax +
mov eax [esp+50h] +
mov [esp+4] eax +
call off_47D664  +
xor eax eax +
jmp loc_456BA9  +
***
mov esi [ebp+8] +
jmp loc_456BF2  +
***
mov eax [ebx+8] +
mov esi [ebp+8] +
mov [esp+28h] eax +
jmp loc_456BF2  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov eax [esp+34h] +
mov edx [esp+38h] +
mov edi [esi+0A0h] +
mov ebx [eax+0A0h] +
lea ecx [edx+edx*2] +
shl ecx 2 +
add edi 250h +
lea ebx [ebx+ecx+250h] +
add edi ecx +
mov ecx [ebx+4] +
test ecx ecx +
jnz loc_456CB2  +
mov ebp [ebx+8] +
test ebp ebp +
jz loc_456D22  +
mov ecx [eax+4] +
mov ecx [ecx+1B0h] +
mov ecx [ecx+198h] +
mov [esp+4] edx +
mov [esp] eax +
call ecx  +
mov esi eax +
mov eax [ebx+4] +
cmp [edi+4] eax +
jz loc_456CF0  +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebp [ebx+8] +
mov eax [edi+8] +
test ebp ebp +
setz cl  +
test eax eax +
mov edi ecx +
setz cl  +
mov edx edi +
cmp dl cl +
jnz loc_456CD4  +
test eax eax +
jz loc_456CE2  +
test ebp ebp +
jz loc_456CE2  +
mov [esp+4] ebp +
mov [esp] eax +
call strcmp  +
test eax eax +
jnz loc_456CD4  +
jmp loc_456CE2  +
***
mov eax esi +
mov esi [edi+4] +
test esi esi +
jnz loc_456CB2  +
mov ecx [edi+8] +
mov esi 1 +
test ecx ecx +
jnz loc_456CB2  +
jmp loc_456CE2  +
***
mov eax [esi+4] +
test ebx ebx +
mov edi eax +
jz loc_456D8D  +
mov edi [ebx+4] +
jmp loc_456D87  +
***
mov edi [ebx+4] +
mov ebx [ebx] +
mov eax [esp+34h] +
mov [ecx+8F8h] ebx +
jmp loc_456D93  +
***
mov eax [ebx+0Ch] +
cmp [esi+0Ch] eax +
jnz loc_456DE3  +
mov edx [ebx+10h] +
mov eax [esi+10h] +
test edx edx +
setz byte ptr [esp+8]  +
test eax eax +
mov [esp+0Ch] edx +
setz dl  +
cmp [esp+8] dl +
jnz loc_456DE3  +
test eax eax +
jz loc_456E39  +
mov edx [esp+0Ch] +
test edx edx +
jz loc_456E39  +
mov [esp+4] edx +
mov [esp] eax +
mov [esp+8] ecx +
call strcmp  +
mov ecx [esp+8] +
test eax eax +
jnz loc_456DE3  +
mov ebx [ebx] +
mov esi [esi] +
mov eax [esp+34h] +
jmp loc_456D93  +
***
push edi  +
mov ecx 20h +
push esi  +
mov edi eax +
push ebx  +
mov esi edx +
sub esp 1Ch +
test dl 1 +
mov eax edx +
jnz loc_456FD7  +
test al 2 +
jnz loc_456FE7  +
mov ebx ecx +
xor edx edx +
and ebx 0FFFFFFFCh +
mov dword ptr [eax+edx] 0 +
add edx 4 +
cmp edx ebx +
jb loc_456E7C  +
add eax edx +
test cl 2 +
jz loc_456E9A  +
xor ebx ebx +
add eax 2 +
mov [eax-2] bx +
and ecx 1 +
jz loc_456EA2  +
mov byte ptr [eax] 0 +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ebp +
call eax  +
mov edx eax +
mov [esi] eax +
xor eax eax +
test edx edx +
jz loc_456ECD  +
lea ecx [ebp+edx+0] +
cmp [esp+28h+arg_0] ecx +
jbe loc_456ECD  +
cmp edx 5 +
ja loc_456ED5  +
xor edx edx +
mov al 1 +
mov [esi+1Ch] dx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi] +
lea edx [ebp+4] +
lea ebx [ebp+6] +
mov eax [eax+34h] +
mov [esp+28h+var_28] edx +
call eax  +
mov [esi+1Ch] ax +
lea esi [esi+0] +
mov eax [esi] +
add eax ebp +
cmp ebx eax +
jnb loc_456F46  +
mov eax [edi] +
mov eax [eax+34h] +
mov [esp+28h+var_28] ebx +
call eax  +
lea ecx [ebx+2] +
mov edx eax +
and edx 0Fh +
cmp edx 8 +
ja loc_456FD0  +
jmp ds:off_49B5D8[edx*4]  +
cmp ax 38h +
jz loc_456FF8  +
mov [esp+28h+var_28] ecx +
mov [esp+28h+var_1C] ecx +
call strlen  +
mov ecx [esp+28h+var_1C] +
lea ebx [ecx+eax+1] +
mov eax [esi] +
add eax ebp +
cmp ebx eax +
jb loc_456EF8  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 0Ah +
jmp loc_456EF0  +
add ebx 4 +
jmp loc_456EF0  +
mov eax [edi] +
mov [esp+28h+var_1C] ecx +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov ecx [esp+28h+var_1C] +
lea ebx [ecx+eax+4] +
jmp loc_456EF0  +
mov eax [edi] +
mov [esp+28h+var_1C] ecx +
mov eax [eax+34h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov ecx [esp+28h+var_1C] +
lea ebx [ecx+eax+2] +
jmp loc_456EF0  +
cmp ax 12h +
jz loc_457010  +
cmp ax 106h +
jz loc_457020  +
add ebx 6 +
jmp loc_456EF0  +
cmp ax 111h +
jz loc_457000  +
cmp ax 121h +
jnz loc_456FAC  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov [esi+0Ch] eax +
jmp loc_456FAC  +
mov ebx ecx +
jmp loc_456EF0  +
lea eax [edx+1] +
mov cl 1Fh +
test al 2 +
mov byte ptr [edx] 0 +
jz loc_456E75  +
xor edx edx +
add eax 2 +
mov [eax-2] dx +
sub ecx 2 +
jmp loc_456E75  +
mov [esi+14h] ecx +
jmp loc_456F2A  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov [esi+8] eax +
jmp loc_456FAC  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov [esi+4] eax +
jmp loc_456FAC  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov dword ptr [esi+18h] 1 +
mov [esi+10h] eax +
jmp loc_456FAC  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 4Ch +
cmp [edx+8] ecx +
ja loc_457055  +
cmp ecx [edx+0Ch] +
jb loc_457060  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
mov eax [edx+10h] +
test eax eax +
jz loc_457057  +
mov ecx [edx+20h] +
test ecx ecx +
jz loc_4570F4  +
mov eax [esi+24h] +
test eax eax +
jz loc_4571F0  +
mov ebp [esi+1Ch] +
test ebp ebp +
jz loc_4570A9  +
mov edi [esi+20h] +
mov edx 1 +
mov eax edi +
mov ecx eax +
sub ecx edi +
cmp ebx [eax] +
jb loc_45709D  +
cmp ebx [eax+8] +
jb loc_4570D7  +
mov ecx edx +
add eax 8 +
add edx 1 +
cmp ebp ecx +
ja loc_457090  +
xor eax eax +
mov edx [esi+24h] +
test edx edx +
jnz loc_4570BA  +
jmp loc_457057  +
mov edx [edx] +
test edx edx +
jz loc_457057  +
cmp ebx [edx+8] +
lea esi [esi+0] +
jb loc_4570B4  +
cmp ebx [edx+0Ch] +
jnb loc_4570B4  +
mov eax [esp+50h+arg_4] +
mov edx [edx+4] +
mov [eax] edx +
mov eax 1 +
jmp loc_457057  +
mov edx [esi+4] +
mov eax [esp+50h+arg_0] +
mov [eax] edx +
mov eax [esi+20h] +
mov edx [eax+ecx+4] +
mov eax [esp+50h+arg_8] +
mov [eax] edx +
mov eax 1 +
jmp loc_4570AB  +
mov eax [edi+14h] +
test eax eax +
jz loc_457290  +
add eax [esi+14h] +
cmp eax [edi+18h] +
mov ebp eax +
jnb loc_457074  +
mov eax [edi] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] ebp +
call eax  +
lea ecx [ebp+4] +
add eax ebp +
mov [esp+50h+var_40] eax +
mov eax [edi] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] ecx +
call eax  +
lea ecx [ebp+8] +
mov edx 66666667h +
mov [esp+50h+var_3C] ecx +
mov [esp+50h+var_38] eax +
mov eax [esp+50h+var_40] +
sub eax ecx +
mov ebp eax +
imul  edx +
mov eax [edi] +
sar ebp 1Fh +
sar edx 2 +
sub edx ebp +
mov [esi+1Ch] edx +
shl edx 3 +
mov [esp+50h+var_4C] edx +
mov [esp+50h+var_50] eax +
call sub_40E140  +
test eax eax +
mov [esi+20h] eax +
jz loc_457055  +
mov edx [esi+1Ch] +
test edx edx +
jz loc_457074  +
xor ecx ecx +
mov ebp eax +
mov [esp+50h+var_40] esi +
mov esi ecx +
mov [esp+50h+var_34] ebx +
mov ebx [esp+50h+var_3C] +
jmp loc_457193  +
mov ebp [eax+20h] +
mov eax [edi] +
lea edx ds:0[esi*8] +
add esi 1 +
add ebp edx +
mov [esp+50h+var_3C] edx +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] ebx +
call eax  +
mov edx [esp+50h+var_3C] +
mov [ebp+4] eax +
mov eax [esp+50h+var_40] +
add edx [eax+20h] +
mov eax [edi] +
mov ebp edx +
lea edx [ebx+6] +
add ebx 0Ah +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] edx +
call eax  +
add eax [esp+50h+var_38] +
mov [ebp+0] eax +
mov eax [esp+50h+var_40] +
cmp esi [eax+1Ch] +
jb loc_457190  +
mov esi [esp+50h+var_40] +
mov ebx [esp+50h+var_34] +
jmp loc_457074  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_45707F  +
mov edx [edi+10h] +
cmp ecx edx +
jb loc_457233  +
jmp loc_45707F  +
cmp ax 14h +
jz loc_457257  +
cmp ax 1Dh +
jz loc_457257  +
cmp ax 3 +
jz loc_457257  +
mov ecx [esp+50h+var_2C] +
test ecx ecx +
jz loc_45707F  +
mov edx [edi+10h] +
add ecx [edi+0Ch] +
cmp edx ecx +
jbe loc_45707F  +
mov eax [edi] +
mov [esp+50h+var_50] edx +
lea edx [esp+50h+var_30] +
add eax 4 +
call sub_456E50  +
test eax eax +
jz loc_457055  +
movzx eax [esp+50h+var_14] +
cmp ax 6 +
jnz loc_457207  +
mov eax [edi] +
mov [esp+50h+var_4C] 10h +
mov [esp+50h+var_50] eax +
call sub_40E220  +
test eax eax +
jz loc_457055  +
mov edx [esi+24h] +
mov [eax] edx +
mov edx [esp+50h+var_1C] +
mov [esi+24h] eax +
mov [eax+4] edx +
mov edx [esp+50h+var_28] +
mov [eax+8] edx +
mov edx [esp+50h+var_24] +
mov [eax+0Ch] edx +
jmp loc_457219  +
mov eax [edi] +
mov [esp+50h+var_4C] offset a_line_0 +
mov [esp+50h+var_50] eax +
call sub_40F280  +
test eax eax +
jz loc_457055  +
mov ebp [eax+28h] +
test ebp ebp +
jnz loc_4572B4  +
mov ebp [eax+24h] +
mov ecx [edi+4] +
mov edx [edi] +
mov [esp+50h+var_48] 0 +
mov [esp+50h+var_4C] eax +
mov [esp+50h+var_44] ecx +
mov [esp+50h+var_50] edx +
call sub_459470  +
test eax eax +
mov [edi+14h] eax +
jz loc_457055  +
add ebp eax +
mov [edi+18h] ebp +
jmp loc_4570FF  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+4Ch+arg_0] +
mov eax [esi+0A0h] +
mov ebx [eax+22Ch] +
mov eax [esp+4Ch+arg_8] +
mov ebp [eax+1Ch] +
mov eax [esp+4Ch+arg_10] +
add ebp [esp+4Ch+arg_C] +
test ebx ebx +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_14] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_18] +
mov dword ptr [eax] 0 +
jz loc_457498  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_4573B3  +
mov edx [ebx+8] +
test edx edx +
jz loc_45735A  +
cmp ebp [edx+8] +
jb loc_457354  +
cmp ebp [edx+0Ch] +
jb loc_457470  +
mov edx [edx] +
test edx edx +
jnz loc_457346  +
mov ecx [ebx+1Ch] +
mov edx [ebx+10h] +
cmp ecx edx +
jnb loc_4573B3  +
mov [esp+4Ch+var_30] ebp +
jmp loc_45737D  +
mov edx [ebx+10h] +
add ecx [ebx+0Ch] +
cmp edx ecx +
mov [ebx+1Ch] ecx +
jbe loc_4573B3  +
mov eax [ebx] +
mov [esp+4Ch+var_4C] edx +
lea edx [esp+4Ch+var_2C] +
add eax 4 +
call sub_456E50  +
test eax eax +
jz loc_4573B3  +
cmp [esp+4Ch+var_10] 11h +
mov ecx [esp+4Ch+var_28] +
jz loc_4573C0  +
test ecx ecx +
jnz loc_457370  +
mov ecx [ebx+1Ch] +
mov edx [ebx+10h] +
add ecx [esp+4Ch+var_2C] +
cmp edx ecx +
mov [ebx+1Ch] ecx +
ja loc_45737D  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
mov [esp+4Ch+var_48] 28h +
mov [esp+4Ch+var_4C] eax +
call sub_40E220  +
test eax eax +
jz loc_4573B3  +
mov edx [ebx+8] +
mov ecx [esp+4Ch+var_14] +
mov edi [esp+4Ch+var_20] +
mov [eax] edx +
mov [ebx+8] eax +
mov edx [esp+4Ch+var_18] +
mov [eax+10h] ecx +
mov ecx [esp+4Ch+var_1C] +
mov [eax+0Ch] edi +
mov [eax+4] edx +
mov edx [esp+4Ch+var_24] +
mov [eax+14h] ecx +
mov ecx [esp+4Ch+var_28] +
mov [eax+8] edx +
test ecx ecx +
jz loc_457415  +
mov esi [ebx+1Ch] +
add esi [esp+4Ch+var_2C] +
cmp esi [ebx+10h] +
jb loc_457460  +
mov dword ptr [eax+18h] 0 +
cmp [esp+4Ch+var_30] edx +
jb loc_45739E  +
cmp [esp+4Ch+var_30] edi +
jnb loc_45739E  +
mov edi [esp+4Ch+arg_18] +
mov edx eax +
mov eax ebx +
mov ebp [esp+4Ch+var_30] +
mov [esp+4Ch+var_44] edi +
mov edi [esp+4Ch+arg_14] +
mov ecx ebp +
mov [esp+4Ch+var_48] edi +
mov edi [esp+4Ch+arg_10] +
mov [esp+4Ch+var_4C] edi +
call sub_457040  +
jmp loc_4573B5  +
mov ebp [ebx+0Ch] +
add ebp ecx +
cmp esi ebp +
jz loc_457415  +
mov [eax+18h] esi +
jmp loc_45741C  +
mov eax [esp+4Ch+arg_18] +
mov ecx ebp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_14] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_10] +
mov [esp+4Ch+var_4C] eax +
mov eax ebx +
call sub_457040  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esi+0A0h] +
mov [esp+4Ch+var_48] 20h +
mov [esp+4Ch+var_4C] esi +
call sub_40E220  +
test eax eax +
mov ebx eax +
mov [edi+22Ch] eax +
jz loc_4573B3  +
mov [esp+4Ch+var_48] offset a_debug_0 +
mov [esp+4Ch+var_4C] esi +
call sub_40F280  +
test eax eax +
jz loc_4573B3  +
mov edi [eax+28h] +
test edi edi +
jnz loc_4574E0  +
mov edi [eax+24h] +
mov ecx [esp+4Ch+arg_4] +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_40] ecx +
call sub_459470  +
test eax eax +
mov [ebx+0Ch] eax +
jz loc_4573B3  +
add edi eax +
mov [ebx+1Ch] eax +
mov eax [esp+4Ch+arg_4] +
mov [ebx+10h] edi +
mov [ebx] esi +
mov [ebx+4] eax +
jmp loc_45733F  +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [ecx+0Ch] +
mov ecx [ecx+4] +
mov ebp [edx+0Ch] +
mov edx [edx+4] +
lea edi [ecx+eax-1] +
cmp ebp eax +
lea esi [edx+ebp-1] +
mov edx eax +
cmovbe edx ebp +
test edx edx +
jz loc_457574  +
movzx ebx byte ptr [edi] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_457580  +
mov ecx edx +
neg ecx  +
add edi ecx +
add esi ecx +
jmp loc_45756F  +
movzx ebx byte ptr [edi+edx] +
movzx ecx byte ptr [esi+edx] +
cmp bl cl +
jnz loc_457580  +
sub edx 1 +
jnz loc_457563  +
pop ebx  +
sub eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax bl +
sub eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov eax [eax] +
mov edx [edx] +
mov ebp [eax+0Ch] +
mov edi [edx+0Ch] +
mov ecx [edx+4] +
mov edx [eax+10h] +
mov ebx [eax+4] +
sub edx 1 +
mov eax edx +
and edx edi +
and eax ebp +
sub eax edx +
test eax eax +
jnz loc_4575FA  +
cmp edi ebp +
mov edx ebp +
cmovbe edx edi +
test edx edx +
jz loc_4575F6  +
lea esi [ebx+ebp-1] +
lea ebx [ecx+edi-1] +
movzx eax byte ptr [esi] +
movzx ecx byte ptr [ebx] +
cmp al cl +
jnz loc_457600  +
mov eax edx +
neg eax  +
add esi eax +
add ebx eax +
jmp loc_4575F1  +
movzx eax byte ptr [esi+edx] +
movzx ecx byte ptr [ebx+edx] +
cmp al cl +
jnz loc_457600  +
sub edx 1 +
jnz loc_4575E5  +
mov eax ebp +
sub eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
sub eax ecx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test edx edx +
jz loc_457667  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_10] eax +
call sub_4126E0  +
test eax eax +
jz loc_457660  +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+1Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+var_14] 20h +
mov [esp+18h+var_18] ebx +
call sub_412630  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_457654  +
jmp loc_457620  +
***
jmp sub_457690  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_10] ecx +
mov ecx [eax+2Ch] +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_18] edx +
test ecx ecx +
jnz loc_457777  +
mov esi [eax+28h] +
xor ebx ebx +
mov eax edx +
test esi esi +
lea edi [edx+esi] +
jz loc_457852  +
add eax 1 +
movzx edx byte ptr [eax-1] +
mov ecx edx +
shl ecx 11h +
add edx ecx +
add edx ebx +
mov ebx edx +
shr ebx 2 +
xor ebx edx +
cmp eax edi +
jnz loc_4576C0  +
mov edi [esp+2Ch+var_14] +
xor edx edx +
mov eax ebx +
div  dword ptr [edi+0Ch] +
mov eax [edi] +
mov edi [eax+edx*4] +
test edi edi +
jnz loc_4576F7  +
jmp loc_457741  +
mov edi [edi] +
test edi edi +
jz loc_457741  +
cmp [edi+8] ebx +
jnz loc_4576F1  +
cmp [edi+0Ch] esi +
jnz loc_4576F1  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] eax +
mov eax [edi+4] +
mov [esp+2Ch+var_2C] eax +
call memcmp  +
test eax eax +
jnz loc_4576F1  +
mov edx [esp+2Ch+var_10] +
mov eax edi +
cmp [edi+10h] edx +
jnb loc_45776F  +
mov edx [esp+2Ch+arg_0] +
xor eax eax +
test edx edx +
jz loc_45776F  +
mov dword ptr [edi+0Ch] 0 +
mov dword ptr [edi+10h] 0 +
jmp loc_457749  +
mov eax [esp+2Ch+arg_0] +
test eax eax +
jz loc_4577AA  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call sub_4121B0  +
test eax eax +
jz loc_4577AA  +
mov [eax+0Ch] esi +
mov esi [esp+2Ch+var_10] +
mov [eax+10h] esi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_14] +
mov esi [eax+28h] +
cmp esi 1 +
jz loc_45780A  +
test esi esi +
jnz loc_4577B4  +
xor ebp ebp +
xor edx edx +
nop   +
mov eax ebp +
add edx ebp +
shl eax 11h +
imul ebp esi +
add eax edx +
mov ebx eax +
shr ebx 2 +
xor ebx eax +
add esi ebp +
jmp loc_4576DB  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
xor ebp ebp +
xor edx edx +
lea esi [esi+0] +
movzx edi byte ptr [eax] +
mov ebx edi +
test bl bl +
jnz loc_4577E1  +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add ecx 1 +
cmp ecx esi +
jz loc_457790  +
cmp byte ptr [eax+ecx] 0 +
jz loc_4577D0  +
cmp esi ecx +
jz loc_457790  +
lea ebx [eax+esi] +
mov ecx edi +
jmp loc_4577EB  +
movzx ecx byte ptr [eax] +
movzx ecx cl +
add eax 1 +
mov edi ecx +
shl edi 11h +
add ecx edi +
add ecx edx +
mov edx ecx +
shr edx 2 +
xor edx ecx +
cmp eax ebx +
jnz loc_4577E8  +
add ebp 1 +
jmp loc_4577C0  +
mov ecx [esp+2Ch+var_18] +
movzx eax byte ptr [ecx] +
test eax eax +
jz loc_457859  +
xor ebp ebp +
xor edx edx +
lea esi [esi+0] +
mov ebx eax +
add ebp 1 +
shl ebx 11h +
add eax ebx +
add eax edx +
mov edx eax +
shr edx 2 +
xor edx eax +
movzx eax byte ptr [ecx+ebp] +
test eax eax +
jnz loc_457820  +
mov eax ebp +
add edx ebp +
shl eax 11h +
add esi ebp +
add eax edx +
mov ebx eax +
shr ebx 2 +
xor ebx eax +
jmp loc_4576DB  +
mov ebx esi +
jmp loc_4576DB  +
xor ebp ebp +
xor ebx ebx +
add esi ebp +
jmp loc_4576DB  +
***
sub esp 18h +
mov [esp+18h+var_18] 1 +
call sub_457690  +
test eax eax +
mov edx eax +
jz loc_4578C0  +
mov ecx [edx+18h] +
test ecx ecx +
jz loc_457894  +
add esp 18h +
pop ebx  +
retn   +
mov eax [esp+18h+arg_0] +
add dword ptr [ebx+1Ch] 1 +
mov [edx+18h] eax +
mov eax [ebx+20h] +
test eax eax +
jz loc_4578B6  +
mov eax [ebx+24h] +
mov [eax+1Ch] edx +
mov [ebx+24h] edx +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
mov [ebx+20h] edx +
jmp loc_4578AC  +
xor eax eax +
jmp loc_45788F  +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_8] +
test ebp ebp +
jz loc_457E06  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+4] +
test eax eax +
jz loc_457DF4  +
mov edx [eax] +
mov ecx [esp+2Ch+arg_8] +
test edx edx +
mov ebp edx +
mov [ecx+4] edx +
mov dword ptr [eax] 0 +
jnz loc_457BBE  +
jmp loc_457CA4  +
mov edi [esp+2Ch+arg_C] +
mov eax [ebp+8] +
test edi edi +
mov dword ptr [eax] 0 +
jz loc_457BB3  +
mov eax [ebp+4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call [esp+2Ch+arg_C]  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_457CA4  +
mov eax [ebp+4] +
mov [esp+2Ch+var_18] eax +
mov eax [eax+14h] +
test ah 80h +
jnz loc_457B90  +
mov edi [esp+2Ch+var_18] +
test eax 1000000h +
lea ebx [ebp+14h] +
mov edx [edi+24h] +
mov ecx [edi+40h] +
lea esi [ebp+edx+14h] +
jz loc_457DA7  +
cmp esi ebx +
jbe loc_457BB3  +
mov eax 1 +
xor edi edi +
shl eax cl +
mov [esp+2Ch+var_10] eax +
sub eax 1 +
mov [esp+2Ch+var_14] ebp +
mov ebp ebx +
mov [esp+2Ch+var_1C] eax +
mov eax ebx +
sub eax ebp +
lea ecx [eax-1] +
xor ecx eax +
add ecx 1 +
shr ecx 1 +
cmp [esp+2Ch+var_1C] ecx +
jb loc_457C1F  +
test ecx ecx +
jnz loc_457C23  +
mov ecx [esp+2Ch+var_10] +
mov eax [esp+2Ch+arg_8] +
mov edx [esp+2Ch+var_14] +
mov eax [eax+8] +
mov [esp+2Ch+var_2C] edx +
mov edx ebx +
call sub_457870  +
test eax eax +
jz loc_457DDA  +
mov ecx [esp+2Ch+var_18] +
add ebx [eax+0Ch] +
mov edx [ecx+78h] +
cmp edx 1 +
jz loc_457D44  +
cmp esi ebx +
jbe loc_457C95  +
test edx edx +
jz loc_457C81  +
cmp byte ptr [ebx] 0 +
nop   +
jnz loc_457D33  +
xor eax eax +
jmp loc_457C7A  +
cmp byte ptr [ebx+eax] 0 +
jnz loc_457D33  +
add eax 1 +
cmp eax edx +
jnz loc_457C70  +
test edi edi +
jnz loc_457C8F  +
mov eax ebx +
sub eax ebp +
test [esp+2Ch+var_1C] eax +
jz loc_457D00  +
add ebx edx +
cmp esi ebx +
ja loc_457C57  +
mov ebp [esp+2Ch+var_14] +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_457BBE  +
mov eax [esp+2Ch+arg_8] +
mov ecx [eax+8] +
mov eax [ecx+20h] +
test eax eax +
jz loc_457DF4  +
mov esi [ecx+2Ch] +
xor edx edx +
xor ebx ebx +
test esi esi +
jz loc_457CE4  +
jmp loc_457E1A  +
mov ebx [eax+10h] +
lea edx [edx+ebx-1] +
neg ebx  +
and edx ebx +
mov ebx ecx +
mov [eax+14h] edx +
add edx [eax+0Ch] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_45803B  +
mov ecx [eax+18h] +
mov esi [ecx+10h] +
test esi esi +
jnz loc_457CC6  +
test ebx ebx +
jz loc_457CF8  +
mov ebx [ebx+4] +
mov [ebx+24h] edx +
mov [ecx+10h] eax +
xor edx edx +
jmp loc_457CC6  +
mov ecx [esp+2Ch+var_14] +
mov edx ebx +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+8] +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_10] +
call sub_457870  +
test eax eax +
jz loc_457DDA  +
mov eax [esp+2Ch+var_18] +
mov di 1 +
mov edx [eax+78h] +
add ebx edx +
jmp loc_457C91  +
cmp esi ebx +
ja loc_457C07  +
mov ebp [esp+2Ch+var_14] +
jmp loc_457C99  +
cmp esi ebx +
jbe loc_457C95  +
cmp byte ptr [ebx] 0 +
nop   +
jnz loc_457C07  +
mov eax edi +
mov edi [esp+2Ch+var_1C] +
jmp loc_457D74  +
add ebx 1 +
cmp ebx esi +
jz loc_457C95  +
cmp byte ptr [ebx] 0 +
jnz loc_457E13  +
test eax eax +
jnz loc_457D60  +
mov edx ebx +
sub edx ebp +
test edi edx +
jnz loc_457D60  +
mov ecx [esp+2Ch+var_14] +
mov edx offset unk_49B627 +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+8] +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_10] +
call sub_457870  +
test eax eax +
jz loc_457DDA  +
mov eax 1 +
jmp loc_457D60  +
cmp esi ebx +
jbe loc_457BB3  +
mov edi [esp+2Ch+arg_8] +
jmp loc_457DC4  +
mov eax [esp+2Ch+var_18] +
add ebx [eax+78h] +
cmp esi ebx +
jbe loc_457BB3  +
mov eax [edi+8] +
mov ecx 1 +
mov edx ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_457870  +
test eax eax +
jnz loc_457DB5  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+4] +
test eax eax +
jz loc_457DF4  +
mov edx [eax+8] +
mov dword ptr [edx] 0 +
mov eax [eax] +
test eax eax +
jnz loc_457DE5  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax] +
test eax eax +
mov [esp+2Ch+arg_8] eax +
jnz loc_457B63  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
jmp loc_457C07  +
mov eax [ecx+1Ch] +
shl eax 2 +
mov [esp+2Ch+var_2C] eax +
call sub_412BD0  +
test eax eax +
mov edi eax +
jz loc_457F52  +
mov eax [esp+2Ch+arg_8] +
mov edx [eax+8] +
mov eax [edx+20h] +
test eax eax +
jz loc_457F43  +
mov ebp edi +
xor ecx ecx +
jmp loc_457E52  +
mov ebp ebx +
mov esi [eax+10h] +
mov ebx ebp +
test esi esi +
jz loc_457E7C  +
mov edx [esp+2Ch+arg_8] +
add ebx 4 +
mov [ebp+0] eax +
mov edx [edx+8] +
mov ebp [edx+28h] +
sub [eax+0Ch] ebp +
cmp esi ecx +
jz loc_457E7C  +
test ecx ecx +
mov ecx 0FFFFFFFFh +
cmovz ecx esi +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_457E50  +
mov eax ebx +
sub eax edi +
sar eax 2 +
test eax eax +
mov [edx+1Ch] eax +
jz loc_457F4A  +
cmp ecx 0FFFFFFFFh +
jz loc_457EA4  +
cmp [edx+28h] ecx +
mov esi offset sub_457590 +
jb loc_457EA9  +
mov esi offset sub_457520 +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] 4 +
mov [esp+2Ch+var_2C] edi +
call qsort  +
lea eax [ebx-4] +
mov ebp [ebx-4] +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+8] +
mov eax [eax+28h] +
add [ebp+0Ch] eax +
mov [esp+2Ch+var_18] eax +
sub [esp+2Ch+var_1C] 4 +
cmp edi [esp+2Ch+var_1C] +
ja loc_457F4A  +
mov eax [esp+2Ch+var_1C] +
mov ebx [eax] +
mov eax [esp+2Ch+var_18] +
mov esi [ebx+10h] +
add eax [ebx+0Ch] +
cmp [ebp+10h] esi +
mov [ebx+0Ch] eax +
jb loc_457F3F  +
mov ecx [ebp+0Ch] +
sub esi 1 +
mov edx ecx +
sub edx eax +
test esi edx +
jnz loc_457F3F  +
mov esi [ebp+4] +
cmp eax ecx +
mov [esp+2Ch+var_14] esi +
mov esi [ebx+4] +
jnb loc_457F3F  +
add edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] edx +
call memcmp  +
test eax eax +
jnz loc_457F3F  +
mov [ebx+14h] ebp +
mov dword ptr [ebx+10h] 0 +
mov ebx ebp +
mov ebp ebx +
jmp loc_457EDC  +
mov dword ptr [edx+1Ch] 0 +
mov [esp+2Ch+var_2C] edi +
call free  +
mov eax [esp+2Ch+arg_8] +
xor edx edx +
mov ebx [eax+8] +
mov eax [ebx+20h] +
mov ecx [eax+18h] +
mov esi [eax+10h] +
test esi esi +
jz loc_457F81  +
mov ebp [ecx+10h] +
test ebp ebp +
jz loc_458031  +
lea edx [edx+esi-1] +
neg esi  +
and edx esi +
mov [eax+14h] edx +
add edx [eax+0Ch] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_457F99  +
mov esi [eax+18h] +
cmp ecx esi +
jz loc_457F95  +
mov ecx [ecx+4] +
mov [ecx+24h] edx +
mov ecx esi +
jmp loc_457F61  +
mov eax [ecx+4] +
mov ecx [eax+40h] +
mov [eax+24h] edx +
test ecx ecx +
jz loc_457FBA  +
mov edi 1 +
shl edi cl +
mov ecx edi +
lea edx [edx+edi-1] +
neg ecx  +
and edx ecx +
mov [eax+24h] edx +
mov eax [ebx+20h] +
lea esi [ebx+20h] +
test eax eax +
jnz loc_457FD0  +
jmp loc_458004  +
lea esi [eax+1Ch] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_458004  +
mov edi [eax+10h] +
test edi edi +
jnz loc_457FC6  +
mov ebx [eax+0Ch] +
mov edx [eax+1Ch] +
test ebx ebx +
mov [esi] edx +
jz loc_457FC9  +
mov ecx [eax+14h] +
mov edx [ecx+18h] +
mov [eax+18h] edx +
mov edx [ecx+10h] +
mov [eax+10h] edx +
mov edx [ecx+0Ch] +
add edx [ecx+14h] +
sub edx ebx +
mov [eax+14h] edx +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_457FD0  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+4] +
test eax eax +
jnz loc_45801E  +
jmp loc_457DF4  +
mov eax [eax] +
test eax eax +
jz loc_457DF4  +
mov edx [eax+10h] +
test edx edx +
jnz loc_458014  +
mov edx [eax+4] +
or dword ptr [edx+14h] 208000h +
jmp loc_458014  +
mov [ecx+10h] eax +
xor edx edx +
jmp loc_457F73  +
mov eax [ecx+4] +
mov [eax+24h] edx +
jmp loc_458004  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_8] +
mov esi [esp+3Ch+arg_4] +
test edi edi +
jz loc_4581B0  +
mov ebx [edi+10h] +
test ebx ebx +
jz loc_458207  +
mov ecx [esi+3Ch] +
mov edx [ecx+8Ch] +
mov eax [edx+10h] +
and eax [edx+14h] +
cmp eax 0FFFFFFFFh +
jz loc_458214  +
mov [esp+3Ch+var_30] 0 +
mov eax [esi+38h] +
xor edx edx +
add eax [ecx+50h] +
adc edx [ecx+54h] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_411E10  +
test eax eax +
jnz loc_4581B0  +
mov ebx [edi+10h] +
mov [esp+3Ch+var_14] 0 +
mov eax [ebx+18h] +
xor edi edi +
mov esi [esi+38h] +
mov [esp+3Ch+var_18] 0 +
mov [esp+3Ch+var_1C] eax +
mov eax [eax+4] +
mov [esp+3Ch+var_10] eax +
mov eax [eax+3Ch] +
mov ecx [eax+40h] +
test ecx ecx +
jnz loc_458270  +
mov ebp [esp+3Ch+var_14] +
xor ecx ecx +
mov [esp+3Ch+var_24] esi +
mov esi ecx +
mov [esp+3Ch+var_20] edi +
lea esi [esi+0] +
test ebp ebp +
mov eax [ebx+4] +
mov edi [ebx+0Ch] +
jz loc_458188  +
mov ecx [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] eax +
lea edx [ebp+ecx+0] +
mov [esp+3Ch+var_3C] edx +
call memcpy  +
xor edx edx +
add [esp+3Ch+var_24] edi +
adc [esp+3Ch+var_20] edx +
mov ebx [ebx+1Ch] +
add esi edi +
test ebx ebx +
jz loc_4581C0  +
mov eax [esp+3Ch+var_1C] +
cmp eax [ebx+18h] +
jnz loc_4581C0  +
mov eax [ebx+10h] +
mov edi esi +
neg edi  +
sub eax 1 +
and edi eax +
jz loc_458100  +
test ebp ebp +
jz loc_458245  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] edi +
add eax ebp +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call memcpy  +
xor edx edx +
add [esp+3Ch+var_24] edi +
adc [esp+3Ch+var_20] edx +
add esi edi +
test ebp ebp +
mov eax [ebx+4] +
mov edi [ebx+0Ch] +
jnz loc_45810A  +
mov ecx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_34] ecx +
call sub_411CB0  +
cmp edi eax +
jz loc_45812C  +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_4581B0  +
mov [esp+3Ch+var_3C] eax +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx esi +
mov esi [esp+3Ch+var_24] +
mov eax [esp+3Ch+var_10] +
mov eax [eax+24h] +
sub eax ecx +
mov ebx eax +
jz loc_4581F7  +
mov eax [esp+3Ch+var_14] +
test eax eax +
jz loc_45829F  +
add eax esi +
mov edi eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_458207  +
mov [esp+3Ch+var_3C] eax +
call free  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+30h] +
test byte ptr [ecx+17h] 8 +
mov [esp+3Ch+var_14] eax +
jz loc_458229  +
test eax eax +
jnz loc_4580C4  +
mov [esp+3Ch+var_34] offset a_bfd_write_mer +
mov [esp+3Ch+var_38] 338h +
mov [esp+3Ch+var_3C] offset a____Binutil_14 +
call sub_410560  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call sub_411CB0  +
cmp edi eax +
jnz loc_4581A0  +
add esi edi +
jmp loc_45817E  +
mov eax 1 +
shl eax cl +
mov [esp+3Ch+var_3C] eax +
call sub_412D60  +
test eax eax +
mov [esp+3Ch+var_18] eax +
jz loc_4581B0  +
mov eax [esp+3Ch+var_1C] +
cmp eax [ebx+18h] +
jz loc_4580ED  +
xor ecx ecx +
jmp loc_4581C6  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call sub_411CB0  +
cmp ebx eax +
jnz loc_4581A0  +
jmp loc_4581F7  +
***
push esi  +
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_4584DC  +
lea esi [esi+0] +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call sub_412190  +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call free  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_4584C0  +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test edx edx +
jz loc_458530  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
mov [esp+18h+var_10] eax +
call sub_4126E0  +
test eax eax +
jz loc_458524  +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+var_14] 10h +
mov [esp+18h+var_18] ebx +
call sub_412630  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_45851F  +
jmp loc_458500  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_14] 0 +
mov [esp+7Ch+var_10] 0 +
mov ecx [eax+24h] +
test ecx ecx +
jz loc_4587C0  +
mov eax [esp+7Ch+arg_C] +
mov eax [eax+24h] +
test eax eax +
jz loc_4587C0  +
mov eax ecx +
mov edx 0AAAAAAABh +
mul  edx +
shr edx 3 +
lea eax [edx+edx*2] +
shl eax 2 +
cmp ecx eax +
jnz loc_4587C0  +
mov eax [esp+7Ch+arg_C] +
test byte ptr [eax+14h] 4 +
jnz loc_4587C0  +
mov eax [esp+7Ch+arg_8] +
cmp dword ptr [eax+3Ch] offset off_47D510 +
jz loc_4587C0  +
mov eax [esp+7Ch+arg_C] +
cmp dword ptr [eax+3Ch] offset off_47D510 +
jz loc_4587C0  +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_5C] 0 +
mov ebp [eax+20h] +
test ebp ebp +
jz loc_458A00  +
mov eax ecx +
mov edx 0AAAAAAABh +
mul  edx +
mov [esp+7Ch+var_64] edx +
shr [esp+7Ch+var_64] 3 +
mov eax [esp+7Ch+var_64] +
lea ebx ds:0FFFFFFFCh[eax*4] +
lea eax [ebx+0Ch] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_40E140  +
mov edi eax +
mov [esp+7Ch+var_48] eax +
mov eax [esp+7Ch+arg_10] +
test edi edi +
mov [eax] edi +
jz loc_4586AB  +
mov eax [esp+7Ch+arg_8] +
mov esi [esp+7Ch+arg_8] +
mov dword ptr [edi] 0 +
mov eax [eax+24h] +
mov [esi+28h] eax +
lea eax [ebx+4] +
lea ebx [edi+8] +
mov dword ptr [edi+4] 0 +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] ebx +
mov [esp+7Ch+var_3C] eax +
mov [esp+7Ch+var_38] ebx +
call memset  +
lea eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_40FBE0  +
test eax eax +
jnz loc_4587D0  +
mov eax [esp+7Ch+var_14] +
test eax eax +
jz loc_4586BB  +
mov [esp+7Ch+var_7C] eax +
call free  +
mov edx [esp+7Ch+var_10] +
xor eax eax +
test edx edx +
jz loc_4587C5  +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_6C] eax +
call free  +
mov eax [esp+7Ch+var_6C] +
jmp loc_4587C5  +
mov eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [esp+7Ch+var_10] +
mov [esp+7Ch+var_14] 0 +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [esp+7Ch+var_64] +
sub eax [esp+7Ch+var_34] +
mov ebx [esp+7Ch+arg_8] +
mov [esp+7Ch+var_10] 0 +
lea eax [eax+eax*2] +
shl eax 2 +
test eax eax +
mov [ebx+24h] eax +
jnz loc_458729  +
or dword ptr [ebx+14h] 208000h +
mov eax [esp+7Ch+arg_C] +
or dword ptr [eax+14h] 208000h +
mov eax [esp+7Ch+arg_4] +
mov ebx [eax+20h] +
mov eax [eax] +
mov [esp+7Ch+var_7C] eax +
call sub_4129B0  +
mov esi [esp+7Ch+var_34] +
test esi esi +
mov [ebx+24h] eax +
jz loc_4587C0  +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_40E140  +
mov ebx [esp+7Ch+var_48] +
test eax eax +
mov [ebx+4] eax +
jz loc_4586AB  +
mov ebx [esp+7Ch+var_64] +
xor ecx ecx +
xor edx edx +
test ebx ebx +
jz loc_4587A8  +
mov esi [esp+7Ch+var_64] +
mov edi [esp+7Ch+var_38] +
mov [eax+edx*4] ecx +
lea ebx [ecx+0Ch] +
cmp dword ptr [edi+edx*4] 0FFFFFFFFh +
cmovz ecx ebx +
add edx 1 +
cmp edx esi +
jnz loc_458790  +
test ecx ecx +
jnz loc_4587C0  +
mov [esp+7Ch+var_78] 1EAh +
mov [esp+7Ch+var_7C] offset a____Binutil_16 +
call sub_410530  +
lea esi [esi+0] +
mov eax 1 +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+7Ch+var_10] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_C] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_40FBE0  +
test eax eax +
jz loc_4586AB  +
mov edi [esp+7Ch+arg_14] +
test edi edi +
jz loc_458D07  +
mov eax [esp+7Ch+arg_14] +
mov eax [eax] +
mov [esp+7Ch+var_58] eax +
mov esi [esp+7Ch+arg_8] +
mov eax [esp+7Ch+var_14] +
mov ebx [esi+24h] +
add ebx eax +
cmp eax ebx +
mov [esp+7Ch+var_6C] ebx +
jnb loc_458D9F  +
lea ebp [eax+0Ch] +
mov eax [esp+7Ch+var_48] +
mov [esp+7Ch+var_34] 0 +
mov [esp+7Ch+var_54] 0 +
lea esi [eax+0Ch] +
mov eax [esp+7Ch+arg_4] +
mov ebx esi +
add eax 4 +
mov [esp+7Ch+var_28] eax +
jmp loc_4588C1  +
mov eax [esp+7Ch+arg_0] +
lea edx [ebp-4] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov ecx [esp+7Ch+arg_14] +
add eax [esp+7Ch+var_58] +
test ecx ecx +
jz loc_45888D  +
mov edi [esp+7Ch+arg_14] +
mov [edi] eax +
mov edx [esp+7Ch+var_5C] +
test edx edx +
jnz loc_4589E1  +
mov edi [esp+7Ch+var_58] +
add [esp+7Ch+var_34] 1 +
mov dword ptr [ebx-4] 0FFFFFFFFh +
mov [esp+7Ch+var_54] edi +
mov [esp+7Ch+var_58] eax +
cmp [esp+7Ch+var_6C] ebp +
jbe loc_4586DE  +
add ebp 0Ch +
add ebx 4 +
mov esi [ebx-4] +
lea eax [ebp-0Ch] +
mov [esp+7Ch+var_68] eax +
mov [esp+7Ch+var_60] ebx +
test esi esi +
jnz loc_4588B1  +
movzx esi byte ptr [ebp-8] +
mov [esp+7Ch+var_4C] ebp +
test esi esi +
jz loc_458860  +
mov eax [esp+7Ch+arg_0] +
mov edi [esp+7Ch+var_68] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edi +
call eax  +
mov edi [esp+7Ch+arg_C] +
add eax [esp+7Ch+var_54] +
cmp eax [edi+24h] +
jnb loc_458CC7  +
add eax [esp+7Ch+var_10] +
mov edi eax +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+arg_4] +
mov eax [eax] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call sub_412880  +
cmp esi 82h +
mov [ebx-4] eax +
jnz loc_4588B1  +
cmp ebp [esp+7Ch+var_6C] +
jnb loc_458D88  +
movzx eax byte ptr [ebp+4] +
test eax eax +
jz loc_458D88  +
xor ecx ecx +
xor edx edx +
mov esi ebp +
xor edi edi +
mov [esp+7Ch+var_24] ebx +
mov ebx edx +
mov [esp+7Ch+var_20] ebp +
mov ebp ecx +
mov [esp+7Ch+var_44] 0 +
mov [esp+7Ch+var_50] 0 +
mov [esp+7Ch+var_30] 0 +
jmp loc_4589C0  +
cmp eax 82h +
jz loc_458AA8  +
mov eax [esp+7Ch+var_44] +
test eax eax +
jz loc_458AB2  +
add esi 0Ch +
cmp [esp+7Ch+var_6C] esi +
jbe loc_458B7B  +
movzx eax byte ptr [esi+4] +
test eax eax +
jz loc_458B7B  +
cmp eax 0C2h +
jz loc_4589A7  +
cmp eax 0A2h +
jnz loc_458990  +
mov eax [esp+7Ch+var_44] +
test eax eax +
jz loc_458B7B  +
sub [esp+7Ch+var_44] 1 +
jmp loc_4589A7  +
mov edi [esp+7Ch+var_58] +
mov [esp+7Ch+var_5C] 0 +
mov [esp+7Ch+var_58] eax +
mov [esp+7Ch+var_54] edi +
jmp loc_4588DF  +
call sub_4127C0  +
mov ebx [esp+7Ch+arg_4] +
test eax eax +
mov [ebx] eax +
jz loc_4586AB  +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_78] offset unk_49B6A4 +
mov [esp+7Ch+var_7C] eax +
call sub_412880  +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_74] 10h +
mov [esp+7Ch+var_78] offset sub_4584F0 +
add eax 4 +
mov [esp+7Ch+var_7C] eax +
call sub_412160  +
test eax eax +
jz loc_4586AB  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] 102108h +
mov [esp+7Ch+var_78] offset a_stabstr_0 +
mov [esp+7Ch+var_7C] eax +
call sub_40F660  +
mov ebx [esp+7Ch+arg_4] +
test eax eax +
mov [ebx+20h] eax +
jz loc_4586AB  +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_5C] 1 +
mov ecx [eax+24h] +
jmp loc_4585F8  +
add [esp+7Ch+var_44] 1 +
jmp loc_4589A7  +
mov eax [esp+7Ch+var_10] +
mov edx [esp+7Ch+arg_0] +
mov [esp+7Ch+var_2C] eax +
mov eax [edx+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] esi +
call eax  +
mov edx [esp+7Ch+var_54] +
add edx eax +
add edx [esp+7Ch+var_2C] +
cmp byte ptr [edx] 0 +
jz loc_4589A7  +
mov eax edi +
mov edi [esp+7Ch+var_30] +
mov [esp+7Ch+var_2C] esi +
mov esi edx +
jmp loc_458B14  +
movzx ecx byte ptr [esi] +
lea edx [eax+1] +
add ebx 1 +
mov [eax] cl +
movzx eax byte ptr [esi] +
movsx ecx al +
add edi ecx +
cmp al 28h +
jz loc_458B40  +
movzx ecx byte ptr [esi+1] +
add esi 1 +
test cl cl +
jz loc_458B6C  +
mov eax edx +
cmp ebp ebx +
ja loc_458AF0  +
mov eax [esp+7Ch+var_50] +
add ebp 8000h +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_412D20  +
test eax eax +
mov [esp+7Ch+var_50] eax +
jz loc_4586AB  +
add eax ebx +
jmp loc_458AF0  +
movzx ecx byte ptr [esi+1] +
lea eax [esi+1] +
movzx esi cl +
test ds:byte_49F240[esi+esi] 4 +
jz loc_458B67  +
add eax 1 +
movzx ecx byte ptr [eax] +
movzx esi cl +
test ds:byte_49F240[esi+esi] 4 +
jnz loc_458B54  +
lea esi [eax-1] +
jmp loc_458B0B  +
mov [esp+7Ch+var_30] edi +
mov esi [esp+7Ch+var_2C] +
mov edi edx +
jmp loc_4589A7  +
mov eax edi +
mov edx ebx +
mov ebp [esp+7Ch+var_20] +
sub eax [esp+7Ch+var_50] +
mov ebx [esp+7Ch+var_24] +
cmp eax edx +
jz loc_458BAB  +
mov [esp+7Ch+var_78] 167h +
mov [esp+7Ch+var_7C] offset a____Binutil_16 +
mov [esp+7Ch+var_44] edx +
call sub_410530  +
mov edx [esp+7Ch+var_44] +
mov eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+var_28] +
mov [esp+7Ch+var_7C] eax +
call sub_4123C0  +
test eax eax +
mov edi eax +
jz loc_4586AB  +
mov esi [eax+0Ch] +
mov edx [esp+7Ch+var_44] +
test esi esi +
jz loc_458C2D  +
mov [esp+7Ch+var_44] ebx +
mov edi edx +
mov ebx [esp+7Ch+var_30] +
mov [esp+7Ch+var_40] eax +
jmp loc_458BFE  +
mov esi [esi] +
test esi esi +
jz loc_458C23  +
cmp [esi+4] ebx +
jnz loc_458BF8  +
cmp [esi+8] edi +
jnz loc_458BF8  +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] eax +
mov eax [esi+0Ch] +
mov [esp+7Ch+var_7C] eax +
call memcmp  +
test eax eax +
jnz loc_458BF8  +
mov edx edi +
mov ebx [esp+7Ch+var_44] +
mov edi [esp+7Ch+var_40] +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_78] 10h +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_7C] eax +
call sub_40E140  +
test eax eax +
jz loc_4586AB  +
mov edx [esp+7Ch+var_30] +
mov ecx [esp+7Ch+var_68] +
sub ecx [esp+7Ch+var_14] +
test esi esi +
mov dword ptr [eax+0Ch] 82h +
mov [eax+8] edx +
mov edx [esp+7Ch+var_48] +
mov [eax+4] ecx +
mov ecx [edx] +
mov [eax] ecx +
mov [edx] eax +
jnz loc_458D14  +
mov eax [esp+7Ch+var_28] +
mov [esp+7Ch+var_78] 10h +
mov [esp+7Ch+var_7C] eax +
call sub_412630  +
test eax eax +
mov esi eax +
jz loc_4586AB  +
mov edx [esp+7Ch+var_30] +
mov [eax+4] edx +
mov edx [esp+7Ch+var_44] +
mov [eax+8] edx +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_412D20  +
mov [esi+0Ch] eax +
mov eax [edi+0Ch] +
mov [esi] eax +
mov [edi+0Ch] esi +
jmp loc_4588B1  +
mov eax [esp+7Ch+var_68] +
sub eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_7C] offset aBA0xLxStabsEnt +
mov [esp+7Ch+var_70] eax +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_78] eax +
call off_47D664  +
mov [esp+7Ch+var_7C] 11h +
call sub_4105E0  +
jmp loc_4586AB  +
mov [esp+7Ch+var_58] 0 +
jmp loc_458816  +
mov dword ptr [eax+0Ch] 0C2h +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_7C] eax +
call free  +
cmp ebp [esp+7Ch+var_6C] +
jnb loc_4586DE  +
xor edx edx +
mov edi [esp+7Ch+var_6C] +
mov eax [esp+7Ch+var_4C] +
mov esi [esp+7Ch+var_60] +
jmp loc_458D6E  +
cmp ecx 82h +
jz loc_458D83  +
cmp ecx 0C2h +
jz loc_458D60  +
test edx edx +
jnz loc_458D60  +
add [esp+7Ch+var_34] 1 +
mov dword ptr [esi] 0FFFFFFFFh +
add eax 0Ch +
add esi 4 +
cmp edi eax +
jbe loc_4588BB  +
movzx ecx byte ptr [eax+4] +
cmp ecx 0A2h +
jnz loc_458D41  +
test edx edx +
jz loc_458DAC  +
sub edx 1 +
jmp loc_458D60  +
add edx 1 +
jmp loc_458D60  +
mov [esp+7Ch+var_50] 0 +
xor edx edx +
mov [esp+7Ch+var_30] 0 +
jmp loc_458BAB  +
mov [esp+7Ch+var_34] 0 +
jmp loc_4586E2  +
mov dword ptr [esi] 0FFFFFFFFh +
add [esp+7Ch+var_34] 1 +
jmp loc_4588BB  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_10] 0 +
mov ecx [edi+24h] +
test ecx ecx +
jz loc_458F60  +
mov eax ecx +
mov esi 0AAAAAAABh +
mul  esi +
mov esi edx +
shr esi 3 +
lea eax [esi+esi*2] +
shl eax 2 +
sub ecx eax +
mov esi ecx +
jnz loc_458F60  +
mov eax [edi+3Ch] +
test eax eax +
jz loc_458E0E  +
cmp eax offset off_47D510 +
jz loc_458F60  +
mov eax [esp+3Ch+arg_8] +
test eax eax +
jz loc_458F60  +
mov eax [edi+28h] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_28] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_40FBE0  +
test eax eax +
jz loc_458F50  +
mov ebx [esp+3Ch+var_10] +
mov edx [edi+28h] +
mov eax [esp+3Ch+arg_8] +
add edx ebx +
add eax 8 +
cmp ebx edx +
mov [esp+3Ch+var_20] eax +
jnb loc_45903E  +
xor ecx ecx +
mov esi eax +
mov [esp+3Ch+arg_4] edi +
mov ebp 0FFFFFFFFh +
mov edi ecx +
jmp loc_458E85  +
cmp ebp 0FFFFFFFFh +
jz loc_458F70  +
xor ebp ebp +
add ebx 0Ch +
add esi 4 +
cmp edx ebx +
jbe loc_458EB4  +
cmp dword ptr [esi] 0FFFFFFFFh +
jz loc_458E7B  +
movzx eax byte ptr [ebx+4] +
cmp eax 24h +
jz loc_458FB2  +
cmp ebp 1 +
jnz loc_458E70  +
add ebx 0Ch +
add edi 1 +
mov dword ptr [esi] 0FFFFFFFFh +
add esi 4 +
cmp edx ebx +
mov ebp 1 +
ja loc_458E85  +
mov ecx edi +
mov ebx [esp+3Ch+var_10] +
mov edi [esp+3Ch+arg_4] +
lea esi [ecx+ecx*2] +
shl esi 2 +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_24] ecx +
call free  +
mov ecx [esp+3Ch+var_24] +
sub [edi+24h] esi +
mov [esp+3Ch+var_10] 0 +
jnz loc_458EE8  +
or dword ptr [edi+14h] 208000h +
test ecx ecx +
jz loc_458F3D  +
mov eax [esp+3Ch+var_28] +
mov edx 0AAAAAAABh +
mul  edx +
mov eax [esp+3Ch+arg_8] +
mov edi [eax+4] +
shr edx 3 +
test edi edi +
jz loc_459045  +
xor ebx ebx +
xor eax eax +
mov ebp [esp+3Ch+var_20] +
test edx edx +
jz loc_458FF0  +
lea esi [esi+0] +
mov [edi+eax*4] ebx +
lea esi [ebx+0Ch] +
cmp dword ptr [ebp+eax*4+0] 0FFFFFFFFh +
cmovz ebx esi +
add eax 1 +
cmp eax edx +
jnz loc_458F20  +
test ebx ebx +
jz loc_458FF0  +
xor eax eax +
test ecx ecx +
setnz al  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_10] +
test eax eax +
jz loc_458F60  +
mov [esp+3Ch+var_3C] eax +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 28h +
jz loc_458F7E  +
cmp eax 26h +
jnz loc_458E7B  +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] eax +
lea eax [ebx+8] +
sub eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] eax +
call [esp+3Ch+arg_C]  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_458E7B  +
mov dword ptr [esi] 0FFFFFFFFh +
add edi 1 +
jmp loc_458E7B  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_24] edx +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jnz loc_459011  +
test ebp ebp +
jz loc_458FE4  +
add edi 1 +
mov ebp 0FFFFFFFFh +
mov dword ptr [esi] 0FFFFFFFFh +
jmp loc_458E7B  +
mov ebp 0FFFFFFFFh +
jmp loc_458E7B  +
mov [esp+3Ch+var_38] 284h +
mov [esp+3Ch+var_3C] offset a____Binutil_16 +
mov [esp+3Ch+var_28] ecx +
call sub_410530  +
mov ecx [esp+3Ch+var_28] +
jmp loc_458F3D  +
mov eax [esp+3Ch+arg_10] +
xor ebp ebp +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] eax +
lea eax [ebx+8] +
sub eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] eax +
call [esp+3Ch+arg_C]  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_458E7B  +
jmp loc_458E9C  +
xor ecx ecx +
jmp loc_458EC4  +
lea eax ds:0[edx*4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_28] edx +
mov [esp+3Ch+var_24] ecx +
mov [esp+3Ch+var_3C] eax +
call sub_40E140  +
mov edx [esp+3Ch+arg_8] +
test eax eax +
mov [edx+4] eax +
jz loc_458F50  +
mov edi eax +
mov ecx [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_28] +
jmp loc_458F09  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov ebp [esp+2Ch+arg_0] +
mov edi [eax] +
test edi edi +
jz loc_45924A  +
mov ebx [edi] +
test ebx ebx +
jz loc_45910C  +
mov [esp+2Ch+var_14] edi +
mov esi [esp+2Ch+arg_8] +
jmp loc_4590E7  +
add eax [esp+2Ch+arg_10] +
mov edx [ebp+4] +
mov edi eax +
mov eax [ebx+8] +
lea ecx [edi+8] +
mov edx [edx+30h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov edx [ebx+0Ch] +
mov [edi+4] dl +
mov ebx [ebx] +
test ebx ebx +
jz loc_459108  +
mov eax [ebx+4] +
cmp eax [esi+28h] +
jb loc_4590C0  +
mov [esp+2Ch+var_28] 2AAh +
mov [esp+2Ch+var_2C] offset a____Binutil_16 +
call sub_410530  +
mov eax [ebx+4] +
jmp loc_4590C0  +
mov edi [esp+2Ch+var_14] +
mov ecx [esp+2Ch+arg_8] +
add edi 8 +
mov esi [esp+2Ch+arg_10] +
mov eax [esp+2Ch+arg_10] +
add eax [ecx+28h] +
mov ebx esi +
cmp esi eax +
mov [esp+2Ch+var_14] eax +
jnb loc_459246  +
lea esi [esi+0] +
mov eax [edi] +
cmp eax 0FFFFFFFFh +
jz loc_4591D4  +
cmp esi ebx +
jz loc_459151  +
mov eax [ebx] +
mov [esi] eax +
mov eax [ebx+4] +
mov [esi+4] eax +
mov eax [ebx+8] +
mov [esi+8] eax +
mov eax [edi] +
mov edx [ebp+4] +
mov edx [edx+30h] +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call edx  +
cmp byte ptr [ebx+4] 0 +
jnz loc_4591D1  +
cmp ebx [esp+2Ch+arg_10] +
jz loc_459180  +
mov [esp+2Ch+var_28] 2C4h +
mov [esp+2Ch+var_2C] offset a____Binutil_16 +
call sub_410530  +
mov eax [ebp+4] +
mov edx [eax+30h] +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_10] edx +
mov eax [eax] +
mov [esp+2Ch+var_2C] eax +
call sub_4129B0  +
lea ecx [esi+8] +
mov edx [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov eax [ebp+4] +
mov ecx [eax+3Ch] +
lea eax [esi+6] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+3Ch] +
mov edx [eax+24h] +
mov eax 0AAAAAAABh +
mul  edx +
shr edx 3 +
sub edx 1 +
mov [esp+2Ch+var_2C] edx +
call ecx  +
add esi 0Ch +
add ebx 0Ch +
add edi 4 +
cmp [esp+2Ch+var_14] ebx +
ja loc_459130  +
sub esi [esp+2Ch+arg_10] +
mov eax [esp+2Ch+arg_8] +
cmp [eax+24h] esi +
jz loc_45920C  +
mov [esp+2Ch+var_28] 2D0h +
mov [esp+2Ch+var_2C] offset a____Binutil_16 +
call sub_410530  +
mov eax [esp+2Ch+arg_8] +
mov esi [eax+24h] +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+3Ch] +
mov [esp+2Ch+var_18] esi +
mov ecx [esp+2Ch+arg_8] +
mov ecx [ecx+38h] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_20] ecx +
mov ecx [esp+2Ch+arg_10] +
mov [esp+2Ch+var_24] ecx +
call sub_40F990  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi esi +
jmp loc_4591E8  +
mov eax [esp+2Ch+arg_8] +
mov edx [eax+24h] +
mov eax [eax+3Ch] +
mov [esp+2Ch+var_18] edx +
jmp loc_459217  +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_4] +
mov esi [esp+10h+arg_0] +
mov edx [ebx+20h] +
cmp dword ptr [edx+3Ch] offset off_47D510 +
jz loc_4592C2  +
mov eax [ebx] +
mov edi [edx+38h] +
mov [esp+10h+var_10] eax +
call sub_4129B0  +
mov edx [ebx+20h] +
mov ecx [edx+3Ch] +
add edi eax +
cmp edi [ecx+24h] +
ja loc_459303  +
mov [esp+10h+var_4] 0 +
mov eax [edx+38h] +
xor edx edx +
add eax [ecx+50h] +
adc edx [ecx+54h] +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_8] edx +
call sub_411E10  +
test eax eax +
jz loc_4592D0  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx] +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
call sub_4129C0  +
test eax eax +
jz loc_4592C0  +
mov eax [ebx] +
add ebx 4 +
mov [esp+10h+var_10] eax +
call sub_412850  +
mov [esp+10h+var_10] ebx +
call sub_412190  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_C] 2E2h +
mov [esp+10h+var_10] offset a____Binutil_16 +
call sub_410530  +
mov edx [ebx+20h] +
mov ecx [edx+3Ch] +
jmp loc_459299  +
***
push esi  +
push ebx  +
mov ebx [esp+arg_4] +
mov edx [esp+arg_0] +
mov ecx [esp+arg_8] +
test ebx ebx +
jz loc_459380  +
mov eax [edx+28h] +
cmp ecx eax +
jnb loc_459370  +
mov esi [ebx+4] +
test esi esi +
jz loc_459380  +
mov eax ecx +
mov edx 0AAAAAAABh +
mul  edx +
mov eax 0FFFFFFFFh +
shr edx 3 +
cmp dword ptr [ebx+edx*4+8] 0FFFFFFFFh +
jz loc_45936D  +
mov eax ecx +
sub eax [esi+edx*4] +
pop ebx  +
pop esi  +
retn   +
sub ecx eax +
mov eax [edx+24h] +
pop ebx  +
pop esi  +
add eax ecx +
retn   +
***
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
push esi  +
push ebx  +
sub esp 10Ch +
mov ebx [esp+10Ch+arg_0] +
mov esi [esp+10Ch+arg_4] +
mov eax [ebx+28h] +
shr eax 5 +
and eax 43h +
cmp eax 1 +
jz loc_4594D0  +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_108] esi +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_EC] eax +
lea eax [esp+10Ch+var_EC] +
mov [esp+10Ch+var_104] eax +
call sub_414B50  +
mov edx eax +
xor eax eax +
test edx edx +
cmovnz eax [esp+10Ch+var_EC] +
add esp 10Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [esi+14h] 4 +
jz loc_459496  +
lea ebp [esp+10Ch+var_8C] +
xor eax eax +
mov ecx 20h +
mov edi ebp +
stos   +
mov edi [ebx+9Ch] +
lea eax [ebx+9Ch] +
mov dword ptr [ebx+9Ch] 0 +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_5C] ebx +
mov [esp+10Ch+var_58] ebx +
mov [esp+10Ch+var_54] eax +
call sub_424750  +
mov [esp+10Ch+var_B4] offset loc_459390 +
mov [esp+10Ch+var_B0] offset loc_4593A0 +
mov [esp+10Ch+var_AC] offset loc_4593B0 +
mov [esp+10Ch+var_A8] offset loc_4593C0 +
mov [esp+10Ch+var_A4] offset loc_4593D0 +
mov [esp+10Ch+var_70] eax +
lea eax [esp+10Ch+var_C8] +
mov [esp+10Ch+var_74] eax +
xor eax eax +
mov [esp+10Ch+var_C4] offset loc_4593E0 +
mov [esp+10Ch+var_9C] offset dword_4593F0 +
mov [esp+eax+10Ch+var_E0] 0 +
add eax 4 +
cmp eax 18h +
jb loc_459567  +
mov edx [esp+10Ch+arg_8] +
mov eax [esi+24h] +
mov [esp+10Ch+var_DC] 1 +
mov [esp+10Ch+var_D0] esi +
test edx edx +
mov [esp+10Ch+var_D4] eax +
jz loc_459661  +
mov eax [ebx+6Ch] +
mov [esp+10Ch+var_E8] eax +
shl eax 3 +
mov [esp+10Ch+var_10C] eax +
call malloc  +
test eax eax +
mov [esp+10Ch+var_E4] eax +
jz loc_459718  +
mov [esp+10Ch+var_F0] 0 +
lea esi [esp+10Ch+var_E8] +
mov [esp+10Ch+var_104] esi +
mov [esp+10Ch+var_108] offset dword_459400 +
mov [esp+10Ch+var_10C] ebx +
call sub_40F8A0  +
mov eax [esp+10Ch+arg_C] +
test eax eax +
jz loc_4596C9  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_FC] 0 +
mov [esp+10Ch+var_108] ebp +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_100] eax +
lea eax [esp+10Ch+var_E0] +
mov [esp+10Ch+var_104] eax +
call sub_410D80  +
test eax eax +
mov [esp+10Ch+var_EC] eax +
jz loc_4596B0  +
mov [esp+10Ch+var_104] esi +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_108] offset dword_459440 +
call sub_40F8A0  +
mov eax [esp+10Ch+var_E4] +
mov [esp+10Ch+var_10C] eax +
call free  +
mov [esp+10Ch+var_10C] ebx +
call sub_423A30  +
mov eax [esp+10Ch+var_EC] +
mov [ebx+9Ch] edi +
add esp 10Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esi+28h] eax +
cmovnb eax [esi+28h] +
mov [esp+10Ch+var_10C] eax +
call sub_412BD0  +
test eax eax +
mov [esp+10Ch+arg_8] eax +
jz loc_459718  +
mov eax [ebx+6Ch] +
mov [esp+10Ch+var_E8] eax +
shl eax 3 +
mov [esp+10Ch+var_10C] eax +
call malloc  +
test eax eax +
mov [esp+10Ch+var_E4] eax +
mov eax [esp+10Ch+arg_8] +
jz loc_459710  +
mov [esp+10Ch+var_F0] eax +
jmp loc_4595BF  +
mov eax [esp+10Ch+var_F0] +
test eax eax +
jz loc_459624  +
mov [esp+10Ch+var_10C] eax +
call free  +
jmp loc_459624  +
mov [esp+10Ch+var_108] ebp +
mov [esp+10Ch+var_10C] ebx +
call loc_425770  +
mov eax [ebx+4] +
mov eax [eax+104h] +
mov [esp+10Ch+var_10C] ebx +
call eax  +
mov [esp+10Ch+var_10C] eax +
call sub_412BD0  +
mov [esp+10Ch+arg_C] eax +
mov eax [ebx+4] +
mov ecx [esp+10Ch+arg_C] +
mov eax [eax+108h] +
mov [esp+10Ch+var_108] ecx +
mov [esp+10Ch+var_10C] ebx +
call eax  +
jmp loc_4595E6  +
mov [esp+10Ch+var_10C] eax +
call free  +
mov [esp+10Ch+var_10C] ebx +
call sub_423A30  +
xor eax eax +
mov [ebx+9Ch] edi +
jmp loc_4594C0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 5 +
mov esi [eax] +
mov [esp+10h+var_10+1] eax +
cmp esi 3 +
setbe dl  +
test ecx ecx +
setnz al  +
xor ebx ebx +
and dl al +
mov byte ptr [esp+10h+var_10] dl +
jz loc_459798  +
mov edi 4 +
jmp loc_459777  +
mov eax edi +
sub eax esi +
cmp eax 3 +
mov esi eax +
setbe al  +
add ebx 1 +
test al al +
jz loc_459798  +
cmp ecx ebx +
jbe loc_459798  +
movzx edx byte ptr [ebp+ebx+0] +
cmp esi 2 +
sbb eax eax +
not eax  +
cmp dl al +
jz loc_4597A8  +
test dl dl +
jz loc_459760  +
movzx eax byte ptr [esp+10h+var_10] +
xor esi esi +
add ebx 1 +
test al al +
jnz loc_459773  +
mov eax [esp+10h+var_10+1] +
mov [eax] esi +
add esp 5 +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
cmp esi 3 +
setbe al  +
jmp loc_45976C  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [eax+1Ch] +
mov eax [ebx+34h] +
test eax eax +
jz loc_4598C1  +
mov esi [ebx+28h] +
test esi esi +
jz loc_459835  +
mov edi edx +
sub edi [ebp+10h] +
cmp edi esi +
jnb loc_459858  +
mov edx [ebx+30h] +
sub esi edx +
cmp esi edi +
cmova esi edi +
add eax edx +
mov edx [ebp+0Ch] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] eax +
sub edx edi +
mov [esp+28h+var_24] edx +
call memcpy  +
sub edi esi +
jnz loc_459896  +
mov eax [ebx+30h] +
mov edx [ebx+28h] +
add eax esi +
cmp eax edx +
mov [ebx+30h] eax +
jz loc_459884  +
mov ecx [ebx+2Ch] +
xor eax eax +
cmp edx ecx +
jbe loc_45982D  +
add esi ecx +
mov [ebx+2Ch] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+24h] +
mov edi edx +
mov si 1 +
sub edi [ebp+10h] +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+2Ch] 0 +
shl esi cl +
cmp edi esi +
mov [ebx+28h] esi +
jb loc_4597E7  +
mov edx [ebp+0Ch] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] eax +
sub edx esi +
mov [esp+28h+var_24] edx +
call memcpy  +
mov eax [ebx+28h] +
mov dword ptr [ebx+30h] 0 +
mov [ebx+2Ch] eax +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+2Ch] +
xor eax eax +
mov dword ptr [ebx+30h] 0 +
cmp edx ecx +
ja loc_459828  +
jmp loc_45982D  +
mov eax [ebp+0Ch] +
mov edx [ebx+34h] +
mov [esp+28h+var_20] edi +
sub eax edi +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call memcpy  +
mov eax [ebx+28h] +
mov [ebx+30h] edi +
mov [ebx+2Ch] eax +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+20h] +
mov al 1 +
mov edi [ebp+28h] +
mov [esp+28h+var_20] 1 +
mov ecx [ebx+24h] +
mov [esp+28h+var_1C] edx +
mov [esp+28h+var_28] edi +
shl eax cl +
mov [esp+28h+var_24] eax +
call esi  +
test eax eax +
mov [ebx+34h] eax +
jz loc_4598F3  +
mov edx [esp+28h+var_1C] +
jmp loc_4597D7  +
mov eax 1 +
jmp loc_45982D  +
***
mov edx [esp+arg_0] +
test edx edx +
jz loc_459992  +
mov eax [edx+1Ch] +
test eax eax +
jz loc_459992  +
mov ecx [eax+8] +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [edx+14h] 0 +
mov dword ptr [edx+8] 0 +
test ecx ecx +
mov dword ptr [edx+18h] 0 +
jz loc_45993C  +
and ecx 1 +
mov [edx+30h] ecx +
lea edx [eax+530h] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+14h] 8000h +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+38h] 0 +
mov dword ptr [eax+3Ch] 0 +
mov [eax+6Ch] edx +
mov [eax+50h] edx +
mov [eax+4Ch] edx +
mov dword ptr [eax+1BC0h] 1 +
mov dword ptr [eax+1BC4h] 0FFFFFFFFh +
xor eax eax +
retn   +
mov eax 0FFFFFFFEh +
retn   +
***
mov edx [esp+arg_0] +
test edx edx +
jz loc_4599D0  +
mov eax [edx+1Ch] +
test eax eax +
jz loc_4599D0  +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
jmp loc_459900  +
mov eax 0FFFFFFFEh +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
test edi edi +
jz loc_459A60  +
mov esi [edi+1Ch] +
test esi esi +
jz loc_459A60  +
test ebx ebx +
js loc_459A51  +
mov ebp ebx +
mov eax ebx +
sar ebp 4 +
and eax 0Fh +
add ebp 1 +
cmp ebx 2Fh +
cmovle ebx eax +
lea eax [ebx-8] +
cmp eax 7 +
ja loc_459A57  +
mov eax [esi+34h] +
test eax eax +
jz loc_459A3B  +
cmp ebx [esi+24h] +
jz loc_459A3B  +
mov ecx [edi+28h] +
mov edx [edi+24h] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] ecx +
call edx  +
mov dword ptr [esi+34h] 0 +
mov [esi+8] ebp +
mov [esi+24h] ebx +
mov [esp+1Ch+arg_0] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4599A0  +
neg ebx  +
xor ebp ebp +
jmp loc_459A11  +
test ebx ebx +
jz loc_459A19  +
nop   +
lea esi [esi+0] +
add esp 1Ch +
mov eax 0FFFFFFFEh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_8] +
mov ebx [esp+10h+arg_0] +
test eax eax +
jz loc_459B30  +
cmp byte ptr [eax] 31h +
jnz loc_459B30  +
cmp [esp+10h+arg_C] 38h +
jnz loc_459B30  +
test ebx ebx +
jz loc_459B77  +
mov eax [ebx+20h] +
mov dword ptr [ebx+18h] 0 +
test eax eax +
jz loc_459B40  +
mov ecx [ebx+24h] +
mov edx [ebx+28h] +
test ecx ecx +
jz loc_459B60  +
mov [esp+10h+var_8] 1BCCh +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] edx +
call eax  +
test eax eax +
mov esi eax +
jz loc_459B70  +
mov [ebx+1Ch] eax +
mov dword ptr [eax+34h] 0 +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_C] eax +
call sub_4599E0  +
mov edi eax +
xor eax eax +
test edi edi +
jnz loc_459B10  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call eax  +
mov eax edi +
mov dword ptr [ebx+1Ch] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
mov eax 0FFFFFFFAh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [ebx+24h] +
xor edx edx +
mov eax offset loc_45C100 +
mov dword ptr [ebx+20h] offset loc_45C100 +
mov dword ptr [ebx+28h] 0 +
test ecx ecx +
jnz loc_459AC2  +
mov dword ptr [ebx+24h] offset loc_45C120 +
jmp loc_459AC2  +
mov eax 0FFFFFFFCh +
jmp loc_459B03  +
mov eax 0FFFFFFFEh +
jmp loc_459B03  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] 0Fh +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_459A70  +
add esp 1Ch +
retn   +
***
push edi  +
push esi  +
mov eax [esp+0Ch] +
mov ecx [esp+10h] +
test eax eax +
jz loc_459C10  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_459C10  +
test ecx ecx +
js loc_459BF6  +
cmp ecx 10h +
jg loc_459C10  +
mov edi [eax+3Ch] +
lea esi [ecx+edi] +
cmp esi 20h +
ja loc_459C10  +
mov edx 1 +
shl edx cl +
mov ecx edi +
sub edx 1 +
and edx [esp+14h] +
mov [eax+3Ch] esi +
shl edx cl +
add [eax+38h] edx +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [eax+38h] 0 +
mov dword ptr [eax+3Ch] 0 +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
mov eax 0FFFFFFFEh +
jmp loc_459BF3  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_0] +
test eax eax +
jz loc_45B320  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+1Ch] +
test eax eax +
mov [esp+7Ch+var_58] eax +
jz loc_45B320  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+7Ch+var_48] eax +
jz loc_45B320  +
mov eax [esp+7Ch+arg_0] +
mov edi [eax] +
test edi edi +
jz loc_45AFB0  +
mov eax [eax+4] +
mov [esp+7Ch+var_50] eax +
mov eax [esp+7Ch+var_58] +
mov eax [eax] +
cmp eax 0Bh +
jz loc_459E20  +
mov ebx [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_58] +
mov [esp+7Ch+var_44] 0 +
mov ebx [ebx+10h] +
mov esi [edx+3Ch] +
mov ebp [edx+38h] +
mov ecx ebx +
mov [esp+7Ch+var_4C] ebx +
mov ebx [esp+7Ch+var_50] +
mov [esp+7Ch+var_54] ecx +
lea ecx [edx+70h] +
add edx 530h +
mov [esp+7Ch+var_30] ecx +
mov ecx esi +
mov esi ebp +
mov [esp+7Ch+var_2C] edx +
mov ebp edi +
mov edi ebx +
mov ebx ecx +
cmp eax 1Eh +
ja loc_45B320  +
jmp ds:off_49B8D0[eax*4]  +
cmp ebx 1Fh +
ja loc_459D10  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
nop   +
jmp loc_459CFA  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_459CF2  +
mov edx esi +
mov eax esi +
mov ebx [esp+7Ch+var_58] +
shr eax 18h +
shl edx 18h +
add edx eax +
mov eax esi +
shr eax 8 +
and eax 0FF00h +
add edx eax +
mov eax esi +
mov esi [esp+7Ch+arg_0] +
and eax 0FF00h +
shl eax 8 +
add eax edx +
mov [ebx+18h] eax +
mov [esi+30h] eax +
xor esi esi +
mov dword ptr [ebx] 0Ah +
xor ebx ebx +
mov eax [esp+7Ch+var_58] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_45B778  +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_45C1D0  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov dword ptr [edx] 0Bh +
mov eax [esp+7Ch+arg_4] +
sub eax 5 +
cmp eax 1 +
jbe loc_45A0C0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+4] +
test eax eax +
jnz loc_459E34  +
cmp ebx 2 +
ja loc_459DD3  +
test edi edi +
jz loc_45A0C0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
sub edi 1 +
add ebx 8 +
shl eax cl +
add esi eax +
mov ecx [esp+7Ch+var_58] +
mov eax esi +
mov edx esi +
and eax 1 +
shr edx 1 +
mov [ecx+4] eax +
mov eax edx +
and eax 3 +
cmp eax 2 +
jz loc_45B1D7  +
cmp eax 3 +
jz loc_45B45E  +
cmp eax 1 +
jz loc_45B420  +
mov dword ptr [ecx] 0Dh +
mov eax 0Dh +
mov esi edx +
sub ebx 3 +
shr esi 2 +
jmp loc_459CCE  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Ch +
mov eax 0Ch +
jmp loc_459C89  +
mov eax [esp+7Ch+var_58] +
mov ecx ebx +
and ebx 0FFFFFFF8h +
and ecx 7 +
shr esi cl +
mov dword ptr [eax] 1Ah +
mov eax 1Ah +
jmp loc_459CD7  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+48h] +
test edx edx +
jz loc_459EB6  +
cmp ebx edx +
jnb loc_459E91  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
nop   +
lea esi [esi+0] +
jmp loc_459E7A  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx edx +
jb loc_459E72  +
mov ebx ecx +
mov ecx edx +
mov eax 1 +
shl eax cl +
mov ecx [esp+7Ch+var_58] +
sub ebx edx +
sub eax 1 +
and eax esi +
add [ecx+44h] eax +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add [ecx+1BC4h] edx +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 18h +
mov edx [esp+7Ch+var_4C] +
test edx edx +
jz loc_45A0C0  +
mov ecx [esp+7Ch+var_58] +
mov eax [esp+7Ch+var_54] +
mov ecx [ecx+44h] +
sub eax edx +
cmp eax ecx +
jnb loc_45B030  +
sub ecx eax +
mov eax [esp+7Ch+var_58] +
cmp ecx [eax+2Ch] +
ja loc_45B134  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+30h] +
cmp ecx eax +
jbe loc_45B352  +
sub ecx eax +
mov eax [esp+7Ch+var_58] +
mov edx [eax+28h] +
mov eax [eax+34h] +
mov [esp+7Ch+var_40] edx +
sub [esp+7Ch+var_40] ecx +
add [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov edx [eax+40h] +
cmp ecx edx +
cmova ecx edx +
jmp loc_45B043  +
mov eax [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov dword ptr [eax] 13h +
jz loc_45A0C0  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 14h +
cmp edi 5 +
ja loc_45B227  +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+4Ch] +
mov dword ptr [eax+1BC4h] 0 +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [eax+54h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
mov [esp+7Ch+var_34] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_28] ax +
movzx eax dl +
cmp ebx eax +
mov [esp+7Ch+var_38] eax +
jnb loc_459FFB  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
mov ebx esi +
mov esi edi +
jmp loc_459FB8  +
test esi esi +
jz loc_45B1F2  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub esi 1 +
mov edi [esp+7Ch+var_3C] +
shl eax cl +
add ecx 8 +
add ebx eax +
mov eax [esp+7Ch+var_34] +
and eax ebx +
lea eax [edi+eax*4] +
movzx edx byte ptr [eax] +
movzx edi word ptr [eax+2] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax dl +
cmp eax ecx +
mov [esp+7Ch+var_38] eax +
ja loc_459FB0  +
mov word ptr [esp+7Ch+var_28] di +
mov edi esi +
mov esi ebx +
mov ebx ecx +
cmp byte ptr [esp+7Ch+var_40] 0 +
jz loc_45B2C0  +
test byte ptr [esp+7Ch+var_40] 0F0h +
jnz loc_45B2C0  +
movzx ecx word ptr [esp+7Ch+var_28] +
mov [esp+7Ch+var_34] eax +
mov eax 1 +
mov [esp+7Ch+var_24] ecx +
movzx ecx byte ptr [esp+7Ch+var_40] +
add cl byte ptr [esp+7Ch+var_34] +
shl eax cl +
mov ecx edx +
sub eax 1 +
mov [esp+7Ch+var_20] eax +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_24] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_34] +
mov word ptr [esp+7Ch+var_28] cx +
add edx eax +
cmp ebx edx +
jb loc_45A0B8  +
jmp loc_45B62C  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
add ebx 8 +
sub edi 1 +
shl eax cl +
movzx ecx byte ptr [esp+7Ch+var_34] +
add esi eax +
mov eax [esp+7Ch+var_20] +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_24] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_34] +
add edx eax +
cmp edx ebx +
jbe loc_45B627  +
test edi edi +
jnz loc_45A070  +
lea esi [esi+0] +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
jmp loc_45A2A0  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+48h] +
test edx edx +
jnz loc_45B0A6  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
mov edx [esp+7Ch+var_58] +
mov [edx+1BC8h] eax +
mov dword ptr [edx] 16h +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+50h] +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [eax+58h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
mov [esp+7Ch+var_34] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_28] ax +
movzx eax dl +
cmp ebx eax +
mov [esp+7Ch+var_38] eax +
jnb loc_45A18F  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
mov ebx edi +
mov edi ebp +
jmp loc_45A14C  +
test ebx ebx +
jz loc_45AF24  +
add edi 1 +
movzx eax byte ptr [edi-1] +
sub ebx 1 +
mov edx [esp+7Ch+var_3C] +
shl eax cl +
add ecx 8 +
add esi eax +
mov eax [esp+7Ch+var_34] +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
movzx ebp word ptr [eax+2] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax dl +
cmp eax ecx +
mov [esp+7Ch+var_38] eax +
ja loc_45A144  +
mov word ptr [esp+7Ch+var_28] bp +
mov ebp edi +
mov edi ebx +
mov ebx ecx +
test byte ptr [esp+7Ch+var_40] 0F0h +
jnz loc_45B164  +
movzx ecx word ptr [esp+7Ch+var_28] +
mov [esp+7Ch+var_20] eax +
mov eax 1 +
mov [esp+7Ch+var_34] ecx +
movzx ecx byte ptr [esp+7Ch+var_40] +
add cl byte ptr [esp+7Ch+var_20] +
shl eax cl +
mov ecx edx +
sub eax 1 +
mov [esp+7Ch+var_24] eax +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_34] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_20] +
mov word ptr [esp+7Ch+var_28] cx +
add edx eax +
cmp ebx edx +
jnb loc_45A252  +
test edi edi +
jz loc_45A0C0  +
mov eax esi +
mov edx [esp+7Ch+var_20] +
mov esi edi +
mov edi eax +
jmp loc_45A209  +
test esi esi +
jz loc_45B3ED  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
add ebx 8 +
sub esi 1 +
shl eax cl +
mov ecx edx +
add edi eax +
mov eax [esp+7Ch+var_24] +
and eax edi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_34] +
lea eax [ecx+eax*4] +
movzx ecx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] cl +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov word ptr [esp+7Ch+var_28] cx +
lea ecx [eax+edx] +
cmp ecx ebx +
ja loc_45A201  +
mov edx edi +
mov edi esi +
mov esi edx +
mov edx [esp+7Ch+var_20] +
sub ebx [esp+7Ch+var_38] +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add edx [ecx+1BC4h] +
jmp loc_45B16E  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Eh +
mov eax 0FFFFFFFCh +
lea esi [esi+0] +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov ebx edi +
mov [esp+7Ch+var_44] 1 +
mov edi ebp +
mov ebp esi +
mov esi eax +
lea esi [esi+0] +
mov eax [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_48] +
mov ecx eax +
mov [eax+0Ch] edx +
mov eax [esp+7Ch+var_58] +
mov [ecx+4] ebx +
mov edx [esp+7Ch+var_4C] +
mov [ecx] edi +
mov ebx [eax+28h] +
mov [ecx+10h] edx +
mov [eax+38h] ebp +
mov [eax+3Ch] esi +
test ebx ebx +
jnz loc_45A2F0  +
mov ebx [esp+7Ch+var_54] +
cmp edx ebx +
jz loc_45A308  +
mov eax [eax] +
cmp eax 1Ch +
ja loc_45A308  +
cmp eax 19h +
jbe loc_45A2F0  +
cmp [esp+7Ch+arg_4] 4 +
jz loc_45A308  +
nop   +
lea esi [esi+0] +
mov edx [esp+7Ch+var_54] +
mov eax [esp+7Ch+arg_0] +
call sub_4597C0  +
test eax eax +
jnz loc_45A26D  +
mov eax [esp+7Ch+arg_0] +
mov ebx [esp+7Ch+var_50] +
mov esi [esp+7Ch+var_54] +
sub esi [eax+10h] +
sub ebx [eax+4] +
add [eax+14h] esi +
add [eax+8] ebx +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+8] +
add [eax+1Ch] esi +
test ecx ecx +
jz loc_45A370  +
test esi esi +
jz loc_45A370  +
mov edx [eax+10h] +
test edx edx +
jz loc_45AFF0  +
mov edx [eax+18h] +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] esi +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_7C] edx +
sub eax esi +
mov [esp+7Ch+var_78] eax +
call sub_45C700  +
mov edi [esp+7Ch+var_58] +
mov [edi+18h] eax +
mov edi [esp+7Ch+arg_0] +
mov [edi+30h] eax +
mov edi [esp+7Ch+var_58] +
cmp dword ptr [edi+4] 1 +
mov edx [edi] +
sbb eax eax +
not eax  +
and eax 40h +
add eax [edi+3Ch] +
cmp edx 0Bh +
jz loc_45AF30  +
cmp edx 0Eh +
jnz loc_45AF40  +
mov edx 100h +
mov edi [esp+7Ch+arg_0] +
add eax edx +
or esi ebx +
mov [edi+2Ch] eax +
jz loc_45A3BD  +
cmp [esp+7Ch+arg_4] 4 +
mov eax [esp+7Ch+var_44] +
jnz loc_45A280  +
mov ebx [esp+7Ch+var_44] +
mov eax 0FFFFFFFBh +
test ebx ebx +
cmovnz eax ebx +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 1Fh +
ja loc_45A402  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
jmp loc_45A3EC  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_45A3E4  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_45A410  +
mov [eax+4] esi +
mov eax [esp+7Ch+var_58] +
test byte ptr [eax+11h] 2 +
jnz loc_45B4A7  +
mov eax [esp+7Ch+var_58] +
xor esi esi +
xor ebx ebx +
mov dword ptr [eax] 3 +
jmp loc_45A49A  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 0Fh +
test eax eax +
jz loc_45B018  +
mov edx [esp+7Ch+var_4C] +
cmp edi eax +
cmovbe eax edi +
cmp eax edx +
cmova eax edx +
test eax eax +
jz loc_45A0C0  +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_48] +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov edx [esp+7Ch+var_40] +
mov eax [esp+7Ch+var_58] +
sub [esp+7Ch+var_4C] edx +
add [esp+7Ch+var_48] edx +
sub edi edx +
add ebp edx +
sub [eax+40h] edx +
mov eax [eax] +
jmp loc_459CCE  +
cmp ebx 0Fh +
ja loc_45A4C4  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
jmp loc_45A4AE  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_45A4A6  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_45A4DF  +
mov ebx esi +
movzx edx bl +
mov [eax+8] edx +
mov edx esi +
shr edx 8 +
mov [eax+0Ch] edx +
mov eax [esp+7Ch+var_58] +
mov edx [eax+10h] +
test dh 2 +
mov eax edx +
jnz loc_45B3B2  +
mov ebx [esp+7Ch+var_58] +
xor esi esi +
mov dword ptr [ebx] 4 +
xor ebx ebx +
test dh 4 +
jnz loc_45AEAA  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_45B1EB  +
mov dword ptr [edx+10h] 0 +
xor edx edx +
mov ecx [esp+7Ch+var_58] +
mov dword ptr [ecx] 5 +
jmp loc_45ABFF  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+68h] +
mov [esp+7Ch+var_38] eax +
mov ecx [esp+7Ch+var_58] +
mov eax [ecx+60h] +
mov [esp+7Ch+var_28] eax +
add eax [ecx+64h] +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+var_34] +
cmp [esp+7Ch+var_38] eax +
mov eax [esp+7Ch+var_58] +
jnb loc_45B743  +
mov ecx [eax+54h] +
mov edx [eax+4Ch] +
mov eax 1 +
shl eax cl +
lea eax [eax-1] +
mov [esp+7Ch+var_3C] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx ecx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_40] ax +
movzx eax cl +
cmp ebx eax +
jnb loc_45A5DA  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
mov ebx edx +
jmp loc_45A5A8  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
mov eax [esp+7Ch+var_3C] +
and eax esi +
lea eax [ebx+eax*4] +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_40] ax +
movzx eax dl +
cmp eax ecx +
ja loc_45A5A0  +
mov ebx ecx +
mov ecx edx +
cmp word ptr [esp+7Ch+var_40] 0Fh +
jbe loc_45B1B0  +
cmp word ptr [esp+7Ch+var_40] 10h +
jz loc_45B5B3  +
cmp word ptr [esp+7Ch+var_40] 11h +
jz loc_45B63C  +
lea edx [eax+7] +
cmp ebx edx +
jnb loc_45A636  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_45A61D  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_45A615  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
shr esi cl +
sub ebx 7 +
mov edx esi +
and esi 7Fh +
add esi 0Bh +
xor ecx ecx +
mov [esp+7Ch+var_40] esi +
mov esi edx +
shr esi 7 +
mov eax [esp+7Ch+var_40] +
add eax [esp+7Ch+var_38] +
cmp eax [esp+7Ch+var_34] +
mov edx eax +
mov [esp+7Ch+var_40] eax +
ja loc_45B999  +
mov word ptr [esp+7Ch+var_3C] cx +
mov eax [esp+7Ch+var_38] +
mov ecx [esp+7Ch+var_58] +
lea eax [ecx+eax*2+70h] +
mov ecx [esp+7Ch+var_30] +
lea edx [ecx+edx*2] +
movzx ecx word ptr [esp+7Ch+var_3C] +
mov [eax] cx +
add eax 2 +
cmp eax edx +
jnz loc_45A687  +
mov eax [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_58] +
mov [esp+7Ch+var_38] eax +
mov [edx+68h] eax +
jmp loc_45A54D  +
cmp ebx 0Fh +
ja loc_45A6D6  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
jmp loc_45A6BE  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_45A6B6  +
mov ebx ecx +
mov edx [esp+7Ch+var_58] +
mov eax esi +
cmp al 8 +
mov [edx+10h] esi +
jz loc_45B51C  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownCompres +
mov eax 1Dh +
mov dword ptr [edx] 1Dh +
jmp loc_459CD7  +
cmp ebx 0Dh +
ja loc_45A736  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
jmp loc_45A71E  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Dh +
jbe loc_45A716  +
mov ebx ecx +
mov ecx [esp+7Ch+var_58] +
mov edx esi +
mov eax esi +
shr edx 5 +
and eax 1Fh +
and edx 1Fh +
add eax 101h +
add edx 1 +
sub ebx 0Eh +
mov [ecx+64h] edx +
mov [ecx+60h] eax +
mov ecx esi +
shr ecx 0Ah +
and ecx 0Fh +
add ecx 4 +
mov [esp+7Ch+var_40] edx +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [esp+7Ch+var_58] +
shr esi 0Eh +
cmp eax 11Eh +
mov [ecx+5Ch] edx +
ja loc_45B330  +
cmp [esp+7Ch+var_40] 1Eh +
ja loc_45B330  +
mov eax [esp+7Ch+var_58] +
xor edx edx +
mov ecx ebx +
mov [esp+7Ch+var_40] edx +
mov dword ptr [eax+68h] 0 +
mov dword ptr [eax] 11h +
jmp loc_45A7C2  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+5Ch] +
mov ecx edx +
mov [esp+7Ch+var_3C] edx +
mov edx [eax+68h] +
cmp ecx edx +
jbe loc_45A818  +
mov ecx ebx +
mov [esp+7Ch+var_40] edx +
cmp ecx 2 +
ja loc_45A7E0  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
add [esp+7Ch+var_40] 1 +
sub ecx 3 +
mov ebx [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_58] +
movzx eax ds:word_49C1DE[ebx+ebx] +
mov [edx+68h] ebx +
mov ebx esi +
and ebx 7 +
shr esi 3 +
mov [edx+eax*2+70h] bx +
mov eax [esp+7Ch+var_40] +
cmp [esp+7Ch+var_3C] eax +
ja loc_45A7C2  +
mov edx [esp+7Ch+var_40] +
mov ebx ecx +
cmp edx 12h +
mov ecx [esp+7Ch+var_58] +
lea eax dword_49C1E0[edx+edx] +
ja loc_45A847  +
movzx edx word ptr [eax] +
add eax 2 +
cmp eax offset unk_49C206 +
mov word ptr [ecx+edx*2+70h] 0 +
jnz loc_45A828  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+68h] 13h +
mov eax [esp+7Ch+var_58] +
mov edx [esp+7Ch+var_2C] +
mov dword ptr [eax+54h] 7 +
mov [eax+6Ch] edx +
mov [eax+4Ch] edx +
mov edx eax +
add eax 2F0h +
mov [esp+7Ch+var_68] eax +
mov eax edx +
add eax 54h +
mov [esp+7Ch+var_6C] eax +
mov eax edx +
add eax 6Ch +
mov [esp+7Ch+var_70] eax +
mov eax [esp+7Ch+var_30] +
mov [esp+7Ch+var_74] 13h +
mov [esp+7Ch+var_7C] 0 +
mov [esp+7Ch+var_78] eax +
call sub_45C9F0  +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_45B725  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidCodeLen +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_459CD7  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
jmp loc_45A441  +
mov eax ebx +
mov ebx edi +
mov [esp+7Ch+var_44] 0FFFFFFFDh +
mov edi ebp +
mov ebp esi +
mov esi eax +
jmp loc_45A2A0  +
mov ecx [esp+7Ch+var_4C] +
test ecx ecx +
jz loc_45A0C0  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_48] +
sub [esp+7Ch+var_4C] 1 +
mov eax [edx+40h] +
mov [ecx] al +
lea eax [ecx+1] +
mov [esp+7Ch+var_48] eax +
mov eax 14h +
mov dword ptr [edx] 14h +
jmp loc_459CD7  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+8] +
test eax eax +
jz loc_45B111  +
cmp ebx 1Fh +
ja loc_45A962  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
nop   +
jmp loc_45A94A  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_45A942  +
mov ebx ecx +
mov eax [esp+7Ch+var_54] +
mov ecx [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_58] +
sub eax [esp+7Ch+var_4C] +
add [ecx+14h] eax +
add [edx+1Ch] eax +
test eax eax +
jz loc_45A9B6  +
mov ecx edx +
mov edx [edx+10h] +
test edx edx +
jz loc_45B703  +
mov edx [ecx+18h] +
mov ecx [esp+7Ch+var_48] +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_7C] edx +
sub ecx eax +
mov [esp+7Ch+var_78] ecx +
call sub_45C700  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov ecx [esp+7Ch+var_58] +
mov eax esi +
mov edx [ecx+10h] +
test edx edx +
jnz loc_45A9E5  +
mov edx esi +
shr eax 18h +
shl edx 18h +
add edx eax +
mov eax esi +
shr eax 8 +
and eax 0FF00h +
add edx eax +
mov eax esi +
and eax 0FF00h +
shl eax 8 +
add eax edx +
mov edx [esp+7Ch+var_58] +
cmp eax [edx+18h] +
jz loc_45B102  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aIncorrectDataC +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_54] eax +
mov eax 1Dh +
jmp loc_459CD7  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+8] +
test eax eax +
jz loc_45B6E2  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
test eax eax +
jz loc_45B6E2  +
cmp ebx 1Fh +
ja loc_45AA72  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
lea esi [esi+0] +
jmp loc_45AA5A  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_45AA52  +
mov ebx ecx +
mov eax [esp+7Ch+var_58] +
cmp [eax+1Ch] esi +
jz loc_45B7E6  +
mov ecx [esp+7Ch+arg_0] +
mov dword ptr [ecx+18h] offset aIncorrectLengt +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_459CD7  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+8] +
test edx edx +
jz loc_45B120  +
cmp ebx 0Fh +
ja loc_45AAE2  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
nop   +
jmp loc_45AACA  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_45AAC2  +
mov ebx ecx +
test dl 2 +
jz loc_45AAF3  +
cmp esi 8B1Fh +
jz loc_45B7F3  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+10h] 0 +
mov eax [eax+20h] +
test eax eax +
jz loc_45AB0C  +
mov dword ptr [eax+30h] 0FFFFFFFFh +
and edx 1 +
jz loc_45B3FE  +
mov ecx esi +
mov eax esi +
shl ecx 8 +
mov edx 8421085h +
shr eax 8 +
movzx ecx cx +
add ecx eax +
mov eax ecx +
mul  edx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax 4 +
mov edx eax +
shl edx 5 +
sub edx eax +
cmp ecx edx +
jnz loc_45B3FE  +
mov eax esi +
and eax 0Fh +
cmp eax 8 +
jz loc_45B84F  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownCompres +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_459CD7  +
mov ecx ebx +
and ebx 0FFFFFFF8h +
and ecx 7 +
shr esi cl +
cmp ebx 1Fh +
ja loc_45ABB2  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
jmp loc_45AB9A  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_45AB92  +
mov ebx ecx +
mov edx esi +
movzx eax si +
shr edx 10h +
xor edx 0FFFFh +
cmp eax edx +
jz loc_45B54A  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidStoredB +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_459CD7  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx eax +
and edx 400h +
test edx edx +
jz loc_45ACA5  +
mov edx [esp+7Ch+var_58] +
mov ecx [edx+40h] +
cmp edi ecx +
mov [esp+7Ch+var_40] ecx +
cmovbe ecx edi +
mov edx ecx +
test edx edx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [esp+7Ch+var_40] +
jz loc_45AC96  +
mov ecx [esp+7Ch+var_58] +
mov ecx [ecx+20h] +
test ecx ecx +
jz loc_45AC79  +
mov edx [ecx+10h] +
test edx edx +
mov [esp+7Ch+var_38] edx +
jz loc_45AC79  +
mov edx [ecx+18h] +
mov eax [ecx+14h] +
mov ecx [esp+7Ch+var_3C] +
sub eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_78] ebp +
add ecx eax +
mov [esp+7Ch+var_40] ecx +
mov ecx edx +
sub ecx eax +
cmp [esp+7Ch+var_40] edx +
mov edx ecx +
cmovbe edx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_38] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov ecx [esp+7Ch+var_58] +
mov eax [ecx+10h] +
test ah 2 +
jnz loc_45B480  +
mov edx [esp+7Ch+var_58] +
mov eax [esp+7Ch+var_3C] +
mov ecx [edx+40h] +
sub edi eax +
add ebp eax +
sub ecx eax +
mov [edx+40h] ecx +
test ecx ecx +
jnz loc_45A0C0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov ecx [esp+7Ch+var_58] +
test ah 8 +
mov dword ptr [ecx+40h] 0 +
mov dword ptr [ecx] 6 +
jnz loc_45ACE2  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_45AD73  +
mov dword ptr [edx+1Ch] 0 +
jmp loc_45AD73  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
test ah 8 +
jz loc_45ACBB  +
test edi edi +
jz loc_45A0C0  +
mov [esp+7Ch+var_38] esi +
xor edx edx +
mov esi [esp+7Ch+var_58] +
mov [esp+7Ch+var_40] ebp +
mov [esp+7Ch+var_3C] edi +
mov [esp+7Ch+var_34] ebx +
jmp loc_45AD08  +
cmp edx [esp+7Ch+var_3C] +
jnb loc_45AD3A  +
mov eax [esp+7Ch+var_40] +
add edx 1 +
movzx ecx byte ptr [eax+edx-1] +
mov eax [esi+20h] +
movzx ebp cl +
test eax eax +
jz loc_45AD36  +
mov edi [eax+1Ch] +
test edi edi +
jz loc_45AD36  +
mov ebx [esi+40h] +
cmp ebx [eax+20h] +
jnb loc_45AD36  +
lea eax [ebx+1] +
mov [esi+40h] eax +
mov [edi+ebx] cl +
test ebp ebp +
jnz loc_45AD02  +
mov eax [esp+7Ch+var_58] +
mov edi [esp+7Ch+var_3C] +
mov esi [esp+7Ch+var_38] +
mov [esp+7Ch+var_3C] ebp +
mov ebx [esp+7Ch+var_34] +
test byte ptr [eax+11h] 2 +
mov ebp [esp+7Ch+var_40] +
jnz loc_45B2F5  +
mov eax [esp+7Ch+var_3C] +
sub edi edx +
add ebp edx +
test eax eax +
jnz loc_45A0C0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx+40h] 0 +
mov dword ptr [edx] 7 +
test ah 10h +
jz loc_45AFD0  +
test edi edi +
jz loc_45A0C0  +
mov [esp+7Ch+var_38] esi +
xor edx edx +
mov esi [esp+7Ch+var_58] +
mov [esp+7Ch+var_40] ebp +
mov [esp+7Ch+var_3C] edi +
mov [esp+7Ch+var_34] ebx +
jmp loc_45ADB6  +
cmp edx [esp+7Ch+var_3C] +
jnb loc_45ADE8  +
mov eax [esp+7Ch+var_40] +
add edx 1 +
movzx ecx byte ptr [eax+edx-1] +
mov eax [esi+20h] +
movzx ebp cl +
test eax eax +
jz loc_45ADE4  +
mov edi [eax+24h] +
test edi edi +
jz loc_45ADE4  +
mov ebx [esi+40h] +
cmp ebx [eax+28h] +
jnb loc_45ADE4  +
lea eax [ebx+1] +
mov [esi+40h] eax +
mov [edi+ebx] cl +
test ebp ebp +
jnz loc_45ADB0  +
mov eax [esp+7Ch+var_58] +
mov edi [esp+7Ch+var_3C] +
mov esi [esp+7Ch+var_38] +
mov [esp+7Ch+var_3C] ebp +
mov ebx [esp+7Ch+var_34] +
test byte ptr [eax+11h] 2 +
mov ebp [esp+7Ch+var_40] +
jnz loc_45B200  +
mov ecx [esp+7Ch+var_3C] +
sub edi edx +
add ebp edx +
test ecx ecx +
jnz loc_45A0C0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 8 +
test ah 2 +
jz loc_45AF54  +
cmp ebx 0Fh +
ja loc_45AE65  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
jmp loc_45AE4D  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx 0Fh +
jbe loc_45AE45  +
mov ebx ecx +
mov ecx [esp+7Ch+var_58] +
movzx edx word ptr [ecx+18h] +
cmp edx esi +
jz loc_45AF50  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aHeaderCrcMisma +
mov eax 1Dh +
mov dword ptr [ecx] 1Dh +
jmp loc_459CD7  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+10h] +
test dh 4 +
mov eax edx +
jz loc_45A508  +
cmp ebx 0Fh +
ja loc_45AED0  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
jmp loc_45AEBA  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_45AEB6  +
mov eax [esp+7Ch+var_58] +
mov [eax+40h] esi +
mov eax [eax+20h] +
test eax eax +
jz loc_45AEE1  +
mov [eax+14h] esi +
test dh 2 +
jnz loc_45B56E  +
mov eax edx +
xor ebx ebx +
and edx 400h +
xor esi esi +
jmp loc_45A520  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
jmp loc_45AD84  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
jmp loc_45AE2B  +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi ecx +
jmp loc_45A2A0  +
sub eax 0FFFFFF80h +
xor edx edx +
jmp loc_45A39B  +
cmp edx 13h +
jz loc_45A396  +
xor edx edx +
jmp loc_45A39B  +
xor ebx ebx +
xor esi esi +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_45AF6F  +
sar eax 9 +
and eax 1 +
mov [edx+2Ch] eax +
mov dword ptr [edx+30h] 1 +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_45C700  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov eax 0Bh +
mov dword ptr [edx] 0Bh +
jmp loc_459CD7  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+4] +
test eax eax +
jnz loc_45B320  +
mov [esp+7Ch+var_50] 0 +
jmp loc_459C7A  +
mov ecx [esp+7Ch+var_58] +
mov edx [ecx+20h] +
test edx edx +
jz loc_45AE21  +
mov dword ptr [edx+24h] 0 +
jmp loc_45AE21  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+18h] +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] esi +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_7C] edx +
sub eax esi +
mov [esp+7Ch+var_78] eax +
call sub_45C1D0  +
jmp loc_45A35F  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Bh +
mov eax 0Bh +
jmp loc_459CD7  +
mov eax [esp+7Ch+var_48] +
sub eax ecx +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+40h] +
mov edx ecx +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_3C] ebx +
cmp ecx eax +
cmova ecx eax +
mov eax [esp+7Ch+var_58] +
sub edx ecx +
sub [esp+7Ch+var_4C] ecx +
mov [eax+40h] edx +
mov edx [esp+7Ch+var_48] +
mov eax [esp+7Ch+var_40] +
add ecx edx +
add eax 1 +
movzx ebx byte ptr [eax-1] +
add edx 1 +
cmp edx ecx +
mov [edx-1] bl +
jnz loc_45B067  +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_48] edx +
mov ebx [esp+7Ch+var_3C] +
mov edx [eax+40h] +
test edx edx +
jz loc_45B092  +
mov eax [eax] +
jmp loc_459CCE  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 14h +
mov eax 14h +
jmp loc_459CD7  +
cmp ebx edx +
jnb loc_45B0D5  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
jmp loc_45B0BE  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx edx +
jb loc_45B0B6  +
mov ebx ecx +
mov ecx edx +
mov eax 1 +
shl eax cl +
mov ecx [esp+7Ch+var_58] +
sub ebx edx +
sub eax 1 +
and eax esi +
add eax [ecx+40h] +
mov [ecx+40h] eax +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add [ecx+1BC4h] edx +
jmp loc_45A0E6  +
mov esi [esp+7Ch+var_4C] +
xor ebx ebx +
mov eax [edx+8] +
mov [esp+7Ch+var_54] esi +
xor esi esi +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 1Bh +
jmp loc_45AA27  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Ch +
mov eax 0Ch +
jmp loc_459CD7  +
mov eax [eax+1BC0h] +
test eax eax +
jz loc_459EF0  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDistanc +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_459CD7  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+1BC4h] +
mov ecx eax +
sub ebx eax +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add eax edx +
test byte ptr [esp+7Ch+var_40] 40h +
mov [ecx+1BC4h] eax +
jz loc_45B368  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDista_0 +
mov eax 1Dh +
mov dword ptr [ecx] 1Dh +
jmp loc_459CD7  +
mov edx [esp+7Ch+var_38] +
shr esi cl +
sub ebx eax +
mov ecx [esp+7Ch+var_58] +
mov eax edx +
add eax 1 +
mov [ecx+68h] eax +
mov [esp+7Ch+var_38] eax +
movzx eax word ptr [esp+7Ch+var_40] +
mov [ecx+edx*2+70h] ax +
jmp loc_45A54D  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 10h +
mov eax 10h +
jmp loc_459E0E  +
xor edx edx +
jmp loc_45A520  +
mov edi ebp +
mov ebp ebx +
mov ebx esi +
mov esi ecx +
jmp loc_45A2A0  +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_40] edx +
mov [esp+7Ch+var_7C] eax +
call sub_45C700  +
mov edx [esp+7Ch+var_58] +
mov [edx+18h] eax +
mov edx [esp+7Ch+var_40] +
jmp loc_45AE0A  +
cmp [esp+7Ch+var_4C] 101h +
jbe loc_459F53  +
mov eax [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_48] +
mov [eax] ebp +
mov [eax+0Ch] edx +
mov edx [esp+7Ch+var_4C] +
mov [eax+4] edi +
mov [eax+10h] edx +
mov eax [esp+7Ch+var_58] +
mov [eax+38h] esi +
mov esi eax +
mov [eax+3Ch] ebx +
mov eax [esp+7Ch+var_54] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_45CF50  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_48] eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+10h] +
mov [esp+7Ch+var_4C] eax +
mov eax [esp+7Ch+arg_0] +
mov ebp [eax] +
mov edi [eax+4] +
mov eax esi +
mov ebx [eax+3Ch] +
mov eax [eax] +
mov esi [esi+38h] +
cmp eax 0Bh +
jnz loc_459CCE  +
mov ecx [esp+7Ch+var_58] +
mov dword ptr [ecx+1BC4h] 0FFFFFFFFh +
jmp loc_459CD7  +
mov edx eax +
mov ecx eax +
sub ebx eax +
movzx eax word ptr [esp+7Ch+var_28] +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
cmp byte ptr [esp+7Ch+var_40] 0 +
mov [ecx+1BC4h] edx +
mov [ecx+40h] eax +
jnz loc_45B389  +
mov dword ptr [ecx] 19h +
mov eax 19h +
jmp loc_459CD7  +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_40] edx +
mov [esp+7Ch+var_7C] eax +
call sub_45C700  +
mov edx [esp+7Ch+var_58] +
mov [edx+18h] eax +
mov edx [esp+7Ch+var_40] +
jmp loc_45AD5C  +
mov eax 0FFFFFFFEh +
jmp loc_45A280  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aTooManyLengthO +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_459CD7  +
sub eax ecx +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov eax [eax+34h] +
add [esp+7Ch+var_40] eax +
jmp loc_459F17  +
mov edx [esp+7Ch+var_40] +
mov ecx [esp+7Ch+var_58] +
movzx eax word ptr [esp+7Ch+var_28] +
and edx 0Fh +
mov [ecx+48h] edx +
mov [ecx+44h] eax +
mov dword ptr [ecx] 17h +
jmp loc_459E59  +
test byte ptr [esp+7Ch+var_40] 20h +
jz loc_45B4EF  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+1BC4h] 0FFFFFFFFh +
mov dword ptr [eax] 0Bh +
mov eax 0Bh +
jmp loc_459CD7  +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
mov esi [esp+7Ch+var_58] +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [esi+18h] +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_7C] eax +
call sub_45C700  +
mov edx [esi+10h] +
mov [esi+18h] eax +
mov eax edx +
jmp loc_45A4F1  +
mov ecx edi +
mov eax ebx +
mov edi ebp +
mov ebx esi +
mov ebp ecx +
mov esi eax +
jmp loc_45A2A0  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aIncorrectHeade +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_459CD7  +
mov eax [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov dword ptr [eax+4Ch] offset unk_49B9E0 +
mov dword ptr [eax+54h] 9 +
mov dword ptr [eax+50h] offset unk_49B960 +
mov dword ptr [eax+58h] 5 +
mov dword ptr [eax] 13h +
jz loc_45B984  +
mov eax 13h +
jmp loc_459E0E  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidBlockTy +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_459E0E  +
mov eax [esp+7Ch+var_58] +
mov edx [esp+7Ch+var_3C] +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_45C700  +
mov ecx [esp+7Ch+var_58] +
mov [ecx+18h] eax +
jmp loc_45AC82  +
mov eax esi +
mov ebx [esp+7Ch+var_58] +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
mov eax esi +
shr eax 10h +
mov byte ptr [esp+7Ch+var_10+2] al +
mov eax esi +
shr eax 18h +
mov byte ptr [esp+7Ch+var_10+3] al +
mov eax [ebx+18h] +
lea edx [esp+7Ch+var_10] +
mov [esp+7Ch+var_74] 4 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_45C700  +
mov [ebx+18h] eax +
jmp loc_45A41E  +
test byte ptr [esp+7Ch+var_40] 40h +
jz loc_45B695  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidLiteral +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_459CD7  +
test esi 0E000h +
jz loc_45B6AE  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownHeaderF +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_459CD7  +
mov ebx [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov [ebx+40h] eax +
mov dword ptr [ebx] 0Eh +
jz loc_45B977  +
xor ebx ebx +
xor esi esi +
jmp loc_45A437  +
mov ebx [esp+7Ch+var_58] +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
xor esi esi +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [ebx+18h] +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_7C] eax +
call sub_45C700  +
mov [ebx+18h] eax +
mov eax [ebx+10h] +
xor ebx ebx +
mov edx eax +
and edx 400h +
jmp loc_45A520  +
lea edx [eax+2] +
cmp ebx edx +
jnb loc_45B5F1  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_45B5D8  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_45B5D0  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
mov eax [esp+7Ch+var_38] +
shr esi cl +
test eax eax +
jz loc_45B999  +
mov eax [esp+7Ch+var_58] +
sub ebx 2 +
mov ecx [esp+7Ch+var_38] +
movzx ecx word ptr [eax+ecx*2+6Eh] +
mov eax esi +
and eax 3 +
add eax 3 +
mov [esp+7Ch+var_40] eax +
shr esi 2 +
jmp loc_45A652  +
mov word ptr [esp+7Ch+var_28] cx +
movzx ecx byte ptr [esp+7Ch+var_34] +
sub ebx [esp+7Ch+var_38] +
shr esi cl +
jmp loc_45B2C2  +
lea edx [eax+3] +
cmp ebx edx +
jnb loc_45B674  +
test edi edi +
jz loc_45A0C0  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_45B65B  +
test edi edi +
jz loc_45AF20  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_45B653  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
shr esi cl +
sub ebx 3 +
mov edx esi +
and esi 7 +
add esi 3 +
xor ecx ecx +
mov [esp+7Ch+var_40] esi +
mov esi edx +
shr esi 3 +
jmp loc_45A652  +
mov edx [esp+7Ch+var_40] +
mov eax [esp+7Ch+var_58] +
and edx 0Fh +
mov [eax+48h] edx +
mov dword ptr [eax] 15h +
jmp loc_45A0D7  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_45B6C3  +
mov edx esi +
shr edx 8 +
and edx 1 +
mov [eax] edx +
test esi 200h +
jnz loc_45B7B0  +
mov eax [esp+7Ch+var_58] +
xor ebx ebx +
xor esi esi +
mov dword ptr [eax] 2 +
jmp loc_45A3D8  +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_44] 1 +
mov dword ptr [eax] 1Ch +
jmp loc_45A2A0  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_48] +
mov edx [edx+18h] +
sub ecx eax +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] edx +
call sub_45C1D0  +
jmp loc_45A9A5  +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_38] 0 +
mov dword ptr [eax+68h] 0 +
mov dword ptr [eax] 12h +
jmp loc_45A53B  +
cmp dword ptr [eax] 1Dh +
jz loc_45AA93  +
cmp word ptr [eax+270h] 0 +
jnz loc_45B8C4  +
mov edx [esp+7Ch+arg_0] +
mov dword ptr [edx+18h] offset aInvalidCodeMis +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_459CD7  +
mov eax ebx +
mov ecx [esp+7Ch+var_48] +
mov ebx edi +
mov edx [esp+7Ch+var_4C] +
mov edi ebp +
mov ebp esi +
mov esi eax +
mov eax [esp+7Ch+arg_0] +
mov [eax+0Ch] ecx +
mov [eax+10h] edx +
mov [eax] edi +
mov [eax+4] ebx +
mov eax [esp+7Ch+var_58] +
mov [eax+38h] ebp +
mov [eax+3Ch] esi +
mov eax 2 +
jmp loc_45A280  +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
mov esi [esp+7Ch+var_58] +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [esi+18h] +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_45C700  +
mov [esi+18h] eax +
jmp loc_45B6CF  +
mov ebx edi +
xor esi esi +
mov edi ebp +
xor ebp ebp +
jmp loc_45B6EC  +
mov [esp+7Ch+var_74] 0 +
xor ebx ebx +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_45C700  +
mov esi [esp+7Ch+var_58] +
lea edx [esp+7Ch+var_10] +
mov byte ptr [esp+7Ch+var_10] 1Fh +
mov byte ptr [esp+7Ch+var_10+1] 8Bh +
mov [esi+18h] eax +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_45C700  +
mov dword ptr [esi] 1 +
mov [esi+18h] eax +
mov eax 1 +
xor esi esi +
jmp loc_459CD7  +
mov eax [esp+7Ch+var_58] +
shr esi 4 +
mov ecx esi +
and ecx 0Fh +
add ecx 8 +
mov eax [eax+24h] +
test eax eax +
jnz loc_45B94A  +
mov eax [esp+7Ch+var_58] +
mov [eax+24h] ecx +
mov ebx [esp+7Ch+var_58] +
mov eax 1 +
shl eax cl +
mov [ebx+14h] eax +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_45C1D0  +
mov edx [esp+7Ch+arg_0] +
mov [ebx+18h] eax +
mov [edx+30h] eax +
mov eax esi +
and eax 200h +
cmp eax 1 +
sbb eax eax +
xor esi esi +
and eax 2 +
add eax 9 +
mov [ebx] eax +
xor ebx ebx +
jmp loc_459CCE  +
mov eax [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_2C] +
lea edx [eax+2F0h] +
mov [eax+6Ch] ecx +
mov [eax+4Ch] ecx +
lea ecx [eax+6Ch] +
add eax 54h +
mov dword ptr [eax] 9 +
mov [esp+7Ch+var_3C] edx +
mov [esp+7Ch+var_68] edx +
mov edx [esp+7Ch+var_30] +
mov [esp+7Ch+var_70] ecx +
mov [esp+7Ch+var_40] ecx +
mov ecx [esp+7Ch+var_28] +
mov [esp+7Ch+var_6C] eax +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] 1 +
mov [esp+7Ch+var_74] ecx +
call sub_45C9F0  +
mov ecx [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_3C] +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_45B9B6  +
mov eax [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov dword ptr [ecx+18h] offset aInvalidLiter_0 +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_459CD7  +
cmp ecx eax +
jbe loc_45B870  +
mov eax [esp+7Ch+arg_0] +
sub ebx 4 +
mov dword ptr [eax+18h] offset aInvalidWindowS +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_459CD7  +
mov ebx edi +
xor esi esi +
mov edi ebp +
xor ebp ebp +
jmp loc_45A2A0  +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
shr ebp 3 +
sub esi 3 +
jmp loc_45A2A0  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidBitLeng +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
jmp loc_45AA93  +
mov [esp+7Ch+var_40] ebx +
mov ebx [esp+7Ch+var_58] +
mov eax [ebx+6Ch] +
mov dword ptr [ebx+58h] 6 +
mov [ebx+50h] eax +
mov eax [ebx+64h] +
mov [esp+7Ch+var_68] edx +
mov edx ebx +
add edx 58h +
mov [esp+7Ch+var_6C] edx +
mov [esp+7Ch+var_70] ecx +
mov [esp+7Ch+var_74] eax +
mov eax [ebx+60h] +
mov [esp+7Ch+var_7C] 2 +
lea eax [ebx+eax*2+70h] +
mov [esp+7Ch+var_78] eax +
call sub_45C9F0  +
mov ebx [esp+7Ch+var_40] +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_459F28  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDista_1 +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_459CD7  +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_45BA80  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_45BA80  +
mov edx [ebx+24h] +
test edx edx +
jz loc_45BA80  +
mov ecx [eax+34h] +
test ecx ecx +
jz loc_45BA63  +
mov eax [ebx+28h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
call edx  +
mov edx [ebx+24h] +
mov eax [ebx+1Ch] +
mov ecx [ebx+28h] +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] ecx +
call edx  +
xor eax eax +
mov dword ptr [ebx+1Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
mov eax 0FFFFFFFEh +
jmp loc_45BA78  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
test ebx ebx +
jz loc_45BB40  +
mov esi [ebx+1Ch] +
test esi esi +
jz loc_45BB40  +
mov eax [esi+8] +
test eax eax +
jnz loc_45BAF8  +
cmp dword ptr [esi] 0Ah +
jz loc_45BAFD  +
mov eax [esp+34h] +
add eax [esp+38h] +
mov edx [esp+38h] +
mov ebp [ebx+0Ch] +
mov edi [ebx+10h] +
mov [ebx+0Ch] eax +
mov eax ebx +
mov dword ptr [ebx+10h] 0 +
call sub_4597C0  +
mov [ebx+10h] edi +
mov [ebx+0Ch] ebp +
test eax eax +
jnz loc_45BB47  +
mov dword ptr [esi+0Ch] 1 +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [esi] 0Ah +
jnz loc_45BB40  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_45C1D0  +
mov ecx [esp+38h] +
mov [esp+8] ecx +
mov ecx [esp+34h] +
mov [esp] eax +
mov [esp+4] ecx +
call sub_45C1D0  +
cmp [esi+18h] eax +
jz loc_45BABA  +
mov eax 0FFFFFFFDh +
jmp loc_45BAF0  +
***
mov eax 0FFFFFFFEh +
jmp loc_45BAF0  +
***
mov dword ptr [esi] 1Eh +
mov eax 0FFFFFFFCh +
jmp loc_45BAF0  +
***
mov eax [esp+4] +
mov edx [esp+8] +
test eax eax +
jz loc_45BB86  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_45BB86  +
test byte ptr [eax+8] 2 +
jz loc_45BB86  +
mov [eax+20h] edx +
xor eax eax +
mov dword ptr [edx+30h] 0 +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+28h] +
test ebx ebx +
jz loc_45BC88  +
mov edi [ebx+1Ch] +
test edi edi +
jz loc_45BC88  +
mov ecx [ebx+4] +
test ecx ecx +
jz loc_45BC62  +
cmp dword ptr [edi] 1Fh +
lea esi [edi+68h] +
jz loc_45BC25  +
mov edx [edi+3Ch] +
mov eax [edi+38h] +
mov dword ptr [edi] 1Fh +
mov ecx edx +
and edx 0FFFFFFF8h +
and ecx 7 +
shl eax cl +
cmp edx 7 +
mov [edi+38h] eax +
mov ecx edx +
mov [edi+3Ch] edx +
jbe loc_45BC80  +
sub ecx 8 +
lea edx [esp+10h] +
shr ecx 3 +
mov esi edx +
lea ebp [esp+ecx+11h] +
mov [esi] al +
add esi 1 +
shr eax 8 +
cmp esi ebp +
jnz loc_45BBF8  +
add ecx 1 +
mov [edi+38h] eax +
mov dword ptr [edi+3Ch] 0 +
lea esi [edi+68h] +
mov dword ptr [edi+68h] 0 +
mov eax esi +
call sub_459730  +
mov ecx [ebx+4] +
mov edx [ebx] +
mov eax esi +
call sub_459730  +
sub [ebx+4] eax +
add [ebx] eax +
add eax [ebx+8] +
cmp dword ptr [edi+68h] 4 +
mov esi eax +
mov [ebx+8] eax +
jnz loc_45BC73  +
mov ebp [ebx+14h] +
mov [esp] ebx +
call sub_4599A0  +
xor eax eax +
mov [ebx+8] esi +
mov [ebx+14h] ebp +
mov dword ptr [edi] 0Bh +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [edi+3Ch] 7 +
ja loc_45BBB9  +
mov eax 0FFFFFFFBh +
jmp loc_45BC5A  +
***
add esp 14h +
mov eax 0FFFFFFFDh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor ecx ecx +
lea edx [esp+10h] +
jmp loc_45BC11  +
***
mov eax 0FFFFFFFEh +
jmp loc_45BC5A  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
mov esi [esp+44h] +
test ebx ebx +
jz loc_45BEF0  +
test esi esi +
jz loc_45BEF0  +
mov ebp [esi+1Ch] +
test ebp ebp +
jz loc_45BEF0  +
mov eax [esi+20h] +
test eax eax +
jz loc_45BEF0  +
mov edx [esi+24h] +
test edx edx +
jz loc_45BEF0  +
mov edx [esi+28h] +
mov dword ptr [esp+8] 1BCCh +
mov dword ptr [esp+4] 1 +
mov [esp] edx +
call eax  +
test eax eax +
mov edx eax +
jz loc_45BEFA  +
mov eax [ebp+34h] +
test eax eax +
jz loc_45BEB5  +
mov edi [esi+20h] +
mov eax 1 +
mov dword ptr [esp+8] 1 +
mov ecx [ebp+24h] +
mov [esp+1Ch] edx +
shl eax cl +
mov [esp+4] eax +
mov eax [esi+28h] +
mov [esp] eax +
call edi  +
mov edx [esp+1Ch] +
test eax eax +
mov [esp+18h] eax +
jz loc_45BF04  +
mov eax [esi] +
test dl 1 +
mov edi edx +
mov [ebx] eax +
mov eax [esi+4] +
mov [ebx+4] eax +
mov eax [esi+8] +
mov [ebx+8] eax +
mov eax [esi+0Ch] +
mov [ebx+0Ch] eax +
mov eax [esi+10h] +
mov [ebx+10h] eax +
mov eax [esi+14h] +
mov [ebx+14h] eax +
mov eax [esi+18h] +
mov [ebx+18h] eax +
mov eax [esi+1Ch] +
mov [ebx+1Ch] eax +
mov eax [esi+20h] +
mov [ebx+20h] eax +
mov eax [esi+24h] +
mov [ebx+24h] eax +
mov eax [esi+28h] +
mov [ebx+28h] eax +
mov eax [esi+2Ch] +
mov [ebx+2Ch] eax +
mov eax [esi+30h] +
mov [ebx+30h] eax +
mov eax [esi+34h] +
mov esi ebp +
mov [ebx+34h] eax +
mov eax 1BCCh +
jnz loc_45BEC2  +
test edi 2 +
jnz loc_45BED8  +
mov ecx eax +
shr ecx 2 +
test al 2 +
movs   +
jnz loc_45BEA0  +
test al 1 +
jnz loc_45BE80  +
mov eax [ebp+4Ch] +
lea ecx [ebp+530h] +
cmp eax ecx +
jnb loc_45BE50  +
mov eax [ebp+6Ch] +
mov edi [esp+18h] +
sub eax ecx +
sar eax 2 +
test edi edi +
lea eax [edx+eax*4+530h] +
mov [edx+6Ch] eax +
jz loc_45BE35  +
mov ecx [ebp+24h] +
mov eax 1 +
mov esi [ebp+34h] +
mov [esp] edi +
mov [esp+1Ch] edx +
shl eax cl +
mov [esp+8] eax +
mov [esp+4] esi +
call memcpy  +
mov edx [esp+1Ch] +
mov eax [esp+18h] +
mov [edx+34h] eax +
xor eax eax +
mov [ebx+1Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea esi [ebp+1BBCh] +
cmp eax esi +
ja loc_45BDF6  +
sub eax ecx +
sar eax 2 +
lea eax [edx+eax*4+530h] +
mov [edx+4Ch] eax +
mov eax [ebp+50h] +
sub eax ecx +
sar eax 2 +
lea eax [edx+eax*4+530h] +
mov [edx+50h] eax +
jmp loc_45BDF6  +
***
movzx eax byte ptr [esi+ecx] +
mov [edi+ecx] al +
mov eax [ebp+4Ch] +
lea ecx [ebp+530h] +
cmp eax ecx +
jb loc_45BDF6  +
jmp loc_45BE50  +
***
movzx ecx word ptr [esi] +
test al 1 +
mov [edi] cx +
mov ecx 2 +
jz loc_45BDE9  +
jmp loc_45BE80  +
***
mov dword ptr [esp+18h] 0 +
jmp loc_45BD62  +
***
movzx eax byte ptr [ebp+0] +
lea edi [edx+1] +
lea esi [ebp+1] +
mov [edx] al +
mov eax 1BCBh +
jmp loc_45BDC6  +
***
movzx ecx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] cx +
jmp loc_45BDD2  +
***
mov eax 0FFFFFFFEh +
jmp loc_45BE41  +
***
mov eax 0FFFFFFFCh +
jmp loc_45BE41  +
***
mov ecx [esi+28h] +
mov eax [esi+24h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
mov eax 0FFFFFFFCh +
jmp loc_45BE41  +
***
mov eax [esp+4] +
test eax eax +
jz loc_45BF40  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_45BF40  +
mov dword ptr [eax+1BC0h] 1 +
mov eax 0FFFFFFFDh +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebx  +
mov eax [esp+8] +
test eax eax +
jz loc_45BF94  +
mov edx [eax+1Ch] +
test edx edx +
jz loc_45BF94  +
mov eax [edx+1BC4h] +
mov ecx [edx] +
shl eax 10h +
cmp ecx 0Fh +
jz loc_45BF80  +
xor ebx ebx +
cmp ecx 18h +
jz loc_45BF87  +
add eax ebx +
pop ebx  +
retn   +
***
mov ebx [edx+40h] +
add eax ebx +
jmp loc_45BF79  +
***
mov ebx [edx+1BC8h] +
sub ebx [edx+40h] +
add eax ebx +
jmp loc_45BF79  +
***
mov eax 0FFFF0000h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 50h +
mov eax [esp+50h+arg_8] +
lea ebx [esp+50h+var_38] +
mov esi [esp+50h+arg_4] +
mov [esp+50h+var_18] 0 +
mov [esp+50h+var_14] 0 +
mov [esp+50h+var_38] eax +
mov eax [esp+50h+arg_C] +
mov [esp+50h+var_10] 0 +
mov [esp+50h+var_34] eax +
mov eax [esp+50h+arg_0] +
mov [esp+50h+var_2C] eax +
mov eax [esi] +
mov [esp+50h+var_44] 38h +
mov [esp+50h+var_48] offset a1_2_7_0 +
mov [esp+50h+var_50] ebx +
mov [esp+50h+var_28] eax +
mov eax [esp+50h+arg_10] +
mov [esp+50h+var_4C] eax +
call sub_460070  +
test eax eax +
jz loc_45C010  +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+50h+var_4C] 4 +
mov [esp+50h+var_50] ebx +
call sub_45EB10  +
cmp eax 1 +
mov edi eax +
jz loc_45C040  +
mov [esp+50h+var_50] ebx +
call sub_45FC90  +
test edi edi +
mov eax 0FFFFFFFBh +
cmovnz eax edi +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esp+50h+var_24] +
mov [esi] eax +
mov [esp+50h+var_50] ebx +
call sub_45FC90  +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_1C] 0FFFFFFFFh +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_45BFA0  +
add esp 2Ch +
retn   +
***
mov edx [esp+arg_0] +
mov eax edx +
shr eax 0Ch +
lea ecx [edx+eax+0Dh] +
mov eax edx +
shr eax 0Eh +
add eax ecx +
shr edx 19h +
add eax edx +
retn   +
***
mov eax offset a1_2_7_1 +
retn   +
***
mov eax 55h +
retn   +
***
mov eax 2 +
sub eax [esp+4] +
mov eax ds:off_49C2C0[eax*4] +
retn   +
***
jmp loc_45C100  +
mov eax [esp+0Ch] +
imul eax [esp+8] +
mov [esp+4] eax +
jmp malloc  +
***
mov eax [esp+8] +
mov [esp+4] eax +
jmp free  +
***
push ebp  +
mov ebp 80078071h +
push edi  +
push esi  +
mov esi eax +
mov eax ecx +
push ebx  +
mov ebx edx +
imul  ebp +
mov eax ecx +
sar eax 1Fh +
sub esp 4 +
add edx ecx +
sar edx 0Fh +
sub edx eax +
movzx eax bx +
imul edx edx +
shr ebx 10h +
mov [esp] eax +
sub ecx edx +
mov edx ecx +
movzx ecx si +
mov edi edx +
imul edi ecx +
shr esi 10h +
add ebx esi +
sub ebx edx +
mov eax edi +
mul  ebp +
shr edx 0Fh +
imul edx edx +
sub edi edx +
mov edx 0FFF0h +
add ebx edi +
add ecx [esp] +
lea eax [ebx+0FFF1h] +
jz loc_45C1A4  +
lea edx [ecx-1] +
cmp edx 0FFF0h +
jbe loc_45C1A4  +
lea edx [ecx-0FFF2h] +
sub ebx 0FFF1h +
cmp eax 1FFE2h +
cmovnb eax ebx +
cmp eax 0FFF1h +
lea ecx [eax-0FFF1h] +
cmovnb eax ecx +
add esp 4 +
shl eax 10h +
pop ebx  +
or eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 38h +
mov ebp [esp+38h+arg_0] +
mov edi [esp+38h+arg_4] +
mov eax ebp +
movzx ebp bp +
shr eax 10h +
cmp [esp+38h+arg_8] 1 +
mov [esp+38h+var_C] eax +
jz loc_45C3BB  +
test edi edi +
jz loc_45C579  +
cmp [esp+38h+arg_8] 0Fh +
ja loc_45C262  +
mov edx [esp+38h+arg_8] +
test edx edx +
jz loc_45C22A  +
mov edx [esp+38h+arg_8] +
mov eax [esp+38h+var_C] +
add edx edi +
add edi 1 +
movzx ecx byte ptr [edi-1] +
add ebp ecx +
add eax ebp +
cmp edi edx +
jnz loc_45C217  +
mov [esp+38h+var_C] eax +
mov eax [esp+38h+var_C] +
cmp ebp 0FFF1h +
mov edx 80078071h +
lea ecx [ebp-0FFF1h] +
cmovb ecx ebp +
mul  edx +
mov eax [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub eax edx +
shl eax 10h +
or ecx eax +
add esp 38h +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+38h+arg_8] 15AFh +
jbe loc_45C3FD  +
sub [esp+38h+arg_8] 15B0h +
lea eax [edi+15B0h] +
mov [esp+38h+var_8] eax +
mov eax edi +
movzx edi byte ptr [eax] +
add eax 10h +
lea ebx [ebp+edi+0] +
movzx edi byte ptr [eax-0Fh] +
mov [esp+38h+var_38] ebx +
add edi ebx +
mov ebx edi +
movzx edi byte ptr [eax-0Eh] +
mov [esp+38h+var_34] ebx +
mov esi edi +
movzx edi byte ptr [eax-0Dh] +
add esi ebx +
mov [esp+38h+var_30] esi +
mov ecx edi +
movzx edi byte ptr [eax-0Ch] +
add ecx esi +
mov [esp+38h+var_2C] ecx +
mov edx edi +
movzx edi byte ptr [eax-0Bh] +
add edx ecx +
mov [esp+38h+var_28] edx +
mov ebp edi +
movzx edi byte ptr [eax-0Ah] +
add ebp edx +
mov [esp+38h+var_24] ebp +
add edi ebp +
movzx ebp byte ptr [eax-1] +
mov ebx edi +
movzx edi byte ptr [eax-9] +
mov [esp+38h+var_20] ebx +
add edi ebx +
movzx ebx byte ptr [eax-4] +
mov esi edi +
movzx edi byte ptr [eax-8] +
mov [esp+38h+var_1C] esi +
mov ecx edi +
movzx edi byte ptr [eax-7] +
add ecx esi +
movzx esi byte ptr [eax-5] +
mov [esp+38h+var_18] ecx +
mov edx edi +
movzx edi byte ptr [eax-6] +
add edx ecx +
movzx ecx byte ptr [eax-3] +
mov [esp+38h+var_14] edx +
add edi edx +
movzx edx byte ptr [eax-2] +
add esi edi +
mov [esp+38h+var_10] edi +
mov edi [esp+38h+var_34] +
add ebx esi +
add edi [esp+38h+var_38] +
add ecx ebx +
add edi [esp+38h+var_30] +
add edx ecx +
add edi [esp+38h+var_2C] +
add ebp edx +
add edi [esp+38h+var_28] +
add edi [esp+38h+var_24] +
add edi [esp+38h+var_20] +
add edi [esp+38h+var_1C] +
add edi [esp+38h+var_18] +
add edi [esp+38h+var_14] +
add edi [esp+38h+var_10] +
add edi esi +
add edi ebx +
add ecx edi +
add edx ecx +
add edx ebp +
add [esp+38h+var_C] edx +
cmp eax [esp+38h+var_8] +
jnz loc_45C284  +
mov edi eax +
mov eax 80078071h +
mul  ebp +
mov eax 80078071h +
shr edx 0Fh +
imul edx edx +
sub ebp edx +
mul  [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub [esp+38h+var_C] edx +
cmp [esp+38h+arg_8] 15AFh +
ja loc_45C270  +
mov eax [esp+38h+arg_8] +
test eax eax +
jnz loc_45C3F2  +
mov ecx [esp+38h+var_C] +
shl ecx 10h +
or ecx ebp +
add esp 38h +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edi] +
add ebp eax +
cmp ebp 0FFF1h +
lea eax [ebp-0FFF1h] +
cmovnb ebp eax +
mov eax [esp+38h+var_C] +
add eax ebp +
cmp eax 0FFF1h +
lea ecx [eax-0FFF1h] +
cmovb ecx eax +
add esp 38h +
shl ecx 10h +
or ecx ebp +
pop ebx  +
mov eax ecx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+38h+arg_8] 0Fh +
jbe loc_45C583  +
mov eax [esp+38h+arg_8] +
mov edx edi +
mov [esp+38h+arg_4] edi +
sub eax 10h +
mov [esp+38h+var_4] eax +
shr [esp+38h+var_4] 4 +
mov eax [esp+38h+var_4] +
shl eax 4 +
lea eax [edi+eax+10h] +
mov [esp+38h+var_8] eax +
movzx eax byte ptr [edx] +
add edx 10h +
add eax ebp +
mov esi eax +
movzx eax byte ptr [edx-0Fh] +
mov [esp+38h+var_38] esi +
add eax esi +
mov edi eax +
movzx eax byte ptr [edx-0Eh] +
mov [esp+38h+var_34] edi +
add eax edi +
movzx edi byte ptr [edx-4] +
mov esi eax +
movzx eax byte ptr [edx-0Dh] +
mov [esp+38h+var_30] esi +
add eax esi +
mov ebx eax +
movzx eax byte ptr [edx-0Ch] +
mov [esp+38h+var_2C] ebx +
mov ecx eax +
movzx eax byte ptr [edx-0Bh] +
add ecx ebx +
movzx ebx byte ptr [edx-7] +
mov [esp+38h+var_28] ecx +
mov ebp eax +
movzx eax byte ptr [edx-0Ah] +
add ebp ecx +
movzx ecx byte ptr [edx-6] +
mov [esp+38h+var_24] ebp +
add eax ebp +
mov esi eax +
movzx eax byte ptr [edx-9] +
mov [esp+38h+var_20] esi +
add eax esi +
movzx esi byte ptr [edx-8] +
mov [esp+38h+var_1C] eax +
add esi eax +
movzx eax byte ptr [edx-5] +
add ebx esi +
add ecx ebx +
add eax ecx +
lea ebp [eax+edi] +
movzx edi byte ptr [edx-3] +
mov [esp+38h+var_18] ebp +
add edi ebp +
mov ebp edi +
movzx edi byte ptr [edx-2] +
mov [esp+38h+var_14] ebp +
add edi ebp +
movzx ebp byte ptr [edx-1] +
mov [esp+38h+var_10] edi +
add ebp edi +
mov edi [esp+38h+var_34] +
add edi [esp+38h+var_38] +
add edi [esp+38h+var_30] +
add edi [esp+38h+var_2C] +
add edi [esp+38h+var_28] +
add edi [esp+38h+var_24] +
add edi [esp+38h+var_20] +
add edi [esp+38h+var_1C] +
add esi edi +
add ebx esi +
add ecx ebx +
add eax ecx +
add eax [esp+38h+var_18] +
add eax [esp+38h+var_14] +
add eax [esp+38h+var_10] +
add eax ebp +
add [esp+38h+var_C] eax +
cmp edx [esp+38h+var_8] +
jnz loc_45C422  +
mov esi [esp+38h+var_4] +
mov edi [esp+38h+arg_4] +
mov eax esi +
add eax 1 +
shl eax 4 +
add edi eax +
mov eax esi +
mov esi [esp+38h+arg_8] +
shl eax 4 +
neg eax  +
lea eax [esi+eax-11h] +
and esi 0Fh +
jz loc_45C544  +
lea edx [edi+eax+1] +
mov eax [esp+38h+var_C] +
add edi 1 +
movzx ecx byte ptr [edi-1] +
add ebp ecx +
add eax ebp +
cmp edi edx +
jnz loc_45C531  +
mov [esp+38h+var_C] eax +
mov ecx 80078071h +
mov eax ebp +
mul  ecx +
mov eax [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub ebp edx +
mul  ecx +
shr edx 0Fh +
imul edx edx +
sub [esp+38h+var_C] edx +
mov ecx [esp+38h+var_C] +
shl ecx 10h +
or ecx ebp +
jmp loc_45C3B1  +
mov ecx 1 +
jmp loc_45C258  +
mov eax [esp+38h+arg_8] +
sub eax 1 +
jmp loc_45C529  +
***
mov ecx [esp+0Ch] +
mov eax [esp+4] +
mov edx [esp+8] +
test ecx ecx +
js loc_45C5A5  +
jmp loc_45C130  +
***
mov eax 0FFFFFFFFh +
retn   +
***
mov ecx [esp+0Ch] +
mov eax [esp+4] +
mov edx [esp+8] +
test ecx ecx +
js loc_45C5C5  +
jmp loc_45C130  +
***
mov eax 0FFFFFFFFh +
retn   +
***
push esi  +
push ebx  +
mov ecx [edx+edi*4] +
test ecx ecx +
jz loc_45C5FD  +
mov ebx edx +
xor esi esi +
test cl 1 +
jz loc_45C5E7  +
xor esi [ebx] +
add ebx 4 +
shr ecx 1 +
jnz loc_45C5E0  +
mov [eax+edi*4] esi +
add edi 1 +
cmp edi 20h +
jnz loc_45C5D5  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor esi esi +
mov [eax+edi*4] esi +
add edi 1 +
cmp edi 20h +
jnz loc_45C5D5  +
jmp loc_45C5F9  +
***
push ebp  +
mov ebp ecx +
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 100h +
test ecx ecx +
jle loc_45C6DD  +
mov edi edx +
mov edx 1 +
mov dword ptr [esp+80h] 0EDB88320h +
lea eax [esp+84h] +
lea ecx [esp+100h] +
mov [eax] edx +
add eax 4 +
add edx edx +
cmp eax ecx +
jnz loc_45C646  +
lea edx [esp+80h] +
mov eax esp +
call sub_45C5D0  +
mov edx esp +
lea eax [esp+80h] +
call sub_45C5D0  +
lea esi [esi+0] +
lea edx [esp+80h] +
mov eax esp +
call sub_45C5D0  +
test ebp 1 +
jz loc_45C69E  +
test esi esi +
jz loc_45C69E  +
mov ebx esi +
mov eax esp +
xor esi esi +
test bl 1 +
jz loc_45C697  +
xor esi [eax] +
add eax 4 +
shr ebx 1 +
jnz loc_45C690  +
sar ebp 1 +
jz loc_45C6D9  +
mov edx esp +
lea eax [esp+80h] +
call sub_45C5D0  +
test ebp 1 +
jz loc_45C6D5  +
test esi esi +
jz loc_45C6D5  +
mov ebx esi +
xor esi esi +
lea eax [esp+80h] +
test bl 1 +
jz loc_45C6CE  +
xor esi [eax] +
add eax 4 +
shr ebx 1 +
jnz loc_45C6C7  +
sar ebp 1 +
jnz loc_45C670  +
mov eax esi +
xor eax edi +
add esp 100h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax offset dword_49C300 +
retn   +
***
push esi  +
push ebx  +
sub esp 4 +
mov edx [esp+4+arg_4] +
mov ebp [esp+4+arg_8] +
test edx edx +
jz loc_45C9A3  +
mov eax [esp+4+arg_0] +
test ebp ebp +
not eax  +
jnz loc_45C744  +
jmp loc_45C999  +
add edx 1 +
mov ecx eax +
xor cl [edx-1] +
shr eax 8 +
movzx ecx cl +
xor eax ds:dword_49C300[ecx*4] +
sub ebp 1 +
jz loc_45C999  +
test dl 3 +
jnz loc_45C726  +
cmp ebp 1Fh +
jbe loc_45C914  +
lea edi [ebp-20h] +
mov ebx edx +
mov [esp+4+var_4] edi +
shr [esp+4+var_4] 5 +
mov ecx [esp+4+var_4] +
mov [esp+4+arg_4] edx +
shl ecx 5 +
lea edi [edx+ecx+20h] +
lea esi [esi+0] +
xor eax [ebx] +
mov edx eax +
movzx ecx al +
shr edx 10h +
movzx esi ah +
mov ecx ds:dword_49CF00[ecx*4] +
shr eax 18h +
movzx edx dl +
xor ecx ds:dword_49C300[eax*4] +
xor ecx [ebx+4] +
xor ecx ds:dword_49CB00[esi*4] +
xor ecx ds:dword_49C700[edx*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_49CF00[esi*4] +
shr ecx 18h +
movzx eax al +
xor esi ds:dword_49C300[ecx*4] +
xor esi [ebx+8] +
xor esi ds:dword_49CB00[edx*4] +
xor esi ds:dword_49C700[eax*4] +
mov eax esi +
mov ecx esi +
movzx edx ah +
movzx ecx cl +
shr eax 10h +
mov ecx ds:dword_49CF00[ecx*4] +
shr esi 18h +
movzx eax al +
xor ecx ds:dword_49C300[esi*4] +
xor ecx [ebx+0Ch] +
xor ecx ds:dword_49CB00[edx*4] +
xor ecx ds:dword_49C700[eax*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_49CF00[esi*4] +
shr ecx 18h +
movzx eax al +
xor esi ds:dword_49C300[ecx*4] +
xor esi [ebx+10h] +
xor esi ds:dword_49CB00[edx*4] +
xor esi ds:dword_49C700[eax*4] +
mov eax esi +
mov ecx esi +
movzx edx ah +
movzx ecx cl +
shr eax 10h +
mov ecx ds:dword_49CF00[ecx*4] +
shr esi 18h +
movzx eax al +
xor ecx ds:dword_49C300[esi*4] +
xor ecx [ebx+14h] +
xor ecx ds:dword_49CB00[edx*4] +
xor ecx ds:dword_49C700[eax*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_49CF00[esi*4] +
movzx eax al +
shr ecx 18h +
xor esi ds:dword_49C300[ecx*4] +
add ebx 20h +
xor esi [ebx-8] +
xor esi ds:dword_49CB00[edx*4] +
xor esi ds:dword_49C700[eax*4] +
mov eax esi +
mov edx esi +
movzx ecx ah +
movzx edx dl +
shr eax 10h +
mov edx ds:dword_49CF00[edx*4] +
shr esi 18h +
movzx eax al +
xor edx ds:dword_49C300[esi*4] +
xor edx [ebx-4] +
xor edx ds:dword_49CB00[ecx*4] +
xor edx ds:dword_49C700[eax*4] +
mov ecx edx +
mov eax edx +
shr ecx 10h +
movzx esi dl +
shr eax 18h +
movzx ecx cl +
mov eax ds:dword_49C300[eax*4] +
movzx edx dh +
xor eax ds:dword_49CF00[esi*4] +
xor eax ds:dword_49CB00[edx*4] +
xor eax ds:dword_49C700[ecx*4] +
cmp ebx edi +
jnz loc_45C770  +
mov ecx [esp+4+var_4] +
and ebp 1Fh +
mov edx [esp+4+arg_4] +
add ecx 1 +
shl ecx 5 +
add edx ecx +
cmp ebp 3 +
jbe loc_45C976  +
lea edi [ebp-4] +
mov ebx edx +
mov [esp+4+var_4] edi +
shr [esp+4+var_4] 2 +
mov edi [esp+4+var_4] +
mov [esp+4+arg_4] edx +
lea edi [edx+edi*4+4] +
xor eax [ebx] +
add ebx 4 +
mov ecx eax +
mov edx eax +
shr ecx 10h +
movzx esi dl +
shr eax 18h +
movzx ecx cl +
mov eax ds:dword_49C300[eax*4] +
movzx edx dh +
xor eax ds:dword_49CF00[esi*4] +
xor eax ds:dword_49CB00[edx*4] +
xor eax ds:dword_49C700[ecx*4] +
cmp ebx edi +
jnz loc_45C930  +
mov edx [esp+4+arg_4] +
and ebp 3 +
mov edi [esp+4+var_4] +
lea edx [edx+edi*4+4] +
test ebp ebp +
jz loc_45C999  +
lea ebx [edx+ebp] +
lea esi [esi+0] +
add edx 1 +
mov ecx eax +
xor cl [edx-1] +
shr eax 8 +
movzx ecx cl +
xor eax ds:dword_49C300[ecx*4] +
cmp edx ebx +
jnz loc_45C980  +
add esp 4 +
not eax  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov eax [esp+4] +
jmp loc_45C610  +
***
jmp loc_45C9D0  +
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov eax [esp+4] +
jmp loc_45C610  +
***
push esi  +
push ebx  +
sub esp 84h +
mov edi [esp+84h+arg_8] +
lea edx [esp+84h+var_40] +
lea eax [esp+84h+var_20] +
lea esi [esi+0] +
xor ebp ebp +
add edx 2 +
mov [edx-2] bp +
cmp edx eax +
jnz loc_45CA10  +
mov edx [esp+84h+arg_4] +
test edi edi +
lea ebx [edx+edi*2] +
jz loc_45CA40  +
nop   +
lea esi [esi+0] +
movzx ecx word ptr [edx] +
add edx 2 +
add word ptr [esp+ecx*2+84h+var_40] 1 +
cmp edx ebx +
jnz loc_45CA30  +
mov esi [esp+84h+arg_10] +
mov ecx 0Fh +
mov edx [esi] +
nop   +
cmp word ptr [esp+ecx*2+84h+var_40] 0 +
jnz loc_45CAAD  +
sub ecx 1 +
jnz loc_45CA50  +
mov eax [esp+84h+arg_C] +
xor ebx ebx +
xor esi esi +
mov edi [esp+84h+arg_C] +
mov eax [eax] +
lea edx [eax+4] +
mov [edi] edx +
mov byte ptr [eax] 40h +
mov byte ptr [eax+1] 1 +
mov [eax+2] bx +
mov eax [edi] +
lea edx [eax+4] +
mov [edi] edx +
mov byte ptr [eax] 40h +
mov byte ptr [eax+1] 1 +
mov [eax+2] si +
mov eax [esp+84h+arg_10] +
mov dword ptr [eax] 1 +
xor eax eax +
add esp 84h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx edx +
cmovbe edx ecx +
test ecx ecx +
mov [esp+84h+var_64] ecx +
mov [esp+84h+var_84] edx +
jz loc_45CA5D  +
cmp ecx 1 +
movzx esi word ptr [esp+84h+var_40+2] +
mov ebp 1 +
jbe loc_45CAE6  +
test si si +
jnz loc_45CAE6  +
mov edx [esp+84h+var_64] +
jmp loc_45CADF  +
cmp word ptr [esp+ebp*2+84h+var_40] 0 +
jnz loc_45CAE6  +
add ebp 1 +
cmp ebp edx +
jnz loc_45CAD7  +
lea edx [esp+84h+var_3C] +
movzx ecx si +
mov ebx 1 +
jmp loc_45CAFA  +
movzx ecx word ptr [edx] +
add edx 2 +
add ebx ebx +
sub ebx ecx +
js loc_45CE6E  +
cmp eax edx +
jnz loc_45CAF4  +
test ebx ebx +
jz loc_45CB26  +
cmp [esp+84h+var_64] 1 +
jnz loc_45CE6E  +
mov ecx [esp+84h+arg_0] +
test ecx ecx +
jz loc_45CE6E  +
xor edx edx +
xor ecx ecx +
mov word ptr [esp+84h+var_20+2] dx +
mov edx 1 +
jmp loc_45CB3B  +
movzx esi word ptr [esp+edx*2+84h+var_40] +
add edx 1 +
add ecx esi +
cmp edx 0Fh +
mov [eax+edx*2] cx +
jnz loc_45CB36  +
xor eax eax +
test edi edi +
jz loc_45CB87  +
mov [esp+84h+var_80] ebp +
mov esi [esp+84h+arg_4] +
mov ebp [esp+84h+arg_14] +
movzx ecx word ptr [esi+eax*2] +
test cx cx +
jz loc_45CB7C  +
movzx edx word ptr [esp+ecx*2+84h+var_20] +
lea ebx [edx+1] +
mov word ptr [esp+ecx*2+84h+var_20] bx +
mov [ebp+edx*2+0] ax +
add eax 1 +
cmp eax edi +
jnz loc_45CB61  +
mov ebp [esp+84h+var_80] +
mov ebx [esp+84h+arg_0] +
test ebx ebx +
jz loc_45CEC9  +
cmp [esp+84h+arg_0] 1 +
mov edi 0FFFFFFFFh +
mov eax 100h +
mov ebx offset unk_49E300 +
cmovnz eax edi +
mov edi offset unk_49E340 +
mov [esp+84h+var_58] eax +
mov eax offset unk_49E17E +
cmovnz eax ebx +
mov [esp+84h+var_48] eax +
mov eax offset unk_49E1BE +
cmovnz eax edi +
mov [esp+84h+var_4C] eax +
mov eax [esp+84h+var_84] +
cmp ebp eax +
cmovnb eax ebp +
mov edi eax +
mov [esp+84h+var_68] eax +
mov eax [esp+84h+arg_C] +
mov ecx edi +
mov eax [eax] +
mov [esp+84h+var_6C] eax +
mov eax 1 +
shl eax cl +
cmp [esp+84h+arg_0] 1 +
setz [esp+84h+var_42]  +
cmp eax 353h +
ja loc_45CEBC  +
cmp [esp+84h+arg_0] 2 +
setz [esp+84h+var_41]  +
cmp eax 24Fh +
ja loc_45CE7E  +
mov ebx [esp+84h+arg_14] +
mov edi [esp+84h+var_68] +
mov [esp+84h+var_5C] eax +
sub eax 1 +
mov [esp+84h+var_84] ebp +
mov [esp+84h+var_70] ebx +
mov [esp+84h+var_54] 0FFFFFFFFh +
mov ebp edi +
mov [esp+84h+var_80] 0 +
mov [esp+84h+var_7C] 0 +
mov [esp+84h+var_50] eax +
lea esi [esi+0] +
mov eax [esp+84h+var_70] +
movzx edx byte ptr [esp+84h+var_84] +
sub dl byte ptr [esp+84h+var_7C] +
mov byte ptr [esp+84h+var_74] 0 +
movzx esi word ptr [eax] +
movzx eax si +
cmp [esp+84h+var_58] eax +
jg loc_45CC97  +
jge loc_45CEB0  +
mov edi [esp+84h+var_48] +
movzx ebx byte ptr [edi+eax*2] +
mov byte ptr [esp+84h+var_74] bl +
mov ebx [esp+84h+var_4C] +
movzx esi word ptr [ebx+eax*2] +
mov ecx [esp+84h+var_84] +
mov edi 1 +
mov eax 1 +
sub ecx [esp+84h+var_7C] +
shl edi cl +
mov ecx ebp +
shl eax cl +
movzx ecx byte ptr [esp+84h+var_7C] +
mov ebx eax +
mov [esp+84h+var_60] eax +
lea eax ds:0[edi*4] +
mov [esp+84h+var_78] eax +
mov eax [esp+84h+var_80] +
neg [esp+84h+var_78]  +
shr eax cl +
mov ecx ebx +
add eax ebx +
mov ebx [esp+84h+var_6C] +
sub eax edi +
lea eax [ebx+eax*4+1] +
movzx ebx byte ptr [esp+84h+var_74] +
mov [esp+84h+var_74] ebp +
mov ebp [esp+84h+var_78] +
lea esi [esi+0] +
mov [eax-1] bl +
mov [eax] dl +
mov [eax+1] si +
add eax ebp +
sub ecx edi +
jnz loc_45CCF0  +
mov eax [esp+84h+var_84] +
mov ebp [esp+84h+var_74] +
lea ecx [eax-1] +
mov eax 1 +
shl eax cl +
mov ecx eax +
mov eax [esp+84h+var_80] +
test ecx eax +
jz loc_45CD26  +
lea esi [esi+0] +
shr ecx 1 +
test ecx eax +
jnz loc_45CD20  +
test ecx ecx +
jz loc_45CEA0  +
lea eax [ecx-1] +
and eax [esp+84h+var_80] +
add eax ecx +
mov [esp+84h+var_80] eax +
mov esi [esp+84h+var_84] +
movzx eax word ptr [esp+esi*2+84h+var_40] +
mov word ptr [esp+84h+var_78] ax +
sub eax 1 +
test ax ax +
mov word ptr [esp+esi*2+84h+var_40] ax +
jnz loc_45CD77  +
mov eax [esp+84h+var_64] +
cmp esi eax +
jz loc_45CEE5  +
mov eax [esp+84h+var_70] +
mov ebx [esp+84h+arg_4] +
movzx eax word ptr [eax+2] +
movzx eax word ptr [ebx+eax*2] +
mov [esp+84h+var_84] eax +
mov eax [esp+84h+var_84] +
cmp [esp+84h+var_68] eax +
jnb loc_45CE64  +
mov ebx [esp+84h+var_80] +
and ebx [esp+84h+var_50] +
cmp ebx [esp+84h+var_54] +
jz loc_45CE64  +
mov edi [esp+84h+var_6C] +
mov edx 1 +
mov esi [esp+84h+var_60] +
mov eax [esp+84h+var_7C] +
lea edi [edi+esi*4] +
mov [esp+84h+var_6C] edi +
mov edi [esp+84h+var_84] +
test eax eax +
cmovz eax [esp+84h+var_68] +
mov ebp edi +
mov esi eax +
sub ebp eax +
mov ecx ebp +
shl edx cl +
mov ecx [esp+84h+var_64] +
mov [esp+84h+var_7C] eax +
cmp edi ecx +
jnb loc_45CDF9  +
movzx eax word ptr [esp+edi*2+84h+var_40] +
sub edx eax +
test edx edx +
jle loc_45CDF9  +
lea ecx [esp+esi*2+84h+var_40] +
mov edi [esp+84h+var_64] +
jmp loc_45CDED  +
movzx eax word ptr [ecx+ebp*2] +
sub edx eax +
test edx edx +
jle loc_45CDF9  +
add ebp 1 +
add edx edx +
lea eax [esi+ebp] +
cmp eax edi +
jb loc_45CDE3  +
mov eax 1 +
mov ecx ebp +
shl eax cl +
add [esp+84h+var_5C] eax +
cmp [esp+84h+var_5C] 353h +
ja loc_45CF28  +
cmp [esp+84h+var_5C] 24Fh +
ja loc_45CF38  +
mov eax [esp+84h+arg_C] +
mov ecx ebp +
lea edx ds:0[ebx*4] +
mov [esp+84h+var_54] ebx +
mov eax [eax] +
mov [eax+ebx*4] cl +
mov eax [esp+84h+arg_C] +
movzx ecx byte ptr [esp+84h+var_68] +
mov eax [eax] +
mov [eax+edx+1] cl +
mov eax [esp+84h+arg_C] +
mov ecx [eax] +
mov eax [esp+84h+var_6C] +
sub eax ecx +
sar eax 2 +
mov [ecx+edx+2] ax +
add [esp+84h+var_70] 2 +
jmp loc_45CC60  +
add esp 84h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+84h+var_41] 0 +
jz loc_45CC25  +
add esp 84h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+84h+var_80] 0 +
jmp loc_45CD3B  +
xor esi esi +
mov byte ptr [esp+84h+var_74] 60h +
jmp loc_45CC97  +
cmp [esp+84h+var_42] 0 +
jz loc_45CC0D  +
jmp loc_45CE89  +
mov eax [esp+84h+arg_14] +
mov [esp+84h+var_58] 13h +
mov [esp+84h+var_48] eax +
mov [esp+84h+var_4C] eax +
jmp loc_45CBD1  +
mov ecx [esp+84h+var_80] +
test ecx ecx +
jz loc_45CF04  +
mov eax [esp+84h+var_6C] +
mov ebx [esp+84h+var_80] +
lea eax [eax+ebx*4] +
mov [eax+1] dl +
xor edx edx +
mov byte ptr [eax] 40h +
mov [eax+2] dx +
mov eax [esp+84h+var_5C] +
mov esi [esp+84h+arg_C] +
mov ebx [esp+84h+var_68] +
shl eax 2 +
add [esi] eax +
mov eax [esp+84h+arg_10] +
mov [eax] ebx +
xor eax eax +
jmp loc_45CAA2  +
cmp [esp+84h+var_42] 0 +
jz loc_45CE14  +
jmp loc_45CE89  +
cmp [esp+84h+var_41] 0 +
jz loc_45CE22  +
jmp loc_45CE89  +
***
push esi  +
push ebx  +
sub esp 44h +
mov eax [esp+44h+arg_0] +
mov eax [eax+1Ch] +
mov esi eax +
mov [esp+44h+var_38] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax] +
sub eax 1 +
mov edi eax +
mov [esp+44h+var_44] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax+4] +
lea eax [edi+eax-5] +
mov [esp+44h+var_2C] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax+0Ch] +
lea edi [eax-1] +
mov eax [esp+44h+arg_0] +
mov eax [eax+10h] +
mov edx eax +
sub edx [esp+44h+arg_4] +
lea eax [edi+eax-101h] +
mov [esp+44h+var_34] eax +
mov eax esi +
lea ecx [edi+edx] +
mov edx 1 +
mov [esp+44h+var_14] ecx +
mov ecx [esi+28h] +
mov esi [esi+2Ch] +
mov [esp+44h+var_20] ecx +
mov [esp+44h+var_C] esi +
mov esi [eax+30h] +
mov [esp+44h+var_28] esi +
mov esi [eax+34h] +
mov [esp+44h+var_1C] esi +
mov esi eax +
mov eax [eax+38h] +
mov ebx [esi+4Ch] +
mov ebp [esi+3Ch] +
mov [esp+44h+var_40] ebx +
mov ebx [esi+50h] +
mov [esp+44h+var_24] ebx +
mov ecx [esi+54h] +
mov ebx edx +
shl ebx cl +
mov ecx [esi+58h] +
mov esi [esp+44h+var_1C] +
lea ebx [ebx-1] +
mov [esp+44h+var_30] ebx +
shl edx cl +
lea ebx [edx-1] +
mov [esp+44h+var_18] ebx +
lea ebx [esi-1] +
mov esi [esp+44h+var_28] +
add esi [esp+44h+var_20] +
mov [esp+44h+var_8] ebx +
mov [esp+44h+var_4] esi +
cmp ebp 0Eh +
ja loc_45D039  +
mov esi [esp+44h+var_44] +
mov ecx ebp +
movzx ebx byte ptr [esi+1] +
lea esi [esi+2] +
movzx edx byte ptr [esi] +
mov [esp+44h+var_44] esi +
shl ebx cl +
lea ecx [ebp+8] +
add ebp 10h +
shl edx cl +
add edx ebx +
add eax edx +
mov edx [esp+44h+var_30] +
mov esi [esp+44h+var_40] +
and edx eax +
lea ebx [esi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl dl +
jz loc_45D0B9  +
test dl 10h +
jnz loc_45D134  +
test dl 40h +
jnz loc_45D305  +
mov [esp+44h+var_3C] edi +
mov edi [esp+44h+var_40] +
jmp loc_45D08A  +
test dl 10h +
jnz loc_45D130  +
test dl 40h +
jnz loc_45D301  +
mov ecx edx +
mov esi 1 +
shl esi cl +
mov edx esi +
sub edx 1 +
and edx eax +
add edx ebx +
lea ebx [edi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl dl +
jnz loc_45D078  +
mov edi [esp+44h+var_3C] +
mov [edi+1] bl +
add edi 1 +
cmp edi [esp+44h+var_34] +
jnb loc_45D0D2  +
mov ecx [esp+44h+var_2C] +
cmp [esp+44h+var_44] ecx +
jb loc_45D014  +
mov edx [esp+44h+var_44] +
mov ecx ebp +
mov ebx 1 +
shr ecx 3 +
mov esi [esp+44h+arg_0] +
sub edx ecx +
shl ecx 3 +
sub ebp ecx +
mov ecx ebp +
shl ebx cl +
sub ebx 1 +
and ebx eax +
lea eax [edx+1] +
mov [esi] eax +
lea eax [edi+1] +
mov [esi+0Ch] eax +
mov eax [esp+44h+var_2C] +
sub eax edx +
add eax 5 +
mov [esi+4] eax +
mov eax [esp+44h+var_34] +
sub eax edi +
add eax 101h +
mov [esi+10h] eax +
mov eax [esp+44h+var_38] +
mov [eax+38h] ebx +
mov [eax+3Ch] ebp +
add esp 44h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+44h+var_3C] +
and edx 0Fh +
movzx ecx bx +
movzx ebx dl +
test ebx ebx +
mov [esp+44h+var_3C] ecx +
jz loc_45D178  +
cmp ebx ebp +
jbe loc_45D162  +
mov ecx [esp+44h+var_44] +
movzx esi byte ptr [ecx+1] +
mov ecx ebp +
add ebp 8 +
shl esi cl +
mov ecx [esp+44h+var_44] +
add eax esi +
lea esi [ecx+1] +
mov [esp+44h+var_44] esi +
mov ecx edx +
mov esi 1 +
shl esi cl +
sub ebp ebx +
sub esi 1 +
and esi eax +
add [esp+44h+var_3C] esi +
shr eax cl +
cmp ebp 0Eh +
jbe loc_45D320  +
mov edx [esp+44h+var_18] +
mov ecx [esp+44h+var_24] +
and edx eax +
lea ebx [ecx+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl 10h +
jnz loc_45D1F1  +
test dl 40h +
jnz loc_45D366  +
mov [esp+44h+var_10] edi +
mov edi [esp+44h+var_24] +
jmp loc_45D1C1  +
test dl 40h +
jnz loc_45D362  +
mov ecx edx +
mov esi 1 +
shl esi cl +
mov edx esi +
sub edx 1 +
and edx eax +
add edx ebx +
lea ebx [edi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl 10h +
jz loc_45D1B8  +
mov edi [esp+44h+var_10] +
movzx ecx bx +
mov ebx edx +
and ebx 0Fh +
movzx esi bl +
cmp esi ebp +
mov [esp+44h+var_10] ecx +
jbe loc_45D222  +
mov ecx [esp+44h+var_44] +
movzx edx byte ptr [ecx+1] +
mov ecx ebp +
shl edx cl +
lea ecx [ebp+8] +
add eax edx +
cmp esi ecx +
ja loc_45D461  +
add [esp+44h+var_44] 1 +
mov ebp ecx +
mov ecx ebx +
mov edx 1 +
shl edx cl +
sub ebp esi +
sub edx 1 +
and edx eax +
add edx [esp+44h+var_10] +
shr eax cl +
mov ecx edi +
sub ecx [esp+44h+var_14] +
mov [esp+44h+var_10] edx +
cmp [esp+44h+var_10] ecx +
mov edx ecx +
jbe loc_45D380  +
mov ecx [esp+44h+var_10] +
sub ecx edx +
cmp [esp+44h+var_C] ecx +
jnb loc_45D26C  +
mov esi [esp+44h+var_38] +
mov esi [esi+1BC0h] +
test esi esi +
jnz loc_45D4C5  +
mov ebx [esp+44h+var_28] +
test ebx ebx +
jnz loc_45D3E5  +
mov edx [esp+44h+var_20] +
sub edx ecx +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_45D2A5  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
nop   +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_45D290  +
mov edx edi +
sub edx [esp+44h+var_10] +
cmp [esp+44h+var_3C] 2 +
mov ecx [esp+44h+var_3C] +
jbe loc_45D2D5  +
movzx ebx byte ptr [edx+1] +
add edx 3 +
sub ecx 3 +
add edi 3 +
mov [edi-2] bl +
movzx ebx byte ptr [edx-1] +
mov [edi-1] bl +
movzx ebx byte ptr [edx] +
cmp ecx 2 +
mov [edi] bl +
ja loc_45D2B0  +
mov [esp+44h+var_3C] ecx +
mov ecx [esp+44h+var_3C] +
test ecx ecx +
jz loc_45D0BF  +
movzx ecx byte ptr [edx+1] +
cmp [esp+44h+var_3C] 2 +
mov [edi+1] cl +
jnz loc_45D4B4  +
movzx edx byte ptr [edx+2] +
add edi 2 +
mov [edi] dl +
jmp loc_45D0BF  +
mov edi [esp+44h+var_3C] +
and edx 20h +
jz loc_45D348  +
mov esi [esp+44h+var_38] +
mov dword ptr [esi] 0Bh +
jmp loc_45D0D2  +
mov esi [esp+44h+var_44] +
mov ecx ebp +
movzx ebx byte ptr [esi+1] +
movzx edx byte ptr [esi+2] +
shl ebx cl +
lea ecx [ebp+8] +
add ebp 10h +
shl edx cl +
mov ecx esi +
add edx ebx +
add ecx 2 +
add eax edx +
mov [esp+44h+var_44] ecx +
jmp loc_45D181  +
mov ecx [esp+44h+arg_0] +
mov esi [esp+44h+var_38] +
mov dword ptr [ecx+18h] offset aInvalidLiter_1 +
mov dword ptr [esi] 1Dh +
jmp loc_45D0D2  +
mov edi [esp+44h+var_10] +
mov ecx [esp+44h+arg_0] +
mov dword ptr [ecx+18h] offset aInvalidDista_2 +
mov ecx [esp+44h+var_38] +
mov dword ptr [ecx] 1Dh +
jmp loc_45D0D2  +
mov edx edi +
mov ebx [esp+44h+var_3C] +
sub edx [esp+44h+var_10] +
mov [esp+44h+var_10] eax +
jmp loc_45D394  +
mov edi ecx +
mov edx esi +
movzx ecx byte ptr [edx+1] +
sub ebx 3 +
cmp ebx 2 +
lea esi [edx+3] +
mov [edi+1] cl +
movzx ecx byte ptr [edx+2] +
mov [edi+2] cl +
movzx eax byte ptr [edx+3] +
lea ecx [edi+3] +
mov [edi+3] al +
ja loc_45D390  +
test ebx ebx +
mov eax [esp+44h+var_10] +
mov [esp+44h+var_3C] ebx +
jz loc_45D47D  +
movzx ecx byte ptr [edx+4] +
cmp ebx 2 +
mov [edi+4] cl +
jnz loc_45D4BC  +
movzx edx byte ptr [edx+5] +
add edi 5 +
mov [edi] dl +
jmp loc_45D0BF  +
cmp [esp+44h+var_28] ecx +
jnb loc_45D484  +
mov edx [esp+44h+var_4] +
sub edx ecx +
sub ecx [esp+44h+var_28] +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_45D2A5  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
lea esi [esi+0] +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_45D410  +
mov esi [esp+44h+var_3C] +
cmp [esp+44h+var_28] esi +
mov edx [esp+44h+var_8] +
jnb loc_45D2A5  +
mov edi [esp+44h+var_28] +
xor edx edx +
sub [esp+44h+var_3C] edi +
mov esi edi +
mov edi [esp+44h+var_1C] +
movzx ebx byte ptr [edi+edx] +
mov [ecx+edx+1] bl +
add edx 1 +
cmp edx esi +
jnz loc_45D441  +
mov edi [esp+44h+var_28] +
add edi ecx +
mov edx edi +
sub edx [esp+44h+var_10] +
jmp loc_45D2A5  +
mov edx [esp+44h+var_44] +
add ebp 10h +
movzx edx byte ptr [edx+2] +
shl edx cl +
add eax edx +
mov edx [esp+44h+var_44] +
lea ecx [edx+2] +
mov [esp+44h+var_44] ecx +
jmp loc_45D222  +
mov edi ecx +
jmp loc_45D0BF  +
mov edx [esp+44h+var_28] +
sub edx ecx +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_45D2A5  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
nop   +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_45D4A0  +
jmp loc_45D29F  +
add edi 1 +
jmp loc_45D0BF  +
add edi 4 +
nop   +
jmp loc_45D0BF  +
mov esi [esp+44h+arg_0] +
mov dword ptr [esi+18h] offset aInvalidDista_3 +
mov esi [esp+44h+var_38] +
mov dword ptr [esi] 1Dh +
jmp loc_45D0D2  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 28h +
mov ebx [eax+6Ch] +
mov [esp+2Ch+var_2C] edx +
mov edx [esi+90h] +
mov esi [esi+2Ch] +
mov ebp [eax+38h] +
mov [esp+2Ch+var_10] eax +
mov edi [eax+7Ch] +
mov eax [eax+78h] +
mov [esp+2Ch+var_14] edx +
lea edx [esi-106h] +
lea ecx [ebp+ebx+0] +
cmp ebx edx +
mov [esp+2Ch+var_18] ecx +
mov [esp+2Ch+var_28] 0 +
mov ecx eax +
jbe loc_45D533  +
lea edx [ebx+106h] +
mov [esp+2Ch+var_28] edx +
sub [esp+2Ch+var_28] esi +
mov esi [esp+2Ch+var_10] +
lea ebx [ebp+ebx+102h] +
mov [esp+2Ch+var_8] ebx +
mov edx [esi+40h] +
mov [esp+2Ch+var_24] edx +
mov edx [esi+34h] +
mov [esp+2Ch+var_20] edx +
mov edx [esp+2Ch+var_18] +
movzx ebx byte ptr [edx+eax-1] +
mov [esp+2Ch+var_1A] bl +
movzx ebx byte ptr [edx+eax] +
mov edx [esp+2Ch+var_2C] +
mov [esp+2Ch+var_1C] bl +
mov ebx edi +
shr ebx 2 +
cmp eax [esi+8Ch] +
mov eax [esi+74h] +
cmovnb edi ebx +
mov ebx [esp+2Ch+var_14] +
mov [esp+2Ch+var_C] eax +
cmp ebx eax +
cmova ebx eax +
mov [esp+2Ch+var_14] ebx +
jmp loc_45D5AF  +
mov eax [esp+2Ch+var_24] +
and edx [esp+2Ch+var_20] +
movzx edx word ptr [eax+edx*2] +
cmp [esp+2Ch+var_28] edx +
jnb loc_45D6D0  +
sub edi 1 +
jz loc_45D6D0  +
lea eax [ebp+edx+0] +
mov esi ecx +
movzx ebx byte ptr [eax+ecx] +
mov [esp+2Ch+var_2C] eax +
movzx eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_1B] bl +
cmp bl al +
jnz loc_45D590  +
mov eax [esp+2Ch+var_2C] +
movzx ebx byte ptr [eax+ecx-1] +
cmp bl [esp+2Ch+var_1A] +
mov [esp+2Ch+var_19] bl +
jnz loc_45D590  +
mov ebx [esp+2Ch+var_18] +
movzx ebx byte ptr [ebx] +
cmp [eax] bl +
jnz loc_45D590  +
mov ebx [esp+2Ch+var_18] +
movzx ebx byte ptr [ebx+1] +
cmp [eax+1] bl +
jnz loc_45D590  +
mov esi [esp+2Ch+var_18] +
add eax 2 +
movzx ebx [esp+2Ch+var_1B] +
mov [esp+2Ch+var_2C] edx +
add esi 2 +
jmp loc_45D670  +
movzx edx byte ptr [eax+2] +
cmp [esi+2] dl +
jnz loc_45D74E  +
movzx edx byte ptr [eax+3] +
cmp [esi+3] dl +
jnz loc_45D73F  +
movzx edx byte ptr [eax+4] +
cmp [esi+4] dl +
jnz loc_45D730  +
movzx edx byte ptr [eax+5] +
cmp [esi+5] dl +
jnz loc_45D721  +
movzx edx byte ptr [eax+6] +
cmp [esi+6] dl +
jnz loc_45D712  +
movzx edx byte ptr [eax+7] +
cmp [esi+7] dl +
jnz loc_45D703  +
add eax 8 +
add esi 8 +
movzx edx byte ptr [eax] +
cmp [esi] dl +
jnz loc_45D6FA  +
cmp [esp+2Ch+var_8] esi +
jbe loc_45D6FA  +
movzx edx byte ptr [eax+1] +
cmp [esi+1] dl +
jz loc_45D607  +
mov edx [esp+2Ch+var_2C] +
add esi 1 +
mov [esp+2Ch+var_1B] bl +
mov eax [esp+2Ch+var_8] +
sub esi eax +
sub eax 102h +
add esi 102h +
cmp ecx esi +
mov [esp+2Ch+var_18] eax +
jge loc_45D6E1  +
mov eax [esp+2Ch+var_10] +
cmp [esp+2Ch+var_14] esi +
mov [eax+70h] edx +
jle loc_45D6D0  +
mov eax [esp+2Ch+var_18] +
mov ecx esi +
movzx eax byte ptr [eax+esi-1] +
mov [esp+2Ch+var_1A] al +
mov eax [esp+2Ch+var_8] +
movzx eax byte ptr [eax+esi-102h] +
mov [esp+2Ch+var_1C] al +
jmp loc_45D590  +
mov eax [esp+2Ch+var_C] +
cmp esi eax +
cmovbe eax esi +
add esp 28h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax [esp+2Ch+var_1B] +
mov esi ecx +
mov [esp+2Ch+var_1C] al +
movzx eax [esp+2Ch+var_19] +
mov [esp+2Ch+var_1A] al +
jmp loc_45D590  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
jmp loc_45D683  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 7 +
jmp loc_45D683  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 6 +
jmp loc_45D683  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 5 +
jmp loc_45D683  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 4 +
jmp loc_45D683  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 3 +
jmp loc_45D683  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 2 +
jmp loc_45D683  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [eax+2Ch] +
mov edi [ebp+74h] +
lea ecx [eax+eax] +
mov edx eax +
mov [esp+48h+var_20] eax +
sub eax 106h +
mov [esp+48h+var_1C] ecx +
mov [esp+48h+var_24] eax +
mov ebx [ebp+3Ch] +
mov eax [ebp+6Ch] +
add edx [esp+48h+var_24] +
sub ebx edi +
sub ebx eax +
cmp eax edx +
jnb loc_45D8E0  +
mov esi [ebp+0] +
mov edi [esi+4] +
test edi edi +
jz loc_45D970  +
cmp ebx edi +
mov edx [ebp+38h] +
mov ecx [ebp+6Ch] +
mov eax [ebp+74h] +
jnb loc_45D895  +
test ebx ebx +
jnz loc_45DA34  +
xor edi edi +
mov esi [ebp+16B4h] +
add edi eax +
mov [ebp+74h] edi +
lea eax [edi+esi] +
cmp eax 2 +
jbe loc_45D873  +
mov ecx [ebp+58h] +
mov edx [ebp+6Ch] +
mov eax [ebp+38h] +
mov [esp+48h+var_34] ecx +
mov ecx [ebp+54h] +
sub edx esi +
movzx ebx byte ptr [eax+edx] +
mov [esp+48h+var_2C] eax +
mov [esp+48h+var_30] ecx +
mov [esp+48h+var_28] ecx +
movzx ecx byte ptr [esp+48h+var_34] +
mov [ebp+48h] ebx +
movzx eax byte ptr [eax+edx+1] +
shl ebx cl +
xor eax ebx +
and eax [esp+48h+var_30] +
mov [esp+48h+var_30] edi +
mov [ebp+48h] eax +
jmp loc_45D86B  +
mov eax [esp+48h+var_2C] +
sub esi 1 +
mov ebx [ebp+48h] +
movzx ecx byte ptr [esp+48h+var_34] +
movzx eax byte ptr [eax+edx+2] +
shl ebx cl +
mov ecx [ebp+40h] +
xor eax ebx +
mov ebx [ebp+44h] +
and eax [esp+48h+var_28] +
mov [ebp+48h] eax +
lea eax [ebx+eax*2] +
mov ebx [ebp+34h] +
movzx edi word ptr [eax] +
and ebx edx +
mov [ecx+ebx*2] di +
mov [eax] dx +
mov eax [esp+48h+var_30] +
add edx 1 +
mov [ebp+16B4h] esi +
add eax esi +
cmp eax 2 +
jbe loc_45D86F  +
test esi esi +
jnz loc_45D820  +
mov edi [esp+48h+var_30] +
cmp edi 105h +
ja loc_45D970  +
mov eax [ebp+0] +
mov eax [eax+4] +
test eax eax +
jz loc_45D970  +
mov edx [ebp+2Ch] +
jmp loc_45D785  +
mov [esp+48h+var_34] 0 +
add eax ecx +
lea ebx [edx+eax] +
mov eax [esp+48h+var_34] +
mov [esi+4] eax +
mov eax [esi] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call memcpy  +
mov eax [esi+1Ch] +
mov eax [eax+18h] +
cmp eax 1 +
jz loc_45D9C0  +
cmp eax 2 +
jz loc_45D9DB  +
add [esi] edi +
add [esi+8] edi +
mov eax [ebp+74h] +
jmp loc_45D7C4  +
mov esi [esp+48h+var_20] +
mov eax [ebp+38h] +
mov [esp+48h+var_40] esi +
lea edx [eax+esi] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call memcpy  +
mov ecx esi +
mov eax [ebp+44h] +
sub [ebp+70h] esi +
sub [ebp+6Ch] esi +
sub [ebp+5Ch] esi +
mov esi [ebp+4Ch] +
mov [esp+48h+var_34] ebx +
mov ebx ecx +
lea edx [eax+esi*2] +
sub edx 2 +
movzx ecx word ptr [edx] +
xor eax eax +
mov edi ecx +
sub edi ebx +
cmp ebx ecx +
cmovbe eax edi +
sub esi 1 +
mov [edx] ax +
jnz loc_45D914  +
mov eax [esp+48h+var_20] +
mov edx [esp+48h+var_1C] +
add edx [ebp+40h] +
mov esi eax +
mov ebx eax +
lea esi [esi+0] +
sub edx 2 +
movzx ecx word ptr [edx] +
xor eax eax +
mov edi ecx +
sub edi ebx +
cmp ebx ecx +
cmovbe eax edi +
sub esi 1 +
mov [edx] ax +
jnz loc_45D940  +
mov esi [ebp+0] +
mov ebx [esp+48h+var_34] +
add ebx [esp+48h+var_20] +
mov edi [esi+4] +
test edi edi +
jnz loc_45D7A9  +
nop   +
mov eax [ebp+16C0h] +
mov edx [ebp+3Ch] +
cmp eax edx +
jnb loc_45D9B8  +
mov ebx [ebp+74h] +
add ebx [ebp+6Ch] +
cmp eax ebx +
jnb loc_45D9F6  +
mov eax [ebp+38h] +
sub edx ebx +
mov esi 102h +
cmp edx 102h +
cmovbe esi edx +
mov [esp+48h+var_40] esi +
add eax ebx +
add ebx esi +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] eax +
call memset  +
mov [ebp+16C0h] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+30h] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_45C1D0  +
mov [esi+30h] eax +
jmp loc_45D8D3  +
mov eax [esi+30h] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_45C700  +
mov [esi+30h] eax +
jmp loc_45D8D3  +
lea ecx [ebx+102h] +
cmp eax ecx +
jnb loc_45D9B8  +
sub ebx eax +
sub edx eax +
add ebx 102h +
cmp ebx edx +
cmova ebx edx +
add eax [ebp+38h] +
mov [esp+48h+var_40] ebx +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] eax +
call memset  +
add [ebp+16C0h] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub edi ebx +
mov [esp+48h+var_34] edi +
mov edi ebx +
jmp loc_45D89D  +
***
jmp sub_45DA50  +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov esi [eax+1Ch] +
mov [esp+10h+var_10] esi +
call sub_461780  +
mov eax [esi+14h] +
mov edi [ebx+10h] +
cmp edi eax +
cmova edi eax +
test edi edi +
jnz loc_45DA80  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+10h] +
mov eax [ebx+0Ch] +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
call memcpy  +
add [ebx+0Ch] edi +
add [esi+10h] edi +
add [ebx+14h] edi +
sub [ebx+10h] edi +
sub [esi+14h] edi +
jnz loc_45DA72  +
mov eax [esi+8] +
mov [esi+10h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+50h] +
mov ebp [edi+74h] +
nop   +
cmp ebp 105h +
jbe loc_45DD3E  +
mov ebx [edi+6Ch] +
mov eax [edi+38h] +
mov ecx [edi+58h] +
mov edx [edi+48h] +
mov esi [edi+34h] +
movzx eax byte ptr [eax+ebx+2] +
shl edx cl +
mov ecx [edi+40h] +
and esi ebx +
xor eax edx +
mov edx [edi+44h] +
and eax [edi+54h] +
mov [edi+48h] eax +
lea eax [edx+eax*2] +
movzx edx word ptr [eax] +
mov [ecx+esi*2] dx +
mov ecx [edi+70h] +
test edx edx +
mov [eax] bx +
mov eax [edi+60h] +
mov dword ptr [edi+60h] 2 +
mov [edi+64h] ecx +
mov [edi+78h] eax +
jz loc_45DB43  +
cmp eax [edi+80h] +
jnb loc_45DB43  +
mov ecx [edi+2Ch] +
mov esi ebx +
sub esi edx +
sub ecx 106h +
cmp esi ecx +
jbe loc_45DE00  +
cmp eax 2 +
jbe loc_45DCC7  +
cmp [edi+60h] eax +
ja loc_45DCC7  +
mov edx [edi+74h] +
sub eax 3 +
mov ecx [edi+16A4h] +
lea ebp [ebx+edx-3] +
mov edx [edi+16A0h] +
sub bx [edi+64h] +
lea esi [ebx-1] +
sub ebx 2 +
mov [ecx+edx*2] si +
mov ecx [edi+1698h] +
lea esi [edx+1] +
mov [edi+16A0h] esi +
mov [ecx+edx] al +
movzx eax al +
movzx eax ds:byte_49E680[eax] +
add word ptr [edi+eax*4+498h] 1 +
cmp bx 0FFh +
ja loc_45DDB0  +
movzx ebx bx +
movzx eax ds:byte_49E780[ebx] +
add word ptr [edi+eax*4+988h] 1 +
mov eax [edi+16A0h] +
mov esi [edi+74h] +
mov [esp+18h] ebp +
mov [esp+20h] eax +
mov eax [edi+169Ch] +
add esi 1 +
mov [esp+1Ch] esi +
sub eax 1 +
mov [esp+24h] eax +
mov eax [edi+78h] +
sub [esp+1Ch] eax +
mov esi [esp+1Ch] +
lea ebx [eax-2] +
mov [esp+28h] eax +
mov eax [edi+6Ch] +
mov [edi+74h] esi +
mov [edi+78h] ebx +
mov [esp+2Ch] eax +
mov edx eax +
jmp loc_45DC06  +
mov edx eax +
lea eax [edx+1] +
cmp [esp+18h] eax +
mov [edi+6Ch] eax +
jb loc_45DC42  +
mov ecx [edi+38h] +
mov esi [edi+48h] +
movzx edx byte ptr [ecx+edx+3] +
mov ecx [edi+58h] +
shl esi cl +
mov ecx [edi+44h] +
xor edx esi +
mov esi [edi+34h] +
and edx [edi+54h] +
mov [edi+48h] edx +
lea edx [ecx+edx*2] +
mov ecx [edi+40h] +
movzx ebp word ptr [edx] +
and esi eax +
mov [ecx+esi*2] bp +
mov [edx] ax +
sub ebx 1 +
test ebx ebx +
mov [edi+78h] ebx +
jnz loc_45DC04  +
mov esi [esp+2Ch] +
mov eax [esp+28h] +
mov dword ptr [edi+68h] 0 +
mov ebp [esp+1Ch] +
mov dword ptr [edi+60h] 2 +
lea eax [eax+esi-1] +
mov esi [esp+24h] +
cmp [esp+20h] esi +
mov [edi+6Ch] eax +
jnz loc_45DAD0  +
mov edx [edi+5Ch] +
xor ecx ecx +
sub eax edx +
test edx edx +
js loc_45DC8B  +
mov ecx [edi+38h] +
add ecx edx +
mov [esp+8] eax +
mov [esp+4] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp] edi +
call sub_461880  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_45DA50  +
mov eax [edi] +
mov ebp [eax+10h] +
test ebp ebp +
jnz loc_45DACB  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [edi+68h] +
test esi esi +
jz loc_45DD90  +
mov eax [edi+38h] +
mov ecx [edi+16A4h] +
movzx edx byte ptr [eax+ebx-1] +
xor ebx ebx +
mov eax [edi+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [edi+1698h] +
lea ebx [eax+1] +
mov [edi+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [edi+edx*4+94h] 1 +
mov eax [edi+169Ch] +
sub eax 1 +
cmp [edi+16A0h] eax +
jz loc_45DDC3  +
mov eax [edi+74h] +
add dword ptr [edi+6Ch] 1 +
lea ebp [eax-1] +
mov eax [edi] +
mov [edi+74h] ebp +
mov eax [eax+10h] +
test eax eax +
jz loc_45DCBD  +
cmp ebp 105h +
ja loc_45DADC  +
mov eax edi +
call sub_45D760  +
mov eax [edi+74h] +
cmp eax 105h +
ja loc_45DADC  +
mov edx [esp+54h] +
test edx edx +
jz loc_45DCBD  +
test eax eax +
jz loc_45DE45  +
cmp eax 2 +
ja loc_45DADC  +
mov eax [edi+60h] +
mov edx [edi+70h] +
mov dword ptr [edi+60h] 2 +
mov ebx [edi+6Ch] +
mov [edi+78h] eax +
mov [edi+64h] edx +
jmp loc_45DB43  +
***
mov eax [edi+74h] +
add ebx 1 +
mov dword ptr [edi+68h] 1 +
mov [edi+6Ch] ebx +
lea ebp [eax-1] +
mov [edi+74h] ebp +
jmp loc_45DAD0  +
***
shr bx 7 +
movzx ebx bx +
movzx eax ds:byte_49E880[ebx] +
jmp loc_45DBB3  +
***
mov edx [edi+5Ch] +
xor ecx ecx +
mov eax [edi+6Ch] +
sub eax edx +
test edx edx +
js loc_45DDD6  +
mov ecx [edi+38h] +
add ecx edx +
mov [esp+8] eax +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] ecx +
mov [esp] edi +
call sub_461880  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_45DA50  +
jmp loc_45DD1C  +
***
mov eax edi +
call sub_45D4E0  +
cmp eax 5 +
mov [edi+60h] eax +
ja loc_45DE1D  +
cmp dword ptr [edi+88h] 1 +
jz loc_45DE28  +
cmp eax 3 +
jz loc_45DE34  +
mov ebx [edi+6Ch] +
mov eax [edi+78h] +
jmp loc_45DB43  +
***
mov ebx [edi+6Ch] +
mov dword ptr [edi+60h] 2 +
jmp loc_45DE20  +
***
mov ebx [edi+6Ch] +
mov eax ebx +
sub eax [edi+70h] +
cmp eax 1000h +
jbe loc_45DE20  +
jmp loc_45DE2B  +
***
mov esi [edi+68h] +
test esi esi +
jnz loc_45DEC8  +
mov edx [edi+6Ch] +
mov eax 2 +
cmp edx 2 +
cmovbe eax edx +
cmp dword ptr [esp+54h] 4 +
mov [edi+16B4h] eax +
jz loc_45DF0C  +
mov ecx [edi+16A0h] +
mov eax 1 +
test ecx ecx +
jz loc_45DCBF  +
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_45DE8E  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] edi +
mov dword ptr [esp+0Ch] 0 +
call sub_461880  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_45DA50  +
mov eax [edi] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
add esp 3Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+6Ch] +
xor ebx ebx +
mov edx [edi+38h] +
mov ecx [edi+16A4h] +
movzx edx byte ptr [edx+eax-1] +
mov eax [edi+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [edi+1698h] +
lea ebx [eax+1] +
mov [edi+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [edi+edx*4+94h] 1 +
mov dword ptr [edi+68h] 0 +
jmp loc_45DE4C  +
***
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_45DF1C  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] edi +
mov dword ptr [esp+0Ch] 1 +
call sub_461880  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_45DA50  +
mov eax [edi] +
cmp dword ptr [eax+10h] 1 +
sbb eax eax +
add esp 3Ch +
pop ebx  +
add eax 3 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov edi [esp+60h] +
nop   +
lea esi [esi+0] +
cmp dword ptr [edi+74h] 105h +
jbe loc_45E200  +
mov ebx [edi+6Ch] +
mov eax [edi+38h] +
mov ecx [edi+58h] +
mov edx [edi+48h] +
mov esi [edi+34h] +
movzx eax byte ptr [eax+ebx+2] +
shl edx cl +
mov ecx [edi+40h] +
and esi ebx +
xor eax edx +
mov edx [edi+44h] +
and eax [edi+54h] +
mov [edi+48h] eax +
lea eax [edx+eax*2] +
movzx edx word ptr [eax] +
test edx edx +
mov [ecx+esi*2] dx +
mov [eax] bx +
jz loc_45DFC8  +
mov eax [edi+2Ch] +
mov ecx ebx +
sub ecx edx +
sub eax 106h +
cmp ecx eax +
jbe loc_45E250  +
mov eax [edi+60h] +
cmp eax 2 +
jbe loc_45E170  +
mov edx [edi+16A0h] +
sub eax 3 +
mov ecx [edi+16A4h] +
sub bx [edi+70h] +
lea esi [edx+1] +
mov [ecx+edx*2] bx +
mov ecx [edi+1698h] +
sub ebx 1 +
mov [edi+16A0h] esi +
mov [ecx+edx] al +
movzx eax al +
movzx eax ds:byte_49E680[eax] +
add word ptr [edi+eax*4+498h] 1 +
cmp bx 0FFh +
ja loc_45E236  +
movzx ebx bx +
movzx eax ds:byte_49E780[ebx] +
add word ptr [edi+eax*4+988h] 1 +
mov eax [edi+169Ch] +
mov esi [edi+60h] +
sub eax 1 +
cmp [edi+16A0h] eax +
setz al  +
movzx eax al +
mov [esp+1Ch] eax +
mov eax [edi+74h] +
sub eax esi +
cmp esi [edi+80h] +
mov [edi+74h] eax +
ja loc_45E1D0  +
cmp eax 2 +
jbe loc_45E1D0  +
mov ecx [edi+40h] +
lea ebx [esi-1] +
mov eax [edi+6Ch] +
mov edx [edi+54h] +
mov [edi+60h] ebx +
mov ebp [edi+48h] +
mov [esp+20h] ecx +
mov ecx [edi+34h] +
mov [esp+38h] eax +
mov [esp+30h] edx +
lea edx [eax+1] +
mov [esp+3Ch] esi +
mov [esp+24h] ecx +
mov ecx [edi+44h] +
mov [esp+18h] ebx +
mov [esp+28h] ecx +
mov ecx [edi+38h] +
mov [esp+2Ch] ecx +
mov ecx [edi+58h] +
mov [esp+34h] ecx +
jmp loc_45E0B7  +
mov [esp+18h] ebx +
mov ebp eax +
mov eax [esp+2Ch] +
movzx ecx byte ptr [esp+34h] +
mov [edi+6Ch] edx +
mov esi [esp+28h] +
movzx eax byte ptr [eax+edx+2] +
shl ebp cl +
mov ecx [esp+20h] +
xor eax ebp +
mov ebp [esp+24h] +
and eax [esp+30h] +
lea esi [esi+eax*2] +
and ebp edx +
movzx ebx word ptr [esi] +
mov [edi+48h] eax +
mov [ecx+ebp*2] bx +
mov ebx [esp+18h] +
mov [esi] dx +
add edx 1 +
sub ebx 1 +
test ebx ebx +
mov [edi+60h] ebx +
jnz loc_45E0B1  +
mov esi [esp+3Ch] +
mov eax [esp+38h] +
add eax esi +
mov [edi+6Ch] eax +
lea esi [esi+0] +
mov esi [esp+1Ch] +
test esi esi +
jz loc_45DF70  +
mov edx [edi+5Ch] +
xor ecx ecx +
mov eax [edi+6Ch] +
sub eax edx +
test edx edx +
js loc_45E12F  +
mov ecx [edi+38h] +
add ecx edx +
mov [esp+8] eax +
mov [esp+4] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp] edi +
call sub_461880  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_45DA50  +
mov eax [edi] +
mov ebx [eax+10h] +
test ebx ebx +
jnz loc_45DF70  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+38h] +
xor ebp ebp +
mov ecx [edi+16A4h] +
movzx edx byte ptr [eax+ebx] +
mov eax [edi+16A0h] +
mov [ecx+eax*2] bp +
mov ecx [edi+1698h] +
lea ebx [eax+1] +
mov [edi+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [edi+edx*4+94h] 1 +
mov eax [edi+169Ch] +
sub eax 1 +
cmp [edi+16A0h] eax +
setz al  +
movzx eax al +
mov [esp+1Ch] eax +
sub dword ptr [edi+74h] 1 +
add dword ptr [edi+6Ch] 1 +
jmp loc_45E110  +
***
mov eax [edi+6Ch] +
mov ecx [edi+38h] +
mov dword ptr [edi+60h] 0 +
add eax esi +
mov [edi+6Ch] eax +
movzx edx byte ptr [ecx+eax] +
mov [edi+48h] edx +
movzx eax byte ptr [ecx+eax+1] +
mov ecx [edi+58h] +
shl edx cl +
xor eax edx +
and eax [edi+54h] +
mov [edi+48h] eax +
jmp loc_45E110  +
***
mov eax edi +
call sub_45D760  +
mov eax [edi+74h] +
cmp eax 105h +
ja loc_45DF7D  +
mov edx [esp+64h] +
test edx edx +
jz loc_45E161  +
test eax eax +
jz loc_45E262  +
cmp eax 2 +
ja loc_45DF7D  +
mov ebx [edi+6Ch] +
jmp loc_45DFC8  +
***
shr bx 7 +
movzx ebx bx +
movzx eax ds:byte_49E880[ebx] +
jmp loc_45E028  +
***
mov eax edi +
call sub_45D4E0  +
mov ebx [edi+6Ch] +
mov [edi+60h] eax +
jmp loc_45DFCB  +
***
mov edx [edi+6Ch] +
mov eax 2 +
cmp edx 2 +
cmovbe eax edx +
cmp dword ptr [esp+64h] 4 +
mov [edi+16B4h] eax +
jz loc_45E2D6  +
mov ecx [edi+16A0h] +
mov eax 1 +
test ecx ecx +
jz loc_45E2CE  +
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_45E29C  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp] edi +
call sub_461880  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_45DA50  +
mov eax [edi] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
movzx eax al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_45E2E6  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] edi +
mov dword ptr [esp+0Ch] 1 +
call sub_461880  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_45DA50  +
mov eax [edi] +
cmp dword ptr [eax+10h] 1 +
sbb eax eax +
add esp 4Ch +
pop ebx  +
add eax 3 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov edi [esp+10h+arg_4] +
mov eax [ebx+0Ch] +
lea esi [eax-5] +
mov eax 0FFFFh +
cmp esi 0FFFFh +
cmovnb esi eax +
jmp loc_45E3BF  +
add edx [ebx+6Ch] +
mov eax [ebx+5Ch] +
mov dword ptr [ebx+74h] 0 +
test edx edx +
mov [ebx+6Ch] edx +
lea ecx [esi+eax] +
jz loc_45E35F  +
cmp edx ecx +
jb loc_45E3AC  +
sub edx ecx +
mov [ebx+74h] edx +
xor edx edx +
mov [ebx+6Ch] ecx +
sub ecx eax +
test eax eax +
js loc_45E374  +
add eax [ebx+38h] +
mov edx eax +
mov [esp+10h+var_8] ecx +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_10] ebx +
call sub_461880  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_45DA50  +
mov eax [ebx] +
mov ecx [eax+10h] +
test ecx ecx +
jz loc_45E490  +
mov edx [ebx+6Ch] +
mov eax [ebx+5Ch] +
mov ecx [ebx+2Ch] +
sub edx eax +
sub ecx 106h +
cmp edx ecx +
jnb loc_45E450  +
mov edx [ebx+74h] +
cmp edx 1 +
ja loc_45E344  +
mov eax ebx +
call sub_45D760  +
mov edx [ebx+74h] +
test edx edx +
jnz loc_45E344  +
test edi edi +
jz loc_45E490  +
cmp edi 4 +
mov dword ptr [ebx+16B4h] 0 +
jz loc_45E499  +
mov ecx [ebx+6Ch] +
mov eax 1 +
mov edx [ebx+5Ch] +
cmp ecx edx +
jle loc_45E492  +
sub ecx edx +
xor al al +
test edx edx +
js loc_45E418  +
mov eax [ebx+38h] +
add eax edx +
mov [esp+10h+var_8] ecx +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_10] ebx +
call sub_461880  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_45DA50  +
mov eax [ebx] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_45E492  +
xor ecx ecx +
test eax eax +
js loc_45E45B  +
add eax [ebx+38h] +
mov ecx eax +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_10] ebx +
call sub_461880  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_45DA50  +
mov eax [ebx] +
mov edx [eax+10h] +
test edx edx +
jnz loc_45E3BF  +
lea esi [esi+0] +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+5Ch] +
xor ecx ecx +
mov eax [ebx+6Ch] +
sub eax edx +
test edx edx +
js loc_45E4AC  +
mov ecx [ebx+38h] +
add ecx edx +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_4] 1 +
mov [esp+10h+var_10] ebx +
call sub_461880  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_45DA50  +
mov eax [ebx] +
cmp dword ptr [eax+10h] 1 +
sbb eax eax +
add eax 3 +
jmp loc_45E492  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ecx [esp+50h] +
mov ebx [esp+54h] +
mov esi [esp+58h] +
test ecx ecx +
jz loc_45E6FE  +
mov eax [esp+50h] +
mov edi [eax+1Ch] +
test edi edi +
jz loc_45E6FE  +
test ebx ebx +
jz loc_45E6FE  +
mov eax [edi+18h] +
cmp eax 2 +
mov [esp+24h] eax +
jz loc_45E6FE  +
cmp eax 1 +
jz loc_45E673  +
mov eax [edi+74h] +
test eax eax +
jnz loc_45E6FE  +
mov eax [edi+2Ch] +
mov dword ptr [edi+18h] 0 +
cmp esi eax +
jnb loc_45E660  +
mov eax [esp+50h] +
mov eax [eax+4] +
mov [esp+28h] eax +
mov eax [esp+50h] +
mov eax [eax] +
mov [esp+2Ch] eax +
mov eax [esp+50h] +
mov [eax+4] esi +
mov [eax] ebx +
mov eax edi +
call sub_45D760  +
mov eax [edi+74h] +
cmp eax 2 +
jbe loc_45E611  +
mov edx eax +
nop   +
lea esi [esi+0] +
mov esi [edi+58h] +
mov ebx [edi+6Ch] +
mov eax [edi+48h] +
mov ebp [edi+40h] +
mov [esp+10h] esi +
mov esi [edi+38h] +
lea ecx [ebx+edx-2] +
mov [esp+0Ch] ecx +
mov [esp+14h] esi +
mov esi [edi+54h] +
mov [esp+18h] esi +
mov esi [edi+34h] +
mov [esp+1Ch] esi +
mov esi [edi+44h] +
mov [esp+20h] esi +
jmp loc_45E5B8  +
mov eax edx +
mov edx [esp+14h] +
movzx ecx byte ptr [esp+10h] +
movzx edx byte ptr [edx+ebx+2] +
shl eax cl +
mov ecx [esp+1Ch] +
xor edx eax +
mov eax [esp+20h] +
and edx [esp+18h] +
and ecx ebx +
lea eax [eax+edx*2] +
movzx esi word ptr [eax] +
mov [edi+48h] edx +
mov [ebp+ecx*2+0] si +
mov [eax] bx +
add ebx 1 +
cmp ebx [esp+0Ch] +
jnz loc_45E5B6  +
mov [edi+6Ch] ebx +
mov eax edi +
mov dword ptr [edi+74h] 2 +
call sub_45D760  +
mov edx [edi+74h] +
cmp edx 2 +
ja loc_45E580  +
mov eax edx +
mov edx [edi+6Ch] +
mov [edi+16B4h] eax +
mov esi [esp+2Ch] +
mov dword ptr [edi+74h] 0 +
mov dword ptr [edi+78h] 2 +
add edx eax +
mov eax [esp+50h] +
mov [edi+6Ch] edx +
mov [edi+5Ch] edx +
mov dword ptr [edi+60h] 2 +
mov dword ptr [edi+68h] 0 +
mov [eax] esi +
mov esi [esp+28h] +
mov [eax+4] esi +
mov eax [esp+24h] +
mov [edi+18h] eax +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+24h] +
test edx edx +
jz loc_45E6B5  +
sub esi eax +
add ebx esi +
mov esi eax +
jmp loc_45E548  +
***
cmp dword ptr [edi+4] 2Ah +
jnz loc_45E6FE  +
mov edx [edi+74h] +
test edx edx +
jnz loc_45E6FE  +
mov eax [esp+50h] +
mov eax [eax+30h] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] eax +
call sub_45C1D0  +
mov ecx [esp+50h] +
mov [ecx+30h] eax +
mov eax [edi+2Ch] +
mov dword ptr [edi+18h] 0 +
cmp esi eax +
jnb loc_45E668  +
jmp loc_45E548  +
***
mov ecx [edi+4Ch] +
xor ebp ebp +
mov eax [edi+44h] +
lea edx [ecx+7FFFFFFFh] +
lea ecx [edx+edx] +
mov [eax+edx*2] bp +
mov [esp+8] ecx +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call memset  +
mov eax [edi+2Ch] +
mov dword ptr [edi+6Ch] 0 +
mov dword ptr [edi+5Ch] 0 +
mov dword ptr [edi+16B4h] 0 +
jmp loc_45E668  +
***
mov eax 0FFFFFFFEh +
jmp loc_45E658  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test ebx ebx +
jz loc_45E7E0  +
mov esi [ebx+1Ch] +
test esi esi +
jz loc_45E7E0  +
mov edx [ebx+20h] +
test edx edx +
jz loc_45E7E0  +
mov eax [ebx+24h] +
test eax eax +
jz loc_45E7E0  +
mov eax [esi+8] +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+2Ch] 2 +
mov [esi+10h] eax +
mov eax [esi+18h] +
mov dword ptr [esi+14h] 0 +
test eax eax +
js loc_45E7B1  +
jnz loc_45E7B6  +
mov dword ptr [esi+4] 71h +
mov [esp+14h+var_C] 0 +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] 0 +
call sub_45C1D0  +
mov [ebx+30h] eax +
mov dword ptr [esi+28h] 0 +
mov [esp+14h+var_14] esi +
call sub_461580  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
neg eax  +
mov [esi+18h] eax +
cmp eax 2 +
mov dword ptr [esi+4] 2Ah +
jnz loc_45E77B  +
mov [esp+14h+var_C] 0 +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] 0 +
call sub_45C700  +
jmp loc_45E797  +
mov eax 0FFFFFFFEh +
jmp loc_45E7AB  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+0Ch+arg_0] +
mov [esp+0Ch+var_C] ebx +
call sub_45E710  +
test eax eax +
mov esi eax +
jnz loc_45E8B7  +
mov ebx [ebx+1Ch] +
mov eax [ebx+2Ch] +
mov ecx [ebx+4Ch] +
add eax eax +
mov [ebx+3Ch] eax +
mov eax [ebx+44h] +
lea edx [ecx+7FFFFFFFh] +
lea ecx [edx+edx] +
mov word ptr [eax+edx*2] 0 +
mov [esp+0Ch+var_4] ecx +
mov [esp+0Ch+var_8] 0 +
mov [esp+0Ch+var_C] eax +
call memset  +
mov eax [ebx+84h] +
mov dword ptr [ebx+6Ch] 0 +
mov dword ptr [ebx+5Ch] 0 +
mov dword ptr [ebx+74h] 0 +
lea edx [eax+eax*2] +
shl edx 2 +
lea eax dword_49E4A0[edx] +
movzx ecx word ptr [edx+49E4A2h] +
movzx edx word ptr ds:dword_49E4A0[edx] +
mov dword ptr [ebx+16B4h] 0 +
mov dword ptr [ebx+78h] 2 +
mov [ebx+80h] ecx +
mov [ebx+8Ch] edx +
movzx edx word ptr [eax+4] +
movzx eax word ptr [eax+6] +
mov dword ptr [ebx+60h] 2 +
mov dword ptr [ebx+68h] 0 +
mov [ebx+90h] edx +
mov [ebx+7Ch] eax +
mov dword ptr [ebx+48h] 0 +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+4] +
test eax eax +
jz loc_45E8E0  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_45E8E0  +
cmp dword ptr [eax+18h] 2 +
jnz loc_45E8E0  +
mov edx [esp+8] +
mov [eax+1Ch] edx +
xor eax eax +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebx  +
mov eax [esp+8] +
mov ecx [esp+0Ch] +
mov edx [esp+10h] +
test eax eax +
jz loc_45E925  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_45E925  +
test ecx ecx +
jz loc_45E911  +
mov ebx [eax+14h] +
mov [ecx] ebx +
test edx edx +
jz loc_45E921  +
mov eax [eax+16BCh] +
mov [edx] eax +
xor eax eax +
pop ebx  +
retn   +
***
xor eax eax +
pop ebx  +
retn   +
***
mov eax 0FFFFFFFEh +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov edi [esp+34h] +
mov ebp [esp+38h] +
test eax eax +
jz loc_45E9B4  +
mov esi [eax+1Ch] +
test esi esi +
jz loc_45E9B4  +
mov eax [esi+10h] +
add eax 2 +
cmp [esi+16A4h] eax +
jb loc_45E9AD  +
lea esi [esi+0] +
mov edx [esi+16BCh] +
mov ebx 10h +
mov eax 1 +
sub ebx edx +
cmp edi ebx +
cmovle ebx edi +
mov ecx ebx +
shl eax cl +
mov ecx edx +
sub eax 1 +
add edx ebx +
and eax ebp +
shl eax cl +
or [esi+16B8h] ax +
mov [esi+16BCh] edx +
mov [esp] esi +
call sub_461780  +
mov ecx ebx +
sar ebp cl +
sub edi ebx +
jnz loc_45E960  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFBh +
jmp loc_45E9A5  +
***
mov eax 0FFFFFFFEh +
jmp loc_45E9A5  +
***
mov eax [esp+4] +
test eax eax +
jz loc_45E9F7  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_45E9F7  +
mov edx [esp+8] +
mov [eax+8Ch] edx +
mov edx [esp+0Ch] +
mov [eax+80h] edx +
mov edx [esp+10h] +
mov [eax+90h] edx +
mov edx [esp+14h] +
mov [eax+7Ch] edx +
xor eax eax +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ecx [esp+18h] +
mov ebx [esp+14h] +
lea esi [ecx+7] +
mov edx esi +
lea eax [ecx+3Fh] +
shr edx 3 +
shr eax 6 +
add eax edx +
add eax ecx +
test ebx ebx +
jz loc_45EAE4  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jz loc_45EAE4  +
mov edx [ebx+18h] +
cmp edx 1 +
jz loc_45EAD3  +
cmp edx 2 +
jz loc_45EA60  +
cmp edx 1 +
sbb edx edx +
not edx  +
and edx 6 +
cmp dword ptr [ebx+30h] 0Fh +
jz loc_45EAB3  +
pop ebx  +
lea eax [edx+eax+5] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi [ebx+1Ch] +
test edi edi +
jz loc_45EAF0  +
mov ebp [edi+10h] +
test ebp ebp +
jz loc_45EB00  +
mov edx [edi+14h] +
add edx 14h +
mov ebp [edi+1Ch] +
test ebp ebp +
jz loc_45EA8F  +
sub ebp edx +
add edx 1 +
cmp byte ptr [ebp+edx-1] 0 +
jnz loc_45EA85  +
mov ebp [edi+24h] +
test ebp ebp +
jz loc_45EAA2  +
sub ebp edx +
add edx 1 +
cmp byte ptr [ebp+edx-1] 0 +
jnz loc_45EA98  +
mov edi [edi+2Ch] +
lea ebp [edx+2] +
test edi edi +
cmovnz edx ebp +
cmp dword ptr [ebx+30h] 0Fh +
jnz loc_45EA52  +
cmp dword ptr [ebx+50h] 0Fh +
jnz loc_45EA52  +
mov eax ecx +
mov ebx ecx +
shr eax 0Ch +
add eax esi +
shr ebx 0Eh +
add eax ebx +
shr ecx 19h +
add eax ecx +
pop ebx  +
add eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [ebx+6Ch] 1 +
sbb edx edx +
and edx 0FFFFFFFCh +
add edx 0Ah +
jmp loc_45EA4C  +
***
pop ebx  +
add eax 0Bh +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx 12h +
jmp loc_45EA4C  +
***
mov edx 12h +
jmp loc_45EA7C  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
test edi edi +
jz loc_45F6D1  +
mov eax [esp+2Ch+arg_0] +
mov ebp [eax+1Ch] +
test ebp ebp +
jz loc_45F6D1  +
cmp [esp+2Ch+arg_4] 5 +
ja loc_45F6D1  +
mov esi [eax+0Ch] +
test esi esi +
jz loc_45ECDB  +
mov ebx [eax] +
test ebx ebx +
jz loc_45F568  +
mov eax [ebp+4] +
cmp eax 29Ah +
jz loc_45ECD0  +
mov edi [esp+2Ch+arg_0] +
mov edx [edi+10h] +
test edx edx +
jz loc_45F734  +
mov edi [esp+2Ch+arg_0] +
cmp eax 2Ah +
mov [ebp+0] edi +
mov edi [ebp+28h] +
mov [esp+2Ch+var_18] edi +
mov edi [esp+2Ch+arg_4] +
mov [ebp+28h] edi +
jz loc_45EE31  +
cmp eax 45h +
jz loc_45EF39  +
cmp eax 49h +
mov edx [ebp+14h] +
jz loc_45EFF0  +
cmp eax 5Bh +
jz loc_45F29B  +
cmp eax 67h +
jz loc_45F61B  +
test edx edx +
mov eax [esp+2Ch+arg_0] +
jnz loc_45ECF1  +
mov edx [eax+4] +
test edx edx +
jnz loc_45F1E0  +
mov eax [esp+2Ch+arg_4] +
cmp eax 5 +
lea edx [eax+eax] +
setz al  +
movzx eax al +
lea eax [eax+eax*8] +
sub edx eax +
mov eax [esp+2Ch+var_18] +
cmp eax 5 +
lea ecx [eax+eax] +
setnl al  +
movzx eax al +
lea eax [eax+eax*8] +
sub ecx eax +
cmp edx ecx +
jg loc_45EC04  +
cmp [esp+2Ch+arg_4] 4 +
jnz loc_45F1F6  +
mov eax [ebp+4] +
mov ecx [ebp+74h] +
test ecx ecx +
jnz loc_45ED22  +
mov edx [esp+2Ch+arg_4] +
test edx edx +
jz loc_45ED79  +
cmp eax 29Ah +
jnz loc_45ED22  +
lea esi [esi+0] +
cmp [esp+2Ch+arg_4] 4 +
jnz loc_45ED79  +
mov eax [ebp+18h] +
test eax eax +
jle loc_45FA30  +
cmp eax 2 +
jz loc_45F780  +
mov eax [esp+2Ch+arg_0] +
mov ebx [ebp+8] +
mov edx [eax+30h] +
mov eax [ebp+14h] +
mov ecx edx +
lea esi [eax+1] +
shr edx 18h +
mov [ebp+14h] esi +
shr ecx 10h +
mov [ebx+eax] dl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [edx+eax] cl +
mov eax [esp+2Ch+arg_0] +
mov ecx [ebp+8] +
movzx edx word ptr [eax+30h] +
mov eax [ebp+14h] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov ebx edx +
shr ebx 8 +
mov [ecx+eax] bl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [ecx+eax] dl +
mov eax [esp+2Ch+arg_0] +
call sub_45DA50  +
mov eax [ebp+18h] +
test eax eax +
jle loc_45ECBC  +
neg eax  +
mov [ebp+18h] eax +
mov edx [ebp+14h] +
xor eax eax +
test edx edx +
setz al  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+2Ch+arg_4] 4 +
jz loc_45EB60  +
mov eax ds:off_49C2D0 +
mov edi [esp+2Ch+arg_0] +
mov [edi+18h] eax +
mov eax 0FFFFFFFEh +
jmp loc_45ED7B  +
call sub_45DA50  +
mov eax [esp+2Ch+arg_0] +
mov ebx [eax+10h] +
test ebx ebx +
jz loc_45EE25  +
mov eax [esp+2Ch+arg_0] +
mov edx [eax+4] +
mov eax [ebp+4] +
cmp eax 29Ah +
jz loc_45F1EE  +
test edx edx +
jz loc_45EC07  +
mov eax [ebp+88h] +
cmp eax 2 +
jz loc_45F03C  +
cmp eax 3 +
jz loc_45F2A3  +
mov eax [ebp+84h] +
mov edi [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] ebp +
lea eax [eax+eax*2] +
mov [esp+2Ch+var_28] edi +
call ds:off_49E4A8[eax*4]  +
mov edx eax +
and edx 0FFFFFFFDh +
lea ecx [eax-2] +
cmp ecx 1 +
jbe loc_45F260  +
test edx edx +
jnz loc_45ED83  +
mov eax [esp+2Ch+arg_0] +
mov edi [eax+10h] +
test edi edi +
jz loc_45EE25  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1 +
jnz loc_45EC30  +
cmp [esp+2Ch+arg_4] 1 +
jz loc_45FA43  +
cmp [esp+2Ch+arg_4] 5 +
jz loc_45EE0D  +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_461660  +
cmp [esp+2Ch+arg_4] 3 +
jnz loc_45EE0D  +
mov edi [ebp+4Ch] +
xor ebx ebx +
mov eax [ebp+44h] +
lea edx [edi+7FFFFFFFh] +
lea ecx [edx+edx] +
mov [eax+edx*2] bx +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call memset  +
mov esi [ebp+74h] +
test esi esi +
jnz loc_45EE0D  +
mov dword ptr [ebp+6Ch] 0 +
mov dword ptr [ebp+5Ch] 0 +
mov dword ptr [ebp+16B4h] 0 +
mov eax [esp+2Ch+arg_0] +
call sub_45DA50  +
mov eax [esp+2Ch+arg_0] +
mov ecx [eax+10h] +
test ecx ecx +
jnz loc_45EC30  +
mov dword ptr [ebp+28h] 0FFFFFFFFh +
jmp loc_45ED79  +
cmp dword ptr [ebp+18h] 2 +
jz loc_45F823  +
mov eax [ebp+30h] +
shl eax 0Ch +
lea ecx [eax-7800h] +
xor eax eax +
cmp dword ptr [ebp+88h] 1 +
jle loc_45F1B3  +
mov edx [ebp+6Ch] +
or ecx eax +
mov eax ecx +
mov ebx [ebp+8] +
or eax 20h +
mov dword ptr [ebp+4] 71h +
test edx edx +
mov edx 8421085h +
cmovnz ecx eax +
mov eax ecx +
mul  edx +
mov eax [ebp+14h] +
sub ecx edx +
shr ecx 1 +
add ecx edx +
shr ecx 4 +
mov edx ecx +
shl edx 5 +
sub edx ecx +
add edx 1Fh +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx edx +
shr ecx 8 +
mov [ebx+eax] cl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [ecx+eax] dl +
mov ecx [ebp+6Ch] +
test ecx ecx +
jz loc_45EF0A  +
mov eax [esp+2Ch+arg_0] +
mov esi [ebp+8] +
mov edx [eax+30h] +
mov eax [ebp+14h] +
mov ecx edx +
lea ebx [eax+1] +
shr edx 18h +
mov [ebp+14h] ebx +
shr ecx 10h +
mov [esi+eax] dl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [edx+eax] cl +
mov eax [esp+2Ch+arg_0] +
mov ebx [ebp+8] +
movzx edx word ptr [eax+30h] +
mov eax [ebp+14h] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx edx +
shr ecx 8 +
mov [ebx+eax] cl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [ecx+eax] dl +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] 0 +
call sub_45C1D0  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
mov eax [ebp+4] +
cmp eax 45h +
jnz loc_45EB96  +
mov ecx [ebp+1Ch] +
mov eax ecx +
mov edi [ecx+10h] +
test edi edi +
jz loc_45F725  +
mov edx [ebp+14h] +
movzx ebx word ptr [ecx+14h] +
cmp ebx [ebp+20h] +
mov edi edx +
jbe loc_45EFC6  +
mov eax edx +
mov esi ecx +
jmp loc_45EF8F  +
lea ebx [eax+1] +
mov esi [ebp+8] +
mov [ebp+14h] ebx +
mov ebx [ecx+10h] +
mov ecx [ebp+20h] +
movzx ecx byte ptr [ebx+ecx] +
mov [esi+eax] cl +
mov ecx [ebp+1Ch] +
mov eax [ebp+20h] +
movzx ebx word ptr [ecx+14h] +
mov esi ecx +
add eax 1 +
mov [ebp+20h] eax +
cmp ebx eax +
jbe loc_45EFC1  +
mov eax [ebp+14h] +
cmp [ebp+0Ch] eax +
jnz loc_45EF60  +
mov esi [esi+2Ch] +
test esi esi +
jz loc_45EFA3  +
cmp eax edx +
ja loc_45F540  +
mov eax [esp+2Ch+arg_0] +
call sub_45DA50  +
mov edx [ebp+14h] +
cmp edx [ebp+0Ch] +
mov edi edx +
jz loc_45F71D  +
mov eax edx +
mov ecx [ebp+1Ch] +
jmp loc_45EF60  +
mov edx [ebp+14h] +
mov eax ecx +
mov ebx [eax+2Ch] +
test ebx ebx +
jz loc_45EFD5  +
cmp edi edx +
jb loc_45F6DB  +
mov edi [eax+14h] +
cmp [ebp+20h] edi +
jz loc_45F138  +
mov eax [ebp+4] +
cmp eax 49h +
jnz loc_45EBA2  +
lea esi [esi+0] +
mov eax [ebp+1Ch] +
jmp loc_45F146  +
mov eax [ebp+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_45F008  +
add eax [ebp+38h] +
mov ecx eax +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_461880  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_45DA50  +
mov eax [ebp+0] +
mov ecx [eax+10h] +
test ecx ecx +
jz loc_45ED6A  +
mov eax [ebp+74h] +
jmp loc_45F0A6  +
mov eax [ebp+6Ch] +
xor ebx ebx +
mov edx [ebp+38h] +
mov dword ptr [ebp+60h] 0 +
mov ecx [ebp+16A4h] +
movzx edx byte ptr [edx+eax] +
mov eax [ebp+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [ebp+1698h] +
lea ebx [eax+1] +
mov [ebp+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [ebp+edx*4+94h] 1 +
mov eax [ebp+169Ch] +
mov edi [ebp+6Ch] +
lea ecx [eax-1] +
mov eax [ebp+74h] +
lea edx [edi+1] +
mov [ebp+6Ch] edx +
sub eax 1 +
cmp [ebp+16A0h] ecx +
mov [ebp+74h] eax +
jz loc_45EFF8  +
test eax eax +
jnz loc_45F041  +
mov eax ebp +
call sub_45D760  +
mov edi [ebp+74h] +
test edi edi +
jnz loc_45F041  +
mov esi [esp+2Ch+arg_4] +
test esi esi +
jz loc_45ED6A  +
cmp [esp+2Ch+arg_4] 4 +
mov dword ptr [ebp+16B4h] 0 +
jz loc_45F20C  +
mov eax [ebp+16A0h] +
test eax eax +
jz loc_45ED8C  +
mov edx [ebp+5Ch] +
xor ecx ecx +
mov eax [ebp+6Ch] +
sub eax edx +
test edx edx +
js loc_45F0FA  +
add edx [ebp+38h] +
mov ecx edx +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_461880  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_45DA50  +
mov eax [ebp+0] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
movzx eax al +
lea ecx [eax-2] +
mov edx eax +
jmp loc_45ED5D  +
mov dword ptr [ebp+20h] 0 +
mov dword ptr [ebp+4] 49h +
mov ecx [eax+1Ch] +
test ecx ecx +
jz loc_45F752  +
mov ebx edx +
mov ecx edx +
jmp loc_45F181  +
mov esi [eax+1Ch] +
mov eax [ebp+20h] +
lea edi [eax+1] +
mov [ebp+20h] edi +
movzx eax byte ptr [esi+eax] +
lea edi [ecx+1] +
mov esi [ebp+8] +
mov [ebp+14h] edi +
test al al +
mov [esi+ecx] al +
jz loc_45F270  +
mov ecx [ebp+14h] +
mov eax [ebp+1Ch] +
cmp [ebp+0Ch] ecx +
jnz loc_45F157  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_45F195  +
cmp edx ecx +
jb loc_45F518  +
mov eax [esp+2Ch+arg_0] +
call sub_45DA50  +
mov edx [ebp+14h] +
cmp edx [ebp+0Ch] +
mov ebx edx +
jz loc_45F709  +
mov eax [ebp+1Ch] +
mov ecx edx +
jmp loc_45F157  +
mov edx [ebp+84h] +
cmp edx 1 +
jle loc_45EE56  +
cmp edx 5 +
mov al 40h +
jle loc_45EE56  +
cmp edx 6 +
mov al 80h +
mov edx 0C0h +
cmovnz eax edx +
jmp loc_45EE56  +
mov eax [ebp+4] +
cmp eax 29Ah +
jnz loc_45ED22  +
test edx edx +
jz loc_45EC07  +
mov eax ds:off_49C2DC +
mov edi [esp+2Ch+arg_0] +
mov [edi+18h] eax +
mov eax 0FFFFFFFBh +
jmp loc_45ED7B  +
mov edx [ebp+5Ch] +
xor ecx ecx +
mov eax [ebp+6Ch] +
sub eax edx +
test edx edx +
js loc_45F21F  +
add edx [ebp+38h] +
mov ecx edx +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_2C] ebp +
call sub_461880  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_45DA50  +
mov eax [ebp+0] +
mov ecx [eax+10h] +
cmp ecx 1 +
sbb edx edx +
add edx 1 +
cmp ecx 1 +
sbb eax eax +
add eax 3 +
nop   +
lea esi [esi+0] +
mov dword ptr [ebp+4] 29Ah +
jmp loc_45ED66  +
mov edx [ebp+14h] +
xor esi esi +
mov eax [ebp+1Ch] +
mov edi [eax+2Ch] +
test edi edi +
jz loc_45F287  +
cmp ebx edx +
jb loc_45F9C6  +
test esi esi +
jz loc_45F578  +
mov eax [ebp+4] +
cmp eax 5Bh +
jnz loc_45EBAB  +
mov eax [ebp+1Ch] +
jmp loc_45F589  +
movzx eax ds:byte_49E780 +
lea edi ds:0[eax*4] +
jmp loc_45F32A  +
mov dword ptr [ebp+60h] 0 +
mov esi [ebp+6Ch] +
mov edx [ebp+38h] +
test esi esi +
jnz loc_45F380  +
mov [esp+2Ch+var_18] 0 +
mov eax [esp+2Ch+var_18] +
xor ebx ebx +
mov ecx [ebp+16A4h] +
movzx edx byte ptr [edx+eax] +
mov eax [ebp+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [ebp+1698h] +
lea ebx [eax+1] +
mov [ebp+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [ebp+edx*4+94h] 1 +
mov eax [ebp+169Ch] +
sub eax 1 +
cmp [ebp+16A0h] eax +
setz al  +
movzx eax al +
sub dword ptr [ebp+74h] 1 +
add dword ptr [ebp+6Ch] 1 +
test eax eax +
jnz loc_45F4CC  +
mov eax [ebp+74h] +
cmp eax 102h +
ja loc_45F2B3  +
mov eax ebp +
call sub_45D760  +
mov eax [ebp+74h] +
cmp eax 102h +
ja loc_45F2B3  +
mov edx [esp+2Ch+arg_4] +
test edx edx +
jz loc_45ED6A  +
test eax eax +
jz loc_45F0C4  +
cmp eax 2 +
mov dword ptr [ebp+60h] 0 +
ja loc_45F2BA  +
mov eax [ebp+6Ch] +
mov edx [ebp+38h] +
mov [esp+2Ch+var_18] eax +
jmp loc_45F2D0  +
lea ebx [edx+esi-1] +
movzx ecx byte ptr [ebx] +
mov [esp+2Ch+var_18] esi +
mov [esp+2Ch+var_14] ecx +
movzx ecx byte ptr [ebx] +
cmp [ebx+1] cl +
jnz loc_45F2D0  +
movzx ecx byte ptr [ebx+2] +
cmp [esp+2Ch+var_14] ecx +
jnz loc_45F2D0  +
movzx ecx byte ptr [ebx+3] +
cmp [esp+2Ch+var_14] ecx +
jnz loc_45F2D0  +
lea ecx [edx+esi+102h] +
add ebx 3 +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] ecx +
jmp loc_45F430  +
movzx ecx byte ptr [ebx+2] +
cmp eax ecx +
jnz loc_45FA8A  +
movzx ecx byte ptr [ebx+3] +
cmp eax ecx +
jnz loc_45FABA  +
movzx ecx byte ptr [ebx+4] +
cmp eax ecx +
jnz loc_45FAAE  +
movzx ecx byte ptr [ebx+5] +
cmp eax ecx +
jnz loc_45FAA2  +
movzx ecx byte ptr [ebx+6] +
cmp eax ecx +
jnz loc_45FA96  +
movzx ecx byte ptr [ebx+7] +
cmp eax ecx +
jnz loc_45FA7E  +
add ebx 8 +
movzx ecx byte ptr [ebx] +
cmp eax ecx +
jnz loc_45FA3A  +
cmp ebx [esp+2Ch+var_18] +
jnb loc_45FA3A  +
movzx ecx byte ptr [ebx+1] +
cmp eax ecx +
jz loc_45F3D0  +
mov eax [esp+2Ch+var_10] +
add ebx 1 +
sub ebx [esp+2Ch+var_18] +
lea ecx [ebx+102h] +
cmp ecx eax +
mov [ebp+60h] ecx +
jbe loc_45FA1C  +
mov [ebp+60h] eax +
mov ecx eax +
mov eax [ebp+16A0h] +
lea edx [ecx-3] +
mov esi 1 +
mov ecx [ebp+16A4h] +
lea ebx [eax+1] +
mov [ecx+eax*2] si +
mov ecx [ebp+1698h] +
mov [ebp+16A0h] ebx +
mov [ecx+eax] dl +
movzx edx dl +
movzx eax ds:byte_49E680[edx] +
add word ptr [ebp+eax*4+498h] 1 +
add word ptr [ebp+edi+988h] 1 +
mov eax [ebp+169Ch] +
mov edx [ebp+60h] +
mov dword ptr [ebp+60h] 0 +
sub eax 1 +
cmp [ebp+16A0h] eax +
setz al  +
movzx eax al +
sub [ebp+74h] edx +
add [ebp+6Ch] edx +
test eax eax +
jz loc_45F32A  +
mov edx [ebp+5Ch] +
xor ecx ecx +
mov eax [ebp+6Ch] +
sub eax edx +
test edx edx +
js loc_45F4DF  +
add edx [ebp+38h] +
mov ecx edx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_461880  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_45DA50  +
mov eax [ebp+0] +
mov eax [eax+10h] +
test eax eax +
jnz loc_45F32A  +
jmp loc_45ED6A  +
mov eax [esp+2Ch+arg_0] +
sub ecx edx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] ecx +
add edx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_45C700  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
jmp loc_45F195  +
mov edi [esp+2Ch+arg_0] +
sub eax edx +
mov ecx [edi+30h] +
mov [esp+2Ch+var_24] eax +
add edx [ebp+8] +
mov [esp+2Ch+var_2C] ecx +
mov [esp+2Ch+var_28] edx +
call sub_45C700  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
jmp loc_45EFA3  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_45EB52  +
jmp loc_45ECDB  +
mov eax [ebp+1Ch] +
mov dword ptr [ebp+20h] 0 +
mov dword ptr [ebp+4] 5Bh +
mov ecx [eax+24h] +
test ecx ecx +
jz loc_45F746  +
mov ebx edx +
mov ecx edx +
jmp loc_45F5C6  +
mov esi [eax+24h] +
mov eax [ebp+20h] +
lea edi [eax+1] +
mov [ebp+20h] edi +
movzx eax byte ptr [esi+eax] +
lea edi [ecx+1] +
mov esi [ebp+8] +
mov [ebp+14h] edi +
test al al +
mov [esi+ecx] al +
jz loc_45F5F4  +
mov ecx [ebp+14h] +
mov eax [ebp+1Ch] +
cmp [ebp+0Ch] ecx +
jnz loc_45F5A0  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_45F5D6  +
cmp edx ecx +
jb loc_45F631  +
mov eax [esp+2Ch+arg_0] +
call sub_45DA50  +
mov edx [ebp+14h] +
cmp edx [ebp+0Ch] +
mov ebx edx +
jz loc_45F713  +
mov eax [ebp+1Ch] +
mov ecx edx +
jmp loc_45F5A0  +
mov edx [ebp+14h] +
xor esi esi +
mov eax [ebp+1Ch] +
mov edi [eax+2Ch] +
test edi edi +
jz loc_45F60B  +
cmp ebx edx +
jb loc_45F9F1  +
test esi esi +
jz loc_45F656  +
mov eax [ebp+4] +
cmp eax 67h +
jnz loc_45EBB4  +
mov eax [ebp+1Ch] +
mov esi [eax+2Ch] +
test esi esi +
jnz loc_45F667  +
mov dword ptr [ebp+4] 71h +
jmp loc_45EBB4  +
mov eax [esp+2Ch+arg_0] +
sub ecx edx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] ecx +
add edx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_45C700  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
jmp loc_45F5D6  +
mov eax [ebp+1Ch] +
mov dword ptr [ebp+4] 67h +
mov esi [eax+2Ch] +
test esi esi +
jz loc_45F625  +
lea eax [edx+2] +
cmp eax [ebp+0Ch] +
ja loc_45F75E  +
lea eax [edx+1] +
mov ecx [ebp+8] +
mov [ebp+14h] eax +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+30h] +
mov [ecx+edx] al +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+30h] +
shr eax 8 +
mov [ecx+edx] al +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] 0 +
call sub_45C700  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
mov dword ptr [ebp+4] 71h +
jmp loc_45EBB4  +
mov eax 0FFFFFFFEh +
jmp loc_45ED7B  +
mov eax [esp+2Ch+arg_0] +
sub edx edi +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] edx +
add edi [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call sub_45C700  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
mov eax [ebp+1Ch] +
jmp loc_45EFD5  +
mov esi 1 +
jmp loc_45F275  +
mov esi 1 +
jmp loc_45F5F9  +
mov eax [ebp+1Ch] +
jmp loc_45EFC6  +
mov dword ptr [ebp+4] 49h +
mov edx [ebp+14h] +
jmp loc_45F146  +
mov eax ds:off_49C2DC +
mov [edi+18h] eax +
mov eax 0FFFFFFFBh +
jmp loc_45ED7B  +
mov dword ptr [ebp+4] 67h +
jmp loc_45F660  +
mov dword ptr [ebp+4] 5Bh +
jmp loc_45F589  +
mov eax [esp+2Ch+arg_0] +
call sub_45DA50  +
mov edx [ebp+14h] +
lea eax [edx+2] +
cmp eax [ebp+0Ch] +
ja loc_45EBB4  +
jmp loc_45F673  +
mov eax [ebp+14h] +
mov edi [esp+2Ch+arg_0] +
mov ecx [ebp+8] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [edi+30h] +
mov [ecx+eax] dl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [edi+30h] +
shr eax 8 +
mov [ecx+edx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx word ptr [edi+32h] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx byte ptr [edi+33h] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [edi+8] +
mov [ecx+eax] dl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [edi+8] +
shr eax 8 +
mov [ecx+edx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx word ptr [edi+0Ah] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx byte ptr [edi+0Bh] +
mov [edx+eax] cl +
jmp loc_45ECA7  +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] 0 +
call sub_45C700  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+8] +
mov [edi+30h] eax +
mov eax [ebp+14h] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 1Fh +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 8Bh +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 8 +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_45FAC6  +
mov edi [eax] +
mov ebx [ebp+14h] +
mov esi [ebp+8] +
test edi edi +
setnz cl  +
cmp dword ptr [eax+2Ch] 1 +
lea edx [ebx+1] +
mov [ebp+14h] edx +
sbb edx edx +
not edx  +
and edx 2 +
add ecx edx +
cmp dword ptr [eax+10h] 1 +
sbb edx edx +
not edx  +
and edx 4 +
add ecx edx +
cmp dword ptr [eax+1Ch] 1 +
sbb edx edx +
not edx  +
and edx 8 +
add edx ecx +
cmp dword ptr [eax+24h] 1 +
sbb eax eax +
not eax  +
and eax 10h +
add eax edx +
mov [esi+ebx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
mov ecx [ecx+4] +
mov [edx+eax] cl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [ebp+1Ch] +
mov eax [eax+4] +
shr eax 8 +
mov [ecx+edx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
movzx ecx word ptr [ecx+6] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
movzx ecx byte ptr [ecx+7] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [ebp+84h] +
add eax [ebp+8] +
cmp edx 9 +
mov ecx eax +
mov eax 2 +
jz loc_45F954  +
cmp dword ptr [ebp+88h] 1 +
jle loc_45FB63  +
mov eax 4 +
mov [ecx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
mov ecx [ecx+0Ch] +
mov [edx+eax] cl +
mov ecx [ebp+1Ch] +
mov esi [ecx+10h] +
test esi esi +
jz loc_45FB73  +
mov eax [ebp+14h] +
mov ebx [ebp+8] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [ecx+14h] +
mov [ebx+eax] dl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [ebp+1Ch] +
mov eax [eax+14h] +
shr eax 8 +
mov [ecx+edx] al +
mov ecx [ebp+1Ch] +
mov eax ecx +
mov ebx [ecx+2Ch] +
test ebx ebx +
jnz loc_45FA50  +
mov dword ptr [ebp+20h] 0 +
mov dword ptr [ebp+4] 45h +
jmp loc_45EF3E  +
mov eax [esp+2Ch+arg_0] +
sub edx ebx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] edx +
add ebx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] ebx +
call sub_45C700  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
jmp loc_45F287  +
mov eax [esp+2Ch+arg_0] +
sub edx ebx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] edx +
add ebx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] ebx +
call sub_45C700  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
jmp loc_45F60B  +
cmp ecx 2 +
ja loc_45F459  +
mov [esp+2Ch+var_18] esi +
jmp loc_45F2D0  +
mov eax 1 +
jmp loc_45ED7B  +
mov eax [esp+2Ch+var_10] +
jmp loc_45F43F  +
mov [esp+2Ch+var_2C] ebp +
call sub_461790  +
jmp loc_45EE0D  +
mov eax [esp+2Ch+arg_0] +
mov ecx [ebp+14h] +
mov edx [ebp+8] +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call sub_45C700  +
mov edi [esp+2Ch+arg_0] +
mov ecx [ebp+1Ch] +
mov [edi+30h] eax +
mov eax ecx +
jmp loc_45F9B3  +
mov eax [esp+2Ch+var_10] +
add ebx 7 +
jmp loc_45F43F  +
mov eax [esp+2Ch+var_10] +
add ebx 2 +
jmp loc_45F43F  +
mov eax [esp+2Ch+var_10] +
add ebx 6 +
jmp loc_45F43F  +
mov eax [esp+2Ch+var_10] +
add ebx 5 +
jmp loc_45F43F  +
mov eax [esp+2Ch+var_10] +
add ebx 4 +
jmp loc_45F43F  +
mov eax [esp+2Ch+var_10] +
add ebx 3 +
jmp loc_45F43F  +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [ebp+84h] +
add eax [ebp+8] +
cmp edx 9 +
mov ecx eax +
mov eax 2 +
jz loc_45FB42  +
cmp dword ptr [ebp+88h] 1 +
jle loc_45FB7A  +
mov eax 4 +
mov [ecx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0Bh +
mov edx [ebp+14h] +
mov dword ptr [ebp+4] 71h +
jmp loc_45EBB4  +
cmp edx 1 +
jle loc_45F94F  +
xor eax eax +
jmp loc_45F954  +
mov eax ecx +
jmp loc_45F9A8  +
cmp edx 1 +
lea esi [esi+0] +
jle loc_45FB3D  +
xor eax eax +
jmp loc_45FB42  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+30h] +
mov esi [esp+34h] +
mov edi [esp+38h] +
test edx edx +
jz loc_45FC80  +
mov ebx [edx+1Ch] +
test ebx ebx +
jz loc_45FC80  +
cmp esi 0FFFFFFFFh +
jz loc_45FC41  +
cmp esi 9 +
ja loc_45FC80  +
cmp edi 4 +
ja loc_45FC80  +
mov ecx [ebx+84h] +
cmp [ebx+88h] edi +
lea eax [ecx+ecx*2] +
mov eax ds:off_49E4A8[eax*4] +
jz loc_45FC50  +
mov ebp [edx+8] +
xor eax eax +
test ebp ebp +
jnz loc_45FC60  +
cmp esi ecx +
jz loc_45FC33  +
lea ecx [esi+esi*2] +
shl ecx 2 +
lea edx dword_49E4A0[ecx] +
mov [ebx+84h] esi +
movzx esi word ptr [ecx+49E4A2h] +
movzx ecx word ptr ds:dword_49E4A0[ecx] +
mov [ebx+80h] esi +
mov [ebx+8Ch] ecx +
movzx ecx word ptr [edx+4] +
movzx edx word ptr [edx+6] +
mov [ebx+90h] ecx +
mov [ebx+7Ch] edx +
mov [ebx+88h] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi 6 +
jmp loc_45FBC8  +
***
lea ebp [esi+esi*2] +
cmp ds:off_49E4A8[ebp*4] eax +
jnz loc_45FBE9  +
xor eax eax +
jmp loc_45FBF2  +
***
mov dword ptr [esp+4] 5 +
mov [esp] edx +
call sub_45EB10  +
mov ecx [ebx+84h] +
jmp loc_45FBF2  +
***
mov eax 0FFFFFFFEh +
jmp loc_45FC39  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test ebx ebx +
jz loc_45FD7D  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_45FD7D  +
mov esi [eax+4] +
cmp esi 2Ah +
jnz loc_45FD44  +
mov edx [eax+8] +
test edx edx +
jz loc_45FCD1  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov edx [eax+44h] +
test edx edx +
jz loc_45FCEA  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov edx [eax+40h] +
test edx edx +
jz loc_45FD03  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov edx [eax+38h] +
test edx edx +
jz loc_45FD1C  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov ecx [ebx+28h] +
mov edx [ebx+24h] +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] ecx +
call edx  +
xor eax eax +
cmp esi 71h +
setnz al  +
mov dword ptr [ebx+1Ch] 0 +
lea eax [eax+eax*2-3] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
cmp esi 45h +
jz loc_45FCB8  +
cmp esi 49h +
jz loc_45FCB8  +
cmp esi 5Bh +
jz loc_45FCB8  +
cmp esi 67h +
jz loc_45FCB8  +
cmp esi 71h +
jz loc_45FCB8  +
cmp esi 29Ah +
jz loc_45FCB8  +
mov eax 0FFFFFFFEh +
jmp loc_45FD3E  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov esi [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
mov ecx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_14] +
mov ebp [esp+2Ch+arg_C] +
mov edx [esp+2Ch+arg_1C] +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_18] +
test eax eax +
jz loc_460000  +
cmp byte ptr [eax] 31h +
jnz loc_460000  +
cmp edx 38h +
jnz loc_460000  +
test esi esi +
jz loc_460010  +
mov eax [esi+20h] +
mov dword ptr [esi+18h] 0 +
test eax eax +
jz loc_460030  +
mov ebx [esi+24h] +
test ebx ebx +
jz loc_460020  +
cmp edi 0FFFFFFFFh +
mov eax 6 +
cmovz edi eax +
test ebp ebp +
js loc_45FFF0  +
cmp ebp 0Fh +
mov edx 1 +
jg loc_45FFE4  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] edx +
sub eax 1 +
cmp eax 8 +
ja loc_460010  +
cmp ecx 8 +
jnz loc_460010  +
lea eax [ebp-8] +
cmp eax 7 +
ja loc_460010  +
cmp edi 9 +
ja loc_460010  +
cmp [esp+2Ch+var_14] 4 +
ja loc_460010  +
mov ecx [esi+28h] +
cmp ebp 8 +
mov eax 9 +
cmovz ebp eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_24] 16C4h +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] ecx +
call eax  +
test eax eax +
mov ebx eax +
jz loc_460061  +
mov edx [esp+2Ch+var_10] +
mov ecx ebp +
mov [esi+1Ch] eax +
mov [eax+30h] ebp +
mov [eax] esi +
mov [eax+18h] edx +
mov edx 1 +
shl edx cl +
mov dword ptr [eax+1Ch] 0 +
lea eax [edx-1] +
mov ebp edx +
mov [ebx+34h] eax +
mov eax [esp+2Ch+var_18] +
mov [ebx+2Ch] edx +
mov edx 1 +
lea ecx [eax+7] +
add eax 9 +
shl edx cl +
mov [ebx+50h] ecx +
mov ecx edx +
mov [ebx+4Ch] edx +
mov edx 0AAAAAAABh +
sub ecx 1 +
mul  edx +
mov eax [esi+20h] +
mov [ebx+54h] ecx +
shr edx 1 +
mov [ebx+58h] edx +
mov edx [esi+28h] +
mov [esp+2Ch+var_24] 2 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] edx +
call eax  +
mov ecx [ebx+2Ch] +
mov edx [esi+28h] +
mov [ebx+38h] eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] 2 +
call eax  +
mov ecx [ebx+4Ch] +
mov edx [esi+28h] +
mov [ebx+40h] eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] 2 +
call eax  +
mov edx [esi+28h] +
mov dword ptr [ebx+16C0h] 0 +
mov [ebx+44h] eax +
mov eax [esp+2Ch+var_18] +
lea ecx [eax+6] +
mov eax 1 +
shl eax cl +
mov [ebx+169Ch] eax +
mov ecx eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] 4 +
call eax  +
mov edx [ebx+169Ch] +
lea ecx ds:0[edx*4] +
mov [ebx+0Ch] ecx +
mov ecx [ebx+38h] +
mov [ebx+8] eax +
test ecx ecx +
jz loc_460043  +
mov ebp [ebx+40h] +
test ebp ebp +
jz loc_460043  +
mov ecx [ebx+44h] +
test ecx ecx +
jz loc_460043  +
test eax eax +
jz loc_460043  +
mov ecx edx +
and ecx 0FFFFFFFEh +
lea edx [edx+edx*2] +
add ecx eax +
add eax edx +
mov [ebx+1698h] eax +
mov eax [esp+2Ch+var_14] +
mov [ebx+16A4h] ecx +
mov [ebx+84h] edi +
mov byte ptr [ebx+24h] 8 +
mov [ebx+88h] eax +
mov [esp+2Ch+arg_0] esi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_45E7F0  +
sub ebp 10h +
mov dl 2 +
jmp loc_45FE1F  +
neg ebp  +
xor edx edx +
jmp loc_45FE1F  +
mov eax 0FFFFFFFAh +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
mov eax 0FFFFFFFEh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esi+24h] offset loc_45C120 +
jmp loc_45FDFE  +
mov dword ptr [esi+20h] offset loc_45C100 +
mov dword ptr [esi+28h] 0 +
jmp loc_45FDF3  +
mov eax ds:off_49C2D8 +
mov dword ptr [ebx+4] 29Ah +
mov [esi+18h] eax +
mov [esp+2Ch+var_2C] esi +
call sub_45FC90  +
mov eax 0FFFFFFFCh +
jmp loc_460005  +
mov eax 0FFFFFFFCh +
jmp loc_460005  +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] 8 +
mov [esp+2Ch+var_20] 0Fh +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] 8 +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_45FD90  +
add esp 2Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
test eax eax +
jz loc_460355  +
test ebp ebp +
jz loc_460355  +
mov edx [eax+1Ch] +
test edx edx +
mov [esp+0Ch] edx +
jz loc_460355  +
mov ecx [eax] +
mov [ebp+0] ecx +
mov ecx [eax+4] +
mov [ebp+4] ecx +
mov ecx [eax+8] +
mov [ebp+8] ecx +
mov ecx [eax+0Ch] +
mov [ebp+0Ch] ecx +
mov ecx [eax+10h] +
mov [ebp+10h] ecx +
mov ecx [eax+14h] +
mov [ebp+14h] ecx +
mov ecx [eax+18h] +
mov [ebp+18h] ecx +
mov ecx [eax+1Ch] +
mov [ebp+1Ch] ecx +
mov ecx [eax+20h] +
mov [ebp+20h] ecx +
mov ebx [eax+24h] +
mov [ebp+24h] ebx +
mov ebx [eax+28h] +
mov [ebp+28h] ebx +
mov esi [eax+2Ch] +
mov [ebp+2Ch] esi +
mov esi [eax+30h] +
mov [ebp+30h] esi +
mov eax [eax+34h] +
mov [ebp+34h] eax +
mov [esp] ebx +
mov dword ptr [esp+8] 16C4h +
mov dword ptr [esp+4] 1 +
call ecx  +
test eax eax +
mov ebx eax +
jz loc_460370  +
test bl 1 +
mov edi eax +
mov esi [esp+0Ch] +
mov [ebp+1Ch] eax +
mov eax 16C4h +
jnz loc_460340  +
test edi 2 +
jnz loc_460325  +
mov ecx eax +
shr ecx 2 +
test al 2 +
movs   +
jnz loc_460310  +
test al 1 +
jnz loc_460303  +
mov esi [ebx+2Ch] +
mov ecx [ebp+28h] +
mov eax [ebp+20h] +
mov [ebx] ebp +
mov [esp+4] esi +
mov [esp] ecx +
mov dword ptr [esp+8] 2 +
call eax  +
mov esi [ebx+2Ch] +
mov ecx [ebp+28h] +
mov [ebx+38h] eax +
mov eax [ebp+20h] +
mov [esp+4] esi +
mov [esp] ecx +
mov dword ptr [esp+8] 2 +
call eax  +
mov esi [ebx+4Ch] +
mov ecx [ebp+28h] +
mov [ebx+40h] eax +
mov eax [ebp+20h] +
mov [esp+4] esi +
mov [esp] ecx +
mov dword ptr [esp+8] 2 +
call eax  +
mov esi [ebx+169Ch] +
mov ecx [ebp+28h] +
mov [ebx+44h] eax +
mov eax [ebp+20h] +
mov [esp+4] esi +
mov dword ptr [esp+8] 4 +
mov [esp] ecx +
call eax  +
mov esi eax +
mov [ebx+8] eax +
mov eax [ebx+38h] +
test eax eax +
jz loc_460360  +
mov ecx [ebx+40h] +
test ecx ecx +
jz loc_460360  +
mov edx [ebx+44h] +
test edx edx +
jz loc_460360  +
test esi esi +
jz loc_460360  +
mov edi [esp+0Ch] +
mov ecx [ebx+2Ch] +
mov edx [edi+38h] +
add ecx ecx +
mov [esp+8] ecx +
mov [esp] eax +
mov [esp+4] edx +
call memcpy  +
mov ecx [ebx+2Ch] +
mov edx [edi+40h] +
mov eax [ebx+40h] +
add ecx ecx +
mov [esp+8] ecx +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov ecx [ebx+4Ch] +
mov edx [edi+44h] +
mov eax [ebx+44h] +
add ecx ecx +
mov [esp+8] ecx +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov ecx [ebx+0Ch] +
mov edx [edi+8] +
mov eax [ebx+8] +
mov [esp+8] ecx +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov eax [edi+10h] +
mov edx [ebx+8] +
add eax edx +
sub eax [edi+8] +
mov [ebx+10h] eax +
mov eax [ebx+169Ch] +
mov ecx eax +
lea eax [eax+eax*2] +
and ecx 0FFFFFFFEh +
add edx eax +
add esi ecx +
lea eax [ebx+94h] +
mov [ebx+0B18h] eax +
lea eax [ebx+988h] +
mov [ebx+0B24h] eax +
lea eax [ebx+0A7Ch] +
mov [ebx+0B30h] eax +
xor eax eax +
mov [ebx+16A4h] esi +
mov [ebx+1698h] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [esi+ecx] +
mov [edi+ecx] al +
jmp loc_46019A  +
***
movzx ecx word ptr [esi] +
test al 1 +
mov [edi] cx +
mov ecx 2 +
jz loc_46019A  +
jmp loc_460303  +
***
movzx ecx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] cx +
jmp loc_460183  +
***
movzx eax byte ptr [esi] +
lea edi [ebx+1] +
lea esi [esi+1] +
mov [ebx] al +
mov eax 16C3h +
jmp loc_460177  +
***
mov eax 0FFFFFFFEh +
jmp loc_4602FB  +
***
mov [esp] ebp +
call sub_45FC90  +
mov eax 0FFFFFFFCh +
jmp loc_4602FB  +
***
mov eax 0FFFFFFFCh +
jmp loc_4602FB  +
***
mov edi edx +
push esi  +
push ebx  +
sub esp 18h +
mov edx [eax+1450h] +
lea ebp [ecx+2D4h] +
add ecx ecx +
mov ebx [eax+ebp*4+0Ch] +
cmp ecx edx +
mov [esp+20h+var_20] edx +
mov [esp+20h+var_10] ebx +
jg loc_460420  +
lea edx [edi+ebx*4] +
mov [esp+20h+var_18] edx +
jmp loc_4603DA  +
mov edx [eax+ecx*4+0B5Ch] +
mov ebx ecx +
movzx esi word ptr [edi+edx*4] +
mov ecx [esp+20h+var_18] +
cmp [ecx] si +
jb loc_460420  +
jz loc_460430  +
lea ecx [ebx+ebx] +
cmp ecx [esp+20h+var_20] +
mov [eax+ebp*4+0Ch] edx +
lea ebp [ebx+2D4h] +
jg loc_460420  +
cmp ecx [esp+20h+var_20] +
jge loc_4603B0  +
mov esi [eax+ecx*4+0B5Ch] +
lea ebx [ecx+1] +
mov edx [eax+ecx*4+0B60h] +
mov [esp+20h+var_14] esi +
movzx esi word ptr [edi+esi*4] +
mov word ptr [esp+20h+var_1C] si +
movzx esi word ptr [edi+edx*4] +
cmp si word ptr [esp+20h+var_1C] +
jb loc_4603BD  +
jz loc_460455  +
mov ebx ecx +
mov ecx [esp+20h+var_18] +
movzx esi word ptr [esp+20h+var_1C] +
mov edx [esp+20h+var_14] +
cmp [ecx] si +
jnb loc_4603C6  +
nop   +
mov edi [esp+20h+var_10] +
mov [eax+ebp*4+0Ch] edi +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+20h+var_10] +
movzx ecx byte ptr [eax+edx+1458h] +
cmp [eax+esi+1458h] cl +
ja loc_4603C8  +
mov edi [esp+20h+var_10] +
mov [eax+ebp*4+0Ch] edi +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+20h+var_C] ebx +
mov ebx [esp+20h+var_14] +
mov [esp+20h+var_1C] ecx +
movzx ecx byte ptr [eax+edx+1458h] +
cmp cl [eax+ebx+1458h] +
mov ecx [esp+20h+var_1C] +
cmova edx ebx +
mov ebx [esp+20h+var_C] +
cmova ebx ecx +
jmp loc_4603BD  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 4Ch +
mov eax [edx+8] +
mov ecx [edx] +
mov [esp+4Ch+var_44] edx +
mov ebp [eax+0Ch] +
mov edi [eax] +
mov [esp+4Ch+var_28] ecx +
mov dword ptr [ebx+1450h] 0 +
test ebp ebp +
mov dword ptr [ebx+1454h] 23Dh +
jle loc_4608FC  +
mov edx ecx +
xor eax eax +
mov ecx 0FFFFFFFFh +
jmp loc_4604FC  +
mov ecx [ebx+1450h] +
add edx 4 +
lea esi [ecx+1] +
mov [ebx+1450h] esi +
mov [ebx+ecx*4+0B60h] eax +
mov ecx eax +
mov byte ptr [ebx+eax+1458h] 0 +
add eax 1 +
cmp eax ebp +
jz loc_460512  +
cmp word ptr [edx] 0 +
jnz loc_4604D2  +
xor esi esi +
add eax 1 +
mov [edx+2] si +
add edx 4 +
cmp eax ebp +
jnz loc_4604FC  +
mov esi ecx +
mov ecx [ebx+1450h] +
mov [esp+4Ch+var_4C] ebp +
mov ebp [esp+4Ch+var_28] +
jmp loc_460558  +
mov [ebx+ecx*4+0B5Ch] eax +
mov ecx 1 +
mov [ebp+edx+0] cx +
mov byte ptr [ebx+eax+1458h] 0 +
sub dword ptr [ebx+16A8h] 1 +
test edi edi +
jz loc_460552  +
movzx eax word ptr [edi+edx+2] +
sub [ebx+16ACh] eax +
mov ecx [ebx+1450h] +
cmp ecx 1 +
jg loc_46057D  +
add ecx 1 +
xor edx edx +
xor eax eax +
cmp esi 1 +
mov [ebx+1450h] ecx +
jg loc_460523  +
add esi 1 +
lea edx ds:0[esi*4] +
mov eax esi +
jmp loc_460523  +
mov edi [esp+4Ch+var_44] +
sar ecx 1 +
mov ebp [esp+4Ch+var_4C] +
mov [esp+4Ch+var_24] esi +
mov [edi+4] esi +
mov edi [esp+4Ch+var_28] +
mov esi ecx +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_460380  +
sub esi 1 +
jnz loc_460593  +
mov eax [ebx+1450h] +
mov edi [esp+4Ch+var_28] +
jmp loc_4605B2  +
mov ebp esi +
lea edx [eax-1] +
mov eax [ebx+eax*4+0B5Ch] +
mov ecx 1 +
mov esi [ebx+0B60h] +
mov [ebx+1450h] edx +
mov edx edi +
mov [ebx+0B60h] eax +
mov eax ebx +
call sub_460380  +
mov edx [ebx+1454h] +
mov eax [ebx+0B60h] +
lea ecx [edx-2] +
mov [ebx+edx*4+0B58h] esi +
mov [ebx+1454h] ecx +
lea ecx [edi+esi*4] +
mov [ebx+edx*4+0B54h] eax +
mov edx ecx +
lea ecx [edi+eax*4] +
mov [esp+4Ch+var_48] ecx +
movzx ecx word ptr [ecx] +
add cx [edx] +
mov [edi+ebp*4] cx +
movzx ecx byte ptr [ebx+esi+1458h] +
mov byte ptr [esp+4Ch+var_4C] cl +
movzx ecx byte ptr [ebx+eax+1458h] +
movzx eax byte ptr [esp+4Ch+var_4C] +
lea esi [ecx+1] +
add eax 1 +
cmp byte ptr [esp+4Ch+var_4C] cl +
mov ecx 1 +
cmovb eax esi +
mov [ebx+ebp+1458h] al +
mov eax [esp+4Ch+var_48] +
lea esi [ebp+1] +
mov [eax+2] bp +
mov eax ebx +
mov [edx+2] bp +
mov edx edi +
mov [ebx+0B60h] ebp +
call sub_460380  +
mov eax [ebx+1450h] +
cmp eax 1 +
jg loc_4605B0  +
mov eax [ebx+1454h] +
mov ecx [ebx+0B60h] +
lea edx [eax-1] +
mov [ebx+1454h] edx +
xor edx edx +
mov [ebx+eax*4+0B58h] ecx +
mov eax [esp+4Ch+var_44] +
mov edi [eax] +
mov ebp [eax+4] +
mov eax [eax+8] +
mov [esp+4Ch+var_48] edi +
mov edi [eax] +
mov [esp+4Ch+var_30] edi +
mov edi [eax+4] +
mov [esp+4Ch+var_2C] edi +
mov edi [eax+8] +
mov eax [eax+10h] +
mov [esp+4Ch+var_38] edi +
xor esi esi +
mov [ebx+edx*2+0B3Ch] si +
add edx 1 +
cmp edx 10h +
jnz loc_4606B6  +
mov edi [esp+4Ch+var_48] +
xor edx edx +
mov [edi+ecx*4+2] dx +
mov edx [ebx+1454h] +
lea ecx [edx+1] +
cmp ecx 23Ch +
jg loc_460889  +
mov [esp+4Ch+var_44] ebp +
mov ebp [esp+4Ch+var_48] +
lea ecx [ebx+1450h] +
lea edi [ebx+edx*4+0B60h] +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_34] 0 +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_3C] ebx +
mov edx [edi] +
lea esi ds:0[edx*4] +
lea ecx [ebp+esi+0] +
movzx eax word ptr [ecx+2] +
movzx eax word ptr [ebp+eax*4+2] +
add eax 1 +
cmp [esp+4Ch+var_4C] eax +
jge loc_460736  +
add [esp+4Ch+var_34] 1 +
mov eax [esp+4Ch+var_4C] +
cmp [esp+4Ch+var_44] edx +
mov [ecx+2] ax +
jl loc_46078C  +
mov ebx [esp+4Ch+var_3C] +
add word ptr [ebx+eax*2+0B3Ch] 1 +
xor ebx ebx +
cmp [esp+4Ch+var_38] edx +
jg loc_460760  +
mov ebx [esp+4Ch+var_2C] +
sub edx [esp+4Ch+var_38] +
mov ebx [ebx+edx*4] +
movzx edx word ptr [ecx] +
add eax ebx +
mov ecx ebx +
mov ebx [esp+4Ch+var_3C] +
imul eax edx +
add [ebx+16A8h] eax +
mov eax [esp+4Ch+var_30] +
test eax eax +
jz loc_46078C  +
movzx eax word ptr [eax+esi+2] +
add eax ecx +
imul eax edx +
add [ebx+16ACh] eax +
add edi 4 +
cmp edi [esp+4Ch+var_40] +
jnz loc_460710  +
mov edx [esp+4Ch+var_34] +
mov ebp [esp+4Ch+var_44] +
mov eax [esp+4Ch+var_4C] +
mov ebx [esp+4Ch+var_3C] +
test edx edx +
jz loc_460889  +
lea ecx [eax-1] +
lea edi [eax+597h] +
lea esi [ebx+eax*2] +
mov [esp+4Ch+var_4C] ebp +
mov ebp edx +
mov [esp+4Ch+var_40] eax +
mov eax ecx +
mov [esp+4Ch+var_44] ecx +
movzx ecx word ptr [ebx+edi*2+0Ch] +
mov edx eax +
test cx cx +
jnz loc_4607E7  +
sub edx 1 +
movzx ecx word ptr [ebx+edx*2+0B3Ch] +
test cx cx +
jz loc_4607D7  +
sub ecx 1 +
sub ebp 2 +
add word ptr [ebx+edx*2+0B3Eh] 2 +
mov [ebx+edx*2+0B3Ch] cx +
movzx ecx word ptr [esi+0B3Ch] +
sub ecx 1 +
test ebp ebp +
mov [esi+0B3Ch] cx +
jg loc_4607CB  +
mov eax [esp+4Ch+var_40] +
mov ebp [esp+4Ch+var_4C] +
test eax eax +
jz loc_460889  +
mov edx 23Dh +
movzx ecx cx +
test ecx ecx +
jz loc_46086E  +
mov [esp+4Ch+var_4C] ebp +
lea esi [esi+0] +
sub edx 1 +
mov esi [ebx+edx*4+0B5Ch] +
cmp [esp+4Ch+var_4C] esi +
jl loc_460867  +
mov edi [esp+4Ch+var_48] +
lea esi [edi+esi*4] +
movzx edi word ptr [esi+2] +
cmp edi eax +
jz loc_460864  +
mov ebp eax +
sub ebp edi +
mov edi ebp +
movzx ebp word ptr [esi] +
imul edi ebp +
add [ebx+16A8h] edi +
mov [esi+2] ax +
sub ecx 1 +
test ecx ecx +
jnz loc_460830  +
mov ebp [esp+4Ch+var_4C] +
mov edi [esp+4Ch+var_44] +
test edi edi +
mov eax edi +
jz loc_460889  +
movzx ecx word ptr [ebx+edi*2+0B3Ch] +
sub edi 1 +
mov [esp+4Ch+var_44] edi +
jmp loc_460823  +
add ebx 0B3Ch +
xor edx edx +
mov eax 1 +
add dx [ebx+eax*2-2] +
add edx edx +
mov [esp+eax*2+4Ch+var_20] dx +
add eax 1 +
cmp eax 10h +
jnz loc_460896  +
mov eax [esp+4Ch+var_24] +
mov esi [esp+4Ch+var_28] +
cmp eax 0FFFFFFFFh +
lea edi [esi+eax*4+4] +
jz loc_4608F4  +
nop   +
lea esi [esi+0] +
movzx edx word ptr [esi+2] +
test edx edx +
jz loc_4608ED  +
movzx ecx [esp+edx*2+4Ch+var_20] +
xor ebx ebx +
lea eax [ecx+1] +
mov [esp+edx*2+4Ch+var_20] ax +
mov eax ecx +
and eax 1 +
or eax ebx +
shr ecx 1 +
sub edx 1 +
lea ebx [eax+eax] +
jnz loc_4608D7  +
shr ebx 1 +
mov [esi] bx +
add esi 4 +
cmp esi edi +
jnz loc_4608C0  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_4C] ebp +
xor ecx ecx +
mov esi 0FFFFFFFFh +
mov ebp [esp+4Ch+var_28] +
jmp loc_460558  +
***
push esi  +
push ebx  +
sub esp 8 +
movzx ebx word ptr [edx+2] +
lea esi ds:4[ecx*4] +
mov word ptr [edx+esi+2] 0FFFFh +
cmp ebx 1 +
sbb ebp ebp +
add ebp 4 +
cmp ebx 1 +
sbb edi edi +
and edi 83h +
add edi 7 +
test ecx ecx +
js loc_4609CC  +
add esi edx +
xor ecx ecx +
mov [esp+8+var_4] esi +
mov [esp+8+var_8] 0FFFFFFFFh +
jmp loc_460985  +
add [eax+ebx*4+0A7Ch] cx +
test esi esi +
jz loc_4609B7  +
cmp ebx esi +
setnz cl  +
movzx ebp cl +
movzx edi cl +
add ebp 3 +
add edi 6 +
xor ecx ecx +
add edx 4 +
cmp edx [esp+8+var_4] +
jz loc_4609CC  +
mov [esp+8+var_8] ebx +
mov ebx esi +
add ecx 1 +
movzx esi word ptr [edx+6] +
cmp ecx edi +
jge loc_460994  +
cmp ebx esi +
jz loc_4609E6  +
cmp ecx ebp +
jl loc_460958  +
test ebx ebx +
jz loc_4609D4  +
cmp [esp+8+var_8] ebx +
nop   +
jz loc_4609AB  +
add word ptr [eax+ebx*4+0A7Ch] 1 +
add word ptr [eax+0ABCh] 1 +
test esi esi +
jnz loc_460964  +
xor ecx ecx +
add edx 4 +
cmp edx [esp+8+var_4] +
mov ebp 3 +
mov edi 8Ah +
jnz loc_460980  +
add esp 8 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx 0Ah +
jg loc_4609F0  +
add word ptr [eax+0AC0h] 1 +
jmp loc_460960  +
mov ebx [esp+8+var_8] +
jmp loc_460977  +
add word ptr [eax+0AC4h] 1 +
jmp loc_460960  +
***
push edi  +
push esi  +
push ebx  +
sub esp 14h +
movzx eax word ptr [edx+2] +
cmp eax 1 +
sbb esi esi +
add esi 4 +
cmp eax 1 +
sbb ebx ebx +
and ebx 83h +
add ebx 7 +
test ecx ecx +
mov [esp+20h+var_1C] eax +
js loc_460D04  +
lea eax [edx+ecx*4+4] +
xor edi edi +
mov [esp+20h+var_14] edx +
mov edx 0FFFFFFFFh +
mov [esp+20h+var_20] edi +
mov edi ebp +
mov [esp+20h+var_10] eax +
mov eax [esp+20h+var_14] +
movzx eax word ptr [eax+6] +
mov [esp+20h+var_18] eax +
mov eax [esp+20h+var_20] +
lea ebp [eax+1] +
cmp ebp ebx +
jge loc_460A6B  +
mov eax [esp+20h+var_18] +
cmp [esp+20h+var_1C] eax +
jz loc_460E00  +
cmp ebp esi +
jge loc_460B64  +
mov eax [esp+20h+var_1C] +
mov [esp+20h+var_20] ebp +
lea edx [edi+eax*4] +
mov ebp edx +
jmp loc_460AE0  +
mov ebx edx +
shl ebx cl +
mov ecx ebx +
mov ebx [edi+14h] +
or cx [edi+16B8h] +
lea esi [ebx+1] +
mov [edi+14h] esi +
mov esi [edi+8] +
mov [edi+16B8h] cx +
mov [esi+ebx] cl +
mov ecx [edi+14h] +
mov esi [edi+8] +
lea ebx [ecx+1] +
mov [edi+14h] ebx +
movzx ebx byte ptr [edi+16B9h] +
mov [esi+ecx] bl +
mov ebx [edi+16BCh] +
mov ecx 10h +
sub ecx ebx +
sar edx cl +
sub [esp+20h+var_20] 1 +
lea eax [eax+ebx-10h] +
mov [edi+16B8h] dx +
mov [edi+16BCh] eax +
jz loc_460B16  +
movzx eax word ptr [ebp+0A7Eh] +
mov edx 10h +
mov ecx [edi+16BCh] +
sub edx eax +
cmp ecx edx +
movzx edx word ptr [ebp+0A7Ch] +
jg loc_460A81  +
shl edx cl +
add eax ecx +
or [edi+16B8h] dx +
sub [esp+20h+var_20] 1 +
mov [edi+16BCh] eax +
jnz loc_460AE0  +
mov eax [esp+20h+var_18] +
test eax eax +
jz loc_460CE0  +
mov eax [esp+20h+var_18] +
cmp [esp+20h+var_1C] eax +
mov [esp+20h+var_20] 0 +
setnz bl  +
movzx esi bl +
movzx ebx bl +
add esi 3 +
add ebx 6 +
add [esp+20h+var_14] 4 +
mov eax [esp+20h+var_10] +
cmp [esp+20h+var_14] eax +
jz loc_460D04  +
mov eax [esp+20h+var_18] +
mov edx [esp+20h+var_1C] +
mov [esp+20h+var_1C] eax +
jmp loc_460A47  +
mov ecx [esp+20h+var_1C] +
test ecx ecx +
jz loc_460D10  +
cmp edx [esp+20h+var_1C] +
jz loc_460F51  +
mov eax [esp+20h+var_1C] +
mov ebx 10h +
mov ecx [edi+16BCh] +
lea edx [edi+eax*4] +
movzx eax word ptr [edx+0A7Eh] +
sub ebx eax +
cmp ecx ebx +
movzx ebx word ptr [edx+0A7Ch] +
jle loc_460F34  +
mov edx [edi+14h] +
mov esi ebx +
shl esi cl +
mov ebp [edi+8] +
mov ecx esi +
or cx [edi+16B8h] +
lea esi [edx+1] +
mov [edi+14h] esi +
mov [edi+16B8h] cx +
mov [ebp+edx+0] cl +
mov edx [edi+14h] +
mov esi [edi+8] +
lea ecx [edx+1] +
mov [edi+14h] ecx +
movzx ecx byte ptr [edi+16B9h] +
mov [esi+edx] cl +
mov edx [edi+16BCh] +
mov ecx 10h +
sub ecx edx +
sar ebx cl +
lea ecx [eax+edx-10h] +
mov [edi+16B8h] bx +
mov [edi+16BCh] ecx +
movzx eax word ptr [edi+0ABEh] +
mov edx 10h +
sub edx eax +
cmp edx ecx +
movzx edx word ptr [edi+0ABCh] +
jge loc_460E10  +
mov esi edx +
mov ebp [edi+8] +
shl esi cl +
mov ecx [edi+14h] +
or ebx esi +
mov [edi+16B8h] bx +
lea esi [ecx+1] +
mov [edi+14h] esi +
mov [ebp+ecx+0] bl +
mov ecx [edi+14h] +
mov esi [edi+8] +
lea ebx [ecx+1] +
mov [edi+14h] ebx +
movzx ebx byte ptr [edi+16B9h] +
mov [esi+ecx] bl +
mov esi [edi+16BCh] +
mov ecx 10h +
sub ecx esi +
sar edx cl +
lea ecx [eax+esi-10h] +
cmp ecx 0Eh +
mov [edi+16B8h] dx +
mov [edi+16BCh] ecx +
jle loc_460E2C  +
mov ebp [esp+20h+var_20] +
mov esi [edi+14h] +
sub ebp 3 +
movzx ebp bp +
mov eax ebp +
shl eax cl +
or edx eax +
mov eax [edi+8] +
lea ecx [esi+1] +
mov [edi+16B8h] dx +
mov [edi+14h] ecx +
mov [eax+esi] dl +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov eax [edi+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 0Eh +
mov [edi+16BCh] eax +
mov eax [esp+20h+var_18] +
sar ebp cl +
mov [edi+16B8h] bp +
test eax eax +
jnz loc_460B22  +
lea esi [esi+0] +
add [esp+20h+var_14] 4 +
mov esi 3 +
mov eax [esp+20h+var_10] +
mov ebx 8Ah +
cmp [esp+20h+var_14] eax +
mov [esp+20h+var_20] 0 +
jnz loc_460B53  +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebp 0Ah +
jg loc_460E50  +
movzx esi word ptr [edi+0AC2h] +
mov eax 10h +
mov ecx [edi+16BCh] +
sub eax esi +
cmp ecx eax +
jle loc_460F66  +
movzx ebx word ptr [edi+0AC0h] +
mov eax [edi+14h] +
mov edx ebx +
shl edx cl +
lea ecx [eax+1] +
mov [edi+14h] ecx +
mov ecx [edi+8] +
or dx [edi+16B8h] +
mov [edi+16B8h] dx +
mov [ecx+eax] dl +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov edx [edi+16BCh] +
mov ecx 10h +
mov eax ebx +
sub ecx edx +
sar eax cl +
lea ecx [esi+edx-10h] +
cmp ecx 0Dh +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
jle loc_460F8E  +
mov esi [esp+20h+var_20] +
mov edx [edi+14h] +
sub esi 2 +
movzx esi si +
mov ebx esi +
shl ebx cl +
mov ecx [edi+8] +
or eax ebx +
lea ebx [edx+1] +
mov [edi+16B8h] ax +
mov [edi+14h] ebx +
mov [ecx+edx] al +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov eax [edi+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 0Dh +
sar esi cl +
mov [edi+16B8h] si +
mov [edi+16BCh] eax +
jmp loc_460B16  +
mov [esp+20h+var_20] ebp +
mov [esp+20h+var_1C] edx +
jmp loc_460B40  +
shl edx cl +
add ecx eax +
or edx ebx +
cmp ecx 0Eh +
mov [edi+16B8h] dx +
mov [edi+16BCh] ecx +
jg loc_460C77  +
movzx ebp word ptr [esp+20h+var_20] +
sub ebp 3 +
movzx ebp bp +
shl ebp cl +
add ecx 2 +
or edx ebp +
mov [edi+16B8h] dx +
mov [edi+16BCh] ecx +
jmp loc_460B16  +
movzx esi word ptr [edi+0AC6h] +
mov eax 10h +
mov ecx [edi+16BCh] +
sub eax esi +
cmp ecx eax +
jle loc_460FD0  +
movzx ebx word ptr [edi+0AC4h] +
mov eax [edi+14h] +
mov edx ebx +
shl edx cl +
lea ecx [eax+1] +
mov [edi+14h] ecx +
mov ecx [edi+8] +
or dx [edi+16B8h] +
mov [edi+16B8h] dx +
mov [ecx+eax] dl +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov edx [edi+16BCh] +
mov ecx 10h +
mov eax ebx +
sub ecx edx +
sar eax cl +
lea ecx [esi+edx-10h] +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
cmp ecx 9 +
jle loc_460FB0  +
mov esi [esp+20h+var_20] +
mov edx [edi+14h] +
sub esi 0Ah +
movzx esi si +
mov ebx esi +
shl ebx cl +
mov ecx [edi+8] +
or eax ebx +
lea ebx [edx+1] +
mov [edi+16B8h] ax +
mov [edi+14h] ebx +
mov [ecx+edx] al +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov eax [edi+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 9 +
sar esi cl +
mov [edi+16B8h] si +
mov [edi+16BCh] eax +
jmp loc_460B16  +
shl ebx cl +
add ecx eax +
or bx [edi+16B8h] +
mov [edi+16BCh] ecx +
mov [edi+16B8h] bx +
jmp loc_460BFE  +
mov ecx [edi+16BCh] +
movzx ebx word ptr [edi+16B8h] +
mov [esp+20h+var_20] ebp +
jmp loc_460BFE  +
movzx eax word ptr [edi+0AC0h] +
shl eax cl +
add ecx esi +
or ax [edi+16B8h] +
cmp ecx 0Dh +
mov [edi+16BCh] ecx +
mov [edi+16B8h] ax +
jg loc_460D9E  +
lea edx [ebp-3] +
movzx edx dx +
shl edx cl +
add ecx 3 +
or eax edx +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
jmp loc_460B16  +
lea edx [ebp-0Bh] +
movzx edx dx +
shl edx cl +
add ecx 7 +
or eax edx +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
jmp loc_460B16  +
movzx eax word ptr [edi+0AC4h] +
shl eax cl +
add ecx esi +
or ax [edi+16B8h] +
mov [edi+16BCh] ecx +
mov [edi+16B8h] ax +
jmp loc_460ECC  +
***
push esi  +
push ebx  +
sub esp 18h +
mov ebp [eax+16BCh] +
mov [esp+18h+var_10] edx +
mov edx [eax+16A0h] +
mov [esp+18h+var_8] ecx +
test edx edx +
jnz loc_461071  +
movzx esi word ptr [eax+16B8h] +
mov word ptr [esp+18h+var_18] si +
mov ebx [esp+18h+var_10] +
movzx edi word ptr [ebx+402h] +
mov ebx 10h +
mov edx ebx +
sub edx edi +
cmp edx ebp +
jl loc_461418  +
mov ebx [esp+18h+var_10] +
mov ecx ebp +
lea edx [edi+ebp] +
movzx esi word ptr [ebx+400h] +
mov [eax+16BCh] edx +
shl esi cl +
or si word ptr [esp+18h+var_18] +
mov [eax+16B8h] si +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx ebx word ptr [eax+16B8h] +
xor ecx ecx +
mov edx ecx +
mov ecx ebp +
mov esi ebx +
jmp loc_461109  +
mov ebx [esp+18h+var_10] +
mov edi 10h +
lea ebx [ebx+edx*4] +
movzx edx word ptr [ebx+2] +
sub edi edx +
cmp edi ecx +
jge loc_461398  +
movzx ebp word ptr [ebx] +
mov ebx ebp +
shl ebx cl +
mov ecx ebx +
mov ebx [eax+14h] +
or ecx esi +
mov esi [eax+8] +
mov [eax+16B8h] cx +
lea edi [ebx+1] +
mov [eax+14h] edi +
mov [esi+ebx] cl +
mov ecx [eax+14h] +
mov esi [eax+8] +
lea ebx [ecx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [esi+ecx] bl +
mov edi [eax+16BCh] +
mov ecx 10h +
mov esi ebp +
sub ecx edi +
sar esi cl +
lea ecx [edx+edi-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
mov edi [esp+18h+var_18] +
cmp edi [eax+16A0h] +
jnb loc_461370  +
mov edx edi +
mov ebx [eax+16A4h] +
lea edi [edx+1] +
mov [esp+18h+var_18] edi +
mov edi [eax+1698h] +
movzx ebx word ptr [ebx+edx*2] +
movzx edx byte ptr [edi+edx] +
test ebx ebx +
jz loc_461085  +
mov [esp+18h+var_C] edx +
mov edi [esp+18h+var_10] +
movzx edx ds:byte_49E680[edx] +
lea edi [edi+edx*4+404h] +
movzx ebp word ptr [edi+2] +
mov [esp+18h+var_14] edx +
mov edx 10h +
movzx edi word ptr [edi] +
sub edx ebp +
cmp edx ecx +
jge loc_461380  +
mov edx edi +
shl edx cl +
mov ecx [eax+14h] +
mov [esp+18h+var_4] edi +
mov edi [eax+8] +
or esi edx +
mov [eax+16B8h] si +
lea edx [ecx+1] +
mov [eax+14h] edx +
mov edx esi +
mov [edi+ecx] dl +
mov ecx [eax+14h] +
mov edi [eax+8] +
lea esi [ecx+1] +
mov [eax+14h] esi +
movzx esi byte ptr [eax+16B9h] +
mov edx esi +
mov esi [esp+18h+var_4] +
mov [edi+ecx] dl +
mov edi [eax+16BCh] +
mov ecx 10h +
sub ecx [eax+16BCh] +
sar esi cl +
lea ecx [ebp+edi-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
mov edi [esp+18h+var_14] +
mov ebp ds:dword_49EF80[edi*4] +
test ebp ebp +
jz loc_461243  +
mov edx [esp+18h+var_14] +
mov edi [esp+18h+var_C] +
sub edi ds:dword_49E600[edx*4] +
mov edx 10h +
sub edx ebp +
cmp edx ecx +
jge loc_4613E5  +
movzx edi di +
mov edx edi +
shl edx cl +
or esi edx +
mov edx [eax+14h] +
mov [eax+16B8h] si +
mov ecx esi +
lea esi [edx+1] +
mov [eax+14h] esi +
mov esi [eax+8] +
mov [esi+edx] cl +
mov edx [eax+14h] +
mov esi [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx byte ptr [eax+16B9h] +
mov [esi+edx] cl +
mov edx [eax+16BCh] +
mov ecx 10h +
mov esi edi +
sub ecx edx +
sar esi cl +
lea ecx [ebp+edx-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
lea edi [ebx-1] +
cmp edi 0FFh +
ja loc_4613D0  +
movzx ebx ds:byte_49E780[edi] +
mov [esp+18h+var_14] ebx +
mov edx [esp+18h+var_14] +
mov ebx [esp+18h+var_8] +
lea ebx [ebx+edx*4] +
mov edx 10h +
movzx ebp word ptr [ebx+2] +
movzx ebx word ptr [ebx] +
sub edx ebp +
cmp edx ecx +
mov [esp+18h+var_C] ebp +
jge loc_4613B3  +
mov ebp [eax+14h] +
mov edx ebx +
shl ebx cl +
mov ecx [eax+8] +
or ebx esi +
mov [eax+16B8h] bx +
lea esi [ebp+1] +
mov [eax+14h] esi +
mov [ecx+ebp] bl +
mov ecx [eax+14h] +
mov esi [eax+8] +
lea ebx [ecx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [esi+ecx] bl +
mov ebp [eax+16BCh] +
mov ecx 10h +
mov ebx [esp+18h+var_C] +
mov esi edx +
sub ecx ebp +
sar esi cl +
lea ecx [ebx+ebp-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
mov ebx [esp+18h+var_14] +
mov ebp ds:dword_49EF00[ebx*4] +
test ebp ebp +
jz loc_4610F8  +
sub edi ds:dword_49E580[ebx*4] +
mov ebx 10h +
sub ebx ebp +
cmp ebx ecx +
movzx edx di +
jge loc_461400  +
mov ebx edx +
shl ebx cl +
mov ecx ebx +
mov ebx [eax+14h] +
or ecx esi +
mov esi [eax+8] +
mov [eax+16B8h] cx +
lea edi [ebx+1] +
mov [eax+14h] edi +
mov [esi+ebx] cl +
mov ecx [eax+14h] +
mov esi [eax+8] +
lea ebx [ecx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [esi+ecx] bl +
mov edi [eax+16BCh] +
mov ecx 10h +
mov esi edx +
sub ecx edi +
sar esi cl +
lea ecx [ebp+edi-10h] +
mov edi [esp+18h+var_18] +
cmp edi [eax+16A0h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jb loc_461107  +
nop   +
lea esi [esi+0] +
mov ebp ecx +
mov word ptr [esp+18h+var_18] si +
jmp loc_46102A  +
shl edi cl +
add ecx ebp +
or esi edi +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_4611BD  +
movzx ebx word ptr [ebx] +
shl ebx cl +
add ecx edx +
or esi ebx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_4610F8  +
shl ebx cl +
add ecx [esp+18h+var_C] +
or esi ebx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_4612DA  +
mov edx edi +
shr edx 7 +
movzx ebx ds:byte_49E880[edx] +
mov [esp+18h+var_14] ebx +
jmp loc_46125D  +
movzx edx di +
shl edx cl +
add ecx ebp +
or esi edx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_461243  +
shl edx cl +
add ecx ebp +
or esi edx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_4610F8  +
mov esi [esp+18h+var_10] +
mov ecx ebp +
mov ebp [eax+8] +
movzx esi word ptr [esi+400h] +
mov edx esi +
shl edx cl +
mov ecx edx +
mov edx [eax+14h] +
or cx word ptr [esp+18h+var_18] +
mov [esp+18h+var_14] esi +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [eax+16B8h] cx +
mov [ebp+edx+0] cl +
mov edx [eax+14h] +
movzx ecx byte ptr [eax+16B9h] +
mov ebp [eax+8] +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [ebp+edx+0] cl +
mov edx [eax+16BCh] +
mov ebp [esp+18h+var_14] +
sub ebx edx +
mov ecx ebx +
sar ebp cl +
lea edx [edi+edx-10h] +
mov [eax+16B8h] bp +
mov [eax+16BCh] edx +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [eax+16BCh] +
push ebx  +
cmp edx 8 +
jg loc_4614D0  +
test edx edx +
jle loc_4614B6  +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
xor edx edx +
mov [eax+16B8h] dx +
mov dword ptr [eax+16BCh] 0 +
pop ebx  +
retn   +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
mov edx [eax+14h] +
mov ecx [eax+8] +
lea ebx [edx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [ecx+edx] bl +
jmp loc_4614B6  +
***
mov edx [eax+16BCh] +
push ebx  +
cmp edx 10h +
jz loc_461538  +
cmp edx 7 +
jle loc_461536  +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
shr word ptr [eax+16B8h] 8 +
sub dword ptr [eax+16BCh] 8 +
pop ebx  +
retn   +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
mov edx [eax+14h] +
mov ecx [eax+8] +
lea ebx [edx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [ecx+edx] bl +
xor edx edx +
mov [eax+16B8h] dx +
mov dword ptr [eax+16BCh] 0 +
pop ebx  +
retn   +
***
mov edx [esp+arg_0] +
lea eax [edx+94h] +
mov [edx+0B18h] eax +
lea eax [edx+988h] +
mov [edx+0B24h] eax +
lea eax [edx+0A7Ch] +
mov [edx+0B30h] eax +
xor eax eax +
mov [edx+16B8h] ax +
xor eax eax +
mov dword ptr [edx+0B20h] offset off_47DB28 +
mov dword ptr [edx+0B2Ch] offset off_47DB14 +
mov dword ptr [edx+0B38h] offset unk_47DB00 +
mov dword ptr [edx+16BCh] 0 +
nop   +
lea esi [esi+0] +
xor ecx ecx +
mov [edx+eax*4+94h] cx +
add eax 1 +
cmp eax 11Eh +
jnz loc_4615E0  +
xor ax ax +
xor ecx ecx +
mov [edx+eax*4+988h] cx +
add eax 1 +
cmp eax 1Eh +
jnz loc_4615F7  +
xor al al +
nop   +
lea esi [esi+0] +
xor ecx ecx +
mov [edx+eax*4+0A7Ch] cx +
add eax 1 +
cmp eax 13h +
jnz loc_461610  +
mov eax 1 +
mov [edx+494h] ax +
mov dword ptr [edx+16ACh] 0 +
mov dword ptr [edx+16A8h] 0 +
mov dword ptr [edx+16B0h] 0 +
mov dword ptr [edx+16A0h] 0 +
retn   +
***
push esi  +
push ebx  +
mov ebx [esp+arg_0] +
mov esi [esp+arg_4] +
mov edi [esp+arg_8] +
movzx eax [esp+arg_C] +
mov ecx [ebx+16BCh] +
cmp ecx 0Dh +
jg loc_461713  +
shl eax cl +
add ecx 3 +
or [ebx+16B8h] ax +
mov [ebx+16BCh] ecx +
mov eax ebx +
call sub_461490  +
mov eax [ebx+14h] +
lea ebp [esi+edi] +
mov edx [ebx+8] +
lea ecx [eax+1] +
mov [ebx+14h] ecx +
mov ecx edi +
mov [edx+eax] cl +
mov eax [ebx+14h] +
mov edx [ebx+8] +
lea ecx [eax+1] +
mov [ebx+14h] ecx +
mov ecx edi +
shr cx 8 +
mov [edx+eax] cl +
mov eax [ebx+14h] +
mov edx [ebx+8] +
lea ecx [eax+1] +
mov [ebx+14h] ecx +
mov ecx edi +
not ecx  +
mov [edx+eax] cl +
mov edx [ebx+14h] +
mov ecx [ebx+8] +
lea eax [edx+1] +
mov [ebx+14h] eax +
mov eax edi +
not eax  +
shr ax 8 +
test edi edi +
mov [ecx+edx] al +
jz loc_46170E  +
mov eax [ebx+14h] +
add esi 1 +
mov ecx [ebx+8] +
cmp esi ebp +
lea edx [eax+1] +
mov [ebx+14h] edx +
movzx edx byte ptr [esi-1] +
mov [ecx+eax] dl +
jnz loc_4616F4  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx eax +
shl edx cl +
mov ecx edx +
mov edx [ebx+14h] +
or cx [ebx+16B8h] +
lea ebp [edx+1] +
mov [ebx+14h] ebp +
mov ebp [ebx+8] +
mov [ebx+16B8h] cx +
mov [ebp+edx+0] cl +
mov edx [ebx+14h] +
movzx ecx byte ptr [ebx+16B9h] +
lea ebp [edx+1] +
mov [ebx+14h] ebp +
mov ebp [ebx+8] +
mov [ebp+edx+0] cl +
mov edx [ebx+16BCh] +
mov ecx 10h +
sub ecx edx +
sub edx 0Dh +
sar eax cl +
mov [ebx+16B8h] ax +
mov [ebx+16BCh] edx +
jmp loc_461696  +
***
mov eax [esp+arg_0] +
jmp loc_461500  +
***
push ebx  +
mov eax [esp+arg_0] +
mov ecx [eax+16BCh] +
cmp ecx 0Dh +
jle loc_461815  +
mov ebx 2 +
mov edx [eax+14h] +
mov edi ebx +
mov esi [eax+8] +
shl edi cl +
mov ecx edi +
or cx [eax+16B8h] +
lea edi [edx+1] +
mov [eax+14h] edi +
mov [eax+16B8h] cx +
mov [esi+edx] cl +
mov edx [eax+14h] +
movzx ecx byte ptr [eax+16B9h] +
mov edi [eax+8] +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [edi+edx] cl +
mov edx [eax+16BCh] +
mov ecx 10h +
sub ecx edx +
sar ebx cl +
lea ecx [edx-0Dh] +
cmp ecx 9 +
mov [eax+16B8h] bx +
mov [eax+16BCh] ecx +
jg loc_461831  +
add ecx 7 +
mov [eax+16BCh] ecx +
pop ebx  +
pop esi  +
pop edi  +
jmp loc_461500  +
mov edx 2 +
shl edx cl +
add ecx 3 +
or [eax+16B8h] dx +
cmp ecx 9 +
mov [eax+16BCh] ecx +
jle loc_461804  +
mov edx [eax+14h] +
movzx ecx word ptr [eax+16B8h] +
mov ebx [eax+8] +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [ebx+edx] cl +
mov edx [eax+14h] +
mov ecx [eax+8] +
lea ebx [edx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [ecx+edx] bl +
xor edx edx +
sub dword ptr [eax+16BCh] 9 +
mov [eax+16B8h] dx +
pop ebx  +
pop esi  +
pop edi  +
jmp loc_461500  +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov eax [esp+24h+arg_C] +
mov edi [esp+24h+arg_4] +
mov esi [esp+24h+arg_8] +
mov ebp [ebx+84h] +
mov [esp+24h+var_C] eax +
test ebp ebp +
jle loc_461CDF  +
mov ecx [ebx] +
cmp dword ptr [ecx+2Ch] 2 +
jz loc_461CEB  +
lea edx [ebx+0B18h] +
mov eax ebx +
call sub_460490  +
lea edx [ebx+0B24h] +
mov eax ebx +
call sub_460490  +
mov ecx [ebx+0B1Ch] +
lea edx [ebx+94h] +
mov eax ebx +
call sub_460910  +
mov ecx [ebx+0B28h] +
lea edx [ebx+988h] +
mov eax ebx +
call sub_460910  +
mov eax ebx +
lea edx [ebx+0B30h] +
call sub_460490  +
mov eax 12h +
movzx edx ds:byte_49EE80[eax] +
cmp word ptr [ebx+edx*4+0A7Eh] 0 +
jnz loc_461C94  +
sub eax 1 +
cmp eax 2 +
jnz loc_461907  +
mov ecx 9 +
mov edx [ebx+16A8h] +
lea ecx [ecx+edx+0Eh] +
mov edx [ebx+16ACh] +
mov [ebx+16A8h] ecx +
add ecx 0Ah +
shr ecx 3 +
add edx 0Ah +
shr edx 3 +
cmp ecx edx +
cmova ecx edx +
lea ebp [esi+4] +
cmp ecx ebp +
jb loc_461A0A  +
test edi edi +
jz loc_461A0A  +
mov eax [esp+24h+var_C] +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] edi +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_18] eax +
call sub_461660  +
xor eax eax +
nop   +
xor edi edi +
mov [ebx+eax*4+94h] di +
add eax 1 +
cmp eax 11Eh +
jnz loc_461980  +
xor ax ax +
xor esi esi +
mov [ebx+eax*4+988h] si +
add eax 1 +
cmp eax 1Eh +
jnz loc_461997  +
xor al al +
nop   +
lea esi [esi+0] +
xor ecx ecx +
mov [ebx+eax*4+0A7Ch] cx +
add eax 1 +
cmp eax 13h +
jnz loc_4619B0  +
mov edx [esp+24h+var_C] +
mov eax 1 +
mov [ebx+494h] ax +
mov dword ptr [ebx+16ACh] 0 +
mov dword ptr [ebx+16A8h] 0 +
test edx edx +
mov dword ptr [ebx+16B0h] 0 +
mov dword ptr [ebx+16A0h] 0 +
jnz loc_461C86  +
add esp 24h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebx+88h] 4 +
jz loc_461C9D  +
cmp edx ecx +
jz loc_461C9D  +
mov ecx [ebx+16BCh] +
cmp ecx 0Dh +
jg loc_461D5B  +
movzx edi word ptr [esp+24h+var_C] +
lea edx [edi+4] +
movzx edx dx +
shl edx cl +
add ecx 3 +
or dx [ebx+16B8h] +
mov [ebx+16BCh] ecx +
mov [ebx+16B8h] dx +
mov esi edx +
mov edi [ebx+0B28h] +
cmp ecx 0Bh +
lea ebp [eax+1] +
mov [esp+24h+var_8] edi +
mov edi [ebx+0B1Ch] +
mov [esp+24h+var_4] edi +
jle loc_461E76  +
lea edx [edi-100h] +
movzx edi dx +
mov edx edi +
shl edx cl +
mov ecx edx +
mov edx [ebx+14h] +
or ecx esi +
mov [ebx+16B8h] cx +
lea esi [edx+1] +
mov [ebx+14h] esi +
mov esi [ebx+8] +
mov [esi+edx] cl +
mov edx [ebx+14h] +
mov esi [ebx+8] +
lea ecx [edx+1] +
mov [ebx+14h] ecx +
movzx ecx byte ptr [ebx+16B9h] +
mov [esi+edx] cl +
mov esi [ebx+16BCh] +
mov ecx 10h +
sub ecx esi +
sar edi cl +
lea ecx [esi-0Bh] +
mov esi edi +
mov [ebx+16B8h] di +
mov [ebx+16BCh] ecx +
cmp ecx 0Bh +
jle loc_461E58  +
movzx edi word ptr [esp+24h+var_8] +
mov edx edi +
shl edx cl +
mov ecx edx +
mov edx [ebx+14h] +
or ecx esi +
mov [ebx+16B8h] cx +
lea esi [edx+1] +
mov [ebx+14h] esi +
mov esi [ebx+8] +
mov [esi+edx] cl +
mov edx [ebx+14h] +
mov esi [ebx+8] +
lea ecx [edx+1] +
mov [ebx+14h] ecx +
movzx ecx byte ptr [ebx+16B9h] +
mov [esi+edx] cl +
mov esi [ebx+16BCh] +
mov ecx 10h +
sub ecx esi +
sar edi cl +
lea ecx [esi-0Bh] +
mov edx edi +
mov [ebx+16B8h] di +
mov [ebx+16BCh] ecx +
cmp ecx 0Ch +
jle loc_461E37  +
sub eax 3 +
movzx edi ax +
mov eax edi +
shl eax cl +
mov ecx [ebx+8] +
or edx eax +
mov eax [ebx+14h] +
mov [ebx+16B8h] dx +
lea esi [eax+1] +
mov [ebx+14h] esi +
mov [ecx+eax] dl +
mov eax [ebx+14h] +
mov ecx [ebx+8] +
lea edx [eax+1] +
mov [ebx+14h] edx +
movzx edx byte ptr [ebx+16B9h] +
mov [ecx+eax] dl +
mov eax [ebx+16BCh] +
mov ecx 10h +
sub ecx eax +
sar edi cl +
lea ecx [eax-0Ch] +
mov [ebx+16B8h] di +
mov [ebx+16BCh] ecx +
xor eax eax +
mov [esp+24h+var_14] ebp +
jmp loc_461C1B  +
movzx edx word ptr [ebx+edx*4+0A7Eh] +
add eax 1 +
mov esi edx +
shl esi cl +
mov ecx [ebx+14h] +
or esi edi +
mov edi [ebx+8] +
mov [esp+24h+var_10] edx +
mov edx esi +
mov [ebx+16B8h] si +
lea ebp [ecx+1] +
mov [ebx+14h] ebp +
mov [edi+ecx] dl +
mov ecx [ebx+14h] +
mov esi [ebx+8] +
lea edi [ecx+1] +
mov [ebx+14h] edi +
movzx edi byte ptr [ebx+16B9h] +
mov edx edi +
mov [esi+ecx] dl +
mov esi [ebx+16BCh] +
mov ecx 10h +
mov edx [esp+24h+var_10] +
sub ecx esi +
sub esi 0Dh +
sar edx cl +
cmp [esp+24h+var_14] eax +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] esi +
jle loc_461C50  +
mov ecx [ebx+16BCh] +
movzx edi word ptr [ebx+16B8h] +
cmp ecx 0Dh +
movzx edx ds:byte_49EE80[eax] +
jg loc_461BA0  +
movzx esi word ptr [ebx+edx*4+0A7Eh] +
add eax 1 +
shl esi cl +
add ecx 3 +
or esi edi +
cmp [esp+24h+var_14] eax +
mov [ebx+16B8h] si +
mov [ebx+16BCh] ecx +
jg loc_461C0E  +
mov ecx [esp+24h+var_4] +
lea esi [ebx+94h] +
mov eax ebx +
mov edx esi +
lea edi [ebx+988h] +
call sub_460A00  +
mov ecx [esp+24h+var_8] +
mov edx edi +
mov eax ebx +
call sub_460A00  +
mov ecx edi +
mov edx esi +
mov eax ebx +
call sub_461000  +
jmp loc_46197C  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_461490  +
lea ecx [eax+eax*2+3] +
jmp loc_46192A  +
mov ecx [ebx+16BCh] +
cmp ecx 0Dh +
jg loc_461DD0  +
movzx eax word ptr [esp+24h+var_C] +
add eax 2 +
movzx eax ax +
shl eax cl +
add ecx 3 +
or [ebx+16B8h] ax +
mov [ebx+16BCh] ecx +
mov ecx offset unk_49E980 +
mov edx offset unk_49EA00 +
mov eax ebx +
call sub_461000  +
jmp loc_46197C  +
lea ecx [esi+5] +
xor eax eax +
mov edx ecx +
jmp loc_461951  +
xor eax eax +
mov edx 0F3FFC07Fh +
test dl 1 +
jz loc_461D06  +
cmp word ptr [ebx+eax*4+94h] 0 +
jnz loc_461E9F  +
add eax 1 +
shr edx 1 +
cmp eax 20h +
jnz loc_461CF2  +
cmp word ptr [ebx+0B8h] 0 +
mov edx 1 +
jnz loc_461D53  +
cmp word ptr [ebx+0BCh] 0 +
jnz loc_461D53  +
cmp word ptr [ebx+0C8h] 0 +
jz loc_461D43  +
jmp loc_461D53  +
add eax 1 +
cmp eax 100h +
jz loc_461E9F  +
cmp word ptr [ebx+eax*4+94h] 0 +
jz loc_461D35  +
mov edx 1 +
mov [ecx+2Ch] edx +
jmp loc_4618B5  +
mov edi [esp+24h+var_C] +
lea edx [edi+4] +
movzx edx dx +
mov edi edx +
shl edi cl +
mov ecx [ebx+14h] +
mov esi edi +
mov edi [ebx+8] +
or si [ebx+16B8h] +
mov [esp+24h+var_14] edx +
lea ebp [ecx+1] +
mov edx esi +
mov [ebx+16B8h] si +
mov [ebx+14h] ebp +
mov [edi+ecx] dl +
mov ecx [ebx+14h] +
mov esi [ebx+8] +
lea edi [ecx+1] +
mov [ebx+14h] edi +
movzx edi byte ptr [ebx+16B9h] +
mov edx edi +
mov [esi+ecx] dl +
mov edi [ebx+16BCh] +
mov ecx 10h +
mov edx [esp+24h+var_14] +
sub ecx edi +
sar edx cl +
lea ecx [edi-0Dh] +
mov esi edx +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] ecx +
jmp loc_461A54  +
mov eax [esp+24h+var_C] +
mov esi [ebx+8] +
lea edx [eax+2] +
movzx edx dx +
mov eax edx +
shl eax cl +
mov ecx eax +
mov eax [ebx+14h] +
or cx [ebx+16B8h] +
lea edi [eax+1] +
mov [ebx+14h] edi +
mov [ebx+16B8h] cx +
mov [esi+eax] cl +
mov eax [ebx+14h] +
movzx ecx byte ptr [ebx+16B9h] +
mov edi [ebx+8] +
lea esi [eax+1] +
mov [ebx+14h] esi +
mov [edi+eax] cl +
mov eax [ebx+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 0Dh +
sar edx cl +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] eax +
jmp loc_461CC9  +
lea eax [ebp-4] +
movzx eax ax +
shl eax cl +
add ecx 4 +
or eax edx +
mov [ebx+16B8h] ax +
mov edi eax +
mov [ebx+16BCh] ecx +
jmp loc_461B95  +
movzx edx word ptr [esp+24h+var_8] +
shl edx cl +
add ecx 5 +
or edx esi +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] ecx +
jmp loc_461B35  +
movzx edi word ptr [esp+24h+var_4] +
lea edx [edi-100h] +
movzx edx dx +
shl edx cl +
add ecx 5 +
or edx esi +
mov [ebx+16B8h] dx +
mov esi edx +
mov [ebx+16BCh] ecx +
jmp loc_461AD2  +
xor edx edx +
jmp loc_461D53  +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
mov ecx [esp+10h] +
mov ebx [esp+14h] +
mov edx [eax+16A0h] +
mov esi [eax+16A4h] +
test ecx ecx +
mov [esi+edx*2] cx +
lea esi [edx+1] +
mov [eax+16A0h] esi +
mov esi [eax+1698h] +
mov [esi+edx] bl +
jz loc_461F40  +
movzx edx ds:byte_49E680[ebx] +
lea esi [ecx-1] +
add dword ptr [eax+16B0h] 1 +
add word ptr [eax+edx*4+498h] 1 +
cmp esi 0FFh +
jbe loc_461F31  +
shr esi 7 +
movzx edx ds:byte_49E880[esi] +
add word ptr [eax+edx*4+988h] 1 +
mov ebx [eax+169Ch] +
lea edx [ebx-1] +
cmp [eax+16A0h] edx +
pop ebx  +
pop esi  +
setz al  +
movzx eax al +
retn   +
***
movzx edx ds:byte_49E77F[ecx] +
jmp loc_461F10  +
***
add word ptr [eax+ebx*4+94h] 1 +
jmp loc_461F19  +
***
push ebx  +
mov ebx [esp+4+arg_0] +
mov ecx [esp+4+arg_4] +
jmp loc_461F6B  +
test eax eax +
jz loc_461F94  +
add ebx 1 +
add ecx 1 +
movzx eax byte ptr [ebx] +
movzx edx byte ptr [ecx] +
movzx eax ds:byte_49F140[eax] +
movzx edx ds:byte_49F140[edx] +
cmp eax 2Fh +
cmovz eax esi +
cmp edx 2Fh +
cmovz edx esi +
cmp eax edx +
jz loc_461F61  +
sub eax edx +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_0] +
mov ebx [esp+0Ch+arg_4] +
test edx edx +
jnz loc_461FE1  +
jmp loc_462012  +
test eax eax +
mov edi 5Ch +
setz cl  +
cmp edx 2Fh +
cmovz edx edi +
mov ebp ecx +
cmp eax edx +
jnz loc_462010  +
mov ecx ebp +
test cl cl +
jnz loc_462010  +
add esi 1 +
add ebx 1 +
sub [esp+0Ch+arg_8] 1 +
jz loc_462017  +
movzx eax byte ptr [esi] +
movzx edx byte ptr [ebx] +
movzx eax ds:byte_49F140[eax] +
movzx edx ds:byte_49F140[edx] +
cmp eax 2Fh +
jnz loc_461FB8  +
xor ebp ebp +
mov edi 5Ch +
cmp edx 2Fh +
mov eax 5Ch +
cmovz edx edi +
cmp eax edx +
jz loc_461FCE  +
sub eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
xor eax eax +
test dl dl +
jz loc_462059  +
mov ebx 2Fh +
cmp dl 5Ch +
movzx esi dl +
cmovz esi ebx +
add ecx 1 +
imul eax eax +
movzx edx ds:byte_49F140[esi] +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_462037  +
pop ebx  +
pop esi  +
retn   +
***
sub esp 8 +
mov eax [esp+10h] +
mov [esp+4] eax +
mov eax [esp+0Ch] +
mov [esp] eax +
call sub_461F50  +
test eax eax +
setz al  +
add esp 8 +
movzx eax al +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov [esp] eax +
call sub_4697C0  +
mov ebx eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_4697C0  +
mov [esp] ebx +
mov [esp+4] eax +
mov esi eax +
call sub_461F50  +
mov [esp] ebx +
mov edi eax +
call free  +
mov [esp] esi +
call free  +
xor eax eax +
test edi edi +
setz al  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
mov off_47DB3C eax +
retn   +
***
sub esp 2Ch +
sub esp 18h +
sub esp 18h +
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea esi [eax+1] +
mov [esp+14h+var_14] esi +
call sub_462140  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov edi dword_47DB48 +
mov [esp+14h+var_10] eax +
mov eax ds:dword_4A886C +
mov esi ds:dword_4A8868 +
mov [esp+14h+var_4] edi +
mov [esp+14h+var_14] edi +
mov edi eax +
mov [esp+14h+var_8] eax +
lea esi [esi+0] +
cmp esi edi +
jle loc_4622C5  +
cmp [esp+14h+var_14] esi +
jle loc_4622C5  +
mov edx [esp+14h+var_14] +
mov ebp esi +
sub ebp edi +
sub edx esi +
cmp edx ebp +
jg loc_4622E4  +
test edx edx +
jle loc_46231D  +
mov ebx [esp+14h+var_10] +
lea eax [ebx+edi*4] +
add edi edx +
lea edx [ebx+edi*4] +
lea esi [esi+0] +
mov ecx [eax] +
mov ebx [eax+ebp*4] +
mov [eax] ebx +
mov [eax+ebp*4] ecx +
add eax 4 +
cmp eax edx +
jnz loc_4622B0  +
cmp esi edi +
jg loc_462284  +
mov edi [esp+14h+var_4] +
mov eax edi +
sub eax esi +
add eax [esp+14h+var_8] +
mov ds:dword_4A8868 edi +
mov ds:dword_4A886C eax +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebp ebp +
jle loc_462315  +
mov ebx [esp+14h+var_10] +
lea edx [ebp+edi+0] +
mov [esp+14h+var_C] esi +
lea eax [ebx+edi*4] +
lea ebx [ebx+edx*4] +
mov edx [esp+14h+var_14] +
sub edx esi +
nop   +
mov ecx [eax] +
mov esi [eax+edx*4] +
mov [eax] esi +
mov [eax+edx*4] ecx +
add eax 4 +
cmp eax ebx +
jnz loc_462300  +
mov esi [esp+14h+var_C] +
sub [esp+14h+var_14] ebp +
jmp loc_462280  +
add edi edx +
jmp loc_462280  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax dword_47DB48 +
mov ds:dword_4A8864 0 +
test eax eax +
jnz loc_462590  +
mov dword_47DB48 1 +
mov eax 1 +
mov [esp+4Ch+var_4C] offset aPosixly_correc +
mov ds:dword_4A8868 eax +
mov ds:dword_4A886C eax +
mov ds:dword_4A8878 0 +
call getenv  +
mov edi [esp+4Ch+arg_8] +
movzx edx byte ptr [edi] +
mov ds:dword_4A8870 eax +
cmp dl 2Dh +
jz loc_462823  +
cmp dl 2Bh +
jz loc_4627D2  +
test eax eax +
setz al  +
movzx eax al +
mov ds:dword_4A8874 eax +
mov ds:dword_4A8860 1 +
mov edx ds:dword_4A8878 +
test edx edx +
jz loc_4625A3  +
movzx eax byte ptr [edx] +
test al al +
mov byte ptr [esp+4Ch+var_2C] al +
jz loc_4625A3  +
mov [esp+4Ch+var_34] edx +
mov ecx [esp+4Ch+arg_C] +
test ecx ecx +
jz loc_462654  +
mov eax dword_47DB48 +
lea edi ds:0[eax*4] +
mov [esp+4Ch+var_10] edi +
mov edi [esp+4Ch+arg_4] +
mov [esp+4Ch+var_24] eax +
mov eax [edi+eax*4] +
mov [esp+4Ch+var_20] eax +
movzx eax byte ptr [eax+1] +
cmp al 2Dh +
mov [esp+4Ch+var_19] al +
jz loc_462452  +
mov edx [esp+4Ch+arg_14] +
test edx edx +
jz loc_462654  +
mov eax [esp+4Ch+var_20] +
cmp byte ptr [eax+2] 0 +
jnz loc_462452  +
mov eax [esp+4Ch+arg_8] +
movzx ecx byte ptr [eax] +
test cl cl +
jz loc_462452  +
movzx ebx [esp+4Ch+var_19] +
cmp bl cl +
jnz loc_462448  +
jmp loc_462D0A  +
cmp bl dl +
jz loc_4629C3  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_462440  +
movzx eax byte ptr [esp+4Ch+var_2C] +
mov esi [esp+4Ch+var_34] +
test al al +
jz loc_462473  +
cmp al 3Dh +
jnz loc_462469  +
jmp loc_462473  +
test al al +
jz loc_462473  +
add esi 1 +
movzx eax byte ptr [esi] +
cmp al 3Dh +
jnz loc_462465  +
mov eax [esp+4Ch+arg_C] +
mov ebp [eax] +
test ebp ebp +
jz loc_462922  +
mov eax esi +
mov ebx [esp+4Ch+arg_C] +
xor edi edi +
sub eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_18] esi +
mov [esp+4Ch+var_14] 0FFFFFFFFh +
mov [esp+4Ch+var_28] 0 +
mov esi eax +
mov [esp+4Ch+var_30] 0 +
jmp loc_4624C4  +
mov [esp+4Ch+var_28] 1 +
add ebx 10h +
mov ebp [ebx] +
add edi 1 +
test ebp ebp +
jz loc_462508  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call strncmp  +
test eax eax +
jnz loc_4624B8  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
cmp eax esi +
jz loc_4628F3  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_4624B0  +
mov [esp+4Ch+var_30] ebx +
add ebx 10h +
mov ebp [ebx] +
mov [esp+4Ch+var_14] edi +
add edi 1 +
test ebp ebp +
jnz loc_4624C4  +
mov eax [esp+4Ch+var_28] +
mov esi [esp+4Ch+var_18] +
test eax eax +
jz loc_462890  +
mov eax dword_47DB44 +
mov esi [esp+4Ch+var_24] +
mov ebx [esp+4Ch+var_34] +
test eax eax +
jz loc_46255F  +
mov eax [esp+4Ch+arg_4] +
mov ecx [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_48] offset aSOptionSIsAmbi +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov ebx ds:dword_4A8878 +
mov esi dword_47DB48 +
mov [esp+4Ch+var_4C] ebx +
add esi 1 +
call strlen  +
mov dword_47DB48 esi +
mov dword_47DB40 0 +
add ebx eax +
mov eax 3Fh +
mov ds:dword_4A8878 ebx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi ds:dword_4A8860 +
test esi esi +
jz loc_46235D  +
jmp loc_4623B2  +
mov eax dword_47DB48 +
cmp ds:dword_4A8868 eax +
jle loc_4625B5  +
mov ds:dword_4A8868 eax +
cmp eax ds:dword_4A886C +
jge loc_4625C2  +
mov ds:dword_4A886C eax +
mov ebx ds:dword_4A8874 +
cmp ebx 1 +
jz loc_462740  +
cmp [esp+4Ch+arg_0] eax +
jz loc_4627AC  +
mov edi [esp+4Ch+arg_4] +
mov ecx 3 +
mov ebp [edi+eax*4] +
mov edi offset asc_49F450 +
mov esi ebp +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jnz loc_462710  +
mov edx ds:dword_4A886C +
add eax 1 +
mov ecx ds:dword_4A8868 +
mov dword_47DB48 eax +
cmp edx ecx +
jz loc_462900  +
cmp eax ecx +
jz loc_462631  +
mov eax [esp+4Ch+arg_4] +
call sub_462250  +
mov edx ds:dword_4A886C +
mov eax [esp+4Ch+arg_0] +
cmp eax edx +
mov ds:dword_4A8868 eax +
mov dword_47DB48 eax +
jnz loc_4627BF  +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4Ch+arg_8] +
mov ecx [esp+4Ch+var_34] +
movzx eax byte ptr [eax] +
add ecx 1 +
mov ds:dword_4A8878 ecx +
test al al +
jz loc_462692  +
movzx ebx byte ptr [esp+4Ch+var_2C] +
cmp bl al +
jz loc_462B81  +
mov eax [esp+4Ch+arg_8] +
jmp loc_462688  +
cmp dl bl +
jz loc_462837  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_462680  +
mov edx 1 +
xor eax eax +
mov edi [esp+4Ch+var_34] +
cmp byte ptr [edi+1] 0 +
jnz loc_4626AA  +
add dword_47DB48 1 +
test dl dl +
jz loc_462861  +
mov ecx dword_47DB44 +
test ecx ecx +
jz loc_462881  +
mov eax [esp+4Ch+arg_4] +
mov edx ds:dword_4A8870 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
mov eax [eax] +
test edx edx +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_44] eax +
jz loc_462AFB  +
mov [esp+4Ch+var_48] offset aSIllegalOption +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax ebx +
mov dword_47DB40 eax +
add esp 4Ch +
mov eax 3Fh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebp+0] 2Dh +
jz loc_4627E6  +
test ebx ebx +
jz loc_462647  +
add eax 1 +
mov dword_47DB48 eax +
mov eax 1 +
mov ds:dword_4A8864 ebp +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ds:dword_4A886C +
mov edx ds:dword_4A8868 +
cmp ecx edx +
jz loc_4629B1  +
cmp eax edx +
jz loc_462766  +
mov eax [esp+4Ch+arg_4] +
call sub_462250  +
mov eax dword_47DB48 +
cmp [esp+4Ch+arg_0] eax +
mov edx eax +
jle loc_46279C  +
mov esi [esp+4Ch+arg_0] +
mov ecx [esp+4Ch+arg_4] +
jmp loc_462789  +
add edx 1 +
cmp edx esi +
mov dword_47DB48 edx +
jz loc_462850  +
mov eax [ecx+edx*4] +
cmp byte ptr [eax] 2Dh +
jnz loc_462778  +
cmp byte ptr [eax+1] 0 +
jz loc_462778  +
mov eax dword_47DB48 +
mov ds:dword_4A8868 edx +
cmp [esp+4Ch+arg_0] eax +
jnz loc_4625DB  +
mov eax ds:dword_4A8868 +
mov edx ds:dword_4A886C +
cmp eax edx +
jz loc_462647  +
mov dword_47DB48 edx +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ds:dword_4A8874 0 +
add [esp+4Ch+arg_8] 1 +
jmp loc_4623A8  +
movzx ecx byte ptr [ebp+1] +
test cl cl +
jz loc_46271A  +
mov ebx [esp+4Ch+arg_C] +
test ebx ebx +
jz loc_4629A7  +
xor eax eax +
cmp cl 2Dh +
setz al  +
add eax 1 +
lea edx [ebp+eax+0] +
movzx eax byte ptr [edx] +
mov ds:dword_4A8878 edx +
mov [esp+4Ch+var_34] edx +
mov byte ptr [esp+4Ch+var_2C] al +
jmp loc_4623D3  +
mov ds:dword_4A8874 2 +
add [esp+4Ch+arg_8] 1 +
jmp loc_4623A8  +
test eax eax +
setz dl  +
cmp byte ptr [esp+4Ch+var_2C] 3Ah +
setz bl  +
or edx ebx +
jmp loc_462699  +
mov eax [esp+4Ch+arg_0] +
mov edx eax +
mov ds:dword_4A8868 edx +
jmp loc_4627A2  +
cmp byte ptr [eax] 57h +
movzx edx byte ptr [eax+1] +
jz loc_4629D7  +
cmp dl 3Ah +
jz loc_462AC2  +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_462735  +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_4626FB  +
mov ebx [esp+4Ch+var_30] +
test ebx ebx +
jz loc_462922  +
mov edi [esp+4Ch+var_14] +
mov eax [esp+4Ch+var_24] +
add eax 1 +
mov dword_47DB48 eax +
cmp byte ptr [esi] 0 +
jnz loc_46290C  +
cmp dword ptr [ebx+4] 1 +
jz loc_462BCB  +
mov esi [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
call strlen  +
mov ebp [esp+4Ch+arg_10] +
add eax esi +
test ebp ebp +
mov ds:dword_4A8878 eax +
jz loc_4628DC  +
mov eax [esp+4Ch+arg_10] +
mov [eax] edi +
mov eax [ebx+8] +
test eax eax +
jz loc_462C1D  +
mov edx [ebx+0Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_462735  +
mov esi [esp+4Ch+var_18] +
jmp loc_4628A0  +
mov ds:dword_4A886C eax +
mov edx eax +
jmp loc_462631  +
mov eax [ebx+4] +
test eax eax +
jz loc_462B08  +
add esi 1 +
mov ds:dword_4A8864 esi +
jmp loc_4628BB  +
mov edi [esp+4Ch+arg_14] +
test edi edi +
jnz loc_462D14  +
mov esi dword_47DB44 +
mov eax [esp+4Ch+var_24] +
test esi esi +
jz loc_462981  +
cmp [esp+4Ch+var_19] 2Dh +
jz loc_462E6E  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_34] +
mov ecx [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_3C] edi +
movsx edx byte ptr [ecx] +
mov [esp+4Ch+var_48] offset aSUnrecognizedO +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
mov [esp+4Ch+var_40] edx +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax dword_47DB48 +
add eax 1 +
mov dword_47DB48 eax +
mov eax 3Fh +
mov ds:dword_4A8878 offset unk_49F53C +
mov dword_47DB40 0 +
jmp loc_462735  +
mov eax 1 +
jmp loc_462809  +
cmp eax ecx +
jz loc_462766  +
mov ds:dword_4A886C eax +
jmp loc_462766  +
mov eax ecx +
mov ecx [esp+4Ch+var_34] +
add ecx 1 +
mov ds:dword_4A8878 ecx +
jmp loc_46266C  +
cmp dl 3Bh +
jnz loc_46286E  +
mov eax [esp+4Ch+var_34] +
cmp byte ptr [eax+1] 0 +
jz loc_462CDD  +
add dword_47DB48 1 +
mov ds:dword_4A8864 ecx +
mov [esp+4Ch+var_34] ecx +
mov eax [esp+4Ch+var_34] +
movzx ebx byte ptr [eax] +
mov ds:dword_4A8878 eax +
cmp bl 3Dh +
jz loc_462FB3  +
test bl bl +
jz loc_462FB3  +
mov esi eax +
jmp loc_462A24  +
test bl bl +
jz loc_462A2F  +
add esi 1 +
movzx ebx byte ptr [esi] +
cmp bl 3Dh +
jnz loc_462A20  +
mov eax [esp+4Ch+arg_C] +
mov ebp [eax] +
test ebp ebp +
jz loc_462F9F  +
mov eax esi +
xor edi edi +
sub eax [esp+4Ch+var_34] +
mov byte ptr [esp+4Ch+var_24] bl +
mov ebx [esp+4Ch+arg_C] +
mov [esp+4Ch+var_20] esi +
mov [esp+4Ch+var_28] 0 +
mov esi eax +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_30] 0 +
jmp loc_462A88  +
mov [esp+4Ch+var_2C] 1 +
add ebx 10h +
mov ebp [ebx] +
add edi 1 +
test ebp ebp +
jz loc_462C25  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call strncmp  +
test eax eax +
jnz loc_462A78  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
cmp eax esi +
jz loc_462E52  +
mov ebp [esp+4Ch+var_30] +
test ebp ebp +
jnz loc_462A70  +
mov [esp+4Ch+var_28] edi +
mov [esp+4Ch+var_30] ebx +
jmp loc_462A78  +
cmp byte ptr [eax+2] 3Ah +
mov eax [esp+4Ch+var_34] +
jz loc_462BF7  +
cmp byte ptr [eax+1] 0 +
jz loc_462B9D  +
add dword_47DB48 1 +
movsx eax byte ptr [esp+4Ch+var_2C] +
mov ds:dword_4A8864 ecx +
mov ds:dword_4A8878 0 +
jmp loc_462735  +
mov [esp+4Ch+var_48] offset aSInvalidOption +
jmp loc_4626E9  +
mov eax dword_47DB44 +
test eax eax +
jz loc_4628BB  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_24] +
mov eax [eax+edi*4] +
cmp byte ptr [eax+1] 2Dh +
jz loc_462D74  +
mov ecx [ebx] +
mov edi [esp+4Ch+arg_4] +
mov edx [edi] +
mov [esp+4Ch+var_3C] ecx +
movsx eax byte ptr [eax] +
mov [esp+4Ch+var_48] offset aSOptionCSDoesn +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_40] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov esi ds:dword_4A8878 +
mov [esp+4Ch+var_4C] esi +
call strlen  +
add esi eax +
mov eax [ebx+0Ch] +
mov ds:dword_4A8878 esi +
mov dword_47DB40 eax +
mov eax 3Fh +
jmp loc_462735  +
mov ebx [esp+4Ch+arg_8] +
cmp byte ptr [esp+4Ch+var_2C] 3Ah +
setz dl  +
test ebx ebx +
setz al  +
or edx eax +
mov eax [esp+4Ch+arg_8] +
jmp loc_462699  +
mov eax dword_47DB48 +
cmp eax [esp+4Ch+arg_0] +
jz loc_462DA1  +
mov ecx [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_47DB48 edx +
mov eax [ecx+eax*4] +
mov ds:dword_4A8864 eax +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_462AEC  +
cmp [esp+4Ch+arg_0] eax +
jle loc_462C9D  +
mov eax [esp+4Ch+var_24] +
mov ecx [esp+4Ch+var_10] +
add eax 2 +
mov dword_47DB48 eax +
mov eax [esp+4Ch+arg_4] +
mov eax [eax+ecx+4] +
mov ds:dword_4A8864 eax +
jmp loc_4628BB  +
cmp byte ptr [eax+1] 0 +
jz loc_462D65  +
add dword_47DB48 1 +
mov ds:dword_4A8864 ecx +
mov ds:dword_4A8878 0 +
jmp loc_462877  +
mov eax [ebx+0Ch] +
jmp loc_462735  +
mov edi [esp+4Ch+var_2C] +
movzx ebx byte ptr [esp+4Ch+var_24] +
mov esi [esp+4Ch+var_20] +
test edi edi +
jz loc_462DCF  +
mov ecx dword_47DB44 +
mov ebx [esp+4Ch+var_34] +
test ecx ecx +
jz loc_462C7C  +
mov eax dword_47DB48 +
mov ecx [esp+4Ch+arg_4] +
mov edx [ecx+eax*4] +
mov eax [ecx] +
mov [esp+4Ch+var_48] offset aSOptionWSIsAmb +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov ebx ds:dword_4A8878 +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
add dword_47DB48 1 +
add ebx eax +
mov eax 3Fh +
mov ds:dword_4A8878 ebx +
jmp loc_462735  +
mov eax dword_47DB44 +
mov esi [esp+4Ch+var_34] +
test eax eax +
jnz loc_462EA2  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
add esi eax +
mov eax [ebx+0Ch] +
mov ds:dword_4A8878 esi +
mov dword_47DB40 eax +
mov eax [esp+4Ch+arg_8] +
cmp byte ptr [eax] 3Ah +
jnz loc_462700  +
mov eax 3Ah +
jmp loc_462735  +
mov eax dword_47DB48 +
cmp eax [esp+4Ch+arg_0] +
jz loc_462EDA  +
mov edi [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_47DB48 edx +
mov eax [edi+eax*4] +
mov ds:dword_4A8864 eax +
mov [esp+4Ch+var_34] eax +
jmp loc_4629FF  +
movzx eax [esp+4Ch+var_19] +
jmp loc_4629C5  +
cmp [esp+4Ch+var_19] 2Dh +
jz loc_462E61  +
mov eax [esp+4Ch+arg_8] +
movzx eax byte ptr [eax] +
test al al +
jz loc_462D4F  +
movzx ebx byte ptr [esp+4Ch+var_2C] +
cmp al bl +
jz loc_462FEF  +
mov edx [esp+4Ch+arg_8] +
jmp loc_462D45  +
cmp cl bl +
jz loc_4629C5  +
add edx 1 +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_462D3D  +
cmp dword_47DB44 0 +
jnz loc_462947  +
mov eax [esp+4Ch+var_24] +
jmp loc_462981  +
mov ds:dword_4A8864 0 +
jmp loc_462C0E  +
mov eax [esp+4Ch+arg_4] +
mov edx [ebx] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aSOptionSDoesnT +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
jmp loc_462B59  +
mov eax dword_47DB44 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
test eax eax +
jnz loc_462F74  +
mov eax [esp+4Ch+arg_8] +
mov dword_47DB40 ebx +
cmp byte ptr [eax] 3Ah +
setnz al  +
movzx eax al +
lea eax [eax+eax*4+3Ah] +
jmp loc_462AEC  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jz loc_462F9F  +
mov edi [esp+4Ch+var_28] +
mov [esp+4Ch+arg_C] eax +
test bl bl +
mov eax [esp+4Ch+arg_C] +
jz loc_462F2A  +
cmp dword ptr [eax+4] 0 +
jnz loc_462FE1  +
cmp dword_47DB44 0 +
jz loc_462E2E  +
mov eax [esp+4Ch+arg_C] +
mov edx [eax] +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aSOptionWSDoesn +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov edx ds:dword_4A8878 +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi edx +
scas   +
not ecx  +
lea eax [edx+ecx-1] +
mov ds:dword_4A8878 eax +
mov eax 3Fh +
jmp loc_462735  +
mov [esp+4Ch+arg_C] ebx +
mov esi [esp+4Ch+var_20] +
movzx ebx byte ptr [esp+4Ch+var_24] +
jmp loc_462DE3  +
cmp dword_47DB44 0 +
jz loc_462D5C  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_34] +
mov eax [eax] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_48] offset aSUnrecognize_0 +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax dword_47DB48 +
jmp loc_462981  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_24] +
mov edx [eax+edi*4] +
mov eax [eax] +
mov [esp+4Ch+var_48] offset aSOptionSRequir +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov esi ds:dword_4A8878 +
jmp loc_462CAE  +
mov eax dword_47DB44 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
test eax eax +
jz loc_462F0E  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_48] offset aSOptionRequire +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax [esp+4Ch+arg_8] +
mov dword_47DB40 ebx +
cmp byte ptr [eax] 3Ah +
setnz al  +
movzx eax al +
lea eax [eax+eax*4+3Ah] +
jmp loc_462735  +
cmp dword ptr [eax+4] 1 +
jz loc_462FBC  +
mov ebx [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
mov edx [esp+4Ch+arg_10] +
add eax ebx +
test edx edx +
mov ds:dword_4A8878 eax +
jz loc_462F55  +
mov eax [esp+4Ch+arg_10] +
mov [eax] edi +
mov eax [esp+4Ch+arg_C] +
mov eax [eax+8] +
test eax eax +
jz loc_462FF9  +
mov edi [esp+4Ch+arg_C] +
mov edx [edi+0Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_462735  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_48] offset aSOptionRequire +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
jmp loc_462DB3  +
mov ds:dword_4A8878 0 +
mov eax 57h +
jmp loc_462735  +
mov esi [esp+4Ch+var_34] +
jmp loc_462A2F  +
mov eax dword_47DB48 +
cmp [esp+4Ch+arg_0] eax +
jle loc_463005  +
mov ecx [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_47DB48 edx +
mov eax [ecx+eax*4] +
mov ds:dword_4A8864 eax +
jmp loc_462F34  +
add esi 1 +
mov ds:dword_4A8864 esi +
jmp loc_462F34  +
movzx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_4629C5  +
mov eax [esp+4Ch+arg_C] +
mov eax [eax+0Ch] +
jmp loc_462735  +
cmp dword_47DB44 0 +
jz loc_463038  +
mov edi [esp+4Ch+arg_4] +
mov edx [edi+eax*4-4] +
mov eax [edi] +
mov [esp+4Ch+var_48] offset aSOptionSRequir +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov edx ds:dword_4A8878 +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi edx +
scas   +
not ecx  +
lea eax [edx+ecx-1] +
mov ds:dword_4A8878 eax +
mov eax [esp+4Ch+arg_8] +
cmp byte ptr [eax] 3Ah +
jnz loc_462700  +
jmp loc_462CD3  +
***
sub esp 2Ch +
mov eax [esp+38h] +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_462330  +
add esp 2Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
test esi esi +
jz loc_463156  +
mov ecx [esi] +
test ecx ecx +
jz loc_46314B  +
xor eax eax +
nop   +
add eax 1 +
mov edx [esi+eax*4] +
test edx edx +
jnz loc_4630D0  +
lea eax ds:4[eax*4] +
mov [esp+1Ch+var_1C] eax +
call sub_462140  +
mov [esp+1Ch+var_10] eax +
mov eax [esi] +
test eax eax +
jz loc_463152  +
lea ebx [esi+4] +
mov ebp esi +
xor edi edi +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
add edi [esp+1Ch+var_10] +
add eax 1 +
mov [esp+1Ch+var_1C] eax +
call sub_462140  +
mov [edi] eax +
mov edx [ebp+0] +
mov edi ebx +
mov ebp ebx +
add ebx 4 +
mov [esp+1Ch+var_1C] eax +
sub edi esi +
mov [esp+1Ch+var_18] edx +
call strcpy  +
mov eax [ebx-4] +
test eax eax +
jnz loc_463100  +
mov eax [esp+1Ch+var_10] +
mov dword ptr [eax+edi] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 4 +
jmp loc_4630E1  +
xor edi edi +
jmp loc_463138  +
xor eax eax +
jmp loc_463143  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
test esi esi +
jz loc_463194  +
mov eax [esi] +
mov ebx esi +
test eax eax +
jz loc_463186  +
mov [esp] eax +
add ebx 4 +
call free  +
mov eax [ebx] +
test eax eax +
jnz loc_463175  +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp free  +
***
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
test ebx ebx +
jz loc_4633B3  +
mov [esp+2Ch+var_2C] ebx +
xor esi esi +
xor ebp ebp +
call strlen  +
xor edi edi +
add eax 1 +
mov [esp+2Ch+var_2C] eax +
call sub_462140  +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_14] eax +
jmp loc_4631F3  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test ds:byte_49F240[eax+eax] 40h +
jnz loc_4631F0  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jz loc_463336  +
mov eax [esp+2Ch+var_18] +
sub eax 1 +
cmp [esp+2Ch+var_1C] eax +
jge loc_463336  +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
lea eax [eax+edx*4] +
mov [esp+2Ch+var_10] eax +
movzx eax byte ptr [ebx] +
mov edx [esp+2Ch+var_14] +
test al al +
jnz loc_463251  +
jmp loc_463296  +
mov [edx] al +
xor esi esi +
add edx 1 +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_463296  +
movzx ecx al +
test ds:byte_49F240[ecx+ecx] 40h +
jz loc_46326A  +
mov ecx esi +
or ecx edi +
or ecx ebp +
jz loc_463390  +
test esi esi +
jnz loc_463240  +
cmp al 5Ch +
jz loc_463316  +
test edi edi +
jz loc_463303  +
cmp al 27h +
jz loc_463377  +
add ebx 1 +
add edx 1 +
mov [edx-1] al +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_463251  +
mov eax [esp+2Ch+var_14] +
mov byte ptr [edx] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_462210  +
mov edx [esp+2Ch+var_10] +
add [esp+2Ch+var_1C] 1 +
mov [edx] eax +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
mov dword ptr [eax+edx*4] 0 +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_49F240[edx+edx] 40h +
jz loc_4632E3  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_49F240[edx+edx] 40h +
jnz loc_4632D0  +
test al al +
jnz loc_4631F3  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call free  +
mov eax [esp+2Ch+var_20] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebp ebp +
jz loc_463320  +
cmp al 22h +
jnz loc_463286  +
xor ebp ebp +
jmp loc_463247  +
mov esi 1 +
jmp loc_463247  +
cmp al 27h +
jz loc_463380  +
cmp al 22h +
jnz loc_463286  +
mov ebp 1 +
jmp loc_463247  +
mov eax [esp+2Ch+var_20] +
test eax eax +
jz loc_463399  +
shl [esp+2Ch+var_18] 1 +
mov eax [esp+2Ch+var_18] +
shl eax 2 +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_2C] eax +
call sub_4621C0  +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
lea eax [eax+edx*4] +
mov [esp+2Ch+var_10] eax +
mov dword ptr [eax] 0 +
jmp loc_46322C  +
xor edi edi +
jmp loc_463247  +
mov edi 1 +
jmp loc_463247  +
xor esi esi +
xor ebp ebp +
jmp loc_463296  +
mov [esp+2Ch+var_2C] 20h +
call sub_462140  +
mov [esp+2Ch+var_18] 8 +
mov [esp+2Ch+var_20] eax +
jmp loc_46335D  +
mov [esp+2Ch+var_20] 0 +
jmp loc_4632F7  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+34h] +
mov edi [esp+30h] +
test esi esi +
jz loc_46342C  +
mov ebx [edi] +
test ebx ebx +
jnz loc_4633FC  +
jmp loc_46345D  +
cmp al 27h +
jz loc_463417  +
cmp al 22h +
jz loc_463417  +
mov [esp+4] esi +
mov [esp] ebp +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_46342C  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_463440  +
movzx edx al +
movsx ebp al +
test ds:byte_49F240[edx+edx] 40h +
jnz loc_463417  +
cmp al 5Ch +
jnz loc_4633E0  +
mov [esp+4] esi +
mov dword ptr [esp] 5Ch +
call fputc  +
cmp eax 0FFFFFFFFh +
jnz loc_4633E8  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+4] esi +
mov dword ptr [esp] 0Ah +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_46342C  +
add edi 4 +
jmp loc_4633D3  +
***
xor eax eax +
nop   +
jmp loc_463431  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+48h+arg_0] +
lea ebx [ebp+1] +
mov [esp+48h+var_30] 7D0h +
mov ecx [eax] +
cmp ebx ecx +
jge loc_4634AE  +
nop   +
mov eax [esp+48h+arg_4] +
lea edi ds:0[ebx*4] +
mov edx [eax] +
mov eax [edx+ebx*4] +
cmp byte ptr [eax] 40h +
jz loc_4634B6  +
mov ebp ebx +
lea ebx [ebp+1] +
cmp ebx ecx +
jl loc_463490  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub [esp+48h+var_30] 1 +
jz loc_463721  +
add eax 1 +
mov [esp+48h+var_44] offset aR_0 +
mov [esp+48h+var_48] eax +
call fopen  +
test eax eax +
mov esi eax +
jz loc_4636A8  +
mov [esp+48h+var_40] 2 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] eax +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_4636A0  +
mov [esp+48h+var_48] esi +
call ftell  +
cmp eax 0FFFFFFFFh +
mov [esp+48h+var_2C] eax +
jz loc_4636A0  +
mov [esp+48h+var_40] 0 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] esi +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_4636A0  +
mov edx [esp+48h+var_2C] +
lea eax [edx+1] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_28] edx +
call sub_462140  +
mov edx [esp+48h+var_28] +
mov [esp+48h+var_3C] esi +
mov [esp+48h+var_44] 1 +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_2C] eax +
call fread  +
mov edx [esp+48h+var_28] +
cmp edx eax +
mov ecx eax +
jz loc_46358A  +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_28] eax +
call ferror  +
mov ecx [esp+48h+var_28] +
test eax eax +
jnz loc_4636A0  +
mov eax [esp+48h+var_2C] +
mov byte ptr [eax+ecx] 0 +
movzx eax byte ptr [eax] +
test al al +
jz loc_4635C8  +
test ds:byte_49F240[eax+eax] 40h +
jz loc_4636B5  +
mov eax [esp+48h+var_2C] +
jmp loc_4635BE  +
test ds:byte_49F240[edx+edx] 40h +
jz loc_4636B5  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_4635B0  +
mov [esp+48h+var_48] 4 +
call sub_462140  +
mov dword ptr [eax] 0 +
mov [esp+48h+var_24] eax +
mov eax [esp+48h+arg_4] +
mov eax [eax] +
mov [esp+48h+var_48] eax +
call sub_4630B0  +
xor edx edx +
mov [esp+48h+var_20] 0 +
mov ecx eax +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+arg_4] +
mov [eax] ecx +
mov ecx [esp+48h+arg_0] +
mov eax edx +
mov [esp+48h+var_1C] edx +
add eax [ecx] +
lea eax ds:4[eax*4] +
mov [esp+48h+var_44] eax +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] eax +
call sub_4621C0  +
mov ecx [esp+48h+arg_4] +
mov edx [esp+48h+var_1C] +
mov [esp+48h+var_28] edx +
mov [ecx] eax +
mov ecx [esp+48h+arg_0] +
mov ecx [ecx] +
sub ecx ebx +
add ebx edx +
shl ecx 2 +
mov [esp+48h+var_40] ecx +
lea ecx [eax+edi+4] +
lea eax [eax+ebx*4] +
mov [esp+48h+var_44] ecx +
mov [esp+48h+var_48] eax +
call memmove  +
mov eax [esp+48h+arg_4] +
mov ebx [esp+48h+var_24] +
add edi [eax] +
mov eax [esp+48h+var_20] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] edi +
mov [esp+48h+var_40] eax +
call memcpy  +
mov eax [esp+48h+arg_0] +
mov edx [esp+48h+var_28] +
mov edi [esp+48h+arg_0] +
mov eax [eax] +
lea eax [edx+eax-1] +
mov [edi] eax +
mov [esp+48h+var_48] ebx +
mov ebx ebp +
call free  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_48] eax +
call free  +
nop   +
mov [esp+48h+var_48] esi +
call fclose  +
mov eax [esp+48h+arg_0] +
mov ebp ebx +
mov ecx [eax] +
jmp loc_4634A7  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_48] eax +
call sub_4631A0  +
mov edx [eax] +
mov [esp+48h+var_24] eax +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_20] edx +
mov eax [eax] +
mov [esp+48h+var_48] eax +
call sub_4630B0  +
mov edx [esp+48h+var_20] +
test edx edx +
mov ecx eax +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+arg_4] +
mov [eax] ecx +
jz loc_46374B  +
mov eax [esp+48h+var_24] +
xor edx edx +
mov ecx [esp+48h+var_28] +
mov [esp+48h+var_1C] ebp +
nop   +
lea esi [esi+0] +
add edx 1 +
cmp dword ptr [eax+edx*4] 0 +
lea ebp ds:0[edx*4] +
jnz loc_463700  +
mov [esp+48h+var_20] ebp +
mov ebp [esp+48h+var_1C] +
mov [esp+48h+var_28] ecx +
jmp loc_463602  +
mov eax [edx] +
mov [esp+48h+var_44] offset aSErrorTooMany@ +
mov [esp+48h+var_40] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+48h+var_48] eax +
call fprintf  +
mov [esp+48h+var_48] 1 +
call sub_469480  +
mov [esp+48h+var_20] 0 +
jmp loc_463602  +
***
add eax 1 +
mov ecx [edx+eax*4] +
test ecx ecx +
jnz loc_463770  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_462330  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+14h] 1 +
mov [esp+10h] eax +
mov eax [esp+3Ch] +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_462330  +
add esp 2Ch +
retn   +
***
push ebx  +
mov edx [eax] +
movsx ebx byte ptr [edx] +
add edx 1 +
movzx esi bl +
test ds:byte_49F240[esi+esi] 4 +
jz loc_463855  +
lea esi [esi+0] +
lea ecx [ecx+ecx*4] +
mov [eax] edx +
lea ecx [ebx+ecx*2-30h] +
movsx ebx byte ptr [edx] +
add edx 1 +
movzx esi bl +
test ds:byte_49F240[esi+esi] 4 +
jnz loc_463830  +
test ecx ecx +
js loc_463855  +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
retn   +
***
mov ebx eax +
movsx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_463880  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_4638A8  +
add edx 1 +
sub eax 30h +
mov [ebx] edx +
pop ebx  +
retn   +
lea eax [edx+1] +
mov [ebx] eax +
movzx eax byte ptr [edx+1] +
test ds:byte_49F240[eax+eax] 4 +
jz loc_4638A8  +
mov eax ebx +
call sub_463810  +
mov edx [ebx] +
cmp byte ptr [edx] 5Fh +
jnz loc_4638A8  +
add edx 1 +
mov [ebx] edx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
movzx edx cl +
test ds:byte_49F240[edx+edx] 4 +
jz loc_463920  +
sub ecx 30h +
lea ebx [eax+1] +
mov [ebp+0] ecx +
mov [edi] ebx +
movsx edx byte ptr [eax+1] +
mov eax 1 +
movzx esi dl +
test ds:byte_49F240[esi+esi] 4 +
jz loc_463914  +
nop   +
lea esi [esi+0] +
add ebx 1 +
lea eax [ecx+ecx*4] +
lea ecx [edx+eax*2-30h] +
movsx edx byte ptr [ebx] +
movzx esi dl +
test ds:byte_49F240[esi+esi] 4 +
jnz loc_4638F0  +
cmp dl 5Fh +
mov eax 1 +
jz loc_463927  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov [edi] ebx +
mov [ebp+0] ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov edx [ebx+10h] +
lea esi ds:0FFFFFFFCh[edx*4] +
jmp loc_463969  +
mov eax [ebx+8] +
sub edx 1 +
mov [ebx+10h] edx +
lea ecx [esi-4] +
mov eax [eax+esi] +
test eax eax +
jnz loc_4639C6  +
mov esi ecx +
test edx edx +
jg loc_463954  +
mov edx [ebx+14h] +
mov edi [ebx+0Ch] +
lea esi ds:0FFFFFFFCh[edx*4] +
jmp loc_463992  +
mov ecx [edi+esi] +
sub edx 1 +
mov [ebx+14h] edx +
lea eax [esi-4] +
test ecx ecx +
jnz loc_4639E0  +
mov esi eax +
test edx edx +
jg loc_463980  +
test edi edi +
jz loc_4639A9  +
mov [esp+10h+var_10] edi +
call free  +
mov dword ptr [ebx+0Ch] 0 +
mov eax [ebx+8] +
test eax eax +
jz loc_4639BF  +
mov [esp+10h+var_10] eax +
call free  +
mov dword ptr [ebx+8] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] eax +
call free  +
mov eax [ebx+8] +
mov dword ptr [eax+esi] 0 +
jmp loc_463948  +
mov [esp+10h+var_10] ecx +
call free  +
mov eax [ebx+0Ch] +
mov dword ptr [eax+esi] 0 +
jmp loc_46396D  +
***
sub esp 18h +
mov edx [eax+14h] +
mov eax [eax+1Ch] +
cmp edx eax +
jl loc_463A61  +
test eax eax +
jz loc_463A46  +
lea edx [eax+eax] +
mov [ebx+1Ch] edx +
mov edx [ebx+0Ch] +
shl eax 3 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] edx +
call sub_4621C0  +
mov edx [ebx+14h] +
mov [ebx+0Ch] eax +
lea ecx [edx+1] +
mov [ebx+14h] ecx +
mov dword ptr [eax+edx*4] 0 +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
mov dword ptr [ebx+1Ch] 5 +
mov [esp+18h+var_18] 14h +
call sub_462140  +
mov edx [ebx+14h] +
mov [ebx+0Ch] eax +
jmp loc_463A32  +
mov eax [ebx+0Ch] +
jmp loc_463A32  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+18h] +
cmp [ebx+10h] eax +
jl loc_463AA4  +
test eax eax +
jz loc_463AE0  +
lea edx [eax+eax] +
mov [ebx+18h] edx +
mov edx [ebx+8] +
shl eax 3 +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call sub_4621C0  +
mov [ebx+8] eax +
lea eax [esi+1] +
mov [esp+28h+var_28] eax +
call sub_462140  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov edi eax +
call memcpy  +
mov eax [ebx+10h] +
mov edx [ebx+8] +
mov byte ptr [edi+esi] 0 +
lea ecx [eax+1] +
mov [ebx+10h] ecx +
mov [edx+eax*4] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+18h] 5 +
mov [esp+28h+var_28] 14h +
call sub_462140  +
mov [ebx+8] eax +
jmp loc_463AA4  +
***
cmp eax 56h +
jz loc_463B26  +
cmp eax 75h +
jz loc_463B20  +
cmp eax 43h +
jz loc_463B17  +
sub esp 0Ch +
call abort  +
mov eax 1 +
retn   +
mov eax 4 +
retn   +
mov eax 2 +
retn   +
***
cmp eax 7 +
push edi  +
push ebx  +
sub esp 14h +
lea edx [eax+20h] +
lea eax [eax+4] +
call sub_463B90  +
mov eax [esi+4] +
test eax eax +
jz loc_463C0F  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+24h] 0 +
mov eax [esi+40h] +
test eax eax +
jz loc_463C45  +
mov edx [esi+44h] +
test edx edx +
jle loc_463C36  +
xor ebx ebx +
nop   +
mov eax [eax+ebx*4] +
add ebx 1 +
mov [esp+18h+var_18] eax +
call free  +
mov eax [esi+40h] +
cmp [esi+44h] ebx +
jg loc_463C20  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi+40h] 0 +
mov ebx [esi+4Ch] +
test ebx ebx +
jz loc_463C80  +
mov eax [ebx] +
test eax eax +
jz loc_463C71  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx] 0 +
mov ebx [esi+4Ch] +
mov [esp+18h+var_18] ebx +
call free  +
mov dword ptr [esi+4Ch] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
lea eax [ecx+1] +
mov [esp+28h+var_28] eax +
call sub_462140  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov ebx eax +
call memcpy  +
mov eax [edi] +
mov edx [esp+28h+arg_0] +
mov byte ptr [ebx+esi] 0 +
mov [eax+edx*4] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov ecx [eax] +
test ecx ecx +
jz loc_463D10  +
mov esi [eax+4] +
mov eax [eax+8] +
sub eax esi +
cmp edx eax +
jle loc_463D09  +
sub esi ecx +
add edx esi +
lea edi [edx+edx] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] ecx +
call sub_4621C0  +
add esi eax +
mov [ebx] eax +
add eax edi +
mov [ebx+4] esi +
mov [ebx+8] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edx 20h +
mov esi 20h +
cmovge esi edx +
mov [esp+10h+var_10] esi +
call sub_462140  +
add esi eax +
mov [ebx+8] esi +
mov [ebx] eax +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_1C] edx +
mov edx ecx +
call sub_463CD0  +
mov eax [edi+4] +
mov esi [edi] +
lea ebx [eax-1] +
cmp ebx esi +
jb loc_463DA2  +
movzx eax byte ptr [ebx] +
sub ebx 1 +
mov [ebx+ebp+1] al +
mov esi [edi] +
cmp ebx esi +
jnb loc_463D92  +
mov eax [esp+28h+var_1C] +
mov [esp+28h+var_20] ebp +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] eax +
call memcpy  +
add [edi+4] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_463DD0  +
***
push ebx  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_18] edx +
call strlen  +
mov esi eax +
mov edx eax +
mov eax ebx +
call sub_463CD0  +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 44h +
lea ebx [esp+48h+var_29] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] offset unk_49F6AC +
mov [esp+48h+var_48] ebx +
call sprintf  +
cmp byte ptr [esp+48h+var_29] 0 +
jz loc_463E6F  +
mov edx ebx +
mov eax esi +
call sub_463E00  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 4 +
mov eax [eax] +
movzx ecx byte ptr [eax] +
cmp cl 2Dh +
jz loc_463F00  +
cmp cl 2Bh +
jz loc_463EF0  +
movzx edx cl +
xor eax eax +
test ds:byte_49F240[edx+edx] 4 +
jnz loc_463EC8  +
jmp loc_463EE5  +
mov ecx [ebx] +
lea eax [ecx+1] +
mov [ebx] eax +
movzx ecx byte ptr [ecx+1] +
movzx eax cl +
test ds:byte_49F240[eax+eax] 4 +
jz loc_463EE0  +
test cl cl +
mov ds:byte_4A887C cl +
jz loc_463EB0  +
mov edx offset byte_4A887C +
mov eax esi +
call sub_463E00  +
jmp loc_463EB0  +
mov eax 1 +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx] edx +
movzx ecx byte ptr [eax+1] +
jmp loc_463E98  +
mov edx offset byte_4A887C +
mov eax esi +
mov ds:byte_4A887C 2Dh +
call sub_463E00  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx ecx byte ptr [eax+1] +
jmp loc_463E98  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov eax [edx] +
cmp eax ecx +
jz loc_463F65  +
mov esi ecx +
sub esi eax +
mov eax ebx +
mov edx esi +
call sub_463CD0  +
mov edx [edi] +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi ebp +
push esi  +
push ebx  +
mov ebx edx +
sub esp 1Ch +
mov esi ebx +
call sub_463BE0  +
mov eax ebp +
call sub_463940  +
test ebp 1 +
mov eax 54h +
jnz loc_46422B  +
test edi 2 +
jnz loc_464216  +
mov ecx eax +
xor edx edx +
shr ecx 2 +
test al 2 +
movs   +
jz loc_463FC0  +
movzx edx word ptr [esi] +
mov [edi] dx +
mov edx 2 +
test al 1 +
jz loc_463FCB  +
movzx eax byte ptr [esi+edx] +
mov [edi+edx] al +
mov eax [ebx+24h] +
test eax eax +
jnz loc_464148  +
mov eax [ebx+20h] +
xor esi esi +
test eax eax +
jle loc_464031  +
nop   +
mov eax [ebx+4] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+4] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_462140  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+4] +
mov ecx [eax+esi*4] +
mov eax [ebp+4] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+20h] esi +
jg loc_463FE0  +
mov eax [ebx+18h] +
test eax eax +
jnz loc_464203  +
mov eax [ebx+10h] +
xor esi esi +
test eax eax +
jle loc_464096  +
mov eax [ebx+8] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+8] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_462140  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+8] +
mov ecx [eax+esi*4] +
mov eax [ebp+8] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+10h] esi +
jg loc_464045  +
mov eax [ebx+1Ch] +
test eax eax +
jnz loc_4641F0  +
mov edi [ebx+14h] +
xor esi esi +
test edi edi +
jle loc_464101  +
lea esi [esi+0] +
mov eax [ebx+0Ch] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+0Ch] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_462140  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+0Ch] +
mov ecx [eax+esi*4] +
mov eax [ebp+0Ch] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+14h] esi +
jg loc_4640B0  +
mov eax [ebx+44h] +
test eax eax +
jnz loc_464160  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jz loc_4641E4  +
mov [esp+28h+var_28] 0Ch +
call sub_462140  +
mov [ebp+4Ch] eax +
mov edx [ebx+4Ch] +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 0 +
mov ecx [edx+4] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_463F30  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_462140  +
mov [ebp+4] eax +
jmp loc_463FD6  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_462140  +
mov edx [ebx+44h] +
test edx edx +
mov [ebp+40h] eax +
jle loc_464108  +
mov [esp+28h+var_1C] eax +
xor esi esi +
jmp loc_464187  +
mov eax [ebp+40h] +
mov [esp+28h+var_1C] eax +
mov eax [ebx+40h] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [esp+28h+var_1C] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_462140  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+40h] +
mov ecx [eax+esi*4] +
mov eax [ebp+40h] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+44h] esi +
jg loc_464180  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jnz loc_464113  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_462140  +
mov [ebp+0Ch] eax +
jmp loc_4640A1  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_462140  +
mov [ebp+8] eax +
jmp loc_46403C  +
movzx edx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] dx +
jmp loc_463FA8  +
movzx eax byte ptr [ebx] +
lea edi [ebp+1] +
lea esi [ebx+1] +
mov [ebp+0] al +
mov eax 53h +
jmp loc_463F9C  +
***
jmp sub_464250  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+24h] +
cmp [ebx+20h] eax +
jl loc_46427F  +
test eax eax +
jnz loc_4642B7  +
mov dword ptr [ebx+24h] 3 +
mov [esp+28h+var_28] 0Ch +
call sub_462140  +
mov [ebx+4] eax +
lea eax [esi+1] +
mov [esp+28h+var_28] eax +
call sub_462140  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov edi eax +
call memcpy  +
mov eax [ebx+20h] +
mov edx [ebx+4] +
mov byte ptr [edi+esi] 0 +
lea ecx [eax+1] +
mov [ebx+20h] ecx +
mov [edx+eax*4] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [eax+eax] +
mov [ebx+24h] edx +
mov edx [ebx+4] +
shl eax 3 +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call sub_4621C0  +
mov [ebx+4] eax +
jmp loc_46427F  +
***
mov eax [esp+4] +
mov byte_47DB4C al +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov eax [esp+30h] +
mov [esp] eax +
call strlen  +
mov [esp+0Ch] eax +
jmp loc_464318  +
add ebx 1 +
cmp ebx 4Fh +
jz loc_464370  +
lea esi [ebx+ebx*2] +
mov ebp ds:off_4A03E4[esi*4] +
lea edi ds:0[esi*4] +
mov [esp] ebp +
call strlen  +
cmp [esp+0Ch] eax +
jnz loc_464310  +
mov eax [esp+34h] +
xor eax ds:dword_4A03E8[esi*4] +
test al 2 +
jnz loc_464310  +
mov eax [esp+0Ch] +
mov [esp] ebp +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_464310  +
mov eax ds:off_4A03E0[edi] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+arg_0] +
mov edx offset off_4A0140 +
cmp ecx 0FFFFFFFFh +
jnz loc_464394  +
jmp loc_4643A0  +
cmp eax ecx +
jz loc_4643A0  +
add edx 0Ch +
mov eax [edx+4] +
test eax eax +
jnz loc_464390  +
retn   +
mov dword_47DB50 ecx +
mov eax ecx +
retn   +
***
mov esi 0FFFFFFFFh +
push ebx  +
mov ebx offset off_4A0140 +
sub esp 10h +
mov edi [esp+14h+arg_0] +
jmp loc_4643D0  +
add ebx 0Ch +
mov esi [ebx+4] +
test esi esi +
jz loc_4643E2  +
mov eax [ebx] +
mov [esp+14h+var_14] edi +
mov [esp+14h+var_10] eax +
call strcmp  +
test eax eax +
jnz loc_4643C6  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi offset a_ada_ +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+38h+arg_0] +
mov eax [esp+38h+arg_0] +
cmps   +
setnbe cl  +
setb dl  +
add eax 5 +
cmp cl dl +
cmovnz eax [esp+38h+arg_0] +
mov [esp+38h+arg_0] eax +
movzx eax byte ptr [eax] +
test ds:byte_49F240[eax+eax] 8 +
jz loc_464647  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] eax +
call strlen  +
add eax 8 +
mov [esp+38h+var_38] eax +
call sub_462140  +
mov ebx [esp+38h+arg_0] +
mov [esp+38h+var_1C] eax +
mov esi eax +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_49F240[edx+edx] 8 +
jnz loc_464594  +
cmp al 4Fh +
jnz loc_464647  +
mov edx 4 +
mov edi offset aOabs +
mov [esp+38h+var_20] esi +
xor ebp ebp +
mov esi edx +
jmp loc_46449D  +
add ebp 1 +
mov edi ds:off_49FF40[ebp*8] +
test edi edi +
jz loc_464647  +
mov [esp+38h+var_38] edi +
call strlen  +
mov esi eax +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] ebx +
call strncmp  +
test eax eax +
jnz loc_464481  +
mov edx esi +
mov esi [esp+38h+var_20] +
add ebx edx +
mov edx ds:off_49FF44[ebp*8] +
lea ebp [esi+1] +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_20] edx +
call strlen  +
mov edx [esp+38h+var_20] +
mov byte ptr [esi] 22h +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_34] edx +
mov edi eax +
add edi ebp +
mov [esp+38h+var_30] eax +
lea esi [edi+1] +
call memcpy  +
mov byte ptr [edi] 22h +
movzx eax byte ptr [ebx] +
cmp al 54h +
jz loc_464623  +
cmp al 45h +
jnz loc_4645C3  +
cmp byte ptr [ebx+1] 0 +
jz loc_464647  +
cmp al 4Eh +
mov edx esi +
setz byte ptr [esp+38h+var_20]  +
mov edi ebx +
cmp byte ptr [esp+38h+var_20] 0 +
jz loc_4645EE  +
cmp byte ptr [ebx+1] 0 +
jz loc_464647  +
cmp al 58h +
jz loc_4645FE  +
cmp al 53h +
jz loc_464690  +
cmp al 44h +
nop   +
jz loc_464810  +
cmp al 5Fh +
jnz loc_46491C  +
movzx eax byte ptr [edi+1] +
cmp al 5Fh +
jnz loc_4647C3  +
movzx eax byte ptr [edi+2] +
lea ebx [edi+2] +
movzx ecx al +
test ds:byte_49F240[ecx+ecx] 4 +
jnz loc_464846  +
cmp al 5Fh +
jz loc_4646F0  +
mov byte ptr [edx] 2Eh +
movzx eax byte ptr [ebx] +
lea esi [edx+1] +
movzx edx al +
test ds:byte_49F240[edx+edx] 8 +
jz loc_464465  +
add esi 1 +
add ebx 1 +
mov [esi-1] al +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_49F240[edx+edx] 0Ch +
jnz loc_464594  +
cmp al 5Fh +
jnz loc_4644F3  +
movzx edx byte ptr [ebx+1] +
test ds:byte_49F240[edx+edx] 0Ch +
jnz loc_464594  +
cmp al 4Eh +
mov edx esi +
setz byte ptr [esp+38h+var_20]  +
cmp al 50h +
setz cl  +
mov edi ebx +
or cl byte ptr [esp+38h+var_20] +
jz loc_4645EE  +
cmp byte ptr [ebx+1] 0 +
jz loc_464897  +
cmp byte ptr [esp+38h+var_20] 0 +
jnz loc_464523  +
cmp al 53h +
jz loc_464523  +
cmp al 58h +
jnz loc_464535  +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
cmp al 6Eh +
jnz loc_4647A7  +
lea esi [esi+0] +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 62h +
jz loc_464610  +
cmp al 6Eh +
jz loc_464610  +
jmp loc_464535  +
cmp byte ptr [ebx+1] 4Bh +
jnz loc_46450D  +
movzx eax byte ptr [ebx+2] +
cmp al 42h +
jz loc_4647B5  +
cmp al 5Fh +
jnz loc_464647  +
cmp byte ptr [ebx+3] 5Fh +
jz loc_464787  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] eax +
call strlen  +
add eax 3 +
mov [esp+38h+var_38] eax +
call sub_462140  +
mov ebx eax +
mov eax [esp+38h+arg_0] +
cmp byte ptr [eax] 3Ch +
jz loc_464771  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_34] offset aS_5 +
mov [esp+38h+var_30] eax +
call sprintf  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edi+1] +
test al al +
jz loc_464647  +
movzx edx byte ptr [edi+2] +
test dl dl +
jz loc_4646A5  +
cmp dl 5Fh +
jnz loc_464647  +
cmp al 4Fh +
jz loc_464876  +
lea esi [esi+0] +
jle loc_464795  +
cmp al 52h +
jz loc_464880  +
cmp al 57h +
jnz loc_464647  +
mov ebp offset aWrite +
mov [esp+38h+var_34] ebp +
lea ebx [edi+2] +
mov [esp+38h+var_38] esi +
call strcpy  +
mov [esp+38h+var_38] ebp +
call strlen  +
lea edx [esi+eax] +
movzx eax byte ptr [edi+2] +
mov edi ebx +
jmp loc_464546  +
cmp byte ptr [edi+3] 5Fh +
jz loc_46457A  +
mov ebp edx +
mov eax 6 +
mov edi offset a_elabb +
xor esi esi +
jmp loc_46472A  +
add esi 1 +
mov edi ds:off_49FE80[esi*8] +
test edi edi +
jz loc_464647  +
mov [esp+38h+var_38] edi +
call strlen  +
mov [esp+38h+var_30] eax +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] ebx +
call strncmp  +
test eax eax +
jnz loc_464710  +
mov esi ds:off_49FE84[esi*8] +
mov [esp+38h+var_38] esi +
call strlen  +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_30] eax +
mov ebx eax +
call memcpy  +
add ebp ebx +
mov byte ptr [ebp+0] 0 +
mov eax [esp+38h+var_1C] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_34] eax +
call strcpy  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [esi] 2Eh +
add ebx 4 +
add esi 1 +
jmp loc_464451  +
cmp al 49h +
jnz loc_464647  +
mov ebp offset aInput +
jmp loc_4646C7  +
cmp al 62h +
jz loc_464610  +
nop   +
jmp loc_464535  +
cmp byte ptr [ebx+3] 0 +
jnz loc_464647  +
mov ebp esi +
jmp loc_464761  +
cmp al 45h +
mov ebp edx +
jnz loc_46488A  +
movzx edx byte ptr [edi+2] +
lea eax [edi+2] +
movzx ecx dl +
test ds:byte_49F240[ecx+ecx] 4 +
jz loc_4647F4  +
add eax 1 +
movzx edx byte ptr [eax] +
movzx ecx dl +
test ds:byte_49F240[ecx+ecx] 4 +
jnz loc_4647E1  +
cmp dl 73h +
jnz loc_464647  +
cmp byte ptr [eax+1] 0 +
jnz loc_464647  +
jmp loc_464761  +
movzx eax byte ptr [edi+1] +
cmp al 41h +
jz loc_46490C  +
cmp al 46h +
mov ebx offset a_finalize +
jnz loc_464647  +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] esi +
call strcpy  +
mov [esp+38h+var_38] ebx +
call strlen  +
add eax esi +
mov ebp eax +
jmp loc_464761  +
mov ebp edx +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
movzx edx al +
test ds:byte_49F240[edx+edx] 4 +
jnz loc_464872  +
cmp al 5Fh +
jnz loc_4648A5  +
movzx eax byte ptr [edi+1] +
test ds:byte_49F240[eax+eax] 4 +
jz loc_464647  +
mov ebx edi +
jmp loc_464848  +
mov ebp offset aOutput +
jmp loc_4646C7  +
mov ebp offset aRead +
jmp loc_4646C7  +
cmp al 42h +
jnz loc_464647  +
jmp loc_4647CD  +
mov ebp esi +
lea esi [esi+0] +
jmp loc_464761  +
cmp al 58h +
jnz loc_4648C2  +
movzx eax byte ptr [ebx+2] +
lea edi [ebx+2] +
cmp al 6Eh +
jnz loc_464916  +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 62h +
jz loc_4648B4  +
cmp al 6Eh +
jz loc_4648B4  +
cmp al 2Eh +
jnz loc_4648FF  +
movzx eax byte ptr [edi+1] +
test ds:byte_49F240[eax+eax] 4 +
jz loc_464647  +
movzx eax byte ptr [edi+2] +
lea edx [edi+2] +
movzx ecx al +
test ds:byte_49F240[ecx+ecx] 4 +
jz loc_4648FF  +
add edx 1 +
movzx eax byte ptr [edx] +
movzx ecx al +
test ds:byte_49F240[ecx+ecx] 4 +
jnz loc_4648EC  +
test al al +
jnz loc_464647  +
jmp loc_464761  +
mov ebx offset a_adjust +
jmp loc_464829  +
cmp al 62h +
jz loc_4648B4  +
jmp loc_4648C2  +
mov ebp edx +
nop   +
jmp loc_4648C2  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov edx dword_47DB50 +
mov esi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_4] +
cmp edx 0FFFFFFFFh +
jz loc_464A00  +
lea ebx [esp+7Ch+var_60] +
xor eax eax +
mov ecx 15h +
mov edi ebx +
test ebp 1FF04h +
stos   +
jz loc_4649B1  +
mov [esp+7Ch+var_60] ebp +
mov ecx ebp +
test [esp+7Ch+var_60] 4100h +
jnz loc_4649C9  +
test cl 4 +
jnz loc_464A10  +
test ch 80h +
jnz loc_464A25  +
and ecx 10000h +
jnz loc_4649E4  +
mov edx esi +
mov eax ebx +
call sub_468DB0  +
mov esi eax +
mov eax ebx +
call sub_463940  +
mov eax esi +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
and edx 1FF04h +
mov ecx edx +
or ecx ebp +
mov [esp+7Ch+var_60] ecx +
test [esp+7Ch+var_60] 4100h +
jz loc_46497B  +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] esi +
call sub_4772D0  +
test eax eax +
jnz loc_4649A9  +
mov ecx [esp+7Ch+var_60] +
test ch 40h +
jz loc_46497B  +
jmp loc_4649A9  +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] esi +
call sub_479000  +
test eax eax +
jz loc_464995  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+7Ch+var_7C] esi +
call sub_462210  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+7Ch+var_7C] esi +
call sub_477310  +
test eax eax +
jnz loc_4649A9  +
mov ecx [esp+7Ch+var_60] +
jmp loc_464984  +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] esi +
call sub_4643F0  +
jmp loc_4649A9  +
***
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 4Ch +
mov edx [edx] +
mov ecx [esp+54h+arg_0] +
movzx eax byte ptr [edx] +
cmp al 59h +
jz loc_464B30  +
cmp ecx 3 +
jz loc_464B95  +
cmp ecx 5 +
jz loc_464A98  +
cmp ecx 4 +
nop   +
jz loc_464AF7  +
cmp ecx 6 +
jz loc_464CE0  +
lea edx [ecx-1] +
cmp edx 1 +
jbe loc_464C38  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Dh +
jz loc_464DD6  +
mov edx offset asc_49F6FA +
mov ecx 1 +
mov eax esi +
call sub_463D40  +
mov eax ebx +
call sub_463810  +
xor edx edx +
test eax eax +
jle loc_464AED  +
mov byte ptr [esp+54h+var_34] al +
mov ecx 1 +
mov eax esi +
lea edx [esp+54h+var_34] +
mov byte ptr [esp+54h+var_34+1] 0 +
call sub_463D40  +
mov edx offset asc_49F6FA +
mov ecx 1 +
mov eax esi +
call sub_463D40  +
mov edx 1 +
add esp 4Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_463810  +
test eax eax +
mov edx eax +
jz loc_464E72  +
xor eax eax +
cmp edx 1 +
jnz loc_464A90  +
mov eax esi +
mov ecx 4 +
mov edx offset aTrue_0 +
call sub_463D40  +
mov eax 1 +
jmp loc_464A90  +
add edx 1 +
mov eax ebx +
mov [ebx] edx +
call sub_463860  +
cmp eax 0FFFFFFFFh +
mov ebp eax +
jz loc_464EA4  +
mov edx [edi+40h] +
test edx edx +
jz loc_464B57  +
cmp eax [edi+44h] +
jge loc_464EA4  +
mov eax ebx +
call sub_463860  +
cmp eax 0FFFFFFFFh +
jz loc_464EA4  +
mov eax [edi+40h] +
test eax eax +
jz loc_464EAE  +
mov edx [eax+ebp*4] +
test edx edx +
jz loc_464A8B  +
cmp byte ptr [edx] 0 +
jz loc_464A8B  +
mov eax esi +
call sub_463E00  +
lea esi [esi+0] +
jmp loc_464A8B  +
cmp al 45h +
jz loc_464E8D  +
cmp al 4Bh +
nop   +
jz loc_464DA0  +
cmp al 51h +
jz loc_464DA0  +
cmp al 5Fh +
jz loc_464E50  +
cmp al 6Dh +
mov [esp+54h+var_3C] 1 +
jz loc_464EC1  +
mov eax ebx +
mov edi 1 +
call sub_463810  +
mov ebp eax +
xor eax eax +
cmp ebp 0FFFFFFFFh +
jz loc_464A90  +
lea edx [esp+54h+var_34] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_4C] ebp +
mov [esp+54h+var_50] offset aD_6 +
mov [esp+54h+var_38] edx +
call sprintf  +
mov edx [esp+54h+var_38] +
cmp byte ptr [esp+54h+var_34] 0 +
jnz loc_464DEC  +
test edi edi +
jnz loc_464C17  +
cmp ebp 9 +
jle loc_464A8B  +
mov eax [esp+54h+var_3C] +
test eax eax +
jnz loc_464A8B  +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_464A8B  +
add eax 1 +
mov [ebx] eax +
jmp loc_464A8B  +
cmp al 51h +
jz loc_464DA0  +
mov eax ebx +
mov [esp+54h+var_3C] ecx +
call sub_463810  +
cmp eax 0FFFFFFFFh +
mov ebp eax +
jz loc_464EA4  +
test eax eax +
mov ecx [esp+54h+var_3C] +
jz loc_464DC0  +
lea eax [eax+1] +
mov [esp+54h+var_54] eax +
mov [esp+54h+var_38] ecx +
call sub_462140  +
mov [esp+54h+var_4C] ebp +
mov edx eax +
mov [esp+54h+var_3C] eax +
mov eax [ebx] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] eax +
call strncpy  +
mov edx [esp+54h+var_3C] +
mov byte ptr [edx+ebp] 0 +
mov eax [edi] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] eax +
call sub_464930  +
mov ecx [esp+54h+var_38] +
cmp ecx 1 +
mov edi eax +
jz loc_464F24  +
test edi edi +
jz loc_464EFF  +
cmp byte ptr [edi] 0 +
jnz loc_464EDA  +
mov [esp+54h+var_54] edi +
call free  +
mov eax [esp+54h+var_3C] +
mov [esp+54h+var_54] eax +
call free  +
add [ebx] ebp +
mov eax 1 +
jmp loc_464A90  +
cmp al 45h +
jz loc_464EE8  +
cmp al 6Dh +
jnz loc_464D27  +
mov edx offset asc_49F6F5 +
mov eax esi +
mov ecx 1 +
call sub_463D40  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
jmp loc_464D27  +
mov ecx 1 +
mov eax esi +
call sub_463D40  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
movzx ecx al +
test ds:byte_49F240[ecx+ecx] 4 +
jnz loc_464D10  +
cmp al 2Eh +
jz loc_464DF8  +
mov eax [ebx] +
movzx eax byte ptr [eax] +
cmp al 65h +
jnz loc_464A8B  +
mov edx offset aE +
mov eax esi +
mov ecx 1 +
call sub_463D40  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
test ds:byte_49F240[eax+eax] 4 +
jz loc_464A8B  +
mov ecx 1 +
mov eax esi +
call sub_463D40  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
test ds:byte_49F240[eax+eax] 4 +
jnz loc_464D73  +
jmp loc_464A8B  +
mov [esp+54h+var_50] 1 +
mov ecx esi +
mov edx ebx +
mov [esp+54h+var_54] 0 +
mov eax edi +
call sub_465710  +
jmp loc_464A90  +
mov ecx 1 +
mov edx offset a0 +
mov eax esi +
call sub_463D40  +
jmp loc_464CD3  +
mov cl 1 +
mov edx offset asc_49F6F5 +
mov eax esi +
call sub_463D40  +
add dword ptr [ebx] 1 +
jmp loc_464AA0  +
mov eax esi +
call sub_463E00  +
jmp loc_464C0A  +
mov ecx 1 +
mov edx offset a_ +
mov eax esi +
call sub_463D40  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
movzx ecx al +
test ds:byte_49F240[ecx+ecx] 4 +
jz loc_464D41  +
mov ecx 1 +
mov eax esi +
call sub_463D40  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
movzx ecx al +
test ds:byte_49F240[ecx+ecx] 4 +
jnz loc_464E25  +
jmp loc_464D41  +
cmp byte ptr [edx+1] 6Dh +
jz loc_464F35  +
mov eax ebx +
xor edi edi +
call sub_463860  +
mov [esp+54h+var_3C] 1 +
mov ebp eax +
jmp loc_464BD4  +
mov eax esi +
mov ecx 5 +
mov edx offset aFalse_0 +
call sub_463D40  +
mov eax 1 +
jmp loc_464A90  +
mov [esp+54h+var_54] 3 +
mov ecx esi +
mov edx ebx +
mov eax edi +
call sub_464F60  +
jmp loc_464A90  +
mov eax 0FFFFFFFFh +
jmp loc_464A90  +
mov eax esi +
mov edx ebp +
call sub_463E40  +
mov eax 1 +
jmp loc_464A90  +
mov ecx 1 +
mov edx offset asc_49F6F5 +
mov eax esi +
call sub_463D40  +
add dword ptr [ebx] 1 +
jmp loc_464BC6  +
mov edx edi +
mov eax esi +
call sub_463E00  +
jmp loc_464CBF  +
mov [esp+54h+var_54] 6 +
mov ecx esi +
mov edx ebx +
mov eax edi +
call sub_464F60  +
jmp loc_464A90  +
mov eax [esp+54h+var_3C] +
test eax eax +
jz loc_464CC7  +
cmp byte ptr [eax] 0 +
nop   +
jz loc_464CC7  +
mov edx eax +
mov eax esi +
call sub_463E00  +
jmp loc_464CC7  +
mov edx offset asc_49F70D +
mov eax esi +
call sub_463D40  +
jmp loc_464CAE  +
mov ecx 1 +
mov edx offset asc_49F6F5 +
mov eax esi +
call sub_463D40  +
add dword ptr [ebx] 2 +
mov [esp+54h+var_3C] 0 +
jmp loc_464BC6  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov [esp+2Ch+var_10] eax +
mov eax ecx +
mov [esp+2Ch+var_14] edx +
mov edx offset asc_49F70F +
mov [esp+2Ch+var_18] ecx +
mov ecx 1 +
call sub_463D40  +
mov edx [ebx] +
mov [esp+2Ch+var_20] edx +
add edx 1 +
mov [esp+2Ch+var_1C] edx +
mov ecx [esp+2Ch+var_1C] +
mov [ebx] edx +
mov ebx 1 +
xor edx edx +
mov eax ebx +
movzx ecx byte ptr [ecx] +
cmp cl 57h +
jz loc_465095  +
nop   +
test cl cl +
jz loc_4650C8  +
test edx edx +
jz loc_46505C  +
mov eax [esp+2Ch+var_1C] +
mov esi offset off_4A03E0 +
xor ebx ebx +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov [esp+2Ch+var_20] eax +
jmp loc_464FEF  +
add ebx 1 +
add esi 0Ch +
cmp ebx 4Fh +
jz loc_4650C8  +
mov ebp [esi] +
mov [esp+2Ch+var_2C] ebp +
call strlen  +
cmp [esp+2Ch+var_20] eax +
mov edi eax +
jb loc_464FE0  +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call memcmp  +
test eax eax +
jnz loc_464FE0  +
mov eax [esp+2Ch+var_18] +
mov edx offset asc_49F711 +
mov ecx 1 +
call sub_463D40  +
lea eax [ebx+ebx*2] +
mov edx ds:off_4A03E4[eax*4] +
test edx edx +
jz loc_465043  +
cmp byte ptr [edx] 0 +
jnz loc_4650D4  +
mov eax [esp+2Ch+var_18] +
mov ecx 1 +
mov edx offset asc_49F711 +
call sub_463D40  +
mov eax [esp+2Ch+var_14] +
add [eax] edi +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+var_14] +
mov ecx [esp+2Ch+var_18] +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_10] +
mov edx esi +
call sub_464A40  +
test eax eax +
jz loc_4650BB  +
mov edx [esi] +
mov [esp+2Ch+var_1C] edx +
mov ecx [esp+2Ch+var_1C] +
mov edx 1 +
movzx ecx byte ptr [ecx] +
cmp cl 57h +
jnz loc_464FB0  +
mov ebx eax +
mov eax [esp+2Ch+var_18] +
mov ecx 1 +
mov edx offset asc_49F713 +
call sub_463D40  +
mov eax [esp+2Ch+var_14] +
add dword ptr [eax] 1 +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx eax +
mov eax [esp+2Ch+var_14] +
mov eax [eax] +
cmp byte ptr [eax] 57h +
jz loc_465097  +
add esp 2Ch +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
call sub_463E00  +
jmp loc_465043  +
***
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov [esp+58h+var_40] eax +
mov eax [edx] +
mov [esp+58h+var_4C] ecx +
mov ecx [esp+58h+arg_4] +
lea edx [eax+1] +
test ecx ecx +
mov [ebp+0] edx +
jz loc_465245  +
cmp byte ptr [eax+1] 7Ah +
jz loc_4651C1  +
mov eax ebp +
call sub_463810  +
test eax eax +
mov ebx eax +
mov [esp+58h+var_34] eax +
jle loc_465364  +
mov edx [ebp+0] +
mov [esp+58h+var_58] edx +
mov [esp+58h+var_48] edx +
call strlen  +
cmp ebx eax +
jg loc_465364  +
mov eax [esp+58h+var_40] +
mov edx [esp+58h+var_48] +
test byte ptr [eax] 4 +
jz loc_46516C  +
mov edi offset aJarray1z +
mov ecx 8 +
mov esi edx +
cmps   +
jz loc_46564C  +
mov eax [esp+58h+var_4C] +
mov ecx ebx +
xor esi esi +
call sub_463D40  +
mov eax [esp+58h+arg_0] +
mov ecx [esp+58h+var_34] +
mov edx [ebp+0] +
test eax eax +
jz loc_465190  +
test ecx ecx +
jnz loc_46565E  +
add ecx edx +
test esi esi +
mov [ebp+0] ecx +
jz loc_465343  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_4638B0  +
test eax eax +
jz loc_465364  +
mov eax [esp+58h+var_34] +
mov [esp+58h+var_3C] 1 +
jmp loc_46527E  +
add eax 3 +
mov [ebp+0] eax +
mov eax ebp +
call sub_463860  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_465364  +
mov eax [esp+58h+var_40] +
mov edx [eax+40h] +
test edx edx +
jz loc_4651ED  +
cmp ebx [eax+44h] +
jge loc_465364  +
mov eax ebp +
call sub_463860  +
cmp eax 0FFFFFFFFh +
jz loc_465364  +
mov eax [esp+58h+var_40] +
mov eax [eax+40h] +
test eax eax +
jz loc_4656E2  +
mov edx [eax+ebx*4] +
test edx edx +
jz loc_465221  +
cmp byte ptr [edx] 0 +
jz loc_465221  +
mov eax [esp+58h+var_4C] +
call sub_463E00  +
mov eax [esp+58h+arg_0] +
test eax eax +
jz loc_465245  +
mov eax [esp+58h+var_40] +
mov eax [eax+40h] +
mov edx [eax+ebx*4] +
test edx edx +
jz loc_465245  +
cmp byte ptr [edx] 0 +
jz loc_465245  +
mov eax [esp+58h+arg_0] +
call sub_463E00  +
mov eax [esp+58h+var_4C] +
mov edx (offset asc_49F724+2) +
call sub_463E00  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_4638B0  +
test eax eax +
jz loc_465364  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_4655D0  +
mov eax [esp+58h+var_34] +
mov [esp+58h+var_3C] 0 +
test eax eax +
jle loc_465300  +
mov edx [ebp+0] +
xor ebx ebx +
mov esi [esp+58h+var_40] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jz loc_46543F  +
cmp al 7Ah +
jz loc_465491  +
mov edx ebp +
mov eax esi +
lea ecx [esp+58h+var_30] +
call sub_465B70  +
mov edx [esp+58h+var_30] +
test edx edx +
mov edi eax +
jz loc_4652D5  +
mov [esp+58h+var_58] edx +
call free  +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_30] 0 +
test edi edi +
jz loc_465300  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_465370  +
mov ecx [esp+58h+var_4C] +
mov edx ebp +
mov eax esi +
mov [esp+58h+var_58] edi +
call sub_464A40  +
mov edi eax +
test edi edi +
jnz loc_465416  +
nop   +
xor edi edi +
mov ebx [esp+58h+var_3C] +
test ebx ebx +
jnz loc_465620  +
mov eax [esp+58h+var_4C] +
mov eax [eax+4] +
cmp byte ptr [eax-1] 3Eh +
jz loc_465673  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_49F724 +
call sub_463E00  +
mov ecx [esp+58h+arg_4] +
test ecx ecx +
jnz loc_465585  +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+58h+var_4C] +
mov edx (offset asc_49F724+2) +
call sub_463E00  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_4638B0  +
test eax eax +
jnz loc_465272  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+58h+var_58] edi +
lea ecx [esp+58h+var_24] +
mov edx ebp +
mov eax esi +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_24] 0 +
call sub_464A40  +
test eax eax +
mov edi eax +
jz loc_465633  +
mov eax [esi+40h] +
mov edx [esp+58h+var_20] +
sub edx [esp+58h+var_24] +
lea ecx [eax+ebx*4] +
lea eax [edx+1] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_44] ecx +
mov [esp+58h+var_48] edx +
call sub_462140  +
mov ecx [esp+58h+var_44] +
mov edx [esp+58h+var_48] +
mov [ecx] eax +
mov eax [esi+40h] +
mov ecx [esp+58h+var_24] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] edx +
mov [esp+58h+var_54] ecx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov edx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+edx] 0 +
mov eax [esp+58h+var_4C] +
lea edx [esp+58h+var_24] +
mov ecx [esp+58h+var_20] +
call sub_463F30  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_465416  +
mov [esp+58h+var_58] eax +
call free  +
add ebx 1 +
cmp [esp+58h+var_34] ebx +
jle loc_465302  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_49F71E +
call sub_463E00  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jnz loc_465296  +
add edx 1 +
mov eax esi +
mov [ebp+0] edx +
lea ecx [esp+58h+var_30] +
mov edx ebp +
call sub_465B70  +
test eax eax +
mov edi eax +
jnz loc_465510  +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_4652F7  +
mov [esp+58h+var_58] eax +
call free  +
test edi edi +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_30] 0 +
jnz loc_465416  +
jmp loc_465300  +
mov ecx [esp+58h+var_4C] +
add edx 1 +
mov eax esi +
mov [ebp+0] edx +
mov edx ebp +
call sub_467330  +
test eax eax +
mov edi eax +
jz loc_465300  +
mov eax ebp +
call sub_463810  +
test eax eax +
mov [esp+58h+var_48] eax +
jle loc_465416  +
mov eax [ebp+0] +
mov [esp+58h+var_58] eax +
call strlen  +
cmp [esp+58h+var_48] eax +
jg loc_465416  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_49F711 +
call sub_463E00  +
mov eax [esp+58h+var_4C] +
mov edx [ebp+0] +
mov ecx [esp+58h+var_48] +
call sub_463D40  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_465686  +
mov eax [esp+58h+var_48] +
add [ebp+0] eax +
jmp loc_465416  +
mov eax [esp+58h+var_4C] +
lea edx [esp+58h+var_30] +
mov ecx [esp+58h+var_2C] +
call sub_463F30  +
mov eax [esp+58h+arg_4] +
test eax eax +
jnz loc_46545C  +
mov eax [esi+40h] +
mov edx [esp+58h+var_2C] +
sub edx [esp+58h+var_30] +
lea ecx [eax+ebx*4] +
lea eax [edx+1] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_44] ecx +
mov [esp+58h+var_48] edx +
call sub_462140  +
mov ecx [esp+58h+var_44] +
mov edx [esp+58h+var_48] +
mov [ecx] eax +
mov eax [esi+40h] +
mov ecx [esp+58h+var_30] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] edx +
mov [esp+58h+var_54] ecx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov edx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+edx] 0 +
jmp loc_46545C  +
mov edx [esp+58h+arg_8] +
test edx edx +
jz loc_465339  +
mov ebp [esp+58h+var_40] +
mov eax ebp +
call sub_463A00  +
xor ecx ecx +
mov esi eax +
mov eax [esp+58h+var_4C] +
mov ebx [eax+4] +
mov edx [eax] +
mov [esp+58h+var_58] esi +
mov eax ebx +
sub eax edx +
cmp edx ebx +
cmovnz ecx eax +
mov eax ebp +
add eax 0Ch +
call sub_463C90  +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+58h+var_34] +
shl eax 2 +
mov [esp+58h+var_58] eax +
call sub_462140  +
mov ecx [esp+58h+var_34] +
mov esi [esp+58h+var_40] +
test ecx ecx +
mov [esi+44h] ecx +
mov [esi+40h] eax +
jle loc_4656D5  +
xor edx edx +
mov ebx esi +
jmp loc_465603  +
mov eax [ebx+40h] +
mov dword ptr [eax+edx*4] 0 +
add edx 1 +
cmp edx ecx +
jnz loc_465600  +
mov [esp+58h+var_3C] 0 +
jmp loc_465282  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_49F721 +
call sub_463E00  +
jmp loc_46532D  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_465300  +
mov [esp+58h+var_58] eax +
call free  +
jmp loc_465300  +
cmp [esp+58h+arg_0] 0 +
mov ecx ebx +
mov esi 1 +
jz loc_465190  +
mov eax [esp+58h+arg_0] +
call sub_463D40  +
mov edx [ebp+0] +
mov ecx [esp+58h+var_34] +
jmp loc_465190  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_49F711 +
call sub_463E00  +
jmp loc_46531F  +
mov eax [esi+40h] +
lea edx [eax+ebx*4] +
mov eax [esp+58h+var_48] +
mov [esp+58h+var_44] edx +
add eax 1 +
mov [esp+58h+var_58] eax +
call sub_462140  +
mov edx [esp+58h+var_44] +
mov ecx [esp+58h+var_48] +
mov [edx] eax +
mov eax [esi+40h] +
mov edx [ebp+0] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] ecx +
mov [esp+58h+var_54] edx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov ecx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+ecx] 0 +
jmp loc_465500  +
mov [esp+58h+var_3C] 0 +
jmp loc_465300  +
mov eax [esp+58h+var_4C] +
mov edx ebx +
call sub_463E40  +
mov eax [esp+58h+arg_0] +
test eax eax +
jz loc_465245  +
mov eax [esp+58h+arg_0] +
mov edx ebx +
call sub_463E40  +
jmp loc_465245  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 4Ch +
mov [esp+58h+var_40] ecx +
call sub_463A00  +
mov ecx [esp+58h+arg_0] +
test ecx ecx +
mov [esp+58h+var_3C] eax +
jz loc_465742  +
test byte ptr [esi+28h] 1 +
jz loc_4659E4  +
mov [esp+58h+arg_0] 1 +
mov eax [ebp+0] +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_30] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_24] 0 +
cmp byte ptr [eax] 4Bh +
jz loc_465B0E  +
movzx edx byte ptr [eax+1] +
cmp dl 31h +
jl loc_465AE4  +
cmp dl 39h +
jle loc_4659B5  +
cmp dl 5Fh +
jnz loc_465AE4  +
add eax 1 +
mov [ebp+0] eax +
mov eax ebp +
call sub_463860  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_465AE4  +
mov [esp+58h+var_4C] 1 +
jmp loc_465863  +
cmp al 74h +
jz loc_465897  +
cmp al 4Bh +
jz loc_465A86  +
test dword ptr [esi] 2000h +
jnz loc_465A00  +
test ecx ecx +
jz loc_465802  +
mov [esp+58h+var_58] ecx +
call free  +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_24] 0 +
lea ecx [esp+58h+var_24] +
mov edx ebp +
mov eax esi +
call sub_465B70  +
test eax eax +
mov [esp+58h+var_4C] eax +
jz loc_4658C7  +
mov ecx [esp+58h+var_20] +
lea edx [esp+58h+var_24] +
lea eax [esp+58h+var_30] +
call sub_463F30  +
mov eax [esp+58h+var_2C] +
xor ecx ecx +
mov edx [esp+58h+var_30] +
mov edi eax +
sub edi edx +
cmp edx eax +
cmovnz ecx edi +
mov eax esi +
call sub_463A70  +
test ebx ebx +
jle loc_465863  +
test byte ptr [esi] 4 +
mov eax offset asc_49F728 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_463E00  +
sub ebx 1 +
lea eax [ebx+1] +
test eax eax +
jle loc_4658CF  +
mov ecx [esp+58h+var_24] +
mov edx [ebp+0] +
mov [esp+58h+var_20] ecx +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jnz loc_4657C2  +
lea edi [edx+1] +
mov [ebp+0] edi +
movzx eax byte ptr [edx+1] +
mov edx edi +
cmp al 74h +
jnz loc_4657CA  +
lea eax [esp+58h+var_24] +
mov edx ebp +
mov [esp+58h+var_58] eax +
lea ecx [esp+58h+var_30] +
mov eax esi +
mov [esp+58h+var_50] 0 +
mov [esp+58h+var_54] 1 +
call sub_4650F0  +
test eax eax +
mov [esp+58h+var_4C] eax +
jnz loc_46582C  +
mov [esp+58h+var_4C] 0 +
mov eax [esp+58h+var_2C] +
xor ecx ecx +
mov edx [esp+58h+var_30] +
mov ebx eax +
sub ebx edx +
cmp edx eax +
cmovnz ecx ebx +
mov ebx [esp+58h+var_3C] +
lea eax [esi+0Ch] +
mov [esp+58h+var_58] ebx +
call sub_463C90  +
mov edx [esp+58h+arg_0] +
test edx edx +
jz loc_46592D  +
test byte ptr [esi] 4 +
mov eax offset asc_49F728 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_463E00  +
test byte ptr [esi+2Ch] 1 +
jnz loc_465B5A  +
mov ecx [esp+58h+var_20] +
lea edx [esp+58h+var_24] +
lea eax [esp+58h+var_30] +
call sub_463F30  +
mov eax [esp+58h+arg_4] +
test eax eax +
jnz loc_465AF8  +
mov eax [esp+58h+var_40] +
mov ebx [eax+4] +
cmp [eax] ebx +
jz loc_46595D  +
test byte ptr [esi] 4 +
mov eax offset asc_49F728 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_463E00  +
mov edx [esp+58h+var_30] +
mov ecx [esp+58h+var_2C] +
cmp edx ecx +
jz loc_465971  +
sub ecx edx +
jnz loc_465B4C  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_465999  +
mov [esp+58h+var_58] eax +
call free  +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_24] 0 +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_4659A9  +
mov [esp+58h+var_58] eax +
call free  +
mov eax [esp+58h+var_4C] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+26h] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_32] dl +
mov [esp+58h+var_31] 0 +
call atoi  +
xor edx edx +
mov ebx eax +
mov eax [ebp+0] +
cmp byte ptr [eax+2] 5Fh +
setz dl  +
lea eax [eax+edx+2] +
mov [ebp+0] eax +
jmp loc_4657B5  +
test byte ptr [esi+2Ch] 1 +
jnz loc_46573A  +
mov [esp+58h+arg_0] 0 +
jmp loc_465742  +
mov eax ebp +
call sub_463810  +
cmp eax 0FFFFFFFFh +
mov edi eax +
jz loc_4658C7  +
lea eax [eax+1] +
mov [esp+58h+var_58] eax +
call sub_462140  +
mov ecx eax +
mov [esp+58h+var_48] eax +
mov eax [ebp+0] +
mov [esp+58h+var_58] ecx +
mov [esp+58h+var_50] edi +
mov [esp+58h+var_54] eax +
call memcpy  +
mov ecx [esp+58h+var_48] +
mov byte ptr [ecx+edi] 0 +
mov eax [esi] +
mov [esp+58h+var_58] ecx +
mov [esp+58h+var_54] eax +
call sub_464930  +
test eax eax +
mov ecx eax +
jz loc_465AD0  +
cmp byte ptr [eax] 0 +
jz loc_465A6A  +
mov edx eax +
mov [esp+58h+var_44] eax +
lea eax [esp+58h+var_30] +
call sub_463E00  +
mov ecx [esp+58h+var_44] +
mov [esp+58h+var_58] ecx +
call free  +
mov eax [esp+58h+var_48] +
mov [esp+58h+var_58] eax +
call free  +
add [ebp+0] edi +
jmp loc_46582C  +
add edx 1 +
mov eax ebp +
mov [ebp+0] edx +
call sub_463860  +
cmp eax 0FFFFFFFFh +
jz loc_4658C7  +
cmp eax [esi+10h] +
jge loc_4658C7  +
mov edx [esi+8] +
mov edx [edx+eax*4] +
test edx edx +
jz loc_465846  +
cmp byte ptr [edx] 0 +
jz loc_465846  +
lea eax [esp+58h+var_30] +
call sub_463E00  +
jmp loc_465846  +
test edi edi +
mov edx [ebp+0] +
jz loc_465A72  +
mov ecx edi +
lea eax [esp+58h+var_30] +
call sub_463D40  +
jmp loc_465A72  +
mov [esp+58h+var_4C] 0 +
mov eax [esp+58h+var_4C] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+58h+var_2C] +
lea edx [esp+58h+var_30] +
mov eax [esp+58h+var_40] +
call sub_463F30  +
jmp loc_465971  +
add eax 1 +
mov [ebp+0] eax +
mov eax ebp +
call sub_463860  +
cmp eax 0FFFFFFFFh +
jz loc_465AE4  +
cmp eax [esi+10h] +
jge loc_465AE4  +
mov edx [esi+8] +
xor ebx ebx +
mov edx [edx+eax*4] +
test edx edx +
jz loc_4657B5  +
cmp byte ptr [edx] 0 +
jz loc_4657B5  +
lea eax [esp+58h+var_30] +
call sub_463E00  +
jmp loc_4657B5  +
mov eax [esp+58h+var_40] +
call sub_463D70  +
jmp loc_465971  +
mov edx offset asc_49F72B +
lea eax [esp+58h+var_30] +
call sub_463E00  +
jmp loc_46591C  +
***
push edi  +
mov edi 1 +
push esi  +
push ebx  +
mov ebx edx +
sub esp 6Ch +
mov [esp+78h+var_68] eax +
mov [esp+78h+var_60] ecx +
mov [esp+78h+var_44] 0 +
mov [esp+78h+var_48] 0 +
mov [esp+78h+var_4C] 0 +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx] 0 +
test edi edi +
setnz dl  +
xor eax eax +
test eax eax +
jnz loc_465E20  +
test dl dl +
jz loc_465E20  +
mov ecx [ebx] +
movzx esi byte ptr [ecx] +
lea eax [esi-41h] +
cmp al 34h +
ja loc_465E12  +
movzx eax al +
jmp ds:off_49F7A4[eax*4]  +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_465C38  +
mov eax esi +
mov esi [esp+78h+var_48] +
cmp [esp+78h+var_4C] esi +
jz loc_465C0D  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_49F711 +
call sub_463DD0  +
mov ecx [ebx] +
movzx eax byte ptr [ecx] +
movsx eax al +
mov [esp+78h+var_64] ecx +
call sub_463B00  +
call sub_463B30  +
mov ecx [esp+78h+var_64] +
test eax eax +
jz loc_465C38  +
cmp byte ptr [eax] 0 +
jz loc_465C38  +
mov edx eax +
lea eax [esp+78h+var_4C] +
call sub_463DD0  +
mov ecx [ebx] +
add ecx 1 +
mov [ebx] ecx +
jmp loc_465BB4  +
mov eax [esp+78h+var_4C] +
add ecx 1 +
cmp eax [esp+78h+var_48] +
mov [ebx] ecx +
jz loc_465C64  +
movzx eax byte ptr [eax] +
cmp al 26h +
jz loc_465F46  +
cmp al 2Ah +
jz loc_465F46  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
call sub_467840  +
test eax eax +
jz loc_465ED0  +
mov edx [ebx] +
movzx eax byte ptr [edx] +
test al al +
jnz loc_465F13  +
cmp al 5Fh +
jnz loc_465BB4  +
add edx 1 +
mov [ebx] edx +
jmp loc_465BB4  +
mov eax [esp+78h+var_4C] +
add ecx 1 +
cmp eax [esp+78h+var_48] +
mov [ebx] ecx +
jz loc_465CC2  +
movzx eax byte ptr [eax] +
cmp al 26h +
jz loc_465F25  +
cmp al 2Ah +
jz loc_465F25  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_49F72F +
call sub_463E00  +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_465ED7  +
add eax 1 +
mov [ebx] eax +
mov edx offset asc_49F731 +
lea eax [esp+78h+var_4C] +
call sub_463E00  +
jmp loc_465BB4  +
add ecx 1 +
mov eax ebx +
mov [ebx] ecx +
lea edx [esp+78h+var_58] +
call sub_4638B0  +
test eax eax +
jz loc_465ED0  +
mov esi [esp+78h+var_68] +
mov eax [esp+78h+var_58] +
cmp [esi+20h] eax +
jle loc_465ED0  +
mov edx [esi+4] +
lea ebx [esp+78h+var_54] +
mov eax [edx+eax*4] +
mov [esp+78h+var_54] eax +
jmp loc_465BB4  +
mov eax [esp+78h+var_68] +
add ecx 1 +
mov [ebx] ecx +
test byte ptr [eax] 4 +
jz loc_465F00  +
test ebp ebp +
mov eax 1 +
cmovz ebp eax +
jmp loc_465BB4  +
add ecx 1 +
mov edx offset asc_49F713 +
lea eax [esp+78h+var_4C] +
mov [ebx] ecx +
call sub_463E00  +
mov edx [ebx] +
mov eax 51h +
cmp byte ptr [edx] 51h +
jz loc_465D92  +
mov eax [esp+78h+var_68] +
mov edx offset a_ +
test byte ptr [eax] 4 +
mov eax offset asc_49F728 +
cmovz edx eax +
lea eax [esp+78h+var_4C] +
call sub_463DD0  +
mov eax [ebx] +
movzx eax byte ptr [eax] +
movzx edx al +
test ds:byte_49F240[edx+edx] 4 +
jnz loc_465E42  +
lea edx [eax-58h] +
cmp dl 1 +
jbe loc_465FD0  +
cmp al 74h +
jz loc_4660A2  +
xor edi edi +
cmp al 51h +
jnz loc_465BB4  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 0 +
call sub_465710  +
test eax eax +
mov edi eax +
jz loc_465BB4  +
jmp loc_465E89  +
add ecx 1 +
mov edx offset asc_49F70D +
lea eax [esp+78h+var_4C] +
mov [ebx] ecx +
call sub_463DD0  +
test ebp ebp +
mov eax 2 +
cmovz ebp eax +
jmp loc_465BB4  +
mov eax 1 +
test eax eax +
jz loc_465BC3  +
nop   +
test edi edi +
jz loc_466033  +
mov esi [ebx] +
movzx eax byte ptr [esi] +
sub eax 42h +
cmp al 17h +
ja loc_4661D1  +
movzx eax al +
jmp ds:off_49F878[eax*4]  +
mov eax ebx +
call sub_463810  +
cmp eax 0FFFFFFFFh +
mov [esp+78h+var_58] eax +
mov [esp+78h+var_64] eax +
jz loc_465ED0  +
mov edx [ebx] +
mov [esp+78h+var_78] edx +
mov [esp+78h+var_5C] edx +
call strlen  +
mov ecx [esp+78h+var_64] +
mov edx [esp+78h+var_5C] +
cmp ecx eax +
jg loc_465ED0  +
xor eax eax +
test ecx ecx +
jz loc_465E85  +
lea eax [esp+78h+var_4C] +
call sub_463D70  +
mov edx [ebx] +
mov eax [esp+78h+var_58] +
add eax edx +
mov [ebx] eax +
lea eax [esp+78h+var_4C] +
mov edx offset asc_49F70F +
call sub_463DD0  +
mov eax esi +
cmp al 4Dh +
jnz loc_465F67  +
mov edx [ebx] +
movsx eax byte ptr [edx] +
cmp al 56h +
jz loc_466111  +
cmp al 75h +
jz loc_466111  +
xor esi esi +
cmp al 43h +
jz loc_466111  +
lea eax [edx+1] +
mov [ebx] eax +
cmp byte ptr [edx] 46h +
jz loc_466084  +
nop   +
xor edi edi +
jmp loc_465BB4  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
mov [esp+78h+var_78] 3 +
call sub_464A40  +
mov edi eax +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_465CE0  +
jmp loc_465CDB  +
mov edx offset asc_49F72D +
lea eax [esp+78h+var_4C] +
call sub_463DD0  +
jmp loc_465D42  +
cmp al 5Fh +
jz loc_465C88  +
xor edi edi +
lea esi [esi+0] +
jmp loc_465BB4  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_49F70F +
call sub_463DD0  +
mov edx offset asc_49F713 +
lea eax [esp+78h+var_4C] +
call sub_463E00  +
jmp loc_465CC2  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_49F70F +
call sub_463DD0  +
mov edx offset asc_49F713 +
lea eax [esp+78h+var_4C] +
call sub_463E00  +
jmp loc_465C64  +
xor esi esi +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_465ED0  +
add eax 1 +
mov [ebx] eax +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_465BB4  +
test esi esi +
jz loc_465BB4  +
mov eax [esp+78h+var_48] +
cmp [esp+78h+var_4C] eax +
jz loc_465FA6  +
mov edx offset asc_49F711 +
lea eax [esp+78h+var_4C] +
call sub_463E00  +
mov eax esi +
call sub_463B30  +
test eax eax +
jz loc_465BB4  +
cmp byte ptr [eax] 0 +
jz loc_465BB4  +
mov edx eax +
lea eax [esp+78h+var_4C] +
call sub_463E00  +
jmp loc_465BB4  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
call sub_465B70  +
mov edx [esp+78h+var_40] +
mov ecx [esp+78h+var_3C] +
cmp edx ecx +
jz loc_465FF3  +
sub ecx edx +
jnz loc_466128  +
test edx edx +
jz loc_465E89  +
mov [esp+78h+var_78] edx +
call free  +
jmp loc_465E89  +
add esi 1 +
mov eax ebx +
mov [ebx] esi +
call sub_463860  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_466033  +
mov eax [esp+78h+var_68] +
mov edx [eax+40h] +
test edx edx +
jz loc_4662E0  +
cmp esi [eax+44h] +
jl loc_4662E0  +
mov eax [esp+78h+var_60] +
mov eax [eax] +
test eax eax +
jz loc_46605D  +
mov [esp+78h+var_78] eax +
call free  +
mov eax [esp+78h+var_60] +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax] 0 +
mov eax [esp+78h+var_4C] +
xor edi edi +
test eax eax +
jz loc_46606F  +
mov [esp+78h+var_78] eax +
call free  +
xor eax eax +
test edi edi +
jz loc_46607C  +
mov al 3 +
test ebp ebp +
cmovnz eax ebp +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
call sub_467840  +
test eax eax +
jnz loc_465F69  +
xor edi edi +
jmp loc_465BB4  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
call sub_4650F0  +
test eax eax +
mov edi eax +
jz loc_4660F8  +
mov edx [esp+78h+var_40] +
mov ecx [esp+78h+var_3C] +
sub ecx edx +
jz loc_465FF3  +
jmp loc_466128  +
mov eax [esp+78h+var_40] +
test eax eax +
jz loc_465BB4  +
mov [esp+78h+var_78] eax +
call free  +
jmp loc_465BB4  +
mov [esp+78h+var_64] edx +
call sub_463B00  +
mov edx [esp+78h+var_64] +
add edx 1 +
mov esi eax +
jmp loc_465EC0  +
lea eax [esp+78h+var_4C] +
call sub_463D70  +
mov edx [esp+78h+var_40] +
jmp loc_465FF3  +
mov ecx [esp+78h+var_60] +
mov edx ebx +
mov eax [esp+78h+var_68] +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
call sub_465710  +
mov edi eax +
test edi edi +
jz loc_466033  +
mov eax [esp+78h+var_4C] +
cmp eax [esp+78h+var_48] +
jz loc_466063  +
mov esi [esp+78h+var_60] +
mov edx offset asc_49F711 +
mov eax esi +
call sub_463E00  +
mov ecx [esp+78h+var_48] +
mov eax esi +
lea edx [esp+78h+var_4C] +
call sub_463F30  +
mov eax [esp+78h+var_4C] +
jmp loc_466063  +
add esi 1 +
mov eax ebx +
mov [ebx] esi +
lea edx [esp+78h+var_58] +
call sub_4638B0  +
test eax eax +
jz loc_466033  +
mov esi [esp+78h+var_68] +
mov eax [esp+78h+var_58] +
cmp [esi+14h] eax +
jle loc_466033  +
mov edx [esi+0Ch] +
mov edx [edx+eax*4] +
test edx edx +
jnz loc_46630F  +
jmp loc_466162  +
mov edi [esp+78h+var_60] +
mov [esp+78h+var_50] 0 +
lea esi [esi+0] +
movzx edx byte ptr [esi] +
lea eax [edx-43h] +
cmp al 32h +
ja loc_466224  +
movzx eax al +
jmp ds:off_49F8D8[eax*4]  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_46620C  +
mov edx offset asc_49F711 +
mov eax edi +
call sub_463E00  +
mov edx offset aUnsigned +
mov eax edi +
call sub_463E00  +
mov esi [ebx] +
movzx edx byte ptr [esi] +
lea eax [edx-43h] +
cmp al 32h +
jbe loc_4661EA  +
cmp dl 78h +
mov eax esi +
ja loc_46638B  +
jmp ds:off_49F9A4[edx*4]  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_46624E  +
mov edx offset asc_49F711 +
mov eax edi +
call sub_463E00  +
mov edx offset aSigned +
mov eax edi +
call sub_463E00  +
mov esi [ebx] +
jmp loc_4661E0  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_466278  +
mov edx offset asc_49F711 +
mov eax edi +
call sub_463E00  +
mov edx offset a__complex +
mov eax edi +
call sub_463E00  +
mov esi [ebx] +
jmp loc_4661E0  +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_4662C7  +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_4662B1  +
mov edx offset asc_49F711 +
mov eax edi +
call sub_463DD0  +
mov esi [ebx] +
movzx edx byte ptr [esi] +
movsx eax dl +
call sub_463B00  +
call sub_463B30  +
test eax eax +
jz loc_4662C7  +
cmp byte ptr [eax] 0 +
jnz loc_466326  +
add esi 1 +
mov [ebx] esi +
jmp loc_4661E0  +
mov edi 3 +
test ebp ebp +
cmovz ebp edi +
jmp loc_46615A  +
mov eax ebx +
call sub_463860  +
cmp eax 0FFFFFFFFh +
jz loc_466033  +
mov eax [esp+78h+var_68] +
mov eax [eax+40h] +
test eax eax +
jz loc_466768  +
mov edx [eax+esi*4] +
mov edi 1 +
test edx edx +
jz loc_466162  +
cmp byte ptr [edx] 0 +
jz loc_466162  +
mov eax [esp+78h+var_60] +
call sub_463E00  +
jmp loc_466162  +
mov edx eax +
mov eax edi +
call sub_463DD0  +
mov esi [ebx] +
jmp loc_4662C7  +
add esi 1 +
mov [ebx] esi +
movzx eax byte ptr [eax+1] +
test ds:byte_49F240[eax+eax] 4 +
jz loc_46638B  +
lea edi [esi+1] +
mov [ebx] edi +
cmp byte ptr [esi+1] 5Fh +
jnz loc_4666B0  +
lea eax [esi+2] +
xor edx edx +
mov [ebx] eax +
jmp loc_466384  +
cmp cl 5Fh +
jz loc_466749  +
mov byte ptr [esp+edx+78h+var_40] cl +
add edx 1 +
lea ecx [eax+1] +
cmp edx 24h +
lea esi [esp+78h+var_40] +
mov [ebx] ecx +
jz loc_46675B  +
mov eax ecx +
movzx ecx byte ptr [eax] +
test cl cl +
jnz loc_466360  +
xor edi edi +
jmp loc_4662D6  +
mov eax [esp+78h+var_68] +
lea esi [esp+78h+var_40] +
call sub_463A00  +
mov edx ebx +
mov ecx esi +
mov [esp+78h+var_38] 0 +
xor ebx ebx +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
mov edi eax +
mov eax [esp+78h+var_68] +
call sub_466ED0  +
test eax eax +
jz loc_466415  +
mov eax [esp+78h+var_3C] +
mov edx [esp+78h+var_40] +
mov [esp+78h+var_78] edi +
mov ecx eax +
sub ecx edx +
cmp edx eax +
mov eax [esp+78h+var_68] +
cmovz ecx ebx +
add eax 0Ch +
call sub_463C90  +
mov eax [esp+78h+var_60] +
mov edi [eax+4] +
cmp [eax] edi +
jz loc_466401  +
mov edx offset asc_49F711 +
call sub_463E00  +
mov ecx [esp+78h+var_3C] +
mov edx esi +
mov ebx 1 +
mov eax [esp+78h+var_60] +
call sub_463F30  +
mov eax [esp+78h+var_40] +
test eax eax +
jz loc_466425  +
mov [esp+78h+var_78] eax +
call free  +
cmp ebx 1 +
sbb edi edi +
not edi  +
and edi 3 +
jmp loc_4662D6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_46644E  +
mov edx offset asc_49F711 +
call sub_463E00  +
mov eax [esp+78h+var_60] +
mov edx offset aLongLong +
mov edi 3 +
call sub_463E00  +
jmp loc_4662D6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_466480  +
mov edx offset asc_49F711 +
call sub_463E00  +
mov eax [esp+78h+var_60] +
mov edx offset aWchar_t +
mov edi 5 +
call sub_463E00  +
jmp loc_4662D6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_4664B2  +
mov edx offset asc_49F711 +
call sub_463E00  +
mov eax [esp+78h+var_60] +
mov edx offset aVoid +
mov edi 3 +
call sub_463E00  +
jmp loc_4662D6  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
call sub_4650F0  +
mov ecx [esp+78h+var_3C] +
lea edx [esp+78h+var_40] +
mov ebx eax +
mov eax [esp+78h+var_60] +
call sub_463F30  +
jmp loc_466415  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_46653A  +
mov edx offset asc_49F711 +
call sub_463E00  +
mov eax [esp+78h+var_60] +
mov edx offset aShort +
mov edi 3 +
call sub_463E00  +
jmp loc_4662D6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_46656C  +
mov edx offset asc_49F711 +
call sub_463E00  +
mov eax [esp+78h+var_60] +
mov edx offset aLongDouble +
mov edi 6 +
call sub_463E00  +
jmp loc_4662D6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_46659E  +
mov edx offset asc_49F711 +
call sub_463E00  +
mov eax [esp+78h+var_60] +
mov edx offset aLong +
mov edi 3 +
call sub_463E00  +
jmp loc_4662D6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_4665D0  +
mov edx offset asc_49F711 +
call sub_463E00  +
mov eax [esp+78h+var_60] +
mov edx offset aInt +
mov edi 3 +
call sub_463E00  +
jmp loc_4662D6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_466602  +
mov edx offset asc_49F711 +
call sub_463E00  +
mov eax [esp+78h+var_60] +
mov edx offset aFloat +
mov edi 6 +
call sub_463E00  +
jmp loc_4662D6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_466634  +
mov edx offset asc_49F711 +
call sub_463E00  +
mov eax [esp+78h+var_60] +
mov edx offset aDouble +
mov edi 6 +
call sub_463E00  +
jmp loc_4662D6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_466666  +
mov edx offset asc_49F711 +
call sub_463E00  +
mov eax [esp+78h+var_60] +
mov edx offset aChar +
mov edi 5 +
call sub_463E00  +
jmp loc_4662D6  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_466698  +
mov edx offset asc_49F711 +
call sub_463E00  +
mov eax [esp+78h+var_60] +
mov edx offset aBool +
mov edi 4 +
call sub_463E00  +
jmp loc_4662D6  +
lea esi [esp+78h+var_40] +
mov [esp+78h+var_70] 2 +
mov [esp+78h+var_74] edi +
mov [esp+78h+var_78] esi +
call strncpy  +
mov [esp+78h+var_78] edi +
mov byte ptr [esp+78h+var_40+2] 0 +
call strlen  +
mov edx 2 +
cmp eax 2 +
cmovb edx eax +
add edx edi +
mov [ebx] edx +
lea eax [esp+78h+var_50] +
mov [esp+78h+var_70] eax +
mov [esp+78h+var_74] offset asc_49F796 +
mov [esp+78h+var_78] esi +
call sscanf  +
mov eax [esp+78h+var_50] +
mov [esp+78h+var_74] offset aIntU_t +
mov [esp+78h+var_78] esi +
mov [esp+78h+var_70] eax +
call sprintf  +
mov eax [esp+78h+var_60] +
mov edi [eax+4] +
cmp [eax] edi +
jz loc_466729  +
mov edx offset asc_49F711 +
call sub_463E00  +
cmp byte ptr [esp+78h+var_40] 0 +
mov edi 3 +
jz loc_4662D6  +
mov eax [esp+78h+var_60] +
mov edx esi +
call sub_463E00  +
jmp loc_4662D6  +
mov ecx eax +
lea esi [esp+78h+var_40] +
add ecx 1 +
mov byte ptr [esp+edx+78h+var_40] 0 +
mov [ebx] ecx +
jmp loc_4666E4  +
cmp byte ptr [eax+1] 5Fh +
jz loc_46674F  +
xor edi edi +
jmp loc_4662D6  +
mov eax [esp+78h+var_60] +
mov edx esi +
mov edi 1 +
call sub_463E40  +
jmp loc_466162  +
***
mov edi ecx +
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [eax] +
mov [esp+54h+var_40] edx +
mov edx [edx] +
mov [esp+54h+var_44] eax +
mov ebx [esp+54h+arg_0] +
mov [esp+54h+var_3C] ecx +
add edi edx +
test esi 1000h +
jz loc_4667B0  +
cmp byte ptr [edi] 58h +
jz loc_466905  +
mov eax [esp+54h+var_44] +
mov ebp [eax] +
test ebp 1800h +
jz loc_46680B  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__pt__ +
mov [esp+54h+var_38] edx +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jz loc_46680B  +
lea eax [eax+6] +
lea ebp [esp+54h+var_30] +
mov [esp+54h+var_30] eax +
mov eax ebp +
call sub_463810  +
cmp eax 0FFFFFFFFh +
jz loc_46685A  +
mov ecx [esp+54h+var_30] +
mov edx [esp+54h+var_38] +
add eax ecx +
cmp edi eax +
jz loc_466C5C  +
mov eax [esp+54h+var_44] +
mov ebp [eax] +
and ebp 2100h +
jz loc_46685A  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__tm__ +
mov [esp+54h+var_38] edx +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jz loc_466B31  +
lea eax [esi+6] +
lea ebp [esp+54h+var_30] +
mov [esp+54h+var_30] eax +
mov eax ebp +
call sub_463810  +
cmp eax 0FFFFFFFFh +
jz loc_46685A  +
mov edx [esp+54h+var_30] +
add eax edx +
cmp edi eax +
jz loc_4668F0  +
mov eax [esp+54h+var_40] +
cmp [esp+54h+var_3C] 0Ah +
mov edx [eax] +
jg loc_4668A0  +
mov eax [esp+54h+var_44] +
cmp dword ptr [eax+34h] 0FFFFFFFFh +
jz loc_466BB8  +
mov eax [esp+54h+var_3C] +
test eax eax +
jz loc_46688E  +
mov ecx [esp+54h+var_3C] +
mov eax ebx +
call sub_463D40  +
mov eax [esp+54h+var_40] +
mov edx [eax] +
mov eax [esp+54h+var_40] +
add edx [esp+54h+var_3C] +
mov [eax] edx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi offset a_global__0 +
mov ecx 8 +
mov esi edx +
cmps   +
jnz loc_466867  +
cmp byte ptr [edx+9] 4Eh +
jnz loc_466867  +
movsx eax byte ptr [edx+8] +
cmp al [edx+0Ah] +
jnz loc_466867  +
mov [esp+54h+var_50] eax +
mov [esp+54h+var_54] offset byte_47DB4C +
mov [esp+54h+var_38] edx +
call strchr  +
mov edx [esp+54h+var_38] +
test eax eax +
jz loc_466867  +
mov edx offset aAnonymous +
mov eax ebx +
call sub_463E00  +
mov eax [esp+54h+var_40] +
mov edx [eax] +
jmp loc_46688E  +
cmp byte ptr [edx] 5Fh +
jnz loc_46685A  +
add edx 1 +
mov [esp+54h+var_30] edx +
jmp loc_466C6C  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] 3Ch +
mov [esp+54h+var_38] edx +
call strchr  +
mov edx [esp+54h+var_38] +
test eax eax +
jz loc_466B90  +
sub eax edx +
cmp [esp+54h+var_3C] eax +
mov ecx eax +
jle loc_466B90  +
test eax eax +
jnz loc_466BA0  +
mov eax [esp+54h+var_3C] +
mov edi [esp+54h+var_40] +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_28] 0 +
lea eax [edx+eax+1] +
mov [edi] eax +
mov eax [esp+54h+var_44] +
mov [esp+54h+var_2C] 0 +
cmp dword ptr [eax+34h] 0FFFFFFFFh +
jz loc_466BD2  +
mov edi [esp+54h+var_44] +
mov eax esi +
mov edx (offset asc_49F724+2) +
or eax 1 +
mov [edi] eax +
mov eax ebx +
call sub_463E00  +
mov edi [esp+54h+var_40] +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_4669B2  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
mov eax [edi] +
movzx ecx byte ptr [eax] +
cmp cl 53h +
jz loc_4669D2  +
jle loc_466A51  +
cmp cl 54h +
jz loc_466AE0  +
cmp cl 55h +
nop   +
jnz loc_466A00  +
cmp cl 53h +
jnz loc_466BC4  +
lea edx [eax+1] +
mov [edi] edx +
movzx eax byte ptr [eax+1] +
cmp al 4Eh +
jz loc_466BF1  +
cmp al 50h +
jz loc_466C09  +
cmp al 4Dh +
jz loc_466DF2  +
lea esi [esi+0] +
mov eax ebx +
mov edx offset asc_49F724 +
call sub_463E00  +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_466A34  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
mov eax [esp+54h+var_40] +
mov eax [eax] +
cmp byte ptr [eax] 5Fh +
jz loc_466BE3  +
mov eax [esp+54h+var_44] +
mov [eax] esi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp cl 41h +
jnz loc_466A00  +
add eax 1 +
mov [edi] eax +
mov eax edi +
call sub_463810  +
test eax eax +
mov ebp eax +
jle loc_466A00  +
mov edx offset asc_49F70D +
lea eax [esp+54h+var_2C] +
call sub_463E00  +
lea eax [ebp+1] +
mov [esp+54h+var_54] eax +
call sub_462140  +
mov ecx eax +
mov [esp+54h+var_3C] eax +
mov eax [edi] +
mov [esp+54h+var_54] ecx +
mov [esp+54h+var_4C] ebp +
mov [esp+54h+var_50] eax +
call memcpy  +
mov ecx [esp+54h+var_3C] +
mov eax [esp+54h+var_44] +
mov byte ptr [ecx+ebp] 0 +
mov eax [eax] +
mov [esp+54h+var_54] ecx +
mov [esp+54h+var_50] eax +
call sub_464930  +
test eax eax +
mov ecx eax +
jz loc_466E08  +
cmp byte ptr [eax] 0 +
jnz loc_466EB2  +
mov [esp+54h+var_54] ecx +
call free  +
mov eax [esp+54h+var_3C] +
add [edi] ebp +
mov [esp+54h+var_54] eax +
call free  +
jmp loc_466AFC  +
add eax 1 +
mov edx edi +
mov [edi] eax +
mov eax [esp+54h+var_44] +
lea ecx [esp+54h+var_2C] +
call sub_465B70  +
test eax eax +
jz loc_466A00  +
mov ecx [esp+54h+var_28] +
mov eax ebx +
lea edx [esp+54h+var_2C] +
call sub_463F30  +
mov eax [edi] +
movzx eax byte ptr [eax] +
cmp al 5Fh +
jz loc_466A00  +
test al al +
jz loc_466A00  +
mov edx (offset aU+2) +
mov eax ebx +
call sub_463E00  +
jmp loc_46698A  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__ps__ +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jnz loc_466835  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__pt__ +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jnz loc_466835  +
mov [esp+54h+var_50] offset a__s +
mov [esp+54h+var_54] edx +
call strstr  +
test eax eax +
mov esi eax +
jz loc_46685A  +
lea eax [eax+3] +
jmp loc_466838  +
mov ecx [esp+54h+var_3C] +
test ecx ecx +
jz loc_46693B  +
mov ecx [esp+54h+var_3C] +
mov eax ebx +
call sub_463D40  +
mov eax [esp+54h+var_40] +
mov edx [eax] +
mov eax [esp+54h+var_44] +
mov esi [eax] +
jmp loc_46693B  +
mov dword ptr [eax+34h] 0 +
jmp loc_466875  +
cmp cl 55h +
jz loc_4669DB  +
jmp loc_466A00  +
mov eax [ebx+4] +
mov edi [esp+54h+var_44] +
sub eax [ebx] +
mov [edi+34h] eax +
jmp loc_46696F  +
mov ebx [esp+54h+var_40] +
add eax 1 +
mov [ebx] eax +
jmp loc_466A43  +
mov edx offset asc_49F6F5 +
lea eax [esp+54h+var_2C] +
mov [esp+54h+var_3C] ecx +
call sub_463E00  +
mov edx [edi] +
mov ecx [esp+54h+var_3C] +
lea eax [edx+1] +
mov [edi] eax +
movzx eax byte ptr [edx+1] +
movzx edx al +
test ds:byte_49F240[edx+edx] 4 +
jz loc_466A00  +
mov ebp ecx +
jmp loc_466C43  +
mov eax [edi] +
lea edx [eax+1] +
mov [edi] edx +
movzx eax byte ptr [eax+1] +
movzx edx al +
test ds:byte_49F240[edx+edx] 4 +
jz loc_466E94  +
test al al +
mov ds:byte_4A887C al +
jz loc_466C27  +
mov edx offset byte_4A887C +
lea eax [esp+54h+var_2C] +
call sub_463E00  +
jmp loc_466C27  +
cmp byte ptr [ecx] 5Fh +
jnz loc_466805  +
add ecx 1 +
mov [esp+54h+var_30] ecx +
mov eax [esp+54h+var_40] +
mov ecx esi +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_2C] 0 +
mov edx [eax] +
sub ecx edx +
jz loc_466C97  +
mov eax ebx +
call sub_463D40  +
mov eax [esp+54h+var_44] +
cmp dword ptr [eax+34h] 0FFFFFFFFh +
jz loc_466E83  +
mov ecx [esp+54h+var_44] +
mov edx 49F726h +
mov eax [ecx] +
mov [esp+54h+var_38] eax +
or eax 1 +
mov [ecx] eax +
mov eax ebx +
call sub_463E00  +
cmp edi [esp+54h+var_30] +
ja loc_466D8F  +
jmp loc_466E30  +
mov eax [esp+54h+var_44] +
add esi 1 +
mov edx ebp +
lea ecx [esp+54h+var_20] +
mov [esp+54h+var_30] esi +
call sub_465B70  +
test eax eax +
jz loc_466E30  +
mov edx offset asc_49F70F +
lea eax [esp+54h+var_2C] +
call sub_463E00  +
mov ecx [esp+54h+var_1C] +
lea eax [esp+54h+var_2C] +
lea edx [esp+54h+var_20] +
call sub_463F30  +
mov eax [esp+54h+var_20] +
test eax eax +
jz loc_466D35  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_1C] 0 +
mov [esp+54h+var_18] 0 +
mov [esp+54h+var_20] 0 +
lea eax [esp+54h+var_2C] +
mov edx offset asc_49F713 +
call sub_463E00  +
mov eax [esp+54h+var_30] +
cmp byte ptr [eax] 4Ch +
jnz loc_466E30  +
add eax 1 +
mov [esp+54h+var_30] eax +
lea edx [esp+54h+var_2C] +
mov eax ebp +
call sub_463E80  +
test eax eax +
jz loc_466E30  +
mov ecx [esp+54h+var_28] +
lea edx [esp+54h+var_2C] +
mov eax ebx +
call sub_463F30  +
mov edx (offset aU+2) +
mov eax ebx +
call sub_463E00  +
cmp edi [esp+54h+var_30] +
jbe loc_466E30  +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_466DB7  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
mov esi [esp+54h+var_30] +
movzx eax byte ptr [esi] +
cmp al 4Ch +
jz loc_466E20  +
cmp al 58h +
jz loc_466CD0  +
mov eax [esp+54h+var_44] +
lea ecx [esp+54h+var_2C] +
mov edx ebp +
call sub_465B70  +
test eax eax +
jz loc_466E30  +
cmp esi [esp+54h+var_30] +
jnz loc_466D6A  +
mov eax [esp+54h+var_44] +
mov ebx [esp+54h+var_38] +
mov [eax] ebx +
jmp loc_466898  +
mov edx offset a2147483648 +
lea eax [esp+54h+var_2C] +
call sub_463E00  +
add dword ptr [edi] 1 +
jmp loc_466AFC  +
mov edx [edi] +
mov ecx ebp +
lea eax [esp+54h+var_2C] +
call sub_463D40  +
jmp loc_466ACE  +
add esi 1 +
mov [esp+54h+var_30] esi +
jmp loc_466D57  +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_466E58  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
cmp edi [esp+54h+var_30] +
ja loc_466E62  +
sub dword ptr [ebx+4] 1 +
mov eax ebx +
mov edx offset asc_49F724 +
call sub_463E00  +
mov eax [esp+54h+var_44] +
mov ebx [esp+54h+var_38] +
mov [eax] ebx +
mov eax [esp+54h+var_40] +
mov edx [eax] +
jmp loc_46688E  +
mov eax [ebx+4] +
mov ecx [esp+54h+var_44] +
sub eax [ebx] +
mov [ecx+34h] eax +
jmp loc_466CA5  +
mov ecx ebp +
cmp cl 55h +
jnz loc_466AFC  +
mov edx offset aU +
lea eax [esp+54h+var_2C] +
call sub_463E00  +
jmp loc_466AFC  +
mov edx eax +
mov [esp+54h+var_38] eax +
lea eax [esp+54h+var_2C] +
call sub_463E00  +
mov ecx [esp+54h+var_38] +
jmp loc_466AC6  +
***
push edi  +
mov edi eax +
push esi  +
mov eax edx +
push ebx  +
mov ebx edx +
sub esp 1Ch +
call sub_463810  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_466F22  +
mov eax [ebx] +
mov [esp+28h+var_28] eax +
call strlen  +
xor edx edx +
cmp esi eax +
jle loc_466F05  +
add esp 1Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_28] ebp +
mov edx ebx +
mov eax edi +
mov ecx esi +
call sub_466780  +
add esp 1Ch +
mov edx 1 +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor edx edx +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp ebp 2 +
jle loc_466FD6  +
cmp al 6Fh +
jz loc_467080  +
cmp ebp 4 +
jle loc_466FD6  +
mov dword ptr [esp+8] 4 +
mov dword ptr [esp+4] offset aType +
mov [esp] ebx +
call memcmp  +
test eax eax +
jnz loc_466FD6  +
movsx eax byte ptr [ebx+4] +
add ebx 5 +
mov dword ptr [esp] offset byte_47DB4C +
mov [esp+4] eax +
call strchr  +
test eax eax +
jz loc_466FD6  +
lea ecx [esp+30h] +
mov eax esi +
lea edx [esp+2Ch] +
mov [esp+2Ch] ebx +
call sub_465B70  +
test eax eax +
jnz loc_467002  +
xor ebx ebx +
mov eax esi +
call sub_463940  +
add esp 9Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp ebp 2 +
jg loc_466F83  +
nop   +
jmp loc_466FD6  +
***
mov eax [esp+0B4h] +
mov ebx 1 +
mov [esp] eax +
call strlen  +
mov edx 20h +
add eax [esp+0B4h] +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov [eax+8] dx +
mov edi [esp+30h] +
mov eax [esp+34h] +
mov [esp+4] edi +
sub eax edi +
mov [esp+8] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call strncat  +
test edi edi +
jz loc_466FD8  +
mov [esp] edi +
call free  +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+38h] 0 +
mov dword ptr [esp+30h] 0 +
jmp loc_466FD8  +
***
cmp byte ptr [ebx+1] 70h +
jnz loc_466F83  +
movsx eax byte ptr [ebx+2] +
mov dword ptr [esp] offset byte_47DB4C +
mov [esp+4] eax +
call strchr  +
test eax eax +
jz loc_466F83  +
cmp ebp 9 +
jle loc_467260  +
lea eax [ebx+3] +
mov dword ptr [esp+8] 7 +
mov dword ptr [esp+4] offset aAssign_ +
mov [esp] eax +
call memcmp  +
test eax eax +
jnz loc_467260  +
lea eax [ebp-0Ah] +
xor edi edi +
mov [esp+18h] eax +
lea eax [ebx+0Ah] +
mov ebp offset off_4A03E0 +
mov [esp+1Ch] eax +
jmp loc_4670FF  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_466FD6  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp eax [esp+18h] +
jnz loc_4670F0  +
mov eax [esp+18h] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_4670F0  +
mov eax [esp+0B4h] +
mov ebx 1 +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov byte ptr [eax+8] 0 +
lea eax [edi+edi*2] +
mov eax ds:off_4A03E4[eax*4] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
add eax 8 +
mov [esp] eax +
call strcpy  +
mov eax [esp+0B4h] +
mov [esp] eax +
call strlen  +
mov edx [esp+0B4h] +
mov ecx 3Dh +
mov [edx+eax] cx +
jmp loc_466FD8  +
***
lea eax [ebx+2] +
mov ebp offset off_4A03E0 +
xor edi edi +
mov [esp+18h] eax +
jmp loc_4671EF  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_466FD6  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp eax 2 +
jnz loc_4671E0  +
mov eax [esp+18h] +
mov dword ptr [esp+8] 2 +
mov [esp] ebx +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_4671E0  +
mov eax [esp+0B4h] +
mov ebx 1 +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov byte ptr [eax+8] 0 +
lea eax [edi+edi*2] +
mov eax ds:off_4A03E4[eax*4] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
add eax 8 +
mov [esp] eax +
call strcpy  +
jmp loc_466FD8  +
***
lea eax [ebp-3] +
xor edi edi +
mov [esp+18h] eax +
lea eax [ebx+3] +
mov ebp offset off_4A03E0 +
mov [esp+1Ch] eax +
jmp loc_467286  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_466FD6  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp [esp+18h] eax +
jnz loc_467277  +
mov eax [esp+18h] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_467277  +
jmp loc_46721B  +
***
cmp byte ptr [ebx+3] 70h +
lea esi [esi+0] +
jnz loc_46719C  +
add ebx 4 +
jmp loc_466FBF  +
***
push edi  +
mov edi edx +
push esi  +
mov edx offset aTemplate +
push ebx  +
mov esi 1 +
sub esp 2Ch +
mov [esp+38h+var_2C] eax +
mov eax ecx +
call sub_463E00  +
lea edx [esp+38h+var_28] +
mov eax edi +
call sub_4638B0  +
test eax eax +
jz loc_467370  +
mov eax [esp+38h+var_28] +
xor ebx ebx +
test eax eax +
jg loc_4673ED  +
lea esi [esi+0] +
mov eax [ebp+4] +
cmp byte ptr [eax-1] 3Eh +
jz loc_467421  +
mov eax ebp +
mov edx offset aClass +
call sub_463E00  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp-4+arg_8] +
lea ecx [esp-4+arg_10] +
mov edx edi +
call sub_465B70  +
test eax eax +
mov esi eax +
jnz loc_467432  +
mov eax [esp-4+arg_10] +
test eax eax +
jz loc_4673D4  +
mov [esp+0] eax +
call free  +
mov [esp-4+arg_14] 0 +
mov [esp-4+arg_18] 0 +
mov [esp-4+arg_10] 0 +
test esi esi +
jz loc_467412  +
add ebx 1 +
cmp [esp-4+arg_C] ebx +
jle loc_467370  +
mov edx offset asc_49F71E +
mov eax ebp +
call sub_463E00  +
mov edx [edi] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jz loc_467446  +
cmp al 7Ah +
jnz loc_467393  +
mov eax [esp-4+arg_8] +
add edx 1 +
mov ecx ebp +
mov [edi] edx +
mov edx edi +
call sub_467330  +
mov esi eax +
test esi esi +
jnz loc_4673D8  +
mov eax [ebp+4] +
xor esi esi +
cmp byte ptr [eax-1] 3Eh +
jnz loc_46737D  +
mov edx offset asc_49F711 +
mov eax ebp +
call sub_463E00  +
jmp loc_46737D  +
mov ecx [esp-4+arg_14] +
lea edx [esp-4+arg_10] +
mov eax ebp +
call sub_463F30  +
jmp loc_4673AC  +
add edx 1 +
mov eax ebp +
mov [edi] edx +
mov edx offset aClass_0 +
call sub_463E00  +
jmp loc_4673D8  +
***
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 1Ch +
mov ebp [edx] +
mov eax [eax+50h] +
test eax eax +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] 0 +
jg loc_4674C1  +
mov eax [ebx] +
cmp byte ptr [eax] 6Eh +
jnz loc_467523  +
add eax 1 +
mov [ebx] eax +
mov eax ebx +
call sub_463810  +
test eax eax +
mov [edi+50h] eax +
jle loc_467505  +
cmp eax 9 +
jg loc_467511  +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] 0 +
mov edx [edi+4Ch] +
sub eax 1 +
mov [edi+50h] eax +
test edx edx +
jz loc_467505  +
mov ecx [edx+4] +
mov eax esi +
mov ebx 1 +
call sub_463F30  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esp+0] 0Ch +
call sub_462140  +
mov [edi+4Ch] eax +
mov ecx eax +
mov edx ebx +
mov eax edi +
call sub_465B70  +
test eax eax +
jnz loc_467564  +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx] +
cmp byte ptr [ebp+0] 5Fh +
jnz loc_467505  +
add ebp 1 +
mov [ebx] ebp +
jmp loc_467472  +
mov ecx [edi+4Ch] +
test ecx ecx +
jz loc_4674E7  +
mov eax [ecx] +
test eax eax +
jz loc_4674F8  +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] ecx +
call free  +
mov ecx [esp+24h+var_18] +
mov edx ebx +
mov eax edi +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx] 0 +
mov ecx [edi+4Ch] +
call sub_465B70  +
test eax eax +
jz loc_467505  +
mov edx [edi+4Ch] +
mov eax esi +
mov ecx [edx+4] +
call sub_463F30  +
mov eax [edi+48h] +
mov ecx [ebx] +
mov ebx 1 +
test eax eax +
jnz loc_467507  +
sub ecx ebp +
mov edx ebp +
mov eax edi +
call sub_464250  +
jmp loc_467507  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
test byte ptr [eax] 1 +
jnz loc_4677B1  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
xor esi esi +
cmp al 5Fh +
jz loc_4676D5  +
test al al +
jz loc_4676D5  +
cmp al 65h +
jz loc_4676D5  +
cmp al 54h +
jz loc_4675D6  +
cmp al 4Eh +
lea esi [esi+0] +
jnz loc_467714  +
lea eax [edx+1] +
mov [ebp+0] eax +
cmp byte ptr [edx] 4Eh +
jz loc_467778  +
mov [esp+48h+var_30] 1 +
test dword ptr [ebx] 3800h +
jz loc_4675FF  +
cmp dword ptr [ebx+20h] 9 +
jg loc_4677DC  +
lea edx [esp+48h+var_2C] +
mov eax ebp +
call sub_4638B0  +
test eax eax +
jz loc_467790  +
mov eax [esp+48h+var_2C] +
test dword ptr [ebx] 3C00h +
jz loc_467625  +
sub eax 1 +
mov [esp+48h+var_2C] eax +
test eax eax +
js loc_467790  +
cmp [ebx+20h] eax +
jg loc_467644  +
jmp loc_467790  +
mov eax [esp+48h+var_24] +
test eax eax +
jnz loc_467699  +
mov esi 1 +
mov eax [ebx+50h] +
test eax eax +
jle loc_4676C0  +
mov eax [ebx+4] +
test esi esi +
mov edx [esp+48h+var_2C] +
mov eax [eax+edx*4] +
mov [esp+48h+var_28] eax +
jz loc_467666  +
test byte ptr [ebx] 1 +
jnz loc_467703  +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_28] +
call sub_467460  +
test eax eax +
jz loc_467790  +
test byte ptr [ebx] 1 +
jz loc_467637  +
mov ecx [esp+48h+var_20] +
mov eax edi +
lea edx [esp+48h+var_24] +
call sub_463F30  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_46763F  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
jmp loc_46763F  +
sub [esp+48h+var_30] 1 +
jns loc_46764B  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jnz loc_4675B6  +
mov ecx [ebx+50h] +
test ecx ecx +
jg loc_4675C6  +
cmp al 65h +
jz loc_467802  +
test byte ptr [ebx] 1 +
jz loc_4676F9  +
mov edx offset asc_49F713 +
mov eax edi +
call sub_463E00  +
mov eax 1 +
jmp loc_467792  +
mov edx offset asc_49F71E +
mov eax edi +
call sub_463E00  +
jmp loc_467666  +
test esi esi +
jz loc_467726  +
test byte ptr [ebx] 1 +
nop   +
lea esi [esi+0] +
jnz loc_4677F1  +
lea ecx [esp+48h+var_24] +
mov edx ebp +
mov eax ebx +
call sub_467460  +
test eax eax +
jz loc_467790  +
test byte ptr [ebx] 1 +
jnz loc_4677A0  +
mov eax [esp+48h+var_24] +
mov esi 1 +
test eax eax +
jz loc_4676C7  +
mov [esp+48h+var_48] eax +
call free  +
mov edx [ebp+0] +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
movzx eax byte ptr [edx] +
jmp loc_4676CD  +
lea edx [esp+48h+var_30] +
mov eax ebp +
call sub_4638B0  +
test eax eax +
jnz loc_4675ED  +
nop   +
lea esi [esi+0] +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+48h+var_20] +
lea edx [esp+48h+var_24] +
mov eax edi +
call sub_463F30  +
jmp loc_46773C  +
mov edx offset asc_49F70F +
mov eax ecx +
call sub_463E00  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
test al al +
jnz loc_4675AC  +
mov edx offset aVoid +
mov eax edi +
call sub_463E00  +
jmp loc_4675A6  +
mov eax ebp +
call sub_463810  +
test eax eax +
mov [esp+48h+var_2C] eax +
jg loc_467616  +
jmp loc_467790  +
mov edx offset asc_49F71E +
mov eax edi +
call sub_463E00  +
jmp loc_467726  +
add edx 1 +
test byte ptr [ebx] 1 +
mov [ebp+0] edx +
jz loc_4676F9  +
test esi esi +
jnz loc_467826  +
mov edx offset a____0 +
mov eax edi +
call sub_463E00  +
jmp loc_4676E8  +
mov edx 49FB96h +
mov eax edi +
call sub_463E00  +
jmp loc_467815  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov ebp [eax+4Ch] +
add dword ptr [eax+48h] 1 +
mov edi [eax+50h] +
mov dword ptr [eax+4Ch] 0 +
mov dword ptr [eax+50h] 0 +
call sub_467590  +
mov esi [ebx+4Ch] +
test esi esi +
jz loc_4678AA  +
mov edx [esi] +
test edx edx +
jz loc_46789A  +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi] 0 +
mov esi [ebx+4Ch] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
mov [ebx+4Ch] ebp +
mov [ebx+50h] edi +
sub dword ptr [ebx+48h] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov edx [edx] +
mov esi [esp+48h+arg_0] +
mov ecx esi +
sub ecx edx +
jnz loc_467AC0  +
mov eax ebx +
mov edx 1 +
call sub_463CD0  +
mov eax [ebx+4] +
mov byte ptr [eax] 0 +
lea eax [esi+2] +
test dword ptr [ebp+0] 1000h +
mov [edi] eax +
jz loc_467907  +
cmp byte ptr [esi+2] 58h +
jz loc_467B08  +
test dword ptr [ebp+0] 3C00h +
mov edx [ebx] +
jz loc_46793A  +
mov edi offset a__ct +
mov ecx 5 +
mov esi edx +
cmps   +
jz loc_467AD0  +
mov edi offset a__dt +
mov ecx 5 +
mov esi edx +
cmps   +
jz loc_467AF4  +
mov eax [ebx+4] +
movzx edi byte ptr [edx] +
mov esi eax +
sub esi edx +
cmp esi 2 +
mov [esp+48h+var_38] eax +
jle loc_4679F4  +
mov eax edi +
cmp al 6Fh +
jz loc_467B30  +
cmp esi 4 +
jle loc_4679F4  +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_40] 4 +
mov [esp+48h+var_44] offset aType +
mov [esp+48h+var_34] edx +
call memcmp  +
mov edx [esp+48h+var_34] +
test eax eax +
jnz loc_4679F4  +
movsx eax byte ptr [edx+4] +
mov [esp+48h+var_48] offset byte_47DB4C +
mov [esp+48h+var_44] eax +
call strchr  +
mov edx [esp+48h+var_34] +
test eax eax +
jz loc_4679F4  +
add edx 5 +
mov [esp+48h+var_28] edx +
lea ecx [esp+48h+var_24] +
mov eax ebp +
lea edx [esp+48h+var_28] +
call sub_465B70  +
test eax eax +
jnz loc_467C20  +
mov eax [ebx+4] +
mov edx [ebx] +
mov [esp+48h+var_38] eax +
nop   +
lea esi [esi+0] +
mov ecx [esp+48h+var_38] +
cmp edx ecx +
jz loc_467B20  +
sub ecx edx +
mov eax 1 +
cmp ecx 1 +
jz loc_467AE4  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edi +
cmp al 5Fh +
jnz loc_4679D0  +
cmp byte ptr [edx+1] 5Fh +
jnz loc_4679D0  +
movzx eax byte ptr [edx+2] +
cmp al 6Fh +
jz loc_467CFF  +
movzx ecx al +
test ds:byte_49F240[ecx+ecx] 8 +
jz loc_4679D0  +
movzx ecx byte ptr [edx+3] +
test ds:byte_49F240[ecx+ecx] 8 +
jz loc_4679D0  +
cmp byte ptr [edx+4] 0 +
jnz loc_467D1E  +
lea eax [edx+2] +
mov edi offset off_4A03E0 +
mov [esp+48h+var_30] ebx +
xor esi esi +
mov ebx eax +
mov [esp+48h+var_34] edx +
jmp loc_467A56  +
add esi 1 +
add edi 0Ch +
cmp esi 4Fh +
jz loc_467DA7  +
mov ebp [edi] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax 2 +
jnz loc_467A47  +
mov [esp+48h+var_40] 2 +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] ebp +
call memcmp  +
test eax eax +
jnz loc_467A47  +
mov edx [esp+48h+var_34] +
mov ebx [esp+48h+var_30] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_463E00  +
lea eax [esi+esi*2] +
mov edx ds:off_4A03E4[eax*4] +
test edx edx +
jz loc_4679C2  +
cmp byte ptr [edx] 0 +
jz loc_4679C2  +
mov eax ebx +
call sub_463E00  +
jmp loc_4679C2  +
mov eax ebx +
call sub_463D40  +
jmp loc_4678DD  +
add dword ptr [ebp+28h] 1 +
mov eax 1 +
mov [ebx+4] edx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
cmp byte ptr [edx] 2Eh +
setnz al  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add dword ptr [ebp+2Ch] 1 +
mov eax 1 +
mov [ebx+4] edx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+48h+var_48] ebx +
xor ecx ecx +
mov edx edi +
mov eax ebp +
call sub_466780  +
jmp loc_467907  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 70h +
jnz loc_46795B  +
movsx eax byte ptr [edx+2] +
mov [esp+48h+var_48] offset byte_47DB4C +
mov [esp+48h+var_34] edx +
mov [esp+48h+var_44] eax +
call strchr  +
mov edx [esp+48h+var_34] +
test eax eax +
jz loc_46795B  +
cmp esi 9 +
jle loc_467C80  +
lea eax [edx+3] +
mov [esp+48h+var_40] 7 +
mov [esp+48h+var_44] offset aAssign_ +
mov [esp+48h+var_48] eax +
call memcmp  +
mov edx [esp+48h+var_34] +
test eax eax +
jnz loc_467C80  +
lea eax [edx+0Ah] +
sub esi 0Ah +
xor edi edi +
mov [esp+48h+var_34] eax +
mov [esp+48h+var_30] edx +
mov [esp+48h+var_2C] ebx +
jmp loc_467BB0  +
add edi 1 +
cmp edi 4Fh +
jz loc_467D15  +
lea eax [edi+edi*2] +
mov ebp ds:off_4A03E0[eax*4] +
lea ebx ds:0[eax*4] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax esi +
jnz loc_467BA4  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_44] eax +
call memcmp  +
test eax eax +
jnz loc_467BA4  +
mov edx [esp+48h+var_30] +
mov edi ebx +
mov ebx [esp+48h+var_2C] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_463E00  +
mov edx ds:off_4A03E4[edi] +
test edx edx +
jz loc_467C11  +
cmp byte ptr [edx] 0 +
jnz loc_467DB0  +
mov edx offset asc_49FC03 +
jmp loc_467AAF  +
mov eax [ebx] +
mov edx offset aOperator_2 +
mov [ebx+4] eax +
mov eax ebx +
call sub_463E00  +
mov ecx [esp+48h+var_20] +
mov eax ebx +
lea edx [esp+48h+var_24] +
call sub_463F30  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_4679C2  +
mov [esp+48h+var_48] eax +
call free  +
mov eax [ebx+4] +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
mov edx [ebx] +
mov [esp+48h+var_38] eax +
jmp loc_4679D0  +
lea eax [edx+3] +
sub esi 3 +
xor edi edi +
mov [esp+48h+var_34] eax +
mov [esp+48h+var_30] edx +
mov [esp+48h+var_2C] ebx +
jmp loc_467C9E  +
add edi 1 +
cmp edi 4Fh +
jz loc_467D15  +
lea eax [edi+edi*2] +
mov ebp ds:off_4A03E0[eax*4] +
lea ebx ds:0[eax*4] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax esi +
jnz loc_467C96  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_44] eax +
call memcmp  +
test eax eax +
jnz loc_467C96  +
mov edx [esp+48h+var_30] +
mov edi ebx +
mov ebx [esp+48h+var_2C] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_463E00  +
mov edx ds:off_4A03E4[edi] +
test edx edx +
jnz loc_467AA6  +
jmp loc_4679C2  +
cmp byte ptr [edx+3] 70h +
jnz loc_467A0C  +
add edx 4 +
lea esi [esi+0] +
jmp loc_4679A7  +
mov edx [esp+48h+var_30] +
jmp loc_4679D0  +
cmp al 61h +
jnz loc_4679D0  +
cmp byte ptr [edx+5] 0 +
jnz loc_4679D0  +
mov esi offset off_4A03E0 +
xor edi edi +
lea eax [edx+2] +
mov [esp+48h+var_30] ebx +
mov ebp eax +
mov ebx esi +
mov [esp+48h+var_34] edx +
jmp loc_467D53  +
add edi 1 +
add ebx 0Ch +
cmp edi 4Fh +
jz loc_467DA7  +
mov esi [ebx] +
mov [esp+48h+var_48] esi +
call strlen  +
cmp eax 3 +
jnz loc_467D48  +
mov [esp+48h+var_40] 3 +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] esi +
call memcmp  +
test eax eax +
jnz loc_467D48  +
mov edx [esp+48h+var_34] +
imul edi edi +
mov ebx [esp+48h+var_30] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_463E00  +
mov edx ds:off_4A03E4[edi] +
test edx edx +
jnz loc_467AA6  +
jmp loc_4679C2  +
mov edx [esp+48h+var_34] +
jmp loc_4679D0  +
mov eax ebx +
call sub_463E00  +
jmp loc_467C11  +
***
push edi  +
push esi  +
mov esi 1 +
push ebx  +
mov ebx eax +
sub esp 6Ch +
lea eax [eax+20h] +
mov [esp+78h+var_54] eax +
lea eax [ebx+4] +
mov [esp+78h+var_5C] ecx +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_4C] 0 +
mov [esp+78h+var_64] 0 +
mov [esp+78h+var_58] 0 +
mov [esp+78h+var_50] eax +
mov edi [ebp+0] +
movsx eax byte ptr [edi] +
test al al +
jz loc_468415  +
lea edx [eax-30h] +
cmp dl 45h +
ja loc_4682A6  +
movzx edx dl +
jmp ds:off_49FC18[edx*4]  +
mov eax [esp+78h+var_60] +
lea ecx [esp+78h+var_30] +
mov edx ebp +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_34] 0 +
test eax eax +
cmovnz edi eax +
mov eax ebx +
mov [esp+78h+var_60] edi +
lea edi [esp+78h+var_3C] +
mov [esp+78h+var_78] edi +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_30] 0 +
call sub_4650F0  +
test eax eax +
mov esi eax +
jnz loc_4683E0  +
test byte ptr [ebx] 4 +
mov eax offset asc_49F728 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+78h+var_30] +
call sub_463E00  +
mov edx [esp+78h+var_30] +
mov ecx [esp+78h+var_2C] +
cmp edx ecx +
jz loc_467EBE  +
sub ecx edx +
jnz loc_4684D0  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_4684A6  +
test byte ptr [ebx+28h] 1 +
jnz loc_4682E0  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_4682E0  +
mov eax [esp+78h+var_3C] +
test eax eax +
jz loc_467F04  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_34] 0 +
mov [esp+78h+var_3C] 0 +
mov eax [esp+78h+var_30] +
test eax eax +
jz loc_467F2C  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_30] 0 +
test esi esi +
setnz al  +
mov edi eax +
mov eax 1 +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_64] 1 +
jmp loc_467FD9  +
test dword ptr [ebx] 300h +
jz loc_467F64  +
mov ecx [esp+78h+var_4C] +
test ecx ecx +
jnz loc_4684E0  +
test dword ptr [ebx] 1000h +
jz loc_468016  +
lea eax [edi+1] +
mov [ebp+0] eax +
movzx eax byte ptr [edi+1] +
test al al +
jz loc_467FCA  +
add edi 2 +
test ds:byte_49F240[eax+eax] 4 +
jnz loc_467F9D  +
jmp loc_467FCA  +
add edi 1 +
test ds:byte_49F240[eax+eax] 4 +
jz loc_467FCA  +
mov [ebp+0] edi +
movzx eax byte ptr [edi] +
test al al +
jnz loc_467F90  +
jmp loc_467FCA  +
mov eax [esp+78h+var_60] +
test eax eax +
cmovz eax edi +
add edi 1 +
mov [ebp+0] edi +
mov [esp+78h+var_60] eax +
mov dword ptr [ebx+30h] 1 +
movzx eax byte ptr [esp+78h+var_64] +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
mov ecx edi +
test cl cl +
jz loc_46800E  +
test al al +
jz loc_46800E  +
test dword ptr [ebx] 2C00h +
jnz loc_4682F8  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_467590  +
mov [esp+78h+var_64] 0 +
mov [esp+78h+var_58] 1 +
mov esi eax +
test esi esi +
jnz loc_467E02  +
xor esi esi +
add esp 6Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 1 +
call sub_465710  +
test eax eax +
mov esi eax +
jz loc_46827E  +
mov eax [ebx+48h] +
mov ecx [ebp+0] +
test eax eax +
jnz loc_46827E  +
sub ecx edi +
mov edx edi +
mov eax ebx +
call sub_464250  +
jmp loc_46827E  +
test dword ptr [ebx] 1000h +
jz loc_468016  +
add edi 1 +
jmp loc_468077  +
test al al +
jz loc_468086  +
mov [ebp+0] edi +
movzx eax byte ptr [edi] +
mov edx edi +
add edi 1 +
cmp al 5Fh +
jnz loc_468073  +
test al al +
jz loc_468016  +
add edx 1 +
mov [ebp+0] edx +
jmp loc_467FCA  +
call sub_463B00  +
or [ebx+38h] eax +
mov eax [esp+78h+var_60] +
test eax eax +
cmovz eax edi +
add edi 1 +
mov [esp+78h+var_60] eax +
mov [ebp+0] edi +
jmp loc_467FCA  +
lea ecx [esp+78h+var_24] +
mov edx ebp +
mov eax ebx +
call sub_465B70  +
test eax eax +
mov esi eax +
jz loc_467F2C  +
test byte ptr [ebx] 4 +
mov eax offset asc_49F728 +
mov edx offset a_ +
cmovz edx eax +
lea eax [esp+78h+var_24] +
call sub_463E00  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_4680F9  +
sub ecx edx +
jnz loc_468598  +
test edx edx +
jz loc_467F2C  +
mov [esp+78h+var_78] edx +
call free  +
jmp loc_467F2C  +
mov eax [esp+78h+var_60] +
mov dword ptr [ebx+34h] 0FFFFFFFFh +
mov [esp+78h+var_1C] 0 +
mov [esp+78h+var_20] 0 +
test eax eax +
cmovnz edi eax +
mov eax ebx +
mov [esp+78h+var_60] edi +
mov [esp+78h+var_24] 0 +
call sub_463A00  +
lea ecx [esp+78h+var_24] +
mov edx ebp +
mov edi eax +
mov eax ebx +
call sub_466ED0  +
test eax eax +
jnz loc_468310  +
mov edx [esp+78h+var_24] +
xor edi edi +
xor esi esi +
test edx edx +
jz loc_46816E  +
mov [esp+78h+var_78] edx +
call free  +
test esi esi +
jz loc_468180  +
mov eax [ebx+48h] +
mov ecx [ebp+0] +
test eax eax +
jz loc_468573  +
test dword ptr [ebx] 2300h +
jz loc_468400  +
mov eax [ebp+0] +
cmp byte ptr [eax] 46h +
jz loc_468400  +
mov eax 1 +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_64] 1 +
jmp loc_467FD9  +
test dword ptr [ebx] 300h +
jz loc_468016  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 0 +
call sub_4650F0  +
test byte ptr [ebx+28h] 1 +
mov esi eax +
mov eax 1 +
cmovnz eax [esp+78h+var_4C] +
add dword ptr [ebp+0] 1 +
mov [esp+78h+var_4C] eax +
jmp loc_467FCA  +
add edi 1 +
mov [ebp+0] edi +
test dword ptr [ebx] 3C00h +
jnz loc_468494  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_467590  +
test eax eax +
mov esi eax +
jz loc_468016  +
test dword ptr [ebx] 2100h +
jz loc_46823D  +
mov eax [ebp+0] +
cmp byte ptr [eax] 5Fh +
jz loc_4685C8  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_58] 1 +
and eax 1 +
jmp loc_467FDF  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 1 +
call sub_465710  +
mov esi eax +
test dword ptr [ebx] 300h +
jnz loc_467F2C  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_467FD9  +
test dword ptr [ebx] 300h +
jz loc_468016  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_467590  +
mov [esp+78h+var_58] 1 +
mov esi eax +
movzx eax byte ptr [esp+78h+var_64] +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_467FD9  +
mov ecx [esp+78h+var_38] +
mov edx edi +
mov eax [esp+78h+var_5C] +
call sub_463F30  +
sub dword ptr [ebx+28h] 1 +
jmp loc_467EDC  +
mov edx [esp+78h+var_54] +
mov eax [esp+78h+var_50] +
call sub_463B90  +
jmp loc_467FEF  +
test byte ptr [ebx+28h] 1 +
mov esi [esp+78h+var_20] +
jnz loc_468320  +
test byte ptr [ebx+2Ch] 1 +
jz loc_468353  +
mov ecx [ebx+34h] +
mov edx [esp+78h+var_24] +
lea eax [ecx+1] +
cmp eax 1 +
jbe loc_4685C1  +
add ecx edx +
mov [esp+78h+var_20] ecx +
cmp edx ecx +
jz loc_468345  +
sub ecx edx +
jnz loc_468549  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_4685AA  +
sub dword ptr [ebx+28h] 1 +
mov edx [esp+78h+var_24] +
mov ecx esi +
mov eax 0 +
mov [esp+78h+var_20] esi +
sub ecx edx +
cmp esi edx +
cmovz ecx eax +
mov eax ebx +
call sub_463A70  +
mov eax [esp+78h+var_20] +
mov esi 1 +
mov edx [esp+78h+var_24] +
mov [esp+78h+var_78] edi +
mov edi 1 +
mov ecx eax +
sub ecx edx +
cmp edx eax +
mov eax 0 +
cmovz ecx eax +
lea eax [ebx+0Ch] +
call sub_463C90  +
mov eax offset asc_49F728 +
mov edx offset a_ +
test byte ptr [ebx] 4 +
cmovz edx eax +
mov eax [esp+78h+var_5C] +
call sub_463DD0  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_468162  +
sub ecx edx +
jz loc_468162  +
mov eax [esp+78h+var_5C] +
call sub_463D70  +
mov edx [esp+78h+var_24] +
jmp loc_468162  +
mov eax [ebx+48h] +
mov ecx [ebp+0] +
test eax eax +
jnz loc_467E91  +
mov edx [esp+78h+var_60] +
mov eax ebx +
sub ecx edx +
call sub_464250  +
jmp loc_467E91  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
and eax 1 +
jmp loc_467FD9  +
mov edx [esp+78h+var_58] +
test edx edx +
jnz loc_468566  +
test esi esi +
jz loc_468566  +
test dword ptr [ebx] 300h +
jnz loc_468557  +
test byte ptr [ebx] 1 +
jz loc_468018  +
mov eax [ebx+30h] +
test eax eax +
jnz loc_468585  +
mov eax [ebx+38h] +
test eax eax +
jz loc_468018  +
mov ecx [esp+78h+var_5C] +
mov edi [ecx+4] +
cmp [ecx] edi +
jz loc_46846E  +
mov eax ecx +
mov edx offset asc_49F711 +
call sub_463E00  +
mov eax [ebx+38h] +
call sub_463B30  +
test eax eax +
jz loc_468018  +
cmp byte ptr [eax] 0 +
jz loc_468018  +
mov edx eax +
mov eax [esp+78h+var_5C] +
call sub_463E00  +
jmp loc_468018  +
mov edx [esp+78h+var_54] +
mov eax [esp+78h+var_50] +
call sub_463B90  +
jmp loc_468212  +
mov edx offset asc_49F72B +
mov eax edi +
call sub_463DD0  +
mov ecx [esp+78h+var_38] +
mov edx edi +
mov eax [esp+78h+var_5C] +
call sub_463F30  +
sub dword ptr [ebx+2Ch] 1 +
jmp loc_467EC8  +
mov eax [esp+78h+var_5C] +
call sub_463D70  +
jmp loc_467EBE  +
add edi 1 +
mov edx ebp +
mov [ebp+0] edi +
lea ecx [esp+78h+var_24] +
mov eax ebx +
call sub_465B70  +
mov edx [esp+78h+var_24] +
cmp edx [esp+78h+var_20] +
mov esi eax +
jz loc_468521  +
mov edx offset asc_49F711 +
lea eax [esp+78h+var_24] +
call sub_463E00  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_468521  +
sub ecx edx +
jnz loc_468629  +
test edx edx +
jz loc_46852D  +
mov [esp+78h+var_78] edx +
call free  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_4C] 1 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_467FD9  +
mov eax [esp+78h+var_5C] +
call sub_463D70  +
jmp loc_468345  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_467590  +
mov esi eax +
test esi esi +
jnz loc_468435  +
jmp loc_468018  +
mov edx [esp+78h+var_60] +
mov eax ebx +
sub ecx edx +
call sub_464250  +
jmp loc_468180  +
mov eax [esp+78h+var_5C] +
mov edx offset aStatic +
call sub_463E00  +
jmp loc_468449  +
mov eax [esp+78h+var_5C] +
call sub_463D70  +
mov edx [esp+78h+var_24] +
jmp loc_4680F9  +
mov eax [esp+78h+var_5C] +
mov edx offset asc_49F72B +
call sub_463DD0  +
sub dword ptr [ebx+2Ch] 1 +
jmp loc_468353  +
mov ecx esi +
jmp loc_468339  +
add eax 1 +
mov edx ebp +
mov [ebp+0] eax +
lea ecx [esp+78h+var_30] +
mov eax ebx +
call sub_465B70  +
mov esi eax +
mov eax [esp+78h+var_30] +
test eax eax +
jz loc_468605  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_30] 0 +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_58] 1 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_467FD9  +
mov eax [esp+78h+var_5C] +
call sub_463D70  +
mov edx [esp+78h+var_24] +
jmp loc_468521  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 8Ch +
mov ecx [edx] +
mov esi [esp+98h+arg_0] +
mov [esp+98h+var_80] eax +
mov [esp+98h+var_84] ecx +
cmp byte ptr [esi+2] 0 +
jz loc_4687CB  +
mov eax [eax] +
and eax 3C00h +
mov [esp+98h+var_7C] eax +
jnz loc_4687B0  +
lea eax [esi+2] +
mov [esp+98h+var_94] offset unk_49FD30 +
mov [esp+98h+var_98] eax +
call strstr  +
test eax eax +
jz loc_4687B0  +
mov ecx [ebx+4] +
mov edx ebx +
lea eax [esp+98h+var_78] +
mov [esp+98h+var_70] 0 +
lea edi [esp+98h+var_6C] +
mov [esp+98h+var_74] 0 +
mov [esp+98h+var_78] 0 +
call sub_463F30  +
mov eax [esp+98h+var_7C] +
mov ecx 15h +
mov edx [esp+98h+var_80] +
stos   +
lea eax [esp+98h+var_6C] +
call sub_463F70  +
mov edi [esp+98h+var_80] +
cmp byte ptr [esi+2] 0 +
jz loc_468777  +
mov [esp+98h+var_98] esi +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_4678C0  +
test eax eax +
jz loc_46870A  +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_467DC0  +
test eax eax +
jnz loc_4687D8  +
mov eax [esp+98h+var_84] +
lea edx [esp+98h+var_78] +
mov ecx [esp+98h+var_74] +
mov [ebp+0] eax +
mov eax [ebx] +
mov [ebx+4] eax +
mov eax ebx +
call sub_463F30  +
lea edx [esp+98h+var_6C] +
mov eax edi +
call sub_463F70  +
movzx edx byte ptr [esi+2] +
lea eax [esi+2] +
test dl dl +
jnz loc_468747  +
jmp loc_468777  +
add eax 1 +
test dl dl +
jz loc_468777  +
cmp dl 5Fh +
movzx edx byte ptr [eax+1] +
jnz loc_468740  +
cmp dl 5Fh +
jnz loc_468740  +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_468764  +
jmp loc_46876C  +
movzx edx byte ptr [eax+1] +
add eax 1 +
cmp dl 5Fh +
jz loc_468760  +
test dl dl +
lea esi [eax-2] +
jnz loc_4686E5  +
xor edi edi +
lea eax [esp+98h+var_6C] +
call sub_463BE0  +
lea eax [esp+98h+var_6C] +
call sub_463940  +
mov edx [esp+98h+var_78] +
mov eax edi +
test edx edx +
jz loc_4687C0  +
mov [esp+98h+var_98] edx +
mov [esp+98h+var_84] edi +
call free  +
mov eax [esp+98h+var_84] +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+98h+var_80] +
mov ecx ebx +
mov edx ebp +
mov [esp+98h+var_98] esi +
call sub_4678C0  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 8Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
jmp loc_468779  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 6Ch +
mov ebp [edx] +
mov [esp+6Ch+var_5C] eax +
mov [esp+6Ch+var_58] ecx +
cmp byte ptr [ebp+0] 5Fh +
jz loc_468890  +
mov edi offset a__thunk_ +
mov ecx 8 +
mov esi ebp +
cmps   +
jz loc_468990  +
mov edi offset a__t +
mov ecx 3 +
mov esi ebp +
cmps   +
jnz loc_468880  +
movzx eax byte ptr [ebp+3] +
cmp al 69h +
setz cl  +
cmp al 66h +
jnz loc_468A20  +
test cl cl +
jnz loc_468A28  +
mov edi offset aType_infoFunct +
lea eax [ebp+4] +
mov [ebx] eax +
movzx eax byte ptr [ebp+4] +
cmp al 51h +
jz loc_468B50  +
cmp al 74h +
jz loc_468B75  +
cmp al 4Bh +
jz loc_468B50  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
call sub_465B70  +
mov esi eax +
test esi esi +
jz loc_468880  +
mov eax [ebx] +
cmp byte ptr [eax] 0 +
jz loc_468C50  +
xor esi esi +
add esp 6Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx esi byte ptr [ebp+1] +
mov [esp+6Ch+var_6C] offset byte_47DB4C +
mov eax esi +
movsx edi al +
mov [esp+6Ch+var_68] edi +
call strchr  +
test eax eax +
jz loc_4688B7  +
cmp byte ptr [ebp+2] 5Fh +
jz loc_468C70  +
mov eax esi +
cmp al 5Fh +
jz loc_468A32  +
mov eax esi +
cmp al 76h +
jz loc_468B20  +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] offset a0123456789qt +
call strchr  +
test eax eax +
jz loc_4687FD  +
mov [esp+6Ch+var_68] offset byte_47DB4C +
mov [esp+6Ch+var_6C] ebp +
call strpbrk  +
test eax eax +
mov [esp+6Ch+var_54] eax +
jz loc_4687FD  +
lea eax [ebp+1] +
mov [ebx] eax +
movzx eax byte ptr [ebp+1] +
cmp al 51h +
jz loc_468C28  +
cmp al 74h +
jz loc_468BA2  +
cmp al 4Bh +
jz loc_468C28  +
mov eax ebx +
call sub_463810  +
test eax eax +
mov ebp eax +
js loc_468880  +
mov edx [ebx] +
mov [esp+6Ch+var_6C] edx +
mov [esp+6Ch+var_50] edx +
call strlen  +
mov edx [esp+6Ch+var_50] +
cmp ebp eax +
jg loc_468880  +
cmp ebp 0Ah +
jle loc_468D40  +
mov edi offset a_global__0 +
mov ecx 8 +
mov esi edx +
cmps   +
jnz loc_46896E  +
cmp byte ptr [edx+9] 4Eh +
jz loc_468D50  +
mov eax [esp+6Ch+var_58] +
mov ecx ebp +
call sub_463D40  +
mov edx [ebx] +
lea edi [edx+ebp] +
mov [ebx] edi +
mov esi 1 +
jmp loc_468BD4  +
lea edx [ebp+8] +
mov eax ebx +
mov [ebx] edx +
call sub_463810  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_468880  +
mov eax [ebx] +
lea edx [eax+1] +
mov eax [esp+6Ch+var_5C] +
mov [ebx] edx +
call sub_468DB0  +
test eax eax +
mov edi eax +
jz loc_468880  +
neg esi  +
mov [esp+6Ch+var_64] esi +
lea esi [esp+6Ch+var_3E] +
mov [esp+6Ch+var_68] offset aVirtualFunctio +
mov [esp+6Ch+var_6C] esi +
call sprintf  +
cmp byte ptr [esp+6Ch+var_3E] 0 +
jnz loc_468CE7  +
cmp byte ptr [edi] 0 +
jz loc_4689F6  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
call sub_463E00  +
mov [esp+6Ch+var_6C] edi +
call free  +
mov esi [ebx] +
mov [esp+6Ch+var_6C] esi +
call strlen  +
add esi eax +
mov [ebx] esi +
add esp 6Ch +
mov esi 1 +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test cl cl +
jz loc_468880  +
mov edi offset aType_infoNode +
jmp loc_46883F  +
cmp byte ptr [ebp+2] 76h +
jnz loc_4687FD  +
cmp byte ptr [ebp+3] 74h +
jnz loc_4687FD  +
cmp byte ptr [ebp+4] 5Fh +
jnz loc_4687FD  +
add ebp 5 +
mov [ebx] ebp +
mov esi 1 +
mov edi ebp +
movzx eax byte ptr [edi] +
test al al +
jz loc_468B05  +
cmp al 51h +
jz loc_468C87  +
cmp al 74h +
jz loc_468CB0  +
cmp al 4Bh +
jz loc_468C87  +
test ds:byte_49F240[eax+eax] 4 +
jnz loc_468CF7  +
mov [esp+6Ch+var_68] offset byte_47DB4C +
mov [esp+6Ch+var_6C] edi +
call strcspn  +
mov ebp eax +
test ebp ebp +
jnz loc_468D2C  +
add edi ebp +
mov [ebx] edi +
mov [esp+6Ch+var_68] offset byte_47DB4C +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
test esi esi +
jz loc_468880  +
test eax eax +
jz loc_468CE0  +
cmp edi eax +
lea esi [esi+0] +
jnz loc_468880  +
mov eax [esp+6Ch+var_5C] +
mov edx offset a_ +
test byte ptr [eax] 4 +
mov eax offset asc_49F728 +
cmovz edx eax +
mov eax [esp+6Ch+var_58] +
call sub_463E00  +
mov eax [ebx] +
lea edi [eax+1] +
mov [ebx] edi +
movzx eax byte ptr [edi] +
test al al +
jnz loc_468A67  +
test esi esi +
jz loc_468882  +
mov eax [esp+6Ch+var_58] +
mov edx offset aVirtualTable +
call sub_463E00  +
jmp loc_468882  +
cmp byte ptr [ebp+2] 74h +
jnz loc_4687FD  +
movsx eax byte ptr [ebp+3] +
mov [esp+6Ch+var_6C] offset byte_47DB4C +
mov [esp+6Ch+var_68] eax +
call strchr  +
test eax eax +
jz loc_4687FD  +
add ebp 4 +
mov [ebx] ebp +
jmp loc_468A55  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_465710  +
mov esi eax +
jmp loc_468871  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_4650F0  +
mov esi eax +
jmp loc_468871  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_4650F0  +
mov esi eax +
test esi esi +
jz loc_468880  +
mov edi [ebx] +
cmp edi [esp+6Ch+var_54] +
jnz loc_468880  +
mov eax [esp+6Ch+var_5C] +
add edi 1 +
mov edx offset a_ +
mov [ebx] edi +
test byte ptr [eax] 4 +
mov eax offset asc_49F728 +
cmovz edx eax +
mov eax [esp+6Ch+var_58] +
call sub_463E00  +
mov ebp [ebx] +
mov [esp+6Ch+var_6C] ebp +
call strlen  +
test eax eax +
mov edi eax +
jz loc_468C1F  +
mov ecx eax +
mov eax [esp+6Ch+var_58] +
mov edx ebp +
call sub_463D40  +
mov ebp [ebx] +
add edi ebp +
mov [ebx] edi +
jmp loc_468882  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_465710  +
mov esi eax +
jmp loc_468BCA  +
cmp byte ptr [edi] 0 +
jz loc_468882  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
call sub_463E00  +
jmp loc_468882  +
mov eax [esp+6Ch+var_5C] +
lea edx [ebp+3] +
mov esi 1 +
mov [ebx] edx +
add dword ptr [eax+2Ch] 1 +
jmp loc_468882  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_465710  +
mov edi [ebx] +
mov esi eax +
jmp loc_468AAB  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_4650F0  +
mov edi [ebx] +
mov esi eax +
jmp loc_468AAB  +
mov edi [ebx] +
jmp loc_468A5C  +
mov eax [esp+6Ch+var_58] +
mov edx esi +
call sub_463E00  +
jmp loc_4689E6  +
mov eax ebx +
call sub_463810  +
mov edi [ebx] +
mov [esp+6Ch+var_6C] edi +
mov ebp eax +
call strlen  +
cmp ebp eax +
jle loc_468A9F  +
mov [esp+6Ch+var_68] offset byte_47DB4C +
mov esi 1 +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
jmp loc_468AC3  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
mov ecx ebp +
call sub_463D40  +
mov edi [ebx] +
jmp loc_468AA7  +
test ebp ebp +
jz loc_46897B  +
jmp loc_46896E  +
movsx eax byte ptr [edx+8] +
cmp al [edx+0Ah] +
jnz loc_46896E  +
mov [esp+6Ch+var_68] eax +
mov [esp+6Ch+var_6C] offset byte_47DB4C +
call strchr  +
mov edx [esp+6Ch+var_50] +
test eax eax +
jz loc_46896E  +
mov eax [esp+6Ch+var_58] +
mov edx offset aAnonymous +
call sub_463E00  +
mov edi [ebx] +
mov [esp+6Ch+var_68] offset byte_47DB4C +
add edi ebp +
mov [ebx] edi +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
mov [esp+6Ch+var_54] eax +
jmp loc_468980  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [eax+28h] +
test edx edx +
mov [esp+48h+var_2C] edx +
mov dword ptr [ebx+28h] 0 +
mov dword ptr [ebx+3Ch] 0 +
mov [esp+48h+var_40] eax +
mov eax [ebx+2Ch] +
mov dword ptr [ebx+2Ch] 0 +
mov [esp+48h+var_3C] eax +
mov eax [ebx+30h] +
mov [esp+48h+var_38] eax +
mov eax [ebx+38h] +
mov dword ptr [ebx+38h] 0 +
mov [esp+48h+var_34] eax +
jz loc_469140  +
cmp byte ptr [edx] 0 +
jz loc_469140  +
test dword ptr [ebx] 300h +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_24] 0 +
jnz loc_468EF8  +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax 6 +
jbe loc_468F90  +
mov edi offset a_imp__ +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_469020  +
mov edi offset a__imp_ +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_469020  +
cmp eax 0Ah +
jbe loc_468F90  +
mov edi offset a_global__0 +
mov ecx 8 +
mov esi ebp +
cmps   +
jnz loc_468F90  +
movsx eax byte ptr [ebp+8] +
mov [esp+48h+var_48] offset byte_47DB4C +
mov [esp+48h+var_44] eax +
call strchr  +
test eax eax +
jz loc_469351  +
movzx ecx byte ptr [ebp+0Ah] +
cmp [eax] cl +
mov [esp+48h+var_30] ebp +
jnz loc_469032  +
movzx eax byte ptr [ebp+9] +
cmp al 44h +
jz loc_46935A  +
cmp al 49h +
mov [esp+48h+var_30] ebp +
jnz loc_469032  +
add ebp 0Bh +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+28h] 2 +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_4687E0  +
test eax eax +
jnz loc_4693CF  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_30] eax +
jmp loc_469032  +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_4687E0  +
test eax eax +
mov esi eax +
jz loc_468FE0  +
mov ebp [esp+48h+var_2C] +
cmp byte ptr [ebp+0] 0 +
jnz loc_4690A2  +
mov eax [ebx+28h] +
cmp eax 2 +
jz loc_469123  +
cmp dword ptr [ebx+2Ch] 2 +
jz loc_4691E5  +
cmp dword ptr [ebx+3Ch] 1 +
jz loc_469200  +
mov eax ebx +
call sub_463BE0  +
test esi esi +
jnz loc_4690B8  +
mov edx [esp+48h+var_24] +
xor eax eax +
test edx edx +
jz loc_468F68  +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_30] eax +
call free  +
mov eax [esp+48h+var_30] +
mov edi [esp+48h+var_40] +
mov ecx [esp+48h+var_3C] +
mov [ebx+28h] edi +
mov edi [esp+48h+var_38] +
mov [ebx+2Ch] ecx +
mov ecx [esp+48h+var_34] +
mov [ebx+30h] edi +
mov [ebx+38h] ecx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test dword ptr [ebx] 3800h +
mov [esp+48h+var_30] ebp +
jz loc_469032  +
mov edi offset a__std__ +
mov ecx 7 +
mov esi ebp +
cmps   +
jz loc_469220  +
mov esi [esp+48h+var_30] +
mov edi offset a__sti__ +
mov ecx 7 +
cmps   +
jnz loc_469032  +
mov eax [esp+48h+var_30] +
mov dword ptr [ebx+28h] 2 +
add eax 7 +
mov [esp+48h+var_2C] eax +
mov [esp+48h+var_30] eax +
jmp loc_469032  +
mov eax ebx +
call sub_463BE0  +
mov eax ebx +
call sub_463940  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_469016  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
mov ebp [esp+48h+var_2C] +
jmp loc_468E2C  +
add ebp 6 +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+3Ch] 1 +
mov [esp+48h+var_30] ebp +
mov eax [esp+48h+var_30] +
mov edx eax +
jmp loc_46904D  +
cmp byte ptr [eax+1] 5Fh +
lea edx [eax+1] +
jz loc_4690D4  +
mov [esp+48h+var_44] 5Fh +
mov [esp+48h+var_48] edx +
call strchr  +
test eax eax +
jnz loc_469040  +
cmp dword ptr [ebx+28h] 2 +
jz loc_469073  +
xor esi esi +
cmp dword ptr [ebx+2Ch] 2 +
jnz loc_468F35  +
mov esi [esp+48h+var_2C] +
test esi esi +
jz loc_469084  +
cmp byte ptr [esi] 0 +
jnz loc_469237  +
mov [esp+48h+var_48] esi +
call strlen  +
lea ebp [esi+eax] +
mov [esp+48h+var_2C] ebp +
cmp byte ptr [ebp+0] 0 +
mov esi 1 +
jz loc_468F1F  +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_467DC0  +
mov esi eax +
jmp loc_468F1F  +
lea eax [esp+48h+var_24] +
mov ecx 1 +
mov edx offset unk_49F620 +
call sub_463D40  +
mov eax [esp+48h+var_24] +
jmp loc_468F68  +
test edx edx +
mov esi eax +
jz loc_469061  +
mov [esp+48h+var_44] offset a__0 +
mov [esp+48h+var_48] esi +
call strspn  +
cmp eax 2 +
jle loc_4690FB  +
lea esi [esi+eax-2] +
test esi esi +
jz loc_469061  +
mov eax [ebx+30h] +
test eax eax +
jz loc_469147  +
movzx eax byte ptr [esi] +
movzx edx al +
test ds:byte_49F240[edx+edx] 4 +
jnz loc_46911A  +
cmp al 74h +
jnz loc_469061  +
mov ebp [esp+48h+var_30] +
jmp loc_469093  +
mov edx offset aGlobalConstr_0 +
lea eax [esp+48h+var_24] +
call sub_463DD0  +
mov dword ptr [ebx+28h] 0 +
jmp loc_468F3F  +
xor eax eax +
jmp loc_468F68  +
cmp [esp+48h+var_30] esi +
jz loc_46924B  +
mov eax [ebx] +
test ah 8 +
jz loc_469190  +
cmp byte ptr [esi+2] 70h +
jnz loc_469190  +
cmp byte ptr [esi+3] 74h +
jnz loc_469190  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] eax +
call strlen  +
lea edx [esp+48h+var_24] +
mov [esp+48h+var_48] edx +
lea edx [esp+48h+var_2C] +
mov ecx eax +
mov eax ebx +
call sub_466780  +
mov ebp [esp+48h+var_2C] +
jmp loc_469093  +
test ah 20h +
jz loc_4691B0  +
movzx eax byte ptr [esi+2] +
cmp al 74h +
jz loc_469294  +
cmp al 70h +
jnz loc_4691B0  +
movzx eax byte ptr [esi+3] +
sub eax 73h +
cmp al 1 +
jbe loc_469164  +
cmp [esp+48h+var_30] esi +
jz loc_4692A5  +
cmp byte ptr [esi+2] 0 +
jz loc_469061  +
mov [esp+48h+var_48] esi +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_468640  +
test eax eax +
mov esi eax +
jz loc_468F1F  +
jmp loc_468F11  +
mov edx offset aGlobalDestru_0 +
lea eax [esp+48h+var_24] +
call sub_463DD0  +
mov dword ptr [ebx+2Ch] 0 +
jmp loc_468F3F  +
mov edx offset aImportStubFor +
lea eax [esp+48h+var_24] +
call sub_463DD0  +
mov dword ptr [ebx+3Ch] 0 +
jmp loc_468F3F  +
add ebp 7 +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+2Ch] 2 +
mov [esp+48h+var_30] ebp +
jmp loc_469032  +
mov edx esi +
lea eax [esp+48h+var_24] +
call sub_463E00  +
mov esi [esp+48h+var_2C] +
jmp loc_469084  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax+2] +
movzx edx al +
test ds:byte_49F240[edx+edx] 4 +
jz loc_469320  +
mov eax [ebx] +
test ah 1Ch +
jz loc_469338  +
mov eax [esp+48h+var_30] +
add eax 2 +
mov [esp+48h+var_2C] eax +
lea eax [esp+48h+var_2C] +
call sub_463810  +
mov esi [esp+48h+var_2C] +
test esi esi +
jnz loc_46907B  +
jmp loc_469084  +
cmp byte ptr [esi+3] 6Dh +
jnz loc_4691B0  +
nop   +
jmp loc_469164  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax+2] +
movzx edx al +
test ds:byte_49F240[edx+edx] 4 +
jnz loc_4691BA  +
cmp al 74h +
jz loc_4691C4  +
test dword ptr [ebx] 3C00h +
jnz loc_46936F  +
mov eax [esp+48h+var_30] +
cmp byte ptr [eax] 5Fh +
jnz loc_4692EC  +
nop   +
lea esi [esi+0] +
add eax 1 +
cmp byte ptr [eax] 5Fh +
jz loc_4692E0  +
mov [esp+48h+var_30] eax +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_44] offset unk_49FD30 +
mov [esp+48h+var_48] eax +
call strstr  +
test eax eax +
jz loc_469061  +
cmp byte ptr [eax+2] 0 +
jz loc_469061  +
mov [esp+48h+var_48] eax +
jmp loc_4691C7  +
cmp al 51h +
jz loc_469336  +
cmp al 74h +
jz loc_469336  +
cmp al 4Bh +
jz loc_469336  +
cmp al 48h +
nop   +
jnz loc_469151  +
mov eax [ebx] +
test ah 3Ch +
jnz loc_469341  +
add dword ptr [ebx+28h] 1 +
mov ebp [esp+48h+var_30] +
add ebp 2 +
mov [esp+48h+var_2C] ebp +
jmp loc_469093  +
mov [esp+48h+var_30] ebp +
jmp loc_469032  +
mov eax ebp +
add eax 0Bh +
mov [esp+48h+var_2C] eax +
mov dword ptr [ebx+2Ch] 2 +
jmp loc_468ED4  +
mov esi [esp+48h+var_30] +
mov edi offset a__vtbl__ +
mov ecx 8 +
cmps   +
jnz loc_4692D2  +
mov esi [esp+48h+var_30] +
movzx edx byte ptr [esi+8] +
mov eax esi +
add eax 8 +
mov [esp+48h+var_28] eax +
test dl dl +
jz loc_4693D8  +
lea eax [esp+48h+var_28] +
call sub_463810  +
cmp eax 0FFFFFFFFh +
jz loc_4692D2  +
add eax [esp+48h+var_28] +
mov [esp+48h+var_28] eax +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jnz loc_469396  +
cmp byte ptr [eax+1] 5Fh +
jnz loc_46939A  +
lea edx [eax+2] +
mov [esp+48h+var_28] edx +
movzx edx byte ptr [eax+2] +
jmp loc_469396  +
mov ebp [esp+48h+var_2C] +
jmp loc_469093  +
mov eax [esp+48h+var_2C] +
lea edx [eax+8] +
movzx eax byte ptr [eax+8] +
mov [esp+48h+var_2C] edx +
test al al +
jz loc_469463  +
lea eax [esp+48h+var_2C] +
call sub_463810  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_4692D2  +
mov edi [esp+48h+var_2C] +
mov [esp+48h+var_48] edi +
call strlen  +
cmp esi eax +
jg loc_4692D2  +
test esi esi +
jnz loc_469450  +
add esi edi +
mov [esp+48h+var_2C] esi +
movzx eax byte ptr [esi] +
cmp al 5Fh +
jnz loc_4693E7  +
cmp byte ptr [esi+1] 5Fh +
jnz loc_4693EB  +
mov edx offset asc_49F728 +
lea eax [esp+48h+var_24] +
call sub_463DD0  +
mov eax [esp+48h+var_2C] +
lea edx [eax+2] +
mov [esp+48h+var_2C] edx +
movzx eax byte ptr [eax+2] +
jmp loc_4693E7  +
mov edx edi +
mov ecx esi +
lea eax [esp+48h+var_24] +
call sub_463D70  +
mov edi [esp+48h+var_2C] +
jmp loc_469417  +
mov edx offset aVirtualTable +
lea eax [esp+48h+var_24] +
call sub_463E00  +
mov ebp [esp+48h+var_2C] +
jmp loc_469093  +
***
sub esp 1Ch +
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
call strlen  +
mov [esp+14h+var_10] ebx +
mov esi eax +
lea eax [eax+1] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
add eax esi +
pop esi  +
retn   +
***
mov [esp+18h+var_18] 0Ch +
sub esp 14h +
mov eax [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
test eax eax +
jz loc_4695AC  +
lea ebx [eax+7] +
and ebx 0FFFFFFF8h +
lea ecx [ebx+8] +
cmp eax ecx +
ja loc_4695C9  +
mov edx [esi+4] +
cmp ebx edx +
jbe loc_4695F0  +
cmp ebx 1FFh +
ja loc_469607  +
mov [esp+14h+var_14] 0FE0h +
call malloc  +
test eax eax +
jz loc_4695C9  +
mov edx [esi+8] +
test ebx ebx +
mov dword ptr [eax+4] 0 +
mov [eax] edx +
lea edx [eax+8] +
mov [esi] edx +
mov dword ptr [esi+4] 0FD8h +
mov [esi+8] eax +
jz loc_4695D1  +
mov eax ebx +
jnz loc_46963C  +
mov edx [esi+4] +
cmp edx 7 +
ja loc_469630  +
mov [esp+14h+var_14] 0FE0h +
mov ebx 8 +
call malloc  +
test eax eax +
jnz loc_469585  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov ebx 0FFFFFFF8h +
mov ecx 0FD0h +
mov eax 8 +
add eax edx +
mov [esi] eax +
add eax ebx +
mov [esi+4] ecx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov ecx ebx +
neg ecx  +
mov eax [esi] +
sub edx ebx +
mov [esi+4] edx +
add eax ebx +
mov [esi] eax +
add esp 14h +
add eax ecx +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] ecx +
call malloc  +
test eax eax +
jz loc_4695C9  +
mov edx [esi+8] +
mov [eax] edx +
mov edx [esi] +
mov [eax+4] edx +
mov [esi+8] eax +
add esp 14h +
add eax 8 +
pop ebx  +
pop esi  +
retn   +
mov ecx 0FFFFFFF8h +
mov ebx 8 +
jmp loc_4695F4  +
mov ecx 0FD8h +
sub ecx ebx +
neg ebx  +
jmp loc_4695E0  +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov eax [eax+8] +
test eax eax +
jz loc_4696D0  +
mov ebx eax +
xor ebp ebp +
jmp loc_4696AD  +
lea edx [ebx+8] +
cmp esi edx +
jz loc_4696D5  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4696D0  +
mov edi [ebx+4] +
test edi edi +
jnz loc_4696A0  +
cmp esi ebx +
jbe loc_4696C2  +
lea edx [ebx+0FE0h] +
cmp esi edx +
jb loc_469722  +
mov ebp ebx +
mov ebx [ebx] +
test ebx ebx +
jnz loc_4696AD  +
lea esi [esi+0] +
call abort  +
mov ebx [ebx] +
cmp eax ebx +
jnz loc_4696E2  +
jmp loc_4696F0  +
mov eax esi +
mov esi [eax] +
mov [esp+1Ch+var_1C] eax +
call free  +
cmp ebx esi +
jnz loc_4696E0  +
mov eax [esp+1Ch+arg_0] +
mov [eax+8] ebx +
mov edx [ebx+4] +
test edx edx +
jz loc_469709  +
nop   +
mov ebx [ebx] +
mov eax [ebx+4] +
test eax eax +
jnz loc_469700  +
mov eax [esp+1Ch+arg_0] +
add ebx 0FE0h +
sub ebx edi +
mov [eax] edi +
mov [eax+4] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
mov [esp+1Ch+var_10] edx +
jz loc_4696D0  +
cmp eax ebx +
jz loc_4697B0  +
mov [esp+1Ch+var_14] 0 +
mov edi ebp +
jmp loc_469758  +
cmp edi eax +
mov ecx 0 +
mov [esp+1Ch+var_1C] eax +
cmovz edi ecx +
call free  +
cmp ebp ebx +
jz loc_469775  +
mov eax ebp +
test edi edi +
mov ebp [eax] +
jnz loc_469740  +
cmp esi [eax+4] +
jb loc_4697A6  +
mov ecx [esp+1Ch+var_14] +
test ecx ecx +
jnz loc_469752  +
mov edi [esp+1Ch+var_14] +
mov [esp+1Ch+var_14] eax +
jmp loc_469752  +
mov eax [esp+1Ch+var_14] +
mov edi ebp +
test eax eax +
cmovnz edi eax +
mov [esp+1Ch+var_14] edi +
mov eax [esp+1Ch+arg_0] +
mov ecx [esp+1Ch+var_14] +
mov [eax] esi +
mov [eax+8] ecx +
mov eax [esp+1Ch+var_10] +
mov ecx [esp+1Ch+arg_0] +
sub eax esi +
mov [ecx+4] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] eax +
call free  +
jmp loc_469752  +
mov [esp+1Ch+var_14] eax +
jmp loc_469784  +
***
push esi  +
push ebx  +
sub esp 120h +
mov esi [ebp+arg_0] +
lea eax [ebp+var_110] +
lea ebx [ebp+var_10C] +
mov [esp+128h+var_11C] eax +
mov [esp+128h+var_120] ebx +
mov [esp+128h+var_124] 104h +
mov [esp+128h+var_128] esi +
call ds:GetFullPathNameA  +
lea edx [eax-1] +
sub esp 10h +
cmp edx 102h +
ja loc_469820  +
mov [esp+128h+var_128] ebx +
mov [esp+128h+var_124] eax +
call ds:CharLowerBuffA  +
sub esp 8 +
mov [esp+128h+var_128] ebx +
call _strdup  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov [ebp+arg_0] esi +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp _strdup  +
***
cmp cl 2Fh +
movzx ecx byte ptr [edx] +
cmovz eax edx +
add edx 1 +
test cl cl +
jnz loc_469840  +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax] +
movzx ecx dl +
test ds:byte_49F240[ecx+ecx] 88h +
jz loc_46987A  +
cmp byte ptr [eax+1] 3Ah +
jz loc_4698A0  +
test dl dl +
jz locret_469897  +
lea ecx [eax+1] +
cmp dl 5Ch +
jz loc_46988B  +
cmp dl 2Fh +
jnz loc_46988D  +
mov eax ecx +
movzx edx byte ptr [ecx] +
add ecx 1 +
test dl dl +
jnz loc_469881  +
retn   +
***
movzx edx byte ptr [eax+2] +
add eax 2 +
jmp loc_46987A  +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call strerror  +
test eax eax +
jz loc_4698E0  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aUndocumentedEr +
mov [esp+18h+var_18] offset unk_4A8880 +
call sprintf  +
add esp 18h +
mov eax offset unk_4A8880 +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ecx [esp+2Ch+arg_0] +
movzx eax byte ptr [ecx] +
lea esi [ecx+1] +
test al al +
jz loc_469D75  +
mov ebx [esp+2Ch+arg_8] +
mov edi [esp+2Ch+arg_8] +
mov ebp [esp+2Ch+arg_4] +
and ebx 1 +
mov [esp+2Ch+var_1C] ebx +
mov ebx [esp+2Ch+arg_8] +
and edi 10h +
mov [esp+2Ch+var_18] ebp +
and ebx 4 +
mov [esp+2Ch+var_14] ebx +
mov ebx [esp+2Ch+arg_8] +
and ebx 2 +
mov [esp+2Ch+var_20] ebx +
test edi edi +
jz loc_469964  +
movzx eax ds:byte_49F140[eax] +
cmp al 3Fh +
jz loc_469A35  +
jbe loc_4699D0  +
cmp al 5Bh +
jz loc_469AA2  +
cmp al 5Ch +
jnz loc_469A82  +
mov ebp [esp+2Ch+var_20] +
test ebp ebp +
jnz loc_469BE5  +
test edi edi +
movzx edx byte ptr [ecx+1] +
lea esi [ecx+2] +
jz loc_469BF2  +
movzx edx ds:byte_49F140[edx] +
mov eax [esp+2Ch+var_18] +
movzx eax byte ptr [eax] +
movzx eax ds:byte_49F140[eax] +
cmp eax edx +
jnz loc_469A28  +
movzx eax byte ptr [esi] +
lea edx [esi+1] +
add [esp+2Ch+var_18] 1 +
test al al +
jz loc_469D40  +
mov ecx esi +
mov esi edx +
jmp loc_469959  +
cmp al 2Ah +
jnz loc_469A82  +
test byte ptr [esp+2Ch+arg_8] 4 +
mov ebp [esp+2Ch+var_18] +
jnz loc_469BB5  +
movzx edx byte ptr [ecx+1] +
lea esi [ecx+2] +
cmp dl 3Fh +
jnz loc_469D7B  +
mov eax [esp+2Ch+arg_8] +
and eax 1 +
jmp loc_469A13  +
add esi 1 +
movzx edx byte ptr [esi-1] +
add ebp 1 +
cmp dl 2Ah +
jnz loc_469C34  +
test eax eax +
jz loc_469A1D  +
cmp byte ptr [ebp+0] 2Fh +
jz loc_469A28  +
cmp dl 3Fh +
jnz loc_469A00  +
cmp byte ptr [ebp+0] 0 +
jnz loc_469A00  +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
movzx eax byte ptr [eax] +
test al al +
jz loc_469A28  +
mov ebx [esp+2Ch+var_1C] +
test ebx ebx +
jz loc_469A4C  +
cmp al 2Fh +
jz loc_469A28  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
jz loc_4699B2  +
cmp al 2Eh +
jnz loc_4699B2  +
mov eax [esp+2Ch+var_18] +
cmp eax [esp+2Ch+arg_4] +
jz loc_469A28  +
mov edx [esp+2Ch+var_1C] +
test edx edx +
jz loc_4699B2  +
cmp byte ptr [eax-1] 2Fh +
jnz loc_4699B2  +
jmp loc_469A28  +
mov ebx [esp+2Ch+var_18] +
test edi edi +
movzx edx byte ptr [ebx] +
jz loc_4699AE  +
movzx edx ds:byte_49F140[edx] +
cmp eax edx +
jz loc_4699B2  +
jmp loc_469A28  +
mov eax [esp+2Ch+var_18] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_469A28  +
mov ebx [esp+2Ch+var_14] +
test ebx ebx +
jnz loc_469C06  +
movzx eax byte ptr [ecx+1] +
movzx ebp dl +
cmp al 5Eh +
setz bl  +
cmp al 21h +
setz al  +
add ecx 2 +
or ebx eax +
movzx eax bl +
test eax eax +
cmovnz esi ecx +
mov [esp+2Ch+var_10] eax +
lea ecx [esi+1] +
movzx eax byte ptr [esi] +
jmp loc_469B08  +
cmp dl ss:byte_49F140[ebp] +
movzx ecx ss:byte_49F140[ebp] +
ja loc_469AFE  +
cmp ecx ebx +
jle loc_469CF1  +
cmp al 5Dh +
jz loc_469CE0  +
mov ecx esi +
mov esi [esp+2Ch+var_20] +
movzx edx al +
test esi esi +
jnz loc_469B1B  +
cmp al 5Ch +
jz loc_469BA0  +
test edi edi +
jz loc_469B26  +
movzx edx ds:byte_49F140[edx] +
test al al +
jz loc_469A28  +
test edi edi +
movzx eax byte ptr [ecx] +
lea esi [ecx+1] +
jz loc_469B3F  +
movzx eax ds:byte_49F140[eax] +
mov ebx [esp+2Ch+var_1C] +
test ebx ebx +
jz loc_469B4F  +
cmp al 2Fh +
jz loc_469A28  +
cmp al 2Dh +
movzx ebx dl +
jz loc_469B62  +
test edi edi +
jnz loc_469AE7  +
cmp edx ebp +
jg loc_469AFE  +
mov ecx ebp +
jmp loc_469AF6  +
movzx ebx byte ptr [ecx+1] +
cmp bl 5Dh +
jz loc_469BB0  +
mov esi [esp+2Ch+var_20] +
lea eax [ecx+2] +
test esi esi +
jnz loc_469B7F  +
cmp bl 5Ch +
jz loc_469CD4  +
test bl bl +
jz loc_469A28  +
test edi edi +
jz loc_469B92  +
movzx ebx ds:byte_49F140[ebx] +
lea esi [eax+1] +
movzx eax byte ptr [eax] +
jmp loc_469B56  +
movzx edx byte ptr [ecx] +
add ecx 1 +
jmp loc_469B1B  +
movzx ebx dl +
jmp loc_469B56  +
cmp byte ptr [ebp+0] 2Eh +
jnz loc_4699E7  +
cmp [esp+2Ch+arg_4] ebp +
jz loc_469A28  +
test byte ptr [esp+2Ch+arg_8] 1 +
jz loc_4699E7  +
cmp byte ptr [ebp-1] 2Fh +
jnz loc_4699E7  +
nop   +
jmp loc_469A28  +
test edi edi +
mov edx 5Ch +
jnz loc_4699A0  +
mov eax [esp+2Ch+var_18] +
movzx eax byte ptr [eax] +
cmp eax edx +
jz loc_4699B2  +
jmp loc_469A28  +
cmp dl 2Eh +
jnz loc_469ABD  +
cmp eax [esp+2Ch+arg_4] +
jz loc_469A28  +
mov ebp [esp+2Ch+var_1C] +
test ebp ebp +
jz loc_469ABD  +
cmp byte ptr [eax-1] 2Fh +
jnz loc_469ABD  +
jmp loc_469A28  +
cmp dl 3Fh +
jz loc_469A13  +
xor eax eax +
test dl dl +
jz loc_469A2D  +
test byte ptr [esp+2Ch+arg_8] 2 +
movzx ebx dl +
jnz loc_469C5A  +
cmp dl 5Ch +
jz loc_469D6B  +
test edi edi +
jz loc_469C65  +
movzx ebx ds:byte_49F140[ebx] +
movzx eax byte ptr [ebp+0] +
sub esi 1 +
test al al +
jz loc_469A28  +
mov ecx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_1C] esi +
mov esi ebx +
mov ebx edx +
and ecx 0FFFFFFFBh +
mov [esp+2Ch+var_20] ecx +
jmp loc_469C9F  +
add ebp 1 +
movzx eax byte ptr [ebp+0] +
test al al +
jz loc_469A28  +
cmp bl 5Bh +
jz loc_469CB3  +
test edi edi +
jz loc_469CAF  +
movzx eax ds:byte_49F140[eax] +
cmp eax esi +
jnz loc_469C90  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_2C] eax +
call sub_469910  +
test eax eax +
jnz loc_469C90  +
jmp loc_469A2D  +
lea eax [ecx+3] +
movzx ebx byte ptr [ecx+2] +
jmp loc_469B7F  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jnz loc_4699B2  +
jmp loc_469A28  +
cmp al 5Dh +
jz loc_469D29  +
test al al +
jz loc_469A28  +
mov ecx [esp+2Ch+var_20] +
mov edx esi +
add esi 1 +
test ecx ecx +
movzx eax byte ptr [edx] +
jnz loc_469D11  +
cmp al 5Ch +
jz loc_469D22  +
cmp al 5Dh +
jz loc_469D29  +
test al al +
jz loc_469A28  +
mov edx esi +
nop   +
jmp loc_469D03  +
lea esi [edx+2] +
mov edx esi +
jmp loc_469D03  +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_4699B2  +
jmp loc_469A28  +
mov ebp [esp+2Ch+var_18] +
movzx edx byte ptr [ebp+0] +
xor eax eax +
test dl dl +
jz loc_469A2D  +
test byte ptr [esp+2Ch+arg_8] 8 +
jz loc_469A28  +
cmp dl 2Fh +
jnz loc_469A28  +
jmp loc_469A2D  +
movzx ebx byte ptr [esi] +
nop   +
jmp loc_469C5A  +
mov ebp [esp+2Ch+arg_4] +
jmp loc_469D44  +
cmp dl 2Ah +
jz loc_4699F7  +
jmp loc_469C3D  +
***
mov ebx [esp+48h+arg_0] +
lea eax [esp+48h+var_38] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call ds:_stati64  +
mov ecx 1 +
test eax eax +
jnz loc_469DC3  +
movzx edx [esp+48h+var_32] +
and dx 0F000h +
cmp dx 8000h +
jz loc_469DD0  +
add esp 48h +
mov eax ecx +
pop ebx  +
retn   +
mov [esp+48h+var_48] ebx +
call _unlink  +
add esp 48h +
pop ebx  +
mov ecx eax +
mov eax ecx +
retn   +
***
push esi  +
xor esi esi +
push ebx  +
sub esp 14h +
mov edx [esp+20h] +
lea ebx [esp+24h] +
test edx edx +
jz loc_469E17  +
mov [esp] edx +
add ebx 4 +
call strlen  +
mov edx [ebx-4] +
add esi eax +
test edx edx +
jnz loc_469E03  +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea edi [esp+38h] +
mov esi [esp+30h] +
test ebx ebx +
jz loc_469E5D  +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_469E37  +
mov byte ptr [esi] 0 +
mov eax [esp+30h] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi ds:dword_4A8D54 +
mov ebx [esp+30h] +
lea edi [esp+34h] +
test ebx ebx +
jz loc_469EB6  +
lea esi [esi+0] +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_469E90  +
mov byte ptr [esi] 0 +
mov eax ds:dword_4A8D54 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
lea esi [esp+1Ch+arg_4] +
test ebx ebx +
jz loc_469F45  +
mov eax ebx +
xor edi edi +
mov [esp+1Ch+var_1C] eax +
add esi 4 +
call strlen  +
add edi eax +
mov eax [esi-4] +
test eax eax +
jnz loc_469EE7  +
add edi 1 +
mov [esp+1Ch+var_1C] edi +
lea edi [esp+1Ch+arg_4] +
call sub_462140  +
mov [esp+1Ch+var_10] eax +
mov esi eax +
mov [esp+1Ch+var_1C] ebx +
add edi 4 +
call strlen  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_469F10  +
mov byte ptr [esi] 0 +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] 1 +
call sub_462140  +
mov esi eax +
mov [esp+1Ch+var_10] eax +
jmp loc_469F36  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea esi [esp+38h] +
test ebx ebx +
jz loc_469FE9  +
mov eax ebx +
xor ebp ebp +
mov [esp] eax +
add esi 4 +
call strlen  +
add ebp eax +
mov eax [esi-4] +
test eax eax +
jnz loc_469F77  +
add ebp 1 +
mov [esp] ebp +
lea edi [esp+38h] +
call sub_462140  +
mov [esp+0Ch] eax +
mov esi eax +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_469FA0  +
mov eax [esp+30h] +
mov byte ptr [esi] 0 +
test eax eax +
jz loc_469FDD  +
mov eax [esp+30h] +
mov [esp] eax +
call free  +
mov eax [esp+0Ch] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_462140  +
mov esi eax +
mov [esp+0Ch] eax +
jmp loc_469FC6  +
***
push ebx  +
sub esp 14h +
test eax eax +
jz loc_46A02E  +
mov edx [eax] +
lea ebx [eax+4] +
test edx edx +
jz loc_46A026  +
mov [esp+18h+var_18] edx +
add ebx 4 +
call free  +
mov edx [ebx-4] +
test edx edx +
jnz loc_46A014  +
mov [esp+18h+var_18] esi +
call free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 10h +
lea eax [edx+1] +
mov [esp+18h+var_18] eax +
call malloc  +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov ebx eax +
mov [esp+18h+var_18] eax +
call memcpy  +
mov eax ebx +
mov byte ptr [ebx+esi] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
movzx ebx byte ptr [eax+1] +
mov [esp+28h+var_1C] edx +
xor edx edx +
cmp bl 3Ah +
jnz loc_46A0B6  +
jmp loc_46A1CF  +
cmp eax 5Ch +
jz loc_46A141  +
cmp eax 2Fh +
lea esi [esi+0] +
jz loc_46A141  +
movsx eax byte ptr [ecx] +
add ecx 1 +
test eax eax +
jnz loc_46A0A0  +
lea eax ds:8[edx*4] +
mov [esp+28h+var_28] eax +
call malloc  +
test eax eax +
mov edi eax +
jz loc_46A218  +
xor ebp ebp +
cmp bl 3Ah +
jz loc_46A1A0  +
mov edx esi +
jmp loc_46A0F4  +
cmp eax 5Ch +
jz loc_46A163  +
cmp eax 2Fh +
jz loc_46A163  +
mov edx ebx +
lea ebx [edx+1] +
movsx eax byte ptr [ebx-1] +
test eax eax +
jnz loc_46A0E8  +
sub edx esi +
mov eax ebp +
test edx edx +
jle loc_46A116  +
lea ebx [edi+eax*4] +
mov eax esi +
call sub_46A040  +
add ebp 1 +
mov [ebx] eax +
mov eax [edi+ebp*4-4] +
mov dword ptr [edi+ebp*4] 0 +
test eax eax +
jz loc_46A21F  +
mov eax [esp+28h+var_1C] +
test eax eax +
jz loc_46A1EC  +
mov [eax] ebp +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movsx eax byte ptr [ecx] +
add edx 1 +
cmp al 5Ch +
jnz loc_46A15A  +
nop   +
lea esi [esi+0] +
add ecx 1 +
movsx eax byte ptr [ecx] +
cmp al 5Ch +
jz loc_46A150  +
cmp al 2Fh +
jz loc_46A150  +
jmp loc_46A0B9  +
movzx eax byte ptr [ebx] +
cmp al 2Fh +
jnz loc_46A1F6  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 5Ch +
jz loc_46A170  +
cmp al 2Fh +
jz loc_46A170  +
mov edx ebx +
mov eax esi +
sub edx esi +
add ebp 1 +
call sub_46A040  +
test eax eax +
mov [edi+ebp*4-4] eax +
jz loc_46A203  +
mov esi ebx +
jmp loc_46A0E4  +
movzx eax byte ptr [esi+2] +
cmp al 5Ch +
jz loc_46A1B0  +
cmp al 2Fh +
jnz loc_46A0E4  +
mov edx 3 +
mov eax esi +
call sub_46A040  +
test eax eax +
mov [edi] eax +
jz loc_46A22D  +
add esi 3 +
mov ebp 1 +
jmp loc_46A0E4  +
movzx eax byte ptr [eax+2] +
cmp al 5Ch +
jz loc_46A1DF  +
cmp al 2Fh +
jnz loc_46A0B6  +
lea ecx [esi+3] +
mov edx 1 +
jmp loc_46A0B6  +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 5Ch +
jz loc_46A170  +
jmp loc_46A17E  +
mov eax edi +
mov dword ptr [edi+ebp*4] 0 +
call sub_46A000  +
xor eax eax +
jmp loc_46A139  +
xor eax eax +
jmp loc_46A139  +
mov eax edi +
call sub_46A000  +
xor eax eax +
jmp loc_46A139  +
mov [esp+28h+var_28] edi +
call free  +
xor eax eax +
jmp loc_46A139  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 7Ch +
test eax eax +
mov [ebp+var_5C] edx +
mov [ebp+var_60] ecx +
jz loc_46A520  +
test edx edx +
jz loc_46A520  +
mov ebx [ebp+var_60] +
test ebx ebx +
jz loc_46A520  +
mov [esp+88h+var_88] eax +
call sub_4698B0  +
cmp eax esi +
mov [ebp+var_64] eax +
jz loc_46A530  +
mov ecx [ebp+arg_0] +
mov [esp+88h+var_88] esi +
test ecx ecx +
jnz loc_46A3A0  +
call _strdup  +
mov ebx eax +
test ebx ebx +
jz loc_46A520  +
lea edx [ebp+var_50] +
mov eax ebx +
call sub_46A080  +
mov [esp+88h+var_88] ebx +
mov esi eax +
mov [ebp+var_64] eax +
call free  +
test esi esi +
jz loc_46A520  +
mov eax [ebp+var_5C] +
lea edx [ebp+var_4C] +
call sub_46A080  +
test eax eax +
mov ebx eax +
jz loc_46A510  +
mov eax [ebp+var_50] +
lea esi [eax-1] +
cmp esi [ebp+var_4C] +
mov [ebp+var_50] esi +
jnz loc_46A31D  +
test esi esi +
jle loc_46A510  +
mov [ebp+var_5C] esi +
xor edi edi +
mov esi [ebp+var_64] +
jmp loc_46A2FC  +
add edi 1 +
cmp [ebp+var_5C] edi +
jz loc_46A510  +
mov eax [ebx+edi*4] +
mov [esp+88h+var_84] eax +
mov eax [esi+edi*4] +
mov [esp+88h+var_88] eax +
call strcmp  +
test eax eax +
jz loc_46A2F0  +
mov esi [ebp+var_5C] +
cmp esi edi +
jz loc_46A510  +
mov eax [ebp+var_60] +
lea edx [ebp+var_48] +
call sub_46A080  +
test eax eax +
mov edx eax +
mov [ebp+var_60] eax +
jz loc_46A510  +
mov eax [ebp+var_4C] +
mov ecx [ebp+var_48] +
mov [ebp+var_68] eax +
cmp ecx eax +
cmovle eax ecx +
test eax eax +
mov [ebp+var_6C] ecx +
jle loc_46A6A8  +
xor edi edi +
mov esi edx +
mov [ebp+var_5C] eax +
jmp loc_46A35F  +
add edi 1 +
cmp edi [ebp+var_5C] +
jz loc_46A3B0  +
mov eax [esi+edi*4] +
mov [esp+88h+var_84] eax +
mov eax [ebx+edi*4] +
mov [esp+88h+var_88] eax +
call strcmp  +
test eax eax +
jz loc_46A357  +
xor esi esi +
test edi edi +
jnz loc_46A3B0  +
mov eax [ebp+var_64] +
call sub_46A000  +
mov eax ebx +
call sub_46A000  +
mov eax [ebp+var_60] +
call sub_46A000  +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_4697C0  +
mov ebx eax +
jmp loc_46A294  +
mov eax [ebp+var_50] +
test eax eax +
jle loc_46A67D  +
mov edx [ebp+var_64] +
mov [ebp+var_5C] ebx +
mov [ebp+var_70] edi +
mov esi edx +
lea eax [edx+eax*4] +
xor edx edx +
mov edi esi +
mov ebx edx +
mov esi eax +
mov eax [edi] +
add edi 4 +
mov [esp+88h+var_88] eax +
call strlen  +
add ebx eax +
cmp edi esi +
jnz loc_46A3D1  +
mov esi ebx +
mov edi [ebp+var_70] +
mov ebx [ebp+var_5C] +
mov eax [ebp+var_68] +
mov edx [ebp+var_6C] +
sub eax edi +
lea eax [eax+eax*2] +
add eax esi +
cmp edx edi +
jle loc_46A42D  +
mov ecx [ebp+var_60] +
mov [ebp+var_5C] ebx +
mov ebx eax +
mov [ebp+var_68] edi +
lea esi [ecx+edi*4] +
lea edx [ecx+edx*4] +
mov edi esi +
mov esi edx +
mov eax [edi] +
add edi 4 +
mov [esp+88h+var_88] eax +
call strlen  +
add ebx eax +
cmp edi esi +
jnz loc_46A412  +
mov eax ebx +
mov edi [ebp+var_68] +
mov ebx [ebp+var_5C] +
mov esi eax +
add esi 1 +
mov [esp+88h+var_88] esi +
call malloc  +
test eax eax +
mov esi eax +
jz loc_46A37B  +
mov byte ptr [eax] 0 +
mov eax [ebp+var_50] +
xor ecx ecx +
test eax eax +
mov [ebp+var_5C] eax +
jle loc_46A47D  +
mov [ebp+var_68] ebx +
mov ebx [ebp+var_64] +
mov [ebp+var_6C] edi +
mov edi ecx +
nop   +
mov eax [ebx+edi*4] +
add edi 1 +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
call strcat  +
cmp edi [ebp+var_5C] +
jnz loc_46A460  +
mov ebx [ebp+var_68] +
mov edi [ebp+var_6C] +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_46A47F  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovnz ecx edx +
add al al +
mov eax [ebp+var_4C] +
sbb ecx 3 +
cmp edi eax +
jge loc_46A6B7  +
sub eax edi +
lea eax [eax+eax*2] +
add eax ecx +
nop   +
mov edx 2E2Eh +
add ecx 3 +
mov [ecx-3] dx +
mov byte ptr [ecx-1] 0 +
cmp ecx eax +
mov byte ptr [ecx-1] 2Fh +
jnz loc_46A4C0  +
mov byte ptr [eax] 0 +
mov eax [ebp+var_48] +
cmp edi eax +
mov [ebp+var_5C] eax +
jge loc_46A37B  +
mov [ebp+var_68] ebx +
mov ebx [ebp+var_60] +
nop   +
mov eax [ebx+edi*4] +
add edi 1 +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
call strcat  +
cmp edi [ebp+var_5C] +
jnz loc_46A4F0  +
mov ebx [ebp+var_68] +
jmp loc_46A37B  +
xor esi esi +
mov [ebp+var_60] 0 +
jmp loc_46A37B  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+88h+var_88] offset aPath +
call getenv  +
test eax eax +
jz loc_46A27F  +
mov [esp+88h+var_88] eax +
mov [ebp+var_68] eax +
call strlen  +
lea ebx [eax+1] +
mov eax 2 +
cmp ebx 1 +
cmovbe ebx eax +
mov eax [ebp+var_64] +
mov [esp+88h+var_88] eax +
call strlen  +
lea eax [ebx+eax+23h] +
and eax 0FFFFFFF0h +
call sub_47A1D0  +
mov edx [ebp+var_68] +
sub esp eax +
lea edi [esp+88h+var_70+3] +
mov ebx edx +
and edi 0FFFFFFF0h +
mov [ebp+var_68] edi +
movzx eax byte ptr [ebx] +
test al al +
jz loc_46A5A0  +
cmp al 3Bh +
jz loc_46A5A0  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_46A58C  +
lea esi [esi+0] +
cmp ebx edx +
jz loc_46A690  +
mov esi ebx +
sub esi edx +
mov [esp+88h+var_80] esi +
mov [esp+88h+var_84] edx +
mov [esp+88h+var_88] edi +
call memcpy  +
movzx eax byte ptr [ebx-1] +
cmp al 5Ch +
jz loc_46A684  +
cmp al 2Fh +
jz loc_46A684  +
mov byte ptr [edi+esi] 2Fh +
mov byte ptr [edi+esi+1] 0 +
mov eax [ebp+var_64] +
mov [esp+88h+var_88] edi +
mov [esp+88h+var_84] eax +
call strcat  +
mov [esp+88h+var_84] 0 +
mov [esp+88h+var_88] edi +
call ds:_access  +
test eax eax +
jz loc_46A64C  +
mov edx edi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_46A5FF  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov dword ptr [edx] 6578652Eh +
mov byte ptr [edx+4] 0 +
mov [esp+88h+var_84] 0 +
mov [esp+88h+var_88] edi +
call ds:_access  +
test eax eax +
jnz loc_46A66E  +
lea eax [ebp+var_48] +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_88] edi +
call ds:_stati64  +
test eax eax +
js loc_46A66E  +
movzx eax [ebp+var_42] +
and ax 0F000h +
cmp ax 8000h +
jz loc_46A6AF  +
cmp byte ptr [ebx] 0 +
jz loc_46A6A0  +
add ebx 1 +
mov edx ebx +
jmp loc_46A585  +
xor esi esi +
jmp loc_46A3EC  +
mov byte ptr [edi+esi] 0 +
jmp loc_46A5D9  +
mov byte ptr [edi] 2Eh +
mov byte ptr [edi+1] 2Fh +
mov byte ptr [edi+2] 0 +
jmp loc_46A5D9  +
mov esi [ebp+var_64] +
jmp loc_46A27F  +
xor esi esi +
jmp loc_46A37B  +
mov esi [ebp+var_68] +
jmp loc_46A27F  +
mov eax ecx +
jmp loc_46A4D8  +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov [esp+arg_0] 1 +
jmp sub_46A240  +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov dword ptr [esp+4] 0 +
jmp sub_46A240  +
***
mov eax ds:dword_4A88C0 +
test eax eax +
jz loc_46A720  +
retn   +
sub esp 1Ch +
mov [esp+1Ch+var_1C] 105h +
call sub_462140  +
mov [esp+1Ch+var_18] 105h +
mov [esp+1Ch+var_1C] eax +
call _getcwd  +
mov ds:dword_4A88C0 eax +
add esp 1Ch +
retn   +
***
mov eax [esp+arg_4] +
cmp [esp+arg_0] eax +
setz al  +
movzx eax al +
retn   +
***
mov ecx [esp+arg_0] +
mov ebx 42135234h +
movzx eax cx +
sar ecx 10h +
sub ecx eax +
add eax 5C242785h +
sub ecx 42135234h +
xor ecx 2109Ah +
mov edx ecx +
sub eax ecx +
shl edx 8 +
sub ebx ecx +
xor eax edx +
mov edx eax +
sub ebx eax +
shr edx 0Dh +
sub ecx eax +
xor edx ebx +
mov ebx edx +
sub ecx edx +
shr ebx 0Ch +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 10h +
xor ecx eax +
mov eax edx +
sub eax ebx +
mov edx ecx +
sub eax ecx +
sub ebx ecx +
shr edx 5 +
xor edx eax +
mov esi edx +
sub ebx edx +
shr esi 3 +
sub ecx edx +
xor esi ebx +
mov eax esi +
sub ecx esi +
shl eax 0Ah +
sub edx esi +
xor eax ecx +
sub edx eax +
shr eax 0Fh +
xor eax edx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [eax+0Ch] +
mov edx [eax+14h] +
sub edx [eax+18h] +
mov [esp+3Ch+var_24] eax +
mov esi [eax+38h] +
mov edi ebx +
mov [esp+3Ch+var_10] ebx +
mov ebx [eax+10h] +
lea eax [edx+edx] +
lea edi [edi+ebx*4] +
cmp ebx eax +
mov [esp+3Ch+var_2C] edi +
jb loc_46AA0C  +
shl edx 3 +
cmp ebx edx +
ja loc_46AA03  +
mov edi [esp+3Ch+var_24] +
mov eax [edi+30h] +
test eax eax +
jz loc_46AA2B  +
mov edx [edi+2Ch] +
mov [esp+3Ch+var_34] 4 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edx +
call eax  +
test eax eax +
jz loc_46AA47  +
mov edi [esp+18h] +
mov [edi+0Ch] eax +
mov eax [edi+18h] +
mov [edi+10h] ebx +
mov ebx [esp+2Ch] +
mov [edi+38h] esi +
sub [edi+14h] eax +
mov dword ptr [edi+18h] 0 +
jmp loc_46A905  +
add ebx 4 +
cmp [esp+10h] ebx +
jbe loc_46A9E2  +
mov eax [ebx] +
cmp eax 1 +
mov [esp+0Ch] eax +
jbe loc_46A8F8  +
mov edi [esp+18h] +
mov ecx [esp+0Ch] +
mov eax [edi] +
mov [esp+0] ecx +
call eax  +
mov esi eax +
mov [esp+1Ch] eax +
mov eax [edi+38h] +
shl eax 4 +
lea ecx dword_4A0920[eax] +
mov edx ds:dword_4A092C[eax] +
mov eax ds:dword_4A0920[eax] +
mov [esp+20h] ecx +
mov ebp edx +
mov [esp+14h] eax +
mov eax esi +
mov [esp+24h] edx +
mul  dword ptr [ecx+4] +
mov eax esi +
mov ecx ebp +
mov ebp [edi+0Ch] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax [esp+14h] +
sub esi eax +
mov eax [edi+10h] +
lea ecx [ebp+esi*4+0] +
mov [esp+28h] eax +
mov eax [ecx] +
test eax eax +
jz loc_46A9CF  +
cmp eax 1 +
jz loc_46AA81  +
mov ecx [esp+1Ch] +
mov edi [esp+20h] +
mov eax ecx +
mul  dword ptr [edi+8] +
mov eax ecx +
add eax 1 +
mov edi [esp+28h] +
sub ecx edx +
shr ecx 1 +
add edx ecx +
movzx ecx byte ptr [esp+24h] +
shr edx cl +
mov ecx [esp+14h] +
sub ecx 2 +
imul edx ecx +
sub eax edx +
jmp loc_46A9BA  +
cmp edx 1 +
jz loc_46AA81  +
add esi eax +
mov edx esi +
sub edx edi +
cmp edi esi +
cmovbe esi edx +
lea ecx [ebp+esi*4+0] +
mov edx [ecx] +
test edx edx +
jnz loc_46A9B1  +
mov eax [esp+0Ch] +
add ebx 4 +
cmp [esp+10h] ebx +
mov [ecx] eax +
ja loc_46A905  +
mov eax [esp+18h] +
mov eax [eax+28h] +
test eax eax +
jz loc_46AA51  +
mov ebx [esp+2Ch] +
mov [esp+0] ebx +
call eax  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 20h +
jbe loc_46A8AD  +
call sub_46A7E0  +
mov edi [esp+3Ch+var_24] +
mov esi eax +
shl eax 4 +
mov ebx ds:dword_4A0920[eax] +
mov eax [edi+30h] +
test eax eax +
jnz loc_46A8BC  +
mov eax [esp+3Ch+var_24] +
mov eax [eax+24h] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] ebx +
call eax  +
test eax eax +
jnz loc_46A8D8  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+18h] +
mov eax 1 +
mov edx [ebx+34h] +
test edx edx +
jz loc_46A9FB  +
mov ecx [ebx+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+2Ch] +
mov [esp+0] ecx +
mov [esp+4] eax +
call edx  +
mov eax [esp+0Ch] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call abort  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+4] +
mov eax [eax+10h] +
retn   +
***
mov edx [esp+4] +
mov eax [edx+14h] +
sub eax [edx+18h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov ebx [esp+40h] +
call sub_46A7E0  +
mov dword ptr [esp+8] 3Ch +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
mov edi eax +
shl eax 4 +
mov ebp ds:dword_4A0920[eax] +
call dword ptr [esp+44h]  +
test eax eax +
mov esi eax +
jz loc_46AB53  +
mov dword ptr [esp+8] 4 +
mov [esp+4] ebp +
mov [esp] ebx +
call dword ptr [esp+44h]  +
test eax eax +
mov [esi+0Ch] eax +
jz loc_46AB40  +
mov eax [esp+34h] +
mov [esi+10h] ebp +
mov [esi+38h] edi +
mov [esi+2Ch] ebx +
mov [esi] eax +
mov eax [esp+38h] +
mov [esi+4] eax +
mov eax [esp+3Ch] +
mov [esi+8] eax +
mov eax [esp+44h] +
mov [esi+30h] eax +
mov eax [esp+48h] +
mov [esi+34h] eax +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+48h] +
test eax eax +
jz loc_46AB53  +
mov [esp+4] esi +
mov [esp] ebx +
call dword ptr [esp+48h]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_14] +
call sub_46A7E0  +
mov [esp+1Ch+var_18] 3Ch +
mov [esp+1Ch+var_1C] 1 +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_4A0920[eax] +
call [esp+1Ch+arg_10]  +
test eax eax +
mov ebp eax +
jz loc_46ABEF  +
mov [esp+1Ch+var_18] 4 +
mov [esp+1Ch+var_1C] edi +
call esi  +
test eax eax +
mov [ebp+0Ch] eax +
jz loc_46ABE0  +
mov eax [esp+1Ch+arg_4] +
mov [ebp+10h] edi +
mov [ebp+38h] ebx +
mov [ebp+24h] esi +
mov [ebp+0] eax +
mov eax [esp+1Ch+arg_8] +
mov [ebp+4] eax +
mov eax [esp+1Ch+arg_C] +
mov [ebp+8] eax +
mov eax [esp+1Ch+arg_18] +
mov [ebp+28h] eax +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_18] +
test eax eax +
jz loc_46ABEF  +
mov [esp+1Ch+var_1C] ebp +
call [esp+1Ch+arg_18]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov edx [esp+2Ch+arg_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] edx +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_46AB60  +
add esp 2Ch +
retn   +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov [eax] edx +
mov edx [esp+0Ch] +
mov [eax+4] edx +
mov edx [esp+10h] +
mov [eax+8] edx +
mov edx [esp+14h] +
mov [eax+2Ch] edx +
mov edx [esp+18h] +
mov [eax+30h] edx +
mov edx [esp+1Ch] +
mov [eax+34h] edx +
retn   +
***
sub esp 2Ch +
mov eax [esp+3Ch] +
mov dword ptr [esp+18h] offset free +
mov dword ptr [esp+14h] offset loc_462170 +
mov dword ptr [esp+10h] offset loc_462170 +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_46AB60  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] offset free +
mov [esp+2Ch+var_18] offset calloc +
mov [esp+2Ch+var_1C] offset calloc +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_46AB60  +
add esp 2Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov eax [edi+8] +
mov ebx [edi+10h] +
mov esi [edi+0Ch] +
test eax eax +
jz loc_46AD41  +
sub ebx 1 +
js loc_46AD41  +
mov eax [esi+ebx*4] +
cmp eax 1 +
jbe loc_46AD27  +
mov edx [edi+8] +
mov [esp+10h+var_10] eax +
call edx  +
sub ebx 1 +
jns loc_46AD2C  +
mov eax [edi+28h] +
test eax eax +
jz loc_46AD60  +
mov [esp+10h+var_10] esi +
call eax  +
mov eax [edi+28h] +
mov [esp+10h+arg_0] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
mov eax [edi+34h] +
test eax eax +
jz loc_46AD82  +
mov edx [edi+2Ch] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call eax  +
mov edx [edi+2Ch] +
mov eax [edi+34h] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] edx +
call eax  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov eax [esi+8] +
mov edi [esi+10h] +
mov ebp [esi+0Ch] +
test eax eax +
mov ebx edi +
jz loc_46ADCB  +
lea esi [esi+0] +
sub ebx 1 +
js loc_46ADCB  +
mov eax [ebp+ebx*4+0] +
cmp eax 1 +
jbe loc_46ADB0  +
mov edx [esi+8] +
mov [esp] eax +
call edx  +
sub ebx 1 +
jns loc_46ADB5  +
cmp edi 40000h +
jbe loc_46AE20  +
mov eax 100h +
call sub_46A7E0  +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_4A0920[eax] +
mov eax [esi+28h] +
test eax eax +
jz loc_46AE50  +
mov edx [esi+0Ch] +
mov [esp] edx +
call eax  +
mov eax [esi+30h] +
test eax eax +
jz loc_46AE68  +
mov edx [esi+2Ch] +
mov dword ptr [esp+8] 4 +
mov [esp+4] edi +
mov [esp] edx +
call eax  +
mov [esi+0Ch] eax +
mov [esi+10h] edi +
mov [esi+38h] ebx +
jmp loc_46AE37  +
shl edi 2 +
mov [esp+8] edi +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call memset  +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+14h] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+34h] +
test eax eax +
jz loc_46ADF7  +
mov ecx [esi+0Ch] +
mov edx [esi+2Ch] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
jmp loc_46ADF7  +
***
mov eax [esi+24h] +
mov dword ptr [esp+4] 4 +
mov [esp] edi +
call eax  +
mov [esi+0Ch] eax +
jmp loc_46AE15  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_8] +
mov eax [ebx+10h] +
add dword ptr [ebx+1Ch] 1 +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+38h] +
shl eax 4 +
lea ebp dword_4A0920[eax] +
mov eax ds:dword_4A0920[eax] +
mov ecx [ebp+0Ch] +
mov edi eax +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+4] +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax edi +
mov edi [ebx+0Ch] +
sub esi eax +
mov edx [edi+esi*4] +
test edx edx +
jz loc_46AFA0  +
cmp edx 1 +
jz loc_46AFB0  +
mov ecx [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_18] edx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] ecx +
call eax  +
mov edx [esp+2Ch+var_18] +
mov ecx eax +
mov eax edx +
test ecx ecx +
jnz loc_46AF94  +
mov eax [ebx+38h] +
mov edi [ebx+0Ch] +
shl eax 4 +
lea ebp dword_4A0920[eax] +
mov eax ds:dword_4A0920[eax] +
mov ecx [ebp+0Ch] +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [esp+2Ch+var_10] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub [esp+2Ch+var_18] eax +
mov eax [ebx+20h] +
add esi [esp+2Ch+var_18] +
add eax 1 +
mov ecx [esp+2Ch+var_14] +
mov [ebx+20h] eax +
mov edx esi +
sub edx ecx +
cmp ecx esi +
cmovbe esi edx +
mov ebp [edi+esi*4] +
test ebp ebp +
jz loc_46AFA0  +
cmp ebp 1 +
jz loc_46AF53  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_46AF92  +
mov eax [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_46AF53  +
mov eax ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] eax +
jmp loc_46AF24  +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov eax [esi] +
mov [esp+14h+var_14] ebx +
call eax  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_C] eax +
call sub_46AE80  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
cmp [esp+2Ch+arg_C] 1 +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jz loc_46B171  +
mov eax [ebx+38h] +
shl eax 4 +
lea edi dword_4A0920[eax] +
mov ecx ds:dword_4A092C[eax] +
mov eax ds:dword_4A0920[eax] +
mov [esp+2Ch+var_18] edi +
mov esi eax +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [edi+4] +
mov eax [esp+2Ch+arg_8] +
mov edi [ebx+0Ch] +
add dword ptr [ebx+1Ch] 1 +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax esi +
mov esi [esp+2Ch+arg_8] +
sub esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov [esp+2Ch+var_14] eax +
mov eax [eax] +
test eax eax +
jz loc_46B19D  +
cmp eax 1 +
jz loc_46B0B2  +
mov edi [esp+2Ch+arg_4] +
mov edx [ebx+4] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call edx  +
test eax eax +
jnz loc_46B164  +
mov edx [ebx+38h] +
mov edi [ebx+0Ch] +
mov [esp+2Ch+var_14] 0 +
shl edx 4 +
lea eax dword_4A0920[edx] +
mov ecx ds:dword_4A092C[edx] +
mov [esp+2Ch+var_18] eax +
mov eax ds:dword_4A0920[edx] +
mov [esp+2Ch+var_10] eax +
mov ebp [esp+2Ch+var_18] +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
mov ebp [esp+2Ch+var_10] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub ebp 2 +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [ebx+20h] +
shr eax cl +
imul eax ebp +
sub [esp+2Ch+var_18] eax +
add esi [esp+2Ch+var_18] +
add edx 1 +
mov ecx [esp+2Ch+var_1C] +
mov [ebx+20h] edx +
mov eax esi +
sub eax ecx +
cmp ecx esi +
cmovbe esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov ecx [eax] +
test ecx ecx +
jz loc_46B140  +
cmp ecx 1 +
jz loc_46B130  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ecx +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_46B164  +
mov edx [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_46B0E5  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+2Ch+var_14] eax +
jmp loc_46B0E5  +
mov edx [esp+2Ch+arg_C] +
test edx edx +
jz loc_46B199  +
mov edi [esp+2Ch+var_14] +
test edi edi +
jz loc_46B1A8  +
sub dword ptr [ebx+18h] 1 +
mov eax edi +
mov dword ptr [edi] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+0Ch] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
add eax ebp +
pop ebp  +
retn   +
lea edx [eax+eax*2] +
mov eax [ebx+14h] +
shl eax 2 +
cmp edx eax +
ja loc_46B00D  +
mov eax ebx +
call sub_46A870  +
test eax eax +
jz loc_46B199  +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jmp loc_46B00D  +
xor eax eax +
jmp loc_46B15C  +
cmp [esp+2Ch+arg_C] 0 +
jz loc_46B199  +
mov eax [esp+2Ch+var_14] +
add dword ptr [ebx+14h] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov eax [esi] +
mov [esp+14h+var_14] ebx +
call eax  +
mov edx [esp+14h+arg_8] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_8] edx +
mov [esp+14h+var_C] eax +
call sub_46AFF0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_8] +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_8] 0 +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
call sub_46AFF0  +
mov esi eax +
mov eax [eax] +
test eax eax +
jz loc_46B247  +
mov edx [ebx+8] +
test edx edx +
jz loc_46B23D  +
mov [esp+14h+var_14] eax +
call edx  +
mov dword ptr [esi] 1 +
add dword ptr [ebx+18h] 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov eax [esi] +
mov [esp] ebx +
call eax  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
call sub_46B200  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
mov ebx [eax+0Ch] +
mov eax [eax+10h] +
lea esi [ebx+eax*4] +
jmp loc_46B2F7  +
add ebx 4 +
cmp esi ebx +
jbe loc_46B309  +
cmp dword ptr [ebx] 1 +
jbe loc_46B2F0  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebx +
call ebp  +
test eax eax +
jnz loc_46B2F0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_46B320  +
push edi  +
push esi  +
push ebx  +
mov ebx [esp+10h] +
mov esi [esp+14h] +
mov edi [esp+18h] +
mov eax [ebx+14h] +
sub eax [ebx+18h] +
mov edx [ebx+10h] +
shl eax 3 +
cmp edx eax +
jbe loc_46B344  +
cmp edx 20h +
ja loc_46B358  +
mov [esp+18h] edi +
mov [esp+14h] esi +
mov [esp+10h] ebx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_46B2D0  +
***
mov eax ebx +
call sub_46A870  +
jmp loc_46B344  +
***
jmp loc_46B370  +
push ebx  +
sub esp 8 +
mov edx [esp+10h] +
mov eax [edx+1Ch] +
test eax eax +
jz loc_46B3A1  +
mov ecx [edx+20h] +
xor ebx ebx +
xor edx edx +
mov [esp+4] ebx +
mov [esp] ecx +
fild  qword ptr [esp] +
mov [esp] eax +
mov [esp+4] edx +
fild  qword ptr [esp] +
add esp 8 +
fdivp st(1) st +
pop ebx  +
retn   +
***
add esp 8 +
fldz   +
pop ebx  +
retn   +
***
imul eax eax +
add ecx 1 +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_46B3C0  +
retn   +
***
push edi  +
mov edx 9E3779B9h +
push esi  +
push ebx  +
mov eax [esp+0Ch+arg_0] +
mov ebx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_4] +
test al 3 +
jz loc_46B5C6  +
cmp esi 0Bh +
jbe loc_46B4EE  +
mov edi ecx +
mov ecx ebx +
nop   +
movzx ebp byte ptr [eax+5] +
movzx ebx byte ptr [eax+6] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+4] +
add ebp ebx +
movzx ebx byte ptr [eax+7] +
shl ebx 18h +
add ebx ebp +
movzx ebp byte ptr [eax+9] +
add edi ebx +
movzx ebx byte ptr [eax+0Ah] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+8] +
add ebx ebp +
movzx ebp byte ptr [eax+0Bh] +
shl ebp 18h +
add ebx ebp +
movzx ebp byte ptr [eax+1] +
add ebx ecx +
movzx ecx byte ptr [eax+2] +
shl ebp 8 +
shl ecx 10h +
add ecx ebp +
movzx ebp byte ptr [eax] +
add ecx ebp +
movzx ebp byte ptr [eax+3] +
shl ebp 18h +
add ecx ebp +
sub ecx ebx +
sub ecx edi +
sub edi ebx +
add edx ecx +
mov ecx ebx +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
shr ebx 0Dh +
xor ebx edi +
sub edx ecx +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
sub esi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
add eax 0Ch +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
sub ebx edx +
xor edi ecx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
xor ecx ebx +
cmp esi 0Bh +
ja loc_46B410  +
mov ebx ecx +
mov ecx edi +
add ebx [esp+0Ch+arg_4] +
cmp esi 0Bh +
ja loc_46B55C  +
jmp ds:off_4A08E4[esi*4]  +
movzx esi byte ptr [eax+0Ah] +
shl esi 18h +
add ebx esi +
movzx esi byte ptr [eax+9] +
shl esi 10h +
add ebx esi +
movzx esi byte ptr [eax+8] +
shl esi 8 +
add ebx esi +
movzx esi byte ptr [eax+7] +
shl esi 18h +
add ecx esi +
movzx esi byte ptr [eax+6] +
shl esi 10h +
add ecx esi +
movzx esi byte ptr [eax+5] +
shl esi 8 +
add ecx esi +
movzx esi byte ptr [eax+4] +
add ecx esi +
movzx esi byte ptr [eax+3] +
shl esi 18h +
add edx esi +
movzx esi byte ptr [eax+2] +
shl esi 10h +
add edx esi +
movzx esi byte ptr [eax+1] +
shl esi 8 +
add edx esi +
movzx eax byte ptr [eax] +
add edx eax +
sub edx ecx +
mov eax ebx +
sub edx ebx +
sub ecx ebx +
shr eax 0Dh +
xor edx eax +
mov eax edx +
sub ecx edx +
shl eax 8 +
sub ebx edx +
xor eax ecx +
mov esi eax +
sub ebx eax +
shr esi 0Dh +
sub edx eax +
xor esi ebx +
mov ecx esi +
sub edx esi +
shr ecx 0Ch +
sub eax esi +
xor ecx edx +
mov edx eax +
mov eax ecx +
sub edx ecx +
shl eax 10h +
sub esi ecx +
xor eax edx +
mov edx eax +
sub esi eax +
shr edx 5 +
sub ecx eax +
xor edx esi +
mov ebx edx +
sub ecx edx +
shr ebx 3 +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 0Ah +
sub edx ebx +
xor ecx eax +
mov eax ecx +
sub edx ecx +
shr eax 0Fh +
pop ebx  +
xor eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+0Ch+arg_4] 0Bh +
jbe loc_46B4EE  +
mov edi ecx +
mov ecx ebx +
add edi [eax+4] +
add ecx [eax+8] +
mov ebx ecx +
lea ecx [ecx+edi] +
sub edi ebx +
sub edx ecx +
mov ecx ebx +
add edx [eax] +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
sub edx ecx +
shr ebx 0Dh +
xor ebx edi +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
xor edi ecx +
sub ebx edx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
sub esi 0Ch +
xor ecx ebx +
add eax 0Ch +
cmp esi 0Bh +
ja loc_46B5D5  +
mov ebx ecx +
mov ecx edi +
jmp loc_46B4EE  +
***
cmp edx 4Bh +
ja loc_46B6B7  +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
jmp ds:off_4A0B00[edx*4]  +
test ecx ecx +
jz loc_46B6B3  +
mov esi [ebx+14h] +
xor eax eax +
cmp esi [ebx+18h] +
jge loc_46B6A2  +
mov ebp [ebx+10h] +
lea edi [esi+esi*2] +
add esi 1 +
mov [ebx+14h] esi +
lea edi [ebp+edi*4+0] +
test edi edi +
jz loc_46B6A2  +
mov eax [esp+10h+arg_0] +
mov [edi] edx +
mov [edi+4] ecx +
mov [edi+8] eax +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jz loc_46B6B3  +
mov eax [esp+10h+arg_0] +
test eax eax +
jnz loc_46B676  +
xor eax eax +
jmp loc_46B6A2  +
xor eax eax +
retn   +
***
push ebx  +
mov ebx [eax+14h] +
cmp ebx [eax+18h] +
jge loc_46B6E6  +
mov esi [eax+10h] +
lea edi [ebx+ebx*2] +
add ebx 1 +
mov [eax+14h] ebx +
lea esi [esi+edi*4] +
test esi esi +
jz loc_46B6E6  +
test edx edx +
jz loc_46B6E6  +
test ecx ecx +
jnz loc_46B6F0  +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
retn   +
mov dword ptr [esi] 0 +
mov eax esi +
mov [esi+4] edx +
mov [esi+8] ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 4 +
mov eax [eax+0Ch] +
movzx eax byte ptr [eax] +
jmp loc_46B765  +
test dl dl +
jnz loc_46B771  +
cmp al 4Bh +
jnz loc_46B7B0  +
add dword ptr [ebx+0Ch] 1 +
cmp edi 1 +
sbb edx edx +
add dword ptr [ebx+30h] 6 +
and edx 0FFFFFFFDh +
add edx 1Eh +
xor ecx ecx +
mov eax ebx +
mov [esp+10h+var_10] 0 +
call sub_46B660  +
test eax eax +
mov [esi] eax +
jz loc_46B7A5  +
lea esi [eax+4] +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
cmp al 72h +
setz dl  +
cmp al 56h +
setz cl  +
jnz loc_46B727  +
add dword ptr [ebx+0Ch] 1 +
test dl dl +
jz loc_46B790  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Ch +
add dword ptr [ebx+30h] 9 +
jmp loc_46B746  +
test cl cl +
jz loc_46B737  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Dh +
add dword ptr [ebx+30h] 9 +
jmp loc_46B746  +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jnz loc_46B7F3  +
cmp al 46h +
jnz loc_46B7F3  +
cmp esi ebp +
jnz loc_46B7DA  +
lea esi [esi+0] +
jmp loc_46B7F3  +
cmp eax 1Bh +
jz loc_46B800  +
cmp eax 19h +
jnz loc_46B7D3  +
mov dword ptr [ebp+0] 1Ch +
add ebp 4 +
cmp esi ebp +
jz loc_46B7F3  +
mov ebp [ebp+0] +
mov eax [ebp+0] +
cmp eax 1Ah +
jnz loc_46B7C2  +
mov dword ptr [ebp+0] 1Dh +
add ebp 4 +
cmp esi ebp +
jnz loc_46B7DA  +
add esp 4 +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebp+0] 1Eh +
jmp loc_46B7D3  +
***
sub esp 4 +
mov ecx [ebx+0Ch] +
mov eax edx +
cmp byte ptr [ecx] 52h +
setz dl  +
cmp byte ptr [ecx] 4Fh +
jnz loc_46B850  +
test dl dl +
jnz loc_46B854  +
add dword ptr [ebx+30h] 3 +
mov edx 20h +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov ecx eax +
mov eax ebx +
mov [esp+4+var_4] 0 +
call sub_46B660  +
add esp 4 +
pop ebx  +
retn   +
test dl dl +
jz loc_46B849  +
add dword ptr [ebx+30h] 2 +
mov edx 1Fh +
jmp loc_46B833  +
***
push esi  +
mov edi edx +
push ebx  +
mov esi eax +
mov ebx ecx +
jz loc_46B887  +
lea esi [esi+0] +
cmp dword ptr [ebx] 4Bh +
ja loc_46B887  +
mov ecx [ebx] +
jmp ds:off_4A0C30[ecx*4]  +
mov ebx [ebx+8] +
test ebx ebx +
jnz loc_46B870  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ebx [ebx+4] +
jmp loc_46B883  +
mov ecx [ebx+4] +
cmp dword ptr [ecx] 5 +
jnz loc_46B8A3  +
add dword ptr [edi] 1 +
mov ecx [ebx+4] +
mov edx edi +
mov eax esi +
call sub_46B860  +
mov ebx [ebx+8] +
jmp loc_46B883  +
add dword ptr [esi] 1 +
mov ecx [ebx+4] +
jmp loc_46B8A3  +
***
mov ecx [eax+100h] +
cmp ecx 0FFh +
jz loc_46B8F0  +
lea ebx [ecx+1] +
mov [eax+100h] ebx +
mov [eax+ecx] dl +
mov [eax+104h] dl +
add esp 28h +
pop ebx  +
retn   +
mov ebx [eax+10Ch] +
mov ecx [eax+108h] +
mov byte ptr [eax+0FFh] 0 +
mov [esp+28h+var_C] edx +
mov [esp+28h+var_20] ebx +
mov ebx 1 +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_10] eax +
mov [esp+28h+var_24] 0FFh +
call ecx  +
mov eax [esp+28h+var_10] +
xor ecx ecx +
mov edx [esp+28h+var_C] +
add dword ptr [eax+120h] 1 +
jmp loc_46B8D5  +
***
push esi  +
mov esi eax +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
cmp cl 6Eh +
jz loc_46B984  +
lea eax [ecx-30h] +
cmp al 9 +
ja loc_46B993  +
mov eax [esi] +
lea edx [eax+1] +
xor eax eax +
nop   +
lea eax [eax+eax*4] +
mov [esi] edx +
lea eax [ecx+eax*2-30h] +
movsx ecx byte ptr [edx] +
add edx 1 +
lea ebx [ecx-30h] +
cmp bl 9 +
jbe loc_46B960  +
mov edx eax +
neg edx  +
test edi edi +
pop ebx  +
cmovnz eax edx +
pop esi  +
pop edi  +
retn   +
lea edx [eax+1] +
mov di 1 +
mov [esi] edx +
movsx ecx byte ptr [eax+1] +
jmp loc_46B951  +
xor eax eax +
jmp loc_46B977  +
***
mov edx [eax+14h] +
cmp edx [eax+18h] +
jge loc_46B9D5  +
push ebx  +
mov ecx [eax+10h] +
lea ebx [edx+edx*2] +
add edx 1 +
mov [eax+14h] edx +
lea ebx [ecx+ebx*4] +
test ebx ebx +
jz loc_46B9D1  +
mov dword ptr [ebx] 40h +
add eax 0Ch +
call sub_46B940  +
mov [ebx+4] eax +
mov eax ebx +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
xor eax eax +
retn   +
***
mov ebx eax +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_46BA08  +
cmp al 6Eh +
jz loc_46BA01  +
lea eax [ebx+0Ch] +
call sub_46B940  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_46BA12  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
xor eax eax +
add edx 1 +
mov [ebx+0Ch] edx +
pop ebx  +
retn   +
add eax 1 +
jmp loc_46BA0A  +
***
mov ebx eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 54h +
jz loc_46BA31  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46B9E0  +
test eax eax +
js loc_46BA2C  +
mov ecx [ebx+14h] +
add dword ptr [ebx+28h] 1 +
cmp ecx [ebx+18h] +
jge loc_46BA2C  +
mov edx [ebx+10h] +
lea esi [ecx+ecx*2] +
add ecx 1 +
mov [ebx+14h] ecx +
lea edx [edx+esi*4] +
test edx edx +
jz loc_46BA2C  +
mov [edx+4] eax +
mov eax edx +
mov dword ptr [edx] 5 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [eax+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_46BA80  +
mov eax 1 +
retn   +
add edx 1 +
add eax 0Ch +
mov [eax] edx +
call sub_46B940  +
not eax  +
shr eax 1Fh +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
lea eax [eax+0Ch] +
call sub_46B940  +
test eax eax +
mov esi eax +
jle loc_46BB54  +
mov edi [ebx+0Ch] +
mov eax [ebx+4] +
sub eax edi +
cmp esi eax +
jg loc_46BB58  +
test byte ptr [ebx+8] 4 +
lea eax [edi+esi] +
mov [ebx+0Ch] eax +
jnz loc_46BB10  +
cmp esi 9 +
jle loc_46BAF7  +
mov [esp+10h+var_8] 8 +
mov [esp+10h+var_C] offset a_global_ +
mov [esp+10h+var_10] edi +
call memcmp  +
test eax eax +
jz loc_46BB20  +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_46B6C0  +
mov [ebx+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [eax] 24h +
jnz loc_46BAD6  +
add eax 1 +
mov [ebx+0Ch] eax +
jmp loc_46BAD6  +
movzx eax byte ptr [edi+8] +
cmp al 2Eh +
jz loc_46BB30  +
cmp al 5Fh +
jz loc_46BB30  +
cmp al 24h +
jnz loc_46BAF7  +
cmp byte ptr [edi+9] 4Eh +
jnz loc_46BAF7  +
mov eax [ebx+30h] +
mov ecx 15h +
mov edx offset aAnonymousNames +
add eax 16h +
sub eax esi +
mov [ebx+30h] eax +
mov eax ebx +
call sub_46B6C0  +
jmp loc_46BB02  +
xor eax eax +
jmp loc_46BB05  +
xor eax eax +
lea esi [esi+0] +
jmp loc_46BB02  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [eax+0Ch] +
mov ebp [eax+2Ch] +
cmp byte ptr [esi] 42h +
jnz loc_46BBAE  +
add esi 1 +
mov eax ebx +
mov [ebx+0Ch] esi +
call sub_46BAA0  +
mov ecx edi +
mov edx 4Ah +
mov [esp+24h+var_24] eax +
mov eax ebx +
call sub_46B660  +
mov esi [ebx+0Ch] +
cmp byte ptr [esi] 42h +
mov edi eax +
jz loc_46BB86  +
mov [ebx+2Ch] ebp +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 53h +
jz loc_46BBE0  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jnz loc_46BC30  +
xor edx edx +
mov ecx [ebx+8] +
shr ecx 3 +
and ecx 1 +
test esi esi +
jz loc_46BC0F  +
test cl cl +
jnz loc_46BC0F  +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
sub eax 43h +
cmp al 1 +
setbe cl  +
movzx ecx cl +
mov eax offset aT_0 +
cmp dl [eax] +
jz loc_46BCC4  +
add eax 1Ch +
cmp eax offset aSignedChar +
jnz loc_46BC17  +
jmp loc_46BBD1  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax+1] +
lea eax [edx-30h] +
cmp al 9 +
ja loc_46BD9A  +
cmp dl 5Fh +
jz loc_46BCC0  +
lea ecx [edx-30h] +
xor eax eax +
cmp cl 9 +
ja loc_46BC83  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-30h] +
cmp eax ecx +
ja loc_46BBD1  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_46BC98  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_46BCA0  +
mov eax ecx +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_46BC54  +
lea ecx [edx-41h] +
cmp cl 19h +
ja loc_46BBD1  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-37h] +
jmp loc_46BC5B  +
xor edx edx +
mov eax ecx +
jmp loc_46BC7B  +
add ecx 1 +
cmp ecx [ebx+20h] +
jnb loc_46BBD1  +
mov eax [ebx+1Ch] +
add dword ptr [ebx+28h] 1 +
mov eax [eax+ecx*4] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
jmp loc_46BCA3  +
mov edi [eax+14h] +
test edi edi +
mov [esp+1Ch+var_14] edi +
jz loc_46BD8A  +
mov edx [ebx+14h] +
mov ebp [ebx+18h] +
mov edi [eax+18h] +
mov [esp+1Ch+var_18] 0 +
cmp edx ebp +
mov [esp+1Ch+var_10] edi +
jge loc_46BD17  +
mov esi [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea edi [esi+edi*4] +
test edi edi +
jz loc_46BD17  +
mov esi [esp+1Ch+var_14] +
mov dword ptr [edi] 18h +
mov [esp+1Ch+var_18] edi +
mov [edi+4] esi +
mov esi [esp+1Ch+var_10] +
mov [edi+8] esi +
mov edi [esp+1Ch+var_18] +
mov [ebx+2Ch] edi +
test ecx ecx +
jz loc_46BD92  +
mov esi [eax+0Ch] +
mov ecx [eax+10h] +
add [ebx+30h] ecx +
xor eax eax +
cmp edx ebp +
jge loc_46BD50  +
mov eax [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+edi*4] +
test eax eax +
jz loc_46BD50  +
mov dword ptr [eax] 18h +
mov [eax+4] esi +
mov [eax+8] ecx +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 42h +
jnz loc_46BBD3  +
mov edx eax +
mov eax ebx +
call sub_46BB70  +
test eax eax +
jz loc_46BBD1  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_46BBD3  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_46BBD3  +
mov ebp [ebx+18h] +
mov edx [ebx+14h] +
jmp loc_46BD1E  +
mov esi [eax+4] +
mov ecx [eax+8] +
jmp loc_46BD28  +
cmp dl 5Fh +
jz loc_46BC45  +
lea eax [edx-41h] +
cmp al 19h +
jbe loc_46BC4A  +
nop   +
jmp loc_46BBF0  +
***
push ebx  +
mov ebx eax +
jnz loc_46BDDE  +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jnz loc_46BDD5  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp edx 68h +
jz loc_46BE10  +
cmp edx 76h +
jnz loc_46BDD0  +
lea esi [ebx+0Ch] +
mov eax esi +
call sub_46B940  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jnz loc_46BDD0  +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax esi +
call sub_46B940  +
jmp loc_46BE18  +
lea eax [ebx+0Ch] +
call sub_46B940  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_46BDD2  +
add edx 1 +
mov al 1 +
mov [ebx+0Ch] edx +
jmp loc_46BDD2  +
***
mov ecx [eax+110h] +
test ecx ecx +
jz loc_46BE77  +
mov eax [ecx+4] +
mov edx [edx] +
mov eax [eax+8] +
test eax eax +
jz loc_46BE70  +
cmp dword ptr [eax] 2Fh +
jnz loc_46BE70  +
cmp edx 0 +
jg loc_46BE5B  +
jmp loc_46BE67  +
cmp dword ptr [eax] 2Fh +
jnz loc_46BE70  +
test edx edx +
jz loc_46BE73  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jnz loc_46BE52  +
retn   +
jz loc_46BE73  +
lea esi [esi+0] +
xor eax eax +
retn   +
mov eax [eax+4] +
retn   +
mov dword ptr [eax+118h] 1 +
xor eax eax +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_46BEC5  +
cmp dword ptr [ebx] 4Ah +
ja loc_46BEB0  +
mov edx [ebx] +
jmp ds:off_4A0D80[edx*4]  +
mov edx [ebx+4] +
mov eax esi +
call sub_46BE90  +
test eax eax +
jnz loc_46BEC7  +
mov ebx [ebx+8] +
test ebx ebx +
jnz loc_46BE9D  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [ebx+4] +
mov eax esi +
call sub_46BE30  +
test eax eax +
jz loc_46BEC5  +
cmp dword ptr [eax] 2Fh +
jnz loc_46BEC5  +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_8] +
mov edi [esp+10h+arg_4] +
mov eax [esi+4] +
mov ebx [esi+8] +
lea eax [edi+eax+1] +
cmp eax ebx +
ja loc_46BF50  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_46BF20  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esi] +
mov edx [esp+10h+arg_0] +
add eax [esi+4] +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
call memcpy  +
mov eax [esi] +
add eax edi +
add eax [esi+4] +
mov byte ptr [eax] 0 +
add [esi+4] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+0Ch] +
test edx edx +
jnz loc_46BF13  +
test ebx ebx +
jnz loc_46BF62  +
cmp eax 2 +
mov bl 2 +
jbe loc_46BF68  +
add ebx ebx +
cmp eax ebx +
ja loc_46BF62  +
mov eax [esi] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] eax +
call realloc  +
test eax eax +
jz loc_46BF81  +
mov [esi] eax +
mov [esi+8] ebx +
jmp loc_46BF0C  +
mov eax [esi] +
mov [esp+10h+var_10] eax +
call free  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 1 +
jmp loc_46BF13  +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
test eax eax +
jz loc_46C033  +
mov ecx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_46BFEC  +
lea eax [ecx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+ecx] dl +
mov [ebx+104h] dl +
jz loc_46C033  +
mov ecx eax +
cmp ecx 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46BFD1  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+14h+var_8] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_10] 0FFh +
mov [esp+14h+var_14] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
mov edx [esp+14h+var_8] +
jmp loc_46BFD4  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 30h +
lea esi [esp+30h+var_19] +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] offset unk_4A0EAC +
mov [esp+30h+var_30] esi +
call sprintf  +
mov [esp+30h+var_30] esi +
call strlen  +
test eax eax +
jz loc_46C0E0  +
mov edx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_46C092  +
lea eax [edx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+edx] cl +
mov [ebx+104h] cl +
jz loc_46C0E0  +
mov edx eax +
cmp edx 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_46C077  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+30h+var_24] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] 0FFh +
mov [esp+30h+var_30] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov ecx [esp+30h+var_24] +
jmp loc_46C07A  +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 8Ch +
test ecx ecx +
mov [esp+98h+var_80] edx +
jz loc_46C1F0  +
mov eax [eax+118h] +
test eax eax +
jnz loc_46C1E0  +
mov eax [ecx] +
cmp eax 4Bh +
ja loc_46D693  +
jmp ds:off_4A1118[eax*4]  +
mov edx [ecx+4] +
xor esi esi +
cmp dword ptr [edx] 27h +
jnz loc_46C160  +
mov edx [edx+4] +
mov esi [edx+10h] +
cmp esi 1 +
jb loc_46C160  +
cmp esi 6 +
jbe loc_46DF82  +
cmp esi 7 +
jnz loc_46C160  +
mov edx [ecx+8] +
mov ecx [edx] +
test ecx ecx +
jnz loc_46C160  +
cmp dword ptr [edx+8] 1 +
jz loc_46E3BE  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46DF37  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_80] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov ecx [ebp+4] +
call sub_46E490  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46DF00  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
cmp dword ptr [ebp+0] 3Ch +
jz loc_46E102  +
cmp esi 8 +
jz loc_46E0D7  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
lea esi [esi+0] +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+118h] 1 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_46E490  +
mov eax ebx +
mov edx offset aClone +
call sub_46BFB0  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_46E490  +
mov edx 5Dh +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46C1E0  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_46E490  +
mov eax ebx +
mov edx offset aAbi +
call sub_46BFB0  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_46E490  +
mov edx 5Dh +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46C1E0  +
mov edx [ecx+4] +
mov eax ebx +
call sub_46BE90  +
test eax eax +
jz loc_46E29B  +
xor esi esi +
cmp dword ptr [eax] 2Fh +
jnz loc_46D8B2  +
mov edx [eax+4] +
test edx edx +
jz loc_46D8B2  +
mov eax [eax+8] +
add esi 1 +
test eax eax +
jnz loc_46C288  +
mov eax [ebp+4] +
mov [esp+98h+var_78] eax +
lea eax [esi-1] +
xor edi edi +
mov [esp+98h+var_74] eax +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
mov [ebx+11Ch] edi +
call sub_46E490  +
cmp [esp+98h+var_74] edi +
jle loc_46D6D4  +
mov eax [ebx+100h] +
mov ebp offset asc_4A1046 +
jmp loc_46C305  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp (offset asc_4A1046+2) +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D6D4  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_46C2E2  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46C2E5  +
mov eax [ebx+100h] +
mov esi offset aNonTransaction +
jmp loc_46C383  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A1031h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D787  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C360  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46C363  +
mov eax ebx +
mov edx offset aUnnamedType +
call sub_46BFB0  +
mov edx [ebp+4] +
mov eax ebx +
add edx 1 +
call sub_46C040  +
mov edx 7Dh +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46C1E0  +
mov eax ebx +
mov edx offset aLambda +
call sub_46BFB0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
mov eax ebx +
mov edx offset asc_4A10FA +
call sub_46BFB0  +
mov edx [ebp+8] +
mov eax ebx +
add edx 1 +
call sub_46C040  +
mov edx 7Dh +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46C1E0  +
mov eax ebx +
mov edx offset aGlobalDestruct +
call sub_46BFB0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov eax ebx +
mov edx offset aGlobalConstruc +
call sub_46BFB0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov eax ebx +
mov edx offset aDecltype +
call sub_46BFB0  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+4] +
call sub_46E490  +
mov edx 29h +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46C1E0  +
mov edx [ecx+4] +
mov eax ebx +
call sub_46C040  +
jmp loc_46C1E0  +
mov eax [ebx+100h] +
mov esi offset aTransactionClo +
jmp loc_46C4E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A1016h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D7AD  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C4C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46C4C3  +
mov eax [ebx+100h] +
mov edx [ecx+4] +
cmp eax 0FFh +
jz loc_46DE5F  +
lea ecx [eax+1] +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jmp loc_46C1E0  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_46E490  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_46E490  +
jmp loc_46C1E0  +
mov eax ebx +
mov edx offset aJavaResource +
call sub_46BFB0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46C1E0  +
mov eax [ecx+8] +
cmp dword ptr [eax] 39h +
jnz loc_46C1F0  +
mov edx [eax+8] +
cmp dword ptr [edx] 3Ah +
jnz loc_46C1F0  +
mov eax [eax+4] +
mov edi offset aQu +
mov ebp [ecx+4] +
mov ecx 3 +
mov [esp+98h+var_7C] eax +
mov eax [edx+4] +
mov [esp+98h+var_78] eax +
mov eax [edx+8] +
mov [esp+98h+var_74] eax +
mov eax [ebp+4] +
mov esi [eax] +
cmps   +
jz loc_46E22F  +
mov eax ebx +
mov edx offset aNew +
call sub_46BFB0  +
mov eax [esp+98h+var_7C] +
cmp dword ptr [eax+4] 0 +
jz loc_46C619  +
mov edx [esp+98h+var_80] +
mov ecx eax +
mov eax ebx +
call sub_46F720  +
mov edx 20h +
mov eax ebx +
call sub_46B8C0  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [esp+98h+var_78] +
mov edx edi +
call sub_46E490  +
mov ecx [esp+98h+var_74] +
test ecx ecx +
jz loc_46C1E0  +
mov edx edi +
mov eax ebx +
call sub_46F720  +
jmp loc_46C1E0  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46C1E0  +
mov eax [ecx+8] +
cmp dword ptr [eax] 37h +
jnz loc_46C1F0  +
mov edi [ecx+4] +
mov esi [edi+4] +
mov [esp+98h+var_7C] edi +
mov edx [esi] +
cmp byte ptr [edx+1] 63h +
jz loc_46E13F  +
mov edi [esp+98h+var_7C] +
cmp dword ptr [edi] 31h +
jz loc_46D6A2  +
mov esi edx +
mov ecx 3 +
mov edi offset aCl +
cmps   +
mov ecx [eax+4] +
jnz loc_46C69E  +
cmp dword ptr [ecx] 3 +
jz loc_46E276  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_46F720  +
mov eax [ebp+4] +
mov ecx 3 +
mov edi offset aIx +
mov edx [eax+4] +
mov [esp+98h+var_7C] eax +
mov edx [edx] +
mov esi edx +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_46E1ED  +
mov ecx 3 +
mov esi edx +
mov edi offset aCl +
cmps   +
jnz loc_46E21B  +
mov eax [ebp+8] +
mov edx [esp+98h+var_80] +
mov ecx [eax+8] +
mov eax ebx +
call sub_46F720  +
mov eax [ebp+4] +
cmp dword ptr [eax] 31h +
jnz loc_46C1E0  +
mov eax [eax+4] +
cmp dword ptr [eax+8] 1 +
jnz loc_46C1E0  +
mov eax [eax+4] +
cmp byte ptr [eax] 3Eh +
jnz loc_46C1E0  +
mov edx 29h +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46C1E0  +
mov eax [ecx+4] +
mov edi [ecx+8] +
mov [esp+98h+var_78] eax +
mov eax [eax] +
mov [esp+98h+var_7C] edi +
cmp eax 31h +
jz loc_46DBFE  +
cmp eax 33h +
jz loc_46DCCC  +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46F660  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46F720  +
jmp loc_46C1E0  +
mov eax ebx +
mov edx offset aOperator +
call sub_46BFB0  +
mov edx [esp+98h+var_80] +
lea ecx [ebp+4] +
mov eax ebx +
call sub_46F3E0  +
jmp loc_46C1E0  +
mov eax ebx +
mov edx offset aOperator +
call sub_46BFB0  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov ebp [ecx+4] +
mov eax ebx +
mov edx offset aOperator_0 +
mov edi [ebp+8] +
call sub_46BFB0  +
mov esi [ebp+4] +
movzx eax byte ptr [esi] +
sub eax 61h +
cmp al 19h +
jbe loc_46DA2A  +
xor eax eax +
cmp byte ptr [esi+edi-1] 20h +
setz al  +
sub edi eax +
jz loc_46C1E0  +
mov eax [ebx+100h] +
add edi esi +
jmp loc_46C811  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C1E0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46C7F2  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_46C7F5  +
mov ecx [ecx+4] +
mov esi [ebp+8] +
test ecx ecx +
jz loc_46C86C  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_46E490  +
mov eax ebx +
mov edx 7Bh +
call sub_46B8C0  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx esi +
call sub_46E490  +
mov edx 7Dh +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46C1E0  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_46C8A8  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_46E490  +
mov eax [ebp+8] +
test eax eax +
jz loc_46C1E0  +
mov eax [ebx+100h] +
cmp eax 0FDh +
ja loc_46DCFB  +
mov edx offset asc_4A1046 +
mov eax ebx +
call sub_46BFB0  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
mov esi [ebx+120h] +
mov edi [ebx+100h] +
call sub_46E490  +
cmp [ebx+120h] esi +
jnz loc_46C1E0  +
mov eax [ebx+100h] +
cmp eax edi +
jnz loc_46C1E0  +
sub eax 2 +
mov [ebx+100h] eax +
jmp loc_46C1E0  +
cmp word ptr [ecx+0Ah] 0 +
jnz loc_46DA3E  +
mov ecx [ebp+4] +
cmp dword ptr [ecx+4] offset off_4A1C40 +
jz loc_46C940  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_46E490  +
mov edx 20h +
mov eax ebx +
call sub_46B8C0  +
cmp word ptr [ebp+8] 0 +
jz loc_46D97C  +
mov edx offset a_accum +
mov eax ebx +
call sub_46BFB0  +
jmp loc_46C1E0  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46F660  +
jmp loc_46C1E0  +
mov eax [ebx+114h] +
mov [esp+98h+var_54] ecx +
mov edx [esp+98h+var_80] +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov ecx [ecx+8] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_46E490  +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_46C9BC  +
mov edx [esp+98h+var_80] +
mov ecx ebp +
mov eax ebx +
call sub_46E4D0  +
mov eax [esp+98h+var_58] +
mov [ebx+114h] eax +
jmp loc_46C1E0  +
mov edi [ebx+114h] +
lea eax [esp+98h+var_58] +
mov ecx eax +
mov [esp+98h+var_78] eax +
mov [ebx+114h] eax +
mov esi edi +
mov [esp+98h+var_74] edi +
test esi esi +
mov [esp+98h+var_58] edi +
mov edi eax +
mov eax [ebx+110h] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
jz loc_46E450  +
mov eax [esi+4] +
mov eax [eax] +
sub eax 19h +
cmp eax 2 +
ja loc_46E450  +
mov eax esi +
mov esi 1 +
mov [esp+98h+var_70] ebp +
mov [esp+98h+var_7C] ecx +
jmp loc_46CA3D  +
mov edx [eax+4] +
mov edx [edx] +
sub edx 19h +
cmp edx 2 +
ja loc_46CA8E  +
mov edx [eax+8] +
test edx edx +
jnz loc_46CA88  +
cmp esi 3 +
ja loc_46DE17  +
mov ebp [eax] +
mov edx esi +
add esi 1 +
shl edx 4 +
lea ecx [esp+edx+98h+var_58] +
mov [esp+edx+98h+var_58] ebp +
mov ebp [eax+4] +
mov [ecx+4] ebp +
mov ebp [eax+8] +
mov [ecx+8] ebp +
mov ebp [eax+0Ch] +
mov [ecx+0Ch] ebp +
mov [esp+edx+98h+var_58] edi +
mov edi [esp+98h+var_7C] +
add edi edx +
mov [ebx+114h] edi +
mov dword ptr [eax+8] 1 +
mov eax [eax] +
test eax eax +
jnz loc_46CA30  +
mov ebp [esp+98h+var_70] +
mov eax ebx +
mov edx [esp+98h+var_80] +
mov ecx [ebp+8] +
call sub_46E490  +
mov eax [esp+98h+var_74] +
mov [ebx+114h] eax +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_46C1E0  +
cmp esi 1 +
jz loc_46E1B0  +
mov edi [esp+98h+var_78] +
sub esi 1 +
mov [esp+98h+var_7C] ebp +
mov ebp [esp+98h+var_80] +
mov eax esi +
shl eax 4 +
lea edi [edi+eax+4] +
mov ecx [edi] +
mov edx ebp +
mov eax ebx +
sub edi 10h +
call sub_46E4D0  +
cmp esi 1 +
jz loc_46D99A  +
sub esi 1 +
jmp loc_46CAD7  +
test byte ptr [esp+98h+var_80] 20h +
jnz loc_46D9F5  +
cmp dword ptr [ecx+4] 0 +
jz loc_46CB0F  +
test byte ptr [esp+98h+var_80] 40h +
jz loc_46DE9E  +
mov eax [ebx+114h] +
lea ecx [ebp+8] +
mov edx [esp+98h+var_80] +
mov [esp+98h+var_98] eax +
mov eax ebx +
and edx 0FFFFFF9Fh +
call sub_46F0D0  +
jmp loc_46C1E0  +
mov eax [ebx+100h] +
mov esi offset aVirtualThunkTo +
jmp loc_46CB63  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A0F61h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D73B  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46CB40  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46CB43  +
mov eax [ebx+100h] +
mov esi offset aNonVirtualThun +
jmp loc_46CBD9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A0F4Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D728  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46CBB6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46CBB9  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFnFor +
jmp loc_46CC53  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A0F39h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D715  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46CC30  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46CC33  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoNameFo +
jmp loc_46CCC9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A0F28h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D87E  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46CCA6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46CCA9  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFor +
jmp loc_46CD43  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A0F15h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D86B  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46CD20  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46CD23  +
mov eax ebx +
mov edx offset aConstructionVt +
call sub_46BFB0  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+4] +
mov edx edi +
call sub_46E490  +
mov eax ebx +
mov edx offset aIn +
call sub_46BFB0  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_46E490  +
jmp loc_46C1E0  +
mov eax ebx +
mov edx offset aVttFor +
call sub_46BFB0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov eax ebx +
mov edx offset aVtableFor +
call sub_46BFB0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov eax ebx +
mov edx 7Eh +
call sub_46B8C0  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov ecx [ecx+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov esi [ecx+4] +
test esi esi +
jnz loc_46D8C6  +
mov edx offset aThis +
mov eax ebx +
call sub_46BFB0  +
jmp loc_46C1E0  +
lea edx [ecx+4] +
mov eax ebx +
call sub_46BE30  +
test eax eax +
jz loc_46D9E6  +
cmp dword ptr [eax] 2Fh +
jz loc_46D9BA  +
mov esi [ebx+110h] +
mov ecx eax +
mov eax ebx +
mov edx [esi] +
mov [ebx+110h] edx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
mov [ebx+110h] esi +
jmp loc_46C1E0  +
mov eax [ebx+140h] +
test byte ptr [esp+98h+var_80] 4 +
mov [ebx+140h] ecx +
mov [esp+98h+var_7C] eax +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov edx [ecx+4] +
mov [esp+98h+var_78] eax +
jz loc_46CECD  +
mov esi [edx] +
test esi esi +
jnz loc_46CECD  +
cmp dword ptr [edx+8] 6 +
jz loc_46E1B9  +
mov ecx edx +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_46E490  +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_46E0C6  +
mov edx 3Ch +
mov eax ebx +
call sub_46B8C0  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
cmp byte ptr [ebx+104h] 3Eh +
jz loc_46E0B5  +
mov edx 3Eh +
mov eax ebx +
call sub_46B8C0  +
mov eax [esp+98h+var_78] +
mov [ebx+114h] eax +
mov eax [esp+98h+var_7C] +
mov [ebx+140h] eax +
jmp loc_46C1E0  +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov esi [ecx+4] +
mov [esp+98h+var_74] eax +
test esi esi +
jz loc_46E0A6  +
mov eax [ebx+110h] +
xor edx edx +
xor edi edi +
mov [esp+98h+var_70] ecx +
mov [esp+98h+var_7C] eax +
lea eax [esp+98h+var_58] +
mov [esp+98h+var_78] eax +
mov ecx [esp+98h+var_7C] +
add edi 1 +
mov ebp eax +
mov [eax] edx +
mov edx [esi] +
mov [ebx+114h] eax +
mov [eax+4] esi +
mov [eax+0Ch] ecx +
lea ecx [edx-1Ch] +
cmp ecx 4 +
mov dword ptr [eax+8] 0 +
jbe loc_46D6E4  +
cmp edx 4 +
mov ebp [esp+98h+var_70] +
jz loc_46E344  +
cmp edx 2 +
jnz loc_46D026  +
mov ecx [esi+8] +
cmp dword ptr [ecx] 45h +
jz loc_46E386  +
mov eax [ecx] +
sub eax 1Ch +
cmp eax 4 +
ja loc_46D026  +
cmp edi 4 +
jz loc_46E368  +
mov eax edi +
shl eax 4 +
mov [esp+98h+var_70] esi +
mov esi [esp+98h+var_7C] +
add eax [esp+98h+var_78] +
jmp loc_46CFE8  +
add eax 10h +
cmp edi 4 +
jz loc_46E368  +
mov edx [eax-0Ch] +
add edi 1 +
mov [ebx+114h] eax +
mov [eax-0Ch] ecx +
mov [eax+4] edx +
mov edx [eax-8] +
mov dword ptr [eax-8] 0 +
mov [eax+8] edx +
mov edx [eax-4] +
mov [eax-4] esi +
mov [eax+0Ch] edx +
lea edx [eax-10h] +
mov [eax] edx +
mov ecx [ecx+4] +
mov edx [ecx] +
sub edx 1Ch +
cmp edx 4 +
jbe loc_46CFDC  +
mov esi [esp+98h+var_70] +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
cmp dword ptr [esi] 4 +
jz loc_46E377  +
test edi edi +
jz loc_46E130  +
lea ebp [edi-1] +
mov edi [esp+98h+var_78] +
mov eax ebp +
shl eax 4 +
lea esi [edi+eax+8] +
jmp loc_46D065  +
sub esi 10h +
test ebp ebp +
jz loc_46E130  +
sub ebp 1 +
mov edi [esi] +
test edi edi +
jnz loc_46D057  +
mov eax ebx +
mov edx 20h +
call sub_46B8C0  +
mov ecx [esi-4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E4D0  +
jmp loc_46D057  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_46C1E0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46D0BF  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C1E0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_46D0A0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_46D0A3  +
mov eax [ebx+100h] +
mov esi offset aReferenceTempo +
jmp loc_46D137  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A0FE7h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D7C0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46D114  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46D117  +
mov eax [ebx+100h] +
mov esi offset aTlsWrapperFunc +
jmp loc_46D1B3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A0FD1h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D858  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46D190  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46D193  +
mov eax [ebx+100h] +
mov esi offset aTlsInitFunctio +
jmp loc_46D229  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A0FB7h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D702  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46D206  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46D209  +
mov eax [ebx+100h] +
mov esi offset aJavaClassFor +
jmp loc_46D2A3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A0F8Ch +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D74E  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46D280  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46D283  +
mov eax [ebx+100h] +
mov esi offset aGuardVariableF +
jmp loc_46D319  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A0FA0h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D774  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46D2F6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46D2F9  +
mov eax [ebx+100h] +
mov esi offset aCovariantRetur +
jmp loc_46D393  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A0F7Ch +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D761  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46D370  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46D373  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_46E490  +
and edi 4 +
jnz loc_46D8EC  +
mov edx offset asc_4A0EB6 +
mov eax ebx +
call sub_46BFB0  +
mov ecx [ebp+8] +
cmp dword ptr [ecx] 45h +
jz loc_46DE26  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_46E490  +
jmp loc_46C1E0  +
test byte ptr [esp+98h+var_80] 4 +
jnz loc_46DD41  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_46C1E0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46D45F  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C1E0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_46D440  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_46D443  +
test byte ptr [esp+98h+var_80] 4 +
mov eax [ecx+4] +
jnz loc_46D8FD  +
mov edi [eax+4] +
mov ebp [eax] +
test edi edi +
jz loc_46C1E0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46D4EF  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C1E0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_46D4D0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_46D4D3  +
mov eax [ecx+4] +
xor esi esi +
cmp dword ptr [eax] 5 +
jz loc_46DAB9  +
mov edx [eax] +
cmp edx 23h +
jz loc_46D98D  +
cmp edx [ebp+0] +
jz loc_46D98D  +
cmp edx 24h +
jz loc_46E055  +
mov edi [ebx+114h] +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+98h+var_58] edi +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
mov ecx [ebp+4] +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_46E490  +
mov edi [esp+98h+var_50] +
test edi edi +
jz loc_46D8A0  +
mov eax [esp+98h+var_58] +
test esi esi +
mov [ebx+114h] eax +
jz loc_46C1E0  +
mov eax [esp+98h+var_7C] +
mov [ebx+110h] eax +
jmp loc_46C1E0  +
mov edi [ebx+114h] +
xor esi esi +
jmp loc_46D568  +
mov edi [ebx+114h] +
test edi edi +
jz loc_46E35F  +
mov edx edi +
mov ecx [edx+8] +
test ecx ecx +
jnz loc_46D5FD  +
mov ecx [edx+4] +
mov ecx [ecx] +
lea esi [ecx-19h] +
cmp esi 2 +
ja loc_46D603  +
cmp eax ecx +
jz loc_46DD2E  +
mov edx [edx] +
test edx edx +
jnz loc_46D5E1  +
xor esi esi +
jmp loc_46D568  +
mov eax [ebx+100h] +
mov esi offset aHiddenAliasFor +
jmp loc_46D63A  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A0FFFh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D79A  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46D617  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46D61A  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46C1E0  +
cmp dword ptr [esi+8] 1 +
jnz loc_46C682  +
mov ecx [esi+4] +
cmp byte ptr [ecx] 3Eh +
jnz loc_46C682  +
mov eax ebx +
mov edx 28h +
call sub_46B8C0  +
mov eax [ebp+4] +
mov eax [eax+4] +
mov esi [eax] +
mov eax [ebp+8] +
jmp loc_46C684  +
add edi 1 +
cmp edi esi +
jnz loc_46C2B6  +
jmp loc_46C1E0  +
mov esi [esi+4] +
test esi esi +
jz loc_46E0A6  +
add eax 10h +
cmp edi 4 +
jz loc_46D891  +
mov edx ebp +
jmp loc_46CF6C  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aFor +
mov edx [esp+98h+var_80] +
call sub_46E490  +
mov eax [ebx+100h] +
jmp loc_46D7FF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A0FEDh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46D845  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46D7E0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46D7E3  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46C1E0  +
mov edx [esp+98h+var_80] +
mov ecx ebp +
mov eax ebx +
call sub_46E4D0  +
jmp loc_46D5A6  +
mov eax [ebp+4] +
test esi esi +
mov [esp+98h+var_78] eax +
jnz loc_46C2AD  +
jmp loc_46C1E0  +
mov eax ebx +
mov edx offset aParm +
call sub_46BFB0  +
mov edx esi +
mov eax ebx +
call sub_46C040  +
mov edx 7Dh +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46C1E0  +
mov edx 2Eh +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46D3FE  +
mov edi [eax+0Ch] +
mov ebp [eax+8] +
test edi edi +
jz loc_46C1E0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46D934  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C1E0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_46D915  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_46D918  +
mov edx offset a_fract +
mov eax ebx +
call sub_46BFB0  +
jmp loc_46C1E0  +
mov edi [ebx+114h] +
mov ebp eax +
jmp loc_46D568  +
mov ebp [esp+98h+var_7C] +
mov eax [ebx+114h] +
mov edx [esp+98h+var_80] +
lea ecx [ebp+4] +
mov [esp+98h+var_98] eax +
mov eax ebx +
call sub_46EE50  +
jmp loc_46C1E0  +
mov edx [ebx+11Ch] +
jmp loc_46D9D1  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jz loc_46D9E6  +
cmp dword ptr [eax] 2Fh +
jnz loc_46D9E6  +
cmp edx 0 +
jg loc_46D9C2  +
jnz loc_46D9E6  +
mov eax [eax+4] +
test eax eax +
lea esi [esi+0] +
jnz loc_46CE69  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46C1E0  +
mov esi [esp+98h+var_80] +
lea ecx [ecx+8] +
mov eax [ebx+114h] +
and esi 0FFFFFF9Fh +
mov [esp+98h+var_98] eax +
mov edx esi +
mov eax ebx +
call sub_46F0D0  +
mov ecx [ebp+4] +
test ecx ecx +
jz loc_46C1E0  +
mov edx esi +
mov eax ebx +
call sub_46E490  +
jmp loc_46C1E0  +
mov edx 20h +
mov eax ebx +
call sub_46B8C0  +
mov esi [ebp+4] +
jmp loc_46C7D6  +
mov eax [ebx+100h] +
mov esi offset a_sat +
jmp loc_46DA73  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A1037h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46C91D  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46DA50  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_46DA53  +
mov esi [ebx+12Ch] +
mov edi [ebx+128h] +
test esi esi +
mov [esp+98h+var_78] edi +
jle loc_46DAF5  +
cmp eax [edi] +
jz loc_46E00B  +
lea edx [edi+8] +
xor ecx ecx +
jmp loc_46DAEE  +
mov edi edx +
add edx 8 +
cmp eax [edx-8] +
jz loc_46E00F  +
add ecx 1 +
cmp ecx esi +
jnz loc_46DAE0  +
cmp esi [ebx+130h] +
jge loc_46E42D  +
mov edi [esp+98h+var_78] +
lea ecx [edi+esi*8] +
mov edi [ebx+110h] +
add esi 1 +
mov [ebx+12Ch] esi +
add ecx 4 +
mov [ecx-4] eax +
test edi edi +
mov [esp+98h+var_6C] edi +
jz loc_46DB88  +
mov edi [ebx+138h] +
mov esi [ebx+13Ch] +
lea edx ds:0[edi*8] +
cmp esi edi +
mov [esp+98h+var_70] esi +
mov [esp+98h+var_78] edx +
jle loc_46E42D  +
mov [esp+98h+var_74] eax +
mov edx [esp+98h+var_6C] +
jmp loc_46DB61  +
add [esp+98h+var_78] 8 +
cmp edi [esp+98h+var_70] +
jz loc_46E423  +
mov eax [edx+4] +
add edi 1 +
mov esi [esp+98h+var_78] +
add esi [ebx+134h] +
mov [esi+4] eax +
mov [ecx] esi +
mov edx [edx] +
mov ecx esi +
test edx edx +
jnz loc_46DB52  +
mov eax [esp+98h+var_74] +
mov [ebx+138h] edi +
mov dword ptr [ecx] 0 +
cmp dword ptr [ebx+118h] 0 +
jnz loc_46C1E0  +
xor esi esi +
lea edx [eax+4] +
mov eax ebx +
call sub_46BE30  +
test eax eax +
jz loc_46DBE1  +
cmp dword ptr [eax] 2Fh +
jnz loc_46D545  +
mov edx [ebx+11Ch] +
jmp loc_46DBCF  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jz loc_46DBE1  +
cmp dword ptr [eax] 2Fh +
jnz loc_46DBE1  +
cmp edx 0 +
jg loc_46DBC0  +
jnz loc_46DBE1  +
mov eax [eax+4] +
test eax eax +
jnz loc_46D545  +
test esi esi +
jz loc_46DBEF  +
mov eax [esp+98h+var_7C] +
mov [ebx+110h] eax +
mov dword ptr [ebx+118h] 1 +
jmp loc_46C1E0  +
mov eax [esp+98h+var_78] +
mov edi offset aAd +
mov ecx 3 +
mov eax [eax+4] +
mov ebp [eax] +
mov eax [esp+98h+var_7C] +
mov esi ebp +
cmps   +
mov eax [eax] +
jnz loc_46DC26  +
cmp eax 3 +
jz loc_46E2BA  +
cmp eax 37h +
jz loc_46E398  +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46F660  +
test ebp ebp +
jz loc_46C761  +
mov edi offset aGs +
mov ecx 3 +
mov esi ebp +
cmps   +
jz loc_46DF6E  +
mov edi offset aSt +
mov ecx 3 +
mov esi ebp +
cmps   +
jnz loc_46C761  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46E312  +
lea edx [eax+1] +
mov ecx [esp+98h+var_7C] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_80] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
call sub_46E490  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46E2E0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_46C1E0  +
mov eax ebx +
mov edx 28h +
call sub_46B8C0  +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
add ecx 4 +
call sub_46F3E0  +
mov edx 29h +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46C761  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov byte ptr [ebx+eax] 0 +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_98] ebx +
call edx  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+120h] 1 +
jmp loc_46C8C4  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov esi [ecx+4] +
mov edi [ecx+8] +
add edi esi +
cmp esi edi +
jb loc_46DD7D  +
jmp loc_46C1E0  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46DDD8  +
lea ecx [edx+1] +
mov [ebx+100h] ecx +
mov [ebx+edx] al +
mov [ebx+104h] al +
add esi 1 +
cmp edi esi +
jbe loc_46C1E0  +
mov eax edi +
sub eax esi +
cmp eax 3 +
movzx eax byte ptr [esi] +
jle loc_46DD52  +
cmp al 5Fh +
jnz loc_46DD52  +
cmp byte ptr [esi+1] 5Fh +
jnz loc_46DD52  +
cmp byte ptr [esi+2] 55h +
jnz loc_46DD52  +
lea ebp [esi+3] +
cmp edi ebp +
jbe loc_46DD52  +
xor ecx ecx +
jmp loc_46DDBA  +
movsx eax dl +
sub eax 30h +
shl ecx 4 +
add ebp 1 +
add ecx eax +
cmp ebp edi +
jz loc_46E38E  +
movzx edx byte ptr [ebp+0] +
lea eax [edx-30h] +
cmp al 9 +
jbe loc_46DDA4  +
lea eax [edx-41h] +
cmp al 5 +
ja loc_46E090  +
movsx eax dl +
sub eax 37h +
jmp loc_46DDAA  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov [esp+98h+var_80] eax +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call edx  +
mov ecx 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov eax [esp+98h+var_80] +
jmp loc_46DD63  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46C1E0  +
mov edx offset aDefaultArg +
mov eax ebx +
mov [esp+98h+var_7C] ecx +
call sub_46BFB0  +
mov ecx [esp+98h+var_7C] +
mov eax [ecx+8] +
lea edx [eax+1] +
mov eax ebx +
call sub_46C040  +
mov edx offset asc_4A0EC7 +
mov eax ebx +
call sub_46BFB0  +
mov ecx [esp+98h+var_7C] +
mov ecx [ecx+4] +
jmp loc_46D40A  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_46C540  +
mov eax [ebx+114h] +
mov edx [esp+98h+var_80] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
and edx 0FFFFFF9Fh +
mov ecx [ebp+4] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_46E490  +
mov ecx [esp+98h+var_50] +
mov eax [esp+98h+var_58] +
test ecx ecx +
mov [ebx+114h] eax +
jnz loc_46C1E0  +
mov edx 20h +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46CB0F  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46C1A7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46C174  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
jmp loc_46C1E0  +
mov ecx [ecx+8] +
mov edi [ecx] +
test edi edi +
jnz loc_46C160  +
cmp eax 3Ch +
jz loc_46E43C  +
mov edx [esp+98h+var_80] +
mov eax ebx +
sub esi 2 +
call sub_46E490  +
cmp esi 4 +
ja loc_46C1E0  +
jmp ds:off_4A1248[esi*4]  +
mov edx offset aLl +
mov eax ebx +
call sub_46BFB0  +
jmp loc_46C1E0  +
mov edx offset aUl +
mov eax ebx +
call sub_46BFB0  +
jmp loc_46C1E0  +
mov edx 6Ch +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46C1E0  +
mov edx 75h +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46C1E0  +
mov edx offset aUll +
mov eax ebx +
call sub_46BFB0  +
jmp loc_46C1E0  +
mov edi [esp+98h+var_78] +
mov esi [ebx+124h] +
test esi esi +
jz loc_46E113  +
mov ecx [esi] +
cmp ecx eax +
jz loc_46DB9B  +
mov edx esi +
jmp loc_46E045  +
mov edx [edx+4] +
test edx edx +
jz loc_46E113  +
mov ecx [edx] +
cmp ecx eax +
jz loc_46DB9B  +
cmp ebp ecx +
jnz loc_46E030  +
cmp edx esi +
jz loc_46E030  +
lea esi [esi+0] +
jmp loc_46DB9B  +
mov ecx [eax+4] +
mov eax [ebx+114h] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
test ecx ecx +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+98h+var_4C] eax +
jnz loc_46D58F  +
jmp loc_46D58C  +
lea eax [edx-61h] +
cmp al 5 +
ja loc_46E3EE  +
movsx eax dl +
sub eax 57h +
jmp loc_46DDAA  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46C1E0  +
mov edx 20h +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46CF0E  +
mov edx 20h +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46CEE7  +
mov eax ebx +
mov edx 5Bh +
call sub_46B8C0  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+8] +
call sub_46E490  +
mov edx 5Dh +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46C1E0  +
mov edx 2Dh +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46C1C2  +
mov esi [ebx+110h] +
mov edx [edi+4] +
mov [esp+98h+var_7C] esi +
mov esi 1 +
mov [ebx+110h] edx +
jmp loc_46DB9D  +
mov eax [esp+98h+var_74] +
mov [ebx+114h] eax +
jmp loc_46C1E0  +
movzx edi byte ptr [edx] +
lea ecx [edi-63h] +
cmp cl 1 +
jbe loc_46E158  +
sub edi 72h +
mov ecx edi +
cmp cl 1 +
ja loc_46C675  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [esp+98h+var_7C] +
mov edx edi +
call sub_46F660  +
mov eax ebx +
mov edx 3Ch +
call sub_46B8C0  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+4] +
mov eax ebx +
call sub_46E490  +
mov eax ebx +
mov edx offset asc_4A1115 +
call sub_46BFB0  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+8] +
mov eax ebx +
call sub_46E490  +
mov edx 29h +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46C1E0  +
mov eax [esp+98h+var_74] +
jmp loc_46D9A4  +
mov esi [edx+4] +
mov edi offset aJarray +
mov ecx 6 +
cmps   +
jnz loc_46CECD  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+8] +
call sub_46E490  +
mov edx offset asc_4A0ED2 +
mov eax ebx +
call sub_46BFB0  +
jmp loc_46CF1A  +
mov eax ebx +
mov edx 5Bh +
call sub_46B8C0  +
mov eax [ebp+8] +
mov edx [esp+98h+var_80] +
mov ecx [eax+8] +
mov eax ebx +
call sub_46E490  +
mov edx 5Dh +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46C6FA  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46F660  +
jmp loc_46C6E9  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [esp+98h+var_7C] +
mov edx edi +
call sub_46F720  +
mov ecx ebp +
mov edx edi +
mov eax ebx +
call sub_46F660  +
mov ecx [esp+98h+var_78] +
mov edx edi +
mov eax ebx +
call sub_46F720  +
mov eax ebx +
mov edx offset asc_4A106E +
call sub_46BFB0  +
mov ecx [esp+98h+var_74] +
mov edx edi +
mov eax ebx +
call sub_46F720  +
jmp loc_46C1E0  +
mov eax [ecx+8] +
cmp dword ptr [eax] 29h +
jz loc_46E288  +
mov dword ptr [ebx+118h] 1 +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46F720  +
jmp loc_46C6A9  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+4] +
call sub_46F720  +
mov edx offset a___ +
mov eax ebx +
call sub_46BFB0  +
jmp loc_46C1E0  +
mov eax [esp+98h+var_7C] +
mov eax [eax+4] +
cmp dword ptr [eax] 1 +
jnz loc_46DC2F  +
mov edi [esp+98h+var_7C] +
mov edx [edi+8] +
cmp dword ptr [edx] 29h +
cmovnz eax edi +
mov [esp+98h+var_7C] eax +
jmp loc_46DC2F  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46DCB3  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46DC7F  +
mov eax [esp+98h+var_7C] +
mov [esp+98h+var_5C] esi +
mov [esp+98h+var_60] eax +
lea eax [esp+98h+var_60] +
mov [ebx+110h] eax +
jmp loc_46D026  +
xor edi edi +
xor esi esi +
jmp loc_46D568  +
mov dword ptr [ebx+118h] 1 +
jmp loc_46C1E0  +
mov eax [esp+98h+var_60] +
mov [ebx+110h] eax +
jmp loc_46D03D  +
mov ecx [ecx+4] +
jmp loc_46CFB6  +
mov eax 5Fh +
jmp loc_46DD52  +
mov eax [esp+98h+var_7C] +
mov edi [esp+98h+var_80] +
mov ecx [eax+4] +
mov eax ebx +
mov edx edi +
call sub_46F720  +
mov ecx [esp+98h+var_78] +
mov edx edi +
mov eax ebx +
call sub_46F660  +
jmp loc_46C1E0  +
cmp eax 3Bh +
jnz loc_46C160  +
mov eax [edx+4] +
movzx eax byte ptr [eax] +
cmp al 30h +
jz loc_46E478  +
cmp al 31h +
jnz loc_46C160  +
mov edx offset aTrue +
mov eax ebx +
call sub_46BFB0  +
jmp loc_46C1E0  +
cmp edi ebp +
mov eax 5Fh +
jbe loc_46DD52  +
cmp dl 5Fh +
jnz loc_46DD52  +
cmp ecx 0FFh +
mov eax edx +
ja loc_46DD52  +
movsx edx cl +
mov eax ebx +
call sub_46B8C0  +
mov esi ebp +
jmp loc_46DD72  +
mov eax [esp+98h+var_74] +
mov [ebx+138h] edi +
mov dword ptr [ebx+118h] 1 +
jmp loc_46DB8E  +
mov edx 2Dh +
mov eax ebx +
call sub_46B8C0  +
mov ecx [ebp+8] +
jmp loc_46DF98  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_46E490  +
mov eax [esp+98h+var_74] +
cmp [esp+98h+var_50] 0 +
mov [ebx+114h] eax +
jz loc_46D9A4  +
jmp loc_46C1E0  +
mov edx offset aFalse +
mov eax ebx +
call sub_46BFB0  +
jmp loc_46C1E0  +
***
sub esp 18h +
mov eax [eax+124h] +
mov [esp+18h+var_10] ecx +
mov [esp+18h+var_C] eax +
lea eax [esp+18h+var_10] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_46C0F0  +
mov eax [esp+18h+var_C] +
mov [ebx+124h] eax +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [ecx] +
mov [esp+3Ch+var_24] edx +
sub eax 3 +
cmp eax 2Ah +
ja loc_46E518  +
jmp ds:off_4A12A0[eax*4]  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46EB2E  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+8] +
mov eax [ebx+124h] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_46C0F0  +
mov eax [esp+3Ch+var_10] +
mov [ebx+124h] eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+100h] +
mov esi offset a__vector +
jmp loc_46E585  +
lea ebp [eax+1] +
add esi 1 +
mov edx edi +
cmp esi 4A129Ch +
mov [ebx+100h] ebp +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46EA60  +
mov eax ebp +
cmp eax 0FFh +
movzx edi byte ptr [esi] +
jnz loc_46E560  +
mov ebp [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_20] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ebp +
mov ebp 1 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+3Ch+var_20] +
add dword ptr [ebx+120h] 1 +
jmp loc_46E563  +
mov ecx [ecx+4] +
jmp loc_46E518  +
mov eax [ebx+100h] +
mov esi offset aRestrict +
jmp loc_46E608  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A1265h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46E545  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E5E5  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_46E5E8  +
mov eax [ebx+100h] +
mov esi offset aVolatile +
jmp loc_46E683  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A126Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46E545  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E660  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_46E663  +
mov eax [ebx+100h] +
mov esi offset aConst +
jmp loc_46E703  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A1276h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46E545  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E6E0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_46E6E3  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46EB6D  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
cmp eax 0FFh +
jz loc_46EAC0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 26h +
mov byte ptr [ebx+104h] 26h +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46EAF7  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
mov esi offset asc_4A1277 +
jmp loc_46E7F3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A1279h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46E545  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E7D0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_46E7D3  +
test byte ptr [esp+3Ch+var_24] 4 +
jnz loc_46E545  +
mov edx 2Ah +
mov eax ebx +
call sub_46B8C0  +
jmp loc_46E545  +
mov eax [ebx+100h] +
jmp loc_46E776  +
mov eax [ebx+100h] +
jmp loc_46E7C6  +
mov eax [ebx+100h] +
mov esi offset aComplex +
jmp loc_46E8B3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A1282h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46E545  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E890  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_46E893  +
mov eax [ebx+100h] +
mov esi offset aImaginary +
jmp loc_46E933  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A128Dh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46E545  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E910  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_46E913  +
cmp byte ptr [ebx+104h] 28h +
jz loc_46E9AE  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46EBDB  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov eax [ebx+124h] +
mov esi offset asc_4A128E +
mov ecx [ecx+4] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
mov [esp+3Ch+var_14] ecx +
call sub_46C0F0  +
mov eax [esp+3Ch+var_10] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
jmp loc_46EA13  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 4A1291h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46E545  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46E9F0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_46E9F3  +
mov eax [ebx+124h] +
mov ecx [ecx+4] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
mov [esp+3Ch+var_14] ecx +
call sub_46C0F0  +
mov eax [esp+3Ch+var_10] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46EBA4  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_46E545  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46E784  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46E7B5  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_20] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] esi +
mov esi 1 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+3Ch+var_20] +
add dword ptr [ebx+120h] 1 +
jmp loc_46E504  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46E765  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46EAA4  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_20] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] esi +
mov esi 1 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+3Ch+var_20] +
add dword ptr [ebx+120h] 1 +
jmp loc_46E99D  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
test ecx ecx +
mov [esp+2Ch+var_14] edx +
mov ebp [esp+2Ch+arg_0] +
jz loc_46ECA1  +
mov ecx [eax+118h] +
mov esi eax +
test ecx ecx +
jz loc_46EC4D  +
jmp loc_46ECA1  +
mov edx [esi+118h] +
test edx edx +
jnz loc_46ECA1  +
mov eax [ebx+8] +
test eax eax +
jnz loc_46EC9B  +
mov ecx [ebx+4] +
test ebp ebp +
mov eax [ecx] +
jnz loc_46EC65  +
lea edx [eax-1Ch] +
cmp edx 4 +
jbe loc_46EC9B  +
mov edx [ebx+0Ch] +
cmp eax 29h +
mov dword ptr [ebx+8] 1 +
mov edi [esi+110h] +
mov [esi+110h] edx +
jz loc_46ECA9  +
cmp eax 2Ah +
jz loc_46ECCA  +
cmp eax 2 +
jz loc_46ECEB  +
mov edx [esp+2Ch+var_14] +
mov eax esi +
call sub_46E4D0  +
mov [esi+110h] edi +
mov ebx [ebx] +
test ebx ebx +
jnz loc_46EC43  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 8 +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
mov eax esi +
call sub_46F0D0  +
mov [esi+110h] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 4 +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
mov eax esi +
call sub_46EE50  +
mov [esi+110h] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+114h] +
mov eax esi +
mov dword ptr [esi+114h] 0 +
mov edx [esp+2Ch+var_14] +
mov ecx [ecx+4] +
call sub_46E490  +
mov eax [esi+100h] +
test byte ptr [esp+2Ch+var_14] 4 +
mov [esi+114h] ebp +
jnz loc_46ED85  +
mov ebp offset asc_4A0EB6 +
mov [esp+2Ch+var_10] ebx +
jmp loc_46ED46  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp 4A0EB8h +
mov [esi+100h] ecx +
mov [esi+eax] bl +
mov [esi+104h] bl +
jz loc_46EDA2  +
mov eax ecx +
cmp eax 0FFh +
movzx ebx byte ptr [ebp+0] +
jnz loc_46ED27  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_2C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_46ED2A  +
cmp eax 0FFh +
jz loc_46EDDB  +
lea edx [eax+1] +
mov [esi+100h] edx +
mov byte ptr [esi+eax] 2Eh +
mov byte ptr [esi+104h] 2Eh +
jmp loc_46EDA6  +
mov ebx [esp+2Ch+var_10] +
mov eax [ebx+4] +
mov ecx [eax+8] +
mov eax [ecx] +
cmp eax 45h +
jnz loc_46EDBA  +
jmp loc_46EE0F  +
mov ecx [ecx+4] +
mov eax [ecx] +
sub eax 1Ch +
cmp eax 4 +
jbe loc_46EDB5  +
mov edx [esp+2Ch+var_14] +
mov eax esi +
call sub_46E490  +
mov [esi+110h] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] esi +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_46ED8F  +
mov edx offset aDefaultArg +
mov eax esi +
mov [esp+2Ch+var_10] ecx +
call sub_46BFB0  +
mov ecx [esp+2Ch+var_10] +
mov eax [ecx+8] +
lea edx [eax+1] +
mov eax esi +
call sub_46C040  +
mov edx offset asc_4A0EC7 +
mov eax esi +
call sub_46BFB0  +
mov ecx [esp+2Ch+var_10] +
jmp loc_46EDB5  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_46EE8A  +
mov edx [eax+8] +
test edx edx +
jz loc_46EF10  +
mov eax [eax] +
test eax eax +
jnz loc_46EE65  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_46EC20  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46EFD0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
cmp edx 0FFh +
jz loc_46F077  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 5Bh +
mov byte ptr [ebx+104h] 5Bh +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_46EEE5  +
mov eax ebx +
mov edx edi +
call sub_46E490  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46F040  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
cmp dword ptr [eax] 2Ah +
jz loc_46F0B0  +
mov eax [ebx+100h] +
mov esi offset unk_4A134C +
jmp loc_46EF4F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi offset unk_4A134E +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46EF95  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_46EF30  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+28h+var_1C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_28] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+28h+var_1C] +
jmp loc_46EF33  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_46EC20  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46F007  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_46EE90  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46EE9E  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46EFBA  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46EEF3  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46EEBE  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_46EC20  +
mov edx [ebx+100h] +
jmp loc_46EEAF  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov esi [esp+34h+arg_0] +
mov [esp+34h+var_28] ecx +
test esi esi +
jz loc_46F1B0  +
mov ebp [esi+8] +
test ebp ebp +
jnz loc_46F1B0  +
mov eax esi +
mov edx 1 +
jmp loc_46F11E  +
and ch 0Eh +
jnz loc_46F272  +
mov eax [eax] +
test eax eax +
jz loc_46F1B0  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_46F1B0  +
mov ecx [eax+4] +
mov ecx [ecx] +
sub ecx 19h +
cmp ecx 12h +
ja loc_46F109  +
mov ebp edx +
shl ebp cl +
test ebp 43107h +
mov ecx ebp +
jz loc_46F100  +
movzx eax byte ptr [ebx+104h] +
cmp al 20h +
jz loc_46F287  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46F3A4  +
lea eax [edx+1] +
cmp eax 0FFh +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jnz loc_46F298  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46F29B  +
mov ebp [ebx+114h] +
mov edx edi +
mov ecx esi +
mov dword ptr [ebx+114h] 0 +
mov eax ebx +
mov [esp+34h+var_34] 0 +
call sub_46EC20  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46F2FF  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 28h +
mov edx [esp+34h+var_28] +
mov byte ptr [ebx+104h] 28h +
mov ecx [edx] +
test ecx ecx +
jz loc_46F233  +
mov eax [ebx+124h] +
mov edx edi +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] eax +
lea eax [esp+34h+var_1C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_46C0F0  +
mov eax [esp+34h+var_18] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46F336  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 29h +
mov eax ebx +
mov byte ptr [ebx+104h] 29h +
mov [esp+34h+var_34] 1 +
call sub_46EC20  +
mov [ebx+114h] ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+104h] +
mov edx eax +
and edx 0FFFFFFFDh +
cmp dl 28h +
jnz loc_46F140  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46F179  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ebp [ebx+114h] +
mov ecx esi +
mov byte ptr [ebx+eax] 28h +
mov edx edi +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov dword ptr [ebx+114h] 0 +
mov [esp+34h+var_34] 0 +
call sub_46EC20  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46F36D  +
lea edx [eax+1] +
cmp edx 0FFh +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jnz loc_46F1E4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46F1E7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46F241  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46F2E2  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46F15D  +
***
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+140h] +
test eax eax +
jz loc_46F40F  +
mov edx [ebx+110h] +
mov [esp+34h+var_20] eax +
mov [esp+34h+var_24] edx +
lea edx [esp+34h+var_24] +
mov [ebx+110h] edx +
mov ecx [esi] +
cmp dword ptr [ecx] 4 +
jz loc_46F460  +
mov eax [ebx+124h] +
mov edx edi +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] eax +
lea eax [esp+34h+var_1C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_46C0F0  +
mov edx [ebx+140h] +
mov eax [esp+34h+var_18] +
test edx edx +
mov [ebx+124h] eax +
jz loc_46F455  +
mov eax [esp+34h+var_24] +
mov [ebx+110h] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+124h] +
lea ebp [esp+34h+var_1C] +
mov edx edi +
mov ecx [ecx+4] +
mov [ebx+124h] ebp +
mov [esp+34h+var_18] eax +
mov eax ebx +
mov [esp+34h+var_1C] ecx +
call sub_46C0F0  +
mov eax [esp+34h+var_18] +
mov [ebx+124h] eax +
mov eax [ebx+140h] +
test eax eax +
jz loc_46F4A2  +
mov eax [esp+34h+var_24] +
mov [ebx+110h] eax +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_46F5A7  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46F532  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx edi +
mov byte ptr [ebx+eax] 3Ch +
mov byte ptr [ebx+104h] 3Ch +
mov eax [esi] +
mov ecx [eax+8] +
mov eax [ebx+124h] +
mov [ebx+124h] ebp +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] eax +
mov eax ebx +
call sub_46C0F0  +
mov eax [esp+34h+var_18] +
cmp byte ptr [ebx+104h] 3Eh +
mov [ebx+124h] eax +
jz loc_46F5D0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46F570  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov byte ptr [ebx+104h] 3Eh +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46F4BF  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46F519  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46F5F7  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_46F4B5  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46F62B  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_46F50F  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46F5B8  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_46F5E1  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
cmp dword ptr [ecx] 31h +
jz loc_46F6A0  +
mov eax [eax+124h] +
mov [esp+2Ch+var_14] ecx +
mov [esp+2Ch+var_10] eax +
lea eax [esp+2Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_46C0F0  +
mov eax [esp+2Ch+var_10] +
mov [ebx+124h] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ecx+4] +
mov edi [eax+8] +
mov ebp [eax+4] +
test edi edi +
jz loc_46F697  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46F6D2  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46F697  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_46F6B7  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_20] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_20] +
jmp loc_46F6BA  +
***
mov ebx eax +
sub esp 34h +
mov eax [ecx] +
cmp eax 1 +
jbe loc_46F733  +
cmp eax 30h +
jnz loc_46F762  +
mov eax [ebx+124h] +
mov [esp+34h+var_C] ecx +
mov [esp+34h+var_8] eax +
lea eax [esp+34h+var_C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_46C0F0  +
mov eax [esp+34h+var_8] +
mov [ebx+124h] eax +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
cmp eax 6 +
jz loc_46F733  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46F814  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 28h +
mov eax [ebx+124h] +
mov byte ptr [ebx+104h] 28h +
mov [esp+34h+var_C] ecx +
mov [esp+34h+var_8] eax +
lea eax [esp+34h+var_C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_46C0F0  +
mov eax [esp+34h+var_8] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46F7E0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46F7C5  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+34h+var_18] ecx +
mov [esp+34h+var_1C] edx +
mov [esp+34h+var_2C] esi +
mov esi 1 +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_34] ebx +
call eax  +
xor eax eax +
mov ecx [esp+34h+var_18] +
add dword ptr [ebx+120h] 1 +
mov edx [esp+34h+var_1C] +
jmp loc_46F77B  +
***
mov edx [esp+4] +
xor eax eax +
test edx edx +
jz locret_46F894  +
mov ecx [esp+8] +
test ecx ecx +
jz locret_46F894  +
mov ecx [esp+0Ch] +
test ecx ecx +
jz locret_46F894  +
mov eax [esp+8] +
mov dword ptr [edx] 0 +
mov [edx+4] eax +
mov eax [esp+0Ch] +
mov [edx+8] eax +
mov eax 1 +
retn   +
***
retn   +
***
push ebx  +
mov eax [esp+8] +
mov ecx [esp+0Ch] +
mov edx [esp+10h] +
test eax eax +
jz loc_46F8D1  +
mov ebx ecx +
shr ebx 1Fh +
test bl bl +
jnz loc_46F8D1  +
test edx edx +
jz loc_46F8D1  +
mov dword ptr [eax] 32h +
mov [eax+4] ecx +
mov [eax+8] edx +
mov eax 1 +
pop ebx  +
retn   +
***
xor eax eax +
pop ebx  +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_46F918  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_46F918  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_46F91A  +
mov eax [esp+8] +
mov dword ptr [edx] 7 +
mov [edx+4] eax +
mov eax [esp+0Ch] +
mov [edx+8] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_46F958  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_46F958  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_46F95A  +
mov eax [esp+8] +
mov dword ptr [edx] 8 +
mov [edx+4] eax +
mov eax [esp+0Ch] +
mov [edx+8] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov ecx [ebx+0Ch] +
movsx eax byte ptr [ecx] +
cmp al 72h +
jz loc_46FAB0  +
cmp al 56h +
jz loc_46FAB0  +
cmp al 4Bh +
jz loc_46FAB0  +
lea edx [eax-30h] +
cmp dl 4Ah +
ja loc_46FAA3  +
movzx edx dl +
jmp ds:off_4A135C[edx*4]  +
mov eax [ebx+34h] +
mov dword ptr [ebx+34h] 1 +
mov [esp+2Ch+var_24] eax +
movzx eax byte ptr [ecx+2] +
cmp al 4Ch +
jz loc_47069D  +
cmp al 54h +
jz loc_47068F  +
cmp al 73h +
jz loc_470415  +
cmp al 66h +
nop   +
lea esi [esi+0] +
jz loc_470452  +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_470378  +
cmp al 6Fh +
jz loc_470368  +
cmp al 74h +
setz dl  +
jnz loc_470B11  +
cmp byte ptr [ecx+3] 6Ch +
jz loc_47084F  +
mov eax ebx +
call sub_470CA0  +
test eax eax +
mov esi eax +
jz loc_470622  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_4706AB  +
cmp ecx 32h +
jz loc_470987  +
cmp ecx 33h +
jnz loc_470622  +
xor ebp ebp +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_470A75  +
mov eax ebx +
call sub_474490  +
test ebp ebp +
mov [esp+2Ch+var_2C] eax +
jz loc_46FA5A  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
mov eax [esp+2Ch+var_24] +
mov edx 41h +
mov [ebx+34h] eax +
mov eax ebx +
mov [esp+2Ch+var_2C] 0 +
call sub_46B660  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_46FAA3  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_46FAA3  +
lea ecx [edx+1] +
mov [ebx+0Ch] ecx +
cmp byte ptr [edx] 45h +
jz loc_46FB68  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
mov eax ebx +
lea edx [esp+2Ch+var_10] +
call sub_46B710  +
test eax eax +
mov esi eax +
jz loc_46FAA3  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_46FB10  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov edx eax +
mov [esi] eax +
test edx edx +
jz loc_46FAA3  +
mov eax [edx] +
sub eax 1Fh +
cmp eax 1 +
jbe loc_46FB20  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jz loc_46FAA3  +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
jge loc_46FAA3  +
mov ecx [ebx+1Ch] +
mov [ecx+eax*4] edx +
add eax 1 +
mov [ebx+20h] eax +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_4712B0  +
mov edx eax +
mov [esi] eax +
jmp loc_46FAD7  +
mov ecx [esp+2Ch+var_10] +
mov eax [edx+4] +
mov [edx+4] ecx +
mov edx [esi] +
mov [esp+2Ch+var_10] edx +
mov [esi] eax +
jmp loc_46FAE5  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_46BAA0  +
mov edx 28h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_10] eax +
lea esi [esi+0] +
test eax eax +
jz loc_46FAA3  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_46FAA3  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax [esp+2Ch+var_10] +
mov [ebx+20h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_471A30  +
mov [esp+2Ch+var_10] eax +
jmp loc_46FB60  +
lea edx [ecx+1] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [ecx+1] +
cmp al 5Fh +
jz loc_470113  +
sub eax 30h +
cmp al 9 +
ja loc_47015A  +
mov ecx edx +
nop   +
add ecx 1 +
mov [ebx+0Ch] ecx +
movzx eax byte ptr [ecx] +
sub eax 30h +
cmp al 9 +
jbe loc_46FBC0  +
sub ecx edx +
mov eax ebx +
call sub_46B6C0  +
test eax eax +
mov esi eax +
jz loc_46FBEB  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_470115  +
xor eax eax +
jmp loc_46FCC9  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov edx 25h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_10] eax +
jmp loc_46FB60  +
mov eax ebx +
call sub_4712B0  +
mov [esp+2Ch+var_10] eax +
jmp loc_46FB60  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov edx 26h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_10] eax +
jmp loc_46FB60  +
lea eax [ecx+1] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+1] 0 +
jz loc_46FAA3  +
lea eax [ecx+2] +
mov [ebx+0Ch] eax +
movzx eax byte ptr [ecx+1] +
sub eax 46h +
cmp al 30h +
ja loc_46FAA3  +
movzx eax al +
jmp ds:off_4A1488[eax*4]  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
test eax eax +
mov esi eax +
jz loc_46FBEB  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
test eax eax +
jz loc_46FBEB  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 2Bh +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_10] eax +
jmp loc_46FB60  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov edx 24h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_10] eax +
jmp loc_46FB60  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov edx 22h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_10] eax +
jmp loc_46FB60  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov edx 23h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_10] eax +
jmp loc_46FB60  +
movzx eax byte ptr [ecx+1] +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_46FD7B  +
cmp al 5Fh +
jz loc_46FD7B  +
sub eax 41h +
cmp al 19h +
ja loc_470139  +
xor edx edx +
mov eax ebx +
call sub_46BBC0  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [edx] 49h +
jnz loc_46FAA5  +
mov eax ebx +
call sub_471300  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_10] eax +
jmp loc_46FB60  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_46BAA0  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_470237  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov edx 21h +
mov [esp+2Ch+var_2C] esi +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_10] eax +
jmp loc_46FB60  +
mov edx [ebx+14h] +
lea eax [eax+eax*4-1E5h] +
cmp edx [ebx+18h] +
lea esi ds:4A1BA0h[eax*4] +
jl loc_4700E1  +
mov esi large ds:4 +
xor eax eax +
mov edx [esi+4] +
add ecx 1 +
add [ebx+30h] edx +
mov [ebx+0Ch] ecx +
jmp loc_46FAA5  +
mov eax ebx +
call sub_46BA20  +
mov esi [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [esi] 49h +
jnz loc_46FB60  +
mov edx [ebx+38h] +
test edx edx +
jnz loc_47025C  +
test eax eax +
jz loc_46FAA3  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_46FAA3  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax ebx +
mov [ebx+20h] edx +
call sub_471300  +
jmp loc_46FD9B  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_470106  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_470C85  +
mov dword ptr [eax] 27h +
mov edx offset off_4A1E0C +
mov dword ptr [eax+4] offset off_4A1E0C +
mov edx [edx+4] +
add [ebx+30h] edx +
jmp loc_46FAA5  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_470106  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_470C85  +
mov dword ptr [eax] 27h +
mov edx offset off_4A1DE4 +
mov dword ptr [eax+4] offset off_4A1DE4 +
jmp loc_46FEB3  +
mov eax ebx +
call sub_474A40  +
jmp loc_46FCC9  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_470106  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_470C85  +
mov dword ptr [eax] 27h +
mov edx offset off_4A1DF8 +
mov dword ptr [eax+4] offset off_4A1DF8 +
jmp loc_46FEB3  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_10] eax +
jmp loc_46FB60  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_470106  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_470C85  +
mov dword ptr [eax] 27h +
mov edx offset off_4A1E20 +
mov dword ptr [eax+4] offset off_4A1E20 +
jmp loc_46FEB3  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_470106  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_470C85  +
mov dword ptr [eax] 27h +
mov edx offset off_4A1DBC +
mov dword ptr [eax+4] offset off_4A1DBC +
jmp loc_46FEB3  +
mov ecx 4 +
mov edx offset aAuto +
mov eax ebx +
call sub_46B6C0  +
jmp loc_46FAA5  +
mov eax [ebx+14h] +
xor esi esi +
cmp eax [ebx+18h] +
jge loc_470004  +
mov edx [ebx+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebx+14h] eax +
lea esi [edx+esi*4] +
mov [esp+2Ch+var_10] esi +
mov dword ptr [esi] 2Ch +
movzx eax byte ptr [ecx+2] +
sub eax 30h +
cmp al 9 +
setbe al  +
movzx eax al +
test ax ax +
mov [esi+8] ax +
jnz loc_4703BA  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov [esi+4] eax +
mov eax [esp+2Ch+var_10] +
mov eax [eax+4] +
test eax eax +
jz loc_46FAA3  +
lea eax [ebx+0Ch] +
call sub_46B940  +
mov eax [ebx+0Ch] +
xor edx edx +
cmp byte ptr [eax] 0 +
jz loc_470064  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
xor edx edx +
cmp byte ptr [eax] 73h +
setz dl  +
mov eax [esp+2Ch+var_10] +
mov [eax+0Ah] dx +
jmp loc_46FAA5  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_470106  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_470C85  +
mov dword ptr [eax] 27h +
mov edx offset off_4A1DA8 +
mov dword ptr [eax+4] offset off_4A1DA8 +
jmp loc_46FEB3  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_470106  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_470C85  +
mov dword ptr [eax] 27h +
mov edx offset off_4A1DD0 +
mov dword ptr [eax+4] offset off_4A1DD0 +
jmp loc_46FEB3  +
mov eax [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+edi*4] +
test eax eax +
jz loc_470C90  +
mov dword ptr [eax] 27h +
mov [eax+4] esi +
jmp loc_46FE1A  +
mov edx large ds:4 +
xor eax eax +
jmp loc_46FEB3  +
xor esi esi +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov ecx esi +
mov edx 2Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
jmp loc_46FCC9  +
mov eax ebx +
call sub_471A30  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_46FAA3  +
cmp dword ptr [eax] 18h +
jnz loc_46FB68  +
jmp loc_46FAA5  +
mov edi [ebx+34h] +
mov dword ptr [ebx+34h] 1 +
movzx eax byte ptr [ecx+1] +
cmp al 4Ch +
jz loc_4703F4  +
cmp al 54h +
jz loc_4704A6  +
cmp al 73h +
jz loc_4702D8  +
cmp al 66h +
jz loc_470315  +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_4702B3  +
cmp al 6Fh +
jz loc_4702A3  +
cmp al 74h +
setz dl  +
jnz loc_470C74  +
cmp byte ptr [ecx+2] 6Ch +
jz loc_4704B4  +
mov eax ebx +
call sub_470CA0  +
test eax eax +
mov esi eax +
jz loc_47040A  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_4705C2  +
cmp ecx 32h +
jz loc_4704E6  +
cmp ecx 33h +
jnz loc_47040A  +
mov [esp+2Ch+var_24] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_470A5E  +
mov eax ebx +
call sub_474490  +
cmp [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] eax +
jz loc_470215  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_46B660  +
mov esi eax +
test esi esi +
mov [ebx+34h] edi +
jnz loc_46FBDF  +
xor eax eax +
jmp loc_46FCC9  +
mov eax ebx +
call sub_471300  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_10] eax +
mov esi eax +
jmp loc_46FDD6  +
mov eax [ebx+28h] +
mov ebp [ebx+14h] +
mov edi [ebx+20h] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+30h] +
mov [esp+2Ch+var_20] eax +
mov eax ebx +
call sub_471300  +
mov ecx [ebx+0Ch] +
cmp byte ptr [ecx] 49h +
jz loc_4703CB  +
mov eax [esp+2Ch+var_24] +
mov [ebx+0Ch] esi +
mov [ebx+14h] ebp +
mov [ebx+20h] edi +
mov [ebx+28h] eax +
mov eax [esp+2Ch+var_20] +
mov [ebx+30h] eax +
mov eax [esp+2Ch+var_10] +
jmp loc_46FB60  +
cmp byte ptr [ecx+2] 6Eh +
jnz loc_4701B1  +
add ecx 3 +
mov [ebx+0Ch] ecx +
mov eax ebx +
call sub_470F10  +
test eax eax +
mov esi eax +
jz loc_47040A  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
jz loc_4705FB  +
mov [ebx+34h] edi +
jmp loc_46FBE2  +
movzx eax byte ptr [ecx+2] +
cmp al 72h +
jz loc_470652  +
cmp al 70h +
jnz loc_4701B1  +
add ecx 3 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_474490  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_470225  +
cmp byte ptr [ecx+2] 70h +
jnz loc_4701B1  +
lea eax [ecx+3] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+3] 54h +
jnz loc_470881  +
add ecx 4 +
xor edx edx +
mov [ebx+0Ch] ecx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_47040A  +
imul esi eax +
add eax 1 +
add esi [ebx+10h] +
mov [ebx+14h] eax +
test esi esi +
jz loc_47040A  +
mov [esi+4] edx +
mov edx [ebx+0Ch] +
mov dword ptr [esi] 6 +
jmp loc_4702D0  +
cmp byte ptr [ecx+3] 6Eh +
jnz loc_46F9FF  +
add ecx 4 +
mov [ebx+0Ch] ecx +
mov eax ebx +
call sub_470F10  +
test eax eax +
jz loc_470622  +
mov edx [ebx+0Ch] +
mov ecx eax +
cmp byte ptr [edx] 49h +
jnz loc_46FA6A  +
mov [esp+2Ch+var_20] eax +
mov eax ebx +
call sub_471300  +
mov ecx [esp+2Ch+var_20] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_46FA6A  +
lea eax [ebx+0Ch] +
call sub_46B940  +
mov esi [esp+2Ch+var_10] +
jmp loc_47002A  +
mov ecx [esp+2Ch+var_10] +
test ecx ecx +
jz loc_46FAA3  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_46FAA3  +
mov esi [ebx+1Ch] +
mov [esi+edx*4] ecx +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_46FD9B  +
mov eax ebx +
call sub_472500  +
mov esi eax +
jmp loc_470225  +
cmp al 77h +
jz loc_47053A  +
mov [ebx+34h] edi +
xor eax eax +
nop   +
jmp loc_46FCC9  +
movzx eax byte ptr [ecx+3] +
cmp al 72h +
jz loc_47094A  +
cmp al 70h +
jnz loc_46F9FF  +
add ecx 4 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_474490  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_46FA6A  +
cmp byte ptr [ecx+3] 70h +
jnz loc_46F9FF  +
lea eax [ecx+4] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+4] 54h +
jnz loc_4708DF  +
add ecx 5 +
xor esi esi +
mov [ebx+0Ch] ecx +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_470622  +
imul eax edx +
xor ecx ecx +
add eax [ebx+10h] +
add edx 1 +
mov [ebx+14h] edx +
test eax eax +
jz loc_46FA6A  +
mov dword ptr [eax] 6 +
mov ecx eax +
mov [eax+4] esi +
jmp loc_46FA6A  +
mov eax ebx +
call sub_46BA20  +
mov esi eax +
jmp loc_470225  +
xor esi esi +
test dl dl +
jnz loc_470928  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_472720  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_470225  +
mov eax [eax+4] +
xor ebp ebp +
cmp eax 1 +
jz loc_470BE5  +
jle loc_470629  +
cmp eax 2 +
jz loc_4707B1  +
cmp eax 3 +
jnz loc_47040A  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jz loc_470908  +
cmp byte ptr [ebp+0] 6Eh +
jnz loc_47040A  +
movzx eax byte ptr [ebp+1] +
cmp al 61h +
jnz loc_470402  +
mov edx 5Fh +
mov eax ebx +
call sub_472720  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
call sub_46F960  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_470C59  +
cmp dl 70h +
jz loc_470C38  +
cmp dl 69h +
jnz loc_47040A  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_47040A  +
mov eax ebx +
call sub_474490  +
mov [esp+2Ch+var_2C] eax +
mov ecx ebp +
mov edx 3Ah +
mov eax ebx +
call sub_46B660  +
mov ecx [esp+2Ch+var_24] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_470225  +
mov eax [eax+4] +
mov [esp+2Ch+var_24] ecx +
mov ebp [eax] +
mov eax [eax+8] +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
mov ecx [esp+2Ch+var_24] +
test eax eax +
jz loc_4708F8  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
jmp loc_4704EB  +
mov eax ebx +
call sub_471300  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_470225  +
cmp al 77h +
jz loc_47072D  +
xor ecx ecx +
jmp loc_46FA6A  +
test eax eax +
nop   +
lea esi [esi+0] +
jnz loc_47040A  +
mov ecx esi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_470225  +
add ecx 3 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov esi eax +
mov eax ebx +
call sub_470F10  +
mov ebp eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4708BF  +
mov [esp+2Ch+var_2C] ebp +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_470225  +
mov eax ebx +
call sub_46BA20  +
mov ecx eax +
jmp loc_46FA6A  +
mov eax ebx +
call sub_472500  +
mov ecx eax +
jmp loc_46FA6A  +
mov eax [eax+4] +
mov [esp+2Ch+var_20] ecx +
mov edi [eax] +
mov eax [eax+8] +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
mov ecx [esp+2Ch+var_20] +
test eax eax +
jz loc_470B72  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_470B44  +
jle loc_470A2B  +
cmp eax 2 +
jz loc_470991  +
cmp eax 3 +
jnz loc_470622  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_470BC7  +
cmp byte ptr [edi] 6Eh +
jnz loc_470622  +
movzx eax byte ptr [edi+1] +
cmp al 61h +
jnz loc_47061A  +
mov edx 5Fh +
mov eax ebx +
call sub_472720  +
mov [esp+2Ch+var_2C] ebx +
mov edi eax +
call sub_46F960  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_470BBA  +
cmp dl 70h +
jz loc_470B99  +
cmp dl 69h +
jnz loc_470622  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_470622  +
mov eax ebx +
call sub_474490  +
mov [esp+2Ch+var_2C] eax +
mov ecx ebp +
mov edx 3Ah +
mov eax ebx +
call sub_46B660  +
mov ecx edi +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_46FA6A  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_470898  +
mov eax ebx +
call sub_474490  +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jz loc_470937  +
mov [esp+2Ch+var_28] offset unk_4A134F +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jz loc_47080F  +
mov [esp+2Ch+var_28] offset unk_4A1352 +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jnz loc_470C66  +
mov eax ebx +
call sub_470F10  +
mov ebp eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_470B25  +
mov ecx [esp+2Ch+var_24] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_46B660  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_470225  +
xor esi esi +
test dl dl +
jnz loc_470A4F  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_472720  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_46FA6A  +
mov eax ebx +
call sub_46B9E0  +
add eax 1 +
mov edx eax +
jnz loc_470337  +
jmp loc_47040A  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_4708AE  +
sub eax 72h +
cmp al 1 +
ja loc_4707C0  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov [esp+2Ch+var_24] eax +
jmp loc_4707CB  +
mov eax ebx +
call sub_471300  +
mov ecx ebp +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_2C] eax +
jmp loc_47067A  +
mov eax ebx +
call sub_46B9E0  +
add eax 1 +
mov esi eax +
jnz loc_470474  +
xor ecx ecx +
jmp loc_46FA6A  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov [esp+2Ch+var_2C] eax +
jmp loc_470215  +
mov eax ebx +
call sub_474490  +
mov [esp+2Ch+var_24] eax +
mov eax ebx +
call sub_474490  +
mov ebp eax +
mov eax ebx +
call sub_474490  +
jmp loc_470586  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov esi eax +
jmp loc_4704BE  +
mov edx 45h +
mov eax ebx +
call sub_472720  +
mov ebp eax +
jmp loc_470824  +
add ecx 4 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov esi eax +
mov eax ebx +
call sub_470F10  +
mov ebp eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_470A8C  +
mov [esp+2Ch+var_2C] ebp +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_46FA6A  +
mov eax [eax+4] +
xor edi edi +
jmp loc_4706DF  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_470ABF  +
mov eax ebx +
call sub_474490  +
mov ebp eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_470AAC  +
mov [esp+2Ch+var_28] offset unk_4A134F +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_4709ED  +
mov [esp+2Ch+var_28] offset unk_4A1352 +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jnz loc_470AE4  +
mov eax ebx +
call sub_470F10  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_470AF2  +
mov ecx ebp +
mov edx 37h +
mov [esp+2Ch+var_2C] edi +
mov eax ebx +
call sub_46B660  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_46FA6A  +
test eax eax +
jnz loc_470622  +
mov ecx esi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_46FA6A  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov esi eax +
jmp loc_470859  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_472720  +
jmp loc_4701FA  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_472720  +
jmp loc_46FA42  +
mov eax ebx +
call sub_471300  +
mov ecx ebp +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_2C] eax +
jmp loc_470972  +
mov edx 45h +
mov eax ebx +
call sub_472720  +
mov edi eax +
jmp loc_470A02  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_470AD5  +
sub eax 72h +
cmp al 1 +
ja loc_4709A0  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov ebp eax +
jmp loc_4709A9  +
mov eax ebx +
call sub_474490  +
mov edi eax +
jmp loc_470A02  +
mov eax ebx +
call sub_471300  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov edi eax +
jmp loc_470A02  +
cmp al 69h +
jz loc_46F9F5  +
lea esi [esi+0] +
jmp loc_46F9FF  +
mov eax ebx +
call sub_471300  +
mov ecx ebp +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ebp eax +
jmp loc_470824  +
xor ebp ebp +
test edi edi +
jz loc_470B58  +
movzx eax byte ptr [edi] +
cmp al 6Dh +
jnz loc_470B66  +
xor ebp ebp +
cmp al [edi+1] +
jz loc_470B82  +
cmp ecx 33h +
jnz loc_46FA3B  +
jmp loc_46FA2F  +
cmp al 70h +
jnz loc_470B58  +
lea esi [esi+0] +
jmp loc_470B51  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46FA5A  +
mov eax [ebx+0Ch] +
mov bp 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_470B58  +
add eax 1 +
xor bp bp +
mov [ebx+0Ch] eax +
jmp loc_470B58  +
cmp byte ptr [eax+1] 69h +
jnz loc_470622  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_472720  +
jmp loc_470777  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_470777  +
mov eax ebx +
call sub_474490  +
mov edi eax +
mov eax ebx +
call sub_474490  +
mov ebp eax +
mov eax ebx +
call sub_474490  +
jmp loc_470777  +
test ebp ebp +
mov [esp+2Ch+var_24] 0 +
jz loc_470BFD  +
movzx eax byte ptr [ebp+0] +
cmp al 6Dh +
jz loc_470C0B  +
cmp al 70h +
jz loc_470C0B  +
cmp ecx 33h +
jnz loc_4701F3  +
jmp loc_4701E7  +
cmp al [ebp+1] +
mov [esp+2Ch+var_24] 0 +
jnz loc_470BFD  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_24] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_470BFD  +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_24] 0 +
jmp loc_470BFD  +
cmp byte ptr [eax+1] 69h +
jnz loc_47040A  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_472720  +
jmp loc_470586  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_470586  +
mov eax ebx +
call sub_474490  +
mov ebp eax +
jmp loc_470824  +
cmp al 69h +
jz loc_4701A7  +
lea esi [esi+0] +
jmp loc_4701B1  +
mov edx large ds:4 +
jmp loc_46FEB3  +
mov esi large ds:4 +
jmp loc_46FE1A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+1Ch+var_10] eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_470D44  +
mov esi [esp+1Ch+var_10] +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx edi byte ptr [eax] +
cmp byte ptr [eax+1] 0 +
jz loc_470E34  +
lea edx [eax+2] +
mov [esi+0Ch] edx +
movzx eax byte ptr [eax+1] +
mov [esp+1Ch+var_11] al +
mov eax edi +
cmp al 76h +
jnz loc_470DB6  +
movzx eax [esp+1Ch+var_11] +
sub eax 30h +
cmp al 9 +
ja loc_470D4B  +
mov edi [esp+1Ch+var_10] +
mov eax edi +
call sub_46BAA0  +
mov edx [edi+14h] +
cmp edx [edi+18h] +
jge loc_470DAC  +
mov esi [esp+1Ch+var_10] +
lea ebx [edx+edx*2] +
add edx 1 +
mov ecx [esi+10h] +
mov [esi+14h] edx +
lea ecx [ecx+ebx*4] +
test ecx ecx +
jz loc_470DAC  +
test eax eax +
jz loc_470DAC  +
movsx edx [esp+1Ch+var_11] +
mov [ecx+8] eax +
mov eax ecx +
mov dword ptr [ecx] 32h +
sub edx 30h +
mov [ecx+4] edx +
jmp loc_470DAE  +
xor edi edi +
mov [esp+1Ch+var_11] 0 +
mov ebx 3Dh +
xor eax eax +
mov [esp+1Ch+var_18] ebx +
jmp loc_470D68  +
mov ebx edi +
cmp cl bl +
jle loc_470DA3  +
mov [esp+1Ch+var_18] edx +
cmp eax [esp+1Ch+var_18] +
jz loc_470DAC  +
mov edx [esp+1Ch+var_18] +
mov ebx edi +
sub edx eax +
mov ecx edx +
shr ecx 1Fh +
add edx ecx +
sar edx 1 +
add edx eax +
mov ecx edx +
shl ecx 4 +
mov esi ds:off_4A1FC0[ecx] +
lea ebp off_4A1FC0[ecx] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_470D58  +
movzx ecx byte ptr [esi+1] +
cmp [esp+1Ch+var_11] cl +
jz loc_470E00  +
cmp cl [esp+1Ch+var_11] +
jg loc_470D5E  +
lea eax [edx+1] +
cmp eax [esp+1Ch+var_18] +
jnz loc_470D68  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+1Ch+var_11] 76h +
jnz loc_470D4B  +
mov eax edi +
cmp al 63h +
jnz loc_470D4B  +
mov edi [esp+1Ch+var_10] +
mov eax [edi+34h] +
mov ebx [edi+38h] +
test eax eax +
setz al  +
movzx eax al +
mov [edi+38h] eax +
mov [esp+1Ch+var_1C] edi +
call sub_46F960  +
mov edx 33h +
mov [edi+38h] ebx +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax edi +
call sub_46B660  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+1Ch+var_10] +
xor eax eax +
mov ecx [edi+14h] +
cmp ecx [edi+18h] +
jge loc_470DAE  +
mov edx [edi+10h] +
lea ebx [ecx+ecx*2] +
add ecx 1 +
mov [edi+14h] ecx +
lea edx [edx+ebx*4] +
test edx edx +
jz loc_470DAE  +
mov dword ptr [edx] 31h +
mov eax edx +
mov [edx+4] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_11] 0 +
jmp loc_470CDC  +
***
mov ebx eax +
sub esp 24h +
mov eax [eax+0Ch] +
mov [esp+24h+var_8] 0 +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_470EE0  +
cmp dl 45h +
jz loc_470EE0  +
cmp dl 2Eh +
jz loc_470EE0  +
lea esi [esp+24h+var_8] +
jmp loc_470EB4  +
cmp byte ptr [eax+1] 45h +
jz loc_470EC4  +
mov [esp+24h+var_24] ebx +
call sub_46F960  +
test eax eax +
jz loc_470EE0  +
mov ecx eax +
mov edx 2Eh +
mov [esp+24h+var_24] 0 +
mov eax ebx +
call sub_46B660  +
test eax eax +
mov [esi] eax +
jz loc_470EE0  +
lea esi [eax+8] +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_470EC4  +
cmp dl 45h +
jz loc_470EC4  +
cmp dl 2Eh +
jz loc_470EC4  +
cmp dl 4Fh +
jz loc_470E70  +
cmp dl 52h +
jnz loc_470E76  +
cmp byte ptr [eax+1] 45h +
jnz loc_470E76  +
mov eax [esp+24h+var_8] +
test eax eax +
jz loc_470EE0  +
mov edx [eax+8] +
test edx edx +
jz loc_470EE8  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov edx [eax+4] +
cmp dword ptr [edx] 27h +
jnz loc_470ED3  +
mov edx [edx+4] +
cmp dword ptr [edx+10h] 9 +
jnz loc_470ED3  +
mov edx [edx+4] +
sub [ebx+30h] edx +
mov dword ptr [eax+4] 0 +
jmp loc_470ED3  +
***
push esi  +
mov ebx eax +
sub esp 14h +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 4Ah +
jz loc_471287  +
xor esi esi +
test edx edx +
jnz loc_47128D  +
mov eax ebx +
call sub_470E40  +
test eax eax +
jz loc_4712A0  +
mov [esp+14h+var_14] eax +
mov ecx esi +
mov edx 29h +
mov eax ebx +
call sub_46B660  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+14h+var_14] ebx +
call sub_46F960  +
test eax eax +
mov esi eax +
jnz loc_471265  +
nop   +
lea esi [esi+0] +
xor eax eax +
jmp loc_471281  +
***
sub esp 8 +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_4712C5  +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 59h +
jnz loc_4712D7  +
add eax 2 +
mov [ebx+0Ch] eax +
mov edx 1 +
mov eax ebx +
call sub_471250  +
mov edx eax +
mov eax ebx +
call sub_46B810  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jnz loc_4712BE  +
add edx 1 +
mov [ebx+0Ch] edx +
add esp 8 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [eax+2Ch] +
mov edx [ebp+0Ch] +
mov [esp+48h+var_34] eax +
movzx eax byte ptr [edx] +
sub eax 49h +
cmp al 1 +
ja loc_471490  +
lea eax [edx+1] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+1] 45h +
jz loc_4717AA  +
mov [esp+48h+var_1C] 0 +
lea ebx [esp+48h+var_1C] +
movzx edx byte ptr [edx+1] +
jmp loc_47138F  +
sub edx 49h +
cmp dl 1 +
ja loc_4714B0  +
mov eax ebp +
call sub_471300  +
mov ecx eax +
test ecx ecx +
jz loc_471490  +
mov [esp+48h+var_48] 0 +
mov edx 2Fh +
mov eax ebp +
call sub_46B660  +
test eax eax +
mov [ebx] eax +
jz loc_471490  +
lea ebx [eax+8] +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_471624  +
cmp dl 4Ch +
jz loc_4714A0  +
jle loc_471343  +
cmp dl 58h +
lea esi [esi+0] +
jnz loc_4714B0  +
lea esi [eax+1] +
mov edi [ebp+34h] +
mov [ebp+0Ch] esi +
mov dword ptr [ebp+34h] 1 +
movzx edx byte ptr [eax+1] +
mov [esp+48h+var_3C] edi +
cmp dl 4Ch +
jz loc_471640  +
cmp dl 54h +
jz loc_471651  +
cmp dl 73h +
jz loc_471590  +
cmp dl 66h +
jz loc_4715D2  +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_4714D0  +
cmp dl 6Fh +
jz loc_4714C0  +
cmp dl 74h +
setz cl  +
jnz loc_4719D2  +
cmp byte ptr [eax+2] 6Ch +
jz loc_471662  +
mov eax ebp +
call sub_470CA0  +
test eax eax +
mov [esp+48h+var_38] eax +
jz loc_471580  +
mov eax [esp+48h+var_38] +
mov edx [eax] +
cmp edx 31h +
jz loc_471504  +
cmp edx 32h +
jz loc_4716A0  +
cmp edx 33h +
jnz loc_471580  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_4718D5  +
mov eax ebp +
call sub_474490  +
test esi esi +
mov [esp+48h+var_48] eax +
jz loc_47146E  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_46B660  +
mov [esp+48h+var_48] eax +
mov ecx [esp+48h+var_38] +
mov edx 35h +
mov eax ebp +
call sub_46B660  +
mov edx [ebp+0Ch] +
mov ecx eax +
mov eax [esp+48h+var_3C] +
mov [ebp+34h] eax +
cmp byte ptr [edx] 45h +
jz loc_4714F9  +
nop   +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_472500  +
mov ecx eax +
jmp loc_471358  +
mov [esp+48h+var_48] ebp +
call sub_46F960  +
mov ecx eax +
jmp loc_471358  +
cmp byte ptr [eax+2] 6Eh +
jnz loc_47140D  +
add eax 3 +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_470F10  +
mov edx [ebp+0Ch] +
test eax eax +
jz loc_471583  +
cmp byte ptr [edx] 49h +
mov ecx eax +
jz loc_4716B4  +
mov eax [esp+48h+var_3C] +
mov [ebp+34h] eax +
cmp byte ptr [edx] 45h +
jnz loc_471490  +
add edx 1 +
mov [ebp+0Ch] edx +
jmp loc_471358  +
mov eax [eax+4] +
mov edi offset aSt +
mov esi [eax] +
mov [esp+48h+var_2C] eax +
mov eax [eax+8] +
mov [esp+48h+var_30] esi +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_4718EC  +
mov eax [esp+48h+var_2C] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_4719E5  +
jle loc_4716E0  +
cmp eax 2 +
jz loc_471709  +
cmp eax 3 +
jnz loc_471580  +
mov esi [esp+48h+var_30] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_47191E  +
mov eax [esp+48h+var_30] +
cmp byte ptr [eax] 6Eh +
jz loc_471821  +
nop   +
mov edx [ebp+0Ch] +
xor ecx ecx +
jmp loc_4714ED  +
movzx edx byte ptr [eax+2] +
cmp dl 72h +
jz loc_4717CA  +
cmp dl 70h +
jnz loc_47140D  +
add eax 3 +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_474490  +
mov edx 49h +
mov [esp+48h+var_48] 0 +
mov ecx eax +
mov eax ebp +
call sub_46B660  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_4714ED  +
cmp byte ptr [eax+2] 70h +
jnz loc_47140D  +
lea edx [eax+3] +
mov [ebp+0Ch] edx +
cmp byte ptr [eax+3] 54h +
jnz loc_47180A  +
add eax 4 +
xor edx edx +
mov [ebp+0Ch] eax +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_471580  +
mov ecx [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea ecx [ecx+esi*4] +
test ecx ecx +
jz loc_4718AD  +
mov [ecx+4] edx +
mov edx [ebp+0Ch] +
mov dword ptr [ecx] 6 +
jmp loc_4714ED  +
add eax 1 +
mov [ebp+0Ch] eax +
mov eax [esp+48h+var_34] +
mov [ebp+2Ch] eax +
mov eax [esp+48h+var_1C] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_472500  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_4714ED  +
mov eax ebp +
call sub_46BA20  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_4714ED  +
xor edi edi +
test cl cl +
jnz loc_4718F9  +
add esi 2 +
mov edx 45h +
mov [ebp+0Ch] esi +
mov eax ebp +
call sub_472720  +
mov ecx edi +
mov edx 30h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_46B660  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_4714ED  +
mov eax [esp+48h+var_38] +
mov [esp+48h+var_30] 0 +
mov eax [eax+4] +
jmp loc_47153F  +
mov [esp+48h+var_38] eax +
mov eax ebp +
call sub_471300  +
mov ecx [esp+48h+var_38] +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_46B660  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_4714ED  +
test eax eax +
jnz loc_471580  +
mov ecx [esp+48h+var_38] +
mov edx 34h +
mov eax ebp +
mov [esp+48h+var_48] 0 +
call sub_46B660  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_4714ED  +
mov eax [esp+48h+var_38] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_47193C  +
mov eax ebp +
call sub_474490  +
mov [esp+48h+var_2C] eax +
mov esi [esp+48h+var_30] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_47190B  +
mov esi [esp+48h+var_30] +
mov edi offset unk_4A134F +
mov ecx 3 +
cmps   +
jz loc_471765  +
mov esi [esp+48h+var_30] +
mov edi offset unk_4A1352 +
mov ecx 3 +
cmps   +
jnz loc_471963  +
mov eax ebp +
call sub_470F10  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_471992  +
mov ecx [esp+48h+var_2C] +
mov edx 37h +
mov eax ebp +
mov [esp+48h+var_48] esi +
call sub_46B660  +
mov ecx [esp+48h+var_38] +
mov edx 36h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_46B660  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_4714ED  +
add edx 2 +
xor ecx ecx +
mov [ebp+0Ch] edx +
mov eax ebp +
mov edx 2Fh +
mov [esp+48h+var_48] 0 +
call sub_46B660  +
jmp loc_471492  +
add eax 3 +
mov [ebp+0Ch] eax +
mov [esp+48h+var_48] ebp +
call sub_46F960  +
mov esi eax +
mov eax ebp +
call sub_470F10  +
mov edi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4718B5  +
mov [esp+48h+var_48] edi +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_46B660  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_4714ED  +
mov eax ebp +
call sub_46B9E0  +
add eax 1 +
mov edx eax +
jnz loc_4715F4  +
jmp loc_471580  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_471971  +
mov edx 5Fh +
mov eax ebp +
call sub_472720  +
mov [esp+48h+var_48] ebp +
mov esi eax +
call sub_46F960  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_471985  +
xor ecx ecx +
cmp al 70h +
jz loc_4719B1  +
cmp al 69h +
jnz loc_4714ED  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_4714ED  +
mov eax ebp +
call sub_474490  +
mov [esp+48h+var_48] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_46B660  +
mov ecx esi +
mov edx 39h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_46B660  +
mov ecx [esp+48h+var_38] +
mov edx 38h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
mov edx [ebp+0Ch] +
jmp loc_4714ED  +
mov eax ebp +
call sub_471300  +
mov ecx edi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_46B660  +
mov [esp+48h+var_48] eax +
jmp loc_4717F2  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_472720  +
jmp loc_471456  +
mov [esp+48h+var_48] ebp +
call sub_46F960  +
jmp loc_47146B  +
mov [esp+48h+var_48] ebp +
call sub_46F960  +
mov esi [ebp+0Ch] +
mov edi eax +
jmp loc_47166C  +
mov edx 45h +
mov eax ebp +
call sub_472720  +
mov esi eax +
jmp loc_47177A  +
mov eax ebp +
call sub_474490  +
mov esi eax +
mov eax ebp +
call sub_474490  +
mov edi eax +
mov eax ebp +
call sub_474490  +
jmp loc_471876  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_471952  +
sub eax 72h +
cmp al 1 +
ja loc_47171C  +
mov [esp+48h+var_48] ebp +
call sub_46F960  +
mov [esp+48h+var_2C] eax +
jmp loc_471727  +
mov eax ebp +
call sub_474490  +
mov esi eax +
jmp loc_47177A  +
cmp al 77h +
jz loc_47182D  +
lea esi [esi+0] +
jmp loc_471580  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_471876  +
mov eax ebp +
call sub_471300  +
mov ecx esi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_46B660  +
mov esi eax +
jmp loc_47177A  +
cmp byte ptr [edx+1] 69h +
jnz loc_4714ED  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_472720  +
jmp loc_471876  +
cmp dl 69h +
jz loc_471403  +
nop   +
lea esi [esi+0] +
jmp loc_47140D  +
mov eax [esp+48h+var_30] +
xor esi esi +
test eax eax +
jz loc_4719FA  +
movzx eax byte ptr [eax] +
cmp al 6Dh +
jz loc_471A08  +
cmp al 70h +
jz loc_471A08  +
cmp edx 33h +
jnz loc_47144F  +
jmp loc_471443  +
mov edi [esp+48h+var_30] +
xor esi esi +
cmp al [edi+1] +
jnz loc_4719FA  +
mov eax [ebp+0Ch] +
mov si 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_4719FA  +
add eax 1 +
xor si si +
mov [ebp+0Ch] eax +
jmp loc_4719FA  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 53h +
jz loc_471BB4  +
jle loc_471A93  +
cmp al 55h +
jz loc_471A80  +
cmp al 5Ah +
nop   +
jnz loc_471B60  +
add edx 1 +
mov eax esi +
mov [esi+0Ch] edx +
xor edx edx +
call sub_471E40  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 45h +
mov ebx eax +
jz loc_471D20  +
xor ebx ebx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
call sub_470F10  +
mov ebx eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Eh +
jnz loc_471B60  +
add edx 1 +
mov ecx 1 +
mov [esi+0Ch] edx +
mov eax esi +
lea edx [esp+30h+var_14] +
call sub_46B710  +
test eax eax +
mov edi eax +
jz loc_471A73  +
xor edx edx +
mov eax esi +
call sub_46B810  +
xor ebp ebp +
mov [esp+30h+var_24] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
lea esi [esi+0] +
test bl bl +
jz loc_471B52  +
cmp bl 44h +
jz loc_471CB6  +
lea edx [ebx-30h] +
cmp dl 9 +
jbe loc_471C60  +
lea edx [ebx-61h] +
cmp dl 19h +
jbe loc_471C60  +
cmp bl 43h +
jz loc_471C60  +
cmp bl 55h +
jz loc_471C60  +
cmp bl 4Ch +
jz loc_471C60  +
cmp bl 53h +
jz loc_471D00  +
cmp bl 49h +
jz loc_471CE0  +
cmp bl 54h +
jz loc_471D11  +
cmp bl 45h +
nop   +
jz loc_471DFD  +
cmp bl 4Dh +
jnz loc_471B52  +
test ebp ebp +
lea esi [esi+0] +
jz loc_471B52  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx ebx byte ptr [eax+1] +
mov eax edx +
test bl bl +
jnz loc_471AD4  +
mov dword ptr [edi] 0 +
xor ebx ebx +
jmp loc_471A75  +
mov eax esi +
call sub_470F10  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 49h +
mov ebx eax +
jnz loc_471A89  +
test eax eax +
jz loc_471A73  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_471A73  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebx +
add eax 1 +
mov [esi+20h] eax +
mov eax esi +
call sub_471300  +
mov ecx ebx +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_46B660  +
mov ebx eax +
jmp loc_471A89  +
cmp byte ptr [edx+1] 74h +
jz loc_471BF2  +
xor edx edx +
mov eax esi +
call sub_46BBC0  +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_471A89  +
mov eax esi +
call sub_471300  +
mov ecx edi +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_46B660  +
mov ebx eax +
jmp loc_471A89  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_470F10  +
mov ecx 3 +
mov edx offset aStd +
mov ebx eax +
mov eax esi +
call sub_46B6C0  +
mov edx 1 +
mov [esp+30h+var_30] ebx +
mov ecx eax +
mov eax esi +
call sub_46B660  +
add dword ptr [esi+30h] 3 +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_471A89  +
test edi edi +
jz loc_471A73  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_471A73  +
mov edx [esi+1Ch] +
mov [edx+eax*4] edi +
add eax 1 +
mov [esi+20h] eax +
jmp loc_471BD3  +
mov eax esi +
call sub_470F10  +
test ebp ebp +
jz loc_471CD0  +
mov edx 1 +
mov [esp+30h+var_30] eax +
mov ecx ebp +
mov eax esi +
call sub_46B660  +
mov ebp eax +
cmp bl 53h +
jz loc_471CAB  +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jz loc_471CD4  +
test ebp ebp +
jz loc_471B52  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_471B52  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebp +
add eax 1 +
mov [esi+20h] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
jmp loc_471AD0  +
movzx eax byte ptr [eax+1] +
and eax 0FFFFFFDFh +
cmp al 54h +
jnz loc_471C60  +
mov [esp+30h+var_30] esi +
call sub_46F960  +
test ebp ebp +
jnz loc_471C6B  +
lea esi [esi+0] +
mov ebp eax +
jmp loc_471C7E  +
mov ebx 45h +
jmp loc_471ADD  +
test ebp ebp +
jz loc_471B52  +
mov eax esi +
call sub_471300  +
mov edx 4 +
jmp loc_471C70  +
mov edx 1 +
mov eax esi +
call sub_46BBC0  +
jmp loc_471C67  +
mov eax esi +
call sub_46BA20  +
jmp loc_471C67  +
lea eax [edx+1] +
mov [esi+0Ch] eax +
movzx eax byte ptr [edx+1] +
cmp al 73h +
jz loc_471DD2  +
cmp al 64h +
mov ebp 0FFFFFFFFh +
jz loc_471DA1  +
mov eax esi +
call sub_471A30  +
test eax eax +
mov edi eax +
jz loc_471D54  +
mov eax [eax] +
cmp eax 44h +
jz loc_471D54  +
cmp eax 46h +
jnz loc_471DC0  +
cmp ebp 0FFFFFFFFh +
mov edx edi +
jz loc_471D84  +
mov eax [esi+14h] +
xor edx edx +
cmp eax [esi+18h] +
jge loc_471D84  +
mov edx [esi+10h] +
lea ecx [eax+eax*2] +
add eax 1 +
mov [esi+14h] eax +
lea edx [edx+ecx*4] +
test edx edx +
jz loc_471D84  +
mov dword ptr [edx] 45h +
mov [edx+8] ebp +
mov [edx+4] edi +
mov [esp+30h+var_30] edx +
mov ecx ebx +
mov eax esi +
mov edx 2 +
call sub_46B660  +
add esp 2Ch +
mov ebx eax +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_46B9E0  +
test eax eax +
mov ebp eax +
jns loc_471D3B  +
xor ebx ebx +
jmp loc_471A75  +
mov eax esi +
call sub_46BA70  +
test eax eax +
jnz loc_471D54  +
xor ebx ebx +
jmp loc_471A75  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_46BA70  +
test eax eax +
jz loc_471A73  +
mov ecx 0Eh +
mov edx offset aStringLiteral +
mov eax esi +
call sub_46B6C0  +
mov [esp+30h+var_30] eax +
jmp loc_471D87  +
test ebp ebp +
mov [edi] ebp +
jz loc_471A73  +
mov edi [esp+30h+var_24] +
test edi edi +
jz loc_471E1A  +
mov eax [esp+30h+var_14] +
mov [esp+30h+var_14] edi +
mov [edi+4] eax +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jnz loc_471A73  +
add eax 1 +
mov ebx [esp+30h+var_14] +
mov [esi+0Ch] eax +
jmp loc_471A89  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 54h +
jz loc_471F20  +
cmp cl 47h +
jz loc_471F20  +
mov eax ebx +
mov edi edx +
call sub_471A30  +
test eax eax +
mov esi eax +
jnz loc_471ED2  +
mov eax [ebx+0Ch] +
test esi esi +
movzx edx byte ptr [eax] +
mov eax esi +
jz loc_471F38  +
test dl dl +
jz loc_471F38  +
cmp dl 45h +
jz loc_471F38  +
mov edx [eax] +
cmp edx 4 +
jz loc_471F40  +
jb loc_471EB0  +
sub edx 1Ch +
cmp edx 4 +
ja loc_471EB0  +
mov eax [eax+4] +
test eax eax +
jnz loc_471E91  +
lea esi [esi+0] +
xor edx edx +
mov eax ebx +
call sub_471250  +
mov ecx esi +
mov edx 3 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_46B660  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_471E70  +
test byte ptr [ebx+8] 1 +
jnz loc_471E70  +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
ja loc_471EF3  +
mov esi [esi+4] +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
jbe loc_471EE6  +
cmp edx 2 +
mov eax esi +
jnz loc_471F38  +
mov eax [esi+8] +
mov ecx [eax] +
lea edx [ecx-1Ch] +
cmp edx 4 +
ja loc_471F14  +
mov eax [eax+4] +
mov edi [eax] +
lea edx [edi-1Ch] +
cmp edx 4 +
jbe loc_471F07  +
mov [esi+8] eax +
mov eax esi +
jmp loc_471F38  +
mov ecx [ebx+30h] +
lea edx [ecx+14h] +
mov [ebx+30h] edx +
movzx edx byte ptr [eax] +
cmp dl 54h +
jz loc_471F80  +
cmp dl 47h +
jz loc_471F55  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
test eax eax +
jz loc_471FB0  +
cmp dword ptr [eax] 33h +
ja loc_471FB0  +
mov edx [eax] +
jmp ds:off_4A1590[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_471F36  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx edi byte ptr [eax+1] +
lea edx [edi-41h] +
cmp dl 31h +
ja loc_471F36  +
movzx edx dl +
jmp ds:off_4A1660[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_471F36  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [eax+1] +
sub eax 43h +
cmp al 33h +
ja loc_471F36  +
movzx eax al +
jmp ds:off_4A1728[eax*4]  +
mov eax [eax+8] +
test eax eax +
jnz loc_471F47  +
nop   +
mov edx 1 +
jmp loc_471EB2  +
lea eax [ebx+0Ch] +
call sub_46B940  +
cmp eax 1 +
jle loc_471F36  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_471F36  +
lea edi [edx+1] +
mov [ebx+0Ch] edi +
cmp byte ptr [edx] 5Fh +
jnz loc_471F36  +
lea ebp [eax-1] +
mov [esp+1Ch+var_10] 0 +
movzx eax byte ptr [edi] +
test al al +
jz loc_471F36  +
xor esi esi +
cmp al 24h +
jz loc_472342  +
movzx eax byte ptr [edi+esi] +
test al al +
jz loc_472019  +
cmp al 24h +
jz loc_472019  +
add esi 1 +
cmp esi ebp +
jl loc_472006  +
mov edx edi +
mov ecx esi +
mov eax ebx +
sub ebp esi +
call sub_46B6C0  +
mov edi [ebx+0Ch] +
add edi esi +
mov [ebx+0Ch] edi +
test eax eax +
jz loc_471F36  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_472390  +
mov [esp+1Ch+var_1C] eax +
mov edx 3Eh +
mov eax ebx +
call sub_46B660  +
test eax eax +
mov [esp+1Ch+var_10] eax +
jz loc_471F36  +
test ebp ebp +
jg loc_471FF1  +
mov ecx [esp+1Ch+var_10] +
mov edx 3Dh +
mov eax ebx +
mov [esp+1Ch+var_1C] 0 +
call sub_46B660  +
jmp loc_471F38  +
mov eax ebx +
call sub_471A30  +
mov edx 13h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
jmp loc_471F38  +
mov eax ebx +
call sub_471A30  +
mov esi eax +
mov eax ebx +
call sub_46B9A0  +
mov ecx esi +
mov edx 16h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_46B660  +
jmp loc_471F38  +
xor edx edx +
mov eax ebx +
call sub_471E40  +
mov edx 17h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
jmp loc_471F38  +
cmp byte ptr [eax+2] 0 +
jz loc_472399  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 6Eh +
jnz loc_472399  +
xor edx edx +
mov eax ebx +
call sub_471E40  +
mov edx 48h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
jmp loc_471F38  +
mov edx 76h +
mov eax ebx +
call sub_46BDC0  +
test eax eax +
jz loc_471F36  +
xor edx edx +
mov eax ebx +
call sub_471E40  +
mov edx 10h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
jmp loc_471F38  +
mov eax ebx +
call sub_471A30  +
mov edx 14h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
jmp loc_471F38  +
mov [esp+1Ch+var_1C] ebx +
call sub_46F960  +
mov edx 0Eh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
jmp loc_471F38  +
mov [esp+1Ch+var_1C] ebx +
call sub_46F960  +
mov esi eax +
lea eax [ebx+0Ch] +
call sub_46B940  +
test eax eax +
js loc_471F36  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jnz loc_471F36  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_46F960  +
mov edx 0Bh +
add dword ptr [ebx+30h] 5 +
mov [esp+1Ch+var_1C] esi +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
jmp loc_471F38  +
mov edx 68h +
mov eax ebx +
call sub_46BDC0  +
test eax eax +
jz loc_471F36  +
xor edx edx +
mov eax ebx +
call sub_471E40  +
mov edx 0Fh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
jmp loc_471F38  +
xor edx edx +
mov eax ebx +
call sub_46BDC0  +
test eax eax +
jz loc_471F36  +
xor edx edx +
mov eax ebx +
call sub_46BDC0  +
test eax eax +
jz loc_471F36  +
xor edx edx +
mov eax ebx +
call sub_471E40  +
mov edx 11h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
jmp loc_471F38  +
mov eax ebx +
call sub_471A30  +
mov edx 15h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
jmp loc_471F38  +
add ecx 0Fh +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_46F960  +
mov edx 9 +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
jmp loc_471F38  +
add ecx 0Ah +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_46F960  +
mov edx 0Ah +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
jmp loc_471F38  +
mov [esp+1Ch+var_1C] ebx +
call sub_46F960  +
mov edx 0Dh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
jmp loc_471F38  +
mov [esp+1Ch+var_1C] ebx +
call sub_46F960  +
mov edx 12h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
jmp loc_471F38  +
mov [esp+1Ch+var_1C] ebx +
call sub_46F960  +
mov edx 0Ch +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
jmp loc_471F38  +
movzx eax byte ptr [edi+1] +
cmp al 53h +
jz loc_4723C3  +
cmp al 5Fh +
jz loc_4723BC  +
cmp al 24h +
jnz loc_471F36  +
mov ecx 24h +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_4723CA  +
mov eax [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+esi*4] +
test eax eax +
jz loc_4723CA  +
mov [eax+4] ecx +
mov ecx [ebx+0Ch] +
sub ebp 2 +
mov dword ptr [eax] 3Fh +
lea edi [ecx+2] +
mov [ebx+0Ch] edi +
jmp loc_472036  +
mov [esp+1Ch+var_10] eax +
jmp loc_47205D  +
xor edx edx +
mov eax ebx +
call sub_471E40  +
mov edx 47h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
jmp loc_471F38  +
mov ecx 2Eh +
jmp loc_47235B  +
mov ecx 2Fh +
jmp loc_47235B  +
add dword ptr [ebx+0Ch] 2 +
jmp loc_471F36  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [esi+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_4724E0  +
test ebx ebx +
jnz loc_472406  +
cmp dl 5Ah +
jz loc_47240F  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
mov edx ebx +
mov [esi+0Ch] eax +
mov eax esi +
call sub_471E40  +
test ebx ebx +
mov edi eax +
jz loc_472408  +
test byte ptr [esi+8] 1 +
jz loc_472408  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
jnz loc_472408  +
movzx eax byte ptr [edx+1] +
lea ecx [eax-61h] +
cmp cl 19h +
jbe loc_4724B4  +
cmp al 5Fh +
jz loc_4724B4  +
sub eax 30h +
cmp al 9 +
ja loc_4724AB  +
movzx ecx byte ptr [edx] +
mov ebx edx +
cmp cl 2Eh +
jnz loc_472482  +
movzx eax byte ptr [ebx+1] +
sub eax 30h +
cmp al 9 +
ja loc_472482  +
movzx ecx byte ptr [ebx+2] +
lea eax [ebx+2] +
lea ebx [ecx-30h] +
cmp bl 9 +
mov ebx eax +
ja loc_47244E  +
nop   +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_472470  +
cmp cl 2Eh +
jz loc_472453  +
mov ecx ebx +
mov eax esi +
sub ecx edx +
mov [esi+0Ch] ebx +
call sub_46B6C0  +
mov ecx edi +
mov edx 4Bh +
mov [esp+10h+var_10] eax +
mov eax esi +
call sub_46B660  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
mov edi eax +
jz loc_472432  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx ecx byte ptr [edx+2] +
lea ebx [edx+2] +
lea eax [ecx-61h] +
cmp al 19h +
ja loc_4724CF  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-61h] +
cmp al 19h +
jbe loc_4724C2  +
cmp cl 5Fh +
jz loc_4724C2  +
jmp loc_47244E  +
lea ecx [eax+1] +
mov [esi+0Ch] ecx +
movzx edx byte ptr [eax+1] +
mov eax ecx +
jmp loc_472401  +
***
jmp sub_472500  +
***
push esi  +
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 5Ch +
mov dword ptr [edx] 0 +
mov dword ptr [ecx] 0 +
mov [esp+68h+var_68] eax +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_4C] 4000h +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
lea eax [eax+edx*4] +
lea eax ds:12h[eax*4] +
and eax 0FFFFFFF0h +
mov [ebp+var_30] edx +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_47A1D0  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+68h+var_60] +
and eax 0FFFFFFF0h +
call sub_47A1D0  +
sub esp eax +
lea eax [esp+68h+var_60] +
mov [ebp+var_38] eax +
lea eax [ebp+var_54] +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] eax +
mov [ebp+var_44] ecx +
call sub_4723E0  +
mov ebx eax +
xor eax eax +
lea esi [esi+0] +
***
mov eax [ebx+4] +
lea esp [ebp-0Ch] +
mov eax [ebx+4] +
jmp loc_4726D0  +
***
jmp loc_4726D0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [eax+0Ch] +
mov [esp+58h+var_1C] 0 +
lea eax [esp+58h+var_1C] +
mov [esp+58h+var_41] dl +
mov [esp+58h+var_4C] eax +
cmp [ebx] dl +
jz loc_472F6A  +
mov eax [ebp+34h] +
mov dword ptr [ebp+34h] 1 +
mov [esp+58h+var_48] eax +
movzx eax byte ptr [ebx] +
cmp al 4Ch +
jz loc_4729D1  +
cmp al 54h +
jz loc_4729F1  +
cmp al 73h +
jz loc_472890  +
cmp al 66h +
jz loc_4728D0  +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_47281E  +
cmp al 6Fh +
jz loc_472812  +
cmp al 74h +
setz dl  +
jnz loc_4742F6  +
cmp byte ptr [ebx+1] 6Ch +
jz loc_472A00  +
mov eax ebp +
call sub_470CA0  +
test eax eax +
mov ebx eax +
jz loc_4729C0  +
mov eax [eax] +
cmp eax 31h +
jz loc_472930  +
cmp eax 32h +
jz loc_472A31  +
cmp eax 33h +
jnz loc_4729C0  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_473053  +
mov eax ebp +
call sub_474490  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_4727FD  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_46B660  +
mov [esp+58h+var_58] eax +
mov ecx ebx +
mov edx 35h +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
jmp loc_4729E0  +
cmp byte ptr [ebx+1] 6Eh +
jnz loc_4727A2  +
add ebx 2 +
mov [ebp+0Ch] ebx +
mov eax ebp +
call sub_470F10  +
test eax eax +
jz loc_4729C0  +
mov edx [ebp+0Ch] +
mov ecx eax +
cmp byte ptr [edx] 49h +
jz loc_472A41  +
mov eax [esp+58h+var_48] +
mov [ebp+34h] eax +
mov [esp+58h+var_58] 0 +
mov edx 2Eh +
mov eax ebp +
call sub_46B660  +
mov edi [esp+58h+var_4C] +
test eax eax +
mov [edi] eax +
jz loc_4729C7  +
mov ebx [ebp+0Ch] +
add eax 8 +
mov [esp+58h+var_4C] eax +
movzx eax [esp+58h+var_41] +
cmp [ebx] al +
jnz loc_472748  +
add ebx 1 +
mov eax [esp+58h+var_1C] +
mov [ebp+0Ch] ebx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+1] +
cmp al 72h +
jz loc_472B54  +
cmp al 70h +
jnz loc_4727A2  +
add ebx 2 +
mov eax ebp +
mov [ebp+0Ch] ebx +
call sub_474490  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
jmp loc_4729E0  +
cmp byte ptr [ebx+1] 70h +
jnz loc_4727A2  +
lea eax [ebx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [ebx+2] 54h +
jz loc_472AF0  +
mov eax ebp +
call sub_46B9E0  +
add eax 1 +
jz loc_4729C0  +
mov edx [ebp+14h] +
cmp edx [ebp+18h] +
jge loc_4729C0  +
mov ecx [ebp+10h] +
lea ebx [edx+edx*2] +
add edx 1 +
mov [ebp+14h] edx +
lea ecx [ecx+ebx*4] +
test ecx ecx +
jz loc_4729C0  +
mov dword ptr [ecx] 6 +
mov [ecx+4] eax +
jmp loc_47283B  +
mov edi [ebx+4] +
mov esi [edi] +
mov [esp+58h+var_3C] edi +
mov edi [edi+8] +
mov [esp+58h+var_40] esi +
lea ecx [edi-2] +
mov edi offset aSt +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_472C40  +
mov esi [esp+58h+var_3C] +
mov edx [esi+0Ch] +
cmp edx 1 +
jz loc_4742A5  +
jle loc_472B30  +
cmp edx 2 +
jz loc_472A66  +
cmp edx 3 +
jnz loc_4729C0  +
mov esi [esp+58h+var_40] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_472C72  +
mov eax [esp+58h+var_40] +
cmp byte ptr [eax] 6Eh +
jnz loc_4729C0  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jz loc_472B91  +
cmp al 77h +
jz loc_472B91  +
nop   +
lea esi [esi+0] +
mov eax [esp+58h+var_48] +
mov [ebp+34h] eax +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_472500  +
mov ecx eax +
lea esi [esi+0] +
mov eax [esp+58h+var_48] +
test ecx ecx +
mov [ebp+34h] eax +
jnz loc_472842  +
jmp loc_4729C7  +
mov eax ebp +
call sub_46BA20  +
mov ecx eax +
jmp loc_4729E0  +
xor esi esi +
test dl dl +
jnz loc_472C60  +
add ebx 2 +
mov edx 45h +
mov [ebp+0Ch] ebx +
mov eax ebp +
call sub_472720  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
jmp loc_4729E0  +
mov edx [ebx+4] +
mov [esp+58h+var_40] 0 +
jmp loc_47296B  +
mov [esp+58h+var_40] eax +
mov eax ebp +
call sub_471300  +
mov ecx [esp+58h+var_40] +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
jmp loc_4729E0  +
mov eax [ebx+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_472F43  +
mov eax ebp +
call sub_474490  +
mov [esp+58h+var_3C] eax +
mov esi [esp+58h+var_40] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_472F30  +
mov esi [esp+58h+var_40] +
mov edi offset unk_4A134F +
mov ecx 3 +
cmps   +
jz loc_472B00  +
mov esi [esp+58h+var_40] +
mov edi offset unk_4A1352 +
mov ecx 3 +
cmps   +
jz loc_472B00  +
mov eax ebp +
call sub_474490  +
mov esi eax +
mov ecx [esp+58h+var_3C] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_46B660  +
mov ecx ebx +
mov edx 36h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
jmp loc_4729E0  +
add ebx 3 +
xor eax eax +
mov [ebp+0Ch] ebx +
jmp loc_4728FA  +
mov eax ebp +
call sub_470F10  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_472AC3  +
mov eax ebp +
call sub_471300  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov esi eax +
jmp loc_472AC3  +
test edx edx +
jnz loc_4729C0  +
mov ecx ebx +
mov edx 34h +
mov [esp+58h+var_58] 0 +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
jmp loc_4729E0  +
add ebx 2 +
mov [ebp+0Ch] ebx +
mov [esp+58h+var_58] ebp +
call sub_46F960  +
mov ebx eax +
mov eax ebp +
call sub_470F10  +
mov edx [ebp+0Ch] +
cmp byte ptr [edx] 49h +
mov esi eax +
jz loc_472F8A  +
mov [esp+58h+var_58] eax +
mov ecx ebx +
mov edx 1 +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
jmp loc_4729E0  +
mov edx 5Fh +
mov eax ebp +
call sub_472720  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_3C] eax +
call sub_46F960  +
mov [esp+58h+var_40] eax +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_4730C4  +
cmp dl 70h +
jz loc_47316C  +
cmp dl 69h +
jnz loc_4729C0  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_4729C0  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_472720  +
xor ecx ecx +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
mov [esp+58h+var_58] ecx +
mov ecx [esp+58h+var_40] +
mov edx 3Ah +
mov eax ebp +
call sub_46B660  +
mov ecx [esp+58h+var_3C] +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov ecx ebx +
mov edx 38h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
jmp loc_4729E0  +
mov [esp+58h+var_58] ebp +
call sub_46F960  +
mov ecx ebx +
mov edx 35h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
jmp loc_4729E0  +
mov [esp+58h+var_58] ebp +
call sub_46F960  +
mov ebx [ebp+0Ch] +
mov esi eax +
jmp loc_472A0A  +
mov edx [ebp+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_473332  +
cmp al 54h +
jz loc_47337A  +
cmp al 73h +
jz loc_47318F  +
cmp al 66h +
jz loc_47306A  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_472FAA  +
mov eax ebp +
call sub_470F10  +
mov edx [ebp+0Ch] +
test eax eax +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jz loc_472CC1  +
cmp al 49h +
jz loc_4737BC  +
cmp al 4Ch +
jz loc_473348  +
cmp al 54h +
nop   +
lea esi [esi+0] +
jz loc_473390  +
cmp al 73h +
jz loc_4731C3  +
cmp al 66h +
jz loc_473234  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_4730E1  +
cmp al 6Fh +
jz loc_4730D1  +
cmp al 74h +
setz cl  +
jnz loc_473E09  +
cmp byte ptr [edx+1] 6Ch +
jz loc_4736C9  +
mov eax ebp +
call sub_470CA0  +
test eax eax +
mov [esp+58h+var_40] eax +
jz loc_47330A  +
mov eax [esp+58h+var_40] +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_38] eax +
jz loc_4733A6  +
mov eax [esp+58h+var_38] +
cmp eax 32h +
jz loc_47375D  +
cmp eax 33h +
jnz loc_47330A  +
mov edx [ebp+0Ch] +
movzx ecx byte ptr [edx] +
cmp [esp+58h+var_38] 33h +
mov [esp+58h+var_30] 0 +
jnz loc_472D69  +
cmp cl 5Fh +
jz loc_473AE7  +
cmp cl 4Ch +
jz loc_473F2D  +
cmp cl 54h +
jz loc_473E9A  +
cmp cl 73h +
nop   +
jz loc_473BD3  +
cmp cl 66h +
jz loc_473B80  +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_473B42  +
cmp cl 6Fh +
jz loc_473B32  +
cmp cl 74h +
setz al  +
jnz loc_474237  +
cmp byte ptr [edx+1] 6Ch +
jz loc_473EC1  +
mov eax ebp +
call sub_470CA0  +
test eax eax +
mov [esp+58h+var_38] eax +
jz loc_473EBA  +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_34] eax +
jz loc_47402B  +
mov eax [esp+58h+var_34] +
cmp eax 32h +
jz loc_473F52  +
cmp eax 33h +
jnz loc_473EBA  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_474381  +
mov eax ebp +
call sub_474490  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_472E1E  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_46B660  +
mov [esp+58h+var_58] eax +
mov ecx [esp+58h+var_38] +
mov edx 35h +
mov eax ebp +
call sub_46B660  +
mov esi eax +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_473AFB  +
mov ecx esi +
mov edx 37h +
mov [esp+58h+var_58] esi +
mov eax ebp +
call sub_46B660  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_47335E  +
cmp al 54h +
jz loc_47336C  +
cmp al 73h +
jz loc_4731F7  +
cmp al 66h +
jz loc_473292  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_47312A  +
cmp al 6Fh +
jz loc_47311A  +
cmp al 74h +
setz cl  +
jnz loc_474292  +
cmp byte ptr [edx+1] 6Ch +
jz loc_47371D  +
mov eax ebp +
call sub_470CA0  +
test eax eax +
mov [esp+58h+var_38] eax +
jz loc_4730CA  +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_34] eax +
jz loc_4734AB  +
mov eax [esp+58h+var_34] +
cmp eax 32h +
jz loc_47376B  +
cmp eax 33h +
jnz loc_4730CA  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_473F3B  +
mov eax ebp +
call sub_474490  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_472F18  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_46B660  +
mov [esp+58h+var_58] eax +
mov ecx [esp+58h+var_38] +
mov edx 35h +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
jmp loc_472BFD  +
mov edx 45h +
mov eax ebp +
call sub_472720  +
mov esi eax +
jmp loc_472AC3  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_472F59  +
sub eax 72h +
cmp al 1 +
ja loc_472A75  +
mov [esp+58h+var_58] ebp +
call sub_46F960  +
mov [esp+58h+var_3C] eax +
jmp loc_472A80  +
add ebx 1 +
xor ecx ecx +
mov [ebp+0Ch] ebx +
mov edx 2Eh +
mov eax ebp +
mov [esp+58h+var_58] 0 +
call sub_46B660  +
jmp loc_4729C9  +
mov eax ebp +
call sub_471300  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov [esp+58h+var_58] eax +
jmp loc_472B7C  +
cmp al 6Fh +
jz loc_47331D  +
cmp al 74h +
setz cl  +
jnz loc_473EFE  +
cmp byte ptr [edx+1] 6Ch +
jz loc_4736F2  +
mov eax ebp +
call sub_470CA0  +
test eax eax +
mov [esp+58h+var_40] eax +
jz loc_4732EF  +
mov eax [esp+58h+var_40] +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_3C] eax +
jz loc_4735C0  +
mov eax [esp+58h+var_3C] +
cmp eax 32h +
jz loc_47374F  +
cmp eax 33h +
jnz loc_4732EF  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_474305  +
mov eax ebp +
call sub_474490  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_473AC0  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_46B660  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jmp loc_472CC1  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_472720  +
jmp loc_4727E5  +
cmp byte ptr [edx+1] 70h +
jnz loc_472FC7  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_4739BF  +
add edx 3 +
xor ecx ecx +
mov [ebp+0Ch] edx +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_4732F2  +
mov edi [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea esi [edi+esi*4] +
test esi esi +
mov [esp+58h+var_3C] esi +
jz loc_47304B  +
mov eax [esp+58h+var_3C] +
mov dword ptr [eax] 6 +
mov [eax+4] ecx +
movzx eax byte ptr [edx] +
jmp loc_472CC1  +
add eax 1 +
mov [ebp+0Ch] eax +
xor ecx ecx +
jmp loc_472BFD  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_472D0F  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_470F10  +
mov edx [ebp+0Ch] +
test eax eax +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
jz loc_472E6A  +
cmp al 49h +
jnz loc_472E6A  +
mov eax ebp +
call sub_471300  +
mov ecx [esp+58h+var_40] +
mov edx 4 +
mov [esp+58h+var_58] eax +
jmp loc_472E59  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_472EB3  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_470F10  +
test eax eax +
mov ecx eax +
jz loc_472BFD  +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_472BFD  +
mov eax ebp +
mov [esp+58h+var_38] ecx +
call sub_471300  +
mov ecx [esp+58h+var_38] +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
jmp loc_472BFD  +
cmp byte ptr [eax+1] 69h +
jnz loc_4729C0  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_472720  +
mov ecx eax +
jmp loc_472BFD  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_4739E0  +
cmp al 70h +
jnz loc_472FC7  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_474490  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
jmp loc_47303D  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_473A51  +
cmp al 70h +
jnz loc_472D0F  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_474490  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
jmp loc_472E59  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_473A14  +
cmp al 70h +
jnz loc_472EB3  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_474490  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
jmp loc_472BFD  +
cmp byte ptr [edx+1] 70h +
jnz loc_472D0F  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_473AA0  +
add edx 3 +
xor ecx ecx +
mov [ebp+0Ch] edx +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_47330D  +
mov edi [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea esi [edi+esi*4] +
test esi esi +
mov [esp+58h+var_40] esi +
jz loc_472E67  +
mov eax [esp+58h+var_40] +
mov dword ptr [eax] 6 +
mov [eax+4] ecx +
movzx eax byte ptr [edx] +
jmp loc_472E6A  +
cmp byte ptr [edx+1] 70h +
jnz loc_472EB3  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_473A85  +
add edx 3 +
mov [ebp+0Ch] edx +
xor edx edx +
mov eax [ebp+14h] +
xor ecx ecx +
cmp eax [ebp+18h] +
jge loc_472BFD  +
mov ecx [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea ecx [ecx+esi*4] +
test ecx ecx +
jz loc_472BFD  +
mov dword ptr [ecx] 6 +
mov [ecx+4] edx +
jmp loc_472BFD  +
cmp al 77h +
jz loc_47364F  +
mov edx [ebp+0Ch] +
movzx eax byte ptr [edx] +
mov [esp+58h+var_3C] 0 +
jmp loc_472CC1  +
cmp al 77h +
jz loc_473431  +
mov edx [ebp+0Ch] +
movzx eax byte ptr [edx] +
mov [esp+58h+var_40] 0 +
jmp loc_472E6A  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_472FC7  +
add edx 2 +
mov [ebp+0Ch] edx +
jmp loc_472CA4  +
mov eax ebp +
call sub_472500  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jmp loc_472CC1  +
mov eax ebp +
call sub_472500  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
jmp loc_472E6A  +
mov eax ebp +
call sub_472500  +
mov ecx eax +
jmp loc_472BFD  +
mov eax ebp +
call sub_46BA20  +
mov ecx eax +
jmp loc_472BFD  +
mov eax ebp +
call sub_46BA20  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jmp loc_472CC1  +
mov eax ebp +
call sub_46BA20  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
jmp loc_472E6A  +
mov eax [esp+58h+var_40] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_34] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
mov [esp+58h+var_30] eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_473B0C  +
mov eax [esp+58h+var_34] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jz loc_474398  +
jle loc_4737D4  +
cmp ecx 2 +
jz loc_473928  +
cmp ecx 3 +
jnz loc_47330A  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_473C10  +
cmp byte ptr [edx] 6Eh +
jnz loc_47330A  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_473302  +
mov edx 5Fh +
mov eax ebp +
call sub_472720  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_46F960  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_474422  +
cmp al 70h +
jz loc_474401  +
cmp al 69h +
jnz loc_474374  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_474362  +
mov eax ebp +
call sub_474490  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_46B660  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov ecx [esp+58h+var_40] +
mov edx 38h +
mov [esp+58h+var_58] eax +
jmp loc_472E59  +
mov eax [esp+58h+var_38] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_30] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
mov [esp+58h+var_2C] eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_473B25  +
mov eax [esp+58h+var_30] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jz loc_474245  +
jle loc_473796  +
cmp ecx 2 +
jz loc_473888  +
cmp ecx 3 +
jnz loc_4730CA  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_473C4E  +
xor ecx ecx +
cmp byte ptr [edx] 6Eh +
jnz loc_472BFD  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_473E5F  +
mov edx 5Fh +
mov eax ebp +
call sub_472720  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_46F960  +
mov edi eax +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_473E8D  +
xor ecx ecx +
cmp dl 70h +
jz loc_473E6C  +
cmp dl 69h +
jnz loc_472BFD  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_472BFD  +
mov eax ebp +
call sub_474490  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_46B660  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov ecx [esp+58h+var_38] +
mov edx 38h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
jmp loc_472BFD  +
mov eax [esp+58h+var_40] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_38] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
mov [esp+58h+var_34] eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_473ACE  +
mov eax [esp+58h+var_38] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jz loc_47431C  +
jle loc_473779  +
cmp ecx 2 +
jz loc_4737F1  +
cmp ecx 3 +
lea esi [esi+0] +
jnz loc_4732EF  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_473DCC  +
cmp byte ptr [edx] 6Eh +
jnz loc_4732EF  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_4732E7  +
mov edx 5Fh +
mov eax ebp +
call sub_472720  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_46F960  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_473E33  +
cmp al 70h +
jz loc_473E16  +
cmp al 69h +
jnz loc_473DFC  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_473DEA  +
mov eax ebp +
call sub_474490  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_46B660  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov ecx [esp+58h+var_40] +
mov edx 38h +
mov [esp+58h+var_58] eax +
jmp loc_47303D  +
xor esi esi +
test cl cl +
jnz loc_473D6E  +
add dword ptr [ebp+0Ch] 2 +
mov edx 45h +
mov eax ebp +
call sub_472720  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
jmp loc_472E59  +
xor esi esi +
test cl cl +
jnz loc_473C2E  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_472720  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
jmp loc_47303D  +
xor esi esi +
test cl cl +
jnz loc_473DBD  +
add dword ptr [ebp+0Ch] 2 +
mov edx 45h +
mov eax ebp +
call sub_472720  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
jmp loc_472BFD  +
mov eax [esp+58h+var_40] +
xor edx edx +
mov ecx [eax+4] +
jmp loc_473601  +
mov eax [esp+58h+var_40] +
xor edx edx +
mov ecx [eax+4] +
jmp loc_4733E7  +
mov eax [esp+58h+var_38] +
xor edx edx +
mov ecx [eax+4] +
jmp loc_4734EC  +
test ecx ecx +
jnz loc_4732EF  +
mov [esp+58h+var_58] 0 +
mov ecx [esp+58h+var_40] +
mov edx 34h +
jmp loc_47303D  +
test ecx ecx +
jnz loc_4730CA  +
mov ecx [esp+58h+var_38] +
mov edx 34h +
mov eax ebp +
mov [esp+58h+var_58] 0 +
call sub_46B660  +
mov ecx eax +
jmp loc_472BFD  +
mov eax ebp +
call sub_471300  +
mov ecx [esp+58h+var_3C] +
mov edx 4 +
mov [esp+58h+var_58] eax +
jmp loc_47303D  +
test ecx ecx +
jnz loc_47330A  +
mov [esp+58h+var_58] 0 +
mov ecx [esp+58h+var_40] +
mov edx 34h +
jmp loc_472E59  +
mov eax [esp+58h+var_40] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_473D1F  +
mov eax ebp +
mov [esp+58h+var_38] edx +
call sub_474490  +
mov edx [esp+58h+var_38] +
mov [esp+58h+var_3C] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_473D0C  +
mov edi offset unk_4A134F +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_47384F  +
mov edi offset unk_4A1352 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_473C40  +
mov eax ebp +
call sub_470F10  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_473E40  +
mov ecx [esp+58h+var_3C] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_46B660  +
mov ecx [esp+58h+var_40] +
mov edx 36h +
mov [esp+58h+var_58] eax +
jmp loc_47303D  +
mov eax [esp+58h+var_38] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_473CCF  +
mov eax ebp +
mov [esp+58h+var_30] edx +
call sub_474490  +
mov edx [esp+58h+var_30] +
mov [esp+58h+var_34] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_473CAE  +
mov edi offset unk_4A134F +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_4738E6  +
mov edi offset unk_4A1352 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_473CFE  +
mov eax ebp +
call sub_470F10  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4743E2  +
mov ecx [esp+58h+var_34] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_46B660  +
mov ecx [esp+58h+var_38] +
mov edx 36h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
jmp loc_472BFD  +
mov eax [esp+58h+var_40] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_473C7F  +
mov eax ebp +
mov [esp+58h+var_34] edx +
call sub_474490  +
mov edx [esp+58h+var_34] +
mov [esp+58h+var_38] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_473C6C  +
mov edi offset unk_4A134F +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_473986  +
mov edi offset unk_4A1352 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_473CC1  +
mov eax ebp +
call sub_470F10  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_473F0B  +
mov ecx [esp+58h+var_38] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_46B660  +
mov ecx [esp+58h+var_40] +
mov edx 36h +
mov [esp+58h+var_58] eax +
jmp loc_472E59  +
mov eax ebp +
call sub_46B9E0  +
mov edx [ebp+0Ch] +
add eax 1 +
mov ecx eax +
jnz loc_47308C  +
jmp loc_4732F2  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_46F960  +
mov edi eax +
mov eax ebp +
call sub_470F10  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_473D4E  +
mov [esp+58h+var_58] esi +
mov ecx edi +
mov edx 1 +
jmp loc_47303D  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_46F960  +
mov esi eax +
mov eax ebp +
call sub_470F10  +
mov edi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_473D7D  +
mov [esp+58h+var_58] edi +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_46B660  +
mov ecx eax +
jmp loc_472BFD  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_46F960  +
mov edi eax +
mov eax ebp +
call sub_470F10  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_473D9D  +
mov [esp+58h+var_58] esi +
mov ecx edi +
mov edx 1 +
jmp loc_472E59  +
mov eax ebp +
call sub_46B9E0  +
add eax 1 +
mov edx eax +
jnz loc_4732B4  +
xor ecx ecx +
jmp loc_472BFD  +
mov eax ebp +
call sub_46B9E0  +
mov edx [ebp+0Ch] +
add eax 1 +
mov ecx eax +
jnz loc_473256  +
jmp loc_47330D  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
jmp loc_47303D  +
mov [esp+58h+var_58] ebp +
call sub_46F960  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
jmp loc_47303D  +
add edx 1 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_472720  +
mov esi eax +
mov [esp+58h+var_58] esi +
mov ecx [esp+58h+var_40] +
mov edx 35h +
jmp loc_472E59  +
mov [esp+58h+var_58] ebp +
call sub_46F960  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
jmp loc_472E59  +
mov [esp+58h+var_58] ebp +
call sub_46F960  +
jmp loc_472F15  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_472DB9  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_470F10  +
test eax eax +
mov esi eax +
jz loc_473EBA  +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_472E30  +
mov eax ebp +
call sub_471300  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov esi eax +
jmp loc_472E30  +
cmp byte ptr [edx+1] 70h +
jnz loc_472DB9  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_473EA8  +
add edx 3 +
mov [ebp+0Ch] edx +
xor edx edx +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_473EBA  +
mov ecx [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_472E30  +
mov dword ptr [esi] 6 +
mov [esi+4] edx +
jmp loc_472E30  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_47442F  +
cmp al 70h +
jnz loc_472DB9  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_474490  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
mov eax ebp +
call sub_46B660  +
mov esi eax +
jmp loc_472E30  +
mov eax ebp +
call sub_474490  +
mov esi eax +
mov eax ebp +
call sub_474490  +
mov edi eax +
mov eax ebp +
call sub_474490  +
jmp loc_473478  +
mov [esp+58h+var_58] ebp +
call sub_46F960  +
mov edx [ebp+0Ch] +
mov esi eax +
jmp loc_4736FC  +
mov eax ebp +
call sub_474490  +
mov esi eax +
jmp loc_473864  +
mov eax ebp +
call sub_474490  +
mov esi eax +
mov eax ebp +
call sub_474490  +
mov edi eax +
mov eax ebp +
call sub_474490  +
jmp loc_473584  +
mov edx 45h +
mov eax ebp +
call sub_472720  +
mov esi eax +
jmp loc_47399B  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_473C95  +
sub eax 72h +
cmp al 1 +
ja loc_47393B  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_34] edx +
call sub_46F960  +
mov edx [esp+58h+var_34] +
mov [esp+58h+var_38] eax +
jmp loc_47394E  +
mov edx 45h +
mov eax ebp +
call sub_472720  +
mov esi eax +
jmp loc_4738FB  +
mov eax ebp +
call sub_474490  +
mov esi eax +
jmp loc_47399B  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_473CE5  +
sub eax 72h +
cmp al 1 +
ja loc_47389B  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_30] edx +
call sub_46F960  +
mov edx [esp+58h+var_30] +
mov [esp+58h+var_34] eax +
jmp loc_4738AE  +
mov eax ebp +
call sub_474490  +
mov esi eax +
jmp loc_4738FB  +
mov edx 45h +
mov eax ebp +
call sub_472720  +
mov esi eax +
jmp loc_473864  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_473D35  +
sub eax 72h +
cmp al 1 +
ja loc_473804  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_38] edx +
call sub_46F960  +
mov edx [esp+58h+var_38] +
mov [esp+58h+var_3C] eax +
jmp loc_473817  +
mov eax ebp +
call sub_471300  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov [esp+58h+var_58] eax +
jmp loc_473A08  +
mov [esp+58h+var_58] ebp +
call sub_46F960  +
mov esi eax +
jmp loc_4736D3  +
mov eax ebp +
call sub_471300  +
mov ecx edi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov [esp+58h+var_58] eax +
jmp loc_473A3C  +
mov eax ebp +
call sub_471300  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov [esp+58h+var_58] eax +
jmp loc_473A79  +
mov [esp+58h+var_58] ebp +
call sub_46F960  +
mov esi eax +
jmp loc_473727  +
mov eax ebp +
call sub_474490  +
mov esi eax +
mov eax ebp +
call sub_474490  +
mov edi eax +
mov eax ebp +
call sub_474490  +
jmp loc_473696  +
mov eax 69h +
mov [esp+58h+var_3C] 0 +
jmp loc_472CF2  +
mov [esp+58h+var_3C] 0 +
jmp loc_472CC1  +
cmp al 69h +
jz loc_472D05  +
jmp loc_472D0F  +
cmp byte ptr [edx+1] 69h +
jnz loc_473DEF  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_472720  +
jmp loc_473696  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_473696  +
mov eax ebp +
call sub_471300  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov esi eax +
jmp loc_473864  +
cmp al 77h +
jz loc_473538  +
jmp loc_472BFD  +
cmp byte ptr [eax+1] 69h +
jnz loc_472BFD  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_472720  +
jmp loc_473584  +
add eax 1 +
mov [ebp+0Ch] eax +
xor eax eax +
jmp loc_473584  +
mov eax ebp +
call sub_46BA20  +
mov esi eax +
jmp loc_472E30  +
mov eax ebp +
call sub_46B9E0  +
add eax 1 +
mov edx eax +
jnz loc_473BA2  +
xor esi esi +
jmp loc_472E30  +
xor esi esi +
test al al +
jz loc_473ED4  +
mov [esp+58h+var_58] ebp +
call sub_46F960  +
mov edx [ebp+0Ch] +
mov esi eax +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_472720  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov esi eax +
jmp loc_472E30  +
cmp al 69h +
jz loc_472FBD  +
jmp loc_472FC7  +
mov eax ebp +
lea esi [esi+0] +
call sub_471300  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov esi eax +
jmp loc_47399B  +
mov eax ebp +
call sub_472500  +
mov esi eax +
jmp loc_472E30  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_472720  +
jmp loc_472F00  +
mov eax [esp+58h+var_38] +
xor edx edx +
mov eax [eax+4] +
cmp eax 1 +
jz loc_4741F4  +
jle loc_4741CE  +
cmp eax 2 +
jz loc_4740D2  +
cmp eax 3 +
jnz loc_473EBA  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_4740B4  +
cmp byte ptr [edx] 6Eh +
jnz loc_473EBA  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_4740A7  +
mov edx 5Fh +
mov eax ebp +
call sub_472720  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_46F960  +
mov edi eax +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_47409A  +
cmp dl 70h +
jz loc_474069  +
cmp dl 69h +
jnz loc_473EBA  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_473EBA  +
mov eax ebp +
call sub_474490  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_46B660  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov ecx [esp+58h+var_38] +
mov edx 38h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov esi eax +
jmp loc_472E30  +
mov eax [esp+58h+var_38] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_2C] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_47408A  +
mov eax [esp+58h+var_2C] +
mov eax [eax+0Ch] +
jmp loc_473F5B  +
cmp byte ptr [eax+1] 69h +
jnz loc_473EBA  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_472720  +
jmp loc_473FEF  +
mov [esp+58h+var_58] ebp +
call sub_46F960  +
mov [esp+58h+var_58] eax +
jmp loc_472E1E  +
add eax 1 +
mov [ebp+0Ch] eax +
xor eax eax +
jmp loc_473FEF  +
cmp al 77h +
jz loc_473FA5  +
jmp loc_473EBA  +
mov eax ebp +
call sub_474490  +
mov esi eax +
mov eax ebp +
call sub_474490  +
mov edi eax +
mov eax ebp +
call sub_474490  +
jmp loc_473FEF  +
mov eax [esp+58h+var_38] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_474194  +
mov eax ebp +
mov [esp+58h+var_2C] edx +
call sub_474490  +
mov edx [esp+58h+var_2C] +
mov [esp+58h+var_34] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_474184  +
mov edi offset unk_4A134F +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_47412C  +
mov edi offset unk_4A1352 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_4741C3  +
mov eax ebp +
call sub_470F10  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_474157  +
mov eax ebp +
call sub_471300  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov esi eax +
mov ecx [esp+58h+var_34] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_46B660  +
mov ecx [esp+58h+var_38] +
mov edx 36h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov esi eax +
jmp loc_472E30  +
mov edx 45h +
mov eax ebp +
call sub_472720  +
mov esi eax +
jmp loc_474157  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_4741AA  +
sub eax 72h +
cmp al 1 +
ja loc_4740E5  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_2C] edx +
call sub_46F960  +
mov edx [esp+58h+var_2C] +
mov [esp+58h+var_34] eax +
jmp loc_4740F8  +
mov eax ebp +
call sub_474490  +
mov esi eax +
jmp loc_474157  +
test eax eax +
jnz loc_473EBA  +
mov ecx [esp+58h+var_38] +
mov edx 34h +
mov eax ebp +
mov [esp+58h+var_58] 0 +
call sub_46B660  +
mov esi eax +
jmp loc_472E30  +
test edx edx +
jz loc_474233  +
movzx eax byte ptr [edx] +
cmp al 6Dh +
jz loc_474205  +
xor esi esi +
cmp al 70h +
jnz loc_47420C  +
xor esi esi +
cmp al [edx+1] +
jz loc_47421C  +
cmp [esp+58h+var_34] 33h +
jnz loc_472DFF  +
jmp loc_472DF3  +
mov eax [ebp+0Ch] +
mov si 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_47420C  +
add eax 1 +
xor si si +
mov [ebp+0Ch] eax +
jmp loc_47420C  +
xor esi esi +
jmp loc_47420C  +
cmp cl 69h +
jz loc_472DAF  +
jmp loc_472DB9  +
test edx edx +
jz loc_47428E  +
movzx ecx byte ptr [edx] +
cmp cl 6Dh +
nop   +
jz loc_474270  +
xor esi esi +
cmp cl 70h +
jz loc_474270  +
cmp [esp+58h+var_34] 33h +
jnz loc_472EF9  +
jmp loc_472EED  +
xor esi esi +
cmp cl [edx+1] +
jnz loc_474259  +
mov edx [ebp+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_474259  +
add edx 1 +
xor si si +
mov [ebp+0Ch] edx +
jmp loc_474259  +
xor esi esi +
jmp loc_474259  +
cmp al 69h +
jz loc_472EA9  +
lea esi [esi+0] +
jmp loc_472EB3  +
mov esi [esp+58h+var_40] +
test esi esi +
jz loc_4742F2  +
movzx edx byte ptr [esi] +
cmp dl 6Dh +
jz loc_4742D0  +
xor esi esi +
cmp dl 70h +
jz loc_4742D0  +
cmp eax 33h +
jnz loc_4727DE  +
jmp loc_4727D2  +
mov edi [esp+58h+var_40] +
xor esi esi +
cmp dl [edi+1] +
jnz loc_4742BC  +
mov edx [ebp+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_4742BC  +
add edx 1 +
xor si si +
mov [ebp+0Ch] edx +
jmp loc_4742BC  +
xor esi esi +
jmp loc_4742BC  +
cmp al 69h +
jz loc_472798  +
nop   +
jmp loc_4727A2  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_472720  +
jmp loc_473018  +
test edx edx +
jz loc_47435E  +
movzx ecx byte ptr [edx] +
cmp cl 6Dh +
jz loc_474340  +
xor esi esi +
cmp cl 70h +
jz loc_474340  +
cmp [esp+58h+var_3C] 33h +
jnz loc_473011  +
jmp loc_473005  +
xor esi esi +
cmp cl [edx+1] +
jnz loc_47432F  +
mov edx [ebp+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_47432F  +
add edx 1 +
xor si si +
mov [ebp+0Ch] edx +
jmp loc_47432F  +
xor esi esi +
jmp loc_47432F  +
mov eax 69h +
mov [esp+58h+var_40] 0 +
jmp loc_472E96  +
mov [esp+58h+var_40] 0 +
jmp loc_472E6A  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_472720  +
jmp loc_472E06  +
test edx edx +
jz loc_472D4B  +
movzx ecx byte ptr [edx] +
cmp cl 6Dh +
jz loc_4743B1  +
cmp cl 70h +
jnz loc_472D4B  +
cmp cl [edx+1] +
jnz loc_472D4B  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_30] 1 +
movzx ecx byte ptr [edx] +
cmp cl 5Fh +
jnz loc_472D69  +
lea esi [edx+1] +
mov [ebp+0Ch] esi +
movzx ecx byte ptr [edx+1] +
mov edx esi +
jmp loc_472D51  +
mov eax ebp +
call sub_471300  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov esi eax +
jmp loc_4738FB  +
cmp byte ptr [edx+1] 69h +
jnz loc_474367  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_472720  +
jmp loc_473478  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_473478  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_46F960  +
mov esi eax +
mov eax ebp +
call sub_470F10  +
mov edi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_474468  +
mov [esp+58h+var_58] edi +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_46B660  +
mov esi eax +
jmp loc_472E30  +
mov eax ebp +
call sub_471300  +
mov ecx edi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_46B660  +
mov [esp+58h+var_58] eax +
jmp loc_474453  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_474785  +
cmp al 54h +
jz loc_474793  +
cmp al 73h +
jz loc_4745D7  +
cmp al 66h +
jz loc_474580  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_4744F0  +
mov eax ebx +
call sub_470F10  +
test eax eax +
jz loc_474760  +
mov edx [ebx+0Ch] +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_4747B1  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Fh +
jz loc_474770  +
cmp al 74h +
setz cl  +
jnz loc_474A32  +
cmp byte ptr [edx+1] 6Ch +
jz loc_474723  +
mov eax ebx +
call sub_470CA0  +
test eax eax +
mov ebp eax +
jz loc_474760  +
mov eax [eax] +
cmp eax 31h +
jz loc_474614  +
cmp eax 32h +
jz loc_4747A1  +
cmp eax 33h +
jnz loc_474760  +
xor esi esi +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_4748B5  +
mov eax ebx +
call sub_474490  +
test esi esi +
mov [esp+1Ch+var_1C] eax +
jz loc_474568  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_46B660  +
mov [esp+1Ch+var_1C] eax +
mov ecx ebp +
mov edx 35h +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_4744E4  +
cmp byte ptr [edx+1] 70h +
jnz loc_47450D  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jz loc_4748A8  +
mov eax ebx +
call sub_46B9E0  +
add eax 1 +
jz loc_474760  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_474760  +
mov ecx [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_474760  +
mov dword ptr [esi] 6 +
mov [esi+4] eax +
jmp loc_4744E4  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_4747D0  +
cmp al 70h +
jnz loc_47450D  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_474490  +
mov edx 49h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_4744E4  +
mov edi [ebp+4] +
mov esi [edi] +
mov [esp+1Ch+var_10] edi +
mov edi [edi+8] +
mov [esp+1Ch+var_14] esi +
lea ecx [edi-2] +
mov edi offset aSt +
add [ebx+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_4748F4  +
mov edi [esp+1Ch+var_10] +
mov edx [edi+0Ch] +
cmp edx 1 +
jz loc_4749E6  +
jle loc_4748D0  +
cmp edx 2 +
jz loc_474810  +
cmp edx 3 +
jnz loc_474760  +
mov esi [esp+1Ch+var_14] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_474913  +
mov eax [esp+1Ch+var_14] +
cmp byte ptr [eax] 6Eh +
jnz loc_474760  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_474757  +
mov edx 5Fh +
mov eax ebx +
call sub_472720  +
mov [esp+1Ch+var_1C] ebx +
mov esi eax +
call sub_46F960  +
mov edi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_474999  +
cmp dl 70h +
jz loc_4749C5  +
cmp dl 69h +
jnz loc_474760  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_474760  +
mov eax ebx +
call sub_474490  +
mov [esp+1Ch+var_1C] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebx +
call sub_46B660  +
mov ecx esi +
mov edx 39h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx ebp +
mov edx 38h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_4744E4  +
xor esi esi +
test cl cl +
jnz loc_474901  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_472720  +
mov ecx esi +
mov edx 30h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_4744E4  +
cmp al 77h +
jz loc_47469F  +
nop   +
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 6Eh +
jnz loc_47450D  +
add edx 2 +
mov [ebx+0Ch] edx +
jmp loc_4744C7  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_472500  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_46BA20  +
mov edx [ebp+4] +
mov [esp+1Ch+var_14] 0 +
jmp loc_47464F  +
mov eax ebx +
call sub_471300  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_4744E4  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_46F960  +
mov esi eax +
mov eax ebx +
call sub_470F10  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
mov edi eax +
jz loc_47496B  +
mov [esp+1Ch+var_1C] eax +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_4744E4  +
mov eax [ebp+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_474944  +
mov eax ebx +
call sub_474490  +
mov [esp+1Ch+var_10] eax +
mov esi [esp+1Ch+var_14] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_474931  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_4A134F +
mov ecx 3 +
cmps   +
jz loc_474868  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_4A1352 +
mov ecx 3 +
cmps   +
jnz loc_47498B  +
mov eax ebx +
call sub_470F10  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4749A6  +
mov ecx [esp+1Ch+var_10] +
mov edx 37h +
mov eax ebx +
mov [esp+1Ch+var_1C] esi +
call sub_46B660  +
mov ecx ebp +
mov edx 36h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_4744E4  +
add edx 3 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_4745A6  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_472720  +
jmp loc_474550  +
test edx edx +
jnz loc_474760  +
mov [esp+1Ch+var_1C] 0 +
mov ecx ebp +
mov edx 34h +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_4744E4  +
mov [esp+1Ch+var_1C] ebx +
call sub_46F960  +
jmp loc_474565  +
mov [esp+1Ch+var_1C] ebx +
call sub_46F960  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47472D  +
mov eax ebx +
call sub_474490  +
mov esi eax +
mov eax ebx +
call sub_474490  +
mov edi eax +
mov eax ebx +
call sub_474490  +
jmp loc_4746E9  +
mov edx 45h +
mov eax ebx +
call sub_472720  +
mov esi eax +
jmp loc_47487D  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_47495A  +
sub eax 72h +
cmp al 1 +
ja loc_47481F  +
mov [esp+1Ch+var_1C] ebx +
call sub_46F960  +
mov [esp+1Ch+var_10] eax +
jmp loc_47482A  +
mov eax ebx +
call sub_471300  +
mov ecx edi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_46B660  +
mov [esp+1Ch+var_1C] eax +
jmp loc_4747F8  +
mov eax ebx +
call sub_474490  +
mov esi eax +
jmp loc_47487D  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_4746E9  +
mov eax ebx +
call sub_471300  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_47487D  +
cmp byte ptr [eax+1] 69h +
jnz loc_474760  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_472720  +
jmp loc_4746E9  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
test edi edi +
jz loc_4749FD  +
movzx edx byte ptr [edi] +
cmp dl 6Dh +
jz loc_474A10  +
cmp dl 70h +
jz loc_474A10  +
cmp eax 33h +
jnz loc_474549  +
jmp loc_47453D  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
cmp dl [edi+1] +
jnz loc_4749FD  +
mov edx [ebx+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_4749FD  +
add edx 1 +
xor si si +
mov [ebx+0Ch] edx +
jmp loc_4749FD  +
cmp al 69h +
jz loc_474503  +
jmp loc_47450D  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_474A78  +
mov eax ebx +
call sub_46B9A0  +
mov esi eax +
test esi esi +
jz loc_474E54  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jz loc_474B10  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea esi [eax+1] +
mov ebp [ebx+34h] +
mov [ebx+0Ch] esi +
mov dword ptr [ebx+34h] 1 +
movzx edx byte ptr [eax+1] +
cmp dl 4Ch +
jz loc_474DF0  +
cmp dl 54h +
jz loc_474E00  +
cmp dl 73h +
jz loc_474B37  +
cmp dl 66h +
jz loc_474CB0  +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_474C85  +
cmp dl 6Fh +
jz loc_474C75  +
cmp dl 74h +
setz cl  +
jnz loc_476BD7  +
cmp byte ptr [eax+2] 6Ch +
jnz loc_474B4D  +
xor edi edi +
test cl cl +
jnz loc_475086  +
add esi 2 +
mov edx 45h +
mov [ebx+0Ch] esi +
mov eax ebx +
call sub_472720  +
mov ecx edi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_474CA2  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov ecx esi +
mov edx 2Dh +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx edx byte ptr [eax+2] +
cmp dl 72h +
jz loc_474FF7  +
cmp dl 70h +
jz loc_47504D  +
mov eax ebx +
call sub_470CA0  +
test eax eax +
mov [esp+2Ch+var_1C] eax +
jz loc_474DE7  +
mov eax [eax] +
cmp eax 31h +
jz loc_474E10  +
cmp eax 32h +
jz loc_474D00  +
cmp eax 33h +
jnz loc_474DE7  +
mov edx [ebx+0Ch] +
xor esi esi +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_47569E  +
cmp al 4Ch +
jz loc_475682  +
cmp al 54h +
jz loc_475690  +
cmp al 73h +
nop   +
jz loc_4753A7  +
cmp al 66h +
jz loc_4753E4  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_4750A8  +
cmp al 6Fh +
jz loc_475098  +
cmp al 74h +
setz cl  +
jnz loc_476C6A  +
cmp byte ptr [edx+1] 6Ch +
jz loc_4758FE  +
mov eax ebx +
call sub_470CA0  +
test eax eax +
mov edi eax +
jz loc_4754A9  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_4756F7  +
cmp ecx 32h +
jz loc_475930  +
cmp ecx 33h +
jnz loc_4754A9  +
mov [esp+2Ch+var_18] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_476C53  +
mov eax ebx +
call sub_474490  +
cmp [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_2C] eax +
jz loc_474C3B  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_2C] eax +
mov ecx edi +
mov edx 35h +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
test esi esi +
mov [esp+2Ch+var_2C] ecx +
jz loc_474C61  +
mov edx 37h +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_2C] eax +
mov ecx [esp+2Ch+var_1C] +
mov edx 35h +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_474CA2  +
cmp byte ptr [eax+2] 6Eh +
jnz loc_474B4D  +
add eax 3 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_470F10  +
test eax eax +
mov esi eax +
jz loc_474DE7  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_474E5B  +
mov [ebx+34h] ebp +
jmp loc_474A5A  +
cmp byte ptr [eax+2] 70h +
jnz loc_474B4D  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+3] 54h +
jnz loc_475034  +
add eax 4 +
xor edx edx +
mov [ebx+0Ch] eax +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_474DE7  +
mov ecx [ebx+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebx+14h] eax +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_474CA2  +
mov dword ptr [esi] 6 +
mov [esi+4] edx +
jmp loc_474CA2  +
mov edi [esp+2Ch+var_1C] +
mov [esp+2Ch+var_18] 0 +
mov edx [edi+4] +
cmp edx 1 +
jz loc_476906  +
jle loc_474E7A  +
cmp edx 2 +
jz loc_474EA0  +
cmp edx 3 +
jnz loc_474DE7  +
mov esi [esp+2Ch+var_18] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_4750FD  +
mov eax [esp+2Ch+var_18] +
cmp byte ptr [eax] 6Eh +
jnz loc_474DE7  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_474DDF  +
mov edx 5Fh +
mov eax ebx +
call sub_472720  +
mov [esp+2Ch+var_2C] ebx +
mov edi eax +
call sub_46F960  +
mov esi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_475486  +
cmp dl 70h +
jz loc_47565F  +
cmp dl 69h +
jnz loc_474DE7  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_474DE7  +
mov eax ebx +
call sub_474490  +
mov ecx eax +
mov [esp+2Ch+var_2C] ecx +
mov edx 3Ah +
mov ecx esi +
mov eax ebx +
call sub_46B660  +
mov ecx edi +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx [esp+2Ch+var_1C] +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_474CA2  +
cmp al 77h +
jz loc_474D5F  +
xor esi esi +
jmp loc_474CA2  +
mov eax ebx +
call sub_472500  +
mov esi eax +
jmp loc_474CA2  +
mov eax ebx +
call sub_46BA20  +
mov esi eax +
jmp loc_474CA2  +
mov edi [esp+2Ch+var_1C] +
mov edi [edi+4] +
mov esi [edi] +
mov [esp+2Ch+var_14] edi +
mov edi [edi+8] +
mov [esp+2Ch+var_18] esi +
lea ecx [edi-2] +
mov edi offset aSt +
add [ebx+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_475076  +
mov edi [esp+2Ch+var_14] +
mov edx [edi+0Ch] +
jmp loc_474D0F  +
xor eax eax +
jmp loc_474A70  +
mov eax ebx +
call sub_471300  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_474CA2  +
test edx edx +
jnz loc_474DE7  +
mov ecx [esp+2Ch+var_1C] +
mov edx 34h +
mov eax ebx +
mov [esp+2Ch+var_2C] 0 +
call sub_46B660  +
mov esi eax +
jmp loc_474CA2  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_475360  +
mov edx [ebx+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_4759DF  +
cmp al 54h +
jz loc_475B33  +
cmp al 73h +
jz loc_4754B5  +
cmp al 66h +
jz loc_4754F4  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_475444  +
cmp al 6Fh +
jz loc_475434  +
cmp al 74h +
setz cl  +
jnz loc_476C17  +
cmp byte ptr [edx+1] 6Ch +
jz loc_475C71  +
mov eax ebx +
call sub_470CA0  +
test eax eax +
mov esi eax +
jz loc_47581F  +
mov edx [eax] +
cmp edx 31h +
jz loc_4759EF  +
cmp edx 32h +
jz loc_475C36  +
cmp edx 33h +
jnz loc_47581F  +
xor ecx ecx +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_476A7B  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_474490  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
mov [esp+2Ch+var_2C] eax +
jz loc_474F65  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_14] eax +
mov esi [esp+2Ch+var_18] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_4750EA  +
mov esi [esp+2Ch+var_18] +
mov edi offset unk_4A134F +
mov ecx 3 +
cmps   +
jz loc_474FB5  +
mov esi [esp+2Ch+var_18] +
mov edi offset unk_4A1352 +
mov ecx 3 +
cmps   +
jnz loc_475493  +
mov eax ebx +
call sub_470F10  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_475550  +
mov ecx [esp+2Ch+var_14] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] esi +
call sub_46B660  +
mov ecx [esp+2Ch+var_1C] +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_474CA2  +
add eax 3 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov esi eax +
mov eax ebx +
call sub_470F10  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_475387  +
mov [esp+2Ch+var_2C] edi +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_474CA2  +
mov eax ebx +
call sub_46B9E0  +
add eax 1 +
mov edx eax +
jnz loc_474CD2  +
xor esi esi +
jmp loc_474CA2  +
add eax 3 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_474490  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_474CA2  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov [esp+2Ch+var_2C] eax +
jmp loc_474C61  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov esi [ebx+0Ch] +
mov edi eax +
jmp loc_474AE1  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_474BD7  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_470F10  +
test eax eax +
mov ecx eax +
jz loc_4754A9  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_474C4B  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_471300  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_474C4B  +
mov edx 45h +
mov eax ebx +
call sub_472720  +
mov esi eax +
jmp loc_474FCA  +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 4Ch +
jz loc_475CAB  +
cmp dl 54h +
jz loc_475DAA  +
cmp dl 73h +
jz loc_47582C  +
cmp dl 66h +
jz loc_47593A  +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_475620  +
cmp dl 6Fh +
jz loc_475610  +
cmp dl 74h +
setz cl  +
jnz loc_4768F8  +
cmp byte ptr [eax+1] 6Ch +
jz loc_475EE5  +
mov eax ebx +
call sub_470CA0  +
test eax eax +
mov esi eax +
jz loc_476309  +
mov edx [eax] +
cmp edx 31h +
jz loc_475EAC  +
cmp edx 32h +
jz loc_475DCC  +
cmp edx 33h +
jnz loc_475C67  +
xor ecx ecx +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_476AC0  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_474490  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
mov [esp+2Ch+var_2C] eax +
jz loc_4751B5  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_2C] eax +
mov edx 35h +
mov ecx esi +
mov eax ebx +
call sub_46B660  +
mov edx [ebx+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_475CBC  +
cmp al 54h +
jz loc_475DBB  +
cmp al 73h +
jz loc_4756B7  +
cmp al 66h +
jz loc_4758AB  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_4755D1  +
cmp al 6Fh +
jz loc_4755C1  +
cmp al 74h +
setz cl  +
jnz loc_47685D  +
cmp byte ptr [edx+1] 6Ch +
jz loc_476046  +
mov eax ebx +
call sub_470CA0  +
test eax eax +
mov esi eax +
jz loc_475B05  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_475F1A  +
cmp ecx 32h +
jz loc_476224  +
cmp ecx 33h +
jnz loc_475B05  +
mov [esp+2Ch+var_18] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_476826  +
mov eax ebx +
call sub_474490  +
cmp [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_2C] eax +
jz loc_475278  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_46B660  +
mov edx [ebx+0Ch] +
mov esi eax +
movzx ecx byte ptr [edx] +
cmp cl 4Ch +
jz loc_475C40  +
cmp cl 54h +
jz loc_476038  +
cmp cl 73h +
jz loc_47586E  +
cmp cl 66h +
jz loc_47598D  +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_47557F  +
cmp cl 6Fh +
jz loc_47556F  +
cmp cl 74h +
setz al  +
jnz loc_476980  +
cmp byte ptr [edx+1] 6Ch +
jz loc_476170  +
mov eax ebx +
call sub_470CA0  +
test eax eax +
mov [esp+2Ch+var_18] eax +
jz loc_47548C  +
mov eax [eax] +
cmp eax 31h +
mov [esp+2Ch+var_10] eax +
jz loc_4761A8  +
mov eax [esp+2Ch+var_10] +
cmp eax 32h +
jz loc_47607B  +
cmp eax 33h +
jnz loc_47548C  +
xor ecx ecx +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_476C25  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_474490  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
mov [esp+2Ch+var_2C] eax +
jz loc_475349  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_2C] eax +
mov ecx [esp+2Ch+var_18] +
mov edx 35h +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_474DA3  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_475376  +
sub eax 72h +
cmp al 1 +
ja loc_474EB3  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov [esp+2Ch+var_14] eax +
jmp loc_474F77  +
mov eax ebx +
call sub_471300  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_2C] eax +
jmp loc_47501F  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_475BF9  +
cmp al 70h +
jnz loc_474BD7  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_474490  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_474C4B  +
cmp byte ptr [edx+1] 70h +
jnz loc_474BD7  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_475C4E  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_4754A9  +
imul ecx eax +
add eax 1 +
add ecx [ebx+10h] +
mov [ebx+14h] eax +
test ecx ecx +
jz loc_474C4B  +
mov dword ptr [ecx] 6 +
mov [ecx+4] edx +
jmp loc_474C4B  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_474F02  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_470F10  +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_47581F  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_474F77  +
mov eax ebx +
call sub_471300  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_14] eax +
jmp loc_474F77  +
add eax 1 +
mov [ebx+0Ch] eax +
xor ecx ecx +
jmp loc_474DA3  +
mov eax ebx +
call sub_474490  +
mov esi eax +
jmp loc_474FCA  +
cmp al 77h +
jz loc_47578B  +
xor ecx ecx +
nop   +
lea esi [esi+0] +
jmp loc_474C4B  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_4761E5  +
cmp al 70h +
jnz loc_474F02  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_474490  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_14] eax +
jmp loc_474F77  +
cmp byte ptr [edx+1] 70h +
jnz loc_474F02  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_475D93  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_47581F  +
imul edi eax +
add eax 1 +
mov [ebx+14h] eax +
mov [esp+2Ch+var_14] edi +
mov edi [ebx+10h] +
add [esp+2Ch+var_14] edi +
mov eax [esp+2Ch+var_14] +
test eax eax +
jz loc_474F77  +
mov dword ptr [eax] 6 +
mov [eax+4] edx +
jmp loc_474F77  +
mov eax ebx +
call sub_471300  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov esi eax +
jmp loc_474FCA  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_4752DC  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_470F10  +
test eax eax +
mov ecx eax +
jz loc_474DA3  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_474DA3  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_471300  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_474DA3  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_475214  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_470F10  +
mov edx [ebx+0Ch] +
test eax eax +
mov esi eax +
jz loc_47528B  +
cmp byte ptr [edx] 49h +
jnz loc_47528B  +
mov eax ebx +
call sub_471300  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47528B  +
cmp byte ptr [eax+1] 6Eh +
jnz loc_475152  +
add eax 2 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_470F10  +
test eax eax +
mov edi eax +
jz loc_476309  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
jnz loc_4751C8  +
mov eax ebx +
call sub_471300  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_4751C8  +
cmp byte ptr [eax+1] 69h +
jnz loc_474DE7  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_472720  +
mov ecx eax +
jmp loc_474DA3  +
mov eax ebx +
call sub_472500  +
mov ecx eax +
jmp loc_474C4B  +
mov eax ebx +
call sub_46BA20  +
mov ecx eax +
jmp loc_474C4B  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_472720  +
mov ecx eax +
jmp loc_474C4B  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_476604  +
cmp al 70h +
jnz loc_475214  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_474490  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47528B  +
mov eax [eax+4] +
mov [esp+2Ch+var_14] ecx +
mov edx [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edx +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
test eax eax +
jz loc_47622E  +
mov eax [edi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_47686A  +
jle loc_475B0F  +
cmp eax 2 +
jz loc_475B43  +
cmp eax 3 +
nop   +
jnz loc_4754A9  +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
test eax eax +
jz loc_476693  +
cmp byte ptr [edx] 6Eh +
jnz loc_4754A9  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_4754A1  +
mov edx 5Fh +
mov eax ebx +
call sub_472720  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_18] eax +
call sub_46F960  +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_476808  +
cmp dl 70h +
jz loc_4767E7  +
cmp dl 69h +
jnz loc_4754A9  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_4754A9  +
mov eax ebx +
call sub_474490  +
mov ecx [esp+2Ch+var_14] +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx [esp+2Ch+var_18] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx edi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_474C4B  +
cmp al 77h +
jz loc_475A73  +
mov [esp+2Ch+var_14] 0 +
jmp loc_474F77  +
movzx edx byte ptr [eax+1] +
cmp dl 72h +
jz loc_476326  +
cmp dl 70h +
jnz loc_475152  +
add eax 2 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_474490  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_4751C8  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_476260  +
cmp al 70h +
jnz loc_4752DC  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_474490  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_474DA3  +
cmp byte ptr [edx+1] 70h +
jnz loc_475214  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_476644  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_475B05  +
imul esi eax +
add eax 1 +
add esi [ebx+10h] +
mov [ebx+14h] eax +
test esi esi +
jz loc_475B07  +
mov [esi+4] edx +
mov edx [ebx+0Ch] +
mov dword ptr [esi] 6 +
jmp loc_47528B  +
xor edi edi +
test cl cl +
jnz loc_47623E  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_472720  +
mov ecx edi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_474C4B  +
mov eax [eax+4] +
xor edx edx +
jmp loc_475733  +
cmp byte ptr [eax+1] 70h +
jnz loc_475152  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 54h +
jnz loc_4762F7  +
add eax 3 +
xor edx edx +
mov [ebx+0Ch] eax +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_476309  +
imul edi eax +
add eax 1 +
add edi [ebx+10h] +
mov [ebx+14h] eax +
test edi edi +
jz loc_475C69  +
mov [edi+4] edx +
mov edx [ebx+0Ch] +
mov dword ptr [edi] 6 +
jmp loc_4751C8  +
cmp byte ptr [edx+1] 70h +
jnz loc_4752DC  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_4762A1  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
xor ecx ecx +
cmp eax [ebx+18h] +
jge loc_474DA3  +
imul ecx eax +
add eax 1 +
add ecx [ebx+10h] +
mov [ebx+14h] eax +
test ecx ecx +
jz loc_474DA3  +
mov dword ptr [ecx] 6 +
mov [ecx+4] edx +
jmp loc_474DA3  +
mov eax ebx +
call sub_472500  +
mov [esp+2Ch+var_14] eax +
jmp loc_474F77  +
mov eax [eax+4] +
mov [esp+2Ch+var_14] edx +
mov edi [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edi +
sub eax 2 +
add [ebx+30h] eax +
call strcmp  +
mov edx [esp+2Ch+var_14] +
test eax eax +
jz loc_476683  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_4767AD  +
jle loc_475D6D  +
cmp eax 2 +
jz loc_475CCD  +
cmp eax 3 +
nop   +
jnz loc_47581F  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_47650E  +
cmp byte ptr [edi] 6Eh +
jnz loc_47581F  +
movzx eax byte ptr [edi+1] +
cmp al 61h +
jnz loc_475817  +
mov edx 5Fh +
mov eax ebx +
call sub_472720  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] eax +
call sub_46F960  +
mov edi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_476B1F  +
cmp dl 70h +
jz loc_476AFE  +
cmp dl 69h +
jnz loc_47581F  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_47581F  +
mov eax ebx +
call sub_474490  +
mov [esp+2Ch+var_2C] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebx +
call sub_46B660  +
mov ecx [esp+2Ch+var_14] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_14] eax +
jmp loc_474F77  +
cmp al 77h +
jz loc_475FAC  +
xor esi esi +
mov edx [ebx+0Ch] +
jmp loc_47528B  +
test eax eax +
jnz loc_4754A9  +
mov ecx edi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_474C4B  +
mov eax ebx +
call sub_46BA20  +
mov [esp+2Ch+var_14] eax +
jmp loc_474F77  +
mov eax [edi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_4762BA  +
mov eax ebx +
mov [esp+2Ch+var_14] edx +
call sub_474490  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_14] edx +
call strcmp  +
mov edx [esp+2Ch+var_14] +
test eax eax +
jz loc_476313  +
mov [esp+2Ch+var_28] offset unk_4A134F +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_14] edx +
call strcmp  +
test eax eax +
jz loc_475BB9  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_4A1352 +
mov [esp+2Ch+var_2C] edx +
call strcmp  +
test eax eax +
jnz loc_4762E9  +
mov eax ebx +
call sub_470F10  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4768C4  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_18] +
mov edx 37h +
mov eax ebx +
call sub_46B660  +
mov ecx edi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_474C4B  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov edi eax +
mov eax ebx +
call sub_470F10  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_47665D  +
mov [esp+2Ch+var_2C] ecx +
mov ecx edi +
mov edx 1 +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_474C4B  +
mov eax [eax+4] +
xor edi edi +
jmp loc_475A23  +
mov eax ebx +
call sub_472500  +
mov ecx eax +
jmp loc_474DA3  +
mov eax ebx +
call sub_46B9E0  +
add eax 1 +
mov edx eax +
jnz loc_475406  +
xor ecx ecx +
jmp loc_474C4B  +
xor edi edi +
mov edx [ebx+0Ch] +
jmp loc_4751C8  +
xor esi esi +
test cl cl +
jz loc_475C81  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov esi eax +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_472720  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_14] eax +
jmp loc_474F77  +
mov eax ebx +
call sub_472500  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_4751C8  +
mov eax ebx +
call sub_472500  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47528B  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_476366  +
mov eax ebx +
call sub_474490  +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_47624D  +
mov [esp+2Ch+var_28] offset unk_4A134F +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_475D2B  +
mov [esp+2Ch+var_28] offset unk_4A1352 +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jnz loc_476952  +
mov eax ebx +
call sub_470F10  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_476ADF  +
mov ecx [esp+2Ch+var_14] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] edi +
call sub_46B660  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_14] eax +
jmp loc_474F77  +
test eax eax +
jnz loc_47581F  +
mov [esp+2Ch+var_2C] 0 +
mov ecx esi +
mov edx 34h +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_14] eax +
jmp loc_474F77  +
mov eax ebx +
call sub_46B9E0  +
add eax 1 +
mov edx eax +
jnz loc_475516  +
jmp loc_47581F  +
mov eax ebx +
call sub_46BA20  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_4751C8  +
mov eax ebx +
call sub_46BA20  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47528B  +
mov eax [eax+4] +
xor edi edi +
cmp eax 1 +
jz loc_476D30  +
jle loc_47642E  +
cmp eax 2 +
jz loc_47638D  +
cmp eax 3 +
lea esi [esi+0] +
jnz loc_475C67  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_476CE8  +
cmp byte ptr [edi] 6Eh +
jnz loc_476309  +
movzx eax byte ptr [edi+1] +
cmp al 61h +
jnz loc_476D23  +
mov edx 5Fh +
mov eax ebx +
call sub_472720  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_18] eax +
call sub_46F960  +
mov edx [ebx+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_476D16  +
cmp al 70h +
jz loc_476C8D  +
cmp al 69h +
jnz loc_47630C  +
cmp byte ptr [edx+1] 6Ch +
nop   +
jnz loc_476C0B  +
mov eax ebx +
call sub_474490  +
mov ecx edi +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx [esp+2Ch+var_18] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov edx 38h +
mov ecx esi +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_4751C8  +
mov eax [eax+4] +
mov [esp+2Ch+var_18] edx +
mov edi [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edi +
sub eax 2 +
add [ebx+30h] eax +
call strcmp  +
mov edx [esp+2Ch+var_18] +
test eax eax +
jz loc_476C77  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
jmp loc_475DD1  +
xor esi esi +
test cl cl +
jnz loc_476BBB  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_472720  +
mov edx 30h +
mov ecx esi +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_4751C8  +
mov eax [eax+4] +
mov [esp+2Ch+var_14] ecx +
mov edx [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edx +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
test eax eax +
jz loc_476724  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_4766EA  +
jle loc_4766B5  +
cmp eax 2 +
jz loc_476455  +
cmp eax 3 +
jnz loc_475B05  +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
test eax eax +
jz loc_47678B  +
cmp byte ptr [edx] 6Eh +
jnz loc_475B05  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_475AFD  +
mov edx 5Fh +
mov eax ebx +
call sub_472720  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_18] eax +
call sub_46F960  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_14] eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_476767  +
cmp al 70h +
jz loc_476755  +
cmp al 69h +
jnz loc_47681F  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_476815  +
mov eax ebx +
call sub_474490  +
mov ecx [esp+2Ch+var_14] +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx [esp+2Ch+var_18] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47528B  +
mov eax ebx +
call sub_46BA20  +
mov ecx eax +
jmp loc_474DA3  +
xor esi esi +
test cl cl +
jnz loc_476C44  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_472720  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47528B  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_14] 0 +
mov eax [eax+4] +
cmp eax 1 +
jz loc_476A0D  +
jle loc_4765DE  +
cmp eax 2 +
jz loc_47652E  +
cmp eax 3 +
jnz loc_47548C  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jz loc_476B8B  +
mov eax [esp+2Ch+var_14] +
cmp byte ptr [eax] 6Eh +
jnz loc_47548C  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_4769BC  +
mov edx 5Fh +
mov eax ebx +
call sub_472720  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] eax +
call sub_46F960  +
mov [esp+2Ch+var_10] eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_4769AF  +
xor ecx ecx +
cmp dl 70h +
jz loc_47698E  +
cmp dl 69h +
jnz loc_474DA3  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_474DA3  +
mov eax ebx +
call sub_474490  +
mov ecx [esp+2Ch+var_10] +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx [esp+2Ch+var_14] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx [esp+2Ch+var_18] +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_474DA3  +
xor ecx ecx +
test al al +
jnz loc_4768E9  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_472720  +
mov ecx [esp+2Ch+var_18] +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_474DA3  +
mov eax [esp+2Ch+var_18] +
mov eax [eax+4] +
mov ecx [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] ecx +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_14] ecx +
call strcmp  +
test eax eax +
jz loc_476BCA  +
mov eax [esp+2Ch+var_18] +
mov eax [eax+4] +
mov eax [eax+0Ch] +
jmp loc_47608A  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov esi eax +
mov eax ebx +
call sub_470F10  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_47683D  +
mov [esp+2Ch+var_2C] edi +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_14] eax +
jmp loc_474F77  +
mov eax [eax+4] +
xor edx edx +
jmp loc_475F56  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov [esp+2Ch+var_2C] eax +
jmp loc_474C3B  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov edi eax +
jmp loc_475908  +
mov edx 45h +
mov eax ebx +
call sub_472720  +
mov edi eax +
jmp loc_475D40  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_470F10  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_476BE5  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_18] +
mov edx 1 +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_474DA3  +
mov eax ebx +
call sub_46B9E0  +
add eax 1 +
mov edx eax +
jnz loc_4759AF  +
xor ecx ecx +
jmp loc_474DA3  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_4762D0  +
sub eax 72h +
cmp al 1 +
ja loc_475B52  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] edx +
call sub_46F960  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
jmp loc_475B65  +
mov eax ebx +
call sub_474490  +
mov ecx eax +
jmp loc_475BCE  +
mov eax ebx +
call sub_46B9E0  +
add eax 1 +
mov edx eax +
jnz loc_47595C  +
mov edx [ebx+0Ch] +
xor edi edi +
jmp loc_4751C8  +
mov edx 45h +
mov eax ebx +
call sub_472720  +
mov ecx eax +
jmp loc_475BCE  +
add eax 2 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov esi eax +
mov eax ebx +
call sub_470F10  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_476960  +
mov [esp+2Ch+var_2C] edi +
mov edx 1 +
mov ecx esi +
mov eax ebx +
call sub_46B660  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_4751C8  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_47637C  +
sub eax 72h +
cmp al 1 +
ja loc_475CDC  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov [esp+2Ch+var_14] eax +
jmp loc_475CE7  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_476CC1  +
mov eax ebx +
call sub_474490  +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_476CAE  +
mov [esp+2Ch+var_28] offset unk_4A134F +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_4763EB  +
mov [esp+2Ch+var_28] offset unk_4A1352 +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jnz loc_476D08  +
mov eax ebx +
call sub_470F10  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_476D62  +
mov ecx [esp+2Ch+var_18] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] edi +
call sub_46B660  +
mov edx 36h +
mov ecx esi +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_4751C8  +
test eax eax +
jnz loc_475C67  +
mov edx 34h +
mov ecx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_46B660  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_4751C8  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_4769DE  +
mov eax ebx +
mov [esp+2Ch+var_14] edx +
call sub_474490  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_14] edx +
call strcmp  +
mov edx [esp+2Ch+var_14] +
test eax eax +
jz loc_4769CB  +
mov [esp+2Ch+var_28] offset unk_4A134F +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_14] edx +
call strcmp  +
test eax eax +
jz loc_4764CB  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_4A1352 +
mov [esp+2Ch+var_2C] edx +
call strcmp  +
test eax eax +
jnz loc_4766DC  +
mov eax ebx +
call sub_470F10  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_476B2C  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_18] +
mov edx 37h +
mov eax ebx +
call sub_46B660  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47528B  +
mov eax ebx +
call sub_474490  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_474490  +
mov edi eax +
mov eax ebx +
call sub_474490  +
jmp loc_475ABF  +
mov eax [esp+2Ch+var_18] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_476B64  +
mov eax ebx +
call sub_474490  +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jz loc_476B51  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_4A134F +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jz loc_47659C  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_4A1352 +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jnz loc_476BAD  +
mov eax ebx +
call sub_470F10  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_476A42  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_10] +
mov edx 37h +
mov eax ebx +
call sub_46B660  +
mov ecx [esp+2Ch+var_18] +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_474DA3  +
test eax eax +
jnz loc_47548C  +
mov ecx [esp+2Ch+var_18] +
mov edx 34h +
mov eax ebx +
mov [esp+2Ch+var_2C] 0 +
call sub_46B660  +
mov ecx eax +
jmp loc_474DA3  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov esi eax +
mov eax ebx +
call sub_470F10  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_476A9A  +
mov [esp+2Ch+var_2C] ecx +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_46B660  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47528B  +
mov eax ebx +
call sub_46B9E0  +
add eax 1 +
mov edx eax +
jnz loc_4758CD  +
xor esi esi +
jmp loc_475B07  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_471300  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_2C] eax +
jmp loc_475C21  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov [esp+2Ch+var_2C] eax +
jmp loc_474F65  +
mov eax ebx +
call sub_474490  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_474490  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_474490  +
jmp loc_4757D9  +
test eax eax +
jnz loc_475B05  +
mov ecx esi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_46B660  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_47528B  +
mov eax ebx +
call sub_474490  +
mov ecx eax +
jmp loc_4764E0  +
test edx edx +
mov [esp+2Ch+var_18] 0 +
jz loc_47670A  +
movzx eax byte ptr [edx] +
cmp al 6Dh +
jnz loc_476718  +
cmp al [edx+1] +
mov [esp+2Ch+var_18] 0 +
jz loc_476735  +
cmp ecx 33h +
jnz loc_475256  +
jmp loc_47524A  +
cmp al 70h +
lea esi [esi+0] +
jnz loc_47670A  +
jmp loc_4766FD  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov [esp+2Ch+var_2C] eax +
nop   +
jmp loc_475278  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_18] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_47670A  +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_18] 0 +
jmp loc_47670A  +
cmp byte ptr [edx+1] 69h +
mov ecx 70h +
jz loc_476774  +
xor esi esi +
jmp loc_4752BD  +
add edx 1 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_475FF7  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_472720  +
jmp loc_475FF7  +
mov eax ebx +
call sub_474490  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_474490  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_474490  +
jmp loc_475FF7  +
xor ecx ecx +
test edi edi +
jz loc_4767BE  +
movzx eax byte ptr [edi] +
cmp al 6Dh +
jz loc_4767CC  +
cmp al 70h +
jz loc_4767CC  +
cmp edx 33h +
jnz loc_474F3E  +
jmp loc_474F32  +
xor ecx ecx +
cmp al [edi+1] +
jnz loc_4767BE  +
mov eax [ebx+0Ch] +
mov cl 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_4767BE  +
add eax 1 +
xor cl cl +
mov [ebx+0Ch] eax +
jmp loc_4767BE  +
cmp byte ptr [eax+1] 69h +
jnz loc_4754A9  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_472720  +
jmp loc_4757D9  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_4757D9  +
mov ecx 69h +
jmp loc_476760  +
xor esi esi +
jmp loc_47528B  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_472720  +
jmp loc_47525D  +
mov eax ebx +
call sub_471300  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_2C] eax +
jmp loc_47620D  +
cmp al 69h +
jz loc_47520A  +
jmp loc_475214  +
test edx edx +
mov [esp+2Ch+var_18] 0 +
jz loc_47688A  +
movzx eax byte ptr [edx] +
cmp al 6Dh +
jnz loc_476898  +
cmp al [edx+1] +
mov [esp+2Ch+var_18] 0 +
jz loc_4768A4  +
cmp ecx 33h +
jnz loc_474C19  +
jmp loc_474C0D  +
cmp al 70h +
lea esi [esi+0] +
jnz loc_47688A  +
jmp loc_47687D  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_18] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_47688A  +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_18] 0 +
jmp loc_47688A  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_471300  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_475BCE  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov ecx eax +
jmp loc_47617A  +
cmp dl 69h +
jz loc_475148  +
jmp loc_475152  +
mov edi [esp+2Ch+var_18] +
test edi edi +
jz loc_476924  +
movzx edx byte ptr [edi] +
cmp dl 6Dh +
jz loc_47691B  +
cmp dl 70h +
jnz loc_476924  +
mov edi [esp+2Ch+var_18] +
cmp dl [edi+1] +
jz loc_47693A  +
mov edx [ebx+0Ch] +
xor esi esi +
cmp eax 33h +
jz loc_474B82  +
movzx eax byte ptr [edx] +
jmp loc_474B8D  +
mov edx [ebx+0Ch] +
mov esi 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_476929  +
add edx 1 +
xor si si +
mov [ebx+0Ch] edx +
jmp loc_476929  +
mov eax ebx +
call sub_474490  +
mov edi eax +
jmp loc_475D40  +
mov eax ebx +
call sub_471300  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_2C] eax +
jmp loc_47634E  +
cmp cl 69h +
jz loc_4752D2  +
jmp loc_4752DC  +
cmp byte ptr [eax+1] 69h +
jnz loc_474DA3  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_472720  +
jmp loc_476130  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_476130  +
cmp al 77h +
jz loc_4760E0  +
xor ecx ecx +
jmp loc_474DA3  +
mov edx 45h +
mov eax ebx +
call sub_472720  +
mov ecx eax +
jmp loc_4764E0  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_4769F4  +
sub eax 72h +
cmp al 1 +
ja loc_476464  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] edx +
call sub_46F960  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
jmp loc_476477  +
mov eax [esp+2Ch+var_14] +
xor ecx ecx +
test eax eax +
jz loc_476A29  +
movzx eax byte ptr [eax] +
cmp al 6Dh +
jnz loc_476A39  +
mov edx [esp+2Ch+var_14] +
xor ecx ecx +
cmp al [edx+1] +
jz loc_476A67  +
cmp [esp+2Ch+var_10] 33h +
jnz loc_475322  +
jmp loc_475316  +
cmp al 70h +
jnz loc_476A29  +
lea esi [esi+0] +
jmp loc_476A1E  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_471300  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_4765B1  +
mov eax [ebx+0Ch] +
mov cl 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_476A29  +
add eax 1 +
xor cl cl +
mov [ebx+0Ch] eax +
jmp loc_476A29  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_472720  +
mov ecx [esp+2Ch+var_14] +
jmp loc_474F4D  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_471300  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_2C] eax +
jmp loc_47662C  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_472720  +
mov ecx [esp+2Ch+var_18] +
jmp loc_47519D  +
mov eax ebx +
call sub_471300  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov edi eax +
jmp loc_475D40  +
cmp byte ptr [eax+1] 69h +
jnz loc_47581F  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_472720  +
jmp loc_475ABF  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_475ABF  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_471300  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov ecx eax +
jmp loc_4764E0  +
mov edx 45h +
mov eax ebx +
call sub_472720  +
mov ecx eax +
jmp loc_4765B1  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_476B7A  +
sub eax 72h +
cmp al 1 +
ja loc_476541  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov [esp+2Ch+var_10] eax +
jmp loc_47654C  +
mov eax ebx +
call sub_474490  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_474490  +
mov [esp+2Ch+var_10] eax +
mov eax ebx +
call sub_474490  +
jmp loc_476130  +
mov eax ebx +
call sub_474490  +
mov ecx eax +
jmp loc_4765B1  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov esi eax +
jmp loc_475EEF  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
jmp loc_475346  +
cmp dl 69h +
jz loc_474AD1  +
jmp loc_474B4D  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_471300  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov [esp+2Ch+var_2C] eax +
jmp loc_47628A  +
mov eax 69h +
xor edi edi +
jmp loc_4751F7  +
cmp al 69h +
jz loc_474EF8  +
nop   +
jmp loc_474F02  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_472720  +
mov ecx [esp+2Ch+var_14] +
jmp loc_475331  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov esi eax +
jmp loc_476050  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_472720  +
jmp loc_474C20  +
cmp al 69h +
jz loc_474BCD  +
jmp loc_474BD7  +
mov [esp+2Ch+var_2C] ebx +
lea esi [esi+0] +
call sub_46F960  +
mov [esp+2Ch+var_2C] eax +
jmp loc_4751B5  +
cmp byte ptr [edx+1] 69h +
jnz loc_476C10  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_472720  +
jmp loc_475E6D  +
mov edx 45h +
mov eax ebx +
call sub_472720  +
mov edi eax +
jmp loc_476400  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_476CD7  +
sub eax 72h +
cmp al 1 +
ja loc_47639C  +
mov [esp+2Ch+var_2C] ebx +
call sub_46F960  +
mov [esp+2Ch+var_18] eax +
jmp loc_4763A7  +
mov eax ebx +
call sub_474490  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_474490  +
mov edi eax +
mov eax ebx +
call sub_474490  +
jmp loc_475E6D  +
mov eax ebx +
call sub_474490  +
mov edi eax +
jmp loc_476400  +
add edx 1 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_475E6D  +
cmp al 77h +
jz loc_475E23  +
jmp loc_476309  +
xor ecx ecx +
test edi edi +
jz loc_476D44  +
movzx eax byte ptr [edi] +
cmp al 6Dh +
jnz loc_476D55  +
xor ecx ecx +
cmp al [edi+1] +
jz loc_476D81  +
cmp edx 33h +
jnz loc_47518E  +
lea esi [esi+0] +
jmp loc_475182  +
cmp al 70h +
jnz loc_476D44  +
lea esi [esi+0] +
jmp loc_476D3D  +
mov eax ebx +
call sub_471300  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_46B660  +
mov edi eax +
jmp loc_476400  +
mov eax [ebx+0Ch] +
mov cl 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_476D44  +
add eax 1 +
xor cl cl +
mov [ebx+0Ch] eax +
jmp loc_476D44  +
***
push edi  +
push esi  +
push ebx  +
sub esp 16Ch +
mov eax [ebp+arg_8] +
mov ebx [ebp+arg_4] +
lea edx [ebp+var_2C] +
mov esi esp +
mov [ebp+var_5C] 0 +
mov [ebp+var_58] 0 +
mov [ebp+var_54] eax +
mov eax [ebp+arg_C] +
mov ecx ebx +
mov [ebp+var_4C] 0 +
mov [ebp+var_48] 0 +
mov [ebp+var_50] eax +
lea eax [ebp+var_20] +
mov [ebp+var_40] 0 +
mov [ebp+var_3C] 0 +
mov [ebp+var_44] 0 +
mov [ebp+var_38] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_30] 0 +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
call sub_46B860  +
mov eax [ebp+var_2C] +
mov edx [ebp+var_20] +
mov [ebp+var_1C] 0 +
imul edx eax +
lea eax ds:12h[eax*8] +
and eax 0FFFFFFF0h +
mov [ebp+var_20] edx +
call sub_47A1D0  +
sub esp eax +
lea eax ds:12h[edx*8] +
lea ecx [esp+178h+var_16C] +
and eax 0FFFFFFF0h +
call sub_47A1D0  +
mov edx [ebp+arg_0] +
sub esp eax +
lea eax [esp+178h+var_16C] +
mov [ebp+var_28] eax +
mov eax [ebp+var_38] +
lea edi [ebp+var_15C] +
mov [ebp+var_34] ecx +
mov ecx ebx +
mov [ebp+var_164] ebx +
mov [ebp+var_160] eax +
lea eax [ebp+var_164] +
mov [ebp+var_38] eax +
mov eax edi +
call sub_46C0F0  +
mov eax [ebp+var_160] +
mov [ebp+var_38] eax +
mov eax [ebp+var_5C] +
mov esp esi +
mov ecx [ebp+var_50] +
mov edx [ebp+var_54] +
mov byte ptr [ebp+eax+var_15C] 0 +
mov [esp+178h+var_174] eax +
mov [esp+178h+var_178] edi +
mov [esp+178h+var_170] ecx +
call edx  +
mov edx [ebp+var_44] +
xor eax eax +
test edx edx +
setz al  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_476EE0  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 6Ch +
cmp byte ptr [eax] 5Fh +
mov [ebp+var_5C] edx +
mov [ebp+var_60] ecx +
jz loc_4770C0  +
mov edi offset a_global_ +
mov ecx 8 +
mov esi ebx +
cmps   +
jz loc_477074  +
mov eax [ebp+var_5C] +
and eax 10h +
jz loc_47706C  +
xor esi esi +
mov [esp+78h+var_78] ebx +
mov edi esp +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_2C] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
mov eax [ebp+var_5C] +
mov [ebp+var_30] edx +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_4C] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
lea eax [eax+edx*4] +
lea eax ds:12h[eax*4] +
and eax 0FFFFFFF0h +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_47A1D0  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+78h+var_68] +
and eax 0FFFFFFF0h +
call sub_47A1D0  +
sub esp eax +
cmp esi 1 +
lea eax [esp+78h+var_68] +
mov [ebp+var_44] ecx +
mov [ebp+var_38] eax +
jz loc_477020  +
jb loc_4770D5  +
cmp esi 3 +
ja loc_4770D5  +
cmp byte ptr [ebx+0Bh] 5Fh +
lea edx [ebx+0Bh] +
mov [ebp+var_48] edx +
jnz loc_476FD1  +
cmp byte ptr [ebx+0Ch] 5Ah +
jz loc_4770F0  +
mov [esp+78h+var_78] edx +
lea ebx [ebp+var_54] +
mov [ebp+var_64] edx +
call strlen  +
mov edx [ebp+var_64] +
mov ecx eax +
mov eax ebx +
call sub_46B6C0  +
mov ecx eax +
xor edx edx +
cmp esi 2 +
setnz dl  +
mov eax ebx +
add edx 42h +
mov [esp+78h+var_78] 0 +
call sub_46B660  +
mov esi [ebp+var_48] +
mov [esp+78h+var_78] esi +
mov ebx eax +
call strlen  +
add esi eax +
mov [ebp+var_48] esi +
jmp loc_477035  +
lea eax [ebp+var_54] +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] eax +
call sub_4723E0  +
mov ebx eax +
test byte ptr [ebp+var_5C] 1 +
jz loc_477045  +
mov edx [ebp+var_48] +
xor eax eax +
cmp byte ptr [edx] 0 +
jnz loc_47706A  +
test ebx ebx +
jz loc_4770E7  +
mov eax [ebp+arg_0] +
mov [esp+78h+var_6C] eax +
mov eax [ebp+var_60] +
mov [esp+78h+var_74] ebx +
mov [esp+78h+var_70] eax +
mov eax [ebp+var_5C] +
mov [esp+78h+var_78] eax +
call sub_476DA0  +
mov esp edi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+8] +
cmp al 2Eh +
jz loc_477080  +
cmp al 5Fh +
jnz loc_4770B0  +
movzx eax byte ptr [ebx+9] +
cmp al 49h +
setz dl  +
jz loc_477093  +
cmp al 44h +
jnz loc_476F0E  +
cmp byte ptr [ebx+0Ah] 5Fh +
jnz loc_476F0E  +
mov esi edx +
shl esi 1Fh +
sar esi 1Fh +
add esi 3 +
jmp loc_476F1C  +
cmp al 24h +
jnz loc_476F0E  +
jmp loc_477080  +
cmp byte ptr [eax+1] 5Ah +
jnz loc_476EFA  +
mov esi 1 +
nop   +
jmp loc_476F1C  +
lea eax [ebp+var_54] +
mov [esp+78h+var_78] eax +
call sub_46F960  +
mov ebx eax +
jmp loc_477035  +
xor eax eax +
mov esp edi +
jmp loc_47706C  +
add ebx 0Dh +
xor edx edx +
mov [ebp+var_48] ebx +
lea ebx [ebp+var_54] +
mov eax ebx +
call sub_471E40  +
mov ecx eax +
jmp loc_476FED  +
***
sub esp 28h +
lea ecx [esp+28h+var_18] +
mov [esp+28h+var_28] ecx +
mov ecx offset sub_46BEF0 +
mov [esp+28h+var_18] 0 +
mov [esp+28h+var_14] 0 +
mov [esp+28h+var_10] 0 +
mov [esp+28h+var_C] 0 +
call sub_476EE0  +
test eax eax +
jz loc_477166  +
mov edx [esp+28h+var_C] +
mov eax 1 +
test edx edx +
cmovz eax [esp+28h+var_10] +
mov [ebx] eax +
mov eax [esp+28h+var_18] +
add esp 28h +
pop ebx  +
retn   +
mov eax [esp+28h+var_18] +
mov [esp+28h+var_28] eax +
call free  +
xor eax eax +
mov dword ptr [ebx] 0 +
jmp loc_477161  +
***
push ebx  +
sub esp 28h +
mov eax [esp+38h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
test eax eax +
mov dword ptr [esp+1Ch] 0 +
jnz loc_4771F3  +
lea eax [esp+10h] +
mov [esp+0Ch] eax +
mov eax [esp+34h] +
mov dword ptr [esp+8] offset sub_46BEF0 +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_476DA0  +
test eax eax +
jz loc_477224  +
mov edx [esp+1Ch] +
mov eax 1 +
test edx edx +
mov edx [esp+3Ch] +
cmovz eax [esp+18h] +
mov [edx] eax +
mov eax [esp+10h] +
add esp 28h +
pop ebx  +
retn   +
***
cmp eax 2 +
mov ebx 2 +
jbe loc_477206  +
lea esi [esi+0] +
add ebx ebx +
cmp eax ebx +
ja loc_477200  +
mov [esp+4] ebx +
mov dword ptr [esp] 0 +
call realloc  +
test eax eax +
jz loc_47723E  +
mov [esp+10h] eax +
mov [esp+18h] ebx +
jmp loc_4771AC  +
***
mov eax [esp+10h] +
mov [esp] eax +
call free  +
mov eax [esp+3Ch] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_4771EE  +
***
mov eax [esp+10h] +
mov [esp] eax +
call free  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 1 +
jmp loc_4771AC  +
***
push ebx  +
mov ecx [esp+8] +
mov edx [esp+10h] +
mov eax [esp+14h] +
lea ebx [ecx+edx] +
mov [eax+4] ebx +
mov ebx [esp+0Ch] +
mov [eax] ecx +
mov [eax+0Ch] ecx +
lea ecx [edx+edx] +
mov [eax+18h] ecx +
mov [eax+8] ebx +
mov dword ptr [eax+14h] 0 +
mov [eax+24h] edx +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
mov dword ptr [eax+34h] 0 +
mov dword ptr [eax+38h] 0 +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
lea ecx [esp+1Ch+var_10] +
mov eax [esp+1Ch+arg_0] +
call sub_477110  +
add esp 1Ch +
retn   +
***
mov edx [esp+10h] +
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov [esp+4] edx +
mov edx [esp+8] +
jmp sub_476EE0  +
***
sub esp 1Ch +
mov edx 25h +
mov eax [esp+1Ch+arg_0] +
lea ecx [esp+1Ch+var_10] +
call sub_477110  +
add esp 1Ch +
retn   +
***
mov edx [esp+0Ch] +
mov eax [esp+4] +
mov ecx [esp+8] +
mov [esp+4] edx +
mov edx 25h +
jmp sub_476EE0  +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_472610  +
xor edx edx +
test eax eax +
cmovnz edx [esp+8] +
add esp 1Ch +
mov eax edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_472610  +
xor edx edx +
test eax eax +
cmovnz edx [esp+0Ch] +
add esp 1Ch +
mov eax edx +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov ecx [eax] +
test ecx ecx +
jz loc_4773F0  +
mov esi [eax+4] +
mov eax [eax+8] +
sub eax esi +
cmp edx eax +
jle loc_4773E9  +
sub esi ecx +
add edx esi +
lea edi [edx+edx] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] ecx +
call sub_4621C0  +
add esi eax +
mov [ebx] eax +
add eax edi +
mov [ebx+4] esi +
mov [ebx+8] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edx 20h +
mov esi 20h +
cmovge esi edx +
mov [esp+10h+var_10] esi +
call sub_462140  +
add esi eax +
mov [ebx+8] esi +
mov [ebx] eax +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_18] edx +
call strlen  +
mov esi eax +
mov edx eax +
mov eax ebx +
call sub_4773B0  +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
test edx edx +
jz loc_4774E0  +
movzx ecx byte ptr [edx] +
test cl cl +
jz loc_4774E0  +
sub ecx 46h +
cmp cl 11h +
ja loc_4774E0  +
movzx ecx cl +
jmp ds:off_4A23DC[ecx*4]  +
lea ebx [edx+1] +
mov edx offset aExternWindows +
call sub_477420  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
add esp 8 +
lea eax [edx+1] +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternC +
call sub_477420  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternC_0 +
call sub_477420  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternPascal +
call sub_477420  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
***
test edx edx +
jz loc_4775BE  +
push esi  +
mov esi eax +
push ebx  +
sub esp 4 +
movzx eax byte ptr [edx] +
test al al +
jz loc_477530  +
lea ebx [edx+2] +
mov edx eax +
cmp dl 4Eh +
lea eax [ebx-2] +
jnz loc_477532  +
movzx ecx byte ptr [ebx-1] +
lea edx [ecx-61h] +
cmp dl 0Ah +
ja loc_477530  +
movzx edx dl +
jmp ds:off_4A2464[edx*4]  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov edx offset a@nogc +
mov eax esi +
call sub_477420  +
movzx edx byte ptr [ebx] +
add ebx 2 +
jmp loc_47750B  +
mov edx offset a@safe +
mov eax esi +
call sub_477420  +
jmp loc_477544  +
mov edx offset a@trusted +
mov eax esi +
call sub_477420  +
jmp loc_477544  +
mov edx offset a@property +
mov eax esi +
call sub_477420  +
jmp loc_477544  +
mov edx offset aRef +
mov eax esi +
call sub_477420  +
jmp loc_477544  +
mov edx offset aNothrow +
mov eax esi +
call sub_477420  +
jmp loc_477544  +
mov edx offset aPure +
mov eax esi +
call sub_477420  +
jmp loc_477544  +
mov edx offset aReturn +
mov eax esi +
call sub_477420  +
jmp loc_477544  +
xor eax eax +
retn   +
***
jmp sub_4775D0  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_28] edx +
call strlen  +
test eax eax +
mov esi eax +
jnz loc_4775F1  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx eax +
mov eax ebp +
call sub_4773B0  +
mov eax [ebp+4] +
mov ebx [ebp+0] +
lea ecx [eax-1] +
cmp ecx ebx +
jb loc_477618  +
movzx eax byte ptr [ecx] +
sub ecx 1 +
mov [ecx+esi+1] al +
mov ebx [ebp+0] +
cmp ecx ebx +
jnb loc_477607  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
call memcpy  +
add [ebp+4] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
cmp cl 61h +
setz al  +
mov ebp eax +
mov eax ecx +
and eax 0FFFFFFFDh +
cmp al 75h +
jz loc_4776E0  +
mov eax ebp +
test al al +
jnz loc_4776E0  +
cmp cl 62h +
jz loc_477860  +
movzx eax byte ptr [edx] +
xor ecx ecx +
mov ebx edx +
test ds:byte_49F240[eax+eax] 4 +
jz loc_4776CB  +
lea esi [esi+0] +
add ebx 1 +
movzx eax byte ptr [ebx] +
add ecx 1 +
test ds:byte_49F240[eax+eax] 4 +
jnz loc_4776B0  +
test ecx ecx +
jnz loc_4778A8  +
lea eax [edi-68h] +
cmp al 0Ch +
ja loc_4778A1  +
movzx eax al +
jmp ds:off_4A24B0[eax*4]  +
lea eax [esp+34h+var_24] +
mov [esp+34h+var_2C] 0Ah +
mov [esp+34h+var_30] eax +
mov [esp+34h+var_34] edx +
call strtol  +
mov ecx [esp+34h+var_24] +
test ecx ecx +
mov ebx eax +
jz loc_4778D0  +
test eax eax +
js loc_4778D0  +
mov eax esi +
mov edx offset asc_4A249B +
call sub_477420  +
lea eax [ebx-20h] +
cmp eax 5Eh +
ja loc_477758  +
mov eax ebp +
test al al +
jz loc_477758  +
mov ecx 1 +
mov eax esi +
lea edx [esp+34h+var_20] +
mov byte ptr [esp+34h+var_20] bl +
call sub_477640  +
lea esi [esi+0] +
mov eax esi +
mov edx offset asc_4A249B +
call sub_477420  +
mov eax [esp+34h+var_24] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edi +
cmp al 75h +
jz loc_4778B5  +
cmp al 77h +
jz loc_477846  +
xor ecx ecx +
cmp al 61h +
jnz loc_477781  +
mov edx offset asc_4A249D +
mov eax esi +
call sub_477420  +
mov ecx 2 +
test ebx ebx +
jz loc_4778D7  +
mov edx 9 +
jmp loc_4777A4  +
add eax 30h +
sub ecx 1 +
sar ebx 4 +
mov byte ptr [esp+edx+34h+var_20] al +
sub edx 1 +
test ebx ebx +
jz loc_4777C4  +
mov eax ebx +
mov edi edx +
and eax 0Fh +
cmp eax 9 +
jle loc_477790  +
add eax 57h +
sub ecx 1 +
sar ebx 4 +
mov byte ptr [esp+edx+34h+var_20] al +
sub edx 1 +
test ebx ebx +
jnz loc_4777A4  +
test ecx ecx +
jle loc_4777DE  +
mov eax edi +
mov edx ecx +
sub eax ecx +
lea eax [esp+eax+34h+var_20] +
mov byte ptr [eax+edx-1] 30h +
sub edx 1 +
jnz loc_4777D2  +
sub edi ecx +
mov ecx 0Ah +
sub ecx edi +
jz loc_477740  +
lea edx [esp+edi+34h+var_20] +
mov eax esi +
call sub_477640  +
jmp loc_477740  +
mov eax esi +
mov edx offset aUl_0 +
call sub_477420  +
mov eax ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edx offset asc_4A24A8 +
call sub_477420  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edx offset aU_2 +
call sub_477420  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset aU_1 +
mov eax esi +
call sub_477420  +
mov ecx 8 +
jmp loc_477781  +
lea eax [esp+34h+var_20] +
mov [esp+34h+var_34] edx +
mov [esp+34h+var_2C] 0Ah +
mov [esp+34h+var_30] eax +
call strtol  +
mov edx [esp+34h+var_20] +
test edx edx +
jz loc_4778D0  +
test eax eax +
js loc_4778D0  +
mov eax offset aFalse_1 +
mov edx offset aTrue_1 +
cmovz edx eax +
mov eax esi +
call sub_477420  +
mov eax [esp+34h+var_20] +
jmp loc_47780E  +
mov eax ebx +
jmp loc_47780E  +
mov eax esi +
call sub_477640  +
nop   +
jmp loc_4776CB  +
mov edx offset aU_0 +
mov eax esi +
call sub_477420  +
mov ecx 4 +
jmp loc_477781  +
xor eax eax +
jmp loc_47780E  +
mov edi 0Ah +
jmp loc_4777C4  +
***
jmp sub_4778F0  +
***
push esi  +
mov edi offset unk_4A24E4 +
push ebx  +
mov esi edx +
sub esp 40h +
mov ebx edx +
cmps   +
jz loc_477A37  +
mov edi offset off_4A24EC +
mov ecx 3 +
mov esi edx +
cmps   +
jz loc_477A76  +
mov edi offset aNinf +
mov ecx 4 +
mov esi edx +
cmps   +
jz loc_477A8C  +
movzx ecx byte ptr [edx] +
xor edx edx +
cmp cl 4Eh +
jz loc_477A4D  +
movzx esi cl +
test ds:byte_49F241[esi+esi] 1 +
jz loc_477A6B  +
mov [esp+edx+48h+var_46] cl +
lea ecx [edx+4] +
mov [esp+edx+48h+var_48] 30h +
lea esi [ebx+1] +
mov [esp+edx+48h+var_47] 78h +
mov [esp+edx+48h+var_45] 2Eh +
movzx edx byte ptr [ebx+1] +
movzx ebx dl +
test ds:byte_49F241[ebx+ebx] 1 +
jz loc_477999  +
lea edi [esp-1] +
add ecx 1 +
add esi 1 +
mov [edi+ecx] dl +
movzx edx byte ptr [esi] +
movzx ebx dl +
test ds:byte_49F241[ebx+ebx] 1 +
jnz loc_477980  +
cmp dl 50h +
jnz loc_477A6B  +
movzx edi byte ptr [esi+1] +
lea edx [ecx+1] +
mov [esp+ecx+48h+var_48] 70h +
mov ebx edi +
cmp bl 4Eh +
jz loc_477AA2  +
lea ebx [esi+1] +
mov esi edi +
mov ecx esi +
movzx ecx cl +
test ds:byte_49F240[ecx+ecx] 4 +
jz loc_4779EB  +
mov ecx esi +
lea edi [esp-1] +
add edx 1 +
add ebx 1 +
mov [edi+edx] cl +
movzx ecx byte ptr [ebx] +
movzx esi cl +
test ds:byte_49F240[esi+esi] 4 +
jnz loc_4779D2  +
mov [esp+edx+48h+var_48] 0 +
mov esi esp +
mov ecx esp +
mov edi [ecx] +
add ecx 4 +
lea edx [edi-1010101h] +
not edi  +
and edx edi +
and edx 80808080h +
jz loc_4779F3  +
mov edi edx +
shr edi 10h +
test edx 8080h +
cmovz edx edi +
lea edi [ecx+2] +
cmovz ecx edi +
add dl dl +
sbb ecx 3 +
sub ecx esi +
jz loc_477A44  +
mov edx esi +
call sub_477640  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset unk_4A24E8 +
add ebx 3 +
call sub_477420  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx ecx byte ptr [ebx+1] +
add ebx 1 +
mov dl 1 +
mov [esp+48h+var_48] 2Dh +
movzx esi cl +
test ds:byte_49F241[esi+esi] 1 +
jnz loc_477953  +
add esp 40h +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset unk_4A24F0 +
add ebx 3 +
call sub_477420  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset aInf +
add ebx 4 +
call sub_477420  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+edx+48h+var_48] 2Dh +
lea ebx [esi+2] +
movzx esi byte ptr [esi+2] +
lea edx [ecx+2] +
jmp loc_4779BD  +
***
push esi  +
push ebx  +
sub esp 2Ch +
test edx edx +
mov esi [esp+2Ch+arg_0] +
jz loc_477B27  +
mov ebx eax +
movzx eax byte ptr [edx] +
test al al +
jz loc_477B27  +
lea edi [eax-30h] +
mov ebp ecx +
mov ecx edi +
cmp cl 47h +
ja loc_477B27  +
movzx edi cl +
jmp ds:off_4A252C[edi*4]  +
add edx 1 +
mov byte ptr [esp+2Ch+var_12] al +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
call strtol  +
mov ebp [esp+2Ch+var_12+2] +
test ebp ebp +
mov edi eax +
jz loc_477B27  +
test eax eax +
js loc_477B27  +
cmp byte ptr [ebp+0] 5Fh +
jz loc_477D05  +
xor esi esi +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edx+1] +
lea ecx [edx+1] +
sub eax 30h +
cmp al 9 +
ja loc_477B27  +
mov edx ecx +
mov eax esi +
movsx ecx al +
mov eax ebx +
call sub_477670  +
add esp 2Ch +
pop ebx  +
mov esi eax +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
add edx 1 +
cmp al 48h +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
jz loc_477EC3  +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_477B27  +
test eax eax +
js loc_477B27  +
mov edx offset asc_4A251C +
mov eax ebx +
call sub_477420  +
jmp loc_477BC5  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_477AC0  +
test edi edi +
mov esi eax +
jz loc_477BC5  +
mov edx offset asc_4A2520 +
mov eax ebx +
call sub_477420  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_477BA1  +
mov edx offset asc_4A2523 +
mov eax ebx +
call sub_477420  +
jmp loc_477B29  +
lea edi [edx+1] +
mov eax ebx +
mov edx offset asc_4A2503 +
call sub_477420  +
mov eax esi +
mov edx edi +
movsx ecx al +
mov eax ebx +
call sub_477670  +
mov esi eax +
jmp loc_477B29  +
add edx 1 +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_20] ebp +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_477B27  +
test eax eax +
js loc_477B27  +
mov ebp [esp+2Ch+var_20] +
test ebp ebp +
jz loc_477C4A  +
mov edx ebp +
mov eax ebx +
call sub_477420  +
mov edx offset asc_4A2525 +
mov eax ebx +
call sub_477420  +
jmp loc_477C7C  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_477AC0  +
test edi edi +
mov esi eax +
jz loc_477C7C  +
mov edx offset asc_4A2520 +
mov eax ebx +
call sub_477420  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_477C58  +
mov edx offset asc_4A2527 +
mov eax ebx +
call sub_477420  +
jmp loc_477B29  +
add edx 1 +
mov eax ebx +
call sub_4778F0  +
mov edx offset asc_4A2505 +
mov esi eax +
mov eax ebx +
call sub_477420  +
test esi esi +
jz loc_477B27  +
cmp byte ptr [esi] 63h +
jnz loc_477B27  +
lea edx [esi+1] +
mov eax ebx +
call sub_4778F0  +
mov edx offset aI +
mov esi eax +
mov eax ebx +
call sub_477420  +
jmp loc_477B29  +
add edx 1 +
mov eax ebx +
call sub_4778F0  +
mov esi eax +
jmp loc_477B29  +
lea esi [edx+1] +
mov eax ebx +
mov edx offset aNull +
call sub_477420  +
jmp loc_477B29  +
mov edx offset asc_4A2509 +
mov eax ebx +
call sub_477420  +
test edi edi +
lea esi [ebp+1] +
jz loc_477F41  +
movzx edx byte ptr [ebp+1] +
movzx eax dl +
test ds:byte_49F241[eax+eax] 1 +
jz loc_477B27  +
movzx ecx byte ptr [ebp+2] +
movzx eax cl +
test ds:byte_49F241[eax+eax] 1 +
jz loc_477B27  +
mov eax edx +
lea edx [eax-61h] +
lea ebp [edi-1] +
xor edi edi +
cmp dl 5 +
ja loc_477DD1  +
sub eax 57h +
shl eax 4 +
lea edx [ecx-61h] +
cmp dl 5 +
ja loc_477DEF  +
sub ecx 57h +
or eax ecx +
lea edx [eax-9] +
cmp dl 17h +
mov byte ptr [esp+2Ch+var_12+1] al +
ja loc_477E54  +
movzx edx dl +
jmp ds:off_4A264C[edx*4]  +
mov edx offset asc_4A250B +
mov eax ebx +
call sub_477420  +
add esi 2 +
cmp edi ebp +
jz loc_477F41  +
movzx eax byte ptr [esi] +
movzx edx al +
test ds:byte_49F241[edx+edx] 1 +
jz loc_477B27  +
movzx ecx byte ptr [esi+1] +
add edi 1 +
movzx edx cl +
test ds:byte_49F241[edx+edx] 1 +
jz loc_477B27  +
lea edx [eax-61h] +
cmp dl 5 +
jbe loc_477D55  +
lea edx [eax-41h] +
cmp dl 5 +
ja loc_477E86  +
sub eax 37h +
lea edx [ecx-61h] +
shl eax 4 +
cmp dl 5 +
jbe loc_477D67  +
lea edx [ecx-41h] +
cmp dl 5 +
ja loc_477E76  +
sub ecx 37h +
jmp loc_477D6A  +
mov edx offset aR_1 +
mov eax ebx +
call sub_477420  +
jmp loc_477D92  +
mov edx offset aF +
mov eax ebx +
call sub_477420  +
jmp loc_477D92  +
mov edx offset aV +
mov eax ebx +
call sub_477420  +
jmp loc_477D92  +
mov edx offset aN +
mov eax ebx +
call sub_477420  +
jmp loc_477D92  +
mov edx offset aT +
mov eax ebx +
call sub_477420  +
jmp loc_477D92  +
movzx eax al +
test ds:byte_49F240[eax+eax] 10h +
jz loc_477EA4  +
mov ecx 1 +
mov eax ebx +
lea edx [esp+2Ch+var_12+1] +
call sub_477640  +
jmp loc_477D92  +
lea edx [ecx-30h] +
xor ecx ecx +
cmp dl 9 +
cmovbe ecx edx +
jmp loc_477D6A  +
lea edx [eax-30h] +
mov eax edx +
shl eax 4 +
mov byte ptr [esp+2Ch+var_20] al +
xor eax eax +
cmp dl 9 +
movzx edx byte ptr [esp+2Ch+var_20] +
cmovbe eax edx +
jmp loc_477D5B  +
mov eax ebx +
mov edx offset asc_4A249D +
call sub_477420  +
mov ecx 2 +
mov edx esi +
mov eax ebx +
call sub_477640  +
jmp loc_477D92  +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_477B27  +
test eax eax +
js loc_477B27  +
mov edx offset asc_4A251C +
mov eax ebx +
call sub_477420  +
jmp loc_477F34  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_477AC0  +
mov edx (offset asc_4A251C+2) +
mov esi eax +
mov eax ebx +
call sub_477420  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_477AC0  +
test edi edi +
mov esi eax +
jz loc_477F34  +
mov edx offset asc_4A2520 +
mov eax ebx +
call sub_477420  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_477EF0  +
jmp loc_477BCD  +
mov edx offset asc_4A2509 +
mov eax ebx +
call sub_477420  +
cmp byte ptr [esp+2Ch+var_12] 61h +
jz loc_477B29  +
mov ecx 1 +
mov eax ebx +
lea edx [esp+2Ch+var_12] +
call sub_477640  +
jmp loc_477B29  +
***
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_477FE6  +
movzx ecx byte ptr [edx] +
mov esi eax +
test cl cl +
jz loc_477FE6  +
cmp cl 4Fh +
jz loc_477FF0  +
jle loc_477FC5  +
cmp cl 78h +
nop   +
jz loc_477FB0  +
cmp cl 79h +
jnz loc_478007  +
mov eax esi +
mov edx offset aImmutable_0 +
call sub_477420  +
lea eax [ebx+1] +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov eax esi +
mov edx offset aConst_2 +
call sub_477420  +
add esp 4 +
lea eax [ebx+1] +
pop ebx  +
pop esi  +
retn   +
cmp cl 4Eh +
jnz loc_478007  +
cmp byte ptr [ebx+1] 67h +
jnz loc_477FE6  +
mov edx offset aInout +
mov eax esi +
add ebx 2 +
call sub_477420  +
movzx ecx byte ptr [ebx] +
test cl cl +
jnz loc_477F84  +
xor eax eax +
jmp loc_477FA6  +
add ebx 1 +
mov edx offset aShared_0 +
mov eax esi +
call sub_477420  +
test ebx ebx +
jnz loc_477FDF  +
xor eax eax +
jmp loc_477FA6  +
add esp 4 +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
test edx edx +
jz loc_478038  +
movzx edx byte ptr [edx] +
test dl dl +
jz loc_478038  +
sub edx 41h +
cmp dl 39h +
ja loc_478038  +
movzx edx dl +
mov esi eax +
jmp ds:off_4A27AC[edx*4]  +
xor eax eax +
lea esi [esi+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+1] +
cmp al 69h +
jz loc_4784DC  +
cmp al 6Bh +
jnz loc_478038  +
mov eax esi +
mov edx offset aUcent +
call sub_477420  +
lea eax [ebx+2] +
jmp loc_478040  +
add ebx 1 +
mov edx offset aImmutable +
mov eax esi +
call sub_477420  +
mov edx ebx +
mov eax esi +
call sub_478010  +
mov edx offset asc_4A2527 +
mov ebx eax +
mov eax esi +
call sub_477420  +
mov eax ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov edx offset aConst_1 +
jmp loc_478078  +
mov edx offset aDchar +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aVoid_0 +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aWchar +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aUshort +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aShort_0 +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aCdouble +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aCfloat +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aIdouble +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aIfloat +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aNone +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aUlong +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aLong_0 +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aUint +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aIreal +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aInt_0 +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aUbyte +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aByte +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aFloat_0 +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aReal +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aDouble_0 +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aCreal +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aBool_0 +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
mov edx offset aChar_0 +
call sub_477420  +
lea eax [ebx+1] +
jmp loc_478040  +
lea edx [ebx+1] +
call sub_478010  +
mov edx offset asc_4A26FB +
mov ebx eax +
mov eax esi +
call sub_477420  +
mov eax ebx +
jmp loc_478040  +
add ebx 1 +
mov edx offset aShared +
jmp loc_478078  +
movzx edx byte ptr [ebx+1] +
cmp dl 67h +
jz loc_47852C  +
xor eax eax +
cmp dl 68h +
jnz loc_478040  +
add ebx 2 +
mov edx offset a__vector_0 +
jmp loc_478078  +
lea edx [ebx+1] +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] 0 +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_18] 0 +
call sub_478010  +
mov ebx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
cmp ebx ecx +
jz loc_478510  +
sub ecx ebx +
mov edx eax +
mov eax esi +
mov edi ecx +
call sub_478010  +
mov edx offset asc_4A251C +
mov ebx eax +
mov eax esi +
call sub_477420  +
test edi edi +
mov edx [esp+2Ch+var_18] +
jz loc_478315  +
mov ecx edi +
mov eax esi +
call sub_477640  +
mov edx offset asc_4A2523 +
mov eax esi +
call sub_477420  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jz loc_478096  +
mov [esp+2Ch+var_2C] edx +
call free  +
mov eax ebx +
jmp loc_478098  +
lea edx [ebx+1] +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] 0 +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_18] 0 +
call sub_477F70  +
mov ebx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
cmp ebx ecx +
jz loc_4784F0  +
sub ecx ebx +
mov edx eax +
mov eax esi +
mov edi ecx +
call sub_4786B0  +
mov edx offset aDelegate +
mov ebx eax +
mov eax esi +
call sub_477420  +
test edi edi +
mov edx [esp+2Ch+var_18] +
jz loc_4783A4  +
mov ecx edi +
mov eax esi +
call sub_477640  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jnz loc_47832D  +
mov eax ebx +
jmp loc_478098  +
lea edx [ebx+1] +
mov ecx 2 +
call sub_478D00  +
jmp loc_478040  +
add ebx 1 +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
call strtol  +
mov edi [esp+2Ch+var_18] +
test edi edi +
mov ebx eax +
jz loc_478038  +
test eax eax +
js loc_478038  +
mov edx offset aTuple +
mov eax esi +
call sub_477420  +
jmp loc_47841C  +
mov edx edi +
mov eax esi +
call sub_478010  +
test ebx ebx +
mov edi eax +
jz loc_47841C  +
mov edx offset asc_4A2520 +
mov eax esi +
call sub_477420  +
sub ebx 1 +
cmp ebx 0FFFFFFFFh +
jnz loc_478401  +
mov eax esi +
mov edx offset asc_4A2527 +
call sub_477420  +
mov eax edi +
jmp loc_478040  +
lea edx [ebx+1] +
call sub_478010  +
mov edx offset asc_4A26F8 +
mov ebx eax +
mov eax esi +
call sub_477420  +
mov eax ebx +
jmp loc_478040  +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
mov edx edi +
test ds:byte_49F240[eax+eax] 4 +
jz loc_478539  +
nop   +
lea esi [esi+0] +
mov ebp edx +
add edx 1 +
movzx eax byte ptr [edx] +
sub ebp ebx +
test ds:byte_49F240[eax+eax] 4 +
jnz loc_478470  +
mov eax esi +
call sub_478010  +
mov edx offset asc_4A251C +
mov ebx eax +
mov eax esi +
call sub_477420  +
test ebp ebp +
jz loc_4784A8  +
mov ecx ebp +
mov edx edi +
mov eax esi +
call sub_477640  +
mov eax esi +
mov edx offset asc_4A2523 +
call sub_477420  +
mov eax ebx +
jmp loc_478040  +
mov edx ebx +
call sub_4786B0  +
mov edx offset aFunction +
mov ebx eax +
mov eax esi +
call sub_477420  +
mov eax ebx +
jmp loc_478040  +
mov eax esi +
mov edx offset aCent +
call sub_477420  +
lea eax [ebx+2] +
jmp loc_478040  +
mov edx eax +
mov eax esi +
call sub_4786B0  +
mov edx offset aDelegate +
mov ebx eax +
mov eax esi +
call sub_477420  +
mov edx [esp+2Ch+var_18] +
jmp loc_4783A4  +
mov edx eax +
mov eax esi +
call sub_478010  +
mov edx offset asc_4A251C +
mov ebx eax +
mov eax esi +
call sub_477420  +
jmp loc_478315  +
add ebx 2 +
mov edx offset aInout_0 +
jmp loc_478078  +
mov eax esi +
call sub_478010  +
mov edx offset asc_4A251C +
mov ebx eax +
mov eax esi +
call sub_477420  +
jmp loc_4784A8  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 0Ch +
test edx edx +
jz loc_4786A0  +
movzx edx byte ptr [edx] +
test dl dl +
jz loc_47863C  +
mov esi eax +
xor edi edi +
cmp dl 59h +
jz loc_4785F2  +
cmp dl 5Ah +
jz loc_4785E7  +
cmp dl 58h +
jz loc_4785D0  +
test edi edi +
jnz loc_478640  +
movzx eax byte ptr [ebx] +
cmp al 4Dh +
jz loc_478682  +
cmp al 4Eh +
jz loc_478651  +
cmp al 4Bh +
jz loc_478610  +
cmp al 4Ch +
jz loc_478671  +
cmp al 4Ah +
jnz loc_47861F  +
mov edx offset aOut +
mov eax esi +
add ebx 1 +
call sub_477420  +
jmp loc_47861F  +
mov eax esi +
mov edx offset unk_4A2894 +
call sub_477420  +
lea eax [ebx+1] +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 0Ch +
lea eax [ebx+1] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edx offset a____1 +
call sub_477420  +
add esp 0Ch +
lea eax [ebx+1] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset aRef +
mov eax esi +
add ebx 1 +
call sub_477420  +
mov edx ebx +
mov eax esi +
call sub_478010  +
test eax eax +
mov ebx eax +
jz loc_4786A0  +
movzx edx byte ptr [eax] +
add edi 1 +
test dl dl +
jnz loc_478580  +
mov eax ebx +
jmp loc_4785DF  +
mov edx offset asc_4A2520 +
mov eax esi +
call sub_477420  +
jmp loc_478597  +
cmp byte ptr [ebx+1] 6Bh +
jnz loc_47861F  +
mov eax esi +
mov edx offset aReturn +
lea ebp [ebx+2] +
call sub_477420  +
movzx eax byte ptr [ebx+2] +
mov ebx ebp +
jmp loc_4785AA  +
mov edx offset aLazy +
mov eax esi +
add ebx 1 +
call sub_477420  +
jmp loc_47861F  +
mov eax esi +
mov edx offset aScope +
lea ebp [ebx+1] +
call sub_477420  +
movzx eax byte ptr [ebx+1] +
mov ebx ebp +
jmp loc_4785A2  +
xor eax eax +
jmp loc_4785DF  +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 4Ch +
test edx edx +
jz loc_4787FC  +
cmp byte ptr [edx] 0 +
jz loc_4787FC  +
mov esi eax +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_1C] 0 +
mov [esp+4Ch+var_20] 0 +
mov [esp+4Ch+var_24] 0 +
mov [esp+4Ch+var_10] 0 +
mov [esp+4Ch+var_14] 0 +
mov [esp+4Ch+var_18] 0 +
call sub_477460  +
mov edx eax +
lea eax [esp+4Ch+var_30] +
call sub_4774F0  +
mov ecx [esp+4Ch+var_2C] +
mov ebp [esp+4Ch+var_30] +
mov edi ecx +
sub edi ebp +
cmp ebp ecx +
mov edx eax +
cmovz edi ebx +
lea eax [esp+4Ch+var_24] +
call sub_478560  +
mov ecx [esp+4Ch+var_20] +
mov ebp [esp+4Ch+var_24] +
mov edx ecx +
sub edx ebp +
cmp ebp ecx +
cmovnz ebx edx +
mov edx eax +
lea eax [esp+4Ch+var_18] +
mov ebp ebx +
call sub_478010  +
mov edx [esp+4Ch+var_18] +
mov ecx [esp+4Ch+var_14] +
cmp edx ecx +
mov ebx eax +
jz loc_478774  +
sub ecx edx +
jnz loc_478806  +
mov edx offset asc_4A2525 +
mov eax esi +
call sub_477420  +
test ebp ebp +
mov edx [esp+4Ch+var_24] +
jnz loc_478824  +
mov edx offset asc_4A28B0 +
mov eax esi +
call sub_477420  +
test edi edi +
mov edx [esp+4Ch+var_30] +
jnz loc_478812  +
test edx edx +
jz loc_4787C4  +
mov [esp+4Ch+var_4C] edx +
call free  +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_30] 0 +
mov eax [esp+4Ch+var_24] +
test eax eax +
jz loc_4787EC  +
mov [esp+4Ch+var_4C] eax +
call free  +
mov [esp+4Ch+var_20] 0 +
mov [esp+4Ch+var_1C] 0 +
mov [esp+4Ch+var_24] 0 +
mov eax [esp+4Ch+var_18] +
test eax eax +
jz loc_4787FC  +
mov [esp+4Ch+var_4C] eax +
call free  +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
call sub_477640  +
jmp loc_478774  +
mov ecx edi +
mov eax esi +
call sub_477640  +
mov edx [esp+4Ch+var_30] +
jmp loc_4787A0  +
mov ecx ebp +
mov eax esi +
call sub_477640  +
jmp loc_47878C  +
***
push esi  +
push ebx  +
sub esp 3Ch +
test edx edx +
mov [esp+3Ch+var_28] eax +
jz loc_478954  +
cmp byte ptr [edx] 0 +
jz loc_478954  +
lea eax [esp+3Ch+var_1C] +
mov esi ecx +
mov [esp+3Ch+var_34] 0Ah +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edx +
call strtol  +
mov ebx [esp+3Ch+var_1C] +
test ebx ebx +
mov [esp+3Ch+var_24] eax +
jz loc_478954  +
test eax eax +
jle loc_478954  +
cmp esi 4 +
jz loc_478977  +
mov [esp+3Ch+var_3C] ebx +
call strlen  +
mov edi [esp+3Ch+var_24] +
cmp eax edi +
jb loc_478954  +
cmp edi 4 +
jle loc_478960  +
mov edi offset a__t_0 +
mov ecx 3 +
mov esi ebx +
cmps   +
jnz loc_478960  +
movzx eax byte ptr [ebx+3] +
movzx edx al +
test ds:byte_49F240[edx+edx] 4 +
jz loc_478954  +
cmp al 30h +
jz loc_478954  +
mov esi [esp+3Ch+var_28] +
lea edx [ebx+3] +
mov ecx 3 +
mov eax esi +
call sub_478840  +
mov edx offset asc_4A28BA +
mov edi eax +
mov eax esi +
call sub_477420  +
test edi edi +
jz loc_478946  +
movzx eax byte ptr [edi] +
test al al +
jz loc_478BD9  +
xor esi esi +
cmp al 5Ah +
jz loc_478CF3  +
test esi esi +
jnz loc_478B87  +
movzx eax byte ptr [edi] +
cmp al 48h +
jz loc_478BA0  +
cmp al 54h +
jz loc_478C70  +
cmp al 56h +
jz loc_478C00  +
cmp al 53h +
lea esi [esi+0] +
jz loc_478BB0  +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_4A2527 +
call sub_477420  +
xor esi esi +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_24] +
sub eax 6 +
cmp eax 6 +
ja loc_478A70  +
jmp ds:off_4A2964[eax*4]  +
mov eax [esp+3Ch+var_28] +
xor edi edi +
mov ebp [esp+3Ch+var_24] +
mov edx [eax] +
mov eax [eax+4] +
mov ecx eax +
sub ecx edx +
cmp edx eax +
cmovz ecx edi +
mov edx ebx +
mov [esp+3Ch+var_20] ecx +
jmp loc_478A0A  +
mov [esp+3Ch+var_1C] 0 +
movzx eax byte ptr [edx] +
mov ebp [esp+3Ch+var_24] +
test ds:byte_49F240[eax+eax] 4 +
jnz loc_478A1D  +
mov edi offset a_d +
mov esi edx +
mov ecx 2 +
cmps   +
jz loc_478A40  +
mov eax edx +
sub eax ebx +
cmp eax ebp +
jz loc_478B80  +
mov eax 66666667h +
imul  ebp +
mov eax [esp+3Ch+var_28] +
sar ebp 1Fh +
sar edx 2 +
mov ecx [eax+4] +
sub edx ebp +
mov ebp edx +
mov edx [eax] +
xor eax eax +
mov esi ecx +
sub esi edx +
cmp edx ecx +
cmovnz eax esi +
cmp [esp+3Ch+var_20] eax +
js loc_478A33  +
lea edx [ebx-1] +
mov ebx [esp+3Ch+var_1C] +
test ebx ebx +
jz loc_478954  +
test ebp ebp +
jz loc_478997  +
movzx eax byte ptr [edx] +
mov ebx edx +
test ds:byte_49F240[eax+eax] 4 +
jz loc_4789B0  +
mov eax [esp+3Ch+var_28] +
mov ecx 3 +
call sub_478D00  +
mov edx eax +
test edx edx +
jnz loc_4789C4  +
jmp loc_4789D0  +
mov eax [esp+3Ch+var_28] +
add edx [esp+3Ch+var_20] +
mov [eax+4] edx +
jmp loc_4789FB  +
mov eax [esp+3Ch+var_28] +
add edx 2 +
mov ecx 1 +
call sub_478D00  +
mov edx eax +
jmp loc_478A2D  +
mov edi offset a__postblitmfz +
mov ecx 0Dh +
mov esi ebx +
cmps   +
jz loc_478C9C  +
lea esi [esi+0] +
mov esi [esp+3Ch+var_24] +
mov edx ebx +
mov eax [esp+3Ch+var_28] +
mov ecx esi +
add esi ebx +
call sub_477640  +
jmp loc_478956  +
mov edi offset a__classz +
mov ecx 8 +
mov esi ebx +
cmps   +
jnz loc_478A70  +
mov edx offset aClassinfoFor +
jmp loc_478B10  +
mov ecx [esp+3Ch+var_24] +
mov eax 7 +
mov edi offset a__ctor +
mov esi ebx +
cmp ecx 7 +
cmovg ecx eax +
cmp ecx ecx +
cmps   +
jz loc_478C83  +
mov edi [esp+3Ch+var_24] +
mov esi ebx +
cmp edi 7 +
cmovle eax edi +
mov edi offset a__dtor +
mov ecx eax +
cmp eax eax +
cmps   +
jz loc_478CB7  +
mov edi offset a__initz +
mov ecx 7 +
mov esi ebx +
cmps   +
jz loc_478CDA  +
mov edi offset a__vtblz +
mov ecx 7 +
mov esi ebx +
cmps   +
jnz loc_478A70  +
mov edx offset aVtableFor_0 +
lea esi [esi+0] +
mov edi [esp+3Ch+var_28] +
mov eax edi +
call sub_4775D0  +
mov eax [edi] +
mov edx [edi+4] +
cmp eax edx +
jz loc_478CD0  +
sub edx eax +
sub edx 1 +
mov edi [esp+3Ch+var_28] +
add eax edx +
mov esi [esp+3Ch+var_24] +
mov [edi+4] eax +
add esi ebx +
jmp loc_478956  +
mov edi offset a__moduleinfoz +
mov ecx 0Dh +
mov esi ebx +
cmps   +
jnz loc_478A70  +
mov edx offset aModuleinfoFor +
jmp loc_478B10  +
mov edi offset a__interfacez +
mov ecx 0Ch +
mov esi ebx +
cmps   +
jnz loc_478A70  +
mov edx offset aInterfaceFor +
jmp loc_478B10  +
mov esi edx +
jmp loc_478956  +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_4A2520 +
call sub_477420  +
jmp loc_47891F  +
movzx eax byte ptr [edi+1] +
add edi 1 +
jmp loc_47892A  +
mov eax [esp+3Ch+var_28] +
lea edx [edi+1] +
mov ecx 4 +
call sub_478D00  +
mov edi eax +
test edi edi +
jz loc_478946  +
movzx eax byte ptr [edi] +
add esi 1 +
test al al +
jnz loc_47890F  +
mov esi edi +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_4A2527 +
call sub_477420  +
mov eax esi +
sub eax ebx +
cmp [esp+3Ch+var_24] eax +
mov eax 0 +
cmovnz esi eax +
jmp loc_478956  +
lea edx [edi+1] +
movsx ebp byte ptr [edi+1] +
lea eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_10] 0 +
mov [esp+3Ch+var_14] 0 +
mov [esp+3Ch+var_18] 0 +
call sub_478010  +
mov edx 1 +
mov edi eax +
lea eax [esp+3Ch+var_18] +
call sub_4773B0  +
mov eax [esp+3Ch+var_14] +
mov edx edi +
mov byte ptr [eax] 0 +
mov eax [esp+3Ch+var_28] +
mov ecx [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] ebp +
call sub_477AC0  +
mov edi eax +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_478BC3  +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_478BC3  +
mov eax [esp+3Ch+var_28] +
lea edx [edi+1] +
call sub_478010  +
mov edi eax +
jmp loc_478BC3  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThis_0 +
call sub_477420  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_478956  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThisThis +
call sub_477420  +
mov eax [esp+3Ch+var_24] +
lea esi [ebx+eax+3] +
jmp loc_478956  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThis_1 +
call sub_477420  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_478956  +
mov edx 0FFFFFFFFh +
jmp loc_478B2D  +
mov eax [esp+3Ch+var_28] +
mov edx offset aInit +
call sub_477420  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_478956  +
lea esi [edi+1] +
jmp loc_478BDB  +
***
push edi  +
mov edi 1 +
push esi  +
mov esi edi +
push ebx  +
mov ebx edx +
sub esp 3Ch +
mov [esp+48h+var_3C] ecx +
jmp loc_478D64  +
movzx eax byte ptr [eax] +
cmp al 4Dh +
mov ecx eax +
jz loc_478F52  +
sub ecx 46h +
cmp cl 11h +
ja loc_478D40  +
mov edx 1 +
shl edx cl +
and edx 39001h +
jnz loc_478DE0  +
movzx edx al +
test ds:byte_49F240[edx+edx] 4 +
jz loc_478F13  +
test esi esi +
jz loc_478D61  +
mov edx offset unk_4A2980 +
mov eax ebp +
call sub_477420  +
add esi 1 +
mov ecx [esp+48h+var_3C] +
mov edx ebx +
mov eax ebp +
call sub_478840  +
test eax eax +
mov ebx eax +
jnz loc_478D18  +
cmp [esp+48h+var_3C] 1 +
jbe loc_478D85  +
xor edx edx +
jmp loc_478F20  +
xor ebx ebx +
mov eax [ebp+4] +
xor edi edi +
mov edx [ebp+0] +
mov esi eax +
sub esi edx +
cmp edx eax +
mov edx ebx +
mov eax ebp +
cmovz esi edi +
call sub_478010  +
mov ebx [ebp+4] +
mov edx [ebp+0] +
mov ecx ebx +
sub ecx edx +
cmp edx ebx +
cmovz ecx edi +
cmp esi ecx +
js loc_478FD0  +
mov edx eax +
mov eax [esp+48h+var_3C] +
test eax eax +
jnz loc_478F20  +
test edx edx +
jz loc_478D7E  +
cmp byte ptr [edx] 0 +
jnz loc_478D7E  +
add esp 3Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Dh +
jnz loc_478DEB  +
movzx eax byte ptr [ebx+1] +
add ebx 1 +
cmp al 56h +
jz loc_478F30  +
mov [esp+48h+var_29] 0 +
mov [esp+48h+var_34] 0 +
mov [esp+48h+var_30] 0 +
mov edx ebx +
xor edi edi +
lea eax [esp+48h+var_24] +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_24] 0 +
call sub_477F70  +
mov edx [ebp+4] +
mov ecx [ebp+0] +
mov ebx edx +
sub ebx ecx +
cmp ecx edx +
mov edx eax +
mov eax ebp +
cmovz ebx edi +
call sub_477460  +
mov edx eax +
mov eax ebp +
call sub_4774F0  +
mov ecx [ebp+0] +
mov [esp+48h+var_38] eax +
mov eax [ebp+4] +
mov edx eax +
sub edx ecx +
cmp ecx eax +
cmovnz edi edx +
cmp ebx edi +
js loc_478F88  +
mov edx offset asc_4A2525 +
mov eax ebp +
call sub_477420  +
mov edx [esp+48h+var_38] +
mov eax ebp +
call sub_478560  +
mov edx offset asc_4A2527 +
mov ebx eax +
mov eax ebp +
call sub_477420  +
mov edx [esp+48h+var_24] +
mov ecx [esp+48h+var_20] +
cmp edx ecx +
jz loc_478EA9  +
sub ecx edx +
jz loc_478EA9  +
mov eax ebp +
call sub_477640  +
mov edx [esp+48h+var_24] +
test edx edx +
jz loc_478ECD  +
mov [esp+48h+var_48] edx +
call free  +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
test ebx ebx +
jnz loc_478EF7  +
cmp [esp+48h+var_29] 0 +
jz loc_478EF7  +
mov ecx [ebp+4] +
xor eax eax +
mov edx [ebp+0] +
mov ebx ecx +
sub ebx edx +
cmp edx ecx +
cmovnz eax ebx +
mov ebx [esp+48h+var_30] +
cmp [esp+48h+var_34] eax +
js loc_478FB4  +
test ebx ebx +
jz loc_478D77  +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_49F240[edx+edx] 4 +
jnz loc_478D51  +
cmp [esp+48h+var_3C] 1 +
mov edx ebx +
jbe loc_478FC0  +
add esp 3Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0] +
mov edx [ebp+4] +
cmp eax edx +
jz loc_478FE0  +
sub edx eax +
mov [esp+48h+var_34] edx +
setnz [esp+48h+var_29]  +
mov [esp+48h+var_30] ebx +
jmp loc_478E08  +
lea edi [ebx+1] +
mov [esp+48h+var_38] edi +
mov ecx edi +
xor edi edi +
movzx edx byte ptr [ecx] +
cmp dl 4Fh +
jz loc_478F80  +
jg loc_478F92  +
cmp dl 4Eh +
jnz loc_478FB0  +
cmp byte ptr [ecx+1] 67h +
jnz loc_478FB0  +
add ecx 2 +
movzx edx byte ptr [ecx] +
add edi 2 +
cmp dl 4Fh +
jnz loc_478F65  +
add ecx 1 +
add edi 1 +
jmp loc_478F5D  +
add ecx ebx +
mov [ebp+4] ecx +
jmp loc_478E69  +
sub edx 78h +
cmp dl 1 +
ja loc_478FB0  +
mov edx 1 +
mov ecx [esp+48h+var_38] +
add ecx edi +
movzx ecx byte ptr [ecx+edx] +
jmp loc_478D25  +
xor edx edx +
jmp loc_478F9F  +
add edx [esp+48h+var_34] +
mov [ebp+4] edx +
jmp loc_478EF7  +
cmp al 5Ah +
jnz loc_478D87  +
lea eax [ebx+1] +
jmp loc_478DB8  +
add edx esi +
mov [ebp+4] edx +
jmp loc_478DB8  +
mov [esp+48h+var_30] ebx +
mov [esp+48h+var_29] 0 +
mov [esp+48h+var_34] 0 +
jmp loc_478E08  +
***
sub esp 24h +
mov edx [esp+24h+arg_0] +
test edx edx +
jz loc_4790A1  +
cmp byte ptr [edx] 0 +
jz loc_4790A1  +
mov edi offset a_d +
mov ecx 2 +
mov esi edx +
cmps   +
jnz loc_4790A1  +
mov [esp+24h+var_8] 0 +
mov edi offset a_dmain +
mov ecx 7 +
mov [esp+24h+var_C] 0 +
mov esi edx +
mov [esp+24h+var_10] 0 +
cmps   +
jz loc_4790B0  +
lea edi [esp+24h+var_10] +
add edx 2 +
xor ecx ecx +
mov eax edi +
call sub_478D00  +
mov edx [esp+24h+var_10] +
test eax eax +
jz loc_479095  +
mov ecx [esp+24h+var_C] +
cmp edx ecx +
jz loc_4790A1  +
sub ecx edx +
test ecx ecx +
jle loc_4790A1  +
mov eax edi +
mov edx 1 +
call sub_4773B0  +
mov eax [esp+24h+var_C] +
mov byte ptr [eax] 0 +
mov eax [esp+24h+var_10] +
add esp 24h +
pop esi  +
pop edi  +
retn   +
test edx edx +
jz loc_47906A  +
mov [esp+24h+var_24] edx +
call free  +
add esp 24h +
xor eax eax +
pop esi  +
pop edi  +
retn   +
lea edi [esp+24h+var_10] +
mov edx offset aDMain +
mov eax edi +
call sub_477420  +
mov edx [esp+24h+var_10] +
mov ecx [esp+24h+var_C] +
jmp loc_47906E  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jz loc_4790F0  +
cmp eax 3 +
jz loc_4790F0  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
mov edx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_1C] eax +
call sub_479DF0  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
***
cmp dword_47DB6C 2 +
mov eax [esp+18h+arg_4] +
jz loc_47913B  +
mov dword_47DB6C 2 +
cmp eax 2 +
jz loc_479151  +
cmp eax 1 +
jz loc_479180  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov ebx offset unk_4AA030 +
cmp ebx offset unk_4AA030 +
jz loc_479145  +
nop   +
mov eax [ebx] +
test eax eax +
jz loc_479168  +
call eax  +
add ebx 4 +
cmp ebx offset unk_4AA030 +
jnz loc_479160  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_479DF0  +
jmp loc_479145  +
***
xor eax eax +
retn   +
***
mov eax ds:__lconv_init +
jmp eax  +
***
retn   +
***
retn   +
***
mov eax ds:dword_4A8D5C +
mov [esp+28h+var_28] eax +
call sub_4791C0  +
cmp eax 0FFFFFFFFh +
mov [esp+28h+var_10] eax +
jz loc_479280  +
mov [esp+28h+var_28] 8 +
call _lock  +
mov eax ds:dword_4A8D5C +
mov [esp+28h+var_28] eax +
call sub_4791C0  +
mov [esp+28h+var_10] eax +
mov eax ds:dword_4A8D58 +
mov [esp+28h+var_28] eax +
call sub_4791C0  +
mov [esp+28h+var_C] eax +
lea eax [esp+28h+var_C] +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call __dllonexit  +
mov ebx eax +
mov eax [esp+28h+var_10] +
mov [esp+28h+var_28] eax +
call sub_4791D0  +
mov ds:dword_4A8D5C eax +
mov eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call sub_4791D0  +
mov [esp+28h+var_28] 8 +
mov ds:dword_4A8D58 eax +
call _unlock  +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call ds:_onexit  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_4791E0  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
neg eax  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
mov eax [eax] +
cmp eax 0C0000091h +
ja loc_479318  +
cmp eax 0C000008Dh +
jnb loc_479380  +
cmp eax 0C0000005h +
jnz loc_479387  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 0Bh +
call signal  +
cmp eax 1 +
jz loc_4793B6  +
test eax eax +
jz loc_47932D  +
mov [esp+18h+var_18] 0Bh +
call eax  +
jmp loc_47936D  +
cmp eax 0C0000094h +
jz loc_479341  +
cmp eax 0C0000096h +
jz loc_47938E  +
cmp eax 0C0000093h +
jz loc_479380  +
mov eax ds:dword_4A88E8 +
test eax eax +
jz loc_479372  +
mov [ebp+arg_0] ebx +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
xor esi esi +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 8 +
call signal  +
cmp eax 1 +
jz loc_4793E6  +
test eax eax +
jz loc_47932D  +
mov [esp+18h+var_18] 8 +
call eax  +
mov eax 0FFFFFFFFh +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
mov esi 1 +
jmp loc_479343  +
cmp eax 0C000001Dh +
jnz loc_47932D  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 4 +
call signal  +
cmp eax 1 +
jz loc_4793D0  +
test eax eax +
jz loc_47932D  +
mov [esp+18h+var_18] 4 +
call eax  +
jmp loc_47936D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 0Bh +
call signal  +
jmp loc_47936D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 4 +
call signal  +
jmp loc_47936D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 8 +
call signal  +
test esi esi +
jz loc_47936D  +
call sub_479A50  +
jmp loc_47936D  +
***
retn   +
***
sub esp 3Ch +
mov eax ds:dword_4A88EC +
fld  qword ptr [esp+48h] +
fld  qword ptr [esp+50h] +
fld  qword ptr [esp+58h] +
test eax eax +
jz loc_479461  +
fxch  st(2) +
mov edx [esp+40h] +
fstp  qword ptr [esp+18h] +
fstp  qword ptr [esp+20h] +
fstp  qword ptr [esp+28h] +
mov [esp+10h] edx +
mov edx [esp+44h] +
mov [esp+14h] edx +
lea edx [esp+10h] +
mov [esp] edx +
call eax  +
jmp loc_479467  +
fstp  st +
fstp  st +
fstp  st +
add esp 3Ch +
retn   +
***
mov eax [esp+arg_0] +
mov ds:dword_4A88EC eax +
jmp loc_47B3B8  +
***
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov edx [eax] +
lea ecx [edx-1] +
mov edx offset aUnknownError +
cmp ecx 5 +
ja loc_47949D  +
mov edx ds:off_4A2AB0[ecx*4] +
fld  qword ptr [eax+18h] +
fld  qword ptr [eax+10h] +
fld  qword ptr [eax+8] +
fxch  st(2) +
mov eax [eax+4] +
fstp  [esp+3Ch+var_1C] +
fstp  [esp+3Ch+var_24] +
fstp  [esp+3Ch+var_2C] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_30] eax +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset a_matherrSInSGG +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call fprintf  +
xor eax eax +
add esp 3Ch +
retn   +
***
mov eax ds:_iob +
mov [esp+18h+var_10] 1Bh +
lea ebx [esp+18h+arg_4] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aMingwW64Runtim +
add eax 40h +
mov [esp+18h+var_C] eax +
call fwrite  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call vfprintf  +
call abort  +
jmp sub_479540  +
***
push edi  +
mov eax ds:dword_4A88F0 +
retn   +
***
call eax  +
mov eax off_47DB68 +
lea edx [eax+4] +
mov eax [eax+4] +
mov off_47DB68 edx +
test eax eax +
jnz loc_479A70  +
add esp 0Ch +
retn   +
***
mov ebx ds:dword_47C4A0 +
cmp ebx 0FFFFFFFFh +
jz loc_479AC3  +
test ebx ebx +
jz loc_479AB2  +
call ds:dword_47C4A0[ebx*4]  +
sub ebx 1 +
lea esi [esi+0] +
jnz loc_479AA3  +
mov [esp+18h+var_18] offset dword_479A60 +
call sub_4792A0  +
add esp 18h +
pop ebx  +
retn   +
xor ebx ebx +
jmp loc_479AC9  +
mov ebx eax +
lea eax [ebx+1] +
mov edx ds:dword_47C4A0[eax*4] +
test edx edx +
jnz loc_479AC7  +
jmp loc_479A9F  +
***
mov eax ds:dword_4A88FC +
test eax eax +
jz loc_479AF0  +
retn   +
mov ds:dword_4A88FC 1 +
jmp sub_479A90  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax dword_47DB7C +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
cmp eax 0BB40E64Eh +
jz loc_479B32  +
not eax  +
mov dword_47DB80 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+var_28] +
mov [esp+38h+var_38] eax +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+var_28] +
mov edi [ebp+var_24] +
xor esi edi +
sub esp 4 +
call ds:GetCurrentProcessId  +
mov ebx eax +
call ds:GetCurrentThreadId  +
mov [ebp+var_2C] eax +
call ds:GetTickCount  +
mov [ebp+var_30] eax +
lea eax [ebp+var_20] +
mov [esp+38h+var_38] eax +
call ds:QueryPerformanceCounter  +
xor esi [ebp+var_20] +
xor esi [ebp+var_1C] +
xor esi ebx +
xor esi [ebp+var_2C] +
sub esp 4 +
xor esi [ebp+var_30] +
cmp esi 0BB40E64Eh +
jz loc_479BA0  +
mov eax esi +
not eax  +
mov dword_47DB7C esi +
mov dword_47DB80 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 44BF19B0h +
mov esi 0BB40E64Fh +
jmp loc_479B8C  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_28] offset unk_4A8C48 +
call ds:EnterCriticalSection  +
mov edi ds:dword_4A8C40 +
mov esi ds:GetLastError +
sub esp 4 +
test edi edi +
jz loc_479C99  +
lea esi [esi+0] +
mov eax [edi] +
mov [esp+28h+var_28] eax +
call ds:TlsGetValue  +
sub esp 4 +
mov ebx eax +
call esi  +
test eax eax +
jnz loc_479C92  +
test ebx ebx +
jz loc_479C92  +
mov eax [edi+4] +
mov [esp+28h+var_28] ebx +
call eax  +
mov edi [edi+8] +
test edi edi +
jnz loc_479C70  +
mov [esp+28h+var_28] offset unk_4A8C48 +
call ds:LeaveCriticalSection  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_479CC0  +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push ebx  +
sub esp 10h +
mov eax ds:dword_4A8C44 +
test eax eax +
jnz loc_479CE0  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov dword ptr [esp] 1 +
call calloc  +
test eax eax +
mov ebx eax +
jz loc_479D3C  +
mov eax [ebp+8] +
mov dword ptr [esp] offset unk_4A8C48 +
mov [ebx] eax +
mov eax [ebp+0Ch] +
mov [ebx+4] eax +
call ds:EnterCriticalSection  +
mov eax ds:dword_4A8C40 +
mov ds:dword_4A8C40 ebx +
mov [ebx+8] eax +
sub esp 4 +
mov dword ptr [esp] offset unk_4A8C48 +
call ds:LeaveCriticalSection  +
mov eax esi +
sub esp 4 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov esi 0FFFFFFFFh +
jmp loc_479CD3  +
***
push ebp  +
mov ebp esp +
push ebx  +
sub esp 14h +
mov eax ds:dword_4A8C44 +
mov ebx [ebp+8] +
test eax eax +
jnz loc_479D70  +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov dword ptr [esp] offset unk_4A8C48 +
call ds:EnterCriticalSection  +
mov edx ds:dword_4A8C40 +
sub esp 4 +
test edx edx +
jz loc_479DA1  +
mov eax [edx] +
cmp eax ebx +
jnz loc_479D9A  +
jmp loc_479DD8  +
mov ecx [eax] +
cmp ecx ebx +
jz loc_479DB8  +
mov edx eax +
mov eax [edx+8] +
test eax eax +
jnz loc_479D92  +
mov dword ptr [esp] offset unk_4A8C48 +
call ds:LeaveCriticalSection  +
sub esp 4 +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov ecx [eax+8] +
mov [edx+8] ecx +
mov [esp] eax +
call free  +
mov dword ptr [esp] offset unk_4A8C48 +
call ds:LeaveCriticalSection  +
sub esp 4 +
jmp loc_479DB1  +
***
mov eax [edx+8] +
mov ds:dword_4A8C40 eax +
mov eax edx +
jmp loc_479DBE  +
***
sub esp 18h +
mov eax [ebp+arg_4] +
cmp eax 1 +
jz loc_479E44  +
jb loc_479E15  +
cmp eax 3 +
jnz loc_479E0E  +
mov eax ds:dword_4A8C44 +
test eax eax +
jnz loc_479E72  +
mov eax 1 +
leave   +
retn   +
mov eax ds:dword_4A8C44 +
test eax eax +
jnz loc_479E80  +
mov eax ds:dword_4A8C44 +
cmp eax 1 +
jnz loc_479E0E  +
mov ds:dword_4A8C44 0 +
mov [esp+18h+var_18] offset unk_4A8C48 +
call ds:DeleteCriticalSection  +
sub esp 4 +
jmp loc_479E0E  +
mov eax ds:dword_4A8C44 +
test eax eax +
jz loc_479E60  +
mov ds:dword_4A8C44 1 +
mov eax 1 +
leave   +
retn   +
mov [esp+18h+var_18] offset unk_4A8C48 +
call ds:InitializeCriticalSection  +
sub esp 4 +
jmp loc_479E4D  +
call sub_479C40  +
jmp loc_479E0E  +
call sub_479C40  +
jmp loc_479E1E  +
***
add eax [eax+3Ch] +
cmp dword ptr [eax] 4550h +
jz loc_479EA0  +
xor eax eax +
retn   +
cmp word ptr [eax+18h] 10Bh +
setz al  +
movzx eax al +
retn   +
***
mov eax [esp+4] +
cmp word ptr [eax] 5A4Dh +
jz loc_479EC0  +
xor eax eax +
retn   +
***
jmp sub_479E90  +
***
mov edx [esp+arg_0] +
mov ebx [esp+arg_4] +
add edx [edx+3Ch] +
movzx esi word ptr [edx+6] +
movzx eax word ptr [edx+14h] +
test esi esi +
lea eax [edx+eax+18h] +
jz loc_479F08  +
xor edx edx +
nop   +
mov ecx [eax+0Ch] +
cmp ecx ebx +
ja loc_479EFE  +
add ecx [eax+8] +
cmp ebx ecx +
jb loc_479F0A  +
add edx 1 +
add eax 28h +
cmp edx esi +
jb loc_479EF0  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
xor esi esi +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov [esp] edi +
call strlen  +
cmp eax 8 +
ja loc_479F35  +
cmp word ptr ds:400000h 5A4Dh +
jz loc_479F40  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 400000h +
call sub_479E90  +
test eax eax +
jz loc_479F35  +
mov eax ds:40003Ch +
lea edx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
movzx ebp word ptr [edx+6] +
lea ebx [edx+eax+18h] +
test ebp ebp +
jnz loc_479F7A  +
jmp loc_479F35  +
***
add esi 1 +
add ebx 28h +
cmp esi ebp +
jnb loc_479FA0  +
mov dword ptr [esp+8] 8 +
mov [esp+4] edi +
mov [esp] ebx +
call strncmp  +
test eax eax +
jnz loc_479F70  +
add esp 1Ch +
mov esi ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
jz loc_479FC8  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_479E90  +
test eax eax +
jz loc_479FC1  +
mov eax [esp+8+arg_0] +
mov [esp+8+var_8] 400000h +
sub eax 400000h +
mov [esp+8+var_4] eax +
call sub_479ED0  +
add esp 8 +
mov ebx eax +
mov eax ebx +
pop ebx  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_47A012  +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_479E90  +
test eax eax +
jz loc_47A00E  +
mov eax ds:40003Ch +
movzx ebx word ptr [eax+400006h] +
mov eax ebx +
pop ebx  +
retn   +
***
push esi  +
xor esi esi +
cmp word ptr ds:400000h 5A4Dh +
push ebx  +
mov ebx [esp+0Ch] +
jz loc_47A048  +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov eax 400000h +
call sub_479E90  +
test eax eax +
jz loc_47A043  +
mov eax ds:40003Ch +
lea ecx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
lea edx [ecx+eax+18h] +
movzx ecx word ptr [ecx+6] +
test ecx ecx +
jz loc_47A043  +
xor eax eax +
test byte ptr [edx+27h] 20h +
jz loc_47A083  +
test ebx ebx +
jz loc_47A094  +
sub ebx 1 +
add eax 1 +
add edx 28h +
cmp eax ecx +
jb loc_47A076  +
xor esi esi +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov esi edx +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_47A0B0  +
xor eax eax +
retn   +
mov eax 400000h +
call sub_479E90  +
test eax eax +
jz loc_47A0AB  +
mov eax 400000h +
retn   +
***
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
jz loc_47A0E0  +
retn   +
***
sub esp 8 +
mov eax 400000h +
call sub_479E90  +
test eax eax +
jz loc_47A116  +
mov eax [esp+0Ch] +
mov dword ptr [esp] 400000h +
sub eax 400000h +
mov [esp+4] eax +
call sub_479ED0  +
test eax eax +
jz loc_47A120  +
mov eax [eax+24h] +
not eax  +
shr eax 1Fh +
add esp 8 +
retn   +
***
xor eax eax +
jmp loc_47A116  +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
mov ebx [esp+18h] +
jz loc_47A150  +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 400000h +
call sub_479E90  +
test eax eax +
jz loc_47A147  +
mov eax ds:40003Ch +
mov esi [eax+400080h] +
test esi esi +
jz loc_47A147  +
mov [esp+4] esi +
mov dword ptr [esp] 400000h +
call sub_479ED0  +
test eax eax +
jz loc_47A147  +
add esi 400000h +
mov edx esi +
jnz loc_47A196  +
jmp loc_47A147  +
***
sub ebx 1 +
add edx 14h +
mov ecx [edx+4] +
test ecx ecx +
jnz loc_47A1A4  +
mov eax [edx+0Ch] +
test eax eax +
jz loc_47A1C0  +
test ebx ebx +
jg loc_47A190  +
mov edi [edx+0Ch] +
add esp 8 +
pop ebx  +
pop esi  +
add edi 400000h +
mov eax edi +
pop edi  +
retn   +
***
add esp 8 +
xor edi edi +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp eax 1000h +
lea ecx [esp+arg_0] +
jb loc_47A1F2  +
sub ecx 1000h +
or dword ptr [ecx] 0 +
sub eax 1000h +
cmp eax 1000h +
ja loc_47A1DD  +
sub ecx eax +
or dword ptr [ecx] 0 +
pop eax  +
pop ecx  +
retn   +
***
push esi  +
push ebx  +
sub esp 18h +
mov ebx [esp+18h+arg_4] +
mov esi [esp+18h+arg_C] +
mov ebp [esp+18h+arg_8] +
mov eax [esp+18h+arg_0] +
test ebx ebx +
mov edx ebx +
mov edi esi +
mov [esp+18h+var_18] 0 +
js loc_47A2B0  +
test edi edi +
mov ecx ebp +
mov ebx esi +
js loc_47A2CA  +
mov esi edx +
mov edx ebx +
test edx edx +
mov ebp eax +
mov edi ecx +
mov ebx eax +
jnz loc_47A252  +
cmp ecx esi +
jbe loc_47A274  +
mov edx esi +
xor esi esi +
div  ecx +
mov ebx eax +
jmp loc_47A25A  +
cmp edx esi +
jbe loc_47A293  +
xor esi esi +
xor ebx ebx +
mov ecx [esp+18h+var_18] +
mov eax ebx +
mov edx esi +
test ecx ecx +
jz loc_47A26C  +
neg eax  +
adc edx 0 +
neg edx  +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jnz loc_47A283  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ecx eax +
mov eax esi +
xor edx edx +
div  ecx +
mov esi eax +
mov eax ebx +
div  ecx +
mov ebx eax +
jmp loc_47A25A  +
bsr ebx edx +
xor ebx 1Fh +
jnz loc_47A2E0  +
cmp ecx eax +
jbe loc_47A2A3  +
cmp edx esi +
jnb loc_47A256  +
xor esi esi +
mov ebx 1 +
jmp loc_47A25A  +
neg eax  +
mov ecx ebp +
adc edx 0 +
mov ebx esi +
neg edx  +
test edi edi +
mov [esp+18h+var_18] 0FFFFFFFFh +
jns loc_47A236  +
neg ecx  +
adc ebx 0 +
not [esp+18h+var_18]  +
neg ebx  +
jmp loc_47A236  +
mov ecx ebx +
mov eax 20h +
sub eax ebx +
shl edx cl +
mov ecx eax +
mov [esp+18h+var_10] edx +
mov edx edi +
shr edx cl +
mov ecx ebx +
mov [esp+18h+var_14] edx +
mov edx [esp+18h+var_10] +
shl edi cl +
or [esp+18h+var_14] edx +
mov ecx eax +
mov edx esi +
shr edx cl +
mov ecx ebx +
shl esi cl +
mov ecx eax +
mov [esp+18h+var_10] edx +
mov edx ebp +
shr edx cl +
mov eax edx +
or eax esi +
mov esi [esp+18h+var_10] +
mov edx esi +
div  [esp+18h+var_14] +
mov esi edx +
mov [esp+18h+var_14] eax +
mul  edi +
cmp esi edx +
jb loc_47A350  +
mov ecx ebx +
shl ebp cl +
cmp ebp eax +
jnb loc_47A33F  +
cmp esi edx +
jz loc_47A350  +
mov ebx [esp+18h+var_14] +
xor esi esi +
jmp loc_47A25A  +
mov ebx [esp+18h+var_14] +
xor esi esi +
sub ebx 1 +
jmp loc_47A25A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_C] +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
test ebx ebx +
mov ebp ebx +
mov edx eax +
mov [esp+1Ch+var_1C] 0 +
js loc_47A430  +
test edx edx +
mov ecx esi +
mov ebx eax +
js loc_47A423  +
mov edx ebx +
mov eax edi +
test edx edx +
mov esi ebp +
mov [esp+1Ch+var_18] ecx +
mov ebx edi +
mov [esp+1Ch+var_14] ebp +
jnz loc_47A3C0  +
cmp ecx ebp +
jbe loc_47A406  +
mov edx ebp +
div  ecx +
mov esi edx +
mov eax esi +
xor edx edx +
jmp loc_47A3C8  +
cmp edx ebp +
jbe loc_47A3E0  +
mov eax edi +
mov edx ebp +
mov ecx [esp+1Ch+var_1C] +
test ecx ecx +
jz loc_47A3D6  +
neg eax  +
adc edx 0 +
neg edx  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
bsr edi edx +
mov [esp+1Ch+var_10] edi +
xor [esp+1Ch+var_10] 1Fh +
jnz loc_47A443  +
cmp ecx eax +
jbe loc_47A4D0  +
cmp edx ebp +
jb loc_47A4D0  +
mov eax ebx +
mov edx [esp+1Ch+var_14] +
jmp loc_47A3C8  +
test ecx ecx +
jnz loc_47A415  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ecx eax +
mov eax esi +
xor edx edx +
div  ecx +
mov eax ebx +
div  ecx +
mov esi edx +
jmp loc_47A3B4  +
neg ecx  +
adc ebx 0 +
neg ebx  +
jmp loc_47A396  +
neg edi  +
adc ebp 0 +
neg ebp  +
mov [esp+1Ch+var_1C] 0FFFFFFFFh +
jmp loc_47A38A  +
mov ebp [esp+1Ch+var_10] +
mov edi 20h +
sub edi ebp +
mov ecx ebp +
mov ebp [esp+1Ch+var_18] +
shl edx cl +
mov ecx edi +
mov ebx ebp +
shr ebx cl +
mov [esp+1Ch+var_18] ebx +
mov ebx ebp +
mov ebp [esp+1Ch+var_10] +
or [esp+1Ch+var_18] edx +
mov edx esi +
mov ecx ebp +
shl ebx cl +
mov ecx edi +
shr edx cl +
mov ecx ebp +
shl esi cl +
mov ecx edi +
mov [esp+1Ch+var_14] ebx +
mov ebx edx +
mov edx eax +
shr edx cl +
mov ecx ebp +
or edx esi +
shl eax cl +
mov ebp eax +
mov eax edx +
mov edx ebx +
div  [esp+1Ch+var_18] +
mov ebx edx +
mul  [esp+1Ch+var_14] +
cmp ebx edx +
mov esi eax +
mov ecx edx +
jb loc_47A4E4  +
cmp ebp eax +
jb loc_47A4E0  +
mov eax ebp +
mov ebp [esp+1Ch+var_10] +
sub eax esi +
sbb ebx ecx +
mov ecx ebp +
shr eax cl +
mov ecx edi +
mov esi eax +
mov eax ebx +
shl eax cl +
mov ecx ebp +
or esi eax +
shr ebx cl +
mov eax esi +
mov edx ebx +
jmp loc_47A3C8  +
mov eax esi +
sub ebx ecx +
sbb eax edx +
mov [esp+1Ch+var_14] eax +
jmp loc_47A3FE  +
cmp ebx edx +
jnz loc_47A4A6  +
mov ecx edx +
mov esi eax +
sub esi [esp+1Ch+var_14] +
sbb ecx [esp+1Ch+var_18] +
jmp loc_47A4A6  +
***
push esi  +
mov edx [esp+arg_0] +
test ecx ecx +
jz loc_47A678  +
cmp byte ptr [edx] 0 +
mov ebx edx +
jnz loc_47A66B  +
jmp loc_47A678  +
cmp byte ptr [edx] 0 +
jz loc_47A676  +
add edx 1 +
mov eax edx +
sub eax ebx +
cmp eax ecx +
jb loc_47A666  +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_4] +
lea edi [esp+1Ch+arg_8] +
mov [esp+1Ch+var_10] edi +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 0 +
mov [esp+1Ch+var_14] esi +
call _vsnprintf  +
test eax eax +
mov ebx eax +
js loc_47A6F4  +
lea ebp [eax+1] +
mov [esp+1Ch+var_1C] ebp +
call malloc  +
mov edx [esp+1Ch+arg_0] +
test eax eax +
mov [edx] eax +
jz loc_47A700  +
mov [esp+1Ch+var_10] edi +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call _vsnprintf  +
mov eax [esp+1Ch+arg_0] +
mov eax [eax] +
mov byte ptr [eax+ebx] 0 +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx 0FFFFFFFFh +
jmp loc_47A6F4  +
***
sub esp 2Ch +
lea eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call fgetpos  +
test eax eax +
jnz loc_47A737  +
mov eax [esp+2Ch+var_14] +
mov edx [esp+2Ch+var_10] +
add esp 2Ch +
retn   +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_47A733  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
mov eax [ebp+0Ch] +
mov ebx [ebp+8] +
mov edx eax +
and edx 3 +
cmp edx 2 +
jz loc_47A780  +
xor eax eax +
mov [ebp+0] ebx +
mov dword ptr [ebp+4] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test eax 108h +
jz loc_47A76B  +
mov edx [ebp+0] +
sub edx ebx +
mov edi edx +
sar edi 1Fh +
cmp edi 0 +
jl loc_47A76B  +
jle loc_47A7E0  +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_10] edx +
call _fileno  +
mov edx [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_1C] eax +
call _write  +
mov edx [esp+1Ch+var_10] +
mov ebx eax +
xor edx eax +
sar ebx 1Fh +
mov ecx ebx +
xor ecx edi +
or ecx edx +
jnz loc_47A7E7  +
mov eax [ebp+0Ch] +
test al 80h +
jz loc_47A7D8  +
and eax 0FFFFFFFDh +
mov [ebp+0Ch] eax +
mov ebx [ebp+8] +
xor eax eax +
jmp loc_47A76D  +
cmp edx 0 +
jbe loc_47A76B  +
jmp loc_47A798  +
or dword ptr [ebp+0Ch] 20h +
mov eax 0FFFFFFFFh +
mov ebx [ebp+8] +
jmp loc_47A76D  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
cmp eax 1 +
jz loc_47A845  +
cmp eax 2 +
jz loc_47A863  +
test eax eax +
jnz loc_47A890  +
mov [esp+2Ch+var_14] esi +
lea ebp [esp+2Ch+var_14] +
mov [esp+2Ch+var_10] edi +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
call fsetpos  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebp [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
call fgetpos  +
test eax eax +
jnz loc_47A8A2  +
add [esp+2Ch+var_14] esi +
adc [esp+2Ch+var_10] edi +
jmp loc_47A831  +
mov [esp+2Ch+var_2C] ebx +
lea ebp [esp+2Ch+var_14] +
call fflush  +
mov [esp+2Ch+var_2C] ebx +
call _fileno  +
mov [esp+2Ch+var_2C] eax +
call _filelengthi64  +
add eax esi +
adc edx edi +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_10] edx +
jmp loc_47A831  +
call _errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_47A83D  +
mov eax 0FFFFFFFFh +
jmp loc_47A83D  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
call _errno  +
mov dword ptr [eax] 0 +
mov [esp+2Ch+var_2C] ebx +
call _fileno  +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+4] +
test eax eax +
js loc_47AA20  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] eax +
call _lseeki64  +
test edx edx +
mov [esp+2Ch+var_1C] eax +
mov [esp+2Ch+var_18] edx +
js loc_47AA61  +
mov edx [ebx+0Ch] +
test edx 108h +
jz loc_47AA00  +
mov ecx [ebx] +
mov eax [ebx+8] +
mov esi ecx +
sub esi eax +
test dl 3 +
mov [esp+2Ch+var_10] esi +
jnz loc_47A9A7  +
test dl 80h +
jz loc_47AB32  +
mov esi [esp+2Ch+var_10] +
mov ebp [esp+2Ch+var_18] +
mov edi [esp+2Ch+var_1C] +
mov eax ebp +
or eax edi +
jz loc_47AA30  +
and edx 1 +
jz loc_47AA40  +
mov edi [ebx+4] +
test edi edi +
jz loc_47AA54  +
mov eax [esp+2Ch+var_14] +
add edi [esp+2Ch+var_10] +
mov ecx eax +
and eax 1Fh +
lea eax [eax+eax*4] +
shl eax 3 +
mov edx eax +
mov ebp eax +
mov eax ds:__pioinfo +
sar ecx 5 +
mov eax [eax+ecx*4] +
cmp byte ptr [eax+edx+4] 0 +
js loc_47AA70  +
mov ecx edi +
xor ebx ebx +
mov eax esi +
xor edx edx +
sub [esp+2Ch+var_1C] ecx +
sbb [esp+2Ch+var_18] ebx +
jmp loc_47AA44  +
mov esi [esp+2Ch+var_14] +
mov edi esi +
and esi 1Fh +
sar edi 5 +
mov ebp edi +
lea edi [esi+esi*4] +
mov esi ds:__pioinfo +
shl edi 3 +
add edi [esi+ebp*4] +
mov esi [esp+2Ch+var_10] +
cmp byte ptr [edi+4] 0 +
jns loc_47A93F  +
cmp ecx eax +
jbe loc_47A93B  +
mov ebp [esp+2Ch+var_14] +
mov edi ecx +
xor ecx ecx +
cmp byte ptr [eax] 0Ah +
setz cl  +
add eax 1 +
add esi ecx +
cmp eax edi +
jnz loc_47A9E0  +
mov [esp+2Ch+var_14] ebp +
jmp loc_47A93F  +
mov eax [ebx+4] +
mov edi [esp+2Ch+var_1C] +
mov ebp [esp+2Ch+var_18] +
cdq   +
sub edi eax +
sbb ebp edx +
mov eax edi +
mov edx ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+4] 0 +
jmp loc_47A8DD  +
add esp 2Ch +
mov eax esi +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
xor edx edx +
add eax [esp+2Ch+var_1C] +
adc edx [esp+2Ch+var_18] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
xor edx edx +
xor ecx ecx +
xor ebx ebx +
jmp loc_47A99A  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_47AA14  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_20] 2 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_10] ecx +
call _lseeki64  +
mov ecx [esp+2Ch+var_10] +
xor edx [esp+2Ch+var_18] +
xor eax [esp+2Ch+var_1C] +
or edx eax +
jnz loc_47AAD5  +
mov eax [ebx+8] +
lea ecx [eax+edi] +
cmp eax ecx +
jnb loc_47AAC3  +
xor edx edx +
cmp byte ptr [eax] 0Ah +
setz dl  +
add eax 1 +
add edi edx +
cmp eax ecx +
jnz loc_47AAB2  +
test byte ptr [ebx+0Dh] 20h +
jz loc_47A992  +
add edi 1 +
jmp loc_47A992  +
mov eax [esp+2Ch+var_1C] +
mov edx [esp+2Ch+var_18] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_10] ecx +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call _lseeki64  +
cmp edi 200h +
mov ecx [esp+2Ch+var_10] +
ja loc_47AB1B  +
mov eax [ebx+0Ch] +
mov edi 200h +
and eax 408h +
cmp eax 8 +
jz loc_47AB1E  +
mov edi [ebx+18h] +
mov eax ds:__pioinfo +
mov eax [eax+ecx*4] +
test byte ptr [eax+ebp+4] 4 +
jnz loc_47AACD  +
jmp loc_47A992  +
call _errno  +
mov edx 0FFFFFFFFh +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_47AA14  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov esi [esp+34h] +
mov edi [esp+38h] +
mov ebp [esp+3Ch] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_47ABF2  +
cmp ebp 2 +
ja loc_47ABF2  +
and dword ptr [ebx+0Ch] 0FFFFFFEFh +
cmp ebp 1 +
jz loc_47ABE1  +
mov [esp] ebx +
call sub_47A750  +
mov eax [ebx+0Ch] +
test al 80h +
jnz loc_47ABD0  +
and eax 409h +
cmp eax 9 +
jz loc_47ABD8  +
mov [esp] ebx +
call _fileno  +
mov [esp+0Ch] ebp +
mov [esp+4] esi +
mov [esp+8] edi +
mov [esp] eax +
call _lseeki64  +
and eax edx +
cmp eax 0FFFFFFFFh +
setz al  +
movzx eax al +
neg eax  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
and eax 0FFFFFFFCh +
mov [ebx+0Ch] eax +
jmp loc_47AB9D  +
***
mov dword ptr [ebx+18h] 200h +
jmp loc_47AB9D  +
***
mov [esp] ebx +
call sub_47A8B0  +
add esi eax +
adc edi edx +
xor bp bp +
jmp loc_47AB84  +
***
call _errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_47ABC6  +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 4 +
mov esi [esp+10h] +
call __doserrno  +
mov [eax] esi +
jmp loc_47AC31  +
add ebx 1 +
cmp ds:dword_4A2BE4[ebx*8] 0FFFFFFFFh +
jz loc_47AC50  +
cmp ds:dword_4A2BE0[ebx*8] esi +
jnz loc_47AC24  +
call _errno  +
mov edx ds:dword_4A2BE4[ebx*8] +
mov [eax] edx +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
lea eax [esi-13h] +
cmp eax 11h +
jbe loc_47AC85  +
sub esi 0BCh +
cmp esi 0Eh +
jbe loc_47AC74  +
call _errno  +
mov dword ptr [eax] 16h +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 8 +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 0Dh +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 12Ch +
mov ebx [ebp+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_47AE6E  +
cmp byte ptr [ebx] 0 +
jz loc_47AE38  +
mov [esp+138h+var_138] ebx +
call ds:GetFileAttributesA  +
sub esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_47AE50  +
test al 10h +
jz loc_47AE38  +
lea edi [ebp+var_11C] +
mov [esp+138h+var_134] ebx +
mov ebx edi +
mov [esp+138h+var_130] 104h +
mov [esp+138h+var_138] edi +
call _fullpath  +
mov edx [ebx] +
add ebx 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_47AD24  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [ebx+2] +
cmovz ebx edx +
add al al +
sbb ebx 3 +
sub ebx edi +
lea eax [ebx+233h] +
mov [esp+138h+var_138] eax +
call malloc  +
test eax eax +
mov esi eax +
jz loc_47AE5F  +
lea edx [eax+22Ch] +
lea eax [ebx+1] +
mov [esp+138h+var_138] edx +
mov [esp+138h+var_130] eax +
mov [esp+138h+var_134] edi +
mov [ebp+var_12C] edx +
call memcpy  +
mov edx [ebp+var_12C] +
cmp byte ptr [esi+22Ch] 0 +
jz loc_47ADB3  +
movzx eax byte ptr [esi+ebx+22Bh] +
cmp al 2Fh +
jz loc_47ADB3  +
cmp al 5Ch +
jz loc_47ADB3  +
mov edi 5Ch +
mov [edx+ebx] di +
mov eax edx +
mov ecx [eax] +
add eax 4 +
lea edx [ecx-1010101h] +
not ecx  +
and edx ecx +
and edx 80808080h +
jz loc_47ADB5  +
mov ecx edx +
shr ecx 10h +
test edx 8080h +
cmovz edx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add dl dl +
sbb eax 3 +
mov edx 2Ah +
mov [eax] dx +
xor ecx ecx +
xor eax eax +
lea edx [esi+120h] +
xor ebx ebx +
mov [esi+11Ch] cx +
mov edi edx +
mov ecx 41h +
mov dword ptr [esi+224h] 0FFFFFFFFh +
mov dword ptr [esi+228h] 0 +
mov dword ptr [esi+118h] 0 +
mov [esi+11Eh] bx +
stos   +
mov eax esi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 14h +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 2 +
xor eax eax +
jmp loc_47AE30  +
call _errno  +
mov dword ptr [eax] 0Ch +
xor eax eax +
jmp loc_47AE30  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_47AE30  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_47AF82  +
mov eax [ebx+228h] +
test eax eax +
js loc_47AF6D  +
jz loc_47AF10  +
mov eax [ebx+224h] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findnext  +
test eax eax +
jnz loc_47AF40  +
mov eax [ebx+228h] +
add eax 1 +
test eax eax +
mov [ebx+228h] eax +
jle loc_47AF6D  +
lea esi [ebx+14h] +
mov [esp+14h+var_14] esi +
call strlen  +
mov [ebx+11Eh] ax +
lea eax [ebx+120h] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call strcpy  +
lea eax [ebx+118h] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea eax [ebx+22Ch] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findfirst  +
cmp eax 0FFFFFFFFh +
mov [ebx+224h] eax +
jz loc_47AF63  +
mov dword ptr [ebx+228h] 1 +
jmp loc_47AED9  +
call ds:GetLastError  +
cmp eax 12h +
jz loc_47AF75  +
mov eax [ebx+224h] +
mov [esp+14h+var_14] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0 +
jmp loc_47AF4B  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_47AF03  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_47AFDF  +
mov eax [ebx+224h] +
xor esi esi +
cmp eax 0FFFFFFFFh +
jz loc_47AFCF  +
mov [esp+14h+var_14] eax +
call _findclose  +
mov esi eax +
mov [esp+14h+var_14] ebx +
call free  +
mov eax esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_47AFD9  +
***
jmp sub_47B000  +
***
mov ebx [esp+18h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_47B043  +
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_47B02A  +
mov [esp+18h+var_18] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0 +
add esp 18h +
pop ebx  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_47B03E  +
***
push ebx  +
sub esp 8 +
mov ebx [esp+10h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_47B072  +
mov eax [ebx+228h] +
add esp 8 +
pop ebx  +
retn   +
***
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_47B06D  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_47B11D  +
cmp esi 0FFFFFFFFh +
jl loc_47B110  +
jz loc_47B0E0  +
mov [esp] ebx +
call sub_47B000  +
nop   +
lea esi [esi+0] +
jmp loc_47B0CE  +
mov [esp] ebx +
call sub_47AE80  +
test eax eax +
jz loc_47B107  +
cmp esi [ebx+228h] +
jg loc_47B0C2  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_47B0F3  +
mov [esp] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 16h +
jmp loc_47B107  +
***
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_47B107  +
***
retn   +
***
mov eax [esp+4] +
xchg eax ds:dword_4A8C64 +
retn   +
***
jmp ds:__setusermatherr  +
***
push edi  +
push esi  +
sub esp 18h +
call sub_401500  +
mov [esp+18h+var_18] offset sub_401550 +
call sub_4792A0  +
leave   +
retn   +
***
