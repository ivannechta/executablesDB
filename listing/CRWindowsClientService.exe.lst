call sub_401530  +
mov byte_4314A4 1 +
retn   +
***
push 0B0h  +
mov ecx offset unk_430B40 +
call sub_401C10  +
push 1  +
mov ecx offset unk_430B40 +
call sub_40DD30  +
push offset sub_422CA0  +
call sub_41EF0E  +
add esp 4 +
pop ebp  +
retn   +
***
push 0B0h  +
mov ecx offset unk_430D90 +
call sub_401C10  +
push 1  +
mov ecx offset unk_430D90 +
call sub_40DD30  +
push offset sub_422CB0  +
call sub_41EF0E  +
add esp 4 +
pop ebp  +
retn   +
***
push 0B0h  +
mov ecx offset dword_430E48 +
call sub_401C10  +
push 1  +
mov ecx offset dword_430E48 +
call sub_40DD30  +
push offset sub_422CE0  +
call sub_41EF0E  +
add esp 4 +
pop ebp  +
retn   +
***
push 0B0h  +
mov ecx offset unk_430F18 +
call sub_401C10  +
push 1  +
mov ecx offset unk_430F18 +
call sub_40DD30  +
push offset sub_422CF0  +
call sub_41EF0E  +
add esp 4 +
pop ebp  +
retn   +
***
push 0B0h  +
mov ecx offset unk_431088 +
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi edx +
test esi esi +
jnz loc_401144  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
test ecx ecx +
jnz loc_401163  +
call ds:_errno  +
mov dword ptr [eax] 16h +
call ds:_invalid_parameter_noinfo  +
pop edi  +
mov eax 16h +
pop esi  +
pop ebp  +
retn   +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_401181  +
cmp edi esi +
jb loc_401181  +
push esi  +
push ebx  +
push ecx  +
call memcpy  +
add esp 0Ch +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
push edi  +
push 0  +
push ecx  +
call memset  +
add esp 0Ch +
test ebx ebx +
jnz loc_4011AD  +
call ds:_errno  +
mov dword ptr [eax] 16h +
call ds:_invalid_parameter_noinfo  +
pop ebx  +
pop edi  +
mov eax 16h +
pop esi  +
pop ebp  +
retn   +
cmp edi esi +
jnb loc_4011A3  +
call ds:_errno  +
mov dword ptr [eax] 22h +
call ds:_invalid_parameter_noinfo  +
pop ebx  +
pop edi  +
mov eax 22h +
pop esi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
pop ebp  +
retn   +
***
retn   +
***
push 0  +
push 0  +
push [ebp+dwExceptionFlags]  +
push [ebp+dwExceptionCode]  +
call ds:RaiseException  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov [ebp+8] eax +
lea eax [ebp+8] +
push offset unk_42C870  +
push eax  +
call _CxxThrowException  +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
cmp ecx 50h +
ja loc_401271  +
movzx eax ds:byte_40128C[ecx] +
jmp ds:off_40127C[eax*4]  +
mov eax ecx +
pop ebp  +
retn   +
***
push 8007000Eh  +
call loc_401220  +
push 80070057h  +
call loc_401220  +
push 80004005h  +
call loc_401220  +
nop   +
push ecx  +
call ds:InitializeCriticalSectionEx  +
test eax eax +
jnz loc_401302  +
call ds:GetLastError  +
test eax eax +
jle locret_401304  +
movzx eax ax +
or eax 80070000h +
retn   +
xor eax eax +
retn   +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:LoadResource  +
test eax eax +
jnz loc_401325  +
pop ebp  +
retn   +
***
push esi  +
push eax  +
call ds:LockResource  +
mov esi eax +
test esi esi +
jz loc_401366  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:SizeofResource  +
mov ecx [ebp+10h] +
lea edx [esi+eax] +
and ecx 0Fh +
jbe loc_401362  +
cmp esi edx +
jb loc_40136B  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
xor eax eax +
cmp [esi] ax +
cmovz esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
push 0  +
mov ecx offset unk_431088 +
call sub_41E9F1  +
mov esi eax +
mov edi 1 +
test esi esi +
jz loc_40140D  +
mov ebx [ebp+arg_0] +
shr ebx 4 +
push dword ptr [ebp+wLanguage]  +
lea eax [ebx+1] +
movzx eax ax +
push eax  +
push 6  +
push esi  +
call ds:FindResourceExW  +
test eax eax +
jz loc_4013FB  +
push [ebp+arg_0]  +
push eax  +
push esi  +
call loc_401310  +
add esp 0Ch +
test eax eax +
jnz loc_401414  +
push edi  +
mov ecx offset unk_431088 +
call sub_41E9F1  +
mov esi eax +
inc edi  +
test esi esi +
jnz loc_4013D3  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn   +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push [ebp+dwBytes]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapAlloc  +
pop ebp  +
retn 4  +
***
mov eax [ebp+lpMem] +
test eax eax +
jz loc_401456  +
push eax  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapFree  +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
test edx edx +
jnz loc_401475  +
mov eax [ecx] +
push [ebp+arg_4]  +
call dword ptr [eax]  +
pop ebp  +
retn 8  +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_401488  +
mov eax [ecx] +
push edx  +
call dword ptr [eax+4]  +
xor eax eax +
pop ebp  +
retn 8  +
push eax  +
push edx  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapReAlloc  +
pop ebp  +
retn 8  +
***
push [ebp+lpMem]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
cmp byte ptr [esi+8] 0 +
mov dword ptr [esi] offset off_424C04 +
jz loc_4014E0  +
mov eax [esi+4] +
test eax eax +
jz loc_4014E0  +
push eax  +
call ds:HeapDestroy  +
test [ebp+arg_0] 1 +
jz loc_4014F1  +
push 0Ch  +
push esi  +
call sub_41EC9F  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx+0Ch] +
shr eax 1Fh +
retn   +
***
mov edx ecx +
or eax 0FFFFFFFFh +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg locret_401527  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
retn   +
***
mov eax large fs:2Ch +
push esi  +
mov esi [eax] +
mov eax dword_431488 +
cmp eax [esi+4] +
jle loc_4015A4  +
push offset dword_431488  +
call sub_41F074  +
add esp 4 +
cmp dword_431488 0FFFFFFFFh +
jnz loc_4015A4  +
xorps xmm0 xmm0 +
mov dword_431484 0 +
movq qword_43147C xmm0 +
call ds:GetProcessHeap  +
push offset loc_422C70  +
mov dword ptr qword_43147C offset off_424C04 +
mov dword ptr qword_43147C+4 eax +
mov byte ptr dword_431484 0 +
call sub_41EF0E  +
push offset dword_431488  +
call sub_41F035  +
add esp 8 +
mov eax dword_431478 +
cmp eax [esi+4] +
pop esi  +
jle loc_401642  +
push offset dword_431478  +
call sub_41F074  +
add esp 4 +
cmp dword_431478 0FFFFFFFFh +
jnz loc_401642  +
xorps xmm0 xmm0 +
mov dword_431474 0 +
movups oword ptr oword_43145C xmm0 +
xor eax eax +
mov dword ptr oword_43145C offset off_424C1C +
movq qword_43146C xmm0 +
push offset loc_422C50  +
mov dword ptr oword_43145C+4 offset qword_43147C +
mov dword ptr qword_43146C+4 2 +
mov dword ptr oword_43145C+0Ch 0 +
mov dword ptr qword_43146C 0 +
mov dword_431474 eax +
mov dword ptr oword_43145C+8 offset oword_43145C +
call sub_41EF0E  +
push offset dword_431478  +
call sub_41F035  +
add esp 8 +
mov eax offset oword_43145C +
retn   +
***
mov edx [ebp+arg_0] +
push edi  +
mov edi ecx +
test edx edx +
jns loc_401664  +
xor eax eax +
pop edi  +
pop ebp  +
retn 8  +
mov eax 7FFFFFFFh +
sub eax edx +
cmp eax 1 +
jl loc_40165D  +
inc edx  +
push esi  +
lea esi [edx+7] +
and esi 0FFFFFFF8h +
cmp edx esi +
jg loc_4016C0  +
mov eax esi +
mul  [ebp+arg_4] +
test edx edx +
ja loc_4016C0  +
jb loc_40168C  +
cmp eax 0FFFFFFFFh +
ja loc_4016C0  +
cmp eax 0FFFFFFEFh +
ja loc_4016C0  +
mov ecx [edi+4] +
lea edx [eax+10h] +
push edx  +
mov eax [ecx] +
call dword ptr [eax]  +
mov ecx eax +
test ecx ecx +
jz loc_4016C0  +
lea eax [esi-1] +
mov [ecx] edi +
pop esi  +
mov [ecx+8] eax +
mov eax ecx +
mov dword ptr [ecx+0Ch] 1 +
mov dword ptr [ecx+4] 0 +
pop edi  +
pop ebp  +
retn 8  +
pop esi  +
xor eax eax +
pop edi  +
pop ebp  +
retn 8  +
***
mov ecx [ecx+4] +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+4]  +
***
mov edx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
test edx edx +
jns loc_4016F5  +
xor eax eax +
pop edi  +
pop ebp  +
retn 0Ch  +
mov eax 7FFFFFFFh +
sub eax edx +
cmp eax 1 +
jl loc_4016EE  +
inc edx  +
push esi  +
lea esi [edx+7] +
and esi 0FFFFFFF8h +
cmp edx esi +
jg loc_401743  +
mov eax esi +
mul  [ebp+arg_8] +
test edx edx +
ja loc_401743  +
jb loc_40171D  +
cmp eax 0FFFFFFFFh +
ja loc_401743  +
cmp eax 0FFFFFFEFh +
ja loc_401743  +
mov ecx [ecx+4] +
add eax 10h +
push eax  +
push edi  +
mov edx [ecx] +
call dword ptr [edx+8]  +
mov ecx eax +
test ecx ecx +
jz loc_401743  +
lea eax [esi-1] +
pop esi  +
mov [ecx+8] eax +
mov eax ecx +
pop edi  +
pop ebp  +
retn 0Ch  +
pop esi  +
xor eax eax +
pop edi  +
pop ebp  +
retn 0Ch  +
***
retn   +
***
test [ebp+arg_0] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_424C1C +
mov byte_4314A4 0 +
jz loc_401794  +
push 1Ch  +
push esi  +
call sub_41EC9F  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_424C38 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call ds:__std_exception_copy  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx [ecx+4] +
mov eax offset aUnknownExcepti +
test ecx ecx +
cmovnz eax ecx +
retn   +
***
push esi  +
mov esi ecx +
lea eax [esi+4] +
mov dword ptr [esi] offset off_424C38 +
push eax  +
call ds:__imp___std_exception_destroy  +
add esp 4 +
test [ebp+arg_0] 1 +
jz loc_40180A  +
push 0Ch  +
push esi  +
call sub_41EC9F  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_401844  +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_0] +
mov ax [edx] +
cmp ax [ecx] +
jnz loc_401849  +
add edx 2 +
add ecx 2 +
sub esi 1 +
jnz loc_401831  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
movzx eax word ptr [edx] +
cmp ax [ecx] +
pop esi  +
sbb eax eax +
and eax 0FFFFFFFEh +
inc eax  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
cmp word ptr [eax] 0 +
jnz loc_401870  +
xor eax eax +
pop ebp  +
retn   +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_401873  +
sub eax edx +
sar eax 1 +
pop ebp  +
retn   +
***
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_40189F  +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
add eax eax +
mov [ebp+arg_8] eax +
pop ebp  +
jmp memcpy  +
***
push ebp  +
mov ebp esp +
mov ecx [ebp+10h] +
test ecx ecx +
jnz loc_4018BE  +
xor eax eax +
pop ebp  +
retn   +
***
mov edx [ebp+8] +
push esi  +
mov esi [ebp+0Ch] +
sub ecx 4 +
jb loc_4018E1  +
sbb eax eax +
or eax 1 +
pop esi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
cmp byte ptr [eax] 0 +
jnz loc_40192F  +
xor eax eax +
pop ebp  +
retn   +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_401932  +
sub eax edx +
pop ebp  +
retn   +
***
mov eax [ebp+arg_8] +
test eax eax +
jnz loc_40194F  +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
mov [ebp+arg_8] eax +
pop ebp  +
jmp memcpy  +
***
lea eax [ecx+4] +
mov dword ptr [ecx] offset off_424C38 +
push eax  +
call ds:__imp___std_exception_destroy  +
pop ecx  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_420130  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push 1  +
call ds:?_Init@locale@std@@CAPAV_Locimp@12@_N@Z  +
mov [esi+4] eax +
add esp 4 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_420150  +
mov eax large fs:0 +
push eax  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_401A0A  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_401A0A  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_420191  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx [ebp+8] +
mov ecx ebx +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-30h] 0 +
push offset unk_427F70  +
mov [ebp-34h] ebx +
mov dword ptr [ebx] 0 +
call sub_4023D0  +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-28h] +
push 0  +
push offset unk_427F91  +
mov dword ptr [ebp-30h] 1 +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
call sub_402910  +
lea eax [ebp-2Ch] +
mov dword ptr [ebp-4] 1 +
push eax  +
push 0  +
push 8000h  +
push offset unk_427DE4  +
call ds:SHGetKnownFolderPath  +
test eax eax +
jnz loc_401BD0  +
mov edi ds:wcsnlen +
push 104h  +
push dword ptr [ebp-2Ch]  +
call edi  +
push 104h  +
push offset aAdobeCrlogs  +
lea esi [eax+1] +
call edi  +
xor ecx ecx +
add eax esi +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_41ECAD  +
push 104h  +
push dword ptr [ebp-2Ch]  +
mov edi eax +
call ds:wcsnlen  +
push 104h  +
push offset aAdobeCrlogs  +
mov esi eax +
call ds:wcsnlen  +
inc eax  +
add esp 24h +
add eax esi +
cmp eax 209h +
jnb loc_401B55  +
push 104h  +
push dword ptr [ebp-2Ch]  +
call ds:wcsnlen  +
push 104h  +
push offset aAdobeCrlogs  +
mov esi eax +
call ds:wcsnlen  +
inc eax  +
add esp 10h +
add eax esi +
jz loc_401B6E  +
jmp loc_401B60  +
mov eax 209h +
sub eax 1 +
mov ecx 0 +
mov [edi+eax*2] cx +
jnz loc_401B60  +
push dword ptr [ebp-2Ch]  +
mov esi ds:PathAppendW +
push edi  +
call esi  +
push offset aAdobeCrlogs  +
push edi  +
call esi  +
test edi edi +
jnz loc_401B8A  +
xor ecx ecx +
jmp loc_401B9F  +
mov ecx edi +
lea edx [ecx+2] +
nop   +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_401B90  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push edi  +
mov ecx ebx +
call loc_403510  +
push dword ptr [ebx]  +
call ds:PathFileExistsW  +
test eax eax +
jnz loc_401BBE  +
push eax  +
push dword ptr [ebx]  +
push eax  +
call ds:SHCreateDirectoryExW  +
push edi  +
call j_j_free  +
add esp 4 +
push dword ptr [ebp-2Ch]  +
call ds:CoTaskMemFree  +
mov ecx [ebp-14h] +
cmp ecx 10h +
jb loc_401BE5  +
inc ecx  +
push ecx  +
push dword ptr [ebp-28h]  +
lea ecx [ebp-28h] +
call sub_402E70  +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push [ebp+arg_0]  +
push 0  +
push ecx  +
call memset  +
add esp 0Ch +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4201F8  +
mov eax large fs:0 +
push eax  +
sub esp 0D0h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov ecx esi +
mov ebx [ebp+arg_4] +
mov [ebp+var_4] 0 +
mov [ebp+var_D8] 0 +
push offset aNA  +
mov [ebp+var_DC] esi +
mov dword ptr [esi] 0 +
call sub_4023D0  +
lea eax [ebp+TokenHandle] +
mov [ebp+var_4] 0 +
push eax  +
push 28h  +
mov [ebp+var_D8] 1 +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
lea eax [ebp+NewState.Privileges] +
push eax  +
push offset Name  +
push 0  +
call ds:LookupPrivilegeValueW  +
push 0  +
push 0  +
push 0  +
lea eax [ebp+NewState] +
mov [ebp+NewState.PrivilegeCount] 1 +
push eax  +
push 0  +
push [ebp+TokenHandle]  +
mov [ebp+NewState.Privileges.Attributes] 2 +
call ds:AdjustTokenPrivileges  +
lea eax [ebp+TimeZoneInformation] +
push eax  +
call ds:GetTimeZoneInformation  +
cmp eax 1 +
jz loc_401D1D  +
test eax eax +
jz loc_401D1D  +
cmp eax 2 +
jnz loc_401D60  +
lea eax [ebp+TimeZoneInformation.DaylightName] +
push eax  +
lea ecx [ebp+var_D4] +
call sub_4023D0  +
mov [ebp+var_4] 2 +
jmp loc_401D36  +
lea eax [ebp+TimeZoneInformation.StandardName] +
push eax  +
lea ecx [ebp+var_D4] +
call sub_4023D0  +
mov [ebp+var_4] 1 +
push eax  +
mov ecx esi +
call sub_4022A0  +
mov byte ptr [ebp+var_4] 0 +
or eax 0FFFFFFFFh +
mov edx [ebp+var_D4] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_401D60  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [ebp+TimeZoneInformation.Bias] +
push 0  +
push 0  +
neg eax  +
mov [ebp+NewState.Privileges.Attributes] 0 +
push 0  +
mov [ebx] eax +
lea eax [ebp+NewState] +
push eax  +
push 0  +
push [ebp+TokenHandle]  +
call ds:AdjustTokenPrivileges  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_420240  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 5  +
push 5  +
lea eax [ebp+var_18] +
mov [ebp+var_4] 0 +
push eax  +
xor ebx ebx +
push ebx  +
call ds:_itoa_s  +
add esp 10h +
mov [ebp+var_1C] ebx +
lea eax [ebp+var_18] +
lea ecx [ebp+var_1C] +
push eax  +
call sub_402330  +
mov byte ptr [ebp+var_4] 1 +
lea eax [ebp+arg_0] +
cmp [ebp+arg_14] 10h +
lea esi [ebp+var_1C] +
push ecx  +
cmovnb eax [ebp+arg_0] +
mov ecx esp +
push eax  +
call sub_402330  +
mov ecx esi +
call sub_410990  +
xorps xmm0 xmm0 +
mov [ebp+var_20] ebx +
movq [ebp+var_28] xmm0 +
add esp 4 +
mov dword ptr [ebp+var_28] ebx +
mov dword ptr [ebp+var_28+4] ebx +
mov [ebp+var_20] ebx +
lea eax [ebp+var_28] +
mov byte ptr [ebp+var_4] 2 +
push eax  +
sub esp 18h +
mov esi esp +
mov [ebp+var_2C] esp +
push ecx  +
mov ecx esp +
push offset a_  +
call sub_4023D0  +
push esi  +
call sub_404940  +
sub esp 10h +
mov byte ptr [ebp+var_4] 3 +
mov esi esp +
lea eax [ebp+var_1C] +
push ecx  +
mov ecx esp +
push eax  +
mov [ebp+var_30] ecx +
call loc_402CE0  +
push esi  +
call sub_404940  +
add esp 8 +
mov byte ptr [ebp+var_4] 2 +
call loc_404B80  +
mov ecx dword ptr [ebp+var_28+4] +
lea edi [ebx-1] +
mov esi dword ptr [ebp+var_28] +
mov eax 2AAAAAABh +
sub ecx esi +
add esp 34h +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
jz loc_401EEC  +
mov [ebp+var_2C] ebx +
cmp dword ptr [esi+14h] 10h +
jb loc_401EB9  +
mov eax [esi] +
jmp loc_401EBB  +
mov eax esi +
push eax  +
lea ecx [ebp+var_2C] +
call sub_402330  +
push [ebp+var_2C]  +
call ds:_wtoi  +
mov edx [ebp+var_2C] +
add esp 4 +
mov ebx eax +
add edx 0FFFFFFF0h +
mov ecx edi +
xadd [edx+0Ch] ecx +
dec ecx  +
test ecx ecx +
jg loc_401EEC  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
test esi esi +
jz loc_401F23  +
push [ebp+var_30]  +
lea ecx [ebp+var_28] +
push ecx  +
push dword ptr [ebp+var_28+4]  +
push esi  +
call sub_404630  +
mov ecx [ebp+var_20] +
mov eax 2AAAAAABh +
sub ecx esi +
add esp 10h +
imul  ecx +
lea ecx [ebp+var_28] +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call sub_402D60  +
mov byte ptr [ebp+var_4] 0 +
mov edx [ebp+var_1C] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] edi +
dec edi  +
test edi edi +
jg loc_401F3F  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [ebp+arg_14] +
cmp eax 10h +
jb loc_401F54  +
inc eax  +
lea ecx [ebp+arg_0] +
push eax  +
push [ebp+arg_0]  +
call sub_402E70  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
lea edx [eax+eax*2] +
mov eax [ecx] +
lea eax [eax+edx*8] +
pop ebp  +
retn 4  +
***
mov edx [ecx+4] +
mov eax 2AAAAAABh +
sub edx [ecx] +
imul  edx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
retn   +
***
push ecx  +
push edi  +
mov edi ecx +
mov eax [edi] +
test eax eax +
jz loc_402011  +
push [ebp+var_4]  +
push edi  +
push dword ptr [edi+4]  +
push eax  +
call sub_404630  +
mov ecx [edi+8] +
mov eax 2AAAAAABh +
sub ecx [edi] +
add esp 10h +
imul  ecx +
mov ecx edi +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push dword ptr [edi]  +
call sub_402D60  +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov dword ptr [edi+8] 0 +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov dword ptr [ecx] 0 +
mov eax ecx +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 0 +
retn   +
***
mov eax [esi+14h] +
cmp eax 8 +
jb loc_402054  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call sub_402E00  +
mov dword ptr [esi+14h] 7 +
cmp dword ptr [esi+14h] 8 +
mov dword ptr [esi+10h] 0 +
jb loc_402071  +
mov eax [esi] +
xor ecx ecx +
pop esi  +
mov [eax] cx +
retn   +
xor eax eax +
mov [esi] ax +
pop esi  +
retn   +
***
mov edx [ecx+10h] +
mov eax [ebp+arg_0] +
cmp eax edx +
ja loc_4020A0  +
mov [ecx+10h] eax +
cmp dword ptr [ecx+14h] 10h +
jb loc_402098  +
mov ecx [ecx] +
mov byte ptr [ecx+eax] 0 +
pop ebp  +
retn 4  +
push 0  +
sub eax edx +
push eax  +
call sub_402B30  +
pop ebp  +
retn 4  +
***
cmp dword ptr [ecx+14h] 10h +
jb loc_4020B9  +
mov eax [ecx] +
retn   +
mov eax ecx +
retn   +
***
cmp dword ptr [ecx+14h] 10h +
mov eax [ebp+arg_0] +
jb loc_4020CE  +
mov ecx [ecx] +
add eax ecx +
pop ebp  +
retn 4  +
***
mov eax [esi+14h] +
cmp eax 10h +
jb loc_4020F4  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call sub_402E70  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_40210F  +
mov eax [esi] +
pop esi  +
mov byte ptr [eax] 0 +
retn   +
mov byte ptr [esi] 0 +
pop esi  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov dword ptr [edi+14h] 0Fh +
mov dword ptr [edi+10h] 0 +
mov byte ptr [edi] 0 +
cmp dword ptr [esi+14h] 10h +
jnb loc_402157  +
mov eax [esi+10h] +
add eax 1 +
jz loc_402161  +
push eax  +
push esi  +
push edi  +
call ds:memmove  +
add esp 0Ch +
jmp loc_402161  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_40218E  +
mov eax [esi] +
mov byte ptr [eax] 0 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov eax edi +
mov byte ptr [esi] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push [ebp+arg_4]  +
mov esi ecx +
push [ebp+arg_0]  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
call sub_402850  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
cmp byte ptr [ecx] 0 +
jnz loc_402201  +
xor edx edx +
push edx  +
push ecx  +
mov ecx esi +
call sub_402910  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
mov edx ecx +
push edi  +
lea edi [edx+1] +
mov al [edx] +
inc edx  +
test al al +
jnz loc_402207  +
sub edx edi +
pop edi  +
push edx  +
push ecx  +
mov ecx esi +
call sub_402910  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx+14h] 0Fh +
mov eax ecx +
mov dword ptr [ecx+10h] 0 +
mov byte ptr [ecx] 0 +
retn   +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
test edx edx +
jnz loc_40226D  +
xor eax eax +
push eax  +
push edx  +
call loc_403510  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
mov eax edx +
push edi  +
lea edi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_402273  +
sub eax edi +
mov ecx esi +
pop edi  +
sar eax 1 +
push eax  +
push edx  +
call loc_403510  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
push edi  +
mov ecx [eax] +
mov edi [esi] +
sub edi 10h +
lea edx [ecx-10h] +
cmp edx edi +
jz loc_402305  +
cmp dword ptr [edi+0Ch] 0 +
push ebx  +
lea ebx [edi+0Ch] +
jl loc_4022F9  +
mov eax [edx] +
cmp eax [edi] +
jnz loc_4022F9  +
push edx  +
call loc_4034A0  +
add esp 4 +
mov [ebp+arg_0] eax +
or ecx 0FFFFFFFFh +
xadd [ebx] ecx +
dec ecx  +
test ecx ecx +
jg loc_4022EB  +
mov ecx [edi] +
push edi  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax [ebp+arg_0] +
add eax 10h +
pop ebx  +
mov [esi] eax +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push dword ptr [ecx-0Ch]  +
push ecx  +
mov ecx esi +
call loc_403510  +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx [ecx] +
or eax 0FFFFFFFFh +
sub edx 10h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg locret_40232A  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_420278  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
call sub_401530  +
mov ecx eax +
test ecx ecx +
jnz loc_40236F  +
push 80004005h  +
call loc_401220  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [esi] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_4023AB  +
test eax 0FFFF0000h +
jnz loc_4023AB  +
movzx edi ax +
push 0  +
push edi  +
call sub_4013B0  +
add esp 8 +
test eax eax +
jz loc_4023B3  +
push edi  +
push eax  +
mov ecx esi +
call loc_403AE0  +
jmp loc_4023B3  +
push eax  +
mov ecx esi +
call loc_402C50  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_420278  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
call sub_401530  +
mov ecx eax +
test ecx ecx +
jnz loc_40240F  +
push 80004005h  +
call loc_401220  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [esi] eax +
mov edx [ebp+arg_0] +
mov [ebp+var_4] 0 +
test edx edx +
jz loc_402462  +
test edx 0FFFF0000h +
jnz loc_40244C  +
movzx edi dx +
push 0  +
push edi  +
call sub_4013B0  +
add esp 8 +
test eax eax +
jz loc_40246D  +
push edi  +
push eax  +
mov ecx esi +
call loc_403AE0  +
jmp loc_40246D  +
mov ecx edx +
lea edi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_402451  +
sub ecx edi +
sar ecx 1 +
jmp loc_402464  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call loc_403510  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_4] esi +
call loc_402CE0  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
retn   +
***
cmp dword ptr [ecx+14h] 8 +
jb loc_4024C9  +
mov eax [ecx] +
retn   +
mov eax ecx +
retn   +
***
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi ecx +
jz loc_402509  +
cmp dword ptr [esi+14h] 8 +
jb loc_402509  +
push ebx  +
mov ebx [esi] +
test edi edi +
jz loc_4024FB  +
lea eax [edi+edi] +
push eax  +
push ebx  +
push esi  +
call memcpy  +
add esp 0Ch +
mov eax [esi+14h] +
mov ecx esi +
inc eax  +
push eax  +
push ebx  +
call sub_402E00  +
pop ebx  +
mov dword ptr [esi+14h] 7 +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_402527  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
xor eax eax +
mov [esi+edi*2] ax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
retn   +
***
cmp dword ptr [ecx+14h] 8 +
mov eax [ebp+arg_0] +
jb loc_40255E  +
mov ecx [ecx] +
lea eax [ecx+eax*2] +
pop ebp  +
retn 4  +
***
cmp dword ptr [ecx+14h] 8 +
mov eax [ebp+arg_0] +
jb loc_40257E  +
mov ecx [ecx] +
mov [eax] ecx +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
test ebx ebx +
jz loc_4025E6  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_4025AA  +
mov eax [esi] +
jmp loc_4025AC  +
mov eax esi +
cmp ebx eax +
jb loc_4025E6  +
cmp ecx 8 +
jb loc_4025B9  +
mov edx [esi] +
jmp loc_4025BB  +
mov edx esi +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
cmp eax ebx +
jbe loc_4025E6  +
cmp ecx 8 +
jb loc_4025CE  +
mov eax [esi] +
jmp loc_4025D0  +
mov eax esi +
push [ebp+arg_4]  +
sub ebx eax +
mov ecx esi +
sar ebx 1 +
push ebx  +
push esi  +
call sub_403010  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
push edi  +
mov edi [ebp+arg_4] +
cmp edi 7FFFFFFEh +
jbe loc_4025FD  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
cmp [esi+14h] edi +
jnb loc_40261B  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_4036C0  +
test edi edi +
jz loc_40267C  +
cmp dword ptr [esi+14h] 8 +
jb loc_402646  +
mov ecx [esi] +
jmp loc_402648  +
test edi edi +
jnz loc_402611  +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_402638  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 8  +
mov ecx esi +
test edi edi +
jz loc_40265A  +
lea eax [edi+edi] +
push eax  +
push ebx  +
push ecx  +
call memcpy  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_402674  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
push edi  +
mov ecx [esi+10h] +
mov eax ecx +
not eax  +
cmp eax ebx +
ja loc_4026B1  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
lea edi [ecx+ebx] +
test ebx ebx +
jz loc_40273C  +
cmp edi 7FFFFFFEh +
jbe loc_4026CF  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
cmp [esi+14h] edi +
jnb loc_402709  +
push ecx  +
push edi  +
mov ecx esi +
call sub_4036C0  +
test edi edi +
jz loc_40273C  +
push [ebp+arg_4]  +
mov ecx esi +
push ebx  +
push dword ptr [esi+10h]  +
call sub_402F90  +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_402734  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
test edi edi +
jnz loc_4026E1  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_402726  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 8  +
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
push edi  +
mov edi ecx +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
mov [edi] ax +
cmp dword ptr [esi+14h] 8 +
jnb loc_40278B  +
mov eax [esi+10h] +
add eax 1 +
jz loc_402795  +
add eax eax +
push eax  +
push esi  +
push edi  +
call ds:memmove  +
add esp 0Ch +
jmp loc_402795  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
mov dword ptr [esi+14h] 7 +
cmp dword ptr [esi+14h] 8 +
mov dword ptr [esi+10h] 0 +
jb loc_4027B7  +
mov esi [esi] +
xor eax eax +
mov [esi] ax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
xor eax eax +
mov dword ptr [ecx+14h] 7 +
mov dword ptr [ecx+10h] 0 +
mov [ecx] ax +
mov eax ecx +
retn   +
***
cmp [ebp+arg_0] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi ecx +
jz loc_402826  +
cmp dword ptr [esi+14h] 10h +
jb loc_402826  +
push ebx  +
mov ebx [esi] +
test edi edi +
jz loc_402818  +
push edi  +
push ebx  +
push esi  +
call memcpy  +
add esp 0Ch +
mov eax [esi+14h] +
mov ecx esi +
inc eax  +
push eax  +
push ebx  +
call sub_402E70  +
pop ebx  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_402842  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
mov byte ptr [esi+edi] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp edi 0FFFFFFFFh +
jnz loc_40286A  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
cmp edi 0FFFFFFFEh +
jbe loc_40287A  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
cmp [esi+14h] edi +
jnb loc_4028A0  +
push dword ptr [esi+10h]  +
push edi  +
call sub_403940  +
test edi edi +
jz loc_402906  +
cmp edi 1 +
jnz loc_4028CE  +
cmp dword ptr [esi+14h] 10h +
jb loc_4028C5  +
mov ecx [esi] +
mov al [ebp+arg_4] +
mov [ecx] al +
jmp loc_4028E9  +
test edi edi +
jnz loc_40288C  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_4028BA  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
mov eax esi +
pop edi  +
pop esi  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 8  +
mov al [ebp+arg_4] +
mov ecx esi +
mov [ecx] al +
jmp loc_4028E9  +
cmp dword ptr [esi+14h] 10h +
jb loc_4028D8  +
mov ecx [esi] +
jmp loc_4028DA  +
mov ecx esi +
movsx eax [ebp+arg_4] +
push edi  +
push eax  +
push ecx  +
call memset  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_402900  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
test ebx ebx +
jz loc_402975  +
mov ecx [esi+14h] +
cmp ecx 10h +
jb loc_40292A  +
mov eax [esi] +
jmp loc_40292C  +
mov eax esi +
cmp ebx eax +
jb loc_402975  +
cmp ecx 10h +
jb loc_402939  +
mov edx [esi] +
jmp loc_40293B  +
mov edx esi +
mov eax [esi+10h] +
add eax edx +
cmp eax ebx +
jbe loc_402975  +
cmp ecx 10h +
jb loc_40295F  +
push [ebp+arg_4]  +
mov eax [esi] +
mov ecx esi +
sub ebx eax +
push ebx  +
push esi  +
call sub_402A10  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
push [ebp+arg_4]  +
mov eax esi +
mov ecx esi +
sub ebx eax +
push ebx  +
push esi  +
call sub_402A10  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
push edi  +
mov edi [ebp+arg_4] +
cmp edi 0FFFFFFFEh +
jbe loc_402989  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
cmp [esi+14h] edi +
jnb loc_4029A7  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_403940  +
test edi edi +
jz loc_4029FD  +
cmp dword ptr [esi+14h] 10h +
jb loc_4029CE  +
mov eax [esi] +
jmp loc_4029D0  +
test edi edi +
jnz loc_40299D  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_4029C2  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 8  +
mov eax esi +
test edi edi +
jz loc_4029DF  +
push edi  +
push ebx  +
push eax  +
call memcpy  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_4029F7  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_4] +
push edi  +
mov eax [ebx+10h] +
cmp eax ecx +
jnb loc_402A30  +
push offset aInvalidStringP  +
call ds:?_Xout_of_range@std@@YAXPBD@Z  +
mov edi [ebp+arg_8] +
sub eax ecx +
cmp edi eax +
cmova edi eax +
cmp esi ebx +
jnz loc_402A8C  +
lea eax [ecx+edi] +
cmp [esi+10h] eax +
jnb loc_402A51  +
push offset aInvalidStringP  +
call ds:?_Xout_of_range@std@@YAXPBD@Z  +
mov [esi+10h] eax +
cmp dword ptr [esi+14h] 10h +
jb loc_402A73  +
mov edx [esi] +
push ecx  +
push 0  +
mov ecx esi +
mov byte ptr [edx+eax] 0 +
call sub_403380  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov edx esi +
push ecx  +
push 0  +
mov ecx esi +
mov byte ptr [edx+eax] 0 +
call sub_403380  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
cmp edi 0FFFFFFFEh +
jbe loc_402A9C  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
cmp [esi+14h] edi +
jnb loc_402AC5  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_403940  +
mov ecx [ebp+arg_4] +
test edi edi +
jz loc_402B1E  +
cmp dword ptr [ebx+14h] 10h +
jb loc_402ABB  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 10h +
jb loc_402AEC  +
mov edx [esi] +
jmp loc_402AEE  +
test edi edi +
jnz loc_402AB3  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_402AE0  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 0Ch  +
mov edx esi +
test edi edi +
jz loc_402B00  +
push edi  +
lea eax [ebx+ecx] +
push eax  +
push edx  +
call memcpy  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_402B18  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
push edi  +
mov ecx [esi+10h] +
mov eax ecx +
not eax  +
cmp eax ebx +
ja loc_402B51  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
lea edi [ecx+ebx] +
test ebx ebx +
jz loc_402BCD  +
cmp edi 0FFFFFFFEh +
jbe loc_402B68  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
cmp [esi+14h] edi +
jnb loc_402BA0  +
push ecx  +
push edi  +
mov ecx esi +
call sub_403940  +
test edi edi +
jz loc_402BCD  +
push [ebp+arg_4]  +
mov ecx esi +
push ebx  +
push dword ptr [esi+10h]  +
call sub_403340  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_402BC7  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
test edi edi +
jnz loc_402B7A  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_402BBB  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 8  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp dword ptr [esi+14h] 10h +
jnb loc_402C06  +
mov eax [esi+10h] +
add eax 1 +
jz loc_402C14  +
push eax  +
push esi  +
push edi  +
call ds:memmove  +
add esp 0Ch +
jmp loc_402C14  +
test edi edi +
jz loc_402C0E  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_402C3F  +
mov eax [esi] +
pop edi  +
pop esi  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 4  +
pop edi  +
mov byte ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
mov edi ecx +
test ebx ebx +
jz loc_402CBD  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push ebx  +
push 0  +
push 3  +
call ds:MultiByteToWideChar  +
lea esi [eax-1] +
test esi esi +
jle loc_402CBD  +
mov eax [edi] +
mov ecx 1 +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax esi +
or ecx eax +
jge loc_402C92  +
push esi  +
mov ecx edi +
call sub_403CE0  +
push esi  +
push dword ptr [edi]  +
push 0FFFFFFFFh  +
push ebx  +
push 0  +
push 3  +
call ds:MultiByteToWideChar  +
mov eax [edi] +
cmp esi [eax-8] +
jg loc_402CCD  +
mov [eax-0Ch] esi +
xor ecx ecx +
mov eax [edi] +
mov [eax+esi*2] cx +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov ecx edi +
call loc_403640  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push 80070057h  +
call loc_401220  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
push edi  +
mov edi ecx +
mov eax [eax] +
mov ecx [eax-10h] +
lea esi [eax-10h] +
mov [ebp+8] eax +
mov eax [ecx] +
call dword ptr [eax+10h]  +
cmp dword ptr [esi+0Ch] 0 +
mov ecx eax +
lea eax [esi+0Ch] +
jl loc_402D19  +
cmp ecx [esi] +
jnz loc_402D19  +
inc dword ptr [eax]  +
lea eax [esi+10h] +
mov [edi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
push ebx  +
push 2  +
push dword ptr [esi+4]  +
lea ebx [esi+4] +
call dword ptr [eax]  +
mov esi eax +
test esi esi +
jz loc_402D57  +
mov eax [ebx] +
lea ecx [esi+10h] +
mov [esi+4] eax +
mov eax [ebx] +
lea edx ds:2[eax*2] +
push edx  +
push dword ptr [ebp+8]  +
call sub_401130  +
add esp 8 +
lea eax [esi+10h] +
mov [edi] eax +
mov eax edi +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call loc_403B80  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
cmp eax 0AAAAAAAh +
jbe loc_402D76  +
call ds:_invalid_parameter_noinfo_noreturn  +
lea eax [eax+eax*2] +
shl eax 3 +
cmp eax 1000h +
jb loc_402DB5  +
test cl 1Fh +
jz loc_402D8E  +
call ds:_invalid_parameter_noinfo_noreturn  +
mov eax [ecx-4] +
cmp eax ecx +
jb loc_402D9B  +
call ds:_invalid_parameter_noinfo_noreturn  +
sub ecx eax +
cmp ecx 4 +
jnb loc_402DA8  +
call ds:_invalid_parameter_noinfo_noreturn  +
cmp ecx 23h +
jbe loc_402DB3  +
call ds:_invalid_parameter_noinfo_noreturn  +
mov ecx eax +
push ecx  +
call j_free  +
add esp 4 +
pop ebp  +
retn 8  +
***
retn   +
***
push [ebp+arg_4]  +
push ecx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_404630  +
add esp 10h +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
cmp eax 7FFFFFFFh +
jbe loc_402E16  +
call ds:_invalid_parameter_noinfo_noreturn  +
add eax eax +
cmp eax 1000h +
jb loc_402E51  +
test cl 1Fh +
jz loc_402E2A  +
call ds:_invalid_parameter_noinfo_noreturn  +
mov eax [ecx-4] +
cmp eax ecx +
jb loc_402E37  +
call ds:_invalid_parameter_noinfo_noreturn  +
sub ecx eax +
cmp ecx 4 +
jnb loc_402E44  +
call ds:_invalid_parameter_noinfo_noreturn  +
cmp ecx 23h +
jbe loc_402E4F  +
call ds:_invalid_parameter_noinfo_noreturn  +
mov ecx eax +
push ecx  +
call j_free  +
add esp 4 +
pop ebp  +
retn 8  +
***
retn   +
***
cmp [ebp+arg_4] 1000h +
mov eax [ebp+arg_0] +
jb loc_402EB0  +
test al 1Fh +
jz loc_402E89  +
call ds:_invalid_parameter_noinfo_noreturn  +
mov ecx [eax-4] +
cmp ecx eax +
jb loc_402E96  +
call ds:_invalid_parameter_noinfo_noreturn  +
sub eax ecx +
cmp eax 4 +
jnb loc_402EA3  +
call ds:_invalid_parameter_noinfo_noreturn  +
cmp eax 23h +
jbe loc_402EAE  +
call ds:_invalid_parameter_noinfo_noreturn  +
mov eax ecx +
push eax  +
call j_free  +
add esp 4 +
pop ebp  +
retn 8  +
***
retn   +
***
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
push esi  +
mov esi [ebp+arg_0] +
cmp esi 7FFFFFFEh +
jbe loc_402EFA  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
cmp [ecx+14h] esi +
jnb loc_402F12  +
push dword ptr [ecx+10h]  +
push esi  +
call sub_4036C0  +
test esi esi +
pop esi  +
setnz al  +
pop ebp  +
retn 8  +
cmp [ebp+arg_4] 0 +
jz loc_402F37  +
cmp esi 8 +
jnb loc_402F37  +
mov eax [ecx+10h] +
cmp esi eax +
cmovb eax esi +
push eax  +
push 1  +
call sub_4024D0  +
test esi esi +
pop esi  +
setnz al  +
pop ebp  +
retn 8  +
test esi esi +
jnz loc_402F4D  +
cmp dword ptr [ecx+14h] 8 +
mov [ecx+10h] esi +
jb loc_402F46  +
mov ecx [ecx] +
xor eax eax +
test esi esi +
mov [ecx] ax +
setnz al  +
pop esi  +
pop ebp  +
retn 8  +
***
cmp dword ptr [ecx+14h] 8 +
mov edx [ebp+arg_0] +
mov [ecx+10h] edx +
jb loc_402F7B  +
mov eax [ecx] +
xor ecx ecx +
mov [eax+edx*2] cx +
pop ebp  +
retn 4  +
xor eax eax +
mov [ecx+edx*2] ax +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_4] +
mov edx [ebp+arg_0] +
cmp eax 1 +
jnz loc_402FB2  +
cmp dword ptr [ecx+14h] 8 +
jb loc_402FA6  +
mov ecx [ecx] +
mov ax [ebp+arg_8] +
mov [ecx+edx*2] ax +
pop ebp  +
retn 0Ch  +
cmp dword ptr [ecx+14h] 8 +
jb loc_402FBA  +
mov ecx [ecx] +
push edi  +
lea edi [ecx+edx*2] +
test eax eax +
jz loc_402FDA  +
mov ecx eax +
mov eax dword ptr [ebp+arg_8] +
movzx edx ax +
mov eax edx +
shl edx 10h +
or eax edx +
shr ecx 1 +
stos   +
adc ecx ecx +
stos   +
pop edi  +
pop ebp  +
retn 0Ch  +
***
cmp dword ptr [ecx+14h] 8 +
jb loc_402FFA  +
mov eax [ecx+10h] +
mov edx [ecx] +
lea ecx [edx+eax*2] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop ebp  +
retn 4  +
mov eax [ecx+10h] +
mov edx ecx +
lea ecx [edx+eax*2] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_4] +
push edi  +
mov eax [ebx+10h] +
cmp eax ecx +
jnb loc_403030  +
push offset aInvalidStringP  +
call ds:?_Xout_of_range@std@@YAXPBD@Z  +
mov edi [ebp+arg_8] +
sub eax ecx +
cmp edi eax +
cmova edi eax +
cmp esi ebx +
jnz loc_403078  +
lea eax [ecx+edi] +
cmp [esi+10h] eax +
jnb loc_403051  +
push offset aInvalidStringP  +
call ds:?_Xout_of_range@std@@YAXPBD@Z  +
mov [esi+10h] eax +
cmp dword ptr [esi+14h] 8 +
jb loc_40305E  +
mov edx [esi] +
jmp loc_403060  +
mov edx esi +
xor edi edi +
push ecx  +
push edi  +
mov ecx esi +
mov [edx+eax*2] di +
call sub_403890  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
cmp edi 7FFFFFFEh +
jbe loc_40308B  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
cmp [esi+14h] edi +
jnb loc_4030B4  +
push dword ptr [esi+10h]  +
mov ecx esi +
push edi  +
call sub_4036C0  +
mov ecx [ebp+arg_4] +
test edi edi +
jz loc_403118  +
cmp dword ptr [ebx+14h] 8 +
jb loc_4030AA  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 8 +
jb loc_4030DF  +
mov edx [esi] +
jmp loc_4030E1  +
test edi edi +
jnz loc_4030A2  +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_4030D1  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
pop ebp  +
retn 0Ch  +
mov edx esi +
test edi edi +
jz loc_4030F6  +
lea eax [edi+edi] +
push eax  +
lea eax [ebx+ecx*2] +
push eax  +
push edx  +
call memcpy  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_403110  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp dword ptr [esi+14h] 8 +
jnb loc_403158  +
mov eax [esi+10h] +
add eax 1 +
jz loc_403166  +
add eax eax +
push eax  +
push esi  +
push edi  +
call ds:memmove  +
add esp 0Ch +
jmp loc_403166  +
test edi edi +
jz loc_403160  +
mov eax [esi] +
mov [edi] eax +
mov dword ptr [esi] 0 +
mov eax [esi+10h] +
mov [edi+10h] eax +
mov eax [esi+14h] +
mov [edi+14h] eax +
mov dword ptr [esi+14h] 7 +
cmp dword ptr [esi+14h] 8 +
mov dword ptr [esi+10h] 0 +
jb loc_403193  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
pop esi  +
mov [eax] cx +
pop ebp  +
retn 4  +
xor eax eax +
pop edi  +
mov [esi] ax +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_420130  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp esi [ebp+arg_0] +
jz loc_403204  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4031DB  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call sub_402E00  +
mov dword ptr [esi+14h] 7 +
cmp dword ptr [esi+14h] 8 +
mov dword ptr [esi+10h] 0 +
jb loc_4031F3  +
mov eax [esi] +
jmp loc_4031F5  +
mov eax esi +
push [ebp+arg_0]  +
xor ecx ecx +
mov [eax] cx +
mov ecx esi +
call sub_403130  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
push esi  +
test edx edx +
jz loc_403258  +
mov eax [ecx+14h] +
cmp eax 10h +
jb loc_403237  +
mov esi [ecx] +
jmp loc_403239  +
mov esi ecx +
cmp edx esi +
jb loc_403258  +
cmp eax 10h +
jb loc_403246  +
mov esi [ecx] +
jmp loc_403248  +
mov esi ecx +
mov eax [ecx+10h] +
add eax esi +
cmp eax edx +
jbe loc_403258  +
mov al 1 +
pop esi  +
pop ebp  +
retn 4  +
xor al al +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp edi 0FFFFFFFEh +
jbe loc_40327A  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
mov eax [esi+14h] +
cmp eax edi +
jnb loc_403295  +
push dword ptr [esi+10h]  +
push edi  +
call sub_403940  +
test edi edi +
pop edi  +
setnz al  +
pop esi  +
pop ebp  +
retn 8  +
cmp [ebp+arg_4] 0 +
jz loc_4032F3  +
cmp edi 10h +
jnb loc_4032F3  +
push ebx  +
mov ebx [esi+10h] +
cmp edi ebx +
cmovb ebx edi +
cmp eax 10h +
jb loc_4032D1  +
mov eax [esi] +
mov dword ptr [ebp+arg_4] eax +
test ebx ebx +
jz loc_4032C2  +
push ebx  +
push eax  +
push esi  +
call memcpy  +
add esp 0Ch +
mov eax [esi+14h] +
mov ecx esi +
inc eax  +
push eax  +
push dword ptr [ebp+arg_4]  +
call sub_402E70  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] ebx +
jb loc_4032E3  +
mov esi [esi] +
mov byte ptr [esi+ebx] 0 +
test edi edi +
pop ebx  +
pop edi  +
setnz al  +
pop esi  +
pop ebp  +
retn 8  +
test edi edi +
jnz loc_403306  +
mov [esi+10h] edi +
cmp eax 10h +
jb loc_403301  +
mov esi [esi] +
mov byte ptr [esi] 0 +
test edi edi +
pop edi  +
setnz al  +
pop esi  +
pop ebp  +
retn 8  +
***
cmp dword ptr [ecx+14h] 10h +
mov edx [ebp+arg_0] +
mov [ecx+10h] edx +
jb loc_403329  +
mov eax [ecx] +
mov byte ptr [eax+edx] 0 +
pop ebp  +
retn 4  +
mov byte ptr [ecx+edx] 0 +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_4] +
mov edx [ebp+arg_0] +
cmp eax 1 +
jnz loc_403360  +
cmp dword ptr [ecx+14h] 10h +
jb loc_403356  +
mov ecx [ecx] +
mov al [ebp+arg_8] +
mov [ecx+edx] al +
pop ebp  +
retn 0Ch  +
cmp dword ptr [ecx+14h] 10h +
jb loc_403368  +
mov ecx [ecx] +
push eax  +
movsx eax [ebp+arg_8] +
push eax  +
lea eax [ecx+edx] +
push eax  +
call memset  +
add esp 0Ch +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
push edi  +
mov edi [esi+10h] +
cmp edi ecx +
jnb loc_40339C  +
push offset aInvalidStringP  +
call ds:?_Xout_of_range@std@@YAXPBD@Z  +
mov edx [ebp+arg_4] +
mov eax edi +
sub eax ecx +
cmp eax edx +
ja loc_4033CA  +
mov [esi+10h] ecx +
cmp dword ptr [esi+14h] 10h +
jb loc_4033BE  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax+ecx] 0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
mov eax esi +
pop edi  +
pop esi  +
mov byte ptr [eax+ecx] 0 +
pop ebp  +
retn 8  +
test edx edx +
jz loc_403413  +
cmp dword ptr [esi+14h] 10h +
jb loc_4033D8  +
mov eax [esi] +
jmp loc_4033DA  +
mov eax esi +
sub edi edx +
push ebx  +
lea ebx [eax+ecx] +
mov eax edi +
sub eax ecx +
jz loc_4033F5  +
push eax  +
lea eax [ebx+edx] +
push eax  +
push ebx  +
call ds:memmove  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
pop ebx  +
jb loc_40340D  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_420130  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp esi [ebp+arg_0] +
jz loc_403482  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_40345B  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call sub_402E70  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_403473  +
mov eax [esi] +
jmp loc_403475  +
mov eax esi +
push [ebp+arg_0]  +
mov ecx esi +
mov byte ptr [eax] 0 +
call sub_402BE0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
mov ecx [esi] +
mov eax [ecx] +
call dword ptr [eax+10h]  +
cmp dword ptr [esi+0Ch] 0 +
mov ecx eax +
lea eax [esi+0Ch] +
jl loc_4034C9  +
cmp ecx [esi] +
jnz loc_4034C9  +
mov edi esi +
inc dword ptr [eax]  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov eax [ecx] +
push 2  +
push dword ptr [esi+4]  +
call dword ptr [eax]  +
mov edi eax +
test edi edi +
jz loc_4034FE  +
mov eax [esi+4] +
lea ecx [edi+10h] +
mov [edi+4] eax +
mov eax [esi+4] +
lea edx ds:2[eax*2] +
push edx  +
lea eax [esi+10h] +
push eax  +
call sub_401130  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
call loc_403B80  +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi ecx +
test esi esi +
jnz loc_403529  +
call loc_403640  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edx [ebp+8] +
test edx edx +
jz loc_4035A4  +
mov eax [edi] +
push ebx  +
mov ebx edx +
sub ebx eax +
mov ecx [eax-0Ch] +
sar ebx 1 +
mov [ebp+0Ch] ecx +
test esi esi +
js loc_4035AE  +
mov ecx 1 +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax esi +
or ecx eax +
jge loc_40355F  +
push esi  +
mov ecx edi +
call sub_403CE0  +
mov edx [ebp+8] +
mov ecx [edi] +
cmp ebx [ebp+0Ch] +
ja loc_403579  +
push esi  +
lea eax [ecx+ebx*2] +
push eax  +
push dword ptr [ecx-8]  +
push ecx  +
call sub_403BC0  +
add esp 10h +
jmp loc_40358B  +
lea eax [esi+esi] +
push eax  +
push edx  +
mov edx [ecx-8] +
add edx edx +
call sub_401130  +
add esp 8 +
mov eax [edi] +
pop ebx  +
cmp esi [eax-8] +
jg loc_4035A4  +
mov [eax-0Ch] esi +
xor ecx ecx +
mov eax [edi] +
pop edi  +
mov [eax+esi*2] cx +
pop esi  +
pop ebp  +
retn 8  +
***
push 80070057h  +
call loc_401220  +
push 80070057h  +
call loc_401220  +
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
test edx edx +
js loc_4035E0  +
mov eax [ecx] +
cmp edx [eax-8] +
jg loc_4035E0  +
mov [eax-0Ch] edx +
mov eax [ecx] +
xor ecx ecx +
mov [eax+edx*2] cx +
pop ebp  +
retn 4  +
***
push 80070057h  +
call loc_401220  +
mov eax [eax-0Ch] +
retn   +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
push esi  +
mov esi ecx +
test edx edx +
js loc_40362F  +
mov eax [esi] +
mov ecx 1 +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax edx +
or ecx eax +
jge loc_403628  +
push edx  +
mov ecx esi +
call sub_403CE0  +
mov eax [esi] +
pop esi  +
pop ebp  +
retn 4  +
***
push 80070057h  +
call loc_401220  +
push esi  +
mov esi ecx +
push edi  +
mov eax [esi] +
cmp dword ptr [eax-0Ch] 0 +
lea edx [eax-10h] +
mov edi [edx] +
jz loc_403691  +
cmp dword ptr [edx+0Ch] 0 +
lea ecx [edx+0Ch] +
jge loc_403671  +
cmp dword ptr [eax-8] 0 +
jl loc_403694  +
mov dword ptr [eax-0Ch] 0 +
xor ecx ecx +
mov eax [esi] +
pop edi  +
pop esi  +
mov [eax] cx +
retn   +
***
or eax 0FFFFFFFFh +
xadd [ecx] eax +
dec eax  +
test eax eax +
jg loc_403685  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [esi] eax +
pop edi  +
pop esi  +
retn   +
***
push 80070057h  +
call loc_401220  +
mov eax [ecx+10h] +
cmp eax [ebp+arg_0] +
jnb loc_4036B6  +
push offset aInvalidStringP  +
call ds:?_Xout_of_range@std@@YAXPBD@Z  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4202A0  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [ebp+arg_0] +
mov edi eax +
or edi 7 +
cmp edi 7FFFFFFEh +
jbe loc_403704  +
mov edi eax +
jmp loc_40372B  +
mov ebx [esi+14h] +
mov eax 0AAAAAAABh +
mul  edi +
mov ecx ebx +
shr ecx 1 +
shr edx 1 +
cmp ecx edx +
jbe loc_40372B  +
mov eax 7FFFFFFEh +
lea edi [ecx+ebx] +
sub eax ecx +
cmp ebx eax +
jbe loc_40372B  +
mov edi 7FFFFFFEh +
lea eax [edi+1] +
mov [ebp+var_4] 0 +
test eax eax +
jnz loc_40373D  +
xor ebx ebx +
jmp loc_4037AA  +
cmp eax 7FFFFFFFh +
jbe loc_40374A  +
call ds:?_Xbad_alloc@std@@YAXXZ  +
add eax eax +
cmp eax 1000h +
jb loc_403774  +
lea ecx [eax+23h] +
cmp ecx eax +
ja loc_403760  +
call ds:?_Xbad_alloc@std@@YAXXZ  +
push ecx  +
call sub_41EC6C  +
add esp 4 +
lea ebx [eax+23h] +
and ebx 0FFFFFFE0h +
mov [ebx-4] eax +
jmp loc_4037AA  +
push eax  +
call sub_41EC6C  +
add esp 4 +
mov ebx eax +
jmp loc_4037AA  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_14] +
mov [ebp+arg_0] eax +
inc eax  +
mov [ebp+var_10] esp +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_403C30  +
mov [ebp+var_18] eax +
mov eax offset loc_4037A1 +
retn   +
mov esi [ebp-14h] +
mov edi [ebp+8] +
mov ebx [ebp-18h] +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_4037CE  +
cmp dword ptr [esi+14h] 8 +
jb loc_4037BB  +
mov ecx [esi] +
jmp loc_4037BD  +
mov ecx esi +
test eax eax +
jz loc_4037CE  +
add eax eax +
push eax  +
push ecx  +
push ebx  +
call memcpy  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4037E1  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call sub_402E00  +
mov dword ptr [esi+14h] 7 +
cmp dword ptr [esi+14h] 8 +
mov dword ptr [esi+10h] 0 +
jb loc_4037F9  +
mov eax [esi] +
jmp loc_4037FB  +
mov eax esi +
xor ecx ecx +
mov [eax] cx +
mov eax [ebp+arg_4] +
mov [esi] ebx +
mov [esi+14h] edi +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] eax +
jb loc_403813  +
mov esi ebx +
xor ecx ecx +
mov [esi+eax*2] cx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx+10h] +
sub eax [ebp+arg_0] +
cmp [ebp+arg_4] eax +
cmovbe eax [ebp+arg_4] +
pop ebp  +
retn 8  +
***
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
push edi  +
mov edi [esi+10h] +
cmp edi ecx +
jnb loc_4038AC  +
push offset aInvalidStringP  +
call ds:?_Xout_of_range@std@@YAXPBD@Z  +
mov edx [ebp+arg_4] +
mov eax edi +
sub eax ecx +
cmp eax edx +
ja loc_4038DE  +
mov [esi+10h] ecx +
cmp dword ptr [esi+14h] 8 +
jb loc_4038D0  +
mov eax [esi] +
xor edx edx +
pop edi  +
mov [eax+ecx*2] dx +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
mov eax esi +
xor edx edx +
pop edi  +
pop esi  +
mov [eax+ecx*2] dx +
pop ebp  +
retn 8  +
test edx edx +
jz loc_40392D  +
cmp dword ptr [esi+14h] 8 +
jb loc_4038EC  +
mov eax [esi] +
jmp loc_4038EE  +
mov eax esi +
sub edi edx +
push ebx  +
lea ebx [eax+ecx*2] +
mov eax edi +
sub eax ecx +
jz loc_40390B  +
add eax eax +
push eax  +
lea eax [ebx+edx*2] +
push eax  +
push ebx  +
call ds:memmove  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
pop ebx  +
jb loc_403925  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4202C0  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov esi ecx +
mov [ebp+var_14] esi +
mov eax [ebp+arg_0] +
mov edi eax +
or edi 0Fh +
cmp edi 0FFFFFFFEh +
jbe loc_403981  +
mov edi eax +
jmp loc_4039A8  +
mov ebx [esi+14h] +
mov eax 0AAAAAAABh +
mul  edi +
mov ecx ebx +
shr ecx 1 +
shr edx 1 +
cmp ecx edx +
jbe loc_4039A8  +
mov eax 0FFFFFFFEh +
lea edi [ecx+ebx] +
sub eax ecx +
cmp ebx eax +
jbe loc_4039A8  +
mov edi 0FFFFFFFEh +
lea eax [edi+1] +
mov [ebp+var_4] 0 +
test eax eax +
jnz loc_4039BA  +
xor ebx ebx +
jmp loc_403A18  +
cmp eax 1000h +
jb loc_4039E2  +
lea ecx [eax+23h] +
cmp ecx eax +
ja loc_4039CE  +
call ds:?_Xbad_alloc@std@@YAXXZ  +
push ecx  +
call sub_41EC6C  +
add esp 4 +
lea ebx [eax+23h] +
and ebx 0FFFFFFE0h +
mov [ebx-4] eax +
jmp loc_403A18  +
push eax  +
call sub_41EC6C  +
add esp 4 +
mov ebx eax +
jmp loc_403A18  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_14] +
mov [ebp+arg_0] eax +
inc eax  +
mov [ebp+var_10] esp +
push eax  +
mov byte ptr [ebp+var_4] 2 +
call sub_403C90  +
mov [ebp+var_18] eax +
mov eax offset loc_403A0F +
retn   +
mov esi [ebp-14h] +
mov edi [ebp+8] +
mov ebx [ebp-18h] +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_403A3A  +
cmp dword ptr [esi+14h] 10h +
jb loc_403A29  +
mov ecx [esi] +
jmp loc_403A2B  +
mov ecx esi +
test eax eax +
jz loc_403A3A  +
push eax  +
push ecx  +
push ebx  +
call memcpy  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_403A4D  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call sub_402E70  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_403A65  +
mov eax [esi] +
jmp loc_403A67  +
mov eax esi +
mov byte ptr [eax] 0 +
mov eax [ebp+arg_4] +
mov [esi] ebx +
mov [esi+14h] edi +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] eax +
jb loc_403A7D  +
mov esi ebx +
mov byte ptr [esi+eax] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi [ebp+0Ch] +
mov eax esi +
push edi  +
shr eax 4 +
mov edi ecx +
inc eax  +
push 6  +
movzx eax ax +
push eax  +
push ebx  +
call ds:FindResourceW  +
test eax eax +
jz loc_403B6A  +
push esi  +
push eax  +
push ebx  +
call loc_401310  +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
jz loc_403B6A  +
mov eax [edi] +
mov ecx 1 +
movzx esi word ptr [ebx] +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax esi +
or ecx eax +
jge loc_403B34  +
push esi  +
mov ecx edi +
call sub_403CE0  +
movzx ecx word ptr [ebx] +
lea eax [ebx+2] +
push ecx  +
push eax  +
push esi  +
push dword ptr [edi]  +
call ds:wmemcpy_s  +
push eax  +
call loc_401240  +
mov ecx [edi] +
add esp 14h +
cmp esi [ecx-8] +
jg loc_403B73  +
mov [ecx-0Ch] esi +
xor edx edx +
mov ecx [edi] +
pop edi  +
lea eax [edx+1] +
mov [ecx+esi*2] dx +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 8  +
***
push 80070057h  +
call loc_401220  +
push 8007000Eh  +
call loc_401220  +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_403B9C  +
pop ebp  +
retn   +
lea edx [eax+2] +
nop   +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_403BA0  +
sub eax edx +
sar eax 1 +
pop ebp  +
retn   +
***
mov eax [ebp+arg_C] +
lea ecx [eax+eax] +
test ecx ecx +
jz loc_403C2A  +
mov edx [ebp+arg_0] +
test edx edx +
jnz loc_403BE7  +
call ds:_errno  +
mov dword ptr [eax] 16h +
pop ebp  +
jmp ds:_invalid_parameter_noinfo  +
cmp [ebp+arg_8] 0 +
jnz loc_403C00  +
call ds:_errno  +
mov dword ptr [eax] 16h +
pop ebp  +
jmp ds:_invalid_parameter_noinfo  +
mov eax [ebp+arg_4] +
add eax eax +
cmp eax ecx +
jnb loc_403C1C  +
call ds:_errno  +
mov dword ptr [eax] 22h +
pop ebp  +
jmp ds:_invalid_parameter_noinfo  +
push ecx  +
push [ebp+arg_8]  +
push edx  +
call ds:memmove  +
add esp 0Ch +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_403C42  +
xor ecx ecx +
mov eax ecx +
pop ebp  +
retn 4  +
cmp eax 7FFFFFFFh +
jbe loc_403C4F  +
call ds:?_Xbad_alloc@std@@YAXXZ  +
add eax eax +
cmp eax 1000h +
jb loc_403C7D  +
lea ecx [eax+23h] +
cmp ecx eax +
ja loc_403C65  +
call ds:?_Xbad_alloc@std@@YAXXZ  +
push ecx  +
call sub_41EC6C  +
add esp 4 +
lea ecx [eax+23h] +
and ecx 0FFFFFFE0h +
mov [ecx-4] eax +
mov eax ecx +
pop ebp  +
retn 4  +
push eax  +
call sub_41EC6C  +
add esp 4 +
mov ecx eax +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_403CA2  +
xor ecx ecx +
mov eax ecx +
pop ebp  +
retn 4  +
cmp eax 1000h +
jb loc_403CCE  +
lea ecx [eax+23h] +
cmp ecx eax +
ja loc_403CB6  +
call ds:?_Xbad_alloc@std@@YAXXZ  +
push ecx  +
call sub_41EC6C  +
add esp 4 +
lea ecx [eax+23h] +
and ecx 0FFFFFFE0h +
mov [ecx-4] eax +
mov eax ecx +
pop ebp  +
retn 4  +
push eax  +
call sub_41EC6C  +
add esp 4 +
mov ecx eax +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx [edi] +
cmp [ecx-0Ch] esi +
cmovg esi [ecx-0Ch] +
cmp dword ptr [ecx-4] 1 +
jle loc_403D07  +
push esi  +
mov ecx edi +
call sub_403D80  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov ecx [ecx-8] +
cmp ecx esi +
jge loc_403D33  +
cmp ecx 40000000h +
jle loc_403D1D  +
mov eax 100000h +
jmp loc_403D24  +
mov eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
add ecx eax +
cmp ecx esi +
cmovl ecx esi +
push ecx  +
mov ecx edi +
call loc_403D40  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
mov edx [edi] +
sub edx 10h +
mov ecx [edx] +
cmp [edx+8] esi +
jge loc_403D72  +
test esi esi +
jle loc_403D72  +
mov eax [ecx] +
push 2  +
push esi  +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_403D72  +
add eax 10h +
mov [edi] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call loc_403B80  +
sub esp 8 +
push 0FFFFFFFFh  +
push offset loc_4202E9  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx [ebp+arg_0] +
lea ecx [ebp+var_14] +
push 0  +
call ds:??0_Lockit@std@@QAE@H@Z  +
mov [ebp+var_4] 0 +
mov eax dword_431458 +
mov ecx ds:?id@?$ctype@_W@std@@2V0locale@2@A +
mov [ebp+var_18] eax +
call ds:??Bid@locale@std@@QAEIXZ  +
mov edi eax +
mov eax [ebx+4] +
cmp edi [eax+0Ch] +
jnb loc_403E6A  +
mov ecx [eax+8] +
mov esi [ecx+edi*4] +
test esi esi +
jnz loc_403EDE  +
jmp loc_403E6C  +
xor esi esi +
cmp byte ptr [eax+14h] 0 +
jz loc_403E83  +
call ds:?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ  +
cmp edi [eax+0Ch] +
jnb loc_403E87  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_403EDE  +
mov esi [ebp+var_18] +
test esi esi +
jnz loc_403EDE  +
lea eax [ebp+var_18] +
push ebx  +
push eax  +
call ds:?_Getcat@?$ctype@_W@std@@SAIPAPBVfacet@locale@2@PBV42@@Z  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_403EC5  +
xorps xmm0 xmm0 +
mov [ebp+var_24] offset off_424C44 +
push offset unk_42C820  +
lea eax [ebp+var_24] +
movq [ebp+var_20] xmm0 +
push eax  +
mov dword ptr [ebp+var_20] offset aBadCast +
call _CxxThrowException  +
mov esi [ebp+var_18] +
mov ecx esi +
mov dword_431458 esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_41EAD9  +
add esp 4 +
lea ecx [ebp+var_14] +
call ds:??1_Lockit@std@@QAE@XZ  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
mov dword ptr [ecx+10h] 0 +
mov eax ecx +
mov dword ptr [ecx+14h] 0 +
retn 4  +
***
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_403F61  +
mov eax [ebp+arg_4] +
mov eax [eax] +
mov [ecx] eax +
pop ebp  +
retn 8  +
***
retn   +
***
push esi  +
mov esi ecx +
xorps xmm0 xmm0 +
lea eax [esi+4] +
push eax  +
mov dword ptr [esi] offset off_424C38 +
movq qword ptr [eax] xmm0 +
mov eax [ebp+arg_0] +
add eax 4 +
push eax  +
call ds:__std_exception_copy  +
add esp 8 +
mov dword ptr [esi] offset off_424C44 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx+10h] 0 +
mov eax ecx +
mov dword ptr [ecx+14h] 0 +
retn   +
***
mov eax [ecx] +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi ecx +
test ebx ebx +
jz loc_404051  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_40400D  +
mov eax [esi] +
jmp loc_40400F  +
mov eax esi +
cmp ebx eax +
jb loc_404051  +
cmp ecx 8 +
jb loc_40401C  +
mov edx [esi] +
jmp loc_40401E  +
mov edx esi +
mov eax [esi+10h] +
lea eax [edx+eax*2] +
cmp eax ebx +
jbe loc_404051  +
cmp ecx 8 +
jb loc_404031  +
mov eax [esi] +
jmp loc_404033  +
mov eax esi +
push [ebp+arg_C]  +
sub ebx eax +
mov ecx esi +
sar ebx 1 +
push ebx  +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_404210  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov eax [ebp+arg_0] +
push edi  +
mov edi [esi+10h] +
cmp edi eax +
jnb loc_404067  +
push offset aInvalidStringP  +
call ds:?_Xout_of_range@std@@YAXPBD@Z  +
mov ecx [ebp+arg_4] +
mov edx edi +
sub edx eax +
mov eax [ebp+arg_C] +
cmp ecx edx +
not eax  +
cmova ecx edx +
sub edi ecx +
mov [ebp+var_8] ecx +
cmp eax edi +
ja loc_40408C  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
mov edi [ebp+arg_C] +
sub edx ecx +
mov [ebp+var_C] edx +
cmp edi ecx +
jnb loc_4040E7  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4040AA  +
mov ebx [esi] +
mov [ebp+arg_4] ebx +
mov ebx [ebp+arg_8] +
jmp loc_4040AD  +
mov [ebp+arg_4] esi +
cmp eax 8 +
jb loc_4040B9  +
mov eax [esi] +
mov [ebp+var_4] eax +
jmp loc_4040BC  +
mov [ebp+var_4] esi +
test edx edx +
jz loc_4040E7  +
lea eax [edx+edx] +
mov edx [ebp+arg_0] +
push eax  +
lea eax [edx+ecx] +
mov ecx [ebp+arg_4] +
lea eax [ecx+eax*2] +
mov ecx [ebp+var_4] +
push eax  +
lea eax [edx+edi] +
lea eax [ecx+eax*2] +
push eax  +
call ds:memmove  +
mov ecx [ebp+var_8] +
add esp 0Ch +
mov eax [esi+10h] +
mov edi eax +
mov edx [ebp+arg_C] +
sub edi ecx +
add edi edx +
test edx edx +
jnz loc_4040FF  +
test ecx ecx +
jz loc_4041FF  +
cmp edi 7FFFFFFEh +
jbe loc_404112  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
cmp [esi+14h] edi +
jnb loc_404148  +
push eax  +
push edi  +
mov ecx esi +
call sub_4036C0  +
mov ecx [ebp+var_8] +
mov edx [ebp+arg_C] +
test edi edi +
jz loc_4041FF  +
cmp ecx edx +
jnb loc_4041B7  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_404177  +
mov ebx [esi] +
mov [ebp+arg_4] ebx +
mov ebx [ebp+arg_8] +
jmp loc_40417A  +
test edi edi +
jnz loc_40412E  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 8 +
jb loc_404167  +
mov eax [esi] +
xor ecx ecx +
pop edi  +
mov [eax] cx +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov eax esi +
xor ecx ecx +
pop edi  +
pop esi  +
pop ebx  +
mov [eax] cx +
mov esp ebp +
pop ebp  +
retn 10h  +
mov [ebp+arg_4] esi +
cmp eax 8 +
jb loc_404186  +
mov eax [esi] +
mov [ebp+arg_8] eax +
jmp loc_404189  +
mov [ebp+arg_8] esi +
mov eax [ebp+var_C] +
test eax eax +
jz loc_4041B7  +
add eax eax +
push eax  +
mov eax [ebp+arg_0] +
add eax ecx +
mov ecx [ebp+arg_4] +
lea eax [ecx+eax*2] +
mov ecx [ebp+arg_8] +
push eax  +
mov eax [ebp+arg_0] +
add eax edx +
lea eax [ecx+eax*2] +
push eax  +
call ds:memmove  +
mov edx [ebp+arg_C] +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
jb loc_4041C1  +
mov ecx [esi] +
jmp loc_4041C3  +
mov ecx esi +
test edx edx +
jz loc_4041DB  +
lea eax [edx+edx] +
push eax  +
mov eax [ebp+arg_0] +
push ebx  +
lea eax [ecx+eax*2] +
push eax  +
call memcpy  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov [esi+10h] edi +
jb loc_4041F7  +
mov eax [esi] +
xor ecx ecx +
mov [eax+edi*2] cx +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov eax esi +
xor ecx ecx +
mov [eax+edi*2] cx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
mov edx [ebp+arg_0] +
sub esp 8 +
push esi  +
mov esi ecx +
mov ecx [esi+10h] +
cmp ecx edx +
jnb loc_40422E  +
push offset aInvalidStringP  +
call ds:?_Xout_of_range@std@@YAXPBD@Z  +
push ebx  +
push edi  +
mov edi [ebp+arg_8] +
mov eax [edi+10h] +
cmp eax [ebp+arg_C] +
jnb loc_404246  +
push offset aInvalidStringP  +
call ds:?_Xout_of_range@std@@YAXPBD@Z  +
mov edi [ebp+arg_4] +
mov ebx ecx +
sub ebx edx +
cmp edi ebx +
mov [ebp+var_4] ebx +
cmova edi ebx +
sub eax [ebp+arg_C] +
mov ebx [ebp+arg_10] +
cmp ebx eax +
mov [ebp+arg_4] edi +
cmova ebx eax +
mov eax ecx +
sub eax edi +
mov edi [ebp+arg_8] +
mov [ebp+arg_10] eax +
mov eax ebx +
not eax  +
cmp eax [ebp+arg_10] +
ja loc_404281  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
mov edx [ebp+arg_10] +
mov eax [ebp+var_4] +
add edx ebx +
sub eax [ebp+arg_4] +
cmp ecx edx +
mov [ebp+arg_10] edx +
mov edx [ebp+arg_0] +
mov [ebp+var_4] eax +
jnb loc_4042E9  +
cmp [ebp+arg_10] 7FFFFFFEh +
jbe loc_4042AD  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
mov edi [ebp+arg_10] +
cmp [esi+14h] edi +
mov edi [ebp+arg_8] +
jnb loc_4042C8  +
push ecx  +
push [ebp+arg_10]  +
mov ecx esi +
call sub_4036C0  +
mov eax [ebp+var_4] +
jmp loc_4042E6  +
cmp [ebp+arg_10] 0 +
jnz loc_4042E9  +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 8 +
jb loc_4042DF  +
mov ecx [esi] +
jmp loc_4042E1  +
mov ecx esi +
xor edx edx +
mov [ecx] dx +
mov edx [ebp+arg_0] +
mov ecx [ebp+arg_4] +
cmp ebx ecx +
jnz loc_40431F  +
cmp dword ptr [edi+14h] 8 +
jb loc_4042F8  +
mov edi [edi] +
cmp dword ptr [esi+14h] 8 +
jb loc_404302  +
mov ecx [esi] +
jmp loc_404304  +
mov ecx esi +
test ebx ebx +
jz loc_4045F8  +
lea eax [ebx+ebx] +
push eax  +
mov eax [ebp+arg_C] +
lea eax [edi+eax*2] +
push eax  +
lea eax [ecx+edx*2] +
jmp loc_4045EE  +
cmp esi edi +
jz loc_4043A8  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_404339  +
mov edi [esi] +
mov [ebp+var_4] edi +
mov edi [ebp+arg_8] +
jmp loc_40433F  +
mov edx [ebp+arg_0] +
mov [ebp+var_4] esi +
cmp ecx 8 +
jb loc_404348  +
mov ecx [esi] +
jmp loc_40434A  +
mov ecx esi +
test eax eax +
jz loc_404370  +
mov edi [ebp+var_4] +
add eax eax +
push eax  +
mov eax [ebp+arg_4] +
add eax edx +
lea eax [edi+eax*2] +
push eax  +
lea eax [edx+ebx] +
lea eax [ecx+eax*2] +
push eax  +
call ds:memmove  +
mov edi [ebp+arg_8] +
add esp 0Ch +
cmp dword ptr [edi+14h] 8 +
jb loc_404378  +
mov edi [edi] +
cmp dword ptr [esi+14h] 8 +
jb loc_404382  +
mov edx [esi] +
jmp loc_404384  +
mov edx esi +
test ebx ebx +
jz loc_4045F8  +
mov ecx [ebp+arg_0] +
lea eax [ebx+ebx] +
push eax  +
mov eax [ebp+arg_C] +
lea eax [edi+eax*2] +
push eax  +
lea eax [edx+ecx*2] +
push eax  +
call memcpy  +
jmp loc_4045F5  +
cmp ebx ecx +
jnb loc_40441F  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4043B8  +
mov edi [esi] +
jmp loc_4043BA  +
mov edi esi +
cmp eax 8 +
jb loc_4043C3  +
mov ecx [esi] +
jmp loc_4043C5  +
mov ecx esi +
test ebx ebx +
jz loc_4043E1  +
lea eax [ebx+ebx] +
push eax  +
mov eax [ebp+arg_C] +
lea eax [edi+eax*2] +
push eax  +
lea eax [ecx+edx*2] +
push eax  +
call ds:memmove  +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4043ED  +
mov edi [esi] +
jmp loc_4043EF  +
mov edi esi +
cmp eax 8 +
jb loc_4043F8  +
mov edx [esi] +
jmp loc_4043FA  +
mov edx esi +
mov eax [ebp+var_4] +
test eax eax +
jz loc_4045F8  +
mov ecx [ebp+arg_0] +
add eax eax +
push eax  +
mov eax [ebp+arg_4] +
add eax ecx +
lea eax [edi+eax*2] +
push eax  +
lea eax [ecx+ebx] +
lea eax [edx+eax*2] +
jmp loc_4045EE  +
mov edi [ebp+arg_C] +
cmp edi edx +
ja loc_4044AB  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_40443C  +
mov edi [esi] +
mov [ebp+arg_8] edi +
mov edi [ebp+arg_C] +
jmp loc_40443F  +
mov [ebp+arg_8] esi +
cmp ecx 8 +
jb loc_404448  +
mov ecx [esi] +
jmp loc_40444A  +
mov ecx esi +
test eax eax +
jz loc_404473  +
mov edi [ebp+arg_8] +
add eax eax +
push eax  +
mov eax [ebp+arg_4] +
add eax edx +
lea eax [edi+eax*2] +
push eax  +
lea eax [edx+ebx] +
lea eax [ecx+eax*2] +
push eax  +
call ds:memmove  +
mov edx [ebp+arg_0] +
add esp 0Ch +
mov edi [ebp+arg_C] +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_404482  +
mov ecx [esi] +
mov [ebp+arg_C] ecx +
jmp loc_404485  +
mov [ebp+arg_C] esi +
cmp eax 8 +
jb loc_40448E  +
mov ecx [esi] +
jmp loc_404490  +
mov ecx esi +
test ebx ebx +
jz loc_4045F8  +
lea eax [ebx+ebx] +
push eax  +
mov eax [ebp+arg_C] +
lea eax [eax+edi*2] +
push eax  +
lea eax [ecx+edx*2] +
jmp loc_4045EE  +
add ecx edx +
mov [ebp+arg_8] ecx +
cmp ecx edi +
ja loc_40453C  +
mov ecx [esi+14h] +
cmp ecx 8 +
jb loc_4044CA  +
mov edi [esi] +
mov [ebp+var_4] edi +
mov edi [ebp+arg_C] +
jmp loc_4044CD  +
mov [ebp+var_4] esi +
cmp ecx 8 +
jb loc_4044D6  +
mov ecx [esi] +
jmp loc_4044D8  +
mov ecx esi +
test eax eax +
jz loc_4044FF  +
mov edi [ebp+arg_8] +
add eax eax +
push eax  +
mov eax [ebp+var_4] +
lea eax [eax+edi*2] +
push eax  +
lea eax [edx+ebx] +
lea eax [ecx+eax*2] +
push eax  +
call ds:memmove  +
mov edx [ebp+arg_0] +
add esp 0Ch +
mov edi [ebp+arg_C] +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40450E  +
mov ecx [esi] +
mov [ebp+arg_C] ecx +
jmp loc_404511  +
mov [ebp+arg_C] esi +
cmp eax 8 +
jb loc_40451A  +
mov ecx [esi] +
jmp loc_40451C  +
mov ecx esi +
test ebx ebx +
jz loc_4045F8  +
sub edi [ebp+arg_4] +
lea eax [ebx+ebx] +
push eax  +
mov eax [ebp+arg_C] +
add edi ebx +
lea eax [eax+edi*2] +
push eax  +
lea eax [ecx+edx*2] +
jmp loc_4045EE  +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_40454B  +
mov ecx [esi] +
mov [ebp+var_8] ecx +
jmp loc_40454E  +
mov [ebp+var_8] esi +
cmp eax 8 +
jb loc_404557  +
mov ecx [esi] +
jmp loc_404559  +
mov ecx esi +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_40457A  +
add eax eax +
push eax  +
mov eax [ebp+var_8] +
lea eax [eax+edi*2] +
push eax  +
lea eax [ecx+edx*2] +
push eax  +
call ds:memmove  +
mov edx [ebp+arg_0] +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_404589  +
mov ecx [esi] +
mov [ebp+arg_0] ecx +
jmp loc_40458C  +
mov [ebp+arg_0] esi +
cmp eax 8 +
jb loc_404595  +
mov ecx [esi] +
jmp loc_404597  +
mov ecx esi +
mov eax [ebp+var_4] +
test eax eax +
jz loc_4045BE  +
mov edi [ebp+arg_8] +
add eax eax +
push eax  +
mov eax [ebp+arg_0] +
lea eax [eax+edi*2] +
push eax  +
lea eax [edx+ebx] +
lea eax [ecx+eax*2] +
push eax  +
call ds:memmove  +
mov edi [ebp+arg_C] +
add esp 0Ch +
mov eax [esi+14h] +
cmp eax 8 +
jb loc_4045CA  +
mov edx [esi] +
jmp loc_4045CC  +
mov edx esi +
cmp eax 8 +
jb loc_4045D5  +
mov ecx [esi] +
jmp loc_4045D7  +
mov ecx esi +
mov eax ebx +
sub eax [ebp+arg_4] +
jz loc_4045F8  +
add eax eax +
push eax  +
lea eax [edi+ebx] +
lea eax [edx+eax*2] +
push eax  +
mov eax [ebp+arg_8] +
lea eax [ecx+eax*2] +
push eax  +
call ds:memmove  +
add esp 0Ch +
cmp dword ptr [esi+14h] 8 +
mov ecx [ebp+arg_10] +
pop edi  +
mov [esi+10h] ecx +
pop ebx  +
jb loc_404617  +
mov eax [esi] +
xor edx edx +
mov [eax+ecx*2] dx +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 14h  +
mov eax esi +
xor edx edx +
pop esi  +
mov [eax+ecx*2] dx +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
cmp esi edi +
jz loc_404677  +
nop   +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_404653  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call sub_402E70  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_40466B  +
mov eax [esi] +
jmp loc_40466D  +
mov eax esi +
add esi 18h +
mov byte ptr [eax] 0 +
cmp esi edi +
jnz loc_404640  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
retn   +
***
mov eax [ebp+arg_0] +
mov cx [eax] +
mov eax [ebp+arg_4] +
cmp cx [eax] +
setz al  +
pop ebp  +
retn   +
***
retn   +
***
mov eax [ebp+arg_0] +
mov ecx [eax+14h] +
and ecx 0FFFFF9FFh +
or ecx 800h +
mov [eax+14h] ecx +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi ecx +
push edi  +
mov edi edx +
cmp dword ptr [esi+14h] 10h +
jb loc_4046FE  +
mov esi [esi] +
call ds:_errno  +
push 0Ah  +
mov dword ptr [eax] 0 +
lea eax [ebp-8] +
push eax  +
push esi  +
call ds:strtol  +
add esp 0Ch +
mov [ebp-0Ch] eax +
cmp esi [ebp-8] +
jnz loc_40472D  +
push offset aInvalidStoiArg  +
call ds:?_Xinvalid_argument@std@@YAXPBD@Z  +
call ds:_errno  +
cmp dword ptr [eax] 22h +
jz loc_404756  +
test edi edi +
jz loc_404743  +
mov eax [ebp-8] +
sub eax esi +
mov [edi] eax +
mov ecx [ebp-4] +
mov eax [ebp-0Ch] +
xor ecx ebp +
pop edi  +
pop esi  +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset aStoiArgumentOu  +
call ds:?_Xout_of_range@std@@YAXPBD@Z  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_4047FD  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_4047C3  +
call ds:_errno  +
mov dword ptr [eax] 16h +
call ds:_invalid_parameter_noinfo  +
mov eax 16h +
push eax  +
call loc_401240  +
add esp 4 +
pop ebp  +
retn   +
mov edx [ebp+arg_8] +
test edx edx +
jz loc_4047A1  +
cmp [ebp+arg_4] eax +
jnb loc_4047F1  +
call ds:_errno  +
mov dword ptr [eax] 22h +
call ds:_invalid_parameter_noinfo  +
mov eax 22h +
push eax  +
call loc_401240  +
add esp 4 +
pop ebp  +
retn   +
push eax  +
push edx  +
push ecx  +
call ds:memmove  +
add esp 0Ch +
xor eax eax +
push eax  +
call loc_401240  +
add esp 4 +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
test eax eax +
jz loc_404823  +
cmp byte ptr [eax] 0 +
jz loc_404823  +
xor al al +
pop ebp  +
retn   +
mov al 1 +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_420320  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov [ebp+var_4] 1 +
or edi 0FFFFFFFFh +
mov ecx [eax] +
mov esi [ebx] +
sub esi 10h +
lea edx [ecx-10h] +
cmp edx esi +
jz loc_4048B7  +
cmp dword ptr [esi+0Ch] 0 +
jl loc_4048AC  +
mov eax [edx] +
cmp eax [esi] +
jnz loc_4048AC  +
push edx  +
call loc_4034A0  +
add esp 4 +
mov [ebp+var_10] eax +
mov ecx edi +
lea edx [esi+0Ch] +
xadd [edx] ecx +
dec ecx  +
test ecx ecx +
jg loc_4048A5  +
mov ecx [esi] +
push esi  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax [ebp+var_10] +
add eax 10h +
mov [ebx] eax +
jmp loc_4048B7  +
push dword ptr [ecx-0Ch]  +
push ecx  +
mov ecx ebx +
call loc_403510  +
push [ebp+arg_C]  +
mov ecx ebx +
push [ebp+arg_8]  +
call loc_405FF0  +
test eax eax +
mov byte ptr [ebp+var_4] 0 +
mov edx [ebp+arg_8] +
mov eax edi +
setnle bl  +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_4048E7  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+arg_C] +
add eax 0FFFFFFF0h +
xadd [eax+0Ch] edi +
dec edi  +
test edi edi +
jg loc_404906  +
mov ecx [eax] +
push eax  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ecx  +
mov ecx [ebp+arg_0] +
lea edx [ebp+var_4] +
call loc_4046E0  +
add esp 4 +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_420353  +
mov eax large fs:0 +
push eax  +
sub esp 8Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov [ebp+var_98] 0 +
push 84h  +
lea eax [ebp+var_94] +
mov [ebp+var_4] 0 +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_90] +
lea ecx [ebp+var_94] +
mov [ebp+var_94] eax +
push 3  +
push [ebp+arg_4]  +
call loc_4076A0  +
mov byte ptr [ebp+var_4] 1 +
mov edx [ebp+var_94] +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_4049D5  +
mov eax [esi] +
jmp loc_4049D7  +
mov eax esi +
mov byte ptr [eax] 0 +
cmp byte ptr [edx] 0 +
jnz loc_4049E3  +
xor ecx ecx +
jmp loc_4049F1  +
mov ecx edx +
lea edi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4049E8  +
sub ecx edi +
push ecx  +
push edx  +
mov ecx esi +
call sub_402910  +
mov eax [ebp+var_94] +
lea ecx [ebp+var_90] +
cmp eax ecx +
jz loc_404A14  +
push eax  +
call ds:__imp_free  +
add esp 4 +
mov [ebp+var_4] 0FFFFFFFFh +
or ecx 0FFFFFFFFh +
mov eax [ebp+arg_4] +
add eax 0FFFFFFF0h +
xadd [eax+0Ch] ecx +
dec ecx  +
test ecx ecx +
jg loc_404A36  +
mov ecx [eax] +
push eax  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+cchWideChar] +
push edi  +
mov [ebp+var_4] 0 +
mov ebx [esi+10h] +
inc ebx  +
cmp dword ptr [esi+14h] 10h +
jb loc_404A7F  +
mov eax [esi] +
jmp loc_404A81  +
mov eax esi +
push 0  +
push 0  +
push ebx  +
push eax  +
push 0  +
push 0  +
call ds:MultiByteToWideChar  +
xor ecx ecx +
mov [ebp+cchWideChar] eax +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_41ECAD  +
add esp 4 +
mov edi eax +
cmp dword ptr [esi+14h] 10h +
jb loc_404AB7  +
mov esi [esi] +
push [ebp+cchWideChar]  +
push edi  +
push ebx  +
push esi  +
push 0  +
push 0  +
call ds:MultiByteToWideChar  +
mov esi [ebp+arg_0] +
xor eax eax +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
cmp [edi] ax +
jz loc_404AF6  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_404AE7  +
sub eax edx +
sar eax 1 +
push eax  +
push edi  +
mov ecx esi +
call sub_402590  +
push edi  +
call j_j_free  +
add esp 4 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
xor edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42039F  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx [ebp+38h] +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
mov byte ptr [ebp-4] 2 +
mov byte ptr [ebp-28h] 0 +
cmp eax 10h +
jb loc_404CC2  +
inc eax  +
lea ecx [ebp+8] +
push eax  +
push dword ptr [ebp+8]  +
call sub_402E70  +
mov eax [ebp+34h] +
mov dword ptr [ebp+1Ch] 0Fh +
mov dword ptr [ebp+18h] 0 +
mov byte ptr [ebp+8] 0 +
cmp eax 10h +
jb loc_404CE9  +
inc eax  +
lea ecx [ebp+20h] +
push eax  +
push dword ptr [ebp+20h]  +
call sub_402E70  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx edx +
mov [ebp-4] ecx +
mov [ebp-8] ecx +
push esi  +
push edi  +
mov ecx [ebx+14h] +
mov dword ptr [ebp-0Ch] 0 +
cmp ecx 10h +
jb loc_404D34  +
mov eax [ebx] +
jmp loc_404D36  +
mov eax ebx +
mov esi [ebx+10h] +
add esi eax +
cmp ecx 10h +
jb loc_404D44  +
mov edi [ebx] +
jmp loc_404D46  +
mov edi ebx +
cmp edi esi +
jz loc_404D66  +
mov ecx [ebx+14h] +
cmp ecx 10h +
jb loc_404D72  +
mov eax [ebx] +
jmp loc_404D74  +
mov eax ebx +
cmp ecx 10h +
jb loc_404D7D  +
mov ecx [ebx] +
jmp loc_404D7F  +
mov ecx ebx +
sub edi eax +
sub eax ecx +
push edi  +
push eax  +
mov ecx ebx +
call sub_403380  +
mov esi [ebp-4] +
mov ecx esi +
push 0FFFFFFFFh  +
push 0  +
push ebx  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
call sub_402A10  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 10h +
push ebx  +
mov ebx edx +
mov [ebp+var_C] ecx +
mov [ebp+var_8] ecx +
push esi  +
push edi  +
mov ecx [ebx+14h] +
mov [ebp+var_10] 0 +
cmp ecx 10h +
jb loc_404DE4  +
mov eax [ebx] +
jmp loc_404DE6  +
mov eax ebx +
mov edx [ebx+10h] +
lea edi [edx+eax] +
mov [ebp+var_8] edi +
cmp ecx 10h +
jb loc_404DFB  +
mov eax [ebx] +
mov [ebp+var_4] eax +
jmp loc_404E00  +
mov eax ebx +
mov [ebp+var_4] ebx +
cmp ecx 10h +
jb loc_404E09  +
mov ecx [ebx] +
jmp loc_404E0B  +
mov ecx ebx +
lea esi [edx+ecx] +
cmp esi eax +
jz loc_404E36  +
mov edi [ebp+var_4] +
lea eax [esi-1] +
mov [ebp+var_4] eax +
movsx eax byte ptr [eax] +
push eax  +
call ds:isspace  +
add esp 4 +
test eax eax +
jz loc_404E33  +
mov esi [ebp+var_4] +
cmp esi edi +
jnz loc_404E15  +
mov edi [ebp+var_8] +
cmp dword ptr [ebx+14h] 10h +
jb loc_404E40  +
mov eax [ebx] +
jmp loc_404E42  +
mov eax ebx +
sub edi esi +
mov ecx ebx +
push edi  +
sub esi eax +
push esi  +
call sub_403380  +
mov esi [ebp+var_C] +
mov ecx esi +
push 0FFFFFFFFh  +
push 0  +
push ebx  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
call sub_402A10  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4203D8  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push esi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
lea ecx [ebp+var_2C] +
mov [ebp+var_14] 0 +
call sub_404DC0  +
mov edx eax +
mov [ebp+var_4] 0 +
mov ecx esi +
call loc_404D10  +
mov eax [ebp+var_18] +
cmp eax 10h +
jb loc_404EDF  +
inc eax  +
lea ecx [ebp+var_2C] +
push eax  +
push [ebp+var_2C]  +
call sub_402E70  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_420458  +
mov eax large fs:0 +
push eax  +
sub esp 120h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx [ebp+arg_0] +
mov [ebp+var_FC] ebx +
mov [ebp+var_F8] 0 +
mov [ebp+var_4] 2 +
lea ecx [ebp+arg_4] +
cmp [ebp+arg_18] 8 +
mov eax [ebp+arg_14] +
cmovnb ecx [ebp+arg_4] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
lea esi [ecx+eax*2] +
lea eax [ebp+arg_4] +
cmovnb eax [ebp+arg_4] +
mov [ebp+var_F4] eax +
mov eax esi +
mov edi [ebp+var_F4] +
sub eax edi +
sar eax 1 +
cmp eax 0Fh +
jz loc_404FAD  +
push 1  +
push eax  +
lea ecx [ebp+var_28] +
call sub_403260  +
test al al +
jz loc_404FAD  +
cmp [ebp+var_14] 10h +
lea eax [ebp+var_28] +
mov [ebp+var_18] 0 +
cmovnb eax [ebp+var_28] +
mov byte ptr [eax] 0 +
push [ebp+var_FC]  +
lea ecx [ebp+var_28] +
push esi  +
push edi  +
call loc_408C50  +
mov byte ptr [ebp+var_4] 3 +
lea eax [ebp+arg_1C] +
push [ebp+arg_2C]  +
cmp [ebp+arg_30] 10h +
lea ecx [ebp+var_28] +
push 0  +
cmovnb eax [ebp+arg_1C] +
push eax  +
call sub_4077E0  +
mov dword ptr [ebx+10h] 0 +
mov esi eax +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+14h] 0Fh +
cmp dword ptr [ebx+14h] 10h +
mov dword ptr [ebx+10h] 0 +
jb loc_405002  +
mov eax [ebx] +
jmp loc_405004  +
mov eax ebx +
push 2  +
push offset a1_3  +
mov ecx ebx +
mov byte ptr [eax] 0 +
call sub_402910  +
mov [ebp+var_F8] 1 +
cmp esi 0FFFFFFFFh +
jz loc_405228  +
push 0B0h  +
lea eax [ebp+var_F0] +
push 0  +
push eax  +
call memset  +
add esp 4 +
lea eax [ebp+var_28] +
lea ecx [ebp+var_F0] +
push eax  +
call sub_406BB0  +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
mov byte ptr [ebp+var_4] 5 +
cmp [ebp+var_18] 0 +
jz loc_4051B6  +
push 0Ah  +
lea edx [ebp+var_40] +
lea ecx [ebp+var_F0] +
call sub_408830  +
mov ecx eax +
add esp 4 +
mov eax [ecx] +
mov eax [eax+4] +
test byte ptr [eax+ecx+0Ch] 6 +
jnz loc_4051A1  +
push [ebp+arg_2C]  +
cmp [ebp+arg_30] 10h +
lea eax [ebp+arg_1C] +
push 0  +
cmovnb eax [ebp+arg_1C] +
lea ecx [ebp+var_40] +
push eax  +
call sub_4077E0  +
cmp eax 0FFFFFFFFh +
jnz loc_4050D6  +
push 0Ah  +
lea edx [ebp+var_40] +
lea ecx [ebp+var_F0] +
call sub_408830  +
mov ecx eax +
add esp 4 +
mov eax [ecx] +
mov eax [eax+4] +
test byte ptr [eax+ecx+0Ch] 6 +
jz loc_405092  +
jmp loc_4051A1  +
push 1  +
push 0  +
push offset asc_428120  +
lea ecx [ebp+var_40] +
call sub_4077E0  +
push 0FFFFFFFFh  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
lea eax [ebp+var_114] +
push eax  +
call sub_406350  +
mov edx eax +
mov byte ptr [ebp+var_4] 6 +
lea ecx [ebp+var_12C] +
call sub_404E80  +
push eax  +
mov ecx ebx +
call sub_403420  +
mov eax [ebp+var_118] +
cmp eax 10h +
jb loc_405131  +
inc eax  +
lea ecx [ebp+var_12C] +
push eax  +
push [ebp+var_12C]  +
call sub_402E70  +
mov byte ptr [ebp+var_4] 5 +
mov eax [ebp+var_100] +
mov [ebp+var_118] 0Fh +
mov [ebp+var_11C] 0 +
mov byte ptr [ebp+var_12C] 0 +
cmp eax 10h +
jb loc_40516E  +
inc eax  +
lea ecx [ebp+var_114] +
push eax  +
push [ebp+var_114]  +
call sub_402E70  +
mov edx ebx +
lea ecx [ebp+var_114] +
call sub_404DC0  +
push eax  +
mov ecx ebx +
call sub_403420  +
mov eax [ebp+var_100] +
cmp eax 10h +
jb loc_4051A1  +
inc eax  +
lea ecx [ebp+var_114] +
push eax  +
push [ebp+var_114]  +
call sub_402E70  +
mov eax [ebp+var_2C] +
cmp eax 10h +
jb loc_4051B6  +
inc eax  +
lea ecx [ebp+var_40] +
push eax  +
push [ebp+var_40]  +
call sub_402E70  +
mov eax [ebp+var_F0] +
mov [ebp+var_2C] 0Fh +
mov [ebp+var_30] 0 +
mov byte ptr [ebp+var_40] 0 +
mov eax [eax+4] +
mov [ebp+eax+var_F0] offset off_4281C0 +
mov eax [ebp+var_F0] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ebp+ecx+var_F4] eax +
lea ecx [ebp+var_D8] +
mov [ebp+var_D8] offset off_428178 +
call sub_407B20  +
lea ecx [ebp+var_D8] +
call ds:??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ  +
lea ecx [ebp+var_D0] +
call ds:??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ  +
lea ecx [ebp+var_88] +
call ds:??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ  +
mov eax [ebp+var_14] +
cmp eax 10h +
jb loc_40523D  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call sub_402E70  +
mov eax [ebp+arg_18] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
cmp eax 8 +
jb loc_405264  +
inc eax  +
lea ecx [ebp+arg_4] +
push eax  +
push [ebp+arg_4]  +
call sub_402E00  +
mov ecx [ebp+arg_30] +
xor eax eax +
mov [ebp+arg_18] 7 +
mov [ebp+arg_14] 0 +
mov word ptr [ebp+arg_4] ax +
cmp ecx 10h +
jb loc_40528D  +
inc ecx  +
push ecx  +
push [ebp+arg_1C]  +
lea ecx [ebp+arg_1C] +
call sub_402E70  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx] +
push esi  +
push edi  +
lea edi [ecx+68h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-68h] offset off_4281C0 +
mov eax [edi-68h] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ecx+edi-6Ch] eax +
lea ecx [edi-50h] +
mov dword ptr [edi-50h] offset off_428178 +
call sub_407B20  +
lea ecx [edi-50h] +
call ds:??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ  +
lea ecx [edi-48h] +
call ds:??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ  +
mov ecx edi +
pop edi  +
pop esi  +
jmp ds:??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_420512  +
mov eax large fs:0 +
push eax  +
sub esp 16Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp-68h] edi +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp-18h] +
mov eax [ebp+18h] +
xorps xmm0 xmm0 +
movq qword ptr [ebp-18h] xmm0 +
mov [ebp-6Ch] eax +
mov byte ptr [ebp-61h] 0 +
mov byte ptr [ebp-62h] 1 +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 0 +
call sub_408350  +
mov [ebp-18h] eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-48h] +
push 0  +
push offset unk_427F91  +
mov dword ptr [ebp-34h] 0Fh +
mov dword ptr [ebp-38h] 0 +
mov byte ptr [ebp-48h] 0 +
call sub_402910  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-30h] +
push 0  +
push offset unk_427F91  +
mov dword ptr [ebp-1Ch] 0Fh +
mov dword ptr [ebp-20h] 0 +
mov byte ptr [ebp-30h] 0 +
call sub_402910  +
xor ebx ebx +
mov byte ptr [ebp-4] 3 +
cmp [ebp-6Ch] ebx +
jbe loc_405945  +
cmp dword ptr [ebp+1Ch] 10h +
lea eax [ebp+8] +
cmovnb eax [ebp+8] +
cmp byte ptr [eax+ebx] 7Dh +
jnz loc_40584F  +
push 5  +
push offset aBuild  +
lea ecx [ebp-0B8h] +
mov dword ptr [ebp-0A4h] 0Fh +
mov dword ptr [ebp-0A8h] 0 +
mov byte ptr [ebp-0B8h] 0 +
call sub_402910  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-0A0h] +
push 7  +
push offset aVersion  +
mov dword ptr [ebp-8Ch] 0Fh +
mov dword ptr [ebp-90h] 0 +
mov byte ptr [ebp-0A0h] 0 +
call sub_402910  +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-88h] +
push 7  +
push offset aProduct  +
mov dword ptr [ebp-74h] 0Fh +
mov dword ptr [ebp-78h] 0 +
mov byte ptr [ebp-88h] 0 +
call sub_402910  +
lea eax [ebp-0B8h] +
mov byte ptr [ebp-4] 6 +
push eax  +
lea eax [ebp-150h] +
push eax  +
lea ecx [ebp-18h] +
call sub_4089B0  +
mov eax [ebp-150h] +
add eax 28h +
push eax  +
push ecx  +
mov ecx esp +
push offset asc_42812C  +
call sub_4023D0  +
lea eax [ebp-148h] +
push eax  +
call sub_404940  +
add esp 8 +
push eax  +
lea eax [ebp-0A0h] +
mov byte ptr [ebp-4] 7 +
push eax  +
lea eax [ebp-158h] +
push eax  +
lea ecx [ebp-18h] +
call sub_4089B0  +
mov eax [ebp-158h] +
add eax 28h +
push eax  +
push ecx  +
mov ecx esp +
push offset asc_42812C  +
call sub_4023D0  +
lea eax [ebp-130h] +
push eax  +
call sub_404940  +
add esp 8 +
mov esi eax +
lea eax [ebp-88h] +
mov byte ptr [ebp-4] 8 +
push eax  +
lea eax [ebp-160h] +
push eax  +
lea ecx [ebp-18h] +
call sub_4089B0  +
mov eax [ebp-160h] +
add eax 28h +
push esi  +
push eax  +
lea eax [ebp-118h] +
push eax  +
call sub_408460  +
add esp 0Ch +
push eax  +
lea eax [ebp-100h] +
mov byte ptr [ebp-4] 9 +
push eax  +
call sub_408490  +
add esp 0Ch +
push eax  +
lea eax [ebp-0E8h] +
mov byte ptr [ebp-4] 0Ah +
push eax  +
call sub_4084C0  +
add esp 0Ch +
push eax  +
lea eax [ebp-60h] +
mov byte ptr [ebp-4] 0Bh +
push eax  +
call sub_408490  +
add esp 0Ch +
mov eax [ebp-0D4h] +
cmp eax 10h +
jb loc_40556E  +
inc eax  +
lea ecx [ebp-0E8h] +
push eax  +
push dword ptr [ebp-0E8h]  +
call sub_402E70  +
mov dword ptr [ebp-0D4h] 0Fh +
mov dword ptr [ebp-0D8h] 0 +
mov byte ptr [ebp-0E8h] 0 +
mov eax [ebp-0ECh] +
cmp eax 10h +
jb loc_4055A7  +
inc eax  +
lea ecx [ebp-100h] +
push eax  +
push dword ptr [ebp-100h]  +
call sub_402E70  +
mov dword ptr [ebp-0ECh] 0Fh +
mov dword ptr [ebp-0F0h] 0 +
mov byte ptr [ebp-100h] 0 +
mov eax [ebp-104h] +
cmp eax 10h +
jb loc_4055E0  +
inc eax  +
lea ecx [ebp-118h] +
push eax  +
push dword ptr [ebp-118h]  +
call sub_402E70  +
mov dword ptr [ebp-104h] 0Fh +
mov dword ptr [ebp-108h] 0 +
mov byte ptr [ebp-118h] 0 +
mov eax [ebp-11Ch] +
cmp eax 10h +
jb loc_405619  +
inc eax  +
lea ecx [ebp-130h] +
push eax  +
push dword ptr [ebp-130h]  +
call sub_402E70  +
mov dword ptr [ebp-11Ch] 0Fh +
mov dword ptr [ebp-120h] 0 +
mov byte ptr [ebp-130h] 0 +
mov eax [ebp-134h] +
cmp eax 10h +
jb loc_405652  +
inc eax  +
lea ecx [ebp-148h] +
push eax  +
push dword ptr [ebp-148h]  +
call sub_402E70  +
mov dword ptr [ebp-134h] 0Fh +
mov dword ptr [ebp-138h] 0 +
mov byte ptr [ebp-148h] 0 +
mov eax [ebp-74h] +
cmp eax 10h +
jb loc_405688  +
inc eax  +
lea ecx [ebp-88h] +
push eax  +
push dword ptr [ebp-88h]  +
call sub_402E70  +
mov dword ptr [ebp-74h] 0Fh +
mov dword ptr [ebp-78h] 0 +
mov byte ptr [ebp-88h] 0 +
mov eax [ebp-8Ch] +
cmp eax 10h +
jb loc_4056BB  +
inc eax  +
lea ecx [ebp-0A0h] +
push eax  +
push dword ptr [ebp-0A0h]  +
call sub_402E70  +
mov dword ptr [ebp-8Ch] 0Fh +
mov dword ptr [ebp-90h] 0 +
mov byte ptr [ebp-0A0h] 0 +
mov byte ptr [ebp-4] 14h +
mov eax [ebp-0A4h] +
cmp eax 10h +
jb loc_4056F8  +
inc eax  +
lea ecx [ebp-0B8h] +
push eax  +
push dword ptr [ebp-0B8h]  +
call sub_402E70  +
push 0Bh  +
push offset aPreferences  +
lea ecx [ebp-0D0h] +
mov dword ptr [ebp-0A4h] 0Fh +
mov dword ptr [ebp-0A8h] 0 +
mov byte ptr [ebp-0B8h] 0 +
mov dword ptr [ebp-0BCh] 0Fh +
mov dword ptr [ebp-0C0h] 0 +
mov byte ptr [ebp-0D0h] 0 +
call sub_402910  +
lea eax [ebp-0D0h] +
mov byte ptr [ebp-4] 15h +
push eax  +
lea eax [ebp-168h] +
push eax  +
lea ecx [ebp-18h] +
call sub_4089B0  +
mov esi [ebp-168h] +
lea eax [ebp-60h] +
push eax  +
lea eax [ebp-170h] +
mov ecx edi +
push eax  +
call sub_408A60  +
mov ecx [ebp-170h] +
add esi 28h +
add ecx 28h +
cmp ecx esi +
jz loc_40578C  +
push 0FFFFFFFFh  +
push 0  +
push esi  +
call sub_402A10  +
mov eax [ebp-0BCh] +
cmp eax 10h +
jb loc_4057AA  +
inc eax  +
lea ecx [ebp-0D0h] +
push eax  +
push dword ptr [ebp-0D0h]  +
call sub_402E70  +
cmp dword ptr [ebp-34h] 10h +
lea eax [ebp-48h] +
mov dword ptr [ebp-38h] 0 +
cmovnb eax [ebp-48h] +
mov byte ptr [eax] 0 +
lea eax [ebp-30h] +
cmp dword ptr [ebp-1Ch] 10h +
mov dword ptr [ebp-20h] 0 +
cmovnb eax [ebp-30h] +
mov byte ptr [eax] 0 +
mov byte ptr [ebp-4] 16h +
mov eax [ebp-18h] +
mov edi [eax+4] +
mov esi edi +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_405819  +
push dword ptr [esi+8]  +
lea ecx [ebp-18h] +
call sub_4073F0  +
mov esi [esi] +
lea ecx [edi+10h] +
call sub_408E10  +
push edi  +
call j_free  +
add esp 4 +
mov edi esi +
cmp byte ptr [esi+0Dh] 0 +
jz loc_4057F0  +
mov eax [ebp-18h] +
mov [eax+4] eax +
mov eax [ebp-18h] +
mov [eax] eax +
mov eax [ebp-18h] +
mov byte ptr [ebp-4] 3 +
mov [eax+8] eax +
mov eax [ebp-4Ch] +
mov dword ptr [ebp-14h] 0 +
cmp eax 10h +
jb loc_405847  +
inc eax  +
lea ecx [ebp-60h] +
push eax  +
push dword ptr [ebp-60h]  +
call sub_402E70  +
mov edi [ebp-68h] +
jmp loc_40593B  +
cmp dword ptr [ebp+1Ch] 10h +
lea eax [ebp+8] +
cmovnb eax [ebp+8] +
cmp byte ptr [eax+ebx] 22h +
jnz loc_40591B  +
mov al [ebp-61h] +
test al al +
jz loc_405915  +
cmp byte ptr [ebp-62h] 0 +
lea eax [ebp-30h] +
jz loc_4058A8  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
lea ecx [ebp-48h] +
call sub_402A10  +
cmp dword ptr [ebp-1Ch] 10h +
lea eax [ebp-30h] +
mov dword ptr [ebp-20h] 0 +
cmovnb eax [ebp-30h] +
mov byte ptr [eax] 0 +
lea eax [ebp-48h] +
push eax  +
call loc_404B20  +
add esp 4 +
jmp loc_405908  +
push eax  +
call loc_404B20  +
add esp 4 +
lea eax [ebp-48h] +
lea ecx [ebp-18h] +
push eax  +
lea eax [ebp-178h] +
push eax  +
call sub_408A60  +
mov ecx [ebp-178h] +
lea eax [ebp-30h] +
add ecx 28h +
cmp ecx eax +
jz loc_4058DE  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call sub_402A10  +
cmp dword ptr [ebp-34h] 10h +
lea eax [ebp-48h] +
mov dword ptr [ebp-38h] 0 +
cmovnb eax [ebp-48h] +
mov byte ptr [eax] 0 +
lea eax [ebp-30h] +
cmp dword ptr [ebp-1Ch] 10h +
mov dword ptr [ebp-20h] 0 +
cmovnb eax [ebp-30h] +
mov byte ptr [eax] 0 +
cmp byte ptr [ebp-62h] 0 +
mov al [ebp-61h] +
setz byte ptr [ebp-62h]  +
test al al +
setz byte ptr [ebp-61h]  +
jmp loc_40593B  +
cmp byte ptr [ebp-61h] 0 +
jz loc_40593B  +
cmp dword ptr [ebp+1Ch] 10h +
lea eax [ebp+8] +
lea ecx [ebp-30h] +
cmovnb eax [ebp+8] +
movzx eax byte ptr [eax+ebx] +
push eax  +
push 1  +
call sub_402B30  +
inc ebx  +
cmp ebx [ebp-6Ch] +
jb loc_4053C2  +
mov eax [ebp-1Ch] +
cmp eax 10h +
jb loc_40595A  +
inc eax  +
lea ecx [ebp-30h] +
push eax  +
push dword ptr [ebp-30h]  +
call sub_402E70  +
mov eax [ebp-34h] +
mov dword ptr [ebp-1Ch] 0Fh +
mov dword ptr [ebp-20h] 0 +
mov byte ptr [ebp-30h] 0 +
cmp eax 10h +
jb loc_405981  +
inc eax  +
lea ecx [ebp-48h] +
push eax  +
push dword ptr [ebp-48h]  +
call sub_402E70  +
mov eax [ebp-18h] +
lea ecx [ebp-18h] +
push eax  +
mov dword ptr [ebp-34h] 0Fh +
mov dword ptr [ebp-38h] 0 +
mov byte ptr [ebp-48h] 0 +
push dword ptr [eax]  +
lea eax [ebp-70h] +
push eax  +
call loc_407C10  +
push dword ptr [ebp-18h]  +
call j_free  +
mov eax [ebp+1Ch] +
add esp 4 +
cmp eax 10h +
jb loc_4059C5  +
inc eax  +
lea ecx [ebp+8] +
push eax  +
push dword ptr [ebp+8]  +
call sub_402E70  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi] +
push eax  +
push dword ptr [eax]  +
lea eax [ebp+var_4] +
push eax  +
call loc_407C10  +
push dword ptr [esi]  +
call j_free  +
add esp 4 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_420563  +
mov eax large fs:0 +
push eax  +
sub esp 0ECh +
mov eax dword_43000C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax [ebp+20h] +
mov [ebp-0F4h] eax +
mov dword ptr [ebp-4] 0 +
lea ecx [ebp+8] +
cmp dword ptr [ebp+1Ch] 8 +
lea ebx [ebp+8] +
mov eax [ebp+18h] +
cmovnb ecx [ebp+8] +
cmovnb ebx [ebp+8] +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
lea esi [ecx+eax*2] +
mov byte ptr [ebp-28h] 0 +
mov eax esi +
sub eax ebx +
sar eax 1 +
cmp eax 0Fh +
jz loc_405AB6  +
push 1  +
push eax  +
lea ecx [ebp-28h] +
call sub_403260  +
test al al +
jz loc_405AB6  +
cmp dword ptr [ebp-14h] 10h +
lea eax [ebp-28h] +
mov dword ptr [ebp-18h] 0 +
cmovnb eax [ebp-28h] +
mov byte ptr [eax] 0 +
push dword ptr [ebp-0F4h]  +
lea ecx [ebp-28h] +
push esi  +
push ebx  +
call loc_408C50  +
push 0Bh  +
push 0  +
push offset aPreferences  +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 1 +
call sub_4077E0  +
cmp eax 0FFFFFFFFh +
jz loc_405C30  +
push 0B0h  +
lea eax [ebp-0F0h] +
push 0  +
push eax  +
call memset  +
add esp 4 +
lea eax [ebp-28h] +
lea ecx [ebp-0F0h] +
push eax  +
call sub_406BB0  +
mov dword ptr [ebp-2Ch] 0Fh +
mov dword ptr [ebp-30h] 0 +
mov byte ptr [ebp-40h] 0 +
mov byte ptr [ebp-4] 3 +
cmp dword ptr [ebp-18h] 0 +
jz loc_405BBE  +
push 0Ah  +
lea edx [ebp-40h] +
lea ecx [ebp-0F0h] +
call sub_408830  +
add esp 4 +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 6 +
jnz loc_405BA9  +
push 13h  +
push 0  +
push offset aUpdatedPrefere  +
lea ecx [ebp-40h] +
call sub_4077E0  +
cmp eax 0FFFFFFFFh +
jnz loc_405B87  +
push 0Ah  +
lea edx [ebp-40h] +
lea ecx [ebp-0F0h] +
call sub_408830  +
add esp 4 +
mov ecx [eax] +
mov ecx [ecx+4] +
test byte ptr [ecx+eax+0Ch] 6 +
jz loc_405B50  +
jmp loc_405BA9  +
sub esp 18h +
lea ecx [ebp-40h] +
mov edx esp +
add eax 14h +
push 0FFFFFFFFh  +
push eax  +
push edx  +
call sub_406350  +
mov ecx [ebp-0F4h] +
call loc_405300  +
add esp 18h +
mov eax [ebp-2Ch] +
cmp eax 10h +
jb loc_405BBE  +
inc eax  +
lea ecx [ebp-40h] +
push eax  +
push dword ptr [ebp-40h]  +
call sub_402E70  +
mov eax [ebp-0F0h] +
mov dword ptr [ebp-2Ch] 0Fh +
mov dword ptr [ebp-30h] 0 +
mov byte ptr [ebp-40h] 0 +
mov eax [eax+4] +
mov dword ptr [ebp+eax-0F0h] offset off_4281C0 +
mov eax [ebp-0F0h] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ebp+ecx-0F4h] eax +
lea ecx [ebp-0D8h] +
mov dword ptr [ebp-0D8h] offset off_428178 +
call sub_407B20  +
lea ecx [ebp-0D8h] +
call ds:??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ  +
lea ecx [ebp-0D0h] +
call ds:??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ  +
lea ecx [ebp-88h] +
call ds:??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ  +
mov eax [ebp-14h] +
cmp eax 10h +
jb loc_405C45  +
inc eax  +
lea ecx [ebp-28h] +
push eax  +
push dword ptr [ebp-28h]  +
call sub_402E70  +
mov eax [ebp+1Ch] +
mov dword ptr [ebp-14h] 0Fh +
mov dword ptr [ebp-18h] 0 +
mov byte ptr [ebp-28h] 0 +
cmp eax 8 +
jb loc_405C6C  +
inc eax  +
lea ecx [ebp+8] +
push eax  +
push dword ptr [ebp+8]  +
call sub_402E00  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_42059B  +
mov eax large fs:0 +
push eax  +
sub esp 0B8h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
lea eax [ebp+var_C0] +
push 0B0h  +
push 0  +
push eax  +
mov [ebp+var_C4] 0 +
call memset  +
add esp 4 +
lea ecx [ebp+var_C0] +
call sub_4064B0  +
push [ebp+arg_4]  +
lea ecx [ebp+var_B0] +
mov [ebp+var_4] 0 +
push offset sub_4046C0  +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAVios_base@1@AAV21@@Z@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@K@Z  +
push esi  +
lea ecx [ebp+var_C0] +
call sub_406490  +
mov eax [ebp+var_C0] +
mov eax [eax+4] +
mov [ebp+eax+var_C0] offset off_428210 +
mov eax [ebp+var_C0] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ebp+ecx+var_C4] eax +
lea ecx [ebp+var_A8] +
mov [ebp+var_A8] offset off_4281C8 +
call sub_407980  +
lea ecx [ebp+var_A8] +
call ds:??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
lea ecx [ebp+var_A0] +
call ds:??1?$basic_iostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
lea ecx [ebp+var_58] +
call ds:??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ecx] +
push esi  +
push edi  +
lea edi [ecx+68h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-68h] offset off_428210 +
mov eax [edi-68h] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ecx+edi-6Ch] eax +
lea ecx [edi-50h] +
mov dword ptr [edi-50h] offset off_4281C8 +
call sub_407980  +
lea ecx [edi-50h] +
call ds:??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
lea ecx [edi-48h] +
call ds:??1?$basic_iostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
mov ecx edi +
pop edi  +
pop esi  +
jmp ds:??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
***
push 0FFFFFFFFh  +
sub esp 8 +
push [ebp+arg_0]  +
lea eax [ebp+var_8] +
push eax  +
call sub_408A60  +
mov eax [ebp+var_8] +
add eax 28h +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 8 +
push [ebp+arg_0]  +
lea eax [ebp+var_8] +
push eax  +
call sub_4089B0  +
mov eax [ebp+var_8] +
add eax 28h +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi ecx +
mov [ebp+var_4] esi +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
call sub_408350  +
mov [esi] eax +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ecx] +
mov edx [ebp+arg_4] +
mov [ebp+var_4] 0 +
mov eax [eax-0Ch] +
sub eax edx +
push eax  +
push edx  +
push [ebp+arg_0]  +
call loc_4074C0  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
mov [ebp-0Ch] esi +
push edi  +
test ecx ecx +
jz loc_40623A  +
mov edi ecx +
lea edx [edi+2] +
mov ax [edi] +
add edi 2 +
test ax ax +
jnz loc_406010  +
sub edi edx +
sar edi 1 +
mov [ebp-14h] edi +
jz loc_40623A  +
mov eax [ebp+0Ch] +
push ebx  +
test eax eax +
jz loc_406046  +
mov ebx eax +
lea edx [ebx+2] +
mov ax [ebx] +
add ebx 2 +
test ax ax +
jnz loc_406035  +
sub ebx edx +
sar ebx 1 +
jmp loc_406048  +
xor ebx ebx +
mov esi [esi] +
mov [ebp-4] ebx +
mov dword ptr [ebp-10h] 0 +
mov eax [esi-0Ch] +
lea eax [esi+eax*2] +
mov [ebp-18h] eax +
cmp esi eax +
jnb loc_40622E  +
xor ebx ebx +
jmp loc_406073  +
mov ecx [ebp+8] +
push ecx  +
push esi  +
call ds:wcsstr  +
add esp 8 +
test eax eax +
jz loc_40609A  +
push dword ptr [ebp+8]  +
lea esi [eax+edi*2] +
inc ebx  +
push esi  +
call ds:wcsstr  +
add esp 8 +
test eax eax +
jnz loc_406082  +
mov [ebp-10h] ebx +
test esi esi +
jz loc_4060B4  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_4060A3  +
sub eax edx +
sar eax 1 +
jmp loc_4060B6  +
xor eax eax +
lea esi [esi+eax*2] +
add esi 2 +
cmp esi [ebp-18h] +
jb loc_406070  +
test ebx ebx +
mov ebx [ebp-4] +
jle loc_40622E  +
mov esi [ebp-0Ch] +
sub ebx edi +
imul ebx [ebp-10h] +
mov eax [esi] +
mov ecx [eax-0Ch] +
add ebx ecx +
cmp ebx ecx +
mov [ebp-8] ecx +
mov edx ecx +
mov [ebp-28h] ebx +
cmovg edx ebx +
test edx edx +
js loc_406244  +
mov ecx 1 +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax edx +
or ecx eax +
jge loc_40610A  +
push edx  +
mov ecx esi +
call sub_403CE0  +
mov eax [ebp-8] +
mov edx esi +
mov ecx [edx] +
mov esi ecx +
mov [ebp-1Ch] ecx +
lea eax [ecx+eax*2] +
mov [ebp-24h] eax +
cmp ecx eax +
jnb loc_406218  +
push dword ptr [ebp+8]  +
push esi  +
call ds:wcsstr  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jz loc_4061E7  +
lea eax [edi+edi] +
mov [ebp-20h] eax +
mov eax [ebp-4] +
lea edx [eax+eax] +
mov [ebp-18h] edx +
mov dword ptr [eax] 16h +
call ds:_invalid_parameter_noinfo  +
mov eax 16h +
jmp loc_40619D  +
sal byte ptr [ebx+51h] 50h +
push esi  +
call ds:memmove  +
add esp 0Ch +
xor eax eax +
push eax  +
call loc_401240  +
mov edx [ebp-18h] +
mov ecx ebx +
push edx  +
push dword ptr [ebp+0Ch]  +
call sub_401130  +
push eax  +
call loc_401240  +
mov ecx [ebp-4] +
xor edx edx +
push dword ptr [ebp+8]  +
push esi  +
lea eax [edi+ecx] +
mov edi [ebp-14h] +
mov [ebx+eax*2] dx +
mov eax ecx +
sub eax edi +
add [ebp-8] eax +
call ds:wcsstr  +
mov edx [ebp-18h] +
mov ebx eax +
add esp 18h +
test ebx ebx +
jnz near ptr dword_40614C+4  +
test esi esi +
jz loc_406201  +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_4061F0  +
sub ecx edx +
sar ecx 1 +
jmp loc_406203  +
xor ecx ecx +
lea esi [esi+ecx*2] +
add esi 2 +
cmp esi [ebp-24h] +
jb loc_406124  +
mov ebx [ebp-28h] +
mov edx [ebp-0Ch] +
test ebx ebx +
js loc_406244  +
mov eax [edx] +
cmp ebx [eax-8] +
jg loc_406244  +
mov [eax-0Ch] ebx +
xor ecx ecx +
mov eax [edx] +
mov [eax+ebx*2] cx +
mov eax [ebp-10h] +
pop ebx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
pop edi  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 80070057h  +
call loc_401220  +
mov eax [ebp+arg_0] +
mov eax [eax] +
push dword ptr [eax-0Ch]  +
push eax  +
call loc_4075D0  +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
test edx edx +
jnz loc_40628B  +
xor eax eax +
push eax  +
push edx  +
call loc_4075D0  +
pop esi  +
pop ebp  +
retn 4  +
mov eax edx +
push edi  +
lea edi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_406291  +
sub eax edi +
mov ecx esi +
pop edi  +
sar eax 1 +
push eax  +
push edx  +
call loc_4075D0  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx [ecx] +
lea eax [ecx+4] +
cmp edx eax +
jz locret_4062C1  +
push edx  +
call ds:__imp_free  +
pop ecx  +
retn   +
***
push esi  +
mov esi ecx +
push 3  +
push [ebp+arg_0]  +
lea eax [esi+4] +
mov [esi] eax +
call loc_4076A0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
xor eax eax +
push esi  +
mov esi ecx +
mov dword ptr [esi+14h] 7 +
mov dword ptr [esi+10h] 0 +
mov [esi] ax +
cmp [edx] ax +
jnz loc_406323  +
xor ecx ecx +
push ecx  +
push edx  +
mov ecx esi +
call sub_402590  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov ecx edx +
push edi  +
lea edi [ecx+2] +
push ecx  +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+arg_0] +
push [ebp+arg_4]  +
mov [ebp+var_4] 0 +
push ecx  +
mov dword ptr [esi+14h] 0Fh +
mov ecx esi +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
call sub_402A10  +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push esi  +
mov esi [ebp+arg_0] +
cmp byte ptr [esi] 0 +
jnz loc_4063AD  +
xor edx edx +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_4077E0  +
pop esi  +
pop ebp  +
retn 8  +
mov edx esi +
push edi  +
lea edi [edx+1] +
mov al [edx] +
inc edx  +
test al al +
jnz loc_4063B3  +
sub edx edi +
pop edi  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_4077E0  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_0] +
cmp dword ptr [eax+14h] 10h +
mov edx [eax+10h] +
jb loc_4063E1  +
mov eax [eax] +
push edx  +
push [ebp+arg_4]  +
push eax  +
call sub_4077E0  +
pop ebp  +
retn 8  +
***
cmp dword ptr [ecx+10h] 0 +
setz al  +
retn   +
***
cmp dword ptr [ecx+14h] 10h +
mov dword ptr [ecx+10h] 0 +
jb loc_406413  +
mov eax [ecx] +
mov byte ptr [eax] 0 +
retn   +
mov byte ptr [ecx] 0 +
retn   +
***
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
call sub_407890  +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
cmp esi eax +
jz loc_406457  +
push 0FFFFFFFFh  +
push 0  +
push eax  +
call sub_402A10  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_0]  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
call sub_402A10  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push [ebp+arg_0]  +
add ecx 18h +
mov [ebp+var_4] 0 +
call sub_407A00  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_420662  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_14] edi +
mov [ebp+var_10] 0 +
lea ecx [edi+68h] +
mov dword ptr [edi] offset unk_428204 +
mov dword ptr [edi+10h] offset unk_4281B4 +
call ds:??0?$basic_ios@_WU?$char_traits@_W@std@@@std@@IAE@XZ  +
push 0  +
lea esi [edi+18h] +
mov [ebp+var_4] 0 +
push esi  +
mov ecx edi +
mov [ebp+var_10] 1 +
call ds:??0?$basic_iostream@_WU?$char_traits@_W@std@@@std@@QAE@PAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@@Z  +
mov [ebp+var_4] 1 +
mov eax [edi] +
mov eax [eax+4] +
mov dword ptr [edi+eax] offset off_428210 +
mov eax [edi] +
mov ecx [eax+4] +
mov [ebp+var_18] esi +
lea eax [ecx-68h] +
mov [ecx+edi-4] eax +
mov ecx esi +
call ds:??0?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAE@XZ  +
mov dword ptr [esi] offset off_4281C8 +
mov eax edi +
mov dword ptr [esi+38h] 0 +
mov dword ptr [esi+3Ch] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
add esi [ebp+arg_C] +
push edi  +
adc ebx [ebp+arg_10] +
mov edi ecx +
mov [esp+20h+var_4] eax +
mov eax [edi+20h] +
mov eax [eax] +
test eax eax +
jz loc_4065A2  +
cmp [edi+38h] eax +
jnb loc_4065A2  +
mov [edi+38h] eax +
mov eax ds:?_BADOFF@std@@3_JB +
mov ecx [eax] +
mov eax [eax+4] +
mov [esp+20h+var_C] ecx +
mov [esp+20h+var_8] eax +
cmp esi ecx +
jnz loc_4065C0  +
cmp ebx eax +
jz loc_4066A2  +
mov edx [ebp+arg_1C] +
test dl 1 +
jz loc_406651  +
mov eax [edi+1Ch] +
mov eax [eax] +
mov [esp+20h+var_10] eax +
test eax eax +
jz loc_40664D  +
test ebx ebx +
jl loc_406647  +
jg loc_4065E3  +
test esi esi +
jb loc_406647  +
mov eax [edi+0Ch] +
mov ecx [eax] +
mov eax [edi+38h] +
sub eax ecx +
sar eax 1 +
cdq   +
cmp ebx edx +
jg loc_406643  +
jl loc_4065FA  +
cmp esi eax +
ja loc_406643  +
sub ecx [esp+20h+var_10] +
mov eax [edi+2Ch] +
sar ecx 1 +
add ecx esi +
mov [esp+20h+var_10] ecx +
sub [eax] ecx +
mov ecx [edi+1Ch] +
mov eax [esp+20h+var_10] +
add eax eax +
add [ecx] eax +
test byte ptr [ebp+arg_1C] 2 +
jz loc_4066A2  +
mov edx [edi+20h] +
mov ecx [edx] +
test ecx ecx +
jz loc_4066A2  +
mov eax [edi+30h] +
mov eax [eax] +
lea ecx [ecx+eax*2] +
mov eax [edi+1Ch] +
mov eax [eax] +
sub ecx eax +
mov [edx] eax +
mov eax [edi+30h] +
sar ecx 1 +
mov [eax] ecx +
jmp loc_4066A2  +
mov ecx [esp+20h+var_C] +
mov ebx [esp+20h+var_8] +
jmp loc_4066A0  +
mov eax [esp+20h+var_8] +
test dl 2 +
jz loc_40669E  +
mov edx [edi+20h] +
cmp dword ptr [edx] 0 +
jz loc_40669E  +
test ebx ebx +
jl loc_406647  +
jg loc_406668  +
test esi esi +
jb loc_406647  +
mov eax [edi+0Ch] +
mov ecx [eax] +
mov eax [edi+38h] +
sub eax ecx +
sar eax 1 +
cdq   +
cmp ebx edx +
jg loc_406643  +
jl loc_40667F  +
cmp esi eax +
ja loc_406643  +
mov eax [edi+20h] +
sub ecx [eax] +
mov eax [edi+30h] +
sar ecx 1 +
add ecx esi +
mov [esp+20h+var_10] ecx +
sub [eax] ecx +
mov ecx [edi+20h] +
mov eax [esp+20h+var_10] +
add eax eax +
add [ecx] eax +
jmp loc_4066A2  +
mov ebx eax +
mov esi ecx +
mov eax [esp+20h+var_4] +
xorps xmm0 xmm0 +
pop edi  +
mov [eax] esi +
mov [eax+4] ebx +
pop esi  +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
movq qword ptr [eax+10h] xmm0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push ecx  +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov edx [ebx+20h] +
mov eax [edx] +
test eax eax +
jz loc_4066EA  +
cmp [ebx+38h] eax +
jnb loc_4066EA  +
mov [ebx+38h] eax +
mov ecx [ebp+arg_10] +
test cl 1 +
jz loc_4067DA  +
mov eax [ebx+1Ch] +
mov esi [eax] +
mov [ebp+var_4] esi +
test esi esi +
jz loc_4067DA  +
mov eax [ebp+arg_C] +
cmp eax 2 +
jnz loc_406725  +
mov ecx [ebx+0Ch] +
mov eax [ebx+38h] +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
sar eax 1 +
cdq   +
add esi eax +
adc edi edx +
jmp loc_40675C  +
cmp eax 1 +
jnz loc_406745  +
test cl 2 +
jnz loc_406749  +
mov ecx [ebx+0Ch] +
mov eax esi +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
sar eax 1 +
cdq   +
add esi eax +
adc edi edx +
jmp loc_40675C  +
test eax eax +
jz loc_406756  +
mov edi ds:?_BADOFF@std@@3_JB +
mov esi [edi] +
mov edi [edi+4] +
jmp loc_40675C  +
mov edi [ebp+arg_8] +
mov esi [ebp+arg_4] +
test edi edi +
jl loc_406889  +
jg loc_40676E  +
test esi esi +
jb loc_406889  +
mov eax [ebx+0Ch] +
mov ecx [eax] +
mov eax [ebx+38h] +
sub eax ecx +
sar eax 1 +
cdq   +
cmp edi edx +
jg loc_406889  +
jl loc_40678D  +
cmp esi eax +
ja loc_406889  +
sub ecx [ebp+var_4] +
mov eax [ebx+2Ch] +
sar ecx 1 +
add ecx esi +
mov [ebp+arg_C] ecx +
sub [eax] ecx +
mov ecx [ebx+1Ch] +
mov eax [ebp+arg_C] +
add eax eax +
add [ecx] eax +
test byte ptr [ebp+arg_10] 2 +
jz loc_406893  +
mov edx [ebx+20h] +
mov ecx [edx] +
test ecx ecx +
jz loc_406893  +
mov eax [ebx+30h] +
mov eax [eax] +
lea ecx [ecx+eax*2] +
mov eax [ebx+1Ch] +
mov eax [eax] +
sub ecx eax +
mov [edx] eax +
mov eax [ebx+30h] +
sar ecx 1 +
mov [eax] ecx +
jmp loc_406893  +
test cl 2 +
jz loc_40687D  +
mov edx [edx] +
mov [ebp+arg_10] edx +
test edx edx +
jz loc_40687D  +
mov eax [ebp+arg_C] +
cmp eax 2 +
jnz loc_40680F  +
mov ecx [ebx+0Ch] +
mov eax [ebx+38h] +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
sar eax 1 +
cdq   +
add esi eax +
adc edi edx +
jmp loc_406841  +
cmp eax 1 +
jnz loc_40682A  +
mov ecx [ebx+0Ch] +
mov eax edx +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
sar eax 1 +
cdq   +
add esi eax +
adc edi edx +
jmp loc_406841  +
test eax eax +
jz loc_40683B  +
mov edi ds:?_BADOFF@std@@3_JB +
mov esi [edi] +
mov edi [edi+4] +
jmp loc_406841  +
mov edi [ebp+arg_8] +
mov esi [ebp+arg_4] +
test edi edi +
jl loc_406889  +
jg loc_40684B  +
test esi esi +
jb loc_406889  +
mov eax [ebx+0Ch] +
mov ecx [eax] +
mov eax [ebx+38h] +
sub eax ecx +
sar eax 1 +
cdq   +
cmp edi edx +
jg loc_406889  +
jl loc_406862  +
cmp esi eax +
ja loc_406889  +
sub ecx [ebp+arg_10] +
mov eax [ebx+30h] +
sar ecx 1 +
add ecx esi +
mov [ebp+arg_10] ecx +
sub [eax] ecx +
mov ecx [ebx+20h] +
mov eax [ebp+arg_10] +
add eax eax +
add [ecx] eax +
jmp loc_406893  +
mov esi [ebp+arg_4] +
mov eax esi +
mov edi [ebp+arg_8] +
or eax edi +
jz loc_406893  +
mov eax ds:?_BADOFF@std@@3_JB +
mov esi [eax] +
mov edi [eax+4] +
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
mov [eax+4] edi +
pop edi  +
mov [eax] esi +
pop esi  +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
movq qword ptr [eax+10h] xmm0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edx ecx +
push esi  +
push edi  +
mov edi [edx+1Ch] +
mov esi [edi] +
test esi esi +
jnz loc_4068D5  +
pop edi  +
mov eax 0FFFFh +
pop esi  +
retn   +
push ebx  +
mov ebx [edx+2Ch] +
mov ecx [ebx] +
lea ecx [esi+ecx*2] +
cmp esi ecx +
jnb loc_4068E9  +
mov ax [esi] +
pop ebx  +
pop edi  +
pop esi  +
retn   +
test byte ptr [edx+3Ch] 4 +
jnz loc_40691E  +
mov eax [edx+20h] +
mov eax [eax] +
test eax eax +
jz loc_40691E  +
cmp eax esi +
ja loc_406901  +
cmp [edx+38h] esi +
jbe loc_40691E  +
cmp [edx+38h] eax +
jnb loc_406909  +
mov [edx+38h] eax +
mov eax [edx+38h] +
sub eax [edi] +
sar eax 1 +
mov [ebx] eax +
mov eax [edx+1Ch] +
pop ebx  +
pop edi  +
pop esi  +
mov eax [eax] +
mov ax [eax] +
retn   +
pop ebx  +
pop edi  +
mov eax 0FFFFh +
pop esi  +
retn   +
***
mov edx ecx +
push esi  +
push edi  +
mov edi 0FFFFh +
mov eax [edx+1Ch] +
mov esi [eax] +
test esi esi +
jz loc_40698A  +
mov eax [edx+0Ch] +
cmp esi [eax] +
jbe loc_40698A  +
mov cx [ebp+arg_0] +
cmp di cx +
jz loc_406961  +
cmp cx [esi-2] +
jz loc_406961  +
test byte ptr [edx+3Ch] 2 +
jnz loc_40698A  +
mov eax [edx+2Ch] +
inc dword ptr [eax]  +
mov eax [edx+1Ch] +
add dword ptr [eax] 0FFFFFFFEh +
cmp di cx +
jz loc_406979  +
mov eax [edx+1Ch] +
mov eax [eax] +
mov [eax] cx +
xor edx edx +
movzx eax cx +
cmp cx di +
pop edi  +
cmovz eax edx +
pop esi  +
pop ebp  +
retn 4  +
mov ax di +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
mov esi ecx +
mov eax [esi+3Ch] +
test al 2 +
jz loc_4069BC  +
mov eax 0FFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
mov bx [ebp+8] +
mov ecx 0FFFFh +
cmp cx bx +
jnz loc_4069D5  +
pop ebx  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push edi  +
test al 8 +
jz loc_4069FD  +
mov edi [esi+20h] +
mov ecx [edi] +
test ecx ecx +
jz loc_4069FD  +
mov edx [esi+38h] +
cmp ecx edx +
jnb loc_4069FD  +
mov eax [esi+30h] +
mov eax [eax] +
mov [edi] edx +
lea ecx [ecx+eax*2] +
mov eax [esi+30h] +
sub ecx edx +
sar ecx 1 +
mov [eax] ecx +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_406A34  +
mov edx [esi+30h] +
mov edi [edx] +
lea eax [ecx+edi*2] +
cmp ecx eax +
jnb loc_406A30  +
lea ecx [edi-1] +
mov ax bx +
mov [edx] ecx +
mov edx [esi+20h] +
pop edi  +
mov esi [edx] +
lea ecx [esi+2] +
mov [edx] ecx +
mov [esi] bx +
pop ebx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
test ecx ecx +
jnz loc_406A38  +
xor edi edi +
jmp loc_406A48  +
mov eax [esi+30h] +
mov edi [eax] +
mov eax [esi+0Ch] +
add edi edi +
sub edi [eax] +
add edi ecx +
sar edi 1 +
mov ecx edi +
shr ecx 1 +
cmp ecx 20h +
jnb loc_406A58  +
mov ecx 20h +
jmp loc_406A60  +
test ecx ecx +
jz loc_406A73  +
mov eax 7FFFFFFFh +
sub eax ecx +
cmp eax edi +
jnb loc_406A6F  +
shr ecx 1 +
jnz loc_406A60  +
test ecx ecx +
jnz loc_406A81  +
pop edi  +
pop ebx  +
mov eax 0FFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
lea eax [ecx+edi] +
lea ecx [esi+40h] +
mov [ebp-8] eax +
push eax  +
call sub_403C30  +
mov ecx [esi+0Ch] +
mov ebx eax +
mov edx [ecx] +
mov [ebp-4] edx +
test edi edi +
jz loc_406AB3  +
lea ecx [edi+edi] +
push ecx  +
push edx  +
push ebx  +
call memcpy  +
mov edx [ebp-4] +
add esp 0Ch +
test edi edi +
jnz loc_406AF8  +
mov eax [esi+10h] +
mov ecx [ebp-8] +
mov [esi+38h] ebx +
mov [eax] ebx +
mov eax [esi+20h] +
mov [eax] ebx +
mov eax [esi+30h] +
mov [eax] ecx +
mov eax [esi+0Ch] +
test byte ptr [esi+3Ch] 4 +
mov [eax] ebx +
mov eax [esi+1Ch] +
jz loc_406AE8  +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
sar ebx 1 +
mov [eax] ebx +
jmp loc_406B7A  +
mov [eax] ebx +
mov eax [esi+2Ch] +
mov dword ptr [eax] 1 +
jmp loc_406B7A  +
mov eax [esi+38h] +
mov ecx [esi+10h] +
sub eax edx +
sar eax 1 +
lea eax [ebx+eax*2] +
mov [esi+38h] eax +
mov eax [esi+20h] +
mov eax [eax] +
sub eax edx +
sar eax 1 +
lea edx [ebx+eax*2] +
mov eax [ecx] +
sub eax [ebp-4] +
sar eax 1 +
lea eax [ebx+eax*2] +
mov [ecx] eax +
mov eax [esi+20h] +
mov ecx [ebp-8] +
add ecx ecx +
sub ecx edx +
mov [eax] edx +
add ecx ebx +
mov eax [esi+30h] +
sar ecx 1 +
mov [eax] ecx +
test byte ptr [esi+3Ch] 4 +
jz loc_406B52  +
mov eax [esi+0Ch] +
mov [eax] ebx +
mov eax [esi+1Ch] +
sar ebx 1 +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov [eax] ebx +
jmp loc_406B7A  +
mov eax [esi+20h] +
mov edx [eax] +
mov eax [esi+1Ch] +
mov eax [eax] +
sub eax [ebp-4] +
sar eax 1 +
lea ecx [ebx+eax*2] +
mov eax [esi+0Ch] +
sub edx ecx +
add edx 2 +
sar edx 1 +
mov [eax] ebx +
mov eax [esi+1Ch] +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
test byte ptr [esi+3Ch] 1 +
jz loc_406B8C  +
push edi  +
push dword ptr [ebp-4]  +
lea ecx [esi+40h] +
call sub_402E00  +
mov eax [esi+30h] +
or dword ptr [esi+3Ch] 1 +
pop edi  +
pop ebx  +
dec dword ptr [eax]  +
mov ecx [esi+20h] +
pop esi  +
mov edx [ecx] +
lea eax [edx+2] +
mov [ecx] eax +
mov ax [ebp+8] +
mov [edx] ax +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4206B2  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_14] esi +
mov [ebp+var_10] 0 +
lea ecx [esi+68h] +
mov dword ptr [esi] offset unk_428204 +
mov dword ptr [esi+10h] offset unk_4281B4 +
call ds:??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ  +
push 0  +
lea edi [esi+18h] +
mov [ebp+var_4] 0 +
push edi  +
mov ecx esi +
mov [ebp+var_10] 1 +
call ds:??0?$basic_iostream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@@Z  +
mov [ebp+var_4] 1 +
mov eax [esi] +
mov eax [eax+4] +
mov dword ptr [esi+eax] offset off_4281C0 +
mov eax [esi] +
mov ecx [eax+4] +
mov [ebp+var_18] edi +
lea eax [ecx-68h] +
mov [ecx+esi-4] eax +
mov ecx edi +
call ds:??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ  +
mov eax [ebp+arg_0] +
mov byte ptr [ebp+var_4] 2 +
mov dword ptr [edi] offset off_428178 +
cmp dword ptr [eax+14h] 10h +
mov ecx [eax+10h] +
jb loc_406C57  +
mov eax [eax] +
push 0  +
push ecx  +
push eax  +
mov ecx edi +
call sub_407DF0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_4] +
add esi [ebp+arg_C] +
push edi  +
adc ebx [ebp+arg_10] +
mov edi ecx +
mov [esp+20h+var_4] eax +
mov eax [edi+20h] +
mov eax [eax] +
test eax eax +
jz loc_406CB2  +
cmp [edi+38h] eax +
jnb loc_406CB2  +
mov [edi+38h] eax +
mov eax ds:?_BADOFF@std@@3_JB +
mov ecx [eax] +
mov eax [eax+4] +
mov [esp+20h+var_10] ecx +
mov [esp+20h+var_C] eax +
cmp esi ecx +
jnz loc_406CD0  +
cmp ebx eax +
jz loc_406D8A  +
mov edx [ebp+arg_1C] +
test dl 1 +
jz loc_406D47  +
mov eax [edi+1Ch] +
mov eax [eax] +
mov [esp+20h+var_8] eax +
test eax eax +
jz loc_406D43  +
test ebx ebx +
jl loc_406D3D  +
jg loc_406CEF  +
test esi esi +
jb loc_406D3D  +
mov eax [edi+0Ch] +
mov ecx [eax] +
mov eax [edi+38h] +
sub eax ecx +
cdq   +
cmp ebx edx +
jg loc_406D39  +
jl loc_406D04  +
cmp esi eax +
ja loc_406D39  +
mov eax [edi+2Ch] +
sub ecx [esp+20h+var_8] +
add ecx esi +
sub [eax] ecx +
mov eax [edi+1Ch] +
add [eax] ecx +
test byte ptr [ebp+arg_1C] 2 +
jz loc_406D8A  +
mov edx [edi+20h] +
cmp dword ptr [edx] 0 +
jz loc_406D8A  +
mov eax [edi+30h] +
mov ecx [eax] +
mov eax [edi+1Ch] +
add ecx [edx] +
mov eax [eax] +
sub ecx eax +
mov [edx] eax +
mov eax [edi+30h] +
mov [eax] ecx +
jmp loc_406D8A  +
mov ecx [esp+20h+var_10] +
mov ebx [esp+20h+var_C] +
jmp loc_406D88  +
mov eax [esp+20h+var_C] +
test dl 2 +
jz loc_406D86  +
mov edx [edi+20h] +
cmp dword ptr [edx] 0 +
jz loc_406D86  +
test ebx ebx +
jl loc_406D3D  +
jg loc_406D5E  +
test esi esi +
jb loc_406D3D  +
mov eax [edi+0Ch] +
mov ecx [eax] +
mov eax [edi+38h] +
sub eax ecx +
cdq   +
cmp ebx edx +
jg loc_406D39  +
jl loc_406D73  +
cmp esi eax +
ja loc_406D39  +
mov eax [edi+20h] +
sub ecx [eax] +
mov eax [edi+30h] +
add ecx esi +
sub [eax] ecx +
mov eax [edi+20h] +
add [eax] ecx +
jmp loc_406D8A  +
mov ebx eax +
mov esi ecx +
mov eax [esp+20h+var_4] +
xorps xmm0 xmm0 +
pop edi  +
mov [eax] esi +
mov [eax+4] ebx +
pop esi  +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
movq qword ptr [eax+10h] xmm0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
push ecx  +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov edx [ebx+20h] +
mov eax [edx] +
test eax eax +
jz loc_406DDA  +
cmp [ebx+38h] eax +
jnb loc_406DDA  +
mov [ebx+38h] eax +
mov ecx [ebp+arg_10] +
test cl 1 +
jz loc_406EB6  +
mov eax [ebx+1Ch] +
mov esi [eax] +
mov [ebp+var_4] esi +
test esi esi +
jz loc_406EB6  +
mov eax [ebp+arg_C] +
cmp eax 2 +
jnz loc_406E13  +
mov ecx [ebx+0Ch] +
mov eax [ebx+38h] +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
cdq   +
add esi eax +
adc edi edx +
jmp loc_406E48  +
cmp eax 1 +
jnz loc_406E31  +
test cl 2 +
jnz loc_406E35  +
mov ecx [ebx+0Ch] +
mov eax esi +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
cdq   +
add esi eax +
adc edi edx +
jmp loc_406E48  +
test eax eax +
jz loc_406E42  +
mov edi ds:?_BADOFF@std@@3_JB +
mov esi [edi] +
mov edi [edi+4] +
jmp loc_406E48  +
mov edi [ebp+arg_8] +
mov esi [ebp+arg_4] +
test edi edi +
jl loc_406F51  +
jg loc_406E5A  +
test esi esi +
jb loc_406F51  +
mov eax [ebx+0Ch] +
mov ecx [eax] +
mov eax [ebx+38h] +
sub eax ecx +
cdq   +
cmp edi edx +
jg loc_406F51  +
jl loc_406E77  +
cmp esi eax +
ja loc_406F51  +
mov eax [ebx+2Ch] +
sub ecx [ebp+var_4] +
add ecx esi +
sub [eax] ecx +
mov eax [ebx+1Ch] +
add [eax] ecx +
test byte ptr [ebp+arg_10] 2 +
jz loc_406F5B  +
mov edx [ebx+20h] +
cmp dword ptr [edx] 0 +
jz loc_406F5B  +
mov eax [ebx+30h] +
mov ecx [eax] +
mov eax [ebx+1Ch] +
add ecx [edx] +
mov eax [eax] +
sub ecx eax +
mov [edx] eax +
mov eax [ebx+30h] +
mov [eax] ecx +
jmp loc_406F5B  +
test cl 2 +
jz loc_406F45  +
mov edx [edx] +
mov [ebp+arg_10] edx +
test edx edx +
jz loc_406F45  +
mov eax [ebp+arg_C] +
cmp eax 2 +
jnz loc_406EE5  +
mov ecx [ebx+0Ch] +
mov eax [ebx+38h] +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
cdq   +
add esi eax +
adc edi edx +
jmp loc_406F15  +
cmp eax 1 +
jnz loc_406EFE  +
mov ecx [ebx+0Ch] +
mov eax edx +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_8] +
sub eax [ecx] +
cdq   +
add esi eax +
adc edi edx +
jmp loc_406F15  +
test eax eax +
jz loc_406F0F  +
mov edi ds:?_BADOFF@std@@3_JB +
mov esi [edi] +
mov edi [edi+4] +
jmp loc_406F15  +
mov edi [ebp+arg_8] +
mov esi [ebp+arg_4] +
test edi edi +
jl loc_406F51  +
jg loc_406F1F  +
test esi esi +
jb loc_406F51  +
mov eax [ebx+0Ch] +
mov ecx [eax] +
mov eax [ebx+38h] +
sub eax ecx +
cdq   +
cmp edi edx +
jg loc_406F51  +
jl loc_406F34  +
cmp esi eax +
ja loc_406F51  +
mov eax [ebx+30h] +
sub ecx [ebp+arg_10] +
add ecx esi +
sub [eax] ecx +
mov eax [ebx+20h] +
add [eax] ecx +
jmp loc_406F5B  +
mov esi [ebp+arg_4] +
mov eax esi +
mov edi [ebp+arg_8] +
or eax edi +
jz loc_406F5B  +
mov eax ds:?_BADOFF@std@@3_JB +
mov esi [eax] +
mov edi [eax+4] +
mov eax [ebp+arg_0] +
xorps xmm0 xmm0 +
mov [eax+4] edi +
pop edi  +
mov [eax] esi +
pop esi  +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
movq qword ptr [eax+10h] xmm0 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
mov edx [esi] +
test edx edx +
jnz loc_406F9F  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
push edi  +
mov edi [ecx+2Ch] +
mov eax [edi] +
add eax edx +
cmp edx eax +
jnb loc_406FB1  +
movzx eax byte ptr [edx] +
pop edi  +
pop esi  +
retn   +
test byte ptr [ecx+3Ch] 4 +
jnz loc_406FE3  +
mov eax [ecx+20h] +
mov eax [eax] +
test eax eax +
jz loc_406FE3  +
cmp eax edx +
ja loc_406FC9  +
cmp [ecx+38h] edx +
jbe loc_406FE3  +
cmp [ecx+38h] eax +
jnb loc_406FD1  +
mov [ecx+38h] eax +
mov eax [ecx+38h] +
sub eax [esi] +
mov [edi] eax +
mov eax [ecx+1Ch] +
pop edi  +
pop esi  +
mov eax [eax] +
movzx eax byte ptr [eax] +
retn   +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
***
mov edx ecx +
push esi  +
mov eax [edx+1Ch] +
mov esi [eax] +
test esi esi +
jz loc_40703F  +
mov eax [edx+0Ch] +
cmp esi [eax] +
jbe loc_40703F  +
mov ecx [ebp+arg_0] +
cmp ecx 0FFFFFFFFh +
jz loc_407019  +
cmp cl [esi-1] +
jz loc_407019  +
test byte ptr [edx+3Ch] 2 +
jnz loc_40703F  +
mov eax [edx+2Ch] +
inc dword ptr [eax]  +
mov eax [edx+1Ch] +
dec dword ptr [eax]  +
cmp ecx 0FFFFFFFFh +
jz loc_407036  +
mov eax [edx+1Ch] +
pop esi  +
mov eax [eax] +
mov [eax] cl +
mov eax ecx +
pop ebp  +
retn 4  +
xor ecx ecx +
mov eax ecx +
pop esi  +
pop ebp  +
retn 4  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push esi  +
mov esi ecx +
mov eax [esi+3Ch] +
test al 2 +
jz loc_40706A  +
or eax 0FFFFFFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
mov ebx [ebp+8] +
cmp ebx 0FFFFFFFFh +
jnz loc_40707D  +
pop ebx  +
xor eax eax +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push edi  +
test al 8 +
jz loc_4070A5  +
mov eax [esi+20h] +
mov edx [eax] +
test edx edx +
jz loc_4070A5  +
mov edi [esi+38h] +
cmp edx edi +
jnb loc_4070A5  +
mov eax [esi+30h] +
mov ecx [eax] +
mov eax [esi+20h] +
add ecx edx +
sub ecx edi +
mov [eax] edi +
mov eax [esi+30h] +
mov [eax] ecx +
mov eax [esi+20h] +
mov edx [eax] +
test edx edx +
jz loc_4070D8  +
mov edi [esi+30h] +
mov ecx [edi] +
lea eax [ecx+edx] +
cmp edx eax +
jnb loc_4070D4  +
dec ecx  +
mov eax ebx +
mov [edi] ecx +
mov edx [esi+20h] +
pop edi  +
mov esi [edx] +
lea ecx [esi+1] +
mov [edx] ecx +
mov [esi] bl +
pop ebx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
test edx edx +
jnz loc_4070DC  +
xor edi edi +
jmp loc_4070E8  +
mov eax [esi+30h] +
mov ecx [esi+0Ch] +
mov edi [eax] +
sub edi [ecx] +
add edi edx +
mov ecx edi +
shr ecx 1 +
cmp ecx 20h +
jnb loc_4070F8  +
mov ecx 20h +
jmp loc_407100  +
test ecx ecx +
jz loc_407113  +
mov eax 7FFFFFFFh +
sub eax ecx +
cmp eax edi +
jnb loc_40710F  +
shr ecx 1 +
jnz loc_407100  +
test ecx ecx +
jnz loc_40711F  +
pop edi  +
pop ebx  +
or eax 0FFFFFFFFh +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
lea eax [ecx+edi] +
lea ecx [esi+40h] +
mov [ebp-8] eax +
push eax  +
call sub_403C90  +
mov ecx [esi+0Ch] +
mov ebx eax +
mov ecx [ecx] +
mov [ebp-4] ecx +
test edi edi +
jz loc_40714E  +
push edi  +
push ecx  +
push ebx  +
call memcpy  +
mov ecx [ebp-4] +
add esp 0Ch +
test edi edi +
jnz loc_40718B  +
mov eax [esi+10h] +
mov edx [ebp-8] +
mov [esi+38h] ebx +
mov [eax] ebx +
mov eax [esi+20h] +
mov [eax] ebx +
mov eax [esi+30h] +
mov [eax] edx +
mov eax [esi+0Ch] +
test byte ptr [esi+3Ch] 4 +
mov [eax] ebx +
mov eax [esi+1Ch] +
jz loc_40717E  +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov [eax] ebx +
jmp loc_4071F2  +
mov [eax] ebx +
mov eax [esi+2Ch] +
mov dword ptr [eax] 1 +
jmp loc_4071F2  +
mov eax ebx +
sub eax ecx +
add [esi+38h] eax +
mov eax [esi+20h] +
mov edx [eax] +
mov eax ebx +
sub eax [ebp-4] +
sub edx ecx +
mov ecx [esi+10h] +
add edx ebx +
add [ecx] eax +
mov ecx ebx +
mov eax [esi+20h] +
sub ecx edx +
add ecx [ebp-8] +
mov [eax] edx +
mov eax [esi+30h] +
mov [eax] ecx +
test byte ptr [esi+3Ch] 4 +
jz loc_4071D1  +
mov eax [esi+0Ch] +
mov [eax] ebx +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov [eax] ebx +
jmp loc_4071F2  +
mov eax [esi+20h] +
mov edx [eax] +
mov eax [esi+1Ch] +
mov ecx [eax] +
mov eax [esi+0Ch] +
sub ecx [ebp-4] +
add ecx ebx +
sub edx ecx +
mov [eax] ebx +
inc edx  +
mov eax [esi+1Ch] +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
test byte ptr [esi+3Ch] 1 +
jz loc_407204  +
push edi  +
push dword ptr [ebp-4]  +
lea ecx [esi+40h] +
call sub_402E70  +
mov eax [esi+30h] +
or dword ptr [esi+3Ch] 1 +
pop edi  +
pop ebx  +
dec dword ptr [eax]  +
mov ecx [esi+20h] +
pop esi  +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov eax [ebp+8] +
mov [edx] al +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi-68h] +
lea ebx [edi-68h] +
lea ecx [edi-50h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-68h] offset off_428210 +
mov eax [ebx] +
mov edx [eax+4] +
lea eax [edx-68h] +
mov [edx+edi-6Ch] eax +
mov dword ptr [edi-50h] offset off_4281C8 +
call sub_407980  +
lea ecx [edi-50h] +
call ds:??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
lea ecx [edi-48h] +
call ds:??1?$basic_iostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
mov ecx edi +
call ds:??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
test [ebp+arg_0] 1 +
jz loc_407292  +
push 0B0h  +
push ebx  +
call sub_41EC9F  +
add esp 8 +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_4281C8 +
call sub_407980  +
mov ecx esi +
call ds:??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
test [ebp+arg_0] 1 +
jz loc_4072CA  +
push 44h  +
push esi  +
call sub_41EC9F  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi-68h] +
lea ebx [edi-68h] +
lea ecx [edi-50h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-68h] offset off_4281C0 +
mov eax [ebx] +
mov edx [eax+4] +
lea eax [edx-68h] +
mov [edx+edi-6Ch] eax +
mov dword ptr [edi-50h] offset off_428178 +
call sub_407B20  +
lea ecx [edi-50h] +
call ds:??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ  +
lea ecx [edi-48h] +
call ds:??1?$basic_iostream@DU?$char_traits@D@std@@@std@@UAE@XZ  +
mov ecx edi +
call ds:??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ  +
test [ebp+arg_0] 1 +
jz loc_407342  +
push 0B0h  +
push ebx  +
call sub_41EC9F  +
add esp 8 +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_428178 +
call sub_407B20  +
mov ecx esi +
call ds:??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ  +
test [ebp+arg_0] 1 +
jz loc_40737A  +
push 44h  +
push esi  +
call sub_41EC9F  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
add eax 10h +
retn   +
***
push dword ptr [ecx]  +
call j_free  +
pop ecx  +
retn   +
***
push ecx  +
mov eax [ecx] +
push eax  +
push dword ptr [eax]  +
lea eax [ebp+var_4] +
push eax  +
call loc_407C10  +
mov esp ebp +
pop ebp  +
retn   +
***
add eax 4 +
retn   +
***
add eax 8 +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
mov esi edi +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_407428  +
push dword ptr [esi+8]  +
mov ecx ebx +
call sub_4073F0  +
mov esi [esi] +
lea ecx [edi+10h] +
call sub_408E10  +
push edi  +
call j_free  +
add esp 4 +
mov edi esi +
cmp byte ptr [esi+0Dh] 0 +
jz loc_407403  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov eax 2AAAAAABh +
push esi  +
mov ecx [ebx+8] +
mov edx ecx +
mov esi [ebx+4] +
sub edx esi +
imul  edx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
cmp eax 1 +
jnb loc_4074B5  +
sub esi [ebx] +
mov eax 2AAAAAABh +
imul  esi +
push edi  +
sar edx 2 +
mov eax 0AAAAAAAh +
mov edi edx +
shr edi 1Fh +
add edi edx +
sub eax edi +
cmp eax 1 +
jnb loc_40747F  +
push offset aVectorTTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
sub ecx [ebx] +
mov eax 2AAAAAABh +
imul  ecx +
xor ecx ecx +
inc edi  +
sar edx 2 +
mov esi edx +
shr esi 1Fh +
add esi edx +
mov edx 0AAAAAAAh +
mov eax esi +
shr eax 1 +
sub edx eax +
add eax esi +
cmp edx esi +
cmovnb ecx eax +
cmp ecx edi +
cmovnb edi ecx +
mov ecx ebx +
push edi  +
call sub_407CE0  +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov dword ptr [ebp-4] 0 +
test eax eax +
mov ebx ecx +
cmovns edi eax +
mov eax [ebp+10h] +
xor edx edx +
test eax eax +
cmovns edx eax +
mov eax 7FFFFFFFh +
sub eax edi +
cmp eax edx +
jl loc_4075B6  +
mov ecx [ebx] +
lea eax [edx+edi] +
mov ecx [ecx-0Ch] +
cmp eax ecx +
jle loc_407503  +
mov edx ecx +
sub edx edi +
xor esi esi +
cmp edi ecx +
cmovle esi edx +
test edi edi +
jnz loc_407527  +
cmp esi ecx +
jnz loc_407527  +
mov ecx [ebp+8] +
push ebx  +
call loc_402CE0  +
mov eax [ebp+8] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov ecx [ebx] +
mov ecx [ecx-10h] +
test ecx ecx +
jz loc_40753B  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov edx eax +
test edx edx +
jnz loc_407549  +
call sub_401530  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+10h]  +
mov edx eax +
mov ecx [ebx] +
lea ebx [ecx+edi*2] +
test edx edx +
jz loc_40759D  +
test ebx ebx +
jnz loc_40755A  +
test esi esi +
jnz loc_4075A7  +
mov eax [edx] +
mov ecx edx +
push 2  +
push esi  +
call dword ptr [eax]  +
test eax eax +
jz loc_4075B1  +
mov edi [ebp+8] +
add eax 10h +
mov [edi] eax +
test esi esi +
js loc_4075A7  +
cmp esi [eax-8] +
jg loc_4075A7  +
mov [eax-0Ch] esi +
lea edx [esi+esi] +
mov ecx [edi] +
xor eax eax +
push edx  +
push ebx  +
mov [edx+ecx] ax +
mov ecx [edi] +
call sub_401130  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 80004005h  +
call loc_401220  +
push 80070057h  +
call loc_401220  +
call loc_403B80  +
push 80070216h  +
call loc_401220  +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx ecx +
mov ecx [ebp+8] +
push esi  +
push edi  +
mov edi ecx +
mov eax [ebx] +
sub edi eax +
sar edi 1 +
mov esi [eax-0Ch] +
mov eax [ebp+0Ch] +
mov [ebp-4] esi +
test eax eax +
js loc_407678  +
test ecx ecx +
jnz loc_407600  +
xor edx edx +
mov [ebp+0Ch] edx +
jmp loc_407610  +
push eax  +
push ecx  +
call ds:wcsnlen  +
add esp 8 +
mov [ebp+0Ch] eax +
mov edx eax +
mov ecx 7FFFFFFFh +
sub ecx edx +
cmp ecx esi +
jl loc_407682  +
add esi edx +
js loc_40768C  +
mov eax [ebx] +
mov ecx 1 +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax esi +
or ecx eax +
jge loc_40763D  +
push esi  +
mov ecx ebx +
call sub_403CE0  +
mov edx [ebp+0Ch] +
mov eax [ebx] +
mov ecx [ebp-4] +
lea eax [eax+edi*2] +
cmp edi ecx +
jbe loc_40764C  +
mov eax [ebp+8] +
add edx edx +
push edx  +
push eax  +
mov eax [ebx] +
lea ecx [eax+ecx*2] +
call sub_401130  +
mov eax [ebx] +
add esp 8 +
cmp esi [eax-8] +
jg loc_407678  +
mov [eax-0Ch] esi +
xor ecx ecx +
mov eax [ebx] +
pop edi  +
mov [eax+esi*2] cx +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 80070057h  +
call loc_401220  +
push 80070057h  +
call loc_401220  +
push 80070057h  +
call loc_401220  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push edi  +
mov edi ecx +
test ebx ebx +
jnz loc_4076B6  +
mov [edi] ebx +
pop edi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov ecx ebx +
lea edx [ecx+2] +
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
cmp word ptr [edx] 0 +
jnz loc_4077AD  +
xor eax eax +
push eax  +
push edx  +
call sub_402590  +
pop esi  +
pop ebp  +
retn 4  +
mov eax edx +
push edi  +
lea edi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_4077B3  +
sub eax edi +
mov ecx esi +
pop edi  +
sar eax 1 +
push eax  +
push edx  +
call sub_402590  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_8] +
push ebx  +
mov ebx ecx +
mov ecx [ebp+arg_4] +
test edx edx +
jnz loc_4077FC  +
cmp ecx [ebx+10h] +
ja loc_4077FC  +
mov eax ecx +
pop ebx  +
pop ebp  +
retn 0Ch  +
push esi  +
mov esi [ebx+10h] +
push edi  +
cmp ecx esi +
jnb loc_407874  +
sub esi ecx +
cmp edx esi +
ja loc_407874  +
mov eax 1 +
sub eax edx +
add esi eax +
cmp dword ptr [ebx+14h] 10h +
jb loc_40781E  +
mov eax [ebx] +
jmp loc_407820  +
mov eax ebx +
add ecx eax +
mov [ebp+arg_4] ecx +
test esi esi +
jz loc_407874  +
mov eax [ebp+arg_0] +
push esi  +
movsx eax byte ptr [eax] +
push eax  +
push ecx  +
call ds:memchr  +
mov edi eax +
add esp 0Ch +
test edi edi +
jz loc_407874  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
push edi  +
call loc_4018B0  +
add esp 0Ch +
test eax eax +
jz loc_407861  +
mov ecx [ebp+arg_4] +
sub ecx edi +
dec ecx  +
add esi ecx +
lea ecx [edi+1] +
jmp loc_407822  +
cmp dword ptr [ebx+14h] 10h +
jb loc_407869  +
mov ebx [ebx] +
sub edi ebx +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
pop edi  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
retn   +
***
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_4] +
push edi  +
mov eax [ebx+10h] +
cmp eax ecx +
jnb loc_4078B0  +
push offset aInvalidStringP  +
call ds:?_Xout_of_range@std@@YAXPBD@Z  +
mov edx [esi+10h] +
sub eax ecx +
mov ecx [ebp+arg_8] +
cmp ecx eax +
cmova ecx eax +
mov eax edx +
not eax  +
mov [ebp+arg_8] ecx +
cmp eax ecx +
ja loc_4078D3  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
lea edi [edx+ecx] +
test ecx ecx +
jz loc_407975  +
cmp edi 0FFFFFFFEh +
jbe loc_4078EE  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
cmp [esi+14h] edi +
jnb loc_407915  +
push edx  +
push edi  +
mov ecx esi +
call sub_403940  +
mov ecx [ebp+arg_8] +
test edi edi +
jz loc_407975  +
cmp dword ptr [ebx+14h] 10h +
jb loc_40790B  +
mov ebx [ebx] +
cmp dword ptr [esi+14h] 10h +
jb loc_40793C  +
mov edx [esi] +
jmp loc_40793E  +
test edi edi +
jnz loc_407903  +
mov [esi+10h] edi +
cmp dword ptr [esi+14h] 10h +
jb loc_407930  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 0Ch  +
mov edx esi +
test ecx ecx +
jz loc_407957  +
mov eax [ebp+arg_4] +
add eax ebx +
push ecx  +
push eax  +
mov eax [esi+10h] +
add eax edx +
push eax  +
call memcpy  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_40796F  +
mov eax [esi] +
mov byte ptr [eax+edi] 0 +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
test byte ptr [esi+3Ch] 1 +
jz loc_4079BC  +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_40799C  +
mov eax [esi+30h] +
mov eax [eax] +
lea ecx [ecx+eax*2] +
jmp loc_4079A9  +
mov eax [esi+2Ch] +
mov ecx [eax] +
mov eax [esi+1Ch] +
mov eax [eax] +
lea ecx [eax+ecx*2] +
mov eax [esi+0Ch] +
mov eax [eax] +
sub ecx eax +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [esi+40h] +
call sub_402E00  +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+10h] +
mov dword ptr [eax] 0 +
mov eax [esi+20h] +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
and dword ptr [esi+3Ch] 0FFFFFFFEh +
mov dword ptr [esi+38h] 0 +
pop esi  +
retn   +
***
and esp 0FFFFFFF8h +
sub esp 24h +
mov eax dword_43000C +
xor eax esp +
mov [esp+24h+var_4] eax +
mov edx ecx +
mov [esp+24h+var_20] 0 +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [edx+3Ch] +
test cl 2 +
jnz loc_407A83  +
mov eax [edx+20h] +
mov eax [eax] +
test eax eax +
jz loc_407A83  +
mov ecx [edx+38h] +
cmp ecx eax +
cmovb ecx eax +
mov eax [edx+10h] +
xor edx edx +
mov eax [eax] +
sub ecx eax +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [esp+30h+var_1C] +
mov [esp+30h+var_8] 7 +
mov [esp+30h+var_C] 0 +
mov word ptr [esp+30h+var_1C] dx +
call sub_402590  +
lea eax [esp+28h+var_1C] +
mov ecx esi +
push eax  +
call sub_402750  +
mov ecx [esp+28h+var_8] +
cmp ecx 8 +
jb loc_407B01  +
inc ecx  +
push ecx  +
jmp loc_407AF4  +
test cl 4 +
jnz loc_407AC6  +
mov eax [edx+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_407AC6  +
mov eax [edx+2Ch] +
mov eax [eax] +
lea ecx [ecx+eax*2] +
mov eax [edx+0Ch] +
xor edx edx +
mov eax [eax] +
sub ecx eax +
sar ecx 1 +
push ecx  +
push eax  +
lea ecx [esp+30h+var_1C] +
mov [esp+30h+var_8] 7 +
mov [esp+30h+var_C] 0 +
mov word ptr [esp+30h+var_1C] dx +
call sub_402590  +
jmp loc_407ADD  +
xor eax eax +
mov [esp+28h+var_8] 7 +
mov [esp+28h+var_C] 0 +
mov word ptr [esp+28h+var_1C] ax +
lea eax [esp+28h+var_1C] +
mov ecx esi +
push eax  +
call sub_402750  +
mov eax [esp+28h+var_8] +
cmp eax 8 +
jb loc_407B01  +
inc eax  +
push eax  +
push [esp+2Ch+var_1C]  +
lea ecx [esp+30h+var_1C] +
call sub_402E00  +
mov ecx [esp+28h+var_4] +
mov eax esi +
pop esi  +
xor ecx esp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 4  +
***
test byte ptr [esi+3Ch] 1 +
jz loc_407B8E  +
mov eax [esi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_407B3B  +
mov eax [esi+30h] +
mov edx [eax] +
add edx ecx +
jmp loc_407B45  +
mov eax [esi+2Ch] +
mov ecx [esi+1Ch] +
mov edx [eax] +
add edx [ecx] +
mov eax [esi+0Ch] +
mov eax [eax] +
sub edx eax +
cmp edx 1000h +
jb loc_407B85  +
test al 1Fh +
jz loc_407B5E  +
call ds:_invalid_parameter_noinfo_noreturn  +
mov ecx [eax-4] +
cmp ecx eax +
jb loc_407B6B  +
call ds:_invalid_parameter_noinfo_noreturn  +
sub eax ecx +
cmp eax 4 +
jnb loc_407B78  +
call ds:_invalid_parameter_noinfo_noreturn  +
cmp eax 23h +
jbe loc_407B83  +
call ds:_invalid_parameter_noinfo_noreturn  +
mov eax ecx +
push eax  +
call j_free  +
add esp 4 +
mov eax [esi+0Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+10h] +
mov dword ptr [eax] 0 +
mov eax [esi+20h] +
mov dword ptr [eax] 0 +
mov eax [esi+30h] +
mov dword ptr [eax] 0 +
and dword ptr [esi+3Ch] 0FFFFFFFEh +
mov dword ptr [esi+38h] 0 +
pop esi  +
retn   +
***
mov eax [ebp+arg_0] +
add eax 10h +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
add eax 8 +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
add eax 0Dh +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
mov edx [ebp+0Ch] +
mov eax [ebp+8] +
push ebx  +
mov ebx ecx +
mov [ebp-4] eax +
push esi  +
mov esi [ebp+10h] +
push edi  +
mov edi [ebx] +
cmp edx [edi] +
jnz loc_407C48  +
cmp esi edi +
jnz loc_407C48  +
call sub_405DF0  +
mov ecx [ebx] +
mov eax [ebp-4] +
pop edi  +
pop esi  +
mov ecx [ecx] +
mov [eax] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
cmp edx esi +
jz loc_407CB5  +
mov eax [ebp+arg_0] +
mov ecx [ecx] +
mov [eax] ecx +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov [ebp+var_8] esi +
push edi  +
test ebx ebx +
jnz loc_407CF9  +
xor edi edi +
jmp loc_407D40  +
cmp ebx 0AAAAAAAh +
jbe loc_407D07  +
call ds:?_Xbad_alloc@std@@YAXXZ  +
lea eax [ebx+ebx*2] +
shl eax 3 +
cmp eax 1000h +
jb loc_407D35  +
lea ecx [eax+23h] +
cmp ecx eax +
ja loc_407D21  +
call ds:?_Xbad_alloc@std@@YAXXZ  +
push ecx  +
call sub_41EC6C  +
add esp 4 +
lea edi [eax+23h] +
and edi 0FFFFFFE0h +
mov [edi-4] eax +
jmp loc_407D40  +
push eax  +
call sub_41EC6C  +
add esp 4 +
mov edi eax +
mov edx [esi+4] +
push ecx  +
mov byte ptr [ebp+var_4] 0 +
push [ebp+var_4]  +
push ecx  +
mov ecx [esi] +
push edi  +
call sub_409180  +
mov ecx [esi+4] +
mov eax 2AAAAAABh +
sub ecx [esi] +
add esp 10h +
imul  ecx +
sar edx 2 +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
mov edx [esi] +
mov [ebp+var_4] ecx +
test edx edx +
jz loc_407DB0  +
push [ebp+var_C]  +
push esi  +
push dword ptr [esi+4]  +
push edx  +
call sub_404630  +
mov ecx [ebp+var_8] +
mov eax 2AAAAAABh +
mov esi [esi] +
add esp 10h +
mov ecx [ecx+8] +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
mov esi [ebp+var_8] +
mov ecx esi +
call sub_402D60  +
mov ecx [ebp+var_4] +
lea eax [ebx+ebx*2] +
lea eax [edi+eax*8] +
mov [esi+8] eax +
lea eax [ecx+ecx*2] +
lea eax [edi+eax*8] +
mov [esi+4] eax +
mov [esi] edi +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx] +
mov ecx [eax-10h] +
test ecx ecx +
jz loc_407DE2  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
test eax eax +
jnz locret_407DEE  +
call sub_401530  +
mov ecx eax +
mov edx [eax] +
jmp dword ptr [edx+10h]  +
retn   +
***
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi ecx +
mov dword ptr [esi+38h] 0 +
mov [esi+3Ch] eax +
test ebx ebx +
jz loc_407E89  +
and eax 6 +
cmp al 6 +
jz loc_407E89  +
push edi  +
push ebx  +
lea ecx [esi+40h] +
call sub_403C90  +
push ebx  +
push [ebp+arg_0]  +
mov edi eax +
push edi  +
call memcpy  +
add esp 0Ch +
lea ecx [edi+ebx] +
test byte ptr [esi+3Ch] 4 +
mov [esi+38h] ecx +
jnz loc_407E46  +
mov eax [esi+0Ch] +
mov [eax] edi +
mov eax [esi+1Ch] +
mov [eax] edi +
mov eax [esi+2Ch] +
mov [eax] ebx +
mov eax [esi+3Ch] +
test al 2 +
jnz loc_407E84  +
test al 18h +
mov edx edi +
mov eax [esi+10h] +
cmovnz edx ecx +
mov ecx edi +
sub ecx edx +
add ecx ebx +
mov [eax] edi +
mov eax [esi+20h] +
mov [eax] edx +
mov eax [esi+30h] +
mov [eax] ecx +
mov eax [esi+1Ch] +
cmp dword ptr [eax] 0 +
jnz loc_407E84  +
mov eax [esi+0Ch] +
mov [eax] edi +
mov eax [esi+1Ch] +
mov dword ptr [eax] 0 +
mov eax [esi+2Ch] +
mov [eax] edi +
or dword ptr [esi+3Ch] 1 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
mov ecx [ecx] +
cmp ecx [eax] +
setnz al  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+8] +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
mov ebx esi +
push edi  +
mov [ebp-4] ecx +
mov [ebp-8] eax +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_407F0D  +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407EEC  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407F0A  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_407EE0  +
jmp loc_407F0A  +
mov eax [esi+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407F08  +
cmp esi [eax+8] +
jnz loc_407F08  +
mov esi eax +
mov [ebp+0Ch] esi +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_407EF5  +
mov esi eax +
mov [ebp+0Ch] esi +
mov ecx [ebx] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_407F1A  +
mov edi [ebx+8] +
jmp loc_407F32  +
mov eax [ebx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_407F27  +
mov edi ecx +
jmp loc_407F32  +
mov edi [esi+8] +
cmp esi ebx +
jnz loc_407FB7  +
cmp byte ptr [edi+0Dh] 0 +
mov edx [ebx+4] +
jnz loc_407F3E  +
mov [edi+4] edx +
mov eax [ebp-4] +
mov eax [eax] +
cmp [eax+4] ebx +
jnz loc_407F4D  +
mov [eax+4] edi +
jmp loc_407F58  +
cmp [edx] ebx +
jnz loc_407F55  +
mov [edx] edi +
jmp loc_407F58  +
mov [edx+8] edi +
mov eax [ebp-4] +
mov esi [eax] +
cmp [esi] ebx +
jnz loc_407F84  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_407F6B  +
mov ecx edx +
jmp loc_407F82  +
mov eax [edi] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407F7F  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_407F75  +
mov eax [ebp-4] +
mov [esi] ecx +
mov esi [eax] +
cmp [esi+8] ebx +
jnz loc_408010  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_407F9C  +
mov ecx edx +
mov [esi+8] ecx +
jmp loc_408010  +
mov eax [edi+8] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_407FB2  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_407FA7  +
mov [esi+8] ecx +
jmp loc_408010  +
mov [ecx+4] esi +
mov eax [ebx] +
mov [esi] eax +
cmp esi [ebx+8] +
jnz loc_407FC7  +
mov edx esi +
jmp loc_407FE1  +
cmp byte ptr [edi+0Dh] 0 +
mov edx [esi+4] +
jnz loc_407FD3  +
mov [edi+4] edx +
mov [edx] edi +
mov eax [ebx+8] +
mov [esi+8] eax +
mov eax [ebx+8] +
mov [eax+4] esi +
mov eax [ebp-4] +
mov eax [eax] +
cmp [eax+4] ebx +
jnz loc_407FF0  +
mov [eax+4] esi +
jmp loc_407FFE  +
mov eax [ebx+4] +
cmp [eax] ebx +
jnz loc_407FFB  +
mov [eax] esi +
jmp loc_407FFE  +
mov [eax+8] esi +
mov eax [ebx+4] +
mov [esi+4] eax +
mov al [ebx+0Ch] +
mov cl [esi+0Ch] +
mov [esi+0Ch] al +
mov [ebx+0Ch] cl +
cmp byte ptr [ebx+0Ch] 1 +
mov esi [ebp-4] +
jnz loc_408186  +
mov eax [esi] +
cmp edi [eax+4] +
jz loc_408182  +
cmp byte ptr [edi+0Ch] 1 +
mov [ebp-10h] edx +
mov [ebp-0Ch] edx +
mov [ebp-14h] edx +
jnz loc_408182  +
mov ecx [edx] +
cmp edi ecx +
jnz loc_4080FE  +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_408099  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [edx+8] +
mov byte ptr [edx+0Ch] 0 +
mov eax [ecx] +
mov [edx+8] eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_408071  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_408083  +
mov [eax+4] ecx +
jmp loc_408091  +
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_40808E  +
mov [eax] ecx +
jmp loc_408091  +
mov [eax+8] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40816B  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_4080B8  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jz loc_408167  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_4081D2  +
mov eax [ecx] +
mov byte ptr [eax+0Ch] 1 +
mov esi [ecx] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [esi+8] +
mov [ecx] eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4080E2  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebp-4] +
mov eax [eax] +
cmp ecx [eax+4] +
jnz loc_4081B7  +
mov [eax+4] esi +
jmp loc_4081C6  +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_408148  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [edx] +
mov byte ptr [edx+0Ch] 0 +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40811F  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_408131  +
mov [eax+4] ecx +
jmp loc_408140  +
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_40813E  +
mov [eax+8] ecx +
jmp loc_408140  +
mov [eax] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40816B  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_408230  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_408230  +
mov byte ptr [ecx+0Ch] 0 +
mov eax [esi] +
mov ecx [ebp-10h] +
mov edx [edx+4] +
mov edi [ebp-0Ch] +
cmp ecx [eax+4] +
jnz loc_408030  +
mov edi [ebp-14h] +
mov byte ptr [edi+0Ch] 1 +
lea ecx [ebx+10h] +
call sub_408E10  +
push ebx  +
call j_free  +
mov ecx [esi+4] +
add esp 4 +
test ecx ecx +
jz loc_4082E4  +
mov eax [ebp-8] +
dec ecx  +
mov [esi+4] ecx +
mov ecx [ebp+0Ch] +
pop edi  +
pop esi  +
mov [eax] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx+4] +
cmp ecx [eax+8] +
jnz loc_4081C4  +
mov [eax+8] esi +
jmp loc_4081C6  +
mov [eax] esi +
mov [esi+8] ecx +
mov [ecx+4] esi +
mov ecx [edx+8] +
mov esi [ebp-4] +
mov al [edx+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [edx+0Ch] 1 +
mov eax [ecx+8] +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx+8] +
mov eax [ecx] +
mov [edx+8] eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4081F6  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_408210  +
mov [eax+4] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
jmp loc_408182  +
***
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_408223  +
mov [eax] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
jmp loc_408182  +
***
mov [eax+8] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
jmp loc_408182  +
***
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_408283  +
mov eax [ecx+8] +
mov byte ptr [eax+0Ch] 1 +
mov esi [ecx+8] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [esi] +
mov [ecx+8] eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_408256  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebp-4] +
mov eax [eax] +
cmp ecx [eax+4] +
jnz loc_40826B  +
mov [eax+4] esi +
jmp loc_408279  +
mov eax [ecx+4] +
cmp ecx [eax] +
jnz loc_408276  +
mov [eax] esi +
jmp loc_408279  +
mov [eax+8] esi +
mov [esi] ecx +
mov [ecx+4] esi +
mov ecx [edx] +
mov esi [ebp-4] +
mov al [edx+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [edx+0Ch] 1 +
mov eax [ecx] +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx] +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4082A6  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_4082C1  +
mov [eax+4] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
jmp loc_408182  +
***
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_4082D7  +
mov [eax+8] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
jmp loc_408182  +
***
mov [eax] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
jmp loc_408182  +
***
mov ecx [ebp-8] +
mov eax [ebp+0Ch] +
pop edi  +
pop esi  +
mov [ecx] eax +
mov eax ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov edx ecx +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40834C  +
mov ecx [eax+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40832F  +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40832A  +
mov [edx] ecx +
mov eax edx +
retn   +
***
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40834A  +
mov ecx [edx] +
cmp ecx [eax+8] +
jnz loc_40834A  +
mov [edx] eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_408338  +
mov [edx] eax +
mov eax edx +
retn   +
***
add esp 4 +
test eax eax +
jz loc_408360  +
mov [eax] eax +
lea ecx [eax+4] +
test ecx ecx +
jz loc_408369  +
mov [ecx] eax +
lea ecx [eax+8] +
test ecx ecx +
jz loc_408372  +
mov [ecx] eax +
mov word ptr [eax+0Ch] 101h +
retn   +
***
mov ecx [ebp+arg_0] +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40839A  +
nop   +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_408390  +
mov eax ecx +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_0] +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4083BB  +
nop   +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_4083B0  +
mov eax ecx +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
add eax 0Ch +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call loc_4085F0  +
pop ebp  +
retn   +
***
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
mov byte ptr [esi] 0 +
mov ebx [ebp+arg_4] +
mov eax ebx +
mov edi [ebp+arg_0] +
sub eax edi +
mov [ebp+var_4] edi +
mov edi [esi+10h] +
sar eax 1 +
cmp edi eax +
ja loc_408444  +
cmp [esi+14h] eax +
jz loc_408444  +
push 1  +
push eax  +
call sub_403260  +
test al al +
jz loc_408444  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_40843E  +
mov eax [esi] +
jmp loc_408440  +
mov eax esi +
mov byte ptr [eax+edi] 0 +
push [ebp+var_4]  +
mov ecx esi +
push ebx  +
push [ebp+var_4]  +
call loc_408C50  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
mov ecx [ebp+arg_8] +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_4]  +
mov [ebp+var_4] 0 +
push 0  +
call sub_4086A0  +
mov ecx [ebp+arg_0] +
push eax  +
call sub_402120  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov ecx [ebp+arg_4] +
push 0FFFFFFFFh  +
push 0  +
push [ebp+arg_8]  +
mov [ebp+var_4] 0 +
call sub_407890  +
mov ecx [ebp+arg_0] +
push eax  +
call sub_402120  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov edx [ebp+arg_4] +
mov ecx [ebp+arg_8] +
push esi  +
mov [ebp+var_4] 0 +
mov eax [edx+14h] +
mov esi [edx+10h] +
sub eax esi +
cmp [ecx+10h] eax +
jbe loc_408506  +
mov eax [ecx+14h] +
sub eax [ecx+10h] +
cmp eax esi +
jb loc_408506  +
push 0FFFFFFFFh  +
push 0  +
push edx  +
push 0  +
call sub_4086A0  +
mov ecx [ebp+arg_0] +
push eax  +
call sub_402120  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov ecx edx +
call sub_407890  +
mov ecx [ebp+arg_0] +
push eax  +
call sub_402120  +
mov eax [ebp+arg_0] +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
test esi esi +
jz loc_408594  +
mov eax [ebp+0Ch] +
test eax eax +
js loc_40859E  +
mov edi [ebp+10h] +
test edi edi +
jz loc_4085A8  +
mov ecx [esi] +
cmp ecx edi +
jz loc_40857D  +
cmp eax [ebp+14h] +
jle loc_408568  +
push 1  +
push eax  +
push ecx  +
call ds:_recalloc  +
add esp 0Ch +
test eax eax +
jnz loc_40858E  +
jmp loc_4085B2  +
push ecx  +
call ds:__imp_free  +
add esp 4 +
mov [esi] edi +
cmp dword ptr [esi] 0 +
pop edi  +
pop esi  +
jnz loc_408592  +
jmp loc_4085BC  +
cmp eax [ebp+14h] +
jle loc_408572  +
push 1  +
push eax  +
call ds:calloc  +
add esp 8 +
mov [esi] eax +
jmp loc_408574  +
***
pop ebp  +
retn   +
***
push 80070057h  +
call loc_401220  +
push 80070057h  +
call loc_401220  +
push 80070057h  +
call loc_401220  +
push 8007000Eh  +
call loc_401220  +
push 8007000Eh  +
call loc_401220  +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_0] +
push ebx  +
mov al [ecx] +
mov bl [edx] +
mov [edx] al +
mov [ecx] bl +
pop ebx  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
mov edi ecx +
test ebx ebx +
jz loc_40868A  +
call sub_404680  +
push dword ptr [ebp+0Ch]  +
mov [ebp+8] eax +
push 0  +
mov ecx [eax] +
push ebx  +
push 0  +
push 0  +
push dword ptr [eax+4]  +
or ecx 6 +
push ecx  +
call ds:__stdio_common_vswprintf  +
mov esi eax +
add esp 1Ch +
or eax 0FFFFFFFFh +
test esi esi +
cmovs esi eax +
test esi esi +
js loc_408694  +
mov eax [edi] +
mov ecx 1 +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax esi +
or ecx eax +
jge loc_408650  +
push esi  +
mov ecx edi +
call sub_403CE0  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
lea eax [esi+1] +
push 0  +
push ebx  +
push eax  +
push dword ptr [edi]  +
mov eax [ecx] +
push dword ptr [ecx+4]  +
or eax 4 +
push eax  +
call ds:__stdio_common_vswprintf_s  +
mov eax [edi] +
add esp 1Ch +
cmp esi [eax-8] +
jg loc_40868A  +
mov [eax-0Ch] esi +
xor ecx ecx +
mov eax [edi] +
pop edi  +
mov [eax+esi*2] cx +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
push 80070057h  +
call loc_401220  +
push 80004005h  +
call loc_401220  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov ecx [esi+10h] +
cmp ecx [ebp+arg_0] +
jnb loc_4086BB  +
push offset aInvalidStringP  +
call ds:?_Xout_of_range@std@@YAXPBD@Z  +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_8] +
mov eax [eax+10h] +
cmp eax edx +
jnb loc_4086D3  +
push offset aInvalidStringP  +
call ds:?_Xout_of_range@std@@YAXPBD@Z  +
mov edi [ebp+arg_C] +
sub eax edx +
cmp edi eax +
cmova edi eax +
mov eax ecx +
not eax  +
cmp eax edi +
ja loc_4086F0  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
lea ebx [ecx+edi] +
test edi edi +
jz loc_40881E  +
cmp ebx 0FFFFFFFEh +
jbe loc_40870B  +
push offset aStringTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
cmp [esi+14h] ebx +
jnb loc_408730  +
push ecx  +
push ebx  +
mov ecx esi +
call sub_403940  +
test ebx ebx +
jz loc_40881E  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_408756  +
mov ecx [esi] +
mov [ebp+arg_C] ecx +
jmp loc_408759  +
test ebx ebx +
jnz loc_408721  +
mov [esi+10h] ebx +
cmp dword ptr [esi+14h] 10h +
jb loc_40874A  +
mov eax [esi] +
pop edi  +
mov [eax] bl +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
mov byte ptr [eax] 0 +
pop ebp  +
retn 10h  +
mov [ebp+arg_C] esi +
cmp eax 10h +
jb loc_408762  +
mov ecx [esi] +
jmp loc_408764  +
mov ecx esi +
mov eax [esi+10h] +
mov edx [ebp+arg_0] +
sub eax edx +
jz loc_408787  +
push eax  +
mov eax [ebp+arg_C] +
add eax edx +
push eax  +
lea eax [ecx+edx] +
add eax edi +
push eax  +
call ds:memmove  +
mov edx [ebp+arg_0] +
add esp 0Ch +
mov eax [ebp+arg_4] +
cmp esi eax +
jnz loc_4087D1  +
mov eax [ebp+arg_8] +
cmp edx eax +
lea ecx [eax+edi] +
cmovnb ecx eax +
mov eax [esi+14h] +
mov [ebp+arg_8] ecx +
cmp eax 10h +
jb loc_4087AB  +
mov ecx [esi] +
mov [ebp+arg_0] ecx +
jmp loc_4087AE  +
mov [ebp+arg_0] esi +
cmp eax 10h +
jb loc_4087B7  +
mov ecx [esi] +
jmp loc_4087B9  +
mov ecx esi +
test edi edi +
jz loc_408800  +
mov eax [ebp+arg_8] +
add eax [ebp+arg_0] +
push edi  +
push eax  +
lea eax [ecx+edx] +
push eax  +
call ds:memmove  +
jmp loc_4087FD  +
cmp dword ptr [eax+14h] 10h +
jb loc_4087D9  +
mov eax [eax] +
cmp dword ptr [esi+14h] 10h +
jb loc_4087E6  +
mov ecx [esi] +
mov [ebp+arg_0] ecx +
jmp loc_4087E9  +
mov [ebp+arg_0] esi +
test edi edi +
jz loc_408800  +
add eax [ebp+arg_8] +
push edi  +
push eax  +
mov eax [ebp+arg_0] +
add eax edx +
push eax  +
call memcpy  +
add esp 0Ch +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] ebx +
jb loc_408818  +
mov eax [esi] +
pop edi  +
mov byte ptr [eax+ebx] 0 +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
mov eax esi +
mov byte ptr [eax+ebx] 0 +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_4206E7  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_18] edx +
mov esi ecx +
mov eax [esi] +
xor edi edi +
xor bl bl +
mov [ebp+var_1C] esi +
mov [ebp+var_24] edi +
mov [ebp+var_11] bl +
mov eax [eax+4] +
mov [ebp+var_2C] esi +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_408882  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push 1  +
mov ecx esi +
mov [ebp+var_4] 0 +
call ds:?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QAE_N_N@Z  +
mov [ebp+var_28] al +
mov [ebp+var_4] 1 +
test al al +
jz loc_408965  +
mov eax [ebp+var_18] +
mov byte ptr [ebp+var_4] 2 +
cmp dword ptr [eax+14h] 10h +
mov dword ptr [eax+10h] 0 +
jb loc_4088BB  +
mov eax [eax] +
mov byte ptr [eax] 0 +
movzx eax [ebp+arg_0] +
mov [ebp+var_20] eax +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
call ds:?sgetc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ  +
mov ecx eax +
cmp ecx 0FFFFFFFFh +
setz al  +
test al al +
jz loc_4088E7  +
mov edi 1 +
jmp loc_40895A  +
cmp ecx [ebp+var_20] +
setz al  +
test al al +
jz loc_408907  +
mov eax [esi] +
mov bl 1 +
mov [ebp+var_11] bl +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
call ds:?sbumpc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ  +
jmp loc_40895A  +
mov eax [ebp+var_18] +
cmp dword ptr [eax+10h] 0FFFFFFFEh +
jb loc_408917  +
mov edi 2 +
jmp loc_40895A  +
push ecx  +
push 1  +
mov ecx eax +
call sub_402B30  +
mov eax [esi] +
mov bl 1 +
mov [ebp+var_11] bl +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
call ds:?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QAEHXZ  +
jmp loc_4088D4  +
mov edx [ebp-1Ch] +
push 1  +
push 4  +
mov eax [edx] +
mov ecx [eax+4] +
add ecx edx +
call ds:?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z  +
mov eax offset loc_408951 +
retn   +
mov edi [ebp-24h] +
mov bl [ebp-11h] +
mov esi [ebp-1Ch] +
mov [ebp+var_4] 1 +
test bl bl +
jnz loc_408968  +
or edi 2 +
mov eax [esi] +
push 0  +
push edi  +
mov ecx [eax+4] +
add ecx esi +
call ds:?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z  +
mov [ebp+var_4] 4 +
mov eax [ebp+var_2C] +
mov ecx [eax] +
mov ecx [ecx+4] +
mov ecx [ecx+eax+38h] +
test ecx ecx +
jz loc_408994  +
mov edx [ecx] +
call dword ptr [edx+8]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ecx  +
push 0FFFFFFFFh  +
push offset loc_420717  +
mov eax large fs:0 +
push eax  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
mov ecx [ecx] +
mov eax [ecx] +
mov eax [eax+4] +
mov ecx [eax+ecx+38h] +
test ecx ecx +
jz loc_408B4D  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov ecx [ebp+arg_4] +
push esi  +
push edi  +
cmp dword ptr [ecx+14h] 10h +
lea esi [ecx+10h] +
jb loc_408B73  +
mov ecx [ecx] +
mov edx [ebp+arg_0] +
cmp dword ptr [edx+14h] 10h +
lea edi [edx+10h] +
jb loc_408B81  +
mov edx [edx] +
mov esi [esi] +
mov eax esi +
mov edi [edi] +
cmp edi esi +
cmovb eax edi +
push eax  +
push ecx  +
push edx  +
call loc_4018B0  +
add esp 0Ch +
test eax eax +
jnz loc_408BAF  +
cmp esi edi +
jbe loc_408BAB  +
or eax 0FFFFFFFFh +
pop edi  +
shr eax 1Fh +
pop esi  +
pop ebp  +
retn 8  +
sbb eax eax +
neg eax  +
pop edi  +
shr eax 1Fh +
pop esi  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_420150  +
mov eax large fs:0 +
push eax  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ecx [ecx] +
mov eax [ecx] +
mov eax [eax+4] +
mov ecx [eax+ecx+38h] +
test ecx ecx +
jz loc_408BF6  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
push edi  +
mov edi [esi+10h] +
cmp edi eax +
ja loc_408C41  +
cmp [esi+14h] eax +
jz loc_408C41  +
push 1  +
push eax  +
call sub_403260  +
test al al +
jz loc_408C41  +
cmp dword ptr [esi+14h] 10h +
mov [esi+10h] edi +
jb loc_408C3D  +
mov esi [esi] +
mov byte ptr [esi+edi] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_420740  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov esi ecx +
mov [ebp-14h] esi +
mov ebx [ebp+8] +
mov dword ptr [ebp-4] 0 +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ecx] +
push esi  +
mov [ebp-4] eax +
mov esi [eax+4] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_408DF7  +
push ebx  +
mov ebx [ebp+8] +
push edi  +
cmp dword ptr [ebx+14h] 10h +
lea ecx [esi+10h] +
jb loc_408DBD  +
mov edx [ebx] +
jmp loc_408DBF  +
mov edx ebx +
cmp dword ptr [ecx+14h] 10h +
lea edi [ecx+10h] +
jb loc_408DCA  +
mov ecx [ecx] +
mov edi [edi] +
mov eax [ebx+10h] +
cmp edi eax +
cmovb eax edi +
push eax  +
push edx  +
push ecx  +
call loc_4018B0  +
add esp 0Ch +
test eax eax +
jnz loc_408DFE  +
cmp edi [ebx+10h] +
jb loc_408E00  +
mov eax esi +
mov esi [esi] +
mov [ebp-4] eax +
cmp byte ptr [esi+0Dh] 0 +
jz loc_408DB0  +
pop edi  +
pop ebx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
jns loc_408DE8  +
mov esi [esi+8] +
mov eax [ebp-4] +
jmp loc_408DEF  +
***
mov eax [esi+2Ch] +
push edi  +
lea edi [esi+18h] +
cmp eax 10h +
jb loc_408E2A  +
inc eax  +
mov ecx edi +
push eax  +
push dword ptr [edi]  +
call sub_402E70  +
mov dword ptr [edi+14h] 0Fh +
cmp dword ptr [edi+14h] 10h +
mov dword ptr [edi+10h] 0 +
jb loc_408E40  +
mov edi [edi] +
mov byte ptr [edi] 0 +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_408E56  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call sub_402E70  +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_408E72  +
mov eax [esi] +
pop edi  +
pop esi  +
mov byte ptr [eax] 0 +
retn   +
pop edi  +
mov byte ptr [esi] 0 +
pop esi  +
retn   +
***
push esi  +
push edi  +
call sub_4091E0  +
mov esi eax +
lea edi [esi+10h] +
mov word ptr [esi+0Ch] 0 +
test edi edi +
jz loc_408EB9  +
mov ecx [ebp+arg_4] +
push dword ptr [ecx]  +
mov ecx edi +
call sub_402120  +
mov dword ptr [edi+2Ch] 0Fh +
mov eax esi +
mov dword ptr [edi+28h] 0 +
mov byte ptr [edi+18h] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_420760  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_18] ecx +
mov eax [ebp+arg_C] +
mov ebx [ebp+arg_0] +
mov edx [ebp+arg_8] +
mov [ebp+var_4] 0 +
cmp dword ptr [ecx+4] 0 +
mov [ebp+var_2C] ecx +
mov [ebp+var_24] ebx +
mov [ebp+var_14] edx +
mov [ebp+var_20] eax +
mov [ebp+var_28] eax +
mov [ebp+var_1C] 0 +
jnz loc_408F2B  +
push eax  +
push edx  +
push dword ptr [ecx]  +
push 1  +
push ebx  +
call sub_4092B0  +
jmp loc_4090A8  +
mov edi [ecx] +
mov esi [ebp+arg_4] +
cmp esi [edi] +
jnz loc_408F5D  +
lea eax [esi+10h] +
push eax  +
push edx  +
call sub_408B60  +
test al al +
jz loc_409089  +
push [ebp+var_20]  +
mov ecx [ebp+var_18] +
push [ebp+var_14]  +
push esi  +
push 1  +
push ebx  +
call sub_4092B0  +
jmp loc_4090A8  +
cmp esi edi +
jnz loc_408F8D  +
mov esi [edi+8] +
push edx  +
lea eax [esi+10h] +
push eax  +
call sub_408B60  +
test al al +
jz loc_409089  +
push [ebp+var_20]  +
mov ecx [ebp+var_18] +
push [ebp+var_14]  +
push esi  +
push 0  +
push ebx  +
call sub_4092B0  +
jmp loc_4090A8  +
lea eax [esi+10h] +
push eax  +
push edx  +
call sub_408B60  +
test al al +
jz loc_409015  +
lea ecx [ebp+var_1C] +
mov [ebp+var_1C] esi +
call loc_409250  +
mov ebx [ebp+var_1C] +
push [ebp+var_14]  +
mov ecx [ebp+var_18] +
lea eax [ebx+10h] +
push eax  +
call sub_408B60  +
test al al +
jz loc_409012  +
mov eax [ebx+8] +
push [ebp+var_20]  +
mov ecx [ebp+var_18] +
push [ebp+var_14]  +
cmp byte ptr [eax+0Dh] 0 +
jz loc_408FF0  +
mov esi [ebp+var_24] +
push ebx  +
push 0  +
push esi  +
call sub_4092B0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
push esi  +
mov esi [ebp+var_24] +
push 1  +
push esi  +
call sub_4092B0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
mov ebx [ebp+var_24] +
push [ebp+var_14]  +
mov ecx [ebp+var_18] +
lea eax [esi+10h] +
push eax  +
call sub_408B60  +
test al al +
jz loc_409089  +
lea ecx [ebp+var_1C] +
mov [ebp+var_1C] esi +
call loc_408300  +
cmp [eax] edi +
mov edi [ebp+var_1C] +
jz loc_40904D  +
mov ecx [ebp+var_18] +
lea eax [edi+10h] +
push eax  +
push [ebp+var_14]  +
call sub_408B60  +
test al al +
jz loc_409089  +
mov eax [esi+8] +
push [ebp+var_20]  +
mov ecx [ebp+var_18] +
push [ebp+var_14]  +
cmp byte ptr [eax+0Dh] 0 +
jz loc_40906A  +
push esi  +
push 0  +
push ebx  +
call sub_4092B0  +
jmp loc_4090A8  +
push edi  +
push 1  +
push ebx  +
call sub_4092B0  +
jmp loc_4090A8  +
push dword ptr [ebp-28h]  +
mov ecx [ebp-2Ch] +
call sub_409220  +
push 0  +
push 0  +
call _CxxThrowException  +
push [ebp+var_20]  +
mov ecx [ebp+var_18] +
lea eax [ebp+var_30] +
push [ebp+var_14]  +
mov [ebp+var_4] 0FFFFFFFFh +
push 0  +
push eax  +
call loc_4094C0  +
mov eax [eax] +
mov [ebx] eax +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_420791  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
call sub_4091E0  +
mov edi eax +
mov [ebp+var_4] 0 +
mov [ebp+var_14] edi +
lea esi [edi+10h] +
mov word ptr [edi+0Ch] 0 +
mov [ebp+var_18] esi +
mov [ebp+var_1C] esi +
mov byte ptr [ebp+var_4] 1 +
test esi esi +
jz loc_409153  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
mov dword ptr [esi+14h] 0Fh +
mov dword ptr [esi+10h] 0 +
cmp dword ptr [esi+14h] 10h +
jb loc_409130  +
mov eax [esi] +
jmp loc_409132  +
mov eax esi +
push 0FFFFFFFFh  +
push 0  +
push ecx  +
mov ecx esi +
mov byte ptr [eax] 0 +
call sub_402A10  +
mov dword ptr [esi+2Ch] 0Fh +
mov dword ptr [esi+28h] 0 +
mov byte ptr [esi+18h] 0 +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebx  +
push edi  +
mov ebx edx +
mov edi ecx +
cmp edi ebx +
jz loc_4091AE  +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_40919D  +
push edi  +
mov ecx esi +
call sub_402120  +
add edi 18h +
add esi 18h +
cmp edi ebx +
jnz loc_409191  +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
***
push [ebp+arg_0]  +
call j_free  +
add esp 4 +
pop ebp  +
retn 4  +
***
push 40h  +
mov edi ecx +
call sub_41EC6C  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_4091F8  +
mov edx [edi] +
mov [esi] edx +
lea ecx [esi+4] +
test ecx ecx +
jz loc_409203  +
mov eax [edi] +
mov [ecx] eax +
lea ecx [esi+8] +
test ecx ecx +
jz loc_40920E  +
mov eax [edi] +
mov [ecx] eax +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
lea ecx [esi+10h] +
call sub_408E10  +
push esi  +
call j_free  +
add esp 4 +
pop esi  +
pop ebp  +
retn 4  +
***
retn   +
***
mov edx ecx +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_409262  +
mov eax [eax+8] +
mov [edx] eax +
mov eax edx +
retn   +
***
mov ecx [eax] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_409283  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4092A9  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_409273  +
mov [edx] ecx +
mov eax edx +
retn   +
***
mov ecx [eax+4] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_4092A1  +
mov eax [edx] +
cmp eax [ecx] +
jnz loc_4092A1  +
mov [edx] ecx +
mov ecx [ecx+4] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_409290  +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_4092AB  +
mov [edx] ecx +
mov eax edx +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov eax [edi+4] +
cmp eax 3FFFFFEh +
jb loc_4092E1  +
mov esi [ebp+arg_10] +
lea ecx [esi+10h] +
call sub_408E10  +
push esi  +
call j_free  +
add esp 4 +
push offset aMapSetTTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
mov ebx [ebp+arg_10] +
inc eax  +
mov [edi+4] eax +
mov eax [ebp+arg_8] +
mov [ebx+4] eax +
mov ecx [edi] +
cmp eax ecx +
jnz loc_409302  +
mov [ecx+4] ebx +
mov eax [edi] +
mov [eax] ebx +
mov eax [edi] +
mov [eax+8] ebx +
jmp loc_409321  +
cmp [ebp+arg_4] 0 +
jz loc_409314  +
mov [eax] ebx +
mov ecx [edi] +
cmp eax [ecx] +
jnz loc_409321  +
mov [ecx] ebx +
jmp loc_409321  +
mov [eax+8] ebx +
mov ecx [edi] +
cmp eax [ecx+8] +
jnz loc_409321  +
mov [ecx+8] ebx +
mov ecx [ebx+4] +
mov eax ebx +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_4094AA  +
mov ecx [eax+4] +
mov esi [ecx+4] +
mov edx [esi] +
cmp ecx edx +
jnz loc_4093EB  +
mov edx [esi+8] +
cmp byte ptr [edx+0Ch] 0 +
jz loc_4093F1  +
cmp eax [ecx+8] +
jnz loc_40938C  +
mov eax ecx +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_409367  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_409379  +
mov [ecx+4] edx +
jmp loc_409387  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_409384  +
mov [ecx] edx +
jmp loc_409387  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx] +
mov ecx [esi+8] +
mov [edx] ecx +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_4093B6  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_4093CE  +
mov [ecx+4] esi +
mov [esi+8] edx +
jmp loc_40949A  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_4093E1  +
mov [ecx+8] esi +
mov [esi+8] edx +
jmp loc_40949A  +
mov [ecx] esi +
mov [esi+8] edx +
jmp loc_40949A  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_40940E  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [edx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov eax [ecx+4] +
jmp loc_40949D  +
cmp eax [ecx] +
jnz loc_40944E  +
mov eax ecx +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_409427  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_409439  +
mov [ecx+4] edx +
jmp loc_409448  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_409446  +
mov [ecx+8] edx +
jmp loc_409448  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx+8] +
mov ecx [esi] +
mov [edx+8] ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_409478  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_40948A  +
mov [ecx+4] esi +
jmp loc_409498  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_409495  +
mov [ecx] esi +
jmp loc_409498  +
mov [ecx+8] esi +
mov [esi] edx +
mov [edx+4] esi +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_409330  +
mov eax [edi] +
pop edi  +
pop esi  +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [ebp+arg_0] +
mov [eax] ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4207B0  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov edx ecx +
mov [ebp-1Ch] edx +
mov edi [ebp+10h] +
mov al 1 +
mov dword ptr [ebp-4] 0 +
mov ebx [edx] +
mov ecx ebx +
mov [ebp-20h] ebx +
mov [ebp-14h] ecx +
mov [ebp-18h] al +
mov esi [ebx+4] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_4095EA  +
mov edx [edi+10h] +
push dword ptr [ebp+14h]  +
push edi  +
push ecx  +
push 1  +
mov ecx edx +
lea eax [ebp+0Ch] +
push eax  +
call sub_4092B0  +
mov ecx [eax] +
mov eax [ebp+8] +
mov [eax] ecx +
mov byte ptr [eax+4] 1 +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
call sub_409220  +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
jmp sub_4072E0  +
***
sub esp 8 +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
push 0  +
push offset SubKey  +
push 80000002h  +
call ds:RegOpenKeyExW  +
mov ecx [ebp+phkResult] +
xor edx edx +
test eax eax +
cmovnz ecx edx +
mov eax ecx +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
push 0  +
push offset aHardwareDescri  +
push 80000002h  +
call ds:RegOpenKeyExW  +
mov ecx [ebp+phkResult] +
xor edx edx +
test eax eax +
cmovnz ecx edx +
mov eax ecx +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_42081B  +
mov eax large fs:0 +
push eax  +
sub esp 118h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
mov ebx [ebp+arg_4] +
mov [ebp+var_124] 0 +
mov [ebp+var_120] 0 +
call sub_401530  +
mov ecx eax +
test ecx ecx +
jnz loc_409A1D  +
push 80004005h  +
call loc_401220  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [ebp+var_120] eax +
lea eax [ebp+cbData] +
mov [ebp+var_4] 0 +
mov esi ds:RegQueryValueExW +
push eax  +
lea eax [ebp+Data] +
mov [ebp+cbData] 104h +
push eax  +
push 0  +
push 0  +
push offset aCurrentmajorve  +
push ebx  +
call esi  +
push dword ptr [ebp+Data]  +
lea eax [ebp+var_120] +
push offset aU  +
push eax  +
call sub_4083D0  +
add esp 0Ch +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push 0  +
push 0  +
push offset aCurrentminorve  +
push ebx  +
call esi  +
push dword ptr [ebp+Data]  +
lea eax [ebp+var_120] +
push offset a_U  +
push eax  +
call sub_40A770  +
add esp 0Ch +
lea ecx [ebp+var_120] +
call sub_40A650  +
mov ecx eax +
call loc_40A5A0  +
push eax  +
mov ecx edi +
call loc_402CE0  +
mov [ebp+var_4] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
mov esi [ebp+var_120] +
add esi 0FFFFFFF0h +
xadd [esi+0Ch] eax +
dec eax  +
test eax eax +
jg loc_409AE9  +
mov ecx [esi] +
push esi  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
push offset loc_420866  +
mov eax large fs:0 +
push eax  +
sub esp 2A0h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
mov esi [ebp+arg_4] +
mov [ebp+var_228] 0 +
mov [ebp+var_224] 0 +
call sub_401530  +
mov ecx eax +
test ecx ecx +
jnz loc_409D8C  +
push 80004005h  +
call loc_401220  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [ebp+var_224] eax +
lea eax [ebp+cbData] +
mov [ebp+var_4] 0 +
push eax  +
lea eax [ebp+Data] +
mov [ebp+cbData] 104h +
push eax  +
push 0  +
push 0  +
push offset aIdentifier  +
push esi  +
call ds:RegQueryValueExW  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+var_224] +
push offset aS  +
push eax  +
call sub_4083D0  +
add esp 0Ch +
lea ecx [ebp+var_224] +
call sub_40A650  +
mov ecx eax +
call loc_40A5A0  +
lea ecx [ebp+var_2A8] +
push 3  +
mov eax [eax] +
mov [ebp+var_2AC] ecx +
lea ecx [ebp+var_2AC] +
push eax  +
call loc_4076A0  +
mov byte ptr [ebp+var_4] 1 +
mov ecx edi +
push [ebp+var_2AC]  +
call sub_402330  +
mov eax [ebp+var_2AC] +
lea ecx [ebp+var_2A8] +
cmp eax ecx +
jz loc_409E3D  +
push eax  +
call ds:__imp_free  +
add esp 4 +
mov [ebp+var_4] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
mov esi [ebp+var_224] +
add esi 0FFFFFFF0h +
xadd [esi+0Ch] eax +
dec eax  +
test eax eax +
jg loc_409E62  +
mov ecx [esi] +
push esi  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_420898  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
lea ecx [ebp+var_2C] +
push offset aUnknown  +
mov [ebp+var_30] 0 +
mov [ebp+hKey] 0 +
mov [ebp+cbData] 10h +
mov [ebp+var_2C] 0 +
call sub_402330  +
lea eax [ebp+hKey] +
mov [ebp+var_4] 0 +
push eax  +
push 20019h  +
push 0  +
push offset aHardwareDescri  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_409F3D  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push 0  +
push 0  +
push offset aMhz  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_409F2D  +
push dword ptr [ebp+Data]  +
lea eax [ebp+var_2C] +
push offset aUMhz  +
push eax  +
call sub_4083D0  +
add esp 0Ch +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov [ebp+hKey] 0 +
lea ecx [ebp+var_2C] +
call sub_40A650  +
mov ecx eax +
call loc_40A5A0  +
push eax  +
mov ecx esi +
call loc_402CE0  +
mov [ebp+var_4] 0FFFFFFFFh +
or ecx 0FFFFFFFFh +
mov eax [ebp+var_2C] +
add eax 0FFFFFFF0h +
xadd [eax+0Ch] ecx +
dec ecx  +
test ecx ecx +
jg loc_409F76  +
mov ecx [eax] +
push eax  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4208D9  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi [ebp+arg_0] +
mov ecx esi +
mov [ebp+var_4] 0 +
mov [ebp+var_54] 0 +
push offset aUnknown_0  +
mov [ebp+var_58] esi +
mov dword ptr [esi] 0 +
call sub_4023D0  +
lea eax [ebp+var_50] +
mov [ebp+var_4] 0 +
push eax  +
mov [ebp+var_54] 1 +
mov [ebp+var_50] 40h +
call ds:GlobalMemoryStatusEx  +
test eax eax +
jz loc_40A02F  +
mov edx [ebp+var_48] +
mov ecx [ebp+var_44] +
shrd edx ecx +
shr ecx 14h +
push ecx  +
push edx  +
push offset aU  +
push esi  +
call sub_4083D0  +
add esp 10h +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_420908  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push offset unk_427F91  +
lea ecx [ebp+var_10] +
mov [ebp+var_14] 0 +
mov [ebp+var_10] 0 +
call sub_402330  +
mov [ebp+var_4] 0 +
lea eax [ebp+var_10] +
push [ebp+arg_1C]  +
push offset aU  +
push eax  +
call sub_4083D0  +
add esp 0Ch +
lea ecx [ebp+var_10] +
call sub_40A650  +
mov ecx eax +
call loc_40A5A0  +
mov esi [ebp+arg_0] +
mov ecx esi +
push eax  +
call loc_402CE0  +
mov [ebp+var_4] 0FFFFFFFFh +
or ecx 0FFFFFFFFh +
mov eax [ebp+var_10] +
add eax 0FFFFFFF0h +
xadd [eax+0Ch] ecx +
dec ecx  +
test ecx ecx +
jg loc_40A0E8  +
mov ecx [eax] +
push eax  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push [ebp+lpSystemInfo]  +
call ds:GetSystemInfo  +
mov eax [ebp+lpSystemInfo] +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_420940  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov eax [ebp+8] +
mov [ebp-18h] eax +
mov dword ptr [ebp-1Ch] 0 +
push 20Ah  +
mov dword ptr [ebp-4] 0 +
call sub_41ECAD  +
add esp 4 +
mov dword ptr [ebp-14h] 0 +
lea ecx [ebp-14h] +
mov esi eax +
push offset unk_427F70  +
call sub_4023D0  +
xor eax eax +
mov byte ptr [ebp-4] 1 +
mov [esi] ax +
lea ecx [ebp+0Ch] +
cmp dword ptr [ebp+20h] 10h +
mov ebx 2 +
mov edi [ebp+1Ch] +
mov eax ebx +
cmovnb ecx [ebp+0Ch] +
cmp edi eax +
cmovb eax edi +
push eax  +
push offset aOs  +
push ecx  +
call loc_4018B0  +
mov ecx eax +
add esp 0Ch +
test ecx ecx +
jnz loc_40A1C7  +
cmp ebx edi +
jbe loc_40A1C3  +
or ecx 0FFFFFFFFh +
jmp loc_40A1C7  +
sbb ecx ecx +
neg ecx  +
push 104h  +
xor edx edx +
mov ebx offset aXSysDefaultLoc +
push esi  +
test ecx ecx +
mov eax ebx +
push 59h  +
cmovnz eax edx +
push eax  +
call ds:GetLocaleInfoEx  +
test eax eax +
jnz loc_40A1EF  +
push offset aUnknown_1  +
jmp loc_40A212  +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40A1F4  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
lea ecx [ebp-14h] +
call loc_4075D0  +
push offset asc_42845C  +
lea ecx [ebp-14h] +
call sub_40A470  +
xor eax eax +
lea ecx [ebp+0Ch] +
mov [esi] ax +
mov eax 2 +
cmp dword ptr [ebp+20h] 10h +
mov edi [ebp+1Ch] +
cmovnb ecx [ebp+0Ch] +
cmp edi eax +
cmovb eax edi +
push eax  +
push offset aOs  +
push ecx  +
call loc_4018B0  +
add esp 0Ch +
test eax eax +
jnz loc_40A25F  +
cmp edi 2 +
jnb loc_40A254  +
or eax 0FFFFFFFFh +
jmp loc_40A25F  +
mov eax 2 +
cmp eax edi +
sbb eax eax +
neg eax  +
push 104h  +
xor ecx ecx +
test eax eax +
push esi  +
push 5Ah  +
cmovnz ebx ecx +
push ebx  +
call ds:GetLocaleInfoEx  +
test eax eax +
jnz loc_40A288  +
push offset aUnknown  +
lea ecx [ebp-14h] +
call sub_40A470  +
jmp loc_40A2A9  +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40A290  +
sub ecx edx +
sar ecx 1 +
push ecx  +
push esi  +
lea ecx [ebp-14h] +
call loc_4075D0  +
push esi  +
call j_j_free  +
add esp 4 +
lea ecx [ebp-14h] +
call sub_40A650  +
mov ecx eax +
call loc_40A5A0  +
mov ebx [ebp-18h] +
mov ecx ebx +
push eax  +
call loc_402CE0  +
mov byte ptr [ebp-4] 0 +
or eax 0FFFFFFFFh +
mov edx [ebp-14h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40A2EB  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ecx [ebp+20h] +
cmp ecx 10h +
jb loc_40A300  +
inc ecx  +
push ecx  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp+0Ch] +
call sub_402E70  +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_420908  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push offset unk_427F91  +
lea ecx [ebp+var_10] +
mov [ebp+var_14] 0 +
mov [ebp+var_10] 0 +
call sub_402330  +
mov [ebp+var_4] 0 +
lea eax [ebp+var_10] +
push [ebp+arg_18]  +
push offset aU  +
push eax  +
call sub_4083D0  +
add esp 0Ch +
lea ecx [ebp+var_10] +
call sub_40A650  +
mov ecx eax +
call loc_40A5A0  +
mov esi [ebp+arg_0] +
mov ecx esi +
push eax  +
call loc_402CE0  +
mov [ebp+var_4] 0FFFFFFFFh +
or ecx 0FFFFFFFFh +
mov eax [ebp+var_10] +
add eax 0FFFFFFF0h +
xadd [eax+0Ch] ecx +
dec ecx  +
test ecx ecx +
jg loc_40A3B8  +
mov ecx [eax] +
push eax  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ebp+arg_0] +
push esi  +
push edi  +
cmp byte ptr [edx] 0 +
jnz loc_40A3E1  +
xor esi esi +
jmp loc_40A3EF  +
mov esi edx +
lea edi [esi+1] +
mov al [esi] +
inc esi  +
test al al +
jnz loc_40A3E6  +
sub esi edi +
cmp dword ptr [ecx+14h] 10h +
lea edi [ecx+10h] +
jb loc_40A3FA  +
mov ecx [ecx] +
mov edi [edi] +
mov eax esi +
cmp edi esi +
cmovb eax edi +
push eax  +
push edx  +
push ecx  +
call loc_4018B0  +
add esp 0Ch +
test eax eax +
jnz loc_40A423  +
cmp esi edi +
jbe loc_40A41F  +
pop edi  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 4  +
sbb eax eax +
neg eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_40A466  +
mov eax [ebp+arg_4] +
test eax eax +
js loc_40A466  +
mov edx [esi] +
cmp eax [edx-0Ch] +
jg loc_40A466  +
push ecx  +
lea eax [edx+eax*2] +
push eax  +
call ds:wcsstr  +
add esp 8 +
test eax eax +
jz loc_40A466  +
sub eax [esi] +
sar eax 1 +
pop esi  +
pop ebp  +
retn 8  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_420978  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov eax [esi] +
mov [ebp+var_10] 0 +
mov ecx [eax-10h] +
test ecx ecx +
jz loc_40A4AF  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
test eax eax +
jnz loc_40A4BB  +
call sub_401530  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+10h]  +
push eax  +
push [ebp+arg_0]  +
lea ecx [ebp+var_10] +
call sub_40A6D0  +
mov [ebp+var_4] 0 +
mov ecx esi +
mov eax [ebp+var_10] +
push dword ptr [eax-0Ch]  +
push eax  +
call loc_4075D0  +
mov [ebp+var_4] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
mov edx [ebp+var_10] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40A4FE  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
test edx edx +
jnz loc_40A53D  +
xor eax eax +
push eax  +
push edx  +
call loc_4075D0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
mov eax edx +
push edi  +
lea edi [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_40A543  +
sub eax edi +
mov ecx esi +
pop edi  +
sar eax 1 +
push eax  +
push edx  +
call loc_4075D0  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
call sub_401530  +
mov ecx eax +
test ecx ecx +
jz loc_40A58C  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [esi] eax +
mov eax esi +
pop esi  +
retn   +
***
push 80004005h  +
call loc_401220  +
push ebx  +
mov ebx ds:iswspace +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi] +
movzx eax word ptr [esi] +
push eax  +
call ebx  +
add esp 4 +
test eax eax +
jz loc_40A5D1  +
mov eax [edi] +
cmp esi eax +
jz loc_40A637  +
mov edx [eax-0Ch] +
sub esi eax +
sar esi 1 +
test edx edx +
js loc_40A63D  +
mov ecx 1 +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax edx +
or ecx eax +
jge loc_40A5FB  +
push edx  +
mov ecx edi +
call sub_403CE0  +
mov edx [edi] +
mov ecx [edx-0Ch] +
mov ebx ecx +
sub ebx esi +
lea eax ds:2[ebx*2] +
push eax  +
lea eax [edx+esi*2] +
push eax  +
lea eax ds:2[ecx*2] +
push eax  +
push edx  +
call sub_404790  +
add esp 10h +
test ebx ebx +
js loc_40A63D  +
mov eax [edi] +
cmp ebx [eax-8] +
jg loc_40A63D  +
mov [eax-0Ch] ebx +
xor ecx ecx +
mov eax [edi] +
mov [eax+ebx*2] cx +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push 80070057h  +
call loc_401220  +
push esi  +
push 0FFFFFFFFh  +
push offset loc_420278  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_10] esi +
mov ecx [ebp+arg_4] +
test ecx ecx +
jnz loc_40A70B  +
push 80004005h  +
call loc_401220  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [esi] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_4] 0 +
test eax eax +
jz loc_40A747  +
test eax 0FFFF0000h +
jnz loc_40A747  +
movzx edi ax +
push 0  +
push edi  +
call sub_4013B0  +
add esp 8 +
test eax eax +
jz loc_40A74F  +
push edi  +
push eax  +
mov ecx esi +
call loc_403AE0  +
jmp loc_40A74F  +
push eax  +
mov ecx esi +
call loc_402C50  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov ecx [ebp+arg_0] +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call loc_40A800  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_0] +
push esi  +
push edi  +
cmp byte ptr [edx] 0 +
jnz loc_40A7A1  +
xor esi esi +
jmp loc_40A7AF  +
mov esi edx +
lea ecx [esi+1] +
mov al [esi] +
inc esi  +
test al al +
jnz loc_40A7A6  +
sub esi ecx +
mov ecx [ebp+arg_4] +
cmp dword ptr [ecx+14h] 10h +
lea edi [ecx+10h] +
jb loc_40A7BD  +
mov ecx [ecx] +
mov edi [edi] +
mov eax esi +
cmp edi esi +
cmovb eax edi +
push eax  +
push edx  +
push ecx  +
call loc_4018B0  +
add esp 0Ch +
test eax eax +
jnz loc_40A7EB  +
cmp esi edi +
jbe loc_40A7E5  +
or eax 0FFFFFFFFh +
test eax eax +
pop edi  +
setz al  +
pop esi  +
pop ebp  +
retn   +
sbb eax eax +
neg eax  +
test eax eax +
pop edi  +
setz al  +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
mov edi ecx +
test ebx ebx +
jz loc_40A8B8  +
mov eax [edi] +
mov esi [eax-0Ch] +
mov [ebp-4] esi +
call sub_404680  +
push dword ptr [ebp+0Ch]  +
mov [ebp-8] eax +
push 0  +
mov ecx [eax] +
push ebx  +
push 0  +
push 0  +
push dword ptr [eax+4]  +
or ecx 6 +
push ecx  +
call ds:__stdio_common_vswprintf  +
or ecx 0FFFFFFFFh +
add esp 1Ch +
test eax eax +
cmovs eax ecx +
mov [ebp+8] eax +
test eax eax +
js loc_40A8C2  +
add esi eax +
js loc_40A8CC  +
mov eax [edi] +
mov ecx 1 +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax esi +
or ecx eax +
jge loc_40A870  +
push esi  +
mov ecx edi +
call sub_403CE0  +
push dword ptr [ebp+0Ch]  +
mov eax [ebp+8] +
mov ecx [ebp-4] +
inc eax  +
push 0  +
push ebx  +
push eax  +
mov eax [edi] +
lea eax [eax+ecx*2] +
mov ecx [ebp-8] +
push eax  +
mov eax [ecx] +
push dword ptr [ecx+4]  +
or eax 4 +
push eax  +
call ds:__stdio_common_vswprintf_s  +
add esp 1Ch +
test esi esi +
js loc_40A8B8  +
mov eax [edi] +
cmp esi [eax-8] +
jg loc_40A8B8  +
mov [eax-0Ch] esi +
xor ecx ecx +
mov eax [edi] +
pop edi  +
mov [eax+esi*2] cx +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 80070057h  +
call loc_401220  +
push 80004005h  +
call loc_401220  +
push 80070057h  +
call loc_401220  +
push 0FFFFFFFFh  +
push offset loc_4209AF  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 0Ch  +
call sub_41EC6C  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_40A949  +
push [ebp+arg_0]  +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 1 +
call sub_41FC60  +
mov [esi] eax +
jmp loc_40A94B  +
xor esi esi +
mov [ebp+var_4] 0FFFFFFFFh +
mov [edi] esi +
test esi esi +
jnz loc_40A962  +
push 8007000Eh  +
call sub_41FC40  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4209AF  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
push 0Ch  +
call sub_41EC6C  +
mov esi eax +
add esp 4 +
mov [ebp+var_10] esi +
mov [ebp+var_4] 0 +
test esi esi +
jz loc_40A9F8  +
xorps xmm0 xmm0 +
movq qword ptr [esi] xmm0 +
mov dword ptr [esi+8] 0 +
push offset aRootCimv2  +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 1 +
call ds:SysAllocString  +
mov [esi] eax +
test eax eax +
jnz loc_40A9FA  +
push 8007000Eh  +
call sub_41FC40  +
xor esi esi +
mov [ebp+var_4] 0FFFFFFFFh +
mov [edi] esi +
test esi esi +
jnz loc_40AA11  +
push 8007000Eh  +
call sub_41FC40  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi] +
test esi esi +
jz loc_40AA88  +
or eax 0FFFFFFFFh +
xadd [esi+8] eax +
dec eax  +
jnz loc_40AA82  +
test esi esi +
jz loc_40AA82  +
mov eax [esi] +
test eax eax +
jz loc_40AA60  +
push eax  +
call ds:SysFreeString  +
mov dword ptr [esi] 0 +
mov eax [esi+4] +
test eax eax +
jz loc_40AA77  +
push eax  +
call j_j_free  +
add esp 4 +
mov dword ptr [esi+4] 0 +
push 0Ch  +
push esi  +
call sub_41EC9F  +
add esp 8 +
mov dword ptr [edi] 0 +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_420A60  +
mov eax large fs:0 +
push eax  +
sub esp 68h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov edi [ebp+8] +
push 0  +
push 0  +
mov dword ptr [ebp-4] 0 +
call ds:CoInitializeEx  +
test eax eax +
js loc_40AB8C  +
lea eax [ebp-24h] +
mov dword ptr [ebp-24h] 0 +
push eax  +
push offset unk_427F60  +
push 1  +
push 0  +
push offset unk_427F50  +
call ds:CoCreateInstance  +
test eax eax +
js loc_40AB86  +
push ecx  +
lea ecx [ebp-40h] +
mov dword ptr [ebp-20h] 0 +
call sub_40A980  +
mov byte ptr [ebp-4] 1 +
mov eax [eax] +
test eax eax +
jz loc_40AB2B  +
mov edx [eax] +
jmp loc_40AB2D  +
xor edx edx +
mov eax [ebp-24h] +
lea esi [ebp-20h] +
push esi  +
push 0  +
push 0  +
mov ecx [eax] +
push 0  +
push 0  +
push 0  +
push 0  +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
lea ecx [ebp-40h] +
mov byte ptr [ebp-4] 0 +
mov esi eax +
call sub_40AA30  +
test esi esi +
js loc_40AB7D  +
push 0  +
push 0  +
push 3  +
push 3  +
push 0  +
push 0  +
push 0Ah  +
push dword ptr [ebp-20h]  +
call ds:CoSetProxyBlanket  +
test eax eax +
jns loc_40ABA8  +
mov eax [ebp-20h] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov eax [ebp-24h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
call ds:CoUninitialize  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset aSelectAvailabi  +
lea ecx [ebp-6Ch] +
mov dword ptr [ebp-38h] 0 +
call sub_40A8E0  +
mov esi eax +
push offset aWql  +
lea ecx [ebp-40h] +
mov byte ptr [ebp-4] 2 +
call sub_40A8E0  +
mov byte ptr [ebp-4] 3 +
mov ecx [esi] +
test ecx ecx +
jz loc_40ABDD  +
mov esi [ecx] +
jmp loc_40ABDF  +
xor esi esi +
mov eax [eax] +
test eax eax +
jz loc_40ABE9  +
mov edx [eax] +
jmp loc_40ABEB  +
xor edx edx +
mov eax [ebp-20h] +
lea ebx [ebp-38h] +
push ebx  +
push 0  +
push 20h  +
mov ecx [eax] +
push esi  +
push edx  +
push eax  +
call dword ptr [ecx+50h]  +
lea ecx [ebp-40h] +
mov esi eax +
call sub_40AA30  +
lea ecx [ebp-6Ch] +
mov byte ptr [ebp-4] 0 +
call sub_40AA30  +
test esi esi +
js loc_40AB74  +
mov ebx ds:VariantClear +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 0 +
mov ecx [ebp-38h] +
test ecx ecx +
jz loc_40B253  +
mov eax [ecx] +
lea edx [ebp-18h] +
push edx  +
lea edx [ebp-1Ch] +
push edx  +
push 1  +
push 0FFFFFFFFh  +
push ecx  +
call dword ptr [eax+10h]  +
test eax eax +
jz loc_40AC5B  +
cmp dword ptr [ebp-18h] 0 +
jz loc_40B253  +
push offset unk_427F70  +
lea ecx [ebp-68h] +
mov dword ptr [ebp-68h] 0 +
call sub_4023D0  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp-64h] +
push offset unk_427F70  +
mov dword ptr [ebp-64h] 0 +
call sub_4023D0  +
mov byte ptr [ebp-4] 5 +
lea ecx [ebp-60h] +
push offset unk_427F70  +
mov dword ptr [ebp-60h] 0 +
call sub_4023D0  +
mov byte ptr [ebp-4] 6 +
lea ecx [ebp-5Ch] +
push offset unk_427F70  +
mov dword ptr [ebp-5Ch] 0 +
call sub_4023D0  +
mov byte ptr [ebp-4] 7 +
lea ecx [ebp-58h] +
push offset unk_427F70  +
mov dword ptr [ebp-58h] 0 +
call sub_4023D0  +
mov byte ptr [ebp-4] 8 +
lea ecx [ebp-54h] +
push offset unk_427F70  +
mov dword ptr [ebp-54h] 0 +
call sub_4023D0  +
mov byte ptr [ebp-4] 9 +
lea ecx [ebp-50h] +
push offset unk_427F70  +
mov dword ptr [ebp-50h] 0 +
call sub_4023D0  +
mov byte ptr [ebp-4] 0Ah +
lea ecx [ebp-4Ch] +
push offset unk_427F70  +
mov dword ptr [ebp-4Ch] 0 +
call sub_4023D0  +
mov byte ptr [ebp-4] 0Bh +
lea ecx [ebp-48h] +
push offset unk_427F70  +
mov dword ptr [ebp-48h] 0 +
call sub_4023D0  +
mov byte ptr [ebp-4] 0Ch +
lea ecx [ebp-44h] +
push offset unk_427F70  +
mov dword ptr [ebp-44h] 0 +
call sub_4023D0  +
mov byte ptr [ebp-4] 0Dh +
lea ecx [ebp-3Ch] +
push offset unk_427F70  +
mov dword ptr [ebp-3Ch] 0 +
call sub_4023D0  +
push 0  +
push 0  +
mov byte ptr [ebp-4] 0Eh +
lea edx [ebp-34h] +
mov eax [ebp-1Ch] +
push edx  +
push 0  +
push offset aAvailability  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_40ADB6  +
mov edx [ebp-2Ch] +
lea ecx [ebp-6Ch] +
call sub_40B590  +
push eax  +
lea ecx [ebp-64h] +
mov byte ptr [ebp-4] 0Fh +
call sub_4022A0  +
mov byte ptr [ebp-4] 0Eh +
or eax 0FFFFFFFFh +
mov edx [ebp-6Ch] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40ADB6  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [ebp-1Ch] +
lea edx [ebp-34h] +
push 0  +
push 0  +
push edx  +
mov ecx [eax] +
push 0  +
push offset aAdaptercompati  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_40ADDD  +
lea edx [ebp-60h] +
lea ecx [ebp-34h] +
call sub_40B7B0  +
mov eax [ebp-1Ch] +
lea edx [ebp-34h] +
push 0  +
push 0  +
push edx  +
mov ecx [eax] +
push 0  +
push offset aAdapterram  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_40AE15  +
mov eax [ebp-2Ch] +
test eax eax +
jz loc_40AE15  +
shr eax 14h +
push eax  +
lea eax [ebp-5Ch] +
push offset aUMb  +
push eax  +
call sub_4083D0  +
add esp 0Ch +
mov eax [ebp-1Ch] +
lea edx [ebp-34h] +
push 0  +
push 0  +
push edx  +
mov ecx [eax] +
push 0  +
push offset aCaption  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_40AE3C  +
lea edx [ebp-58h] +
lea ecx [ebp-34h] +
call sub_40B7B0  +
mov eax [ebp-1Ch] +
lea edx [ebp-34h] +
push 0  +
push 0  +
push edx  +
mov ecx [eax] +
push 0  +
push offset aDescription  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_40AE63  +
lea edx [ebp-54h] +
lea ecx [ebp-34h] +
call sub_40B7B0  +
mov eax [ebp-1Ch] +
lea edx [ebp-34h] +
push 0  +
push 0  +
push edx  +
mov ecx [eax] +
push 0  +
push offset aDriverdate  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_40AE8A  +
lea edx [ebp-50h] +
lea ecx [ebp-34h] +
call sub_40B7B0  +
mov eax [ebp-1Ch] +
lea edx [ebp-34h] +
push 0  +
push 0  +
push edx  +
mov ecx [eax] +
push 0  +
push offset aDriverversion  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_40AEB1  +
lea edx [ebp-4Ch] +
lea ecx [ebp-34h] +
call sub_40B7B0  +
mov eax [ebp-1Ch] +
lea edx [ebp-34h] +
push 0  +
push 0  +
push edx  +
mov ecx [eax] +
push 0  +
push offset aVideomodedescr  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_40AED8  +
lea edx [ebp-48h] +
lea ecx [ebp-34h] +
call sub_40B7B0  +
mov eax [ebp-1Ch] +
lea edx [ebp-34h] +
push 0  +
push 0  +
push edx  +
mov ecx [eax] +
push 0  +
push offset aPnpdeviceid  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_40AEFF  +
lea edx [ebp-44h] +
lea ecx [ebp-34h] +
call sub_40B7B0  +
mov eax [ebp-1Ch] +
lea edx [ebp-34h] +
push 0  +
push 0  +
push edx  +
mov ecx [eax] +
push 0  +
push offset aInstalleddispl  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jnz loc_40B09B  +
mov eax [ebp-2Ch] +
mov edx offset unk_427F70 +
test eax eax +
cmovnz edx eax +
test edx edx +
jnz loc_40AF34  +
xor ecx ecx +
jmp loc_40AF4F  +
mov ecx edx +
lea esi [ecx+2] +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_40AF40  +
sub ecx esi +
sar ecx 1 +
push ecx  +
push edx  +
lea ecx [ebp-3Ch] +
call loc_403510  +
mov eax [ebp-3Ch] +
mov ecx 1000h +
mov eax [eax-0Ch] +
cmp eax ecx +
cmovl ecx eax +
lea eax [ebp-40h] +
push ecx  +
push 0  +
push eax  +
lea ecx [ebp-3Ch] +
call loc_4074C0  +
push eax  +
lea ecx [ebp-3Ch] +
mov byte ptr [ebp-4] 10h +
call sub_4022A0  +
mov byte ptr [ebp-4] 0Eh +
or eax 0FFFFFFFFh +
mov edx [ebp-40h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40AFA4  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
lea edx [ebp-3Ch] +
lea ecx [ebp-70h] +
call loc_40B280  +
push eax  +
lea ecx [ebp-3Ch] +
mov byte ptr [ebp-4] 11h +
call sub_4022A0  +
mov byte ptr [ebp-4] 0Eh +
or eax 0FFFFFFFFh +
mov edx [ebp-70h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40AFDB  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [ebp-3Ch] +
cmp dword ptr [eax-0Ch] 0 +
jz loc_40B053  +
push offset a38  +
push offset asc_428068  +
lea ecx [ebp-3Ch] +
call loc_405FF0  +
push offset a60  +
push offset asc_428078  +
lea ecx [ebp-3Ch] +
call loc_405FF0  +
push offset a62  +
push offset asc_428088  +
lea ecx [ebp-3Ch] +
call loc_405FF0  +
push offset a34  +
push offset asc_428098  +
lea ecx [ebp-3Ch] +
call loc_405FF0  +
push offset a39  +
push offset asc_4280A8  +
lea ecx [ebp-3Ch] +
call loc_405FF0  +
push offset a92  +
push offset asc_428058  +
lea ecx [ebp-3Ch] +
call loc_405FF0  +
mov eax [ebp-3Ch] +
mov eax [eax-0Ch] +
mov ecx 64h +
cmp eax ecx +
cmovl ecx eax +
lea eax [ebp-74h] +
push ecx  +
push 0  +
push eax  +
lea ecx [ebp-3Ch] +
call loc_4074C0  +
push eax  +
lea ecx [ebp-3Ch] +
mov byte ptr [ebp-4] 12h +
call sub_4022A0  +
mov byte ptr [ebp-4] 0Eh +
or eax 0FFFFFFFFh +
mov edx [ebp-74h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40B09B  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push dword ptr [ebp-3Ch]  +
lea eax [ebp-68h] +
push dword ptr [ebp-44h]  +
push dword ptr [ebp-48h]  +
push dword ptr [ebp-4Ch]  +
push dword ptr [ebp-50h]  +
push dword ptr [ebp-54h]  +
push dword ptr [ebp-58h]  +
push dword ptr [ebp-5Ch]  +
push dword ptr [ebp-60h]  +
push dword ptr [ebp-64h]  +
push offset aGpuinfoAvailab  +
push eax  +
call sub_4083D0  +
mov eax [ebp-68h] +
add esp 30h +
mov ecx edi +
push dword ptr [eax-0Ch]  +
push eax  +
call loc_4075D0  +
push 1  +
push offset asc_4288A0  +
mov ecx edi +
call loc_4075D0  +
lea eax [ebp-34h] +
push eax  +
call ebx  +
mov eax [ebp-1Ch] +
push eax  +
mov ecx [eax] +
call dword ptr [ecx+8]  +
mov byte ptr [ebp-4] 0Dh +
or eax 0FFFFFFFFh +
mov edx [ebp-3Ch] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40B114  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov byte ptr [ebp-4] 0Ch +
or eax 0FFFFFFFFh +
mov edx [ebp-44h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40B133  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov byte ptr [ebp-4] 0Bh +
or eax 0FFFFFFFFh +
mov edx [ebp-48h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40B152  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov byte ptr [ebp-4] 0Ah +
or eax 0FFFFFFFFh +
mov edx [ebp-4Ch] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40B171  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov byte ptr [ebp-4] 9 +
or eax 0FFFFFFFFh +
mov edx [ebp-50h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40B190  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov byte ptr [ebp-4] 8 +
or eax 0FFFFFFFFh +
mov edx [ebp-54h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40B1AF  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov byte ptr [ebp-4] 7 +
or eax 0FFFFFFFFh +
mov edx [ebp-58h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40B1CE  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov byte ptr [ebp-4] 6 +
or eax 0FFFFFFFFh +
mov edx [ebp-5Ch] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40B1ED  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov byte ptr [ebp-4] 5 +
or eax 0FFFFFFFFh +
mov edx [ebp-60h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40B20C  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov byte ptr [ebp-4] 4 +
or eax 0FFFFFFFFh +
mov edx [ebp-64h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40B22B  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov byte ptr [ebp-4] 0 +
or eax 0FFFFFFFFh +
mov edx [ebp-68h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40AC30  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_40AC30  +
***
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_420AC9  +
mov eax large fs:0 +
push eax  +
sub esp 3Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi edx +
mov [ebp-2Ch] edi +
mov ebx ecx +
mov [ebp-20h] ebx +
mov [ebp-30h] ebx +
mov dword ptr [ebp-4] 0 +
xorps xmm0 xmm0 +
mov dword ptr [ebp-34h] 0 +
movq qword ptr [ebp-18h] xmm0 +
mov [ebp-24h] ebx +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 0 +
call sub_40BF60  +
mov [ebp-18h] eax +
mov dword ptr [ebp-4] 1 +
mov dword ptr [ebx] 0 +
call sub_401530  +
mov ecx eax +
test ecx ecx +
jnz loc_40B309  +
push 80004005h  +
call loc_401220  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [ebx] eax +
lea eax [ebp-28h] +
mov dword ptr [ebp-34h] 1 +
push eax  +
push ecx  +
lea eax [ebp-1Ch] +
mov dword ptr [ebp-28h] 0 +
push eax  +
mov ecx edi +
mov dword ptr [ebp-1Ch] 0 +
call loc_40B8F0  +
mov byte ptr [ebp-4] 2 +
or esi 0FFFFFFFFh +
mov eax [ebp-1Ch] +
cmp dword ptr [eax-0Ch] 0 +
jz loc_40B478  +
mov ebx ds:wcsrchr +
push 5Ch  +
push eax  +
call ebx  +
mov ecx eax +
add esp 8 +
test ecx ecx +
jz loc_40B3C5  +
mov eax [ebp-1Ch] +
sub ecx eax +
sar ecx 1 +
cmp ecx 0FFFFFFFFh +
jz loc_40B3C5  +
push 5Ch  +
push eax  +
call ebx  +
add esp 8 +
test eax eax +
jnz loc_40B37D  +
or eax 0FFFFFFFFh +
jmp loc_40B382  +
sub eax [ebp-1Ch] +
sar eax 1 +
inc eax  +
lea ecx [ebp-1Ch] +
push eax  +
lea eax [ebp-38h] +
push eax  +
call sub_405FC0  +
mov byte ptr [ebp-4] 3 +
push dword ptr [ebp-24h]  +
push eax  +
push ecx  +
lea eax [ebp-40h] +
push eax  +
lea ecx [ebp-18h] +
call loc_40BFF0  +
mov byte ptr [ebp-4] 2 +
mov eax esi +
mov edx [ebp-38h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40B3D9  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
jmp loc_40B3D9  +
push dword ptr [ebp-24h]  +
lea eax [ebp-1Ch] +
push eax  +
push ecx  +
lea eax [ebp-48h] +
push eax  +
lea ecx [ebp-18h] +
call loc_40BFF0  +
lea eax [ebp-28h] +
push eax  +
push ecx  +
lea eax [ebp-30h] +
mov ecx edi +
push eax  +
call loc_40B8F0  +
mov byte ptr [ebp-4] 4 +
mov ecx [eax] +
mov esi [ebp-1Ch] +
add esi 0FFFFFFF0h +
lea edx [ecx-10h] +
cmp edx esi +
jz loc_40B447  +
cmp dword ptr [esi+0Ch] 0 +
lea edi [esi+0Ch] +
jl loc_40B438  +
mov eax [edx] +
cmp eax [esi] +
jnz loc_40B438  +
push edx  +
call loc_4034A0  +
mov ebx eax +
add esp 4 +
or eax 0FFFFFFFFh +
xadd [edi] eax +
dec eax  +
test eax eax +
jg loc_40B42A  +
mov ecx [esi] +
push esi  +
mov eax [ecx] +
call dword ptr [eax+4]  +
lea eax [ebx+10h] +
mov ebx ds:wcsrchr +
mov [ebp-1Ch] eax +
jmp loc_40B444  +
push dword ptr [ecx-0Ch]  +
push ecx  +
lea ecx [ebp-1Ch] +
call loc_403510  +
mov edi [ebp-2Ch] +
mov byte ptr [ebp-4] 2 +
or esi 0FFFFFFFFh +
mov edx [ebp-30h] +
mov eax esi +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40B468  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [ebp-1Ch] +
cmp dword ptr [eax-0Ch] 0 +
jnz loc_40B352  +
mov ebx [ebp-20h] +
mov ecx [ebp-14h] +
mov edi 1 +
mov [ebp-20h] ecx +
mov ecx [ebp-18h] +
mov esi [ecx] +
cmp esi ecx +
jz loc_40B500  +
lea edx [eax-10h] +
mov byte ptr [ebp-4] 1 +
or eax 0FFFFFFFFh +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40B51C  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ecx [ebp-18h] +
lea eax [ebp-24h] +
push ecx  +
push dword ptr [ecx]  +
lea ecx [ebp-18h] +
push eax  +
call loc_40BA10  +
push dword ptr [ebp-18h]  +
call j_free  +
add esp 4 +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push esi  +
mov esi ecx +
mov eax [esi] +
push eax  +
push dword ptr [eax]  +
lea eax [ebp+var_4] +
push eax  +
call loc_40BA10  +
push dword ptr [esi]  +
call j_free  +
add esp 4 +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_420BC4  +
mov eax large fs:0 +
push eax  +
sub esp 68h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_70] esi +
push offset aOther  +
lea ecx [ebp+var_68] +
mov [ebp+var_74] esi +
movzx edi dx +
mov [ebp+var_6C] 0 +
call sub_402330  +
push offset aOther  +
lea ecx [ebp+var_64] +
mov [ebp+var_4] 1 +
call sub_402330  +
push offset aUnknown_2  +
lea ecx [ebp+var_60] +
mov byte ptr [ebp+var_4] 2 +
call sub_402330  +
push offset aRunningFullPow  +
lea ecx [ebp+var_5C] +
mov byte ptr [ebp+var_4] 3 +
call sub_402330  +
push offset aWarning  +
lea ecx [ebp+var_58] +
mov byte ptr [ebp+var_4] 4 +
call sub_402330  +
push offset aInTest  +
lea ecx [ebp+var_54] +
mov byte ptr [ebp+var_4] 5 +
call sub_402330  +
push offset aNotApplicable  +
lea ecx [ebp+var_50] +
mov byte ptr [ebp+var_4] 6 +
call sub_402330  +
push offset aPowerOff  +
lea ecx [ebp+var_4C] +
mov byte ptr [ebp+var_4] 7 +
call sub_402330  +
push offset aOffLine  +
lea ecx [ebp+var_48] +
mov byte ptr [ebp+var_4] 8 +
call sub_402330  +
push offset aOffDuty  +
lea ecx [ebp+var_44] +
mov byte ptr [ebp+var_4] 9 +
call sub_402330  +
push offset aDegraded  +
lea ecx [ebp+var_40] +
mov byte ptr [ebp+var_4] 0Ah +
call sub_402330  +
push offset aNotInstalled  +
lea ecx [ebp+var_3C] +
mov byte ptr [ebp+var_4] 0Bh +
call sub_402330  +
push offset aInstallError  +
lea ecx [ebp+var_38] +
mov byte ptr [ebp+var_4] 0Ch +
call sub_402330  +
push offset aPowerSaveUnkno  +
lea ecx [ebp+var_34] +
mov byte ptr [ebp+var_4] 0Dh +
call sub_402330  +
push offset aPowerSaveLowPo  +
lea ecx [ebp+var_30] +
mov byte ptr [ebp+var_4] 0Eh +
call sub_402330  +
push offset aPowerSaveStand  +
lea ecx [ebp+var_2C] +
mov byte ptr [ebp+var_4] 0Fh +
call sub_402330  +
push offset aPowerCycle  +
lea ecx [ebp+var_28] +
mov byte ptr [ebp+var_4] 10h +
call sub_402330  +
push offset aPowerSaveWarni  +
lea ecx [ebp+var_24] +
mov byte ptr [ebp+var_4] 11h +
call sub_402330  +
push offset aPaused  +
lea ecx [ebp+var_20] +
mov byte ptr [ebp+var_4] 12h +
call sub_402330  +
push offset aNotReady  +
lea ecx [ebp+var_1C] +
mov byte ptr [ebp+var_4] 13h +
call sub_402330  +
push offset aNotConfigured  +
lea ecx [ebp+var_18] +
mov byte ptr [ebp+var_4] 14h +
call sub_402330  +
push offset aQuiesced  +
lea ecx [ebp+var_14] +
mov byte ptr [ebp+var_4] 15h +
call sub_402330  +
mov [ebp+var_4] 16h +
cmp edi 16h +
ja loc_40B75F  +
mov eax edi +
lea ecx [ebp+var_68] +
lea eax [ecx+eax*4] +
mov ecx esi +
push eax  +
call loc_402CE0  +
jmp loc_40B76A  +
lea eax [ebp+var_68] +
mov ecx esi +
push eax  +
call loc_402CE0  +
push offset sub_402310  +
push 16h  +
push 4  +
lea eax [ebp+var_68] +
mov [ebp+var_6C] 1 +
push eax  +
mov byte ptr [ebp+var_4] 0 +
call sub_41EB85  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_420BFB  +
mov eax large fs:0 +
push eax  +
sub esp 108h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi edx +
mov eax [ecx+8] +
test eax eax +
jz loc_40B8D6  +
push 0  +
push 0  +
push 100h  +
lea ecx [ebp+MultiByteStr] +
push ecx  +
push 0FFFFFFFFh  +
push eax  +
push 0  +
push 0  +
call ds:WideCharToMultiByte  +
lea eax [ebp+MultiByteStr] +
mov ecx esi +
push eax  +
call loc_402C50  +
mov eax [esi] +
cmp dword ptr [eax-0Ch] 0 +
jz loc_40B882  +
push offset a38  +
push offset asc_428068  +
mov ecx esi +
call loc_405FF0  +
push offset a60  +
push offset asc_428078  +
mov ecx esi +
call loc_405FF0  +
push offset a62  +
push offset asc_428088  +
mov ecx esi +
call loc_405FF0  +
push offset a34  +
push offset asc_428098  +
mov ecx esi +
call loc_405FF0  +
push offset a39  +
push offset asc_4280A8  +
mov ecx esi +
call loc_405FF0  +
push offset a92  +
push offset asc_428058  +
mov ecx esi +
call loc_405FF0  +
mov eax [esi] +
mov ecx 64h +
mov eax [eax-0Ch] +
cmp eax ecx +
cmovl ecx eax +
lea eax [ebp+var_114] +
push ecx  +
push 0  +
push eax  +
mov ecx esi +
call loc_4074C0  +
push eax  +
mov ecx esi +
mov [ebp+var_4] 0 +
call sub_4022A0  +
mov [ebp+var_4] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
mov edx [ebp+var_114] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40B8D6  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
push esi  +
mov esi [ebp+10h] +
push edi  +
mov edi ecx +
mov dword ptr [ebp-8] 0 +
mov eax [esi] +
test eax eax +
js loc_40B9B0  +
mov ecx [edi] +
lea ebx [ecx+eax*2] +
mov eax [ecx-0Ch] +
lea eax [ecx+eax*2] +
mov [ebp+10h] eax +
cmp ebx eax +
jnb loc_40B96E  +
push offset asc_4288A4  +
push ebx  +
call ds:wcsspn  +
mov [ebp-4] eax +
add esp 8 +
lea eax [ebx+eax*2] +
cmp eax [ebp+10h] +
jnb loc_40B96E  +
push offset asc_4288A4  +
push eax  +
call ds:wcscspn  +
mov edx [esi] +
add esp 8 +
add edx [ebp-4] +
push eax  +
lea ecx [edx+1] +
add ecx eax +
mov [esi] ecx +
mov ecx edi +
mov esi [ebp+8] +
push edx  +
push esi  +
call loc_4074C0  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov dword ptr [esi] 0FFFFFFFFh +
mov eax [edi] +
mov ecx [eax-10h] +
test ecx ecx +
jz loc_40B988  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov ecx eax +
test ecx ecx +
jnz loc_40B99A  +
call sub_401530  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+10h]  +
mov ecx eax +
test ecx ecx +
jz loc_40B9BA  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
pop edi  +
pop esi  +
pop ebx  +
lea ecx [eax+10h] +
mov eax [ebp+8] +
mov [eax] ecx +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 80070057h  +
call loc_401220  +
push 80004005h  +
call loc_401220  +
mov eax [ecx] +
cmp dword ptr [eax-0Ch] 0 +
setz al  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_40B9FE  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [esi] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 80004005h  +
call loc_401220  +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_420C37  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov esi [edi] +
mov eax [ebp+0Ch] +
mov ebx [ebp+8] +
mov edx [ebp+10h] +
cmp eax [esi] +
jnz loc_40BA77  +
cmp edx esi +
jnz loc_40BA77  +
mov dword ptr [ebp-4] 0 +
push dword ptr [esi+4]  +
call sub_40BF90  +
mov ecx [edi] +
mov [ecx+4] ecx +
mov ecx [edi] +
mov [ecx] ecx +
mov ecx [edi] +
mov [ecx+8] ecx +
mov dword ptr [edi+4] 0 +
mov ecx [edi] +
mov ecx [ecx] +
mov [ebx] ecx +
jmp loc_40BAE1  +
cmp eax edx +
jz loc_40BADF  +
mov edx eax +
mov eax [edx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_40BAA0  +
jmp loc_40BAC8  +
mov edx [eax+4] +
cmp byte ptr [edx+0Dh] 0 +
jnz loc_40BAC8  +
cmp eax [edx+8] +
jnz loc_40BAC8  +
mov eax edx +
mov [ebp+0Ch] eax +
mov edx [edx+4] +
cmp byte ptr [edx+0Dh] 0 +
jz loc_40BAB5  +
mov [ebp+0Ch] edx +
push ecx  +
lea eax [ebp-10h] +
mov ecx edi +
push eax  +
call loc_40BB00  +
mov eax [ebp+0Ch] +
cmp eax [ebp+10h] +
jnz near ptr dword_40BA7C+4  +
mov [ebx] eax +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+8] +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
mov ebx esi +
mov [ebp-4] ecx +
mov [ebp-8] eax +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_40BB5D  +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40BB3C  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40BB5A  +
nop   +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_40BB30  +
jmp loc_40BB5A  +
mov eax [esi+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40BB58  +
cmp esi [eax+8] +
jnz loc_40BB58  +
mov esi eax +
mov [ebp+0Ch] esi +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_40BB45  +
mov esi eax +
mov [ebp+0Ch] esi +
mov ecx [ebx] +
push edi  +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_40BB6B  +
mov edi [ebx+8] +
jmp loc_40BB83  +
mov eax [ebx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_40BB78  +
mov edi ecx +
jmp loc_40BB83  +
mov edi [esi+8] +
cmp esi ebx +
jnz loc_40BC10  +
cmp byte ptr [edi+0Dh] 0 +
mov edx [ebx+4] +
jnz loc_40BB8F  +
mov [edi+4] edx +
mov eax [ebp-4] +
mov eax [eax] +
cmp [eax+4] ebx +
jnz loc_40BB9E  +
mov [eax+4] edi +
jmp loc_40BBA9  +
cmp [edx] ebx +
jnz loc_40BBA6  +
mov [edx] edi +
jmp loc_40BBA9  +
mov [edx+8] edi +
mov eax [ebp-4] +
mov esi [eax] +
cmp [esi] ebx +
jnz loc_40BBD5  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_40BBBC  +
mov ecx edx +
jmp loc_40BBD3  +
mov eax [edi] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40BBD0  +
mov ecx eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_40BBC6  +
mov eax [ebp-4] +
mov [esi] ecx +
mov esi [eax] +
cmp [esi+8] ebx +
jnz loc_40BC69  +
cmp byte ptr [edi+0Dh] 0 +
jz loc_40BBED  +
mov ecx edx +
mov [esi+8] ecx +
jmp loc_40BC69  +
mov eax [edi+8] +
mov ecx edi +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40BC0B  +
mov ecx eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_40BC00  +
mov [esi+8] ecx +
jmp loc_40BC69  +
mov [ecx+4] esi +
mov eax [ebx] +
mov [esi] eax +
cmp esi [ebx+8] +
jnz loc_40BC20  +
mov edx esi +
jmp loc_40BC3A  +
cmp byte ptr [edi+0Dh] 0 +
mov edx [esi+4] +
jnz loc_40BC2C  +
mov [edi+4] edx +
mov [edx] edi +
mov eax [ebx+8] +
mov [esi+8] eax +
mov eax [ebx+8] +
mov [eax+4] esi +
mov eax [ebp-4] +
mov eax [eax] +
cmp [eax+4] ebx +
jnz loc_40BC49  +
mov [eax+4] esi +
jmp loc_40BC57  +
mov eax [ebx+4] +
cmp [eax] ebx +
jnz loc_40BC54  +
mov [eax] esi +
jmp loc_40BC57  +
mov [eax+8] esi +
mov eax [ebx+4] +
mov [esi+4] eax +
mov al [ebx+0Ch] +
mov cl [esi+0Ch] +
mov [esi+0Ch] al +
mov [ebx+0Ch] cl +
cmp byte ptr [ebx+0Ch] 1 +
mov esi [ebp-4] +
jnz loc_40BDD7  +
mov eax [esi] +
cmp edi [eax+4] +
jz loc_40BDD3  +
cmp byte ptr [edi+0Ch] 1 +
mov [ebp-10h] edx +
mov [ebp-0Ch] edx +
mov [ebp-14h] edx +
jnz loc_40BDD3  +
mov ecx [edx] +
cmp edi ecx +
jnz loc_40BD4F  +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_40BCEA  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [edx+8] +
mov byte ptr [edx+0Ch] 0 +
mov eax [ecx] +
mov [edx+8] eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40BCC2  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_40BCD4  +
mov [eax+4] ecx +
jmp loc_40BCE2  +
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_40BCDF  +
mov [eax] ecx +
jmp loc_40BCE2  +
mov [eax+8] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40BDBC  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_40BD09  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jz loc_40BDB8  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_40BE36  +
mov eax [ecx] +
mov byte ptr [eax+0Ch] 1 +
mov esi [ecx] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [esi+8] +
mov [ecx] eax +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40BD33  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebp-4] +
mov eax [eax] +
cmp ecx [eax+4] +
jnz loc_40BE1B  +
mov [eax+4] esi +
jmp loc_40BE2A  +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_40BD99  +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [edx] +
mov byte ptr [edx+0Ch] 0 +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40BD70  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_40BD82  +
mov [eax+4] ecx +
jmp loc_40BD91  +
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_40BD8F  +
mov [eax+8] ecx +
jmp loc_40BD91  +
mov [eax] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40BDBC  +
mov eax [ecx+8] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_40BE94  +
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_40BE94  +
mov byte ptr [ecx+0Ch] 0 +
mov eax [esi] +
mov ecx [ebp-10h] +
mov edx [edx+4] +
mov edi [ebp-0Ch] +
cmp ecx [eax+4] +
jnz loc_40BC81  +
mov edi [ebp-14h] +
mov byte ptr [edi+0Ch] 1 +
mov edx [ebx+10h] +
or eax 0FFFFFFFFh +
sub edx 10h +
xadd [edx+0Ch] eax +
dec eax  +
pop edi  +
test eax eax +
jg loc_40BDF3  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push ebx  +
call j_free  +
mov ecx [esi+4] +
add esp 4 +
test ecx ecx +
jz loc_40BF48  +
mov eax [ebp-8] +
dec ecx  +
mov [esi+4] ecx +
mov ecx [ebp+0Ch] +
pop esi  +
mov [eax] ecx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ecx+4] +
cmp ecx [eax+8] +
jnz loc_40BE28  +
mov [eax+8] esi +
jmp loc_40BE2A  +
mov [eax] esi +
mov [esi+8] ecx +
mov [ecx+4] esi +
mov ecx [edx+8] +
mov esi [ebp-4] +
mov al [edx+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [edx+0Ch] 1 +
mov eax [ecx+8] +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx+8] +
mov eax [ecx] +
mov [edx+8] eax +
mov eax [ecx] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40BE5A  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_40BE74  +
mov [eax+4] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
jmp loc_40BDD3  +
***
mov eax [edx+4] +
cmp edx [eax] +
jnz loc_40BE87  +
mov [eax] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
jmp loc_40BDD3  +
***
mov [eax+8] ecx +
mov [ecx] edx +
mov [edx+4] ecx +
jmp loc_40BDD3  +
***
mov eax [ecx] +
cmp byte ptr [eax+0Ch] 1 +
jnz loc_40BEE7  +
mov eax [ecx+8] +
mov byte ptr [eax+0Ch] 1 +
mov esi [ecx+8] +
mov byte ptr [ecx+0Ch] 0 +
mov eax [esi] +
mov [ecx+8] eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40BEBA  +
mov [eax+4] ecx +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax [ebp-4] +
mov eax [eax] +
cmp ecx [eax+4] +
jnz loc_40BECF  +
mov [eax+4] esi +
jmp loc_40BEDD  +
mov eax [ecx+4] +
cmp ecx [eax] +
jnz loc_40BEDA  +
mov [eax] esi +
jmp loc_40BEDD  +
mov [eax+8] esi +
mov [esi] ecx +
mov [ecx+4] esi +
mov ecx [edx] +
mov esi [ebp-4] +
mov al [edx+0Ch] +
mov [ecx+0Ch] al +
mov byte ptr [edx+0Ch] 1 +
mov eax [ecx] +
mov byte ptr [eax+0Ch] 1 +
mov ecx [edx] +
mov eax [ecx+8] +
mov [edx] eax +
mov eax [ecx+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_40BF0A  +
mov [eax+4] edx +
mov eax [edx+4] +
mov [ecx+4] eax +
mov eax [esi] +
cmp edx [eax+4] +
jnz loc_40BF25  +
mov [eax+4] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
jmp loc_40BDD3  +
***
mov eax [edx+4] +
cmp edx [eax+8] +
jnz loc_40BF3B  +
mov [eax+8] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
jmp loc_40BDD3  +
***
mov [eax] ecx +
mov [ecx+8] edx +
mov [edx+4] ecx +
jmp loc_40BDD3  +
***
mov ecx [ebp-8] +
mov eax [ebp+0Ch] +
pop esi  +
pop ebx  +
mov [ecx] eax +
mov eax ecx +
mov esp ebp +
pop ebp  +
retn 8  +
***
add esp 4 +
test eax eax +
jz loc_40BF70  +
mov [eax] eax +
lea ecx [eax+4] +
test ecx ecx +
jz loc_40BF79  +
mov [ecx] eax +
lea ecx [eax+8] +
test ecx ecx +
jz loc_40BF82  +
mov [ecx] eax +
mov word ptr [eax+0Ch] 101h +
retn   +
***
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx ecx +
mov esi edi +
cmp byte ptr [edi+0Dh] 0 +
jnz loc_40BFDB  +
push dword ptr [esi+8]  +
mov ecx ebx +
call sub_40BF90  +
mov edx [edi+10h] +
or eax 0FFFFFFFFh +
mov esi [esi] +
sub edx 10h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40BFCA  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push edi  +
call j_free  +
add esp 4 +
mov edi esi +
cmp byte ptr [esi+0Dh] 0 +
jz loc_40BFA3  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_420C60  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp-14h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov [ebp-28h] ecx +
mov eax [ebp+10h] +
mov ebx [ebp+8] +
mov [ebp-18h] eax +
mov al [ebp+14h] +
mov dword ptr [ebp-4] 0 +
mov edx [ecx] +
mov edi edx +
mov cl 1 +
mov [ebp-20h] al +
mov [ebp-1Ch] edx +
mov [ebp-24h] cl +
mov esi [edx+4] +
cmp byte ptr [esi+0Dh] 0 +
jnz loc_40C0A9  +
mov eax [esi+10h] +
mov edi esi +
test eax eax +
jz loc_40C12F  +
mov ecx [ebp-18h] +
mov ecx [ecx] +
mov dx [ecx] +
cmp dx [eax] +
jnz loc_40C088  +
test dx dx +
jz loc_40C084  +
mov dx [ecx+2] +
cmp dx [eax+2] +
jnz loc_40C088  +
add ecx 4 +
add eax 4 +
test dx dx +
jnz loc_40C062  +
xor eax eax +
jmp loc_40C08D  +
sbb eax eax +
or eax 1 +
test eax eax +
sets cl  +
mov [ebp-24h] cl +
test cl cl +
jz loc_40C09D  +
mov esi [esi] +
jmp loc_40C0A0  +
mov esi [esi+8] +
cmp byte ptr [esi+0Dh] 0 +
jz loc_40C050  +
mov edx [ebp-1Ch] +
mov eax edi +
test cl cl +
jz loc_40C126  +
cmp edi [edx] +
jnz loc_40C0D5  +
push dword ptr [ebp-20h]  +
mov ecx [ebp-28h] +
lea eax [ebp-1Ch] +
push dword ptr [ebp-18h]  +
push edi  +
push 1  +
push eax  +
call sub_40C220  +
mov ecx [eax] +
mov [ebx] ecx +
mov byte ptr [ebx+4] 1 +
jmp loc_40C1A1  +
***
cmp byte ptr [edi+0Dh] 0 +
jz loc_40C0E0  +
mov eax [edi+8] +
jmp loc_40C126  +
mov ecx [edi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40C100  +
mov eax ecx +
mov ecx [eax+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40C126  +
mov eax ecx +
mov ecx [eax+8] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_40C0F3  +
jmp loc_40C126  +
mov ecx [edi+4] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40C11F  +
cmp eax [ecx] +
jnz loc_40C11F  +
mov eax ecx +
mov ecx [ecx+4] +
cmp byte ptr [ecx+0Dh] 0 +
jz loc_40C110  +
cmp byte ptr [eax+0Dh] 0 +
cmovz eax ecx +
mov ecx [ebp-18h] +
mov ecx [ecx] +
test ecx ecx +
jnz loc_40C139  +
push 80004005h  +
call loc_401220  +
mov edx [eax+10h] +
call _CxxThrowException  +
mov byte ptr [ebx+4] 0 +
mov [ebx] eax +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jz loc_40C211  +
mov ecx [ecx] +
mov dx [ecx] +
cmp dx [eax] +
jnz loc_40C208  +
test dx dx +
jz loc_40C202  +
mov dx [ecx+2] +
cmp dx [eax+2] +
jnz loc_40C208  +
add ecx 4 +
add eax 4 +
test dx dx +
jnz loc_40C1E0  +
xor eax eax +
pop ebp  +
retn 4  +
***
sbb eax eax +
or eax 1 +
pop ebp  +
retn 4  +
***
push 80004005h  +
call loc_401220  +
push ebx  +
push edi  +
mov edi ecx +
cmp dword ptr [edi+4] 0CCCCCCBh +
jb loc_40C23B  +
push offset aMapSetTTooLong  +
call ds:?_Xlength_error@std@@YAXPBD@Z  +
push [ebp+arg_C]  +
call sub_40C420  +
inc dword ptr [edi+4]  +
mov ebx eax +
mov ecx [ebp+arg_8] +
mov [ebx+4] ecx +
mov edx [edi] +
cmp ecx edx +
jnz loc_40C25F  +
mov [edx+4] ebx +
mov eax [edi] +
mov [eax] ebx +
mov eax [edi] +
jmp loc_40C27B  +
cmp [ebp+arg_4] 0 +
jz loc_40C271  +
mov [ecx] ebx +
mov eax [edi] +
cmp ecx [eax] +
jnz loc_40C27E  +
mov [eax] ebx +
jmp loc_40C27E  +
mov [ecx+8] ebx +
mov eax [edi] +
cmp ecx [eax+8] +
jnz loc_40C27E  +
mov [eax+8] ebx +
mov ecx [ebx+4] +
mov eax ebx +
cmp byte ptr [ecx+0Ch] 0 +
jnz loc_40C40B  +
push esi  +
nop   +
mov ecx [eax+4] +
mov esi [ecx+4] +
mov edx [esi] +
cmp ecx edx +
jnz loc_40C34B  +
mov edx [esi+8] +
cmp byte ptr [edx+0Ch] 0 +
jz loc_40C351  +
cmp eax [ecx+8] +
jnz loc_40C2EC  +
mov eax ecx +
mov edx [eax+8] +
mov ecx [edx] +
mov [eax+8] ecx +
mov ecx [edx] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40C2C7  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_40C2D9  +
mov [ecx+4] edx +
jmp loc_40C2E7  +
mov ecx [eax+4] +
cmp eax [ecx] +
jnz loc_40C2E4  +
mov [ecx] edx +
jmp loc_40C2E7  +
mov [ecx+8] edx +
mov [edx] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx] +
mov ecx [esi+8] +
mov [edx] ecx +
mov ecx [esi+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40C316  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_40C32E  +
mov [ecx+4] esi +
mov [esi+8] edx +
jmp loc_40C3FA  +
mov ecx [edx+4] +
cmp edx [ecx+8] +
jnz loc_40C341  +
mov [ecx+8] esi +
mov [esi+8] edx +
jmp loc_40C3FA  +
mov [ecx] esi +
mov [esi+8] edx +
jmp loc_40C3FA  +
cmp byte ptr [edx+0Ch] 0 +
jnz loc_40C36E  +
mov byte ptr [ecx+0Ch] 1 +
mov byte ptr [edx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov eax [ecx+4] +
jmp loc_40C3FD  +
cmp eax [ecx] +
jnz loc_40C3AE  +
mov eax ecx +
mov edx [eax] +
mov ecx [edx+8] +
mov [eax] ecx +
mov ecx [edx+8] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40C387  +
mov [ecx+4] eax +
mov ecx [eax+4] +
mov [edx+4] ecx +
mov ecx [edi] +
cmp eax [ecx+4] +
jnz loc_40C399  +
mov [ecx+4] edx +
jmp loc_40C3A8  +
mov ecx [eax+4] +
cmp eax [ecx+8] +
jnz loc_40C3A6  +
mov [ecx+8] edx +
jmp loc_40C3A8  +
mov [ecx] edx +
mov [edx+8] eax +
mov [eax+4] edx +
mov ecx [eax+4] +
mov byte ptr [ecx+0Ch] 1 +
mov ecx [eax+4] +
mov ecx [ecx+4] +
mov byte ptr [ecx+0Ch] 0 +
mov ecx [eax+4] +
mov edx [ecx+4] +
mov esi [edx+8] +
mov ecx [esi] +
mov [edx+8] ecx +
mov ecx [esi] +
cmp byte ptr [ecx+0Dh] 0 +
jnz loc_40C3D8  +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [esi+4] ecx +
mov ecx [edi] +
cmp edx [ecx+4] +
jnz loc_40C3EA  +
mov [ecx+4] esi +
jmp loc_40C3F8  +
mov ecx [edx+4] +
cmp edx [ecx] +
jnz loc_40C3F5  +
mov [ecx] esi +
jmp loc_40C3F8  +
mov [ecx+8] esi +
mov [esi] edx +
mov [edx+4] esi +
mov ecx [eax+4] +
cmp byte ptr [ecx+0Ch] 0 +
jz loc_40C290  +
pop esi  +
mov eax [edi] +
pop edi  +
mov eax [eax+4] +
mov byte ptr [eax+0Ch] 1 +
mov eax [ebp+arg_0] +
mov [eax] ebx +
pop ebx  +
pop ebp  +
retn 14h  +
***
push 0FFFFFFFFh  +
push offset loc_420CA1  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
call sub_40C4B0  +
mov esi eax +
mov [ebp+var_4] 0 +
mov [ebp+var_14] esi +
lea ecx [esi+10h] +
mov word ptr [esi+0Ch] 0 +
mov [ebp+var_18] ecx +
mov [ebp+var_1C] ecx +
mov byte ptr [ebp+var_4] 1 +
test ecx ecx +
jz loc_40C47B  +
push [ebp+arg_0]  +
call loc_402CE0  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 14h  +
mov edi ecx +
call sub_41EC6C  +
mov esi eax +
add esp 4 +
test esi esi +
jz loc_40C4C8  +
mov edx [edi] +
mov [esi] edx +
lea ecx [esi+4] +
test ecx ecx +
jz loc_40C4D3  +
mov eax [edi] +
mov [ecx] eax +
lea ecx [esi+8] +
test ecx ecx +
jz loc_40C4DE  +
mov eax [edi] +
mov [ecx] eax +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi ecx +
mov ebx edx +
mov [ebp-4] ebx +
push edi  +
test esi esi +
jz loc_40C72D  +
mov edi [ebp+8] +
test edi edi +
jz loc_40C72D  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_40C72D  +
mov eax ebx +
mov ecx 4 +
imul  ecx +
test edx edx +
jl loc_40C53B  +
jg loc_40C736  +
cmp eax 7FFFFFFFh +
ja loc_40C736  +
push 0  +
push 3  +
push edx  +
push eax  +
call sub_420080  +
mov ecx eax +
mov eax 55555556h +
imul  ebx +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov [ebp-10h] eax +
lea edx [eax+eax*2] +
mov eax ebx +
sub eax edx +
mov [ebp-18h] edx +
add ecx eax +
mov eax 6BCA1AF3h +
imul  ecx +
sar edx 5 +
mov ebx edx +
shr ebx 1Fh +
add ebx edx +
mov edx ecx +
imul eax ebx +
sub edx eax +
jz loc_40C597  +
and edx 80000003h +
jns loc_40C58C  +
dec edx  +
or edx 0FFFFFFFCh +
inc edx  +
jz loc_40C597  +
mov eax 4 +
sub eax edx +
add ecx eax +
lea eax [ebx+1] +
lea eax [ecx+eax*2] +
mov ecx [ebp+0Ch] +
cmp [ecx] eax +
jl loc_40C72D  +
mov ecx [ebp-10h] +
mov eax 6BCA1AF3h +
shl ecx 2 +
xor ebx ebx +
imul  ecx +
mov [ebp-14h] ecx +
xor ecx ecx +
sar edx 5 +
mov eax edx +
mov [ebp-0Ch] ecx +
shr eax 1Fh +
add eax edx +
mov [ebp-8] eax +
mov eax 13h +
mov edx [ebp-8] +
mov [ebp-10h] eax +
test edx edx +
js loc_40C695  +
cmp ecx edx +
jnz loc_40C5FD  +
mov eax [ebp-14h] +
imul ecx edx +
sub eax ecx +
mov ecx [ebp-0Ch] +
cdq   +
and edx 3 +
add eax edx +
mov edx [ebp-8] +
sar eax 2 +
mov [ebp-10h] eax +
test eax eax +
jle loc_40C671  +
mov edx eax +
movzx ecx byte ptr [esi] +
movzx eax byte ptr [esi+1] +
shl ecx 8 +
or ecx eax +
movzx eax byte ptr [esi+2] +
shl ecx 8 +
add esi 3 +
or ecx eax +
shl ecx 8 +
mov eax ecx +
shl ecx 6 +
shr eax 1Ah +
movzx eax ds:byte_428A38[eax] +
mov [edi] al +
mov eax ecx +
shr eax 1Ah +
shl ecx 6 +
movzx eax ds:byte_428A38[eax] +
mov [edi+1] al +
mov eax ecx +
shr eax 1Ah +
shr ecx 14h +
and ecx 3Fh +
movzx eax ds:byte_428A38[eax] +
mov [edi+2] al +
movzx eax ds:byte_428A38[ecx] +
mov [edi+3] al +
add edi 4 +
sub edx 1 +
jnz loc_40C603  +
mov eax [ebp-10h] +
mov ecx [ebp-0Ch] +
mov edx [ebp-8] +
lea ebx [ebx+eax*4] +
mov word ptr [edi] 0A0Dh +
inc ecx  +
add edi 2 +
add ebx 2 +
mov [ebp-0Ch] ecx +
cmp ecx edx +
jle loc_40C5E1  +
test ebx ebx +
jz loc_40C695  +
sub edi 2 +
sub ebx 2 +
mov eax [ebp-4] +
sub eax [ebp-18h] +
mov edx eax +
mov [ebp-4] eax +
inc eax  +
neg edx  +
sbb edx edx +
and edx eax +
jz loc_40C71C  +
mov eax [ebp-4] +
xor ecx ecx +
test eax eax +
jle loc_40C6B6  +
movzx ecx byte ptr [esi] +
inc esi  +
shl ecx 8 +
cmp eax 1 +
jle loc_40C6C7  +
movzx eax byte ptr [esi] +
or ecx eax +
mov eax [ebp-4] +
inc esi  +
shl ecx 8 +
cmp eax 2 +
jle loc_40C6D4  +
movzx eax byte ptr [esi] +
or ecx eax +
shl ecx 8 +
test edx edx +
jle loc_40C6F6  +
mov esi edx +
mov eax ecx +
shl ecx 6 +
shr eax 1Ah +
mov al ds:byte_428A38[eax] +
mov [edi] al +
inc edi  +
sub esi 1 +
jnz loc_40C6E0  +
add ebx edx +
mov eax 4 +
sub eax edx +
neg edx  +
sbb edx edx +
and edx eax +
jle loc_40C71A  +
mov ecx edx +
mov eax 3D3D3D3Dh +
shr ecx 2 +
stos   +
mov ecx edx +
and ecx 3 +
stos   +
add ebx edx +
mov eax [ebp+0Ch] +
pop edi  +
pop esi  +
mov [eax] ebx +
mov eax 1 +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 80004005h  +
call loc_401220  +
push 0FFFFFFFFh  +
push offset loc_420D23  +
mov eax large fs:0 +
push eax  +
sub esp 1A4h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
mov [ebp+var_19C] 0 +
push 0B8h  +
lea eax [ebp+var_190] +
mov [ebp+var_4] 0 +
push 0  +
push eax  +
call memset  +
push [ebp+arg_4]  +
lea ecx [ebp+var_190] +
call sub_40DED0  +
mov byte ptr [ebp+var_4] 1 +
cmp [ebp+var_134] 0 +
jnz loc_40C82D  +
mov dword ptr [edi+14h] 7 +
mov dword ptr [edi+10h] 0 +
cmp dword ptr [edi+14h] 8 +
jb loc_40C7D7  +
mov eax [edi] +
jmp loc_40C7D9  +
mov eax edi +
xor ecx ecx +
push ecx  +
mov [eax] cx +
mov ecx edi +
push offset unk_427F70  +
call sub_402590  +
lea ecx [ebp+var_120] +
call sub_40DE20  +
lea ecx [ebp+var_120] +
call ds:??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
mov [ebp+var_4] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
mov esi [ebp+arg_4] +
add esi 0FFFFFFF0h +
xadd [esi+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40CA7D  +
mov ecx [esi] +
push esi  +
mov edx [ecx] +
call dword ptr [edx+4]  +
jmp loc_40CA7D  +
push 34h  +
call sub_41EC6C  +
mov esi eax +
add esp 4 +
mov [ebp+var_1A0] esi +
push 0  +
mov ecx esi +
mov byte ptr [ebp+var_4] 2 +
call ds:??0?$codecvt@_WDU_Mbstatet@@@std@@QAE@I@Z  +
lea eax [ebp+var_1B0] +
mov dword ptr [esi] offset off_424C98 +
push eax  +
mov byte ptr [ebp+var_4] 1 +
call ds:?empty@locale@std@@SA?AV12@XZ  +
mov byte ptr [ebp+var_4] 3 +
push dword ptr [eax+4]  +
call ds:?_New_Locimp@_Locimp@locale@std@@CAPAV123@ABV123@@Z  +
mov ecx ds:?id@?$codecvt@_WDU_Mbstatet@@@std@@2V0locale@2@A +
add esp 8 +
mov [ebp+var_194] eax +
call ds:??Bid@locale@std@@QAEIXZ  +
mov ecx [ebp+var_194] +
push eax  +
push esi  +
call ds:?_Addfac@_Locimp@locale@std@@AAEXPAVfacet@23@I@Z  +
mov eax [ebp+var_194] +
push offset asc_4289DC  +
mov dword ptr [eax+10h] 0 +
mov ecx [ebp+var_194] +
lea ecx [ecx+18h] +
call ds:??4?$_Yarn@D@std@@QAEAAV01@PBD@Z  +
lea eax [ebp+var_198] +
mov byte ptr [ebp+var_4] 4 +
push eax  +
lea eax [ebp+var_1A8] +
push eax  +
mov eax [ebp+var_190] +
lea ecx [ebp+var_190] +
mov eax [eax+4] +
add ecx eax +
call ds:?imbue@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAE?AVlocale@2@ABV32@@Z  +
mov byte ptr [ebp+var_4] 5 +
mov ecx [ebp+var_1A4] +
test ecx ecx +
jz loc_40C8FD  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_40C8FD  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov byte ptr [ebp+var_4] 6 +
mov ecx [ebp+var_194] +
test ecx ecx +
jz loc_40C91C  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_40C91C  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov byte ptr [ebp+var_4] 7 +
mov ecx [ebp+var_1AC] +
test ecx ecx +
jz loc_40C93B  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_40C93B  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
push 0B0h  +
lea eax [ebp+var_D8] +
mov byte ptr [ebp+var_4] 1 +
push 0  +
push eax  +
call memset  +
add esp 4 +
lea ecx [ebp+var_D8] +
call sub_4064B0  +
lea eax [ebp+var_180] +
mov byte ptr [ebp+var_4] 8 +
push eax  +
lea ecx [ebp+var_C8] +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@PAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@@Z  +
lea eax [ebp+var_28] +
push eax  +
lea ecx [ebp+var_D8] +
call sub_406490  +
lea ecx [ebp+var_180] +
mov byte ptr [ebp+var_4] 9 +
call sub_40F950  +
test eax eax +
jnz loc_40C9B3  +
push eax  +
mov eax [ebp+var_190] +
lea ecx [ebp+var_190] +
push 2  +
mov eax [eax+4] +
add ecx eax +
call ds:?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z  +
lea eax [ebp+var_28] +
mov ecx edi +
push eax  +
call sub_402750  +
mov eax [ebp+var_14] +
cmp eax 8 +
jb loc_40C9D3  +
inc eax  +
lea ecx [ebp+var_28] +
push eax  +
push [ebp+var_28]  +
call sub_402E00  +
xor eax eax +
mov [ebp+var_14] 7 +
mov word ptr [ebp+var_28] ax +
mov eax [ebp+var_D8] +
mov [ebp+var_18] 0 +
mov eax [eax+4] +
mov [ebp+eax+var_D8] offset off_428210 +
mov eax [ebp+var_D8] +
mov ecx [eax+4] +
lea eax [ecx-68h] +
mov [ebp+ecx+var_DC] eax +
lea ecx [ebp+var_C0] +
mov [ebp+var_C0] offset off_4281C8 +
call sub_407980  +
lea ecx [ebp+var_C0] +
call ds:??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
lea ecx [ebp+var_B8] +
call ds:??1?$basic_iostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
lea ecx [ebp+var_70] +
call ds:??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
lea ecx [ebp+var_120] +
call sub_40DE20  +
lea ecx [ebp+var_120] +
call ds:??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
mov [ebp+var_4] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
mov edx [ebp+arg_4] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40CA7D  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
lea esi [ecx+70h] +
mov ecx esi +
call sub_40DE20  +
mov ecx esi +
pop esi  +
jmp ds:??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_420E0F  +
mov eax large fs:0 +
push eax  +
sub esp 550h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx [ebp+8] +
mov [ebp-538h] ebx +
mov [ebp-554h] ebx +
mov dword ptr [ebp-534h] 0 +
push offset asc_428058  +
lea eax [ebp+0Ch] +
mov dword ptr [ebp-4] 1 +
push eax  +
lea eax [ebp-530h] +
mov dword ptr [ebp-42Ch] 0 +
push eax  +
call loc_40DA30  +
push offset aCr_win_client_  +
push eax  +
lea eax [ebp-42Ch] +
mov byte ptr [ebp-4] 2 +
push eax  +
call loc_40DA30  +
add esp 18h +
mov byte ptr [ebp-4] 4 +
or edi 0FFFFFFFFh +
mov edx [ebp-530h] +
mov eax edi +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40CB6A  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
xorps xmm0 xmm0 +
mov ecx ebx +
movq qword ptr [ebx] xmm0 +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
call sub_408350  +
mov [ebx] eax +
push 0B8h  +
lea eax [ebp-52Ch] +
mov dword ptr [ebp-534h] 1 +
push 0  +
push eax  +
call memset  +
mov esi [ebp-42Ch] +
lea ecx [ebp-4BCh] +
add esp 0Ch +
mov dword ptr [ebp-52Ch] offset unk_428A24 +
call ds:??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ  +
push 0  +
push 0  +
lea eax [ebp-51Ch] +
mov byte ptr [ebp-4] 5 +
push eax  +
lea ecx [ebp-52Ch] +
mov dword ptr [ebp-534h] 3 +
call ds:??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z  +
mov dword ptr [ebp-4] 6 +
mov eax [ebp-52Ch] +
push 0  +
mov eax [eax+4] +
mov dword ptr [ebp+eax-52Ch] offset off_426D3C +
mov eax [ebp-52Ch] +
mov ecx [eax+4] +
lea eax [ecx-70h] +
mov [ebp+ecx-530h] eax +
lea ecx [ebp-51Ch] +
call sub_40FEF0  +
push 40h  +
push 1  +
push esi  +
lea ecx [ebp-51Ch] +
mov byte ptr [ebp-4] 7 +
call sub_40FDA0  +
test eax eax +
jnz loc_40CC55  +
push eax  +
mov eax [ebp-52Ch] +
lea ecx [ebp-52Ch] +
push 2  +
mov eax [eax+4] +
add ecx eax +
call ds:?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z  +
mov dword ptr [ebp-414h] 0Fh +
mov dword ptr [ebp-418h] 0 +
mov byte ptr [ebp-428h] 0 +
mov dword ptr [ebp-430h] 0Fh +
mov dword ptr [ebp-434h] 0 +
mov byte ptr [ebp-444h] 0 +
mov dword ptr [ebp-460h] 0Fh +
mov dword ptr [ebp-464h] 0 +
mov byte ptr [ebp-474h] 0 +
mov dword ptr [ebp-448h] 0Fh +
mov dword ptr [ebp-44Ch] 0 +
mov byte ptr [ebp-45Ch] 0 +
mov byte ptr [ebp-4] 0Ch +
lea ecx [ebp-52Ch] +
mov eax [ebp-52Ch] +
push 0Ah  +
mov eax [eax+4] +
add ecx eax +
call ds:?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z  +
movzx eax al +
lea edx [ebp-45Ch] +
push eax  +
lea ecx [ebp-52Ch] +
call sub_408830  +
mov ecx eax +
add esp 4 +
mov eax [ecx] +
mov eax [eax+4] +
test byte ptr [eax+ecx+0Ch] 6 +
jnz loc_40CFE7  +
mov esi 3FFh +
lea eax [ebp-45Ch] +
cmp [ebp-44Ch] esi +
cmovb esi [ebp-44Ch] +
cmp dword ptr [ebp-448h] 10h +
push esi  +
cmovnb eax [ebp-45Ch] +
push eax  +
lea eax [ebp-410h] +
push 400h  +
push eax  +
call ds:strncpy_s  +
add esp 10h +
cmp esi 400h +
jnb loc_40D166  +
lea eax [ebp-530h] +
mov byte ptr [ebp+esi-410h] 0 +
push eax  +
lea eax [ebp-410h] +
mov dword ptr [ebp-530h] 0 +
push offset asc_428A14  +
push eax  +
mov bl 1 +
call ds:strtok_s  +
mov edx eax +
add esp 0Ch +
test edx edx +
jz loc_40CF9B  +
cmp byte ptr [edx] 0 +
mov dword ptr [ebp-53Ch] 0Fh +
mov dword ptr [ebp-540h] 0 +
mov byte ptr [ebp-550h] 0 +
jnz loc_40CDB7  +
xor eax eax +
jmp loc_40CDC9  +
mov eax edx +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_40CDC0  +
sub eax esi +
push eax  +
push edx  +
lea ecx [ebp-550h] +
call sub_402910  +
mov eax [ebp-414h] +
cmp eax 10h +
jb loc_40CDF4  +
inc eax  +
lea ecx [ebp-428h] +
push eax  +
push dword ptr [ebp-428h]  +
call sub_402E70  +
lea eax [ebp-550h] +
mov dword ptr [ebp-414h] 0Fh +
push eax  +
lea ecx [ebp-428h] +
mov dword ptr [ebp-418h] 0 +
mov byte ptr [ebp-428h] 0 +
call sub_402BE0  +
mov byte ptr [ebp-4] 0Ch +
mov eax [ebp-53Ch] +
cmp eax 10h +
jb loc_40CE43  +
inc eax  +
lea ecx [ebp-550h] +
push eax  +
push dword ptr [ebp-550h]  +
call sub_402E70  +
lea edx [ebp-428h] +
lea ecx [ebp-550h] +
call sub_404E80  +
mov esi eax +
lea eax [ebp-428h] +
cmp eax esi +
jz loc_40CEA5  +
mov eax [ebp-414h] +
cmp eax 10h +
jb loc_40CE7E  +
inc eax  +
lea ecx [ebp-428h] +
push eax  +
push dword ptr [ebp-428h]  +
call sub_402E70  +
push esi  +
lea ecx [ebp-428h] +
mov dword ptr [ebp-414h] 0Fh +
mov dword ptr [ebp-418h] 0 +
mov byte ptr [ebp-428h] 0 +
call sub_402BE0  +
mov byte ptr [ebp-4] 0Ch +
mov eax [ebp-53Ch] +
cmp eax 10h +
jb loc_40CEC7  +
inc eax  +
lea ecx [ebp-550h] +
push eax  +
push dword ptr [ebp-550h]  +
call sub_402E70  +
cmp dword ptr [ebp-418h] 0 +
jz loc_40CF9B  +
lea eax [ebp-428h] +
push 0FFFFFFFFh  +
push 0  +
push eax  +
test bl bl +
jz loc_40CEEE  +
lea ecx [ebp-444h] +
jmp loc_40CF72  +
lea ecx [ebp-474h] +
call sub_402A10  +
xor edi edi +
call sub_402A10  +
lea eax [ebp-530h] +
push eax  +
push offset asc_428A14  +
push 0  +
call ds:strtok_s  +
mov edx eax +
add esp 0Ch +
xor bl 1 +
test edx edx +
jnz loc_40CD93  +
mov eax [ebp-52Ch] +
lea ecx [ebp-52Ch] +
push 0Ah  +
mov eax [eax+4] +
add ecx eax +
call ds:?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QBEDD@Z  +
movzx eax al +
lea edx [ebp-45Ch] +
push eax  +
lea ecx [ebp-52Ch] +
call sub_408830  +
mov ecx eax +
add esp 4 +
mov eax [ecx] +
mov eax [eax+4] +
test byte ptr [eax+ecx+0Ch] 6 +
jz loc_40CD10  +
mov ebx [ebp-538h] +
or edi 0FFFFFFFFh +
lea ecx [ebp-51Ch] +
call sub_40FD30  +
test eax eax +
jnz loc_40D010  +
push eax  +
mov eax [ebp-52Ch] +
lea ecx [ebp-52Ch] +
push 2  +
mov eax [eax+4] +
add ecx eax +
call ds:?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z  +
mov eax [ebp-448h] +
cmp eax 10h +
jb loc_40D02E  +
inc eax  +
lea ecx [ebp-45Ch] +
push eax  +
push dword ptr [ebp-45Ch]  +
call sub_402E70  +
mov eax [ebp-460h] +
mov dword ptr [ebp-448h] 0Fh +
mov dword ptr [ebp-44Ch] 0 +
mov byte ptr [ebp-45Ch] 0 +
cmp eax 10h +
jb loc_40D067  +
inc eax  +
lea ecx [ebp-474h] +
push eax  +
push dword ptr [ebp-474h]  +
call sub_402E70  +
mov eax [ebp-430h] +
mov dword ptr [ebp-460h] 0Fh +
mov dword ptr [ebp-464h] 0 +
mov byte ptr [ebp-474h] 0 +
cmp eax 10h +
jb loc_40D0A0  +
inc eax  +
lea ecx [ebp-444h] +
push eax  +
push dword ptr [ebp-444h]  +
call sub_402E70  +
mov eax [ebp-414h] +
mov dword ptr [ebp-430h] 0Fh +
mov dword ptr [ebp-434h] 0 +
mov byte ptr [ebp-444h] 0 +
cmp eax 10h +
jb loc_40D0D9  +
inc eax  +
lea ecx [ebp-428h] +
push eax  +
push dword ptr [ebp-428h]  +
call sub_402E70  +
lea ecx [ebp-4BCh] +
mov dword ptr [ebp-414h] 0Fh +
mov dword ptr [ebp-418h] 0 +
mov byte ptr [ebp-428h] 0 +
call sub_40E910  +
lea ecx [ebp-4BCh] +
call ds:??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov eax edi +
mov edx [ebp-42Ch] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40D12C  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov byte ptr [ebp-4] 0 +
mov eax [ebp+0Ch] +
add eax 0FFFFFFF0h +
xadd [eax+0Ch] edi +
dec edi  +
test edi edi +
jg loc_40D148  +
mov ecx [eax] +
push eax  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov eax ebx +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_41F4FF  +
mov ecx esi +
call sub_40E910  +
mov ecx esi +
pop esi  +
jmp ds:??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ  +
***
mov ecx esi +
call sub_40DC30  +
mov ecx esi +
pop esi  +
jmp ds:??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_420E7C  +
mov eax large fs:0 +
push eax  +
sub esp 55Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
push 0B0h  +
lea eax [ebp-564h] +
mov dword ptr [ebp-4] 1 +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea ecx [ebp-564h] +
push 1  +
call sub_40DD30  +
push offset aRb  +
mov byte ptr [ebp-4] 2 +
lea eax [ebp-4B4h] +
push dword ptr [ebp+8]  +
push eax  +
call ds:_wfopen_s  +
add esp 0Ch +
or edi 0FFFFFFFFh +
test eax eax +
jnz loc_40D44E  +
push 40h  +
push 0Ah  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-560h] +
call sub_40F9C0  +
test eax eax +
lea ecx [ebp-564h] +
mov eax [ebp-564h] +
push 0  +
mov eax [eax+4] +
jnz loc_40D262  +
push 2  +
add ecx eax +
call ds:?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z  +
jmp loc_40D26C  +
push 0  +
add ecx eax +
call ds:?clear@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z  +
mov eax [ebp-564h] +
mov eax [eax+4] +
mov eax [ebp+eax-558h] +
shr eax 2 +
test al 1 +
jnz loc_40D44E  +
push dword ptr [ebp-4B4h]  +
mov esi ds:fread_s +
lea eax [ebp-414h] +
push 400h  +
push 1  +
push 400h  +
push eax  +
call esi  +
add esp 14h +
test eax eax +
jz loc_40D44E  +
mov ebx ds:__imp_free +
mov ecx 400h +
cmp eax ecx +
cmovb ecx eax +
cmp ecx 401h +
jnb loc_40D510  +
mov byte ptr [ebp+ecx-414h] 0 +
lea edx [ebp-414h] +
push ecx  +
lea ecx [ebp-568h] +
mov dword ptr [ebp-568h] 0 +
call sub_40D520  +
push 84h  +
lea eax [ebp-4B0h] +
mov byte ptr [ebp-4] 3 +
push 0  +
push eax  +
call memset  +
add esp 10h +
lea eax [ebp-4ACh] +
lea ecx [ebp-4B0h] +
mov [ebp-4B0h] eax +
push 3  +
push dword ptr [ebp-568h]  +
call loc_4076A0  +
mov byte ptr [ebp-4] 4 +
mov edx [ebp-4B0h] +
mov dword ptr [ebp-418h] 0Fh +
mov dword ptr [ebp-41Ch] 0 +
mov byte ptr [ebp-42Ch] 0 +
cmp byte ptr [edx] 0 +
jnz loc_40D361  +
xor ecx ecx +
jmp loc_40D375  +
mov ecx edx +
lea esi [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40D366  +
sub ecx esi +
mov esi ds:fread_s +
push ecx  +
push edx  +
lea ecx [ebp-42Ch] +
call sub_402910  +
mov byte ptr [ebp-4] 5 +
lea eax [ebp-42Ch] +
cmp dword ptr [ebp-418h] 10h +
push offset asc_428A20  +
cmovnb eax [ebp-42Ch] +
push eax  +
lea eax [ebp-564h] +
push eax  +
call loc_4101B0  +
add esp 8 +
push eax  +
call loc_4101B0  +
mov eax [ebp-418h] +
add esp 8 +
cmp eax 10h +
jb loc_40D3D6  +
inc eax  +
lea ecx [ebp-42Ch] +
push eax  +
push dword ptr [ebp-42Ch]  +
call sub_402E70  +
mov eax [ebp-4B0h] +
lea ecx [ebp-4ACh] +
mov dword ptr [ebp-418h] 0Fh +
mov dword ptr [ebp-41Ch] 0 +
mov byte ptr [ebp-42Ch] 0 +
cmp eax ecx +
jz loc_40D407  +
push eax  +
call ebx  +
add esp 4 +
mov byte ptr [ebp-4] 2 +
mov eax edi +
mov edx [ebp-568h] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40D428  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push dword ptr [ebp-4B4h]  +
lea eax [ebp-414h] +
push 400h  +
push 1  +
push 400h  +
push eax  +
call esi  +
add esp 14h +
test eax eax +
jnz loc_40D2C0  +
cmp dword ptr [ebp-514h] 0 +
jz loc_40D48C  +
lea ecx [ebp-564h] +
call ds:?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@XZ  +
lea ecx [ebp-560h] +
call sub_40F950  +
test eax eax +
jnz loc_40D48C  +
push eax  +
mov eax [ebp-564h] +
lea ecx [ebp-564h] +
push 2  +
mov eax [eax+4] +
add ecx eax +
call ds:?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z  +
mov eax [ebp-4B4h] +
test eax eax +
jz loc_40D4A0  +
push eax  +
call ds:fclose  +
add esp 4 +
lea ecx [ebp-4FCh] +
call sub_40DC30  +
lea ecx [ebp-4FCh] +
call ds:??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
mov byte ptr [ebp-4] 0 +
mov eax edi +
mov edx [ebp+8] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40D4D5  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov edx [ebp+0Ch] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] edi +
dec edi  +
test edi edi +
jg loc_40D4F4  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_41F4FF  +
push 0FFFFFFFFh  +
push offset loc_420ED1  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_18] edx +
mov ebx ecx +
mov [ebp+var_20] ebx +
mov [ebp+var_4] 0 +
mov [ebp+var_1C] 0 +
call sub_401530  +
mov ecx eax +
test ecx ecx +
jnz loc_40D573  +
push 80004005h  +
call loc_401220  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
lea esi [eax+10h] +
mov [ebp+var_10] esi +
mov eax [ebp+arg_0] +
mov edi 4 +
imul  edi +
mov [ebp+var_4] 1 +
test edx edx +
jl loc_40D5A6  +
jg loc_40D59C  +
cmp eax 7FFFFFFFh +
jbe loc_40D5A6  +
push 80004005h  +
call loc_401220  +
push 0  +
push 3  +
push edx  +
push eax  +
call sub_420080  +
mov [ebp+var_14] eax +
mov eax 55555556h +
imul  [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov ecx edx +
shr ecx 1Fh +
add ecx edx +
lea ecx [ecx+ecx*2] +
sub eax ecx +
mov ecx [ebp+var_14] +
add ecx eax +
mov eax 6BCA1AF3h +
imul  ecx +
sar edx 5 +
mov eax edx +
shr eax 1Fh +
add eax edx +
mov edx ecx +
mov [ebp+var_14] eax +
imul eax eax +
sub edx eax +
jz loc_40D600  +
and edx 80000003h +
jns loc_40D5FA  +
dec edx  +
or edx 0FFFFFFFCh +
inc edx  +
jz loc_40D600  +
sub edi edx +
add ecx edi +
mov edi [ebp+var_14] +
inc edi  +
lea edi [ecx+edi*2] +
mov [ebp+var_14] edi +
test edi edi +
jns loc_40D618  +
push 80070057h  +
call loc_401220  +
mov eax [esi-8] +
mov ecx 1 +
sub ecx [esi-4] +
sub eax edi +
or eax ecx +
jge loc_40D635  +
push edi  +
lea ecx [ebp+var_10] +
call sub_410000  +
mov esi [ebp+var_10] +
cmp edi [esi-8] +
jg loc_40D60E  +
mov edx [ebp+arg_0] +
lea eax [ebp+var_14] +
push ecx  +
mov ecx [ebp+var_18] +
push eax  +
mov [esi-0Ch] edi +
push esi  +
mov byte ptr [edi+esi] 0 +
call loc_40C4F0  +
mov eax [ebp+var_14] +
add esp 0Ch +
test eax eax +
js loc_40D60E  +
cmp eax [esi-8] +
jg loc_40D60E  +
mov [esi-0Ch] eax +
mov ecx ebx +
mov byte ptr [eax+esi] 0 +
push esi  +
mov dword ptr [ebx] 0 +
call sub_402330  +
push 0Dh  +
mov ecx ebx +
mov [ebp+var_1C] 1 +
call loc_40DB10  +
push 0Ah  +
mov ecx ebx +
call loc_40DB10  +
mov byte ptr [ebp+var_4] 0 +
add esi 0FFFFFFF0h +
or eax 0FFFFFFFFh +
xadd [esi+0Ch] eax +
dec eax  +
test eax eax +
jg loc_40D6AB  +
mov ecx [esi] +
push esi  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
retn   +
***
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_420EF0  +
mov eax large fs:0 +
push eax  +
sub esp 1Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-28h] ecx +
mov edx [ebp+8] +
xor esi esi +
mov edi [ebp+0Ch] +
mov ebx [ebp+10h] +
mov eax [edx] +
mov [ebp-1Ch] eax +
mov eax [edx+4] +
mov [ebp-18h] eax +
cmp [ebp+14h] esi +
jbe loc_40D767  +
cmp edi ebx +
jz loc_40D767  +
mov eax [ecx] +
lea edx [ebp-20h] +
push edx  +
lea edx [ebp-12h] +
push edx  +
lea edx [ebp-14h] +
push edx  +
lea edx [ebp-24h] +
push edx  +
push ebx  +
push edi  +
lea edx [ebp-1Ch] +
push edx  +
call dword ptr [eax+18h]  +
test eax eax +
jnz loc_40D787  +
lea eax [ebp-12h] +
cmp [ebp-20h] eax +
jnz loc_40D75C  +
inc esi  +
mov edi [ebp-24h] +
mov ecx [ebp-28h] +
cmp esi [ebp+14h] +
jb loc_40D730  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
cmp eax 3 +
jnz loc_40D767  +
sub ebx edi +
lea eax [esi+ebx] +
jmp loc_40D769  +
***
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edx [ebp+arg_C] +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_18] +
mov [edx] eax +
mov eax [ebp+arg_10] +
mov [edi] eax +
mov eax [ebp+arg_8] +
cmp [edx] eax +
jz loc_40D8B9  +
mov ecx [ebp+arg_14] +
cmp [edi] ecx +
jz loc_40D8B9  +
mov eax [edx] +
movzx eax word ptr [eax] +
cmp eax 10FFFFh +
ja loc_40D8CA  +
cmp eax 80h +
jnb loc_40D809  +
mov bl al +
xor esi esi +
jmp loc_40D866  +
mov ebx eax +
cmp eax 800h +
jnb loc_40D81F  +
shr ebx 6 +
mov esi 1 +
or bl 0C0h +
jmp loc_40D866  +
cmp eax 10000h +
jnb loc_40D833  +
shr ebx 0Ch +
mov esi 2 +
or bl 0E0h +
jmp loc_40D866  +
cmp eax 200000h +
jnb loc_40D847  +
shr ebx 12h +
mov esi 3 +
or bl 0F0h +
jmp loc_40D866  +
cmp eax 4000000h +
jnb loc_40D85B  +
shr ebx 18h +
mov esi 4 +
or bl 0F8h +
jmp loc_40D866  +
shr ebx 1Eh +
mov esi 5 +
or bl 0FCh +
mov edx [ebp+arg_0] +
cmp byte ptr [edx] 0 +
jnz loc_40D871  +
mov byte ptr [edx] 1 +
mov edx ecx +
lea ecx [esi+1] +
sub edx [edi] +
cmp edx ecx +
mov edx [ebp+arg_C] +
jl loc_40D8B9  +
add dword ptr [edx] 2 +
mov ecx [edi] +
mov [ecx] bl +
inc dword ptr [edi]  +
mov ebx [edi] +
test esi esi +
jz loc_40D8AE  +
lea ecx [esi+esi*2] +
add ecx ecx +
sub ecx 6 +
mov edx eax +
shr edx cl +
dec esi  +
and dl 3Fh +
or dl 80h +
mov [ebx] dl +
inc dword ptr [edi]  +
mov ebx [edi] +
test esi esi +
jg loc_40D893  +
mov edx [ebp+arg_C] +
mov eax [ebp+arg_8] +
cmp [edx] eax +
jnz loc_40D7E1  +
mov ecx [ebp+arg_4] +
xor eax eax +
cmp ecx [edx] +
pop edi  +
pop esi  +
setz al  +
pop ebx  +
pop ebp  +
retn 1Ch  +
pop edi  +
pop esi  +
mov eax 2 +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+20h] +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+14h] +
mov [edi] eax +
mov eax [ebp+18h] +
mov [edx] eax +
mov eax [ebp+10h] +
cmp [edi] eax +
jz loc_40D99C  +
mov eax [ebp+1Ch] +
cmp [edx] eax +
jz loc_40D99C  +
mov ebx [edi] +
mov cl [ebx] +
cmp cl 80h +
jnb loc_40D91F  +
movzx eax cl +
lea ecx [ebx+1] +
mov [edi] ecx +
jmp loc_40D977  +
cmp cl 0C0h +
jb loc_40D9E9  +
movzx eax cl +
cmp cl 0E0h +
jnb loc_40D9AD  +
and eax 1Fh +
mov esi 1 +
mov edx [ebp+10h] +
lea ecx [esi+1] +
sub edx ebx +
cmp edx ecx +
jl loc_40D99C  +
lea edx [ebx+1] +
mov [edi] edx +
test esi esi +
jz loc_40D974  +
mov bl [edx] +
lea ecx [ebx+80h] +
cmp cl 3Fh +
ja loc_40D9EB  +
movzx ecx bl +
dec esi  +
and ecx 3Fh +
shl eax 6 +
inc edx  +
or eax ecx +
mov [edi] edx +
test esi esi +
jg loc_40D950  +
mov edx [ebp+20h] +
mov ecx [ebp+8] +
cmp byte ptr [ecx] 0 +
jnz loc_40D982  +
mov byte ptr [ecx] 1 +
cmp eax 10FFFFh +
ja loc_40D9EB  +
mov ecx [edx] +
mov [ecx] ax +
add dword ptr [edx] 2 +
mov eax [ebp+10h] +
cmp [edi] eax +
jnz loc_40D901  +
mov ecx [ebp+0Ch] +
xor eax eax +
cmp ecx [edi] +
pop edi  +
pop esi  +
setz al  +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
cmp cl 0F0h +
jnb loc_40D9BF  +
and eax 0Fh +
mov esi 2 +
jmp loc_40D938  +
***
cmp cl 0F8h +
jnb loc_40D9D1  +
and eax 7 +
mov esi 3 +
jmp loc_40D938  +
***
and eax 3 +
cmp cl 0FCh +
sbb esi esi +
add esi 5 +
jnz loc_40D938  +
lea ecx [ebx+1] +
mov [edi] ecx +
jmp loc_40D977  +
***
inc dword ptr [edi]  +
pop edi  +
pop esi  +
mov eax 2 +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
push ecx  +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
mov [ebp+var_4] esi +
call ds:??0?$codecvt@_WDU_Mbstatet@@@std@@QAE@I@Z  +
mov dword ptr [esi] offset off_424C98 +
mov eax esi +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_420F39  +
mov eax large fs:0 +
push eax  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov ebx [ebp+0Ch] +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-10h] 0 +
mov esi [ebp+8] +
mov dword ptr [esi] 0 +
mov eax [ebx] +
mov ecx [eax-10h] +
test ecx ecx +
jz loc_40DA84  +
mov eax [ecx] +
call dword ptr [eax+10h]  +
mov ecx eax +
test ecx ecx +
jnz loc_40DAA0  +
call sub_401530  +
mov ecx eax +
mov edx [eax] +
call dword ptr [edx+10h]  +
mov ecx eax +
test ecx ecx +
jnz loc_40DAA0  +
push 80004005h  +
call loc_401220  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [esi] eax +
mov edi [ebp+10h] +
mov dword ptr [ebp-4] 0 +
mov dword ptr [ebp-10h] 1 +
test edi edi +
jnz loc_40DAC3  +
xor edx edx +
jmp loc_40DADF  +
mov edx edi +
lea ecx [edx+2] +
mov ax [edx] +
add edx 2 +
test ax ax +
jnz loc_40DAD0  +
sub edx ecx +
sar edx 1 +
mov ecx [ebx] +
push edx  +
push edi  +
push dword ptr [ecx-0Ch]  +
push ecx  +
push esi  +
call loc_40F5F0  +
add esp 14h +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ecx +
mov [ebp-0Ch] esi +
mov eax [esi] +
mov ebx [eax-0Ch] +
mov [ebp-8] ebx +
test ebx ebx +
js loc_40DBC2  +
mov ecx 1 +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax ebx +
or ecx eax +
jge loc_40DB46  +
push ebx  +
mov ecx esi +
call sub_403CE0  +
mov eax [esi] +
mov edx eax +
lea ecx [eax+ebx*2] +
mov [ebp-4] ecx +
cmp eax ecx +
jnb loc_40DB9B  +
mov si [ebp+8] +
push edi  +
lea ebx [eax+2] +
cmp [eax] si +
jz loc_40DB8E  +
lea edi [edx+2] +
xor esi esi +
cmp edx edi +
jz loc_40DB8A  +
cmp esi 1 +
jnb loc_40DB87  +
mov cx [eax] +
inc esi  +
mov [edx] cx +
add eax 2 +
add edx 2 +
cmp edx edi +
jnz loc_40DB71  +
mov ecx [ebp-4] +
mov si [ebp+8] +
mov eax ebx +
cmp ebx ecx +
jb loc_40DB60  +
mov ebx [ebp-8] +
mov esi [ebp-0Ch] +
pop edi  +
sub eax edx +
xor ecx ecx +
sar eax 1 +
sub ebx eax +
mov [edx] cx +
js loc_40DBC2  +
mov ecx [esi] +
cmp ebx [ecx-8] +
jg loc_40DBC2  +
mov [ecx-0Ch] ebx +
xor edx edx +
mov ecx [esi] +
pop esi  +
mov [ecx+ebx*2] dx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 80070057h  +
call loc_401220  +
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
test edx edx +
js loc_40DBEE  +
mov eax [ecx] +
cmp edx [eax-8] +
jg loc_40DBEE  +
mov [eax-0Ch] edx +
mov eax [ecx] +
mov byte ptr [edx+eax] 0 +
pop ebp  +
retn 4  +
***
push 80070057h  +
call loc_401220  +
lea ecx [esi+4] +
call sub_40F950  +
test eax eax +
jnz loc_40DC1F  +
push eax  +
mov eax [esi] +
push 2  +
mov ecx [eax+4] +
add ecx esi +
call ds:?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z  +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_420F67  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [edi-68h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-68h] offset off_424C90 +
mov eax [edi-68h] +
mov edx [eax+4] +
lea eax [edx-68h] +
mov [edx+edi-6Ch] eax +
mov [ebp+var_4] 0 +
cmp dword ptr [edi-18h] 0 +
mov dword ptr [edi-64h] offset off_424C50 +
jz loc_40DCA6  +
mov ebx [edi-58h] +
lea eax [edi-28h] +
cmp [ebx] eax +
jnz loc_40DCA6  +
mov edx [edi-10h] +
mov ecx [edi-14h] +
sub edx ecx +
mov [ebx] ecx +
mov eax [edi-48h] +
sar edx 1 +
mov [eax] ecx +
mov eax [edi-38h] +
mov [eax] edx +
cmp byte ptr [edi-1Ch] 0 +
jz loc_40DCB4  +
lea ecx [edi-64h] +
call sub_40F950  +
lea ecx [edi-64h] +
call ds:??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
lea ecx [edi-60h] +
call ds:??1?$basic_ostream@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
push esi  +
push [ebp+arg_8]  +
mov esi ecx +
or eax 2 +
push eax  +
push [ebp+arg_0]  +
lea ecx [esi+4] +
call sub_40F9C0  +
test eax eax +
mov eax [esi] +
push 0  +
mov ecx [eax+4] +
jnz loc_40DD15  +
push 2  +
add ecx esi +
call ds:?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z  +
pop esi  +
pop ebp  +
retn 0Ch  +
push 0  +
add ecx esi +
call ds:?clear@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_420FC2  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
cmp [ebp+arg_0] 0 +
mov [ebp+var_14] edi +
mov [ebp+var_10] 0 +
jz loc_40DD89  +
lea ecx [edi+68h] +
mov dword ptr [edi] offset unk_428204 +
call ds:??0?$basic_ios@_WU?$char_traits@_W@std@@@std@@IAE@XZ  +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
push 0  +
push 0  +
lea esi [edi+4] +
mov ecx edi +
push esi  +
call ds:??0?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@PAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@_N@Z  +
mov [ebp+var_4] 1 +
mov eax [edi] +
mov eax [eax+4] +
mov dword ptr [edi+eax] offset off_424C90 +
mov eax [edi] +
mov ecx [eax+4] +
mov [ebp+var_18] esi +
lea eax [ecx-68h] +
mov [ecx+edi-4] eax +
mov ecx esi +
call ds:??0?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAE@XZ  +
mov byte ptr [ebp+var_4] 2 +
mov ecx esi +
mov dword ptr [esi] offset off_424C50 +
mov byte ptr [esi+48h] 0 +
mov byte ptr [esi+3Eh] 0 +
call ds:?_Init@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXXZ  +
mov dword ptr [esi+4Ch] 0 +
mov eax edi +
mov ecx dword_4314A8 +
mov [esi+40h] ecx +
mov ecx dword_4314AC +
mov [esi+44h] ecx +
mov dword ptr [esi+38h] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_420F67  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [edi-70h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-70h] offset off_428A30 +
mov eax [edi-70h] +
mov edx [eax+4] +
lea eax [edx-70h] +
mov [edx+edi-74h] eax +
mov [ebp+var_4] 0 +
cmp dword ptr [edi-14h] 0 +
mov dword ptr [edi-60h] offset off_424C50 +
jz loc_40DE96  +
mov ebx [edi-54h] +
lea eax [edi-24h] +
cmp [ebx] eax +
jnz loc_40DE96  +
mov edx [edi-0Ch] +
mov ecx [edi-10h] +
sub edx ecx +
mov [ebx] ecx +
mov eax [edi-44h] +
sar edx 1 +
mov [eax] ecx +
mov eax [edi-34h] +
mov [eax] edx +
cmp byte ptr [edi-18h] 0 +
jz loc_40DEA4  +
lea ecx [edi-60h] +
call sub_40F950  +
lea ecx [edi-60h] +
call ds:??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
lea ecx [edi-58h] +
call ds:??1?$basic_istream@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_42101D  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
mov [ebp+var_10] ebx +
mov edi [ebp+arg_0] +
lea ecx [ebx+70h] +
mov [ebp+var_10] 0 +
mov [ebp+var_14] ebx +
mov dword ptr [ebx] offset unk_428A24 +
call ds:??0?$basic_ios@_WU?$char_traits@_W@std@@@std@@IAE@XZ  +
push 0  +
push 0  +
lea esi [ebx+10h] +
mov [ebp+var_4] 0 +
push esi  +
mov ecx ebx +
mov [ebp+var_10] 1 +
call ds:??0?$basic_istream@_WU?$char_traits@_W@std@@@std@@QAE@PAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@_N@Z  +
mov [ebp+var_4] 1 +
mov eax [ebx] +
mov eax [eax+4] +
mov dword ptr [ebx+eax] offset off_428A30 +
mov eax [ebx] +
mov ecx [eax+4] +
mov [ebp+var_18] esi +
lea eax [ecx-70h] +
mov [ecx+ebx-4] eax +
mov ecx esi +
call ds:??0?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAE@XZ  +
mov byte ptr [ebp+var_4] 2 +
mov ecx esi +
mov dword ptr [esi] offset off_424C50 +
mov byte ptr [esi+48h] 0 +
mov byte ptr [esi+3Eh] 0 +
call ds:?_Init@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXXZ  +
mov dword ptr [esi+4Ch] 0 +
mov eax dword_4314A8 +
mov [esi+40h] eax +
mov eax dword_4314AC +
mov [esi+44h] eax +
mov dword ptr [esi+38h] 0 +
push 40h  +
push 1  +
push edi  +
mov ecx esi +
mov byte ptr [ebp+var_4] 3 +
call sub_40F9C0  +
test eax eax +
jnz loc_40DFBD  +
mov ecx [ebx] +
push eax  +
push 2  +
mov ecx [ecx+4] +
add ecx ebx +
call ds:?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push esi  +
push edi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_4104B0  +
add esp 4 +
mov edi eax +
mov ecx edi +
call ds:?always_noconv@codecvt_base@std@@QBE_NXZ  +
test al al +
jz loc_40E00D  +
pop edi  +
mov dword ptr [esi+38h] 0 +
pop esi  +
pop ebp  +
retn 4  +
mov ecx esi +
mov [esi+38h] edi +
call ds:?_Init@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXXZ  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
cmp dword ptr [esi+4Ch] 0 +
jz loc_40E052  +
mov eax [esi] +
push 0FFFFh  +
call dword ptr [eax+0Ch]  +
mov ecx 0FFFFh +
cmp cx ax +
jz loc_40E052  +
push dword ptr [esi+4Ch]  +
call ds:fflush  +
add esp 4 +
test eax eax +
jns loc_40E052  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
cmp dword ptr [edi+4Ch] 0 +
jz loc_40E0D1  +
mov edx [ebp+arg_4] +
test esi esi +
jnz loc_40E083  +
mov eax edx +
or eax [ebp+arg_8] +
jnz loc_40E083  +
lea ecx [eax+4] +
jmp loc_40E085  +
xor ecx ecx +
lea eax [edx+edx] +
push eax  +
push ecx  +
push esi  +
push dword ptr [edi+4Ch]  +
call ds:setvbuf  +
add esp 10h +
test eax eax +
jnz loc_40E0D1  +
mov esi [edi+4Ch] +
mov ecx edi +
mov byte ptr [edi+48h] 1 +
mov [edi+3Eh] al +
call ds:?_Init@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXXZ  +
mov [edi+4Ch] esi +
mov eax edi +
mov ecx dword_4314A8 +
mov [edi+40h] ecx +
mov ecx dword_4314AC +
mov [edi+44h] ecx +
mov dword ptr [edi+38h] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
pop edi  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
mov eax dword_43000C +
xor eax esp +
mov [esp+14h+var_4] eax +
mov eax [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi ecx +
mov dword ptr [esp+1Ch+var_10] eax +
mov eax [ebp+arg_10] +
mov dword ptr [esp+1Ch+var_10+4] eax +
mov eax [ebp+arg_8] +
cmp dword ptr [esi+4Ch] 0 +
push edi  +
mov edi [ebp+arg_0] +
mov [esp+20h+var_14] eax +
jz loc_40E1AF  +
call sub_40F7F0  +
test al al +
jz loc_40E1AF  +
lea eax [esp+20h+var_10] +
push eax  +
push dword ptr [esi+4Ch]  +
call ds:fsetpos  +
add esp 8 +
test eax eax +
jnz loc_40E1AF  +
mov ecx [esp+20h+var_14] +
mov eax ebx +
or eax ecx +
jz loc_40E15E  +
push 1  +
push ecx  +
push ebx  +
push dword ptr [esi+4Ch]  +
call ds:_fseeki64  +
add esp 10h +
test eax eax +
jnz loc_40E1AF  +
lea eax [esp+20h+var_10] +
push eax  +
push dword ptr [esi+4Ch]  +
call ds:fgetpos  +
add esp 8 +
test eax eax +
jnz loc_40E1AF  +
mov eax [ebp+arg_14] +
mov ecx esi +
mov [esi+40h] eax +
mov eax [ebp+arg_18] +
mov [esi+44h] eax +
call sub_40F7C0  +
mov edx [esi+40h] +
mov esi [esi+44h] +
mov ecx dword ptr [esp+20h+var_10] +
mov [edi+8] ecx +
mov ecx dword ptr [esp+20h+var_10+4] +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov [edi+0Ch] ecx +
mov [edi+10h] edx +
mov [edi+14h] esi +
jmp loc_40E1D5  +
mov ecx ds:?_BADOFF@std@@3_JB +
xorps xmm0 xmm0 +
mov eax [ecx] +
mov [edi] eax +
mov eax [ecx+4] +
mov [edi+4] eax +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+0Ch] 0 +
movq qword ptr [edi+10h] xmm0 +
mov ecx [esp+20h+var_4] +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
mov eax dword_43000C +
xor eax esp +
mov [esp+14h+var_4] eax +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov eax [esi+1Ch] +
lea ecx [esi+3Ch] +
cmp [eax] ecx +
jnz loc_40E230  +
cmp [ebp+arg_C] 1 +
jnz loc_40E230  +
cmp dword ptr [esi+38h] 0 +
jnz loc_40E230  +
mov ebx [ebp+arg_4] +
mov eax [ebp+arg_8] +
add ebx 0FFFFFFFEh +
adc eax 0FFFFFFFFh +
jmp loc_40E236  +
mov eax [ebp+arg_8] +
mov ebx [ebp+arg_4] +
cmp dword ptr [esi+4Ch] 0 +
mov [esp+20h+var_14] eax +
jz loc_40E2D6  +
mov ecx esi +
call sub_40F7F0  +
test al al +
jz loc_40E2D6  +
mov ecx [esp+20h+var_14] +
mov eax ebx +
or eax ecx +
mov eax [ebp+arg_C] +
jnz loc_40E265  +
cmp eax 1 +
jz loc_40E278  +
push eax  +
push ecx  +
push ebx  +
push dword ptr [esi+4Ch]  +
call ds:_fseeki64  +
add esp 10h +
test eax eax +
jnz loc_40E2D6  +
lea eax [esp+20h+var_10] +
push eax  +
push dword ptr [esi+4Ch]  +
call ds:fgetpos  +
add esp 8 +
test eax eax +
jnz loc_40E2D6  +
mov eax [esi+0Ch] +
lea ecx [esi+3Ch] +
cmp [eax] ecx +
jnz loc_40E2AD  +
mov edx [esi+54h] +
mov ecx [esi+50h] +
sub edx ecx +
mov [eax] ecx +
mov eax [esi+1Ch] +
sar edx 1 +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
mov edx [esi+40h] +
mov esi [esi+44h] +
mov ecx dword ptr [esp+20h+var_10] +
mov [edi+8] ecx +
mov ecx dword ptr [esp+20h+var_10+4] +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov [edi+0Ch] ecx +
mov [edi+10h] edx +
mov [edi+14h] esi +
jmp loc_40E2FC  +
mov ecx ds:?_BADOFF@std@@3_JB +
xorps xmm0 xmm0 +
mov eax [ecx] +
mov [edi] eax +
mov eax [ecx+4] +
mov [edi+4] eax +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+0Ch] 0 +
movq qword ptr [edi+10h] xmm0 +
mov ecx [esp+20h+var_4] +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push 0FFFFFFFFh  +
push offset loc_421048  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [edi+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_40E379  +
mov edx [edi+2Ch] +
mov esi [edx] +
lea eax [ecx+esi*2] +
cmp ecx eax +
jnb loc_40E379  +
lea eax [esi-1] +
mov [edx] eax +
mov edx [edi+1Ch] +
mov eax [edx] +
lea ecx [eax+2] +
mov [edx] ecx +
mov ax [eax] +
jmp loc_40E4DB  +
cmp dword ptr [edi+4Ch] 0 +
jnz loc_40E389  +
mov eax 0FFFFh +
jmp loc_40E4DB  +
mov esi [edi+0Ch] +
lea eax [edi+3Ch] +
cmp [esi] eax +
jnz loc_40E3A9  +
mov edx [edi+54h] +
mov ecx [edi+50h] +
sub edx ecx +
mov [esi] ecx +
mov eax [edi+1Ch] +
sar edx 1 +
mov [eax] ecx +
mov eax [edi+2Ch] +
mov [eax] edx +
cmp dword ptr [edi+38h] 0 +
jnz loc_40E3D3  +
push dword ptr [edi+4Ch]  +
call ds:fgetwc  +
movzx eax ax +
mov ecx 0FFFFh +
add esp 4 +
cmp ax cx +
jnz loc_40E4DB  +
mov eax ecx +
jmp loc_40E4DB  +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
mov [ebp+var_4] 0 +
push dword ptr [edi+4Ch]  +
mov ebx ds:fgetc +
call ebx  +
add esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_40E4B8  +
push eax  +
push 1  +
lea ecx [ebp+var_2C] +
call sub_402B30  +
cmp [ebp+var_18] 10h +
lea eax [ebp+var_34] +
mov ecx [edi+38h] +
lea esi [ebp+var_2C] +
cmovnb esi [ebp+var_2C] +
lea edx [ebp+var_2C] +
cmovnb edx [ebp+var_2C] +
push eax  +
lea eax [ebp-12h] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
mov eax [ebp+var_1C] +
add eax esi +
push eax  +
push edx  +
lea eax [edi+40h] +
push eax  +
call ds:?in@?$codecvt@_WDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PBD1AAPBDPA_W3AAPA_W@Z  +
test eax eax +
js loc_40E534  +
cmp eax 1 +
jle loc_40E484  +
cmp eax 3 +
jnz loc_40E534  +
cmp [ebp+var_1C] 2 +
jb loc_40E4A7  +
cmp [ebp+var_18] 10h +
lea eax [ebp+var_2C] +
push 2  +
cmovnb eax [ebp+var_2C] +
lea ecx [ebp+var_14] +
push eax  +
mov edx 2 +
call sub_401130  +
movzx eax word ptr [ebp+var_14] +
add esp 8 +
jmp loc_40E4C0  +
lea eax [ebp+var_14] +
cmp [ebp+var_34] eax +
jnz loc_40E4F7  +
cmp [ebp+var_18] 10h +
lea ecx [ebp+var_2C] +
mov eax [ebp+var_30] +
cmovnb ecx [ebp+var_2C] +
sub eax ecx +
lea ecx [ebp+var_2C] +
push eax  +
push 0  +
call sub_403380  +
push dword ptr [edi+4Ch]  +
call ebx  +
add esp 4 +
cmp eax 0FFFFFFFFh +
jnz loc_40E403  +
mov eax 0FFFFh +
movzx eax ax +
movzx esi ax +
mov ecx [ebp+var_18] +
cmp ecx 10h +
jb loc_40E4D8  +
inc ecx  +
push ecx  +
push [ebp+var_2C]  +
lea ecx [ebp+var_2C] +
call sub_402E70  +
mov ax si +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
cmp [ebp+var_18] 10h +
lea eax [ebp+var_2C] +
mov esi [ebp+var_1C] +
cmovnb eax [ebp+var_2C] +
mov ecx [ebp+var_30] +
sub esi ecx +
add esi eax +
test esi esi +
jle loc_40E52E  +
mov ebx ds:ungetc +
push dword ptr [edi+4Ch]  +
movsx eax byte ptr [esi+ecx-1] +
dec esi  +
push eax  +
call ebx  +
add esp 8 +
test esi esi +
jle loc_40E52E  +
mov ecx [ebp+var_30] +
jmp loc_40E516  +
movzx eax word ptr [ebp+var_14] +
jmp loc_40E4BD  +
mov esi 0FFFFh +
jmp loc_40E4C3  +
***
mov eax [esi+1Ch] +
mov eax [eax] +
test eax eax +
jz loc_40E55D  +
mov edx [esi+2Ch] +
mov edx [edx] +
lea edx [eax+edx*2] +
cmp eax edx +
jnb loc_40E55D  +
mov ax [eax] +
pop esi  +
retn   +
mov eax [esi] +
push edi  +
call dword ptr [eax+1Ch]  +
movzx edi ax +
mov eax 0FFFFh +
cmp ax di +
jz loc_40E57B  +
mov edx [esi] +
mov ecx esi +
push edi  +
call dword ptr [edx+10h]  +
mov ax di +
pop edi  +
pop esi  +
retn   +
***
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov ebx 0FFFFh +
push edi  +
mov edi ecx +
mov eax [edi+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_40E5C8  +
mov eax [edi+0Ch] +
cmp [eax] ecx +
jnb loc_40E5C8  +
cmp bx si +
jz loc_40E5AB  +
cmp [ecx-2] si +
jnz loc_40E5C8  +
mov eax [edi+2Ch] +
xor ecx ecx +
inc dword ptr [eax]  +
mov eax [edi+1Ch] +
pop edi  +
add dword ptr [eax] 0FFFFFFFEh +
cmp si bx +
movzx eax si +
pop esi  +
cmovz eax ecx +
pop ebx  +
pop ebp  +
retn 4  +
mov eax [edi+4Ch] +
test eax eax +
jz loc_40E608  +
cmp bx si +
jz loc_40E608  +
cmp dword ptr [edi+38h] 0 +
jnz loc_40E5EA  +
push eax  +
push esi  +
call ds:ungetwc  +
add esp 8 +
cmp ax bx +
jnz loc_40E5FE  +
mov eax [edi+1Ch] +
lea ecx [edi+3Ch] +
cmp [eax] ecx +
jz loc_40E608  +
mov [ecx] si +
mov ecx edi +
call sub_40F780  +
pop edi  +
mov ax si +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
pop edi  +
pop esi  +
mov ax bx +
pop ebx  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_421048  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov ebx dword ptr [ebp+arg_0] +
mov edx 0FFFFh +
cmp dx bx +
jnz loc_40E661  +
xor eax eax +
jmp loc_40E850  +
mov eax [edi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_40E695  +
mov edx [edi+30h] +
mov esi [edx] +
lea eax [ecx+esi*2] +
cmp ecx eax +
jnb loc_40E690  +
lea ecx [esi-1] +
mov ax bx +
mov [edx] ecx +
mov edx [edi+20h] +
mov esi [edx] +
lea ecx [esi+2] +
mov [edx] ecx +
mov [esi] bx +
jmp loc_40E850  +
mov edx 0FFFFh +
cmp dword ptr [edi+4Ch] 0 +
jnz loc_40E6A3  +
mov ax dx +
jmp loc_40E850  +
mov esi [edi+0Ch] +
lea eax [edi+3Ch] +
cmp [esi] eax +
jnz loc_40E6C3  +
mov edx [edi+54h] +
mov ecx [edi+50h] +
sub edx ecx +
mov [esi] ecx +
mov eax [edi+1Ch] +
sar edx 1 +
mov [eax] ecx +
mov eax [edi+2Ch] +
mov [eax] edx +
cmp dword ptr [edi+38h] 0 +
jnz loc_40E6EE  +
push dword ptr [edi+4Ch]  +
push ebx  +
call ds:fputwc  +
mov ecx 0FFFFh +
add esp 8 +
cmp ax cx +
movzx eax bx +
jnz loc_40E850  +
mov eax ecx +
jmp loc_40E850  +
push 0  +
movzx eax bx +
lea ecx [ebp+var_2C] +
push 8  +
mov dword ptr [ebp+var_14] eax +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
call sub_402850  +
mov [ebp+var_4] 0 +
mov esi [ebp+var_18] +
lea ebx [edi+40h] +
nop   +
cmp esi 10h +
lea eax [ebp+var_30] +
push eax  +
mov eax [ebp+var_1C] +
lea edx [ebp+var_2C] +
cmovnb edx [ebp+var_2C] +
lea ecx [ebp+var_2C] +
cmovnb ecx [ebp+var_2C] +
add eax edx +
push eax  +
push ecx  +
mov ecx [edi+38h] +
lea eax [ebp+var_34] +
push eax  +
lea eax [ebp-12h] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
call ds:?out@?$codecvt@_WDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PB_W1AAPB_WPAD3AAPAD@Z  +
test eax eax +
js loc_40E831  +
cmp eax 1 +
jg loc_40E7F5  +
mov esi [ebp+var_18] +
lea eax [ebp+var_2C] +
mov ecx [ebp+var_2C] +
cmp esi 10h +
mov ebx [ebp+var_30] +
cmovnb eax ecx +
sub ebx eax +
jz loc_40E799  +
push dword ptr [edi+4Ch]  +
cmp esi 10h +
lea eax [ebp+var_2C] +
push ebx  +
cmovnb eax ecx +
push 1  +
push eax  +
call ds:fwrite  +
mov esi [ebp+var_18] +
add esp 10h +
cmp ebx eax +
jnz loc_40E7C7  +
lea eax [ebp+var_14] +
mov byte ptr [edi+3Eh] 1 +
cmp [ebp+var_34] eax +
jnz loc_40E7E4  +
test ebx ebx +
lea ebx [edi+40h] +
jnz loc_40E720  +
cmp [ebp+var_1C] 20h +
jnb loc_40E7D7  +
push 0  +
push 8  +
lea ecx [ebp+var_2C] +
call sub_402B30  +
jmp loc_40E719  +
mov eax 0FFFFh +
movzx eax ax +
movzx eax ax +
movzx edi ax +
jmp loc_40E839  +
mov eax 0FFFFh +
movzx eax ax +
movzx edi ax +
jmp loc_40E839  +
mov eax dword ptr [ebp+arg_0] +
movzx eax ax +
movzx eax ax +
movzx eax ax +
movzx edi ax +
jmp loc_40E839  +
cmp eax 3 +
jnz loc_40E831  +
push dword ptr [edi+4Ch]  +
push dword ptr [ebp+var_14]  +
call ds:fputwc  +
mov ecx 0FFFFh +
add esp 8 +
cmp ax cx +
jz loc_40E824  +
mov eax dword ptr [ebp+arg_0] +
mov esi [ebp+var_18] +
movzx eax ax +
movzx eax ax +
movzx edi ax +
jmp loc_40E839  +
mov esi [ebp+var_18] +
mov eax ecx +
movzx eax ax +
movzx edi ax +
jmp loc_40E839  +
mov esi [ebp+var_18] +
mov edi 0FFFFh +
cmp esi 10h +
jb loc_40E84D  +
lea ecx [esi+1] +
push ecx  +
push [ebp+var_2C]  +
lea ecx [ebp+var_2C] +
call sub_402E70  +
mov ax di +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ecx+4Ch] +
mov eax [ecx+4Ch] +
push 0FFFFFFFFh  +
push offset loc_421070  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+4Ch] 0 +
mov dword ptr [esi] offset off_424C50 +
jz loc_40E8E2  +
mov edi [esi+0Ch] +
lea eax [esi+3Ch] +
cmp [edi] eax +
jnz loc_40E8E2  +
mov edx [esi+54h] +
mov ecx [esi+50h] +
sub edx ecx +
mov [edi] ecx +
mov eax [esi+1Ch] +
sar edx 1 +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
cmp byte ptr [esi+48h] 0 +
jz loc_40E8EF  +
mov ecx esi +
call sub_40F950  +
mov ecx esi +
call ds:??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_420F67  +
mov eax large fs:0 +
push eax  +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov eax [edi-70h] +
mov eax [eax+4] +
mov dword ptr [eax+edi-70h] offset off_426D3C +
mov eax [edi-70h] +
mov edx [eax+4] +
lea eax [edx-70h] +
mov [edx+edi-74h] eax +
mov [ebp+var_4] 0 +
cmp dword ptr [edi-14h] 0 +
mov dword ptr [edi-60h] offset off_426CFC +
jz loc_40E984  +
mov ebx [edi-54h] +
lea eax [edi-24h] +
cmp [ebx] eax +
jnz loc_40E984  +
mov edx [edi-0Ch] +
mov ecx [edi-10h] +
sub edx ecx +
mov [ebx] ecx +
mov eax [edi-44h] +
mov [eax] ecx +
mov eax [edi-34h] +
mov [eax] edx +
cmp byte ptr [edi-18h] 0 +
jz loc_40E992  +
lea ecx [edi-60h] +
call sub_40FD30  +
lea ecx [edi-60h] +
call ds:??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ  +
lea ecx [edi-58h] +
call ds:??1?$basic_istream@DU?$char_traits@D@std@@@std@@UAE@XZ  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4210C4  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_14] edi +
cmp [ebp+arg_C] 0 +
mov [ebp+var_10] 0 +
jz loc_40EA16  +
lea ecx [edi+70h] +
mov dword ptr [edi] offset unk_428A24 +
call ds:??0?$basic_ios@DU?$char_traits@D@std@@@std@@IAE@XZ  +
mov [ebp+var_4] 0 +
mov [ebp+var_10] 1 +
push 0  +
push 0  +
lea esi [edi+10h] +
mov ecx edi +
push esi  +
call ds:??0?$basic_istream@DU?$char_traits@D@std@@@std@@QAE@PAV?$basic_streambuf@DU?$char_traits@D@std@@@1@_N@Z  +
mov [ebp+var_4] 1 +
mov eax [edi] +
push 0  +
mov eax [eax+4] +
mov dword ptr [edi+eax] offset off_426D3C +
mov eax [edi] +
mov ecx [eax+4] +
lea eax [ecx-70h] +
mov [ecx+edi-4] eax +
mov ecx esi +
call sub_40FEF0  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
mov ecx esi +
or eax 1 +
mov byte ptr [ebp+var_4] 2 +
push eax  +
push [ebp+arg_0]  +
call sub_40FDA0  +
test eax eax +
jnz loc_40EA7A  +
push eax  +
mov eax [edi] +
push 2  +
mov ecx [eax+4] +
add ecx edi +
call ds:?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QAEXH_N@Z  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push esi  +
push edi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_4105C0  +
add esp 4 +
mov edi eax +
mov ecx edi +
call ds:?always_noconv@codecvt_base@std@@QBE_NXZ  +
test al al +
jz loc_40EABD  +
pop edi  +
mov dword ptr [esi+38h] 0 +
pop esi  +
pop ebp  +
retn 4  +
mov ecx esi +
mov [esi+38h] edi +
call ds:?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
cmp dword ptr [esi+4Ch] 0 +
jz loc_40EAFA  +
mov eax [esi] +
push 0FFFFFFFFh  +
call dword ptr [eax+0Ch]  +
cmp eax 0FFFFFFFFh +
jz loc_40EAFA  +
push dword ptr [esi+4Ch]  +
call ds:fflush  +
add esp 4 +
test eax eax +
jns loc_40EAFA  +
or eax 0FFFFFFFFh +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
sub esp 10h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
push edi  +
mov edi [esi+4Ch] +
test edi edi +
jz loc_40EBDA  +
mov ecx [ebp+arg_4] +
test edx edx +
jnz loc_40EB37  +
mov eax ecx +
or eax [ebp+arg_8] +
jnz loc_40EB37  +
mov eax 4 +
jmp loc_40EB39  +
xor eax eax +
push ecx  +
push eax  +
push edx  +
push edi  +
call ds:setvbuf  +
add esp 10h +
test eax eax +
jnz loc_40EBDA  +
mov edi [esi+4Ch] +
mov ecx esi +
mov byte ptr [esi+48h] 1 +
mov [esi+3Dh] al +
call ds:?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ  +
test edi edi +
jz loc_40EBAA  +
lea eax [ebp+var_10] +
mov [ebp+var_8] 0 +
push eax  +
lea eax [ebp+var_C] +
mov [ebp+var_C] 0 +
push eax  +
lea eax [ebp+var_8] +
mov [ebp+var_10] 0 +
push eax  +
push edi  +
call ds:_get_stream_buffer_pointers  +
mov eax [ebp+var_8] +
add esp 10h +
mov ecx [ebp+var_10] +
mov [esi+0Ch] eax +
mov [esi+10h] eax +
mov eax [ebp+var_C] +
mov [esi+1Ch] eax +
mov [esi+20h] eax +
mov [esi+2Ch] ecx +
mov [esi+30h] ecx +
mov [esi+4Ch] edi +
mov eax esi +
mov ecx dword_4314B0 +
mov [esi+40h] ecx +
mov ecx dword_4314B4 +
pop edi  +
mov [esi+44h] ecx +
mov dword ptr [esi+38h] 0 +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
mov ecx [ebp+var_4] +
xor eax eax +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
mov eax dword_43000C +
xor eax esp +
mov [esp+14h+var_4] eax +
mov eax [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi ecx +
mov dword ptr [esp+1Ch+var_10] eax +
mov eax [ebp+arg_10] +
mov dword ptr [esp+1Ch+var_10+4] eax +
mov eax [ebp+arg_8] +
cmp dword ptr [esi+4Ch] 0 +
push edi  +
mov edi [ebp+arg_0] +
mov [esp+20h+var_14] eax +
jz loc_40ECBF  +
call sub_40FBD0  +
test al al +
jz loc_40ECBF  +
lea eax [esp+20h+var_10] +
push eax  +
push dword ptr [esi+4Ch]  +
call ds:fsetpos  +
add esp 8 +
test eax eax +
jnz loc_40ECBF  +
mov ecx [esp+20h+var_14] +
mov eax ebx +
or eax ecx +
jz loc_40EC6E  +
push 1  +
push ecx  +
push ebx  +
push dword ptr [esi+4Ch]  +
call ds:_fseeki64  +
add esp 10h +
test eax eax +
jnz loc_40ECBF  +
lea eax [esp+20h+var_10] +
push eax  +
push dword ptr [esi+4Ch]  +
call ds:fgetpos  +
add esp 8 +
test eax eax +
jnz loc_40ECBF  +
mov eax [ebp+arg_14] +
mov ecx esi +
mov [esi+40h] eax +
mov eax [ebp+arg_18] +
mov [esi+44h] eax +
call sub_40FBA0  +
mov edx [esi+40h] +
mov esi [esi+44h] +
mov ecx dword ptr [esp+20h+var_10] +
mov [edi+8] ecx +
mov ecx dword ptr [esp+20h+var_10+4] +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov [edi+0Ch] ecx +
mov [edi+10h] edx +
mov [edi+14h] esi +
jmp loc_40ECE5  +
mov ecx ds:?_BADOFF@std@@3_JB +
xorps xmm0 xmm0 +
mov eax [ecx] +
mov [edi] eax +
mov eax [ecx+4] +
mov [edi+4] eax +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+0Ch] 0 +
movq qword ptr [edi+10h] xmm0 +
mov ecx [esp+20h+var_4] +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
and esp 0FFFFFFF8h +
sub esp 14h +
mov eax dword_43000C +
xor eax esp +
mov [esp+14h+var_4] eax +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov edi [ebp+arg_0] +
mov eax [esi+1Ch] +
lea ecx [esi+3Ch] +
cmp [eax] ecx +
jnz loc_40ED40  +
cmp [ebp+arg_C] 1 +
jnz loc_40ED40  +
cmp dword ptr [esi+38h] 0 +
jnz loc_40ED40  +
mov ebx [ebp+arg_4] +
mov eax [ebp+arg_8] +
add ebx 0FFFFFFFFh +
adc eax 0FFFFFFFFh +
jmp loc_40ED46  +
mov eax [ebp+arg_8] +
mov ebx [ebp+arg_4] +
cmp dword ptr [esi+4Ch] 0 +
mov [esp+20h+var_14] eax +
jz loc_40EDE4  +
mov ecx esi +
call sub_40FBD0  +
test al al +
jz loc_40EDE4  +
mov ecx [esp+20h+var_14] +
mov eax ebx +
or eax ecx +
mov eax [ebp+arg_C] +
jnz loc_40ED75  +
cmp eax 1 +
jz loc_40ED88  +
push eax  +
push ecx  +
push ebx  +
push dword ptr [esi+4Ch]  +
call ds:_fseeki64  +
add esp 10h +
test eax eax +
jnz loc_40EDE4  +
lea eax [esp+20h+var_10] +
push eax  +
push dword ptr [esi+4Ch]  +
call ds:fgetpos  +
add esp 8 +
test eax eax +
jnz loc_40EDE4  +
mov eax [esi+0Ch] +
lea ecx [esi+3Ch] +
cmp [eax] ecx +
jnz loc_40EDBB  +
mov edx [esi+54h] +
mov ecx [esi+50h] +
sub edx ecx +
mov [eax] ecx +
mov eax [esi+1Ch] +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
mov edx [esi+40h] +
mov esi [esi+44h] +
mov ecx dword ptr [esp+20h+var_10] +
mov [edi+8] ecx +
mov ecx dword ptr [esp+20h+var_10+4] +
mov dword ptr [edi] 0 +
mov dword ptr [edi+4] 0 +
mov [edi+0Ch] ecx +
mov [edi+10h] edx +
mov [edi+14h] esi +
jmp loc_40EE0A  +
mov ecx ds:?_BADOFF@std@@3_JB +
xorps xmm0 xmm0 +
mov eax [ecx] +
mov [edi] eax +
mov eax [ecx+4] +
mov [edi+4] eax +
mov dword ptr [edi+8] 0 +
mov dword ptr [edi+0Ch] 0 +
movq qword ptr [edi+10h] xmm0 +
mov ecx [esp+20h+var_4] +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_421048  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov edi ecx +
mov eax [edi+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_40EE79  +
mov edx [edi+2Ch] +
mov esi [edx] +
lea eax [esi+ecx] +
cmp ecx eax +
jnb loc_40EE79  +
lea eax [esi-1] +
mov [edx] eax +
mov ecx [edi+1Ch] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
movzx eax byte ptr [edx] +
jmp loc_40EFBB  +
cmp dword ptr [edi+4Ch] 0 +
jnz loc_40EE87  +
or eax 0FFFFFFFFh +
jmp loc_40EFBB  +
mov esi [edi+0Ch] +
lea eax [edi+3Ch] +
cmp [esi] eax +
jnz loc_40EEA5  +
mov edx [edi+54h] +
mov ecx [edi+50h] +
sub edx ecx +
mov [esi] ecx +
mov eax [edi+1Ch] +
mov [eax] ecx +
mov eax [edi+2Ch] +
mov [eax] edx +
cmp dword ptr [edi+38h] 0 +
jnz loc_40EEC4  +
push dword ptr [edi+4Ch]  +
call ds:fgetc  +
add esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_40EE7F  +
movzx eax al +
jmp loc_40EFBB  +
mov dword ptr [ebp-18h] 0Fh +
mov dword ptr [ebp-1Ch] 0 +
mov byte ptr [ebp-2Ch] 0 +
mov dword ptr [ebp-4] 0 +
push dword ptr [edi+4Ch]  +
mov ebx ds:fgetc +
call ebx  +
add esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_40EFA1  +
push eax  +
push 1  +
lea ecx [ebp-2Ch] +
call sub_402B30  +
cmp dword ptr [ebp-18h] 10h +
lea eax [ebp-34h] +
mov ecx [edi+38h] +
lea esi [ebp-2Ch] +
cmovnb esi [ebp-2Ch] +
lea edx [ebp-2Ch] +
cmovnb edx [ebp-2Ch] +
push eax  +
lea eax [ebp-10h] +
push eax  +
lea eax [ebp-11h] +
push eax  +
lea eax [ebp-30h] +
push eax  +
mov eax [ebp-1Ch] +
add eax esi +
push eax  +
push edx  +
lea eax [edi+40h] +
push eax  +
call ds:?in@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PBD1AAPBDPAD3AAPAD@Z  +
test eax eax +
js loc_40EFA1  +
cmp eax 1 +
jle loc_40EF6D  +
cmp eax 3 +
jnz loc_40EFA1  +
cmp dword ptr [ebp-1Ch] 1 +
jb loc_40EF90  +
cmp dword ptr [ebp-18h] 10h +
lea eax [ebp-2Ch] +
push 1  +
cmovnb eax [ebp-2Ch] +
lea ecx [ebp-11h] +
push eax  +
mov edx 1 +
call sub_401130  +
add esp 8 +
movzx esi byte ptr [ebp-11h] +
jmp loc_40EFA4  +
lea eax [ebp-11h] +
cmp [ebp-34h] eax +
jnz loc_40EFD7  +
cmp dword ptr [ebp-18h] 10h +
lea ecx [ebp-2Ch] +
mov eax [ebp-30h] +
cmovnb ecx [ebp-2Ch] +
sub eax ecx +
lea ecx [ebp-2Ch] +
push eax  +
push 0  +
call sub_403380  +
push dword ptr [edi+4Ch]  +
call ebx  +
add esp 4 +
cmp eax 0FFFFFFFFh +
jnz loc_40EEF4  +
or esi 0FFFFFFFFh +
mov ecx [ebp-18h] +
cmp ecx 10h +
jb loc_40EFB9  +
inc ecx  +
push ecx  +
push dword ptr [ebp-2Ch]  +
lea ecx [ebp-2Ch] +
call sub_402E70  +
mov eax esi +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp dword ptr [ebp-18h] 10h +
lea eax [ebp-2Ch] +
mov esi [ebp-1Ch] +
cmovnb eax [ebp-2Ch] +
mov ecx [ebp-30h] +
sub esi ecx +
add esi eax +
test esi esi +
jle loc_40EF67  +
mov ebx ds:ungetc +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
mov eax [esi+1Ch] +
mov ecx [eax] +
test ecx ecx +
jz loc_40F09F  +
mov eax [esi+0Ch] +
cmp [eax] ecx +
jnb loc_40F09F  +
cmp ebx 0FFFFFFFFh +
jz loc_40F087  +
movzx eax byte ptr [ecx-1] +
cmp eax ebx +
jnz loc_40F09F  +
mov eax [esi+2Ch] +
inc dword ptr [eax]  +
mov eax [esi+1Ch] +
pop esi  +
dec dword ptr [eax]  +
xor eax eax +
cmp ebx 0FFFFFFFFh +
cmovnz eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
mov eax [esi+4Ch] +
test eax eax +
jz loc_40F0DF  +
cmp ebx 0FFFFFFFFh +
jz loc_40F0DF  +
cmp dword ptr [esi+38h] 0 +
jnz loc_40F0C4  +
push eax  +
movzx ecx bl +
push ecx  +
call ds:ungetc  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_40F0D7  +
mov eax [esi+1Ch] +
lea ecx [esi+3Ch] +
cmp [eax] ecx +
jz loc_40F0DF  +
mov [ecx] bl +
mov ecx esi +
call sub_40FB60  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
pop esi  +
or eax 0FFFFFFFFh +
pop ebx  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_421048  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_11+1] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov ebx [ebp+arg_0] +
cmp ebx 0FFFFFFFFh +
setz al  +
test al al +
jz loc_40F137  +
xor eax eax +
cmp ebx 0FFFFFFFFh +
cmovnz eax ebx +
jmp loc_40F2CD  +
mov eax [edi+20h] +
mov ecx [eax] +
test ecx ecx +
jz loc_40F164  +
mov edx [edi+30h] +
mov esi [edx] +
lea eax [esi+ecx] +
cmp ecx eax +
jnb loc_40F164  +
lea eax [esi-1] +
mov [edx] eax +
mov ecx [edi+20h] +
mov edx [ecx] +
lea eax [edx+1] +
mov [ecx] eax +
mov eax ebx +
mov [edx] bl +
jmp loc_40F2CD  +
cmp dword ptr [edi+4Ch] 0 +
jnz loc_40F172  +
or eax 0FFFFFFFFh +
jmp loc_40F2CD  +
mov esi [edi+0Ch] +
lea eax [edi+3Ch] +
cmp [esi] eax +
jnz loc_40F190  +
mov edx [edi+54h] +
mov ecx [edi+50h] +
sub edx ecx +
mov [esi] ecx +
mov eax [edi+1Ch] +
mov [eax] ecx +
mov eax [edi+2Ch] +
mov [eax] edx +
cmp dword ptr [edi+38h] 0 +
jnz loc_40F1B5  +
push dword ptr [edi+4Ch]  +
movsx eax bl +
push eax  +
call ds:fputc  +
or ecx 0FFFFFFFFh +
add esp 8 +
cmp eax ecx +
cmovnz ecx ebx +
mov eax ecx +
jmp loc_40F2CD  +
push 0  +
push 8  +
lea ecx [ebp+var_2C] +
mov byte ptr [ebp+var_11] bl +
mov [ebp+var_18] 0Fh +
mov [ebp+var_1C] 0 +
mov byte ptr [ebp+var_2C] 0 +
call sub_402850  +
mov [ebp+var_4] 0 +
mov esi [ebp+var_18] +
lea ebx [edi+40h] +
cmp esi 10h +
lea eax [ebp+var_30] +
push eax  +
mov eax [ebp+var_1C] +
lea edx [ebp+var_2C] +
cmovnb edx [ebp+var_2C] +
lea ecx [ebp+var_2C] +
cmovnb ecx [ebp+var_2C] +
add eax edx +
push eax  +
push ecx  +
mov ecx [edi+38h] +
lea eax [ebp+var_34] +
push eax  +
lea eax [ebp+var_11+1] +
push eax  +
lea eax [ebp+var_11] +
push eax  +
push ebx  +
call ds:?out@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PBD1AAPBDPAD3AAPAD@Z  +
test eax eax +
js loc_40F2B1  +
cmp eax 1 +
jg loc_40F28B  +
mov esi [ebp+var_18] +
lea eax [ebp+var_2C] +
mov ecx [ebp+var_2C] +
cmp esi 10h +
mov ebx [ebp+var_30] +
cmovnb eax ecx +
sub ebx eax +
jz loc_40F258  +
push dword ptr [edi+4Ch]  +
cmp esi 10h +
lea eax [ebp+var_2C] +
push ebx  +
cmovnb eax ecx +
push 1  +
push eax  +
call ds:fwrite  +
mov esi [ebp+var_18] +
add esp 10h +
cmp ebx eax +
jnz loc_40F2B4  +
lea eax [ebp+var_11] +
mov byte ptr [edi+3Dh] 1 +
cmp [ebp+var_34] eax +
jnz loc_40F286  +
test ebx ebx +
lea ebx [edi+40h] +
jnz loc_40F1E3  +
cmp [ebp+var_1C] 20h +
jnb loc_40F2B4  +
push 0  +
push 8  +
lea ecx [ebp+var_2C] +
call sub_402B30  +
jmp loc_40F1DD  +
mov edi [ebp+arg_0] +
jmp loc_40F2B7  +
cmp eax 3 +
jnz loc_40F2B1  +
push dword ptr [edi+4Ch]  +
movsx eax byte ptr [ebp+var_11] +
push eax  +
call ds:fputc  +
mov esi [ebp+var_18] +
or ecx 0FFFFFFFFh +
add esp 8 +
cmp eax ecx +
cmovnz ecx [ebp+arg_0] +
mov edi ecx +
jmp loc_40F2B7  +
mov esi [ebp+var_18] +
or edi 0FFFFFFFFh +
cmp esi 10h +
jb loc_40F2CB  +
lea ecx [esi+1] +
push ecx  +
push [ebp+var_2C]  +
lea ecx [ebp+var_2C] +
call sub_402E70  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_11+1] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_421070  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+4Ch] 0 +
mov dword ptr [esi] offset off_426CFC +
jz loc_40F340  +
mov edi [esi+0Ch] +
lea eax [esi+3Ch] +
cmp [edi] eax +
jnz loc_40F340  +
mov edx [esi+54h] +
mov ecx [esi+50h] +
sub edx ecx +
mov [edi] ecx +
mov eax [esi+1Ch] +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
cmp byte ptr [esi+48h] 0 +
jz loc_40F34D  +
mov ecx esi +
call sub_40FD30  +
mov ecx esi +
call ds:??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_424C98 +
call ds:??1?$codecvt@_WDU_Mbstatet@@@std@@MAE@XZ  +
test [ebp+arg_0] 1 +
jz loc_40F393  +
push 34h  +
push esi  +
call sub_41EC9F  +
add esp 8 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
push edi  +
lea edi [esi-68h] +
call sub_40DC30  +
mov ecx esi +
call ds:??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
test [ebp+arg_0] 1 +
jz loc_40F3CB  +
push 0B0h  +
push edi  +
call sub_41EC9F  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
push edi  +
lea edi [esi-70h] +
call sub_40DE20  +
mov ecx esi +
call ds:??1?$basic_ios@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
test [ebp+arg_0] 1 +
jz loc_40F40B  +
push 0B8h  +
push edi  +
call sub_41EC9F  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4210E7  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
cmp dword ptr [esi+4Ch] 0 +
mov dword ptr [esi] offset off_424C50 +
jz loc_40F479  +
mov edi [esi+0Ch] +
lea eax [esi+3Ch] +
cmp [edi] eax +
jnz loc_40F479  +
mov edx [esi+54h] +
mov ecx [esi+50h] +
sub edx ecx +
mov [edi] ecx +
mov eax [esi+1Ch] +
sar edx 1 +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
cmp byte ptr [esi+48h] 0 +
jz loc_40F486  +
mov ecx esi +
call sub_40F950  +
mov ecx esi +
call ds:??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
test [ebp+arg_0] 1 +
jz loc_40F49F  +
push 58h  +
push esi  +
call sub_41EC9F  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push esi  +
mov esi ecx +
push edi  +
lea edi [esi-70h] +
call sub_40E910  +
mov ecx esi +
call ds:??1?$basic_ios@DU?$char_traits@D@std@@@std@@UAE@XZ  +
test [ebp+arg_0] 1 +
jz loc_40F4EB  +
push 0B8h  +
push edi  +
call sub_41EC9F  +
add esp 8 +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4210E7  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
cmp dword ptr [esi+4Ch] 0 +
mov dword ptr [esi] offset off_426CFC +
jz loc_40F557  +
mov edi [esi+0Ch] +
lea eax [esi+3Ch] +
cmp [edi] eax +
jnz loc_40F557  +
mov edx [esi+54h] +
mov ecx [esi+50h] +
sub edx ecx +
mov [edi] ecx +
mov eax [esi+1Ch] +
mov [eax] ecx +
mov eax [esi+2Ch] +
mov [eax] edx +
cmp byte ptr [esi+48h] 0 +
jz loc_40F564  +
mov ecx esi +
call sub_40FD30  +
mov ecx esi +
call ds:??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ  +
test [ebp+arg_0] 1 +
jz loc_40F57D  +
push 58h  +
push esi  +
call sub_41EC9F  +
add esp 8 +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov edx [ebp+8] +
push esi  +
mov esi ecx +
test edx edx +
js loc_40F5DF  +
mov eax [esi] +
mov ecx 1 +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax edx +
or ecx eax +
jge loc_40F5D8  +
push edx  +
mov ecx esi +
call sub_410000  +
mov eax [esi] +
pop esi  +
pop ebp  +
retn 4  +
***
push 80070057h  +
call loc_401220  +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+10h] +
add ebx [ebp+18h] +
js loc_40F660  +
push esi  +
mov esi [ebp+8] +
mov ecx 1 +
push edi  +
mov eax [esi] +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax ebx +
or ecx eax +
jge loc_40F61C  +
push ebx  +
mov ecx esi +
call sub_403CE0  +
mov eax [ebp+10h] +
mov edi [esi] +
mov ecx edi +
lea esi [eax+eax] +
push esi  +
push dword ptr [ebp+0Ch]  +
mov edx esi +
call sub_401130  +
mov eax [ebp+18h] +
lea ecx [esi+edi] +
lea edx [eax+eax] +
push edx  +
push dword ptr [ebp+14h]  +
call sub_401130  +
mov eax [ebp+8] +
add esp 10h +
mov ecx [eax] +
pop edi  +
pop esi  +
cmp ebx [ecx-8] +
jg loc_40F660  +
mov [ecx-0Ch] ebx +
xor ecx ecx +
mov eax [eax] +
mov [eax+ebx*2] cx +
pop ebx  +
pop ebp  +
retn   +
***
push 80070057h  +
call loc_401220  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421117  +
mov eax large fs:0 +
push eax  +
push esi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
call ds:?uncaught_exception@std@@YA_NXZ  +
test al al +
jnz loc_40F6B7  +
mov ecx [esi] +
call ds:?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ  +
mov [ebp+var_4] 0 +
mov ecx [esi] +
mov eax [ecx] +
mov eax [eax+4] +
mov ecx [eax+ecx+38h] +
test ecx ecx +
jz loc_40F6D2  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421148  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
mov [edi] esi +
mov eax [esi] +
mov eax [eax+4] +
mov ecx [eax+esi+38h] +
test ecx ecx +
jz loc_40F731  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0 +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
jnz loc_40F756  +
mov ecx [eax+esi+3Ch] +
test ecx ecx +
jz loc_40F756  +
cmp ecx esi +
jz loc_40F756  +
call ds:?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@XZ  +
mov eax [esi] +
mov eax [eax+4] +
cmp dword ptr [eax+esi+0Ch] 0 +
setz al  +
mov [edi+4] al +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx ecx +
push esi  +
push edi  +
mov edi [edx+0Ch] +
lea esi [edx+3Ch] +
mov eax [edi] +
cmp eax esi +
jz loc_40F7A3  +
mov [edx+50h] eax +
mov eax [edx+2Ch] +
mov ecx [eax] +
mov eax [edx+1Ch] +
mov eax [eax] +
lea eax [eax+ecx*2] +
mov [edx+54h] eax +
mov [edi] esi +
mov ecx edx +
mov eax [edx+1Ch] +
sub ecx esi +
add ecx 3Eh +
sar ecx 1 +
pop edi  +
mov [eax] esi +
mov eax [edx+2Ch] +
pop esi  +
mov [eax] ecx +
retn   +
***
lea eax [ecx+3Ch] +
cmp [edi] eax +
jnz loc_40F7E3  +
mov edx [ecx+50h] +
push esi  +
mov esi [ecx+54h] +
mov [edi] edx +
sub esi edx +
mov eax [ecx+1Ch] +
sar esi 1 +
mov [eax] edx +
mov eax [ecx+2Ch] +
mov [eax] esi +
pop esi  +
pop edi  +
retn   +
***
push 0FFFFFFFFh  +
push edi  +
cmp dword ptr [esi+4Ch] 0 +
jnz loc_40F95E  +
xor edi edi +
jmp loc_40F97F  +
call sub_40F7F0  +
push dword ptr [esi+4Ch]  +
xor ecx ecx +
mov edi esi +
test al al +
cmovz edi ecx +
call ds:fclose  +
xor ecx ecx +
add esp 4 +
test eax eax +
cmovnz edi ecx +
mov ecx esi +
mov byte ptr [esi+48h] 0 +
mov byte ptr [esi+3Eh] 0 +
call ds:?_Init@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXXZ  +
mov dword ptr [esi+4Ch] 0 +
mov eax edi +
mov ecx dword_4314A8 +
mov [esi+40h] ecx +
mov ecx dword_4314AC +
pop edi  +
mov [esi+44h] ecx +
mov dword ptr [esi+38h] 0 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4211AF  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+4Ch] 0 +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
jnz loc_40FAAE  +
push edx  +
push ecx  +
push eax  +
call ds:?_Fiopen@std@@YAPAU_iobuf@@PB_WHH@Z  +
mov edi eax +
add esp 0Ch +
test edi edi +
jz loc_40FAAE  +
mov ecx esi +
mov byte ptr [esi+48h] 1 +
mov byte ptr [esi+3Eh] 0 +
call ds:?_Init@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXXZ  +
mov [esi+4Ch] edi +
mov ecx esi +
mov eax dword_4314A8 +
mov [esi+40h] eax +
mov eax dword_4314AC +
mov [esi+44h] eax +
lea eax [ebp+var_14] +
push eax  +
mov dword ptr [esi+38h] 0 +
call ds:?getloc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QBE?AVlocale@2@XZ  +
push eax  +
mov [ebp+var_4] 0 +
call sub_4104B0  +
add esp 4 +
mov edi eax +
mov ecx edi +
call ds:?always_noconv@codecvt_base@std@@QBE_NXZ  +
test al al +
jz loc_40FA6F  +
mov dword ptr [esi+38h] 0 +
jmp loc_40FA7A  +
mov ecx esi +
mov [esi+38h] edi +
call ds:?_Init@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXXZ  +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_10] +
test ecx ecx +
jz loc_40FA99  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_40FA99  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4211D9  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi ecx +
mov [ebp+var_10] edi +
mov esi [ebp+arg_0] +
mov [ebp+var_14] edi +
call ds:??0?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAE@XZ  +
mov [ebp+var_4] 0 +
mov ecx edi +
mov dword ptr [edi] offset off_424C50 +
mov byte ptr [edi+48h] 0 +
mov byte ptr [edi+3Eh] 0 +
call ds:?_Init@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@IAEXXZ  +
mov [edi+4Ch] esi +
mov eax edi +
mov ecx dword_4314A8 +
mov [edi+40h] ecx +
mov ecx dword_4314AC +
mov [edi+44h] ecx +
mov dword ptr [edi+38h] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx ecx +
push esi  +
push edi  +
mov edi [edx+0Ch] +
lea esi [edx+3Ch] +
mov eax [edi] +
cmp eax esi +
jz loc_40FB80  +
mov ecx [edx+1Ch] +
mov [edx+50h] eax +
mov eax [edx+2Ch] +
mov eax [eax] +
add eax [ecx] +
mov [edx+54h] eax +
mov [edi] esi +
mov ecx edx +
mov eax [edx+1Ch] +
sub ecx esi +
add ecx 3Dh +
pop edi  +
mov [eax] esi +
mov eax [edx+2Ch] +
pop esi  +
mov [eax] ecx +
retn   +
***
lea eax [ecx+3Ch] +
cmp [edi] eax +
jnz loc_40FBC1  +
mov edx [ecx+50h] +
push esi  +
mov esi [ecx+54h] +
mov [edi] edx +
sub esi edx +
mov eax [ecx+1Ch] +
mov [eax] edx +
mov eax [ecx+2Ch] +
mov [eax] esi +
pop esi  +
pop edi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421178  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx ecx +
cmp dword ptr [ebx+38h] 0 +
jz loc_40FD06  +
cmp byte ptr [ebx+3Dh] 0 +
jz loc_40FD06  +
mov eax [ebx] +
push 0FFFFFFFFh  +
call dword ptr [eax+0Ch]  +
cmp eax 0FFFFFFFFh +
setz al  +
test al al +
jz loc_40FC29  +
xor al al +
jmp loc_40FD08  +
push 0  +
push 8  +
lea ecx [ebp+var_28] +
mov [ebp+var_14] 0Fh +
mov [ebp+var_18] 0 +
mov byte ptr [ebp+var_28] 0 +
call sub_402850  +
mov [ebp+var_4] 0 +
mov esi [ebp+var_14] +
lea edi [ebx+40h] +
cmp esi 10h +
lea eax [ebp+var_2C] +
push eax  +
mov eax [ebp+var_18] +
lea edx [ebp+var_28] +
cmovnb edx [ebp+var_28] +
lea ecx [ebp+var_28] +
cmovnb ecx [ebp+var_28] +
add eax edx +
push eax  +
push ecx  +
mov ecx [ebx+38h] +
push edi  +
call ds:?unshift@?$codecvt@DDU_Mbstatet@@@std@@QBEHAAU_Mbstatet@@PAD1AAPAD@Z  +
sub eax 0 +
jz loc_40FC90  +
sub eax 1 +
jz loc_40FC94  +
mov esi [ebp+var_14] +
sub eax 2 +
jz loc_40FCEC  +
xor bl bl +
jmp loc_40FCEE  +
mov byte ptr [ebx+3Dh] 0 +
mov esi [ebp+var_14] +
lea eax [ebp+var_28] +
mov ecx [ebp+var_28] +
cmp esi 10h +
mov edi [ebp+var_2C] +
cmovnb eax ecx +
sub edi eax +
jz loc_40FCCA  +
push dword ptr [ebx+4Ch]  +
cmp esi 10h +
lea eax [ebp+var_28] +
push edi  +
cmovnb eax ecx +
push 1  +
push eax  +
call ds:fwrite  +
mov esi [ebp+var_14] +
add esp 10h +
cmp edi eax +
jnz loc_40FC8C  +
cmp byte ptr [ebx+3Dh] 0 +
jz loc_40FCEC  +
test edi edi +
lea edi [ebx+40h] +
jnz loc_40FC54  +
push 0  +
push 8  +
lea ecx [ebp+var_28] +
call sub_402B30  +
jmp loc_40FC4E  +
mov bl 1 +
cmp esi 10h +
jb loc_40FD02  +
lea ecx [esi+1] +
push ecx  +
push [ebp+var_28]  +
lea ecx [ebp+var_28] +
call sub_402E70  +
mov al bl +
jmp loc_40FD08  +
mov al 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
cmp dword ptr [esi+4Ch] 0 +
jnz loc_40FD3E  +
xor edi edi +
jmp loc_40FD5F  +
call sub_40FBD0  +
push dword ptr [esi+4Ch]  +
xor ecx ecx +
mov edi esi +
test al al +
cmovz edi ecx +
call ds:fclose  +
xor ecx ecx +
add esp 4 +
test eax eax +
cmovnz edi ecx +
mov ecx esi +
mov byte ptr [esi+48h] 0 +
mov byte ptr [esi+3Dh] 0 +
call ds:?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ  +
mov dword ptr [esi+4Ch] 0 +
mov eax edi +
mov ecx dword_4314B0 +
mov [esi+40h] ecx +
mov ecx dword_4314B4 +
pop edi  +
mov [esi+44h] ecx +
mov dword ptr [esi+38h] 0 +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_42120F  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
cmp dword ptr [esi+4Ch] 0 +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
jnz loc_40FEC6  +
push edx  +
push ecx  +
push eax  +
call ds:?_Fiopen@std@@YAPAU_iobuf@@PB_WHH@Z  +
mov edi eax +
add esp 0Ch +
test edi edi +
jz loc_40FEC6  +
mov ecx esi +
mov byte ptr [esi+48h] 1 +
mov byte ptr [esi+3Dh] 0 +
call ds:?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ  +
lea eax [ebp+var_1C] +
mov [ebp+var_14] 0 +
push eax  +
lea eax [ebp+var_18] +
mov [ebp+var_18] 0 +
push eax  +
lea eax [ebp+var_14] +
mov [ebp+var_1C] 0 +
push eax  +
push edi  +
call ds:_get_stream_buffer_pointers  +
mov eax [ebp+var_14] +
add esp 10h +
mov [esi+0Ch] eax +
mov ecx esi +
mov [esi+10h] eax +
mov eax [ebp+var_18] +
mov [esi+1Ch] eax +
mov [esi+20h] eax +
mov eax [ebp+var_1C] +
mov [esi+2Ch] eax +
mov [esi+30h] eax +
mov [esi+4Ch] edi +
mov eax dword_4314B0 +
mov [esi+40h] eax +
mov eax dword_4314B4 +
mov [esi+44h] eax +
lea eax [ebp+var_20] +
push eax  +
mov dword ptr [esi+38h] 0 +
call ds:?getloc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QBE?AVlocale@2@XZ  +
push eax  +
mov [ebp+var_4] 0 +
call sub_4105C0  +
add esp 4 +
mov edi eax +
mov ecx edi +
call ds:?always_noconv@codecvt_base@std@@QBE_NXZ  +
test al al +
jz loc_40FE98  +
mov dword ptr [esi+38h] 0 +
jmp loc_40FEA3  +
mov ecx esi +
mov [esi+38h] edi +
call ds:?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ  +
mov [ebp+var_4] 1 +
mov ecx [ebp+var_1C] +
test ecx ecx +
jz loc_40FEC2  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_40FEC2  +
mov edx [eax] +
mov ecx eax +
push 1  +
call dword ptr [edx]  +
mov eax esi +
jmp loc_40FEC8  +
xor eax eax +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_421249  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_20] esi +
mov edi [ebp+arg_0] +
mov [ebp+var_24] esi +
call ds:??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAE@XZ  +
mov [ebp+var_4] 0 +
mov ecx esi +
mov dword ptr [esi] offset off_426CFC +
mov byte ptr [esi+48h] 0 +
mov byte ptr [esi+3Dh] 0 +
call ds:?_Init@?$basic_streambuf@DU?$char_traits@D@std@@@std@@IAEXXZ  +
test edi edi +
jz loc_40FF92  +
lea eax [ebp+var_1C] +
mov [ebp+var_14] 0 +
push eax  +
lea eax [ebp+var_18] +
mov [ebp+var_18] 0 +
push eax  +
lea eax [ebp+var_14] +
mov [ebp+var_1C] 0 +
push eax  +
push edi  +
call ds:_get_stream_buffer_pointers  +
mov eax [ebp+var_14] +
add esp 10h +
mov ecx [ebp+var_1C] +
mov [esi+0Ch] eax +
mov [esi+10h] eax +
mov eax [ebp+var_18] +
mov [esi+1Ch] eax +
mov [esi+20h] eax +
mov [esi+2Ch] ecx +
mov [esi+30h] ecx +
mov [esi+4Ch] edi +
mov eax esi +
mov ecx dword_4314B0 +
mov [esi+40h] ecx +
mov ecx dword_4314B4 +
mov [esi+44h] ecx +
mov dword ptr [esi+38h] 0 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
pop ebp  +
retn 4  +
***
sub eax 10h +
retn   +
***
mov eax [ebp+arg_0] +
add eax 10h +
mov [ecx] eax +
pop ebp  +
retn 4  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx [edi] +
cmp [ecx-0Ch] esi +
cmovg esi [ecx-0Ch] +
cmp dword ptr [ecx-4] 1 +
jle loc_410027  +
push esi  +
mov ecx edi +
call loc_4100A0  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov ecx [ecx-8] +
cmp ecx esi +
jge loc_410053  +
cmp ecx 40000000h +
jle loc_41003D  +
mov eax 100000h +
jmp loc_410044  +
mov eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
add ecx eax +
cmp ecx esi +
cmovl ecx esi +
push ecx  +
mov ecx edi +
call loc_410060  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi ecx +
mov edx [edi] +
sub edx 10h +
mov ecx [edx] +
cmp [edx+8] esi +
jge loc_410092  +
test esi esi +
jle loc_410092  +
mov eax [ecx] +
push 1  +
push esi  +
push edx  +
call dword ptr [eax+8]  +
test eax eax +
jz loc_410092  +
add eax 10h +
mov [edi] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call loc_403B80  +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax ecx +
push ebx  +
mov [ebp-0Ch] eax +
push esi  +
mov eax [eax] +
mov ecx [eax-10h] +
mov ebx [eax-0Ch] +
push edi  +
lea edi [eax-10h] +
mov [ebp-4] eax +
mov eax [ecx] +
mov [ebp-8] ebx +
call dword ptr [eax+10h]  +
mov esi [ebp+8] +
mov ecx eax +
push 1  +
push esi  +
mov edx [eax] +
call dword ptr [edx]  +
mov [ebp+8] eax +
test eax eax +
jz loc_41011C  +
cmp ebx esi +
cmovl esi ebx +
lea ebx [eax+10h] +
inc esi  +
mov ecx ebx +
push esi  +
push dword ptr [ebp-4]  +
mov edx esi +
call sub_401130  +
mov ecx [ebp+8] +
add esp 8 +
mov eax [ebp-8] +
mov [ecx+4] eax +
or eax 0FFFFFFFFh +
xadd [edi+0Ch] eax +
dec eax  +
test eax eax +
jg loc_41010E  +
mov ecx [edi] +
push edi  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax [ebp-0Ch] +
pop edi  +
pop esi  +
mov [eax] ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call loc_403B80  +
push [ebp+arg_C]  +
mov edx [ebp+arg_4] +
push [ebp+arg_8]  +
mov ecx [ebp+arg_0] +
call sub_401130  +
add esp 8 +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
push dword ptr [eax+4]  +
call ds:?_New_Locimp@_Locimp@locale@std@@CAPAV123@ABV123@@Z  +
add esp 4 +
mov [esi+4] eax +
cmp [ebp+arg_4] 0 +
jz loc_4101A2  +
mov ecx ds:?id@?$codecvt@_WDU_Mbstatet@@@std@@2V0locale@2@A +
call ds:??Bid@locale@std@@QAEIXZ  +
mov ecx [esi+4] +
push eax  +
push [ebp+arg_4]  +
call ds:?_Addfac@_Locimp@locale@std@@AAEXPAVfacet@23@I@Z  +
mov eax [esi+4] +
push offset asc_4289DC  +
mov dword ptr [eax+10h] 0 +
mov ecx [esi+4] +
add ecx 18h +
call ds:??4?$_Yarn@D@std@@QAEAAV01@PBD@Z  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_42129D  +
mov eax large fs:0 +
push eax  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov [ebp-10h] esp +
mov ecx [ebp+0Ch] +
xor esi esi +
mov [ebp-1Ch] esi +
lea edx [ecx+1] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_4101E6  +
sub ecx edx +
mov [ebp-18h] esi +
mov edx [ebp+8] +
mov [ebp-14h] ecx +
mov eax [edx] +
mov eax [eax+4] +
add eax edx +
mov [ebp-20h] eax +
mov ebx [eax+24h] +
mov edi [eax+20h] +
test ebx ebx +
jl loc_410224  +
jg loc_410212  +
test edi edi +
jz loc_410224  +
xor eax eax +
cmp ebx eax +
jl loc_410224  +
jg loc_41021E  +
cmp edi ecx +
jbe loc_410224  +
sub edi ecx +
sbb ebx eax +
jmp loc_410232  +
xorps xmm0 xmm0 +
movlpd oword ptr [ebp-2Ch] xmm0 +
mov ebx [ebp-28h] +
mov edi [ebp-2Ch] +
mov ecx [ebp-20h] +
mov [ebp-2Ch] edx +
mov ecx [ecx+38h] +
test ecx ecx +
jz loc_410247  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov edx [ebp+8] +
mov dword ptr [ebp-4] 0 +
mov eax [edx] +
mov eax [eax+4] +
cmp dword ptr [eax+edx+0Ch] 0 +
jnz loc_41026F  +
mov ecx [eax+edx+3Ch] +
test ecx ecx +
jz loc_41026F  +
cmp ecx edx +
jz loc_41026F  +
call ds:?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@XZ  +
mov edx [ebp+8] +
mov eax [edx] +
mov ecx [eax+4] +
add ecx edx +
cmp dword ptr [ecx+0Ch] 0 +
setz al  +
mov [ebp-28h] al +
mov dword ptr [ebp-4] 1 +
test al al +
jnz loc_410295  +
mov esi 4 +
jmp loc_410422  +
***
lea eax [ebp-34h] +
mov byte ptr [ebp-4] 2 +
push eax  +
call ds:?getloc@ios_base@std@@QBE?AVlocale@2@XZ  +
push eax  +
mov byte ptr [ebp-4] 3 +
call sub_403E00  +
add esp 4 +
mov [ebp-20h] eax +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp-30h] +
test ecx ecx +
jz loc_4102CF  +
mov eax [ecx] +
call dword ptr [eax+8]  +
mov ecx eax +
test ecx ecx +
jz loc_4102CF  +
mov eax [ecx] +
push 1  +
call dword ptr [eax]  +
mov ecx [ebp+8] +
mov byte ptr [ebp-4] 2 +
mov eax [ecx] +
mov eax [eax+4] +
mov eax [eax+ecx+14h] +
and eax 1C0h +
cmp eax 40h +
jz loc_41032C  +
mov eax [ecx] +
mov eax [eax+4] +
mov eax [eax+ecx+38h] +
mov ecx [ebp-20h] +
mov [ebp-24h] eax +
mov eax [ebp+0Ch] +
movzx eax byte ptr [eax] +
push eax  +
call ds:?widen@?$ctype@_W@std@@QBE_WD@Z  +
mov ecx [ebp-24h] +
movzx eax ax +
push eax  +
call ds:?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z  +
movzx eax ax +
mov ecx 0FFFFh +
cmp cx ax +
mov ecx [ebp+8] +
mov eax 4 +
cmovz esi eax +
mov eax [ebp-14h] +
add eax 0FFFFFFFFh +
mov [ebp-1Ch] esi +
mov [ebp-14h] eax +
adc dword ptr [ebp-18h] 0FFFFFFFFh +
inc dword ptr [ebp+0Ch]  +
jmp loc_410330  +
***
add edi 0FFFFFFFFh +
adc ebx 0FFFFFFFFh +
jmp loc_4102F0  +
***
or esi 4 +
mov edx [ebp+8] +
mov eax [edx] +
mov eax [eax+4] +
mov dword ptr [eax+edx+20h] 0 +
mov dword ptr [eax+edx+24h] 0 +
jmp loc_41041B  +
***
mov edx [ebp+8] +
push 1  +
push 4  +
mov eax [edx] +
mov ecx [eax+4] +
add ecx edx +
call ds:?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z  +
mov eax offset loc_410415 +
retn   +
mov esi [ebp-1Ch] +
mov edx [ebp+8] +
mov dword ptr [ebp-4] 1 +
mov eax [edx] +
push 0  +
push esi  +
mov ecx [eax+4] +
add ecx edx +
call ds:?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z  +
mov dword ptr [ebp-4] 6 +
call ds:?uncaught_exception@std@@YA_NXZ  +
mov esi [ebp-2Ch] +
test al al +
jnz loc_41044E  +
mov ecx esi +
call ds:?_Osfx@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEXXZ  +
mov byte ptr [ebp-4] 7 +
mov ecx [esi] +
mov ecx [ecx+4] +
mov ecx [ecx+esi+38h] +
test ecx ecx +
jz loc_410464  +
mov edx [ecx] +
call dword ptr [edx+8]  +
mov eax [ebp+8] +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
push 0Ah  +
mov eax [esi] +
mov ecx [eax+4] +
add ecx esi +
call ds:?widen@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WD@Z  +
movzx ecx ax +
push ecx  +
mov ecx esi +
call ds:?put@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@_W@Z  +
mov ecx esi +
call ds:?flush@?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV12@XZ  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4202E9  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx [ebp+arg_0] +
lea ecx [ebp+var_14] +
push 0  +
call ds:??0_Lockit@std@@QAE@H@Z  +
mov [ebp+var_4] 0 +
mov eax dword_43149C +
mov ecx ds:?id@?$codecvt@_WDU_Mbstatet@@@std@@2V0locale@2@A +
mov [ebp+var_18] eax +
call ds:??Bid@locale@std@@QAEIXZ  +
mov edi eax +
mov eax [ebx+4] +
cmp edi [eax+0Ch] +
jnb loc_41051A  +
mov ecx [eax+8] +
mov esi [ecx+edi*4] +
test esi esi +
jnz loc_41058E  +
jmp loc_41051C  +
xor esi esi +
cmp byte ptr [eax+14h] 0 +
jz loc_410533  +
call ds:?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ  +
cmp edi [eax+0Ch] +
jnb loc_410537  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_41058E  +
mov esi [ebp+var_18] +
test esi esi +
jnz loc_41058E  +
lea eax [ebp+var_18] +
push ebx  +
push eax  +
call ds:?_Getcat@?$codecvt@_WDU_Mbstatet@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_410575  +
xorps xmm0 xmm0 +
mov [ebp+var_24] offset off_424C44 +
push offset unk_42C820  +
lea eax [ebp+var_24] +
movq [ebp+var_20] xmm0 +
push eax  +
mov dword ptr [ebp+var_20] offset aBadCast +
call _CxxThrowException  +
mov esi [ebp+var_18] +
mov ecx esi +
mov dword_43149C esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_41EAD9  +
add esp 4 +
lea ecx [ebp+var_14] +
call ds:??1_Lockit@std@@QAE@XZ  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4202E9  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx [ebp+arg_0] +
lea ecx [ebp+var_14] +
push 0  +
call ds:??0_Lockit@std@@QAE@H@Z  +
mov [ebp+var_4] 0 +
mov eax dword_431498 +
mov ecx ds:?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A +
mov [ebp+var_18] eax +
call ds:??Bid@locale@std@@QAEIXZ  +
mov edi eax +
mov eax [ebx+4] +
cmp edi [eax+0Ch] +
jnb loc_41062A  +
mov ecx [eax+8] +
mov esi [ecx+edi*4] +
test esi esi +
jnz loc_41069E  +
jmp loc_41062C  +
xor esi esi +
cmp byte ptr [eax+14h] 0 +
jz loc_410643  +
call ds:?_Getgloballocale@locale@std@@CAPAV_Locimp@12@XZ  +
cmp edi [eax+0Ch] +
jnb loc_410647  +
mov eax [eax+8] +
mov esi [eax+edi*4] +
test esi esi +
jnz loc_41069E  +
mov esi [ebp+var_18] +
test esi esi +
jnz loc_41069E  +
lea eax [ebp+var_18] +
push ebx  +
push eax  +
call ds:?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SAIPAPBVfacet@locale@2@PBV42@@Z  +
add esp 8 +
cmp eax 0FFFFFFFFh +
jnz loc_410685  +
xorps xmm0 xmm0 +
mov [ebp+var_24] offset off_424C44 +
push offset unk_42C820  +
lea eax [ebp+var_24] +
movq [ebp+var_20] xmm0 +
push eax  +
mov dword ptr [ebp+var_20] offset aBadCast +
call _CxxThrowException  +
mov esi [ebp+var_18] +
mov ecx esi +
mov dword_431498 esi +
mov edx [esi] +
call dword ptr [edx+4]  +
push esi  +
call sub_41EAD9  +
add esp 4 +
lea ecx [ebp+var_14] +
call ds:??1_Lockit@std@@QAE@XZ  +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
call sub_408350  +
mov [esi] eax +
mov eax esi +
pop esi  +
retn 8  +
***
mov edx [ebp+arg_0] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
sub ecx [ecx-4] +
jmp sub_40F3E0  +
***
push 0FFFFFFFFh  +
push offset loc_4212D0  +
mov eax large fs:0 +
push eax  +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push ecx  +
mov ecx esp +
mov [ebp+hKey] 0 +
push offset aCrlogProductpr  +
call sub_4023D0  +
lea ecx [ebp+hKey] +
call sub_4115B0  +
add esp 4 +
test al al +
jz loc_4108AB  +
call sub_401530  +
mov ecx eax +
test ecx ecx +
jnz loc_410784  +
push 80004005h  +
call loc_401220  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
lea edi [eax+10h] +
mov [ebp+lpData] edi +
mov eax [ebp+arg_0] +
mov [ebp+var_4] 0 +
mov eax [eax] +
mov esi [eax] +
cmp esi eax +
jz loc_410883  +
cmp dword ptr [esi+3Ch] 10h +
lea eax [esi+28h] +
jb loc_4107B0  +
mov eax [eax] +
push eax  +
lea ecx [ebp+lpData] +
call loc_402C50  +
lea eax [esi+10h] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
call sub_404A60  +
add esp 8 +
mov ebx eax +
mov byte ptr [ebp+var_4] 1 +
mov edi [ebp+lpData] +
cmp dword ptr [edi-4] 1 +
mov eax [edi-0Ch] +
mov [ebp+var_18] eax +
jle loc_4107ED  +
push eax  +
lea ecx [ebp+lpData] +
call sub_403D80  +
mov edi [ebp+lpData] +
mov eax [ebp+var_18] +
cmp dword ptr [ebx+14h] 8 +
jb loc_4107F5  +
mov ebx [ebx] +
lea eax ds:1[eax*2] +
push eax  +
push edi  +
push 1  +
push 0  +
push ebx  +
push [ebp+hKey]  +
call ds:RegSetValueExW  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_1C] +
cmp eax 8 +
jb loc_410825  +
inc eax  +
lea ecx [ebp+var_30] +
push eax  +
push [ebp+var_30]  +
call sub_402E00  +
xor eax eax +
mov [ebp+var_1C] 7 +
mov [ebp+var_20] 0 +
mov word ptr [ebp+var_30] ax +
cmp [esi+0Dh] al +
jnz loc_410878  +
mov eax [esi+8] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_41085D  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_410878  +
mov esi eax +
mov eax [esi] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_410851  +
jmp loc_410878  +
mov eax [esi+4] +
cmp byte ptr [eax+0Dh] 0 +
jnz loc_410876  +
cmp esi [eax+8] +
jnz loc_410876  +
mov esi eax +
mov eax [eax+4] +
cmp byte ptr [eax+0Dh] 0 +
jz loc_410866  +
mov esi eax +
mov eax [ebp+arg_0] +
cmp esi [eax] +
jnz loc_4107A5  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov [ebp+var_4] 0FFFFFFFFh +
add edi 0FFFFFFF0h +
or eax 0FFFFFFFFh +
xadd [edi+0Ch] eax +
dec eax  +
test eax eax +
jg loc_4108AB  +
mov ecx [edi] +
push edi  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4212F8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push esi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push ecx  +
mov ecx esp +
mov [ebp+var_4] 0 +
push offset aCrlog  +
mov [ebp+hKey] 0 +
call sub_402330  +
lea ecx [ebp+hKey] +
call sub_4115B0  +
add esp 4 +
test al al +
jz loc_410957  +
mov eax [ebp+lpData] +
cmp dword ptr [eax-4] 1 +
mov esi [eax-0Ch] +
jle loc_410928  +
push esi  +
lea ecx [ebp+lpData] +
call sub_403D80  +
mov eax [ebp+lpData] +
lea ecx ds:1[esi*2] +
mov esi [ebp+hKey] +
push ecx  +
push eax  +
push 1  +
push 0  +
push offset aMachineIdSynce  +
push esi  +
call ds:RegSetValueExW  +
test eax eax +
jz loc_410950  +
lea ecx [ebp+lpData] +
call loc_403640  +
push esi  +
call ds:RegCloseKey  +
mov [ebp+var_4] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
mov edx [ebp+lpData] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_410979  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421333  +
mov eax large fs:0 +
push eax  +
sub esp 110h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
push ecx  +
mov [ebp+var_4] 0 +
mov ecx esp +
push offset aCrlogProductpr  +
mov [ebp+lpData] 0 +
mov [ebp+cbData] 0FFh +
call sub_4023D0  +
lea ecx [ebp+lpData] +
call sub_4115B0  +
add esp 4 +
test al al +
jnz loc_410A17  +
mov [ebp+var_4] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
mov edx [ebp+lpValueName] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jmp loc_410B29  +
mov edi [ebp+lpData] +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push 0  +
push 0  +
push [ebp+lpValueName]  +
push edi  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_410A8E  +
mov eax [ebp+cbData] +
mov ecx 0FFh +
cdq   +
xor eax edx +
sub eax edx +
cmp eax ecx +
mov [ebp+cbData] eax +
cmovl ecx eax +
cmp ecx 100h +
jnb loc_410A89  +
lea eax [ebp+Data] +
mov [ebp+ecx+Data] 0 +
push eax  +
push offset aS  +
push esi  +
call sub_4083D0  +
add esp 0Ch +
push edi  +
call ds:RegCloseKey  +
jmp loc_4109FA  +
call sub_41F4FF  +
or esi 0FFFFFFFFh +
cmp eax 2 +
jnz loc_410B0D  +
push offset a0_1  +
lea ecx [ebp+lpData] +
mov [ebp+lpData] 0 +
call sub_4023D0  +
mov byte ptr [ebp+var_4] 1 +
mov eax [ebp+lpData] +
cmp dword ptr [eax-4] 1 +
mov ebx [eax-0Ch] +
jle loc_410AD5  +
push ebx  +
lea ecx [ebp+lpData] +
call sub_403D80  +
mov eax [ebp+lpData] +
lea ecx ds:1[ebx*2] +
push ecx  +
push eax  +
push 1  +
push 0  +
push [ebp+lpValueName]  +
push edi  +
call ds:RegSetValueExW  +
mov byte ptr [ebp+var_4] 0 +
mov eax esi +
mov edx [ebp+lpData] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_410B0D  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
push edi  +
call ds:RegCloseKey  +
mov [ebp+var_4] 0FFFFFFFFh +
mov edx [ebp+lpValueName] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] esi +
dec esi  +
test esi esi +
jg loc_410B33  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_42136B  +
mov eax large fs:0 +
push eax  +
sub esp 110h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
push ecx  +
mov ecx esp +
mov [ebp+hKey] 0 +
push offset aCrlog  +
mov [ebp+cbData] 0FFh +
call sub_402330  +
lea ecx [ebp+hKey] +
call sub_4115B0  +
add esp 4 +
test al al +
jz loc_410CD4  +
mov esi [ebp+hKey] +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push 0  +
push 0  +
push offset aHighbeamSessio  +
push esi  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_410C2C  +
mov eax [ebp+cbData] +
mov ecx 0FFh +
cdq   +
xor eax edx +
sub eax edx +
cmp eax ecx +
mov [ebp+cbData] eax +
cmovl ecx eax +
cmp ecx 100h +
jnb loc_410C27  +
lea eax [ebp+Data] +
mov [ebp+ecx+Data] 0 +
push eax  +
push offset aS  +
push edi  +
call sub_4083D0  +
add esp 0Ch +
mov al 1 +
jmp loc_410CD4  +
call sub_41F4FF  +
push offset a1  +
lea ecx [ebp+lpData] +
mov [ebp+lpData] 0 +
call sub_4023D0  +
mov [ebp+var_4] 0 +
mov eax [ebp+lpData] +
cmp dword ptr [eax-4] 1 +
mov ebx [eax-0Ch] +
jle loc_410C6E  +
push ebx  +
lea ecx [ebp+lpData] +
call sub_403D80  +
mov eax [ebp+lpData] +
lea ecx ds:1[ebx*2] +
push ecx  +
push eax  +
push 1  +
push 0  +
push offset aHighbeamSessio  +
push esi  +
call ds:RegSetValueExW  +
mov ebx eax +
test ebx ebx +
jnz loc_410CA1  +
push [ebp+lpData]  +
push offset aS  +
push edi  +
call sub_4083D0  +
add esp 0Ch +
push esi  +
call ds:RegCloseKey  +
test ebx ebx +
mov [ebp+var_4] 0FFFFFFFFh +
mov esi [ebp+lpData] +
setz bl  +
add esi 0FFFFFFF0h +
or eax 0FFFFFFFFh +
xadd [esi+0Ch] eax +
dec eax  +
test eax eax +
jg loc_410CD2  +
mov ecx [esi] +
push esi  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset loc_4213B8  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp-10h] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
mov dword ptr [ebp-4] 0 +
xorps xmm0 xmm0 +
movq qword ptr [ebp-1Ch] xmm0 +
mov dword ptr [ebp-14h] 0 +
mov dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-18h] 0 +
mov dword ptr [ebp-14h] 0 +
lea eax [ebp-1Ch] +
mov byte ptr [ebp-4] 1 +
push eax  +
sub esp 18h +
mov ecx esp +
mov [ebp-24h] esp +
mov dword ptr [ecx+14h] 0Fh +
mov dword ptr [ecx+10h] 0 +
cmp dword ptr [ecx+14h] 10h +
jb loc_410D6E  +
mov eax [ecx] +
jmp loc_410D70  +
mov eax ecx +
push 1  +
push offset asc_42845C  +
mov byte ptr [eax] 0 +
call sub_402910  +
sub esp 18h +
mov byte ptr [ebp-4] 2 +
mov esi esp +
lea eax [ebp+8] +
push ecx  +
mov ecx esp +
push eax  +
mov [ebp-20h] ecx +
call loc_402CE0  +
push esi  +
call sub_404940  +
add esp 8 +
mov byte ptr [ebp-4] 1 +
call loc_404B80  +
mov ecx [ebp-18h] +
mov eax 2AAAAAABh +
mov esi [ebp-1Ch] +
add esp 34h +
sub ecx esi +
imul  ecx +
sar edx 2 +
mov ebx edx +
shr ebx 1Fh +
add ebx edx +
cmp ebx 5 +
jnz loc_410E3C  +
cmp dword ptr [esi+10h] 8 +
jnz loc_410E3C  +
cmp dword ptr [esi+28h] 4 +
jnz loc_410E3C  +
cmp dword ptr [esi+40h] 4 +
jnz loc_410E3C  +
cmp dword ptr [esi+58h] 4 +
jnz loc_410E3C  +
cmp dword ptr [esi+70h] 0Ch +
jnz loc_410E3C  +
xor edi edi +
test ebx ebx +
jz loc_410E35  +
mov edx esi +
mov esi [edx+10h] +
xor ecx ecx +
test esi esi +
jz loc_410E2A  +
cmp dword ptr [edx+14h] 10h +
jb loc_410E0A  +
mov eax [edx] +
jmp loc_410E0C  +
mov eax edx +
mov al [eax+ecx] +
cmp al 30h +
jl loc_410E17  +
cmp al 39h +
jle loc_410E25  +
cmp al 61h +
jl loc_410E1F  +
cmp al 66h +
jle loc_410E25  +
sub al 41h +
cmp al 5 +
ja loc_410E39  +
inc ecx  +
cmp ecx esi +
jb loc_410E00  +
inc edi  +
add edx 18h +
cmp edi ebx +
jb loc_410DF0  +
mov esi [ebp-1Ch] +
mov bl 1 +
jmp loc_410E3E  +
mov esi [ebp-1Ch] +
xor bl bl +
test esi esi +
jz loc_410E75  +
push dword ptr [ebp-20h]  +
lea ecx [ebp-1Ch] +
push ecx  +
push dword ptr [ebp-18h]  +
push esi  +
call sub_404630  +
mov ecx [ebp-14h] +
mov eax 2AAAAAABh +
sub ecx esi +
add esp 10h +
imul  ecx +
lea ecx [ebp-1Ch] +
sar edx 2 +
mov eax edx +
shr eax 1Fh +
add eax edx +
push eax  +
push esi  +
call sub_402D60  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
or ecx 0FFFFFFFFh +
mov eax [ebp+8] +
add eax 0FFFFFFF0h +
xadd [eax+0Ch] ecx +
dec ecx  +
test ecx ecx +
jg loc_410E97  +
mov ecx [eax] +
push eax  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov al bl +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4213F9  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_28] esi +
mov [ebp+var_4] 0 +
mov [ebp+var_24] 0 +
push offset unk_427F91  +
mov [ebp+var_2C] esi +
mov dword ptr [esi] 0 +
call sub_402330  +
lea eax [ebp+pguid] +
mov [ebp+var_4] 0 +
push eax  +
mov [ebp+var_24] 1 +
call ds:CoCreateGuid  +
test eax eax +
jnz loc_410F6E  +
movzx eax [ebp+pguid.Data4+7] +
push eax  +
movzx eax [ebp+pguid.Data4+6] +
push eax  +
movzx eax [ebp+pguid.Data4+5] +
movzx ecx [ebp+pguid.Data3] +
push eax  +
movzx eax [ebp+pguid.Data4+4] +
push eax  +
movzx eax [ebp+pguid.Data4+3] +
push eax  +
movzx eax [ebp+pguid.Data4+2] +
push eax  +
movzx eax [ebp+pguid.Data4+1] +
push eax  +
movzx eax [ebp+pguid.Data4] +
push eax  +
push ecx  +
movzx ecx [ebp+pguid.Data2] +
push ecx  +
push [ebp+pguid.Data1]  +
push offset a08x04x04x02x02  +
push esi  +
call sub_4083D0  +
add esp 34h +
mov eax esi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421436  +
mov eax large fs:0 +
push eax  +
sub esp 418h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ebp+arg_0] +
mov [ebp+var_424] 0 +
call sub_401530  +
mov ecx eax +
test ecx ecx +
jnz loc_410FE0  +
push 80004005h  +
call loc_401220  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [ebp+lpData] eax +
push ecx  +
mov [ebp+var_4] 0 +
mov ecx esp +
push offset aCrlog  +
mov [ebp+hKey] 0 +
mov [ebp+cbData] 400h +
call sub_402330  +
lea ecx [ebp+hKey] +
call sub_4115B0  +
add esp 4 +
test al al +
jnz loc_41106F  +
lea ecx [ebp+lpData] +
call loc_403640  +
lea eax [ebp+lpData] +
mov ecx edi +
push eax  +
call loc_402CE0  +
mov [ebp+var_4] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
mov esi [ebp+lpData] +
add esi 0FFFFFFF0h +
xadd [esi+0Ch] eax +
dec eax  +
test eax eax +
jg loc_4111DC  +
mov ecx [esi] +
push esi  +
mov edx [ecx] +
call dword ptr [edx+4]  +
jmp loc_4111DC  +
mov ebx [ebp+hKey] +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push 0  +
push 0  +
push offset aGuid  +
push ebx  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_411110  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+lpData] +
push offset aS  +
push eax  +
call sub_4083D0  +
add esp 8 +
lea eax [ebp+lpData] +
mov ecx esp +
mov [ebp+var_420] ecx +
push eax  +
call loc_402CE0  +
call loc_410CF0  +
add esp 4 +
test al al +
jz loc_411110  +
push ebx  +
call ds:RegCloseKey  +
lea eax [ebp+lpData] +
mov ecx edi +
push eax  +
call loc_402CE0  +
mov [ebp+var_4] 0FFFFFFFFh +
or eax 0FFFFFFFFh +
mov edx [ebp+lpData] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_4111DC  +
mov ecx [edx] +
push edx  +
jmp loc_4111D7  +
lea ecx [ebp+hKey] +
call sub_410EC0  +
push eax  +
lea ecx [ebp+lpData] +
mov byte ptr [ebp+var_4] 1 +
call sub_4022A0  +
mov byte ptr [ebp+var_4] 0 +
or eax 0FFFFFFFFh +
mov edx [ebp+hKey] +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_41114D  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov esi [ebp+lpData] +
cmp dword ptr [esi-4] 1 +
mov eax [esi-0Ch] +
mov [ebp+var_420] eax +
jle loc_41117A  +
push eax  +
lea ecx [ebp+lpData] +
call sub_403D80  +
mov esi [ebp+lpData] +
mov eax [ebp+var_420] +
lea eax ds:1[eax*2] +
push eax  +
push esi  +
push 1  +
push 0  +
push offset aGuid  +
push ebx  +
call ds:RegSetValueExW  +
test eax eax +
jz loc_4111A8  +
lea ecx [ebp+lpData] +
call loc_403640  +
mov esi [ebp+lpData] +
push ebx  +
call ds:RegCloseKey  +
lea eax [ebp+lpData] +
mov ecx edi +
push eax  +
call loc_402CE0  +
mov [ebp+var_4] 0FFFFFFFFh +
add esi 0FFFFFFF0h +
or eax 0FFFFFFFFh +
xadd [esi+0Ch] eax +
dec eax  +
test eax eax +
jg loc_4111DC  +
mov ecx [esi] +
push esi  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov eax edi +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4214B5  +
mov eax large fs:0 +
push eax  +
mov eax 828Ch +
call sub_420050  +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov ebx [ebp+arg_0] +
xorps xmm0 xmm0 +
mov [ebp+var_4] 0 +
mov ecx ebx +
mov [ebp+var_8258] 0 +
mov [ebp+var_8278] ebx +
movq qword ptr [ebx] xmm0 +
mov dword ptr [ebx] 0 +
mov dword ptr [ebx+4] 0 +
call sub_408350  +
mov [ebx] eax +
mov [ebp+var_4] 0 +
mov ecx ebx +
mov [ebp+var_8258] 1 +
call sub_405DF0  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push 0  +
push offset aSoftwareAdobeC  +
push 80000001h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_411580  +
push 208h  +
push eax  +
lea eax [ebp+Class] +
push eax  +
call memset  +
add esp 0Ch +
mov [ebp+cbClass] 104h +
lea eax [ebp+ftLastWriteTime] +
mov [ebp+cSubKeys] 0 +
mov [ebp+cbValueName] 3FFFh +
push eax  +
lea eax [ebp+cbSecurityDescriptor] +
push eax  +
lea eax [ebp+cbMaxValueLen] +
push eax  +
lea eax [ebp+cbMaxValueNameLen] +
push eax  +
lea eax [ebp+cValues] +
push eax  +
lea eax [ebp+cbMaxClassLen] +
push eax  +
lea eax [ebp+cbMaxSubKeyLen] +
push eax  +
lea eax [ebp+cSubKeys] +
push eax  +
push 0  +
lea eax [ebp+cbClass] +
push eax  +
lea eax [ebp+Class] +
push eax  +
push [ebp+hKey]  +
call ds:RegQueryInfoKeyW  +
cmp [ebp+cValues] 0 +
jz loc_411580  +
lea eax [ebp+ValueName] +
mov [ebp+var_8254] 0 +
push eax  +
lea ecx [ebp+var_8254] +
call sub_4023D0  +
mov [ebp+var_4] 1 +
call sub_401530  +
mov ecx eax +
test ecx ecx +
jnz loc_411373  +
push 80004005h  +
call loc_401220  +
mov eax [ecx] +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [ebp+var_821C] eax +
xor edi edi +
mov byte ptr [ebp+var_4] 2 +
cmp [ebp+cValues] edi +
jbe loc_411543  +
xor eax eax +
mov [ebp+cbValueName] 3FFFh +
push eax  +
push eax  +
push eax  +
push eax  +
mov [ebp+ValueName] ax +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push edi  +
push [ebp+hKey]  +
call ds:RegEnumValueW  +
test eax eax +
jnz loc_411530  +
lea eax [ebp+ValueName] +
lea edx [eax+2] +
mov cx [eax] +
add eax 2 +
test cx cx +
jnz loc_4113D6  +
sub eax edx +
lea ecx [ebp+var_8254] +
sar eax 1 +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
call loc_403510  +
lea ecx [ebp+var_821C] +
call loc_403640  +
push ecx  +
mov ecx esp +
lea eax [ebp+var_8254] +
push eax  +
lea esi [ebp+var_821C] +
mov [ebp+var_8250] ecx +
call loc_402CE0  +
mov ecx esi +
call sub_410990  +
mov ecx esp +
mov eax esi +
push eax  +
mov [ebp+var_8250] ecx +
call loc_402CE0  +
lea eax [ebp+var_8298] +
push eax  +
call sub_404940  +
mov [ebp+var_8250] eax +
add esp 4 +
mov byte ptr [ebp+var_4] 3 +
mov ecx esp +
lea eax [ebp+var_8254] +
mov [ebp+var_825C] ecx +
push eax  +
call loc_402CE0  +
lea eax [ebp+var_8274] +
push eax  +
call sub_404940  +
add esp 8 +
push eax  +
lea eax [ebp+var_8280] +
mov byte ptr [ebp+var_4] 4 +
push eax  +
mov ecx ebx +
call sub_4089B0  +
mov esi [ebp+var_8280] +
add esi 28h +
mov ecx [ebp+var_8250] +
cmp esi ecx +
jz loc_4114D5  +
mov eax [esi+14h] +
cmp eax 10h +
jb loc_4114B0  +
inc eax  +
mov ecx esi +
push eax  +
push dword ptr [esi]  +
call sub_402E70  +
mov ecx [ebp+var_8250] +
mov dword ptr [esi+14h] 0Fh +
cmp dword ptr [esi+14h] 10h +
mov dword ptr [esi+10h] 0 +
jb loc_4114C8  +
mov eax [esi] +
jmp loc_4114CA  +
mov eax esi +
push ecx  +
mov ecx esi +
mov byte ptr [eax] 0 +
call sub_402BE0  +
mov eax [ebp+var_8260] +
cmp eax 10h +
jb loc_4114F3  +
inc eax  +
lea ecx [ebp+var_8274] +
push eax  +
push [ebp+var_8274]  +
call sub_402E70  +
mov byte ptr [ebp+var_4] 2 +
mov eax [ebp+var_8284] +
mov [ebp+var_8260] 0Fh +
mov [ebp+var_8264] 0 +
mov byte ptr [ebp+var_8274] 0 +
cmp eax 10h +
jb loc_411530  +
inc eax  +
lea ecx [ebp+var_8298] +
push eax  +
push [ebp+var_8298]  +
call sub_402E70  +
inc edi  +
cmp edi [ebp+cValues] +
jb loc_411393  +
mov eax [ebp+var_821C] +
or esi 0FFFFFFFFh +
mov byte ptr [ebp+var_4] 1 +
lea edx [eax-10h] +
mov eax esi +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_411561  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov byte ptr [ebp+var_4] 0 +
mov eax [ebp+var_8254] +
add eax 0FFFFFFF0h +
xadd [eax+0Ch] esi +
dec esi  +
test esi esi +
jg loc_411580  +
mov ecx [eax] +
push eax  +
mov edx [ecx] +
call dword ptr [edx+4]  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax ebx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4214F0  +
mov eax large fs:0 +
push eax  +
sub esp 14h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov esi ecx +
mov [ebp+var_4] 0 +
lea ecx [ebp+lpSubKey] +
push offset aSoftwareAdob_0  +
mov [ebp+hKey] 0 +
mov [ebp+phkResult] 0 +
mov [ebp+lpSubKey] 0 +
call sub_4023D0  +
mov byte ptr [ebp+var_4] 1 +
lea eax [ebp+lpSubKey] +
push [ebp+arg_0]  +
push offset aS  +
push eax  +
call sub_40A770  +
add esp 0Ch +
lea eax [ebp+hKey] +
push eax  +
push 0F003Fh  +
call ds:RegOpenCurrentUser  +
test eax eax +
jnz loc_411665  +
lea eax [ebp+dwDisposition] +
push eax  +
lea eax [ebp+phkResult] +
push eax  +
push 0  +
push 0F003Fh  +
push 0  +
push 0  +
push 0  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegCreateKeyExW  +
push [ebp+hKey]  +
test eax eax +
jz loc_4116C4  +
call ds:RegCloseKey  +
mov [ebp+hKey] 0 +
xor bl bl +
mov byte ptr [ebp+var_4] 0 +
or esi 0FFFFFFFFh +
mov edx [ebp+lpSubKey] +
mov eax esi +
add edx 0FFFFFFF0h +
xadd [edx+0Ch] eax +
dec eax  +
test eax eax +
jg loc_411688  +
mov ecx [edx] +
push edx  +
mov eax [ecx] +
call dword ptr [eax+4]  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+arg_0] +
add eax 0FFFFFFF0h +
xadd [eax+0Ch] esi +
dec esi  +
test esi esi +
jg loc_4116A7  +
mov ecx [eax] +
push eax  +
mov edx [ecx] +
call dword ptr [edx+4]  +
mov al bl +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
call ds:RegCloseKey  +
mov eax [ebp+phkResult] +
mov bl 1 +
mov [ebp+hKey] eax +
mov [ebp+phkResult] 0 +
mov [esi] eax +
jmp loc_411667  +
***
mov dword ptr [ecx] 0 +
mov eax ecx +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4220D8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_14] ecx +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+var_14] +
call sub_403F10  +
mov [ebp+var_4] 0 +
push 0  +
push 0  +
mov ecx [ebp+var_14] +
call sub_4027F0  +
xor ecx ecx +
mov [ebp+var_D] cl +
movzx edx [ebp+var_D] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
call sub_403F30  +
add esp 4 +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_403F30  +
add esp 4 +
push eax  +
mov ecx [ebp+var_14] +
call sub_417190  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_421528  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 64h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_20] 0 +
mov eax [ebp+arg_4] +
push eax  +
call sub_401860  +
add esp 4 +
xor ecx ecx +
mov [ebp+var_30] eax +
mov [ebp+var_2C] ecx +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
add ecx [eax+4] +
call ds:?width@ios_base@std@@QBE_JXZ  +
mov [ebp+var_64] eax +
mov [ebp+var_60] edx +
cmp [ebp+var_60] 0 +
jl loc_411837  +
jg loc_4117EF  +
cmp [ebp+var_64] 0 +
jbe loc_411837  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov ecx [ebp+arg_0] +
add ecx [edx+4] +
call ds:?width@ios_base@std@@QBE_JXZ  +
mov [ebp+var_6C] eax +
mov [ebp+var_68] edx +
mov eax [ebp+var_68] +
cmp eax [ebp+var_2C] +
jl loc_411837  +
jg loc_411818  +
mov ecx [ebp+var_6C] +
cmp ecx [ebp+var_30] +
jbe loc_411837  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
add ecx [eax+4] +
call ds:?width@ios_base@std@@QBE_JXZ  +
sub eax [ebp+var_30] +
sbb edx [ebp+var_2C] +
mov dword ptr [ebp+var_48] eax +
mov dword ptr [ebp+var_48+4] edx +
jmp loc_41183F  +
xorps xmm0 xmm0 +
movlpd oword ptr [ebp+var_48] xmm0 +
mov ecx dword ptr [ebp+var_48] +
mov [ebp+var_28] ecx +
mov edx dword ptr [ebp+var_48+4] +
mov [ebp+var_24] edx +
mov eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_1C] +
call sub_40F6F0  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_1C] +
call sub_40F670  +
movzx ecx al +
test ecx ecx +
jnz loc_41187B  +
mov edx [ebp+var_20] +
or edx 4 +
mov [ebp+var_20] edx +
jmp loc_411A74  +
mov byte ptr [ebp+var_4] 1 +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
add edx [ecx+4] +
mov ecx edx +
call ds:?flags@ios_base@std@@QBEHXZ  +
mov [ebp+var_4C] eax +
mov eax [ebp+var_4C] +
and eax 1C0h +
cmp eax 40h +
jz loc_41193F  +
jmp loc_4118BA  +
mov ecx [ebp+var_28] +
sub ecx 1 +
mov edx [ebp+var_24] +
sbb edx 0 +
mov [ebp+var_28] ecx +
mov [ebp+var_24] edx +
cmp [ebp+var_24] 0 +
jl loc_41193F  +
jg loc_4118C8  +
cmp [ebp+var_28] 0 +
jbe loc_41193F  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
add edx [ecx+4] +
mov ecx edx +
call ds:?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ  +
mov [ebp+var_32] ax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
add edx [ecx+4] +
mov ecx edx +
call ds:?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ  +
mov [ebp+var_50] eax +
movzx eax [ebp+var_32] +
push eax  +
mov ecx [ebp+var_50] +
call ds:?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z  +
mov [ebp-34h] ax +
mov cx [ebp-34h] +
mov word ptr [ebp+var_38+2] cx +
call sub_4046B0  +
mov word ptr [ebp+var_38] ax +
lea edx [ebp+var_38+2] +
push edx  +
lea eax [ebp+var_38] +
push eax  +
call sub_404690  +
add esp 8 +
movzx ecx al +
test ecx ecx +
jz loc_41193A  +
mov edx [ebp+var_20] +
or edx 4 +
mov [ebp+var_20] edx +
jmp loc_41193F  +
jmp loc_4118A8  +
cmp [ebp+var_20] 0 +
jnz loc_41198F  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
add edx [ecx+4] +
mov ecx edx +
call ds:?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ  +
mov [ebp+var_54] eax +
mov eax [ebp+var_2C] +
push eax  +
mov ecx [ebp+var_30] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+var_54] +
call ds:?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAE_JPB_W_J@Z  +
mov [ebp+var_74] eax +
mov [ebp+var_70] edx +
mov eax [ebp+var_74] +
cmp eax [ebp+var_30] +
jnz loc_411986  +
mov ecx [ebp+var_70] +
cmp ecx [ebp+var_2C] +
jz loc_41198F  +
mov edx [ebp+var_20] +
or edx 4 +
mov [ebp+var_20] edx +
cmp [ebp+var_20] 0 +
jnz loc_411A2E  +
jmp loc_4119AD  +
mov eax [ebp+var_28] +
sub eax 1 +
mov ecx [ebp+var_24] +
sbb ecx 0 +
mov [ebp+var_28] eax +
mov [ebp+var_24] ecx +
cmp [ebp+var_24] 0 +
jl loc_411A2E  +
jg loc_4119BB  +
cmp [ebp+var_28] 0 +
jbe loc_411A2E  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
add ecx [eax+4] +
call ds:?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ  +
mov word ptr [ebp+var_48+0Eh] ax +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov ecx [ebp+arg_0] +
add ecx [edx+4] +
call ds:?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ  +
mov [ebp+var_58] eax +
movzx eax word ptr [ebp+var_48+0Eh] +
push eax  +
mov ecx [ebp+var_58] +
call ds:?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z  +
mov word ptr [ebp+var_48+0Ch] ax +
mov cx word ptr [ebp+var_48+0Ch] +
mov word ptr [ebp+var_48+0Ah] cx +
call sub_4046B0  +
mov word ptr [ebp+var_48+8] ax +
lea edx [ebp+var_48+0Ah] +
push edx  +
lea eax [ebp+var_48+8] +
push eax  +
call sub_404690  +
add esp 8 +
movzx ecx al +
test ecx ecx +
jz loc_411A29  +
mov edx [ebp+var_20] +
or edx 4 +
mov [ebp+var_20] edx +
jmp loc_411A2E  +
jmp loc_41199B  +
push 0  +
push 0  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
add edx [ecx+4] +
mov ecx edx +
call ds:?width@ios_base@std@@QAE_J_J@Z  +
jmp loc_411A64  +
push 1  +
push 4  +
mov eax [ebp+8] +
mov ecx [eax] +
mov edx [ebp+8] +
add edx [ecx+4] +
mov ecx edx +
call ds:?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z  +
mov eax offset loc_411A6D +
retn   +
mov [ebp+var_4] 0 +
jmp loc_411A74  +
mov dword ptr [ebp-4] 0 +
push 0  +
mov eax [ebp+var_20] +
push eax  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov ecx [ebp+arg_0] +
add ecx [edx+4] +
call ds:?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z  +
mov eax [ebp+arg_0] +
mov [ebp+var_5C] eax +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1C] +
call sub_40F680  +
mov eax [ebp+var_5C] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421558  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 58h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_20] 0 +
mov ecx [ebp+arg_4] +
call sub_402540  +
mov [ebp+var_28] eax +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
add edx [ecx+4] +
mov ecx edx +
call ds:?width@ios_base@std@@QBE_JXZ  +
mov [ebp+var_58] eax +
mov [ebp+var_54] edx +
cmp [ebp+var_54] 0 +
jl loc_411B5B  +
jg loc_411B28  +
cmp [ebp+var_58] 0 +
jbe loc_411B5B  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
add edx [ecx+4] +
mov ecx edx +
call ds:?width@ios_base@std@@QBE_JXZ  +
cmp eax [ebp+var_28] +
jbe loc_411B5B  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
add edx [ecx+4] +
mov ecx edx +
call ds:?width@ios_base@std@@QBE_JXZ  +
sub eax [ebp+var_28] +
mov [ebp+var_3C] eax +
jmp loc_411B62  +
mov [ebp+var_3C] 0 +
mov eax [ebp+var_3C] +
mov [ebp+var_24] eax +
mov ecx [ebp+arg_0] +
push ecx  +
lea ecx [ebp+var_1C] +
call sub_40F6F0  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_1C] +
call sub_40F670  +
movzx edx al +
test edx edx +
jnz loc_411B98  +
mov eax [ebp+var_20] +
or eax 4 +
mov [ebp+var_20] eax +
jmp loc_411D6D  +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov ecx [ebp+arg_0] +
add ecx [edx+4] +
call ds:?flags@ios_base@std@@QBEHXZ  +
mov [ebp+var_40] eax +
mov eax [ebp+var_40] +
and eax 1C0h +
cmp eax 40h +
jz loc_411C42  +
jmp loc_411BCC  +
mov ecx [ebp+var_24] +
sub ecx 1 +
mov [ebp+var_24] ecx +
cmp [ebp+var_24] 0 +
jbe loc_411C42  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
add ecx [eax+4] +
call ds:?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ  +
mov [ebp+var_2A] ax +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov ecx [ebp+arg_0] +
add ecx [edx+4] +
call ds:?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ  +
mov [ebp+var_44] eax +
movzx eax [ebp+var_2A] +
push eax  +
mov ecx [ebp+var_44] +
call ds:?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z  +
mov [ebp-2Ch] ax +
mov cx [ebp-2Ch] +
mov word ptr [ebp+var_30+2] cx +
call sub_4046B0  +
mov word ptr [ebp+var_30] ax +
lea edx [ebp+var_30+2] +
push edx  +
lea eax [ebp+var_30] +
push eax  +
call sub_404690  +
add esp 8 +
movzx ecx al +
test ecx ecx +
jz loc_411C40  +
mov edx [ebp+var_20] +
or edx 4 +
mov [ebp+var_20] edx +
jmp loc_411C42  +
jmp loc_411BC3  +
cmp [ebp+var_20] 0 +
jnz loc_411CA6  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
add edx [ecx+4] +
mov ecx edx +
call ds:?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ  +
mov [ebp+var_48] eax +
mov eax [ebp+var_28] +
xor ecx ecx +
push ecx  +
push eax  +
mov ecx [ebp+arg_4] +
call sub_4024C0  +
push eax  +
mov ecx [ebp+var_48] +
call ds:?sputn@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAE_JPB_W_J@Z  +
mov [ebp+var_60] eax +
mov [ebp+var_5C] edx +
mov edx [ebp+var_28] +
xor eax eax +
mov [ebp+var_68] edx +
mov [ebp+var_64] eax +
mov ecx [ebp+var_60] +
cmp ecx [ebp+var_68] +
jnz loc_411C98  +
mov edx [ebp+var_5C] +
cmp edx [ebp+var_64] +
jz loc_411CA6  +
mov eax [ebp+var_20] +
or eax 4 +
mov [ebp+var_20] eax +
jmp loc_411D27  +
jmp loc_411CB1  +
mov ecx [ebp+var_24] +
sub ecx 1 +
mov [ebp+var_24] ecx +
cmp [ebp+var_24] 0 +
jbe loc_411D27  +
mov edx [ebp+arg_0] +
mov eax [edx] +
mov ecx [ebp+arg_0] +
add ecx [eax+4] +
call ds:?fill@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBE_WXZ  +
mov [ebp+var_32] ax +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov ecx [ebp+arg_0] +
add ecx [edx+4] +
call ds:?rdbuf@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QBEPAV?$basic_streambuf@_WU?$char_traits@_W@std@@@2@XZ  +
mov [ebp+var_4C] eax +
movzx eax [ebp+var_32] +
push eax  +
mov ecx [ebp+var_4C] +
call ds:?sputc@?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@QAEG_W@Z  +
mov [ebp-34h] ax +
mov cx [ebp-34h] +
mov word ptr [ebp+var_38+2] cx +
call sub_4046B0  +
mov word ptr [ebp+var_38] ax +
lea edx [ebp+var_38+2] +
push edx  +
lea eax [ebp+var_38] +
push eax  +
call sub_404690  +
add esp 8 +
movzx ecx al +
test ecx ecx +
jz loc_411D25  +
mov edx [ebp+var_20] +
or edx 4 +
mov [ebp+var_20] edx +
jmp loc_411D27  +
jmp loc_411CA8  +
push 0  +
push 0  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ebp+arg_0] +
add edx [ecx+4] +
mov ecx edx +
call ds:?width@ios_base@std@@QAE_J_J@Z  +
jmp loc_411D5D  +
push 1  +
push 4  +
mov eax [ebp+8] +
mov ecx [eax] +
mov edx [ebp+8] +
add edx [ecx+4] +
mov ecx edx +
call ds:?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z  +
mov eax offset loc_411D66 +
retn   +
mov [ebp+var_4] 0 +
jmp loc_411D6D  +
mov dword ptr [ebp-4] 0 +
push 0  +
mov eax [ebp+var_20] +
push eax  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov ecx [ebp+arg_0] +
add ecx [edx+4] +
call ds:?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z  +
mov eax [ebp+arg_0] +
mov [ebp+var_50] eax +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_1C] +
call sub_40F680  +
mov eax [ebp+var_50] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+arg_4] +
call sub_4171C0  +
push eax  +
call sub_403F30  +
add esp 4 +
push eax  +
mov ecx [ebp+arg_0] +
call sub_402120  +
mov ecx [ebp+var_4] +
or ecx 1 +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_422278  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_2C] 0 +
lea ecx [ebp+var_28] +
call sub_402230  +
mov [ebp+var_4] 0 +
mov ecx [ebp+arg_4] +
call sub_402540  +
mov esi eax +
mov eax [ebp+arg_8] +
push eax  +
call sub_401920  +
add esp 4 +
add esi eax +
push esi  +
lea ecx [ebp+var_28] +
call sub_408C10  +
mov ecx [ebp+arg_4] +
push ecx  +
lea ecx [ebp+var_28] +
call sub_412440  +
mov edx [ebp+arg_8] +
push edx  +
lea ecx [ebp+var_28] +
call sub_412460  +
lea eax [ebp+var_28] +
push eax  +
mov ecx [ebp+arg_0] +
call sub_402120  +
mov ecx [ebp+var_2C] +
or ecx 1 +
mov [ebp+var_2C] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_28] +
call sub_4020E0  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 30h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_30] 0 +
lea eax [ebp+var_1C] +
push eax  +
call sub_412040  +
add esp 4 +
mov [ebp+var_2C] eax +
mov ecx [ebp+var_2C] +
mov [ebp+var_20] ecx +
mov edx [ebp+arg_4] +
mov [ebp+var_28] edx +
cmp [ebp+arg_4] 0 +
jge loc_411F1E  +
xor eax eax +
sub eax [ebp+var_28] +
push eax  +
mov ecx [ebp+var_20] +
push ecx  +
call sub_411F70  +
add esp 8 +
mov [ebp+var_20] eax +
mov edx [ebp+var_20] +
sub edx 1 +
mov [ebp+var_20] edx +
mov eax [ebp+var_20] +
mov byte ptr [eax] 2Dh +
jmp loc_411F31  +
mov ecx [ebp+var_28] +
push ecx  +
mov edx [ebp+var_20] +
push edx  +
call sub_411F70  +
add esp 8 +
mov [ebp+var_20] eax +
lea ecx [ebp-21h] +
call sub_401760  +
push eax  +
mov eax [ebp+var_2C] +
push eax  +
mov ecx [ebp+var_20] +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_4116F0  +
mov edx [ebp+var_30] +
or edx 1 +
mov [ebp+var_30] edx +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
xor eax eax +
jz loc_411FE6  +
cmp [ebp+arg_4] 0FFFFFFFFh +
jbe loc_411FE6  +
mov eax [ebp+arg_4] +
xor edx edx +
mov ecx 3B9ACA00h +
div  ecx +
mov [ebp+var_C] edx +
mov eax [ebp+arg_4] +
xor edx edx +
mov ecx 3B9ACA00h +
div  ecx +
mov [ebp+arg_4] eax +
mov [ebp+var_8] 0 +
jmp loc_411FB0  +
mov edx [ebp+var_8] +
add edx 1 +
mov [ebp+var_8] edx +
cmp [ebp+var_8] 9 +
jz loc_411FE4  +
mov eax [ebp+arg_0] +
sub eax 1 +
mov [ebp+arg_0] eax +
mov eax [ebp+var_C] +
xor edx edx +
mov ecx 0Ah +
div  ecx +
add edx 30h +
mov eax [ebp+arg_0] +
mov [eax] dl +
mov eax [ebp+var_C] +
xor edx edx +
mov ecx 0Ah +
div  ecx +
mov [ebp+var_C] eax +
jmp loc_411FA7  +
jmp loc_411F7A  +
mov edx [ebp+arg_4] +
mov [ebp+var_4] edx +
mov eax [ebp+arg_0] +
sub eax 1 +
mov [ebp+arg_0] eax +
mov eax [ebp+var_4] +
xor edx edx +
mov ecx 0Ah +
div  ecx +
add edx 30h +
mov eax [ebp+arg_0] +
mov [eax] dl +
mov eax [ebp+var_4] +
xor edx edx +
mov ecx 0Ah +
div  ecx +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_411FEC  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn   +
***
mov ebp esp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
add eax 15h +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421588  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
call sub_40F5A0  +
push eax  +
mov ecx [ebp+var_10] +
call loc_40B9E0  +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_10] +
call sub_4127B0  +
movzx ecx al +
test ecx ecx +
jnz loc_4120AA  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_10] +
call sub_412350  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4215E4  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov [ebp+var_14] 0 +
cmp [ebp+arg_C] 0 +
jz loc_41212A  +
mov eax [ebp+var_10] +
mov dword ptr [eax] offset unk_428204 +
mov ecx [ebp+var_10] +
add ecx 68h +
call ds:??0?$basic_ios@_WU?$char_traits@_W@std@@@std@@IAE@XZ  +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_14] +
or ecx 1 +
mov [ebp+var_14] ecx +
push 0  +
push 0  +
mov edx [ebp+var_10] +
add edx 4 +
push edx  +
mov ecx [ebp+var_10] +
call ds:??0?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAE@PAV?$basic_streambuf@_WU?$char_traits@_W@std@@@1@_N@Z  +
mov [ebp+var_4] 1 +
mov eax [ebp+var_10] +
mov ecx [eax] +
mov edx [ecx+4] +
mov eax [ebp+var_10] +
mov dword ptr [eax+edx] offset off_424C90 +
mov ecx [ebp+var_10] +
mov edx [ecx] +
mov eax [edx+4] +
sub eax 68h +
mov ecx [ebp+var_10] +
mov edx [ecx] +
mov ecx [edx+4] +
mov edx [ebp+var_10] +
mov [edx+ecx-4] eax +
push 0  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_40FAD0  +
mov byte ptr [ebp+var_4] 2 +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+arg_4] +
or ecx 2 +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_10] +
add ecx 4 +
call sub_40F9C0  +
test eax eax +
jnz loc_4121B7  +
push 0  +
push 2  +
mov eax [ebp+var_10] +
mov ecx [eax] +
mov edx [ebp+var_10] +
add edx [ecx+4] +
mov ecx edx +
call ds:?setstate@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAEXH_N@Z  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
add ecx 1CCh +
call sub_402310  +
mov ecx [ebp+var_4] +
add ecx 1C8h +
call sub_402310  +
mov ecx [ebp+var_4] +
add ecx 1C4h +
call sub_402310  +
mov ecx [ebp+var_4] +
add ecx 1C0h +
call sub_402310  +
mov ecx [ebp+var_4] +
add ecx 1BCh +
call sub_402310  +
mov ecx [ebp+var_4] +
add ecx 1B8h +
call sub_402310  +
mov ecx [ebp+var_4] +
add ecx 1A0h +
call sub_4020E0  +
mov ecx [ebp+var_4] +
add ecx 188h +
call sub_4020E0  +
mov ecx [ebp+var_4] +
add ecx 170h +
call sub_4020E0  +
mov ecx [ebp+var_4] +
add ecx 158h +
call sub_4020E0  +
mov ecx [ebp+var_4] +
add ecx 140h +
call sub_4020E0  +
mov ecx [ebp+var_4] +
add ecx 128h +
call sub_4020E0  +
mov ecx [ebp+var_4] +
add ecx 110h +
call sub_4020E0  +
mov ecx [ebp+var_4] +
add ecx 0F8h +
call sub_4020E0  +
mov ecx [ebp+var_4] +
add ecx 0E0h +
call sub_4020E0  +
mov ecx [ebp+var_4] +
add ecx 0C8h +
call sub_4020E0  +
mov ecx [ebp+var_4] +
add ecx 0B0h +
call sub_4020E0  +
mov ecx [ebp+var_4] +
add ecx 98h +
call sub_4020E0  +
mov ecx [ebp+var_4] +
add ecx 80h +
call sub_4020E0  +
mov ecx [ebp+var_4] +
add ecx 68h +
call sub_4020E0  +
mov ecx [ebp+var_4] +
add ecx 50h +
call sub_4020E0  +
mov ecx [ebp+var_4] +
add ecx 38h +
call sub_4020E0  +
mov ecx [ebp+var_4] +
add ecx 20h +
call sub_4020E0  +
mov ecx [ebp+var_4] +
add ecx 8 +
call sub_4020E0  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_415D60  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_412330  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_421608  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_18] 0 +
push 4  +
lea ecx [ebp+var_14] +
call sub_401C10  +
mov ecx [ebp+arg_4] +
call sub_407DD0  +
push eax  +
lea ecx [ebp+var_14] +
call loc_40B9E0  +
mov [ebp+var_4] 0 +
mov ecx [ebp+arg_8] +
call sub_4035F0  +
push eax  +
mov ecx [ebp+arg_8] +
call sub_4024B0  +
push eax  +
mov ecx [ebp+arg_4] +
call sub_4035F0  +
push eax  +
mov ecx [ebp+arg_4] +
call sub_4024B0  +
push eax  +
lea eax [ebp+var_14] +
push eax  +
call loc_40F5F0  +
add esp 14h +
lea ecx [ebp+var_14] +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_402490  +
mov edx [ebp+var_18] +
or edx 1 +
mov [ebp+var_18] edx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_402310  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_406420  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_4171C0  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_41249E  +
cmp [ebp+var_4] 1 +
jz loc_4124AD  +
cmp [ebp+var_4] 2 +
jz loc_4124BC  +
jmp loc_4124C9  +
push offset aMini  +
mov ecx [ebp+arg_4] +
call sub_406270  +
jmp loc_4124C9  +
push offset aFull  +
mov ecx [ebp+arg_4] +
call sub_406270  +
jmp loc_4124C9  +
push offset aTriage  +
mov ecx [ebp+arg_4] +
call sub_406270  +
push offset asc_4238DC  +
mov ecx [ebp+arg_4] +
call sub_406270  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_2CC] +
push eax  +
mov ecx dword_4308C8 +
xor edx edx +
push edx  +
push ecx  +
push offset aEax  +
call sub_415CA0  +
add esp 10h +
mov eax [ebp+arg_2CC] +
push eax  +
mov ecx dword_4308BC +
xor edx edx +
push edx  +
push ecx  +
push offset aEbx  +
call sub_415CA0  +
add esp 10h +
mov eax [ebp+arg_2CC] +
push eax  +
mov ecx dword_4308C4 +
xor edx edx +
push edx  +
push ecx  +
push offset aEcx  +
call sub_415CA0  +
add esp 10h +
mov eax [ebp+arg_2CC] +
push eax  +
mov ecx dword_4308C0 +
xor edx edx +
push edx  +
push ecx  +
push offset aEdx  +
call sub_415CA0  +
add esp 10h +
mov eax [ebp+arg_2CC] +
push eax  +
mov ecx dword_4308B8 +
xor edx edx +
push edx  +
push ecx  +
push offset aEsi  +
call sub_415CA0  +
add esp 10h +
mov eax [ebp+arg_2CC] +
push eax  +
mov ecx dword_4308B4 +
xor edx edx +
push edx  +
push ecx  +
push offset aEdi  +
call sub_415CA0  +
add esp 10h +
mov eax [ebp+arg_2CC] +
push eax  +
mov ecx dword_4308DC +
xor edx edx +
push edx  +
push ecx  +
push offset aEsp  +
call sub_415CA0  +
add esp 10h +
mov eax [ebp+arg_2CC] +
push eax  +
mov ecx dword_4308CC +
xor edx edx +
push edx  +
push ecx  +
push offset aEbp  +
call sub_415CA0  +
add esp 10h +
mov eax [ebp+arg_2CC] +
push eax  +
mov ecx dword_4308D0 +
xor edx edx +
push edx  +
push ecx  +
push offset aEip  +
call sub_415CA0  +
add esp 10h +
mov eax [ebp+arg_2CC] +
push eax  +
mov ecx dword_4308D8 +
xor edx edx +
push edx  +
push ecx  +
push offset aEfl  +
call sub_415CA0  +
add esp 10h +
pop ebp  +
retn   +
***
sub esp 20h +
cmp [ebp+arg_0] 0 +
jz loc_412632  +
cmp [ebp+arg_C] 0 +
jnz loc_412639  +
xor eax eax +
jmp loc_41279E  +
mov eax [ebp+arg_0] +
add eax [ebp+arg_4] +
mov [ebp+var_1C] eax +
mov [ebp+var_10] 0 +
cmp [ebp+arg_8] 0 +
jnz loc_412658  +
mov [ebp+var_18] 1 +
jmp loc_41265F  +
mov [ebp+var_18] 0 +
mov ecx [ebp+var_18] +
mov [ebp+var_14] ecx +
mov edx [ebp+arg_0] +
cmp edx [ebp+var_1C] +
jnb loc_412787  +
mov eax [ebp+arg_0] +
movsx ecx byte ptr [eax] +
test ecx ecx +
jz loc_412787  +
mov [ebp+var_8] 0 +
mov [ebp+var_C] 0 +
mov [ebp+var_4] 0 +
jmp loc_41269F  +
mov edx [ebp+var_4] +
add edx 1 +
mov [ebp+var_4] edx +
cmp [ebp+var_4] 4 +
jge loc_4126F8  +
mov eax [ebp+arg_0] +
cmp eax [ebp+var_1C] +
jb loc_4126AF  +
jmp loc_4126F8  +
mov ecx [ebp+arg_0] +
movsx edx byte ptr [ecx] +
push edx  +
call sub_412850  +
add esp 4 +
mov [ebp+var_20] eax +
mov eax [ebp+arg_0] +
add eax 1 +
mov [ebp+arg_0] eax +
cmp [ebp+var_20] 0FFFFFFFFh +
jnz loc_4126DB  +
mov ecx [ebp+var_4] +
sub ecx 1 +
mov [ebp+var_4] ecx +
jmp loc_412696  +
mov edx [ebp+var_8] +
shl edx 6 +
mov [ebp+var_8] edx +
mov eax [ebp+var_8] +
or eax [ebp+var_20] +
mov [ebp+var_8] eax +
mov ecx [ebp+var_C] +
add ecx 6 +
mov [ebp+var_C] ecx +
jmp loc_412696  +
cmp [ebp+var_14] 0 +
jnz loc_41271B  +
mov eax [ebp+var_C] +
cdq   +
and edx 7 +
add eax edx +
sar eax 3 +
add eax [ebp+var_10] +
mov edx [ebp+arg_C] +
cmp eax [edx] +
jle loc_41271B  +
mov [ebp+var_14] 1 +
mov ecx 18h +
sub ecx [ebp+var_C] +
mov eax [ebp+var_8] +
shl eax cl +
mov [ebp+var_8] eax +
mov [ebp+var_4] 0 +
jmp loc_41273D  +
mov ecx [ebp+var_4] +
add ecx 1 +
mov [ebp+var_4] ecx +
mov eax [ebp+var_C] +
cdq   +
and edx 7 +
add eax edx +
sar eax 3 +
cmp [ebp+var_4] eax +
jge loc_412782  +
cmp [ebp+var_14] 0 +
jnz loc_41276E  +
mov edx [ebp+var_8] +
and edx 0FF0000h +
shr edx 10h +
mov eax [ebp+arg_8] +
mov [eax] dl +
mov ecx [ebp+arg_8] +
add ecx 1 +
mov [ebp+arg_8] ecx +
mov edx [ebp+var_8] +
shl edx 8 +
mov [ebp+var_8] edx +
mov eax [ebp+var_10] +
add eax 1 +
mov [ebp+var_10] eax +
jmp loc_412734  +
jmp loc_412665  +
mov ecx [ebp+arg_C] +
mov edx [ebp+var_10] +
mov [ecx] edx +
cmp [ebp+var_14] 0 +
jz loc_412799  +
xor eax eax +
jmp loc_41279E  +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov [ebp+var_C] ecx +
mov [ebp+var_1] 0 +
cmp [ebp+arg_0] 0 +
jz loc_4127EC  +
mov eax [ebp+arg_0] +
shr eax 10h +
test eax eax +
jnz loc_4127EC  +
mov ecx [ebp+arg_0] +
and ecx 0FFFFh +
movzx edx cx +
mov [ebp+var_8] edx +
mov eax [ebp+var_8] +
push eax  +
mov ecx [ebp+var_C] +
call sub_415A30  +
mov [ebp+var_1] 1 +
mov al [ebp+var_1] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0  +
push 0  +
mov eax [ebp+cchMultiByte] +
push eax  +
mov ecx [ebp+lpMultiByteStr] +
push ecx  +
mov edx [ebp+cchWideChar] +
push edx  +
mov eax [ebp+lpWideCharStr] +
push eax  +
push 0  +
call sub_4011F0  +
push eax  +
call ds:WideCharToMultiByte  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call sub_417510  +
add esp 10h +
pop ebp  +
retn   +
***
cmp [ebp+arg_0] 41h +
jb loc_412867  +
cmp [ebp+arg_0] 5Ah +
ja loc_412867  +
mov eax [ebp+arg_0] +
sub eax 41h +
jmp loc_4128AC  +
cmp [ebp+arg_0] 61h +
jb loc_41287B  +
cmp [ebp+arg_0] 7Ah +
ja loc_41287B  +
mov eax [ebp+arg_0] +
sub eax 47h +
jmp loc_4128AC  +
cmp [ebp+arg_0] 30h +
jb loc_41288F  +
cmp [ebp+arg_0] 39h +
ja loc_41288F  +
mov eax [ebp+arg_0] +
add eax 4 +
jmp loc_4128AC  +
cmp [ebp+arg_0] 2Bh +
jnz loc_41289C  +
mov eax 3Eh +
jmp loc_4128AC  +
cmp [ebp+arg_0] 2Fh +
jnz loc_4128A9  +
mov eax 3Fh +
jmp loc_4128AC  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
***
push offset a?xmlVersion1_0  +
mov eax [ebp+arg_0] +
push eax  +
call sub_4083D0  +
add esp 8 +
pop ebp  +
retn   +
***
sub esp 10h +
mov [ebp+var_8] ecx +
mov ecx [ebp+var_8] +
call sub_40FFE0  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov ecx [eax] +
mov [ebp+var_C] ecx +
mov edx [ebp+var_4] +
cmp dword ptr [edx+4] 0 +
jnz loc_4128F7  +
jmp loc_412936  +
mov ecx [ebp+var_4] +
call sub_401500  +
movzx eax al +
test eax eax +
jz loc_412912  +
push 0  +
mov ecx [ebp+var_8] +
call loc_40DBD0  +
jmp loc_412936  +
mov ecx [ebp+var_4] +
call sub_401510  +
mov ecx [ebp+var_C] +
mov edx [ecx] +
mov ecx [ebp+var_C] +
mov eax [edx+0Ch] +
call eax  +
mov [ebp+var_10] eax +
mov ecx [ebp+var_10] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_40FFF0  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset aGpu  +
mov ecx [ebp+arg_0] +
call sub_402250  +
pop ebp  +
retn   +
***
push 0  +
mov eax [ebp+arg_0] +
push eax  +
call sub_4013B0  +
add esp 8 +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421962  +
mov eax large fs:0 +
push eax  +
sub esp 0D54h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
mov byte_430BF0 0 +
push offset pszPath  +
call ds:PathFileExistsW  +
test eax eax +
jz loc_4129D1  +
mov byte_430BF0 1 +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_412A0F  +
push 40h  +
push 2  +
push offset aCWindowsclie_0  +
mov ecx offset unk_430B40 +
call sub_40DCE0  +
push offset sub_410480  +
push offset aInsideGenerate  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset a2_5_0  +
lea ecx [ebp+var_468] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 1 +
push offset a2_5_0_0  +
lea ecx [ebp+var_480] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+arg_E0] +
call sub_4020B0  +
mov [ebp+var_650] eax +
lea ecx [ebp+arg_F8] +
call sub_4020B0  +
mov [ebp+var_84C] eax +
lea ecx [ebp+arg_C8] +
call sub_4020B0  +
mov [ebp+var_63C] eax +
mov ecx [ebp+arg_1D4] +
mov [ebp+dwProcessId] ecx +
mov edx [ebp+arg_1D0] +
mov [ebp+var_618] edx +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_412B1D  +
push offset sub_410480  +
mov ecx [ebp+var_63C] +
push ecx  +
push offset aStackTrace  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
push eax  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset sub_410480  +
mov edx [ebp+dwProcessId] +
push edx  +
push offset aProcessId  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@K@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset sub_410480  +
mov eax [ebp+var_618] +
push eax  +
push offset aThreadId  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@K@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov [ebp+hObject] 0 +
mov [ebp+var_610] 0 +
mov [ebp+var_918] 0 +
mov ecx [ebp+dwProcessId] +
push ecx  +
call sub_4172B0  +
add esp 4 +
movzx edx al +
test edx edx +
jnz loc_412BDB  +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_412B99  +
push offset sub_410480  +
mov ecx [ebp+dwProcessId] +
push ecx  +
push offset aProcessNotActi  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@K@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov ecx offset unk_430B40 +
call sub_40DC00  +
mov [ebp+var_83C] 3 +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_480] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_468] +
call sub_4020E0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_4121E0  +
mov eax [ebp+var_83C] +
jmp loc_414DF6  +
mov edx [ebp+var_618] +
push edx  +
call sub_417330  +
add esp 4 +
movzx eax al +
test eax eax +
jnz loc_412C7B  +
movzx ecx byte_430BF0 +
cmp ecx 1 +
jnz loc_412C39  +
push offset sub_410480  +
mov edx [ebp+var_618] +
push edx  +
push offset aThreadNotActiv  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@K@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov ecx offset unk_430B40 +
call sub_40DC00  +
mov [ebp+var_840] 4 +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_480] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_468] +
call sub_4020E0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_4121E0  +
mov eax [ebp+var_840] +
jmp loc_414DF6  +
mov eax [ebp+dwProcessId] +
push eax  +
push 0  +
push 410h  +
call ds:OpenProcess  +
mov [ebp+hObject] eax +
cmp [ebp+hObject] 0 +
jnz loc_412D15  +
movzx ecx byte_430BF0 +
cmp ecx 1 +
jnz loc_412CD3  +
push offset sub_410480  +
push offset aUnableToQueryP  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov ecx offset unk_430B40 +
call sub_40DC00  +
mov [ebp+var_844] 3 +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_480] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_468] +
call sub_4020E0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_4121E0  +
mov eax [ebp+var_844] +
jmp loc_414DF6  +
mov edx [ebp+var_618] +
push edx  +
push 0  +
push 1FFFFFh  +
call ds:OpenThread  +
mov [ebp+var_610] eax +
cmp [ebp+var_610] 0 +
jnz loc_412DC0  +
mov eax [ebp+hObject] +
push eax  +
call ds:CloseHandle  +
movzx ecx byte_430BF0 +
cmp ecx 1 +
jnz loc_412D7E  +
push offset sub_410480  +
push offset aUnableToQueryT  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov ecx offset unk_430B40 +
call sub_40DC00  +
mov [ebp+var_848] 4 +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_480] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_468] +
call sub_4020E0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_4121E0  +
mov eax [ebp+var_848] +
jmp loc_414DF6  +
push 4  +
lea ecx [ebp+var_418] +
call sub_401C10  +
mov edx [ebp+var_84C] +
push edx  +
lea ecx [ebp+var_418] +
call sub_412050  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_418] +
call sub_415920  +
push eax  +
call sub_403F30  +
add esp 4 +
mov [ebp+var_54C] eax +
mov eax [ebp+var_54C] +
push eax  +
call sub_41ECAD  +
add esp 4 +
mov [ebp+var_850] eax +
mov ecx [ebp+var_850] +
mov [ebp+var_604] ecx +
lea edx [ebp+var_54C] +
push edx  +
mov eax [ebp+var_604] +
push eax  +
lea ecx [ebp+var_418] +
call sub_415920  +
push eax  +
lea ecx [ebp+var_418] +
call sub_4024B0  +
push eax  +
call sub_412620  +
add esp 10h +
test eax eax +
jnz loc_412F3A  +
mov ecx [ebp+hObject] +
push ecx  +
call ds:CloseHandle  +
mov edx [ebp+var_610] +
push edx  +
call ds:CloseHandle  +
mov eax [ebp+var_604] +
mov [ebp+var_644] eax +
mov ecx [ebp+var_644] +
push ecx  +
call j_j_free  +
add esp 4 +
cmp [ebp+var_644] 0 +
jnz loc_412E9E  +
mov [ebp+var_854] 0 +
jmp loc_412EB4  +
mov [ebp+var_604] 8123h +
mov edx [ebp+var_604] +
mov [ebp+var_854] edx +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_412EE9  +
push offset sub_410480  +
push offset aUnableToDecode  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov ecx offset unk_430B40 +
call sub_40DC00  +
mov [ebp+var_858] 0Bh +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_418] +
call sub_402310  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_480] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_468] +
call sub_4020E0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_4121E0  +
mov eax [ebp+var_858] +
jmp loc_414DF6  +
mov ecx [ebp+var_54C] +
push ecx  +
call abs  +
add esp 4 +
cmp eax 2CCh +
jnb loc_412F67  +
mov edx [ebp+var_54C] +
push edx  +
call abs  +
add esp 4 +
mov [ebp+var_648] eax +
jmp loc_412F71  +
mov [ebp+var_648] 2CCh +
mov eax [ebp+var_648] +
push eax  +
mov ecx [ebp+var_604] +
push ecx  +
push 2CCh  +
push offset unk_430818  +
call sub_417400  +
add esp 10h +
mov edx [ebp+var_604] +
mov [ebp+var_620] edx +
mov eax [ebp+var_620] +
push eax  +
call j_j_free  +
add esp 4 +
cmp [ebp+var_620] 0 +
jnz loc_412FC1  +
mov [ebp+var_64C] 0 +
jmp loc_412FD7  +
mov [ebp+var_604] 8123h +
mov ecx [ebp+var_604] +
mov [ebp+var_64C] ecx +
push 4  +
lea ecx [ebp+var_420] +
call sub_401C10  +
mov edx [ebp+var_650] +
push edx  +
lea ecx [ebp+var_420] +
call sub_412050  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_420] +
call sub_415920  +
push eax  +
call sub_403F30  +
add esp 4 +
mov [ebp+var_550] eax +
mov eax [ebp+var_550] +
push eax  +
call sub_41ECAD  +
add esp 4 +
mov [ebp+var_654] eax +
mov ecx [ebp+var_654] +
mov [ebp+var_60C] ecx +
lea edx [ebp+var_550] +
push edx  +
mov eax [ebp+var_60C] +
push eax  +
lea ecx [ebp+var_420] +
call sub_415920  +
push eax  +
lea ecx [ebp+var_420] +
call sub_4024B0  +
push eax  +
call sub_412620  +
add esp 10h +
test eax eax +
jnz loc_413160  +
mov ecx [ebp+hObject] +
push ecx  +
call ds:CloseHandle  +
mov edx [ebp+var_610] +
push edx  +
call ds:CloseHandle  +
mov eax [ebp+var_60C] +
mov [ebp+var_624] eax +
mov ecx [ebp+var_624] +
push ecx  +
call j_j_free  +
add esp 4 +
cmp [ebp+var_624] 0 +
jnz loc_4130B5  +
mov [ebp+var_658] 0 +
jmp loc_4130CB  +
mov [ebp+var_60C] 8123h +
mov edx [ebp+var_60C] +
mov [ebp+var_658] edx +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_413100  +
push offset sub_410480  +
push offset aUnableToDeco_0  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov ecx offset unk_430B40 +
call sub_40DC00  +
mov [ebp+var_65C] 0Bh +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_420] +
call sub_402310  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_418] +
call sub_402310  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_480] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_468] +
call sub_4020E0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_4121E0  +
mov eax [ebp+var_65C] +
jmp loc_414DF6  +
mov ecx [ebp+var_550] +
push ecx  +
call abs  +
add esp 4 +
cmp eax 50h +
jnb loc_41318B  +
mov edx [ebp+var_550] +
push edx  +
call abs  +
add esp 4 +
mov [ebp+var_628] eax +
jmp loc_413195  +
mov [ebp+var_628] 50h +
mov eax [ebp+var_628] +
push eax  +
mov ecx [ebp+var_60C] +
push ecx  +
push 50h  +
push offset unk_430AE8  +
call sub_417400  +
add esp 10h +
mov edx [ebp+var_60C] +
mov [ebp+var_62C] edx +
mov eax [ebp+var_62C] +
push eax  +
call j_j_free  +
add esp 4 +
cmp [ebp+var_62C] 0 +
jnz loc_4131E2  +
mov [ebp+var_660] 0 +
jmp loc_4131F8  +
mov [ebp+var_60C] 8123h +
mov ecx [ebp+var_60C] +
mov [ebp+var_660] ecx +
mov dword_430B3C offset unk_430818 +
mov dword_430B38 offset unk_430AE8 +
mov [ebp+var_640] offset dword_430B38 +
movzx edx byte_430BF0 +
cmp edx 1 +
jnz loc_413241  +
push offset sub_410480  +
push offset aFetchedContext  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push 8  +
lea ecx [ebp+var_450] +
call sub_41CE00  +
push 34h  +
call sub_41EC6C  +
add esp 4 +
mov [ebp+var_630] eax +
mov byte ptr [ebp+var_4] 5 +
cmp [ebp+var_630] 0 +
jz loc_413280  +
push 0  +
mov ecx [ebp+var_630] +
call sub_40DA00  +
mov [ebp+var_634] eax +
jmp loc_41328A  +
mov [ebp+var_634] 0 +
mov eax [ebp+var_634] +
mov [ebp+var_664] eax +
mov byte ptr [ebp+var_4] 4 +
mov ecx [ebp+var_664] +
push ecx  +
lea edx [ebp+var_97C] +
push edx  +
call ds:?empty@locale@std@@SA?AV12@XZ  +
add esp 4 +
mov [ebp+var_668] eax +
mov eax [ebp+var_668] +
mov [ebp+var_66C] eax +
mov byte ptr [ebp+var_4] 6 +
mov ecx [ebp+var_66C] +
push ecx  +
lea ecx [ebp+var_450] +
call sub_410150  +
mov byte ptr [ebp+var_4] 8 +
lea ecx [ebp+var_97C] +
call sub_4019D0  +
movzx edx byte_430BF0 +
cmp edx 1 +
jnz loc_413313  +
push offset sub_410480  +
push offset aGoingToDetectL  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push 4  +
lea ecx [ebp+var_41C] +
call sub_401C10  +
lea eax [ebp+var_41C] +
push eax  +
call loc_401A20  +
add esp 4 +
mov byte ptr [ebp+var_4] 9 +
lea ecx [ebp+var_41C] +
call sub_40B9D0  +
movzx ecx al +
test ecx ecx +
jz loc_413416  +
mov edx [ebp+hObject] +
push edx  +
call ds:CloseHandle  +
mov eax [ebp+var_610] +
push eax  +
call ds:CloseHandle  +
movzx ecx byte_430BF0 +
cmp ecx 1 +
jnz loc_413398  +
push offset sub_410480  +
push offset aUnableToFindLo  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov ecx offset unk_430B40 +
call sub_40DC00  +
mov [ebp+var_670] 5 +
mov byte ptr [ebp+var_4] 8 +
lea ecx [ebp+var_41C] +
call sub_402310  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_450] +
call sub_4019D0  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_420] +
call sub_402310  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_418] +
call sub_402310  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_480] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_468] +
call sub_4020E0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_4121E0  +
mov eax [ebp+var_670] +
jmp loc_414DF6  +
movzx edx byte_430BF0 +
cmp edx 1 +
jnz loc_413456  +
push offset sub_410480  +
lea ecx [ebp+arg_1C0] +
call sub_4024B0  +
push eax  +
push offset aLogDirectoryDe  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411780  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push 4  +
lea ecx [ebp+var_448] +
call sub_401C10  +
push offset a_solurl  +
lea ecx [ebp+var_638] +
call sub_402330  +
mov byte ptr [ebp+var_4] 0Ah +
lea eax [ebp+var_638] +
push eax  +
lea ecx [ebp+arg_1C0] +
push ecx  +
push offset asc_423CFC  +
lea edx [ebp+var_41C] +
push edx  +
lea eax [ebp+var_688] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_674] eax +
mov ecx [ebp+var_674] +
mov [ebp+var_678] ecx +
mov byte ptr [ebp+var_4] 0Bh +
mov edx [ebp+var_678] +
push edx  +
lea eax [ebp+var_684] +
push eax  +
call sub_412370  +
add esp 0Ch +
mov [ebp+var_67C] eax +
mov ecx [ebp+var_67C] +
mov [ebp+var_680] ecx +
mov byte ptr [ebp+var_4] 0Ch +
mov edx [ebp+var_680] +
push edx  +
lea eax [ebp+var_448] +
push eax  +
call sub_412370  +
add esp 0Ch +
mov byte ptr [ebp+var_4] 0Eh +
lea ecx [ebp+var_684] +
call sub_402310  +
mov byte ptr [ebp+var_4] 0Fh +
lea ecx [ebp+var_688] +
call sub_402310  +
mov byte ptr [ebp+var_4] 10h +
lea ecx [ebp+var_638] +
call sub_402310  +
push 4  +
lea ecx [ebp+var_444] +
call sub_401C10  +
lea ecx [ebp+var_448] +
push ecx  +
lea ecx [ebp+var_444] +
call sub_402490  +
mov byte ptr [ebp+var_4] 11h +
movzx edx byte_430BF0 +
cmp edx 1 +
jnz loc_413588  +
push offset sub_410480  +
lea ecx [ebp+var_444] +
call sub_4024B0  +
push eax  +
push offset aFilenameIs  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411780  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push 0B0h  +
lea ecx [ebp+var_600] +
call sub_401C10  +
push 1  +
push 40h  +
push 0Ah  +
lea ecx [ebp+var_444] +
call sub_4024B0  +
push eax  +
lea ecx [ebp+var_600] +
call sub_4120D0  +
mov byte ptr [ebp+var_4] 12h +
lea eax [ebp+var_450] +
push eax  +
lea ecx [ebp+var_984] +
push ecx  +
mov edx [ebp+var_600] +
mov eax [edx+4] +
lea ecx [ebp+eax+var_600] +
call ds:?imbue@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAE?AVlocale@2@ABV32@@Z  +
lea ecx [ebp+var_984] +
call sub_4019D0  +
movzx ecx byte_430BF0 +
cmp ecx 1 +
jnz loc_413613  +
push offset sub_410480  +
push offset aGoingToInsertD  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
lea edx [ebp+arg_38] +
push edx  +
push ecx  +
mov ecx esp +
mov [ebp+var_974] esp +
push offset asc_423D2C  +
call sub_4023D0  +
mov [ebp+var_988] eax +
lea eax [ebp+var_9D0] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_68C] eax +
mov ecx [ebp+var_68C] +
mov [ebp+var_690] ecx +
mov byte ptr [ebp+var_4] 13h +
mov edx [ebp+var_690] +
push edx  +
lea eax [ebp+arg_20] +
push eax  +
push ecx  +
mov ecx esp +
mov [ebp+var_98C] esp +
push offset asc_423D30  +
call sub_4023D0  +
mov [ebp+var_990] eax +
lea ecx [ebp+var_9B8] +
push ecx  +
call sub_404940  +
add esp 8 +
mov [ebp+var_694] eax +
mov edx [ebp+var_694] +
mov [ebp+var_698] edx +
mov byte ptr [ebp+var_4] 14h +
mov eax [ebp+var_698] +
push eax  +
lea ecx [ebp+arg_8] +
push ecx  +
lea edx [ebp+var_D48] +
push edx  +
call sub_408460  +
add esp 0Ch +
mov [ebp+var_69C] eax +
mov eax [ebp+var_69C] +
mov [ebp+var_6A0] eax +
mov byte ptr [ebp+var_4] 15h +
mov ecx [ebp+var_6A0] +
push ecx  +
lea edx [ebp+var_D30] +
push edx  +
call sub_408490  +
add esp 0Ch +
mov [ebp+var_6A4] eax +
mov eax [ebp+var_6A4] +
mov [ebp+var_6A8] eax +
mov byte ptr [ebp+var_4] 16h +
mov ecx [ebp+var_6A8] +
push ecx  +
lea edx [ebp+var_A00] +
push edx  +
call sub_4084C0  +
add esp 0Ch +
mov [ebp+var_6AC] eax +
mov eax [ebp+var_6AC] +
mov [ebp+var_6B0] eax +
mov byte ptr [ebp+var_4] 17h +
mov ecx [ebp+var_6B0] +
push ecx  +
lea edx [ebp+cchWideChar] +
push edx  +
call sub_408490  +
add esp 0Ch +
mov [ebp+var_994] eax +
mov byte ptr [ebp+var_4] 19h +
lea ecx [ebp+var_A00] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 1Ah +
lea ecx [ebp+var_D30] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 1Bh +
lea ecx [ebp+var_D48] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 1Ch +
lea ecx [ebp+var_9B8] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 1Dh +
lea ecx [ebp+var_9D0] +
call sub_4020E0  +
lea eax [ebp+cchWideChar] +
push eax  +
call loc_404B20  +
add esp 4 +
movzx ecx byte_430BF0 +
cmp ecx 1 +
jnz loc_413812  +
push offset sub_410480  +
lea edx [ebp+cchWideChar] +
push edx  +
lea eax [ebp+var_9E8] +
push eax  +
call sub_404A60  +
add esp 8 +
mov [ebp+var_6B4] eax +
mov ecx [ebp+var_6B4] +
mov [ebp+var_6B8] ecx +
mov byte ptr [ebp+var_4] 1Eh +
mov edx [ebp+var_6B8] +
push edx  +
push offset aGoingToFetchDu  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411AC0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov byte ptr [ebp+var_4] 1Dh +
lea ecx [ebp+var_9E8] +
call sub_402040  +
sub esp 18h +
mov ecx esp +
mov [ebp+var_99C] esp +
lea eax [ebp+cchWideChar] +
push eax  +
call sub_406460  +
mov [ebp+var_9A0] eax +
call sub_401DB0  +
add esp 18h +
mov [ebp+var_6BC] eax +
mov ecx [ebp+var_6BC] +
mov [ebp+var_61C] ecx +
push 4  +
lea ecx [ebp+var_424] +
call sub_401C10  +
lea ecx [ebp+var_424] +
call loc_40A570  +
mov byte ptr [ebp+var_4] 1Fh +
cmp [ebp+var_61C] 1 +
jnz loc_41394B  +
push offset a_dmp_full  +
lea edx [ebp+arg_1C0] +
push edx  +
push offset asc_423D74  +
lea eax [ebp+var_41C] +
push eax  +
lea ecx [ebp+var_6E0] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_6C0] eax +
mov edx [ebp+var_6C0] +
mov [ebp+var_6C4] edx +
mov byte ptr [ebp+var_4] 20h +
mov eax [ebp+var_6C4] +
push eax  +
lea ecx [ebp+var_6DC] +
push ecx  +
call sub_412370  +
add esp 0Ch +
mov [ebp+var_6C8] eax +
mov edx [ebp+var_6C8] +
mov [ebp+var_6CC] edx +
mov byte ptr [ebp+var_4] 21h +
mov eax [ebp+var_6CC] +
push eax  +
lea ecx [ebp+var_6D8] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_6D0] eax +
mov edx [ebp+var_6D0] +
mov [ebp+var_6D4] edx +
mov byte ptr [ebp+var_4] 22h +
mov eax [ebp+var_6D4] +
push eax  +
lea ecx [ebp+var_424] +
call sub_4022A0  +
mov byte ptr [ebp+var_4] 21h +
lea ecx [ebp+var_6D8] +
call sub_402310  +
mov byte ptr [ebp+var_4] 20h +
lea ecx [ebp+var_6DC] +
call sub_402310  +
mov byte ptr [ebp+var_4] 1Fh +
lea ecx [ebp+var_6E0] +
call sub_402310  +
jmp loc_413A1F  +
push offset a_dmp  +
lea ecx [ebp+arg_1C0] +
push ecx  +
push offset asc_423D84  +
lea edx [ebp+var_41C] +
push edx  +
lea eax [ebp+var_704] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_6E4] eax +
mov ecx [ebp+var_6E4] +
mov [ebp+var_6E8] ecx +
mov byte ptr [ebp+var_4] 23h +
mov edx [ebp+var_6E8] +
push edx  +
lea eax [ebp+var_700] +
push eax  +
call sub_412370  +
add esp 0Ch +
mov [ebp+var_6EC] eax +
mov ecx [ebp+var_6EC] +
mov [ebp+var_6F0] ecx +
mov byte ptr [ebp+var_4] 24h +
mov edx [ebp+var_6F0] +
push edx  +
lea eax [ebp+var_6FC] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_6F4] eax +
mov ecx [ebp+var_6F4] +
mov [ebp+var_6F8] ecx +
mov byte ptr [ebp+var_4] 25h +
mov edx [ebp+var_6F8] +
push edx  +
lea ecx [ebp+var_424] +
call sub_4022A0  +
mov byte ptr [ebp+var_4] 24h +
lea ecx [ebp+var_6FC] +
call sub_402310  +
mov byte ptr [ebp+var_4] 23h +
lea ecx [ebp+var_700] +
call sub_402310  +
mov byte ptr [ebp+var_4] 1Fh +
lea ecx [ebp+var_704] +
call sub_402310  +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_413A59  +
push offset sub_410480  +
mov ecx [ebp+var_61C] +
push ecx  +
push offset aFetchedPrefere  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@H@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset unk_423512  +
lea ecx [ebp+var_43C] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 26h +
push 4  +
lea ecx [ebp+var_414] +
call sub_401C10  +
push offset unk_423DAC  +
lea ecx [ebp+var_414] +
call sub_4023D0  +
mov byte ptr [ebp+var_4] 27h +
lea edx [ebp+var_414] +
push edx  +
call sub_4128B0  +
add esp 4 +
push ecx  +
mov ecx esp +
mov [ebp+var_85C] esp +
lea eax [ebp+var_414] +
push eax  +
call sub_402490  +
mov [ebp+var_860] eax +
lea ecx [ebp+var_D60] +
push ecx  +
call sub_404940  +
add esp 8 +
mov [ebp+var_708] eax +
mov edx [ebp+var_708] +
mov [ebp+var_70C] edx +
mov byte ptr [ebp+var_4] 28h +
mov eax [ebp+var_70C] +
push eax  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_D60] +
call sub_4020E0  +
movzx ecx byte_430BF0 +
cmp ecx 1 +
jnz loc_413B29  +
push offset sub_410480  +
push offset aStartTag  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
lea edx [ebp+var_410] +
push edx  +
sub esp 18h +
mov ecx esp +
mov [ebp+var_864] esp +
lea eax [ebp+arg_B0] +
push eax  +
call sub_406460  +
mov [ebp+var_710] eax +
mov ecx [ebp+var_710] +
mov [ebp+var_868] ecx +
mov byte ptr [ebp+var_4] 29h +
sub esp 18h +
mov ecx esp +
mov [ebp+var_86C] esp +
lea edx [ebp+arg_98] +
push edx  +
call sub_406460  +
mov [ebp+var_714] eax +
mov eax [ebp+var_714] +
mov [ebp+var_870] eax +
mov byte ptr [ebp+var_4] 2Ah +
sub esp 18h +
mov ecx esp +
mov [ebp+var_874] esp +
lea edx [ebp+var_480] +
push edx  +
call sub_406460  +
mov [ebp+var_718] eax +
mov eax [ebp+var_718] +
mov [ebp+var_878] eax +
mov byte ptr [ebp+var_4] 2Bh +
sub esp 18h +
mov ecx esp +
mov [ebp+var_87C] esp +
lea edx [ebp+var_468] +
push edx  +
call sub_406460  +
mov [ebp+var_71C] eax +
mov eax [ebp+var_71C] +
mov [ebp+var_880] eax +
mov byte ptr [ebp+var_4] 2Ch +
sub esp 18h +
mov ecx esp +
mov [ebp+var_884] esp +
lea edx [ebp+arg_38] +
push edx  +
call sub_406460  +
mov [ebp+var_720] eax +
mov eax [ebp+var_720] +
mov [ebp+var_888] eax +
mov byte ptr [ebp+var_4] 2Dh +
sub esp 18h +
mov ecx esp +
mov [ebp+var_88C] esp +
lea edx [ebp+arg_20] +
push edx  +
call sub_406460  +
mov [ebp+var_724] eax +
mov eax [ebp+var_724] +
mov [ebp+var_890] eax +
mov byte ptr [ebp+var_4] 2Eh +
sub esp 18h +
mov ecx esp +
mov [ebp+var_894] esp +
lea edx [ebp+arg_8] +
push edx  +
call sub_406460  +
mov [ebp+var_898] eax +
mov byte ptr [ebp+var_4] 27h +
call sub_415F40  +
add esp 0ACh +
lea eax [ebp+var_410] +
push eax  +
lea ecx [ebp+var_43C] +
call sub_412460  +
lea ecx [ebp+var_410] +
push ecx  +
call sub_416E90  +
add esp 4 +
lea edx [ebp+var_410] +
push edx  +
lea ecx [ebp+var_43C] +
call sub_412460  +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_413CBF  +
push offset sub_410480  +
push offset aUsertag  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
lea ecx [ebp+var_410] +
push ecx  +
sub esp 18h +
mov esi esp +
mov [ebp+var_89C] esp +
push ecx  +
mov ecx esp +
mov [ebp+var_8A0] esp +
lea edx [ebp+arg_1C0] +
push edx  +
call sub_402490  +
mov [ebp+var_8A4] eax +
push esi  +
call sub_404940  +
add esp 8 +
mov [ebp+var_728] eax +
mov eax [ebp+var_728] +
mov [ebp+var_8A8] eax +
call sub_417070  +
add esp 1Ch +
lea ecx [ebp+var_410] +
push ecx  +
lea ecx [ebp+var_43C] +
call sub_412460  +
sub esp 18h +
mov ecx esp +
mov [ebp+var_8AC] esp +
lea edx [ebp+arg_50] +
push edx  +
call sub_406460  +
mov [ebp+var_8B0] eax +
lea eax [ebp+var_410] +
push eax  +
mov ecx [ebp+hObject] +
push ecx  +
call sub_416270  +
add esp 20h +
lea edx [ebp+var_410] +
push edx  +
lea ecx [ebp+var_43C] +
call sub_412460  +
lea ecx [ebp+var_414] +
call loc_403640  +
lea eax [ebp+var_414] +
push eax  +
call sub_4161D0  +
add esp 4 +
push ecx  +
mov ecx esp +
mov [ebp+var_8B4] esp +
lea edx [ebp+var_414] +
push edx  +
call sub_402490  +
mov [ebp+var_8B8] eax +
lea eax [ebp+var_A18] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_72C] eax +
mov ecx [ebp+var_72C] +
mov [ebp+var_730] ecx +
mov byte ptr [ebp+var_4] 2Fh +
mov edx [ebp+var_730] +
push edx  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_A18] +
call sub_4020E0  +
lea ecx [ebp+var_414] +
call loc_403640  +
lea eax [ebp+var_414] +
push eax  +
call loc_40AAA0  +
add esp 4 +
push ecx  +
mov ecx esp +
mov [ebp+var_8BC] esp +
lea edx [ebp+var_414] +
push edx  +
call sub_402490  +
mov [ebp+var_8C0] eax +
lea eax [ebp+var_A30] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_734] eax +
mov ecx [ebp+var_734] +
mov [ebp+var_738] ecx +
mov byte ptr [ebp+var_4] 30h +
mov edx [ebp+var_738] +
push edx  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_A30] +
call sub_4020E0  +
lea ecx [ebp+var_414] +
call loc_403640  +
lea eax [ebp+var_414] +
push eax  +
call sub_412940  +
add esp 4 +
push ecx  +
mov ecx esp +
mov [ebp+var_8C4] esp +
lea edx [ebp+var_414] +
push edx  +
call sub_402490  +
mov [ebp+var_8C8] eax +
lea eax [ebp+var_A48] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_73C] eax +
mov ecx [ebp+var_73C] +
mov [ebp+var_740] ecx +
mov byte ptr [ebp+var_4] 31h +
mov edx [ebp+var_740] +
push edx  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_A48] +
call sub_4020E0  +
lea ecx [ebp+var_414] +
call loc_403640  +
lea eax [ebp+var_414] +
push eax  +
mov ecx [ebp+var_640] +
push ecx  +
call sub_415E60  +
add esp 8 +
push ecx  +
mov ecx esp +
mov [ebp+var_8CC] esp +
lea edx [ebp+var_414] +
push edx  +
call sub_402490  +
mov [ebp+var_8D0] eax +
lea eax [ebp+var_A60] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_744] eax +
mov ecx [ebp+var_744] +
mov [ebp+var_748] ecx +
mov byte ptr [ebp+var_4] 32h +
mov edx [ebp+var_748] +
push edx  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_A60] +
call sub_4020E0  +
lea ecx [ebp+var_414] +
call loc_403640  +
lea eax [ebp+var_414] +
push eax  +
call sub_415E40  +
add esp 4 +
push ecx  +
mov ecx esp +
mov [ebp+var_8D4] esp +
lea edx [ebp+var_414] +
push edx  +
call sub_402490  +
mov [ebp+var_8D8] eax +
lea eax [ebp+var_A78] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_74C] eax +
mov ecx [ebp+var_74C] +
mov [ebp+var_750] ecx +
mov byte ptr [ebp+var_4] 33h +
mov edx [ebp+var_750] +
push edx  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_A78] +
call sub_4020E0  +
lea ecx [ebp+var_414] +
call loc_403640  +
lea eax [ebp+var_414] +
push eax  +
call sub_4161F0  +
add esp 4 +
push ecx  +
mov ecx esp +
mov [ebp+var_8DC] esp +
lea edx [ebp+var_414] +
push edx  +
call sub_402490  +
mov [ebp+var_8E0] eax +
lea eax [ebp+var_A90] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_754] eax +
mov ecx [ebp+var_754] +
mov [ebp+var_758] ecx +
mov byte ptr [ebp+var_4] 34h +
mov edx [ebp+var_758] +
push edx  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_A90] +
call sub_4020E0  +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_414077  +
push offset sub_410480  +
push offset aStacktrace  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov ecx [ebp+var_63C] +
push ecx  +
lea ecx [ebp+var_43C] +
call sub_412460  +
movzx edx byte_430BF0 +
cmp edx 1 +
jnz loc_4140B4  +
push offset sub_410480  +
push offset aThreadTag  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset asc_423DDC  +
push ecx  +
mov ecx esp +
mov [ebp+var_8E4] esp +
push offset aThread  +
call sub_4023D0  +
mov [ebp+var_8E8] eax +
lea eax [ebp+var_AC0] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_75C] eax +
mov ecx [ebp+var_75C] +
mov [ebp+var_760] ecx +
mov byte ptr [ebp+var_4] 35h +
mov edx [ebp+var_760] +
push edx  +
lea eax [ebp+var_AA8] +
push eax  +
call sub_411DC0  +
add esp 0Ch +
mov [ebp+var_764] eax +
mov ecx [ebp+var_764] +
mov [ebp+var_768] ecx +
mov byte ptr [ebp+var_4] 36h +
mov edx [ebp+var_768] +
push edx  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 35h +
lea ecx [ebp+var_AA8] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_AC0] +
call sub_4020E0  +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_41417E  +
push offset sub_410480  +
push offset aBacktraceEndTa  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset asc_423E08  +
push ecx  +
mov ecx esp +
mov [ebp+var_8EC] esp +
push offset aBacktrace  +
call sub_4023D0  +
mov [ebp+var_8F0] eax +
lea ecx [ebp+var_AF0] +
push ecx  +
call sub_404940  +
add esp 8 +
mov [ebp+var_76C] eax +
mov edx [ebp+var_76C] +
mov [ebp+var_770] edx +
mov byte ptr [ebp+var_4] 37h +
mov eax [ebp+var_770] +
push eax  +
lea ecx [ebp+var_AD8] +
push ecx  +
call sub_411DC0  +
add esp 0Ch +
mov [ebp+var_774] eax +
mov edx [ebp+var_774] +
mov [ebp+var_778] edx +
mov byte ptr [ebp+var_4] 38h +
mov eax [ebp+var_778] +
push eax  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 37h +
lea ecx [ebp+var_AD8] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_AF0] +
call sub_4020E0  +
movzx ecx byte_430BF0 +
cmp ecx 1 +
jnz loc_414248  +
push offset sub_410480  +
push offset aRegisterStartT  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset asc_423E3C  +
push ecx  +
mov ecx esp +
mov [ebp+var_8F4] esp +
push offset aRegisterset  +
call sub_4023D0  +
mov [ebp+var_8F8] eax +
lea edx [ebp+var_B20] +
push edx  +
call sub_404940  +
add esp 8 +
mov [ebp+var_77C] eax +
mov eax [ebp+var_77C] +
mov [ebp+var_780] eax +
mov byte ptr [ebp+var_4] 39h +
mov ecx [ebp+var_780] +
push ecx  +
lea edx [ebp+var_B08] +
push edx  +
call sub_411DC0  +
add esp 0Ch +
mov [ebp+var_784] eax +
mov eax [ebp+var_784] +
mov [ebp+var_788] eax +
mov byte ptr [ebp+var_4] 3Ah +
mov ecx [ebp+var_788] +
push ecx  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 39h +
lea ecx [ebp+var_B08] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_B20] +
call sub_4020E0  +
movzx edx byte_430BF0 +
cmp edx 1 +
jnz loc_414312  +
push offset sub_410480  +
push offset aAppendregister  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
lea ecx [ebp+var_414] +
call loc_403640  +
lea eax [ebp+var_414] +
push eax  +
sub esp 2CCh +
mov ecx 0B3h +
mov esi offset unk_430818 +
mov edi esp +
movs   +
call sub_4124E0  +
add esp 2D0h +
push ecx  +
mov ecx esp +
mov [ebp+var_8FC] esp +
lea edx [ebp+var_414] +
push edx  +
call sub_402490  +
mov [ebp+var_900] eax +
lea eax [ebp+var_B38] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_78C] eax +
mov ecx [ebp+var_78C] +
mov [ebp+var_790] ecx +
mov byte ptr [ebp+var_4] 3Bh +
mov edx [ebp+var_790] +
push edx  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_B38] +
call sub_4020E0  +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_4143CF  +
push offset sub_410480  +
push offset aAppendRegister  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset asc_423EB4  +
push ecx  +
mov ecx esp +
mov [ebp+var_904] esp +
push offset aRegisterset_0  +
call sub_4023D0  +
mov [ebp+var_908] eax +
lea ecx [ebp+var_B68] +
push ecx  +
call sub_404940  +
add esp 8 +
mov [ebp+var_794] eax +
mov edx [ebp+var_794] +
mov [ebp+var_798] edx +
mov byte ptr [ebp+var_4] 3Ch +
mov eax [ebp+var_798] +
push eax  +
lea ecx [ebp+var_B50] +
push ecx  +
call sub_411DC0  +
add esp 0Ch +
mov [ebp+var_79C] eax +
mov edx [ebp+var_79C] +
mov [ebp+var_7A0] edx +
mov byte ptr [ebp+var_4] 3Dh +
mov eax [ebp+var_7A0] +
push eax  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 3Ch +
lea ecx [ebp+var_B50] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_B68] +
call sub_4020E0  +
movzx ecx byte_430BF0 +
cmp ecx 1 +
jnz loc_414499  +
push offset sub_410480  +
push offset aBinaryImageTag  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset asc_423EEC  +
push ecx  +
mov ecx esp +
mov [ebp+var_90C] esp +
push offset aBinaryimageset  +
call sub_4023D0  +
mov [ebp+var_910] eax +
lea edx [ebp+var_B98] +
push edx  +
call sub_404940  +
add esp 8 +
mov [ebp+var_7A4] eax +
mov eax [ebp+var_7A4] +
mov [ebp+var_7A8] eax +
mov byte ptr [ebp+var_4] 3Eh +
mov ecx [ebp+var_7A8] +
push ecx  +
lea edx [ebp+var_B80] +
push edx  +
call sub_411DC0  +
add esp 0Ch +
mov [ebp+var_7AC] eax +
mov eax [ebp+var_7AC] +
mov [ebp+var_7B0] eax +
mov byte ptr [ebp+var_4] 3Fh +
mov ecx [ebp+var_7B0] +
push ecx  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 3Eh +
lea ecx [ebp+var_B80] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_B98] +
call sub_4020E0  +
movzx edx byte_430BF0 +
cmp edx 1 +
jnz loc_414563  +
push offset sub_410480  +
push offset aGoingToGenerat  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
lea ecx [ebp+var_414] +
call loc_403640  +
lea eax [ebp+var_414] +
push eax  +
mov ecx [ebp+var_61C] +
push ecx  +
mov edx [ebp+var_640] +
push edx  +
push ecx  +
mov ecx esp +
mov [ebp+var_914] esp +
lea eax [ebp+var_424] +
push eax  +
call sub_402490  +
mov [ebp+var_998] eax +
mov ecx [ebp+var_618] +
push ecx  +
mov edx [ebp+dwProcessId] +
push edx  +
call sub_414E20  +
add esp 18h +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_4145DF  +
push offset sub_410480  +
push offset aWriteBinaries  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push ecx  +
mov ecx esp +
mov [ebp+var_91C] esp +
lea edx [ebp+var_414] +
push edx  +
call sub_402490  +
mov [ebp+var_920] eax +
lea eax [ebp+var_BB0] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_7B4] eax +
mov ecx [ebp+var_7B4] +
mov [ebp+var_7B8] ecx +
mov byte ptr [ebp+var_4] 40h +
mov edx [ebp+var_7B8] +
push edx  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_BB0] +
call sub_4020E0  +
push offset asc_423F3C  +
push ecx  +
mov ecx esp +
mov [ebp+var_924] esp +
push offset aBinaryimages_0  +
call sub_4023D0  +
mov [ebp+var_928] eax +
lea eax [ebp+var_BE0] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_7BC] eax +
mov ecx [ebp+var_7BC] +
mov [ebp+var_7C0] ecx +
mov byte ptr [ebp+var_4] 41h +
mov edx [ebp+var_7C0] +
push edx  +
lea eax [ebp+var_BC8] +
push eax  +
call sub_411DC0  +
add esp 0Ch +
mov [ebp+var_7C4] eax +
mov ecx [ebp+var_7C4] +
mov [ebp+var_7C8] ecx +
mov byte ptr [ebp+var_4] 42h +
mov edx [ebp+var_7C8] +
push edx  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 41h +
lea ecx [ebp+var_BC8] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_BE0] +
call sub_4020E0  +
push offset asc_423F64  +
push ecx  +
mov ecx esp +
mov [ebp+var_92C] esp +
push offset aDumptype  +
call sub_4023D0  +
mov [ebp+var_930] eax +
lea eax [ebp+var_C10] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_7CC] eax +
mov ecx [ebp+var_7CC] +
mov [ebp+var_7D0] ecx +
mov byte ptr [ebp+var_4] 43h +
mov edx [ebp+var_7D0] +
push edx  +
lea eax [ebp+var_BF8] +
push eax  +
call sub_411DC0  +
add esp 0Ch +
mov [ebp+var_7D4] eax +
mov ecx [ebp+var_7D4] +
mov [ebp+var_7D8] ecx +
mov byte ptr [ebp+var_4] 44h +
mov edx [ebp+var_7D8] +
push edx  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 43h +
lea ecx [ebp+var_BF8] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_C10] +
call sub_4020E0  +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_4147A9  +
push offset sub_410480  +
push offset aDumpType  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
lea ecx [ebp+var_414] +
call loc_403640  +
lea ecx [ebp+var_414] +
push ecx  +
mov edx [ebp+var_61C] +
push edx  +
call sub_412480  +
add esp 8 +
push ecx  +
mov ecx esp +
mov [ebp+var_934] esp +
lea eax [ebp+var_414] +
push eax  +
call sub_402490  +
mov [ebp+var_938] eax +
lea ecx [ebp+var_C28] +
push ecx  +
call sub_404940  +
add esp 8 +
mov [ebp+var_7DC] eax +
mov edx [ebp+var_7DC] +
mov [ebp+var_7E0] edx +
mov byte ptr [ebp+var_4] 45h +
mov eax [ebp+var_7E0] +
push eax  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_C28] +
call sub_4020E0  +
push offset asc_423F8C  +
push ecx  +
mov ecx esp +
mov [ebp+var_93C] esp +
push offset aDumptype_0  +
call sub_4023D0  +
mov [ebp+var_940] eax +
lea ecx [ebp+var_C58] +
push ecx  +
call sub_404940  +
add esp 8 +
mov [ebp+var_7E4] eax +
mov edx [ebp+var_7E4] +
mov [ebp+var_7E8] edx +
mov byte ptr [ebp+var_4] 46h +
mov eax [ebp+var_7E8] +
push eax  +
lea ecx [ebp+var_C40] +
push ecx  +
call sub_411DC0  +
add esp 0Ch +
mov [ebp+var_7EC] eax +
mov edx [ebp+var_7EC] +
mov [ebp+var_7F0] edx +
mov byte ptr [ebp+var_4] 47h +
mov eax [ebp+var_7F0] +
push eax  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 46h +
lea ecx [ebp+var_C40] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_C58] +
call sub_4020E0  +
push offset asc_423FA8  +
push ecx  +
mov ecx esp +
mov [ebp+var_944] esp +
push offset aHblogsessiondl  +
call sub_4023D0  +
mov [ebp+var_948] eax +
lea ecx [ebp+var_C88] +
push ecx  +
call sub_404940  +
add esp 8 +
mov [ebp+var_7F4] eax +
mov edx [ebp+var_7F4] +
mov [ebp+var_7F8] edx +
mov byte ptr [ebp+var_4] 48h +
mov eax [ebp+var_7F8] +
push eax  +
lea ecx [ebp+var_C70] +
push ecx  +
call sub_411DC0  +
add esp 0Ch +
mov [ebp+var_7FC] eax +
mov edx [ebp+var_7FC] +
mov [ebp+var_800] edx +
mov byte ptr [ebp+var_4] 49h +
mov eax [ebp+var_800] +
push eax  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 48h +
lea ecx [ebp+var_C70] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_C88] +
call sub_4020E0  +
push offset asc_423FDC  +
lea ecx [ebp+arg_1A0] +
push ecx  +
lea edx [ebp+var_CA0] +
push edx  +
call sub_411E00  +
add esp 0Ch +
mov [ebp+var_804] eax +
mov eax [ebp+var_804] +
mov [ebp+var_808] eax +
mov byte ptr [ebp+var_4] 4Ah +
mov ecx [ebp+var_808] +
push ecx  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_CA0] +
call sub_4020E0  +
push offset asc_423FE0  +
push ecx  +
mov ecx esp +
mov [ebp+var_94C] esp +
push offset aHblogsession_0  +
call sub_4023D0  +
mov [ebp+var_950] eax +
lea edx [ebp+var_CD0] +
push edx  +
call sub_404940  +
add esp 8 +
mov [ebp+var_80C] eax +
mov eax [ebp+var_80C] +
mov [ebp+var_810] eax +
mov byte ptr [ebp+var_4] 4Bh +
mov ecx [ebp+var_810] +
push ecx  +
lea edx [ebp+var_CB8] +
push edx  +
call sub_411DC0  +
add esp 0Ch +
mov [ebp+var_814] eax +
mov eax [ebp+var_814] +
mov [ebp+var_818] eax +
mov byte ptr [ebp+var_4] 4Ch +
mov ecx [ebp+var_818] +
push ecx  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 4Bh +
lea ecx [ebp+var_CB8] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_CD0] +
call sub_4020E0  +
push offset asc_424018  +
push ecx  +
mov ecx esp +
mov [ebp+var_954] esp +
push offset aCrash  +
call sub_4023D0  +
mov [ebp+var_958] eax +
lea edx [ebp+var_D00] +
push edx  +
call sub_404940  +
add esp 8 +
mov [ebp+var_81C] eax +
mov eax [ebp+var_81C] +
mov [ebp+var_820] eax +
mov byte ptr [ebp+var_4] 4Dh +
mov ecx [ebp+var_820] +
push ecx  +
lea edx [ebp+var_CE8] +
push edx  +
call sub_411DC0  +
add esp 0Ch +
mov [ebp+var_824] eax +
mov eax [ebp+var_824] +
mov [ebp+var_828] eax +
mov byte ptr [ebp+var_4] 4Eh +
mov ecx [ebp+var_828] +
push ecx  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 4Dh +
lea ecx [ebp+var_CE8] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_D00] +
call sub_4020E0  +
push ecx  +
mov ecx esp +
mov [ebp+var_95C] esp +
push offset aCrashreport  +
call sub_4023D0  +
mov [ebp+var_960] eax +
lea edx [ebp+var_D18] +
push edx  +
call sub_404940  +
add esp 8 +
mov [ebp+var_82C] eax +
mov eax [ebp+var_82C] +
mov [ebp+var_830] eax +
mov byte ptr [ebp+var_4] 4Fh +
mov ecx [ebp+var_830] +
push ecx  +
lea ecx [ebp+var_43C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_D18] +
call sub_4020E0  +
lea ecx [ebp+var_43C] +
call sub_4020B0  +
push eax  +
lea edx [ebp+var_600] +
push edx  +
call loc_4101B0  +
add esp 8 +
lea ecx [ebp+var_600] +
call sub_40DC00  +
lea ecx [ebp+arg_68] +
call sub_402540  +
test eax eax +
jbe loc_414CC5  +
push 4  +
lea ecx [ebp+var_440] +
call sub_401C10  +
lea ecx [ebp+var_440] +
call loc_40A570  +
mov byte ptr [ebp+var_4] 50h +
push ecx  +
mov ecx esp +
mov [ebp+var_964] esp +
push offset a_sessionid  +
call sub_4023D0  +
mov [ebp+var_834] eax +
mov eax [ebp+var_834] +
mov [ebp+var_968] eax +
mov byte ptr [ebp+var_4] 51h +
push ecx  +
mov ecx esp +
mov [ebp+var_96C] esp +
push offset a_solurl_0  +
call sub_4023D0  +
mov [ebp+var_970] eax +
lea ecx [ebp+var_440] +
push ecx  +
lea edx [ebp+var_448] +
push edx  +
mov byte ptr [ebp+var_4] 50h +
call sub_404830  +
add esp 10h +
push 0B0h  +
lea ecx [ebp+var_548] +
call sub_401C10  +
push 1  +
lea ecx [ebp+var_548] +
call sub_40DD30  +
mov byte ptr [ebp+var_4] 52h +
push 40h  +
push 2  +
lea ecx [ebp+var_440] +
call sub_4024B0  +
push eax  +
lea ecx [ebp+var_548] +
call sub_40DCE0  +
push offset sub_410480  +
push offset aSessionid  +
lea eax [ebp+var_548] +
push eax  +
call sub_411780  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset sub_410480  +
lea ecx [ebp+arg_68] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+var_548] +
push ecx  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset aSessionid_0  +
lea edx [ebp+var_548] +
push edx  +
call sub_411780  +
add esp 8 +
lea ecx [ebp+var_548] +
call sub_40DC00  +
mov byte ptr [ebp+var_4] 50h +
lea ecx [ebp+var_548] +
call sub_40D190  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_440] +
call sub_402310  +
mov eax [ebp+hObject] +
push eax  +
call ds:CloseHandle  +
mov ecx [ebp+var_610] +
push ecx  +
call ds:CloseHandle  +
movzx edx byte_430BF0 +
cmp edx 1 +
jnz loc_414D14  +
push offset sub_410480  +
push offset aLogGenerated  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov ecx offset unk_430B40 +
call sub_40DC00  +
mov [ebp+var_838] 0 +
mov byte ptr [ebp+var_4] 26h +
lea ecx [ebp+var_414] +
call sub_402310  +
mov byte ptr [ebp+var_4] 1Fh +
lea ecx [ebp+var_43C] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 1Dh +
lea ecx [ebp+var_424] +
call sub_402310  +
mov byte ptr [ebp+var_4] 12h +
lea ecx [ebp+cchWideChar] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 11h +
lea ecx [ebp+var_600] +
call sub_40D190  +
mov byte ptr [ebp+var_4] 10h +
lea ecx [ebp+var_444] +
call sub_402310  +
mov byte ptr [ebp+var_4] 9 +
lea ecx [ebp+var_448] +
call sub_402310  +
mov byte ptr [ebp+var_4] 8 +
lea ecx [ebp+var_41C] +
call sub_402310  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_450] +
call sub_4019D0  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_420] +
call sub_402310  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_418] +
call sub_402310  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_480] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_468] +
call sub_4020E0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_4121E0  +
mov eax [ebp+var_838] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421998  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
mov [ebp+var_30] 1ADh +
push 0  +
push 80h  +
push 2  +
push 0  +
push 0  +
push 40000000h  +
lea ecx [ebp+arg_8] +
call sub_4024B0  +
push eax  +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_414EB1  +
push offset sub_410480  +
mov ecx [ebp+hObject] +
push ecx  +
push offset aFileHandle  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@PBX@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_415144  +
movzx edx byte_430BF0 +
cmp edx 1 +
jnz loc_414EF2  +
push offset sub_410480  +
mov eax [ebp+arg_10] +
push eax  +
push offset aDumptype_1  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@H@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov ecx [ebp+arg_10] +
mov [ebp+var_38] ecx +
cmp [ebp+var_38] 1 +
jz loc_414F00  +
jmp loc_414F38  +
movzx edx byte_430BF0 +
cmp edx 1 +
jnz loc_414F2B  +
push offset sub_410480  +
push offset aFullDump  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov eax [ebp+var_30] +
or eax 21802h +
mov [ebp+var_30] eax +
jmp loc_414F63  +
movzx ecx byte_430BF0 +
cmp ecx 1 +
jnz loc_414F63  +
push offset sub_410480  +
push offset aMiniOrDefaultD  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov edx [ebp+dwProcessId] +
push edx  +
push 0  +
push 450h  +
call ds:OpenProcess  +
mov [ebp+var_2C] eax +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_414FAE  +
push offset sub_410480  +
mov ecx [ebp+var_2C] +
push ecx  +
push offset aProcessHproces  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@PBX@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
cmp [ebp+var_2C] 0 +
jz loc_4150DD  +
mov edx [ebp+arg_4] +
mov [ebp+var_24] edx +
mov eax [ebp+arg_C] +
mov [ebp+var_20] eax +
mov [ebp+var_1C] 0 +
mov [ebp+var_18] offset sub_415B50 +
mov ecx [ebp+arg_14] +
mov [ebp+var_14] ecx +
cmp [ebp+arg_C] 0 +
jz loc_414FE6  +
lea edx [ebp+var_24] +
mov [ebp+var_34] edx +
jmp loc_414FED  +
mov [ebp+var_34] 0 +
lea eax [ebp+var_18] +
push eax  +
push 0  +
mov ecx [ebp+var_34] +
push ecx  +
mov edx [ebp+var_30] +
push edx  +
mov eax [ebp+hObject] +
push eax  +
mov ecx [ebp+dwProcessId] +
push ecx  +
mov edx [ebp+var_2C] +
push edx  +
call MiniDumpWriteDump  +
test eax eax +
jnz loc_41507E  +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_41504A  +
push offset sub_410480  +
call ds:GetLastError  +
push eax  +
push offset aUnableToGenera  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@K@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov ecx [ebp+hObject] +
push ecx  +
call ds:CloseHandle  +
mov edx [ebp+var_2C] +
push edx  +
call ds:CloseHandle  +
mov [ebp+var_3C] 0Ch +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_8] +
call sub_402310  +
mov eax [ebp+var_3C] +
jmp loc_4151B8  +
jmp loc_4150DB  +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_4150A9  +
push offset sub_410480  +
push offset aCompletedTheDu  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov ecx [ebp+hObject] +
push ecx  +
call ds:CloseHandle  +
mov edx [ebp+var_2C] +
push edx  +
call ds:CloseHandle  +
mov [ebp+var_40] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_8] +
call sub_402310  +
mov eax [ebp+var_40] +
jmp loc_4151B8  +
jmp loc_415142  +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_41511D  +
call ds:GetLastError  +
mov [ebp+var_44] eax +
push offset sub_410480  +
mov ecx [ebp+var_44] +
push ecx  +
push offset aCrashreportCrl  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@K@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov edx [ebp+hObject] +
push edx  +
call ds:CloseHandle  +
mov [ebp+var_48] 1 +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_8] +
call sub_402310  +
mov eax [ebp+var_48] +
jmp loc_4151B8  +
jmp loc_41519F  +
movzx eax byte_430BF0 +
cmp eax 1 +
jnz loc_415184  +
call ds:GetLastError  +
mov [ebp+var_4C] eax +
push offset sub_410480  +
mov ecx [ebp+var_4C] +
push ecx  +
push offset aCrashreportC_0  +
push offset unk_430B40  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@K@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov [ebp+var_50] 2 +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_8] +
call sub_402310  +
mov eax [ebp+var_50] +
jmp loc_4151B8  +
mov dword ptr [ebp-54h] 0 +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+10h] +
call sub_402310  +
mov eax [ebp-54h] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421A2C  +
mov eax large fs:0 +
push eax  +
sub esp 4Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_34] 0 +
mov [ebp+var_4] 1 +
push 4  +
lea ecx [ebp+var_2C] +
call sub_401C10  +
lea eax [ebp+arg_4] +
push eax  +
lea ecx [ebp+var_2C] +
call sub_402490  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_2C] +
call sub_415B00  +
push offset aAdobe  +
lea ecx [ebp+var_20] +
call sub_402330  +
mov byte ptr [ebp+var_4] 3 +
push offset aFlash  +
lea ecx [ebp+var_1C] +
call sub_402330  +
mov byte ptr [ebp+var_4] 4 +
push offset aMacromed  +
lea ecx [ebp+var_18] +
call sub_402330  +
mov byte ptr [ebp+var_4] 5 +
push offset aFalldowngoboom  +
lea ecx [ebp+var_14] +
call sub_402330  +
mov byte ptr [ebp+var_4] 6 +
push 4  +
lea ecx [ebp+var_28] +
call sub_401C10  +
sub esp 18h +
mov ecx esp +
mov [ebp+var_40] esp +
push offset asc_423930  +
call sub_4021D0  +
mov [ebp+var_38] eax +
mov ecx [ebp+var_38] +
mov [ebp+var_44] ecx +
mov byte ptr [ebp+var_4] 7 +
sub esp 18h +
mov esi esp +
mov [ebp+var_48] esp +
push ecx  +
mov ecx esp +
mov [ebp+var_4C] esp +
lea edx [ebp+arg_4] +
push edx  +
call sub_402490  +
mov [ebp+var_50] eax +
push esi  +
call sub_404940  +
add esp 8 +
mov [ebp+var_3C] eax +
mov eax [ebp+var_3C] +
mov [ebp+var_54] eax +
lea ecx [ebp+var_28] +
push ecx  +
mov byte ptr [ebp+var_4] 6 +
call sub_415940  +
add esp 34h +
mov [ebp+var_58] eax +
mov byte ptr [ebp+var_4] 8 +
mov [ebp+var_30] 0 +
jmp loc_4152FB  +
mov edx [ebp+var_30] +
add edx 1 +
mov [ebp+var_30] edx +
cmp [ebp+var_30] 4 +
jnb loc_4153C1  +
push 0  +
mov eax [ebp+var_30] +
lea ecx [ebp+eax*4+var_20] +
call sub_4024B0  +
push eax  +
lea ecx [ebp+var_2C] +
call sub_40A430  +
cmp eax 0FFFFFFFFh +
jz loc_4153BC  +
push 4  +
lea ecx [ebp+var_24] +
call sub_401C10  +
mov ecx [ebp+var_30] +
lea edx [ebp+ecx*4+var_20] +
push edx  +
lea ecx [ebp+var_24] +
call sub_402490  +
mov byte ptr [ebp+var_4] 9 +
push offset asc_423934  +
lea ecx [ebp+var_24] +
call sub_406270  +
lea eax [ebp+var_28] +
push eax  +
lea ecx [ebp+var_24] +
call sub_406250  +
lea ecx [ebp+var_24] +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_402490  +
mov edx [ebp+var_34] +
or edx 1 +
mov [ebp+var_34] edx +
mov byte ptr [ebp+var_4] 8 +
lea ecx [ebp+var_24] +
call sub_402310  +
mov byte ptr [ebp+var_4] 6 +
lea ecx [ebp+var_28] +
call sub_402310  +
mov byte ptr [ebp+var_4] 2 +
push offset sub_402310  +
push 4  +
push 4  +
lea eax [ebp+var_20] +
push eax  +
call sub_41EB85  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_2C] +
call sub_402310  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+arg_4] +
call sub_402310  +
mov eax [ebp+arg_0] +
jmp loc_415413  +
jmp loc_4152F2  +
lea ecx [ebp+var_28] +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_402490  +
mov edx [ebp+var_34] +
or edx 1 +
mov [ebp+var_34] edx +
mov byte ptr [ebp+var_4] 6 +
lea ecx [ebp+var_28] +
call sub_402310  +
mov byte ptr [ebp+var_4] 2 +
push offset sub_402310  +
push 4  +
push 4  +
lea eax [ebp+var_20] +
push eax  +
call sub_41EB85  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_2C] +
call sub_402310  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+arg_4] +
call sub_402310  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_40FFE0  +
mov eax [eax+8] +
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
push 0  +
push 0  +
push 0  +
mov eax [ebp+cchWideChar] +
push eax  +
mov ecx [ebp+lpWideCharStr] +
push ecx  +
push 0  +
call sub_4011F0  +
push eax  +
call ds:WideCharToMultiByte  +
pop ebp  +
retn   +
***
sub esp 8 +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_4] +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0C0000005h +
ja loc_4154C5  +
cmp [ebp+var_8] 0C0000005h +
jz loc_415509  +
mov ecx [ebp+var_8] +
add ecx 7FFFFFFFh +
mov [ebp+var_8] ecx +
cmp [ebp+var_8] 3 +
ja loc_4157AF  +
mov edx [ebp+var_8] +
jmp ds:off_4157CC[edx*4]  +
cmp [ebp+var_8] 0C0000374h +
ja loc_415504  +
cmp [ebp+var_8] 0C0000374h +
jz loc_415794  +
mov eax [ebp+var_8] +
add eax 3FFFFFFAh +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0F7h +
ja loc_4157AF  +
mov ecx [ebp+var_8] +
movzx edx ds:byte_415824[ecx] +
jmp ds:off_4157DC[edx*4]  +
jmp loc_4157AF  +
push offset aException_acce  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov eax [ebp+var_4] +
or eax 1 +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_data  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov ecx [ebp+var_4] +
or ecx 1 +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_brea  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov edx [ebp+var_4] +
or edx 1 +
mov [ebp+var_4] edx +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_sing  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov eax [ebp+var_4] +
or eax 1 +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_arra  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov ecx [ebp+var_4] +
or ecx 1 +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_flt_  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov edx [ebp+var_4] +
or edx 1 +
mov [ebp+var_4] edx +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_fl_0  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov eax [ebp+var_4] +
or eax 1 +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_fl_1  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov ecx [ebp+var_4] +
or ecx 1 +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_fl_2  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov edx [ebp+var_4] +
or edx 1 +
mov [ebp+var_4] edx +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_fl_3  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov eax [ebp+var_4] +
or eax 1 +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_fl_4  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov ecx [ebp+var_4] +
or ecx 1 +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_fl_5  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov edx [ebp+var_4] +
or edx 1 +
mov [ebp+var_4] edx +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_int_  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov eax [ebp+var_4] +
or eax 1 +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_in_0  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov ecx [ebp+var_4] +
or ecx 1 +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_priv  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov edx [ebp+var_4] +
or edx 1 +
mov [ebp+var_4] edx +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_in_p  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov eax [ebp+var_4] +
or eax 1 +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_ille  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov ecx [ebp+var_4] +
or ecx 1 +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_nonc  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov edx [ebp+var_4] +
or edx 1 +
mov [ebp+var_4] edx +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_stac  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov eax [ebp+var_4] +
or eax 1 +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_inva  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov ecx [ebp+var_4] +
or ecx 1 +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_guar  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov edx [ebp+var_4] +
or edx 1 +
mov [ebp+var_4] edx +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_in_1  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov eax [ebp+var_4] +
or eax 1 +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_heap  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov ecx [ebp+var_4] +
or ecx 1 +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
jmp loc_4157C8  +
push offset aException_unkn  +
mov ecx [ebp+arg_0] +
call sub_4023D0  +
mov edx [ebp+var_4] +
or edx 1 +
mov [ebp+var_4] edx +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_40FFE0  +
mov eax [eax+4] +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421A78  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_18] 0 +
mov [ebp+var_4] 1 +
mov [ebp+var_14] 0 +
mov [ebp+var_10] 0 +
mov eax [ebp+var_14] +
push eax  +
lea ecx [ebp+arg_1C] +
push ecx  +
lea ecx [ebp+arg_4] +
call sub_4063D0  +
mov [ebp+var_10] eax +
mov edx [ebp+var_10] +
cmp edx ds:dword_428020 +
jz loc_4159AA  +
mov eax [ebp+var_10] +
add eax 1 +
mov [ebp+var_14] eax +
jmp loc_415981  +
mov ecx ds:dword_428020 +
push ecx  +
mov edx [ebp+var_14] +
push edx  +
lea eax [ebp+var_38] +
push eax  +
lea ecx [ebp+arg_4] +
call sub_406350  +
mov [ebp+var_1C] eax +
mov ecx [ebp+var_1C] +
mov [ebp+var_20] ecx +
mov byte ptr [ebp+var_4] 2 +
mov ecx [ebp+var_20] +
call sub_4020B0  +
push eax  +
mov ecx [ebp+arg_0] +
call sub_402330  +
mov edx [ebp+var_18] +
or edx 1 +
mov [ebp+var_18] edx +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_38] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+arg_4] +
call sub_4020E0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_1C] +
call sub_4020E0  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_0] +
push eax  +
call sub_412960  +
add esp 4 +
mov [ebp+hModule] eax +
cmp [ebp+hModule] 0 +
jnz loc_415A52  +
xor eax eax +
jmp loc_415A62  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+hModule] +
push edx  +
mov ecx [ebp+var_8] +
call sub_415A70  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 10h +
mov [ebp+var_C] ecx +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+hModule] +
push ecx  +
call sub_401380  +
add esp 8 +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jnz loc_415A96  +
xor eax eax +
jmp loc_415AED  +
mov edx [ebp+var_4] +
movzx eax word ptr [edx] +
push eax  +
mov ecx [ebp+var_4] +
add ecx 2 +
push ecx  +
call sub_415450  +
add esp 8 +
mov [ebp+cchMultiByte] eax +
mov edx [ebp+cchMultiByte] +
push edx  +
mov ecx [ebp+var_C] +
call loc_40F5B0  +
mov [ebp+lpMultiByteStr] eax +
mov eax [ebp+var_4] +
movzx ecx word ptr [eax] +
push ecx  +
mov edx [ebp+var_4] +
add edx 2 +
push edx  +
mov eax [ebp+cchMultiByte] +
push eax  +
mov ecx [ebp+lpMultiByteStr] +
push ecx  +
call sub_412800  +
add esp 10h +
mov edx [ebp+cchMultiByte] +
push edx  +
mov ecx [ebp+var_C] +
call loc_40DBD0  +
mov eax 1 +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 0Ch +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_4035F0  +
mov [ebp+var_8] eax +
mov eax [ebp+var_8] +
push eax  +
mov ecx [ebp+var_4] +
call loc_403600  +
mov [ebp+var_C] eax +
mov ecx [ebp+var_8] +
add ecx 1 +
push ecx  +
mov edx [ebp+var_C] +
push edx  +
call sub_416230  +
add esp 8 +
mov eax [ebp+var_8] +
push eax  +
mov ecx [ebp+var_4] +
call loc_4035C0  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421AB0  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
mov [ebp+var_18] eax +
mov ecx [ebp+arg_4] +
cmp dword ptr [ecx+8] 0 +
jnz loc_415C7F  +
push 4  +
lea ecx [ebp+var_14] +
call sub_401C10  +
mov edx [ebp+arg_4] +
mov eax [edx+0Ch] +
push eax  +
lea ecx [ebp+var_14] +
call sub_4023D0  +
mov [ebp+var_4] 0 +
push offset aBinaryimageSta  +
mov ecx [ebp+var_18] +
call sub_406270  +
mov ecx [ebp+arg_4] +
mov edx [ecx+14h] +
push edx  +
mov eax [ecx+10h] +
push eax  +
push offset a0x016llx  +
mov ecx [ebp+var_18] +
push ecx  +
call sub_40A770  +
add esp 10h +
push offset aEnd  +
mov ecx [ebp+var_18] +
call sub_406270  +
mov edx [ebp+arg_4] +
mov eax [edx+18h] +
xor ecx ecx +
mov edx [ebp+arg_4] +
add eax [edx+10h] +
adc ecx [edx+14h] +
push ecx  +
push eax  +
push offset a0x016llx_0  +
mov eax [ebp+var_18] +
push eax  +
call sub_40A770  +
add esp 10h +
push offset aPath  +
mov ecx [ebp+var_18] +
call sub_406270  +
push ecx  +
mov ecx esp +
mov [ebp+var_28] esp +
lea edx [ebp+var_14] +
push edx  +
call sub_402490  +
mov [ebp+var_2C] eax +
lea eax [ebp+var_24] +
push eax  +
call sub_4151E0  +
add esp 8 +
mov [ebp+var_1C] eax +
mov ecx [ebp+var_1C] +
mov [ebp+var_20] ecx +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_20] +
call sub_4024B0  +
push eax  +
push offset aS_0  +
mov edx [ebp+var_18] +
push edx  +
call sub_40A770  +
add esp 0Ch +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_24] +
call sub_402310  +
push offset asc_424304  +
mov ecx [ebp+var_18] +
call sub_406270  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_402310  +
mov eax 1 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_421AF0  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 4  +
lea ecx [ebp+var_14] +
call sub_401C10  +
push offset unk_4237B4  +
lea ecx [ebp+var_14] +
call sub_4023D0  +
mov [ebp+var_4] 0 +
push 4  +
lea ecx [ebp+var_18] +
call sub_401C10  +
mov eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_18] +
call sub_402330  +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+var_18] +
push eax  +
push offset aRegisterNameSV  +
lea ecx [ebp+var_14] +
push ecx  +
call sub_4083D0  +
add esp 14h +
lea edx [ebp+var_14] +
push edx  +
mov ecx [ebp+arg_C] +
call sub_406250  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_18] +
call sub_402310  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_14] +
call sub_402310  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
call sub_416210  +
add esp 4 +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov ecx [ebp+var_4] +
call sub_415D90  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 10h +
mov [ebp+var_4] ecx +
cmp [ebp+arg_4] 0 +
jnz loc_415DAC  +
mov ecx [ebp+var_4] +
call sub_4128D0  +
jmp loc_415E39  +
cmp [ebp+arg_0] 0 +
jnz loc_415DBC  +
push 80070057h  +
call loc_401220  +
mov ecx [ebp+var_4] +
call sub_415920  +
mov [ebp+var_10] eax +
mov ecx [ebp+var_4] +
call sub_41D820  +
mov ecx [ebp+arg_0] +
sub ecx eax +
mov [ebp+var_C] ecx +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+var_4] +
call loc_40F5B0  +
mov [ebp+var_8] eax +
mov eax [ebp+var_C] +
cmp eax [ebp+var_10] +
ja loc_415E10  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+var_8] +
add edx [ebp+var_C] +
push edx  +
mov ecx [ebp+var_4] +
call sub_415430  +
push eax  +
mov eax [ebp+var_8] +
push eax  +
call sub_412830  +
add esp 10h +
jmp loc_415E2D  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_4] +
call sub_415430  +
push eax  +
mov eax [ebp+var_8] +
push eax  +
call sub_410130  +
add esp 10h +
mov ecx [ebp+arg_4] +
push ecx  +
mov ecx [ebp+var_4] +
call loc_40DBD0  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0  +
push offset aBacktraceCrash  +
mov eax [ebp+arg_0] +
push eax  +
call sub_4083D0  +
add esp 0Ch +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421B30  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
cmp [ebp+arg_0] 0 +
jnz loc_415EA1  +
push offset aCrashException  +
mov eax [ebp+arg_4] +
push eax  +
call sub_4083D0  +
add esp 8 +
jmp loc_415F2D  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [edx+0Ch] +
push eax  +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov eax [edx] +
push eax  +
lea ecx [ebp+var_38] +
push ecx  +
call sub_405C90  +
add esp 8 +
mov [ebp+var_10] eax +
mov edx [ebp+var_10] +
mov [ebp+var_14] edx +
mov [ebp+var_4] 0 +
mov ecx [ebp+var_14] +
call sub_4024C0  +
push eax  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
mov edx [ecx] +
push edx  +
lea eax [ebp+var_20] +
push eax  +
call sub_415480  +
add esp 8 +
mov [ebp+var_18] eax +
mov ecx [ebp+var_18] +
mov [ebp+var_1C] ecx +
mov byte ptr [ebp+var_4] 1 +
mov ecx [ebp+var_1C] +
call sub_4024B0  +
push eax  +
push offset aCrashExcepti_0  +
mov edx [ebp+arg_4] +
push edx  +
call sub_4083D0  +
add esp 14h +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_20] +
call sub_402310  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_38] +
call sub_402040  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421B8E  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
push esi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 6 +
lea ecx [ebp+arg_60] +
call sub_402540  +
mov esi eax +
lea ecx [ebp+arg_48] +
call sub_402540  +
add esi eax +
lea ecx [ebp+arg_0] +
call sub_402540  +
add esi eax +
lea ecx [ebp+arg_18] +
call sub_402540  +
add esi eax +
lea ecx [ebp+arg_30] +
call sub_402540  +
add esi eax +
lea ecx [ebp+arg_78] +
call sub_402540  +
add esi eax +
mov [ebp+var_10] esi +
mov eax [ebp+var_10] +
add eax 70h +
mov [ebp+var_10] eax +
lea ecx [ebp+arg_90] +
call sub_4020B0  +
push eax  +
call sub_404810  +
add esp 4 +
movzx ecx al +
test ecx ecx +
jz loc_4160B5  +
mov edx [ebp+var_10] +
push edx  +
call abs  +
add esp 4 +
cmp eax 400h +
jge loc_415FFB  +
mov eax [ebp+var_10] +
push eax  +
call abs  +
add esp 4 +
mov [ebp+var_14] eax +
jmp loc_416002  +
mov [ebp+var_14] 400h +
lea ecx [ebp+arg_78] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+arg_30] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+arg_18] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+arg_0] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+arg_48] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+arg_60] +
call sub_4020B0  +
push eax  +
push offset aCrashreportSer  +
mov ecx [ebp+var_14] +
push ecx  +
mov edx [ebp+arg_A8] +
push edx  +
call sub_417600  +
add esp 24h +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+arg_0] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+arg_18] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+arg_30] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+arg_48] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+arg_60] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+arg_78] +
call sub_4020E0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_90] +
call sub_4020E0  +
jmp loc_4161B4  +
lea ecx [ebp+arg_90] +
call sub_402540  +
add eax [ebp+var_10] +
mov [ebp+var_10] eax +
mov eax [ebp+var_10] +
add eax 0Fh +
mov [ebp+var_10] eax +
mov ecx [ebp+var_10] +
push ecx  +
call abs  +
add esp 4 +
cmp eax 400h +
jge loc_4160F3  +
mov edx [ebp+var_10] +
push edx  +
call abs  +
add esp 4 +
mov [ebp+var_18] eax +
jmp loc_4160FA  +
mov [ebp+var_18] 400h +
lea ecx [ebp+arg_90] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+arg_78] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+arg_30] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+arg_18] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+arg_0] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+arg_48] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+arg_60] +
call sub_4020B0  +
push eax  +
push offset aCrashreportS_0  +
mov eax [ebp+var_18] +
push eax  +
mov ecx [ebp+arg_A8] +
push ecx  +
call sub_417600  +
add esp 28h +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+arg_0] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+arg_18] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+arg_30] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+arg_48] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+arg_60] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+arg_78] +
call sub_4020E0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_90] +
call sub_4020E0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
push offset aGpu_0  +
mov eax [ebp+arg_0] +
push eax  +
call sub_4083D0  +
add esp 0Ch +
pop ebp  +
retn   +
***
push 0  +
push offset aThreadIndexD  +
mov eax [ebp+arg_0] +
push eax  +
call sub_4083D0  +
add esp 0Ch +
pop ebp  +
retn   +
***
cmp [ebp+arg_0] 0 +
jnz loc_41621D  +
xor eax eax +
jmp loc_416229  +
mov eax [ebp+arg_0] +
push eax  +
call strlen  +
add esp 4 +
pop ebp  +
retn   +
***
sub esp 8 +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call ds:_wcslwr_s  +
add esp 8 +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jnz loc_416258  +
mov edx [ebp+arg_0] +
mov [ebp+var_4] edx +
jmp loc_41625F  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421CFA  +
mov eax large fs:0 +
push eax  +
sub esp 4A0h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
push 4  +
lea ecx [ebp+var_18] +
call sub_401C10  +
push offset unk_423510  +
lea ecx [ebp+var_18] +
call sub_4023D0  +
mov byte ptr [ebp+var_4] 1 +
push 4  +
lea ecx [ebp+var_14] +
call sub_401C10  +
push offset unk_423514  +
lea ecx [ebp+var_14] +
call sub_4023D0  +
mov byte ptr [ebp+var_4] 2 +
push 4  +
lea ecx [ebp+var_24] +
call sub_401C10  +
push offset unk_423518  +
lea ecx [ebp+var_24] +
call sub_4023D0  +
mov byte ptr [ebp+var_4] 3 +
push 4  +
lea ecx [ebp+var_20] +
call sub_401C10  +
push offset unk_42351C  +
lea ecx [ebp+var_20] +
call sub_4023D0  +
mov byte ptr [ebp+var_4] 4 +
push 4  +
lea ecx [ebp+var_1C] +
call sub_401C10  +
push offset unk_423520  +
lea ecx [ebp+var_1C] +
call sub_4023D0  +
mov byte ptr [ebp+var_4] 5 +
lea eax [ebp+SystemInfo] +
push eax  +
call sub_40A100  +
add esp 4 +
mov ecx 9 +
mov esi eax +
lea edi [ebp+var_488] +
movs   +
mov ecx 9 +
lea esi [ebp+var_488] +
lea edi [ebp+var_254] +
movs   +
call sub_409700  +
mov [ebp+var_40] eax +
call sub_409750  +
mov [ebp+var_48] eax +
cmp [ebp+var_40] 0 +
jz loc_4164C7  +
mov ecx [ebp+var_40] +
push ecx  +
lea edx [ebp+var_54] +
push edx  +
call sub_4097A0  +
add esp 8 +
mov [ebp+var_10C] eax +
mov eax [ebp+var_10C] +
mov [ebp+var_50] eax +
mov byte ptr [ebp+var_4] 6 +
mov ecx [ebp+var_50] +
push ecx  +
lea ecx [ebp+var_18] +
call sub_4022A0  +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_54] +
call sub_402310  +
push ecx  +
mov ecx esp +
mov [ebp+var_230] esp +
lea edx [ebp+var_18] +
push edx  +
call sub_402490  +
mov [ebp+var_158] eax +
lea eax [ebp+var_3C] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_15C] eax +
mov byte ptr [ebp+var_4] 7 +
lea ecx [ebp+var_3C] +
push ecx  +
call loc_404B20  +
add esp 4 +
push 0  +
push offset aWindows10  +
lea ecx [ebp+var_3C] +
call sub_406390  +
cmp ds:dword_428020 eax +
jnz loc_41641A  +
push 0  +
push offset aWindowsServer2  +
lea ecx [ebp+var_3C] +
call sub_406390  +
cmp ds:dword_428020 eax +
jz loc_416451  +
mov edx [ebp+var_40] +
push edx  +
lea eax [ebp+var_60] +
push eax  +
call sub_4099C0  +
add esp 8 +
mov [ebp+var_58] eax +
mov ecx [ebp+var_58] +
mov [ebp+var_5C] ecx +
mov byte ptr [ebp+var_4] 8 +
mov edx [ebp+var_5C] +
push edx  +
lea ecx [ebp+var_14] +
call sub_4022A0  +
mov byte ptr [ebp+var_4] 7 +
lea ecx [ebp+var_60] +
call sub_402310  +
jmp loc_416486  +
mov eax [ebp+var_40] +
push eax  +
lea ecx [ebp+var_6C] +
push ecx  +
call sub_4098B0  +
add esp 8 +
mov [ebp+var_64] eax +
mov edx [ebp+var_64] +
mov [ebp+var_68] edx +
mov byte ptr [ebp+var_4] 9 +
mov eax [ebp+var_68] +
push eax  +
lea ecx [ebp+var_14] +
call sub_4022A0  +
mov byte ptr [ebp+var_4] 7 +
lea ecx [ebp+var_6C] +
call sub_402310  +
mov ecx [ebp+var_40] +
push ecx  +
lea edx [ebp+var_78] +
push edx  +
call sub_409B10  +
add esp 8 +
mov [ebp+var_70] eax +
mov eax [ebp+var_70] +
mov [ebp+var_74] eax +
mov byte ptr [ebp+var_4] 0Ah +
mov ecx [ebp+var_74] +
push ecx  +
lea ecx [ebp+var_24] +
call sub_4022A0  +
mov byte ptr [ebp+var_4] 7 +
lea ecx [ebp+var_78] +
call sub_402310  +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_3C] +
call sub_4020E0  +
cmp [ebp+var_48] 0 +
jz loc_416553  +
mov edx [ebp+var_48] +
push edx  +
lea eax [ebp+var_84] +
push eax  +
call sub_409C20  +
add esp 8 +
mov [ebp+var_7C] eax +
mov ecx [ebp+var_7C] +
mov [ebp+var_80] ecx +
mov byte ptr [ebp+var_4] 0Bh +
mov edx [ebp+var_80] +
push edx  +
lea ecx [ebp+var_20] +
call sub_4022A0  +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_84] +
call sub_402310  +
mov eax [ebp+var_48] +
push eax  +
lea ecx [ebp+var_90] +
push ecx  +
call sub_409D30  +
add esp 8 +
mov [ebp+var_88] eax +
mov edx [ebp+var_88] +
mov [ebp+var_8C] edx +
mov byte ptr [ebp+var_4] 0Ch +
mov eax [ebp+var_8C] +
push eax  +
lea ecx [ebp+var_1C] +
call sub_4022A0  +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_90] +
call sub_402310  +
mov [ebp+var_44] 0A3h +
push ecx  +
mov ecx esp +
mov [ebp+var_160] esp +
lea edx [ebp+var_18] +
push edx  +
call sub_402490  +
mov [ebp+var_164] eax +
lea eax [ebp+var_35C] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_94] eax +
mov ecx [ebp+var_94] +
mov [ebp+var_98] ecx +
mov byte ptr [ebp+var_4] 0Dh +
mov ecx [ebp+var_98] +
call sub_402540  +
mov ebx eax +
push ecx  +
mov ecx esp +
mov [ebp+var_168] esp +
lea edx [ebp+var_14] +
push edx  +
call sub_402490  +
mov [ebp+var_16C] eax +
lea eax [ebp+var_344] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_9C] eax +
mov ecx [ebp+var_9C] +
mov [ebp+var_A0] ecx +
mov byte ptr [ebp+var_4] 0Eh +
mov ecx [ebp+var_A0] +
call sub_402540  +
add ebx eax +
push ecx  +
mov ecx esp +
mov [ebp+var_170] esp +
lea edx [ebp+var_24] +
push edx  +
call sub_402490  +
mov [ebp+var_174] eax +
lea eax [ebp+var_32C] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_A4] eax +
mov ecx [ebp+var_A4] +
mov [ebp+var_A8] ecx +
mov byte ptr [ebp+var_4] 0Fh +
mov ecx [ebp+var_A8] +
call sub_402540  +
add ebx eax +
lea ecx [ebp+arg_8] +
call sub_402540  +
add ebx eax +
push ecx  +
mov esi esp +
mov [ebp+var_178] esp +
sub esp 18h +
mov ecx esp +
mov [ebp+var_17C] esp +
push offset aUser  +
call sub_4021D0  +
mov [ebp+var_180] eax +
push esi  +
call loc_40A120  +
add esp 1Ch +
mov [ebp+var_AC] eax +
mov edx [ebp+var_AC] +
mov [ebp+var_184] edx +
lea eax [ebp+var_314] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_B0] eax +
mov ecx [ebp+var_B0] +
mov [ebp+var_B4] ecx +
mov byte ptr [ebp+var_4] 10h +
mov ecx [ebp+var_B4] +
call sub_402540  +
add ebx eax +
push ecx  +
mov esi esp +
mov [ebp+var_188] esp +
sub esp 18h +
mov ecx esp +
mov [ebp+var_18C] esp +
push offset aOs_0  +
call sub_4021D0  +
mov [ebp+var_190] eax +
push esi  +
call loc_40A120  +
add esp 1Ch +
mov [ebp+var_B8] eax +
mov edx [ebp+var_B8] +
mov [ebp+var_194] edx +
lea eax [ebp+var_2FC] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_BC] eax +
mov ecx [ebp+var_BC] +
mov [ebp+var_C0] ecx +
mov byte ptr [ebp+var_4] 11h +
mov ecx [ebp+var_C0] +
call sub_402540  +
add ebx eax +
push ecx  +
mov edx esp +
mov [ebp+var_198] esp +
push edx  +
call sub_409FA0  +
add esp 4 +
mov [ebp+var_19C] eax +
lea eax [ebp+var_2E4] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_C4] eax +
mov ecx [ebp+var_C4] +
mov [ebp+var_C8] ecx +
mov byte ptr [ebp+var_4] 12h +
mov ecx [ebp+var_C8] +
call sub_402540  +
add ebx eax +
push ecx  +
mov ecx esp +
mov [ebp+var_1A0] esp +
lea edx [ebp+var_20] +
push edx  +
call sub_402490  +
mov [ebp+var_1A4] eax +
lea eax [ebp+var_2CC] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_CC] eax +
mov ecx [ebp+var_CC] +
mov [ebp+var_D0] ecx +
mov byte ptr [ebp+var_4] 13h +
mov ecx [ebp+var_D0] +
call sub_402540  +
add ebx eax +
push ecx  +
mov ecx esp +
mov [ebp+var_1A8] esp +
lea edx [ebp+var_1C] +
push edx  +
call sub_402490  +
mov [ebp+var_1AC] eax +
lea eax [ebp+var_2B4] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_D4] eax +
mov ecx [ebp+var_D4] +
mov [ebp+var_D8] ecx +
mov byte ptr [ebp+var_4] 14h +
mov ecx [ebp+var_D8] +
call sub_402540  +
add ebx eax +
push ecx  +
mov edx esp +
mov [ebp+var_1B0] esp +
sub esp 24h +
mov ecx 9 +
lea esi [ebp+var_254] +
mov edi esp +
movs   +
push edx  +
call sub_40A320  +
add esp 28h +
mov [ebp+var_1B4] eax +
lea eax [ebp+var_29C] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_DC] eax +
mov ecx [ebp+var_DC] +
mov [ebp+var_E0] ecx +
mov byte ptr [ebp+var_4] 15h +
mov ecx [ebp+var_E0] +
call sub_402540  +
add ebx eax +
push ecx  +
mov edx esp +
mov [ebp+var_1B8] esp +
sub esp 24h +
mov ecx 9 +
lea esi [ebp+var_254] +
mov edi esp +
movs   +
push edx  +
call sub_40A050  +
add esp 28h +
mov [ebp+var_1BC] eax +
lea eax [ebp+var_284] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_E4] eax +
mov ecx [ebp+var_E4] +
mov [ebp+var_E8] ecx +
mov byte ptr [ebp+var_4] 16h +
mov ecx [ebp+var_E8] +
call sub_402540  +
add ebx eax +
push ecx  +
mov edx esp +
mov [ebp+var_1C0] esp +
push edx  +
call sub_409E80  +
add esp 4 +
mov [ebp+var_1C4] eax +
lea eax [ebp+var_26C] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_EC] eax +
mov ecx [ebp+var_EC] +
mov [ebp+var_F0] ecx +
mov ecx [ebp+var_F0] +
call sub_402540  +
add eax [ebp+var_44] +
add eax ebx +
mov [ebp+var_44] eax +
lea ecx [ebp+var_26C] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 15h +
lea ecx [ebp+var_284] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 14h +
lea ecx [ebp+var_29C] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 13h +
lea ecx [ebp+var_2B4] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 12h +
lea ecx [ebp+var_2CC] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 11h +
lea ecx [ebp+var_2E4] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 10h +
lea ecx [ebp+var_2FC] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0Fh +
lea ecx [ebp+var_314] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0Eh +
lea ecx [ebp+var_32C] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0Dh +
lea ecx [ebp+var_344] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_35C] +
call sub_4020E0  +
mov edx [ebp+var_44] +
push edx  +
call abs  +
add esp 4 +
cmp eax 400h +
jge loc_4169CB  +
mov eax [ebp+var_44] +
push eax  +
call abs  +
add esp 4 +
mov [ebp+var_4C] eax +
jmp loc_4169D2  +
mov [ebp+var_4C] 400h +
push ecx  +
mov ecx esp +
mov [ebp+var_1C8] esp +
push ecx  +
call sub_409E80  +
add esp 4 +
mov [ebp+var_1CC] eax +
lea edx [ebp+var_464] +
push edx  +
call sub_404940  +
add esp 8 +
mov [ebp+var_F4] eax +
mov eax [ebp+var_F4] +
mov [ebp+var_F8] eax +
mov byte ptr [ebp+var_4] 17h +
mov ecx [ebp+var_F8] +
call sub_4020B0  +
push eax  +
push ecx  +
mov edx esp +
mov [ebp+var_1D0] esp +
sub esp 24h +
mov ecx 9 +
lea esi [ebp+var_254] +
mov edi esp +
movs   +
push edx  +
call sub_40A050  +
add esp 28h +
mov [ebp+var_1D4] eax +
lea eax [ebp+var_44C] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_FC] eax +
mov ecx [ebp+var_FC] +
mov [ebp+var_100] ecx +
mov byte ptr [ebp+var_4] 18h +
mov ecx [ebp+var_100] +
call sub_4020B0  +
push eax  +
push ecx  +
mov edx esp +
mov [ebp+var_1D8] esp +
sub esp 24h +
mov ecx 9 +
lea esi [ebp+var_254] +
mov edi esp +
movs   +
push edx  +
call sub_40A320  +
add esp 28h +
mov [ebp+var_1DC] eax +
lea eax [ebp+var_434] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_104] eax +
mov ecx [ebp+var_104] +
mov [ebp+var_108] ecx +
mov byte ptr [ebp+var_4] 19h +
mov ecx [ebp+var_108] +
call sub_4020B0  +
push eax  +
push ecx  +
mov ecx esp +
mov [ebp+var_1E0] esp +
lea edx [ebp+var_1C] +
push edx  +
call sub_402490  +
mov [ebp+var_1E4] eax +
lea eax [ebp+var_41C] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_130] eax +
mov ecx [ebp+var_130] +
mov [ebp+var_110] ecx +
mov byte ptr [ebp+var_4] 1Ah +
mov ecx [ebp+var_110] +
call sub_4020B0  +
push eax  +
push ecx  +
mov ecx esp +
mov [ebp+var_1E8] esp +
lea edx [ebp+var_20] +
push edx  +
call sub_402490  +
mov [ebp+var_1EC] eax +
lea eax [ebp+var_404] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_114] eax +
mov ecx [ebp+var_114] +
mov [ebp+var_118] ecx +
mov byte ptr [ebp+var_4] 1Bh +
mov ecx [ebp+var_118] +
call sub_4020B0  +
push eax  +
push ecx  +
mov edx esp +
mov [ebp+var_1F0] esp +
push edx  +
call sub_409FA0  +
add esp 4 +
mov [ebp+var_1F4] eax +
lea eax [ebp+var_3EC] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_11C] eax +
mov ecx [ebp+var_11C] +
mov [ebp+var_120] ecx +
mov byte ptr [ebp+var_4] 1Ch +
mov ecx [ebp+var_120] +
call sub_4020B0  +
push eax  +
push ecx  +
mov esi esp +
mov [ebp+var_1F8] esp +
sub esp 18h +
mov ecx esp +
mov [ebp+var_1FC] esp +
push offset aOs_1  +
call sub_4021D0  +
mov [ebp+var_200] eax +
push esi  +
call loc_40A120  +
add esp 1Ch +
mov [ebp+var_124] eax +
mov edx [ebp+var_124] +
mov [ebp+var_204] edx +
lea eax [ebp+var_3D4] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_128] eax +
mov ecx [ebp+var_128] +
mov [ebp+var_12C] ecx +
mov byte ptr [ebp+var_4] 1Dh +
mov ecx [ebp+var_12C] +
call sub_4020B0  +
push eax  +
push ecx  +
mov esi esp +
mov [ebp+var_208] esp +
sub esp 18h +
mov ecx esp +
mov [ebp+var_20C] esp +
push offset aUser_0  +
call sub_4021D0  +
mov [ebp+var_210] eax +
push esi  +
call loc_40A120  +
add esp 1Ch +
mov [ebp+var_154] eax +
mov edx [ebp+var_154] +
mov [ebp+var_214] edx +
lea eax [ebp+var_3BC] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_134] eax +
mov ecx [ebp+var_134] +
mov [ebp+var_138] ecx +
mov byte ptr [ebp+var_4] 1Eh +
mov ecx [ebp+var_138] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+arg_8] +
call sub_4020B0  +
push eax  +
push ecx  +
mov ecx esp +
mov [ebp+var_218] esp +
lea edx [ebp+var_24] +
push edx  +
call sub_402490  +
mov [ebp+var_21C] eax +
lea eax [ebp+var_3A4] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_13C] eax +
mov ecx [ebp+var_13C] +
mov [ebp+var_140] ecx +
mov byte ptr [ebp+var_4] 1Fh +
mov ecx [ebp+var_140] +
call sub_4020B0  +
push eax  +
push ecx  +
mov ecx esp +
mov [ebp+var_220] esp +
lea edx [ebp+var_14] +
push edx  +
call sub_402490  +
mov [ebp+var_224] eax +
lea eax [ebp+var_38C] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_144] eax +
mov ecx [ebp+var_144] +
mov [ebp+var_148] ecx +
mov byte ptr [ebp+var_4] 20h +
mov ecx [ebp+var_148] +
call sub_4020B0  +
push eax  +
push ecx  +
mov ecx esp +
mov [ebp+var_228] esp +
lea edx [ebp+var_18] +
push edx  +
call sub_402490  +
mov [ebp+var_22C] eax +
lea eax [ebp+var_374] +
push eax  +
call sub_404940  +
add esp 8 +
mov [ebp+var_14C] eax +
mov ecx [ebp+var_14C] +
mov [ebp+var_150] ecx +
mov ecx [ebp+var_150] +
call sub_4020B0  +
push eax  +
push offset aSystemPlatform  +
mov edx [ebp+var_4C] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
call sub_417600  +
add esp 3Ch +
lea ecx [ebp+var_374] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 1Fh +
lea ecx [ebp+var_38C] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 1Eh +
lea ecx [ebp+var_3A4] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 1Dh +
lea ecx [ebp+var_3BC] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 1Ch +
lea ecx [ebp+var_3D4] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 1Bh +
lea ecx [ebp+var_3EC] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 1Ah +
lea ecx [ebp+var_404] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 19h +
lea ecx [ebp+var_41C] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 18h +
lea ecx [ebp+var_434] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 17h +
lea ecx [ebp+var_44C] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_464] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_1C] +
call sub_402310  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_20] +
call sub_402310  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_24] +
call sub_402310  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_14] +
call sub_402310  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_18] +
call sub_402310  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_8] +
call sub_4020E0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421D38  +
mov eax large fs:0 +
push eax  +
sub esp 0A0h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
push 0  +
call sub_417640  +
add esp 4 +
mov [ebp+var_18] eax +
mov [ebp+var_14] edx +
lea eax [ebp+var_18] +
push eax  +
lea ecx [ebp+var_3C] +
push ecx  +
call sub_4173E0  +
add esp 8 +
mov [ebp+var_68] eax +
mov [ebp+var_5C] 58h +
cmp [ebp+var_68] 0 +
jnz loc_41700D  +
mov [ebp+var_58] 0FFFFFFFFh +
push ecx  +
mov edx esp +
mov [ebp+var_74] esp +
lea eax [ebp+var_58] +
push eax  +
push edx  +
call sub_401C30  +
add esp 8 +
mov [ebp+var_78] eax +
lea ecx [ebp+var_54] +
push ecx  +
call sub_404940  +
add esp 8 +
mov [ebp+var_7C] eax +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_54] +
call sub_402540  +
add eax [ebp+var_5C] +
mov [ebp+var_5C] eax +
mov edx [ebp+var_58] +
push edx  +
lea eax [ebp+var_94] +
push eax  +
call sub_4173B0  +
add esp 8 +
mov [ebp+var_6C] eax +
mov ecx [ebp+var_6C] +
call sub_402540  +
add eax [ebp+var_5C] +
mov [ebp+var_5C] eax +
lea ecx [ebp+var_94] +
call sub_4020E0  +
mov ecx [ebp+var_5C] +
add ecx 0Eh +
mov [ebp+var_5C] ecx +
mov edx [ebp+var_5C] +
push edx  +
call abs  +
add esp 4 +
cmp eax 400h +
jge loc_416F8C  +
mov eax [ebp+var_5C] +
push eax  +
call abs  +
add esp 4 +
mov [ebp+var_60] eax +
jmp loc_416F93  +
mov [ebp+var_60] 400h +
lea ecx [ebp+var_54] +
call sub_4020B0  +
push eax  +
mov ecx [ebp+var_58] +
push ecx  +
lea edx [ebp+var_AC] +
push edx  +
call sub_4173B0  +
add esp 8 +
mov [ebp+var_70] eax +
mov ecx [ebp+var_70] +
call sub_4020B0  +
push eax  +
mov eax [ebp+var_3C] +
push eax  +
mov ecx [ebp+var_38] +
push ecx  +
mov edx [ebp+var_34] +
push edx  +
mov eax [ebp+var_30] +
push eax  +
mov ecx [ebp+var_2C] +
add ecx 1 +
push ecx  +
mov edx [ebp+var_28] +
add edx 76Ch +
push edx  +
push offset aTimeYearDMonth  +
mov eax [ebp+var_60] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_417600  +
add esp 2Ch +
lea ecx [ebp+var_AC] +
call sub_4020E0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_54] +
call sub_4020E0  +
jmp loc_41704D  +
mov edx [ebp+var_5C] +
push edx  +
call abs  +
add esp 4 +
cmp eax 400h +
jge loc_417031  +
mov eax [ebp+var_5C] +
push eax  +
call abs  +
add esp 4 +
mov [ebp+var_64] eax +
jmp loc_417038  +
mov [ebp+var_64] 400h +
push offset aTimeYearMonthD  +
mov ecx [ebp+var_64] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call sub_417600  +
add esp 0Ch +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421D68  +
mov eax large fs:0 +
push eax  +
sub esp 40h +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
mov eax ds:dword_428020 +
push eax  +
push 0  +
push offset a__1  +
lea ecx [ebp+arg_0] +
call sub_406390  +
add eax 1 +
push eax  +
lea ecx [ebp+var_34] +
push ecx  +
lea ecx [ebp+arg_0] +
call sub_406350  +
mov [ebp+var_18] eax +
mov edx [ebp+var_18] +
push edx  +
lea ecx [ebp+arg_0] +
call sub_403420  +
lea ecx [ebp+var_34] +
call sub_4020E0  +
push 0  +
push offset a__2  +
lea ecx [ebp+arg_0] +
call sub_406390  +
push eax  +
push 0  +
lea eax [ebp+var_4C] +
push eax  +
lea ecx [ebp+arg_0] +
call sub_406350  +
mov [ebp+var_1C] eax +
mov ecx [ebp+var_1C] +
push ecx  +
lea ecx [ebp+arg_0] +
call sub_403420  +
lea ecx [ebp+var_4C] +
call sub_4020E0  +
mov [ebp+var_10] 11h +
lea ecx [ebp+arg_0] +
call sub_402540  +
add eax [ebp+var_10] +
mov [ebp+var_10] eax +
mov edx [ebp+var_10] +
push edx  +
call abs  +
add esp 4 +
cmp eax 400h +
jge loc_417146  +
mov eax [ebp+var_10] +
push eax  +
call abs  +
add esp 4 +
mov [ebp+var_14] eax +
jmp loc_41714D  +
mov [ebp+var_14] 400h +
lea ecx [ebp+arg_0] +
call sub_4020B0  +
push eax  +
push offset aUserGuidS  +
mov ecx [ebp+var_14] +
push ecx  +
mov edx [ebp+arg_18] +
push edx  +
call sub_417600  +
add esp 10h +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_4020E0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_4] +
jz loc_4171B2  +
mov ecx [ebp+arg_4] +
sub ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_4] +
call sub_402910  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
call sub_401920  +
add esp 4 +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov ecx [ebp+var_4] +
call sub_4171F0  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 8 +
sub esp 14h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_9] 0 +
mov eax [ebp+dwProcessId] +
push eax  +
push 0  +
push 1000h  +
call ds:OpenProcess  +
mov [ebp+hObject] eax +
cmp [ebp+hObject] 0 +
jz loc_417319  +
lea ecx [ebp+ExitCode] +
push ecx  +
mov edx [ebp+hObject] +
push edx  +
call ds:GetExitCodeProcess  +
test eax eax +
jz loc_41730F  +
cmp [ebp+ExitCode] 103h +
jnz loc_417302  +
mov [ebp+var_14] 1 +
jmp loc_417309  +
mov [ebp+var_14] 0 +
mov al byte ptr [ebp+var_14] +
mov [ebp+var_9] al +
mov ecx [ebp+hObject] +
push ecx  +
call ds:CloseHandle  +
mov al [ebp+var_9] +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 14h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_9] 0 +
mov eax [ebp+arg_0] +
push eax  +
push 0  +
push 800h  +
call ds:OpenThread  +
mov [ebp+hObject] eax +
cmp [ebp+hObject] 0 +
jz loc_417399  +
lea ecx [ebp+ExitCode] +
push ecx  +
mov edx [ebp+hObject] +
push edx  +
call ds:GetExitCodeThread  +
test eax eax +
jz loc_41738F  +
cmp [ebp+ExitCode] 103h +
jnz loc_417382  +
mov [ebp+var_14] 1 +
jmp loc_417389  +
mov [ebp+var_14] 0 +
mov al byte ptr [ebp+var_14] +
mov [ebp+var_9] al +
mov ecx [ebp+hObject] +
push ecx  +
call ds:CloseHandle  +
mov al [ebp+var_9] +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_411EC0  +
add esp 8 +
mov edx [ebp+var_4] +
or edx 1 +
mov [ebp+var_4] edx +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call ds:_localtime64_s  +
add esp 8 +
pop ebp  +
retn   +
***
sub esp 18h +
cmp [ebp+arg_C] 0 +
jnz loc_417413  +
xor eax eax +
jmp loc_41750A  +
cmp [ebp+arg_0] 0 +
jz loc_417422  +
mov [ebp+var_4] 1 +
jmp loc_417429  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_4] +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jnz loc_417451  +
call ds:_errno  +
mov dword ptr [eax] 16h +
call ds:_invalid_parameter_noinfo  +
mov eax 16h +
jmp loc_41750A  +
cmp [ebp+arg_8] 0 +
jz loc_417463  +
mov ecx [ebp+arg_4] +
cmp ecx [ebp+arg_C] +
jnb loc_4174F4  +
mov edx [ebp+arg_4] +
push edx  +
push 0  +
mov eax [ebp+arg_0] +
push eax  +
call memset  +
add esp 0Ch +
cmp [ebp+arg_8] 0 +
jz loc_417484  +
mov [ebp+var_8] 1 +
jmp loc_41748B  +
mov [ebp+var_8] 0 +
mov ecx [ebp+var_8] +
mov [ebp+var_14] ecx +
cmp [ebp+var_14] 0 +
jnz loc_4174B0  +
call ds:_errno  +
mov dword ptr [eax] 16h +
call ds:_invalid_parameter_noinfo  +
mov eax 16h +
jmp loc_41750A  +
mov edx [ebp+arg_4] +
cmp edx [ebp+arg_C] +
jb loc_4174C1  +
mov [ebp+var_C] 1 +
jmp loc_4174C8  +
mov [ebp+var_C] 0 +
mov eax [ebp+var_C] +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jnz loc_4174ED  +
call ds:_errno  +
mov dword ptr [eax] 22h +
call ds:_invalid_parameter_noinfo  +
mov eax 22h +
jmp loc_41750A  +
mov eax 16h +
jmp loc_41750A  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call memcpy  +
add esp 0Ch +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 18h +
cmp [ebp+arg_C] 0 +
jnz loc_417523  +
xor eax eax +
jmp loc_4175F0  +
cmp [ebp+arg_0] 0 +
jz loc_417532  +
mov [ebp+var_4] 1 +
jmp loc_417539  +
mov [ebp+var_4] 0 +
mov eax [ebp+var_4] +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jnz loc_417561  +
call ds:_errno  +
mov dword ptr [eax] 16h +
call ds:_invalid_parameter_noinfo  +
mov eax 16h +
jmp loc_4175F0  +
cmp [ebp+arg_8] 0 +
jz loc_417570  +
mov [ebp+var_8] 1 +
jmp loc_417577  +
mov [ebp+var_8] 0 +
mov ecx [ebp+var_8] +
mov [ebp+var_14] ecx +
cmp [ebp+var_14] 0 +
jnz loc_41759C  +
call ds:_errno  +
mov dword ptr [eax] 16h +
call ds:_invalid_parameter_noinfo  +
mov eax 16h +
jmp loc_4175F0  +
mov edx [ebp+arg_4] +
cmp edx [ebp+arg_C] +
jb loc_4175AD  +
mov [ebp+var_C] 1 +
jmp loc_4175B4  +
mov [ebp+var_C] 0 +
mov eax [ebp+var_C] +
mov [ebp+var_18] eax +
cmp [ebp+var_18] 0 +
jnz loc_4175D9  +
call ds:_errno  +
mov dword ptr [eax] 22h +
call ds:_invalid_parameter_noinfo  +
mov eax 22h +
jmp loc_4175F0  +
mov ecx [ebp+arg_C] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call ds:memmove  +
add esp 0Ch +
xor eax eax +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
call sub_412030  +
lea eax [ebp+arg_C] +
mov [ebp+var_4] eax +
mov ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+arg_8] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_417660  +
add esp 10h +
mov [ebp+var_8] eax +
mov [ebp+var_4] 0 +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
push eax  +
call ds:_time64  +
add esp 4 +
pop ebp  +
retn   +
***
sub esp 8 +
mov eax [ebp+arg_C] +
push eax  +
push 0  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call sub_404680  +
mov ecx [eax] +
or ecx 2 +
mov edx [eax+4] +
push edx  +
push ecx  +
call ds:__stdio_common_vsprintf  +
add esp 1Ch +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jge loc_4176A2  +
mov [ebp+var_8] 0FFFFFFFFh +
jmp loc_4176A8  +
mov eax [ebp+var_4] +
mov [ebp+var_8] eax +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 170h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+pNumArgs] +
push eax  +
call ds:GetCommandLineW  +
push eax  +
call ds:CommandLineToArgvW  +
mov [ebp+hMem] eax +
cmp [ebp+hMem] 0 +
jnz loc_4176E4  +
xor eax eax +
jmp loc_41792C  +
cmp [ebp+pNumArgs] 4 +
jz loc_4176F1  +
xor eax eax +
jmp loc_41792C  +
push 4  +
lea ecx [ebp+var_8] +
call sub_401C10  +
mov ecx 4 +
shl ecx 0 +
mov edx [ebp+hMem] +
mov eax [edx+ecx] +
push eax  +
lea ecx [ebp+var_8] +
call sub_4023D0  +
mov ecx 4 +
shl ecx 1 +
mov edx [ebp+hMem] +
mov eax [edx+ecx] +
push eax  +
lea ecx [ebp+var_EC] +
call sub_4062D0  +
mov ecx eax +
call sub_4024B0  +
push eax  +
lea ecx [ebp+var_24] +
call sub_4021D0  +
lea ecx [ebp+var_EC] +
call sub_4062B0  +
mov ecx 4 +
imul edx ecx +
mov eax [ebp+hMem] +
mov ecx [eax+edx] +
push ecx  +
lea ecx [ebp+var_170] +
call sub_4062D0  +
mov ecx eax +
call sub_4024B0  +
push eax  +
lea ecx [ebp+var_3C] +
call sub_4021D0  +
lea ecx [ebp+var_170] +
call sub_4062B0  +
lea edx [ebp+var_24] +
push edx  +
call loc_404B20  +
add esp 4 +
lea eax [ebp+var_24] +
push eax  +
push offset aCreatedump  +
call sub_40A790  +
add esp 8 +
movzx ecx al +
test ecx ecx +
jz loc_4177B0  +
lea edx [ebp+var_3C] +
push edx  +
call sub_418090  +
add esp 4 +
jmp loc_417900  +
lea eax [ebp+var_24] +
push eax  +
push offset aSolutionurl  +
call sub_40A790  +
add esp 8 +
movzx ecx al +
test ecx ecx +
jz loc_4177F5  +
push ecx  +
mov ecx esp +
mov [ebp+var_48] esp +
lea edx [ebp+var_8] +
push edx  +
call sub_402490  +
sub esp 18h +
mov ecx esp +
mov [ebp+var_4C] esp +
lea eax [ebp+var_3C] +
push eax  +
call sub_406460  +
call sub_41DC70  +
add esp 1Ch +
jmp loc_417900  +
lea ecx [ebp+var_24] +
push ecx  +
push offset aSendlog  +
call sub_40A790  +
add esp 8 +
movzx edx al +
test edx edx +
jz loc_417842  +
sub esp 18h +
mov ecx esp +
mov [ebp+var_50] esp +
lea eax [ebp+var_3C] +
push eax  +
call sub_406460  +
call sub_41A820  +
add esp 18h +
push ecx  +
mov ecx esp +
mov [ebp+var_54] esp +
lea edx [ebp+var_8] +
push edx  +
call sub_402490  +
call sub_41C550  +
add esp 4 +
jmp loc_417900  +
lea eax [ebp+var_24] +
push eax  +
push offset aDontsend  +
call sub_40A790  +
add esp 8 +
movzx ecx al +
test ecx ecx +
jz loc_417878  +
sub esp 18h +
mov ecx esp +
mov [ebp+var_58] esp +
lea edx [ebp+var_3C] +
push edx  +
call sub_406460  +
call sub_41B7D0  +
add esp 18h +
jmp loc_417900  +
lea eax [ebp+var_24] +
push eax  +
push offset aUpdatepvbprefe  +
call sub_40A790  +
add esp 8 +
movzx ecx al +
test ecx ecx +
jz loc_4178C0  +
push ecx  +
mov ecx esp +
mov [ebp+var_5C] esp +
lea edx [ebp+var_8] +
push edx  +
call sub_402490  +
call sub_41BD70  +
add esp 4 +
push ecx  +
mov ecx esp +
mov [ebp+var_60] esp +
lea eax [ebp+var_8] +
push eax  +
call sub_402490  +
call sub_41C550  +
add esp 4 +
jmp loc_417900  +
lea ecx [ebp+var_24] +
push ecx  +
push offset aPersistmachine  +
call sub_40A790  +
add esp 8 +
movzx edx al +
test edx edx +
jz loc_417900  +
push ecx  +
mov ecx esp +
mov [ebp+var_64] esp +
lea eax [ebp+var_8] +
push eax  +
call sub_402490  +
sub esp 18h +
mov ecx esp +
mov [ebp+var_68] esp +
lea edx [ebp+var_3C] +
push edx  +
call sub_406460  +
call sub_419240  +
add esp 1Ch +
mov eax [ebp+hMem] +
push eax  +
call ds:LocalFree  +
mov [ebp+var_44] 0 +
lea ecx [ebp+var_3C] +
call sub_4020E0  +
lea ecx [ebp+var_24] +
call sub_4020E0  +
lea ecx [ebp+var_8] +
call sub_402310  +
mov eax [ebp+var_44] +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
push 0FFFFFFFFh  +
push offset loc_421EC3  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov [eax] edx +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov edx [ecx+4] +
mov [eax+4] edx +
mov eax [ebp+arg_0] +
add eax 8 +
push eax  +
mov ecx [ebp+var_10] +
add ecx 8 +
call sub_406460  +
mov [ebp+var_4] 0 +
mov ecx [ebp+arg_0] +
add ecx 20h +
push ecx  +
mov ecx [ebp+var_10] +
add ecx 20h +
call sub_406460  +
mov byte ptr [ebp+var_4] 1 +
mov edx [ebp+arg_0] +
add edx 38h +
push edx  +
mov ecx [ebp+var_10] +
add ecx 38h +
call sub_406460  +
mov byte ptr [ebp+var_4] 2 +
mov eax [ebp+arg_0] +
add eax 50h +
push eax  +
mov ecx [ebp+var_10] +
add ecx 50h +
call sub_406460  +
mov byte ptr [ebp+var_4] 3 +
mov ecx [ebp+arg_0] +
add ecx 68h +
push ecx  +
mov ecx [ebp+var_10] +
add ecx 68h +
call sub_406460  +
mov byte ptr [ebp+var_4] 4 +
mov edx [ebp+arg_0] +
add edx 80h +
push edx  +
mov ecx [ebp+var_10] +
add ecx 80h +
call sub_406460  +
mov byte ptr [ebp+var_4] 5 +
mov eax [ebp+arg_0] +
add eax 98h +
push eax  +
mov ecx [ebp+var_10] +
add ecx 98h +
call sub_406460  +
mov byte ptr [ebp+var_4] 6 +
mov ecx [ebp+arg_0] +
add ecx 0B0h +
push ecx  +
mov ecx [ebp+var_10] +
add ecx 0B0h +
call sub_406460  +
mov byte ptr [ebp+var_4] 7 +
mov edx [ebp+arg_0] +
add edx 0C8h +
push edx  +
mov ecx [ebp+var_10] +
add ecx 0C8h +
call sub_406460  +
mov byte ptr [ebp+var_4] 8 +
mov eax [ebp+arg_0] +
add eax 0E0h +
push eax  +
mov ecx [ebp+var_10] +
add ecx 0E0h +
call sub_406460  +
mov byte ptr [ebp+var_4] 9 +
mov ecx [ebp+arg_0] +
add ecx 0F8h +
push ecx  +
mov ecx [ebp+var_10] +
add ecx 0F8h +
call sub_406460  +
mov byte ptr [ebp+var_4] 0Ah +
mov edx [ebp+arg_0] +
add edx 110h +
push edx  +
mov ecx [ebp+var_10] +
add ecx 110h +
call sub_406460  +
mov byte ptr [ebp+var_4] 0Bh +
mov eax [ebp+arg_0] +
add eax 128h +
push eax  +
mov ecx [ebp+var_10] +
add ecx 128h +
call sub_406460  +
mov byte ptr [ebp+var_4] 0Ch +
mov ecx [ebp+arg_0] +
add ecx 140h +
push ecx  +
mov ecx [ebp+var_10] +
add ecx 140h +
call sub_406460  +
mov byte ptr [ebp+var_4] 0Dh +
mov edx [ebp+arg_0] +
add edx 158h +
push edx  +
mov ecx [ebp+var_10] +
add ecx 158h +
call sub_406460  +
mov byte ptr [ebp+var_4] 0Eh +
mov eax [ebp+arg_0] +
add eax 170h +
push eax  +
mov ecx [ebp+var_10] +
add ecx 170h +
call sub_406460  +
mov byte ptr [ebp+var_4] 0Fh +
mov ecx [ebp+arg_0] +
add ecx 188h +
push ecx  +
mov ecx [ebp+var_10] +
add ecx 188h +
call sub_406460  +
mov byte ptr [ebp+var_4] 10h +
mov edx [ebp+arg_0] +
add edx 1A0h +
push edx  +
mov ecx [ebp+var_10] +
add ecx 1A0h +
call sub_406460  +
mov byte ptr [ebp+var_4] 11h +
mov eax [ebp+arg_0] +
add eax 1B8h +
push eax  +
mov ecx [ebp+var_10] +
add ecx 1B8h +
call sub_402490  +
mov byte ptr [ebp+var_4] 12h +
mov ecx [ebp+arg_0] +
add ecx 1BCh +
push ecx  +
mov ecx [ebp+var_10] +
add ecx 1BCh +
call sub_402490  +
mov byte ptr [ebp+var_4] 13h +
mov edx [ebp+arg_0] +
add edx 1C0h +
push edx  +
mov ecx [ebp+var_10] +
add ecx 1C0h +
call sub_402490  +
mov byte ptr [ebp+var_4] 14h +
mov eax [ebp+arg_0] +
add eax 1C4h +
push eax  +
mov ecx [ebp+var_10] +
add ecx 1C4h +
call sub_402490  +
mov byte ptr [ebp+var_4] 15h +
mov ecx [ebp+arg_0] +
add ecx 1C8h +
push ecx  +
mov ecx [ebp+var_10] +
add ecx 1C8h +
call sub_402490  +
mov byte ptr [ebp+var_4] 16h +
mov edx [ebp+arg_0] +
add edx 1CCh +
push edx  +
mov ecx [ebp+var_10] +
add ecx 1CCh +
call sub_402490  +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov edx [ecx+1D0h] +
mov [eax+1D0h] edx +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov edx [ecx+1D4h] +
mov [eax+1D4h] edx +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov dl [ecx+1D8h] +
mov [eax+1D8h] dl +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov dl [ecx+1D9h] +
mov [eax+1D9h] dl +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov dl [ecx+1DAh] +
mov [eax+1DAh] dl +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov edx [ecx+1DCh] +
mov [eax+1DCh] edx +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov edx [ecx+1E0h] +
mov [eax+1E0h] edx +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov edx [ecx+1E4h] +
mov [eax+1E4h] edx +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov dl [ecx+1E8h] +
mov [eax+1E8h] dl +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov dl [ecx+1E9h] +
mov [eax+1E9h] dl +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov edx [ecx+1ECh] +
mov [eax+1ECh] edx +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov edx [ecx+1F0h] +
mov [eax+1F0h] edx +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov edx [ecx+1F4h] +
mov [eax+1F4h] edx +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov dl [ecx+1F8h] +
mov [eax+1F8h] dl +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov dl [ecx+1F9h] +
mov [eax+1F9h] dl +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov dl [ecx+1FAh] +
mov [eax+1FAh] dl +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov dl [ecx+1FBh] +
mov [eax+1FBh] dl +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov dl [ecx+1FCh] +
mov [eax+1FCh] dl +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_421EC3  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov eax [ebp+var_10] +
mov dword ptr [eax] 0 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+4] 0 +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 8 +
call sub_4021D0  +
mov [ebp+var_4] 0 +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 20h +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 1 +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 38h +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 2 +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 50h +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 3 +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 68h +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 4 +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 80h +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 5 +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 98h +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 6 +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 0B0h +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 7 +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 0C8h +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 8 +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 0E0h +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 9 +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 0F8h +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 0Ah +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 110h +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 0Bh +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 128h +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 0Ch +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 140h +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 0Dh +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 158h +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 0Eh +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 170h +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 0Fh +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 188h +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 10h +
push offset unk_427F91  +
mov ecx [ebp+var_10] +
add ecx 1A0h +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 11h +
push offset unk_427F70  +
mov ecx [ebp+var_10] +
add ecx 1B8h +
call sub_4023D0  +
mov byte ptr [ebp+var_4] 12h +
push offset unk_427F70  +
mov ecx [ebp+var_10] +
add ecx 1BCh +
call sub_4023D0  +
mov byte ptr [ebp+var_4] 13h +
push offset unk_427F70  +
mov ecx [ebp+var_10] +
add ecx 1C0h +
call sub_4023D0  +
mov byte ptr [ebp+var_4] 14h +
push offset unk_427F70  +
mov ecx [ebp+var_10] +
add ecx 1C4h +
call sub_4023D0  +
mov byte ptr [ebp+var_4] 15h +
push offset unk_427F70  +
mov ecx [ebp+var_10] +
add ecx 1C8h +
call sub_4023D0  +
mov byte ptr [ebp+var_4] 16h +
push offset unk_427F70  +
mov ecx [ebp+var_10] +
add ecx 1CCh +
call sub_4023D0  +
mov edx [ebp+var_10] +
mov dword ptr [edx+1D0h] 0 +
mov eax [ebp+var_10] +
mov dword ptr [eax+1D4h] 0 +
mov ecx [ebp+var_10] +
mov byte ptr [ecx+1D8h] 0 +
mov edx [ebp+var_10] +
mov byte ptr [edx+1D9h] 1 +
mov eax [ebp+var_10] +
mov byte ptr [eax+1DAh] 0 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+1DCh] 0 +
mov edx [ebp+var_10] +
mov dword ptr [edx+1E0h] 0 +
mov eax [ebp+var_10] +
mov byte ptr [eax+1E8h] 0 +
mov ecx [ebp+var_10] +
mov byte ptr [ecx+1E9h] 0 +
mov edx [ebp+var_10] +
mov dword ptr [edx+1ECh] 0 +
mov eax [ebp+var_10] +
mov dword ptr [eax+1F0h] 0 +
mov ecx [ebp+var_10] +
mov dword ptr [ecx+1F4h] 0 +
mov edx [ebp+var_10] +
mov byte ptr [edx+1F8h] 0 +
mov eax [ebp+var_10] +
mov byte ptr [eax+1F9h] 0 +
mov ecx [ebp+var_10] +
mov byte ptr [ecx+1FAh] 0 +
mov edx [ebp+var_10] +
mov byte ptr [edx+1FBh] 0 +
mov eax [ebp+var_10] +
mov byte ptr [eax+1FCh] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421EEB  +
mov eax large fs:0 +
push eax  +
sub esp 228h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov byte_430E40 0 +
push offset aCWindowsclie_1  +
call ds:PathFileExistsW  +
test eax eax +
jz loc_4180D8  +
mov byte_430E40 1 +
movzx eax byte_430E40 +
cmp eax 1 +
jnz loc_418135  +
push 40h  +
push 2  +
push offset aCWindowsclie_2  +
mov ecx offset unk_430D90 +
call sub_40DCE0  +
push offset sub_410480  +
push offset aInsideInitiali  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset sub_410480  +
push offset aGoingToConnect  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov [ebp+hFile] 0 +
lea ecx [ebp+hFile] +
push ecx  +
sub esp 18h +
mov ecx esp +
mov [ebp+var_228] esp +
mov edx [ebp+arg_0] +
push edx  +
call sub_406460  +
mov [ebp+var_22C] eax +
call sub_41D870  +
add esp 1Ch +
cmp [ebp+hFile] 0 +
jnz loc_4181AB  +
movzx eax byte_430E40 +
cmp eax 1 +
jnz loc_4181A6  +
push offset sub_410480  +
push offset aCouldNotConnec  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov ecx offset unk_430D90 +
call sub_40DC00  +
jmp loc_41835E  +
movzx ecx byte_430E40 +
cmp ecx 1 +
jnz loc_4181D6  +
push offset sub_410480  +
push offset aSuccessfullyCo  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
lea ecx [ebp+var_210] +
call sub_417D60  +
mov [ebp+var_4] 0 +
push 0A00000h  +
call sub_41ECAD  +
add esp 4 +
mov [ebp+var_220] eax +
mov edx [ebp+var_220] +
mov [ebp+lpBuffer] edx +
mov eax [ebp+lpBuffer] +
push eax  +
mov ecx [ebp+hFile] +
push ecx  +
call sub_41DA60  +
add esp 8 +
movzx edx byte_430E40 +
cmp edx 1 +
jnz loc_418265  +
push offset sub_410480  +
mov eax [ebp+lpBuffer] +
push eax  +
push offset sub_410480  +
push offset aCrashDataReadF  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push eax  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
lea ecx [ebp+var_210] +
push ecx  +
mov edx [ebp+lpBuffer] +
push edx  +
call sub_418380  +
add esp 8 +
mov eax [ebp+lpBuffer] +
mov [ebp+var_21C] eax +
mov ecx [ebp+var_21C] +
push ecx  +
call j_j_free  +
add esp 4 +
cmp [ebp+var_21C] 0 +
jnz loc_4182AB  +
mov [ebp+var_224] 0 +
jmp loc_4182C1  +
mov [ebp+lpBuffer] 8123h +
mov edx [ebp+lpBuffer] +
mov [ebp+var_224] edx +
movzx eax byte_430E40 +
cmp eax 1 +
jnz loc_4182EC  +
push offset sub_410480  +
push offset aGoingToCallThe  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
sub esp 200h +
mov ecx esp +
mov [ebp+var_230] esp +
lea edx [ebp+var_210] +
push edx  +
call sub_417940  +
mov [ebp+var_234] eax +
call sub_412980  +
add esp 200h +
movzx eax byte_430E40 +
cmp eax 1 +
jnz loc_41834C  +
push offset sub_410480  +
push offset aCameBackFromGe  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov ecx offset unk_430D90 +
call sub_40DC00  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_210] +
call sub_4121E0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_422056  +
mov eax large fs:0 +
push eax  +
sub esp 2F4h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
movzx eax byte_430E40 +
cmp eax 1 +
jnz loc_4183D7  +
push offset sub_410480  +
push offset aGoingToParseTh  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push 0Ch  +
lea ecx [ebp+var_30] +
call sub_401C10  +
lea ecx [ebp+var_30] +
call sub_402020  +
mov [ebp+var_4] 0 +
push 0Ch  +
lea ecx [ebp+var_24] +
call sub_401C10  +
lea ecx [ebp+var_24] +
call sub_402020  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_30] +
push ecx  +
sub esp 18h +
mov esi esp +
mov [ebp+var_A4] esp +
push ecx  +
mov ecx esp +
mov [ebp+var_B8] esp +
push offset aCrCr  +
call sub_4023D0  +
mov [ebp+var_BC] eax +
push esi  +
call sub_404940  +
add esp 8 +
mov [ebp+var_38] eax +
mov edx [ebp+var_38] +
mov [ebp+var_94] edx +
mov byte ptr [ebp+var_4] 2 +
sub esp 18h +
mov ecx esp +
mov [ebp+var_98] esp +
mov eax [ebp+arg_0] +
push eax  +
call sub_4021D0  +
mov [ebp+var_9C] eax +
mov byte ptr [ebp+var_4] 1 +
call loc_404B80  +
add esp 34h +
push 8  +
lea ecx [ebp+var_18] +
call sub_401C10  +
lea ecx [ebp+var_18] +
call sub_405EB0  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_30] +
call sub_401FA0  +
mov [ebp+var_3C] eax +
mov [ebp+var_34] 0 +
jmp loc_4184A0  +
mov ecx [ebp+var_34] +
add ecx 1 +
mov [ebp+var_34] ecx +
mov edx [ebp+var_34] +
cmp edx [ebp+var_3C] +
jnb loc_418577  +
lea ecx [ebp+var_24] +
call sub_418DE0  +
lea eax [ebp+var_24] +
push eax  +
sub esp 18h +
mov esi esp +
mov [ebp+var_A0] esp +
push ecx  +
mov ecx esp +
mov [ebp+var_C0] esp +
push offset aCrCr_0  +
call sub_4023D0  +
mov [ebp+var_A8] eax +
push esi  +
call sub_404940  +
add esp 8 +
mov [ebp+var_40] eax +
mov ecx [ebp+var_40] +
mov [ebp+var_AC] ecx +
mov byte ptr [ebp+var_4] 4 +
mov edx [ebp+var_34] +
push edx  +
lea ecx [ebp+var_30] +
call sub_401F80  +
sub esp 18h +
mov ecx esp +
mov [ebp+var_B0] esp +
push eax  +
call sub_406460  +
mov [ebp+var_B4] eax +
mov byte ptr [ebp+var_4] 3 +
call loc_404B80  +
add esp 34h +
lea ecx [ebp+var_24] +
call sub_401FA0  +
cmp eax 1 +
jnz loc_41854D  +
push 0  +
lea ecx [ebp+var_24] +
call sub_401F80  +
push eax  +
lea ecx [ebp+var_18] +
call sub_405E70  +
mov ecx eax +
call sub_406400  +
jmp loc_418572  +
push 1  +
lea ecx [ebp+var_24] +
call sub_401F80  +
push eax  +
push 0  +
lea ecx [ebp+var_24] +
call sub_401F80  +
push eax  +
lea ecx [ebp+var_18] +
call sub_405E70  +
mov ecx eax +
call sub_406440  +
jmp loc_418497  +
push offset aProductname_0  +
lea ecx [ebp+var_D8] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 5 +
lea eax [ebp+var_D8] +
push eax  +
lea ecx [ebp+var_18] +
call sub_405E90  +
push eax  +
mov ecx [ebp+arg_4] +
add ecx 8 +
call sub_406440  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_D8] +
call sub_4020E0  +
push offset aProductversion  +
lea ecx [ebp+var_F0] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 6 +
lea ecx [ebp+var_F0] +
push ecx  +
lea ecx [ebp+var_18] +
call sub_405E90  +
push eax  +
mov ecx [ebp+arg_4] +
add ecx 20h +
call sub_406440  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_F0] +
call sub_4020E0  +
push offset aProductbuild  +
lea ecx [ebp+var_108] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 7 +
lea edx [ebp+var_108] +
push edx  +
lea ecx [ebp+var_18] +
call sub_405E90  +
push eax  +
mov ecx [ebp+arg_4] +
add ecx 38h +
call sub_406440  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_108] +
call sub_4020E0  +
push offset aLocalestring  +
lea ecx [ebp+var_120] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 8 +
lea eax [ebp+var_120] +
push eax  +
lea ecx [ebp+var_18] +
call sub_405E90  +
push eax  +
mov ecx [ebp+arg_4] +
add ecx 50h +
call sub_406440  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_120] +
call sub_4020E0  +
push offset aHighbeamsessio  +
lea ecx [ebp+var_138] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 9 +
lea ecx [ebp+var_138] +
push ecx  +
lea ecx [ebp+var_18] +
call sub_405E90  +
push eax  +
mov ecx [ebp+arg_4] +
add ecx 68h +
call sub_406440  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_138] +
call sub_4020E0  +
push offset aLogfilename  +
lea ecx [ebp+var_150] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 0Ah +
lea edx [ebp+var_150] +
push edx  +
lea ecx [ebp+var_18] +
call sub_405E90  +
mov ecx eax +
call sub_4020B0  +
push eax  +
mov ecx [ebp+arg_4] +
add ecx 1C0h +
call loc_402C50  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_150] +
call sub_4020E0  +
push offset aStacktrace_0  +
lea ecx [ebp+var_168] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 0Bh +
lea eax [ebp+var_168] +
push eax  +
lea ecx [ebp+var_18] +
call sub_405E90  +
push eax  +
mov ecx [ebp+arg_4] +
add ecx 0C8h +
call sub_406440  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_168] +
call sub_4020E0  +
push offset aContext  +
lea ecx [ebp+var_180] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 0Ch +
lea ecx [ebp+var_180] +
push ecx  +
lea ecx [ebp+var_18] +
call sub_405E90  +
push eax  +
mov ecx [ebp+arg_4] +
add ecx 0F8h +
call sub_406440  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_180] +
call sub_4020E0  +
push offset aExceptioninfo  +
lea ecx [ebp+var_198] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 0Dh +
lea edx [ebp+var_198] +
push edx  +
lea ecx [ebp+var_18] +
call sub_405E90  +
push eax  +
mov ecx [ebp+arg_4] +
add ecx 0E0h +
call sub_406440  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_198] +
call sub_4020E0  +
push offset aCrsource  +
lea ecx [ebp+var_1B0] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 0Eh +
lea eax [ebp+var_1B0] +
push eax  +
lea ecx [ebp+var_18] +
call sub_405E90  +
push eax  +
mov ecx [ebp+arg_4] +
add ecx 98h +
call sub_406440  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_1B0] +
call sub_4020E0  +
push offset aSignaltype  +
lea ecx [ebp+var_1C8] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 0Fh +
lea ecx [ebp+var_1C8] +
push ecx  +
lea ecx [ebp+var_18] +
call sub_405E90  +
push eax  +
mov ecx [ebp+arg_4] +
add ecx 0B0h +
call sub_406440  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_1C8] +
call sub_4020E0  +
push offset aHblogsession_1  +
lea ecx [ebp+var_1E0] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 10h +
lea edx [ebp+var_1E0] +
push edx  +
lea ecx [ebp+var_18] +
call sub_405E90  +
push eax  +
mov ecx [ebp+arg_4] +
add ecx 1A0h +
call sub_406440  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_1E0] +
call sub_4020E0  +
push offset aProcessid  +
lea ecx [ebp+var_1F8] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 11h +
lea eax [ebp+var_1F8] +
push eax  +
lea ecx [ebp+var_18] +
call sub_405E90  +
push eax  +
call sub_404920  +
add esp 4 +
mov ecx [ebp+arg_4] +
mov [ecx+1D4h] eax +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_1F8] +
call sub_4020E0  +
push offset aThreadid  +
lea ecx [ebp+var_210] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 12h +
lea edx [ebp+var_210] +
push edx  +
lea ecx [ebp+var_18] +
call sub_405E90  +
push eax  +
call sub_404920  +
add esp 4 +
mov ecx [ebp+arg_4] +
mov [ecx+1D0h] eax +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_210] +
call sub_4020E0  +
movzx edx byte_430E40 +
cmp edx 1 +
jnz loc_418D9C  +
push offset sub_410480  +
push offset aParsedTheCrash  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset sub_410480  +
mov eax [ebp+arg_4] +
add eax 8 +
push eax  +
lea ecx [ebp+var_228] +
push ecx  +
call sub_404A60  +
add esp 8 +
mov [ebp+var_44] eax +
mov edx [ebp+var_44] +
mov [ebp+var_48] edx +
mov byte ptr [ebp+var_4] 13h +
mov eax [ebp+var_48] +
push eax  +
push offset aProductname_1  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411AC0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_228] +
call sub_402040  +
push offset sub_410480  +
mov ecx [ebp+arg_4] +
add ecx 20h +
push ecx  +
lea edx [ebp+var_240] +
push edx  +
call sub_404A60  +
add esp 8 +
mov [ebp+var_4C] eax +
mov eax [ebp+var_4C] +
mov [ebp+var_50] eax +
mov byte ptr [ebp+var_4] 14h +
mov ecx [ebp+var_50] +
push ecx  +
push offset aProductversi_0  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411AC0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_240] +
call sub_402040  +
push offset sub_410480  +
mov edx [ebp+arg_4] +
add edx 38h +
push edx  +
lea eax [ebp+var_258] +
push eax  +
call sub_404A60  +
add esp 8 +
mov [ebp+var_54] eax +
mov ecx [ebp+var_54] +
mov [ebp+var_58] ecx +
mov byte ptr [ebp+var_4] 15h +
mov edx [ebp+var_58] +
push edx  +
push offset aProductbuild_0  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411AC0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_258] +
call sub_402040  +
push offset sub_410480  +
mov eax [ebp+arg_4] +
add eax 50h +
push eax  +
lea ecx [ebp+var_270] +
push ecx  +
call sub_404A60  +
add esp 8 +
mov [ebp+var_5C] eax +
mov edx [ebp+var_5C] +
mov [ebp+var_60] edx +
mov byte ptr [ebp+var_4] 16h +
mov eax [ebp+var_60] +
push eax  +
push offset aApplicationloc  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411AC0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_270] +
call sub_402040  +
push offset sub_410480  +
mov ecx [ebp+arg_4] +
add ecx 68h +
push ecx  +
lea edx [ebp+var_288] +
push edx  +
call sub_404A60  +
add esp 8 +
mov [ebp+var_64] eax +
mov eax [ebp+var_64] +
mov [ebp+var_68] eax +
mov byte ptr [ebp+var_4] 17h +
mov ecx [ebp+var_68] +
push ecx  +
push offset aHighbeamsess_0  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411AC0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_288] +
call sub_402040  +
push offset sub_410480  +
mov ecx [ebp+arg_4] +
add ecx 1C0h +
call sub_4024B0  +
push eax  +
push offset aLogfilename_0  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411780  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset sub_410480  +
mov edx [ebp+arg_4] +
add edx 0C8h +
push edx  +
lea eax [ebp+var_2A0] +
push eax  +
call sub_404A60  +
add esp 8 +
mov [ebp+var_6C] eax +
mov ecx [ebp+var_6C] +
mov [ebp+var_70] ecx +
mov byte ptr [ebp+var_4] 18h +
mov edx [ebp+var_70] +
push edx  +
push offset aStacktrace_1  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411AC0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_2A0] +
call sub_402040  +
push offset sub_410480  +
mov eax [ebp+arg_4] +
add eax 0F8h +
push eax  +
lea ecx [ebp+var_2B8] +
push ecx  +
call sub_404A60  +
add esp 8 +
mov [ebp+var_74] eax +
mov edx [ebp+var_74] +
mov [ebp+var_78] edx +
mov byte ptr [ebp+var_4] 19h +
mov eax [ebp+var_78] +
push eax  +
push offset aContext_0  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411AC0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_2B8] +
call sub_402040  +
push offset sub_410480  +
mov ecx [ebp+arg_4] +
add ecx 0E0h +
push ecx  +
lea edx [ebp+var_2D0] +
push edx  +
call sub_404A60  +
add esp 8 +
mov [ebp+var_7C] eax +
mov eax [ebp+var_7C] +
mov [ebp+var_80] eax +
mov byte ptr [ebp+var_4] 1Ah +
mov ecx [ebp+var_80] +
push ecx  +
push offset aExceptioninf_0  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411AC0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_2D0] +
call sub_402040  +
push offset sub_410480  +
mov edx [ebp+arg_4] +
add edx 98h +
push edx  +
lea eax [ebp+var_2E8] +
push eax  +
call sub_404A60  +
add esp 8 +
mov [ebp+var_84] eax +
mov ecx [ebp+var_84] +
mov [ebp+var_88] ecx +
mov byte ptr [ebp+var_4] 1Bh +
mov edx [ebp+var_88] +
push edx  +
push offset aCrsource_0  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411AC0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_2E8] +
call sub_402040  +
push offset sub_410480  +
mov eax [ebp+arg_4] +
add eax 0B0h +
push eax  +
lea ecx [ebp+var_300] +
push ecx  +
call sub_404A60  +
add esp 8 +
mov [ebp+var_8C] eax +
mov edx [ebp+var_8C] +
mov [ebp+var_90] edx +
mov byte ptr [ebp+var_4] 1Ch +
mov eax [ebp+var_90] +
push eax  +
push offset aSignaltype_0  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411AC0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_300] +
call sub_402040  +
push offset sub_410480  +
mov ecx [ebp+arg_4] +
mov edx [ecx+1D4h] +
push edx  +
push offset aProcessid_0  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@K@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset sub_410480  +
mov eax [ebp+arg_4] +
mov ecx [eax+1D0h] +
push ecx  +
push offset aThreadid_0  +
push offset unk_430D90  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@K@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_18] +
call sub_4059F0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_24] +
call sub_401FC0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_30] +
call sub_401FC0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421070  +
mov eax large fs:0 +
push eax  +
push ecx  +
push esi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
call nullsub_1  +
mov ecx [ebp+var_10] +
call sub_402DD0  +
mov eax [eax] +
push eax  +
mov ecx [ebp+var_10] +
call sub_401760  +
mov ecx [eax] +
push ecx  +
mov ecx [ebp+var_10] +
call sub_402DE0  +
mov ecx [ebp+var_10] +
call sub_401760  +
mov esi eax +
mov ecx [ebp+var_10] +
call sub_402DD0  +
mov edx [esi] +
mov [eax] edx +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_422348  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_3C] 0 +
mov [ebp+lpBuffer] 0 +
mov [ebp+dwBufferLength] 0 +
push 0  +
lea eax [ebp+dwBufferLength] +
push eax  +
mov ecx [ebp+lpBuffer] +
push ecx  +
push 16h  +
mov edx [ebp+hRequest] +
push edx  +
call ds:HttpQueryInfoW  +
test eax eax +
jnz loc_418F36  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_418F2F  +
mov eax [ebp+dwBufferLength] +
add eax 1 +
xor ecx ecx +
mov edx 2 +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_41ECAD  +
add esp 4 +
mov [ebp+var_40] eax +
mov eax [ebp+var_40] +
mov [ebp+lpBuffer] eax +
mov ecx [ebp+dwBufferLength] +
add ecx 1 +
cmp ecx 7FFFFFFFh +
jnb loc_418F03  +
mov edx [ebp+dwBufferLength] +
add edx 1 +
mov [ebp+var_38] edx +
jmp loc_418F0A  +
mov [ebp+var_38] 7FFFFFFFh +
mov eax [ebp+var_38] +
mov [ebp+var_34] eax +
cmp [ebp+var_34] 0 +
jz loc_418F2D  +
mov ecx [ebp+var_34] +
sub ecx 1 +
mov [ebp+var_34] ecx +
xor edx edx +
mov eax [ebp+var_34] +
mov ecx [ebp+lpBuffer] +
mov [ecx+eax*2] dx +
jmp loc_418F10  +
jmp loc_418F31  +
jmp loc_418F36  +
jmp loc_418E9D  +
push offset a1_0  +
lea ecx [ebp+var_28] +
call loc_4062F0  +
mov [ebp+var_4] 0 +
cmp [ebp+lpBuffer] 0 +
jz loc_418F5C  +
mov edx [ebp+lpBuffer] +
push edx  +
lea ecx [ebp+var_28] +
call sub_407790  +
lea eax [ebp+var_28] +
push eax  +
mov ecx [ebp+arg_0] +
call sub_402750  +
mov ecx [ebp+var_3C] +
or ecx 1 +
mov [ebp+var_3C] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_28] +
call sub_402040  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4220A8  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 64h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_14] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_54] 0 +
mov [ebp+var_4] 2 +
lea ecx [ebp+var_2C] +
call sub_4027D0  +
mov byte ptr [ebp+var_4] 3 +
mov eax [ebp+lpOptional] +
push eax  +
lea ecx [ebp+var_44] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 4 +
mov byte ptr [ebp+var_4] 5 +
push 0  +
push 0  +
push 0  +
push 0  +
push offset szAgent  +
call ds:InternetOpenW  +
mov [ebp+hInternet] eax +
cmp [ebp+hInternet] 0 +
jz loc_4190E1  +
push 0  +
push 0  +
push 3  +
push 0  +
push 0  +
movzx ecx [ebp+arg_50] +
push ecx  +
lea ecx [ebp+arg_4] +
call sub_4024C0  +
push eax  +
mov edx [ebp+hInternet] +
push edx  +
call ds:InternetConnectW  +
mov [ebp+hConnect] eax +
cmp [ebp+hConnect] 0 +
jz loc_4190D7  +
push 0  +
push 8484F700h  +
push 0  +
push 0  +
push 0  +
lea ecx [ebp+arg_1C] +
call sub_4024C0  +
push eax  +
push offset szVerb  +
mov eax [ebp+hConnect] +
push eax  +
call ds:HttpOpenRequestW  +
mov [ebp+hRequest] eax +
cmp [ebp+hRequest] 0 +
jz loc_4190CD  +
lea ecx [ebp+var_44] +
call sub_402540  +
push eax  +
mov ecx [ebp+lpOptional] +
push ecx  +
lea ecx [ebp+arg_34] +
call sub_402540  +
push eax  +
lea ecx [ebp+arg_34] +
call sub_4024C0  +
push eax  +
mov edx [ebp+hRequest] +
push edx  +
call ds:HttpSendRequestW  +
mov [ebp+var_5C] eax +
mov eax [ebp+hRequest] +
push eax  +
lea ecx [ebp+var_74] +
push ecx  +
call sub_418E60  +
add esp 8 +
mov [ebp+var_58] eax +
mov edx [ebp+var_58] +
push edx  +
lea ecx [ebp+var_2C] +
call sub_4031A0  +
lea ecx [ebp+var_74] +
call sub_402040  +
mov eax [ebp+hRequest] +
push eax  +
call ds:InternetCloseHandle  +
mov ecx [ebp+hConnect] +
push ecx  +
call ds:InternetCloseHandle  +
mov edx [ebp+hInternet] +
push edx  +
call ds:InternetCloseHandle  +
jmp loc_4190F3  +
mov eax offset loc_4190FC +
retn   +
mov [ebp+var_4] 4 +
jmp loc_419103  +
mov dword ptr [ebp-4] 4 +
lea eax [ebp+var_2C] +
push eax  +
mov ecx [ebp+arg_0] +
call sub_402750  +
mov ecx [ebp+var_54] +
or ecx 1 +
mov [ebp+var_54] ecx +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_44] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_2C] +
call sub_402040  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+arg_4] +
call sub_402040  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+arg_1C] +
call sub_402040  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_34] +
call sub_402040  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_14] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
call sub_403F30  +
add esp 4 +
push eax  +
mov ecx [ebp+var_4] +
call sub_403AD0  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4220D8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_14] ecx +
movzx eax [ebp+var_D] +
push eax  +
lea ecx [ebp-0Eh] +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_401760  +
mov ecx eax +
call sub_41D550  +
push eax  +
mov ecx [ebp+var_14] +
call sub_403F10  +
mov [ebp+var_4] 0 +
push 0  +
push 0  +
mov ecx [ebp+var_14] +
call sub_4024D0  +
mov edx ds:dword_428020 +
push edx  +
push 0  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_14] +
call sub_403010  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4221BB  +
mov eax large fs:0 +
push eax  +
sub esp 154h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_64] 0 +
mov [ebp+var_4] 1 +
push 8  +
lea ecx [ebp+var_18] +
call sub_401C10  +
push ecx  +
mov ecx esp +
mov [ebp+var_C4] esp +
lea eax [ebp+arg_18] +
push eax  +
call sub_402490  +
mov [ebp+var_C8] eax +
lea ecx [ebp+var_18] +
push ecx  +
call loc_40CAC0  +
add esp 8 +
mov [ebp+var_CC] eax +
mov byte ptr [ebp+var_4] 2 +
push offset aCrcnurl  +
lea ecx [ebp+var_118] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 3 +
lea edx [ebp+var_118] +
push edx  +
lea ecx [ebp+var_18] +
call sub_405E90  +
mov ecx eax +
call sub_402540  +
test eax eax +
jbe loc_41933C  +
push offset aCrcnurl_0  +
lea ecx [ebp+var_100] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 4 +
mov eax [ebp+var_64] +
or eax 1 +
mov [ebp+var_64] eax +
lea ecx [ebp+var_100] +
push ecx  +
lea ecx [ebp+var_18] +
call sub_405E90  +
push eax  +
lea edx [ebp+var_160] +
push edx  +
call sub_404A60  +
add esp 8 +
mov [ebp+var_70] eax +
mov eax [ebp+var_70] +
mov [ebp+var_74] eax +
mov [ebp+var_4] 5 +
mov ecx [ebp+var_64] +
or ecx 2 +
mov [ebp+var_64] ecx +
mov edx [ebp+var_74] +
mov [ebp+var_68] edx +
jmp loc_41935E  +
push offset aHttpsCrlogCrcn  +
lea ecx [ebp+var_148] +
call loc_4062F0  +
mov [ebp+var_78] eax +
mov eax [ebp+var_64] +
or eax 4 +
mov [ebp+var_64] eax +
mov ecx [ebp+var_78] +
mov [ebp+var_68] ecx +
mov edx [ebp+var_68] +
mov [ebp+var_7C] edx +
mov eax [ebp+var_7C] +
push eax  +
lea ecx [ebp+var_60] +
call sub_402750  +
mov [ebp+var_4] 6 +
mov ecx [ebp+var_64] +
and ecx 4 +
jz loc_41938E  +
and [ebp+var_64] 0FFFFFFFBh +
lea ecx [ebp+var_148] +
call sub_402040  +
mov byte ptr [ebp+var_4] 7 +
mov edx [ebp+var_64] +
and edx 2 +
jz loc_4193A9  +
and [ebp+var_64] 0FFFFFFFDh +
lea ecx [ebp+var_160] +
call sub_402040  +
mov byte ptr [ebp+var_4] 8 +
mov eax [ebp+var_64] +
and eax 1 +
jz loc_4193C4  +
and [ebp+var_64] 0FFFFFFFEh +
lea ecx [ebp+var_100] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 9 +
lea ecx [ebp+var_118] +
call sub_4020E0  +
push offset aCrcnport  +
lea ecx [ebp+var_E8] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 0Ah +
lea ecx [ebp+var_E8] +
push ecx  +
lea ecx [ebp+var_18] +
call sub_405E90  +
mov ecx eax +
call sub_402540  +
test eax eax +
jbe loc_419443  +
push offset aCrcnport_0  +
lea ecx [ebp+var_130] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 0Bh +
mov edx [ebp+var_64] +
or edx 8 +
mov [ebp+var_64] edx +
lea eax [ebp+var_130] +
push eax  +
lea ecx [ebp+var_18] +
call sub_405E90  +
mov ecx eax +
call sub_4020B0  +
push eax  +
call ds:atoi  +
add esp 4 +
mov [ebp+var_6C] eax +
jmp loc_41944A  +
mov [ebp+var_6C] 1BBh +
mov ecx [ebp+var_6C] +
mov [ebp+var_80] ecx +
mov [ebp+var_4] 0Ah +
mov edx [ebp+var_64] +
and edx 8 +
jz loc_41946E  +
and [ebp+var_64] 0FFFFFFF7h +
lea ecx [ebp+var_130] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 9 +
lea ecx [ebp+var_E8] +
call sub_4020E0  +
mov eax [ebp+var_80] +
push eax  +
lea ecx [ebp+arg_0] +
call sub_4020B0  +
push eax  +
sub esp 18h +
mov ecx esp +
mov [ebp+var_D0] esp +
push offset aContentTypeApp  +
call loc_4062F0  +
mov [ebp+var_84] eax +
mov ecx [ebp+var_84] +
mov [ebp+var_90] ecx +
mov byte ptr [ebp+var_4] 0Ch +
sub esp 18h +
mov ecx esp +
mov [ebp+var_94] esp +
push offset aCrcnPersistmac  +
call loc_4062F0  +
mov [ebp+var_88] eax +
mov edx [ebp+var_88] +
mov [ebp+var_98] edx +
mov byte ptr [ebp+var_4] 0Dh +
sub esp 18h +
mov ecx esp +
mov [ebp+var_9C] esp +
lea eax [ebp+var_60] +
push eax  +
call sub_4191B0  +
mov [ebp+var_A0] eax +
lea ecx [ebp+var_48] +
push ecx  +
mov byte ptr [ebp+var_4] 9 +
call sub_418FA0  +
add esp 54h +
mov [ebp+var_A4] eax +
mov byte ptr [ebp+var_4] 0Eh +
sub esp 18h +
mov ecx esp +
mov [ebp+var_A8] esp +
push offset aMachine_id_per  +
call sub_4021D0  +
mov [ebp+var_8C] eax +
mov edx [ebp+var_8C] +
mov [ebp+var_AC] edx +
mov byte ptr [ebp+var_4] 0Fh +
sub esp 18h +
mov ecx esp +
mov [ebp+var_B0] esp +
lea eax [ebp+var_48] +
push eax  +
call sub_4191B0  +
mov [ebp+var_B4] eax +
lea ecx [ebp+var_30] +
push ecx  +
mov byte ptr [ebp+var_4] 0Eh +
call sub_404F00  +
add esp 34h +
mov [ebp+var_B8] eax +
mov byte ptr [ebp+var_4] 10h +
lea ecx [ebp+var_30] +
call sub_4020B0  +
push ecx  +
mov ecx esp +
mov [ebp+var_BC] esp +
push eax  +
call sub_402330  +
mov [ebp+var_C0] eax +
call sub_4108C0  +
add esp 4 +
mov byte ptr [ebp+var_4] 0Eh +
lea ecx [ebp+var_30] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 9 +
lea ecx [ebp+var_48] +
call sub_402040  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_60] +
call sub_402040  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_18] +
call sub_4059F0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+arg_0] +
call sub_4020E0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_18] +
call sub_402310  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_4] +
push eax  +
call sub_403F30  +
add esp 4 +
push eax  +
mov ecx [ebp+var_4] +
call sub_419180  +
mov ecx [ebp+var_4] +
call sub_403FC0  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+arg_0] +
push eax  +
call sub_403F30  +
add esp 4 +
push eax  +
movzx ecx [ebp+var_1] +
push ecx  +
mov ecx [ebp+var_8] +
call sub_419600  +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_422210  +
mov eax large fs:0 +
push eax  +
sub esp 48h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_44] ecx +
mov ecx [ebp+var_44] +
call sub_4027D0  +
mov [ebp+var_4] 0 +
lea ecx [ebp+var_28] +
call sub_4027D0  +
mov byte ptr [ebp+var_4] 1 +
jmp loc_4196B1  +
mov eax [ebp+arg_0] +
add eax 2 +
mov [ebp+arg_0] eax +
mov ecx [ebp+arg_0] +
movzx edx word ptr [ecx] +
test edx edx +
jz loc_4196CC  +
mov eax [ebp+arg_0] +
movzx ecx word ptr [eax] +
push ecx  +
lea ecx [ebp+var_28] +
call sub_41A780  +
jmp loc_4196A8  +
lea ecx [ebp+var_40] +
call sub_4027D0  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_54] +
call sub_401980  +
mov [ebp+var_48] eax +
mov edx [ebp+var_48] +
mov [ebp+var_4C] edx +
mov byte ptr [ebp+var_4] 3 +
mov eax [ebp+var_4C] +
push eax  +
lea ecx [ebp+var_28] +
call sub_402540  +
push eax  +
lea ecx [ebp+var_28] +
call sub_4024C0  +
push eax  +
lea ecx [ebp+var_40] +
push ecx  +
call sub_41CC10  +
add esp 10h +
push eax  +
mov ecx [ebp+var_44] +
call sub_419980  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_54] +
call sub_4019D0  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_40] +
call sub_402040  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_28] +
call sub_402040  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_44] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_422248  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_18] ecx +
mov eax [ebp+arg_4] +
push eax  +
call sub_403F30  +
add esp 4 +
push eax  +
lea ecx [ebp-11h] +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_40FFD0  +
push eax  +
mov ecx [ebp+var_18] +
call sub_4106D0  +
mov [ebp+var_4] 0 +
mov byte ptr [ebp+var_4] 1 +
movzx edx [ebp+var_12] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_18] +
call sub_419A80  +
jmp loc_4197F6  +
mov ecx [ebp-18h] +
call sub_4073B0  +
push 0  +
push 0  +
call _CxxThrowException  +
mov eax offset loc_4197FF +
retn   +
mov [ebp+var_4] 0 +
jmp loc_419806  +
mov dword ptr [ebp-4] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_18] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4220D8  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_14] ecx +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+var_14] +
call sub_419630  +
mov [ebp+var_4] 0 +
push 0  +
push 0  +
mov ecx [ebp+var_14] +
call sub_4024D0  +
xor ecx ecx +
mov [ebp+var_D] cl +
movzx edx [ebp+var_D] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
call sub_419EB0  +
add esp 4 +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_419EB0  +
add esp 4 +
push eax  +
mov ecx [ebp+var_14] +
call sub_41CBE0  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_422278  +
mov eax large fs:0 +
push eax  +
sub esp 20h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_2C] 0 +
lea ecx [ebp+var_28] +
call sub_402230  +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_4] +
push eax  +
call sub_401920  +
add esp 4 +
mov esi eax +
mov ecx [ebp+arg_8] +
call sub_402540  +
add esi eax +
push esi  +
lea ecx [ebp+var_28] +
call sub_408C10  +
mov ecx [ebp+arg_4] +
push ecx  +
lea ecx [ebp+var_28] +
call sub_412460  +
mov edx [ebp+arg_8] +
push edx  +
lea ecx [ebp+var_28] +
call sub_412440  +
lea eax [ebp+var_28] +
push eax  +
mov ecx [ebp+arg_0] +
call sub_402120  +
mov ecx [ebp+var_2C] +
or ecx 1 +
mov [ebp+var_2C] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_28] +
call sub_4020E0  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_419EC0  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4222A0  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_18] ecx +
mov ecx [ebp+var_18] +
call sub_4091E0  +
mov [ebp+var_14] eax +
mov eax [ebp+var_14] +
push eax  +
call sub_4083C0  +
add esp 4 +
mov byte ptr [eax] 0 +
mov ecx [ebp+var_14] +
push ecx  +
call sub_407C00  +
add esp 4 +
mov byte ptr [eax] 0 +
mov [ebp+var_4] 0 +
mov edx [ebp+var_14] +
push edx  +
call sub_407BE0  +
add esp 4 +
mov [ebp+var_1C] eax +
mov eax [ebp+arg_0] +
push eax  +
call sub_403F30  +
add esp 4 +
push eax  +
mov ecx [ebp+var_1C] +
push ecx  +
call sub_403F30  +
add esp 4 +
push eax  +
mov ecx [ebp+var_18] +
call sub_401760  +
mov ecx eax +
call sub_41A030  +
jmp loc_419A54  +
mov edx [ebp-14h] +
push edx  +
mov ecx [ebp-18h] +
call sub_4091C0  +
push 0  +
push 0  +
call _CxxThrowException  +
mov eax offset loc_419A5D +
retn   +
mov [ebp+var_4] 0FFFFFFFFh +
jmp loc_419A64  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp+var_14] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov [ebp+var_4] ecx +
movzx eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+var_4] +
call sub_401760  +
mov ecx [eax] +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_4073D0  +
mov edx [eax] +
push edx  +
mov ecx [ebp+var_4] +
call sub_419B60  +
mov esi eax +
mov ecx [ebp+var_4] +
call sub_4073D0  +
mov [eax] esi +
mov ecx [ebp+arg_0] +
call sub_409240  +
mov esi eax +
mov ecx [ebp+var_4] +
call sub_402DD0  +
mov [eax] esi +
mov ecx [ebp+var_4] +
call sub_4073D0  +
mov eax [eax] +
push eax  +
call sub_407C00  +
add esp 4 +
movsx ecx byte ptr [eax] +
test ecx ecx +
jnz loc_419B25  +
mov ecx [ebp+var_4] +
call sub_4073D0  +
mov edx [eax] +
push edx  +
call sub_408380  +
add esp 4 +
mov esi eax +
mov ecx [ebp+var_4] +
call sub_4024B0  +
mov [eax] esi +
mov ecx [ebp+var_4] +
call sub_4073D0  +
mov eax [eax] +
push eax  +
call sub_4083A0  +
add esp 4 +
mov esi eax +
mov ecx [ebp+var_4] +
call sub_4073E0  +
mov [eax] esi +
jmp loc_419B51  +
mov ecx [ebp+var_4] +
call sub_401760  +
mov esi eax +
mov ecx [ebp+var_4] +
call sub_4024B0  +
mov ecx [esi] +
mov [eax] ecx +
mov ecx [ebp+var_4] +
call sub_401760  +
mov esi eax +
mov ecx [ebp+var_4] +
call sub_4073E0  +
mov edx [esi] +
mov [eax] edx +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4222C0  +
mov eax large fs:0 +
push eax  +
push ecx  +
sub esp 28h +
push ebx  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] esp +
mov [ebp+var_1C] ecx +
mov ecx [ebp+var_1C] +
call sub_401760  +
mov eax [eax] +
mov [ebp+var_20] eax +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_407C00  +
add esp 4 +
movsx edx byte ptr [eax] +
test edx edx +
jnz loc_419CBF  +
movzx eax [ebp+var_11] +
push eax  +
movzx ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call sub_407BE0  +
add esp 4 +
push eax  +
mov ecx [ebp+var_1C] +
call sub_419CE0  +
mov [ebp+var_18] eax +
mov eax [ebp+var_18] +
mov ecx [ebp+arg_4] +
mov [eax+4] ecx +
mov edx [ebp+arg_0] +
push edx  +
call sub_4083C0  +
add esp 4 +
mov ecx [ebp+var_18] +
mov dl [eax] +
mov [ecx+0Ch] dl +
mov eax [ebp+var_20] +
push eax  +
call sub_407C00  +
add esp 4 +
movsx ecx byte ptr [eax] +
test ecx ecx +
jz loc_419C0B  +
mov edx [ebp+var_18] +
mov [ebp+var_20] edx +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_0] +
push eax  +
call sub_403F30  +
add esp 4 +
mov [ebp+var_24] eax +
movzx ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+var_18] +
push edx  +
mov eax [ebp+var_24] +
mov ecx [eax] +
push ecx  +
mov ecx [ebp+var_1C] +
call sub_419B60  +
mov [ebp+var_2C] eax +
mov edx [ebp+var_18] +
push edx  +
call sub_403F30  +
add esp 4 +
mov [ebp+var_28] eax +
mov eax [ebp+var_28] +
mov ecx [ebp+var_2C] +
mov [eax] ecx +
mov edx [ebp+arg_0] +
push edx  +
call sub_407BF0  +
add esp 4 +
mov [ebp+var_30] eax +
movzx eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+var_18] +
push ecx  +
mov edx [ebp+var_30] +
mov eax [edx] +
push eax  +
mov ecx [ebp+var_1C] +
call sub_419B60  +
mov [ebp+var_38] eax +
mov ecx [ebp+var_18] +
push ecx  +
call sub_407BF0  +
add esp 4 +
mov [ebp+var_34] eax +
mov edx [ebp+var_34] +
mov eax [ebp+var_38] +
mov [edx] eax +
jmp loc_419CAF  +
mov ecx [ebp-20h] +
push ecx  +
mov ecx [ebp-1Ch] +
call sub_4073F0  +
push 0  +
push 0  +
call _CxxThrowException  +
mov eax offset loc_419CB8 +
retn   +
mov [ebp+var_4] 0FFFFFFFFh +
jmp loc_419CBF  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp+var_20] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_4199A0  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_4222EC  +
mov eax large fs:0 +
push eax  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax TlsIndex +
mov ecx large fs:2Ch +
mov edx [ecx+eax*4] +
mov eax dword_430F04 +
cmp eax [edx+4] +
jle loc_419D86  +
push offset dword_430F04  +
call sub_41F074  +
add esp 4 +
cmp dword_430F04 0FFFFFFFFh +
jnz loc_419D86  +
mov [ebp+var_4] 0 +
mov ecx offset unk_430EFC +
call sub_41A210  +
push offset sub_422CC0  +
call sub_41EF0E  +
add esp 4 +
mov [ebp+var_4] 0FFFFFFFFh +
push offset dword_430F04  +
call sub_41F035  +
add esp 4 +
mov eax offset unk_430EFC +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_42231C  +
mov eax large fs:0 +
push eax  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax TlsIndex +
mov ecx large fs:2Ch +
mov edx [ecx+eax*4] +
mov eax dword_430F10 +
cmp eax [edx+4] +
jle loc_419E26  +
push offset dword_430F10  +
call sub_41F074  +
add esp 4 +
cmp dword_430F10 0FFFFFFFFh +
jnz loc_419E26  +
mov [ebp+var_4] 0 +
mov ecx offset unk_430F08 +
call sub_41A250  +
push offset sub_422CD0  +
call sub_41EF0E  +
add esp 4 +
mov [ebp+var_4] 0FFFFFFFFh +
push offset dword_430F10  +
call sub_41F035  +
add esp 4 +
mov eax offset unk_430F08 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
movzx eax byte ptr [ebp-1] +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call sub_419E60  +
add esp 0Ch +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_403F70  +
add esp 8 +
movzx edx al +
test edx edx +
jz loc_419E80  +
call ds:__imp_terminate  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_41A1B0  +
add esp 8 +
pop ebp  +
retn   +
***
lea ecx [ebp+arg_0] +
call sub_41D820  +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_422348  +
mov eax large fs:0 +
push eax  +
sub esp 34h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_2C] ecx +
lea ecx [ebp+var_32+1] +
call sub_401760  +
push eax  +
lea eax [ebp+var_3C] +
push eax  +
mov ecx [ebp+arg_0] +
call sub_402FE0  +
mov ecx [eax] +
push ecx  +
lea edx [ebp+var_40] +
push edx  +
mov ecx [ebp+arg_0] +
call sub_402570  +
mov eax [eax] +
push eax  +
lea ecx [ebp+var_28] +
call sub_419830  +
mov [ebp+var_4] 0 +
mov [ebp+var_32+2] 0 +
jmp loc_419F33  +
mov ecx [ebp+var_32+2] +
add ecx 1 +
mov [ebp+var_32+2] ecx +
lea ecx [ebp+var_28] +
call sub_402540  +
cmp [ebp+var_32+2] eax +
jnb loc_419F6A  +
mov edx [ebp+var_32+2] +
push edx  +
lea ecx [ebp+var_28] +
call sub_402550  +
movzx eax word ptr [eax] +
cmp eax 2Fh +
jnz loc_419F68  +
mov ecx [ebp+var_32+2] +
push ecx  +
lea ecx [ebp+var_28] +
call sub_402550  +
mov edx 5Ch +
mov [eax] dx +
jmp loc_419F2A  +
mov ecx [ebp+var_2C] +
call sub_402540  +
test eax eax +
jbe loc_419FE2  +
lea ecx [ebp+var_28] +
call sub_402540  +
test eax eax +
jbe loc_419FE2  +
mov ecx [ebp+var_2C] +
call sub_41CF60  +
movzx eax word ptr [eax] +
cmp eax 3Ah +
jz loc_419FE2  +
mov ecx [ebp+var_2C] +
call sub_41CF60  +
movzx ecx word ptr [eax] +
cmp ecx 2Fh +
jz loc_419FE2  +
mov ecx [ebp+var_2C] +
call sub_41CF60  +
movzx edx word ptr [eax] +
cmp edx 5Ch +
jz loc_419FE2  +
push 0  +
lea ecx [ebp+var_28] +
call sub_402550  +
movzx eax word ptr [eax] +
cmp eax 2Fh +
jz loc_419FE2  +
push 0  +
lea ecx [ebp+var_28] +
call sub_402550  +
movzx ecx word ptr [eax] +
cmp ecx 5Ch +
jz loc_419FE2  +
push 5Ch  +
push 1  +
mov ecx [ebp+var_2C] +
call sub_402690  +
lea edx [ebp+var_28] +
push edx  +
mov ecx [ebp+var_2C] +
call sub_41CE20  +
mov eax [ebp+var_2C] +
mov [ebp+var_38] eax +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_28] +
call sub_402040  +
mov eax [ebp+var_38] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_4] +
push eax  +
call sub_403F30  +
add esp 4 +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+var_4] +
push edx  +
call sub_41A0F0  +
add esp 0Ch +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_422381  +
mov eax large fs:0 +
push eax  +
sub esp 10h +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_18] ecx +
mov eax [ebp+arg_0] +
push eax  +
push 30h  +
call sub_4011D0  +
add esp 8 +
mov [ebp+var_10] eax +
mov [ebp+var_4] 0 +
cmp [ebp+var_10] 0 +
jz loc_41A0C0  +
mov ecx [ebp+arg_4] +
push ecx  +
call sub_403F30  +
add esp 4 +
push eax  +
mov ecx [ebp+var_10] +
call sub_41A350  +
mov [ebp+var_14] eax +
jmp loc_41A0C7  +
mov [ebp+var_14] 0 +
mov edx [ebp+var_14] +
mov [ebp+var_1C] edx +
mov [ebp+var_4] 0FFFFFFFFh +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_8] +
push eax  +
call sub_403F30  +
add esp 4 +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_41A060  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_4085D0  +
add esp 8 +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4205D0  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_4] +
jz loc_41A1A0  +
mov ecx [ebp+arg_0] +
mov [ebp+var_10] ecx +
mov edx [ebp+var_10] +
add edx 10h +
mov [ebp+var_18] edx +
mov eax [ebp+arg_4] +
mov [ebp+var_14] eax +
jmp loc_41A186  +
mov ecx [ebp+var_10] +
add ecx 1 +
mov [ebp+var_10] ecx +
mov edx [ebp+var_14] +
add edx 1 +
mov [ebp+var_14] edx +
mov eax [ebp+var_10] +
cmp eax [ebp+var_18] +
jz loc_41A1A0  +
mov ecx [ebp+var_14] +
push ecx  +
mov edx [ebp+var_10] +
push edx  +
call sub_41A110  +
add esp 8 +
jmp loc_41A174  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push eax  +
call sub_403F30  +
add esp 4 +
mov ecx [eax] +
mov [ebp+var_8] ecx +
mov edx [ebp+arg_4] +
push edx  +
call sub_403F30  +
add esp 4 +
mov ecx [ebp+arg_0] +
mov edx [eax] +
mov [ecx] edx +
lea eax [ebp+var_8] +
push eax  +
call sub_403F30  +
add esp 4 +
mov ecx [ebp+arg_4] +
mov edx [eax] +
mov [ecx] edx +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
push eax  +
push 8  +
call sub_4011D0  +
add esp 8 +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_41A23D  +
mov ecx [ebp+var_4] +
call sub_41A3C0  +
mov [ebp+var_C] eax +
jmp loc_41A244  +
mov [ebp+var_C] 0 +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
push eax  +
push 8  +
call sub_4011D0  +
add esp 8 +
mov [ebp+var_4] eax +
cmp [ebp+var_4] 0 +
jz loc_41A27D  +
mov ecx [ebp+var_4] +
call sub_41A3F0  +
mov [ebp+var_C] eax +
jmp loc_41A284  +
mov [ebp+var_C] 0 +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_4223A8  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov eax [ebp+arg_C] +
push eax  +
mov ecx [ebp+var_10] +
call sub_419630  +
mov [ebp+var_4] 0 +
push 0  +
push 0  +
mov ecx [ebp+var_10] +
call sub_4024D0  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_10] +
call sub_403010  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 10h  +
***
sub esp 8 +
mov [ebp+var_8] ecx +
movzx eax [ebp+var_1] +
push eax  +
lea ecx [ebp-2] +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_401760  +
mov ecx eax +
call sub_41D550  +
push eax  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_8] +
call sub_419770  +
mov eax [ebp+var_8] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4223D8  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_10] +
call sub_406460  +
mov [ebp+var_4] 0 +
mov ecx [ebp+arg_0] +
add ecx 18h +
push ecx  +
mov ecx [ebp+var_10] +
add ecx 18h +
call sub_406460  +
mov [ebp+var_4] 0FFFFFFFFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_41A420  +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_426CA4 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+4] 3 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_41A420  +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_426CC8 +
mov ecx [ebp+var_4] +
mov dword ptr [ecx+4] 7 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] 0 +
call sub_41D7E0  +
mov ecx [ebp+var_4] +
mov [ecx+4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov edx [ebp+var_4] +
mov eax [ebp+arg_4] +
mov [edx+4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ecx  +
mov [ebp+var_4] ecx +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_41A4D0  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov dword ptr [eax] offset off_426C88 +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_402040  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
sub esp 0Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_4] eax +
push 4  +
lea ecx [ebp+var_8] +
call sub_401C10  +
mov ecx [ebp+arg_4] +
call sub_407DD0  +
push eax  +
mov eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_8] +
call sub_40A6D0  +
mov ecx [ebp+arg_4] +
push ecx  +
lea edx [ebp+var_8] +
push edx  +
call sub_41A510  +
add esp 8 +
mov [ebp+var_9] al +
lea ecx [ebp+var_8] +
call sub_402310  +
mov al [ebp+var_9] +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 8 +
push ecx  +
push esi  +
mov ecx [ebp+arg_4] +
call sub_41CFB0  +
push eax  +
mov ecx [ebp+arg_0] +
call sub_41CFB0  +
mov ecx eax +
call sub_41A5A0  +
movzx eax al +
test eax eax +
jz loc_41A613  +
mov ecx [ebp+arg_0] +
call sub_41D820  +
mov esi eax +
mov ecx [ebp+arg_4] +
call sub_41D820  +
cmp esi eax +
jnz loc_41A613  +
mov [ebp+var_4] 1 +
jmp loc_41A61A  +
mov [ebp+var_4] 0 +
mov al byte ptr [ebp+var_4] +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_C] ecx +
push 4  +
lea ecx [ebp+var_8] +
call sub_41CE00  +
mov eax [ebp+var_C] +
mov ecx [eax] +
mov [ebp+var_8] ecx +
mov edx [ebp+arg_4] +
push edx  +
lea ecx [ebp+var_8] +
call sub_41A7A0  +
mov eax [eax] +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push ecx  +
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
call sub_41A740  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov [ebp+var_4] ecx +
movzx eax [ebp+arg_0] +
push eax  +
push 1  +
mov ecx [ebp+var_4] +
call sub_402690  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
neg eax  +
push eax  +
mov ecx [ebp+var_4] +
call sub_41A760  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_41A4B0  +
mov eax [ebp+arg_0] +
and eax 1 +
jz loc_41A7E5  +
push 8  +
mov ecx [ebp+var_4] +
push ecx  +
call sub_41EC9F  +
add esp 8 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_41A4D0  +
mov eax [ebp+arg_0] +
and eax 1 +
jz loc_41A815  +
push 8  +
mov ecx [ebp+var_4] +
push ecx  +
call sub_41EC9F  +
add esp 8 +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_4225A6  +
mov eax large fs:0 +
push eax  +
sub esp 2B8h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
push 4  +
lea ecx [ebp+var_14] +
call sub_401C10  +
lea eax [ebp+var_14] +
push eax  +
call loc_401A20  +
add esp 4 +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_14] +
call sub_40B9D0  +
movzx ecx al +
test ecx ecx +
jz loc_41A89B  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_14] +
call sub_402310  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_4020E0  +
jmp loc_41B3CA  +
push 4  +
lea ecx [ebp+var_30] +
call sub_401C10  +
lea edx [ebp+var_30] +
push edx  +
call sub_410F90  +
add esp 4 +
mov byte ptr [ebp+var_4] 2 +
push 4  +
lea ecx [ebp+var_18] +
call sub_401C10  +
lea ecx [ebp+arg_0] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+var_120] +
call sub_402330  +
mov byte ptr [ebp+var_4] 3 +
lea eax [ebp+var_120] +
push eax  +
push offset a__3  +
lea ecx [ebp+var_30] +
push ecx  +
push offset aCrlog_  +
lea edx [ebp+var_134] +
push edx  +
call sub_41A680  +
add esp 0Ch +
mov [ebp+var_22C] eax +
mov eax [ebp+var_22C] +
mov [ebp+var_24C] eax +
mov byte ptr [ebp+var_4] 4 +
mov ecx [ebp+var_24C] +
push ecx  +
lea edx [ebp+var_130] +
push edx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_250] eax +
mov eax [ebp+var_250] +
mov [ebp+var_254] eax +
mov byte ptr [ebp+var_4] 5 +
mov ecx [ebp+var_254] +
push ecx  +
lea edx [ebp+var_18] +
push edx  +
call sub_412370  +
add esp 0Ch +
mov byte ptr [ebp+var_4] 7 +
lea ecx [ebp+var_130] +
call sub_402310  +
mov byte ptr [ebp+var_4] 8 +
lea ecx [ebp+var_134] +
call sub_402310  +
mov byte ptr [ebp+var_4] 9 +
lea ecx [ebp+var_120] +
call sub_402310  +
push 4  +
lea ecx [ebp+var_20] +
call sub_401C10  +
push offset a_dmp_0  +
push offset a_log  +
lea ecx [ebp+var_18] +
call sub_4024B0  +
push eax  +
push offset asc_426604  +
lea eax [ebp+var_14] +
push eax  +
lea ecx [ebp+var_158] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_138] eax +
mov edx [ebp+var_138] +
mov [ebp+var_13C] edx +
mov byte ptr [ebp+var_4] 0Ah +
mov eax [ebp+var_13C] +
push eax  +
lea ecx [ebp+var_154] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_140] eax +
mov edx [ebp+var_140] +
mov [ebp+var_144] edx +
mov byte ptr [ebp+var_4] 0Bh +
mov eax [ebp+var_144] +
push eax  +
lea ecx [ebp+var_150] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_148] eax +
mov edx [ebp+var_148] +
mov [ebp+var_14C] edx +
mov byte ptr [ebp+var_4] 0Ch +
mov eax [ebp+var_14C] +
push eax  +
lea ecx [ebp+var_20] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov byte ptr [ebp+var_4] 0Eh +
lea ecx [ebp+var_150] +
call sub_402310  +
mov byte ptr [ebp+var_4] 0Fh +
lea ecx [ebp+var_154] +
call sub_402310  +
mov byte ptr [ebp+var_4] 10h +
lea ecx [ebp+var_158] +
call sub_402310  +
push 4  +
lea ecx [ebp+var_28] +
call sub_401C10  +
push offset a_final  +
push offset a_log_0  +
lea ecx [ebp+var_18] +
call sub_4024B0  +
push eax  +
push offset asc_426624  +
lea edx [ebp+var_14] +
push edx  +
lea eax [ebp+var_17C] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_15C] eax +
mov ecx [ebp+var_15C] +
mov [ebp+var_160] ecx +
mov byte ptr [ebp+var_4] 11h +
mov edx [ebp+var_160] +
push edx  +
lea eax [ebp+var_178] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_164] eax +
mov ecx [ebp+var_164] +
mov [ebp+var_168] ecx +
mov byte ptr [ebp+var_4] 12h +
mov edx [ebp+var_168] +
push edx  +
lea eax [ebp+var_174] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_16C] eax +
mov ecx [ebp+var_16C] +
mov [ebp+var_170] ecx +
mov byte ptr [ebp+var_4] 13h +
mov edx [ebp+var_170] +
push edx  +
lea eax [ebp+var_28] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov byte ptr [ebp+var_4] 15h +
lea ecx [ebp+var_174] +
call sub_402310  +
mov byte ptr [ebp+var_4] 16h +
lea ecx [ebp+var_178] +
call sub_402310  +
mov byte ptr [ebp+var_4] 17h +
lea ecx [ebp+var_17C] +
call sub_402310  +
lea ecx [ebp+var_20] +
call sub_4024B0  +
push eax  +
lea ecx [ebp+var_2AC] +
call sub_419660  +
mov byte ptr [ebp+var_4] 18h +
lea ecx [ebp+var_2AC] +
push ecx  +
call sub_41D110  +
add esp 4 +
movzx edx al +
test edx edx +
jnz loc_41AB7D  +
mov [ebp+var_124] 1 +
jmp loc_41AB87  +
mov [ebp+var_124] 0 +
mov al byte ptr [ebp+var_124] +
mov [ebp+var_119] al +
mov byte ptr [ebp+var_4] 17h +
lea ecx [ebp+var_2AC] +
call sub_41A4F0  +
movzx ecx [ebp+var_119] +
test ecx ecx +
jz loc_41AE11  +
push offset a_dmp_full_0  +
push offset a_log_1  +
lea ecx [ebp+var_18] +
call sub_4024B0  +
push eax  +
push offset asc_426648  +
lea edx [ebp+var_14] +
push edx  +
lea eax [ebp+var_1AC] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_180] eax +
mov ecx [ebp+var_180] +
mov [ebp+var_184] ecx +
mov byte ptr [ebp+var_4] 19h +
mov edx [ebp+var_184] +
push edx  +
lea eax [ebp+var_1A8] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_188] eax +
mov ecx [ebp+var_188] +
mov [ebp+var_18C] ecx +
mov byte ptr [ebp+var_4] 1Ah +
mov edx [ebp+var_18C] +
push edx  +
lea eax [ebp+var_1A4] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_190] eax +
mov ecx [ebp+var_190] +
mov [ebp+var_194] ecx +
mov byte ptr [ebp+var_4] 1Bh +
mov edx [ebp+var_194] +
push edx  +
lea eax [ebp+var_1A0] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_198] eax +
mov ecx [ebp+var_198] +
mov [ebp+var_19C] ecx +
mov byte ptr [ebp+var_4] 1Ch +
mov edx [ebp+var_19C] +
push edx  +
lea ecx [ebp+var_20] +
call sub_4022A0  +
mov byte ptr [ebp+var_4] 1Bh +
lea ecx [ebp+var_1A0] +
call sub_402310  +
mov byte ptr [ebp+var_4] 1Ah +
lea ecx [ebp+var_1A4] +
call sub_402310  +
mov byte ptr [ebp+var_4] 19h +
lea ecx [ebp+var_1A8] +
call sub_402310  +
mov byte ptr [ebp+var_4] 17h +
lea ecx [ebp+var_1AC] +
call sub_402310  +
push offset a_full  +
push offset a_final_0  +
push offset a_log_2  +
lea ecx [ebp+var_18] +
call sub_4024B0  +
push eax  +
push offset asc_426674  +
lea eax [ebp+var_14] +
push eax  +
lea ecx [ebp+var_1E8] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_1B0] eax +
mov edx [ebp+var_1B0] +
mov [ebp+var_1B4] edx +
mov byte ptr [ebp+var_4] 1Dh +
mov eax [ebp+var_1B4] +
push eax  +
lea ecx [ebp+var_1E4] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_1B8] eax +
mov edx [ebp+var_1B8] +
mov [ebp+var_1BC] edx +
mov byte ptr [ebp+var_4] 1Eh +
mov eax [ebp+var_1BC] +
push eax  +
lea ecx [ebp+var_1E0] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_1C0] eax +
mov edx [ebp+var_1C0] +
mov [ebp+var_1C4] edx +
mov byte ptr [ebp+var_4] 1Fh +
mov eax [ebp+var_1C4] +
push eax  +
lea ecx [ebp+var_1DC] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_1C8] eax +
mov edx [ebp+var_1C8] +
mov [ebp+var_1CC] edx +
mov byte ptr [ebp+var_4] 20h +
mov eax [ebp+var_1CC] +
push eax  +
lea ecx [ebp+var_1D8] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_1D0] eax +
mov edx [ebp+var_1D0] +
mov [ebp+var_1D4] edx +
mov byte ptr [ebp+var_4] 21h +
mov eax [ebp+var_1D4] +
push eax  +
lea ecx [ebp+var_28] +
call sub_4022A0  +
mov byte ptr [ebp+var_4] 20h +
lea ecx [ebp+var_1D8] +
call sub_402310  +
mov byte ptr [ebp+var_4] 1Fh +
lea ecx [ebp+var_1DC] +
call sub_402310  +
mov byte ptr [ebp+var_4] 1Eh +
lea ecx [ebp+var_1E0] +
call sub_402310  +
mov byte ptr [ebp+var_4] 1Dh +
lea ecx [ebp+var_1E4] +
call sub_402310  +
mov byte ptr [ebp+var_4] 17h +
lea ecx [ebp+var_1E8] +
call sub_402310  +
push 4  +
lea ecx [ebp+var_1C] +
call sub_401C10  +
push offset a_solurl_1  +
push offset a_log_3  +
lea ecx [ebp+var_18] +
call sub_4024B0  +
push eax  +
push offset asc_4266B0  +
lea ecx [ebp+var_14] +
push ecx  +
lea edx [ebp+var_20C] +
push edx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_1EC] eax +
mov eax [ebp+var_1EC] +
mov [ebp+var_1F0] eax +
mov byte ptr [ebp+var_4] 22h +
mov ecx [ebp+var_1F0] +
push ecx  +
lea edx [ebp+var_208] +
push edx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_1F4] eax +
mov eax [ebp+var_1F4] +
mov [ebp+var_1F8] eax +
mov byte ptr [ebp+var_4] 23h +
mov ecx [ebp+var_1F8] +
push ecx  +
lea edx [ebp+var_204] +
push edx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_1FC] eax +
mov eax [ebp+var_1FC] +
mov [ebp+var_200] eax +
mov byte ptr [ebp+var_4] 24h +
mov ecx [ebp+var_200] +
push ecx  +
lea edx [ebp+var_1C] +
push edx  +
call loc_40DA30  +
add esp 0Ch +
mov byte ptr [ebp+var_4] 26h +
lea ecx [ebp+var_204] +
call sub_402310  +
mov byte ptr [ebp+var_4] 27h +
lea ecx [ebp+var_208] +
call sub_402310  +
mov byte ptr [ebp+var_4] 28h +
lea ecx [ebp+var_20C] +
call sub_402310  +
push 4  +
lea ecx [ebp+var_2C] +
call sub_401C10  +
push offset a_sessionid_0  +
push offset a_log_4  +
lea ecx [ebp+var_18] +
call sub_4024B0  +
push eax  +
push offset asc_4266D8  +
lea eax [ebp+var_14] +
push eax  +
lea ecx [ebp+var_230] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_210] eax +
mov edx [ebp+var_210] +
mov [ebp+var_214] edx +
mov byte ptr [ebp+var_4] 29h +
mov eax [ebp+var_214] +
push eax  +
lea ecx [ebp+var_248] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_218] eax +
mov edx [ebp+var_218] +
mov [ebp+var_21C] edx +
mov byte ptr [ebp+var_4] 2Ah +
mov eax [ebp+var_21C] +
push eax  +
lea ecx [ebp+var_228] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_220] eax +
mov edx [ebp+var_220] +
mov [ebp+var_224] edx +
mov byte ptr [ebp+var_4] 2Bh +
mov eax [ebp+var_224] +
push eax  +
lea ecx [ebp+var_2C] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov byte ptr [ebp+var_4] 2Dh +
lea ecx [ebp+var_228] +
call sub_402310  +
mov byte ptr [ebp+var_4] 2Eh +
lea ecx [ebp+var_248] +
call sub_402310  +
mov byte ptr [ebp+var_4] 2Fh +
lea ecx [ebp+var_230] +
call sub_402310  +
push ecx  +
mov ecx esp +
mov [ebp+var_260] esp +
lea edx [ebp+var_1C] +
push edx  +
call sub_402490  +
mov [ebp+var_278] eax +
lea eax [ebp+var_50] +
push eax  +
call sub_40C750  +
add esp 8 +
mov [ebp+var_28C] eax +
mov byte ptr [ebp+var_4] 30h +
push 0  +
push offset aCrashreport_0  +
lea ecx [ebp+var_50] +
call sub_41D180  +
push eax  +
push 0  +
lea ecx [ebp+var_2C4] +
push ecx  +
lea ecx [ebp+var_50] +
call sub_41D6E0  +
mov [ebp+var_234] eax +
mov edx [ebp+var_234] +
push edx  +
lea ecx [ebp+var_50] +
call sub_4031A0  +
lea ecx [ebp+var_2C4] +
call sub_402040  +
push 8  +
lea ecx [ebp+var_38] +
call sub_41CE00  +
push 34h  +
call sub_41EC6C  +
add esp 4 +
mov [ebp+var_128] eax +
mov byte ptr [ebp+var_4] 31h +
cmp [ebp+var_128] 0 +
jz loc_41B082  +
push 0  +
mov ecx [ebp+var_128] +
call sub_40DA00  +
mov [ebp+var_12C] eax +
jmp loc_41B08C  +
mov [ebp+var_12C] 0 +
mov eax [ebp+var_12C] +
mov [ebp+var_238] eax +
mov byte ptr [ebp+var_4] 30h +
mov ecx [ebp+var_238] +
push ecx  +
lea edx [ebp+var_280] +
push edx  +
call ds:?empty@locale@std@@SA?AV12@XZ  +
add esp 4 +
mov [ebp+var_23C] eax +
mov eax [ebp+var_23C] +
mov [ebp+var_240] eax +
mov byte ptr [ebp+var_4] 32h +
mov ecx [ebp+var_240] +
push ecx  +
lea ecx [ebp+var_38] +
call sub_410150  +
mov byte ptr [ebp+var_4] 34h +
lea ecx [ebp+var_280] +
call sub_4019D0  +
push 0B0h  +
lea ecx [ebp+var_118] +
call sub_401C10  +
push 1  +
push 40h  +
push 2  +
lea ecx [ebp+var_1C] +
call sub_4024B0  +
push eax  +
lea ecx [ebp+var_118] +
call sub_4120D0  +
mov byte ptr [ebp+var_4] 35h +
lea edx [ebp+var_38] +
push edx  +
lea eax [ebp+var_288] +
push eax  +
mov ecx [ebp+var_118] +
mov edx [ecx+4] +
lea ecx [ebp+edx+var_118] +
call ds:?imbue@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAE?AVlocale@2@ABV32@@Z  +
lea ecx [ebp+var_288] +
call sub_4019D0  +
push offset sub_410480  +
lea ecx [ebp+var_50] +
call sub_4024C0  +
push eax  +
lea eax [ebp+var_118] +
push eax  +
call sub_411780  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push 4  +
lea ecx [ebp+var_24] +
call sub_401C10  +
push offset a0  +
lea ecx [ebp+var_24] +
call sub_4023D0  +
mov byte ptr [ebp+var_4] 36h +
lea ecx [ebp+var_24] +
push ecx  +
call sub_410B50  +
add esp 4 +
lea edx [ebp+var_24] +
push edx  +
push offset a1_1  +
call sub_41A540  +
add esp 8 +
movzx eax al +
test eax eax +
jz loc_41B20F  +
push ecx  +
mov ecx esp +
mov [ebp+var_290] esp +
lea edx [ebp+var_2C] +
push edx  +
call sub_402490  +
mov [ebp+var_258] eax +
lea eax [ebp+var_68] +
push eax  +
call sub_40C750  +
add esp 8 +
mov [ebp+var_25C] eax +
mov byte ptr [ebp+var_4] 37h +
push offset sub_410480  +
lea ecx [ebp+var_68] +
call sub_4024C0  +
push eax  +
push offset sub_410480  +
lea ecx [ebp+var_118] +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push eax  +
call sub_411780  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov byte ptr [ebp+var_4] 36h +
lea ecx [ebp+var_68] +
call sub_402040  +
push offset sub_410480  +
push offset aDump  +
lea ecx [ebp+var_118] +
push ecx  +
call sub_411780  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
lea ecx [ebp+var_118] +
call sub_40DC00  +
push ecx  +
mov ecx esp +
mov [ebp+var_294] esp +
lea edx [ebp+var_1C] +
push edx  +
call sub_402490  +
mov [ebp+var_244] eax +
mov eax [ebp+var_244] +
mov [ebp+var_264] eax +
mov byte ptr [ebp+var_4] 38h +
push ecx  +
mov ecx esp +
mov [ebp+var_268] esp +
lea edx [ebp+var_20] +
push edx  +
call sub_402490  +
mov [ebp+var_26C] eax +
mov byte ptr [ebp+var_4] 36h +
call loc_40D1B0  +
add esp 8 +
push 40h  +
push 8  +
lea ecx [ebp+var_1C] +
call sub_4024B0  +
push eax  +
lea ecx [ebp+var_118] +
call sub_40DCE0  +
push offset sub_410480  +
push offset aDump_0  +
push offset sub_410480  +
lea ecx [ebp+var_118] +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push eax  +
call sub_411780  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset sub_410480  +
push offset aCrashreport_1  +
lea eax [ebp+var_118] +
push eax  +
call sub_411780  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
lea ecx [ebp+var_118] +
call sub_40DC00  +
lea ecx [ebp+var_28] +
call sub_4024B0  +
push eax  +
lea ecx [ebp+var_1C] +
call sub_4024B0  +
push eax  +
call ds:_wrename  +
add esp 8 +
sub esp 18h +
mov ecx esp +
mov [ebp+var_270] esp +
lea edx [ebp+arg_0] +
push edx  +
call sub_406460  +
mov [ebp+var_274] eax +
call sub_41B7D0  +
add esp 18h +
mov byte ptr [ebp+var_4] 35h +
lea ecx [ebp+var_24] +
call sub_402310  +
mov byte ptr [ebp+var_4] 34h +
lea ecx [ebp+var_118] +
call sub_40D190  +
mov byte ptr [ebp+var_4] 30h +
lea ecx [ebp+var_38] +
call sub_4019D0  +
mov byte ptr [ebp+var_4] 2Fh +
lea ecx [ebp+var_50] +
call sub_402040  +
mov byte ptr [ebp+var_4] 28h +
lea ecx [ebp+var_2C] +
call sub_402310  +
mov byte ptr [ebp+var_4] 17h +
lea ecx [ebp+var_1C] +
call sub_402310  +
mov byte ptr [ebp+var_4] 10h +
lea ecx [ebp+var_28] +
call sub_402310  +
mov byte ptr [ebp+var_4] 9 +
lea ecx [ebp+var_20] +
call sub_402310  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_18] +
call sub_402310  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_30] +
call sub_402310  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_14] +
call sub_402310  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_4020E0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_422619  +
mov eax large fs:0 +
push eax  +
sub esp 108h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_BC] 0 +
mov [ebp+var_4] 0 +
push 400h  +
call sub_41ECAD  +
add esp 4 +
mov [ebp+var_C0] eax +
mov eax [ebp+var_C0] +
mov [ebp+var_AC] eax +
lea ecx [ebp+arg_4] +
call sub_409240  +
mov [ebp+var_D4] eax +
push 4  +
lea ecx [ebp+var_14] +
call sub_401C10  +
lea ecx [ebp+var_14] +
call sub_4116E0  +
push offset unk_4262AB  +
lea ecx [ebp+var_2C] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 1 +
mov [ebp+var_A5] 1 +
push offset aProductSVersio  +
lea ecx [ebp+var_A4] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_74] +
call sub_402230  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_5C] +
call sub_402230  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_44] +
call sub_402230  +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_D8] +
push ecx  +
lea ecx [ebp+arg_4] +
call sub_407CD0  +
mov edx [eax] +
mov [ebp+var_14] edx +
jmp loc_41B4DA  +
lea ecx [ebp+var_14] +
call loc_408300  +
lea eax [ebp+var_DC] +
push eax  +
lea ecx [ebp+arg_4] +
call sub_407CC0  +
push eax  +
lea ecx [ebp+var_14] +
call sub_407E90  +
movzx ecx al +
test ecx ecx +
jz loc_41B66C  +
lea edx [ebp+var_44] +
push edx  +
lea eax [ebp+var_5C] +
push eax  +
lea ecx [ebp+var_74] +
push ecx  +
lea ecx [ebp+var_14] +
call sub_407390  +
sub esp 18h +
mov ecx esp +
mov [ebp+var_E0] esp +
push eax  +
call sub_406460  +
mov [ebp+var_E4] eax +
call sub_41CA90  +
add esp 24h +
mov [ebp+var_A6] al +
movzx edx [ebp+var_A6] +
test edx edx +
jnz loc_41B543  +
jmp loc_41B4D2  +
movzx eax [ebp+var_A5] +
test eax eax +
jnz loc_41B55D  +
push offset asc_426BC4  +
lea ecx [ebp+var_2C] +
call sub_412460  +
jmp loc_41B564  +
mov [ebp+var_A5] 0 +
mov [ebp+var_B0] 3Fh +
lea ecx [ebp+var_74] +
call sub_402540  +
mov esi eax +
lea ecx [ebp+var_5C] +
call sub_402540  +
add esi eax +
lea ecx [ebp+var_44] +
call sub_402540  +
add esi eax +
lea ecx [ebp+var_14] +
call sub_407390  +
add eax 18h +
mov ecx eax +
call sub_402540  +
add eax [ebp+var_B0] +
add eax esi +
mov [ebp+var_B0] eax +
mov ecx [ebp+var_B0] +
push ecx  +
call abs  +
add esp 4 +
cmp eax 400h +
jge loc_41B5D9  +
mov edx [ebp+var_B0] +
push edx  +
call abs  +
add esp 4 +
mov [ebp+var_B4] eax +
jmp loc_41B5E3  +
mov [ebp+var_B4] 400h +
lea ecx [ebp+var_14] +
call sub_407390  +
add eax 18h +
mov ecx eax +
call sub_4020B0  +
push eax  +
lea ecx [ebp+var_44] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+var_5C] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+var_74] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+var_A4] +
call sub_4020B0  +
push eax  +
mov eax [ebp+var_B4] +
push eax  +
mov ecx [ebp+var_AC] +
push ecx  +
call sub_417600  +
add esp 1Ch +
mov edx [ebp+var_AC] +
push edx  +
lea ecx [ebp+var_8C] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 6 +
lea eax [ebp+var_8C] +
push eax  +
lea ecx [ebp+var_2C] +
call sub_412440  +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_8C] +
call sub_4020E0  +
jmp loc_41B4D2  +
mov ecx [ebp+var_AC] +
mov [ebp+var_B8] ecx +
mov edx [ebp+var_B8] +
push edx  +
call j_j_free  +
add esp 4 +
cmp [ebp+var_B8] 0 +
jnz loc_41B69C  +
mov [ebp+var_C4] 0 +
jmp loc_41B6B2  +
mov [ebp+var_AC] 8123h +
mov eax [ebp+var_AC] +
mov [ebp+var_C4] eax +
mov [ebp+var_AC] 0 +
lea ecx [ebp+var_2C] +
call sub_402540  +
test eax eax +
jbe loc_41B740  +
push offset asc_426C10  +
lea ecx [ebp+var_2C] +
push ecx  +
push offset asc_426C14  +
lea edx [ebp+var_114] +
push edx  +
call sub_4198C0  +
add esp 0Ch +
mov [ebp+var_C8] eax +
mov eax [ebp+var_C8] +
mov [ebp+var_CC] eax +
mov byte ptr [ebp+var_4] 7 +
mov ecx [ebp+var_CC] +
push ecx  +
lea edx [ebp+var_FC] +
push edx  +
call sub_411DC0  +
add esp 0Ch +
mov [ebp+var_D0] eax +
mov eax [ebp+var_D0] +
push eax  +
lea ecx [ebp+var_2C] +
call sub_403420  +
lea ecx [ebp+var_FC] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_114] +
call sub_4020E0  +
lea ecx [ebp+var_2C] +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_402120  +
mov edx [ebp+var_BC] +
or edx 1 +
mov [ebp+var_BC] edx +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_44] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_5C] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_74] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_A4] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_2C] +
call sub_4020E0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_4] +
call sub_4059F0  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_422731  +
mov eax large fs:0 +
push eax  +
sub esp 0F0h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
push 4  +
lea ecx [ebp+var_14] +
call sub_401C10  +
lea eax [ebp+var_14] +
push eax  +
call loc_401A20  +
add esp 4 +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_14] +
call sub_40B9D0  +
movzx ecx al +
test ecx ecx +
jz loc_41B84B  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_14] +
call sub_402310  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_4020E0  +
jmp loc_41BD4A  +
push 4  +
lea ecx [ebp+var_20] +
call sub_401C10  +
lea edx [ebp+var_20] +
push edx  +
call sub_410F90  +
add esp 4 +
mov byte ptr [ebp+var_4] 2 +
push 4  +
lea ecx [ebp+var_1C] +
call sub_401C10  +
lea ecx [ebp+arg_0] +
call sub_4020B0  +
push eax  +
lea ecx [ebp+var_30] +
call sub_402330  +
mov byte ptr [ebp+var_4] 3 +
lea eax [ebp+var_30] +
push eax  +
push offset a__4  +
lea ecx [ebp+var_20] +
push ecx  +
push offset aCrlog__0  +
lea edx [ebp+var_48] +
push edx  +
call sub_41A680  +
add esp 0Ch +
mov [ebp+var_34] eax +
mov eax [ebp+var_34] +
mov [ebp+var_38] eax +
mov byte ptr [ebp+var_4] 4 +
mov ecx [ebp+var_38] +
push ecx  +
lea edx [ebp+var_44] +
push edx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_3C] eax +
mov eax [ebp+var_3C] +
mov [ebp+var_40] eax +
mov byte ptr [ebp+var_4] 5 +
mov ecx [ebp+var_40] +
push ecx  +
lea edx [ebp+var_1C] +
push edx  +
call sub_412370  +
add esp 0Ch +
mov byte ptr [ebp+var_4] 7 +
lea ecx [ebp+var_44] +
call sub_402310  +
mov byte ptr [ebp+var_4] 8 +
lea ecx [ebp+var_48] +
call sub_402310  +
mov byte ptr [ebp+var_4] 9 +
lea ecx [ebp+var_30] +
call sub_402310  +
push 4  +
lea ecx [ebp+var_28] +
call sub_401C10  +
push offset a_solurl_2  +
push offset a_log_5  +
lea ecx [ebp+var_1C] +
call sub_4024B0  +
push eax  +
push offset asc_426790  +
lea eax [ebp+var_14] +
push eax  +
lea ecx [ebp+var_6C] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_4C] eax +
mov edx [ebp+var_4C] +
mov [ebp+var_50] edx +
mov byte ptr [ebp+var_4] 0Ah +
mov eax [ebp+var_50] +
push eax  +
lea ecx [ebp+var_68] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_54] eax +
mov edx [ebp+var_54] +
mov [ebp+var_58] edx +
mov byte ptr [ebp+var_4] 0Bh +
mov eax [ebp+var_58] +
push eax  +
lea ecx [ebp+var_64] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_5C] eax +
mov edx [ebp+var_5C] +
mov [ebp+var_60] edx +
mov byte ptr [ebp+var_4] 0Ch +
mov eax [ebp+var_60] +
push eax  +
lea ecx [ebp+var_28] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov byte ptr [ebp+var_4] 0Eh +
lea ecx [ebp+var_64] +
call sub_402310  +
mov byte ptr [ebp+var_4] 0Fh +
lea ecx [ebp+var_68] +
call sub_402310  +
mov byte ptr [ebp+var_4] 10h +
lea ecx [ebp+var_6C] +
call sub_402310  +
push 4  +
lea ecx [ebp+var_18] +
call sub_401C10  +
push offset a_dmp_1  +
push offset a_log_6  +
lea ecx [ebp+var_1C] +
call sub_4024B0  +
push eax  +
push offset asc_4267CC  +
lea edx [ebp+var_14] +
push edx  +
lea eax [ebp+var_90] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_70] eax +
mov ecx [ebp+var_70] +
mov [ebp+var_74] ecx +
mov byte ptr [ebp+var_4] 11h +
mov edx [ebp+var_74] +
push edx  +
lea eax [ebp+var_8C] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_78] eax +
mov ecx [ebp+var_78] +
mov [ebp+var_7C] ecx +
mov byte ptr [ebp+var_4] 12h +
mov edx [ebp+var_7C] +
push edx  +
lea eax [ebp+var_88] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_80] eax +
mov ecx [ebp+var_80] +
mov [ebp+var_84] ecx +
mov byte ptr [ebp+var_4] 13h +
mov edx [ebp+var_84] +
push edx  +
lea eax [ebp+var_18] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov byte ptr [ebp+var_4] 15h +
lea ecx [ebp+var_88] +
call sub_402310  +
mov byte ptr [ebp+var_4] 16h +
lea ecx [ebp+var_8C] +
call sub_402310  +
mov byte ptr [ebp+var_4] 17h +
lea ecx [ebp+var_90] +
call sub_402310  +
push 4  +
lea ecx [ebp+var_24] +
call sub_401C10  +
push offset a_sessionid_1  +
push offset a_log_7  +
lea ecx [ebp+var_1C] +
call sub_4024B0  +
push eax  +
push offset asc_4267F4  +
lea ecx [ebp+var_14] +
push ecx  +
lea edx [ebp+var_B4] +
push edx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_94] eax +
mov eax [ebp+var_94] +
mov [ebp+var_98] eax +
mov byte ptr [ebp+var_4] 18h +
mov ecx [ebp+var_98] +
push ecx  +
lea edx [ebp+var_B0] +
push edx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_9C] eax +
mov eax [ebp+var_9C] +
mov [ebp+var_A0] eax +
mov byte ptr [ebp+var_4] 19h +
mov ecx [ebp+var_A0] +
push ecx  +
lea edx [ebp+var_AC] +
push edx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_A4] eax +
mov eax [ebp+var_A4] +
mov [ebp+var_A8] eax +
mov byte ptr [ebp+var_4] 1Ah +
mov ecx [ebp+var_A8] +
push ecx  +
lea edx [ebp+var_24] +
push edx  +
call loc_40DA30  +
add esp 0Ch +
mov byte ptr [ebp+var_4] 1Ch +
lea ecx [ebp+var_AC] +
call sub_402310  +
mov byte ptr [ebp+var_4] 1Dh +
lea ecx [ebp+var_B0] +
call sub_402310  +
mov byte ptr [ebp+var_4] 1Eh +
lea ecx [ebp+var_B4] +
call sub_402310  +
lea ecx [ebp+var_28] +
call sub_4024B0  +
push eax  +
call ds:_wremove  +
add esp 4 +
lea ecx [ebp+var_24] +
call sub_4024B0  +
push eax  +
call ds:_wremove  +
add esp 4 +
lea ecx [ebp+var_18] +
call sub_4024B0  +
push eax  +
lea ecx [ebp+var_FC] +
call sub_419660  +
mov byte ptr [ebp+var_4] 1Fh +
lea eax [ebp+var_FC] +
push eax  +
call sub_41D110  +
add esp 4 +
mov [ebp+var_29] al +
mov byte ptr [ebp+var_4] 1Eh +
lea ecx [ebp+var_FC] +
call sub_41A4F0  +
movzx ecx [ebp+var_29] +
test ecx ecx +
jz loc_41BBD1  +
lea ecx [ebp+var_18] +
call sub_4024B0  +
push eax  +
call ds:_wremove  +
add esp 4 +
jmp loc_41BCF3  +
push offset a_dmp_full_1  +
push offset a_log_8  +
lea ecx [ebp+var_1C] +
call sub_4024B0  +
push eax  +
push offset asc_426818  +
lea edx [ebp+var_14] +
push edx  +
lea eax [ebp+var_E4] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_B8] eax +
mov ecx [ebp+var_B8] +
mov [ebp+var_BC] ecx +
mov byte ptr [ebp+var_4] 20h +
mov edx [ebp+var_BC] +
push edx  +
lea eax [ebp+var_E0] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_C0] eax +
mov ecx [ebp+var_C0] +
mov [ebp+var_C4] ecx +
mov byte ptr [ebp+var_4] 21h +
mov edx [ebp+var_C4] +
push edx  +
lea eax [ebp+var_DC] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_C8] eax +
mov ecx [ebp+var_C8] +
mov [ebp+var_CC] ecx +
mov byte ptr [ebp+var_4] 22h +
mov edx [ebp+var_CC] +
push edx  +
lea eax [ebp+var_D8] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_D0] eax +
mov ecx [ebp+var_D0] +
mov [ebp+var_D4] ecx +
mov byte ptr [ebp+var_4] 23h +
mov edx [ebp+var_D4] +
push edx  +
lea ecx [ebp+var_18] +
call sub_4022A0  +
mov byte ptr [ebp+var_4] 22h +
lea ecx [ebp+var_D8] +
call sub_402310  +
mov byte ptr [ebp+var_4] 21h +
lea ecx [ebp+var_DC] +
call sub_402310  +
mov byte ptr [ebp+var_4] 20h +
lea ecx [ebp+var_E0] +
call sub_402310  +
mov byte ptr [ebp+var_4] 1Eh +
lea ecx [ebp+var_E4] +
call sub_402310  +
lea ecx [ebp+var_18] +
call sub_4024B0  +
push eax  +
call ds:_wremove  +
add esp 4 +
mov byte ptr [ebp+var_4] 17h +
lea ecx [ebp+var_24] +
call sub_402310  +
mov byte ptr [ebp+var_4] 10h +
lea ecx [ebp+var_18] +
call sub_402310  +
mov byte ptr [ebp+var_4] 9 +
lea ecx [ebp+var_28] +
call sub_402310  +
mov byte ptr [ebp+var_4] 2 +
lea ecx [ebp+var_1C] +
call sub_402310  +
mov byte ptr [ebp+var_4] 1 +
lea ecx [ebp+var_20] +
call sub_402310  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_14] +
call sub_402310  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_4020E0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_422873  +
mov eax large fs:0 +
push eax  +
sub esp 204h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_A4] 0 +
mov [ebp+var_4] 0 +
mov byte_430EF8 0 +
push offset aCWindowsclie_3  +
call ds:PathFileExistsW  +
test eax eax +
jz loc_41BDC9  +
mov byte_430EF8 1 +
movzx eax byte_430EF8 +
cmp eax 1 +
jnz loc_41BF14  +
push 8  +
lea ecx [ebp+var_28] +
call sub_41CE00  +
push 34h  +
call sub_41EC6C  +
add esp 4 +
mov [ebp+var_AC] eax +
mov byte ptr [ebp+var_4] 1 +
cmp [ebp+var_AC] 0 +
jz loc_41BE15  +
push 0  +
mov ecx [ebp+var_AC] +
call sub_40DA00  +
mov [ebp+var_B0] eax +
jmp loc_41BE1F  +
mov [ebp+var_B0] 0 +
mov ecx [ebp+var_B0] +
mov [ebp+var_C4] ecx +
mov byte ptr [ebp+var_4] 0 +
mov edx [ebp+var_C4] +
push edx  +
lea eax [ebp+var_134] +
push eax  +
call ds:?empty@locale@std@@SA?AV12@XZ  +
add esp 4 +
mov [ebp+var_C8] eax +
mov ecx [ebp+var_C8] +
mov [ebp+var_CC] ecx +
mov byte ptr [ebp+var_4] 2 +
mov edx [ebp+var_CC] +
push edx  +
lea ecx [ebp+var_28] +
call sub_410150  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_134] +
call sub_4019D0  +
push 40h  +
push 2  +
push offset aCWindowsclie_4  +
mov ecx offset dword_430E48 +
call sub_40DCE0  +
lea eax [ebp+var_28] +
push eax  +
lea ecx [ebp+var_13C] +
push ecx  +
mov edx dword_430E48 +
mov ecx [edx+4] +
add ecx offset dword_430E48 +
call ds:?imbue@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAE?AVlocale@2@ABV32@@Z  +
lea ecx [ebp+var_13C] +
call sub_4019D0  +
push offset sub_410480  +
push offset aInsideTheFetch  +
push offset dword_430E48  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset sub_410480  +
lea ecx [ebp+arg_0] +
call sub_4024B0  +
push eax  +
push offset aParentPath  +
push offset dword_430E48  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411780  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_28] +
call sub_4019D0  +
push 8  +
lea ecx [ebp+var_18] +
call sub_401C10  +
lea eax [ebp+var_18] +
push eax  +
call sub_411200  +
add esp 4 +
mov byte ptr [ebp+var_4] 5 +
movzx ecx byte_430EF8 +
cmp ecx 1 +
jnz loc_41BF6A  +
push offset sub_410480  +
lea ecx [ebp+var_18] +
call sub_409240  +
push eax  +
push offset aPreferencesFet  +
push offset dword_430E48  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@I@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
lea ecx [ebp+var_18] +
call sub_409240  +
test eax eax +
jbe loc_41C515  +
sub esp 8 +
mov ecx esp +
mov [ebp+var_124] esp +
lea edx [ebp+var_18] +
push edx  +
call sub_41A310  +
mov [ebp+var_128] eax +
lea eax [ebp+var_70] +
push eax  +
call sub_41B3F0  +
add esp 0Ch +
mov [ebp+var_12C] eax +
mov byte ptr [ebp+var_4] 6 +
lea ecx [ebp+var_70] +
call sub_4020B0  +
mov [ebp+var_B4] eax +
movzx ecx byte_430EF8 +
cmp ecx 1 +
jnz loc_41C004  +
push offset sub_410480  +
push offset aJsonRequestFor  +
push offset dword_430E48  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset sub_410480  +
mov edx [ebp+var_B4] +
push edx  +
push offset dword_430E48  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
cmp [ebp+var_B4] 0 +
jz loc_41C509  +
push 8  +
lea ecx [ebp+var_20] +
call sub_401C10  +
push ecx  +
mov ecx esp +
mov [ebp+var_140] esp +
lea eax [ebp+arg_0] +
push eax  +
call sub_402490  +
mov [ebp+var_144] eax +
lea ecx [ebp+var_20] +
push ecx  +
call loc_40CAC0  +
add esp 8 +
mov [ebp+var_148] eax +
mov byte ptr [ebp+var_4] 7 +
push offset aCrcnurl_1  +
lea ecx [ebp+var_1B0] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 8 +
lea edx [ebp+var_1B0] +
push edx  +
lea ecx [ebp+var_20] +
call sub_405E90  +
mov ecx eax +
call sub_402540  +
test eax eax +
jbe loc_41C0EF  +
push offset aCrcnurl_2  +
lea ecx [ebp+var_198] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 9 +
mov eax [ebp+var_A4] +
or eax 1 +
mov [ebp+var_A4] eax +
lea ecx [ebp+var_198] +
push ecx  +
lea ecx [ebp+var_20] +
call sub_405E90  +
push eax  +
lea edx [ebp+var_1E0] +
push edx  +
call sub_404A60  +
add esp 8 +
mov [ebp+var_D0] eax +
mov eax [ebp+var_D0] +
mov [ebp+var_D4] eax +
mov [ebp+var_4] 0Ah +
mov ecx [ebp+var_A4] +
or ecx 2 +
mov [ebp+var_A4] ecx +
mov edx [ebp+var_D4] +
mov [ebp+var_B8] edx +
jmp loc_41C120  +
push offset aHttpsCrlogCr_0  +
lea ecx [ebp+var_1C8] +
call loc_4062F0  +
mov [ebp+var_D8] eax +
mov eax [ebp+var_A4] +
or eax 4 +
mov [ebp+var_A4] eax +
mov ecx [ebp+var_D8] +
mov [ebp+var_B8] ecx +
mov edx [ebp+var_B8] +
mov [ebp+var_DC] edx +
mov eax [ebp+var_DC] +
push eax  +
lea ecx [ebp+var_58] +
call sub_402750  +
mov [ebp+var_4] 0Bh +
mov ecx [ebp+var_A4] +
and ecx 4 +
jz loc_41C15F  +
and [ebp+var_A4] 0FFFFFFFBh +
lea ecx [ebp+var_1C8] +
call sub_402040  +
mov byte ptr [ebp+var_4] 0Ch +
mov edx [ebp+var_A4] +
and edx 2 +
jz loc_41C180  +
and [ebp+var_A4] 0FFFFFFFDh +
lea ecx [ebp+var_1E0] +
call sub_402040  +
mov byte ptr [ebp+var_4] 0Dh +
mov eax [ebp+var_A4] +
and eax 1 +
jz loc_41C1A1  +
and [ebp+var_A4] 0FFFFFFFEh +
lea ecx [ebp+var_198] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0Eh +
lea ecx [ebp+var_1B0] +
call sub_4020E0  +
push offset aCrcnport_1  +
lea ecx [ebp+var_180] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 0Fh +
lea ecx [ebp+var_180] +
push ecx  +
lea ecx [ebp+var_20] +
call sub_405E90  +
mov ecx eax +
call sub_402540  +
test eax eax +
jbe loc_41C229  +
push offset aCrcnport_2  +
lea ecx [ebp+var_168] +
call sub_4021D0  +
mov byte ptr [ebp+var_4] 10h +
mov edx [ebp+var_A4] +
or edx 8 +
mov [ebp+var_A4] edx +
lea eax [ebp+var_168] +
push eax  +
lea ecx [ebp+var_20] +
call sub_405E90  +
mov ecx eax +
call sub_4020B0  +
push eax  +
call ds:atoi  +
add esp 4 +
mov [ebp+var_BC] eax +
jmp loc_41C233  +
mov [ebp+var_BC] 1BBh +
mov ecx [ebp+var_BC] +
mov [ebp+var_C0] ecx +
mov [ebp+var_4] 0Fh +
mov edx [ebp+var_A4] +
and edx 8 +
jz loc_41C263  +
and [ebp+var_A4] 0FFFFFFF7h +
lea ecx [ebp+var_168] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0Eh +
lea ecx [ebp+var_180] +
call sub_4020E0  +
mov eax [ebp+var_C0] +
push eax  +
lea ecx [ebp+var_70] +
call sub_4020B0  +
push eax  +
sub esp 18h +
mov ecx esp +
mov [ebp+var_14C] esp +
push offset aContentTypeA_0  +
call loc_4062F0  +
mov [ebp+var_E0] eax +
mov ecx [ebp+var_E0] +
mov [ebp+var_150] ecx +
mov byte ptr [ebp+var_4] 11h +
sub esp 18h +
mov ecx esp +
mov [ebp+var_F8] esp +
push offset aCrcnPvbprefere  +
call loc_4062F0  +
mov [ebp+var_E4] eax +
mov edx [ebp+var_E4] +
mov [ebp+var_FC] edx +
mov byte ptr [ebp+var_4] 12h +
sub esp 18h +
mov ecx esp +
mov [ebp+var_100] esp +
lea eax [ebp+var_58] +
push eax  +
call sub_4191B0  +
mov [ebp+var_104] eax +
lea ecx [ebp+var_40] +
push ecx  +
mov byte ptr [ebp+var_4] 0Eh +
call sub_418FA0  +
add esp 54h +
mov [ebp+var_108] eax +
mov byte ptr [ebp+var_4] 13h +
movzx edx byte_430EF8 +
cmp edx 1 +
jnz loc_41C4B3  +
lea ecx [ebp-0A5h] +
call sub_401760  +
push eax  +
lea eax [ebp+var_10C] +
push eax  +
lea ecx [ebp+var_58] +
call sub_402FE0  +
mov ecx [eax] +
push ecx  +
lea edx [ebp+var_110] +
push edx  +
lea ecx [ebp+var_58] +
call sub_402570  +
mov eax [eax] +
push eax  +
lea ecx [ebp+cchWideChar] +
call sub_4083F0  +
mov byte ptr [ebp+var_4] 14h +
push offset sub_410480  +
mov ecx [ebp+var_C0] +
push ecx  +
push offset aPort  +
lea edx [ebp+cchWideChar] +
push edx  +
lea eax [ebp+var_1F8] +
push eax  +
call sub_404A60  +
add esp 8 +
mov [ebp+var_E8] eax +
mov ecx [ebp+var_E8] +
mov [ebp+var_EC] ecx +
mov byte ptr [ebp+var_4] 15h +
mov edx [ebp+var_EC] +
push edx  +
push offset aCrcnHost  +
push offset dword_430E48  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411AC0  +
add esp 8 +
push eax  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@H@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov byte ptr [ebp+var_4] 14h +
lea ecx [ebp+var_1F8] +
call sub_402040  +
lea ecx [ebp-0A6h] +
call sub_401760  +
push eax  +
lea eax [ebp+var_114] +
push eax  +
lea ecx [ebp+var_40] +
call sub_402FE0  +
mov ecx [eax] +
push ecx  +
lea edx [ebp+var_118] +
push edx  +
lea ecx [ebp+var_40] +
call sub_402570  +
mov eax [eax] +
push eax  +
lea ecx [ebp+var_88] +
call sub_4083F0  +
mov byte ptr [ebp+var_4] 16h +
push offset sub_410480  +
lea ecx [ebp+var_88] +
push ecx  +
lea edx [ebp+var_210] +
push edx  +
call sub_404A60  +
add esp 8 +
mov [ebp+var_F0] eax +
mov eax [ebp+var_F0] +
mov [ebp+var_F4] eax +
mov byte ptr [ebp+var_4] 17h +
mov ecx [ebp+var_F4] +
push ecx  +
push offset aResponseIs  +
push offset dword_430E48  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411AC0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov byte ptr [ebp+var_4] 16h +
lea ecx [ebp+var_210] +
call sub_402040  +
mov ecx offset dword_430E48 +
call sub_40DC00  +
mov byte ptr [ebp+var_4] 14h +
lea ecx [ebp+var_88] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 13h +
lea ecx [ebp+cchWideChar] +
call sub_4020E0  +
lea edx [ebp+var_18] +
push edx  +
sub esp 18h +
mov ecx esp +
mov [ebp+var_11C] esp +
lea eax [ebp+var_40] +
push eax  +
call sub_4191B0  +
mov [ebp+var_120] eax +
call loc_405A20  +
add esp 1Ch +
lea ecx [ebp+var_18] +
push ecx  +
call sub_410720  +
add esp 4 +
mov byte ptr [ebp+var_4] 0Eh +
lea ecx [ebp+var_40] +
call sub_402040  +
mov byte ptr [ebp+var_4] 7 +
lea ecx [ebp+var_58] +
call sub_402040  +
mov byte ptr [ebp+var_4] 6 +
lea ecx [ebp+var_20] +
call sub_4059F0  +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_70] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_18] +
call sub_4059F0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_402310  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_42294E  +
mov eax large fs:0 +
push eax  +
sub esp 20Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
mov byte_430EF8 0 +
push offset aCWindowsclie_5  +
call ds:PathFileExistsW  +
test eax eax +
jz loc_41C59F  +
mov byte_430EF8 1 +
push 4  +
lea ecx [ebp+var_14] +
call sub_401C10  +
push offset aCrlogtransport  +
push offset asc_4269A0  +
lea eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_19C] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_194] eax +
mov edx [ebp+var_194] +
mov [ebp+var_198] edx +
mov byte ptr [ebp+var_4] 1 +
mov eax [ebp+var_198] +
push eax  +
lea ecx [ebp+var_14] +
push ecx  +
call loc_40DA30  +
add esp 0Ch +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_19C] +
call sub_402310  +
push 0B8h  +
lea ecx [ebp+var_188] +
call sub_401C10  +
push 1  +
push 40h  +
push 1  +
lea ecx [ebp+var_14] +
call sub_4024B0  +
push eax  +
lea ecx [ebp+var_188] +
call sub_40E9C0  +
mov byte ptr [ebp+var_4] 4 +
mov edx [ebp+var_188] +
mov eax [edx+4] +
lea ecx [ebp+eax+var_188] +
call ds:?good@ios_base@std@@QBE_NXZ  +
movzx ecx al +
test ecx ecx +
jnz loc_41C678  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_188] +
call sub_40D170  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_14] +
call sub_402310  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_402310  +
jmp loc_41CA71  +
push offset asc_4269A4  +
lea edx [ebp+var_14] +
push edx  +
push offset asc_4269A8  +
lea eax [ebp+var_1B4] +
push eax  +
call sub_41A680  +
add esp 0Ch +
mov [ebp+var_1A0] eax +
mov ecx [ebp+var_1A0] +
mov [ebp+var_1A4] ecx +
mov byte ptr [ebp+var_4] 5 +
mov edx [ebp+var_1A4] +
push edx  +
lea eax [ebp+var_1B0] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_1A8] eax +
mov ecx [ebp+var_1A8] +
mov [ebp+var_1AC] ecx +
mov byte ptr [ebp+var_4] 6 +
mov edx [ebp+var_1AC] +
push edx  +
lea ecx [ebp+var_14] +
call sub_4022A0  +
mov byte ptr [ebp+var_4] 5 +
lea ecx [ebp+var_1B0] +
call sub_402310  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_1B4] +
call sub_402310  +
movzx eax byte_430EF8 +
cmp eax 1 +
jnz loc_41C885  +
push 8  +
lea ecx [ebp+var_20] +
call sub_41CE00  +
push 34h  +
call sub_41EC6C  +
add esp 4 +
mov [ebp+var_18C] eax +
mov byte ptr [ebp+var_4] 7 +
cmp [ebp+var_18C] 0 +
jz loc_41C750  +
push 0  +
mov ecx [ebp+var_18C] +
call sub_40DA00  +
mov [ebp+var_190] eax +
jmp loc_41C75A  +
mov [ebp+var_190] 0 +
mov ecx [ebp+var_190] +
mov [ebp+var_1B8] ecx +
mov byte ptr [ebp+var_4] 4 +
mov edx [ebp+var_1B8] +
push edx  +
lea eax [ebp+var_210] +
push eax  +
call ds:?empty@locale@std@@SA?AV12@XZ  +
add esp 4 +
mov [ebp+var_1BC] eax +
mov ecx [ebp+var_1BC] +
mov [ebp+var_1C0] ecx +
mov byte ptr [ebp+var_4] 8 +
mov edx [ebp+var_1C0] +
push edx  +
lea ecx [ebp+var_20] +
call sub_410150  +
mov byte ptr [ebp+var_4] 0Ah +
lea ecx [ebp+var_210] +
call sub_4019D0  +
push 0B0h  +
lea ecx [ebp+var_D0] +
call sub_401C10  +
push 1  +
push 40h  +
push 2  +
push offset aCWindowsclie_6  +
lea ecx [ebp+var_D0] +
call sub_4120D0  +
mov byte ptr [ebp+var_4] 0Bh +
lea eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_218] +
push ecx  +
mov edx [ebp+var_D0] +
mov eax [edx+4] +
lea ecx [ebp+eax+var_D0] +
call ds:?imbue@?$basic_ios@_WU?$char_traits@_W@std@@@std@@QAE?AVlocale@2@ABV32@@Z  +
lea ecx [ebp+var_218] +
call sub_4019D0  +
push offset sub_410480  +
push offset aGoingToExecute  +
lea ecx [ebp+var_D0] +
push ecx  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset sub_410480  +
lea ecx [ebp+var_14] +
call sub_4024B0  +
push eax  +
push offset aLogtransportPa  +
lea edx [ebp+var_D0] +
push edx  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411780  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
lea ecx [ebp+var_D0] +
call sub_40DC00  +
mov byte ptr [ebp+var_4] 0Ah +
lea ecx [ebp+var_D0] +
call sub_40D190  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_20] +
call sub_4019D0  +
push 4  +
lea ecx [ebp+var_18] +
call sub_401C10  +
push offset asc_426A40  +
lea eax [ebp+var_1FC] +
push eax  +
call loc_401A20  +
add esp 4 +
mov [ebp+var_1C4] eax +
mov ecx [ebp+var_1C4] +
mov [ebp+var_204] ecx +
mov byte ptr [ebp+var_4] 0Ch +
mov ecx [ebp+var_204] +
call sub_4024B0  +
push eax  +
push offset asc_426A44  +
push offset asc_426A48  +
push offset asc_426A4C  +
lea edx [ebp+arg_0] +
push edx  +
push offset asc_426A50  +
lea eax [ebp+var_1F8] +
push eax  +
call sub_41A680  +
add esp 0Ch +
mov [ebp+var_200] eax +
mov ecx [ebp+var_200] +
mov [ebp+var_208] ecx +
mov byte ptr [ebp+var_4] 0Dh +
mov edx [ebp+var_208] +
push edx  +
lea eax [ebp+var_1F4] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_1C8] eax +
mov ecx [ebp+var_1C8] +
mov [ebp+var_1CC] ecx +
mov byte ptr [ebp+var_4] 0Eh +
mov edx [ebp+var_1CC] +
push edx  +
lea eax [ebp+var_1F0] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_1D0] eax +
mov ecx [ebp+var_1D0] +
mov [ebp+var_1D4] ecx +
mov byte ptr [ebp+var_4] 0Fh +
mov edx [ebp+var_1D4] +
push edx  +
lea eax [ebp+var_1EC] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_1D8] eax +
mov ecx [ebp+var_1D8] +
mov [ebp+var_1DC] ecx +
mov byte ptr [ebp+var_4] 10h +
mov edx [ebp+var_1DC] +
push edx  +
lea eax [ebp+var_1E8] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov [ebp+var_1E0] eax +
mov ecx [ebp+var_1E0] +
mov [ebp+var_1E4] ecx +
mov byte ptr [ebp+var_4] 11h +
mov edx [ebp+var_1E4] +
push edx  +
lea eax [ebp+var_18] +
push eax  +
call loc_40DA30  +
add esp 0Ch +
mov byte ptr [ebp+var_4] 10h +
lea ecx [ebp+var_1E8] +
call sub_402310  +
mov byte ptr [ebp+var_4] 0Fh +
lea ecx [ebp+var_1EC] +
call sub_402310  +
mov byte ptr [ebp+var_4] 0Eh +
lea ecx [ebp+var_1F0] +
call sub_402310  +
mov byte ptr [ebp+var_4] 0Dh +
lea ecx [ebp+var_1F4] +
call sub_402310  +
mov byte ptr [ebp+var_4] 0Ch +
lea ecx [ebp+var_1F8] +
call sub_402310  +
mov byte ptr [ebp+var_4] 4 +
lea ecx [ebp+var_1FC] +
call sub_402310  +
push 0  +
push 0  +
lea ecx [ebp+var_18] +
call sub_4024B0  +
push eax  +
lea ecx [ebp+var_14] +
call sub_4024B0  +
push eax  +
push 0  +
push 0  +
call ds:ShellExecuteW  +
lea ecx [ebp+var_18] +
call sub_402310  +
mov byte ptr [ebp+var_4] 3 +
lea ecx [ebp+var_188] +
call sub_40D170  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_14] +
call sub_402310  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_402310  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_422998  +
mov eax large fs:0 +
push eax  +
sub esp 30h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push esi  +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
push 0Ch  +
lea ecx [ebp+var_1C] +
call sub_401C10  +
lea ecx [ebp+var_1C] +
call sub_402020  +
mov byte ptr [ebp+var_4] 1 +
lea eax [ebp+var_1C] +
push eax  +
sub esp 18h +
mov esi esp +
mov [ebp+var_28] esp +
push ecx  +
mov ecx esp +
mov [ebp+var_2C] esp +
push offset asc_4265B0  +
call sub_4023D0  +
mov [ebp+var_30] eax +
push esi  +
call sub_404940  +
add esp 8 +
mov [ebp+var_24] eax +
mov ecx [ebp+var_24] +
mov [ebp+var_34] ecx +
mov byte ptr [ebp+var_4] 2 +
sub esp 18h +
mov ecx esp +
mov [ebp+var_38] esp +
lea edx [ebp+arg_0] +
push edx  +
call sub_406460  +
mov [ebp+var_3C] eax +
mov byte ptr [ebp+var_4] 1 +
call loc_404B80  +
add esp 34h +
lea ecx [ebp+var_1C] +
call sub_401FA0  +
cmp eax 3 +
jz loc_41CB5C  +
mov [ebp+var_1D] 0 +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_1C] +
call sub_401FC0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_4020E0  +
mov al [ebp+var_1D] +
jmp loc_41CBB7  +
push 0  +
lea ecx [ebp+var_1C] +
call sub_401F80  +
push eax  +
mov ecx [ebp+arg_18] +
call sub_406440  +
push 1  +
lea ecx [ebp+var_1C] +
call sub_401F80  +
push eax  +
mov ecx [ebp+arg_1C] +
call sub_406440  +
push 2  +
lea ecx [ebp+var_1C] +
call sub_401F80  +
push eax  +
mov ecx [ebp+arg_20] +
call sub_406440  +
mov [ebp+var_1E] 1 +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_1C] +
call sub_401FC0  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_0] +
call sub_4020E0  +
mov al [ebp+var_1E] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop esi  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_4] +
jz loc_41CC04  +
mov ecx [ebp+arg_4] +
sub ecx [ebp+arg_0] +
sar ecx 1 +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_4] +
call sub_402590  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
lea edx [ecx+eax*2] +
push edx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
call sub_41CF10  +
push eax  +
call sub_403F30  +
add esp 4 +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+arg_0] +
call sub_401760  +
push eax  +
mov ecx [ebp+var_4] +
call sub_401760  +
mov ecx eax +
call nullsub_2  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 10h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_10] ecx +
mov ecx [ebp+var_10] +
call sub_402EC0  +
cmp dword ptr [eax] 10h +
jb loc_41CD3D  +
mov ecx [ebp+arg_0] +
call sub_402EC0  +
cmp dword ptr [eax] 10h +
jb loc_41CCBD  +
mov ecx [ebp+arg_0] +
call sub_401760  +
push eax  +
mov ecx [ebp+var_10] +
call sub_401760  +
push eax  +
call sub_419E90  +
add esp 8 +
jmp loc_41CD38  +
mov ecx [ebp+var_10] +
call sub_401760  +
mov eax [eax] +
mov [ebp+var_8] eax +
mov ecx [ebp+var_10] +
call sub_401760  +
push eax  +
call sub_403F30  +
add esp 4 +
push eax  +
mov ecx [ebp+var_10] +
call sub_401760  +
mov ecx eax +
call nullsub_2  +
mov ecx [ebp+arg_0] +
call sub_402E60  +
mov ecx [eax] +
add ecx 1 +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_401760  +
push eax  +
mov ecx [ebp+var_10] +
call sub_401760  +
push eax  +
call sub_401940  +
add esp 0Ch +
lea edx [ebp+var_8] +
push edx  +
mov ecx [ebp+arg_0] +
call sub_401760  +
push eax  +
call sub_403F30  +
add esp 4 +
push eax  +
mov ecx [ebp+var_10] +
call sub_401760  +
mov ecx eax +
call sub_403F50  +
jmp loc_41CDE1  +
mov ecx [ebp+arg_0] +
call sub_402EC0  +
cmp dword ptr [eax] 10h +
jnb loc_41CD66  +
mov ecx [ebp+arg_0] +
call sub_401760  +
push eax  +
mov ecx [ebp+var_10] +
call sub_401760  +
push eax  +
call sub_41A130  +
add esp 8 +
jmp loc_41CDE1  +
mov ecx [ebp+arg_0] +
call sub_401760  +
mov eax [eax] +
mov [ebp+var_C] eax +
mov ecx [ebp+arg_0] +
call sub_401760  +
push eax  +
call sub_403F30  +
add esp 4 +
push eax  +
mov ecx [ebp+var_10] +
call sub_401760  +
mov ecx eax +
call nullsub_2  +
mov ecx [ebp+var_10] +
call sub_402E60  +
mov ecx [eax] +
add ecx 1 +
push ecx  +
mov ecx [ebp+var_10] +
call sub_401760  +
push eax  +
mov ecx [ebp+arg_0] +
call sub_401760  +
push eax  +
call sub_401940  +
add esp 0Ch +
lea edx [ebp+var_C] +
push edx  +
mov ecx [ebp+var_10] +
call sub_401760  +
push eax  +
call sub_403F30  +
add esp 4 +
push eax  +
mov ecx [ebp+var_10] +
call sub_401760  +
mov ecx eax +
call sub_403F50  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
push 0  +
mov ecx [ebp+var_4] +
push ecx  +
call memset  +
add esp 0Ch +
mov esp ebp +
pop ebp  +
retn 4  +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax ds:dword_428020 +
push eax  +
push 0  +
mov ecx [ebp+arg_0] +
push ecx  +
mov ecx [ebp+var_4] +
call sub_41CE50  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 8 +
push esi  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
call sub_4036A0  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+arg_0] +
call sub_403870  +
mov [ebp+arg_8] eax +
mov ecx [ebp+var_4] +
call sub_402E60  +
mov ecx ds:dword_428020 +
sub ecx [eax] +
cmp ecx [ebp+arg_8] +
ja loc_41CE96  +
mov ecx [ebp+var_4] +
call loc_402ED0  +
mov ecx [ebp+var_4] +
call sub_402E60  +
mov edx [eax] +
add edx [ebp+arg_8] +
mov [ebp+var_8] edx +
cmp [ebp+arg_8] 0 +
jbe loc_41CF00  +
push 0  +
mov eax [ebp+var_8] +
push eax  +
mov ecx [ebp+var_4] +
call sub_402EE0  +
movzx ecx al +
test ecx ecx +
jz loc_41CF00  +
mov edx [ebp+arg_8] +
push edx  +
mov ecx [ebp+arg_0] +
call sub_4024C0  +
mov ecx [ebp+arg_4] +
lea edx [eax+ecx*2] +
push edx  +
mov ecx [ebp+var_4] +
call sub_4024C0  +
mov esi eax +
mov ecx [ebp+var_4] +
call sub_402E60  +
mov eax [eax] +
lea ecx [esi+eax*2] +
push ecx  +
call sub_401890  +
add esp 0Ch +
mov edx [ebp+var_8] +
push edx  +
mov ecx [ebp+var_4] +
call sub_402F60  +
mov eax [ebp+var_4] +
pop esi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
sub esp 14h +
mov [ebp+var_4] ecx +
lea eax [ebp+var_10] +
push eax  +
mov ecx [ebp+var_4] +
call sub_402FE0  +
mov ecx [eax] +
mov [ebp+var_8] ecx +
lea edx [ebp+var_14] +
push edx  +
mov ecx [ebp+var_4] +
call sub_402FE0  +
mov eax [eax] +
mov [ebp+var_C] eax +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov eax [ebp+var_8] +
push eax  +
mov ecx [ebp+var_C] +
push ecx  +
mov ecx [ebp+var_4] +
call sub_41D4D0  +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 0Ch +
mov [ebp+var_4] ecx +
push 1  +
lea eax [ebp+var_8] +
push eax  +
lea ecx [ebp+var_C] +
push ecx  +
mov ecx [ebp+var_4] +
call sub_402FE0  +
mov ecx eax +
call sub_41A630  +
mov ecx eax +
call sub_4024B0  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov ecx [ebp+var_4] +
call sub_4024C0  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+var_4] +
mov eax [eax+4] +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_421070  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_14] ecx +
mov eax [ebp+arg_4] +
push eax  +
call ds:?_Winerror_map@std@@YAHH@Z  +
add esp 4 +
mov [ebp+var_10] eax +
cmp [ebp+var_10] 0 +
jz loc_41D037  +
call sub_41D2E0  +
push eax  +
mov ecx [ebp+var_10] +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_41A470  +
mov eax [ebp+arg_0] +
jmp loc_41D04C  +
jmp loc_41D04C  +
call sub_41D7E0  +
push eax  +
mov edx [ebp+arg_4] +
push edx  +
mov ecx [ebp+arg_0] +
call sub_41A470  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ecx  +
sub esp 8 +
mov [ebp+var_8] ecx +
mov ecx [ebp+arg_0] +
call sub_41CFB0  +
push eax  +
mov ecx [ebp+var_8] +
call sub_41A5A0  +
movzx eax al +
test eax eax +
jz loc_41D0B7  +
mov ecx [ebp+arg_0] +
call sub_41D820  +
cmp eax [ebp+arg_4] +
jnz loc_41D0B7  +
mov [ebp+var_4] 1 +
jmp loc_41D0BE  +
mov [ebp+var_4] 0 +
mov al byte ptr [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 0Ch +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
lea edx [ebp+var_C] +
push edx  +
mov eax [ebp+var_4] +
mov edx [eax] +
mov ecx [ebp+var_4] +
mov eax [edx+0Ch] +
call eax  +
push eax  +
call sub_41A5D0  +
add esp 8 +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 8 +
mov eax [ebp+arg_0] +
push eax  +
lea ecx [ebp+var_8] +
push ecx  +
call sub_41D600  +
add esp 8 +
mov edx [eax+4] +
push edx  +
mov eax [eax] +
push eax  +
call sub_41D140  +
add esp 8 +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_41D6B0  +
add esp 8 +
movzx edx al +
test edx edx +
jz loc_41D171  +
lea ecx [ebp+arg_0] +
call sub_41D820  +
cmp eax 0FFFFFFFFh +
jz loc_41D171  +
mov [ebp+var_4] 1 +
jmp loc_41D178  +
mov [ebp+var_4] 0 +
mov al byte ptr [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
push eax  +
call sub_401860  +
add esp 4 +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_4] +
call sub_41D1B0  +
mov esp ebp +
pop ebp  +
retn 8  +
***
sub esp 10h +
mov [ebp+var_8] ecx +
cmp [ebp+arg_8] 0 +
jnz loc_41D1D6  +
mov ecx [ebp+var_8] +
call sub_402E60  +
mov ecx [ebp+arg_4] +
cmp ecx [eax] +
ja loc_41D1D6  +
mov eax [ebp+arg_4] +
jmp loc_41D291  +
mov ecx [ebp+var_8] +
call sub_402E60  +
mov edx [ebp+arg_4] +
cmp edx [eax] +
jnb loc_41D28C  +
mov ecx [ebp+var_8] +
call sub_402E60  +
mov eax [eax] +
sub eax [ebp+arg_4] +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_8] +
cmp ecx [ebp+var_4] +
ja loc_41D28C  +
mov edx [ebp+arg_8] +
sub edx 1 +
mov eax [ebp+var_4] +
sub eax edx +
mov [ebp+var_4] eax +
mov ecx [ebp+var_8] +
call sub_4024C0  +
mov ecx [ebp+arg_4] +
lea edx [eax+ecx*2] +
mov [ebp+var_10] edx +
jmp loc_41D242  +
mov eax [ebp+var_C] +
sub eax [ebp+var_10] +
sar eax 1 +
add eax 1 +
mov ecx [ebp+var_4] +
sub ecx eax +
mov [ebp+var_4] ecx +
mov edx [ebp+var_C] +
add edx 2 +
mov [ebp+var_10] edx +
mov eax [ebp+arg_0] +
push eax  +
mov ecx [ebp+var_4] +
push ecx  +
mov edx [ebp+var_10] +
push edx  +
call sub_41D2A0  +
add esp 0Ch +
mov [ebp+var_C] eax +
cmp [ebp+var_C] 0 +
jz loc_41D28C  +
mov eax [ebp+arg_8] +
push eax  +
mov ecx [ebp+arg_0] +
push ecx  +
mov edx [ebp+var_C] +
push edx  +
call sub_401820  +
add esp 0Ch +
test eax eax +
jnz loc_41D28A  +
mov ecx [ebp+var_8] +
call sub_4024C0  +
mov ecx [ebp+var_C] +
sub ecx eax +
sar ecx 1 +
mov eax ecx +
jmp loc_41D291  +
jmp loc_41D226  +
mov eax ds:dword_428020 +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push ecx  +
cmp [ebp+arg_4] 0 +
jnz loc_41D2B3  +
mov [ebp+var_4] 0 +
jmp loc_41D2CD  +
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_8] +
movzx edx word ptr [ecx] +
push edx  +
mov eax [ebp+arg_0] +
push eax  +
call sub_41D830  +
add esp 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_420150  +
mov eax large fs:0 +
push eax  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
call sub_419D00  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_4] eax +
mov [ebp+var_C] ecx +
mov ecx [ebp+var_C] +
call sub_401760  +
push eax  +
lea ecx [ebp-5] +
call sub_403AD0  +
lea eax [ebp-5] +
push eax  +
mov ecx [ebp+arg_0] +
call sub_403AD0  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 8 +
mov [ebp+var_8] ecx +
mov [ebp+var_4] 0 +
mov eax [ebp+arg_4] +
push eax  +
call ds:?_Syserror_map@std@@YAPBDH@Z  +
add esp 4 +
push eax  +
mov ecx [ebp+arg_0] +
call sub_4021D0  +
mov ecx [ebp+var_4] +
or ecx 1 +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 8  +
***
push 0FFFFFFFFh  +
push offset loc_4229C8  +
mov eax large fs:0 +
push eax  +
sub esp 2Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_34] ecx +
mov [ebp+var_2C] 0 +
mov [ebp+var_38] 7FFFh +
push 0  +
push 7FFFh  +
lea ecx [ebp+var_28] +
call sub_4021A0  +
mov [ebp+var_4] 0 +
push 7FFFh  +
push 0  +
lea ecx [ebp+var_28] +
call sub_4020C0  +
push eax  +
mov eax [ebp+arg_4] +
push eax  +
call ds:?_Winerror_message@std@@YAKKPADK@Z  +
add esp 0Ch +
mov [ebp+var_30] eax +
cmp [ebp+var_30] 0 +
jnz loc_41D44F  +
push offset aUnknownError  +
mov ecx [ebp+arg_0] +
call sub_4021D0  +
mov ecx [ebp+var_2C] +
or ecx 1 +
mov [ebp+var_2C] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_28] +
call sub_4020E0  +
mov eax [ebp+arg_0] +
jmp loc_41D48A  +
mov edx [ebp+var_30] +
push edx  +
lea ecx [ebp+var_28] +
call sub_402080  +
lea ecx [ebp+var_28] +
call sub_41D5A0  +
lea eax [ebp+var_28] +
push eax  +
mov ecx [ebp+arg_0] +
call sub_402120  +
mov ecx [ebp+var_2C] +
or ecx 1 +
mov [ebp+var_2C] ecx +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+var_28] +
call sub_4020E0  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ecx  +
push ecx  +
sub esp 0Ch +
mov [ebp+var_4] ecx +
mov eax [ebp+arg_8] +
cmp eax [ebp+arg_C] +
jnz loc_41D50E  +
lea ecx [ebp+arg_0] +
push ecx  +
lea ecx [ebp+arg_4] +
call sub_403FE0  +
push eax  +
lea edx [ebp+var_8] +
push edx  +
mov ecx [ebp+var_4] +
call sub_402570  +
push eax  +
lea ecx [ebp+arg_0] +
call sub_403FE0  +
push eax  +
mov ecx [ebp+var_4] +
call sub_403890  +
jmp loc_41D546  +
mov eax [ebp+arg_C] +
sub eax [ebp+arg_8] +
sar eax 1 +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
lea edx [ebp+arg_0] +
push edx  +
lea ecx [ebp+arg_4] +
call sub_403FE0  +
push eax  +
lea eax [ebp+var_C] +
push eax  +
mov ecx [ebp+var_4] +
call sub_402570  +
push eax  +
lea ecx [ebp+arg_0] +
call sub_403FE0  +
push eax  +
mov ecx [ebp+var_4] +
call sub_403FF0  +
mov eax [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn 10h  +
***
sub esp 8 +
mov [ebp+var_8] ecx +
mov eax [ebp+var_8] +
push eax  +
lea ecx [ebp-1] +
push ecx  +
call sub_41D580  +
add esp 8 +
push eax  +
mov ecx [ebp+arg_0] +
call sub_419180  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_4] +
push eax  +
mov ecx [ebp+arg_0] +
call sub_403AD0  +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
sub esp 20h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov [ebp+var_20] ecx +
mov ecx [ebp+var_20] +
call sub_402540  +
mov esi eax +
or esi 0Fh +
mov ecx [ebp+var_20] +
call sub_407880  +
cmp esi eax +
jnb loc_41D5ED  +
mov eax [ebp+var_20] +
push eax  +
lea ecx [ebp+var_1C] +
call sub_406460  +
lea ecx [ebp+var_1C] +
push ecx  +
mov ecx [ebp+var_20] +
call sub_41D730  +
lea ecx [ebp+var_1C] +
call sub_4020E0  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_4] eax +
push 8  +
lea ecx [ebp+var_C] +
call sub_41CE00  +
lea ecx [ebp+var_C] +
call sub_41A440  +
lea eax [ebp+var_C] +
push eax  +
mov ecx [ebp+arg_4] +
push ecx  +
mov edx [ebp+arg_0] +
push edx  +
call sub_41D650  +
add esp 0Ch +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 14h +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_4] eax +
lea ecx [ebp+var_14] +
call sub_41A440  +
mov ecx [eax] +
mov edx [eax+4] +
mov eax [ebp+arg_8] +
mov [eax] ecx +
mov [eax+4] edx +
lea ecx [ebp+var_8] +
push ecx  +
mov ecx [ebp+arg_4] +
call sub_41CF90  +
push eax  +
call ds:_Stat  +
add esp 8 +
mov [ebp+var_C] eax +
mov edx [ebp+var_8] +
push edx  +
mov eax [ebp+var_C] +
push eax  +
mov ecx [ebp+arg_0] +
call sub_41A470  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
lea ecx [ebp+arg_0] +
call sub_41D820  +
cmp eax 8 +
jz loc_41D6CA  +
mov [ebp+var_4] 1 +
jmp loc_41D6D1  +
mov [ebp+var_4] 0 +
mov al byte ptr [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov [ebp+var_8] ecx +
mov [ebp+var_C] 0 +
lea eax [ebp-1] +
push eax  +
mov ecx [ebp+var_8] +
call sub_41D320  +
push eax  +
mov ecx [ebp+arg_8] +
push ecx  +
mov edx [ebp+arg_4] +
push edx  +
mov eax [ebp+var_8] +
push eax  +
mov ecx [ebp+arg_0] +
call sub_41A290  +
mov ecx [ebp+var_C] +
or ecx 1 +
mov [ebp+var_C] ecx +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
push 0FFFFFFFFh  +
push offset loc_420130  +
mov eax large fs:0 +
push eax  +
push ecx  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_10] ecx +
mov eax [ebp+var_10] +
cmp eax [ebp+arg_0] +
jz loc_41D7C4  +
mov ecx [ebp+arg_0] +
call sub_401760  +
push eax  +
mov ecx [ebp+var_10] +
call sub_401760  +
push eax  +
call sub_419E40  +
add esp 8 +
mov ecx [ebp+arg_0] +
push ecx  +
mov ecx [ebp+var_10] +
call sub_41CC40  +
mov edx [ebp+arg_0] +
push edx  +
mov ecx [ebp+var_10] +
call sub_41CC70  +
mov ecx [ebp+arg_0] +
call sub_402E60  +
push eax  +
mov ecx [ebp+var_10] +
call sub_402E60  +
push eax  +
call sub_4106F0  +
add esp 8 +
mov ecx [ebp+arg_0] +
call sub_402EC0  +
push eax  +
mov ecx [ebp+var_10] +
call sub_402EC0  +
push eax  +
call sub_4106F0  +
add esp 8 +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_420150  +
mov eax large fs:0 +
push eax  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
call sub_419DA0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
jmp loc_41D847  +
mov eax [ebp+arg_0] +
add eax 2 +
mov [ebp+arg_0] eax +
mov ecx [ebp+arg_8] +
sub ecx 1 +
mov [ebp+arg_8] ecx +
cmp [ebp+arg_8] 0 +
jbe loc_41D862  +
mov edx [ebp+arg_0] +
movzx eax word ptr [edx] +
movzx ecx [ebp+arg_4] +
cmp eax ecx +
jnz loc_41D860  +
mov eax [ebp+arg_0] +
jmp loc_41D864  +
jmp loc_41D835  +
xor eax eax +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_422A0B  +
mov eax large fs:0 +
push eax  +
sub esp 84h +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
mov byte_430FC8 0 +
push offset aCWindowsclie_7  +
call ds:PathFileExistsW  +
test eax eax +
jz loc_41D8BC  +
mov byte_430FC8 1 +
lea eax [ebp+cchWideChar] +
push eax  +
push ecx  +
mov ecx esp +
mov [ebp+var_2C] esp +
push offset a_Pipe  +
call sub_4023D0  +
mov [ebp+var_30] eax +
lea ecx [ebp+var_60] +
push ecx  +
call sub_404940  +
add esp 8 +
mov [ebp+var_10] eax +
mov edx [ebp+var_10] +
mov [ebp+var_14] edx +
mov byte ptr [ebp+var_4] 1 +
mov eax [ebp+var_14] +
push eax  +
lea ecx [ebp+var_48] +
push ecx  +
call sub_408490  +
add esp 0Ch +
mov [ebp+var_18] eax +
mov edx [ebp+var_18] +
mov [ebp+var_1C] edx +
mov eax [ebp+var_1C] +
push eax  +
lea ecx [ebp+cchWideChar] +
call sub_403420  +
lea ecx [ebp+var_48] +
call sub_4020E0  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_60] +
call sub_4020E0  +
push 0  +
push 0  +
push 3  +
push 0  +
push 0  +
push 0C0000000h  +
lea ecx [ebp+cchWideChar] +
push ecx  +
lea edx [ebp+var_78] +
push edx  +
call sub_404A60  +
add esp 8 +
mov [ebp+var_20] eax +
mov ecx [ebp+var_20] +
call sub_4024C0  +
push eax  +
call ds:CreateFileW  +
mov ecx [ebp+arg_18] +
mov [ecx] eax +
lea ecx [ebp+var_78] +
call sub_402040  +
movzx edx byte_430FC8 +
cmp edx 1 +
jnz loc_41DA13  +
push 40h  +
push 2  +
push offset aCWindowsclie_8  +
mov ecx offset unk_430F18 +
call sub_40DCE0  +
push offset sub_410480  +
lea eax [ebp+cchWideChar] +
push eax  +
lea ecx [ebp+var_90] +
push ecx  +
call sub_404A60  +
add esp 8 +
mov [ebp+var_24] eax +
mov edx [ebp+var_24] +
mov [ebp+var_28] edx +
mov byte ptr [ebp+var_4] 2 +
mov ecx [ebp+var_28] +
call sub_4024C0  +
push eax  +
push offset aPipenameIs  +
push offset unk_430F18  +
call loc_4101B0  +
add esp 8 +
push eax  +
call sub_411780  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov byte ptr [ebp+var_4] 0 +
lea ecx [ebp+var_90] +
call sub_402040  +
push offset sub_410480  +
mov eax [ebp+arg_18] +
mov ecx [eax] +
push ecx  +
push offset aPipeHandleIs  +
push offset unk_430F18  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@PBX@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov edx [ebp+arg_18] +
cmp dword ptr [edx] 0FFFFFFFFh +
jnz loc_41DA35  +
mov eax [ebp+arg_18] +
mov dword ptr [eax] 0 +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+cchWideChar] +
call sub_4020E0  +
jmp loc_41DA44  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+cchWideChar] +
call sub_4020E0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 0Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_4] eax +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 0A00000h  +
mov ecx [ebp+lpBuffer] +
push ecx  +
mov edx [ebp+hFile] +
push edx  +
call ds:ReadFile  +
mov [ebp+var_C] eax +
movzx eax byte_430FC8 +
cmp eax 1 +
jnz loc_41DB29  +
push offset sub_410480  +
push offset aInsideReaddata  +
push offset unk_430F18  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset sub_410480  +
mov ecx [ebp+NumberOfBytesRead] +
push ecx  +
push offset aNoOfBytesRead  +
push offset unk_430F18  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@K@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset sub_410480  +
mov edx [ebp+lpBuffer] +
push edx  +
push offset sub_410480  +
push offset aDataReadIs  +
push offset unk_430F18  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push eax  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov ecx offset unk_430F18 +
call sub_40DC00  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_422A38  +
mov eax large fs:0 +
push eax  +
sub esp 0Ch +
mov eax dword_43000C +
xor eax ebp +
mov [ebp+var_10] eax +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov [ebp+var_4] 0 +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
lea ecx [ebp+arg_4] +
call sub_402540  +
add eax 1 +
push eax  +
lea ecx [ebp+arg_4] +
call sub_4020B0  +
push eax  +
mov ecx [ebp+hFile] +
push ecx  +
call ds:WriteFile  +
mov [ebp+var_18] eax +
movzx edx byte_430FC8 +
cmp edx 1 +
jnz loc_41DC39  +
push offset sub_410480  +
push offset aInsideWritedat  +
push offset unk_430F18  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset sub_410480  +
mov eax [ebp+NumberOfBytesWritten] +
push eax  +
push offset aNoOfBytesWritt  +
push offset unk_430F18  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@K@Z  +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push offset sub_410480  +
lea ecx [ebp+arg_4] +
call sub_4020B0  +
push eax  +
push offset sub_410480  +
push offset aDataWrittenIs  +
push offset unk_430F18  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
push eax  +
call loc_4101B0  +
add esp 8 +
mov ecx eax +
call ds:??6?$basic_ostream@_WU?$char_traits@_W@std@@@std@@QAEAAV01@P6AAAV01@AAV01@@Z@Z  +
mov ecx offset unk_430F18 +
call sub_40DC00  +
mov [ebp+var_4] 0FFFFFFFFh +
lea ecx [ebp+arg_4] +
call sub_4020E0  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
mov ecx [ebp+var_10] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0FFFFFFFFh  +
call sub_41E993  +
mov esi ecx +
xor edi edi +
push 18h  +
push edi  +
lea eax [esi+14h] +
push eax  +
call memset  +
add esp 0Ch +
mov [esi+2Ch] edi +
mov [esi+30h] edi +
mov eax esi +
mov [esi+34h] edi +
pop edi  +
pop esi  +
retn   +
***
mov edx [ebp+arg_0] +
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+14h] +
push edi  +
call ds:EnterCriticalSection  +
mov eax [ebp+arg_0] +
cmp eax [esi+30h] +
jg loc_41EA25  +
test eax eax +
js loc_41EA25  +
cmp eax [esi+30h] +
jnz loc_41EA18  +
mov esi [esi+8] +
jmp loc_41EA27  +
push eax  +
lea ecx [esi+2Ch] +
call sub_41E9CC  +
mov esi [eax] +
jmp loc_41EA27  +
xor esi esi +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFFh  +
push offset loc_421070  +
mov eax large fs:0 +
push eax  +
push esi  +
push edi  +
mov eax dword_43000C +
xor eax ebp +
push eax  +
lea eax [ebp+var_C] +
mov large fs:0 eax +
mov edi [ecx+4] +
mov eax [edi] +
mov esi [eax+8] +
mov ecx esi +
call j_nullsub_1  +
mov ecx edi +
call esi  +
mov edi eax +
test edi edi +
jz loc_41EAA1  +
mov ecx [edi] +
push 1  +
mov esi [ecx] +
mov ecx esi +
call j_nullsub_1  +
mov ecx edi +
call esi  +
mov ecx [ebp+var_C] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push 8  +
call sub_41EC6C  +
mov [ebp+var_4] eax +
pop ecx  +
test eax eax +
jz loc_41EAFC  +
mov ecx dword_4310C4 +
mov [eax] ecx +
mov ecx [ebp+arg_0] +
mov [eax+4] ecx +
jmp loc_41EAFE  +
xor eax eax +
mov dword_4310C4 eax +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_41F5F0  +
mov edi [ebp+10h] +
test al al +
call sub_41F5F0  +
jmp loc_41EC90  +
push [ebp+arg_0]  +
pop ebp  +
mov eax [ebp+arg_0] +
call sub_41F8EA  +
cmp [ebp+arg_0] 0 +
sub esp 0Ch +
call sub_41F5F0  +
call sub_41F8EA  +
cmp byte_4310EC 0 +
mov eax dword_43000C +
push [ebp+arg_0]  +
push edi  +
mov eax dword_43000C +
mov eax hEvent +
call sub_41F0BA  +
call sub_41F0BA  +
push esi  +
retn   +
***
retn   +
***
cmp hEvent 0 +
cmp ecx dword_43000C +
test [ebp+arg_0] 1 +
call _set_app_type  +
call sub_41FA88  +
call sub_40D6C0  +
push eax  +
call _set_new_mode  +
pop ecx  +
retn   +
***
mov ecx [ebp-14h] +
mov esp [ebp-18h] +
call sub_41FA44  +
test al al +
jnz loc_41F3B7  +
push dword ptr [ebp-20h]  +
call _exit  +
cmp byte ptr [ebp-19h] 0 +
jnz loc_41F3C2  +
call _c_exit  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-20h] +
***
call sub_41FAD5  +
push 0  +
sub esp 324h +
push 8  +
sub esp 31Ch +
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
push [ebp+arg_C]  +
push esi  +
and dword ptr [ecx+4] 0 +
push esi  +
and dword ptr [ecx+4] 0 +
lea eax [ecx+4] +
push esi  +
sub esp 0Ch +
sub esp 0Ch +
lea ecx [ebp+var_C] +
call sub_41F6BC  +
push offset unk_42C76C  +
lea eax [ebp+var_C] +
push eax  +
call _CxxThrowException  +
int 3  +
***
push ebp  +
mov ebp esp +
and dword_43143C 0 +
sub esp 28h +
push ebx  +
xor ebx ebx +
inc ebx  +
or dword_430010 ebx +
push 0Ah  +
call IsProcessorFeaturePresent  +
test eax eax +
jz loc_41F8DF  +
and dword ptr [ebp-10h] 0 +
xor eax eax +
or dword_430010 2 +
xor ecx ecx +
push esi  +
push edi  +
mov dword_43143C ebx +
lea edi [ebp-28h] +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
mov [edi+0Ch] edx +
mov eax [ebp-28h] +
mov ecx [ebp-1Ch] +
mov [ebp-8] eax +
xor ecx 49656E69h +
mov eax [ebp-20h] +
xor eax 6C65746Eh +
or ecx eax +
mov eax [ebp-24h] +
push 1  +
xor eax 756E6547h +
or ecx eax +
pop eax  +
push 0  +
pop ecx  +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
mov [edi] eax +
mov [edi+4] esi +
mov [edi+8] ecx +
mov [edi+0Ch] edx +
jnz loc_41F81C  +
mov eax [ebp-28h] +
and eax 0FFF3FF0h +
cmp eax 106C0h +
jz loc_41F80B  +
cmp eax 20660h +
jz loc_41F80B  +
cmp eax 20670h +
jz loc_41F80B  +
cmp eax 30650h +
jz loc_41F80B  +
cmp eax 30660h +
jz loc_41F80B  +
cmp eax 30670h +
jnz loc_41F81C  +
mov edi dword_431440 +
or edi 1 +
mov dword_431440 edi +
jmp loc_41F822  +
mov edi dword_431440 +
cmp dword ptr [ebp-8] 7 +
mov eax [ebp-1Ch] +
mov [ebp-18h] eax +
mov eax [ebp-20h] +
mov [ebp-4] eax +
mov [ebp-14h] eax +
jl loc_41F869  +
push 7  +
pop eax  +
xor ecx ecx +
push ebx  +
cpuid   +
mov esi ebx +
pop ebx  +
lea ebx [ebp-28h] +
mov [ebx] eax +
mov [ebx+4] esi +
mov [ebx+8] ecx +
mov [ebx+0Ch] edx +
mov eax [ebp-24h] +
test eax 200h +
mov [ebp-10h] eax +
mov eax [ebp-4] +
jz loc_41F869  +
or edi 2 +
mov dword_431440 edi +
pop edi  +
pop esi  +
test eax 100000h +
jz loc_41F8DF  +
or dword_430010 4 +
mov dword_43143C 2 +
test eax 8000000h +
jz loc_41F8DF  +
test eax 10000000h +
jz loc_41F8DF  +
xor ecx ecx +
xor eax eax +
sub esp 324h +
sub esp 44h +
mov ecx eax +
retn   +
***
mov eax [ebp+arg_0] +
sub esp 14h +
retn   +
***
push 0  +
call sub_404680  +
xor eax eax +
mov esi offset unk_429E7C +
mov esi offset unk_429E84 +
mov ebx offset unk_429E84 +
cmp esi ebx +
jnb loc_41FC35  +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_41FC2D  +
mov ecx edi +
call j_nullsub_1  +
call edi  +
add esi 4 +
cmp esi ebx +
jb loc_41FC1E  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push esi  +
mov esi off_430018 +
mov ecx esi +
push 0  +
push [ebp+arg_0]  +
call j_nullsub_1  +
call esi  +
pop esi  +
pop ebp  +
retn 4  +
***
push 0FFFFFFFEh  +
push offset unk_42C7A8  +
push offset sub_41F64B  +
mov eax large fs:0 +
push eax  +
sub esp 18h +
mov eax dword_43000C +
xor [ebp+var_8] eax +
xor eax ebp +
mov [ebp+var_1C] eax +
push ebx  +
push esi  +
push edi  +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_41FCA4  +
xor eax eax +
jmp loc_41FDD0  +
mov ecx ebx +
lea edx [ecx+1] +
lea esp [esp+0] +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_41FCB0  +
sub ecx edx +
lea eax [ecx+1] +
mov [ebp+cchMultiByte] eax +
cmp eax 7FFFFFFFh +
jbe loc_41FCD0  +
push 80070057h  +
call sub_41FC40  +
push 0  +
push 0  +
push eax  +
push ebx  +
push 0  +
push 0  +
call ds:MultiByteToWideChar  +
mov edi eax +
mov [ebp+var_24] edi +
test edi edi +
jnz loc_41FD01  +
call ds:GetLastError  +
test eax eax +
jle loc_41FCFB  +
movzx eax ax +
or eax 80070000h +
push eax  +
call sub_41FC40  +
mov [ebp+var_4] 0 +
lea eax [edi+edi] +
cmp edi 1000h +
jge loc_41FD29  +
call sub_420020  +
mov [ebp+var_18] esp +
mov esi esp +
mov [ebp+var_20] esi +
mov [ebp+var_4] 0FFFFFFFEh +
jmp loc_41FD5B  +
push eax  +
call malloc  +
add esp 4 +
mov esi eax +
mov [ebp+var_20] esi +
mov [ebp+var_4] 0FFFFFFFEh +
jmp loc_41FD5B  +
mov eax 1 +
retn   +
mov esp [ebp-18h] +
xor esi esi +
mov [ebp-20h] esi +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov ebx [ebp+8] +
mov edi [ebp-24h] +
test esi esi +
jnz loc_41FD69  +
push 8007000Eh  +
call sub_41FC40  +
push edi  +
push esi  +
push [ebp+cchMultiByte]  +
push ebx  +
push 0  +
push 0  +
call ds:MultiByteToWideChar  +
test eax eax +
jnz loc_41FDA6  +
cmp edi 1000h +
jl loc_41FD8E  +
push esi  +
call free  +
add esp 4 +
call ds:GetLastError  +
test eax eax +
jle loc_41FDA0  +
movzx eax ax +
or eax 80070000h +
push eax  +
call sub_41FC40  +
push esi  +
call ds:SysAllocString  +
mov ebx eax +
cmp edi 1000h +
jl loc_41FDC0  +
push esi  +
call free  +
add esp 4 +
test ebx ebx +
jnz loc_41FDCE  +
push 8007000Eh  +
call sub_41FC40  +
mov eax ebx +
lea esp [ebp-38h] +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_1C] +
xor ecx ebp +
call sub_41F178  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_0] +
mov eax [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx [ebp+arg_4] +
mov dword ptr [edi] offset off_427F4C +
mov [edi+4] eax +
mov [edi+8] ecx +
mov dword ptr [edi+0Ch] 0 +
test ecx ecx +
jz loc_41FE7A  +
cmp [ebp+arg_8] 0 +
jz loc_41FE7A  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+4] +
mov ecx esi +
call j_nullsub_1  +
call esi  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov ecx [edi+8] +
mov dword ptr [edi] offset off_427F4C +
test ecx ecx +
jz loc_41FEB1  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call j_nullsub_1  +
call esi  +
pop esi  +
mov eax [edi+0Ch] +
pop edi  +
test eax eax +
jz locret_41FEC0  +
push eax  +
call ds:LocalFree  +
retn   +
***
push edi  +
mov edi ecx +
mov ecx [edi+8] +
mov dword ptr [edi] offset off_427F4C +
test ecx ecx +
jz loc_41FEF4  +
mov eax [ecx] +
push esi  +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call j_nullsub_1  +
call esi  +
pop esi  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_41FF02  +
push eax  +
call ds:LocalFree  +
test [ebp+arg_0] 1 +
jz loc_41FF13  +
push 10h  +
push edi  +
call sub_41EC9F  +
add esp 8 +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 10h +
lea ecx [ebp-10h] +
push 0  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_41FE40  +
push offset unk_42C7C4  +
lea eax [ebp-10h] +
push eax  +
call _CxxThrowException  +
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_420050  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_420050  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb loc_420074  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp loc_420064  +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_4200A1  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_4200BD  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_4200D9  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_42011A  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_4200E7  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_420115  +
cmp edx [esp+arg_4] +
ja loc_420115  +
jb loc_420116  +
cmp eax [esp+arg_0] +
jbe loc_420116  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_420124  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_429E88 +
jmp loc_41FF5E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_429E88 +
jmp loc_41FF5E  +
***
mov eax [ebp-30h] +
lea ecx [ebp-28h] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_429EAC +
jmp loc_41FF5E  +
***
mov eax [ebp-0D8h] +
lea ecx [ebp-0D4h] +
lea ecx [ebp-0D4h] +
jmp sub_402310  +
***
lea ecx [ebp+8] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-28h] +
mov ecx [ebp-2Ch] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_429F1C +
jmp loc_41FF5E  +
***
mov ecx [ebp-10h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_429F60 +
jmp loc_41FF5E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_429F8C +
jmp loc_41FF5E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A018 +
jmp loc_41FF5E  +
***
lea ecx [ebp-14h] +
jmp ds:??1_Lockit@std@@QAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A0A4 +
jmp loc_41FF5E  +
***
lea ecx [ebp+14h] +
lea ecx [ebp+10h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A0D0 +
jmp loc_41FF5E  +
***
lea ecx [ebp+0Ch] +
lea ecx [ebp-94h] +
jmp sub_4062B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-98h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A104 +
jmp loc_41FF5E  +
***
lea ecx [ebp+20h] +
lea ecx [ebp+8] +
lea ecx [ebp-28h] +
call ds:__std_terminate  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A138 +
jmp loc_41FF5E  +
***
lea ecx [ebp-2Ch] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A17C +
jmp loc_41FF5E  +
***
lea ecx [ebp+24h] +
lea ecx [ebp+0Ch] +
lea ecx [ebp-28h] +
mov eax [ebp-0F8h] +
lea ecx [ebp-0F0h] +
lea ecx [ebp-40h] +
lea ecx [ebp-114h] +
jmp sub_4020E0  +
***
lea ecx [ebp+8] +
lea ecx [ebp-18h] +
lea ecx [ebp-48h] +
lea ecx [ebp-30h] +
lea ecx [ebp-0B8h] +
lea ecx [ebp-0A0h] +
lea ecx [ebp-88h] +
lea ecx [ebp-148h] +
lea ecx [ebp-130h] +
lea ecx [ebp-118h] +
lea ecx [ebp-100h] +
lea ecx [ebp-0E8h] +
lea ecx [ebp-60h] +
lea ecx [ebp-0D0h] +
call ds:__std_terminate  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-17Ch] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A208 +
jmp loc_41FF5E  +
***
lea ecx [ebp+8] +
lea ecx [ebp-28h] +
lea ecx [ebp-0F0h] +
lea ecx [ebp-40h] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0F8h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A2E8 +
jmp loc_41FF5E  +
***
lea ecx [ebp-0C0h] +
jmp loc_405DA0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0C0h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A32C +
jmp loc_41FF5E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_429E88 +
jmp loc_41FF5E  +
***
mov eax [ebp+8] +
mov eax [ebp+8] +
push eax  +
mov eax [ebp-10h] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A358 +
jmp loc_41FF5E  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-18h] +
jmp ds:??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A38C +
jmp loc_41FF5E  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-18h] +
jmp ds:??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A3C8 +
jmp loc_41FF5E  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
call ds:__std_terminate  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A404 +
jmp loc_41FF5E  +
***
call ds:__std_terminate  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A474 +
jmp loc_41FF5E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A4A0 +
jmp loc_41FF5E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A4F8 +
jmp loc_41FF5E  +
***
mov eax [ebp-18h] +
push eax  +
mov eax [ebp-1Ch] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A550 +
jmp loc_41FF5E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A5B0 +
jmp loc_41FF5E  +
***
lea ecx [ebp-224h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-228h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A608 +
jmp loc_41FF5E  +
***
lea ecx [ebp-120h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-128h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A634 +
jmp loc_41FF5E  +
***
lea ecx [ebp-224h] +
lea ecx [ebp-2ACh] +
jmp sub_4062B0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2ACh] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A660 +
jmp loc_41FF5E  +
***
lea ecx [ebp-2Ch] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A694 +
jmp loc_41FF5E  +
***
mov eax [ebp-54h] +
and eax 1 +
jz locret_4208D8  +
and dword ptr [ebp-54h] 0FFFFFFFEh +
mov ecx [ebp-58h] +
jmp sub_402310  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A6C0 +
jmp loc_41FF5E  +
***
lea ecx [ebp-10h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A6EC +
jmp loc_41FF5E  +
***
lea ecx [ebp+0Ch] +
lea ecx [ebp-14h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A718 +
jmp loc_41FF5E  +
***
lea ecx [ebp-10h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A74C +
jmp loc_41FF5E  +
***
push eax  +
call sub_41EC9F  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A778 +
jmp loc_41FF5E  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-6Ch] +
lea ecx [ebp-40h] +
lea ecx [ebp-68h] +
lea ecx [ebp-64h] +
lea ecx [ebp-60h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-58h] +
lea ecx [ebp-54h] +
lea ecx [ebp-50h] +
lea ecx [ebp-4Ch] +
lea ecx [ebp-48h] +
lea ecx [ebp-44h] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-6Ch] +
lea ecx [ebp-40h] +
lea ecx [ebp-70h] +
lea ecx [ebp-74h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-78h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A7A8 +
jmp loc_41FF5E  +
***
lea ecx [ebp-18h] +
mov eax [ebp-34h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-38h] +
lea ecx [ebp-30h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A890 +
jmp loc_41FF5E  +
***
lea ecx [ebp-68h] +
lea ecx [ebp-64h] +
lea ecx [ebp-60h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-58h] +
lea ecx [ebp-54h] +
lea ecx [ebp-50h] +
lea ecx [ebp-4Ch] +
lea ecx [ebp-48h] +
lea ecx [ebp-44h] +
lea ecx [ebp-40h] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-38h] +
lea ecx [ebp-34h] +
lea ecx [ebp-30h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-28h] +
lea ecx [ebp-24h] +
lea ecx [ebp-20h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-18h] +
push 4  +
mov eax [ebp-6Ch] +
and eax 1 +
jz locret_420BC3  +
and dword ptr [ebp-6Ch] 0FFFFFFFEh +
mov ecx [ebp-74h] +
jmp sub_402310  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-74h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A8E0 +
jmp loc_41FF5E  +
***
lea ecx [ebp-114h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-110h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A9C0 +
jmp loc_41FF5E  +
***
call ds:__std_terminate  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42A9EC +
jmp loc_41FF5E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AA18 +
jmp loc_41FF5E  +
***
mov eax [ebp-18h] +
push eax  +
mov eax [ebp-1Ch] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AA70 +
jmp loc_41FF5E  +
***
lea ecx [ebp+0Ch] +
lea ecx [ebp-190h] +
push eax  +
lea ecx [ebp-1B0h] +
lea ecx [ebp-198h] +
call ds:__std_terminate  +
call ds:__std_terminate  +
call ds:__std_terminate  +
lea ecx [ebp-0D8h] +
lea ecx [ebp-28h] +
jmp sub_402040  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1B0h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AAD0 +
jmp loc_41FF5E  +
***
lea ecx [ebp+0Ch] +
lea ecx [ebp-530h] +
lea ecx [ebp-42Ch] +
mov eax [ebp-534h] +
mov eax [ebp-534h] +
lea ecx [ebp-514h] +
lea ecx [ebp-51Ch] +
lea ecx [ebp-52Ch] +
lea ecx [ebp-428h] +
lea ecx [ebp-444h] +
lea ecx [ebp-474h] +
lea ecx [ebp-45Ch] +
call ds:__std_terminate  +
call ds:__std_terminate  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-560h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AB48 +
jmp loc_41FF5E  +
***
lea ecx [ebp+0Ch] +
lea ecx [ebp+8] +
lea ecx [ebp-564h] +
lea ecx [ebp-568h] +
lea ecx [ebp-4B0h] +
lea ecx [ebp-42Ch] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-56Ch] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42ABE8 +
jmp loc_41FF5E  +
***
lea ecx [ebp-10h] +
mov eax [ebp-1Ch] +
and eax 1 +
jz locret_420ED0  +
and dword ptr [ebp-1Ch] 0FFFFFFFEh +
mov ecx [ebp-20h] +
jmp sub_402310  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AC3C +
jmp loc_41FF5E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2Ch] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_429E88 +
jmp loc_41FF5E  +
***
mov eax [ebp-10h] +
and eax 1 +
jz locret_420F38  +
and dword ptr [ebp-10h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_402310  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AC70 +
jmp loc_41FF5E  +
***
call ds:__std_terminate  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AC9C +
jmp loc_41FF5E  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-18h] +
jmp ds:??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42ACC8 +
jmp loc_41FF5E  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-18h] +
mov ecx [ebp-14h] +
add ecx 10h +
jmp sub_40E890  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AD04 +
jmp loc_41FF5E  +
***
lea ecx [ebp-2Ch] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AD48 +
jmp loc_41FF5E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_429E88 +
jmp loc_41FF5E  +
***
mov eax [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
add ecx 10h +
jmp sub_40F2F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AD74 +
jmp loc_41FF5E  +
***
call ds:__std_terminate  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42ADB0 +
jmp loc_41FF5E  +
***
call ds:__std_terminate  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42ADDC +
jmp loc_41FF5E  +
***
mov ecx [ebp-10h] +
jmp sub_408BC0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AE08 +
jmp loc_41FF5E  +
***
lea ecx [ebp-28h] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AE34 +
jmp loc_41FF5E  +
***
lea ecx [ebp-14h] +
call ds:__std_terminate  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AE60 +
jmp loc_41FF5E  +
***
mov ecx [ebp-14h] +
jmp ds:??1?$basic_streambuf@_WU?$char_traits@_W@std@@@std@@UAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AE94 +
jmp loc_41FF5E  +
***
lea ecx [ebp-20h] +
call ds:__std_terminate  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AEC0 +
jmp loc_41FF5E  +
***
mov ecx [ebp-24h] +
jmp ds:??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UAE@XZ  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AEF4 +
jmp loc_41FF5E  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-34h] +
call ds:__std_terminate  +
call ds:__std_terminate  +
call ds:__std_terminate  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AF20 +
jmp loc_41FF5E  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-30h] +
jmp sub_402040  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-34h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AFA8 +
jmp loc_41FF5E  +
***
lea ecx [ebp+8] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42AFDC +
jmp loc_41FF5E  +
***
lea ecx [ebp+8] +
lea ecx [ebp-118h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-120h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B008 +
jmp loc_41FF5E  +
***
lea ecx [ebp-118h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-120h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B03C +
jmp loc_41FF5E  +
***
lea ecx [ebp+8] +
lea ecx [ebp-1Ch] +
mov ecx [ebp-24h] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B068 +
jmp loc_41FF5E  +
***
mov eax [ebp-24h] +
and eax 1 +
jz locret_4213F8  +
and dword ptr [ebp-24h] 0FFFFFFFEh +
mov ecx [ebp-2Ch] +
jmp sub_402310  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B0A4 +
jmp loc_41FF5E  +
***
lea ecx [ebp-418h] +
lea ecx [ebp-41Ch] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-428h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B0D0 +
jmp loc_41FF5E  +
***
mov eax [ebp-8258h] +
lea ecx [ebp-8254h] +
lea ecx [ebp-821Ch] +
lea ecx [ebp-8298h] +
lea ecx [ebp-8274h] +
call ds:__std_terminate  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-829Ch] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B104 +
jmp loc_41FF5E  +
***
lea ecx [ebp+8] +
lea ecx [ebp-20h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B158 +
jmp loc_41FF5E  +
***
lea ecx [ebp-1Ch] +
jmp sub_40F680  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-78h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B870 +
jmp loc_41FF5E  +
***
lea ecx [ebp-1Ch] +
jmp sub_40F680  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-6Ch] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B8D0 +
jmp loc_41FF5E  +
***
mov ecx [ebp-10h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B194 +
jmp loc_41FF5E  +
***
mov eax [ebp-14h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 4 +
jmp sub_40E890  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B810 +
jmp loc_41FF5E  +
***
lea ecx [ebp-14h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B1C0 +
jmp loc_41FF5E  +
***
lea ecx [ebp+8] +
lea ecx [ebp-468h] +
lea ecx [ebp-480h] +
lea ecx [ebp-418h] +
lea ecx [ebp-420h] +
push eax  +
lea ecx [ebp-97Ch] +
lea ecx [ebp-450h] +
lea ecx [ebp-41Ch] +
lea ecx [ebp-638h] +
lea ecx [ebp-688h] +
lea ecx [ebp-684h] +
lea ecx [ebp-448h] +
lea ecx [ebp-444h] +
lea ecx [ebp-600h] +
lea ecx [ebp-9D0h] +
lea ecx [ebp-9B8h] +
lea ecx [ebp-0D48h] +
lea ecx [ebp-0D30h] +
lea ecx [ebp-0A00h] +
lea ecx [ebp-498h] +
lea ecx [ebp-9E8h] +
lea ecx [ebp-424h] +
lea ecx [ebp-6E0h] +
lea ecx [ebp-6DCh] +
lea ecx [ebp-6D8h] +
lea ecx [ebp-704h] +
lea ecx [ebp-700h] +
lea ecx [ebp-6FCh] +
lea ecx [ebp-43Ch] +
lea ecx [ebp-414h] +
lea ecx [ebp-0D60h] +
mov ecx [ebp-864h] +
mov ecx [ebp-86Ch] +
mov ecx [ebp-874h] +
mov ecx [ebp-87Ch] +
mov ecx [ebp-884h] +
mov ecx [ebp-88Ch] +
lea ecx [ebp-0A18h] +
lea ecx [ebp-0A30h] +
lea ecx [ebp-0A48h] +
lea ecx [ebp-0A60h] +
lea ecx [ebp-0A78h] +
lea ecx [ebp-0A90h] +
lea ecx [ebp-0AC0h] +
lea ecx [ebp-0AA8h] +
lea ecx [ebp-0AF0h] +
lea ecx [ebp-0AD8h] +
lea ecx [ebp-0B20h] +
lea ecx [ebp-0B08h] +
lea ecx [ebp-0B38h] +
lea ecx [ebp-0B68h] +
lea ecx [ebp-0B50h] +
lea ecx [ebp-0B98h] +
lea ecx [ebp-0B80h] +
lea ecx [ebp-0BB0h] +
lea ecx [ebp-0BE0h] +
lea ecx [ebp-0BC8h] +
lea ecx [ebp-0C10h] +
lea ecx [ebp-0BF8h] +
lea ecx [ebp-0C28h] +
lea ecx [ebp-0C58h] +
lea ecx [ebp-0C40h] +
lea ecx [ebp-0C88h] +
lea ecx [ebp-0C70h] +
lea ecx [ebp-0CA0h] +
lea ecx [ebp-0CD0h] +
lea ecx [ebp-0CB8h] +
lea ecx [ebp-0D00h] +
lea ecx [ebp-0CE8h] +
lea ecx [ebp-0D18h] +
lea ecx [ebp-440h] +
mov ecx [ebp-964h] +
lea ecx [ebp-548h] +
jmp sub_40D190  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0D60h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B1E4 +
jmp loc_41FF5E  +
***
lea ecx [ebp+10h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B4DC +
jmp loc_41FF5E  +
***
lea ecx [ebp+0Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-20h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-18h] +
push 4  +
mov ecx [ebp-40h] +
lea ecx [ebp-28h] +
lea ecx [ebp-24h] +
mov eax [ebp-34h] +
and eax 1 +
jz locret_421A2B  +
and dword ptr [ebp-34h] 0FFFFFFFEh +
mov ecx [ebp+8] +
jmp sub_402310  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-54h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B784 +
jmp loc_41FF5E  +
***
lea ecx [ebp+24h] +
lea ecx [ebp+0Ch] +
lea ecx [ebp-38h] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B760 +
jmp loc_41FF5E  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-24h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-24h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B4B0 +
jmp loc_41FF5E  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-18h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B6F8 +
jmp loc_41FF5E  +
***
lea ecx [ebp-38h] +
lea ecx [ebp-20h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B6C4 +
jmp loc_41FF5E  +
***
lea ecx [ebp+98h] +
lea ecx [ebp+80h] +
lea ecx [ebp+68h] +
lea ecx [ebp+50h] +
lea ecx [ebp+38h] +
lea ecx [ebp+20h] +
lea ecx [ebp+8] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B500 +
jmp loc_41FF5E  +
***
lea ecx [ebp+10h] +
lea ecx [ebp-18h] +
lea ecx [ebp-14h] +
lea ecx [ebp-24h] +
lea ecx [ebp-20h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-54h] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-60h] +
lea ecx [ebp-6Ch] +
lea ecx [ebp-78h] +
lea ecx [ebp-84h] +
lea ecx [ebp-90h] +
lea ecx [ebp-35Ch] +
lea ecx [ebp-344h] +
lea ecx [ebp-32Ch] +
lea ecx [ebp-314h] +
lea ecx [ebp-2FCh] +
lea ecx [ebp-2E4h] +
lea ecx [ebp-2CCh] +
lea ecx [ebp-2B4h] +
lea ecx [ebp-29Ch] +
lea ecx [ebp-284h] +
lea ecx [ebp-464h] +
lea ecx [ebp-44Ch] +
lea ecx [ebp-434h] +
lea ecx [ebp-41Ch] +
lea ecx [ebp-404h] +
lea ecx [ebp-3ECh] +
lea ecx [ebp-3D4h] +
lea ecx [ebp-3BCh] +
lea ecx [ebp-3A4h] +
lea ecx [ebp-38Ch] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4B0h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B588 +
jmp loc_41FF5E  +
***
lea ecx [ebp-54h] +
jmp sub_4020E0  +
***
lea ecx [ebp+8] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-44h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B724 +
jmp loc_41FF5E  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 1C8h +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B8F4 +
jmp loc_41FF5E  +
***
lea ecx [ebp-210h] +
jmp sub_4121E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-22Ch] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B9D8 +
jmp loc_41FF5E  +
***
lea ecx [ebp-30h] +
lea ecx [ebp-24h] +
mov ecx [ebp-0A4h] +
lea ecx [ebp-18h] +
mov ecx [ebp-0A0h] +
lea ecx [ebp-0D8h] +
lea ecx [ebp-0F0h] +
lea ecx [ebp-108h] +
lea ecx [ebp-120h] +
lea ecx [ebp-138h] +
lea ecx [ebp-150h] +
lea ecx [ebp-168h] +
lea ecx [ebp-180h] +
lea ecx [ebp-198h] +
lea ecx [ebp-1B0h] +
lea ecx [ebp-1C8h] +
lea ecx [ebp-1E0h] +
lea ecx [ebp-1F8h] +
lea ecx [ebp-210h] +
lea ecx [ebp-228h] +
lea ecx [ebp-240h] +
lea ecx [ebp-258h] +
lea ecx [ebp-270h] +
lea ecx [ebp-288h] +
lea ecx [ebp-2A0h] +
lea ecx [ebp-2B8h] +
lea ecx [ebp-2D0h] +
lea ecx [ebp-2E8h] +
lea ecx [ebp-300h] +
jmp sub_402040  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2FCh] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42B9FC +
jmp loc_41FF5E  +
***
lea ecx [ebp+3Ch] +
lea ecx [ebp+24h] +
lea ecx [ebp+0Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-44h] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-78h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-8] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42BB2C +
jmp loc_41FF5E  +
***
mov ecx [ebp-14h] +
jmp nullsub_1  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0Ch] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42BB90 +
jmp loc_41FF5E  +
***
lea ecx [ebp+20h] +
lea ecx [ebp+8] +
lea ecx [ebp-18h] +
lea ecx [ebp-118h] +
mov eax [ebp-64h] +
mov eax [ebp-64h] +
lea ecx [ebp-60h] +
lea ecx [ebp-0E8h] +
mov eax [ebp-64h] +
mov ecx [ebp-0D0h] +
mov ecx [ebp-94h] +
lea ecx [ebp-48h] +
mov ecx [ebp-0A8h] +
lea ecx [ebp-30h] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-158h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42BBB4 +
jmp loc_41FF5E  +
***
mov ecx [ebp-44h] +
lea ecx [ebp-28h] +
lea ecx [ebp-40h] +
lea ecx [ebp-54h] +
jmp sub_4019D0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4Ch] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42C31C +
jmp loc_41FF5E  +
***
mov ecx [ebp-18h] +
jmp loc_4073A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-1Ch] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42C37C +
jmp loc_41FF5E  +
***
lea ecx [ebp-28h] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42C2D8 +
jmp loc_41FF5E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42C42C +
jmp loc_41FF5E  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-3Ch] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42C3D4 +
jmp loc_41FF5E  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42BC94 +
jmp loc_41FF5E  +
***
pop ecx  +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42BCC0 +
jmp loc_41FF5E  +
***
lea ecx [ebp-28h] +
jmp sub_402040  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42C280 +
jmp loc_41FF5E  +
***
mov eax [ebp+8] +
push eax  +
mov eax [ebp-10h] +
push eax  +
call nullsub_1  +
add esp 8 +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42C458 +
jmp loc_41FF5E  +
***
mov ecx [ebp-10h] +
jmp nullsub_1  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42BCEC +
jmp loc_41FF5E  +
***
mov ecx [ebp-10h] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-8] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42C2AC +
jmp loc_41FF5E  +
***
lea ecx [ebp+8] +
lea ecx [ebp-14h] +
lea ecx [ebp-30h] +
lea ecx [ebp-120h] +
lea ecx [ebp-134h] +
lea ecx [ebp-130h] +
lea ecx [ebp-18h] +
lea ecx [ebp-158h] +
lea ecx [ebp-154h] +
lea ecx [ebp-150h] +
lea ecx [ebp-20h] +
lea ecx [ebp-17Ch] +
lea ecx [ebp-178h] +
lea ecx [ebp-174h] +
lea ecx [ebp-28h] +
lea ecx [ebp-2ACh] +
lea ecx [ebp-1ACh] +
lea ecx [ebp-1A8h] +
lea ecx [ebp-1A4h] +
lea ecx [ebp-1A0h] +
lea ecx [ebp-1E8h] +
lea ecx [ebp-1E4h] +
lea ecx [ebp-1E0h] +
lea ecx [ebp-1DCh] +
lea ecx [ebp-1D8h] +
lea ecx [ebp-20Ch] +
lea ecx [ebp-208h] +
lea ecx [ebp-204h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-230h] +
lea ecx [ebp-248h] +
lea ecx [ebp-228h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-50h] +
push eax  +
lea ecx [ebp-280h] +
lea ecx [ebp-38h] +
lea ecx [ebp-118h] +
lea ecx [ebp-24h] +
lea ecx [ebp-68h] +
mov ecx [ebp-294h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2BCh] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42BF48 +
jmp loc_41FF5E  +
***
lea ecx [ebp+0Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-0A4h] +
lea ecx [ebp-74h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-8Ch] +
lea ecx [ebp-114h] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-110h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42BEE4 +
jmp loc_41FF5E  +
***
lea ecx [ebp+8] +
lea ecx [ebp-14h] +
lea ecx [ebp-20h] +
lea ecx [ebp-30h] +
lea ecx [ebp-48h] +
lea ecx [ebp-44h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-6Ch] +
lea ecx [ebp-68h] +
lea ecx [ebp-64h] +
lea ecx [ebp-28h] +
lea ecx [ebp-90h] +
lea ecx [ebp-8Ch] +
lea ecx [ebp-88h] +
lea ecx [ebp-18h] +
lea ecx [ebp-0B4h] +
lea ecx [ebp-0B0h] +
lea ecx [ebp-0ACh] +
lea ecx [ebp-24h] +
lea ecx [ebp-0FCh] +
lea ecx [ebp-0E4h] +
lea ecx [ebp-0E0h] +
lea ecx [ebp-0DCh] +
lea ecx [ebp-0D8h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-0F4h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42C134 +
jmp loc_41FF5E  +
***
lea ecx [ebp+8] +
push eax  +
lea ecx [ebp-134h] +
lea ecx [ebp-28h] +
lea ecx [ebp-18h] +
lea ecx [ebp-70h] +
lea ecx [ebp-20h] +
lea ecx [ebp-1B0h] +
mov eax [ebp-0A4h] +
mov eax [ebp-0A4h] +
lea ecx [ebp-58h] +
lea ecx [ebp-180h] +
mov eax [ebp-0A4h] +
mov ecx [ebp-14Ch] +
mov ecx [ebp-0F8h] +
lea ecx [ebp-40h] +
lea ecx [ebp-0A0h] +
lea ecx [ebp-1F8h] +
lea ecx [ebp-88h] +
lea ecx [ebp-210h] +
jmp sub_402040  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-208h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42BDC4 +
jmp loc_41FF5E  +
***
lea ecx [ebp+8] +
lea ecx [ebp-19Ch] +
lea ecx [ebp-14h] +
lea ecx [ebp-188h] +
lea ecx [ebp-1B4h] +
lea ecx [ebp-1B0h] +
push eax  +
lea ecx [ebp-210h] +
lea ecx [ebp-20h] +
lea ecx [ebp-0D0h] +
lea ecx [ebp-1FCh] +
lea ecx [ebp-1F8h] +
lea ecx [ebp-1F4h] +
lea ecx [ebp-1F0h] +
lea ecx [ebp-1ECh] +
lea ecx [ebp-1E8h] +
jmp sub_402310  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-210h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42BD10 +
jmp loc_41FF5E  +
***
lea ecx [ebp+8] +
lea ecx [ebp-1Ch] +
mov ecx [ebp-28h] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-38h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42BEC0 +
jmp loc_41FF5E  +
***
lea ecx [ebp-28h] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-30h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42BC68 +
jmp loc_41FF5E  +
***
lea ecx [ebp+8] +
lea ecx [ebp-60h] +
lea ecx [ebp-90h] +
jmp sub_402040  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-88h] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42C494 +
jmp loc_41FF5E  +
***
lea ecx [ebp+0Ch] +
jmp sub_4020E0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42C4C0 +
jmp loc_41FF5E  +
***
lea ecx [ebp+20h] +
lea ecx [ebp+8] +
lea ecx [ebp-18h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-0E4h] +
lea ecx [ebp-100h] +
lea ecx [ebp-0FCh] +
lea ecx [ebp-0F8h] +
lea ecx [ebp-0F4h] +
lea ecx [ebp-24h] +
lea ecx [ebp-10Ch] +
lea ecx [ebp-20h] +
lea ecx [ebp-0A4h] +
lea ecx [ebp-8Ch] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-298h] +
mov eax [ebp-0DCh] +
mov eax [ebp-0DCh] +
lea ecx [ebp-0D4h] +
lea ecx [ebp-250h] +
mov eax [ebp-0DCh] +
mov ecx [ebp-1ACh] +
mov ecx [ebp-1B4h] +
lea ecx [ebp-44h] +
lea ecx [ebp-0BCh] +
mov ecx [ebp-1D0h] +
mov ecx [ebp-1E0h] +
lea ecx [ebp-74h] +
lea ecx [ebp-2F8h] +
lea ecx [ebp-188h] +
lea ecx [ebp-184h] +
lea ecx [ebp-180h] +
lea ecx [ebp-17Ch] +
lea ecx [ebp-178h] +
lea ecx [ebp-174h] +
lea ecx [ebp-14h] +
lea ecx [ebp-268h] +
jmp sub_41A4F0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-2F0h] +
xor ecx eax +
call sub_41F178  +
mov ecx [edx-4] +
xor ecx eax +
call sub_41F178  +
mov eax offset unk_42C4E4 +
jmp loc_41FF5E  +
***
mov dword ptr oword_43145C offset off_424C1C +
mov byte_4314A4 0 +
retn   +
***
cmp byte ptr dword_431484 0 +
mov dword ptr qword_43147C offset off_424C04 +
jz locret_422C93  +
mov eax dword ptr qword_43147C+4 +
test eax eax +
jz locret_422C93  +
push eax  +
call ds:HeapDestroy  +
retn   +
***
mov ecx offset unk_430B40 +
call sub_40D190  +
pop ebp  +
retn   +
***
mov ecx offset unk_430D90 +
call sub_40D190  +
pop ebp  +
retn   +
***
mov ecx offset unk_430EFC +
call sub_41A4A0  +
pop ebp  +
retn   +
***
mov ecx offset unk_430F08 +
call sub_41A4A0  +
pop ebp  +
retn   +
***
mov ecx offset dword_430E48 +
call sub_40D190  +
pop ebp  +
retn   +
***
mov ecx offset unk_430F18 +
call sub_40D190  +
pop ebp  +
retn   +
***
mov ecx offset unk_430FD0 +
mov ecx offset unk_431088 +
mov ecx offset unk_4310C8 +
jmp loc_41EAB2  +
***
retn   +
***
