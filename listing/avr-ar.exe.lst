sub esp 1Ch +
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
mov ds:dword_49F5B8 1 +
mov ds:dword_49F5B4 1 +
mov ds:dword_49F5B0 1 +
mov ds:dword_49F5C0 1 +
jz loc_4010B0  +
mov ds:dword_49B008 eax +
mov eax ds:dword_49F5C4 +
test eax eax +
jz loc_4010A0  +
mov dword ptr [esp] 2 +
call __set_app_type  +
mov dword ptr [esp] 0FFFFFFFFh +
call sub_471FB0  +
mov edx ds:dword_49F5C8 +
mov ds:dword_49F994 eax +
mov ds:dword_49F998 eax +
mov eax ds:_fmode +
mov [eax] edx +
call sub_4721F0  +
cmp dword_476874 1 +
jz loc_401100  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 1 +
call __set_app_type  +
jmp loc_401062  +
***
mov edx ds:40003Ch +
cmp dword ptr [edx+400000h] 4550h +
lea ecx [edx+400000h] +
jnz loc_401048  +
movzx edx word ptr [ecx+18h] +
cmp dx 10Bh +
jz loc_401112  +
cmp dx 20Bh +
jnz loc_401048  +
cmp dword ptr [ecx+84h] 0Eh +
jbe loc_401048  +
mov edx [ecx+0F8h] +
xor eax eax +
test edx edx +
setnz al  +
jmp loc_401048  +
***
mov dword ptr [esp] offset sub_472260 +
call sub_472250  +
xor eax eax +
add esp 1Ch +
retn   +
***
cmp dword ptr [ecx+74h] 0Eh +
jbe loc_401048  +
mov ecx [ecx+0E8h] +
xor eax eax +
test ecx ecx +
setnz al  +
jmp loc_401048  +
***
sub esp 2Ch +
mov eax ds:dword_49F5CC +
mov dword ptr [esp+10h] offset dword_49B000 +
mov dword ptr [esp+8] offset dword_49B014 +
mov dword ptr [esp+4] offset dword_49B018 +
mov ds:dword_49B000 eax +
mov eax ds:dword_49F5D0 +
mov dword ptr [esp] offset dword_49B01C +
mov [esp+0Ch] eax +
call __getmainargs  +
mov ds:dword_49B010 eax +
add esp 2Ch +
retn   +
***
mov ebp esp +
mov ecx 11h +
push edi  +
push esi  +
lea edx [ebp+var_5C] +
push ebx  +
mov edi edx +
sub esp 7Ch +
stos   +
mov al 30h +
call sub_472FB0  +
sub esp eax +
lea eax [esp+88h+var_6E+1] +
and eax 0FFFFFFF0h +
mov dword ptr [eax] 0CCCCCCCCh +
mov dword ptr [eax+4] 0CCCCCCCCh +
mov dword ptr [eax+8] 0CCCCCCCCh +
mov dword ptr [eax+0Ch] 0CCCCCCCCh +
mov dword ptr [eax+10h] 0CCCCCCCCh +
mov dword ptr [eax+14h] 0CCCCCCCCh +
mov dword ptr [eax+18h] 0CCCCCCCCh +
mov dword ptr [eax+1Ch] 0CCCCCCCCh +
and esp 0FFFFFFF0h +
mov esi ds:dword_49F5C4 +
test esi esi +
jnz loc_401470  +
mov eax large fs:18h +
xor esi esi +
mov ebx [eax+4] +
mov edi ds:Sleep +
jmp loc_401216  +
cmp eax ebx +
jz loc_401410  +
mov [esp+88h+var_88] 3E8h +
call edi  +
sub esp 4 +
mov eax esi +
cmpxchg ds:dword_49F99C ebx +
test eax eax +
jnz loc_401202  +
mov eax ds:dword_49F9A0 +
xor ebx ebx +
cmp eax 1 +
jz loc_401423  +
mov eax ds:dword_49F9A0 +
test eax eax +
jz loc_401481  +
mov ds:dword_49B004 1 +
mov eax ds:dword_49F9A0 +
cmp eax 1 +
jz loc_40143D  +
test ebx ebx +
jz loc_401463  +
mov eax ds:off_4994D0 +
test eax eax +
jz loc_401286  +
mov [esp+88h+var_80] 0 +
mov [esp+88h+var_84] 2 +
mov [esp+88h+var_88] 0 +
call eax  +
sub esp 0Ch +
call sub_472560  +
mov [esp+88h+var_88] offset sub_4720A0 +
call ds:SetUnhandledExceptionFilter  +
sub esp 4 +
mov ds:dword_49F5D4 eax +
mov [esp+88h+var_88] offset dword_401000 +
call loc_47687C  +
call sub_472830  +
mov eax ds:_acmdln +
mov ds:dword_49F96C 400000h +
mov eax [eax] +
test eax eax +
jz loc_401309  +
xor ecx ecx +
jmp loc_4012E0  +
test dl dl +
jz loc_401304  +
test ecx ecx +
jz loc_4012F9  +
mov ecx 1 +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012D0  +
mov ebx ecx +
xor ebx 1 +
cmp dl 22h +
cmovz ecx ebx +
jmp loc_4012DD  +
test dl dl +
jz loc_401304  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 20h +
jle loc_4012F5  +
mov ds:dword_49F968 eax +
mov ebx ds:dword_49F5C4 +
test ebx ebx +
jz loc_401328  +
movzx edx [ebp+var_2C] +
mov eax 0Ah +
test [ebp+var_30] 1 +
cmovnz eax edx +
mov dword_476000 eax +
mov eax ds:dword_49B01C +
mov [ebp-70h] eax +
mov esi eax +
lea eax ds:4[eax*4] +
mov [ebp+var_74] eax +
mov [esp+88h+var_88] eax +
call malloc  +
test esi esi +
mov edi ds:dword_49B018 +
mov [ebp+var_6E+2] eax +
jle loc_4014A4  +
xor ebx ebx +
mov esi edi +
lea esi [esi+0] +
mov eax [esi+ebx*4] +
mov [esp+88h+var_88] eax +
call strlen  +
lea edi [eax+1] +
mov [esp+88h+var_88] edi +
call malloc  +
mov ecx [ebp+var_6E+2] +
mov [ecx+ebx*4] eax +
mov ecx [esi+ebx*4] +
add ebx 1 +
mov [esp+88h+var_80] edi +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_84] ecx +
call memcpy  +
cmp ebx [ebp-70h] +
jnz loc_401360  +
mov eax [ebp+var_74] +
sub eax 4 +
mov esi [ebp+var_6E+2] +
mov dword ptr [esi+eax] 0 +
mov ds:dword_49B018 esi +
call sub_4728C0  +
mov edx ds:dword_49B014 +
mov eax ds:__initenv +
mov [eax] edx +
mov eax ds:dword_49B01C +
mov ecx ds:dword_49B014 +
mov edx ds:dword_49B018 +
mov [esp+88h+var_88] eax +
mov [esp+88h+var_80] ecx +
mov [esp+88h+var_84] edx +
call sub_474730  +
mov ecx ds:dword_49B008 +
test ecx ecx +
mov ds:dword_49B00C eax +
jz loc_4014AB  +
mov edx ds:dword_49B004 +
test edx edx +
jnz loc_401407  +
call _cexit  +
mov eax ds:dword_49B00C +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_49F9A0 +
mov ebx 1 +
cmp eax 1 +
jnz loc_401234  +
mov [esp+88h+var_88] 1Fh +
call _amsg_exit  +
mov eax ds:dword_49F9A0 +
cmp eax 1 +
jnz loc_401259  +
mov [esp+88h+var_84] offset unk_4A1008 +
mov [esp+88h+var_88] offset unk_4A1000 +
call _initterm  +
test ebx ebx +
mov ds:dword_49F9A0 2 +
jnz loc_401261  +
xchg ebx ds:dword_49F99C +
jmp loc_401261  +
mov [esp+88h+var_88] edx +
call ds:GetStartupInfoA  +
sub esp 4 +
jmp loc_4011EF  +
mov ds:dword_49F9A0 1 +
mov [esp+88h+var_84] offset unk_4A1018 +
mov [esp+88h+var_88] offset unk_4A100C +
call _initterm  +
jmp loc_40124B  +
xor eax eax +
jmp loc_40139D  +
mov [esp+88h+var_88] eax +
nop   +
call exit  +
***
sub esp 0Ch +
mov ds:dword_49F5C4 1 +
call sub_4728E0  +
add esp 0Ch +
jmp sub_401180  +
***
sub esp 0Ch +
mov ds:dword_49F5C4 0 +
call sub_4728E0  +
add esp 0Ch +
jmp sub_401180  +
***
mov eax dword_476888 +
test eax eax +
jz locret_40154C  +
push ebp  +
mov ebp esp +
sub esp 18h +
mov [esp+1Ch+var_1C] offset aLibgcj13_dll +
call ds:GetModuleHandleA  +
mov edx 0 +
sub esp 4 +
test eax eax +
jz loc_40153E  +
mov [esp+1Ch+var_18] offset a_jv_registercl +
mov [esp+1Ch+var_1C] eax +
call ds:GetProcAddress  +
sub esp 8 +
mov edx eax +
test edx edx +
jz locret_40154B  +
mov [esp+1Ch+var_1C] offset dword_476888 +
call edx  +
leave   +
retn   +
***
mov ebp esp +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 4DCh +
lea edi [esp+4DCh+var_32C] +
lea ebp [esp+4DCh+var_4BC] +
mov ds:dword_49F974 0 +
mov esi ebp +
mov ds:dword_49F970 0FFFFFFFEh +
mov [esp+4DCh+var_4D0] 0C8h +
mov [esp+4DCh+var_4C8] edi +
mov [esp+4DCh+var_4C4] 0 +
mov eax [esp+4DCh+var_4D0] +
mov [ebp+0] bx +
lea eax [eax+eax-2] +
lea edx [esi+eax] +
cmp ebp edx +
jb loc_401680  +
sub ebp esi +
sar ebp 1 +
cmp [esp+4DCh+var_4D0] 270Fh +
lea edi [ebp+1] +
ja loc_401AAE  +
add eax 2 +
mov edx 2710h +
cmp eax 2710h +
cmova eax edx +
lea edx [eax+eax] +
mov ecx edx +
add ecx eax +
mov [esp+4DCh+var_4D0] eax +
lea eax [ecx+ecx+3] +
mov [esp+4DCh+var_4DC] eax +
mov [esp+4DCh+var_4CC] edx +
call malloc  +
test eax eax +
jz loc_401AAE  +
lea ebp [edi+edi] +
mov [esp+4DCh+var_4D4] ebp +
shl edi 2 +
mov [esp+4DCh+var_4D8] esi +
mov [esp+4DCh+var_4DC] eax +
mov [esp+4DCh+var_4C0] eax +
call memcpy  +
mov ecx [esp+4DCh+var_4CC] +
mov edx [esp+4DCh+var_4C0] +
mov eax [esp+4DCh+var_4C8] +
mov [esp+4DCh+var_4D4] edi +
add ecx 3 +
and ecx 0FFFFFFFCh +
add ecx edx +
mov [esp+4DCh+var_4DC] ecx +
mov [esp+4DCh+var_4D8] eax +
mov [esp+4DCh+var_4C8] ecx +
call memcpy  +
lea eax [esp+4DCh+var_4BC] +
mov ecx [esp+4DCh+var_4C8] +
cmp esi eax +
mov edx [esp+4DCh+var_4C0] +
jz loc_401662  +
mov [esp+4DCh+var_4DC] esi +
call free  +
mov edx [esp+4DCh+var_4C0] +
mov ecx [esp+4DCh+var_4C8] +
mov eax [esp+4DCh+var_4CC] +
lea ebp [edx+ebp-2] +
lea edi [ecx+edi-4] +
lea eax [edx+eax-2] +
cmp ebp eax +
jnb loc_401AE1  +
mov [esp+4DCh+var_4C8] ecx +
mov esi edx +
cmp ebx 3 +
jz loc_401AD8  +
movzx eax ds:byte_477280[ebx] +
movsx ecx al +
cmp ecx 0FFFFFFF2h +
mov byte ptr [esp+4DCh+var_4CC] al +
jz loc_4016DC  +
mov eax ds:dword_49F970 +
cmp eax 0FFFFFFFEh +
jz loc_401873  +
test eax eax +
jle loc_401810  +
cmp eax 113h +
mov edx 2 +
ja loc_4016C5  +
movzx edx ds:byte_4772C0[eax] +
lea eax [ecx+edx] +
cmp eax 22h +
ja loc_4016DC  +
movzx ecx ds:byte_4771A0[eax] +
cmp ecx edx +
jz loc_401845  +
movzx ebx ds:byte_477240[ebx] +
test ebx ebx +
jz loc_401750  +
movzx ecx ds:byte_477120[ebx] +
mov eax 1 +
sub eax ecx +
cmp ebx 2Ah +
mov edx [edi+eax*4] +
ja loc_401706  +
jmp ds:off_47706C[ebx*4]  +
xor edx edx +
lea eax ds:0[ecx*4] +
add ecx ecx +
sub edi eax +
sub ebp ecx +
mov eax edi +
movsx ecx word ptr [ebp+0] +
mov [eax+4] edx +
movzx eax ds:byte_477160[ebx] +
lea edi [edi+4] +
sub eax 18h +
movsx edx ds:byte_477219[eax] +
add edx ecx +
cmp edx 22h +
jbe loc_4017F4  +
movsx ebx ds:byte_477203[eax] +
add ebp 2 +
jmp loc_4015A1  +
mov eax [esp+4DCh+var_4C4] +
test eax eax +
jz loc_401821  +
cmp [esp+4DCh+var_4C4] 3 +
jz loc_4017C0  +
movsx ecx byte ptr [esp+4DCh+var_4CC] +
jmp loc_401785  +
cmp ebp esi +
jz loc_4017D0  +
sub ebp 2 +
movsx eax word ptr [ebp+0] +
sub edi 4 +
movsx ecx ds:byte_477280[eax] +
cmp ecx 0FFFFFFF2h +
jz loc_401770  +
add ecx 1 +
cmp ecx 22h +
ja loc_401770  +
cmp ds:byte_4771A0[ecx] 1 +
jnz loc_401770  +
movsx ebx ds:byte_4771E0[ecx] +
test ebx ebx +
jle loc_401770  +
mov edx ds:dword_49F978 +
mov eax edi +
add edi 4 +
mov [esp+4DCh+var_4C4] 3 +
mov [eax+4] edx +
jmp loc_401742  +
cmp ds:dword_49F970 0 +
jg loc_401890  +
jnz loc_401763  +
nop   +
mov ecx esi +
mov ebx 1 +
lea eax [esp+4DCh+var_4BC] +
cmp ecx eax +
jz loc_4017E7  +
mov [esp+4DCh+var_4DC] ecx +
call free  +
add esp 4DCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx ebx ds:byte_4771A0[edx] +
cmp ecx ebx +
jnz loc_40173B  +
movsx ebx ds:byte_4771E0[edx] +
jmp loc_401742  +
mov ds:dword_49F970 0 +
xor edx edx +
jmp loc_4016C5  +
mov eax ds:dword_49F984 +
mov [esp+4DCh+var_4DC] offset aSyntaxErrorInA +
add ds:dword_49F974 1 +
add eax 1 +
mov [esp+4DCh+var_4D8] eax +
call printf  +
jmp loc_401763  +
movsx ebx ds:byte_4771E0[eax] +
test ebx ebx +
jle loc_4018B9  +
mov eax ds:dword_49F978 +
cmp [esp+4DCh+var_4C4] 1 +
mov ds:dword_49F970 0FFFFFFFEh +
adc [esp+4DCh+var_4C4] 0FFFFFFFFh +
add edi 4 +
mov [edi] eax +
jmp loc_401742  +
mov [esp+4DCh+var_4C0] ecx +
call sub_401F40  +
mov ecx [esp+4DCh+var_4C0] +
mov ds:dword_49F970 eax +
jmp loc_4016AA  +
mov ds:dword_49F970 0FFFFFFFEh +
jmp loc_401763  +
mov [esp+4DCh+var_4C0] ecx +
mov [esp+4DCh+var_4CC] edx +
call sub_403E60  +
mov edx [esp+4DCh+var_4CC] +
mov ecx [esp+4DCh+var_4C0] +
jmp loc_401706  +
neg ebx  +
jmp loc_4016E7  +
mov [esp+4DCh+var_4C0] ecx +
mov [esp+4DCh+var_4CC] edx +
call sub_4042B0  +
mov edx [esp+4DCh+var_4CC] +
mov ecx [esp+4DCh+var_4C0] +
jmp loc_401706  +
mov [esp+4DCh+var_4C0] ecx +
mov [esp+4DCh+var_4CC] edx +
call sub_404520  +
mov edx [esp+4DCh+var_4CC] +
mov ecx [esp+4DCh+var_4C0] +
jmp loc_401706  +
mov eax [edi] +
mov [esp+4DCh+var_4C0] ecx +
mov [esp+4DCh+var_4CC] edx +
mov [esp+4DCh+var_4DC] eax +
call sub_4040D0  +
mov edx [esp+4DCh+var_4CC] +
mov ecx [esp+4DCh+var_4C0] +
jmp loc_401706  +
mov eax [edi] +
mov [esp+4DCh+var_4C0] ecx +
mov [esp+4DCh+var_4CC] edx +
mov [esp+4DCh+var_4DC] eax +
call sub_4041B0  +
mov edx [esp+4DCh+var_4CC] +
mov ecx [esp+4DCh+var_4C0] +
jmp loc_401706  +
call sub_4045D0  +
xor ebx ebx +
jmp loc_4017E7  +
mov [esp+4DCh+var_4DC] 8 +
mov [esp+4DCh+var_4CC] ecx +
call malloc  +
mov ecx [esp+4DCh+var_4CC] +
mov edx eax +
mov eax [edi-8] +
mov [edx+4] eax +
mov eax [edi] +
mov [edx] eax +
jmp loc_401706  +
mov [esp+4DCh+var_4C0] ecx +
mov [esp+4DCh+var_4CC] edx +
call sub_404190  +
mov edx [esp+4DCh+var_4CC] +
mov ecx [esp+4DCh+var_4C0] +
jmp loc_401706  +
mov eax [edi] +
mov [esp+4DCh+var_4C0] ecx +
mov [esp+4DCh+var_4CC] edx +
mov [esp+4DCh+var_4DC] eax +
call sub_404350  +
mov edx [esp+4DCh+var_4CC] +
mov ecx [esp+4DCh+var_4C0] +
jmp loc_401706  +
mov eax [edi] +
mov [esp+4DCh+var_4C0] ecx +
mov [esp+4DCh+var_4CC] edx +
mov [esp+4DCh+var_4DC] eax +
call sub_404600  +
mov edx [esp+4DCh+var_4CC] +
mov ecx [esp+4DCh+var_4C0] +
jmp loc_401706  +
mov eax ds:dword_49F984 +
mov [esp+4DCh+var_4DC] offset aSyntaxErrorInA +
mov [esp+4DCh+var_4C0] ecx +
mov [esp+4DCh+var_4CC] edx +
add eax 1 +
mov [esp+4DCh+var_4D8] eax +
call printf  +
mov edx [esp+4DCh+var_4CC] +
mov ecx [esp+4DCh+var_4C0] +
jmp loc_401706  +
mov edx [edi] +
jmp loc_401706  +
xor eax eax +
cmp ds:dword_49B078 0 +
setz al  +
mov ds:dword_49B078 eax +
jmp loc_401706  +
mov edx [edi-4] +
jmp loc_401706  +
mov eax [edi-4] +
mov [esp+4DCh+var_4C0] ecx +
mov ecx [edi] +
mov [esp+4DCh+var_4CC] edx +
mov edx [edi-8] +
mov [esp+4DCh+var_4D8] eax +
mov [esp+4DCh+var_4D4] ecx +
mov [esp+4DCh+var_4DC] edx +
call sub_403D90  +
mov edx [esp+4DCh+var_4CC] +
mov ecx [esp+4DCh+var_4C0] +
jmp loc_401706  +
mov eax [edi-4] +
mov [esp+4DCh+var_4CC] edx +
mov edx [edi] +
mov [esp+4DCh+var_4C0] ecx +
mov [esp+4DCh+var_4DC] eax +
mov [esp+4DCh+var_4D8] edx +
call sub_404050  +
mov edx [esp+4DCh+var_4CC] +
mov ecx [esp+4DCh+var_4C0] +
jmp loc_401706  +
mov eax [edi] +
mov [esp+4DCh+var_4D8] 1 +
mov [esp+4DCh+var_4C0] ecx +
mov [esp+4DCh+var_4CC] edx +
mov [esp+4DCh+var_4DC] eax +
call sub_403EC0  +
mov edx [esp+4DCh+var_4CC] +
mov ecx [esp+4DCh+var_4C0] +
jmp loc_401706  +
mov eax [edi] +
mov [esp+4DCh+var_4D8] 0 +
mov [esp+4DCh+var_4C0] ecx +
mov [esp+4DCh+var_4CC] edx +
mov [esp+4DCh+var_4DC] eax +
call sub_403EC0  +
mov edx [esp+4DCh+var_4CC] +
mov ecx [esp+4DCh+var_4C0] +
jmp loc_401706  +
mov eax ds:dword_49F984 +
mov ebx 2 +
mov [esp+4DCh+var_4DC] offset aSyntaxErrorInA +
mov [esp+4DCh+var_4D0] esi +
add eax 1 +
mov [esp+4DCh+var_4D8] eax +
call printf  +
mov ecx [esp+4DCh+var_4D0] +
jmp loc_4017D7  +
mov ecx esi +
xor ebx ebx +
jmp loc_4017D7  +
mov ecx edx +
mov ebx 1 +
jmp loc_4017D7  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi ds:dword_49B040 +
mov esi ds:dword_49F980 +
mov eax ds:dword_49B038 +
mov [esp+4+var_4] edi +
cmp esi edi +
jnb loc_401B8E  +
mov ebp ds:dword_49B030 +
mov edi ds:dword_49B02C +
nop   +
lea esi [esi+0] +
movzx edx byte ptr [esi] +
mov ecx 1 +
test dl dl +
jz loc_401B34  +
movzx ecx ds:byte_477E40[edx*4] +
cmp ds:word_478240[eax+eax] 0 +
cmovnz edi esi +
cmovnz ebp eax +
movsx edx ds:word_477BE0[eax+eax] +
add edx ecx +
movsx ebx ds:word_477660[edx+edx] +
cmp ebx eax +
jz loc_401B72  +
movsx eax ds:word_477A60[eax+eax] +
cmp eax 0B0h +
jle loc_401B43  +
movzx ecx ds:byte_477D60[ecx*4] +
jmp loc_401B43  +
add esi 1 +
movsx eax ds:word_477860[edx+edx] +
cmp esi [esp+4+var_4] +
jnz loc_401B20  +
mov ds:dword_49B030 ebp +
mov ds:dword_49B02C edi +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax ds:dword_49B04C +
mov edx ds:dword_49B054 +
lea edx [eax+edx*4] +
mov eax [edx] +
mov ecx [eax+10h] +
mov eax [eax+8] +
mov ds:dword_49B044 ecx +
mov ds:dword_49F980 eax +
mov edx [edx] +
mov ds:dword_49B040 eax +
mov edx [edx] +
mov ds:dword_49B028 edx +
movzx eax byte ptr [eax] +
mov ds:byte_49B048 al +
retn   +
***
sub esp 1Ch +
sub esp 14h +
mov eax ds:dword_49B04C +
test eax eax +
jz loc_401C71  +
mov edx ds:dword_49B050 +
lea ecx [edx-1] +
cmp ecx ds:dword_49B054 +
jbe loc_401C35  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea ebx [edx+8] +
lea esi ds:0[ebx*4] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call realloc  +
test eax eax +
mov ds:dword_49B04C eax +
jz loc_401CA2  +
lea edx [eax+esi-20h] +
xor eax eax +
mov dword ptr [edx+eax] 0 +
add eax 4 +
cmp eax 20h +
jb loc_401C5A  +
mov ds:dword_49B050 ebx +
jmp loc_401C2F  +
mov [esp+14h+var_14] 4 +
call malloc  +
test eax eax +
mov ds:dword_49B04C eax +
jz loc_401CA2  +
mov dword ptr [eax] 0 +
mov ds:dword_49B050 1 +
mov ds:dword_49B054 0 +
jmp loc_401C2F  +
mov eax offset aOutOfDynamicMe +
call sub_401BE0  +
lea esi [esi+0] +
push ebx  +
sub esp 8 +
mov ebx [esp+20h+var_10] +
call sub_401C10  +
mov eax ds:dword_49B04C +
test eax eax +
jz loc_401D0E  +
mov edx ds:dword_49B054 +
lea eax [eax+edx*4] +
mov edx [eax] +
cmp edx ebx +
jz loc_401D09  +
test edx edx +
jz loc_401CF8  +
mov edx ds:dword_49B040 +
movzx ecx ds:byte_49B048 +
mov [edx] cl +
mov ecx [eax] +
mov [ecx+8] edx +
mov ecx ds:dword_49B044 +
mov edx [eax] +
mov [edx+10h] ecx +
mov [eax] ebx +
call sub_401BA0  +
mov ds:dword_49B034 1 +
add esp 8 +
pop ebx  +
retn   +
test ebx ebx +
jz loc_401D09  +
mov eax ds:dword_49B054 +
shl eax 2 +
jmp loc_401CF8  +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_401D78  +
mov eax ds:dword_49B04C +
test eax eax +
jz loc_401D42  +
mov edx ds:dword_49B054 +
lea eax [eax+edx*4] +
cmp ebx [eax] +
jz loc_401D70  +
mov eax [ebx+14h] +
test eax eax +
jnz loc_401D56  +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp free  +
mov eax [ebx+4] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp free  +
mov dword ptr [eax] 0 +
jmp loc_401D42  +
add esp 18h +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
jz locret_401DC5  +
mov edx [eax+4] +
mov dword ptr [eax+10h] 0 +
mov byte ptr [edx] 0 +
mov edx [eax+4] +
mov byte ptr [edx+1] 0 +
mov edx [eax+4] +
mov dword ptr [eax+1Ch] 1 +
mov dword ptr [eax+2Ch] 0 +
mov [eax+8] edx +
mov edx ds:dword_49B04C +
test edx edx +
jz locret_401DC5  +
mov ecx ds:dword_49B054 +
cmp eax [edx+ecx*4] +
jz loc_401DC7  +
retn   +
jmp sub_401BA0  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edi ds:__imp__errno +
call edi  +
mov ebp [eax] +
mov [esp+20h+var_20] ebx +
call sub_401D80  +
mov eax ds:dword_49B04C +
mov [ebx] esi +
mov dword ptr [ebx+28h] 1 +
test eax eax +
jz loc_401E0A  +
mov edx ds:dword_49B054 +
cmp ebx [eax+edx*4] +
jz loc_401E18  +
mov dword ptr [ebx+20h] 1 +
mov dword ptr [ebx+24h] 0 +
xor eax eax +
test esi esi +
jz loc_401E36  +
mov [esp+20h+var_20] esi +
call _fileno_0  +
mov [esp+20h+var_20] eax +
call _isatty  +
test eax eax +
setnle al  +
movzx eax al +
mov [ebx+18h] eax +
call edi  +
mov [eax] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov eax ds:dword_49B04C +
mov edx [esp+18h+arg_0] +
test eax eax +
jz loc_401EE0  +
mov ecx ds:dword_49B054 +
mov eax [eax+ecx*4] +
test eax eax +
jz loc_401EE0  +
call sub_401DD0  +
add esp 18h +
pop ebx  +
jmp sub_401BA0  +
mov [esp+18h+var_C] edx +
call sub_401C10  +
mov eax ds:dword_49B04C +
mov ecx ds:dword_49B054 +
mov [esp+18h+var_14] 4000h +
lea ebx [eax+ecx*4] +
mov eax ds:dword_49B028 +
mov [esp+18h+var_18] eax +
call sub_401E50  +
mov ecx ds:dword_49B04C +
mov edx [esp+18h+var_C] +
mov [ebx] eax +
xor eax eax +
test ecx ecx +
jz loc_401ECE  +
mov eax ds:dword_49B054 +
mov eax [ecx+eax*4] +
call sub_401DD0  +
add esp 18h +
pop ebx  +
jmp sub_401BA0  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edx ds:dword_49B03C +
test edx edx +
jnz loc_401FAB  +
mov eax ds:dword_49B038 +
mov ds:dword_49B03C 1 +
test eax eax +
jnz loc_401F6E  +
mov ds:dword_49B038 1 +
mov eax ds:dword_49B028 +
test eax eax +
jz loc_4020A1  +
mov eax ds:dword_49B024 +
test eax eax +
jz loc_4020B0  +
mov eax ds:dword_49B04C +
test eax eax +
jz loc_40212A  +
mov edx ds:dword_49B054 +
mov eax [eax+edx*4] +
test eax eax +
jz loc_40212A  +
call sub_401BA0  +
mov eax ds:dword_49B040 +
movzx ecx ds:byte_49B048 +
mov ebp eax +
mov [esp+3Ch+var_28] eax +
mov [eax] cl +
mov eax ds:dword_49B038 +
movsx edx ds:word_477BE0[eax+eax] +
mov edi ds:dword_49B030 +
mov esi ds:dword_49B02C +
cmp ds:word_478240[eax+eax] 0 +
movzx ecx ds:byte_477E40[ecx*4] +
cmovnz esi ebp +
cmovnz edi eax +
jmp loc_402010  +
movsx eax ds:word_477A60[eax+eax] +
cmp eax 0B0h +
jle loc_402008  +
movzx ecx ds:byte_477D60[ecx*4] +
movsx edx ds:word_477BE0[eax+eax] +
add edx ecx +
movsx ebx ds:word_477660[edx+edx] +
cmp ebx eax +
jnz loc_401FF1  +
movsx eax ds:word_477860[edx+edx] +
add ebp 1 +
movsx edx ds:word_477BE0[eax+eax] +
cmp dx 0C2h +
jz loc_40203E  +
movzx ecx byte ptr [ebp+0] +
jmp loc_401FD8  +
movsx eax ds:word_478240[eax+eax] +
mov ds:dword_49B030 edi +
mov ds:dword_49B02C esi +
test eax eax +
jnz loc_402069  +
mov eax ds:dword_49B030 +
mov ebp ds:dword_49B02C +
movsx eax ds:word_478240[eax+eax] +
mov edi [esp+3Ch+var_28] +
mov edx ebp +
mov ds:dword_49B040 ebp +
sub edx edi +
mov ds:dword_49F980 edi +
mov ds:dword_49F97C edx +
movzx edx byte ptr [ebp+0] +
mov byte ptr [ebp+0] 0 +
mov ds:byte_49B048 dl +
cmp eax 2Ah +
ja loc_4022D9  +
jmp ds:off_47752C[eax*4]  +
mov eax ds:_iob +
mov ds:dword_49B028 eax +
jmp loc_401F7B  +
mov eax ds:_iob +
add eax 20h +
mov ds:dword_49B024 eax +
jmp loc_401F88  +
mov eax 10Eh +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 10Ch +
jmp loc_4020C7  +
mov eax 10Dh +
jmp loc_4020C7  +
mov eax 108h +
jmp loc_4020C7  +
mov eax 109h +
jmp loc_4020C7  +
mov eax 10Ah +
jmp loc_4020C7  +
mov eax 10Bh +
jmp loc_4020C7  +
mov eax 107h +
jmp loc_4020C7  +
mov eax 112h +
jmp loc_4020C7  +
mov eax 103h +
jmp loc_4020C7  +
mov eax 111h +
jmp loc_4020C7  +
mov eax 113h +
jmp loc_4020C7  +
mov eax 106h +
jmp loc_4020C7  +
mov eax 10Fh +
jmp loc_4020C7  +
call sub_401C10  +
mov eax ds:dword_49B04C +
mov edx ds:dword_49B054 +
mov [esp+3Ch+var_38] 4000h +
lea ebx [eax+edx*4] +
mov eax ds:dword_49B028 +
mov [esp+3Ch+var_3C] eax +
call sub_401E50  +
mov [ebx] eax +
jmp loc_401FA6  +
mov eax ebp +
mov ebx ds:dword_49B04C +
sub eax ds:dword_49F980 +
mov edx ds:dword_49B054 +
mov ecx ds:dword_49B044 +
sub eax 1 +
mov [esp+3Ch+var_1C] eax +
movzx eax ds:byte_49B048 +
mov [ebp+0] al +
lea eax [ebx+edx*4] +
mov esi [eax] +
mov [esp+3Ch+var_20] eax +
mov eax [esi+2Ch] +
test eax eax +
jnz loc_4021B1  +
mov eax ds:dword_49B028 +
mov ecx [esi+10h] +
mov [esi] eax +
mov eax [esp+3Ch+var_20] +
mov ds:dword_49B044 ecx +
mov esi [eax] +
mov dword ptr [esi+2Ch] 1 +
mov eax [esi+4] +
mov edi ds:dword_49B040 +
mov [esp+3Ch+var_18] eax +
add eax ecx +
cmp eax edi +
mov [esp+3Ch+var_14] eax +
jnb loc_402633  +
mov eax ds:dword_49F980 +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+var_18] +
lea ecx [eax+ecx+1] +
cmp edi ecx +
ja loc_402629  +
mov eax [esi+28h] +
test eax eax +
jnz loc_4022E3  +
sub edi [esp+3Ch+var_24] +
cmp edi 1 +
jz loc_4024CE  +
mov ebp [esp+3Ch+var_14] +
mov ds:dword_49B040 ebp +
call sub_401AF0  +
mov esi ds:dword_49F980 +
mov [esp+3Ch+var_28] esi +
movsx eax ds:word_478240[eax+eax] +
jmp loc_402052  +
mov eax ds:dword_49B024 +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_30] eax +
mov eax ds:dword_49F97C +
mov [esp+3Ch+var_38] eax +
mov eax ds:dword_49F980 +
mov [esp+3Ch+var_3C] eax +
call fwrite  +
jmp loc_401FAB  +
add ds:dword_49F984 1 +
jmp loc_401FAB  +
mov eax 28h +
jmp loc_4020C7  +
mov eax 29h +
jmp loc_4020C7  +
xor eax eax +
jmp loc_4020C7  +
add ds:dword_49F984 1 +
mov eax 102h +
jmp loc_4020C7  +
mov eax 2Ch +
jmp loc_4020C7  +
mov eax ds:dword_49F980 +
mov [esp+3Ch+var_3C] eax +
call sub_45A840  +
mov ds:dword_49F978 eax +
mov eax 104h +
jmp loc_4020C7  +
mov eax 105h +
jmp loc_4020C7  +
movzx eax ds:byte_49B048 +
mov [ebp+0] al +
mov eax ds:dword_49B030 +
mov ebp ds:dword_49B02C +
movsx eax ds:word_478240[eax+eax] +
jmp loc_402052  +
mov eax offset aFatalFlexScann +
call sub_401BE0  +
mov eax [esp+3Ch+var_24] +
mov ecx edi +
sub ecx eax +
mov [esp+3Ch+var_14] ecx +
sub ecx 1 +
test ecx ecx +
mov [esp+3Ch+var_24] ecx +
jle loc_40231E  +
xor ecx ecx +
mov [esp+3Ch+var_10] edx +
movzx edx byte ptr [eax+ecx] +
mov esi [esp+3Ch+var_18] +
mov [esi+ecx] dl +
add ecx 1 +
cmp [esp+3Ch+var_24] ecx +
jnz loc_402300  +
mov eax [esp+3Ch+var_20] +
mov edx [esp+3Ch+var_10] +
mov esi [eax] +
cmp dword ptr [esi+2Ch] 2 +
jnz loc_402367  +
jmp loc_40243C  +
mov eax [esi+0Ch] +
mov ecx eax +
add ecx ecx +
jnz loc_4023A0  +
mov ecx eax +
shr ecx 3 +
add eax ecx +
mov [esi+0Ch] eax +
add eax 2 +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edx +
call realloc  +
test eax eax +
mov [esi+4] eax +
jz loc_40238F  +
add edi eax +
mov eax [esp+3Ch+var_20] +
mov ds:dword_49B040 edi +
mov esi [eax] +
mov eax [esp+3Ch+var_24] +
not eax  +
add eax [esi+0Ch] +
jnz loc_4023A7  +
test ebx ebx +
mov eax 0 +
cmovz esi eax +
mov edx [esi+4] +
mov ecx [esi+14h] +
sub edi edx +
test ecx ecx +
jnz loc_402330  +
mov dword ptr [esi+4] 0 +
mov eax offset aFatalErrorScan +
call sub_401BE0  +
lea esi [esi+0] +
mov [esi+0Ch] ecx +
mov eax ecx +
jmp loc_402343  +
mov edx [esi+18h] +
cmp eax 2000h +
mov edi 2000h +
cmovbe edi eax +
test edx edx +
jz loc_402582  +
xor esi esi +
mov [esp+3Ch+var_20] ebp +
mov [esp+3Ch+var_18] edi +
jmp loc_4023FD  +
cmp eax 0Ah +
jz loc_40255D  +
mov edx ds:dword_49B054 +
add esi 1 +
mov ebx ds:dword_49B04C +
mov edi [esp+3Ch+var_14] +
lea ecx [ebx+edx*4] +
mov ebp [ecx] +
add edi [ebp+4] +
mov [esi+edi-2] al +
cmp esi [esp+3Ch+var_18] +
jnb loc_402532  +
mov eax ds:dword_49B028 +
mov [esp+3Ch+var_3C] eax +
call getc  +
cmp eax 0FFFFFFFFh +
jnz loc_4023CB  +
mov eax ds:dword_49B028 +
mov ebp [esp+3Ch+var_20] +
mov [esp+3Ch+var_3C] eax +
call ferror  +
test eax eax +
jnz loc_402606  +
mov edx ds:dword_49B054 +
mov ebx ds:dword_49B04C +
lea ecx [ebx+edx*4] +
jmp loc_402536  +
mov ds:dword_49B044 0 +
mov dword ptr [esi+10h] 0 +
mov eax [esp+3Ch+var_24] +
test eax eax +
jz loc_402681  +
lea ebx [ebx+edx*4] +
xor eax eax +
mov esi [ebx] +
mov [esp+3Ch+var_20] 2 +
mov dword ptr [esi+2Ch] 2 +
mov edi [esp+3Ch+var_24] +
add edi eax +
cmp edi [esi+0Ch] +
ja loc_402505  +
mov eax [esi+4] +
mov byte ptr [eax+edi] 0 +
mov eax [ebx] +
cmp [esp+3Ch+var_20] 1 +
mov ds:dword_49B044 edi +
mov eax [eax+4] +
mov byte ptr [eax+edi+1] 0 +
mov eax [ebx] +
mov eax [eax+4] +
mov ds:dword_49F980 eax +
jnz loc_4024D4  +
mov ds:dword_49B040 eax +
mov eax ds:dword_49B038 +
mov ds:dword_49B034 0 +
sub eax 1 +
mov edx eax +
shr edx 1Fh +
add eax edx +
sar eax 1 +
add eax 2Ah +
jmp loc_402091  +
mov eax [esp+3Ch+var_24] +
jmp loc_4024A6  +
cmp [esp+3Ch+var_20] 2 +
mov esi edi +
jz loc_4026B1  +
mov ebp [esp+3Ch+var_1C] +
add ebp eax +
mov ds:dword_49B040 ebp +
call sub_401AF0  +
mov esi ds:dword_49F980 +
mov [esp+3Ch+var_28] esi +
movzx ecx byte ptr [ebp+0] +
jmp loc_401FC4  +
mov ecx [esi+4] +
shr eax 1 +
add eax edi +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] ecx +
call realloc  +
mov [esi+4] eax +
mov eax [ebx] +
mov eax [eax+4] +
test eax eax +
jnz loc_402481  +
mov eax offset aOutOfDynamic_1 +
call sub_401BE0  +
mov ebp [esp+3Ch+var_20] +
mov ds:dword_49B044 esi +
mov eax esi +
mov ecx [ecx] +
test eax eax +
mov [ecx+10h] eax +
jz loc_40244D  +
lea ebx [ebx+edx*4] +
mov esi [ebx] +
mov [esp+3Ch+var_20] 0 +
jmp loc_40246F  +
mov edx ds:dword_49B054 +
mov ebx ds:dword_49B04C +
mov edi [esp+3Ch+var_24] +
mov ebp [esp+3Ch+var_20] +
lea ecx [ebx+edx*4] +
mov eax [ecx] +
add edi [eax+4] +
mov byte ptr [edi+esi] 0Ah +
add esi 1 +
jmp loc_402536  +
call ds:__imp__errno  +
mov dword ptr [eax] 0 +
jmp loc_4025C9  +
mov eax ds:dword_49B028 +
mov [esp+3Ch+var_3C] eax +
call ferror  +
test eax eax +
jz loc_402610  +
call ds:__imp__errno  +
cmp dword ptr [eax] 4 +
jnz loc_402606  +
lea esi [esi+0] +
call ds:__imp__errno  +
mov dword ptr [eax] 0 +
mov eax ds:dword_49B028 +
mov [esp+3Ch+var_3C] eax +
call clearerr  +
mov eax ds:dword_49B028 +
mov edx ds:dword_49B054 +
mov [esp+3Ch+var_34] edi +
mov esi [esp+3Ch+var_24] +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_30] eax +
mov eax ds:dword_49B04C +
mov eax [eax+edx*4] +
add esi [eax+4] +
mov [esp+3Ch+var_3C] esi +
call fread  +
test eax eax +
mov ds:dword_49B044 eax +
jz loc_402590  +
jmp loc_402615  +
mov eax offset aInputInFlexSca +
call sub_401BE0  +
mov eax ds:dword_49B044 +
mov edx ds:dword_49B054 +
mov ebx ds:dword_49B04C +
lea ecx [ebx+edx*4] +
jmp loc_40253E  +
mov eax offset aFatalFlexSca_0 +
call sub_401BE0  +
mov ebp [esp+3Ch+var_1C] +
add ebp ds:dword_49F980 +
mov ds:dword_49B040 ebp +
call sub_401AF0  +
mov edx eax +
movsx eax ds:word_478240[eax+eax] +
test ax ax +
jz loc_402663  +
mov ds:dword_49B030 edx +
mov ds:dword_49B02C ebp +
movsx ecx ds:word_477BE0[edx+edx] +
movsx ebx ds:word_477662[ecx+ecx] +
cmp edx ebx +
jz loc_4026BD  +
movsx edx ds:word_477A60[edx+edx] +
jmp loc_402663  +
mov eax ds:dword_49B028 +
mov [esp+3Ch+var_3C] eax +
call sub_401EB0  +
mov edx ds:dword_49B04C +
mov ecx ds:dword_49B054 +
mov eax ds:dword_49B044 +
mov [esp+3Ch+var_20] 1 +
lea ebx [edx+ecx*4] +
mov esi [ebx] +
jmp loc_40246F  +
mov eax [ebx] +
add esi [eax+4] +
mov ebp esi +
jmp loc_402201  +
movsx edx ds:word_477862[ecx+ecx] +
mov esi ds:dword_49F980 +
cmp edx 0B0h +
mov [esp+3Ch+var_28] esi +
jz loc_402052  +
test edx edx +
jz loc_402052  +
add ebp 1 +
mov eax edx +
mov ds:dword_49B040 ebp +
jmp loc_4024FC  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0Ch +
mov ebx [esp+20h] +
test ebx ebx +
jz loc_40277A  +
call sub_401C10  +
mov edx ds:dword_49B04C +
mov eax ds:dword_49B054 +
shl eax 2 +
test edx edx +
jz loc_402769  +
mov edi ds:dword_49B054 +
lea esi ds:0[edi*4] +
lea eax [edx+esi] +
mov ecx [eax] +
test ecx ecx +
jz loc_402769  +
mov ebp ds:dword_49B040 +
add edi 1 +
movzx ecx ds:byte_49B048 +
mov ds:dword_49B054 edi +
mov [ebp+0] cl +
mov ecx [eax] +
mov [ecx+8] ebp +
mov ecx ds:dword_49B044 +
mov eax [eax] +
mov [eax+10h] ecx +
lea eax [edx+esi+4] +
mov [eax] ebx +
call sub_401BA0  +
mov ds:dword_49B034 1 +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [eax+2Ch] 0 +
mov [esp] eax +
call loc_401CB0  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_4] +
mov esi [esp+10h+arg_0] +
lea edi [ebx+2] +
mov [esp+10h+var_10] edi +
call malloc  +
test eax eax +
jz loc_4028F8  +
xor edx edx +
test ebx ebx +
jz loc_4028D1  +
movzx ecx byte ptr [esi+edx] +
mov [eax+edx] cl +
add edx 1 +
cmp edx ebx +
jnz loc_4028C3  +
mov byte ptr [eax+ebx+1] 0 +
mov byte ptr [eax+ebx] 0 +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] eax +
call near ptr dword_402790+70h  +
test eax eax +
jz loc_402902  +
mov dword ptr [eax+14h] 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax offset aOutOfDynamic_3 +
call sub_401BE0  +
mov eax offset aBadBufferInYy_ +
call sub_401BE0  +
lea esi [esi+0] +
push ebx  +
sub esp 18h +
mov ebx [esp+2Ch+var_C] +
mov [esp+2Ch+var_2C] ebx +
call strlen  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call sub_4028A0  +
add esp 18h +
pop ebx  +
retn   +
***
jmp loc_402940  +
mov eax dword_476004 +
retn   +
***
mov eax ds:dword_49B028 +
retn   +
***
mov eax ds:dword_49B024 +
retn   +
***
mov eax ds:dword_49F97C +
retn   +
***
mov eax ds:dword_49F980 +
retn   +
***
mov eax [esp+4] +
mov dword_476004 eax +
retn   +
***
mov eax [esp+4] +
mov ds:dword_49B028 eax +
retn   +
***
mov eax [esp+4] +
mov ds:dword_49B024 eax +
retn   +
***
mov eax ds:dword_49B020 +
retn   +
***
mov eax [esp+4] +
mov ds:dword_49B020 eax +
retn   +
***
sub esp 1Ch +
mov eax ds:dword_49B04C +
test eax eax +
jnz loc_402A19  +
jmp loc_402A84  +
mov [esp] edx +
call sub_401D20  +
mov eax ds:dword_49B04C +
mov edx ds:dword_49B054 +
mov dword ptr [eax+edx*4] 0 +
call near ptr dword_402790  +
mov eax ds:dword_49B04C +
test eax eax +
jz loc_402A84  +
mov edx ds:dword_49B054 +
mov edx [eax+edx*4] +
test edx edx +
jnz loc_4029F1  +
mov [esp] eax +
call free  +
xor eax eax +
mov ds:dword_49B04C 0 +
mov ds:dword_49B054 0 +
mov ds:dword_49B050 0 +
mov ds:dword_49B040 0 +
mov ds:dword_49B03C 0 +
mov ds:dword_49B038 0 +
mov ds:dword_49B028 0 +
mov ds:dword_49B024 0 +
add esp 1Ch +
retn   +
***
xor eax eax +
jmp loc_402A26  +
***
jmp malloc  +
***
jmp realloc  +
***
jmp free  +
***
mov eax 1 +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax ds:dword_49B064 +
test eax eax +
jz loc_402AEE  +
mov edi ds:dword_49B068 +
mov ebp eax +
cmp ebp 3 +
jz loc_402B33  +
mov ebx [esi] +
test ebx ebx +
jnz loc_402B12  +
jmp loc_402B29  +
mov eax [esi] +
mov ebx [eax+90h] +
lea esi [eax+90h] +
test ebx ebx +
jz loc_402B29  +
mov eax [ebx] +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] eax +
call sub_45B6E0  +
test eax eax +
jnz loc_402B00  +
cmp ebp 2 +
jz loc_402B60  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi] +
test edx edx +
jnz loc_402B42  +
jmp loc_402B29  +
mov edx eax +
mov eax [edx+90h] +
test eax eax +
jnz loc_402B40  +
add esp 1Ch +
lea esi [edx+90h] +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esi] +
add esi 90h +
jmp loc_402B29  +
***
push esi  +
sub esp 1Ch +
mov eax ds:dword_49B078 +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] eax +
mov eax ds:_iob +
add eax 20h +
mov [esp+1Ch+var_1C] eax +
call sub_4053D0  +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 14h +
test esi esi +
mov eax ds:_iob +
jz loc_402E48  +
lea ebx [eax+20h] +
mov eax ds:dword_49F988 +
mov [esp+18h+var_14] offset aUsageSOptionsA +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call fprintf  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2Fh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aGenerateAnInde +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 4Ah +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheOptionsAre@ +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 39h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aPluginNameLoad +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 8Ah +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aDUseZeroForSym +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 0B9h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTUpdateTheArch +
call fwrite  +
mov eax ds:dword_49F988 +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call sub_404D80  +
mov [esp+18h+var_10] offset aHttpWww_source +
mov [esp+18h+var_14] offset aReportBugsToS +
mov [esp+18h+var_18] ebx +
call fprintf  +
xor eax eax +
test esi esi +
setz al  +
mov [esp+18h+var_18] eax +
call sub_45BA00  +
lea ebx [eax+40h] +
mov eax ds:dword_49F988 +
mov [esp+18h+var_14] offset aUsageSOptionsA +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call fprintf  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2Fh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aGenerateAnInde +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 4Ah +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTheOptionsAre@ +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 39h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aPluginNameLoad +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 8Ah +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aDUseZeroForSym +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 0B9h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTUpdateTheArch +
call fwrite  +
mov eax ds:dword_49F988 +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call sub_404D80  +
jmp loc_402E39  +
***
push ebx  +
sub esp 14h +
mov eax ds:_iob +
test esi esi +
lea ebx [eax+20h] +
jnz loc_402F36  +
lea ebx [eax+40h] +
mov eax ds:dword_49F988 +
mov [esp+18h+var_14] offset aUsageSEmulatio +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call fprintf  +
mov eax ds:dword_49F988 +
mov [esp+18h+var_14] offset aSMMriScript +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call fprintf  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 0Bh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCommands +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 31h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aDDeleteFileSFr +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aMAbMoveFileSIn +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 34h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aPPrintFileSFou +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 35h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aQFQuickAppendF +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 49h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aRAbFUReplaceEx +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 1Fh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aSActAsRanlib +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTDisplayConten +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 32h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aXOExtractFileS +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 1Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCommandSpecifi +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 31h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aAPutFileSAfter +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 40h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aBPutFileSBefor +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 37h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aDUseZeroForTim +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Fh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aUUseActualTime +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2Eh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aNUseInstanceCo +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2Eh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aFTruncateInser +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 33h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aPUseFullPathNa +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 29h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aOPreserveOrigi +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 51h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aUOnlyReplaceFi +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 14h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aGenericModifie +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 3Eh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aCDoNotWarnIfTh +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 36h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aSCreateAnArchi +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2Dh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aSDoNotBuildASy +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 25h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTMakeAThinArch +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 1Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aVBeVerbose +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2Ch +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aVDisplayTheVer +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2Ah +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset a@FileReadOptio +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 41h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aTargetBfdnameS +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 0Bh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aOptional +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 2Bh +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aPluginPLoadThe +
call fwrite  +
mov [esp+18h+var_18] ebx +
call sub_4047E0  +
mov eax ds:dword_49F988 +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call sub_404D80  +
test esi esi +
jnz loc_403354  +
xor eax eax +
test esi esi +
setz al  +
mov [esp+18h+var_18] eax +
call sub_45BA00  +
mov [esp+18h+var_10] offset aHttpWww_source +
mov [esp+18h+var_14] offset aReportBugsToS +
mov [esp+18h+var_18] ebx +
call fprintf  +
jmp loc_403345  +
***
push esi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 10h +
mov [esp+14h+var_14] eax +
call sub_45BAA0  +
mov ebx eax +
mov eax ds:dword_49B0A0 +
test eax eax +
jz loc_403782  +
test esi esi +
jz loc_403782  +
mov [esp+14h+var_14] ebx +
call strlen  +
mov edx [esi+4] +
movzx edx byte ptr [edx+1Ah] +
cmp eax edx +
ja loc_403790  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add edx 1 +
mov [esp+14h+var_14] edx +
call sub_45B8D0  +
mov edi eax +
mov eax [esi+4] +
movzx eax byte ptr [eax+1Ah] +
mov [esp+14h+var_10] ebx +
mov ebx edi +
mov [esp+14h+var_14] edi +
mov [esp+14h+var_C] eax +
call memcpy  +
mov eax [esi+4] +
movzx eax byte ptr [eax+1Ah] +
mov byte ptr [edi+eax] 0 +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 5Ch +
mov ebx [esp+60h+arg_0] +
mov [esp+60h+var_44] edx +
test ebx ebx +
jnz loc_403808  +
mov ebx [eax+90h] +
test ebx ebx +
jz loc_403800  +
mov esi edx +
mov [esp+60h+var_60] ebx +
call esi  +
mov ebx [ebx+90h] +
test ebx ebx +
jnz loc_4037F1  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [eax+90h] +
mov ebp ecx +
test ebx ebx +
mov eax ebx +
jz loc_403827  +
mov dword ptr [eax+70h] 0 +
mov eax [eax+90h] +
test eax eax +
jnz loc_403816  +
cmp [esp+60h+arg_0] 0 +
jle loc_403800  +
nop   +
test ebx ebx +
jz loc_4038D0  +
xor edi edi +
jmp loc_40387F  +
mov edx ds:dword_49B09C +
test edx edx +
jz loc_4038B4  +
mov eax [ebp+0] +
mov [esp+60h+var_5C] ecx +
mov [esp+60h+var_60] eax +
call sub_45B6E0  +
test eax eax +
jnz loc_403875  +
mov eax ds:dword_49B0A8 +
add edi 1 +
test eax eax +
jz loc_4038F1  +
cmp edi ds:dword_49B0A4 +
jz loc_4038F1  +
mov ebx [ebx+90h] +
test ebx ebx +
jz loc_4038D0  +
mov ecx [ebx+70h] +
test ecx ecx +
jnz loc_403875  +
mov ecx [ebx] +
test ecx ecx +
jz loc_403920  +
test byte ptr [esi+2Bh] 40h +
jnz loc_403840  +
mov edx ds:dword_49B09C +
mov eax [ebp+0] +
test edx edx +
jnz loc_40384D  +
mov edx esi +
mov [esp+60h+var_48] ecx +
call sub_403750  +
mov ecx [esp+60h+var_48] +
jmp loc_40384D  +
mov eax ecx +
mov edx esi +
call sub_403750  +
test eax eax +
mov ecx eax +
jnz loc_403896  +
mov ebx [ebx+90h] +
test ebx ebx +
jnz loc_40387F  +
lea esi [esi+0] +
mov eax [ebp+0] +
mov [esp+60h+var_5C] offset aNoEntrySInAr_0 +
mov [esp+60h+var_58] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+60h+var_60] eax +
call fprintf  +
jmp loc_403901  +
mov eax [esp+60h+var_44] +
mov [esp+60h+var_60] ebx +
call eax  +
mov dword ptr [ebx+70h] 1 +
add ebp 4 +
sub [esp+60h+arg_0] 1 +
jz loc_403800  +
mov ebx [esi+90h] +
jmp loc_403830  +
mov eax [ebx+4] +
lea edx [esp+60h+var_40] +
mov eax [eax+0FCh] +
mov [esp+60h+var_5C] edx +
mov [esp+60h+var_60] ebx +
call eax  +
jmp loc_403875  +
***
push ebx  +
sub esp 18h +
mov [esp+18h+var_18] eax +
call sub_4055F0  +
cmp edx 0 +
jl loc_403C15  +
jle loc_403C10  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] ebx +
mov ds:dword_49B06C 1 +
call sub_403940  +
test eax eax +
jz loc_403C1F  +
call sub_403370  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
cmp eax 0 +
ja loc_403BE5  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov [esp+18h+var_18] 1 +
call sub_45BA00  +
nop   +
nop   +
nop   +
nop   +
nop   +
mov edx [esp+18h+var_10] +
mov eax [esp+18h+var_14] +
test edx edx +
jz loc_403C48  +
mov ecx [eax+90h] +
mov [edx+90h] ecx +
mov edx ds:dword_49B0BC +
mov ecx [edx+94h] +
mov [eax+90h] ecx +
mov [edx+94h] eax +
retn   +
***
jmp sub_403C70  +
***
sub esp 1Ch +
mov eax ds:dword_49B078 +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] eax +
mov eax ds:dword_49B0B4 +
mov [esp+1Ch+var_1C] eax +
call sub_4053D0  +
add esp 1Ch +
retn   +
***
push esi  +
mov esi ecx +
push ebx  +
sub esp 2Ch +
test ecx ecx +
mov [esp+30h+var_14] eax +
mov [esp+30h+var_18] edx +
jz loc_403D50  +
lea esi [esi+0] +
mov eax [esp+30h+var_14] +
xor edi edi +
mov ebp [eax+90h] +
mov ebx eax +
test ebp ebp +
jnz loc_403CE2  +
jmp loc_403D30  +
mov eax [ebp+90h] +
test eax eax +
jz loc_403D17  +
mov ebx ebp +
mov ebp eax +
mov eax [ebp+0] +
test eax eax +
jz loc_403CD4  +
mov edx [esi] +
mov [esp+30h+var_2C] eax +
mov [esp+30h+var_30] edx +
call sub_45B6E0  +
test eax eax +
jnz loc_403CD4  +
mov eax [esp+30h+var_18] +
mov edi 1 +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] ebp +
call eax  +
mov eax [ebp+90h] +
test eax eax +
jnz loc_403CDE  +
test edi edi +
jz loc_403D30  +
mov esi [esi+4] +
test esi esi +
jnz loc_403CC0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi] +
mov [esp+30h+var_2C] offset aNoEntrySInArch +
mov [esp+30h+var_28] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+30h+var_30] eax +
call fprintf  +
jmp loc_403D1B  +
mov eax [eax+90h] +
test eax eax +
jz loc_403D22  +
mov esi edx +
jmp loc_403D62  +
mov eax ebx +
mov ebx [eax+90h] +
mov [esp+30h+var_2C] 0 +
mov [esp+30h+var_30] eax +
call esi  +
test ebx ebx +
jnz loc_403D60  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_403D90  +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_C] 0 +
mov esi [esp+10h+arg_8] +
mov edi [esp+10h+arg_4] +
mov [esp+10h+var_10] eax +
call sub_403940  +
test esi esi +
mov ebx eax +
jz loc_403E00  +
mov [esp+10h+var_C] offset aW +
mov [esp+10h+var_10] esi +
call fopen  +
test eax eax +
mov ds:dword_49B0B4 eax +
jz loc_403E30  +
mov ecx edi +
mov eax ebx +
mov edx offset sub_403C70 +
call sub_403CA0  +
mov [esp+10h+var_10] ebx +
call sub_407790  +
mov eax ds:dword_49B0B4 +
mov [esp+10h+arg_0] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp fclose  +
mov eax ds:_iob +
add eax 20h +
mov ds:dword_49B0B4 eax +
mov ecx edi +
mov eax ebx +
mov edx offset sub_403C70 +
call sub_403CA0  +
mov [esp+10h+arg_0] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_407790  +
mov eax ds:_iob +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_C] offset aCanTOpenFileS +
lea edx [eax+20h] +
add eax 40h +
mov [esp+10h+var_10] eax +
mov ds:dword_49B0B4 edx +
call fprintf  +
jmp loc_403E0D  +
***
mov eax ds:dword_49B05C +
test eax eax +
jnz loc_403E70  +
retn   +
sub esp 1Ch +
mov [esp+1Ch+var_1C] offset aAr +
call printf  +
mov eax ds:_iob +
add eax 20h +
mov [esp+1Ch+var_1C] eax +
call fflush  +
add esp 1Ch +
retn   +
***
mov eax ds:dword_49B05C +
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov [esp+24h+var_24] ebx +
call strlen  +
add eax 0Ah +
mov [esp+24h+var_24] eax +
call sub_45B8D0  +
mov [esp+24h+var_24] ebx +
mov esi eax +
call sub_45BAA0  +
mov [esp+24h+var_18] ebx +
mov [esp+24h+var_20] offset a_StmpS +
mov [esp+24h+var_24] esi +
mov ds:dword_49B0B8 ebx +
mov [esp+24h+var_14] eax +
sub eax ebx +
mov [esp+24h+var_1C] eax +
call sprintf  +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_24] esi +
call sub_407720  +
test eax eax +
mov ds:dword_49B0BC eax +
jz loc_404030  +
mov edx [esp+24h+arg_4] +
test edx edx +
jz loc_403F60  +
mov edx eax +
mov [esp+24h+var_24] edx +
mov [esp+24h+var_20] 2 +
call sub_4089D0  +
mov edx ds:dword_49B0BC +
movzx eax byte ptr [edx+2Bh] +
or eax 20h +
and eax 0FFFFFFBFh +
mov [edx+2Bh] al +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_24] ebx +
call sub_407650  +
test eax eax +
mov esi eax +
jz loc_404013  +
mov [esp+24h+var_20] 2 +
mov [esp+24h+var_24] eax +
call sub_4089A0  +
test eax eax +
jnz loc_403FD0  +
mov eax ds:dword_49F988 +
mov [esp+24h+var_18] ebx +
mov [esp+24h+var_20] offset aSFileSIsNotAnA +
mov [esp+24h+var_1C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+24h+var_24] eax +
call fprintf  +
mov ecx ds:dword_49B05C +
test ecx ecx +
jnz loc_403F54  +
mov [esp+24h+var_24] 9 +
call sub_45BA00  +
lea esi [esi+0] +
mov eax ds:dword_49B0BC +
mov [esp+24h+var_20] 0 +
mov [esp+24h+var_24] esi +
lea ebx [eax+94h] +
call sub_409AD0  +
test eax eax +
jz loc_404008  +
nop   +
mov [ebx] eax +
lea ebx [eax+90h] +
mov [esp+24h+var_20] eax +
mov [esp+24h+var_24] esi +
call sub_409AD0  +
test eax eax +
jnz loc_403FF0  +
mov edx ds:dword_49B0BC +
jmp loc_403F31  +
mov eax ds:dword_49F988 +
mov [esp+24h+var_18] ebx +
mov [esp+24h+var_20] offset aSCanTOpenInput +
mov [esp+24h+var_1C] eax +
jmp loc_403FA3  +
mov eax ds:dword_49F988 +
mov [esp+24h+var_18] esi +
mov [esp+24h+var_20] offset aSCanTOpenOutpu +
mov [esp+24h+var_1C] eax +
jmp loc_403FA3  +
***
mov edx ds:dword_49B0BC +
mov ecx ds:dword_49B0BC +
mov ebx [esp+18h+arg_0] +
test ecx ecx +
jnz loc_4040FF  +
jmp loc_404155  +
mov edx ds:dword_49B0BC +
mov ecx [edx+94h] +
mov [eax+90h] ecx +
mov [edx+94h] eax +
mov ebx [ebx+4] +
test ebx ebx +
jz loc_404180  +
mov eax [ebx] +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] eax +
call sub_407650  +
test eax eax +
jnz loc_4040E4  +
mov eax [ebx] +
mov [esp+18h+var_14] offset aSCanTOpenFileS +
mov [esp+18h+var_C] eax +
mov eax ds:dword_49F988 +
mov [esp+18h+var_10] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
mov eax ds:dword_49B05C +
test eax eax +
jnz loc_4040FC  +
mov [esp+18h+var_18] 9 +
call sub_45BA00  +
mov eax ds:dword_49F988 +
mov [esp+18h+var_14] offset aSNoOpenOutputA +
mov [esp+18h+var_10] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
mov edx ds:dword_49B05C +
test edx edx +
jz loc_404149  +
add esp 18h +
pop ebx  +
retn   +
***
mov eax ds:dword_49B0BC +
test eax eax +
jz locret_4041A3  +
mov dword ptr [eax+94h] 0 +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi ds:dword_49B0BC +
mov ebp [esp+1Ch+arg_0] +
test esi esi +
jz loc_404271  +
test ebp ebp +
jz loc_40429C  +
mov ebx [esi+94h] +
xor edi edi +
add esi 94h +
test ebx ebx +
jnz loc_4041FC  +
jmp loc_404234  +
mov eax [ebx+90h] +
mov edi 1 +
mov [esi] eax +
mov ebx [ebx+90h] +
test ebx ebx +
jz loc_404221  +
mov edx [ebp+0] +
mov eax [ebx] +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] eax +
call sub_45B6E0  +
test eax eax +
jz loc_4041E5  +
lea esi [ebx+90h] +
mov ebx [ebx+90h] +
test ebx ebx +
jnz loc_4041FC  +
test edi edi +
jz loc_404234  +
mov ebp [ebp+4] +
test ebp ebp +
jz loc_40429C  +
mov esi ds:dword_49B0BC +
jmp loc_4041D1  +
mov eax [ebp+0] +
mov [esp+1Ch+var_18] offset aSCanTFindModul +
mov [esp+1Ch+var_10] eax +
mov eax ds:dword_49F988 +
mov [esp+1Ch+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
mov eax ds:dword_49B05C +
test eax eax +
jnz loc_404225  +
mov [esp+1Ch+var_1C] 9 +
call sub_45BA00  +
mov eax ds:dword_49F988 +
mov [esp+1Ch+var_18] offset aSNoOpenOutputA +
mov [esp+1Ch+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
mov edx ds:dword_49B05C +
test edx edx +
jz loc_404265  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax ds:dword_49B0BC +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi ds:dword_49B0BC +
mov ebp [esp+1Ch+arg_0] +
test esi esi +
jz loc_4044E0  +
test ebp ebp +
jz loc_40445C  +
mov ebx [esi+94h] +
add esi 94h +
test ebx ebx +
jz loc_404412  +
xor edi edi +
jmp loc_4043A0  +
lea esi [ebx+90h] +
mov ebx [ebx+90h] +
test ebx ebx +
jz loc_4043ED  +
mov edx [ebp+0] +
mov eax [ebx] +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] eax +
call sub_45B6E0  +
test eax eax +
jnz loc_404390  +
mov eax [ebp+0] +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] eax +
call sub_407650  +
test eax eax +
jz loc_404464  +
mov [esi] eax +
mov edx [ebx+90h] +
mov edi 1 +
mov [eax+90h] edx +
mov ebx [ebx+90h] +
test ebx ebx +
jnz loc_4043A0  +
test edi edi +
jz loc_404412  +
mov ebp [ebp+4] +
test ebp ebp +
jz loc_40445C  +
mov esi ds:dword_49B0BC +
mov ebx [esi+94h] +
add esi 94h +
test ebx ebx +
jnz loc_404385  +
mov eax [ebp+0] +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] eax +
call sub_407650  +
mov ebx eax +
mov eax [ebp+0] +
mov [esp+1Ch+var_18] offset aSCanTFindModul +
mov [esp+1Ch+var_10] eax +
mov eax ds:dword_49F988 +
mov [esp+1Ch+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
test ebx ebx +
jz loc_4044A6  +
mov [esi] ebx +
mov ebp [ebp+4] +
test ebp ebp +
jnz loc_4043F8  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0] +
mov [esp+1Ch+var_18] offset aSCanTOpenFileS +
mov [esp+1Ch+var_10] eax +
mov eax ds:dword_49F988 +
mov [esp+1Ch+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
mov edx ds:dword_49B05C +
test edx edx +
jnz loc_404396  +
mov [esp+1Ch+var_1C] 9 +
call sub_45BA00  +
mov eax [ebp+0] +
mov [esp+1Ch+var_18] offset aSCanTOpenFileS +
mov [esp+1Ch+var_10] eax +
mov eax ds:dword_49F988 +
mov [esp+1Ch+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
mov eax ds:dword_49B05C +
test eax eax +
jnz loc_4043F1  +
jmp loc_40449A  +
mov eax ds:dword_49F988 +
mov [esp+1Ch+var_18] offset aSNoOpenOutputA +
mov [esp+1Ch+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+1Ch+var_1C] eax +
call fprintf  +
mov ecx ds:dword_49B05C +
test ecx ecx +
jz loc_40449A  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax ds:dword_49B0BC +
mov eax ds:dword_49B0BC +
test eax eax +
jz locret_4045F6  +
sub esp 1Ch +
mov [esp+1Ch+var_1C] eax +
call sub_406530  +
mov eax ds:dword_49B0BC +
mov eax [eax] +
mov [esp+1Ch+var_1C] eax +
call _unlink  +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov eax [esp+28h+arg_4] +
mov ebx [esp+28h+arg_0] +
mov edx [eax+20h] +
mov eax [eax+24h] +
mov [esp+28h+var_28] ebx +
mov [esp+28h+var_10] edx +
mov [esp+28h+var_C] eax +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
call _utime  +
test eax eax +
jz loc_404742  +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+28h+var_28] eax +
call strerror  +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] offset aSCannotSetTime +
mov [esp+28h+var_20] eax +
call sub_404CA0  +
add esp 28h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 40h +
mov ebx [esp+40h+arg_4] +
lea eax [esp+40h+var_30] +
mov edi [esp+40h+arg_0] +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] ebx +
call ds:_stati64  +
test eax eax +
jz loc_4047C0  +
mov [esp+40h+var_3C] ebx +
mov [esp+40h+var_40] edi +
call rename  +
test eax eax +
mov esi eax +
jz loc_4047B1  +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+40h+var_40] eax +
call strerror  +
mov [esp+40h+var_3C] ebx +
mov [esp+40h+var_40] offset aUnableToRename +
mov [esp+40h+var_38] eax +
call sub_404CA0  +
mov [esp+40h+var_40] edi +
call _unlink  +
add esp 40h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+40h+var_40] ebx +
call remove  +
jmp loc_404773  +
***
mov eax 1 +
retn   +
***
mov eax off_476080 +
test eax eax +
jz locret_4047F0  +
jmp eax  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_10] 15h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aEmulationOptio +
mov [esp+18h+var_C] ebx +
call fwrite  +
mov [esp+18h+var_C] ebx +
mov [esp+18h+var_10] 20h +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aNoEmulationSpe +
call fwrite  +
add esp 18h +
pop ebx  +
retn   +
***
mov eax off_476084 +
push edi  +
push esi  +
push ebx  +
test eax eax +
jz loc_404861  +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+2Ch+arg_C] +
mov esi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_10] +
test edx edx +
jz loc_40489F  +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] ebx +
call sub_4089A0  +
test eax eax +
jnz loc_4048E5  +
mov [esp+2Ch+var_2C] ebx +
call edi  +
test eax eax +
jz loc_4048C7  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jnz loc_4048D1  +
mov eax [esi] +
mov [ebx+90h] eax +
mov eax 1 +
mov [esi] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
mov [esp+2Ch+var_2C] offset aAS +
mov [esp+2Ch+var_28] eax +
call printf  +
jmp loc_4048B0  +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] ebx +
call sub_409AD0  +
mov [esp+2Ch+var_10] 0 +
test eax eax +
mov ebp eax +
jz loc_4048C7  +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_1C] edi +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_2C] esi +
call sub_404870  +
test eax eax +
jz loc_404937  +
mov esi [esi] +
mov [esp+2Ch+var_10] 1 +
add esi 90h +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
call sub_409AD0  +
test eax eax +
mov ebp eax +
jnz loc_404903  +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov eax off_476088 +
push esi  +
push ebx  +
test eax eax +
jz loc_4049D0  +
pop ebx  +
pop esi  +
jmp eax  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov eax off_47608C +
test eax eax +
jz loc_404A50  +
jmp eax  +
xor eax eax +
retn   +
***
retn   +
***
mov esi eax +
push ebx  +
sub esp 10h +
mov [esp+14h+var_10] 2Fh +
mov [esp+14h+var_14] eax +
call strrchr  +
mov [esp+14h+var_10] 5Ch +
mov [esp+14h+var_14] esi +
mov edi eax +
call strrchr  +
test edi edi +
jz loc_404AF4  +
cmp eax edi +
ja loc_404AF0  +
sub edi esi +
lea eax [edi+0Bh] +
mov [esp+14h+var_14] eax +
call sub_45B8D0  +
mov [esp+14h+var_C] edi +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
mov ebx eax +
call memcpy  +
cmp edi 2 +
lea eax [edi+1] +
jz loc_404B17  +
mov byte ptr [ebx+edi] 2Fh +
add eax ebx +
mov dword ptr [eax] 58587473h +
mov dword ptr [eax+4] 58585858h +
mov byte ptr [eax+8] 0 +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax eax +
jz loc_404AA2  +
test eax eax +
mov edi eax +
jnz loc_404AA2  +
cmp byte ptr [esi] 0 +
jz loc_404B05  +
cmp byte ptr [esi+1] 3Ah +
jz loc_404B30  +
mov [esp+14h+var_14] 9 +
call sub_45B8D0  +
mov ebx eax +
xor eax eax +
jmp loc_404ACD  +
cmp byte ptr [ebx+1] 3Ah +
mov eax 3 +
jnz loc_404AC9  +
mov byte ptr [ebx+2] 2Eh +
mov al 4 +
mov edi 3 +
jmp loc_404AC9  +
mov edi esi +
add edi 1 +
jz loc_404B05  +
jmp loc_404AA2  +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
call sub_40C520  +
mov [esp+24h+var_24] eax +
call sub_40C530  +
mov esi eax +
mov eax ds:_iob +
lea edx [eax+20h] +
mov [esp+24h+var_24] edx +
call fflush  +
test ebx ebx +
jz loc_404BA0  +
mov eax ds:dword_49F988 +
mov [esp+24h+var_14] esi +
mov [esp+24h+var_18] ebx +
mov [esp+24h+var_20] offset aSSS +
mov [esp+24h+var_1C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+24h+var_24] eax +
call fprintf  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax ds:dword_49F988 +
mov [esp+24h+var_18] esi +
mov [esp+24h+var_20] offset aSS_2 +
mov [esp+24h+var_1C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+24h+var_24] eax +
call fprintf  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
sub esp 14h +
mov eax ds:_iob +
mov ebx [esp+14h+arg_0] +
mov esi [esp+14h+arg_4] +
add eax 20h +
mov [esp+14h+var_14] eax +
call fflush  +
mov eax ds:dword_49F988 +
mov [esp+14h+var_10] offset aS_1 +
mov [esp+14h+var_C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+14h+var_14] eax +
call fprintf  +
mov eax ds:_iob +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
add eax 40h +
mov [esp+14h+var_14] eax +
call vfprintf  +
mov eax ds:_iob +
mov [esp+14h+arg_0] 0Ah +
add eax 40h +
mov [esp+14h+arg_4] eax +
add esp 14h +
pop ebx  +
pop esi  +
jmp putc  +
***
sub esp 1Ch +
sub esp 1Ch +
lea eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_404BF0  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov eax ds:_iob +
mov ebx [esp+18h+arg_0] +
add eax 20h +
mov [esp+18h+var_18] eax +
call fflush  +
mov eax ds:dword_49F988 +
mov [esp+18h+var_14] offset aSMatchingForma +
mov [esp+18h+var_10] eax +
jmp loc_404D3F  +
add ebx 4 +
mov [esp+18h+var_10] eax +
mov [esp+18h+var_14] offset aS_2 +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
mov eax [ebx] +
test eax eax +
jnz loc_404D30  +
mov eax ds:_iob +
mov [esp+18h+var_18] 0Ah +
add eax 40h +
mov [esp+18h+var_14] eax +
call fputc  +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
test eax eax +
jz loc_404DF3  +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] offset aSSupportedTarg +
mov [esp+10h+var_10] esi +
call fprintf  +
call sub_40E500  +
mov edx [eax] +
mov edi eax +
lea ebx [eax+4] +
test edx edx +
jz loc_404DD4  +
mov [esp+10h+var_8] edx +
add ebx 4 +
mov [esp+10h+var_C] offset aS_2 +
mov [esp+10h+var_10] esi +
call fprintf  +
mov edx [ebx-4] +
test edx edx +
jnz loc_404DB6  +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] 0Ah +
call fputc  +
mov [esp+10h+arg_0] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp free  +
mov [esp+10h+var_4] esi +
mov [esp+10h+var_8] 12h +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] offset aSupportedTarge +
call fwrite  +
jmp loc_404DA6  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov esi [esp+24h] +
test eax eax +
jz loc_404E91  +
mov [esp+8] eax +
mov dword ptr [esp+4] offset aSSupportedArch +
mov [esp] esi +
call fprintf  +
call sub_40EBB0  +
mov edx [eax] +
mov edi eax +
mov ebx eax +
test edx edx +
jz loc_404E72  +
mov [esp+8] edx +
add ebx 4 +
mov dword ptr [esp+4] offset aS_2 +
mov [esp] esi +
call fprintf  +
mov edx [ebx] +
test edx edx +
jnz loc_404E55  +
mov [esp+4] esi +
mov dword ptr [esp] 0Ah +
call fputc  +
mov [esp+20h] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp free  +
***
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 18h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aSupportedArchi +
call fwrite  +
jmp loc_404E46  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov dword ptr [esp+4] offset aGnuBinutils2_1 +
mov dword ptr [esp] offset aBfdHeaderFileV +
call printf  +
mov dword ptr [esp] 0 +
call sub_45C350  +
mov edi eax +
mov eax off_4760A8 +
mov esi [eax] +
test esi esi +
jz loc_405054  +
mov dword ptr [esp+20h] 4 +
mov dword ptr [esp+1Ch] 1 +
mov eax [esi] +
mov [esp] edi +
mov [esp+4] eax +
call sub_407720  +
mov edx offset aBigEndian +
mov ebx eax +
mov eax [esi+8] +
test eax eax +
jz loc_404F34  +
cmp eax 1 +
mov edx offset aEndiannessUnkn +
mov eax offset aLittleEndian +
cmovz edx eax +
mov ecx [esi+0Ch] +
mov eax offset aBigEndian +
test ecx ecx +
jz loc_404F50  +
cmp ecx 1 +
mov eax offset aEndiannessUnkn +
mov ecx offset aLittleEndian +
cmovz eax ecx +
mov ecx [esi] +
mov [esp+0Ch] edx +
mov [esp+8] eax +
mov dword ptr [esp] offset aSHeaderSDataS +
mov [esp+4] ecx +
call printf  +
test ebx ebx +
jz loc_405042  +
mov dword ptr [esp+4] 1 +
mov ebp 2 +
mov [esp] ebx +
call sub_4089D0  +
test eax eax +
jnz loc_404F98  +
jmp loc_405024  +
add ebp 1 +
cmp ebp 5Ch +
jz loc_404FDE  +
mov eax [ebx+4] +
mov eax [eax+150h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_404F90  +
mov [esp] ebp +
add ebp 1 +
mov dword ptr [esp+4] 0 +
call sub_40EDA0  +
mov dword ptr [esp] offset aS_7 +
mov [esp+4] eax +
call printf  +
cmp ebp 5Ch +
jnz loc_404F98  +
mov [esp] ebx +
call sub_407880  +
mov ecx [esp+20h] +
mov eax off_4760A8 +
add dword ptr [esp+20h] 4 +
mov esi [eax+ecx] +
test esi esi +
jnz loc_404F08  +
mov [esp] edi +
call _unlink  +
mov [esp] edi +
call free  +
mov ebx [esp+1Ch] +
mov eax 1 +
test ebx ebx +
jnz loc_405064  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
call sub_40C520  +
cmp eax 5 +
jz loc_404FDE  +
mov eax [esi] +
mov [esp] eax +
call sub_404B40  +
mov dword ptr [esp+1Ch] 0 +
jmp loc_404FDE  +
***
mov [esp] edi +
call sub_404B40  +
mov dword ptr [esp+1Ch] 0 +
jmp loc_404FE6  +
***
mov [esp] edi +
call _unlink  +
mov [esp] edi +
call free  +
mov dword ptr [esp] offset aColumns +
call getenv  +
test eax eax +
jz loc_4053B8  +
mov [esp] eax +
call atoi  +
test eax eax +
mov [esp+3Ch] eax +
jz loc_4053B8  +
mov dword ptr [esp+38h] 1 +
mov dword ptr [esp+28h] 0 +
mov eax [esp+28h] +
mov esi off_4760A8 +
lea ecx ds:0[eax*4] +
mov eax [esi+eax*4] +
mov [esp+2Ch] ecx +
test eax eax +
jz loc_4053A5  +
mov eax [eax] +
mov [esp] eax +
call strlen  +
mov ebp [esp+3Ch] +
lea ebx [eax+10h] +
mov eax [esp+28h] +
add eax 1 +
cmp ebx ebp +
mov edi eax +
mov [esp+20h] eax +
jge loc_405110  +
mov eax [esp+2Ch] +
mov eax [esi+eax+4] +
test eax eax +
jnz loc_4050FA  +
jmp loc_405110  +
add edi 1 +
mov eax [esi+edi*4] +
test eax eax +
jz loc_40510C  +
mov eax [eax] +
mov [esp] eax +
call strlen  +
lea ebx [ebx+eax+1] +
cmp ebx ebp +
jl loc_4050F0  +
mov [esp+20h] edi +
mov dword ptr [esp+8] offset asc_479630 +
mov dword ptr [esp+4] 0Fh +
mov dword ptr [esp] offset aS_8 +
call printf  +
mov eax [esp+28h] +
cmp [esp+20h] eax +
jle loc_405395  +
mov eax off_4760A8 +
mov ecx [esp+2Ch] +
mov eax [eax+ecx] +
test eax eax +
jz loc_405387  +
mov ecx [esp+2Ch] +
mov ebx [esp+28h] +
mov edi [esp+20h] +
add ecx 4 +
mov [esp+34h] ecx +
mov esi ecx +
jmp loc_405174  +
mov eax off_4760A8 +
mov eax [eax+esi] +
add esi 4 +
test eax eax +
jz loc_40518D  +
mov eax [eax] +
add ebx 1 +
mov dword ptr [esp] offset aS_9 +
mov [esp+4] eax +
call printf  +
cmp ebx edi +
jnz loc_405165  +
mov dword ptr [esp] 0Ah +
call putchar  +
mov dword ptr [esp] 0 +
call sub_45C350  +
mov dword ptr [esp+30h] 1 +
mov dword ptr [esp+1Ch] 2 +
mov [esp+24h] eax +
jmp loc_4051D0  +
add dword ptr [esp+1Ch] 1 +
cmp dword ptr [esp+1Ch] 5Ch +
jz loc_405352  +
mov eax [esp+1Ch] +
mov edi offset aUnknown_0 +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_40EDA0  +
mov ecx 9 +
mov esi eax +
cmps   +
jz loc_4051C0  +
mov eax [esp+1Ch] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_40EDA0  +
mov dword ptr [esp+4] 0Eh +
mov dword ptr [esp] offset aS_10 +
mov [esp+8] eax +
call printf  +
mov edi [esp+28h] +
cmp [esp+20h] edi +
jle loc_405336  +
mov eax off_4760A8 +
mov ecx [esp+2Ch] +
mov ebx [eax+ecx] +
test ebx ebx +
jz loc_405336  +
mov ebp [esp+34h] +
jmp loc_4052A8  +
mov eax [esi+4] +
mov edx [esp+1Ch] +
mov eax [eax+150h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] edx +
mov [esp] esi +
call eax  +
test eax eax +
jz loc_4052F4  +
mov eax [ebx] +
mov dword ptr [esp] offset aS_9 +
mov [esp+4] eax +
call printf  +
mov [esp] esi +
add edi 1 +
call sub_407880  +
cmp edi [esp+20h] +
jz loc_405336  +
mov eax off_4760A8 +
mov ebx [eax+ebp] +
add ebp 4 +
test ebx ebx +
jz loc_405336  +
mov eax [ebx] +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_407720  +
test eax eax +
mov esi eax +
jz loc_4052E2  +
mov dword ptr [esp+4] 1 +
mov [esp] eax +
call sub_4089D0  +
test eax eax +
jnz loc_405248  +
call sub_40C520  +
cmp eax 5 +
jz loc_4052F4  +
mov eax [ebx] +
mov [esp] eax +
call sub_404B40  +
mov dword ptr [esp+30h] 0 +
mov eax [ebx] +
mov [esp] eax +
call strlen  +
test eax eax +
jz loc_405315  +
mov ebx eax +
mov dword ptr [esp] 2Dh +
call putchar  +
sub ebx 1 +
jnz loc_405304  +
mov dword ptr [esp] 20h +
call putchar  +
test esi esi +
jnz loc_405280  +
add edi 1 +
cmp edi [esp+20h] +
jnz loc_405295  +
mov dword ptr [esp] 0Ah +
call putchar  +
add dword ptr [esp+1Ch] 1 +
cmp dword ptr [esp+1Ch] 5Ch +
jnz loc_4051D0  +
mov edi [esp+24h] +
mov [esp] edi +
call _unlink  +
mov [esp] edi +
call free  +
mov ecx [esp+30h] +
mov eax 0 +
test ecx ecx +
cmovnz eax [esp+38h] +
mov [esp+38h] eax +
mov eax [esp+20h] +
mov [esp+28h] eax +
jmp loc_40509C  +
***
mov eax ecx +
add eax 4 +
mov [esp+34h] eax +
jmp loc_40518D  +
***
mov eax [esp+2Ch] +
add eax 4 +
mov [esp+34h] eax +
jmp loc_40518D  +
***
mov edx [esp+38h] +
xor eax eax +
test edx edx +
setz al  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+3Ch] 50h +
jmp loc_40508C  +
***
push ebx  +
sub esp 90h +
mov eax [esp+90h+arg_8] +
mov esi [esp+90h+arg_0] +
mov ebx [esp+90h+arg_4] +
test eax eax +
jnz loc_405412  +
mov eax [ebx] +
mov [esp+90h+var_90] esi +
mov [esp+90h+var_8C] offset aS_5 +
mov [esp+90h+var_88] eax +
call fprintf  +
add esp 90h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+4] +
lea edx [esp+90h+var_30] +
mov eax [eax+0FCh] +
mov [esp+90h+var_8C] edx +
mov [esp+90h+var_90] ebx +
call eax  +
test eax eax +
jnz loc_4053F2  +
mov eax [esp+90h+var_C] +
mov [esp+90h+var_68] eax +
lea eax [esp+90h+var_68] +
mov [esp+90h+var_90] eax +
call ctime  +
test eax eax +
jz loc_4054C0  +
lea edx [eax+14h] +
add eax 4 +
lea edi [esp+90h+var_58] +
mov [esp+90h+var_84] edx +
mov [esp+90h+var_88] eax +
mov [esp+90h+var_8C] offset a_12s_4s +
mov [esp+90h+var_90] edi +
call sprintf  +
lea eax [esp+90h+var_63] +
mov [esp+90h+var_8C] eax +
movzx eax [esp+90h+var_2A] +
mov [esp+90h+var_90] eax +
call sub_405A10  +
mov eax [esp+90h+var_18] +
mov [esp+90h+var_78] edi +
mov [esp+90h+var_8C] offset aSLdLd6luS +
mov [esp+90h+var_90] esi +
mov [esp+90h+var_7C] eax +
movsx eax [esp+90h+var_24] +
mov [esp+90h+var_59] 0 +
mov [esp+90h+var_80] eax +
movsx eax [esp+90h+var_26] +
mov [esp+90h+var_84] eax +
lea eax [esp+90h+var_63+1] +
mov [esp+90h+var_88] eax +
call fprintf  +
jmp loc_4053F2  +
mov [esp+90h+var_58] 6D69743Ch +
lea edi [esp+90h+var_58] +
mov [esp+90h+var_54] 61642065h +
mov [esp+90h+var_50] 63206174h +
mov [esp+90h+var_4C] 7572726Fh +
mov [esp+90h+var_48] 3E7470h +
jmp loc_405469  +
***
jmp sub_405500  +
***
mov eax [esp+18h+arg_0] +
call sub_404A70  +
mov [esp+18h+var_18] eax +
call _mktemp  +
test eax eax +
mov ebx eax +
jz loc_405547  +
mov [esp+18h+var_10] 180h +
mov [esp+18h+var_14] 502h +
mov [esp+18h+var_18] eax +
call _open  +
cmp eax 0FFFFFFFFh +
jz loc_405550  +
mov [esp+18h+var_18] eax +
call _close  +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
xor eax eax +
jmp loc_405542  +
mov [esp+18h+var_18] ebx +
call free  +
xor eax eax +
jmp loc_405542  +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
call sub_404A70  +
mov [esp] eax +
call _mktemp  +
test eax eax +
mov ebx eax +
jz loc_405590  +
mov [esp] eax +
call _mkdir  +
test eax eax +
jnz loc_405590  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
add esp 28h +
pop ebx  +
retn   +
***
sub esp 44h +
mov ebx [esp+44h+arg_0] +
lea eax [esp+44h+var_34] +
mov [esp+44h+var_40] eax +
mov [esp+44h+var_44] ebx +
call ds:_stati64  +
test eax eax +
js loc_405633  +
movzx eax [esp+44h+var_2E] +
and ax 0F000h +
cmp ax 8000h +
jnz loc_405690  +
mov edx [esp+44h+var_18] +
mov eax [esp+44h+var_1C] +
test edx edx +
js loc_4056AF  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
mov esi ds:__imp__errno +
call esi  +
cmp dword ptr [eax] 2 +
jz loc_405670  +
call esi  +
mov eax [eax] +
mov [esp+44h+var_44] eax +
call strerror  +
mov [esp+44h+var_40] ebx +
mov [esp+44h+var_44] offset aWarningCouldNo +
mov [esp+44h+var_3C] eax +
call sub_404CA0  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_40562D  +
mov [esp+44h+var_40] ebx +
mov [esp+44h+var_44] offset aSNoSuchFile +
call sub_404CA0  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_40562D  +
mov [esp+44h+var_40] ebx +
mov [esp+44h+var_44] offset aWarningSIsNotA +
call sub_404CA0  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_40562D  +
mov [esp+44h+var_40] ebx +
mov [esp+44h+var_44] offset aWarningSHasNeg +
call sub_404CA0  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_40562D  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
test ebx ebx +
jz loc_405794  +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_40578A  +
mov esi [eax] +
mov [esp+1Ch+var_1C] esi +
call strlen  +
mov ebp [ebx] +
mov [esp+1Ch+var_1C] ebp +
mov edi eax +
call strlen  +
lea edi [edi+eax+3] +
mov eax ds:dword_49B0C4 +
cmp edi eax +
jbe loc_405764  +
test eax eax +
jnz loc_405770  +
mov eax edi +
shr eax 1 +
add edi eax +
mov [esp+1Ch+var_1C] edi +
mov ds:dword_49B0C4 edi +
call sub_40EFC0  +
test eax eax +
mov ds:dword_49B0C0 eax +
jz loc_405780  +
mov edx [ebx+8Ch] +
mov ebp [ebx] +
mov esi [edx] +
mov [esp+1Ch+var_10] ebp +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] offset aSS_3 +
mov [esp+1Ch+var_1C] eax +
call sprintf  +
mov eax ds:dword_49B0C0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ds:dword_49B0C0 +
jmp loc_40573F  +
mov eax ds:dword_49B0C0 +
mov [esp+1Ch+var_1C] eax +
call free  +
jmp loc_405718  +
mov ds:dword_49B0C4 0 +
mov eax [ebx] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_14] 25Eh +
mov [esp+1Ch+var_18] offset a____BinutilsBi +
mov [esp+1Ch+var_1C] offset aAbfdNull +
call loc_4736A0  +
jmp loc_4056E3  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov edi [esp+38h] +
mov esi [esp+3Ch] +
call sub_40C520  +
mov [esp] eax +
call sub_40C530  +
mov ebp eax +
mov eax ds:_iob +
add eax 20h +
mov [esp] eax +
call fflush  +
mov eax ds:_iob +
add eax 40h +
mov [esp+4] eax +
mov eax ds:dword_49F988 +
mov [esp] eax +
call fputs  +
mov eax [esp+34h] +
test eax eax +
jz loc_4058C0  +
test ebx ebx +
jz loc_4058E1  +
test edi edi +
jz loc_4058C0  +
mov eax [edi] +
test eax eax +
jz loc_4058C0  +
mov [esp+0Ch] eax +
mov eax ds:_iob +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aSS_4 +
add eax 40h +
mov [esp] eax +
call fprintf  +
test esi esi +
jz loc_405899  +
mov eax ds:_iob +
mov dword ptr [esp+8] 2 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset asc_479765 +
add eax 40h +
mov [esp+0Ch] eax +
call fwrite  +
lea eax [esp+40h] +
mov [esp+8] eax +
mov eax ds:_iob +
mov [esp+4] esi +
add eax 40h +
mov [esp] eax +
call vfprintf  +
mov eax ds:_iob +
mov [esp+8] ebp +
mov dword ptr [esp+4] offset aS_11 +
add eax 40h +
mov [esp] eax +
call fprintf  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax ds:_iob +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset aS_12 +
add eax 40h +
mov [esp] eax +
call fprintf  +
jmp loc_405851  +
***
mov eax [esp+34h] +
mov [esp] eax +
call sub_4056D0  +
mov ebx eax +
jmp loc_40581F  +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax] +
cmp dl 5Ch +
jz loc_405956  +
cmp dl 2Fh +
jz loc_405956  +
test dl dl +
jnz loc_405950  +
test dl dl +
jz loc_405946  +
cmp dl 2Eh +
lea esi [esi+0] +
jz loc_405977  +
cmp dl 2Fh +
jz loc_405959  +
cmp dl 5Ch +
jnz loc_40593C  +
lea esi [esi+0] +
jmp loc_405959  +
cmp dl 5Ch +
jz loc_405960  +
cmp dl 2Fh +
jz loc_405960  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_405932  +
mov eax 1 +
retn   +
cmp byte ptr [eax+1] 3Ah +
jnz loc_405915  +
xor eax eax +
retn   +
movzx edx byte ptr [eax] +
lea esi [esi+0] +
cmp dl 2Fh +
jnz loc_4059A9  +
add eax 1 +
movzx edx byte ptr [eax] +
cmp dl 5Ch +
jz loc_405965  +
cmp dl 2Fh +
jz loc_405965  +
jmp loc_405915  +
movzx edx byte ptr [eax+1] +
cmp dl 2Eh +
jz loc_40598D  +
add eax 1 +
test dl dl +
jnz loc_405922  +
mov eax 1 +
retn   +
movzx edx byte ptr [eax+2] +
lea ecx [eax+2] +
test dl dl +
jz loc_405956  +
cmp dl 2Fh +
jz loc_405956  +
cmp dl 5Ch +
jz loc_405956  +
mov eax ecx +
jmp loc_405922  +
cmp dl 5Ch +
jz loc_405965  +
nop   +
jmp loc_405915  +
***
sub esp 1Ch +
mov ecx 64h +
mov eax [esp+arg_4] +
mov ebx edx +
and ebx 0F000h +
cmp ebx 4000h +
jz loc_405A5B  +
cmp ebx 3000h +
mov ecx 62h +
jz loc_405A5B  +
cmp ebx 2000h +
mov ecx 63h +
jz loc_405A5B  +
cmp ebx 1000h +
mov ecx 70h +
mov ebx 2Dh +
cmovnz ecx ebx +
mov [eax] cl +
mov ecx edx +
and ecx 100h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFBBh +
add ecx 72h +
mov [eax+1] cl +
mov ecx edx +
and ecx 80h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFB6h +
add ecx 77h +
mov [eax+2] cl +
mov ecx edx +
and ecx 40h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFB5h +
add ecx 78h +
mov [eax+3] cl +
mov ecx edx +
and ecx 20h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFBBh +
add ecx 72h +
mov [eax+4] cl +
mov ecx edx +
and ecx 10h +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFB6h +
add ecx 77h +
mov [eax+5] cl +
mov ecx edx +
and ecx 8 +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFB5h +
add ecx 78h +
mov [eax+6] cl +
mov ecx edx +
and ecx 4 +
cmp ecx 1 +
sbb ecx ecx +
and ecx 0FFFFFFBBh +
add ecx 72h +
mov [eax+7] cl +
mov ecx edx +
and ecx 2 +
cmp ecx 1 +
sbb ecx ecx +
and edx 1 +
and ecx 0FFFFFFB6h +
add ecx 77h +
cmp edx 1 +
sbb edx edx +
and edx 0FFFFFFB5h +
add edx 78h +
mov [eax+8] cl +
mov [eax+9] dl +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov edx [eax+1Ch] +
mov eax [eax+18h] +
retn   +
***
retn   +
***
retn   +
***
push esi  +
push ebx  +
mov esi [esp+8+arg_4] +
mov eax [esp+8+arg_0] +
test esi 1 +
mov edi esi +
mov ebx [eax+8] +
jnz loc_405B96  +
test edi 2 +
jnz loc_405BA6  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_405B7C  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_405B84  +
mov byte ptr [edi] 0 +
mov eax [ebx] +
mov dword ptr [esi+1Ch] 0 +
mov [esi+18h] eax +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea edi [esi+1] +
mov dl 2Fh +
test edi 2 +
mov byte ptr [esi] 0 +
jz loc_405B65  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_405B65  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [ebx+8] +
mov eax [esi+4] +
test eax eax +
jz loc_405BDB  +
mov [esp+14h+var_14] eax +
call free  +
mov [esp+14h+var_14] esi +
call free  +
xor eax eax +
mov dword ptr [ebx+8] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_C] +
mov ecx [esp+10h+arg_0] +
mov eax [esp+10h+arg_4] +
mov edx [esp+10h+arg_8] +
test esi esi +
mov ebx [ecx+8] +
jz loc_405C23  +
add eax [ecx+18h] +
adc edx [ecx+1Ch] +
test edx edx +
js loc_405CAD  +
mov edi [ebx] +
mov esi eax +
cmp eax edi +
jbe loc_405C4B  +
test byte ptr [ecx+28h] 10h +
jz loc_405C84  +
add edi 7Fh +
add esi 7Fh +
and edi 0FFFFFF80h +
and esi 0FFFFFF80h +
cmp edi esi +
mov [ebx] eax +
jb loc_405C54  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+4] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] eax +
call sub_40F110  +
test eax eax +
mov [ebx+4] eax +
jz loc_405CD1  +
sub esi edi +
add edi eax +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] edi +
call memset  +
jmp loc_405C4B  +
mov [ecx+18h] edi +
mov dword ptr [ecx+1Ch] 0 +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
mov [esp+10h+var_10] 12h +
call sub_40C770  +
mov eax 0FFFFFFFFh +
jmp loc_405C4D  +
mov dword ptr [ecx+18h] 0 +
mov dword ptr [ecx+1Ch] 0 +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_405C4D  +
call ds:__imp__errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
mov dword ptr [ebx] 0 +
jmp loc_405C4D  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov ecx [esp+38h+arg_8] +
mov edi [eax+18h] +
mov ebp [eax+1Ch] +
mov ebx [eax+8] +
mov eax ecx +
add eax edi +
adc edx ebp +
cmp edx 0 +
mov esi [ebx] +
ja loc_405DFB  +
cmp eax esi +
jbe loc_405E60  +
cmp esi edi +
jb loc_405E47  +
sub esi edi +
mov [esp+38h+var_20] esi +
mov [esp+38h+var_1C] 0 +
mov [esp+38h+var_38] 12h +
call sub_40C770  +
mov eax [esp+38h+arg_0] +
mov eax [eax+18h] +
add eax [ebx+4] +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] eax +
mov eax [esp+38h+arg_4] +
mov [esp+38h+var_38] eax +
call memcpy  +
mov eax [esp+38h+var_20] +
mov edx [esp+38h+var_1C] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_20] 0 +
xor esi esi +
mov [esp+38h+var_1C] 0 +
jmp loc_405E0D  +
mov esi ecx +
mov eax edi +
mov [esp+38h+var_20] ecx +
mov [esp+38h+var_1C] 0 +
jmp loc_405E20  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_4] +
mov eax [esi+88h] +
test eax eax +
jz loc_405EF8  +
mov ecx [esi+18h] +
xor edx edx +
mov ebx [esi+1Ch] +
mov ebp [eax+4] +
mov eax edi +
add eax ecx +
adc edx ebx +
cmp edx 0 +
jbe loc_405F40  +
cmp ebx 0 +
jbe loc_405EF0  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx ebp +
jnb loc_405EE4  +
mov edi ebp +
sub edi ecx +
mov eax [esi+0Ch] +
test eax eax +
jz loc_405F50  +
mov edx [esp+1Ch+arg_0] +
mov eax [eax] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] esi +
call eax  +
mov edx eax +
mov eax 0FFFFFFFFh +
cmp edx 0FFFFFFFFh +
jz loc_405EE6  +
mov ecx edx +
xor ebx ebx +
add [esi+18h] ecx +
mov eax edx +
adc [esi+1Ch] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax ebp +
ja loc_405EDF  +
mov eax [esi+0Ch] +
test eax eax +
jnz loc_405EFF  +
nop   +
lea esi [esi+0] +
xor ecx ecx +
xor ebx ebx +
xor edx edx +
jmp loc_405F2A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_4] +
mov eax [esi+0Ch] +
test eax eax +
jz loc_405FD0  +
mov edx [esp+1Ch+arg_0] +
mov eax [eax+4] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] esi +
call eax  +
cmp eax 0FFFFFFFFh +
mov ebp eax +
jz loc_405FA3  +
mov ecx eax +
xor ebx ebx +
add [esi+18h] ecx +
adc [esi+1Ch] ebx +
cmp ebp edi +
jz loc_405FBF  +
call ds:__imp__errno  +
mov dword ptr [eax] 1Ch +
mov [esp+1Ch+var_1C] 1 +
call sub_40C770  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
xor ebx ebx +
xor ebp ebp +
jmp loc_405F9D  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov eax [esi+0Ch] +
test eax eax +
jz loc_406030  +
mov eax [eax+8] +
mov edi esi +
mov [esp+10h+var_10] esi +
call eax  +
mov ecx [esi+8Ch] +
test ecx ecx +
jnz loc_40600B  +
jmp loc_40601B  +
mov edi ecx +
mov ecx ebx +
mov ebx [ecx+8Ch] +
sub eax [edi+38h] +
sbb edx [edi+3Ch] +
test ebx ebx +
jnz loc_406007  +
mov ebx edx +
mov ecx eax +
mov [esi+18h] ecx +
mov [esi+1Ch] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor ebx ebx +
xor ecx ecx +
mov [esi+18h] ecx +
xor eax eax +
xor edx edx +
mov [esi+1Ch] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_406060  +
mov edx [edx+14h] +
jmp edx  +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_406096  +
mov ecx [esp+1Ch+arg_4] +
mov edx [edx+18h] +
mov [esp+1Ch+var_1C] eax +
mov [esp+1Ch+var_18] ecx +
call edx  +
test eax eax +
js loc_4060A0  +
add esp 1Ch +
retn   +
mov eax 0FFFFFFFFh +
nop   +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] 1 +
mov [esp+1Ch+var_10] eax +
call sub_40C770  +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
cmp [esp+1Ch+arg_C] 1 +
mov esi [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
jbe loc_4060EA  +
mov [esp+1Ch+var_18] 11Fh +
mov [esp+1Ch+var_1C] offset a____Binutils_1 +
call sub_40C6C0  +
cmp [esp+1Ch+arg_C] 1 +
jz loc_4061E0  +
mov eax [esp+1Ch+arg_0] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 2 +
jz loc_406116  +
mov eax [esp+1Ch+arg_0] +
mov ebp [eax+8Ch] +
test ebp ebp +
jz loc_406204  +
mov ecx [esp+1Ch+arg_C] +
test ecx ecx +
jnz loc_406193  +
mov eax [esp+1Ch+arg_0] +
mov ecx [eax+8Ch] +
test ecx ecx +
jz loc_406193  +
mov ebp [esp+1Ch+arg_0] +
mov eax esi +
mov edx edi +
jmp loc_40613A  +
mov ebp ecx +
mov ecx ebx +
mov ebx [ecx+8Ch] +
add eax [ebp+38h] +
adc edx [ebp+3Ch] +
test ebx ebx +
jnz loc_406136  +
mov ebx [esp+1Ch+arg_0] +
mov ecx [ebx+0Ch] +
test ecx ecx +
jz loc_4061A2  +
mov ecx [ecx+0Ch] +
mov ebx [esp+1Ch+arg_C] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_10] ebx +
mov [esp+1Ch+var_1C] eax +
call ecx  +
test eax eax +
mov ebx eax +
jnz loc_4061A7  +
mov edx [esp+1Ch+arg_C] +
mov eax [esp+1Ch+arg_0] +
test edx edx +
jnz loc_4061F4  +
mov [eax+18h] esi +
mov [eax+1Ch] edi +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+1Ch+arg_0] +
mov eax esi +
mov edx edi +
mov ecx [ebx+0Ch] +
test ecx ecx +
jnz loc_406155  +
mov ebx 0FFFFFFFFh +
mov ebp ds:__imp__errno +
call ebp  +
mov edi [eax] +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_405FE0  +
cmp edi 16h +
jz loc_406230  +
mov [esp+1Ch+var_1C] 1 +
call sub_40C770  +
call ebp  +
mov [eax] edi +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx esi +
xor eax eax +
or edx edi +
jnz loc_4060F5  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add [eax+18h] esi +
adc [eax+1Ch] edi +
add esp 1Ch +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+1Ch+arg_C] +
mov eax esi +
test ebx ebx +
jnz loc_406225  +
mov edx [esp+1Ch+arg_0] +
xor eax [edx+18h] +
or eax [edx+1Ch] +
jnz loc_406193  +
xor eax eax +
jmp loc_40618B  +
mov edx edi +
jmp loc_40614A  +
mov [esp+1Ch+var_1C] 12h +
call sub_40C770  +
mov eax ebx +
jmp loc_40618B  +
***
push ebx  +
sub esp 48h +
mov ebx [esp+50h] +
test byte ptr [ebx+2Bh] 4 +
jnz loc_406290  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_406285  +
mov eax [eax+18h] +
lea edx [esp+10h] +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_406285  +
mov eax [esp+34h] +
mov [ebx+20h] eax +
add esp 48h +
pop ebx  +
retn   +
***
add esp 48h +
xor eax eax +
pop ebx  +
retn   +
***
mov eax [ebx+20h] +
add esp 48h +
pop ebx  +
retn   +
***
sub esp 4Ch +
mov eax [esp+50h] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_4062D0  +
mov edx [edx+18h] +
lea ecx [esp+10h] +
mov [esp+4] ecx +
mov [esp] eax +
call edx  +
test eax eax +
jnz loc_4062D0  +
mov eax [esp+28h] +
mov edx [esp+2Ch] +
add esp 4Ch +
retn   +
***
xor eax eax +
xor edx edx +
add esp 4Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 18h +
mov eax [esp+2Ch] +
mov ecx [esp+30h] +
mov edi [esp+40h] +
mov ebp [esp+44h] +
mov edx [eax+0Ch] +
mov [esp] ecx +
mov [esp+4] edi +
mov [esp+8] ebp +
test edx edx +
jz loc_406315  +
mov edx [edx+1Ch] +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp edx  +
***
add esp 18h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax [eax+8] +
mov [esp+18h+var_18] eax +
call fclose  +
test eax eax +
jnz loc_406378  +
mov edx [ebx+10h] +
mov eax [ebx+14h] +
cmp ebx ds:dword_49B0C8 +
mov [edx+14h] eax +
mov ecx [ebx+14h] +
mov [ecx+10h] edx +
jz loc_406390  +
mov dword ptr [ebx+8] 0 +
mov eax esi +
sub ds:dword_49B0CC 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_18] 1 +
xor si si +
call sub_40C770  +
jmp loc_40634B  +
***
xor eax eax +
cmp ebx ecx +
cmovnz eax ecx +
mov ds:dword_49B0C8 eax +
jmp loc_406362  +
***
mov eax ds:dword_49B0C8 +
test eax eax +
jz loc_4063F0  +
push ebx  +
sub esp 18h +
mov ebx [eax+10h] +
cmp byte ptr [ebx+2Ah] 0 +
jns loc_4063C1  +
jmp loc_4063D0  +
mov ebx [ebx+10h] +
cmp byte ptr [ebx+2Ah] 0 +
js loc_4063D0  +
cmp eax ebx +
jnz loc_4063B8  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov eax [ebx+8] +
mov [esp+1Ch+var_1C] eax +
call sub_405E80  +
mov [ebx+18h] eax +
mov eax ebx +
mov [ebx+1Ch] edx +
add esp 18h +
pop ebx  +
jmp sub_406330  +
mov eax 1 +
retn   +
***
sub esp 1Ch +
sub esp 0Ch +
xor eax eax +
mov edx [esp+0Ch+arg_0] +
cmp dword ptr [edx+0Ch] offset off_479940 +
jz loc_406456  +
add esp 0Ch +
retn   +
mov ecx [edx+8] +
test ecx ecx +
jz loc_406452  +
mov eax edx +
call sub_406330  +
sub eax 1 +
jmp loc_406452  +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
test eax eax +
jz loc_406508  +
mov eax ds:dword_49B0D0 +
test eax eax +
jnz loc_406498  +
mov ds:dword_49B0D0 0Ah +
mov al 0Ah +
cmp ds:dword_49B0CC eax +
jge loc_4064E0  +
mov eax ds:dword_49B0C8 +
mov dword ptr [ebx+0Ch] offset off_479940 +
test eax eax +
jz loc_406500  +
mov [ebx+14h] eax +
mov eax [eax+10h] +
mov [ebx+10h] eax +
mov [eax+14h] ebx +
mov eax [ebx+14h] +
mov [eax+10h] ebx +
add ds:dword_49B0CC 1 +
mov eax 1 +
mov ds:dword_49B0C8 ebx +
add esp 18h +
pop ebx  +
retn   +
call sub_4063A0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_4064D4  +
mov eax ds:dword_49B0C8 +
mov dword ptr [ebx+0Ch] offset off_479940 +
test eax eax +
jnz loc_4064B0  +
lea esi [esi+0] +
mov [ebx+14h] ebx +
mov [ebx+10h] ebx +
jmp loc_4064C2  +
mov [esp+18h+var_14] 1FFh +
mov [esp+18h+var_18] offset a____BinutilsBf +
call sub_40C6C0  +
jmp loc_406483  +
***
jmp sub_406530  +
***
mov eax [esp+arg_0] +
cmp dword ptr [eax+0Ch] offset off_479940 +
jz loc_406543  +
mov eax 1 +
retn   +
mov edx [eax+8] +
test edx edx +
jz loc_40653D  +
jmp sub_406330  +
***
push ebx  +
mov ebx 1 +
sub esp 8 +
mov edx ds:dword_49B0C8 +
test edx edx +
jz loc_406577  +
cmp dword ptr [edx+0Ch] offset off_479940 +
mov eax 1 +
jz loc_406580  +
and ebx eax +
test edx edx +
jnz loc_406563  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
***
mov ecx [edx+8] +
test ecx ecx +
jz loc_406571  +
mov eax edx +
call sub_406330  +
mov edx ds:dword_49B0C8 +
jmp loc_406571  +
***
mov ebx [esp+48h+arg_0] +
or byte ptr [ebx+2Ah] 80h +
mov eax ds:dword_49B0D0 +
test eax eax +
jnz loc_4065C1  +
mov ds:dword_49B0D0 0Ah +
mov al 0Ah +
cmp ds:dword_49B0CC eax +
jge loc_406680  +
movzx eax byte ptr [ebx+28h] +
shr al 3 +
and eax 3 +
sub eax 2 +
cmp eax 1 +
ja loc_406694  +
test byte ptr [ebx+2Bh] 2 +
mov eax [ebx] +
jz loc_406620  +
mov [esp+48h+var_44] offset aRB +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
test eax eax +
mov [ebx+8] eax +
jz loc_4066B0  +
mov [esp+48h+var_48] ebx +
call sub_406470  +
test eax eax +
jz loc_40668D  +
mov eax [ebx+8] +
add esp 48h +
pop ebx  +
retn   +
lea edx [esp+48h+var_38] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call ds:_stati64  +
test eax eax +
jnz loc_406650  +
mov eax [esp+48h+var_1C] +
or eax [esp+48h+var_20] +
jz loc_406650  +
mov eax [ebx] +
mov [esp+48h+var_48] eax +
call sub_45B9A0  +
lea esi [esi+0] +
mov eax [ebx] +
mov [esp+48h+var_44] offset aWB +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
or byte ptr [ebx+2Bh] 2 +
mov [ebx+8] eax +
test eax eax +
jnz loc_406606  +
mov [esp+48h+var_48] 1 +
call sub_40C770  +
jmp loc_406612  +
call sub_4063A0  +
test eax eax +
jnz loc_4065CD  +
add esp 48h +
xor eax eax +
pop ebx  +
retn   +
mov eax [ebx] +
mov [esp+48h+var_44] offset aRb +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
mov [ebx+8] eax +
jmp loc_406669  +
mov eax [ebx] +
mov [esp+48h+var_44] offset aWB +
mov [esp+48h+var_48] eax +
call j_j_fopen  +
mov [ebx+8] eax +
jmp loc_406669  +
***
push ebx  +
sub esp 24h +
test byte ptr [eax+2Ah] 1 +
jnz loc_4067C9  +
mov ebx eax +
jmp loc_4066E7  +
mov ebx ecx +
mov ecx [ebx+8Ch] +
test ecx ecx +
jnz loc_4066E5  +
mov eax [ebx+8] +
test eax eax +
jz loc_406733  +
mov edx ds:dword_49B0C8 +
cmp ebx edx +
jz loc_40672D  +
mov esi [ebx+14h] +
test edx edx +
mov ecx [ebx+10h] +
mov [ecx+14h] esi +
mov esi [ebx+14h] +
mov [esi+10h] ecx +
jz loc_40675C  +
mov [ebx+14h] edx +
mov edx [edx+10h] +
mov [ebx+10h] edx +
mov [edx+14h] ebx +
mov edx [ebx+14h] +
mov [edx+10h] ebx +
mov ds:dword_49B0C8 ebx +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
test dl 1 +
mov [esp+28h+var_C] edx +
jnz loc_40672D  +
mov [esp+28h+var_28] ebx +
call sub_4065A0  +
test eax eax +
jz loc_40679E  +
mov edx [esp+28h+var_C] +
and edx 2 +
jz loc_406764  +
mov eax [ebx+8] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov [ebx+14h] ebx +
mov [ebx+10h] ebx +
jmp loc_406727  +
mov eax [ebx+8] +
mov [esp+28h+var_1C] 0 +
mov edx [ebx+18h] +
mov ecx [ebx+1Ch] +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_20] ecx +
call sub_405E90  +
test eax eax +
jz loc_406753  +
mov edx [esp+28h+var_C] +
and edx 4 +
jnz loc_406753  +
mov [esp+28h+var_28] 1 +
call sub_40C770  +
mov ebx off_476094 +
call sub_40C520  +
mov [esp+28h+var_28] eax +
call sub_40C530  +
mov [esp+28h+var_24] esi +
mov [esp+28h+var_28] offset aReopeningBS +
mov [esp+28h+var_20] eax +
call ebx  +
xor eax eax +
jmp loc_40672D  +
mov [esp+28h+var_20] offset aBfd_cache_look +
mov [esp+28h+var_24] 0F2h +
mov [esp+28h+var_28] offset a____BinutilsBf +
call sub_40C6F0  +
lea esi [esi+0] +
lea edi [edi+0] +
sub esp 1Ch +
mov eax [esp+44h+var_24] +
cmp eax ds:dword_49B0C8 +
jz loc_406830  +
mov edx 4 +
call sub_4066D0  +
test eax eax +
jz loc_406850  +
mov [esp+44h+var_44] eax +
call _fileno_0  +
mov edx [esp+44h+var_20] +
mov [esp+44h+var_40] edx +
mov [esp+44h+var_44] eax +
call ds:_fstati64  +
test eax eax +
js loc_406835  +
add esp 1Ch +
retn   +
mov eax [eax+8] +
jmp loc_406809  +
mov [esp+44h+var_44] 1 +
mov [esp+44h+var_38] eax +
call sub_40C770  +
mov eax [esp+44h+var_38] +
add esp 1Ch +
retn   +
mov eax 0FFFFFFFFh +
jmp loc_40682A  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
cmp eax ds:dword_49B0C8 +
jz loc_406891  +
mov edx 1 +
call sub_4066D0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_40688D  +
mov [esp+1Ch+var_1C] edx +
call fflush  +
test eax eax +
js loc_406896  +
add esp 1Ch +
retn   +
mov edx [eax+8] +
jmp loc_40687B  +
mov [esp+1Ch+var_1C] 1 +
mov [esp+1Ch+var_10] eax +
call sub_40C770  +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
retn   +
***
push ebx  +
mov eax [esp+arg_0] +
cmp eax ds:dword_49B0C8 +
mov esi [esp+arg_4] +
mov edi [esp+arg_8] +
mov ebx [esp+arg_C] +
jz loc_4068F6  +
xor edx edx +
cmp ebx 1 +
setnz dl  +
add edx edx +
call sub_4066D0  +
test eax eax +
jz loc_406900  +
mov [esp+arg_C] ebx +
mov [esp+arg_4] esi +
mov [esp+arg_8] edi +
mov [esp+arg_0] eax +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_405E90  +
mov eax [eax+8] +
jmp loc_4068DA  +
pop ebx  +
mov eax 0FFFFFFFFh +
pop esi  +
pop edi  +
retn   +
***
mov ebx [esp+8+arg_0] +
cmp ebx ds:dword_49B0C8 +
jz loc_406940  +
mov edx 1 +
mov eax ebx +
call sub_4066D0  +
test eax eax +
jz loc_406947  +
mov [esp+8+arg_0] eax +
add esp 8 +
pop ebx  +
jmp sub_405E80  +
mov eax [ebx+8] +
test eax eax +
jnz loc_406930  +
mov eax [ebx+18h] +
mov edx [ebx+1Ch] +
add esp 8 +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov ecx [esp+2Ch+arg_C] +
cmp eax ds:dword_49B0C8 +
mov ebx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_10] ecx +
jz loc_4069F0  +
xor edx edx +
call sub_4066D0  +
mov ebp eax +
xor eax eax +
xor edx edx +
test ebp ebp +
jz loc_4069BB  +
mov eax [esp+2Ch+arg_4] +
xor edi edi +
mov [esp+2Ch+var_20] ebp +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] eax +
call fwrite  +
cmp [esp+2Ch+var_10] 0 +
mov esi eax +
jge loc_4069C3  +
mov eax esi +
mov edx edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
jle loc_4069F5  +
mov [esp+2Ch+var_2C] ebp +
call ferror  +
test eax eax +
nop   +
jz loc_4069B7  +
mov [esp+2Ch+var_2C] 1 +
call sub_40C770  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_4069BB  +
mov ebp [eax+8] +
jmp loc_406988  +
cmp ebx eax +
jbe loc_4069B7  +
jmp loc_4069C5  +
***
push esi  +
mov eax [esp+arg_0] +
mov eax [eax+8] +
mov edx [eax+14h] +
mov eax [eax+10h] +
retn   +
***
mov edx [esp+arg_C] +
mov eax [esp+arg_0] +
mov ecx [esp+arg_4] +
mov ebx [esp+arg_8] +
cmp edx 1 +
mov esi [eax+8] +
jz loc_406C60  +
cmp edx 2 +
mov eax 0FFFFFFFFh +
jz loc_406C4A  +
xor eax eax +
test edx edx +
jz loc_406C50  +
pop ebx  +
pop esi  +
retn   +
mov [esi+10h] ecx +
xor eax eax +
mov [esi+14h] ebx +
pop ebx  +
pop esi  +
retn   +
add [esi+10h] ecx +
adc [esi+14h] ebx +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 20h +
mov ecx [esp+20h+arg_0] +
mov ebx [ecx+8] +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov esi [ebx+4] +
mov edi [ebx] +
mov [esp+20h+var_C] eax +
mov eax [esp+20h+arg_8] +
mov [esp+20h+var_8] edx +
mov edx [esp+20h+arg_C] +
mov [esp+20h+var_20] ecx +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_14] eax +
mov eax [esp+20h+arg_4] +
mov [esp+20h+var_10] edx +
mov [esp+20h+var_18] eax +
call esi  +
test edx edx +
js loc_406CBB  +
add [ebx+10h] eax +
adc [ebx+14h] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
retn   +
***
sub esp 18h +
mov ebx [esp+18h+arg_0] +
mov ecx [ebx+8] +
mov edx [ecx+8] +
test edx edx +
jz loc_406CFF  +
mov eax [ecx] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call edx  +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
***
retn   +
***
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_4] +
mov ebp [esp+28h+arg_0] +
test esi 1 +
mov edi esi +
mov ebx [ebp+8] +
jnz loc_406D98  +
test edi 2 +
jnz loc_406DA8  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_406D70  +
xor eax eax +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_406D78  +
mov byte ptr [edi] 0 +
mov edx [ebx+0Ch] +
xor eax eax +
test edx edx +
jz loc_406D90  +
mov eax [ebx] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] ebp +
mov [esp+28h+var_24] eax +
call edx  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edi [esi+1] +
mov dl 2Fh +
test edi 2 +
mov byte ptr [esi] 0 +
jz loc_406D59  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_406D59  +
***
sub esp 18h +
mov eax [eax+0A8h] +
test eax eax +
jz loc_406DE9  +
lea eax [ebx+48h] +
mov [esp+18h+var_18] eax +
call sub_40FD90  +
mov eax [ebx+0A8h] +
mov [esp+18h+var_18] eax +
call sub_45C5B0  +
mov eax [ebx] +
test eax eax +
jz loc_406DF7  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+88h] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+var_18] ebx +
call free  +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
test ebx ebx +
jz loc_406EE0  +
test edi edi +
jz loc_406EC0  +
mov [esp+2Ch+var_28] offset a_gnu_debuglink +
mov [esp+2Ch+var_2C] ebx +
call sub_410840  +
test eax eax +
mov esi eax +
jz loc_406E7D  +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_4111A0  +
test eax eax +
jnz loc_406E87  +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_406E7D  +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+24h] +
mov ebp [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] ebp +
call sub_473D10  +
add eax 4 +
and eax 0FFFFFFFCh +
cmp eax [esi+24h] +
jnb loc_406E7D  +
mov edx [ebx+4] +
add eax [esp+2Ch+var_10] +
mov edx [edx+28h] +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov [edi] eax +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] 49Fh +
mov [esp+2Ch+var_2C] offset a____Binutils_4 +
call sub_40C6C0  +
jmp loc_406E3F  +
mov [esp+2Ch+var_28] 49Eh +
mov [esp+2Ch+var_2C] offset a____Binutils_4 +
call sub_40C6C0  +
jmp loc_406E37  +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_406F36  +
mov [esp+18h+var_14] offset aRb_0 +
mov [esp+18h+var_18] ebx +
call j_j_fopen  +
xor edx edx +
test eax eax +
jz loc_406F2F  +
mov [esp+18h+var_18] eax +
call fclose  +
mov edx 1 +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
mov [esp+18h+var_14] 529h +
mov [esp+18h+var_18] offset a____Binutils_4 +
call sub_40C6C0  +
jmp loc_406F0C  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test ebx ebx +
jz loc_406FFE  +
mov [esp+14h+var_10] offset aRb_0 +
mov [esp+14h+var_14] ebx +
call j_j_fopen  +
test eax eax +
mov esi eax +
jz loc_406FF6  +
xor ebx ebx +
lea esi [esi+0] +
mov [esp+14h+var_8] esi +
mov [esp+14h+var_C] 2000h +
mov [esp+14h+var_10] 1 +
mov [esp+14h+var_14] offset unk_49D100 +
call fread  +
test eax eax +
jz loc_406FDF  +
add eax offset unk_49D100 +
mov edx ebx +
cmp eax offset unk_49D100 +
not edx  +
jbe loc_406FD9  +
mov ecx offset unk_49D100 +
lea esi [esi+0] +
mov ebx edx +
add ecx 1 +
xor bl [ecx-1] +
shr edx 8 +
movzx ebx bl +
xor edx ds:dword_4799C0[ebx*4] +
cmp ecx eax +
jnz loc_406FC0  +
not edx  +
mov ebx edx +
jmp loc_406F80  +
mov [esp+14h+var_14] esi +
call fclose  +
xor eax eax +
cmp ebx [esp+14h+arg_4] +
setz al  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 508h +
mov [esp+14h+var_14] offset a____Binutils_4 +
call sub_40C6C0  +
jmp loc_406F61  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
test eax eax +
mov [esp+48h+var_34] edx +
jz loc_4072A3  +
mov esi [esp+48h+var_34] +
mov eax offset a__0 +
mov edx [ebp+0] +
test esi esi +
cmovnz eax esi +
test edx edx +
mov [esp+48h+var_34] eax +
jz loc_407305  +
lea eax [esp+48h+var_1C] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebp +
call ecx  +
test eax eax +
mov esi eax +
jz loc_4072FE  +
cmp byte ptr [eax] 0 +
jz loc_4072CB  +
mov edi [ebp+0] +
mov [esp+48h+var_48] edi +
call strlen  +
test eax eax +
jz loc_4072C4  +
movzx edx byte ptr [edi+eax-1] +
lea ebx [eax-1] +
cmp dl 5Ch +
jz loc_4072ED  +
cmp dl 2Fh +
jnz loc_4070BA  +
jmp loc_4072ED  +
movzx eax byte ptr [edi+ebx-1] +
lea edx [ebx-1] +
cmp al 5Ch +
jz loc_4071D4  +
cmp al 2Fh +
jz loc_4071D4  +
mov ebx edx +
test ebx ebx +
jnz loc_4070A0  +
mov edx 1 +
mov [esp+48h+var_48] edx +
call sub_40EFC0  +
test eax eax +
mov [esp+48h+var_30] eax +
jz loc_407318  +
mov eax [ebp+0] +
mov edi [esp+48h+var_30] +
mov [esp+48h+var_40] ebx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] edi +
call memcpy  +
mov byte ptr [edi+ebx] 0 +
mov eax [ebp+0] +
mov [esp+48h+var_48] eax +
call sub_45C720  +
mov [esp+48h+var_48] eax +
mov edi eax +
call strlen  +
test eax eax +
jz loc_4072E6  +
movzx ecx byte ptr [edi+eax-1] +
lea ebp [eax-1] +
cmp cl 2Fh +
jz loc_4072F7  +
cmp cl 5Ch +
jnz loc_407142  +
jmp loc_4072F7  +
movzx eax byte ptr [edi+ebp-1] +
lea edx [ebp-1] +
cmp al 5Ch +
jz loc_407146  +
cmp al 2Fh +
jz loc_407146  +
mov ebp edx +
test ebp ebp +
jnz loc_407130  +
mov eax [esp+48h+var_34] +
mov byte ptr [edi+ebp] 0 +
mov [esp+48h+var_48] eax +
call strlen  +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_2C] eax +
call strlen  +
mov ecx [esp+48h+var_2C] +
cmp ebp ebx +
cmovnb ebx ebp +
lea eax [ecx+eax+9] +
add ebx eax +
mov [esp+48h+var_48] ebx +
call sub_40EFC0  +
test eax eax +
mov ebx eax +
jz loc_4071AE  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_45C790  +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] eax +
call strcpy  +
mov eax [esp+48h+var_1C] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call [esp+48h+arg_0]  +
test eax eax +
jz loc_4071E0  +
mov [esp+48h+var_48] esi +
call free  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_48] edi +
call free  +
mov eax ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [ebx+1] +
jmp loc_4070C3  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_45C790  +
mov dword ptr [eax] 6265642Eh +
add eax 7 +
mov dword ptr [eax-3] 2F6775h +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] eax +
call strcpy  +
mov eax [esp+48h+var_1C] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call [esp+48h+arg_0]  +
test eax eax +
jnz loc_4071AE  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call sub_45C790  +
mov ebp eax +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_48] eax +
call strlen  +
cmp eax 1 +
jz loc_40725B  +
mov ecx [esp+48h+var_34] +
cmp byte ptr [ecx+eax-1] 2Fh +
jz loc_40725B  +
cmp byte ptr [edi] 2Fh +
jz loc_40725B  +
mov eax 2Fh +
mov [ebp+0] ax +
mov [esp+48h+var_48] ebx +
call strlen  +
mov [esp+48h+var_44] edi +
add eax ebx +
mov [esp+48h+var_48] eax +
call sub_45C790  +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] eax +
call strcpy  +
mov eax [esp+48h+var_1C] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call [esp+48h+arg_0]  +
test eax eax +
jnz loc_4071AE  +
mov [esp+48h+var_48] ebx +
xor ebx ebx +
call free  +
jmp loc_4071AE  +
mov [esp+48h+var_44] 559h +
mov [esp+48h+var_48] offset a____Binutils_4 +
mov [esp+48h+var_30] ecx +
call sub_40C6C0  +
mov ecx [esp+48h+var_30] +
jmp loc_407035  +
xor ebx ebx +
jmp loc_4070BE  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_48] 10h +
call sub_40C770  +
xor eax eax +
jmp loc_4071CC  +
xor ebp ebp +
jmp loc_407146  +
lea edx [eax+1] +
mov ebx eax +
jmp loc_4070C3  +
mov ebp eax +
jmp loc_407146  +
xor eax eax +
jmp loc_4071CC  +
mov [esp+48h+var_48] 5 +
call sub_40C770  +
xor eax eax +
jmp loc_4071CC  +
mov [esp+48h+var_48] esi +
call free  +
xor eax eax +
jmp loc_4071CC  +
***
mov [esp+18h+var_18] 0B0h +
call sub_40F150  +
test eax eax +
mov ebx eax +
jz loc_4073E0  +
mov eax ds:dword_49B0E0 +
test eax eax +
jnz loc_4073B0  +
mov eax ds:dword_49F104 +
lea edx [eax+1] +
mov ds:dword_49F104 edx +
mov [ebx+24h] eax +
call sub_45C440  +
test eax eax +
mov [ebx+0A8h] eax +
jz loc_4073E4  +
lea eax [ebx+48h] +
mov dword ptr [ebx+84h] offset asc_47A8A0 +
mov [esp+18h+var_C] 0Dh +
mov [esp+18h+var_10] 0B8h +
mov [esp+18h+var_14] offset dword_4106E0 +
mov [esp+18h+var_18] eax +
call sub_40FC80  +
test eax eax +
jz loc_4073D0  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
mov ecx ds:dword_49F100 +
sub eax 1 +
mov ds:dword_49B0E0 eax +
lea edx [ecx-1] +
mov ds:dword_49F100 edx +
mov [ebx+24h] edx +
jmp loc_407364  +
mov [esp+18h+var_18] ebx +
xor ebx ebx +
call free  +
jmp loc_4073A4  +
xor ebx ebx +
jmp loc_4073A4  +
mov [esp+18h+var_18] 6 +
call sub_40C770  +
mov [esp+18h+var_18] ebx +
xor ebx ebx +
call free  +
jmp loc_4073A4  +
***
sub esp 4 +
mov ebx [esp+4+arg_0] +
call sub_407330  +
test eax eax +
jz loc_407480  +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+0Ch] +
mov [eax+0Ch] edx +
cmp dword ptr [ebx+0Ch] offset off_479DC0 +
jz loc_407475  +
movzx edx byte ptr [eax+28h] +
mov [eax+8Ch] ebx +
movzx ecx byte ptr [ebx+2Bh] +
and edx 0FFFFFFE7h +
or edx 8 +
and ecx 1 +
mov [eax+28h] dl +
movzx edx byte ptr [eax+2Bh] +
and edx 0FFFFFFFEh +
or edx ecx +
movzx ecx byte ptr [eax+2Ch] +
mov [eax+2Bh] dl +
movzx esi byte ptr [ebx+2Ch] +
and edx 0FFFFFFF7h +
and ecx 0FFFFFFEFh +
and esi 10h +
or ecx esi +
mov [eax+2Ch] cl +
movzx ecx byte ptr [ebx+2Bh] +
and ecx 8 +
or edx ecx +
mov [eax+2Bh] dl +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+8] +
mov [eax+8] edx +
jmp loc_407427  +
xor eax eax +
jmp loc_40746F  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov eax [ebx+0A8h] +
test eax eax +
jz loc_4074EE  +
lea eax [ebx+48h] +
mov [esp] eax +
call sub_40FD90  +
mov eax [ebx+0A8h] +
mov [esp] eax +
call sub_45C5B0  +
mov dword ptr [ebx+64h] 0 +
mov dword ptr [ebx+68h] 0 +
mov dword ptr [ebx+78h] 0 +
mov dword ptr [ebx+0A0h] 0 +
mov dword ptr [ebx+0A4h] 0 +
mov dword ptr [ebx+0A8h] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_8] +
mov esi [esp+10h+arg_C] +
call sub_407330  +
test eax eax +
mov ebx eax +
jz loc_4075D0  +
mov [esp+10h+var_C] eax +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] eax +
call sub_40E330  +
test eax eax +
jz loc_407620  +
cmp esi 0FFFFFFFFh +
mov [esp+10h+var_C] edi +
jz loc_4075E6  +
mov [esp+10h+var_10] esi +
call _fdopen  +
mov [ebx+8] eax +
test eax eax +
jz loc_40763E  +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call sub_45A840  +
mov [ebx] eax +
movzx eax byte ptr [edi] +
cmp al 72h +
setz dl  +
cmp al 77h +
jz loc_4075B0  +
test dl dl +
jnz loc_4075B0  +
cmp al 61h +
jz loc_40760D  +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 10h +
mov [ebx+28h] al +
mov [esp+10h+var_10] ebx +
call sub_406470  +
test eax eax +
jz loc_407630  +
or byte ptr [ebx+2Bh] 2 +
cmp esi 0FFFFFFFFh +
jz loc_407600  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [edi+1] 2Bh +
jz loc_407617  +
test dl dl +
jz loc_40757B  +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
jmp loc_407588  +
cmp esi 0FFFFFFFFh +
jz loc_4075A1  +
mov [esp+10h+var_10] esi +
call _close  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call j_j_fopen  +
mov [ebx+8] eax +
jmp loc_40754D  +
or byte ptr [ebx+2Ah] 80h +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [edi+1] 2Bh +
jnz loc_40757B  +
or byte ptr [ebx+28h] 18h +
jmp loc_407588  +
cmp esi 0FFFFFFFFh +
jz loc_407630  +
mov [esp+10h+var_10] esi +
call _close  +
lea esi [esi+0] +
mov eax ebx +
xor ebx ebx +
call sub_406DC0  +
jmp loc_4075A1  +
mov [esp+10h+var_10] 1 +
call sub_40C770  +
jmp loc_407630  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 0FFFFFFFFh +
mov [esp+1Ch+var_14] offset aRb_0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_407500  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] offset aRB_0 +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_407500  +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 18h +
call sub_407330  +
test eax eax +
mov ebx eax +
jz loc_407713  +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_40E330  +
test eax eax +
jz loc_407708  +
mov eax [esp+28h] +
mov [ebx+8] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45A840  +
mov [ebx] eax +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
mov [esp] ebx +
call sub_406470  +
test eax eax +
jz loc_407708  +
add esp 18h +
mov eax ebx +
pop ebx  +
retn   +
***
mov eax ebx +
xor ebx ebx +
call sub_406DC0  +
jmp loc_407701  +
***
xor ebx ebx +
jmp loc_407701  +
***
call sub_407330  +
test eax eax +
mov ebx eax +
jz loc_407784  +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_40E330  +
test eax eax +
jz loc_40777D  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_45A840  +
mov [ebx] eax +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 10h +
mov [ebx+28h] al +
mov [esp+18h+var_18] ebx +
call sub_4065A0  +
test eax eax +
jz loc_407771  +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] 1 +
call sub_40C770  +
mov eax ebx +
call sub_406DC0  +
xor eax eax +
jmp loc_40776C  +
***
push ebx  +
sub esp 40h +
mov ebx [esp+40h+arg_0] +
movzx eax byte ptr [ebx+28h] +
test al 10h +
jz loc_4077B8  +
mov edx [ebx+4] +
and eax 7 +
mov eax [edx+eax*4+84h] +
mov [esp+40h+var_40] ebx +
call eax  +
test eax eax +
jz loc_4077CA  +
mov eax [ebx+4] +
mov eax [eax+94h] +
mov [esp+40h+var_40] ebx +
call eax  +
test eax eax +
jnz loc_4077D3  +
add esp 40h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+0Ch] +
mov eax [eax+10h] +
mov [esp+40h+var_40] ebx +
call eax  +
test eax eax +
setz al  +
movzx eax al +
mov esi eax +
jz loc_407800  +
mov eax ebx +
call sub_406DC0  +
add esp 40h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax byte ptr [ebx+28h] +
and eax 18h +
cmp al 10h +
jnz loc_4077EA  +
mov eax [ebx+28h] +
shr eax 5 +
test al 42h +
jz loc_4077EA  +
mov eax [ebx] +
lea edx [esp+40h+var_30] +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] eax +
call ds:_stati64  +
test eax eax +
jnz loc_4077EA  +
movzx eax [esp+40h+var_2A] +
and ax 0F000h +
cmp ax 8000h +
jnz loc_4077EA  +
mov [esp+40h+var_40] 0 +
call _umask  +
mov [esp+40h+var_40] eax +
mov edi eax +
call _umask  +
movzx ecx [esp+40h+var_2A] +
mov eax edi +
mov edx [ebx] +
not eax  +
and eax 49h +
or eax ecx +
and eax 1FFh +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] edx +
call _chmod  +
jmp loc_4077EA  +
***
push ebx  +
sub esp 40h +
mov ebx [esp+40h+arg_0] +
mov [esp+40h+var_40] ebx +
call sub_406530  +
test eax eax +
mov esi eax +
jnz loc_4078A8  +
mov eax ebx +
call sub_406DC0  +
add esp 40h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax byte ptr [ebx+28h] +
and eax 18h +
cmp al 10h +
jnz loc_407898  +
mov eax [ebx+28h] +
shr eax 5 +
test al 42h +
jz loc_407898  +
mov eax [ebx] +
lea edx [esp+40h+var_30] +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] eax +
call ds:_stati64  +
test eax eax +
jnz loc_407898  +
movzx eax [esp+40h+var_2A] +
and ax 0F000h +
cmp ax 8000h +
jnz loc_407898  +
mov [esp+40h+var_40] 0 +
call _umask  +
mov [esp+40h+var_40] eax +
mov edi eax +
call _umask  +
movzx ecx [esp+40h+var_2A] +
mov eax edi +
mov edx [ebx] +
not eax  +
and eax 49h +
or eax ecx +
and eax 1FFh +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] edx +
call _chmod  +
jmp loc_407898  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+24h] +
call sub_407330  +
test eax eax +
mov ebx eax +
jz loc_407968  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45A840  +
test esi esi +
mov [ebx] eax +
jz loc_40794C  +
mov eax [esi+4] +
mov [ebx+4] eax +
and byte ptr [ebx+28h] 0E7h +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_4089D0  +
mov eax ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
jmp loc_407962  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
test byte ptr [ebx+28h] 18h +
jnz loc_4079E0  +
mov dword ptr [esp] 8 +
call sub_40EFC0  +
test eax eax +
jz loc_4079F3  +
mov [ebx+8] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
or dword ptr [ebx+28h] 10000h +
movzx eax byte ptr [ebx+28h] +
mov dword ptr [ebx+0Ch] offset off_4798C0 +
mov dword ptr [ebx+38h] 0 +
mov dword ptr [ebx+3Ch] 0 +
and eax 0FFFFFFE7h +
or eax 10h +
mov [ebx+28h] al +
mov eax 1 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+1Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [esp] 5 +
call sub_40C770  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
xor eax eax +
jmp loc_4079DA  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
movzx eax byte ptr [ebx+28h] +
mov edx eax +
and edx 18h +
cmp dl 10h +
jnz loc_407A1C  +
test byte ptr [ebx+2Ah] 1 +
jnz loc_407A30  +
mov dword ptr [esp] 5 +
call sub_40C770  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [ebx+4] +
and eax 7 +
mov eax [edx+eax*4+84h] +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_407A50  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov eax [ebx+4] +
mov eax [eax+94h] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_407A46  +
and byte ptr [ebx+28h] 0F8h +
and byte ptr [ebx+2Bh] 0EDh +
and byte ptr [ebx+2Ah] 7Fh +
or dword ptr [ebx+28h] 10000h +
movzx eax byte ptr [ebx+2Bh] +
mov dword ptr [ebx+84h] offset asc_47A8A0 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+1Ch] 0 +
and eax 0FFFFFFFBh +
or eax 1 +
mov [ebx+2Bh] al +
movzx eax byte ptr [ebx+28h] +
mov dword ptr [ebx+8Ch] 0 +
mov dword ptr [ebx+38h] 0 +
mov dword ptr [ebx+3Ch] 0 +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
mov dword ptr [ebx+6Ch] 0 +
mov dword ptr [ebx+0A4h] 0 +
mov dword ptr [ebx+64h] 0 +
mov dword ptr [ebx+7Ch] 0 +
mov dword ptr [ebx+78h] 0 +
mov dword ptr [ebx+0A0h] 0 +
mov [esp] ebx +
call sub_4107F0  +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
call sub_4089A0  +
mov eax 1 +
jmp loc_407A2A  +
***
jmp sub_407B20  +
***
mov ecx [esp+18h+arg_4] +
test ecx ecx +
js loc_407B86  +
mov eax [esp+18h+arg_0] +
mov edx [eax+0A8h] +
jz loc_407B55  +
add ecx 7 +
and ecx 0FFFFFFF8h +
jnz loc_407B5A  +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call sub_45C4A0  +
test eax eax +
jz loc_407B70  +
add esp 18h +
pop ebx  +
retn   +
mov ecx 8 +
mov ebx [edx+4] +
cmp ebx ecx +
jb loc_407B40  +
mov eax [edx] +
sub ebx ecx +
mov [edx+4] ebx +
add eax ecx +
mov [edx] eax +
sub eax ecx +
jmp loc_407B4C  +
mov [esp+18h+var_18] 6 +
mov [esp+18h+var_C] eax +
call sub_40C770  +
mov eax [esp+18h+var_C] +
jmp loc_407B50  +
mov [esp+18h+var_18] 6 +
call sub_40C770  +
xor eax eax +
jmp loc_407B50  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
mov esi [esp+14h+arg_0] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_407BCD  +
test ecx ecx +
jz loc_407BCD  +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
ja loc_407BE2  +
imul ecx ebx +
mov [esp+14h+arg_0] esi +
mov [esp+14h+arg_4] ecx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_407B20  +
mov [esp+14h+var_14] 6 +
call sub_40C770  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_407B20  +
test eax eax +
mov ebx eax +
jz loc_407C33  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] eax +
call memset  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
call sub_407330  +
test eax eax +
mov ebx eax +
jz loc_407CD1  +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_40E330  +
test eax eax +
jz loc_407CD5  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45A840  +
mov [ebx] eax +
movzx eax byte ptr [ebx+28h] +
and eax 0FFFFFFE7h +
or eax 8 +
mov [ebx+28h] al +
mov eax [esp+2Ch] +
mov [esp] ebx +
mov [esp+4] eax +
call dword ptr [esp+28h]  +
test eax eax +
mov esi eax +
jz loc_407CD5  +
mov dword ptr [esp+4] 18h +
mov [esp] ebx +
call sub_407C00  +
mov edx [esp+30h] +
mov [eax+4] edx +
mov edx [esp+34h] +
mov [eax] esi +
mov [eax+8] edx +
mov edx [esp+38h] +
mov [eax+0Ch] edx +
mov [ebx+8] eax +
mov eax ebx +
mov dword ptr [ebx+0Ch] offset off_479DC0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
jmp loc_407CCB  +
***
mov eax ebx +
call sub_406DC0  +
xor eax eax +
nop   +
jmp loc_407CCB  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_407D0C  +
test ecx ecx +
jnz loc_407D45  +
mov esi ebx +
mov eax [esp+14h+arg_0] +
imul esi ecx +
mov [esp+14h+var_14] eax +
mov [esp+14h+var_10] esi +
call sub_407B20  +
mov ebx eax +
xor eax eax +
test ebx ebx +
jz loc_407D3F  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] ebx +
call memset  +
mov eax ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
jbe loc_407D0C  +
mov [esp+14h+var_14] 6 +
call sub_40C770  +
xor eax eax +
jmp loc_407D3F  +
***
mov eax [esp+arg_0] +
mov eax [eax+0A8h] +
mov [esp+arg_0] eax +
jmp sub_45C5E0  +
***
push ebx  +
mov edx [esp+0Ch] +
mov ebx [esp+10h] +
mov eax [esp+8] +
add ebx edx +
cmp edx ebx +
not eax  +
jnb loc_407DBE  +
mov ecx eax +
add edx 1 +
xor cl [edx-1] +
shr eax 8 +
movzx ecx cl +
xor eax ds:dword_4799C0[ecx*4] +
cmp edx ebx +
jnz loc_407DA5  +
not eax  +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
test ebx ebx +
jz loc_407EB0  +
test edi edi +
jz loc_407ED0  +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_407E94  +
mov [esp+2Ch+var_28] offset a_gnu_debugaltl +
mov [esp+2Ch+var_2C] ebx +
call sub_410840  +
test eax eax +
mov esi eax +
jz loc_407E39  +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call sub_4111A0  +
test eax eax +
jnz loc_407E43  +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_407E39  +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+24h] +
mov ebx [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] ebx +
call sub_473D10  +
lea ebp [eax+1] +
mov eax [esi+24h] +
cmp ebp eax +
jnb loc_407E39  +
sub eax ebp +
mov [edi] eax +
mov [esp+2Ch+var_2C] eax +
call sub_40EFC0  +
mov ecx [esp+2Ch+arg_8] +
mov edx [esp+2Ch+var_10] +
add edx ebp +
mov [ecx] eax +
mov ecx [edi] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_24] ecx +
call memcpy  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] 4D8h +
mov [esp+2Ch+var_2C] offset a____Binutils_4 +
call sub_40C6C0  +
jmp loc_407DFB  +
mov [esp+2Ch+var_28] 4D6h +
mov [esp+2Ch+var_2C] offset a____Binutils_4 +
call sub_40C6C0  +
jmp loc_407DE7  +
mov [esp+2Ch+var_28] 4D7h +
mov [esp+2Ch+var_2C] offset a____Binutils_4 +
call sub_40C6C0  +
jmp loc_407DEF  +
***
lea eax [esp+28h+var_C] +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_C] 0 +
mov [esp+28h+var_28] eax +
call sub_407DD0  +
mov ebx eax +
mov eax [esp+28h+arg_4] +
mov dword ptr [eax] 0 +
mov eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call free  +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
***
mov eax [esp+arg_0] +
mov ecx offset sub_406E20 +
mov edx [esp+arg_4] +
mov [esp+arg_0] offset sub_406F50 +
jmp sub_407020  +
***
mov eax [esp+arg_0] +
mov ecx offset sub_407EF0 +
mov edx [esp+arg_4] +
mov [esp+arg_0] offset sub_406F00 +
jmp sub_407020  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov eax [esp+24h] +
test ebx ebx +
jz loc_408000  +
test eax eax +
jz loc_408000  +
mov [esp] eax +
call sub_45BAA0  +
mov dword ptr [esp+4] offset a_gnu_debuglink +
mov [esp] ebx +
mov edi eax +
call sub_410840  +
test eax eax +
jnz loc_408000  +
mov dword ptr [esp+8] 2108h +
mov dword ptr [esp+4] offset a_gnu_debuglink +
mov [esp] ebx +
call sub_410D00  +
test eax eax +
mov esi eax +
jz loc_408015  +
mov [esp] edi +
call strlen  +
mov [esp+4] esi +
mov [esp] ebx +
add eax 4 +
and eax 0FFFFFFFCh +
add eax 4 +
mov [esp+8] eax +
call sub_410F10  +
test eax eax +
jz loc_408015  +
mov eax esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [esp] 5 +
call sub_40C770  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
xor eax eax +
jmp loc_407FF9  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+40h] +
mov edi [esp+48h] +
test edx edx +
jz loc_408185  +
mov eax [esp+44h] +
test eax eax +
jz loc_408185  +
test edi edi +
jz loc_408185  +
mov dword ptr [esp+4] offset aRb_0 +
mov [esp] edi +
call j_j_fopen  +
test eax eax +
mov esi eax +
jz loc_4081AD  +
xor ebx ebx +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 2000h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset unk_49B100 +
call fread  +
test eax eax +
jz loc_4080BD  +
add eax offset unk_49B100 +
not ebx  +
cmp eax offset unk_49B100 +
jbe loc_4080B9  +
mov edx offset unk_49B100 +
nop   +
mov ecx ebx +
add edx 1 +
xor cl [edx-1] +
shr ebx 8 +
movzx ecx cl +
xor ebx ds:dword_4799C0[ecx*4] +
cmp edx eax +
jnz loc_4080A0  +
not ebx  +
jmp loc_408067  +
***
mov [esp] esi +
call fclose  +
mov [esp] edi +
call sub_45BAA0  +
mov [esp] eax +
mov [esp+1Ch] eax +
call strlen  +
lea edi [eax+4] +
mov ebp eax +
and edi 0FFFFFFFCh +
lea eax [edi+4] +
mov [esp] eax +
mov [esp+18h] eax +
call sub_40EFC0  +
mov esi eax +
xor eax eax +
test esi esi +
jz loc_40817D  +
mov ecx [esp+1Ch] +
mov [esp+8] ebp +
mov [esp] esi +
mov [esp+4] ecx +
call memcpy  +
mov edx edi +
add edi esi +
sub edx ebp +
mov eax edx +
lea edx [esi+ebp] +
mov [esp] edx +
mov [esp+8] eax +
mov dword ptr [esp+4] 0 +
call memset  +
mov edx [esp+40h] +
mov eax [edx+4] +
mov eax [eax+30h] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
mov eax [esp+18h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+10h] 0 +
mov [esp+8] esi +
mov [esp+14h] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_410F50  +
mov edx eax +
mov eax 1 +
test edx edx +
jz loc_40819B  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 5 +
call sub_40C770  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] esi +
call free  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_40C770  +
xor eax eax +
jmp loc_40817D  +
***
push esi  +
push ebx  +
sub esp 8Ch +
mov eax [esp+8Ch+arg_8] +
mov ebx [esp+8Ch+arg_0] +
test eax eax +
jz loc_4081E9  +
mov eax [esp+8Ch+arg_8] +
mov dword ptr [eax] 0 +
movzx eax byte ptr [ebx+28h] +
test al 8 +
jz loc_4085E0  +
and eax 7 +
cmp al 3 +
ja loc_4085E0  +
test al al +
jnz loc_408740  +
mov eax [esp+8Ch+arg_8] +
test eax eax +
jz loc_40876B  +
mov eax ds:dword_47A830 +
shl eax 3 +
mov [esp+8Ch+var_8C] eax +
call sub_40EFC0  +
test eax eax +
mov ebp eax +
jz loc_4086D3  +
movzx eax byte ptr [ebx+28h] +
movzx edx byte ptr [esp+8Ch+arg_4] +
mov [esp+8Ch+var_44] 0 +
and eax 0FFFFFFF8h +
and edx 7 +
or eax edx +
mov [ebx+28h] al +
mov eax [ebx+4] +
test byte ptr [ebx+2Bh] 1 +
mov [esp+8Ch+var_70] eax +
jz loc_4085F9  +
mov eax ds:dword_47A830 +
mov edi off_4760A8 +
mov [esp+8Ch+var_50] eax +
mov eax [edi] +
test eax eax +
jz loc_408958  +
xor esi esi +
mov ecx 100h +
lea edx [ebx+48h] +
mov [esp+8Ch+var_60] esi +
mov esi ecx +
mov [esp+8Ch+var_64] 0 +
mov [esp+8Ch+var_6C] 0 +
mov [esp+8Ch+var_5C] 0 +
mov [esp+8Ch+var_54] 0 +
mov [esp+8Ch+var_58] edx +
mov [esp+8Ch+var_68] ebp +
jmp loc_4082C1  +
add edi 4 +
mov eax [edi] +
test eax eax +
jz loc_40846F  +
cmp eax offset off_47AC80 +
jz loc_4082B4  +
test byte ptr [ebx+2Bh] 1 +
jnz loc_4082D4  +
cmp [esp+8Ch+var_70] eax +
jz loc_4082B4  +
movzx eax byte ptr [eax+1Bh] +
cmp eax esi +
jg loc_4082B4  +
and dword ptr [ebx+28h] 0FFF9001Fh +
mov dword ptr [ebx+0A0h] 0 +
mov dword ptr [ebx+84h] offset asc_47A8A0 +
mov [esp+8Ch+var_8C] ebx +
call sub_4107F0  +
mov eax [edi] +
mov [ebx+4] eax +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_8C] ebx +
call sub_4060C0  +
test eax eax +
jnz loc_408731  +
mov [esp+8Ch+var_8C] 3 +
call sub_40C770  +
movzx eax byte ptr [ebx+28h] +
mov ecx [ebx+4] +
and eax 7 +
mov eax [ecx+eax*4+64h] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
test eax eax +
mov ebp eax +
jz loc_408723  +
mov eax [esp+8Ch+var_44] +
test eax eax +
jz loc_408371  +
lea eax [esp+8Ch+var_28] +
mov [esp+8Ch+var_8C] eax +
call sub_40FD90  +
mov [esp+8Ch+var_44] 0 +
movzx eax byte ptr [ebx+28h] +
and eax 7 +
cmp al 2 +
jz loc_4086F0  +
cmp off_4760A0 ebp +
jz loc_408935  +
mov eax [esp+8Ch+var_68] +
test eax eax +
jz loc_40839B  +
mov ecx [esp+8Ch+var_6C] +
mov [eax+ecx*4] ebp +
movzx eax byte ptr [ebp+1Bh] +
add [esp+8Ch+var_6C] 1 +
cmp eax esi +
jl loc_4086E0  +
add [esp+8Ch+var_64] 1 +
mov [esp+8Ch+var_60] ebp +
mov eax [ebx+0A0h] +
mov [esp+8Ch+var_40] eax +
mov eax [ebx+84h] +
mov [esp+8Ch+var_38] eax +
mov eax [ebx+28h] +
shr eax 5 +
and eax 3FFFFh +
mov [esp+8Ch+var_3C] eax +
mov eax [ebx+64h] +
mov [esp+8Ch+var_34] eax +
mov eax [ebx+68h] +
mov [esp+8Ch+var_30] eax +
mov eax [ebx+6Ch] +
mov [esp+8Ch+var_2C] eax +
mov eax [ebx+48h] +
mov [esp+8Ch+var_28] eax +
mov eax [ebx+4Ch] +
mov [esp+8Ch+var_24] eax +
mov eax [ebx+50h] +
mov [esp+8Ch+var_20] eax +
mov eax [ebx+54h] +
mov [esp+8Ch+var_1C] eax +
mov eax [ebx+58h] +
mov [esp+8Ch+var_18] eax +
mov eax [ebx+5Ch] +
mov [esp+8Ch+var_14] eax +
mov eax [ebx+60h] +
mov [esp+8Ch+var_88] 1 +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_10] eax +
call sub_407B20  +
test eax eax +
mov [esp+8Ch+var_44] eax +
jz loc_408731  +
mov eax [esp+8Ch+var_58] +
mov [esp+8Ch+var_84] 0B8h +
mov [esp+8Ch+var_88] offset dword_4106E0 +
mov [esp+8Ch+var_8C] eax +
call sub_40FD60  +
test eax eax +
jz loc_408731  +
add edi 4 +
mov eax [edi] +
mov [esp+8Ch+var_5C] ebp +
test eax eax +
jnz loc_4082C1  +
cmp [esp+8Ch+var_64] 1 +
mov ebp [esp+8Ch+var_68] +
mov [esp+8Ch+var_68] esi +
mov esi [esp+8Ch+var_60] +
jz loc_4087B9  +
mov eax [esp+8Ch+var_6C] +
test eax eax +
jnz loc_4088F0  +
mov eax [esp+8Ch+var_54] +
cmp eax off_4760A0 +
jz loc_408947  +
mov eax [esp+8Ch+var_50] +
sub eax ds:dword_47A830 +
cmp eax 1 +
mov [esp+8Ch+var_6C] eax +
jg loc_4087C6  +
cmp [esp+8Ch+var_6C] 1 +
jle loc_408996  +
mov [esp+8Ch+arg_0] ebx +
mov ecx off_47609C +
mov edi [esp+8Ch+var_6C] +
mov ebx [esp+8Ch+var_68] +
lea esi [esi+0] +
add ecx 4 +
mov esi [ecx-4] +
test esi esi +
jz loc_408781  +
mov eax edi +
sub eax 1 +
js loc_4084E0  +
cmp [ebp+eax*4+0] esi +
jnz loc_4084F0  +
movzx edx byte ptr [esi+1Bh] +
cmp ebx edx +
jl loc_4084F0  +
mov ebx [esp+8Ch+arg_0] +
mov [esp+8Ch+var_6C] 1 +
mov edi [esp+8Ch+var_44] +
test edi edi +
jz loc_4085B5  +
lea eax [ebx+48h] +
mov [esp+8Ch+var_8C] eax +
call sub_40FD90  +
mov eax [esp+8Ch+var_40] +
mov edx [esp+8Ch+var_3C] +
mov [ebx+0A0h] eax +
mov eax [esp+8Ch+var_38] +
and edx 3FFFFh +
shl edx 5 +
mov [ebx+84h] eax +
mov eax [ebx+28h] +
and eax 0FF80001Fh +
or eax edx +
mov [ebx+28h] eax +
mov eax [esp+8Ch+var_28] +
mov [ebx+48h] eax +
mov eax [esp+8Ch+var_24] +
mov [ebx+4Ch] eax +
mov eax [esp+8Ch+var_20] +
mov [ebx+50h] eax +
mov eax [esp+8Ch+var_1C] +
mov [ebx+54h] eax +
mov eax [esp+8Ch+var_18] +
mov [ebx+58h] eax +
mov eax [esp+8Ch+var_14] +
mov [ebx+5Ch] eax +
mov eax [esp+8Ch+var_10] +
mov [ebx+60h] eax +
mov eax [esp+8Ch+var_34] +
mov [ebx+64h] eax +
mov eax [esp+8Ch+var_30] +
mov [ebx+68h] eax +
mov eax [esp+8Ch+var_2C] +
mov [ebx+6Ch] eax +
mov eax [esp+8Ch+var_44] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_88] eax +
call sub_407D70  +
mov [esp+8Ch+var_44] 0 +
cmp [esp+8Ch+var_6C] 1 +
jz loc_4087F3  +
mov ecx [esp+8Ch+var_6C] +
test ecx ecx +
jnz loc_408893  +
mov [esp+8Ch+var_8C] 0Ch +
call sub_40C770  +
jmp loc_408621  +
mov [esp+8Ch+var_8C] 5 +
call sub_40C770  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_8C] ebx +
call sub_4060C0  +
test eax eax +
jz loc_4088F9  +
mov eax [esp+8Ch+var_70] +
and byte ptr [ebx+28h] 0F8h +
test ebp ebp +
mov [ebx+4] eax +
jz loc_408638  +
mov [esp+8Ch+var_8C] ebp +
call free  +
mov edx [esp+8Ch+var_44] +
test edx edx +
jz loc_4086D3  +
lea eax [ebx+48h] +
mov [esp+8Ch+var_8C] eax +
call sub_40FD90  +
mov eax [esp+8Ch+var_40] +
mov edx [esp+8Ch+var_3C] +
mov [ebx+0A0h] eax +
mov eax [esp+8Ch+var_38] +
and edx 3FFFFh +
shl edx 5 +
mov [ebx+84h] eax +
mov eax [ebx+28h] +
and eax 0FF80001Fh +
or eax edx +
mov [ebx+28h] eax +
mov eax [esp+8Ch+var_28] +
mov [ebx+48h] eax +
mov eax [esp+8Ch+var_24] +
mov [ebx+4Ch] eax +
mov eax [esp+8Ch+var_20] +
mov [ebx+50h] eax +
mov eax [esp+8Ch+var_1C] +
mov [ebx+54h] eax +
mov eax [esp+8Ch+var_18] +
mov [ebx+58h] eax +
mov eax [esp+8Ch+var_14] +
mov [ebx+5Ch] eax +
mov eax [esp+8Ch+var_10] +
mov [ebx+60h] eax +
mov eax [esp+8Ch+var_34] +
mov [ebx+64h] eax +
mov eax [esp+8Ch+var_30] +
mov [ebx+68h] eax +
mov eax [esp+8Ch+var_2C] +
mov [ebx+6Ch] eax +
mov eax [esp+8Ch+var_44] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_88] eax +
call sub_407D70  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi eax +
mov [esp+8Ch+var_64] 1 +
jmp loc_4083B1  +
test byte ptr [ebx+2Bh] 20h +
jnz loc_40875B  +
mov eax [esp+8Ch+var_54] +
cmp off_4760A0 eax +
jz loc_408708  +
mov eax [edi] +
mov [esp+8Ch+var_54] eax +
mov edx [esp+8Ch+var_68] +
test edx edx +
jz loc_408719  +
mov eax [edi] +
mov ecx [esp+8Ch+var_50] +
mov [edx+ecx*4] eax +
add [esp+8Ch+var_50] 1 +
jmp loc_4083B5  +
call sub_40C520  +
cmp eax 3 +
jz loc_4082B4  +
mov ebp [esp+8Ch+var_68] +
jmp loc_408621  +
movzx eax al +
cmp eax [esp+8Ch+arg_4] +
setz al  +
add esp 8Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_40C520  +
cmp eax 4 +
jnz loc_408380  +
jmp loc_4086F6  +
mov eax off_47609C +
mov eax [eax] +
test eax eax +
jnz loc_408217  +
xor ebp ebp +
jmp loc_408231  +
test ebp ebp +
mov ebx [esp+8Ch+arg_0] +
jz loc_408512  +
mov eax [esp+8Ch+var_64] +
mov edi [esp+8Ch+var_6C] +
cmp edi eax +
jz loc_408512  +
mov ecx [esp+8Ch+var_68] +
xor eax eax +
mov esi [ebp+eax*4+0] +
movzx edx byte ptr [esi+1Bh] +
cmp ecx edx +
jge loc_4087B9  +
add eax 1 +
cmp eax edi +
jl loc_4087A6  +
mov [esp+8Ch+var_6C] 1 +
jmp loc_408512  +
test ebp ebp +
jz loc_4084B9  +
lea edx ds:0[eax*4] +
mov eax ds:dword_47A830 +
mov [esp+8Ch+var_84] edx +
mov [esp+8Ch+var_8C] ebp +
lea eax [ebp+eax*4+0] +
mov [esp+8Ch+var_88] eax +
call memcpy  +
jmp loc_4084C4  +
cmp [esp+8Ch+var_5C] esi +
mov [ebx+4] esi +
jz loc_408862  +
and dword ptr [ebx+28h] 0FFF9001Fh +
mov dword ptr [ebx+0A0h] 0 +
mov dword ptr [ebx+84h] offset asc_47A8A0 +
mov [esp+8Ch+var_8C] ebx +
call sub_4107F0  +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_8C] ebx +
call sub_4060C0  +
test eax eax +
jnz loc_408621  +
movzx edx byte ptr [ebx+28h] +
mov eax [ebx+4] +
and edx 7 +
mov eax [eax+edx*4+64h] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
test eax eax +
jz loc_40897D  +
movzx eax byte ptr [ebx+28h] +
and eax 18h +
cmp al 18h +
jz loc_40893E  +
test ebp ebp +
mov eax 1 +
jz loc_4085EE  +
mov [esp+8Ch+var_8C] ebp +
mov [esp+8Ch+var_70] eax +
call free  +
mov eax [esp+8Ch+var_70] +
jmp loc_4085EE  +
mov eax [esp+8Ch+var_70] +
and byte ptr [ebx+28h] 0F8h +
mov [ebx+4] eax +
mov [esp+8Ch+var_8C] 0Dh +
call sub_40C770  +
mov eax [esp+8Ch+arg_8] +
test eax eax +
jz loc_4086D3  +
mov eax [esp+8Ch+arg_8] +
mov [eax] ebp +
mov eax [esp+8Ch+var_6C] +
mov dword ptr [ebp+eax*4+0] 0 +
sub eax 1 +
js loc_4086D3  +
mov edx [ebp+eax*4+0] +
mov edx [edx] +
mov [ebp+eax*4+0] edx +
sub eax 1 +
cmp eax 0FFFFFFFFh +
jnz loc_4088D7  +
xor eax eax +
jmp loc_4086D5  +
mov [esp+8Ch+var_54] esi +
jmp loc_4084B9  +
movzx edx byte ptr [ebx+28h] +
mov eax [ebx+4] +
and edx 7 +
mov eax [eax+edx*4+64h] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
test eax eax +
jnz loc_408862  +
cmp [esp+8Ch+arg_4] 2 +
jnz loc_408261  +
cmp [esp+8Ch+var_70] offset off_47AC80 +
jnz loc_408261  +
jmp loc_4085CC  +
mov ebp [esp+8Ch+var_68] +
jmp loc_408862  +
or byte ptr [ebx+2Bh] 10h +
jmp loc_408871  +
mov esi [esp+8Ch+var_54] +
mov [esp+8Ch+var_6C] 1 +
jmp loc_408512  +
mov [esp+8Ch+var_68] 100h +
mov [esp+8Ch+var_54] 0 +
mov [esp+8Ch+var_64] 0 +
mov [esp+8Ch+var_5C] 0 +
jmp loc_408492  +
mov [esp+8Ch+var_88] 1B5h +
mov [esp+8Ch+var_8C] offset a____Binutils_2 +
call sub_40C6C0  +
jmp loc_408862  +
mov esi [esp+8Ch+var_54] +
jmp loc_408512  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_4081C0  +
add esp 1Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
movzx eax byte ptr [ebx+28h] +
test al 8 +
jnz loc_408A00  +
mov edx eax +
and edx 7 +
cmp dl 3 +
ja loc_408A00  +
test dl dl +
jz loc_408A13  +
xor eax eax +
movzx edx dl +
cmp edx [esp+18h+arg_4] +
setz al  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] 5 +
call sub_40C770  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
movzx edx byte ptr [esp+18h+arg_4] +
and eax 0FFFFFFF8h +
and edx 7 +
or eax edx +
movzx edx dl +
mov [ebx+28h] al +
mov eax [ebx+4] +
mov eax [eax+edx*4+74h] +
mov [esp+18h+var_18] ebx +
call eax  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_408A0E  +
and byte ptr [ebx+28h] 0F8h +
add esp 18h +
xor al al +
pop ebx  +
retn   +
***
mov eax [esp+4] +
mov ecx [esp+8] +
mov edx [eax] +
mov eax [eax+4] +
xor eax [ecx+4] +
xor edx [ecx] +
or edx eax +
setz al  +
movzx eax al +
retn   +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
sub esp 18h +
xor edx edx +
test byte ptr [ebx+2Bh] 1 +
jnz loc_408B03  +
mov edx [ebx+4] +
mov edx [edx] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_407650  +
test eax eax +
jz loc_408B39  +
movzx edx byte ptr [ebx+2Ch] +
movzx ecx byte ptr [eax+2Ch] +
and edx 10h +
and ecx 0FFFFFFEFh +
or ecx edx +
movzx edx byte ptr [eax+2Bh] +
mov [eax+2Ch] cl +
movzx ecx byte ptr [ebx+2Bh] +
and edx 0FFFFFFF7h +
and ecx 8 +
or edx ecx +
mov [eax+2Bh] dl +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov ebp [eax+0A0h] +
mov eax [eax+4] +
mov eax [eax+0ECh] +
mov [esp+30h+var_30] esi +
call eax  +
test eax eax +
jz loc_408B71  +
mov ebx [eax+4] +
mov [esp+30h+var_30] eax +
call free  +
cmp ebx 3 +
ja loc_408B80  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] esi +
call sub_407C00  +
test eax eax +
mov edi eax +
jz loc_408B71  +
mov [esp+30h+var_28] esi +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] eax +
call sub_405EB0  +
cmp eax ebx +
jz loc_408BD0  +
call sub_40C520  +
cmp eax 1 +
nop   +
jz loc_408BBE  +
mov [esp+30h+var_30] 0Ah +
call sub_40C770  +
mov [esp+30h+var_2C] edi +
mov [esp+30h+var_30] esi +
call sub_407D70  +
jmp loc_408B71  +
mov [esp+30h+var_20] eax +
mov eax [esi+4] +
mov eax [eax+4Ch] +
mov [esp+30h+var_30] edi +
call eax  +
mov ecx [esp+30h+var_20] +
sub ecx 4 +
shr eax 3 +
lea edx ds:0[eax*8] +
cmp edx ecx +
mov [ebp+14h] eax +
ja loc_408CE3  +
shl eax 4 +
add edi 4 +
mov dword ptr [ebp+8] 0 +
lea edx [edi+edx+4] +
mov [esp+30h+var_2C] eax +
mov [esp+30h+var_30] esi +
mov [esp+30h+var_18] edx +
call sub_407B20  +
test eax eax +
mov ebx eax +
mov [ebp+10h] eax +
jz loc_408B71  +
mov eax [ebp+14h] +
xor edx edx +
test eax eax +
jz loc_408C80  +
mov [esp+30h+var_20] ebp +
mov ebp esi +
mov esi edx +
lea esi [esi+0] +
mov eax [ebp+4] +
add esi 1 +
add ebx 10h +
mov eax [eax+4Ch] +
mov [esp+30h+var_30] edi +
call eax  +
lea ecx [edi+4] +
add edi 8 +
add eax [esp+30h+var_18] +
mov [ebx-10h] eax +
mov eax [ebp+4] +
mov eax [eax+4Ch] +
mov [esp+30h+var_30] ecx +
call eax  +
mov dword ptr [ebx-4] 0 +
mov [ebx-8] eax +
mov eax [esp+30h+var_20] +
cmp [eax+14h] esi +
ja loc_408C40  +
mov esi ebp +
mov ebp eax +
mov [esp+30h+var_30] esi +
call sub_405FE0  +
mov [esp+30h+var_1C] edx +
mov edi [esp+30h+var_1C] +
mov [esp+30h+var_20] eax +
sar edi 1Fh +
mov eax edi +
sar eax 1Fh +
mov [esp+30h+var_14] eax +
mov eax [esp+30h+var_20] +
mov [esp+30h+var_18] edi +
mov edx [esp+30h+var_14] +
xor eax edi +
mov ecx eax +
mov ebx edx +
sub ecx [esp+30h+var_18] +
and ecx 1 +
mov eax ecx +
xor eax edi +
mov ecx eax +
mov eax [esp+30h+var_18] +
sub ecx eax +
mov eax 1 +
sbb ebx edx +
add ecx [esp+30h+var_20] +
adc ebx [esp+30h+var_1C] +
mov [ebp+0] ecx +
mov [ebp+4] ebx +
or byte ptr [esi+2Bh] 20h +
jmp loc_408B73  +
mov [esp+30h+var_30] 3 +
call sub_40C770  +
jmp loc_408BBE  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
sub esp 3Ch +
mov [esp+48h+var_20] edx +
call sub_45C7D0  +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_1C] eax +
call sub_45C720  +
mov [esp+48h+var_48] edi +
test eax eax +
cmovnz ebp eax +
mov [esp+48h+var_28] eax +
call sub_45C720  +
test eax eax +
mov [esp+48h+var_24] eax +
cmovnz edi eax +
lea esi [esi+0] +
movzx eax byte ptr [ebp+0] +
mov ebx ebp +
test al al +
jnz loc_408D5E  +
jmp loc_408D62  +
cmp al 2Fh +
jz loc_408D62  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_408D62  +
cmp al 5Ch +
jnz loc_408D50  +
movzx ecx byte ptr [edi] +
test cl cl +
jz loc_408EAD  +
cmp cl 5Ch +
jz loc_408F29  +
cmp cl 2Fh +
mov esi edi +
jnz loc_408D97  +
lea esi [esi+0] +
jmp loc_408F29  +
cmp dl 5Ch +
jz loc_408F30  +
cmp dl 2Fh +
jz loc_408F30  +
add esi 1 +
movzx edx byte ptr [esi] +
test dl dl +
jnz loc_408D85  +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_2C] ecx +
call strlen  +
mov ecx [esp+48h+var_2C] +
lea esi [eax+1] +
mov eax [esp+48h+var_20] +
xor edx edx +
xor ebx ebx +
add eax 1 +
nop   +
cmp cl 5Ch +
jz loc_408DCA  +
cmp cl 2Fh +
jnz loc_408DDB  +
cmp edi eax +
jbe loc_408DD8  +
cmp byte ptr [edi-1] 2Eh +
jz loc_408E9B  +
add ebx 1 +
add edi 1 +
movzx ecx byte ptr [edi] +
test cl cl +
jnz loc_408DC0  +
lea eax [ebx+ebx*2] +
add esi eax +
test edx edx +
mov [esp+48h+var_2C] edx +
jz loc_408F84  +
mov edi [esp+48h+var_1C] +
mov [esp+48h+var_48] edi +
call strlen  +
mov edx [esp+48h+var_2C] +
mov ecx edi +
lea edi [edi+eax-1] +
cmp ecx edi +
setb cl  +
test edx edx +
jz loc_408E2F  +
test cl cl +
jz loc_408E2F  +
movzx eax byte ptr [edi] +
jmp loc_408E24  +
cmp al 2Fh +
jz loc_408E28  +
cmp al 5Ch +
jnz loc_408E20  +
sub edx 1 +
test edx edx +
jnz loc_408E15  +
test edx edx +
jnz loc_408F6B  +
mov [esp+48h+var_48] edi +
call strlen  +
lea esi [esi+eax+1] +
cmp esi ds:dword_49F124 +
jbe loc_408EC4  +
mov eax ds:dword_49F120 +
test eax eax +
jz loc_408E5C  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_48] esi +
mov ds:dword_49F124 0 +
call sub_40EFC0  +
test eax eax +
mov ds:dword_49F120 eax +
jz loc_408F67  +
test ebx ebx +
mov ds:dword_49F124 esi +
mov esi eax +
jnz loc_408ECE  +
test edi edi +
mov eax esi +
jnz loc_408EE9  +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] eax +
call strcpy  +
jmp loc_408F07  +
cmp byte ptr [edi-2] 2Eh +
jnz loc_408DD8  +
add edx 1 +
jmp loc_408DDB  +
mov [esp+48h+var_48] ebp +
call strlen  +
lea esi [eax+1] +
xor ebx ebx +
xor edi edi +
cmp esi ds:dword_49F124 +
ja loc_408E4B  +
test ebx ebx +
mov esi ds:dword_49F120 +
jz loc_408E87  +
mov edx ebx +
mov eax esi +
mov dword ptr [eax] 2F2E2Eh +
add eax 3 +
sub edx 1 +
jnz loc_408ED2  +
lea eax [ebx+ebx*2] +
add eax esi +
test edi edi +
jz loc_408E8D  +
mov [esp+48h+var_3C] ebp +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] offset aSS_5 +
mov [esp+48h+var_48] eax +
call sprintf  +
mov esi ds:dword_49F120 +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] eax +
call free  +
mov eax [esp+48h+var_24] +
mov [esp+48h+var_48] eax +
call free  +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edi +
nop   +
lea esi [esi+0] +
test al al +
jz loc_408DA1  +
mov eax ebx +
mov edx esi +
sub eax ebp +
sub edx edi +
cmp eax edx +
jnz loc_408DA1  +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] ebp +
call sub_45B730  +
test eax eax +
jnz loc_408F8B  +
lea ebp [ebx+1] +
lea edi [esi+1] +
jmp loc_408D40  +
xor esi esi +
jmp loc_408F07  +
mov [esp+48h+var_44] 5F3h +
mov [esp+48h+var_48] offset a____Binutils_6 +
call sub_40C6C0  +
jmp loc_408E37  +
xor edi edi +
jmp loc_408EBC  +
mov [esp+48h+var_48] ebp +
nop   +
call strlen  +
movzx ecx byte ptr [edi] +
test cl cl +
lea esi [eax+1] +
jz loc_408EB8  +
jmp loc_408DB4  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov eax [eax] +
mov eax [eax+8] +
mov [esp+1Ch+var_1C] eax +
call sub_407880  +
mov eax 1 +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_C] +
mov [esp+10h+var_C] 14h +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_10] offset unk_49F13D +
mov edi [esp+10h+arg_0] +
mov [esp+10h+var_4] eax +
mov eax [esp+10h+arg_8] +
mov [esp+10h+var_8] eax +
call sub_408AB0  +
mov [esp+10h+var_10] offset unk_49F13D +
call strlen  +
cmp eax esi +
mov ebx eax +
jb loc_409030  +
mov [esp+10h+arg_8] esi +
mov [esp+10h+arg_0] edi +
mov [esp+10h+arg_4] offset unk_49F13D +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp memcpy  +
mov [esp+10h+var_10] edi +
sub esi ebx +
add ebx edi +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] offset unk_49F13D +
call memcpy  +
mov [esp+10h+arg_8] esi +
mov [esp+10h+arg_0] ebx +
mov [esp+10h+arg_4] 20h +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp memset  +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_8] +
mov [esp+10h+var_8] offset a10lu +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_C] 15h +
mov edi [esp+10h+arg_0] +
mov [esp+10h+var_10] offset unk_49F128 +
mov [esp+10h+var_4] eax +
call sub_408AB0  +
mov [esp+10h+var_10] offset unk_49F128 +
call strlen  +
cmp eax esi +
mov ebx eax +
ja loc_409110  +
jb loc_4090D6  +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_C] offset unk_49F128 +
call memcpy  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] edi +
sub esi ebx +
add ebx edi +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] offset unk_49F128 +
call memcpy  +
mov [esp+10h+var_8] esi +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_C] 20h +
call memset  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] 13h +
call sub_40C770  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 38h +
mov [esp] ebx +
call sub_407C00  +
test eax eax +
mov [ebx+0A0h] eax +
setnz al  +
add esp 18h +
movzx eax al +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
test byte ptr [eax+2Bh] 20h +
jz loc_409192  +
mov edx [esp+24h] +
lea ecx [edx+1] +
xor edx edx +
cmp dword ptr [esp+24h] 0FFFFFFFFh +
cmovnz edx ecx +
mov ecx [eax+0A0h] +
mov eax 0FFFFFFFFh +
cmp edx [ecx+14h] +
jb loc_4091A7  +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 5 +
call sub_40C770  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
***
mov eax edx +
shl eax 4 +
add eax [ecx+10h] +
mov ecx [esp+28h] +
mov [ecx] eax +
mov eax edx +
add esp 1Ch +
retn   +
***
jmp sub_407400  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov [eax+94h] edx +
mov eax 1 +
retn   +
***
mov ebx [esp+28h+arg_0] +
mov edx [esp+28h+arg_8] +
mov eax [ebx+0A0h] +
mov ecx [eax+8] +
mov eax [esp+28h+arg_4] +
mov [esp+28h+var_14] edx +
test ecx ecx +
mov [esp+28h+var_18] eax +
jz loc_409244  +
lea eax [esp+28h+var_18] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] ecx +
call sub_45D080  +
test eax eax +
jz loc_409244  +
mov eax [eax+8] +
movzx ecx byte ptr [ebx+2Bh] +
movzx edx byte ptr [eax+2Bh] +
and ecx 8 +
and edx 0FFFFFFF7h +
or edx ecx +
mov [eax+2Bh] dl +
add esp 28h +
pop ebx  +
retn   +
xor eax eax +
jmp loc_40923F  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
mov eax [ebx+0A0h] +
mov ebp [eax+8] +
test ebp ebp +
jz loc_4092C4  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] 10h +
call sub_407C00  +
mov [eax] esi +
mov ebx eax +
mov [eax+4] edi +
mov eax [esp+2Ch+arg_C] +
mov [ebx+8] eax +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_45D280  +
mov [eax] ebx +
mov eax [esp+2Ch+arg_C] +
mov eax [eax+88h] +
mov [eax+18h] ebp +
mov [eax+20h] esi +
mov [eax+24h] edi +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_18] offset free +
mov [esp+2Ch+var_1C] offset j_calloc +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] offset loc_408A90 +
mov [esp+2Ch+var_28] 408A80h +
mov [esp+2Ch+var_2C] 10h +
call sub_45CCC0  +
test eax eax +
mov ebp eax +
jz loc_409310  +
mov eax [ebx+0A0h] +
mov [eax+8] ebp +
jmp loc_409270  +
xor eax eax +
jmp loc_4092BC  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov ebx [esp+7Ch+arg_0] +
lea ebp [esp+7Ch+var_48] +
mov [esp+7Ch+var_78] 3Ch +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] ebx +
call sub_405EB0  +
cmp eax 3Ch +
jz loc_409386  +
call sub_40C520  +
cmp eax 1 +
jz loc_40937C  +
mov [esp+7Ch+var_7C] 9 +
call sub_40C770  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esp+0] 0Ah +
call sub_40C770  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+7Ch+var_E] +
mov edi offset asc_479E56 +
mov ecx 2 +
mov esi eax +
cmps   +
jz loc_4093C4  +
mov esi [esp+7Ch+arg_4] +
test esi esi +
jz loc_409370  +
mov edi [esp+7Ch+arg_4] +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_78] edi +
call strncmp  +
test eax eax +
jnz loc_409370  +
mov esi ds:__imp__errno +
call esi  +
mov dword ptr [eax] 0 +
lea eax [esp+7Ch+var_50] +
movzx edi byte ptr [esp+7Ch+var_E] +
mov [esp+7Ch+var_74] eax +
lea eax [esp+7Ch+var_18] +
mov [esp+7Ch+var_78] offset aLu +
mov [esp+7Ch+var_7C] eax +
mov byte ptr [esp+7Ch+var_E] 0 +
call sscanf  +
mov ecx edi +
mov byte ptr [esp+7Ch+var_E] cl +
cmp eax 1 +
jnz loc_409370  +
movzx edx byte ptr [esp+7Ch+var_48] +
cmp dl 2Fh +
jz loc_4095E0  +
cmp dl 20h +
jz loc_4095B2  +
cmp dl 23h +
jz loc_409520  +
mov eax [ebx+4] +
movzx edi byte ptr [eax+1Ah] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] ebp +
call memchr  +
test eax eax +
jz loc_4096E5  +
sub eax ebp +
mov edi eax +
lea eax [edi+65h] +
xor edx edx +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_68] 0 +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_60] edx +
call sub_40F150  +
test eax eax +
mov esi eax +
jz loc_40937C  +
mov edx [esp+7Ch+var_60] +
xor ecx ecx +
lea eax [esi+28h] +
test edx edx +
mov [esi] eax +
mov eax [esp+7Ch+var_48] +
mov [esi+28h] eax +
mov eax [esp+7Ch+var_44] +
mov [esi+2Ch] eax +
mov eax [esp+7Ch+var_40] +
mov [esi+30h] eax +
mov eax [esp+7Ch+var_3C] +
mov [esi+34h] eax +
mov eax [esp+7Ch+var_38] +
mov [esi+38h] eax +
mov eax [esp+7Ch+var_34] +
mov [esi+3Ch] eax +
mov eax [esp+7Ch+var_30] +
mov [esi+40h] eax +
mov eax [esp+7Ch+var_2C] +
mov [esi+44h] eax +
mov eax [esp+7Ch+var_28] +
mov [esi+48h] eax +
mov eax [esp+7Ch+var_24] +
mov [esi+4Ch] eax +
mov eax [esp+7Ch+var_20] +
mov [esi+50h] eax +
mov eax [esp+7Ch+var_1C] +
mov [esi+54h] eax +
mov eax [esp+7Ch+var_18] +
mov [esi+58h] eax +
mov eax [esp+7Ch+var_14] +
mov [esi+5Ch] eax +
mov eax [esp+6Ch] +
mov [esi+60h] eax +
mov eax [esp+7Ch+var_50] +
mov [esi+4] eax +
mov [esi+8] ecx +
mov ecx [esp+7Ch+var_6C] +
mov ebx [esp+7Ch+var_68] +
mov [esi+10h] ecx +
mov [esi+14h] ebx +
jz loc_409690  +
mov [esi+0Ch] edx +
add esp 7Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [esp+7Ch+var_48+1] 31h +
jnz loc_409427  +
cmp byte ptr [esp+7Ch+var_48+2] 2Fh +
jnz loc_409427  +
movzx eax byte ptr [esp+7Ch+var_48+3] +
test ds:byte_495EE0[eax+eax] 4 +
jz loc_409427  +
lea eax [esp+7Ch+var_48+3] +
mov [esp+7Ch+var_7C] eax +
call atoi  +
sub [esp+7Ch+var_50] eax +
mov ecx eax +
lea eax [eax+65h] +
mov [esp+7Ch+var_7C] eax +
mov [esp+7Ch+var_6C] ecx +
call sub_40F150  +
test eax eax +
mov esi eax +
jz loc_40937C  +
mov ecx [esp+7Ch+var_6C] +
lea edx [eax+64h] +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] ebx +
mov [esp+7Ch+var_6C] edx +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_60] ecx +
call sub_405EB0  +
mov ecx [esp+7Ch+var_60] +
mov edx [esp+7Ch+var_6C] +
cmp eax ecx +
mov edi eax +
jz loc_409722  +
mov [esp+7Ch+var_7C] esi +
call free  +
jmp loc_40934B  +
mov eax [ebx+4] +
mov [esp+7Ch+var_6C] edx +
movzx edi byte ptr [eax+1Ah] +
mov [esp+7Ch+var_78] 2Fh +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_74] edi +
call memchr  +
mov edx [esp+7Ch+var_6C] +
test eax eax +
jnz loc_40942E  +
lea esi [esi+0] +
mov eax [ebx+0A0h] +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_40941E  +
call esi  +
mov dword ptr [eax] 0 +
lea eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_78] eax +
lea eax [esp+7Ch+var_48+1] +
mov [esp+7Ch+var_74] 0Ah +
mov [esp+7Ch+var_7C] eax +
call strtol  +
mov edi eax +
call esi  +
mov edx [eax] +
test edx edx +
jnz loc_409370  +
mov eax [ebx+0A0h] +
cmp edi [eax+1Ch] +
jnb loc_409370  +
test byte ptr [ebx+2Bh] 40h +
jz loc_4096A5  +
mov edx [esp+7Ch+var_4C] +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_68] 0 +
test edx edx +
jz loc_4096B5  +
cmp byte ptr [edx] 3Ah +
jnz loc_4096B5  +
add edx 1 +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] 0Ah +
mov [esp+7Ch+var_78] 0 +
call strtol  +
mov [esp+7Ch+var_6C] eax +
sar eax 1Fh +
mov [esp+7Ch+var_68] eax +
call esi  +
mov eax [eax] +
test eax eax +
jnz loc_409370  +
mov eax [ebx+0A0h] +
jmp loc_4096B5  +
lea eax [esi+64h] +
test edi edi +
mov [esi+0Ch] eax +
jnz loc_4096D0  +
mov byte ptr [eax+edi] 0 +
mov eax esi +
jmp loc_409363  +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_68] 0 +
mov edx edi +
add edx [eax+18h] +
jz loc_40937C  +
mov eax 64h +
xor edi edi +
jmp loc_409463  +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov eax [esi+0Ch] +
jmp loc_40969A  +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] 2Fh +
mov [esp+7Ch+var_7C] ebp +
call memchr  +
test eax eax +
jnz loc_40944A  +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] 20h +
mov [esp+7Ch+var_7C] ebp +
call memchr  +
test eax eax +
jz loc_40944E  +
jmp loc_40944A  +
mov byte ptr [esi+eax+64h] 0 +
mov ecx eax +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_68] 0 +
jmp loc_40947F  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_409320  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov ebx [edi] +
mov [esp+1Ch+var_1C] ebx +
call sub_45BAA0  +
mov esi [esp+1Ch+arg_4] +
cmp eax ebx +
jz loc_4097BF  +
sub eax ebx +
mov [esp+1Ch+var_1C] esi +
mov ebp eax +
call strlen  +
mov [esp+1Ch+var_1C] edi +
lea eax [ebp+eax+1] +
mov [esp+1Ch+var_18] eax +
call sub_407B20  +
test eax eax +
mov edi eax +
jz loc_4097D0  +
mov [esp+1Ch+var_14] ebp +
add ebp edi +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] eax +
call strncpy  +
mov [esp+1Ch+var_18] esi +
mov esi edi +
mov [esp+1Ch+var_1C] ebp +
call strcpy  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi esi +
jmp loc_4097BF  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
call sub_4091F0  +
test eax eax +
mov ebx eax +
jz loc_409813  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
call sub_4060C0  +
test eax eax +
js loc_409809  +
mov eax [ebp+4] +
mov eax [eax+0ECh] +
mov [esp+2Ch+var_2C] ebp +
call eax  +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_409809  +
test byte ptr [ebp+2Bh] 40h +
mov ebx [eax+0Ch] +
jz loc_409A05  +
movzx eax byte ptr [ebx] +
cmp al 5Ch +
jz loc_409888  +
cmp al 2Fh +
jz loc_409888  +
test al al +
nop   +
jz loc_409868  +
cmp byte ptr [ebx+1] 3Ah +
jz loc_409888  +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_409760  +
test eax eax +
mov ebx eax +
jnz loc_409888  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call free  +
jmp loc_409809  +
mov eax [esp+2Ch+var_14] +
cmp dword ptr [eax+14h] 0 +
jl loc_40993B  +
jle loc_409931  +
mov eax [ebp+0] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call sub_45B6E0  +
test eax eax +
jz loc_409A73  +
mov esi [ebp+98h] +
test esi esi +
jnz loc_4098D0  +
jmp loc_409A30  +
mov esi [esi+90h] +
test esi esi +
jz loc_409A30  +
mov eax [esi] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_28] eax +
call sub_45B6E0  +
test eax eax +
jnz loc_4098C2  +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] esi +
call sub_4089A0  +
test eax eax +
jz loc_409A17  +
mov eax [esp+2Ch+var_14] +
mov ebx [eax+14h] +
mov ecx [eax+10h] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] ecx +
call sub_4097E0  +
test eax eax +
mov ebx eax +
jz loc_40987A  +
mov [esp+2Ch+var_2C] ebp +
call sub_405FE0  +
mov [ebx+40h] eax +
mov [ebx+44h] edx +
jmp loc_409809  +
cmp dword ptr [eax+10h] 0 +
ja loc_40989C  +
mov edx ebp +
mov eax ebx +
call sub_408AF0  +
test eax eax +
mov ecx eax +
jz loc_409A73  +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_10] ecx +
call sub_405FE0  +
mov ecx [esp+2Ch+var_10] +
mov [ecx+40h] eax +
mov [ecx+44h] edx +
test byte ptr [ebp+2Bh] 40h +
jz loc_409A56  +
mov dword ptr [ecx+38h] 0 +
mov dword ptr [ecx+3Ch] 0 +
mov eax [esp+2Ch+var_14] +
mov ebx [ecx+28h] +
mov [ecx+88h] eax +
mov eax [ebp+28h] +
mov edx ebx +
and ebx 0FF80001Fh +
shr edx 5 +
and edx 3FFFFh +
shr eax 5 +
and eax 2C000h +
or eax edx +
shl eax 5 +
or ebx eax +
movzx eax byte ptr [ecx+2Ch] +
mov [ecx+28h] ebx +
movzx edx byte ptr [ebp+2Ch] +
and eax 0FFFFFFFDh +
and edx 2 +
or eax edx +
mov [ecx+2Ch] al +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_10] ecx +
call sub_409250  +
mov ecx [esp+2Ch+var_10] +
mov ebx ecx +
test eax eax +
jnz loc_409809  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call free  +
mov dword ptr [ebx+88h] 0 +
xor ebx ebx +
jmp loc_409809  +
mov [esp+2Ch+var_2C] ebp +
call sub_407400  +
test eax eax +
mov ecx eax +
jnz loc_40994E  +
mov eax [esp+2Ch+var_14] +
xor ebx ebx +
mov [esp+2Ch+var_2C] eax +
call free  +
jmp loc_409809  +
mov edx ebp +
mov eax ebx +
call sub_408AF0  +
test eax eax +
jz loc_409A17  +
mov edx [ebp+98h] +
mov esi eax +
mov [eax+90h] edx +
mov [ebp+98h] eax +
jmp loc_4098E2  +
mov [ecx+38h] eax +
mov [ecx+3Ch] edx +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_10] ecx +
call sub_45A840  +
mov ecx [esp+2Ch+var_10] +
mov [ecx] eax +
jmp loc_40997C  +
mov [esp+2Ch+var_2C] 0Ah +
call sub_40C770  +
jmp loc_409A17  +
***
jmp loc_409A90  +
sub esp 1Ch +
mov ecx [esp+20h] +
mov eax [esp+24h] +
mov edx [ecx+0A0h] +
shl eax 4 +
add eax [edx+10h] +
mov edx [eax+0Ch] +
mov eax [eax+8] +
mov [esp] ecx +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_4097E0  +
add esp 1Ch +
retn   +
***
jmp sub_409AD0  +
***
mov eax [esp+18h+arg_0] +
movzx edx byte ptr [eax+28h] +
mov ecx edx +
and ecx 7 +
cmp cl 2 +
jnz loc_409B00  +
and edx 18h +
cmp dl 10h +
jz loc_409B00  +
mov edx [eax+4] +
mov edx [edx+0F4h] +
add esp 18h +
pop ebx  +
jmp edx  +
mov [esp+18h+var_18] 5 +
call sub_40C770  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ecx [esp+34h] +
test ecx ecx +
jz loc_409B93  +
mov ebx [esp+30h] +
mov eax [ecx+40h] +
mov edx [ecx+44h] +
test byte ptr [ebx+2Bh] 40h +
jnz loc_409B77  +
mov ecx [ecx+88h] +
xor ebx ebx +
mov ecx [ecx+4] +
add ecx eax +
mov ebp ecx +
adc ebx edx +
and ebp 1 +
xor edi edi +
add ecx ebp +
adc ebx edi +
cmp edx ebx +
jb loc_409B73  +
ja loc_409B63  +
cmp eax ecx +
jb loc_409B73  +
mov dword ptr [esp] 0Ah +
call sub_40C770  +
xor eax eax +
jmp loc_409B8B  +
mov eax ecx +
mov edx ebx +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp+8] edx +
mov [esp] eax +
call sub_4097E0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+30h] +
mov eax [eax+0A0h] +
mov edx [eax+4] +
mov eax [eax] +
jmp loc_409B77  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
lea ebp [esp+17h] +
mov dword ptr [esp+4] 8 +
mov [esp] ebp +
mov [esp+8] ebx +
call sub_405EB0  +
cmp eax 8 +
jz loc_409BF8  +
call sub_40C520  +
cmp eax 1 +
jz loc_409BEE  +
mov dword ptr [esp] 3 +
call sub_40C770  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi offset aThin +
mov ecx 8 +
movzx eax byte ptr [ebx+2Bh] +
mov esi ebp +
cmps   +
mov edi offset aArch +
mov ecx 8 +
mov esi ebp +
setz dl  +
and eax 0FFFFFFBFh +
shl edx 6 +
or eax edx +
mov [ebx+2Bh] al +
cmps   +
jz loc_409C38  +
mov edi offset aBout +
mov ecx 8 +
mov esi ebp +
cmps   +
jnz loc_409CA3  +
mov esi [ebx+0A0h] +
mov dword ptr [esp+4] 38h +
mov [esp] ebx +
call sub_407C00  +
test eax eax +
mov [ebx+0A0h] eax +
jz loc_409D34  +
mov dword ptr [eax] 8 +
mov dword ptr [eax+4] 0 +
mov eax [ebx+4] +
mov eax [eax+0D8h] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_409CB0  +
mov eax [ebx+4] +
mov eax [eax+0DCh] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_409CB0  +
movzx eax byte ptr [ebx+2Bh] +
and eax 21h +
cmp al 21h +
jz loc_409CE5  +
mov eax [ebx+4] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test al 40h +
jnz loc_409C38  +
jmp loc_409BEE  +
***
call sub_40C520  +
cmp eax 1 +
jz loc_409CC6  +
mov dword ptr [esp] 3 +
call sub_40C770  +
mov eax [ebx+0A0h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_407D70  +
xor eax eax +
mov [ebx+0A0h] esi +
jmp loc_409BF0  +
***
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_409AD0  +
test eax eax +
mov esi eax +
jz loc_409C98  +
and byte ptr [eax+2Bh] 0FEh +
mov dword ptr [esp+4] 1 +
mov [esp] eax +
call sub_4089A0  +
test eax eax +
mov eax [ebx+4] +
jz loc_409BF0  +
cmp [esi+4] eax +
jz loc_409BF0  +
mov dword ptr [esp] 4 +
call sub_40C770  +
jmp loc_409C98  +
***
mov [ebx+0A0h] esi +
jmp loc_409BF0  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov ebx [esp+0C0h] +
lea ebp [esp+3Eh] +
mov dword ptr [esp+4] 10h +
mov [esp] ebp +
mov [esp+8] ebx +
call sub_405EB0  +
mov edx 1 +
test eax eax +
jz loc_409D79  +
cmp eax 10h +
jz loc_409D86  +
xor edx edx +
add esp 0ACh +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFF0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] ebx +
call sub_4060C0  +
test eax eax +
jnz loc_409D77  +
mov edi offset a___symdef_0 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_409EC3  +
mov edi offset a___symdef_1 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_409EC3  +
mov edi offset asc_479E9A +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_409ED1  +
mov edi offset aSym64 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_409F36  +
mov edi offset a120 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_409E18  +
and byte ptr [ebx+2Bh] 0DFh +
mov edx 1 +
jmp loc_409D79  +
***
lea eax [esp+64h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 3Ch +
mov [esp] eax +
call sub_405EB0  +
cmp eax 3Ch +
jnz loc_409D77  +
lea esi [esp+4Fh] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 14h +
mov [esp] esi +
call sub_405EB0  +
cmp eax 14h +
jnz loc_409D77  +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFB0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] ebx +
call sub_4060C0  +
test eax eax +
jnz loc_409D77  +
mov dword ptr [esp+8] 10h +
mov dword ptr [esp+4] offset a___symdefSorte +
mov [esp] esi +
mov byte ptr [esp+63h] 0 +
call strncmp  +
test eax eax +
jz loc_409EC3  +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] offset a___symdef_2 +
mov [esp] esi +
call strncmp  +
test eax eax +
jnz loc_409E0A  +
mov eax ebx +
call sub_408B40  +
mov edx eax +
jmp loc_409D79  +
***
mov eax [ebx+4] +
mov ebp [ebx+0A0h] +
mov eax [eax+0ECh] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_409D77  +
mov edi [eax+4] +
lea esi [esp+64h] +
mov [esp] eax +
call free  +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] esi +
call sub_405EB0  +
cmp eax 4 +
jz loc_409F47  +
call sub_40C520  +
cmp eax 1 +
jz loc_409D77  +
mov dword ptr [esp] 0Ah +
call sub_40C770  +
xor edx edx +
jmp loc_409D79  +
***
mov dword ptr [esp] 3 +
call sub_40C770  +
jmp loc_409D77  +
***
mov [esp] esi +
sub edi 4 +
call sub_40F2F0  +
mov ecx edi +
mov dword ptr [esp+28h] offset sub_40F2F0 +
mov [esp+18h] eax +
shl eax 2 +
sub ecx eax +
cmp ecx 0FFFFFh +
mov [esp+20h] ecx +
ja loc_40A029  +
mov eax [esp+18h] +
cmp eax 0FFFFFFFh +
ja loc_409D77  +
mov edi [esp+20h] +
shl eax 4 +
mov ecx eax +
mov [esp+2Ch] eax +
lea eax [edi+eax+1] +
cmp ecx eax +
jnb loc_409D77  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_407C00  +
test eax eax +
mov esi eax +
mov [ebp+10h] eax +
jz loc_409D77  +
mov eax [esp+18h] +
mov [esp] ebx +
lea edi ds:0[eax*4] +
mov [esp+4] edi +
call sub_407B20  +
test eax eax +
mov [esp+24h] eax +
jz loc_40A013  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call sub_405EB0  +
cmp edi eax +
jz loc_40A071  +
call sub_40C520  +
sub eax 1 +
jz loc_40A003  +
mov dword ptr [esp] 0Ah +
call sub_40C770  +
mov eax [esp+24h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_407D70  +
mov eax [ebp+10h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_407D70  +
xor edx edx +
jmp loc_409D79  +
***
mov [esp] ebx +
call sub_40ECB0  +
cmp eax 4 +
jnz loc_409F75  +
mov eax [ebx+4] +
mov dword ptr [esp+28h] offset sub_40F2F0 +
cmp dword ptr [eax+4] 2 +
jnz loc_409F75  +
mov [esp] esi +
call sub_40F320  +
mov dword ptr [esp+28h] offset sub_40F320 +
mov [esp+18h] eax +
shl eax 2 +
sub edi eax +
mov [esp+20h] edi +
jmp loc_409F75  +
***
mov edi [esp+2Ch] +
mov eax [esp+20h] +
mov [esp+8] ebx +
add edi esi +
mov [esp+4] eax +
mov [esp] edi +
call sub_405EB0  +
cmp [esp+20h] eax +
jnz loc_409FED  +
mov [esp+0C0h] ebx +
xor edx edx +
mov ebx [esp+20h] +
jmp loc_40A0E9  +
cmp [esp+18h] edx +
jbe loc_40A0ED  +
mov eax [esp+24h] +
mov [esp+20h] edx +
lea eax [eax+edx*4] +
mov [esp] eax +
mov eax [esp+28h] +
call eax  +
mov [esi] edi +
mov dword ptr [esi+0Ch] 0 +
mov [esi+8] eax +
mov [esp+4] ebx +
mov [esp] edi +
call sub_473D10  +
mov edx [esp+20h] +
cmp eax ebx +
adc eax 0 +
add esi 10h +
add edi eax +
sub ebx eax +
add edx 1 +
test ebx ebx +
jnz loc_40A0A4  +
mov ebx [esp+0C0h] +
mov eax [esp+18h] +
mov byte ptr [edi] 0 +
mov [ebp+14h] eax +
mov [esp] ebx +
call sub_405FE0  +
mov ecx eax +
and ecx 1 +
mov esi ecx +
mov ecx edx +
and ecx 80000000h +
test ecx ecx +
mov edi ecx +
jns loc_40A13D  +
add esi 0FFFFFFFFh +
mov ecx esi +
or ecx 0FFFFFFFEh +
mov [esp+18h] ecx +
mov esi [esp+18h] +
mov dword ptr [esp+1Ch] 0FFFFFFFFh +
mov edi [esp+1Ch] +
add esi 1 +
adc edi 0 +
add eax esi +
adc edx edi +
mov [ebp+0] eax +
mov [ebp+4] edx +
or byte ptr [ebx+2Bh] 20h +
mov eax [esp+24h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_407D70  +
mov edx [ebp+4] +
mov eax [ebp+0] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebx +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_4060C0  +
mov eax [ebx+4] +
mov eax [eax+0ECh] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_409E0E  +
mov edx [eax] +
cmp byte ptr [edx] 2Fh +
jz loc_40A1A8  +
mov [esp] eax +
call free  +
mov edx 1 +
jmp loc_409D79  +
***
cmp byte ptr [edx+1] 20h +
jnz loc_40A196  +
mov ecx [eax+4] +
xor ebx ebx +
add ecx 3Dh +
and ecx 0FFFFFFFEh +
add [ebp+0] ecx +
adc [ebp+4] ebx +
jmp loc_40A196  +
***
jmp loc_40A1D0  +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx 1 +
sub esp 4Ch +
mov eax [esp+60h] +
lea ebp [esp+2Fh] +
mov eax [eax+0A0h] +
mov dword ptr [esp+4] 10h +
mov [esp] ebp +
mov [esp+18h] eax +
mov eax [esp+60h] +
mov [esp+8] eax +
call sub_405EB0  +
test eax eax +
jz loc_40A211  +
cmp eax 10h +
jz loc_40A220  +
xor ebx ebx +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+60h] +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFF0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] eax +
call sub_4060C0  +
test eax eax +
jnz loc_40A20F  +
mov edi offset a___symdef_0 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_40A282  +
mov edi offset a___symdef_1 +
mov ecx 10h +
mov esi ebp +
cmps   +
jz loc_40A282  +
mov edi offset asc_479E9A +
mov ecx 10h +
mov eax [esp+60h] +
mov esi ebp +
cmps   +
jz loc_40A290  +
and byte ptr [eax+2Bh] 0DFh +
jmp loc_40A211  +
***
mov eax [esp+60h] +
call sub_408B40  +
mov ebx eax +
jmp loc_40A211  +
***
mov eax [eax+4] +
mov edx [esp+60h] +
mov eax [eax+0ECh] +
mov [esp] edx +
call eax  +
test eax eax +
jz loc_40A20F  +
mov ebx [eax+4] +
mov [esp] eax +
cmp ebx 5 +
ja loc_40A2CB  +
call free  +
mov dword ptr [esp] 3 +
call sub_40C770  +
jmp loc_40A20F  +
***
call free  +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_407C00  +
test eax eax +
mov ebp eax +
jz loc_40A20F  +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp] ebp +
mov [esp+8] eax +
call sub_405EB0  +
cmp ebx eax +
jz loc_40A323  +
call sub_40C520  +
cmp eax 1 +
jz loc_40A20F  +
mov dword ptr [esp] 0Ah +
xor ebx ebx +
call sub_40C770  +
jmp loc_40A211  +
***
mov eax [esp+60h] +
sub ebx 6 +
mov eax [eax+4] +
mov eax [eax+58h] +
mov [esp] ebp +
call eax  +
mov edi [esp+18h] +
lea edx [ebp+2] +
mov dword ptr [edi+8] 0 +
mov [edi+14h] eax +
mov eax [esp+60h] +
mov eax [eax+4] +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
cmp ebx eax +
mov esi eax +
jb loc_40A2BA  +
mov eax [edi+14h] +
sub ebx esi +
mov [esp+1Ch] eax +
shl eax 3 +
cmp ebx eax +
jb loc_40A2BA  +
mov [esp+4] eax +
mov eax [esp+60h] +
mov [esp] eax +
call sub_407B20  +
mov ebx eax +
mov eax [esp+18h] +
test ebx ebx +
mov [eax+10h] ebx +
jz loc_40A20F  +
cmp dword ptr [eax+14h] 0 +
jz loc_40A3E7  +
add ebp 6 +
xor edi edi +
add esi ebp +
mov [esp+1Ch] ebp +
mov ebp edi +
mov edi [esp+60h] +
mov eax [edi+4] +
add ebp 1 +
add ebx 10h +
mov eax [eax+4Ch] +
mov [esp] esi +
call eax  +
lea ecx [esi+4] +
add esi 8 +
add eax [esp+1Ch] +
mov [ebx-10h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] ecx +
call eax  +
mov dword ptr [ebx-4] 0 +
mov [ebx-8] eax +
mov eax [esp+18h] +
cmp [eax+14h] ebp +
ja loc_40A3AB  +
mov eax [esp+60h] +
mov [esp] eax +
call sub_405FE0  +
mov edi edx +
mov esi eax +
and edi 80000000h +
and esi 1 +
test edi edi +
mov ecx esi +
mov ebx edi +
jns loc_40A419  +
add ecx 0FFFFFFFFh +
or edi 0FFFFFFFFh +
or ecx 0FFFFFFFEh +
mov ebx edi +
add ecx 1 +
adc ebx 0 +
add eax ecx +
mov ecx [esp+18h] +
adc edx ebx +
mov ebx 1 +
mov [ecx] eax +
mov eax [esp+60h] +
mov [ecx+4] edx +
or byte ptr [eax+2Bh] 20h +
jmp loc_40A211  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+60h] +
mov eax [ebx+0A0h] +
mov edx [eax+4] +
mov eax [eax] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebx +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_4060C0  +
test eax eax +
jz loc_40A480  +
xor ebp ebp +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+2Fh] +
mov ebp 1 +
mov [esp+8] ebx +
mov dword ptr [esp+4] 10h +
mov [esp] eax +
call sub_405EB0  +
cmp eax 10h +
jnz loc_40A474  +
mov dword ptr [esp+0Ch] 1 +
mov dword ptr [esp+4] 0FFFFFFF0h +
mov dword ptr [esp+8] 0FFFFFFFFh +
mov [esp] ebx +
call sub_4060C0  +
test eax eax +
jnz loc_40A472  +
mov edi offset aArfilenames +
mov ecx 10h +
lea esi [esp+2Fh] +
cmps   +
jz loc_40A4EE  +
mov edi offset asc_479EF9 +
mov ecx 10h +
lea esi [esp+2Fh] +
cmps   +
jnz loc_40A5A3  +
mov eax [ebx+4] +
mov eax [eax+0ECh] +
mov [esp] ebx +
call eax  +
test eax eax +
mov esi eax +
jz loc_40A472  +
mov edi [eax+4] +
cmp edi 0FFFFFFFFh +
jz loc_40A582  +
mov ebp [ebx+0A0h] +
lea eax [edi+1] +
mov [ebp+1Ch] edi +
mov [esp+4] eax +
mov [esp] ebx +
call sub_407C00  +
mov [ebp+18h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+18h] +
test eax eax +
jz loc_40A582  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call sub_405EB0  +
cmp eax edi +
jz loc_40A5BC  +
call sub_40C520  +
cmp eax 1 +
jz loc_40A560  +
mov dword ptr [esp] 0Ah +
call sub_40C770  +
mov eax [ebx+0A0h] +
mov eax [eax+18h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_407D70  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+18h] 0 +
mov [esp] esi +
call free  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+1Ch] 0 +
jmp loc_40A472  +
***
mov eax [ebx+0A0h] +
mov dword ptr [eax+18h] 0 +
mov dword ptr [eax+1Ch] 0 +
jmp loc_40A474  +
***
mov eax [ebx+0A0h] +
mov ecx [esi+4] +
mov edi [eax+18h] +
add ecx edi +
mov eax edi +
cmp edi ecx +
jb loc_40A5DE  +
jmp loc_40A607  +
cmp dl 5Ch +
jz loc_40A602  +
add eax 1 +
cmp eax ecx +
jz loc_40A607  +
movzx edx byte ptr [eax] +
cmp dl 0Ah +
jnz loc_40A5D2  +
cmp edi eax +
jnb loc_40A671  +
xor edx edx +
cmp byte ptr [eax-1] 2Fh +
setz dl  +
neg edx  +
mov byte ptr [eax+edx] 0 +
movzx edx byte ptr [eax] +
jmp loc_40A5D2  +
***
mov byte ptr [eax] 2Fh +
jmp loc_40A5D7  +
***
mov byte ptr [ecx] 0 +
mov edi [ebx+0A0h] +
mov [esp] ebx +
call sub_405FE0  +
mov [edi] eax +
mov [edi+4] edx +
mov ebx [ebx+0A0h] +
mov ecx [ebx+4] +
mov edi [ebx] +
sar ecx 1Fh +
xor edi ecx +
mov eax ecx +
cdq   +
mov eax edi +
mov [esp+18h] ecx +
sub eax [esp+18h] +
mov [esp+1Ch] edx +
mov ebp [esp+1Ch] +
and eax 1 +
mov edi eax +
xor edi ecx +
mov edx ebp +
mov eax edi +
mov edi [esp+18h] +
sub eax edi +
sbb edx ebp +
mov ebp 1 +
add eax [ebx] +
adc edx [ebx+4] +
mov [ebx] eax +
mov [ebx+4] edx +
mov [esp] esi +
call free  +
jmp loc_40A474  +
***
xor edx edx +
jmp loc_40A5F9  +
***
push ebp  +
push edi  +
xor edi edi +
push esi  +
xor esi esi +
push ebx  +
sub esp 3Ch +
mov eax [esp+50h] +
mov eax [eax+4] +
movzx eax byte ptr [eax+1Ah] +
mov [esp+20h] eax +
mov eax [esp+5Ch] +
mov dword ptr [eax] 0 +
mov eax [esp+50h] +
mov ebx [eax+94h] +
test ebx ebx +
jnz loc_40A759  +
jmp loc_40A7BE  +
mov eax [ebx+8Ch] +
mov ebp [ebx] +
test eax eax +
jz loc_40A6D4  +
test byte ptr [eax+2Bh] 40h +
jnz loc_40A6D4  +
mov ebp [eax] +
test esi esi +
jz loc_40A6E8  +
mov [esp+4] ebp +
mov [esp] esi +
call sub_45B6E0  +
test eax eax +
jz loc_40A74F  +
movzx eax byte ptr [ebp+0] +
cmp al 5Ch +
jz loc_40A7D0  +
cmp al 2Fh +
jz loc_40A7D0  +
test al al +
jz loc_40A708  +
cmp byte ptr [ebp+1] 3Ah +
mov eax ebp +
jz loc_40A734  +
mov eax [esp+50h] +
mov edx [eax] +
movzx eax byte ptr [edx] +
cmp al 5Ch +
jz loc_40A7D0  +
cmp al 2Fh +
jz loc_40A7D0  +
test al al +
jz loc_40A72D  +
cmp byte ptr [edx+1] 3Ah +
mov eax ebp +
jz loc_40A734  +
mov eax ebp +
call sub_408D00  +
mov [esp] eax +
call strlen  +
mov esi [esp+54h] +
add edi eax +
test esi esi +
jnz loc_40A7D7  +
add edi 1 +
mov esi ebp +
mov ebx [ebx+90h] +
test ebx ebx +
jz loc_40A7B6  +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jnz loc_40A6C0  +
mov eax [ebx] +
mov [esp] eax +
call sub_45BAA0  +
test eax eax +
jz loc_40AA50  +
mov [esp] eax +
mov [esp+18h] eax +
call strlen  +
mov edx [esp+18h] +
cmp [esp+20h] eax +
mov ebp eax +
jnb loc_40A7E5  +
mov eax [esp+50h] +
test byte ptr [eax+29h] 80h +
jnz loc_40A7E1  +
mov ecx [esp+54h] +
add ebp edi +
mov ebx [ebx+90h] +
lea edi [ebp+1] +
add ebp 2 +
test ecx ecx +
cmovnz edi ebp +
test ebx ebx +
jnz loc_40A759  +
test edi edi +
jnz loc_40A870  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax ebp +
jmp loc_40A734  +
***
add edi 2 +
mov esi ebp +
jmp loc_40A74F  +
***
mov ebp [esp+20h] +
mov eax [ebx+88h] +
mov [esp+18h] edx +
mov ecx [eax] +
mov [esp] edx +
mov [esp+8] ebp +
mov [esp+4] ecx +
mov [esp+1Ch] ecx +
call sub_45B730  +
mov edx [esp+18h] +
mov ecx [esp+1Ch] +
test eax eax +
jnz loc_40A82A  +
cmp ebp 0Fh +
ja loc_40A74F  +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
cmp [ecx+ebp] al +
jz loc_40A74F  +
mov [esp] ecx +
mov [esp+8] ebp +
mov [esp+4] edx +
mov [esp+18h] ecx +
call memcpy  +
mov ecx [esp+18h] +
cmp [esp+20h] ebp +
jbe loc_40A857  +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
mov [ecx+ebp] al +
jmp loc_40A74F  +
***
cmp ebp 0Fh +
ja loc_40A74F  +
cmp [esp+20h] ebp +
jnz loc_40A74F  +
jmp loc_40A848  +
***
mov eax [esp+50h] +
mov [esp+4] edi +
mov [esp] eax +
call sub_407C00  +
mov ebp eax +
mov eax [esp+58h] +
test ebp ebp +
mov [eax] ebp +
jz loc_40AA50  +
mov eax [esp+5Ch] +
mov [eax] edi +
mov eax [esp+50h] +
mov ebx [eax+94h] +
test ebx ebx +
jz loc_40A7BE  +
mov eax [esp+20h] +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+1Ch] 0 +
sub eax 1 +
mov [esp+28h] eax +
jmp loc_40AA25  +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_40A8DE  +
test byte ptr [eax+2Bh] 40h +
jnz loc_40A8DE  +
mov eax [eax] +
mov [esp+18h] eax +
mov edx [esp+1Ch] +
test edx edx +
jz loc_40A8FE  +
mov eax [esp+18h] +
mov esi [esp+1Ch] +
mov [esp+4] eax +
mov [esp] esi +
call sub_45B6E0  +
test eax eax +
jz loc_40A957  +
mov eax [esp+18h] +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jz loc_40AA60  +
cmp al 2Fh +
jz loc_40AA60  +
test al al +
jz loc_40A925  +
mov eax [esp+18h] +
cmp byte ptr [eax+1] 3Ah +
mov esi eax +
jz loc_40A957  +
mov eax [esp+50h] +
mov edx [eax] +
movzx eax byte ptr [edx] +
cmp al 5Ch +
jz loc_40AA60  +
cmp al 2Fh +
jz loc_40AA60  +
test al al +
jz loc_40A94C  +
cmp byte ptr [edx+1] 3Ah +
mov esi [esp+18h] +
jz loc_40A957  +
mov eax [esp+18h] +
call sub_408D00  +
mov esi eax +
mov [esp] esi +
call strlen  +
cmp [esp+20h] eax +
mov edi eax +
jb loc_40A975  +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jz loc_40AA17  +
mov eax [ebx+88h] +
cmp esi [esp+1Ch] +
mov edx [eax] +
jz loc_40A9BB  +
lea eax [edi+1] +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebp +
mov [esp+24h] edx +
call memcpy  +
mov eax [esp+54h] +
mov edx [esp+24h] +
test eax eax +
jnz loc_40AA70  +
mov byte ptr [ebp+edi+0] 0Ah +
mov ecx [esp+58h] +
mov eax ebp +
sub eax [ecx] +
mov [esp+24h] eax +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
mov [edx] al +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jz loc_40A9DA  +
mov eax [ebx+3Ch] +
or eax [ebx+38h] +
jnz loc_40AA80  +
mov eax [esp+24h] +
add edx 1 +
mov dword ptr [esp+8] offset aLd +
mov [esp] edx +
mov [esp+0Ch] eax +
mov eax [esp+28h] +
mov [esp+4] eax +
call sub_408FD0  +
cmp esi [esp+1Ch] +
jz loc_40AA17  +
mov eax [esp+18h] +
lea ebp [ebp+edi+1] +
cmp dword ptr [esp+54h] 1 +
mov [esp+1Ch] eax +
sbb ebp 0FFFFFFFFh +
mov ebx [ebx+90h] +
test ebx ebx +
jz loc_40A7BE  +
mov eax [ebx] +
mov [esp+18h] eax +
mov eax [esp+50h] +
test byte ptr [eax+2Bh] 40h +
jnz loc_40A8C8  +
mov eax [esp+18h] +
mov [esp] eax +
call sub_45BAA0  +
test eax eax +
mov esi eax +
jnz loc_40A957  +
nop   +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+18h] +
jmp loc_40A957  +
***
mov byte ptr [ebp+edi+0] 2Fh +
mov byte ptr [ebp+edi+1] 0Ah +
jmp loc_40A9AF  +
***
mov eax [esp+24h] +
mov dword ptr [esp+8] offset aLd_0 +
mov [esp+2Ch] edx +
mov [esp+0Ch] eax +
mov eax [esp+28h] +
mov [esp+4] eax +
lea eax [edx+1] +
mov [esp] eax +
call sub_408AB0  +
mov edx [ebx+38h] +
mov dword ptr [esp+8] offset aLd +
lea ecx [edx-3Ch] +
mov edx [esp+2Ch] +
mov [esp+0Ch] ecx +
mov ecx [esp+28h] +
sub ecx eax +
lea eax [edx+eax+1] +
mov [esp+4] ecx +
mov [esp] eax +
call sub_408FD0  +
jmp loc_40A9FD  +
***
mov eax [esp+10h] +
mov dword ptr [eax] offset aArfilenames_0 +
mov eax [esp+0Ch] +
mov [esp+10h] eax +
mov eax [esp+8] +
mov dword ptr [esp+8] 0 +
mov [esp+0Ch] eax +
jmp loc_40A680  +
***
mov eax [esp+10h] +
mov dword ptr [eax] offset asc_479F22 +
mov eax [esp+0Ch] +
mov [esp+10h] eax +
mov eax [esp+8] +
mov dword ptr [esp+8] 1 +
mov [esp+0Ch] eax +
jmp loc_40A680  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov edx [eax+4] +
movzx edi byte ptr [edx+1Ah] +
mov edx [esp+48h] +
mov [esp+1Ch] edi +
mov edi 1 +
mov dword ptr [edx] 0 +
mov edx [esp+44h] +
mov dword ptr [edx] 0 +
mov edx [esp+4Ch] +
mov dword ptr [edx] 0 +
mov ebp [eax+94h] +
test ebp ebp +
jz loc_40ABC9  +
mov eax [ebp+0] +
mov [esp] eax +
call sub_45BAA0  +
test eax eax +
jz loc_40AC05  +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_40ABBF  +
xor ecx ecx +
xor ebx ebx +
jmp loc_40ABA2  +
mov ecx esi +
cmp dl 20h +
movzx edx byte ptr [eax+ecx+1] +
cmovz ebx edi +
lea esi [ecx+1] +
test dl dl +
jnz loc_40ABA0  +
and ebx 1 +
jnz loc_40ABD6  +
cmp [esp+1Ch] esi +
jb loc_40ABD6  +
mov ebp [ebp+90h] +
test ebp ebp +
jnz loc_40AB83  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+88h] +
add ecx 4 +
and ecx 0FFFFFFFCh +
mov edx [eax] +
mov [eax+8] ecx +
mov eax [esp+1Ch] +
mov [esp+0Ch] ecx +
mov dword ptr [esp+8] offset a1Lu +
mov [esp] edx +
mov [esp+4] eax +
call sub_408FD0  +
jmp loc_40ABBF  +
***
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov edx [esp+20h] +
mov eax [eax+88h] +
mov eax [eax] +
mov [esp+8] edx +
mov dword ptr [esp+4] 3Ch +
mov [esp] eax +
call sub_405F60  +
cmp eax 3Ch +
setz al  +
add esp 1Ch +
movzx eax al +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+34h] +
mov eax [esi+88h] +
mov ebx [eax] +
cmp byte ptr [ebx] 23h +
jz loc_40AC91  +
mov eax [esp+30h] +
mov dword ptr [esp+4] 3Ch +
mov [esp] ebx +
mov [esp+8] eax +
call sub_405F60  +
cmp eax 3Ch +
setz al  +
movzx eax al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [ebx+1] 31h +
jnz loc_40AC68  +
cmp byte ptr [ebx+2] 2Fh +
jnz loc_40AC68  +
movzx eax byte ptr [ebx+3] +
test ds:byte_495EE0[eax+eax] 4 +
jz loc_40AC68  +
mov eax [esi] +
mov [esp] eax +
call sub_45BAA0  +
mov [esp] eax +
mov ebp eax +
call strlen  +
mov edx [esi+88h] +
mov edi eax +
lea eax [eax+3] +
and eax 0FFFFFFFCh +
cmp [edx+8] eax +
jz loc_40ACF4  +
mov dword ptr [esp+4] 73Dh +
mov dword ptr [esp] offset a____Binutils_6 +
mov [esp+0Ch] eax +
call sub_40C6C0  +
mov edx [esi+88h] +
mov eax [esp+0Ch] +
add eax [edx+4] +
mov dword ptr [esp+4] 0Ah +
mov [esp+8] eax +
lea eax [ebx+30h] +
mov [esp] eax +
call sub_409070  +
test eax eax +
jnz loc_40AD19  +
xor eax eax +
jmp loc_40AC89  +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] 3Ch +
mov [esp] ebx +
mov [esp+8] eax +
call sub_405F60  +
cmp eax 3Ch +
jnz loc_40AD12  +
mov eax [esp+30h] +
mov [esp+4] edi +
mov [esp] ebp +
mov [esp+8] eax +
call sub_405F60  +
cmp eax edi +
jnz loc_40AD12  +
and edi 3 +
mov eax 1 +
jz loc_40AC89  +
mov eax [esp+30h] +
mov ebx 4 +
sub ebx edi +
mov [esp+4] ebx +
mov dword ptr [esp] offset unk_47A013 +
mov [esp+8] eax +
call sub_405F60  +
cmp ebx eax +
setz al  +
movzx eax al +
jmp loc_40AC89  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov esi [esp+44h] +
mov eax [eax+88h] +
test eax eax +
jz loc_40AE6A  +
mov ebx [eax] +
test ebx ebx +
jz loc_40AE63  +
lea ebp [ebx+10h] +
lea edi [esp+1Ch] +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebp +
call strtol  +
cmp ebp [esp+1Ch] +
mov [esi+24h] eax +
jz loc_40AE63  +
lea ebp [ebx+1Ch] +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebp +
call strtol  +
cmp ebp [esp+1Ch] +
mov [esi+0Ah] ax +
jz loc_40AE63  +
lea ebp [ebx+22h] +
mov dword ptr [esp+8] 0Ah +
mov [esp+4] edi +
mov [esp] ebp +
call strtol  +
cmp ebp [esp+1Ch] +
mov [esi+0Ch] ax +
jz loc_40AE63  +
add ebx 28h +
mov dword ptr [esp+8] 8 +
mov [esp+4] edi +
mov [esp] ebx +
call strtol  +
cmp ebx [esp+1Ch] +
mov [esi+6] ax +
jz loc_40AE63  +
mov eax [esp+40h] +
mov eax [eax+88h] +
mov eax [eax+4] +
mov dword ptr [esi+1Ch] 0 +
mov [esi+18h] eax +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_40AE5B  +
***
mov dword ptr [esp] 5 +
call sub_40C770  +
mov eax 0FFFFFFFFh +
jmp loc_40AE5B  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
mov edi [esp+38h] +
mov [esp] eax +
call sub_45BAA0  +
mov edx eax +
mov eax [ebp+4] +
mov [esp+0Ch] edx +
movzx esi byte ptr [eax+1Ah] +
mov [esp] edx +
call strlen  +
mov edx [esp+0Ch] +
cmp esi eax +
mov ebx eax +
jb loc_40AEE0  +
mov [esp+8] eax +
mov [esp+4] edx +
mov [esp] edi +
call memcpy  +
cmp esi ebx +
jbe loc_40AED8  +
mov eax [ebp+4] +
movzx eax byte ptr [eax+19h] +
mov [edi+ebx] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+38h] esi +
mov [esp+30h] edi +
mov [esp+34h] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp memcpy  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [esp+34h] +
mov edi [esp+38h] +
mov edx [ebx+4] +
test byte ptr [ebx+29h] 80h +
movzx ebp byte ptr [edx+1Ah] +
jnz loc_40AF64  +
mov [esp] eax +
call sub_45BAA0  +
test eax eax +
mov edx eax +
jz loc_40AF86  +
mov eax ebp +
mov [esp] edx +
movzx ebp al +
mov [esp+0Ch] edx +
call strlen  +
mov edx [esp+0Ch] +
cmp ebp eax +
mov esi eax +
jnb loc_40AF70  +
cmp esi 0Fh +
ja loc_40AF5C  +
cmp esi ebp +
jnz loc_40AF5C  +
mov eax [ebx+4] +
movzx eax byte ptr [eax+19h] +
mov [edi+esi] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_40AE80  +
***
mov [esp+8] eax +
mov [esp+4] edx +
mov [esp] edi +
call memcpy  +
cmp ebp esi +
ja loc_40AF52  +
jmp loc_40AF49  +
***
mov dword ptr [esp+8] offset aBfd_dont_trunc +
mov dword ptr [esp+4] 818h +
mov dword ptr [esp] offset a____Binutils_6 +
call sub_40C6F0  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
mov [esp] eax +
call sub_45BAA0  +
mov edi eax +
mov eax [ebp+4] +
movzx ebx byte ptr [eax+1Ah] +
mov [esp] edi +
call strlen  +
cmp ebx eax +
mov esi eax +
jb loc_40B010  +
mov [esp+8] eax +
mov eax [esp+38h] +
mov ebx esi +
mov [esp+4] edi +
mov [esp] eax +
call memcpy  +
cmp ebx 0Fh +
ja loc_40B007  +
mov eax [ebp+4] +
mov edx [esp+38h] +
movzx eax byte ptr [eax+19h] +
mov [edx+ebx] al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+38h] +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call memcpy  +
cmp byte ptr [edi+esi-2] 2Eh +
jnz loc_40AFF4  +
cmp byte ptr [edi+esi-1] 6Fh +
jnz loc_40AFF4  +
mov eax [esp+38h] +
mov byte ptr [eax+ebx-2] 2Eh +
mov byte ptr [eax+ebx-1] 6Fh +
jmp loc_40AFF4  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_14] 0 +
test eax eax +
jz loc_40B074  +
mov edx eax +
and edx 1 +
lea eax [edx+eax+3Ch] +
mov [esp+4Ch+var_14] eax +
mov [esp+4Ch+var_4C] 6000h +
call sub_40EFC0  +
mov edi eax +
mov [esp+4Ch+var_24] eax +
xor eax eax +
test edi edi +
jz loc_40B31A  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] eax +
call sub_407B20  +
test eax eax +
mov [esp+4Ch+var_10] eax +
jz loc_40B2F0  +
mov eax [esp+4Ch+arg_0] +
mov edx offset a___symdef_2 +
mov ebp [eax+94h] +
mov eax 0Ah +
test ebp ebp +
jnz loc_40B0E8  +
jmp loc_40B354  +
mov ebp [ebp+90h] +
mov edi [esp+4Ch+arg_0] +
test ebp ebp +
mov [edi+94h] ebp +
jz loc_40B354  +
mov esi [ebp+0] +
mov edi edx +
mov ecx eax +
cmps   +
jz loc_40B0D0  +
xor ebx ebx +
xor esi esi +
mov [esp+4Ch+var_34] 0 +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_1C] 400h +
jmp loc_40B11F  +
mov ebp [ebp+90h] +
test ebp ebp +
jz loc_40B3C6  +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] ebp +
call sub_4089A0  +
test eax eax +
jz loc_40B111  +
test byte ptr [ebp+29h] 2 +
jz loc_40B111  +
mov eax [ebp+4] +
mov eax [eax+104h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
test eax eax +
mov [esp+4Ch+var_18] eax +
js loc_40B2E0  +
jz loc_40B2CA  +
cmp eax ebx +
jle loc_40B3B6  +
test ebx ebx +
jz loc_40B171  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_4C] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+4Ch+var_34] eax +
jz loc_40B2E4  +
mov eax [ebp+4] +
mov ebx [esp+4Ch+var_34] +
mov eax [eax+108h] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] ebp +
call eax  +
test eax eax +
mov [esp+4Ch+var_28] eax +
js loc_40B2E4  +
jz loc_40B2C6  +
mov [esp+4Ch+var_20] ebp +
xor ebx ebx +
mov ebp esi +
jmp loc_40B254  +
mov [esp+4Ch+var_4C] eax +
call strlen  +
mov ecx [esp+4Ch+var_24] +
mov [esp+4Ch+var_48] 4 +
mov edi eax +
lea eax [ebp+ebp*2+0] +
lea esi [ecx+eax*8] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_407B20  +
test eax eax +
mov [esi] eax +
mov [esp+4Ch+var_30] eax +
jz loc_40B2E4  +
lea eax [edi+1] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_407B20  +
mov edx [esp+4Ch+var_30] +
mov [edx] eax +
mov eax [esi] +
mov eax [eax] +
test eax eax +
jz loc_40B2E4  +
mov ecx [esp+4Ch+var_34] +
add ebp 1 +
mov edx [ecx+ebx*4] +
mov edx [edx+4] +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] edx +
call strcpy  +
mov eax [esp+4Ch+var_20] +
mov [esi+8] eax +
mov eax [esp+4Ch+var_2C] +
mov [esi+10h] eax +
lea eax [eax+edi+1] +
mov [esp+4Ch+var_2C] eax +
add ebx 1 +
cmp ebx [esp+4Ch+var_28] +
jz loc_40B2C0  +
mov eax [esp+4Ch+var_34] +
mov edx [eax+ebx*4] +
test dword ptr [edx+0Ch] 802082h +
mov eax [edx+10h] +
jnz loc_40B26D  +
test byte ptr [eax+15h] 10h +
jz loc_40B24B  +
cmp eax offset off_476188 +
jz loc_40B24B  +
cmp ebp [esp+4Ch+var_1C] +
jz loc_40B322  +
mov eax [edx+4] +
mov edi offset a__gnu_lto_slim +
mov ecx 0Fh +
mov esi eax +
cmps   +
jnz loc_40B1C0  +
mov eax [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_4C] offset aSPluginNeededT +
mov [esp+4Ch+var_48] eax +
call off_476094  +
mov eax [esp+4Ch+var_34] +
mov eax [eax+ebx*4] +
mov eax [eax+4] +
jmp loc_40B1C0  +
mov esi ebp +
mov ebp [esp+4Ch+var_20] +
mov ebx [esp+4Ch+var_18] +
mov eax [ebp+4] +
mov eax [eax+98h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
test eax eax +
jnz loc_40B111  +
test ebx ebx +
jz loc_40B2F0  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_10] +
test eax eax +
jz loc_40B3BF  +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_407D70  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+ebp+0] +
mov [esp+4Ch+var_1C] eax +
lea eax [eax+ebp*4] +
shl eax 3 +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] eax +
call sub_40F050  +
test eax eax +
jz loc_40B2E4  +
mov edi [esp+4Ch+var_34] +
mov [esp+4Ch+var_24] eax +
mov edx [edi+ebx*4] +
jmp loc_40B27E  +
mov eax [esp+4Ch+arg_0] +
mov ebx [esp+4Ch+var_24] +
mov eax [eax+4] +
mov eax [eax+0E8h] +
mov [esp+4Ch+var_44] ebx +
mov ebx [esp+4Ch+var_14] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_48] ebx +
mov ebx [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] ebx +
call eax  +
mov esi eax +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] eax +
call free  +
mov eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_407D70  +
add esp 4Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_18] ebx +
jmp loc_40B189  +
xor eax eax +
jmp loc_40B31A  +
mov eax [esp+4Ch+arg_0] +
mov edi [esp+4Ch+var_2C] +
mov eax [eax+4] +
mov eax [eax+0E8h] +
mov [esp+4Ch+var_3C] edi +
mov edi [esp+4Ch+var_24] +
mov [esp+4Ch+var_40] esi +
mov [esp+4Ch+var_44] edi +
mov edi [esp+4Ch+var_14] +
mov [esp+4Ch+var_48] edi +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] edi +
call eax  +
test ebx ebx +
mov esi eax +
jz loc_40B38C  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] eax +
call free  +
jmp loc_40B38C  +
***
push ebp  +
mov eax 203Ch +
push edi  +
push esi  +
push ebx  +
call sub_472FB0  +
sub esp eax +
mov eax [esp+2050h] +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+2Ch] 0 +
movzx eax byte ptr [eax+2Bh] +
mov [esp+1Bh] al +
mov eax [esp+2050h] +
shr byte ptr [esp+1Bh] 5 +
and byte ptr [esp+1Bh] 1 +
mov edi [eax+94h] +
test edi edi +
jz loc_40B92A  +
test byte ptr [edi+28h] 10h +
jnz loc_40B6D1  +
xor esi esi +
mov ebp [esp+2050h] +
mov ebx esi +
jmp loc_40B494  +
mov edi [edi+90h] +
test edi edi +
jz loc_40B4CA  +
test byte ptr [edi+28h] 10h +
jnz loc_40B6D1  +
mov eax [edi+88h] +
test eax eax +
jz loc_40B515  +
test ebx ebx +
jnz loc_40B480  +
cmp byte ptr [esp+1Bh] 0 +
jz loc_40B480  +
mov [esp] edi +
xor ebx ebx +
mov dword ptr [esp+4] 1 +
call sub_4089A0  +
mov edi [edi+90h] +
test eax eax +
setnz bl  +
test edi edi +
jnz loc_40B48A  +
mov esi ebx +
mov eax [esp+2050h] +
lea edx [esp+2Ch] +
mov ecx [esp+2050h] +
mov eax [eax+4] +
mov eax [eax+0E0h] +
mov [esp+0Ch] edx +
lea edx [esp+28h] +
mov [esp+8] edx +
lea edx [esp+24h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
test eax eax +
jnz loc_40B740  +
xor eax eax +
add esp 203Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test byte ptr [edi+2Ah] 1 +
mov eax [edi] +
jnz loc_40B700  +
lea ecx [esp+30h] +
mov [esp+4] ecx +
mov [esp] eax +
call ds:_stati64  +
test eax eax +
jnz loc_40B853  +
test byte ptr [ebp+2Ah] 4 +
jz loc_40B560  +
xor eax eax +
xor esi esi +
mov [esp+3Ch] ax +
mov eax 1A4h +
mov dword ptr [esp+54h] 0 +
mov [esp+3Ah] si +
mov [esp+36h] ax +
mov dword ptr [esp] 64h +
call sub_40F150  +
test eax eax +
mov esi eax +
jz loc_40B860  +
lea edx [eax+28h] +
mov dword ptr [eax+28h] 20202020h +
mov dword ptr [eax+2Ch] 20202020h +
mov dword ptr [eax+30h] 20202020h +
mov dword ptr [eax+34h] 20202020h +
mov dword ptr [eax+38h] 20202020h +
mov dword ptr [eax+3Ch] 20202020h +
mov dword ptr [eax+40h] 20202020h +
mov dword ptr [eax+44h] 20202020h +
mov dword ptr [eax+48h] 20202020h +
mov dword ptr [eax+4Ch] 20202020h +
mov dword ptr [eax+50h] 20202020h +
mov dword ptr [eax+54h] 20202020h +
mov dword ptr [eax+58h] 20202020h +
mov dword ptr [eax+5Ch] 20202020h +
mov dword ptr [eax+60h] 20202020h +
mov eax [esp+54h] +
mov dword ptr [esp+8] offset a12ld +
mov dword ptr [esp+4] 0Ch +
mov [esp+1Ch] edx +
mov [esp+0Ch] eax +
lea eax [esi+38h] +
mov [esp] eax +
call sub_408FD0  +
movsx eax word ptr [esp+3Ah] +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
mov [esp+0Ch] eax +
lea eax [esi+44h] +
mov [esp] eax +
call sub_408FD0  +
movsx eax word ptr [esp+3Ch] +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
mov [esp+0Ch] eax +
lea eax [esi+4Ah] +
mov [esp] eax +
call sub_408FD0  +
movzx eax word ptr [esp+36h] +
mov dword ptr [esp+8] offset a8lo +
mov dword ptr [esp+4] 8 +
mov [esp+0Ch] eax +
lea eax [esi+50h] +
mov [esp] eax +
call sub_408FD0  +
mov eax [esp+48h] +
mov dword ptr [esp+4] 0Ah +
mov [esp+8] eax +
lea eax [esi+58h] +
mov [esp] eax +
call sub_409070  +
mov edx [esp+1Ch] +
test eax eax +
jz loc_40B86F  +
mov ecx 0A60h +
mov [esi+62h] cx +
mov eax [esp+48h] +
mov ecx [edi] +
mov [esi] edx +
mov [esi+4] eax +
mov eax [ebp+4] +
mov [edi+88h] esi +
mov eax [eax+0E4h] +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] ebp +
call eax  +
jmp loc_40B49E  +
***
mov dword ptr [esp] 5 +
call sub_40C770  +
call sub_40C520  +
mov [esp+4] edi +
mov dword ptr [esp] 14h +
mov [esp+8] eax +
call sub_40C770  +
jmp loc_40B508  +
***
lea eax [esp+54h] +
mov esi [edi+8] +
mov [esp] eax +
call time  +
xor eax eax +
mov [esp+3Ah] ax +
xor eax eax +
mov [esp+3Ch] ax +
mov eax 1A4h +
mov [esp+36h] ax +
mov eax [esi] +
mov dword ptr [esp+4Ch] 0 +
mov [esp+48h] eax +
jmp loc_40B53A  +
***
mov eax [esp+2050h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_4060C0  +
test eax eax +
jnz loc_40B508  +
mov ecx [esp+2050h] +
mov edx offset aThin +
mov eax offset aArch +
test byte ptr [ecx+2Bh] 40h +
mov [esp+8] ecx +
mov dword ptr [esp+4] 8 +
cmovnz eax edx +
mov [esp] eax +
call sub_405F60  +
cmp eax 8 +
jnz loc_40B508  +
mov eax esi +
and al [esp+1Bh] +
mov [esp+1Bh] al +
jnz loc_40B970  +
mov esi [esp+28h] +
test esi esi +
jnz loc_40B994  +
mov eax [esp+2050h] +
mov edi [eax+94h] +
test edi edi +
jz loc_40B812  +
mov eax [edi+88h] +
mov ecx [esp+2050h] +
mov ebx [eax+4] +
mov eax [edi+4] +
mov eax [eax+0F0h] +
mov [esp+4] edi +
mov [esp] ecx +
call eax  +
test eax eax +
jz loc_40B508  +
mov eax [esp+2050h] +
test byte ptr [eax+2Bh] 40h +
jz loc_40B879  +
mov edi [edi+90h] +
test edi edi +
jnz loc_40B7D1  +
cmp byte ptr [esp+1Bh] 0 +
mov esi 5 +
mov ebx [esp+2050h] +
jz loc_40B849  +
mov eax [ebx+4] +
mov eax [eax+100h] +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_40B849  +
mov dword ptr [esp] offset aWarningWriting +
call off_476094  +
sub esi 1 +
jnz loc_40B825  +
mov eax 1 +
jmp loc_40B50A  +
***
mov dword ptr [esp] 1 +
call sub_40C770  +
nop   +
mov dword ptr [edi+88h] 0 +
jmp loc_40B6DD  +
***
mov [esp] esi +
call free  +
jmp loc_40B860  +
***
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] edi +
call sub_4060C0  +
test eax eax +
jnz loc_40B6DD  +
test ebx ebx +
jnz loc_40B8D7  +
jmp loc_40B931  +
mov eax [esp+2050h] +
mov [esp+4] ebp +
mov [esp+8] eax +
lea eax [esp+30h] +
mov [esp] eax +
call sub_405F60  +
cmp ebp eax +
jnz loc_40B508  +
sub ebx ebp +
jz loc_40B931  +
cmp ebx 2000h +
mov esi 2000h +
cmovb esi ebx +
call ds:__imp__errno  +
mov dword ptr [eax] 0 +
lea eax [esp+30h] +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] eax +
call sub_405EB0  +
cmp eax esi +
mov ebp eax +
jz loc_40B8B0  +
call sub_40C520  +
cmp eax 1 +
jz loc_40B6DD  +
mov dword ptr [esp] 12h +
call sub_40C770  +
jmp loc_40B6DD  +
***
xor esi esi +
jmp loc_40B4CC  +
***
mov eax [edi+88h] +
test byte ptr [eax+4] 1 +
jz loc_40B808  +
mov eax [esp+2050h] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 479E57h +
mov [esp+8] eax +
call sub_405F60  +
cmp eax 1 +
jz loc_40B808  +
jmp loc_40B508  +
***
mov eax [esp+28h] +
mov [esp+4] eax +
mov eax [esp+2050h] +
mov [esp] eax +
call sub_40B050  +
test eax eax +
jnz loc_40B7B4  +
jmp loc_40B508  +
***
mov ebp [esp+2Ch] +
lea edi [esp+30h] +
add esi 1 +
mov dword ptr [esp+30h] 20202020h +
and esi 0FFFFFFFEh +
mov dword ptr [esp+34h] 20202020h +
mov dword ptr [esp+38h] 20202020h +
mov [esp] ebp +
mov dword ptr [esp+3Ch] 20202020h +
mov dword ptr [esp+40h] 20202020h +
mov dword ptr [esp+44h] 20202020h +
mov dword ptr [esp+48h] 20202020h +
mov dword ptr [esp+4Ch] 20202020h +
mov dword ptr [esp+50h] 20202020h +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
mov dword ptr [esp+60h] 20202020h +
mov dword ptr [esp+64h] 20202020h +
mov dword ptr [esp+68h] 20202020h +
call strlen  +
mov [esp+4] ebp +
mov [esp] edi +
mov [esp+8] eax +
call memcpy  +
lea eax [esp+60h] +
mov [esp+8] esi +
mov dword ptr [esp+4] 0Ah +
mov [esp] eax +
call sub_409070  +
test eax eax +
jz loc_40B508  +
mov eax 0A60h +
mov [esp+6Ah] ax +
mov eax [esp+2050h] +
mov dword ptr [esp+4] 3Ch +
mov [esp] edi +
mov [esp+8] eax +
call sub_405F60  +
cmp eax 3Ch +
jnz loc_40B508  +
mov eax [esp+2050h] +
mov [esp+8] eax +
mov eax [esp+28h] +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_405F60  +
cmp eax [esp+28h] +
jnz loc_40B508  +
test al 1 +
jz loc_40B7C0  +
mov eax [esp+2050h] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 479E57h +
mov [esp+8] eax +
call sub_405F60  +
cmp eax 1 +
jnz loc_40B508  +
jmp loc_40B7C0  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov eax [esp+0B0h] +
mov ecx [esp+0ACh] +
mov ebx [esp+0A0h] +
mov edi eax +
and edi 1 +
add eax edi +
mov ebp [ebx+94h] +
lea esi ds:0[ecx*8] +
mov [esp+24h] edi +
lea edi [esi+eax+8] +
mov [esp+20h] eax +
mov eax [ebx+0A0h] +
test byte ptr [ebx+2Ah] 4 +
mov dword ptr [eax+20h] 0 +
jz loc_40BE70  +
mov dword ptr [esp+48h] 20202020h +
mov dword ptr [esp+4Ch] 20202020h +
mov dword ptr [esp+50h] 20202020h +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
mov dword ptr [esp+60h] 20202020h +
mov dword ptr [esp+64h] 20202020h +
mov dword ptr [esp+68h] 20202020h +
mov dword ptr [esp+6Ch] 20202020h +
mov dword ptr [esp+70h] 20202020h +
mov dword ptr [esp+74h] 20202020h +
mov dword ptr [esp+78h] 20202020h +
mov dword ptr [esp+40h] 532E5F5Fh +
mov dword ptr [esp+44h] 45444D59h +
mov byte ptr [esp+48h] 46h +
mov dword ptr [eax+28h] 18h +
mov dword ptr [eax+2Ch] 0 +
mov eax [eax+20h] +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 0Ch +
mov [esp+0Ch] eax +
lea eax [esp+50h] +
mov [esp] eax +
call sub_408FD0  +
lea eax [esp+5Ch] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
call sub_408FD0  +
lea eax [esp+62h] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
call sub_408FD0  +
lea eax [esp+70h] +
mov [esp+8] edi +
mov dword ptr [esp+4] 0Ah +
mov [esp] eax +
call sub_409070  +
test eax eax +
jnz loc_40BC60  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+40h] +
mov ecx 0A60h +
mov [esp+8] ebx +
mov dword ptr [esp+4] 3Ch +
mov [esp] eax +
mov [esp+7Ah] cx +
call sub_405F60  +
cmp eax 3Ch +
jnz loc_40BC4C  +
mov eax [ebx+4] +
lea ecx [esp+34h] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] esi +
call eax  +
lea eax [esp+34h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_405F60  +
cmp eax 4 +
jnz loc_40BC4C  +
mov edx [esp+0ACh] +
test edx edx +
jz loc_40BEF0  +
mov eax [esp+0A4h] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+2Ch] 0 +
mov [esp+0A0h] ebx +
lea eax [edi+eax+44h] +
mov [esp+18h] eax +
mov eax [esp+0A8h] +
mov [esp+28h] eax +
mov eax [esp+28h] +
mov ecx [esp+18h] +
mov ebx [esp+1Ch] +
mov eax [eax+8] +
cmp eax ebp +
mov [esp+10h] eax +
jz loc_40BD40  +
nop   +
mov edx [ebp+88h] +
mov ebp [ebp+90h] +
mov eax [edx+4] +
add eax [edx+8] +
xor edx edx +
add eax 3Ch +
add eax ecx +
adc edx ebx +
mov ebx eax +
and ebx 1 +
xor edi edi +
add eax ebx +
adc edx edi +
mov ecx eax +
cmp [esp+10h] ebp +
mov ebx edx +
jnz loc_40BD10  +
mov [esp+18h] ecx +
mov eax ebx +
xor ecx ecx +
or eax ecx +
mov dword ptr [esp+1Ch] 0 +
jnz loc_40BEA0  +
mov eax [esp+0A0h] +
lea ecx [esp+38h] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov ecx [esp+28h] +
mov edx [ecx+10h] +
mov [esp] edx +
call eax  +
mov eax [esp+0A0h] +
lea ecx [esp+3Ch] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov ecx [esp+18h] +
mov [esp] ecx +
call eax  +
mov eax [esp+0A0h] +
mov dword ptr [esp+4] 8 +
mov [esp+8] eax +
lea eax [esp+38h] +
mov [esp] eax +
call sub_405F60  +
cmp eax 8 +
jnz loc_40BC4C  +
add dword ptr [esp+2Ch] 1 +
mov eax [esp+2Ch] +
add dword ptr [esp+28h] 18h +
cmp eax [esp+0ACh] +
jnz loc_40BCF7  +
mov ebx [esp+0A0h] +
lea edi [esp+34h] +
mov eax [ebx+4] +
mov eax [eax+54h] +
mov [esp+4] edi +
mov edi [esp+20h] +
mov [esp] edi +
call eax  +
lea eax [esp+34h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_405F60  +
cmp eax 4 +
jnz loc_40BC4C  +
xor edx edx +
mov ebp [esp+0A8h] +
mov [esp+0A0h] ebx +
mov ebx edx +
jmp loc_40BE3F  +
add ebx 1 +
add ebp 18h +
cmp ebx [esp+0ACh] +
jz loc_40BEB1  +
mov eax [ebp+0] +
mov edi [eax] +
mov [esp] edi +
call strlen  +
mov [esp] edi +
lea esi [eax+1] +
mov eax [esp+0A0h] +
mov [esp+4] esi +
mov [esp+8] eax +
call sub_405F60  +
cmp eax esi +
jz loc_40BE30  +
jmp loc_40BC4C  +
***
mov eax [ebx] +
lea ecx [esp+40h] +
mov [esp+4] ecx +
mov [esp] eax +
call ds:_stati64  +
test eax eax +
mov eax [ebx+0A0h] +
jnz loc_40BB36  +
mov ecx [esp+64h] +
lea edx [ecx+3Ch] +
mov [eax+20h] edx +
jmp loc_40BB36  +
***
mov dword ptr [esp] 12h +
call sub_40C770  +
jmp loc_40BC4C  +
***
mov ebx [esp+0A0h] +
mov eax [esp+24h] +
test eax eax +
jnz loc_40BECA  +
mov eax 1 +
jmp loc_40BC4E  +
***
mov [esp+8] ebx +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset unk_479FAC +
call sub_405F60  +
sub eax 1 +
setz al  +
movzx eax al +
jmp loc_40BC4E  +
***
mov eax [ebx+4] +
lea edi [esp+34h] +
mov eax [eax+54h] +
mov [esp+4] edi +
mov edi [esp+20h] +
mov [esp] edi +
call eax  +
lea eax [esp+34h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_405F60  +
cmp eax 4 +
jnz loc_40BC4C  +
jmp loc_40BEB8  +
***
push esi  +
push ebx  +
sub esp 84h +
mov ebx [esp+90h] +
test byte ptr [ebx+2Ah] 4 +
jz loc_40BF53  +
mov eax 1 +
add esp 84h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp] ebx +
call sub_406050  +
lea eax [esp+10h] +
mov [esp+4] eax +
mov [esp] ebx +
call sub_406070  +
cmp eax 0FFFFFFFFh +
jz loc_40C030  +
mov eax [ebx+0A0h] +
mov edx [esp+34h] +
cmp edx [eax+20h] +
jle loc_40BF45  +
add edx 3Ch +
lea esi [esp+54h] +
mov [eax+20h] edx +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 0Ch +
mov [esp] esi +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
call sub_408FD0  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+28h] 18h +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 18h +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_4060C0  +
test eax eax +
jnz loc_40C012  +
mov [esp+8] ebx +
mov dword ptr [esp+4] 0Ch +
mov [esp] esi +
call sub_405F60  +
cmp eax 0Ch +
jz loc_40C041  +
mov dword ptr [esp] offset aWritingUpdated +
call sub_40C5C0  +
add esp 84h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] offset aReadingArchive +
call sub_40C5C0  +
jmp loc_40BF45  +
***
xor al al +
jmp loc_40BF4A  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov ebp [esp+9Ch] +
mov dword ptr [esp+4] 0Ah +
mov esi [esp+90h] +
mov dword ptr [esp+34h] 20202020h +
mov dword ptr [esp+38h] 20202020h +
lea ebx ds:4[ebp*4] +
add ebx [esp+0A0h] +
mov dword ptr [esp+3Ch] 20202020h +
mov dword ptr [esp+40h] 20202020h +
mov eax ebx +
and eax 1 +
cmp eax 1 +
sbb ebx 0FFFFFFFFh +
mov [esp+20h] eax +
lea eax [esp+64h] +
mov [esp+8] ebx +
mov [esp] eax +
mov dword ptr [esp+44h] 20202020h +
mov dword ptr [esp+48h] 20202020h +
mov dword ptr [esp+4Ch] 20202020h +
mov dword ptr [esp+50h] 20202020h +
mov dword ptr [esp+54h] 20202020h +
mov dword ptr [esp+58h] 20202020h +
mov dword ptr [esp+5Ch] 20202020h +
mov dword ptr [esp+60h] 20202020h +
mov dword ptr [esp+64h] 20202020h +
mov dword ptr [esp+68h] 20202020h +
mov dword ptr [esp+6Ch] 20202020h +
mov byte ptr [esp+34h] 2Fh +
call sub_409070  +
test eax eax +
jz loc_40C1E2  +
xor eax eax +
test byte ptr [esi+2Ah] 4 +
jz loc_40C1F0  +
mov [esp+0Ch] eax +
lea eax [esp+44h] +
mov [esp] eax +
lea edi [esp+34h] +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 0Ch +
call sub_408FD0  +
lea eax [esp+50h] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
call sub_408FD0  +
lea eax [esp+56h] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset aLd_1 +
mov dword ptr [esp+4] 6 +
call sub_408FD0  +
lea eax [esp+5Ch] +
mov [esp] eax +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] offset a7lo +
mov dword ptr [esp+4] 8 +
call sub_408FD0  +
mov edx 0A60h +
mov [esp+8] esi +
mov dword ptr [esp+4] 3Ch +
mov [esp] edi +
mov [esp+6Eh] dx +
call sub_405F60  +
cmp eax 3Ch +
jz loc_40C201  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 0 +
call time  +
jmp loc_40C12B  +
***
mov [esp+4] ebp +
mov [esp] esi +
call sub_40F1E0  +
test eax eax +
jz loc_40C1E2  +
mov eax [esi+94h] +
test ebp ebp +
mov edx eax +
mov [esp+24h] eax +
jz loc_40C38A  +
mov eax [esp+94h] +
mov dword ptr [esp+1Ch] 0 +
lea eax [ebx+eax+44h] +
xor ebx ebx +
test edx edx +
mov [esp+18h] eax +
jz loc_40C2DA  +
cmp ebp ebx +
jbe loc_40C2B0  +
mov edx [esp+98h] +
lea eax [ebx+ebx*2] +
lea edx [edx+eax*8] +
mov eax [edx+8] +
cmp eax [esp+24h] +
mov [esp+10h] eax +
jnz loc_40C2B0  +
mov ecx [esp+1Ch] +
mov eax [esp+18h] +
test ecx ecx +
mov [esp+14h] eax +
jnz loc_40C372  +
mov edi edx +
add ebx 1 +
jmp loc_40C299  +
cmp ebx ebp +
jz loc_40C2B0  +
mov eax [edi+20h] +
add edi 18h +
cmp eax [esp+10h] +
lea ecx [ebx+1] +
jnz loc_40C2B0  +
mov eax [esp+14h] +
mov ebx ecx +
mov [esp+4] eax +
mov [esp] esi +
call sub_40F1E0  +
test eax eax +
jnz loc_40C280  +
jmp loc_40C1E2  +
***
add dword ptr [esp+18h] 3Ch +
adc dword ptr [esp+1Ch] 0 +
test byte ptr [esi+2Bh] 40h +
jz loc_40C335  +
mov eax [esp+24h] +
cmp ebp ebx +
mov eax [eax+90h] +
mov [esp+24h] eax +
jbe loc_40C2DA  +
test eax eax +
jnz loc_40C246  +
mov ecx [esp+98h] +
xor edx edx +
mov [esp+90h] esi +
mov [esp+9Ch] ebp +
mov ebp edx +
mov esi ecx +
jmp loc_40C306  +
add ebp 1 +
add esi 18h +
cmp [esp+9Ch] ebp +
jbe loc_40C383  +
mov eax [esi] +
mov edi [eax] +
mov [esp] edi +
call strlen  +
mov [esp] edi +
lea ebx [eax+1] +
mov eax [esp+90h] +
mov [esp+4] ebx +
mov [esp+8] eax +
call sub_405F60  +
cmp eax ebx +
jz loc_40C2F7  +
jmp loc_40C1E2  +
***
mov eax [esp+24h] +
xor edx edx +
mov dword ptr [esp+2Ch] 0 +
mov eax [eax+88h] +
mov eax [eax+4] +
add eax [esp+18h] +
adc edx [esp+1Ch] +
mov ecx eax +
and ecx 1 +
mov [esp+28h] ecx +
add eax [esp+28h] +
adc edx [esp+2Ch] +
mov [esp+18h] eax +
mov [esp+1Ch] edx +
jmp loc_40C2C0  +
***
mov dword ptr [esp] 12h +
call sub_40C770  +
jmp loc_40C1E2  +
***
mov esi [esp+90h] +
mov eax [esp+20h] +
test eax eax +
jnz loc_40C39C  +
mov eax 1 +
jmp loc_40C1E4  +
***
mov [esp+8] esi +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset unk_479FAC +
call sub_405F60  +
sub eax 1 +
setz al  +
movzx eax al +
jmp loc_40C1E4  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+30h] +
movzx eax byte ptr [ebx+28h] +
test al 8 +
jz loc_40C3ED  +
and eax 7 +
cmp al 2 +
jz loc_40C471  +
mov eax [ebx+88h] +
test eax eax +
jz loc_40C451  +
mov esi [eax+18h] +
test esi esi +
jz loc_40C451  +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov dword ptr [esp+8] 0 +
mov [esp] esi +
mov [esp+14h] edx +
mov [esp+10h] eax +
lea eax [esp+10h] +
mov [esp+4] eax +
call sub_45D280  +
test eax eax +
mov edi eax +
jz loc_40C451  +
mov eax [eax] +
cmp [eax+8] ebx +
jz loc_40C445  +
mov dword ptr [esp+4] 0AEDh +
mov dword ptr [esp] offset a____Binutils_6 +
call sub_40C6C0  +
mov [esp+4] edi +
mov [esp] esi +
call sub_45D340  +
test byte ptr [ebx+2Ch] 1 +
jz loc_40C465  +
mov eax [ebx+9Ch] +
mov eax [eax+24h] +
mov [esp] ebx +
call eax  +
add esp 20h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx+98h] +
test eax eax +
jnz loc_40C482  +
jmp loc_40C494  +
mov eax esi +
mov esi [eax+90h] +
mov [esp] eax +
call sub_407790  +
test esi esi +
jnz loc_40C480  +
mov eax [ebx+0A0h] +
mov esi [eax+8] +
test esi esi +
jz loc_40C3ED  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset sub_408FB0 +
mov [esp] esi +
call sub_45D390  +
mov [esp] esi +
call sub_45CDD0  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+8] 0 +
jmp loc_40C3ED  +
***
mov eax off_476094 +
jmp eax  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
retn   +
***
mov eax [esp+28h+arg_0] +
cmp eax 14h +
jz loc_40C560  +
cmp eax 1 +
jz loc_40C5A1  +
cmp eax 15h +
mov edx 15h +
cmovbe edx eax +
mov eax ds:off_47A3E0[edx*4] +
add esp 28h +
pop ebx  +
retn   +
mov eax ds:dword_49F158 +
mov [esp+28h+var_28] eax +
call sub_40C530  +
mov ebx eax +
mov eax ds:dword_49F15C +
mov eax [eax] +
mov [esp+28h+var_1C] ebx +
mov [esp+28h+var_24] offset aErrorReadingSS +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call sub_473D50  +
cmp eax 0FFFFFFFFh +
mov eax ebx +
cmovnz eax [esp+28h+var_C] +
add esp 28h +
pop ebx  +
retn   +
call ds:__imp__errno  +
mov eax [eax] +
mov [esp+28h+var_28] eax +
call sub_45D720  +
jmp loc_40C554  +
***
mov eax ds:_iob +
mov ebx [esp+18h+arg_0] +
add eax 20h +
mov [esp+18h+var_18] eax +
call fflush  +
test ebx ebx +
mov eax ds:dword_49F160 +
jz loc_40C5E6  +
cmp byte ptr [ebx] 0 +
jnz loc_40C620  +
mov [esp+18h+var_18] eax +
call sub_40C530  +
mov [esp+18h+var_14] offset aS_13 +
mov [esp+18h+var_10] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+arg_0] eax +
add esp 18h +
pop ebx  +
jmp fflush  +
mov [esp+18h+var_18] eax +
call sub_40C530  +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aSS_6 +
mov [esp+18h+var_C] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call fprintf  +
jmp loc_40C60A  +
***
mov eax [esp+arg_0] +
mov ds:dword_49F154 eax +
retn   +
***
mov eax off_476094 +
retn   +
***
mov edx [esp+4] +
mov eax off_476090 +
mov off_476090 edx +
retn   +
***
mov eax off_476090 +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [eax+48h] edx +
mov edx [esp+10h] +
mov [eax+4Ch] edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] offset aGnuBinutils2_2 +
mov [esp+1Ch+var_1C] offset aBfdSAssertionF +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] eax +
call off_476090  +
add esp 1Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_8] +
test eax eax +
jz loc_40C73D  +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] offset aGnuBinutils2_2 +
mov [esp+2Ch+var_2C] offset aBfdSInternalEr +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] eax +
call off_476094  +
mov [esp+2Ch+var_2C] offset aPleaseReportTh +
call off_476094  +
mov [esp+2Ch+var_2C] 1 +
call _exit  +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] offset aGnuBinutils2_2 +
mov [esp+2Ch+var_2C] offset aBfdSInternal_0 +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_24] eax +
call off_476094  +
jmp loc_40C724  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
cmp eax 14h +
mov ds:dword_49F160 eax +
jz loc_40C785  +
add esp 1Ch +
retn   +
mov eax [esp+1Ch+arg_4] +
mov ds:dword_49F15C eax +
mov eax [esp+1Ch+arg_8] +
cmp eax 13h +
mov ds:dword_49F158 eax +
jbe loc_40C781  +
mov [esp+1Ch+var_14] offset aBfd_set_error +
mov [esp+1Ch+var_18] 203h +
mov [esp+1Ch+var_1C] offset a____Binutils_0 +
call sub_40C6F0  +
nop   +
lea esi [esi+0] +
sub esp 1Ch +
mov edx [esp+38h+var_18] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 1 +
jnz loc_40C7E0  +
mov eax [edx+4] +
mov eax [eax+140h] +
add esp 1Ch +
jmp eax  +
mov [esp+38h+var_38] 5 +
call sub_40C770  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov edx [esp+14h+arg_0] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 1 +
jnz loc_40C824  +
mov eax [edx+4] +
mov eax [eax+144h] +
add esp 14h +
pop ebx  +
pop esi  +
jmp eax  +
mov [esp+14h+var_14] 5 +
call sub_40C770  +
add esp 14h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov ecx [esp+24h] +
movzx edx byte ptr [eax+28h] +
mov ebx edx +
and ebx 7 +
cmp bl 1 +
jnz loc_40C897  +
and edx 8 +
jnz loc_40C884  +
mov edx [eax+28h] +
mov ebx ecx +
and ebx 3FFFFh +
shl ebx 5 +
and edx 0FF80001Fh +
or edx ebx +
mov [eax+28h] edx +
mov eax [eax+4] +
mov edx [eax+10h] +
and edx ecx +
cmp edx ecx +
jz loc_40C8B0  +
mov dword ptr [esp] 5 +
call sub_40C770  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_40C770  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 41Ch +
mov eax ds:_iob +
mov edi [esp+41Ch+arg_0] +
add eax 20h +
mov [esp+41Ch+var_41C] eax +
call fflush  +
mov eax ds:dword_49F154 +
test eax eax +
jz loc_40CBAC  +
mov [esp+41Ch+var_414] eax +
mov eax ds:_iob +
mov [esp+41Ch+var_418] offset aS +
add eax 40h +
mov [esp+41Ch+var_41C] eax +
call fprintf  +
lea eax [esp+41Ch+arg_4] +
mov ebp 3E7h +
mov [esp+41Ch+var_41C] edi +
mov [esp+41Ch+var_400] eax +
call strlen  +
sub ebp eax +
cmp ebp 3E8h +
ja loc_40CC19  +
lea eax [esp+41Ch+var_3F4] +
mov ecx edi +
mov esi edi +
mov [esp+41Ch+var_408] eax +
lea esi [esi+0] +
mov [esp+41Ch+var_418] 25h +
mov [esp+41Ch+var_41C] ecx +
call strchr  +
test eax eax +
mov ebx eax +
jz loc_40CA8A  +
movzx eax byte ptr [eax+1] +
test al al +
jz loc_40CA8A  +
sub eax 41h +
cmp al 1 +
lea ecx [ebx+2] +
ja loc_40C940  +
mov esi ebx +
sub esi edi +
mov [esp+41Ch+var_418] edi +
mov edi [esp+41Ch+var_408] +
mov [esp+41Ch+var_414] esi +
mov [esp+41Ch+var_404] ecx +
mov [esp+41Ch+var_41C] edi +
call memcpy  +
mov ecx [esp+41Ch+var_404] +
test ebp ebp +
lea edx [edi+esi] +
mov edi ecx +
jnz loc_40C9B1  +
lea eax [edx+2] +
mov byte ptr [edx] 2Ah +
lea esi [esp+41Ch+var_3F4] +
mov [esp+41Ch+var_408] eax +
mov byte ptr [edx+1] 2Ah +
mov byte ptr [edx+2] 0 +
jmp loc_40C940  +
mov eax [esp+41Ch+var_400] +
cmp byte ptr [ebx+1] 42h +
lea ebx [eax+4] +
mov eax [eax] +
jz loc_40CB0E  +
test eax eax +
jz loc_40CC25  +
mov ecx [eax+94h] +
test ecx ecx +
jz loc_40C9EE  +
mov ecx [ecx+4] +
mov ecx [ecx+4] +
cmp ecx 5 +
jz loc_40CB55  +
cmp ecx 2 +
jz loc_40CB75  +
mov eax [eax] +
mov [esp+41Ch+var_41C] edx +
mov [esp+41Ch+var_414] offset aS_6 +
mov [esp+41Ch+var_418] ebp +
mov [esp+41Ch+var_410] eax +
mov [esp+41Ch+var_408] edx +
call sub_40C4F0  +
mov edx [esp+41Ch+var_408] +
mov [esp+41Ch+var_400] ebx +
mov [esp+41Ch+var_41C] edx +
add ebp 2 +
xor esi esi +
mov [esp+41Ch+var_408] edx +
call strlen  +
mov edx [esp+41Ch+var_408] +
sub ebp eax +
lea ebx [edx+eax] +
mov eax edx +
jmp loc_40CA38  +
add eax 1 +
add esi 1 +
mov [esp+41Ch+var_418] 25h +
mov [esp+41Ch+var_41C] eax +
call strchr  +
test eax eax +
jnz loc_40CA32  +
lea eax [ebx+esi] +
cmp ebp esi +
mov [esp+41Ch+var_408] eax +
jb loc_40CAE5  +
sub ebp esi +
test esi esi +
jnz loc_40CA66  +
jmp loc_40CA7F  +
sub ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 25h +
mov [ebx+esi] al +
jnz loc_40CA63  +
sub esi 1 +
sub ebx 1 +
mov byte ptr [ebx+esi+1] 25h +
test esi esi +
jnz loc_40CA66  +
mov ecx edi +
lea esi [esp+41Ch+var_3F4] +
jmp loc_40C940  +
lea eax [esp+41Ch+var_3F4] +
cmp esi eax +
jz loc_40CBD9  +
mov eax [esp+41Ch+var_400] +
mov [esp+41Ch+var_418] esi +
mov [esp+41Ch+var_414] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+41Ch+var_41C] eax +
call vfprintf  +
mov eax ds:_iob +
mov [esp+41Ch+var_41C] 0Ah +
add eax 40h +
mov [esp+41Ch+var_418] eax +
call fputc  +
mov eax ds:_iob +
add eax 40h +
mov [esp+41Ch+var_41C] eax +
call fflush  +
add esp 41Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
sub eax ebp +
mov edx eax +
neg edx  +
add [esp+41Ch+var_408] edx +
add ebx edx +
xor edx edx +
cmp byte ptr [ebx+eax-1] 25h +
setz dl  +
sub esi edx +
sub eax 1 +
jnz loc_40CAF3  +
mov byte ptr [ebx] 0 +
xor ebp ebp +
jmp loc_40CA5D  +
test eax eax +
jz loc_40CBFD  +
mov ecx [eax+8Ch] +
test ecx ecx +
jz loc_40C9EE  +
mov esi [eax] +
mov eax [ecx] +
mov [esp+41Ch+var_414] offset aSS +
mov [esp+41Ch+var_40C] esi +
mov [esp+41Ch+var_410] eax +
mov [esp+41Ch+var_41C] edx +
mov [esp+41Ch+var_418] ebp +
mov [esp+41Ch+var_408] edx +
call sub_40C4F0  +
mov edx [esp+41Ch+var_408] +
mov [esp+41Ch+var_400] ebx +
jmp loc_40CA14  +
mov ecx [eax+8Ch] +
mov esi [ecx+7Ch] +
test esi esi +
jz loc_40C9EE  +
test byte ptr [eax+17h] 2 +
jnz loc_40C9EE  +
mov ecx [ecx+74h] +
jmp loc_40CB90  +
mov ecx [eax+8Ch] +
test ecx ecx +
jz loc_40C9EE  +
mov ecx [ecx+1Ch] +
test ecx ecx +
jz loc_40C9EE  +
mov ecx [ecx] +
test ecx ecx +
jz loc_40C9EE  +
mov eax [eax] +
mov [esp+41Ch+var_40C] ecx +
mov [esp+41Ch+var_414] offset aSS_0 +
mov [esp+41Ch+var_410] eax +
jmp loc_40CB38  +
mov eax ds:_iob +
mov [esp+41Ch+var_414] 5 +
mov [esp+41Ch+var_418] 1 +
mov [esp+41Ch+var_41C] offset aBfd +
add eax 40h +
mov [esp+41Ch+var_410] eax +
call fwrite  +
jmp loc_40C90A  +
mov [esp+41Ch+var_41C] edi +
call strlen  +
mov [esp+41Ch+var_418] edi +
add eax 1 +
mov [esp+41Ch+var_414] eax +
mov eax [esp+41Ch+var_408] +
mov [esp+41Ch+var_41C] eax +
call memcpy  +
jmp loc_40CA96  +
mov [esp+41Ch+var_414] offset a_bfd_default_e +
mov [esp+41Ch+var_418] 2BAh +
mov [esp+41Ch+var_41C] offset a____Binutils_0 +
call sub_40C6F0  +
mov [esp+41Ch+var_41C] 1 +
call _exit  +
mov [esp+41Ch+var_414] offset a_bfd_default_e +
mov [esp+41Ch+var_418] 2CAh +
mov [esp+41Ch+var_41C] offset a____Binutils_0 +
call sub_40C6F0  +
jmp loc_40CC50  +
sub esp 1Ch +
mov eax [esp+438h+var_418] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jz loc_40CC77  +
mov [esp+438h+var_438] eax +
call sub_40ECE0  +
cmp eax 21h +
sbb eax eax +
add esp 1Ch +
and eax 0FFFFFFE0h +
add eax 40h +
retn   +
mov eax [edx+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ah] +
add esp 1Ch +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jz loc_40CD77  +
mov edx [eax] +
mov ecx 9 +
mov edi offset aCoffGo32 +
mov eax 1 +
mov esi edx +
cmps   +
setnbe bl  +
setb cl  +
cmp bl cl +
jz loc_40CD70  +
mov edi offset aPeI386 +
mov ecx 8 +
mov esi edx +
cmps   +
jz loc_40CD70  +
mov edi offset aPeiI386 +
mov ecx 9 +
mov esi edx +
cmps   +
jz loc_40CD70  +
mov edi offset aPeX8664 +
mov ecx 0Ah +
mov esi edx +
cmps   +
jz loc_40CD70  +
mov edi offset aPeiX8664 +
mov ecx 0Bh +
mov esi edx +
cmps   +
jz loc_40CD70  +
mov edi offset aPeArmWinceLitt +
mov ecx 14h +
mov esi edx +
cmps   +
jz loc_40CD70  +
mov edi offset aPeiArmWinceLit +
mov ecx 15h +
mov esi edx +
cmps   +
jz loc_40CD70  +
mov edi offset aAixcoffRs6000 +
mov ecx 0Fh +
mov esi edx +
cmps   +
jz loc_40CD70  +
mov esi edx +
mov edi offset aMachO +
mov ecx 6 +
cmps   +
setnbe al  +
setb dl  +
sub eax edx +
movsx eax al +
test eax eax +
jz loc_40CD70  +
mov dword ptr [esp] 3 +
call sub_40C770  +
or eax 0FFFFFFFFh +
nop   +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
shr al 7 +
movzx eax al +
retn   +
***
jmp sub_40CDA0  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov [eax+74h] edx +
mov eax 1 +
retn   +
***
jmp loc_40CDC0  +
mov ecx [esp+4] +
xor eax eax +
movzx edx byte ptr [ecx+28h] +
and edx 7 +
cmp dl 1 +
jz loc_40CDD4  +
retn   +
***
mov edx [ecx+4] +
mov edx [edx+4] +
cmp edx 3 +
jz loc_40CDF1  +
cmp edx 5 +
jnz locret_40CDD2  +
mov eax [ecx+0A0h] +
mov eax [eax+210h] +
retn   +
***
mov eax [ecx+0A0h] +
mov eax [eax+1Ch] +
retn   +
***
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 1 +
jz loc_40CEB0  +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+4] +
cmp eax 3 +
jz loc_40CED4  +
cmp eax 5 +
jnz loc_40CEA6  +
mov eax [edx+0A0h] +
mov ecx [esp+24h] +
mov [eax+20Ch] ecx +
add esp 1Ch +
retn   +
***
mov eax [edx+0A0h] +
mov ecx [esp+24h] +
mov [eax+18h] ecx +
jmp loc_40CEA6  +
***
push esi  +
push ebx  +
mov ecx [esp+arg_8] +
mov edx [esp+arg_0] +
mov ebx [esp+arg_4] +
mov esi [esp+arg_C] +
cmp dword ptr [ecx+4] 1 +
mov edi [esp+arg_10] +
mov eax edx +
mov ebp [esp+arg_14] +
jnz loc_40CF42  +
mov eax [ecx+10h] +
mov eax [eax+94h] +
test eax eax +
cmovz eax edx +
mov eax [eax+4] +
mov eax [eax+15Ch] +
mov [esp+arg_14] ebp +
mov [esp+arg_10] edi +
mov [esp+arg_C] esi +
mov [esp+arg_8] ecx +
mov [esp+arg_4] ebx +
mov [esp+arg_0] edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push edi  +
mov eax 1 +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+20h] +
mov edx [ebx+4] +
cmp dword ptr [edx+4] 5 +
jz loc_40CF90  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+40h] +
mov [esp] ebx +
lea edi ds:0FFFFFFFCh[eax*4] +
lea eax [edi+2Ch] +
mov [esp+4] eax +
call sub_407C00  +
test eax eax +
mov esi eax +
jz loc_40D060  +
mov eax [esp+24h] +
movzx edx byte ptr [esi+20h] +
movzx ecx byte ptr [esp+28h] +
mov [esi+4] eax +
mov eax [esp+2Ch] +
and edx 0FFFFFFFCh +
and ecx 1 +
or edx ecx +
movzx ecx byte ptr [esp+38h] +
mov [esi+8] eax +
mov eax [esp+34h] +
and ecx 1 +
mov [esi+0Ch] eax +
movzx eax byte ptr [esp+30h] +
shl ecx 4 +
and eax 1 +
add eax eax +
or edx eax +
movzx eax byte ptr [esp+3Ch] +
and edx 0FFFFFFCFh +
or edx ecx +
and eax 1 +
shl eax 5 +
or edx eax +
mov eax [esp+40h] +
mov [esi+20h] dl +
test eax eax +
mov [esi+24h] eax +
jnz loc_40D040  +
mov eax [ebx+0A0h] +
mov eax [eax+934h] +
mov ecx [eax] +
test ecx ecx +
jnz loc_40D027  +
jmp loc_40D067  +
mov ecx edx +
mov edx [ecx] +
test edx edx +
jnz loc_40D025  +
mov [ecx] esi +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+44h] +
lea eax [esi+28h] +
add edi 4 +
mov [esp+8] edi +
mov [esp] eax +
mov [esp+4] edx +
call memcpy  +
jmp loc_40D011  +
***
xor eax eax +
jmp loc_40CF88  +
***
mov ecx eax +
lea esi [esi+0] +
jmp loc_40D02D  +
***
mov eax [esp+arg_4] +
mov [esp+arg_4] offset a08lx +
mov [esp+arg_0] eax +
jmp sprintf  +
***
mov eax [esp+arg_4] +
mov [esp+arg_4] offset a08lx +
mov [esp+arg_0] eax +
jmp fprintf  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_40E330  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_40D15E  +
cmp dword ptr [edx+4] 5 +
jnz loc_40D15E  +
mov eax [edx+1B0h] +
mov eax [eax+10h] +
add esp 1Ch +
retn   +
***
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_14] 0 +
mov ebx [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_40E330  +
test eax eax +
mov edx eax +
jnz loc_40D1A2  +
jmp loc_40D1C0  +
mov edx [edx+1ACh] +
test edx edx +
jz loc_40D1C0  +
cmp edx eax +
jz loc_40D1C0  +
cmp dword ptr [edx+4] 5 +
jnz loc_40D194  +
mov ecx [edx+1B0h] +
mov edx [edx+1ACh] +
mov [ecx+10h] ebx +
test edx edx +
jnz loc_40D19E  +
nop   +
lea esi [esi+0] +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_40E330  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_40D1FE  +
cmp dword ptr [edx+4] 5 +
jnz loc_40D1FE  +
mov eax [edx+1B0h] +
mov eax [eax+18h] +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov dword ptr [esp+4] 0 +
mov ebx [esp+24h] +
mov [esp] eax +
call sub_40E330  +
test eax eax +
mov edx eax +
jnz loc_40D242  +
jmp loc_40D260  +
mov edx [edx+1ACh] +
test edx edx +
jz loc_40D260  +
cmp edx eax +
jz loc_40D260  +
cmp dword ptr [edx+4] 5 +
jnz loc_40D234  +
mov ecx [edx+1B0h] +
mov edx [edx+1ACh] +
mov [ecx+18h] ebx +
test edx edx +
jnz loc_40D23E  +
nop   +
lea esi [esi+0] +
add esp 18h +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
test eax eax +
jz loc_40D463  +
mov ecx [esp+44h] +
movzx edx byte ptr [ecx] +
test dl dl +
jz loc_40D3E3  +
mov eax [eax+4] +
cmp dl [eax+18h] +
jz loc_40D477  +
mov dword ptr [esp+18h] 0 +
cmp dl 2Eh +
jnz loc_40D49A  +
mov ebp [esp+44h] +
add ebp 1 +
movzx eax byte ptr [ebp+0] +
cmp al 24h +
jz loc_40D2B3  +
cmp al 2Eh +
jz loc_40D2B3  +
mov eax ebp +
mov edi ebp +
sub eax [esp+44h] +
mov [esp+14h] eax +
mov dword ptr [esp+4] 40h +
mov [esp] ebp +
call strchr  +
test eax eax +
mov ebx eax +
jz loc_40D400  +
sub eax edi +
mov edi eax +
lea eax [eax+1] +
mov [esp] eax +
call sub_40EFC0  +
test eax eax +
mov esi eax +
jz loc_40D493  +
mov [esp+8] edi +
mov [esp+4] ebp +
mov [esp] eax +
call memcpy  +
mov eax [esp+48h] +
mov byte ptr [esi+edi] 0 +
mov [esp] esi +
mov [esp+4] eax +
call sub_45E890  +
mov [esp] esi +
mov edi eax +
call free  +
test edi edi +
jz loc_40D420  +
test ebx ebx +
jnz loc_40D349  +
mov edx [esp+14h] +
mov eax edi +
test edx edx +
jz loc_40D3DB  +
mov [esp] edi +
call strlen  +
mov esi eax +
add eax edi +
test ebx ebx +
cmovz ebx eax +
mov [esp] ebx +
call strlen  +
mov ecx [esp+14h] +
mov [esp+1Ch] esi +
add ecx esi +
mov esi ecx +
add eax 1 +
mov [esp+18h] eax +
add eax ecx +
mov [esp] eax +
call sub_40EFC0  +
test eax eax +
mov ebp eax +
jz loc_40D3D1  +
mov edx [esp+14h] +
mov [esp] eax +
mov [esp+8] edx +
mov edx [esp+44h] +
mov [esp+4] edx +
call memcpy  +
mov edx [esp+14h] +
mov [esp+4] edi +
lea eax [ebp+edx+0] +
mov edx [esp+1Ch] +
mov [esp] eax +
mov [esp+8] edx +
call memcpy  +
mov ecx [esp+18h] +
mov eax esi +
add eax ebp +
mov [esp+4] ebx +
mov [esp] eax +
mov [esp+8] ecx +
call memcpy  +
mov [esp] edi +
call free  +
mov eax ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+18h] 0 +
mov edi [esp+44h] +
mov dword ptr [esp+14h] 0 +
mov ebp edi +
jmp loc_40D2CE  +
***
mov eax [esp+48h] +
mov [esp] ebp +
mov [esp+4] eax +
call sub_45E890  +
mov edi eax +
test edi edi +
jnz loc_40D337  +
lea esi [esi+0] +
mov ecx [esp+18h] +
test ecx ecx +
jz loc_40D493  +
mov eax [esp+44h] +
mov [esp] eax +
call strlen  +
lea ebx [eax+1] +
mov [esp] ebx +
call sub_40EFC0  +
test eax eax +
mov ebp eax +
jz loc_40D493  +
mov eax [esp+44h] +
mov [esp+8] ebx +
mov [esp] ebp +
mov [esp+4] eax +
call memcpy  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+44h] +
mov dword ptr [esp+18h] 0 +
movzx edx byte ptr [eax] +
jmp loc_40D2A6  +
***
mov eax [esp+44h] +
mov dword ptr [esp+18h] 1 +
movzx edx byte ptr [eax+1] +
add eax 1 +
mov [esp+44h] eax +
jmp loc_40D2A6  +
***
xor eax eax +
jmp loc_40D3DB  +
***
cmp dl 24h +
jz loc_40D2AF  +
jmp loc_40D3EB  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov edi [esp+10h+arg_8] +
mov eax [ebx+28h] +
shr eax 5 +
and eax 3FFFFh +
test ah 40h +
jz loc_40D5F5  +
mov edx [ebx+4] +
cmp dword ptr [edx+4] 5 +
jz loc_40D4E6  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax 20000h +
jz loc_40D5C0  +
mov ecx [edx+1B0h] +
mov eax [edi+8Ch] +
or dword ptr [eax+8] 800h +
mov eax [ecx+174h] +
cmp byte ptr [eax+0Ch] 1 +
mov eax [edx+30h] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] 1 +
jz loc_40D580  +
call eax  +
mov eax [ebx+4] +
lea edx [esi+4] +
mov eax [eax+30h] +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] 0 +
call eax  +
mov eax [ebx+4] +
lea edx [esi+8] +
add esi 10h +
mov eax [eax+24h] +
mov [esp+10h+var_8] edx +
mov ecx [edi+24h] +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] ecx +
call eax  +
mov eax [ebx+4] +
mov edx [eax+24h] +
mov eax 1 +
mov [esp+10h+arg_8] esi +
mov ecx [edi+40h] +
shl eax cl +
mov [esp+10h+arg_0] eax +
sar eax 1Fh +
mov [esp+10h+arg_4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp edx  +
call eax  +
mov eax [ebx+4] +
lea ecx [esi+4] +
mov edx [edi+24h] +
add esi 8 +
mov eax [eax+30h] +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [ebx+4] +
mov edx [eax+30h] +
mov eax 1 +
mov [esp+10h+arg_4] esi +
mov ecx [edi+40h] +
shl eax cl +
mov [esp+10h+arg_0] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp edx  +
mov eax [edi+8Ch] +
add esi 4 +
and dword ptr [eax+8] 0FFFFF7FFh +
mov dword ptr [esi-4] 42494C5Ah +
mov [esp+10h+arg_8] esi +
mov eax [edi+24h] +
mov [esp+10h+arg_4] 0 +
mov [esp+10h+arg_0] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp loc_40F630  +
mov [esp+10h+var_8] offset aBfd_update_com +
mov [esp+10h+var_C] 7E8h +
mov [esp+10h+var_10] offset a____Binutils_0 +
call sub_40C6F0  +
jmp sub_40D620  +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_40D640  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [esp+10h+arg_8] +
mov edx [ecx+8Ch] +
test byte ptr [edx+9] 8 +
jz loc_40D633  +
mov edx [eax+1B0h] +
mov eax [eax+28h] +
mov edx [edx+174h] +
cmp byte ptr [edx+0Ch] 1 +
jz loc_40D6B5  +
mov edi [esp+10h+arg_4] +
mov [esp+10h+var_10] edi +
call eax  +
mov edi [esp+10h+arg_4] +
lea edx [edi+8] +
mov esi eax +
mov eax [ebx+4] +
mov eax [eax+1Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov edi eax +
mov eax [ebx+4] +
mov edx [eax+1Ch] +
mov eax [esp+10h+arg_4] +
add eax 10h +
mov [esp+10h+var_10] eax +
call edx  +
cmp esi 1 +
jnz loc_40D633  +
mov ecx [esp+10h+arg_8] +
mov ecx [ecx+40h] +
shl esi cl +
cmp eax esi +
jnz loc_40D633  +
mov eax [esp+10h+arg_C] +
mov [eax] edi +
mov eax 1 +
jmp loc_40D635  +
mov esi [esp+10h+arg_4] +
mov [esp+10h+var_10] esi +
call eax  +
mov ecx [esp+10h+arg_4] +
lea edx [ecx+4] +
mov esi eax +
mov eax [ebx+4] +
mov eax [eax+28h] +
mov [esp+10h+var_10] edx +
call eax  +
mov ecx [esp+10h+arg_4] +
lea edx [ecx+8] +
mov edi eax +
mov eax [ebx+4] +
mov eax [eax+28h] +
mov [esp+10h+var_10] edx +
call eax  +
jmp loc_40D696  +
***
mov ecx [esp+arg_0] +
xor eax eax +
mov edx [ecx+4] +
cmp dword ptr [edx+4] 5 +
jz loc_40D701  +
retn   +
cmp [esp+arg_4] 0 +
jz loc_40D736  +
mov ecx [esp+arg_4] +
mov ecx [ecx+8Ch] +
test byte ptr [ecx+9] 8 +
jz locret_40D6FF  +
mov eax [edx+1B0h] +
mov edx [eax+174h] +
mov eax 0Ch +
cmp byte ptr [edx+0Ch] 1 +
mov edx 18h +
cmovnz eax edx +
retn   +
test byte ptr [ecx+2Ah] 40h +
jnz loc_40D718  +
retn   +
***
push esi  +
push ebx  +
sub esp 8 +
mov edx [esp+14h] +
mov ebx [esp+20h] +
test byte ptr [edx+2Ah] 10h +
jnz loc_40D75C  +
mov eax [edx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_40D764  +
add esp 8 +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [esp+1Ch] +
mov ecx [ecx+4] +
cmp dword ptr [ecx+4] 5 +
jnz loc_40D75C  +
mov eax [eax+1B0h] +
mov esi [eax+174h] +
mov eax [ecx+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [esi+0Ch] al +
jz loc_40D75C  +
mov eax [esp+18h] +
mov [esp] edx +
mov [esp+4] eax +
call sub_40D6F0  +
test eax eax +
jz loc_40D75C  +
lea edx [ebx+0Ch] +
sub ebx 0Ch +
cmp eax 0Ch +
cmovz ebx edx +
jmp loc_40D75C  +
***
push ebp  +
push edi  +
push esi  +
mov esi 1 +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
test byte ptr [ebx+2Ah] 10h +
jnz loc_40D7DF  +
mov ebp [ebx+4] +
cmp dword ptr [ebp+4] 5 +
jz loc_40D7F0  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+48h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_40D7DF  +
mov eax [eax+1B0h] +
mov edx [ebp+1B0h] +
mov eax [eax+174h] +
mov edx [edx+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [edx+0Ch] al +
jz loc_40D7DF  +
mov eax [esp+44h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_40D6F0  +
test eax eax +
mov edi eax +
jz loc_40D7DF  +
mov eax [esp+4Ch] +
cmp edi 0Ch +
mov esi [eax] +
mov eax [ebp+28h] +
mov [esp] esi +
jz loc_40D8F4  +
call eax  +
mov eax [ebx+4] +
lea ebp [esi+8] +
mov eax [eax+1Ch] +
mov [esp] ebp +
call eax  +
lea edx [esi+10h] +
mov [esp+1Ch] eax +
mov eax [ebx+4] +
mov eax [eax+1Ch] +
mov [esp] edx +
call eax  +
mov ecx [esp+44h] +
mov ebx [ecx+24h] +
mov [esp+18h] eax +
sub ebx edi +
lea ecx [ebx+0Ch] +
mov [esp+14h] ecx +
mov ecx [esp+48h] +
mov eax [ecx+4] +
mov eax [eax+30h] +
mov [esp+4] esi +
mov dword ptr [esp] 1 +
call eax  +
mov ecx [esp+48h] +
lea edx [esi+4] +
add esi 0Ch +
mov eax [ecx+4] +
mov ecx [esp+1Ch] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
mov ecx [esp+48h] +
mov eax [ecx+4] +
mov ecx [esp+18h] +
mov eax [eax+30h] +
mov [esp+4] ebp +
mov [esp] ecx +
call eax  +
mov eax [esp+4Ch] +
mov [esp+8] ebx +
add edi [eax] +
mov [esp] esi +
mov [esp+4] edi +
call memmove  +
mov eax [esp+50h] +
mov esi 1 +
mov ecx [esp+14h] +
mov [eax] ecx +
jmp loc_40D7DF  +
***
call eax  +
mov eax [ebx+4] +
lea edx [esi+4] +
add esi 8 +
mov eax [eax+28h] +
mov [esp] edx +
call eax  +
mov ebp eax +
mov eax [ebx+4] +
mov eax [eax+28h] +
mov [esp] esi +
call eax  +
mov edi eax +
mov eax [esp+44h] +
mov eax [eax+24h] +
lea esi [eax-0Ch] +
add eax 0Ch +
mov [esp] eax +
mov [esp+14h] eax +
call sub_40EFC0  +
test eax eax +
mov ebx eax +
jz loc_40D9DF  +
mov eax [esp+48h] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+4] ebx +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esp+48h] +
lea edx [ebx+4] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
mov eax [esp+48h] +
lea edx [ebx+8] +
mov eax [eax+4] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov [esp] ebp +
mov dword ptr [esp+4] 0 +
call eax  +
mov eax [esp+48h] +
lea edx [ebx+10h] +
mov eax [eax+4] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov [esp] edi +
mov dword ptr [esp+4] 0 +
call eax  +
mov edi [esp+4Ch] +
lea eax [ebx+18h] +
mov edi [edi] +
mov [esp+8] esi +
mov [esp] eax +
lea edx [edi+0Ch] +
mov [esp+4] edx +
mov [esp+18h] edi +
call memcpy  +
mov eax [esp+4Ch] +
mov eax [eax] +
mov [esp] eax +
call free  +
mov eax [esp+4Ch] +
mov [eax] ebx +
jmp loc_40D8E0  +
***
xor esi esi +
jmp loc_40D7DF  +
***
mov eax [esp+4] +
mov ds:dword_49F2F4 eax +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 227h +
mov dword ptr [esp] offset a____Binutils_7 +
call sub_40C6C0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp+8] 20Ch +
mov dword ptr [esp+4] offset a____Binutils_7 +
jmp sub_40C6C0  +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov eax [eax+0A0h] +
mov ebx [eax] +
test ebx ebx +
js loc_40DA60  +
add esp 18h +
lea eax ds:4[ebx*4] +
pop ebx  +
retn   +
***
mov dword ptr [esp+4] 1BDh +
mov dword ptr [esp] offset a____Binutils_7 +
call sub_40C6C0  +
add esp 18h +
lea eax ds:4[ebx*4] +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 1B3h +
mov dword ptr [esp] offset a____Binutils_7 +
call sub_40C6C0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 1ACh +
mov dword ptr [esp] offset a____Binutils_7 +
call sub_40C6C0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 1A5h +
mov dword ptr [esp] offset a____Binutils_7 +
call sub_40C6C0  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 19Eh +
mov dword ptr [esp] offset a____Binutils_7 +
call sub_40C6C0  +
mov eax 1 +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 197h +
mov dword ptr [esp] offset a____Binutils_7 +
call sub_40C6C0  +
mov eax 1 +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 18Ah +
mov dword ptr [esp] offset a____Binutils_7 +
call sub_40C6C0  +
mov eax 1 +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+4] 17Dh +
mov dword ptr [esp] offset a____Binutils_7 +
call sub_40C6C0  +
mov eax 1 +
add esp 1Ch +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_411970  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 18h +
mov [esp] ebx +
call sub_407C00  +
test eax eax +
jz loc_40DB9E  +
mov [eax] ebx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 8 +
mov esi [esp+24h] +
mov [esp] ebx +
call sub_407B20  +
mov edx [esp+28h] +
test esi esi +
mov [eax] esi +
mov [eax+4] edx +
jz loc_40DBE1  +
or dword ptr [ebx+28h] 200h +
mov [ebx+0A0h] eax +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+18h+var_18] offset aBfdPlugin +
lea ebx [esp+18h+arg_8] +
call printf  +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call vprintf  +
mov [esp+18h+var_18] 0Ah +
call putchar  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 9Ch +
mov dword ptr [ecx] 0 +
mov [esp+0A8h+var_A8] eax +
call ds:LoadLibraryA  +
sub esp 4 +
test eax eax +
jz loc_40DDE0  +
mov [esp+0A8h+var_A4] offset aOnload +
mov [esp+0A8h+var_A8] eax +
call ds:GetProcAddress  +
sub esp 8 +
test eax eax +
jz loc_40DDD3  +
lea edx [ebp+var_68] +
mov [ebp+var_68] 0Bh +
mov [ebp+var_64] offset sub_40DBF0 +
mov [ebp+var_60] 5 +
mov [ebp+var_5C] offset loc_40D9F0 +
mov [ebp+var_58] 8 +
mov [ebp+var_54] offset loc_40DBB0 +
mov [ebp+var_50] 0 +
mov [ebp+var_4C] 0 +
mov [esp+0A8h+var_A8] edx +
call eax  +
test eax eax +
jnz loc_40DDD3  +
mov dword ptr [esi] 1 +
movzx eax byte ptr [ebx+2Ch] +
and eax 0FFFFFFF3h +
or eax 8 +
mov [ebx+2Ch] al +
mov ecx ds:dword_49F2F4 +
test ecx ecx +
jz loc_40DDD3  +
mov esi [ebx+8Ch] +
mov eax [ebx] +
mov [ebp+var_8C] 0 +
test esi esi +
mov [ebp+var_88] eax +
jz loc_40DE00  +
mov eax [ebx+38h] +
mov edx [ebx+3Ch] +
mov [ebp+var_80] eax +
mov eax [ebx+88h] +
mov [ebp+var_7C] edx +
mov eax [eax+4] +
mov [ebp+var_74] 0 +
mov [ebp+var_78] eax +
mov eax [esi+8] +
test eax eax +
jz loc_40DDC7  +
mov [esp+0A8h+var_A8] eax +
call _fileno_0  +
mov edx [ebx+8Ch] +
test edx edx +
mov [ebp+var_84] eax +
jz loc_40DE30  +
mov [esp+0A8h+var_9C] 1 +
mov [esp+0A8h+var_A4] 0 +
mov [esp+0A8h+var_A0] 0 +
mov [esp+0A8h+var_A8] eax +
mov [ebp+var_70] ebx +
call j__lseeki64  +
mov esi eax +
mov edi edx +
lea eax [ebp+var_8C] +
mov [esp+0A8h+var_A4] eax +
lea eax [ebp+var_88] +
mov [esp+0A8h+var_A8] eax +
call ds:dword_49F2F4  +
mov eax [ebp+var_84] +
mov [esp+0A8h+var_9C] 0 +
mov [esp+0A8h+var_A4] esi +
mov [esp+0A8h+var_A0] edi +
mov [esp+0A8h+var_A8] eax +
call j__lseeki64  +
mov eax [ebp+var_8C] +
test eax eax +
jz loc_40DDD3  +
movzx eax byte ptr [ebx+2Ch] +
and eax 0FFFFFFF3h +
or eax 4 +
mov [ebx+2Ch] al +
lea esp [ebp-0Ch] +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+0A8h+var_A8] esi +
call sub_4065A0  +
test eax eax +
jnz loc_40DE23  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+0A8h+var_A4] offset aUnableToLoadDl +
mov [esp+0A8h+var_A8] offset aS_0 +
call off_476094  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [ebp+var_80] 0 +
mov esi ebx +
mov [ebp+var_7C] 0 +
mov [ebp+var_78] 0 +
mov [ebp+var_74] 0 +
jmp loc_40DD1E  +
mov eax [esi+8] +
jmp loc_40DD29  +
lea edx [ebp+var_48] +
mov [esp+0A8h+var_A4] edx +
mov [esp+0A8h+var_A8] eax +
call ds:_fstati64  +
test eax eax +
jnz loc_40DDD3  +
mov eax [ebp+var_30] +
mov edx [ebp+var_2C] +
mov [ebp+var_78] eax +
mov eax [ebp+var_84] +
mov [ebp+var_74] edx +
jmp loc_40DD45  +
***
push ebp  +
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+30h] +
mov eax [ebp+0A0h] +
mov edx [eax] +
mov esi [eax+4] +
mov ds:dword_49F240 offset a_text +
mov ds:dword_49F194 1000h +
test edx edx +
mov [esp+0Ch] edx +
jle loc_40DF06  +
***
mov [esp+arg_0] 18h +
mov [esp+0] ebp +
call sub_407B20  +
test eax eax +
mov ebx eax +
jz loc_40DF70  +
mov eax [esp+arg_30] +
mov [eax+edi*4] ebx +
mov ecx [esi+8] +
mov eax [esi] +
mov [ebx] ebp +
mov dword ptr [ebx+8] 0 +
cmp ecx 4 +
mov [ebx+4] eax +
ja loc_40DF37  +
mov edx 1 +
mov eax 2 +
shl edx cl +
test dl 15h +
jz loc_40DF30  +
cmp ecx 4 +
mov [ebx+0Ch] eax +
ja loc_40DF58  +
jmp ds:off_47A490[ecx*4]  +
***
mov dword ptr [ebx+10h] offset off_476188 +
mov dword ptr [ebx+10h] offset dword_49F240 +
jmp loc_40DEF7  +
***
mov dword ptr [ebx+10h] offset unk_49F180 +
jmp loc_40DEF7  +
***
and edx 0Ah +
mov al 82h +
jnz loc_40DEDC  +
mov [esp-2Ch+arg_2C] 1D1h +
mov [esp-2Ch+arg_28] offset a____Binutils_7 +
call sub_40C6C0  +
mov ecx [esi+8] +
xor eax eax +
mov [ebx+0Ch] eax +
cmp ecx 4 +
jbe loc_40DEE4  +
mov [esp-2Ch+arg_2C] 1FDh +
mov [esp-2Ch+arg_28] offset a____Binutils_7 +
call sub_40C6C0  +
jmp loc_40DEF7  +
***
mov [esp+arg_0] 1E8h +
mov dword ptr [esp+0] offset a____Binutils_7 +
call sub_40C6C0  +
jmp loc_40DEAE  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax ds:dword_49F2EC +
mov ebx [esp+80h] +
test eax eax +
jz loc_40DFB4  +
mov [esp] ebx +
call eax  +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx edx byte ptr [ebx+2Ch] +
and edx 0Ch +
jz loc_40DFD0  +
xor eax eax +
cmp dl 4 +
jnz loc_40DFAC  +
mov eax [ebx+4] +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx dword_476098 +
test ecx ecx +
jz loc_40E008  +
mov eax ds:dword_49F2E8 +
test eax eax +
jz loc_40E010  +
mov ecx offset dword_476098 +
mov edx ebx +
call sub_40DC30  +
test eax eax +
jz loc_40E008  +
movzx edx byte ptr [ebx+2Ch] +
and edx 0Ch +
jmp loc_40DFBD  +
***
mov eax [esp+1Ch] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_40DFAC  +
***
mov edx ds:dword_49F2F0 +
test edx edx +
jz loc_40E008  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] offset a__LibBfdPlugin +
mov dword ptr [esp] offset aHomeJenkinsMin +
call sub_4634C0  +
mov dword ptr [esp+4] offset aHomeJenkinsMin +
mov esi eax +
mov [esp+8] eax +
mov eax ds:dword_49F2F0 +
mov [esp] eax +
call sub_463CB0  +
mov [esp] esi +
mov edi eax +
mov [esp+1Ch] eax +
call free  +
mov [esp] edi +
call sub_473DE0  +
test eax eax +
mov ebp eax +
jz loc_40DFFC  +
mov esi [esp+1Ch] +
mov [esp+80h] ebx +
jmp loc_40E090  +
mov [esp] edi +
call free  +
test ebx ebx +
jnz loc_40E131  +
mov [esp] ebp +
call sub_473FA0  +
test eax eax +
jz loc_40E10D  +
add eax 8 +
xor ebx ebx +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov dword ptr [esp+4] offset asc_47A510 +
mov [esp] esi +
call sub_4634C0  +
mov edi eax +
lea eax [esp+30h] +
mov [esp+4] eax +
mov [esp] edi +
call ds:_stati64  +
test eax eax +
jnz loc_40E0E3  +
movzx eax word ptr [esp+36h] +
and ax 0F000h +
cmp ax 8000h +
jz loc_40E0F7  +
mov eax dword_476098 +
test eax eax +
jg loc_40E080  +
mov eax [esp+2Ch] +
mov dword_476098 eax +
jmp loc_40E080  +
***
mov edx [esp+80h] +
lea ecx [esp+2Ch] +
mov eax edi +
call sub_40DC30  +
mov ebx eax +
jmp loc_40E0E3  +
***
mov ebx [esp+80h] +
xor edi edi +
mov eax [esp+1Ch] +
mov [esp] eax +
call free  +
mov [esp] ebp +
call sub_4740C0  +
mov eax edi +
jmp loc_40DFEF  +
***
mov edi ebx +
mov ebx [esp+80h] +
jmp loc_40E116  +
***
mov eax [esp+arg_0] +
mov ds:dword_49F2F0 eax +
retn   +
***
mov eax [esp+arg_0] +
test eax eax +
mov ds:dword_49F2E8 eax +
setnz al  +
movzx eax al +
mov dword_476098 eax +
retn   +
***
mov edx dword_476098 +
xor eax eax +
test edx edx +
setnle al  +
retn   +
***
xor eax eax +
cmp dword ptr [esp+4] offset off_47A520 +
setz al  +
retn   +
***
mov eax [esp+4] +
mov ds:dword_49F2EC eax +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
test edx edx +
mov [esp+20h+var_14] ecx +
jz loc_40E220  +
mov ebx [edx] +
mov edi eax +
test ebx ebx +
jnz loc_40E1D9  +
jmp loc_40E220  +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jz loc_40E220  +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_20] ebx +
call strstr  +
test eax eax +
mov ebp eax +
jz loc_40E1D0  +
mov [esp+20h+var_20] edi +
call strlen  +
cmp ebx ebp +
movzx eax byte ptr [ebp+eax+0] +
jz loc_40E202  +
cmp byte ptr [ebp-1] 3Ah +
jnz loc_40E1D0  +
test al al +
jnz loc_40E1D0  +
mov eax [esp+20h+var_14] +
mov [eax] ebx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov esi off_4760A8 +
mov ebx [esi] +
test ebx ebx +
jnz loc_40E24F  +
jmp loc_40E270  +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jz loc_40E270  +
mov eax [ebx] +
mov [esp+18h+var_18] edi +
mov [esp+18h+var_14] eax +
call strcmp  +
test eax eax +
jnz loc_40E246  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov esi offset off_47A820 +
mov eax offset aAvr +
jmp loc_40E289  +
add esi 8 +
mov eax [esi] +
test eax eax +
jz loc_40E2C0  +
mov [esp+18h+var_10] 0 +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call sub_463CF0  +
test eax eax +
jnz loc_40E280  +
mov ebx [esi+4] +
test ebx ebx +
jnz loc_40E261  +
add esi 8 +
mov ebx [esi+4] +
test ebx ebx +
jz loc_40E2A8  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+18h+var_18] 2 +
xor ebx ebx +
call sub_40C770  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx off_4760A0 +
mov ebx [esp+18h+arg_0] +
test edx edx +
jz loc_40E309  +
mov eax [edx] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call strcmp  +
mov edx 1 +
test eax eax +
jz loc_40E31E  +
mov eax ebx +
call sub_40E230  +
test eax eax +
jz loc_40E325  +
mov off_4760A0 eax +
mov edx 1 +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
xor edx edx +
jmp loc_40E31E  +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
test eax eax +
jz loc_40E3B0  +
mov edi offset aDefault +
mov ecx 8 +
mov esi eax +
cmps   +
jnz loc_40E370  +
mov eax off_4760A0 +
test eax eax +
jz loc_40E3A0  +
test ebx ebx +
jz loc_40E366  +
or byte ptr [ebx+2Bh] 1 +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test ebx ebx +
jz loc_40E390  +
and byte ptr [ebx+2Bh] 0FEh +
call sub_40E230  +
test eax eax +
jz loc_40E399  +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
call sub_40E230  +
test eax eax +
jnz loc_40E366  +
xor eax eax +
jmp loc_40E366  +
mov eax off_4760A8 +
mov eax [eax] +
jmp loc_40E35B  +
mov [esp+10h+var_10] offset aGnutarget +
call getenv  +
test eax eax +
jz loc_40E352  +
jmp loc_40E342  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov ebp [esp+78h] +
mov edi [esp+7Ch] +
mov esi [esp+80h] +
test ebp ebp +
jz loc_40E3F1  +
mov dword ptr [ebp+0] 0 +
test edi edi +
jz loc_40E3FB  +
mov dword ptr [edi] 0FFFFFFFFh +
test esi esi +
jz loc_40E405  +
mov dword ptr [esi] 0 +
mov eax [esp+74h] +
mov [esp+4] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_40E330  +
test eax eax +
mov ebx eax +
jz loc_40E4F0  +
test ebp ebp +
jz loc_40E434  +
mov edx [ebx+8] +
xor eax eax +
test edx edx +
setz al  +
mov [ebp+0] eax +
test edi edi +
jz loc_40E43E  +
movzx eax byte ptr [ebx+18h] +
mov [edi] eax +
test esi esi +
mov eax ebx +
jz loc_40E453  +
mov ebp [ebx] +
call sub_40EBB0  +
mov edi eax +
mov eax ebx +
test edi edi +
jnz loc_40E460  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test ebp ebp +
jz loc_40E48A  +
mov dword ptr [esp+4] 2Dh +
mov [esp] ebp +
call strchr  +
test eax eax +
jz loc_40E4E0  +
lea ebp [eax+1] +
mov ecx esi +
mov edx edi +
mov eax ebp +
call sub_40E1B0  +
test eax eax +
jz loc_40E4A0  +
mov [esp] edi +
call free  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+4] ebp +
lea ebp [esp+1Eh] +
mov [esp] ebp +
call strcpy  +
jmp loc_40E4C4  +
mov byte ptr [eax] 0 +
mov ecx esi +
mov edx edi +
mov eax ebp +
call sub_40E1B0  +
test eax eax +
jnz loc_40E48A  +
mov dword ptr [esp+4] 2Dh +
mov [esp] ebp +
call strrchr  +
test eax eax +
jnz loc_40E4B2  +
jmp loc_40E48A  +
***
mov ecx esi +
mov edx edi +
mov eax ebp +
call sub_40E1B0  +
jmp loc_40E48A  +
***
xor eax eax +
jmp loc_40E453  +
***
sub esp 14h +
mov edx off_4760A8 +
mov ebx [edx] +
test ebx ebx +
jz loc_40E56D  +
xor eax eax +
add eax 1 +
mov ecx [edx+eax*4] +
test ecx ecx +
jnz loc_40E513  +
lea eax ds:4[eax*4] +
mov [esp+14h+var_14] eax +
call sub_40EFC0  +
test eax eax +
jz loc_40E578  +
mov edx off_4760A8 +
mov ecx [edx] +
test ecx ecx +
jz loc_40E574  +
mov ebx edx +
mov esi eax +
jmp loc_40E548  +
mov ebx off_4760A8 +
cmp edx ebx +
jz loc_40E550  +
cmp ecx [ebx] +
jz loc_40E558  +
mov ecx [ecx] +
add esi 4 +
mov [esi-4] ecx +
add edx 4 +
mov ecx [edx] +
test ecx ecx +
jnz loc_40E542  +
mov dword ptr [esi] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax 4 +
jmp loc_40E524  +
mov esi eax +
jmp loc_40E561  +
xor eax eax +
jmp loc_40E567  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx off_4760A8 +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov eax [ebx] +
test eax eax +
jnz loc_40E5A9  +
jmp loc_40E5C0  +
add ebx 4 +
mov eax [ebx] +
test eax eax +
jz loc_40E5C0  +
mov [esp+4] esi +
mov [esp] eax +
call edi  +
test eax eax +
jz loc_40E5A0  +
mov eax [ebx] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax offset aA_out +
mov eax offset aUnknownFileFor +
jmp loc_40E5F0  +
***
mov eax offset aSym +
mov eax offset aPef_xlib +
jmp loc_40E5F0  +
***
mov eax offset off_47A77E +
mov eax offset aMach_o +
jmp loc_40E5F0  +
***
mov eax offset aMmo +
mov eax offset aEvax +
jmp loc_40E5F0  +
***
mov eax offset aOvax +
mov eax offset aMsdos +
jmp loc_40E5F0  +
***
mov eax offset aVersados +
mov eax offset aOs9k +
jmp loc_40E5F0  +
***
mov eax offset aSom +
mov eax offset aIhex +
jmp loc_40E5F0  +
***
mov eax offset aVerilog +
mov eax offset aSrec +
jmp loc_40E5F0  +
***
mov eax offset aTekhex +
jmp loc_40E5F0  +
***
mov eax offset aOasys +
jmp loc_40E5F0  +
***
mov eax offset aNlm +
jmp loc_40E5F0  +
***
mov eax offset aIeee +
jmp loc_40E5F0  +
***
mov eax offset off_47A725 +
jmp loc_40E5F0  +
***
mov eax offset aXcoff +
jmp loc_40E5F0  +
***
mov eax offset aEcoff +
jmp loc_40E5F0  +
***
mov eax offset aCoff +
jmp loc_40E5F0  +
***
mov dword ptr [esp+8] offset aBfd_flavour_na +
mov dword ptr [esp+4] 75Ah +
mov dword ptr [esp] offset a____Binutils_8 +
call sub_40C6F0  +
nop   +
nop   +
nop   +
nop   +
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov [esp] esi +
call sub_40EFC0  +
test eax eax +
mov ebx eax +
jz loc_40E73B  +
mov [esp+8] esi +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call memset  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov edx [esp+0Ch] +
xor eax eax +
mov ecx [esp+8] +
mov ebx [edx+0Ch] +
cmp [ecx+0Ch] ebx +
jnz loc_40E779  +
mov ebx [edx] +
cmp [ecx] ebx +
jnz loc_40E779  +
mov ebx [edx+10h] +
mov eax ecx +
cmp [ecx+10h] ebx +
mov ecx edx +
cmovnb ecx eax +
cmovbe eax ecx +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi ds:_stricmp +
mov esi [esp+30h] +
mov ebx [esp+34h] +
mov eax [esi+14h] +
mov [esp] ebx +
mov [esp+4] eax +
call edi  +
test eax eax +
jnz loc_40E7B0  +
mov eax [esi+20h] +
test eax eax +
jnz loc_40E918  +
mov eax [esi+18h] +
mov [esp] ebx +
mov [esp+4] eax +
call edi  +
test eax eax +
jz loc_40E918  +
mov ebp [esi+18h] +
mov dword ptr [esp+4] 3Ah +
mov [esp] ebp +
call strchr  +
test eax eax +
jz loc_40E8CC  +
sub eax ebp +
mov [esp+8] eax +
mov [esp+0Ch] eax +
mov [esp+4] ebp +
mov [esp] ebx +
call ds:_strnicmp  +
mov edx [esp+0Ch] +
test eax eax +
jz loc_40E984  +
movzx eax byte ptr [ebx] +
mov edx [esi+14h] +
test al al +
jnz loc_40E826  +
jmp loc_40E931  +
cmp al cl +
jnz loc_40E82D  +
add ebx 1 +
movzx eax byte ptr [ebx] +
add edx 1 +
test al al +
jz loc_40E931  +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_40E811  +
cmp al 3Ah +
jz loc_40E925  +
movsx edx byte ptr [ebx] +
test dl dl +
jz loc_40E931  +
movzx ecx dl +
xor eax eax +
test ds:byte_495EE0[ecx+ecx] 4 +
jz loc_40E91D  +
add ebx 1 +
lea eax [eax+eax*4] +
lea eax [edx+eax*2-30h] +
movsx edx byte ptr [ebx] +
movzx ecx dl +
test ds:byte_495EE0[ecx+ecx] 4 +
jnz loc_40E853  +
cmp eax 1CF2h +
mov edx eax +
jz loc_40EA93  +
jbe loc_40E940  +
cmp eax 109AAh +
jz loc_40EAAC  +
nop   +
lea esi [esi+0] +
ja loc_40E9A3  +
cmp eax 1E46h +
jz loc_40EA02  +
ja loc_40EA72  +
cmp eax 1E1Ch +
jz loc_40EAE8  +
cmp eax 1E31h +
jnz loc_40EB39  +
mov ecx 25h +
mov edx 3Dh +
jmp loc_40E9D2  +
mov ebp [esi+14h] +
mov [esp] ebp +
call strlen  +
mov [esp+4] ebp +
mov [esp] ebx +
mov [esp+8] eax +
mov [esp+0Ch] eax +
call ds:_strnicmp  +
mov edx [esp+0Ch] +
test eax eax +
jnz loc_40E802  +
lea eax [ebx+edx] +
cmp byte ptr [eax] 3Ah +
jz loc_40EB1C  +
mov edx [esi+18h] +
mov [esp] eax +
mov [esp+4] edx +
call edi  +
test eax eax +
jnz loc_40E802  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movsx edx byte ptr [ebx+1] +
add ebx 1 +
jmp loc_40E838  +
***
mov eax [esi+20h] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp eax 1450h +
jz loc_40EACA  +
jbe loc_40EA0E  +
cmp eax 14BBh +
jz loc_40E9EA  +
lea esi [esi+0] +
ja loc_40EA52  +
cmp eax 1456h +
jz loc_40E9EA  +
cmp eax 14A2h +
jnz loc_40EB39  +
mov ecx 2 +
mov edx 10h +
jmp loc_40E9D2  +
mov eax [esi+18h] +
lea eax [eax+edx+1] +
add edx ebx +
mov [esp+4] eax +
mov [esp] edx +
call edi  +
test eax eax +
jnz loc_40E802  +
jmp loc_40E918  +
***
cmp eax 109C8h +
jz loc_40E9F6  +
lea esi [esi+0] +
ja loc_40EA30  +
cmp eax 109B4h +
jz loc_40EABB  +
cmp eax 109BEh +
jnz loc_40EB39  +
mov ecx 2 +
mov edx 5 +
xor eax eax +
cmp [esi+0Ch] ecx +
jnz loc_40E91D  +
xor eax eax +
cmp [esi+10h] edx +
setz al  +
jmp loc_40E91D  +
***
mov ecx 2 +
mov edx 0Ch +
jmp loc_40E9D2  +
***
mov ecx 2 +
mov edx 6 +
jmp loc_40E9D2  +
***
mov ecx 25h +
mov edx 40h +
jmp loc_40E9D2  +
***
cmp eax 8 +
jbe loc_40EB06  +
cmp eax 0BB8h +
jz loc_40EA29  +
cmp eax 0FA0h +
jnz loc_40EB39  +
mov ecx 8 +
jmp loc_40E9D2  +
***
cmp eax 109DCh +
jz loc_40EAD9  +
cmp eax 10AECh +
jnz loc_40EB39  +
mov ecx 2 +
mov edx 8 +
jmp loc_40E9D2  +
***
cmp eax 151Fh +
jz loc_40EAF7  +
cmp eax 1770h +
jnz loc_40EB39  +
mov ecx 1Ah +
jmp loc_40E9D2  +
***
cmp eax 7D00h +
jz loc_40EAA2  +
cmp eax 109A0h +
jnz loc_40EB39  +
mov ecx 2 +
mov edx 1 +
jmp loc_40E9D2  +
***
mov ecx 25h +
mov edx 2Dh +
jmp loc_40E9D2  +
***
mov ecx 0Dh +
jmp loc_40E9D2  +
***
mov ecx 2 +
mov edx 3 +
jmp loc_40E9D2  +
***
mov ecx 2 +
mov edx 4 +
jmp loc_40E9D2  +
***
mov ecx 2 +
mov edx 0Ah +
jmp loc_40E9D2  +
***
mov ecx 2 +
mov edx 7 +
jmp loc_40E9D2  +
***
mov ecx 25h +
mov edx 30h +
jmp loc_40E9D2  +
***
mov ecx 2 +
mov edx 12h +
jmp loc_40E9D2  +
***
cmp eax 3 +
jnb loc_40EB10  +
cmp eax 1 +
jnz loc_40EB39  +
mov edx eax +
mov ecx 2 +
jmp loc_40E9D2  +
***
mov eax [esi+18h] +
mov [esp+4] eax +
lea eax [ebx+edx+1] +
mov [esp] eax +
call edi  +
test eax eax +
jnz loc_40E802  +
jmp loc_40E918  +
***
xor eax eax +
nop   +
lea esi [esi+0] +
jmp loc_40E91D  +
***
mov eax [esp+4] +
mov eax [eax+84h] +
mov eax [eax+18h] +
retn   +
***
push edi  +
mov edi offset off_47A8D4 +
push esi  +
push ebx  +
mov ebx offset unk_48DB80 +
sub esp 10h +
mov esi [esp+20h] +
mov eax [ebx+28h] +
mov [esp+4] esi +
mov [esp] ebx +
call eax  +
test eax eax +
jnz loc_40EB98  +
mov ebx [ebx+30h] +
test ebx ebx +
jnz loc_40EB74  +
add edi 4 +
mov ebx [edi] +
test ebx ebx +
jnz loc_40EB74  +
xor eax eax +
jmp loc_40EB9A  +
mov eax ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_40EBB0  +
***
push ebx  +
xor edx edx +
sub esp 14h +
mov eax [eax+30h] +
mov ebx offset off_47A8D4 +
lea ecx [edx+1] +
test eax eax +
jz loc_40EBDC  +
nop   +
lea esi [esi+0] +
mov eax [eax+30h] +
mov edx ecx +
lea ecx [edx+1] +
test eax eax +
jnz loc_40EBD0  +
add ebx 4 +
mov eax [ebx] +
test eax eax +
jnz loc_40EBD0  +
lea eax ds:8[edx*4] +
mov [esp+14h+var_14] eax +
call sub_40EFC0  +
test eax eax +
jz loc_40EC29  +
mov ecx eax +
mov ebx offset off_47A8D4 +
mov edx offset unk_48DB80 +
mov esi [edx+18h] +
add ecx 4 +
mov [ecx-4] esi +
mov edx [edx+30h] +
test edx edx +
jnz loc_40EC04  +
add ebx 4 +
mov edx [ebx] +
test edx edx +
jnz loc_40EC04  +
mov dword ptr [ecx] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
jmp loc_40EC23  +
***
push edi  +
push esi  +
push ebx  +
mov eax [esp+10h] +
mov edx [esp+14h] +
mov ebx [esp+18h] +
mov ecx [eax+84h] +
mov edi [ecx+0Ch] +
test edi edi +
jz loc_40EC5F  +
mov edi [edx+84h] +
mov esi [edi+0Ch] +
test esi esi +
jnz loc_40EC87  +
mov ecx eax +
mov eax edx +
mov edx ecx +
test ebx ebx +
jz loc_40EC70  +
mov eax [edx+84h] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+4] +
mov edi offset aBinary_0 +
mov ecx 7 +
mov esi [eax] +
cmps   +
jz loc_40EC63  +
xor eax eax +
jmp loc_40EC69  +
***
mov eax [ecx+24h] +
mov [esp+14h] edi +
mov [esp+10h] ecx +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
mov edx [esp+8] +
mov eax [esp+4] +
mov [eax+84h] edx +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+84h] +
mov eax [eax+0Ch] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+84h] +
mov eax [eax+10h] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+84h] +
mov eax [eax+8] +
retn   +
***
mov eax [esp+arg_0] +
mov eax [eax+84h] +
mov eax [eax+4] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+84h] +
retn   +
***
mov edx [esp+arg_0] +
mov ecx [esp+arg_4] +
mov ebx offset off_47A8D4 +
jmp loc_40ED1C  +
mov eax [eax+30h] +
test eax eax +
jz loc_40ED34  +
cmp [eax+0Ch] edx +
jnz loc_40ED15  +
cmp [eax+10h] ecx +
jz loc_40ED32  +
test ecx ecx +
jnz loc_40ED15  +
cmp dword ptr [eax+20h] 0 +
nop   +
jz loc_40ED15  +
pop ebx  +
retn   +
add ebx 4 +
mov eax [ebx] +
test eax eax +
jnz loc_40ED1C  +
xor eax eax +
pop ebx  +
retn   +
***
jmp sub_40ED50  +
***
mov eax [esp+18h+arg_8] +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_40ED00  +
mov edx eax +
test edx edx +
mov [ebx+84h] eax +
mov eax 1 +
jz loc_40ED82  +
add esp 18h +
pop ebx  +
retn   +
mov dword ptr [ebx+84h] offset asc_47A8A0 +
mov [esp+18h+var_18] 11h +
call sub_40C770  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 8 +
mov eax [esp+8+arg_4] +
mov [esp+8+var_4] eax +
mov eax [esp+8+arg_0] +
mov [esp+8+var_8] eax +
call sub_40ED00  +
test eax eax +
jz loc_40EDC2  +
mov eax [eax+18h] +
add esp 8 +
retn   +
mov eax offset aUnknown_1 +
add esp 8 +
retn   +
***
sub esp 8 +
mov eax [esp+8+arg_0] +
mov eax [eax+84h] +
mov edx [eax+10h] +
mov [esp+8+var_4] edx +
mov eax [eax+0Ch] +
mov [esp+8+var_8] eax +
call sub_40ED00  +
test eax eax +
jz loc_40EE05  +
mov eax [eax+8] +
test eax eax +
lea edx [eax+7] +
cmovs eax edx +
add esp 8 +
sar eax 3 +
retn   +
mov eax 1 +
add esp 8 +
retn   +
***
sub esp 8 +
mov eax [esp+10h] +
mov [esp+4] eax +
mov eax [esp+0Ch] +
mov [esp] eax +
call sub_40ED00  +
test eax eax +
jz loc_40EE40  +
mov eax [eax+8] +
test eax eax +
lea edx [eax+7] +
cmovs eax edx +
add esp 8 +
sar eax 3 +
retn   +
***
mov eax 1 +
add esp 8 +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_40C770  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax 1 +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_40C770  +
xor eax eax +
add esp 1Ch +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
xor eax eax +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_40C770  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
***
mov eax 4 +
retn   +
***
mov eax [esp+0Ch] +
mov dword ptr [eax] 0 +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_40C770  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_40C770  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_40C770  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 5 +
call sub_40C770  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] 3 +
call sub_40C770  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
js loc_40EFE4  +
mov [esp+18h+var_18] ebx +
call malloc  +
test eax eax +
jz loc_40EFE0  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
jz loc_40EFD8  +
mov [esp+18h+var_18] 6 +
call sub_40C770  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov ecx [esp+18h+arg_4] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_40F028  +
test ecx ecx +
jz loc_40F028  +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
ja loc_40F035  +
imul ecx ebx +
mov [esp+18h+arg_0] ecx +
add esp 18h +
pop ebx  +
jmp sub_40EFC0  +
mov [esp+18h+var_18] 6 +
call sub_40C770  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
mov eax [esp+18h+arg_0] +
mov ebx [esp+18h+arg_4] +
test eax eax +
jz loc_40F097  +
test ebx ebx +
js loc_40F084  +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call realloc  +
test eax eax +
jz loc_40F080  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
jz loc_40F074  +
mov [esp+18h+var_18] 6 +
call sub_40C770  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp sub_40EFC0  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov ecx [esp+28h] +
mov esi [esp+20h] +
mov eax ebx +
or eax ecx +
cmp eax 0FFFFh +
jbe loc_40F0DD  +
test ecx ecx +
jz loc_40F0DD  +
xor edx edx +
mov eax 0FFFFFFFFh +
div  ecx +
cmp ebx eax +
ja loc_40F0F2  +
imul ecx ebx +
mov [esp+20h] esi +
mov [esp+24h] ecx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_40F050  +
***
mov dword ptr [esp] 6 +
call sub_40C770  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_14] eax +
call sub_40F050  +
test eax eax +
jz loc_40F131  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
jz loc_40F12C  +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
call free  +
mov eax [esp+18h+var_C] +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov [esp+14h+var_14] esi +
call sub_40EFC0  +
test eax eax +
mov ebx eax +
jnz loc_40F170  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
test esi esi +
jz loc_40F167  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] eax +
call memset  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov [esp] edi +
mov [esp+4] esi +
call sub_40F000  +
test eax eax +
mov ebx eax +
jz loc_40F1CB  +
imul esi edi +
test esi esi +
jz loc_40F1CB  +
mov [esp+8] esi +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call memset  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] 4 +
mov edx eax +
shr edx 18h +
mov [esp+2Ch+var_10] dl +
mov edx eax +
shr edx 10h +
mov [esp+1Dh] dl +
mov edx eax +
mov [esp+2Ch+var_D] al +
mov eax [esp+2Ch+arg_0] +
shr edx 8 +
mov [esp+2Ch+var_E] dl +
mov [esp+2Ch+var_24] eax +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call sub_405F60  +
cmp eax 4 +
setz al  +
add esp 2Ch +
movzx eax al +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx edx byte ptr [edx+1] +
shl eax 8 +
or eax edx +
retn   +
***
jmp loc_40F250  +
mov edx [esp+4] +
movzx eax byte ptr [edx+1] +
movzx edx byte ptr [edx] +
shl eax 8 +
or eax edx +
retn   +
***
jmp loc_40F270  +
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx edx byte ptr [edx+1] +
shl eax 8 +
or eax edx +
xor ah 80h +
sub eax 8000h +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx+1] +
movzx edx byte ptr [edx] +
shl eax 8 +
or eax edx +
xor ah 80h +
sub eax 8000h +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov ecx edx +
shr ecx 8 +
mov [eax] cl +
mov [eax+1] dl +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov [eax] dl +
shr edx 8 +
mov [eax+1] dl +
retn   +
***
jmp sub_40F2F0  +
***
mov edx [esp+arg_0] +
movzx eax byte ptr [edx] +
movzx ecx byte ptr [edx+1] +
shl eax 18h +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx+3] +
movzx edx byte ptr [edx+2] +
or eax ecx +
shl edx 8 +
or eax edx +
retn   +
***
movzx eax byte ptr [edx+1] +
movzx ecx byte ptr [edx+2] +
movzx ebx byte ptr [edx] +
movzx edx byte ptr [edx+3] +
shl eax 8 +
shl ecx 10h +
or eax ecx +
or eax ebx +
shl edx 18h +
or eax edx +
pop ebx  +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx ecx byte ptr [edx+1] +
shl eax 18h +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx+3] +
movzx edx byte ptr [edx+2] +
or eax ecx +
shl edx 8 +
or eax edx +
retn   +
***
push ebx  +
mov edx [esp+8] +
movzx eax byte ptr [edx+1] +
movzx ecx byte ptr [edx+2] +
movzx ebx byte ptr [edx] +
movzx edx byte ptr [edx+3] +
shl eax 8 +
shl ecx 10h +
or eax ecx +
or eax ebx +
shl edx 18h +
or eax edx +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ecx [esp+8+arg_0] +
movzx eax byte ptr [ecx] +
movzx ebx byte ptr [ecx+1] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+2] +
shl esi 8 +
mov edx edi +
or ebx esi +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+5] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+6] +
shl eax 8 +
movzx ecx byte ptr [ecx+7] +
or ebx eax +
mov eax ebx +
shl eax 8 +
or ecx eax +
shld edx ebx +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
xor edx edx +
push esi  +
push ebx  +
mov ecx [esp+10h] +
movzx eax byte ptr [ecx+7] +
movzx ebx byte ptr [ecx+6] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+5] +
shl esi 8 +
mov edx edi +
or ebx esi +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+2] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shld edx ebx +
movzx ebx byte ptr [ecx+1] +
shl eax 8 +
movzx ecx byte ptr [ecx] +
or ebx eax +
mov eax ebx +
shl eax 8 +
or ecx eax +
shld edx ebx +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
xor edx edx +
push esi  +
push ebx  +
mov ecx [esp+10h] +
movzx eax byte ptr [ecx] +
movzx ebx byte ptr [ecx+1] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+2] +
shl esi 8 +
mov edx edi +
or ebx esi +
movzx esi byte ptr [ecx+7] +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+5] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+6] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shl eax 8 +
shld edx ebx +
or esi eax +
lea ebx [edx-80000000h] +
mov eax esi +
mov edx ebx +
add eax 0 +
pop ebx  +
adc edx 80000000h +
pop esi  +
pop edi  +
retn   +
***
push edi  +
xor edx edx +
push esi  +
push ebx  +
mov ecx [esp+10h] +
movzx eax byte ptr [ecx+7] +
movzx ebx byte ptr [ecx+6] +
shld edx eax +
shl eax 8 +
mov edi edx +
or ebx eax +
shld edi ebx +
mov esi ebx +
movzx ebx byte ptr [ecx+5] +
shl esi 8 +
mov edx edi +
or ebx esi +
movzx esi byte ptr [ecx] +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+4] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+3] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+2] +
shl eax 8 +
or ebx eax +
shld edx ebx +
mov eax ebx +
movzx ebx byte ptr [ecx+1] +
shl eax 8 +
or ebx eax +
mov eax ebx +
shl eax 8 +
shld edx ebx +
or esi eax +
lea ebx [edx-80000000h] +
mov eax esi +
mov edx ebx +
add eax 0 +
pop ebx  +
adc edx 80000000h +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov ecx edx +
shr ecx 18h +
mov [eax] cl +
mov ecx edx +
shr ecx 10h +
mov [eax+1] cl +
mov ecx edx +
shr ecx 8 +
mov [eax+2] cl +
mov [eax+3] dl +
retn   +
***
mov edx [esp+4] +
mov eax [esp+8] +
mov ecx edx +
shr ecx 8 +
mov [eax+1] cl +
mov ecx edx +
mov [eax] dl +
shr ecx 10h +
shr edx 18h +
mov [eax+2] cl +
mov [eax+3] dl +
retn   +
***
jmp loc_40F630  +
***
push esi  +
push ebx  +
mov edx [esp-4+arg_4] +
mov esi [esp-4+arg_8] +
mov eax [esp-4+arg_0] +
mov ecx edx +
mov ebx edx +
shr ecx 18h +
mov [esi] cl +
mov ecx edx +
shr ecx 10h +
mov [esi+1] cl +
mov ecx edx +
shr ecx 8 +
mov [esi+2] cl +
mov ecx eax +
shrd ecx ebx +
mov ebx edx +
mov [esi+4] cl +
mov ecx eax +
shrd ecx ebx +
mov [esi+5] cl +
mov ecx eax +
shrd ecx edx +
mov [esi+3] dl +
mov [esi+6] cl +
mov [esi+7] al +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
mov edx [esp+10h] +
mov esi [esp+14h] +
mov eax [esp+0Ch] +
mov ecx edx +
mov ebx edx +
shr ecx 18h +
mov [esi+7] cl +
mov ecx edx +
shr ecx 10h +
mov [esi+6] cl +
mov ecx edx +
shr ecx 8 +
mov [esi+5] cl +
mov ecx eax +
shrd ecx ebx +
mov ebx edx +
mov [esi+3] cl +
mov ecx eax +
shrd ecx ebx +
mov [esi+2] cl +
mov ecx eax +
shrd ecx edx +
mov [esi+4] dl +
mov [esi+1] cl +
mov [esi] al +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ecx [esp+3Ch] +
mov eax [esp+30h] +
mov edx [esp+34h] +
mov ebp [esp+38h] +
test cl 7 +
mov esi [esp+40h] +
jnz loc_40F72D  +
test ecx ecx +
lea edi [ecx+7] +
cmovns edi ecx +
xor ecx ecx +
sar edi 3 +
lea ebx [edi-1] +
test edi edi +
mov [esp+0Ch] ebx +
jle loc_40F725  +
mov ebx [esp+0Ch] +
sub ebx ecx +
test esi esi +
cmovz ebx ecx +
add ecx 1 +
mov [ebp+ebx+0] al +
shrd eax edx +
shr edx 8 +
cmp ecx edi +
jnz loc_40F708  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+8] offset aBfd_put_bits +
mov dword ptr [esp+4] 2E2h +
mov dword ptr [esp] offset a____Binutils_9 +
call sub_40C6F0  +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+44h] +
mov ebp [esp+48h] +
test al 7 +
jnz loc_40F7D0  +
test eax eax +
lea edx [eax+7] +
cmovs eax edx +
mov [esp+18h] eax +
sar dword ptr [esp+18h] 3 +
mov ebx [esp+18h] +
test ebx ebx +
jle loc_40F7CA  +
sub ebx 1 +
xor esi esi +
xor eax eax +
xor edx edx +
mov [esp+1Ch] ebx +
mov [esp+48h] ebp +
lea esi [esi+0] +
mov ecx [esp+48h] +
mov ebx edx +
mov edi [esp+1Ch] +
mov ebp [esp+40h] +
sub edi esi +
test ecx ecx +
cmovnz edi esi +
mov ecx eax +
movzx edi byte ptr [ebp+edi+0] +
shl ecx 8 +
add esi 1 +
shld ebx eax +
mov edx ebx +
or edi ecx +
cmp esi [esp+18h] +
mov eax edi +
jnz loc_40F790  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
xor edx edx +
jmp loc_40F7C2  +
***
mov dword ptr [esp+8] offset aBfd_get_bits +
mov dword ptr [esp+4] 2F7h +
mov dword ptr [esp] offset a____Binutils_9 +
call sub_40C6F0  +
lea esi [esi+0] +
push ebp  +
mov eax 1 +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+44h] +
mov ecx [esp+3Ch] +
mov ebx [esp+40h] +
test edx edx +
jz loc_40F8B5  +
mov eax [esp+34h] +
test byte ptr [eax+18h] 30h +
jnz loc_40F8F0  +
mov eax [esp+30h] +
movzx eax byte ptr [eax+28h] +
and eax 18h +
cmp al 10h +
jz loc_40F8C0  +
mov eax [esp+34h] +
mov ebp [eax+28h] +
test ebp ebp +
jz loc_40F8C0  +
mov eax [esp+44h] +
xor edx edx +
mov edi edx +
mov esi eax +
add esi ecx +
adc edi ebx +
cmp edx edi +
jg loc_40F8D6  +
jge loc_40F920  +
cmp edi 0 +
jge loc_40F8D0  +
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
add ecx [eax+50h] +
adc ebx [eax+54h] +
mov eax [esp+30h] +
mov [esp+4] ecx +
mov [esp+8] ebx +
mov [esp] eax +
call sub_4060C0  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_40F8B5  +
mov eax [esp+30h] +
mov [esp+8] eax +
mov eax [esp+44h] +
mov [esp+4] eax +
mov eax [esp+38h] +
mov [esp] eax +
call sub_405EB0  +
cmp [esp+44h] eax +
setz al  +
movzx eax al +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+34h] +
mov ebp [eax+24h] +
jmp loc_40F840  +
***
jg loc_40F8D6  +
cmp esi ebp +
jbe loc_40F861  +
mov dword ptr [esp] 5 +
call sub_40C770  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+8] eax +
mov eax [esp+30h] +
mov dword ptr [esp] offset aBUnableToGetDe +
mov [esp+4] eax +
call off_476094  +
mov dword ptr [esp] 5 +
call sub_40C770  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp [esp+44h] esi +
ja loc_40F8D6  +
jmp loc_40F85C  +
***
sub esp 1Ch +
mov dword ptr [esp+8] offset a_bfd_generic_g +
mov dword ptr [esp+4] 362h +
mov dword ptr [esp] offset a____Binutils_9 +
call sub_40C6F0  +
nop   +
push esi  +
mov eax 1 +
push ebx  +
sub esp 14h +
mov esi [esp+34h] +
mov ecx [esp+2Ch] +
mov ebx [esp+30h] +
test esi esi +
jnz loc_40F970  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+24h] +
mov dword ptr [esp+0Ch] 0 +
add ecx [eax+50h] +
adc ebx [eax+54h] +
mov eax [esp+20h] +
mov [esp+4] ecx +
mov [esp+8] ebx +
mov [esp] eax +
call sub_4060C0  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_40F96A  +
mov eax [esp+20h] +
mov [esp+4] esi +
mov [esp+8] eax +
mov eax [esp+28h] +
mov [esp] eax +
call sub_405F60  +
cmp esi eax +
setz al  +
add esp 14h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
add eax 1 +
shr edx 1 +
jnz loc_40F9E0  +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov eax 4Ch +
cmp byte ptr [edx+18h] 5Fh +
mov edx 2Eh +
cmovnz eax edx +
mov edx [esp+8] +
cmp al [edx] +
setz al  +
movzx eax al +
retn   +
***
sub esp 1Ch +
mov ecx [esp+20h] +
mov edx [esp+24h] +
mov eax [ecx+4] +
mov edx [edx+4] +
mov eax [eax+8] +
mov edx [edx+8] +
cmp eax edx +
jz loc_40FA83  +
cmp eax 2 +
jz loc_40FA83  +
cmp edx 2 +
jz loc_40FA83  +
test eax eax +
mov edx offset aBCompiledForAB +
mov eax offset aBCompiledForAL +
cmovnz edx eax +
mov [esp+4] ecx +
mov [esp] edx +
call off_476094  +
mov dword ptr [esp] 3 +
call sub_40C770  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax 1 +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 28h +
mov eax ds:dword_49F304 +
mov ebx [esp+3Ch] +
or eax ebx +
cmp eax 0FFFFFFFFh +
jz loc_40FB04  +
mov eax ds:_iob +
add eax 20h +
mov [esp] eax +
call fflush  +
test ebx ebx +
jz loc_40FB10  +
mov eax [esp+38h] +
mov [esp+14h] ebx +
mov dword ptr [esp+4] offset aDeprecatedSCal +
mov [esp+10h] eax +
mov eax [esp+34h] +
mov [esp+0Ch] eax +
mov eax [esp+30h] +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call fprintf  +
mov eax ds:_iob +
not ebx  +
add eax 40h +
mov [esp] eax +
call fflush  +
or ds:dword_49F304 ebx +
add esp 28h +
pop ebx  +
retn   +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] offset aDeprecatedSC_0 +
mov [esp+8] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp] eax +
call fprintf  +
jmp loc_40FAEC  +
***
push edi  +
xor ecx ecx +
push esi  +
xor esi esi +
push ebx  +
mov edi [esp+14h] +
xor ebx ebx +
lea esi [esi+0] +
movzx eax byte ptr [edi+ebx] +
add ebx 1 +
mov edx eax +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or esi edx +
test al al +
js loc_40FB50  +
mov eax [esp+18h] +
mov [eax] ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov edi [esp+arg_4] +
mov ebp [esp+arg_10] +
cmp edi ebp +
jnb loc_40FBFF  +
movzx eax byte ptr [edi] +
mov esi eax +
and esi 7Fh +
test al al +
jns loc_40FC0E  +
sub ebp edi +
mov ecx 7 +
mov edx 1 +
jmp loc_40FBC7  +
movzx eax byte ptr [edi+edx] +
add edx 1 +
mov ebx eax +
and ebx 7Fh +
shl ebx cl +
add ecx 7 +
or esi ebx +
test al al +
jns loc_40FBCB  +
cmp edx ebp +
jnz loc_40FBB0  +
cmp ecx 1Fh +
setbe bl  +
mov edi [esp+arg_8] +
test edi edi +
jz loc_40FBDF  +
mov edi [esp+arg_8] +
mov [edi] edx +
mov edx [esp+arg_C] +
test edx edx +
jz loc_40FBF8  +
test bl bl +
jz loc_40FBF8  +
test al 40h +
jz loc_40FBF8  +
mov eax 0FFFFFFFFh +
shl eax cl +
or esi eax +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx 1 +
xor eax eax +
xor ecx ecx +
xor edx edx +
xor esi esi +
jmp loc_40FBD1  +
mov ebx 1 +
mov ecx 7 +
mov edx 1 +
jmp loc_40FBD1  +
***
push edi  +
xor ecx ecx +
push esi  +
xor esi esi +
push ebx  +
mov edi [esp+14h] +
xor ebx ebx +
lea esi [esi+0] +
movzx eax byte ptr [edi+ebx] +
add ebx 1 +
mov edx eax +
and edx 7Fh +
shl edx cl +
add ecx 7 +
or esi edx +
test al al +
js loc_40FC30  +
cmp ecx 1Fh +
ja loc_40FC59  +
test al 40h +
jz loc_40FC59  +
mov eax 0FFFFFFFFh +
shl eax cl +
or esi eax +
mov eax [esp+18h] +
mov [eax] ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 1 +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_C] +
mov ebx [esp+1Ch+arg_0] +
lea esi ds:0[eax*4] +
mov edi esi +
shr edi 2 +
cmp edi eax +
jz loc_40FCB5  +
mov [esp+1Ch+var_1C] 6 +
call sub_40C770  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_45C440  +
test eax eax +
mov [ebx+8] eax +
jz loc_40FC9F  +
test esi esi +
jnz loc_40FD23  +
mov edx 8 +
mov ecx [eax+4] +
cmp ecx edx +
jb loc_40FD2B  +
mov ebp [eax] +
sub ecx edx +
mov [eax+4] ecx +
add ebp edx +
mov [eax] ebp +
mov eax ebp +
sub eax edx +
test eax eax +
mov [ebx] eax +
jz loc_40FD40  +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] eax +
call memset  +
mov eax [esp+1Ch+arg_8] +
mov [ebx+0Ch] edi +
mov dword ptr [ebx+10h] 0 +
and byte ptr [ebx+18h] 0FEh +
mov [ebx+14h] eax +
mov eax [esp+1Ch+arg_4] +
mov [ebx+4] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [esi+7] +
and edx 0FFFFFFF8h +
jnz loc_40FCCA  +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] eax +
call sub_45C4A0  +
jmp loc_40FCE0  +
mov eax [ebx+8] +
mov [esp+1Ch+var_1C] eax +
call sub_45C5B0  +
mov dword ptr [ebx+8] 0 +
jmp loc_40FC9F  +
***
sub esp 1Ch +
mov eax dword_4760AC +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_40FC80  +
add esp 1Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call sub_45C5B0  +
mov dword ptr [ebx+8] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_8] +
mov eax [edi+4] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] 0 +
call eax  +
test eax eax +
mov ebp eax +
jz loc_40FFB2  +
mov ecx [edi+0Ch] +
xor edx edx +
mov [eax+4] esi +
mov [eax+8] ebx +
mov eax ebx +
div  ecx +
mov eax [edi] +
lea eax [eax+edx*4] +
mov edx [eax] +
mov [ebp+0] edx +
mov [eax] ebp +
mov eax [edi+10h] +
test byte ptr [edi+18h] 1 +
lea edx [eax+1] +
mov eax ebp +
mov [edi+10h] edx +
jnz loc_40FF60  +
lea ebx [ecx+ecx*2] +
shr ebx 2 +
cmp edx ebx +
jbe loc_40FF60  +
mov esi offset unk_47AB50 +
mov edx offset unk_47AAE0 +
mov eax esi +
sub eax edx +
sar eax 2 +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
sar eax 1 +
lea ebx [edx+eax*4] +
cmp ecx [ebx] +
jb loc_40FE62  +
jmp loc_40FF76  +
mov eax ebx +
sub eax edx +
sar eax 2 +
mov esi eax +
shr esi 1Fh +
add eax esi +
sar eax 1 +
lea eax [edx+eax*4] +
cmp ecx [eax] +
jnb loc_40FF7A  +
mov ebx eax +
cmp edx ebx +
jnz loc_40FE45  +
mov eax [edx] +
cmp ecx eax +
jnb loc_40FF68  +
test eax eax +
lea ebx ds:0[eax*4] +
jz loc_40FF68  +
mov esi ebx +
shr esi 2 +
cmp esi eax +
mov [esp+2Ch+var_1C] esi +
jnz loc_40FF68  +
test ebx ebx +
mov edx [edi+8] +
jz loc_40FF8C  +
lea eax [ebx+7] +
and eax 0FFFFFFF8h +
jnz loc_40FF91  +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
call sub_45C4A0  +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_20] +
test eax eax +
jz loc_40FF68  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call memset  +
mov eax [edi+0Ch] +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_40FF50  +
mov eax [edi] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_10] ebp +
mov esi [esp+2Ch+var_18] +
lea ebp ds:0[esi*4] +
lea edx [eax+ebp] +
mov esi [edx] +
test esi esi +
jz loc_40FF3D  +
mov eax [esi+8] +
mov ebx esi +
jmp loc_40FF17  +
cmp [ecx+8] eax +
jnz loc_40FF1D  +
mov ebx ecx +
mov ecx [ebx] +
test ecx ecx +
jnz loc_40FF10  +
mov [edx] ecx +
xor edx edx +
div  [esp+2Ch+var_1C] +
mov eax [esp+2Ch+var_20] +
lea eax [eax+edx*4] +
mov edx [eax] +
mov [ebx] edx +
mov [eax] esi +
mov eax [edi] +
lea edx [eax+ebp] +
mov esi [edx] +
test esi esi +
jnz loc_40FF08  +
add [esp+2Ch+var_18] 1 +
mov esi [esp+2Ch+var_14] +
cmp [esp+2Ch+var_18] esi +
jnz loc_40FEF4  +
mov ebp [esp+2Ch+var_10] +
mov eax [esp+2Ch+var_20] +
mov [edi] eax +
mov eax [esp+2Ch+var_1C] +
mov [edi+0Ch] eax +
mov eax ebp +
nop   +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
or byte ptr [edi+18h] 1 +
add esp 2Ch +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov ebx esi +
lea edx [eax+4] +
cmp edx ebx +
jz loc_40FE66  +
mov esi ebx +
jmp loc_40FE29  +
mov eax 8 +
mov ecx [edx+4] +
cmp ecx eax +
jb loc_40FEA7  +
mov esi [edx] +
sub ecx eax +
mov [edx+4] ecx +
add esi eax +
mov [edx] esi +
sub esi eax +
mov [esp+2Ch+var_20] esi +
jmp loc_40FEB7  +
xor eax eax +
jmp loc_40FF60  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+38h+arg_0] +
mov ebx [esp+38h+arg_4] +
mov [esp+38h+var_24] eax +
mov eax [esp+38h+arg_8] +
lea ebp [ebx+1] +
mov [esp+38h+var_20] eax +
mov eax [esp+38h+arg_C] +
mov [esp+38h+var_1C] eax +
movzx eax byte ptr [ebx] +
test eax eax +
jz loc_41000B  +
nop   +
mov ecx eax +
add ebp 1 +
shl ecx 11h +
add eax ecx +
add eax edx +
mov edx eax +
shr edx 2 +
xor edx eax +
movzx eax byte ptr [ebp-1] +
test eax eax +
jnz loc_40FFF0  +
sub ebp ebx +
mov ecx [esp+38h+var_24] +
sub ebp 1 +
mov eax ebp +
add edx ebp +
shl eax 11h +
add edx eax +
mov esi edx +
shr esi 2 +
xor esi edx +
xor edx edx +
mov eax esi +
div  dword ptr [ecx+0Ch] +
mov eax [ecx] +
mov edi [eax+edx*4] +
test edi edi +
jnz loc_41003C  +
jmp loc_410060  +
mov edi [edi] +
test edi edi +
jz loc_410060  +
cmp [edi+8] esi +
nop   +
jnz loc_410036  +
mov [esp+38h+var_34] ebx +
mov eax [edi+4] +
mov [esp+38h+var_38] eax +
call strcmp  +
test eax eax +
jnz loc_410036  +
mov eax edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+38h+var_20] +
test edx edx +
jz loc_4100F4  +
mov eax [esp+38h+var_1C] +
test eax eax +
jz loc_4100F0  +
mov eax [esp+38h+var_24] +
mov edi ebp +
add edi 1 +
mov eax [eax+8] +
jnz loc_4100D0  +
mov edx [eax+4] +
mov ebp 8 +
cmp edx ebp +
jnb loc_4100DF  +
mov [esp+38h+var_34] ebp +
mov [esp+38h+var_38] eax +
call sub_45C4A0  +
mov ebp eax +
test ebp ebp +
jz loc_4100FB  +
mov [esp+38h+var_30] edi +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] ebp +
call memcpy  +
mov eax [esp+38h+var_24] +
mov [esp+38h+arg_8] esi +
mov [esp+38h+arg_4] ebp +
mov [esp+38h+arg_0] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_40FDB0  +
add ebp 8 +
and ebp 0FFFFFFF8h +
jz loc_41008E  +
mov edx [eax+4] +
cmp edx ebp +
jb loc_41008E  +
mov ecx [eax] +
sub edx ebp +
mov [eax+4] edx +
add ecx ebp +
mov [eax] ecx +
sub ecx ebp +
mov ebp ecx +
jmp loc_41009C  +
mov ebp ebx +
jmp loc_4100B0  +
xor eax eax +
jmp loc_410057  +
mov [esp+38h+var_38] 6 +
call sub_40C770  +
xor eax eax +
jmp loc_410057  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov ecx [esp+28h+arg_8] +
mov ebx [esi+0Ch] +
mov eax [ecx+8] +
div  ebx +
mov eax [esi] +
lea eax [eax+edx*4] +
mov edx [eax] +
test edx edx +
jz loc_41014C  +
cmp ecx edx +
jnz loc_410146  +
jmp loc_41016A  +
cmp ecx eax +
jz loc_410168  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_410140  +
mov [esp+28h+var_20] offset aBfd_hash_renam +
mov [esp+28h+var_24] 243h +
mov [esp+28h+var_28] offset a____Binutil_10 +
call sub_40C6F0  +
mov eax edx +
mov edx [ecx] +
mov [eax] edx +
mov eax [esp+28h+arg_4] +
mov [ecx+4] eax +
movzx edx byte ptr [eax] +
lea edi [eax+1] +
xor eax eax +
test edx edx +
jz loc_41019C  +
mov ebp edx +
add edi 1 +
shl ebp 11h +
add edx ebp +
add edx eax +
mov eax edx +
shr eax 2 +
xor eax edx +
movzx edx byte ptr [edi-1] +
test edx edx +
jnz loc_410181  +
sub edi [esp+28h+arg_4] +
sub edi 1 +
add eax edi +
shl edi 11h +
lea edx [eax+edi] +
mov eax edx +
shr eax 2 +
xor eax edx +
xor edx edx +
mov [ecx+8] eax +
div  ebx +
mov eax [esi] +
lea eax [eax+edx*4] +
mov edx [eax] +
mov [ecx] edx +
mov [eax] ecx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 18h +
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
test ebx ebx +
mov edx [eax+8] +
jz loc_410262  +
lea ecx [ebx+7] +
and ecx 0FFFFFFF8h +
jnz loc_410267  +
mov [esp+14h+var_10] ecx +
mov [esp+14h+var_14] edx +
call sub_45C4A0  +
test eax eax +
jz loc_41027F  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov ecx 8 +
mov esi [edx+4] +
cmp esi ecx +
jb loc_41024C  +
mov eax [edx] +
sub esi ecx +
mov [edx+4] esi +
add eax ecx +
mov [edx] eax +
sub eax ecx +
test eax eax +
jnz loc_41025C  +
test ebx ebx +
jz loc_41025C  +
mov [esp+14h+var_14] 6 +
mov [esp+14h+var_8] eax +
call sub_40C770  +
mov eax [esp+14h+var_8] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
test edx edx +
jz loc_4102C0  +
mov dword ptr [edx+0Ch] 0FFFFFFFFh +
mov eax edx +
mov dword ptr [edx+10h] 0 +
add esp 1Ch +
retn   +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] 14h +
mov [esp+1Ch+var_1C] eax +
call sub_410230  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_4102AB  +
jmp loc_4102BB  +
***
mov ecx [esp+4] +
xor edx edx +
mov eax ds:dword_47AA80[edx*4] +
cmp eax ecx +
jnb loc_4103AE  +
add edx 1 +
cmp edx 0Bh +
jnz loc_410396  +
mov eax 10001h +
mov dword_4760AC eax +
retn   +
***
mov [esp+18h+var_18] 2Ch +
call sub_40EFC0  +
test eax eax +
mov ebx eax +
jz loc_410420  +
mov eax dword_4760AC +
mov [esp+18h+var_10] 14h +
mov [esp+18h+var_14] offset sub_4102A0 +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
call sub_40FC80  +
test eax eax +
jz loc_410424  +
mov dword ptr [ebx+1Ch] 0 +
mov eax ebx +
mov dword ptr [ebx+20h] 0 +
mov dword ptr [ebx+24h] 0 +
mov dword ptr [ebx+28h] 0 +
add esp 18h +
pop ebx  +
retn   +
xor eax eax +
jmp loc_410419  +
mov [esp+18h+var_18] ebx +
call free  +
xor eax eax +
jmp loc_410419  +
***
sub esp 0Ch +
call sub_4103C0  +
test eax eax +
jz loc_410443  +
mov dword ptr [eax+28h] 1 +
add esp 0Ch +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call sub_45C5B0  +
mov dword ptr [ebx+8] 0 +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_8] +
mov esi [esp+1Ch+arg_0] +
test ebx ebx +
jz loc_4104D0  +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
call sub_40FFC0  +
test eax eax +
mov ebx eax +
jz loc_410540  +
mov eax [eax+0Ch] +
cmp eax 0FFFFFFFFh +
jz loc_410503  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_18] 14h +
mov [esp+1Ch+var_1C] esi +
call sub_410230  +
test eax eax +
mov ebx eax +
jz loc_410540  +
mov ecx [esp+1Ch+arg_C] +
mov eax [esp+1Ch+arg_4] +
test ecx ecx +
jnz loc_410560  +
mov [ebx+4] eax +
mov dword ptr [ebx+0Ch] 0FFFFFFFFh +
mov dword ptr [ebx+10h] 0 +
mov ebp [esi+1Ch] +
mov eax [esp+1Ch+arg_4] +
mov [ebx+0Ch] ebp +
mov [esp+1Ch+var_1C] eax +
call strlen  +
add eax ebp +
lea edx [eax+1] +
mov [esi+1Ch] edx +
mov edx [esi+28h] +
test edx edx +
jnz loc_410550  +
mov eax [esi+20h] +
test eax eax +
jz loc_4105A0  +
mov eax [esi+24h] +
mov [eax+10h] ebx +
mov [esi+24h] ebx +
mov eax [ebx+0Ch] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebp 2 +
add eax 3 +
mov [ebx+0Ch] ebp +
mov [esi+1Ch] eax +
jmp loc_410524  +
mov [esp+1Ch+var_1C] eax +
call strlen  +
mov [esp+1Ch+var_1C] esi +
lea edi [eax+1] +
mov [esp+1Ch+var_18] edi +
call sub_410230  +
test eax eax +
mov ebp eax +
jz loc_410540  +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] edi +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_18] eax +
call memcpy  +
mov [ebx+4] ebp +
jmp loc_4104F5  +
mov [esi+20h] ebx +
jmp loc_410531  +
***
mov eax [esp+arg_0] +
mov eax [eax+1Ch] +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_0] +
mov ebx [eax+20h] +
mov ecx [eax+28h] +
test ebx ebx +
mov [esp+2Ch+var_20] ecx +
jnz loc_4105E7  +
jmp loc_410650  +
mov ebx [ebx+10h] +
test ebx ebx +
jz loc_410650  +
mov esi [ebx+4] +
mov [esp+2Ch+var_2C] esi +
call strlen  +
lea ebp [eax+1] +
mov eax [esp+2Ch+var_20] +
test eax eax +
jz loc_41062D  +
mov eax [edi+4] +
lea edx [esp+2Ch+var_E] +
mov eax [eax+3Ch] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] ebp +
call eax  +
lea eax [esp+2Ch+var_E] +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] 2 +
mov [esp+2Ch+var_2C] eax +
call sub_405F60  +
cmp eax 2 +
jnz loc_410641  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] esi +
call sub_405F60  +
cmp eax ebp +
jz loc_4105E0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 14h +
mov eax dword_4760C0 +
mov [edx+4] eax +
mov eax [esi+6Ch] +
mov [edx+94h] esi +
mov [edx+8] eax +
mov eax [esi+4] +
mov eax [eax+9Ch] +
mov [esp+0Ch+var_8] edx +
mov [esp+0Ch+var_C] esi +
call eax  +
test eax eax +
jz loc_4106D0  +
mov eax [esi+68h] +
add dword ptr [esi+6Ch] 1 +
add dword_4760C0 1 +
test eax eax +
mov dword ptr [ebx+0Ch] 0 +
jz loc_4106C0  +
mov [ebx+10h] eax +
mov [eax+0Ch] ebx +
mov [esi+68h] ebx +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [ebx+10h] 0 +
mov [esi+64h] ebx +
jmp loc_4106B2  +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov ecx [ebx+54h] +
mov eax [ebx+48h] +
mov dword ptr [ebx+64h] 0 +
mov dword ptr [ebx+68h] 0 +
lea edx ds:0[ecx*4] +
mov dword ptr [ebx+6Ch] 0 +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] eax +
call memset  +
mov dword ptr [ebx+58h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
add eax 48h +
mov [esp+1Ch+var_1C] eax +
call sub_40FFC0  +
test eax eax +
jz loc_410875  +
add eax 10h +
add esp 1Ch +
retn   +
xor eax eax +
jmp loc_410871  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov esi [esp+1Ch+arg_0] +
mov ebx [eax-10h] +
mov ebp [eax-8] +
mov edi [eax] +
test ebx ebx +
jnz loc_4108A6  +
jmp loc_4108D0  +
mov ebx [ebx] +
test ebx ebx +
jz loc_4108D0  +
cmp [ebx+8] ebp +
jnz loc_4108A0  +
mov [esp+1Ch+var_18] edi +
mov eax [ebx+4] +
mov [esp+1Ch+var_1C] eax +
call strcmp  +
test eax eax +
jnz loc_4108A0  +
add esp 1Ch +
lea eax [ebx+10h] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jz loc_410910  +
mov esi [esi+9Ch] +
test esi esi +
jz loc_410910  +
lea eax [esi+48h] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] eax +
call sub_40FFC0  +
test eax eax +
jz loc_4108D4  +
add esp 1Ch +
add eax 10h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
add eax 48h +
mov [esp+1Ch+var_1C] eax +
call sub_40FFC0  +
test eax eax +
mov edx eax +
jz loc_41097A  +
test byte ptr [edx+26h] 10h +
lea eax [eax+10h] +
jz loc_410966  +
jmp loc_41097C  +
test byte ptr [eax+16h] 10h +
jnz loc_41097C  +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] 0 +
call sub_410880  +
test eax eax +
jnz loc_410960  +
xor eax eax +
add esp 1Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov esi [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
add eax 48h +
mov [esp+4] esi +
mov [esp] eax +
call sub_40FFC0  +
test eax eax +
mov ebx eax +
jz loc_410A08  +
mov edi [eax+8] +
mov eax edi +
jmp loc_4109C9  +
mov ebx [ebx] +
test ebx ebx +
jz loc_410A08  +
mov eax [ebx+8] +
cmp eax edi +
jnz loc_4109C0  +
mov [esp+4] esi +
mov eax [ebx+4] +
mov [esp] eax +
call strcmp  +
test eax eax +
jnz loc_4109C0  +
mov eax [esp+3Ch] +
lea ebp [ebx+10h] +
mov [esp+4] ebp +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp] eax +
call dword ptr [esp+38h]  +
test eax eax +
jz loc_4109C0  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor ebp ebp +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx ebp +
mov [esp+8] edx +
lea ebp [edx+1] +
mov dword ptr [esp+4] offset a_D +
mov [esp] edi +
call sprintf  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov [esp] esi +
call sub_40FFC0  +
test eax eax +
jnz loc_410A80  +
mov eax [esp+38h] +
test eax eax +
jz loc_410AE0  +
mov eax [esp+38h] +
mov [eax] ebp +
mov eax ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx 1 +
jmp loc_410A70  +
***
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
jmp loc_410AD1  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
test byte ptr [ebx+2Bh] 10h +
jnz loc_410C00  +
mov edi offset aAbs +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_410B90  +
mov edi offset aCom +
mov ecx 6 +
mov esi ebp +
cmps   +
jnz loc_410B72  +
mov edi offset off_4760E0 +
mov eax [ebx+4] +
mov eax [eax+9Ch] +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebx +
call eax  +
test eax eax +
jz loc_410BF6  +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi offset aUnd +
mov ecx 6 +
mov esi ebp +
cmps   +
jnz loc_410B97  +
mov edi offset off_476188 +
jmp loc_410B4E  +
mov edi offset off_476230 +
jmp loc_410B4E  +
mov edi offset aInd +
mov ecx 6 +
mov esi ebp +
cmps   +
mov edi offset off_4762D8 +
setnbe dl  +
setb al  +
cmp dl al +
jz loc_410B4E  +
lea eax [ebx+48h] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call sub_40FFC0  +
test eax eax +
mov ecx eax +
jz loc_410BF6  +
mov esi [ecx+10h] +
lea edx [eax+10h] +
mov eax edx +
test esi esi +
jnz loc_410B6A  +
mov [ecx+10h] ebp +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_410660  +
xor eax eax +
jmp loc_410B6A  +
mov [esp+1Ch+var_1C] 5 +
call sub_40C770  +
xor eax eax +
jmp loc_410B6A  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
mov edx [esp+2Ch+arg_8] +
test byte ptr [ebp+2Bh] 10h +
jnz loc_410DB7  +
mov [esp+2Ch+var_10] edx +
mov edi offset aAbs +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_410D8F  +
mov edi offset aCom +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_410D8F  +
mov edi offset aUnd +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_410D8F  +
mov edi offset aInd +
mov ecx 6 +
mov esi ebx +
cmps   +
jz loc_410D8F  +
lea eax [ebp+48h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 1 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] eax +
call sub_40FFC0  +
test eax eax +
jz loc_410D8F  +
mov edx [eax+10h] +
test edx edx +
mov edx [esp+2Ch+var_10] +
jz loc_410DA0  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [eax+24h] edx +
lea edx [eax+10h] +
mov [eax+10h] ebx +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_410660  +
mov [esp+2Ch+var_2C] 5 +
call sub_40C770  +
jmp loc_410D8F  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_410D00  +
add esp 1Ch +
retn   +
***
mov eax dword_4760C0 +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_8] +
mov [eax+14h] edx +
mov eax 1 +
retn   +
***
jmp sub_410E30  +
***
mov eax [esp+arg_8] +
mov edx [esp+arg_4] +
mov [edx] eax +
sub edx 10h +
mov [esp+arg_4] eax +
mov eax [esp+arg_0] +
mov [esp+arg_8] edx +
add eax 48h +
mov [esp+arg_0] eax +
jmp sub_410110  +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_8] +
mov edi [esi+64h] +
test edi edi +
jz loc_410E91  +
mov [esp+1Ch+var_18] edi +
add ebx 1 +
mov [esp+1Ch+var_14] ebp +
mov [esp+1Ch+var_1C] esi +
call [esp+1Ch+arg_4]  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_410E78  +
cmp [esi+6Ch] ebx +
jnz loc_410E9E  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_14] offset aBfd_map_over_s +
mov [esp+1Ch+var_18] 573h +
mov [esp+1Ch+var_1C] offset a____Binutil_11 +
call sub_40C6F0  +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+48h+var_18] +
mov ebp [esp+48h+var_14] +
mov edi [esp+48h+var_10] +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_410EE7  +
jmp loc_410F02  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_410F02  +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] esi +
call ebp  +
test eax eax +
jz loc_410EE0  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
test byte ptr [eax+2Bh] 10h +
jnz loc_410F31  +
mov eax [esp+1Ch+arg_4] +
mov edx [esp+1Ch+arg_8] +
mov [eax+24h] edx +
mov eax 1 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] 5 +
call sub_40C770  +
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_C] +
mov edi [esp+2Ch+arg_10] +
mov ebx [esp+2Ch+arg_14] +
test byte ptr [ebp+15h] 1 +
jz loc_411022  +
mov ecx [ebp+24h] +
cmp ecx esi +
jb loc_410F90  +
cmp ecx ebx +
jb loc_410F90  +
mov eax ebx +
xor edx edx +
add eax esi +
adc edx edi +
cmp edx 0 +
jl loc_410FA6  +
jg loc_410F90  +
cmp eax ecx +
jbe loc_410FA6  +
nop   +
mov [esp+2Ch+var_2C] 11h +
call sub_40C770  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_0] +
test byte ptr [eax+28h] 10h +
jz loc_411038  +
mov eax [ebp+6Ch] +
test eax eax +
jz loc_410FD7  +
add eax esi +
cmp eax [esp+2Ch+arg_8] +
jz loc_410FD7  +
mov edx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call memcpy  +
mov eax [esp+2Ch+arg_0] +
mov edx [esp+2Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+154h] +
mov [esp+2Ch+var_1C] edi +
mov edi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_18] ebx +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] ebp +
call eax  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_410F9E  +
mov eax [esp+2Ch+arg_0] +
or byte ptr [eax+2Bh] 10h +
add esp 2Ch +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] 0Eh +
call sub_40C770  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] 5 +
call sub_40C770  +
xor eax eax +
jmp loc_410F9E  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+2Ch+arg_4] +
mov eax [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_C] +
mov ebx [edx+14h] +
mov [esp+2Ch+var_20] eax +
mov ebp [esp+2Ch+arg_10] +
mov ecx [esp+2Ch+arg_14] +
test bl 80h +
jnz loc_411122  +
movzx eax byte ptr [esi+28h] +
and eax 18h +
cmp al 10h +
jz loc_4110E6  +
mov eax [edx+28h] +
test eax eax +
jz loc_4110E6  +
cmp eax edi +
jb loc_4110D0  +
cmp eax ecx +
jb loc_4110D0  +
mov [esp+2Ch+var_1C] ecx +
add [esp+2Ch+var_1C] edi +
mov [esp+2Ch+var_18] 0 +
adc [esp+2Ch+var_18] ebp +
cmp [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_10] 0 +
jl loc_4110F0  +
jg loc_4110D0  +
mov eax [esp+2Ch+var_14] +
cmp [esp+2Ch+var_1C] eax +
jbe loc_4110F0  +
lea esi [esi+0] +
mov [esp+2Ch+var_2C] 11h +
call sub_40C770  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+24h] +
jmp loc_411091  +
test ecx ecx +
jz loc_411147  +
test bh 1 +
jz loc_411122  +
test bh 40h +
jz loc_411150  +
mov eax [edx+6Ch] +
test eax eax +
jz loc_411180  +
add eax edi +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_2C] eax +
call memmove  +
mov eax 1 +
jmp loc_4110DE  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call memset  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 1 +
jmp loc_4110DE  +
mov eax [esi+4] +
mov eax [eax+0A0h] +
mov [esp+2Ch+arg_C] edi +
mov edi [esp+2Ch+var_20] +
mov [esp+2Ch+arg_10] ebp +
mov [esp+2Ch+arg_0] esi +
mov [esp+2Ch+arg_14] ecx +
mov [esp+2Ch+arg_8] edi +
mov [esp+2Ch+arg_4] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
and bh 0BFh +
mov [edx+14h] ebx +
mov [esp+2Ch+var_2C] 5 +
call sub_40C770  +
xor eax eax +
jmp loc_4110DE  +
***
mov eax [esp+arg_8] +
mov dword ptr [eax] 0 +
jmp sub_41F0A0  +
***
xor eax eax +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 10h +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_411970  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 10h +
mov eax [eax] +
mov [esp+18h+var_18] eax +
call strlen  +
mov [esp+18h+var_18] edi +
mov ebx eax +
call strlen  +
mov [esp+18h+var_18] esi +
lea eax [ebx+eax+0Ah] +
mov [esp+18h+var_14] eax +
call sub_407B20  +
mov ebx eax +
mov eax offset unk_47AC40 +
test ebx ebx +
jz loc_411299  +
mov eax [esi] +
mov [esp+18h+var_C] edi +
mov [esp+18h+var_14] offset a_binary_S_S +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call sprintf  +
movzx ecx byte ptr [ebx] +
test cl cl +
jz loc_411297  +
mov edx ebx +
lea esi [esi+0] +
test ds:byte_495EE0[ecx+ecx] 8Ch +
jnz loc_41128D  +
mov byte ptr [edx] 5Fh +
add edx 1 +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_411280  +
mov eax ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov edi [esp+34h] +
mov ebp [esi+0A0h] +
mov dword ptr [esp+4] 48h +
mov [esp] esi +
call sub_407B20  +
test eax eax +
mov ebx eax +
jz loc_411370  +
mov [eax] esi +
mov edx offset aStart +
mov eax esi +
call sub_411220  +
mov edx offset aEnd +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 2 +
mov [ebx+10h] ebp +
mov dword ptr [ebx+14h] 0 +
mov [ebx+18h] esi +
mov [ebx+4] eax +
mov eax esi +
call sub_411220  +
mov edx offset aSize +
mov [ebx+1Ch] eax +
mov eax [ebp+24h] +
mov dword ptr [ebx+24h] 2 +
mov [ebx+28h] ebp +
mov dword ptr [ebx+2Ch] 0 +
mov [ebx+20h] eax +
mov eax esi +
mov [ebx+30h] esi +
call sub_411220  +
mov [ebx+34h] eax +
mov eax [ebp+24h] +
mov dword ptr [ebx+3Ch] 2 +
mov dword ptr [ebx+40h] offset off_476230 +
mov dword ptr [ebx+44h] 0 +
mov [ebx+38h] eax +
lea eax [ebx+18h] +
mov [edi] ebx +
add ebx 30h +
mov [edi+4] eax +
mov eax 3 +
mov [edi+8] ebx +
mov dword ptr [edi+0Ch] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_411368  +
***
push ebx  +
sub esp 48h +
mov ebx [esp+50h] +
test byte ptr [ebx+2Bh] 1 +
jnz loc_4113F0  +
lea eax [esp+10h] +
mov dword ptr [ebx+7Ch] 3 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_406070  +
test eax eax +
js loc_411403  +
mov dword ptr [esp+8] 123h +
mov dword ptr [esp+4] offset a_data +
mov [esp] ebx +
call sub_410D00  +
test eax eax +
jz loc_411413  +
mov edx [esp+28h] +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [eax+50h] 0 +
mov dword ptr [eax+54h] 0 +
mov [eax+24h] edx +
mov [ebx+0A0h] eax +
mov eax [ebx+4] +
add esp 48h +
pop ebx  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_40C770  +
add esp 48h +
xor eax eax +
pop ebx  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_40C770  +
xor eax eax +
jmp loc_4113EA  +
***
xor eax eax +
jmp loc_4113EA  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+38h] +
mov edi [esp+44h] +
mov edx [esp+40h] +
mov esi [esp+30h] +
mov [esp+4] eax +
mov eax [esp+3Ch] +
test edi edi +
mov ebp [esp+34h] +
mov [esp+0Ch] edx +
mov [esp+8] eax +
jz loc_4114CD  +
test byte ptr [esi+2Bh] 10h +
jnz loc_4114C1  +
mov eax [esi+64h] +
xor ebx ebx +
mov dword ptr [esp] 0 +
test eax eax +
mov edx eax +
jnz loc_411477  +
jmp loc_4114BD  +
mov edx [edx+0Ch] +
test edx edx +
jz loc_4114A7  +
mov ecx [edx+14h] +
and ecx 303h +
cmp ecx 103h +
jnz loc_411470  +
mov ecx [edx+24h] +
test ecx ecx +
jz loc_411470  +
mov ecx [esp] +
test ecx ecx +
jnz loc_4114E0  +
mov ebx [edx+20h] +
mov edx [edx+0Ch] +
mov dword ptr [esp] 1 +
test edx edx +
jnz loc_411477  +
mov edx [eax+20h] +
mov dword ptr [eax+54h] 0 +
sub edx ebx +
mov [eax+50h] edx +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_4114A7  +
or byte ptr [esi+2Bh] 10h +
mov eax [ebp+14h] +
test al 3 +
jz loc_4114CD  +
test ah 2 +
jz loc_4114F2  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [edx+20h] +
mov dword ptr [esp] 1 +
cmp ecx ebx +
jnb loc_411470  +
mov ebx ecx +
jmp loc_411499  +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+44h] edi +
mov [esp+34h] ebp +
mov [esp+3Ch] eax +
mov eax [esp+4] +
mov [esp+30h] esi +
mov [esp+40h] edx +
mov [esp+38h] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_40F950  +
***
push ebx  +
sub esp 18h +
mov edx [esp+30h] +
mov ebx [esp+20h] +
mov eax [esp+2Ch] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] edx +
mov [esp] ebx +
mov [esp+4] eax +
call sub_4060C0  +
xor edx edx +
test eax eax +
jnz loc_41157F  +
mov eax [esp+34h] +
mov [esp+8] ebx +
mov [esp+4] eax +
mov eax [esp+28h] +
mov [esp] eax +
call sub_405EB0  +
xor edx edx +
cmp [esp+34h] eax +
setz dl  +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
***
xor ebx ebx +
mov ecx [esp+arg_0] +
mov eax [edx] +
cmp [ecx] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
***
mov eax [esp+arg_4] +
mov edx [esp+arg_0] +
test dword ptr [eax+0Ch] 4182h +
jnz loc_4115D7  +
mov eax [eax+4] +
test eax eax +
jz loc_4115D7  +
mov ecx [edx+4] +
mov ecx [ecx+11Ch] +
mov [esp+arg_4] eax +
jmp ecx  +
xor eax eax +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
movzx edx byte ptr [eax+28h] +
mov ecx edx +
and ecx 7 +
cmp cl 1 +
jnz loc_411611  +
and edx 8 +
jnz loc_411611  +
mov edx [esp+1Ch+arg_4] +
mov [eax+78h] edx +
mov edx [esp+1Ch+arg_8] +
mov [eax+7Ch] edx +
mov eax 1 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_1C] 5 +
call sub_40C770  +
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_8] +
mov edx [eax+10h] +
mov ebx [eax+0Ch] +
test edx edx +
jz loc_411780  +
mov edx [edx+1Ch] +
add edx [eax+8] +
mov [esp+3Ch+var_34] edx +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_40D0A0  +
test bl 8 +
mov [esp+3Ch+var_10] 46h +
jnz loc_411685  +
test bh 40h +
mov [esp+3Ch+var_10] 66h +
jz loc_411760  +
test bl 4 +
mov ebp 64h +
jnz loc_4116A1  +
mov eax ebx +
and eax 8000h +
cmp eax 1 +
sbb ebp ebp +
and ebp 0FFFFFFDCh +
add ebp 44h +
test bh 20h +
mov edi 49h +
jnz loc_4116BD  +
mov eax ebx +
and eax 400000h +
cmp eax 1 +
sbb edi edi +
and edi 0FFFFFFB7h +
add edi 69h +
mov eax ebx +
and eax 1000h +
cmp eax 1 +
mov eax ebx +
sbb ecx ecx +
and eax 800h +
and ecx 0FFFFFFC9h +
add ecx 57h +
cmp eax 1 +
sbb edx edx +
mov eax ebx +
and edx 0FFFFFFDDh +
and eax 80h +
add edx 43h +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFA9h +
add eax 77h +
test bl 1 +
jz loc_411742  +
and ebx 2 +
cmp ebx 1 +
sbb esi esi +
and esi 4Bh +
add esi 21h +
mov ebx [esp+3Ch+var_10] +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_20] ebp +
mov [esp+3Ch+var_24] edi +
mov [esp+3Ch+var_1C] ebx +
mov [esp+3Ch+var_34] esi +
mov [esp+3Ch+var_28] ecx +
mov [esp+3Ch+var_2C] edx +
mov [esp+3Ch+var_38] offset aCCCCCCC +
mov [esp+3Ch+var_3C] eax +
call fprintf  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl 2 +
mov esi 67h +
jnz loc_411706  +
and ebx 800000h +
cmp ebx 1 +
sbb esi esi +
and esi 0FFFFFFABh +
add esi 75h +
jmp loc_411706  +
mov eax ebx +
and eax 10000h +
cmp eax 1 +
sbb eax eax +
mov [esp+3Ch+var_10] eax +
and [esp+3Ch+var_10] 0FFFFFFD1h +
add [esp+3Ch+var_10] 4Fh +
jmp loc_411685  +
mov eax [eax+8] +
mov [esp+3Ch+var_34] eax +
jmp loc_411653  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 18h +
mov [esp] ebx +
call sub_407C00  +
test eax eax +
jz loc_4117AE  +
mov [eax] ebx +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
mov ebx [edx+10h] +
test ebx ebx +
jz loc_4117FE  +
test byte ptr [ebx+15h] 10h +
mov eax 43h +
jz loc_4117E5  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx offset off_476188 +
jz loc_4118A0  +
cmp ebx offset off_4762D8 +
mov eax 49h +
jz loc_4117DD  +
mov esi [edx+0Ch] +
mov eax 69h +
test esi 400000h +
jnz loc_4117DD  +
test esi 80h +
jnz loc_4118C0  +
test esi 800000h +
mov eax 75h +
jnz loc_4117DD  +
test esi 3 +
mov al 3Fh +
jz loc_4117DD  +
cmp ebx offset off_476230 +
jz loc_4118D0  +
test ebx ebx +
jz loc_4117DD  +
mov eax [ebx] +
mov edi offset off_47AF20 +
mov ebp offset a_bss +
mov [esp+1Ch+var_10] eax +
mov eax 4 +
jmp loc_411869  +
add edi 8 +
mov ebp [edi] +
test ebp ebp +
jz loc_4118D7  +
mov [esp+1Ch+var_1C] ebp +
call strlen  +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call strncmp  +
test eax eax +
jnz loc_411858  +
movzx eax byte ptr [edi+4] +
cmp al 3Fh +
jz loc_4118D7  +
and esi 2 +
jz loc_411898  +
movzx eax al +
movzx eax ds:byte_495CE0[eax] +
movsx eax al +
jmp loc_4117DD  +
mov edx [edx+0Ch] +
mov al 55h +
test dl 80h +
jz loc_4117DD  +
mov eax edx +
shl eax 0Fh +
sar eax 1Fh +
add eax 77h +
jmp loc_4117DD  +
mov eax esi +
shl eax 0Fh +
sar eax 1Fh +
add eax 57h +
jmp loc_4117DD  +
mov eax 61h +
jmp loc_411889  +
mov edx [ebx+14h] +
mov eax 74h +
test dl 10h +
jnz loc_411889  +
test dl 20h +
jz loc_411906  +
test dl 8 +
mov eax 72h +
jnz loc_411889  +
and edx 400000h +
cmp edx 1 +
sbb eax eax +
and eax 0FFFFFFFDh +
add eax 67h +
jmp loc_411889  +
test dh 1 +
jnz loc_411921  +
and edx 400000h +
cmp edx 1 +
sbb eax eax +
and eax 0FFFFFFEFh +
add eax 73h +
jmp loc_411889  +
test dh 20h +
mov eax 4Eh +
jnz loc_411889  +
and edx 108h +
mov eax 6Eh +
cmp edx 108h +
mov edx 3Fh +
cmovnz eax edx +
jmp loc_411889  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov [esp] esi +
call sub_4117C0  +
cmp al 55h +
mov [ebx+4] al +
jz loc_4119B0  +
sub eax 76h +
cmp al 1 +
jbe loc_4119B0  +
mov eax [esi+10h] +
mov eax [eax+1Ch] +
add eax [esi+8] +
mov [ebx] eax +
mov eax [esi+4] +
mov [ebx+8] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esi+4] +
mov dword ptr [ebx] 0 +
mov [ebx+8] eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+24h] +
mov ebx [esp+20h] +
test esi esi +
mov eax [ebx+4] +
jz loc_411A04  +
mov eax [eax+198h] +
mov [esp] ebx +
call eax  +
mov edx eax +
test edx edx +
js loc_411A15  +
mov eax 0 +
jnz loc_411A30  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+104h] +
mov [esp] ebx +
call eax  +
mov edx eax +
test edx edx +
jns loc_4119F6  +
mov dword ptr [esp] 7 +
call sub_40C770  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp] edx +
call sub_40EFC0  +
test eax eax +
mov edi eax +
jz loc_411A15  +
test esi esi +
mov eax [ebx+4] +
jnz loc_411A70  +
mov eax [eax+108h] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
test eax eax +
js loc_411A83  +
mov edx [esp+28h] +
mov [edx] edi +
mov edx [esp+2Ch] +
mov dword ptr [edx] 4 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+19Ch] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
test eax eax +
jns loc_411A58  +
mov dword ptr [esp] 7 +
call sub_40C770  +
mov [esp] edi +
call free  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+0Ch] +
mov eax [eax] +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_10] +
mov edi [esp+4Ch+arg_14] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_0] +
mov eax [eax] +
mov [edi] eax +
mov eax [esp+4Ch+arg_18] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_1C] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_20] +
mov eax [eax] +
test eax eax +
mov [esp+4Ch+var_30] eax +
jz loc_411EA2  +
mov esi [eax] +
test esi esi +
jz loc_411D58  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+4] +
test eax eax +
jz loc_411D58  +
mov edi [eax+28h] +
test edi edi +
mov [esp+4Ch+var_20] edi +
jz loc_411D65  +
mov eax [esp+4Ch+arg_8] +
mov edx [esp+4Ch+arg_C] +
add edx [eax+1Ch] +
mov eax [esp+4Ch+var_30] +
mov [esp+4Ch+var_2C] edx +
mov ebx [eax+18h] +
test ebx ebx +
jz loc_411B4D  +
cmp edx [eax+1Ch] +
jnb loc_411BC0  +
mov eax [esp+4Ch+var_30] +
xor ecx ecx +
mov ebp [esp+4Ch+var_2C] +
mov eax [eax+14h] +
mov [esp+4Ch+var_34] eax +
lea edx [eax-1] +
jmp loc_411B77  +
lea eax [eax+eax*2+3] +
cmp ebp [esi+eax*8] +
jb loc_411E90  +
mov ecx [esp+4Ch+var_34] +
add ecx 1 +
cmp ecx edx +
jz loc_411D58  +
mov edi [esp+4Ch+var_30] +
lea eax [ecx+edx] +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
mov esi [edi+10h] +
sar eax 1 +
mov [esp+4Ch+var_34] eax +
lea ebx [eax+eax*2] +
lea ebx [esi+ebx*8] +
cmp ebp [ebx] +
jnb loc_411B63  +
cmp ecx eax +
mov edx eax +
jz loc_411D58  +
lea eax [ecx+edx] +
mov ebx eax +
shr ebx 1Fh +
add eax ebx +
sar eax 1 +
mov [esp+4Ch+var_34] eax +
jmp loc_411B96  +
cmp edx [ebx+18h] +
jnb loc_411B4D  +
mov eax [esp+4Ch+var_30] +
mov ebp [eax+20h] +
mov eax [eax+24h] +
mov [esp+4Ch+var_28] eax +
mov eax [ebx+0Ch] +
cmp ebp [ebx+1Ch] +
mov [esp+4Ch+var_18] eax +
mov eax [ebx+8] +
mov [esp+4Ch+var_1C] eax +
jnb loc_411C48  +
mov edi [esp+4Ch+arg_0] +
xor esi esi +
mov [esp+4Ch+var_34] esi +
mov esi ebx +
mov [esp+4Ch+var_24] 0 +
lea esi [esi+0] +
movzx eax byte ptr [ebp+4] +
cmp al 46h +
jz loc_411D7D  +
jbe loc_411D71  +
cmp al 64h +
jz loc_411DC3  +
cmp al 84h +
lea esi [esi+0] +
jnz loc_411DE6  +
mov eax [edi+4] +
lea ecx [ebp+8] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
cmp [esp+4Ch+var_2C] eax +
jnb loc_411E00  +
add ebp 0Ch +
cmp [esi+1Ch] ebp +
ja loc_411C00  +
mov ebx esi +
mov eax [esp+4Ch+arg_10] +
mov dword ptr [eax] 1 +
mov eax [esp+4Ch+var_28] +
test eax eax +
jz loc_411E70  +
movzx eax byte ptr [eax] +
cmp al 5Ch +
jz loc_411E70  +
cmp al 2Fh +
jz loc_411E70  +
test al al +
jz loc_411C83  +
mov eax [esp+4Ch+var_28] +
cmp byte ptr [eax+1] 3Ah +
jz loc_411E70  +
mov eax [esp+4Ch+var_18] +
test eax eax +
jz loc_411E70  +
mov eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_4C] eax +
call strlen  +
mov edi eax +
mov eax [esp+4Ch+var_30] +
mov eax [eax+28h] +
test eax eax +
jz loc_411CC4  +
mov esi [esp+4Ch+var_18] +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] esi +
call sub_45B730  +
test eax eax +
jz loc_41212A  +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] eax +
call strlen  +
lea esi [eax+1] +
lea eax [esi+edi] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_407B20  +
mov edx [esp+4Ch+var_30] +
test eax eax +
mov [edx+28h] eax +
jz loc_412120  +
mov edx [esp+4Ch+var_18] +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_48] edx +
call memcpy  +
mov eax [esp+4Ch+var_30] +
add edi [eax+28h] +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] edi +
mov [esp+4Ch+var_48] eax +
call memcpy  +
mov eax [esp+4Ch+var_30] +
mov edi [esp+4Ch+arg_14] +
mov eax [eax+28h] +
mov [edi] eax +
mov esi [ebx+14h] +
test esi esi +
jz loc_411D58  +
mov [esp+4Ch+var_48] 3Ah +
mov [esp+4Ch+var_4C] esi +
call strchr  +
test eax eax +
jz loc_411D52  +
mov byte ptr [eax] 0 +
mov esi [ebx+14h] +
mov eax [esp+4Ch+arg_18] +
mov [eax] esi +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+24h] +
mov [esp+4Ch+var_20] eax +
jmp loc_411B2E  +
cmp al 24h +
jz loc_411DC3  +
cmp al 44h +
jnz loc_411C3E  +
mov ecx [esi+14h] +
test ecx ecx +
jz loc_411DF5  +
mov ebx [esi] +
mov eax [edi+4] +
lea ecx [ebp+8] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
add ebx eax +
cmp ebx [esp+4Ch+var_2C] +
jbe loc_411E43  +
mov edx [esp+4Ch+var_34] +
test edx edx +
jz loc_411E43  +
cmp [esp+4Ch+var_2C] ebx +
jb loc_411C46  +
mov [esp+4Ch+var_34] 1 +
jmp loc_411C3E  +
mov eax [esp+4Ch+var_34] +
or eax [esp+4Ch+var_24] +
jnz loc_411C46  +
mov [esp+4Ch+var_24] 1 +
mov [esp+4Ch+var_34] 0 +
jmp loc_411C3E  +
cmp al 48h +
jnz loc_411C3E  +
mov ecx [esi+14h] +
test ecx ecx +
jnz loc_411D84  +
xor ebx ebx +
jmp loc_411D86  +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
mov ecx [esp+4Ch+var_30] +
add eax [esp+4Ch+var_1C] +
mov edx eax +
mov [esp+4Ch+var_28] eax +
mov eax [esp+4Ch+var_20] +
add eax [ecx+0Ch] +
cmp edx eax +
jnb loc_411E80  +
cmp [esp+4Ch+var_1C] edx +
mov eax 0 +
cmovbe eax edx +
mov [esp+4Ch+var_28] eax +
mov eax [esp+4Ch+arg_1C] +
mov dword ptr [eax] 0 +
jmp loc_411C3E  +
mov eax [edi+4] +
lea ecx [ebp+6] +
mov eax [eax+34h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+arg_1C] +
mov [edx] eax +
mov eax [esp+4Ch+var_30] +
mov edx [esp+4Ch+var_28] +
mov [eax+20h] ebp +
mov [eax+1Ch] ebx +
mov [eax+24h] edx +
mov [eax+18h] esi +
jmp loc_411DAC  +
mov eax [esp+4Ch+arg_14] +
mov edi [esp+4Ch+var_28] +
mov [eax] edi +
jmp loc_411D31  +
mov [esp+4Ch+var_28] 0 +
jmp loc_411E34  +
mov eax [ebx+4] +
lea ebp [eax+0Ch] +
mov eax [ebx+10h] +
mov [esp+4Ch+var_28] eax +
jmp loc_411BD3  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] 2Ch +
mov [esp+4Ch+var_4C] eax +
call sub_407C00  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jz loc_412120  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset a_stab +
mov [esp+4Ch+var_4C] eax +
call sub_410840  +
mov edi [esp+4Ch+var_30] +
mov [edi] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset a_stabstr +
mov [esp+4Ch+var_4C] eax +
call sub_410840  +
mov edx [edi] +
test edx edx +
mov ecx eax +
mov [edi+4] eax +
jz loc_412150  +
test eax eax +
jz loc_412150  +
mov eax [edx+28h] +
test eax eax +
jnz loc_411F11  +
mov eax [edx+24h] +
mov edx 0AAAAAAABh +
mul  edx +
shr edx 3 +
lea eax [edx+edx*2] +
shl eax 2 +
mov [esp+4Ch+var_34] eax +
mov eax [ecx+28h] +
test eax eax +
mov [esp+4Ch+var_20] eax +
jnz loc_411F37  +
mov eax [ecx+24h] +
mov [esp+4Ch+var_20] eax +
mov esi [esp+4Ch+var_34] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] eax +
call sub_407B20  +
mov edi [esp+4Ch+var_30] +
mov [edi+8] eax +
mov eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_407B20  +
mov edx [edi+8] +
test edx edx +
mov [edi+0Ch] eax +
jz loc_412120  +
test eax eax +
jz loc_412120  +
mov eax [edi] +
mov [esp+4Ch+var_38] esi +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] eax +
call sub_411050  +
test eax eax +
jz loc_412120  +
mov eax [esp+4Ch+var_30] +
mov edi [esp+4Ch+var_20] +
mov edx [eax+0Ch] +
mov eax [eax+4] +
mov [esp+4Ch+var_38] edi +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] eax +
call sub_411050  +
test eax eax +
jz loc_412120  +
mov eax [esp+4Ch+var_30] +
mov eax [eax] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call loc_40C7C0  +
test eax eax +
mov ebx eax +
js loc_412120  +
mov [esp+4Ch+var_4C] eax +
call sub_40EFC0  +
test eax eax +
mov edi eax +
jnz loc_412022  +
test ebx ebx +
jnz loc_412120  +
mov eax [esp+4Ch+var_30] +
mov edx [eax] +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_44] edi +
mov [esp+4Ch+var_48] edx +
mov [esp+4Ch+var_40] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_40C800  +
test eax eax +
js loc_4123CC  +
jz loc_4121A8  +
mov esi [edi] +
test esi esi +
jz loc_4121AC  +
mov ebp edi +
nop   +
jmp loc_4120E8  +
cmp dword ptr [eax+8] 2 +
jnz loc_4120FD  +
cmp dword ptr [eax+0Ch] 20h +
jnz loc_4120FD  +
mov ecx [eax+10h] +
test ecx ecx +
jnz loc_4120FD  +
mov ebx [eax+14h] +
test ebx ebx +
jnz loc_4120FD  +
cmp edx 0FFFFFFFFh +
jnz loc_4120FD  +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov edx [eax+28h] +
mov eax [esp+4Ch+var_30] +
mov eax [eax+8] +
add eax [esi+4] +
mov [esp+4Ch+var_4C] eax +
call edx  +
mov edx [esi+0Ch] +
mov ebx [esp+4Ch+arg_0] +
and eax [edx+28h] +
mov edx [esi] +
mov ecx [edx] +
mov edx [ebx+4] +
mov ebx [edx+30h] +
mov edx [esp+4Ch+var_30] +
mov edx [edx+8] +
add edx [esi+4] +
mov [esp+4Ch+var_48] edx +
mov edx [ecx+10h] +
mov edx [edx+1Ch] +
add edx [ecx+8] +
add edx [esi+8] +
add eax edx +
mov [esp+4Ch+var_4C] eax +
call ebx  +
add ebp 4 +
mov esi [ebp+0] +
test esi esi +
jz loc_4121AC  +
mov eax [esi+0Ch] +
mov edx [eax+2Ch] +
test edx edx +
jz loc_4120DA  +
mov ebx [eax+4] +
test ebx ebx +
jz loc_412065  +
mov [esp+4Ch+var_4C] offset aUnsupported_st +
call off_476094  +
mov [esp+4Ch+var_4C] 5 +
call sub_40C770  +
mov [esp+4Ch+var_4C] edi +
call free  +
nop   +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4Ch+var_28] +
mov esi [esp+4Ch+var_30] +
mov [esp+4Ch+var_48] eax +
mov eax [esi+28h] +
add eax edi +
mov [esp+4Ch+var_4C] eax +
call sub_45B6E0  +
test eax eax +
jnz loc_411CC4  +
jmp loc_411D24  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset aGdb_symbols +
mov [esp+4Ch+var_4C] eax +
call sub_410840  +
mov edi [esp+4Ch+var_30] +
mov [edi] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset aGdb_strings +
mov [esp+4Ch+var_4C] eax +
call sub_410840  +
mov edx [edi] +
test edx edx +
mov ecx eax +
mov [edi+4] eax +
jz loc_412191  +
test eax eax +
jnz loc_411F07  +
mov eax [esp+4Ch+arg_20] +
mov edi [esp+4Ch+var_30] +
mov [eax] edi +
mov eax 1 +
jmp loc_411D5D  +
test edi edi +
jz loc_4121B4  +
mov [esp+4Ch+var_4C] edi +
call free  +
mov edi [esp+4Ch+var_30] +
xor esi esi +
mov ebp [esp+4Ch+var_34] +
mov ecx [edi+8] +
mov eax ebp +
mov dword ptr [edi+14h] 0 +
add eax ecx +
mov ebx ecx +
cmp ecx eax +
jb loc_4121E6  +
jmp loc_412233  +
cmp al 24h +
jz loc_412361  +
lea eax [ecx+ebp] +
add ebx 0Ch +
cmp eax ebx +
jbe loc_412227  +
movzx eax byte ptr [ebx+4] +
cmp al 64h +
jnz loc_4121D4  +
test esi esi +
jz loc_4121F6  +
add dword ptr [edi+14h] 1 +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebx +
call eax  +
mov ecx [edi+8] +
test eax eax +
lea eax [ecx+ebp] +
jz loc_41237E  +
lea edx [ebx+10h] +
mov esi ebx +
cmp eax edx +
jbe loc_4121DF  +
cmp byte ptr [ebx+10h] 64h +
jnz loc_4121DF  +
add ebx 0Ch +
jmp loc_4121DF  +
test esi esi +
jz loc_412233  +
mov eax [esp+4Ch+var_30] +
add dword ptr [eax+14h] 1 +
mov eax [esp+4Ch+var_30] +
mov eax [eax+14h] +
test eax eax +
jz loc_411D58  +
mov edi [esp+4Ch+var_30] +
add eax 1 +
mov [edi+14h] eax +
imul eax eax +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_407B20  +
test eax eax +
mov ebx eax +
mov [edi+10h] eax +
jz loc_412120  +
mov ebp [edi+8] +
cmp dword ptr [edi+14h] 0 +
mov esi [edi+0Ch] +
mov ecx ebp +
jle loc_412548  +
mov eax [esp+4Ch+var_34] +
add eax ebp +
cmp ebp eax +
jnb loc_412548  +
xor edi edi +
xor ecx ecx +
mov edx edi +
mov ebx ecx +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_24] esi +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_1C] 0 +
jmp loc_41231C  +
cmp al 64h +
jz loc_4123DD  +
cmp al 84h +
jnz loc_4122F5  +
mov eax [edi+4] +
mov [esp+4Ch+var_18] edx +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
mov edx [esp+4Ch+var_30] +
lea ebx [esi+eax] +
mov eax [esp+4Ch+var_20] +
add eax [edx+0Ch] +
mov edx [esp+4Ch+var_18] +
cmp ebx eax +
jnb loc_4123C5  +
cmp ebx esi +
mov eax 0 +
cmovb ebx eax +
mov eax [esp+4Ch+var_30] +
add ebp 0Ch +
mov ecx [esp+4Ch+var_28] +
cmp ecx [eax+14h] +
jge loc_4125B6  +
mov ecx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_34] +
add eax [ecx+8] +
cmp ebp eax +
jnb loc_4125B6  +
movzx eax byte ptr [ebp+4] +
cmp al 24h +
jz loc_4124BF  +
ja loc_4122B6  +
test al al +
jnz loc_4122F5  +
mov ecx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_20] +
add eax [ecx+0Ch] +
sub eax esi +
cmp eax [esp+4Ch+var_1C] +
jb loc_4122F5  +
mov eax [edi+4] +
lea ecx [ebp+8] +
mov [esp+4Ch+var_18] edx +
add esi [esp+4Ch+var_1C] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+var_18] +
mov [esp+4Ch+var_1C] eax +
jmp loc_4122F5  +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebx +
call eax  +
test eax eax +
jz loc_412385  +
mov ecx [edi+8] +
add dword ptr [edi+14h] 1 +
lea eax [ecx+ebp] +
xor esi esi +
jmp loc_4121DF  +
mov ecx [edi+8] +
jmp loc_4121DC  +
mov eax [edi+4] +
lea ecx [ebp+0Ch] +
mov [esp+4Ch+var_24] ecx +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+var_30] +
mov ecx [esp+4Ch+var_24] +
mov [esp+4Ch+var_24] esi +
lea ebx [esi+eax] +
mov eax [esp+4Ch+var_20] +
add eax [edx+0Ch] +
mov edx ebp +
mov ebp ecx +
cmp ebx eax +
jnb loc_4123C5  +
cmp ebx esi +
jnb loc_4122F5  +
xor ebx ebx +
jmp loc_4122F5  +
test edi edi +
nop   +
jnz loc_412116  +
xor eax eax +
jmp loc_412122  +
test edx edx +
nop   +
jz loc_41243D  +
imul eax [esp+4Ch+var_28] +
mov ecx [esp+4Ch+var_30] +
mov [esp+4Ch+var_10] edx +
mov [esp+4Ch+var_18] eax +
add eax [ecx+10h] +
lea ecx [edx+8] +
mov [esp+4Ch+var_14] eax +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov edx [esp+4Ch+var_14] +
mov ecx [esp+4Ch+var_30] +
add [esp+4Ch+var_28] 1 +
mov [edx] eax +
mov edx [esp+4Ch+var_10] +
mov eax [esp+4Ch+var_18] +
add eax [ecx+10h] +
mov [eax+4] edx +
mov edx [esp+4Ch+var_24] +
mov [eax+10h] ebx +
mov dword ptr [eax+14h] 0 +
mov [eax+8] edx +
mov edx [esp+4Ch+var_2C] +
mov [eax+0Ch] edx +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
add eax esi +
cmp eax esi +
mov edx eax +
mov [esp+4Ch+var_2C] eax +
jz loc_4124AE  +
mov ecx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_20] +
add eax [ecx+0Ch] +
cmp edx eax +
jnb loc_4124A4  +
cmp edx esi +
mov eax 0 +
cmovnb eax edx +
mov [esp+4Ch+var_2C] eax +
mov ecx [esp+4Ch+var_30] +
lea edx [ebp+10h] +
mov eax [esp+4Ch+var_34] +
add eax [ecx+8] +
cmp edx eax +
jnb loc_41248D  +
cmp byte ptr [ebp+10h] 64h +
jz loc_41238D  +
mov ebx [esp+4Ch+var_2C] +
mov edx ebp +
mov [esp+4Ch+var_24] esi +
mov [esp+4Ch+var_2C] 0 +
jmp loc_4122F5  +
mov [esp+4Ch+var_2C] 0 +
jmp loc_412471  +
mov [esp+4Ch+var_2C] 0 +
xor ebx ebx +
xor edx edx +
jmp loc_4122F5  +
mov eax [edi+4] +
mov [esp+4Ch+var_18] edx +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] ebp +
call eax  +
mov edx [esp+4Ch+var_18] +
lea ecx [esi+eax] +
cmp ecx esi +
jz loc_4122F5  +
mov edx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_20] +
add eax [edx+0Ch] +
cmp ecx eax +
mov eax 0 +
cmovnb ecx eax +
imul eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_10] ecx +
mov [esp+4Ch+var_18] eax +
add eax [edx+10h] +
lea edx [ebp+8] +
mov [esp+4Ch+var_14] eax +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov edx [esp+4Ch+var_14] +
mov ecx [esp+4Ch+var_10] +
add [esp+4Ch+var_28] 1 +
mov [edx] eax +
mov edx [esp+4Ch+var_30] +
mov eax [esp+4Ch+var_18] +
add eax [edx+10h] +
mov edx [esp+4Ch+var_2C] +
mov [eax+4] ebp +
mov [eax+8] esi +
mov [eax+0Ch] edx +
xor edx edx +
mov [eax+10h] ebx +
mov [eax+14h] ecx +
jmp loc_4122F5  +
mov [esp+4Ch+var_28] 0 +
mov edi [esp+4Ch+var_28] +
mov edx [esp+4Ch+var_34] +
imul eax edi +
add edx ecx +
add eax ebx +
mov dword ptr [eax] 0FFFFFFFFh +
mov [eax+4] edx +
mov [eax+8] esi +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov eax edi +
mov edi [esp+4Ch+var_30] +
add eax 1 +
mov [edi+14h] eax +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_40] offset sub_411590 +
mov [esp+4Ch+var_44] 18h +
mov [esp+4Ch+var_4C] ebx +
call qsort  +
mov eax [esp+4Ch+arg_20] +
mov [eax] edi +
jmp loc_411B2E  +
test edx edx +
mov edi edx +
jz loc_412618  +
mov eax [esp+4Ch+var_30] +
lea edx [edx+8] +
mov ecx [esp+4Ch+arg_0] +
mov [esp+4Ch+var_1C] ebx +
imul ebp [esp+4Ch+var_28] +
mov ebx [eax+10h] +
mov eax [ecx+4] +
add ebx ebp +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov edx [esp+4Ch+var_30] +
mov ecx [esp+4Ch+var_1C] +
add [esp+4Ch+var_28] 1 +
mov [ebx] eax +
mov ebx [edx+10h] +
lea eax [ebx+ebp] +
mov [eax+4] edi +
mov edi [esp+4Ch+var_24] +
mov [eax+10h] ecx +
mov ecx [edx+8] +
mov dword ptr [eax+14h] 0 +
mov [eax+8] edi +
mov edi [esp+4Ch+var_2C] +
mov [eax+0Ch] edi +
jmp loc_412550  +
mov eax [esp+4Ch+var_30] +
mov ecx [eax+8] +
mov ebx [eax+10h] +
jmp loc_412550  +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_0] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jnz loc_412650  +
mov eax [edx+4] +
mov eax [eax+0C8h] +
add esp 1Ch +
jmp eax  +
mov [esp+1Ch+var_1C] 5 +
call sub_40C770  +
xor eax eax +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov edx [esp+20h] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jz loc_412694  +
mov dword ptr [esp] 5 +
call sub_40C770  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+0CCh] +
add esp 1Ch +
jmp eax  +
***
sub esp 1Ch +
mov edx [esp+20h] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jz loc_4126D4  +
mov dword ptr [esp] 5 +
call sub_40C770  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+0D4h] +
add esp 1Ch +
jmp eax  +
***
sub esp 1Ch +
mov edx [esp+20h] +
mov ecx [esp+24h] +
movzx eax byte ptr [edx+28h] +
and eax 7 +
cmp al 3 +
jnz loc_412711  +
movzx eax byte ptr [ecx+28h] +
and eax 7 +
cmp al 1 +
jz loc_412723  +
mov dword ptr [esp] 3 +
call sub_40C770  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax [edx+4] +
mov eax [eax+0D0h] +
add esp 1Ch +
jmp eax  +
***
jmp loc_412740  +
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
test ebx ebx +
jnz loc_412758  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+20h] +
test eax eax +
jz loc_41274D  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_412630  +
test eax eax +
mov esi eax +
jz loc_41274D  +
mov ebx [ebx] +
test ebx ebx +
jz loc_41274D  +
mov dword ptr [esp+4] 2Fh +
mov [esp] eax +
call strrchr  +
mov [esp] ebx +
mov dword ptr [esp+4] 2Fh +
lea edx [eax+1] +
test eax eax +
cmovnz esi edx +
call strrchr  +
mov [esp+4] esi +
test eax eax +
lea edx [eax+1] +
cmovnz ebx edx +
mov [esp] ebx +
call sub_45B6E0  +
test eax eax +
setz al  +
add esp 14h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+8] +
add eax 2 +
cmp eax 0Ah +
ja sub_412840  +
jmp ds:off_47AFDC[eax*4]  +
***
mov eax 2 +
add esp 1Ch +
retn   +
***
mov eax 4 +
add esp 1Ch +
retn   +
***
mov eax 1 +
add esp 1Ch +
retn   +
***
mov eax 8 +
add esp 1Ch +
retn   +
***
mov eax 10h +
add esp 1Ch +
retn   +
***
mov [esp+arg_4] offset aBfd_get_reloc_ +
mov [esp+arg_0] 1BAh +
mov dword ptr [esp+0] offset a____Binutil_12 +
call sub_40C6F0  +
lea esi [esi+0] +
push ebp  +
mov edx 1 +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_C] +
mov esi [esp+2Ch+arg_8] +
mov edi [esp+2Ch+arg_0] +
lea ecx [eax-1] +
mov eax edx +
shl eax cl +
lea eax [eax+eax-2] +
lea ecx [ebx-1] +
or eax 1 +
shl edx cl +
mov ebx eax +
mov ecx esi +
mov ebp eax +
lea edx [edx+edx-2] +
not ebp  +
shl ebx cl +
or edx 1 +
or edx ebx +
mov ebx [esp+2Ch+arg_10] +
mov ecx esi +
and ebx edx +
shr ebx cl +
cmp edi 1 +
jz loc_4128D7  +
jb loc_412910  +
cmp edi 2 +
jz loc_4128D1  +
cmp edi 3 +
nop   +
lea esi [esi+0] +
jnz loc_4128F2  +
xor eax eax +
test ebp ebx +
setnz al  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shr eax 1 +
mov ebp eax +
not ebp  +
xor eax eax +
and ebx ebp +
jz loc_4128C9  +
mov ecx esi +
xor eax eax +
shr edx cl +
and edx ebp +
cmp ebx edx +
setnz al  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_24] offset aBfd_check_over +
mov [esp+2Ch+var_28] 217h +
mov [esp+2Ch+var_2C] offset a____Binutil_12 +
call sub_40C6F0  +
nop   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_4] +
mov eax [ebx] +
mov ebp [ebx+0Ch] +
mov esi [eax] +
mov eax [esi+10h] +
cmp eax offset off_476230 +
jz loc_412B05  +
test ebp ebp +
jz loc_412AC0  +
cmp eax offset off_476188 +
mov [esp+3Ch+var_1C] 0 +
jz loc_412B25  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_4129A0  +
mov edx [esp+3Ch+arg_14] +
mov edi [esp+3Ch+arg_10] +
mov ecx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_34] esi +
mov [esp+3Ch+var_24] edx +
mov edx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_28] edi +
mov edi [esp+3Ch+arg_8] +
mov [esp+3Ch+var_2C] ecx +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_30] edi +
call eax  +
cmp eax 3 +
jz loc_4129A0  +
***
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+3Ch+arg_0] +
mov edi [ebx+4] +
mov [esp+3Ch+var_3C] eax +
call sub_40EDD0  +
mov [esp+3Ch+var_3C] ebp +
mov edx eax +
imul edx edi +
mov [esp+3Ch+var_18] edx +
call sub_4127D0  +
mov edx [esp+3Ch+var_18] +
lea edi [edx+eax] +
mov eax [esp+3Ch+arg_0] +
movzx eax byte ptr [eax+28h] +
and eax 18h +
cmp al 10h +
jz loc_412AD0  +
mov eax [esp+3Ch+arg_C] +
mov ecx [eax+28h] +
test ecx ecx +
jz loc_412AD0  +
cmp ecx edi +
mov eax 2 +
jb loc_412998  +
mov eax [esi+10h] +
xor ecx ecx +
test byte ptr [eax+15h] 10h +
jnz loc_412A00  +
mov ecx [esi+8] +
mov esi [esp+3Ch+arg_10] +
mov edi [eax+3Ch] +
test esi esi +
jz loc_412AF0  +
xor esi esi +
cmp dword ptr [ebp+24h] 0 +
jnz loc_412AF0  +
mov edi [ebx+8] +
mov [esp+3Ch+var_14] edi +
add edi [eax+38h] +
add ecx edi +
lea eax [ecx+esi] +
mov [esp+3Ch+var_18] eax +
mov eax [ebp+10h] +
test eax eax +
jz loc_412A59  +
mov eax [esp+3Ch+arg_C] +
mov ecx [esp+3Ch+arg_C] +
mov eax [eax+3Ch] +
mov ecx [ecx+38h] +
sub [esp+3Ch+var_18] ecx +
mov eax [eax+1Ch] +
sub [esp+3Ch+var_18] eax +
mov eax [ebp+30h] +
test eax eax +
jnz loc_412B94  +
mov edi [esp+3Ch+arg_10] +
test edi edi +
jz loc_412A8E  +
mov esi [ebp+24h] +
test esi esi +
jz loc_412D30  +
mov eax [esp+3Ch+arg_C] +
mov eax [eax+38h] +
add [ebx+4] eax +
mov eax [esp+3Ch+arg_0] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 2 +
jz loc_412BA0  +
mov eax [esp+3Ch+var_18] +
mov [ebx+8] eax +
mov ecx [ebp+18h] +
test ecx ecx +
jnz loc_412B44  +
mov ecx [ebp+4] +
mov ebx [esp+3Ch+var_18] +
mov eax [ebp+8] +
shr ebx cl +
mov ecx [ebp+14h] +
add eax 2 +
shl ebx cl +
cmp eax 6 +
ja loc_412D4A  +
jmp ds:off_47B02C[eax*4]  +
***
add esp 3Ch +
mov eax 6 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+3Ch+arg_C] +
mov ecx [eax+24h] +
mov eax 2 +
cmp ecx edi +
jb loc_412998  +
jmp loc_4129F2  +
***
mov eax [esp+arg_4C] +
mov eax [esp+20h] +
mov eax [esp+arg_4C] +
mov [esp+arg_4] offset aBfd_perform_re +
mov eax [esp+arg_4C] +
add edx [esp+arg_54] +
mov eax [esp+arg_4C] +
mov esi [esp+arg_54] +
mov eax [eax+4] +
add esi edx +
mov eax [eax+28h] +
mov [esp+0] esi +
call eax  +
mov ecx [esp+arg_4C] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
jmp loc_412C19  +
***
mov eax [esp+3Ch+var_18] +
mov [ebx+8] eax +
mov eax [esp+3Ch+arg_C] +
mov eax [eax+38h] +
add [ebx+4] eax +
mov eax [esp+3Ch+var_1C] +
jmp loc_412998  +
mov eax 5 +
jmp loc_412998  +
test ebp ebp +
jz loc_412AC0  +
mov [esp+3Ch+var_1C] 0 +
jmp loc_41295B  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+54h] +
mov eax [ebx] +
mov ebp [ebx+0Ch] +
mov esi [eax] +
cmp dword ptr [esi+10h] offset off_476230 +
jz loc_412F10  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_412DD4  +
mov edx [esp+64h] +
mov edi [esp+50h] +
mov ecx [esp+60h] +
mov [esp+8] esi +
mov [esp+18h] edx +
mov edx [esp+58h] +
sub edx [esp+5Ch] +
mov [esp+14h] edi +
mov [esp+10h] ecx +
mov [esp+0Ch] edx +
mov [esp+4] ebx +
mov [esp] edi +
call eax  +
cmp eax 3 +
jz loc_412DD4  +
***
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test esi esi +
jz loc_412F24  +
mov ecx [ebx+4] +
add eax ecx +
mov [ebx+4] eax +
mov eax [esp+50h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 2 +
jz loc_4130C2  +
mov eax [esp+24h] +
mov [ebx+8] eax +
mov eax [ebp+18h] +
test eax eax +
jnz loc_413080  +
mov ecx [ebp+4] +
xor ebx ebx +
mov edi [esp+24h] +
mov eax [ebp+8] +
mov esi [esp+58h] +
sub edx [esp+5Ch] +
shr edi cl +
mov ecx [ebp+14h] +
add eax 2 +
add esi edx +
shl edi cl +
cmp eax 6 +
ja sub_413070  +
jmp ds:off_47B054[eax*4]  +
***
mov eax [esp+60h] +
mov ecx [eax+24h] +
mov eax 2 +
cmp ecx edi +
jb loc_412DCC  +
jmp loc_412E26  +
***
mov eax [esp+60h] +
mov eax [eax+38h] +
add [ebx+4] eax +
add esp 3Ch +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+24h] +
add [ebx+4] eax +
xor eax eax +
mov [ebx+8] esi +
jmp loc_412DCC  +
***
mov eax ebx +
jmp loc_412DCC  +
***
mov eax [esp+arg_4C] +
mov eax [esp+arg_4C] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+0] esi +
call eax  +
mov ecx [esp+arg_4C] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
mov [esp+arg_0] esi +
mov esi [ebp+28h] +
and esi eax +
add edi esi +
and edi edx +
not edx  +
and edx eax +
or edi edx +
mov [esp+0] edi +
call ecx  +
mov eax ebx +
jmp loc_412DCC  +
***
mov eax [esp+arg_4C] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+0] esi +
call eax  +
mov ecx [esp+arg_4C] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+3Ch] +
mov [esp+arg_0] esi +
mov esi eax +
and si [ebp+28h] +
add edi esi +
and edi edx +
not edx  +
and edx eax +
or edi edx +
movsx edi di +
mov [esp+0] edi +
call ecx  +
mov eax ebx +
jmp loc_412DCC  +
***
movzx eax byte ptr [esi] +
mov ecx [ebp+2Ch] +
mov edx eax +
and dl [ebp+28h] +
add edx edi +
and edx ecx +
not ecx  +
and ecx eax +
mov eax ebx +
or edx ecx +
mov [esi] dl +
jmp loc_412DCC  +
***
mov eax [esp+arg_4C] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+0] esi +
call eax  +
mov ecx [esp+arg_4C] +
mov edx [ebp+2Ch] +
mov ecx [ecx+4] +
mov ecx [ecx+30h] +
mov [esp+arg_0] esi +
mov esi [ebp+28h] +
and esi eax +
sub esi edi +
and esi edx +
not edx  +
and edx eax +
or esi edx +
mov [esp+0] esi +
call ecx  +
mov eax ebx +
jmp loc_412DCC  +
***
mov eax 5 +
jmp loc_412DCC  +
***
mov eax [esp+50h] +
mov [esp+28h] edx +
mov [esp] eax +
call sub_40ECE0  +
mov esi [ebp+4] +
mov ebx [esp+24h] +
mov [esp+8] esi +
mov [esp+10h] ebx +
mov [esp+0Ch] eax +
mov eax [ebp+0Ch] +
mov [esp+4] eax +
mov eax [ebp+18h] +
mov [esp] eax +
call loc_412860  +
mov ecx esi +
mov edx [esp+28h] +
mov ebx eax +
jmp loc_412EC6  +
***
mov eax [eax] +
mov ecx 12h +
mov edi offset aCoffIntelLittl +
mov esi eax +
cmps   +
mov [esp+2Ch] eax +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_412EAF  +
mov esi [esp+2Ch] +
mov edi offset aCoffIntelBig +
mov ecx 0Fh +
cmps   +
jz loc_412EAF  +
mov eax [esp+28h] +
mov edi offset aCoffZ8k +
mov ecx 9 +
sub [esp+24h] eax +
mov esi [esp+2Ch] +
cmps   +
jz loc_412EB6  +
mov dword ptr [ebx+8] 0 +
jmp loc_412EB6  +
***
push esi  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_58] +
movzx eax byte ptr [eax] +
mov [esp+arg_10] eax +
mov eax [ebx+18h] +
test eax eax +
jnz loc_413224  +
mov ebp [esp+arg_10] +
and ebp [ebx+28h] +
mov [esp+arg_14] 0 +
movzx ecx byte ptr [esp+arg_8] +
mov edx [ebx+2Ch] +
shr esi cl +
movzx ecx [esp+arg_C] +
mov eax edx +
not eax  +
and eax [esp+arg_10] +
shl esi cl +
lea ecx [esi+ebp] +
and ecx edx +
or ecx eax +
cmp edi 2 +
jz loc_413413  +
jle loc_4133C0  +
cmp edi 4 +
jz loc_4133D4  +
cmp edi 8 +
jnz loc_4133F7  +
mov [esp+arg_4] offset a_bfd_relocate_ +
mov [esp+arg_0] 60Bh +
mov dword ptr [esp+0] offset a____Binutil_12 +
call sub_40C6F0  +
mov eax [esp+arg_50] +
mov edx [esp+arg_58] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+0] edx +
call eax  +
mov [esp+arg_10] eax +
mov eax [ebx+18h] +
test eax eax +
jz loc_413196  +
mov eax [ebx+0Ch] +
mov ebp 1 +
lea ecx [eax-1] +
mov eax ebp +
shl eax cl +
mov ecx [esp+arg_50] +
lea eax [eax+eax-2] +
mov [esp+arg_14] eax +
or [esp+arg_14] 1 +
mov eax [esp+arg_14] +
mov [esp+0] ecx +
not eax  +
mov [esp+arg_1C] eax +
call sub_40ECE0  +
movzx ecx byte ptr [esp+arg_8] +
mov edx [esp+arg_14] +
shl edx cl +
lea ecx [eax-1] +
or edx 1 +
shl ebp cl +
lea eax [ebp+ebp-2] +
mov ebp [esp+arg_10] +
or edx eax +
mov eax [esp+arg_8] +
mov ecx edx +
and ecx esi +
mov [esp+arg_18] ecx +
mov ecx eax +
shr [esp+arg_18] cl +
mov ecx [ebx+28h] +
and ebp ecx +
mov [esp+arg_28] ecx +
mov ecx edx +
and ecx ebp +
mov [esp+arg_20] ecx +
movzx ecx [esp+arg_C] +
shr [esp+arg_20] cl +
mov ecx eax +
mov eax [ebx+18h] +
shr edx cl +
mov [esp+arg_24] edx +
cmp eax 2 +
jz loc_413340  +
cmp eax 3 +
jz loc_413420  +
cmp eax 1 +
jz loc_41334E  +
mov [esp+arg_4] offset a_bfd_relocate_ +
mov [esp+arg_0] 5EDh +
mov dword ptr [esp+0] offset a____Binutil_12 +
call sub_40C6F0  +
mov eax [esp+arg_50] +
mov edx [esp+arg_58] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+0] edx +
call eax  +
mov [esp+arg_10] eax +
jmp loc_41318B  +
mov [esp+arg_4] offset a_bfd_relocate_ +
mov [esp+arg_0] 58Dh +
mov dword ptr [esp+0] offset a____Binutil_12 +
call sub_40C6F0  +
lea esi [esi+0] +
mov [esp+arg_4] offset a_bfd_relocate_ +
mov [esp+arg_0] 57Dh +
mov dword ptr [esp+0] offset a____Binutil_12 +
call sub_40C6F0  +
lea esi [esi+0] +
mov eax [esp+arg_14] +
shr eax 1 +
mov [esp+arg_1C] eax +
not [esp+arg_1C]  +
mov eax [esp+arg_1C] +
and eax [esp+arg_18] +
mov [esp+arg_14] 0 +
jz loc_413374  +
mov edx [esp+arg_1C] +
and edx [esp+arg_24] +
cmp eax edx +
setnz al  +
movzx eax al +
mov [esp+arg_14] eax +
mov edx [esp+arg_28] +
movzx ecx [esp+arg_C] +
mov eax edx +
not eax  +
shr eax 1 +
and eax edx +
mov edx [esp+arg_20] +
shr eax cl +
mov ecx [esp+arg_18] +
xor edx eax +
sub edx eax +
mov eax ecx +
xor eax edx +
add edx ecx +
xor edx ecx +
not eax  +
and eax edx +
and eax [esp+arg_24] +
test [esp+arg_1C] eax +
mov eax 1 +
cmovz eax [esp+arg_14] +
mov [esp+arg_14] eax +
jmp loc_4131A5  +
cmp edi 1 +
jnz loc_4133F7  +
mov eax [esp+arg_58] +
mov [eax] cl +
mov eax [esp+arg_14] +
jmp loc_413175  +
mov eax [esp+arg_50] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov edi [esp+arg_58] +
mov [esp+0] ecx +
mov [esp+arg_0] edi +
call eax  +
mov eax [esp+arg_14] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+arg_4] offset a_bfd_relocate_ +
mov [esp+arg_0] 5FDh +
mov dword ptr [esp+0] offset a____Binutil_12 +
call sub_40C6F0  +
mov eax [esp+arg_50] +
mov eax [eax+4] +
mov eax [eax+3Ch] +
jmp loc_4133DE  +
mov edx [esp+arg_20] +
mov ecx [esp+arg_18] +
mov eax edx +
add edx ecx +
or eax ecx +
and edx [esp+arg_24] +
or eax edx +
test [esp+arg_1C] eax +
setnz al  +
movzx eax al +
mov [esp+arg_14] eax +
jmp loc_4131A5  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov edx [esp+2Ch+arg_4] +
mov ecx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_18] +
mov [esp+2Ch+var_2C] edx +
mov edi [esp+2Ch+arg_10] +
mov [esp+2Ch+var_18] ecx +
mov ebp [esp+2Ch+arg_14] +
mov [esp+2Ch+var_1C] edx +
mov [esp+2Ch+var_10] eax +
call sub_40EDD0  +
mov [esp+2Ch+var_2C] esi +
mov ebx eax +
call sub_4127D0  +
imul ebx edi +
mov edx [esp+2Ch+var_1C] +
mov ecx [esp+2Ch+var_18] +
add ebx eax +
movzx eax byte ptr [edx+28h] +
and eax 18h +
cmp al 10h +
jz loc_4134C5  +
mov eax [ecx+28h] +
test eax eax +
jz loc_4134C5  +
cmp eax ebx +
jnb loc_4134CC  +
add esp 2Ch +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ecx+24h] +
cmp eax ebx +
jb loc_4134B8  +
mov ebx [esi+10h] +
add ebp [esp+2Ch+var_10] +
test ebx ebx +
jz loc_4134EC  +
mov eax [ecx+3Ch] +
sub ebp [eax+1Ch] +
sub ebp [ecx+38h] +
mov ecx [esi+30h] +
mov eax ebp +
sub eax edi +
test ecx ecx +
cmovnz ebp eax +
add edi [esp+2Ch+var_14] +
mov [esp+2Ch+arg_8] ebp +
mov [esp+2Ch+arg_0] esi +
mov [esp+2Ch+arg_C] edi +
mov [esp+2Ch+arg_4] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_413130  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov eax [esp+2Ch+arg_C] +
mov ebp [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_14] eax +
call sub_4127D0  +
cmp eax 8 +
mov ebx eax +
ja loc_413602  +
jmp ds:off_47B0A4[eax*4]  +
***
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+arg_4] offset a_bfd_clear_con +
mov eax [esp+arg_14] +
movzx eax byte ptr [eax] +
mov edx [edi+2Ch] +
mov ecx 0Eh +
mov edi offset a_debug_ranges +
mov esi [esi] +
mov [esp+arg_18] edx +
not edx  +
and edx eax +
cmps   +
jnz loc_4135AF  +
mov eax edx +
or eax 1 +
test byte ptr [esp+arg_18] 1 +
cmovnz edx eax +
cmp ebx 2 +
jz loc_413620  +
jle loc_413545  +
cmp ebx 4 +
jz loc_413660  +
cmp ebx 8 +
jnz loc_413640  +
mov [esp+arg_4] offset a_bfd_clear_con +
mov [esp+arg_0] 658h +
mov dword ptr [esp+0] offset a____Binutil_12 +
call sub_40C6F0  +
mov eax [ebp+4] +
mov ecx [esp+arg_14] +
mov eax [eax+34h] +
mov [esp+0] ecx +
call eax  +
jmp loc_413587  +
mov eax [ebp+4] +
mov ecx [esp+arg_14] +
mov eax [eax+28h] +
mov [esp+0] ecx +
call eax  +
jmp loc_413587  +
mov [esp+arg_4] offset a_bfd_clear_con +
mov [esp+arg_0] 626h +
mov dword ptr [esp+0] offset a____Binutil_12 +
call sub_40C6F0  +
nop   +
mov eax [ebp+4] +
mov eax [eax+3Ch] +
mov ecx [esp+arg_14] +
mov [esp+arg_3C] edx +
mov [esp+arg_40] ecx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov [esp+arg_4] offset a_bfd_clear_con +
mov [esp+arg_0] 64Ah +
mov dword ptr [esp+0] offset a____Binutil_12 +
call sub_40C6F0  +
lea esi [esi+0] +
mov eax [ebp+4] +
mov eax [eax+30h] +
jmp loc_413626  +
***
mov eax [esp+arg_0] +
mov edx [eax+4] +
mov edx [edx+148h] +
jmp edx  +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov edx [edx+14Ch] +
jmp edx  +
***
sub esp 1Ch +
cmp dword ptr [esp+24h] 225h +
jnz loc_4136E7  +
mov eax [esp+20h] +
mov [esp] eax +
call sub_40ECE0  +
mov edx eax +
mov eax offset unk_47B2C0 +
cmp edx 20h +
jz loc_4136FD  +
cmp edx 40h +
jz loc_413701  +
cmp edx 10h +
jnz loc_4136D3  +
mov dword ptr [esp+4] 1E30h +
mov dword ptr [esp] offset a____Binutil_12 +
call sub_40C6C0  +
mov dword ptr [esp+4] 1E32h +
mov dword ptr [esp] offset a____Binutil_12 +
call sub_40C6C0  +
mov dword ptr [esp+4] 1E35h +
mov dword ptr [esp] offset a____Binutil_12 +
call sub_40C6C0  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov dword ptr [esp+4] 1E2Ch +
mov dword ptr [esp] offset a____Binutil_12 +
mov [esp+0Ch] eax +
call sub_40C6C0  +
mov eax [esp+0Ch] +
add esp 1Ch +
retn   +
***
jmp loc_413730  +
mov eax [esp+4] +
cmp eax 87Ah +
ja loc_413743  +
mov eax ds:off_488D40[eax*4] +
retn   +
***
xor eax eax +
retn   +
***
sub esp 1Ch +
mov edx [esp+28h] +
movzx eax byte ptr [edx] +
and eax 3 +
cmp al 2 +
jz loc_413774  +
mov eax [esp+2Ch] +
mov dword ptr [eax] 0 +
mov eax 1 +
add esp 1Ch +
retn   +
***
mov eax [edx+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aPFRelaxAndRMay +
call eax  +
jmp loc_413761  +
***
mov eax 1 +
retn   +
***
sub esp 1Ch +
mov eax 1 +
mov edx [esp+24h] +
test edx edx +
jz loc_4137BF  +
mov dword ptr [esp] offset aInput_section_ +
call off_476094  +
xor eax eax +
add esp 1Ch +
retn   +
***
mov eax 1 +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+68h] +
mov edi [esp+70h] +
mov ebx [eax+10h] +
mov ebp [ebx+94h] +
mov [esp+4] ebx +
mov [esp] ebp +
call loc_40C7C0  +
test eax eax +
mov esi eax +
js loc_4139A1  +
lea eax [esp+6Ch] +
mov [esp+8] eax +
mov [esp+4] ebx +
mov [esp] ebp +
call sub_41F0A0  +
test eax eax +
jz loc_4139A1  +
test esi esi +
jnz loc_413840  +
***
mov eax [esp+arg_68] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] esi +
call sub_40EFC0  +
test eax eax +
mov esi eax +
mov [esp+2Ch] eax +
jz loc_4139A1  +
mov eax [esp+74h] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] ebp +
mov [esp+0Ch] eax +
call sub_40C800  +
test eax eax +
js loc_413995  +
jz loc_41395D  +
mov eax [esi] +
test eax eax +
jz loc_41395D  +
mov [esp+28h] ebp +
mov [esp+70h] edi +
nop   +
***
mov dword ptr [esp+3Ch] 0 +
mov edx [esi] +
mov eax [edx] +
mov eax [eax] +
mov eax [eax+10h] +
test eax eax +
jz loc_4138B9  +
cmp eax offset off_476230 +
jz loc_4138B9  +
cmp dword ptr [eax+3Ch] offset off_476230 +
jz loc_413B00  +
mov ecx [esp+70h] +
xor eax eax +
mov [esp-5Ch+arg_64] ebx +
mov [esp-5Ch+arg_5C] edx +
test ecx ecx +
cmovnz eax [esp+60h] +
lea ecx [esp+3Ch] +
mov [esp-5Ch+arg_6C] ecx +
mov [esp-5Ch+arg_68] eax +
mov eax [esp-5Ch+arg_C4] +
mov [esp-5Ch+arg_60] eax +
mov eax [esp-5Ch+arg_80] +
mov [esp-5Ch+arg_58] eax +
call sub_412920  +
mov edx [esp+70h] +
test edx edx +
jz loc_41390B  +
mov edx [ebx+3Ch] +
mov edi [esi] +
mov ecx [edx+4Ch] +
mov ebp [edx+48h] +
mov [ebp+ecx*4+0] edi +
add ecx 1 +
mov [edx+4Ch] ecx +
test eax eax +
jz loc_413950  +
cmp eax 7 +
ja sub_413920  +
jmp ds:off_47B1C4[eax*4]  +
***
mov edi [esp+64h] +
mov ecx [esi] +
mov edx [edi+18h] +
mov edx [edx+2Ch] +
mov [esp-5Ch+arg_68] eax +
mov eax [esp+60h] +
mov [esp-5Ch+arg_64] ecx +
mov [esp-5Ch+arg_60] ebx +
mov [esp-5Ch+arg_58] offset aXPBARelocation +
mov [esp-5Ch+arg_5C] eax +
call edx  +
lea esi [esi+0] +
add esi 4 +
mov eax [esi] +
test eax eax +
jnz loc_413890  +
mov eax [esp+2Ch] +
mov [esp-5Ch+arg_58] eax +
call free  +
jmp loc_41382E  +
***
mov eax [esp+arg_60] +
mov edx [esi] +
mov edi [esp+arg_5C] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+arg_8] edx +
mov [esp+arg_4] ebx +
mov [esp+arg_0] edi +
mov dword ptr [esp+0] offset aXPBARelocati_0 +
call eax  +
mov eax [esp+arg_28] +
mov [esp+0] eax +
call free  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+arg_38] +
test eax eax +
jz loc_413B76  +
mov edi [esp+arg_60] +
mov ecx [esi] +
mov edx [edi+18h] +
mov ecx [ecx+4] +
mov edi [esp+arg_24] +
mov edx [edx+20h] +
mov [esp+arg_0] eax +
mov eax [esp+arg_60] +
mov [esp+arg_C] ecx +
mov [esp+arg_8] ebx +
mov [esp+arg_4] edi +
mov [esp+0] eax +
call edx  +
test eax eax +
jz loc_413995  +
add esi 4 +
mov eax [esi] +
test eax eax +
jnz loc_413890  +
jmp loc_41395D  +
***
mov eax [esp+arg_60] +
mov eax [esp+arg_60] +
mov edx [esi] +
mov edi [esp+arg_5C] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+arg_8] edx +
mov [esp+arg_4] ebx +
mov [esp+arg_0] edi +
mov dword ptr [esp+0] offset aXPBARelocati_1 +
call eax  +
mov eax [esp+arg_28] +
mov [esp+0] eax +
call free  +
jmp loc_4139A1  +
***
mov eax [esp+arg_60] +
mov eax [eax+18h] +
mov eax [eax+1Ch] +
mov edi eax +
mov eax [esi] +
mov edx [eax+8] +
mov ecx [eax+4] +
mov ebp edx +
mov edx [eax+0Ch] +
mov eax [eax] +
mov edx [edx+20h] +
mov eax [eax] +
mov eax [eax+4] +
mov [esp+arg_18] ecx +
mov ecx [esp+arg_24] +
mov [esp+arg_14] ebx +
mov [esp+arg_C] ebp +
mov [esp+arg_4] eax +
mov eax [esp+arg_60] +
mov [esp+arg_10] ecx +
mov [esp+arg_8] edx +
mov [esp+arg_0] 0 +
mov [esp+0] eax +
call edi  +
test eax eax +
jz loc_413995  +
add esi 4 +
mov eax [esi] +
test eax eax +
jnz loc_413890  +
jmp loc_41395D  +
***
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 100h +
jz loc_4138B9  +
cmp ax 200h +
jz loc_4138B9  +
mov eax [esp-5Ch+arg_C4] +
mov edi eax +
mov eax [edx+4] +
mov ebp eax +
mov eax [esp-5Ch+arg_80] +
mov [esp-5Ch+arg_58] eax +
call sub_40EDD0  +
mov edx [esi] +
mov edx [edx+0Ch] +
mov [esp-5Ch+arg_60] ebx +
imul eax ebp +
mov [esp-5Ch+arg_58] edx +
add eax edi +
mov [esp-5Ch+arg_64] eax +
mov eax [esp-5Ch+arg_80] +
mov [esp-5Ch+arg_5C] eax +
call sub_413510  +
mov eax [esi] +
mov edx off_4762CC +
mov [eax] edx +
mov eax [esi] +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] offset unk_47B200 +
xor eax eax +
jmp loc_4138EE  +
***
mov [esp+arg_0] 1F1Ch +
mov dword ptr [esp+0] offset a____Binutil_12 +
call sub_40C6C0  +
mov eax [esp+arg_38] +
jmp loc_4139BC  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] 10h +
mov [esp+1Ch+var_1C] eax +
call sub_410230  +
test eax eax +
jz loc_413BC2  +
mov dword ptr [eax+0Ch] 0 +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test byte ptr [ebx+2Ch] 1 +
jz loc_413C10  +
mov esi [ebx+9Ch] +
test esi esi +
jz loc_413C10  +
mov [esp+14h+var_14] esi +
call sub_40FD90  +
mov [esp+14h+var_14] esi +
call free  +
mov dword ptr [ebx+9Ch] 0 +
and byte ptr [ebx+2Ch] 0FEh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+14h+var_10] 30Ch +
mov [esp+14h+var_14] offset a____Binutil_13 +
call sub_40C6C0  +
mov esi [ebx+9Ch] +
jmp loc_413BE9  +
***
sub esp 1Ch +
mov edx [edx+18h] +
retn   +
***
or dword ptr [eax+0Ch] 80h +
***
mov ecx [edx+14h] +
mov dword ptr [eax+10h] offset off_476188 +
mov edx [eax+10h] +
test edx edx +
jz loc_413D11  +
test byte ptr [eax+0Dh] 8 +
jnz sub_413C86  +
mov dword ptr [esp+4] 8E9h +
mov dword ptr [esp+0] offset a____Binutil_13 +
call sub_40C6C0  +
jmp sub_413C86  +
mov dword ptr [eax+10h] offset off_476188 +
mov dword ptr [eax+8] 0 +
add esp 1Ch +
retn   +
mov dword ptr [esp+8] offset aSet_symbol_fro +
mov [esp-1Ch+arg_1C] 8E2h +
mov [esp-1Ch+arg_18] offset a____Binutil_13 +
call sub_40C6F0  +
or dword ptr [eax+0Ch] 800h +
mov dword ptr [eax+10h] offset off_476230 +
mov dword ptr [eax+8] 0 +
jmp sub_413C86  +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
mov ebx [edx] +
mov eax [ecx] +
mov edi [esp+28h+arg_0] +
cmp ebx eax +
jnb loc_413D63  +
mov eax [ebp+0] +
test edi edi +
mov [eax+ebx*4] edi +
jz loc_413DA0  +
add ebx 1 +
mov eax 1 +
mov [esi] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test eax eax +
jz loc_413D90  +
lea edx [eax+eax] +
mov [ecx] edx +
shl eax 3 +
mov edx [ebp+0] +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call sub_40F050  +
test eax eax +
jz loc_413DA7  +
mov [ebp+0] eax +
mov ebx [esi] +
jmp loc_413D4A  +
mov dword ptr [ecx] 7Ch +
mov ax 1F0h +
jmp loc_413D6F  +
mov eax 1 +
jmp loc_413D5B  +
xor eax eax +
jmp loc_413D5B  +
***
sub esp 24h +
mov edx [esp+24h+arg_0] +
mov esi [esp+24h+arg_4] +
mov eax [edx+1Ch] +
test eax eax +
jnz loc_413E06  +
mov ecx [esi] +
mov dword ptr [edx+1Ch] 1 +
movzx eax byte ptr [ecx+1] +
and eax 18h +
cmp al 18h +
jz loc_413E06  +
cmp al 10h +
jz loc_413E40  +
mov ebx [edx+20h] +
test ebx ebx +
jz loc_413E11  +
mov eax ebx +
call sub_413C30  +
mov eax [esi+4] +
or dword ptr [ebx+0Ch] 2 +
mov ecx [esi+8] +
mov [esp+24h+var_24] ebx +
lea edx [eax+7Ch] +
add eax 78h +
call sub_413D30  +
test eax eax +
jz loc_413E74  +
mov eax 1 +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [esi+4] +
mov [esp+24h+var_8] edx +
mov ecx [eax+4] +
mov ecx [ecx+10Ch] +
mov [esp+24h+var_24] eax +
call ecx  +
test eax eax +
mov ebx eax +
jz loc_413E90  +
mov edx [esp+24h+var_8] +
mov eax [edx+4] +
mov dword ptr [ebx+0Ch] 0 +
mov [ebx+4] eax +
jmp loc_413DE3  +
mov ebx [edx+4] +
mov eax [ecx+20h] +
mov [esp+24h+var_18] 0 +
mov [esp+24h+var_1C] 0 +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_8] edx +
call sub_40FFC0  +
mov edx [esp+24h+var_8] +
test eax eax +
jnz loc_413DDC  +
jmp loc_413E06  +
mov [esp+24h+var_1C] offset a_bfd_generic_l +
mov [esp+24h+var_20] 93Fh +
mov [esp+24h+var_24] offset a____Binutil_13 +
call sub_40C6F0  +
xor eax eax +
jmp loc_413E0B  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+4] +
mov eax [eax+104h] +
mov [esp+14h+var_14] ebx +
call eax  +
test eax eax +
mov esi eax +
js loc_413EF6  +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] ebx +
call sub_407B20  +
test eax eax +
mov [ebx+78h] eax +
jz loc_413EF2  +
mov edx [ebx+4] +
mov edx [edx+108h] +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] ebx +
call edx  +
test eax eax +
js loc_413EF6  +
mov [ebx+7Ch] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
test esi esi +
jz loc_413ECE  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [edx+14h] 0 +
mov dword ptr [edx+18h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [ebx+20h] 0 +
mov dword ptr [ebx+28h] 0 +
mov [esp+8] eax +
mov eax [esp+28h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_40FD60  +
test eax eax +
jz loc_414043  +
mov dword ptr [ebx+24h] offset sub_413BD0 +
or byte ptr [esi+2Ch] 1 +
mov [esi+9Ch] ebx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_40FFC0  +
test eax eax +
jz loc_414083  +
mov edx [esp+1Ch+arg_10] +
test edx edx +
jnz loc_41408A  +
add esp 1Ch +
retn   +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_414087  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_C] +
mov ebx [esp+3Ch+arg_4] +
mov ecx [esp+3Ch+arg_0] +
mov edx [esp+3Ch+arg_8] +
mov [esp+3Ch+var_1C] eax +
mov eax [esp+3Ch+arg_10] +
mov edi [ebx+28h] +
mov [esp+3Ch+var_10] eax +
mov eax [esp+3Ch+arg_14] +
test edi edi +
mov [esp+3Ch+var_18] eax +
jz loc_4141BE  +
mov ecx [ecx+4] +
movzx eax byte ptr [edx] +
cmp al [ecx+18h] +
mov [esp+3Ch+var_1D] al +
jz loc_4141B0  +
cmp al [ebx+8] +
jz loc_4141B0  +
mov ebp edx +
mov [esp+3Ch+var_1D] 0 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_14] edx +
call sub_40FFC0  +
mov edx [esp+3Ch+var_14] +
test eax eax +
jz loc_4141B8  +
mov [esp+3Ch+var_3C] ebp +
call strlen  +
add eax 9 +
mov [esp+3Ch+var_3C] eax +
call sub_40EFC0  +
test eax eax +
mov esi eax +
jz loc_414280  +
movzx eax [esp+3Ch+var_1D] +
mov byte ptr [esi+1] 0 +
mov [esi] al +
mov [esp+3Ch+var_3C] esi +
call strlen  +
lea edx [esi+eax] +
lea eax [esi+eax+7] +
mov dword ptr [edx] 72775F5Fh +
mov dword ptr [edx+4] 5F7061h +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] eax +
call strcpy  +
mov edi [esp+3Ch+var_18] +
mov eax [ebx+1Ch] +
mov [esp+3Ch+var_30] 1 +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+var_1C] +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] eax +
call sub_414050  +
mov [esp+3Ch+var_3C] esi +
mov ebx eax +
call free  +
mov eax ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebp [edx+1] +
jmp loc_4140F9  +
cmp byte ptr [ebp+0] 5Fh +
jz loc_4141F0  +
mov edi [esp+3Ch+var_18] +
mov eax [ebx+1Ch] +
mov [esp+3Ch+arg_4] edx +
mov [esp+3Ch+arg_10] edi +
mov edi [esp+3Ch+var_10] +
mov [esp+3Ch+arg_0] eax +
mov [esp+3Ch+arg_C] edi +
mov edi [esp+3Ch+var_1C] +
mov [esp+3Ch+arg_8] edi +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_414050  +
mov edi offset a__real_ +
mov ecx 7 +
mov esi ebp +
cmps   +
jnz loc_4141BE  +
mov eax [ebx+28h] +
add ebp 7 +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_14] edx +
call sub_40FFC0  +
mov edx [esp+3Ch+var_14] +
test eax eax +
jz loc_4141BE  +
mov [esp+3Ch+var_3C] ebp +
call strlen  +
add eax 2 +
mov [esp+3Ch+var_3C] eax +
call sub_40EFC0  +
test eax eax +
mov esi eax +
jz loc_414280  +
movzx eax [esp+3Ch+var_1D] +
mov byte ptr [esi+1] 0 +
mov [esi] al +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] esi +
call strcat  +
mov ecx [esp+3Ch+var_18] +
mov eax [ebx+1Ch] +
mov [esp+3Ch+var_30] 1 +
mov [esp+3Ch+var_2C] ecx +
mov ecx [esp+3Ch+var_1C] +
mov [esp+3Ch+var_34] ecx +
jmp loc_414190  +
xor eax eax +
jmp loc_4141A8  +
***
mov edi ecx +
push esi  +
push ebx  +
sub esp 3Ch +
test byte ptr [ecx+15h] 1 +
mov [esp+44h+var_20] eax +
mov [esp+44h+var_24] edx +
jz loc_414500  +
mov eax [esp+44h+arg_0] +
mov ebp [eax+10h] +
mov eax [ebp+94h] +
mov [esp+44h+var_1C] eax +
mov eax [ebp+24h] +
test eax eax +
jz loc_4144F0  +
cmp [ebp+3Ch] edi +
jz loc_4142E0  +
mov [esp+44h+var_40] 0A32h +
mov [esp+44h+var_44] offset a____Binutil_13 +
call sub_40C6C0  +
mov eax [esp+44h+arg_0] +
mov eax [eax+8] +
cmp [ebp+38h] eax +
jz loc_414300  +
mov [esp+44h+var_40] 0A33h +
mov [esp+44h+var_44] offset a____Binutil_13 +
call sub_40C6C0  +
mov eax [esp+44h+arg_0] +
mov eax [eax+0Ch] +
cmp [ebp+24h] eax +
jz loc_414320  +
mov [esp+44h+var_40] 0A34h +
mov [esp+44h+var_44] offset a____Binutil_13 +
call sub_40C6C0  +
mov eax [esp+44h+var_24] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_414562  +
mov ecx [esp+44h+arg_4] +
test ecx ecx +
jnz loc_4143A7  +
mov eax [esp+44h+var_1C] +
mov ebx [eax+78h] +
test ebx ebx +
jz loc_414673  +
mov eax [esp+44h+var_1C] +
mov eax [eax+7Ch] +
lea eax [ebx+eax*4] +
cmp eax ebx +
jbe loc_4143A7  +
mov [esp+44h+var_18] edi +
mov edi ebx +
mov ebx eax +
jmp loc_41437F  +
mov eax [esi+10h] +
cmp eax offset off_476188 +
jz loc_41438A  +
test byte ptr [eax+15h] 10h +
jnz loc_41438A  +
cmp eax offset off_4762D8 +
jz loc_41438A  +
add edi 4 +
cmp ebx edi +
jbe loc_4143A3  +
mov esi [edi] +
test dword ptr [esi+0Ch] 3882h +
jz loc_414361  +
mov edx [esi+14h] +
test edx edx +
jz loc_4145C0  +
mov eax esi +
add edi 4 +
call sub_413C30  +
cmp ebx edi +
ja loc_41437F  +
mov edi [esp+44h+var_18] +
mov eax [edi+14h] +
and eax 2100000h +
cmp eax 2000000h +
jnz loc_414430  +
mov edx [ebp+24h] +
test edx edx +
jz loc_4145B2  +
mov eax [esp+44h+var_20] +
test byte ptr [eax+2Bh] 10h +
jz loc_414520  +
mov ebx [edi+6Ch] +
test ebx ebx +
jz loc_414690  +
mov eax [ebp+38h] +
xor esi esi +
test eax eax +
jnz loc_414657  +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_40EDD0  +
mov edx [ebp+24h] +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_30] edx +
imul esi eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] esi +
mov [esp+44h+var_44] eax +
call sub_410F50  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_4144F5  +
mov esi [ebp+24h] +
mov eax [ebp+28h] +
cmp esi eax +
cmovb esi eax +
mov [esp+44h+var_44] esi +
call sub_40EFC0  +
test esi esi +
mov ebx eax +
jz loc_414451  +
test eax eax +
jz loc_414558  +
mov eax [esp+44h+var_1C] +
mov ecx [esp+44h+var_24] +
mov eax [eax+78h] +
mov [esp+44h+var_30] eax +
movzx eax byte ptr [ecx] +
mov [esp+44h+var_38] ebx +
mov [esp+44h+var_40] ecx +
and eax 3 +
cmp al 2 +
setz al  +
movzx eax al +
mov [esp+44h+var_34] eax +
mov eax [esp+44h+arg_0] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_40CF10  +
test eax eax +
mov esi eax +
jz loc_414606  +
mov eax [esp+44h+var_20] +
mov ecx [ebp+38h] +
mov [esp+44h+var_44] eax +
mov [esp+44h+var_24] ecx +
call sub_40EDD0  +
mov edx [ebp+24h] +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_3C] esi +
imul eax [esp+44h+var_24] +
mov [esp+44h+var_30] edx +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_38] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_410F50  +
test eax eax +
jz loc_414606  +
test ebx ebx +
jz loc_4144F0  +
mov [esp+44h+var_44] ebx +
call free  +
nop   +
lea esi [esi+0] +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+44h+var_40] 0A2Bh +
mov [esp+44h+var_44] offset a____Binutil_13 +
call sub_40C6C0  +
jmp loc_4142AB  +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_30] 1 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_3C] offset unk_48AFBF +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_44] eax +
call sub_410F50  +
test eax eax +
jnz loc_4143CF  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+4Ch] +
test esi esi +
jz loc_414332  +
mov ebx [edi+48h] +
test ebx ebx +
jnz loc_414332  +
mov eax [esp+44h+var_20] +
mov eax [eax+4] +
mov edx [eax] +
mov eax [esp+44h+var_1C] +
mov eax [eax+4] +
mov eax [eax] +
mov [esp+44h+var_3C] edx +
mov [esp+44h+var_44] offset aAttemptToDoRel +
mov [esp+44h+var_40] eax +
call off_476094  +
mov [esp+44h+var_44] 3 +
call sub_40C770  +
xor eax eax +
jmp loc_4144F5  +
xor esi esi +
jmp loc_414433  +
cmp dword ptr [esi+10h] offset off_476188 +
jz loc_414620  +
mov eax [esp+44h+var_24] +
mov edx [esi+4] +
mov eax [eax+1Ch] +
mov [esp+44h+var_40] edx +
mov [esp+44h+var_34] 1 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_3C] 0 +
mov [esp+44h+var_44] eax +
call sub_414050  +
mov edx eax +
test edx edx +
jz loc_414378  +
jmp loc_414395  +
test ebx ebx +
jz loc_414558  +
mov [esp+44h+var_44] ebx +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+4] +
mov [esp+44h+var_30] 1 +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_24] +
mov [esp+44h+var_40] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] eax +
call sub_4140A0  +
mov edx eax +
jmp loc_4145F9  +
mov [esp+44h+var_40] 0A87h +
mov [esp+44h+var_44] offset a____Binutil_13 +
call sub_40C6C0  +
mov esi [ebp+38h] +
jmp loc_4143E7  +
call sub_413EA0  +
test eax eax +
jz loc_414558  +
mov eax [esp+44h+var_1C] +
mov ebx [eax+78h] +
jmp loc_414349  +
mov [esp+44h+var_40] 0A86h +
mov [esp+44h+var_44] offset a____Binutil_13 +
call sub_40C6C0  +
jmp loc_4143DA  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_8] +
mov ecx [esp+2Ch+arg_4] +
mov edx [esp+2Ch+arg_0] +
mov ebx [ebp+4] +
mov ecx [ecx+4] +
movzx eax byte ptr [ebx] +
cmp al [ecx+18h] +
jz loc_4146F0  +
cmp al [edx+8] +
jz loc_4146F0  +
mov edi offset a__wrap_ +
mov ecx 7 +
mov esi ebx +
cmps   +
jz loc_414703  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov edi offset a__wrap_ +
mov ecx 7 +
mov esi ebx +
cmps   +
jnz loc_4146E6  +
mov eax [edx+28h] +
lea esi [ebx+7] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_10] edx +
call sub_40FFC0  +
test eax eax +
jz loc_4146E6  +
mov eax [ebp+4] +
mov edx [esp+2Ch+var_10] +
cmp ebx eax +
jz loc_414785  +
movzx eax byte ptr [eax] +
movzx esi byte ptr [ebx+6] +
mov [ebx+6] al +
mov eax [edx+1Ch] +
lea edx [ebx+6] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call sub_414050  +
mov ebp eax +
mov eax esi +
test al al +
jz loc_4146E6  +
mov [ebx+6] al +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+1Ch] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call sub_414050  +
mov ebp eax +
jmp loc_4146E6  +
***
push esi  +
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esp+14h+arg_0] +
mov edx [esi+10h] +
test edx edx +
jz loc_414878  +
mov [esp+14h+var_10] 2A3h +
mov [esp+14h+var_14] offset a____Binutil_13 +
call sub_40C6C0  +
mov eax [ebx+20h] +
test eax eax +
jz loc_414882  +
mov [eax+10h] esi +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_414892  +
mov [ebx+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [ebx+1Ch] esi +
mov [ebx+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+arg_0] +
lea esi [ebx+1Ch] +
mov edx esi +
nop   +
lea esi [esi+0] +
mov eax [edx] +
test eax eax +
jz loc_4148D7  +
test byte ptr [eax+0Ch] 0FDh +
jnz loc_4148E0  +
mov ecx [eax+10h] +
mov [edx] ecx +
mov dword ptr [eax+10h] 0 +
cmp eax [ebx+20h] +
jnz loc_4148B0  +
cmp edx esi +
jz loc_4148E5  +
sub edx 10h +
mov [ebx+20h] edx +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+10h] +
jmp loc_4148B0  +
mov dword ptr [ebx+20h] 0 +
jmp loc_4148D7  +
***
mov eax [esp+4] +
movzx edx word ptr [eax+18h] +
mov dword ptr [eax+3Ch] offset off_476230 +
and dx 0FC7Fh +
or dh 2 +
mov [eax+18h] dx +
mov edx [eax+1Ch] +
mov [eax+38h] edx +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+3Ch+arg_10] +
mov ebp [esp+3Ch+arg_0] +
test edx edx +
jz loc_415604  +
cmp [esp+3Ch+arg_10] offset off_4762D8 +
jz loc_414D60  +
test [esp+3Ch+arg_C] 2000h +
jnz loc_414D60  +
test [esp+3Ch+arg_C] 1000h +
jnz loc_4154C0  +
test [esp+3Ch+arg_C] 800h +
jnz loc_4154F0  +
cmp [esp+3Ch+arg_10] offset off_476188 +
jz loc_41567A  +
test byte ptr [esp+3Ch+arg_C] 80h +
jnz loc_41561D  +
mov eax [esp+3Ch+arg_10] +
test byte ptr [eax+15h] 10h +
jz loc_415630  +
mov esi [esp+3Ch+arg_8] +
mov edi offset a__gnu_lto_sl_0 +
mov ecx 0Fh +
cmps   +
mov esi 4 +
setnbe dl  +
setb al  +
xor edi edi +
cmp dl al +
jnz loc_414D9F  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax] +
mov [esp+3Ch+var_3C] offset aSPluginNeede_0 +
mov [esp+3Ch+var_38] eax +
call off_476094  +
jmp loc_414D9F  +
mov eax [esp+3Ch+arg_1C] +
mov [esp+3Ch+var_28] 0 +
mov dword ptr [esp+0Ch] 1 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+8] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call sub_4140A0  +
test eax eax +
mov edi eax +
jz loc_414F90  +
mov esi 5 +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_415460  +
mov eax [esp+3Ch+arg_24] +
mov ebx [eax] +
test ebx ebx +
jz loc_415460  +
cmp byte ptr [ebp+0] 0 +
js loc_414DEA  +
mov eax [ebp+24h] +
test eax eax +
jz loc_414E25  +
mov ecx [esp+3Ch+arg_8] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] ecx +
call sub_40FFC0  +
test eax eax +
jz loc_414E25  +
mov eax [ebp+18h] +
mov ecx [esp+3Ch+arg_C] +
mov eax [eax+28h] +
mov [esp+3Ch+var_24] ecx +
mov ecx [esp+3Ch+arg_14] +
mov [esp+8] edi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_28] ecx +
mov ecx [esp+3Ch+arg_10] +
mov [esp+3Ch+var_2C] ecx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+0Ch] ecx +
call eax  +
test eax eax +
jz loc_414F90  +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_414E33  +
mov eax [esp+3Ch+arg_24] +
mov [eax] ebx +
movzx edx byte ptr [ebx+0Ch] +
movzx eax dl +
lea eax [eax+esi*8] +
mov eax ds:dword_48B2C0[eax*4] +
cmp eax 14h +
ja loc_4150A0  +
jmp ds:off_48B044[eax*4]  +
cmp dl 5 +
jz loc_414E6D  +
mov [esp+3Ch+var_38] 609h +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_40C6C0  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_4] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] 0 +
mov dword ptr [esp+0Ch] 3 +
mov [esp+8] edi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
call eax  +
test eax eax +
jz loc_414F90  +
movzx edx byte ptr [ebx+0Ch] +
mov byte ptr [ebx+0Ch] 3 +
mov eax [esp+3Ch+arg_10] +
mov [ebx+14h] eax +
mov eax [esp+3Ch+arg_14] +
and byte ptr [ebx+0Dh] 0FDh +
mov [ebx+18h] eax +
mov eax [esp+3Ch+arg_20] +
test eax eax +
jz loc_4150A0  +
mov eax [esp+3Ch+arg_8] +
cmp byte ptr [eax] 5Fh +
jnz loc_4150A0  +
add eax 1 +
mov esi eax +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_8] +
movzx ecx byte ptr [eax+1] +
cmp cl 5Fh +
jnz loc_414EF6  +
mov eax esi +
add eax 1 +
movzx ecx byte ptr [eax] +
cmp cl 5Fh +
jz loc_414EE7  +
mov [esp+3Ch+var_20] eax +
cmp cl 47h +
jnz loc_4150A0  +
mov esi [esp+3Ch+var_20] +
mov ecx 7 +
mov edi offset aGlobal_ +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jnz loc_4150A0  +
mov eax [esp+3Ch+var_20] +
cmp byte ptr [eax+8] 49h +
setz cl  +
cmp byte ptr [eax+8] 44h +
jnz loc_41563C  +
mov edi [esp+3Ch+var_20] +
movzx eax byte ptr [edi+9] +
cmp [edi+7] al +
jnz loc_4150A0  +
cmp dl 4 +
jz loc_41568B  +
mov eax [ebp+18h] +
movzx esi cl +
mov edi [esp+3Ch+arg_14] +
mov edx [ebx+4] +
mov eax [eax+10h] +
mov [esp+3Ch+var_28] edi +
mov edi [esp+3Ch+arg_10] +
mov [esp+8] edx +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_4] +
mov [esp+0Ch] edi +
call eax  +
test eax eax +
jnz loc_4150A0  +
lea esi [esi+0] +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+10h] +
test eax eax +
jnz loc_414FB2  +
mov eax [ebp+1Ch] +
cmp [eax+20h] ebx +
jz loc_414FB2  +
mov [ebx+10h] ebx +
mov ebx [ebx+14h] +
jmp loc_414E33  +
cmp dl 5 +
jz loc_414FD9  +
mov [esp+3Ch+var_38] 6C9h +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_40C6C0  +
mov eax [ebp+18h] +
mov esi [esp+3Ch+arg_4] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] 0 +
mov dword ptr [esp+0Ch] 6 +
mov [esp+8] esi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
call eax  +
test eax eax +
jz loc_414F90  +
movzx eax byte ptr [edi+0Ch] +
cmp al 6 +
jz loc_4155A8  +
test al al +
jnz loc_41502E  +
mov eax [esp+3Ch+arg_4] +
mov byte ptr [edi+0Ch] 1 +
mov [edi+14h] eax +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] eax +
call sub_414850  +
cmp byte ptr [ebx+0Ch] 0 +
jz loc_415450  +
mov byte ptr [ebx+0Ch] 6 +
mov edx 6 +
xor esi esi +
mov [ebx+14h] edi +
jmp loc_414E37  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_38] eax +
mov eax [ebx+14h] +
mov eax [eax+4] +
mov [esp+3Ch+var_3C] eax +
call strcmp  +
test eax eax +
jz loc_4150A0  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+4] +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_10] +
mov [esp+0Ch] edi +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+8] edi +
call eax  +
test eax eax +
jz loc_414F90  +
lea esi [esi+0] +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+1Ch] +
mov ecx [ebx+4] +
mov edx [eax+4] +
mov [esp+8] ecx +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] 0 +
call edx  +
test eax eax +
mov esi eax +
jz loc_414F90  +
mov eax [ebx] +
mov edx [esp+3Ch+arg_1C] +
mov [esi] eax +
mov eax [ebx+4] +
test edx edx +
mov [esi+4] eax +
mov eax [ebx+8] +
mov [esi+8] eax +
mov eax [ebx+0Ch] +
mov [esi+0Ch] eax +
mov eax [ebx+10h] +
mov [esi+10h] eax +
mov eax [ebx+14h] +
mov [esi+14h] eax +
mov eax [ebx+18h] +
mov byte ptr [esi+0Ch] 7 +
mov [esi+14h] ebx +
mov [esi+18h] eax +
mov eax [esp+3Ch+arg_18] +
jz loc_415650  +
mov [esp+3Ch+var_3C] eax +
call strlen  +
lea edx [eax+1] +
mov [esp+3Ch+var_38] edx +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_20] edx +
mov [esp+3Ch+var_3C] eax +
call sub_410230  +
test eax eax +
mov edi eax +
jz loc_414F90  +
mov edx [esp+3Ch+var_20] +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] edi +
mov [esp+8] edx +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov [esi+18h] edi +
mov [esp+8] esi +
mov [esp+3Ch+var_38] ebx +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_4101D0  +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_4150A0  +
mov eax [esp+3Ch+arg_24] +
mov [eax] esi +
jmp loc_4150A0  +
test byte ptr [ebp+1] 1 +
mov eax ebx +
jz loc_4154D0  +
test byte ptr [ebx+0Dh] 1 +
jz loc_4150B0  +
mov ecx [ebp+18h] +
cmp dl 7 +
mov ecx [ecx+14h] +
jnz loc_4151AD  +
mov ebx [ebx+14h] +
movzx edx byte ptr [ebx+0Ch] +
cmp dl 7 +
jz loc_4151A1  +
cmp dl 5 +
ja loc_415629  +
jmp ds:off_48B098[edx*4]  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] edi +
mov dword ptr [esp+0Ch] 5 +
jmp loc_415080  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_4150A0  +
mov eax [ebp+1Ch] +
cmp [eax+20h] ebx +
jz loc_4150A0  +
mov [ebx+10h] ebx +
jmp loc_4150A0  +
test dl dl +
jz loc_4155F0  +
mov byte ptr [ebx+0Ch] 5 +
mov [esp+3Ch+var_38] 8 +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_410230  +
test eax eax +
mov [ebx+14h] eax +
jz loc_414F90  +
mov eax [esp+3Ch+arg_14] +
mov [ebx+18h] eax +
mov [esp+3Ch+var_3C] eax +
call near ptr dword_40F9D0  +
mov esi [ebx+14h] +
mov edx 4 +
cmp eax 4 +
cmovbe edx eax +
cmp [esp+3Ch+arg_10] offset off_4760E0 +
mov [esi] edx +
jz loc_415658  +
mov eax [esp+3Ch+arg_10] +
mov edi [esp+3Ch+arg_4] +
cmp [eax+94h] edi +
jz loc_415500  +
mov eax [eax] +
mov [esp+3Ch+var_38] eax +
mov eax edi +
mov [esp+3Ch+var_3C] eax +
call sub_410B10  +
mov [esi+4] eax +
mov eax [ebx+14h] +
mov eax [eax+4] +
or dword ptr [eax+14h] 1 +
and byte ptr [ebx+0Dh] 0FDh +
jmp loc_4150A0  +
cmp eax 4 +
jnz loc_414EA0  +
mov byte ptr [ebx+0Ch] 4 +
jmp loc_414EA4  +
mov eax [esp+3Ch+arg_4] +
mov byte ptr [ebx+0Ch] 2 +
mov [ebx+14h] eax +
jmp loc_4150A0  +
mov dword ptr [esp+8] offset a_bfd_generic_0 +
mov [esp+3Ch+var_38] 5F3h +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_40C6F0  +
nop   +
mov eax [esp+3Ch+arg_4] +
mov byte ptr [ebx+0Ch] 1 +
mov [ebx+14h] eax +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_414850  +
jmp loc_4150A0  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+0Ch] +
mov [esp+3Ch+var_28] edi +
mov edi [esp+3Ch+arg_10] +
mov dword ptr [esp+8] 225h +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_4] +
mov [esp+0Ch] edi +
call eax  +
test eax eax +
jnz loc_4150A0  +
jmp loc_414F90  +
mov eax [ebx+18h] +
test eax eax +
jz loc_414FB2  +
mov ecx [esp+3Ch+arg_4] +
test byte ptr [ecx+2Ah] 20h +
jnz loc_414FB2  +
mov ecx [ebx+4] +
mov edx [ebp+18h] +
mov [esp+3Ch+var_20] ecx +
mov ecx [esp+3Ch+arg_4] +
mov edx [edx+14h] +
mov [esp+3Ch+var_28] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+0Ch] ecx +
mov ecx [esp+3Ch+var_20] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] ebp +
mov [esp+8] ecx +
call edx  +
test eax eax +
jz loc_414F90  +
mov dword ptr [ebx+18h] 0 +
jmp loc_414FB2  +
cmp dl 5 +
jz loc_4153AC  +
mov [esp+3Ch+var_38] 68Ch +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_40C6C0  +
mov eax [ebp+18h] +
mov edi [esp+3Ch+arg_14] +
mov eax [eax+8] +
mov [esp+3Ch+var_2C] edi +
mov edi [esp+3Ch+arg_4] +
mov dword ptr [esp+0Ch] 5 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ebp +
mov [esp+8] edi +
call eax  +
test eax eax +
jz loc_414F90  +
mov eax [ebx+18h] +
cmp [esp+3Ch+arg_14] eax +
jbe loc_4150A0  +
mov eax [esp+3Ch+arg_14] +
mov [ebx+18h] eax +
mov [esp+3Ch+var_3C] eax +
call near ptr dword_40F9D0  +
mov esi [ebx+14h] +
mov edx 4 +
cmp eax 4 +
cmovbe edx eax +
cmp [esp+3Ch+arg_10] offset off_4760E0 +
mov [esi] edx +
jz loc_415669  +
mov eax [esp+3Ch+arg_10] +
mov edi [esp+3Ch+arg_4] +
cmp [eax+94h] edi +
jz loc_415510  +
mov eax [eax] +
mov [esp+3Ch+var_38] eax +
mov eax edi +
mov [esp+3Ch+var_3C] eax +
call sub_410B10  +
mov [esi+4] eax +
mov eax [ebx+14h] +
mov eax [eax+4] +
or dword ptr [eax+14h] 1 +
jmp loc_4150A0  +
mov byte ptr [ebx+0Ch] 6 +
mov [ebx+14h] edi +
jmp loc_4150A0  +
cmp esi 1 +
jbe loc_415520  +
mov ecx [esp+3Ch+arg_1C] +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_2C] 0 +
mov dword ptr [esp+8] 1 +
mov [esp+0Ch] ecx +
mov ecx [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] ecx +
call sub_414050  +
mov ebx eax +
test ebx ebx +
jnz loc_414DB9  +
mov eax [esp+3Ch+arg_24] +
test eax eax +
jz loc_414F90  +
mov eax [esp+3Ch+arg_24] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_414F92  +
xor edi edi +
mov esi 6 +
jmp loc_414D9F  +
mov ecx [ebx+10h] +
test ecx ecx +
jnz loc_415196  +
mov ecx [ebp+1Ch] +
cmp [ecx+20h] ebx +
jnz loc_41518C  +
jmp loc_415196  +
xor edi edi +
mov esi 7 +
jmp loc_414D9F  +
mov eax [esp+3Ch+arg_10] +
mov [esi+4] eax +
jmp loc_415288  +
mov eax [esp+3Ch+arg_10] +
mov [esi+4] eax +
jmp loc_4150A0  +
mov eax [esp+3Ch+arg_1C] +
mov [esp+3Ch+var_28] 0 +
mov dword ptr [esp+0Ch] 1 +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_2C] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+8] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call sub_4140A0  +
mov ebx eax +
jmp loc_415496  +
mov edx [ebx+14h] +
mov edx [edx+4] +
mov edx [edx+94h] +
mov eax [eax+4] +
mov [esp+3Ch+var_28] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+0Ch] edx +
mov [esp+8] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_38] eax +
call ecx  +
test eax eax +
jnz loc_4150A0  +
jmp loc_414F90  +
mov edx [ebx+14h] +
mov edx [edx+94h] +
jmp loc_415563  +
mov edx [ebx+14h] +
jmp loc_415563  +
cmp [edi+14h] ebx +
jnz loc_41502E  +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] offset aBIndirectSymbo +
mov [esp+0Ch] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+8] eax +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
call off_476094  +
mov [esp+3Ch+var_3C] 5 +
call sub_40C770  +
xor eax eax +
jmp loc_414F92  +
mov eax [ebp+1Ch] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_414850  +
jmp loc_415208  +
mov [esp+3Ch+var_38] 5A8h +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_40C6C0  +
jmp loc_414CD5  +
xor edi edi +
mov esi 3 +
jmp loc_414D9F  +
xor edx edx +
jmp loc_415563  +
xor edi edi +
mov esi 2 +
jmp loc_414D9F  +
test cl cl +
jnz loc_414F36  +
jmp loc_4150A0  +
mov [esi+18h] eax +
jmp loc_415156  +
mov [esp+3Ch+var_38] offset aCommon +
mov eax [esp+3Ch+arg_4] +
jmp loc_415273  +
mov [esp+3Ch+var_38] offset aCommon +
mov eax [esp+3Ch+arg_4] +
jmp loc_415431  +
mov esi [esp+3Ch+arg_C] +
xor edi edi +
shr esi 7 +
and esi 1 +
jmp loc_414D9F  +
mov dword ptr [esp+8] offset a_bfd_generic_0 +
mov [esp+3Ch+var_38] 643h +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_40C6F0  +
mov esi esi +
lea edi [edi+0] +
push ebp  +
mov ebp edx +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi [eax+78h] +
mov [esp+0A8h+var_74] eax +
mov [esp+0A8h+var_6C] ecx +
test esi esi +
jz loc_415860  +
mov eax [esp+0A8h+var_74] +
mov eax [eax+7Ch] +
lea eax [esi+eax*4] +
cmp eax esi +
mov [esp+0A8h+var_78] eax +
jbe loc_4157DD  +
mov [esp+0A8h+var_70] ebp +
jmp loc_415713  +
cmp edx offset off_476188 +
jz loc_41589A  +
test byte ptr [edx+15h] 10h +
jnz loc_415722  +
cmp edx offset off_4762D8 +
jz loc_41580B  +
add esi 4 +
cmp [esp+0A8h+var_78] esi +
jbe loc_4157DD  +
mov ebx [esi] +
mov eax [ebx+0Ch] +
mov edx [ebx+10h] +
test eax 3882h +
jz loc_4156E8  +
mov edi [ebx+4] +
test ah 20h +
mov [esp+0A8h+var_7C] edi +
jnz loc_415812  +
cmp edx offset off_4762D8 +
jz loc_415812  +
test ah 10h +
mov edi [esp+0A8h+var_7C] +
jz loc_415760  +
lea edi [esi+4] +
mov ecx edi +
mov edi [esp+0A8h+var_7C] +
cmp [esp+0A8h+var_78] ecx +
jbe loc_415760  +
mov esi [esi+4] +
mov edi [esi+4] +
mov esi ecx +
nop   +
lea ecx [esp+0A8h+var_5C] +
mov ebp [ebx+8] +
mov [esp+0A8h+var_84] ecx +
mov ecx [esp+0A8h+var_6C] +
mov [esp+0A8h+var_9C] eax +
mov eax [esp+0A8h+var_74] +
mov [esp+0A8h+var_8C] 0 +
mov [esp+0A8h+var_94] ebp +
mov [esp+0A8h+var_88] ecx +
mov ecx [esp+0A8h+var_7C] +
mov [esp+0A8h+var_A4] eax +
mov eax [esp+0A8h+var_70] +
mov [esp+0A8h+var_98] edx +
mov [esp+0A8h+var_A0] edi +
mov [esp+0A8h+var_90] ecx +
mov [esp+0A8h+var_A8] eax +
mov [esp+0A8h+var_5C] 0 +
call sub_414CB0  +
test eax eax +
jz loc_4157E2  +
mov edx [ebx+0Ch] +
mov eax [esp+0A8h+var_5C] +
test dh 8 +
jz loc_4157F0  +
test eax eax +
jz loc_4157C9  +
cmp byte ptr [eax+0Ch] 0 +
jnz loc_4157F0  +
add esi 4 +
cmp [esp+0A8h+var_78] esi +
mov dword ptr [ebx+14h] 0 +
ja loc_415713  +
mov eax 1 +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+0A8h+var_70] +
mov ecx [edi+30h] +
mov edi [esp+0A8h+var_74] +
mov edi [edi+4] +
cmp [ecx+4] edi +
jz loc_415834  +
mov [ebx+14h] eax +
jmp loc_415706  +
mov edi [ebx+4] +
mov [esp+0A8h+var_7C] edi +
lea ecx [esi+4] +
cmp [esp+0A8h+var_78] ecx +
jbe loc_41573E  +
mov esi [esi+4] +
mov edi [esp+0A8h+var_7C] +
mov esi [esi+4] +
mov [esp+0A8h+var_7C] esi +
mov esi ecx +
jmp loc_415760  +
mov edi [eax+20h] +
mov ecx [ebx+10h] +
test edi edi +
jz loc_415880  +
cmp ecx offset off_476188 +
jz loc_415803  +
test byte ptr [ecx+15h] 10h +
jnz loc_415851  +
mov [eax+20h] ebx +
jmp loc_415803  +
cmp dword ptr [edi+10h] offset off_476188 +
jnz loc_415803  +
mov [eax+20h] ebx +
jmp loc_41588F  +
call sub_413EA0  +
test eax eax +
jz loc_4157E2  +
mov eax [esp+0A8h+var_74] +
mov esi [eax+78h] +
jmp loc_4156CC  +
mov ecx [ecx+14h] +
mov [eax+20h] ebx +
and ch 10h +
jz loc_415803  +
or dh 2 +
mov [ebx+0Ch] edx +
jmp loc_415803  +
mov edi [ebx+4] +
test ah 20h +
mov [esp+0A8h+var_7C] edi +
jnz loc_415812  +
jmp loc_41573E  +
push ebx  +
sub esp 18h +
movzx ebx byte ptr [eax+28h] +
and ebx 7 +
cmp ebx 1 +
jz loc_415900  +
cmp ebx 2 +
jz loc_4158D8  +
mov dword ptr [esp] 3 +
call sub_40C770  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
test ecx ecx +
mov ebx offset loc_415B40 +
mov ecx offset loc_415B20 +
cmovz ebx ecx +
mov [esp+8] ebx +
mov [esp+4] edx +
mov [esp] eax +
call sub_4149B0  +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
pop ebx  +
jmp loc_4156B0  +
mov edx [esp+8] +
xor ecx ecx +
mov eax [esp+4] +
jmp loc_4158B0  +
mov edx [esp+8] +
mov ecx 1 +
mov eax [esp+4] +
jmp loc_4158B0  +
push ebp  +
mov ebp edx +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov [esp+2Ch] eax +
mov eax ebx +
mov ebx [ebx+78h] +
mov [esp+28h] ecx +
mov dword ptr [ecx] 0 +
test ebx ebx +
jz loc_415A9D  +
mov eax [eax+7Ch] +
lea eax [ebx+eax*4] +
cmp eax ebx +
mov edi eax +
ja loc_415980  +
jmp loc_415A90  +
mov eax [esi+8] +
add eax [ecx+1Ch] +
cmp eax [edx+18h] +
jbe loc_415975  +
mov [edx+18h] eax +
add ebx 4 +
cmp edi ebx +
jbe loc_415A90  +
mov esi [ebx] +
mov eax [esi+10h] +
test byte ptr [eax+15h] 10h +
jnz loc_415994  +
test dword ptr [esi+0Ch] 2082h +
jz loc_415975  +
mov edx [esi+4] +
mov eax [ebp+1Ch] +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] edx +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_414050  +
test eax eax +
mov edx eax +
jz loc_415975  +
movzx eax byte ptr [eax+0Ch] +
mov ecx eax +
and ecx 0FFFFFFFBh +
cmp cl 1 +
jnz loc_415975  +
mov ecx [esi+10h] +
test byte ptr [ecx+15h] 10h +
jz loc_415AB0  +
cmp al 1 +
jnz loc_415967  +
mov ecx [edx+14h] +
test ecx ecx +
jz loc_415AB0  +
mov byte ptr [edx+0Ch] 5 +
mov dword ptr [esp+4] 8 +
mov eax [ebp+1Ch] +
mov [esp+20h] edx +
mov [esp+24h] ecx +
mov [esp] eax +
call sub_410230  +
mov edx [esp+20h] +
test eax eax +
mov [edx+14h] eax +
jz loc_415AA6  +
mov ecx [esi+10h] +
mov eax [esi+8] +
add eax [ecx+1Ch] +
mov [edx+18h] eax +
mov [esp] eax +
call near ptr dword_40F9D0  +
mov edx [esp+20h] +
mov ecx [edx+14h] +
cmp eax 4 +
mov [esp+20h] ecx +
mov ecx 4 +
cmova eax ecx +
mov ecx [esp+20h] +
mov [ecx] eax +
mov eax [esi+10h] +
mov ecx [esp+24h] +
mov [esp+24h] edx +
cmp eax offset off_4760E0 +
jz loc_415AF0  +
mov eax [eax] +
mov [esp] ecx +
mov [esp+4] eax +
call sub_410B10  +
mov esi [esp+20h] +
mov edx [esp+24h] +
mov [esi+4] eax +
mov eax [edx+14h] +
add ebx 4 +
mov eax [eax+4] +
or dword ptr [eax+14h] 1 +
cmp edi ebx +
ja loc_415980  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_413EA0  +
test eax eax +
jnz loc_415B10  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+28h] +
lea ecx [esp+2Ch] +
mov edx [esi+4] +
mov dword ptr [eax] 1 +
mov eax [ebp+18h] +
mov eax [eax] +
mov [esp+8] edx +
mov edx [esp+2Ch] +
mov [esp+0Ch] ecx +
mov [esp] ebp +
mov [esp+4] edx +
call eax  +
test eax eax +
jz loc_415AA6  +
mov ecx [esp+50h] +
mov edx ebp +
mov eax [esp+2Ch] +
call loc_4156B0  +
jmp loc_415A95  +
mov [esp+0A8h+var_A4] offset aCommon +
mov [esp] ecx +
call sub_410B10  +
mov edx [esp+20h] +
mov [edx+4] eax +
mov edx [esp+24h] +
jmp loc_415A7B  +
mov eax [esp+2Ch] +
mov ebx [eax+78h] +
jmp loc_415956  +
mov eax [esp+4] +
mov ecx [esp+14h] +
mov edx [esp+8] +
mov dword ptr [esp+4] 0 +
jmp loc_415930  +
mov eax [esp+4] +
mov ecx [esp+14h] +
mov edx [esp+8] +
mov dword ptr [esp+4] 1 +
jmp loc_415930  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+54h] +
mov ebp [esp+58h] +
mov eax [eax+78h] +
test eax eax +
jz loc_415F80  +
mov eax [ebp+3Ch] +
test eax eax +
jz loc_415B90  +
mov edi [esp+54h] +
mov ebx [edi+64h] +
test ebx ebx +
jnz loc_415CC0  +
mov eax [esp+54h] +
mov edi [eax+78h] +
mov eax [eax+7Ch] +
lea eax [edi+eax*4] +
cmp edi eax +
mov [esp+20h] eax +
jnb loc_415F70  +
mov eax [esp+50h] +
add eax 7Ch +
mov [esp+24h] eax +
mov eax [esp+50h] +
add eax 78h +
mov [esp+28h] eax +
jmp loc_415C72  +
mov edx [ebx+10h] +
cmp edx offset off_476188 +
jz loc_415C82  +
test byte ptr [edx+15h] 10h +
jnz loc_415C82  +
xor esi esi +
cmp edx offset off_4762D8 +
jz loc_415C82  +
movzx eax byte ptr [ebp+1] +
and eax 18h +
cmp al 18h +
jz loc_415C16  +
cmp al 10h +
jz loc_415EE8  +
mov edx [ebx+0Ch] +
test dl 82h +
jz loc_415DC0  +
mov eax [esp+54h] +
cmp [ebx] eax +
jz loc_415F60  +
mov eax [ebx+10h] +
xor ecx ecx +
cmp eax offset off_476230 +
jz loc_415C3A  +
mov eax [eax+3Ch] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_415EC5  +
cmp eax [edx+10h] +
setnz al  +
test al al +
jnz loc_415C65  +
test ecx ecx +
jz loc_415C65  +
mov ecx [esp+0A8h+var_4C] +
mov edx [esp+0A8h+var_84] +
mov eax [esp+0A8h+var_80] +
mov [esp+0A8h+var_A8] ebx +
call sub_413D30  +
test eax eax +
jz loc_415D19  +
test esi esi +
jz loc_415C65  +
mov dword ptr [esi+1Ch] 1 +
add edi 4 +
cmp [esp+0A8h+var_88] edi +
jbe loc_415F70  +
mov ebx [edi] +
mov eax [ebx+0Ch] +
test eax 3882h +
jz loc_415BC4  +
mov esi [ebx+14h] +
test esi esi +
jz loc_415E76  +
mov ecx [esp+54h] +
mov eax [ebp+30h] +
mov ecx [ecx+4] +
cmp [eax+4] ecx +
jz loc_415ED4  +
cmp byte ptr [esi+0Ch] 6 +
ja loc_415DA0  +
movzx eax byte ptr [esi+0Ch] +
jmp ds:off_48B0B0[eax*4]  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_415B90  +
cmp eax [ebx+3Ch] +
jnz loc_415CB5  +
mov eax [esp+54h] +
mov edi [esp+54h] +
mov eax [eax+4] +
mov eax [eax+10Ch] +
mov [esp] edi +
call eax  +
test eax eax +
mov ecx eax +
jz loc_415D19  +
mov eax [esp+54h] +
mov eax [eax] +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+0Ch] 4001h +
mov [ecx+10h] ebx +
mov [ecx+4] eax +
mov eax [esp+50h] +
mov [esp] ecx +
mov ecx [esp+5Ch] +
lea edx [eax+7Ch] +
add eax 78h +
call sub_413D30  +
test eax eax +
jnz loc_415B90  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esi+14h] +
mov eax [ebx+0Ch] +
and eax 0FFFFF77Fh +
or eax 2 +
mov [ebx+0Ch] eax +
mov eax [esi+18h] +
mov [ebx+8] eax +
mov eax [esi+14h] +
mov [ebx+10h] eax +
jmp loc_415BEB  +
or dword ptr [ebx+0Ch] 80h +
jmp loc_415BEB  +
mov eax [esi+18h] +
or dword ptr [ebx+0Ch] 2 +
mov [ebx+8] eax +
mov eax [ebx+10h] +
test byte ptr [eax+15h] 10h +
jnz loc_415BEB  +
cmp eax offset off_476188 +
jz loc_415D83  +
mov [esp+3Ch+var_38] 86Ah +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_40C6C0  +
mov dword ptr [ebx+10h] offset off_4760E0 +
jmp loc_415BEB  +
mov eax [ebx+0Ch] +
and ah 0F7h +
or al 80h +
jmp loc_415D31  +
mov dword ptr [esp+8] offset a_bfd_generic_1 +
mov [esp+3Ch+var_38] 850h +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_40C6F0  +
lea esi [esi+0] +
mov eax [ebx+10h] +
cmp eax offset off_4762D8 +
jz loc_415F40  +
test dl 4 +
jz loc_415DE1  +
xor ecx ecx +
test byte ptr [ebp+1] 18h +
setz cl  +
jmp loc_415C1B  +
cmp eax offset off_476188 +
jz loc_415F40  +
mov ecx [eax+14h] +
mov [esp+3Ch+var_10] ecx +
and ch 10h +
jnz loc_415F36  +
test dl 1 +
jz loc_415F47  +
xor ecx ecx +
and dh 10h +
jnz loc_415C1B  +
movzx edx byte ptr [ebp+1] +
mov cl 1 +
shr dl 5 +
and edx 3 +
cmp edx 1 +
jz loc_415C1B  +
cmp edx 2 +
jz loc_415E57  +
xor cl cl +
test edx edx +
jnz loc_415C1B  +
movzx edx byte ptr [ebp+0] +
mov ecx 1 +
and edx 3 +
cmp dl 2 +
jz loc_415C1B  +
test [esp+3Ch+var_10] 800000h +
jz loc_415C1B  +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_4115B0  +
xor ecx ecx +
test eax eax +
mov eax [ebx+10h] +
setz cl  +
jmp loc_415C1B  +
test ah 8 +
jnz loc_415BEB  +
cmp dword ptr [ebx+10h] offset off_476188 +
mov eax [ebx+4] +
jz loc_415F96  +
mov [esp+0A8h+var_98] 1 +
mov [esp+0A8h+var_9C] 0 +
mov [esp+0A8h+var_A0] 0 +
mov [esp+0A8h+var_A4] eax +
mov eax [ebp+1Ch] +
mov [esp+0A8h+var_A8] eax +
call sub_414050  +
mov esi eax +
test esi esi +
jz loc_415BEB  +
jmp loc_415C8D  +
mov edx [esp+0A8h+var_58] +
cmp eax [edx+68h] +
setnz al  +
jmp loc_415C36  +
mov eax [esi+20h] +
test eax eax +
jz loc_415CA0  +
mov [edi] eax +
mov ebx eax +
jmp loc_415CA0  +
mov edx [ebx+4] +
mov eax [ebp+20h] +
mov [esp+0A8h+var_9C] 0 +
mov [esp+0A8h+var_A0] 0 +
mov [esp+0A8h+var_A4] edx +
mov [esp+0A8h+var_A8] eax +
call sub_40FFC0  +
test eax eax +
jnz loc_415BFE  +
jmp loc_415C16  +
test edx edx +
lea esi [esi+0] +
jnz loc_415FC9  +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jz loc_415FC9  +
xor ecx ecx +
jmp loc_415C1B  +
xor ecx ecx +
jmp loc_415C22  +
test dh 8 +
jz loc_415F17  +
movzx edx byte ptr [ebp+1] +
xor ecx ecx +
and edx 18h +
cmp dl 18h +
setnz cl  +
jmp loc_415C1B  +
mov ecx edx +
mov eax [ebx+10h] +
shr ecx 0Ah +
and ecx 1 +
jmp loc_415C1B  +
mov eax 1 +
jmp loc_415D1B  +
mov eax [esp+54h] +
call sub_413EA0  +
test eax eax +
jz loc_415D19  +
jmp loc_415B7A  +
mov [esp+0A8h+var_A0] eax +
mov eax [esp+0A8h+var_58] +
mov [esp+0A8h+var_94] 1 +
mov [esp+0A8h+var_98] 0 +
mov [esp+0A8h+var_9C] 0 +
mov [esp+0A8h+var_A4] ebp +
mov [esp+0A8h+var_A8] eax +
call sub_4140A0  +
mov esi eax +
jmp loc_415EB8  +
mov [esp+0A8h+var_A0] offset a_bfd_generic_1 +
mov [esp+0A8h+var_A4] 8C3h +
mov [esp+0A8h+var_A8] offset a____Binutil_13 +
call sub_40C6F0  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+0F4h+var_A0] +
mov esi [esp+0F4h+var_9C] +
mov ebx [esp+0F4h+var_98] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jnz loc_4162C4  +
mov edi [esi+48h] +
test edi edi +
jz loc_4162A8  +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F0] 10h +
mov [esp+0F4h+var_F4] eax +
call sub_407B20  +
test eax eax +
mov edi eax +
jz loc_4160EC  +
mov eax [ebx+8] +
mov [edi+4] eax +
mov eax [ebx+10h] +
mov eax [eax] +
mov [esp+0F4h+var_F0] eax +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F4] eax +
call sub_413670  +
test eax eax +
mov [edi+0Ch] eax +
jz loc_4161B0  +
cmp dword ptr [ebx+4] 3 +
jz loc_4160F6  +
mov eax [ebx+10h] +
mov eax [eax+4] +
mov [esp+0F4h+var_E0] 1 +
mov [esp+0F4h+var_E4] 0 +
mov [esp+0F4h+var_E8] 0 +
mov [esp+0F4h+var_EC] eax +
mov eax [esp+0F4h+var_A0] +
mov [esp+0F4h+var_F0] eax +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F4] eax +
call sub_4140A0  +
test eax eax +
jz loc_4160AF  +
mov ecx [eax+1Ch] +
test ecx ecx +
jnz loc_416130  +
mov eax [esp+0F4h+var_A0] +
mov edx [ebx+10h] +
mov ecx [esp+0F4h+var_A0] +
mov eax [eax+18h] +
mov edx [edx+4] +
mov eax [eax+24h] +
mov [esp+0F4h+var_E4] 0 +
mov [esp+0F4h+var_E8] 0 +
mov [esp+0F4h+var_EC] 0 +
mov [esp+0F4h+var_F0] edx +
mov [esp+0F4h+var_F4] ecx +
call eax  +
test eax eax +
jnz loc_4161B0  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx+10h] +
mov edx [eax+24h] +
mov ebp [ebp+4] +
test edx edx +
mov ebp [ebp+9Ch] +
mov [edi] ebp +
jnz loc_41613F  +
mov eax [ebx+10h] +
mov eax [eax+8] +
mov [edi+8] eax +
mov eax [esi+4Ch] +
mov ecx [esi+48h] +
mov [ecx+eax*4] edi +
add eax 1 +
mov [esi+4Ch] eax +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add eax 20h +
mov [edi] eax +
mov eax [edi+0Ch] +
mov edx [eax+24h] +
test edx edx +
jz loc_41610B  +
mov [esp+0F4h+var_F4] eax +
call sub_4127D0  +
mov [esp+0F4h+var_F4] eax +
mov ebp eax +
call sub_40F150  +
test ebp ebp +
mov edx eax +
jz loc_41615B  +
test eax eax +
jz loc_4160EC  +
mov eax [ebx+10h] +
mov ecx [edi+0Ch] +
mov [esp+0F4h+var_D0] edx +
mov eax [eax+8] +
mov [esp+0F4h+var_E8] edx +
mov [esp+0F4h+var_F4] ecx +
mov [esp+0F4h+var_EC] eax +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F0] eax +
call sub_413130  +
mov edx [esp+0F4h+var_D0] +
test eax eax +
jz loc_4161C1  +
cmp eax 1 +
jz loc_416221  +
mov [esp+0F4h+var_EC] offset a_bfd_generic_r +
mov [esp+0F4h+var_F0] 990h +
mov [esp+0F4h+var_F4] offset a____Binutil_13 +
call sub_40C6F0  +
lea esi [esi+0] +
mov [esp+0F4h+var_F4] 11h +
call sub_40C770  +
jmp loc_4160EC  +
mov eax [esp+0F4h+var_A4] +
mov ebx [ebx+8] +
mov [esp+0F4h+var_D0] edx +
mov [esp+0F4h+var_F4] eax +
call sub_40EDD0  +
mov edx [esp+0F4h+var_D0] +
mov [esp+0F4h+var_E0] ebp +
mov [esp+0F4h+var_E4] 0 +
mov [esp+0F4h+var_F0] esi +
mov [esp+0F4h+var_EC] edx +
imul eax ebx +
mov [esp+0F4h+var_E8] eax +
mov eax [esp+0F4h+var_A4] +
mov [esp+0F4h+var_F4] eax +
call sub_410F50  +
mov edx [esp+0F4h+var_D0] +
mov [esp+0F4h+var_F4] edx +
mov ebx eax +
call free  +
test ebx ebx +
jz loc_4160EC  +
mov dword ptr [edi+8] 0 +
jmp loc_416114  +
mov eax [esp+0F4h+var_A0] +
cmp dword ptr [ebx+4] 3 +
mov eax [eax+18h] +
mov eax [eax+1Ch] +
mov [esp+0F4h+var_D0] eax +
mov eax [ebx+10h] +
mov ecx [eax+8] +
mov [esp+0F4h+var_CC] ecx +
mov ecx [edi+0Ch] +
mov eax [eax+4] +
mov ecx [ecx+20h] +
jz loc_4162A4  +
mov [esp+0F4h+var_EC] eax +
mov eax [esp+0F4h+var_A0] +
mov [esp+0F4h+var_C8] edx +
mov edx [esp+0F4h+var_CC] +
mov [esp+0F4h+var_D8] 0 +
mov [esp+0F4h+var_DC] 0 +
mov [esp+0F4h+var_F4] eax +
mov eax [esp+0F4h+var_D0] +
mov [esp+0F4h+var_E4] edx +
mov [esp+0F4h+var_E0] 0 +
mov [esp+0F4h+var_E8] ecx +
mov [esp+0F4h+var_F0] 0 +
call eax  +
mov edx [esp+0F4h+var_C8] +
test eax eax +
jnz loc_4161C1  +
mov [esp+0F4h+var_F4] edx +
call free  +
xor eax eax +
jmp loc_4160EE  +
mov eax [eax] +
jmp loc_416248  +
mov [esp+0F4h+var_EC] offset a_bfd_generic_r +
mov [esp+0F4h+var_F0] 952h +
mov [esp+0F4h+var_F4] offset a____Binutil_13 +
call sub_40C6F0  +
mov [esp+0F4h+var_EC] offset a_bfd_generic_r +
mov [esp+0F4h+var_F0] 950h +
mov [esp+0F4h+var_F4] offset a____Binutil_13 +
call sub_40C6F0  +
push ebx  +
sub esp 18h +
mov eax [esp+110h+var_F0] +
mov [esp+110h+var_10C] 18h +
mov ebx [esp+110h+var_EC] +
mov [esp+110h+var_110] eax +
call sub_407C00  +
test eax eax +
jz loc_416328  +
mov dword ptr [eax+4] 0 +
mov edx [ebx+0A4h] +
test edx edx +
jz loc_416320  +
mov [edx] eax +
mov [ebx+0A4h] eax +
add esp 18h +
pop ebx  +
retn   +
mov [ebx+0A0h] eax +
jmp loc_416313  +
xor eax eax +
jmp loc_416319  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_C] +
mov esi [esp+3Ch+arg_0] +
mov edx [esp+3Ch+arg_4] +
mov edi [esp+3Ch+arg_8] +
mov eax [ebx+4] +
cmp eax 1 +
jz loc_416400  +
cmp eax 2 +
jnz loc_4163E3  +
test byte ptr [edi+15h] 1 +
jz loc_416468  +
mov edx [ebx+0Ch] +
mov eax 1 +
test edx edx +
jz loc_4163DB  +
mov ebp [ebx+10h] +
mov eax [ebx+14h] +
test ebp ebp +
mov [esp+3Ch+var_1C] eax +
jz loc_416420  +
cmp edx ebp +
ja loc_416481  +
mov ebp [ebx+8] +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_18] edx +
call sub_40EDD0  +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_28] edx +
imul eax ebp +
mov ebp [esp+3Ch+var_1C] +
mov [esp+3Ch+var_30] eax +
mov [esp+3Ch+var_34] ebp +
call sub_410F50  +
cmp ebp [ebx+14h] +
jz loc_4163DB  +
mov [esp+3Ch+var_3C] ebp +
mov [esp+3Ch+var_1C] eax +
call free  +
mov eax [esp+3Ch+var_1C] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+3Ch+var_34] offset a_bfd_default_l +
mov [esp+3Ch+var_38] 9D5h +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_40C6F0  +
nop   +
mov [esp+3Ch+arg_0] ebx +
mov ecx edi +
mov eax esi +
mov [esp+3Ch+arg_4] 0 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_414290  +
mov eax [esi+84h] +
mov [esp+3Ch+var_18] edx +
mov ecx [eax+2Ch] +
mov eax [edi+14h] +
shr eax 4 +
and eax 1 +
mov [esp+3Ch+var_34] eax +
mov eax [esi+4] +
mov eax [eax+8] +
mov [esp+3Ch+var_3C] edx +
test eax eax +
setz al  +
movzx eax al +
mov [esp+3Ch+var_38] eax +
call ecx  +
mov edx [esp+3Ch+var_18] +
test eax eax +
mov [esp+3Ch+var_1C] eax +
jnz loc_41638C  +
xor eax eax +
jmp loc_4163DB  +
mov [esp+3Ch+var_38] 9ECh +
mov [esp+3Ch+var_3C] offset a____Binutil_13 +
call sub_40C6C0  +
jmp loc_416366  +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_18] edx +
call sub_40EFC0  +
test eax eax +
mov ecx eax +
mov [esp+3Ch+var_1C] eax +
jz loc_416461  +
mov edx [esp+3Ch+var_18] +
mov eax edx +
sub eax ebp +
cmp ebp 1 +
mov [esp+3Ch+var_18] eax +
jz loc_416516  +
mov [esp+3Ch+var_14] esi +
mov esi [esp+3Ch+var_18] +
mov [esp+3Ch+var_10] edi +
mov edi ebx +
mov ebx ecx +
jmp loc_4164C2  +
mov esi eax +
mov eax [edi+14h] +
mov [esp+3Ch+var_3C] ebx +
add ebx ebp +
mov [esp+3Ch+var_34] ebp +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax esi +
sub eax ebp +
cmp ebp esi +
jbe loc_4164C0  +
mov eax esi +
mov ecx ebx +
test eax eax +
mov ebx edi +
mov edi [esp+3Ch+var_10] +
mov [esp+3Ch+var_18] esi +
mov esi [esp+3Ch+var_14] +
jnz loc_4164FD  +
mov edx [ebx+0Ch] +
jmp loc_41638C  +
mov eax [ebx+14h] +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call memcpy  +
jmp loc_4164F5  +
mov [esp+3Ch+var_34] edx +
mov eax [ebx+14h] +
mov [esp+3Ch+var_18] edx +
movzx eax byte ptr [eax] +
mov [esp+3Ch+var_3C] ecx +
mov [esp+3Ch+var_38] eax +
call memset  +
mov edx [esp+3Ch+var_18] +
jmp loc_41638C  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+50h] +
mov ebp [esp+54h] +
mov dword ptr [esp+20h] 0 +
mov ecx [esi+64h] +
mov dword ptr [esi+78h] 0 +
mov dword ptr [esi+7Ch] 0 +
test ecx ecx +
jz loc_4165A0  +
lea esi [esi+0] +
mov eax [ecx+0A0h] +
test eax eax +
jnz loc_416586  +
jmp loc_416599  +
mov eax [eax] +
test eax eax +
jz loc_416599  +
cmp dword ptr [eax+4] 1 +
jnz loc_416580  +
mov edx [eax+10h] +
mov eax [eax] +
or byte ptr [edx+18h] 2 +
test eax eax +
jnz loc_416586  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jnz loc_416570  +
mov ebx [ebp+34h] +
lea edi [esp+20h] +
test ebx ebx +
jnz loc_4165BA  +
jmp loc_4165DC  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_4165DC  +
mov [esp+0Ch] edi +
mov [esp+8] ebp +
mov [esp+4] ebx +
mov [esp] esi +
call loc_415B60  +
test eax eax +
jnz loc_4165B0  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea eax [esp+24h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_413DB0 +
mov eax [ebp+1Ch] +
mov [esp+24h] ebp +
mov [esp+28h] esi +
mov [esp+2Ch] edi +
mov [esp] eax +
call sub_4147C0  +
lea edx [esi+7Ch] +
mov ecx edi +
lea eax [esi+78h] +
mov dword ptr [esp] 0 +
call sub_413D30  +
test eax eax +
jz loc_4165D2  +
movzx eax byte ptr [ebp+0] +
and eax 3 +
cmp al 2 +
jz loc_4166BE  +
mov edi [esi+64h] +
test edi edi +
jz loc_41669F  +
mov ebx [edi+0A0h] +
test ebx ebx +
jnz loc_41666C  +
jmp loc_416698  +
mov [esp+0Ch] ebx +
mov [esp+8] edi +
mov [esp+4] ebp +
mov [esp] esi +
jb loc_4166B0  +
sub eax 3 +
cmp eax 1 +
ja loc_4166B0  +
call loc_415FF0  +
test eax eax +
jz loc_4165D2  +
mov ebx [ebx] +
test ebx ebx +
jz loc_416698  +
mov eax [ebx+4] +
cmp eax 1 +
jnz loc_416640  +
mov dword ptr [esp+4] 1 +
mov ecx edi +
mov edx ebp +
mov [esp] ebx +
mov eax esi +
call sub_414290  +
test eax eax +
jz loc_4165D2  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_41666C  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_416631  +
mov eax 1 +
jmp loc_4165D4  +
***
call sub_416330  +
test eax eax +
jnz loc_416666  +
jmp loc_4165D2  +
***
mov edi [esi+64h] +
test edi edi +
jz loc_41669F  +
mov [esp+50h] esi +
mov [esp+54h] ebp +
mov ebx [edi+0A0h] +
mov dword ptr [edi+4Ch] 0 +
test ebx ebx +
jnz loc_4166EB  +
jmp loc_416730  +
cmp eax 1 +
jz loc_416744  +
mov ebx [ebx] +
test ebx ebx +
jz loc_416700  +
mov eax [ebx+4] +
lea edx [eax-3] +
cmp edx 1 +
ja loc_4166E0  +
mov ebx [ebx] +
add dword ptr [edi+4Ch] 1 +
test ebx ebx +
jnz loc_4166EB  +
mov eax [edi+4Ch] +
test eax eax +
jz loc_416730  +
shl eax 2 +
mov [esp+4] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_407B20  +
test eax eax +
mov [edi+48h] eax +
jz loc_4165D2  +
or dword ptr [edi+14h] 4 +
mov dword ptr [edi+4Ch] 0 +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_4166CD  +
mov esi [esp+50h] +
mov ebp [esp+54h] +
jmp loc_41662A  +
***
mov esi [ebx+10h] +
mov edx [esi+94h] +
mov [esp+4] esi +
mov [esp] edx +
mov [esp+1Ch] edx +
call loc_40C7C0  +
test eax eax +
js loc_4165D2  +
mov [esp] eax +
mov [esp+18h] eax +
call sub_40EFC0  +
mov ecx [esp+18h] +
mov edx [esp+1Ch] +
test eax eax +
mov ebp eax +
jz loc_4167D3  +
mov eax [edx+78h] +
mov [esp] edx +
mov [esp+8] ebp +
mov [esp+4] esi +
mov [esp+0Ch] eax +
call sub_40C800  +
mov [esp] ebp +
mov [esp+18h] eax +
call free  +
mov eax [esp+18h] +
test eax eax +
js loc_4165D2  +
cmp eax [esi+4Ch] +
jz loc_4167CB  +
mov dword ptr [esp+4] 79Bh +
mov dword ptr [esp] offset a____Binutil_13 +
call sub_40C6C0  +
mov eax [esp+18h] +
add [edi+4Ch] eax +
jmp loc_4166E5  +
***
test ecx ecx +
jz loc_41677F  +
jmp loc_4165D2  +
***
mov ecx [edx+4] +
mov edx [edx] +
sub ecx 3 +
cmp ecx 2 +
adc eax 0 +
test edx edx +
jnz loc_4167F0  +
retn   +
***
xor eax eax +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_10] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_1C] offset unk_49F308 +
mov [esp+1Ch+var_18] eax +
call sub_40FFC0  +
add esp 1Ch +
retn   +
***
mov [esp+18h+var_14] 8 +
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] offset unk_49F308 +
call sub_410230  +
test eax eax +
jz loc_4168C0  +
mov edx [esp+18h+arg_4] +
mov [eax+4] edx +
mov edx [ebx+0Ch] +
mov [eax] edx +
mov [ebx+0Ch] eax +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp+0Ch] 2Ah +
mov dword ptr [esp+8] 10h +
mov dword ptr [esp+4] offset sub_413BA0 +
mov dword ptr [esp] offset unk_49F308 +
call sub_40FC80  +
add esp 1Ch +
retn   +
***
sub esp 1Ch +
mov dword ptr [esp] offset unk_49F308 +
call sub_40FD90  +
add esp 1Ch +
retn   +
***
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov eax [ebx+14h] +
and eax 0C0000h +
cmp eax 40000h +
jz loc_416A21  +
jbe loc_4169D0  +
cmp eax 80000h +
jz loc_416985  +
cmp eax 0C0000h +
jnz loc_416A05  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jz loc_416A50  +
nop   +
lea esi [esi+0] +
mov [ebx+7Ch] eax +
mov eax 1 +
mov dword ptr [ebx+3Ch] offset off_476230 +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jnz loc_416970  +
mov esi [eax+24h] +
cmp [ebx+24h] esi +
jz loc_416970  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] offset aBDuplicateSect +
call eax  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jmp loc_416970  +
test eax eax +
jnz loc_416A05  +
mov eax [ebx+94h] +
test byte ptr [eax+2Ch] 10h +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jz loc_416970  +
mov edx [eax+94h] +
test byte ptr [edx+2Ah] 20h +
jz loc_416970  +
mov eax [esp+24h+arg_4] +
mov [eax+4] ebx +
xor eax eax +
jmp loc_41697F  +
mov [esp+24h+var_1C] offset a_bfd_handle_al +
mov [esp+24h+var_20] 0B4Ah +
mov [esp+24h+var_24] offset a____Binutil_13 +
call sub_40C6F0  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] offset aBIgnoringDupli +
call eax  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jmp loc_416970  +
mov edx [ebx+24h] +
cmp edx [eax+24h] +
jnz loc_4169A0  +
test edx edx +
jz loc_416970  +
mov eax [ebx+94h] +
lea edx [esp+24h+var_C] +
mov [esp+24h+var_1C] edx +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_8] 0 +
mov [esp+24h+var_24] eax +
call sub_4111A0  +
test eax eax +
jnz loc_416AD7  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_24] offset aBCouldNotReadC +
call eax  +
mov edx [esp+24h+var_C] +
test edx edx +
jz loc_416ABB  +
mov [esp+24h+var_24] edx +
call free  +
mov eax [esp+24h+var_8] +
test eax eax +
jz loc_416ACB  +
mov [esp+24h+var_24] eax +
call free  +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
jmp loc_416970  +
mov eax [esp+24h+arg_4] +
lea ecx [esp+24h+var_8] +
mov eax [eax+4] +
mov edx [eax+94h] +
mov [esp+24h+var_1C] ecx +
mov [esp+24h+var_20] eax +
mov [esp+24h+var_24] edx +
call sub_4111A0  +
test eax eax +
jz loc_416B47  +
mov eax [ebx+24h] +
mov esi [esp+24h+var_C] +
mov [esp+24h+var_1C] eax +
mov eax [esp+24h+var_8] +
mov [esp+24h+var_24] esi +
mov [esp+24h+var_20] eax +
call memcmp  +
mov edx esi +
test eax eax +
jz loc_416AAF  +
mov eax [esp+24h+arg_8] +
mov edx [ebx+94h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_1C] ebx +
mov [esp+24h+var_24] offset aBDuplicateSe_0 +
call eax  +
mov edx [esp+24h+var_C] +
jmp loc_416AAF  +
mov eax [esp+24h+arg_8] +
mov eax [eax+18h] +
mov edx [eax+2Ch] +
mov eax [esp+24h+arg_4] +
mov eax [eax+4] +
mov ecx [eax+94h] +
mov [esp+24h+var_1C] eax +
mov [esp+24h+var_24] offset aBCouldNotReadC +
mov [esp+24h+var_20] ecx +
call edx  +
mov edx [esp+24h+var_C] +
jmp loc_416AAF  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+24h] +
mov esi [esp+28h] +
mov eax [ebx+14h] +
test eax 20000h +
jz loc_416B9F  +
test eax 2000000h +
jz loc_416BA8  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1 +
mov dword ptr [esp] offset unk_49F308 +
mov [esp+4] eax +
call sub_40FFC0  +
mov edx [eax+0Ch] +
mov edi eax +
test edx edx +
jz loc_416BF0  +
mov [esp+28h] esi +
mov [esp+20h] ebx +
mov [esp+24h] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_416920  +
***
mov dword ptr [esp+4] 8 +
mov dword ptr [esp] offset unk_49F308 +
call sub_410230  +
test eax eax +
jz loc_416C15  +
mov edx [edi+0Ch] +
mov [eax+4] ebx +
mov [eax] edx +
mov [edi+0Ch] eax +
jmp loc_416B9F  +
***
mov eax [esi+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aFPAlready_link +
call eax  +
jmp loc_416B9F  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi [esp+4+arg_4] +
mov esi [esp+4+arg_0] +
mov ecx [edi+10h] +
test ecx ecx +
jz loc_416D3F  +
mov eax ecx +
jmp loc_416C61  +
cmp [edx+10h] eax +
setz dl  +
test dl dl +
jnz loc_416C78  +
mov eax [eax+10h] +
test eax eax +
jz loc_416C78  +
test byte ptr [eax+15h] 80h +
jnz loc_416C5A  +
mov edx [eax+0Ch] +
test edx edx +
jnz loc_416C50  +
cmp [esi+68h] eax +
setz dl  +
test dl dl +
jz loc_416C5A  +
mov edx [ecx+0Ch] +
nop   +
lea esi [esi+0] +
test edx edx +
jz loc_416C93  +
mov ecx [edx+14h] +
test ch 80h +
jz loc_416CA0  +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_416C84  +
test eax eax +
mov edx offset off_476230 +
cmovz eax edx +
jmp loc_416D1A  +
mov ebx [edx+0Ch] +
test ebx ebx +
mov [esp+4+var_4] ebx +
jz loc_416CC0  +
mov ebx [esp+4+var_4] +
cmp [ebx+10h] edx +
setz bl  +
mov ebp ebx +
mov ebx ebp +
test bl bl +
jnz loc_416CD0  +
mov edx [esp+4+var_4] +
jmp loc_416C80  +
cmp [esi+68h] edx +
setz bl  +
mov ebp ebx +
mov ebx ebp +
test bl bl +
jz loc_416CBB  +
nop   +
test eax eax +
jz loc_416D18  +
mov esi [eax+14h] +
mov ebx ecx +
xor ebx esi +
test ebx 403h +
jz loc_416D03  +
mov ebx [edi+14h] +
xor ebx ecx +
and ebx 401h +
jnz loc_416D1A  +
and esi 2 +
jz loc_416D18  +
and ecx 2 +
cmovnz eax edx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl 8 +
jnz loc_416D22  +
and ebx 10h +
jz loc_416D33  +
xor ecx [edi+14h] +
and ecx 10h +
cmovz eax edx +
jmp loc_416D1A  +
mov eax edx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx [edi+14h] +
and ecx 8 +
cmovz eax edx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+4+arg_8] +
cmp [edx+1Ch] edi +
cmovbe eax edx +
jmp loc_416D1A  +
mov eax [edi+94h] +
mov edx [eax+64h] +
xor eax eax +
jmp loc_416C80  +
***
sub esp 0Ch +
mov ebx [esp+0Ch+arg_0] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_416D70  +
add esp 0Ch +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+14h] +
test edx edx +
jz loc_416D64  +
mov eax [edx+3Ch] +
test eax eax +
jz loc_416D64  +
test byte ptr [eax+15h] 80h +
jz loc_416D64  +
mov ecx [eax+0Ch] +
test ecx ecx +
jz loc_416DC0  +
cmp eax [ecx+10h] +
setnz cl  +
test cl cl +
jz loc_416D64  +
mov esi [edx+38h] +
add esi [ebx+18h] +
add esi [eax+1Ch] +
mov [ebx+18h] esi +
mov [esp+0Ch+var_8] eax +
mov eax [esp+0Ch+arg_4] +
mov [esp+0Ch+var_4] esi +
mov [esp+0Ch+var_C] eax +
call sub_416C30  +
sub esi [eax+1Ch] +
mov [ebx+14h] eax +
mov [ebx+18h] esi +
jmp loc_416D64  +
mov esi [esp+0Ch+arg_4] +
cmp eax [esi+68h] +
setnz cl  +
jmp loc_416D91  +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov edx [esp+20h] +
mov eax [eax+1Ch] +
mov [esp+8] edx +
mov dword ptr [esp+4] offset sub_416D50 +
mov [esp] eax +
call sub_4147C0  +
add esp 1Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+38h] +
test esi esi +
jz loc_416E15  +
cmp byte ptr [esi+0Ch] 5 +
jz loc_416E29  +
mov dword ptr [esp+4] 0C49h +
mov dword ptr [esp] offset a____Binutil_13 +
call sub_40C6C0  +
mov eax [esi+18h] +
mov [esp+8] eax +
mov eax [esi+14h] +
mov ebp [eax] +
mov ebx [eax+4] +
mov eax [esp+30h] +
mov [esp] eax +
call sub_40EDD0  +
mov ecx ebp +
mov edi eax +
shl edi cl +
test edi edi +
jz loc_416EB6  +
mov edx edi +
neg edx  +
mov eax edx +
and eax edi +
cmp eax edi +
jz loc_416E76  +
mov dword ptr [esp+4] 0C52h +
mov dword ptr [esp] offset a____Binutil_13 +
mov [esp+0Ch] edx +
call sub_40C6C0  +
mov edx [esp+0Ch] +
mov eax [ebx+24h] +
lea eax [edi+eax-1] +
and eax edx +
cmp ebp [ebx+40h] +
mov [ebx+24h] eax +
jbe loc_416E8A  +
mov [ebx+40h] ebp +
mov ebp [esp+8] +
mov [esi+14h] ebx +
mov [esi+18h] eax +
mov byte ptr [esi+0Ch] 3 +
add ebp eax +
mov eax [ebx+14h] +
mov [ebx+24h] ebp +
and ah 0EFh +
or eax 1 +
mov [ebx+14h] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor edx edx +
jmp loc_416E5A  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+3Ch+arg_0] +
test ebp ebp +
jz loc_41706F  +
mov [esp+3Ch+var_1C] 0 +
mov [esp+3Ch+var_10] 0 +
mov [esp+3Ch+var_20] 0 +
mov [esp+3Ch+var_24] 0 +
mov [esp+3Ch+var_14] 0 +
nop   +
lea esi [esi+0] +
mov ebx [ebp+0Ch] +
test ebx ebx +
jz loc_416F94  +
lea ebx [ebp+0Ch] +
xor eax eax +
mov [esp+3Ch+var_18] ebx +
jmp loc_416F69  +
mov esi [eax+4] +
mov edi offset asc_48B1A8 +
mov ecx 2 +
cmps   +
mov edi [esp+3Ch+var_1C] +
setb cl  +
setnbe bl  +
sub ebx ecx +
movsx ecx bl +
mov ebx [esp+3Ch+var_24] +
test ecx ecx +
cmovz edi ebp +
mov [esp+3Ch+var_1C] edi +
cmovnz ebx ebp +
mov [esp+3Ch+var_24] ebx +
and edx 2 +
mov ebx [esp+3Ch+var_20] +
movzx edx byte ptr [eax+8] +
cmovnz ebx ebp +
or edx 4 +
mov [eax+8] dl +
and edx 1 +
mov [esp+3Ch+var_20] ebx +
jnz loc_417043  +
mov edx [ebp+38h] +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_3C] eax +
call edx  +
test eax eax +
jz loc_416F94  +
movzx edx byte ptr [eax+8] +
test dl 1 +
jz loc_416F16  +
mov [esp+3Ch+var_24] ebp +
jmp loc_416F48  +
mov ecx [ebp+1Ch] +
xor eax eax +
lea ebx [ebp+1Ch] +
test ecx ecx +
jz loc_417038  +
mov esi [esp+3Ch+arg_4] +
mov edx [ebp+38h] +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_34] esi +
call edx  +
test eax eax +
jz loc_417038  +
test byte ptr [eax+8] 1 +
jnz loc_416FF6  +
mov esi [eax+4] +
mov edi offset asc_48B1A8 +
mov ecx 2 +
cmps   +
mov edi [esp+3Ch+var_10] +
setb cl  +
setnbe dl  +
sub edx ecx +
mov ecx [esp+3Ch+var_14] +
movsx edx dl +
test edx edx +
cmovz edi ebp +
cmovnz ecx ebp +
mov [esp+3Ch+var_10] edi +
mov [esp+3Ch+var_14] ecx +
jmp loc_416FA4  +
test ebp ebp +
mov eax 1 +
mov [esp+3Ch+var_1C] 0 +
setz dl  +
mov [esp+3Ch+var_24] 0 +
jz loc_417057  +
mov eax [esp+3Ch+var_24] +
test eax eax +
jz loc_417073  +
mov ebx [esp+3Ch+var_24] +
cmp [esp+3Ch+var_20] ebx +
mov esi [esp+3Ch+arg_8] +
setz al  +
movzx eax al +
mov [esi] eax +
mov eax ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_416F00  +
mov edx [esp+3Ch+var_24] +
mov ebp [esp+3Ch+var_14] +
test edx edx +
setz al  +
test ebp ebp +
setz dl  +
jnz loc_417012  +
test al al +
jz loc_417012  +
mov eax [esp+3Ch+var_1C] +
test eax eax +
mov [esp+3Ch+var_24] eax +
jnz loc_41701A  +
mov ebp [esp+3Ch+var_10] +
test ebp ebp +
jnz loc_417077  +
xor eax eax +
jmp loc_417030  +
test dl dl +
jnz loc_417067  +
mov eax [esp+3Ch+arg_8] +
mov dword ptr [eax] 1 +
add esp 3Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 2Ch +
lea eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_10] 0 +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_416EC0  +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
retn   +
***
mov edx [esp+8] +
xor eax eax +
jmp loc_4170D0  +
add eax 1 +
cmp eax 25h +
jz loc_4170E7  +
cmp ds:dword_48BE60[eax*8] edx +
jnz loc_4170C8  +
imul eax ds:dword_48BE64[eax*8] +
add eax offset dword_48C1A0 +
retn   +
***
xor al al +
retn   +
***
sub esp 1Ch +
mov eax [esp+28h] +
movzx eax byte ptr [eax+4] +
cmp eax 24h +
jbe loc_41711B  +
mov [esp+8] eax +
mov eax [esp+20h] +
mov dword ptr [esp] offset aBInvalidAvrRel +
mov [esp+4] eax +
call off_476094  +
xor eax eax +
imul eax eax +
mov edx [esp+24h] +
add eax offset dword_48C1A0 +
mov [edx+0Ch] eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 4 +
mov ecx [edx+120h] +
mov ebx [ecx+3Ch] +
mov ebp [ecx+38h] +
mov edi [ebx+1Ch] +
mov ebx [edx+13Ch] +
mov [esp+4+var_4] edi +
test ebx ebx +
jz loc_417174  +
mov esi [edx+144h] +
xor ecx ecx +
cmp [esi] eax +
jnz loc_41716D  +
jmp loc_417181  +
cmp [esi+ecx*4] eax +
lea edi ds:0[ecx*4] +
jz loc_417183  +
add ecx 1 +
cmp ecx ebx +
jnz loc_417161  +
add esp 4 +
mov eax 20000h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
mov eax [esp+4+var_4] +
mov edx [edx+140h] +
add eax ebp +
add eax [edx+edi] +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov dword ptr [eax+14h] 0 +
mov eax 1 +
retn   +
***
jmp loc_4171D0  +
mov eax [esp+4] +
mov edx [esp+8] +
cmp dword ptr [eax+14h] 1 +
mov edx [edx+120h] +
sbb eax eax +
not eax  +
and eax 4 +
add [edx+24h] eax +
mov eax 1 +
retn   +
***
mov ebx [eax+0A0h] +
mov ecx [ebx+68h] +
mov edx [ebx+78h] +
test ecx ecx +
jnz loc_417227  +
test edx edx +
jz loc_417220  +
cmp [ebx+78h] edx +
jz loc_417220  +
mov [ebx+78h] edx +
add esp 28h +
mov eax edx +
pop ebx  +
retn   +
test edx edx +
jnz loc_417214  +
lea edx [ebx+48h] +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_10] 0 +
mov [esp+28h+var_14] 0 +
mov [esp+28h+var_18] 0 +
mov [esp+28h+var_1C] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_28] eax +
call sub_424210  +
mov edx eax +
jmp loc_417214  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov [esp] ebx +
call sub_40ECC0  +
mov edx 2 +
lea ecx [eax-1] +
cmp ecx 6Ah +
ja loc_417294  +
movzx edx ds:byte_48BBFF[eax] +
mov eax [ebx+0A0h] +
mov ecx 53h +
mov [eax+26h] cx +
mov eax [ebx+0A0h] +
and dword ptr [eax+20h] 0FFFFFF80h +
mov eax [ebx+0A0h] +
or [eax+20h] edx +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov edx [eax+0A0h] +
movzx ecx word ptr [edx+26h] +
cmp cx 1057h +
jnz loc_417310  +
mov edx [edx+20h] +
mov ebx 2 +
and edx 7Fh +
lea ecx [edx-1] +
cmp ecx 6Ah +
ja loc_4172F3  +
movzx ebx ds:byte_48BB7F[edx] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 44h +
mov [esp] eax +
call sub_40ED50  +
add esp 18h +
pop ebx  +
retn   +
***
cmp cx 53h +
mov ebx 2 +
jz loc_4172D9  +
jmp loc_4172F3  +
***
push ebx  +
sub esp 28h +
mov dword ptr [esp] 148h +
call sub_40F150  +
test eax eax +
mov ebx eax +
jz loc_4173A0  +
mov eax [esp+30h] +
mov dword ptr [esp+10h] 4 +
mov dword ptr [esp+0Ch] 48h +
mov dword ptr [esp+8] offset loc_417470 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_43EF50  +
test eax eax +
jz loc_417392  +
lea eax [ebx+0FCh] +
mov dword ptr [esp+8] 18h +
mov dword ptr [esp+4] offset dword_417410 +
mov [esp] eax +
call sub_40FD60  +
test eax eax +
jz loc_4173A4  +
mov dword ptr [ebx+24h] offset loc_4173C0 +
mov eax ebx +
add esp 28h +
pop ebx  +
retn   +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_41738D  +
***
xor eax eax +
jmp loc_41738D  +
***
mov eax [esp+30h] +
mov [esp] eax +
call sub_432760  +
xor eax eax +
jmp loc_41738D  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esi+9Ch] +
mov eax [ebx+140h] +
test eax eax +
jz loc_4173E1  +
mov [esp] eax +
call free  +
mov eax [ebx+144h] +
test eax eax +
jz loc_4173F3  +
mov [esp] eax +
call free  +
add ebx 0FCh +
mov [esp] ebx +
call sub_40FD90  +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_432760  +
***
jmp loc_432690  +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 6Ch +
mov edi [eax+0A0h] +
mov [esp+70h+var_40] ecx +
mov ecx eax +
mov [esp+70h+var_6C] edx +
mov [esp+70h+var_70] ecx +
mov [esp+70h+var_50] edx +
mov [esp+70h+var_48] eax +
call sub_428190  +
mov [esp+70h+var_2C] eax +
mov eax [esi+8Ch] +
mov ecx [eax+30h] +
lea edx [eax+90h] +
mov [esp+70h+var_54] ecx +
xor ecx ecx +
cmp esi [esi+3Ch] +
mov esi [esi+24h] +
cmovnz ecx edx +
mov edx [ecx] +
mov [esp+70h+var_4C] esi +
test edx edx +
jz loc_4179C5  +
mov eax [esp+70h+arg_0] +
xor ebx ebx +
mov esi [esp+70h+var_40] +
lea ebp [eax+esi] +
mov eax ebp +
mov ebp edi +
mov edi eax +
nop   +
mov eax [ecx+8] +
lea esi [ebx+ebx*2] +
lea esi [eax+esi*8] +
mov eax [esi+4] +
cmp eax [esp+70h+var_40] +
jbe loc_4179A2  +
cmp eax edi +
jb loc_4179D0  +
mov [esp+70h+var_3C] eax +
mov eax [esp+70h+var_50] +
mov edi ebp +
mov eax [eax+8Ch] +
mov eax [eax+68h] +
xor ebx ebx +
mov ecx [esp+70h+var_40] +
mov [esp+70h+var_4C] eax +
mov eax [esp+70h+var_50] +
mov ebp [eax+4Ch] +
mov eax [esp+70h+var_3C] +
sub eax ecx +
cmp eax [esp+70h+arg_0] +
jz loc_417570  +
sub eax [esp+70h+arg_0] +
mov ebx [esp+70h+var_54] +
mov [esp+70h+var_68] eax +
mov eax [esp+70h+arg_0] +
add eax ecx +
add eax ebx +
mov [esp+70h+var_6C] eax +
mov eax ebx +
mov ebx 1 +
add eax ecx +
mov [esp+70h+var_70] eax +
call memmove  +
test esi esi +
jz loc_417D1B  +
mov eax [esi+8] +
cmp eax 2 +
jz loc_417BE5  +
cmp eax 3 +
jz loc_4179EE  +
cmp eax 1 +
jz loc_417BDD  +
xor eax eax +
mov esi [esp+70h+arg_0] +
mov [esp+70h+var_6C] eax +
mov eax [esp+70h+var_3C] +
mov [esp+70h+var_68] esi +
sub eax esi +
add eax [esp+70h+var_54] +
mov [esp+70h+var_70] eax +
call memset  +
test ebx ebx +
mov [esp+70h+var_30] 1 +
jz loc_417AF0  +
mov esi [esp+70h+var_4C] +
lea eax [ebp+ebp*2+0] +
lea esi [esi+eax*4] +
mov eax [esp+70h+var_50] +
mov eax [eax+8Ch] +
mov ebx [eax+68h] +
cmp esi ebx +
jbe loc_41762B  +
mov [esp+70h+var_4C] edi +
mov ebp [esp+70h+var_40] +
mov edi [esp+70h+var_50] +
mov eax [edi+3Ch] +
mov ecx [ebx] +
mov edx [edi+38h] +
mov eax [eax+1Ch] +
cmp ebp ecx +
mov [esp+70h+var_54] eax +
jnb loc_417620  +
cmp [esp+70h+var_3C] ecx +
jbe loc_417620  +
mov eax ds:dword_49F330 +
test eax eax +
jnz loc_417B5D  +
sub ecx [esp+70h+arg_0] +
mov [ebx] ecx +
add ebx 0Ch +
cmp esi ebx +
ja loc_4175F1  +
mov edi [esp+70h+var_4C] +
mov eax [esp+70h+var_48] +
xor ecx ecx +
lea esi [edi+48h] +
mov [esp+70h+var_28] esi +
mov eax [eax+64h] +
test eax eax +
mov [esp+70h+var_4C] eax +
jz loc_4177C5  +
mov ebp edi +
mov edi ecx +
nop   +
lea esi [esi+0] +
mov eax [esp+70h+var_4C] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_4177B0  +
mov ecx [esp+70h+var_50] +
mov esi [esp+70h+var_40] +
mov ebx [esp+70h+arg_4] +
mov edx [ecx+3Ch] +
add esi [ecx+38h] +
mov ecx [edx+1Ch] +
mov [esp+70h+var_44] esi +
add [esp+70h+var_44] ecx +
mov ecx [esp+70h+var_44] +
mov edx ecx +
sub edx [esp+70h+arg_0] +
test ebx ebx +
cmovz edx ecx +
mov ecx [esp+70h+var_4C] +
mov [esp+70h+var_44] edx +
mov edx [ecx+8Ch] +
mov ebx [edx+68h] +
test ebx ebx +
jz loc_417B9B  +
lea eax [eax+eax*2] +
lea ecx [ebx+eax*4] +
cmp ebx ecx +
jnb loc_4177B0  +
mov esi ecx +
jmp loc_4176CB  +
add ebx 0Ch +
cmp esi ebx +
jbe loc_4177B0  +
test edi edi +
mov edx [ebp+68h] +
jz loc_417A00  +
mov eax [ebx+4] +
shr eax 8 +
cmp eax edx +
jnb loc_4176C0  +
lea eax [eax+eax*4] +
lea edx [edi+eax*4] +
mov eax [edx+10h] +
mov [esp+70h+var_54] edx +
mov [esp+70h+var_6C] eax +
mov eax [esp+70h+var_48] +
mov [esp+70h+var_70] eax +
call sub_426C70  +
mov edx [esp+70h+var_54] +
cmp eax [esp+70h+var_50] +
mov ecx [edx] +
jnz loc_4176C0  +
mov edx [esp+70h+var_50] +
mov eax [edx+3Ch] +
mov edx [edx+38h] +
mov eax [eax+1Ch] +
mov [esp+70h+var_38] eax +
add ecx [esp+70h+var_38] +
lea eax [ecx+edx] +
mov [esp+70h+var_54] eax +
mov eax ds:dword_49F330 +
test eax eax +
jnz loc_417A60  +
movzx eax byte ptr [ebx+4] +
lea ecx [eax-1Eh] +
cmp ecx 2 +
jbe loc_417A9D  +
mov eax [ebx+8] +
mov ecx [esp+70h+var_54] +
add ecx eax +
mov [esp+70h+var_34] ecx +
mov ecx [esp+70h+var_54] +
cmp [esp+70h+var_44] ecx +
jb loc_4176C0  +
mov ecx [esp+70h+var_34] +
cmp [esp+70h+var_44] ecx +
jnb loc_4176C0  +
add edx [esp+70h+var_38] +
add edx [esp+70h+var_3C] +
cmp edx ecx +
jb loc_4176C0  +
mov ecx ds:dword_49F330 +
sub eax [esp+70h+arg_0] +
test ecx ecx +
mov [ebx+8] eax +
jz loc_4176C0  +
mov [esp+70h+var_70] offset aRelocationSAdd +
add ebx 0Ch +
call puts  +
cmp esi ebx +
ja loc_4176CB  +
lea esi [esi+0] +
mov eax [esp+70h+var_4C] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+70h+var_4C] eax +
jnz loc_417650  +
mov edi ebp +
mov esi [edi+78h] +
test esi esi +
jz loc_4178A5  +
mov eax [edi+68h] +
lea edx [eax+eax*4] +
lea ebp [esi+edx*4] +
cmp esi ebp +
jnb loc_4178A8  +
movzx eax byte ptr [esp+70h+var_30] +
mov [esp+70h+var_4C] edi +
mov edi [esp+70h+var_2C] +
and eax 1 +
mov byte ptr [esp+70h+var_44] al +
mov eax [esp+70h+var_40] +
add eax [esp+70h+arg_0] +
mov [esp+70h+var_38] eax +
jmp loc_417811  +
add esi 14h +
cmp ebp esi +
jbe loc_4178A1  +
cmp [esi+10h] edi +
jnz loc_417806  +
mov eax [esi+4] +
mov ebx [esi] +
mov edx [esp+70h+var_30] +
mov [esp+70h+var_54] eax +
add eax ebx +
test edx edx +
jz loc_417B8D  +
xor edx edx +
cmp [esp+70h+var_3C] eax +
setnbe dl  +
cmp [esp+70h+var_40] ebx +
jb loc_417B00  +
cmp [esp+70h+var_40] eax +
jnb loc_417B00  +
test edx edx +
jz loc_417B00  +
cmp eax [esp+70h+var_38] +
jb loc_417BF5  +
mov ecx [esp+70h+var_54] +
sub ecx [esp+70h+arg_0] +
xor edx edx +
mov [esi+4] ecx +
mov ecx [esp+70h+var_30] +
test ecx ecx +
jz loc_417B4F  +
xor eax eax +
cmp [esp+70h+var_3C] ebx +
setnbe al  +
test eax eax +
jz loc_417806  +
test dl dl +
jz loc_417806  +
mov eax [esp+70h+arg_0] +
sub [esi] eax +
add esi 14h +
cmp ebp esi +
ja loc_417811  +
mov edi [esp+70h+var_4C] +
mov eax [edi+68h] +
mov esi [esp+70h+var_48] +
mov edx [esi+0A0h] +
mov ebp [edx+218h] +
mov edx [edi+60h] +
shr edx 4 +
sub edx eax +
lea eax [ebp+edx*4+0] +
cmp ebp eax +
mov esi eax +
jnb loc_417AF0  +
movzx eax byte ptr [esp+70h+var_30] +
mov ecx [esp+70h+var_50] +
and eax 1 +
mov byte ptr [esp+70h+var_4C] al +
mov eax [esp+70h+var_40] +
add eax [esp+70h+arg_0] +
mov [esp+70h+var_48] eax +
jmp loc_4178FB  +
add ebp 4 +
cmp esi ebp +
jbe loc_417AF0  +
mov ebx [ebp+0] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
ja loc_4178F0  +
cmp [ebx+14h] ecx +
jnz loc_4178F0  +
mov eax [ebx+2Ch] +
mov edi [ebx+18h] +
mov edx [esp+70h+var_30] +
mov [esp+70h+var_50] eax +
add eax edi +
test edx edx +
mov [esp+70h+var_54] eax +
jz loc_417D92  +
cmp [esp+70h+var_3C] eax +
setnbe al  +
movzx eax al +
cmp [esp+70h+var_40] edi +
jb loc_417948  +
mov edx [esp+70h+var_54] +
cmp [esp+70h+var_40] edx +
jb loc_417C11  +
mov eax [esp+70h+var_30] +
test eax eax +
jz loc_417DF7  +
xor eax eax +
cmp [esp+70h+var_3C] edi +
setnbe al  +
mov edx eax +
cmp [esp+70h+var_40] edi +
setb al  +
and dl al +
jnz loc_417DDF  +
mov edx [esp+70h+var_30] +
test edx edx +
jz loc_417D84  +
xor edx edx +
cmp [esp+70h+var_3C] edi +
setnbe dl  +
test edx edx +
jz loc_4178F0  +
test al al +
jz loc_4178F0  +
mov eax [esp+70h+arg_0] +
sub [ebx+18h] eax +
jmp loc_4178F0  +
cmp eax edi +
jnb loc_41750E  +
add ebx 1 +
cmp [ecx] ebx +
ja loc_4174F0  +
mov eax [esp+70h+var_50] +
mov edi ebp +
mov esi [esp+70h+var_4C] +
mov eax [eax+8Ch] +
mov [esp+70h+var_3C] esi +
xor esi esi +
jmp loc_41751E  +
mov [esp+70h+var_6C] 7A2h +
mov [esp+70h+var_70] offset a____Binutil_15 +
mov [esp+70h+var_44] ecx +
call sub_40C6C0  +
mov ecx [esp+70h+var_44] +
jmp loc_4179AA  +
mov eax [esi+10h] +
mov ecx [esp+70h+arg_0] +
add [esi+14h] ecx +
jmp loc_417598  +
test edx edx +
jz loc_4176C0  +
mov edi [ebp+78h] +
test edi edi +
jnz loc_4176D6  +
mov eax [esp+70h+var_28] +
mov [esp+70h+var_58] 0 +
mov [esp+70h+var_5C] 0 +
mov [esp+70h+var_60] 0 +
mov [esp+70h+var_6C] eax +
mov eax [esp+70h+var_48] +
mov [esp+70h+var_64] 0 +
mov [esp+70h+var_68] edx +
mov [esp+70h+var_70] eax +
call sub_424210  +
test eax eax +
mov edi eax +
jnz loc_417D36  +
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+70h+var_44] +
mov ecx [esp+70h+var_54] +
mov [esp+70h+var_34] edx +
mov [esp+70h+var_64] eax +
mov eax [ebx+8] +
mov [esp+70h+var_6C] ecx +
mov [esp+70h+var_70] offset aCheckingIfTheR +
add eax ecx +
mov [esp+70h+var_68] eax +
call printf  +
movzx eax byte ptr [ebx+4] +
mov edx [esp+70h+var_34] +
lea ecx [eax-1Eh] +
cmp ecx 2 +
ja loc_417742  +
mov ecx [esp+70h+var_4C] +
mov edx [ecx+8Ch] +
mov edx [edx+30h] +
test edx edx +
mov [esp+70h+var_14] edx +
jz loc_417DA5  +
add edx [ebx] +
cmp eax 1Fh +
mov [esp+70h+var_34] edx +
jz loc_417CFF  +
cmp eax 20h +
jz loc_417CE3  +
cmp eax 1Eh +
jz loc_417C3C  +
mov [esp+70h+var_6C] 6F0h +
mov [esp+70h+var_70] offset a____Binutil_15 +
call sub_40C6C0  +
jmp loc_4176C0  +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+70h+var_30] +
test edx edx +
jz loc_417BCF  +
xor ecx ecx +
cmp [esp+70h+var_3C] ebx +
setnbe cl  +
cmp [esp+70h+var_40] ebx +
setb dl  +
and cl dl +
jz loc_41786C  +
cmp [esp+70h+var_3C] eax +
setbe dl  +
and dl byte ptr [esp+70h+var_44] +
jz loc_417BEC  +
mov ecx [esp+70h+var_54] +
add ecx [esp+70h+arg_0] +
mov [esi+4] ecx +
mov ecx [esp+70h+var_30] +
test ecx ecx +
jnz loc_417878  +
xor eax eax +
cmp [esp+70h+var_3C] ebx +
setnb al  +
jmp loc_417881  +
mov eax ecx +
sub eax [esp+70h+arg_0] +
mov [esp+70h+var_68] ecx +
mov [esp+70h+var_70] offset aRelocationAtAd +
mov [esp+70h+var_64] eax +
mov eax [esp+70h+var_54] +
add eax edx +
add eax ecx +
mov [esp+70h+var_6C] eax +
call printf  +
mov ecx [ebx] +
jmp loc_417617  +
xor edx edx +
cmp [esp+70h+var_3C] eax +
setnb dl  +
jmp loc_417836  +
mov eax [esp+70h+var_48] +
mov esi ecx +
mov [esp+70h+var_60] 1 +
mov [esp+70h+var_64] 0 +
mov [esp+70h+var_68] 0 +
mov [esp+70h+var_6C] ecx +
mov [esp+70h+var_70] eax +
call sub_438410  +
mov ebx eax +
mov eax [esi+4Ch] +
jmp loc_4176AA  +
xor ecx ecx +
cmp [esp+70h+var_3C] ebx +
setnb cl  +
jmp loc_417B15  +
mov eax [esi+0Ch] +
jmp loc_417598  +
xor eax eax +
jmp loc_4179F1  +
mov edx ecx +
nop   +
jmp loc_41786C  +
mov [esp+70h+var_6C] 864h +
mov [esp+70h+var_70] offset a____Binutil_15 +
call sub_40C6C0  +
mov ecx [esi+4] +
jmp loc_417860  +
test eax eax +
jz loc_417948  +
mov eax [esp+70h+var_48] +
cmp [esp+70h+var_54] eax +
jb loc_417E07  +
mov eax [esp+70h+var_50] +
sub eax [esp+70h+arg_0] +
mov [ebx+2Ch] eax +
xor eax eax +
jmp loc_41796E  +
movzx eax byte ptr [edx] +
add eax 0FFFFFF80h +
movzx eax al +
add eax 0FFFFFF80h +
mov [esp+70h+var_38] eax +
mov eax [ebx+8] +
mov ecx [esp+70h+var_54] +
mov [esp+70h+var_24] eax +
add ecx eax +
mov edx ecx +
mov eax ecx +
sub edx [esp+70h+var_38] +
cmp edx ecx +
cmovnb ecx edx +
cmp [esp+70h+var_44] ecx +
jnb loc_4176C0  +
cmp edx eax +
cmova edx eax +
cmp [esp+70h+var_44] edx +
jb loc_4176C0  +
mov edx [esp+70h+var_38] +
mov ecx [esp+70h+arg_0] +
add ecx edx +
sub edx [esp+70h+arg_0] +
cmp [esp+70h+var_38] 0 +
cmovns ecx edx +
cmp [esp+70h+var_44] eax +
jnb loc_417CAF  +
mov eax [esp+70h+var_24] +
sub eax [esp+70h+arg_0] +
mov [ebx+8] eax +
movzx eax byte ptr [ebx+4] +
cmp eax 1Fh +
jz loc_417D65  +
cmp eax 20h +
jz loc_417D49  +
cmp eax 1Eh +
jz loc_417D3E  +
mov [esp+70h+var_6C] 723h +
mov [esp+70h+var_70] offset a____Binutil_15 +
call sub_40C6C0  +
jmp loc_4176C0  +
mov eax [esp+70h+var_48] +
mov ecx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+2Ch] +
mov [esp+70h+var_70] ecx +
call eax  +
mov [esp+70h+var_38] eax +
jmp loc_417C4C  +
mov eax [esp+70h+var_48] +
mov ecx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+38h] +
mov [esp+70h+var_70] ecx +
call eax  +
mov [esp+70h+var_38] eax +
jmp loc_417C4C  +
mov eax [esp+70h+var_50] +
mov esi [esp+70h+arg_0] +
mov [esp+70h+var_30] 0 +
sub [eax+24h] esi +
jmp loc_4175C9  +
mov edx [ebp+68h] +
jmp loc_4176D6  +
mov eax [esp+70h+var_34] +
mov [eax] cl +
jmp loc_4176C0  +
mov eax [esp+70h+var_48] +
mov edx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+70h+var_6C] edx +
mov [esp+70h+var_70] ecx +
call eax  +
jmp loc_4176C0  +
mov eax [esp+70h+var_48] +
movzx ecx cx +
mov edx [esp+70h+var_34] +
mov eax [eax+4] +
mov eax [eax+3Ch] +
mov [esp+70h+var_6C] edx +
mov [esp+70h+var_70] ecx +
call eax  +
jmp loc_4176C0  +
xor edx edx +
cmp [esp+70h+var_3C] edi +
setnb dl  +
jmp loc_417983  +
mov eax [esp+70h+var_54] +
cmp [esp+70h+var_3C] eax +
setnb al  +
movzx eax al +
jmp loc_417934  +
lea eax [esp+70h+var_14] +
mov [esp+70h+var_68] eax +
mov eax [esp+70h+var_48] +
mov [esp+70h+var_6C] ecx +
mov [esp+70h+var_70] eax +
call sub_4111A0  +
test eax eax +
jz loc_4176C0  +
mov eax [esp+70h+var_4C] +
mov edx [esp+70h+var_14] +
mov eax [eax+8Ch] +
mov [eax+30h] edx +
movzx eax byte ptr [ebx+4] +
jmp loc_417AB6  +
mov eax [esp+70h+var_54] +
cmp [esp+70h+var_3C] eax +
setbe al  +
and al byte ptr [esp+70h+var_4C] +
jnz loc_417E2B  +
mov eax edx +
jmp loc_41796E  +
xor eax eax +
cmp [esp+70h+var_3C] edi +
setnb al  +
mov edx eax +
jmp loc_41795F  +
mov [esp+70h+var_6C] 886h +
mov [esp+70h+var_70] offset a____Binutil_15 +
mov [esp+70h+var_54] ecx +
call sub_40C6C0  +
mov eax [ebx+2Ch] +
mov ecx [esp+70h+var_54] +
jmp loc_417C2B  +
mov edx [esp+70h+var_50] +
add edx [esp+70h+arg_0] +
mov [ebx+2Ch] edx +
jmp loc_41796E  +
***
push ebp  +
push edi  +
push esi  +
mov esi offset off_48C1C0 +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov edi ds:_stricmp +
mov ebp [esp+34h] +
jmp loc_417E6B  +
add ebx 1 +
add esi 34h +
cmp ebx 25h +
jz loc_417E90  +
mov eax [esi] +
test eax eax +
jz loc_417E60  +
mov [esp+4] ebp +
mov [esp] eax +
call edi  +
test eax eax +
jnz loc_417E60  +
imul eax ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
add eax offset dword_48C1A0 +
pop ebp  +
retn   +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov esi [esp+20h] +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_417ED0  +
mov [esp+24h] ebx +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_426E10  +
***
mov dword ptr [esp+4] 0A0h +
mov [esp] esi +
call sub_407C00  +
test eax eax +
jz loc_417EF0  +
mov [ebx+8Ch] eax +
jmp loc_417EB7  +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [ebx+4] +
mov edx [ecx+4] +
cmp eax edx +
jz loc_417F17  +
sub eax edx +
pop ebx  +
retn   +
mov eax [ebx] +
mov edx [ecx] +
cmp eax edx +
jz loc_417F27  +
mov eax [eax+1Ch] +
sub eax [edx+1Ch] +
pop ebx  +
retn   +
mov eax [ebx+8] +
sub eax [ecx+8] +
pop ebx  +
retn   +
***
mov ecx [esp+arg_4] +
mov eax [ebx] +
mov edx [ecx] +
cmp eax edx +
jz loc_417F45  +
sub eax edx +
pop ebx  +
retn   +
mov eax [ebx+4] +
mov edx [ecx+4] +
cmp eax edx +
jnz loc_417F41  +
mov eax [ebx+8] +
sub eax [ecx+8] +
pop ebx  +
retn   +
***
mov edx [eax+4] +
test edx edx +
jz loc_417F70  +
pop ebx  +
retn   +
mov edx [esp+arg_4] +
test byte ptr [edx+14h] 11h +
jz loc_417F6C  +
mov ecx [esp+arg_4] +
mov edx [eax] +
mov ecx [ecx+1Ch] +
cmp edx ecx +
jb loc_417F6C  +
mov ebx [esp+arg_4] +
add ecx [ebx+24h] +
cmp edx ecx +
jnb loc_417F6C  +
mov [eax+4] ebx +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov edx [esi+14h] +
test edx edx +
jz loc_417FC6  +
mov eax [esp+1Ch+arg_4] +
mov ebx [eax+1Ch] +
cmp dword ptr [ebx+2Ch] 4 +
jz loc_417FD0  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_0] +
mov ecx [esp+1Ch+arg_0] +
mov esi [eax+10h] +
mov eax [ebx+120h] +
mov edx [eax+24h] +
mov edi [eax+6Ch] +
mov ebp [eax+94h] +
mov eax ds:dword_49F32C +
mov [ecx+0Ch] edx +
add edi edx +
mov [esp+1Ch+var_10] edi +
test eax eax +
jz loc_418013  +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] offset aBuildingOneStu +
call printf  +
test esi 1 +
jnz loc_417FC4  +
mov eax [ebp+4] +
mov edi esi +
shr edi 1 +
mov ecx edi +
and ecx 10000h +
mov edx [eax+3Ch] +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] eax +
lea eax ds:0[edi*8] +
movzx edi di +
and eax 1F00000h +
or eax ecx +
shr eax 10h +
or eax 940Ch +
mov [esp+1Ch+var_1C] eax +
call edx  +
mov eax [ebp+4] +
mov ecx [esp+1Ch+var_10] +
mov eax [eax+3Ch] +
lea edx [ecx+2] +
mov [esp+1Ch+var_18] edx +
mov [esp+1Ch+var_1C] edi +
call eax  +
mov eax [ebx+120h] +
mov edx [ebx+138h] +
add dword ptr [eax+24h] 4 +
mov eax 1 +
lea ecx [edx+1] +
cmp ecx [ebx+13Ch] +
ja loc_417FC6  +
mov edi [esp+1Ch+arg_0] +
add edx 40000000h +
mov [ebx+138h] ecx +
mov ecx [ebx+140h] +
mov edi [edi+0Ch] +
mov [ecx+edx*4] edi +
mov ecx [ebx+144h] +
mov [ecx+edx*4] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov edi [esp+6Ch+arg_4] +
mov ebp [esp+6Ch+arg_14] +
mov eax [edi+1Ch] +
cmp dword ptr [eax+2Ch] 4 +
mov [esp+6Ch+var_2C] eax +
jz loc_4180EC  +
***
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+6Ch+arg_8] +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_40] eax +
mov eax [eax+218h] +
mov [esp+6Ch+var_30] eax +
mov eax [esp+6Ch+arg_C] +
mov eax [eax+4Ch] +
lea eax [eax+eax*2] +
lea eax [ebp+eax*4+0] +
cmp ebp eax +
mov [esp+6Ch+var_34] eax +
jnb loc_4182FD  +
***
mov edx [ebp+4] +
mov [esp+arg_58] 0 +
movzx esi dl +
mov eax edx +
imul esi esi +
shr eax 8 +
lea ecx dword_48C1A0[esi] +
mov [esp+arg_30] ecx +
mov ecx [esp+arg_28] +
mov edx [ecx+68h] +
cmp eax edx +
jb loc_418B90  +
mov ecx [esp+arg_38] +
test ecx ecx +
jz loc_4180E2  +
sub eax edx +
mov ebx [ecx+eax*4] +
mov eax [edi+28h] +
test eax eax +
jz loc_418183  +
mov eax [esp+arg_88] +
test byte ptr [eax+15h] 20h +
jz loc_418183  +
jmp loc_418C26  +
***
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
lea edx [eax-6] +
cmp dl 1 +
jbe loc_418180  +
lea edx [eax-3] +
cmp dl 1 +
jbe loc_418C06  +
cmp al 2 +
jz loc_418215  +
movzx edx byte ptr [edi+2] +
and edx 6 +
cmp dl 2 +
jz loc_418C44  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jz loc_418215  +
cmp dl 6 +
mov eax 1 +
jz loc_4181D2  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
test al al +
setnz al  +
movzx eax al +
mov edx [edi+18h] +
mov ecx [edx+18h] +
mov edx [ebx+4] +
mov [esp+arg_24] ecx +
mov ecx [ebp+0] +
mov [esp+arg_10] eax +
mov eax [esp+arg_88] +
mov [esp+arg_0] edx +
mov [esp+0] edi +
mov [esp+arg_C] ecx +
mov [esp+arg_8] eax +
mov eax [esp+arg_84] +
mov [esp+arg_4] eax +
mov eax [esp+arg_24] +
call eax  +
test eax eax +
jz loc_4180E2  +
mov eax [esp+arg_58] +
xor edx edx +
mov ecx [ebx+4] +
mov [esp+arg_2C] ecx +
test eax eax +
jz loc_418236  +
cmp eax offset off_476230 +
jz loc_418236  +
cmp dword ptr [eax+3Ch] offset off_476230 +
jz loc_418290  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jz sub_4182F0  +
mov eax [ebp+0] +
mov [esp+arg_24] eax +
mov eax [esp+arg_3C] +
mov eax [eax+124h] +
mov [esp+arg_40] eax +
mov eax [esp+arg_88] +
mov ecx [eax+3Ch] +
mov eax [eax+38h] +
add eax [ecx+1Ch] +
mov ecx [esp+arg_24] +
add ecx eax +
cmp ds:dword_48C1A0[esi] 23h +
ja sub_418411  +
mov esi ds:dword_48C1A0[esi] +
jmp ds:off_48B648[esi*4]  +
***
add ebp 0Ch +
add edx [ebp+8] +
mov eax 2 +
mov esi [esp+arg_24] +
movzx ecx dx +
cmp ecx 1Fh +
mov [esp+arg_40] edx +
jbe loc_418D07  +
***
mov edx offset aInternalErrorO +
mov eax [edi+18h] +
mov edx offset aInternalErrorD +
mov eax [edi+18h] +
mov edx offset aInternalErrorU +
mov eax [ebp+8] +
mov ecx [ebp+8] +
mov ecx [ebp+8] +
mov eax [esp+arg_24] +
mov eax [esp+arg_24] +
mov ebx [ebp+8] +
mov ebx [ebp+8] +
mov esi [ebp+8] +
mov esi [ebp+8] +
add esi edx +
movzx eax si +
cmp eax 3Fh +
jg loc_418B80  +
test esi esi +
js loc_418B80  +
mov eax [esp+arg_84] +
add ebp 0Ch +
mov ebx [esp+arg_24] +
add ebx [esp+arg_8C] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+0] ebx +
call eax  +
mov edx esi +
and edx 20h +
shl edx 8 +
mov ecx eax +
mov eax [esp+arg_84] +
and ecx 0D3F8h +
mov eax [eax+4] +
mov eax [eax+3Ch] +
mov [esp+arg_0] ebx +
mov [esp+arg_24] eax +
mov eax esi +
and esi 7 +
and eax 18h +
shl eax 7 +
or eax edx +
or eax esi +
or ecx eax +
mov eax [esp+arg_24] +
mov [esp+0] ecx +
call eax  +
cmp [esp+arg_34] ebp +
ja loc_418124  +
jmp loc_4182FD  +
***
mov esi [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
mov esi [ebp+8] +
mov eax [esp+arg_24] +
add edx [ebp+8] +
add edx [ebp+8] +
mov ebx [ebp+8] +
add edx [ebp+8] +
add edx [ebp+8] +
mov esi [ebp+8] +
mov eax [esp+arg_3C] +
mov esi [esp-7Ch+arg_A0] +
mov esi [esp+arg_24] +
sub edx esi +
add edx [ebp+8] +
lea ecx [edx-2] +
sub ecx eax +
mov eax 2 +
test cl 1 +
jnz loc_418326  +
lea edx [ecx+80h] +
mov al 1 +
cmp edx 0FFh +
ja loc_418326  +
mov eax [esp+arg_84] +
mov ebx [esp+arg_8C] +
mov [esp+arg_2C] ecx +
mov eax [eax+4] +
add ebx esi +
mov eax [eax+34h] +
mov [esp+0] ebx +
call eax  +
mov esi [esp+arg_84] +
mov ecx [esp+arg_2C] +
mov edx [esi+4] +
shl ecx 2 +
and eax 0FC07h +
and ecx 3F8h +
or eax ecx +
mov edx [edx+3Ch] +
mov [esp+arg_0] ebx +
mov [esp+0] eax +
call edx  +
jmp sub_4182F0  +
***
jz loc_41877C  +
mov eax esi +
neg eax  +
movzx eax ax +
add eax 0FFFFFF80h +
jle loc_41877C  +
***
mov esi [esp+28h] +
mov eax 1 +
jmp loc_418326  +
***
mov ecx [esp-7Ch+arg_110] +
lea edx [eax+eax*4] +
lea ebx [ecx+edx*4] +
mov ecx [esp-7Ch+arg_114] +
mov eax [ecx+eax*4] +
mov [esp-7Ch+arg_84] ebp +
mov [esp-7Ch+arg_7C] ebx +
mov [esp-7Ch+arg_D4] eax +
lea eax [esp-7Ch+arg_D4] +
mov [esp-7Ch+arg_80] eax +
mov eax [esp-7Ch+arg_F8] +
mov [esp-7Ch+arg_78] eax +
call sub_431700  +
mov ecx [esp-7Ch+arg_A4] +
mov ecx [ecx+64h] +
mov [esp-7Ch+arg_A0] eax +
mov eax [ebx+8] +
mov [esp-7Ch+arg_7C] ecx +
mov [esp-7Ch+arg_80] eax +
mov eax [esp-7Ch+arg_100] +
mov [esp-7Ch+arg_78] eax +
call sub_424010  +
mov edx [esp-7Ch+arg_A0] +
test eax eax +
mov [esp-7Ch+arg_A8] eax +
mov eax [esp-7Ch+arg_D4] +
jz loc_418C65  +
xor ebx ebx +
jmp loc_418222  +
mov eax [ebx+14h] +
test eax eax +
mov [esp+arg_58] eax +
jz loc_418C72  +
mov edx [eax+3Ch] +
test edx edx +
jz loc_418C7B  +
mov edx [edx+1Ch] +
add edx [ebx+18h] +
add edx [eax+38h] +
jmp loc_41821B  +
mov eax [esp+arg_84] +
mov [esp+arg_4] ebx +
mov [esp+0] edi +
mov [esp+arg_0] eax +
call sub_4146B0  +
mov ebx eax +
jmp loc_418183  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jz loc_418215  +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 2 +
jnz loc_4181CA  +
jmp loc_418215  +
mov ecx [eax] +
xor ebx ebx +
mov [esp-7Ch+arg_A8] ecx +
jmp loc_418226  +
xor eax eax +
xor edx edx +
jmp loc_41821B  +
xor edx edx +
jmp loc_41821B  +
mov eax [esp+arg_88] +
test byte ptr [eax+15h] 20h +
jz loc_4182E2  +
mov eax [eax+3Ch] +
mov [esp+0] eax +
call sub_427400  +
mov ecx [eax+18h] +
mov edx [eax+28h] +
cmp ecx edx +
jbe loc_4182E2  +
sub ecx edx +
mov [eax+18h] ecx +
mov eax [esp+arg_88] +
mov [esp+0] eax +
call sub_427400  +
mov edx [eax+28h] +
sub [eax+18h] edx +
mov eax [esp+arg_34] +
mov [esp+0] ebp +
sub eax ebp +
sar eax 2 +
imul eax eax +
lea eax [eax+eax*2-3] +
shl eax 2 +
mov [esp+arg_4] eax +
lea eax [ebp+0Ch] +
sub ebp 0Ch +
mov [esp+arg_0] eax +
call memmove  +
mov eax [esp+arg_88] +
sub [esp+arg_34] 0Ch +
sub dword ptr [eax+4Ch] 1 +
jmp sub_4182F0  +
***
mov edx 1 +
shl edx cl +
test ds:dword_49F328 edx +
jnz loc_418326  +
mov eax [esp+arg_84] +
mov ebx [esp+arg_8C] +
mov eax [eax+4] +
add ebx esi +
mov eax [eax+34h] +
mov [esp+0] ebx +
call eax  +
mov esi [esp+arg_84] +
mov ecx [esp+arg_40] +
mov edx [esi+4] +
shl ecx 3 +
and eax 0FF07h +
movzx ecx cl +
or eax ecx +
mov edx [edx+3Ch] +
mov [esp+arg_0] ebx +
mov [esp+0] eax +
call edx  +
jmp sub_4182F0  +
***
mov edx [esp+40h] +
mov eax esi +
mov [esp+4Ch] ecx +
call sub_417130  +
mov ecx [esp+4Ch] +
mov esi eax +
mov eax ds:dword_49F32C +
test eax eax +
jz loc_418D9B  +
mov eax [esp+48h] +
mov [esp+0Ch] ecx +
mov [esp+4] esi +
mov dword ptr [esp] offset aLdUsingJumpStu +
mov [esp+8] eax +
call printf  +
mov eax esi +
sub eax [esp+44h] +
cmp eax 1FFFFh +
ja loc_41859A  +
jmp loc_4185DE  +
***
mov edx [esp+40h] +
mov eax esi +
mov [esp+4Ch] ecx +
call sub_417130  +
mov ecx ds:dword_49F32C +
test ecx ecx +
mov ecx [esp+4Ch] +
mov esi eax +
jz loc_418DEC  +
mov eax [esp+48h] +
mov [esp+0Ch] ecx +
mov [esp+4] esi +
mov dword ptr [esp] offset aLdUsingJumpStu +
mov [esp+8] eax +
call printf  +
mov eax esi +
sub eax [esp+44h] +
cmp eax 1FFFFh +
ja loc_41859A  +
jmp loc_41858E  +
***
mov eax [esp-7Ch+arg_100] +
and esi 0FFFh +
mov ebx [esp-7Ch+arg_A0] +
add ebx [esp-7Ch+arg_108] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp-7Ch+arg_78] ebx +
call eax  +
mov ecx [esp-7Ch+arg_100] +
mov edx [ecx+4] +
and eax 0F000h +
or eax esi +
mov edx [edx+3Ch] +
mov [esp-7Ch+arg_7C] ebx +
mov [esp-7Ch+arg_78] eax +
call edx  +
jmp sub_4182F0  +
***
mov eax [esp+48h] +
mov [esp+0Ch] ecx +
mov [esp+4] esi +
mov dword ptr [esp] offset aLdUsingJumpStu +
mov [esp+8] eax +
call printf  +
jmp loc_418A27  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+60h] +
mov edx [esp+70h] +
mov esi [esp+6Ch] +
mov edi [esp+74h] +
mov [esp+20h] eax +
mov eax [esp+64h] +
test edx edx +
mov [esp+24h] eax +
mov eax [esp+68h] +
mov ebx [eax+10h] +
mov ebp [ebx+94h] +
jnz loc_418EE5  +
mov ecx [ebx+8Ch] +
mov ecx [ecx+30h] +
test ecx ecx +
jz loc_418EE5  +
mov eax [ebp+0A0h] +
mov [esp+28h] eax +
mov eax [ebx+24h] +
mov [esp+4] ecx +
mov [esp] esi +
mov [esp+8] eax +
call memcpy  +
test byte ptr [ebx+14h] 4 +
jz loc_418EDB  +
mov eax [ebx+4Ch] +
test eax eax +
jnz loc_418F11  +
mov eax esi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+68h] eax +
mov eax [esp+24h] +
mov [esp+74h] edi +
mov [esp+6Ch] esi +
mov [esp+70h] edx +
mov [esp+64h] eax +
mov eax [esp+20h] +
mov [esp+60h] eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_4137E0  +
***
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov [esp] ebp +
call sub_438410  +
test eax eax +
mov [esp+30h] eax +
jz loc_419138  +
mov eax [esp+28h] +
mov edi [eax+68h] +
test edi edi +
jz loc_418FC0  +
mov eax [eax+78h] +
test eax eax +
mov [esp+2Ch] eax +
jz loc_4190E9  +
shl edi 2 +
mov [esp] edi +
call sub_40EFC0  +
test edi edi +
mov [esp+34h] eax +
jz loc_418FD8  +
test eax eax +
jnz loc_418FD8  +
mov eax [esp+2Ch] +
test eax eax +
jz loc_418F8B  +
mov edx [esp+28h] +
cmp [edx+78h] eax +
jz loc_418F8B  +
mov [esp] eax +
call free  +
mov esi [esp+30h] +
test esi esi +
jz loc_419138  +
mov edx [ebx+8Ch] +
xor eax eax +
cmp [edx+68h] esi +
jz loc_418EDD  +
mov [esp] esi +
mov [esp+20h] eax +
call free  +
mov eax [esp+20h] +
jmp loc_418EDD  +
***
mov dword ptr [esp] 0 +
call sub_40EFC0  +
mov dword ptr [esp+2Ch] 0 +
mov [esp+34h] eax +
mov eax [esp+28h] +
mov edx [esp+2Ch] +
mov eax [eax+68h] +
mov edi edx +
lea eax [eax+eax*4] +
lea eax [edx+eax*4] +
mov ecx eax +
mov eax edx +
mov edx [esp+34h] +
cmp ecx eax +
jbe loc_419045  +
mov [esp+38h] ebx +
mov ebx edx +
mov [esp+3Ch] esi +
mov esi ecx +
mov ecx [edi+10h] +
mov eax offset off_476188 +
test ecx ecx +
jz loc_419030  +
cmp ecx 0FFFFFFF1h +
mov eax offset off_476230 +
jz loc_419030  +
cmp ecx 0FFFFFFF2h +
mov eax offset off_4760E0 +
jz loc_419030  +
mov [esp+4] ecx +
mov [esp] ebp +
call sub_426C70  +
nop   +
add edi 14h +
add ebx 4 +
mov [ebx-4] eax +
cmp esi edi +
ja loc_419003  +
mov ebx [esp+38h] +
mov esi [esp+3Ch] +
mov eax [esp+34h] +
mov [esp+10h] esi +
mov [esp+0Ch] ebx +
mov [esp+8] ebp +
mov [esp+1Ch] eax +
mov eax [esp+2Ch] +
mov [esp+18h] eax +
mov eax [esp+30h] +
mov [esp+14h] eax +
mov eax [esp+24h] +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_4180C0  +
test eax eax +
jz loc_4190D0  +
mov eax [esp+34h] +
test eax eax +
jz loc_419091  +
mov [esp] eax +
call free  +
mov eax [esp+2Ch] +
test eax eax +
jz loc_4190AA  +
mov edx [esp+28h] +
cmp [edx+78h] eax +
jz loc_4190AA  +
mov [esp] eax +
call free  +
mov eax [ebx+8Ch] +
mov edx [esp+30h] +
cmp [eax+68h] edx +
jz loc_418EDB  +
mov [esp] edx +
call free  +
jmp loc_418EDB  +
***
mov eax [esp+34h] +
test eax eax +
jz loc_418F72  +
mov [esp] eax +
call free  +
jmp loc_418F72  +
***
mov eax [esp+28h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
add eax 48h +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] edi +
mov [esp+4] eax +
mov [esp] ebp +
call sub_424210  +
test eax eax +
mov [esp+2Ch] eax +
jz loc_418F8B  +
mov eax [esp+28h] +
mov edi [eax+68h] +
jmp loc_418F5B  +
***
xor eax eax +
jmp loc_418EDD  +
***
mov dword ptr [edx] offset off_476230 +
sub edx 4 +
cmp edx ecx +
jnz loc_419240  +
mov esi [esp+20h] +
mov edx [esi+64h] +
test edx edx +
jz loc_41926F  +
test byte ptr [edx+14h] 10h +
jz loc_419268  +
mov ecx [edx+8] +
mov dword ptr [eax+ecx*4] 0 +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_419258  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
shr al 6 +
and eax 1 +
mov [esp+10h] eax +
mov [esp] esi +
call sub_438410  +
test eax eax +
mov ebx eax +
mov [esp+4Ch] eax +
jz loc_419767  +
mov eax [edi+4Ch] +
lea eax [eax+eax*2] +
lea eax [ebx+eax*4] +
cmp ebx eax +
mov [esp+20h] eax +
jnb loc_4196BB  +
mov [esp+44h] edi +
mov edi esi +
jmp loc_4195DB  +
mov esi [esp+38h] +
lea eax [eax+eax*4] +
xor ecx ecx +
lea edx [esi+eax*4] +
movzx eax byte ptr [edx+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_419509  +
mov ecx [edx] +
mov eax [edx+10h] +
mov edx [edi+0A0h] +
cmp eax [edx+214h] +
jnb loc_419670  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov edx [eax+2Ch] +
mov eax [edx+3Ch] +
mov esi [eax+1Ch] +
add esi [edx+38h] +
add esi [ebx+8] +
add esi ecx +
mov ebp [esp+24h] +
mov eax esi +
sub eax [ebp+124h] +
cmp eax 1FFFFh +
ja loc_419550  +
mov eax [esp+78h] +
test eax eax +
jz loc_4195CE  +
mov dword ptr [esp] 13h +
mov [esp+30h] ecx +
mov [esp+2Ch] edx +
call sub_40EFC0  +
mov edx [esp+2Ch] +
mov ecx [esp+30h] +
add ecx [ebx+8] +
mov ebp eax +
mov eax [edx+4] +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] offset a08x08x +
mov [esp] ebp +
mov [esp+8] eax +
call sprintf  +
test ebp ebp +
jz loc_4197A4  +
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov [esp] eax +
call sub_40FFC0  +
test eax eax +
jz loc_4196E0  +
mov dword ptr [eax+14h] 1 +
mov [eax+10h] esi +
mov [esp] ebp +
call free  +
add ebx 0Ch +
cmp [esp+20h] ebx +
jbe loc_4196B7  +
mov eax [ebx+4] +
movzx edx al +
lea ecx [edx-18h] +
cmp ecx 1 +
jbe loc_4195EE  +
cmp edx 5 +
jnz loc_4195CE  +
mov esi [esp+28h] +
shr eax 8 +
mov edx [esi+68h] +
cmp eax edx +
jb loc_4194F0  +
mov ecx [edi+0A0h] +
sub eax edx +
mov edx [ecx+218h] +
mov eax [edx+eax*4] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_41962F  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_419620  +
lea ecx [edx-3] +
cmp cl 1 +
jbe loc_419680  +
cmp dl 2 +
jz loc_4196A1  +
cmp dl 1 +
jnz loc_4197D0  +
mov esi [esp+74h] +
movzx edx byte ptr [esi+2] +
and edx 6 +
cmp dl 2 +
jnz loc_4195CE  +
test byte ptr [eax+31h] 3 +
jnz loc_4195CE  +
xor esi esi +
xor ecx ecx +
xor edx edx +
jmp loc_419535  +
***
xor esi esi +
xor edx edx +
jmp loc_419535  +
***
mov edx [eax+14h] +
mov ecx [eax+18h] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_419730  +
mov esi [edx+38h] +
add esi ecx +
add esi [eax+1Ch] +
add esi [ebx+8] +
jmp loc_419535  +
***
mov eax [esp+74h] +
test byte ptr [eax] 1 +
jnz loc_419663  +
add ebx 0Ch +
cmp [esp+20h] ebx +
ja loc_4195DB  +
mov edi [esp+44h] +
mov eax [edi+8Ch] +
mov edx [eax+68h] +
test edx edx +
jnz near ptr dword_41927C+144h  +
mov eax [esp+4Ch] +
mov [esp] eax +
call free  +
jmp near ptr dword_41927C+144h  +
***
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 1 +
mov [esp+4] ebp +
mov [esp] eax +
call sub_40FFC0  +
test eax eax +
jz loc_4197E2  +
mov ebp ds:dword_49F32C +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+14h] 1 +
mov [eax+10h] esi +
test ebp ebp +
jnz loc_419737  +
mov dword ptr [esp+48h] 1 +
jmp loc_4195CE  +
***
xor esi esi +
jmp loc_419535  +
***
mov [esp+4] esi +
mov dword ptr [esp] offset aAddingStubWith +
call printf  +
mov ecx ds:dword_49F32C +
test ecx ecx +
jz loc_419723  +
mov eax [esp+78h] +
mov dword ptr [esp] offset aPreAllocRunI +
mov [esp+4] eax +
call printf  +
jmp loc_419723  +
***
mov eax [esp+24h] +
mov eax [eax+134h] +
jmp near ptr dword_41927C+204h  +
***
mov ebp [esp+44h] +
mov eax [ebp+8Ch] +
mov eax [eax+68h] +
test eax eax +
jnz loc_419767  +
mov eax [esp+4Ch] +
mov [esp] eax +
call free  +
mov eax [esp+24h] +
mov eax [eax+134h] +
jmp near ptr dword_41927C+204h  +
***
mov dword ptr [esp] 11h +
mov ebp [esp+44h] +
call sub_40C770  +
jmp loc_4197A8  +
***
mov esi ebp +
mov ebp [esp+44h] +
mov [esp+8] esi +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] offset aBCannotCreateS +
call off_476094  +
mov [esp] esi +
call free  +
jmp loc_4197A8  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov edi [eax+1Ch] +
cmp dword ptr [edi+2Ch] 4 +
jz loc_419830  +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+11Ch] +
mov ebx [eax+64h] +
test ebx ebx +
jz loc_419938  +
xor esi esi +
jmp loc_419859  +
mov dword ptr [ebx+24h] 0 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_419883  +
mov eax [edi+11Ch] +
mov ebp [ebx+24h] +
mov [esp] eax +
mov [esp+4] ebp +
add esi ebp +
call sub_407C00  +
test eax eax +
mov [ebx+6Ch] eax +
jnz loc_419845  +
test ebp ebp +
jnz loc_419824  +
mov dword ptr [ebx+24h] 0 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_419853  +
shr esi 2 +
lea eax ds:0[esi*4] +
mov dword ptr [edi+138h] 0 +
mov [edi+13Ch] esi +
mov [esp] eax +
call sub_40EFC0  +
mov [edi+140h] eax +
mov eax [edi+13Ch] +
shl eax 2 +
mov [esp] eax +
call sub_40EFC0  +
mov edx ds:dword_49F32C +
test edx edx +
mov [edi+144h] eax +
jnz loc_419920  +
mov eax [esp+30h] +
mov ebx 1 +
mov dword ptr [esp+4] offset sub_417FA0 +
mov [esp+8] eax +
lea eax [edi+0FCh] +
mov [esp] eax +
call near ptr dword_4102E0+30h  +
mov eax ds:dword_49F32C +
test eax eax +
jz loc_419826  +
mov eax [edi+120h] +
mov eax [eax+24h] +
mov dword ptr [esp] offset aFinalStubSecti +
mov [esp+4] eax +
call printf  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+13Ch] +
mov dword ptr [esp] offset aAllocatingIEnt +
mov [esp+4] eax +
call printf  +
jmp loc_4198CC  +
***
xor eax eax +
xor esi esi +
jmp loc_41988D  +
***
jmp sub_419950  +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] offset a_avr_prop +
mov [esp+6Ch+var_6C] eax +
call sub_410840  +
test eax eax +
mov edi eax +
mov [esp+6Ch+var_34] eax +
jz loc_419F1F  +
mov ebx [eax+24h] +
mov [esp+6Ch+var_10] 0 +
mov [esp+6Ch+var_6C] ebx +
call sub_40EFC0  +
mov [esp+6Ch+var_58] ebx +
mov [esp+6Ch+var_60] 0 +
mov [esp+6Ch+var_5C] 0 +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_40] eax +
mov [esp+6Ch+var_64] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_411050  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_5C] 0 +
mov [esp+6Ch+var_60] 0 +
mov [esp+6Ch+var_64] 0 +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] eax +
call sub_438410  +
test eax eax +
mov ecx eax +
mov [esp+6Ch+var_38] eax +
jz loc_419A12  +
mov eax [edi+4Ch] +
mov [esp+6Ch+var_60] offset sub_417F30 +
mov [esp+6Ch+var_64] 0Ch +
mov [esp+6Ch+var_6C] ecx +
mov [esp+6Ch+var_68] eax +
call qsort  +
cmp ebx 3 +
jbe loc_419EB0  +
mov eax [esp+6Ch+var_40] +
movzx ecx byte ptr [eax] +
lea esi [eax+4] +
movzx edx byte ptr [eax+1] +
mov [esp+6Ch+var_3C] ecx +
movzx ecx word ptr [eax+2] +
mov [esp+6Ch+var_48] edx +
movzx ebp cx +
lea eax [ebp+ebp*2+0] +
lea eax ds:10h[eax*8] +
mov [esp+6Ch+var_6C] eax +
mov word ptr [esp+6Ch+var_44] cx +
call sub_40EFC0  +
test eax eax +
mov edi eax +
jz loc_419EB0  +
mov edx [esp+6Ch+var_48] +
sub ebx 4 +
mov ecx [esp+6Ch+var_3C] +
mov [esp+6Ch+var_48] ebx +
mov [eax+1] dl +
mov edx [esp+6Ch+var_34] +
mov [eax] cl +
cmp cl 1 +
lea eax [edi+10h] +
mov [edi+4] ebp +
mov [edi+8] edx +
mov [edi+0Ch] eax +
jnz loc_419BE2  +
mov edx [edx+4Ch] +
mov ebx [esp+6Ch+var_38] +
cmp word ptr [esp+6Ch+var_44] 0 +
lea edx [edx+edx*2] +
lea ebx [ebx+edx*4] +
jz loc_419EC8  +
cmp [esp+6Ch+var_48] 4 +
jbe loc_419BE2  +
movzx edx word ptr [esp+6Ch+var_44] +
mov ebp [esp+6Ch+var_38] +
mov [esp+6Ch+var_44] edi +
sub edx 1 +
movzx edx dx +
lea edx [edx+edx*2] +
lea ecx ds:0[edx*8] +
xor edx edx +
mov [esp+6Ch+var_30] ecx +
mov ecx esi +
mov edi edx +
mov esi ebx +
mov ebx ecx +
add eax edi +
test ebp ebp +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
jz loc_419B16  +
mov eax ebx +
sub eax [esp+6Ch+var_40] +
cmp esi ebp +
ja loc_419AFC  +
jmp loc_419B02  +
add ebp 0Ch +
cmp esi ebp +
jbe loc_419B02  +
cmp eax [ebp+0] +
nop   +
ja loc_419AF5  +
cmp esi ebp +
jz loc_419D02  +
cmp eax [ebp+0] +
lea esi [esi+0] +
jz loc_419D10  +
mov eax [esp+6Ch+var_44] +
mov edx [eax+0Ch] +
mov eax [ebx] +
mov [esp+6Ch+var_3C] eax +
lea eax [edx+edi] +
mov ecx [eax] +
test ecx ecx +
jz loc_419C78  +
movzx edx byte ptr [ebx+4] +
movzx ecx dl +
mov [eax+8] ecx +
mov ecx [esp+6Ch+var_48] +
sub ecx 5 +
cmp dl 1 +
jz loc_419C60  +
jb loc_419C50  +
cmp dl 2 +
jz loc_419C26  +
cmp dl 3 +
lea esi [esi+0] +
jnz loc_419C20  +
cmp ecx 7 +
jbe loc_419C20  +
mov edx [ebx+5] +
add ebx 0Dh +
mov ecx [esp+6Ch+var_44] +
sub [esp+6Ch+var_48] 0Dh +
mov [eax+0Ch] edx +
mov edx [ebx-4] +
mov eax [ecx+0Ch] +
mov [eax+edi+10h] edx +
mov eax [ecx+0Ch] +
mov dword ptr [eax+edi+14h] 0 +
cmp edi [esp+6Ch+var_30] +
jz loc_419EC4  +
add edi 18h +
cmp [esp+6Ch+var_48] 4 +
jbe loc_419C20  +
mov eax [esp+6Ch+var_44] +
mov eax [eax+0Ch] +
jmp loc_419AD6  +
mov eax ds:_iob +
mov [esp+6Ch+var_64] 21h +
mov edi [esp+6Ch+var_44] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] offset aFailedToFindMa +
add eax 40h +
mov [esp+6Ch+var_60] eax +
call fwrite  +
mov eax [esp+6Ch+var_34] +
mov ebx [esp+6Ch+var_38] +
mov eax [eax+8Ch] +
cmp ebx [eax+68h] +
jz loc_419BFD  +
mov [esp+6Ch+var_6C] ebx +
call free  +
mov eax [esp+6Ch+var_40] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov [esp+6Ch+var_6C] edi +
call free  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+6Ch+var_44] +
jmp loc_419BE2  +
cmp ecx 3 +
jbe loc_419C20  +
mov edx [ebx+5] +
add ebx 9 +
sub [esp+6Ch+var_48] 9 +
mov [eax+0Ch] edx +
mov eax [esp+6Ch+var_44] +
mov eax [eax+0Ch] +
mov dword ptr [eax+edi+14h] 0 +
jmp loc_419B96  +
add ebx 5 +
mov [esp+6Ch+var_48] ecx +
jmp loc_419B96  +
cmp ecx 3 +
jbe loc_419C20  +
mov edx [ebx+5] +
add ebx 9 +
sub [esp+6Ch+var_48] 9 +
mov [eax+0Ch] edx +
jmp loc_419B96  +
mov ecx [esp+6Ch+var_10] +
test ecx ecx +
mov [esp+6Ch+var_2C] ecx +
jz loc_419C9D  +
mov ecx [ecx+1Ch] +
cmp [esp+6Ch+var_3C] ecx +
mov [esp+6Ch+var_28] ecx +
jnb loc_419E0F  +
mov [esp+6Ch+var_10] 0 +
mov eax [esp+6Ch+var_3C] +
mov [esp+6Ch+var_68] offset sub_417F60 +
mov [esp+6Ch+var_14] eax +
lea eax [esp+6Ch+var_14] +
mov [esp+6Ch+var_64] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_410E60  +
mov eax [esp+6Ch+var_10] +
test eax eax +
mov [esp+6Ch+var_2C] eax +
jz loc_419BB6  +
mov eax [esp+6Ch+var_44] +
mov ecx [esp+6Ch+var_2C] +
mov edx [eax+0Ch] +
mov ecx [ecx+1Ch] +
lea eax [edx+edi] +
mov [esp+6Ch+var_28] ecx +
mov ecx [esp+6Ch+var_2C] +
mov [eax] ecx +
mov ecx [esp+6Ch+var_3C] +
sub ecx [esp+6Ch+var_28] +
mov [eax+4] ecx +
lea eax [edx+edi] +
jmp loc_419B30  +
xor ebp ebp +
jmp loc_419B16  +
mov eax [ebp+4] +
mov [esp+6Ch+var_3C] eax +
mov eax [esp+6Ch+arg_0] +
shr [esp+6Ch+var_3C] 8 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
cmp [esp+6Ch+var_3C] eax +
mov [esp+6Ch+var_28] eax +
jb loc_419E35  +
mov edx [esp+6Ch+var_2C] +
mov eax [esp+6Ch+var_3C] +
sub eax [esp+6Ch+var_28] +
mov edx [edx+218h] +
lea ecx ds:0[eax*4] +
mov [esp+6Ch+var_20] ecx +
mov eax [edx+eax*4] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_419D7F  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_419D70  +
cmp dl 3 +
jb loc_419EB7  +
cmp dl 4 +
jbe loc_419F26  +
cmp dl 5 +
mov [esp+6Ch+var_24] offset off_4760E0 +
jnz loc_419EB7  +
mov eax [esp+6Ch+var_3C] +
sub eax [esp+6Ch+var_28] +
shl eax 2 +
mov [esp+6Ch+var_20] eax +
mov eax [esp+6Ch+var_2C] +
mov edx [esp+6Ch+var_20] +
mov eax [eax+218h] +
mov eax [eax+edx] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_419DDF  +
nop   +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_419DD0  +
sub edx 3 +
xor ecx ecx +
cmp dl 1 +
ja loc_419DEC  +
mov ecx [eax+18h] +
mov eax [esp+6Ch+var_44] +
add ecx [ebp+8] +
mov edx [eax+0Ch] +
mov [esp+6Ch+var_3C] ecx +
mov ecx [esp+6Ch+var_24] +
lea eax [edx+edi] +
mov [eax] ecx +
mov ecx [esp+6Ch+var_3C] +
mov [eax+4] ecx +
jmp loc_419B1D  +
mov [esp+6Ch+var_24] edx +
mov edx [esp+6Ch+var_2C] +
mov ecx eax +
mov eax [esp+6Ch+var_28] +
add eax [edx+24h] +
cmp [esp+6Ch+var_3C] eax +
mov eax ecx +
mov edx [esp+6Ch+var_24] +
jnb loc_419C95  +
jmp loc_419CE9  +
mov eax [esp+6Ch+arg_0] +
call sub_417200  +
mov ecx [esp+6Ch+var_3C] +
lea edx [ecx+ecx*4] +
mov eax [eax+edx*4+10h] +
test eax eax +
jz loc_419EFA  +
cmp eax 0FFFFFFF1h +
jz loc_419F6E  +
cmp eax 0FFFFFFF2h +
jnz loc_419F32  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_24] offset off_4760E0 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
mov eax [esp+6Ch+var_28] +
cmp [esp+6Ch+var_3C] eax +
mov [esp+6Ch+var_20] edx +
jnb loc_419DA2  +
mov eax [esp+6Ch+arg_0] +
call sub_417200  +
mov edx [esp+6Ch+var_20] +
mov ecx [eax+edx*4] +
jmp loc_419DEC  +
xor edi edi +
jmp loc_419BE2  +
mov [esp+6Ch+var_24] offset off_476188 +
jmp loc_419DB1  +
mov edi [esp+6Ch+var_44] +
mov eax [esp+6Ch+var_40] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax [esp+6Ch+var_34] +
mov ebx [esp+6Ch+var_38] +
mov eax [eax+8Ch] +
cmp ebx [eax+68h] +
jz loc_419EF3  +
mov eax [esp+6Ch+var_38] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax edi +
jmp loc_419C13  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_24] offset off_476188 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
jmp loc_419E86  +
xor eax eax +
jmp loc_419C13  +
mov eax [eax+14h] +
mov [esp+6Ch+var_24] eax +
jmp loc_419DB1  +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_20] edx +
mov [esp+6Ch+var_6C] eax +
call sub_426C70  +
mov edx [esp+6Ch+var_20] +
mov [esp+6Ch+var_24] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
jmp loc_419E86  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_24] offset off_476230 +
mov eax [eax+0A0h] +
mov [esp+6Ch+var_2C] eax +
mov eax [eax+68h] +
mov [esp+6Ch+var_28] eax +
jmp loc_419E86  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax ds:dword_49F324 +
mov dword ptr [esp+5Ch] 0 +
test eax eax +
jz loc_41A364  +
mov eax [esp+84h] +
mov ecx 9 +
mov edi offset a_vectors +
mov dword ptr [esp+2Ch] 0 +
mov eax [eax] +
mov esi eax +
cmps   +
setnbe cl  +
setb dl  +
cmp cl dl +
jz loc_419FFD  +
mov esi eax +
mov edi offset a_jumptables +
mov ecx 0Ch +
cmps   +
setnz al  +
movzx eax al +
mov [esp+2Ch] eax +
mov eax [esp+88h] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_41A876  +
mov eax [esp+88h] +
mov ebx [eax+1Ch] +
cmp dword ptr [ebx+2Ch] 4 +
jz loc_41A02C  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+8Ch] +
mov dword ptr [eax] 0 +
mov eax [ebx+118h] +
test eax eax +
jz loc_41A2E0  +
mov eax [esp+88h] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_41A357  +
mov eax [esp+84h] +
mov eax [eax+14h] +
test al 4 +
jz loc_41A357  +
mov edi [esp+84h] +
mov edx [edi+4Ch] +
test edx edx +
jz loc_41A357  +
test al 10h +
jz loc_41A357  +
mov eax [esp+80h] +
mov eax [eax+0A0h] +
test byte ptr [eax+20h] 80h +
mov [esp+24h] eax +
jz loc_41A357  +
add eax 48h +
mov [esp+44h] eax +
mov eax [esp+88h] +
movzx eax byte ptr [eax+2] +
mov [esp+4] edi +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
shr al 6 +
and eax 1 +
mov [esp+10h] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_438410  +
test eax eax +
mov edi eax +
mov [esp+40h] eax +
jz loc_41ADBD  +
mov eax [esp+84h] +
mov eax [eax+4Ch] +
lea eax [eax+eax*2] +
lea eax [edi+eax*4] +
cmp edi eax +
mov [esp+20h] eax +
jnb loc_41A90C  +
mov ebp [esp+40h] +
xor esi esi +
jmp loc_41A150  +
mov edi [esp+80h] +
sub eax edx +
mov ecx [edi+0A0h] +
mov edx [ecx+218h] +
mov ebx [edx+eax*4] +
test ebx ebx +
jz loc_41A8F3  +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_41A604  +
add ebp 0Ch +
cmp [esp+20h] ebp +
jbe loc_41A90C  +
movzx eax byte ptr [ebp+4] +
lea edx [eax-2] +
cmp edx 1 +
jbe loc_41A161  +
cmp eax 12h +
jnz loc_41A143  +
mov eax [esp+5Ch] +
test eax eax +
jz loc_41A6A0  +
mov eax [esp+24h] +
test esi esi +
mov edx [eax+68h] +
jz loc_41A635  +
mov eax [ebp+4] +
shr eax 8 +
cmp eax edx +
jnb loc_41A114  +
lea eax [eax+eax*4] +
lea ebx [esi+eax*4] +
mov eax [ebx+10h] +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_426C70  +
mov ecx [ebx] +
test eax eax +
jz loc_41A1B1  +
mov edx [eax+3Ch] +
add ecx [edx+1Ch] +
add ecx [eax+38h] +
cmp byte ptr [ebp+4] 12h +
jnz loc_41A581  +
mov eax [esp+84h] +
mov ebx [ebp+0] +
mov eax [eax+3Ch] +
mov [esp+30h] ebx +
mov eax [eax+1Ch] +
mov edi eax +
mov [esp+34h] eax +
mov eax [esp+84h] +
mov eax [eax+38h] +
mov [esp+38h] eax +
add eax edi +
add eax ebx +
sub ecx eax +
mov [esp+3Ch] eax +
mov eax [esp+2Ch] +
add ecx [ebp+8] +
test eax eax +
jz loc_41A855  +
cmp ecx 1001h +
setle al  +
xor ebx ebx +
cmp ecx 0FFFFF002h +
setnl bl  +
mov [esp+1Ch] ebx +
and [esp+1Ch] eax +
mov edx dword_476534 +
cmp edx 4001h +
sbb ebx ebx +
and ebx 0FFFFFDA8h +
sub ebx 8F4h +
cmp edx 4001h +
lea eax [edx-1] +
sbb edi edi +
and eax ecx +
mov ecx edx +
shr ecx 1 +
and edi 0FFFFFDA8h +
mov [esp+28h] ecx +
mov ecx eax +
add edi 708h +
sub ecx edx +
cmp eax [esp+28h] +
cmovg eax ecx +
cmp eax ebx +
jl loc_41A618  +
mov edx 0FFEh +
sub edx edi +
cmp edx eax +
jl loc_41A618  +
mov eax ds:dword_49F330 +
mov edx [esp+30h] +
test eax eax +
jnz loc_41AA7B  +
mov eax [esp+84h] +
mov ebx [esp+5Ch] +
mov edi [esp+40h] +
mov eax [eax+8Ch] +
lea ecx [ebx+edx] +
mov [eax+68h] edi +
mov [eax+30h] ebx +
mov eax [esp+24h] +
mov [eax+78h] esi +
movzx edx byte ptr [ebx+edx+1] +
movzx eax byte ptr [ecx] +
and edx 0FFFFFF94h +
and eax 0Eh +
cmp dl 94h +
jz loc_41A53B  +
mov dword ptr [esp+8] offset aElf32_avr_rela +
mov dword ptr [esp+4] 0AA6h +
mov dword ptr [esp] offset a____Binutil_15 +
call sub_40C6F0  +
nop   +
mov eax [ebx+120h] +
cmp eax [esp+84h] +
jnz loc_41A047  +
mov edi [esp+84h] +
mov esi [edi+24h] +
mov edi ds:dword_49F330 +
test edi edi +
jnz loc_41AE5B  +
mov eax [eax+3Ch] +
mov edi [esp+88h] +
mov eax [eax+94h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
mov [esp] eax +
call near ptr dword_41927C+14h  +
mov eax [ebx+120h] +
mov eax [eax+24h] +
cmp eax esi +
jz loc_41A349  +
mov edi [esp+8Ch] +
mov dword ptr [edi] 1 +
mov ecx ds:dword_49F330 +
test ecx ecx +
jnz loc_41AA4A  +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+88h] +
mov ds:dword_49F324 1 +
mov edi [eax+34h] +
test edi edi +
jz loc_419FBC  +
mov ecx edi +
mov eax [ecx+64h] +
test eax eax +
jnz loc_41A3B7  +
jmp loc_41A3C0  +
mov esi [eax+8Ch] +
lea edx [esi+90h] +
mov eax [eax+0Ch] +
mov dword ptr [edx] 0 +
mov dword ptr [edx+4] 0 +
mov dword ptr [edx+8] 0 +
test eax eax +
jz loc_41A3C0  +
cmp eax [eax+3Ch] +
jnz loc_41A390  +
xor edx edx +
jmp loc_41A39C  +
***
mov ecx [ecx+9Ch] +
test ecx ecx +
jnz loc_41A382  +
lea esi [esi+0] +
mov [esp] edi +
call sub_419950  +
test eax eax +
mov ebp eax +
jz loc_41A4A9  +
mov eax [eax+4] +
test eax eax +
jz loc_41A4A9  +
xor ecx ecx +
xor esi esi +
mov [esp+1Ch] edi +
mov edi ecx +
jmp loc_41A458  +
cmp eax [eax+3Ch] +
jz loc_41A462  +
mov ebx [eax+8Ch] +
add ebx 90h +
jz loc_41A462  +
mov edx [ebx] +
cmp edx [ebx+4] +
jz loc_41A480  +
mov eax [ebx+8] +
lea edx [edx+edx*2] +
add edi 1 +
lea eax [eax+edx*8] +
mov edx [ebp+0Ch] +
add edx esi +
add esi 18h +
mov ecx [edx] +
mov [eax] ecx +
mov ecx [edx+4] +
mov [eax+4] ecx +
mov ecx [edx+8] +
mov [eax+8] ecx +
mov ecx [edx+0Ch] +
mov [eax+0Ch] ecx +
mov ecx [edx+10h] +
mov [eax+10h] ecx +
mov edx [edx+14h] +
mov [eax+14h] edx +
add dword ptr [ebx] 1 +
cmp edi [ebp+4] +
jnb loc_41A4A5  +
mov eax [ebp+0Ch] +
mov eax [eax+esi] +
test eax eax +
jnz loc_41A400  +
xor ebx ebx +
mov dword ptr [esp+4] 913h +
mov dword ptr [esp] offset a____Binutil_15 +
call sub_40C6C0  +
mov edx [ebx] +
cmp edx [ebx+4] +
jnz loc_41A41A  +
nop   +
mov eax [ebx+8] +
add edx 0Ah +
mov [ebx+4] edx +
lea edx [edx+edx*2] +
shl edx 3 +
mov [esp+4] edx +
mov [esp] eax +
call sub_40F050  +
mov edx [ebx] +
mov [ebx+8] eax +
jmp loc_41A41D  +
***
mov edi [esp+1Ch] +
mov [esp] ebp +
call free  +
mov edi [edi+9Ch] +
test edi edi +
jnz loc_41A3D0  +
mov eax [esp+88h] +
mov esi [eax+34h] +
test esi esi +
jz loc_419FBC  +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_41A4E7  +
jmp loc_41A52C  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_41A52C  +
cmp ebx [ebx+3Ch] +
jz loc_41A4E0  +
mov eax [ebx+8Ch] +
cmp eax 0FFFFFF70h +
jz loc_41A4E0  +
mov edx [eax+90h] +
test edx edx +
jz loc_41A4E0  +
mov eax [eax+98h] +
mov dword ptr [esp+0Ch] offset sub_417F00 +
mov dword ptr [esp+8] 18h +
mov [esp+4] edx +
mov [esp] eax +
call qsort  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_41A4E7  +
mov esi [esi+9Ch] +
test esi esi +
jnz loc_41A4D1  +
jmp loc_419FBC  +
***
cmp al 0Eh +
jnz loc_41AA2E  +
mov byte ptr [ecx] 0 +
mov eax [ebp+0] +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+1] 0D0h +
mov eax [ebp+4] +
mov edi [esp+2Ch] +
xor al al +
add eax 3 +
test edi edi +
mov [ebp+4] eax +
mov eax [ebp+0] +
jnz loc_41AAA4  +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+2] 0 +
mov eax [ebp+0] +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+3] 0 +
mov eax [esp+84h] +
mov edi [ebp+0] +
mov eax [eax+3Ch] +
mov ebx [eax+1Ch] +
mov eax [esp+84h] +
mov ecx [eax+38h] +
mov edx [esp+5Ch] +
add ebx edi +
lea eax [edx+edi+1] +
mov [esp+34h] eax +
movzx eax byte ptr [eax] +
mov [esp+1Ch] al +
lea eax [edx+edi] +
mov [esp+38h] eax +
movzx eax byte ptr [eax] +
mov [esp+28h] al +
lea eax [ebx+ecx] +
movzx ecx byte ptr [esp+1Ch] +
mov [esp+30h] eax +
and ecx 0FFFFFFF0h +
cmp cl 0D0h +
jz loc_41A6C1  +
movzx eax byte ptr [esp+1Ch] +
and eax 0FFFFFFFEh +
cmp al 94h +
jz loc_41A6DF  +
cmp cl 0C0h +
jnz loc_41A143  +
mov dword ptr [esp+3Ch] 2 +
mov dword ptr [esp+34h] 2 +
jmp loc_41A710  +
mov eax [ebx+14h] +
mov edx [eax+3Ch] +
mov ecx [edx+1Ch] +
add ecx [ebx+18h] +
add ecx [eax+38h] +
jmp loc_41A1B1  +
***
mov eax [esp+1Ch] +
test eax eax +
jnz loc_41A275  +
mov ecx [esp+38h] +
mov ebx [esp+34h] +
mov edi [esp+30h] +
jmp loc_41A59B  +
***
test edx edx +
jz loc_41A891  +
mov esi [eax+78h] +
test esi esi +
jnz loc_41A17C  +
mov eax [esp+44h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] edx +
mov [esp] eax +
call sub_424210  +
test eax eax +
mov esi eax +
jz loc_41ADBD  +
mov eax [esp+24h] +
mov edx [eax+68h] +
jmp loc_41A17C  +
***
mov eax [esp+84h] +
mov eax [eax+8Ch] +
mov eax [eax+30h] +
test eax eax +
jz loc_41AED9  +
mov [esp+5Ch] eax +
jmp loc_41A16D  +
***
mov ebx dword_476530 +
test ebx ebx +
jnz loc_41A89C  +
movzx eax byte ptr [esp+1Ch] +
and eax 0FFFFFFFEh +
cmp al 94h +
jnz loc_41A143  +
movzx eax byte ptr [esp+28h] +
and eax 0Eh +
cmp al 0Eh +
jz loc_41AAE3  +
cmp cl 0C0h +
jz loc_41A5EF  +
cmp al 0Ch +
jnz loc_41A143  +
mov dword ptr [esp+3Ch] 4 +
mov dword ptr [esp+34h] 4 +
mov eax [esp+3Ch] +
mov ebx [esp+84h] +
add eax edi +
lea ecx [eax+1] +
cmp ecx [ebx+24h] +
jnb loc_41A143  +
cmp byte ptr [edx+eax+1] 95h +
jnz loc_41A143  +
cmp byte ptr [edx+eax] 8 +
jnz loc_41A143  +
mov eax ds:dword_49F330 +
test eax eax +
jz loc_41A75D  +
cmp dword ptr [esp+34h] 2 +
jz loc_41AF24  +
cmp dword ptr [esp+34h] 4 +
jz loc_41AF08  +
cmp edi 1 +
jbe loc_41A143  +
mov edx [esp+5Ch] +
movzx eax byte ptr [edx+edi-1] +
movzx edx byte ptr [edx+edi-2] +
cmp al 99h +
jz loc_41AEAC  +
cmp al 9Bh +
jz loc_41AE25  +
mov ebx eax +
and ebx 0FFFFFFFEh +
cmp bl 0FCh +
jnz loc_41AE0E  +
shr dl 3 +
mov ecx edx +
and ecx 1 +
and eax 0FFFFFFFCh +
cmp al 10h +
jz loc_41AE25  +
test ecx ecx +
jz loc_41AE25  +
mov eax [esp+84h] +
add edi [esp+3Ch] +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp+1Ch] edi +
mov edi 1 +
mov [esp] eax +
call sub_428190  +
mov ecx eax +
mov eax [esp+24h] +
mov ebx [eax+78h] +
mov eax [eax+68h] +
lea edx [eax+eax*4] +
lea edx [ebx+edx*4] +
cmp ebx edx +
jnb loc_41AB5A  +
test ebx ebx +
jz loc_41AB5A  +
mov eax [esp+30h] +
add eax [esp+34h] +
mov [esp+28h] eax +
jmp loc_41A817  +
add ebx 14h +
cmp edx ebx +
jbe loc_41AB53  +
test ebx ebx +
jz loc_41AB53  +
mov eax [esp+1Ch] +
cmp [ebx] eax +
jnz loc_41A804  +
cmp [ebx+10h] ecx +
jnz loc_41A804  +
mov eax ds:dword_49F330 +
xor edi edi +
test eax eax +
jz loc_41A804  +
mov eax [esp+28h] +
mov dword ptr [esp] offset aLocalLabelPrev +
mov [esp+48h] edx +
mov [esp+38h] ecx +
mov [esp+4] eax +
call printf  +
mov edx [esp+48h] +
mov ecx [esp+38h] +
jmp loc_41A804  +
***
cmp ecx 0FFFh +
setle al  +
xor ebx ebx +
cmp ecx 0FFFFF000h +
setnl bl  +
mov [esp+1Ch] ebx +
and [esp+1Ch] eax +
jmp loc_41A218  +
***
mov eax [esp+88h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aPFRelaxAndRM_0 +
call eax  +
jmp loc_41A012  +
***
mov eax [ebp+4] +
shr eax 8 +
jmp loc_41A114  +
***
mov eax [esp+84h] +
lea ecx [edi+3] +
cmp ecx [eax+24h] +
jnb loc_41A143  +
cmp byte ptr [edx+edi+2] 8 +
jnz loc_41A143  +
cmp byte ptr [edx+edi+3] 95h +
jnz loc_41A143  +
movzx eax byte ptr [esp+1Ch] +
mov edx ds:dword_49F330 +
mov edi [esp+34h] +
and eax 0FFFFFFEFh +
test edx edx +
mov [edi] al +
jnz loc_41AEB3  +
mov eax [esp+8Ch] +
mov dword ptr [eax] 1 +
jmp loc_41A143  +
***
mov dword ptr [esp+4] 0A34h +
mov dword ptr [esp] offset a____Binutil_15 +
call sub_40C6C0  +
jmp loc_41A134  +
***
mov eax [esp+8Ch] +
mov eax [eax] +
test eax eax +
jnz loc_41A9EA  +
mov eax [esp+84h] +
mov eax [eax+3Ch] +
cmp [esp+84h] eax +
jz loc_41AF40  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
mov [esp+1Ch] eax +
lea ebp [eax+90h] +
mov edx [ebp+0] +
test edx edx +
jz loc_41A9EA  +
mov dword ptr [esp+1Ch] 0 +
mov eax [esp+1Ch] +
lea edx [eax+eax*2] +
mov eax [ebp+8] +
lea esi [eax+edx*8] +
mov eax [esi+8] +
sub eax 2 +
cmp eax 1 +
ja loc_41A9D8  +
mov ecx [esi+0Ch] +
mov eax 1 +
mov ebx [esi+14h] +
shl eax cl +
mov edx ebx +
mov ecx eax +
sub edx eax +
cmp eax ebx +
jbe loc_41A992  +
jmp loc_41A9D8  +
mov edx ebx +
mov ebx edx +
mov edi ecx +
sub ebx eax +
add ecx eax +
cmp edx eax +
jnb loc_41A990  +
test edi edi +
mov [esi+14h] edx +
jle loc_41A9D8  +
mov ecx [esi+4] +
mov edx [esp+84h] +
mov eax [esp+80h] +
sub ecx edi +
mov [esi+4] ecx +
mov dword ptr [esp+4] 0 +
mov [esp] edi +
call sub_417480  +
mov eax [esp+8Ch] +
mov dword ptr [eax] 1 +
add dword ptr [esp+1Ch] 1 +
mov eax [esp+1Ch] +
cmp [ebp+0] eax +
ja loc_41A95E  +
mov edx [esp+5Ch] +
test edx edx +
jz loc_41AA6C  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
cmp edx [eax+30h] +
jz loc_41AA14  +
mov edi [esp+88h] +
test byte ptr [edi+2] 40h +
jz loc_41AA64  +
mov [eax+30h] edx +
mov edi [esp+40h] +
cmp [eax+68h] edi +
jz loc_41A357  +
mov [esp] edi +
call free  +
jmp loc_41A357  +
***
cmp al 0Ch +
jnz loc_41A2C2  +
mov byte ptr [ecx] 0 +
mov eax [ebp+0] +
mov edx [esp+5Ch] +
mov byte ptr [edx+eax+1] 0C0h +
jmp loc_41A552  +
***
mov [esp+4] eax +
mov dword ptr [esp] offset aSizeOfStubSect +
call printf  +
mov eax 1 +
jmp loc_41A024  +
***
mov [esp] edx +
call free  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
jmp loc_41AA14  +
***
mov eax [esp+84h] +
mov eax [eax] +
mov dword ptr [esp] offset aShrinkingJumpC +
mov [esp+8] eax +
mov eax [esp+3Ch] +
mov [esp+4] eax +
call printf  +
mov edx [ebp+0] +
jmp loc_41A286  +
***
lea ecx [eax+2] +
mov edx [esp+84h] +
mov eax [esp+80h] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 2 +
call sub_417480  +
test eax eax +
jz loc_41ADA8  +
mov eax [esp+8Ch] +
mov dword ptr [eax] 1 +
jmp loc_41A581  +
***
mov eax dword_476530 +
test eax eax +
jz loc_41A5E6  +
mov ecx [esp+84h] +
lea eax [edi+5] +
cmp eax [ecx+24h] +
jnb loc_41A143  +
cmp byte ptr [edx+edi+4] 8 +
jnz loc_41A143  +
cmp byte ptr [edx+edi+5] 95h +
jnz loc_41A143  +
movzx eax byte ptr [esp+28h] +
mov edi [esp+38h] +
and eax 0FFFFFFFDh +
mov [edi] al +
mov eax ds:dword_49F330 +
test eax eax +
jz loc_41A8E1  +
mov eax [ecx] +
mov dword ptr [esp] offset aConvertedCallR +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp+4] eax +
call printf  +
jmp loc_41A8E1  +
***
mov eax [esp+24h] +
mov eax [eax+68h] +
mov ecx [esp+80h] +
mov edx [ecx+0A0h] +
mov ecx [esp+24h] +
mov ebx [edx+218h] +
mov edx [ecx+60h] +
shr edx 4 +
sub edx eax +
lea ecx [ebx+edx*4] +
cmp ebx ecx +
jnb loc_41ABE1  +
mov eax [esp+30h] +
add eax [esp+34h] +
mov [esp+28h] eax +
jmp loc_41AB95  +
add ebx 4 +
cmp ecx ebx +
jbe loc_41ABE1  +
mov eax [ebx] +
movzx edx byte ptr [eax+0Ch] +
sub edx 3 +
cmp dl 1 +
ja loc_41AB8E  +
mov edx [esp+84h] +
cmp [eax+14h] edx +
jnz loc_41AB8E  +
mov edx [esp+1Ch] +
cmp [eax+18h] edx +
jnz loc_41AB8E  +
mov eax ds:dword_49F330 +
xor edi edi +
test eax eax +
jz loc_41AB8E  +
mov eax [esp+28h] +
mov dword ptr [esp] offset aGlobalLabelPre +
mov [esp+38h] ecx +
mov [esp+4] eax +
call printf  +
mov ecx [esp+38h] +
jmp loc_41AB8E  +
***
mov eax [esp+80h] +
mov eax [eax+64h] +
mov ecx eax +
mov [esp+38h] eax +
mov eax edi +
test al al +
mov [esp+4Fh] al +
jz loc_41A143  +
test ecx ecx +
jz loc_41AD5E  +
mov eax [esp+3Ch] +
add eax [esp+30h] +
mov edi [esp+24h] +
mov [esp+48h] ebp +
mov [esp+1Ch] eax +
mov eax [esp+38h] +
mov eax [eax+8Ch] +
mov ebx [eax+68h] +
test ebx ebx +
jz loc_41AE76  +
mov eax [esp+38h] +
mov eax [eax+4Ch] +
lea eax [eax+eax*2] +
lea ebp [ebx+eax*4] +
cmp ebx ebp +
jb loc_41AC57  +
jmp loc_41AD47  +
cmp [esp+1Ch] ecx +
jz loc_41ACB2  +
add ebx 0Ch +
cmp ebp ebx +
jbe loc_41AD47  +
test ebx ebx +
jz loc_41AD47  +
test esi esi +
mov eax [edi+68h] +
jz loc_41ACE0  +
mov edx [ebx+4] +
xor ecx ecx +
shr edx 8 +
cmp edx eax +
jnb loc_41AC46  +
lea eax [edx+edx*4] +
lea edx [esi+eax*4] +
mov eax [edx+10h] +
mov [esp+28h] edx +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_426C70  +
mov edx [esp+28h] +
mov ecx [edx] +
test eax eax +
jz loc_41AD3F  +
mov edx [eax+3Ch] +
add ecx [edx+1Ch] +
add ecx [eax+38h] +
add ecx [ebx+8] +
cmp [esp+1Ch] ecx +
jnz loc_41AC4C  +
mov ebx ds:dword_49F330 +
mov ebp [esp+48h] +
test ebx ebx +
jz loc_41A143  +
mov eax [esp+1Ch] +
mov dword ptr [esp] offset aRetFromRjmpJmp +
mov [esp+4] eax +
call printf  +
jmp loc_41A143  +
***
test eax eax +
jz loc_41AD38  +
mov esi [edi+78h] +
test esi esi +
jnz loc_41AC66  +
mov [esp+8] eax +
mov eax [esp+44h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] eax +
call sub_424210  +
test eax eax +
mov esi eax +
jz loc_41AD47  +
mov eax [edi+68h] +
jmp loc_41AC66  +
***
xor ecx ecx +
jmp loc_41AC46  +
***
add ecx [ebx+8] +
jmp loc_41AC46  +
***
mov eax [esp+38h] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+38h] eax +
jnz loc_41AC1B  +
mov ebp [esp+48h] +
cmp byte ptr [esp+4Fh] 0 +
jz loc_41A143  +
mov ecx ds:dword_49F330 +
test ecx ecx +
jnz loc_41AF47  +
mov ecx [esp+3Ch] +
mov edx [esp+84h] +
mov eax [esp+80h] +
add ecx [ebp+0] +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 2 +
call sub_417480  +
test eax eax +
jnz loc_41A8E1  +
test esi esi +
jz loc_41ADBD  +
mov eax [esp+24h] +
cmp [eax+78h] esi +
jz loc_41ADBD  +
mov [esp] esi +
call free  +
mov eax [esp+5Ch] +
test eax eax +
jz loc_41ADDF  +
mov edi [esp+84h] +
mov edx [edi+8Ch] +
cmp eax [edx+30h] +
jz loc_41ADDF  +
mov [esp] eax +
call free  +
mov edi [esp+40h] +
test edi edi +
jz loc_41A022  +
mov eax [esp+84h] +
mov eax [eax+8Ch] +
cmp [eax+68h] edi +
jz loc_41A022  +
mov [esp] edi +
call free  +
jmp loc_41A022  +
***
cmp bl 0FEh +
mov ecx 1 +
jnz loc_41A79A  +
and edx 8 +
jnz loc_41A79A  +
mov eax ds:dword_49F330 +
test eax eax +
jz loc_41A143  +
mov eax [esp+84h] +
mov eax [eax] +
mov dword ptr [esp] offset aPrecedingSkipI +
mov [esp+8] eax +
mov eax [esp+30h] +
add eax 2 +
mov [esp+4] eax +
call printf  +
jmp loc_41A143  +
***
mov [esp+4] esi +
mov dword ptr [esp] offset aRelaxingTheStu +
call printf  +
mov eax [ebx+120h] +
jmp loc_41A30B  +
***
mov eax [esp+38h] +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_438410  +
mov ebx eax +
jmp loc_41AC30  +
***
xor ecx ecx +
jmp loc_41A79A  +
***
mov eax [esp+84h] +
mov eax [eax] +
mov dword ptr [esp] offset aConvertedRcall +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp+4] eax +
call printf  +
jmp loc_41A8E1  +
***
lea eax [esp+5Ch] +
mov [esp+8] eax +
mov eax [esp+84h] +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_4111A0  +
test eax eax +
jnz loc_41A16D  +
jmp loc_41ADA8  +
***
mov eax [esp+30h] +
mov dword ptr [esp] offset aFoundJmpRetSeq +
mov [esp+4] eax +
call printf  +
mov edi [ebp+0] +
jmp loc_41A75D  +
***
mov eax [esp+30h] +
mov dword ptr [esp] offset aFoundRjmpRetSe +
mov [esp+4] eax +
call printf  +
mov edi [ebp+0] +
jmp loc_41A75D  +
***
xor ebp ebp +
jmp loc_41A94B  +
***
mov eax [esp+30h] +
add eax [esp+34h] +
mov dword ptr [esp] offset aUnreachableRet +
mov [esp+4] eax +
call printf  +
jmp loc_41AD77  +
***
mov [esp] ebx +
call sub_410E60  +
mov edx [esp+1Ch] +
xor eax eax +
test edx edx +
jnz loc_41AFF2  +
mov eax [esp+34h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_4391B0  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+24h] +
mov edx [esp+20h] +
test byte ptr [eax+14h] 4 +
jz loc_41B046  +
mov eax [edx+0A0h] +
movzx eax word ptr [eax+26h] +
mov [esp+4] edx +
mov dword ptr [esp] offset aBRelocationsIn +
mov [esp+8] eax +
call off_476094  +
mov dword ptr [esp] 3 +
call sub_40C770  +
mov eax [esp+28h] +
mov dword ptr [eax] 1 +
add esp 1Ch +
retn   +
***
xor eax eax +
retn   +
***
mov eax [esp+4] +
mov eax [eax+7Ch] +
lea eax ds:4[eax*4] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov ebx [esp+34h] +
mov esi [edi+7Ch] +
mov eax [edi+0A0h] +
test esi esi +
mov eax [eax+14h] +
jnz loc_41B0A0  +
mov dword ptr [ebx] 0 +
mov eax esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test eax eax +
jz loc_41B0BC  +
xor edx edx +
jmp loc_41B0AA  +
mov eax ecx +
add edx 1 +
add ebx 4 +
cmp esi edx +
lea ecx [eax+18h] +
mov [ebx-4] eax +
ja loc_41B0A8  +
jmp loc_41B08F  +
***
lea eax [esi+esi*2] +
shl eax 3 +
mov [esp+4] eax +
mov [esp] edi +
call sub_407B20  +
test eax eax +
jz loc_41B113  +
mov edx [edi+0A0h] +
mov ecx [edx+0Ch] +
mov [edx+14h] eax +
test ecx ecx +
jz loc_41B0A4  +
mov edx eax +
mov ebp [ecx+4] +
add edx 18h +
mov [edx-18h] edi +
mov [edx-14h] ebp +
mov ebp [ecx+8] +
mov ecx [ecx] +
mov dword ptr [edx-0Ch] 2 +
mov dword ptr [edx-8] offset off_476230 +
mov [edx-10h] ebp +
mov dword ptr [edx-4] 0 +
test ecx ecx +
jnz loc_41B0E4  +
jmp loc_41B0A4  +
***
mov eax 0FFFFFFFFh +
jmp loc_41B097  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+50h] +
mov edx [esp+60h] +
mov eax [esp+5Ch] +
mov [esp] ebx +
mov [esp+14h] edx +
mov [esp+10h] eax +
call sub_40EDD0  +
mov esi [ebx+0A0h] +
mov dword ptr [esp+4] 10h +
mov [esp] ebx +
mov ebp eax +
call sub_407B20  +
test eax eax +
mov edi eax +
jz loc_41B2B3  +
mov ecx [esp+64h] +
test ecx ecx +
jz loc_41B17C  +
mov eax [esp+54h] +
mov eax [eax+14h] +
and eax 3 +
cmp eax 3 +
jz loc_41B190  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+64h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_407B20  +
test eax eax +
mov ecx eax +
mov [esp+20h] eax +
jz loc_41B2B3  +
mov eax [esp+64h] +
mov [esp] ecx +
mov [esp+8] eax +
mov eax [esp+58h] +
mov [esp+4] eax +
call memcpy  +
mov edx ds:dword_49F334 +
test edx edx +
jnz loc_41B2C0  +
mov eax [esp+54h] +
xor ebx ebx +
mov [esp+18h] ebp +
mov dword ptr [esp+2Ch] 0 +
mov eax [eax+20h] +
mov [esp+8] ebp +
mov ecx eax +
mov [esp+24h] eax +
mov eax ebp +
mov [esp+28h] ecx +
mov ecx [esp+64h] +
cdq   +
add ecx [esp+10h] +
adc ebx [esp+14h] +
mov [esp+0Ch] edx +
mov [esp] ecx +
mov [esp+4] ebx +
mov [esp+1Ch] edx +
call sub_472FE0  +
add eax [esp+28h] +
adc edx [esp+2Ch] +
cmp edx 0 +
jl loc_41B2F5  +
jle loc_41B2FE  +
mov ebx [esp+24h] +
mov dword ptr [esi+8] 3 +
lea esi [esi+0] +
mov eax [esp+20h] +
mov edx [esp+1Ch] +
mov [edi+4] eax +
mov eax [esp+18h] +
mov [esp+0Ch] edx +
mov edx [esp+14h] +
mov [esp+8] eax +
mov eax [esp+10h] +
mov [esp+4] edx +
mov [esp] eax +
call sub_472FE0  +
add ebx eax +
mov eax [esp+64h] +
mov [edi+8] ebx +
mov [edi+0Ch] eax +
mov eax [esi+4] +
test eax eax +
jz loc_41B283  +
cmp ebx [eax+8] +
jnb loc_41B2E0  +
mov edx [esi] +
mov eax esi +
test edx edx +
jnz loc_41B298  +
jmp loc_41B29D  +
mov eax edx +
mov edx [edx] +
test edx edx +
jz loc_41B29D  +
cmp ebx [edx+8] +
ja loc_41B290  +
mov [edi] edx +
mov [eax] edi +
mov eax [edi] +
test eax eax +
jnz loc_41B17C  +
mov [esi+4] edi +
jmp loc_41B17C  +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+54h] +
mov [esp+18h] ebp +
sar ebp 1Fh +
mov dword ptr [esi+8] 3 +
mov [esp+1Ch] ebp +
mov ebx [eax+20h] +
jmp loc_41B240  +
***
mov [eax] edi +
mov eax 1 +
mov dword ptr [edi] 0 +
mov [esi+4] edi +
jmp loc_41B181  +
***
mov ebx [esp+24h] +
jmp loc_41B240  +
***
cmp eax 10000h +
jbe loc_41B2F5  +
cmp edx 0 +
jg loc_41B231  +
nop   +
jl loc_41B31D  +
cmp eax 1000000h +
ja loc_41B231  +
cmp dword ptr [esi+8] 2 +
ja loc_41B231  +
mov dword ptr [esi+8] 2 +
mov ebx [esp+24h] +
jmp loc_41B240  +
***
mov eax [esp+8] +
mov edx [esp+4] +
test eax eax +
jnz loc_41B360  +
mov dword ptr [edx+84h] offset asc_47A8A0 +
mov eax 1 +
retn   +
***
jmp sub_40ED50  +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_411970  +
***
push esi  +
push ebx  +
sub esp 23Ch +
cmp edx 9 +
mov [esp+23Ch+var_220] eax +
mov eax ecx +
mov edi [esp+23Ch+arg_4] +
lea ecx [edx+30h] +
mov byte ptr [esp+23Ch+var_210] 53h +
mov byte ptr [esp+23Ch+var_210+1] cl +
ja loc_41B430  +
mov ebx 1 +
mov ecx edx +
shl ebx cl +
test ebx 203h +
jz loc_41B525  +
lea ebp [esp+23Ch+var_20C] +
xor esi esi +
mov ecx eax +
movzx ebx al +
shr ecx 8 +
add ebp 4 +
mov edx ecx +
movzx ecx cl +
and edx 0Fh +
add ebx ecx +
movzx edx ds:byte_48D1B4[edx] +
add ebx esi +
mov [ebp-3] dl +
mov edx eax +
shr edx 0Ch +
and edx 0Fh +
movzx edx ds:byte_48D1B4[edx] +
mov [ebp-4] dl +
mov edx eax +
and edx 0Fh +
movzx edx ds:byte_48D1B4[edx] +
mov [ebp-1] dl +
mov edx eax +
shr edx 4 +
and edx 0Fh +
movzx edx ds:byte_48D1B4[edx] +
mov [ebp-2] dl +
jmp loc_41B436  +
lea ebp [esp+23Ch+var_20C] +
xor ebx ebx +
cmp [esp+23Ch+arg_0] edi +
jnb loc_41B491  +
mov eax [esp+23Ch+arg_0] +
mov edx ebp +
mov [esp+23Ch+var_224] ebx +
lea esi [esi+0] +
movzx ecx byte ptr [eax] +
add eax 1 +
add edx 2 +
add [esp+23Ch+var_224] ecx +
mov esi ecx +
and esi 0Fh +
movzx ebx ds:byte_48D1B4[esi] +
mov [edx-1] bl +
mov ebx ecx +
shr bl 4 +
movzx esi bl +
movzx ebx ds:byte_48D1B4[esi] +
mov [edx-2] bl +
cmp eax edi +
jnz loc_41B450  +
sub eax [esp+23Ch+arg_0] +
mov ebx [esp+23Ch+var_224] +
lea ebp [ebp+eax*2+0] +
lea eax [esp+2Eh] +
mov edi ebp +
sub edi eax +
add ebp 4 +
mov esi edi +
shr esi 1Fh +
add esi edi +
mov ecx esi +
sar ecx 1 +
mov eax ecx +
movzx ecx cl +
and eax 0Fh +
add ebx ecx +
movzx eax ds:byte_48D1B4[eax] +
not ebx  +
movzx ebx bl +
lea edx [esp+23Ch+var_210] +
mov byte ptr [esp+23Ch+var_210+3] al +
mov eax esi +
sar eax 5 +
and eax 0Fh +
movzx eax ds:byte_48D1B4[eax] +
mov byte ptr [ebp-1] 0Ah +
mov byte ptr [esp+23Ch+var_210+2] al +
mov eax ebx +
and eax 0Fh +
movzx eax ds:byte_48D1B4[eax] +
shr ebx 4 +
mov byte ptr [ebp-2] 0Dh +
mov [ebp-3] al +
movzx eax ds:byte_48D1B4[ebx] +
mov [ebp-4] al +
mov eax [esp+23Ch+var_220] +
sub ebp edx +
mov [esp+23Ch+var_238] ebp +
mov [esp+23Ch+var_23C] edx +
mov [esp+23Ch+var_234] eax +
call sub_405F60  +
cmp eax ebp +
setz al  +
add esp 23Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx 104h +
jnz loc_41B564  +
and ebx 88h +
jz loc_41B430  +
mov ebx eax +
shr ebx 18h +
mov edx ebx +
and edx 0Fh +
movzx edx ds:byte_48D1B4[edx] +
lea ebp [esp+23Ch+var_20C+2] +
mov byte ptr [esp+23Ch+var_20C+1] dl +
mov edx eax +
shr edx 1Ch +
movzx edx ds:byte_48D1B4[edx] +
mov byte ptr [esp+23Ch+var_20C] dl +
jmp loc_41B56A  +
lea ebp [esp+23Ch+var_20C] +
xor ebx ebx +
mov ecx eax +
add ebp 2 +
shr ecx 10h +
mov edx ecx +
movzx ecx cl +
and edx 0Fh +
movzx edx ds:byte_48D1B4[edx] +
lea esi [ebx+ecx] +
mov [ebp-1] dl +
mov edx eax +
shr edx 14h +
and edx 0Fh +
movzx edx ds:byte_48D1B4[edx] +
mov [ebp-2] dl +
jmp loc_41B3D3  +
***
mov eax ds:dword_49F338 +
mov ebx [esp+18h+arg_0] +
test eax eax +
jz loc_41B600  +
mov [esp+18h+var_14] 18h +
mov [esp+18h+var_18] ebx +
call sub_407B20  +
test eax eax +
jz loc_41B611  +
mov [ebx+0A0h] eax +
mov dword ptr [eax+8] 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov ds:dword_49F338 1 +
call nullsub_2  +
jmp loc_41B5B1  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov edx [esp+2Ch] +
mov eax [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
test edx edx +
jz loc_41B670  +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] eax +
call sub_411630  +
mov eax [ebx+10h] +
mov edx [ebx+4] +
mov eax [eax] +
mov [esp+20h] esi +
mov [esp+2Ch] edx +
mov dword ptr [esp+24h] offset a5sS +
mov [esp+28h] eax +
add esp 14h +
pop ebx  +
pop esi  +
jmp fprintf  +
***
mov eax [ebx+4] +
mov [esp+20h] eax +
add esp 14h +
pop ebx  +
pop esi  +
jmp fputs  +
***
jmp sub_41B690  +
***
sub esp 28h +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_9] +
mov [esp+28h+var_24] 1 +
mov [esp+28h+var_28] eax +
call sub_405EB0  +
cmp eax 1 +
jz loc_41B6D0  +
call sub_40C520  +
mov edx eax +
mov eax 0FFFFFFFFh +
cmp edx 12h +
jz loc_41B6CA  +
mov dword ptr [ebx] 1 +
add esp 28h +
pop ebx  +
retn   +
movzx eax byte ptr [esp+28h+var_9] +
add esp 28h +
pop ebx  +
retn   +
***
push ebp  +
mov eax 1 +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp [esp+74h] +
mov esi [esp+6Ch] +
mov edi [esp+70h] +
test ebp ebp +
jz loc_41B718  +
mov eax esi +
xor ebx ebx +
mov edx edi +
add eax ebp +
adc edx ebx +
cmp ebx edx +
jle loc_41B720  +
mov dword ptr [esp] 5 +
call sub_40C770  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jge loc_41B765  +
mov ebx [esp+64h] +
cmp edx 0 +
mov ecx [ebx+24h] +
jl loc_41B734  +
jg loc_41B70A  +
cmp eax ecx +
ja loc_41B70A  +
mov eax [esp+64h] +
mov eax [eax+8Ch] +
test eax eax +
jz loc_41B770  +
add eax esi +
mov [esp+4] eax +
mov eax [esp+68h] +
mov [esp+8] ebp +
mov [esp] eax +
call memcpy  +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp ebp eax +
ja loc_41B70A  +
jmp loc_41B722  +
***
mov eax [esp+60h] +
mov [esp+4] ecx +
mov [esp] eax +
call sub_407B20  +
mov edx [esp+64h] +
mov ebx eax +
mov [esp+24h] eax +
mov [edx+8Ch] eax +
xor eax eax +
test ebx ebx +
jz loc_41B718  +
mov eax edx +
mov edx [edx+54h] +
mov eax [eax+50h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+3Ch] 0 +
mov [esp+8] edx +
mov [esp+4] eax +
mov eax [esp+60h] +
mov [esp] eax +
call sub_4060C0  +
test eax eax +
jnz loc_41B942  +
mov dword ptr [esp+20h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 0 +
mov [esp+28h] esi +
mov [esp+2Ch] edi +
mov [esp+74h] ebp +
nop   +
mov eax [esp+60h] +
lea edx [esp+3Ch] +
call sub_41B690  +
cmp eax 0FFFFFFFFh +
jz loc_41BA82  +
cmp eax 0Ah +
jz loc_41B7F0  +
cmp eax 0Dh +
nop   +
jz loc_41B7F0  +
cmp eax 53h +
jz loc_41B82B  +
mov dword ptr [esp+4] 2E3h +
mov dword ptr [esp] offset a____Binutil_19 +
call sub_40C6C0  +
mov eax [esp+60h] +
mov dword ptr [esp+4] 3 +
mov [esp+8] eax +
lea eax [esp+39h] +
mov [esp] eax +
call sub_405EB0  +
cmp eax 3 +
jnz loc_41B932  +
movzx eax byte ptr [esp+3Ah] +
movzx eax ds:byte_4974E0[eax] +
cmp al 63h +
jz loc_41B950  +
movzx edx byte ptr [esp+3Bh] +
movzx edx ds:byte_4974E0[edx] +
cmp dl 63h +
jz loc_41B950  +
shl eax 4 +
lea ebp [eax+edx] +
lea ebx [ebp+ebp+0] +
cmp ebx [esp+20h] +
jbe loc_41B8B1  +
mov eax [esp+18h] +
test eax eax +
jz loc_41B899  +
mov [esp] eax +
call free  +
mov [esp] ebx +
call sub_40EFC0  +
test eax eax +
mov [esp+18h] eax +
jz loc_41B942  +
mov [esp+20h] ebx +
mov eax [esp+60h] +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+18h] +
mov [esp] eax +
call sub_405EB0  +
cmp ebx eax +
jnz loc_41B932  +
movzx eax byte ptr [esp+39h] +
cmp al 32h +
jz loc_41BA6C  +
cmp al 33h +
jz loc_41B981  +
cmp al 31h +
jz loc_41BA77  +
mov eax [esp+64h] +
mov ebx [esp+1Ch] +
mov esi [esp+28h] +
mov ebp [esp+74h] +
cmp [eax+24h] ebx +
jz loc_41B913  +
mov dword ptr [esp+4] 2FEh +
mov dword ptr [esp] offset a____Binutil_19 +
call sub_40C6C0  +
mov eax [esp+18h] +
test eax eax +
jz loc_41B923  +
mov [esp] eax +
call free  +
mov eax [esp+64h] +
mov eax [eax+8Ch] +
jmp loc_41B742  +
***
mov eax [esp+18h] +
test eax eax +
jz loc_41B942  +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_41B718  +
***
mov dword ptr [esp+4] 2E8h +
mov dword ptr [esp] offset a____Binutil_19 +
call sub_40C6C0  +
movzx eax byte ptr [esp+3Ah] +
movzx edx byte ptr [esp+3Bh] +
movzx eax ds:byte_4974E0[eax] +
movzx edx ds:byte_4974E0[edx] +
jmp loc_41B879  +
***
mov edi [esp+18h] +
sub ebp 1 +
movzx eax byte ptr [edi] +
lea edx [edi+2] +
movzx ecx byte ptr [edi+1] +
movzx eax ds:byte_4974E0[eax] +
movzx ebx ds:byte_4974E0[ecx] +
shl eax 4 +
add ebx eax +
shl ebx 8 +
movzx eax byte ptr [edx] +
lea ecx [edx+2] +
sub ebp 1 +
movzx edx byte ptr [edx+1] +
movzx eax ds:byte_4974E0[eax] +
movzx edx ds:byte_4974E0[edx] +
shl eax 4 +
add edx eax +
or edx ebx +
shl edx 8 +
movzx eax byte ptr [ecx] +
movzx ebx byte ptr [ecx+1] +
mov edi [esp+64h] +
movzx eax ds:byte_4974E0[eax] +
movzx ebx ds:byte_4974E0[ebx] +
shl eax 4 +
add eax ebx +
movzx ebx byte ptr [ecx+2] +
or eax edx +
lea edx [ecx+4] +
movzx ecx byte ptr [ecx+3] +
shl eax 8 +
movzx ebx ds:byte_4974E0[ebx] +
movzx ecx ds:byte_4974E0[ecx] +
shl ebx 4 +
add ecx ebx +
or eax ecx +
mov ecx [esp+1Ch] +
add ecx [edi+1Ch] +
cmp eax ecx +
jnz loc_41BAC0  +
cmp ebp 3 +
jz loc_41B7F0  +
mov eax [esp+24h] +
lea edi [ebp-3] +
xor ecx ecx +
mov esi [esp+1Ch] +
add esi eax +
movzx eax byte ptr [edx] +
add edx 2 +
movzx ebx byte ptr [edx-1] +
movzx eax ds:byte_4974E0[eax] +
shl eax 4 +
add al ds:byte_4974E0[ebx] +
mov [esi+ecx] al +
add ecx 1 +
cmp ecx edi +
jnz loc_41BA37  +
mov eax [esp+1Ch] +
lea eax [ebp+eax-3] +
mov [esp+1Ch] eax +
jmp loc_41B7F0  +
***
mov edx [esp+18h] +
xor ebx ebx +
jmp loc_41B9A8  +
***
mov ecx [esp+18h] +
xor edx edx +
jmp loc_41B9CD  +
***
mov eax [esp+3Ch] +
mov esi [esp+28h] +
mov ebp [esp+74h] +
test eax eax +
jnz loc_41B932  +
mov eax [esp+64h] +
mov ebx [esp+1Ch] +
cmp ebx [eax+24h] +
jz loc_41B913  +
mov dword ptr [esp+4] 32Eh +
mov dword ptr [esp] offset a____Binutil_19 +
call sub_40C6C0  +
jmp loc_41B913  +
***
mov eax [esp+64h] +
mov ebx [esp+1Ch] +
mov esi [esp+28h] +
mov ebp [esp+74h] +
cmp ebx [eax+24h] +
jz loc_41B913  +
mov dword ptr [esp+4] 317h +
mov dword ptr [esp] offset a____Binutil_19 +
call sub_40C6C0  +
jmp loc_41B913  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
test edx edx +
mov [esp+10h] eax +
mov eax [eax+0A0h] +
mov [esp+1Ch] eax +
jz loc_41BB28  +
mov eax [esp+10h] +
mov ebx [eax+7Ch] +
test ebx ebx +
jnz loc_41BC74  +
mov esi [esp+10h] +
mov ebx [esi] +
mov [esp] ebx +
call strlen  +
mov edx 28h +
mov [esp] ebx +
cmp eax 28h +
cmovbe edx eax +
xor ecx ecx +
add edx ebx +
mov eax esi +
mov [esp+4] edx +
xor edx edx +
call sub_41B390  +
test eax eax +
jz loc_41BC0A  +
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+0Ch] eax +
jz loc_41BC26  +
nop   +
mov eax [esp+0Ch] +
mov edi [eax+4] +
mov eax dword_476700 +
test eax eax +
jnz loc_41BC55  +
mov dword_476700 1 +
mov eax [esp+0Ch] +
mov ebx [eax+0Ch] +
test ebx ebx +
jz loc_41BC14  +
xor ebp ebp +
mov eax ebp +
mov ebp edi +
mov edi eax +
jmp loc_41BBB2  +
mov eax [esp+0Ch] +
add edi ebx +
mov ebx [eax+0Ch] +
cmp ebx edi +
jbe loc_41BC14  +
mov ebp esi +
mov eax dword_476700 +
sub ebx edi +
cmp ebx eax +
cmova ebx eax +
mov eax [esp+0Ch] +
lea esi [ebp+ebx+0] +
mov edx [eax+8] +
mov eax [esp+10h] +
mov [esp+14h] edx +
mov [esp] eax +
call sub_40EDD0  +
mov edx [esp+1Ch] +
mov edx [edx+8] +
mov [esp+4] esi +
mov ecx eax +
mov eax edi +
mov [esp] ebp +
mov [esp+18h] edx +
xor edx edx +
div  ecx +
mov ecx [esp+14h] +
mov edx [esp+18h] +
add ecx eax +
mov eax [esp+10h] +
call sub_41B390  +
test eax eax +
jnz loc_41BBA3  +
add esp 5Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0Ch] +
mov eax [eax] +
test eax eax +
mov [esp+0Ch] eax +
jnz loc_41BB70  +
mov eax [esp+10h] +
mov edx 0Ah +
mov esi [esp+1Ch] +
mov ecx [eax+74h] +
sub edx [esi+8] +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_41B390  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+1Ch] +
mov edx 0FDh +
sub edx [esi+8] +
cmp eax edx +
jbe loc_41BB8E  +
mov dword_476700 edx +
jmp loc_41BB8E  +
***
mov esi [eax+78h] +
mov edi eax +
mov eax [eax] +
mov [esp+0Ch] esi +
mov [esp] eax +
call strlen  +
mov [esp+8] edi +
mov dword ptr [esp+4] 3 +
mov dword ptr [esp] offset asc_48CD63 +
mov esi eax +
call sub_405F60  +
cmp eax 3 +
jnz loc_41BC0A  +
mov edi [esp+10h] +
mov eax [edi] +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] eax +
call sub_405F60  +
cmp esi eax +
jnz loc_41BC0A  +
mov eax [esp+10h] +
mov dword ptr [esp+4] 2 +
mov dword ptr [esp] offset asc_48CD67 +
mov [esp+8] eax +
call sub_405F60  +
cmp eax 2 +
jnz loc_41BC0A  +
xor edi edi +
test ebx ebx +
lea ebp [esp+27h] +
jle loc_41BE12  +
mov [esp+14h] ebx +
jmp loc_41BD0E  +
add edi 1 +
cmp [esp+14h] edi +
jz loc_41BE12  +
mov eax [esp+0Ch] +
mov ebx [eax+edi*4] +
mov eax [esp+10h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_4115B0  +
test eax eax +
jnz loc_41BD01  +
test byte ptr [ebx+0Ch] 4 +
jnz loc_41BD01  +
mov eax [ebx+4] +
mov [esp] eax +
call strlen  +
mov dword ptr [esp+4] 2 +
mov dword ptr [esp] offset asc_48CD70 +
mov esi eax +
mov eax [esp+10h] +
mov [esp+8] eax +
call sub_405F60  +
cmp eax 2 +
jnz loc_41BC0A  +
mov eax [ebx+4] +
mov ecx [esp+10h] +
mov [esp+4] esi +
mov [esp] eax +
mov [esp+8] ecx +
call sub_405F60  +
cmp esi eax +
jnz loc_41BC0A  +
mov ecx [ebx+10h] +
mov eax [ecx+3Ch] +
mov eax [eax+20h] +
add eax [ebx+8] +
add eax [ecx+38h] +
mov dword ptr [esp+4] offset a08lx_0 +
mov [esp] ebp +
mov [esp+8] eax +
call sprintf  +
cmp byte ptr [esp+27h] 30h +
jnz loc_41BE0E  +
movzx eax byte ptr [esp+28h] +
mov esi ebp +
test al al +
jnz loc_41BDBF  +
jmp loc_41BDC6  +
movzx eax byte ptr [esi+1] +
test al al +
jz loc_41BDC6  +
add esi 1 +
cmp al 30h +
jz loc_41BDB7  +
mov [esp] esi +
sub esi 2 +
call strlen  +
mov byte ptr [esi+eax+2] 0Dh +
lea edx [eax+4] +
mov byte ptr [esi+eax+3] 0Ah +
mov eax [esp+10h] +
mov byte ptr [esi+1] 24h +
mov byte ptr [esi] 20h +
mov [esp+4] edx +
mov [esp+8] eax +
mov [esp] esi +
mov [esp+18h] edx +
call sub_405F60  +
mov edx [esp+18h] +
cmp edx eax +
jz loc_41BD01  +
jmp loc_41BC0A  +
***
mov esi ebp +
jmp loc_41BDC6  +
***
mov eax [esp+10h] +
mov dword ptr [esp+4] 5 +
mov dword ptr [esp] offset asc_48CD6A +
mov [esp+8] eax +
call sub_405F60  +
cmp eax 5 +
jnz loc_41BC0A  +
jmp loc_41BB28  +
***
mov eax [esp+4] +
xor edx edx +
jmp loc_41BB00  +
***
mov eax [esp+4] +
mov edx 1 +
jmp loc_41BB00  +
***
sub esp 54h +
cmp ecx 0FFFFFFFFh +
jz loc_41BEB1  +
mov ebx eax +
movzx eax cl +
test ds:byte_495EE0[eax+eax] 10h +
jz loc_41BEC7  +
mov byte ptr [esp+54h+var_2C] cl +
lea esi [esp+54h+var_2C] +
mov byte ptr [esp+54h+var_2C+1] 0 +
mov [esp+54h+var_48] esi +
mov [esp+54h+var_4C] edx +
mov [esp+54h+var_50] ebx +
mov [esp+54h+var_54] offset aBDUnexpectedCh +
call off_476094  +
mov [esp+54h+var_54] 11h +
call sub_40C770  +
add esp 54h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+54h+arg_0] +
test eax eax +
jnz loc_41BEAB  +
mov [esp+54h+var_54] 12h +
call sub_40C770  +
jmp loc_41BEAB  +
lea esi [esp+54h+var_2C] +
mov [esp+54h+var_4C] eax +
mov [esp+54h+var_50] offset a03o +
mov [esp+54h+var_54] esi +
mov [esp+54h+var_38] edx +
call sprintf  +
mov edx [esp+54h+var_38] +
jmp loc_41BE86  +
***
push edi  +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_41B690  +
cmp eax 0FFFFFFFFh +
jz loc_41C5DE  +
cmp eax 0Dh +
jz loc_41BF6B  +
cmp eax 53h +
jnz loc_41C090  +
cmp eax 20h +
nop   +
jz loc_41C0B0  +
jle loc_41C195  +
cmp eax 24h +
nop   +
jz loc_41C17B  +
cmp eax 53h +
jnz loc_41C1A3  +
mov [esp+0] ebp +
call sub_405FE0  +
mov [esp+arg_4] ebp +
mov [esp+arg_0] 3 +
mov [esp+arg_2C] eax +
lea eax [esp+arg_41] +
mov [esp+0] eax +
mov [esp+arg_30] edx +
call sub_405EB0  +
cmp eax 3 +
jnz loc_41C224  +
movzx ecx byte ptr [esp+46h] +
movzx eax ds:byte_4974E0[ecx] +
cmp al 63h +
jz loc_41C6D1  +
movzx ecx [esp+arg_43] +
movzx edx ds:byte_4974E0[ecx] +
cmp dl 63h +
jz loc_41C6D1  +
shl eax 4 +
lea esi [eax+edx] +
movzx eax [esp+arg_41] +
mov ebx esi +
cmp al 38h +
jz loc_41C242  +
cmp al 32h +
jz loc_41C242  +
and eax 0FFFFFFFBh +
cmp al 33h +
setz al  +
movzx eax al +
lea eax [eax+eax+3] +
cmp eax esi +
ja loc_41C6E8  +
lea edi [esi+esi] +
cmp [esp+arg_34] edi +
jnb loc_41C04E  +
mov eax [esp+arg_20] +
test eax eax +
jz loc_41C036  +
mov [esp+0] eax +
call free  +
mov [esp+0] edi +
call sub_40EFC0  +
test eax eax +
mov [esp+arg_20] eax +
jz loc_41C168  +
mov [esp+arg_34] edi +
mov eax [esp+arg_20] +
mov [esp+arg_4] ebp +
mov [esp+arg_0] edi +
mov [esp+0] eax +
call sub_405EB0  +
cmp edi eax +
jnz loc_41C224  +
lea eax [esi-1] +
mov [esp+arg_18] eax +
movzx eax [esp+arg_41] +
sub eax 30h +
cmp al 9 +
ja sub_41BF49  +
movzx eax al +
jmp ds:off_48CE04[eax*4]  +
***
cmp eax 0Ah +
jz loc_41C18B  +
cmp eax 20h +
mov [esp+arg_28] 0 +
jnz loc_41BF76  +
lea esi [esi+0] +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_41B690  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_41C20D  +
cmp eax 9 +
jz loc_41C0B0  +
cmp eax 20h +
jz loc_41C0B0  +
cmp eax 0Ah +
jz loc_41C6BD  +
cmp eax 0Dh +
jz loc_41C6BD  +
mov dword ptr [esp+0] 0Bh +
call sub_40EFC0  +
test eax eax +
mov esi eax +
jz loc_41C224  +
mov [eax] bl +
lea edi [eax+1] +
mov ebx 0Ah +
jmp loc_41C109  +
mov [edi] dl +
add edi 1 +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_41B690  +
cmp eax 0FFFFFFFFh +
mov edx eax +
jz loc_41C716  +
movzx eax al +
test ds:byte_495EE0[eax+eax] 40h +
jnz loc_41C1C0  +
mov ecx edi +
sub ecx esi +
cmp ebx ecx +
ja loc_41C104  +
add ebx ebx +
lea eax [ebx+1] +
mov [esp+arg_0] eax +
mov [esp+0] esi +
mov [esp+arg_1C] ecx +
mov [esp+arg_18] edx +
call sub_40F050  +
test eax eax +
jz loc_41C72D  +
mov ecx [esp+arg_1C] +
mov esi eax +
mov edx [esp+arg_18] +
lea edi [eax+ecx] +
jmp loc_41C104  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 0FFFFFFFFh +
jz loc_41C20D  +
lea edx [esp-7Ch+arg_C0] +
mov eax ebp +
call sub_41B690  +
cmp eax 0Ah +
jnz loc_41C172  +
add [esp-7Ch+arg_A0] 1 +
jmp sub_41BF49  +
cmp eax 0Ah +
jz loc_41C18B  +
cmp eax 0Dh +
jz sub_41BF49  +
mov edx [esp+arg_44] +
mov ecx eax +
mov eax ebp +
mov [esp+0] edx +
mov edx [esp+arg_24] +
call sub_41BE60  +
jmp loc_41C224  +
***
mov eax [esp+arg_20] +
mov eax [esp+arg_20] +
mov eax [esp+arg_20] +
mov eax [esp+arg_20] +
mov [esp+arg_28] 0 +
mov edi ebx +
mov edi [esp+arg_20] +
movzx eax byte ptr [edi] +
movzx edx ds:byte_4974E0[eax] +
movzx eax byte ptr [edi+1] +
movzx ecx ds:byte_4974E0[eax] +
mov eax edx +
shl eax 4 +
shl edx 4 +
lea ebx [ecx+esi] +
add ecx edx +
add ebx eax +
mov eax edi +
lea edi [esi-2] +
add eax 2 +
mov [esp+arg_18] edi +
shl ecx 8 +
jmp loc_41C34B  +
***
mov eax [esp+arg_20] +
test eax eax +
jz loc_41C5D4  +
mov [esp+0] eax +
call free  +
mov eax 1 +
jmp loc_41C16A  +
mov eax [esp+arg_44] +
test eax eax +
jnz loc_41C224  +
mov ebx [esp+arg_20] +
mov eax 1 +
test ebx ebx +
jz loc_41C16A  +
mov [esp+0] ebx +
mov [esp+arg_18] eax +
call free  +
mov eax [esp+arg_18] +
jmp loc_41C16A  +
***
add eax edi +
mov [ecx+24h] eax +
jmp loc_41C4C4  +
***
cmp eax 20h +
jz loc_41C1FD  +
cmp eax 24h +
mov ebx eax +
jz loc_41C73A  +
xor esi esi +
mov eax ebx +
jmp loc_41C659  +
***
shl esi 4 +
mov eax ebp +
add esi edx +
lea edx [esp+arg_44] +
call sub_41B690  +
cmp eax 0FFFFFFFFh +
jz loc_41C20D  +
movzx edx al +
movzx edx ds:byte_4974E0[edx] +
cmp dl 63h +
jnz loc_41C640  +
mov [esp+arg_0] 0Ch +
mov ebx eax +
mov [esp+0] ebp +
call sub_407B20  +
test eax eax +
jz loc_41C224  +
mov [eax+4] edi +
mov [eax+8] esi +
mov edx [ebp+0A0h] +
mov ecx [edx+0Ch] +
test ecx ecx +
jz loc_41C755  +
mov ecx [edx+10h] +
mov [ecx] eax +
mov [edx+10h] eax +
mov dword ptr [eax] 0 +
add dword ptr [ebp+7Ch] 1 +
cmp ebx 9 +
jz loc_41C0B0  +
cmp ebx 20h +
jz loc_41C0B0  +
cmp ebx 0Ah +
jz loc_41C18B  +
cmp ebx 0Dh +
jz sub_41BF49  +
mov ecx ebx +
mov eax [esp+arg_44] +
mov edx [esp+arg_24] +
mov [esp+0] eax +
mov eax ebp +
call sub_41BE60  +
jmp loc_41C224  +
mov eax [esp+arg_24] +
mov [esp+arg_8] esi +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBDByteCountDTo +
mov [esp+arg_4] eax +
call off_476094  +
mov dword ptr [esp+0] 11h +
call sub_40C770  +
jmp loc_41C224  +
mov eax [esp+arg_44] +
mov ecx 0FFFFFFFFh +
mov edx [esp+arg_24] +
mov [esp+0] eax +
mov eax ebp +
call sub_41BE60  +
mov [esp+0] esi +
call free  +
jmp loc_41C224  +
lea edx [esp+arg_44] +
mov eax ebp +
call sub_41B690  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jnz loc_41C634  +
jmp loc_41C20D  +
mov [edx+0Ch] eax +
jmp loc_41C69E  +
***
push esi  +
push ebx  +
sub esp 24h +
mov edx ds:dword_49F338 +
mov ebx [esp+30h] +
test edx edx +
jz loc_41C835  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_4060C0  +
test eax eax +
jnz loc_41C82D  +
lea eax [esp+1Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_405EB0  +
cmp eax 4 +
jnz loc_41C82D  +
cmp byte ptr [esp+1Ch] 53h +
jnz loc_41C821  +
movzx eax byte ptr [esp+1Dh] +
cmp ds:byte_4974E0[eax] 63h +
jz loc_41C821  +
movzx eax byte ptr [esp+1Eh] +
cmp ds:byte_4974E0[eax] 63h +
jz loc_41C821  +
movzx eax byte ptr [esp+1Fh] +
cmp ds:byte_4974E0[eax] 63h +
jz loc_41C821  +
mov esi [ebx+0A0h] +
mov [esp] ebx +
call sub_41B5A0  +
test eax eax +
jz loc_41C850  +
mov eax ebx +
call sub_41BEF0  +
test eax eax +
jz loc_41C850  +
mov eax [ebx+7Ch] +
test eax eax +
jz loc_41C818  +
or dword ptr [ebx+28h] 200h +
mov eax [ebx+4] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_40C770  +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov ds:dword_49F338 1 +
call nullsub_2  +
jmp loc_41C777  +
***
mov eax [ebx+0A0h] +
cmp eax esi +
jz loc_41C86A  +
test eax eax +
jz loc_41C86A  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_407D70  +
mov [ebx+0A0h] esi +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 24h +
mov edx ds:dword_49F338 +
mov ebx [esp+30h] +
test edx edx +
jz loc_41C934  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_4060C0  +
test eax eax +
jnz loc_41C92C  +
lea eax [esp+1Eh] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 2 +
mov [esp] eax +
call sub_405EB0  +
cmp eax 2 +
jnz loc_41C92C  +
cmp byte ptr [esp+1Eh] 24h +
jnz loc_41C920  +
cmp byte ptr [esp+1Fh] 24h +
jnz loc_41C920  +
mov esi [ebx+0A0h] +
mov [esp] ebx +
call sub_41B5A0  +
test eax eax +
jz loc_41C948  +
mov eax ebx +
call sub_41BEF0  +
test eax eax +
jz loc_41C948  +
mov eax [ebx+7Ch] +
test eax eax +
jz loc_41C911  +
or dword ptr [ebx+28h] 200h +
mov eax [ebx+4] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_40C770  +
xor eax eax +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
mov ds:dword_49F338 1 +
call nullsub_2  +
jmp loc_41C897  +
***
mov eax [ebx+0A0h] +
cmp esi eax +
jz loc_41C962  +
test eax eax +
jz loc_41C962  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_407D70  +
mov [ebx+0A0h] esi +
xor eax eax +
jmp loc_41C92E  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov ebp [esp+3Ch] +
mov edi [ebx+0A0h] +
mov dword ptr [esp+4] 10h +
mov [esp] ebx +
call sub_407B20  +
test eax eax +
mov esi eax +
jz loc_41CA43  +
mov edx [esp+44h] +
test edx edx +
jz loc_41C9B6  +
mov eax [esp+34h] +
mov eax [eax+14h] +
and eax 3 +
cmp eax 3 +
jz loc_41C9C3  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+44h] +
mov [esp] ebx +
mov [esp+4] eax +
call sub_407B20  +
test eax eax +
mov ebx eax +
jz loc_41CA43  +
mov eax [esp+44h] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+38h] +
mov [esp+4] eax +
call memcpy  +
mov eax [esp+34h] +
mov [esi+4] ebx +
add ebp [eax+20h] +
mov eax [esp+44h] +
mov [esi+8] ebp +
mov [esi+0Ch] eax +
mov eax [edi+4] +
test eax eax +
jz loc_41CA11  +
cmp ebp [eax+8] +
jnb loc_41CA50  +
mov edx [edi] +
mov eax edi +
test edx edx +
jnz loc_41CA28  +
jmp loc_41CA2D  +
mov eax edx +
mov edx [edx] +
test edx edx +
jz loc_41CA2D  +
cmp ebp [edx+8] +
ja loc_41CA20  +
mov [esi] edx +
mov [eax] esi +
mov eax [esi] +
test eax eax +
jnz loc_41C9B6  +
mov [edi+4] esi +
jmp loc_41C9B6  +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [eax] esi +
mov eax 1 +
mov dword ptr [esi] 0 +
mov [edi+4] esi +
jmp loc_41C9BB  +
***
mov eax [esp+8] +
mov edx [esp+4] +
test eax eax +
jnz loc_41CA90  +
mov dword ptr [edx+84h] offset asc_47A8A0 +
mov eax 1 +
retn   +
***
jmp sub_40ED50  +
***
push ebx  +
sub esp 18h +
mov eax ds:dword_49F33C +
mov ebx [esp+20h] +
test eax eax +
jz loc_41CAE2  +
mov dword ptr [esp+4] 8 +
mov [esp] ebx +
call sub_407B20  +
test eax eax +
jz loc_41CAF3  +
mov [ebx+0A0h] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
mov ds:dword_49F33C 1 +
call nullsub_2  +
jmp loc_41CAB1  +
***
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+80h] +
mov eax [eax+0A0h] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_41CCBA  +
lea edi [esp+2Eh] +
mov ebx [esp+1Ch] +
mov eax [ebx+8] +
mov esi [ebx+4] +
mov dword ptr [esp+4] 0Bh +
mov [esp] edi +
mov edx eax +
shr edx 18h +
mov ebp esi +
and edx 0Fh +
movzx edx ds:byte_48D3B4[edx] +
mov byte ptr [esp+2Eh] 40h +
mov byte ptr [esp+37h] 0Dh +
mov byte ptr [esp+38h] 0Ah +
mov [esp+30h] dl +
mov edx eax +
shr edx 1Ch +
movzx edx ds:byte_48D3B4[edx] +
mov [esp+2Fh] dl +
mov edx eax +
shr edx 10h +
and edx 0Fh +
movzx edx ds:byte_48D3B4[edx] +
mov [esp+32h] dl +
mov edx eax +
shr edx 14h +
and edx 0Fh +
movzx edx ds:byte_48D3B4[edx] +
mov [esp+31h] dl +
mov edx eax +
shr edx 8 +
and edx 0Fh +
movzx edx ds:byte_48D3B4[edx] +
mov [esp+34h] dl +
mov edx eax +
shr edx 0Ch +
and edx 0Fh +
movzx edx ds:byte_48D3B4[edx] +
mov [esp+33h] dl +
mov edx eax +
shr eax 4 +
and edx 0Fh +
and eax 0Fh +
movzx edx ds:byte_48D3B4[edx] +
movzx eax ds:byte_48D3B4[eax] +
mov [esp+36h] dl +
mov [esp+35h] al +
mov eax [esp+80h] +
mov [esp+8] eax +
call sub_405F60  +
mov esi [ebx+0Ch] +
test esi esi +
jz loc_41CCA8  +
mov dword ptr [esp+14h] 0 +
mov eax esi +
sub eax [esp+14h] +
mov edx 10h +
mov esi ebp +
cmp eax 10h +
cmova eax edx +
lea ebp [ebp+eax+0] +
cmp ebp esi +
mov [esp+18h] eax +
jbe loc_41CCC7  +
mov edx esi +
mov eax edi +
movzx ebx byte ptr [edx] +
add edx 1 +
add eax 3 +
mov ecx ebx +
and ecx 0Fh +
movzx ecx ds:byte_48D3B4[ecx] +
shr bl 4 +
movzx ebx bl +
mov [eax-2] cl +
movzx ecx ds:byte_48D3B4[ebx] +
mov [eax-3] cl +
cmp edx ebp +
mov byte ptr [eax-1] 20h +
jnz loc_41CC26  +
add esi 1 +
mov eax 1 +
sub eax esi +
add eax ebp +
lea ebx [eax+eax*2] +
add ebx edi +
mov eax [esp+80h] +
add ebx 2 +
mov byte ptr [ebx-2] 0Dh +
mov byte ptr [ebx-1] 0Ah +
sub ebx edi +
mov [esp+4] ebx +
mov [esp+8] eax +
mov [esp] edi +
call sub_405F60  +
cmp ebx eax +
jnz loc_41CCCB  +
mov eax [esp+18h] +
add [esp+14h] eax +
mov eax [esp+1Ch] +
mov eax [eax+0Ch] +
cmp eax [esp+14h] +
ja loc_41CC01  +
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jnz loc_41CB26  +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx edi +
jmp loc_41CC67  +
***
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 4 +
mov eax [eax] +
mov [esp+0Ch+var_C] edx +
movzx edx byte ptr [eax] +
movzx ebx ds:byte_4974E0[edx] +
cmp bl 63h +
jz loc_41CD62  +
test ebx ebx +
mov esi 0Fh +
lea edx [eax+1] +
lea ebp [ebx-1] +
cmovnz esi ebp +
cmp edx ecx +
jnb loc_41CD74  +
movzx eax byte ptr [eax+1] +
movzx eax ds:byte_4974E0[eax] +
cmp al 63h +
jz loc_41CD62  +
sub esi 1 +
xor ebx ebx +
jmp loc_41CD3C  +
cmp edx ecx +
jz loc_41CD70  +
movzx eax byte ptr [edx] +
sub esi 1 +
movzx eax ds:byte_4974E0[eax] +
cmp al 63h +
jz loc_41CD62  +
shl ebx 4 +
add edx 1 +
mov ebp ebx +
movzx ebx al +
or ebx ebp +
cmp esi 0FFFFFFFFh +
jnz loc_41CD27  +
mov eax 1 +
mov [edi] edx +
mov edi [esp+0Ch+var_C] +
mov [edi] ebx +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_41CD53  +
xor eax eax +
xor ebx ebx +
jmp loc_41CD53  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi [edx] +
movzx ebx byte ptr [edi] +
movzx ebx ds:byte_4974E0[ebx] +
cmp bl 63h +
jz loc_41CDE0  +
movzx esi bl +
mov ebx 10h +
test esi esi +
lea ebp [edi+1] +
cmovz esi ebx +
cmp ebp [esp+4+arg_0] +
jnb loc_41CDEA  +
xor bl bl +
mov [esp+4+var_4] edx +
movzx edx byte ptr [edi+ebx+1] +
mov [eax+ebx] dl +
add ebx 1 +
cmp esi ebx +
ja loc_41CDB3  +
mov edx [esp+4+var_4] +
mov byte ptr [eax+ebx] 0 +
add ebp ebx +
xor eax eax +
cmp ebx esi +
mov [edx] ebp +
setz al  +
mov [ecx] esi +
add esp 4 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ebx ebx +
jmp loc_41CDC5  +
***
mov [ecx-4] edx +
mov edx [edx+18h] +
sub ecx 4 +
test edx edx +
jnz loc_41CE15  +
retn   +
***
mov eax [esp+4] +
mov eax [eax+7Ch] +
lea eax ds:4[eax*4] +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx 8 +
sub esp 0Ch +
mov esi [eax] +
mov [esp+18h+var_18] edx +
mov edi edx +
shr edi cl +
and edi 0Fh +
jnz loc_41CE80  +
sub ebx 1 +
sub ecx 4 +
cmp ebx 1 +
jnz loc_41CE56  +
mov byte ptr [esi] 31h +
add esi 2 +
mov byte ptr [esi-1] 30h +
mov [eax] esi +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+18h+var_18] edx +
lea edi [ebx+30h] +
lea edx [esi+1] +
mov ebp edx +
mov [esp+18h+var_14] edx +
mov edx edi +
mov [esi] dl +
mov edx [esp+18h+var_18] +
lea edi [esi+ebx+1] +
mov [esp+18h+var_10] eax +
mov esi ebp +
mov ebp edx +
add esi 1 +
shr ebp cl +
sub ecx 4 +
and ebp 0Fh +
cmp esi edi +
movzx eax ss:byte_48D6D4[ebp] +
mov [esi-1] al +
jnz loc_41CEA0  +
mov eax [esp+18h+var_10] +
add ebx [esp+18h+var_14] +
mov [eax] ebx +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor eax eax +
retn   +
***
push ebx  +
and edx 0FFFFE000h +
sub esp 14h +
mov eax [eax+0A0h] +
mov ebx [eax+0Ch] +
test ebx ebx +
jnz loc_41CF0A  +
jmp loc_41CF20  +
mov ebx [ebx+2104h] +
test ebx ebx +
jz loc_41CF20  +
cmp [ebx+2100h] edx +
jnz loc_41CF00  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
xor ebx ebx +
test ecx ecx +
mov [esp+18h+var_C] edx +
jz loc_41CF12  +
mov [esp+18h+var_14] 2108h +
mov [esp+18h+var_18] esi +
call sub_407C00  +
test eax eax +
jz loc_41CF12  +
mov ecx [esi+0A0h] +
mov ebx eax +
mov edx [esp+18h+var_C] +
mov ecx [ecx+0Ch] +
mov [eax+2100h] edx +
mov [eax+2104h] ecx +
mov edx [esi+0A0h] +
mov [edx+0Ch] eax +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 1Ch +
mov [esp] ebx +
call sub_407C00  +
test eax eax +
jz loc_41CF95  +
mov [eax] ebx +
mov dword ptr [eax+18h] 0 +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+28h] +
mov ebx [esp+24h] +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_40ED50  +
mov edx 1 +
test eax eax +
jnz loc_41CFD0  +
xor edx edx +
test ebx ebx +
setz dl  +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_411970  +
***
push edi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 10h +
test edx edx +
mov edi [eax] +
jz loc_41D1A5  +
mov [esp+14h+var_14] edx +
call strlen  +
cmp eax 0Fh +
jle loc_41D190  +
lea edx [edi+1] +
mov eax 0Fh +
mov byte ptr [edi] 30h +
lea edi [eax+1] +
xor ecx ecx +
lea esi [esi+0] +
movzx eax byte ptr [ebx+ecx] +
mov [edx+ecx] al +
add ecx 1 +
cmp ecx edi +
jnz loc_41D170  +
add ecx edx +
mov [esi] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test eax eax +
jz loc_41D1A5  +
movzx ecx ds:byte_48D6D4[eax] +
lea edx [edi+1] +
sub eax 1 +
mov [edi] cl +
jmp loc_41D168  +
lea edx [edi+1] +
xor eax eax +
mov byte ptr [edi] 31h +
mov ebx offset asc_48D3FC +
jmp loc_41D168  +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] 10h +
mov [esp+18h+var_18] ebx +
call sub_407B20  +
test eax eax +
jz loc_41D207  +
mov [ebx+0A0h] eax +
mov dword ptr [eax+4] 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+0Ch] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_4] +
mov ebp [esp+4Ch+arg_0] +
mov ebx [esp+4Ch+arg_C] +
cmp eax 33h +
jz loc_41D2E0  +
cmp eax 36h +
jnz loc_41D2D1  +
lea edx [esp+4Ch+var_20] +
mov ecx ebx +
lea eax [esp+4Ch+arg_8] +
call sub_41CCE0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_41D2D6  +
mov eax [esp+4Ch+arg_8] +
movzx edx byte ptr [eax] +
mov ecx eax +
test dl dl +
jz loc_41D2D1  +
lea edi [ebx-1] +
cmp eax edi +
jnb loc_41D2D1  +
mov esi [esp+4Ch+var_20] +
jmp loc_41D276  +
cmp eax edi +
jnb loc_41D2D1  +
mov ecx eax +
movzx ecx byte ptr [ecx+1] +
movzx edx ds:byte_4974E0[edx] +
movzx ebx ds:byte_4974E0[ecx] +
shl edx 4 +
add ebx edx +
jz loc_41D2B9  +
mov edx esi +
mov ecx 1 +
mov eax ebp +
and esi 1FFFh +
call sub_41CEE0  +
mov [eax+esi] bl +
shr esi 5 +
mov byte ptr [eax+esi+2000h] 1 +
mov eax [esp+4Ch+arg_8] +
mov esi [esp+4Ch+var_20] +
mov edx eax +
add esi 1 +
add eax 2 +
mov [esp+4Ch+arg_8] eax +
mov [esp+4Ch+var_20] esi +
movzx edx byte ptr [edx+2] +
test dl dl +
jnz loc_41D270  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_4C] ebx +
lea ecx [esp+4Ch+var_28] +
lea edx [esp+4Ch+arg_8] +
lea eax [esp+4Ch+var_20] +
call sub_41CD80  +
test eax eax +
jnz loc_41D302  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] ebp +
call sub_410840  +
test eax eax +
mov esi eax +
jz loc_41D542  +
lea eax [esi+1Ch] +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_38] eax +
mov edx [esp+4Ch+arg_8] +
cmp ebx edx +
jbe loc_41D2D1  +
movzx ecx byte ptr [edx] +
test cl cl +
jz loc_41D2D1  +
sub ecx 30h +
cmp cl 8 +
ja loc_41D2F8  +
mov eax 1 +
shl eax cl +
test eax 1DDh +
jnz loc_41D3C0  +
test al 2 +
jz loc_41D2F8  +
add edx 1 +
mov ecx ebx +
mov [esp+4Ch+arg_8] edx +
mov edx [esp+4Ch+var_38] +
lea eax [esp+4Ch+arg_8] +
call sub_41CCE0  +
test eax eax +
jz loc_41D2F8  +
mov ecx ebx +
lea edx [esp+4Ch+var_24] +
lea eax [esp+4Ch+arg_8] +
call sub_41CCE0  +
test eax eax +
jz loc_41D2F8  +
mov eax [esi+1Ch] +
mov edx [esp+4Ch+var_24] +
cmp eax edx +
jbe loc_41D3B0  +
mov [esp+4Ch+var_24] eax +
mov dword ptr [esi+24h] 0 +
mov edx [esp+4Ch+arg_8] +
mov dword ptr [esi+14h] 103h +
cmp ebx edx +
ja loc_41D333  +
jmp loc_41D2D1  +
sub edx eax +
test edx edx +
mov [esi+24h] edx +
jns loc_41D39B  +
xor eax eax +
jmp loc_41D2FA  +
mov [esp+4Ch+var_48] 1Ch +
mov [esp+4Ch+var_4C] ebp +
call sub_407B20  +
mov edi eax +
mov eax [esp+4Ch+arg_8] +
test edi edi +
movzx ecx byte ptr [eax] +
mov [esp+4Ch+var_31] cl +
jz loc_41D2F8  +
add eax 1 +
mov [edi] ebp +
mov [esp+4Ch+arg_8] eax +
mov eax [ebp+0A0h] +
or dword ptr [ebp+28h] 200h +
add dword ptr [ebp+7Ch] 1 +
mov edx [eax+8] +
mov [edi+18h] edx +
lea edx [esp+4Ch+var_28] +
mov [eax+8] edi +
mov ecx edx +
mov [esp+4Ch+var_4C] ebx +
lea edx [esp+4Ch+arg_8] +
lea eax [esp+4Ch+var_20] +
call sub_41CD80  +
test eax eax +
jz loc_41D2F8  +
mov edx [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] ebp +
lea eax [edx+1] +
mov [esp+4Ch+var_48] eax +
call sub_407B20  +
test eax eax +
mov [edi+4] eax +
jz loc_41D2F8  +
mov edx [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] eax +
add edx 1 +
mov [esp+4Ch+var_44] edx +
lea edx [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] edx +
call memcpy  +
movzx ecx [esp+4Ch+var_31] +
xor eax eax +
mov [edi+10h] esi +
cmp cl 34h +
setle al  +
add eax 1 +
mov [edi+0Ch] eax +
mov eax ecx +
and eax 0FFFFFFFBh +
cmp al 32h +
jnz loc_41D4B0  +
mov dword ptr [edi+10h] offset off_476230 +
mov ecx ebx +
lea edx [esp+4Ch+var_24] +
lea eax [esp+4Ch+arg_8] +
call sub_41CCE0  +
test eax eax +
jz loc_41D2F8  +
mov eax [esp+4Ch+var_24] +
sub eax [esi+1Ch] +
mov [edi+8] eax +
jmp loc_41D32B  +
cmp al 33h +
jnz loc_41D4D0  +
mov eax [esi+14h] +
test al 20h +
jz loc_41D4F0  +
mov edx [esp+4Ch+var_30] +
test edx edx +
jz loc_41D597  +
mov eax [esp+4Ch+var_30] +
mov [edi+10h] eax +
jmp loc_41D485  +
cmp [esp+4Ch+var_31] 38h +
jz loc_41D4DE  +
cmp [esp+4Ch+var_31] 34h +
jnz loc_41D485  +
mov eax [esi+14h] +
test al 10h +
jnz loc_41D4F8  +
or eax 20h +
mov [esi+14h] eax +
jmp loc_41D485  +
or eax 10h +
mov [esi+14h] eax +
jmp loc_41D485  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_41D4C7  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] 0 +
call sub_410880  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jnz loc_41D4C7  +
mov eax [esi+14h] +
mov edx [esi] +
and eax 0FFFFFFCFh +
or eax 20h +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] edx +
mov [esp+4Ch+var_4C] ebp +
call near ptr dword_410C20  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jnz loc_41D4C7  +
xor eax eax +
jmp loc_41D2FA  +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] ebp +
add eax 1 +
mov [esp+4Ch+var_48] eax +
call sub_407B20  +
test eax eax +
mov esi eax +
jz loc_41D2F8  +
mov eax [esp+4Ch+var_28] +
mov [esp+4Ch+var_4C] esi +
add eax 1 +
mov [esp+4Ch+var_44] eax +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_48] eax +
call memcpy  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] ebp +
call sub_410DD0  +
test eax eax +
mov esi eax +
jnz loc_41D31C  +
xor eax eax +
jmp loc_41D2FA  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] 0 +
call sub_410880  +
test eax eax +
mov [esp+4Ch+var_30] eax +
jnz loc_41D4C7  +
mov eax [esi+14h] +
mov edx [esi] +
and eax 0FFFFFFCFh +
or eax 10h +
jmp loc_41D523  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_4] +
or eax [esp+2Ch+arg_0] +
jnz loc_41D6A8  +
mov eax [edx] +
mov ebx ecx +
mov edx 1 +
mov esi [esp+2Ch+arg_8] +
mov [esp+2Ch+var_18] eax +
xor eax eax +
sub [esp+2Ch+var_18] ecx +
test esi esi +
jnz loc_41D62A  +
jmp loc_41D694  +
test eax eax +
jz loc_41D6A0  +
movzx edx byte ptr [eax+ebp] +
mov [ebx] dl +
add ebx 1 +
sub [esp+2Ch+arg_8] 1 +
jz loc_41D694  +
mov edx esi +
mov ecx [esp+2Ch+var_18] +
xor edi edi +
lea ebp [ebx+ecx] +
mov ecx [esp+2Ch+arg_C] +
mov esi ebp +
and ebp 1FFFh +
and esi 0FFFFE000h +
test ecx ecx +
jnz loc_41D653  +
xor ecx ecx +
cmp byte ptr [ebx] 0 +
setnz cl  +
mov edi ecx +
cmp esi edx +
jnz loc_41D660  +
test edi edi +
jz loc_41D66D  +
test eax eax +
jnz loc_41D66D  +
nop   +
mov eax [esp+2Ch+var_14] +
mov ecx edi +
mov edx esi +
call sub_41CEE0  +
mov edx [esp+2Ch+arg_C] +
test edx edx +
jnz loc_41D610  +
test edi edi +
jz loc_41D61E  +
movzx edx byte ptr [ebx] +
add ebx 1 +
mov [eax+ebp] dl +
shr ebp 5 +
sub [esp+2Ch+arg_8] 1 +
mov byte ptr [eax+ebp+2000h] 1 +
jnz loc_41D628  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [ebx] 0 +
jmp loc_41D61E  +
mov [esp+2Ch+var_28] 27Ah +
mov [esp+2Ch+var_2C] offset a____Binutil_20 +
mov [esp+2Ch+var_10] ecx +
mov [esp+2Ch+var_18] edx +
call sub_40C6C0  +
mov ecx [esp+2Ch+var_10] +
mov edx [esp+2Ch+var_18] +
jmp loc_41D5E9  +
***
jmp loc_41D6E0  +
push ebx  +
xor eax eax +
sub esp 18h +
mov edx [esp+24h] +
mov ecx [esp+2Ch] +
mov ebx [esp+30h] +
test byte ptr [edx+14h] 3 +
jz loc_41D724  +
mov eax [esp+34h] +
add edx 1Ch +
mov [esp] ecx +
mov ecx [esp+28h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+20h] +
call sub_41D5D0  +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
xor eax eax +
sub esp 18h +
mov edx [esp+24h] +
mov ecx [esp+2Ch] +
mov ebx [esp+30h] +
test byte ptr [edx+14h] 3 +
jz loc_41D774  +
mov eax [esp+34h] +
add edx 1Ch +
mov [esp] ecx +
mov ecx [esp+28h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+20h] +
call sub_41D5D0  +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+2Ch] +
mov edx [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
test eax eax +
jz loc_41D7E0  +
cmp eax 2 +
jnz loc_41D7D6  +
mov eax [ebx+10h] +
mov edi [eax] +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edx +
call sub_411630  +
mov eax [ebx+4] +
mov [esp+28h] edi +
mov [esp+20h] esi +
mov dword ptr [esp+24h] offset a5sS_0 +
mov [esp+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp fprintf  +
***
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [ebx+4] +
mov [esp+24h] esi +
mov [esp+20h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp fputs  +
***
sub esp 0Ch +
mov ds:dword_49F340 1 +
call nullsub_2  +
xor eax eax +
mov ds:byte_49F390[eax] al +
add eax 1 +
cmp eax 0Ah +
jnz loc_41D814  +
mov ds:byte_49F397[eax] al +
add eax 1 +
cmp eax 24h +
jnz loc_41D822  +
mov ds:byte_49F384 24h +
mov al 28h +
mov ds:byte_49F385 25h +
mov ds:byte_49F38E 26h +
mov ds:byte_49F3BF 27h +
nop   +
mov ds:byte_49F399[eax] al +
add eax 1 +
cmp eax 42h +
jnz loc_41D850  +
add esp 0Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov eax ds:dword_49F340 +
test eax eax +
jz loc_41DB0F  +
mov eax [esp+0A0h] +
lea edi [esp+1Ch] +
mov eax [eax+0A0h] +
mov esi [eax+0Ch] +
test esi esi +
jz loc_41D952  +
xor ebp ebp +
jmp loc_41D8B6  +
add ebp 20h +
cmp ebp 2000h +
jz loc_41D944  +
mov eax ebp +
sar eax 5 +
cmp byte ptr [esi+eax+2000h] 0 +
jz loc_41D8A7  +
mov edx [esi+2100h] +
lea eax [esp+18h] +
mov [esp+18h] edi +
add edx ebp +
call sub_41CE40  +
mov edx [esp+18h] +
mov eax ebp +
lea ecx [esi+ebp+20h] +
add eax esi +
movzx ebx byte ptr [eax] +
add eax 1 +
and ebx 0Fh +
movzx ebx ds:byte_48D6D4[ebx] +
mov [edx+1] bl +
movzx edx byte ptr [eax-1] +
shr dl 4 +
cmp eax ecx +
movzx edx dl +
movzx ebx ds:byte_48D6D4[edx] +
mov edx [esp+18h] +
mov [edx] bl +
mov ebx [esp+18h] +
lea edx [ebx+2] +
mov [esp+18h] edx +
jnz loc_41D8E6  +
mov eax [esp+0A0h] +
mov ecx edi +
add ebp 20h +
mov [esp] edx +
mov edx 36h +
call sub_41D000  +
cmp ebp 2000h +
jnz loc_41D8B6  +
mov esi [esi+2104h] +
test esi esi +
jnz loc_41D8A3  +
mov eax [esp+0A0h] +
lea esi [esp+1Ch] +
mov ebx [eax+64h] +
test ebx ebx +
jz loc_41D9BD  +
mov [esp+18h] esi +
mov edx [ebx] +
lea eax [esp+18h] +
call sub_41D140  +
mov eax [esp+18h] +
lea edx [eax+1] +
mov [esp+18h] edx +
mov byte ptr [eax] 31h +
mov edx [ebx+1Ch] +
lea eax [esp+18h] +
call sub_41CE40  +
mov edx [ebx+24h] +
lea eax [esp+18h] +
add edx [ebx+1Ch] +
call sub_41CE40  +
mov eax [esp+18h] +
mov ecx esi +
mov edx 33h +
mov [esp] eax +
mov eax [esp+0A0h] +
call sub_41D000  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_41D964  +
mov eax [esp+0A0h] +
mov ebx [eax+78h] +
test ebx ebx +
jz loc_41DA62  +
mov eax [ebx] +
test eax eax +
jz loc_41DA62  +
lea edi [esp+1Ch] +
***
mov eax [esp+arg_14] +
mov edx [esi+4] +
mov eax [esp+arg_14] +
mov dword ptr [esp+0] 3 +
mov eax [esp+arg_14] +
mov eax [esp+arg_14] +
mov eax [esp+arg_14] +
mov eax [esp+arg_14] +
lea edx [eax+1] +
mov [esp+arg_14] edx +
mov byte ptr [eax] 36h +
jmp sub_41DA1D  +
***
call sub_41D800  +
jmp loc_41D887  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 11Ch +
mov [esp+120h+var_114] 0 +
mov [esp+120h+var_11C] 0 +
mov [esp+120h+var_118] 0 +
mov [esp+120h+var_120] eax +
call sub_4060C0  +
test eax eax +
jnz loc_41DC40  +
lea ebx [esp+120h+var_10F] +
jmp loc_41DB88  +
***
test edx edx +
jnz loc_41DC50  +
mov [esp-9Ch+arg_A0] esi +
mov [esp-9Ch+arg_9C] 1 +
mov [esp-9Ch+arg_98] ebx +
call sub_405EB0  +
xor edx edx +
cmp eax 1 +
setnz dl  +
cmp byte ptr [esp+11h] 25h +
mov eax edx +
jnz loc_41DB80  +
test eax eax +
jnz loc_41DC50  +
mov [esp-9Ch+arg_A0] esi +
mov [esp-9Ch+arg_9C] 5 +
mov [esp-9Ch+arg_98] ebx +
call sub_405EB0  +
cmp eax 5 +
jnz loc_41DC40  +
movzx eax byte ptr [esp+11h] +
movzx ebp byte ptr [esp+13h] +
movzx eax ds:byte_4974E0[eax] +
cmp al 63h +
jz loc_41DC50  +
movzx edx byte ptr [esp+12h] +
movzx edx ds:byte_4974E0[edx] +
cmp dl 63h +
jz loc_41DC50  +
shl eax 4 +
lea edi [edx+eax-5] +
cmp edi 0FEh +
ja loc_41DC40  +
mov [esp-9Ch+arg_A0] esi +
mov [esp-9Ch+arg_9C] edi +
mov [esp-9Ch+arg_98] ebx +
call sub_405EB0  +
cmp edi eax +
jnz loc_41DC40  +
mov eax ebp +
mov byte ptr [esp+edi+11h] 0 +
movsx ebp al +
add edi ebx +
mov [esp+0Ch] edi +
mov [esp-9Ch+arg_A0] ebx +
mov [esp-9Ch+arg_9C] ebp +
mov [esp-9Ch+arg_98] esi +
call sub_41D210  +
test eax eax +
jnz loc_41DB88  +
nop   +
add esp 11Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 11Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 28h +
mov eax ds:dword_49F340 +
mov ebx [esp+30h] +
test eax eax +
jz loc_41DD10  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_4060C0  +
test eax eax +
jnz loc_41DD02  +
lea eax [esp+1Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_405EB0  +
cmp eax 4 +
jnz loc_41DD02  +
cmp byte ptr [esp+1Ch] 25h +
jnz loc_41DD02  +
movzx eax byte ptr [esp+1Dh] +
cmp ds:byte_4974E0[eax] 63h +
jz loc_41DD02  +
movzx eax byte ptr [esp+1Eh] +
cmp ds:byte_4974E0[eax] 63h +
jz loc_41DD02  +
movzx eax byte ptr [esp+1Fh] +
cmp ds:byte_4974E0[eax] 63h +
jz loc_41DD02  +
mov [esp] ebx +
call sub_41D1C0  +
mov eax ebx +
call sub_41DB40  +
test eax eax +
jz loc_41DD02  +
mov eax [ebx+4] +
add esp 28h +
pop ebx  +
retn   +
***
add esp 28h +
xor eax eax +
pop ebx  +
retn   +
***
call sub_41D800  +
jmp loc_41DC75  +
***
xor eax eax +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_14] 8 +
mov [esp+18h+var_18] ebx +
call sub_407B20  +
test eax eax +
jz loc_41DD70  +
mov [ebx+0A0h] eax +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov eax [esp+28h] +
mov ebx [esp+24h] +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_40ED50  +
mov edx 1 +
test eax eax +
jnz loc_41DDB0  +
xor edx edx +
test ebx ebx +
setz dl  +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 5Ch +
mov [esp+5Ch+var_40] eax +
mov eax edx +
mov esi [esp+5Ch+arg_0] +
shr eax 4 +
mov ebp [esp+5Ch+arg_4] +
and eax 0Fh +
movzx eax ds:byte_48D974[eax] +
shr ebx 8 +
mov [esp+5Ch+var_39] 3Ah +
mov [esp+24h] al +
mov eax edx +
and eax 0Fh +
movzx eax ds:byte_48D974[eax] +
mov [esp+25h] al +
movzx eax bl +
shr eax 4 +
movzx eax ds:byte_48D974[eax] +
mov [esp+5Ch+var_36] al +
mov eax ebx +
and eax 0Fh +
movzx eax ds:byte_48D974[eax] +
mov [esp+5Ch+var_35] al +
movzx eax cl +
shr eax 4 +
movzx eax ds:byte_48D974[eax] +
mov [esp+5Ch+var_34] al +
mov eax ecx +
add ecx esi +
and eax 0Fh +
add ecx edx +
movzx eax ds:byte_48D974[eax] +
add ebx ecx +
mov [esp+5Ch+var_33] al +
mov eax esi +
shr eax 4 +
and eax 0Fh +
movzx eax ds:byte_48D974[eax] +
mov [esp+5Ch+var_32] al +
mov eax esi +
and eax 0Fh +
test edx edx +
movzx eax ds:byte_48D974[eax] +
mov [esp+5Ch+var_31] al +
jz loc_41DF09  +
xor eax eax +
lea esi [esp+5Ch+var_39] +
mov [esp+5Ch+var_44] edx +
lea esi [esi+0] +
movzx ecx byte ptr [ebp+eax+0] +
mov edx ecx +
add ebx ecx +
shr dl 4 +
movzx edi dl +
movzx edx ds:byte_48D974[edi] +
mov edi ecx +
and edi 0Fh +
mov [esi+eax*2+9] dl +
movzx edx ds:byte_48D974[edi] +
mov [esi+eax*2+0Ah] dl +
add eax 1 +
cmp eax [esp+5Ch+var_44] +
jnz loc_41DE80  +
mov edx [esp+5Ch+var_44] +
lea ecx [esp+edx*2+5Ch+var_30] +
neg ebx  +
movzx eax bl +
and ebx 0Fh +
shr eax 4 +
movzx eax ds:byte_48D974[eax] +
mov byte ptr [ecx+2] 0Dh +
mov byte ptr [ecx+3] 0Ah +
mov [ecx] al +
movzx eax ds:byte_48D974[ebx] +
lea ebx [edx+edx+0Dh] +
mov [ecx+1] al +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_54] eax +
call sub_405F60  +
cmp ebx eax +
setz al  +
add esp 5Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [esp+5Ch+var_30] +
lea esi [esp+5Ch+var_39] +
jmp loc_41DEBB  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+60h] +
mov eax [eax+0A0h] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_41E102  +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov eax [esp+1Ch] +
mov esi [eax+0Ch] +
mov ebp [eax+8] +
mov edi [eax+4] +
test esi esi +
jz loc_41E0F0  +
mov eax [esp+14h] +
mov edx [esp+18h] +
add eax edx +
mov [esp+10h] eax +
jmp loc_41E00E  +
mov edx [esp+14h] +
test edx edx +
jnz loc_41E096  +
mov eax ebp +
xor ecx ecx +
and eax 0F0000h +
mov edx 2 +
mov [esp+18h] eax +
shr eax 0Ch +
mov [esp+2Ah] al +
lea eax [esp+2Ah] +
mov [esp+4] eax +
mov eax [esp+60h] +
mov dword ptr [esp] 2 +
mov byte ptr [esp+2Bh] 0 +
call sub_41DDC0  +
test eax eax +
jz loc_41E0E1  +
mov eax [esp+14h] +
add eax [esp+18h] +
mov [esp+10h] eax +
mov ecx ebp +
sub ecx [esp+10h] +
lea eax [ecx+ebx] +
cmp eax 0FFFFh +
jbe loc_41DFE4  +
mov ebx 10000h +
sub ebx ecx +
mov eax [esp+60h] +
mov edx ebx +
mov [esp+4] edi +
mov dword ptr [esp] 0 +
call sub_41DDC0  +
test eax eax +
jz loc_41E0E1  +
add ebp ebx +
add edi ebx +
sub esi ebx +
jz loc_41E0F0  +
mov eax [esp+10h] +
cmp esi 10h +
mov ebx 10h +
cmovbe ebx esi +
add eax 0FFFFh +
cmp eax ebp +
jnb loc_41DFCD  +
cmp ebp 0FFFFFh +
jbe loc_41DF77  +
mov eax [esp+18h] +
test eax eax +
jnz loc_41E0B0  +
mov eax ebp +
xor ax ax +
mov [esp+14h] eax +
add eax 0FFFFh +
cmp eax ebp +
jb loc_41E185  +
mov edx [esp+14h] +
xor ecx ecx +
mov dword ptr [esp] 4 +
mov eax edx +
shr eax 18h +
mov [esp+2Ah] al +
mov eax edx +
mov edx 2 +
shr eax 10h +
mov [esp+2Bh] al +
lea eax [esp+2Ah] +
mov [esp+4] eax +
mov eax [esp+60h] +
call sub_41DDC0  +
test eax eax +
jz loc_41E0E1  +
mov dword ptr [esp+18h] 0 +
jmp loc_41DFC1  +
***
mov dword ptr [esp+4] 319h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_40C6C0  +
jmp loc_41DF83  +
***
lea eax [esp+2Ah] +
xor ecx ecx +
mov [esp+4] eax +
mov eax [esp+60h] +
mov edx 2 +
mov dword ptr [esp] 2 +
mov byte ptr [esp+2Ah] 0 +
mov byte ptr [esp+2Bh] 0 +
call sub_41DDC0  +
test eax eax +
jnz loc_41E03A  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jnz loc_41DF4F  +
mov eax [esp+60h] +
mov eax [eax+74h] +
test eax eax +
jz loc_41E15C  +
cmp eax 0FFFFFh +
mov edx eax +
ja loc_41E1C9  +
and edx 0F0000h +
shr edx 0Ch +
mov [esp+2Ch] dl +
mov edx eax +
shr edx 8 +
mov [esp+2Fh] al +
lea eax [esp+2Ch] +
mov byte ptr [esp+2Dh] 0 +
mov [esp+2Eh] dl +
mov [esp+4] eax +
mov dword ptr [esp] 3 +
mov eax [esp+60h] +
xor ecx ecx +
mov edx 4 +
call sub_41DDC0  +
test eax eax +
jz loc_41E0E1  +
mov eax [esp+60h] +
xor ecx ecx +
xor edx edx +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 1 +
call sub_41DDC0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_41E0E3  +
***
lea ebx [esp+2Ch] +
mov [esp+8] ebp +
mov dword ptr [esp+4] offset a08lx_1 +
mov [esp] ebx +
call sprintf  +
mov eax [esp+60h] +
mov eax [eax] +
mov [esp+8] ebx +
mov dword ptr [esp] offset aSAddress0xSOut +
mov [esp+4] eax +
call off_476094  +
mov dword ptr [esp] 11h +
call sub_40C770  +
jmp loc_41E0E1  +
***
shr edx 18h +
mov [esp+2Ch] dl +
mov edx eax +
shr edx 10h +
mov [esp+2Dh] dl +
mov edx eax +
shr edx 8 +
mov [esp+2Fh] al +
lea eax [esp+2Ch] +
mov [esp+2Eh] dl +
mov [esp+4] eax +
mov dword ptr [esp] 5 +
jmp loc_41E148  +
***
push ebp  +
push edi  +
push esi  +
mov esi 1 +
push ebx  +
sub esp 1Ch +
mov ebx [esp+44h] +
mov edi [esp+3Ch] +
test ebx ebx +
jz loc_41E227  +
mov eax [esp+34h] +
mov edx [eax+14h] +
and edx 3 +
cmp edx 3 +
jz loc_41E231  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] 10h +
mov [esp] eax +
call sub_407B20  +
test eax eax +
mov ebp eax +
jz loc_41E2F1  +
mov eax [esp+30h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_407B20  +
test eax eax +
mov edx eax +
jz loc_41E2F1  +
mov eax [esp+38h] +
mov [esp] edx +
mov [esp+8] ebx +
mov [esp+0Ch] edx +
mov [esp+4] eax +
call memcpy  +
mov eax [esp+34h] +
mov edx [esp+0Ch] +
add edi [eax+20h] +
mov eax [esp+30h] +
mov [ebp+4] edx +
mov [ebp+8] edi +
mov [ebp+0Ch] ebx +
mov ecx [eax+0A0h] +
mov eax [ecx+4] +
test eax eax +
jz loc_41E2AB  +
cmp edi [eax+8] +
jnb loc_41E2E0  +
mov edx [ecx] +
mov eax ecx +
test edx edx +
jnz loc_41E2BD  +
jmp loc_41E2C2  +
mov eax edx +
mov edx [edx] +
test edx edx +
jz loc_41E2C2  +
cmp edi [edx+8] +
ja loc_41E2B5  +
mov [ebp+0] edx +
mov esi 1 +
mov [eax] ebp +
mov eax [ebp+0] +
test eax eax +
jnz loc_41E227  +
mov [ecx+4] ebp +
jmp loc_41E227  +
***
mov [eax] ebp +
mov dword ptr [ebp+0] 0 +
mov [ecx+4] ebp +
jmp loc_41E227  +
***
xor esi esi +
jmp loc_41E227  +
***
sub esp 34h +
cmp ecx 0FFFFFFFFh +
jz loc_41E351  +
mov ebx eax +
movzx eax cl +
test ds:byte_495EE0[eax+eax] 10h +
jz loc_41E367  +
mov byte ptr [esp+34h+var_E] cl +
lea esi [esp+34h+var_E] +
mov byte ptr [esp+34h+var_E+1] 0 +
mov [esp+34h+var_28] esi +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_30] ebx +
mov [esp+34h+var_34] offset aBDUnexpected_0 +
call off_476094  +
mov [esp+34h+var_34] 11h +
call sub_40C770  +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+34h+arg_0] +
test eax eax +
jnz loc_41E34B  +
mov [esp+34h+var_34] 12h +
call sub_40C770  +
jmp loc_41E34B  +
lea esi [esp+34h+var_E] +
mov [esp+34h+var_2C] eax +
mov [esp+34h+var_30] offset a03o_0 +
mov [esp+34h+var_34] esi +
mov [esp+34h+var_18] edx +
call sprintf  +
mov edx [esp+34h+var_18] +
jmp loc_41E326  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov ebx ds:dword_49F460 +
mov ebp [esp+0A0h] +
test ebx ebx +
jz loc_41E4D4  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebp +
call sub_4060C0  +
test eax eax +
jnz loc_41E3FE  +
lea edi [esp+63h] +
mov [esp+8] ebp +
mov dword ptr [esp+4] 9 +
mov [esp] edi +
call sub_405EB0  +
cmp eax 9 +
jz loc_41E410  +
call sub_40C520  +
cmp eax 12h +
jz loc_41E4C3  +
xor eax eax +
***
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+63h] 3Ah +
jnz loc_41E4C3  +
lea eax [esp+64h] +
lea ebx [esp+6Ch] +
movzx edx byte ptr [eax] +
cmp ds:byte_4974E0[edx] 63h +
jz loc_41E4C3  +
add eax 1 +
cmp eax ebx +
jnz loc_41E423  +
movzx eax byte ptr [esp+6Ah] +
movzx edx byte ptr [esp+6Bh] +
movzx eax ds:byte_4974E0[eax] +
movzx edx ds:byte_4974E0[edx] +
shl eax 4 +
add eax edx +
cmp eax 5 +
ja loc_41E4C3  +
mov eax [ebp+0A0h] +
mov [esp] ebp +
mov [esp+1Ch] eax +
call sub_41DD30  +
test eax eax +
jz loc_41E496  +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] ebp +
call sub_4060C0  +
test eax eax +
jz loc_41E4E8  +
***
mov eax [ebp+0A0h] +
cmp eax [esp+arg_18] +
jz loc_41E4B2  +
test eax eax +
jz loc_41E4B2  +
mov [esp+arg_0] eax +
mov [esp+0] ebp +
call sub_407D70  +
mov eax [esp+arg_18] +
mov [ebp+0A0h] eax +
xor eax eax +
jmp loc_41E400  +
***
mov dword ptr [esp] 3 +
call sub_40C770  +
jmp loc_41E3FE  +
***
mov ds:dword_49F460 1 +
call nullsub_2  +
jmp loc_41E3AF  +
***
mov dword ptr [ebp+74h] 0 +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+20h] 1 +
mov dword ptr [esp+3Ch] 0 +
mov dword ptr [esp+48h] 0 +
mov dword ptr [esp+4Ch] 0 +
***
mov [esp+arg_4] ebp +
mov [esp+arg_0] 1 +
mov [esp+0] ebx +
call sub_405EB0  +
cmp eax 1 +
jz loc_41E560  +
call sub_40C520  +
cmp eax 12h +
jz loc_41EAE0  +
mov eax [esp+arg_14] +
test eax eax +
jz loc_41E496  +
mov [esp+0] eax +
call free  +
jmp loc_41E496  +
***
movzx ecx [esp+arg_68] +
cmp ecx 0Dh +
jz loc_41E51F  +
cmp ecx 0Ah +
jz loc_41EAD5  +
cmp ecx 3Ah +
jnz loc_41E778  +
mov [esp+0] ebp +
call sub_405FE0  +
mov [esp+arg_4] ebp +
mov [esp+arg_0] 8 +
mov [esp+arg_3C] eax +
lea eax [esp+arg_57] +
mov [esp+0] eax +
mov [esp+arg_40] edx +
call sub_405EB0  +
cmp eax 8 +
jnz loc_41E546  +
lea eax [esp+arg_57] +
lea esi [esi+0] +
movzx ecx byte ptr [eax] +
cmp ds:byte_4974E0[ecx] 63h +
jz loc_41E778  +
add eax 1 +
cmp eax edi +
jnz loc_41E5B0  +
movzx eax byte ptr [esp+arg_57] +
movzx edx byte ptr [esp+arg_57+1] +
movzx eax ds:byte_4974E0[eax] +
movzx edx ds:byte_4974E0[edx] +
shl eax 4 +
add eax edx +
mov esi eax +
mov [esp+arg_24] eax +
movzx eax byte ptr [esp+arg_57+2] +
lea esi [esi+esi+2] +
cmp esi [esp+arg_20] +
movzx eax ds:byte_4974E0[eax] +
mov byte ptr [esp+arg_28] al +
movzx eax byte ptr [esp+arg_57+3] +
movzx eax ds:byte_4974E0[eax] +
mov byte ptr [esp+arg_2C] al +
movzx eax [esp+arg_5B] +
movzx eax ds:byte_4974E0[eax] +
mov byte ptr [esp+arg_30] al +
movzx eax [esp+arg_5C] +
movzx eax ds:byte_4974E0[eax] +
mov [esp+arg_35] al +
movzx eax [esp+arg_5D] +
movzx eax ds:byte_4974E0[eax] +
mov [esp+arg_36] al +
movzx eax [esp+arg_5E] +
movzx eax ds:byte_4974E0[eax] +
mov [esp+arg_37] al +
jnb loc_41E790  +
mov eax [esp+arg_14] +
mov [esp+arg_4] ebp +
mov [esp+arg_0] esi +
mov [esp+0] eax +
call sub_405EB0  +
cmp esi eax +
jnz loc_41E546  +
mov edx [esp+arg_14] +
xor eax eax +
lea esi [esi+0] +
movzx ecx byte ptr [edx+eax] +
cmp ds:byte_4974E0[ecx] 63h +
jz loc_41E778  +
add eax 1 +
cmp esi eax +
ja loc_41E680  +
movzx edx byte ptr [esp+arg_30] +
movzx eax [esp+arg_35] +
shl edx 4 +
lea ecx [edx+eax] +
movzx eax byte ptr [esp+arg_28] +
movzx edx byte ptr [esp+arg_2C] +
shl eax 4 +
add eax edx +
movzx edx [esp+arg_37] +
shl eax 8 +
add eax ecx +
mov [esp+arg_28] eax +
movzx eax [esp+arg_36] +
shl eax 4 +
lea ecx [eax+edx] +
mov edx [esp+arg_24] +
mov eax [esp+arg_28] +
mov [esp+arg_2C] ecx +
add ecx edx +
add ecx eax +
shr eax 8 +
add ecx eax +
test edx edx +
jz loc_41EB27  +
mov edx [esp+arg_14] +
sub esi 2 +
mov [esp+arg_30] esi +
mov [esp+arg_9C] ebp +
add esi edx +
mov eax edx +
mov ebp esi +
movzx edx byte ptr [eax] +
add eax 2 +
movzx esi byte ptr [eax-1] +
movzx edx ds:byte_4974E0[edx] +
movzx esi ds:byte_4974E0[esi] +
shl edx 4 +
add edx esi +
add ecx edx +
cmp eax ebp +
jnz loc_41E705  +
mov edx [esp+arg_30] +
mov ebp [esp+arg_9C] +
mov eax edx +
add eax 1 +
mov esi [esp+arg_14] +
neg ecx  +
movzx ecx cl +
movzx edx byte ptr [esi+edx] +
movzx eax byte ptr [esi+eax] +
movzx edx ds:byte_4974E0[edx] +
movzx eax ds:byte_4974E0[eax] +
shl edx 4 +
add eax edx +
cmp ecx eax +
jnz loc_41EB94  +
mov eax [esp+arg_2C] +
cmp eax 5 +
ja loc_41EAF5  +
jmp ds:off_48D908[eax*4]  +
mov edx [esp+arg_1C] +
mov eax ebp +
mov dword ptr [esp+0] 0 +
call sub_41E300  +
jmp loc_41E546  +
***
cmp [esp+arg_24] 2 +
cmp [esp+arg_24] 4 +
cmp [esp+arg_24] 2 +
mov edx [ebp+74h] +
cmp [esp+arg_24] 4 +
mov eax [esp+arg_38] +
test eax eax +
jz loc_41EA02  +
mov ecx [eax+24h] +
mov edx [eax+1Ch] +
mov eax [esp+arg_44] +
add eax [esp+arg_48] +
add eax [esp+arg_28] +
add edx ecx +
cmp edx eax +
jz loc_41EB84  +
mov ecx [esp+arg_24] +
test ecx ecx +
jz loc_41E51F  +
mov eax [ebp+6Ch] +
mov [esp+arg_0] offset a_secD_0 +
mov [esp+0] ebx +
add eax 1 +
mov [esp+arg_4] eax +
call sprintf  +
mov edx ebx +
mov eax [edx] +
add edx 4 +
lea ecx [eax-1010101h] +
not eax  +
and ecx eax +
and ecx 80808080h +
jz loc_41EA2A  +
mov eax ecx +
shr eax 10h +
test ecx 8080h +
cmovz ecx eax +
lea eax [edx+2] +
cmovz edx eax +
add cl cl +
sbb edx 3 +
sub edx ebx +
add edx 1 +
mov [esp+arg_0] edx +
mov [esp+0] ebp +
call sub_407B20  +
test eax eax +
mov esi eax +
jz loc_41E546  +
mov [esp+arg_0] ebx +
mov [esp+0] eax +
call strcpy  +
mov [esp+arg_0] esi +
mov [esp+arg_4] 103h +
mov [esp+0] ebp +
call sub_410D00  +
test eax eax +
mov esi eax +
mov [esp+arg_38] eax +
jz loc_41E546  +
mov eax [esp+arg_44] +
add eax [esp+arg_48] +
add eax [esp+arg_28] +
mov edx [esp+arg_40] +
mov [esi+1Ch] eax +
mov [esi+20h] eax +
mov eax [esp+arg_24] +
mov [esi+24h] eax +
mov eax [esp+arg_3C] +
add eax 0FFFFFFFFh +
adc edx 0FFFFFFFFh +
mov [esi+50h] eax +
mov [esi+54h] edx +
jmp loc_41E51F  +
add [esp+arg_1C] 1 +
jmp loc_41E51F  +
mov eax [esp+arg_14] +
test eax eax +
jz loc_41E932  +
mov eax [esp+arg_14] +
jmp loc_41E92A  +
mov eax [esp+arg_2C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUUnrecognized +
mov [esp+arg_8] eax +
mov eax [esp+arg_1C] +
mov [esp+arg_4] eax +
call off_476094  +
mov dword ptr [esp+0] 11h +
call sub_40C770  +
jmp loc_41E546  +
mov eax 1 +
xor edx edx +
jmp loc_41E738  +
mov esi [esp+arg_14] +
mov [esp+arg_38] 0 +
movzx eax byte ptr [esi+2] +
movzx edx byte ptr [esi+3] +
movzx eax ds:byte_4974E0[eax] +
movzx ecx ds:byte_4974E0[edx] +
shl eax 4 +
add ecx eax +
movzx eax byte ptr [esi] +
movzx edx ds:byte_4974E0[eax] +
movzx eax byte ptr [esi+1] +
shl edx 4 +
movzx eax ds:byte_4974E0[eax] +
add eax edx +
shl eax 8 +
add eax ecx +
shl eax 10h +
add [ebp+74h] eax +
jmp loc_41E51F  +
mov eax [esp+arg_38] +
add ecx [esp+arg_24] +
mov [eax+24h] ecx +
jmp loc_41E51F  +
***
mov [esp+arg_C] eax +
mov eax [esp+arg_1C] +
mov [esp+arg_8] ecx +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadChecksumI +
mov [esp+arg_4] eax +
call off_476094  +
mov dword ptr [esp+0] 11h +
call sub_40C770  +
jmp loc_41E546  +
***
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtendedA +
mov [esp+arg_4] eax +
call off_476094  +
mov dword ptr [esp+0] 11h +
call sub_40C770  +
jmp loc_41E546  +
***
cmp [esp+arg_24] 2 +
jz loc_41E945  +
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtendedL +
mov [esp+arg_4] eax +
call off_476094  +
mov dword ptr [esp+0] 11h +
call sub_40C770  +
jmp loc_41E546  +
***
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtende_0 +
mov [esp+arg_4] eax +
call off_476094  +
mov dword ptr [esp+0] 11h +
call sub_40C770  +
jmp loc_41E546  +
***
mov eax [esp+arg_1C] +
mov [esp+arg_0] ebp +
mov dword ptr [esp+0] offset aBUBadExtendedS +
mov [esp+arg_4] eax +
call off_476094  +
mov dword ptr [esp+0] 11h +
call sub_40C770  +
jmp loc_41E546  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+54h] +
mov esi [esp+5Ch] +
mov eax [eax+8Ch] +
test eax eax +
jz loc_41ECC0  +
add esi eax +
mov eax [esp+64h] +
mov [esp+4] esi +
mov [esp+8] eax +
mov eax [esp+58h] +
mov [esp] eax +
call memcpy  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+54h] +
mov eax [eax+24h] +
mov [esp+4] eax +
mov eax [esp+50h] +
mov [esp] eax +
call sub_407B20  +
mov ecx [esp+54h] +
mov ebx eax +
mov [esp+14h] eax +
mov [ecx+8Ch] eax +
xor eax eax +
test ebx ebx +
jz loc_41ECB8  +
mov eax [ecx+50h] +
mov edx [ecx+54h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] eax +
mov eax [esp+50h] +
mov [esp+8] edx +
mov [esp] eax +
call sub_4060C0  +
test eax eax +
jnz loc_41EEBB  +
mov ebx [esp+14h] +
xor edi edi +
mov dword ptr [esp+1Ch] 0 +
mov eax [esp+50h] +
mov dword ptr [esp+4] 1 +
mov [esp+8] eax +
lea eax [esp+28h] +
mov [esp] eax +
call sub_405EB0  +
cmp eax 1 +
jz loc_41ED77  +
call sub_40C520  +
mov eax [esp+54h] +
sub ebx [esp+14h] +
cmp ebx [eax+24h] +
jb loc_41EEE8  +
test edi edi +
jz loc_41ED68  +
mov [esp] edi +
call free  +
mov eax [esp+54h] +
mov eax [eax+8Ch] +
jmp loc_41EC99  +
***
movzx eax byte ptr [esp+28h] +
cmp eax 0Ah +
jz loc_41ED25  +
cmp eax 0Dh +
jz loc_41ED25  +
cmp eax 3Ah +
jz loc_41ED9F  +
mov dword ptr [esp+4] 236h +
mov dword ptr [esp] offset a____Binutil_21 +
call sub_40C6C0  +
mov eax [esp+50h] +
mov dword ptr [esp+4] 8 +
mov [esp+8] eax +
lea eax [esp+28h] +
mov [esp] eax +
call sub_405EB0  +
cmp eax 8 +
jnz loc_41EEAF  +
movzx eax byte ptr [esp+28h] +
movzx edx byte ptr [esp+29h] +
movzx eax ds:byte_4974E0[eax] +
movzx ebp ds:byte_4974E0[edx] +
movzx edx byte ptr [esp+2Fh] +
shl eax 4 +
add ebp eax +
movzx eax byte ptr [esp+2Eh] +
movzx edx ds:byte_4974E0[edx] +
movzx eax ds:byte_4974E0[eax] +
shl eax 4 +
add eax edx +
jnz loc_41EEC5  +
lea edx [ebp+ebp+0] +
cmp edx [esp+1Ch] +
jbe loc_41EE30  +
mov [esp] edi +
mov [esp+4] edx +
mov [esp+18h] edx +
call sub_40F050  +
test eax eax +
mov edi eax +
jz loc_41EEBB  +
mov edx [esp+18h] +
mov [esp+1Ch] edx +
mov eax [esp+50h] +
mov [esp+4] edx +
mov [esp] edi +
mov [esp+18h] edx +
mov [esp+8] eax +
call sub_405EB0  +
mov edx [esp+18h] +
cmp edx eax +
jnz loc_41EEAF  +
test ebp ebp +
jz loc_41EE7B  +
xor edx edx +
movzx eax byte ptr [edi+edx*2] +
movzx ecx byte ptr [edi+edx*2+1] +
movzx eax ds:byte_4974E0[eax] +
shl eax 4 +
add al ds:byte_4974E0[ecx] +
mov [ebx+edx] al +
add edx 1 +
cmp edx ebp +
jnz loc_41EE56  +
add ebx edx +
mov ecx [esp+54h] +
mov eax ebx +
sub eax [esp+14h] +
cmp eax [ecx+24h] +
jnb loc_41ED5C  +
mov eax [esp+50h] +
mov dword ptr [esp+4] 2 +
mov [esp] edi +
mov [esp+8] eax +
call sub_405EB0  +
cmp eax 2 +
jz loc_41ED25  +
test edi edi +
jz loc_41EEBB  +
mov [esp] edi +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+50h] +
mov dword ptr [esp] offset aBInternalError +
mov [esp+4] eax +
call off_476094  +
mov dword ptr [esp] 11h +
call sub_40C770  +
jmp loc_41EEAF  +
***
mov eax [esp+50h] +
mov dword ptr [esp] offset aBBadSectionLen +
mov [esp+4] eax +
call off_476094  +
mov dword ptr [esp] 11h +
call sub_40C770  +
jmp loc_41EEAF  +
***
push ebx  +
mov ebx [esp+0Ch] +
mov eax [esp+8] +
mov ecx [ebx+0Ch] +
cmp [eax+0Ch] ecx +
jnz loc_41EF70  +
mov edx [eax+10h] +
mov ecx [ebx+10h] +
cmp edx ecx +
jz loc_41EF52  +
cmp edx 6 +
jz loc_41EF70  +
cmp ecx 6 +
jz loc_41EF70  +
cmp edx 5 +
ja loc_41EF54  +
cmp ecx 5 +
ja loc_41EF74  +
cmp edx 3 +
jz loc_41EFC2  +
cmp edx 4 +
jz loc_41EFD0  +
cmp edx ecx +
nop   +
jbe loc_41EF87  +
pop ebx  +
retn   +
***
cmp edx 19h +
jz loc_41EF82  +
cmp edx 3 +
lea esi [esi+0] +
jnz loc_41EF90  +
cmp ecx 1Fh +
jz loc_41EF52  +
cmp ecx 23h +
jz loc_41EF52  +
lea esi [esi+0] +
xor eax eax +
pop ebx  +
retn   +
***
cmp edx 2 +
jnz loc_41EF59  +
cmp ecx 19h +
jz loc_41EF52  +
xor eax eax +
jmp loc_41EF72  +
***
cmp ecx 2 +
jnz loc_41EF70  +
mov eax ebx +
pop ebx  +
retn   +
***
cmp edx 1Fh +
jnz loc_41EF9E  +
cmp ecx 3 +
jz loc_41EF87  +
xor eax eax +
jmp loc_41EF72  +
***
cmp edx 23h +
jz loc_41EF95  +
cmp edx 5 +
jnz loc_41EFB2  +
cmp ecx 33h +
jz loc_41EF52  +
xor eax eax +
nop   +
jmp loc_41EF72  +
***
cmp edx 33h +
jnz loc_41EF70  +
cmp ecx 5 +
jnz loc_41EF70  +
mov eax ebx +
nop   +
jmp loc_41EF89  +
***
cmp ecx 4 +
jnz loc_41EF4D  +
xor eax eax +
jmp loc_41EF72  +
***
cmp ecx 3 +
jnz loc_41EF4D  +
xor eax eax +
jmp loc_41EF72  +
***
push edi  +
mov ecx 0Eh +
push esi  +
push ebx  +
sub esp 5Ch +
lea ebx [esp+68h+var_50] +
mov esi [esp+68h+arg_0] +
mov [esp+68h+var_5C] eax +
mov edi ebx +
xor eax eax +
stos   +
mov eax [esp+68h+var_5C] +
mov [esp+68h+var_60] 38h +
mov [esp+68h+var_64] offset a1_2_7 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_4C] edx +
mov [esp+68h+var_50] eax +
mov [esp+68h+var_40] esi +
call sub_452470  +
mov ecx [esp+68h+var_4C] +
test ecx ecx +
mov edi eax +
jnz loc_41F06D  +
jmp loc_41F075  +
test edi edi +
jnz loc_41F075  +
mov ecx esi +
sub ecx eax +
mov eax ecx +
add eax ebp +
mov [esp+68h+var_64] 4 +
mov [esp+68h+var_68] ebx +
mov [esp+68h+var_44] eax +
call sub_452510  +
cmp eax 1 +
mov edi eax +
jnz loc_41F075  +
mov [esp+68h+var_68] ebx +
call sub_452290  +
mov edx [esp+68h+var_4C] +
test edx edx +
mov edi eax +
jz loc_41F075  +
mov eax [esp+68h+var_40] +
test eax eax +
jnz loc_41F034  +
mov [esp+68h+var_68] ebx +
call sub_454320  +
xor edx edx +
or eax edi +
jnz loc_41F08E  +
mov eax [esp+68h+var_40] +
xor edx edx +
test eax eax +
setz dl  +
add esp 5Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+arg_8] +
mov ebx [esp+3Ch+arg_4] +
movzx eax byte ptr [eax+28h] +
mov edi [esi] +
and eax 18h +
cmp al 10h +
jz loc_41F100  +
mov ebp [ebx+28h] +
test ebp ebp +
jz loc_41F100  +
movzx eax byte ptr [ebx+18h] +
shr al 4 +
and eax 3 +
cmp eax 1 +
jz loc_41F120  +
cmp eax 2 +
jz loc_41F1A0  +
test eax eax +
jz loc_41F150  +
mov [esp+3Ch+var_34] offset aBfd_get_full_s +
mov [esp+3Ch+var_38] 145h +
mov [esp+3Ch+var_3C] offset a____Binutils_5 +
call sub_40C6F0  +
nop   +
mov ebp [ebx+24h] +
test ebp ebp +
jnz loc_41F0C7  +
mov dword ptr [esi] 0 +
mov ebx 1 +
add esp 3Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+6Ch] +
test eax eax +
jz loc_41F2B2  +
test edi edi +
jz loc_41F2B9  +
cmp edi eax +
mov ebx 1 +
jz loc_41F112  +
mov [esp+3Ch+var_34] ebp +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edi +
call memcpy  +
jmp loc_41F112  +
test edi edi +
jz loc_41F2A0  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_28] ebp +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_411050  +
test eax eax +
jnz loc_41F28D  +
cmp [esi] edi +
jz loc_41F2B2  +
mov [esp+3Ch+var_3C] edi +
xor ebx ebx +
call free  +
jmp loc_41F112  +
mov eax [ebx+2Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_40EFC0  +
test eax eax +
mov ecx eax +
mov [esp+3Ch+var_18] eax +
jz loc_41F2B2  +
mov edx [ebx+28h] +
mov eax [ebx+24h] +
and byte ptr [ebx+18h] 0CFh +
mov [esp+3Ch+var_10] edx +
mov edx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_14] eax +
mov eax [ebx+2Ch] +
mov dword ptr [ebx+28h] 0 +
mov [ebx+24h] eax +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_28] eax +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_38] ebx +
call sub_411050  +
mov edx [esp+3Ch+var_10] +
mov ecx [esp+3Ch+var_14] +
mov [ebx+28h] edx +
movzx edx byte ptr [ebx+18h] +
mov [ebx+24h] ecx +
and edx 0FFFFFFCFh +
or edx 20h +
test eax eax +
mov [ebx+18h] dl +
jz loc_41F26E  +
test edi edi +
jz loc_41F2D1  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] eax +
call sub_40D6F0  +
mov edx 0Ch +
mov ecx edi +
test eax eax +
cmovz eax edx +
mov edx [ebx+2Ch] +
add eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] ebp +
call sub_41EFE0  +
test eax eax +
jnz loc_41F281  +
mov [esp+3Ch+var_3C] 11h +
call sub_40C770  +
cmp [esi] edi +
jz loc_41F26E  +
mov [esp+3Ch+var_3C] edi +
call free  +
mov eax [esp+3Ch+var_18] +
xor ebx ebx +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_41F112  +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call free  +
mov [esi] edi +
mov ebx 1 +
jmp loc_41F112  +
mov [esp+3Ch+var_3C] ebp +
call sub_40EFC0  +
test eax eax +
mov edi eax +
jnz loc_41F158  +
xor ebx ebx +
jmp loc_41F112  +
mov [esp+3Ch+var_3C] ebp +
call sub_40EFC0  +
test eax eax +
mov edi eax +
jz loc_41F2B2  +
mov [esi] eax +
mov eax [ebx+6Ch] +
jmp loc_41F133  +
mov [esp+3Ch+var_3C] ebp +
call sub_40EFC0  +
test eax eax +
mov edi eax +
jz loc_41F26E  +
jmp loc_41F227  +
***
mov eax [esp+4] +
movzx edx byte ptr [eax+18h] +
mov ecx edx +
and ecx 30h +
cmp cl 20h +
jnz loc_41F30B  +
and edx 0FFFFFFCFh +
or edx 10h +
mov [eax+18h] dl +
mov edx [esp+8] +
or dword ptr [eax+14h] 4000h +
mov [eax+6Ch] edx +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_4] +
mov edi [esp+4Ch+arg_0] +
movzx ebp byte ptr [ebx+18h] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] edi +
mov eax ebp +
shr al 4 +
mov ebp eax +
call sub_40D6F0  +
and ebp 3 +
cmp eax 18h +
mov [esp+4Ch+var_30] eax +
jg loc_41F496  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_41F3C5  +
and byte ptr [ebx+18h] 0CFh +
lea esi [esp+4Ch+var_24] +
mov [esp+4Ch+var_38] 0Ch +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] edi +
call sub_411050  +
test eax eax +
jnz loc_41F432  +
mov eax [ebx+24h] +
mov esi [esp+4Ch+arg_C] +
mov [esi] eax +
xor eax eax +
movzx edx byte ptr [ebx+18h] +
and ebp 3 +
shl ebp 4 +
mov ecx [esp+4Ch+var_30] +
and edx 0FFFFFFCFh +
or edx ebp +
mov [ebx+18h] dl +
mov edx [esp+4Ch+arg_8] +
mov [edx] ecx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4Ch+var_30] +
lea esi [esp+4Ch+var_24] +
and byte ptr [ebx+18h] 0CFh +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_38] eax +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] edi +
call sub_411050  +
test eax eax +
jz loc_41F396  +
mov eax [ebx+24h] +
mov ecx [esp+4Ch+arg_C] +
mov [ecx] eax +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_44] ebx +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] edi +
call sub_40D620  +
mov edx eax +
mov eax 1 +
test edx edx +
mov edx 0FFFFFFFFh +
cmovnz edx [esp+4Ch+var_30] +
mov [esp+4Ch+var_30] edx +
jmp loc_41F3A1  +
mov ecx 4 +
mov edi offset aZlib +
cmps   +
mov ecx [ebx+24h] +
mov esi [esp+4Ch+arg_C] +
mov [esi] ecx +
setnbe dl  +
setb al  +
cmp dl al +
jnz loc_41F39F  +
mov esi [ebx] +
mov edi offset a_debug_str +
mov ecx 0Bh +
cmps   +
jnz loc_41F47A  +
movzx edx byte ptr [esp+4Ch+var_20] +
xor eax eax +
test ds:byte_495EE0[edx+edx] 10h +
jnz loc_41F3A1  +
lea eax [esp+4Ch+var_20] +
mov [esp+4Ch+var_4C] eax +
call sub_40F3B0  +
mov esi [esp+4Ch+arg_C] +
mov [esi] eax +
mov eax 1 +
jmp loc_41F3A1  +
mov [esp+4Ch+var_44] offset aBfd_is_section +
mov [esp+4Ch+var_48] 17Eh +
mov [esp+4Ch+var_4C] offset a____Binutils_5 +
call sub_40C6F0  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 3Ch +
mov [esp+98h+var_94] 0 +
mov [esp+98h+var_98] eax +
mov [esp+98h+var_84] ecx +
call sub_40D6F0  +
mov [esp+98h+var_94] ebx +
mov [esp+98h+var_98] esi +
mov ebp eax +
lea eax [esp+98h+var_6C] +
mov [esp+98h+var_8C] eax +
lea eax [esp+98h+var_70] +
mov [esp+98h+var_90] eax +
call sub_41F320  +
test ebp ebp +
mov edx 0Ch +
cmovz ebp edx +
test eax eax +
jz loc_41F5B0  +
mov eax [esp+98h+var_70] +
test eax eax +
js loc_41F713  +
mov edx [esp+98h+var_48] +
sub edx eax +
test eax eax +
jnz loc_41F534  +
mov eax [esp+98h+var_48] +
mov [esp+98h+var_70] 0Ch +
lea edx [eax-0Ch] +
mov ecx [esp+98h+var_6C] +
lea eax [edx+ebp] +
mov [esp+98h+var_74] eax +
cmp eax ecx +
jbe loc_41F692  +
mov [esp+98h+var_94] ecx +
mov [esp+98h+var_98] esi +
mov [esp+98h+var_7C] edx +
mov [esp+98h+var_80] ecx +
call sub_407B20  +
test eax eax +
mov edi eax +
jz loc_41F688  +
mov eax [esp+98h+var_6C] +
mov ecx [esp+98h+var_80] +
mov edx [esp+98h+var_7C] +
mov [ebx+24h] eax +
mov eax [esp+98h+var_84] +
add eax [esp+98h+var_70] +
mov [esp+98h+var_98] ecx +
mov ecx edi +
call sub_41EFE0  +
test eax eax +
jnz loc_41F6EB  +
mov [esp+98h+var_98] 11h +
call sub_40C770  +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call sub_407D70  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+98h+var_48] +
mov [esp+98h+var_98] eax +
call sub_454990  +
mov [esp+98h+var_98] esi +
add eax ebp +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_74] eax +
call sub_407B20  +
test eax eax +
mov edi eax +
jz loc_41F688  +
mov eax [esp+98h+var_48] +
mov [esp+98h+var_8C] eax +
mov eax [esp+98h+var_84] +
mov [esp+98h+var_90] eax +
lea eax [esp+98h+var_74] +
mov [esp+98h+var_94] eax +
lea eax [edi+ebp] +
mov [esp+98h+var_98] eax +
call sub_454950  +
test eax eax +
jnz loc_41F670  +
mov ecx [esp+98h+var_74] +
add ecx ebp +
cmp [esp+98h+var_48] ecx +
mov [esp+98h+var_74] ecx +
jbe loc_41F650  +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call sub_40D4B0  +
nop   +
mov eax [esp+98h+var_84] +
mov [esp+98h+var_98] eax +
call free  +
mov eax [esp+98h+var_74] +
mov [ebx+6Ch] edi +
mov [ebx+24h] eax +
movzx eax byte ptr [ebx+18h] +
and eax 0FFFFFFCFh +
or eax 10h +
mov [ebx+18h] al +
mov eax [esp+98h+var_48] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call sub_407D70  +
mov eax [esp+98h+var_84] +
and byte ptr [ebx+18h] 0CFh +
mov [ebx+6Ch] eax +
mov eax [esp+98h+var_48] +
jmp loc_41F647  +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
call sub_407D70  +
mov [esp+98h+var_98] 11h +
call sub_40C770  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_98] esi +
mov [esp+98h+var_80] edx +
call sub_407B20  +
mov edx [esp+98h+var_80] +
test eax eax +
mov edi eax +
jz loc_41F688  +
mov eax [esp+98h+var_6C] +
mov [esp+98h+var_90] ebx +
mov [esp+98h+var_94] edi +
mov [esp+98h+var_98] esi +
mov [ebx+24h] eax +
mov [esp+98h+var_80] edx +
call sub_40D4B0  +
mov edx [esp+98h+var_80] +
lea ecx [edi+ebp] +
mov eax [esp+98h+var_84] +
add eax [esp+98h+var_70] +
mov [esp+98h+var_98] ecx +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_94] eax +
call memmove  +
jmp loc_41F620  +
mov eax [esp+98h+var_84] +
mov [esp+98h+var_98] eax +
call free  +
movzx eax byte ptr [ebx+18h] +
mov [ebx+6Ch] edi +
and eax 0FFFFFFCFh +
or eax 10h +
mov [ebx+18h] al +
mov eax [esp+98h+var_6C] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+98h+var_90] offset aBfd_compress_s +
mov [esp+98h+var_94] 66h +
mov [esp+98h+var_98] offset a____Binutils_5 +
call sub_40C6F0  +
nop   +
sub esp 2Ch +
lea eax [esp+0C4h+var_A8] +
mov [esp+0C4h+var_B8] eax +
lea eax [esp+0C4h+var_AC] +
mov [esp+0C4h+var_BC] eax +
mov eax [esp+0C4h+var_90] +
mov [esp+0C4h+var_C0] eax +
mov eax [esp+0C4h+var_94] +
mov [esp+0C4h+var_C4] eax +
call sub_41F320  +
xor edx edx +
test eax eax +
jz loc_41F770  +
mov ecx [esp+0C4h+var_AC] +
test ecx ecx +
js loc_41F770  +
mov eax [esp+0C4h+var_A8] +
xor edx edx +
test eax eax +
setnz dl  +
mov eax edx +
add esp 2Ch +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_4] +
movzx ecx byte ptr [esi+28h] +
and ecx 18h +
cmp cl 8 +
jnz loc_41F8D0  +
mov edi [ebx+24h] +
test edi edi +
jz loc_41F8D0  +
mov edx [ebx+28h] +
test edx edx +
jnz loc_41F8D0  +
mov eax [ebx+6Ch] +
test eax eax +
jz loc_41F8E6  +
mov [esp+2Ch+var_2C] 5 +
call sub_40C770  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [ebx+18h] 30h +
jnz loc_41F8D0  +
mov [esp+2Ch+var_2C] edi +
call sub_40EFC0  +
mov [esp+2Ch+var_18] edi +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov ebp eax +
call sub_411050  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_41F8DE  +
mov [esp+2Ch+var_2C] edi +
mov ecx ebp +
mov edx ebx +
mov eax esi +
call loc_41F4C0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_41F8DE  +
***
mov eax [esp+18h+arg_0] +
mov edx [esp+18h+arg_4] +
movzx ecx byte ptr [eax+28h] +
mov ebx [edx+24h] +
and ecx 18h +
cmp cl 10h +
jnz loc_41F96E  +
test ebx ebx +
jz loc_41F96E  +
mov ecx [esp+18h+arg_8] +
test ecx ecx +
jz loc_41F96E  +
mov ecx [edx+6Ch] +
test ecx ecx +
jz loc_41F981  +
mov [esp+18h+var_18] 5 +
call sub_40C770  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
mov ecx [edx+2Ch] +
test ecx ecx +
jnz loc_41F96E  +
test byte ptr [edx+18h] 30h +
jnz loc_41F96E  +
mov ecx [esp+18h+arg_8] +
mov [esp+18h+var_18] ebx +
call loc_41F4C0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_41F97C  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+2Ch] +
mov eax [edi+4] +
mov edx [eax+1B0h] +
mov eax [eax+4Ch] +
movzx edx byte ptr [edx+1ACh] +
mov [esp] esi +
shr dl 7 +
mov [esp+0Ch] edx +
call eax  +
mov edx [esp+0Ch] +
test dl dl +
mov [ebx+8] eax +
mov eax [edi+4] +
jz loc_41FA50  +
mov eax [eax+50h] +
lea edx [esi+4] +
mov [esp] edx +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
lea edx [esi+8] +
add esi 0Eh +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
mov [ebx+4] eax +
movzx eax byte ptr [esi-2] +
mov [ebx+0Ch] al +
movzx eax byte ptr [esi-1] +
mov [ebx+0Dh] al +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp] esi +
call eax  +
cmp eax 0FFFFh +
mov [ebx+10h] eax +
jz loc_41FA70  +
cmp eax 0FEFFh +
ja loc_41FA60  +
mov byte ptr [ebx+0Eh] 0 +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [eax+4Ch] +
lea edx [esi+4] +
mov [esp] edx +
call eax  +
mov [ebx] eax +
jmp loc_41F9FC  +
***
sub eax 10000h +
mov [ebx+10h] eax +
jmp loc_41FA3A  +
***
mov edx [esp+28h] +
xor ax ax +
test edx edx +
jz loc_41FA43  +
mov eax [edi+4] +
mov ecx [esp+28h] +
mov eax [eax+4Ch] +
mov [esp] ecx +
call eax  +
mov [ebx+10h] eax +
jmp loc_41FA3A  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
add esi 4 +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
call eax  +
mov dword ptr [ebx+8] 0 +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
lea edx [esi+4] +
add esi 8 +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+4] eax +
mov eax [edi+4] +
mov eax [eax+50h] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+8] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ebx +
add ebx 4 +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
mov edx [esi+4] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea ecx [ebx+4] +
mov edx [esi+4] +
add ebx 8 +
mov eax [eax+54h] +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] ecx +
call eax  +
mov eax [edi+4] +
mov edx [esi+8] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
add esi 4 +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp] esi +
call eax  +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+20h] +
mov esi [esp+24h] +
mov ebx [esp+28h] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+4] ebx +
add ebx 4 +
mov [esp] edx +
call eax  +
mov eax [edi+4] +
mov edx [esi+4] +
mov eax [eax+54h] +
mov [esp+24h] ebx +
mov [esp+20h] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov ebx [esp+34h] +
mov esi [esp+38h] +
mov ebp [esp+3Ch] +
mov eax [edi+4] +
mov edx [ebx+8] +
mov eax [eax+54h] +
mov [esp] edx +
mov [esp+4] esi +
call eax  +
mov eax [edi+4] +
lea ecx [esi+4] +
mov edx [ebx] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [edi+4] +
lea ecx [esi+8] +
mov edx [ebx+4] +
mov eax [eax+54h] +
mov [esp] edx +
mov [esp+4] ecx +
call eax  +
movzx eax byte ptr [ebx+0Ch] +
mov [esi+0Ch] al +
movzx eax byte ptr [ebx+0Dh] +
mov [esi+0Dh] al +
mov eax [ebx+10h] +
lea edx [eax-0FF00h] +
cmp edx 0FFFEFFFFh +
ja loc_41FCC9  +
test ebp ebp +
jz loc_41FCE3  +
mov edx [edi+4] +
mov edx [edx+54h] +
mov [esp] eax +
mov [esp+4] ebp +
call edx  +
mov eax 0FFFFh +
mov edx [edi+4] +
add esi 0Eh +
mov edx [edx+60h] +
mov [esp+34h] esi +
mov [esp+30h] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp edx  +
***
mov dword ptr [esp+8] offset aBfd_elf32_swap +
mov dword ptr [esp+4] 0E0h +
mov dword ptr [esp] offset a____Binutil_22 +
call sub_40C6F0  +
nop   +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov edx [esp+78h] +
mov ebp [esp+70h] +
test edx edx +
mov eax [ebp+0A0h] +
jnz loc_41FDF0  +
add eax 48h +
xor ebx ebx +
mov [esp+24h] eax +
mov eax [ebp+4] +
mov eax [eax+1B0h] +
mov [esp+2Ch] eax +
mov eax [esp+24h] +
mov eax [eax+18h] +
mov [esp+28h] eax +
shr dword ptr [esp+28h] 4 +
mov esi [esp+28h] +
test esi esi +
jnz loc_41FE70  +
xor ebx ebx +
xor edi edi +
mov dword ptr [esp+38h] 0 +
mov dword ptr [esp+30h] 0 +
***
mov eax [esp+arg_28] +
mov eax [eax+38h] +
test eax eax +
jz loc_41FD7F  +
mov edx [esp+arg_24] +
mov [esp+arg_0] edi +
mov [esp+0] ebp +
mov [esp+arg_4] edx +
call eax  +
mov eax [esp+arg_70] +
test eax eax +
jz loc_41FDB8  +
test ebx ebx +
lea eax [ebx-1] +
jle loc_41FDAE  +
mov edx [esp+arg_70] +
add edx 4 +
sub eax 1 +
mov [edx-4] edi +
add edi 34h +
cmp eax 0FFFFFFFFh +
jnz loc_41FD92  +
mov eax [esp+arg_70] +
lea eax [eax+ebx*4] +
mov [esp+arg_70] eax +
mov eax [esp+arg_70] +
mov dword ptr [eax] 0 +
mov eax [esp+arg_34] +
test eax eax +
jz loc_41FDC8  +
mov [esp+0] eax +
call free  +
mov eax [esp+arg_2C] +
test eax eax +
jz loc_41FDE1  +
mov edx [esp+arg_20] +
cmp [edx+30h] eax +
jz loc_41FDE1  +
mov [esp+0] eax +
call free  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [eax+914h] +
xor ebx ebx +
mov edi [eax+918h] +
lea ecx [eax+160h] +
lea edx [eax+0F0h] +
mov [esp+24h] edx +
test esi esi +
cmovnz ebx ecx +
test edi edi +
jnz loc_41FE60  +
mov edx [eax+91Ch] +
test edx edx +
jz loc_41FD26  +
mov edi [eax+244h] +
test edi edi +
jnz loc_41FD26  +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call sub_42D990  +
test eax eax +
jnz loc_41FD26  +
nop   +
lea esi [esi+0] +
***
mov ebx 0FFFFFFFFh +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [eax+240h] +
test ecx ecx +
jnz loc_41FE17  +
jmp loc_41FE33  +
***
mov esi [esp+28h] +
mov eax [esp+24h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] esi +
mov [esp+4] eax +
mov [esp] ebp +
call sub_424210  +
test eax eax +
mov [esp+30h] eax +
jz loc_41FE50  +
imul eax esi +
mov [esp] ebp +
mov [esp+4] eax +
call sub_407C00  +
test eax eax +
mov edi eax +
jz loc_42003C  +
test ebx ebx +
jz loc_41FEF6  +
mov eax [ebx+18h] +
shr eax 1 +
cmp eax esi +
jz loc_41FFD5  +
mov ecx [ebp+0] +
mov [esp+0Ch] esi +
mov [esp+8] eax +
mov dword ptr [esp] offset aSVersionCountL +
mov [esp+4] ecx +
call off_476094  +
mov dword ptr [esp+38h] 0 +
xor ecx ecx +
mov eax [esp+28h] +
mov edx [esp+30h] +
lea eax [eax+eax*4] +
lea eax [edx+eax*4] +
lea esi [edx+14h] +
cmp eax esi +
mov [esp+34h] eax +
jbe loc_420251  +
mov ebx edi +
mov [esp+3Ch] edi +
mov edi ecx +
***
mov ecx [esi] +
mov eax [esp+24h] +
mov [ebx+18h] ecx +
mov ecx [esi+4] +
mov [ebx+1Ch] ecx +
mov ecx [esi+8] +
mov [ebx+20h] ecx +
mov ecx [esi+0Ch] +
mov [ebx+24h] ecx +
mov ecx [esi+10h] +
mov [ebx] ebp +
mov [ebx+28h] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] esi +
mov [esp+4] eax +
mov [esp-0D8h+arg_D4] ebp +
call sub_424560  +
mov [ebx+4] eax +
mov eax [esi] +
mov [ebx+8] eax +
mov eax [esi+10h] +
test eax eax +
jnz loc_420140  +
mov dword ptr [ebx+10h] offset off_476188 +
mov eax [ebp+28h] +
shr eax 5 +
test al 42h +
jz loc_41FF8D  +
mov eax [ebx+10h] +
mov eax [eax+1Ch] +
sub [ebx+8] eax +
movzx eax byte ptr [esi+0Ch] +
mov ecx eax +
shr cl 4 +
cmp cl 1 +
jz loc_420162  +
jb loc_420193  +
cmp cl 2 +
jz loc_420183  +
cmp cl 0Ah +
jnz loc_41FFC0  +
or dword ptr [ebx+0Ch] 800000h +
movzx eax byte ptr [esi+0Ch] +
nop   +
and eax 0Fh +
cmp al 0Ah +
ja sub_420067  +
movzx eax al +
jmp ds:off_48E1C4[eax*4]  +
***
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebp +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_4060C0  +
test eax eax +
jnz loc_42003C  +
mov eax [ebx+18h] +
mov [esp] eax +
call sub_40EFC0  +
test eax eax +
mov edx eax +
mov [esp+38h] eax +
jz loc_4201FA  +
mov eax [ebx+18h] +
mov [esp+8] ebp +
mov [esp] edx +
mov [esp+4] eax +
call sub_405EB0  +
cmp eax [ebx+18h] +
jz loc_4201EC  +
***
mov eax [esp+38h] +
test eax eax +
jz loc_42003C  +
mov [esp-0D8h+arg_D4] eax +
call free  +
mov edx [esp+24h] +
mov eax [esp+30h] +
cmp [edx+30h] eax +
jz loc_41FE50  +
mov [esp-0D8h+arg_D4] eax +
mov ebx 0FFFFFFFFh +
call free  +
jmp loc_41FE55  +
***
or dword ptr [ebx+0Ch] 400000h +
***
mov edx [esp+78h] +
or dword ptr [ebx+0Ch] 100000h +
jmp sub_420067  +
***
or dword ptr [ebx+0Ch] 80000h +
jmp sub_420067  +
***
or dword ptr [ebx+0Ch] 10000h +
jmp sub_420067  +
***
or dword ptr [ebx+0Ch] 40000h +
jmp sub_420067  +
***
or dword ptr [ebx+0Ch] 4004h +
jmp sub_420067  +
***
or dword ptr [ebx+0Ch] 104h +
jmp sub_420067  +
***
or dword ptr [ebx+0Ch] 8 +
jmp sub_420067  +
***
cmp eax 0FFFFFFF1h +
jz loc_4201C0  +
cmp eax 0FFFFFFF2h +
jnz loc_4201A0  +
mov dword ptr [ebx+10h] offset off_4760E0 +
test byte ptr [ebp+2Ah] 20h +
jnz loc_4201D0  +
mov eax [esi+4] +
mov [ebx+8] eax +
jmp loc_41FF7A  +
mov ecx [esi+10h] +
cmp ecx 0FFFFFFF2h +
jz loc_41FFC0  +
test ecx ecx +
jz loc_41FFC0  +
or dword ptr [ebx+0Ch] 2 +
movzx eax byte ptr [esi+0Ch] +
jmp loc_41FFC0  +
or dword ptr [ebx+0Ch] 80h +
movzx eax byte ptr [esi+0Ch] +
jmp loc_41FFC0  +
or dword ptr [ebx+0Ch] 1 +
movzx eax byte ptr [esi+0Ch] +
jmp loc_41FFC0  +
mov [esp+4] eax +
mov [esp-0D8h+arg_D4] ebp +
call sub_426C70  +
mov edx offset off_476230 +
test eax eax +
cmovz eax edx +
mov [ebx+10h] eax +
jmp loc_41FF7A  +
***
mov dword ptr [ebx+10h] offset off_476230 +
jmp loc_41FF7A  +
***
mov dword ptr [esp+4] offset aCommon_1 +
mov [esp-0D8h+arg_D4] ebp +
call sub_410840  +
test eax eax +
jz loc_420230  +
mov [ebx+10h] eax +
jmp loc_420157  +
***
mov eax [esp+38h] +
add eax 2 +
mov ecx eax +
jmp loc_41FF00  +
***
mov ecx [ebx+18h] +
test ecx ecx +
jnz loc_42003C  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_405EB0  +
xor ecx ecx +
cmp eax [ebx+18h] +
jnz loc_42003C  +
jmp loc_41FF00  +
***
mov dword ptr [esp+8] 209001h +
mov dword ptr [esp+4] offset aCommon_1 +
mov [esp-0D8h+arg_D4] ebp +
call sub_410D00  +
test eax eax +
jnz loc_4201E4  +
jmp loc_42002C  +
***
xor ebx ebx +
jmp loc_41FD63  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [eax] +
mov edx [eax+1B0h] +
mov eax [eax+4Ch] +
movzx edx byte ptr [edx+1ACh] +
mov [esp+18h+var_18] esi +
shr dl 7 +
mov [esp+18h+var_C] edx +
call eax  +
lea ecx [esi+4] +
mov [ebx] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] ecx +
call eax  +
lea ecx [esi+8] +
mov [ebx+4] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] ecx +
call eax  +
mov edx [esp+18h+var_C] +
test dl dl +
mov [ebx+8] eax +
mov eax [edi] +
jnz loc_420344  +
mov eax [eax+4Ch] +
lea edx [esi+0Ch] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+0Ch] eax +
mov eax [edi] +
lea edx [esi+10h] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+14h] +
mov dword ptr [ebx+14h] 0 +
mov [ebx+10h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+18h] +
mov [ebx+18h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+1Ch] +
mov [ebx+1Ch] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+20h] +
add esi 24h +
mov [ebx+20h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+24h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] esi +
call eax  +
mov dword ptr [ebx+2Ch] 0 +
mov dword ptr [ebx+30h] 0 +
mov [ebx+28h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+50h] +
lea edx [esi+0Ch] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+0Ch] eax +
jmp loc_4202C8  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [eax] +
mov edx [edx] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+4] +
mov edx [edi+4] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+8] +
mov edx [edi+8] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+0Ch] +
mov edx [edi+0Ch] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea edx [ebx+10h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] edx +
mov edx [edi+10h] +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+14h] +
mov edx [edi+18h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+18h] +
mov edx [edi+1Ch] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+1Ch] +
mov edx [edi+20h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
lea ecx [ebx+20h] +
mov edx [edi+24h] +
add ebx 24h +
mov eax [eax+54h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] edx +
call eax  +
mov eax [esi] +
mov edx [edi+28h] +
mov eax [eax+54h] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] edx +
call eax  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov eax [eax] +
mov eax [eax+1B0h] +
movzx edx byte ptr [eax+1ACh] +
mov eax [esi] +
shr dl 7 +
mov [ecx] eax +
mov eax [esi+4] +
mov [esp+18h+var_C] edx +
mov [ecx+4] eax +
mov eax [esi+8] +
mov [ecx+8] eax +
mov eax [esi+0Ch] +
mov [ecx+0Ch] eax +
mov eax [edi] +
lea ecx [esi+10h] +
mov eax [eax+58h] +
mov [esp+18h+var_18] ecx +
call eax  +
lea ecx [esi+12h] +
mov [ebx+24h] ax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] ecx +
call eax  +
lea ecx [esi+14h] +
mov [ebx+26h] ax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] ecx +
call eax  +
mov edx [esp+18h+var_C] +
test dl dl +
mov [ebx+1Ch] eax +
mov eax [edi] +
jnz loc_420560  +
mov eax [eax+4Ch] +
lea edx [esi+18h] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+10h] eax +
mov eax [edi] +
lea edx [esi+1Ch] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+20h] +
mov [ebx+14h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+24h] +
mov [ebx+18h] eax +
mov eax [edi] +
mov eax [eax+4Ch] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+28h] +
mov [ebx+20h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+2Ah] +
mov [ebx+28h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+2Ch] +
mov [ebx+2Ch] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+2Eh] +
mov [ebx+30h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
lea edx [esi+30h] +
add esi 32h +
mov [ebx+34h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+38h] eax +
mov eax [edi] +
mov eax [eax+58h] +
mov [esp+18h+var_18] esi +
call eax  +
mov [ebx+3Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+50h] +
lea edx [esi+18h] +
mov [esp+18h+var_18] edx +
call eax  +
mov [ebx+10h] eax +
jmp loc_4204C6  +
***
mov edi eax +
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 1Ch +
mov eax [eax] +
mov edx [edx] +
lea ecx [ecx+10h] +
lea ebp [ebx+14h] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
mov [ecx-10h] edx +
mov edx [esi+4] +
shr al 7 +
mov [ecx-0Ch] edx +
mov edx [esi+8] +
mov [esp+24h+var_18] eax +
mov [ecx-8] edx +
mov edx [esi+0Ch] +
mov [ecx-4] edx +
mov edx [edi] +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
movzx ecx word ptr [esi+24h] +
mov [esp+24h+var_24] ecx +
call edx  +
mov edx [edi] +
lea ecx [ebx+12h] +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
movzx ecx word ptr [esi+26h] +
mov [esp+24h+var_24] ecx +
call edx  +
mov edx [edi] +
mov ecx [esi+1Ch] +
mov edx [edx+54h] +
mov [esp+24h+var_20] ebp +
mov ebp 0FFFFh +
mov [esp+24h+var_24] ecx +
call edx  +
mov eax [edi] +
lea ecx [ebx+18h] +
mov edx [esi+10h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+1Ch] +
mov edx [esi+14h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+20h] +
mov edx [esi+18h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+24h] +
mov edx [esi+20h] +
mov eax [eax+54h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+28h] +
mov edx [esi+28h] +
mov eax [eax+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [edi] +
lea ecx [ebx+2Ah] +
mov edx [esi+2Ch] +
mov eax [eax+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [esi+30h] +
lea ecx [ebx+2Ch] +
mov edx [edi] +
cmp eax 0FFFFh +
cmova eax ebp +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] eax +
call edx  +
mov eax [edi] +
lea ecx [ebx+2Eh] +
mov edx [esi+34h] +
mov eax [eax+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] edx +
call eax  +
mov eax [esi+38h] +
mov edx 0 +
lea ecx [ebx+30h] +
cmp eax 0FF00h +
cmovnb eax edx +
mov edx [edi] +
mov edx [edx+60h] +
mov [esp+24h+var_20] ecx +
mov [esp+24h+var_24] eax +
call edx  +
mov eax [esi+3Ch] +
mov edx [edi] +
cmp eax 0FF00h +
cmovnb eax ebp +
mov edx [edx+60h] +
add ebx 32h +
mov [esp+24h+var_20] ebx +
mov [esp+24h+var_24] eax +
call edx  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+80h] +
lea ecx [esp+2Ch] +
mov esi [eax+0A0h] +
add eax 4 +
mov [esp+14h] eax +
mov edx esi +
mov ebp [esi+40h] +
call sub_420580  +
mov eax [esp+80h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
call sub_4060C0  +
test eax eax +
jz loc_420750  +
xor eax eax +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+80h] +
mov dword ptr [esp+4] 34h +
mov [esp+8] eax +
lea eax [esp+2Ch] +
mov [esp] eax +
call sub_405F60  +
cmp eax 34h +
jnz loc_420744  +
mov eax [esi+30h] +
cmp eax 0FFFEh +
jbe loc_420784  +
mov edx [ebp+0] +
mov [edx+20h] eax +
mov eax [esi+38h] +
cmp eax 0FEFFh +
jbe loc_420794  +
mov edx [ebp+0] +
mov [edx+18h] eax +
mov edx [esi+3Ch] +
cmp edx 0FEFFh +
jbe loc_4207A5  +
mov ecx [ebp+0] +
mov [ecx+1Ch] edx +
lea eax [eax+eax*4] +
shl eax 3 +
mov [esp+1Ch] eax +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_407B20  +
test eax eax +
mov [esp+18h] eax +
jz loc_420744  +
mov edi eax +
mov eax [esi+38h] +
xor ebx ebx +
test eax eax +
jz loc_4207FA  +
lea esi [esi+0] +
mov edx [ebp+ebx*4+0] +
mov ecx edi +
add ebx 1 +
mov eax [esp+14h] +
add edi 28h +
call sub_420360  +
cmp [esi+38h] ebx +
ja loc_4207E0  +
mov dword ptr [esp+0Ch] 0 +
mov eax [esi+18h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esp+80h] +
mov [esp] eax +
call sub_4060C0  +
test eax eax +
jnz loc_420744  +
mov eax [esp+80h] +
mov edi [esp+1Ch] +
mov [esp+8] eax +
mov eax [esp+18h] +
mov [esp+4] edi +
mov [esp] eax +
call sub_405F60  +
cmp edi eax +
setz al  +
movzx eax al +
jmp loc_420746  +
***
mov dword ptr [esp+28h] 8 +
mov dword ptr [esp+24h] offset sub_41FB20 +
mov eax [edi+28h] +
mov dword ptr [esp+20h] 0 +
shr eax 5 +
test al 42h +
jz loc_42090E  +
mov eax [ebp+1Ch] +
mov [esp+20h] eax +
mov ebx [ebp+4Ch] +
test ebx ebx +
jz loc_420A10  +
mov dword ptr [esp+2Ch] 0 +
xor esi esi +
mov dword ptr [esp+18h] 0 +
jmp loc_4209CA  +
lea eax [esp+30h] +
mov [esp+4] eax +
mov [esp] edi +
mov [esp+18h] edx +
call sub_42B7D0  +
test eax eax +
mov ecx eax +
js loc_420A00  +
mov eax [ebx] +
mov [esp+2Ch] ecx +
mov eax [eax] +
mov eax [eax] +
test eax eax +
jz loc_420980  +
mov edx [edi+4] +
cmp [eax+4] edx +
jz loc_420980  +
mov [esp+4] ebx +
mov [esp] edi +
mov [esp+1Ch] ecx +
call sub_42F280  +
mov ecx [esp+1Ch] +
test eax eax +
jz loc_420A00  +
mov eax [esp+20h] +
shl ecx 8 +
add esi 1 +
add eax [ebx+4] +
mov [esp+34h] eax +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
add ecx eax +
mov eax [ebx+8] +
mov [esp+38h] ecx +
mov [esp] edi +
mov [esp+3Ch] eax +
mov eax [esp+14h] +
mov [esp+8] eax +
lea eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+24h] +
call eax  +
mov eax [esp+28h] +
add [esp+14h] eax +
cmp esi [ebp+4Ch] +
jnb loc_420A10  +
mov eax [ebp+48h] +
mov ebx [eax+esi*4] +
mov eax [ebx] +
mov edx [eax] +
cmp edx [esp+18h] +
mov [esp+30h] edx +
jz loc_420A18  +
cmp dword ptr [edx+10h] offset off_476230 +
jnz loc_420930  +
mov ecx [edx+8] +
test ecx ecx +
jnz loc_420930  +
xor ecx ecx +
jmp loc_420954  +
***
mov eax [esp+68h] +
mov dword ptr [eax] 1 +
lea esi [esi+0] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+2Ch] +
jmp loc_420954  +
***
mov dword ptr [esp+28h] 0Ch +
mov dword ptr [esp+24h] offset sub_41FB60 +
jmp loc_4208F5  +
***
mov ebx [edx+3Ch] +
jmp loc_4208AE  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 4Ch +
mov eax [eax+4] +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_28] edx +
mov esi [esp+4Ch+arg_8] +
mov [esp+4Ch+var_2C] ecx +
mov eax [eax+1B0h] +
mov [esp+4Ch+var_30] eax +
mov eax [edi+18h] +
mov [esp+4Ch+var_4C] eax +
call sub_40EFC0  +
test eax eax +
mov ebp eax +
jz loc_420AC1  +
mov eax [edi+10h] +
mov edx [edi+14h] +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_4C] ebx +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_44] edx +
call sub_4060C0  +
test eax eax +
jz loc_420AD0  +
mov [esp+4Ch+var_4C] ebp +
call free  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi+18h] +
mov [esp+4Ch+var_44] ebx +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call sub_405EB0  +
cmp eax [edi+18h] +
jnz loc_420AB9  +
mov eax [edi+28h] +
mov [esp+4Ch+var_34] eax +
and eax 0FFFFFFFBh +
cmp eax 8 +
jnz loc_420C86  +
mov ecx [esp+4Ch+arg_10] +
mov edi ebp +
mov eax [ebx+80h] +
mov edx [esp+4Ch+arg_4] +
test ecx ecx +
cmovz eax [ebx+7Ch] +
mov [esp+4Ch+var_24] eax +
xor eax eax +
test edx edx +
jz loc_420C74  +
mov [esp+4Ch+var_20] ebp +
mov ebp eax +
jmp loc_420B81  +
cmp eax [esp+4Ch+var_24] +
ja loc_420C40  +
mov edx [esp+4Ch+arg_C] +
cmp [esp+4Ch+var_34] 0Ch +
lea eax [edx+eax*4-4] +
mov [esi] eax +
mov eax [esp+4Ch+var_10] +
mov [esi+8] eax +
jz loc_420BF9  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+28h] +
test eax eax +
jz loc_420C30  +
lea edx [esp+4Ch+var_18] +
add ebp 1 +
mov [esp+4Ch+var_48] esi +
add esi 10h +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_4C] ebx +
call eax  +
add edi [esp+4Ch+var_34] +
cmp ebp [esp+4Ch+arg_4] +
jz loc_420C70  +
cmp [esp+4Ch+var_34] 0Ch +
jz loc_420C10  +
mov eax [ebx+4] +
mov eax [eax+4Ch] +
mov [esp+4Ch+var_4C] edi +
call eax  +
lea ecx [edi+4] +
mov [esp+4Ch+var_18] eax +
mov eax [ebx+4] +
mov eax [eax+4Ch] +
mov [esp+4Ch+var_4C] ecx +
call eax  +
mov [esp+4Ch+var_10] 0 +
mov [esp+4Ch+var_14] eax +
mov ecx [ebx+28h] +
shr ecx 5 +
and ecx 42h +
mov ecx [esp+4Ch+var_18] +
jz loc_420BD2  +
mov edx [esp+4Ch+arg_10] +
test edx edx +
jnz loc_420BD2  +
mov edx [esp+4Ch+var_2C] +
sub ecx [edx] +
shr eax 8 +
test eax eax +
mov [esi+4] ecx +
jnz loc_420B27  +
mov eax off_4762CC +
cmp [esp+4Ch+var_34] 0Ch +
mov [esi] eax +
mov eax [esp+4Ch+var_10] +
mov [esi+8] eax +
jnz loc_420B4D  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+24h] +
test eax eax +
jnz loc_420B5C  +
jmp loc_420B4D  +
lea eax [esp+4Ch+var_18] +
mov [esp+4Ch+var_44] eax +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] ebx +
call sub_41FAD0  +
mov eax [esp+4Ch+var_14] +
jmp loc_420BB5  +
mov eax [esp+4Ch+var_30] +
mov eax [eax+24h] +
jmp loc_420B5C  +
mov edx [esp+4Ch+var_28] +
mov ecx [edx] +
mov [esp+4Ch+var_3C] eax +
mov eax [ebx] +
mov [esp+4Ch+var_40] ebp +
mov [esp+4Ch+var_4C] offset aSSRelocationDH +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] eax +
call off_476094  +
jmp loc_420BE0  +
mov ebp [esp+4Ch+var_20] +
mov [esp+4Ch+var_4C] ebp +
call free  +
mov eax 1 +
jmp loc_420AC3  +
mov [esp+4Ch+var_48] 582h +
mov [esp+4Ch+var_4C] offset a____Binutil_22 +
call sub_40C6C0  +
jmp loc_420AFB  +
***
push ebp  +
mov eax 1 +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+44h] +
mov edi [ebx+44h] +
mov esi [ebx+8Ch] +
test edi edi +
jz loc_420CC5  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+4Ch] +
test ecx ecx +
jnz loc_420D40  +
test byte ptr [ebx+14h] 4 +
jz loc_420CBD  +
mov edi [ebx+4Ch] +
test edi edi +
jz loc_420CBD  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_420E7C  +
mov eax [ecx+28h] +
xor ebp ebp +
test eax eax +
mov [esp+18h] eax +
jz loc_420CFD  +
mov eax [ecx+18h] +
xor edx edx +
div  dword ptr [esp+18h] +
mov ebp eax +
mov esi [esi+4Ch] +
test esi esi +
jz loc_420E6F  +
mov eax [esi+28h] +
mov dword ptr [esp+18h] 0 +
test eax eax +
mov [esp+1Ch] eax +
jz loc_420D28  +
mov eax [esi+18h] +
xor edx edx +
div  dword ptr [esp+1Ch] +
mov [esp+18h] eax +
mov eax [esp+18h] +
add eax ebp +
cmp edi eax +
jz loc_420E21  +
xor eax eax +
jmp loc_420CBD  +
***
mov edx [ebx+24h] +
test edx edx +
jz loc_420CBD  +
mov ecx esi +
mov esi [esi+28h] +
test esi esi +
jnz loc_420E06  +
xor eax eax +
xor ebp ebp +
mov dword ptr [esp+18h] 0 +
xor esi esi +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp+1Ch] ecx +
mov [esp] eax +
call sub_407B20  +
test eax eax +
mov edi eax +
jz loc_420D36  +
mov ecx [esp+1Ch] +
test ecx ecx +
jz loc_420DBB  +
mov edx [esp+4Ch] +
lea eax [ebx+1Ch] +
mov [esp] ecx +
mov ecx eax +
mov eax [esp+40h] +
mov [esp+8] edi +
mov [esp+4] ebp +
mov [esp+10h] edx +
mov edx [esp+48h] +
mov [esp+0Ch] edx +
mov edx ebx +
call sub_420A60  +
test eax eax +
jz loc_420D36  +
test esi esi +
jz loc_420DF9  +
mov eax [esp+4Ch] +
shl ebp 4 +
mov edx ebx +
add ebp edi +
lea ecx [ebx+1Ch] +
mov [esp+8] ebp +
mov [esp+10h] eax +
mov eax [esp+48h] +
mov [esp] esi +
mov [esp+0Ch] eax +
mov eax [esp+18h] +
mov [esp+4] eax +
mov eax [esp+40h] +
call sub_420A60  +
test eax eax +
jz loc_420D36  +
mov [ebx+44h] edi +
mov eax 1 +
jmp loc_420CBD  +
***
mov eax [ecx+18h] +
xor edx edx +
mov dword ptr [esp+18h] 0 +
div  esi +
xor esi esi +
mov ebp eax +
shl eax 4 +
jmp loc_420D66  +
***
test ecx ecx +
jz loc_420E35  +
mov eax [ebx+58h] +
mov edx [ebx+5Ch] +
xor edx [ecx+14h] +
xor eax [ecx+10h] +
or edx eax +
jz loc_420E8D  +
test esi esi +
jz loc_420E49  +
mov eax [ebx+58h] +
mov edx [ebx+5Ch] +
xor edx [esi+14h] +
xor eax [esi+10h] +
or edx eax +
jz loc_420E83  +
mov dword ptr [esp+4] 5E6h +
mov dword ptr [esp] offset a____Binutil_22 +
mov [esp+1Ch] ecx +
call sub_40C6C0  +
mov eax edi +
mov ecx [esp+1Ch] +
shl eax 4 +
jmp loc_420D66  +
***
mov dword ptr [esp+18h] 0 +
jmp loc_420D28  +
***
xor ebp ebp +
jmp loc_420CFD  +
***
mov eax edi +
shl eax 4 +
jmp loc_420D66  +
***
mov eax edi +
shl eax 4 +
mov [esp+4] eax +
mov eax [esp+40h] +
mov [esp+1Ch] ecx +
mov [esp] eax +
call sub_407B20  +
mov ecx [esp+1Ch] +
test eax eax +
mov edi eax +
jnz loc_420D88  +
xor eax eax +
jmp loc_420CBD  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [eax+1B0h] +
mov eax [eax+4Ch] +
movzx edx byte ptr [edx+1ACh] +
mov [esp+10h+var_10] esi +
shr dl 7 +
mov [esp+10h+var_4] edx +
call eax  +
lea ecx [esi+18h] +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] ecx +
call eax  +
lea ecx [esi+4] +
mov [ebx+4] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] ecx +
call eax  +
mov edx [esp+10h+var_4] +
test dl dl +
mov [ebx+8] eax +
mov eax [edi+4] +
jnz loc_420F80  +
lea edx [esi+8] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+0Ch] +
mov [ebx+0Ch] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+10h] eax +
mov eax [edi+4] +
lea edx [esi+10h] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+14h] +
add esi 1Ch +
mov [ebx+14h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+18h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+1Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea edx [esi+8] +
mov eax [eax+50h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+0Ch] +
mov [ebx+0Ch] eax +
mov eax [edi+4] +
mov eax [eax+50h] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+10h] eax +
jmp loc_420F3F  +
***
jmp sub_420FB0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov edi [esp+28h+arg_4] +
mov ebx [esp+28h+arg_8] +
mov eax [esi+4] +
mov edx [eax+1B0h] +
test byte ptr [edx+1AEh] 10h +
jnz loc_420FDA  +
mov ebp [edi+10h] +
mov edx [edi] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+4] +
mov edx [edi+8] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+8] +
mov edx [edi+0Ch] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea edx [ebx+0Ch] +
mov eax [eax+54h] +
mov [esp+28h+var_24] edx +
mov [esp+28h+var_28] ebp +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+10h] +
mov edx [edi+14h] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+14h] +
mov edx [edi+18h] +
mov eax [eax+54h] +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
mov eax [esi+4] +
lea ecx [ebx+18h] +
mov edx [edi+4] +
add ebx 1Ch +
mov eax [eax+54h] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_24] ecx +
call eax  +
mov eax [esi+4] +
mov edx [edi+1Ch] +
mov eax [eax+54h] +
mov [esp+28h+arg_4] ebx +
mov [esp+28h+arg_0] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+58h] +
lea edi [esp+10h] +
mov ebp [esp+50h] +
mov esi [esp+54h] +
test ebx ebx +
jnz loc_4210A8  +
jmp loc_4210E0  +
add esi 20h +
sub ebx 1 +
jz loc_4210E0  +
mov [esp+8] edi +
mov [esp+4] esi +
mov [esp] ebp +
call sub_420FB0  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 20h +
mov [esp] edi +
call sub_405F60  +
cmp eax 20h +
jz loc_4210A0  +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0C0h] +
lea esi [esp+60h] +
mov edi [esp+0C4h] +
mov edx esi +
mov ebp [esp+0C8h] +
mov ebx [eax+0A0h] +
mov eax [ebx+40h] +
mov [esp+10h] eax +
mov eax [ebx+44h] +
mov [esp+1Ch] eax +
mov eax [ebx] +
mov [esp+60h] eax +
mov eax [ebx+4] +
mov [esp+64h] eax +
mov eax [ebx+8] +
mov [esp+68h] eax +
mov eax [ebx+0Ch] +
mov [esp+6Ch] eax +
mov eax [ebx+10h] +
mov [esp+70h] eax +
mov eax [ebx+14h] +
mov [esp+74h] eax +
mov eax [ebx+18h] +
mov [esp+78h] eax +
mov eax [ebx+1Ch] +
mov [esp+7Ch] eax +
mov eax [ebx+20h] +
mov [esp+80h] eax +
mov eax [ebx+24h] +
mov [esp+84h] eax +
mov eax [ebx+28h] +
mov [esp+88h] eax +
mov eax [ebx+2Ch] +
mov ecx [esp+0C0h] +
mov [esp+8Ch] eax +
mov eax [ebx+30h] +
mov [esp+90h] eax +
mov eax [ebx+34h] +
mov [esp+94h] eax +
mov eax [ebx+38h] +
mov [esp+98h] eax +
mov eax [ebx+3Ch] +
mov dword ptr [esp+78h] 0 +
mov dword ptr [esp+74h] 0 +
mov [esp+9Ch] eax +
lea eax [ecx+4] +
lea ecx [esp+2Ch] +
mov [esp+14h] eax +
call sub_420580  +
lea ecx [esp+2Ch] +
mov [esp+8] ebp +
mov dword ptr [esp+4] 34h +
mov [esp] ecx +
call edi  +
mov eax [ebx+30h] +
xor ebx ebx +
mov edx [esp+1Ch] +
test eax eax +
mov [esp+18h] eax +
jz loc_421250  +
mov [esp+0C4h] edi +
mov edi edx +
lea esi [esi+0] +
mov eax [esp+0C0h] +
add ebx 1 +
mov [esp+4] edi +
add edi 20h +
mov [esp+8] esi +
mov [esp] eax +
call sub_420FB0  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 20h +
mov [esp] esi +
call dword ptr [esp+0C4h]  +
cmp ebx [esp+18h] +
jnz loc_421210  +
mov edi [esp+0C4h] +
mov eax [esp+0C0h] +
xor ebx ebx +
mov eax [eax+0A0h] +
mov eax [eax+214h] +
test eax eax +
mov [esp+18h] eax +
jz loc_421367  +
mov eax [esp+10h] +
lea ecx [esp+2Ch] +
mov eax [eax+ebx*4] +
mov edx [eax] +
mov [esp+60h] edx +
mov edx [eax+4] +
mov [esp+64h] edx +
mov edx [eax+8] +
mov [esp+68h] edx +
mov edx [eax+0Ch] +
mov [esp+6Ch] edx +
mov edx [eax+10h] +
mov [esp+70h] edx +
mov edx [eax+14h] +
mov [esp+74h] edx +
mov edx [eax+18h] +
mov [esp+78h] edx +
mov edx [eax+1Ch] +
mov [esp+7Ch] edx +
mov edx [eax+20h] +
mov [esp+80h] edx +
mov edx [eax+24h] +
mov [esp+84h] edx +
mov edx [eax+28h] +
mov [esp+88h] edx +
mov edx [eax+2Ch] +
mov [esp+8Ch] edx +
mov edx [eax+30h] +
mov [esp+90h] edx +
mov eax [eax+34h] +
mov edx esi +
mov dword ptr [esp+70h] 0 +
mov dword ptr [esp+74h] 0 +
mov [esp+94h] eax +
mov eax [esp+14h] +
call sub_420360  +
lea eax [esp+2Ch] +
mov [esp+8] ebp +
mov dword ptr [esp+4] 28h +
mov [esp] eax +
call edi  +
cmp dword ptr [esp+64h] 8 +
jz loc_42135A  +
mov edx [esp+90h] +
mov dword ptr [esp+28h] 0 +
test edx edx +
jz loc_421377  +
mov eax [esp+78h] +
mov [esp+8] ebp +
mov [esp] edx +
mov [esp+4] eax +
call edi  +
mov eax [esp+28h] +
test eax eax +
jz loc_42135A  +
mov [esp] eax +
call free  +
add ebx 1 +
cmp ebx [esp+18h] +
jnz loc_421271  +
add esp 0ACh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0C0h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_426C70  +
test eax eax +
jz loc_42135A  +
mov edx [eax+6Ch] +
test edx edx +
jnz loc_421339  +
and dword ptr [eax+14h] 0FFFFBFFFh +
lea ecx [esp+28h] +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] ecx +
mov [esp] eax +
call sub_4111A0  +
test eax eax +
jz loc_42135A  +
mov edx [esp+28h] +
test edx edx +
jz loc_42135A  +
jmp loc_421339  +
***
mov dword ptr [esp+0] 3 +
call sub_40C770  +
xor eax eax +
add esp 0FCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+84h] 7Fh +
jnz sub_42140B  +
cmp byte ptr [esp+85h] 45h +
jnz sub_42140B  +
cmp byte ptr [esp+86h] 4Ch +
jnz sub_42140B  +
cmp byte ptr [esp+87h] 46h +
jnz sub_42140B  +
cmp byte ptr [esp+8Ah] 1 +
jnz sub_42140B  +
cmp byte ptr [esp+88h] 1 +
jnz sub_42140B  +
movzx eax byte ptr [esp+89h] +
cmp al 1 +
jz loc_421875  +
cmp al 2 +
jnz sub_42140B  +
mov eax [ebx+4] +
mov edi [eax+0Ch] +
mov [esp+24h] eax +
test edi edi +
jnz sub_42140B  +
***
mov eax [esp+arg_20] +
mov eax [eax+78h] +
mov [esp+0] ebx +
call eax  +
test eax eax +
jz loc_421417  +
mov ebp [ebx+0A0h] +
lea eax [ebx+4] +
mov edx esi +
mov [esp+arg_1C] eax +
mov ecx ebp +
call sub_420440  +
movzx eax word ptr [ebp+24h] +
cmp ax 4 +
jz sub_42140B  +
mov edx [ebp+18h] +
test edx edx +
jnz loc_4214C7  +
cmp ax 1 +
jz sub_42140B  +
cmp dword ptr [ebp+34h] 28h +
jz loc_4214D8  +
mov ecx [ebp+38h] +
test ecx ecx +
jnz sub_42140B  +
test edx edx +
jnz loc_4214E7  +
mov edi [ebp+38h] +
test edi edi +
jnz sub_42140B  +
mov edx [ebx+4] +
mov ecx [edx+1B0h] +
mov edx [ecx+174h] +
mov edi ecx +
mov [esp+arg_24] ecx +
cmp byte ptr [edx+0Ah] 20h +
jnz sub_42140B  +
mov ecx [ecx+8] +
movzx edx word ptr [ebp+26h] +
cmp ecx edx +
jz loc_421539  +
mov esi [edi+16Ch] +
test esi esi +
jz loc_42151F  +
cmp edx esi +
jz loc_421539  +
mov edi [esp+arg_24] +
mov esi [edi+170h] +
test esi esi +
jz loc_421531  +
cmp edx esi +
jz loc_421539  +
test ecx ecx +
jnz sub_42140B  +
cmp ax 2 +
lea esi [esi+0] +
jz loc_4218CB  +
cmp ax 3 +
jz loc_421A99  +
mov esi [ebp+30h] +
test esi esi +
jz loc_42155E  +
or dword ptr [ebx+28h] 2000h +
mov eax [esp+arg_24] +
mov eax [eax] +
mov [esp+arg_4] 0 +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_40ED50  +
test eax eax +
mov eax [esp+arg_24] +
jnz loc_421890  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_421417  +
mov esi [ebp+18h] +
test esi esi +
jnz loc_4218D5  +
mov eax [ebp+38h] +
test eax eax +
jz loc_4218B7  +
cmp eax 4924924h +
ja sub_42140B  +
imul eax eax +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_407B20  +
test eax eax +
mov esi eax +
jz loc_421417  +
mov eax [ebp+38h] +
mov ecx eax +
mov [esp+arg_18] eax +
mov eax [ebx+0A0h] +
mov [eax+214h] ecx +
mov eax ecx +
mov edi [ebx+0A0h] +
shl eax 2 +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_407B20  +
mov [edi+40h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+40h] +
test eax eax +
jz loc_421417  +
mov eax [esp+arg_B4] +
xor edx edx +
mov ecx esi +
mov edi [esp+arg_18] +
mov [esi] eax +
mov eax [esp+arg_B8] +
test edi edi +
mov [esi+4] eax +
mov eax [esp+arg_BC] +
mov [esi+8] eax +
mov eax [esp+arg_C0] +
mov [esi+0Ch] eax +
mov eax [esp+arg_C4] +
mov [esi+10h] eax +
mov eax [esp+arg_C8] +
mov [esi+14h] eax +
mov eax [esp+arg_CC] +
mov [esi+18h] eax +
mov eax [esp+arg_D0] +
mov [esi+1Ch] eax +
mov eax [esp+arg_D4] +
mov [esi+20h] eax +
mov eax [esp+arg_D8] +
mov [esi+24h] eax +
mov eax [esp+arg_DC] +
mov [esi+28h] eax +
mov eax [esp+arg_E0] +
mov [esi+2Ch] eax +
mov eax [esp+arg_E4] +
mov [esi+30h] eax +
mov eax [esp+arg_E8] +
mov [esi+34h] eax +
jz loc_4216CC  +
mov [esp+arg_28] ebp +
mov ebp [esp+arg_18] +
jmp loc_4216B2  +
***
sub eax 0FF00h +
cmp eax 1 +
ja sub_42140B  +
mov eax [esi+8] +
test al 40h +
jnz loc_421860  +
mov edx [esi+4] +
cmp edx 4 +
jz loc_421860  +
cmp edx 9 +
jz loc_421860  +
mov edx [esi+18h] +
test edx edx +
jz loc_4217B8  +
test al 2 +
jz loc_4217B8  +
cmp dword ptr [esi+4] 8 +
jz loc_4217B8  +
mov eax [esi+0Ch] +
xor edx edx +
mov ecx [ebp+14h] +
sub eax [esi+10h] +
sbb edx [esi+14h] +
mov [esp+arg_8] 0 +
mov [esp+arg_4] ecx +
mov [esp+0] eax +
mov [esp+arg_0] edx +
call sub_473140  +
or edx eax +
jz loc_4217B8  +
mov eax [esp+arg_10C] +
and dword ptr [eax+28h] 0FFFFDFFFh +
mov eax [esp+arg_28] +
add edi 1 +
add esi 38h +
cmp [eax+38h] edi +
ja loc_4216F3  +
mov ebx [esp+arg_10C] +
mov ebp eax +
mov ecx [ebp+38h] +
test ecx ecx +
jz loc_4218B7  +
mov eax [ebx+0A0h] +
mov eax [eax+214h] +
cmp [ebp+3Ch] eax +
jnb loc_421B5D  +
mov eax [ebp+30h] +
test eax eax +
jnz loc_421AA5  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+44h] 0 +
mov edx [ebp+3Ch] +
test edx edx +
jz loc_421A1D  +
mov eax [ebp+18h] +
test eax eax +
jz loc_421A1D  +
mov eax [ebx+0A0h] +
mov edi 1 +
mov esi [eax+214h] +
cmp esi 1 +
ja loc_42184B  +
jmp loc_421A07  +
add edi 1 +
cmp edi esi +
jz loc_421A07  +
mov [esp+arg_0] edi +
mov [esp+0] ebx +
call sub_424D70  +
test eax eax +
jnz loc_421840  +
jmp loc_421417  +
mov ecx [esp+arg_18] +
cmp ecx [esi+20h] +
ja loc_42176F  +
lea esi [esi+0] +
jmp sub_42140B  +
mov eax [ebx+4] +
cmp dword ptr [eax+0Ch] 1 +
mov [esp+arg_20] eax +
jz loc_421482  +
jmp sub_42140B  +
mov edx [eax+8] +
test edx edx +
jz loc_42158F  +
mov eax [eax+0Ch] +
movzx edx byte ptr [ebp+7] +
cmp edx eax +
jz loc_42158F  +
test eax eax +
jz loc_42158F  +
jmp sub_42140B  +
mov edi [ebp+3Ch] +
test edi edi +
lea esi [esi+0] +
jz loc_4217F4  +
jmp sub_42140B  +
or dword ptr [ebx+28h] 40h +
nop   +
jmp loc_421550  +
xor edi edi +
mov [esp+arg_8] 0 +
mov [esp+arg_0] esi +
mov [esp+arg_4] edi +
mov [esp+0] ebx +
call sub_4060C0  +
test eax eax +
jnz loc_421417  +
lea eax [esp+arg_58] +
mov [esp+arg_4] ebx +
mov [esp+arg_0] 28h +
mov [esp+0] eax +
mov [esp+arg_18] eax +
call sub_405EB0  +
cmp eax 28h +
jnz loc_421417  +
mov eax [esp+arg_1C] +
lea ecx [esp+arg_B4] +
mov edx [esp+arg_18] +
call sub_420260  +
mov eax [ebp+38h] +
test eax eax +
jnz loc_421950  +
mov eax [esp+arg_CC] +
lea edx [eax-1] +
cmp edx 0FFFFFEFEh +
mov [ebp+38h] eax +
ja sub_42140B  +
cmp dword ptr [ebp+3Ch] 0FFFFh +
jz loc_421B93  +
cmp dword ptr [ebp+30h] 0FFFFh +
jz loc_421B7C  +
cmp eax 1 +
jz loc_4215B0  +
cmp eax 4924924h +
ja sub_42140B  +
lea eax [eax+eax*4] +
xor edx edx +
lea eax ds:0FFFFFFD8h[eax*8] +
add eax esi +
adc edx edi +
cmp [ebp+18h] eax +
jnb sub_42140B  +
mov [esp+arg_8] 0 +
mov [esp+arg_0] eax +
mov [esp+arg_4] edx +
mov [esp+0] ebx +
call sub_4060C0  +
test eax eax +
jnz loc_421417  +
mov eax [esp+arg_18] +
mov [esp+arg_4] ebx +
mov [esp+arg_0] 28h +
mov [esp+0] eax +
call sub_405EB0  +
cmp eax 28h +
jnz loc_421417  +
mov [esp+arg_8] 0 +
mov eax [ebp+18h] +
mov [esp+arg_4] 0 +
mov [esp+0] ebx +
add eax 28h +
mov [esp+arg_0] eax +
call sub_4060C0  +
test eax eax +
jz loc_42159A  +
jmp loc_421417  +
mov [esp+0] ebx +
lea esi [esi+0] +
call sub_4245E0  +
test eax eax +
jz sub_42140B  +
mov eax [esp+arg_24] +
mov eax [eax+30h] +
test eax eax +
jz loc_421A35  +
mov [esp+0] ebx +
call eax  +
test eax eax +
jz sub_42140B  +
mov eax [ebp+10h] +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_40CDA0  +
mov esi [ebx+64h] +
test esi esi +
jnz loc_421A57  +
jmp loc_421A90  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_421A90  +
mov eax [esi+8Ch] +
mov edx [eax+4] +
cmp edx 4 +
jz loc_421A6A  +
cmp edx 9 +
jnz loc_421A50  +
mov eax [eax+20h] +
test eax eax +
jz loc_421A50  +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_426C70  +
test eax eax +
jz loc_421A50  +
test byte ptr [eax+15h] 20h +
jz loc_421A50  +
or dword ptr [esi+14h] 2000h +
jmp loc_421A50  +
mov eax [esp+arg_20] +
jmp loc_421419  +
or dword ptr [ebx+28h] 800h +
jmp loc_421550  +
cmp eax 7FFFFFFh +
ja sub_42140B  +
shl eax 5 +
mov esi [ebx+0A0h] +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_407B20  +
mov [esi+44h] eax +
mov eax [ebx+0A0h] +
mov esi [eax+44h] +
test esi esi +
jz loc_421417  +
mov [esp+arg_8] 0 +
mov eax [ebp+14h] +
mov [esp+arg_4] 0 +
mov [esp+0] ebx +
mov [esp+arg_0] eax +
call sub_4060C0  +
test eax eax +
jnz loc_421417  +
mov ecx [ebp+30h] +
mov eax [ebx+0A0h] +
test ecx ecx +
mov edi [eax+44h] +
jz loc_42180C  +
xor esi esi +
jmp loc_421B3B  +
lea eax [esp+arg_38] +
add esi 1 +
mov [esp+arg_4] edi +
add edi 20h +
mov [esp+arg_0] eax +
mov [esp+0] ebx +
call sub_420EC0  +
cmp [ebp+30h] esi +
jbe loc_42180C  +
lea eax [esp+arg_38] +
mov [esp+arg_4] ebx +
mov [esp+arg_0] 20h +
mov [esp+0] eax +
call sub_405EB0  +
cmp eax 20h +
jz loc_421B18  +
jmp loc_421417  +
mov eax [ebx] +
mov dword ptr [ebp+3Ch] 0 +
mov dword ptr [esp+0] offset aWarningSHasACo +
mov [esp+arg_0] eax +
call off_476094  +
jmp loc_4217F4  +
***
mov edx [esp+arg_D4] +
test edx edx +
jz loc_42196A  +
mov [ebp+30h] edx +
jmp loc_42196A  +
mov edx [esp+arg_D0] +
mov [ebp+3Ch] edx +
jmp loc_42195D  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0BCh +
mov eax [esp+0D4h] +
lea ebx [esp+3Ch] +
mov edi [esp+0D0h] +
mov dword ptr [esp+8] 34h +
mov [esp+4] ebx +
mov [esp] eax +
call dword ptr [esp+0E0h]  +
test eax eax +
mov esi eax +
jnz loc_421FF0  +
cmp byte ptr [esp+3Ch] 7Fh +
jz loc_421C10  +
mov dword ptr [esp] 3 +
call sub_40C770  +
xor eax eax +
add esp 0BCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+3Dh] 45h +
jnz loc_421BF3  +
cmp byte ptr [esp+3Eh] 4Ch +
jnz loc_421BF3  +
cmp byte ptr [esp+3Fh] 46h +
jnz loc_421BF3  +
cmp byte ptr [esp+42h] 1 +
jnz loc_421BF3  +
cmp byte ptr [esp+40h] 1 +
jnz loc_421BF3  +
movzx eax byte ptr [esp+41h] +
cmp al 1 +
jz loc_421E86  +
cmp al 2 +
jnz loc_421BF3  +
mov eax [edi+4] +
mov ecx [eax+0Ch] +
test ecx ecx +
jnz loc_421BF3  +
lea eax [edi+4] +
mov edx ebx +
lea ecx [esp+70h] +
call sub_420440  +
cmp dword ptr [esp+9Ch] 20h +
jnz loc_421BF3  +
mov eax [esp+0A0h] +
test eax eax +
jz loc_421BF3  +
shl eax 6 +
mov [esp] eax +
call sub_40EFC0  +
test eax eax +
mov ecx eax +
mov [esp+24h] eax +
jz loc_421BFF  +
mov eax [esp+0A0h] +
mov [esp+4] ecx +
shl eax 5 +
mov [esp+8] eax +
mov eax [esp+0D4h] +
add eax [esp+84h] +
mov [esp] eax +
call dword ptr [esp+0E0h]  +
test eax eax +
mov ebx eax +
jnz loc_422023  +
mov eax [esp+0A0h] +
mov ebx eax +
shl ebx 5 +
add ebx [esp+24h] +
test eax eax +
mov [esp+28h] ebx +
jz loc_422012  +
mov ebp [esp+24h] +
xor esi esi +
mov ebx [esp+28h] +
mov dword ptr [esp+20h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 0 +
jmp loc_421D18  +
add esi 1 +
add ebp 20h +
add ebx 20h +
cmp [esp+0A0h] esi +
jbe loc_421D73  +
mov [esp+8] ebx +
mov [esp+4] ebp +
mov [esp] edi +
call sub_420EC0  +
cmp dword ptr [ebx] 1 +
jnz loc_421D06  +
mov eax [ebx+8] +
mov edx [ebx+14h] +
add edx eax +
cmp edx [esp+14h] +
jbe loc_421D43  +
mov [esp+14h] edx +
mov [esp+1Ch] ebx +
mov edx [esp+18h] +
test edx edx +
jnz loc_421D06  +
mov ecx [ebx+1Ch] +
mov edx [ebx+0Ch] +
cmp ecx 1 +
jbe loc_421D5C  +
neg ecx  +
and eax ecx +
and edx ecx +
test eax eax +
jnz loc_421D06  +
mov eax [esp+0D4h] +
mov [esp+18h] ebx +
sub eax edx +
mov [esp+20h] eax +
jmp loc_421D06  +
***
mov eax [esp+14h] +
test eax eax +
jz loc_422012  +
mov eax [esp+88h] +
mov dword ptr [esp+2Ch] 0 +
test eax eax +
jz loc_421DC1  +
mov edx [esp+0A8h] +
test edx edx +
jz loc_421DC1  +
mov ecx [esp+0A4h] +
test ecx ecx +
jz loc_421DC1  +
imul edx ecx +
mov ecx [esp+1Ch] +
add eax edx +
mov [esp+2Ch] eax +
mov eax [ecx+14h] +
cmp eax [ecx+18h] +
jz loc_42204A  +
mov eax [esp+14h] +
mov [esp] eax +
call sub_40F150  +
test eax eax +
mov ebp eax +
jz loc_4220C0  +
mov eax [esp+0A0h] +
xor esi esi +
mov ebx [esp+28h] +
test eax eax +
jz loc_421E9F  +
mov [esp+0D0h] edi +
mov edi [esp+0E0h] +
jmp loc_421E13  +
add esi 1 +
add ebx 20h +
cmp [esp+0A0h] esi +
jbe loc_421E98  +
cmp dword ptr [ebx] 1 +
jnz loc_421E00  +
mov eax [ebx+8] +
mov edx [ebx+14h] +
mov ecx [ebx+0Ch] +
add edx eax +
cmp ebx [esp+18h] +
jz loc_421FC0  +
cmp [esp+1Ch] ebx +
cmovz edx [esp+14h] +
add ecx [esp+20h] +
sub edx eax +
add eax ebp +
mov [esp+8] edx +
mov [esp+4] eax +
mov [esp] ecx +
call edi  +
test eax eax +
jz loc_421E00  +
mov [esp+14h] eax +
mov eax [esp+24h] +
mov [esp] eax +
call free  +
mov [esp] ebp +
call free  +
mov dword ptr [esp] 1 +
call sub_40C770  +
call ds:__imp__errno  +
mov edx [esp+14h] +
mov [eax] edx +
xor eax eax +
jmp loc_421C01  +
***
mov eax [edi+4] +
cmp dword ptr [eax+0Ch] 1 +
jz loc_421C4E  +
jmp loc_421BF3  +
***
mov edi [esp+0D0h] +
mov eax [esp+24h] +
mov [esp] eax +
call free  +
mov eax [esp+2Ch] +
cmp [esp+14h] eax +
jb loc_421FD0  +
mov eax [esp+3Ch] +
mov [ebp+0] eax +
mov eax [esp+40h] +
mov [ebp+4] eax +
mov eax [esp+44h] +
mov [ebp+8] eax +
mov eax [esp+48h] +
mov [ebp+0Ch] eax +
mov eax [esp+4Ch] +
mov [ebp+10h] eax +
mov eax [esp+50h] +
mov [ebp+14h] eax +
mov eax [esp+54h] +
mov [ebp+18h] eax +
mov eax [esp+58h] +
mov [ebp+1Ch] eax +
mov eax [esp+5Ch] +
mov [ebp+20h] eax +
mov eax [esp+60h] +
mov [ebp+24h] eax +
mov eax [esp+64h] +
mov [ebp+28h] eax +
mov eax [esp+68h] +
mov [ebp+2Ch] eax +
mov eax [esp+6Ch] +
mov [ebp+30h] eax +
mov dword ptr [esp] 8 +
call sub_40EFC0  +
test eax eax +
mov esi eax +
jz loc_4220A3  +
call sub_407330  +
test eax eax +
mov ebx eax +
jz loc_42209B  +
mov dword ptr [esp] offset aInMemory +
call sub_45A840  +
mov [ebx] eax +
mov eax [edi+4] +
mov [ebx+4] eax +
mov eax [esp+14h] +
mov [esi+4] ebp +
mov [esi] eax +
mov eax [ebx+28h] +
mov [ebx+8] esi +
mov dword ptr [ebx+0Ch] offset off_4798C0 +
mov dword ptr [ebx+38h] 0 +
and eax 0FF80001Fh +
or eax 10000h +
mov [ebx+28h] eax +
and eax 7 +
or eax 8 +
mov dword ptr [ebx+3Ch] 0 +
mov [ebx+28h] al +
mov dword ptr [esp] 0 +
call time  +
or byte ptr [ebx+2Bh] 4 +
mov [ebx+20h] eax +
mov eax [esp+0DCh] +
test eax eax +
jz loc_42200B  +
mov eax [esp+0DCh] +
mov ecx [esp+20h] +
mov [eax] ecx +
add esp 0BCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub ecx eax +
xor eax eax +
jmp loc_421E2D  +
***
xor edx edx +
xor ecx ecx +
mov dword ptr [esp+5Ch] 0 +
mov [esp+6Ch] dx +
mov [esp+6Eh] cx +
jmp loc_421EB9  +
***
mov dword ptr [esp] 1 +
call sub_40C770  +
call ds:__imp__errno  +
mov [eax] esi +
xor eax eax +
jmp loc_421C01  +
***
mov eax ebx +
jmp loc_421C01  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
jmp loc_421BF3  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
mov dword ptr [esp] 1 +
call sub_40C770  +
call ds:__imp__errno  +
mov [eax] ebx +
xor eax eax +
jmp loc_421C01  +
***
mov ecx [esp+2Ch] +
cmp ecx [esp+0D8h] +
jbe loc_4220B0  +
mov edx [edi+4] +
mov ecx [esp+1Ch] +
mov edx [edx+1B0h] +
add eax [ecx+8] +
cmp [esp+2Ch] eax +
mov edx [edx+14h] +
jbe loc_421DC1  +
cmp edx 1 +
jbe loc_421DC1  +
mov ecx [esp+2Ch] +
lea eax [edx+eax-1] +
neg edx  +
and eax edx +
cmp ecx eax +
mov eax [esp+14h] +
cmovbe eax ecx +
mov [esp+14h] eax +
jmp loc_421DC1  +
***
mov [esp] esi +
call free  +
mov [esp] ebp +
call free  +
jmp loc_421BFF  +
***
mov eax [esp+0D8h] +
mov [esp+14h] eax +
jmp loc_421DC1  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_421C01  +
***
mov eax [esp+4] +
movzx edx byte ptr [esp+8] +
shl eax 8 +
add eax edx +
retn   +
***
mov eax [esp+4] +
shr eax 8 +
retn   +
***
mov eax [esp+4] +
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov eax [eax+10h] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov eax [eax] +
retn   +
***
mov eax [esp+4] +
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov eax [eax+4] +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov edx [esp+24h] +
mov eax [esp+20h] +
mov ecx [edx+4] +
cmp [eax+4] ecx +
jz loc_422190  +
mov dword ptr [esp] 1 +
call sub_40C770  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [eax+0A0h] +
mov eax [eax+930h] +
mov esi [eax+0Ch] +
test esi esi +
jz loc_4221D7  +
mov ebx [edx] +
mov dword ptr [esp+4] 2Fh +
mov [esp] ebx +
call strrchr  +
mov [esp+4] esi +
test eax eax +
lea edx [eax+1] +
cmovnz ebx edx +
mov [esp] ebx +
call strcmp  +
test eax eax +
setz al  +
add esp 14h +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
mov eax 1 +
jmp loc_422183  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0CCh +
mov ebx [esp+0E0h] +
lea esi [esp+54h] +
mov dword ptr [esp+4] 34h +
mov [esp] esi +
mov [esp+8] ebx +
call sub_405EB0  +
cmp eax 34h +
jz loc_422231  +
call sub_40C520  +
cmp eax 1 +
jz loc_422224  +
mov dword ptr [esp] 3 +
call sub_40C770  +
xor eax eax +
add esp 0CCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp byte ptr [esp+54h] 7Fh +
jnz loc_422218  +
cmp byte ptr [esp+55h] 45h +
jnz loc_422218  +
cmp byte ptr [esp+56h] 4Ch +
jnz loc_422218  +
cmp byte ptr [esp+57h] 46h +
jnz loc_422218  +
cmp byte ptr [esp+58h] 1 +
jnz loc_422218  +
movzx eax byte ptr [esp+59h] +
cmp al 1 +
jz loc_422480  +
cmp al 2 +
jnz loc_422218  +
mov eax [ebx+4] +
mov edi [eax+8] +
test edi edi +
jnz loc_422218  +
mov eax [eax+80h] +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_422224  +
mov ebp [ebx+0A0h] +
lea edi [ebx+4] +
mov edx esi +
mov eax edi +
mov ecx ebp +
call sub_420440  +
mov eax [ebx+4] +
movzx esi word ptr [ebp+26h] +
mov eax [eax+1B0h] +
mov ecx eax +
mov [esp+18h] eax +
mov eax [eax+8] +
cmp eax esi +
jz loc_422334  +
mov edx [ecx+16Ch] +
test edx edx +
jz loc_4222BE  +
cmp esi edx +
jz loc_422334  +
mov ecx [esp+18h] +
mov edx [ecx+170h] +
test edx edx +
jz loc_4222D0  +
cmp esi edx +
jz loc_422334  +
test eax eax +
jnz loc_422218  +
mov eax off_4760A8 +
mov edx [eax] +
test edx edx +
jnz loc_4222EE  +
jmp loc_422334  +
add eax 4 +
mov edx [eax] +
test edx edx +
jz loc_422334  +
cmp dword ptr [edx+4] 5 +
jnz loc_4222E5  +
mov edx [edx+1B0h] +
mov ecx [edx+174h] +
cmp byte ptr [ecx+0Ah] 20h +
jnz loc_4222E5  +
cmp esi [edx+8] +
jz loc_422218  +
mov ecx [edx+16Ch] +
test ecx ecx +
jz loc_422321  +
cmp esi ecx +
jz loc_422218  +
mov edx [edx+170h] +
test edx edx +
jz loc_4222E5  +
cmp esi edx +
jnz loc_4222E5  +
jmp loc_422218  +
***
mov esi [ebp+14h] +
test esi esi +
jz loc_422218  +
cmp word ptr [ebp+24h] 4 +
jnz loc_422218  +
cmp dword ptr [ebp+2Ch] 20h +
jnz loc_422218  +
mov edx [ebp+18h] +
mov eax [ebp+30h] +
test edx edx +
jz loc_422369  +
cmp eax 0FFFFh +
jz loc_42258F  +
cmp eax 1 +
jbe loc_4223D5  +
cmp eax 7FFFFFFh +
ja loc_422218  +
mov ecx [ebp+14h] +
add eax 7FFFFFFh +
xor edx edx +
shl eax 5 +
lea esi [eax+ecx] +
cmp ecx esi +
jnb loc_422218  +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] esi +
mov [esp+8] edx +
mov [esp] ebx +
call sub_4060C0  +
test eax eax +
jnz loc_422224  +
lea eax [esp+88h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 20h +
mov [esp] eax +
call sub_405EB0  +
cmp eax 20h +
jnz loc_422224  +
mov dword ptr [esp+0Ch] 0 +
mov eax [ebp+14h] +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
mov [esp+4] eax +
call sub_4060C0  +
test eax eax +
jnz loc_422218  +
mov eax [ebp+30h] +
mov [esp] ebx +
shl eax 5 +
mov [esp+4] eax +
call sub_407B20  +
test eax eax +
mov edi eax +
mov [esp+1Ch] eax +
jz loc_422224  +
mov ecx [ebp+30h] +
mov eax [ebx+0A0h] +
test ecx ecx +
mov [eax+44h] edi +
jz loc_422497  +
lea eax [esp+88h] +
xor esi esi +
mov [esp+14h] ebp +
mov ebp eax +
jmp loc_42245F  +
mov [esp+8] edi +
add esi 1 +
add edi 20h +
mov [esp+4] ebp +
mov [esp] ebx +
call sub_420EC0  +
mov eax [esp+14h] +
cmp [eax+30h] esi +
jbe loc_422495  +
mov [esp+8] ebx +
mov dword ptr [esp+4] 20h +
mov [esp] ebp +
call sub_405EB0  +
cmp eax 20h +
jz loc_422440  +
jmp loc_422224  +
***
mov eax [ebx+4] +
cmp dword ptr [eax+8] 1 +
jz loc_42226F  +
lea esi [esi+0] +
jmp loc_422218  +
***
mov ebp eax +
mov eax [esp+18h] +
mov eax [eax] +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
mov [esp+4] eax +
call sub_40ED50  +
test eax eax +
jnz loc_4224C4  +
mov eax [esp+18h] +
mov edx [eax+8] +
test edx edx +
jnz loc_422224  +
mov eax [esp+18h] +
mov eax [eax+30h] +
test eax eax +
jz loc_4224DC  +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_422218  +
mov eax [ebp+30h] +
xor esi esi +
mov edi [esp+1Ch] +
test eax eax +
jnz loc_4224FD  +
jmp loc_422601  +
mov eax [ebp+30h] +
add esi 1 +
add edi 20h +
cmp eax esi +
jbe loc_422516  +
mov [esp+8] esi +
mov [esp+4] edi +
mov [esp] ebx +
call sub_4271F0  +
test eax eax +
jnz loc_4224F0  +
jmp loc_422224  +
***
test eax eax +
jz loc_422601  +
mov edi [esp+1Ch] +
shl eax 5 +
xor esi esi +
lea ecx [edi+eax] +
mov eax edi +
lea esi [esi+0] +
mov edx [eax+14h] +
test edx edx +
jz loc_42253F  +
add edx [eax+8] +
cmp esi edx +
cmovb esi edx +
add eax 20h +
cmp eax ecx +
jnz loc_422530  +
lea eax [esp+88h] +
mov [esp+4] eax +
mov [esp] ebx +
call sub_406070  +
test eax eax +
jnz loc_422581  +
mov eax [esp+0A0h] +
cmp eax esi +
jnb loc_422581  +
mov [esp+0Ch] eax +
mov [esp+8] esi +
mov [esp+4] ebx +
mov dword ptr [esp] offset aWarningBIsTrun +
call off_476094  +
mov eax [ebp+10h] +
mov [ebx+74h] eax +
mov eax [ebx+4] +
jmp loc_422226  +
***
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] edx +
mov dword ptr [esp+8] 0 +
mov [esp] ebx +
call sub_4060C0  +
test eax eax +
jnz loc_422224  +
lea esi [esp+2Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] 28h +
mov [esp] esi +
call sub_405EB0  +
cmp eax 28h +
jnz loc_422224  +
lea eax [esp+88h] +
mov edx esi +
mov ecx eax +
mov eax edi +
call sub_420260  +
mov eax [esp+0A8h] +
test eax eax +
jnz loc_4225F9  +
mov eax [ebp+30h] +
jmp loc_422369  +
***
mov [ebp+30h] eax +
jmp loc_422369  +
***
xor esi esi +
jmp loc_422546  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
mov ebx esi +
sub ebx ecx +
lea edx ds:28h[ebx*4] +
mov [esp+28h+var_24] edx +
call sub_407C00  +
test eax eax +
jz loc_4227CA  +
xor edx edx +
cmp esi edi +
mov dword ptr [eax] 0 +
lea ecx [ebp+edi*4+0] +
mov dword ptr [eax+4] 1 +
jbe loc_4227AF  +
mov esi [ecx+edx*4] +
mov [eax+edx*4+28h] esi +
add edx 1 +
cmp edx ebx +
jnz loc_4227A1  +
test edi edi +
mov [eax+24h] ebx +
jnz loc_4227C2  +
mov edx [esp+28h+arg_4] +
test edx edx +
jz loc_4227C2  +
or byte ptr [eax+20h] 30h +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_4227C2  +
***
mov dword ptr [eax+40h] 1 +
mov [eax+24h] edx +
mov [eax+50h] ecx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
mov edi eax +
call sub_407B20  +
test eax eax +
mov ebx eax +
jz loc_4228A2  +
mov byte ptr [eax] 2Eh +
sub edi 1 +
add esi 2 +
lea eax [eax+1] +
mov [esp+14h+var_C] edi +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_18] edx +
call strlen  +
mov [esp+18h+var_18] ebx +
mov esi eax +
lea eax [eax+2] +
mov [esp+18h+var_14] eax +
call sub_407B20  +
test eax eax +
mov ebx eax +
jz loc_4228F6  +
mov byte ptr [eax] 2Eh +
add edi 1 +
mov byte ptr [eax+1] 7Ah +
lea eax [eax+2] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call memcpy  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_28] offset a_interp_0 +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_14] edx +
call sub_410840  +
test eax eax +
jz loc_42292D  +
test byte ptr [eax+14h] 2 +
jnz loc_422A78  +
mov [esp+2Ch+var_1C] 2 +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_28] offset a_dynamic_1 +
mov [esp+2Ch+var_2C] eax +
call sub_410840  +
cmp eax 1 +
mov eax [esp+2Ch+var_14] +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
test eax eax +
jz loc_422967  +
movzx eax byte ptr [eax+3] +
and eax 1 +
cmp al 1 +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
mov edi [esp+2Ch+var_18] +
mov eax [edi+0A0h] +
mov ebp [edi+64h] +
mov eax [eax+934h] +
cmp dword ptr [eax+0Ch] 1 +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
cmp dword ptr [eax+34h] 1 +
sbb [esp+2Ch+var_1C] 0FFFFFFFFh +
test ebp ebp +
jz loc_4229F2  +
mov eax [ebp+14h] +
mov ebx ebp +
mov [esp+2Ch+var_10] eax +
mov edx eax +
jmp loc_4229A3  +
mov edx [ebx+14h] +
and edx 2 +
jz loc_4229C7  +
mov esi [ebx] +
mov edi offset a_note +
mov ecx 5 +
cmps   +
jnz loc_4229C7  +
add [esp+2Ch+var_1C] 1 +
cmp dword ptr [ebx+40h] 2 +
jz loc_422A6C  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_4229A0  +
test [esp+2Ch+var_10] 400h +
jz loc_4229EA  +
jmp loc_422A85  +
test byte ptr [ebp+15h] 4 +
jnz loc_422A85  +
mov ebp [ebp+0Ch] +
test ebp ebp +
nop   +
jnz loc_4229E0  +
mov edi [esp+2Ch+var_18] +
mov eax [edi+4] +
mov ebx [eax+1B0h] +
mov eax [ebx+0A8h] +
test eax eax +
jz loc_422A1F  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] edx +
call eax  +
cmp eax 0FFFFFFFFh +
jz loc_422A8F  +
add [esp+10h] eax +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+1] +
imul eax [esp+10h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebx+40h] 2 +
jnz loc_4229A0  +
mov edx [ebx+14h] +
test dl 2 +
jz loc_4229A3  +
mov esi [ebx] +
mov ecx 5 +
mov edi offset a_note +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jnz loc_4229A3  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_422A36  +
jmp loc_4229CE  +
mov [esp+2Ch+var_1C] 4 +
jmp loc_422935  +
add [esp+2Ch+var_1C] 1 +
jmp loc_4229F2  +
mov dword ptr [esp+8] offset aGet_program_he +
mov dword ptr [esp+4] 0FD2h +
mov dword ptr [esp+0] offset a____Binutil_14 +
call sub_40C6F0  +
nop   +
lea esi [esi+0] +
mov ecx [eax+4] +
mov ecx [ecx+1B0h] +
mov ecx [ecx+2Ch] +
test ecx ecx +
jz loc_422AD1  +
sub esp 1Ch +
mov [esp+4] edx +
mov [esp+0] eax +
call ecx  +
add esp 1Ch +
retn   +
test dword ptr [edx+0Ch] 800082h +
mov eax 1 +
jnz locret_422ACF  +
mov edx [edx+10h] +
cmp edx offset off_476188 +
jz locret_422ACF  +
mov eax [edx+14h] +
shr eax 0Ch +
and eax 1 +
retn   +
***
mov ebx [ecx+4] +
cmp dword ptr [ebx+4] 5 +
jz loc_422B40  +
mov edx [edx+10h] +
cmp [edx+94h] eax +
jz loc_422B38  +
mov ecx [edx+3Ch] +
cmp eax [ecx+94h] +
jz loc_422B31  +
cmp edx offset off_476230 +
jz loc_422B38  +
mov eax 1 +
pop ebx  +
retn   +
mov ebx [edx+38h] +
test ebx ebx +
jnz loc_422B22  +
xor eax eax +
pop ebx  +
retn   +
mov ecx [ecx+0A0h] +
test ecx ecx +
jz loc_422B0C  +
mov ecx [edx+28h] +
test ecx ecx +
jz loc_422B0C  +
mov edx [edx+10h] +
cmp edx offset off_476230 +
jnz loc_422B0F  +
jmp loc_422B2A  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_0] +
mov ebx [esp+2Ch+arg_8] +
mov eax [ebp+14h] +
and eax 2100000h +
cmp eax 2000000h +
jz loc_422B90  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
test eax eax +
jnz loc_422B82  +
mov ecx [ebp+8Ch] +
mov eax [ecx+20h] +
test eax eax +
jz loc_422C24  +
cmp eax 0FFFFFFFEh +
jz loc_422C98  +
mov eax [ebp+6Ch] +
mov edx 1 +
test eax eax +
jz loc_422CF7  +
mov ecx [ecx+7Ch] +
mov esi [ebp+24h] +
mov [esp+2Ch+var_14] ecx +
add esi eax +
test ecx ecx +
jz loc_422C4B  +
mov [esp+2Ch+var_10] ebp +
mov ebx ecx +
mov ebp edi +
mov edi esi +
mov esi edx +
jmp loc_422C1C  +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_422C09  +
cmp eax offset off_476230 +
jz loc_422C09  +
mov edx [ebp+4] +
sub edi 4 +
mov edx [edx+54h] +
mov [esp+2Ch+var_28] edi +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov eax [ebx+8Ch] +
mov ebx [eax+7Ch] +
cmp [esp+2Ch+var_14] ebx +
jz loc_422C40  +
test ebx ebx +
jz loc_422C40  +
test esi esi +
jz loc_422BE0  +
mov eax ebx +
jmp loc_422BE7  +
mov eax [ecx+74h] +
test eax eax +
jz loc_422C76  +
mov eax [eax+14h] +
test eax eax +
jz loc_422C76  +
mov [ecx+20h] eax +
jmp loc_422BB0  +
mov esi edi +
mov edi ebp +
mov ebp [esp+2Ch+var_10] +
mov eax [ebp+6Ch] +
sub esi 4 +
cmp esi eax +
jnz loc_422D55  +
mov edx [edi+4] +
mov edx [edx+54h] +
mov [esp+2Ch+arg_4] eax +
mov eax [ebp+14h] +
shr eax 11h +
and eax 1 +
mov [esp+2Ch+arg_0] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp edx  +
mov eax [edi+0A0h] +
mov eax [eax+934h] +
mov eax [eax+8] +
test eax eax +
jz loc_422D27  +
mov esi [ebp+8] +
mov eax [eax+esi*4] +
mov eax [eax+14h] +
jmp loc_422C32  +
mov eax [ecx+7Ch] +
xor edx edx +
mov eax [eax+8Ch] +
mov eax [eax+78h] +
mov esi [eax+8Ch] +
mov eax [eax+94h] +
mov esi [esi+20h] +
mov eax [eax+0A0h] +
cmp dword ptr [eax+928h] 0 +
jnz loc_422CC7  +
mov edx [eax+68h] +
mov eax [eax+218h] +
sub esi edx +
mov eax [eax+esi*4] +
movzx esi byte ptr [eax+0Ch] +
lea edx [esi-6] +
cmp dl 1 +
ja loc_422CEF  +
nop   +
mov eax [eax+14h] +
movzx esi byte ptr [eax+0Ch] +
lea edx [esi-6] +
cmp dl 1 +
jbe loc_422CE0  +
mov eax [eax+1Ch] +
jmp loc_422C32  +
mov eax [ebp+24h] +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] eax +
call sub_407B20  +
mov ecx [ebp+8Ch] +
xor edx edx +
test eax eax +
mov [ebp+6Ch] eax +
mov [ecx+30h] eax +
jnz loc_422BC0  +
mov dword ptr [ebx] 1 +
jmp loc_422B82  +
mov [esp+2Ch+var_28] 0C8Bh +
mov [esp+2Ch+var_2C] offset a____Binutil_14 +
call sub_40C6C0  +
mov eax [edi+0A0h] +
mov ecx [ebp+8Ch] +
mov eax [eax+934h] +
mov eax [eax+8] +
jmp loc_422C8D  +
mov [esp+2Ch+var_24] offset aBfd_elf_set_gr +
mov [esp+2Ch+var_28] 0CDAh +
mov [esp+2Ch+var_2C] offset a____Binutil_14 +
call sub_40C6F0  +
jmp sub_422D80  +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_410840  +
test eax eax +
jz loc_4230E8  +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [edi+14h] +
mov [esp+18h+var_14] esi +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_10] eax +
call sub_410D00  +
test eax eax +
jz loc_423120  +
mov edx [edi+24h] +
mov ecx [edi+50h] +
mov ebx [edi+54h] +
mov [eax+24h] edx +
mov edx [edi+40h] +
mov [eax+50h] ecx +
mov [eax+54h] ebx +
mov [eax+40h] edx +
mov eax 1 +
jmp loc_4230E1  +
xor eax eax +
jmp loc_4230E1  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 9Ch +
mov eax [esp+0A8h+arg_0] +
lea edi [esp+0A8h+var_7C] +
mov [esp+0A8h+var_A4] offset aSLd +
mov [esp+0A8h+var_A8] edi +
mov [esp+0A8h+var_8C] ecx +
mov [esp+0A8h+var_9C] eax +
mov eax [esp+0A8h+arg_4] +
mov [esp+0A8h+var_A0] eax +
call sprintf  +
mov eax edi +
mov edx [eax] +
add eax 4 +
lea ebx [edx-1010101h] +
not edx  +
and ebx edx +
and ebx 80808080h +
jz loc_42316E  +
mov ecx ebx +
shr ecx 10h +
test ebx 8080h +
cmovz ebx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add bl bl +
sbb eax 3 +
sub eax edi +
add eax 1 +
mov [esp+0A8h+var_A4] eax +
mov [esp+0A8h+var_A8] esi +
call sub_407B20  +
test eax eax +
mov ebx eax +
jz loc_423220  +
mov [esp+0A8h+var_A4] edi +
mov [esp+0A8h+var_A8] eax +
call strcpy  +
mov [esp+0A8h+var_A0] 100h +
mov [esp+0A8h+var_A4] ebx +
mov [esp+0A8h+var_A8] esi +
call near ptr dword_410C20  +
test eax eax +
mov ecx eax +
jz loc_423220  +
mov eax [ebp+0] +
mov [ecx+24h] eax +
mov eax [esp+0A8h+var_8C] +
mov eax [eax] +
mov dword ptr [ecx+54h] 0 +
mov dword ptr [ecx+40h] 2 +
mov [ecx+50h] eax +
mov eax [esi+0A0h] +
mov edx [eax+930h] +
mov eax 1 +
mov edi [edx+8] +
cmp [esp+0A8h+arg_0] edi +
jz loc_423230  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 9Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+0A8h+arg_4] +
mov eax esi +
call sub_4230C0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+38h+var_38] ecx +
mov [esp+38h+var_1C] ecx +
call strlen  +
mov [esp+38h+var_38] edi +
add eax 6 +
mov [esp+38h+var_34] eax +
call sub_407B20  +
test eax eax +
mov ebx eax +
jz loc_4232E2  +
mov eax [esp+38h+arg_0] +
mov esi offset a_rela +
mov ecx [esp+38h+var_1C] +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_34] offset aSS_7 +
test eax eax +
mov eax offset a_rel +
cmovz esi eax +
mov [esp+38h+var_2C] ecx +
mov [esp+38h+var_30] esi +
call sprintf  +
mov eax [edi+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_30] 0 +
mov [esp+38h+var_38] eax +
call sub_44E260  +
cmp eax 0FFFFFFFFh +
mov [ebp+0] eax +
setnz al  +
add esp 2Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [eax+4] +
mov [esp+28h+var_1C] ecx +
mov ecx [edx] +
mov edi [eax+1B0h] +
test ecx ecx +
jz loc_423322  +
mov [esp+28h+var_24] 0B19h +
mov [esp+28h+var_28] offset a____Binutil_14 +
call sub_40C6C0  +
mov [esp+28h+var_24] 38h +
mov [esp+28h+var_28] esi +
call sub_407C00  +
mov edx [esp+28h+arg_4] +
test edx edx +
mov ebx eax +
mov [ebp+0] eax +
jz loc_4233B3  +
mov dword ptr [eax] 0FFFFFFFFh +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_4233A0  +
mov eax [edi+174h] +
mov dword ptr [ebx+4] 4 +
movzx edx byte ptr [eax+4] +
mov [ebx+28h] edx +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+18h] 0 +
shl eax cl +
mov [ebx+24h] eax +
mov eax 1 +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi+174h] +
mov dword ptr [ebx+4] 9 +
movzx edx byte ptr [eax+3] +
jmp loc_42335E  +
mov eax [esp+28h+arg_0] +
mov edx ebx +
mov ecx [esp+28h+var_1C] +
mov [esp+28h+var_28] eax +
mov eax esi +
call sub_423250  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_423345  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov eax [edi+4] +
mov ebx [esi+8Ch] +
mov ebp [esi] +
mov eax [eax+1B0h] +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_8] +
mov edx [eax+4] +
test edx edx +
jnz loc_4236B0  +
mov eax [eax] +
test eax eax +
jz loc_423820  +
test byte ptr [eax+0Ch] 1 +
jz loc_423435  +
mov edx [esi+14h] +
test dh 20h +
jz loc_423435  +
cmp byte ptr [ebp+1] 64h +
jz loc_4238D0  +
mov eax [edi+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_44E260  +
cmp eax 0FFFFFFFFh +
mov [ebx] eax +
jz loc_4237D7  +
mov edx [esi+14h] +
mov [esp+2Ch+var_10] 0 +
mov eax edx +
and eax 1 +
mov [esp+2Ch+var_18] eax +
jnz loc_423483  +
test byte ptr [esi+18h] 1 +
jz loc_423762  +
mov eax [esi+1Ch] +
mov [ebx+0Ch] eax +
mov ecx [esi+40h] +
mov eax [esi+24h] +
mov dword ptr [ebx+10h] 0 +
mov dword ptr [ebx+14h] 0 +
cmp ecx 1Eh +
mov [ebx+18h] eax +
mov dword ptr [ebx+1Ch] 0 +
ja loc_4237F3  +
mov eax 1 +
shl eax cl +
mov ecx edx +
and ecx 2000000h +
mov [ebx+24h] eax +
mov eax 11h +
mov [ebx+2Ch] esi +
mov dword ptr [ebx+30h] 0 +
mov [esp+2Ch+var_14] ecx +
jnz loc_4234EC  +
mov ecx edx +
mov al 8 +
and ecx 103h +
cmp ecx 1 +
mov ecx 1 +
cmovnz eax ecx +
mov ecx [ebx+4] +
test ecx ecx +
jnz loc_4236B8  +
mov [ebx+4] eax +
mov ecx eax +
cmp ecx 0Bh +
jz loc_423936  +
jbe loc_423710  +
cmp ecx 6FFFFFFDh +
jz loc_423910  +
ja loc_423860  +
cmp ecx 11h +
jz loc_4238A6  +
cmp ecx 6FFFFFF6h +
jnz loc_423548  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
cmp byte ptr [eax+0Ah] 40h +
setnz al  +
movzx eax al +
shl eax 2 +
mov [ebx+28h] eax +
mov eax [esp+2Ch+var_18] +
test eax eax +
jz loc_423554  +
or dword ptr [ebx+8] 2 +
test dl 8 +
jnz loc_42355D  +
or dword ptr [ebx+8] 1 +
test dl 10h +
jz loc_423566  +
or dword ptr [ebx+8] 4 +
test edx 800000h +
jz loc_42358D  +
mov eax [ebx+8] +
mov ecx eax +
or ecx 10h +
test edx 1000000h +
mov [ebx+8] ecx +
mov ecx [esi+78h] +
mov [ebx+28h] ecx +
jz loc_42358D  +
or eax 30h +
mov [ebx+8] eax +
mov eax [esp+2Ch+var_14] +
test eax eax +
jnz loc_4235A9  +
mov eax [esi+8Ch] +
mov eax [eax+74h] +
test eax eax +
jz loc_4235A9  +
or dword ptr [ebx+8] 200h +
test dh 4 +
jz loc_4235E6  +
mov eax [esi+24h] +
or dword ptr [ebx+8] 400h +
test eax eax +
jnz loc_4235E6  +
test dh 1 +
jnz loc_4235E6  +
mov ecx [esi+0A4h] +
mov dword ptr [ebx+18h] 0 +
test ecx ecx +
jz loc_4235E6  +
mov eax [ecx+0Ch] +
add eax [ecx+8] +
test eax eax +
mov [ebx+18h] eax +
jz loc_4235E6  +
mov dword ptr [ebx+4] 8 +
mov eax edx +
and eax 2008000h +
cmp eax 8000h +
jz loc_4237E7  +
and edx 4 +
jz loc_423670  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax] +
test eax eax +
jz loc_423630  +
mov ecx [ebx+40h] +
mov edx [ebx+50h] +
mov [esp+2Ch+var_18] ecx +
add ecx edx +
test ecx ecx +
jz loc_423630  +
movzx ecx byte ptr [eax] +
and ecx 3 +
cmp cl 2 +
jz loc_423770  +
cmp byte ptr [eax+2] 0 +
js loc_423770  +
movzx ecx byte ptr [esi+19h] +
lea eax [ebx+3Ch] +
lea edx [ebx+4Ch] +
shr cl 2 +
and ecx 1 +
test byte ptr [esi+19h] 4 +
mov [esp+2Ch+var_2C] ecx +
mov ecx ebp +
cmovz edx eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] eax +
mov eax edi +
call sub_4232F0  +
test eax eax +
jnz loc_423670  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
lea esi [esi+0] +
mov eax [esp+2Ch+var_1C] +
mov ebp [ebx+4] +
mov eax [eax+5Ch] +
test eax eax +
jz loc_42369A  +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] edi +
call eax  +
test eax eax +
jnz loc_42369A  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
cmp ebp 8 +
jnz loc_4236B0  +
mov eax [esi+24h] +
test eax eax +
jz loc_4236B0  +
mov dword ptr [ebx+4] 8 +
lea esi [esi+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx 8 +
jnz loc_4234FC  +
cmp eax 1 +
jnz loc_423548  +
mov eax [esp+2Ch+var_18] +
test eax eax +
jz loc_423554  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] offset aWarningSection +
call off_476094  +
mov dword ptr [ebx+4] 1 +
mov edx [esi+14h] +
mov eax edx +
and eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax edx +
and eax 2000000h +
mov [esp+2Ch+var_14] eax +
jmp loc_423548  +
cmp ecx 5 +
jz loc_4238F6  +
jbe loc_423950  +
cmp ecx 6 +
jz loc_423890  +
cmp ecx 9 +
nop   +
lea esi [esi+0] +
jnz loc_423548  +
mov eax [edi+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1ACh] 4 +
jz loc_423548  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+3] +
mov [ebx+28h] eax +
jmp loc_423548  +
mov dword ptr [ebx+0Ch] 0 +
jmp loc_423489  +
mov eax [esp+2Ch+var_18] +
test eax eax +
jz loc_4237A1  +
mov ecx [ebx+3Ch] +
test ecx ecx +
jnz loc_4237A1  +
mov eax [esp+2Ch+var_10] +
lea edx [ebx+3Ch] +
mov ecx ebp +
mov [esp+2Ch+var_2C] 0 +
mov [esp+2Ch+var_28] eax +
mov eax edi +
call sub_4232F0  +
test eax eax +
jz loc_4237D7  +
mov edx [ebx+50h] +
test edx edx +
jz loc_423670  +
mov edx [ebx+4Ch] +
test edx edx +
jnz loc_423670  +
mov eax [esp+2Ch+var_10] +
lea edx [ebx+4Ch] +
mov ecx ebp +
mov [esp+2Ch+var_2C] 1 +
mov [esp+2Ch+var_28] eax +
mov eax edi +
call sub_4232F0  +
test eax eax +
jnz loc_423670  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
jmp loc_4236B0  +
or dword ptr [ebx+8] 80000000h +
jmp loc_4235F8  +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] offset aBErrorAlignmen +
call off_476094  +
mov eax [esp+2Ch+arg_8] +
mov dword ptr [eax+4] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [esi+17h] 10h +
jz loc_423435  +
mov eax [edi+28h] +
shr eax 5 +
test eax 28000h +
jz loc_423985  +
cmp byte ptr [ebp+1] 7Ah +
jnz loc_423435  +
mov edx ebp +
mov eax edi +
call sub_422860  +
test eax eax +
mov ebp eax +
jnz loc_423435  +
jmp loc_4237D7  +
cmp ecx 6FFFFFFEh +
jnz loc_4238B2  +
mov eax [ebx+20h] +
mov dword ptr [ebx+28h] 0 +
test eax eax +
jnz loc_4239B5  +
mov eax [edi+0A0h] +
mov eax [eax+23Ch] +
mov [ebx+20h] eax +
jmp loc_423548  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+6] +
mov [ebx+28h] eax +
jmp loc_423548  +
mov dword ptr [ebx+28h] 4 +
jmp loc_423548  +
cmp ecx 6FFFFFFFh +
jnz loc_423548  +
mov dword ptr [ebx+28h] 2 +
jmp loc_423548  +
cmp byte ptr [ebp+6] 5Fh +
jnz loc_423435  +
or edx 8000000h +
mov [esi+14h] edx +
mov [esp+2Ch+var_10] 1 +
mov dword ptr [ebx] 0FFFFFFFFh +
jmp loc_42346E  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+8] +
mov [ebx+28h] eax +
jmp loc_423548  +
mov eax [ebx+20h] +
mov dword ptr [ebx+28h] 0 +
test eax eax +
jnz loc_4239F0  +
mov eax [edi+0A0h] +
mov eax [eax+238h] +
mov [ebx+20h] eax +
jmp loc_423548  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
mov [ebx+28h] eax +
jmp loc_423548  +
cmp ecx 4 +
jnz loc_423548  +
mov eax [edi+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1ACh] 8 +
jz loc_423548  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+4] +
mov [ebx+28h] eax +
jmp loc_423548  +
movzx eax byte ptr [esi+18h] +
and eax 30h +
cmp al 10h +
jnz loc_423435  +
mov edx ebp +
mov eax edi +
call sub_4228B0  +
test eax eax +
jz loc_4237D7  +
cmp byte ptr [ebp+1] 7Ah +
jz loc_423A16  +
mov ebp eax +
lea esi [esi+0] +
jmp loc_423435  +
mov ecx [edi+0A0h] +
mov ecx [ecx+23Ch] +
test ecx ecx +
jz loc_423548  +
cmp eax ecx +
jz loc_423548  +
mov [esp+2Ch+var_28] 0C08h +
mov [esp+2Ch+var_2C] offset a____Binutil_14 +
call sub_40C6C0  +
jmp loc_4236EE  +
mov ecx [edi+0A0h] +
mov ecx [ecx+238h] +
test ecx ecx +
jz loc_423548  +
cmp eax ecx +
jz loc_423548  +
mov [esp+2Ch+var_28] 0BFCh +
jmp loc_4239D9  +
mov [esp+2Ch+var_28] 0B87h +
mov [esp+2Ch+var_2C] offset a____Binutil_14 +
mov [esp+2Ch+var_18] eax +
call sub_40C6C0  +
mov eax [esp+2Ch+var_18] +
mov ebp eax +
jmp loc_423435  +
***
sub esp 1Ch +
lea eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] offset a8_8x +
mov [esp+1Ch+var_18] 20h +
mov [esp+1Ch+var_1C] eax +
call j__vsnprintf  +
add esp 1Ch +
retn   +
***
push ebx  +
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+60h] +
mov [esp+10h+var_C] ebx +
movzx edx word ptr [esi] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea edx [ebx+2] +
mov eax [eax+60h] +
mov [esp+10h+var_C] edx +
movzx edx word ptr [esi+2] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea edx [ebx+4] +
mov eax [eax+60h] +
mov [esp+10h+var_C] edx +
movzx edx word ptr [esi+4] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea edx [ebx+6] +
mov eax [eax+60h] +
mov [esp+10h+var_C] edx +
movzx edx word ptr [esi+6] +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea ecx [ebx+8] +
mov edx [esi+8] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
lea ecx [ebx+0Ch] +
mov edx [esi+0Ch] +
add ebx 10h +
mov eax [eax+54h] +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] ecx +
call eax  +
mov eax [edi+4] +
mov edx [esi+10h] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
add esi 4 +
call eax  +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov edx [esi] +
mov eax [eax+54h] +
mov [esp+10h+var_C] ebx +
add ebx 4 +
mov [esp+10h+var_10] edx +
call eax  +
mov eax [edi+4] +
mov edx [esi+4] +
mov eax [eax+54h] +
mov [esp+10h+arg_4] ebx +
mov [esp+10h+arg_0] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] esi +
call eax  +
lea edx [esi+2] +
mov [ebx] ax +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+4] +
mov [ebx+2] ax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+8] +
add esi 0Ch +
mov [ebx+4] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+8] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+0Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov esi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
lea edx [esi+4] +
mov [ebx] eax +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+6] +
mov [ebx+4] ax +
mov eax [edi+4] +
mov eax [eax+58h] +
mov [esp+10h+var_10] edx +
call eax  +
lea edx [esi+8] +
add esi 0Ch +
mov [ebx+6] ax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] edx +
call eax  +
mov [ebx+8] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+10h+var_10] esi +
call eax  +
mov [ebx+0Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov edx [esp+1Ch+arg_4] +
mov eax [eax+4] +
mov eax [eax+58h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
mov edx [esp+1Ch+arg_8] +
mov [edx] ax +
add esp 1Ch +
retn   +
***
jmp sub_423E40  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov ecx [esp+arg_8] +
mov eax [eax+4] +
mov eax [eax+60h] +
mov [esp+arg_4] ecx +
movzx edx word ptr [edx] +
mov [esp+arg_0] edx +
jmp eax  +
***
xor eax eax +
add edx 1 +
movzx ecx byte ptr [edx-1] +
test cl cl +
jz locret_423E92  +
shl eax 4 +
add eax ecx +
mov ecx eax +
and ecx 0F0000000h +
jz loc_423E66  +
xor eax ecx +
add edx 1 +
shr ecx 18h +
xor eax ecx +
movzx ecx byte ptr [edx-1] +
test cl cl +
jnz loc_423E71  +
retn   +
***
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
mov eax 1505h +
test dl dl +
jz loc_423EC8  +
mov ebx eax +
add ecx 1 +
shl ebx 5 +
add edx ebx +
add eax edx +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_423EB4  +
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esp+14h+arg_0] +
cmp esi 937h +
jbe loc_423F51  +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] ebx +
call sub_407C00  +
test eax eax +
mov [ebx+0A0h] eax +
jz loc_423F70  +
mov edx [esp+14h+arg_8] +
mov esi 1 +
mov [eax+920h] edx +
movzx edx byte ptr [ebx+28h] +
and edx 18h +
cmp dl 8 +
jz loc_423F49  +
mov [esp+14h+var_10] 40h +
mov [esp+14h+var_14] ebx +
call sub_407C00  +
test eax eax +
jz loc_423F70  +
mov edx [ebx+0A0h] +
mov [edx+934h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax+1Ch] 0FFFFFFFFh +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 0F0h +
mov [esp+14h+var_14] offset a____Binutil_14 +
call sub_40C6C0  +
jmp loc_423EE5  +
xor esi esi +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+4] +
mov dword ptr [esp+4] 938h +
mov [esp] eax +
mov [esp+8] edx +
call sub_423ED0  +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov eax [ebx+4] +
mov eax [eax+78h] +
mov [esp] ebx +
call eax  +
xor edx edx +
test eax eax +
jz loc_423FF9  +
mov esi [ebx+0A0h] +
mov dword ptr [esp+4] 14h +
mov [esp] ebx +
call sub_407C00  +
xor edx edx +
mov [esi+930h] eax +
mov eax [ebx+0A0h] +
mov eax [eax+930h] +
test eax eax +
setnz dl  +
add esp 14h +
mov eax edx +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_424010  +
***
mov ecx [esp+arg_8] +
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
test ecx ecx +
jz loc_424022  +
jmp loc_424030  +
mov eax offset unk_48E4B2 +
retn   +
push ebp  +
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 3Ch +
mov eax [eax+0A0h] +
mov ebx [eax+40h] +
test ebx ebx +
jz loc_424167  +
cmp [eax+214h] edx +
jbe loc_424167  +
lea edi [ebx+edx*4] +
mov ebx [edi] +
mov eax [ebx+30h] +
test eax eax +
jz loc_424080  +
mov eax [ebx+18h] +
cmp eax ecx +
jbe loc_424171  +
mov eax [ebx+30h] +
add eax ecx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+4] +
cmp eax 5FFFFFFFh +
jbe loc_4241D2  +
mov ebp [ebx+18h] +
mov [esp+4Ch+var_28] ecx +
mov eax [ebx+10h] +
mov [esp+4Ch+var_2C] edx +
mov edx [ebx+14h] +
lea ecx [ebp+1] +
cmp ecx 1 +
mov [esp+4Ch+var_24] ecx +
jbe loc_424160  +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
call sub_4060C0  +
mov edx [esp+4Ch+var_2C] +
mov ecx [esp+4Ch+var_28] +
test eax eax +
jnz loc_4241CE  +
mov eax [esp+4Ch+var_24] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_20] ecx +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_48] eax +
call sub_407B20  +
mov edx [esp+4Ch+var_28] +
mov ecx [esp+4Ch+var_20] +
test eax eax +
mov [esp+4Ch+var_2C] eax +
jz loc_4241CE  +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_24] ecx +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_28] edx +
call sub_405EB0  +
mov edx [esp+4Ch+var_28] +
mov ecx [esp+4Ch+var_24] +
cmp ebp eax +
jz loc_4241F7  +
call sub_40C520  +
sub eax 1 +
jz loc_424145  +
mov [esp+4Ch+var_4C] 12h +
call sub_40C770  +
mov eax [esp+4Ch+var_2C] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] eax +
call sub_407D70  +
mov ebx [edi] +
mov dword ptr [ebx+18h] 0 +
nop   +
mov dword ptr [ebx+30h] 0 +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esi+0A0h] +
mov ebp [edi+3Ch] +
mov edi off_476094 +
cmp edx ebp +
mov edx [ebx] +
jz loc_4241C1  +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_2C] ecx +
call sub_424010  +
mov edx [ebx+18h] +
mov ecx [esp+4Ch+var_2C] +
mov [esp+4Ch+var_3C] eax +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] ecx +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] offset aBInvalidString +
call edi  +
xor eax eax +
jmp loc_424072  +
cmp ecx edx +
jnz loc_424186  +
mov edx eax +
mov eax offset a_shstrtab +
jmp loc_4241A1  +
mov ebx [edi] +
jmp loc_424160  +
cmp eax 3 +
jz loc_42408E  +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] offset aBAttemptToLoad +
call off_476094  +
xor eax eax +
jmp loc_424072  +
mov eax [esp+4Ch+var_2C] +
mov byte ptr [eax+ebp] 0 +
mov eax [edi] +
mov edi [esp+4Ch+var_2C] +
mov [eax+30h] edi +
jmp loc_424062  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_4] +
mov esi [eax+4] +
cmp dword ptr [esi+4] 5 +
jnz loc_424530  +
mov ebx [esp+3Ch+arg_8] +
test ebx ebx +
jz loc_4242E9  +
mov eax [esp+3Ch+arg_0] +
mov ebp [eax+0A0h] +
mov edi [ebp+208h] +
test edi edi +
jz loc_424390  +
mov ebx [ebp+40h] +
mov eax edi +
mov edx [eax+1Ch] +
cmp [ebx+edx*4] ecx +
jz loc_42426C  +
mov eax [eax+3Ch] +
test eax eax +
jnz loc_424255  +
add ebp 48h +
cmp ecx ebp +
cmovz eax edi +
mov [esp+3Ch+var_24] eax +
mov ebp [esi+1B0h] +
xor ebx ebx +
mov edx [esp+3Ch+arg_14] +
mov esi [ecx+10h] +
mov edi [ecx+14h] +
mov eax [ebp+174h] +
test edx edx +
movzx eax byte ptr [eax+5] +
mov [esp+3Ch+var_1C] eax +
jz loc_42439D  +
mov eax [esp+3Ch+var_1C] +
xor edx edx +
imul eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_30] 0 +
add eax esi +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
adc edx edi +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_4060C0  +
test eax eax +
jz loc_4242F5  +
xor esi esi +
mov [esp+3Ch+arg_10] 0 +
test ebx ebx +
jz loc_4242DD  +
mov [esp+3Ch+var_3C] ebx +
call free  +
test esi esi +
jz loc_4242E9  +
mov [esp+3Ch+var_3C] esi +
call free  +
mov eax [esp+3Ch+arg_10] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
mov esi [esp+3Ch+var_1C] +
imul esi [esp+3Ch+arg_8] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_14] +
mov [esp+3Ch+var_38] esi +
mov [esp+3Ch+var_3C] eax +
call sub_405EB0  +
cmp eax esi +
jnz loc_4242C7  +
mov eax [esp+3Ch+var_24] +
test eax eax +
jz loc_4243C6  +
mov ecx [eax+18h] +
test ecx ecx +
jz loc_4243C6  +
mov edx [eax+14h] +
xor esi esi +
mov eax [eax+10h] +
mov [esp+3Ch+var_20] edx +
mov edx [esp+3Ch+arg_18] +
mov [esp+3Ch+var_24] eax +
test edx edx +
jz loc_424503  +
mov eax [esp+3Ch+arg_C] +
xor edx edx +
mov [esp+3Ch+var_30] 0 +
shl eax 2 +
add eax [esp+3Ch+var_24] +
adc edx [esp+3Ch+var_20] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_4060C0  +
test eax eax +
jz loc_4244AA  +
mov [esp+3Ch+arg_10] 0 +
jmp loc_4242D1  +
mov [esp+3Ch+var_24] 0 +
jmp loc_424270  +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_3C] eax +
call sub_40F000  +
test eax eax +
mov [esp+3Ch+arg_14] eax +
jnz loc_42454C  +
mov [esp+3Ch+arg_10] 0 +
jmp loc_4242E9  +
xor esi esi +
mov [esp+3Ch+arg_18] 0 +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_18] 0 +
test eax eax +
jz loc_4244DA  +
mov eax [esp+3Ch+arg_8] +
mov edi [esp+3Ch+arg_10] +
lea eax [eax+eax*4] +
lea eax [edi+eax*4] +
cmp edi eax +
mov [esp+3Ch+var_24] eax +
jnb loc_4242D1  +
mov edx [esp+3Ch+arg_14] +
mov [esp+3Ch+var_14] esi +
mov esi ebp +
mov [esp+3Ch+var_10] ebx +
mov ebx [esp+3Ch+arg_18] +
mov ebp edx +
jmp loc_424429  +
add edi 14h +
add ebp [esp+3Ch+var_1C] +
test ebx ebx +
lea eax [ebx+4] +
cmovnz ebx eax +
cmp [esp+3Ch+var_24] edi +
jbe loc_42449D  +
mov eax [esi+174h] +
mov ecx [esp+3Ch+arg_0] +
mov eax [eax+20h] +
mov [esp+3Ch+var_30] edi +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] ecx +
call eax  +
test eax eax +
jnz loc_424414  +
mov eax ebp +
xor edx edx +
mov esi [esp+3Ch+var_14] +
sub eax [esp+3Ch+arg_14] +
mov ebx [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] offset aBSymbolNumberL +
div  [esp+3Ch+var_1C] +
add eax [esp+3Ch+arg_C] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] eax +
call off_476094  +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+arg_10] 0 +
test eax eax +
jz loc_4242D1  +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_4242D1  +
mov esi [esp+3Ch+var_14] +
mov ebx [esp+3Ch+var_10] +
jmp loc_4242D1  +
mov eax [esp+3Ch+arg_8] +
lea edi ds:0[eax*4] +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_18] +
mov [esp+3Ch+var_3C] eax +
call sub_405EB0  +
cmp eax edi +
jnz loc_424382  +
jmp loc_4243D0  +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 14h +
mov [esp+3Ch+var_3C] eax +
call sub_40F000  +
test eax eax +
mov [esp+3Ch+arg_10] eax +
jz loc_4242D1  +
mov [esp+3Ch+var_18] eax +
jmp loc_4243E4  +
mov eax [esp+3Ch+arg_8] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] eax +
call sub_40F000  +
test eax eax +
mov esi eax +
jz loc_424382  +
mov [esp+3Ch+arg_18] eax +
jmp loc_42434D  +
mov [esp+3Ch+var_34] offset aBfd_elf_get_el +
mov [esp+3Ch+var_38] 18Ch +
mov [esp+3Ch+var_3C] offset a____Binutil_14 +
call sub_40C6F0  +
mov ebx eax +
jmp loc_424298  +
***
sub esp 4 +
mov ebx [esp+4+arg_8] +
mov eax [esp+4+arg_4] +
mov esi [esp+4+arg_C] +
mov ecx [ebx+8] +
mov edx [eax+1Ch] +
test ecx ecx +
jz loc_4245A0  +
mov eax [esp+4+arg_0] +
call loc_424030  +
test eax eax +
jz loc_4245D7  +
test esi esi +
jz loc_424594  +
cmp byte ptr [eax] 0 +
nop   +
jnz loc_424594  +
mov eax [esi] +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
movzx edx byte ptr [ebx+0Ch] +
mov eax offset unk_48E4B2 +
and edx 0Fh +
cmp dl 3 +
jnz loc_424588  +
mov ecx [ebx+10h] +
mov ebx [esp+4+arg_0] +
mov edx [ebx+0A0h] +
cmp ecx [edx+214h] +
jnb loc_424588  +
mov ebx [edx+40h] +
mov edx [edx+3Ch] +
mov ecx [ebx+ecx*4] +
mov ecx [ecx] +
test ecx ecx +
jz loc_424588  +
jmp loc_42457B  +
mov eax offset aNull_0 +
jmp loc_424594  +
***
mov edi 1 +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+44h+arg_0] +
mov eax [ebp+0A0h] +
mov ebx [ebp+64h] +
mov eax [eax+908h] +
test ebx ebx +
mov [esp+44h+var_24] eax +
jnz loc_42463B  +
jmp loc_424697  +
mov eax [ebp+4] +
mov eax [eax+1B0h] +
mov eax [eax+164h] +
test eax eax +
jz loc_424634  +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] offset aBWarningSh_lin +
call eax  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_424697  +
mov eax [ebx+8Ch] +
test byte ptr [eax+8] 80h +
jz loc_424634  +
mov edx [eax+1Ch] +
test edx edx +
jz loc_424610  +
mov ecx [ebp+0A0h] +
cmp edx [ecx+214h] +
jb loc_424720  +
mov eax [ebx+94h] +
xor edi edi +
mov [esp+44h+var_38] edx +
mov [esp+44h+var_3C] ebx +
mov [esp+44h+var_44] offset aBSh_linkDInSec +
mov [esp+44h+var_40] eax +
call off_476094  +
mov eax [ebx+8Ch] +
xor ecx ecx +
mov [eax+64h] ecx +
lea esi [esi+0] +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_42463B  +
mov eax [esp+44h+var_24] +
cmp eax 0FFFFFFFFh +
jz loc_424770  +
test eax eax +
jz loc_424770  +
mov [esp+44h+var_28] 0 +
mov edx edi +
mov eax [ebp+0A0h] +
mov edi [esp+44h+var_28] +
mov eax [eax+904h] +
mov ebx [eax+edi*4] +
test ebx ebx +
jz loc_424740  +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_424740  +
mov eax [ebx+30h] +
test eax eax +
jz loc_424740  +
mov edi [ebx+18h] +
lea esi [eax+4] +
shr edi 2 +
jmp loc_4246F5  +
mov eax [eax+8Ch] +
mov ecx [ebx+2Ch] +
mov [eax+78h] ecx +
add esi 4 +
sub edi 1 +
jz loc_42475B  +
mov ecx [esi] +
mov eax [ecx+2Ch] +
test eax eax +
jnz loc_4246E6  +
mov eax [ecx+4] +
cmp eax 9 +
jz loc_424710  +
cmp eax 4 +
jnz loc_424780  +
mov eax [ebx+2Ch] +
sub dword ptr [eax+24h] 4 +
jmp loc_4246F2  +
mov ecx [ecx+40h] +
mov ecx [ecx+edx*4] +
mov ecx [ecx+2Ch] +
test ecx ecx +
jz loc_424660  +
mov [eax+64h] ecx +
jmp loc_424690  +
mov eax [esp+44h+var_28] +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] offset aBSectionGroupE +
mov [esp+44h+var_3C] eax +
call off_476094  +
xor edx edx +
add [esp+44h+var_28] 1 +
mov eax [esp+44h+var_28] +
cmp [esp+44h+var_24] eax +
jnz loc_4246B6  +
mov edi edx +
add esp 3Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx off_476094 +
mov ecx [ecx] +
mov [esp+44h+var_20] edx +
mov edx [ebx+2Ch] +
test ecx ecx +
mov edx [edx] +
mov [esp+44h+var_1C] edx +
mov edx [ebp+0A0h] +
mov edx [edx+3Ch] +
mov [esp+44h+var_18] edx +
mov edx offset unk_48E4B2 +
jnz loc_4247D3  +
mov ecx [esp+44h+var_1C] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] edx +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_34] ecx +
mov [esp+44h+var_44] offset aBUnknownDSecti +
call eax  +
xor edx edx +
jmp loc_4246F2  +
mov edx [esp+44h+var_18] +
mov eax ebp +
call loc_424030  +
mov edx eax +
mov eax [esi] +
mov eax [eax+4] +
jmp loc_4247AB  +
***
mov eax [esp+8] +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
test eax eax +
setnz al  +
movzx eax al +
retn   +
***
mov ecx [esp+8] +
mov edx [ecx+0Ch] +
mov edx [edx+24h] +
test edx edx +
jnz loc_424850  +
mov eax [esp+14h] +
mov ecx [esp+8] +
mov eax [eax+38h] +
add [ecx+4] eax +
xor eax eax +
retn   +
***
mov edx [ecx+8] +
test edx edx +
jz loc_42483E  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
mov esi [esp+44h] +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_424885  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_424878  +
mov eax [esi+0A0h] +
mov edx [eax+934h] +
mov edx [edx+3Ch] +
test edx edx +
jnz loc_4248C0  +
mov edx [ebx+0A0h] +
mov edx [edx+20h] +
mov [eax+20h] edx +
mov eax [esi+0A0h] +
mov edx [eax+934h] +
mov dword ptr [edx+3Ch] 1 +
mov edx [ebx+0A0h] +
mov edx [edx+20Ch] +
mov [eax+20Ch] edx +
mov edx [ebx+0A0h] +
mov eax [esi+0A0h] +
movzx edx byte ptr [edx+7] +
mov [eax+7] dl +
mov [esp+4] esi +
mov [esp] ebx +
call sub_44EF40  +
mov eax [ebx+0A0h] +
mov [esp+10h] eax +
mov ebp [eax+40h] +
mov eax [esi+0A0h] +
mov edx [eax+40h] +
test edx edx +
jz loc_424878  +
test ebp ebp +
jz loc_424878  +
mov eax [eax+214h] +
test eax eax +
jz loc_424878  +
lea eax [edx+eax*4] +
mov edi edx +
mov [esp+8] eax +
jmp loc_42493D  +
add edi 4 +
cmp edi [esp+8] +
jz loc_424878  +
mov ecx [edi] +
test ecx ecx +
jz loc_424930  +
cmp dword ptr [ecx+4] 8 +
jnz loc_424930  +
mov eax [ecx+18h] +
test eax eax +
mov [esp+0Ch] eax +
jz loc_424930  +
mov eax [ecx+20h] +
test eax eax +
mov [esp+18h] eax +
jz loc_424966  +
mov eax [ecx+1Ch] +
test eax eax +
jnz loc_424930  +
mov eax [esp+10h] +
mov ebx [eax+214h] +
test ebx ebx +
jz loc_424930  +
mov esi [ecx+8] +
xor eax eax +
mov [esp+14h] edi +
jmp loc_424987  +
add eax 1 +
cmp eax ebx +
jz loc_4249F5  +
mov edx [ebp+eax*4+0] +
cmp [edx+8] esi +
jnz loc_424980  +
mov edi [ecx+24h] +
cmp [edx+24h] edi +
jnz loc_424980  +
mov edi [ecx+28h] +
cmp [edx+28h] edi +
jnz loc_424980  +
mov edi [esp+0Ch] +
cmp edi [edx+18h] +
jnz loc_424980  +
mov edi [ecx+0Ch] +
cmp [edx+0Ch] edi +
jnz loc_424980  +
mov edi [edx+20h] +
cmp [esp+18h] edi +
mov [esp+1Ch] edi +
jnz loc_4249FE  +
mov edi [ecx+1Ch] +
cmp [edx+1Ch] edi +
jz loc_424980  +
mov eax [esp+18h] +
mov edi [esp+14h] +
mov [esp+1Ch] eax +
cmp dword ptr [ecx+1Ch] 0 +
jnz loc_4249DE  +
mov eax [edx+1Ch] +
mov [ecx+1Ch] eax +
cmp dword ptr [esp+18h] 0 +
jnz loc_424930  +
mov eax [esp+1Ch] +
mov [ecx+20h] eax +
jmp loc_424930  +
***
mov edi [esp+14h] +
jmp loc_424930  +
***
mov edi [esp+14h] +
jmp loc_4249D2  +
***
mov edx [esp+arg_0] +
mov eax [edx+0A0h] +
mov ecx [eax+914h] +
test ecx ecx +
jz loc_424AAA  +
mov esi [eax+918h] +
test esi esi +
jz loc_424AA0  +
mov eax [esp+arg_4] +
mov ecx [esp+arg_8] +
movzx ebx word ptr [eax+30h] +
movsx eax bx +
shr eax 1Fh +
and ebx 7FFFh +
mov [ecx] eax +
mov eax offset unk_48E4B2 +
jz loc_424A99  +
cmp ebx 1 +
jz loc_424AAF  +
mov edx [edx+0A0h] +
cmp ebx [edx+238h] +
jbe loc_424AB7  +
mov esi [edx+244h] +
test esi esi +
jz loc_424A99  +
mov edx [esi+18h] +
test edx edx +
jnz loc_424A87  +
jmp loc_424A92  +
mov edx [edx+14h] +
test edx edx +
jz loc_424A92  +
movzx ecx word ptr [edx+6] +
cmp ecx ebx +
jnz loc_424A80  +
mov eax [edx+10h] +
mov esi [esi+1Ch] +
test esi esi +
jnz loc_424A72  +
pop ebx  +
pop esi  +
retn   +
mov ebx [eax+91Ch] +
test ebx ebx +
jnz loc_424A34  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov eax offset aBase +
pop ebx  +
pop esi  +
retn   +
mov ecx [edx+240h] +
lea eax [ebx+ebx*4] +
pop ebx  +
pop esi  +
lea eax [ecx+eax*8] +
mov eax [eax-10h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+4Ch] +
mov ebx [esp+44h] +
mov edi [esp+48h] +
cmp eax 1 +
jz loc_424C30  +
jb loc_424C16  +
cmp eax 2 +
jnz loc_424C0E  +
mov eax [edi+10h] +
test eax eax +
jz loc_424D60  +
mov esi [eax] +
mov eax [esp+40h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+0CCh] +
test eax eax +
jz loc_424C86  +
mov edx [esp+40h] +
mov [esp+8] edi +
mov [esp+4] ebx +
mov [esp] edx +
call eax  +
test eax eax +
mov ebp eax +
jz loc_424C86  +
mov [esp+8] esi +
mov dword ptr [esp+4] offset aS_15 +
mov [esp] ebx +
call fprintf  +
mov eax [edi+10h] +
test eax eax +
jz loc_424CA2  +
test byte ptr [eax+15h] 10h +
jz loc_424CA2  +
mov eax [edi+18h] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_40D0A0  +
lea eax [esp+1Ch] +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] edi +
mov [esp] eax +
call sub_424A10  +
test eax eax +
mov esi eax +
jz loc_424BBC  +
mov eax [esp+1Ch] +
mov [esp+8] esi +
test eax eax +
jnz loc_424CB0  +
mov dword ptr [esp+4] offset a11s +
mov [esp] ebx +
call fprintf  +
movzx eax byte ptr [edi+25h] +
cmp al 1 +
jz loc_424D35  +
jb loc_424BFA  +
cmp al 2 +
jz loc_424D10  +
cmp al 3 +
jnz loc_424CF1  +
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 0Bh +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a_protected +
call fwrite  +
mov [esp+8] ebp +
mov dword ptr [esp+4] offset aS_17 +
mov [esp] ebx +
call fprintf  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+4] +
mov [esp+4] ebx +
mov [esp] eax +
call fputs  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 4 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aElf +
call fwrite  +
mov eax [edi+8] +
mov [esp+4] ebx +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp] eax +
call sub_40D0A0  +
mov eax [edi+0Ch] +
mov [esp] ebx +
mov dword ptr [esp+4] offset aLx +
mov [esp+8] eax +
call fprintf  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+40h] +
mov ebp [edi+4] +
mov [esp+8] edi +
mov [esp+4] ebx +
mov [esp] eax +
call sub_411630  +
jmp loc_424B3E  +
***
mov eax [edi+1Ch] +
jmp loc_424B6A  +
***
mov dword ptr [esp+4] offset aS_16 +
mov [esp] ebx +
call fprintf  +
mov [esp] esi +
mov esi 0Ah +
call strlen  +
sub esi eax +
test esi esi +
jle loc_424BBC  +
mov [esp+4] ebx +
mov dword ptr [esp] 20h +
call putc  +
sub esi 1 +
jnz loc_424CD7  +
jmp loc_424BBC  +
***
mov [esp+8] eax +
mov dword ptr [esp+4] offset a0x02x +
mov [esp] ebx +
call fprintf  +
jmp loc_424BFA  +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 8 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a_hidden +
call fwrite  +
jmp loc_424BFA  +
***
mov [esp+0Ch] ebx +
mov dword ptr [esp+8] 0Ah +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a_internal +
call fwrite  +
jmp loc_424BFA  +
***
mov esi offset aNone_0 +
jmp loc_424B08  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+48h+arg_0] +
mov esi [ebx+0A0h] +
mov edx [esi+214h] +
cmp edx [esp+48h+arg_4] +
jbe loc_424F1B  +
mov eax ds:dword_49F46C +
add eax 1 +
cmp eax 3 +
mov ds:dword_49F46C eax +
ja loc_424F23  +
mov eax [esp+48h+arg_4] +
shl eax 2 +
mov [esp+48h+var_30] eax +
mov eax [esi+40h] +
mov edx offset unk_48E4B2 +
mov edi [esp+48h+var_30] +
mov ebp [eax+edi] +
mov eax [esi+3Ch] +
mov ecx [ebp+0] +
test ecx ecx +
jnz loc_425174  +
mov eax [ebx+4] +
mov ecx [eax+1B0h] +
mov eax [ebp+4] +
cmp eax 0Ah +
jz loc_425244  +
jbe loc_424F80  +
cmp eax 12h +
jz loc_425803  +
jbe loc_4250F0  +
cmp eax 6FFFFFFDh +
jz loc_425768  +
jbe loc_4256C2  +
cmp eax 6FFFFFFEh +
jz loc_4253E8  +
cmp eax 6FFFFFFFh +
jnz loc_4256D0  +
cmp dword ptr [ebp+28h] 2 +
jnz loc_424EE0  +
mov eax [ebx+0A0h] +
mov edi [esp+48h+arg_4] +
mov ecx [ebp+0] +
mov [eax+914h] edi +
mov eax [ebx+0A0h] +
mov [eax+160h] ecx +
mov ecx [ebp+4] +
mov [eax+164h] ecx +
mov ecx [ebp+8] +
mov [eax+168h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+16Ch] ecx +
mov ecx [ebp+10h] +
mov [eax+170h] ecx +
mov ecx [ebp+14h] +
mov [eax+174h] ecx +
mov ecx [ebp+18h] +
mov [eax+178h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+17Ch] ecx +
mov ecx [ebp+20h] +
mov [eax+180h] ecx +
mov ecx [ebp+24h] +
mov [eax+184h] ecx +
mov ecx [ebp+28h] +
mov [eax+188h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+18Ch] ecx +
mov ecx [ebp+30h] +
mov [eax+190h] ecx +
mov ecx [ebp+34h] +
mov [eax+194h] ecx +
mov eax edi +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
call sub_425D90  +
jmp loc_424EE2  +
mov ebx ebp +
lea esi [esi+0] +
xor eax eax +
mov edx ds:dword_49F464 +
test edx edx +
jz loc_424EF8  +
cmp ds:dword_49F468 ebx +
jz loc_425250  +
mov edi ds:dword_49F46C +
lea edx [edi-1] +
test edx edx +
mov ds:dword_49F46C edx +
jnz loc_424F1B  +
mov ds:dword_49F464 0 +
mov ds:dword_49F468 ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ds:dword_49F468 ebx +
jz loc_4256B0  +
mov ds:dword_49F464 0 +
shl edx 2 +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] ebx +
call sub_407C00  +
mov ds:dword_49F468 ebx +
mov ds:dword_49F464 eax +
mov esi [esp+48h+arg_4] +
lea edi ds:0[esi*4] +
add eax edi +
mov ebp [eax] +
mov [esp+48h+var_30] edi +
test ebp ebp +
jnz loc_425260  +
mov dword ptr [eax] 1 +
mov esi [ebx+0A0h] +
jmp loc_424DB4  +
cmp eax 4 +
jz loc_425483  +
ja loc_425190  +
cmp eax 1 +
jz loc_4256A0  +
nop   +
lea esi [esi+0] +
jb loc_425244  +
cmp eax 2 +
jz loc_425278  +
cmp eax 3 +
jnz loc_4256D0  +
mov edi [ebp+2Ch] +
test edi edi +
jnz loc_425244  +
mov eax [esp+48h+arg_4] +
cmp [esi+3Ch] eax +
jz loc_425B92  +
mov edi [ebx+0A0h] +
mov ecx [esp+48h+arg_4] +
mov esi [edi+90Ch] +
mov eax [edi+40h] +
mov [esp+48h+var_2C] esi +
mov esi [eax+esi*4] +
cmp [esi+1Ch] ecx +
jz loc_425C3B  +
mov esi [edi+910h] +
mov ecx [eax+esi*4] +
mov [esp+48h+var_28] esi +
mov esi [esp+48h+arg_4] +
cmp [ecx+1Ch] esi +
jz loc_4250A8  +
mov esi [esp+48h+var_2C] +
test esi esi +
jz loc_425021  +
mov ecx [esp+48h+var_28] +
test ecx ecx +
jnz loc_4256A0  +
mov ecx [edi+214h] +
cmp ecx 1 +
jbe loc_4256A0  +
mov [esp+48h+var_28] edx +
mov edx edi +
mov esi 1 +
mov [esp+48h+var_2C] ebp +
mov edi ecx +
mov ebp ebx +
mov ecx edx +
mov ebx [esp+48h+arg_4] +
jmp loc_42505E  +
add esi 1 +
cmp esi edi +
jz loc_425696  +
mov eax [ecx+40h] +
mov eax [eax+esi*4] +
cmp [eax+1Ch] ebx +
jnz loc_425050  +
cmp esi ebx +
jz loc_424ED8  +
mov [esp+48h+var_44] esi +
mov [esp+48h+var_48] ebp +
call sub_424D70  +
test eax eax +
jz loc_424ED8  +
mov ecx [ebp+0A0h] +
cmp [ecx+90Ch] esi +
jz loc_425C33  +
cmp [ecx+910h] esi +
jnz loc_425050  +
mov ebx ebp +
mov edx [esp+48h+var_28] +
mov edi ecx +
mov ebp [esp+48h+var_2C] +
add edi 128h +
mov ecx 0Eh +
mov esi ebp +
movs   +
mov edi [esp+48h+var_30] +
mov ecx [ebx+0A0h] +
lea eax [ecx+128h] +
mov ecx [ecx+40h] +
mov [ecx+edi] eax +
mov edi [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] edi +
call sub_425D90  +
jmp loc_424EE2  +
cmp eax 10h +
ja loc_425915  +
cmp eax 0Eh +
lea esi [esi+0] +
jnb loc_4256A0  +
cmp eax 0Bh +
jnz loc_4256D0  +
mov esi [ebx+0A0h] +
mov eax [esi+910h] +
cmp eax [esp+48h+arg_4] +
jz loc_425244  +
mov ecx [ecx+174h] +
mov edi [ebp+28h] +
movzx ecx byte ptr [ecx+5] +
cmp edi ecx +
jnz loc_424EE0  +
mov ecx [ebp+18h] +
imul edi [ebp+20h] +
cmp edi ecx +
ja loc_4259B8  +
test eax eax +
mov eax [esp+48h+arg_4] +
jz loc_425AC6  +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBWarningMultip +
call off_476094  +
mov eax 1 +
jmp loc_424EE2  +
mov edx eax +
mov eax ebx +
call loc_424030  +
test eax eax +
mov edx eax +
jz loc_424EE0  +
jmp loc_424DD1  +
cmp eax 8 +
ja loc_425483  +
cmp eax 7 +
lea esi [esi+0] +
jnb loc_4256A0  +
cmp eax 5 +
jz loc_4256A0  +
cmp eax 6 +
jnz loc_4256D0  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_425D90  +
test eax eax +
jz loc_424EE0  +
mov eax [ebx+0A0h] +
mov edx [ebp+1Ch] +
mov ecx [eax+214h] +
cmp edx ecx +
ja loc_4259D1  +
mov esi [eax+40h] +
mov edx [esi+edx*4] +
test edx edx +
jz loc_424EE0  +
cmp dword ptr [edx+4] 3 +
jz loc_425244  +
mov eax [eax+910h] +
test eax eax +
jnz loc_4259FD  +
cmp ecx 1 +
jbe loc_425244  +
mov edx [esi+4] +
mov eax 1 +
cmp dword ptr [edx+4] 0Bh +
jnz loc_42523D  +
jmp loc_425AB6  +
mov edx [esi+eax*4] +
cmp dword ptr [edx+4] 0Bh +
jz loc_425AB6  +
add eax 1 +
cmp eax ecx +
jnz loc_425230  +
mov eax 1 +
jmp loc_424EE2  +
mov edi [esp+48h+var_30] +
mov dword ptr [edx+edi] 0 +
jmp loc_424EF8  +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBWarningLoopIn +
call off_476094  +
xor eax eax +
jmp loc_424F1B  +
mov esi [ebx+0A0h] +
mov eax [esi+90Ch] +
cmp eax [esp+48h+arg_4] +
jz loc_425244  +
mov ecx [ecx+174h] +
mov edi [ebp+28h] +
movzx ecx byte ptr [ecx+5] +
cmp edi ecx +
jnz loc_424EE0  +
mov ecx [ebp+18h] +
imul edi [ebp+20h] +
cmp edi ecx +
ja loc_4259B8  +
test eax eax +
mov eax [esp+48h+arg_4] +
jnz loc_425CF8  +
mov [esi+90Ch] eax +
mov ecx [ebp+0] +
mov eax [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov [eax+48h] ecx +
mov ecx [ebp+4] +
mov [eax+4Ch] ecx +
mov ecx [ebp+8] +
mov [eax+50h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+54h] ecx +
mov ecx [ebp+10h] +
mov [eax+58h] ecx +
mov ecx [ebp+14h] +
mov [eax+5Ch] ecx +
mov ecx [ebp+18h] +
mov [eax+60h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+64h] ecx +
mov ecx [ebp+20h] +
mov [eax+68h] ecx +
mov ecx [ebp+24h] +
mov [eax+6Ch] ecx +
mov ecx [ebp+28h] +
mov [eax+70h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+74h] ecx +
mov ecx [ebp+30h] +
mov [eax+78h] ecx +
mov ecx [ebp+34h] +
mov [eax+7Ch] ecx +
mov ecx [ebx+0A0h] +
mov eax [ecx+40h] +
lea ebp [ecx+48h] +
mov [eax+edi] ebp +
mov esi [ebx+28h] +
mov eax esi +
and esi 0FF80001Fh +
shr eax 5 +
and eax 3FFFFh +
mov edi eax +
or edi 10h +
shl edi 5 +
or esi edi +
mov [ebx+28h] esi +
test byte ptr [ecx+50h] 2 +
jz loc_42535B  +
test al 40h +
jnz loc_425D5E  +
mov esi [ebx+0A0h] +
mov eax [esi+208h] +
test eax eax +
jz loc_425392  +
mov edi [esp+48h+arg_4] +
cmp [eax+1Ch] edi +
mov edx [esp+48h+arg_4] +
jnz loc_425389  +
jmp loc_425244  +
cmp [eax+1Ch] edx +
jz loc_425244  +
mov eax [eax+3Ch] +
test eax eax +
nop   +
jnz loc_425380  +
mov eax [esp+48h+arg_4] +
mov ecx [esi+214h] +
add eax 1 +
cmp ecx eax +
jbe loc_4253C5  +
mov edi [esi+40h] +
mov ebp [esp+48h+arg_4] +
jmp loc_4253B7  +
add eax 1 +
cmp ecx eax +
jbe loc_4253C5  +
mov edx [edi+eax*4] +
cmp dword ptr [edx+4] 12h +
jnz loc_4253B0  +
cmp [edx+1Ch] ebp +
jnz loc_4253B0  +
cmp eax ecx +
jz loc_425D24  +
cmp eax [esp+48h+arg_4] +
jz loc_425244  +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_424D70  +
jmp loc_424EE2  +
mov eax [ebx+0A0h] +
mov edi [esp+48h+arg_4] +
mov ecx [ebp+0] +
mov [eax+91Ch] edi +
mov eax [ebx+0A0h] +
mov [eax+198h] ecx +
mov ecx [ebp+4] +
mov [eax+19Ch] ecx +
mov ecx [ebp+8] +
mov [eax+1A0h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+1A4h] ecx +
mov ecx [ebp+10h] +
mov [eax+1A8h] ecx +
mov ecx [ebp+14h] +
mov [eax+1ACh] ecx +
mov ecx [ebp+18h] +
mov [eax+1B0h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+1B4h] ecx +
mov ecx [ebp+20h] +
mov [eax+1B8h] ecx +
mov ecx [ebp+24h] +
mov [eax+1BCh] ecx +
mov ecx [ebp+28h] +
mov [eax+1C0h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+1C4h] ecx +
mov ecx [ebp+30h] +
mov [eax+1C8h] ecx +
mov ecx [ebp+34h] +
mov [eax+1CCh] ecx +
mov eax edi +
jmp loc_424EC2  +
mov edi [ebx+0A0h] +
cmp eax 9 +
mov eax [ecx+174h] +
mov esi [edi+214h] +
mov [esp+48h+var_2C] esi +
mov esi [ebp+28h] +
jz loc_42590C  +
movzx eax byte ptr [eax+4] +
cmp esi eax +
jnz loc_424EE0  +
mov eax [ebp+1Ch] +
cmp [esp+48h+var_2C] eax +
mov [esp+48h+var_28] eax +
jbe loc_425A10  +
mov eax [ebx+28h] +
mov esi [edi+40h] +
shr eax 5 +
test al 42h +
jnz loc_425546  +
mov eax [esp+48h+var_28] +
mov eax [esi+eax*4] +
mov eax [eax+4] +
cmp eax 2 +
jz loc_425A5A  +
cmp eax 0Bh +
jz loc_425A5A  +
mov ecx [esp+48h+var_2C] +
cmp ecx 1 +
jbe loc_425562  +
mov [esp+48h+var_24] ebp +
mov eax 1 +
mov ebp ecx +
mov [esp+48h+var_20] edi +
xor edi edi +
mov [esp+48h+var_1C] 0 +
lea esi [esi+0] +
mov ecx [esi+eax*4] +
mov ecx [ecx+4] +
cmp ecx 0Bh +
jz loc_425520  +
cmp ecx 2 +
jnz loc_42552A  +
test edi edi +
jnz loc_425D17  +
mov edi eax +
add eax 1 +
cmp eax ebp +
jnz loc_425510  +
mov eax edi +
mov ebp [esp+48h+var_24] +
test eax eax +
mov edi [esp+48h+var_20] +
jz loc_425562  +
mov [ebp+1Ch] eax +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+var_28] +
mov eax [esi+eax*4] +
mov eax [eax+4] +
cmp eax 0Bh +
jz loc_425A5A  +
cmp eax 2 +
jz loc_425A5A  +
mov eax [esp+48h+var_28] +
cmp [edi+90Ch] eax +
jnz loc_4256A0  +
test eax eax +
jz loc_4256A0  +
mov eax [ebp+20h] +
test eax eax +
jz loc_4256A0  +
cmp [esp+48h+var_2C] eax +
jbe loc_4256A0  +
mov ecx [edi+40h] +
mov ecx [ecx+eax*4] +
mov ecx [ecx+4] +
cmp ecx 9 +
jz loc_4256A0  +
cmp ecx 4 +
jz loc_4256A0  +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_424D70  +
test eax eax +
jz loc_424EE0  +
mov edx [ebx+0A0h] +
mov eax [ebp+20h] +
cmp eax [edx+214h] +
jnb loc_424EE0  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+2Ch] +
test eax eax +
mov [esp+48h+var_2C] eax +
jz loc_424EE0  +
mov eax [eax+8Ch] +
lea edx [eax+4Ch] +
add eax 3Ch +
cmp dword ptr [ebp+4] 4 +
cmovnz edx eax +
cmp dword ptr [edx] 0 +
jnz loc_424EE0  +
mov [esp+48h+var_44] 38h +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_28] edx +
call sub_407B20  +
test eax eax +
jz loc_424EE0  +
mov edx [esp+48h+var_28] +
mov edi eax +
mov ecx 0Eh +
mov esi ebp +
movs   +
mov edi [esp+48h+var_30] +
mov [edx] eax +
mov edx [ebx+0A0h] +
mov ecx [ebp+28h] +
mov edx [edx+40h] +
mov [edx+edi] eax +
mov eax [esp+48h+var_2C] +
mov esi [eax+4Ch] +
xor eax eax +
test ecx ecx +
jz loc_425658  +
mov eax [ebp+18h] +
xor edx edx +
div  ecx +
mov edi [esp+48h+var_2C] +
add eax esi +
mov edx [ebp+14h] +
mov [edi+4Ch] eax +
mov eax [ebp+10h] +
or dword ptr [edi+14h] 4 +
cmp dword ptr [ebp+18h] 0 +
mov dword ptr [edi+44h] 0 +
mov [edi+58h] eax +
mov [edi+5Ch] edx +
jz loc_425688  +
cmp dword ptr [ebp+4] 4 +
jnz loc_425688  +
or byte ptr [edi+19h] 4 +
or dword ptr [ebx+28h] 20h +
mov eax 1 +
jmp loc_424EE2  +
mov ebx ebp +
mov edx [esp+48h+var_28] +
mov ebp [esp+48h+var_2C] +
mov eax [esp+48h+arg_4] +
jmp loc_424EC2  +
mov eax ds:dword_49F464 +
test eax eax +
jnz loc_424F53  +
jmp loc_424F39  +
lea esi [eax-6FFFFFF6h] +
cmp esi 1 +
jbe loc_4256A0  +
lea esi [esi+0] +
cmp eax 6FFFFFF5h +
jz loc_4258D6  +
cmp eax [ecx+190h] +
jz loc_4258D6  +
mov edi [esp+48h+arg_4] +
mov eax [ecx+4Ch] +
mov [esp+48h+var_2C] edx +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_3C] edi +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
call eax  +
mov edx [esp+48h+var_2C] +
test eax eax +
jnz loc_425244  +
mov eax [ebp+4] +
test eax eax +
js loc_425A8C  +
lea ecx [eax-70000000h] +
cmp ecx 0FFFFFFFh +
jbe loc_425B72  +
lea ecx [eax-60000000h] +
cmp ecx 0FFFFFFFh +
ja loc_425CD8  +
test byte ptr [ebp+9] 1 +
jz loc_4256A0  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHowTo +
call off_476094  +
xor eax eax +
jmp loc_424EE2  +
mov eax [ebx+0A0h] +
mov edi [esp+48h+arg_4] +
mov ecx [ebp+0] +
mov [eax+918h] edi +
mov eax [ebx+0A0h] +
mov [eax+1D0h] ecx +
mov ecx [ebp+4] +
mov [eax+1D4h] ecx +
mov ecx [ebp+8] +
mov [eax+1D8h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+1DCh] ecx +
mov ecx [ebp+10h] +
mov [eax+1E0h] ecx +
mov ecx [ebp+14h] +
mov [eax+1E4h] ecx +
mov ecx [ebp+18h] +
mov [eax+1E8h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+1ECh] ecx +
mov ecx [ebp+20h] +
mov [eax+1F0h] ecx +
mov ecx [ebp+24h] +
mov [eax+1F4h] ecx +
mov ecx [ebp+28h] +
mov [eax+1F8h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+1FCh] ecx +
mov ecx [ebp+30h] +
mov [eax+200h] ecx +
mov ecx [ebp+34h] +
mov [eax+204h] ecx +
mov eax edi +
jmp loc_424EC2  +
mov eax [ebx+0A0h] +
mov eax [eax+208h] +
test eax eax +
jz loc_425835  +
mov edi [esp+48h+arg_4] +
cmp [eax+38h] edi +
mov edx [esp+48h+arg_4] +
jnz loc_42582E  +
jmp loc_425244  +
cmp [eax+38h] edx +
jz loc_425244  +
mov eax [eax+3Ch] +
test eax eax +
jnz loc_425825  +
mov [esp+48h+var_44] 40h +
mov [esp+48h+var_48] ebx +
call sub_407B20  +
test eax eax +
jz loc_424EE0  +
mov edx [ebp+0] +
mov edi [esp+48h+arg_4] +
mov [eax] edx +
mov edx [ebp+4] +
mov [eax+38h] edi +
mov [eax+4] edx +
mov edx [ebp+8] +
mov [eax+8] edx +
mov edx [ebp+0Ch] +
mov [eax+0Ch] edx +
mov edx [ebp+10h] +
mov [eax+10h] edx +
mov edx [ebp+14h] +
mov [eax+14h] edx +
mov edx [ebp+18h] +
mov [eax+18h] edx +
mov edx [ebp+1Ch] +
mov [eax+1Ch] edx +
mov edx [ebp+20h] +
mov [eax+20h] edx +
mov edx [ebp+24h] +
mov [eax+24h] edx +
mov edx [ebp+28h] +
mov [eax+28h] edx +
mov edx [ebp+2Ch] +
mov [eax+2Ch] edx +
mov edx [ebp+30h] +
mov [eax+30h] edx +
mov edx [ebp+34h] +
mov [eax+34h] edx +
mov edx [ebx+0A0h] +
mov ecx [edx+208h] +
mov [eax+3Ch] ecx +
mov [edx+208h] eax +
mov edx [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov edx [edx+40h] +
mov [edx+edi] eax +
mov eax 1 +
jmp loc_424EE2  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_425D90  +
test eax eax +
jz loc_424EE0  +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
call sub_44F0B0  +
mov eax 1 +
jmp loc_424EE2  +
movzx eax byte ptr [eax+3] +
jmp loc_4254A9  +
mov eax [ebp+18h] +
cmp eax 3 +
jbe loc_424EE0  +
cmp dword ptr [ebp+28h] 4 +
jnz loc_424EE0  +
test al 3 +
jnz loc_424EE0  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_425D90  +
test eax eax +
jz loc_424EE0  +
mov edx [ebp+30h] +
test edx edx +
jz loc_425244  +
mov eax [ebp+18h] +
shr eax 2 +
test eax eax +
jz loc_424EE0  +
test byte ptr [edx] 1 +
jz loc_42597B  +
mov ecx [ebp+2Ch] +
or dword ptr [ecx+14h] 20000h +
lea esi [edx-4] +
sub eax 1 +
jz loc_425244  +
mov edx [esi+eax*4+4] +
test edx edx +
jz loc_42597E  +
mov edx [edx+2Ch] +
test edx edx +
jz loc_42597E  +
mov ecx [edx+8Ch] +
cmp dword ptr [ecx+7Ch] 0 +
jz loc_42597E  +
mov eax [ebp+2Ch] +
mov eax [eax+8Ch] +
mov [eax+7Ch] edx +
mov eax 1 +
jmp loc_424EE2  +
test ecx ecx +
jnz loc_424EE0  +
mov dword ptr [ebp+20h] 0 +
mov eax 1 +
jmp loc_424EE2  +
mov [esp+48h+var_48] ebx +
call sub_40ECB0  +
cmp eax 6 +
jz loc_4259E7  +
cmp eax 9 +
jnz loc_424EE0  +
mov eax [ebp+1Ch] +
sub eax 0FF00h +
cmp eax 1 +
setbe al  +
movzx eax al +
jmp loc_424EE2  +
mov eax [esi+eax*4] +
mov eax [eax+1Ch] +
mov [ebp+1Ch] eax +
mov eax 1 +
jmp loc_424EE2  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_3C] edx +
mov [esp+48h+var_2C] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_38] eax +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] offset aBInvalidLinkLu +
mov [esp+48h+var_40] eax +
call off_476094  +
mov eax [esp+48h+arg_4] +
mov edx [esp+48h+var_2C] +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
call sub_425D90  +
jmp loc_424EE2  +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_24] edx +
mov [esp+48h+var_44] eax +
call sub_424D70  +
mov edx [esp+48h+var_24] +
test eax eax +
jz loc_424EE0  +
mov eax [ebp+1Ch] +
mov edi [ebx+0A0h] +
mov [esp+48h+var_28] eax +
jmp loc_425562  +
test byte ptr [ebp+8] 2 +
jz loc_4256A0  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHow_0 +
call off_476094  +
xor eax eax +
jmp loc_424EE2  +
mov eax [edx+1Ch] +
mov [ebp+1Ch] eax +
mov eax 1 +
jmp loc_424EE2  +
mov [esi+910h] eax +
mov ecx [ebp+0] +
mov eax [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov [eax+0F0h] ecx +
mov ecx [ebp+4] +
mov [eax+0F4h] ecx +
mov ecx [ebp+8] +
mov [eax+0F8h] ecx +
mov ecx [ebp+0Ch] +
mov [eax+0FCh] ecx +
mov ecx [ebp+10h] +
mov [eax+100h] ecx +
mov ecx [ebp+14h] +
mov [eax+104h] ecx +
mov ecx [ebp+18h] +
mov [eax+108h] ecx +
mov ecx [ebp+1Ch] +
mov [eax+10Ch] ecx +
mov ecx [ebp+20h] +
mov [eax+110h] ecx +
mov ecx [ebp+24h] +
mov [eax+114h] ecx +
mov ecx [ebp+28h] +
mov [eax+118h] ecx +
mov ecx [ebp+2Ch] +
mov [eax+11Ch] ecx +
mov ecx [ebp+30h] +
mov [eax+120h] ecx +
mov ecx [ebp+34h] +
mov [eax+124h] ecx +
mov ecx [ebx+0A0h] +
lea eax [ecx+0F0h] +
mov ecx [ecx+40h] +
mov [ecx+edi] eax +
or dword ptr [ebx+28h] 200h +
jmp loc_4250CD  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHow_1 +
call off_476094  +
xor eax eax +
jmp loc_424EE2  +
mov eax [ebx+0A0h] +
mov edx [ebp+0] +
mov edi [esp+48h+var_30] +
mov [eax+80h] edx +
mov edx [ebp+4] +
mov [eax+84h] edx +
mov edx [ebp+8] +
mov [eax+88h] edx +
mov edx [ebp+0Ch] +
mov [eax+8Ch] edx +
mov edx [ebp+10h] +
mov [eax+90h] edx +
mov edx [ebp+14h] +
mov [eax+94h] edx +
mov edx [ebp+18h] +
mov [eax+98h] edx +
mov edx [ebp+1Ch] +
mov [eax+9Ch] edx +
mov edx [ebp+20h] +
mov [eax+0A0h] edx +
mov edx [ebp+24h] +
mov [eax+0A4h] edx +
mov edx [ebp+28h] +
mov [eax+0A8h] edx +
mov edx [ebp+2Ch] +
mov [eax+0ACh] edx +
mov edx [ebp+30h] +
mov [eax+0B0h] edx +
mov edx [ebp+34h] +
mov [eax+0B4h] edx +
mov eax [ebx+0A0h] +
mov edx [eax+40h] +
sub eax 0FFFFFF80h +
mov [edx+edi] eax +
mov eax 1 +
jmp loc_424EE2  +
mov ebx ebp +
mov ebp [esp+48h+var_2C] +
mov edi ecx +
mov eax [ebp+0] +
mov [edi+0B8h] eax +
mov eax [ebp+4] +
mov [edi+0BCh] eax +
mov eax [ebp+8] +
mov [edi+0C0h] eax +
mov eax [ebp+0Ch] +
mov [edi+0C4h] eax +
mov eax [ebp+10h] +
mov [edi+0C8h] eax +
mov eax [ebp+14h] +
mov [edi+0CCh] eax +
mov eax [ebp+18h] +
mov [edi+0D0h] eax +
mov eax [ebp+1Ch] +
mov [edi+0D4h] eax +
mov eax [ebp+20h] +
mov [edi+0D8h] eax +
mov eax [ebp+24h] +
mov [edi+0DCh] eax +
mov eax [ebp+28h] +
mov [edi+0E0h] eax +
mov eax [ebp+2Ch] +
mov [edi+0E4h] eax +
mov eax [ebp+30h] +
mov [edi+0E8h] eax +
mov eax [ebp+34h] +
mov [edi+0ECh] eax +
mov eax [ebx+0A0h] +
mov edi [esp+48h+var_30] +
mov edx [eax+40h] +
add eax 0B8h +
mov [edx+edi] eax +
mov eax 1 +
jmp loc_424EE2  +
mov [esp+48h+var_3C] eax +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBDonTKnowHow_2 +
call off_476094  +
xor eax eax +
jmp loc_424EE2  +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] offset aBWarningMult_0 +
call off_476094  +
mov eax 1 +
jmp loc_424EE2  +
mov ebp [esp+48h+var_24] +
mov edi [esp+48h+var_20] +
jmp loc_425562  +
cmp [esp+48h+arg_4] 1 +
jbe loc_425D83  +
mov ecx [esi+40h] +
mov eax 1 +
mov esi [esp+48h+arg_4] +
jmp loc_425D4B  +
add eax 1 +
cmp eax esi +
jz loc_425244  +
mov edx [ecx+eax*4] +
cmp dword ptr [edx+4] 12h +
jnz loc_425D40  +
cmp [edx+1Ch] esi +
jnz loc_425D40  +
jmp loc_4253CD  +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_3C] eax +
call sub_425D90  +
test eax eax +
jz loc_424EE0  +
jmp loc_42535B  +
mov eax 1 +
jmp loc_4253CD  +
***
push edi  +
push esi  +
push ebx  +
sub esp 8Ch +
mov ebx [esp+8Ch+arg_4] +
mov edx [ebx+2Ch] +
test edx edx +
jz loc_425DB8  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call near ptr dword_410C7C+54h  +
test eax eax +
mov ebp eax +
jz loc_425E88  +
mov [ebx+2Ch] eax +
mov edx [ebx] +
mov eax [eax+8Ch] +
mov [eax] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
mov edx [ebx+0Ch] +
mov [eax+0Ch] edx +
mov edx [ebx+10h] +
mov [eax+10h] edx +
mov edx [ebx+14h] +
mov [eax+14h] edx +
mov edx [ebx+18h] +
mov [eax+18h] edx +
mov edx [ebx+1Ch] +
mov [eax+1Ch] edx +
mov edx [ebx+20h] +
mov [eax+20h] edx +
mov edx [ebx+24h] +
mov [eax+24h] edx +
mov edx [ebx+28h] +
mov [eax+28h] edx +
mov edx [ebx+2Ch] +
mov [eax+2Ch] edx +
mov edx [ebx+30h] +
mov [eax+30h] edx +
mov edx [ebx+34h] +
mov [eax+34h] edx +
mov edx [esp+8Ch+arg_C] +
mov [eax+5Ch] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov [ebp+50h] eax +
mov eax [ebx+0Ch] +
mov [ebp+54h] edx +
or byte ptr [ebp+18h] 1 +
mov [ebp+20h] eax +
mov [ebp+1Ch] eax +
mov eax [ebx+18h] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_410F10  +
test eax eax +
jnz loc_425E90  +
xor eax eax +
jmp loc_425DAD  +
mov eax [ebx+24h] +
mov [esp+8Ch+var_8C] eax +
call near ptr dword_40F9D0  +
mov [esp+8Ch+var_40] 0 +
mov [ebp+40h] eax +
mov eax [ebx+4] +
cmp eax 8 +
jz loc_426A21  +
cmp eax 11h +
jz loc_4260CE  +
mov [esp+8Ch+var_40] 100h +
mov edx 100h +
mov eax [ebx+8] +
test al 2 +
jz loc_425ED6  +
or edx 3 +
mov [esp+8Ch+var_40] edx +
test al 1 +
jnz loc_425EE1  +
or edx 8 +
mov [esp+8Ch+var_40] edx +
test al 4 +
jz loc_426036  +
or edx 10h +
mov [esp+8Ch+var_40] edx +
test al 10h +
jz loc_425F18  +
mov edx [esp+8Ch+var_40] +
mov ecx edx +
or ecx 800000h +
test al 20h +
mov [esp+8Ch+var_40] ecx +
mov ecx [ebx+28h] +
mov [ebp+78h] ecx +
jz loc_425F18  +
or edx 1800000h +
mov [esp+8Ch+var_40] edx +
test ah 2 +
jnz loc_42605D  +
test ah 4 +
jnz loc_42604B  +
mov esi [esp+8Ch+var_40] +
test eax eax +
js loc_426296  +
test esi 1 +
jnz loc_425F4E  +
mov eax [esp+8Ch+arg_8] +
cmp byte ptr [eax] 2Eh +
jz loc_42645F  +
mov esi [esp+8Ch+arg_8] +
mov edi offset a_gnu_linkonce +
mov ecx 0Dh +
cmps   +
jnz loc_425F74  +
mov eax [ebp+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_4264C5  +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+50h] +
test eax eax +
jz loc_425FA0  +
lea edx [esp+8Ch+var_40] +
mov [esp+8Ch+var_88] ebx +
mov [esp+8Ch+var_8C] edx +
call eax  +
test eax eax +
jz loc_425E88  +
mov eax [esp+8Ch+var_40] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_410E10  +
test eax eax +
jz loc_425E88  +
cmp dword ptr [ebx+4] 7 +
jz loc_4264D2  +
mov eax [esp+8Ch+var_40] +
test al 1 +
mov [esp+8Ch+var_60] eax +
jz loc_42625A  +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov edi [eax+30h] +
mov esi [eax+44h] +
test edi edi +
jz loc_42625A  +
mov eax [esi+10h] +
test eax eax +
jnz loc_4260F1  +
mov eax esi +
xor edx edx +
xor ecx ecx +
jmp loc_426028  +
add edx 1 +
add eax 20h +
cmp edx edi +
jz loc_4260E0  +
cmp dword ptr [eax+10h] 0 +
jnz loc_4260F1  +
cmp dword ptr [eax] 1 +
jnz loc_426010  +
cmp dword ptr [eax+18h] 1 +
sbb ecx 0FFFFFFFFh +
jmp loc_426010  +
test dl 2 +
jz loc_425EF0  +
or edx 20h +
mov [esp+8Ch+var_40] edx +
jmp loc_425EF0  +
mov edx [esp+8Ch+var_40] +
or dh 4 +
mov [esp+8Ch+var_40] edx +
mov esi edx +
jmp loc_425F2E  +
mov eax [esp+8Ch+arg_0] +
mov edi [eax+0A0h] +
mov eax [edi+908h] +
test eax eax +
mov [esp+8Ch+var_64] eax +
jnz loc_4262A6  +
mov eax [edi+214h] +
test eax eax +
mov ecx eax +
mov [esp+8Ch+var_60] eax +
jz loc_426450  +
mov eax [edi+40h] +
mov [esp+8Ch+var_68] 0 +
lea ecx [eax+ecx*4] +
jmp loc_4260AB  +
add eax 4 +
cmp eax ecx +
jz loc_426444  +
mov edx [eax] +
cmp dword ptr [edx+4] 11h +
jnz loc_4260A0  +
mov esi [edx+18h] +
cmp esi 7 +
jbe loc_4260A0  +
cmp dword ptr [edx+28h] 4 +
jnz loc_4260A0  +
and esi 3 +
cmp esi 1 +
adc [esp+8Ch+var_68] 0 +
jmp loc_4260A0  +
mov [esp+8Ch+var_40] 2008100h +
mov edx 2008100h +
jmp loc_425EC8  +
cmp ecx 1 +
ja loc_42628C  +
test edi edi +
jz loc_42625A  +
mov eax [esp+8Ch+var_60] +
xor edx edx +
mov [esp+8Ch+arg_4] ebx +
mov ebx edx +
mov [esp+8Ch+var_54] ebp +
mov [esp+8Ch+var_68] edi +
and eax 2 +
mov [esp+8Ch+var_50] eax +
jmp loc_42612A  +
cmp ecx 7 +
jz loc_426A00  +
add ebx 1 +
add esi 20h +
cmp ebx [esp+8Ch+var_68] +
jnb loc_426256  +
mov ecx [esi] +
cmp ecx 1 +
jnz loc_426111  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+8] +
mov edi eax +
and edi 400h +
mov [esp+8Ch+var_64] edi +
jnz loc_42611A  +
and eax 2 +
mov [esp+8Ch+var_5C] eax +
jnz loc_426165  +
lea eax [ecx-6474E550h] +
cmp eax 2 +
jbe loc_42611A  +
lea eax [ecx-1] +
cmp eax 1 +
jbe loc_42611A  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+4] +
cmp eax 8 +
mov [esp+8Ch+var_58] eax +
jz loc_4261C0  +
mov eax [esp+8Ch+arg_4] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov ebp edx +
mov edi eax +
mov eax [esi+8] +
cmp eax edi +
ja loc_42611A  +
xor edx edx +
sub edi eax +
mov eax edi +
mov edi [esp+8Ch+arg_4] +
sbb ebp edx +
mov edx ebp +
xor ebp ebp +
mov edi [edi+18h] +
add eax edi +
mov edi [esi+14h] +
adc edx ebp +
cmp edx 0 +
jg loc_42611A  +
jl loc_4261C0  +
cmp eax edi +
ja loc_42611A  +
mov ebp [esp+8Ch+var_5C] +
test ebp ebp +
jz loc_426209  +
mov eax [esp+8Ch+arg_4] +
mov edx [esi+0Ch] +
mov eax [eax+0Ch] +
cmp eax edx +
jb loc_42611A  +
mov edi [esp+8Ch+var_64] +
sub eax edx +
mov edx eax +
test edi edi +
jz loc_4261F4  +
cmp [esp+8Ch+var_58] 8 +
jz loc_4269F0  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+18h] +
add eax edx +
cmp eax [esi+18h] +
ja loc_42611A  +
cmp ecx 2 +
mov eax [esp+8Ch+arg_4] +
jz loc_4268FA  +
mov eax [eax+0Ch] +
mov edx [esi+0Ch] +
mov ecx [esp+8Ch+var_50] +
test ecx ecx +
jnz loc_426787  +
mov ecx [esi+10h] +
mov edi [esp+8Ch+var_54] +
add ecx eax +
sub ecx edx +
mov [edi+20h] ecx +
cmp edx eax +
ja loc_42611A  +
mov edi [esp+8Ch+arg_4] +
add edx [esi+18h] +
add eax [edi+18h] +
cmp eax edx +
ja loc_42611A  +
mov ebp [esp+8Ch+var_54] +
test [esp+8Ch+var_60] 2000h +
jz loc_42628C  +
mov eax [esp+8Ch+arg_8] +
movzx eax byte ptr [eax+1] +
cmp al 64h +
jz loc_426528  +
cmp al 7Ah +
jnz loc_42628C  +
mov eax [esp+8Ch+arg_8] +
cmp byte ptr [eax+7] 5Fh +
jz loc_426539  +
mov eax 1 +
jmp loc_425DAD  +
mov eax esi +
or ah 80h +
mov [esp+8Ch+var_40] eax +
mov esi eax +
jmp loc_425F36  +
mov eax [esp+8Ch+var_64] +
xor edi edi +
sub eax 1 +
cmp eax 0FFFFFFFDh +
mov [esp+8Ch+var_5C] eax +
ja loc_426309  +
mov [esp+8Ch+var_60] ebp +
lea esi [esi+0] +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov [esp+8Ch+var_68] eax +
mov eax [eax+904h] +
mov ebp [eax+edi*4] +
mov ecx [ebp+18h] +
mov esi [ebp+30h] +
shr ecx 2 +
mov eax ecx +
mov edx esi +
jmp loc_4262F7  +
add edx 4 +
cmp ebx [edx] +
jz loc_426322  +
sub eax 1 +
jnz loc_4262F0  +
add edi 1 +
cmp [esp+8Ch+var_64] edi +
ja loc_4262C0  +
mov ebp [esp+8Ch+var_60] +
mov eax [ebp+8Ch] +
mov ecx [eax+74h] +
test ecx ecx +
jz loc_4268D7  +
mov eax [ebx+8] +
jmp loc_425F21  +
sub ecx 1 +
jz loc_426370  +
add esi 4 +
mov eax [esi] +
mov eax [eax+2Ch] +
test eax eax +
jz loc_426322  +
mov eax [eax+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_426322  +
mov edi [esp+8Ch+var_60] +
mov esi [eax+74h] +
mov ecx [edi+8Ch] +
mov [ecx+74h] esi +
mov [ecx+7Ch] edx +
mov [eax+7Ch] edi +
mov eax [ebp+2Ch] +
test eax eax +
jz loc_42636A  +
mov eax [eax+8Ch] +
mov edi [esp+8Ch+var_60] +
mov [eax+7Ch] edi +
mov edi [esp+8Ch+var_5C] +
jmp loc_4262FC  +
mov edi [esp+8Ch+var_68] +
mov eax [ebp+1Ch] +
cmp eax [edi+214h] +
jnb loc_425E88  +
mov edi [esp+8Ch+var_68] +
mov edx [edi+40h] +
mov edx [edx+eax*4] +
cmp dword ptr [edx+4] 2 +
jnz loc_425E88  +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_424D70  +
test eax eax +
jz loc_425E88  +
mov eax [esp+8Ch+arg_0] +
lea edi [esp+8Ch+var_3C] +
mov eax [eax+0A0h] +
mov [esp+8Ch+var_68] eax +
lea esi [eax+48h] +
mov eax [ebp+20h] +
mov [esp+8Ch+var_74] edi +
lea edi [esp+8Ch+var_24] +
mov [esp+8Ch+var_78] edi +
lea edi [esp+8Ch+var_38] +
mov [esp+8Ch+var_7C] edi +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] 1 +
mov [esp+8Ch+var_88] esi +
mov [esp+8Ch+var_8C] eax +
call sub_424210  +
test eax eax +
jz loc_425E88  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] edi +
mov [esp+8Ch+var_88] esi +
mov [esp+8Ch+var_8C] eax +
call sub_424560  +
test eax eax +
jz loc_425E88  +
mov edi [esp+8Ch+var_60] +
mov edx [edi+8Ch] +
mov [edx+74h] eax +
mov [edx+7Ch] edi +
jmp loc_426356  +
mov eax [esp+8Ch+var_68] +
test eax eax +
jnz loc_426606  +
mov dword ptr [edi+908h] 0FFFFFFFFh +
jmp loc_426309  +
movzx eax byte ptr [eax+1] +
cmp al 64h +
jz loc_4267A3  +
cmp al 67h +
jz loc_426832  +
cmp al 6Ch +
jz loc_426981  +
cmp al 73h +
lea esi [esi+0] +
jz loc_426990  +
cmp al 7Ah +
jnz loc_425F4E  +
mov edx 7 +
mov eax offset a_zdebug +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_84] edx +
mov [esp+8Ch+var_8C] eax +
call strncmp  +
test eax eax +
jnz loc_425F4E  +
mov eax esi +
or ah 20h +
mov [esp+8Ch+var_40] eax +
jmp loc_425F4E  +
or [esp+8Ch+var_40] 20000h +
jmp loc_425F74  +
lea eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_4111A0  +
test eax eax +
jz loc_425DAD  +
mov ecx [ebx+18h] +
mov edx [esp+8Ch+var_24] +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] 0FFFFFFFFh +
mov [esp+8Ch+var_88] 0FFFFFFFFh +
call sub_422D80  +
mov eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_8C] eax +
call free  +
jmp loc_425FCD  +
mov eax [esp+8Ch+arg_8] +
cmp byte ptr [eax+6] 5Fh +
jnz loc_42628C  +
lea eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_80] eax +
lea eax [esp+8Ch+var_38] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_41F320  +
test eax eax +
mov ecx eax +
jz loc_42685C  +
mov eax [esp+8Ch+arg_0] +
test byte ptr [eax+2Ah] 10h +
jz loc_42685C  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_41F780  +
test eax eax +
jz loc_4269C6  +
mov eax 2 +
mov edi [esp+8Ch+arg_0] +
test byte ptr [edi+2Ch] 2 +
jz loc_4269AB  +
mov edi [esp+8Ch+arg_8] +
cmp byte ptr [edi+1] 7Ah +
jnz loc_42628C  +
cmp eax 2 +
jz loc_4265CF  +
mov eax [esp+8Ch+arg_0] +
test byte ptr [eax+2Ah] 40h +
jz loc_42628C  +
mov edx [esp+8Ch+arg_8] +
mov eax [esp+8Ch+arg_0] +
call sub_422860  +
test eax eax +
jz loc_425E88  +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_410E30  +
jmp loc_42628C  +
mov eax [esp+8Ch+var_68] +
mov [edi+908h] eax +
mov edi [esp+8Ch+arg_0] +
mov esi [edi+0A0h] +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_84] 4 +
mov [esp+8Ch+var_88] eax +
call sub_407BA0  +
mov [esi+904h] eax +
mov eax [esp+8Ch+arg_0] +
xor esi esi +
mov edx [eax+0A0h] +
mov edi [edx+904h] +
test edi edi +
jz loc_425E88  +
mov [esp+8Ch+arg_4] ebx +
mov ebx [esp+8Ch+var_60] +
mov [esp+8Ch+var_5C] ebp +
jmp loc_426670  +
add esi 1 +
cmp esi ebx +
jz loc_4267B2  +
mov eax [edx+40h] +
mov edi [eax+esi*4] +
cmp dword ptr [edi+4] 11h +
jnz loc_426665  +
mov eax [edi+18h] +
cmp eax 7 +
jbe loc_426665  +
cmp dword ptr [edi+28h] 4 +
jnz loc_426665  +
test al 3 +
jnz loc_426665  +
mov edx [edx+904h] +
mov ebp eax +
mov ecx [esp+8Ch+var_64] +
and ebp 3FFFFFFFh +
mov [edx+ecx*4] edi +
add ecx 1 +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] 1 +
mov [esp+8Ch+var_68] ecx +
mov [esp+8Ch+var_8C] eax +
call sub_407BA0  +
test eax eax +
mov [edi+30h] eax +
jz loc_426A6A  +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] eax +
call memset  +
mov eax [edi+10h] +
mov edx [edi+14h] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] edx +
mov [esp+8Ch+var_8C] eax +
call sub_4060C0  +
test eax eax +
jnz loc_426733  +
mov eax [edi+18h] +
mov edx [edi+30h] +
mov ecx [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
mov [esp+8Ch+var_8C] edx +
mov [esp+8Ch+var_84] ecx +
call sub_405EB0  +
cmp eax [edi+18h] +
jz loc_426AA7  +
mov eax [edi+18h] +
mov [esp+8Ch+var_8C] offset aBInvalidSizeFi +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_476094  +
mov [esp+8Ch+var_8C] 11h +
call sub_40C770  +
mov eax [edi+30h] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] eax +
call memset  +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+0A0h] +
jmp loc_426665  +
mov edi [esp+8Ch+arg_4] +
mov ecx [esi+10h] +
add ecx [edi+10h] +
mov edi [esp+8Ch+var_54] +
sub ecx [esi+8] +
mov [edi+20h] ecx +
jmp loc_426239  +
mov edx 6 +
mov eax offset a_debug +
jmp loc_426498  +
mov eax [esp+8Ch+var_64] +
cmp [edx+908h] eax +
mov ebp [esp+8Ch+var_5C] +
mov ebx [esp+8Ch+arg_4] +
jz loc_4262A6  +
test eax eax +
mov [edx+908h] eax +
jnz loc_4262A6  +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov dword ptr [eax+904h] 0 +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+0A0h] +
mov dword ptr [eax+908h] 0FFFFFFFFh +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] offset aBNoValidGroupS +
mov [esp+8Ch+var_88] eax +
call off_476094  +
mov [esp+8Ch+var_8C] 11h +
call sub_40C770  +
jmp loc_426309  +
mov eax [esp+8Ch+arg_8] +
movzx eax byte ptr [eax+2] +
cmp al 6Eh +
jz loc_4269B7  +
cmp al 64h +
jnz loc_425F4E  +
mov edx 0Bh +
mov eax offset a_gdb_index +
jmp loc_426498  +
cmp dword ptr [ebp+24h] 0 +
jz loc_42628C  +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+28h] +
mov eax 1 +
shr edx 5 +
and edx 3FFFFh +
test dh 40h +
jz loc_425DAD  +
mov ebx [esp+8Ch+var_38] +
test ebx ebx +
js loc_425DAD  +
cmp [esp+8Ch+var_24] 0 +
jz loc_425DAD  +
test ecx ecx +
jz loc_4268B2  +
shr edx 11h +
test ebx ebx +
setnle cl  +
cmp dl cl +
jz loc_425DAD  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_8C] eax +
call sub_41F8A0  +
test eax eax +
jz loc_426A40  +
mov eax 1 +
jmp loc_426597  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_8C] offset aBNoGroupInfoFo +
mov [esp+8Ch+var_88] eax +
call off_476094  +
xor eax eax +
jmp loc_425DAD  +
cmp dword ptr [eax+18h] 0 +
jnz loc_426219  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_42699F  +
cmp [esp+8Ch+var_58] 8 +
jz loc_426950  +
mov eax [esp+8Ch+arg_4] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov ebp edx +
mov edi eax +
mov eax [esi+8] +
cmp eax edi +
jnb loc_42611A  +
xor edx edx +
sub edi eax +
sbb ebp edx +
mov eax edi +
mov edi [esi+14h] +
cmp ebp 0 +
jg loc_42611A  +
jl loc_426950  +
cmp eax edi +
jnb loc_42611A  +
mov eax [esp+8Ch+arg_4] +
cmp [esp+8Ch+var_5C] 0 +
mov edx [esi+0Ch] +
mov eax [eax+0Ch] +
jz loc_42621F  +
cmp eax edx +
jbe loc_42611A  +
mov edi eax +
sub edi edx +
cmp ecx edi +
jbe loc_42611A  +
jmp loc_42621F  +
mov edx 5 +
mov eax offset a_line +
jmp loc_426498  +
mov edx 5 +
mov eax offset a_stab_1 +
jmp loc_426498  +
mov eax [esp+8Ch+arg_4] +
jmp loc_426219  +
or dword ptr [ebp+14h] 10000000h +
jmp loc_42628C  +
mov edx 11h +
mov eax offset a_gnu_linkonce_ +
jmp loc_426498  +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_8C] offset aBUnableToIniti +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_476094  +
xor eax eax +
jmp loc_425DAD  +
xor eax eax +
cmp ecx 7 +
jnz loc_4261FE  +
jmp loc_4261F4  +
mov eax [esp+8Ch+arg_4] +
mov eax [eax+8] +
mov edi eax +
and edi 400h +
mov [esp+8Ch+var_64] edi +
jnz loc_426149  +
jmp loc_42611A  +
mov eax [ebx+8] +
xor edx edx +
test al 2 +
jz loc_425ED6  +
mov [esp+8Ch+var_40] 1 +
mov edx 1 +
jmp loc_425ED6  +
mov eax [esp+8Ch+arg_8] +
mov [esp+8Ch+var_8C] offset aBUnableToIni_0 +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_476094  +
xor eax eax +
jmp loc_425DAD  +
mov eax [edi+18h] +
mov [esp+8Ch+var_8C] offset aBCorruptSizeFi +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_88] eax +
call off_476094  +
mov [esp+8Ch+var_8C] 11h +
call sub_40C770  +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+0A0h] +
jmp loc_426665  +
mov ecx [edi+30h] +
mov [esp+8Ch+var_64] esi +
mov esi ebx +
lea edx [ecx+eax] +
add ebp ecx +
mov ebx edx +
jmp loc_426AD3  +
cmp esi eax +
jbe loc_426B25  +
mov ecx [esp+8Ch+arg_0] +
mov ecx [ecx+0A0h] +
mov ecx [ecx+40h] +
mov eax [ecx+eax*4] +
mov [ebp+0] eax +
mov eax [esp+8Ch+arg_0] +
sub ebx 4 +
sub ebp 4 +
mov eax [eax+4] +
mov eax [eax+4Ch] +
mov [esp+8Ch+var_8C] ebx +
call eax  +
cmp ebx [edi+30h] +
jnz loc_426AB9  +
mov [ebp+0] eax +
mov edx [edi+2Ch] +
mov ebx esi +
mov esi [esp+8Ch+var_64] +
test edx edx +
jz loc_426B0B  +
test al 1 +
jz loc_426B0B  +
or dword ptr [edx+14h] 20000h +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+0A0h] +
mov eax [esp+8Ch+var_68] +
mov [esp+8Ch+var_64] eax +
jmp loc_426665  +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] offset aBInvalidSht_gr +
mov [esp+8Ch+var_88] eax +
call off_476094  +
xor eax eax +
jmp loc_426ABD  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+60h] +
mov ebp [esp+68h] +
mov esi [esp+64h] +
and ebp 1Fh +
cmp [ebx] esi +
jz loc_426C23  +
lea eax [ebp+ebp*4+0] +
lea eax [ebx+eax*4+84h] +
mov ecx eax +
mov [esp+1Ch] eax +
lea eax [esp+24h] +
mov [esp+18h] eax +
lea eax [esp+28h] +
mov [esp+14h] eax +
mov eax [esp+68h] +
mov [esp+10h] ecx +
mov dword ptr [esp+8] 1 +
mov [esp+0Ch] eax +
mov eax [esi+0A0h] +
mov [esp] esi +
add eax 48h +
mov [esp+4] eax +
call sub_424210  +
test eax eax +
jz loc_426C64  +
cmp [ebx] esi +
jz loc_426BF4  +
lea edi [ebx+4] +
mov edx 80h +
test edi 1 +
jnz loc_426C42  +
test edi 2 +
jnz loc_426C50  +
mov ecx edx +
mov eax 0FFFFFFFFh +
shr ecx 2 +
test dl 2 +
stos   +
jnz loc_426C10  +
and edx 1 +
jnz loc_426C08  +
mov [ebx] esi +
mov eax [esp+68h] +
mov [ebx+ebp*4+4] eax +
mov eax [esp+1Ch] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov byte ptr [edi] 0FFh +
jmp loc_426BF2  +
***
mov eax 0FFFFFFFFh +
add edi 2 +
mov [edi-2] ax +
and edx 1 +
jz loc_426BF2  +
jmp loc_426C08  +
***
mov eax [esp+68h] +
cmp [ebx+ebp*4+4] eax +
jnz loc_426B6E  +
lea eax [ebp+ebp*4+0] +
lea eax [ebx+eax*4+84h] +
mov [esp+1Ch] eax +
jmp loc_426BFC  +
***
mov byte ptr [ebx+4] 0FFh +
lea edi [ebx+5] +
mov dl 7Fh +
jmp loc_426BD4  +
***
mov ecx 0FFFFFFFFh +
add edi 2 +
mov [edi-2] cx +
sub edx 2 +
jmp loc_426BDC  +
***
mov dword ptr [esp+1Ch] 0 +
jmp loc_426BFC  +
***
mov edx [esp+arg_0] +
mov eax [esp+arg_4] +
mov edx [edx+0A0h] +
cmp [edx+214h] eax +
jbe loc_426C90  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+2Ch] +
retn   +
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
mov edx [ebx] +
test edx edx +
jz loc_426D62  +
mov ebp eax +
mov edi edx +
lea esi [ebx+14h] +
jmp loc_426D02  +
lea edx [ecx+eax] +
cmp ebp edx +
jl loc_426CF7  +
mov edx ebp +
add ecx edi +
sub edx eax +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] ecx +
add eax edx +
mov [esp+1Ch+var_1C] eax +
call memcmp  +
test eax eax +
jz loc_426D58  +
mov ebx esi +
mov edi [esi] +
lea esi [esi+14h] +
test edi edi +
jz loc_426D62  +
mov ecx [ebx+4] +
cmp ebp ecx +
jl loc_426CF7  +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] ecx +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_10] ecx +
mov [esp+1Ch+var_1C] eax +
call memcmp  +
mov ecx [esp+1Ch+var_10] +
test eax eax +
jnz loc_426CF7  +
mov eax [ebx+8] +
test eax eax +
jg loc_426CD0  +
mov edx [esp+1Ch+arg_0] +
movzx edx byte ptr [edx+ecx] +
test dl dl +
jz loc_426D58  +
test eax eax +
jz loc_426CF7  +
cmp dl 2Eh +
jz loc_426D58  +
cmp eax 0FFFFFFFEh +
jz loc_426CF7  +
mov eax [esp+1Ch+arg_8] +
test eax eax +
jz loc_426D58  +
cmp dword ptr [ebx+0Ch] 9 +
jz loc_426CF7  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+24h] +
mov ebx [esi] +
test ebx ebx +
jz loc_426E00  +
mov eax [esp+20h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov edx [eax+178h] +
test edx edx +
jz loc_426DC0  +
movzx eax byte ptr [esi+19h] +
mov [esp+4] edx +
mov [esp] ebx +
shr al 2 +
and eax 1 +
mov [esp+8] eax +
call sub_426CA0  +
test eax eax +
jz loc_426DC0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
cmp byte ptr [ebx] 2Eh +
jnz loc_426DB8  +
movsx edx byte ptr [ebx+1] +
sub edx 62h +
cmp edx 18h +
ja loc_426DB8  +
mov edx ds:off_48F7C0[edx*4] +
test edx edx +
jz loc_426DB8  +
movzx eax byte ptr [esi+19h] +
mov [esp] ebx +
mov [esp+4] edx +
shr al 2 +
and eax 1 +
mov [esp+8] eax +
call sub_426CA0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
xor eax eax +
jmp loc_426DB8  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov esi [esp+20h] +
mov eax [ebx+8Ch] +
test eax eax +
jz loc_426EB2  +
mov eax [esi+4] +
mov ecx [eax+1B0h] +
movzx eax byte ptr [ebx+19h] +
movzx edx byte ptr [ecx+1ACh] +
and eax 0FFFFFFFBh +
shr dl 2 +
and edx 4 +
or eax edx +
mov [ebx+19h] al +
movzx eax byte ptr [esi+28h] +
and eax 18h +
cmp al 8 +
jz loc_426EA5  +
mov eax [ecx+54h] +
mov [esp+4] ebx +
mov [esp] esi +
call eax  +
test eax eax +
jz loc_426E81  +
mov edx [ebx+14h] +
mov ecx [eax+0Ch] +
test edx edx +
jnz loc_426E93  +
mov edx [ebx+8Ch] +
mov eax [eax+10h] +
mov [edx+4] ecx +
mov [edx+8] eax +
mov [esp+24h] ebx +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp near ptr dword_4106E0+0B0h  +
***
and edx 100000h +
jnz loc_426E72  +
lea edx [ecx-0Eh] +
cmp edx 1 +
ja loc_426E81  +
jmp loc_426E72  +
***
test byte ptr [ebx+16h] 10h +
jz loc_426E81  +
nop   +
lea esi [esi+0] +
jmp loc_426E58  +
***
mov dword ptr [esp+4] 90h +
mov [esp] esi +
call sub_407C00  +
test eax eax +
jz loc_426ED1  +
mov [ebx+8Ch] eax +
jmp loc_426E2B  +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov ebx [esp+6Ch+arg_4] +
mov eax [ebx+18h] +
test eax eax +
jnz loc_426F10  +
cmp dword ptr [ebx+14h] 0 +
jnz loc_4271DA  +
nop   +
add esp 6Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+14h] +
lea esi [esp+6Ch+var_4C] +
test edx edx +
jnz loc_427031  +
mov eax offset unk_48E4B2 +
mov [esp+6Ch+var_5C] eax +
mov eax [esp+6Ch+arg_8] +
mov [esp+6Ch+var_68] offset aSDS +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_60] eax +
mov eax [esp+6Ch+arg_C] +
mov [esp+6Ch+var_64] eax +
call sprintf  +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_426F50  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
mov eax [esp+6Ch+arg_0] +
sbb edx 3 +
sub edx esi +
lea edi [edx+1] +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] eax +
call sub_407B20  +
test eax eax +
mov ebp eax +
jz loc_427158  +
mov [esp+6Ch+var_68] esi +
mov [esp+6Ch+var_64] edi +
mov [esp+6Ch+var_6C] eax +
call memcpy  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] ebp +
mov [esp+6Ch+var_6C] eax +
call sub_410DD0  +
test eax eax +
mov esi eax +
jz loc_427158  +
mov edx [ebx+14h] +
mov ecx [ebx+10h] +
mov eax [ebx+0Ch] +
add ecx edx +
mov [esi+20h] ecx +
mov ecx [ebx+18h] +
add eax edx +
mov [esi+1Ch] eax +
sub ecx edx +
add edx [ebx+8] +
mov [esi+24h] ecx +
mov dword ptr [esi+54h] 0 +
mov [esi+50h] edx +
mov edx eax +
neg edx  +
and eax edx +
jz loc_427162  +
mov edx [ebx+1Ch] +
cmp eax edx +
cmova eax edx +
mov [esp+6Ch+var_6C] eax +
call near ptr dword_40F9D0  +
cmp dword ptr [ebx] 1 +
mov [esi+40h] eax +
jz loc_427176  +
mov eax [ebx+4] +
test al 2 +
jnz loc_426F00  +
or dword ptr [esi+14h] 8 +
jmp loc_426F00  +
xor ecx ecx +
cmp edx eax +
setb cl  +
cmp eax edx +
mov ebp ecx +
mov eax offset unk_48E4B2 +
mov ecx offset aA +
cmovbe ecx eax +
mov eax [esp+6Ch+arg_8] +
lea esi [esp+6Ch+var_4C] +
mov [esp+6Ch+var_5C] ecx +
mov [esp+6Ch+var_68] offset aSDS +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_60] eax +
mov eax [esp+6Ch+arg_C] +
mov [esp+6Ch+var_64] eax +
call sprintf  +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_427079  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
mov eax [esp+6Ch+arg_0] +
sbb edx 3 +
sub edx esi +
add edx 1 +
mov [esp+6Ch+var_68] edx +
mov [esp+6Ch+var_6C] eax +
mov [esp+6Ch+var_50] edx +
call sub_407B20  +
mov edx [esp+6Ch+var_50] +
test eax eax +
mov edi eax +
jz loc_427158  +
mov [esp+6Ch+var_64] edx +
mov [esp+6Ch+var_68] esi +
mov [esp+6Ch+var_6C] eax +
call memcpy  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] eax +
call sub_410DD0  +
test eax eax +
mov edi eax +
jz loc_427158  +
mov eax [ebx+0Ch] +
mov [edi+1Ch] eax +
mov eax [ebx+10h] +
mov [edi+20h] eax +
mov eax [ebx+14h] +
mov [edi+24h] eax +
mov eax [ebx+8] +
or dword ptr [edi+14h] 100h +
mov dword ptr [edi+54h] 0 +
mov [edi+50h] eax +
mov eax [ebx+1Ch] +
mov [esp+6Ch+var_6C] eax +
call near ptr dword_40F9D0  +
cmp dword ptr [ebx] 1 +
mov [edi+40h] eax +
jz loc_4271B0  +
mov eax [ebx+4] +
test al 2 +
jz loc_427170  +
mov eax [ebx+14h] +
cmp [ebx+18h] eax +
jbe loc_426F00  +
test ebp ebp +
mov eax offset aB +
jnz loc_426F24  +
jmp loc_426F1F  +
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+1Ch] +
jmp loc_427009  +
or dword ptr [edi+14h] 8 +
jmp loc_42713A  +
mov eax [esp+6Ch+arg_0] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jz loc_4271D1  +
mov edx [esi+14h] +
mov eax edx +
or eax 1 +
mov [esi+14h] eax +
mov eax [ebx+4] +
test al 1 +
jz loc_427020  +
or edx 11h +
mov [esi+14h] edx +
jmp loc_427020  +
mov ecx [edi+14h] +
mov eax ecx +
or eax 3 +
mov [edi+14h] eax +
mov eax [ebx+4] +
test al 1 +
jz loc_427136  +
or ecx 13h +
mov [edi+14h] ecx +
jmp loc_427136  +
mov dword ptr [esi+24h] 0 +
jmp loc_427188  +
xor ebp ebp +
mov ecx offset unk_48E4B2 +
jmp loc_427049  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
mov ebx [esp+2Ch+arg_0] +
mov edx [esi] +
cmp edx 4 +
jz loc_427310  +
jbe loc_427236  +
cmp edx 6474E550h +
jz loc_427300  +
ja loc_427280  +
cmp edx 5 +
jz loc_4272C0  +
cmp edx 6 +
jnz loc_4272D0  +
mov [esp+2Ch+var_20] offset aPhdr +
jmp loc_427260  +
cmp edx 1 +
jz loc_427360  +
jb loc_427350  +
cmp edx 2 +
jz loc_4272A0  +
cmp edx 3 +
lea esi [esi+0] +
jnz loc_4272D0  +
mov [esp+2Ch+var_20] offset aInterp +
lea esi [esi+0] +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
call sub_426EE0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx 6474E551h +
jz loc_4272B0  +
cmp edx 6474E552h +
jnz loc_4272D0  +
mov [esp+2Ch+var_20] offset aRelro +
jmp loc_427260  +
mov [esp+2Ch+var_20] offset aDynamic +
jmp loc_427260  +
mov [esp+2Ch+var_20] offset aStack +
jmp loc_427260  +
mov [esp+2Ch+var_20] offset aShlib +
jmp loc_427260  +
mov eax [ebx+4] +
mov edi [esp+2Ch+arg_8] +
mov eax [eax+1B0h] +
mov eax [eax+58h] +
mov [esp+2Ch+var_20] offset aProc +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
call eax  +
jmp loc_427274  +
mov [esp+2Ch+var_20] offset aEh_frame_hdr +
jmp loc_427260  +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_20] offset aNote +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
call sub_426EE0  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_427274  +
mov ebp [esi+14h] +
mov esi [esi+8] +
test ebp ebp +
jnz loc_42736D  +
mov eax 1 +
jmp loc_427274  +
mov [esp+2Ch+var_20] offset aNull_1 +
jmp loc_427260  +
mov [esp+2Ch+var_20] offset aLoad +
jmp loc_427260  +
xor edi edi +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebx +
call sub_4060C0  +
test eax eax +
jz loc_427392  +
xor eax eax +
jmp loc_427274  +
lea eax [ebp+1] +
mov [esp+2Ch+var_2C] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_42738B  +
mov byte ptr [eax+ebp] 0 +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] eax +
call sub_405EB0  +
cmp ebp eax +
jz loc_4273D0  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call free  +
xor eax eax +
jmp loc_427274  +
mov edx [esp+2Ch+var_10] +
mov ecx ebp +
mov eax ebx +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_28] edi +
call sub_422D80  +
test eax eax +
jz loc_4273BD  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_2C] eax +
call free  +
jmp loc_427342  +
***
mov ebx [esp+18h+arg_0] +
mov edx [ebx+8Ch] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_427440  +
mov edx [edx+4Ch] +
test edx edx +
jz loc_427439  +
mov [esp+18h+var_14] 0AECh +
mov [esp+18h+var_18] offset a____Binutil_14 +
call sub_40C6C0  +
mov eax [ebx+8Ch] +
mov eax [eax+3Ch] +
add esp 18h +
pop ebx  +
retn   +
mov eax [edx+4Ch] +
add esp 18h +
pop ebx  +
retn   +
***
mov edx [esp+4] +
mov eax 8 +
and edx 103h +
cmp edx 1 +
mov edx 1 +
cmovnz eax edx +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
test eax eax +
jz loc_4274F5  +
mov edx [eax+8Ch] +
mov ecx [edx+4] +
cmp ecx 4 +
jnz loc_4274F0  +
mov ebx [eax] +
lea edx [ebx+4] +
add ebx 5 +
cmp ecx 9 +
cmovnz edx ebx +
mov ebx [eax+94h] +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1ADh] 1 +
jz loc_4274C2  +
mov edi offset a_plt +
mov ecx 5 +
mov esi edx +
cmps   +
jz loc_4274D5  +
mov [esp+4] edx +
mov [esp] ebx +
call sub_410840  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [esp+4] offset a_got_plt +
mov [esp] ebx +
call sub_410840  +
test eax eax +
jnz loc_4274CE  +
mov edx offset a_got +
jmp loc_4274C2  +
***
cmp ecx 9 +
jz loc_42748C  +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx [esp+arg_C] +
mov ecx [esp+arg_0] +
mov eax [esp+arg_4] +
mov edx [esp+arg_8] +
test ebx ebx +
jz loc_427530  +
mov ebx [ecx+24h] +
cmp ebx 1 +
jbe loc_427530  +
mov esi eax +
xor edx edx +
lea edi [ebx+eax-1] +
mov eax 0FFFFFFFFh +
cmp esi edi +
jbe loc_427556  +
mov ebx [ecx+2Ch] +
mov [ecx+10h] eax +
mov [ecx+14h] edx +
test ebx ebx +
jz loc_427543  +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
cmp dword ptr [ecx+4] 8 +
jz loc_427552  +
mov ecx [ecx+18h] +
xor ebx ebx +
add eax ecx +
adc edx ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax ebx +
xor edx edx +
neg eax  +
and eax edi +
jmp loc_427530  +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
mov ebx [esp+10h] +
mov eax [eax+0A0h] +
mov edx [eax+934h] +
mov eax [eax+44h] +
mov ecx [edx] +
test ecx ecx +
jz loc_4275A8  +
mov esi [ecx+24h] +
mov edx esi +
sub edx 1 +
js loc_42759F  +
cmp [ecx+esi*4+24h] ebx +
jnz loc_427597  +
jmp loc_4275B0  +
cmp [ecx+edx*4+28h] ebx +
jz loc_4275B0  +
sub edx 1 +
cmp edx 0FFFFFFFFh +
jnz loc_427591  +
mov ecx [ecx] +
add eax 20h +
test ecx ecx +
jnz loc_42757F  +
xor eax eax +
lea esi [esi+0] +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] 2Ch +
mov [esp+1Ch+var_1C] eax +
call sub_407C00  +
test eax eax +
jz loc_4275F6  +
mov edx [esp+1Ch+arg_4] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 2 +
mov dword ptr [eax+24h] 1 +
mov [eax+28h] edx +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
sub esp 6Ch +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+6Ch+var_3C] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov eax [eax] +
test eax eax +
setz dl  +
movzx eax dl +
mov [esp+6Ch+var_58] eax +
mov eax [esp+6Ch+arg_4] +
test eax eax +
jz loc_427667  +
mov eax [esp+6Ch+arg_4] +
xor edx 1 +
mov edi [esp+6Ch+arg_4] +
shl edx 6 +
movzx eax byte ptr [eax+5] +
and eax 0FFFFFFBFh +
or eax edx +
mov [edi+5] al +
mov eax [esp+6Ch+var_58] +
test eax eax +
jz loc_427681  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+6Ch] +
test eax eax +
jnz loc_427791  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov edi [eax+934h] +
mov eax [edi] +
test eax eax +
jz loc_4276F5  +
lea esi [esi+0] +
mov edx [eax+24h] +
xor esi esi +
test edx edx +
jz loc_4276D8  +
xor edx edx +
nop   +
lea esi [esi+0] +
mov ebx [eax+edx*4+28h] +
mov ecx [ebx+14h] +
test ch 80h +
jnz loc_4276CE  +
and ecx 1 +
jnz loc_4276C7  +
cmp dword ptr [eax+4] 1 +
jz loc_4276CE  +
mov [eax+esi*4+28h] ebx +
add esi 1 +
mov eax [edi] +
add edx 1 +
cmp edx [eax+24h] +
jb loc_4276B0  +
mov ecx [esp+6Ch+var_58] +
mov [eax+24h] esi +
test ecx ecx +
jz loc_4276ED  +
cmp dword ptr [eax+4] 1 +
jz loc_427780  +
mov edi eax +
mov eax [eax] +
test eax eax +
jnz loc_4276A0  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+0ACh] +
test eax eax +
jz loc_42772E  +
mov edi [esp+6Ch+arg_4] +
mov esi [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] esi +
call eax  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_427772  +
mov eax [esp+6Ch+arg_0] +
xor edx edx +
mov eax [eax+0A0h] +
mov ecx [eax+934h] +
mov eax [ecx] +
test eax eax +
jz loc_427759  +
lea esi [esi+0] +
mov eax [eax] +
add edx 1 +
test eax eax +
jnz loc_427750  +
mov eax [esp+6Ch+var_3C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+1] +
imul edx eax +
mov eax 1 +
mov [ecx+1Ch] edx +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test esi esi +
jnz loc_4276ED  +
mov eax [eax] +
mov [edi] eax +
jmp loc_427696  +
mov [esp+6Ch+var_68] 4 +
mov [esp+6Ch+var_6C] eax +
call sub_40F000  +
mov ebp eax +
mov [esp+6Ch+var_4C] eax +
xor eax eax +
test ebp ebp +
jz loc_427772  +
mov eax [esp+6Ch+arg_0] +
xor ebx ebx +
mov [esp+6Ch+var_6C] eax +
call sub_40ECE0  +
lea ecx [eax-1] +
mov eax 1 +
shl eax cl +
lea esi [eax+eax-1] +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+64h] +
test eax eax +
jz loc_428179  +
xor ecx ecx +
test byte ptr [eax+14h] 1 +
jz loc_4277FE  +
mov edi [eax+20h] +
mov edx [eax+24h] +
mov [ebp+ecx*4+0] eax +
add ecx 1 +
add edx edi +
and edi esi +
and edx esi +
cmp edx edi +
cmovb ebx edx +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_4277E0  +
mov edi [esp+6Ch+arg_0] +
mov [esp+6Ch+var_40] ecx +
cmp [edi+6Ch] ecx +
jb loc_428146  +
mov eax [esp+6Ch+var_40] +
mov [esp+6Ch+var_60] 4226B0h +
mov [esp+6Ch+var_64] 4 +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] eax +
call qsort  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] offset a_interp_0 +
mov [esp+6Ch+var_10] 0 +
mov [esp+6Ch+var_6C] eax +
call sub_410840  +
mov ebp eax +
test ebp ebp +
lea eax [esp+6Ch+var_10] +
mov [esp+6Ch+var_48] eax +
jz loc_427874  +
test byte ptr [ebp+14h] 2 +
jnz loc_4280C8  +
mov eax [esp+6Ch+var_3C] +
mov eax [eax+10h] +
mov [esp+6Ch+var_68] offset a_dynamic_1 +
test eax eax +
mov edi eax +
mov eax 1 +
cmovnz eax edi +
mov [esp+6Ch+var_30] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_410840  +
test eax eax +
mov edi eax +
mov [esp+6Ch+var_28] eax +
jz loc_4278BC  +
test byte ptr [eax+14h] 2 +
mov eax 0 +
cmovnz eax edi +
mov [esp+6Ch+var_28] eax +
mov eax [esp+6Ch+var_40] +
test eax eax +
jz loc_427AC1  +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov edx [eax+1Ch] +
cmp edx 0FFFFFFFFh +
jz loc_42815F  +
mov eax [esp+6Ch+var_3C] +
mov edi [esp+6Ch+arg_0] +
mov eax [eax+174h] +
test byte ptr [edi+29h] 20h +
movzx eax byte ptr [eax] +
jnz loc_427EDA  +
mov eax [esp+6Ch+var_4C] +
mov ecx [eax] +
mov [esp+6Ch+var_34] 0 +
mov eax [esp+6Ch+var_30] +
mov ebx ecx +
xor esi esi +
xor edi edi +
xor edx edx +
mov [esp+6Ch+var_38] 0 +
mov ebp esi +
mov [esp+6Ch+var_54] 0 +
lea ecx [eax-1] +
neg eax  +
mov [esp+6Ch+var_20] ecx +
mov [esp+6Ch+var_2C] eax +
mov [esp+6Ch+var_50] edi +
jmp loc_427982  +
mov eax [ebx+14h] +
mov edx 1 +
mov [esp+6Ch+var_50] 0 +
test al 8 +
cmovz ebp edx +
and eax 402h +
cmp eax 400h +
jz loc_42796C  +
mov eax [ebx+24h] +
mov [esp+6Ch+var_50] eax +
add esi 1 +
cmp esi [esp+6Ch+var_40] +
jz loc_427A6A  +
mov eax [esp+6Ch+var_4C] +
mov edx ebx +
mov ebx [eax+esi*4] +
test edx edx +
jz loc_427944  +
mov eax [ebx+20h] +
mov ecx [edx+20h] +
mov [esp+6Ch+var_54] 1 +
mov [esp+6Ch+var_44] eax +
mov edi ecx +
sub eax [ebx+1Ch] +
sub edi [edx+1Ch] +
cmp edi eax +
jz loc_427FB4  +
mov eax [esp+6Ch+arg_4] +
test eax eax +
jz loc_4279EF  +
mov eax [esp+6Ch+arg_4] +
mov ecx [eax+18h] +
mov ecx [ecx+38h] +
test ecx ecx +
jz loc_4279EF  +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_60] edx +
mov [esp+6Ch+var_64] ebx +
mov [esp+6Ch+var_5C] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_4] +
mov [esp+6Ch+var_6C] eax +
call ecx  +
mov [esp+6Ch+var_54] eax +
mov eax [esp+6Ch+var_54] +
test eax eax +
jz loc_427944  +
mov eax [esp+6Ch+var_34] +
mov ecx [esp+6Ch+var_38] +
mov edx [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] esi +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
call sub_422760  +
test eax eax +
jz loc_427E1C  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [ebx+14h] +
mov ebp eax +
and eax 402h +
shr ebp 3 +
xor ebp 1 +
and ebp 1 +
cmp eax 400h +
jz loc_428070  +
mov eax [ebx+24h] +
mov [esp+6Ch+var_38] esi +
add esi 1 +
cmp esi [esp+6Ch+var_40] +
mov [esp+6Ch+var_34] 0 +
mov [esp+6Ch+var_50] eax +
jnz loc_427979  +
test ebx ebx +
mov eax esi +
mov [esp+6Ch+var_54] esi +
jz loc_427AC1  +
sub eax [esp+6Ch+var_38] +
cmp eax 1 +
jnz loc_427A8C  +
mov eax [ebx+14h] +
and eax 402h +
cmp eax 400h +
jz loc_427AC1  +
mov eax [esp+6Ch+var_34] +
mov ecx [esp+6Ch+var_38] +
mov edx [esp+6Ch+var_4C] +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+var_54] +
mov [esp+6Ch+var_6C] eax +
mov eax [esp+6Ch+arg_0] +
call sub_422760  +
test eax eax +
jz loc_427E1C  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+var_28] +
test eax eax +
jz loc_427AEE  +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_4275C0  +
test eax eax +
jz loc_427E1C  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+arg_0] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_427CC7  +
mov [esp+6Ch+var_50] 0 +
mov [esp+6Ch+var_54] 0 +
mov eax [ebp+14h] +
test al 2 +
jz loc_427BD8  +
mov esi [ebp+0] +
mov edi offset a_note +
mov ecx 5 +
cmps   +
jnz loc_427BD8  +
cmp dword ptr [ebp+40h] 2 +
mov eax 2Ch +
mov ebx 1 +
jz loc_427E32  +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_407C00  +
test eax eax +
mov edi eax +
jz loc_427E1C  +
cmp ebx 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 4 +
mov [eax+24h] ebx +
mov eax ebx +
ja loc_427B8A  +
jmp loc_427BBA  +
cmp esi 1 +
mov ebp [ebp+0Ch] +
jz loc_427BBA  +
mov ebx esi +
mov edx eax +
sub edx ebx +
test byte ptr [ebp+15h] 4 +
lea esi [ebx-1] +
mov [edi+edx*4+28h] ebp +
jz loc_427B80  +
mov [esp+6Ch+var_68] 11A6h +
mov [esp+6Ch+var_6C] offset a____Binutil_14 +
call sub_40C6C0  +
cmp esi 1 +
mov eax [edi+24h] +
mov ebp [ebp+0Ch] +
jnz loc_427B88  +
mov [edi+eax*4+24h] ebp +
mov eax [ebp+14h] +
and eax 400h +
jnz loc_427EB9  +
mov esi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] edi +
mov [esi] edi +
jmp loc_427BDD  +
and eax 400h +
test eax eax +
jz loc_427BF7  +
mov edi [esp+6Ch+var_54] +
mov eax [esp+6Ch+var_50] +
test edi edi +
cmovz eax ebp +
add [esp+6Ch+var_54] 1 +
mov [esp+6Ch+var_50] eax +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_427B10  +
mov ebx [esp+6Ch+var_54] +
test ebx ebx +
jz loc_427CC7  +
lea eax ds:28h[ebx*4] +
mov [esp+6Ch+var_68] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_6C] eax +
call sub_407C00  +
test eax eax +
jz loc_427E1C  +
mov dword ptr [eax] 0 +
mov ecx [esp+6Ch+var_50] +
xor edx edx +
mov dword ptr [eax+4] 7 +
mov [eax+24h] ebx +
mov dword ptr [eax+8] 4 +
or byte ptr [eax+20h] 1 +
jmp loc_427C61  +
mov [eax+edx*4+28h] ecx +
add edx 1 +
mov ecx [ecx+0Ch] +
cmp ebx edx +
jz loc_427CBD  +
test byte ptr [ecx+15h] 4 +
jnz loc_427C53  +
mov eax [esp+6Ch+arg_0] +
xor ebx ebx +
mov [esp+6Ch+var_6C] offset aBTlsSectionsAr +
mov [esp+6Ch+var_68] eax +
call off_476094  +
mov esi [esp+6Ch+var_50] +
jmp loc_427CA4  +
mov [esp+6Ch+var_6C] offset aTlsA +
add ebx 1 +
call off_476094  +
cmp ebx [esp+6Ch+var_54] +
mov esi [esi+0Ch] +
jnb loc_427E10  +
test byte ptr [esi+15h] 4 +
mov [esp+6Ch+var_68] esi +
jnz loc_427C87  +
mov [esp+6Ch+var_6C] offset aNonTlsA +
call off_476094  +
jmp loc_427C97  +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov ebx [eax+0Ch] +
test ebx ebx +
jz loc_427D40  +
mov edx [ebx+3Ch] +
test byte ptr [edx+14h] 2 +
jz loc_427D40  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_407C00  +
test eax eax +
jz loc_427E1C  +
mov edx [ebx+3Ch] +
mov edi [esp+6Ch+var_48] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 6474E550h +
mov dword ptr [eax+24h] 1 +
mov [eax+28h] edx +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
mov eax [esp+6Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov esi [eax+34h] +
test esi esi +
jnz loc_427F25  +
mov ebx [esp+6Ch+arg_4] +
test ebx ebx +
jz loc_427DE6  +
mov eax [esp+6Ch+arg_4] +
test byte ptr [eax+3] 1 +
jz loc_427DE6  +
mov eax [esp+6Ch+var_10] +
test eax eax +
jz loc_427DE6  +
mov ebx [esp+6Ch+arg_4] +
jmp loc_427D7E  +
mov eax [eax] +
test eax eax +
jz loc_427DE6  +
cmp dword ptr [eax+4] 1 +
jnz loc_427D78  +
mov edx [eax+24h] +
test edx edx +
jz loc_427D78  +
mov ecx [eax+28h] +
mov ecx [ecx+1Ch] +
cmp ecx [ebx+70h] +
jb loc_427D78  +
cmp ecx [ebx+74h] +
jnb loc_427D78  +
sub edx 1 +
cmp edx 0FFFFFFFFh +
jz loc_427D78  +
mov ecx [eax+edx*4+28h] +
mov ecx [ecx+14h] +
and ecx 102h +
cmp ecx 102h +
jnz loc_427D9B  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_407C00  +
test eax eax +
jz loc_427E1C  +
mov esi [esp+6Ch+var_48] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 6474E552h +
mov [esi] eax +
mov eax [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] eax +
call free  +
mov eax [esp+6Ch+arg_0] +
mov ecx [esp+6Ch+var_10] +
mov eax [eax+0A0h] +
mov edx [eax+934h] +
mov [edx] ecx +
jmp loc_42768E  +
mov [esp+6Ch+var_6C] 11h +
call sub_40C770  +
mov eax [esp+6Ch+var_4C] +
mov [esp+6Ch+var_6C] eax +
call free  +
add esp 6Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebp+0Ch] +
test edx edx +
jz loc_427B44  +
cmp dword ptr [edx+40h] 2 +
jnz loc_427B44  +
test byte ptr [edx+14h] 2 +
jz loc_427B44  +
mov eax ebp +
mov [esp+6Ch+var_44] ebx +
jmp loc_427E8D  +
mov ecx [eax+20h] +
add ecx [eax+24h] +
lea eax [ecx+3] +
and eax 0FFFFFFFCh +
cmp eax [edx+20h] +
jnz loc_427EA9  +
mov ecx [edx+0Ch] +
add [esp+6Ch+var_44] 1 +
test ecx ecx +
jz loc_427EA9  +
cmp dword ptr [ecx+40h] 2 +
jnz loc_427EA9  +
test byte ptr [ecx+14h] 2 +
jz loc_427EA9  +
mov eax edx +
mov edx ecx +
mov esi [edx] +
mov ecx 5 +
mov edi offset a_note +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov ebx esi +
cmp bl cl +
jz loc_427E60  +
mov ebx [esp+6Ch+var_44] +
lea eax ds:28h[ebx*4] +
jmp loc_427B44  +
mov [esp+6Ch+var_68] 11AAh +
mov [esp+6Ch+var_6C] offset a____Binutil_14 +
call sub_40C6C0  +
mov eax [ebp+14h] +
and eax 400h +
jmp loc_427BCC  +
lea edi [edx+eax] +
mov eax [esp+6Ch+var_4C] +
mov ecx [eax] +
and esi [ecx+20h] +
cmp edi esi +
ja loc_42790B  +
xor edx edx +
mov eax esi +
div  [esp+6Ch+var_30] +
mov eax edi +
mov ebp edx +
xor edx edx +
div  [esp+6Ch+var_30] +
cmp ebp edx +
jb loc_42790B  +
mov eax [esp+6Ch+var_30] +
mov [esp+6Ch+var_34] 1 +
neg eax  +
and eax esi +
cmp ebx eax +
jbe loc_427913  +
jmp loc_42790B  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_407C00  +
test eax eax +
jz loc_427E1C  +
mov esi [esp+6Ch+arg_0] +
mov dword ptr [eax] 0 +
mov edi [esp+6Ch+var_3C] +
mov dword ptr [eax+4] 6474E551h +
mov edx [esi+0A0h] +
mov ecx [edi+1A8h] +
mov esi [esp+6Ch+arg_4] +
mov edx [edx+934h] +
mov edx [edx+34h] +
mov [eax+14h] ecx +
mov [eax+8] edx +
movzx edx byte ptr [eax+20h] +
or edx 1 +
test ecx ecx +
setnz cl  +
and edx 0FFFFFFFBh +
shl ecx 2 +
or edx ecx +
mov ecx [esi+10h] +
mov [eax+20h] dl +
test ecx ecx +
jle loc_427FA5  +
or edx 8 +
mov [eax+18h] ecx +
mov [eax+20h] dl +
mov edi [esp+6Ch+var_48] +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
jmp loc_427D5A  +
mov eax [esp+6Ch+var_50] +
add eax ecx +
cmp [esp+6Ch+var_44] eax +
mov [esp+6Ch+var_50] eax +
jb loc_4279A8  +
cmp ecx eax +
ja loc_4279A8  +
mov edi [esp+6Ch+var_30] +
sub eax 1 +
mov [esp+6Ch+var_24] eax +
add edi eax +
cmp [esp+6Ch+var_50] edi +
mov eax edi +
jbe loc_428089  +
mov eax [esp+6Ch+var_20] +
cmp eax ecx +
mov edi eax +
jbe loc_428005  +
cmp [esp+6Ch+var_44] edi +
mov [esp+6Ch+var_54] 1 +
jnb loc_4279A8  +
test dword ptr [edx+14h] 402h +
jnz loc_4280A0  +
test dword ptr [ebx+14h] 402h +
jz loc_4280A0  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_54] 1 +
test byte ptr [eax+29h] 20h +
jz loc_4279A8  +
mov ecx [esp+6Ch+var_24] +
xor ecx [esp+6Ch+var_44] +
test [esp+6Ch+var_2C] ecx +
jnz loc_4279A8  +
test ebp ebp +
jnz loc_4280BB  +
test byte ptr [ebx+14h] 8 +
jnz loc_4280BB  +
mov eax [esp+6Ch+var_24] +
xor eax [esp+6Ch+var_44] +
test [esp+6Ch+var_2C] eax +
jz loc_4280BB  +
mov [esp+6Ch+var_54] 1 +
jmp loc_4279A8  +
mov [esp+6Ch+var_38] esi +
mov [esp+6Ch+var_34] 0 +
mov [esp+6Ch+var_50] 0 +
jmp loc_42796C  +
mov edi [esp+6Ch+var_30] +
and eax [esp+6Ch+var_2C] +
add edi eax +
cmp edi ecx +
jbe loc_428005  +
jmp loc_427FF3  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_54] 0 +
test byte ptr [eax+29h] 20h +
jz loc_4279A8  +
jmp loc_42804A  +
mov [esp+6Ch+var_54] 0 +
jmp loc_4279A8  +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_407C00  +
test eax eax +
mov edi eax +
jz loc_427E1C  +
mov dword ptr [eax] 0 +
or byte ptr [eax+20h] 21h +
mov dword ptr [eax+4] 6 +
mov dword ptr [eax+8] 5 +
mov [esp+6Ch+var_10] eax +
mov eax [esp+6Ch+arg_0] +
mov [esp+6Ch+var_68] 2Ch +
mov [esp+6Ch+var_6C] eax +
call sub_407C00  +
test eax eax +
jz loc_427E1C  +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 3 +
mov dword ptr [eax+24h] 1 +
mov [eax+28h] ebp +
mov [esp+6Ch+var_48] eax +
mov [edi] eax +
jmp loc_427874  +
mov [esp+6Ch+var_68] 1092h +
mov [esp+6Ch+var_6C] offset a____Binutil_14 +
call sub_40C6C0  +
jmp loc_427819  +
mov edx [esp+6Ch+arg_4] +
mov eax [esp+6Ch+arg_0] +
call sub_422900  +
mov edx eax +
jmp loc_4278E7  +
mov [esp+6Ch+var_40] 0 +
jmp loc_427819  +
***
sub esp 24h +
mov edx [esp+24h+arg_4] +
mov ecx [esp+24h+arg_0] +
mov eax [edx+8Ch] +
test eax eax +
jz loc_4281AE  +
mov eax [eax+5Ch] +
test eax eax +
jnz loc_4281FD  +
cmp edx offset off_476230 +
jz loc_428242  +
mov esi [edx+14h] +
mov ebx 0FFFFFFF2h +
and esi 1000h +
jz loc_428203  +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
mov eax [eax+60h] +
test eax eax +
jz loc_4281F3  +
lea esi [esp+24h+var_8] +
mov [esp+24h+var_8] ebx +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] edx +
mov [esp+24h+var_24] ecx +
call eax  +
test eax eax +
jnz loc_428238  +
cmp ebx 0FFFFFEFFh +
mov eax ebx +
jz loc_428222  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [ecx+4] +
cmp edx offset off_476188 +
mov bx 0FEFFh +
cmovz ebx esi +
mov eax [eax+1B0h] +
mov eax [eax+60h] +
test eax eax +
jnz loc_4281DA  +
jmp loc_4281F3  +
mov [esp+24h+var_24] 0Fh +
mov [esp+24h+var_18] ebx +
call sub_40C770  +
mov eax [esp+24h+var_18] +
jmp loc_4281FD  +
mov eax [esp+24h+var_8] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
mov eax [ecx+4] +
mov ebx 0FFFFFFF1h +
mov eax [eax+1B0h] +
mov eax [eax+60h] +
test eax eax +
jnz loc_4281DA  +
jmp loc_4281F3  +
***
push esi  +
push ebx  +
sub esp 0ACh +
mov ebp [esp+0ACh+arg_0] +
mov eax [ebp+4] +
test byte ptr [ebp+2Bh] 10h +
mov esi [eax+1B0h] +
jnz loc_428472  +
mov eax [esi+0A0h] +
mov edx esi +
test eax eax +
jz loc_4282A9  +
mov edi [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_A8] edi +
call eax  +
mov eax [ebp+4] +
mov edx [eax+1B0h] +
mov [esp+0ACh+var_94] edx +
mov ebx [ebp+0A0h] +
call sub_44E1B0  +
test eax eax +
mov edi eax +
jz loc_42844E  +
mov eax [ebp+0A0h] +
mov edx [esp+0ACh+var_94] +
mov eax [eax+934h] +
mov [eax+4] edi +
mov byte ptr [ebx] 7Fh +
mov byte ptr [ebx+1] 45h +
mov byte ptr [ebx+2] 4Ch +
mov byte ptr [ebx+3] 46h +
mov eax [edx+174h] +
movzx eax byte ptr [eax+0Ch] +
mov [ebx+4] al +
mov eax [ebp+4] +
cmp dword ptr [eax+8] 1 +
sbb eax eax +
not eax  +
add eax 2 +
mov [ebx+5] al +
mov eax [edx+174h] +
movzx eax byte ptr [eax+0Dh] +
mov [ebx+6] al +
mov eax [ebp+28h] +
shr eax 5 +
and eax 3FFFFh +
test al 40h +
jz loc_428460  +
mov eax 3 +
mov [ebx+24h] ax +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_94] edx +
call sub_40ECB0  +
mov edx [esp+0ACh+var_94] +
test eax eax +
jnz loc_428482  +
xor eax eax +
mov [ebx+26h] ax +
mov eax [edx+174h] +
movzx edx byte ptr [eax+0Dh] +
mov [ebx+1Ch] edx +
movzx edx byte ptr [eax] +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+2Ch] 0 +
mov dword ptr [ebx+30h] 0 +
mov [ebx+28h] edx +
mov edx [ebp+74h] +
mov [ebx+10h] edx +
movzx eax byte ptr [eax+2] +
mov [ebx+34h] eax +
mov ebx [ebp+0A0h] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_symtab +
mov [esp+0ACh+var_AC] edi +
call sub_44E260  +
mov [ebx+48h] eax +
mov ebx [ebp+0A0h] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_strtab +
mov [esp+0ACh+var_AC] edi +
call sub_44E260  +
mov [ebx+0B8h] eax +
mov ebx [ebp+0A0h] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_shstrtab +
mov [esp+0ACh+var_AC] edi +
call sub_44E260  +
mov [ebx+80h] eax +
mov eax [ebp+0A0h] +
cmp dword ptr [eax+48h] 0FFFFFFFFh +
jz loc_42844E  +
cmp dword ptr [eax+0B8h] 0FFFFFFFFh +
jz loc_42844E  +
cmp dword ptr [eax+80h] 0FFFFFFFFh +
jz loc_42844E  +
mov eax [esi+0C8h] +
mov esi [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_A8] esi +
call eax  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_A8] offset sub_4233E0 +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_30] 0 +
mov [esp+0ACh+var_34] eax +
lea eax [esp+0ACh+var_34] +
mov [esp+0ACh+var_A4] eax +
call sub_410E60  +
mov ecx [esp+0ACh+var_30] +
test ecx ecx +
jz loc_4284B0  +
***
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
test al 2 +
jz loc_428490  +
mov eax 2 +
mov [ebx+24h] ax +
jmp loc_42832B  +
add esp 0ACh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+8] +
mov [ebx+26h] ax +
jmp loc_428349  +
***
movzx eax byte ptr [ebp+28h] +
and eax 7 +
cmp al 3 +
setz al  +
movzx eax al +
lea eax [eax+eax*2+1] +
mov [ebx+24h] ax +
jmp loc_42832B  +
***
mov eax [ebp+0A0h] +
mov [esp+0ACh+var_8C] eax +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+0ACh+var_AC] eax +
call sub_44E470  +
mov esi [esp+0ACh+arg_4] +
test esi esi +
jz loc_428DD0  +
mov eax [esp+0ACh+arg_4] +
mov edi 2 +
mov esi 1 +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_428DD0  +
mov eax [ebp+64h] +
test eax eax +
jz loc_4285F9  +
mov ecx esi +
mov edx ebp +
mov esi eax +
jmp loc_42858A  +
***
mov eax [eax] +
lea ebp [edi+1] +
mov [ebx+44h] edi +
cmp eax 0FFFFFFFFh +
jz loc_428540  +
mov ecx [edx+0A0h] +
mov [esp+0ACh+var_94] edx +
mov ecx [ecx+934h] +
mov ecx [ecx+4] +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_AC] ecx +
call sub_44E340  +
mov edx [esp+0ACh+var_94] +
mov eax [ebx+4Ch] +
test eax eax +
jz loc_4285E7  +
mov eax [eax] +
lea ecx [ebp+1] +
mov [ebx+54h] ebp +
cmp eax 0FFFFFFFFh +
jz loc_428583  +
mov ebx [edx+0A0h] +
mov [esp+0ACh+var_84] ecx +
mov [esp+0ACh+var_94] edx +
mov ebx [ebx+934h] +
mov ebx [ebx+4] +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_AC] ebx +
call sub_44E340  +
mov edx [esp+0ACh+var_94] +
mov ecx [esp+0ACh+var_84] +
mov esi [esi+0Ch] +
test esi esi +
jz loc_4285F2  +
mov ebx [esi+8Ch] +
mov edi ecx +
cmp dword ptr [ebx+4] 11h +
jz loc_42859E  +
add edi 1 +
mov [ebx+5Ch] ecx +
mov eax [ebx] +
cmp eax 0FFFFFFFFh +
jz loc_4285C8  +
mov ecx [edx+0A0h] +
mov [esp+0ACh+var_94] edx +
mov ecx [ecx+934h] +
mov ecx [ecx+4] +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_AC] ecx +
call sub_44E340  +
mov edx [esp+0ACh+var_94] +
mov eax [ebx+3Ch] +
test eax eax +
jnz loc_428510  +
mov eax [ebx+4Ch] +
mov ebp edi +
mov dword ptr [ebx+44h] 0 +
test eax eax +
jnz loc_42854B  +
mov dword ptr [ebx+54h] 0 +
mov ecx ebp +
jmp loc_428583  +
mov esi ecx +
mov ebp edx +
lea edi [ecx+1] +
mov eax [ebp+0A0h] +
mov ecx [esp+0ACh+var_8C] +
mov eax [eax+934h] +
mov edx [ecx+80h] +
mov [eax+2Ch] esi +
mov eax [eax+4] +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_AC] eax +
call sub_44E340  +
mov eax [ebp+0A0h] +
mov ebx [ebp+7Ch] +
mov edx [eax+934h] +
test ebx ebx +
mov edx [edx+2Ch] +
mov [eax+3Ch] edx +
jz loc_4289C2  +
mov eax [ebp+0A0h] +
lea ebx [esi+2] +
mov [eax+90Ch] edi +
mov eax [esp+0ACh+var_8C] +
mov edx [eax+48h] +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+0ACh+var_A8] edx +
mov [esp+0ACh+var_AC] eax +
call sub_44E340  +
cmp ebx 0FEFEh +
jbe loc_429EE4  +
mov eax [ebp+0A0h] +
mov edx [eax+208h] +
test edx edx +
jz loc_42869F  +
mov [esp+0ACh+var_A8] 0D5Ch +
mov [esp+0ACh+var_AC] offset a____Binutil_14 +
call sub_40C6C0  +
mov [esp+0ACh+var_A8] 40h +
add esi 3 +
mov [esp+0ACh+var_AC] ebp +
call sub_407C00  +
mov [eax+38h] ebx +
mov edi eax +
mov eax [ebp+0A0h] +
mov [eax+208h] edi +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp+0ACh+var_A4] 0 +
mov [esp+0ACh+var_A8] offset a_symtab_shndx +
mov [esp+0ACh+var_AC] eax +
call sub_44E260  +
cmp eax 0FFFFFFFFh +
mov [edi] eax +
jz loc_42844E  +
mov eax [ebp+0A0h] +
lea edi [esi+1] +
mov ebx 1 +
mov eax [eax+934h] +
mov [eax+30h] esi +
mov esi [esp+0ACh+var_8C] +
mov eax [eax+4] +
mov edx [esi+0B8h] +
mov [esp+0ACh+var_AC] eax +
mov [esp+0ACh+var_A8] edx +
call sub_44E340  +
cmp edi 0FFFFFEFFh +
ja loc_428E30  +
mov eax [ebp+0A0h] +
mov [eax+214h] edi +
mov eax [ebp+0A0h] +
mov [eax+38h] edi +
mov [esp+0ACh+var_A4] 4 +
mov [esp+0ACh+var_A8] edi +
mov [esp+0ACh+var_AC] ebp +
call sub_407CF0  +
test eax eax +
mov esi eax +
mov [esp+0ACh+var_94] eax +
jz loc_42844E  +
mov [esp+0ACh+var_A8] 38h +
mov [esp+0ACh+var_AC] ebp +
call sub_407C00  +
test eax eax +
mov [esi] eax +
jz loc_42A86B  +
mov eax [ebp+0A0h] +
test ebx ebx +
mov esi [esp+0ACh+var_94] +
mov edi [esp+0ACh+var_8C] +
mov [eax+40h] esi +
mov eax [ebp+0A0h] +
lea edx [edi+80h] +
mov eax [eax+934h] +
mov eax [eax+2Ch] +
mov [esi+eax*4] edx +
jz loc_42882A  +
mov eax [ebp+0A0h] +
lea edx [edi+48h] +
mov esi [esp+0ACh+var_94] +
mov eax [eax+90Ch] +
mov [esi+eax*4] edx +
mov eax [ebp+0A0h] +
cmp dword ptr [eax+214h] 0FF00h +
jbe loc_4287FE  +
mov ebx [eax+208h] +
test ebx ebx +
jz loc_42B273  +
mov eax [ebx+38h] +
mov esi [esp+0ACh+var_94] +
mov [esi+eax*4] ebx +
mov eax [ebp+0A0h] +
mov edx [eax+90Ch] +
mov [ebx+1Ch] edx +
mov eax [eax+934h] +
mov esi [esp+0ACh+var_8C] +
mov edi [esp+0ACh+var_94] +
mov eax [eax+30h] +
lea edx [esi+0B8h] +
mov [edi+eax*4] edx +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+30h] +
mov [esi+64h] eax +
mov edx [ebp+64h] +
test edx edx +
jz loc_428C4C  +
mov [esp+0ACh+arg_0] ebp +
jmp loc_4288AB  +
***
cmp eax 5 +
jz loc_428AC5  +
ja loc_4289F1  +
cmp eax 3 +
jnz loc_428AF0  +
mov esi [edx] +
mov edi offset a_stab_1 +
mov ecx 5 +
mov ebp esi +
cmps   +
jnz loc_4288A0  +
mov [esp+0ACh+var_AC] ebp +
mov edi ebp +
mov [esp+0ACh+var_84] edx +
mov esi edi +
mov edi offset aStr +
call strlen  +
mov ecx 4 +
mov edx [esp+0ACh+var_84] +
mov ebp eax +
sub eax 3 +
mov [esp+0ACh+var_8C] eax +
add esi eax +
cmps   +
jz loc_428E50  +
nop   +
lea esi [esi+0] +
mov edx [edx+0Ch] +
test edx edx +
jz loc_428C45  +
mov ebx [edx+8Ch] +
mov eax [esp+0ACh+var_94] +
mov ecx [ebx+44h] +
mov esi [ebx+5Ch] +
test ecx ecx +
mov [eax+esi*4] ebx +
jz loc_4288CC  +
mov eax [ebx+3Ch] +
mov edi [esp+0ACh+var_94] +
mov [edi+ecx*4] eax +
mov eax [ebx+54h] +
test eax eax +
jz loc_4288DE  +
mov edi [ebx+4Ch] +
mov ebp [esp+0ACh+var_94] +
mov [ebp+eax*4+0] edi +
test ecx ecx +
jz loc_428902  +
mov edi [esp+0ACh+arg_0] +
mov ecx [ebx+3Ch] +
mov edi [edi+0A0h] +
mov edi [edi+90Ch] +
or dword ptr [ecx+8] 40h +
mov [ecx+20h] esi +
mov [ecx+1Ch] edi +
test eax eax +
jz loc_428926  +
mov edi [esp+0ACh+arg_0] +
mov eax [ebx+4Ch] +
mov ecx [edi+0A0h] +
mov ecx [ecx+90Ch] +
or dword ptr [eax+8] 40h +
mov [eax+20h] esi +
mov [eax+1Ch] ecx +
test byte ptr [ebx+8] 80h +
jz loc_42897B  +
mov eax [edx+8Ch] +
mov edi [eax+64h] +
test edi edi +
jz loc_428B10  +
mov eax [esp+0ACh+arg_4] +
test eax eax +
jz loc_428B53  +
cmp edi offset off_476230 +
jz loc_428BA0  +
mov esi [edi+3Ch] +
cmp esi offset off_476230 +
jz loc_428BB0  +
test esi esi +
jz loc_428C24  +
mov eax [esi+8Ch] +
mov eax [eax+5Ch] +
mov [ebx+1Ch] eax +
mov eax [ebx+4] +
cmp eax 0Bh +
jz loc_428A70  +
jbe loc_428840  +
cmp eax 6FFFFFF7h +
jz loc_428AD3  +
ja loc_428AA8  +
cmp eax 11h +
jnz loc_428B00  +
mov eax [esp+0ACh+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+90Ch] +
mov [ebx+1Ch] eax +
jmp loc_4288A0  +
mov ecx [esp+0ACh+arg_4] +
xor ebx ebx +
test ecx ecx +
jnz loc_428725  +
mov eax [ebp+28h] +
shr eax 5 +
and eax 43h +
cmp eax 1 +
jz loc_42863E  +
mov ebx [esp+0ACh+arg_4] +
jmp loc_428725  +
cmp eax 6 +
jz loc_428A70  +
cmp eax 9 +
jnz loc_4288A0  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_dynsym_0 +
mov [esp+28h] edx +
mov [esp] eax +
call sub_410840  +
mov edx [esp+28h] +
test eax eax +
jz loc_428A2E  +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
mov [ebx+1Ch] eax +
mov eax [esp+0C0h] +
mov [esp+28h] edx +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+160h] +
mov [esp] edx +
call eax  +
mov edx [esp+28h] +
test eax eax +
jz loc_4288A0  +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
or dword ptr [ebx+8] 40h +
mov [ebx+20h] eax +
jmp loc_4288A0  +
***
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_A8] offset a_dynstr_0 +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_AC] eax +
call sub_410840  +
mov edx [esp+0ACh+var_84] +
test eax eax +
jz loc_4288A0  +
mov eax [eax+8Ch] +
mov eax [eax+5Ch] +
mov [ebx+1Ch] eax +
jmp loc_4288A0  +
cmp eax 6FFFFFFDh +
jb loc_4288A0  +
cmp eax 6FFFFFFEh +
jbe loc_428A70  +
cmp eax 6FFFFFFFh +
jnz loc_4288A0  +
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_A8] offset a_dynsym_0 +
jmp loc_428A7C  +
test byte ptr [edx+14h] 1 +
mov eax offset a_dynstr_0 +
mov esi offset a_gnu_libstr +
mov [esp+0ACh+var_84] edx +
cmovz eax esi +
mov [esp+0ACh+var_A8] eax +
jmp loc_428A7C  +
***
cmp eax 4 +
jz loc_4289FF  +
jmp loc_4288A0  +
***
cmp eax 6FFFFFF6h +
jz loc_428AC5  +
jmp loc_4288A0  +
***
mov eax [esp+0ACh+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+164h] +
test eax eax +
jz loc_42897B  +
mov esi [esp+0ACh+arg_0] +
mov [esp+0ACh+var_A4] edx +
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_AC] offset aBWarningSh_lin +
mov [esp+0ACh+var_A8] esi +
call eax  +
mov edx [esp+0ACh+var_84] +
jmp loc_42897B  +
mov esi [edi+3Ch] +
test esi esi +
jnz loc_42896F  +
mov edx [edi+94h] +
mov eax [ebx+2Ch] +
mov ebp [esp+0ACh+arg_0] +
mov [esp+0ACh+var_A0] edi +
mov [esp+0ACh+var_9C] edx +
mov [esp+0ACh+var_A4] eax +
mov [esp+0ACh+var_A8] ebp +
mov [esp+0ACh+var_AC] offset aBSh_linkOfSect +
call off_476094  +
mov [esp+0ACh+var_AC] 11h +
call sub_40C770  +
jmp loc_42844E  +
***
mov esi off_47626C +
jmp loc_428967  +
***
movzx eax word ptr [edi+18h] +
and ax 380h +
cmp ax 100h +
jz loc_42896F  +
cmp ax 200h +
jz loc_42896F  +
mov eax [ebx+2Ch] +
mov ecx [edi+94h] +
mov [esp+0ACh+var_84] edx +
mov [esp+0ACh+var_A0] edi +
mov [esp+0ACh+var_A4] eax +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_9C] ecx +
mov [esp+0ACh+var_AC] offset aBSh_linkOfSe_0 +
mov [esp+0ACh+var_A8] eax +
call off_476094  +
mov eax [esp+0ACh+arg_4] +
mov [esp+0ACh+var_AC] edi +
mov [esp+0ACh+var_A8] eax +
call sub_43F640  +
test eax eax +
jz loc_42A8C5  +
mov esi [eax+3Ch] +
mov edx [esp+0ACh+var_84] +
jmp loc_428967  +
mov [esp+0ACh+var_A8] 0DD0h +
mov [esp+0ACh+var_AC] offset a____Binutil_14 +
mov [esp+0ACh+var_84] edx +
call sub_40C6C0  +
mov edx [esp+0ACh+var_84] +
jmp loc_42896F  +
mov ebp [esp+0ACh+arg_0] +
mov edx [esp+0ACh+arg_4] +
test edx edx +
jz loc_42A03E  +
mov [esp+0ACh+var_38] 0 +
mov [esp+0ACh+var_58] 0 +
mov [esp+0ACh+var_4C] 0 +
***
mov eax [ebp+4] +
mov esi [ebp+0A0h] +
mov eax [eax+1B0h] +
mov [esp-0BCh+arg_114] esi +
mov dword ptr [esi+84h] 3 +
mov dword ptr [esi+88h] 0 +
mov [esp-0BCh+arg_104] eax +
mov eax [ebp+28h] +
mov dword ptr [esi+8Ch] 0 +
mov dword ptr [esi+0A8h] 0 +
mov dword ptr [esi+9Ch] 0 +
shr eax 5 +
test al 42h +
mov dword ptr [esi+0A0h] 0 +
mov dword ptr [esi+0A4h] 1 +
jnz loc_428EF8  +
movzx eax byte ptr [ebp+28h] +
and eax 7 +
cmp al 3 +
jz loc_428EF8  +
mov eax esi +
xor edx edx +
mov esi [esi+40h] +
mov edi [eax+214h] +
mov eax [eax+28h] +
cmp edi 1 +
mov [esp-0BCh+arg_D0] edi +
jbe loc_42A817  +
mov edi [esp-0BCh+arg_114] +
mov ebx 1 +
mov [esp-0BCh+arg_178] ebp +
mov ecx [edi+934h] +
mov ebp edi +
mov [esp-0BCh+arg_E0] ecx +
jmp loc_428D8D  +
cmp [ebp+90Ch] ebx +
jz loc_428DAE  +
mov edi [ebp+208h] +
test edi edi +
jz loc_428D42  +
mov edi [edi+38h] +
cmp ecx [esi+edi*4] +
jz loc_428DAE  +
mov edi [esp-0BCh+arg_E0] +
cmp ebx [edi+30h] +
jz loc_428DAE  +
cmp ebx [edi+2Ch] +
jz loc_428DAE  +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] ecx +
call sub_427500  +
mov edi [esp-0BCh+arg_178] +
mov ebp [edi+0A0h] +
mov edi [ebp+934h] +
mov [esp-0BCh+arg_E0] edi +
nop   +
add ebx 1 +
cmp ebx [esp-0BCh+arg_D0] +
jz loc_429E49  +
mov ecx [esi+ebx*4] +
mov edi [ecx+4] +
cmp edi 4 +
jz loc_428D9D  +
cmp edi 9 +
jnz loc_428DC0  +
mov edi [ecx+2Ch] +
test edi edi +
jz loc_428DAE  +
test byte ptr [edi+17h] 8 +
jz loc_428D28  +
mov dword ptr [ecx+10h] 0FFFFFFFFh +
mov dword ptr [ecx+14h] 0FFFFFFFFh +
jmp loc_428D80  +
***
mov edi [ecx+2Ch] +
test edi edi +
jnz loc_428DA4  +
jmp loc_428D28  +
***
mov eax [ebp+64h] +
test eax eax +
jz loc_42A749  +
mov esi 1 +
jmp loc_428DEF  +
mov edx [eax+0Ch] +
test edx edx +
mov eax edx +
jz loc_428EF0  +
mov edx [eax+8Ch] +
cmp dword ptr [edx+4] 11h +
jnz loc_428DE2  +
test byte ptr [eax+16h] 10h +
jz loc_428E28  +
mov ecx [eax+10h] +
mov edx [eax+0Ch] +
test ecx ecx +
mov ebx edx +
jz loc_42A576  +
mov [ecx+0Ch] edx +
mov edx [eax+0Ch] +
test ebx ebx +
jz loc_42A56E  +
mov [ebx+10h] ecx +
sub dword ptr [ebp+6Ch] 1 +
jmp loc_428DE5  +
mov [edx+5Ch] esi +
add esi 1 +
jmp loc_428DE2  +
mov [esp+0ACh+var_A4] edi +
mov [esp+0ACh+var_A8] ebp +
mov [esp+0ACh+var_AC] offset aBTooManySectio +
call off_476094  +
jmp loc_42844E  +
***
lea eax [ebp-2] +
mov [esp+0ACh+var_AC] eax +
call sub_40EFC0  +
test eax eax +
mov esi eax +
jz loc_42844E  +
mov edx [esp+0ACh+var_84] +
mov ecx [esp+0ACh+var_8C] +
mov eax [edx] +
mov [esp+0ACh+var_A4] ecx +
mov [esp+0ACh+var_AC] esi +
mov [esp+0ACh+var_A8] eax +
call memcpy  +
mov eax [esp+0ACh+arg_0] +
mov byte ptr [esi+ebp-3] 0 +
mov [esp+0ACh+var_A8] esi +
mov [esp+0ACh+var_AC] eax +
call sub_410840  +
mov [esp+0ACh+var_AC] esi +
mov edi eax +
call free  +
test edi edi +
mov edx [esp+0ACh+var_84] +
jz loc_4288A0  +
mov esi [edi+8Ch] +
mov eax [ebx+5Ch] +
mov [esi+1Ch] eax +
mov eax [esi+28h] +
test eax eax +
jnz loc_4288A0  +
mov eax [esp+0ACh+arg_0] +
mov [esp+0ACh+var_AC] eax +
call loc_40CC50  +
mov edx [esp+0ACh+var_84] +
test eax eax +
lea ecx [eax+3] +
cmovs eax ecx +
sar eax 2 +
add eax 4 +
mov [esi+28h] eax +
jmp loc_4288A0  +
***
lea edi [esi+1] +
jmp loc_4284F9  +
***
mov edi [esp-0BCh+arg_17C] +
mov esi [esp-0BCh+arg_114] +
test edi edi +
jz loc_42A88A  +
mov eax [esi+934h] +
xor edi edi +
mov eax [eax] +
test eax eax +
jz loc_429EF8  +
xor ecx ecx +
nop   +
mov edx [eax+1Ch] +
add ecx 1 +
mov eax [eax] +
test edx edx +
cmovnz edi edx +
test eax eax +
jnz loc_428F20  +
test ecx ecx +
mov [esp-0BCh+arg_108] ecx +
jz loc_429EF8  +
mov eax [esp-0BCh+arg_104] +
mov ecx [eax+174h] +
movzx eax byte ptr [ecx] +
mov [esi+14h] eax +
mov eax [ebp+0A0h] +
movzx edx byte ptr [ecx+1] +
mov [eax+2Ch] edx +
mov eax [ebp+0A0h] +
mov esi [esp-0BCh+arg_108] +
mov [eax+30h] esi +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov esi [edx+1Ch] +
cmp esi 0FFFFFFFFh +
jz loc_42A5A5  +
movzx ebx byte ptr [ecx+1] +
imul ebx [esp-0BCh+arg_108] +
cmp esi ebx +
jb loc_42A6E4  +
mov ebx [esp-0BCh+arg_108] +
test ebx ebx +
jz loc_42A026  +
mov esi [edx+1Ch] +
xor edx edx +
movzx ecx byte ptr [ecx+1] +
mov eax esi +
div  ecx +
mov eax esi +
test edx edx +
jnz loc_42A713  +
xor edx edx +
div  ecx +
mov [esp-0BCh+arg_C0] 20h +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call sub_407CF0  +
mov ebx eax +
mov eax [ebp+0A0h] +
test ebx ebx +
mov [eax+44h] ebx +
jz loc_42844E  +
test byte ptr [ebp+29h] 20h +
mov [esp-0BCh+arg_11C] 1 +
jz loc_428FF7  +
mov eax [esp-0BCh+arg_104] +
mov eax [eax+10h] +
mov [esp-0BCh+arg_11C] eax +
mov eax [esp-0BCh+arg_104] +
xor edx edx +
mov [esp-0BCh+arg_D4] 0 +
mov eax [eax+174h] +
movzx esi byte ptr [eax] +
movzx eax byte ptr [eax+1] +
imul eax [esp-0BCh+arg_108] +
mov [esp-0BCh+arg_D0] esi +
add [esp-0BCh+arg_D0] eax +
mov eax [esp-0BCh+arg_D0] +
adc [esp-0BCh+arg_D4] edx +
cmp eax edi +
ja loc_42A5B6  +
sub edi eax +
xor edx edx +
mov [esp-0BCh+arg_120] edi +
mov eax edi +
add eax [esp-0BCh+arg_D0] +
adc edx [esp-0BCh+arg_D4] +
mov [esp-0BCh+arg_E8] eax +
mov eax [ebp+0A0h] +
mov [esp-0BCh+arg_EC] edx +
mov edx [eax+934h] +
mov esi [edx] +
test esi esi +
mov [esp-0BCh+arg_E0] esi +
jz loc_429628  +
mov [esp-0BCh+arg_178] ebp +
mov ebp ebx +
mov [esp-0BCh+arg_100] 0 +
mov eax [esp-0BCh+arg_E0] +
mov ebx [eax+24h] +
cmp ebx 1 +
jbe loc_429977  +
mov eax [esp-0BCh+arg_178] +
mov eax [eax+0A0h] +
cmp word ptr [eax+24h] 4 +
jnz loc_4290AC  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+4] +
cmp eax 4 +
mov [esp-0BCh+arg_D0] eax +
jz loc_4297B0  +
mov esi [esp-0BCh+arg_E0] +
mov [esp-0BCh+arg_BC] ebx +
mov [esp-0BCh+arg_C4] 4226B0h +
mov [esp-0BCh+arg_C0] 4 +
lea eax [esi+28h] +
mov [esp-0BCh+arg_B8] eax +
call qsort  +
mov eax esi +
mov esi [esi+4] +
mov ebx [eax+24h] +
mov [esp-0BCh+arg_D0] esi +
mov eax [esp-0BCh+arg_D0] +
test ebx ebx +
mov esi [esp-0BCh+arg_E0] +
mov [ebp+0] eax +
mov eax [esi+8] +
mov [esp-0BCh+arg_F0] eax +
mov [ebp+4] eax +
jnz loc_4297C5  +
movzx eax byte ptr [esi+20h] +
mov dword ptr [ebp+0Ch] 0 +
mov byte ptr [esp-0BCh+arg_D8] al +
and eax 2 +
mov byte ptr [esp-0BCh+arg_E4] al +
jnz loc_4297A1  +
mov dword ptr [ebp+10h] 0 +
cmp [esp-0BCh+arg_D0] 1 +
jz loc_429850  +
test byte ptr [esp-0BCh+arg_D8] 4 +
jz loc_4297F5  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+14h] +
mov [ebp+1Ch] eax +
cmp [esp-0BCh+arg_D0] 1 +
jz loc_42987A  +
cmp [esp-0BCh+arg_D0] 2 +
jz loc_429D12  +
xor esi esi +
cmp [esp-0BCh+arg_D0] 4 +
mov [esp-0BCh+arg_F8] 0 +
jz loc_429940  +
movzx eax byte ptr [esp-0BCh+arg_D8] +
mov dword ptr [ebp+8] 0 +
mov dword ptr [ebp+14h] 0 +
mov dword ptr [ebp+18h] 0 +
and eax 10h +
jz loc_4291D0  +
test byte ptr [esp-0BCh+arg_D8] 1 +
jnz loc_429196  +
mov edx [esp-0BCh+arg_F0] +
or edx 4 +
mov [ebp+4] edx +
mov edi [esp-0BCh+arg_104] +
test ebx ebx +
mov edx [edi+174h] +
movzx ecx byte ptr [edx] +
mov [ebp+14h] ecx +
movzx edx byte ptr [edx] +
mov [ebp+18h] edx +
jz loc_4291D0  +
mov ecx [ebp+0Ch] +
mov edx [esp-0BCh+arg_E8] +
cmp ecx edx +
jb loc_42A8AD  +
sub ecx edx +
cmp byte ptr [esp-0BCh+arg_E4] 0 +
mov [ebp+0Ch] ecx +
jnz loc_4291D0  +
sub [ebp+10h] edx +
nop   +
test byte ptr [esp-0BCh+arg_D8] 20h +
jz loc_42923C  +
test byte ptr [esp-0BCh+arg_D8] 1 +
jnz loc_4291E2  +
or dword ptr [ebp+4] 4 +
test al al +
mov eax [esp-0BCh+arg_104] +
mov edx [eax+174h] +
jnz loc_429CE7  +
movzx eax byte ptr [edx] +
test ebx ebx +
mov [ebp+8] eax +
jz loc_429EC7  +
sub eax [esp-0BCh+arg_E8] +
add [ebp+0Ch] eax +
cmp byte ptr [esp-0BCh+arg_E4] 0 +
jnz loc_429213  +
add [ebp+10h] eax +
movzx eax byte ptr [edx+1] +
mov edi [esp-0BCh+arg_108] +
imul eax edi +
add eax [ebp+14h] +
mov [ebp+14h] eax +
movzx edx byte ptr [edx+1] +
imul edx edi +
add edx [ebp+18h] +
mov edi [esp-0BCh+arg_120] +
add eax edi +
add edx edi +
mov [ebp+14h] eax +
mov [ebp+18h] edx +
mov eax [esp-0BCh+arg_D0] +
cmp eax 1 +
jz loc_429836  +
cmp eax 4 +
jz loc_429820  +
mov eax [esp-0BCh+arg_E0] +
mov ecx [eax+24h] +
lea esi [eax+28h] +
mov [esp-0BCh+arg_F0] esi +
test ecx ecx +
jz loc_42A6D8  +
mov edi [ebp+0] +
mov esi ebp +
mov [esp-0BCh+arg_D0] 0 +
mov [esp-0BCh+arg_E4] edi +
jmp loc_429309  +
***
cmp edi 1 +
jz loc_429410  +
cmp dword ptr [ebp+4] 8 +
jz loc_429440  +
mov ecx [ebp+18h] +
add [esi+14h] ecx +
test byte ptr [ebp+8] 2 +
jz loc_4292A2  +
add [esi+18h] ecx +
mov eax [esp-0BCh+arg_D8] +
cmp eax [esi+1Ch] +
mov eax [esp-0BCh+arg_E0] +
movzx eax byte ptr [eax+20h] +
jbe loc_4292C9  +
test al 4 +
jnz loc_4292C9  +
cmp [esp-0BCh+arg_E4] 1 +
jz loc_429590  +
mov ecx [esp-0BCh+arg_D8] +
mov [esi+1Ch] ecx +
test al 1 +
jnz loc_4292EF  +
mov eax [esi+4] +
mov edx eax +
or edx 4 +
mov [esi+4] edx +
mov edx [ebp+8] +
test dl 4 +
jz loc_4292E6  +
or eax 5 +
mov [esi+4] eax +
and edx 1 +
jz loc_4292EF  +
or dword ptr [esi+4] 2 +
mov [esp-0BCh+arg_E4] edi +
mov eax [esp-0BCh+arg_E0] +
add [esp-0BCh+arg_D0] 1 +
mov ecx [eax+24h] +
cmp [esp-0BCh+arg_D0] ecx +
jnb loc_4295E6  +
mov eax [esp-0BCh+arg_F0] +
mov ecx [esp-0BCh+arg_D0] +
mov ebx [eax+ecx*4] +
mov eax 1 +
mov ecx [ebx+40h] +
mov ebp [ebx+8Ch] +
shl eax cl +
cmp edi 7 +
mov [esp-0BCh+arg_D8] eax +
setz dl  +
jz loc_429335  +
cmp edi 1 +
jnz loc_42939F  +
mov eax [ebp+4] +
cmp eax 8 +
jz loc_4294D3  +
mov edi [esi+18h] +
mov edx [esi+10h] +
mov ecx [ebx+20h] +
mov [esp-0BCh+arg_E4] edi +
mov [esp-0BCh+arg_F4] edx +
add edx edi +
mov edi ecx +
sub edi edx +
jz loc_42936C  +
cmp [esp-0BCh+arg_F4] edx +
ja loc_4295A6  +
cmp edx ecx +
ja loc_4295A6  +
mov edx [esp-0BCh+arg_E4] +
add edx edi +
cmp eax 8 +
mov [esi+18h] edx +
jz loc_429399  +
mov eax [esi+14h] +
lea ecx [edi+eax] +
cmp edx ecx +
mov [esp-0BCh+arg_E4] eax +
ja loc_4294F5  +
xor edx edx +
add [esp-0BCh+arg_E8] edi +
adc [esp-0BCh+arg_EC] edx +
mov [esi+14h] ecx +
mov edi [esi] +
mov [esp-0BCh+arg_E4] edi +
cmp edi 4 +
jnz loc_429280  +
mov eax [esp-0BCh+arg_178] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jnz loc_429289  +
mov eax [esp-0BCh+arg_D0] +
test eax eax +
jnz loc_429780  +
mov eax [esp-0BCh+arg_E8] +
mov edx [esp-0BCh+arg_EC] +
mov ecx [ebp+18h] +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
mov [ebp+10h] eax +
mov eax [esp-0BCh+arg_E0] +
mov [ebp+14h] edx +
xor edx edx +
add [esp-0BCh+arg_E8] ecx +
adc [esp-0BCh+arg_EC] edx +
movzx eax byte ptr [eax+20h] +
mov [esi+14h] ecx +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+1Ch] 1 +
jmp loc_4292C9  +
***
mov eax [esp-0BCh+arg_E8] +
mov edx [esp-0BCh+arg_EC] +
cmp dword ptr [ebp+4] 8 +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
mov [ebp+10h] eax +
mov [ebp+14h] edx +
jz loc_429585  +
mov ecx [ebp+18h] +
xor edx edx +
add [esp-0BCh+arg_E8] ecx +
adc [esp-0BCh+arg_EC] edx +
jmp loc_429296  +
mov ecx [ebp+8] +
test ch 4 +
mov eax ecx +
jz loc_4294B0  +
mov edx [ebp+14h] +
or edx [ebp+10h] +
jnz loc_4294B0  +
mov eax [ebp+0Ch] +
xor edx edx +
mov [esp-0BCh+arg_F4] eax +
xor eax eax +
cmp [esp-0BCh+arg_D8] 0 +
jz loc_429498  +
mov edi [esp-0BCh+arg_D8] +
xor edx edx +
mov eax [esp-0BCh+arg_F4] +
sub eax [esp-0BCh+arg_E8] +
sbb edx [esp-0BCh+arg_EC] +
mov [esp-0BCh+arg_C0] edi +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] eax +
mov [esp-0BCh+arg_BC] edx +
mov [esp-0BCh+arg_110] ecx +
call sub_4732E0  +
mov edi [esi] +
mov ecx [esp-0BCh+arg_110] +
add eax [esp-0BCh+arg_E8] +
adc edx [esp-0BCh+arg_EC] +
mov [ebx+50h] eax +
mov [ebx+54h] edx +
mov [ebp+10h] eax +
mov eax ecx +
mov [ebp+14h] edx +
nop   +
test al 2 +
jz loc_4292A2  +
cmp [esp-0BCh+arg_E4] 7 +
jz loc_4294C8  +
test ah 4 +
jnz loc_4292A2  +
mov eax [ebp+18h] +
add [esi+18h] eax +
jmp loc_4292A2  +
mov ecx [ebp+8] +
test cl 2 +
jz loc_42939F  +
and ch 4 +
jz loc_429341  +
test dl dl +
jz loc_42939F  +
jmp loc_429341  +
mov eax [esp-0BCh+arg_E8] +
mov [esp-0BCh+arg_F4] edx +
mov edx [esp-0BCh+arg_EC] +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] eax +
call sub_4060C0  +
mov edx [esp-0BCh+arg_F4] +
test eax eax +
jnz loc_42844E  +
mov edi edx +
sub edi [esp-0BCh+arg_E4] +
mov [esp-0BCh+arg_B8] edi +
call sub_40F150  +
test eax eax +
mov edx eax +
jz loc_42844E  +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] edx +
mov [esp-0BCh+arg_BC] edi +
mov [esp-0BCh+arg_F4] edx +
mov [esp-0BCh+arg_C0] eax +
call sub_405F60  +
mov edx [esp-0BCh+arg_F4] +
mov [esp-0BCh+arg_B8] edx +
mov [esp-0BCh+arg_E4] eax +
call free  +
mov eax [esp-0BCh+arg_E4] +
cmp edi eax +
jnz loc_42844E  +
mov ecx [esi+14h] +
add ecx edi +
jmp loc_42938C  +
mov eax [ebp+8] +
jmp loc_4294B0  +
***
mov ecx [esp-0BCh+arg_178] +
test byte ptr [ecx+29h] 20h +
jnz loc_4292C9  +
jmp loc_4292C2  +
mov eax [esp-0BCh+arg_178] +
xor edi edi +
mov [esp-0BCh+arg_C8] edx +
mov [esp-0BCh+arg_E4] edx +
mov [esp-0BCh+arg_C4] ecx +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] ebx +
mov [esp-0BCh+arg_B8] offset aBSectionALmaLx +
call off_476094  +
mov edx [esp-0BCh+arg_E4] +
mov eax [esi+18h] +
mov [ebx+20h] edx +
mov [esp-0BCh+arg_E4] eax +
mov eax [ebp+4] +
jmp loc_42936C  +
mov ebp esi +
mov eax [esp-0BCh+arg_F8] +
xor edx edx +
sub [esp-0BCh+arg_E8] eax +
sbb [esp-0BCh+arg_EC] edx +
cmp [esp-0BCh+arg_E4] 1 +
jz loc_429983  +
mov eax [esp-0BCh+arg_E0] +
add ebp 20h +
add [esp-0BCh+arg_100] 1 +
mov eax [eax] +
test eax eax +
mov [esp-0BCh+arg_E0] eax +
jnz loc_429074  +
mov ebp [esp-0BCh+arg_178] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov esi [esp-0BCh+arg_E8] +
mov edi [esp-0BCh+arg_EC] +
mov [edx+20h] esi +
mov [edx+24h] edi +
mov [esp-0BCh+arg_D8] esi +
mov [esp-0BCh+arg_DC] edi +
mov ecx [ebp+4] +
mov esi [ecx+1B0h] +
mov ecx [eax+214h] +
mov [esp-0BCh+arg_E0] esi +
mov esi [eax+40h] +
lea edi [esi+ecx*4] +
mov [esp-0BCh+arg_D0] esi +
add esi 4 +
cmp edi esi +
jbe loc_429F46  +
mov [esp-0BCh+arg_178] ebp +
jmp loc_429742  +
cmp dword ptr [ebx+4] 8 +
jz loc_429F23  +
test byte ptr [ebx+8] 2 +
jz loc_429D60  +
mov edx [ebx+18h] +
test edx edx +
jz loc_4296BB  +
test eax eax +
mov edx off_476094 +
jz loc_42A880  +
mov eax [eax] +
mov [esp-0BCh+arg_C0] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBWarningAlloca +
mov [esp-0BCh+arg_BC] eax +
call edx  +
mov eax [esp-0BCh+arg_178] +
test byte ptr [eax+29h] 20h +
jz loc_429EBF  +
mov ebp [ebx+18h] +
test ebp ebp +
jz loc_429EBF  +
mov eax [esp-0BCh+arg_E0] +
mov ecx [eax+10h] +
mov eax [ebx+0Ch] +
xor edx edx +
mov ebp eax +
xor eax eax +
test ecx ecx +
jz loc_42970F  +
xor edx edx +
mov eax ebp +
sub eax [esp-0BCh+arg_D8] +
sbb edx [esp-0BCh+arg_DC] +
mov [esp-0BCh+arg_C0] ecx +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] eax +
mov [esp-0BCh+arg_BC] edx +
call sub_4732E0  +
add eax [esp-0BCh+arg_D8] +
adc edx [esp-0BCh+arg_DC] +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] ebx +
call sub_427500  +
mov [esp-0BCh+arg_D8] eax +
mov [esp-0BCh+arg_DC] edx +
add esi 4 +
cmp edi esi +
jbe loc_429F33  +
mov ebx [esi] +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_429682  +
mov ecx [eax+54h] +
mov edx [eax+50h] +
mov ebp ecx +
or ebp edx +
jz loc_429678  +
xor ecx [ebx+14h] +
xor edx [ebx+10h] +
or ecx edx +
jz loc_429737  +
mov [esp-0BCh+arg_BC] 14BEh +
mov [esp-0BCh+arg_B8] offset a____Binutil_14 +
call sub_40C6C0  +
jmp loc_429737  +
***
mov dword ptr [ebx+50h] 0 +
mov dword ptr [ebx+54h] 0 +
mov dword ptr [ebx+24h] 0 +
mov dword ptr [ebx+14h] 0 +
jmp loc_4292F3  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+0Ch] +
mov [ebp+10h] eax +
jmp loc_42911B  +
mov eax [esp-0BCh+arg_E0] +
mov dword ptr [ebp+0] 4 +
mov eax [eax+8] +
mov [esp-0BCh+arg_F0] eax +
mov [ebp+4] eax +
mov edi [esp-0BCh+arg_E0] +
mov ecx [edi+28h] +
mov edx [edi+10h] +
mov eax [ecx+1Ch] +
sub eax edx +
mov [ebp+0Ch] eax +
movzx eax byte ptr [edi+20h] +
mov byte ptr [esp-0BCh+arg_D8] al +
and eax 2 +
mov byte ptr [esp-0BCh+arg_E4] al +
jnz loc_4297A1  +
mov eax [ecx+20h] +
sub eax edx +
mov [ebp+10h] eax +
jmp loc_42911B  +
test ebx ebx +
jnz loc_429DF0  +
mov eax [esp-0BCh+arg_104] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
shl eax cl +
mov [ebp+1Ch] eax +
jmp loc_42913B  +
***
mov eax [esp-0BCh+arg_178] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jnz loc_429252  +
test byte ptr [esp-0BCh+arg_D8] 30h +
jnz loc_429E90  +
mov eax [esp-0BCh+arg_E8] +
mov [ebp+8] eax +
jmp loc_429252  +
***
mov eax [esp-0BCh+arg_178] +
test byte ptr [eax+29h] 20h +
jz loc_429126  +
test byte ptr [esp-0BCh+arg_D8] 4 +
jz loc_429873  +
mov eax [esp-0BCh+arg_E0] +
mov eax [eax+14h] +
mov [esp-0BCh+arg_11C] eax +
mov eax [esp-0BCh+arg_11C] +
mov [ebp+1Ch] eax +
test ebx ebx +
jz loc_429968  +
test byte ptr [esp-0BCh+arg_D8] 4 +
jz loc_42A51B  +
mov ecx [ebp+1Ch] +
mov esi [esp-0BCh+arg_E0] +
xor eax eax +
mov edx [esi+eax*4+28h] +
test dword ptr [edx+14h] 102h +
jnz loc_4298B0  +
mov edx [edx+8Ch] +
mov dword ptr [edx+4] 8 +
add eax 1 +
cmp eax ebx +
jnz loc_429896  +
mov esi [esp-0BCh+arg_E0] +
mov eax [esi+28h] +
mov eax [eax+8Ch] +
cmp dword ptr [eax+4] 8 +
jnz loc_42A54F  +
xor eax eax +
jmp loc_4298E6  +
mov edx [esi+eax*4+28h] +
mov edx [edx+8Ch] +
cmp dword ptr [edx+4] 8 +
jnz loc_42A54F  +
add eax 1 +
cmp eax ebx +
jnz loc_4298D2  +
mov esi 1 +
test ecx ecx +
mov eax [ebp+0Ch] +
jz loc_42A0B2  +
xor edx edx +
sub eax [esp-0BCh+arg_E8] +
sbb edx [esp-0BCh+arg_EC] +
mov [esp-0BCh+arg_C0] ecx +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] eax +
mov [esp-0BCh+arg_BC] edx +
call sub_4732E0  +
mov edi edx +
mov edx eax +
mov ecx edi +
mov [esp-0BCh+arg_F8] eax +
add [esp-0BCh+arg_E8] edx +
adc [esp-0BCh+arg_EC] ecx +
test esi esi +
jz loc_42996A  +
mov esi 1 +
jmp loc_429166  +
***
test ebx ebx +
jz loc_42A80C  +
mov ecx [esp-0BCh+arg_E0] +
xor eax eax +
nop   +
mov edx [ecx+eax*4+28h] +
add eax 1 +
cmp eax ebx +
mov edx [edx+8Ch] +
mov dword ptr [edx+4] 7 +
jnz loc_429950  +
xor esi esi +
mov [esp-0BCh+arg_F8] 0 +
jmp loc_429166  +
mov eax [eax+4] +
mov [esp-0BCh+arg_D0] eax +
jmp loc_4290DB  +
mov eax [esp+0C0h] +
movzx eax byte ptr [eax+28h] +
and eax 7 +
cmp al 3 +
jz loc_429601  +
cmp ecx 1 +
jbe loc_429EB2  +
mov eax 1 +
mov esi [esp+28h] +
jmp loc_4299BB  +
***
add eax 1 +
cmp eax ecx +
jz loc_429EB2  +
mov ebx [esi+eax*4+24h] +
mov edx [esi+eax*4+28h] +
mov edi [ebx+1Ch] +
cmp [edx+1Ch] edi +
jnz loc_4299B0  +
mov edx [edx+8Ch] +
test byte ptr [edx+9] 4 +
jz loc_4299DD  +
cmp dword ptr [edx+4] 8 +
jz loc_4299B0  +
mov edi [edx+18h] +
test edi edi +
jz loc_4299B0  +
mov edx [ebx+8Ch] +
test byte ptr [edx+9] 4 +
jz loc_4299F6  +
cmp dword ptr [edx+4] 8 +
jz loc_4299B0  +
mov ebx [edx+18h] +
test ebx ebx +
jz loc_4299B0  +
mov dword ptr [esp+58h] 0 +
***
mov esi [esp-0BCh+arg_E0] +
mov edx [esi+24h] +
test edx edx +
jz loc_429601  +
xor edi edi +
mov [esp-0BCh+arg_D8] ebp +
mov ebp edi +
jmp loc_429B26  +
mov ecx [esp-0BCh+arg_E4] +
lea edx [ecx-6] +
cmp edx 1 +
jbe loc_429B77  +
and eax 2 +
mov [esp-0BCh+arg_F4] eax +
jnz loc_429A5C  +
mov eax [esp-0BCh+arg_E4] +
sub eax 1 +
cmp eax 1 +
jbe loc_429CC6  +
mov eax [esp-0BCh+arg_E4] +
sub eax 6474E550h +
cmp eax 2 +
jbe loc_429CC6  +
mov eax [edi+4] +
cmp eax 8 +
mov [esp-0BCh+arg_F8] eax +
jz loc_429AB0  +
mov ecx [esp-0BCh+arg_D8] +
mov eax [edi+10h] +
mov edx [edi+14h] +
mov ecx [ecx+8] +
cmp ecx eax +
ja loc_429CC6  +
xor ebx ebx +
sub eax ecx +
mov ecx eax +
mov eax [edi+18h] +
sbb edx ebx +
mov ebx edx +
xor edx edx +
add ecx eax +
mov eax [esp-0BCh+arg_D8] +
adc ebx edx +
cmp ebx 0 +
mov eax [eax+14h] +
jg loc_429CC6  +
jl loc_429AB0  +
cmp ecx eax +
ja loc_429CC6  +
lea esi [esi+0] +
mov eax [esp-0BCh+arg_110] +
test eax eax +
jz loc_429B00  +
mov eax [esp-0BCh+arg_F4] +
test eax eax +
jz loc_429B00  +
mov eax [esp-0BCh+arg_D8] +
mov edx [edi+0Ch] +
mov eax [eax+0Ch] +
cmp edx eax +
jb loc_429CC6  +
sub edx eax +
mov eax [esp-0BCh+arg_F0] +
test eax eax +
jz loc_429AE7  +
cmp [esp-0BCh+arg_F8] 8 +
jz loc_42B2D2  +
mov eax [edi+18h] +
mov ecx [esp-0BCh+arg_D8] +
add eax edx +
cmp eax [ecx+18h] +
ja loc_429CC6  +
lea esi [esi+0] +
cmp [esp-0BCh+arg_E4] 2 +
jz loc_429C3F  +
nop   +
lea esi [esi+0] +
add ebp 1 +
cmp ebp [esi+24h] +
jnb loc_429E74  +
mov eax [esp-0BCh+arg_D8] +
mov eax [eax] +
mov [esp-0BCh+arg_E4] eax +
mov eax [esi+ebp*4+28h] +
mov edi [eax+8Ch] +
mov [esp-0BCh+arg_D0] eax +
mov eax [edi+8] +
mov ecx eax +
and ecx 400h +
mov [esp-0BCh+arg_F0] ecx +
jz loc_429A21  +
cmp [esp-0BCh+arg_E4] 7 +
jz loc_429A31  +
cmp [esp-0BCh+arg_E4] 6474E552h +
jz loc_429A31  +
cmp [esp-0BCh+arg_E4] 1 +
jz loc_429A31  +
cmp dword ptr [edi+4] 8 +
jz loc_429CD7  +
mov eax [esp-0BCh+arg_100] +
mov [esp-0BCh+arg_B8] offset aBSectionACanTB +
mov [esp-0BCh+arg_C4] eax +
mov eax [esp-0BCh+arg_D0] +
mov [esp-0BCh+arg_C0] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_BC] eax +
call off_476094  +
mov edi [esi+4] +
mov eax edi +
call near ptr dword_422610  +
test eax eax +
mov ebx eax +
jz loc_429E00  +
mov eax ds:_iob +
add eax 20h +
mov [esp-0BCh+arg_B8] eax +
call fflush  +
mov eax ds:_iob +
mov [esp-0BCh+arg_C0] ebx +
xor ebx ebx +
mov [esp-0BCh+arg_BC] offset aS_18 +
add eax 40h +
mov [esp-0BCh+arg_B8] eax +
call fprintf  +
mov eax [esi+24h] +
test eax eax +
jz loc_429C12  +
mov eax [esi+ebx*4+28h] +
add ebx 1 +
mov eax [eax] +
mov [esp-0BCh+arg_BC] offset aS_17 +
mov [esp-0BCh+arg_C0] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp-0BCh+arg_B8] eax +
call fprintf  +
cmp ebx [esi+24h] +
jb loc_429BE8  +
mov eax ds:_iob +
mov [esp-0BCh+arg_B8] 0Ah +
add eax 40h +
mov [esp-0BCh+arg_BC] eax +
call putc  +
mov eax ds:_iob +
add eax 40h +
mov [esp-0BCh+arg_B8] eax +
call fflush  +
jmp loc_429B10  +
mov eax [edi+18h] +
test eax eax +
jnz loc_429B10  +
mov eax [esp-0BCh+arg_D8] +
mov eax [eax+18h] +
test eax eax +
mov [esp-0BCh+arg_124] eax +
jz loc_429B10  +
cmp [esp-0BCh+arg_F8] 8 +
jz loc_429CA1  +
mov eax [edi+10h] +
mov ecx [esp-0BCh+arg_D8] +
mov edx [edi+14h] +
mov [esp-0BCh+arg_F8] eax +
mov eax [ecx+8] +
cmp eax [esp-0BCh+arg_F8] +
mov [esp-0BCh+arg_FC] edx +
jnb loc_429CC6  +
mov ecx [esp-0BCh+arg_F8] +
xor edx edx +
mov ebx [esp-0BCh+arg_FC] +
sub ecx eax +
mov eax ecx +
mov ecx [esp-0BCh+arg_D8] +
sbb ebx edx +
cmp ebx 0 +
mov ecx [ecx+14h] +
jg loc_429CC6  +
jl loc_429CA1  +
cmp eax ecx +
jnb loc_429CC6  +
cmp [esp-0BCh+arg_F4] 0 +
jz loc_429B10  +
mov ecx [esp-0BCh+arg_D8] +
mov eax [edi+0Ch] +
mov edx [ecx+0Ch] +
cmp eax edx +
jbe loc_429CC6  +
sub eax edx +
cmp [esp-0BCh+arg_124] eax +
ja loc_429B10  +
mov eax [esp-0BCh+arg_F0] +
test eax eax +
jnz loc_429B6D  +
jmp loc_429B77  +
cmp [esp-0BCh+arg_E4] 7 +
jnz loc_429B10  +
jmp loc_429B77  +
movzx eax byte ptr [edx+1] +
mov edi [esp-0BCh+arg_108] +
imul eax edi +
add eax [ebp+14h] +
mov [ebp+14h] eax +
movzx edx byte ptr [edx+1] +
imul edx edi +
add edx [ebp+18h] +
test ebx ebx +
mov [ebp+18h] edx +
jnz loc_42922E  +
jmp loc_42923C  +
cmp ebx 1 +
jbe loc_429968  +
mov eax [esp-0BCh+arg_E0] +
mov edi offset a_dynamic_1 +
mov ecx 9 +
mov eax [eax+28h] +
mov esi [eax] +
cmps   +
jz loc_429968  +
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBTheFirstSecti +
mov [esp-0BCh+arg_BC] ebp +
call off_476094  +
mov [esp-0BCh+arg_B8] 11h +
call sub_40C770  +
jmp loc_42844E  +
***
mov edx [ebx+4] +
cmp edx 4 +
jz loc_429D71  +
cmp edx 9 +
jnz loc_429EEB  +
test eax eax +
jz loc_429E7D  +
test byte ptr [eax+17h] 8 +
jnz loc_429E7D  +
mov eax [esp-0BCh+arg_178] +
mov ecx [esp-0BCh+arg_D0] +
mov eax [eax+0A0h] +
mov edx [eax+90Ch] +
cmp ebx [ecx+edx*4] +
jz loc_429E7D  +
mov edx [eax+208h] +
test edx edx +
jz loc_429DB9  +
mov edx [edx+38h] +
cmp ebx [ecx+edx*4] +
jz loc_429E7D  +
mov eax [eax+934h] +
mov ecx [esp-0BCh+arg_D0] +
mov edx [eax+30h] +
cmp ebx [ecx+edx*4] +
jz loc_429E7D  +
mov eax [eax+2Ch] +
cmp ebx [ecx+eax*4] +
jz loc_429E7D  +
mov [esp-0BCh+arg_C4] 1 +
mov eax [esp-0BCh+arg_D8] +
mov edx [esp-0BCh+arg_DC] +
jmp loc_42971F  +
mov dword ptr [ebp+1Ch] 0 +
jmp loc_42913B  +
***
lea eax [edi-70000000h] +
cmp eax 0FFFFFFFh +
jbe loc_42A57E  +
lea eax [edi-60000000h] +
cmp eax 0FFFFFFFh +
ja loc_429FF7  +
mov [esp-0BCh+arg_C0] eax +
lea eax [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_BC] offset aLoos7_7x +
lea ebx [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_B8] eax +
call sprintf  +
jmp loc_429BB3  +
mov ebp [esp-0BCh+arg_178] +
mov esi [esp-0BCh+arg_E0] +
mov [esi+20h] eax +
mov [esi+24h] edx +
mov eax [esp-0BCh+arg_118] +
test eax eax +
jnz loc_42A44E  +
or byte ptr [ebp+2Bh] 10h +
mov eax 1 +
jmp loc_428450  +
mov ebp [esp-0BCh+arg_D8] +
jmp loc_429601  +
mov dword ptr [ebx+10h] 0FFFFFFFFh +
mov dword ptr [ebx+14h] 0FFFFFFFFh +
jmp loc_429737  +
mov edi [ebp+14h] +
mov eax [ebp+8] +
mov ecx [esp-0BCh+arg_E8] +
add eax edi +
sub ecx eax +
test esi esi +
mov eax ecx +
jnz loc_429EAA  +
lea ecx [edi+ecx] +
mov [ebp+14h] ecx +
add [ebp+18h] eax +
jmp loc_429252  +
mov [esp-0BCh+arg_110] 1 +
jmp loc_429A05  +
mov ecx [ebx+24h] +
jmp loc_4296DE  +
movzx eax byte ptr [edx+1] +
mov edi [esp-0BCh+arg_108] +
imul eax edi +
add [ebp+14h] eax +
movzx eax byte ptr [edx+1] +
imul eax edi +
add [ebp+18h] eax +
jmp loc_42923C  +
***
mov esi ebx +
jmp loc_4286F5  +
***
test eax eax +
jnz loc_429D79  +
jmp loc_429D83  +
mov dword ptr [esi+14h] 0 +
mov eax [ebp+0A0h] +
mov [esp-0BCh+arg_108] 0 +
mov dword ptr [eax+2Ch] 0 +
mov eax [esp-0BCh+arg_104] +
mov ecx [eax+174h] +
jmp loc_428F5A  +
mov ebp [ebx+30h] +
test ebp ebp +
jnz loc_429682  +
jmp loc_42975F  +
mov ebp [esp-0BCh+arg_178] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov edi [esp-0BCh+arg_E0] +
mov eax [eax+44h] +
mov ecx [edi+174h] +
mov [esp-0BCh+arg_E4] eax +
movzx esi byte ptr [ecx] +
mov [esp-0BCh+arg_F8] esi +
add esi [edi+10h] +
mov edi [edx] +
mov [esp-0BCh+arg_F0] esi +
test edi edi +
jz loc_42B2A9  +
mov edx edi +
xor esi esi +
mov [esp-0BCh+arg_100] 0 +
mov [esp-0BCh+arg_F4] 0 +
mov [esp-0BCh+arg_E8] 0 +
mov [esp-0BCh+arg_E0] 0 +
mov [esp-0BCh+arg_D0] edi +
jmp loc_429FAD  +
***
mov edx [edx] +
add eax 20h +
test edx edx +
jz loc_42A0C3  +
add esi 1 +
cmp dword ptr [eax] 1 +
jnz loc_429FA0  +
movzx ecx byte ptr [edx+20h] +
mov ebx ecx +
and ebx 10h +
jz loc_429FCE  +
mov edi [eax+0Ch] +
mov [esp-0BCh+arg_E8] edi +
mov edi [eax+10h] +
mov [esp-0BCh+arg_F4] edi +
and ecx 20h +
jz loc_429FA0  +
mov edi [eax+0Ch] +
test bl bl +
mov [esp-0BCh+arg_F0] edi +
mov edi [eax+10h] +
mov [esp-0BCh+arg_100] edi +
jz loc_429FA0  +
mov ecx [esp-0BCh+arg_F8] +
add [esp-0BCh+arg_F0] ecx +
add [esp-0BCh+arg_100] ecx +
mov [esp-0BCh+arg_E0] edx +
jmp loc_429FA0  +
lea eax [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_C4] edi +
lea ebx [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_C0] offset a8_8x +
mov [esp-0BCh+arg_BC] 20h +
mov [esp-0BCh+arg_B8] eax +
call sub_423A40  +
jmp loc_429BB3  +
movzx ecx byte ptr [ecx] +
xor ebx ebx +
mov [edx+24h] ebx +
mov [esp-0BCh+arg_DC] ebx +
mov [edx+20h] ecx +
mov [esp-0BCh+arg_D8] ecx +
jmp loc_429644  +
***
mov eax [ebp+7Ch] +
mov [esp+0ACh+var_94] eax +
test eax eax +
mov eax [ebp+28h] +
mov [esp+0ACh+var_64] eax +
jnz loc_42A5C7  +
shr [esp+0ACh+var_64] 5 +
and [esp+0ACh+var_64] 3FFFFh +
mov eax [esp+0ACh+var_64] +
and eax 43h +
cmp eax 1 +
jz loc_42A5D4  +
mov [esp+0ACh+var_38] 0 +
mov [esp+0ACh+var_58] 0 +
mov [esp+0ACh+var_4C] 0 +
***
lea eax [esp+74h] +
mov [esp-0BCh+arg_C0] eax +
mov [esp-0BCh+arg_BC] offset sub_422B60 +
mov [esp-0BCh+arg_B8] ebp +
call sub_410E60  +
mov eax [esp+74h] +
test eax eax +
jz loc_428C73  +
jmp loc_42844E  +
mov dword ptr [esp+40h] 0 +
xor edx edx +
xor ecx ecx +
jmp loc_429929  +
mov ecx [esp-0BCh+arg_17C] +
mov ebx [esp-0BCh+arg_E0] +
mov edi [esp-0BCh+arg_D0] +
test ecx ecx +
setnz cl  +
test ebx ebx +
setnz al  +
mov ebx edi +
and al cl +
mov byte ptr [esp-0BCh+arg_D0] cl +
mov edi eax +
jnz loc_42A758  +
mov eax [esp-0BCh+arg_E4] +
shl esi 5 +
mov edi [esp-0BCh+arg_17C] +
mov [esp-0BCh+arg_178] ebp +
add esi eax +
mov [esp-0BCh+arg_E0] esi +
mov esi eax +
lea esi [esi+0] +
mov edx [esi] +
cmp edx 6474E552h +
jz loc_42A265  +
cmp edx 6474E551h +
jz loc_42A360  +
mov eax [ebx+24h] +
test eax eax +
jz loc_42A318  +
cmp edx 1 +
jz loc_42A180  +
cmp edx 4 +
jz loc_42A3FC  +
test byte ptr [ebx+20h] 30h +
jnz loc_42B206  +
mov edx [ebx+28h] +
mov dword ptr [esi+14h] 0 +
mov ebp [edx+50h] +
mov [esi+8] ebp +
lea esi [esi+0] +
mov ecx [ebx+eax*4+24h] +
mov edx [ecx+8Ch] +
cmp dword ptr [edx+4] 8 +
jnz loc_42A3EC  +
sub eax 1 +
jnz loc_42A160  +
lea esi [esi+0] +
mov ebx [ebx] +
add esi 20h +
test ebx ebx +
jnz loc_42A110  +
mov ebp [esp-0BCh+arg_178] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov esi [esp-0BCh+arg_D8] +
mov edi [esp-0BCh+arg_DC] +
mov [edx+20h] esi +
mov esi [esp-0BCh+arg_104] +
mov [edx+24h] edi +
mov edx [esi+0B0h] +
test edx edx +
jz loc_42A1D6  +
mov eax [esp-0BCh+arg_17C] +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call edx  +
test eax eax +
jz loc_42844E  +
mov eax [ebp+0A0h] +
cmp byte ptr [esp-0BCh+arg_D0] 0 +
jz loc_42A1F3  +
mov esi [esp-0BCh+arg_17C] +
movzx edx byte ptr [esi] +
and edx 3 +
cmp dl 1 +
jz loc_42B223  +
mov eax [eax+934h] +
mov esi [eax+1Ch] +
mov eax [esp-0BCh+arg_104] +
mov eax [eax+174h] +
movzx ebx byte ptr [eax+1] +
mov [esp-0BCh+arg_C4] 0 +
movzx eax byte ptr [eax] +
mov [esp-0BCh+arg_C0] 0 +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call sub_4060C0  +
test eax eax +
jnz loc_42844E  +
mov eax [esp-0BCh+arg_104] +
xor edx edx +
mov eax [eax+174h] +
mov ecx [eax+10h] +
mov eax [esp-0BCh+arg_114] +
mov edi [eax+44h] +
mov eax esi +
div  ebx +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] edi +
mov [esp-0BCh+arg_C0] eax +
call ecx  +
test eax eax +
jnz loc_42844E  +
jmp loc_429E5A  +
cmp byte ptr [esp-0BCh+arg_D0] 0 +
jz loc_42A418  +
mov eax [esp-0BCh+arg_178] +
mov ebp [esp-0BCh+arg_E4] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov eax [eax] +
test eax eax +
jnz loc_42A29F  +
jmp loc_42A340  +
mov eax [eax] +
add ebp 20h +
test eax eax +
jz loc_42A340  +
cmp dword ptr [ebp+0] 1 +
jnz loc_42A292  +
mov ecx [edi+74h] +
cmp [ebp+0Ch] ecx +
jnb loc_42A292  +
mov edx [eax+24h] +
test edx edx +
jz loc_42A292  +
mov edx [eax+28h] +
mov ecx [edi+70h] +
cmp [edx+1Ch] ecx +
jb loc_42A292  +
nop   +
cmp ebp [esp-0BCh+arg_E0] +
jnb loc_42A398  +
mov eax [ebp+0Ch] +
cmp byte ptr [esp-0BCh+arg_D0] 0 +
mov [esi+0Ch] eax +
mov eax [ebp+10h] +
mov [esi+10h] eax +
mov eax [ebp+8] +
mov [esi+8] eax +
jz loc_42A556  +
mov eax [edi+74h] +
sub eax [ebp+0Ch] +
movzx edx byte ptr [ebx+20h] +
mov [esi+14h] eax +
test dl 4 +
mov [esi+18h] eax +
jnz loc_42A303  +
mov dword ptr [esi+1Ch] 1 +
and edx 1 +
jnz loc_42A180  +
mov dword ptr [esi+4] 4 +
jmp loc_42A180  +
movzx eax byte ptr [ebx+20h] +
test al 10h +
jz loc_42A375  +
mov ecx [esp-0BCh+arg_E8] +
test al 2 +
mov [esi+0Ch] ecx +
jnz loc_42A180  +
mov eax [esp-0BCh+arg_F4] +
mov [esi+10h] eax +
jmp loc_42A180  +
***
mov [esp-0BCh+arg_BC] 1546h +
mov [esp-0BCh+arg_B8] offset a____Binutil_14 +
call sub_40C6C0  +
jmp loc_42A2C0  +
***
test byte ptr [ebx+20h] 8 +
jz loc_42A180  +
mov eax [ebx+18h] +
mov [esi+18h] eax +
jmp loc_42A180  +
test al 20h +
jz loc_42A180  +
mov ecx [esp-0BCh+arg_F0] +
test al 2 +
mov [esi+0Ch] ecx +
jnz loc_42A180  +
mov eax [esp-0BCh+arg_100] +
mov [esi+10h] eax +
jmp loc_42A180  +
test esi 1 +
mov edx esi +
mov ecx 20h +
jnz loc_42A85E  +
test dl 2 +
jnz loc_42A84D  +
mov ebp ecx +
xor eax eax +
and ebp 0FFFFFFFCh +
mov dword ptr [edx+eax] 0 +
add eax 4 +
cmp eax ebp +
jb loc_42A3BB  +
add edx eax +
test cl 2 +
jz loc_42A3D9  +
xor ebp ebp +
add edx 2 +
mov [edx-2] bp +
and ecx 1 +
jz loc_42A3E1  +
mov byte ptr [edx] 0 +
mov dword ptr [esi] 0 +
jmp loc_42A180  +
mov eax [ecx+50h] +
add eax [edx+18h] +
sub eax ebp +
mov [esi+14h] eax +
jmp loc_42A180  +
mov ecx [esp-0BCh+arg_178] +
movzx edx byte ptr [ecx+28h] +
and edx 7 +
cmp dl 3 +
jnz loc_42A143  +
jmp loc_42A180  +
mov eax [esp-0BCh+arg_E4] +
mov ecx [esp-0BCh+arg_E0] +
mov ebp eax +
cmp eax ecx +
jnb loc_42A398  +
mov eax [esp-0BCh+arg_E0] +
jmp loc_42A43B  +
add ebp 20h +
cmp ebp eax +
jnb loc_42A398  +
cmp dword ptr [ebp+0] 1 +
jnz loc_42A430  +
mov ecx [esi+10h] +
cmp [ebp+10h] ecx +
jnz loc_42A430  +
jmp loc_42A2C0  +
mov ecx [ebp+0A0h] +
mov eax [ecx+934h] +
add ecx 48h +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov [esp-0BCh+arg_B8] ecx +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_BC] eax +
call sub_427500  +
mov ebx [ebp+0A0h] +
mov ecx [ebx+208h] +
test ecx ecx +
jz loc_42A496  +
mov esi [ecx+18h] +
test esi esi +
jnz loc_42A82A  +
mov [esp-0BCh+arg_BC] eax +
lea eax [ebx+0B8h] +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] eax +
call sub_427500  +
mov ecx [ebp+0A0h] +
mov ecx [ecx+934h] +
mov [ecx+20h] eax +
mov eax [ebx+0C8h] +
mov [ecx+24h] edx +
mov edx [ebx+0CCh] +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
call sub_4060C0  +
test eax eax +
jnz loc_42844E  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_BC] eax +
call sub_44E5D0  +
test eax eax +
jz loc_42844E  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_44E230  +
jmp loc_429E66  +
mov eax [esp-0BCh+arg_E0] +
xor ecx ecx +
lea esi [eax+28h] +
xor eax eax +
mov edx [esi+eax*4] +
mov edx [edx+40h] +
cmp ecx edx +
cmovb ecx edx +
add eax 1 +
cmp eax ebx +
jnz loc_42A526  +
mov esi [esp-0BCh+arg_11C] +
mov eax 1 +
shl eax cl +
cmp eax esi +
cmovb eax esi +
mov ecx eax +
jmp loc_429890  +
xor esi esi +
jmp loc_4298F2  +
movzx edx byte ptr [ebx+20h] +
test dl 8 +
jz loc_42B2EF  +
mov eax [ebx+18h] +
mov [esi+14h] eax +
jmp loc_42A2F4  +
***
mov [ebp+68h] ecx +
jmp loc_428E22  +
mov [ebp+64h] edx +
jmp loc_428E17  +
***
mov [esp-0BCh+arg_C0] eax +
lea eax [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_BC] offset aLoproc7_7x +
lea ebx [esp-0BCh+arg_138] +
mov [esp-0BCh+arg_B8] eax +
call sprintf  +
jmp loc_429BB3  +
movzx esi byte ptr [ecx+1] +
imul esi [esp-0BCh+arg_108] +
mov [edx+1Ch] esi +
jmp loc_428F90  +
xor eax eax +
xor edx edx +
mov [esp-0BCh+arg_120] 0 +
jmp loc_429039  +
***
shr [esp+0ACh+var_64] 5 +
and [esp+0ACh+var_64] 3FFFFh +
mov eax [ebp+64h] +
xor edx edx +
mov esi [ebp+78h] +
test eax eax +
jz loc_42A5EF  +
mov ecx [eax+8] +
mov eax [eax+0Ch] +
cmp edx ecx +
cmovb edx ecx +
test eax eax +
jnz loc_42A5E0  +
lea ebx [edx+1] +
mov [esp+0ACh+var_A4] 4 +
mov [esp+0ACh+var_A8] ebx +
mov [esp+0ACh+var_AC] ebp +
call sub_407CF0  +
test eax eax +
mov edi eax +
mov [esp+0ACh+var_74] eax +
jz loc_42844E  +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov [eax+8] edi +
mov [eax+28h] ebx +
mov eax [esp+0ACh+var_94] +
test eax eax +
jz loc_42A8D6  +
lea eax [esi+eax*4] +
mov edi esi +
mov [esp+0ACh+var_84] eax +
mov ebx [edi] +
test byte ptr [ebx+0Dh] 1 +
jnz loc_42A6A0  +
add edi 4 +
cmp edi [esp+0ACh+var_84] +
jnz loc_42A63B  +
xor ebx ebx +
xor edi edi +
mov eax ebx +
mov ebx esi +
mov [esp+0ACh+var_8C] 0 +
mov esi eax +
jmp loc_42A670  +
add esi 1 +
add edi 1 +
cmp edi [esp+0ACh+var_94] +
jz loc_42B316  +
mov edx [ebx+edi*4] +
mov eax ebp +
call loc_422AB0  +
test eax eax +
jnz loc_42A660  +
mov edx [ebx+edi*4] +
test byte ptr [edx+0Dh] 1 +
jz loc_42A692  +
mov eax ebp +
call sub_422B00  +
test eax eax +
jnz loc_42A663  +
add [esp+0ACh+var_8C] 1 +
jmp loc_42A663  +
***
mov eax [ebx+8] +
test eax eax +
jnz loc_42A643  +
mov edx ebx +
mov eax ebp +
call sub_422B00  +
test eax eax +
jnz loc_42A643  +
mov eax [ebx+10h] +
cmp eax offset off_476230 +
jz loc_42A643  +
cmp ebp [eax+94h] +
jz loc_42A6C9  +
mov eax [eax+3Ch] +
mov eax [eax+8] +
mov ecx [esp+0ACh+var_74] +
mov [ecx+eax*4] ebx +
jmp loc_42A643  +
***
mov eax [ebp+0] +
mov [esp-0BCh+arg_E4] eax +
jmp loc_4295E8  +
mov [esp-0BCh+arg_BC] 12F7h +
mov [esp-0BCh+arg_B8] offset a____Binutil_14 +
call sub_40C6C0  +
mov eax [ebp+0A0h] +
mov esi [esp-0BCh+arg_104] +
mov edx [eax+934h] +
mov ecx [esi+174h] +
jmp loc_428F90  +
mov [esp-0BCh+arg_BC] 1309h +
mov [esp-0BCh+arg_B8] offset a____Binutil_14 +
call sub_40C6C0  +
mov eax [ebp+0A0h] +
mov esi [esp-0BCh+arg_104] +
mov eax [eax+934h] +
mov edx [esi+174h] +
mov eax [eax+1Ch] +
movzx ecx byte ptr [edx+1] +
jmp loc_428FB3  +
***
mov edi 2 +
mov esi 1 +
jmp loc_4285F9  +
***
mov eax [esp-0BCh+arg_17C] +
mov [esp-0BCh+arg_C8] 1 +
mov [esp-0BCh+arg_C4] 0 +
mov [esp-0BCh+arg_C0] 0 +
mov [esp-0BCh+arg_BC] offset a__ehdr_start +
mov eax [eax+1Ch] +
mov [esp-0BCh+arg_B8] eax +
call sub_414050  +
test eax eax +
mov ecx eax +
jz loc_42A7EB  +
movzx eax byte ptr [eax+0Ch] +
cmp al 5 +
jz loc_42A79C  +
cmp al 2 +
ja loc_42A7EB  +
mov eax [esp-0BCh+arg_E0] +
mov edx [eax+24h] +
test edx edx +
jnz loc_42B28C  +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
jmp loc_42A7CB  +
***
mov ebx [eax+24h] +
test ebx ebx +
jnz loc_42B28C  +
mov eax [eax] +
test eax eax +
jnz loc_42A7C0  +
mov eax [esp-0BCh+arg_E8] +
mov dword ptr [ecx+14h] offset off_476230 +
mov [ecx+18h] eax +
or byte ptr [ecx+33h] 2 +
and byte ptr [ecx+34h] 0FEh +
mov byte ptr [ecx+0Ch] 3 +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov ebx [edx] +
test ebx ebx +
jz loc_42B30B  +
mov eax edi +
mov byte ptr [esp-0BCh+arg_D0] al +
jmp loc_42A0EC  +
mov esi ebx +
mov [esp-0BCh+arg_F8] ebx +
jmp loc_429166  +
mov esi [esp-0BCh+arg_114] +
mov esi [esi+934h] +
mov [esp-0BCh+arg_E0] esi +
jmp loc_429E50  +
mov [esp-0BCh+arg_C4] 1 +
mov [esp-0BCh+arg_BC] eax +
mov [esp-0BCh+arg_C0] edx +
mov [esp-0BCh+arg_B8] ecx +
call sub_427500  +
mov ebx [ebp+0A0h] +
jmp loc_42A496  +
xor eax eax +
add edx 2 +
mov [edx-2] ax +
sub ecx 2 +
jmp loc_42A3B4  +
mov byte ptr [esi] 0 +
lea edx [esi+1] +
mov cl 1Fh +
jmp loc_42A3AB  +
***
mov eax [esp+0ACh+var_94] +
mov [esp+0ACh+var_AC] ebp +
mov [esp+0ACh+var_A8] eax +
call sub_407D70  +
jmp loc_42844E  +
***
mov eax offset aUnknown_4 +
jmp loc_4296A3  +
mov [esp-0BCh+arg_BC] 0 +
mov [esp-0BCh+arg_B8] ebp +
call sub_427600  +
test eax eax +
jz loc_42844E  +
mov esi [ebp+0A0h] +
jmp loc_428F0B  +
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBNotEnoughRoom +
mov [esp-0BCh+arg_BC] ebp +
call off_476094  +
mov [esp-0BCh+arg_B8] 11h +
call sub_40C770  +
jmp loc_42844E  +
***
mov [esp+0ACh+var_8C] 0 +
xor ebx ebx +
mov edi [ebp+64h] +
test edi edi +
jz loc_42A90C  +
mov [esp+0ACh+var_84] esi +
mov esi ebx +
mov ebx [esp+0ACh+var_74] +
mov eax [edi+8] +
mov eax [ebx+eax*4] +
test eax eax +
jz loc_42AF5C  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_42A8F1  +
mov ebx esi +
mov esi [esp+0ACh+var_84] +
mov eax [esp+0ACh+var_8C] +
mov [esp+0ACh+var_A4] 4 +
mov [esp+0ACh+var_AC] ebp +
add eax ebx +
mov [esp+0ACh+var_A8] eax +
mov [esp+0ACh+var_70] eax +
call sub_407BA0  +
test eax eax +
mov [esp+0ACh+var_80] eax +
jz loc_42844E  +
mov eax [esp+0ACh+var_94] +
mov [esp+0ACh+var_7C] 0 +
test eax eax +
jz loc_42B178  +
xor eax eax +
xor edi edi +
mov [esp+0ACh+var_84] esi +
mov esi eax +
jmp loc_42A975  +
mov eax [esp+0ACh+var_8C] +
add eax esi +
add esi 1 +
lea edx [eax+1] +
mov ecx [esp+0ACh+var_80] +
mov [ecx+eax*4] ebx +
mov [ebx+14h] edx +
add edi 1 +
cmp edi [esp+0ACh+var_94] +
jz loc_42A9AD  +
mov eax [esp+0ACh+var_84] +
mov ebx [eax+edi*4] +
mov eax ebp +
mov edx ebx +
call loc_422AB0  +
test eax eax +
jnz loc_42A956  +
test byte ptr [ebx+0Dh] 1 +
jz loc_42A9A0  +
mov edx ebx +
mov eax ebp +
call sub_422B00  +
test eax eax +
jnz loc_42A96C  +
lea esi [esi+0] +
mov eax [esp+0ACh+var_7C] +
lea edx [eax+1] +
mov [esp+0ACh+var_7C] edx +
jmp loc_42A962  +
mov [esp+18h] esi +
mov ebx [ebp+64h] +
mov esi [esp+38h] +
test ebx ebx +
jz loc_42A9D7  +
lea esi [esi+0] +
mov edx [ebx+8] +
lea ecx [esi+edx*4] +
mov eax [ecx] +
test eax eax +
jz loc_42AF7B  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_42A9C0  +
mov eax [esp+3Ch] +
mov [esp] ebp +
mov [esp+8] eax +
mov eax [esp+2Ch] +
mov [esp+4] eax +
call sub_4115E0  +
call sub_44E1B0  +
test eax eax +
mov [esp+54h] eax +
jz loc_42844E  +
mov eax [ebp+4] +
mov esi [ebp+7Ch] +
mov eax [eax+1B0h] +
mov edi esi +
mov [esp+5Ch] esi +
mov esi [ebp+0A0h] +
add edi 1 +
mov [esp+40h] edi +
mov [esp+3Ch] eax +
mov eax [eax+174h] +
mov dword ptr [esi+4Ch] 2 +
mov [esp+68h] esi +
movzx edx byte ptr [eax+5] +
mov [esi+70h] edx +
imul edx edi +
mov [esi+60h] edx +
mov edx [esp+20h] +
add edx 1 +
mov [esi+68h] edx +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
mov dword ptr [esi+0BCh] 3 +
shl eax cl +
mov [esi+6Ch] eax +
mov eax edi +
shl eax 5 +
lea esi ds:0[edi*4] +
sub eax esi +
mov [esp] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+64h] eax +
jz loc_42B2C1  +
mov eax [esp+3Ch] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
mov [esp] ebp +
mov [esp+8] eax +
mov eax [esp+40h] +
mov [esp+4] eax +
call sub_407BA0  +
test eax eax +
mov [esp+60h] eax +
jz loc_42B15B  +
mov eax [esp+68h] +
mov edi [esp+60h] +
mov [eax+78h] edi +
mov eax [ebp+0A0h] +
mov ebx [eax+208h] +
test ebx ebx +
jz loc_42AAD8  +
mov edi [ebx] +
test edi edi +
jnz loc_42B185  +
mov eax [esp+64h] +
mov dword ptr [esp+4Ch] 0 +
mov dword ptr [esp+2Ch] 0 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov byte ptr [eax+0Ch] 0 +
mov byte ptr [eax+0Dh] 0 +
mov byte ptr [eax+0Eh] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+18h] 0 +
mov eax [esp+3Ch] +
mov dword ptr [esp+50h] 0 +
mov eax [eax+44h] +
test eax eax +
jz loc_42AB45  +
mov [esp] ebp +
call eax  +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+50h] eax +
mov ecx [esp+5Ch] +
mov eax [ebp+78h] +
test ecx ecx +
jle loc_42B095  +
mov edi eax +
mov eax [esp+64h] +
mov dword ptr [esp+28h] 1 +
mov [esp+0C0h] ebp +
lea esi [eax+1Ch] +
mov eax [esp+48h] +
and eax 42h +
mov [esp+58h] eax +
***
mov eax [edi] +
mov edx [esp-0BCh+arg_108] +
mov ecx [eax+8] +
test edx edx +
mov ebp [eax+0Ch] +
mov [esp-0BCh+arg_D0] ecx +
jnz loc_42AB9F  +
mov edx ebp +
and edx 102h +
cmp edx 100h +
jz loc_42AE9C  +
mov eax [eax+4] +
mov [esp-0BCh+arg_C0] 0 +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_44E260  +
cmp eax 0FFFFFFFFh +
mov [esp-0BCh+arg_E8] eax +
jz loc_42B15B  +
mov eax [edi] +
mov edx [eax] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_42ADA4  +
xor ebx ebx +
mov ecx ebp +
mov eax [eax+10h] +
and ecx 100h +
mov [esp-0BCh+arg_F0] ecx +
jnz loc_42ADC0  +
test byte ptr [eax+15h] 10h +
jz loc_42ADC0  +
test ebx ebx +
jz loc_42AC08  +
mov ecx [ebx+18h] +
test ecx ecx +
mov [esp-0BCh+arg_D8] ecx +
jnz loc_42AC1B  +
cmp [esp-0BCh+arg_D0] 0Fh +
mov [esp-0BCh+arg_D8] 10h +
jbe loc_42B058  +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_428190  +
mov ecx eax +
mov eax [edi] +
mov eax [eax+10h] +
test ebp 40000h +
mov edx 6 +
jnz loc_42AC75  +
test ebp 400000h +
mov dl 0Ah +
jnz loc_42AC75  +
test ebp 8 +
mov dl 2 +
jnz loc_42AC75  +
test ebp 10000h +
mov dl 1 +
jnz loc_42AC75  +
test ebp 80000h +
mov dl 8 +
jnz loc_42AC75  +
mov edx ebp +
shl edx 0Bh +
sar edx 1Fh +
and edx 9 +
test byte ptr [eax+15h] 4 +
mov eax 6 +
cmovnz edx eax +
test ebx ebx +
jz loc_42ACA6  +
mov eax [esp-0BCh+arg_F4] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_42ACA6  +
mov [esp-0BCh+arg_BC] edx +
lea edx [ebx+18h] +
mov [esp-0BCh+arg_100] ecx +
mov [esp-0BCh+arg_B8] edx +
call eax  +
mov ecx [esp-0BCh+arg_100] +
mov edx eax +
mov eax [esp-0BCh+arg_F0] +
test eax eax +
jz loc_42AE32  +
and ebp 2 +
cmp ebp 1 +
sbb eax eax +
and eax 0FFFFFFF0h +
add eax 13h +
test ebx ebx +
jz loc_42AF53  +
movzx edx byte ptr [ebx+25h] +
movzx ebx byte ptr [ebx+26h] +
mov ebp [esp-0BCh+arg_D8] +
mov [esi+0Ch] al +
mov eax [esp-0BCh+arg_E0] +
add [esp-0BCh+arg_E0] 1 +
cmp [esp-0BCh+arg_104] 1 +
mov [esi] ebp +
mov ebp [esp-0BCh+arg_D0] +
mov [esi+14h] eax +
mov eax [esp-0BCh+arg_E4] +
mov [esi+0Dh] dl +
sbb [esp-0BCh+arg_E4] 0FFFFFFFFh +
add edi 4 +
add esi 1Ch +
mov [esi-18h] ebp +
mov ebp [esp-0BCh+arg_E8] +
mov [esi-4] eax +
mov eax [esp-0BCh+arg_E0] +
mov [esi-0Eh] bl +
mov [esi-0Ch] ecx +
mov [esi-14h] ebp +
cmp eax [esp-0BCh+arg_F8] +
jnz loc_42AB77  +
mov eax [esp-0BCh+arg_10C] +
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_44E6A0  +
mov ebx [esp-0BCh+arg_11C] +
xor esi esi +
mov edi [esp-0BCh+arg_104] +
jmp loc_42AD87  +
mov dword ptr [ebx+8] 0 +
mov eax [esp-0BCh+arg_F4] +
add esi 1 +
mov ecx [ebx+18h] +
mov eax [eax+174h] +
lea ecx [edi+ecx*4] +
mov edx [eax+24h] +
mov [esp-0BCh+arg_C4] ecx +
movzx eax byte ptr [eax+5] +
imul eax [ebx+14h] +
add eax [esp-0BCh+arg_118] +
mov [esp-0BCh+arg_BC] ebx +
add ebx 1Ch +
mov [esp-0BCh+arg_B8] ebp +
mov [esp-0BCh+arg_C0] eax +
call edx  +
cmp [esp-0BCh+arg_114] esi +
jl loc_42B0AC  +
mov eax [ebx+8] +
cmp eax 0FFFFFFFFh +
jz loc_42AD40  +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_44E530  +
mov [ebx+8] eax +
jmp loc_42AD47  +
mov ebx [edx+0A0h] +
test ebx ebx +
jz loc_42ABD8  +
mov ebx eax +
jmp loc_42ABDA  +
***
mov ecx [esp+arg_BC] +
mov ecx [esp+arg_BC] +
mov ecx [esp+arg_BC] +
mov ecx [esp+arg_BC] +
mov edx [esp-0BCh+arg_178] +
mov edx [edx+0A0h] +
mov edx [edx+208h] +
test edx edx +
jz loc_42AC35  +
mov ecx [edx+38h] +
jmp loc_42AC35  +
***
xor ebx ebx +
xor edx edx +
jmp loc_42ACD0  +
***
mov edx [edi+98h] +
mov eax ebp +
call loc_422AB0  +
test eax eax +
jnz loc_42B037  +
add [esp+0ACh+var_8C] 1 +
jmp loc_42A8FF  +
***
mov edi [ebx+98h] +
mov eax ebp +
mov [ecx] edi +
mov edx edi +
call loc_422AB0  +
test eax eax +
jnz loc_42B03F  +
mov edx [esp+30h] +
mov eax edx +
add eax 1 +
mov [esp+30h] eax +
mov ecx [esp+2Ch] +
mov [ecx+edx*4] edi +
mov [edi+14h] eax +
jmp loc_42A9D0  +
***
mov [esp-0BCh+arg_D0] 0 +
jmp loc_42AE00  +
mov ecx [esp-0BCh+arg_D0] +
mov edx eax +
mov [esp-0BCh+arg_D8] ecx +
jmp loc_42ADD6  +
mov eax [edx] +
mov [esp-0BCh+arg_100] edx +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_410840  +
mov edx [esp-0BCh+arg_100] +
test eax eax +
jz loc_42B129  +
mov [esp-0BCh+arg_BC] eax +
mov eax [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] eax +
call sub_428190  +
cmp eax 0FFFFFEFFh +
mov ecx eax +
jnz loc_42AE28  +
mov [esp-0BCh+arg_BC] 1D04h +
mov [esp-0BCh+arg_B8] offset a____Binutil_14 +
mov [esp-0BCh+arg_100] eax +
call sub_40C6C0  +
mov eax [edi] +
mov ecx [esp-0BCh+arg_100] +
mov eax [eax+10h] +
jmp loc_42AC35  +
***
add esi 1 +
jmp loc_42A8FF  +
***
mov ecx [esp+18h] +
mov edx [esp+20h] +
add edx ecx +
add ecx 1 +
lea eax [edx+1] +
mov [esp+18h] ecx +
jmp loc_42AFA1  +
***
mov eax [esp-0BCh+arg_D0] +
mov [esp-0BCh+arg_B8] eax +
call near ptr dword_40F9D0  +
mov edx 1 +
mov ecx eax +
mov eax [edi] +
shl edx cl +
mov [esp-0BCh+arg_D8] edx +
mov eax [eax+10h] +
jmp loc_42AC1B  +
and ebp 80h +
cmp ebp 1 +
sbb eax eax +
and edx 0Fh +
and eax 0FFFFFFF0h +
lea eax [eax+edx+20h] +
jmp loc_42ACC0  +
***
mov eax [esp+54h] +
mov [esp] eax +
call sub_44E6A0  +
cmp dword ptr [esp+5Ch] 0 +
jz loc_42AD34  +
***
mov eax [esp-0BCh+arg_11C] +
mov [esp-0BCh+arg_B8] eax +
call free  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_44E520  +
mov esi [esp-0BCh+arg_120] +
mov dword ptr [esp+74h] 0 +
mov [esp-0BCh+arg_118] 1 +
mov dword ptr [esi+0BCh] 3 +
mov dword ptr [esi+0C0h] 0 +
mov [esi+0D0h] eax +
mov dword ptr [esi+0C4h] 0 +
mov dword ptr [esi+0E0h] 0 +
mov dword ptr [esi+0D4h] 0 +
mov dword ptr [esi+0D8h] 0 +
mov dword ptr [esi+0DCh] 1 +
jmp loc_42A089  +
mov eax [edi] +
mov ecx [edx] +
mov edx [eax+4] +
mov eax offset aLocalSym +
mov [esp-0BCh+arg_C0] ecx +
mov [esp-0BCh+arg_B8] offset aUnableToFindEq +
test edx edx +
cmovnz eax edx +
mov [esp-0BCh+arg_BC] eax +
call off_476094  +
mov [esp-0BCh+arg_B8] 5 +
call sub_40C770  +
mov eax [esp-0BCh+arg_10C] +
mov [esp-0BCh+arg_B8] eax +
call sub_44E230  +
mov eax [esp-0BCh+arg_11C] +
mov [esp-0BCh+arg_B8] eax +
call free  +
jmp loc_42844E  +
***
mov [esp+0ACh+var_94] 0 +
jmp loc_42A9B1  +
***
mov eax [esp+40h] +
mov dword ptr [esp+8] 4 +
mov [esp] ebp +
mov [esp+4] eax +
call sub_407CF0  +
test eax eax +
mov [esp+4Ch] eax +
jz loc_42B15B  +
mov [ebx+30h] eax +
mov eax [esp+64h] +
mov dword ptr [ebx+4] 12h +
mov [ebx+18h] esi +
mov dword ptr [ebx+24h] 4 +
mov dword ptr [ebx+28h] 4 +
mov dword ptr [esp+2Ch] 1 +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov byte ptr [eax+0Ch] 0 +
mov byte ptr [eax+0Dh] 0 +
mov byte ptr [eax+0Eh] 0 +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+14h] 0 +
mov dword ptr [eax+18h] 0 +
jmp loc_42AB21  +
***
mov ebp [esp-0BCh+arg_178] +
mov [esp-0BCh+arg_B8] offset aBWarningNonLoa +
mov [esp-0BCh+arg_BC] ebp +
call off_476094  +
jmp loc_42844E  +
mov ecx [eax+30h] +
mov edx [eax+44h] +
shl ecx 5 +
lea ebx [edx+ecx] +
cmp edx ebx +
jnb loc_42B25E  +
mov esi 0FFFFFFFFh +
jmp loc_42B247  +
***
add edx 20h +
cmp ebx edx +
jbe loc_42B256  +
cmp dword ptr [edx] 1 +
jnz loc_42B240  +
mov ecx [edx+0Ch] +
cmp esi ecx +
cmova esi ecx +
jmp loc_42B240  +
test esi esi +
jz loc_42A1F3  +
mov eax [esp-0BCh+arg_114] +
mov word ptr [eax+24h] 2 +
mov eax [ebp+0A0h] +
jmp loc_42A1F3  +
***
mov [esp+0ACh+var_A8] 0D8Dh +
mov [esp+0ACh+var_AC] offset a____Binutil_14 +
call sub_40C6C0  +
jmp loc_4287E5  +
***
mov eax [eax+28h] +
test eax eax +
jz loc_42A7D1  +
mov edx [esp-0BCh+arg_E8] +
sub edx [eax+1Ch] +
mov [ecx+14h] eax +
mov [ecx+18h] edx +
jmp loc_42A7DF  +
cmp [esp-0BCh+arg_17C] 0 +
mov eax [ebp+0A0h] +
setnz byte ptr [esp-0BCh+arg_D0]  +
jmp loc_42A196  +
***
mov eax [esp+54h] +
mov [esp] eax +
call sub_44E230  +
jmp loc_42844E  +
***
xor eax eax +
cmp [esp-0BCh+arg_E4] 7 +
jnz loc_429AEA  +
nop   +
jmp loc_429AE7  +
mov ecx 0FFFFFFF1h +
jmp loc_42AC35  +
mov dword ptr [esp+8] offset aAssign_file_po +
mov dword ptr [esp+4] 155Eh +
mov dword ptr [esp] offset a____Binutil_14 +
call sub_40C6F0  +
mov ecx edi +
mov [esp+18h] cl +
jmp loc_42A196  +
***
mov eax esi +
mov esi ebx +
mov ebx eax +
jmp loc_42A8E0  +
***
jmp loc_42B330  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp [esp+60h] +
mov eax [ebp+4] +
test byte ptr [ebp+2Bh] 10h +
mov eax [eax+1B0h] +
mov [esp+20h] eax +
jnz loc_42B362  +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call sub_428260  +
test eax eax +
jz loc_42B3A0  +
mov eax [ebp+0A0h] +
lea edx [esp+3Ch] +
mov dword ptr [esp+3Ch] 0 +
mov eax [eax+40h] +
mov [esp+2Ch] eax +
mov eax [esp+20h] +
mov eax [eax+174h] +
mov eax [eax+1Ch] +
mov [esp+8] edx +
mov [esp] ebp +
mov [esp+4] eax +
call sub_410E60  +
mov ecx [esp+3Ch] +
test ecx ecx +
jz loc_42B3B0  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov ecx [edx+20h] +
mov ebx [edx+24h] +
mov [esp+18h] ecx +
mov ecx [eax+40h] +
mov eax [eax+214h] +
mov [esp+1Ch] ebx +
lea edi [ecx+4] +
lea eax [ecx+eax*4] +
cmp eax edi +
jbe loc_42B541  +
mov [esp+60h] ebp +
mov ebp eax +
jmp loc_42B3FB  +
add edi 4 +
cmp ebp edi +
jbe loc_42B531  +
mov ebx [edi] +
mov eax [ebx+10h] +
and eax [ebx+14h] +
cmp eax 0FFFFFFFFh +
jnz loc_42B3F0  +
mov eax [ebx+4] +
mov esi [ebx+2Ch] +
cmp eax 4 +
jz loc_42B4FE  +
cmp eax 9 +
jz loc_42B4FE  +
test esi esi +
jz loc_42B3F0  +
test byte ptr [esi+17h] 8 +
jz loc_42B3F0  +
mov eax [esi] +
mov [esp+24h] eax +
mov eax [ebx+30h] +
mov [esp+4] esi +
mov [esp+8] eax +
mov eax [esp+60h] +
mov [esp] eax +
call sub_41F940  +
test eax eax +
jz loc_42B3A0  +
movzx eax byte ptr [esi+18h] +
and eax 30h +
cmp al 10h +
jz loc_42B770  +
cmp dword ptr [ebx] 0FFFFFFFFh +
jnz loc_42B798  +
mov eax [esp+60h] +
mov ecx [esp+24h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44E260  +
mov [ebx] eax +
mov eax [esi+8Ch] +
mov edx [eax+3Ch] +
mov [esp+28h] eax +
test edx edx +
jz loc_42B4C1  +
mov ecx [esp+24h] +
mov eax [esp+60h] +
mov dword ptr [esp] 0 +
call sub_423250  +
test eax eax +
jz loc_42B3A0  +
mov eax [esp+28h] +
mov edx [eax+4Ch] +
test edx edx +
jz loc_42B4E8  +
mov ecx [esp+24h] +
mov eax [esp+60h] +
mov dword ptr [esp] 1 +
call sub_423250  +
test eax eax +
jz loc_42B3A0  +
mov eax [esi+24h] +
mov [ebx+18h] eax +
mov eax [esi+6Ch] +
mov [ebx+30h] eax +
mov eax [ebx+2Ch] +
mov dword ptr [eax+6Ch] 0 +
mov eax [esp+18h] +
add edi 4 +
mov edx [esp+1Ch] +
mov dword ptr [esp+0Ch] 1 +
mov [esp] ebx +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_427500  +
cmp ebp edi +
mov [esp+18h] eax +
mov [esp+1Ch] edx +
ja loc_42B3FB  +
mov ebp [esp+60h] +
mov eax [ebp+0A0h] +
mov edx [eax+934h] +
mov eax [edx+4] +
mov esi 1 +
mov [esp] eax +
call sub_44E6A0  +
mov ebx [ebp+0A0h] +
mov eax [ebx+934h] +
sub ebx 0FFFFFF80h +
mov eax [eax+4] +
mov [esp] eax +
call sub_44E520  +
mov edx [esp+1Ch] +
mov [ebx+18h] eax +
mov eax [esp+18h] +
mov [esp] ebx +
mov dword ptr [esp+0Ch] 1 +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_427500  +
mov ecx [ebp+4] +
mov edi [ebp+0A0h] +
mov ecx [ecx+1B0h] +
mov ecx [ecx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
shl esi cl +
mov ebx esi +
sar ebx 1Fh +
add eax esi +
adc edx ebx +
add eax 0FFFFFFFFh +
adc edx 0FFFFFFFFh +
neg esi  +
mov ebx esi +
and esi eax +
sar ebx 1Fh +
mov eax edx +
and eax ebx +
xor edx edx +
mov [edi+18h] esi +
mov ebx [ebp+0A0h] +
mov [esp+18h] esi +
mov [esp+1Ch] eax +
mov eax [edi+34h] +
imul eax [edi+38h] +
mov esi [ebx+214h] +
mov ecx [ebx+934h] +
add eax [esp+18h] +
adc edx [esp+1Ch] +
cmp esi 1 +
mov [ecx+20h] eax +
mov [ecx+24h] edx +
jbe loc_42B6B4  +
mov edi 1 +
mov ebx [esp+2Ch] +
mov [esp+18h] esi +
jmp loc_42B61D  +
mov eax [ebp+0A0h] +
mov ecx [eax+934h] +
mov esi [ebx+edi*4] +
mov eax [ecx+4] +
mov ecx [esi] +
mov [esp] eax +
mov [esp+4] ecx +
call sub_44E530  +
mov [esi] eax +
mov eax [esp+20h] +
mov eax [eax+48h] +
test eax eax +
jz loc_42B64A  +
mov ecx [ebx+edi*4] +
mov [esp] ebp +
mov [esp+4] ecx +
call eax  +
mov eax [ebx+edi*4] +
mov edx [eax+30h] +
test edx edx +
jz loc_42B69B  +
mov esi [eax+18h] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebp +
mov [esp+8] edx +
mov [esp+4] eax +
call sub_4060C0  +
test eax eax +
jnz loc_42B3A0  +
mov eax [ebx+edi*4] +
mov eax [eax+30h] +
mov [esp+8] ebp +
mov [esp+4] esi +
mov [esp] eax +
call sub_405F60  +
cmp eax esi +
jnz loc_42B3A0  +
add edi 1 +
cmp edi [esp+18h] +
jnz loc_42B611  +
mov ebx [ebp+0A0h] +
mov ecx [ebx+934h] +
mov eax [ecx+4] +
test eax eax +
jz loc_42B70A  +
mov eax [ebx+90h] +
mov edx [ebx+94h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp] ebp +
mov [esp+4] eax +
mov [esp+8] edx +
call sub_4060C0  +
test eax eax +
jnz loc_42B3A0  +
mov eax [ebp+0A0h] +
mov eax [eax+934h] +
mov eax [eax+4] +
mov [esp] ebp +
mov [esp+4] eax +
call sub_44E5D0  +
test eax eax +
jz loc_42B3A0  +
mov eax [esp+20h] +
mov eax [eax+0A4h] +
test eax eax +
jz loc_42B730  +
mov edx [ebp+0A0h] +
mov edx [edx+934h] +
mov edx [edx+38h] +
mov [esp] ebp +
mov [esp+4] edx +
call eax  +
mov eax [esp+20h] +
mov eax [eax+174h] +
mov eax [eax+14h] +
mov [esp] ebp +
call eax  +
test eax eax +
jz loc_42B3A0  +
mov eax [ebx+934h] +
mov edx [eax+10h] +
mov eax 1 +
test edx edx +
jz loc_42B3A2  +
mov [esp] ebp +
call edx  +
jmp loc_42B3A2  +
***
mov eax [esp+60h] +
test byte ptr [eax+2Ah] 40h +
jnz loc_42B45E  +
mov edx [esp+24h] +
call sub_4228B0  +
test eax eax +
mov [esp+24h] eax +
jnz loc_42B45E  +
jmp loc_42B3A0  +
***
mov dword ptr [esp+8] offset a_bfd_elf_assig +
mov dword ptr [esp+4] 16A7h +
mov dword ptr [esp] offset a____Binutil_14 +
call sub_40C6F0  +
lea esi [esi+0] +
lea edi [edi+0] +
jmp loc_42B330  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov edx [eax] +
mov eax [edx+14h] +
mov ecx [edx+0Ch] +
test eax eax +
jnz loc_42B867  +
and ch 1 +
jz loc_42B812  +
mov eax [edx+10h] +
test eax eax +
jz loc_42B812  +
mov ecx [eax+94h] +
cmp ecx [esp+1Ch+arg_0] +
jz loc_42B843  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_42B812  +
mov ecx [eax+94h] +
cmp ecx [esp+1Ch+arg_0] +
jz loc_42B843  +
mov eax [edx+4] +
mov [esp+1Ch+var_1C] offset aBSymbolSRequir +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_18] eax +
call off_476094  +
mov [esp+1Ch+var_1C] 7 +
call sub_40C770  +
mov eax 0FFFFFFFFh +
add esp 1Ch +
retn   +
mov ecx [ecx+0A0h] +
mov eax [eax+8] +
mov ecx [ecx+934h] +
cmp eax [ecx+28h] +
jge loc_42B812  +
mov ecx [ecx+8] +
mov eax [ecx+eax*4] +
test eax eax +
jz loc_42B812  +
mov eax [eax+14h] +
mov [edx+14h] eax +
test eax eax +
jz loc_42B812  +
add esp 1Ch +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_10] +
mov ebx [esp+14h+arg_0] +
test eax eax +
jz loc_42B930  +
movzx eax byte ptr [eax] +
xor edx edx +
and eax 3 +
cmp al 2 +
setnz dl  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_42B8A6  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov eax [esp+14h+arg_8] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_42B89B  +
mov eax [esp+14h+arg_C] +
mov eax [eax+8Ch] +
test eax eax +
jz loc_42B9F5  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_42B937  +
mov ecx [esp+14h+arg_4] +
mov esi [ecx+8Ch] +
mov ecx [esi+8] +
and ecx 0FFF00000h +
or ecx [eax+8] +
test edx edx +
mov [eax+8] ecx +
jz loc_42B96A  +
mov edx [esi+8] +
and edx 80h +
jz loc_42B905  +
mov edx [esi+64h] +
or dword ptr [eax+8] 80h +
mov [eax+64h] edx +
mov eax [esp+14h+arg_4] +
mov esi [esp+14h+arg_C] +
movzx edx byte ptr [eax+19h] +
mov eax [esp+14h+arg_C] +
and edx 4 +
movzx eax byte ptr [eax+19h] +
and eax 0FFFFFFFBh +
or eax edx +
mov [esi+19h] al +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
xor edx edx +
jmp loc_42B892  +
mov ecx [esp+14h+arg_C] +
mov esi [esp+14h+arg_4] +
mov ecx [ecx+14h] +
mov esi [esi+14h] +
cmp ecx esi +
jz loc_42B9E0  +
test edx edx +
jnz loc_42B9B5  +
mov esi [esp+14h+arg_4] +
mov esi [esi+8Ch] +
mov ecx [esi+8] +
and ecx 0FFF00000h +
or ecx [eax+8] +
mov [eax+8] ecx +
mov edx [esi+78h] +
test edx edx +
jz loc_42B977  +
test byte ptr [edx+16h] 10h +
jnz loc_42B9B0  +
mov edx [esi+8] +
test dh 2 +
jz loc_42B988  +
or ch 2 +
mov [eax+8] ecx +
mov edx [esi+8] +
mov ecx [esi+7Ch] +
mov [eax+7Ch] ecx +
mov ecx [esi+74h] +
mov [eax+74h] ecx +
test byte ptr [ebx+2Ah] 10h +
jnz loc_42B8F0  +
and edx 800h +
or [eax+8] edx +
jmp loc_42B8ED  +
mov edx [esi+8] +
jmp loc_42B994  +
xor ecx esi +
and ecx 0FFF1FFFBh +
jz loc_42B9E0  +
mov ecx [esp+14h+arg_4] +
mov esi [ecx+8Ch] +
mov edx [esi+8] +
and edx 0FFF00000h +
or [eax+8] edx +
mov edx [esi+8] +
jmp loc_42B8F0  +
mov ecx [esp+14h+arg_4] +
mov esi [ecx+8Ch] +
mov ecx [esi+4] +
mov [eax+4] ecx +
jmp loc_42B8D6  +
mov [esp+14h+var_10] 1B41h +
mov [esp+14h+var_14] offset a____Binutil_14 +
mov [esp+14h+var_8] edx +
call sub_40C6C0  +
mov eax [esp+14h+arg_C] +
mov edx [esp+14h+var_8] +
mov eax [eax+8Ch] +
jmp loc_42B8C5  +
***
push ebx  +
mov eax 1 +
sub esp 28h +
mov edx [esp+30h] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_42BA40  +
add esp 28h +
pop ebx  +
retn   +
***
mov ebx [esp+38h] +
mov ecx [ebx+4] +
cmp dword ptr [ecx+4] 5 +
jnz loc_42BA36  +
mov eax [esp+34h] +
mov ebx [esp+3Ch] +
mov eax [eax+8Ch] +
mov ebx [ebx+8Ch] +
mov ecx [eax+28h] +
mov [ebx+28h] ecx +
mov ecx [eax+4] +
cmp ecx 2 +
jz loc_42BA74  +
cmp ecx 0Bh +
jnz loc_42BAA7  +
mov eax [eax+20h] +
mov [ebx+20h] eax +
mov eax [esp+3Ch] +
mov dword ptr [esp+10h] 0 +
mov [esp] edx +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
call sub_42B870  +
add esp 28h +
pop ebx  +
retn   +
***
sub ecx 6FFFFFFDh +
cmp ecx 1 +
ja loc_42BA7A  +
jmp loc_42BA74  +
***
push ebx  +
mov eax [esp+arg_0] +
mov ebx [esp+arg_4] +
mov edx [eax+64h] +
test edx edx +
jnz loc_42BADB  +
jmp loc_42BB48  +
mov edx [edx+0Ch] +
test edx edx +
jz loc_42BB48  +
mov eax [edx+8Ch] +
cmp dword ptr [eax+4] 11h +
jnz loc_42BAD4  +
mov esi [eax+7Ch] +
test esi esi +
jz loc_42BAD4  +
mov eax esi +
xor edi edi +
jmp loc_42BB0A  +
cmp [edx+3Ch] ebx +
jz loc_42BB51  +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
cmp eax esi +
jz loc_42BB27  +
test eax eax +
jz loc_42BB27  +
mov ecx [eax+3Ch] +
cmp ecx ebx +
jnz loc_42BAF4  +
mov eax [eax+8Ch] +
lea ecx [edi+4] +
cmp [edx+3Ch] ebx +
mov eax [eax+7Ch] +
cmovnz edi ecx +
cmp eax esi +
jnz loc_42BB06  +
test edi edi +
jz loc_42BAD4  +
test ebx ebx +
jz loc_42BB67  +
mov eax [edx+28h] +
test eax eax +
jnz loc_42BB3C  +
mov eax [edx+24h] +
mov [edx+28h] eax +
sub eax edi +
mov [edx+24h] eax +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_42BADB  +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
retn   +
mov ecx [ecx+8Ch] +
and dword ptr [ecx+8] 0FFFFFDFFh +
mov dword ptr [ecx+74h] 0 +
jmp loc_42BAF9  +
mov eax [edx+3Ch] +
sub [eax+24h] edi +
jmp loc_42BAD4  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 9Ch +
mov eax [esp+0B0h] +
mov edx [eax+4] +
mov eax 1 +
cmp dword ptr [edx+4] 5 +
jz loc_42BBB0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebx [esp+0B4h] +
mov edi [ebx+4] +
cmp dword ptr [edi+4] 5 +
mov ecx edi +
jnz loc_42BB9F  +
mov eax [ebx+0A0h] +
mov eax [eax+934h] +
mov eax [eax] +
test eax eax +
jz loc_42BBF6  +
mov eax [esp+0B0h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call sub_42BAC0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0B0h] +
mov eax [eax+0A0h] +
mov ebp [eax+44h] +
mov [esp+48h] eax +
test ebp ebp +
jz loc_42BBD4  +
cmp edx edi +
jz loc_42CAA8  +
mov eax [edx+1B0h] +
mov dword ptr [esp+8Ch] 0 +
mov [esp+68h] eax +
mov eax [esp+48h] +
mov eax [eax+30h] +
mov [esp+58h] eax +
mov eax [ecx+1B0h] +
mov eax [eax+10h] +
mov [esp+3Ch] eax +
mov eax [esp+0B0h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+34h] eax +
jz loc_42BC60  +
and byte ptr [eax+18h] 0BFh +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_42BC55  +
mov eax [esp+48h] +
mov ebp [eax+44h] +
mov eax [esp+58h] +
test eax eax +
jz loc_42CEA2  +
mov eax [ebp+10h] +
test eax eax +
jnz loc_42C9FA  +
mov edx ebp +
xor eax eax +
mov ecx [esp+58h] +
jmp loc_42BC93  +
mov edi [edx+10h] +
test edi edi +
jnz loc_42C9FA  +
add eax 1 +
add edx 20h +
cmp eax ecx +
jnz loc_42BC88  +
mov dword ptr [esp+64h] 0 +
xor esi esi +
mov edi ebp +
mov [esp+30h] ebp +
mov ebp esi +
jmp loc_42BCD3  +
cmp eax 1 +
jz loc_42BD34  +
cmp eax 6474E552h +
jnz loc_42BCC3  +
mov dword ptr [edi] 0 +
add ebp 1 +
add edi 20h +
cmp [esp+58h] ebp +
jbe loc_42BDE9  +
mov eax [edi] +
cmp eax 3 +
jnz loc_42BCB1  +
mov eax [esp+34h] +
test eax eax +
jz loc_42BCC3  +
mov edx [edi+0Ch] +
jmp loc_42BCEE  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_42BCC3  +
test edx edx +
jnz loc_42BCE7  +
mov esi [edi+10h] +
test esi esi +
jnz loc_42BCE7  +
mov ebx [edi+18h] +
test ebx ebx +
jnz loc_42BCE7  +
mov ecx [edi+14h] +
test ecx ecx +
jz loc_42BCE7  +
test byte ptr [eax+15h] 1 +
jz loc_42BCE7  +
mov esi [eax+24h] +
test esi esi +
mov [esp+10h] esi +
jz loc_42BCE7  +
mov esi [eax+50h] +
mov ebx [edi+8] +
cmp esi ebx +
jb loc_42BCE7  +
add esi [esp+10h] +
add ecx ebx +
cmp esi ecx +
ja loc_42BCE7  +
mov eax [eax+1Ch] +
mov [edi+0Ch] eax +
jmp loc_42BCC3  +
***
test ebp ebp +
jz loc_42BCC3  +
mov ebx [esp+30h] +
xor edx edx +
jmp loc_42BD4E  +
add edx 1 +
add ebx 20h +
cmp edx ebp +
jz loc_42BCC3  +
cmp dword ptr [ebx] 1 +
jnz loc_42BD40  +
mov eax [edi+0Ch] +
mov esi [ebx+18h] +
mov ecx [ebx+14h] +
mov [esp+10h] eax +
mov eax [ebx+0Ch] +
cmp esi ecx +
cmovnb ecx esi +
mov [esp+14h] ecx +
add ecx eax +
cmp [esp+10h] ecx +
mov [esp+18h] ecx +
jnb loc_42BD40  +
mov ecx [edi+18h] +
cmp ecx [edi+14h] +
mov [esp+28h] ecx +
cmovb ecx [edi+14h] +
mov [esp+1Ch] ecx +
add ecx [esp+10h] +
cmp eax ecx +
mov [esp+20h] ecx +
jnb loc_42BD40  +
mov ecx [edi+10h] +
mov [esp+24h] ecx +
mov ecx [ebx+10h] +
mov [esp+2Ch] ecx +
add ecx [esp+14h] +
cmp [esp+24h] ecx +
jnb loc_42BD40  +
mov ecx [esp+1Ch] +
add ecx [esp+24h] +
cmp [esp+2Ch] ecx +
jnb loc_42BD40  +
cmp [esp+10h] eax +
ja loc_42CEC0  +
mov eax [esp+18h] +
sub eax [esp+20h] +
test eax eax +
jle loc_42BDDE  +
mov ecx [esp+28h] +
add [edi+14h] eax +
add ecx eax +
mov [edi+18h] ecx +
mov dword ptr [ebx] 0 +
jmp loc_42BD40  +
***
lea eax [esp+8Ch] +
mov ebp [esp+30h] +
mov [esp+4Ch] eax +
movzx eax byte ptr [esp+64h] +
mov dword ptr [esp+74h] 0 +
mov dword ptr [esp+6Ch] 0 +
mov dword ptr [esp+50h] 0 +
add eax eax +
mov dword ptr [esp+60h] 0 +
mov [esp+5Ch] al +
mov eax [ebp+0] +
test eax eax +
mov [esp+10h] eax +
jz loc_42C080  +
mov eax [esp+0B0h] +
mov eax [eax+64h] +
test eax eax +
jz loc_42C969  +
mov edx [ebp+10h] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
jmp loc_42BEF7  +
mov ebx [eax+20h] +
cmp ebx edx +
jb loc_42BF40  +
mov ecx [eax+14h] +
mov esi ecx +
and esi 500h +
cmp esi 400h +
jz loc_42C0F3  +
mov esi [eax+24h] +
add ebx esi +
mov esi [ebp+14h] +
cmp [ebp+18h] esi +
cmovnb esi [ebp+18h] +
add esi edx +
cmp ebx esi +
ja loc_42BF40  +
test cl 1 +
jz loc_42BF40  +
mov esi [esp+10h] +
cmp esi 6474E551h +
jz loc_42BEF0  +
cmp esi 7 +
jz loc_42C119  +
cmp dword ptr [esp+10h] 1 +
jz loc_42BEC5  +
test ch 4 +
jnz loc_42BEF0  +
cmp dword ptr [esp+10h] 2 +
jz loc_42C127  +
test byte ptr [eax+18h] 40h +
jnz loc_42BEF0  +
mov edi [esp+18h] +
test edi edi +
cmovz edi eax +
cmp dword ptr [eax+3Ch] 1 +
sbb dword ptr [esp+1Ch] 0FFFFFFFFh +
mov [esp+18h] edi +
lea esi [esi+0] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_42BF6F  +
test edx edx +
jnz loc_42BE60  +
mov esi [eax+1Ch] +
mov ebx [ebp+0Ch] +
cmp esi ebx +
jb loc_42BF40  +
mov ecx [eax+14h] +
mov edi ecx +
and edi 500h +
cmp edi 400h +
jz loc_42C106  +
mov edi [eax+24h] +
add esi edi +
mov edi [ebp+14h] +
cmp [ebp+18h] edi +
cmovnb edi [ebp+18h] +
add edi ebx +
cmp esi edi +
jbe loc_42BE9B  +
lea esi [esi+0] +
cmp dword ptr [esp+10h] 4 +
jnz loc_42BEF0  +
mov ecx [eax+8Ch] +
cmp dword ptr [ecx+4] 7 +
jnz loc_42BEF0  +
mov ebx [eax+50h] +
mov ecx [ebp+8] +
cmp ebx ecx +
jb loc_42BEF0  +
add ebx [eax+24h] +
add ecx [ebp+14h] +
cmp ebx ecx +
ja loc_42BEF0  +
mov ecx [eax+14h] +
jmp loc_42BEC0  +
***
mov eax [esp+1Ch] +
lea eax ds:28h[eax*4] +
mov [esp+54h] eax +
mov eax [esp+54h] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call sub_407C00  +
test eax eax +
mov [esp+10h] eax +
jz loc_42C992  +
mov edi [esp+10h] +
mov eax [ebp+4] +
mov edx [ebp+0] +
or byte ptr [edi+20h] 1 +
mov [edi+8] eax +
mov eax [esp+18h] +
mov dword ptr [edi] 0 +
mov [edi+4] edx +
test eax eax +
jz loc_42BFCA  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_42BFE2  +
mov eax [ebp+10h] +
mov esi [esp+10h] +
mov [esi+0Ch] eax +
movzx eax byte ptr [esi+20h] +
and eax 0FFFFFFFDh +
or al [esp+5Ch] +
mov [esi+20h] al +
mov ecx [ebp+8] +
xor eax eax +
test ecx ecx +
jnz loc_42BFF8  +
mov eax [esp+48h] +
mov eax [eax+28h] +
cmp [ebp+14h] eax +
setnb al  +
mov edi [esp+10h] +
shl eax 4 +
mov ebx eax +
movzx eax byte ptr [edi+20h] +
and eax 0FFFFFFCFh +
or eax ebx +
mov [edi+20h] al +
mov eax [esp+60h] +
test eax eax +
jz loc_42C01E  +
cmp edx 1 +
jz loc_42C581  +
mov eax [esp+48h] +
mov ebx [eax+14h] +
xor eax eax +
cmp ecx ebx +
ja loc_42C040  +
mov esi [esp+48h] +
add ecx [ebp+14h] +
mov eax [esi+2Ch] +
imul eax [esi+30h] +
add eax ebx +
cmp ecx eax +
setnb al  +
mov esi [esp+10h] +
shl eax 5 +
mov ecx eax +
movzx eax byte ptr [esi+20h] +
and eax 0FFFFFFDFh +
or eax ecx +
cmp edx 1 +
mov [esi+20h] al +
jz loc_42C576  +
cmp dword ptr [esp+1Ch] 0 +
jnz loc_42C16A  +
mov eax [esp+10h] +
mov ebx [esp+4Ch] +
mov dword ptr [eax+24h] 0 +
mov [esp+4Ch] eax +
mov [ebx] eax +
nop   +
add dword ptr [esp+50h] 1 +
add ebp 20h +
mov eax [esp+58h] +
cmp [esp+50h] eax +
jnz loc_42BE23  +
mov edi [esp+0B4h] +
mov eax [esp+8Ch] +
mov edx [edi+0A0h] +
mov edx [edx+934h] +
mov [edx] eax +
mov edx [esp+6Ch] +
test edx edx +
jz loc_42BBD4  +
test eax eax +
jz loc_42BBD4  +
xor edx edx +
mov eax [eax] +
add edx 1 +
test eax eax +
jnz loc_42C0C8  +
mov eax [esp+74h] +
cmp eax edx +
jnb loc_42BBD4  +
sub edx eax +
mov eax [esp+48h] +
imul edx [eax+2Ch] +
mov eax [esp+6Ch] +
sub [eax+0Ch] edx +
jmp loc_42BBD4  +
***
xor si si +
cmp dword ptr [esp+10h] 7 +
jnz loc_42BE85  +
jmp loc_42BE82  +
***
xor di di +
cmp dword ptr [esp+10h] 7 +
jnz loc_42BF23  +
jmp loc_42BF20  +
***
and ch 4 +
jnz loc_42BED0  +
jmp loc_42BEF0  +
***
and ecx 500h +
cmp ecx 400h +
jz loc_42C140  +
mov ecx [eax+24h] +
test ecx ecx +
jnz loc_42BED0  +
test edx edx +
jz loc_42C958  +
cmp [eax+20h] edx +
jnz loc_42BED0  +
mov esi [eax] +
mov edi offset a_dynamic_1 +
mov ecx 9 +
cmps   +
jnz loc_42BEF0  +
jmp loc_42BED0  +
***
mov eax [esp+1Ch] +
mov dword ptr [esp+4] 4 +
mov [esp] eax +
call sub_40F000  +
test eax eax +
mov [esp+14h] eax +
jz loc_42C992  +
mov eax [esp+0B0h] +
mov edx [eax+64h] +
test edx edx +
jz loc_42C1B6  +
cmp [esp+18h] edx +
mov eax [esp+18h] +
jnz loc_42C1AF  +
jmp loc_42C5A9  +
cmp eax edx +
jz loc_42C5A9  +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_42C1A7  +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+30h] 1 +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+4] 192Dh +
mov dword ptr [esp] offset a____Binutil_14 +
call sub_40C6C0  +
mov eax [esp+24h] +
cmp [esp+1Ch] eax +
jz loc_42C999  +
mov ebx [esp+30h] +
mov eax [esp+10h] +
mov edx [esp+28h] +
test ebx ebx +
cmovnz edx [esp+34h] +
mov [eax+0Ch] edx +
movzx eax byte ptr [eax+20h] +
test al 10h +
jz loc_42C22E  +
mov edi [esp+48h] +
mov ecx [edi+28h] +
cmp edx ecx +
jb loc_42CA75  +
mov edi [esp+10h] +
sub edx ecx +
mov [edi+0Ch] edx +
test al 20h +
jz loc_42C25F  +
mov eax [esp+10h] +
mov edi [esp+48h] +
mov ecx [eax+0Ch] +
mov edx [edi+2Ch] +
mov eax [edi+30h] +
imul edx eax +
cmp ecx edx +
jb loc_42CA84  +
mov edi [esp+10h] +
sub ecx edx +
mov [esp+74h] eax +
mov [edi+0Ch] ecx +
mov [esp+6Ch] edi +
mov dword ptr [esp+38h] 0 +
mov eax [esp+10h] +
xor ecx ecx +
mov dword ptr [esp+24h] 0 +
mov ebx ecx +
mov dword ptr [esp+18h] 1 +
mov dword ptr [eax+24h] 0 +
mov eax [esp+3Ch] +
lea esi [eax-1] +
neg eax  +
mov [esp+40h] esi +
mov [esp+34h] eax +
jmp loc_42C364  +
mov ecx [esi+14h] +
and ecx 500h +
cmp ecx 400h +
jz loc_42C460  +
mov ecx [esi+24h] +
add ecx eax +
mov [esp+20h] ecx +
mov ecx [ebp+14h] +
cmp [ebp+18h] ecx +
cmovnb ecx [ebp+18h] +
add ecx edx +
cmp [esp+20h] ecx +
ja loc_42C38C  +
mov ecx [esp+10h] +
mov ecx [ecx+24h] +
test ecx ecx +
mov [esp+20h] ecx +
mov ecx [esp+10h] +
jnz loc_42C475  +
movzx ecx byte ptr [ecx+20h] +
mov dword ptr [esp+28h] 0 +
mov [esp+2Ch] cl +
and ecx 10h +
jz loc_42C30B  +
mov ecx [esp+48h] +
mov ecx [ecx+28h] +
mov [esp+28h] ecx +
add edx [esp+28h] +
mov [esp+28h] edx +
xor edx edx +
test byte ptr [esp+2Ch] 20h +
jz loc_42C327  +
mov ecx [esp+48h] +
mov edx [ecx+2Ch] +
imul edx [ecx+30h] +
add edx [esp+28h] +
cmp eax edx +
jnz loc_42CE86  +
mov ecx [esp+20h] +
mov edx [esp+10h] +
add dword ptr [esp+38h] 1 +
mov eax ecx +
add eax 1 +
mov [edx+24h] eax +
mov eax [esp+14h] +
mov [edx+ecx*4+28h] esi +
mov dword ptr [eax+ebx*4] 0 +
or byte ptr [edi+18h] 40h +
add ebx 1 +
cmp [esp+1Ch] ebx +
jbe loc_42C3AF  +
mov eax [esp+14h] +
mov edi [eax+ebx*4] +
test edi edi +
jz loc_42C35B  +
mov esi [edi+3Ch] +
test esi esi +
jz loc_42C4E0  +
mov edx [esp+10h] +
mov eax [esi+20h] +
mov edx [edx+0Ch] +
cmp eax edx +
jnb loc_42C2A0  +
cmp dword ptr [ebp+0] 4 +
jz loc_42C3F0  +
mov esi [esp+18h] +
test esi esi +
jz loc_42C35B  +
add ebx 1 +
cmp [esp+1Ch] ebx +
mov [esp+24h] eax +
mov dword ptr [esp+18h] 0 +
ja loc_42C364  +
mov eax [esp+10h] +
mov ecx [eax+24h] +
test ecx ecx +
jz loc_42C500  +
mov eax [esp+10h] +
mov edi [esp+4Ch] +
mov [esp+4Ch] eax +
mov [edi] eax +
mov eax [esp+38h] +
cmp [esp+1Ch] eax +
ja loc_42C520  +
mov eax [esp+14h] +
mov [esp] eax +
call free  +
jmp loc_42C080  +
***
mov ecx [edi+8Ch] +
cmp dword ptr [ecx+4] 7 +
jnz loc_42C392  +
mov ecx [edi+50h] +
mov [esp+20h] ecx +
mov ecx [ebp+8] +
cmp [esp+20h] ecx +
mov [esp+28h] ecx +
jb loc_42C392  +
mov ecx [esp+20h] +
add ecx [edi+24h] +
mov [esp+20h] ecx +
mov ecx [esp+28h] +
add ecx [ebp+14h] +
cmp [esp+20h] ecx +
ja loc_42C392  +
mov ecx [esp+0B0h] +
movzx ecx byte ptr [ecx+28h] +
and ecx 7 +
cmp cl 3 +
jnz loc_42C392  +
mov ecx [edi+1Ch] +
test ecx ecx +
jnz loc_42C392  +
mov ecx [edi+20h] +
test ecx ecx +
jnz loc_42C392  +
jmp loc_42C2D4  +
***
xor cx cx +
cmp dword ptr [ebp+0] 7 +
jnz loc_42C2B8  +
lea esi [esi+0] +
jmp loc_42C2B5  +
***
mov edx [esp+20h] +
mov dword ptr [esp+2Ch] 0FFFFFFFFh +
mov edx [ecx+edx*4+24h] +
mov ecx [edx+24h] +
mov edx [edx+20h] +
mov [esp+28h] ecx +
add [esp+28h] edx +
mov edx [esp+40h] +
add edx [esp+28h] +
jb loc_42C4A5  +
and edx [esp+34h] +
mov [esp+2Ch] edx +
mov edx [esp+3Ch] +
mov ecx [esp+34h] +
lea edx [edx+eax-1] +
and ecx edx +
mov [esp+30h] edx +
mov edx 0FFFFFFFFh +
cmp eax [esp+30h] +
cmovbe edx ecx +
cmp [esp+2Ch] edx +
jb loc_42C392  +
cmp eax [esp+28h] +
jnb loc_42C333  +
jmp loc_42C392  +
***
mov dword ptr [esp+4] 1991h +
mov dword ptr [esp] offset a____Binutil_14 +
call sub_40C6C0  +
jmp loc_42C37A  +
***
mov dword ptr [esp+4] 19C8h +
mov dword ptr [esp] offset a____Binutil_14 +
call sub_40C6C0  +
jmp loc_42C3BE  +
***
mov eax [esp+54h] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call sub_407C00  +
test eax eax +
mov [esp+10h] eax +
jz loc_42C986  +
mov ebx [esp+10h] +
mov eax [ebp+0] +
mov edi [esp+24h] +
mov dword ptr [ebx] 0 +
mov [ebx+4] eax +
mov eax [ebp+4] +
mov [ebx+0Ch] edi +
mov [ebx+8] eax +
movzx eax byte ptr [ebx+20h] +
or eax 1 +
and eax 0FFFFFFCDh +
or al [esp+5Ch] +
mov [ebx+20h] al +
jmp loc_42C267  +
***
test al 20h +
cmovz edx [esp+60h] +
mov [esp+60h] edx +
cmp dword ptr [esp+1Ch] 0 +
jnz loc_42C16A  +
mov eax [esp+0B0h] +
mov dword ptr [esp] offset aBWarningEmptyL +
mov [esp+4] eax +
call off_476094  +
jmp loc_42C069  +
***
mov eax [ebp+10h] +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+70h] 1 +
mov dword ptr [esp+28h] 0 +
mov [esp+18h] eax +
mov eax [ebp+0] +
mov dword ptr [esp+30h] 1 +
mov dword ptr [esp+24h] 0 +
mov dword ptr [esp+2Ch] 0 +
mov [esp+20h] eax +
mov eax [esp+18h] +
test eax eax +
jz loc_42C830  +
mov eax [edx+20h] +
cmp [esp+18h] eax +
ja loc_42C868  +
mov ecx [edx+14h] +
mov ebx ecx +
and ebx 500h +
cmp ebx 400h +
jz loc_42C8AB  +
mov esi [edx+24h] +
add esi eax +
mov eax [ebp+14h] +
cmp [ebp+18h] eax +
mov ebx eax +
cmovnb ebx [ebp+18h] +
add ebx [esp+18h] +
cmp esi ebx +
ja loc_42C868  +
test cl 1 +
jz loc_42C868  +
mov esi [esp+20h] +
cmp esi 6474E551h +
jz loc_42C7C0  +
cmp esi 7 +
jz loc_42C8C9  +
cmp dword ptr [esp+20h] 1 +
jz loc_42C671  +
test ch 4 +
jnz loc_42C7C0  +
cmp dword ptr [esp+20h] 2 +
jz loc_42C7E0  +
xor edi edi +
test byte ptr [edx+18h] 40h +
jnz loc_42C7C0  +
mov ecx [edx+3Ch] +
test ecx ecx +
jz loc_42C7C0  +
mov ebx [esp+2Ch] +
lea esi [ebx+1] +
mov [esp+38h] esi +
mov esi [esp+14h] +
mov [esi+ebx*4] edx +
mov ebx [esp+64h] +
test ebx ebx +
jnz loc_42C716  +
mov ebx [ebp+0Ch] +
test ebx ebx +
mov [esp+2Ch] ebx +
jz loc_42C716  +
mov esi [esp+68h] +
test byte ptr [esi+1AEh] 10h +
jnz loc_42C716  +
mov esi [esp+24h] +
test esi esi +
jnz loc_42C716  +
mov ebx [ecx+20h] +
test ebx ebx +
jz loc_42C716  +
mov ebx [esp+10h] +
mov esi [ecx+1Ch] +
movzx ebx byte ptr [ebx+20h] +
mov [esp+78h] esi +
mov [esp+40h] bl +
xor ebx ebx +
test byte ptr [esp+40h] 10h +
jz loc_42C6EC  +
mov esi [esp+48h] +
mov ebx [esi+28h] +
add ebx [esp+2Ch] +
mov [esp+7Ch] ebx +
xor ebx ebx +
test byte ptr [esp+40h] 20h +
jz loc_42C708  +
mov esi [esp+48h] +
mov ebx [esi+2Ch] +
imul ebx [esi+30h] +
add ebx [esp+7Ch] +
cmp [esp+78h] ebx +
jz loc_42CEE6  +
mov esi [ecx+20h] +
mov ebx esi +
mov [esp+2Ch] esi +
mov esi [esp+10h] +
mov esi [esi+0Ch] +
cmp ebx esi +
jb loc_42C8DC  +
mov ebx [ecx+14h] +
and ebx 500h +
cmp ebx 400h +
jz loc_42CA91  +
mov ebx [ecx+24h] +
mov [esp+40h] ebx +
mov ebx [esp+40h] +
add ebx [esp+2Ch] +
cmp [ebp+18h] eax +
mov [esp+40h] ebx +
mov ebx eax +
cmovnb ebx [ebp+18h] +
add ebx esi +
cmp [esp+40h] ebx +
ja loc_42C8DC  +
mov eax [esp+30h] +
test eax eax +
jnz loc_42C784  +
mov edi [esp+2Ch] +
mov eax [esp+28h] +
cmp edi eax +
cmovbe eax edi +
mov [esp+2Ch] eax +
mov eax [esp+24h] +
mov edi [esp+10h] +
mov dword ptr [esp+30h] 0 +
mov [edi+eax*4+28h] ecx +
mov edi [esp+2Ch] +
add eax 1 +
mov [esp+24h] eax +
mov [esp+28h] edi +
mov eax [esp+38h] +
cmp [esp+1Ch] eax +
jz loc_42C1EA  +
mov [esp+2Ch] eax +
lea esi [esi+0] +
mov edx [edx+0Ch] +
test edx edx +
jnz loc_42C5E7  +
mov eax [esp+2Ch] +
cmp [esp+1Ch] eax +
jz loc_42C1EA  +
jmp loc_42C1D6  +
***
and ecx 500h +
cmp ecx 400h +
jz loc_42C7F9  +
mov edi [edx+24h] +
test edi edi +
jnz loc_42C671  +
mov esi [esp+18h] +
xor edi edi +
test esi esi +
jz loc_42CA07  +
mov esi [esp+18h] +
cmp esi [edx+20h] +
jnz loc_42C673  +
mov esi [edx] +
mov edi offset a_dynamic_1 +
mov ecx 9 +
cmps   +
jnz loc_42C7C0  +
jmp loc_42C671  +
***
mov eax [edx+1Ch] +
mov ebx [ebp+0Ch] +
cmp eax ebx +
jb loc_42C868  +
mov ecx [edx+14h] +
mov esi ecx +
and esi 500h +
cmp esi 400h +
jz loc_42C8BD  +
mov esi [edx+24h] +
add esi eax +
mov eax [ebp+14h] +
cmp [ebp+18h] eax +
mov edi eax +
cmovnb edi [ebp+18h] +
add ebx edi +
cmp esi ebx +
jbe loc_42C634  +
cmp dword ptr [esp+20h] 4 +
jnz loc_42C7C0  +
mov eax [edx+8Ch] +
cmp dword ptr [eax+4] 7 +
jnz loc_42C7C0  +
mov eax [edx+50h] +
mov ecx [ebp+8] +
cmp eax ecx +
jb loc_42C7C0  +
add eax [edx+24h] +
mov ebx eax +
mov eax [ebp+14h] +
add ecx eax +
cmp ebx ecx +
ja loc_42C7C0  +
mov ecx [edx+14h] +
jmp loc_42C65D  +
***
xor esi esi +
cmp dword ptr [esp+20h] 7 +
jnz loc_42C61A  +
jmp loc_42C617  +
***
xor si si +
cmp dword ptr [esp+20h] 7 +
jnz loc_42C850  +
jmp loc_42C84D  +
***
and ch 4 +
jz loc_42C7C0  +
mov edi 1 +
jmp loc_42C673  +
***
cmp dword ptr [esp+20h] 4 +
jz loc_42CA18  +
mov esi [esp+68h] +
test byte ptr [esi+1AEh] 10h +
jz loc_42C937  +
mov ebx [ebp+0Ch] +
mov esi [ecx+1Ch] +
mov [esp+78h] ebx +
cmp esi ebx +
jb loc_42C937  +
mov ebx [ecx+14h] +
and ebx 500h +
cmp ebx 400h +
jz loc_42CDD1  +
mov edi [ecx+24h] +
mov [esp+40h] edi +
mov ebx [esp+40h] +
add ebx esi +
cmp [ebp+18h] eax +
cmovnb eax [ebp+18h] +
add eax [esp+78h] +
cmp ebx eax +
jbe loc_42C76B  +
mov edi [esp+70h] +
test edi edi +
jz loc_42C7A7  +
mov eax [esp+2Ch] +
mov dword ptr [esp+70h] 0 +
mov [esp+34h] eax +
jmp loc_42C7A7  +
***
mov edi [eax+1Ch] +
cmp [ebp+0Ch] edi +
jnz loc_42BED0  +
jmp loc_42C151  +
***
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+54h] 28h +
mov dword ptr [esp+1Ch] 0 +
jmp loc_42BF7E  +
***
mov eax [esp+14h] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_42BB9F  +
***
mov eax [esp+10h] +
mov edi [esp+1Ch] +
mov esi [esp+64h] +
mov [eax+24h] edi +
mov edi [esp+4Ch] +
test esi esi +
mov [esp+4Ch] eax +
mov [edi] eax +
jz loc_42C3DA  +
mov eax [esp+68h] +
test byte ptr [eax+1AEh] 10h +
jnz loc_42C3DA  +
mov edi [esp+4Ch] +
mov eax [edi+0Ch] +
cmp eax [esp+28h] +
jz loc_42C3DA  +
test byte ptr [edi+20h] 30h +
jnz loc_42C3DA  +
mov edi [esp+28h] +
sub edi eax +
mov eax edi +
mov edi [esp+4Ch] +
mov [edi+10h] eax +
jmp loc_42C3DA  +
***
mov dword ptr [esp+64h] 1 +
jmp loc_42BCA5  +
***
mov esi [edx+1Ch] +
cmp [ebp+0Ch] esi +
jnz loc_42C673  +
jmp loc_42C814  +
***
mov ebx [edx+8Ch] +
cmp dword ptr [ebx+4] 7 +
jnz loc_42C8E7  +
mov esi [edx+50h] +
mov ebx [ebp+8] +
cmp esi ebx +
jb loc_42C8E7  +
add esi [edx+24h] +
add ebx eax +
cmp esi ebx +
ja loc_42C8E7  +
mov ebx [esp+0B0h] +
movzx ebx byte ptr [ebx+28h] +
and ebx 7 +
cmp bl 3 +
jnz loc_42C8E7  +
cmp dword ptr [edx+1Ch] 0 +
jnz loc_42C8E7  +
cmp dword ptr [edx+20h] 0 +
jz loc_42C76B  +
nop   +
jmp loc_42C8E7  +
***
mov edi [esp+10h] +
and eax 0FFFFFFCFh +
mov [edi+20h] al +
jmp loc_42C22E  +
***
mov eax [esp+10h] +
and byte ptr [eax+20h] 0DFh +
jmp loc_42C25F  +
***
mov ebx edi +
test bl bl +
mov dword ptr [esp+40h] 0 +
jz loc_42C74A  +
jmp loc_42C743  +
***
mov eax [edi+1B0h] +
test byte ptr [eax+1AEh] 10h +
jz loc_42CAFF  +
mov eax [esp+48h] +
mov eax [eax+30h] +
mov [esp+20h] eax +
cmp dword ptr [esp+20h] 0 +
jz loc_42CF1C  +
xor esi esi +
xor ebx ebx +
jmp loc_42CAE3  +
add esi 1 +
add ebp 20h +
cmp esi [esp+20h] +
jz loc_42CDE8  +
cmp dword ptr [ebp+0] 1 +
jnz loc_42CAD3  +
mov eax [ebp+1Ch] +
cmp eax ebx +
jbe loc_42CAD3  +
cmp eax 40000000h +
ja loc_42CE18  +
mov ebx eax +
jmp loc_42CAD3  +
***
mov eax [esp+0B4h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+30h] eax +
jz loc_42CB1C  +
and byte ptr [eax+18h] 0BFh +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_42CB11  +
mov eax [esp+48h] +
mov dword ptr [esp+34h] 0 +
mov eax [eax+30h] +
test eax eax +
mov [esp+20h] eax +
jz loc_42CDAD  +
mov [esp+18h] edi +
mov edi ebp +
mov [esp+14h] ebp +
mov eax [edi+10h] +
test eax eax +
jnz loc_42CB5C  +
cmp dword ptr [edi+18h] 0 +
jnz loc_42CB5C  +
mov eax [edi] +
sub eax 2 +
cmp eax 1 +
jbe loc_42CF23  +
mov eax [esp+0B0h] +
mov esi [eax+64h] +
test esi esi +
jz loc_42CD8F  +
mov eax [edi] +
mov [esp+10h] edi +
lea ebx [eax-6474E550h] +
mov [esp+24h] eax +
mov [esp+3Ch] ebx +
lea ebx [eax-1] +
sub eax 6 +
mov [esp+40h] ebx +
mov [esp+38h] eax +
jmp loc_42CCB6  +
cmp dword ptr [esp+38h] 1 +
jbe loc_42CCAB  +
and eax 2 +
mov [esp+28h] eax +
jnz loc_42CBBF  +
cmp dword ptr [esp+3Ch] 2 +
jbe loc_42CCAB  +
cmp dword ptr [esp+40h] 1 +
jbe loc_42CCAB  +
mov eax [ebx+4] +
cmp eax 8 +
mov [esp+2Ch] eax +
jz loc_42CC11  +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov edi eax +
mov eax [esp+10h] +
mov ebp edx +
mov eax [eax+8] +
cmp eax edi +
ja loc_42CCAB  +
xor edx edx +
sub edi eax +
mov eax edi +
mov edi [ebx+18h] +
sbb ebp edx +
mov edx ebp +
xor ebp ebp +
add eax edi +
mov edi [esp+10h] +
adc edx ebp +
cmp edx 0 +
mov edi [edi+14h] +
jg loc_42CCAB  +
jl loc_42CC11  +
cmp eax edi +
ja loc_42CCAB  +
mov ebp [esp+28h] +
test ebp ebp +
jz loc_42CC4E  +
mov eax [esp+10h] +
mov edx [ebx+0Ch] +
mov eax [eax+0Ch] +
cmp edx eax +
jb loc_42CCAB  +
mov edi [esp+1Ch] +
sub edx eax +
test edi edi +
jz loc_42CC40  +
cmp dword ptr [esp+2Ch] 8 +
jz loc_42CE72  +
mov eax [ebx+18h] +
mov edi [esp+10h] +
add eax edx +
cmp eax [edi+18h] +
ja loc_42CCAB  +
mov eax [esp+10h] +
cmp dword ptr [eax] 2 +
jz loc_42CD01  +
test ecx ecx +
jz loc_42CF23  +
mov eax [ecx+14h] +
cmp [esi+14h] eax +
jnz loc_42CF23  +
mov eax [ecx+20h] +
cmp [esi+20h] eax +
jnz loc_42CF23  +
mov eax [ecx+1Ch] +
cmp [esi+1Ch] eax +
jnz loc_42CF23  +
mov eax [ecx+24h] +
cmp [esi+24h] eax +
jnz loc_42CF23  +
mov eax [ecx+28h] +
cmp [esi+28h] eax +
jnz loc_42CF23  +
mov eax [ecx+40h] +
cmp [esi+40h] eax +
jnz loc_42CF23  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_42CD8B  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_42CCC1  +
or byte ptr [ecx+18h] 40h +
mov ebx [esi+8Ch] +
mov eax [ebx+8] +
mov ebp eax +
and ebp 400h +
mov [esp+1Ch] ebp +
jz loc_42CB95  +
cmp dword ptr [esp+24h] 7 +
jz loc_42CBA0  +
cmp dword ptr [esp+24h] 6474E552h +
jz loc_42CBA0  +
cmp dword ptr [esp+24h] 1 +
jnz loc_42CCAB  +
jmp loc_42CBA0  +
***
mov edx [ebx+18h] +
test edx edx +
jnz loc_42CC5B  +
mov eax [eax+18h] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_42CC5B  +
cmp dword ptr [esp+2Ch] 8 +
jz loc_42CD5D  +
mov eax [ebx+10h] +
mov edx [ebx+14h] +
mov edi eax +
mov eax [esp+10h] +
mov ebp edx +
mov eax [eax+8] +
cmp eax edi +
jnb loc_42CCAB  +
xor edx edx +
sub edi eax +
mov eax edi +
mov edi [esp+10h] +
sbb ebp edx +
cmp ebp 0 +
mov edi [edi+14h] +
jg loc_42CCAB  +
jl loc_42CD5D  +
cmp eax edi +
jnb loc_42CCAB  +
cmp dword ptr [esp+28h] 0 +
jz loc_42CC5B  +
mov eax [esp+10h] +
mov edx [ebx+0Ch] +
mov eax [eax+0Ch] +
cmp edx eax +
jbe loc_42CCAB  +
sub edx eax +
cmp [esp+1Ch] edx +
jbe loc_42CCAB  +
jmp loc_42CC5B  +
***
mov edi [esp+10h] +
add dword ptr [esp+34h] 1 +
add edi 20h +
mov eax [esp+20h] +
cmp [esp+34h] eax +
jnz loc_42CB41  +
mov ebp [esp+14h] +
mov edi [esp+18h] +
mov eax [esp+30h] +
test eax eax +
jz loc_42CEF6  +
movzx edx byte ptr [eax+18h] +
test dl 40h +
jz loc_42CAC2  +
and edx 0FFFFFFBFh +
mov [eax+18h] dl +
mov eax [eax+0Ch] +
jmp loc_42CDB1  +
***
mov ebx edi +
test bl bl +
mov dword ptr [esp+40h] 0 +
jz loc_42C91E  +
jmp loc_42C917  +
***
mov eax [esp+0B4h] +
mov edi [eax+4] +
mov eax [edi+1B0h] +
mov ecx edi +
cmp ebx [eax+10h] +
jnz loc_42CE41  +
mov eax [esp+0B0h] +
mov edx [eax+4] +
mov eax [eax+0A0h] +
mov [esp+48h] eax +
jmp loc_42BC16  +
***
mov [esp+8] eax +
mov eax [esp+0B0h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp] offset aBWarningSegmen +
mov [esp+4] eax +
call off_476094  +
jmp loc_42CAD3  +
***
mov eax [edi] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_40D170  +
mov eax [esp+0B0h] +
mov edx [eax+4] +
mov eax [eax+0A0h] +
mov [esp+48h] eax +
mov eax [esp+0B4h] +
mov ecx [eax+4] +
jmp loc_42BC16  +
***
mov edi [esp+10h] +
xor eax eax +
cmp dword ptr [edi] 7 +
jnz loc_42CC43  +
jmp loc_42CC40  +
***
mov dword ptr [esp+8] offset aRewrite_elf_pr +
mov dword ptr [esp+4] 19A1h +
mov dword ptr [esp] offset a____Binutil_14 +
call sub_40C6F0  +
mov eax [esp+0B4h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax] 0 +
jmp loc_42BBD4  +
***
mov eax [esp+20h] +
sub eax [esp+18h] +
test eax eax +
jle loc_42CED5  +
add [ebx+14h] eax +
lea edx [eax+esi] +
mov [ebx+18h] edx +
mov dword ptr [edi] 0 +
xor ebp ebp +
mov edi [esp+30h] +
jmp loc_42BCC3  +
***
mov esi [esp+10h] +
mov ebx [esp+2Ch] +
mov [esi+0Ch] ebx +
jmp loc_42C716  +
***
mov dword ptr [esp+8Ch] 0 +
cmp eax [esp+20h] +
jz loc_42D44D  +
mov edx eax +
shl edx 5 +
cmp dword ptr [ebp+edx+10h] 0 +
jnz loc_42CF30  +
add eax 1 +
jmp loc_42CF01  +
***
xor ebx ebx +
jmp loc_42CDF2  +
***
mov ebp [esp+14h] +
mov edi [esp+18h] +
jmp loc_42CAC2  +
***
mov eax 1 +
lea edi [esp+8Ch] +
add eax eax +
mov [esp+38h] edi +
mov edi ebp +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+3Ch] 0 +
mov [esp+60h] al +
mov eax [esp+20h] +
cmp [esp+3Ch] eax +
jz loc_42D42C  +
mov eax [esp+0B0h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+14h] eax +
jz loc_42D111  +
mov ebp [edi] +
mov [esp+10h] eax +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+14h] 0 +
lea eax [ebp-6474E550h] +
mov [esp+30h] eax +
lea eax [ebp-1] +
mov [esp+34h] eax +
lea eax [ebp-6] +
mov [esp+40h] eax +
jmp loc_42CFD1  +
cmp ebp 7 +
jz loc_42CFF3  +
cmp ebp 6474E552h +
jz loc_42CFF3  +
cmp ebp 1 +
jz loc_42CFF3  +
mov eax [esp+10h] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+10h] eax +
jz loc_42D454  +
mov eax [esp+10h] +
mov esi [eax+8Ch] +
mov eax [esi+8] +
mov ebx eax +
and ebx 400h +
mov [esp+2Ch] ebx +
jnz loc_42CFAC  +
cmp dword ptr [esp+40h] 1 +
jbe loc_42CFBE  +
and eax 2 +
mov [esp+18h] eax +
jnz loc_42D00A  +
cmp dword ptr [esp+30h] 2 +
jbe loc_42CFBE  +
cmp dword ptr [esp+34h] 1 +
jbe loc_42CFBE  +
mov eax [esi+4] +
cmp eax 8 +
mov [esp+24h] eax +
jz loc_42D048  +
mov ecx [esi+10h] +
mov eax [edi+8] +
mov ebx [esi+14h] +
cmp eax ecx +
ja loc_42CFBE  +
xor edx edx +
sub ecx eax +
mov eax ecx +
mov ecx [esi+18h] +
sbb ebx edx +
mov edx ebx +
xor ebx ebx +
add eax ecx +
mov ecx [edi+14h] +
adc edx ebx +
cmp edx 0 +
jg loc_42CFBE  +
jl loc_42D048  +
cmp eax ecx +
ja loc_42CFBE  +
cmp dword ptr [esp+18h] 0 +
lea esi [esi+0] +
jz loc_42D07E  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jb loc_42CFBE  +
sub edx eax +
cmp dword ptr [esp+2Ch] 0 +
jz loc_42D070  +
cmp dword ptr [esp+24h] 8 +
jz loc_42D09C  +
mov eax [esi+18h] +
add eax edx +
cmp eax [edi+18h] +
ja loc_42CFBE  +
cmp dword ptr [edi] 2 +
jz loc_42D0A5  +
mov eax [esp+14h] +
test eax eax +
cmovz eax [esp+10h] +
add dword ptr [esp+28h] 1 +
mov [esp+14h] eax +
jmp loc_42CFBE  +
***
xor eax eax +
cmp dword ptr [edi] 7 +
jnz loc_42D073  +
jmp loc_42D070  +
***
cmp dword ptr [esi+18h] 0 +
jnz loc_42D083  +
mov eax [edi+18h] +
test eax eax +
mov [esp+2Ch] eax +
jz loc_42D083  +
cmp dword ptr [esp+24h] 8 +
jz loc_42D0EA  +
mov ecx [esi+10h] +
mov eax [edi+8] +
mov ebx [esi+14h] +
cmp eax ecx +
jnb loc_42CFBE  +
xor edx edx +
sub ecx eax +
mov eax [edi+14h] +
sbb ebx edx +
cmp ebx 0 +
jg loc_42CFBE  +
jl loc_42D0EA  +
cmp ecx eax +
jnb loc_42CFBE  +
cmp dword ptr [esp+18h] 0 +
nop   +
jz loc_42D083  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jbe loc_42CFBE  +
sub edx eax +
cmp [esp+2Ch] edx +
jbe loc_42CFBE  +
jmp loc_42D083  +
***
mov dword ptr [esp+24h] 0 +
mov eax 2Ch +
mov [esp+4] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call sub_407C00  +
test eax eax +
mov ebp eax +
jz loc_42C992  +
mov ebx [edi] +
mov dword ptr [eax] 0 +
mov edx [edi+1Ch] +
mov esi [edi+10h] +
mov [eax+4] ebx +
mov eax [edi+4] +
mov [ebp+14h] edx +
mov [esp+2Ch] esi +
mov [ebp+0Ch] esi +
mov [ebp+8] eax +
movzx eax byte ptr [ebp+20h] +
mov dword ptr [ebp+10h] 0 +
or eax 1 +
and eax 0FFFFFFFDh +
or eax [esp+60h] +
mov edx eax +
or edx 4 +
mov [ebp+20h] dl +
lea edx [ebx-6474E551h] +
cmp edx 1 +
ja loc_42D190  +
mov edx [edi+18h] +
or eax 0Ch +
mov [ebp+20h] al +
mov [ebp+18h] edx +
mov eax [edi+8] +
mov esi eax +
mov [esp+10h] eax +
xor eax eax +
test esi esi +
jnz loc_42D1AF  +
mov eax [esp+48h] +
mov eax [eax+28h] +
cmp [edi+14h] eax +
setnb al  +
movzx eax al +
mov edx eax +
movzx eax byte ptr [ebp+20h] +
shl edx 4 +
and eax 0FFFFFFCFh +
or eax edx +
cmp dword ptr [esp+1Ch] 0 +
mov [ebp+20h] al +
jz loc_42D1D0  +
cmp ebx 1 +
jz loc_42D474  +
mov eax [esp+48h] +
mov edx [eax+14h] +
xor eax eax +
cmp [esp+10h] edx +
ja loc_42D1FB  +
mov esi [esp+48h] +
mov ecx [esp+10h] +
add ecx [edi+14h] +
mov eax [esi+2Ch] +
imul eax [esi+30h] +
add eax edx +
cmp ecx eax +
setnb al  +
movzx eax al +
mov edx eax +
movzx eax byte ptr [ebp+20h] +
shl edx 5 +
and eax 0FFFFFFDFh +
or eax edx +
cmp ebx 1 +
mov [ebp+20h] al +
jnz loc_42D21E  +
test al 20h +
mov eax [esp+1Ch] +
cmovnz eax ebx +
mov [esp+1Ch] eax +
cmp dword ptr [esp+24h] 0 +
jz loc_42D481  +
mov eax [esp+14h] +
test eax eax +
jz loc_42D481  +
mov esi [esp+10h] +
xor ecx ecx +
mov [esp+28h] ebp +
mov ebp eax +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+44h] 0 +
mov [esp+40h] esi +
lea esi [ebx-6474E550h] +
mov [esp+54h] esi +
lea esi [ebx-1] +
mov [esp+58h] esi +
lea esi [ebx-6] +
mov [esp+5Ch] esi +
mov [esp+18h] ebx +
mov [esp+4Ch] ecx +
jmp loc_42D29A  +
cmp dword ptr [esp+18h] 7 +
jz loc_42D2B8  +
cmp dword ptr [esp+18h] 6474E552h +
jz loc_42D2B8  +
cmp dword ptr [esp+18h] 1 +
jz loc_42D2B8  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jz loc_42D4AA  +
mov esi [ebp+8Ch] +
mov eax [esi+8] +
mov ebx eax +
and ebx 400h +
mov [esp+50h] ebx +
jnz loc_42D277  +
cmp dword ptr [esp+5Ch] 1 +
jbe loc_42D28F  +
and eax 2 +
mov [esp+30h] eax +
jnz loc_42D2CF  +
cmp dword ptr [esp+54h] 2 +
jbe loc_42D28F  +
cmp dword ptr [esp+58h] 1 +
jbe loc_42D28F  +
mov eax [esi+4] +
cmp eax 8 +
mov [esp+34h] eax +
jz loc_42D306  +
mov eax [esi+10h] +
cmp [esp+10h] eax +
mov edx [esi+14h] +
ja loc_42D28F  +
mov ecx [esi+18h] +
sub eax [esp+40h] +
sbb edx [esp+44h] +
xor ebx ebx +
add eax ecx +
mov ecx [edi+14h] +
adc edx ebx +
cmp edx 0 +
jg loc_42D28F  +
jl loc_42D306  +
cmp eax ecx +
ja loc_42D28F  +
cmp dword ptr [esp+30h] 0 +
jz loc_42D33D  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jb loc_42D28F  +
sub edx eax +
cmp dword ptr [esp+50h] 0 +
jz loc_42D32F  +
cmp dword ptr [esp+34h] 8 +
jz loc_42D41A  +
mov eax [esi+18h] +
add eax edx +
cmp eax [edi+18h] +
ja loc_42D28F  +
cmp dword ptr [esp+18h] 2 +
jz loc_42D3AA  +
mov ebx [esp+4Ch] +
mov edx [esp+28h] +
mov eax [ebp+3Ch] +
lea ecx [ebx+1] +
mov [edx+ebx*4+28h] eax +
mov edx [ebp+14h] +
test dl 1 +
jz loc_42D397  +
mov ebx [esp+14h] +
test ebx ebx +
jz loc_42D504  +
mov eax [ebp+20h] +
cmp eax [ebx+20h] +
cmovb ebx ebp +
mov [esp+14h] ebx +
and dl 2 +
jz loc_42D4F9  +
mov edx [esi+10h] +
sub edx [esp+10h] +
sub eax [esp+2Ch] +
cmp eax edx +
jz loc_42D397  +
mov eax [esp+28h] +
and byte ptr [eax+20h] 0FDh +
cmp [esp+24h] ecx +
jz loc_42D4AA  +
mov [esp+4Ch] ecx +
jmp loc_42D28F  +
***
cmp dword ptr [esi+18h] 0 +
jnz loc_42D344  +
mov eax [edi+18h] +
test eax eax +
mov [esp+50h] eax +
jz loc_42D344  +
cmp dword ptr [esp+34h] 8 +
jz loc_42D3F0  +
mov eax [esi+10h] +
cmp [esp+10h] eax +
mov edx [esi+14h] +
jnb loc_42D28F  +
sub eax [esp+40h] +
sbb edx [esp+44h] +
mov ecx [edi+14h] +
cmp edx 0 +
jg loc_42D28F  +
jl loc_42D3F0  +
cmp eax ecx +
jnb loc_42D28F  +
cmp dword ptr [esp+30h] 0 +
jz loc_42D344  +
mov edx [esi+0Ch] +
mov eax [edi+0Ch] +
cmp edx eax +
jbe loc_42D28F  +
sub edx eax +
cmp [esp+50h] edx +
jbe loc_42D28F  +
jmp loc_42D344  +
***
xor eax eax +
cmp dword ptr [esp+18h] 7 +
jnz loc_42D332  +
jmp loc_42D32F  +
***
mov eax [esp+0B4h] +
mov edx [esp+8Ch] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov [eax] edx +
jmp loc_42BBD4  +
***
xor eax eax +
jmp loc_42CF35  +
***
mov eax [esp+28h] +
mov esi eax +
mov [esp+24h] eax +
test esi esi +
mov eax 2Ch +
lea edx ds:28h[esi*4] +
cmovnz eax edx +
jmp loc_42D11E  +
***
mov dword ptr [esp+1Ch] 1 +
jmp loc_42D21E  +
***
movzx eax byte ptr [ebp+20h] +
and eax 32h +
cmp al 2 +
jz loc_42D4E5  +
mov eax [esp+24h] +
add edi 20h +
add dword ptr [esp+3Ch] 1 +
mov [ebp+24h] eax +
mov eax [esp+38h] +
mov [esp+38h] ebp +
mov [eax] ebp +
jmp loc_42CF58  +
***
mov ebp [esp+28h] +
movzx eax byte ptr [ebp+20h] +
test al 10h +
jz loc_42D4E9  +
mov ebx [esp+14h] +
test ebx ebx +
jz loc_42D4DE  +
mov edx [ebx+1Ch] +
and eax 32h +
sub edx [edi+0Ch] +
cmp al 2 +
mov [ebp+1Ch] edx +
jnz loc_42D48C  +
mov eax [esp+14h] +
mov eax [eax+20h] +
sub eax [esp+2Ch] +
mov [ebp+10h] eax +
jmp loc_42D48C  +
***
and eax 32h +
cmp al 2 +
jnz loc_42D48C  +
xor eax eax +
jmp loc_42D4D5  +
***
and eax 32h +
cmp al 2 +
jnz loc_42D48C  +
cmp dword ptr [esp+14h] 0 +
jnz loc_42D4CE  +
jmp loc_42D4E5  +
***
mov edx [esi+0Ch] +
sub edx [edi+0Ch] +
jmp loc_42D387  +
***
mov [esp+14h] ebp +
mov eax [ebp+20h] +
jmp loc_42D377  +
***
mov eax [esp+4] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jz loc_42D523  +
mov eax 1 +
retn   +
***
mov edx [esp+0Ch] +
mov edx [edx+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_42D51D  +
mov ecx [esp+8] +
mov edx [ecx] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_42D5E3  +
mov dword ptr [esp+8] 0 +
mov ecx [esp+10h] +
mov edx [ecx] +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jz loc_42D5D4  +
mov dword ptr [esp+10h] 0 +
mov edx [esp+8] +
test edx edx +
jz loc_42D51D  +
mov ecx [esp+8] +
mov edx [ecx+28h] +
test edx edx +
jz loc_42D51D  +
cmp dword ptr [esp+10h] 0 +
jz loc_42D51D  +
cmp dword ptr [ecx+10h] offset off_476230 +
jnz loc_42D51D  +
mov eax [eax+0A0h] +
cmp edx [eax+90Ch] +
jz loc_42D5F6  +
cmp edx [eax+910h] +
jz loc_42D5FD  +
mov ecx [eax+934h] +
cmp edx [ecx+30h] +
jz loc_42D604  +
cmp edx [ecx+2Ch] +
jz loc_42D60B  +
mov eax [eax+208h] +
test eax eax +
jnz loc_42D5BE  +
jmp loc_42D5C8  +
mov eax [eax+3Ch] +
test eax eax +
jz loc_42D5C8  +
cmp edx [eax+38h] +
jnz loc_42D5B7  +
mov edx 0FFFFFF44h +
mov eax [esp+10h] +
mov [eax+28h] edx +
jmp loc_42D51D  +
***
mov ecx [edx+0A0h] +
test ecx ecx +
jnz loc_42D562  +
jmp loc_42D55A  +
***
mov edx [edx+0A0h] +
test edx edx +
jnz loc_42D54B  +
jmp loc_42D543  +
***
mov edx 0FFFFFF40h +
jmp loc_42D5C8  +
***
mov edx 0FFFFFF41h +
jmp loc_42D5C8  +
***
mov edx 0FFFFFF42h +
jmp loc_42D5C8  +
***
mov edx 0FFFFFF43h +
jmp loc_42D5C8  +
***
mov eax [esp+4] +
mov edx [eax+0A0h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+5] +
mov eax [edx+60h] +
xor edx edx +
div  ecx +
lea edx ds:4[eax*4] +
test eax eax +
lea ecx [edx-4] +
mov eax edx +
cmovg eax ecx +
retn   +
***
sub esp 1Ch +
mov edx [esp+20h] +
mov eax [edx+0A0h] +
mov ecx [eax+910h] +
test ecx ecx +
jz loc_42D6B0  +
mov edx [edx+4] +
mov eax [eax+108h] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
movzx ecx byte ptr [edx+5] +
xor edx edx +
div  ecx +
lea edx ds:4[eax*4] +
test eax eax +
lea ecx [edx-4] +
cmovle ecx edx +
mov eax ecx +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 5 +
call sub_40C770  +
mov ecx 0FFFFFFFFh +
jmp loc_42D6A3  +
***
mov eax [esp+8] +
mov eax [eax+4Ch] +
lea eax ds:4[eax*4] +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov esi [esp+24h] +
mov ecx [esp+2Ch] +
mov edi [esp+28h] +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
mov edx [edx+28h] +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] ecx +
mov [esp+4] esi +
mov [esp] eax +
call edx  +
test eax eax +
jz loc_42D753  +
mov eax [esi+4Ch] +
mov ebx [esi+44h] +
test eax eax +
jz loc_42D746  +
mov ecx edi +
xor edx edx +
jmp loc_42D733  +
mov ebx esi +
add edx 1 +
add ecx 4 +
cmp edx eax +
lea esi [ebx+10h] +
mov [ecx-4] ebx +
jnz loc_42D731  +
lea edi [edi+eax*4] +
mov dword ptr [edi] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_42D74C  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov edx [esp+24h] +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+8] 0 +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
js loc_42D796  +
mov [ebx+7Ch] eax +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov edx [esp+24h] +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+8] 1 +
mov [esp+4] edx +
mov [esp] ebx +
call eax  +
test eax eax +
js loc_42D7D9  +
mov [ebx+80h] eax +
add esp 18h +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov edx [eax+0A0h] +
mov ebx [edx+910h] +
test ebx ebx +
jz loc_42D852  +
mov ecx [eax+64h] +
test ecx ecx +
jz loc_42D84B  +
mov edi 4 +
jmp loc_42D817  +
mov ecx [ecx+0Ch] +
test ecx ecx +
jz loc_42D841  +
mov ebp [ecx+8Ch] +
cmp ebx [ebp+1Ch] +
jnz loc_42D810  +
mov esi [ebp+4] +
cmp esi 4 +
jz loc_42D82F  +
cmp esi 9 +
jnz loc_42D810  +
mov eax [ecx+24h] +
xor edx edx +
mov ecx [ecx+0Ch] +
div  dword ptr [ebp+28h] +
test ecx ecx +
lea edi [edi+eax*4] +
jnz loc_42D817  +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 4 +
jmp loc_42D843  +
***
mov dword ptr [esp] 5 +
call sub_40C770  +
mov eax 0FFFFFFFFh +
jmp loc_42D843  +
***
mov eax [edi+4] +
mov ebx [edi+64h] +
mov dword ptr [esp+18h] 0 +
mov eax [eax+1B0h] +
test ebx ebx +
mov eax [eax+174h] +
mov eax [eax+28h] +
mov [esp+1Ch] eax +
jnz loc_42D8D7  +
jmp loc_42D960  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_42D960  +
mov eax [edi+0A0h] +
mov edx [eax+910h] +
mov eax [ebx+8Ch] +
cmp [eax+1Ch] edx +
jnz loc_42D8C0  +
mov eax [eax+4] +
cmp eax 4 +
jz loc_42D8EF  +
cmp eax 9 +
jnz loc_42D8C0  +
mov eax [esp+48h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp] edi +
mov [esp+8] eax +
mov eax [esp+1Ch] +
call eax  +
test eax eax +
jz loc_42D976  +
mov ecx [ebx+8Ch] +
xor edx edx +
mov eax [ebx+24h] +
mov ebp [ebx+44h] +
div  dword ptr [ecx+28h] +
test eax eax +
jle loc_42D94D  +
mov esi [esp+44h] +
xor ecx ecx +
jmp loc_42D932  +
mov ebp edx +
add ecx 1 +
add esi 4 +
cmp eax ecx +
lea edx [ebp+10h] +
mov [esi-4] ebp +
jnz loc_42D930  +
mov ecx [esp+44h] +
lea esi [ecx+eax*4] +
mov [esp+44h] esi +
mov ebx [ebx+0Ch] +
add [esp+18h] eax +
test ebx ebx +
jnz loc_42D8CB  +
lea esi [esi+0] +
mov eax [esp+44h] +
mov dword ptr [eax] 0 +
mov eax [esp+18h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFFh +
jmp loc_42D96E  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [esp+7Ch+arg_0] +
mov ebx [edi+0A0h] +
mov esi [ebx+91Ch] +
test esi esi +
jz loc_42DA20  +
mov ecx [ebx+1B8h] +
test ecx ecx +
jz loc_42D9C7  +
mov eax [ebx+1B0h] +
cmp eax 0Fh +
ja loc_42DB52  +
xor ebp ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aB_gnu_version_ +
call off_476094  +
mov [esp+7Ch+var_7C] 11h +
call sub_40C770  +
mov eax [edi+0A0h] +
mov dword ptr [eax+244h] 0 +
mov eax [edi+0A0h] +
mov dword ptr [eax+23Ch] 0 +
test ebp ebp +
jz loc_42DA12  +
mov [esp+7Ch+var_7C] ebp +
call free  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi esi +
mov eax [ebx+918h] +
test eax eax +
jz loc_42DA86  +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_42DA45  +
mov eax [ebx+1E8h] +
cmp eax 13h +
ja loc_42DD60  +
xor ebp ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aB_gnu_versio_0 +
call off_476094  +
mov [esp+7Ch+var_7C] 11h +
call sub_40C770  +
mov eax [edi+0A0h] +
mov dword ptr [eax+240h] 0 +
mov eax [edi+0A0h] +
mov dword ptr [eax+238h] 0 +
jmp loc_42DA06  +
mov ebp [esp+7Ch+arg_4] +
test ebp ebp +
jz loc_42DB45  +
cmp esi 3 +
mov eax 3 +
lea edx [esi+1] +
cmovnb eax edx +
mov [esp+7Ch+var_74] 28h +
mov esi eax +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] edi +
call sub_407CF0  +
mov [ebx+240h] eax +
mov eax [edi+0A0h] +
mov ebx [eax+240h] +
test ebx ebx +
jz loc_42DA12  +
mov [eax+238h] esi +
mov eax [edi+0A0h] +
lea edx [esi+esi*4] +
mov ecx 1 +
mov eax [eax+240h] +
lea ebx [eax+edx*8-28h] +
xor edx edx +
mov eax 1 +
mov [ebx] ax +
mov [ebx+2] dx +
mov [ebx+4] si +
mov [ebx+6] cx +
mov [ebx+14h] edi +
mov [esp+7Ch+var_7C] edi +
call sub_43F0F0  +
test eax eax +
mov [ebx+18h] eax +
jz loc_42DE60  +
mov dword ptr [ebx+1Ch] 0 +
mov [esp+7Ch+var_78] 10h +
mov [esp+7Ch+var_7C] edi +
call sub_407C00  +
test eax eax +
mov [ebx+20h] eax +
jz loc_42DE60  +
mov edx [ebx+18h] +
mov [eax+8] edx +
add esp 7Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+7Ch+var_7C] eax +
call sub_40EFC0  +
test eax eax +
mov ebp eax +
jz loc_42D9E6  +
mov eax [ebx+1A8h] +
mov edx [ebx+1ACh] +
mov [esp+7Ch+var_70] 0 +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] edx +
call sub_4060C0  +
test eax eax +
jnz loc_42D9E6  +
mov eax [ebx+1B0h] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_405EB0  +
cmp eax [ebx+1B0h] +
jnz loc_42D9E6  +
mov eax [ebx+1B8h] +
mov esi [edi+0A0h] +
mov [esp+7Ch+var_74] 20h +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
call sub_407CF0  +
mov [esi+244h] eax +
mov eax [edi+0A0h] +
mov ecx [eax+244h] +
test ecx ecx +
mov [esp+7Ch+var_68] ecx +
jz loc_42D9EC  +
mov edx [ebx+1B0h] +
lea edx [ebp+edx-10h] +
mov [esp+7Ch+var_60] edx +
mov edx [ebx+1B8h] +
test edx edx +
jz loc_42E223  +
mov [esp+7Ch+var_5C] ebp +
xor esi esi +
mov [esp+7Ch+var_58] 0 +
mov [esp+7Ch+var_54] ebp +
mov [esp+7Ch+var_64] ebx +
mov [esp+7Ch+arg_0] edi +
mov eax [esp+7Ch+var_5C] +
mov edi [esp+7Ch+var_68] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_7C] eax +
call sub_423C30  +
mov ecx [esp+7Ch+arg_0] +
mov eax [esp+7Ch+var_64] +
mov [edi+10h] ecx +
mov ecx [edi+4] +
mov edx [eax+1B4h] +
test ecx ecx +
jnz loc_42DEF3  +
mov eax [esp+7Ch+var_68] +
mov dword ptr [eax+14h] offset unk_48E4B2 +
mov ecx [esp+7Ch+var_68] +
movzx eax word ptr [ecx+2] +
test ax ax +
jnz loc_42DF13  +
mov dword ptr [ecx+18h] 0 +
mov eax [esp+7Ch+var_68] +
mov ecx [esp+7Ch+var_60] +
mov edx [esp+7Ch+var_5C] +
mov ebp [eax+8] +
sub ecx edx +
mov [esp+7Ch+var_50] ecx +
cmp ebp ecx +
ja loc_42DD4D  +
add ebp edx +
mov ebx [eax+18h] +
cmp word ptr [eax+2] 0 +
jz loc_42DE75  +
xor edi edi +
jmp loc_42DD0E  +
mov dword ptr [ebx+10h] offset unk_48E4B2 +
movzx eax word ptr [ebx+6] +
mov dword ptr [ebx+14h] 0 +
cmp esi eax +
cmovb esi eax +
mov eax [ebx+0Ch] +
add edi 1 +
test eax eax +
jz loc_42DE6D  +
mov ecx [esp+7Ch+var_68] +
movzx edx word ptr [ecx+2] +
cmp edi edx +
jnb loc_42DCF7  +
lea ecx [ebx+18h] +
mov [ebx+14h] ecx +
mov ecx [esp+7Ch+var_60] +
sub ecx ebp +
cmp eax ecx +
ja loc_42DD4D  +
add ebp eax +
add ebx 18h +
cmp edi edx +
jnb loc_42DE75  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] ebx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_423D20  +
mov ecx [ebx+8] +
mov eax [esp+7Ch+var_64] +
test ecx ecx +
mov edx [eax+1B4h] +
jz loc_42DCC0  +
mov eax [esp+7Ch+arg_0] +
call loc_424030  +
test eax eax +
mov [ebx+10h] eax +
jnz loc_42DCC7  +
mov ebp [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
jmp loc_42D9C9  +
mov [esp+7Ch+var_7C] eax +
call sub_40EFC0  +
test eax eax +
mov ebp eax +
jz loc_42DE60  +
mov eax [ebx+1E0h] +
mov edx [ebx+1E4h] +
mov [esp+7Ch+var_70] 0 +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] edx +
call sub_4060C0  +
test eax eax +
jnz loc_42DA64  +
mov eax [ebx+1E8h] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
call sub_405EB0  +
cmp eax [ebx+1E8h] +
mov [esp+7Ch+var_5C] eax +
jnz loc_42DA64  +
mov eax [esp+7Ch+var_5C] +
lea eax [ebp+eax-14h] +
mov [esp+7Ch+var_60] eax +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_42E216  +
xor edx edx +
lea eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_54] ebp +
mov [esp+7Ch+var_50] esi +
mov esi ebp +
xor ebp ebp +
mov [esp+7Ch+var_64] ebx +
mov ebx edx +
mov [esp+7Ch+var_58] 0 +
mov [esp+7Ch+var_68] eax +
jmp loc_42DE37  +
movzx eax ax +
cmp ebp eax +
cmovb ebp eax +
mov eax [esp+7Ch+var_24] +
test eax eax +
jz loc_42E1CF  +
mov ecx [esp+7Ch+var_60] +
sub ecx esi +
cmp eax ecx +
ja loc_42DE56  +
add esi eax +
mov eax [esp+7Ch+var_64] +
add ebx 1 +
cmp [eax+1F0h] ebx +
jbe loc_42DF53  +
mov eax [esp+7Ch+var_68] +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_74] eax +
call sub_423A70  +
movzx eax [esp+7Ch+var_30] +
and ax 7FFFh +
jnz loc_42DE04  +
mov ebp [esp+7Ch+var_54] +
jmp loc_42DA47  +
xor ebp ebp +
mov eax [edi+0A0h] +
jmp loc_42DA6A  +
mov eax [esp+7Ch+var_68] +
mov [eax+2] di +
mov eax [esp+7Ch+var_68] +
mov dword ptr [eax+1Ch] 0 +
mov eax [eax+0Ch] +
test eax eax +
jz loc_42DEC5  +
mov ecx [esp+7Ch+var_64] +
add [esp+7Ch+var_58] 1 +
mov edx [ecx+1B8h] +
cmp [esp+7Ch+var_58] edx +
jnb loc_42DEA8  +
mov edi [esp+7Ch+var_68] +
mov ecx edi +
add ecx 20h +
mov [edi+1Ch] ecx +
cmp [esp+7Ch+var_50] eax +
jb loc_42DD4D  +
add [esp+7Ch+var_5C] eax +
add [esp+7Ch+var_68] 20h +
cmp [esp+7Ch+var_58] edx +
jb loc_42DC29  +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+var_54] +
mov eax [edi+0A0h] +
mov edx [esp+7Ch+var_58] +
mov [eax+23Ch] edx +
mov [esp+7Ch+var_7C] ebp +
call free  +
mov ebx [edi+0A0h] +
jmp loc_42DA22  +
mov eax [esp+7Ch+arg_0] +
call loc_424030  +
mov edx [esp+7Ch+var_68] +
test eax eax +
mov [edx+14h] eax +
jnz loc_42DC72  +
jmp loc_42DD4D  +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] 18h +
mov [esp+7Ch+var_7C] eax +
call sub_407BA0  +
mov edx [esp+7Ch+var_68] +
test eax eax +
mov [edx+18h] eax +
jnz loc_42DC8A  +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+var_54] +
mov eax [edi+0A0h] +
jmp loc_42D9EC  +
mov [esp+7Ch+var_58] ebp +
mov esi [esp+7Ch+var_50] +
mov ebx eax +
mov ebp [esp+7Ch+var_54] +
mov ecx [esp+7Ch+arg_4] +
test ecx ecx +
jz loc_42DF7D  +
cmp esi [esp+7Ch+var_58] +
ja loc_42DF76  +
mov esi [esp+7Ch+var_58] +
add esi 1 +
mov [esp+7Ch+var_58] esi +
mov eax [esp+7Ch+var_58] +
mov edx [edi+0A0h] +
mov [esp+7Ch+var_74] 28h +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_68] edx +
call sub_407CF0  +
mov edx [esp+7Ch+var_68] +
mov [edx+240h] eax +
mov eax [edi+0A0h] +
mov edx [eax+240h] +
test edx edx +
jz loc_42DA6A  +
mov ecx [esp+7Ch+var_58] +
mov [eax+238h] ecx +
mov eax [edi+0A0h] +
mov eax [eax+240h] +
mov [esp+7Ch+var_4C] eax +
mov eax [ebx+1F0h] +
test eax eax +
jz loc_42E1B4  +
lea eax [esp+7Ch+var_34] +
mov [esp+7Ch+var_68] eax +
mov eax [esp+7Ch+var_5C] +
mov [esp+7Ch+var_50] ebp +
mov [esp+7Ch+var_44] 0 +
mov [esp+7Ch+var_54] ebp +
lea eax [ebp+eax-8] +
mov [esp+7Ch+var_60] eax +
mov [esp+7Ch+var_40] esi +
mov [esp+7Ch+var_5C] ebx +
mov eax [esp+7Ch+var_50] +
mov esi [esp+7Ch+var_68] +
mov [esp+7Ch+var_7C] edi +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_74] esi +
call sub_423A70  +
movzx eax [esp+7Ch+var_30] +
and ax 7FFFh +
jz loc_42DE56  +
mov edx [esp+7Ch+var_4C] +
movzx eax ax +
lea eax [eax+eax*4] +
lea eax [edx+eax*8-28h] +
mov ecx eax +
mov [esp+7Ch+var_64] eax +
mov eax [esi] +
mov [ecx] eax +
mov eax [esi+4] +
mov [ecx+4] eax +
mov eax [esi+8] +
mov [ecx+8] eax +
mov eax [esi+0Ch] +
mov [ecx+0Ch] eax +
mov eax [esi+10h] +
mov [ecx+14h] edi +
mov [ecx+10h] eax +
movzx eax word ptr [ecx+6] +
test ax ax +
jnz loc_42E1E4  +
mov dword ptr [ecx+20h] 0 +
mov ecx [esp+7Ch+var_64] +
mov eax [esp+7Ch+var_60] +
mov edx [esp+7Ch+var_50] +
mov esi [ecx+0Ch] +
sub eax edx +
cmp esi eax +
ja loc_42DE56  +
mov eax ecx +
mov ecx [ecx+20h] +
add esi edx +
xor ebp ebp +
cmp word ptr [eax+6] 0 +
mov [esp+7Ch+var_48] ecx +
lea ebx [ecx+10h] +
jnz loc_42E0EF  +
jmp loc_42E13E  +
mov dword ptr [ebx-8] offset unk_48E4B2 +
add ebp 1 +
test eax eax +
mov dword ptr [ebx-4] 0 +
jz loc_42E136  +
mov ecx [esp+7Ch+var_64] +
movzx edx word ptr [ecx+6] +
cmp ebp edx +
jnb loc_42E0D8  +
mov [ebx-4] ebx +
mov ecx [esp+7Ch+var_60] +
sub ecx esi +
cmp ecx eax +
jb loc_42DE56  +
add esi eax +
add ebx 10h +
cmp ebp edx +
jnb loc_42E13E  +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+7Ch+var_7C] esi +
call eax  +
lea edx [esi+4] +
mov [ebx-10h] eax +
mov eax [edi+4] +
mov eax [eax+4Ch] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov ecx [ebx-10h] +
mov edx [esp+7Ch+var_5C] +
test ecx ecx +
mov edx [edx+1ECh] +
mov [ebx-0Ch] eax +
jz loc_42E0B4  +
mov eax edi +
call loc_424030  +
test eax eax +
mov [ebx-8] eax +
jz loc_42DE56  +
mov eax [ebx-0Ch] +
jmp loc_42E0BB  +
mov eax [esp+7Ch+var_64] +
mov [eax+6] bp +
mov eax [esp+7Ch+var_64] +
cmp word ptr [eax+6] 0 +
mov dword ptr [eax+18h] 0 +
jz loc_42E15B  +
mov ecx eax +
mov eax [eax+20h] +
mov eax [eax+8] +
mov [ecx+18h] eax +
mov eax [esp+7Ch+var_64] +
mov edx [eax+10h] +
mov dword ptr [eax+1Ch] 0 +
test edx edx +
jz loc_42E1AC  +
sub eax [esp+7Ch+var_4C] +
sar eax 3 +
imul eax eax +
add eax 1 +
cmp [esp+7Ch+var_58] eax +
jbe loc_42E18F  +
mov ecx [esp+7Ch+var_64] +
mov eax ecx +
add eax 28h +
mov [ecx+1Ch] eax +
mov eax [esp+7Ch+var_5C] +
add [esp+7Ch+var_44] 1 +
mov ecx [esp+7Ch+var_44] +
add [esp+7Ch+var_50] edx +
cmp [eax+1F0h] ecx +
ja loc_42E011  +
mov ebp [esp+7Ch+var_54] +
mov esi [esp+7Ch+var_40] +
mov [esp+7Ch+var_7C] ebp +
call free  +
cmp [esp+7Ch+arg_4] 0 +
jz loc_42DB45  +
jmp loc_42DAD9  +
mov [esp+7Ch+var_58] ebp +
mov esi [esp+7Ch+var_50] +
mov ebx [esp+7Ch+var_64] +
mov ebp [esp+7Ch+var_54] +
jmp loc_42DF61  +
mov [esp+7Ch+var_74] 10h +
mov [esp+7Ch+var_78] eax +
mov [esp+7Ch+var_7C] edi +
call sub_407BA0  +
mov edx [esp+7Ch+var_64] +
test eax eax +
mov [edx+20h] eax +
jnz loc_42E07F  +
mov ebp [esp+7Ch+var_54] +
mov eax [edi+0A0h] +
jmp loc_42DA6A  +
mov [esp+7Ch+var_58] 0 +
jmp loc_42DF61  +
mov [esp+7Ch+var_58] 0 +
xor esi esi +
jmp loc_42DED6  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi [esp+70h] +
mov ebp [esp+74h] +
mov dword ptr [esp+30h] 0 +
mov eax [esi+0A0h] +
mov ebx [eax+44h] +
test ebx ebx +
jz loc_42E458  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 11h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aProgramHeader +
call fwrite  +
mov eax [esi+0A0h] +
mov eax [eax+30h] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_42E458  +
xor edi edi +
jmp loc_42E2C1  +
mov [esp+4] ebp +
add edi 1 +
add ebx 20h +
mov dword ptr [esp] 0Ah +
call fputc  +
cmp edi [esp+1Ch] +
jz loc_42E458  +
mov eax [ebx] +
mov [esp+20h] eax +
call near ptr dword_422610  +
test eax eax +
jz loc_42E5B6  +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a8sOff0x +
mov [esp] ebp +
call fprintf  +
mov eax [ebx+8] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_40D0A0  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aVaddr0x +
call fwrite  +
mov eax [ebx+0Ch] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_40D0A0  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aPaddr0x +
call fwrite  +
mov eax [ebx+10h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_40D0A0  +
mov eax [ebx+1Ch] +
mov [esp] eax +
call near ptr dword_40F9D0  +
mov dword ptr [esp+4] offset aAlign2U +
mov [esp] ebp +
mov [esp+8] eax +
call fprintf  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 12h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aFilesz0x +
call fwrite  +
mov eax [ebx+14h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_40D0A0  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 9 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aMemsz0x +
call fwrite  +
mov eax [ebx+18h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_40D0A0  +
mov eax [ebx+4] +
mov dword ptr [esp+4] offset aFlagsCCC +
mov [esp] ebp +
mov edx eax +
and edx 1 +
cmp edx 1 +
mov edx eax +
sbb ecx ecx +
and edx 2 +
and ecx 0FFFFFFB5h +
add ecx 78h +
cmp edx 1 +
sbb edx edx +
and eax 4 +
and edx 0FFFFFFB6h +
add edx 77h +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFBBh +
add eax 72h +
mov [esp+10h] ecx +
mov [esp+0Ch] edx +
mov [esp+8] eax +
call fprintf  +
mov eax [ebx+4] +
and eax 0FFFFFFF8h +
jz loc_42E2A1  +
mov [esp+8] eax +
mov dword ptr [esp+4] offset aLx +
mov [esp] ebp +
call fprintf  +
jmp loc_42E2A1  +
***
mov dword ptr [esp+4] offset a_dynamic_1 +
mov [esp] esi +
call sub_410840  +
test eax eax +
mov edi eax +
jz loc_42E5F0  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 12h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aDynamicSection +
call fwrite  +
lea eax [esp+30h] +
mov [esp+8] eax +
mov [esp+4] edi +
mov [esp] esi +
call sub_4111A0  +
mov ebx [esp+30h] +
test eax eax +
jnz loc_42E4C4  +
test ebx ebx +
jz loc_42E4BA  +
mov [esp] ebx +
call free  +
add esp 5Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+4] edi +
mov [esp] esi +
call sub_428190  +
cmp eax 0FFFFFEFFh +
jz loc_42E67A  +
mov edx [esi+0A0h] +
mov ebx [esp+30h] +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+1Ch] +
mov [esp+2Ch] eax +
mov eax [esi+4] +
mov edx [eax+1B0h] +
mov eax [edx+174h] +
movzx ecx byte ptr [eax+6] +
mov eax [eax+30h] +
mov [esp+1Ch] ecx +
mov [esp+24h] eax +
mov eax [edi+24h] +
cmp ecx eax +
ja loc_42E4AE  +
add eax ebx +
mov [esp+20h] eax +
sub [esp+20h] ecx +
cmp ebx [esp+20h] +
ja loc_42E5DF  +
mov [esp+28h] edx +
lea edi [esp+34h] +
mov eax [esp+24h] +
mov [esp+8] edi +
mov [esp+4] ebx +
mov [esp] esi +
call eax  +
mov edx [esp+34h] +
test edx edx +
jz loc_42E5DB  +
cmp edx 1Dh +
jz loc_42EC08  +
ja loc_42E683  +
cmp edx 0Eh +
jz loc_42EBFE  +
nop   +
lea esi [esi+0] +
ja loc_42E6E0  +
cmp edx 7 +
jz loc_42EC44  +
nop   +
ja loc_42E8FE  +
cmp edx 3 +
jz loc_42EC3A  +
nop   +
jbe loc_42EBA8  +
cmp edx 5 +
mov eax offset aStrtab +
jz loc_42E924  +
mov eax offset aHash +
mov edx offset aSymtab +
cmova eax edx +
jmp loc_42E924  +
mov eax [esp+20h] +
mov dword ptr [esp+4] offset a0xLx +
mov [esp+8] eax +
lea eax [esp+3Ch] +
mov [esp] eax +
call sprintf  +
lea eax [esp+3Ch] +
jmp loc_42E2D4  +
***
mov ebx [esp+30h] +
mov [esp] ebx +
call free  +
mov dword ptr [esp+30h] 0 +
nop   +
mov eax [esi+0A0h] +
mov edx [eax+918h] +
test edx edx +
jz loc_42E60A  +
mov edi [eax+240h] +
test edi edi +
jz loc_42E641  +
mov ebx [eax+91Ch] +
test ebx ebx +
jnz loc_42E637  +
test edx edx +
jnz loc_42E815  +
mov eax [eax+91Ch] +
test eax eax +
jnz loc_42E76D  +
add esp 5Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [eax+244h] +
test ecx ecx +
jnz loc_42E614  +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
call sub_42D990  +
test eax eax +
jz loc_42E4BA  +
mov eax [esi+0A0h] +
mov edx [eax+918h] +
jmp loc_42E614  +
***
mov edx [esp+2Ch] +
mov eax esi +
call loc_424030  +
test eax eax +
jnz loc_42EB29  +
mov ebx [esp+30h] +
jmp loc_42E4AE  +
***
cmp edx 6FFFFEFCh +
jz loc_42EC12  +
ja loc_42E726  +
cmp edx 6FFFFDFBh +
jz loc_42EC30  +
jbe loc_42E9E0  +
cmp edx 6FFFFDFFh +
jz loc_42EC26  +
ja loc_42EA76  +
cmp edx 6FFFFDFDh +
mov eax offset aPosflag_1 +
jz loc_42E924  +
mov eax offset aFeature +
mov edx offset aSyminsz +
cmova eax edx +
jmp loc_42E924  +
cmp edx 15h +
jz loc_42EC58  +
jbe loc_42EA25  +
cmp edx 19h +
jz loc_42EC4E  +
nop   +
lea esi [esi+0] +
ja loc_42EA56  +
cmp edx 17h +
mov eax offset aJmprel +
jz loc_42E924  +
mov eax offset aTextrel +
mov edx offset aBind_now +
cmova eax edx +
jmp loc_42E924  +
cmp edx 6FFFFFFBh +
jz loc_42EC80  +
jbe loc_42E99C  +
cmp edx 6FFFFFFFh +
jz loc_42EC76  +
ja loc_42EADF  +
cmp edx 6FFFFFFDh +
mov eax offset aVerdefnum +
jz loc_42E924  +
mov eax offset aVerdef +
mov ecx offset aVerneed +
cmova eax ecx +
jmp loc_42E924  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 15h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aVersionReferen +
call fwrite  +
mov eax [esi+0A0h] +
mov edi [eax+244h] +
test edi edi +
jz loc_42E62A  +
mov esi offset aCorrupt +
mov eax [edi+14h] +
mov dword ptr [esp+4] offset aRequiredFromS +
mov [esp] ebp +
test eax eax +
cmovz eax esi +
mov [esp+8] eax +
call fprintf  +
mov ebx [edi+18h] +
test ebx ebx +
jz loc_42E809  +
lea esi [esi+0] +
mov eax [ebx+10h] +
mov edx [ebx] +
test eax eax +
cmovz eax esi +
mov [esp+14h] eax +
movzx eax word ptr [ebx+6] +
mov [esp+10h] eax +
movzx eax word ptr [ebx+4] +
mov [esp+8] edx +
mov dword ptr [esp+4] offset a0x8_8lx0x2_2x2 +
mov [esp] ebp +
mov [esp+0Ch] eax +
call fprintf  +
mov ebx [ebx+14h] +
test ebx ebx +
jnz loc_42E7D0  +
mov edi [edi+1Ch] +
test edi edi +
jnz loc_42E7A6  +
jmp loc_42E62A  +
***
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 16h +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset aVersionDefinit +
call fwrite  +
mov eax [esi+0A0h] +
mov ebx [eax+240h] +
test ebx ebx +
jz loc_42E61C  +
lea esi [esi+0] +
mov eax [ebx+18h] +
mov ecx offset aCorrupt +
mov edx [ebx+8] +
test eax eax +
cmovz eax ecx +
mov [esp+14h] eax +
mov [esp+10h] edx +
movzx eax word ptr [ebx+2] +
mov [esp+0Ch] eax +
movzx eax word ptr [ebx+4] +
mov dword ptr [esp+4] offset aD0x2_2x0x8_8lx +
mov [esp] ebp +
mov [esp+8] eax +
call fprintf  +
mov eax [ebx+20h] +
test eax eax +
jz loc_42E8E8  +
mov edx [eax+0Ch] +
test edx edx +
jz loc_42E8E8  +
mov [esp+4] ebp +
mov dword ptr [esp] 9 +
call fputc  +
mov eax [ebx+20h] +
mov edi [eax+0Ch] +
test edi edi +
jz loc_42E8D8  +
mov eax [edi+8] +
mov ecx offset aCorrupt +
mov dword ptr [esp+4] offset aS_19 +
mov [esp] ebp +
test eax eax +
cmovz eax ecx +
mov [esp+8] eax +
call fprintf  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_42E8B0  +
mov [esp+4] ebp +
mov dword ptr [esp] 0Ah +
call fputc  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jnz loc_42E850  +
mov eax [esi+0A0h] +
jmp loc_42E61C  +
***
cmp edx 0Ah +
jz loc_42EC6C  +
jbe loc_42EB87  +
cmp edx 0Ch +
mov eax offset aInit_0 +
jz loc_42E924  +
mov eax offset aSyment +
mov edx offset aFini +
cmova eax edx +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a20s +
mov [esp] ebp +
call fprintf  +
mov [esp+0Ch] ebp +
mov dword ptr [esp+8] 2 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] offset a0x +
call fwrite  +
mov eax [esp+38h] +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+8] eax +
call sub_40D0A0  +
mov [esp+4] ebp +
mov dword ptr [esp] 0Ah +
call fputc  +
add ebx [esp+1Ch] +
cmp ebx [esp+20h] +
ja loc_42E5DB  +
mov eax [esi+4] +
mov eax [eax+1B0h] +
mov [esp+28h] eax +
jmp loc_42E533  +
***
cmp edx 6FFFFEFFh +
jz loc_42EBF4  +
jbe loc_42EB60  +
cmp edx 6FFFFFF9h +
mov eax offset aRelacount +
jz loc_42E924  +
mov eax offset aRelcount +
ja loc_42E924  +
cmp edx 6FFFFFF0h +
mov eax offset aVersym +
jz loc_42E924  +
jmp loc_42EA99  +
cmp edx 21h +
jz loc_42EBEA  +
lea esi [esi+0] +
jbe loc_42EB3A  +
cmp edx 6FFFFDF9h +
mov eax offset aPltpadsz +
jz loc_42E924  +
mov eax offset aMoveent +
ja loc_42E924  +
cmp edx 6FFFFDF8h +
mov eax offset aChecksum +
jz loc_42E924  +
jmp loc_42EA99  +
cmp edx 11h +
jz loc_42EC1C  +
nop   +
jbe loc_42EBC4  +
cmp edx 13h +
mov eax offset aRelent +
jz loc_42E924  +
mov eax offset aRelsz +
mov edx offset aPltrel +
cmova eax edx +
jmp loc_42E924  +
***
cmp edx 1Bh +
mov eax offset aInit_arraysz +
jz loc_42E924  +
mov eax offset aFini_array +
mov edx offset aFini_arraysz +
cmova eax edx +
jmp loc_42E924  +
***
cmp edx 6FFFFEFAh +
jz loc_42EBE0  +
ja loc_42EC62  +
cmp edx 6FFFFEF5h +
mov eax offset aGnu_hash +
jz loc_42E924  +
mov eax [esp+28h] +
mov ecx [eax+0E8h] +
mov eax offset unk_48E4B2 +
test ecx ecx +
jz loc_42EAB1  +
mov [esp] edx +
call ecx  +
cmp byte ptr [eax] 0 +
jnz loc_42E924  +
mov eax [esp+34h] +
mov dword ptr [esp+4] offset a0xLx +
mov [esp+8] eax +
lea eax [esp+3Ch] +
mov [esp] eax +
call sprintf  +
lea eax [esp+3Ch] +
jmp loc_42E924  +
***
cmp edx 7FFFFFFEh +
jz loc_42EC94  +
cmp edx 7FFFFFFFh +
jz loc_42EC8A  +
cmp edx 7FFFFFFDh +
jnz loc_42EA99  +
mov eax offset aAuxiliary +
mov [esp+8] eax +
mov dword ptr [esp+4] offset a20s +
mov [esp] ebp +
call fprintf  +
mov ecx [esp+38h] +
mov eax offset unk_48E4B2 +
test ecx ecx +
jnz loc_42E667  +
mov [esp+4] ebp +
mov [esp] eax +
call fputs  +
jmp loc_42E96C  +
***
cmp edx 1Eh +
mov eax offset aFlags +
jz loc_42E924  +
cmp edx 20h +
mov eax offset aPreinit_array +
jz loc_42E924  +
jmp loc_42EA99  +
***
cmp edx 6FFFFEFDh +
mov eax offset aPltpad +
jz loc_42E924  +
cmp edx 6FFFFEFEh +
mov eax offset aMovetab +
jz loc_42E924  +
jmp loc_42EA99  +
***
cmp edx 8 +
mov eax offset aRelasz +
jz loc_42E924  +
cmp edx 9 +
mov eax offset aRelaent +
jz loc_42E924  +
jmp loc_42EA99  +
***
cmp edx 1 +
jz loc_42EC9E  +
cmp edx 2 +
mov eax offset aPltrelsz +
jz loc_42E924  +
jmp loc_42EA99  +
***
cmp edx 0Fh +
jz loc_42ECA8  +
cmp edx 10h +
mov eax offset aSymbolic +
jz loc_42E924  +
jmp loc_42EA99  +
***
mov eax offset aConfig +
jmp loc_42EB04  +
***
mov eax offset aPreinit_arrays +
jmp loc_42E924  +
***
mov eax offset aSyminfo +
jmp loc_42E924  +
***
mov eax offset aSoname +
jmp loc_42EB04  +
***
mov eax offset aRunpath +
jmp loc_42EB04  +
***
mov eax offset aAudit +
jmp loc_42EB04  +
***
mov eax offset aRel +
jmp loc_42E924  +
***
mov eax offset aSyminent +
jmp loc_42E924  +
***
mov eax offset aMovesz +
jmp loc_42E924  +
***
mov eax offset aPltgot +
jmp loc_42E924  +
***
mov eax offset aRela +
jmp loc_42E924  +
***
mov eax offset aInit_array +
jmp loc_42E924  +
***
mov eax offset aDebug +
jmp loc_42E924  +
***
mov eax offset aDepaudit +
jmp loc_42EB04  +
***
mov eax offset aStrsz +
jmp loc_42E924  +
***
mov eax offset aVerneednum +
jmp loc_42E924  +
***
mov eax offset aFlags_1 +
jmp loc_42E924  +
***
mov eax offset aFilter +
jmp loc_42EB04  +
***
mov eax offset aUsed +
jmp loc_42E924  +
***
mov eax offset aNeeded +
jmp loc_42EB04  +
***
mov eax offset aRpath +
jmp loc_42EB04  +
***
push ebx  +
sub esp 18h +
mov ebx [esp+20h] +
mov dword ptr [esp+4] 34h +
mov [esp] ebx +
call sub_407C00  +
test eax eax +
jz loc_42ECDE  +
mov [eax] ebx +
add esp 18h +
pop ebx  +
retn   +
***
mov eax [esp+8] +
mov edx [esp+0Ch] +
mov [esp+4] eax +
mov [esp+8] edx +
jmp loc_411970  +
***
push esi  +
push ebx  +
mov edx [esp+10h] +
movzx ecx byte ptr [edx] +
cmp cl 2Eh +
jz loc_42ED83  +
cmp cl 5Fh +
jz loc_42ED78  +
xor eax eax +
cmp cl 4Ch +
jnz loc_42ED80  +
movzx ecx byte ptr [edx+1] +
test ds:byte_495EE0[ecx+ecx] 4 +
jz loc_42ED80  +
lea esi [edx+2] +
movzx edx byte ptr [edx+2] +
test dl dl +
jz loc_42ED80  +
mov ecx esi +
jmp loc_42ED5B  +
test ds:byte_495EE0[edx+edx] 4 +
jz loc_42ED7E  +
add ecx 1 +
movzx edx byte ptr [ecx] +
test dl dl +
jz loc_42ED80  +
lea ebx [edx-1] +
cmp bl 1 +
ja loc_42ED47  +
cmp dl 1 +
mov eax 1 +
jnz loc_42ED47  +
cmp ecx esi +
jnz loc_42ED47  +
mov eax 1 +
jmp loc_42ED80  +
cmp byte ptr [edx+1] 2Eh +
jz loc_42ED96  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
movzx eax byte ptr [edx+1] +
cmp al 4Ch +
jz loc_42ED71  +
cmp al 2Eh +
setz al  +
movzx eax al +
pop ebx  +
pop esi  +
retn   +
***
cmp byte ptr [edx+2] 4Ch +
jnz loc_42ED7E  +
cmp byte ptr [edx+3] 5Fh +
jnz loc_42ED7E  +
jmp loc_42ED71  +
***
sub esp 1Ch +
mov dword ptr [esp+8] offset a_bfd_elf_get_l +
mov dword ptr [esp+4] 1FE5h +
mov dword ptr [esp] offset a____Binutil_14 +
call sub_40C6F0  +
nop   +
push ebx  +
mov edx [esp+8] +
mov eax [esp+0Ch] +
mov ebx [esp+10h] +
mov ecx [edx+4] +
mov ecx [ecx+1B0h] +
mov ecx [ecx] +
cmp ecx eax +
jz loc_42EDF4  +
test eax eax +
jz loc_42EDF4  +
test ecx ecx +
jnz loc_42EE06  +
mov [esp+10h] ebx +
mov [esp+0Ch] eax +
mov [esp+8] edx +
pop ebx  +
jmp sub_40ED50  +
***
xor eax eax +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebp [esp+60h] +
mov edi [esp+64h] +
mov esi [esp+70h] +
mov ebx [esp+74h] +
mov eax [ebp+0A0h] +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+24h] offset off_491E60 +
mov [esp+18h] ebx +
add eax 230h +
mov [esp+2Ch] eax +
mov eax [esp+7Ch] +
mov [esp+14h] esi +
mov dword ptr [esp+8] 0 +
mov [esp+4] edi +
mov [esp+20h] eax +
mov eax [esp+78h] +
mov [esp] ebp +
mov [esp+1Ch] eax +
mov eax [esp+6Ch] +
mov [esp+10h] eax +
mov eax [esp+68h] +
mov [esp+0Ch] eax +
call sub_44D020  +
test eax eax +
jz loc_42EEA0  +
mov ecx [ebx] +
test ecx ecx +
jz loc_42EF62  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+78h] +
mov [esp+14h] ebx +
mov [esp+10h] esi +
mov [esp+4] edi +
mov [esp+18h] eax +
mov eax [esp+6Ch] +
mov [esp] ebp +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp+8] eax +
call sub_44FBE0  +
test eax eax +
jnz loc_42EE86  +
mov eax [ebp+0A0h] +
mov [esp+18h] ebx +
mov [esp+14h] esi +
mov [esp+4] edi +
add eax 228h +
mov [esp+20h] eax +
mov eax [esp+78h] +
mov [esp] ebp +
mov [esp+1Ch] eax +
lea eax [esp+3Ch] +
mov [esp+10h] eax +
mov eax [esp+6Ch] +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp+8] eax +
call sub_411AC0  +
test eax eax +
jz loc_42EFC0  +
mov ecx [esp+3Ch] +
test ecx ecx +
jnz loc_42EFA0  +
test edi edi +
jz loc_42EFC0  +
mov eax [esp+6Ch] +
mov [esp+14h] ebx +
mov [esp+10h] esi +
mov [esp+4] edi +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp] ebp +
mov [esp+8] eax +
call sub_44CE10  +
test eax eax +
jz loc_42EFC0  +
mov eax [esp+78h] +
mov dword ptr [eax] 0 +
jmp loc_42EE90  +
***
mov edx [esi] +
xor eax eax +
mov [esp+14h] ebx +
mov [esp+4] edi +
mov [esp] ebp +
test edx edx +
cmovz eax esi +
mov [esp+10h] eax +
mov eax [esp+6Ch] +
mov [esp+0Ch] eax +
mov eax [esp+68h] +
mov [esp+8] eax +
call sub_44CE10  +
add esp 4Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [ebx] +
test edx edx +
jnz loc_42EE90  +
mov eax [esp+78h] +
mov eax [eax] +
test eax eax +
jz loc_42EF23  +
jmp loc_42EE90  +
***
xor eax eax +
jmp loc_42EE95  +
***
sub esp 3Ch +
mov eax [esp+40h] +
mov ecx [eax+0A0h] +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+24h] offset off_491E60 +
mov dword ptr [esp+20h] 0 +
lea edx [ecx+230h] +
mov [esp+2Ch] edx +
mov edx [esp+50h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+1Ch] edx +
mov edx [esp+4Ch] +
mov [esp] eax +
mov [esp+14h] edx +
mov edx [esp+48h] +
mov [esp+8] edx +
mov edx [esp+44h] +
mov [esp+4] edx +
call sub_44D020  +
add esp 3Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+30h] +
mov ecx [eax+0A0h] +
mov [esp] eax +
lea edx [ecx+230h] +
mov [esp+10h] edx +
mov edx [esp+3Ch] +
mov [esp+0Ch] edx +
mov edx [esp+38h] +
mov [esp+8] edx +
mov edx [esp+34h] +
mov [esp+4] edx +
call sub_44C580  +
add esp 2Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0Ch +
mov ebx [esp+20h] +
mov edx [esp+24h] +
mov eax [ebx+4] +
movzx ecx byte ptr [edx] +
mov eax [eax+1B0h] +
and ecx 3 +
cmp cl 2 +
mov edi [eax+174h] +
movzx esi byte ptr [edi] +
mov eax esi +
movzx eax al +
jz loc_42F0DF  +
mov eax [ebx+0A0h] +
mov ebp [eax+934h] +
mov eax [ebp+1Ch] +
cmp eax 0FFFFFFFFh +
jz loc_42F0E7  +
mov edx esi +
movzx esi dl +
mov [ebp+1Ch] eax +
add eax esi +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [ebp+0] +
test ecx ecx +
jz loc_42F100  +
movzx edi byte ptr [edi+1] +
xor eax eax +
mov ecx [ecx] +
add eax edi +
test ecx ecx +
jnz loc_42F0F4  +
test eax eax +
jnz loc_42F0D5  +
mov eax ebx +
call sub_422900  +
mov edx [ebx+0A0h] +
mov ebp [edx+934h] +
jmp loc_42F0D5  +
***
add esi eax +
adc edi edx +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] esi +
mov [esp+8] edi +
mov [esp] ebx +
call sub_4060C0  +
test eax eax +
jz loc_42F212  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+44h] +
add esi ebp +
mov [esp] esi +
mov [esp+8] eax +
mov eax [esp+38h] +
mov [esp+4] eax +
call memcpy  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0 +
mov [esp] ebx +
call sub_428260  +
test eax eax +
jnz loc_42F13D  +
jmp loc_42F186  +
***
mov eax [esp+44h] +
mov [esp+8] ebx +
mov [esp+4] eax +
mov eax [esp+38h] +
mov [esp] eax +
call sub_405F60  +
cmp [esp+44h] eax +
setz al  +
add esp 1Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
mov eax [ebx] +
mov ecx [esi+4] +
mov eax [eax] +
mov eax [eax] +
cmp [eax+4] ecx +
jz loc_42F3F8  +
mov eax [ebx+0Ch] +
mov edx [eax+10h] +
mov ecx [eax+0Ch] +
test edx edx +
lea edx [ecx-8] +
jz loc_42F2C0  +
cmp edx 38h +
ja loc_42F2E8  +
jmp ds:off_48F28C[edx*4]  +
cmp edx 38h +
ja loc_42F2E8  +
jmp ds:off_48F370[edx*4]  +
mov eax 6 +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] esi +
call sub_413670  +
test eax eax +
jnz loc_42F345  +
mov eax [ebx+0Ch] +
mov eax [eax+20h] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] offset aBUnsupportedRe +
mov [esp+14h+var_C] eax +
call off_476094  +
mov [esp+14h+var_14] 11h +
call sub_40C770  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov eax 0Ch +
lea esi [esi+0] +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] esi +
call sub_413670  +
mov ecx [ebx+0Ch] +
mov edx [eax+30h] +
cmp [ecx+30h] edx +
jz loc_42F345  +
test edx edx +
mov edx [ebx+4] +
jz loc_42F3F0  +
add [ebx+8] edx +
mov [ebx+0Ch] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov eax 0Dh +
jmp loc_42F320  +
mov eax 1 +
jmp loc_42F2D5  +
mov eax 2 +
jmp loc_42F2D5  +
mov eax 3 +
jmp loc_42F2D5  +
mov eax 5 +
jmp loc_42F2D5  +
mov eax 7 +
jmp loc_42F2D5  +
mov eax 8 +
jmp loc_42F320  +
mov eax 9 +
jmp loc_42F320  +
mov eax 0Ah +
jmp loc_42F320  +
mov eax 0Bh +
jmp loc_42F320  +
sub [ebx+8] edx +
jmp loc_42F345  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
movzx eax byte ptr [ebx+28h] +
mov esi [ebx+0A0h] +
and eax 7 +
cmp al 1 +
jz loc_42F438  +
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_40C3D0  +
***
test esi esi +
jz loc_42F42A  +
mov eax [esi+934h] +
test eax eax +
jz loc_42F455  +
mov eax [eax+4] +
test eax eax +
jz loc_42F455  +
mov [esp] eax +
call sub_44E230  +
add esi 230h +
mov [esp+4] esi +
mov [esp] ebx +
call sub_44C5D0  +
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_40C3D0  +
***
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 9Ch +
mov ebx [esp+9Ch+arg_0] +
mov esi [esp+9Ch+arg_C] +
mov edi [esp+9Ch+arg_10] +
mov eax [ebx+0A0h] +
mov edx [eax+930h] +
mov eax [edx+8] +
test eax eax +
jnz loc_42F4C5  +
mov eax [edx+4] +
mov [esp+9Ch+var_90] eax +
mov eax [esp+9Ch+arg_4] +
lea ebp [esp+9Ch+var_70] +
mov [esp+9Ch+var_98] offset aSD +
mov [esp+9Ch+var_9C] ebp +
mov [esp+9Ch+var_94] eax +
call sprintf  +
mov eax ebp +
mov ecx [eax] +
add eax 4 +
lea edx [ecx-1010101h] +
not ecx  +
and edx ecx +
and edx 80808080h +
jz loc_42F4EA  +
mov ecx edx +
shr ecx 10h +
test edx 8080h +
cmovz edx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add dl dl +
sbb eax 3 +
sub eax ebp +
lea ecx [eax+1] +
mov [esp+9Ch+var_98] ecx +
mov [esp+9Ch+var_9C] ebx +
mov [esp+9Ch+var_80] ecx +
call sub_407B20  +
mov ecx [esp+9Ch+var_80] +
test eax eax +
jz loc_42F5A0  +
mov [esp+9Ch+var_94] ecx +
mov [esp+9Ch+var_98] ebp +
mov [esp+9Ch+var_9C] eax +
mov [esp+9Ch+var_80] eax +
call memcpy  +
mov edx [esp+9Ch+var_80] +
mov [esp+9Ch+var_94] 100h +
mov [esp+9Ch+var_9C] ebx +
mov [esp+9Ch+var_98] edx +
call near ptr dword_410C20  +
test eax eax +
jz loc_42F5A0  +
mov edx [esp+9Ch+arg_8] +
mov ecx eax +
mov [eax+50h] esi +
mov [eax+54h] edi +
mov dword ptr [eax+40h] 2 +
mov [eax+24h] edx +
mov edx [esp+9Ch+arg_4] +
mov eax ebx +
call sub_4230C0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 9Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 9Ch +
mov ebx [esp+9Ch+arg_4] +
mov esi [esp+9Ch+arg_0] +
mov eax [ebx+8] +
cmp eax 8 +
jz loc_42F680  +
jbe loc_42F638  +
cmp eax 9 +
jz loc_42F610  +
cmp eax 0Ah +
nop   +
jnz loc_42F670  +
mov eax dword_476720 +
lea ecx [ebx+14h] +
lea edx [ebx+4] +
mov [esp+9Ch+var_98] offset a_reg2 +
mov [esp+9Ch+var_9C] eax +
mov eax esi +
call sub_423130  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax dword_476720 +
lea ecx [ebx+14h] +
lea edx [ebx+4] +
mov [esp+9Ch+var_98] offset a_reg +
mov [esp+9Ch+var_9C] eax +
mov eax esi +
call sub_423130  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 7 +
jnz loc_42F670  +
mov edi [ebx+14h] +
mov eax [ebx+4] +
mov [esp+9Ch+var_9C] esi +
mov [esp+9Ch+var_8C] 0 +
mov [esp+9Ch+var_90] edi +
mov [esp+9Ch+var_94] eax +
mov [esp+9Ch+var_98] offset a_qnx_core_info +
call sub_42F490  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 9Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+0A0h] +
mov edi [ebx+10h] +
mov ebp [eax+930h] +
mov eax [esi+4] +
mov eax [eax+28h] +
mov [esp+9Ch+var_9C] edi +
call eax  +
lea edx [edi+4] +
mov [ebp+4] eax +
mov eax [esi+4] +
mov eax [eax+28h] +
mov [esp+9Ch+var_9C] edx +
call eax  +
lea edx [edi+8] +
add edi 0Eh +
mov dword_476720 eax +
mov eax [esi+4] +
mov eax [eax+28h] +
mov [esp+9Ch+var_9C] edx +
call eax  +
mov ebp eax +
mov eax [esi+4] +
mov eax [eax+34h] +
mov [esp+9Ch+var_9C] edi +
call eax  +
test ax ax +
jle loc_42F7C0  +
mov edx [esi+0A0h] +
cwde   +
mov edx [edx+930h] +
mov [edx] eax +
mov eax dword_476720 +
mov [edx+8] eax +
and ebp 80h +
jz loc_42F705  +
mov edx [esi+0A0h] +
mov edx [edx+930h] +
mov [edx+8] eax +
lea edi [esp+9Ch+var_70] +
mov [esp+9Ch+var_94] eax +
mov [esp+9Ch+var_98] offset a_qnx_core_stat +
mov [esp+9Ch+var_9C] edi +
call sprintf  +
mov edx edi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_42F71F  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
sub edx edi +
add edx 1 +
mov [esp+9Ch+var_98] edx +
mov [esp+9Ch+var_9C] esi +
call sub_407B20  +
test eax eax +
mov ebp eax +
jz loc_42F7D0  +
mov [esp+9Ch+var_98] edi +
mov [esp+9Ch+var_9C] eax +
call strcpy  +
mov [esp+9Ch+var_94] 100h +
mov [esp+9Ch+var_98] ebp +
mov [esp+9Ch+var_9C] esi +
call near ptr dword_410C20  +
test eax eax +
jz loc_42F7D0  +
mov edx [ebx+4] +
mov ecx eax +
mov edi [ebx+14h] +
mov dword ptr [eax+54h] 0 +
mov dword ptr [eax+40h] 2 +
mov [eax+24h] edx +
mov edx offset a_qnx_core_st_0 +
mov [eax+50h] edi +
mov eax esi +
call sub_4230C0  +
add esp 9Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax dword_476720 +
jmp loc_42F6EE  +
xor eax eax +
jmp loc_42F603  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [esp+4Ch+arg_4] +
mov eax [esp+4Ch+arg_0] +
mov edx [ebx+8] +
mov eax [eax+4] +
cmp edx 304h +
mov ecx [eax+1B0h] +
jz loc_4300E0  +
jbe loc_42F8A8  +
cmp edx 400h +
jz loc_42FC01  +
ja loc_42F932  +
cmp edx 307h +
jz loc_42FE05  +
nop   +
lea esi [esi+0] +
jbe loc_42FAB0  +
cmp edx 309h +
jz loc_42FFE0  +
jb loc_42FF08  +
cmp edx 30Ah +
jnz loc_42F9C1  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390VxrsHi +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
cmp edx 100h +
jz loc_430134  +
jbe loc_42F997  +
cmp edx 300h +
jz loc_42FE60  +
jbe loc_42FA38  +
cmp edx 302h +
jz loc_430034  +
ja loc_42FCD4  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Timer +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
cmp edx 403h +
jz loc_42FEB4  +
nop   +
jbe loc_42F9D0  +
cmp edx 46E62B7Fh +
jz loc_430088  +
cmp edx 53494749h +
jz loc_42FDD4  +
cmp edx 46494C45h +
jnz loc_42F9C1  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_note_linuxcor +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
cmp edx 3 +
jz loc_42FFC1  +
jbe loc_42FB15  +
cmp edx 0Dh +
jz loc_42FFC1  +
cmp edx 12h +
jz loc_42FB60  +
cmp edx 6 +
jz loc_42FF60  +
mov ebp 1 +
jmp loc_42FB53  +
cmp edx 401h +
jz loc_42FC80  +
cmp edx 402h +
jnz loc_42F9C1  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regAarchHwBre +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
cmp edx 102h +
jz loc_42FD80  +
cmp edx 202h +
jnz loc_42F9C1  +
mov eax [ebx] +
cmp eax 6 +
jz loc_430188  +
cmp eax 8 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aFreebsd +
mov ecx 8 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regXstate +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
cmp edx 305h +
jz loc_42FD28  +
cmp edx 306h +
jnz loc_42F9C1  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390LastBr +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
cmp edx 1 +
jz loc_42FC55  +
cmp edx 2 +
jnz loc_42F9C1  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_reg2 +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
add esp 4Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebx+4] 2D7h +
jbe loc_42F9C1  +
mov esi [ebx+0Ch] +
mov edi offset aWin32 +
mov ecx 5 +
cmps   +
jnz loc_42F9C1  +
mov edx [ebx+10h] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
cmp eax 2 +
jz loc_430255  +
cmp eax 3 +
jz loc_4301AF  +
cmp eax 1 +
jnz loc_42F9C1  +
mov eax [esp+4Ch+arg_0] +
mov ebp 1 +
mov edi [ebx+10h] +
mov eax [eax+0A0h] +
lea edx [edi+8] +
mov esi [eax+930h] +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov edx [ebx+10h] +
add edx 0Ch +
mov [esi+4] eax +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+0A0h] +
mov esi [eax+930h] +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov [esi] eax +
jmp loc_42FB53  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regArmVfp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
mov eax [ecx+0FCh] +
mov ebp 1 +
test eax eax +
jz loc_42FB53  +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] edi +
call eax  +
jmp loc_42FB53  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regAarchTls +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Todpre +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Prefix +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regPpcVsx +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_note_linuxc_0 +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390System +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390HighGp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov esi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regAarchHwWat +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] esi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Tdb +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
mov eax [esp+4Ch+arg_0] +
xor ebp ebp +
mov [esp+4Ch+var_44] 100h +
mov [esp+4Ch+var_48] offset a_auxv +
mov [esp+4Ch+var_4C] eax +
call near ptr dword_410C20  +
test eax eax +
mov esi eax +
jz loc_42FB53  +
mov eax [ebx+4] +
mov bp 1 +
mov [esi+24h] eax +
mov eax [ebx+14h] +
mov dword ptr [esi+54h] 0 +
mov [esi+50h] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call loc_40CC50  +
test eax eax +
lea edx [eax+1Fh] +
cmovs eax edx +
sar eax 5 +
add eax 1 +
mov [esi+40h] eax +
jmp loc_42FB53  +
mov eax [ecx+100h] +
mov ebp 1 +
test eax eax +
jnz loc_42FC68  +
jmp loc_42FB53  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390VxrsLo +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Todcmp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regXfp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regS390Ctrs +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
cmp dword ptr [ebx] 6 +
mov ebp 1 +
jnz loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
cmps   +
jnz loc_42FB53  +
mov eax [ebx+4] +
mov edi [ebx+14h] +
mov [esp+4Ch+var_3C] 0 +
mov [esp+4Ch+var_48] offset a_regPpcVmx +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_4C] eax +
call sub_42F490  +
mov ebp eax +
jmp loc_42FB53  +
mov esi [ebx+0Ch] +
mov edi offset aLinux +
mov ecx 6 +
mov ebp 1 +
cmps   +
setnbe dl  +
setb al  +
cmp dl al +
jnz loc_42FB53  +
jmp loc_42FA7E  +
mov eax [esp+4Ch+arg_0] +
lea esi [esp+4Ch+var_2A] +
mov edi [ebx+10h] +
mov eax [eax+4] +
lea edx [edi+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov [esp+4Ch+var_48] offset a_module08lx +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
lea ebp [eax+1] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] eax +
call sub_407B20  +
test eax eax +
mov edi eax +
jz loc_43032F  +
mov [esp+4Ch+var_44] ebp +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_4C] eax +
call memcpy  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] 100h +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] eax +
call near ptr dword_410C20  +
test eax eax +
jz loc_43032F  +
mov edx [ebx+4] +
mov ebp 1 +
mov esi [ebx+14h] +
mov dword ptr [eax+54h] 0 +
mov dword ptr [eax+40h] 2 +
mov [eax+24h] edx +
mov [eax+50h] esi +
jmp loc_42FB53  +
mov eax [esp+4Ch+arg_0] +
mov esi [ebx+10h] +
mov eax [eax+4] +
lea edx [esi+8] +
lea esi [esp+4Ch+var_2A] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
mov [esp+4Ch+var_48] offset a_regLd +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_44] eax +
call sprintf  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
lea ebp [eax+1] +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] ebp +
mov [esp+4Ch+var_4C] eax +
call sub_407B20  +
test eax eax +
mov edi eax +
jz loc_43032F  +
mov [esp+4Ch+var_48] esi +
mov [esp+4Ch+var_44] ebp +
mov [esp+4Ch+var_4C] eax +
call memcpy  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_44] 100h +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_4C] eax +
call near ptr dword_410C20  +
test eax eax +
mov esi eax +
jz loc_43032F  +
mov dword ptr [eax+24h] 2CCh +
mov eax [ebx+14h] +
mov edx [ebx+10h] +
mov dword ptr [esi+54h] 0 +
mov dword ptr [esi+40h] 2 +
add eax 0Ch +
mov [esi+50h] eax +
mov eax [esp+4Ch+arg_0] +
add edx 8 +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+4Ch+var_4C] edx +
call eax  +
test eax eax +
jz loc_42F9C1  +
mov eax [esp+4Ch+arg_0] +
mov ecx esi +
mov edx offset a_reg +
call sub_4230C0  +
test eax eax +
setnz al  +
movzx eax al +
mov ebp eax +
jmp loc_42FB53  +
xor ebp ebp +
jmp loc_42FB53  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_4] +
mov ebx [esp+10h+arg_8] +
mov [esp+10h+var_C] 0 +
mov [esp+10h+var_10] edi +
mov [esp+10h+var_8] ebx +
call memchr  +
mov edx eax +
sub edx edi +
test eax eax +
cmovnz ebx edx +
lea eax [ebx+1] +
mov [esp+10h+var_C] eax +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_10] eax +
call sub_407B20  +
test eax eax +
mov esi eax +
jz loc_430398  +
mov [esp+10h+var_8] ebx +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] eax +
call memcpy  +
mov byte ptr [esi+ebx] 0 +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
jmp sub_4303B0  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_4] +
mov esi [esp+2Ch+arg_0] +
mov edx [ebx+8] +
cmp edx 0Ah +
jz loc_4304A8  +
cmp edx 14h +
jz loc_430520  +
cmp edx 15h +
jz loc_430550  +
cmp edx 16h +
jz loc_430580  +
cmp edx 0Bh +
jz loc_430450  +
cmp edx 17h +
mov edi 1 +
jz loc_430400  +
add esp 2Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_24] 100h +
mov [esp+2Ch+var_28] offset a_wcookie +
mov [esp+2Ch+var_2C] esi +
call near ptr dword_410C20  +
test eax eax +
mov ebp eax +
jz loc_4305B0  +
mov eax [ebx+4] +
mov [ebp+24h] eax +
mov eax [ebx+14h] +
mov dword ptr [ebp+54h] 0 +
mov [ebp+50h] eax +
mov [esp+2Ch+var_2C] esi +
call loc_40CC50  +
test eax eax +
lea edx [eax+1Fh] +
cmovs eax edx +
sar eax 5 +
add eax 1 +
mov [ebp+40h] eax +
jmp loc_4303F5  +
mov [esp+2Ch+var_24] 100h +
mov [esp+2Ch+var_28] offset a_auxv +
mov [esp+2Ch+var_2C] esi +
call near ptr dword_410C20  +
test eax eax +
mov edi eax +
jz loc_4305B0  +
mov eax [ebx+4] +
mov [edi+24h] eax +
mov eax [ebx+14h] +
mov dword ptr [edi+54h] 0 +
mov [edi+50h] eax +
mov [esp+2Ch+var_2C] esi +
call loc_40CC50  +
test eax eax +
lea edx [eax+1Fh] +
cmovs eax edx +
sar eax 5 +
add eax 1 +
mov [edi+40h] eax +
mov edi 1 +
jmp loc_4303F5  +
mov eax [esi+0A0h] +
mov ecx [ebx+10h] +
mov edi [eax+930h] +
mov eax [esi+4] +
lea edx [ecx+8] +
mov eax [eax+4Ch] +
mov [esp+2Ch+var_2C] edx +
call eax  +
mov ecx [ebx+10h] +
lea edx [ecx+20h] +
mov [edi] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov eax [esi+4] +
mov eax [eax+4Ch] +
mov [esp+2Ch+var_2C] edx +
call eax  +
mov [edi+4] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov [esp+2Ch+var_24] 1Fh +
mov eax [ebx+10h] +
mov [esp+2Ch+var_2C] esi +
add eax 48h +
mov [esp+2Ch+var_28] eax +
call sub_430340  +
mov [edi+10h] eax +
mov edi 1 +
jmp loc_4303F5  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] offset a_reg +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] esi +
call sub_42F490  +
mov edi eax +
jmp loc_4303F5  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] offset a_reg2 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] esi +
call sub_42F490  +
mov edi eax +
jmp loc_4303F5  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] offset a_regXfp +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] ecx +
mov [esp+2Ch+var_2C] esi +
call sub_42F490  +
mov edi eax +
jmp loc_4303F5  +
xor edi edi +
jmp loc_4303F5  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+34h] +
mov dword ptr [esp+4] 40h +
mov esi [esp+30h] +
mov eax [ebx+0Ch] +
mov [esp] eax +
call strchr  +
test eax eax +
jz loc_4305FF  +
add eax 1 +
mov [esp] eax +
call atoi  +
mov edx [esi+0A0h] +
mov edx [edx+930h] +
mov [edx+8] eax +
mov edx [ebx+8] +
cmp edx 1 +
jz loc_4306B5  +
cmp edx 1Fh +
mov edi 1 +
ja loc_430620  +
add esp 20h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov [esp] esi +
call sub_40ECB0  +
cmp eax 6 +
jz loc_430670  +
cmp eax 26h +
jz loc_430670  +
mov eax [ebx+8] +
cmp eax 21h +
jz loc_430684  +
cmp eax 23h +
jnz loc_430615  +
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp] esi +
mov dword ptr [esp+10h] 0 +
mov [esp+8] eax +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] offset a_reg2 +
call sub_42F490  +
add esp 20h +
pop ebx  +
pop esi  +
mov edi eax +
mov eax edi +
pop edi  +
retn   +
***
mov eax [ebx+8] +
cmp eax 20h +
jz loc_430684  +
cmp eax 22h +
jz loc_43063F  +
mov edi 1 +
jmp loc_430615  +
***
mov eax [ebx+4] +
mov ecx [ebx+14h] +
mov [esp] esi +
mov dword ptr [esp+10h] 0 +
mov [esp+8] eax +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] offset a_reg +
call sub_42F490  +
add esp 20h +
pop ebx  +
pop esi  +
mov edi eax +
mov eax edi +
pop edi  +
retn   +
***
mov eax [esi+0A0h] +
mov ecx [ebx+10h] +
mov edi [eax+930h] +
mov eax [esi+4] +
lea edx [ecx+8] +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
mov ecx [ebx+10h] +
lea edx [ecx+50h] +
mov [edi] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov eax [esi+4] +
mov eax [eax+4Ch] +
mov [esp] edx +
call eax  +
mov [edi+4] eax +
mov eax [esi+0A0h] +
mov edi [eax+930h] +
mov dword ptr [esp+8] 1Fh +
mov eax [ebx+10h] +
mov [esp] esi +
add eax 7Ch +
mov [esp+4] eax +
call sub_430340  +
mov ecx [ebx+14h] +
mov [edi+10h] eax +
mov eax [ebx+4] +
mov [esp+0Ch] ecx +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+4] offset a_note_netbsdco +
mov [esp+8] eax +
mov [esp] esi +
call sub_42F490  +
mov edi eax +
jmp loc_430615  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+1Ch+arg_C] +
mov ebx [esp+1Ch+arg_18] +
test edx edx +
jz loc_430876  +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
lea esi [eax+1] +
add eax 4 +
and eax 0FFFFFFFCh +
lea edx [ebx+3] +
and edx 0FFFFFFFCh +
lea ecx [eax+edx+0Ch] +
mov edx [esp+1Ch+arg_8] +
mov eax ecx +
mov [esp+1Ch+var_10] ecx +
add eax [edx] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_1C] eax +
call realloc  +
test eax eax +
mov ebp eax +
jz loc_43086C  +
mov eax [esp+1Ch+arg_8] +
mov ecx [esp+1Ch+var_10] +
mov eax [eax] +
lea edi [ebp+eax+0] +
add ecx eax +
mov eax [esp+1Ch+arg_8] +
mov [eax] ecx +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] esi +
call eax  +
mov eax [esp+1Ch+arg_0] +
lea ecx [edi+4] +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+1Ch+var_18] ecx +
mov [esp+1Ch+var_1C] ebx +
call eax  +
mov eax [esp+1Ch+arg_0] +
lea ecx [edi+8] +
add edi 0Ch +
mov eax [eax+4] +
mov eax [eax+54h] +
mov [esp+1Ch+var_18] ecx +
mov ecx [esp+1Ch+arg_10] +
mov [esp+1Ch+var_1C] ecx +
call eax  +
mov eax [esp+1Ch+arg_C] +
test eax eax +
jz loc_430841  +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] eax +
call memcpy  +
lea ecx [edi+esi] +
test esi 3 +
mov edi ecx +
jz loc_430841  +
add edi 1 +
lea eax [edi+esi] +
sub eax ecx +
test al 3 +
mov byte ptr [edi-1] 0 +
jnz loc_430831  +
mov eax [esp+1Ch+arg_14] +
mov [esp+1Ch+var_1C] edi +
add edi ebx +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] eax +
call memcpy  +
test bl 3 +
jz loc_43086C  +
sub edi ebx +
nop   +
mov byte ptr [edi+ebx] 0 +
add ebx 1 +
test bl 3 +
jnz loc_430860  +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
xor esi esi +
jmp loc_43077C  +
***
push ebx  +
sub esp 28h +
mov edx [esp+30h] +
mov ebx [esp+34h] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
mov eax [eax+104h] +
test eax eax +
jz loc_4308D1  +
mov ecx [esp+40h] +
mov dword ptr [esp+0Ch] 3 +
mov [esp+4] ebx +
mov [esp] edx +
mov [esp+14h] ecx +
mov ecx [esp+3Ch] +
mov [esp+10h] ecx +
mov ecx [esp+38h] +
mov [esp+8] ecx +
call eax  +
test eax eax +
jz loc_4308D1  +
add esp 28h +
pop ebx  +
retn   +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_4308CC  +
***
push ebp  +
xor eax eax +
push edi  +
mov ecx 1Fh +
push esi  +
push ebx  +
sub esp 0ACh +
mov ebx [esp+0CCh] +
lea ebp [esp+24h] +
mov edi ebp +
mov esi [esp+0C0h] +
stos   +
lea ecx [esp+28h] +
movzx eax byte ptr [ebx] +
mov edx [ebx+4] +
mov [esp+24h] al +
movzx eax byte ptr [ebx+1] +
mov [esp+25h] al +
movzx eax byte ptr [ebx+2] +
mov [esp+26h] al +
movzx eax byte ptr [ebx+3] +
mov [esp+27h] al +
mov eax [esi+4] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea ecx [esp+2Ch] +
mov edx [ebx+8] +
mov eax [eax+60h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea ecx [esp+2Eh] +
mov edx [ebx+0Ch] +
mov eax [eax+60h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+30h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+10h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+34h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+14h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+38h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+18h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+3Ch] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+1Ch] +
mov [esp] edx +
call eax  +
lea eax [ebx+20h] +
add ebx 31h +
mov [esp+4] eax +
lea eax [esp+40h] +
mov dword ptr [esp+8] 10h +
mov [esp] eax +
call strncpy  +
lea eax [esp+50h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 50h +
mov [esp] eax +
call strncpy  +
mov eax [esp+0C8h] +
mov [esp+14h] ebp +
mov [esp] esi +
mov dword ptr [esp+18h] 7Ch +
mov [esp+8] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+10h] 3 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+4] eax +
call sub_430750  +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
xor eax eax +
push edi  +
mov ecx 22h +
push esi  +
push ebx  +
sub esp 0BCh +
mov ebx [esp+0DCh] +
lea ebp [esp+28h] +
mov edi ebp +
mov esi [esp+0D0h] +
stos   +
lea edx [esp+2Ch] +
movzx eax byte ptr [ebx] +
mov [esp+28h] al +
movzx eax byte ptr [ebx+1] +
mov [esp+29h] al +
movzx eax byte ptr [ebx+2] +
mov [esp+2Ah] al +
movzx eax byte ptr [ebx+3] +
mov [esp+2Bh] al +
mov eax [esi+4] +
mov eax [eax+48h] +
mov [esp+8] edx +
mov edi [ebx+4] +
mov dword ptr [esp+4] 0 +
mov [esp] edi +
call eax  +
mov eax [esi+4] +
lea ecx [esp+38h] +
mov edx [ebx+8] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea ecx [esp+3Ch] +
mov edx [ebx+0Ch] +
mov eax [eax+54h] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+40h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+10h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+44h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+14h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+48h] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+18h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [esp+4Ch] +
mov eax [eax+54h] +
mov [esp+4] edx +
mov edx [ebx+1Ch] +
mov [esp] edx +
call eax  +
lea eax [ebx+20h] +
add ebx 31h +
mov [esp+4] eax +
lea eax [esp+50h] +
mov dword ptr [esp+8] 10h +
mov [esp] eax +
call strncpy  +
lea eax [esp+60h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 50h +
mov [esp] eax +
call strncpy  +
mov eax [esp+0D8h] +
mov [esp+14h] ebp +
mov [esp] esi +
mov dword ptr [esp+18h] 88h +
mov [esp+8] eax +
mov eax [esp+0D4h] +
mov dword ptr [esp+10h] 3 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+4] eax +
call sub_430750  +
add esp 0BCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 28h +
mov edx [esp+30h] +
mov ebx [esp+34h] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
mov eax [eax+104h] +
test eax eax +
jz loc_430C10  +
mov ecx [esp+44h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+4] ebx +
mov [esp] edx +
mov [esp+18h] ecx +
mov ecx [esp+40h] +
mov [esp+14h] ecx +
mov ecx [esp+3Ch] +
mov [esp+10h] ecx +
mov ecx [esp+38h] +
mov [esp+8] ecx +
call eax  +
test eax eax +
jz loc_430C10  +
add esp 28h +
pop ebx  +
retn   +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_430C04  +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 2 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 46E62B7Fh +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov edx [esp+30h] +
mov eax [edx+4] +
mov ecx [eax+1B0h] +
mov eax offset aFreebsd +
cmp dword ptr [ecx+0Ch] 9 +
mov ecx offset aLinux +
mov dword ptr [esp+10h] 202h +
mov [esp] edx +
cmovnz eax ecx +
mov ecx [esp+40h] +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+18h] ecx +
mov ecx [esp+3Ch] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+14h] ecx +
mov [esp+4] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 100h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 102h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 301h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 302h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 303h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 304h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 305h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 306h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 307h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 308h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 309h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 30Ah +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 400h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 401h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 402h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+10h] 403h +
mov dword ptr [esp+0Ch] offset aLinux +
mov [esp+18h] eax +
mov eax [esp+3Ch] +
mov [esp+14h] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_430750  +
add esp 2Ch +
retn   +
***
push ebp  +
mov ecx 6 +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+50h] +
mov edi [esp+64h] +
mov ebp [esp+58h] +
mov ebx [esp+60h] +
mov [esp+24h] eax +
mov eax [esp+54h] +
mov [esp+2Ch] edi +
mov edi offset a_reg2 +
mov [esp+28h] eax +
mov eax [esp+5Ch] +
mov esi eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_431407  +
mov edi offset a_regXfp +
mov ecx 9 +
mov esi eax +
cmps   +
jz loc_431490  +
mov edi offset a_regXstate +
mov ecx 0Ch +
mov esi eax +
cmps   +
jz loc_431443  +
mov edi offset a_regPpcVmx +
mov ecx 0Dh +
mov esi eax +
cmps   +
jz loc_4314A6  +
mov edi offset a_regPpcVsx +
mov ecx 0Dh +
mov esi eax +
cmps   +
jz loc_4314C0  +
mov edi offset a_regS390HighGp +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_4314D6  +
mov edi offset a_regS390Timer +
mov ecx 10h +
mov esi eax +
cmps   +
jz loc_431470  +
mov edi offset a_regS390Todcmp +
mov ecx 11h +
mov esi eax +
cmps   +
jz loc_431510  +
mov edi offset a_regS390Todpre +
mov ecx 12h +
mov esi eax +
cmps   +
jz loc_431530  +
mov edi offset a_regS390Ctrs +
mov ecx 0Fh +
mov esi eax +
cmps   +
jz loc_431550  +
mov edi offset a_regS390Prefix +
mov ecx 11h +
mov esi eax +
cmps   +
jz loc_431570  +
mov edi offset a_regS390LastBr +
mov ecx 15h +
mov esi eax +
cmps   +
jz loc_431590  +
mov edi offset a_regS390System +
mov ecx 16h +
mov esi eax +
cmps   +
jz loc_4314F0  +
mov edi offset a_regS390Tdb +
mov ecx 0Eh +
mov esi eax +
cmps   +
jz loc_4315B0  +
mov edi offset a_regS390VxrsLo +
mov ecx 13h +
mov esi eax +
cmps   +
jz loc_4315C9  +
mov edi offset a_regS390VxrsHi +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_4315E2  +
mov edi offset a_regArmVfp +
mov ecx 0Dh +
mov esi eax +
cmps   +
jz loc_4315FB  +
mov edi offset a_regAarchTls +
mov ecx 0Fh +
mov esi eax +
cmps   +
jz loc_431614  +
mov edi offset a_regAarchHwBre +
mov ecx 14h +
mov esi eax +
cmps   +
jz loc_43162D  +
mov esi eax +
mov ecx 14h +
mov edi offset a_regAarchHwWat +
cmps   +
setnbe al  +
setb cl  +
mov esi eax +
xor eax eax +
mov edx esi +
cmp dl cl +
jnz loc_43143B  +
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 403h +
mov [esp+18h] eax +
jmp loc_431484  +
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 2 +
mov dword ptr [esp+0Ch] offset aCore +
mov [esp+18h] eax +
mov eax [esp+28h] +
mov [esp+8] ebp +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_430750  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+2Ch] +
mov [esp+5Ch] ebx +
mov [esp+58h] ebp +
mov [esp+60h] eax +
mov eax [esp+28h] +
mov [esp+54h] eax +
mov eax [esp+24h] +
mov [esp+50h] eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_430CC0  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 301h +
mov [esp+18h] eax +
mov dword ptr [esp+0Ch] offset aLinux +
jmp loc_431423  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 46E62B7Fh +
mov [esp+18h] eax +
jmp loc_431484  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 100h +
mov [esp+18h] eax +
jmp loc_431484  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 102h +
mov [esp+18h] eax +
jmp loc_431484  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 300h +
mov [esp+18h] eax +
jmp loc_431484  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 307h +
mov [esp+18h] eax +
jmp loc_431484  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 302h +
mov [esp+18h] eax +
jmp loc_431484  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 303h +
mov [esp+18h] eax +
jmp loc_431484  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 304h +
mov [esp+18h] eax +
jmp loc_431484  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 305h +
mov [esp+18h] eax +
jmp loc_431484  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 306h +
mov [esp+18h] eax +
jmp loc_431484  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 308h +
mov [esp+18h] eax +
jmp loc_431484  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 309h +
mov [esp+18h] eax +
jmp loc_431484  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 30Ah +
mov [esp+18h] eax +
jmp loc_431484  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 400h +
mov [esp+18h] eax +
jmp loc_431484  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 401h +
mov [esp+18h] eax +
jmp loc_431484  +
***
mov eax [esp+2Ch] +
mov [esp+14h] ebx +
mov dword ptr [esp+10h] 402h +
mov [esp+18h] eax +
jmp loc_431484  +
***
sub esp 1Ch +
mov eax [esp+20h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_431670  +
mov eax [eax+0A0h] +
mov eax [eax+30h] +
shl eax 5 +
add esp 1Ch +
retn   +
***
mov dword ptr [esp] 3 +
call sub_40C770  +
mov eax 0FFFFFFFFh +
jmp loc_43166C  +
***
push ebx  +
sub esp 18h +
mov eax [esp+20h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_4316D0  +
mov eax [eax+0A0h] +
mov ebx [eax+30h] +
mov eax [eax+44h] +
mov edx ebx +
mov [esp+4] eax +
mov eax [esp+24h] +
shl edx 5 +
mov [esp+8] edx +
mov [esp] eax +
call memcpy  +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
***
mov dword ptr [esp] 3 +
call sub_40C770  +
mov eax 0FFFFFFFFh +
jmp loc_4316C8  +
***
xor eax eax +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_8] +
mov eax [esp+10h+arg_4] +
mov ebx [edi] +
mov edx [eax] +
mov ecx [ebx+3Ch] +
mov esi [ebx+38h] +
add esi edx +
add esi [ecx+1Ch] +
test byte ptr [ebx+16h] 80h +
jz loc_43172E  +
movzx eax byte ptr [eax+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_431737  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 100h +
jnz loc_43172E  +
mov eax [ebx+8Ch] +
mov ecx [esp+10h+arg_C] +
mov eax [eax+88h] +
add edx [ecx+8] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_8] eax +
mov eax [esp+10h+arg_0] +
mov [esp+10h+var_4] edx +
mov [esp+10h+var_10] eax +
call sub_450BC0  +
mov edx [edi] +
mov ecx [esp+10h+arg_C] +
cmp edx ebx +
mov [ecx+8] eax +
jz loc_431788  +
test byte ptr [ebx+15h] 80h +
jz loc_4317A0  +
mov [ebx+7Ch] edx +
mov ebx [edi] +
mov ecx [ebx+3Ch] +
mov edx [ebx+38h] +
mov edi [esp+10h+arg_C] +
add edx [ecx+1Ch] +
sub edx esi +
add eax edx +
mov [edi+8] eax +
jmp loc_43172E  +
mov ebx edx +
jmp loc_431788  +
***
push ebx  +
mov ecx [esp+arg_8] +
mov esi [esp+arg_4] +
mov eax [esp+arg_C] +
mov ebx [ecx] +
movzx edx word ptr [ebx+18h] +
and dx 380h +
cmp dx 100h +
jz loc_4317D7  +
add eax [esi] +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+8Ch] +
add eax [esi] +
mov edx [edx+88h] +
mov [esp+arg_C] eax +
mov [esp+arg_4] ecx +
mov [esp+arg_8] edx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_450BC0  +
***
mov ecx [esp+arg_8] +
mov ebx [esp+arg_0] +
mov esi [esp+arg_4] +
mov eax [esp+arg_C] +
movzx edx word ptr [ecx+18h] +
shr dx 7 +
and edx 7 +
cmp edx 1 +
jz loc_431870  +
cmp edx 3 +
jnz loc_431840  +
mov [esp+arg_C] eax +
mov [esp+arg_8] ecx +
mov [esp+arg_4] esi +
mov [esp+arg_0] ebx +
pop ebx  +
pop esi  +
jmp sub_447990  +
test byte ptr [ecx+17h] 4 +
jz loc_431868  +
mov edx [ecx+24h] +
sub edx eax +
mov eax edx +
mov edx [ebx+4] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
movzx edx byte ptr [edx+0Ah] +
shr dl 3 +
movzx edx dl +
sub eax edx +
pop ebx  +
pop esi  +
retn   +
mov edx [ecx+8Ch] +
mov edx [edx+88h] +
mov [esp+arg_8] eax +
mov [esp+arg_0] ecx +
mov [esp+arg_4] edx +
pop ebx  +
pop esi  +
jmp loc_451C20  +
***
mov eax [esp+4] +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+13Ch] +
jmp edx  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov esi [esp+70h] +
mov eax [esi+4] +
mov edi [eax+1B0h] +
mov eax [esp+84h] +
mov dword ptr [eax] 0 +
mov eax [esi+28h] +
shr eax 5 +
test al 42h +
jz loc_431924  +
mov ebx [esp+7Ch] +
test ebx ebx +
jle loc_431924  +
mov ecx [edi+140h] +
test ecx ecx +
jz loc_431924  +
mov eax [edi+168h] +
test eax eax +
jz loc_431BB0  +
mov [esp+4] eax +
mov [esp] esi +
call sub_410840  +
test eax eax +
mov ebp eax +
jz loc_431924  +
mov ebx [eax+8Ch] +
mov eax [esi+0A0h] +
mov eax [eax+910h] +
cmp [ebx+1Ch] eax +
jz loc_431930  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx+4] +
cmp eax 4 +
jz loc_43193D  +
cmp eax 9 +
jnz loc_431924  +
mov dword ptr [esp+4] offset a_plt +
mov [esp] esi +
call sub_410840  +
test eax eax +
mov [esp+24h] eax +
jz loc_431924  +
mov eax [esi+4] +
mov edx [esp+80h] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
mov eax [eax+28h] +
mov dword ptr [esp+0Ch] 1 +
mov [esp+8] edx +
mov [esp+4] ebp +
mov [esp] esi +
call eax  +
test eax eax +
jz loc_431BE2  +
mov eax [ebp+24h] +
xor edx edx +
div  dword ptr [ebx+28h] +
mov edx [ebp+44h] +
mov ecx eax +
mov [esp+1Ch] eax +
lea eax [eax+eax*2] +
shl eax 3 +
test ecx ecx +
mov ebx eax +
mov [esp+18h] eax +
jle loc_431BD9  +
mov eax [edi+174h] +
xor ecx ecx +
mov [esp+20h] edi +
mov [esp+28h] ebp +
mov ebp edx +
mov [esp+70h] esi +
mov esi ecx +
movzx eax byte ptr [eax+9] +
shl eax 4 +
mov edi eax +
mov eax [ebp+0] +
mov eax [eax] +
mov eax [eax+4] +
mov [esp] eax +
call strlen  +
mov edx [ebp+8] +
add eax ebx +
lea ebx [eax+5] +
add eax 10h +
test edx edx +
cmovnz ebx eax +
add esi 1 +
add ebp edi +
cmp [esp+1Ch] esi +
jnz loc_4319D1  +
mov edi [esp+20h] +
mov ebp [esp+28h] +
mov esi [esp+70h] +
mov [esp] ebx +
call sub_40EFC0  +
mov ebx eax +
mov eax [esp+84h] +
test ebx ebx +
mov [eax] ebx +
jz loc_431BE2  +
mov eax [esp+18h] +
mov ecx [ebp+44h] +
mov ebp [esp+1Ch] +
add eax ebx +
test ebp ebp +
jle loc_431924  +
mov [esp+20h] edi +
mov edi eax +
mov [esp+70h] esi +
mov esi ecx +
mov dword ptr [esp+2Ch] 0 +
mov dword ptr [esp+18h] 0 +
jmp loc_431A92  +
add dword ptr [esp+2Ch] 1 +
add edi 5 +
add ebx 18h +
mov dword ptr [edi-5] 746C7040h +
mov byte ptr [edi-1] 0 +
mov eax [esp+20h] +
add dword ptr [esp+18h] 1 +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
shl eax 4 +
add esi eax +
mov eax [esp+18h] +
cmp [esp+1Ch] eax +
jz loc_431BD0  +
mov ecx [esp+24h] +
mov eax [esp+20h] +
mov eax [eax+140h] +
mov [esp+4] ecx +
mov ecx [esp+18h] +
mov [esp+8] esi +
mov [esp] ecx +
call eax  +
cmp eax 0FFFFFFFFh +
jz loc_431A6C  +
mov ecx [esi] +
mov edx [ecx] +
mov [esp+28h] ecx +
mov ebp [edx] +
mov [ebx] ebp +
mov ebp [edx+4] +
mov [ebx+4] ebp +
mov ebp [edx+8] +
mov [ebx+8] ebp +
mov ebp [edx+0Ch] +
mov [ebx+0Ch] ebp +
mov ecx [edx+10h] +
test ebp 1 +
mov [ebx+10h] ecx +
mov edx [edx+14h] +
mov [ebx+14h] edx +
jnz loc_431AEB  +
or ebp 2 +
mov edx [esp+24h] +
or ebp 200000h +
mov [ebx+0Ch] ebp +
sub eax [edx+1Ch] +
mov [ebx+10h] edx +
mov [ebx+4] edi +
mov [ebx+8] eax +
mov eax [esp+28h] +
mov dword ptr [ebx+14h] 0 +
mov eax [eax] +
mov edx [eax+4] +
mov [esp] edx +
mov [esp+28h] edx +
call strlen  +
mov edx [esp+28h] +
mov [esp] edi +
mov [esp+4] edx +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov edx [esi+8] +
add edi ebp +
test edx edx +
jz loc_431A56  +
mov eax 302Bh +
mov [edi] ax +
lea eax [edi+3] +
mov byte ptr [edi+2] 78h +
lea edi [esp+32h] +
mov [esp+28h] eax +
mov eax [esi+8] +
mov [esp+8] eax +
lea eax [esp+32h] +
mov [esp+4] eax +
mov eax [esp+70h] +
mov [esp] eax +
call sub_40D080  +
cmp byte ptr [esp+32h] 30h +
jnz loc_431B88  +
lea esi [esi+0] +
add edi 1 +
cmp byte ptr [edi] 30h +
jz loc_431B80  +
mov [esp] edi +
call strlen  +
mov [esp+4] edi +
mov edi [esp+28h] +
mov [esp] edi +
mov ebp eax +
mov [esp+8] eax +
lea edi [edi+ebp] +
call memcpy  +
jmp loc_431A56  +
***
test byte ptr [edi+1ACh] 20h +
mov eax offset a_rela_plt +
mov edx offset a_rel_plt +
cmovz eax edx +
jmp loc_4318FB  +
***
mov eax [esp+2Ch] +
jmp loc_431926  +
***
mov ebx [esp+18h] +
jmp loc_431A08  +
***
mov eax 0FFFFFFFFh +
jmp loc_431926  +
***
mov eax [esp+4] +
and eax 0FFFFFFF7h +
cmp eax 2 +
setz al  +
movzx eax al +
retn   +
***
pop ebx  +
retn   +
***
sub esp 14h +
mov esi [eax+78h] +
test byte ptr [edx+34h] 10h +
jnz loc_431CCE  +
movzx ebx byte ptr [eax] +
and ebx 3 +
cmp bl 2 +
jz loc_431CCE  +
test byte ptr [eax+1] 4 +
jz loc_431CC4  +
cmp byte ptr [edx+30h] 1 +
jz loc_431CF7  +
test ecx ecx +
jz loc_431CC4  +
movzx eax byte ptr [ecx+0Ch] +
and eax 0Fh +
cmp al 1 +
jz loc_431CF7  +
test esi esi +
jz loc_431CCE  +
cmp byte ptr [edx+0Ch] 0 +
jz loc_431CD4  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov ecx [edx+4] +
mov eax [esi+10h] +
mov [esp+14h+var_8] edx +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_14] esi +
call eax  +
mov edx [esp+14h+var_8] +
test eax eax +
jz loc_431CCE  +
or byte ptr [edx+34h] 10h +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
jmp sub_431D10  +
***
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [ecx+18h] +
sub eax [edx+18h] +
cmp eax 0 +
jz loc_431D36  +
mov eax 0FFFFFFFFh +
jle loc_431D34  +
mov eax 1 +
pop ebx  +
retn   +
mov eax [ecx+14h] +
mov ebx [edx+14h] +
mov eax [eax+4] +
sub eax [ebx+4] +
cmp eax 0 +
jz loc_431D50  +
jg loc_431D2F  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
mov ecx [ecx+2Ch] +
xor eax eax +
sub ecx [edx+2Ch] +
cmp ecx 0 +
jz loc_431D34  +
jg loc_431D2F  +
jmp loc_431D49  +
***
jmp loc_431D70  +
mov eax [esp+4] +
mov edx [esp+8] +
mov eax [eax] +
mov edx [edx] +
mov eax [eax+10h] +
sub eax [edx+10h] +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx+1] +
movzx ecx byte ptr [edx+2] +
shl eax 8 +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx] +
movzx edx byte ptr [edx+3] +
or eax ecx +
shl edx 18h +
or eax edx +
retn   +
***
mov edx [esp+4] +
movzx eax byte ptr [edx] +
movzx ecx byte ptr [edx+1] +
shl eax 18h +
shl ecx 10h +
or eax ecx +
movzx ecx byte ptr [edx+3] +
movzx edx byte ptr [edx+2] +
or eax ecx +
shl edx 8 +
or eax edx +
retn   +
***
mov eax [esp+arg_0] +
movzx ecx byte ptr [eax+1] +
movzx edx byte ptr [eax+2] +
shl ecx 8 +
shl edx 10h +
or edx ecx +
movzx ecx byte ptr [eax] +
movzx eax byte ptr [eax+3] +
or edx ecx +
shl eax 18h +
or eax edx +
retn   +
***
mov ecx [esp+arg_0] +
movzx eax byte ptr [ecx+4] +
movzx edx byte ptr [ecx+7] +
shl eax 18h +
or eax edx +
movzx edx byte ptr [ecx+5] +
shl edx 10h +
or edx eax +
movzx eax byte ptr [ecx+6] +
shl eax 8 +
or eax edx +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov eax [edi+44h] +
test eax eax +
jz loc_431EE8  +
mov edx [eax+8] +
test edx edx +
jz loc_431EE8  +
cmp edx 0FFFFFFFFh +
jz loc_431EE8  +
mov eax [eax+4] +
test eax eax +
jz loc_431E7F  +
mov ebx [eax-4] +
test ebx ebx +
jnz loc_431EE8  +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] edx +
mov [esp+10h+var_C] eax +
call sub_431E50  +
mov eax [edi+44h] +
mov esi [eax+4] +
test esi esi +
jz loc_431EF4  +
mov eax [eax+8] +
mov dword ptr [esi-4] 1 +
mov eax [eax+44h] +
mov ebx [eax+4] +
test ebx ebx +
jz loc_431EE8  +
mov edx [edi+14h] +
mov edx [edx+94h] +
mov edx [edx+4] +
mov edx [edx+1B0h] +
mov edx [edx+174h] +
movzx ecx byte ptr [edx+0Bh] +
mov edx [eax] +
shr edx cl +
test edx edx +
jz loc_431EE8  +
xor eax eax +
mov ecx [ebx+eax*4] +
test ecx ecx +
jz loc_431EE1  +
mov dword ptr [esi+eax*4] 1 +
add eax 1 +
cmp eax edx +
jnz loc_431ED3  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [eax+8] +
mov edx [edx+44h] +
mov ecx [edx+4] +
mov edx [edx] +
mov [eax+4] ecx +
mov [eax] edx +
jmp loc_431EE8  +
***
push ebx  +
sub esp 20h +
mov ebx [esp+20h+arg_4] +
mov edx [esp+20h+arg_0] +
mov eax [ebx+4] +
mov ecx [eax+30h] +
mov edi [ecx+4] +
mov esi [edi+1B0h] +
mov edi [edx+24h] +
test edi edi +
jg loc_431F47  +
mov dword ptr [edx+24h] 0FFFFFFFFh +
add esp 20h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edi [ebx] +
mov [edx+24h] edi +
mov esi [esi+180h] +
mov [esp+20h+var_10] 0 +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] edx +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] ecx +
call esi  +
add edi eax +
mov eax 1 +
mov [ebx] edi +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 10h +
mov edx [esp+10h+arg_4] +
mov ebx [esp+10h+arg_0] +
mov esi [edx+24h] +
mov ecx [edx] +
mov eax [edx+4] +
test esi esi +
jz loc_431F9F  +
mov [edx+4] ecx +
mov eax ecx +
mov edi [edx+8] +
cmp eax edi +
jnb loc_431FC0  +
test esi esi +
mov ecx [eax] +
jnz loc_431FB0  +
cmp ecx ebx +
ja loc_431FC0  +
cmp ebx ecx +
jz loc_431FD0  +
add eax 0Ch +
cmp eax edi +
mov [edx+4] eax +
jb loc_431FA6  +
nop   +
add esp 10h +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [edx+20h] +
mov eax [eax+4] +
shr eax cl +
test eax eax +
jz loc_43201B  +
cmp eax [edx+14h] +
jb loc_432027  +
mov ecx [edx+1Ch] +
sub eax [edx+18h] +
mov eax [ecx+eax*4] +
movzx ecx byte ptr [eax+0Ch] +
lea ebx [ecx-6] +
cmp bl 1 +
ja loc_432005  +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea ebx [ecx-6] +
cmp bl 1 +
jbe loc_431FF6  +
sub ecx 3 +
cmp cl 1 +
ja loc_431FC0  +
mov eax [eax+14h] +
mov edi [edx+10h] +
cmp [eax+94h] edi +
jz loc_432055  +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [edx+0Ch] +
lea ebx [eax+eax*4] +
lea ebx [ecx+ebx*4] +
movzx ecx byte ptr [ebx+0Ch] +
shr cl 4 +
test cl cl +
jnz loc_431FE1  +
mov ecx [ebx+10h] +
mov eax [edx+10h] +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] eax +
call sub_426C70  +
test eax eax +
jz loc_431FC0  +
mov edx [eax+7Ch] +
test edx edx +
jnz loc_43201B  +
cmp eax offset off_476230 +
jz loc_431FC0  +
cmp dword ptr [eax+3Ch] offset off_476230 +
jnz loc_431FC0  +
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 100h +
jz loc_431FC0  +
cmp ax 200h +
setnz al  +
movzx eax al +
jmp loc_432020  +
***
push edi  +
push ebx  +
mov ebx eax +
sub esp 14h +
mov ecx [eax] +
test ecx ecx +
jz loc_4321B2  +
mov eax [edx+8Ch] +
cmp ecx [eax+68h] +
jz loc_4321B2  +
mov [esp+18h+var_18] ecx +
call free  +
mov eax [ebx+0Ch] +
mov edx [esi+94h] +
test eax eax +
mov edx [edx+0A0h] +
jz loc_4321D2  +
cmp eax [edx+78h] +
jz loc_4321D2  +
mov [esp+18h+var_18] eax +
call free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_4] +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 100h +
jz loc_43220A  +
mov [esp+18h+var_14] 1AA1h +
mov [esp+18h+var_18] offset a____Binutils_3 +
call sub_40C6C0  +
and word ptr [ebx+18h] 0FC7Fh +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
test byte ptr [eax+5] 8 +
mov [esp+4Ch+var_24] edx +
mov [esp+4Ch+var_30] ecx +
jz loc_432400  +
mov eax [eax+1Ch] +
mov ebx [eax+4Ch] +
mov eax [eax+38h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+4Ch+var_20] eax +
mov eax ecx +
shr eax 2 +
test eax eax +
mov edi eax +
jnz loc_4323CB  +
mov eax [esp+4Ch+var_30] +
mov edx [esp+4Ch+arg_0] +
add eax eax +
test edx edx +
mov [esp+4Ch+var_14] eax +
jnz loc_432459  +
mov [esp+4Ch+var_34] eax +
mov edi 1 +
lea esi [esi+0] +
mov esi [esp+4Ch+var_34] +
mov eax esi +
shl eax 2 +
mov [esp+4Ch+var_4C] eax +
call sub_40EFC0  +
test eax eax +
mov ebp eax +
jz loc_432468  +
cmp edi esi +
jnb loc_4323B7  +
lea edx ds:0[edi*4] +
mov esi [esp+4Ch+var_30] +
add ebx 2 +
mov [esp+4Ch+var_3C] edx +
mov edx [esp+4Ch+var_24] +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_10] 0FFFFFFFFh +
mov [esp+4Ch+var_28] 0FFFFFFFFh +
lea edx [edx+esi*4] +
mov esi edi +
mov [esp+4Ch+var_18] edx +
mov [esp+4Ch+var_1C] ebx +
nop   +
mov edi [esp+4Ch+arg_0] +
test edi edi +
jz loc_4322F4  +
test esi 1Fh +
jz loc_4323A5  +
mov eax [esp+4Ch+var_3C] +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_44] eax +
call memset  +
mov ebx [esp+4Ch+var_30] +
mov ecx [esp+4Ch+var_24] +
test ebx ebx +
jz loc_432332  +
mov ebx [esp+4Ch+var_18] +
lea esi [esi+0] +
mov eax [ecx] +
xor edx edx +
add ecx 4 +
div  esi +
add dword ptr [ebp+edx*4+0] 1 +
cmp ecx ebx +
jnz loc_432320  +
mov eax [esp+4Ch+var_20] +
xor ebx ebx +
xor edi edi +
mov ecx [esp+4Ch+var_1C] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+8] +
imul ecx eax +
mov [esp+4Ch+var_38] eax +
nop   +
mov eax [ebp+edi*4+0] +
xor edx edx +
imul eax eax +
add ecx eax +
adc ebx edx +
add edi 1 +
cmp edi esi +
jb loc_432350  +
mov eax 1000h +
cdq   +
idiv  [esp+4Ch+var_38] +
xor edx edx +
mov edi eax +
mov eax esi +
div  edi +
add eax 1 +
imul eax eax +
imul ebx eax +
mul  ecx +
add edx ebx +
cmp edx [esp+4Ch+var_28] +
jb loc_432440  +
ja loc_432399  +
cmp eax [esp+4Ch+var_10] +
jb loc_432440  +
add [esp+4Ch+var_2C] 1 +
cmp [esp+4Ch+var_2C] 64h +
jz loc_4323B7  +
add esi 1 +
add [esp+4Ch+var_3C] 4 +
cmp [esp+4Ch+var_34] esi +
ja loc_4322E0  +
mov [esp+4Ch+var_4C] ebp +
call free  +
mov eax [esp+4Ch+var_14] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esp+4Ch+arg_0] +
mov eax ecx +
add eax eax +
mov [esp+4Ch+var_14] eax +
mov [esp+4Ch+var_34] eax +
test ebp ebp +
jz loc_432280  +
cmp edi 1 +
jz loc_432459  +
mov eax [esp+4Ch+var_14] +
and eax 1Fh +
cmp eax 1 +
adc [esp+4Ch+var_14] 0 +
jmp loc_432280  +
mov eax 1 +
xor ecx ecx +
mov ebx [esp+4Ch+var_30] +
jmp loc_432412  +
mov eax edx +
add ecx 1 +
mov edx ds:dword_491040[ecx*4] +
cmp ebx edx +
jb loc_432424  +
test edx edx +
jnz loc_432410  +
cmp eax 1 +
ja loc_4323C3  +
mov ecx [esp+4Ch+arg_0] +
test ecx ecx +
jz loc_4323C3  +
add esp 4Ch +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_10] eax +
mov [esp+4Ch+var_28] edx +
mov [esp+4Ch+var_14] esi +
mov [esp+4Ch+var_2C] 0 +
jmp loc_4323A5  +
mov eax [esp+4Ch+var_14] +
mov edi 2 +
mov [esp+4Ch+var_34] eax +
jmp loc_4323E8  +
xor eax eax +
jmp loc_4323C3  +
***
mov eax [esp+8] +
mov eax [eax+4] +
mov [esp+8] eax +
mov eax [esp+4] +
mov eax [eax+4] +
mov [esp+4] eax +
jmp strcmp  +
***
mov edi eax +
push esi  +
mov esi edx +
push ebx  +
sub esp 2Ch +
test byte ptr [edx] 1 +
mov [esp+34h+var_18] 0 +
jnz loc_4324B4  +
mov eax [edx+1Ch] +
xor edx edx +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_43252F  +
mov ebx [edi+64h] +
mov eax [edi+4] +
test ebx ebx +
mov ebp [eax+1B0h] +
jnz loc_4324E4  +
jmp loc_4325A2  +
mov eax [ebx+8Ch] +
mov ebx [ebx+0Ch] +
mov dword ptr [eax+60h] 0 +
test ebx ebx +
jz loc_432528  +
mov eax [ebx+14h] +
and eax 8001h +
cmp eax 1 +
jnz loc_4324D0  +
mov eax [ebp+70h] +
mov [esp+34h+var_28] ecx +
mov [esp+34h+var_2C] ebx +
mov [esp+34h+var_30] esi +
mov [esp+34h+var_34] edi +
call eax  +
mov ecx [esp+34h+var_28] +
test eax eax +
jnz loc_4324D0  +
mov edx [ebx+8Ch] +
mov eax [esp+34h+var_18] +
mov ebx [ebx+0Ch] +
add eax 1 +
test ebx ebx +
mov [esp+34h+var_18] eax +
mov [edx+60h] eax +
jnz loc_4324E4  +
mov edx [esp+34h+var_18] +
mov eax [esi+1Ch] +
lea edi [esp+34h+var_18] +
mov [ecx] edx +
mov [esp+34h+var_34] eax +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_30] offset loc_432F20 +
call sub_4147C0  +
mov ebx [esi+1Ch] +
mov eax [ebx+0C0h] +
test eax eax +
jz loc_432572  +
mov ecx [esp+34h+var_18] +
lea edx [ecx+1] +
jmp loc_432562  +
mov edx ecx +
mov [eax+0Ch] edx +
mov eax [eax] +
lea ecx [edx+1] +
test eax eax +
jnz loc_432560  +
mov [esp+34h+var_18] edx +
mov [esp+34h+var_2C] edi +
mov [esp+34h+var_34] ebx +
mov [esp+34h+var_30] offset sub_432EF0 +
call sub_4147C0  +
mov edx [esp+34h+var_18] +
xor eax eax +
lea ecx [edx+1] +
test edx edx +
mov edx [esi+1Ch] +
cmovnz eax ecx +
mov [edx+4Ch] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1Ch] +
xor edx edx +
jmp loc_43252F  +
***
mov eax [esp+34h] +
mov dword ptr [eax+4] 1 +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
and ebx 1 +
jnz loc_432750  +
or byte ptr [edx+34h] 1 +
mov eax edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov dword ptr [esp+4] 48h +
mov [esp] ebx +
call sub_410230  +
test eax eax +
jnz loc_4326A1  +
xor eax eax +
jmp loc_432710  +
***
mov byte ptr [edx+2Ch] 0 +
lea ecx [edx+2Dh] +
mov bl 1Bh +
jmp loc_4326E4  +
***
xor esi esi +
add ecx 2 +
mov [ecx-2] si +
sub ebx 2 +
jmp loc_4326E9  +
***
mov byte ptr [ecx] 0 +
jmp loc_43270A  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov esi [ebx+9Ch] +
mov eax [esi+50h] +
test eax eax +
jz loc_43277E  +
mov [esp+14h+var_14] eax +
call sub_44E230  +
mov eax [esi+7Ch] +
mov [esp+14h+var_14] eax +
call sub_450DA0  +
mov [esp+14h+arg_0] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp sub_413BD0  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [eax+94h] +
mov esi [edx+94h] +
mov edi [ebx+4] +
cmp dword ptr [edi+4] 5 +
jz loc_4327C6  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esi+4] +
cmp dword ptr [edi+4] 5 +
jnz loc_4327BC  +
mov edi [edx+8Ch] +
mov ebp [eax+8Ch] +
mov edi [edi+4] +
cmp [ebp+4] edi +
jnz loc_4327BC  +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebx +
mov [esp+5Ch+var_30] ecx +
mov [esp+5Ch+var_34] edx +
call sub_428190  +
mov edx [esp+5Ch+var_34] +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] edx +
mov edi eax +
mov [esp+5Ch+var_2C] eax +
call sub_428190  +
cmp eax 0FFFFFEFFh +
mov [esp+5Ch+var_28] eax +
jz loc_4327BC  +
cmp edi 0FFFFFEFFh +
jz loc_4327BC  +
mov eax [ebx+0A0h] +
xor edx edx +
mov ecx eax +
mov [esp+5Ch+var_34] eax +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx edi byte ptr [eax+5] +
mov eax [ecx+60h] +
mov ecx [esi+0A0h] +
div  edi +
xor edx edx +
mov [esp+5Ch+var_18] ecx +
mov [esp+5Ch+var_20] eax +
mov eax [esi+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx edi byte ptr [eax+5] +
mov eax [ecx+60h] +
div  edi +
test eax eax +
mov ebp eax +
jz loc_4327BC  +
mov eax [esp+5Ch+var_20] +
test eax eax +
jz loc_4327BC  +
mov eax [esp+5Ch+var_34] +
lea edx [ecx+48h] +
mov [esp+5Ch+var_14] edx +
mov [esp+5Ch+var_1C] 0 +
mov edi [eax+24Ch] +
mov eax [ecx+24Ch] +
mov ecx [esp+5Ch+var_30] +
test edi edi +
mov [esp+5Ch+var_24] eax +
jz loc_432A58  +
test edi edi +
jz loc_4329DC  +
mov eax [esp+5Ch+var_24] +
mov [esp+5Ch+var_30] 0 +
test eax eax +
jz loc_4329DC  +
mov ecx [esp+5Ch+var_24] +
test ecx ecx +
jz loc_432AED  +
test edi edi +
jz loc_432AED  +
mov [esp+5Ch+var_20] ebx +
mov ebp [edi+4] +
lea eax [edi+0Ch] +
mov ebx [esp+5Ch+var_2C] +
xor edx edx +
mov [esp+5Ch+var_14] esi +
mov esi eax +
mov [esp+5Ch+var_10] eax +
lea esi [esi+0] +
cmp edx ebp +
jnb loc_43293B  +
lea eax [ebp+edx+0] +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jnb loc_43292E  +
cmp edx eax +
mov ebp eax +
jnb loc_43293B  +
add eax edx +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jb loc_432917  +
cmp ebx ecx +
jbe loc_432B49  +
lea edx [eax+1] +
jmp loc_432900  +
mov ebx [esp+5Ch+var_20] +
mov esi [esp+5Ch+var_14] +
mov [esp+5Ch+var_2C] 0 +
mov eax [esp+5Ch+var_24] +
xor edx edx +
mov [esp+5Ch+var_24] ebx +
mov ebx [esp+5Ch+var_28] +
mov [esp+5Ch+var_20] esi +
mov ebp [eax+4] +
add eax 0Ch +
mov esi eax +
cmp ebp edx +
jbe loc_4329A7  +
lea eax [edx+ebp] +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jnb loc_432992  +
cmp edx eax +
mov ebp eax +
jnb loc_4329A7  +
add eax edx +
shr eax 1 +
lea ecx [eax+eax*2] +
lea edi [esi+ecx*4] +
mov ecx [edi+8] +
cmp ebx ecx +
jb loc_43297B  +
cmp ebx ecx +
jbe loc_432B61  +
lea edx [eax+1] +
jmp loc_432965  +
mov [esp+5Ch+var_30] 0 +
xor edi edi +
mov eax [esp+5Ch+var_1C] +
test eax eax +
jz loc_4329B9  +
mov [esp+5Ch+var_5C] eax +
call free  +
mov esi [esp+5Ch+var_30] +
mov eax edi +
test esi esi +
jz loc_4327BE  +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_34] edi +
call free  +
mov eax [esp+5Ch+var_34] +
jmp loc_4327BE  +
mov eax [esp+5Ch+var_14] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_10] ecx +
call sub_424210  +
test eax eax +
mov [esp+5Ch+var_30] eax +
jz loc_4329A7  +
test edi edi +
jz loc_432AED  +
mov ecx [esp+5Ch+var_10] +
cmp byte ptr [ecx+3] 0 +
js loc_4328CF  +
mov ecx [esi+0A0h] +
mov edx eax +
mov eax ebp +
mov [esp+5Ch+var_14] ecx +
call loc_4754B0  +
mov ecx [esp+5Ch+var_14] +
mov [esp+5Ch+var_24] eax +
mov [ecx+24Ch] eax +
jmp loc_4328CF  +
mov eax [esp+5Ch+var_20] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_34] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_5C] ebx +
add eax 48h +
mov [esp+5Ch+var_58] eax +
call sub_424210  +
test eax eax +
mov [esp+5Ch+var_1C] eax +
jz loc_43299F  +
mov ecx [esp+5Ch+var_30] +
cmp byte ptr [ecx+3] 0 +
jns loc_432EB5  +
mov eax [esp+5Ch+var_14] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] esi +
call sub_424210  +
test eax eax +
mov [esp+5Ch+var_30] eax +
jz loc_4329A7  +
mov eax [esp+5Ch+var_20] +
shl eax 3 +
mov [esp+5Ch+var_5C] eax +
call sub_40EFC0  +
mov [esp+5Ch+var_24] eax +
lea eax ds:0[ebp*8] +
mov [esp+5Ch+var_5C] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+5Ch+var_14] eax +
jnz loc_432CF3  +
xor edi edi +
cmp [esp+5Ch+var_24] 0 +
jz loc_432B30  +
mov eax [esp+5Ch+var_24] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_14] +
test eax eax +
jz loc_4329A9  +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_4329A9  +
mov eax [edi+4] +
mov ebx [esp+5Ch+var_20] +
mov esi [esp+5Ch+var_14] +
mov [esp+5Ch+var_10] edi +
mov [esp+5Ch+var_2C] eax +
jmp loc_43294B  +
mov edx [esp+5Ch+var_2C] +
mov ebx [esp+5Ch+var_24] +
mov esi [esp+5Ch+var_20] +
mov eax [edi+4] +
test edx edx +
jz loc_4329A7  +
test eax eax +
jz loc_4329A7  +
cmp [esp+5Ch+var_2C] eax +
jnz loc_4329A7  +
mov eax [esp+5Ch+var_2C] +
shl eax 3 +
mov [esp+5Ch+var_5C] eax +
mov ebp eax +
mov [esp+5Ch+var_28] eax +
call sub_40EFC0  +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_24] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+5Ch+var_14] eax +
jz loc_432B1B  +
cmp [esp+5Ch+var_24] 0 +
jz loc_432B1B  +
mov eax [esp+5Ch+var_10] +
mov edx [esp+5Ch+var_24] +
mov ebp [eax] +
mov eax [esp+5Ch+var_28] +
add eax ebp +
cmp ebp eax +
mov [esp+5Ch+var_20] eax +
jnb loc_432C12  +
mov [esp+5Ch+var_10] esi +
mov esi ebx +
mov ebx edx +
mov eax [esp+5Ch+var_34] +
add ebx 8 +
mov [ebx-8] ebp +
mov ecx [ebp+0] +
add ebp 8 +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] ecx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_424010  +
mov [ebx-4] eax +
cmp [esp+5Ch+var_20] ebp +
ja loc_432BE2  +
mov esi [esp+5Ch+var_10] +
mov ebx [edi] +
mov ebp [esp+5Ch+var_28] +
mov edi [esp+5Ch+var_14] +
add ebp ebx +
cmp ebx ebp +
jnb loc_432C4B  +
mov eax [esp+5Ch+var_18] +
add edi 8 +
mov [edi-8] ebx +
mov edx [ebx] +
add ebx 8 +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_424010  +
mov [edi-4] eax +
cmp ebp ebx +
ja loc_432C22  +
mov esi [esp+5Ch+var_2C] +
mov ebx [esp+5Ch+var_24] +
mov [esp+5Ch+var_50] offset loc_432470 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_58] esi +
mov [esp+5Ch+var_5C] ebx +
call qsort  +
mov [esp+5Ch+var_58] esi +
mov esi [esp+5Ch+var_14] +
mov [esp+5Ch+var_50] offset loc_432470 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_5C] esi +
call qsort  +
mov eax [esi] +
mov edx [ebx] +
movzx eax word ptr [eax+4] +
cmp [edx+4] ax +
jnz loc_432CEC  +
mov ebx [esp+5Ch+var_14] +
xor ebp ebp +
mov eax [esp+5Ch+var_24] +
lea edi [ebx+8] +
mov edx ebx +
lea esi [eax+8] +
jmp loc_432CD6  +
add ebp 1 +
cmp ebp [esp+5Ch+var_2C] +
jz loc_432EAA  +
mov edx edi +
mov eax esi +
mov ecx [edx] +
add esi 8 +
add edi 8 +
mov ebx [eax] +
movzx ecx word ptr [ecx+4] +
cmp [ebx+4] cx +
jnz loc_432CEC  +
mov edx [edx+4] +
mov [esp+5Ch+var_58] edx +
mov eax [eax+4] +
mov [esp+5Ch+var_5C] eax +
call strcmp  +
test eax eax +
jz loc_432CB1  +
xor edi edi +
jmp loc_432B24  +
mov eax [esp+5Ch+var_24] +
test eax eax +
jz loc_432B1B  +
mov eax [esp+5Ch+var_20] +
mov ecx [esp+5Ch+var_1C] +
lea eax [eax+eax*4] +
lea edx [ecx+eax*4] +
cmp edx ecx +
jbe loc_432EE5  +
mov eax ecx +
mov edi ebx +
mov ebx [esp+5Ch+var_2C] +
xor ecx ecx +
mov [esp+5Ch+var_20] esi +
jmp loc_432D2C  +
add eax 14h +
cmp edx eax +
jbe loc_432D3D  +
cmp [eax+10h] ebx +
jnz loc_432D25  +
mov esi [esp+5Ch+var_24] +
mov [esi+ecx*8] eax +
add ecx 1 +
jmp loc_432D25  +
mov esi [esp+5Ch+var_20] +
mov ebx edi +
mov edi [esp+5Ch+var_30] +
lea eax [ebp+ebp*4+0] +
lea edx [edi+eax*4] +
cmp edx edi +
jbe loc_432CEC  +
mov eax edi +
xor ebp ebp +
mov edi ecx +
mov ecx [esp+5Ch+var_28] +
mov [esp+5Ch+var_2C] ebx +
jmp loc_432D69  +
add eax 14h +
cmp edx eax +
jbe loc_432D7A  +
cmp [eax+10h] ecx +
jnz loc_432D62  +
mov ebx [esp+5Ch+var_14] +
mov [ebx+ebp*8] eax +
add ebp 1 +
jmp loc_432D62  +
mov ecx edi +
xor edi edi +
mov ebx [esp+5Ch+var_2C] +
test ecx ecx +
jz loc_432B24  +
test ebp ebp +
jz loc_432B24  +
cmp ebp ecx +
jnz loc_432B24  +
mov edi [esp+5Ch+var_24] +
xor edx edx +
mov [esp+5Ch+var_2C] esi +
mov esi ebx +
mov ebx edx +
mov eax [edi] +
add ebx 1 +
add edi 8 +
mov ecx [eax+8] +
mov eax [esp+5Ch+var_34] +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] ecx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_424010  +
mov [edi-4] eax +
cmp ebx ebp +
jnz loc_432DA8  +
mov esi [esp+5Ch+var_2C] +
xor edi edi +
mov ebx [esp+5Ch+var_14] +
mov eax [ebx] +
add edi 1 +
add ebx 8 +
mov ecx [eax+8] +
mov eax [esp+5Ch+var_18] +
mov eax [eax+64h] +
mov [esp+5Ch+var_54] ecx +
mov [esp+5Ch+var_5C] esi +
mov [esp+5Ch+var_58] eax +
call sub_424010  +
mov [ebx-4] eax +
cmp edi ebp +
jnz loc_432DDB  +
mov esi [esp+5Ch+var_24] +
mov [esp+5Ch+var_50] offset loc_432470 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_58] ebp +
mov [esp+5Ch+var_5C] esi +
call qsort  +
mov ebx [esp+5Ch+var_14] +
mov [esp+5Ch+var_50] offset loc_432470 +
mov [esp+5Ch+var_54] 8 +
mov [esp+5Ch+var_58] ebp +
mov [esp+5Ch+var_5C] ebx +
call qsort  +
mov eax [ebx] +
mov edx [esi] +
movzx eax word ptr [eax+0Ch] +
cmp [edx+0Ch] ax +
jnz loc_432CEC  +
mov eax esi +
mov edx ebx +
lea edi [ebx+8] +
xor ebx ebx +
lea esi [esi+8] +
mov [esp+5Ch+var_34] ebp +
jmp loc_432E8D  +
add ebx 1 +
cmp ebx [esp+5Ch+var_34] +
jz loc_432EAA  +
mov edx edi +
mov eax esi +
mov ebp [edx] +
add esi 8 +
add edi 8 +
mov ecx [eax] +
movzx ebp word ptr [ebp+0Ch] +
cmp [ecx+0Ch] bp +
jnz loc_432CEC  +
mov edx [edx+4] +
mov [esp+5Ch+var_58] edx +
mov eax [eax+4] +
mov [esp+5Ch+var_5C] eax +
call strcmp  +
test eax eax +
jz loc_432E68  +
xor edi edi +
jmp loc_432B24  +
mov edi 1 +
nop   +
jmp loc_432B24  +
mov eax [ebx+0A0h] +
mov edx [esp+5Ch+var_1C] +
mov [esp+5Ch+var_10] ecx +
mov [esp+5Ch+var_30] eax +
mov eax [esp+5Ch+var_20] +
call loc_4754B0  +
mov ecx [esp+5Ch+var_10] +
mov edi eax +
mov eax [esp+5Ch+var_30] +
mov [eax+24Ch] edi +
jmp loc_4328B3  +
xor ecx ecx +
jmp loc_432D43  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
test byte ptr [eax+34h] 8 +
jnz loc_432F0E  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jz loc_432F0E  +
mov ecx [edx] +
add ecx 1 +
mov [edx] ecx +
mov [eax+20h] ecx +
mov eax 1 +
retn   +
***
mov eax [esp+4] +
mov edx [esp+8] +
test byte ptr [eax+34h] 8 +
jz loc_432F3E  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jz loc_432F3E  +
mov ecx [edx] +
add ecx 1 +
mov [edx] ecx +
mov [eax+20h] ecx +
mov eax 1 +
retn   +
***
push edi  +
push esi  +
mov esi edx +
push ebx  +
sub esp 1Ch +
mov eax [eax+1B0h] +
mov edi [esp+28h+arg_4] +
mov ebx [esp+28h+arg_8] +
mov eax [eax+0E4h] +
test eax eax +
jz loc_432F84  +
mov [esp+28h+var_1C] ebx +
mov [esp+28h+var_20] edi +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] edx +
call eax  +
test ebx ebx +
jnz loc_432FB5  +
movzx eax byte ptr [ebp+0Dh] +
movzx edx byte ptr [esi+31h] +
and eax 3 +
mov ecx edx +
movzx ebx al +
and ecx 3 +
sub ebx 1 +
sub ecx 1 +
cmp ebx ecx +
jnb loc_432FAD  +
and edx 0FFFFFFFCh +
or edx eax +
mov [esi+31h] dl +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_432FAD  +
test byte ptr [ebp+0Dh] 3 +
jz loc_432FAD  +
mov eax [esp+28h+arg_0] +
test byte ptr [eax] 8 +
jnz loc_432FAD  +
or byte ptr [esi+35h] 8 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
cmp dword ptr [esi+20h] 0FFFFFFFFh +
jz loc_43301B  +
mov eax [ebx+4] +
mov eax [eax+154h] +
mov [esp+1Ch+var_1C] esi +
call eax  +
test eax eax +
jnz loc_433028  +
mov eax [ebx+28h] +
cmp [esi+20h] eax +
jl loc_43301B  +
mov eax [ebx+34h] +
lea edx [eax+1] +
mov [ebx+34h] edx +
mov [esi+20h] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+14h] +
xor edx edx +
mov eax [esi+20h] +
mov ecx [ebx+38h] +
mov ebp [edi+eax*4] +
mov eax ebp +
div  dword ptr [ebx+2Ch] +
mov eax ebp +
shr eax cl +
mov [esp+1Ch+var_10] edx +
mov edx [ebx+0Ch] +
shr edx cl +
mov ecx [ebx+40h] +
sub edx 1 +
and eax edx +
mov edx [ebx+20h] +
and ecx ebp +
mov ebp 1 +
shl ebp cl +
lea eax [edx+eax*4] +
or ebp [eax] +
mov [esp+1Ch+var_14] eax +
mov [eax] ebp +
mov edx [esi+20h] +
mov eax 1 +
mov ecx [ebx+3Ch] +
mov edx [edi+edx*4] +
shr edx cl +
and edx [ebx+40h] +
mov ecx edx +
shl eax cl +
mov ecx [ebx+1Ch] +
mov edx eax +
mov eax [esp+1Ch+var_14] +
or edx ebp +
mov ebp [esp+1Ch+var_10] +
mov [eax] edx +
mov eax [esi+20h] +
mov eax [edi+eax*4] +
lea edi ds:0[ebp*4] +
and eax 0FFFFFFFEh +
mov edx eax +
or edx 1 +
cmp dword ptr [ecx+ebp*4] 1 +
cmovz eax edx +
mov edx [ebx] +
mov edx [edx+4] +
mov ecx [edx+30h] +
mov edx [ebx+18h] +
mov edx [edx+ebp*4] +
mov ebp [ebx+24h] +
sub edx [ebx+30h] +
mov [esp+1Ch+var_1C] eax +
lea edx [ebp+edx*4+0] +
mov [esp+1Ch+var_18] edx +
call ecx  +
mov eax [ebx+1Ch] +
add eax edi +
add edi [ebx+18h] +
sub dword ptr [eax] 1 +
mov eax [edi] +
lea ecx [eax+1] +
mov [edi] ecx +
mov [esi+20h] eax +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ecx [esp+4+arg_0] +
mov edx [esp+4+arg_4] +
cmp dword ptr [ecx+4] 1 +
setz al  +
xor ebx ebx +
cmp dword ptr [edx+4] 1 +
mov esi eax +
mov eax 1 +
setz bl  +
cmp esi ebx +
jl loc_43313C  +
jg loc_433140  +
mov esi [ecx] +
mov ebx [edx] +
and esi [ecx+0Ch] +
and ebx [edx+0Ch] +
cmp esi ebx +
jb loc_433140  +
ja loc_43313C  +
mov eax [edx+8] +
xor ebx ebx +
cmp [ecx+8] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
pop esi  +
retn   +
mov eax 0FFFFFFFFh +
jmp loc_43313C  +
***
mov ecx [esp+arg_0] +
mov eax [edx+4] +
cmp [ecx+4] eax +
jb loc_433187  +
mov eax 1 +
ja loc_433185  +
mov ebx [edx] +
cmp [ecx] ebx +
jb loc_433187  +
nop   +
ja loc_433185  +
mov eax [edx+8] +
xor ebx ebx +
cmp [ecx+8] eax +
mov eax 0FFFFFFFFh +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
mov ebx [esp+18h+arg_0] +
mov edx [esp+18h+arg_4] +
test byte ptr [ebx+34h] 20h +
jnz loc_4331B6  +
movzx eax byte ptr [ebx+0Ch] +
lea ecx [eax-3] +
cmp cl 1 +
jbe loc_4331C0  +
cmp al 1 +
jz loc_4331D2  +
cmp al 2 +
jz loc_4331D2  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
movzx ecx byte ptr [ebx+33h] +
test cl 2 +
jnz loc_4331F6  +
and ecx 0Ah +
jnz loc_4331D2  +
cmp al 3 +
jz loc_4331F6  +
mov eax [edx+4] +
mov edx [edx] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_18] edx +
call eax  +
mov eax 1 +
and byte ptr [ebx+33h] 0ECh +
add esp 18h +
pop ebx  +
retn   +
mov eax [ebx+14h] +
test byte ptr [eax+18h] 8 +
jz loc_4331D2  +
jmp loc_4331B6  +
***
jmp sub_433210  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [ecx+18h] +
mov ebx [esp+48h+arg_0] +
mov [esp+48h+var_40] ebp +
mov esi [esp+48h+arg_4] +
mov [esp+48h+var_20] edx +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call sub_405EB0  +
mov ecx eax +
xor eax eax +
cmp ecx [edi+18h] +
jz loc_433250  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0A0h] +
mov [esp+48h+var_1C] 0 +
mov edx [eax+70h] +
test edx edx +
mov [esp+48h+var_30] edx +
jnz loc_433360  +
mov eax [ebp+4] +
mov edx [edi+28h] +
mov eax [eax+1B0h] +
mov [esp+48h+var_2C] edx +
mov [esp+48h+var_30] eax +
mov eax [eax+174h] +
movzx edx byte ptr [eax+3] +
cmp [esp+48h+var_2C] edx +
jz loc_433395  +
movzx edx byte ptr [eax+4] +
cmp [esp+48h+var_2C] edx +
jnz loc_433372  +
mov eax [eax+40h] +
mov [esp+48h+var_2C] eax +
lea eax [ebx+ecx] +
cmp ebx eax +
mov [esp+48h+var_28] eax +
jnb loc_433388  +
mov [esp+48h+var_24] edi +
mov edi ebx +
mov ebx [esp+48h+var_1C] +
jmp loc_4332E8  +
cmp eax ebx +
jnb loc_4333A1  +
movzx eax byte ptr [ecx+9] +
lea eax [eax+eax*2] +
lea esi [esi+eax*4] +
mov eax [esp+48h+var_24] +
add edi [eax+28h] +
cmp [esp+48h+var_28] edi +
jbe loc_433388  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_44] edi +
mov [esp+48h+var_48] ebp +
call eax  +
mov edx [esp+48h+var_30] +
mov eax [esi+4] +
mov ecx [edx+174h] +
shr eax 8 +
cmp byte ptr [ecx+0Ah] 40h +
jz loc_4333DF  +
test ebx ebx +
jnz loc_4332C5  +
test eax eax +
jz loc_4332CD  +
mov edx [esi] +
mov [esp+48h+var_3C] eax +
mov eax [esp+48h+var_20] +
mov [esp+48h+var_38] 0 +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_34] edx +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_48] offset aBNonZeroSymbol +
call off_476094  +
mov [esp+48h+var_48] 11h +
call sub_40C770  +
xor eax eax +
jmp loc_433243  +
mov eax [eax+60h] +
xor edx edx +
div  [esp+48h+var_30] +
mov [esp+48h+var_1C] eax +
jmp loc_43326D  +
mov [esp+48h+var_48] 3 +
call sub_40C770  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+38h] +
mov [esp+48h+var_2C] eax +
jmp loc_4332AA  +
mov edx [esi] +
mov ebx [esp+48h+var_1C] +
mov [esp+48h+var_3C] eax +
mov eax [esp+48h+var_20] +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_34] edx +
mov [esp+48h+var_38] ebx +
mov [esp+48h+var_40] eax +
mov [esp+48h+var_48] offset aBBadRelocSymbo +
call off_476094  +
mov [esp+48h+var_48] 11h +
call sub_40C770  +
xor eax eax +
jmp loc_433243  +
test ebx ebx +
jz loc_4332CD  +
xor eax eax +
jmp loc_4332C5  +
***
sub esp 1Ch +
mov edx [eax+6Ch] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_10] 0FF00h +
mov [esp+1Ch+var_1C] offset aBTooManySect_0 +
mov [esp+1Ch+var_14] edx +
call off_476094  +
mov [esp+1Ch+var_1C] 0Fh +
call sub_40C770  +
xor eax eax +
add esp 1Ch +
retn   +
***
push ebx  +
sub esp 20h +
mov esi [esp+20h+arg_0] +
mov edi [esp+20h+arg_4] +
mov ebx [esp+20h+arg_8] +
mov eax [esi+4] +
mov edx [eax+0A0h] +
mov edx [edx+90Ch] +
test edx edx +
jz loc_433523  +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+68h] +
test eax eax +
jz loc_433494  +
mov ecx [esp+20h+arg_10] +
mov edx [esi] +
mov [esp+20h+var_18] ebx +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_10] ecx +
mov ecx [esp+20h+arg_C] +
mov [esp+20h+var_20] edx +
mov [esp+20h+var_14] ecx +
call eax  +
cmp eax 1 +
jz loc_433494  +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
test edi edi +
jz loc_4334AB  +
cmp byte ptr [edi] 0 +
jz loc_4334AB  +
mov eax [esp+20h+arg_C] +
test byte ptr [eax+15h] 80h +
jz loc_433540  +
mov dword ptr [ebx+8] 0FFFFFFFFh +
mov eax [esi] +
mov edi [eax+1Ch] +
mov eax [edi+58h] +
mov edx [edi+54h] +
cmp eax edx +
jbe loc_433570  +
mov eax [edi+5Ch] +
imul edx edx +
add eax edx +
mov edx [ebx] +
mov [eax] edx +
mov edx [ebx+4] +
mov [eax+4] edx +
mov edx [ebx+8] +
mov [eax+8] edx +
mov edx [ebx+0Ch] +
mov [eax+0Ch] edx +
mov edx [ebx+10h] +
mov [eax+10h] edx +
mov edx [edi+54h] +
mov ecx [esi+34h] +
imul eax edx +
add eax [edi+5Ch] +
test ecx ecx +
mov ecx [esi+4] +
mov [eax+14h] edx +
jz loc_433597  +
mov ebx [ecx+7Ch] +
mov esi ebx +
mov [eax+18h] ebx +
add edx 1 +
lea eax [esi+1] +
mov [ecx+7Ch] eax +
mov eax 1 +
mov [edi+54h] edx +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+20h+var_1C] 2213h +
mov [esp+20h+var_20] offset a____Binutils_3 +
call sub_40C6C0  +
mov eax [esi+4] +
jmp loc_433459  +
mov eax [esi+8] +
mov [esp+20h+var_18] 0 +
mov [esp+20h+var_1C] edi +
mov [esp+20h+var_20] eax +
call sub_44E260  +
cmp eax 0FFFFFFFFh +
mov [ebx+8] eax +
jnz loc_4334B2  +
xor eax eax +
jmp loc_43348D  +
lea edx [eax+eax] +
mov [edi+58h] edx +
imul eax eax +
mov edx [edi+5Ch] +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] edx +
call sub_40F050  +
test eax eax +
mov [edi+5Ch] eax +
jz loc_433563  +
mov edx [edi+54h] +
jmp loc_4334C8  +
mov esi [ecx+7Ch] +
xor ebx ebx +
jmp loc_433508  +
***
jmp sub_4335B0  +
***
mov ebx eax +
sub esp 14h +
mov eax [eax+94h] +
mov edx [eax+0A0h] +
mov esi [edx+40h] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call sub_428190  +
mov eax [esi+eax*4] +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_433616  +
mov ecx [ebx+94h] +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
mov edx [eax+164h] +
xor eax eax +
test edx edx +
jz loc_433610  +
mov [esp+14h+var_8] eax +
mov [esp+14h+var_C] ebx +
mov [esp+14h+var_10] ecx +
mov [esp+14h+var_14] offset aBWarningSh_l_0 +
call edx  +
mov eax [esp+14h+var_8] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov eax [esi+eax*4] +
mov eax [eax+2Ch] +
mov edx [eax+3Ch] +
mov eax [eax+38h] +
add eax [edx+1Ch] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+8+arg_0] +
mov eax [eax] +
mov eax [eax+10h] +
call sub_4335B0  +
mov ebx eax +
mov eax [esp+8+arg_4] +
mov eax [eax] +
mov eax [eax+10h] +
call sub_4335B0  +
xor ecx ecx +
mov edx 0FFFFFFFFh +
cmp ebx eax +
setnbe cl  +
cmovnb edx ecx +
add esp 8 +
mov eax edx +
pop ebx  +
retn   +
***
push edi  +
mov eax 1 +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
movzx edx byte ptr [esi+33h] +
and edx 0Ah +
cmp dl 8 +
jz loc_433692  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp dword ptr [esi+20h] 0FFFFFFFFh +
jz loc_43368B  +
mov ecx [esi+40h] +
test ecx ecx +
jz loc_43368B  +
mov edx [ecx+14h] +
mov ebx [edx+0A0h] +
test byte ptr [ebx+924h] 0Bh +
jnz loc_43368B  +
mov eax [esp+24h] +
mov eax [eax] +
mov edi [eax+30h] +
mov eax [edi+0A0h] +
mov ebx [eax+244h] +
test ebx ebx +
jnz loc_4336DB  +
jmp loc_433760  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jz loc_433760  +
cmp edx [ebx+10h] +
nop   +
jnz loc_4336D0  +
mov edx [ebx+18h] +
test edx edx +
jz loc_433702  +
mov eax [ecx+18h] +
cmp [edx+10h] eax +
jnz loc_4336F8  +
jmp loc_433755  +
cmp [edx+10h] eax +
jz loc_433755  +
mov edx [edx+14h] +
test edx edx +
lea esi [esi+0] +
jnz loc_4336F3  +
mov dword ptr [esp+4] 18h +
mov [esp] edi +
call sub_407C00  +
test eax eax +
jz loc_4337A2  +
mov ecx [esi+40h] +
mov edi [esp+24h] +
mov edx [ecx+18h] +
mov [eax+10h] edx +
movzx edx word ptr [ecx+2] +
mov [eax+4] dx +
mov edx [ebx+18h] +
mov [eax+14h] edx +
mov edx [edi+4] +
mov [ecx+24h] edx +
lea ecx [edx+1] +
add edx 1 +
mov [edi+4] ecx +
mov [eax+6] dx +
mov [ebx+18h] eax +
mov eax 1 +
jmp loc_43368B  +
***
mov eax 1 +
jmp loc_43368B  +
***
mov dword ptr [esp+4] 20h +
mov [esp] edi +
call sub_407C00  +
test eax eax +
mov ebx eax +
jz loc_4337A2  +
mov eax [esi+40h] +
mov eax [eax+14h] +
mov [ebx+10h] eax +
mov eax [esp+24h] +
mov eax [eax] +
mov edi [eax+30h] +
mov eax [edi+0A0h] +
mov edx [eax+244h] +
mov [ebx+1Ch] edx +
mov [eax+244h] ebx +
jmp loc_433702  +
***
mov eax [esp+24h] +
mov dword ptr [eax+8] 1 +
xor eax eax +
jmp loc_43368B  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov [esp+5Ch+var_30] edx +
movzx edx byte ptr [ecx+0Ch] +
mov [esp+5Ch+var_24] ecx +
cmp dl 6 +
jnz loc_4337E8  +
mov ecx [ecx+14h] +
movzx edx byte ptr [ecx+0Ch] +
cmp dl 6 +
jz loc_4337D8  +
mov [esp+5Ch+var_24] ecx +
cmp dl 5 +
ja loc_433AC3  +
jmp ds:off_490110[edx*4]  +
mov ecx [esp+5Ch+var_24] +
mov edx [ecx+14h] +
mov edx [edx+4] +
mov esi [edx+94h] +
mov [esp+5Ch+var_3C] esi +
mov edi [esp+5Ch+var_3C] +
test edi edi +
jz loc_433AC3  +
mov eax [eax] +
mov edi [eax+0D0h] +
test edi edi +
jnz loc_43383A  +
jmp loc_433A98  +
mov edi [edi] +
test edi edi +
jz loc_433A98  +
mov ebp [edi+4] +
cmp [esp+5Ch+var_3C] ebp +
jz loc_433830  +
test byte ptr [ebp+29h] 8 +
jz loc_433830  +
mov ecx [ebp+0A0h] +
mov esi [ecx+914h] +
test esi esi +
jz loc_433830  +
mov eax [esp+5Ch+var_30] +
xor edx edx +
xor esi esi +
mov eax [eax] +
movzx ebx byte ptr [eax+5] +
mov eax [ecx+108h] +
div  ebx +
mov ebx [ecx+928h] +
test ebx ebx +
mov [esp+5Ch+var_38] eax +
jnz loc_433887  +
mov esi [ecx+110h] +
sub [esp+5Ch+var_38] esi +
mov edx [esp+5Ch+var_38] +
test edx edx +
jz loc_433830  +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_44] 0 +
mov [esp+5Ch+var_48] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_54] eax +
lea eax [ecx+0F0h] +
mov [esp+5Ch+var_50] esi +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_34] ecx +
call sub_424210  +
test eax eax +
mov [esp+5Ch+var_28] eax +
jz loc_433A98  +
mov edx [ebp+0A0h] +
mov eax [edx+178h] +
mov [esp+5Ch+var_20] edx +
mov [esp+5Ch+var_5C] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+5Ch+var_2C] eax +
jz loc_433AF8  +
mov edx [esp+5Ch+var_20] +
mov ecx [edx+170h] +
mov ebx [edx+174h] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] ecx +
mov [esp+5Ch+var_54] ebx +
call sub_4060C0  +
mov edx [esp+5Ch+var_20] +
mov ecx [esp+5Ch+var_34] +
test eax eax +
jnz loc_433AEC  +
mov eax [edx+178h] +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_20] ecx +
mov [esp+5Ch+var_34] edx +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call sub_405EB0  +
mov edx [esp+5Ch+var_34] +
mov ecx [esp+5Ch+var_20] +
cmp eax [edx+178h] +
jnz loc_433AEC  +
mov eax [esp+5Ch+var_2C] +
mov ebx [esp+5Ch+var_28] +
lea esi [eax+esi*2] +
mov eax [esp+5Ch+var_38] +
lea eax [eax+eax*4] +
lea edx [ebx+eax*4] +
cmp ebx edx +
jnb loc_433AA6  +
mov [esp+5Ch+var_38] ebp +
mov ebp esi +
mov esi edx +
mov [esp+5Ch+var_20] edi +
mov edi [esp+5Ch+var_24] +
mov [esp+5Ch+var_34] ecx +
jmp loc_4339AE  +
add ebx 14h +
add ebp 2 +
cmp esi ebx +
jbe loc_433AA2  +
movzx eax byte ptr [ebx+0Ch] +
shr al 4 +
test al al +
jz loc_4339A0  +
mov eax [ebx+10h] +
test eax eax +
jz loc_4339A0  +
mov eax [esp+5Ch+var_34] +
mov edx [ebx+8] +
mov eax [eax+10Ch] +
mov [esp+5Ch+var_54] edx +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_5C] eax +
call sub_424010  +
mov edx [edi+4] +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_5C] eax +
call strcmp  +
test eax eax +
jnz loc_4339A0  +
lea eax [esp+5Ch+var_E] +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_58] ebp +
mov [esp+5Ch+var_5C] eax +
call sub_423E10  +
movzx eax word ptr [esp+5Ch+var_E] +
test ax ax +
js loc_433A2A  +
test byte ptr [edi+33h] 2 +
jz loc_433B06  +
test byte ptr [edi+34h] 8 +
jz loc_433B06  +
and ax 7FFFh +
sub eax 1 +
cmp ax 1 +
ja loc_4339A0  +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax 1 +
jmp loc_433A9A  +
mov ecx [esp+5Ch+var_24] +
mov edx [ecx+14h] +
mov ecx [edx+94h] +
mov [esp+5Ch+var_3C] ecx +
jmp loc_43380C  +
mov ecx [esp+5Ch+var_24] +
mov esi [ecx+14h] +
test byte ptr [esi+29h] 8 +
mov [esp+5Ch+var_3C] esi +
jz loc_433A98  +
mov ecx [esp+5Ch+var_3C] +
mov edx [ecx+0A0h] +
test byte ptr [edx+924h] 2 +
jnz loc_433818  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+5Ch+var_20] +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_433830  +
mov [esp+5Ch+var_58] 22D0h +
mov [esp+5Ch+var_5C] offset a____Binutils_3 +
mov [esp+5Ch+var_38] eax +
call sub_40C6C0  +
mov eax [esp+5Ch+var_38] +
mov [esp+5Ch+var_3C] 0 +
jmp loc_433818  +
mov eax [esp+5Ch+var_2C] +
mov [esp+5Ch+var_5C] eax +
call free  +
mov eax [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_433A98  +
mov [esp+5Ch+var_54] offset aElf_link_check +
mov [esp+5Ch+var_58] 232Ch +
mov [esp+5Ch+var_5C] offset a____Binutils_3 +
call sub_40C6F0  +
lea esi [esi+0] +
lea edi [edi+0] +
push ebp  +
push edi  +
mov edi 1 +
push esi  +
push ebx  +
sub esp 7Ch +
mov ebx [esp+0E8h+var_58] +
mov ebp [esp+0E8h+var_54] +
movzx eax byte ptr [ebx+34h] +
mov esi [ebp+0Ch] +
test al 8 +
jnz loc_433B6A  +
mov edx [esi] +
movzx edx byte ptr [edx] +
mov ecx edx +
and ecx 3 +
cmp cl 1 +
jbe loc_433D90  +
xor edi edi +
cmp byte ptr [ebx+0Ch] 7 +
jz loc_433C95  +
mov ecx [ebp+4] +
test ecx ecx +
jnz loc_433C30  +
test edi edi +
jnz loc_433C38  +
mov eax [esi+4] +
cmp byte ptr [ebx+0Ch] 1 +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+0E8h+var_C4] eax +
jz loc_433CC4  +
mov eax [esi] +
movzx edx byte ptr [eax] +
and edx 3 +
cmp dl 1 +
jbe loc_434310  +
cmp dword ptr [ebx+1Ch] 0FFFFFFFEh +
jz loc_434300  +
movzx eax byte ptr [ebx+33h] +
test al 0Ch +
jz loc_433C45  +
test al 3 +
jnz loc_433C4F  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
movzx ecx byte ptr [ebx+30h] +
jz loc_4342A0  +
movzx eax byte ptr [ebx+0Ch] +
mov [esp+0E8h+var_BC] 1 +
mov edx [ebx+2Ch] +
and ecx 0Fh +
test edi edi +
mov [esp+0E8h+var_A0] 0 +
mov [esp+0E8h+var_9C] edx +
movzx edx byte ptr [ebx+31h] +
mov [esp+0E8h+var_93] dl +
jz loc_433CA4  +
and edx 0FFFFFFFCh +
mov [esp+0E8h+var_94] cl +
mov [esp+0E8h+var_93] dl +
movzx edx byte ptr [ebx+32h] +
cmp al 6 +
mov [esp+0E8h+var_92] dl +
ja loc_4342B8  +
jmp ds:off_4902B0[eax*4]  +
test edi edi +
jnz loc_433B87  +
mov eax 1 +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+0Ch] 0 +
jz loc_433BC8  +
mov edx [esi] +
movzx eax byte ptr [edx+1] +
and eax 18h +
cmp al 18h +
jz loc_433BD0  +
cmp al 10h +
jz loc_4344E0  +
movzx eax byte ptr [ebx+0Ch] +
lea edx [eax-3] +
cmp dl 1 +
jbe loc_434470  +
lea edx [eax-1] +
cmp dl 1 +
jbe loc_4344B7  +
movzx ecx byte ptr [ebx+30h] +
mov [esp+0E8h+var_BC] 0 +
jmp loc_433BEA  +
mov ebx [ebx+14h] +
cmp byte ptr [ebx+0Ch] 0 +
jnz loc_433B74  +
jmp loc_433C38  +
test byte ptr [ebx+35h] 4 +
jz loc_433DC0  +
test byte ptr [ebx+33h] 2 +
jz loc_433DC0  +
sub ecx 60h +
mov [esp+0E8h+var_94] cl +
jmp loc_433C17  +
mov eax [eax+0ECh] +
test eax eax +
jz loc_433CDB  +
mov [esp+0E8h+var_E8] ebx +
call eax  +
test eax eax +
jnz loc_433BA1  +
movzx eax byte ptr [ebx+33h] +
test al 4 +
jz loc_433BA1  +
test al 1 +
mov eax [esi] +
jz loc_433CF9  +
movzx edx byte ptr [eax] +
test dl 40h +
jz loc_433BA6  +
mov edx [eax+1Ch] +
cmp dword ptr [edx+28h] 1 +
jz loc_434655  +
movzx edx byte ptr [eax+2] +
and edx 18h +
cmp dl 8 +
jz loc_433BA3  +
mov ecx [eax+18h] +
mov ecx [ecx+18h] +
mov [esp+0E8h+var_C0] ecx +
xor ecx ecx +
cmp dl 18h +
setz cl  +
xor edx edx +
test byte ptr [ebx+33h] 1 +
mov [esp+0E8h+var_BC] ecx +
jnz loc_433D37  +
mov edx [ebx+14h] +
mov ecx [ebx+4] +
mov [esp+0E8h+var_E8] eax +
mov eax [esp+0E8h+var_C0] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_B8] ecx +
mov ecx [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_D4] ecx +
mov ecx [esp+0E8h+var_B8] +
mov [esp+0E8h+var_E4] ecx +
call eax  +
test eax eax +
jnz loc_433BA1  +
mov [esp+0E8h+var_E8] 11h +
call sub_40C770  +
nop   +
mov dword ptr [ebp+0] 1 +
xor eax eax +
jmp loc_433C3D  +
or edx eax +
and edx 10h +
jnz loc_433B68  +
movzx edx byte ptr [ebx+33h] +
and edx 6 +
cmp dl 2 +
jnz loc_433B68  +
and eax 6 +
cmp al 6 +
jz loc_433B6A  +
xor edi edi +
jmp loc_433B6A  +
cmp al 4 +
jz loc_4342D4  +
cmp al 2 +
jz loc_4342D4  +
add ecx 10h +
mov [esp+0E8h+var_94] cl +
jmp loc_433C17  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+94h] +
test eax eax +
jz loc_433E08  +
test byte ptr [eax+29h] 8 +
jnz loc_433E08  +
mov [esp+0E8h+var_E4] 2429h +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_40C6C0  +
mov eax [esi] +
mov [esp+0E8h+var_90] 0 +
movzx ecx byte ptr [eax] +
mov [esp+0E8h+var_B8] offset off_476188 +
mov byte ptr [esp+0E8h+var_C0] cl +
mov edx [ebx+30h] +
and edx 20000FFh +
cmp edx 200000Ah +
jz loc_4343B1  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_4343C7  +
test byte ptr [esp+0E8h+var_C0] 1 +
jz loc_4342E0  +
test byte ptr [ebx+31h] 3 +
jz loc_433E5B  +
cmp byte ptr [ebx+0Ch] 2 +
jz loc_4342E0  +
mov edx [eax+1Ch] +
mov edx [edx+30h] +
test edx edx +
jz loc_433EA0  +
mov ecx [esp+0E8h+var_C4] +
mov edx [ecx+98h] +
mov ecx [esi+4] +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_C0] ecx +
lea ecx [esp+0E8h+var_A0] +
mov [esp+0E8h+var_DC] ecx +
mov ecx [esp+0E8h+var_C0] +
mov [esp+0E8h+var_E8] ecx +
call edx  +
test eax eax +
jz loc_433D80  +
mov eax [esi] +
movzx ecx byte ptr [eax] +
mov byte ptr [esp+0E8h+var_C0] cl +
mov edx [esp+0E8h+var_90] +
test edx edx +
mov [esp+0E8h+var_B4] edx +
jnz loc_433EDC  +
movzx edx byte ptr [ebx+33h] +
test dl 1 +
jz loc_433ED0  +
mov ecx eax +
movzx eax [esp+0E8h+var_94] +
mov byte ptr [esp+0E8h+var_B0] al +
shr al 4 +
sub eax 1 +
cmp al 1 +
mov eax ecx +
jbe loc_43442A  +
and edx 0Ah +
cmp dl 8 +
jz loc_4344D1  +
movzx ecx byte ptr [esp+0E8h+var_C0] +
and ecx 3 +
cmp cl 2 +
mov byte ptr [esp+0E8h+var_C0] cl +
jz loc_433F10  +
movzx ecx [esp+0E8h+var_93] +
and ecx 3 +
mov edx ecx +
jz loc_433F10  +
movzx ecx [esp+0E8h+var_94] +
shr cl 4 +
cmp cl 2 +
jz loc_433F10  +
cmp byte ptr [ebx+0Ch] 1 +
jz loc_4343D6  +
mov eax [eax+1Ch] +
mov ecx [eax+0F8h] +
test ecx ecx +
jz loc_4340E0  +
mov edx [ebx+20h] +
cmp edx 0FFFFFFFFh +
mov [esp+0E8h+var_B0] edx +
jz loc_4340E0  +
mov eax [eax+30h] +
test eax eax +
jz loc_4340E0  +
mov eax [ebx+40h] +
test eax eax +
jz loc_434537  +
mov eax [ebx+38h] +
mov edi [esp+0E8h+var_B4] +
mov [esp+0E8h+var_98] eax +
mov eax [ecx+6Ch] +
sub edi 0FF00h +
cmp edi 0FFFEFFFFh +
mov [esp+0E8h+var_C0] eax +
mov eax [esp+0E8h+var_C4] +
mov edx [eax+174h] +
mov eax [esi+4] +
movzx ecx byte ptr [edx+5] +
jbe loc_434510  +
movzx edi cl +
mov edx [edx+24h] +
imul edi [esp+0E8h+var_B0] +
add edi [esp+0E8h+var_C0] +
lea ecx [esp+0E8h+var_A0] +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] edi +
mov [esp+0E8h+var_E8] eax +
call edx  +
mov ecx [esi+0Ch] +
test ecx ecx +
jz loc_434068  +
mov eax [esi] +
xor edx edx +
mov eax [eax+1Ch] +
mov eax [eax+60h] +
mov edi eax +
mov [esp+0E8h+var_C0] eax +
mov eax [ecx+8Ch] +
mov eax [eax+28h] +
mov [esp+0E8h+var_C4] eax +
mov eax [ebx+3Ch] +
div  edi +
mov eax [esp+0E8h+var_C4] +
lea edi [edx+2] +
imul edi eax +
shl eax 3 +
add edi [ecx+6Ch] +
cmp eax 8 +
jz loc_4345D1  +
cmp eax 10h +
jz loc_43469C  +
cmp eax 20h +
jz loc_4346F4  +
cmp eax 40h +
nop   +
jnz loc_43477B  +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+1Ch] +
mov [esp+0E8h+var_E8] edi +
call eax  +
mov [esp+0E8h+var_B4] eax +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+24h] +
mov [esp+0E8h+var_E0] edi +
mov edx [ebx+20h] +
mov [esp+0E8h+var_E8] edx +
sar edx 1Fh +
mov [esp+0E8h+var_E4] edx +
call eax  +
mov eax [esi+4] +
mov edx [ebx+20h] +
mov edi [esp+0E8h+var_C0] +
mov ecx [esi+0Ch] +
mov eax [eax+4] +
lea edx [edi+edx+2] +
mov edi [esp+0E8h+var_B4] +
imul edx [esp+0E8h+var_C4] +
add edx [ecx+6Ch] +
mov eax [eax+24h] +
mov [esp+0E8h+var_E8] edi +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] 0 +
call eax  +
mov eax [esi+10h] +
test eax eax +
jz loc_4340E0  +
mov eax [eax+6Ch] +
test eax eax +
jz loc_4340E0  +
movzx edi byte ptr [ebx+33h] +
mov edx [ebx+40h] +
test edi 2 +
jnz loc_4345A0  +
test edx edx +
jz loc_434634  +
mov ecx [edx+14h] +
mov ecx [ecx+0A0h] +
test byte ptr [ecx+924h] 0Bh +
jnz loc_434634  +
mov edx [edx+24h] +
add edx 1 +
mov word ptr [esp+0E8h+var_8C] dx +
movzx edx byte ptr [ebx+34h] +
and edx 6 +
cmp dl 6 +
jz loc_434640  +
mov ecx [ebx+20h] +
mov edx [esi+4] +
lea eax [eax+ecx*2] +
mov [esp+0E8h+var_E0] eax +
lea eax [esp+0E8h+var_8C] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] edx +
call sub_423E40  +
nop   +
mov eax [esp+0E8h+var_BC] +
test eax eax +
jnz loc_433C38  +
mov eax [esp+0E8h+var_B8] +
test byte ptr [eax+15h] 80h +
jnz loc_433C38  +
mov edi [ebp+4] +
test edi edi +
jz loc_434176  +
mov ecx [ebp+8] +
test ecx ecx +
jnz loc_434176  +
mov eax [ebp+0Ch] +
mov edx [eax+38h] +
test edx edx +
jz loc_434176  +
lea edx [esp+0E8h+var_8C] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] offset off_476188 +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] 0 +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_80] 0 +
mov [esp+0E8h+var_8C] 0 +
mov [esp+0E8h+var_88] 0 +
mov [esp+0E8h+var_84] 0 +
mov byte ptr [esp+0E8h+var_80] 4 +
mov [esp+0E8h+var_7C] 0FFFFFFF1h +
call sub_433430  +
test eax eax +
jz loc_433C3D  +
mov dword ptr [ebp+8] 1 +
mov eax [esi+4] +
lea edx [esp+0E8h+var_A0] +
mov ecx [esp+0E8h+var_B8] +
mov edi [eax+7Ch] +
mov eax [ebx+4] +
mov [esp+0E8h+var_D8] ebx +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] esi +
call sub_433430  +
test eax eax +
jz loc_4342F0  +
cmp eax 1 +
jz loc_4345C9  +
cmp dword ptr [ebx+1Ch] 0FFFFFFFEh +
jnz loc_433C38  +
mov [esp+0E8h+var_E0] offset aElf_link_outpu +
mov [esp+0E8h+var_E4] 251Bh +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_40C6F0  +
mov eax [ebx+14h] +
mov [esp+0E8h+var_B8] eax +
mov eax [eax+3Ch] +
test eax eax +
jz loc_433DE0  +
mov edx [esi+4] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] edx +
call sub_428190  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_90] eax +
jz loc_4345F7  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+38h] +
mov ecx eax +
mov eax [ebx+18h] +
add ecx eax +
mov eax [esi] +
mov [esp+0E8h+var_A0] ecx +
movzx edx byte ptr [eax] +
mov byte ptr [esp+0E8h+var_C0] dl +
and edx 3 +
cmp dl 2 +
jz loc_433E21  +
mov edx [esp+0E8h+var_B8] +
mov edx [edx+3Ch] +
add ecx [edx+1Ch] +
cmp byte ptr [ebx+30h] 6 +
mov [esp+0E8h+var_A0] ecx +
jnz loc_433E21  +
mov edx [eax+1Ch] +
mov edx [edx+0C8h] +
test edx edx +
jz loc_433E21  +
sub ecx [edx+1Ch] +
mov [esp+0E8h+var_A0] ecx +
jmp loc_433E21  +
mov eax [ebx+14h] +
mov eax [eax+4] +
mov ecx eax +
mov [esp+0E8h+var_B8] eax +
mov eax [esp+0E8h+var_C4] +
mov eax [eax+148h] +
mov [esp+0E8h+var_E8] ecx +
call eax  +
mov [esp+0E8h+var_90] eax +
mov eax [ebx+14h] +
mov ecx [eax] +
mov eax 1 +
shl eax cl +
mov [esp+0E8h+var_A0] eax +
mov eax [esi] +
movzx ecx byte ptr [eax] +
mov byte ptr [esp+0E8h+var_C0] cl +
jmp loc_433E21  +
cmp cl 0Ah +
jz loc_433BDE  +
test byte ptr [ebx+34h] 8 +
jnz loc_433BDE  +
jmp loc_433C38  +
mov [esp+0E8h+var_E0] offset aElf_link_outpu +
mov [esp+0E8h+var_E4] 23FBh +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_40C6F0  +
add ecx 20h +
mov [esp+0E8h+var_94] cl +
jmp loc_433C17  +
test byte ptr [ebx+34h] 8 +
jnz loc_433EA0  +
jmp loc_433E5B  +
mov dword ptr [ebp+0] 1 +
jmp loc_433C3D  +
movzx eax byte ptr [ebx+0Ch] +
jmp loc_433C84  +
test byte ptr [ebx+34h] 8 +
jz loc_433BB2  +
movzx edx byte ptr [ebx+33h] +
and edx 6 +
cmp dl 6 +
jnz loc_433BB2  +
movzx edx word ptr [ebx+34h] +
and dx 180h +
cmp dx 100h +
jnz loc_433BB2  +
mov edx [eax+1Ch] +
cmp dword ptr [edx+28h] 1 +
jz loc_434753  +
cmp byte ptr [ebx+0Ch] 6 +
mov eax ebx +
jnz loc_43435C  +
mov eax [eax+14h] +
cmp byte ptr [eax+0Ch] 6 +
jz loc_434353  +
movzx ecx byte ptr [ebx+31h] +
mov edx offset aBInternalSymbo +
and ecx 3 +
cmp cl 1 +
jz loc_43437D  +
cmp cl 2 +
mov edx offset aBHiddenSymbolS +
mov ecx offset aBLocalSymbolSI +
cmovnz edx ecx +
mov eax [eax+14h] +
mov ecx [esi+4] +
cmp eax offset off_476230 +
jz loc_434774  +
mov eax [eax+94h] +
mov ebx [ebx+4] +
mov [esp+0E8h+var_E0] eax +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] edx +
mov [esp+0E8h+var_DC] ebx +
call off_476094  +
jmp loc_433D73  +
movzx edx byte ptr [esp+0E8h+var_C0] +
and edx 3 +
cmp dl 2 +
jnz loc_433E65  +
jmp loc_433E36  +
test byte ptr [ebx+34h] 8 +
jz loc_433EA0  +
jmp loc_433E40  +
test byte ptr [ebx+33h] 2 +
jnz loc_433F10  +
cmp dl 3 +
jz loc_434726  +
cmp dl 1 +
mov eax offset aBInternalSym_0 +
mov edx offset aBHiddenSymbo_0 +
cmovnz eax edx +
mov ecx [ebx+4] +
mov edx [esi+4] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] edx +
call off_476094  +
mov [esp+0E8h+var_E8] 11h +
call sub_40C770  +
xor eax eax +
mov dword ptr [ebp+0] 1 +
jmp loc_433C3D  +
movzx eax byte ptr [esp+0E8h+var_B0] +
mov [esp+0E8h+var_AC] ecx +
mov ecx edx +
and eax 0Fh +
movzx edx al +
cmp edx 0Ah +
mov edx 2 +
cmovz eax edx +
mov byte ptr [esp+0E8h+var_B0] al +
mov eax ecx +
and eax 10h +
cmp al 1 +
sbb eax eax +
mov edx eax +
movzx eax byte ptr [esp+0E8h+var_B0] +
and edx 10h +
lea eax [eax+edx+10h] +
mov edx ecx +
mov [esp+0E8h+var_94] al +
mov eax [esp+0E8h+var_AC] +
jmp loc_433ED0  +
mov edx [esi] +
test byte ptr [edx+1] 2 +
mov edx [ebx+14h] +
jz loc_434490  +
cmp edx offset off_476230 +
jz loc_434490  +
cmp dword ptr [edx+3Ch] offset off_476230 +
jz loc_434678  +
test byte ptr [edx+16h] 10h +
jnz loc_433C78  +
mov edx [edx+94h] +
test edx edx +
jz loc_433C78  +
test byte ptr [edx+2Ah] 20h +
jnz loc_433BD0  +
jmp loc_433C78  +
mov edx [ebx+14h] +
test edx edx +
jz loc_433C84  +
test byte ptr [edx+2Ah] 20h +
jnz loc_433BD0  +
jmp loc_433C84  +
mov [esp+0E8h+var_9C] 0 +
jmp loc_433EDC  +
mov ecx [ebx+4] +
mov eax [edx+20h] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] eax +
call sub_40FFC0  +
test eax eax +
jnz loc_433C68  +
jmp loc_433BD0  +
mov [esp+0E8h+var_B4] ecx +
call sub_4333F0  +
mov ecx [esp+0E8h+var_B4] +
test eax eax +
jz loc_4342F0  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax+174h] +
mov eax [esi+4] +
jmp loc_433F7C  +
test edi edi +
jnz loc_433F47  +
cmp byte ptr [esp+0E8h+var_C0] 1 +
jbe loc_434730  +
mov edi [ebx+4] +
mov [esp+0E8h+var_E4] 40h +
mov [esp+0E8h+var_C0] ecx +
mov [esp+0E8h+var_E8] edi +
call strrchr  +
mov ecx [esp+0E8h+var_C0] +
test eax eax +
jz loc_433F47  +
cmp byte ptr [eax+1] 0 +
jz loc_433F47  +
mov eax [esi+4] +
mov [esp+0E8h+var_E0] edi +
mov [esp+0E8h+var_E8] offset aBNoSymbolVersi +
mov [esp+0E8h+var_E4] eax +
call off_476094  +
xor eax eax +
mov dword ptr [ebp+0] 1 +
jmp loc_433C3D  +
test edx edx +
jz loc_434744  +
mov edx [edx+8] +
add edx 1 +
mov word ptr [esp+0E8h+var_8C] dx +
mov edx [esi] +
test byte ptr [edx] 20h +
jz loc_4340B2  +
add word ptr [esp+0E8h+var_8C] 1 +
jmp loc_4340B2  +
mov [ebx+1Ch] edi +
jmp loc_433C3D  +
mov eax [ebx+20h] +
movzx edx byte ptr [edi] +
mov [edi] al +
mov edi [esp+0E8h+var_C0] +
mov ecx [esi+0Ch] +
mov eax [ebx+20h] +
mov ecx [ecx+6Ch] +
lea eax [edi+eax+2] +
imul eax [esp+0E8h+var_C4] +
mov [ecx+eax] dl +
jmp loc_434068  +
mov edi [esp+0E8h+var_B8] +
mov eax [esi+4] +
mov edx [edi+3Ch] +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_DC] edi +
mov [esp+0E8h+var_E8] offset aBCouldNotFindO +
mov [esp+0E8h+var_E0] edx +
call off_476094  +
mov [esp+0E8h+var_E8] 0Fh +
call sub_40C770  +
xor eax eax +
mov dword ptr [ebp+0] 1 +
jmp loc_433C3D  +
xor ecx ecx +
mov word ptr [esp+0E8h+var_8C] cx +
jmp loc_4340B2  +
and edi 2 +
jz loc_4340C2  +
or word ptr [esp+0E8h+var_8C] 8000h +
jmp loc_4340C2  +
mov ecx [esp+0E8h+var_C4] +
add eax 1Ch +
lea edx [ecx+174h] +
mov ecx ebx +
call sub_4337C0  +
test eax eax +
mov eax [esi] +
jnz loc_433BA3  +
jmp loc_433D06  +
movzx ecx word ptr [edx+18h] +
and cx 380h +
cmp cx 100h +
jz loc_434490  +
cmp cx 200h +
jnz loc_433BD0  +
jmp loc_434490  +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+0E8h+var_E8] edi +
call eax  +
mov [esp+0E8h+var_B4] eax +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+3Ch] +
mov [esp+0E8h+var_E4] edi +
mov edx [ebx+20h] +
mov [esp+0E8h+var_E8] edx +
call eax  +
mov eax [esi+4] +
mov eax [eax+4] +
mov edx [eax+3Ch] +
mov eax [ebx+20h] +
mov edi [esp+0E8h+var_C0] +
mov ecx [esi+0Ch] +
lea eax [edi+eax+2] +
imul eax [esp+0E8h+var_C4] +
add eax [ecx+6Ch] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B4] +
mov [esp+0E8h+var_E8] eax +
call edx  +
jmp loc_434068  +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+0E8h+var_E8] edi +
call eax  +
mov [esp+0E8h+var_B4] eax +
mov eax [esi+4] +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+0E8h+var_E4] edi +
mov edx [ebx+20h] +
mov [esp+0E8h+var_E8] edx +
call eax  +
mov eax [esi+4] +
mov eax [eax+4] +
mov edx [eax+30h] +
jmp loc_4346CC  +
mov eax offset aBProtectedSymb +
jmp loc_4343F9  +
movzx eax byte ptr [ebx+33h] +
and eax 6 +
cmp al 2 +
jnz loc_43454A  +
jmp loc_433F47  +
mov edx 1 +
mov word ptr [esp+0E8h+var_8C] dx +
jmp loc_4345B3  +
mov ecx [esp+0E8h+var_C4] +
add eax 1Ch +
lea edx [ecx+174h] +
mov ecx ebx +
call sub_4337C0  +
test eax eax +
jnz loc_433BB2  +
jmp loc_43434B  +
mov eax ecx +
jmp loc_434394  +
mov [esp+0E8h+var_E0] offset aElf_link_outpu +
mov [esp+0E8h+var_E4] 24C9h +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_40C6F0  +
mov esi esi +
lea edi [edi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
test edx edx +
mov [esp+124h+var_108] ecx +
jz loc_43482F  +
mov ebp eax +
mov esi edx +
jmp loc_4347BE  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_4347E6  +
mov [esp+124h+var_120] ebp +
mov eax [esi] +
mov [esp+124h+var_124] eax +
call strcmp  +
test eax eax +
jnz loc_4347B7  +
mov eax [esi+1Ch] +
mov edx [esp+124h+var_108] +
mov [edx] eax +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+124h+var_124] ebp +
call strlen  +
mov [esp+124h+var_10C] eax +
mov esi [ebx] +
mov [esp+124h+var_124] esi +
call strlen  +
cmp eax [esp+124h+var_10C] +
mov edi eax +
ja loc_434828  +
mov [esp+124h+var_11C] eax +
mov [esp+124h+var_120] ebp +
mov [esp+124h+var_124] esi +
call strncmp  +
test eax eax +
jnz loc_434828  +
add edi ebp +
mov esi offset a_end +
mov ecx 4 +
cmps   +
jz loc_434839  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_4347F2  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+24h] +
mov ecx [esp+124h+var_108] +
add eax [ebx+1Ch] +
mov [ecx] eax +
mov eax 1 +
jmp loc_4347DE  +
***
push ebx  +
mov ebx edx +
sub esp 10h +
mov esi [edx] +
mov ecx [edx+4] +
imul ecx [esi+28h] +
mov [esi+18h] ecx +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_10] eax +
call sub_407C00  +
test eax eax +
mov [esi+30h] eax +
jz loc_4348B0  +
mov eax [ebx+0Ch] +
mov edi 1 +
test eax eax +
jz loc_434890  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx+4] +
test eax eax +
jz loc_434883  +
shl eax 2 +
mov [esp+10h+var_10] eax +
call sub_40F150  +
test eax eax +
jz loc_4348BB  +
mov [ebx+0Ch] eax +
jmp loc_434883  +
mov edx [esi+18h] +
xor edi edi +
test edx edx +
jz loc_434877  +
jmp loc_434883  +
xor edi edi +
jmp loc_434883  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_4349A5  +
mov eax [esi+4] +
mov eax [eax+154h] +
mov [esp+1Ch+var_1C] ebx +
call eax  +
test eax eax +
jz loc_4349A5  +
movzx eax byte ptr [ebx+34h] +
mov ebp [ebx+4] +
shr al 1 +
and eax 3 +
cmp eax 1 +
jle loc_4349B2  +
mov [esp+1Ch+var_18] 40h +
mov [esp+1Ch+var_1C] ebp +
call strchr  +
test eax eax +
jz loc_4349B2  +
sub eax ebp +
mov [esp+1Ch+var_10] eax +
add eax 1 +
mov [esp+1Ch+var_1C] eax +
call sub_40EFC0  +
test eax eax +
mov edi eax +
jz loc_4349B6  +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] ebp +
mov ebp edi +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_14] eax +
call memcpy  +
mov eax [esp+1Ch+var_10] +
mov byte ptr [edi+eax] 0 +
mov [esp+1Ch+var_1C] ebp +
call sub_423EA0  +
mov ecx [esi+8] +
mov edx [esi+10h] +
mov [edx+ecx*4] eax +
mov edx [esi+14h] +
mov ecx [ebx+20h] +
mov [edx+ecx*4] eax +
mov eax [esi+28h] +
add dword ptr [esi+8] 1 +
mov edx [ebx+20h] +
test eax eax +
js loc_434981  +
cmp eax edx +
jle loc_434984  +
mov [esi+28h] edx +
test edi edi +
mov eax 1 +
jz loc_4349AA  +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor edi edi +
jmp loc_434955  +
mov dword ptr [esi+44h] 1 +
xor eax eax +
jmp loc_4349AA  +
***
jmp sub_4349D0  +
***
mov ebx [esp+18h+arg_0] +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_4349F4  +
mov eax [ebx+38h] +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_44E530  +
mov [ebx+38h] eax +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 14h +
mov eax [edx+8] +
test eax eax +
jz loc_434A18  +
mov [esp+18h+var_18] eax +
call sub_44E230  +
mov eax [ebx+14h] +
test eax eax +
jz loc_434A27  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+18h] +
test eax eax +
jz loc_434A36  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_434A45  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+20h] +
test eax eax +
jz loc_434A54  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+24h] +
test eax eax +
jz loc_434A63  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+28h] +
test eax eax +
jz loc_434A72  +
mov [esp+18h+var_18] eax +
call free  +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_434A81  +
mov [esp+18h+var_18] eax +
call free  +
mov edx [ebx+30h] +
test edx edx +
jz loc_434A90  +
mov [esp+18h+var_18] edx +
call free  +
mov edx [ebx+34h] +
test edx edx +
jz loc_434A9F  +
mov [esp+18h+var_18] edx +
call free  +
mov ebx [esi] +
test ebx ebx +
jz loc_434ADC  +
test byte ptr [ebx+14h] 4 +
mov esi [ebx+8Ch] +
jz loc_434AD5  +
mov eax [esi+48h] +
test eax eax +
jz loc_434AC6  +
mov [esp+18h+var_18] eax +
call free  +
test byte ptr [ebx+14h] 4 +
jz loc_434AD5  +
mov eax [esi+58h] +
test eax eax +
jz loc_434AD5  +
mov [esp+18h+var_18] eax +
call free  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_434AA5  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov ebx [esp+18h+arg_0] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_434B10  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
mov eax [ebx+14h] +
test byte ptr [eax+16h] 80h +
jz loc_434B03  +
movzx edx word ptr [eax+18h] +
and dx 380h +
cmp dx 100h +
jnz loc_434B03  +
mov eax [eax+8Ch] +
mov edx [ebx+18h] +
mov eax [eax+88h] +
mov [esp+18h+var_C] edx +
mov [esp+18h+var_10] eax +
lea eax [ebx+14h] +
mov [esp+18h+var_14] eax +
mov eax [esp+18h+arg_4] +
mov [esp+18h+var_18] eax +
call sub_450BC0  +
mov [ebx+18h] eax +
jmp loc_434B03  +
***
push esi  +
mov esi edx +
push ebx  +
mov edx offset a_rel_0 +
sub esp 1Ch +
mov ebx offset a_rela_0 +
test ecx ecx +
cmovz ebx edx +
test esi esi +
jz loc_434BC4  +
mov [esp+20h+var_20] ebx +
mov edi eax +
call strlen  +
mov [esp+20h+var_20] esi +
mov ebp eax +
call strlen  +
mov [esp+20h+var_20] edi +
lea eax [ebp+eax+1] +
mov [esp+20h+var_1C] eax +
call sub_407B20  +
mov [esp+20h+var_14] esi +
mov [esp+20h+var_18] ebx +
mov [esp+20h+var_1C] offset aSS_9 +
mov edi eax +
mov [esp+20h+var_20] eax +
call sprintf  +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_434BBC  +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+44h+arg_C] +
mov [esp+44h+var_30] eax +
mov eax [edx+0A0h] +
mov [esp+44h+var_28] ecx +
mov ebp [esp+44h+arg_8] +
test ebx ebx +
mov [esp+44h+var_2C] eax +
jz loc_434CA1  +
mov esi ebp +
mov ebp edi +
mov edi edx +
jmp loc_434C11  +
add ebp 1 +
add esi 14h +
cmp ebp ebx +
jz loc_434CA1  +
movzx eax byte ptr [esi+0Ch] +
shr al 4 +
test al al +
jnz loc_434C03  +
mov eax [esp+44h+var_2C] +
mov ecx [esi+8] +
mov eax [eax+64h] +
mov [esp+44h+var_3C] ecx +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_40] eax +
call sub_424010  +
test eax eax +
jz loc_434C03  +
mov edx [esp+44h+var_30] +
mov [esp+44h+var_44] eax +
mov [esp+44h+var_40] edx +
call strcmp  +
test eax eax +
jnz loc_434C03  +
mov eax edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
mov eax [esp+44h+arg_0] +
mov eax [eax] +
mov eax [eax+edi*4] +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] esi +
mov [esp+44h+var_18] eax +
lea eax [esp+44h+var_18] +
mov [esp+44h+var_3C] eax +
call sub_4317B0  +
mov edx [esp+44h+var_18] +
mov edi [esp+44h+arg_4] +
mov ecx [edx+3Ch] +
mov [edi] eax +
add eax [ecx+1Ch] +
add eax [edx+38h] +
mov [edi] eax +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+44h+var_28] +
mov edi [esp+44h+var_30] +
mov eax [eax] +
mov eax [eax+1Ch] +
mov [esp+44h+var_34] 1 +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_3C] 0 +
mov [esp+44h+var_40] edi +
mov [esp+44h+var_44] eax +
call sub_414050  +
test eax eax +
mov edx eax +
jz loc_434D08  +
movzx eax byte ptr [eax+0Ch] +
lea ecx [eax-3] +
xor eax eax +
cmp cl 1 +
ja loc_434C99  +
mov ecx [edx+14h] +
mov edi [esp+44h+arg_4] +
mov eax [ecx+3Ch] +
mov eax [eax+1Ch] +
add eax [edx+18h] +
add eax [ecx+38h] +
mov [edi] eax +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
jmp loc_434C99  +
***
push esi  +
push ebx  +
push eax  +
mov eax 1048h +
call sub_472FB0  +
sub esp eax +
mov ebx [edx] +
mov ebp edx +
mov eax [esp+14h+arg_1030] +
mov [esp+14h+arg_C] ecx +
mov [esp+14h+var_14] ebx +
mov [esp+14h+arg_8] eax +
call strlen  +
mov ecx eax +
lea eax [eax-1] +
cmp eax 0FFFh +
ja loc_434DA7  +
movzx edx byte ptr [ebx] +
cmp dl 2Eh +
jz loc_434F30  +
jle loc_434DC0  +
cmp dl 53h +
jz loc_434F53  +
cmp dl 73h +
mov [esp+14h+arg_14] 0 +
jnz loc_434EA5  +
lea eax [ebx+1] +
mov [esp+14h+var_C] 0Ah +
mov [esp+14h+var_10] ebp +
mov [esp+14h+var_14] eax +
mov [esp+14h+arg_10] ecx +
call strtol  +
mov ecx [esp+14h+arg_10] +
add ebx ecx +
mov esi eax +
mov eax [ebp+0] +
lea edi [eax+1] +
cmp edi ebx +
ja loc_434DA7  +
lea eax [esi+1] +
cmp eax 1000h +
jbe loc_434DF6  +
mov [esp+14h+var_14] 5 +
call sub_40C770  +
xor eax eax +
add esp 104Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dl 23h +
jnz loc_434EA5  +
add ebx 1 +
mov [esp+14h+var_10] ebp +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_C] 10h +
call strtoul  +
mov esi [esp+14h+arg_8] +
mov [esi] eax +
add esp 104Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebx [esp+14h+arg_28] +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] edi +
mov [esp+14h+var_14] ebx +
call memcpy  +
mov byte ptr [esp+esi+14h+arg_28] 0 +
add esi edi +
mov [ebp+0] esi +
mov esi [esp+14h+arg_14] +
test esi esi +
jz loc_435060  +
mov eax [esp+14h+arg_1048] +
mov ecx [esp+14h+arg_8] +
mov eax [eax+4] +
mov edx [eax+64h] +
mov eax ebx +
call loc_4347A0  +
test eax eax +
jnz loc_4350A5  +
mov eax [esp+14h+arg_1054] +
mov ecx [esp+14h+arg_1048] +
mov edx [esp+14h+arg_C] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_8] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
add eax 30h +
mov [esp+14h+var_14] eax +
mov eax ebx +
call sub_434BD0  +
test eax eax +
jnz loc_4350A5  +
mov [esp+14h+var_C] ebx +
mov [esp+14h+var_10] offset aSection +
mov [esp+14h+var_14] offset aUndefinedSRefe +
call off_476094  +
xor eax eax +
jmp loc_434DB5  +
mov edi offset a0_0 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_434F60  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
neg eax  +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
mov eax [esp+14h+arg_8] +
add ebx 1 +
mov edi [esp+14h+arg_104C] +
mov [eax] edi +
mov eax 1 +
mov [ebp+0] ebx +
add esp 104Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+14h+arg_14] 1 +
jmp loc_434D70  +
mov edi offset asc_490323 +
mov ecx 2 +
mov esi ebx +
cmps   +
jz loc_4350B0  +
mov edi offset asc_490326 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_435178  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov edx [esp+14h+arg_1058] +
mov eax [esp+14h+arg_24] +
mov ecx [esp+14h+arg_28] +
test edx edx +
jz loc_435544  +
mov edi [esp+14h+arg_8] +
sar eax cl +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
mov eax [esp+14h+arg_1054] +
mov ecx [esp+14h+arg_1048] +
mov edx [esp+14h+arg_C] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_8] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
add eax 30h +
mov [esp+14h+var_14] eax +
mov eax ebx +
call sub_434BD0  +
test eax eax +
jz loc_435253  +
mov eax 1 +
jmp loc_434DB5  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_24] +
mov ecx [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
shl eax cl +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
mov edi offset asc_490329 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_435293  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_28] +
cmp [esp+14h+arg_24] eax +
setz al  +
movzx eax al +
mov edi [esp+14h+arg_8] +
mov [edi] eax +
jmp loc_4350A5  +
mov eax [esp+14h+arg_1048] +
mov ecx [esp+14h+arg_8] +
mov eax [eax+4] +
mov edx [eax+64h] +
mov eax ebx +
call loc_4347A0  +
test eax eax +
jnz loc_4350A5  +
mov [esp+14h+var_C] ebx +
mov [esp+14h+var_10] offset aSymbol +
mov [esp+14h+var_14] offset aUndefinedSRefe +
call off_476094  +
xor eax eax +
jmp loc_434DB5  +
mov edi offset asc_49032C +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_435368  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_28] +
cmp [esp+14h+arg_24] eax +
setnz al  +
movzx eax al +
jmp loc_435248  +
mov edi offset asc_49032F +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_435456  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_43571A  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setle al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
mov edi offset asc_490332 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_435556  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_43587B  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnl al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
mov edi [esp+14h+arg_8] +
shr eax cl +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
mov edi offset asc_490335 +
mov ecx 2 +
mov esi ebx +
cmps   +
jnz loc_43562F  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
xor eax eax +
cmp [esp+14h+arg_24] 0 +
jz loc_435248  +
cmp [esp+14h+arg_28] 0 +
jmp loc_43535D  +
mov [esp+14h+var_C] 2 +
mov [esp+14h+var_10] offset asc_490338 +
mov [esp+14h+var_14] ebx +
mov [esp+14h+arg_10] edx +
call strncmp  +
mov edx [esp+14h+arg_10] +
test eax eax +
jnz loc_435734  +
cmp byte ptr [ebx+2] 3Ah +
lea edx [ebx+3] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+2] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
cmp [esp+14h+arg_24] 0 +
mov eax 1 +
jz loc_435625  +
jmp loc_435248  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setbe al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
cmp dl 7Eh +
jz loc_4358FC  +
cmp dl 21h +
jz loc_435895  +
cmp dl 2Ah +
jz loc_435A53  +
cmp dl 2Fh +
jz loc_435989  +
cmp dl 25h +
jz loc_43604A  +
cmp dl 5Eh +
jz loc_435F84  +
cmp dl 7Ch +
jz loc_435EBE  +
cmp dl 26h +
jz loc_435DF8  +
cmp dl 2Bh +
nop   +
jz loc_435D01  +
cmp dl 2Dh +
jz loc_435C3B  +
cmp dl 3Ch +
jz loc_435B61  +
cmp dl 3Eh +
jnz loc_435B48  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_43596F  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnle al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnb al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
cmp [esp+14h+arg_24] 0 +
jmp loc_435242  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
not eax  +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setnbe al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_24] +
jz loc_435B19  +
cdq   +
idiv  [esp+14h+arg_28] +
jmp loc_435248  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
cmp [esp+14h+arg_1058] 0 +
jz loc_435B2F  +
mov eax [esp+14h+arg_24] +
imul eax [esp+14h+arg_28] +
jmp loc_435248  +
xor edx edx +
mov edi [esp+14h+arg_8] +
div  [esp+14h+arg_28] +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
mov eax [esp+14h+arg_28] +
imul eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
movsx edx dl +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] offset aUnknownOperato +
call off_476094  +
jmp loc_434DA7  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_28] +
jz loc_435DC6  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setl al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_24] +
mov edi [esp+14h+arg_8] +
sub eax [esp+14h+arg_28] +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
cmp [esp+14h+arg_1058] 0 +
jz loc_435DE0  +
mov eax [esp+14h+arg_24] +
add eax [esp+14h+arg_28] +
jmp loc_435248  +
cmp [esp+14h+arg_24] eax +
mov edi [esp+14h+arg_8] +
setb al  +
movzx eax al +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
add eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
and eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
or eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_28] +
mov edi [esp+14h+arg_8] +
xor eax [esp+14h+arg_24] +
mov [edi] eax +
mov eax 1 +
jmp loc_434DB5  +
cmp byte ptr [ebx+1] 3Ah +
lea edx [ebx+2] +
mov ecx [esp+14h+arg_C] +
lea eax [ebx+1] +
cmovz eax edx +
mov edx ebp +
mov [ebp+0] eax +
mov eax [esp+14h+arg_1058] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_24] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
mov eax [esp+14h+arg_1058] +
mov edx ebp +
add dword ptr [ebp+0] 1 +
mov ecx [esp+14h+arg_C] +
mov [esp+14h+var_4] eax +
mov eax [esp+14h+arg_1054] +
mov [esp+14h+var_8] eax +
mov eax [esp+14h+arg_1050] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_104C] +
mov [esp+14h+var_10] eax +
mov eax [esp+14h+arg_1048] +
mov [esp+14h+var_14] eax +
lea eax [esp+14h+arg_28] +
call sub_434D10  +
test eax eax +
jz loc_434DB3  +
cmp [esp+14h+arg_1058] 0 +
mov eax [esp+14h+arg_24] +
jz loc_436116  +
cdq   +
idiv  [esp+14h+arg_28] +
mov eax [esp+14h+arg_8] +
mov [eax] edx +
jmp loc_4350A5  +
xor edx edx +
div  [esp+14h+arg_28] +
mov eax [esp+14h+arg_8] +
mov [eax] edx +
mov eax 1 +
jmp loc_434DB5  +
***
mov eax [esp+18h+arg_0] +
mov edx [esp+18h+arg_4] +
cmp [eax+14h] edx +
jbe loc_436155  +
mov ecx [eax+0Ch] +
lea ebx [edx+edx*4] +
lea ebx [ecx+ebx*4] +
movzx ecx byte ptr [ebx+0Ch] +
shr cl 4 +
test cl cl +
jz loc_4361B8  +
sub edx [eax+18h] +
mov eax [eax+1Ch] +
mov eax [eax+edx*4] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
ja loc_43617F  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_436170  +
sub edx 3 +
cmp dl 1 +
ja loc_4361B1  +
mov eax [eax+14h] +
cmp eax offset off_476230 +
jz loc_4361B1  +
cmp dword ptr [eax+3Ch] offset off_476230 +
jnz loc_4361B1  +
movzx edx word ptr [eax+18h] +
and dx 380h +
cmp dx 100h +
jz loc_4361B1  +
cmp dx 200h +
jnz loc_4361B3  +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
mov edx [ebx+10h] +
mov eax [eax+10h] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_426C70  +
test eax eax +
jz loc_4361B3  +
mov edx [esp+18h+arg_8] +
test edx edx +
jz loc_4361B3  +
cmp eax offset off_476230 +
jnz loc_436191  +
jmp loc_4361B1  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+4Ch+arg_4] +
mov ebx [esp+4Ch+arg_C] +
mov [esp+4Ch+var_3C] 0 +
mov edi [esp+4Ch+arg_0] +
mov [esp+4Ch+var_40] 0 +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] ebx +
mov eax [esi+1Ch] +
mov [esp+4Ch+var_4C] eax +
call sub_414050  +
test eax eax +
jz loc_436222  +
mov byte ptr [eax+0Ch] 0 +
mov [esp+4Ch+var_10] eax +
mov eax [edi+4] +
mov ebp [eax+1B0h] +
lea eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_28] eax +
movzx eax byte ptr [ebp+1ACh] +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_34] 0 +
mov [esp+4Ch+var_38] 0 +
and eax 1 +
mov [esp+4Ch+var_2C] eax +
mov eax [esp+4Ch+arg_8] +
mov [esp+4Ch+var_40] 2 +
mov [esp+4Ch+var_44] ebx +
mov [esp+4Ch+var_48] edi +
mov [esp+4Ch+var_3C] eax +
mov [esp+4Ch+var_4C] esi +
call sub_414CB0  +
test eax eax +
jz loc_4362D0  +
mov ebx [esp+4Ch+var_10] +
movzx eax byte ptr [ebx+31h] +
or byte ptr [ebx+33h] 2 +
and byte ptr [ebx+34h] 0FEh +
or byte ptr [ebx+0Dh] 2 +
mov edx eax +
and edx 3 +
cmp dl 1 +
mov byte ptr [ebx+30h] 1 +
jz loc_4362AC  +
and eax 0FFFFFFFCh +
or eax 2 +
mov [ebx+31h] al +
mov eax [ebp+0DCh] +
mov [esp+4Ch+var_48] ebx +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_44] 1 +
call eax  +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esi+17Ch] +
add [eax+24h] edx +
test byte ptr [esi+1AEh] 4 +
jz loc_43630F  +
mov [esp+8] eax +
mov eax [esp+34h] +
mov dword ptr [esp+0Ch] offset a_global_offset +
mov [esp] ebx +
mov [esp+4] eax +
call sub_4361E0  +
mov ecx [esp+34h] +
mov edx [ecx+1Ch] +
test eax eax +
mov [edx+70h] eax +
setnz al  +
movzx eax al +
jmp loc_436314  +
***
xor eax eax +
jmp loc_436314  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_4] +
mov ebx [esi+1Ch] +
cmp dword ptr [ebx+28h] 1 +
jz loc_436440  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+30h] +
mov eax 1 +
test ecx ecx +
jnz loc_436436  +
mov edx [ebx+38h] +
test edx edx +
jz loc_436608  +
mov eax [ebx+50h] +
test eax eax +
jz loc_436615  +
mov ebp [ebx+38h] +
mov eax [ebp+4] +
mov ebx [eax+1B0h] +
mov eax [ebx+1Ch] +
mov edi eax +
mov [esp+2Ch+var_10] eax +
movzx eax byte ptr [esi] +
or edi 8 +
and eax 3 +
cmp al 1 +
ja loc_436495  +
mov edi [esp+2Ch+var_10] +
or edi 8 +
test byte ptr [esi+6] 1 +
jz loc_4365E7  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_version_d +
mov [esp+2Ch+var_2C] ebp +
call near ptr dword_410C20  +
test eax eax +
jz loc_436434  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_version +
mov [esp+2Ch+var_2C] ebp +
call near ptr dword_410C20  +
test eax eax +
jz loc_436434  +
mov dword ptr [eax+40h] 1 +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_version_r +
mov [esp+2Ch+var_2C] ebp +
call near ptr dword_410C20  +
test eax eax +
jz loc_436434  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_dynsym +
mov [esp+2Ch+var_2C] ebp +
call near ptr dword_410C20  +
test eax eax +
jz loc_436434  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov ecx [esi+1Ch] +
mov [ecx+0F8h] eax +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_dynstr +
mov [esp+2Ch+var_2C] ebp +
call near ptr dword_410C20  +
test eax eax +
jz loc_436434  +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] offset a_dynamic +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_24] eax +
call near ptr dword_410C20  +
test eax eax +
jz loc_436434  +
mov ecx [ebx+174h] +
movzx ecx byte ptr [ecx+0Bh] +
mov [eax+40h] ecx +
mov [esp+2Ch+var_20] offset a_dynamic_0 +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebp +
call sub_4361E0  +
mov ecx [esi+1Ch] +
test eax eax +
mov [ecx+78h] eax +
jz loc_436434  +
movzx eax byte ptr [esi+3] +
test al 20h +
jnz loc_43662D  +
test al 40h +
jnz loc_43666C  +
mov eax [ebx+6Ch] +
test eax eax +
jz loc_436434  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] ebp +
call eax  +
test eax eax +
jz loc_436434  +
mov eax [esi+1Ch] +
mov dword ptr [eax+30h] 1 +
mov eax 1 +
jmp loc_436436  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_interp +
mov [esp+2Ch+var_2C] ebp +
call near ptr dword_410C20  +
test eax eax +
jnz loc_436495  +
jmp loc_436434  +
mov eax [esp+2Ch+arg_0] +
mov [ebx+38h] eax +
nop   +
jmp loc_436457  +
call sub_44E1B0  +
test eax eax +
mov [ebx+50h] eax +
jz loc_436434  +
mov ebx [esi+1Ch] +
jmp loc_436462  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_hash +
mov [esp+2Ch+var_2C] ebp +
call near ptr dword_410C20  +
test eax eax +
jz loc_436434  +
mov ecx [ebx+174h] +
movzx edx byte ptr [ecx+0Bh] +
mov [eax+40h] edx +
mov eax [eax+8Ch] +
movzx ecx byte ptr [ecx+8] +
mov [eax+28h] ecx +
movzx eax byte ptr [esi+3] +
jmp loc_4365AF  +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_28] offset a_gnu_hash +
mov [esp+2Ch+var_2C] ebp +
call near ptr dword_410C20  +
test eax eax +
jz loc_436434  +
mov ecx [ebx+174h] +
movzx edi byte ptr [ecx+0Bh] +
mov [eax+40h] edi +
mov eax [eax+8Ch] +
cmp byte ptr [ecx+0Ah] 40h +
jz loc_4366AD  +
mov dword ptr [eax+28h] 4 +
jmp loc_4365B7  +
mov dword ptr [eax+28h] 0 +
jmp loc_4365B7  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_4] +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_436860  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
jbe loc_4368C5  +
mov eax [esp+1Ch+arg_0] +
mov esi [eax+1Ch] +
mov eax [esi+4Ch] +
mov edi [esi+50h] +
mov [ebx+20h] eax +
add eax 1 +
test edi edi +
mov [esi+4Ch] eax +
jz loc_4368E7  +
mov ebp [ebx+4] +
mov [esp+1Ch+var_18] 40h +
mov [esp+1Ch+var_1C] ebp +
call strchr  +
test eax eax +
mov esi eax +
jz loc_436900  +
mov byte ptr [eax] 0 +
mov [esp+1Ch+var_14] 1 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_44E260  +
mov byte ptr [esi] 40h +
cmp eax 0FFFFFFFFh +
jz loc_4368F5  +
mov [ebx+38h] eax +
jmp loc_436851  +
movzx eax byte ptr [ebx+0Ch] +
sub eax 1 +
cmp al 1 +
jbe loc_43686E  +
or byte ptr [ebx+34h] 8 +
mov eax [esp+1Ch+arg_0] +
mov esi [eax+1Ch] +
mov eax [esi+34h] +
test eax eax +
jnz loc_436875  +
jmp loc_436851  +
call sub_44E1B0  +
test eax eax +
mov edi eax +
mov [esi+50h] eax +
jnz loc_436888  +
xor eax eax +
jmp loc_436856  +
mov [esp+1Ch+var_14] 0 +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_44E260  +
jmp loc_4368BB  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 8Ch +
mov esi [esp+94h+arg_8] +
mov edx [esp+94h+arg_10] +
mov ecx [esp+94h+arg_4] +
mov ebp [esp+94h+arg_20] +
mov [esp+94h+var_38] esi +
mov esi [esp+94h+arg_C] +
mov [esp+94h+var_64] edx +
mov edx [esp+94h+arg_14] +
mov [esp+94h+var_70] eax +
mov eax [esp+94h+arg_0] +
mov [esp+94h+var_44] ecx +
mov ecx [ecx] +
mov [esp+94h+var_74] esi +
mov esi [esp+94h+arg_24] +
mov [esp+94h+var_5C] edx +
mov edx [esp+94h+arg_18] +
mov [esp+94h+var_58] eax +
mov [esp+94h+var_34] ebp +
mov [esp+94h+var_48] esi +
mov esi [esp+94h+arg_28] +
mov [esp+94h+var_50] edx +
mov edx [esp+94h+arg_1C] +
mov [esp+94h+var_40] esi +
mov esi [esp+94h+arg_2C] +
mov dword ptr [edx] 0 +
mov [esp+94h+var_3C] edx +
mov dword ptr [ebp+0] 0 +
mov [esp+94h+var_6C] esi +
mov [esp+94h+var_54] ecx +
movzx eax byte ptr [eax+0Ch] +
shr al 4 +
cmp ecx offset off_476188 +
movzx eax al +
mov [esp+94h+var_60] eax +
jz loc_437450  +
mov [esp+94h+var_84] 0 +
mov [esp+94h+var_88] 0 +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov eax [edi+1Ch] +
mov [esp+94h+var_94] eax +
call sub_414050  +
mov ebp eax +
test ebp ebp +
jz loc_436EF0  +
mov eax [esp+94h+var_74] +
xor esi esi +
mov [eax] ebp +
mov eax [esp+94h+var_70] +
movzx edx byte ptr [ebp+34h] +
mov ecx [eax+4] +
and edx 6 +
cmp dl 2 +
mov [esp+94h+var_74] edx +
mov eax [ecx+1B0h] +
mov [esp+94h+var_68] eax +
jz loc_436A7A  +
mov [esp+94h+var_90] 40h +
mov [esp+94h+var_94] ebx +
mov [esp+94h+var_4C] ecx +
call strrchr  +
mov ecx [esp+94h+var_4C] +
test eax eax +
mov esi eax +
jz loc_4374B0  +
mov edx [esp+94h+var_74] +
test dl dl +
jz loc_436B57  +
cmp byte ptr [esi+1] 0 +
lea eax [esi+1] +
mov esi 0 +
cmovnz esi eax +
movzx eax byte ptr [ebp+0Ch] +
mov byte ptr [esp+94h+var_74] al +
sub eax 6 +
cmp al 1 +
ja loc_436C34  +
mov ebx ebp +
nop   +
mov ebx [ebx+14h] +
movzx edx byte ptr [ebx+0Ch] +
lea eax [edx-6] +
cmp al 1 +
jbe loc_436A90  +
mov eax [esp+94h+var_6C] +
mov byte ptr [esp+94h+var_74] dl +
mov eax [eax] +
test eax eax +
jnz loc_436B40  +
cmp ebp ebx +
jz loc_436C43  +
test dl dl +
jz loc_436C43  +
movzx eax byte ptr [ebp+34h] +
and eax 6 +
cmp al 6 +
movzx eax byte ptr [ebx+34h] +
jz loc_436ADD  +
mov edx eax +
and edx 6 +
cmp dl 6 +
jnz loc_436C43  +
shr al 1 +
and eax 3 +
mov edx eax +
xor eax eax +
cmp edx 1 +
jle loc_436B09  +
mov [esp+94h+var_90] 40h +
mov eax [ebx+4] +
mov [esp+94h+var_4C] ecx +
mov [esp+94h+var_94] eax +
call strrchr  +
mov ecx [esp+94h+var_4C] +
add eax 1 +
cmp eax esi +
jz loc_437612  +
test eax eax +
jz loc_436B35  +
test esi esi +
jz loc_436B35  +
mov [esp+94h+var_90] esi +
mov [esp+94h+var_94] eax +
mov [esp+94h+var_4C] ecx +
call strcmp  +
mov ecx [esp+94h+var_4C] +
test eax eax +
jnz loc_436B35  +
mov al 1 +
jmp loc_436B37  +
xor eax eax +
mov esi [esp+94h+var_6C] +
mov [esi] eax +
lea esi [esi+0] +
movzx eax byte ptr [esp+94h+var_74] +
cmp al 5 +
ja loc_436C60  +
movzx edx al +
jmp ds:off_490570[edx*4]  +
cmp ebx eax +
jnb loc_436E01  +
cmp byte ptr [eax-1] 40h +
jz loc_436E01  +
or byte ptr [ebp+34h] 6 +
jmp loc_436A6B  +
mov eax [ebx+14h] +
mov esi [eax+4] +
mov [esp+94h+var_30] esi +
mov esi [esi+94h] +
mov [esp+94h+var_74] esi +
mov esi [esp+94h+var_50] +
test esi esi +
jz loc_436BA5  +
mov eax [eax] +
mov [esi] eax +
jmp loc_436BA5  +
mov eax [ebx+14h] +
mov [esp+94h+var_30] eax +
mov eax [eax+94h] +
mov [esp+94h+var_74] eax +
mov eax [esp+94h+var_64] +
test eax eax +
jz loc_436BB7  +
mov edx [eax] +
test edx edx +
jz loc_437497  +
cmp [esp+94h+var_60] 2 +
setz al  +
mov byte ptr [esp+94h+var_2C] al +
movzx eax al +
mov [esp+94h+var_64] eax +
movzx eax byte ptr [ebx+0Ch] +
cmp al 2 +
setz dl  +
cmp al 4 +
mov esi edx +
mov edx [esp+94h+var_5C] +
setz al  +
or esi eax +
mov eax esi +
movzx eax al +
test edx edx +
mov [esp+94h+var_4C] eax +
jz loc_436BEF  +
mov [edx] eax +
mov edx [edi+30h] +
mov eax [esp+94h+var_68] +
mov edx [edx+4] +
mov eax [eax+74h] +
mov [esp+94h+var_94] ecx +
mov [esp+94h+var_90] edx +
call eax  +
test eax eax +
jnz loc_436C75  +
mov eax 1 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+14h] +
mov [esp+94h+var_30] 0 +
mov [esp+94h+var_74] eax +
jmp loc_436BA5  +
mov eax [esp+94h+var_6C] +
mov ebx ebp +
cmp dword ptr [eax] 0 +
jnz loc_436B40  +
mov eax [esp+94h+var_6C] +
mov dword ptr [eax] 1 +
movzx eax byte ptr [esp+94h+var_74] +
cmp al 5 +
jbe loc_436B4D  +
lea esi [esi+0] +
mov [esp+94h+var_74] 0 +
mov [esp+94h+var_30] 0 +
jmp loc_436BA5  +
mov ecx [esp+94h+var_58] +
mov edx ebx +
mov eax edi +
call sub_431C90  +
mov eax [esp+94h+var_70] +
mov eax [eax+28h] +
shr eax 5 +
and eax 40h +
mov edx eax +
setnz al  +
mov byte ptr [esp+94h+var_5C] al +
movzx eax al +
test eax eax +
mov [esp+94h+var_28] eax +
jz loc_436CC3  +
cmp [esp+94h+var_54] offset off_476188 +
jz loc_4375FA  +
mov eax [esp+94h+var_6C] +
mov eax [eax] +
test eax eax +
jz loc_436CBF  +
or byte ptr [ebx+34h] 80h +
or byte ptr [ebp+34h] 80h +
movzx eax byte ptr [ebx+0Ch] +
test al al +
jz loc_437483  +
mov ecx [esp+94h+var_74] +
cmp [esp+94h+var_70] ecx +
jz loc_43755A  +
mov ecx [esp+94h+var_74] +
test ecx ecx +
jz loc_4375C7  +
mov ecx [esp+94h+var_74] +
mov ecx [ecx+28h] +
shr ecx 0Bh +
and ecx 1 +
mov esi [esp+94h+var_54] +
cmp esi offset off_476188 +
jz loc_4375C0  +
mov esi [esi+14h] +
shr esi 0Ch +
xor esi 1 +
and esi 1 +
lea edx [eax-1] +
cmp dl 1 +
setnbe byte ptr [esp+94h+var_6C]  +
cmp al 5 +
setnz al  +
and byte ptr [esp+94h+var_6C] al +
movzx eax byte ptr [esp+94h+var_6C] +
mov [esp+94h+var_24] 0 +
mov [esp+94h+var_60] eax +
mov eax [esp+94h+var_58] +
movzx eax byte ptr [eax+0Ch] +
mov byte ptr [esp+94h+var_2C] al +
and eax 0Fh +
jnz loc_4374EA  +
movzx eax byte ptr [ebx+30h] +
mov [esp+94h+var_2C] 0 +
test al al +
jnz loc_4374C2  +
mov edx [esp+94h+var_50] +
test edx edx +
setz byte ptr [esp+94h+var_20]  +
cmp byte ptr [esp+94h+var_5C] 0 +
jz loc_436E20  +
cmp byte ptr [esp+94h+var_20] 0 +
jz loc_436E20  +
mov eax ecx +
mov edx esi +
xor eax 1 +
test al dl +
jz loc_436E20  +
mov eax [esp+94h+var_60] +
test eax eax +
jz loc_436E13  +
mov eax [esp+94h+var_58] +
movzx edx byte ptr [eax+0Ch] +
movzx eax byte ptr [ebx+30h] +
and edx 0Fh +
cmp al dl +
jz loc_436DD7  +
test dl dl +
jz loc_436DD7  +
test al al +
jz loc_436DD7  +
mov [esp+94h+var_16] dl +
mov edx [esp+94h+var_24] +
mov byte ptr [esp+94h+var_1C] al +
mov eax [esp+94h+var_2C] +
xor edx 1 +
xor eax 1 +
or al dl +
movzx eax byte ptr [esp+94h+var_1C] +
movzx edx [esp+94h+var_16] +
jnz loc_436DED  +
cmp [esp+94h+var_60] 0 +
jz loc_436E20  +
cmp dl 0Ah +
setz dl  +
cmp al 0Ah +
setz al  +
cmp dl al +
jz loc_436E20  +
mov eax [esp+94h+var_3C] +
mov dword ptr [eax] 1 +
mov eax 1 +
jmp loc_436C0E  +
movzx eax byte ptr [ebp+34h] +
and eax 0FFFFFFF9h +
or eax 4 +
mov [ebp+34h] al +
jmp loc_436A6B  +
cmp byte ptr [ebx+0Ch] 5 +
jz loc_436D98  +
lea esi [esi+0] +
mov eax [esp+94h+var_74] +
test eax eax +
jz loc_436F00  +
test byte ptr [eax+2Ah] 20h +
jnz loc_436F00  +
mov eax [esp+94h+var_70] +
test byte ptr [eax+2Ah] 20h +
jnz loc_436F00  +
mov eax [esp+94h+var_58] +
movzx edx byte ptr [ebx+30h] +
movzx eax byte ptr [eax+0Ch] +
and eax 0Fh +
cmp al dl +
jz loc_436F00  +
cmp al 6 +
jz loc_43762B  +
cmp dl 6 +
jnz loc_436F00  +
mov eax [esp+94h+var_30] +
mov edi [esp+94h+var_54] +
mov [esp+94h+var_54] eax +
mov eax [esp+94h+var_60] +
mov [esp+94h+var_30] edi +
mov edi [esp+94h+var_70] +
mov [esp+94h+var_60] esi +
mov esi eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_74] edi +
mov [esp+94h+var_70] eax +
mov eax [esp+94h+var_60] +
and eax esi +
test al 1 +
jnz loc_437665  +
mov eax [esp+94h+var_60] +
or eax esi +
mov eax [ebx+4] +
jz loc_4376E4  +
test esi esi +
mov [esp+94h+var_84] eax +
jz loc_43769E  +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_94] offset aSTlsDefinition +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_54] +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_476094  +
mov [esp+94h+var_94] 11h +
call sub_40C770  +
add esp 8Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+94h+var_28] +
test eax eax +
jnz loc_436F9D  +
mov eax [esp+94h+var_58] +
test byte ptr [eax+0Dh] 3 +
jz loc_436FAA  +
movzx eax byte ptr [ebx+33h] +
test al 8 +
jz loc_436FAA  +
cmp byte ptr [ebp+0Ch] 6 +
jz loc_43764F  +
mov eax [ebx+10h] +
test eax eax +
jz loc_4376C8  +
mov eax [esp+94h+var_70] +
mov byte ptr [ebx+0Ch] 1 +
mov [ebx+14h] eax +
mov eax [esp+94h+var_58] +
movzx eax byte ptr [eax+0Dh] +
and eax 3 +
cmp al 3 +
jz loc_43761C  +
mov eax [esp+94h+var_68] +
mov eax [eax+0DCh] +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
movzx eax byte ptr [ebx+33h] +
and byte ptr [ebx+34h] 0F7h +
and eax 0FFFFFFFBh +
mov [ebx+33h] al +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
mov eax 1 +
mov dword ptr [ebx+2Ch] 0 +
mov byte ptr [ebx+30h] 0 +
jmp loc_436C0E  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jnz loc_437515  +
mov edx esi +
and edx 1 +
jz loc_436FBC  +
cmp byte ptr [esp+94h+var_5C] 0 +
jz loc_437194  +
cmp byte ptr [esp+94h+var_6C] 0 +
jz loc_436FD6  +
cmp byte ptr [esp+94h+var_5C] 0 +
mov eax 0 +
cmovz eax [esp+94h+var_4C] +
mov [esp+94h+var_4C] eax +
movzx eax byte ptr [esp+94h+var_24] +
test byte ptr [esp+94h+var_2C] al +
jz loc_436FEB  +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_4C] +
or eax [esp+94h+var_64] +
jnz loc_437210  +
test esi esi +
jnz loc_437206  +
mov eax [esp+94h+var_48] +
mov eax [eax] +
test eax eax +
jnz loc_43721A  +
cmp byte ptr [ebx+0Ch] 1 +
jz loc_43721A  +
and dl byte ptr [esp+94h+var_5C] +
mov [esp+94h+var_1C] 0 +
mov [esp+94h+var_16] dl +
jz loc_437065  +
mov eax [esp+94h+var_64] +
test eax eax +
jnz loc_437065  +
mov eax [esp+94h+var_54] +
mov edx [esp+94h+var_64] +
mov eax [eax+14h] +
mov [esp+94h+var_1C] edx +
and eax 3 +
cmp eax 1 +
jnz loc_437065  +
mov eax [esp+94h+var_58] +
mov edx [esp+94h+var_24] +
mov eax [eax+4] +
xor edx 1 +
test eax eax +
mov eax edx +
cmovz eax [esp+94h+var_64] +
mov [esp+94h+var_1C] eax +
mov eax ecx +
and al byte ptr [esp+94h+var_6C] +
mov [esp+94h+var_5C] 0 +
mov [esp+94h+var_15] al +
jz loc_437083  +
cmp byte ptr [ebx+0Ch] 3 +
jz loc_437585  +
mov eax [esp+94h+var_68] +
mov eax [eax+150h] +
test eax eax +
jz loc_4370D4  +
mov ecx [esp+94h+var_30] +
mov edx [esp+94h+var_58] +
mov [esp+94h+var_88] esi +
mov [esp+94h+var_94] ebx +
mov [esp+94h+var_7C] ecx +
mov ecx [esp+94h+var_74] +
mov [esp+94h+var_90] edx +
mov [esp+94h+var_80] ecx +
mov ecx [esp+94h+var_60] +
mov [esp+94h+var_84] ecx +
mov ecx [esp+94h+var_44] +
mov [esp+94h+var_8C] ecx +
call eax  +
test eax eax +
jz loc_436EF0  +
mov ecx [esp+94h+var_44] +
mov eax [ecx] +
mov [esp+94h+var_54] eax +
movzx eax byte ptr [esp+94h+var_1C] +
test byte ptr [esp+94h+var_5C] al +
jz loc_43712F  +
mov eax [esp+94h+var_58] +
mov eax [eax+4] +
cmp eax [ebx+2Ch] +
jz loc_43712F  +
mov edx [edi+18h] +
mov ecx [esp+94h+var_70] +
mov edx [edx+8] +
mov [esp+94h+var_84] eax +
mov [esp+94h+var_88] 5 +
mov [esp+94h+var_8C] ecx +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call edx  +
test eax eax +
jz loc_436EF0  +
mov eax [esp+94h+var_58] +
mov eax [eax+4] +
cmp eax [ebx+2Ch] +
jbe loc_437125  +
mov [ebx+2Ch] eax +
mov eax [esp+94h+var_40] +
mov dword ptr [eax] 1 +
cmp [esp+94h+var_16] 0 +
jz loc_4371A9  +
mov eax [esp+94h+var_60] +
test eax eax +
jnz loc_437153  +
cmp byte ptr [ebx+0Ch] 5 +
mov esi 1 +
jnz loc_4371A9  +
mov eax [esp+94h+var_24] +
or eax [esp+94h+var_64] +
jz loc_4371A9  +
mov eax [esp+94h+var_34] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_44] +
mov dword ptr [eax] offset off_476188 +
mov eax [esp+94h+var_40] +
cmp byte ptr [ebx+0Ch] 5 +
mov dword ptr [eax] 1 +
jz loc_437640  +
mov eax [esp+94h+var_28] +
test eax eax +
jnz loc_436C09  +
mov [esp+94h+var_54] offset off_476188 +
jmp loc_43739A  +
test ecx ecx +
mov eax 0 +
cmovz eax [esp+94h+var_64] +
mov [esp+94h+var_64] eax +
jmp loc_436FBC  +
mov eax [esp+94h+var_1C] +
test eax eax +
jz loc_437229  +
cmp byte ptr [ebx+0Ch] 5 +
jnz loc_437229  +
mov eax [esp+94h+var_34] +
mov ecx [esp+94h+var_38] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_58] +
mov eax [eax+4] +
mov [ecx] eax +
mov eax [esp+94h+var_68] +
mov ecx [esp+94h+var_30] +
mov eax [eax+14Ch] +
mov [esp+94h+var_94] ecx +
call eax  +
mov ecx [esp+94h+var_44] +
mov [esp+94h+var_54] eax +
mov [ecx] eax +
mov eax [esp+94h+var_40] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_28] +
test eax eax +
jz loc_43739A  +
jmp loc_436C09  +
cmp byte ptr [ebx+0Ch] 1 +
jnz loc_437001  +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
mov eax [esp+94h+var_40] +
mov dword ptr [eax] 1 +
jmp loc_437019  +
test esi 1 +
jz loc_437386  +
cmp byte ptr [esp+94h+var_6C] 0 +
jz loc_437386  +
mov eax [esp+94h+var_64] +
test eax eax +
jnz loc_437306  +
cmp [esp+94h+var_28] 0 +
jnz loc_436C09  +
cmp [esp+94h+var_15] 0 +
jz loc_4375E7  +
movzx eax byte ptr [ebx+33h] +
test al 8 +
jz loc_4375E7  +
mov edx [ebx+14h] +
mov ecx [esp+94h+var_40] +
mov byte ptr [ebx+0Ch] 1 +
mov edx [edx+94h] +
mov [ebx+14h] edx +
mov dword ptr [ecx] 1 +
mov ecx [esp+94h+var_54] +
test byte ptr [ecx+15h] 10h +
jz loc_4372AE  +
mov ecx [esp+94h+var_2C] +
test ecx ecx +
jz loc_4372A4  +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
mov byte ptr [ebx+30h] 0 +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
cmp byte ptr [ebp+0Ch] 6 +
jnz loc_437443  +
test ebp ebp +
jz loc_436C09  +
movzx edx byte ptr [ebx+0Ch] +
mov eax [ebx+14h] +
mov [ebp+14h] eax +
mov eax [esp+94h+var_68] +
mov [ebp+0Ch] dl +
mov [ebx+14h] ebp +
mov byte ptr [ebx+0Ch] 6 +
mov eax [eax+0D8h] +
mov [esp+94h+var_8C] ebx +
mov [esp+94h+var_90] ebp +
mov [esp+94h+var_94] edi +
call eax  +
movzx eax byte ptr [ebx+33h] +
test al 8 +
jz loc_436C09  +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
or byte ptr [ebp+33h] 4 +
jmp loc_436C09  +
mov eax [esp+94h+var_74] +
test eax eax +
jz loc_437323  +
test byte ptr [eax+2Ah] 20h +
jz loc_437323  +
mov eax [esp+94h+var_70] +
mov esi 1 +
test byte ptr [eax+2Ah] 20h +
jz loc_43732F  +
mov eax [esp+94h+var_3C] +
xor esi esi +
mov dword ptr [eax] 1 +
mov ecx [esp+94h+var_28] +
mov eax [esp+94h+var_70] +
mov eax [eax+4] +
mov [esp+94h+var_8C] ecx +
mov ecx [esp+94h+var_54] +
mov [esp+94h+var_90] esi +
lea edx [ecx+14h] +
mov ecx [esp+94h+var_58] +
mov [esp+94h+var_94] edx +
mov edx ebx +
call sub_432F50  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_437386  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
ja loc_437386  +
mov eax [esp+94h+var_68] +
mov eax [eax+0DCh] +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
mov eax [esp+94h+var_28] +
test eax eax +
jnz loc_436C09  +
test esi esi +
jnz loc_437257  +
mov eax [esp+94h+var_54] +
test byte ptr [eax+15h] 10h +
jz loc_436C09  +
mov eax [esp+94h+var_4C] +
or eax [esp+94h+var_2C] +
jnz loc_437257  +
mov edx [esp+94h+var_5C] +
test edx edx +
jz loc_436C09  +
mov ecx [esp+94h+var_58] +
mov eax [edi+18h] +
mov edx [ecx+4] +
mov ecx [esp+94h+var_70] +
mov eax [eax+8] +
mov [esp+94h+var_88] 5 +
mov [esp+94h+var_84] edx +
mov [esp+94h+var_8C] ecx +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
test eax eax +
jz loc_436EF0  +
mov ecx [esp+94h+var_38] +
mov eax [ebx+2Ch] +
cmp eax [ecx] +
jbe loc_437401  +
mov [ecx] eax +
cmp byte ptr [esp+94h+var_20] 0 +
jnz loc_437791  +
mov eax [ebx+14h] +
mov ecx [esp+94h+var_50] +
mov edx [eax+40h] +
mov eax [eax+94h] +
mov [ecx] edx +
mov ecx [esp+94h+var_40] +
mov byte ptr [ebx+0Ch] 1 +
mov [ebx+14h] eax +
cmp byte ptr [ebp+0Ch] 6 +
mov dword ptr [ecx] 1 +
mov ecx [esp+94h+var_48] +
mov dword ptr [ecx] 1 +
jz loc_43770A  +
mov dword ptr [ebx+40h] 0 +
jmp loc_436C09  +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_80] 0 +
mov [esp+94h+var_84] 0 +
mov [esp+94h+var_88] 1 +
mov [esp+94h+var_8C] ebx +
mov [esp+94h+var_90] edi +
mov [esp+94h+var_94] eax +
call sub_4140A0  +
mov ebp eax +
jmp loc_436A0C  +
and byte ptr [ebx+34h] 0FEh +
add esp 8Ch +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+94h+var_74] +
mov [eax] ecx +
mov eax [esp+94h+var_70] +
mov ecx [eax+4] +
jmp loc_436BB7  +
movzx eax byte ptr [ebp+34h] +
and eax 0FFFFFFF9h +
or eax 2 +
mov [ebp+34h] al +
jmp loc_436A7A  +
mov [esp+94h+var_20] ecx +
mov ecx [esp+94h+var_68] +
mov edx [ecx+158h] +
mov [esp+94h+var_94] eax +
call edx  +
mov ecx [esp+94h+var_20] +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+94h+var_2C] eax +
jmp loc_436D60  +
mov [esp+94h+var_2C] ecx +
mov ecx [esp+94h+var_68] +
movzx eax al +
mov edx [ecx+158h] +
mov [esp+94h+var_94] eax +
call edx  +
mov ecx [esp+94h+var_2C] +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+94h+var_24] eax +
jmp loc_436D4C  +
cmp [esp+94h+var_54] offset off_476188 +
jz loc_436FAA  +
mov ecx [esp+94h+var_3C] +
mov dword ptr [ecx] 1 +
or byte ptr [ebx+33h] 4 +
or byte ptr [ebp+33h] 4 +
cmp al 3 +
jnz loc_436C09  +
mov [esp+94h+arg_4] ebx +
mov [esp+94h+arg_0] edi +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_436840  +
cmp byte ptr [esp+94h+var_2C] 0 +
jnz loc_43756B  +
mov ecx esi +
test cl cl +
jz loc_436CE9  +
test edx edx +
jz loc_436C09  +
test byte ptr [ebx+33h] 2 +
jnz loc_436CE9  +
lea esi [esi+0] +
jmp loc_436C09  +
test byte ptr [ebx+33h] 8 +
jz loc_437083  +
mov eax [ebx+14h] +
mov eax [eax+14h] +
and eax 3 +
cmp eax 1 +
jnz loc_437083  +
mov eax [esp+94h+var_2C] +
mov edx [ebx+2Ch] +
xor eax 1 +
test edx edx +
cmovz eax [esp+94h+var_5C] +
mov [esp+94h+var_5C] eax +
jmp loc_437083  +
xor esi esi +
jmp loc_436D12  +
mov ecx [esp+94h+var_30] +
test ecx ecx +
jz loc_43765E  +
mov edx [ecx+98h] +
mov ecx [edx+0Ch] +
shr ecx 0Fh +
and ecx 1 +
jmp loc_436CF6  +
mov eax [esp+94h+var_54] +
test byte ptr [eax+15h] 10h +
jnz loc_4373B6  +
jmp loc_436C09  +
cmp [esp+94h+var_60] 2 +
jz loc_436CC3  +
or byte ptr [ebx+35h] 1 +
or byte ptr [ebp+35h] 1 +
jmp loc_436CC3  +
mov eax 1 +
jmp loc_436B37  +
movzx eax byte ptr [ebx+33h] +
or eax 4 +
mov [ebx+33h] al +
jmp loc_436F82  +
cmp dl 6 +
jnz loc_436E96  +
jmp loc_436E6C  +
mov eax [esp+94h+var_48] +
mov dword ptr [eax] 1 +
jmp loc_43717B  +
test al 1 +
jnz loc_437714  +
mov ebx ebp +
jmp loc_436F30  +
xor ecx ecx +
jmp loc_436CF6  +
mov eax [ebx+4] +
mov [esp+94h+var_94] offset aSTlsDefiniti_0 +
mov [esp+94h+var_80] eax +
mov eax [esp+94h+var_30] +
mov [esp+94h+var_84] eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_54] +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_476094  +
jmp loc_436EE4  +
mov eax [esp+94h+var_30] +
mov [esp+94h+var_94] offset aSTlsReferenceI +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_476094  +
jmp loc_436EE4  +
mov eax [edi+1Ch] +
cmp [eax+20h] ebx +
jz loc_436F3B  +
mov byte ptr [ebx+0Ch] 0 +
mov dword ptr [ebx+14h] 0 +
jmp loc_436F46  +
mov [esp+94h+var_88] eax +
mov eax [esp+94h+var_74] +
mov [esp+94h+var_94] offset aSTlsReferenc_0 +
mov [esp+94h+var_8C] eax +
mov eax [esp+94h+var_70] +
mov [esp+94h+var_90] eax +
call off_476094  +
jmp loc_436EE4  +
mov edx 1 +
jmp loc_4372C7  +
movzx eax byte ptr [ebx+0Ch] +
mov esi [esp+94h+var_68] +
mov [ebp+0Ch] al +
mov eax [esi+0D8h] +
mov byte ptr [ebx+0Ch] 6 +
mov [esp+94h+var_8C] ebx +
mov [esp+94h+var_90] ebp +
mov [esp+94h+var_94] edi +
call eax  +
mov eax [esp+94h+var_58] +
mov [ebx+14h] ebp +
movzx eax byte ptr [eax+0Dh] +
and eax 3 +
cmp al 3 +
jz loc_437785  +
mov eax [esi+0DCh] +
mov [esp+94h+var_8C] 1 +
mov [esp+94h+var_90] ebx +
mov [esp+94h+var_94] edi +
call eax  +
movzx eax byte ptr [ebx+33h] +
and byte ptr [ebx+34h] 0F7h +
and eax 0FFFFFFFBh +
mov [ebx+33h] al +
and eax 0FFFFFFF7h +
mov [ebx+33h] al +
mov dword ptr [ebx+2Ch] 0 +
mov byte ptr [ebx+30h] 0 +
mov ebx ebp +
jmp loc_436F30  +
movzx eax byte ptr [ebx+33h] +
or eax 4 +
mov [ebx+33h] al +
jmp loc_43776D  +
mov [esp+94h+var_90] 657h +
mov [esp+94h+var_94] offset a____Binutils_3 +
call sub_40C6C0  +
jmp loc_43740C  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
test byte ptr [eax+34h] 1 +
movzx eax byte ptr [eax+0Ch] +
jnz loc_43785B  +
sub eax 3 +
cmp al 1 +
jbe loc_4379D0  +
mov edx [ebp+0] +
mov eax [edx+1Ch] +
mov eax [eax+38h] +
mov eax [eax+4] +
mov edi [eax+1B0h] +
mov eax [edi+0E0h] +
test eax eax +
jz loc_4377FF  +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_24] ebx +
call eax  +
xor edx edx +
test eax eax +
jz loc_43784A  +
cmp byte ptr [ebx+0Ch] 3 +
jz loc_437970  +
movzx edx byte ptr [ebx+33h] +
test dl dl +
js loc_437920  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
test al al +
jz loc_43782A  +
cmp byte ptr [ebx+0Ch] 2 +
jz loc_437A2B  +
mov esi [ebx+3Ch] +
test esi esi +
jz loc_437A21  +
movzx edx byte ptr [esi+33h] +
test dl 2 +
jz loc_4378A7  +
mov dword ptr [ebx+3Ch] 0 +
mov edx 1 +
add esp 1Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
cmp al 6 +
jz loc_437854  +
sub eax 3 +
cmp al 1 +
jbe loc_4379A6  +
or byte ptr [ebx+33h] 11h +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jnz loc_4377D4  +
test byte ptr [ebx+33h] 0Ch +
jz loc_4377D4  +
mov eax [ebp+0] +
mov [esp-4+arg_0] ebx +
mov [esp+0] eax +
call sub_436840  +
test eax eax +
jnz loc_4377D4  +
mov dword ptr [ebp+4] 1 +
xor edx edx +
jmp loc_43784A  +
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
cmp al 6 +
jz loc_4378A4  +
sub eax 3 +
cmp al 1 +
jbe loc_4378CE  +
mov [esp-4+arg_0] 0A4Ah +
mov dword ptr [esp+0] offset a____Binutils_3 +
call sub_40C6C0  +
movzx edx byte ptr [esi+33h] +
and edx 8 +
jz loc_437A08  +
movzx eax byte ptr [esi+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_4378F6  +
mov [esp-4+arg_0] 0A4Dh +
mov dword ptr [esp+0] offset a____Binutils_3 +
call sub_40C6C0  +
mov edx [ebp+0] +
mov eax [edi+0D8h] +
mov [esp-4+arg_4] ebx +
mov [esp-4+arg_0] esi +
mov [esp+0] edx +
call eax  +
add esp 1Ch +
mov edx 1 +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebp+0] +
movzx eax byte ptr [ecx] +
test al 1 +
jz loc_437815  +
mov esi [ecx+1Ch] +
cmp dword ptr [esi+28h] 1 +
jnz loc_437815  +
test byte ptr [ebx+35h] 4 +
jnz loc_437A4A  +
test al 4 +
jnz loc_43795D  +
test byte ptr [ecx+5] 1 +
jz loc_437A4A  +
test byte ptr [ebx+34h] 10h +
jnz loc_437A4A  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jmp loc_437A57  +
movzx edx byte ptr [ebx+33h] +
mov eax edx +
and eax 0Bh +
cmp al 1 +
jnz loc_43780D  +
mov eax [ebx+14h] +
mov eax [eax+94h] +
mov eax [eax+28h] +
shr eax 5 +
test eax 10040h +
jnz loc_43780D  +
or edx 2 +
mov [ebx+33h] dl +
jmp loc_43780D  +
mov eax [ebx+14h] +
mov eax [eax+94h] +
test eax eax +
jz loc_4379C0  +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jz loc_43786A  +
or byte ptr [ebx+33h] 2 +
jmp loc_43786E  +
movzx eax byte ptr [ebx+33h] +
test al 2 +
jnz loc_4377D4  +
mov ecx [ebx+14h] +
mov edx [ecx+94h] +
test edx edx +
jz loc_437A87  +
mov eax [edx+4] +
cmp dword ptr [eax+4] 5 +
setnz al  +
test al al +
jz loc_4377D4  +
or byte ptr [ebx+33h] 2 +
jmp loc_4377D4  +
mov [esp-4+arg_0] 0A4Bh +
mov dword ptr [esp+0] offset a____Binutils_3 +
call sub_40C6C0  +
jmp loc_4378D7  +
mov edx 1 +
jmp loc_43784A  +
mov edx [ebp+0] +
mov eax [edi+0DCh] +
mov [esp+28h+var_20] 1 +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] edx +
call eax  +
jmp loc_43782A  +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
jz loc_43782A  +
and edx 2 +
jz loc_43781C  +
movzx eax al +
mov edx [edi+0DCh] +
sub eax 1 +
cmp eax 1 +
setbe al  +
movzx eax al +
mov [esp+28h+var_20] eax +
mov [esp+28h+var_24] ebx +
mov [esp+28h+var_28] ecx +
call edx  +
jmp loc_437815  +
xor edx edx +
cmp ecx offset off_476230 +
jz loc_437A98  +
mov eax edx +
jmp loc_4379F7  +
shr al 3 +
mov edx eax +
xor edx 1 +
and edx 1 +
mov eax edx +
jmp loc_4379F7  +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
lea edx [esp+3Ch+var_14] +
mov ebx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_10] 0 +
mov esi [eax] +
mov eax ebx +
mov [esp+3Ch+var_14] esi +
call sub_4377B0  +
test eax eax +
jnz loc_437BF7  +
mov ecx [esp+3Ch+var_10] +
test ecx ecx +
jz loc_437BEF  +
mov ecx [esp+3Ch+arg_4] +
mov dword ptr [ecx+4] 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [ebx+33h] 2 +
jz loc_437C2F  +
mov ebp [esi+30h] +
mov edi [ebx+4] +
mov eax [ebp+4] +
mov eax [eax+1B0h] +
mov [esp+3Ch+var_38] 40h +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_28] eax +
call strchr  +
test eax eax +
jz loc_437D35  +
mov edx [ebx+40h] +
test edx edx +
jz loc_437C40  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx edx byte ptr [eax+1] +
cmp dl 40h +
jz loc_437DE8  +
add eax 1 +
mov [esp+3Ch+var_24] eax +
test dl dl +
jz loc_437C2F  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_437DA7  +
mov [esp+3Ch+var_20] ebp +
mov ebp [esp+3Ch+var_24] +
mov [esp+3Ch+arg_0] ebx +
mov ebx edx +
jmp loc_437C8A  +
mov ebx [ebx] +
test ebx ebx +
jz loc_437D9F  +
mov [esp+3Ch+var_38] ebp +
mov eax [ebx+4] +
mov [esp+3Ch+var_3C] eax +
call strcmp  +
test eax eax +
jnz loc_437C80  +
mov ebp [esp+3Ch+var_24] +
mov [esp+3Ch+var_20] ebx +
mov ebx [esp+3Ch+arg_0] +
sub ebp edi +
mov [esp+3Ch+var_3C] ebp +
call sub_40EFC0  +
mov edx [esp+3Ch+var_20] +
test eax eax +
mov edi eax +
jz loc_437DD6  +
mov ecx [ebx+4] +
lea eax [ebp-1] +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] ecx +
call memcpy  +
lea eax [edi+ebp-2] +
mov edx [esp+3Ch+var_24] +
mov byte ptr [edi+ebp-1] 0 +
cmp byte ptr [eax] 40h +
jz loc_437E56  +
mov [ebx+40h] edx +
mov ebp [edx+0Ch] +
mov dword ptr [edx+34h] 1 +
test ebp ebp +
jz loc_437DF8  +
mov eax [edx+38h] +
lea ecx [edx+0Ch] +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] ecx +
call eax  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_437DF8  +
mov [esp+3Ch+var_3C] edi +
call free  +
mov edx [ebx+40h] +
test edx edx +
jnz loc_437C2F  +
mov eax [esp+3Ch+arg_4] +
mov eax [eax] +
mov eax [eax+7Ch] +
test eax eax +
jz loc_437C2F  +
mov edx [ebx+4] +
lea ecx [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_416EC0  +
test eax eax +
mov [ebx+40h] eax +
jz loc_437C2F  +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_437C2F  +
mov eax [esp+3Ch+var_28] +
mov eax [eax+0DCh] +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] esi +
call eax  +
jmp loc_437C2F  +
mov ebp [esp+3Ch+var_20] +
mov ebx [esp+3Ch+arg_0] +
movzx eax byte ptr [esi] +
and eax 3 +
cmp al 1 +
jbe loc_437E5E  +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] ebp +
mov [esp+3Ch+var_3C] offset aBVersionNodeNo +
call off_476094  +
mov [esp+3Ch+var_3C] 11h +
call sub_40C770  +
mov eax [esp+3Ch+arg_4] +
mov dword ptr [eax+4] 1 +
xor eax eax +
jmp loc_437BEF  +
lea ecx [eax+2] +
movzx edx byte ptr [eax+2] +
mov [esp+3Ch+var_24] ecx +
jmp loc_437C54  +
mov ecx [edx+1Ch] +
test ecx ecx +
jz loc_437D2D  +
mov eax [edx+38h] +
add edx 1Ch +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] edx +
call eax  +
test eax eax +
jz loc_437D2D  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_437D2D  +
test byte ptr [esi] 10h +
nop   +
jnz loc_437D2D  +
mov eax [esp+3Ch+var_28] +
mov eax [eax+0DCh] +
mov [esp+3Ch+var_34] 1 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] esi +
call eax  +
jmp loc_437D2D  +
mov byte ptr [eax] 0 +
jmp loc_437CF1  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_437C2F  +
mov [esp+3Ch+var_38] 3Ch +
mov [esp+3Ch+var_3C] ebp +
call sub_407C00  +
test eax eax +
jz loc_437DD6  +
mov ecx [esp+3Ch+var_24] +
mov dword ptr [eax+30h] 0FFFFFFFFh +
mov dword ptr [eax+34h] 1 +
mov [eax+4] ecx +
mov ecx [esp+3Ch+arg_4] +
mov edx [ecx] +
mov ecx [edx+7Ch] +
test ecx ecx +
jz loc_437ED2  +
cmp dword ptr [ecx+8] 0 +
setnz cl  +
movzx ecx cl +
mov esi [edx+7Ch] +
add edx 7Ch +
test esi esi +
jnz loc_437EBA  +
jmp loc_437EC5  +
mov esi edx +
mov edx [esi] +
add ecx 1 +
test edx edx +
jnz loc_437EB8  +
mov edx esi +
mov [eax+8] ecx +
mov [edx] eax +
mov [ebx+40h] eax +
jmp loc_437C2F  +
mov ecx 1 +
jmp loc_437EAC  +
***
mov ebx [esp+18h+arg_0] +
cmp byte ptr [ebx+0Ch] 6 +
jz loc_437F05  +
mov eax [esp+18h+arg_4] +
mov eax [eax] +
test byte ptr [eax] 10h +
jnz loc_437EFF  +
test byte ptr [ebx+34h] 10h +
jz loc_437F05  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_437F10  +
mov eax 1 +
add esp 18h +
pop ebx  +
retn   +
test byte ptr [ebx+33h] 3 +
jz loc_437F05  +
mov edx [ebx+4] +
mov eax [eax+7Ch] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_417090  +
test eax eax +
jnz loc_437F05  +
mov eax [esp+18h+arg_4] +
mov eax [eax] +
mov [esp+18h+var_14] ebx +
mov [esp+18h+var_18] eax +
call sub_436840  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_437F0A  +
mov eax [esp+18h+arg_4] +
mov dword ptr [eax+4] 1 +
xor eax eax +
jmp loc_437F0A  +
***
push edi  +
push esi  +
push ebx  +
sub esp 20h +
mov ebx [esp+34h] +
mov edi [ebx+1Ch] +
cmp dword ptr [edi+28h] 1 +
jz loc_437F80  +
***
mov eax 1 +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esp+3Ch] +
xor eax eax +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 1 +
mov [esp] edi +
test edx edx +
setz al  +
mov [esp+8] eax +
mov eax [esp+38h] +
mov [esp+4] eax +
call sub_414050  +
test eax eax +
mov esi eax +
jz loc_438165  +
cmp byte ptr [eax+0Ch] 7 +
ja sub_437FE7  +
movzx eax byte ptr [eax+0Ch] +
jmp ds:off_4905F4[eax*4]  +
***
mov eax [esi+10h] +
movzx eax byte ptr [esi+33h] +
mov eax [esp+arg_2C] +
mov [esp+arg_4] offset aBfd_elf_record +
xor ecx ecx +
mov edx esi +
mov eax ebx +
call sub_431C90  +
and byte ptr [esi+34h] 0FEh +
jmp sub_437FE7  +
***
mov eax [esp+3Ch] +
jmp loc_437F78  +
***
or byte ptr [esi+34h] 8 +
jmp loc_43806C  +
***
mov byte ptr [esi+0Ch] 1 +
jmp loc_438002  +
***
cmp [edi+20h] esi +
jnz sub_437FE7  +
jmp loc_437FDF  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov edi [esp+70h] +
mov ebx [esp+74h] +
mov esi [esp+78h] +
mov eax [edi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_4381C6  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [eax+0C0h] +
test eax eax +
jnz loc_4381D8  +
jmp loc_4381F0  +
mov eax [eax] +
test eax eax +
jz loc_4381F0  +
cmp [eax+4] ebx +
jnz loc_4381D2  +
cmp [eax+8] esi +
jnz loc_4381D2  +
mov eax 1 +
jmp loc_4381BE  +
***
mov dword ptr [esp+4] 24h +
mov [esp] ebx +
call sub_407B20  +
test eax eax +
mov ebp eax +
jz loc_4381BC  +
lea eax [esp+34h] +
mov [esp+18h] eax +
lea eax [esp+38h] +
mov [esp+14h] eax +
lea eax [ebp+10h] +
mov [esp+10h] eax +
mov [esp+0Ch] esi +
mov dword ptr [esp+8] 1 +
mov eax [ebx+0A0h] +
mov [esp] ebx +
add eax 48h +
mov [esp+4] eax +
call sub_424210  +
test eax eax +
jz loc_438326  +
mov eax [ebp+20h] +
lea edx [eax-1] +
cmp edx 0FFFFFEFEh +
ja loc_438275  +
mov [esp+4] eax +
mov [esp] ebx +
call sub_426C70  +
test eax eax +
jz loc_438310  +
cmp dword ptr [eax+3Ch] offset off_476230 +
jz loc_438310  +
mov eax [ebx+0A0h] +
mov edx [ebp+18h] +
mov eax [eax+64h] +
mov [esp+8] edx +
mov [esp] ebx +
mov [esp+4] eax +
call sub_424010  +
mov edx [edi+1Ch] +
mov ecx eax +
mov eax [edx+50h] +
test eax eax +
jz loc_4382EA  +
mov dword ptr [esp+8] 0 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44E260  +
cmp eax 0FFFFFFFFh +
jz loc_4381BC  +
mov [ebp+18h] eax +
mov eax [edi+1Ch] +
mov edx [eax+0C0h] +
mov [ebp+0] edx +
mov [eax+0C0h] ebp +
mov [ebp+4] ebx +
mov [ebp+8] esi +
add dword ptr [eax+4Ch] 1 +
mov eax 1 +
and byte ptr [ebp+1Ch] 0Fh +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+2Ch] edx +
mov [esp+28h] ecx +
call sub_44E1B0  +
mov edx [esp+2Ch] +
mov ecx [esp+28h] +
test eax eax +
mov [edx+50h] eax +
jnz loc_43829D  +
jmp loc_4381BC  +
***
mov [esp+4] ebp +
mov [esp] ebx +
call sub_407D70  +
mov eax 2 +
jmp loc_4381BE  +
***
mov [esp+4] ebp +
mov [esp] ebx +
call sub_407D70  +
jmp loc_4381BC  +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov ecx [esp+0Ch] +
mov eax [eax+1Ch] +
mov eax [eax+0C0h] +
test eax eax +
jnz loc_438366  +
jmp loc_438374  +
mov eax [eax] +
test eax eax +
jz loc_438374  +
cmp [eax+4] edx +
jnz loc_438360  +
cmp [eax+8] ecx +
jnz loc_438360  +
mov eax [eax+0Ch] +
retn   +
***
mov eax 0FFFFFFFFh +
retn   +
***
mov ebx [esp+18h+arg_8] +
mov eax [ebx+8Ch] +
mov ecx [eax+4] +
mov eax 1 +
cmp ecx 8 +
ja loc_4383D0  +
mov edx eax +
shl edx cl +
mov ecx edx +
and ecx 103h +
jz loc_4383D0  +
mov eax [esp+18h+arg_4] +
mov eax [eax+1Ch] +
cmp ebx [eax+0C8h] +
jz loc_4383D5  +
mov edx [eax+68h] +
test edx edx +
jz loc_4383E0  +
cmp ebx edx +
jz loc_4383D5  +
cmp ebx [eax+6Ch] +
setnz al  +
movzx eax al +
lea esi [esi+0] +
add esp 18h +
pop ebx  +
retn   +
xor eax eax +
jmp loc_4383D0  +
mov eax [eax+38h] +
test eax eax +
jz loc_4383D5  +
mov edx [ebx] +
mov [esp+18h+var_18] eax +
mov [esp+18h+var_14] edx +
call sub_410920  +
test eax eax +
jz loc_4383D5  +
cmp ebx [eax+3Ch] +
setz al  +
movzx eax al +
jmp loc_4383D0  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
mov eax [edi+4] +
mov ebp [eax+1B0h] +
mov eax [esp+2Ch+arg_4] +
mov esi [eax+8Ch] +
mov ebx [esi+68h] +
test ebx ebx +
jz loc_438440  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4Ch] +
test eax eax +
jz loc_438435  +
mov ecx [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] 0 +
test ecx ecx +
jz loc_4385C2  +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_14] 0 +
test eax eax +
jz loc_438602  +
mov ecx [esi+3Ch] +
test ecx ecx +
jz loc_4384E1  +
mov eax [ecx+10h] +
mov edx [ecx+14h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_10] ecx +
call sub_4060C0  +
mov ecx [esp+2Ch+var_10] +
test eax eax +
jz loc_438567  +
mov eax [esp+2Ch+var_14] +
test eax eax +
jz loc_4384B4  +
mov [esp+2Ch+var_2C] eax +
call free  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
jz loc_438435  +
mov edx [esp+2Ch+arg_10] +
mov eax [esp+2Ch+var_18] +
test edx edx +
jz loc_438555  +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edi +
call sub_407D70  +
jmp loc_438435  +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_10] eax +
mov ebp [esi+4Ch] +
test ebp ebp +
jz loc_438536  +
mov eax [ebp+10h] +
mov edx [ebp+14h] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] edi +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_24] edx +
call sub_4060C0  +
test eax eax +
jnz loc_4384A4  +
mov eax [esp+2Ch+var_10] +
mov ecx ebp +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] eax +
mov eax edi +
call sub_433210  +
test eax eax +
jz loc_4384A4  +
mov ebx [esp+2Ch+arg_10] +
test ebx ebx +
jz loc_438545  +
mov eax [esp+2Ch+arg_C] +
mov [esi+68h] eax +
mov eax [esp+2Ch+var_14] +
mov ebx [esp+2Ch+arg_C] +
test eax eax +
jz loc_438435  +
mov [esp+2Ch+var_2C] eax +
call free  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+arg_C] +
mov edx [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_2C] eax +
mov eax edi +
call sub_433210  +
test eax eax +
jz loc_4384A4  +
mov eax [esi+3Ch] +
mov ecx [eax+28h] +
mov edx [eax+18h] +
xor eax eax +
add [esp+2Ch+arg_8] edx +
test ecx ecx +
jz loc_4385A2  +
mov eax edx +
xor edx edx +
div  ecx +
mov edx [ebp+174h] +
movzx edx byte ptr [edx+9] +
lea ebp [edx+edx*2] +
shl ebp 2 +
imul ebp eax +
add ebp [esp+2Ch+arg_C] +
mov [esp+2Ch+var_10] ebp +
jmp loc_4384E9  +
mov edx [ebp+174h] +
lea eax [eax+eax*2] +
shl eax 2 +
movzx edx byte ptr [edx+9] +
imul eax edx +
mov edx [esp+2Ch+arg_10] +
test edx edx +
jz loc_43862F  +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edi +
call sub_407B20  +
mov [esp+2Ch+arg_C] eax +
mov eax [esp+2Ch+arg_C] +
test eax eax +
jz loc_438645  +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] eax +
jmp loc_43845B  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_438652  +
mov eax [eax+18h] +
mov edx [esi+4Ch] +
test edx edx +
jz loc_438616  +
add eax [edx+18h] +
mov [esp+2Ch+var_2C] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+2Ch+arg_8] eax +
jz loc_43863D  +
mov [esp+2Ch+var_14] eax +
jmp loc_43846F  +
mov [esp+2Ch+var_2C] eax +
call sub_40EFC0  +
mov [esp+2Ch+arg_C] eax +
jmp loc_4385ED  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+arg_C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] eax +
jmp loc_4384B4  +
xor eax eax +
jmp loc_43860C  +
***
push ebx  +
mov ebx eax +
sub esp 20h +
mov esi [esp+20h+arg_0] +
mov eax [esi+4Ch] +
test eax eax +
jnz loc_438691  +
mov dword ptr [ebx] 0 +
xor eax eax +
mov dword ptr [ebx+8] 0 +
mov [ebx+4] eax +
mov eax 1 +
add esp 20h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ecx+4] +
mov edi [eax+1B0h] +
movzx eax byte ptr [edx+2] +
mov [esp+20h+var_14] 0 +
mov [esp+20h+var_18] 0 +
mov [esp+20h+var_1C] esi +
shr al 6 +
and eax 1 +
mov [esp+20h+var_10] eax +
mov [esp+20h+var_20] ecx +
call sub_438410  +
test eax eax +
mov [ebx] eax +
jz loc_4386F0  +
mov ecx [edi+174h] +
mov edx [esi+4Ch] +
mov [ebx+4] eax +
movzx ecx byte ptr [ecx+9] +
lea edx [edx+edx*2] +
shl edx 2 +
imul edx ecx +
add edx eax +
mov [ebx+8] edx +
jmp loc_438682  +
xor eax eax +
jmp loc_43868A  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 10h +
mov ecx [ecx+94h] +
call sub_4320A0  +
test eax eax +
jnz loc_438724  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [ebx+94h] +
mov edx edi +
mov eax esi +
mov [esp+18h+var_18] ebx +
call sub_438660  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_43871D  +
mov eax [esi+0Ch] +
mov edx [ebx+94h] +
test eax eax +
mov edx [edx+0A0h] +
jz loc_43871B  +
cmp eax [edx+78h] +
jz loc_43871B  +
mov [esp+18h+var_18] eax +
call free  +
jmp loc_43871B  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+2Ch+arg_0] +
mov eax [esi+44h] +
test eax eax +
jz loc_438857  +
mov ebx [eax+8] +
test ebx ebx +
jz loc_438857  +
movzx eax byte ptr [esi+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_4387B0  +
mov [esp+2Ch+var_28] 3125h +
mov [esp+2Ch+var_2C] offset a____Binutils_3 +
call sub_40C6C0  +
mov ebx [esi+18h] +
mov eax [esi+2Ch] +
mov edi [esi+14h] +
add eax ebx +
mov [esp+2Ch+var_14] eax +
mov eax [edi+94h] +
mov [esp+2Ch+var_1C] 1 +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_2C] eax +
call sub_438410  +
test eax eax +
jz loc_438882  +
mov edx [edi+94h] +
mov edx [edx+4] +
mov edx [edx+1B0h] +
mov ecx [edx+174h] +
movzx edx byte ptr [ecx+0Bh] +
movzx ecx byte ptr [ecx+9] +
mov [esp+2Ch+var_D] dl +
mov edx [edi+4Ch] +
lea edx [edx+edx*2] +
shl edx 2 +
imul edx ecx +
add edx eax +
cmp eax edx +
jnb loc_438857  +
mov ebp [eax] +
cmp ebx ebp +
ja loc_438850  +
cmp [esp+2Ch+var_14] ebp +
jbe loc_438850  +
mov ecx [esi+44h] +
mov edi [ecx+4] +
test edi edi +
jz loc_438864  +
sub ebp ebx +
cmp ebp [ecx] +
jnb loc_438864  +
movzx ecx [esp+2Ch+var_D] +
shr ebp cl +
mov ecx [edi+ebp*4] +
test ecx ecx +
jz loc_438864  +
nop   +
add eax 0Ch +
cmp edx eax +
ja loc_438824  +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [eax+8] 0 +
add eax 0Ch +
mov dword ptr [eax-8] 0 +
mov dword ptr [eax-0Ch] 0 +
cmp edx eax +
ja loc_438824  +
jmp loc_438857  +
mov eax [esp+2Ch+arg_4] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_43885C  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [esp+50h] +
mov ecx [esp+54h] +
mov eax [ebp+4] +
mov esi [eax+1B0h] +
mov eax [ecx+3Ch] +
mov edx [eax+8Ch] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_4388C8  +
mov ebx [esp+58h] +
mov edi [eax+28h] +
cmp edi [ebx+28h] +
jz loc_4389E8  +
mov eax [edx+4Ch] +
test eax eax +
jz loc_4388DB  +
mov ebx [esp+58h] +
mov edi [eax+28h] +
cmp edi [ebx+28h] +
jz loc_438910  +
mov eax [ecx+94h] +
mov [esp+0Ch] ecx +
mov [esp+4] ebp +
mov dword ptr [esp] offset aBRelocationSiz +
mov [esp+8] eax +
call off_476094  +
mov dword ptr [esp] 3 +
call sub_40C770  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea ecx [edx+4Ch] +
mov edx [esi+174h] +
mov [esp+24h] ecx +
mov ecx [edx+44h] +
mov [esp+1Ch] ecx +
mov ecx edi +
mov eax [eax+30h] +
mov [esp+2Ch] eax +
mov eax [esp+24h] +
mov eax [eax+4] +
mov ebx eax +
xor eax eax +
test ecx ecx +
jz loc_4389D2  +
movzx eax byte ptr [edx+9] +
xor edx edx +
lea edi [eax+eax*2] +
mov eax [esp+58h] +
shl edi 2 +
mov eax [eax+18h] +
mov [esp+28h] eax +
div  ecx +
imul edi eax +
add edi [esp+5Ch] +
cmp [esp+5Ch] edi +
mov [esp+20h] edi +
jnb loc_4389CA  +
mov eax ebx +
mov edi [esp+2Ch] +
imul eax ecx +
mov ebx [esp+5Ch] +
add edi eax +
mov eax edi +
mov edi esi +
mov esi eax +
nop   +
mov eax [esp+1Ch] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] ebp +
call eax  +
mov edx [edi+174h] +
mov eax [esp+58h] +
movzx edx byte ptr [edx+9] +
lea edx [edx+edx*2] +
lea ebx [ebx+edx*4] +
mov edx [eax+28h] +
add esi edx +
cmp [esp+20h] ebx +
ja loc_438980  +
mov eax [esp+24h] +
test edx edx +
mov eax [eax+4] +
mov ebx eax +
jz loc_438A03  +
mov eax [esp+58h] +
mov ecx edx +
mov eax [eax+18h] +
mov [esp+28h] eax +
mov eax [esp+28h] +
xor edx edx +
div  ecx +
mov ecx [esp+24h] +
add eax ebx +
mov [ecx+4] eax +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea ecx [edx+3Ch] +
mov edx [esi+174h] +
mov [esp+24h] ecx +
mov ecx [edx+3Ch] +
mov [esp+1Ch] ecx +
mov ecx edi +
jmp loc_438926  +
***
xor eax eax +
jmp loc_4389D2  +
***
mov edx [esp+4] +
mov ecx [esp+8] +
movzx eax byte ptr [edx] +
and eax 3 +
cmp al 1 +
jz loc_438A28  +
mov eax 1 +
retn   +
***
cmp dword ptr [ecx+20h] 0FFFFFFFFh +
jnz loc_438A22  +
cmp byte ptr [ecx+0Ch] 2 +
jnz loc_438A22  +
jmp sub_436840  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+24h] +
mov esi [esp+28h] +
mov eax [ebx+14h] +
mov edx [ebx+18h] +
mov ecx [eax+40h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
test edx eax +
jz loc_438A6D  +
shr eax 1 +
sub ecx 1 +
test eax edx +
jnz loc_438A64  +
cmp [esi+40h] ecx +
jnb loc_438A75  +
mov [esi+40h] ecx +
mov ecx eax +
mov edx 0FFFFFFFFh +
add ecx [esi+24h] +
jb loc_438A87  +
not eax  +
mov edx eax +
and edx ecx +
mov [ebx+18h] edx +
add edx [ebx+2Ch] +
test byte ptr [ebx+35h] 8 +
mov [ebx+14h] esi +
mov [esi+24h] edx +
jz loc_438AA6  +
mov eax [esp+20h] +
mov eax [eax+58h] +
test eax eax +
jz loc_438AC9  +
js loc_438AB1  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esi+94h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
cmp byte ptr [eax+1AEh] 0 +
js loc_438AA6  +
mov eax [esp+20h] +
mov edx [ebx+4] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+4] edx +
mov dword ptr [esp] offset aPCopyRelocAgai +
call eax  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
test ebx ebx +
jnz loc_438B05  +
jmp loc_438BA6  +
mov ebx [ebx+14h] +
movzx eax byte ptr [ebx+0Ch] +
sub eax 6 +
cmp al 1 +
jbe loc_438B02  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_438BA6  +
movzx edx byte ptr [ebx+34h] +
xor eax eax +
test dl 8 +
jnz loc_438BA0  +
mov eax [esp+24h] +
mov esi 1 +
movzx eax byte ptr [eax] +
mov ecx eax +
and ecx 3 +
cmp cl 1 +
jbe loc_438B44  +
xor si si +
test byte ptr [ebx+35h] 4 +
jz loc_438BB0  +
movzx edx byte ptr [ebx+31h] +
and edx 3 +
jz loc_438B80  +
xor eax eax +
cmp dl 2 +
jbe loc_438BA0  +
cmp dl 3 +
jnz loc_438B80  +
mov ecx [esp+24h] +
mov edx [ecx+1Ch] +
cmp dword ptr [edx+28h] 1 +
jnz loc_438BA0  +
mov eax [edx+38h] +
mov edx [esp+28h] +
mov eax [eax+4] +
test edx edx +
mov eax [eax+1B0h] +
jnz loc_438BEE  +
mov esi 1 +
nop   +
movzx edx byte ptr [ebx+33h] +
test dl 2 +
jnz loc_438BE0  +
and edx 0Ah +
mov eax 1 +
jnz loc_438BA0  +
cmp byte ptr [ebx+0Ch] 3 +
jz loc_438BE0  +
lea esi [esi+0] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
test al 4 +
mov si 1 +
jnz loc_438B44  +
mov eax [esp+24h] +
xor si si +
test byte ptr [eax+5] 1 +
jz loc_438B44  +
shr dl 4 +
xor edx 1 +
mov esi edx +
and esi 1 +
jmp loc_438B44  +
***
mov eax esi +
add esp 14h +
xor eax 1 +
and eax 1 +
pop ebx  +
pop esi  +
retn   +
***
movzx edx byte ptr [ebx+30h] +
mov eax [eax+158h] +
mov [esp] edx +
call eax  +
test eax eax +
mov eax 1 +
cmovz esi eax +
jmp loc_438B80  +
***
push ebx  +
sub esp 10h +
mov edx [esp+10h+arg_0] +
test edx edx +
jz loc_438C90  +
movzx ecx byte ptr [edx+31h] +
and ecx 3 +
movzx eax cl +
sub eax 1 +
cmp eax 1 +
jbe loc_438C90  +
movzx ebx byte ptr [edx+33h] +
test bl 0Ah +
jnz loc_438C3F  +
cmp byte ptr [edx+0Ch] 3 +
jz loc_438C46  +
xor eax eax +
and ebx 2 +
jz loc_438C95  +
movzx eax byte ptr [edx+34h] +
test al 8 +
jnz loc_438C90  +
cmp dword ptr [edx+20h] 0FFFFFFFFh +
jz loc_438C90  +
mov esi [esp+10h+arg_4] +
movzx edi byte ptr [esi] +
mov esi edi +
and esi 3 +
mov ebx esi +
cmp bl 1 +
jbe loc_438C90  +
test byte ptr [edx+35h] 4 +
jnz loc_438C7C  +
and edi 4 +
jnz loc_438C90  +
mov esi [esp+10h+arg_4] +
test byte ptr [esi+5] 1 +
jnz loc_438CE0  +
xor eax eax +
test cl cl +
jz loc_438C95  +
mov eax [esp+10h+arg_4] +
mov eax [eax+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_438CA0  +
nop   +
mov eax 1 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+38h] +
mov eax [eax+4] +
mov ecx [eax+1B0h] +
mov eax [esp+10h+arg_4] +
mov eax [eax+58h] +
test eax eax +
jz loc_438CC6  +
mov eax [esp+10h+arg_8] +
jns loc_438C95  +
cmp byte ptr [ecx+1AEh] 0 +
js loc_438C95  +
movzx edx byte ptr [edx+30h] +
mov eax [ecx+158h] +
mov [esp+10h+var_10] edx +
call eax  +
test eax eax +
jz loc_438C90  +
mov eax [esp+10h+arg_8] +
jmp loc_438C95  +
test al 10h +
jnz loc_438C7C  +
jmp loc_438C90  +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
mov esi [esp+10h] +
mov eax [eax+64h] +
test eax eax +
jnz loc_438D0A  +
jmp loc_438D40  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_438D40  +
test byte ptr [eax+15h] 4 +
nop   +
jz loc_438D03  +
mov edx eax +
xor ecx ecx +
jmp loc_438D1E  +
test byte ptr [edx+15h] 4 +
jz loc_438D2D  +
mov ebx [edx+40h] +
mov edx [edx+0Ch] +
cmp ecx ebx +
cmovb ecx ebx +
test edx edx +
jnz loc_438D18  +
mov edx [esi+1Ch] +
mov [edx+0C8h] eax +
mov [eax+40h] ecx +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esi+1Ch] +
mov dword ptr [eax+0C8h] 0 +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov ebx [eax+1Ch] +
cmp dword ptr [ebx+28h] 1 +
jz loc_438D80  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+38h] +
mov edx [eax+4] +
mov ebp [edx+1B0h] +
mov [esp+2Ch+var_28] offset a_dynamic +
mov [esp+2Ch+var_2C] eax +
call sub_410920  +
test eax eax +
mov esi eax +
jz loc_438E10  +
mov eax [ebp+174h] +
movzx edi byte ptr [eax+6] +
mov eax [esi+6Ch] +
add edi [esi+24h] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call sub_40F050  +
test eax eax +
jz loc_438D74  +
mov edx [esp+2Ch+arg_4] +
mov ecx [ebx+38h] +
mov ebx eax +
add ebx [esi+24h] +
mov [esp+2Ch+var_20] eax +
mov [esp+2Ch+var_14] edx +
mov edx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_10] edx +
mov edx [ebp+174h] +
mov edx [edx+34h] +
mov [esp+2Ch+var_24] ebx +
lea ebx [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] ebx +
mov [esp+2Ch+var_2C] ecx +
call edx  +
mov eax [esp+2Ch+var_20] +
mov [esi+24h] edi +
mov [esi+6Ch] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_28] 0C51h +
mov [esp+2Ch+var_2C] offset a____Binutils_3 +
call sub_40C6C0  +
jmp loc_438DA2  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [edx+1Ch] +
mov [esp+3Ch+var_20] edx +
mov esi [ebx+38h] +
test esi esi +
jz loc_438FA0  +
mov edx [ebx+50h] +
test edx edx +
jz loc_438FB0  +
mov eax [esp+3Ch+var_20] +
mov ebp [eax+1Ch] +
mov eax [ebp+50h] +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] eax +
call sub_44E260  +
cmp eax 0FFFFFFFFh +
mov [esp+3Ch+var_24] eax +
jz loc_438FC8  +
mov eax [ebp+50h] +
mov edi [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edi +
call sub_44E450  +
cmp eax 1 +
jz loc_438F32  +
mov eax [ebp+38h] +
mov edx [eax+4] +
mov esi [edx+1B0h] +
mov [esp+3Ch+var_38] offset a_dynamic +
mov [esp+3Ch+var_3C] eax +
call sub_410920  +
test eax eax +
jz loc_438F32  +
mov ebx [eax+6Ch] +
mov edx [eax+24h] +
add edx ebx +
cmp ebx edx +
jnb loc_438F32  +
mov edi ebp +
mov ecx [esi+174h] +
mov ebp eax +
jmp loc_438EE9  +
mov ecx [esi+174h] +
movzx eax byte ptr [ecx+6] +
add ebx eax +
mov eax [ebp+6Ch] +
add eax [ebp+24h] +
cmp ebx eax +
jnb loc_438F30  +
mov eax [ecx+30h] +
lea edx [esp+3Ch+var_14] +
mov ecx [edi+38h] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] ecx +
call eax  +
cmp [esp+3Ch+var_14] 1 +
jnz loc_438ED3  +
mov eax [esp+3Ch+var_24] +
cmp [esp+3Ch+var_10] eax +
jnz loc_438ED3  +
mov eax [edi+50h] +
mov edi [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edi +
call sub_44E3B0  +
mov eax 1 +
jmp loc_438F95  +
mov ebp edi +
mov eax [esp+3Ch+arg_0] +
test eax eax +
jz loc_438F80  +
mov eax [ebp+38h] +
mov edi [esp+3Ch+var_20] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edi +
call sub_436420  +
test eax eax +
jz loc_438FC8  +
mov eax [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
call sub_438D60  +
test eax eax +
setz al  +
add esp 3Ch +
movzx eax al +
pop ebx  +
neg eax  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+50h] +
mov esi [esp+3Ch+var_24] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] esi +
call sub_44E3B0  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+50h] +
mov [ebx+38h] eax +
test edx edx +
jnz loc_438E54  +
nop   +
mov [esp+3Ch+var_24] ecx +
call sub_44E1B0  +
mov ecx [esp+3Ch+var_24] +
test eax eax +
mov [ebx+50h] eax +
jnz loc_438E54  +
mov eax 0FFFFFFFFh +
jmp loc_438F95  +
***
mov eax [esp+8] +
cmp [esp+4] eax +
setz al  +
movzx eax al +
retn   +
***
push ebx  +
mov edx [esp+8] +
mov eax [esp+0Ch] +
cmp edx eax +
jz loc_439011  +
mov ecx [edx+1B0h] +
mov edx [eax+1B0h] +
xor eax eax +
mov ebx [edx] +
cmp [ecx] ebx +
jz loc_439003  +
pop ebx  +
retn   +
***
mov eax [edx+74h] +
cmp [ecx+74h] eax +
pop ebx  +
setz al  +
movzx eax al +
retn   +
***
mov eax 1 +
pop ebx  +
retn   +
***
sub esp 2Ch +
mov eax [esp+34h] +
mov ecx [esp+38h] +
mov edx [eax+18h] +
mov edx [edx+28h] +
mov [esp+14h] ecx +
mov ecx [esp+30h] +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+0Ch] ecx +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call edx  +
add esp 2Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+44h] +
mov esi [esp+48h] +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_414050  +
test eax eax +
mov ebx eax +
jz loc_4390B6  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 40h +
mov [esp] esi +
call strchr  +
test eax eax +
jz loc_4390AC  +
cmp byte ptr [eax+1] 40h +
jnz loc_4390AC  +
mov [esp] esi +
mov ebx 0FFFFFFB8h +
mov [esp+1Ch] eax +
call strlen  +
mov ecx [esp+40h] +
mov [esp] ecx +
mov [esp+4] eax +
mov [esp+18h] eax +
call sub_407B20  +
test eax eax +
mov ebp eax +
jz loc_4390AC  +
mov ecx [esp+1Ch] +
mov [esp+4] esi +
mov [esp] eax +
sub ecx esi +
lea ebx [ecx+1] +
mov [esp+8] ebx +
mov [esp+1Ch] ecx +
call memcpy  +
mov edx [esp+18h] +
lea eax [ebp+ebx+0] +
mov ecx [esp+1Ch] +
mov [esp] eax +
sub edx ebx +
lea ecx [esi+ecx+2] +
mov [esp+8] edx +
mov [esp+4] ecx +
call memcpy  +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_414050  +
test eax eax +
mov esi eax +
jz loc_43917E  +
mov eax [esp+40h] +
mov ebx esi +
mov [esp+4] ebp +
mov [esp] eax +
call sub_407D70  +
jmp loc_4390AC  +
***
mov byte ptr [ebp+ebx-1] 0 +
mov dword ptr [esp+10h] 1 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebp +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_414050  +
mov esi eax +
jmp loc_439167  +
***
push esi  +
push ebx  +
sub esp 13Ch +
mov ebp [esp+13Ch+arg_0] +
movzx eax byte ptr [ebp+28h] +
and eax 7 +
cmp eax 1 +
jz loc_439200  +
cmp eax 2 +
jnz loc_439245  +
test byte ptr [ebp+2Bh] 20h +
jz loc_439650  +
mov eax [ebp+0A0h] +
mov ebx [eax+14h] +
test ebx ebx +
jnz loc_439402  +
add esp 13Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+13Ch+arg_4] +
test byte ptr [ebp+29h] 8 +
mov eax [eax+1Ch] +
mov [esp+13Ch+var_FC] eax +
mov eax [ebp+4] +
mov edi [eax+1B0h] +
mov [esp+13Ch+var_104] edi +
jz loc_439260  +
mov edi [esp+13Ch+arg_4] +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 2 +
jz loc_439AB0  +
mov edi [esp+13Ch+var_FC] +
cmp dword ptr [edi+28h] 1 +
jz loc_439876  +
mov [esp+13Ch+var_13C] 3 +
call sub_40C770  +
xor eax eax +
add esp 13Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+13Ch+var_100] 0 +
mov edi [esp+13Ch+arg_4] +
mov eax [ebp+0A0h] +
test byte ptr [edi+5] 20h +
jz loc_4392C2  +
mov edi [esp+13Ch+var_104] +
movzx eax word ptr [eax+26h] +
mov edx [edi+8] +
cmp edx eax +
jz loc_4392C2  +
mov ecx [edi+16Ch] +
test ecx ecx +
jz loc_439610  +
cmp eax ecx +
jnz loc_439610  +
mov edi [esp+13Ch+arg_4] +
mov ecx [edi+18h] +
mov ecx [ecx+2Ch] +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] ebp +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_13C] offset aPAlternateElfM +
call ecx  +
mov ebx [ebp+64h] +
test ebx ebx +
jnz loc_4392DB  +
jmp loc_439699  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_439680  +
mov eax [ebx] +
mov edi offset a_gnu_warning_ +
mov ecx 0Dh +
mov esi eax +
cmps   +
jnz loc_4392D0  +
mov ecx [esp+13Ch+var_100] +
lea edi [eax+0Dh] +
test ecx ecx +
jz loc_43932F  +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_12C] 1 +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] eax +
call sub_414050  +
test eax eax +
jz loc_43932F  +
movzx eax byte ptr [eax+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_4392D0  +
mov esi [ebx+24h] +
mov [esp+13Ch+var_13C] ebp +
lea eax [esi+1] +
mov [esp+13Ch+var_138] eax +
call sub_407B20  +
test eax eax +
jz loc_439640  +
mov [esp+13Ch+var_128] esi +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_108] eax +
call sub_411050  +
test eax eax +
jz loc_439640  +
mov edx [esp+13Ch+var_108] +
mov eax [esp+13Ch+var_104] +
mov byte ptr [edx+esi] 0 +
mov [esp+13Ch+var_118] 0 +
movzx eax byte ptr [eax+1ACh] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_124] edx +
mov [esp+13Ch+var_128] 0 +
and eax 1 +
mov [esp+13Ch+var_11C] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_12C] ebx +
mov [esp+13Ch+var_130] 1000h +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] eax +
call sub_414CB0  +
test eax eax +
jz loc_439640  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 1 +
ja loc_4392D0  +
mov dword ptr [ebx+24h] 0 +
or dword ptr [ebx+14h] 8000h +
jmp loc_4392D0  +
mov [esp+13Ch+var_13C] ebx +
call sub_40F150  +
mov edi eax +
mov [esp+13Ch+var_F8] eax +
xor eax eax +
test edi edi +
jz loc_439253  +
mov eax [ebp+0A0h] +
shl ebx 4 +
mov eax [eax+10h] +
mov edi eax +
mov [esp+13Ch+var_EC] eax +
mov eax [ebp+4] +
add ebx edi +
cmp edi ebx +
mov [esp+13Ch+var_108] ebx +
mov eax [eax+1B0h] +
mov eax [eax+40h] +
mov [esp+13Ch+var_100] eax +
jnb loc_43AB0C  +
mov [esp+13Ch+arg_0] ebp +
mov ebp [esp+13Ch+var_F8] +
mov ecx [esp+13Ch+var_EC] +
xor edi edi +
mov ebx 0FFFFFFFFh +
mov eax edi +
mov esi 0FFFFFFFFh +
mov edi ebp +
mov ebp eax +
mov [esp+13Ch+var_104] ebx +
mov [esp+13Ch+var_FC] 0 +
mov ebx ecx +
jmp loc_439498  +
cmp al 2 +
jz loc_439488  +
mov byte ptr [edi+ebp] 1 +
add ebx 10h +
add ebp 1 +
cmp ebx [esp+13Ch+var_108] +
jnb loc_43AAFE  +
cmp byte ptr [edi+ebp] 0 +
jnz loc_439488  +
mov edx [ebx+0Ch] +
mov eax [esp+13Ch+var_104] +
xor eax [ebx+8] +
xor edx esi +
or edx eax +
jz loc_439484  +
mov eax [ebx] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_0] +
mov [esp+13Ch+var_13C] eax +
mov eax [esp+13Ch+var_100] +
call eax  +
cmp eax 0FFFFFFB8h +
jz loc_43962F  +
test eax eax +
jz loc_439488  +
movzx eax byte ptr [eax+0Ch] +
cmp al 5 +
jz loc_439AD8  +
cmp al 1 +
jnz loc_439480  +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_0] +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] eax +
call sub_4097E0  +
test eax eax +
mov [esp+13Ch+var_14] eax +
jz loc_43962F  +
mov [esp+13Ch+var_138] 1 +
mov [esp+13Ch+var_13C] eax +
call sub_4089A0  +
test eax eax +
jz loc_43962F  +
mov eax [esp+13Ch+arg_4] +
lea ecx [esp+13Ch+var_14] +
mov edx [ebx] +
mov eax [eax+1Ch] +
mov esi [eax+20h] +
mov eax [esp+13Ch+arg_4] +
mov eax [eax+18h] +
mov eax [eax] +
mov [esp+13Ch+var_130] ecx +
mov ecx [esp+13Ch+arg_4] +
mov [esp+13Ch+var_134] edx +
mov edx [esp+13Ch+var_14] +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_138] edx +
call eax  +
test eax eax +
jz loc_43962F  +
mov eax [esp+13Ch+var_14] +
mov ecx [esp+13Ch+arg_4] +
mov edx [eax+4] +
mov edx [edx+168h] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] eax +
call edx  +
test eax eax +
jz loc_43962F  +
mov eax [esp+13Ch+arg_4] +
lea edx [ebx-8] +
mov [esp+13Ch+var_104] edi +
mov [esp+13Ch+var_F4] ebp +
mov eax [eax+1Ch] +
cmp esi [eax+20h] +
mov eax 1 +
cmovz eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_FC] eax +
mov eax ebp +
jmp loc_4395ED  +
mov ecx [edx] +
sub eax 1 +
sub edx 10h +
mov esi [edx+14h] +
mov edi [ebx+8] +
mov ebp [ebx+0Ch] +
xor ecx edi +
xor esi ebp +
or esi ecx +
jnz loc_439AC3  +
mov edi [esp+13Ch+var_104] +
test eax eax +
mov byte ptr [edi+eax] 1 +
jnz loc_4395D0  +
mov eax [ebx+8] +
mov ebp [esp+13Ch+var_F4] +
mov esi [ebx+0Ch] +
mov [esp+13Ch+var_104] eax +
jmp loc_439488  +
mov edi [esp+13Ch+var_104] +
mov ecx [edi+170h] +
test ecx ecx +
jz loc_4392C2  +
cmp eax ecx +
jnz loc_4392C2  +
jmp loc_4392A0  +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_13C] eax +
call free  +
nop   +
lea esi [esi+0] +
xor eax eax +
add esp 13Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+13Ch+var_138] 0 +
mov [esp+13Ch+var_13C] ebp +
call sub_409AD0  +
test eax eax +
jz loc_4391ED  +
mov [esp+13Ch+var_13C] 8 +
call sub_40C770  +
xor eax eax +
jmp loc_439253  +
mov eax [ebp+64h] +
test eax eax +
jz loc_439699  +
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 200h +
jz loc_439896  +
mov edx [esp+13Ch+var_100] +
xor eax eax +
test edx edx +
jnz loc_4398A6  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax] 1 +
jz loc_4396C1  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_43B683  +
mov ecx [ebp+0A0h] +
mov [esp+13Ch+var_AC] 1 +
lea eax [ecx+48h] +
mov [esp+13Ch+var_E4] eax +
mov eax [esp+13Ch+var_104] +
xor edx edx +
mov [esp+13Ch+var_108] 0 +
mov eax [eax+174h] +
movzx ebx byte ptr [eax+5] +
mov eax [esp+13Ch+var_E4] +
mov eax [eax+18h] +
div  ebx +
mov [esp+13Ch+var_D0] eax +
mov eax [ecx+928h] +
test eax eax +
jnz loc_439717  +
mov eax [esp+13Ch+var_E4] +
mov eax [eax+20h] +
sub [esp+13Ch+var_D0] eax +
mov [esp+13Ch+var_108] eax +
mov eax [ecx+218h] +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_F0] eax +
mov eax [esp+13Ch+var_D0] +
test eax eax +
jnz loc_43AE0A  +
mov edi [esp+13Ch+var_100] +
test edi edi +
jnz loc_43AE90  +
mov ebx [ebp+0A0h] +
mov [esp+13Ch+var_C0] 0 +
test byte ptr [ebx+924h] 1 +
jz loc_439C5A  +
mov ecx [esp+13Ch+var_FC] +
mov edi [ecx+0Ch] +
test edi edi +
mov [esp+13Ch+var_F8] edi +
jz loc_43B840  +
mov esi [ecx] +
xor eax eax +
mov [esp+13Ch+arg_0] ebp +
mov ebp ecx +
lea edi [esi+edi*4] +
nop   +
mov edx [esi] +
test edx edx +
jz loc_4397A2  +
mov ecx [ebp+14h] +
lea esi [esi+0] +
add eax ecx +
cmp byte ptr [edx+0Ch] 7 +
mov edx [edx] +
lea ebx [eax+ecx] +
cmovz eax ebx +
test edx edx +
jnz loc_439790  +
add esi 4 +
cmp esi edi +
jnz loc_439780  +
mov ebp [esp+13Ch+arg_0] +
mov edi [esp+13Ch+var_F8] +
shl edi 2 +
add eax edi +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_A8] edi +
call sub_40EFC0  +
test eax eax +
mov [esp+13Ch+var_B8] eax +
jz loc_439847  +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_138] 1 +
mov [esp+13Ch+var_13C] eax +
call sub_410230  +
test eax eax +
mov [esp+13Ch+var_A4] eax +
jz loc_43B24A  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+80h] +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov [esp+13Ch+var_C8] 0 +
test eax eax +
jnz loc_43B6D0  +
mov eax [esp+13Ch+var_B8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_C8] +
test eax eax +
jz loc_439847  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_C0] +
test eax eax +
jz loc_439857  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov ebx [esp+13Ch+var_D4] +
test ebx ebx +
jz loc_439640  +
mov eax [esp+13Ch+var_D4] +
mov [esp+13Ch+var_13C] eax +
call free  +
xor eax eax +
jmp loc_439253  +
mov edi [esp+13Ch+arg_4] +
mov edx [edi+30h] +
cmp eax [edx+4] +
jnz loc_439245  +
mov [esp+13Ch+var_100] 1 +
jmp loc_439268  +
cmp [esp+13Ch+var_100] 0 +
mov eax 1 +
jz loc_4396C1  +
mov edi [esp+13Ch+var_FC] +
cmp dword ptr [edi+28h] 1 +
jnz loc_439640  +
test eax eax +
mov [esp+13Ch+var_20] 0 +
mov [esp+13Ch+var_1C] 0 +
jnz loc_43C1FC  +
mov eax [ebp+0A0h] +
mov eax [eax+924h] +
mov [esp+13Ch+var_138] offset a_dynamic +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_E4] eax +
call sub_410840  +
test eax eax +
mov edi eax +
mov [esp+13Ch+var_108] eax +
jz loc_43B087  +
lea eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call sub_4111A0  +
test eax eax +
jz loc_43AFF0  +
mov esi [esp+13Ch+var_108] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] esi +
call sub_428190  +
cmp eax 0FFFFFEFFh +
jz loc_43AFF0  +
mov edx [ebp+0A0h] +
mov edi [esp+13Ch+var_18] +
mov ecx [esi+24h] +
mov edx [edx+40h] +
add ecx edi +
cmp edi ecx +
mov eax [edx+eax*4] +
mov eax [eax+1Ch] +
mov [esp+13Ch+var_F8] eax +
jnb loc_43B7BF  +
mov eax [esp+13Ch+var_104] +
mov [esp+13Ch+var_F0] 0 +
mov [esp+13Ch+var_F4] 0 +
mov eax [eax+174h] +
jmp loc_4399B3  +
cmp eax 6FFFFEFCh +
jz loc_43ACB9  +
mov eax [esp+13Ch+var_104] +
mov esi [esp+13Ch+var_108] +
mov eax [eax+174h] +
mov ecx [esi+24h] +
movzx edx byte ptr [eax+6] +
add edi edx +
mov edx [esp+13Ch+var_18] +
add ecx edx +
cmp edi ecx +
jnb loc_43B7D1  +
mov eax [eax+30h] +
lea ecx [esp+13Ch+var_14] +
mov [esp+13Ch+var_134] ecx +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov eax [esp+13Ch+var_14] +
cmp eax 0Eh +
jz loc_43AC86  +
cmp eax 1 +
jz loc_43ABD6  +
cmp eax 1Dh +
jz loc_43AB20  +
mov edx [esp+13Ch+var_1C] +
test edx edx +
jnz loc_439980  +
cmp eax 0Fh +
jnz loc_439980  +
mov [esp+13Ch+var_138] 0Ch +
mov esi [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
call sub_407B20  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] esi +
mov ebx eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_424010  +
test eax eax +
jz loc_43AFF0  +
test ebx ebx +
jz loc_43AFF0  +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_E8] eax +
call strlen  +
mov [esp+13Ch+var_13C] ebp +
lea ecx [eax+1] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_EC] ecx +
call sub_407B20  +
test eax eax +
mov esi eax +
jz loc_43AFF0  +
mov edx [esp+13Ch+var_E8] +
mov ecx [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov [ebx+8] esi +
mov [ebx+4] ebp +
mov dword ptr [ebx] 0 +
mov edx [esp+13Ch+var_20] +
test edx edx +
jnz loc_439A98  +
jmp loc_43C0CD  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_439A96  +
mov [edx] ebx +
mov eax [esp+13Ch+var_14] +
jmp loc_439980  +
mov [esp+13Ch+var_13C] 5 +
call sub_40C770  +
xor eax eax +
jmp loc_439253  +
mov eax edi +
mov esi ebp +
mov edi [esp+13Ch+var_104] +
mov ebp [esp+13Ch+var_F4] +
mov [esp+13Ch+var_104] eax +
jmp loc_439488  +
mov eax [ebx+8] +
mov edx [ebx+0Ch] +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_0] +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] eax +
call sub_4097E0  +
test eax eax +
mov ecx eax +
jz loc_439488  +
movzx eax byte ptr [eax+2Ch] +
and eax 0Ch +
cmp al 4 +
jz loc_439488  +
mov [esp+13Ch+var_138] 1 +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_F4] ecx +
call sub_4089A0  +
test eax eax +
jz loc_439488  +
mov eax [esp+13Ch+var_F4] +
test byte ptr [eax+29h] 8 +
jnz loc_43B19D  +
mov eax [eax+0A0h] +
mov [esp+13Ch+var_F0] eax +
mov eax [esp+13Ch+var_F0] +
add eax 48h +
mov [esp+13Ch+var_E8] eax +
mov eax [esp+13Ch+var_F4] +
xor edx edx +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+5] +
mov eax [esp+13Ch+var_E8] +
mov eax [eax+18h] +
div  ecx +
mov edx [esp+13Ch+var_F0] +
mov edx [edx+928h] +
mov ecx eax +
xor eax eax +
test edx edx +
jnz loc_439B8A  +
mov eax [esp+13Ch+var_E8] +
mov eax [eax+20h] +
sub ecx eax +
test ecx ecx +
jz loc_439488  +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_E8] +
mov [esp+13Ch+var_134] ecx +
mov [esp+13Ch+var_F0] ecx +
mov ecx [esp+13Ch+var_F4] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_13C] ecx +
call sub_424210  +
test eax eax +
mov edx eax +
mov [esp+13Ch+var_E4] eax +
jz loc_439488  +
mov ecx [esp+13Ch+var_F0] +
lea eax [ecx+ecx*4] +
mov ecx edx +
lea edx [edx+eax*4] +
cmp ecx edx +
mov [esp+13Ch+var_F0] edx +
jnb loc_439C49  +
mov [esp+13Ch+var_E0] edi +
mov edi [esp+13Ch+var_F4] +
mov [esp+13Ch+var_DC] ebp +
mov ebp [esp+13Ch+var_E8] +
mov [esp+13Ch+var_E8] esi +
mov esi ecx +
jmp loc_439C23  +
mov edx [ebx] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
call strcmp  +
test eax eax +
jz loc_43BE08  +
add esi 14h +
cmp [esp+13Ch+var_F0] esi +
jbe loc_439C3D  +
mov edx [esi+8] +
mov eax [ebp+1Ch] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_138] eax +
call sub_424010  +
test eax eax +
jnz loc_439C04  +
mov edi [esp+13Ch+var_E0] +
mov ebp [esp+13Ch+var_DC] +
mov esi [esp+13Ch+var_E8] +
mov eax [esp+13Ch+var_E4] +
mov [esp+13Ch+var_13C] eax +
call free  +
jmp loc_439488  +
mov [esp+13Ch+var_A8] 0 +
mov [esp+13Ch+var_BC] 0 +
mov [esp+13Ch+var_D8] 0 +
mov [esp+13Ch+var_98] 0 +
mov [esp+13Ch+var_9C] 0 +
mov [esp+13Ch+var_B8] 0 +
mov [esp+13Ch+var_8C] 0 +
mov [esp+13Ch+var_90] 0 +
mov [esp+13Ch+var_94] 0 +
mov [esp+13Ch+var_A4] 0 +
mov edi [esp+13Ch+var_C0] +
mov ecx [esp+13Ch+var_108] +
mov ebx [esp+13Ch+var_D4] +
mov [esp+13Ch+var_B0] 0 +
test edi edi +
lea eax [edi+ecx*2] +
mov ecx 0 +
cmovz eax ecx +
mov [esp+13Ch+var_EC] eax +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_C8] 0 +
mov [esp+13Ch+var_CC] 0 +
lea eax [eax+eax*4] +
lea eax [ebx+eax*4] +
cmp ebx eax +
mov [esp+13Ch+var_E0] eax +
jnb loc_43A2C2  +
mov eax [esp+13Ch+var_100] +
xor eax 1 +
mov [esp+13Ch+var_A0] eax +
mov eax [ebx] +
mov [esp+13Ch+var_44] 0 +
mov [esp+13Ch+var_58] 0 +
mov [esp+13Ch+var_5C] 0 +
mov [esp+13Ch+var_60] eax +
mov eax [esp+13Ch+var_104] +
mov eax [eax+144h] +
mov [esp+13Ch+var_13C] ebx +
call eax  +
mov [esp+13Ch+var_E8] eax +
movzx eax byte ptr [ebx+0Ch] +
mov byte ptr [esp+13Ch+var_F8] al +
shr byte ptr [esp+13Ch+var_F8] 4 +
movzx eax byte ptr [esp+13Ch+var_F8] +
cmp al 1 +
jz loc_43A500  +
jb loc_43A29E  +
cmp al 2 +
jz loc_43A4E8  +
cmp al 0Ah +
jnz loc_439D95  +
mov [esp+13Ch+var_58] 800000h +
mov eax [ebx+10h] +
test eax eax +
jz loc_43A437  +
cmp eax 0FFFFFFF1h +
jz loc_43A58B  +
cmp eax 0FFFFFFF2h +
jnz loc_43A542  +
mov eax [ebx+4] +
mov [esp+13Ch+var_5C] offset off_4760E0 +
mov [esp+13Ch+var_60] eax +
mov eax [esp+13Ch+var_E4] +
mov edx [ebx+8] +
mov eax [eax+1Ch] +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_424010  +
test eax eax +
mov [esp+13Ch+var_54] eax +
jz loc_43AA63  +
cmp dword ptr [ebx+10h] 0FFFFFFF2h +
jz loc_43A482  +
mov eax [esp+13Ch+var_104] +
mov eax [eax+64h] +
test eax eax +
jz loc_43A4D8  +
lea edx [esp+13Ch+var_60] +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_124] edx +
lea edx [esp+13Ch+var_5C] +
mov [esp+13Ch+var_128] edx +
lea edx [esp+13Ch+var_58] +
mov [esp+13Ch+var_12C] edx +
lea edx [esp+13Ch+var_54] +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] ebx +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
test eax eax +
jz loc_43AA63  +
mov eax [esp+13Ch+var_5C] +
mov [esp+13Ch+var_F4] eax +
mov eax [esp+13Ch+var_54] +
test eax eax +
jz loc_43A29E  +
mov eax [esp+13Ch+var_F4] +
test eax eax +
jz loc_43B076  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 6 +
jz loc_43A527  +
mov eax [esp+13Ch+var_F4] +
cmp eax offset off_476188 +
jz loc_43AAC5  +
mov eax [eax+14h] +
mov [esp+13Ch+var_108] eax +
shr [esp+13Ch+var_108] 0Ch +
xor [esp+13Ch+var_108] 1 +
and [esp+13Ch+var_108] 1 +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+var_FC] +
mov [esp+13Ch+var_50] 0 +
mov [esp+13Ch+var_48] 0 +
movzx eax byte ptr [eax+1ACh] +
mov [esp+13Ch+var_38] 0 +
mov [esp+13Ch+var_40] 0 +
mov [esp+13Ch+var_3C] 0 +
shr al 1 +
and eax 1 +
cmp dword ptr [edi+28h] 1 +
mov [esp+13Ch+var_4C] eax +
mov eax [esp+13Ch+var_F4] +
jnz loc_43A1B1  +
mov eax [esp+13Ch+var_EC] +
test eax eax +
jz loc_43AAD2  +
lea eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_423E10  +
movzx eax word ptr [esp+13Ch+var_18] +
mov esi eax +
and esi 7FFFh +
test ax ax +
js loc_439F61  +
cmp esi 1 +
jbe loc_43ACFB  +
cmp [esp+13Ch+var_5C] offset off_476230 +
jz loc_43ACDD  +
mov eax [ebx+10h] +
test eax eax +
jz loc_43A9C0  +
mov eax [ebp+0A0h] +
mov ecx [eax+238h] +
cmp esi ecx +
ja loc_43B052  +
cmp esi 1 +
jbe loc_43B02E  +
mov edi [eax+240h] +
lea edx [esi+esi*4] +
lea edx [edi+edx*8] +
mov edx [edx-10h] +
test edx edx +
jz loc_43B052  +
mov [esp+13Ch+var_13C] edx +
mov [esp+13Ch+var_DC] edx +
call strlen  +
mov edx [esp+13Ch+var_DC] +
mov [esp+13Ch+var_B4] eax +
mov edi [esp+13Ch+var_54] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
mov eax ecx +
mov ecx [esp+13Ch+var_B4] +
not eax  +
sub eax 1 +
mov [esp+13Ch+var_DC] eax +
add ecx eax +
lea eax [ecx+3] +
add ecx 2 +
cmp word ptr [esp+13Ch+var_18] 0 +
cmovs eax ecx +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_C4] edx +
mov [esp+13Ch+var_13C] eax +
call sub_410230  +
test eax eax +
mov edi eax +
jz loc_43AA63  +
mov eax [esp+13Ch+var_DC] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_138] eax +
call memcpy  +
mov eax [esp+13Ch+var_DC] +
mov edx [esp+13Ch+var_C4] +
lea ecx [edi+eax] +
mov byte ptr [ecx] 40h +
lea eax [ecx+1] +
cmp word ptr [esp+13Ch+var_18] 0 +
js loc_43A04D  +
cmp dword ptr [ebx+10h] 0 +
jz loc_43A04D  +
lea eax [ecx+2] +
mov byte ptr [ecx+1] 40h +
mov ecx [esp+13Ch+var_B4] +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_13C] eax +
add ecx 1 +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov eax [esp+13Ch+var_5C] +
mov ecx edi +
mov [esp+13Ch+var_54] edi +
cmp eax offset off_476188 +
jz loc_43A0A3  +
mov eax [esp+13Ch+var_100] +
test eax eax +
jnz loc_43A0A3  +
test byte ptr [ebp+2Bh] 8 +
jz loc_43A0A3  +
movzx eax byte ptr [ebx+0Dh] +
mov edx eax +
and edx 3 +
cmp dl 1 +
jz loc_43A0A3  +
and eax 0FFFFFFFCh +
or eax 2 +
mov [ebx+0Dh] al +
lea eax [esp+13Ch+var_38] +
mov edx [esp+13Ch+arg_4] +
mov [esp+13Ch+var_110] eax +
lea eax [esp+13Ch+var_50] +
mov [esp+13Ch+var_114] eax +
lea eax [esp+13Ch+var_4C] +
mov [esp+13Ch+var_118] eax +
lea eax [esp+13Ch+var_44] +
mov [esp+13Ch+var_11C] eax +
lea eax [esp+13Ch+var_14] +
mov [esp+13Ch+var_120] eax +
lea eax [esp+13Ch+var_40] +
mov [esp+13Ch+var_124] eax +
lea eax [esp+13Ch+var_48] +
mov [esp+13Ch+var_128] eax +
lea eax [esp+13Ch+var_3C] +
mov [esp+13Ch+var_12C] eax +
mov eax [esp+13Ch+var_F0] +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_130] eax +
lea eax [esp+13Ch+var_60] +
mov [esp+13Ch+var_134] eax +
lea eax [esp+13Ch+var_5C] +
mov [esp+13Ch+var_138] eax +
mov eax ebp +
call sub_436920  +
test eax eax +
jz loc_43AA63  +
mov eax [esp+13Ch+var_14] +
test eax eax +
jnz loc_43A29E  +
mov eax [esp+13Ch+var_44] +
test eax eax +
jz loc_43A163  +
mov eax [esp+13Ch+var_38] +
test eax eax +
mov eax 0 +
cmovz eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_108] eax +
mov eax [esp+13Ch+var_F0] +
mov eax [eax] +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-6] +
cmp dl 1 +
ja loc_43A184  +
mov eax [eax+14h] +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-6] +
cmp dl 1 +
jbe loc_43A175  +
mov edx [ebp+0A0h] +
mov edx [edx+240h] +
test edx edx +
jz loc_43A1AA  +
cmp esi 1 +
jbe loc_43A1AA  +
test byte ptr [esp+13Ch+var_108] 1 +
jz loc_43A1AA  +
lea ecx [esi+esi*4] +
lea edx [edx+ecx*8-28h] +
mov [eax+40h] edx +
mov eax [esp+13Ch+var_5C] +
mov edi [esp+13Ch+var_F0] +
mov ecx [esp+13Ch+var_104] +
mov [esp+13Ch+var_118] edi +
movzx edx byte ptr [ecx+1ACh] +
mov [esp+13Ch+var_12C] eax +
mov eax [esp+13Ch+var_58] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_124] 0 +
and edx 1 +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_11C] edx +
mov edx [esp+13Ch+var_60] +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_128] edx +
mov [esp+13Ch+var_13C] eax +
call sub_414CB0  +
test eax eax +
jz loc_43AA63  +
mov edi [edi] +
movzx eax byte ptr [edi+0Ch] +
mov esi edi +
sub eax 6 +
cmp al 1 +
ja loc_43A23E  +
lea esi [esi+0] +
mov esi [esi+14h] +
movzx eax byte ptr [esi+0Ch] +
sub eax 6 +
cmp al 1 +
jbe loc_43A230  +
mov eax [esp+13Ch+var_F0] +
mov [esp+13Ch+var_C4] 0 +
mov [eax] esi +
mov eax [esp+13Ch+var_58] +
shr eax 7 +
and eax 1 +
mov byte ptr [esp+13Ch+var_DC] al +
movzx eax byte ptr [esp+13Ch+var_100] +
test byte ptr [esp+13Ch+var_108] al +
jz loc_43A273  +
cmp byte ptr [esp+13Ch+var_DC] 0 +
jnz loc_43AD0E  +
mov eax [esp+13Ch+var_E8] +
test eax eax +
jz loc_43A447  +
cmp byte ptr [esi+0Ch] 5 +
jz loc_43B043  +
lea esi [esi+0] +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_43A59B  +
mov edi [esp+13Ch+var_EC] +
add ebx 14h +
add [esp+13Ch+var_F0] 4 +
mov eax edi +
add eax 2 +
test edi edi +
cmovz eax edi +
cmp [esp+13Ch+var_E0] ebx +
mov [esp+13Ch+var_EC] eax +
ja loc_439D21  +
mov eax [esp+13Ch+var_C0] +
test eax eax +
jz loc_43A2D2  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_D4] +
test eax eax +
jz loc_43A2E2  +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [ebp+0A0h] +
test byte ptr [eax+924h] 1 +
jnz loc_43B9BF  +
mov eax [esp+13Ch+var_B8] +
test eax eax +
jz loc_43A349  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+80h] +
mov [esp+13Ch+var_134] 2 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_C0] 0 +
test eax eax +
jz loc_439828  +
mov eax [esp+13Ch+var_B8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_43B85A  +
mov eax [esp+13Ch+var_C8] +
test eax eax +
jz loc_43B85A  +
mov eax [esp+13Ch+var_B0] +
xor esi esi +
test eax eax +
jz loc_43B84E  +
mov [esp+13Ch+arg_0] ebp +
jmp loc_43A394  +
add esi 1 +
cmp esi [esp+13Ch+var_B0] +
jz loc_43B847  +
mov eax [esp+13Ch+var_C8] +
mov ebx [eax+esi*4] +
mov edi [ebx+4] +
mov [esp+13Ch+var_138] 40h +
mov [esp+13Ch+var_13C] edi +
call strchr  +
test eax eax +
jz loc_43A384  +
movzx ecx byte ptr [ebx+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
ja loc_43A384  +
sub eax edi +
mov edi eax +
lea eax [eax+1] +
mov [esp+13Ch+var_13C] eax +
call sub_40EFC0  +
test eax eax +
mov ebp eax +
jz loc_43C1E7  +
mov eax [ebx+4] +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call memcpy  +
mov eax [esp+13Ch+var_FC] +
mov byte ptr [ebp+edi+0] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] eax +
call sub_414050  +
test eax eax +
mov edi eax +
jz loc_43A42A  +
movzx eax byte ptr [ebx+0Ch] +
cmp [edi+0Ch] al +
jz loc_43C004  +
mov [esp+13Ch+var_13C] ebp +
call free  +
jmp loc_43A384  +
mov [esp+13Ch+var_5C] offset off_476188 +
jmp loc_439DC7  +
mov eax [esp+13Ch+var_5C] +
test byte ptr [eax+15h] 10h +
jz loc_43A290  +
cmp byte ptr [esi+0Ch] 5 +
jnz loc_43A290  +
mov eax [esp+13Ch+var_F4] +
mov eax [eax+40h] +
mov edx [esp+13Ch+var_40] +
cmp edx eax +
jnb loc_43AFCA  +
mov edx [esi+14h] +
mov [edx] eax +
jmp loc_43A290  +
test byte ptr [ebp+2Ah] 20h +
jnz loc_43AD60  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 6 +
jnz loc_439DFA  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_439DFA  +
mov [esp+13Ch+var_138] offset a_tcommon +
mov [esp+13Ch+var_13C] ebp +
call sub_410840  +
test eax eax +
jz loc_43C0A8  +
mov [esp+13Ch+var_5C] eax +
mov [esp+13Ch+var_F4] eax +
jmp loc_439E77  +
mov eax [esp+13Ch+var_5C] +
mov [esp+13Ch+var_F4] eax +
jmp loc_439E6B  +
mov [esp+13Ch+var_58] 80h +
mov eax [ebx+10h] +
jmp loc_439D98  +
mov eax [ebx+10h] +
test eax eax +
jz loc_43A437  +
mov edx [esp+13Ch+var_E8] +
test edx edx +
jnz loc_439DA0  +
mov [esp+13Ch+var_58] 2 +
jmp loc_439DA0  +
mov eax [esp+13Ch+var_F4] +
movzx eax word ptr [eax+18h] +
and ax 380h +
cmp ax 200h +
jnz loc_439E86  +
jmp loc_43A29E  +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_13C] ebp +
call sub_426C70  +
test eax eax +
mov [esp+13Ch+var_5C] eax +
jz loc_43A58B  +
cmp eax offset off_476230 +
jz loc_43A56D  +
cmp dword ptr [eax+3Ch] offset off_476230 +
jz loc_43B273  +
mov edx [ebp+28h] +
shr edx 5 +
and edx 42h +
jz loc_439DC7  +
mov eax [eax+1Ch] +
sub [esp+13Ch+var_60] eax +
jmp loc_439DC7  +
mov [esp+13Ch+var_5C] offset off_476230 +
jmp loc_439DC7  +
test byte ptr [ebp+2Ah] 20h +
jnz loc_43AAB8  +
mov ecx [esp+13Ch+var_100] +
test ecx ecx +
jnz loc_43AA77  +
mov edx [esp+13Ch+var_108] +
movzx eax byte ptr [esi+33h] +
test edx edx +
jnz loc_43B257  +
mov edx eax +
or edx 1 +
mov [esi+33h] dl +
cmp byte ptr [esp+13Ch+var_F8] 2 +
jz loc_43A5D6  +
or eax 11h +
mov [esi+33h] al +
cmp edi esi +
jz loc_43A5E4  +
test byte ptr [edi+34h] 8 +
jnz loc_43AAB8  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 3 +
jz loc_43A5FF  +
test byte ptr [esi+33h] 0Ch +
jz loc_43AAB8  +
mov [esp+13Ch+var_F8] 1 +
mov eax [esp+13Ch+var_108] +
test eax eax +
jnz loc_43AF44  +
mov eax [esp+13Ch+var_44] +
test eax eax +
jnz loc_43A628  +
cmp byte ptr [esi+0Ch] 5 +
jz loc_43AF44  +
mov eax [esp+13Ch+var_40] +
test eax eax +
jnz loc_43A63F  +
mov edx [esp+13Ch+var_E8] +
test edx edx +
jz loc_43A706  +
movzx edx byte ptr [esi+0Ch] +
cmp dl 5 +
jz loc_43A706  +
sub edx 3 +
cmp dl 1 +
jbe loc_43A66F  +
mov [esp+13Ch+var_138] 1135h +
mov [esp+13Ch+var_13C] offset a____Binutils_3 +
call sub_40C6C0  +
mov eax [esp+13Ch+var_40] +
bsf edx [esi+18h] +
mov ecx 0FFFFFFFFh +
cmovz edx ecx +
mov ecx [esi+14h] +
mov [esp+13Ch+var_F4] edx +
mov edx [ecx+94h] +
test edx edx +
jz loc_43A6A2  +
test byte ptr [edx+29h] 8 +
jnz loc_43A6A2  +
mov edi [esp+13Ch+var_F4] +
mov edx [ecx+40h] +
cmp edi edx +
cmovbe edx edi +
mov [esp+13Ch+var_F4] edx +
test eax eax +
jz loc_43B15C  +
mov ecx [esp+13Ch+var_3C] +
mov edx ebp +
mov [esp+13Ch+var_E8] ecx +
cmp [esp+13Ch+var_F4] eax +
jnb loc_43A706  +
test edx edx +
jz loc_43BD60  +
mov ecx eax +
mov edi 1 +
mov eax [esp+13Ch+var_54] +
shl edi cl +
movzx ecx byte ptr [esp+13Ch+var_F4] +
mov [esp+13Ch+var_128] edi +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_12C] eax +
mov eax 1 +
shl eax cl +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_E8] +
mov [esp+13Ch+var_13C] offset aWarningAlignme +
mov [esp+13Ch+var_134] eax +
call off_476094  +
mov eax [ebx+4] +
test eax eax +
jz loc_43A72A  +
mov edi [ebx+10h] +
test edi edi +
jz loc_43A72A  +
mov ecx [esp+13Ch+var_108] +
test ecx ecx +
jnz loc_43B1F1  +
mov edx [esi+2Ch] +
test edx edx +
jnz loc_43A72A  +
mov [esi+2Ch] eax +
movzx eax byte ptr [esi+0Ch] +
cmp al 5 +
jz loc_43B00F  +
movzx ecx byte ptr [esp+13Ch+var_108] +
movzx edx byte ptr [ebx+0Ch] +
and ecx 1 +
and edx 0Fh +
mov byte ptr [esp+13Ch+var_F4] cl +
jz loc_43A79E  +
test cl cl +
jz loc_43A75A  +
cmp byte ptr [esp+13Ch+var_DC] 0 +
jz loc_43B006  +
mov ecx [esp+13Ch+var_48] +
test ecx ecx +
jz loc_43A76D  +
cmp al 5 +
jz loc_43B006  +
movzx eax byte ptr [esi+30h] +
test al al +
jnz loc_43A79E  +
movzx ecx dl +
cmp ecx 0Ah +
jz loc_43B2B6  +
movzx edx al +
cmp edx ecx +
jz loc_43A79E  +
test al al +
jz loc_43A79B  +
mov eax [esp+13Ch+var_4C] +
test eax eax +
jz loc_43BDD7  +
mov [esi+30h] cl +
mov edx [esp+13Ch+var_5C] +
mov ecx [esp+13Ch+var_100] +
mov edi [esp+13Ch+var_108] +
mov eax [ebp+4] +
add edx 14h +
mov [esp+13Ch+var_134] ecx +
mov ecx ebx +
mov [esp+13Ch+var_13C] edx +
mov edx esi +
mov [esp+13Ch+var_138] edi +
call sub_432F50  +
test edi edi +
jz loc_43A7F5  +
mov eax [esp+13Ch+var_5C] +
test byte ptr [eax+15h] 20h +
jz loc_43A7F5  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
mov eax 0 +
cmovz eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_F8] eax +
test byte ptr [ebp+2Ah] 20h +
mov eax 0 +
cmovz eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_F8] eax +
mov eax [esp+13Ch+var_108] +
test eax eax +
jz loc_43A889  +
movzx eax byte ptr [ebx+0Eh] +
mov [esi+32h] al +
mov eax [esp+13Ch+var_58] +
shr eax 17h +
and eax 1 +
lea edx ds:0[eax*4] +
movzx eax byte ptr [esi+35h] +
and eax 0FFFFFFFBh +
or eax edx +
mov [esi+35h] al +
movzx eax byte ptr [esp+13Ch+var_A0] +
test byte ptr [esp+13Ch+var_108] al +
jz loc_43A889  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_138] 40h +
mov [esp+13Ch+var_13C] eax +
call strchr  +
test eax eax +
jz loc_43A889  +
cmp byte ptr [eax+1] 40h +
jz loc_43A889  +
mov edi [esp+13Ch+var_C8] +
test edi edi +
jz loc_43BFD5  +
mov eax [esp+13Ch+var_B0] +
mov ecx [esp+13Ch+var_C8] +
mov [ecx+eax*4] esi +
add eax 1 +
mov [esp+13Ch+var_B0] eax +
mov ecx [esp+13Ch+var_F8] +
test ecx ecx +
jnz loc_43ADA0  +
cmp byte ptr [esp+13Ch+var_F4] 0 +
jz loc_43A29E  +
cmp [esp+13Ch+var_AC] 0 +
jnz loc_43A29E  +
test byte ptr [esi+35h] 1 +
jz loc_43B01E  +
mov eax [ebp+0A0h] +
mov [esp+13Ch+var_AC] 0 +
test byte ptr [eax+924h] 1 +
jz loc_43A29E  +
mov edi [esp+13Ch+var_FC] +
mov edx [edi+64h] +
mov edi [eax+220h] +
test edx edx +
jz loc_43A920  +
mov [esp+13Ch+var_108] ebx +
mov ebx edx +
mov eax [ebx+4] +
mov eax [eax+0A0h] +
test byte ptr [eax+924h] 1 +
jnz loc_43A916  +
mov eax [ebx+8] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_138] eax +
call strcmp  +
test eax eax +
jz loc_43B01A  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_43A8ED  +
mov ebx [esp+13Ch+var_108] +
mov eax [esp+13Ch+var_3C] +
mov ecx [esp+13Ch+arg_4] +
mov edx [ecx+18h] +
mov ecx [esi+4] +
mov edx [edx+34h] +
mov [esp+13Ch+var_130] ecx +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] offset asc_49088D +
call edx  +
mov ecx [esp+13Ch+var_3C] +
mov eax [ebp+0A0h] +
test ecx ecx +
mov edx [eax+924h] +
jz loc_43A96C  +
test dl 8 +
jnz loc_43C1BA  +
and edx 0FFFFFFFEh +
mov ecx edi +
mov [eax+924h] edx +
mov edx [esp+13Ch+arg_4] +
mov eax ebp +
mov [esp+13Ch+var_13C] 1 +
call sub_438E30  +
test eax eax +
js loc_43AA63  +
mov [esp+13Ch+var_AC] 1 +
jz loc_43A29E  +
mov [esp+13Ch+var_138] 11FDh +
mov [esp+13Ch+var_13C] offset a____Binutils_3 +
call sub_40C6C0  +
jmp loc_43A29E  +
mov eax [ebp+0A0h] +
mov ecx [eax+244h] +
test ecx ecx +
jz loc_43AA37  +
mov eax [ecx+18h] +
test eax eax +
jnz loc_43A9E7  +
jmp loc_43AA30  +
mov eax [eax+14h] +
test eax eax +
jz loc_43AA30  +
movzx edx word ptr [eax+6] +
cmp esi edx +
jnz loc_43A9E0  +
mov edx [eax+10h] +
test edx edx +
jz loc_43AA37  +
mov edi [esp+13Ch+var_54] +
xor eax eax +
or ecx 0FFFFFFFFh +
scas   +
not ecx  +
lea edi [ecx-1] +
or ecx 0FFFFFFFFh +
mov [esp+13Ch+var_DC] edi +
mov edi edx +
scas   +
mov edi [esp+13Ch+var_DC] +
not ecx  +
lea eax [ecx-1] +
mov [esp+13Ch+var_B4] eax +
lea eax [eax+edi+2] +
jmp loc_439FEB  +
mov ecx [ecx+1Ch] +
test ecx ecx +
jnz loc_43A9D0  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_130] esi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] offset aBSInvalidNeede +
mov [esp+13Ch+var_134] eax +
call off_476094  +
mov [esp+13Ch+var_13C] 11h +
call sub_40C770  +
mov esi [esp+13Ch+var_B8] +
test esi esi +
jnz loc_439828  +
jmp loc_439837  +
mov ecx [esp+13Ch+var_108] +
test ecx ecx +
jnz loc_43B2A9  +
or byte ptr [esi+33h] 4 +
or byte ptr [edi+33h] 4 +
cmp edi esi +
jz loc_43AA95  +
test byte ptr [edi+34h] 8 +
jnz loc_43AAB8  +
test byte ptr [esi+33h] 3 +
jnz loc_43A5FF  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_43AAB8  +
mov edx [esp+13Ch+var_C4] +
test edx edx +
jnz loc_43AAB8  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jnz loc_43A5FF  +
mov [esp+13Ch+var_F8] 0 +
jmp loc_43A607  +
mov [esp+13Ch+var_108] 0 +
jmp loc_439EAB  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax+4] 4 +
jz loc_43AFD4  +
mov eax [ebp+0A0h] +
mov edx [eax+238h] +
mov eax edx +
mov word ptr [esp+13Ch+var_18] dx +
jmp loc_439F3A  +
mov ecx [esp+13Ch+var_FC] +
mov ebp edi +
test ecx ecx +
jnz loc_439455  +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_13C] eax +
call free  +
jmp loc_4391ED  +
mov [esp+13Ch+var_138] 0Ch +
mov esi [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
call sub_407B20  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] esi +
mov ebx eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_424010  +
test eax eax +
jz loc_43AFF0  +
test ebx ebx +
jz loc_43AFF0  +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_E8] eax +
call strlen  +
mov [esp+13Ch+var_13C] ebp +
lea ecx [eax+1] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_EC] ecx +
call sub_407B20  +
test eax eax +
mov esi eax +
jz loc_43AFF0  +
mov edx [esp+13Ch+var_E8] +
mov ecx [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov [ebx+8] esi +
mov [ebx+4] ebp +
mov dword ptr [ebx] 0 +
mov edx [esp+13Ch+var_1C] +
test edx edx +
jnz loc_43ABC2  +
jmp loc_43B9B3  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_43ABC0  +
mov [edx] ebx +
mov eax [esp+13Ch+var_14] +
jmp loc_4399EC  +
mov [esp+13Ch+var_138] 0Ch +
mov esi [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
call sub_407B20  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] esi +
mov ebx eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_424010  +
test eax eax +
jz loc_43AFF0  +
test ebx ebx +
jz loc_43AFF0  +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_E8] eax +
call strlen  +
mov [esp+13Ch+var_13C] ebp +
lea ecx [eax+1] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_EC] ecx +
call sub_407B20  +
test eax eax +
mov esi eax +
jz loc_43AFF0  +
mov edx [esp+13Ch+var_E8] +
mov ecx [esp+13Ch+var_EC] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] ecx +
call memcpy  +
mov eax [esp+13Ch+var_FC] +
mov [ebx+8] esi +
mov [ebx+4] ebp +
mov dword ptr [ebx] 0 +
mov edx [eax+64h] +
test edx edx +
jnz loc_43AC72  +
jmp loc_43B9AB  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_43AC70  +
mov [edx] ebx +
mov eax [esp+13Ch+var_14] +
jmp loc_4399E3  +
mov eax [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_424010  +
test eax eax +
mov [esp+13Ch+var_F4] eax +
jz loc_43AFF0  +
mov eax [esp+13Ch+var_14] +
jmp loc_4399DA  +
mov eax [esp+13Ch+var_10] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_F8] +
mov [esp+13Ch+var_138] eax +
call sub_424010  +
mov [esp+13Ch+var_F0] eax +
jmp loc_43998B  +
movzx edx byte ptr [ebx+0Ch] +
mov eax [esp+13Ch+var_104] +
and edx 0Fh +
mov eax [eax+158h] +
mov [esp+13Ch+var_13C] edx +
call eax  +
test eax eax +
jnz loc_439F61  +
mov eax [esp+13Ch+var_5C] +
mov ecx [esp+13Ch+var_54] +
jmp loc_43A077  +
movzx edx byte ptr [ebx+0Ch] +
mov eax [esp+13Ch+var_104] +
and edx 0Fh +
mov eax [eax+158h] +
mov [esp+13Ch+var_13C] edx +
call eax  +
test eax eax +
jnz loc_43A273  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jnz loc_43A273  +
mov eax [esi+3Ch] +
test eax eax +
jnz loc_43A273  +
mov eax [esp+13Ch+var_CC] +
mov [esp+13Ch+var_C4] 1 +
mov [esp+13Ch+var_CC] esi +
mov [esi+3Ch] eax +
jmp loc_43A273  +
mov [esp+13Ch+var_138] offset aCommon_0 +
mov [esp+13Ch+var_13C] ebp +
call sub_410840  +
test eax eax +
jnz loc_43A4C8  +
mov [esp+13Ch+var_134] 209001h +
mov [esp+13Ch+var_138] offset aCommon_0 +
mov [esp+13Ch+var_13C] ebp +
call sub_410D00  +
test eax eax +
jnz loc_43A4C8  +
jmp loc_43AA63  +
cmp dword ptr [esi+20h] 0FFFFFFFFh +
jz loc_43B7DE  +
movzx eax byte ptr [esi+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
jbe loc_43B176  +
cmp byte ptr [esp+13Ch+var_F4] 0 +
jz loc_43A29E  +
mov eax [esp+13Ch+var_AC] +
test eax eax +
jnz loc_43A29E  +
test byte ptr [esi+33h] 10h +
jz loc_43A8AE  +
mov eax [esp+13Ch+var_3C] +
test eax eax +
jz loc_43BEB2  +
test byte ptr [eax+2Ah] 20h +
jnz loc_43A8AE  +
mov edx [ebp+0A0h] +
mov edi [edx+220h] +
jmp loc_43A927  +
mov eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] 0 +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+var_E4] +
mov [esp+13Ch+var_138] eax +
call sub_424210  +
test eax eax +
mov [esp+13Ch+var_D4] eax +
jz loc_439640  +
mov eax [esp+13Ch+var_F0] +
test eax eax +
jnz loc_439735  +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_13C] ebp +
shl eax 2 +
mov [esp+13Ch+var_138] eax +
call sub_407C00  +
test eax eax +
mov edi eax +
mov [esp+13Ch+var_F0] eax +
jz loc_439863  +
mov eax [ebp+0A0h] +
mov [eax+218h] edi +
jmp loc_439735  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax+4] +
mov [esp+13Ch+var_13C] ebp +
shr al 2 +
and eax 1 +
mov [esp+13Ch+var_138] eax +
call sub_42D990  +
test eax eax +
jz loc_439857  +
mov ebx [ebp+0A0h] +
mov [esp+13Ch+var_C0] 0 +
mov esi [ebx+914h] +
test esi esi +
jz loc_43974F  +
mov eax [ebx+178h] +
mov [esp+13Ch+var_13C] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+13Ch+var_C0] eax +
jz loc_439857  +
mov eax [ebx+170h] +
mov edx [ebx+174h] +
mov esi [ebx+178h] +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_138] eax +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] ebp +
call sub_4060C0  +
test eax eax +
jnz loc_439847  +
mov eax [esp+13Ch+var_C0] +
mov [esp+13Ch+var_134] ebp +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] eax +
call sub_405EB0  +
cmp esi eax +
jnz loc_439847  +
mov ebx [ebp+0A0h] +
jmp loc_43974F  +
mov eax [esp+13Ch+var_5C] +
movzx edx byte ptr [esi+34h] +
mov [esp+13Ch+var_88] eax +
mov eax [esp+13Ch+var_54] +
test dl 2 +
mov [esp+13Ch+var_84] edx +
mov ecx eax +
mov [esp+13Ch+var_F4] eax +
mov eax [esp+13Ch+var_60] +
mov [esp+13Ch+var_34] eax +
jnz loc_43A628  +
mov [esp+13Ch+var_138] 40h +
mov [esp+13Ch+var_13C] ecx +
call strchr  +
mov edx [esp+13Ch+var_84] +
and edx 6 +
mov [esp+13Ch+var_B4] eax +
jnz loc_43B2C7  +
test eax eax +
jz loc_43C0D9  +
mov eax [esp+13Ch+var_B4] +
cmp byte ptr [eax+1] 40h +
jz loc_43BDC5  +
or byte ptr [esi+34h] 6 +
jmp loc_43A628  +
mov eax [esi+14h] +
mov [eax] edx +
jmp loc_43A290  +
xor eax eax +
mov ecx [esp+13Ch+var_54] +
xor esi esi +
mov word ptr [esp+13Ch+var_18] ax +
mov eax [esp+13Ch+var_F4] +
jmp loc_43A077  +
mov eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_13C] eax +
call free  +
xor eax eax +
jmp loc_439642  +
movzx eax byte ptr [esi+30h] +
jmp loc_43A775  +
mov edx [esi+18h] +
mov [esi+2Ch] edx +
jmp loc_43A736  +
mov ebx [esp+13Ch+var_108] +
mov [esp+13Ch+var_AC] 0 +
jmp loc_43A29E  +
mov [esp+13Ch+var_B4] 0 +
mov edx offset unk_490678 +
jmp loc_439FB7  +
mov eax [ebx] +
mov [esp+13Ch+var_13C] eax +
call near ptr dword_40F9D0  +
jmp loc_43A469  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_12C] ecx +
mov [esp+13Ch+var_130] esi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_13C] offset aBSInvalidVersi +
call off_476094  +
mov [esp+13Ch+var_13C] 11h +
call sub_40C770  +
jmp loc_43AA63  +
mov [esp+13Ch+var_F0] 0 +
mov [esp+13Ch+var_F4] 0 +
mov ecx [esp+13Ch+var_1C] +
test ecx ecx +
jz loc_43BDB1  +
mov [esp+13Ch+var_20] ecx +
mov eax [esp+13Ch+var_FC] +
mov edx [eax+0C4h] +
test edx edx +
jnz loc_43B0C2  +
jmp loc_43C09D  +
mov edx eax +
mov eax [edx] +
test eax eax +
jnz loc_43B0C0  +
mov [edx] ecx +
mov [esp+13Ch+var_13C] ebp +
call sub_4107F0  +
mov eax [esp+13Ch+var_F4] +
test eax eax +
jz loc_43B1C8  +
cmp byte ptr [eax] 0 +
jz loc_43B1C8  +
mov eax [ebp+0A0h] +
mov edi [esp+13Ch+var_F4] +
xor ecx ecx +
test byte ptr [esp+13Ch+var_E4] 0Bh +
mov edx [esp+13Ch+arg_4] +
setz cl  +
mov [eax+220h] edi +
mov eax ebp +
mov [esp+13Ch+var_AC] ecx +
mov [esp+13Ch+var_13C] ecx +
mov ecx edi +
call sub_438E30  +
test eax eax +
js loc_439640  +
jnz loc_4391ED  +
mov eax [ebp+0A0h] +
mov edi [esp+13Ch+var_F0] +
mov [eax+224h] edi +
mov ecx [ebp+0A0h] +
mov eax [ecx+910h] +
test eax eax +
jz loc_4396D2  +
lea eax [ecx+0F0h] +
mov [esp+13Ch+var_E4] eax +
jmp loc_4396D9  +
mov eax [ebx] +
mov [esp+13Ch+var_13C] eax +
call near ptr dword_40F9D0  +
mov edx [esp+13Ch+var_3C] +
mov [esp+13Ch+var_E8] ebp +
jmp loc_43A6B7  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+0DCh] +
mov [esp+13Ch+var_134] 1 +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] edi +
call eax  +
jmp loc_43A895  +
mov eax [esp+13Ch+var_F4] +
mov eax [eax+0A0h] +
lea ecx [eax+0F0h] +
mov [esp+13Ch+var_E8] ecx +
mov ecx [eax+910h] +
mov [esp+13Ch+var_F0] eax +
test ecx ecx +
jnz loc_439B4D  +
jmp loc_439B42  +
mov eax [ebp+0A0h] +
mov edi [eax+220h] +
test edi edi +
mov [esp+13Ch+var_F4] edi +
jz loc_43B1E5  +
cmp byte ptr [edi] 0 +
jnz loc_43B0ED  +
mov edi [ebp+0] +
mov [esp+13Ch+var_F4] edi +
jmp loc_43B0ED  +
mov edx [esi+2Ch] +
test edx edx +
jz loc_43A727  +
cmp eax edx +
jz loc_43A727  +
mov edi [esp+13Ch+var_50] +
test edi edi +
jnz loc_43A727  +
mov [esp+13Ch+var_128] eax +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_12C] edx +
mov [esp+13Ch+var_134] ebp +
mov [esp+13Ch+var_13C] offset aWarningSizeOfS +
mov [esp+13Ch+var_130] eax +
mov eax [esp+13Ch+var_3C] +
mov [esp+13Ch+var_138] eax +
call off_476094  +
mov eax [ebx+4] +
jmp loc_43A727  +
mov [esp+13Ch+var_C8] 0 +
jmp loc_439828  +
or eax 2 +
test al 8 +
mov [esi+33h] al +
jz loc_43A5D6  +
and eax 0FFFFFFF7h +
or eax 4 +
mov [esi+33h] al +
jmp loc_43A5D6  +
movzx edx word ptr [eax+18h] +
and dx 380h +
cmp dx 100h +
jz loc_43A56D  +
cmp dx 200h +
jz loc_43A56D  +
mov [esp+13Ch+var_5C] offset off_476188 +
mov dword ptr [ebx+10h] 0 +
jmp loc_439DC7  +
or byte ptr [esi+33h] 8 +
or byte ptr [edi+33h] 8 +
jmp loc_43AA8B  +
test byte ptr [ebp+29h] 8 +
mov edx 2 +
cmovnz ecx edx +
jmp loc_43A781  +
mov eax [esp+13Ch+var_B4] +
test eax eax +
jz loc_43A628  +
mov eax [ebp+4] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+1B0h] +
mov [esp+13Ch+var_7C] eax +
movzx eax byte ptr [eax+1ACh] +
mov byte ptr [esp+13Ch+var_78] al +
mov eax [ebp+28h] +
and byte ptr [esp+13Ch+var_78] 1 +
mov [esp+13Ch+var_80] eax +
mov eax [esp+13Ch+var_B4] +
sub eax [esp+13Ch+var_F4] +
shr [esp+13Ch+var_80] 5 +
and [esp+13Ch+var_80] 3FFFFh +
mov [esp+13Ch+var_84] eax +
add eax 1 +
mov [esp+13Ch+var_138] eax +
mov eax [edi+1Ch] +
mov [esp+13Ch+var_13C] eax +
call sub_410230  +
test eax eax +
mov edi eax +
jz loc_43AA63  +
mov edx [esp+13Ch+var_F4] +
mov eax [esp+13Ch+var_84] +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_134] eax +
call memcpy  +
mov eax [esp+13Ch+var_84] +
mov ecx edi +
mov edx [esp+13Ch+arg_4] +
mov byte ptr [edi+eax] 0 +
mov eax [esp+13Ch+var_88] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_18] eax +
lea eax [esp+13Ch+var_14] +
mov [esp+13Ch+var_110] eax +
lea eax [esp+13Ch+var_2C] +
mov [esp+13Ch+var_114] eax +
lea eax [esp+13Ch+var_30] +
mov [esp+13Ch+var_118] eax +
lea eax [esp+13Ch+var_1C] +
mov [esp+13Ch+var_11C] eax +
lea eax [esp+13Ch+var_28] +
mov [esp+13Ch+var_120] eax +
lea eax [esp+13Ch+var_3C] +
mov [esp+13Ch+var_12C] eax +
lea eax [esp+13Ch+var_24] +
mov [esp+13Ch+var_130] eax +
lea eax [esp+13Ch+var_34] +
mov [esp+13Ch+var_134] eax +
lea eax [esp+13Ch+var_18] +
mov [esp+13Ch+var_138] eax +
mov eax ebp +
mov [esp+13Ch+var_30] 0 +
mov [esp+13Ch+var_2C] 0 +
mov [esp+13Ch+var_14] 1 +
call sub_436920  +
test eax eax +
jz loc_43AA63  +
movzx eax byte ptr [esp+13Ch+var_78] +
mov [esp+13Ch+var_78] eax +
mov eax [esp+13Ch+var_80] +
shr eax 6 +
mov [esp+13Ch+var_80] eax +
mov eax [esp+13Ch+var_28] +
and [esp+13Ch+var_80] 1 +
test eax eax +
jnz loc_43B4FA  +
mov eax [esp+13Ch+var_1C] +
test eax eax +
jz loc_43BF42  +
mov eax [esp+13Ch+var_24] +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-6] +
mov edi [esp+13Ch+var_F8] +
cmp dl 1 +
ja loc_43B4A8  +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_43B48E  +
mov [esp+13Ch+var_F8] edi +
mov [esp+13Ch+var_24] eax +
movzx edx byte ptr [esi+33h] +
mov byte ptr [esi+0Ch] 6 +
mov [esi+14h] eax +
test dl 8 +
jz loc_43B4D1  +
and edx 0FFFFFFF7h +
mov [esi+33h] dl +
movzx edx byte ptr [eax+33h] +
or edx 4 +
mov [eax+33h] dl +
and dl 3 +
jnz loc_43C453  +
mov [esp+13Ch+var_24] esi +
mov eax esi +
movzx edx byte ptr [eax+0Ch] +
cmp dl 7 +
jnz loc_43B4F1  +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
mov [esp+13Ch+var_24] eax +
cmp dl 6 +
jz loc_43C0EB  +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_13C] eax +
call strlen  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_70] eax +
mov [esp+13Ch+var_138] eax +
mov eax [edi+1Ch] +
mov [esp+13Ch+var_13C] eax +
call sub_410230  +
test eax eax +
mov edi eax +
jz loc_43AA63  +
mov edx [esp+13Ch+var_84] +
mov ecx [esp+13Ch+var_F4] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_138] ecx +
call memcpy  +
mov edx [esp+13Ch+var_84] +
mov eax edi +
mov ecx [esp+13Ch+var_70] +
mov [esp+13Ch+var_74] edi +
add eax edx +
sub ecx edx +
mov edx [esp+13Ch+var_B4] +
mov [esp+13Ch+var_134] ecx +
mov [esp+13Ch+var_13C] eax +
add edx 1 +
mov [esp+13Ch+var_138] edx +
call memcpy  +
mov edi [esp+13Ch+var_88] +
mov eax ebp +
mov edx [esp+13Ch+arg_4] +
mov [esp+13Ch+var_124] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_18] edi +
lea edi [esp+13Ch+var_14] +
mov [esp+13Ch+var_110] edi +
lea edi [esp+13Ch+var_2C] +
mov [esp+13Ch+var_114] edi +
lea edi [esp+13Ch+var_30] +
mov [esp+13Ch+var_118] edi +
lea edi [esp+13Ch+var_1C] +
mov [esp+13Ch+var_11C] edi +
lea edi [esp+13Ch+var_28] +
mov [esp+13Ch+var_120] edi +
lea edi [esp+13Ch+var_3C] +
mov [esp+13Ch+var_12C] edi +
lea edi [esp+13Ch+var_24] +
mov [esp+13Ch+var_130] edi +
lea edi [esp+13Ch+var_34] +
mov [esp+13Ch+var_134] edi +
lea edi [esp+13Ch+var_18] +
mov [esp+13Ch+var_138] edi +
mov edi [esp+13Ch+var_74] +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_30] 0 +
mov [esp+13Ch+var_2C] 0 +
mov ecx edi +
call sub_436920  +
test eax eax +
jz loc_43AA63  +
mov ecx [esp+13Ch+var_28] +
test ecx ecx +
jnz loc_43A628  +
cmp [esp+13Ch+var_1C] 0 +
mov eax [esp+13Ch+var_24] +
jz loc_43C31D  +
movzx eax byte ptr [eax+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_43A628  +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] offset aBUnexpectedRed +
call off_476094  +
jmp loc_43A628  +
mov eax [esp+13Ch+arg_4] +
mov edi [ebp+4] +
mov eax [eax+30h] +
cmp [eax+4] edi +
jnz loc_4396C1  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+30h] 0 +
jnz loc_4396C1  +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_436420  +
test eax eax +
jnz loc_4396C1  +
xor eax eax +
jmp loc_439642  +
mov esi [esp+13Ch+var_FC] +
mov ecx [esp+13Ch+var_B8] +
mov ebx [esp+13Ch+var_A8] +
mov eax [esi] +
mov [esp+13Ch+var_13C] ecx +
mov edi ecx +
mov [esp+13Ch+var_134] ebx +
add edi ebx +
mov [esp+13Ch+var_138] eax +
call memcpy  +
mov ecx [esi+1Ch] +
mov eax [esi+50h] +
mov [esp+13Ch+var_9C] ecx +
mov ecx [esi+20h] +
mov [esp+13Ch+var_98] ecx +
mov ecx [esi] +
mov [esp+13Ch+var_94] ecx +
mov ecx [esi+0Ch] +
mov [esp+13Ch+var_90] ecx +
mov ecx [esi+10h] +
mov [esp+13Ch+var_8C] ecx +
mov ecx [esi+4Ch] +
mov [esp+13Ch+var_13C] eax +
mov [esp+13Ch+var_D8] ecx +
call sub_44E520  +
mov ecx [esi+0Ch] +
test ecx ecx +
mov [esp+13Ch+var_BC] eax +
jz loc_439CC5  +
xor ebx ebx +
mov [esp+13Ch+arg_0] ebp +
mov ebp edi +
mov edi ebx +
mov ebx esi +
mov eax [ebx] +
mov esi [eax+edi*4] +
test esi esi +
jz loc_43B7AB  +
mov eax [ebx+14h] +
jmp loc_43B776  +
mov esi [esi] +
test esi esi +
jz loc_43B7AB  +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] esi +
call memcpy  +
mov eax [ebx+14h] +
add ebp eax +
cmp byte ptr [esi+0Ch] 7 +
jnz loc_43B770  +
mov edx [esi+14h] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] edx +
call memcpy  +
mov eax [ebx+14h] +
add ebp eax +
jmp loc_43B770  +
add edi 1 +
cmp edi [ebx+0Ch] +
jb loc_43B75C  +
mov ebp [esp+13Ch+arg_0] +
jmp loc_439CC5  +
mov edx edi +
mov [esp+13Ch+var_F0] 0 +
mov [esp+13Ch+var_F4] 0 +
mov [esp+13Ch+var_13C] edx +
call free  +
jmp loc_43B097  +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] eax +
call sub_436840  +
test eax eax +
jz loc_43AA63  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_43ADBC  +
mov edx [esp+13Ch+var_C4] +
test edx edx +
jnz loc_43ADBC  +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jnz loc_43ADBC  +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_436840  +
test eax eax +
jnz loc_43ADBC  +
jmp loc_43AA63  +
xor eax eax +
jmp loc_4397B0  +
mov ebp [esp+13Ch+arg_0] +
mov eax [esp+13Ch+var_C8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_CC] +
test eax eax +
jz loc_43B8F9  +
mov ebx [esp+13Ch+var_D0] +
shl ebx 2 +
mov [esp+13Ch+var_13C] ebx +
call sub_40EFC0  +
test eax eax +
mov edi eax +
jz loc_439640  +
mov eax [ebp+0A0h] +
mov esi [eax+218h] +
lea eax [esi+ebx] +
cmp esi eax +
mov [esp+13Ch+var_108] eax +
jnb loc_43BBED  +
mov ecx edi +
mov [esp+13Ch+var_F4] 0 +
jmp loc_43B8B3  +
add esi 4 +
cmp [esp+13Ch+var_108] esi +
jbe loc_43BBF5  +
mov ebx [esi] +
test ebx ebx +
jz loc_43B8A6  +
cmp byte ptr [ebx+0Ch] 3 +
jnz loc_43B8A6  +
mov eax [esp+13Ch+var_104] +
movzx edx byte ptr [ebx+30h] +
mov [esp+13Ch+var_F8] ecx +
mov eax [eax+158h] +
mov [esp+13Ch+var_13C] edx +
call eax  +
mov ecx [esp+13Ch+var_F8] +
test eax eax +
jnz loc_43B8A6  +
mov [ecx] ebx +
add ecx 4 +
add [esp+13Ch+var_F4] 1 +
jmp loc_43B8A6  +
mov [esp+13Ch+var_13C] edi +
mov ebp [esp+13Ch+arg_0] +
call free  +
mov eax [esp+13Ch+var_104] +
mov eax [eax+7Ch] +
test eax eax +
jz loc_43B91C  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] edi +
call eax  +
test eax eax +
jz loc_439640  +
mov edi [esp+13Ch+var_100] +
test edi edi +
jnz loc_43BF2F  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_43C218  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax+4] 1 +
jnz loc_43BF2F  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jnz loc_4391ED  +
mov eax [esp+13Ch+arg_4] +
test byte ptr [eax+1] 8 +
jz loc_43BEC5  +
cmp [esp+13Ch+var_AC] 0 +
jz loc_4391ED  +
mov [esp+13Ch+var_138] 8 +
mov [esp+13Ch+var_13C] ebp +
call sub_407B20  +
test eax eax +
jz loc_439640  +
mov edi [esp+13Ch+var_FC] +
mov [eax+4] ebp +
mov edx [edi+0D0h] +
mov [eax] edx +
mov [edi+0D0h] eax +
mov eax 1 +
jmp loc_439253  +
lea edx [eax+64h] +
jmp loc_43AC78  +
lea edx [esp+13Ch+var_1C] +
jmp loc_43ABC8  +
mov edx [eax+218h] +
mov eax [esp+13Ch+var_D0] +
mov [esp+13Ch+var_138] 0 +
mov ebx [esp+13Ch+var_B8] +
mov esi [esp+13Ch+var_A8] +
mov [esp+13Ch+var_13C] edx +
shl eax 2 +
mov [esp+13Ch+var_134] eax +
call memset  +
mov eax [esp+13Ch+var_FC] +
add esi ebx +
mov ecx [esp+13Ch+var_94] +
mov edi [esp+13Ch+var_90] +
mov edx [esp+13Ch+var_8C] +
mov [eax] ecx +
mov [eax+0Ch] edi +
mov edi eax +
mov [eax+10h] edx +
mov eax [esp+13Ch+var_A8] +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_134] eax +
call memcpy  +
mov eax edi +
mov edi [esp+13Ch+var_9C] +
mov ecx [esp+13Ch+var_BC] +
mov [eax+1Ch] edi +
mov edi [esp+13Ch+var_98] +
mov [eax+20h] edi +
mov edi eax +
mov eax [eax+50h] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] eax +
call sub_44E4A0  +
mov eax [edi+0Ch] +
mov [esp+13Ch+var_100] 0 +
test eax eax +
jz loc_43BB69  +
mov [esp+13Ch+arg_0] ebp +
mov ebp [esp+13Ch+var_FC] +
mov eax [ebp+0] +
mov edi [esp+13Ch+var_100] +
mov ebx [eax+edi*4] +
test ebx ebx +
jnz loc_43BAE1  +
jmp loc_43BB50  +
mov edi [esp+13Ch+var_D8] +
cmp [eax+20h] edi +
jl loc_43BAA5  +
mov edx [eax+38h] +
cmp [esp+13Ch+var_BC] edx +
ja loc_43BB15  +
xor edi edi +
cmp byte ptr [eax+0Ch] 5 +
mov [esp+13Ch+var_108] 0 +
jz loc_43BB07  +
mov eax [ebp+14h] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] ebx +
mov [esp+13Ch+var_134] eax +
call memcpy  +
mov edx [ebp+14h] +
mov ecx ebx +
movzx eax byte ptr [ebx+0Ch] +
add esi edx +
cmp al 7 +
jz loc_43BB31  +
cmp al 5 +
jz loc_43BAF0  +
mov ebx [ebx] +
test ebx ebx +
jz loc_43BB50  +
cmp byte ptr [ebx+0Ch] 7 +
mov eax ebx +
jnz loc_43BA90  +
mov eax [ebx+14h] +
jmp loc_43BA90  +
cmp [ecx+18h] edi +
jnb loc_43BAF8  +
mov [ecx+18h] edi +
mov eax [ecx+14h] +
mov edi [esp+13Ch+var_108] +
cmp [eax] edi +
jnb loc_43BADB  +
mov [eax] edi +
jmp loc_43BADB  +
mov edi [eax+18h] +
mov eax [eax+14h] +
mov eax [eax] +
mov [esp+13Ch+var_108] eax +
jmp loc_43BAB5  +
mov ecx [ebp+50h] +
mov [esp+13Ch+var_138] edx +
mov [esp+13Ch+var_108] eax +
mov [esp+13Ch+var_13C] ecx +
call sub_44E3B0  +
mov eax [esp+13Ch+var_108] +
jmp loc_43BAA5  +
mov eax [ebx+14h] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_134] edx +
mov [esp+13Ch+var_13C] eax +
call memcpy  +
mov ecx [ebx+14h] +
add esi [ebp+14h] +
movzx eax byte ptr [ecx+0Ch] +
jmp loc_43BAD7  +
add [esp+13Ch+var_100] 1 +
mov eax [esp+13Ch+var_100] +
cmp eax [ebp+0Ch] +
jb loc_43BA76  +
mov ebp [esp+13Ch+arg_0] +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+80h] +
mov [esp+13Ch+var_134] 1 +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_C0] 0 +
test eax eax +
jz loc_43AA63  +
mov eax [esp+13Ch+var_B8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax [esp+13Ch+var_FC] +
mov edi [esp+13Ch+var_A4] +
mov eax [eax+8] +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_13C] eax +
call sub_45C5E0  +
cmp [esp+13Ch+var_C8] 0 +
jz loc_4391ED  +
mov eax [esp+13Ch+var_C8] +
mov [esp+13Ch+var_13C] eax +
call free  +
mov eax 1 +
jmp loc_439253  +
mov [esp+13Ch+var_F4] 0 +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_130] offset sub_431D10 +
mov [esp+13Ch+var_134] 4 +
mov [esp+13Ch+var_13C] edi +
mov [esp+13Ch+var_138] eax +
call qsort  +
mov [esp+13Ch+arg_0] ebp +
mov eax [esp+13Ch+var_CC] +
mov ecx [eax+3Ch] +
mov dword ptr [eax+3Ch] 0 +
movzx eax byte ptr [eax+0Ch] +
mov [esp+13Ch+var_108] ecx +
mov byte ptr [esp+13Ch+var_F8] al +
sub eax 3 +
cmp al 3 +
ja loc_43BCE1  +
mov eax [esp+13Ch+var_CC] +
xor ecx ecx +
mov ebp [eax+14h] +
mov esi [eax+18h] +
mov eax [esp+13Ch+var_F4] +
test eax eax +
mov edx eax +
jnz loc_43BC69  +
jmp loc_43BCC8  +
jz loc_43BC80  +
lea ecx [eax+1] +
cmp ecx edx +
jz loc_43BCC8  +
lea eax [edx+ecx] +
shr eax 1 +
mov ebx [edi+eax*4] +
cmp esi [ebx+18h] +
jns loc_43BC60  +
mov edx eax +
jmp loc_43BC65  +
mov ebx [ebx+14h] +
mov ebx [ebx+4] +
cmp [ebp+4] ebx +
js loc_43BC76  +
jnz loc_43BC62  +
jmp loc_43BC9D  +
mov ebx [edi+eax*4] +
cmp ebp [ebx+14h] +
jnz loc_43BCA4  +
cmp esi [ebx+18h] +
jnz loc_43BCA4  +
add eax 1 +
cmp eax edx +
jnz loc_43BC90  +
sub eax 1 +
sub ecx 1 +
mov edx [esp+13Ch+var_CC] +
jmp loc_43BCC4  +
mov ebx [edi+eax*4] +
cmp ebp [ebx+14h] +
jnz loc_43BCC8  +
cmp esi [ebx+18h] +
jnz loc_43BCC8  +
sub eax 1 +
cmp edx ebx +
jnz loc_43BCFA  +
cmp eax ecx +
jnz loc_43BCB0  +
mov ebp [esp+13Ch+var_108] +
test ebp ebp +
jz loc_43B8EA  +
mov eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_CC] eax +
jmp loc_43BC1C  +
mov [esp+13Ch+var_138] 12D6h +
mov [esp+13Ch+var_13C] offset a____Binutils_3 +
call sub_40C6C0  +
jmp loc_43BC41  +
mov eax [esp+13Ch+var_CC] +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
mov [eax+3Ch] ebx +
jz loc_43BD24  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jnz loc_43BCC8  +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_13C] eax +
call sub_436840  +
test eax eax +
jz loc_43BD51  +
mov eax [ebx+20h] +
cmp eax 0FFFFFFFFh +
jz loc_43BCC8  +
mov eax [esp+13Ch+var_CC] +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jnz loc_43BCC8  +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_436840  +
test eax eax +
jnz loc_43BCC8  +
mov [esp+13Ch+var_13C] edi +
call free  +
xor eax eax +
jmp loc_439253  +
mov edi [esi+14h] +
mov dl 1 +
movzx ecx byte ptr [esp+13Ch+var_F4] +
mov [esp+13Ch+var_13C] offset aWarningAlign_0 +
mov [esp+13Ch+var_B4] edi +
mov edi edx +
shl edi cl +
mov ecx [esp+13Ch+var_54] +
mov [esp+13Ch+var_128] edi +
mov edi [esp+13Ch+var_B4] +
mov [esp+13Ch+var_12C] ecx +
mov ecx eax +
mov eax [esp+13Ch+var_E8] +
shl edx cl +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] eax +
call off_476094  +
jmp loc_43A706  +
mov ecx [esp+13Ch+var_20] +
test ecx ecx +
jz loc_43B0CA  +
jmp loc_43B0AD  +
movzx eax byte ptr [esi+34h] +
and eax 0FFFFFFF9h +
or eax 4 +
mov [esi+34h] al +
jmp loc_43B2D6  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_12C] ecx +
mov [esp+13Ch+var_E8] ecx +
mov [esp+13Ch+var_130] edx +
mov [esp+13Ch+var_134] eax +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_13C] offset aWarningTypeOfS +
call off_476094  +
mov ecx [esp+13Ch+var_E8] +
jmp loc_43A79B  +
mov ecx esi +
mov edi [esp+13Ch+var_E0] +
movzx edx byte ptr [ecx+0Ch] +
mov ebp [esp+13Ch+var_DC] +
mov esi [esp+13Ch+var_E8] +
mov eax edx +
shr al 4 +
cmp al 9 +
ja loc_43BE2B  +
sub al 1 +
jnz loc_439C49  +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_F0] ecx +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+13Ch+var_F4] eax +
mov eax [eax+158h] +
mov ecx eax +
mov eax edx +
and eax 0Fh +
mov [esp+13Ch+var_13C] eax +
call ecx  +
test eax eax +
jnz loc_439C49  +
mov ecx [esp+13Ch+var_F0] +
cmp dword ptr [ecx+10h] 0 +
jz loc_439C49  +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_F4] ecx +
mov eax [eax+144h] +
mov [esp+13Ch+var_13C] ecx +
call eax  +
test eax eax +
jnz loc_439C49  +
mov ecx [esp+13Ch+var_F4] +
mov eax [ecx+10h] +
mov ecx [esp+13Ch+var_E4] +
add eax 100h +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_F4] eax +
call free  +
cmp [esp+13Ch+var_F4] 0F0h +
ja loc_4394EC  +
jmp loc_439488  +
mov eax [ebp+0A0h] +
mov edi [eax+220h] +
xor eax eax +
jmp loc_43A927  +
mov [esp+13Ch+var_138] offset a_stabstr_0 +
mov [esp+13Ch+var_13C] ebp +
call sub_410840  +
test eax eax +
mov ebx eax +
jz loc_43BF2F  +
mov eax [esp+13Ch+var_FC] +
mov [esp+13Ch+var_14] 0 +
mov esi [ebp+64h] +
sub eax 0FFFFFF80h +
mov [esp+13Ch+var_108] eax +
jmp loc_43BF2B  +
mov edi [esi] +
mov [esp+13Ch+var_134] 5 +
mov [esp+13Ch+var_138] offset a_stab_0 +
mov [esp+13Ch+var_13C] edi +
call strncmp  +
test eax eax +
jnz loc_43BF28  +
movzx eax byte ptr [edi+5] +
test al al +
jz loc_43C485  +
cmp al 2Eh +
jz loc_43C473  +
mov esi [esi+0Ch] +
test esi esi +
jnz loc_43BEF6  +
mov eax [esp+13Ch+var_FC] +
cmp dword ptr [eax+28h] 1 +
jz loc_43B966  +
jmp loc_4391ED  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
mov eax [esp+13Ch+var_24] +
jz loc_43B4DA  +
mov [esp+13Ch+var_20] eax +
lea eax [esp+13Ch+var_20] +
mov [esp+13Ch+var_118] eax +
mov eax [esp+13Ch+var_78] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] offset off_4762D8 +
mov [esp+13Ch+var_11C] eax +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_130] 2000h +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_124] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_414CB0  +
test eax eax +
jz loc_43AA63  +
mov eax [esp+13Ch+var_20] +
mov [esp+13Ch+var_24] eax +
jmp loc_43B4DA  +
mov eax [esp+13Ch+var_E0] +
sub eax ebx +
sar eax 2 +
imul eax eax +
lea eax ds:4[eax*4] +
mov [esp+13Ch+var_13C] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+13Ch+var_C8] eax +
jnz loc_43A871  +
jmp loc_43AA63  +
mov eax [ebx+18h] +
cmp [edi+18h] eax +
jnz loc_43A42A  +
mov eax [ebx+14h] +
cmp [edi+14h] eax +
jnz loc_43A42A  +
mov eax [esp+13Ch+var_104] +
mov ecx [esp+13Ch+arg_4] +
mov eax [eax+0DCh] +
mov [esp+13Ch+var_13C] ecx +
mov [esp+13Ch+var_134] 1 +
mov [esp+13Ch+var_138] edi +
call eax  +
mov eax [esp+13Ch+var_104] +
mov ecx [esp+13Ch+arg_4] +
mov [edi+14h] ebx +
mov byte ptr [edi+0Ch] 6 +
mov eax [eax+0D8h] +
mov [esp+13Ch+var_134] edi +
mov [esp+13Ch+var_138] ebx +
mov [esp+13Ch+var_13C] ecx +
call eax  +
mov eax [esp+13Ch+arg_0] +
mov eax [eax+0A0h] +
mov eax [eax+218h] +
test eax eax +
jz loc_43A42A  +
xor ecx ecx +
cmp ecx [esp+13Ch+var_D0] +
jz loc_43A42A  +
mov edx eax +
add eax 4 +
cmp edi [eax-4] +
jz loc_43C194  +
add ecx 1 +
jmp loc_43C080  +
lea edx [eax+0C4h] +
jmp loc_43B0C8  +
mov [esp+13Ch+var_134] 101401h +
mov [esp+13Ch+var_138] offset a_tcommon +
mov [esp+13Ch+var_13C] ebp +
call sub_410D00  +
test eax eax +
jnz loc_43A4C8  +
jmp loc_43AA63  +
lea edx [esp+13Ch+var_20] +
jmp loc_439A9E  +
movzx eax byte ptr [esi+34h] +
and eax 0FFFFFFF9h +
or eax 2 +
mov [esi+34h] al +
jmp loc_43A628  +
mov edi [eax+14h] +
mov ecx edi +
mov edi [esp+13Ch+var_7C] +
mov edx [edi+0D8h] +
mov edi ecx +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] eax +
call edx  +
movzx edx byte ptr [edi+35h] +
mov eax [esp+13Ch+var_24] +
mov [esp+13Ch+var_74] edi +
mov ecx edx +
and edx 0FFFFFFFEh +
or cl [eax+35h] +
mov edi ecx +
and edi 1 +
or edx edi +
mov edi [esp+13Ch+var_74] +
mov [edi+35h] dl +
movzx edx byte ptr [eax+34h] +
mov ecx edx +
and edx 7Fh +
or ecx [edi+34h] +
and ecx 0FFFFFF80h +
or edx ecx +
mov [eax+34h] dl +
cmp [esp+13Ch+var_F8] 0 +
jnz loc_43C1AD  +
cmp [esp+13Ch+var_80] 0 +
jnz loc_43C19B  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_F8] 1 +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 1 +
ja loc_43B4FA  +
test byte ptr [eax+33h] 0Ch +
setnz al  +
movzx eax al +
mov [esp+13Ch+var_F8] eax +
jmp loc_43B4FA  +
mov [edx] ebx +
jmp loc_43A42A  +
movzx eax byte ptr [eax+33h] +
mov edi eax +
and edi 1 +
mov [esp+13Ch+var_F8] edi +
jmp loc_43B4FA  +
mov [esp+13Ch+var_F8] 1 +
jmp loc_43B4FA  +
mov eax [esp+13Ch+var_54] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] offset aBUndefinedRefe +
mov [esp+13Ch+var_134] eax +
call off_476094  +
mov [esp+13Ch+var_13C] 0Bh +
call sub_40C770  +
jmp loc_43AA63  +
mov [esp+13Ch+var_D4] 0 +
mov [esp+13Ch+var_C0] 0 +
jmp loc_439837  +
mov [esp+13Ch+var_134] offset aElf_link_add_o +
mov [esp+13Ch+var_138] 0E2Ah +
mov [esp+13Ch+var_13C] offset a____Binutils_3 +
call sub_40C6F0  +
mov eax [esp+13Ch+var_104] +
cmp dword ptr [eax+78h] 0 +
jz loc_43B936  +
mov edi [esp+13Ch+var_FC] +
mov eax [ebp+0A0h] +
mov edi [edi+2Ch] +
cmp [eax+920h] edi +
jnz loc_43B936  +
mov edi [esp+13Ch+arg_4] +
mov eax [esp+13Ch+var_104] +
mov edx [edi+30h] +
mov eax [eax+74h] +
mov ecx [edx+4] +
mov edx [ebp+4] +
mov [esp+13Ch+var_138] ecx +
mov [esp+13Ch+var_13C] edx +
call eax  +
test eax eax +
jz loc_43B936  +
mov ebx [ebp+64h] +
jmp loc_43C2AB  +
mov eax [esp+13Ch+var_104] +
mov edi [esp+13Ch+arg_4] +
mov eax [eax+78h] +
mov [esp+13Ch+var_138] edi +
mov [esp+13Ch+var_130] esi +
mov [esp+13Ch+var_134] ebx +
mov [esp+13Ch+var_13C] ebp +
call eax  +
mov edx [ebx+8Ch] +
cmp esi [edx+68h] +
mov edi eax +
jz loc_43C2A0  +
mov [esp+13Ch+var_13C] esi +
call free  +
test edi edi +
jz loc_439640  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_43B936  +
mov eax [ebx+14h] +
test al 4 +
jz loc_43C2A8  +
cmp dword ptr [ebx+4Ch] 0 +
jz loc_43C2A8  +
mov edi [esp+13Ch+arg_4] +
test byte ptr [edi+1] 8 +
jz loc_43C2D2  +
test ah 20h +
jnz loc_43C2A8  +
cmp dword ptr [ebx+3Ch] offset off_476230 +
jz loc_43C2A8  +
mov eax [esp+13Ch+arg_4] +
movzx eax byte ptr [eax+2] +
mov [esp+13Ch+var_130] 0 +
mov [esp+13Ch+var_134] 0 +
mov [esp+13Ch+var_138] ebx +
shr al 6 +
and eax 1 +
mov [esp+13Ch+var_12C] eax +
mov [esp+13Ch+var_13C] ebp +
call sub_438410  +
test eax eax +
mov esi eax +
jnz loc_43C26C  +
xor eax eax +
jmp loc_439642  +
mov [esp+13Ch+var_20] eax +
lea eax [esp+13Ch+var_20] +
mov [esp+13Ch+var_118] eax +
mov eax [esp+13Ch+var_78] +
mov [esp+13Ch+var_120] 0 +
mov [esp+13Ch+var_128] 0 +
mov [esp+13Ch+var_12C] offset off_4762D8 +
mov [esp+13Ch+var_11C] eax +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_130] 2000h +
mov [esp+13Ch+var_138] ebp +
mov [esp+13Ch+var_124] eax +
mov eax [esp+13Ch+var_74] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_414CB0  +
test eax eax +
jz loc_43AA63  +
mov eax [esp+13Ch+var_20] +
cmp byte ptr [eax+0Ch] 6 +
mov [esp+13Ch+var_24] eax +
jnz loc_43A628  +
mov edi [esp+13Ch+var_7C] +
mov edx [edi+0D8h] +
mov [esp+13Ch+var_134] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_138] esi +
mov [esp+13Ch+var_13C] eax +
call edx  +
mov eax [esp+13Ch+var_24] +
movzx edx byte ptr [esi+35h] +
mov ecx edx +
and edx 0FFFFFFFEh +
or cl [eax+35h] +
and ecx 1 +
or edx ecx +
mov [esi+35h] dl +
movzx edx byte ptr [eax+34h] +
mov ecx edx +
and edx 7Fh +
or ecx [esi+34h] +
and ecx 0FFFFFF80h +
or edx ecx +
mov [eax+34h] dl +
cmp [esp+13Ch+var_F8] 0 +
jnz loc_43C446  +
cmp [esp+13Ch+var_80] 0 +
jnz loc_43C434  +
mov edi [esp+13Ch+arg_4] +
mov [esp+13Ch+var_F8] 1 +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 1 +
ja loc_43A628  +
movzx eax byte ptr [eax+33h] +
shr al 2 +
mov edi eax +
and edi 1 +
mov [esp+13Ch+var_F8] edi +
jmp loc_43A628  +
movzx eax byte ptr [eax+33h] +
mov edi eax +
and edi 1 +
mov [esp+13Ch+var_F8] edi +
jmp loc_43A628  +
mov [esp+13Ch+var_F8] 1 +
jmp loc_43A628  +
mov [esp+13Ch+var_138] eax +
mov eax [esp+13Ch+arg_4] +
mov [esp+13Ch+var_13C] eax +
call sub_436840  +
test eax eax +
jnz loc_43B4D1  +
jmp loc_43AA63  +
movzx eax byte ptr [edi+6] +
test ds:byte_495EE0[eax+eax] 4 +
jz loc_43BF28  +
test byte ptr [esi+16h] 80h +
jnz loc_43BF28  +
cmp dword ptr [esi+3Ch] offset off_476230 +
jz loc_43BF28  +
mov edi [esi+8Ch] +
lea eax [esp+13Ch+var_14] +
mov [esp+13Ch+var_128] eax +
mov [esp+13Ch+var_130] ebx +
mov [esp+13Ch+var_134] esi +
lea eax [edi+88h] +
mov [esp+13Ch+var_12C] eax +
mov eax [esp+13Ch+var_108] +
mov [esp+13Ch+var_13C] ebp +
mov [esp+13Ch+var_138] eax +
call sub_450E40  +
test eax eax +
jz loc_439640  +
cmp dword ptr [edi+88h] 0 +
jz loc_43BF28  +
movzx eax word ptr [esi+18h] +
and ax 0FC7Fh +
or al 80h +
mov [esi+18h] ax +
jmp loc_43BF28  +
***
push ebx  +
mov edx [esp+8] +
xor eax eax +
test byte ptr [edx+34h] 8 +
jnz loc_43C526  +
movzx ecx byte ptr [edx+0Ch] +
lea ebx [ecx-1] +
cmp bl 1 +
jbe loc_43C526  +
sub ecx 3 +
cmp cl 1 +
jbe loc_43C528  +
mov eax 1 +
pop ebx  +
retn   +
***
mov edx [edx+14h] +
mov edx [edx+3Ch] +
test edx edx +
jnz loc_43C521  +
jmp loc_43C526  +
***
mov eax [esp+18h+arg_0] +
mov ebx [eax+34h] +
test ebx ebx +
jnz loc_43C55B  +
jmp loc_43C580  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_43C580  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_43C551  +
mov [esp+18h+var_14] offset off_476230 +
mov [esp+18h+var_18] ebx +
call sub_42BAC0  +
test eax eax +
jnz loc_43C551  +
add esp 18h +
pop ebx  +
retn   +
add esp 18h +
mov eax 1 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 40h +
mov esi [esp+58h] +
mov ebx [esp+54h] +
test esi esi +
jz loc_43C608  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] esi +
mov eax [ebx+1Ch] +
mov [esp] eax +
call sub_414050  +
test eax eax +
jz loc_43C5D9  +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
jbe loc_43C610  +
mov edx [ebx+10h] +
test edx edx +
jnz loc_43C5E7  +
mov edx [esp+5Ch] +
mov [ebx+10h] edx +
test eax eax +
jz loc_43C6E8  +
movzx eax byte ptr [eax+0Ch] +
mov edi 1 +
sub eax 1 +
cmp al 1 +
jbe loc_43C661  +
add esp 40h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [ebx+10h] +
xor eax eax +
jmp loc_43C5DC  +
***
test byte ptr [eax+33h] 2 +
jz loc_43C5D9  +
cmp byte ptr [eax+30h] 1 +
ja loc_43C5D9  +
mov ecx [ebx+10h] +
mov byte ptr [eax+30h] 1 +
test ecx ecx +
jnz loc_43C6FE  +
cmp dword ptr [eax+14h] offset off_476230 +
jz loc_43C727  +
mov [esp+2Ch] eax +
mov eax [esp+50h] +
mov [esp+8] esi +
mov dword ptr [esp] offset aBSNotAbsolute +
mov [esp+4] eax +
call off_476094  +
mov edx [ebx+10h] +
mov eax [esp+2Ch] +
jmp loc_43C5DC  +
***
lea eax [esp+3Ch] +
mov [esp+24h] eax +
mov eax [esp+50h] +
mov dword ptr [esp+3Ch] 0 +
mov eax [eax+4] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
and eax 1 +
mov [esp+20h] eax +
mov edx [ebx+10h] +
xor eax eax +
test edx edx +
cmovns eax [ebx+10h] +
mov dword ptr [esp+10h] offset off_476230 +
mov dword ptr [esp+0Ch] 2 +
mov [esp+14h] eax +
mov eax [esp+50h] +
mov [esp+8] esi +
mov [esp] ebx +
mov [esp+4] eax +
call sub_414CB0  +
test eax eax +
jz loc_43C6F6  +
mov eax [esp+3Ch] +
or byte ptr [eax+33h] 2 +
mov byte ptr [eax+30h] 1 +
add esp 40h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
add esp 40h +
mov edi 1 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
xor di di +
jmp loc_43C5FF  +
***
mov [esp+2Ch] eax +
mov eax [esp+50h] +
mov [esp+8] esi +
mov dword ptr [esp] offset aBStackSizeSpec +
mov [esp+4] eax +
call off_476094  +
mov edx [ebx+10h] +
mov eax [esp+2Ch] +
jmp loc_43C5DC  +
***
mov edx [eax+18h] +
mov [ebx+10h] edx +
jmp loc_43C5DC  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0E0h] +
mov edi [esp+0DCh] +
mov dword ptr [eax] 0 +
mov eax [edi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_43C777  +
add esp 0ACh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+0C0h] +
mov edx [ecx+4] +
mov esi [edx+1B0h] +
mov edx [eax+44h] +
mov [eax+3Ch] edx +
mov edx [eax+48h] +
mov [eax+40h] edx +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jz loc_43CFF0  +
mov eax [esi+88h] +
test eax eax +
jz loc_43C7C3  +
mov ebx [esp+0C0h] +
mov [esp+4] edi +
mov [esp] ebx +
call eax  +
test eax eax +
jz loc_43CD35  +
movzx eax byte ptr [edi+5] +
test al 2 +
jnz loc_43CD42  +
test al 4 +
jz loc_43CF30  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax+34h] 6 +
mov eax [edi+1Ch] +
mov ebx [eax+38h] +
test ebx ebx +
mov [esp+30h] ebx +
jz loc_43CD61  +
mov eax [eax+30h] +
mov ebx 0FFFFFFFFh +
test eax eax +
jnz loc_43CD75  +
mov [esp] edi +
call sub_447840  +
test eax eax +
jz loc_43CD35  +
mov eax [esi+8Ch] +
test eax eax +
jz loc_43C845  +
mov ecx [esp+0C0h] +
mov [esp+4] edi +
mov [esp] ecx +
call eax  +
test eax eax +
jz loc_43CD35  +
mov eax [edi+1Ch] +
mov eax [eax+30h] +
test eax eax +
jz loc_43C767  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_gnu_version_d +
mov [esp] eax +
call sub_410920  +
test eax eax +
mov ebp eax +
jz loc_43D7B7  +
mov esi [edi+7Ch] +
test esi esi +
jz loc_43D780  +
mov eax [esi+8] +
test eax eax +
jnz loc_43C88D  +
mov esi [esi] +
test esi esi +
jz loc_43D780  +
test byte ptr [edi] 20h +
mov edx 1Ch +
mov dword ptr [esp+3Ch] 1 +
jnz loc_43D335  +
mov [esp+34h] ebx +
mov ebx [esp+3Ch] +
mov ecx esi +
lea esi [esi+0] +
mov eax [ecx+8] +
test eax eax +
jz loc_43C8CD  +
mov eax [ecx+2Ch] +
add edx 1Ch +
add ebx 1 +
test eax eax +
jz loc_43C8CD  +
mov eax [eax] +
add edx 8 +
test eax eax +
jnz loc_43C8C4  +
mov ecx [ecx] +
test ecx ecx +
jnz loc_43C8B0  +
mov [esp+3Ch] ebx +
mov ebx [esp+34h] +
mov eax [esp+0C0h] +
mov [ebp+24h] edx +
mov [esp+4] edx +
mov [esp] eax +
call sub_407B20  +
test eax eax +
mov edx eax +
mov [ebp+6Ch] eax +
jz loc_43D791  +
mov eax 1 +
mov ebp 1 +
test byte ptr [edi] 20h +
mov [esp+7Ah] ax +
mov eax 1 +
mov [esp+7Ch] ax +
mov eax 1 +
mov [esp+78h] bp +
mov [esp+7Eh] ax +
jz loc_43D34F  +
mov dword ptr [esp+84h] 28h +
mov dword ptr [esp+88h] 14h +
cmp ebx 0FFFFFFFFh +
mov [esp+34h] edx +
jz loc_43D3F1  +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_44E340  +
mov eax [esp+0C4h] +
mov [esp] eax +
call near ptr dword_423E60  +
mov edx [esp+34h] +
mov [esp+68h] ebx +
mov [esp+80h] eax +
lea eax [esp+78h] +
mov [esp+38h] eax +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] edx +
mov [esp+34h] edx +
mov dword ptr [esp+6Ch] 0 +
mov [esp] eax +
call sub_423B00  +
mov edx [esp+34h] +
test byte ptr [edi] 20h +
lea ebx [edx+14h] +
jz loc_43CAA9  +
mov ecx [esp+30h] +
lea eax [esp+5Ch] +
mov [esp+24h] eax +
mov dword ptr [esp+5Ch] 0 +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1ACh] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
and eax 1 +
mov [esp+20h] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+10h] offset off_476230 +
mov dword ptr [esp+0Ch] 2 +
mov [esp+4] ecx +
mov [esp+8] eax +
mov [esp] edi +
call sub_414CB0  +
test eax eax +
jz loc_43CD35  +
mov eax [esp+5Ch] +
and byte ptr [eax+34h] 0FEh +
or byte ptr [eax+33h] 2 +
mov byte ptr [eax+30h] 1 +
mov dword ptr [eax+40h] 0 +
mov [esp+4] eax +
mov [esp] edi +
call sub_436840  +
test eax eax +
jz loc_43CD35  +
xor edx edx +
cmp esi 1 +
sbb eax eax +
mov ecx 2 +
not eax  +
and eax 1Ch +
mov [esp+88h] eax +
mov eax [esp+38h] +
mov [esp+8] ebx +
mov [esp+7Ah] dx +
mov [esp+7Ch] cx +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov dword ptr [esp+84h] 14h +
mov [esp] eax +
call sub_423B00  +
mov edx [esp+34h] +
lea ebx [edx+28h] +
lea eax [esp+68h] +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] ebx +
add ebx 8 +
mov [esp] eax +
call sub_423BF0  +
test esi esi +
jz loc_43D01F  +
nop   +
mov eax [esi+8] +
test eax eax +
jz loc_43D015  +
mov eax [esi+2Ch] +
xor edx edx +
test eax eax +
jz loc_43CAED  +
mov eax [eax] +
add edx 1 +
test eax eax +
jnz loc_43CAE4  +
mov [esp+34h] edx +
mov edx [esp+30h] +
lea ecx [esp+5Ch] +
mov eax [esi+4] +
mov [esp+24h] ecx +
mov dword ptr [esp+5Ch] 0 +
mov ecx [edx+4] +
mov ecx [ecx+1B0h] +
movzx ecx byte ptr [ecx+1ACh] +
mov dword ptr [esp+1Ch] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+14h] 0 +
and ecx 1 +
mov [esp+20h] ecx +
mov dword ptr [esp+10h] offset off_476230 +
mov dword ptr [esp+0Ch] 2 +
mov [esp+8] eax +
mov [esp+4] edx +
mov [esp] edi +
call sub_414CB0  +
test eax eax +
jz loc_43CD35  +
mov ebp [esp+5Ch] +
and byte ptr [ebp+34h] 0FEh +
or byte ptr [ebp+33h] 2 +
mov byte ptr [ebp+30h] 1 +
mov [ebp+40h] esi +
mov [esp+4] ebp +
mov [esp] edi +
call sub_436840  +
test eax eax +
jz loc_43CD35  +
mov eax 1 +
mov edx [esp+34h] +
mov [esp+78h] ax +
xor eax eax +
mov [esp+7Ah] ax +
mov eax [esi+0Ch] +
test eax eax +
jz loc_43D310  +
movzx eax byte ptr [edi] +
mov [esp+34h] edx +
and eax 20h +
cmp al 1 +
sbb eax eax +
add eax 2 +
add ax [esi+8] +
mov [esp+7Ch] ax +
lea eax [edx+1] +
mov [esp+7Eh] ax +
mov eax [esi+4] +
mov [esp] eax +
call near ptr dword_423E60  +
mov dword ptr [esp+84h] 14h +
mov dword ptr [esp+88h] 0 +
mov [esp+80h] eax +
mov eax [esi] +
test eax eax +
jz loc_43CC34  +
mov edx [eax+8] +
test edx edx +
mov edx [esp+34h] +
jnz loc_43D2E4  +
mov eax [eax] +
test eax eax +
jz loc_43CC34  +
mov dword ptr [esp+4] 1877h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6C0  +
mov eax [esi] +
test eax eax +
jz loc_43CC34  +
mov eax [eax+8] +
mov edx [esp+34h] +
test eax eax +
jnz loc_43D2E4  +
mov eax [esp+38h] +
mov [esp+8] ebx +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp] eax +
call sub_423B00  +
mov ecx [edi+1Ch] +
lea edx [ebx+14h] +
mov eax [ebp+38h] +
mov [esp+34h] edx +
mov ecx [ecx+50h] +
mov [esp+4] eax +
mov [esp+68h] eax +
mov [esp] ecx +
call sub_44E340  +
mov ebp [esi+2Ch] +
mov dword ptr [esp+6Ch] 0 +
mov edx [esp+34h] +
test ebp ebp +
jz loc_43CC8A  +
mov dword ptr [esp+6Ch] 8 +
mov eax [esp+68h] +
add ebx 1Ch +
mov [esi+30h] eax +
lea eax [esp+68h] +
mov [esp+4] eax +
mov eax [esp+0C0h] +
mov [esp+8] edx +
mov [esp] eax +
call sub_423BF0  +
mov ebp [esi+2Ch] +
test ebp ebp +
jz loc_43D015  +
mov [esp+34h] esi +
mov esi ebp +
mov ebp [esp+0C0h] +
jmp loc_43CD18  +
mov ecx [edi+1Ch] +
mov eax [eax+30h] +
mov ecx [ecx+50h] +
mov [esp+4] eax +
mov [esp+68h] eax +
mov [esp] ecx +
call sub_44E340  +
cmp dword ptr [esi] 1 +
mov [esp+8] ebx +
mov [esp] ebp +
sbb eax eax +
add ebx 8 +
not eax  +
and eax 8 +
mov [esp+6Ch] eax +
lea eax [esp+68h] +
mov [esp+4] eax +
call sub_423BF0  +
mov esi [esi] +
test esi esi +
jz loc_43D011  +
mov eax [esi+4] +
test eax eax +
jnz loc_43CCD0  +
mov dword ptr [esp+68h] 0 +
jmp loc_43CCE9  +
***
mov dword ptr [esp] 11h +
call sub_40C770  +
xor eax eax +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov dword ptr [eax+34h] 7 +
jmp loc_43C7F1  +
***
mov [esp] edi +
call sub_447840  +
test eax eax +
jnz loc_43C767  +
xor eax eax +
jmp loc_43CD37  +
***
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_interp +
mov [esp] eax +
call sub_410920  +
mov ebx [esp+0E0h] +
test eax eax +
mov [ebx] eax +
jz loc_43D393  +
mov eax [esp+0C4h] +
test eax eax +
jz loc_43D007  +
mov eax [edi+1Ch] +
mov ebx [esp+0C4h] +
mov eax [eax+50h] +
mov [esp+4] ebx +
mov dword ptr [esp+8] 1 +
mov [esp] eax +
call sub_44E260  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_43CD35  +
mov [esp+8] eax +
mov dword ptr [esp+4] 0Eh +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
test byte ptr [edi] 4 +
jnz loc_43D36A  +
mov eax [esp+0C8h] +
test eax eax +
jz loc_43CE59  +
mov eax [edi+1Ch] +
mov ecx [esp+0C8h] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44E260  +
cmp eax 0FFFFFFFFh +
jz loc_43CD35  +
movzx edx byte ptr [edi+4] +
mov [esp+8] eax +
mov [esp] edi +
and edx 8 +
cmp dl 1 +
sbb edx edx +
and edx 0FFFFFFF2h +
add edx 1Dh +
mov [esp+4] edx +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
mov eax [esp+0CCh] +
test eax eax +
jz loc_43CEAA  +
mov eax [edi+1Ch] +
mov ecx [esp+0CCh] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44E260  +
cmp eax 0FFFFFFFFh +
jz loc_43CD35  +
mov [esp+8] eax +
mov dword ptr [esp+4] 7FFFFFFFh +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
mov ebp [esp+0D8h] +
test ebp ebp +
jz loc_43D44F  +
mov eax [esp+0D8h] +
mov eax [eax] +
test eax eax +
jnz loc_43CF05  +
jmp loc_43D44F  +
mov [esp+8] eax +
mov dword ptr [esp+4] 7FFFFFFDh +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
add dword ptr [esp+0D8h] 4 +
mov eax [esp+0D8h] +
mov eax [eax] +
test eax eax +
jz loc_43D44F  +
mov edx [edi+1Ch] +
mov edx [edx+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] eax +
mov [esp] edx +
call sub_44E260  +
cmp eax 0FFFFFFFFh +
jnz loc_43CED0  +
xor eax eax +
jmp loc_43CD37  +
***
mov ebx [edi+34h] +
test ebx ebx +
jz loc_43D3C4  +
xor eax eax +
xor ecx ecx +
mov [esp+30h] esi +
mov ebp 1 +
mov esi ebx +
mov [esp+0DCh] edi +
mov ebx eax +
mov edi ecx +
jmp loc_43CF61  +
mov esi [esi+9Ch] +
test esi esi +
jz loc_43CF91  +
mov eax [esi+28h] +
shr eax 5 +
test eax 11042h +
jnz loc_43CF57  +
mov dword ptr [esp+4] offset a_note_gnuStack +
mov [esp] esi +
call sub_410840  +
test eax eax +
jz loc_43D2F7  +
test byte ptr [eax+14h] 10h +
mov edi eax +
cmovnz ebx ebp +
jmp loc_43CF57  +
***
mov ecx edi +
mov esi [esp+30h] +
test ecx ecx +
mov edi [esp+0DCh] +
jz loc_43D3C6  +
mov eax [esp+0C0h] +
mov edx ebx +
or edx 6 +
and ebx 1 +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov [eax+34h] edx +
jz loc_43C7F1  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 2 +
jnz loc_43C7F1  +
mov eax [ecx+3Ch] +
cmp eax offset off_476230 +
jz loc_43C7F1  +
or dword ptr [eax+14h] 10h +
jmp loc_43C7F1  +
***
mov [esp] edi +
call sub_43C540  +
test eax eax +
jnz loc_43C7A1  +
xor eax eax +
jmp loc_43CD37  +
***
mov ebx 0FFFFFFFFh +
jmp loc_43CDF1  +
***
mov esi [esp+34h] +
mov esi [esi] +
test esi esi +
jnz loc_43CAD0  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFFFCh +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
mov eax [esp+3Ch] +
mov dword ptr [esp+4] 6FFFFFFDh +
mov [esp] edi +
mov [esp+8] eax +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
mov eax [esp+0C0h] +
mov ebx [esp+3Ch] +
mov eax [eax+0A0h] +
mov [eax+238h] ebx +
test byte ptr [edi+4] 8 +
mov eax [edi+68h] +
jz loc_43D906  +
test eax eax +
jz loc_43D0A3  +
mov [esp+8] eax +
mov dword ptr [esp+4] 1Eh +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
mov eax [edi+6Ch] +
test eax eax +
jz loc_43D0D5  +
movzx edx byte ptr [edi] +
and edx 3 +
cmp dl 1 +
jbe loc_43DA1D  +
mov [esp+8] eax +
mov dword ptr [esp+4] 6FFFFFFBh +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_gnu_version_r +
mov [esp] eax +
call sub_410920  +
test eax eax +
mov esi eax +
jz loc_43DA3D  +
mov eax [esp+0C0h] +
mov [esp+78h] edi +
mov eax [eax+0A0h] +
mov edx [eax+238h] +
mov eax 1 +
mov dword ptr [esp+4] offset loc_433670 +
mov dword ptr [esp+80h] 0 +
test edx edx +
cmovnz eax edx +
mov [esp+7Ch] eax +
lea eax [esp+78h] +
mov [esp+38h] eax +
mov [esp+8] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_4147C0  +
mov ebx [esp+80h] +
test ebx ebx +
jnz loc_43CD35  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov ecx [eax+244h] +
test ecx ecx +
jz loc_43DA34  +
xor ebp ebp +
xor edx edx +
mov eax [ecx+18h] +
add edx 10h +
add ebp 1 +
test eax eax +
jz loc_43D18A  +
lea esi [esi+0] +
mov eax [eax+14h] +
add edx 10h +
test eax eax +
jnz loc_43D180  +
mov ecx [ecx+1Ch] +
test ecx ecx +
jnz loc_43D170  +
mov eax [esp+0C0h] +
mov [esi+24h] edx +
mov [esp+4] edx +
mov [esp] eax +
call sub_407B20  +
test eax eax +
mov ebx eax +
mov [esi+6Ch] eax +
jz loc_43CD35  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov eax [eax+244h] +
test eax eax +
jz loc_43D987  +
mov [esp+34h] ebp +
mov esi eax +
mov eax [esi+18h] +
xor ebp ebp +
test eax eax +
jz loc_43D1E8  +
mov eax [eax+14h] +
add ebp 1 +
test eax eax +
jnz loc_43D1DE  +
mov ecx 1 +
mov [esi] cx +
mov ecx [esi+10h] +
mov [esi+2] bp +
mov eax [ecx+0A0h] +
mov eax [eax+220h] +
test eax eax +
jz loc_43DC89  +
mov ecx [edi+1Ch] +
mov ecx [ecx+50h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov [esp] ecx +
call sub_44E260  +
cmp eax 0FFFFFFFFh +
jz loc_43CD35  +
mov edx [esi+1Ch] +
mov [esi+4] eax +
mov dword ptr [esi+8] 10h +
test edx edx +
jz loc_43DA28  +
lea edx [ebp+1] +
shl edx 4 +
mov [esi+0Ch] edx +
mov eax [esp+0C0h] +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] esi +
mov [esp] eax +
call sub_423CA0  +
mov ebp [esi+18h] +
test ebp ebp +
jz loc_43D978  +
mov [esp+3Ch] esi +
mov esi [esp+0C0h] +
jmp loc_43D2AD  +
cmp dword ptr [ebp+14h] 1 +
mov [ebp+8] eax +
sbb eax eax +
not eax  +
and eax 10h +
mov [ebp+0Ch] eax +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] ebp +
mov [esp] esi +
call sub_423D90  +
mov ebp [ebp+14h] +
test ebp ebp +
jz loc_43D974  +
mov eax [ebp+10h] +
mov [esp] eax +
call near ptr dword_423E60  +
mov ecx [ebp+10h] +
mov [ebp+0] eax +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44E260  +
cmp eax 0FFFFFFFFh +
jnz loc_43D27E  +
xor eax eax +
jmp loc_43CD37  +
***
lea eax ds:1Ch[edx*8] +
mov [esp+88h] eax +
jmp loc_43CC34  +
***
mov eax [esp+30h] +
test byte ptr [eax+1AEh] 20h +
cmovnz ebx ebp +
jmp loc_43CF57  +
***
mov eax [esi+1Ch] +
test eax eax +
jnz loc_43CBA6  +
mov eax [esi+34h] +
test eax eax +
jnz loc_43CBA6  +
mov ecx 2 +
mov [esp+7Ah] cx +
jmp loc_43CBA6  +
***
test esi esi +
jz loc_43D7A5  +
mov edx 30h +
mov dword ptr [esp+3Ch] 2 +
jmp loc_43C8A3  +
***
mov dword ptr [esp+84h] 14h +
mov dword ptr [esp+88h] 1Ch +
jmp loc_43C945  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 10h +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
or dword ptr [edi+68h] 2 +
jmp loc_43CDFA  +
***
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 1 +
ja loc_43CD9A  +
test byte ptr [edi+6] 1 +
jnz loc_43CD9A  +
mov dword ptr [esp+4] 168Dh +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6C0  +
jmp loc_43CD9A  +
***
xor ebx ebx +
mov eax [edi+10h] +
test eax eax +
jle loc_43C7F1  +
mov eax [esp+0C0h] +
mov edx ebx +
or edx 6 +
mov eax [eax+0A0h] +
mov eax [eax+934h] +
mov [eax+34h] edx +
jmp loc_43C7F1  +
***
mov eax [esp+0C0h] +
mov eax [eax] +
mov [esp] eax +
call sub_45BAA0  +
mov [esp] eax +
mov [esp+0C4h] eax +
call near ptr dword_423E60  +
mov ebx [esp+0C4h] +
mov [esp+80h] eax +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov [esp] eax +
call sub_44E260  +
cmp eax 0FFFFFFFFh +
jz loc_43CD35  +
mov [esp+68h] eax +
mov edx [esp+34h] +
jmp loc_43C982  +
***
mov ecx [esp+0D0h] +
test ecx ecx +
jz loc_43D4A0  +
mov eax [edi+1Ch] +
mov ecx [esp+0D0h] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44E260  +
cmp eax 0FFFFFFFFh +
jz loc_43CD35  +
mov [esp+8] eax +
mov dword ptr [esp+4] 6FFFFEFCh +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
mov edx [esp+0D4h] +
test edx edx +
jz loc_43D4F1  +
mov eax [edi+1Ch] +
mov ecx [esp+0D4h] +
mov eax [eax+50h] +
mov dword ptr [esp+8] 1 +
mov [esp+4] ecx +
mov [esp] eax +
call sub_44E260  +
cmp eax 0FFFFFFFFh +
jz loc_43CD35  +
mov [esp+8] eax +
mov dword ptr [esp+4] 6FFFFEFBh +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
movzx eax byte ptr [edi] +
mov [esp+78h] edi +
mov dword ptr [esp+7Ch] 0 +
test al 10h +
jnz loc_43D947  +
and eax 3 +
cmp al 1 +
jbe loc_43D93D  +
mov eax [edi+7Ch] +
test eax eax +
mov [esp+3Ch] eax +
jz loc_43D6DE  +
mov [esp+48h] ebx +
mov [esp+4Ch] esi +
mov [esp+0DCh] edi +
mov eax [esp+3Ch] +
mov edi [eax+0Ch] +
test edi edi +
mov ebp edi +
jnz loc_43D54E  +
jmp loc_43D6BD  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_43D6BD  +
movzx eax byte ptr [ebp+8] +
and eax 3 +
cmp al 1 +
jnz loc_43D543  +
mov eax [esp+0C0h] +
mov edx [ebp+4] +
mov eax [eax+4] +
mov [esp+44h] edx +
movzx eax byte ptr [eax+18h] +
mov [esp] edx +
mov ebx eax +
call strlen  +
mov edi [esp+3Ch] +
xor ecx ecx +
test bl bl +
setnz cl  +
mov [esp+38h] bl +
mov edi [edi+4] +
mov [esp+40h] ecx +
lea esi [eax+ecx] +
mov [esp] edi +
mov [esp+34h] edi +
call strlen  +
mov edi eax +
lea eax [esi+eax+3] +
mov [esp] eax +
call sub_40EFC0  +
test eax eax +
mov ebx eax +
jz loc_43CD35  +
mov ecx [esp+40h] +
mov edx [esp+44h] +
movzx eax byte ptr [esp+38h] +
add ecx ebx +
mov [ebx] al +
mov [esp] ecx +
mov [esp+8] esi +
add esi ebx +
mov [esp+4] edx +
call memcpy  +
lea edx [edi+1] +
mov edi [esp+34h] +
lea eax [esi+1] +
mov byte ptr [esi] 40h +
mov [esp+8] edx +
mov [esp+4] edi +
mov [esp] eax +
mov [esp+38h] edx +
call memcpy  +
mov eax [esp+0DCh] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_414050  +
mov edx [esp+38h] +
test eax eax +
mov edi eax +
jz loc_43D640  +
movzx eax byte ptr [eax+0Ch] +
sub eax 3 +
cmp al 1 +
jbe loc_43D773  +
mov eax [esp+34h] +
add esi 2 +
mov byte ptr [esi-1] 40h +
mov [esp+8] edx +
mov [esp] esi +
mov [esp+4] eax +
call memcpy  +
mov eax [esp+0DCh] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] ebx +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_414050  +
mov [esp] ebx +
mov edi eax +
call free  +
test edi edi +
jz loc_43D543  +
test byte ptr [edi+33h] 8 +
jnz loc_43D543  +
movzx eax byte ptr [edi+0Ch] +
sub eax 3 +
cmp al 1 +
ja loc_43D543  +
or byte ptr [ebp+8] 2 +
jmp loc_43D543  +
***
mov eax [esp+3Ch] +
mov eax [eax] +
test eax eax +
mov [esp+3Ch] eax +
jnz loc_43D531  +
mov ebx [esp+48h] +
mov esi [esp+4Ch] +
mov edi [esp+0DCh] +
lea eax [esp+60h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_437BB0 +
mov eax [edi+1Ch] +
mov [esp+60h] edi +
mov dword ptr [esp+64h] 0 +
mov [esp] eax +
call sub_4147C0  +
cmp dword ptr [esp+64h] 0 +
jnz loc_43CD35  +
cmp byte ptr [edi+4] 0 +
js loc_43D7E6  +
mov ecx [edi+7Ch] +
test ecx ecx +
jz loc_43D7E6  +
mov edx 1 +
mov ebp [ecx+0Ch] +
test ebp ebp +
jnz loc_43D741  +
jmp loc_43D7D0  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_43D7D0  +
movzx eax byte ptr [ebp+8] +
and eax 7 +
cmp al 1 +
jnz loc_43D736  +
mov edx [ecx+4] +
mov eax [ebp+4] +
mov [esp+34h] ecx +
mov dword ptr [esp] offset aSUndefinedVers +
mov [esp+8] edx +
mov [esp+4] eax +
call off_476094  +
xor edx edx +
mov ecx [esp+34h] +
jmp loc_43D736  +
***
mov [esp] ebx +
call free  +
jmp loc_43D69B  +
***
test byte ptr [edi] 20h +
jnz loc_43D7A3  +
or dword ptr [ebp+14h] 8000h +
jmp loc_43D076  +
***
mov eax [ebp+24h] +
test eax eax +
jz loc_43C8FE  +
xor eax eax +
jmp loc_43CD37  +
***
xor esi esi +
mov edx 30h +
mov dword ptr [esp+3Ch] 2 +
jmp loc_43C8DB  +
***
mov dword ptr [esp+4] 17BEh +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6C0  +
jmp loc_43C871  +
***
mov ecx [ecx] +
test ecx ecx +
jnz loc_43D72A  +
test edx edx +
lea esi [esi+0] +
jz loc_43CD29  +
lea eax [esp+78h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_437AB0 +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_4147C0  +
cmp dword ptr [esp+7Ch] 0 +
jnz loc_43CD35  +
mov eax [edi+48h] +
test eax eax +
jz loc_43D848  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_414050  +
test eax eax +
jz loc_43D848  +
test byte ptr [eax+33h] 3 +
jnz loc_43DCD2  +
mov eax [edi+4Ch] +
test eax eax +
jz loc_43D884  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_414050  +
test eax eax +
jz loc_43D884  +
test byte ptr [eax+33h] 3 +
jnz loc_43DC98  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_preinit_array +
mov [esp] eax +
call sub_410840  +
test eax eax +
jz loc_43DA96  +
test byte ptr [eax+18h] 4 +
jz loc_43DA96  +
movzx eax byte ptr [edi] +
and eax 3 +
cmp al 1 +
jbe loc_43DA56  +
mov ebx [edi+34h] +
jmp loc_43D8C6  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_43DCBF  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_43D8C0  +
mov eax [ebx+64h] +
test eax eax +
jnz loc_43D8E7  +
jmp loc_43D8C0  +
***
mov eax [eax+0Ch] +
test eax eax +
jz loc_43D8C0  +
mov edx [eax+8Ch] +
cmp dword ptr [edx+4] 10h +
jnz loc_43D8E0  +
mov [esp+4] ebx +
mov dword ptr [esp] offset aB_preinit_arra +
call off_476094  +
jmp loc_43D8C0  +
***
test al 10h +
jnz loc_43D087  +
test al 8 +
jz loc_43D0A3  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 18h +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jnz loc_43D0A3  +
xor eax eax +
jmp loc_43CD37  +
***
test byte ptr [edi+5] 1 +
jz loc_43D513  +
lea eax [esp+78h] +
mov [esp+8] eax +
mov dword ptr [esp+4] offset sub_437EE0 +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_4147C0  +
cmp dword ptr [esp+7Ch] 0 +
jz loc_43D513  +
xor eax eax +
jmp loc_43CD37  +
***
mov esi [esp+3Ch] +
mov esi [esi+1Ch] +
test esi esi +
jnz loc_43D1D5  +
mov ebp [esp+34h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFFFEh +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 6FFFFFFFh +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
mov [eax+23Ch] ebp +
mov eax [esp+0C0h] +
mov eax [eax+0A0h] +
cmp dword ptr [eax+23Ch] 0 +
jnz loc_43DCF9  +
cmp dword ptr [eax+238h] 0 +
jnz loc_43DCF9  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_gnu_version +
mov [esp] eax +
call sub_410920  +
or dword ptr [eax+14h] 8000h +
jmp loc_43C767  +
***
and eax 0FFFFFF97h +
mov [edi+6Ch] eax +
jmp loc_43D0B9  +
***
mov dword ptr [esi+0Ch] 0 +
jmp loc_43D24C  +
***
or dword ptr [esi+14h] 8000h +
jmp loc_43D9D6  +
***
mov dword ptr [esp+4] 18C5h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6C0  +
jmp loc_43D0F3  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 20h +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 21h +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_init_array +
mov [esp] eax +
call sub_410840  +
test eax eax +
jz loc_43DABB  +
test byte ptr [eax+18h] 4 +
jnz loc_43DBFB  +
mov eax [esp+0C0h] +
mov dword ptr [esp+4] offset a_fini_array +
mov [esp] eax +
call sub_410840  +
test eax eax +
jz loc_43DAE0  +
test byte ptr [eax+18h] 4 +
jnz loc_43DC42  +
mov eax [esp+30h] +
mov dword ptr [esp+4] offset a_dynstr +
mov [esp] eax +
call sub_410920  +
test eax eax +
jz loc_43C813  +
cmp dword ptr [eax+3Ch] offset off_476230 +
jz loc_43C813  +
mov eax [edi+1Ch] +
mov eax [eax+50h] +
mov [esp] eax +
call sub_44E520  +
mov ebp eax +
movzx eax byte ptr [edi+3] +
test al 20h +
jnz loc_43DBD2  +
test al 40h +
jz loc_43DB49  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFEF5h +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 5 +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6 +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
mov [esp+8] ebp +
mov dword ptr [esp+4] 0Ah +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
mov eax [esi+174h] +
movzx eax byte ptr [eax+5] +
mov dword ptr [esp+4] 0Bh +
mov [esp] edi +
mov [esp+8] eax +
call sub_438D60  +
test eax eax +
jnz loc_43C813  +
xor eax eax +
jmp loc_43CD37  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 4 +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
movzx eax byte ptr [edi+3] +
jmp loc_43DB25  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 19h +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1Bh +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jnz loc_43DABB  +
xor eax eax +
jmp loc_43CD37  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1Ah +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jz loc_43CD35  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1Ch +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jnz loc_43DAE0  +
xor eax eax +
jmp loc_43CD37  +
***
mov eax [ecx] +
mov [esp] eax +
call sub_45BAA0  +
jmp loc_43D20B  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0Dh +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jnz loc_43D884  +
xor eax eax +
jmp loc_43CD37  +
***
mov dword ptr [esp] 0Fh +
call sub_40C770  +
xor eax eax +
jmp loc_43CD37  +
***
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0Ch +
mov [esp] edi +
call sub_438D60  +
test eax eax +
jnz loc_43D848  +
xor eax eax +
jmp loc_43CD37  +
***
mov ecx [esp+38h] +
mov edx edi +
mov eax [esp+0C0h] +
call sub_432490  +
test eax eax +
jz loc_43D9FD  +
jmp loc_43C767  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov edi [esp+24h] +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_43DD3E  +
jmp loc_43DD65  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_43DD65  +
mov eax [ebx+14h] +
and eax 8001h +
cmp eax 1 +
jnz loc_43DD37  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] esi +
call sub_438380  +
test eax eax +
jnz loc_43DD37  +
mov eax [edi+1Ch] +
mov [eax+68h] ebx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov edi [esp+24h] +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_43DD8E  +
jmp loc_43DE02  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_43DDB5  +
mov eax [ebx+14h] +
and eax 8009h +
cmp eax 1 +
jnz loc_43DD87  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] esi +
call sub_438380  +
test eax eax +
jnz loc_43DD87  +
mov eax [edi+1Ch] +
mov [eax+6Ch] ebx +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_43DDC7  +
jmp loc_43DE02  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_43DE02  +
mov eax [ebx+14h] +
and eax 8009h +
cmp eax 9 +
jnz loc_43DDC0  +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] esi +
call sub_438380  +
test eax eax +
jnz loc_43DDC0  +
mov eax [edi+1Ch] +
mov [eax+68h] ebx +
mov edx [eax+68h] +
test edx edx +
jnz loc_43DE0C  +
mov edx [eax+6Ch] +
mov [eax+68h] edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [edi+1Ch] +
mov edx [eax+68h] +
test edx edx +
jz loc_43DDF5  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0ACh +
mov eax [esp+0C4h] +
mov esi [esp+0C0h] +
mov eax [eax+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_43DE51  +
mov eax 1 +
add esp 0ACh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+4] +
mov edx [esp+0C4h] +
mov ebx [eax+1B0h] +
mov eax [ebx+90h] +
mov [esp+4] edx +
mov [esp] esi +
call eax  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov edi [eax+30h] +
test edi edi +
jz loc_43DE41  +
mov eax [eax+38h] +
lea ecx [esp+3Ch] +
mov edx [esp+0C4h] +
mov edi eax +
mov [esp+14h] eax +
mov eax esi +
call sub_432490  +
mov [esp] edi +
mov dword ptr [esp+4] offset a_gnu_version +
mov ebp eax +
call sub_410920  +
test eax eax +
mov edi eax +
jz loc_43E6E1  +
test ebp ebp +
jz loc_43DF07  +
test byte ptr [edi+15h] 80h +
jnz loc_43DF07  +
lea eax [ebp+ebp+0] +
mov [edi+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_407C00  +
test eax eax +
mov [edi+6Ch] eax +
jz loc_43E2E4  +
mov eax [esp+0C4h] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 6FFFFFF0h +
mov [esp] eax +
call sub_438D60  +
test eax eax +
jz loc_43E2E4  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov edi [eax+0F8h] +
test edi edi +
jz loc_43E6FA  +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+5] +
imul eax ebp +
test ebp ebp +
mov [edi+24h] eax +
jnz loc_43E4BF  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov dword ptr [eax+60h] 0 +
mov eax [esp+0C4h] +
movzx eax byte ptr [eax+3] +
test al 20h +
jnz loc_43E28D  +
test al 40h +
jz loc_43E150  +
xor eax eax +
mov ecx 12h +
lea edi [esp+58h] +
mov [esp+1Ch] edi +
stos   +
lea eax ds:0[ebp*8] +
mov [esp] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+68h] eax +
jz loc_43E2E4  +
lea eax [eax+ebp*4] +
mov edi [esp+1Ch] +
mov [esp+6Ch] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+4] offset sub_4348C0 +
mov dword ptr [esp+80h] 0FFFFFFFFh +
mov [esp+8] edi +
mov eax [eax+1Ch] +
mov [esp+58h] esi +
mov [esp+5Ch] ebx +
mov [esp] eax +
call sub_4147C0  +
mov edx [esp+9Ch] +
test edx edx +
jnz loc_43E513  +
mov ecx [esp+60h] +
mov edx [esp+68h] +
mov eax [esp+0C4h] +
mov dword ptr [esp] 1 +
call sub_432220  +
test eax eax +
mov [esp+18h] eax +
jz loc_43E513  +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset a_gnu_hash +
mov [esp] eax +
call sub_410920  +
test eax eax +
mov [esp+24h] eax +
jz loc_43EB63  +
mov edi [esp+60h] +
test edi edi +
jnz loc_43E713  +
cmp dword ptr [esp+80h] 0FFFFFFFFh +
jz loc_43E04B  +
mov dword ptr [esp+4] 1A12h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6C0  +
mov eax [esp+68h] +
mov [esp] eax +
call free  +
mov eax [ebx+174h] +
mov ebp [esp+24h] +
movzx eax byte ptr [eax+0Ah] +
shr al 3 +
movzx eax al +
add eax 14h +
mov [ebp+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_407C00  +
test eax eax +
mov edi eax +
jz loc_43E2E4  +
mov ecx ebp +
mov [ecx+6Ch] eax +
mov eax [esi+4] +
mov eax [eax+30h] +
mov [esp+4] edi +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esi+4] +
lea edx [edi+4] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esi+4] +
lea edx [edi+8] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 1 +
call eax  +
mov eax [esi+4] +
lea edx [edi+0Ch] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+0Ah] +
cmp al 8 +
jz loc_43EB3F  +
cmp al 10h +
jz loc_43EB48  +
cmp al 20h +
jz loc_43EC61  +
cmp al 40h +
jnz loc_43EC0C  +
mov eax [esi+4] +
lea edx [edi+10h] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov dword ptr [esp] 0 +
mov dword ptr [esp+4] 0 +
call eax  +
mov eax [esi+4] +
mov edx [eax+30h] +
mov eax [ebx+174h] +
movzx eax byte ptr [eax+0Ah] +
mov dword ptr [esp] 0 +
shr al 3 +
movzx eax al +
lea eax [edi+eax+10h] +
mov [esp+4] eax +
call edx  +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset a_dynstr +
mov [esp] eax +
call sub_410920  +
test eax eax +
mov [esp+24h] eax +
jz loc_43E9B0  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov edx [eax+50h] +
mov [esp+20h] eax +
mov eax [eax+38h] +
mov edi edx +
mov [esp] edx +
mov ebx eax +
mov [esp+14h] edx +
mov [esp+18h] eax +
call sub_44E6A0  +
mov [esp] edi +
call sub_44E520  +
mov [esp+1Ch] eax +
mov eax [ebx+4] +
mov edi [eax+1B0h] +
mov dword ptr [esp+4] offset a_dynamic +
mov [esp] ebx +
call sub_410920  +
test eax eax +
mov ebp eax +
jz loc_43E997  +
mov ebx [ebp+6Ch] +
mov eax [ebp+24h] +
add eax ebx +
cmp ebx eax +
jnb loc_43E32D  +
lea eax [esp+58h] +
mov ecx [edi+174h] +
mov [esp+0C0h] esi +
mov esi ebx +
mov ebx eax +
jmp loc_43E235  +
cmp eax 0Ah +
jnz loc_43E2F0  +
mov eax [esp+1Ch] +
mov [esp+5Ch] eax +
mov eax [edi+174h] +
mov edx [esp+18h] +
mov eax [eax+34h] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] edx +
call eax  +
mov ecx [edi+174h] +
movzx eax byte ptr [ecx+6] +
add esi eax +
mov eax [ebp+6Ch] +
add eax [ebp+24h] +
cmp esi eax +
jnb loc_43E326  +
mov edx [esp+18h] +
mov eax [ecx+30h] +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edx +
call eax  +
mov eax [esp+58h] +
cmp eax 1Dh +
jz loc_43E270  +
jbe loc_43E1F0  +
cmp eax 7FFFFFFDh +
jz loc_43E270  +
nop   +
lea esi [esi+0] +
ja loc_43E305  +
sub eax 6FFFFEFBh +
cmp eax 1 +
ja loc_43E21B  +
mov eax [esp+5Ch] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_44E530  +
mov [esp+5Ch] eax +
jmp loc_43E201  +
***
lea eax ds:0[ebp*4] +
mov [esp] eax +
call sub_40EFC0  +
test eax eax +
mov edi eax +
jz loc_43E2E4  +
mov [esp+58h] eax +
lea eax [esp+58h] +
mov [esp+8] eax +
mov eax [esp+0C4h] +
mov dword ptr [esp+4] offset dword_4325B0 +
mov dword ptr [esp+5Ch] 0 +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_4147C0  +
mov ecx [esp+5Ch] +
test ecx ecx +
jz loc_43E5D4  +
mov [esp] edi +
call free  +
xor eax eax +
jmp loc_43DE46  +
***
ja loc_43E315  +
cmp eax 1 +
jnz loc_43E21B  +
nop   +
lea esi [esi+0] +
jmp loc_43E270  +
***
cmp eax 7FFFFFFFh +
jnz loc_43E21B  +
jmp loc_43E270  +
***
sub eax 0Eh +
cmp eax 1 +
ja loc_43E21B  +
jmp loc_43E270  +
***
mov esi [esp+0C0h] +
mov eax [esp+20h] +
mov edi [esp+14h] +
mov ebx [eax+0C0h] +
test ebx ebx +
jz loc_43E358  +
nop   +
mov eax [ebx+18h] +
mov [esp] edi +
mov [esp+4] eax +
call sub_44E530  +
mov [ebx+18h] eax +
mov ebx [ebx] +
test ebx ebx +
jnz loc_43E340  +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset sub_4349D0 +
mov [esp+8] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_4147C0  +
mov eax [esi+0A0h] +
mov ebx [eax+238h] +
test ebx ebx +
jnz loc_43E526  +
mov edx [eax+244h] +
test edx edx +
jz loc_43E463  +
mov eax [esp+18h] +
lea edi [esp+40h] +
mov dword ptr [esp+4] offset a_gnu_version_r +
mov [esp] eax +
call sub_410920  +
mov ebx [eax+6Ch] +
lea eax [esp+58h] +
mov [esp+1Ch] eax +
lea esi [esi+0] +
mov ebp [esp+1Ch] +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] ebp +
call sub_423C30  +
mov eax [esp+5Ch] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_44E530  +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] ebp +
mov [esp] esi +
mov [esp+5Ch] eax +
call sub_423CA0  +
cmp word ptr [esp+5Ah] 0 +
jz loc_43E457  +
xor ebp ebp +
lea esi [esi+0] +
mov [esp+4] ebx +
add ebp 1 +
mov [esp+8] edi +
mov [esp] esi +
call sub_423D20  +
mov eax [esp+48h] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_44E530  +
mov [esp+8] ebx +
add ebx 10h +
mov [esp+4] edi +
mov [esp] esi +
mov [esp+48h] eax +
call sub_423D90  +
movzx eax word ptr [esp+5Ah] +
cmp ebp eax +
jb loc_43E410  +
mov eax [esp+64h] +
test eax eax +
jnz loc_43E3C0  +
mov eax [esp+0C4h] +
xor ebx ebx +
mov eax [eax+1Ch] +
mov eax [eax+50h] +
mov [esp] eax +
call sub_44E520  +
mov ecx [esp+24h] +
mov esi [esp+0C4h] +
mov [ecx+24h] eax +
jmp loc_43E49C  +
add ebx 1 +
cmp [esi+64h] ebx +
jb loc_43DE41  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov [esp] esi +
call sub_438D60  +
test eax eax +
jnz loc_43E490  +
xor eax eax +
jmp loc_43DE46  +
***
mov [esp+4] eax +
mov [esp] esi +
call sub_407B20  +
test eax eax +
mov [edi+6Ch] eax +
jz loc_43E2E4  +
mov edx [ebx+174h] +
mov ecx [esp+3Ch] +
movzx edx byte ptr [edx+5] +
add ecx 1 +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
imul edx ecx +
mov [esp+3Ch] ecx +
mov [esp+8] edx +
call memset  +
jmp loc_43DF37  +
***
mov eax [esp+78h] +
mov [esp] eax +
call free  +
mov eax [esp+68h] +
mov [esp] eax +
call free  +
xor eax eax +
jmp loc_43DE46  +
***
mov eax [esp+18h] +
lea edi [esp+40h] +
mov dword ptr [esp+4] offset a_gnu_version_d +
mov [esp] eax +
call sub_410920  +
mov ebx [eax+6Ch] +
lea eax [esp+58h] +
mov [esp+1Ch] eax +
jmp loc_43E558  +
mov ecx [esp+68h] +
test ecx ecx +
jz loc_43E5C9  +
mov eax [esp+1Ch] +
mov [esp+4] ebx +
add ebx 14h +
mov [esp] esi +
mov [esp+8] eax +
call sub_423A70  +
cmp dword ptr [esp+64h] 14h +
jnz loc_43E550  +
cmp word ptr [esp+5Eh] 0 +
jz loc_43E550  +
xor ebp ebp +
mov [esp+4] ebx +
add ebp 1 +
mov [esp+8] edi +
mov [esp] esi +
call sub_423BB0  +
mov eax [esp+40h] +
mov [esp+4] eax +
mov eax [esp+14h] +
mov [esp] eax +
call sub_44E530  +
mov [esp+8] ebx +
add ebx 8 +
mov [esp+4] edi +
mov [esp] esi +
mov [esp+40h] eax +
call sub_423BF0  +
movzx eax word ptr [esp+5Eh] +
cmp ebp eax +
jb loc_43E580  +
jmp loc_43E550  +
***
mov eax [esi+0A0h] +
jmp loc_43E388  +
***
mov ecx [esp+58h] +
mov edx edi +
mov eax [esp+0C4h] +
mov dword ptr [esp] 0 +
sub ecx edi +
sar ecx 2 +
call sub_432220  +
mov [esp] edi +
mov [esp+18h] eax +
call free  +
mov edx [esp+18h] +
test edx edx +
jz loc_43E2E4  +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov [eax+60h] edx +
mov eax [esp+14h] +
mov dword ptr [esp+4] offset a_hash +
mov [esp] eax +
call sub_410920  +
mov edx [esp+18h] +
test eax eax +
mov edi eax +
jz loc_43EC44  +
mov eax [edi+8Ch] +
mov [esp+1Ch] edx +
mov eax [eax+28h] +
mov ecx eax +
mov [esp+18h] eax +
lea eax [ebp+edx+2] +
imul eax ecx +
mov [edi+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_407C00  +
test eax eax +
mov [edi+6Ch] eax +
jz loc_43E2E4  +
mov ecx [esp+18h] +
mov edx [esp+1Ch] +
shl ecx 3 +
cmp ecx 8 +
jz loc_43EAF1  +
cmp ecx 10h +
jz loc_43EBA6  +
cmp ecx 20h +
jz loc_43EB7C  +
cmp ecx 40h +
jnz loc_43EBDA  +
mov ecx [esi+4] +
mov ecx [ecx+24h] +
mov [esp+8] eax +
mov [esp] edx +
mov dword ptr [esp+4] 0 +
call ecx  +
mov eax [esi+4] +
mov edx [esp+18h] +
add edx [edi+6Ch] +
mov eax [eax+24h] +
mov [esp+8] edx +
mov [esp] ebp +
mov dword ptr [esp+4] 0 +
call eax  +
mov eax [esp+0C4h] +
movzx eax byte ptr [eax+3] +
jmp loc_43DF5B  +
***
mov dword ptr [esp+4] 1989h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6C0  +
jmp loc_43DEB8  +
***
mov dword ptr [esp+4] 199Dh +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6C0  +
jmp loc_43DF1F  +
***
cmp dword ptr [esp+80h] 0FFFFFFFFh +
jz loc_43EBBD  +
mov eax edi +
shr eax 1 +
jz loc_43EBF6  +
mov edx 1 +
jmp loc_43E734  +
mov edx ecx +
shr eax 1 +
lea ecx [edx+1] +
jnz loc_43E732  +
cmp ecx 2 +
jbe loc_43EBF6  +
lea eax [edx-1] +
bt edi eax +
jnb loc_43EB04  +
mov eax [ebx+174h] +
add edx 4 +
cmp byte ptr [eax+0Ah] 40h +
jz loc_43EB22  +
mov dword ptr [esp+90h] 5 +
mov eax 1Fh +
mov dword ptr [esp+20h] 5 +
mov [esp+98h] eax +
mov eax 1 +
mov ecx edx +
mov edi eax +
shl edi cl +
mov ecx edx +
sub ecx [esp+20h] +
mov [esp+64h] edi +
mov [esp+94h] edx +
shl eax cl +
mov [esp+20h] eax +
lea edi ds:0[eax*4] +
mov eax [esp+18h] +
lea eax [edi+eax*8] +
mov [esp] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+78h] eax +
jz loc_43E513  +
mov edx [esp+18h] +
lea ecx [eax+edi] +
mov [esp+74h] ecx +
mov [esp+2Ch] ecx +
mov [esp+8] edi +
shl edx 2 +
mov [esp+28h] edx +
add edx ecx +
mov ecx ebp +
sub ecx [esp+60h] +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
mov [esp+70h] edx +
mov [esp+88h] ecx +
call memset  +
mov edx [esp+28h] +
mov ecx [esp+2Ch] +
mov dword ptr [esp+4] 0 +
mov [esp+8] edx +
mov [esp] ecx +
call memset  +
mov eax [esp+60h] +
mov edi [esp+74h] +
test eax eax +
jz loc_43E851  +
mov eax [esp+68h] +
xor ecx ecx +
mov [esp+2Ch] ebx +
mov ebx eax +
mov eax [ebx+ecx*4] +
xor edx edx +
add ecx 1 +
div  dword ptr [esp+18h] +
add dword ptr [edi+edx*4] 1 +
cmp [esp+60h] ecx +
ja loc_43E837  +
mov ebx [esp+2Ch] +
mov edx [esp+88h] +
xor eax eax +
mov ecx [esp+70h] +
cmp dword ptr [edi+eax*4] 0 +
jz loc_43E86A  +
mov [ecx+eax*4] edx +
add edx [edi+eax*4] +
add eax 1 +
cmp eax [esp+18h] +
jnz loc_43E85E  +
cmp edx ebp +
jz loc_43E88B  +
mov dword ptr [esp+4] 1A5Bh +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6C0  +
mov eax [esp+80h] +
mov ecx [esp+18h] +
mov [esp+8Ch] eax +
mov eax [esp+60h] +
mov [esp+84h] ecx +
add eax ecx +
mov ecx [esp+24h] +
mov edx eax +
mov eax [esp+64h] +
shr eax 3 +
lea eax [eax+edx*4+10h] +
mov [ecx+24h] eax +
mov [esp+4] eax +
mov [esp] esi +
call sub_407C00  +
test eax eax +
mov edi eax +
jz loc_43E507  +
mov eax [esp+24h] +
mov ecx [esp+18h] +
mov [eax+6Ch] edi +
mov eax [esi+4] +
mov eax [eax+30h] +
mov [esp] ecx +
mov [esp+4] edi +
call eax  +
mov eax [esi+4] +
lea edx [edi+4] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov edx [esp+88h] +
mov [esp] edx +
call eax  +
mov eax [esi+4] +
lea edx [edi+8] +
mov ecx [esp+20h] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
mov eax [esi+4] +
lea edx [edi+0Ch] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov edx [esp+94h] +
mov [esp] edx +
call eax  +
mov eax [esp+64h] +
mov [esp+0C0h] esi +
mov esi ebx +
mov ebx [esp+0C0h] +
shr eax 3 +
lea eax [edi+eax+10h] +
xor edi edi +
mov [esp+2Ch] eax +
mov ebp eax +
jmp loc_43E974  +
mov [esp+4] ebp +
mov dword ptr [esp] 0 +
call eax  +
add ebp 4 +
add edi 1 +
cmp edi [esp+18h] +
jz loc_43E9C9  +
mov eax [esp+74h] +
mov eax [eax+edi*4] +
test eax eax +
mov eax [ebx+4] +
mov eax [eax+30h] +
jz loc_43E95B  +
mov ecx [esp+70h] +
mov ecx [ecx+edi*4] +
mov [esp+4] ebp +
mov [esp] ecx +
call eax  +
jmp loc_43E968  +
***
mov dword ptr [esp+4] 0CE2h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6C0  +
jmp loc_43E1C7  +
***
mov dword ptr [esp+4] 1A8Dh +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6C0  +
jmp loc_43E170  +
***
mov eax [esp+2Ch] +
add eax [esp+28h] +
mov dword ptr [esp+4] offset sub_432FE0 +
mov [esp+0C0h] ebx +
mov ebx esi +
mov esi [esp+0C0h] +
mov [esp+7Ch] eax +
mov eax [esp+1Ch] +
mov [esp+8] eax +
mov eax [esp+0C4h] +
mov eax [eax+1Ch] +
mov [esp] eax +
call sub_4147C0  +
mov eax [esp+24h] +
mov edi [esp+20h] +
mov ebp [eax+6Ch] +
add ebp 10h +
test edi edi +
jz loc_43EAD4  +
mov eax [ebx+174h] +
xor ecx ecx +
xor edi edi +
mov [esp+0C0h] esi +
mov esi ebx +
mov ebx ecx +
mov ecx [esp+0C0h] +
movzx eax byte ptr [eax+0Ah] +
jmp loc_43EA96  +
cmp al 10h +
jz loc_43EAA6  +
cmp al 20h +
jz loc_43EAC6  +
cmp al 40h +
jnz loc_43EC28  +
mov eax [ecx+4] +
mov edx [esp+78h] +
mov [esp+18h] ecx +
mov eax [eax+24h] +
mov [esp+8] ebp +
mov ecx [edx+edi] +
mov dword ptr [esp+4] 0 +
mov [esp] ecx +
call eax  +
mov ecx [esp+18h] +
mov eax [esi+174h] +
add ebx 1 +
add edi 4 +
movzx eax byte ptr [eax+0Ah] +
mov edx eax +
shr dl 3 +
movzx edx dl +
add ebp edx +
cmp [esp+20h] ebx +
jz loc_43EAD2  +
cmp al 8 +
jnz loc_43EA40  +
mov eax [esp+78h] +
mov eax [eax+edi] +
mov [ebp+0] al +
jmp loc_43EA76  +
***
mov eax [ecx+4] +
mov [esp+18h] ecx +
mov edx [eax+3Ch] +
mov eax [esp+78h] +
mov eax [eax+edi] +
mov [esp+4] ebp +
mov [esp] eax +
call edx  +
mov ecx [esp+18h] +
jmp loc_43EA76  +
***
mov eax [ecx+4] +
mov [esp+18h] ecx +
mov edx [eax+30h] +
jmp loc_43EAB0  +
***
mov esi ecx +
mov eax [esp+78h] +
mov [esp] eax +
call free  +
mov eax [esp+68h] +
mov [esp] eax +
call free  +
jmp loc_43E150  +
***
mov [eax] dl +
mov ecx [esp+18h] +
mov edx ebp +
mov eax [edi+6Ch] +
mov [eax+ecx] dl +
jmp loc_43E6D1  +
***
mov eax [ebx+174h] +
add edx 3 +
cmp byte ptr [eax+0Ah] 40h +
jnz loc_43E763  +
cmp edx 5 +
mov eax 6 +
cmovz edx eax +
mov dword ptr [esp+90h] 6 +
mov eax 3Fh +
mov dword ptr [esp+20h] 6 +
jmp loc_43E77B  +
***
mov byte ptr [edi+10h] 0 +
jmp loc_43E129  +
***
mov eax [esi+4] +
lea edx [edi+10h] +
mov eax [eax+3Ch] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
jmp loc_43E129  +
***
mov dword ptr [esp+4] 1A0Dh +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6C0  +
jmp loc_43E021  +
***
mov ecx [esi+4] +
mov ecx [ecx+30h] +
mov [esp+4] eax +
mov [esp] edx +
call ecx  +
mov eax [esi+4] +
mov eax [eax+30h] +
mov edx [esp+18h] +
add edx [edi+6Ch] +
mov [esp] ebp +
mov [esp+4] edx +
call eax  +
jmp loc_43E6D1  +
***
mov ecx [esi+4] +
mov ecx [ecx+3Ch] +
mov [esp+4] eax +
mov [esp] edx +
call ecx  +
mov eax [esi+4] +
mov eax [eax+3Ch] +
jmp loc_43EB91  +
***
mov dword ptr [esp+4] 1A2Ah +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6C0  +
mov edi [esp+60h] +
jmp loc_43E721  +
***
mov dword ptr [esp+8] offset aBfd_elf_size_d +
mov dword ptr [esp+4] 19DEh +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6F0  +
mov eax [ebx+174h] +
cmp byte ptr [eax+0Ah] 40h +
jz loc_43EC7C  +
mov edx 5 +
jmp loc_43E763  +
***
mov dword ptr [esp+8] offset aBfd_elf_size_d +
mov dword ptr [esp+4] 1A22h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6F0  +
mov dword ptr [esp+8] offset aBfd_elf_size_d +
mov dword ptr [esp+4] 1A83h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6F0  +
mov dword ptr [esp+4] 19D7h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6C0  +
mov edx [esp+18h] +
jmp loc_43E639  +
***
mov eax [esi+4] +
lea edx [edi+10h] +
mov eax [eax+30h] +
mov [esp+4] edx +
mov dword ptr [esp] 0 +
call eax  +
jmp loc_43E129  +
***
mov edx 6 +
jmp loc_43EB22  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
mov edx [eax+1Ch] +
cmp dword ptr [edx+28h] 1 +
jz loc_43ECB4  +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+34h] +
mov ebx [eax+34h] +
test ebx ebx +
jnz loc_43ECD2  +
jmp loc_43ED70  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_43ED70  +
test byte ptr [ebx+29h] 8 +
jnz loc_43ECC4  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_43ECC4  +
mov eax [ebp+4] +
mov ecx [ebx+0A0h] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [ecx+4] al +
jnz loc_43ECC4  +
mov esi [ebx+64h] +
test esi esi +
jnz loc_43ED2F  +
jmp loc_43ECC4  +
***
mov eax [edi+88h] +
test eax eax +
jz loc_43ED21  +
movzx eax word ptr [esi+18h] +
and ax 0FC7Fh +
or ah 1 +
mov [esi+18h] ax +
mov eax [esp+34h] +
mov edx [eax+1Ch] +
mov esi [esi+0Ch] +
test esi esi +
jz loc_43ECC4  +
test byte ptr [esi+16h] 80h +
jz loc_43ED28  +
cmp dword ptr [esi+3Ch] offset off_476230 +
jz loc_43ED28  +
mov edi [esi+8Ch] +
add edx 7Ch +
mov [esp+8] esi +
mov [esp+4] edx +
mov [esp] ebp +
lea eax [edi+88h] +
mov [esp+0Ch] eax +
call sub_4501C0  +
test eax eax +
jnz loc_43ED08  +
jmp loc_43ECA8  +
***
mov eax [edx+7Ch] +
mov ebx 1 +
test eax eax +
jz loc_43ECAA  +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp] ebp +
mov dword ptr [esp+0Ch] offset sub_4321E0 +
mov [esp+4] eax +
call sub_450440  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+24h] +
mov esi [esp+28h] +
movzx edx byte ptr [ebx+34h] +
mov eax edx +
and eax 6 +
cmp al 6 +
jz loc_43EE33  +
movzx eax byte ptr [ebx+33h] +
mov ecx eax +
and eax 0FFFFFFFBh +
or cl [esi+33h] +
and ecx 4 +
or eax ecx +
mov [ebx+33h] al +
mov ecx eax +
and eax 0FFFFFFFEh +
or cl [esi+33h] +
and ecx 1 +
or eax ecx +
mov [ebx+33h] al +
mov ecx eax +
and eax 0FFFFFFEFh +
or cl [esi+33h] +
and ecx 10h +
or eax ecx +
mov ecx edx +
mov [ebx+33h] al +
and edx 0FFFFFFBFh +
or cl [esi+34h] +
and ecx 40h +
or edx ecx +
mov [ebx+34h] dl +
mov edx eax +
and eax 7Fh +
or dl [esi+33h] +
and edx 0FFFFFF80h +
or eax edx +
mov [ebx+33h] al +
movzx eax byte ptr [ebx+35h] +
mov edx eax +
and eax 0FFFFFFFDh +
or dl [esi+35h] +
and edx 2 +
or eax edx +
mov [ebx+35h] al +
cmp byte ptr [esi+0Ch] 6 +
jz loc_43EE40  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+20h] +
mov ecx [esi+24h] +
mov eax [eax+1Ch] +
mov edx [eax+3Ch] +
cmp ecx edx +
jle loc_43EE60  +
mov edi [ebx+24h] +
test edi edi +
js loc_43EED0  +
add ecx edi +
mov [ebx+24h] ecx +
mov [esi+24h] edx +
mov ecx [esi+28h] +
mov edx [eax+40h] +
cmp ecx edx +
jle loc_43EE79  +
mov edi [ebx+28h] +
test edi edi +
js loc_43EEC0  +
add ecx edi +
mov [ebx+28h] ecx +
mov [esi+28h] edx +
mov edx [esi+20h] +
cmp edx 0FFFFFFFFh +
jz loc_43EE39  +
cmp dword ptr [ebx+20h] 0FFFFFFFFh +
jz loc_43EE9C  +
mov edx [ebx+38h] +
mov eax [eax+50h] +
mov [esp+4] edx +
mov [esp] eax +
call sub_44E3B0  +
mov edx [esi+20h] +
mov eax [esi+38h] +
mov [ebx+20h] edx +
mov [ebx+38h] eax +
mov dword ptr [esi+20h] 0FFFFFFFFh +
mov dword ptr [esi+38h] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [ebx+28h] 0 +
xor edi edi +
mov ecx [esi+28h] +
jmp loc_43EE71  +
***
mov dword ptr [ebx+24h] 0 +
xor edi edi +
mov ecx [esi+24h] +
jmp loc_43EE58  +
***
jmp loc_43EEF0  +
push ebx  +
mov eax [esp+0Ch] +
mov edx [esp+8] +
mov ecx [esp+10h] +
cmp byte ptr [eax+30h] 0Ah +
jz loc_43EF10  +
mov ebx [edx+1Ch] +
mov ebx [ebx+48h] +
and byte ptr [eax+33h] 7Fh +
mov [eax+28h] ebx +
test ecx ecx +
jz loc_43EF40  +
or byte ptr [eax+34h] 8 +
cmp dword ptr [eax+20h] 0FFFFFFFFh +
jz loc_43EF40  +
mov dword ptr [eax+20h] 0FFFFFFFFh +
mov ecx [eax+38h] +
mov eax [edx+1Ch] +
mov eax [eax+50h] +
mov [esp+0Ch] ecx +
mov [esp+8] eax +
pop ebx  +
jmp sub_44E3B0  +
***
pop ebx  +
retn   +
***
mov edx [esp+18h+arg_4] +
mov ebx [esp+18h+arg_0] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
movzx eax byte ptr [eax+1AEh] +
mov dword ptr [ebx+44h] 0FFFFFFFFh +
mov dword ptr [ebx+48h] 0FFFFFFFFh +
mov dword ptr [ebx+4Ch] 1 +
shr al 1 +
and eax 1 +
sub eax 1 +
mov [ebx+3Ch] eax +
mov [ebx+40h] eax +
mov eax [esp+18h+arg_C] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] ebx +
mov [esp+18h+var_C] eax +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_10] eax +
call near ptr dword_413F70+60h  +
mov edx [esp+18h+arg_10] +
mov dword ptr [ebx+28h] 1 +
mov [ebx+2Ch] edx +
add esp 18h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 28h +
mov dword ptr [esp] 0FCh +
call sub_40F150  +
test eax eax +
mov ebx eax +
jz loc_43F010  +
mov eax [esp+30h] +
mov dword ptr [esp+10h] 23h +
mov dword ptr [esp+0Ch] 48h +
mov dword ptr [esp+8] offset loc_432690 +
mov [esp+4] eax +
mov [esp] ebx +
call sub_43EF50  +
test eax eax +
jz loc_43F014  +
mov dword ptr [ebx+24h] offset sub_432760 +
mov eax ebx +
add esp 28h +
pop ebx  +
retn   +
***
xor eax eax +
jmp loc_43F00B  +
***
mov [esp] ebx +
call free  +
xor eax eax +
jmp loc_43F00B  +
***
mov edx [esp+arg_0] +
xor eax eax +
mov ecx [edx+4] +
cmp dword ptr [ecx+4] 5 +
jnz locret_43F117  +
movzx ecx byte ptr [edx+28h] +
and ecx 7 +
cmp cl 1 +
jnz locret_43F117  +
mov eax [edx+0A0h] +
mov eax [eax+220h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+54h] +
mov ebx [esp+50h] +
mov dword ptr [esp+24h] 0 +
mov dword ptr [eax] 0 +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_43F153  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [ebx+28h] +
and eax 7 +
cmp al 1 +
jnz loc_43F146  +
mov dword ptr [esp+4] offset a_dynamic +
mov [esp] ebx +
call sub_410840  +
test eax eax +
mov esi eax +
jz loc_43F146  +
mov eax [eax+24h] +
test eax eax +
jz loc_43F146  +
lea eax [esp+24h] +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebx +
call sub_4111A0  +
test eax eax +
jnz loc_43F1AF  +
mov edx [esp+24h] +
xor eax eax +
test edx edx +
jz loc_43F14B  +
mov [esp] edx +
mov [esp+14h] eax +
call free  +
mov eax [esp+14h] +
jmp loc_43F14B  +
***
mov [esp+4] esi +
mov [esp] ebx +
call sub_428190  +
cmp eax 0FFFFFEFFh +
jz loc_43F193  +
mov edx [ebx+0A0h] +
mov edi [esp+24h] +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
mov eax [eax+1Ch] +
mov [esp+1Ch] eax +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx edx byte ptr [eax+6] +
mov ebp [eax+30h] +
mov eax edi +
mov [esp+14h] edx +
mov edx [esi+24h] +
add edx edi +
cmp edi edx +
jnb loc_43F284  +
mov esi edi +
mov edi edx +
jmp loc_43F210  +
add esi [esp+14h] +
cmp esi edi +
jnb loc_43F280  +
lea eax [esp+28h] +
mov [esp+8] eax +
mov [esp+4] esi +
mov [esp] ebx +
call ebp  +
mov eax [esp+28h] +
test eax eax +
jz loc_43F280  +
cmp eax 1 +
jnz loc_43F208  +
mov eax [esp+2Ch] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call sub_424010  +
test eax eax +
mov [esp+18h] eax +
jz loc_43F193  +
mov dword ptr [esp+4] 0Ch +
mov [esp] ebx +
call sub_407B20  +
test eax eax +
jz loc_43F193  +
mov ecx [esp+18h] +
mov edx [esp+54h] +
mov [eax+4] ebx +
mov [eax+8] ecx +
mov ecx [edx] +
mov [eax] ecx +
mov [edx] eax +
jmp loc_43F208  +
***
mov eax [esp+24h] +
mov [esp] eax +
call free  +
jmp loc_43F146  +
***
jmp loc_43F2A0  +
mov edx [esp+8] +
test edx edx +
jz loc_43F2C4  +
mov eax [esp+10h] +
test eax eax +
jz loc_43F2C4  +
mov eax [esp+4] +
mov ecx [eax+4] +
mov eax 1 +
cmp dword ptr [ecx+4] 5 +
jz loc_43F2D0  +
retn   +
***
mov eax 1 +
retn   +
***
mov ecx [esp+0Ch] +
mov ecx [ecx+4] +
cmp dword ptr [ecx+4] 5 +
jnz locret_43F2C2  +
mov eax [esp+10h] +
mov edx [edx+8Ch] +
mov eax [eax+8Ch] +
mov eax [eax+4] +
cmp [edx+4] eax +
setz al  +
movzx eax al +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+5Ch] +
mov eax [eax+8] +
mov esi eax +
mov edx eax +
shr esi 6 +
mov edi eax +
mov [esp+18h] esi +
mov ebx eax +
mov esi eax +
and dword ptr [esp+18h] 3Fh +
and edx 3Fh +
shr edi 12h +
mov [esp+28h] eax +
mov eax [esp+18h] +
shr ebx 16h +
and edi 0Fh +
and ebx 0Fh +
lea ecx [eax-1] +
mov eax 1 +
shl eax cl +
lea eax [eax+eax-2] +
mov [esp+20h] eax +
or dword ptr [esp+20h] 1 +
and esi 8000000h +
jz loc_43F515  +
lea eax [edx+1] +
mov [esp+1Ch] eax +
mov eax [esp+18h] +
sub [esp+1Ch] eax +
mov eax [esp+5Ch] +
mov esi [esp+58h] +
add esi [eax] +
cmp edi ebx +
jb loc_43F387  +
lea eax [ebx-1] +
cmp eax 3 +
jbe loc_43F531  +
mov dword ptr [esp+4] 1F35h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6C0  +
cmp ebx 4 +
lea ecx ds:0[ebx*8] +
jz loc_43F558  +
xor ebp ebp +
test edi edi +
jz loc_43F42A  +
mov edx edi +
xor eax eax +
sub edx ebx +
mov [esp+2Ch] edi +
cmp ebx 2 +
mov edi edx +
jz loc_43F3F0  +
cmp ebx 4 +
jz loc_43F4F3  +
cmp ebx 1 +
jz loc_43F4E5  +
mov dword ptr [esp+8] offset aGet_value +
mov dword ptr [esp+4] 1F56h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6F0  +
shl eax cl +
mov ebp eax +
mov eax [esp+50h] +
mov [esp+24h] ecx +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp] esi +
call eax  +
mov ecx [esp+24h] +
or eax ebp +
mov edx edi +
add esi ebx +
sub edx ebx +
test edi edi +
jnz loc_43F3BB  +
mov ebp [esp+20h] +
movzx ecx byte ptr [esp+1Ch] +
mov edi [esp+2Ch] +
shl ebp cl +
not ebp  +
and ebp eax +
mov ecx [esp+28h] +
xor eax eax +
test ecx 20000000h +
jnz loc_43F46E  +
mov eax ecx +
mov ecx [esp+60h] +
shl eax 3 +
sar eax 1Fh +
lea edx ds:0[edi*8] +
add eax 3 +
mov [esp+10h] ecx +
mov ecx [esp+18h] +
mov [esp+0Ch] edx +
mov dword ptr [esp+8] 0 +
mov [esp] eax +
mov [esp+4] ecx +
call loc_412860  +
movzx ecx byte ptr [esp+1Ch] +
mov esi [esp+20h] +
and esi [esp+60h] +
mov edx [esp+58h] +
shl esi cl +
mov ecx edi +
or esi ebp +
mov ebp [esp+5Ch] +
sub ecx ebx +
add edx [ebp+0] +
mov ebp ebx +
neg ebp  +
mov [esp+18h] ebp +
mov ebp ecx +
add edx ecx +
test edi edi +
jz loc_43F58B  +
cmp ebx 2 +
mov edi edx +
mov [esp+20h] eax +
mov edx esi +
mov esi [esp+50h] +
jz loc_43F5AF  +
cmp ebx 4 +
jz loc_43F5D0  +
cmp ebx 1 +
jz loc_43F593  +
mov dword ptr [esp+8] offset aPut_value +
mov dword ptr [esp+4] 1F20h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6F0  +
shl eax cl +
mov edx eax +
movzx eax byte ptr [esi] +
or eax edx +
jmp loc_43F40D  +
***
shl eax cl +
mov ebp eax +
mov eax [esp+50h] +
mov [esp+24h] ecx +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp] esi +
call eax  +
mov ecx [esp+24h] +
or eax ebp +
jmp loc_43F40D  +
***
lea eax ds:0[edi*8] +
mov [esp+1Ch] eax +
mov eax [esp+18h] +
sub [esp+1Ch] eax +
sub [esp+1Ch] edx +
jmp loc_43F36D  +
***
xor edx edx +
mov eax edi +
div  ebx +
test edx edx +
jnz loc_43F387  +
mov eax [esp+50h] +
test eax eax +
jz loc_43F387  +
test esi esi +
jnz loc_43F39B  +
jmp loc_43F387  +
***
cmp edi 4 +
nop   +
lea esi [esi+0] +
jz loc_43F580  +
mov dword ptr [esp+4] 1F39h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6C0  +
xor ecx ecx +
jmp loc_43F3AB  +
***
xor ecx ecx +
jmp loc_43F3B1  +
***
mov eax [esp+20h] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [edi] dl +
shr edx 8 +
mov ecx ebp +
add edi [esp+18h] +
sub ecx ebx +
test ebp ebp +
jz loc_43F587  +
cmp ebx 2 +
mov ebp ecx +
jnz loc_43F4B7  +
mov ecx [esi+4] +
mov [esp+1Ch] edx +
mov ecx [ecx+3Ch] +
mov [esp] edx +
mov [esp+4] edi +
call ecx  +
mov edx [esp+1Ch] +
shr edx 10h +
jmp loc_43F598  +
***
mov ecx [esi+4] +
mov ecx [ecx+30h] +
mov [esp] edx +
mov [esp+4] edi +
call ecx  +
xor edx edx +
jmp loc_43F598  +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+10h] +
mov eax [edx+14h] +
and eax 2000h +
jz loc_43F610  +
mov eax 2 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [edx] +
mov esi offset a_eh_frame_0 +
mov ecx 0Ah +
mov edi edx +
cmps   +
jz loc_43F606  +
mov edi edx +
mov esi offset a_gcc_except_ta +
mov ecx 12h +
mov edx 3 +
cmps   +
pop ebx  +
pop esi  +
pop edi  +
cmovnz eax edx +
retn   +
***
push esi  +
push ebx  +
sub esp 0Ch +
mov esi [esp+0Ch+arg_0] +
mov edi [esp+0Ch+arg_4] +
mov ebx [esi+7Ch] +
test ebx ebx +
jz loc_43F673  +
test byte ptr [ebx+17h] 2 +
jnz loc_43F6A0  +
mov edx [esi+28h] +
test edx edx +
jz loc_43F690  +
mov eax [ebx+28h] +
test eax eax +
jz loc_43F680  +
cmp edx eax +
jz loc_43F670  +
xor ebx ebx +
mov [esi+7Ch] ebx +
add esp 0Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+24h] +
cmp edx eax +
jnz loc_43F66E  +
jmp loc_43F670  +
mov eax [ebx+28h] +
mov edx [esi+24h] +
test eax eax +
jnz loc_43F66A  +
jmp loc_43F680  +
mov eax [ebx+8Ch] +
mov ebp [eax+7Ch] +
test ebp ebp +
jz loc_43F66E  +
mov ebx ebp +
jmp loc_43F6C2  +
mov eax [ebx+8Ch] +
mov ebx [eax+7Ch] +
cmp ebp ebx +
jz loc_43F66E  +
test ebx ebx +
jz loc_43F66E  +
mov ecx edi +
mov edx esi +
mov eax ebx +
call sub_4327A0  +
test eax eax +
jz loc_43F6B1  +
test ebx ebx +
jnz loc_43F65C  +
jmp loc_43F670  +
***
push edi  +
push esi  +
push ebx  +
sub esp 0DCh +
mov eax [eax+4] +
test byte ptr [edx+29h] 8 +
mov [esp+0E8h+var_B0] edx +
mov [esp+0E8h+var_BC] eax +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+0E8h+var_B8] eax +
mov eax [eax+94h] +
mov [esp+0E8h+var_84] eax +
jnz loc_43FC1B  +
mov eax [esp+0E8h+var_B0] +
mov eax [eax+0A0h] +
mov ecx [eax+928h] +
lea edi [eax+48h] +
mov [esp+0E8h+var_AC] eax +
mov [esp+0E8h+var_88] edi +
test ecx ecx +
jnz loc_43FC30  +
mov eax [esp+0E8h+var_AC] +
mov eax [eax+68h] +
mov [esp+0E8h+var_A8] eax +
mov [esp+0E8h+var_94] eax +
mov eax [esp+0E8h+var_AC] +
mov edx [esp+0E8h+var_A8] +
mov eax [eax+78h] +
test edx edx +
mov [esp+0E8h+var_A0] eax +
jnz loc_440269  +
mov eax [esp+0E8h+var_A8] +
mov ebx [esp+0E8h+var_A0] +
mov esi [ebp+2Ch] +
mov edi [ebp+30h] +
lea eax [eax+eax*4] +
lea eax [ebx+eax*4] +
cmp ebx eax +
mov [esp+0E8h+var_C0] eax +
jnb loc_43FA85  +
mov [esp+0E8h+var_C4] ebp +
mov ebx [esp+0E8h+var_A0] +
mov [esp+0E8h+var_9C] 0 +
mov ebp [esp+0E8h+var_B0] +
jmp loc_43F7BB  +
movzx eax byte ptr [ebx+0Ch] +
shr al 4 +
test al al +
jz loc_43F7D1  +
mov dword ptr [edi] 0 +
add ebx 14h +
add esi 4 +
add edi 4 +
cmp [esp+0E8h+var_C0] ebx +
jbe loc_43FA81  +
mov dword ptr [esi] 0FFFFFFFFh +
mov eax [ebp+0A0h] +
mov eax [eax+928h] +
test eax eax +
jnz loc_43F797  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_43FC60  +
mov [esp+0E8h+var_3C] offset off_476188 +
mov edx offset off_476188 +
mov ecx [esp+0E8h+var_C4] +
mov [edi] edx +
cmp [ecx+30h] edi +
jz loc_43F7A8  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_43F7A8  +
mov eax [ecx] +
movzx eax byte ptr [eax+1] +
mov edx eax +
and edx 18h +
cmp dl 18h +
jz loc_43F7A8  +
and eax 60h +
cmp al 60h +
jz loc_43F7A8  +
mov eax [ebx+10h] +
sub eax 1 +
cmp eax 0FFFFFEFEh +
ja loc_43F849  +
mov eax [esp+0E8h+var_3C] +
mov eax [eax+3Ch] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_43FD50  +
cmp eax [edx+10h] +
setnz al  +
test al al +
jnz loc_43F7A8  +
mov eax [esp+0E8h+var_AC] +
mov edx [ebx+8] +
mov eax [eax+64h] +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E8] ebp +
mov [esp+0E8h+var_E4] eax +
call sub_424010  +
test eax eax +
mov [esp+0E8h+var_B4] eax +
jz loc_43FE50  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax] +
movzx eax byte ptr [edx+1] +
mov ecx eax +
and ecx 18h +
cmp cl 10h +
jz loc_43FDF0  +
and eax 60h +
jnz loc_43FD15  +
mov eax [esp+0E8h+var_3C] +
test byte ptr [eax+16h] 80h +
jz loc_43F8C5  +
movzx eax byte ptr [edx] +
and eax 3 +
cmp al 2 +
jz loc_43F8C5  +
mov eax [ebp+4] +
mov ecx [esp+0E8h+var_B4] +
mov eax [eax+11Ch] +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] ebp +
call eax  +
test eax eax +
jnz loc_43F7A8  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 4 +
jz loc_43FD2C  +
mov eax [esp+0E8h+var_9C] +
test eax eax +
jnz loc_43F96D  +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_2C] 0 +
mov [esp+0E8h+var_38] 0 +
mov [esp+0E8h+var_34] 0 +
add dword ptr [eax+38h] 1 +
xor eax eax +
test byte ptr [ebp+2Ch] 10h +
mov [esp+0E8h+var_30] 0 +
mov byte ptr [esp+0E8h+var_2C] 4 +
mov [esp+0E8h+var_28] 0FFFFFFF1h +
jnz loc_43F932  +
mov eax [ebp+0] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_C4] +
lea ecx [esp+0E8h+var_38] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] offset off_476230 +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E8] eax +
call sub_433430  +
test eax eax +
jz loc_43FE50  +
mov [esp+0E8h+var_9C] 1 +
mov eax [ebx] +
mov [esp+0E8h+var_38] eax +
mov eax [ebx+4] +
mov [esp+0E8h+var_34] eax +
mov eax [ebx+8] +
mov [esp+0E8h+var_30] eax +
mov eax [ebx+0Ch] +
mov [esp+0E8h+var_2C] eax +
mov eax [ebx+10h] +
mov [esp+0E8h+var_28] eax +
mov eax [esp+0E8h+var_3C] +
mov eax [eax+3Ch] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_428190  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_28] eax +
jz loc_43FE50  +
mov ecx [esp+0E8h+var_3C] +
mov edx [esp+0E8h+var_C4] +
mov eax [ecx+38h] +
mov edx [edx] +
add eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_A4] ecx +
mov [esp+0E8h+var_38] eax +
mov [esp+0E8h+var_98] edx +
movzx edx byte ptr [edx] +
and edx 3 +
cmp dl 2 +
jz loc_43FA1C  +
mov edx [ecx+3Ch] +
add eax [edx+1Ch] +
movzx edx byte ptr [esp+0E8h+var_2C] +
mov [esp+0E8h+var_38] eax +
and edx 0Fh +
cmp dl 6 +
jz loc_43FE60  +
mov eax [esp+0E8h+var_BC] +
mov eax [eax+7Ch] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_98] eax +
mov eax [esp+0E8h+var_A4] +
mov [esp+0E8h+var_DC] eax +
lea eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_B4] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_E8] eax +
call sub_433430  +
test eax eax +
jz loc_43FE50  +
cmp eax 1 +
jnz loc_43F7A8  +
mov eax [esp+0E8h+var_98] +
add ebx 14h +
add esi 4 +
add edi 4 +
mov [esi-4] eax +
cmp [esp+0E8h+var_C0] ebx +
ja loc_43F7BB  +
mov ebp [esp+0E8h+var_C4] +
mov eax [esp+0E8h+var_B8] +
mov edi 20h +
mov edx 8 +
mov esi 0FFFFFFFFh +
mov eax [eax+174h] +
cmp byte ptr [eax+0Ah] 20h +
cmovnz edx edi +
mov edi [esp+0E8h+var_B0] +
setnz al  +
movzx eax al +
lea eax ds:4[eax*4] +
mov [esp+0E8h+var_98] eax +
mov eax [edi+0A0h] +
mov ebx [edi+64h] +
mov [esp+0E8h+var_C0] edx +
mov edx 0FFh +
cmovnz edx esi +
mov eax [eax+218h] +
test ebx ebx +
mov [esp+0E8h+var_74] edx +
mov [esp+0E8h+var_8C] eax +
jz loc_43FC1B  +
mov eax [esp+0E8h+var_98] +
mov [esp+0E8h+var_C4] ebp +
mov ebp ebx +
mov [esp+0E8h+var_6C] 0 +
mov [esp+0E8h+var_70] eax +
nop   +
lea esi [esi+0] +
test byte ptr [ebp+18h] 2 +
jz loc_43FC10  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_43FD60  +
mov eax [ebp+14h] +
test ah 1 +
jz loc_43FC10  +
mov edx [ebp+24h] +
test edx edx +
jnz loc_43FB39  +
test al 4 +
jz loc_43FC10  +
test eax 100000h +
jnz loc_43FC10  +
mov ecx [ebp+8Ch] +
mov ecx [ecx+30h] +
test ecx ecx +
jz loc_440944  +
mov edi [esp+0E8h+var_B8] +
mov [esp+0E8h+var_40] ecx +
test byte ptr [edi+1AEh] 40h +
jz loc_43FB78  +
mov ebx [ebp+28h] +
test ebx ebx +
jz loc_43FB78  +
cmp edx ebx +
ja loc_440240  +
test al 4 +
jnz loc_43FE84  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+12Ch] +
test eax eax +
jz loc_43FBB4  +
mov esi [esp+0E8h+var_C4] +
mov ecx [esp+0E8h+var_40] +
mov edi [esp+0E8h+var_BC] +
mov edx [esi] +
mov [esp+0E8h+var_DC] ecx +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E8] edi +
mov [esp+0E8h+var_E4] edx +
call eax  +
test eax eax +
jnz loc_43FC10  +
movzx eax word ptr [ebp+18h] +
shr ax 7 +
and eax 7 +
cmp eax 2 +
jz loc_440373  +
jle loc_4402BD  +
cmp eax 3 +
jz loc_44020A  +
cmp eax 6 +
jnz loc_4403A0  +
mov eax [esp+0E8h+var_C4] +
mov edx [esp+0E8h+var_40] +
mov eax [eax] +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_447B80  +
test eax eax +
jz loc_43FE50  +
lea esi [esi+0] +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_43FB00  +
add esp 0DCh +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+0E8h+var_B8] +
xor edx edx +
mov [esp+0E8h+var_94] 0 +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+5] +
mov eax [esp+0E8h+var_AC] +
mov eax [eax+60h] +
div  ecx +
mov [esp+0E8h+var_A8] eax +
jmp loc_43F74A  +
cmp eax 0FFFFFFF1h +
jz loc_43FD00  +
cmp eax 0FFFFFFF2h +
jnz loc_43FC83  +
mov [esp+0E8h+var_3C] offset off_4760E0 +
mov edx offset off_4760E0 +
jmp loc_43F7EC  +
mov [esp+0E8h+var_E4] eax +
mov [esp+0E8h+var_E8] ebp +
call sub_426C70  +
test eax eax +
mov [esp+0E8h+var_3C] eax +
jz loc_43F7A2  +
movzx ecx word ptr [eax+18h] +
mov edx eax +
and cx 380h +
cmp cx 100h +
jnz loc_43F7EC  +
movzx ecx byte ptr [ebx+0Ch] +
and ecx 0Fh +
cmp cl 3 +
jz loc_43F7EC  +
mov eax [eax+8Ch] +
mov edx [ebx] +
mov eax [eax+88h] +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] eax +
lea eax [esp+0E8h+var_3C] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_450BC0  +
mov [ebx] eax +
mov edx [esp+0E8h+var_3C] +
jmp loc_43F7EC  +
mov [esp+0E8h+var_3C] offset off_476230 +
mov edx offset off_476230 +
jmp loc_43F7EC  +
cmp al 40h +
jz loc_43F8A7  +
movzx eax byte ptr [ebx+0Ch] +
and eax 0Fh +
cmp al 4 +
jnz loc_43F8D4  +
test byte ptr [ebp+2Ch] 10h +
jnz loc_43F7A8  +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_9C] 1 +
add dword ptr [eax+38h] 1 +
jmp loc_43F96D  +
mov ecx [esp+0E8h+var_BC] +
cmp eax [ecx+68h] +
setnz al  +
jmp loc_43F841  +
mov edx [ebp+14h] +
mov ecx edx +
mov eax edx +
and ecx 2100000h +
cmp ecx 2000000h +
jnz loc_43FB21  +
mov eax [ebp+8Ch] +
mov ebx [ebp+3Ch] +
mov eax [eax+20h] +
cmp [esp+0E8h+var_A8] eax +
jbe loc_4401C2  +
mov edi [esp+0E8h+var_B0] +
mov ecx [edi+0A0h] +
lea edi ds:0[eax*4] +
mov esi [ecx+928h] +
test esi esi +
jnz loc_4401B0  +
mov esi [esp+0E8h+var_A0] +
lea eax [eax+eax*4] +
lea ecx [esi+eax*4] +
movzx eax byte ptr [ecx+0Ch] +
and eax 0Fh +
cmp al 3 +
jz loc_4409F0  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax+2Ch] +
mov esi [eax+edi] +
mov eax edx +
cmp esi 0FFFFFFFFh +
jz loc_440C03  +
mov edx [ebx+8Ch] +
mov [edx+20h] esi +
jmp loc_43FB21  +
mov eax [edx+20h] +
mov ecx [esp+0E8h+var_B4] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E0] 0 +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_E4] ecx +
call sub_40FFC0  +
test eax eax +
jz loc_43F7A8  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax] +
movzx eax byte ptr [edx+1] +
jmp loc_43F887  +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E8] offset aErrorBSizeOfSe +
mov [esp+0E8h+var_E4] eax +
call off_476094  +
mov [esp+0E8h+var_E8] 14h +
call sub_40C770  +
nop   +
xor eax eax +
add esp 0DCh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+0E8h+var_98] +
mov edx [ecx+1Ch] +
mov edx [edx+0C8h] +
test edx edx +
jz loc_440B28  +
sub eax [edx+1Ch] +
mov [esp+0E8h+var_38] eax +
jmp loc_43FA1C  +
mov eax [esp+0E8h+var_C4] +
mov edx [eax+1Ch] +
mov eax [eax+18h] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_438410  +
test eax eax +
mov [esp+0E8h+var_7C] eax +
jz loc_440B0E  +
mov edx [ebp+24h] +
cmp [esp+0E8h+var_98] edx +
jnb loc_43FF14  +
mov eax [ebp+0] +
mov edi offset a_ctors +
mov ecx 6 +
mov esi eax +
cmps   +
jnz loc_440310  +
mov ecx [ebp+3Ch] +
mov edi offset a_init_array +
mov esi [ecx] +
mov ecx 0Ch +
cmps   +
jnz loc_440310  +
movzx eax byte ptr [eax+6] +
cmp al 2Eh +
jz loc_43FEFD  +
test al al +
jnz loc_43FF14  +
mov eax [esp+0E8h+var_98] +
imul eax [ebp+4Ch] +
cmp edx eax +
jnz loc_43FE2A  +
or dword ptr [ebp+14h] 4000000h +
movzx eax word ptr [ebp+18h] +
shr ax 7 +
and eax 7 +
lea ecx [eax-1] +
cmp ecx 5 +
ja loc_43FF40  +
mov eax 1 +
shl eax cl +
test al 25h +
jz loc_43FF40  +
mov [esp+0E8h+var_A4] 0FFFFFFFFh +
jmp loc_43FF75  +
mov eax [ebp+94h] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+114h] +
test eax eax +
jz loc_43FF62  +
mov [esp+0E8h+var_E8] ebp +
call eax  +
test eax eax +
jnz loc_43FF32  +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+118h] +
mov [esp+0E8h+var_E8] ebp +
call eax  +
mov [esp+0E8h+var_A4] eax +
mov edi [esp+0E8h+var_B8] +
mov eax [ebp+4Ch] +
mov ecx [esp+0E8h+var_7C] +
mov esi [esp+0E8h+var_A4] +
mov edx [edi+174h] +
lea eax [eax+eax*2] +
shl eax 2 +
mov edi ecx +
movzx edx byte ptr [edx+9] +
imul eax edx +
add eax ecx +
mov ebx eax +
mov [esp+0E8h+var_B4] eax +
mov eax esi +
and eax 1 +
mov [esp+0E8h+var_90] eax +
mov eax esi +
and eax 2 +
cmp ecx ebx +
mov [esp+0E8h+var_80] eax +
jnb loc_440425  +
mov [esp+0E8h+var_9C] ebp +
jmp loc_440061  +
mov eax [esp+0E8h+var_B0] +
mov eax [eax+0A0h] +
mov esi [eax+928h] +
mov eax [esp+0E8h+var_C4] +
test esi esi +
mov eax [eax+30h] +
lea esi [eax+ebx*4] +
mov eax [esi] +
jz loc_43FFEC  +
test eax eax +
jz loc_44007B  +
mov ecx [esp+0E8h+var_A0] +
lea edx [ebx+ebx*4] +
lea edx [ecx+edx*4] +
movzx ecx byte ptr [edx+0Ch] +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_88] +
mov [esp+0E8h+var_E0] edx +
mov ebp ecx +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B0] +
and ebp 0Fh +
mov [esp+0E8h+var_E8] eax +
call sub_424560  +
mov [esp+0E8h+var_3C] eax +
lea eax [ebp-8] +
cmp eax 1 +
jbe loc_4400DE  +
test esi esi +
jz loc_440054  +
cmp [esp+0E8h+var_A4] 0FFFFFFFFh +
jz loc_440054  +
mov ebx [esi] +
test ebx ebx +
jz loc_440054  +
cmp ebx offset off_476230 +
jz loc_440054  +
cmp dword ptr [ebx+3Ch] offset off_476230 +
jz loc_4407B2  +
add edi 0Ch +
cmp [esp+0E8h+var_B4] edi +
jbe loc_440421  +
mov edx [edi+4] +
movzx ecx byte ptr [esp+0E8h+var_C0] +
mov ebx edx +
shr ebx cl +
test ebx ebx +
jz loc_440054  +
cmp [esp+0E8h+var_A8] ebx +
ja loc_43FFC4  +
mov esi [esp+0E8h+var_8C] +
mov eax ebx +
sub eax [esp+0E8h+var_94] +
mov eax [esi+eax*4] +
test eax eax +
jnz loc_440094  +
jmp loc_440B89  +
mov eax [eax+14h] +
movzx edx byte ptr [eax+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_440091  +
test byte ptr [eax+0Dh] 1 +
movzx ebp byte ptr [eax+30h] +
jz loc_4400B6  +
sub edx 3 +
cmp dl 1 +
jbe loc_440340  +
movzx esi byte ptr [eax+0Ch] +
lea edx [eax+14h] +
lea ecx [esi-3] +
xor esi esi +
cmp cl 1 +
cmovbe esi edx +
mov eax [eax+4] +
mov [esp+0E8h+var_3C] eax +
lea eax [ebp-8] +
cmp eax 1 +
ja loc_44002E  +
mov ecx [esp+0E8h+var_C4] +
mov eax [ecx] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_44002E  +
xor eax eax +
cmp ebp 9 +
mov esi [esp+0E8h+var_9C] +
setz al  +
mov [esp+0E8h+var_D8] eax +
mov eax [esp+0E8h+var_A8] +
lea edx [esp+0E8h+var_3C] +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_A0] +
mov [esp+0E8h+var_E0] eax +
mov eax [esi+3Ch] +
mov eax [eax+1Ch] +
add eax [esi+38h] +
add eax [edi] +
mov [esp+0E8h+var_E8] ecx +
mov ecx [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E4] eax +
lea eax [esp+0E8h+var_38] +
call sub_434D10  +
test eax eax +
jz loc_43FE50  +
cmp [esp+0E8h+var_A8] ebx +
mov esi [esp+0E8h+var_38] +
jbe loc_440A13  +
mov ecx [esp+0E8h+var_A0] +
lea eax [ebx+ebx*4] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax+0Ch] +
shr dl 4 +
test dl dl +
jz loc_440CEB  +
mov eax [esp+0E8h+var_B0] +
xor ebp ebp +
mov eax [eax+0A0h] +
mov ecx [eax+928h] +
test ecx ecx +
jnz loc_440A21  +
mov [esp+0E8h+var_E4] 1DE1h +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_40C6C0  +
mov eax [esp+0E8h+var_B0] +
mov eax [eax+0A0h] +
jmp loc_440A21  +
mov esi [esp+0E8h+var_C4] +
mov ecx [esi+30h] +
mov ecx [ecx+eax*4] +
test ecx ecx +
jnz loc_43FDAE  +
mov edi [esp+0E8h+var_8C] +
sub eax [esp+0E8h+var_94] +
mov eax [edi+eax*4] +
movzx edi byte ptr [eax+0Ch] +
lea ecx [edi-6] +
cmp cl 1 +
ja loc_4401EF  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx esi byte ptr [eax+0Ch] +
lea ecx [esi-6] +
cmp cl 1 +
jbe loc_4401E0  +
mov dword ptr [eax+1Ch] 0FFFFFFFEh +
mov eax [ebx+8Ch] +
mov dword ptr [eax+20h] 0FFFFFFFEh +
mov eax edx +
jmp loc_43FB21  +
mov eax [esp+0E8h+var_C4] +
mov edx [esp+0E8h+var_40] +
mov eax [eax] +
mov [esp+0E8h+var_DC] edx +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_447E00  +
test eax eax +
jnz loc_43FC10  +
jmp loc_43FE50  +
mov edi [esp+0E8h+var_C4] +
mov eax [edi+14h] +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_E8] eax +
call memcpy  +
mov eax [edi+14h] +
mov [esp+0E8h+var_40] eax +
mov eax [ebp+14h] +
jmp loc_43FB78  +
test eax eax +
jnz loc_43F761  +
mov eax [ebp+28h] +
mov ecx [ebp+24h] +
mov edx [ebp+20h] +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_D8] eax +
mov eax [esp+0E8h+var_A8] +
mov [esp+0E8h+var_D0] ecx +
mov [esp+0E8h+var_D4] edx +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_88] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_424210  +
test eax eax +
mov [esp+0E8h+var_A0] eax +
jnz loc_43F761  +
xor eax eax +
jmp loc_43FE52  +
cmp eax 1 +
jnz loc_4403A0  +
mov eax [esp+0E8h+var_40] +
mov [esp+0E8h+var_D8] eax +
mov eax [ebp+8Ch] +
mov [esp+0E8h+var_E0] ebp +
add eax 88h +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_C4] +
mov eax [eax] +
mov eax [eax+1Ch] +
sub eax 0FFFFFF80h +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_451980  +
test eax eax +
jnz loc_43FC10  +
jmp loc_43FE50  +
mov edi offset a_dtors +
mov ecx 6 +
mov esi eax +
cmps   +
jnz loc_43FF14  +
mov ecx [ebp+3Ch] +
mov edi offset a_fini_array +
mov esi [ecx] +
mov ecx 0Ch +
cmps   +
jnz loc_43FF14  +
jmp loc_43FEF1  +
mov edx [eax+14h] +
test byte ptr [edx+16h] 10h +
jnz loc_4400B6  +
mov edx [edx+94h] +
test edx edx +
jz loc_4400B6  +
test byte ptr [edx+2Ah] 20h +
jz loc_4400B6  +
mov byte ptr [eax+0Ch] 1 +
xor esi esi +
mov [eax+14h] edx +
jmp loc_4400C8  +
mov eax [ebp+8Ch] +
mov eax [eax+88h] +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_450940  +
test eax eax +
jnz loc_43FC10  +
jmp loc_43FE50  +
mov eax [ebp+14h] +
test ah 80h +
jnz loc_43FC10  +
xor edi edi +
test eax 4000000h +
mov esi [ebp+38h] +
mov ebx [ebp+24h] +
jz loc_440A71  +
sub ebx [esp+0E8h+var_98] +
mov eax ebp +
mov ebp ebx +
mov ebx eax +
jmp loc_4403E4  +
test ebp ebp +
jz loc_440CE4  +
add esi [esp+0E8h+var_70] +
adc edi [esp+0E8h+var_6C] +
sub ebp [esp+0E8h+var_98] +
mov eax [ebx+3Ch] +
mov [esp+0E8h+var_DC] esi +
mov [esp+0E8h+var_D8] edi +
mov ecx eax +
mov eax [esp+0E8h+var_98] +
mov [esp+0E8h+var_E4] ecx +
mov ecx [esp+0E8h+var_BC] +
mov [esp+0E8h+var_D4] eax +
mov eax [esp+0E8h+var_40] +
mov [esp+0E8h+var_E8] ecx +
add eax ebp +
mov [esp+0E8h+var_E0] eax +
call sub_410F50  +
test eax eax +
jnz loc_4403D0  +
xor eax eax +
jmp loc_43FE52  +
mov ebp [esp+0E8h+var_9C] +
mov eax [esp+0E8h+var_C4] +
mov edi [esp+0E8h+var_A0] +
mov edx [eax+30h] +
mov eax [eax] +
mov [esp+0E8h+var_D0] edi +
mov edi [esp+0E8h+var_7C] +
mov [esp+0E8h+var_DC] ebp +
mov [esp+0E8h+var_CC] edx +
mov edx [esp+0E8h+var_40] +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_D4] edi +
mov edi [esp+0E8h+var_B0] +
mov [esp+0E8h+var_D8] edx +
mov [esp+0E8h+var_E8] eax +
mov eax [esp+0E8h+var_84] +
mov [esp+0E8h+var_E0] edi +
call eax  +
test eax eax +
jz loc_43FE50  +
cmp eax 2 +
mov eax [esp+0E8h+var_C4] +
mov ecx [eax] +
movzx edi byte ptr [ecx] +
jz loc_440B20  +
and edi 3 +
mov eax edi +
cmp al 2 +
jz loc_440497  +
cmp byte ptr [ecx+2] 0 +
jns loc_43FB80  +
mov eax [ebp+8Ch] +
mov ebx eax +
mov [esp+0E8h+var_64] eax +
mov eax [ebp+3Ch] +
mov [esp+0E8h+var_80] eax +
mov eax [eax+8Ch] +
mov esi eax +
mov [esp+0E8h+var_50] eax +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
mov edx eax +
mov byte ptr [esp+0E8h+var_90] al +
mov [esp+0E8h+var_B4] eax +
mov eax [ebp+4Ch] +
lea eax [eax+eax*2] +
shl eax 2 +
imul eax edx +
mov edx [esi+40h] +
add eax [esp+0E8h+var_7C] +
mov [esp+0E8h+var_A4] eax +
mov eax [esi+48h] +
mov esi [ebx+3Ch] +
lea eax [eax+edx*4] +
test esi esi +
mov [esp+0E8h+var_60] eax +
jz loc_440CF9  +
mov ebx [esi+28h] +
test ebx ebx +
jnz loc_440A5A  +
add ebx [esp+0E8h+var_7C] +
mov [esp+0E8h+var_9C] ebx +
mov eax [ebp+38h] +
mov [esp+0E8h+var_B4] eax +
mov eax edi +
cmp al 2 +
jz loc_44052E  +
mov eax [esp+0E8h+var_80] +
mov eax [eax+1Ch] +
add [esp+0E8h+var_B4] eax +
mov eax [esp+0E8h+var_A4] +
mov edi [esp+0E8h+var_7C] +
cmp edi eax +
jnb loc_440D5C  +
mov esi [esp+0E8h+var_60] +
movzx eax byte ptr [esp+0E8h+var_90] +
mov [esp+0E8h+var_68] 0 +
mov ebx [esp+0E8h+var_C4] +
mov [esp+0E8h+var_5C] 0 +
mov [esp+0E8h+var_90] esi +
mov esi edi +
xor edi edi +
jmp loc_4405A4  +
mov eax [esp+0E8h+var_B4] +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov [esi] eax +
add esi 0Ch +
add edi 1 +
cmp [esp+0E8h+var_A4] esi +
jbe loc_44097D  +
mov eax [esp+0E8h+var_B8] +
mov ecx [ebx] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
cmp eax edi +
jz loc_4406D4  +
cmp esi [esp+0E8h+var_9C] +
jz loc_440D7F  +
mov eax [esi] +
mov [esp+0E8h+var_E0] ebp +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_DC] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_431800  +
cmp eax 0FFFFFFFDh +
mov [esi] eax +
ja loc_440570  +
mov edx [ebx] +
add eax [ebp+38h] +
mov [esi] eax +
movzx edx byte ptr [edx] +
mov ecx eax +
mov [esp+0E8h+var_B4] eax +
and edx 3 +
cmp dl 2 +
jz loc_4405FB  +
mov eax [ebp+3Ch] +
add ecx [eax+1Ch] +
mov [esi] ecx +
mov [esp+0E8h+var_B4] ecx +
mov eax [esi+4] +
movzx ecx byte ptr [esp+0E8h+var_C0] +
shr eax cl +
test eax eax +
jz loc_440584  +
mov ecx [esp+0E8h+var_B0] +
cmp [esp+0E8h+var_A8] eax +
mov edx [ecx+0A0h] +
jbe loc_4406E0  +
cmp dword ptr [edx+928h] 0 +
lea ecx ds:0[eax*4] +
mov [esp+0E8h+var_80] ecx +
jz loc_440643  +
mov ecx [ebx+30h] +
mov ecx [ecx+eax*4] +
test ecx ecx +
jz loc_4406E0  +
mov edx [esp+0E8h+var_90] +
lea eax [eax+eax*4] +
mov dword ptr [edx] 0 +
mov edx [esp+0E8h+var_A0] +
lea eax [edx+eax*4] +
mov edx [eax] +
mov [esp+0E8h+var_38] edx +
mov edx [eax+4] +
mov [esp+0E8h+var_34] edx +
mov ecx [eax+8] +
mov [esp+0E8h+var_30] ecx +
mov edx [eax+0Ch] +
mov [esp+0E8h+var_2C] edx +
mov eax [eax+10h] +
mov edx [esp+0E8h+var_80] +
mov [esp+0E8h+var_28] eax +
mov eax [ebx+30h] +
mov eax [eax+edx] +
mov [esp+0E8h+var_78] eax +
movzx eax byte ptr [esp+0E8h+var_2C] +
and eax 0Fh +
cmp al 3 +
jz loc_440744  +
mov eax [ebx+2Ch] +
mov edx [esp+0E8h+var_80] +
mov eax [eax+edx] +
cmp eax 0FFFFFFFFh +
jz loc_440807  +
movzx ecx byte ptr [esp+0E8h+var_C0] +
shl eax cl +
mov edx [esp+0E8h+var_74] +
and edx [esi+4] +
or edx eax +
mov [esi+4] edx +
jmp loc_440584  +
add [esp+0E8h+var_90] 4 +
xor edi edi +
jmp loc_4405AC  +
mov edx [edx+218h] +
sub eax [esp+0E8h+var_94] +
mov eax [edx+eax*4] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
ja loc_44070F  +
lea esi [esi+0] +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_440700  +
mov edx [eax+1Ch] +
test edx edx +
js loc_440732  +
mov [esp+0E8h+var_E4] 281Ch +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
mov [esp+0E8h+var_80] eax +
call sub_40C6C0  +
mov eax [esp+0E8h+var_80] +
mov ecx [esp+0E8h+var_90] +
mov dword ptr [eax+1Ch] 0FFFFFFFEh +
mov [ecx] eax +
jmp loc_440584  +
cmp [esp+0E8h+var_78] offset off_476230 +
jz loc_440B82  +
mov eax [esp+0E8h+var_78] +
test eax eax +
jz loc_440D49  +
mov ecx [eax+94h] +
test ecx ecx +
jz loc_440D49  +
mov eax [esp+0E8h+var_78] +
mov edx [eax+3Ch] +
cmp edx offset off_476230 +
jz loc_440B62  +
mov eax [edx+88h] +
test eax eax +
jz loc_440BD8  +
movzx ecx byte ptr [esp+0E8h+var_C0] +
shl eax cl +
mov edx [esp+0E8h+var_68] +
test edx edx +
jz loc_4406C3  +
mov ecx [esp+0E8h+var_78] +
mov edx [ecx+38h] +
add [esi+8] edx +
jmp loc_4406C3  +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 100h +
jz loc_440054  +
cmp ax 200h +
jz loc_440054  +
mov edx [esp+0E8h+var_90] +
test edx edx +
jnz loc_440D06  +
mov eax [esp+0E8h+var_80] +
test eax eax +
jz loc_440054  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax] +
mov [esp+0E8h+var_E8] ebx +
mov [esp+0E8h+var_E4] eax +
call sub_43F640  +
test eax eax +
jz loc_440054  +
mov [esi] eax +
jmp loc_440054  +
mov eax [ebx] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jz loc_440D6C  +
mov eax [esp+0E8h+var_AC] +
mov eax [eax+64h] +
mov [esp+0E8h+var_E0] ecx +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_424010  +
test eax eax +
mov [esp+0E8h+var_58] eax +
jz loc_43FE50  +
mov eax [esp+0E8h+var_78] +
mov edx [esp+0E8h+var_BC] +
mov ecx [eax+3Ch] +
mov [esp+0E8h+var_E8] edx +
mov [esp+0E8h+var_E4] ecx +
mov [esp+0E8h+var_54] ecx +
call sub_428190  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_28] eax +
jz loc_43FE50  +
mov eax [esp+0E8h+var_78] +
mov ecx [ebx] +
mov eax [eax+38h] +
add eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_4C] ecx +
mov [esp+0E8h+var_38] eax +
movzx edx byte ptr [ecx] +
and edx 3 +
cmp dl 2 +
jz loc_4408DF  +
mov ecx [esp+0E8h+var_54] +
add eax [ecx+1Ch] +
mov edx eax +
mov [esp+0E8h+var_38] eax +
movzx eax byte ptr [esp+0E8h+var_2C] +
and eax 0Fh +
cmp al 6 +
jnz loc_4408DF  +
mov eax [esp+0E8h+var_4C] +
mov eax [eax+1Ch] +
mov eax [eax+0C8h] +
test eax eax +
jz loc_440DD5  +
sub edx [eax+1Ch] +
mov [esp+0E8h+var_38] edx +
mov eax [esp+0E8h+var_BC] +
mov edx [eax+7Ch] +
mov eax [esp+0E8h+var_78] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_E8] ebx +
mov [esp+0E8h+var_54] edx +
mov [esp+0E8h+var_DC] eax +
lea eax [esp+0E8h+var_38] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_58] +
mov [esp+0E8h+var_E4] eax +
call sub_433430  +
test eax eax +
jz loc_43FE50  +
cmp eax 1 +
jnz loc_440DB9  +
mov eax [ebx+2Ch] +
mov edx [esp+0E8h+var_54] +
mov ecx [esp+0E8h+var_80] +
mov [eax+ecx] edx +
mov eax edx +
jmp loc_4406BC  +
mov eax [esp+0E8h+var_C4] +
mov eax [eax+14h] +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_40] eax +
lea eax [esp+0E8h+var_40] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E8] eax +
call sub_41F0A0  +
test eax eax +
jz loc_43FE50  +
mov eax [ebp+14h] +
jmp loc_43FB78  +
mov eax [esp+0E8h+var_64] +
mov esi [eax+3Ch] +
test esi esi +
jz loc_440996  +
mov ecx [esi+18h] +
test ecx ecx +
jnz loc_440AA8  +
mov eax [esp+0E8h+var_64] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_43FB80  +
mov edx [eax+18h] +
test edx edx +
jz loc_43FB80  +
mov edi [esp+0E8h+var_B8] +
mov edx [edi+0F0h] +
mov edi [esp+0E8h+var_5C] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_D8] edi +
mov edi [esp+0E8h+var_7C] +
mov [esp+0E8h+var_E8] eax +
mov [esp+0E8h+var_DC] edi +
call edx  +
test eax eax +
jnz loc_43FB80  +
xor eax eax +
jmp loc_43FE52  +
mov esi [esp+0E8h+var_C4] +
mov eax [ebx+8Ch] +
mov ecx [esi+30h] +
mov ecx [ecx+edi] +
mov ecx [ecx+3Ch] +
mov ecx [ecx+88h] +
mov [eax+20h] ecx +
mov eax edx +
jmp loc_43FB21  +
mov eax [esp+0E8h+var_B0] +
mov ebp [esp+0E8h+var_A8] +
mov eax [eax+0A0h] +
mov eax [eax+218h] +
sub ebx ebp +
mov eax [eax+ebx*4] +
movzx ebx byte ptr [eax+0Ch] +
lea edx [ebx-6] +
cmp dl 1 +
ja loc_440A47  +
mov eax [eax+14h] +
movzx ebx byte ptr [eax+0Ch] +
lea edx [ebx-6] +
cmp dl 1 +
jbe loc_440A38  +
mov byte ptr [eax+0Ch] 3 +
mov [eax+18h] esi +
mov dword ptr [eax+14h] offset off_476230 +
jmp loc_440054  +
mov eax [esi+18h] +
xor edx edx +
div  ebx +
imul eax [esp+0E8h+var_B4] +
lea ebx [eax+eax*2] +
shl ebx 2 +
jmp loc_44050E  +
mov eax [ebp+3Ch] +
mov edx [esp+0E8h+var_40] +
mov [esp+0E8h+var_D4] ebx +
mov [esp+0E8h+var_DC] esi +
mov [esp+0E8h+var_E4] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_D8] edi +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E8] eax +
call sub_410F50  +
test eax eax +
jnz loc_43FC10  +
jmp loc_43FE50  +
mov edi [esp+0E8h+var_60] +
mov eax [esp+0E8h+var_B8] +
mov eax [eax+0F0h] +
mov [esp+0E8h+var_D8] edi +
mov edi [esp+0E8h+var_7C] +
mov [esp+0E8h+var_E0] esi +
mov [esp+0E8h+var_E4] ebp +
mov [esp+0E8h+var_DC] edi +
mov edi [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] edi +
call eax  +
test eax eax +
jz loc_43FE50  +
mov ecx [esi+28h] +
xor eax eax +
test ecx ecx +
jz loc_440AEE  +
mov eax [esi+18h] +
xor edx edx +
div  ecx +
mov edi [esp+0E8h+var_B8] +
mov edx [edi+174h] +
movzx edx byte ptr [edx+9] +
lea edx [edx+edx*2] +
shl edx 2 +
imul edx eax +
add [esp+0E8h+var_7C] edx +
jmp loc_440996  +
mov edi [ebp+4Ch] +
test edi edi +
jz loc_43FEBA  +
xor eax eax +
jmp loc_43FE52  +
and edi 3 +
jmp loc_440497  +
mov [esp+0E8h+var_E4] 2656h +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_40C6C0  +
mov ecx [esp+0E8h+var_C4] +
mov eax [esp+0E8h+var_38] +
mov edx [ecx] +
mov ecx [esp+0E8h+var_3C] +
mov edx [edx+1Ch] +
mov [esp+0E8h+var_A4] ecx +
mov edx [edx+0C8h] +
jmp loc_43FE75  +
mov eax [eax+7Ch] +
test eax eax +
jz loc_440B82  +
mov edx [eax+3Ch] +
test edx edx +
jz loc_440B82  +
mov eax [edx+1Ch] +
sub [esi+8] eax +
cmp edx offset off_476230 +
jnz loc_44077F  +
xor eax eax +
jmp loc_440794  +
lea esi [esp+0E8h+var_38] +
mov ebx [esp+0E8h+var_9C] +
mov [esp+0E8h+var_E0] edx +
mov [esp+0E8h+var_E4] offset a08lx_2 +
mov [esp+0E8h+var_E8] esi +
call sprintf  +
mov eax [esp+0E8h+var_B0] +
mov [esp+0E8h+var_DC] esi +
mov [esp+0E8h+var_E0] ebx +
mov [esp+0E8h+var_E8] offset aErrorBContains +
mov [esp+0E8h+var_E4] eax +
call off_476094  +
mov [esp+0E8h+var_E8] 11h +
call sub_40C770  +
xor eax eax +
jmp loc_43FE52  +
mov eax [edx+1Ch] +
add [esi+8] eax +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] eax +
call sub_416C30  +
mov edx [eax+1Ch] +
sub [esi+8] edx +
mov eax [eax+88h] +
jmp loc_44078D  +
mov eax [ecx] +
mov esi [esp+0E8h+var_C4] +
mov [esp+0E8h+var_38] eax +
mov eax [ecx+4] +
mov [esp+0E8h+var_34] eax +
mov eax [ecx+8] +
mov [esp+0E8h+var_30] eax +
mov edx [ecx+0Ch] +
mov [esp+0E8h+var_2C] edx +
mov edx [ecx+10h] +
mov ecx [esp+0E8h+var_AC] +
mov [esp+0E8h+var_28] edx +
mov edx [esi+30h] +
mov edx [edx+edi] +
mov esi [edx+3Ch] +
mov edx [ecx+64h] +
mov ecx [esp+0E8h+var_B0] +
mov [esp+0E8h+var_E0] eax +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] ecx +
call sub_424010  +
test eax eax +
mov [esp+0E8h+var_B4] eax +
jz loc_43FE50  +
mov [esp+0E8h+var_E4] esi +
mov esi [esp+0E8h+var_BC] +
mov [esp+0E8h+var_E8] esi +
call sub_428190  +
cmp eax 0FFFFFEFFh +
mov [esp+0E8h+var_28] eax +
jz loc_43FE50  +
mov eax [ebp+38h] +
add [esp+0E8h+var_38] eax +
lea eax [esp+0E8h+var_38] +
mov esi [esi+7Ch] +
mov edx [esp+0E8h+var_B4] +
mov [esp+0E8h+var_E0] eax +
mov eax [esp+0E8h+var_C4] +
mov [esp+0E8h+var_D8] 0 +
mov [esp+0E8h+var_DC] ebp +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E8] eax +
call sub_433430  +
test eax eax +
jz loc_43FE50  +
cmp eax 1 +
jnz loc_440E00  +
mov eax [esp+0E8h+var_C4] +
add edi [eax+2Ch] +
mov eax [ebp+14h] +
mov [edi] esi +
jmp loc_43FDDC  +
mov ebp ebx +
jmp loc_43FC10  +
mov dword ptr [eax+10h] 0FFFFFFF1h +
mov [eax] esi +
jmp loc_440054  +
mov eax [esp+0E8h+var_7C] +
mov [esp+0E8h+var_9C] eax +
jmp loc_440516  +
mov eax [esp+0E8h+var_C4] +
mov edx [ebx+94h] +
mov ecx [esp+0E8h+var_B0] +
mov eax [eax] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+0E8h+var_D4] edx +
mov edx [esp+0E8h+var_3C] +
mov [esp+0E8h+var_DC] ecx +
mov ecx [esp+0E8h+var_9C] +
mov [esp+0E8h+var_D8] ebx +
mov [esp+0E8h+var_E8] offset aXSReferencedIn +
mov [esp+0E8h+var_E4] edx +
mov [esp+0E8h+var_E0] ecx +
call eax  +
jmp loc_4407DA  +
mov [esp+0E8h+var_E8] 11h +
call sub_40C770  +
xor eax eax +
jmp loc_43FE52  +
mov [esp+0E8h+var_5C] 0 +
jmp loc_440987  +
mov [esp+0E8h+var_E8] 5 +
call sub_40C770  +
xor eax eax +
jmp loc_43FE52  +
mov eax [esp+0E8h+var_50] +
mov edx [eax+50h] +
mov eax [eax+58h] +
lea eax [eax+edx*4] +
mov edx eax +
mov [esp+0E8h+var_90] eax +
mov eax [esp+0E8h+var_B8] +
mov [esp+0E8h+var_5C] edx +
movzx eax byte ptr [eax+1ACh] +
shr al 6 +
and eax 1 +
mov [esp+0E8h+var_68] eax +
jmp loc_4405B6  +
mov [esp+0E8h+var_E0] offset aElf_link_input +
mov [esp+0E8h+var_E4] 2893h +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_40C6F0  +
mov [esp+0E8h+var_E4] 2884h +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_40C6C0  +
mov eax [ebx] +
mov edx [esp+0E8h+var_38] +
mov eax [eax+1Ch] +
mov eax [eax+0C8h] +
jmp loc_4408D5  +
mov [esp+0E8h+var_E0] offset aElf_link_input +
mov [esp+0E8h+var_E4] 26B6h +
mov [esp+0E8h+var_E8] offset a____Binutils_3 +
call sub_40C6F0  +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 0FCh +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1C0] eax +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_440E60  +
xor ebx ebx +
add esp 0FCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+1F4h+var_E0] +
movzx edx byte ptr [ecx] +
test dl 1 +
jnz loc_441869  +
mov ecx [eax+30h] +
and edx 3 +
mov eax [eax+38h] +
cmp dl 2 +
mov [esp+1F4h+var_1C4] 1 +
mov [esp+1F4h+var_19C] ecx +
mov [esp+1F4h+var_198] eax +
jz loc_440EA5  +
mov eax [esp+1F4h+var_E0] +
movsx eax byte ptr [eax+2] +
mov [esp+1F4h+var_1C4] eax +
shr [esp+1F4h+var_1C4] 1Fh +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_140] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_13C] eax +
call sub_44E1B0  +
test eax eax +
mov [esp+1F4h+var_138] eax +
jz loc_440E4E  +
mov eax [esp+1F4h+var_19C] +
test eax eax +
jnz loc_441A1A  +
mov [esp+1F4h+var_134] 0 +
mov [esp+1F4h+var_130] 0 +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_12C] 0 +
mov [esp+1F4h+var_128] 0 +
mov [esp+1F4h+var_124] 0 +
mov eax [eax+4] +
mov [esp+1F4h+var_120] 0 +
mov [esp+1F4h+var_11C] 0 +
mov [esp+1F4h+var_118] 0 +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_114] 0 +
mov [esp+1F4h+var_110] 0 +
mov [esp+1F4h+var_10C] 0 +
mov ebp [eax+188h] +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_108] 0 +
mov [esp+1F4h+var_1BC] 0 +
mov ebx [eax+64h] +
test ebx ebx +
jz loc_4425DF  +
mov [esp+1F4h+var_1A4] 0 +
lea esi [esi+0] +
test ebp ebp +
mov esi [ebx] +
jz loc_440FB6  +
mov [esp+1F4h+var_1F0] ebp +
mov [esp+1F4h+var_1F4] esi +
call strcmp  +
test eax eax +
jz loc_440FC4  +
mov edi offset a_gnu_attribute +
mov ecx 10h +
cmps   +
jnz loc_44100E  +
mov eax [ebx+0A0h] +
test eax eax +
jnz loc_440FD6  +
jmp loc_440FEC  +
mov eax [eax] +
test eax eax +
jz loc_440FEC  +
cmp dword ptr [eax+4] 1 +
jnz loc_440FD0  +
mov edx [eax+10h] +
mov eax [eax] +
and dword ptr [edx+14h] 0FFFFFEFFh +
test eax eax +
jnz loc_440FD6  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_44EAC0  +
test eax eax +
mov [esp+1F4h+var_1BC] eax +
jnz loc_4416D0  +
or dword ptr [ebx+14h] 8000h +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_440FA0  +
mov eax [esp+1F4h+var_E4] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_4425DB  +
mov [esp+1F4h+var_1CC] 0 +
mov edi ebp +
mov [esp+1F4h+var_1B0] 0 +
mov [esp+1F4h+var_1B8] 0 +
mov [esp+1F4h+var_1AC] 0 +
mov [esp+1F4h+var_1A8] 0 +
mov [esp+1F4h+var_1D4] 0 +
lea esi [esi+0] +
mov esi [edi+0A0h] +
mov ebp [edi+8Ch] +
mov dword ptr [edi+4Ch] 0 +
test esi esi +
jnz loc_441092  +
jmp loc_4416C0  +
cmp eax 1 +
jz loc_4414F8  +
mov esi [esi] +
test esi esi +
lea esi [esi+0] +
jz loc_4410B9  +
mov eax [esi+4] +
lea edx [eax-3] +
cmp edx 1 +
ja loc_441080  +
add dword ptr [edi+4Ch] 1 +
mov ecx 1 +
test byte ptr [edi+19h] 4 +
jz loc_4414F0  +
mov esi [esi] +
add [ebp+50h] ecx +
test esi esi +
jnz loc_441092  +
mov edx [edi+4Ch] +
test edx edx +
jz loc_4416C0  +
mov eax [edi+14h] +
or eax 4 +
mov [edi+14h] eax +
test al 1 +
jnz loc_4410DE  +
test byte ptr [edi+18h] 1 +
jnz loc_4410DE  +
mov dword ptr [edi+1Ch] 0 +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_441060  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_441106  +
mov eax [esp+1F4h+var_1CC] +
test eax eax +
jnz loc_441886  +
mov eax [esp+1F4h+var_E0] +
mov edi [esp+1F4h+var_E4] +
movzx edx byte ptr [eax+1] +
mov eax 1 +
and edx 18h +
cmp dl 18h +
cmovz eax [esp+1F4h+var_1C4] +
test byte ptr [edi+2Bh] 10h +
mov [edi+7Ch] eax +
jnz loc_441A51  +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_428260  +
test eax eax +
jz loc_44183C  +
mov eax [esp+1F4h+var_E4] +
mov esi [eax+64h] +
test esi esi +
jz loc_44120A  +
mov edi [esp+1F4h+var_E4] +
jmp loc_44117D  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_44120A  +
test byte ptr [esi+14h] 4 +
mov ebx [esi+8Ch] +
jz loc_4411BB  +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_4411A2  +
lea edx [ebx+3Ch] +
mov eax edi +
call sub_434850  +
test eax eax +
jz loc_44183C  +
mov eax [ebx+4Ch] +
test eax eax +
jz loc_4411BB  +
lea edx [ebx+4Ch] +
mov eax edi +
call sub_434850  +
test eax eax +
jz loc_44183C  +
mov edx [ebx+10h] +
and edx [ebx+14h] +
mov dword ptr [ebx+40h] 0 +
mov dword ptr [ebx+50h] 0 +
cmp edx 0FFFFFFFFh +
jnz loc_441172  +
test byte ptr [esi+17h] 8 +
mov eax [ebx+30h] +
jz loc_442696  +
test eax eax +
jnz loc_442696  +
mov eax [ebx+18h] +
mov [esp+1F4h+var_1F4] eax +
call sub_40EFC0  +
test eax eax +
jz loc_44183C  +
mov esi [esi+0Ch] +
mov [ebx+30h] eax +
test esi esi +
jnz loc_44117D  +
mov eax [esp+1F4h+var_E4] +
mov dword ptr [eax+7Ch] 0 +
mov eax [eax+0A0h] +
mov edi eax +
mov dword ptr [eax+4Ch] 2 +
mov [esp+1F4h+var_1B4] eax +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx edx byte ptr [eax+5] +
mov [edi+70h] edx +
movzx ecx byte ptr [eax+0Bh] +
mov eax 1 +
shl eax cl +
cmp [esp+1F4h+var_1B8] 13h +
mov [edi+6Ch] eax +
ja loc_441A71  +
mov eax 230h +
mov [esp+1F4h+var_1B8] 14h +
mov ecx [esp+1F4h+var_E0] +
mov edi [esp+1F4h+var_1B8] +
mov ebx [ecx+1Ch] +
mov [ebx+58h] edi +
mov [esp+1F4h+var_1F4] eax +
call sub_40EFC0  +
mov [ebx+5Ch] eax +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
mov eax [eax+5Ch] +
test eax eax +
jz loc_44183C  +
mov eax [esp+1F4h+var_E4] +
mov edx [eax+0A0h] +
cmp dword ptr [edx+214h] 0FF01h +
sbb eax eax +
not eax  +
mov [esp+1F4h+var_10C] eax +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jnz loc_4418B0  +
mov eax [esp+1F4h+var_1C4] +
test eax eax +
jnz loc_4418B0  +
mov eax [esp+1F4h+var_1D4] +
test eax eax +
jnz loc_441F27  +
mov ebp [esp+1F4h+var_1A8] +
test ebp ebp +
jnz loc_441F07  +
mov edi [esp+1F4h+var_1AC] +
test edi edi +
jnz loc_441ED2  +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
imul eax [esp+1F4h+var_1B8] +
mov [esp+1F4h+var_1F4] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+1F4h+var_120] eax +
jz loc_44183C  +
mov eax [esp+1F4h+var_1B8] +
lea ebx ds:0[eax*4] +
add eax ebx +
shl eax 2 +
mov [esp+1F4h+var_1F4] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+1F4h+var_118] eax +
jz loc_44183C  +
mov [esp+1F4h+var_1F4] ebx +
call sub_40EFC0  +
test eax eax +
mov [esp+1F4h+var_114] eax +
jz loc_44183C  +
mov [esp+1F4h+var_1F4] ebx +
call sub_40EFC0  +
test eax eax +
mov [esp+1F4h+var_110] eax +
jz loc_44183C  +
mov esi [esp+1F4h+var_1B0] +
test esi esi +
jnz loc_441F47  +
mov eax [esp+1F4h+var_E0] +
xor edx edx +
mov esi [eax+1Ch] +
mov ebx [esi+0C8h] +
test ebx ebx +
mov eax ebx +
jnz loc_4413C6  +
jmp loc_4413FA  +
mov edx [eax+24h] +
test edx edx +
jnz loc_4413BC  +
and ch 1 +
jnz loc_4413BC  +
mov ecx [eax+0A4h] +
test ecx ecx +
jz loc_4413BC  +
mov edx [ecx+0Ch] +
add edx [ecx+8] +
add edx [eax+1Ch] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_4413CE  +
mov ecx [eax+14h] +
test ch 4 +
jnz loc_4413A0  +
mov eax [esp+1F4h+var_1C0] +
mov edi [ebx+1Ch] +
cmp dword ptr [eax+1A4h] 1 +
jnz loc_4413F0  +
mov ecx [ebx+40h] +
mov eax 1 +
shl eax cl +
lea edx [edx+eax-1] +
neg eax  +
and edx eax +
mov eax edx +
sub eax edi +
mov [esi+0CCh] eax +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+64h] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jz loc_441B99  +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_1D4] +
mov ebx [eax+0A0h] +
test ebx ebx +
jz loc_441B86  +
xor ecx ecx +
xor esi esi +
mov [esp+1F4h+var_1B8] 0 +
xor edi edi +
mov [esp+1F4h+var_1CC] ecx +
jmp loc_441461  +
add esi 1 +
test edi edi +
jnz loc_441488  +
mov ebx [ebx] +
test ebx ebx +
jz loc_441AF0  +
cmp dword ptr [ebx+4] 1 +
jnz loc_441450  +
mov ebp [ebx+10h] +
mov edx [ebp+94h] +
mov eax [edx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_441A7B  +
add esi 1 +
test edi edi +
mov [esp+1F4h+var_1CC] ebp +
jz loc_441457  +
test esi esi +
jz loc_441457  +
mov ebx [esp+1F4h+var_1B8] +
mov ecx [esp+1F4h+var_1CC] +
test ebx ebx +
jz loc_441E19  +
test ecx ecx +
jz loc_441E19  +
mov edi [esp+1F4h+var_1B8] +
mov edx [ecx+94h] +
mov eax [edi+94h] +
mov [esp+1F4h+var_1E0] edx +
mov [esp+1F4h+var_1E4] ecx +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1E8] eax +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] offset aAHasBothOrdere +
mov [esp+1F4h+var_1F0] eax +
call off_476094  +
mov [esp+1F4h+var_1F4] 11h +
call sub_40C770  +
jmp loc_440E4E  +
add [ebp+40h] ecx +
jmp loc_441089  +
mov ebx [esi+10h] +
or byte ptr [ebx+18h] 2 +
test byte ptr [ebx+16h] 80h +
cmovz eax [esp+1F4h+var_1CC] +
mov ecx [ebx+8Ch] +
mov [esp+1F4h+var_1CC] eax +
mov eax [ebp+4] +
mov [esp+1F4h+var_1C8] ecx +
cmp eax 4 +
jz loc_4415D3  +
cmp eax 9 +
jz loc_4415D3  +
mov eax [esp+1F4h+var_1C4] +
test eax eax +
jz loc_441695  +
mov ecx [ebx+4Ch] +
mov edx [ebx+24h] +
mov eax [ebx+28h] +
cmp edx eax +
cmovnb eax edx +
mov edx [esp+1F4h+var_1D4] +
cmp edx eax +
cmovnb eax edx +
mov [esp+1F4h+var_1D4] eax +
mov eax [ebx+94h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jz loc_4415E0  +
test ecx ecx +
jz loc_441089  +
mov eax [esi+4] +
add [edi+4Ch] ecx +
cmp eax 1 +
jnz loc_4410A6  +
mov ebx [esp+1F4h+var_1C4] +
test ebx ebx +
jz loc_4410A6  +
mov eax [esp+1F4h+var_1C8] +
mov edx [eax+3Ch] +
test edx edx +
jz loc_4415A7  +
mov ecx [edx+28h] +
xor eax eax +
mov ebx [ebp+40h] +
test ecx ecx +
jz loc_4415A2  +
mov eax [edx+18h] +
xor edx edx +
div  ecx +
add eax ebx +
mov [ebp+40h] eax +
mov eax [esp+1F4h+var_1C8] +
mov edx [eax+4Ch] +
test edx edx +
jz loc_441089  +
mov ecx [edx+28h] +
xor eax eax +
mov ebx [ebp+50h] +
test ecx ecx +
jz loc_4415C9  +
mov eax [edx+18h] +
xor edx edx +
div  ecx +
add eax ebx +
mov [ebp+50h] eax +
jmp loc_441089  +
xor ecx ecx +
jmp loc_44153A  +
test byte ptr [eax+29h] 8 +
jnz loc_441561  +
mov eax [eax+0A0h] +
mov [esp+1F4h+var_1B4] eax +
mov eax [eax+928h] +
test eax eax +
jz loc_441710  +
mov eax [esp+1F4h+var_1C0] +
xor edx edx +
mov eax [eax+174h] +
movzx eax byte ptr [eax+5] +
mov [esp+1F4h+var_1A0] eax +
mov eax [esp+1F4h+var_1B4] +
mov eax [eax+60h] +
div  [esp+1F4h+var_1A0] +
mov edx [esp+1F4h+var_1B8] +
cmp edx eax +
cmovb edx eax +
cmp eax [esp+1F4h+var_1B0] +
mov [esp+1F4h+var_1B8] edx +
jbe loc_441649  +
mov edx [esp+1F4h+var_1B4] +
mov edx [edx+208h] +
test edx edx +
cmovz eax [esp+1F4h+var_1B0] +
mov [esp+1F4h+var_1B0] eax +
test byte ptr [ebx+14h] 4 +
jz loc_441561  +
mov eax [esp+1F4h+var_1C8] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_441A6A  +
mov eax [eax+18h] +
mov edx [esp+1F4h+var_1C8] +
mov edx [edx+4Ch] +
test edx edx +
jz loc_441673  +
add eax [edx+18h] +
mov edx [esp+1F4h+var_1A8] +
cmp edx eax +
cmovnb eax edx +
mov [esp+1F4h+var_1A8] eax +
mov eax [ebx+4Ch] +
mov ebx [esp+1F4h+var_1AC] +
cmp ebx eax +
cmovnb eax ebx +
mov [esp+1F4h+var_1AC] eax +
jmp loc_441561  +
mov eax [esp+1F4h+var_1C0] +
xor ecx ecx +
mov eax [eax+0F4h] +
test eax eax +
jz loc_44153A  +
mov ecx [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] ecx +
call eax  +
mov ecx eax +
jmp loc_44153A  +
mov eax [edi+14h] +
and eax 0FFFFFFFBh +
mov [edi+14h] eax +
jmp loc_4410CD  +
mov eax [esp+1F4h+var_1BC] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_410F10  +
mov dword ptr [ebx+0A0h] 0 +
mov [esp+1F4h+var_1A4] ebx +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_440FA0  +
jmp loc_441015  +
mov eax [esp+1F4h+var_1B4] +
mov eax [eax+68h] +
jmp loc_441621  +
mov [esp+1F4h+var_1F4] edi +
call sub_4127D0  +
mov [esp+1F4h+var_1F4] eax +
mov [esp+1F4h+var_1C8] eax +
call sub_40F150  +
mov edx eax +
mov eax [esp+1F4h+var_1C8] +
test eax eax +
jz loc_441742  +
test edx edx +
jz loc_44183C  +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E8] edx +
mov [esp+1F4h+var_1F4] edi +
mov [esp+1F4h+var_1AC] edx +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] eax +
call sub_413130  +
mov edx [esp+1F4h+var_1AC] +
test eax eax +
jz loc_4417EA  +
cmp eax 1 +
jnz loc_44250F  +
cmp dword ptr [ebp+4] 3 +
mov eax [ebp+10h] +
jz loc_4425D1  +
mov ecx [eax+4] +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1A8] edx +
mov edx [edi+20h] +
mov eax [eax+18h] +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_1E8] edx +
mov [esp+1F4h+var_1D8] 0 +
mov [esp+1F4h+var_1DC] 0 +
mov [esp+1F4h+var_1AC] eax +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E0] 0 +
mov [esp+1F4h+var_1EC] ecx +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1E4] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1AC] +
call eax  +
mov edx [esp+1F4h+var_1A8] +
test eax eax +
jz loc_44267E  +
mov eax [esp+1F4h+var_1C8] +
mov [esp+1F4h+var_1AC] edx +
mov [esp+1F4h+var_1E0] eax +
mov eax [ebp+8] +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] eax +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_410F50  +
mov edx [esp+1F4h+var_1AC] +
mov [esp+1F4h+var_1F4] edx +
mov [esp+1F4h+var_1C8] eax +
call free  +
mov eax [esp+1F4h+var_1C8] +
test eax eax +
jnz loc_441D51  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
mov eax [esp+1F4h+var_E4] +
xor ebx ebx +
mov edx [esp+1F4h+var_1CC] +
add eax 64h +
call sub_434A00  +
add esp 0FCh +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+1F4h+var_E4] +
or dword ptr [ecx+28h] 800h +
mov ecx [esp+1F4h+var_E0] +
movzx edx byte ptr [ecx] +
jmp loc_440E73  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] offset sub_434AF0 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_1F4] eax +
call sub_4147C0  +
jmp loc_441106  +
mov eax [edx+934h] +
lea esi [esp+1F4h+var_178] +
mov edx [eax+24h] +
mov eax [eax+20h] +
mov [esp+1F4h+var_1E8] 1 +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_1B4] +
add eax 48h +
mov [esp+1F4h+var_1F4] eax +
call sub_427500  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] offset off_476188 +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1F4] eax +
mov [esp+1F4h+var_178] 0 +
mov [esp+1F4h+var_174] 0 +
mov [esp+1F4h+var_16C] 0 +
mov [esp+1F4h+var_16B] 0 +
mov [esp+1F4h+var_168] 0 +
mov [esp+1F4h+var_16A] 0 +
mov [esp+1F4h+var_1CC] eax +
call sub_433430  +
cmp eax 1 +
jnz loc_441847  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_174] 0 +
mov [esp+1F4h+var_16C] 3 +
mov [esp+1F4h+var_16B] 0 +
mov eax [eax+0A0h] +
mov [esp+1F4h+var_178] 0 +
mov [esp+1F4h+var_16A] 0 +
cmp dword ptr [eax+214h] 1 +
jbe loc_4412D7  +
mov edi [esp+1F4h+var_E4] +
mov ebx 1 +
mov ebp [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] edi +
call sub_426C70  +
test eax eax +
jz loc_441A04  +
mov ecx [edi+7Ch] +
mov [esp+1F4h+var_168] ebx +
mov [eax+88h] ecx +
mov ecx [esp+1F4h+var_E0] +
movzx ecx byte ptr [ecx] +
and ecx 3 +
cmp cl 2 +
jz loc_4419DB  +
mov ecx [eax+1Ch] +
mov [esp+1F4h+var_178] ecx +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] eax +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1F4] ebp +
call sub_433430  +
cmp eax 1 +
jnz loc_441847  +
mov eax [edi+0A0h] +
add ebx 1 +
cmp [eax+214h] ebx +
ja loc_4419A2  +
jmp loc_4412D7  +
mov edi [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F0] offset a_hash +
mov [esp+1F4h+var_1F4] edi +
call sub_410920  +
mov [esp+1F4h+var_1F0] offset a_gnu_version +
mov [esp+1F4h+var_1F4] edi +
mov [esp+1F4h+var_134] eax +
call sub_410920  +
mov [esp+1F4h+var_130] eax +
jmp loc_440EF7  +
mov [esp+1F4h+var_1F0] 2B5Fh +
mov [esp+1F4h+var_1F4] offset a____Binutils_3 +
call sub_40C6C0  +
jmp loc_441135  +
xor eax eax +
jmp loc_441665  +
imul eax [esp+1F4h+var_1B8] +
jmp loc_441262  +
mov eax [esp+1F4h+var_1C8] +
mov ecx [edx+0A0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [ecx+4] al +
jnz loc_44147D  +
mov [esp+1F4h+var_1F4] edx +
mov [esp+1F4h+var_1F0] ebp +
mov [esp+1F4h+var_1B0] edx +
call sub_428190  +
mov edx [esp+1F4h+var_1B0] +
test eax eax +
jz loc_44147D  +
mov edx [edx+0A0h] +
mov ecx [edx+214h] +
cmp eax ecx +
jnb loc_44147D  +
mov edx [edx+40h] +
mov eax [edx+eax*4] +
test byte ptr [eax+8] 80h +
jz loc_44147D  +
cmp ecx [eax+1Ch] +
jbe loc_44147D  +
add edi 1 +
mov [esp+1F4h+var_1B8] ebp +
jmp loc_441453  +
test edi edi +
jz loc_441B86  +
shl edi 2 +
mov [esp+1F4h+var_1F4] edi +
call sub_40EFC0  +
test eax eax +
mov ebp eax +
jz loc_440E4E  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+0A0h] +
test eax eax +
jz loc_44252B  +
nop   +
add ebx 1 +
mov [ebp+ebx*4-4] eax +
mov eax [eax] +
test eax eax +
jnz loc_441B20  +
mov [esp+1F4h+var_1E8] offset sub_433630 +
xor edi edi +
mov [esp+1F4h+var_1EC] 4 +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] ebp +
call qsort  +
mov edx ebp +
lea eax [ebp+ebx*4+0] +
mov [esp+1F4h+var_1CC] ebp +
mov ebx [edx] +
mov ebp 0FFFFFFFFh +
add edx 4 +
mov esi [ebx+10h] +
mov ecx [esi+40h] +
shl ebp cl +
mov ecx ebp +
and ecx edi +
mov [esi+38h] ecx +
mov [ebx+8] ecx +
add ecx [ebx+0Ch] +
cmp edx eax +
mov edi ecx +
jnz loc_441B55  +
mov ebp [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1F4] ebp +
call free  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jnz loc_441410  +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F4] eax +
call sub_448BF0  +
test eax eax +
jz loc_440E4E  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+34h] +
test eax eax +
jz loc_441BCC  +
and byte ptr [eax+2Bh] 0EFh +
mov eax [eax+9Ch] +
test eax eax +
jnz loc_441BBE  +
mov eax [esp+1F4h+var_E4] +
xor edi edi +
mov esi edi +
mov eax [eax+64h] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jz loc_441FB3  +
mov eax [esp+1F4h+var_1D4] +
mov edi [eax+0A0h] +
test edi edi +
jz loc_441FA0  +
mov ebp edi +
jmp loc_441C45  +
sub eax 3 +
cmp eax 1 +
jbe loc_441CA0  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1E8] ebp +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_416330  +
test eax eax +
jz loc_442550  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_441FA0  +
mov eax [ebp+4] +
cmp eax 1 +
jnz loc_441C00  +
mov eax [ebp+10h] +
mov esi [eax+94h] +
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_441C0C  +
mov eax [esp+1F4h+var_1C0] +
mov edx [esi+0A0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [edx+4] al +
jnz loc_441C0C  +
test byte ptr [esi+2Bh] 10h +
jnz loc_441C3A  +
lea eax [esp+1F4h+var_140] +
mov edx esi +
mov [esp+1F4h+var_1CC] eax +
call sub_43F6E0  +
test eax eax +
jz loc_441847  +
or byte ptr [esi+2Bh] 10h +
jmp loc_441C3A  +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1B0] eax +
mov eax [esp+1F4h+var_1D4] +
mov ebx [eax+8Ch] +
mov eax [ebp+10h] +
mov eax [eax] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_413670  +
test eax eax +
mov edi eax +
jz loc_4424F3  +
mov eax [ebp+10h] +
mov ecx [eax+8] +
mov [esp+1F4h+var_1CC] ecx +
mov ecx [ebx+3Ch] +
test ecx ecx +
jz loc_441EBF  +
add ebx 3Ch +
mov edx [ebx+4] +
mov ecx [ebx+0Ch] +
cmp dword ptr [ebp+4] 3 +
lea ecx [ecx+edx*4] +
mov [esp+1F4h+var_1C8] ecx +
mov eax [eax+4] +
jnz loc_441E33  +
mov eax [eax+88h] +
test eax eax +
mov [esp+1F4h+var_1B8] eax +
jnz loc_441D34  +
mov [esp+1F4h+var_1F0] 2932h +
mov [esp+1F4h+var_1F4] offset a____Binutils_3 +
call sub_40C6C0  +
mov eax [esp+1F4h+var_1C8] +
mov dword ptr [eax] 0 +
mov eax [edi+24h] +
test eax eax +
jz loc_441D51  +
mov eax [esp+1F4h+var_1CC] +
test eax eax +
jnz loc_44171C  +
mov eax [ebp+8] +
mov [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_441D74  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+1Ch] +
add [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_1B0] +
mov ecx [eax+174h] +
movzx edx byte ptr [ecx+9] +
test dl dl +
jz loc_441DBB  +
lea edx [edx+edx*2] +
lea eax [esp+1F4h+var_164] +
lea edx [esp+edx*4+1F4h+var_164] +
mov [esp+1F4h+var_1B0] ecx +
mov ecx [esp+1F4h+var_1C8] +
add eax 0Ch +
mov dword ptr [eax-8] 0 +
mov dword ptr [eax-4] 0 +
mov [eax-0Ch] ecx +
cmp eax edx +
jnz loc_441D9B  +
mov ecx [esp+1F4h+var_1B0] +
cmp byte ptr [ecx+0Ah] 20h +
jz loc_441EA7  +
mov eax [edi] +
mov [esp+1F4h+var_160] eax +
mov eax [ebx] +
cmp dword ptr [eax+4] 9 +
mov edx [eax+30h] +
jz loc_441E9B  +
mov eax [esp+1F4h+var_1CC] +
mov edi [ecx+44h] +
mov [esp+1F4h+var_15C] eax +
movzx eax byte ptr [ecx+4] +
imul eax [ebx+4] +
add eax edx +
mov [esp+1F4h+var_1EC] eax +
lea eax [esp+1F4h+var_164] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edi  +
add dword ptr [ebx+4] 1 +
jmp loc_441C3A  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] offset aAHasBothOrde_0 +
mov [esp+1F4h+var_1F0] eax +
call off_476094  +
jmp loc_4414D9  +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1E0] 1 +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_4140A0  +
test eax eax +
jz loc_44262E  +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
jbe loc_441F70  +
mov ecx [esp+1F4h+var_1C8] +
mov dword ptr [eax+1Ch] 0FFFFFFFEh +
mov [esp+1F4h+var_1B8] 0 +
mov [ecx] eax +
jmp loc_441D3E  +
mov edi [ecx+3Ch] +
movzx eax byte ptr [ecx+3] +
jmp loc_441DEF  +
mov edx [esp+1F4h+var_1B8] +
movzx eax byte ptr [edi] +
shl edx 8 +
add eax edx +
mov [esp+1F4h+var_160] eax +
jmp loc_441DCE  +
mov edx [ebx+4Ch] +
test edx edx +
jz loc_442610  +
add ebx 4Ch +
jmp loc_441CF8  +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
lea eax [eax+eax*2] +
shl eax 2 +
imul eax [esp+1F4h+var_1AC] +
mov [esp+1F4h+var_1F4] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+1F4h+var_124] eax +
jnz loc_4412FB  +
jmp loc_44183C  +
mov eax [esp+1F4h+var_1A8] +
mov [esp+1F4h+var_1F4] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+1F4h+var_128] eax +
jnz loc_4412EF  +
jmp loc_44183C  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+1F4h+var_12C] eax +
jnz loc_4412E3  +
jmp loc_44183C  +
mov eax [esp+1F4h+var_1B0] +
shl eax 2 +
mov [esp+1F4h+var_1F4] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+1F4h+var_11C] eax +
jnz loc_441386  +
jmp loc_44183C  +
mov eax [eax+14h] +
mov edx [eax+3Ch] +
mov ecx [edx+88h] +
mov [esp+1F4h+var_1B8] ecx +
mov ecx [esp+1F4h+var_1C8] +
mov dword ptr [ecx] 0 +
mov edx [eax+3Ch] +
mov eax [eax+38h] +
mov ecx [edx+1Ch] +
add [esp+1F4h+var_1CC] ecx +
add [esp+1F4h+var_1CC] eax +
jmp loc_441D3E  +
mov eax [esp+1F4h+var_1D4] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jnz loc_441BE6  +
mov eax [esp+1F4h+var_E0] +
cmp byte ptr [eax+3] 0 +
js loc_441FE5  +
mov eax [esp+1F4h+var_E0] +
mov ebx [eax+34h] +
test ebx ebx +
jz loc_441FE5  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jz loc_4426B2  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jnz loc_441FCE  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
mov [esp+1F4h+var_17C] eax +
lea eax [esp+1F4h+var_188] +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] offset loc_433B30 +
mov [esp+1F4h+var_188] 0 +
mov [esp+1F4h+var_184] 1 +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_180] 0 +
mov [esp+1F4h+var_1F4] eax +
call near ptr dword_4102E0+30h  +
mov eax [esp+1F4h+var_188] +
test eax eax +
jnz loc_440E4E  +
mov eax [esp+1F4h+var_1C0] +
mov edx [eax+0D0h] +
test edx edx +
jz loc_442091  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jnz loc_442062  +
mov eax [esp+1F4h+var_1C4] +
test eax eax +
jz loc_442091  +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E8] offset sub_433430 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edx  +
test eax eax +
jz loc_440E4E  +
mov eax [esp+1F4h+var_E4] +
mov edi [esp+1F4h+var_1B4] +
mov eax [eax+7Ch] +
mov [edi+68h] eax +
mov eax [esp+1F4h+var_19C] +
test eax eax +
jz loc_4435E4  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
mov eax [ecx+0F8h] +
test eax eax +
jz loc_4422D2  +
cmp dword ptr [eax+3Ch] offset off_476230 +
jz loc_4422D2  +
mov eax [eax+6Ch] +
mov [esp+1F4h+var_1D4] eax +
mov eax [esp+1F4h+var_E0] +
test byte ptr [eax] 1 +
jnz loc_4420F1  +
mov ebp [ecx+34h] +
test ebp ebp +
jz loc_4435F3  +
mov eax [esp+1F4h+var_E4] +
xor edi edi +
mov [esp+1F4h+var_160] 0 +
mov [esp+1F4h+var_15C] 0 +
mov [esp+1F4h+var_158] 3 +
mov ebp [eax+64h] +
mov [esp+1F4h+var_157] 0 +
mov [esp+1F4h+var_156] 0 +
test ebp ebp +
jz loc_4421D3  +
mov eax [ebp+8Ch] +
mov ebx [eax+60h] +
test ebx ebx +
jle loc_4421BE  +
mov esi [eax+5Ch] +
test esi esi +
jg loc_44215B  +
mov [esp+1F4h+var_1F0] 2CD3h +
mov [esp+1F4h+var_1F4] offset a____Binutils_3 +
call sub_40C6C0  +
mov [esp+1F4h+var_154] esi +
sub esi 0FF00h +
cmp esi 0FFFEFFFFh +
jbe loc_4426E3  +
mov eax [ebp+1Ch] +
cmp edi ebx +
cmovl edi ebx +
mov [esp+1F4h+var_164] eax +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
mov edx [eax+24h] +
mov [esp+1F4h+var_1E8] 0 +
movzx eax byte ptr [eax+5] +
imul eax ebx +
add eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1EC] eax +
lea eax [esp+1F4h+var_164] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edx  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_442133  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
mov esi [ecx+0C0h] +
test esi esi +
jz loc_4422BD  +
lea ebp [esp+1F4h+var_164] +
mov eax [esi+10h] +
mov [esp+1F4h+var_164] eax +
mov eax [esi+14h] +
mov [esp+1F4h+var_160] eax +
mov eax [esi+18h] +
mov [esp+1F4h+var_15C] eax +
mov eax [esi+1Ch] +
mov dword ptr [esp+1F4h+var_158] eax +
mov eax [esi+20h] +
and [esp+1F4h+var_157] 0FCh +
mov [esp+1F4h+var_154] eax +
mov edx [esi+20h] +
mov eax [esi+4] +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1F4] eax +
call sub_426C70  +
test eax eax +
mov ebx eax +
jz loc_44226D  +
mov edx [eax+3Ch] +
mov eax [edx+8Ch] +
mov eax [eax+5Ch] +
mov [esp+1F4h+var_154] eax +
sub eax 0FF00h +
cmp eax 0FFFEFFFFh +
jbe loc_4435FA  +
mov eax [ebx+38h] +
add eax [edx+1Ch] +
add eax [esi+10h] +
mov [esp+1F4h+var_164] eax +
mov ecx [esp+1F4h+var_1C0] +
mov eax [esi+0Ch] +
mov edx [ecx+174h] +
cmp edi eax +
cmovl edi eax +
mov ecx [edx+24h] +
mov [esp+1F4h+var_1E8] 0 +
movzx edx byte ptr [edx+5] +
mov [esp+1F4h+var_1F0] ebp +
imul eax edx +
add eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call ecx  +
mov esi [esi] +
test esi esi +
jnz loc_4421E8  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
mov eax [ecx+0F8h] +
lea edx [edi+1] +
mov eax [eax+3Ch] +
mov eax [eax+8Ch] +
mov [eax+20h] edx +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1F0] offset loc_433B30 +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_188] 0 +
mov [esp+1F4h+var_17C] eax +
lea eax [esp+1F4h+var_188] +
mov [esp+1F4h+var_1EC] eax +
mov [esp+1F4h+var_184] 0 +
call near ptr dword_4102E0+30h  +
mov edi [esp+1F4h+var_188] +
test edi edi +
jnz loc_440E4E  +
mov eax [esp+1F4h+var_1C0] +
mov edx [eax+0D4h] +
test edx edx +
jz loc_442365  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+1] +
and eax 18h +
cmp al 18h +
jnz loc_442336  +
mov esi [esp+1F4h+var_1C4] +
test esi esi +
jz loc_442365  +
mov eax [esp+1F4h+var_1CC] +
mov [esp+1F4h+var_1E8] offset sub_433430 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call edx  +
test eax eax +
jz loc_440E4E  +
mov eax [esp+1F4h+var_138] +
mov [esp+1F4h+var_1F4] eax +
call sub_44E6A0  +
mov eax [esp+1F4h+var_140] +
mov edi [eax+1Ch] +
mov edx [edi+54h] +
test edx edx +
jz loc_442738  +
mov eax [esp+1F4h+var_13C] +
mov ecx [eax+0A0h] +
mov ebx [ecx+90Ch] +
test ebx ebx +
jnz loc_4423BE  +
mov [esp+1F4h+var_1F0] 2257h +
mov [esp+1F4h+var_1F4] offset a____Binutils_3 +
call sub_40C6C0  +
mov eax [esp+1F4h+var_13C] +
mov edx [edi+54h] +
mov eax [eax+4] +
mov esi [eax+1B0h] +
mov eax [esi+174h] +
movzx eax byte ptr [eax+5] +
imul eax edx +
mov [esp+1F4h+var_1F4] eax +
call sub_40EFC0  +
test eax eax +
mov ebp eax +
jz loc_440E4E  +
mov ecx [esp+1F4h+var_10C] +
test ecx ecx +
jz loc_442415  +
mov eax [esp+1F4h+var_13C] +
mov eax [eax+7Ch] +
shl eax 2 +
mov [esp+1F4h+var_1F4] eax +
call sub_40F150  +
test eax eax +
mov [esp+1F4h+var_10C] eax +
jz loc_443631  +
mov edx [edi+54h] +
mov [esp+1F4h+var_1D4] 0 +
test edx edx +
jz loc_44248D  +
imul ebx [esp+1F4h+var_1D4] +
add ebx [edi+5Ch] +
mov eax [ebx+8] +
cmp eax 0FFFFFFFFh +
jnz loc_443616  +
mov dword ptr [ebx+8] 0 +
mov eax [esi+174h] +
mov edx [esp+1F4h+var_10C] +
mov ecx [eax+24h] +
mov [esp+1F4h+var_1C8] ecx +
mov ecx [ebx+18h] +
lea edx [edx+ecx*4] +
mov [esp+1F4h+var_1E8] edx +
movzx eax byte ptr [eax+5] +
imul eax [ebx+14h] +
mov [esp+1F4h+var_1F0] ebx +
add eax ebp +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_13C] +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1C8] +
call eax  +
mov edx [edi+54h] +
add [esp+1F4h+var_1D4] 1 +
cmp [esp+1F4h+var_1D4] edx +
jb loc_442424  +
mov eax [esi+174h] +
mov esi edx +
xor edx edx +
mov ecx [esp+1F4h+var_13C] +
movzx eax byte ptr [eax+5] +
mov ebx [ecx+0A0h] +
mov [esp+1F4h+var_1E8] 0 +
imul esi eax +
mov eax [ebx+60h] +
add eax [ebx+58h] +
adc edx [ebx+5Ch] +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1EC] edx +
call sub_4060C0  +
test eax eax +
jz loc_4426FC  +
mov [esp+1F4h+var_1F4] ebp +
call free  +
mov eax [edi+5Ch] +
mov [esp+1F4h+var_1F4] eax +
call free  +
mov dword ptr [edi+5Ch] 0 +
jmp loc_440E4E  +
mov [esp+1F4h+var_1F4] 11h +
call sub_40C770  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
jmp loc_441847  +
mov [esp+1F4h+var_1EC] offset aElf_reloc_link +
mov [esp+1F4h+var_1F0] 2974h +
mov [esp+1F4h+var_1F4] offset a____Binutils_3 +
call sub_40C6F0  +
mov [esp+1F4h+var_1E8] offset sub_433630 +
mov [esp+1F4h+var_1EC] 4 +
mov [esp+1F4h+var_1F0] 0 +
mov [esp+1F4h+var_1F4] ebp +
call qsort  +
jmp loc_441B7E  +
cmp dword ptr [ebp+4] 1 +
mov edi esi +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
jnz loc_441847  +
mov eax [edi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_441847  +
mov eax [esp+1F4h+var_1C0] +
mov edx [edi+0A0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ch] +
cmp [edx+4] al +
jz loc_441847  +
mov edx offset aElfclass32 +
mov ecx offset aElfclass64 +
cmp al 2 +
mov ebx ecx +
mov esi edx +
cmovnz ebx edx +
cmovnz esi ecx +
mov [esp+1F4h+var_1F4] 3 +
call sub_40C770  +
mov [esp+1F4h+var_1E8] ebx +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] edi +
mov [esp+1F4h+var_1F4] offset aBFileClassSInc +
call off_476094  +
jmp loc_441847  +
mov eax [eax+4] +
mov ecx [eax] +
jmp loc_441786  +
mov ebx [esp+1F4h+var_1A4] +
mov [esp+1F4h+var_1A4] ebx +
mov [esp+1F4h+var_1B0] 0 +
mov [esp+1F4h+var_1B8] 0 +
mov [esp+1F4h+var_1A8] 0 +
mov [esp+1F4h+var_1AC] 0 +
mov [esp+1F4h+var_1D4] 0 +
jmp loc_441106  +
mov [esp+1F4h+var_1F0] 292Ah +
xor ebx ebx +
mov [esp+1F4h+var_1F4] offset a____Binutils_3 +
call sub_40C6C0  +
mov eax [ebp+10h] +
jmp loc_441CF8  +
mov eax [esp+1F4h+var_E0] +
mov edx [ebp+10h] +
mov ecx [esp+1F4h+var_E0] +
mov eax [eax+18h] +
mov edx [edx+4] +
mov eax [eax+24h] +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1EC] 0 +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1F4] ecx +
call eax  +
test eax eax +
jz loc_44183C  +
mov [esp+1F4h+var_1B8] 0 +
jmp loc_441D3E  +
mov [esp+1F4h+var_1F4] edx +
call free  +
lea eax [esp+1F4h+var_140] +
mov [esp+1F4h+var_1CC] eax +
jmp loc_441847  +
mov [esp+1F4h+var_1EC] offset aBfd_elf_final_ +
mov [esp+1F4h+var_1F0] 2B7Eh +
mov [esp+1F4h+var_1F4] offset a____Binutils_3 +
call sub_40C6F0  +
mov eax [ebx+0A0h] +
mov eax [eax+24Ch] +
test eax eax +
jz loc_441FDB  +
mov [esp+1F4h+var_1F4] eax +
call free  +
mov eax [ebx+0A0h] +
mov dword ptr [eax+24Ch] 0 +
jmp loc_441FDB  +
mov eax [esp+1F4h+var_E4] +
call sub_4333F0  +
test eax eax +
jnz loc_442174  +
jmp loc_440E4E  +
mov eax [esp+1F4h+var_13C] +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1F4] ebp +
mov [esp+1F4h+var_1EC] eax +
call sub_405F60  +
cmp esi eax +
jnz loc_4424D4  +
add [ebx+60h] esi +
mov [esp+1F4h+var_1F4] ebp +
call free  +
mov eax [edi+5Ch] +
mov [esp+1F4h+var_1F4] eax +
call free  +
mov dword ptr [edi+5Ch] 0 +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+7Ch] +
test eax eax +
jnz loc_443280  +
mov eax [esp+1F4h+var_E4] +
mov edi [eax+64h] +
test edi edi +
jz loc_4427D4  +
test byte ptr [edi+14h] 4 +
mov ebx [edi+8Ch] +
jz loc_4427CD  +
mov eax [esp+1F4h+var_1C0] +
mov esi 1 +
mov eax [eax+0F8h] +
test eax eax +
jz loc_442786  +
mov [esp+1F4h+var_1F4] edi +
call eax  +
test eax eax +
setnz al  +
movzx eax al +
mov esi eax +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_4427A6  +
mov eax [esp+1F4h+var_E4] +
lea edx [ebx+3Ch] +
mov ecx esi +
call sub_47562E  +
test eax eax +
jz loc_440E4E  +
mov ebp [ebx+4Ch] +
test ebp ebp +
jz loc_4427C6  +
mov eax [esp+1F4h+var_E4] +
lea edx [ebx+4Ch] +
mov ecx esi +
call sub_47562E  +
test eax eax +
jz loc_440E4E  +
mov dword ptr [edi+4Ch] 0 +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_442758  +
mov eax [esp+1F4h+var_19C] +
test eax eax +
jz loc_442A0B  +
mov eax [esp+1F4h+var_E0] +
test byte ptr [eax+4] 2 +
jz loc_4428D5  +
mov esi [esp+1F4h+var_198] +
test esi esi +
jz loc_4428D5  +
mov eax [esp+1F4h+var_E4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+1F4h+var_1C8] eax +
mov eax [eax+174h] +
movzx eax byte ptr [eax+9] +
mov [esp+1F4h+var_1F0] offset a_rela_dyn +
mov [esp+1F4h+var_1B4] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_410840  +
mov [esp+1F4h+var_1F0] offset a_rel_dyn +
mov ebx eax +
mov [esp+1F4h+var_1D4] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_410840  +
test ebx ebx +
mov edi eax +
jz loc_4430CB  +
mov eax [ebx+24h] +
test eax eax +
mov [esp+1F4h+var_1AC] eax +
jz loc_4430CB  +
test edi edi +
jz loc_4430B2  +
mov eax [edi+24h] +
test eax eax +
mov [esp+1F4h+var_1B0] eax +
mov eax [esp+1F4h+var_1D4] +
jnz loc_442C03  +
mov ebx [eax+0A0h] +
mov eax [esp+1F4h+var_1C8] +
mov esi [eax+174h] +
movzx eax byte ptr [esi+4] +
mov ecx [esp+1F4h+var_1AC] +
mov edi [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1C4] eax +
mov eax [esi+40h] +
mov [esp+1F4h+var_1B0] eax +
mov eax [esi+44h] +
mov [esp+1F4h+var_1A8] eax +
test ebx ebx +
jz loc_4428D5  +
xor edx edx +
cmp dword ptr [ebx+4] 1 +
jnz loc_4428C7  +
mov eax [ebx+10h] +
add edx [eax+24h] +
mov ebx [ebx] +
test ebx ebx +
jnz loc_4428BB  +
cmp edx ecx +
jz loc_442C47  +
xor edi edi +
xor ebp ebp +
mov eax [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F0] offset a_dynamic +
mov [esp+1F4h+var_1F4] eax +
call sub_410920  +
test eax eax +
mov ebx eax +
jnz loc_442907  +
mov [esp+1F4h+var_1F0] 2D73h +
mov [esp+1F4h+var_1F4] offset a____Binutils_3 +
call sub_40C6C0  +
mov esi [ebx+6Ch] +
mov eax [ebx+24h] +
add eax esi +
cmp esi eax +
mov [esp+1F4h+var_1C4] eax +
jnb loc_442A0B  +
mov eax [esp+1F4h+var_1C0] +
lea ecx [esp+1F4h+var_164] +
mov [esp+1F4h+var_1D4] ecx +
mov [esp+1F4h+var_1B4] edi +
mov edx [eax+174h] +
mov ebx eax +
mov edi [esp+1F4h+var_1D4] +
mov eax [edx+30h] +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1EC] edi +
mov edi [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F4] edi +
call eax  +
mov eax [esp+1F4h+var_164] +
cmp eax 12h +
jbe loc_443028  +
cmp eax 20h +
jz loc_44301E  +
jbe loc_442F43  +
cmp eax 6FFFFFF0h +
jz loc_442F39  +
ja loc_442EE4  +
cmp eax 21h +
jz loc_442E70  +
cmp eax 6FFFFEF5h +
mov edx offset a_gnu_hash +
jnz loc_442EFB  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1C8] edx +
mov [esp+1F4h+var_1F4] eax +
call sub_410840  +
mov edx [esp+1F4h+var_1C8] +
test eax eax +
jz loc_442F18  +
mov ecx [eax+3Ch] +
mov ecx [ecx+8Ch] +
cmp dword ptr [ecx+4] 7 +
jz loc_442D58  +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_160] eax +
mov eax [ebx+174h] +
mov edi [esp+1F4h+var_1D4] +
mov eax [eax+34h] +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] edi +
mov edi [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F4] edi +
call eax  +
mov edx [ebx+174h] +
movzx eax byte ptr [edx+6] +
add esi eax +
cmp [esp+1F4h+var_1C4] esi +
ja loc_442936  +
mov edi [esp+1F4h+var_198] +
test edi edi +
jz loc_442AF7  +
mov edi [esp+1F4h+var_E0] +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+9Ch] +
mov [esp+1F4h+var_1F0] edi +
mov edi [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] edi +
call eax  +
test eax eax +
jz loc_441847  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax+3] +
test al 8 +
jz loc_442A5B  +
mov edi [esp+1F4h+var_E0] +
test byte ptr [edi] 1 +
jnz loc_442A5F  +
test al 10h +
jz loc_442AD2  +
mov eax [esp+1F4h+var_198] +
mov [esp+1F4h+var_1F0] offset a_dynamic +
mov [esp+1F4h+var_1F4] eax +
call sub_410920  +
test eax eax +
jz loc_442AD2  +
mov ebx [eax+6Ch] +
mov esi [eax+24h] +
add esi ebx +
cmp ebx esi +
jnb loc_442AD2  +
mov eax [esp+1F4h+var_1C0] +
lea edi [esp+1F4h+var_164] +
mov [esp+1F4h+var_1D4] edi +
mov eax [eax+174h] +
mov edi [esp+1F4h+var_1D4] +
mov ecx [esp+1F4h+var_198] +
mov eax [eax+30h] +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F4] ecx +
call eax  +
cmp [esp+1F4h+var_164] 16h +
jz loc_4434AC  +
mov eax [esp+1F4h+var_1C0] +
mov eax [eax+174h] +
movzx edx byte ptr [eax+6] +
add ebx edx +
cmp esi ebx +
ja loc_442A98  +
mov eax [esp+1F4h+var_198] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_442AF7  +
mov ebx [esp+1F4h+var_E0] +
mov ecx [ebp+14h] +
test ch 1 +
jnz loc_4434D1  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_442AE4  +
mov eax [esp+1F4h+var_E0] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_44346B  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+1Ch] +
mov edx [eax+0A0h] +
test edx edx +
jz loc_442B3E  +
sub eax 0FFFFFF80h +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_451B50  +
test eax eax +
jz loc_441847  +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_448CE0  +
test eax eax +
jz loc_441847  +
mov eax [esp+1F4h+var_E4] +
mov ebx 1 +
mov edx [esp+1F4h+var_1CC] +
add eax 64h +
call sub_434A00  +
mov eax [esp+1F4h+var_E4] +
mov ebp [esp+1F4h+var_1A4] +
mov eax [eax+0A0h] +
test ebp ebp +
mov eax [eax+934h] +
mov dword ptr [eax+38h] 1 +
jz loc_440E50  +
mov edi [esp+1F4h+var_1BC] +
mov [esp+1F4h+var_1F4] edi +
call sub_40EFC0  +
test eax eax +
mov esi eax +
jz loc_440E4E  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1F4] eax +
call sub_44EB00  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1E0] edi +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1EC] esi +
mov [esp+1F4h+var_1F0] ebp +
mov [esp+1F4h+var_1F4] eax +
call sub_410F50  +
mov [esp+1F4h+var_1F4] esi +
call free  +
jmp loc_440E50  +
mov eax [eax+0A0h] +
mov [esp+1F4h+var_1C4] eax +
test eax eax +
mov eax [esp+1F4h+var_1C8] +
mov esi [eax+174h] +
jz loc_4433F6  +
mov ebx [esp+1F4h+var_1C4] +
mov ebp 1 +
xor ecx ecx +
mov [esp+1F4h+var_1A8] edi +
cmp dword ptr [ebx+4] 1 +
jz loc_4433AD  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_442C2E  +
mov edi [esp+1F4h+var_1A8] +
jmp loc_4433FD  +
mov eax [esp+1F4h+var_1B4] +
lea eax [eax+eax*2-3] +
lea eax ds:14h[eax*4] +
mov [esp+1F4h+var_1D4] eax +
mov eax edx +
xor edx edx +
div  [esp+1F4h+var_1C4] +
test eax eax +
mov [esp+1F4h+var_1B8] eax +
jz loc_4428D5  +
imul eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] eax +
call sub_40F150  +
test eax eax +
mov [esp+1F4h+var_1B4] eax +
jz loc_442E03  +
mov eax [esp+1F4h+var_1C8] +
mov ecx 0FFFFFF00h +
mov eax [eax+174h] +
cmp byte ptr [eax+0Ah] 20h +
cmovz ebx ecx +
mov ecx [edi+0A0h] +
mov [esp+1F4h+var_1AC] ebx +
test ecx ecx +
jz loc_442CC6  +
mov [esp+1F4h+var_1A0] edi +
mov ebp ecx +
cmp dword ptr [ebp+4] 1 +
jz loc_442D7A  +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_442CB1  +
mov edi [esp+1F4h+var_1A0] +
mov eax [esp+1F4h+var_1D4] +
xor ebp ebp +
mov ebx [esp+1F4h+var_1B4] +
mov [esp+1F4h+var_1E8] offset sub_4330F0 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_1B8] +
mov [esp+1F4h+var_1F4] ebx +
mov [esp+1F4h+var_1F0] eax +
call qsort  +
mov ecx ebx +
cmp dword ptr [ecx+4] 1 +
jnz loc_442F62  +
add ebp 1 +
add ecx [esp+1F4h+var_1D4] +
cmp ebp [esp+1F4h+var_1B8] +
jnz loc_442CEE  +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_1E8] offset sub_433150 +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_1B8] +
sub eax ebp +
mov [esp+1F4h+var_1F0] eax +
call qsort  +
mov ecx [edi+0A0h] +
test ecx ecx +
jz loc_442D47  +
mov esi ecx +
mov ecx edi +
cmp dword ptr [esi+4] 1 +
jz loc_442FBD  +
mov esi [esi] +
test esi esi +
jnz loc_442D35  +
mov edi ecx +
mov eax [esp+1F4h+var_1B4] +
mov [esp+1F4h+var_1F4] eax +
call free  +
jmp loc_4428D9  +
mov [esp+1F4h+var_1F0] edx +
mov [esp+1F4h+var_1F4] offset aWarningSecti_0 +
call off_476094  +
mov [esp+1F4h+var_1F4] 0Fh +
call sub_40C770  +
jmp loc_441847  +
mov esi [ebp+10h] +
mov ebx [esi+6Ch] +
test ebx ebx +
jz loc_442E50  +
mov eax [esi+38h] +
xor edx edx +
mov ecx [esi+24h] +
div  [esp+1F4h+var_1C4] +
add ecx ebx +
imul eax [esp+1F4h+var_1D4] +
add eax [esp+1F4h+var_1B4] +
cmp ebx ecx +
jnb loc_442CBB  +
lea edi [eax+8] +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_19C] ecx +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F0] ebx +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1B0] +
call eax  +
mov eax [esp+1F4h+var_1C8] +
mov ecx [esp+1F4h+var_E0] +
mov eax [eax+10Ch] +
mov [esp+1F4h+var_1EC] edi +
mov [esp+1F4h+var_1F4] ecx +
mov [esp+1F4h+var_1F0] esi +
call eax  +
mov ecx [esp+1F4h+var_19C] +
add ebx [esp+1F4h+var_1C4] +
mov [edi-4] eax +
mov eax [esp+1F4h+var_1AC] +
mov [edi-8] eax +
add edi [esp+1F4h+var_1D4] +
cmp ecx ebx +
ja loc_442DAA  +
jmp loc_442CBB  +
mov eax [esp+1F4h+var_E0] +
xor ebp ebp +
mov edi [esp+1F4h+var_E4] +
mov eax [eax+18h] +
mov eax [eax+14h] +
mov [esp+1F4h+var_1E8] edi +
mov edi [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1E0] 0 +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1EC] 0 +
mov [esp+1F4h+var_1F4] edi +
xor edi edi +
mov [esp+1F4h+var_1F0] offset aNotEnoughMemor +
call eax  +
jmp loc_4428D9  +
mov ebx [esi+24h] +
test ebx ebx +
jz loc_442CBB  +
mov eax [esp+1F4h+var_1B4] +
xor edi edi +
xor ebp ebp +
mov [esp+1F4h+var_1F4] eax +
call free  +
jmp loc_4428D9  +
mov ecx offset a_preinit_array +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] ecx +
mov [esp+1F4h+var_1C8] ecx +
mov [esp+1F4h+var_1F4] eax +
call sub_410840  +
mov ecx [esp+1F4h+var_1C8] +
test eax eax +
mov edi eax +
jz loc_442EC3  +
mov edx [eax+24h] +
test edx edx +
jnz loc_442EB1  +
mov [esp+1F4h+var_1F0] ecx +
mov [esp+1F4h+var_1F4] offset aWarningSSectio +
call off_476094  +
mov edx [edi+24h] +
mov [esp+1F4h+var_160] edx +
mov eax [ebx+174h] +
jmp loc_4429DD  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] ecx +
mov [esp+1F4h+var_1F4] offset aBCouldNotFin_0 +
mov [esp+1F4h+var_1F0] eax +
call off_476094  +
jmp loc_441847  +
cmp eax 6FFFFFFCh +
jz loc_442F0E  +
cmp eax 6FFFFFFEh +
mov edx offset a_gnu_version_r +
jz loc_442997  +
mov edx [ebx+174h] +
movzx ecx byte ptr [edx+6] +
add ecx esi +
mov esi ecx +
jmp loc_442A01  +
mov edx offset a_gnu_version_d +
jmp loc_442997  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F4] offset aBCouldNotFin_0 +
mov [esp+1F4h+var_1F0] eax +
call off_476094  +
jmp loc_441847  +
mov edx offset a_gnu_version +
jmp loc_442997  +
cmp eax 1Ah +
jz loc_442FA9  +
jbe loc_442F96  +
cmp eax 1Bh +
lea esi [esi+0] +
jz loc_442FB3  +
cmp eax 1Ch +
mov ecx offset a_fini_array +
jz loc_442E75  +
jmp loc_442EFB  +
cmp [esp+1F4h+var_1B8] ebp +
jbe loc_442D05  +
mov esi ebp +
mov edx ecx +
mov ebx ecx +
mov eax [ebx+0Ch] +
xor eax [edx+0Ch] +
test [esp+1F4h+var_1AC] eax +
cmovnz edx ebx +
add esi 1 +
mov eax [edx+8] +
mov [ebx] eax +
add ebx [esp+1F4h+var_1D4] +
cmp esi [esp+1F4h+var_1B8] +
jnz loc_442F72  +
jmp loc_442D05  +
cmp eax 19h +
mov edx offset a_init_array +
jz loc_442997  +
jmp loc_442EFB  +
mov edx offset a_fini_array +
jmp loc_442997  +
mov ecx offset a_init_array +
jmp loc_442E75  +
mov eax [esi+10h] +
xor edx edx +
mov ebx [eax+6Ch] +
mov edi [eax+24h] +
mov eax [eax+38h] +
add edi ebx +
div  [esp+1F4h+var_1C4] +
imul eax [esp+1F4h+var_1D4] +
add eax [esp+1F4h+var_1B4] +
cmp ebx edi +
jnb loc_442D3F  +
add eax 8 +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1C8] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1B8] ecx +
mov [esp+1F4h+var_1EC] ebx +
mov [esp+1F4h+var_1F4] eax +
mov eax [esp+1F4h+var_1A8] +
call eax  +
mov eax [esp+1F4h+var_1C8] +
add ebx [esp+1F4h+var_1C4] +
add eax [esp+1F4h+var_1D4] +
mov ecx [esp+1F4h+var_1B8] +
cmp edi ebx +
ja loc_442FE5  +
jmp loc_442D3F  +
mov edx offset a_preinit_array +
jmp loc_442997  +
cmp eax 11h +
jnb loc_4431DB  +
cmp eax 6 +
jz loc_4431C8  +
ja loc_44312A  +
cmp eax 4 +
jz loc_443120  +
lea esi [esi+0] +
ja loc_443116  +
test eax eax +
jnz loc_442EFB  +
mov edx [ebx+174h] +
movzx ecx byte ptr [edx+6] +
add ecx esi +
test ebp ebp +
jz loc_442F07  +
cmp [esp+1F4h+var_1C4] ecx +
jbe loc_442F07  +
mov eax [esp+1F4h+var_1B4] +
mov eax [eax+8Ch] +
mov eax [eax+4] +
cmp eax 4 +
jz loc_443109  +
cmp eax 9 +
jnz loc_442F07  +
mov [esp+1F4h+var_164] 6FFFFFFAh +
mov [esp+1F4h+var_160] ebp +
mov eax edx +
xor ebp ebp +
jmp loc_4429DD  +
mov eax [esp+1F4h+var_1D4] +
mov ebx [eax+0A0h] +
mov eax [esp+1F4h+var_1C8] +
mov esi [eax+174h] +
jmp loc_442897  +
test edi edi +
jz loc_4428D7  +
mov ecx [edi+24h] +
test ecx ecx +
jz loc_4428D5  +
mov eax [esp+1F4h+var_1C8] +
mov ebx [edi+0A0h] +
mov esi [eax+174h] +
movzx eax byte ptr [esi+3] +
mov [esp+1F4h+var_1C4] eax +
mov eax [esi+38h] +
mov [esp+1F4h+var_1B0] eax +
mov eax [esi+3Ch] +
mov [esp+1F4h+var_1A8] eax +
jmp loc_4428B5  +
mov [esp+1F4h+var_164] 6FFFFFF9h +
jmp loc_4430A2  +
mov edx offset a_dynstr +
jmp loc_442997  +
mov edx offset a_hash +
jmp loc_442997  +
cmp eax 0Ch +
jz loc_4436EA  +
jbe loc_4431D2  +
cmp eax 0Dh +
lea esi [esi+0] +
jnz loc_442EFB  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+4Ch] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E0] +
mov [esp+1F4h+var_1E4] 1 +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1EC] 0 +
mov eax [eax+1Ch] +
mov [esp+1F4h+var_1F4] eax +
call sub_414050  +
test eax eax +
jz loc_442EFB  +
movzx edi byte ptr [eax+0Ch] +
lea edx [edi-3] +
cmp dl 1 +
ja loc_442EFB  +
mov ecx [eax+18h] +
mov [esp+1F4h+var_160] ecx +
mov edx [eax+14h] +
mov eax [edx+3Ch] +
test eax eax +
jz loc_44324A  +
add ecx [eax+1Ch] +
mov eax [edx+38h] +
add eax ecx +
mov [esp+1F4h+var_160] eax +
mov eax [ebx+174h] +
jmp loc_4429DD  +
mov edx offset a_dynsym +
jmp loc_442997  +
cmp eax 8 +
ja loc_442EFB  +
mov ecx [esp+1F4h+var_E4] +
lea edx [eax-11h] +
cmp edx 2 +
mov [esp+1F4h+var_160] 0 +
sbb edi edi +
and edi 5 +
mov edx [ecx+0A0h] +
add edi 4 +
mov ecx [edx+214h] +
cmp ecx 1 +
mov [esp+1F4h+var_1B8] ecx +
jbe loc_44323F  +
mov edx [edx+40h] +
lea ecx [edx+4] +
mov [esp+1F4h+var_1C8] ecx +
mov ecx [esp+1F4h+var_1B8] +
lea ecx [edx+ecx*4] +
mov [esp+1F4h+var_1B8] ecx +
mov ecx [esp+1F4h+var_1C8] +
mov edx [ecx] +
cmp [edx+4] edi +
jz loc_443260  +
add [esp+1F4h+var_1C8] 4 +
mov ecx [esp+1F4h+var_1B8] +
cmp [esp+1F4h+var_1C8] ecx +
jnz loc_443225  +
mov eax [ebx+174h] +
jmp loc_4429DD  +
mov [esp+1F4h+var_160] 0 +
mov eax [ebx+174h] +
jmp loc_4429DD  +
test byte ptr [edx+8] 2 +
jz loc_443230  +
cmp eax 8 +
jz loc_443274  +
cmp eax 12h +
jnz loc_4436F9  +
mov edx [edx+18h] +
add [esp+1F4h+var_160] edx +
jmp loc_443230  +
mov edi [esp+1F4h+var_1B4] +
xor ebx ebx +
mov [esp+1F4h+var_1D0] ebx +
mov ecx [edi+60h] +
mov ebx [edi+5Ch] +
mov [esp+1F4h+var_1D4] ecx +
mov ecx [edi+58h] +
mov edi [esp+1F4h+var_E4] +
add [esp+1F4h+var_1D4] ecx +
adc [esp+1F4h+var_1D0] ebx +
mov esi [edi+0A0h] +
mov ebx [esi+208h] +
test ebx ebx +
jz loc_4432C0  +
mov edx [ebx] +
test edx edx +
jnz loc_44363E  +
mov eax [esp+1F4h+var_138] +
mov dword ptr [esi+0BCh] 3 +
mov dword ptr [esi+0C0h] 0 +
mov dword ptr [esi+0C4h] 0 +
mov [esp+1F4h+var_1F4] eax +
call sub_44E520  +
mov edx [esp+1F4h+var_1D0] +
mov dword ptr [esi+0E0h] 0 +
mov dword ptr [esi+0D4h] 0 +
mov dword ptr [esi+0D8h] 0 +
mov dword ptr [esi+0DCh] 1 +
mov [esi+0D0h] eax +
mov eax [esp+1F4h+var_1D4] +
mov [esp+1F4h+var_1E8] 1 +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F0] eax +
lea eax [esi+0B8h] +
mov [esp+1F4h+var_1F4] eax +
call sub_427500  +
mov edi [esp+1F4h+var_E4] +
mov ecx [edi+0A0h] +
mov ecx [ecx+934h] +
mov [ecx+20h] eax +
mov eax [esi+0C8h] +
mov [ecx+24h] edx +
mov edx [esi+0CCh] +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1F4] edi +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1EC] edx +
call sub_4060C0  +
test eax eax +
jnz loc_440E4E  +
mov eax [esp+1F4h+var_138] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_44E5D0  +
test eax eax +
jnz loc_44274A  +
jmp loc_440E4E  +
mov eax [ebx+10h] +
xor edx edx +
movzx edi byte ptr [esi+4] +
mov eax [eax+24h] +
mov [esp+1F4h+var_1B8] eax +
div  edi +
movzx edi byte ptr [esi+3] +
mov eax [esp+1F4h+var_1B8] +
test edx edx +
mov edx 0 +
jnz loc_44371B  +
div  edi +
test edx edx +
jz loc_442C38  +
mov eax ebp +
xor eax 1 +
test cl al +
jnz loc_44343E  +
mov ecx 1 +
mov ebp 1 +
jmp loc_442C38  +
mov ebp 1 +
xor ecx ecx +
mov eax [edi+0A0h] +
test eax eax +
mov [esp+1F4h+var_1A8] eax +
jz loc_443425  +
mov ebx eax +
mov [esp+1F4h+var_1A0] edi +
cmp dword ptr [ebx+4] 1 +
jz loc_443737  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_443411  +
mov edi [esp+1F4h+var_1A0] +
test ecx ecx +
jnz loc_44378E  +
mov ebx [esp+1F4h+var_1C4] +
jmp loc_442897  +
test ecx ecx +
jz loc_4437E0  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] offset aBUnableToSortR +
mov [esp+1F4h+var_1F0] eax +
call off_476094  +
xor edi edi +
xor ebp ebp +
mov [esp+1F4h+var_1F4] 5 +
call sub_40C770  +
jmp loc_4428D9  +
lea eax [esp+1F4h+var_164] +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] offset sub_422B60 +
mov [esp+1F4h+var_164] 0 +
mov [esp+1F4h+var_1F4] eax +
call sub_410E60  +
mov ecx [esp+1F4h+var_164] +
test ecx ecx +
jnz loc_441847  +
jmp loc_442B0C  +
mov eax [esp+1F4h+var_E0] +
test byte ptr [eax+3] 10h +
jz loc_443570  +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+1F4h+var_1F4] offset aPXReadOnlySegm +
call eax  +
jmp loc_442AD2  +
mov eax [ebp+24h] +
test eax eax +
mov [esp+1F4h+var_1D4] eax +
jz loc_442AF0  +
mov eax [ebp+3Ch] +
cmp eax offset off_476230 +
jz loc_442AF0  +
and ecx 100000h +
jz loc_442AF0  +
mov ecx [ebx+1Ch] +
cmp [ecx+0A0h] ebp +
jz loc_442AF0  +
cmp [ecx+0A4h] ebp +
jz loc_442AF0  +
mov esi [ebp+0] +
mov ecx 8 +
mov edi offset a_dynstr +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_44358B  +
mov edi [esp+1F4h+var_1D4] +
mov ecx [ebp+6Ch] +
mov [esp+1F4h+var_1E0] edi +
mov edi [ebp+38h] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1E4] 0 +
mov [esp+1F4h+var_1EC] ecx +
mov [esp+1F4h+var_1E8] edi +
mov [esp+1F4h+var_1F4] eax +
call sub_410F50  +
test eax eax +
jnz loc_442AF0  +
jmp loc_441847  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+1F4h+var_1F4] offset aPWarningCreati +
call eax  +
jmp loc_442AD2  +
mov eax [eax+8Ch] +
mov edx [eax+14h] +
mov eax [eax+10h] +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_4060C0  +
test eax eax +
jnz loc_441847  +
mov eax [ebx+1Ch] +
mov eax [eax+50h] +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] eax +
call sub_44E5D0  +
test eax eax +
jnz loc_442AF0  +
jmp loc_441847  +
mov eax [esp+1F4h+var_E0] +
mov ecx [eax+1Ch] +
jmp loc_4422D2  +
xor edi edi +
jmp loc_4421D3  +
mov eax [esp+1F4h+var_E4] +
call sub_4333F0  +
test eax eax +
jz loc_440E4E  +
mov edx [ebx+3Ch] +
jmp loc_44225D  +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_138] +
mov [esp+1F4h+var_1F4] eax +
call sub_44E530  +
mov [ebx+8] eax +
jmp loc_44243F  +
mov [esp+1F4h+var_1F4] ebp +
call free  +
jmp loc_440E4E  +
lea esi ds:0[eax*4] +
mov edx [esp+1F4h+var_1D0] +
mov eax [esp+1F4h+var_1D4] +
mov dword ptr [ebx+4] 12h +
mov dword ptr [ebx+28h] 4 +
mov dword ptr [ebx+24h] 4 +
mov [ebx+18h] esi +
mov [esp+1F4h+var_1E8] 1 +
mov [esp+1F4h+var_1F0] eax +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F4] ebx +
call sub_427500  +
mov [esp+1F4h+var_1D4] eax +
mov eax [ebx+10h] +
mov [esp+1F4h+var_1D0] edx +
mov edx [ebx+14h] +
mov [esp+1F4h+var_1E8] 0 +
mov [esp+1F4h+var_1F0] eax +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1EC] edx +
mov [esp+1F4h+var_1F4] eax +
call sub_4060C0  +
test eax eax +
jnz loc_440E4E  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F0] esi +
mov [esp+1F4h+var_1EC] eax +
mov eax [esp+1F4h+var_10C] +
mov [esp+1F4h+var_1F4] eax +
call sub_405F60  +
cmp eax esi +
jnz loc_440E4E  +
mov eax [esp+1F4h+var_E4] +
mov esi [eax+0A0h] +
jmp loc_4432C0  +
mov eax [esp+1F4h+var_E0] +
mov eax [eax+48h] +
jmp loc_443150  +
mov ecx [esp+1F4h+var_160] +
mov edx [edx+0Ch] +
test ecx ecx +
jz loc_44370F  +
cmp ecx edx +
jbe loc_443230  +
mov [esp+1F4h+var_160] edx +
jmp loc_443230  +
div  edi +
test edx edx +
jnz loc_443777  +
mov eax ebp +
test cl al +
jnz loc_44343E  +
mov ecx 1 +
xor ebp ebp +
jmp loc_442C38  +
mov eax [ebx+10h] +
xor edx edx +
movzx edi byte ptr [esi+4] +
mov eax [eax+24h] +
mov [esp+1F4h+var_1B8] eax +
div  edi +
movzx edi byte ptr [esi+3] +
mov eax [esp+1F4h+var_1B8] +
test edx edx +
mov edx 0 +
jnz loc_4437D2  +
div  edi +
test edx edx +
jz loc_44341B  +
test ebp ebp +
jz loc_4437A3  +
mov ecx 1 +
mov ebp 1 +
jmp loc_44341B  +
mov eax [esp+1F4h+var_E4] +
mov [esp+1F4h+var_1F4] offset aBUnableToSor_0 +
mov [esp+1F4h+var_1F0] eax +
jmp loc_443450  +
test ebp ebp +
jnz loc_44342D  +
mov ebx [esp+1F4h+var_1A8] +
mov ecx [esp+1F4h+var_1B0] +
jmp loc_4430EE  +
test ecx ecx +
jz loc_443768  +
mov eax [esp+1F4h+var_E4] +
xor edi edi +
mov [esp+1F4h+var_1F4] offset aBUnableToSortR +
mov [esp+1F4h+var_1F0] eax +
call off_476094  +
mov [esp+1F4h+var_1F4] 5 +
call sub_40C770  +
jmp loc_4428D9  +
div  edi +
test edx edx +
jnz loc_443777  +
test ebp ebp +
jnz loc_443436  +
mov ecx 1 +
xor ebp ebp +
jmp loc_44341B  +
***
mov eax [esp+10h] +
mov edx [esp+4] +
mov ecx [esp+14h] +
test eax eax +
jz loc_443827  +
movzx edx byte ptr [eax+0Ch] +
cmp dl 3 +
jb loc_443824  +
cmp dl 4 +
jbe loc_443820  +
cmp dl 5 +
jnz loc_443824  +
mov eax [eax+14h] +
mov eax [eax+4] +
retn   +
***
mov eax [eax+14h] +
retn   +
***
xor eax eax +
retn   +
***
mov ecx [ecx+10h] +
mov eax [edx+94h] +
mov [esp+8] ecx +
mov [esp+4] eax +
jmp sub_426C70  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov ebp [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_4] +
mov ecx [ebp+20h] +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_14] eax +
mov eax [ebp+4] +
mov edx [eax+4] +
shr edx cl +
test edx edx +
jz loc_4439B1  +
cmp edx [ebp+14h] +
jb loc_4438F0  +
mov ecx [ebp+1Ch] +
sub edx [ebp+18h] +
mov ebx [ecx+edx*4] +
test ebx ebx +
jnz loc_443898  +
jmp loc_4439C7  +
mov ebx [ebx+14h] +
movzx edx byte ptr [ebx+0Ch] +
lea ecx [edx-6] +
cmp cl 1 +
jbe loc_443895  +
mov ecx [ebx+3Ch] +
or byte ptr [ebx+34h] 20h +
test ecx ecx +
jz loc_4438B3  +
or byte ptr [ecx+34h] 20h +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
jz loc_4438C3  +
sub edx 1 +
cmp dl 1 +
jbe loc_443916  +
mov [esp+2Ch+arg_10] 0 +
mov [esp+2Ch+arg_C] ebx +
mov [esp+2Ch+arg_8] eax +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+arg_4] eax +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+arg_0] eax +
mov eax [esp+2Ch+var_18] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
mov ecx [ebp+0Ch] +
lea ebx [edx+edx*4] +
lea ebx [ecx+ebx*4] +
movzx ecx byte ptr [ebx+0Ch] +
shr cl 4 +
test cl cl +
jnz loc_443883  +
mov [esp+2Ch+arg_10] ebx +
mov [esp+2Ch+arg_C] 0 +
jmp loc_4438CF  +
mov esi [ebx+4] +
mov ecx 8 +
mov edi offset a__start_ +
mov [esp+2Ch+var_10] esi +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_4439A8  +
mov esi [esp+2Ch+var_10] +
mov ecx 7 +
mov edi offset a__stop_ +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jnz loc_4438C3  +
mov esi [esp+2Ch+var_10] +
add esi 7 +
test esi esi +
jz loc_4438C3  +
cmp byte ptr [esi] 0 +
jz loc_4438C3  +
mov edi [esp+2Ch+var_20] +
mov edi [edi+34h] +
test edi edi +
jz loc_4438C3  +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] edi +
call sub_410840  +
test eax eax +
jz loc_443996  +
test byte ptr [eax+18h] 8 +
jz loc_4439BB  +
mov edi [edi+9Ch] +
test edi edi +
jnz loc_443980  +
mov eax [ebp+4] +
jmp loc_4438C3  +
mov esi [esp+2Ch+var_10] +
add esi 8 +
jmp loc_443960  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+2Ch+var_14] +
mov dword ptr [esi] 1 +
jmp loc_4439B3  +
mov eax [esp+2Ch+var_20] +
mov esi [esp+2Ch+var_1C] +
mov eax [eax+18h] +
mov edx [esi+94h] +
mov eax [eax+2Ch] +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] offset aFPCorruptInput +
call eax  +
xor eax eax +
jmp loc_4439B3  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [esp+5Ch+arg_4] +
mov eax [ebx+8Ch] +
or byte ptr [ebx+18h] 8 +
mov eax [eax+7Ch] +
test eax eax +
jz loc_443A16  +
test byte ptr [eax+18h] 8 +
jz loc_443B90  +
mov eax [ebx+94h] +
test byte ptr [ebx+14h] 4 +
mov eax [eax+0A0h] +
mov esi [eax+248h] +
jz loc_443AD0  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jz loc_443AD0  +
cmp ebx esi +
jz loc_443B20  +
mov edx [esp+5Ch+arg_0] +
lea ebp [esp+5Ch+var_34] +
mov ecx ebx +
mov eax ebp +
call sub_438700  +
test eax eax +
jz loc_443BF8  +
mov eax [esp+5Ch+var_30] +
cmp [esp+5Ch+var_2C] eax +
jbe loc_443C05  +
mov [esp+5Ch+var_44] esi +
mov edi [esp+5Ch+arg_8] +
mov esi [esp+5Ch+arg_0] +
jmp loc_443A95  +
mov eax [esp+5Ch+var_30] +
add eax 0Ch +
cmp [esp+5Ch+var_2C] eax +
mov [esp+5Ch+var_30] eax +
jbe loc_443C01  +
mov [esp+5Ch+var_50] ebp +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] esi +
call sub_443C20  +
test eax eax +
jnz loc_443A80  +
mov esi [esp+5Ch+var_44] +
xor ecx ecx +
xor edi edi +
mov byte ptr [esp+5Ch+var_44] 0 +
mov edx ebx +
mov eax ebp +
mov [esp+5Ch+var_40] ecx +
call sub_432190  +
mov ecx [esp+5Ch+var_40] +
jmp loc_443AE1  +
test esi esi +
mov ecx 1 +
setnz byte ptr [esp+5Ch+var_44]  +
mov edi 1 +
cmp byte ptr [esp+5Ch+var_44] 0 +
jnz loc_443B20  +
mov eax [ebx+8Ch] +
test cl cl +
mov edx [eax+84h] +
jz loc_443B13  +
test edx edx +
jz loc_443B13  +
test byte ptr [edx+18h] 8 +
mov eax 1 +
jz loc_443BD0  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+8Ch] +
mov edx [eax+80h] +
test edx edx +
jz loc_443BC0  +
mov edx [esp+5Ch+arg_0] +
mov ecx esi +
xor edi edi +
lea eax [esp+5Ch+var_34] +
call sub_438700  +
xor ecx ecx +
test eax eax +
jz loc_443AE8  +
lea eax [esp+5Ch+var_34] +
mov [esp+5Ch+var_4C] eax +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
call sub_446F80  +
mov edx esi +
test eax eax +
setnz cl  +
lea eax [esp+5Ch+var_34] +
movzx edi cl +
mov [esp+5Ch+var_44] ecx +
call sub_432190  +
mov ecx [esp+5Ch+var_44] +
jmp loc_443AE8  +
mov edi [esp+5Ch+arg_8] +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_54] edi +
mov [esp+5Ch+var_5C] eax +
call sub_4439F0  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_443A16  +
jmp loc_443B0B  +
mov ecx 1 +
mov edi 1 +
jmp loc_443AEE  +
mov eax [esp+5Ch+arg_8] +
mov [esp+5Ch+var_58] edx +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_5C] eax +
call sub_4439F0  +
test eax eax +
setnz al  +
add esp 5Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
xor edi edi +
jmp loc_443AE8  +
mov esi [esp+5Ch+var_44] +
test esi esi +
mov ecx 1 +
setnz byte ptr [esp+5Ch+var_44]  +
mov edi 1 +
jmp loc_443ABA  +
***
push ebx  +
sub esp 30h +
lea eax [esp+30h+var_4] +
mov esi [esp+30h+arg_0] +
mov [esp+30h+var_20] eax +
mov eax [esp+30h+arg_C] +
mov edi [esp+30h+arg_8] +
mov [esp+30h+var_4] 0 +
mov [esp+30h+var_30] esi +
mov [esp+30h+var_24] eax +
mov eax [esp+30h+arg_4] +
mov [esp+30h+var_28] edi +
mov [esp+30h+var_2C] eax +
call sub_443840  +
test eax eax +
mov ebx eax +
jnz loc_443C86  +
jmp loc_443CC0  +
or byte ptr [ebx+18h] 8 +
mov eax [esp+30h+var_4] +
test eax eax +
jz loc_443CC0  +
mov eax [ebx+94h] +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] eax +
call sub_410880  +
test eax eax +
mov ebx eax +
jz loc_443CC0  +
test byte ptr [ebx+18h] 8 +
jnz loc_443C66  +
mov eax [ebx+94h] +
mov edx [eax+4] +
cmp dword ptr [edx+4] 5 +
jnz loc_443C62  +
test byte ptr [eax+29h] 8 +
jnz loc_443C62  +
mov [esp+30h+var_28] edi +
mov [esp+30h+var_2C] ebx +
mov [esp+30h+var_30] esi +
call sub_4439F0  +
test eax eax +
jnz loc_443C66  +
xor eax eax +
jmp loc_443CC5  +
mov eax 1 +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+40h] +
mov eax [eax+34h] +
test eax eax +
mov [esp+14h] eax +
jnz loc_443D06  +
jmp loc_443E93  +
mov eax [esp+14h] +
mov eax [eax+9Ch] +
test eax eax +
mov [esp+14h] eax +
jz loc_443E93  +
mov eax [esp+14h] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_443CF0  +
mov eax [esp+14h] +
mov eax [eax+64h] +
test eax eax +
mov [esp+18h] eax +
jz loc_443CF0  +
xor ebx ebx +
xor edx edx +
jmp loc_443D50  +
or byte ptr [eax+18h] 8 +
test ebx ebx +
jnz loc_443D6B  +
and ch 20h +
jz loc_443D49  +
mov esi [eax] +
mov edi offset a_debug_line_ +
mov ecx 0Ch +
cmps   +
setz bl  +
movzx ebx bl +
mov eax [eax+0Ch] +
test eax eax +
jz loc_443D77  +
mov ecx [eax+14h] +
test ecx 100000h +
jnz loc_443D28  +
test byte ptr [eax+18h] 8 +
mov esi 1 +
cmovnz edx esi +
test ebx ebx +
jz loc_443D30  +
mov eax [eax+0Ch] +
mov ebx 1 +
test eax eax +
jnz loc_443D50  +
test edx edx +
mov [esp+1Ch] ebx +
jz loc_443CF0  +
mov ebp [esp+18h] +
xor esi esi +
jmp loc_443DB1  +
test ah 20h +
jnz loc_443D99  +
test al 7 +
jnz loc_443DAA  +
mov eax [ebp+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_443EA0  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jz loc_443E08  +
mov eax [ebp+14h] +
test eax 2000000h +
jz loc_443D90  +
mov eax [ebp+8Ch] +
mov ebx 1 +
mov ecx 1 +
mov edi [eax+7Ch] +
mov eax edi +
mov edx [eax+14h] +
mov eax [eax+8Ch] +
test dh 20h +
mov eax [eax+7Ch] +
cmovz ebx esi +
and edx 7 +
cmovnz ecx esi +
cmp edi eax +
jnz loc_443DD0  +
or ebx ecx +
jz loc_443DAA  +
or byte ptr [eax+18h] 8 +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
cmp edi eax +
jnz loc_443DF0  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_443DB1  +
mov eax [esp+1Ch] +
test eax eax +
jz loc_443CF0  +
mov ebp [esp+18h] +
test byte ptr [ebp+14h] 10h +
jz loc_443E87  +
test byte ptr [ebp+18h] 8 +
jnz loc_443E87  +
mov eax [ebp+0] +
mov [esp] eax +
mov [esp+1Ch] eax +
call strlen  +
mov ebx [esp+18h] +
mov esi eax +
lea esi [esi+0] +
test byte ptr [ebx+18h] 8 +
jz loc_443E80  +
test byte ptr [ebx+15h] 20h +
jz loc_443E80  +
mov edi [ebx] +
mov [esp] edi +
call strlen  +
cmp esi eax +
jnb loc_443E80  +
mov ecx [esp+1Ch] +
sub eax esi +
lea edx [edi+eax] +
mov [esp+8] esi +
mov [esp] edx +
mov [esp+4] ecx +
call strncmp  +
test eax eax +
jnz loc_443E80  +
and byte ptr [ebx+18h] 0F7h +
nop   +
lea esi [esi+0] +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_443E40  +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_443E18  +
jmp loc_443CF0  +
***
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
or byte ptr [ebp+18h] 8 +
jmp loc_443DAA  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
movzx eax byte ptr [ebx+0Ch] +
mov ecx [esi+78h] +
lea edx [eax-3] +
cmp dl 1 +
jbe loc_443ED7  +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
movzx edx byte ptr [ebx+33h] +
test dl 4 +
jnz loc_443F19  +
test dl 2 +
jnz loc_443EF0  +
and edx 0Ah +
jnz loc_443ECC  +
cmp al 3 +
jnz loc_443ECC  +
nop   +
movzx eax byte ptr [ebx+31h] +
and eax 3 +
sub eax 1 +
cmp al 1 +
jbe loc_443ECC  +
movzx eax byte ptr [esi] +
mov edx eax +
and edx 3 +
cmp dl 1 +
jbe loc_443F46  +
movzx eax byte ptr [ebx+34h] +
shr al 1 +
and eax 3 +
cmp eax 1 +
jle loc_443F2E  +
mov eax [ebx+14h] +
or dword ptr [eax+14h] 200000h +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [ebx+4] +
mov eax [esi+7Ch] +
mov [esp+4] edx +
mov [esp] eax +
call sub_417090  +
test eax eax +
jz loc_443F19  +
jmp loc_443ECC  +
***
test al 10h +
jnz loc_443F0B  +
test byte ptr [ebx+34h] 10h +
nop   +
jz loc_443ECC  +
test ecx ecx +
jz loc_443ECC  +
mov edx [ebx+4] +
mov eax [ecx+10h] +
mov dword ptr [esp+4] 0 +
mov [esp] ecx +
mov [esp+8] edx +
call eax  +
test eax eax +
jnz loc_443F0B  +
jmp loc_443ECC  +
***
push esi  +
push ebx  +
sub esp 24h +
mov esi [esp+30h] +
mov ebx [esi+40h] +
test ebx ebx +
jnz loc_443F98  +
jmp loc_443FF0  +
mov ebx [ebx] +
test ebx ebx +
jz loc_443FF0  +
mov eax [ebx+4] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
mov [esp+4] eax +
mov eax [esi+1Ch] +
mov [esp] eax +
call sub_414050  +
test eax eax +
jz loc_443F92  +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-3] +
cmp dl 1 +
ja loc_443F92  +
mov eax [eax+14h] +
cmp eax offset off_476230 +
jz loc_443F92  +
mov ebx [ebx] +
or dword ptr [eax+14h] 200000h +
test ebx ebx +
jnz loc_443F98  +
lea esi [esi+0] +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+64h] +
mov ebp [eax+34h] +
test ebp ebp +
jnz loc_444025  +
jmp loc_4440B2  +
mov ebp [ebp+9Ch] +
test ebp ebp +
jz loc_4440B2  +
mov eax [ebp+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_444017  +
mov edx [esp+64h] +
mov ecx ebp +
lea eax [esp+18h] +
call sub_4320A0  +
test eax eax +
jz loc_4440B7  +
mov ebx [ebp+64h] +
test ebx ebx +
jnz loc_444057  +
jmp loc_444017  +
***
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_444017  +
mov esi [ebx] +
mov edi offset a_eh_frame_en_0 +
mov ecx 0Fh +
cmps   +
jnz loc_444050  +
mov edx [esp+64h] +
mov ecx ebp +
mov [esp] ebx +
lea eax [esp+18h] +
call sub_438660  +
test eax eax +
jz loc_444050  +
lea eax [esp+18h] +
mov [esp+8] eax +
mov eax [esp+64h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_4458D0  +
mov eax [esp+18h] +
test eax eax +
jz loc_444050  +
mov edx [ebx+8Ch] +
cmp eax [edx+68h] +
jz loc_444050  +
mov [esp] eax +
call free  +
jmp loc_444050  +
***
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov eax [esp+70h] +
mov edi [esp+74h] +
mov dword ptr [esp+20h] 1 +
mov eax [eax+4] +
mov eax [eax+1B0h] +
test byte ptr [eax+1AEh] 1 +
mov [esp+18h] eax +
jz loc_4440F6  +
mov eax [edi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_444110  +
mov dword ptr [esp] offset aWarningGcSecti +
call off_476094  +
mov eax 1 +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+18h] +
mov eax [eax+0B4h] +
mov [esp] edi +
call eax  +
mov eax [edi+1Ch] +
mov ebp [edi+34h] +
mov [esp+1Ch] eax +
movzx eax byte ptr [edi+3] +
and eax 6 +
cmp al 4 +
jz loc_4441DD  +
test ebp ebp +
jz loc_4441DD  +
lea esi [esp+28h] +
mov dword ptr [esp+4] offset a_eh_frame_0 +
mov [esp] ebp +
call sub_410840  +
test eax eax +
mov ebx eax +
jnz loc_4441B5  +
jmp loc_4441C4  +
mov [esp+0Ch] esi +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] ebp +
call sub_445A30  +
mov eax [ebx+8Ch] +
mov eax [eax+88h] +
test eax eax +
jz loc_444196  +
test byte ptr [ebx+16h] 10h +
jnz loc_444196  +
mov eax [ebp+0A0h] +
mov [eax+248h] ebx +
mov edx ebx +
mov eax esi +
call sub_432190  +
mov [esp+4] ebx +
mov dword ptr [esp] 0 +
call sub_410880  +
test eax eax +
mov ebx eax +
jz loc_4441C4  +
mov ecx ebx +
mov edx edi +
mov eax esi +
call sub_438700  +
test eax eax +
jnz loc_444160  +
movzx eax byte ptr [edi+3] +
mov ebp [ebp+9Ch] +
and eax 6 +
cmp al 4 +
jz loc_4441DD  +
test ebp ebp +
jnz loc_444144  +
mov eax [esp+1Ch] +
lea ebx [esp+20h] +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset sub_431E50 +
mov [esp] eax +
call sub_4147C0  +
mov eax [esp+20h] +
test eax eax +
jnz loc_44420B  +
xor eax eax +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [esp+1Ch] +
mov [esp+8] ebx +
mov dword ptr [esp+4] offset sub_438770 +
mov [esp] esi +
call sub_4147C0  +
mov eax [esp+20h] +
test eax eax +
jz loc_444201  +
mov eax [esi+30h] +
test eax eax +
jnz loc_4444CF  +
mov esi [edi+34h] +
mov eax [esp+18h] +
test esi esi +
mov ebx [eax+0BCh] +
jz loc_4442ED  +
mov [esp+1Ch] ebx +
mov ebp esi +
mov ebx [esp+70h] +
jmp loc_444265  +
mov ebp [ebp+9Ch] +
test ebp ebp +
jz loc_4442E9  +
mov eax [ebp+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_444257  +
mov ecx [esp+18h] +
mov edx [ebx+4] +
mov ecx [ecx+74h] +
mov [esp+4] edx +
mov [esp] eax +
call ecx  +
test eax eax +
jz loc_444257  +
mov esi [ebp+64h] +
test esi esi +
jnz loc_4442A7  +
lea esi [esi+0] +
jmp loc_444257  +
***
mov eax [esi+8Ch] +
cmp dword ptr [eax+4] 7 +
jz loc_4442E0  +
nop   +
mov esi [esi+0Ch] +
test esi esi +
jz loc_444257  +
test byte ptr [esi+18h] 8 +
jnz loc_4442A0  +
mov eax [esi+14h] +
test ah 80h +
jnz loc_4442A0  +
test eax 200000h +
jz loc_444292  +
mov eax [esp+1Ch] +
mov [esp+4] esi +
mov [esp] edi +
mov [esp+8] eax +
call sub_4439F0  +
test eax eax +
jnz loc_4442A0  +
xor eax eax +
jmp loc_444203  +
***
mov eax [eax+7Ch] +
test eax eax +
jnz loc_4442A0  +
jmp loc_4442BC  +
***
mov ebx [esp+1Ch] +
mov eax [esp+18h] +
mov eax [eax+0C0h] +
mov [esp+4] ebx +
mov [esp] edi +
call eax  +
mov eax [esp+70h] +
mov esi [edi+34h] +
mov eax [eax+4] +
test esi esi +
mov eax [eax+1B0h] +
mov [esp+18h] eax +
mov ebp [eax+0C4h] +
jnz loc_444331  +
jmp loc_444489  +
mov esi [esi+9Ch] +
test esi esi +
jz loc_444489  +
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_444323  +
mov ecx [esp+18h] +
mov edx [ecx+74h] +
mov ecx [esp+70h] +
mov ecx [ecx+4] +
mov [esp] eax +
mov [esp+4] ecx +
call edx  +
test eax eax +
jz loc_444323  +
mov ebx [esi+64h] +
test ebx ebx +
jnz loc_444420  +
jmp loc_444323  +
***
test ebp ebp +
jz loc_444415  +
mov eax [ebx+14h] +
test al 4 +
nop   +
jz loc_444415  +
mov edx [ebx+4Ch] +
test edx edx +
jz loc_444415  +
test byte ptr [edi+1] 8 +
jz loc_444390  +
test ah 20h +
jnz loc_444415  +
cmp dword ptr [ebx+3Ch] offset off_476230 +
jz loc_444415  +
movzx eax byte ptr [edi+2] +
mov edx [ebx+94h] +
mov dword ptr [esp+0Ch] 0 +
mov dword ptr [esp+8] 0 +
shr al 6 +
and eax 1 +
mov [esp] edx +
mov [esp+10h] eax +
mov [esp+4] ebx +
call sub_438410  +
test eax eax +
mov edx eax +
jz loc_444201  +
mov eax [ebx+94h] +
mov [esp+1Ch] edx +
mov [esp+0Ch] edx +
mov [esp+8] ebx +
mov [esp+4] edi +
mov [esp] eax +
call ebp  +
mov ecx [ebx+8Ch] +
mov edx [esp+1Ch] +
cmp edx [ecx+68h] +
jz loc_44440D  +
mov [esp] edx +
mov [esp+1Ch] eax +
call free  +
mov eax [esp+1Ch] +
test eax eax +
jz loc_444201  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_444323  +
mov edx [ebx+14h] +
test edx 2000000h +
jz loc_444447  +
mov eax [ebx+8Ch] +
mov eax [eax+7Ch] +
movzx ecx byte ptr [eax+18h] +
movzx eax byte ptr [ebx+18h] +
and ecx 8 +
and eax 0FFFFFFF7h +
or eax ecx +
mov [ebx+18h] al +
test byte ptr [ebx+18h] 8 +
jnz loc_444415  +
test dh 80h +
jnz loc_444415  +
or dh 80h +
mov [ebx+14h] edx +
test byte ptr [edi+5] 10h +
jz loc_444362  +
mov ecx [ebx+24h] +
test ecx ecx +
jz loc_444362  +
mov eax [ebx] +
mov [esp+4] esi +
mov dword ptr [esp] offset aRemovingUnused +
mov [esp+8] eax +
call off_476094  +
jmp loc_444362  +
***
mov eax [esp+18h] +
mov [esp+28h] edi +
mov eax [eax+0DCh] +
mov dword ptr [esp+4] offset sub_433190 +
mov [esp+2Ch] eax +
lea eax [esp+28h] +
mov [esp+8] eax +
mov eax [edi+1Ch] +
mov [esp] eax +
call sub_4147C0  +
mov eax [esp+70h] +
lea ecx [esp+24h] +
mov edx edi +
call sub_432490  +
mov eax 1 +
jmp loc_444108  +
***
mov eax [esp+18h] +
mov eax [eax+0B8h] +
mov [esp+8] edi +
mov [esp+4] eax +
mov eax [esp+1Ch] +
mov [esp] eax +
call sub_4147C0  +
jmp loc_444236  +
***
push ebp  +
xor edx edx +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov esi [esp+34h] +
mov ebp [esp+3Ch] +
mov eax [edi+4] +
mov ecx [edi+0A0h] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ebx byte ptr [eax+5] +
mov eax [ecx+60h] +
div  ebx +
mov ebx [ecx+928h] +
test ebx ebx +
jnz loc_444540  +
sub eax [ecx+68h] +
mov ecx [ecx+218h] +
lea edx [ecx+eax*4] +
cmp ecx edx +
jnz loc_444557  +
jmp loc_444590  +
add ecx 4 +
cmp edx ecx +
jz loc_444590  +
mov ebx [ecx] +
test ebx ebx +
jz loc_444550  +
movzx eax byte ptr [ebx+0Ch] +
sub eax 3 +
cmp al 1 +
ja loc_444550  +
cmp [ebx+14h] esi +
jnz loc_444550  +
cmp [ebx+18h] ebp +
jnz loc_444550  +
mov eax [ebx+44h] +
test eax eax +
jz loc_4445BF  +
mov edx [esp+38h] +
test edx edx +
jz loc_4445E0  +
mov edi [esp+38h] +
mov [eax+8] edi +
mov eax 1 +
jmp loc_4445B7  +
mov [esp+0Ch] ebp +
mov [esp+8] esi +
mov [esp+4] edi +
mov dword ptr [esp] offset aBALuNoSymbolFo +
call off_476094  +
mov dword ptr [esp] 5 +
call sub_40C770  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov [esp] edi +
call sub_407C00  +
test eax eax +
mov [ebx+44h] eax +
jnz loc_444579  +
xor eax eax +
jmp loc_4445B7  +
***
mov dword ptr [eax+8] 0FFFFFFFFh +
mov eax 1 +
jmp loc_4445B7  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov edx [esp+40h] +
mov esi [esp+48h] +
mov ebx [esp+4Ch] +
mov eax [edx+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx ecx byte ptr [eax+0Bh] +
mov eax [esi+44h] +
test eax eax +
jz loc_4446E2  +
cmp [eax] ebx +
ja loc_4446C5  +
mov edx 1 +
movzx edi cl +
mov eax [eax+4] +
shl edx cl +
cmp byte ptr [esi+0Ch] 1 +
mov [esp+14h] edi +
lea edi [edx+ebx] +
jz loc_44464E  +
mov edi [esi+2Ch] +
lea ebp [edx+ebx] +
cmp ebx edi +
cmovnb edi ebp +
lea edi [edi+edx-1] +
neg edx  +
and edi edx +
mov edx edi +
shr edx cl +
test eax eax +
mov [esp+18h] ecx +
lea edx ds:4[edx*4] +
jz loc_444710  +
sub eax 4 +
mov [esp+4] edx +
mov [esp] eax +
mov [esp+1Ch] edx +
call sub_40F050  +
test eax eax +
mov ebp eax +
jz loc_444705  +
mov eax [esi+44h] +
mov ecx [esp+18h] +
mov edx [esp+1Ch] +
mov eax [eax] +
mov dword ptr [esp+4] 0 +
shr eax cl +
lea eax ds:4[eax*4] +
sub edx eax +
add eax ebp +
mov [esp+8] edx +
mov [esp] eax +
call memset  +
mov eax [esi+44h] +
add ebp 4 +
mov ecx [esp+14h] +
mov [eax+4] ebp +
mov [eax] edi +
jmp loc_4446CB  +
mov ebp [eax+4] +
movzx ecx cl +
shr ebx cl +
mov eax 1 +
mov dword ptr [ebp+ebx*4+0] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov [esp] edx +
mov [esp+14h] ecx +
call sub_407C00  +
mov ecx [esp+14h] +
test eax eax +
mov [esi+44h] eax +
jnz loc_444621  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp] edx +
call sub_40F150  +
test eax eax +
mov ebp eax +
jnz loc_4446B4  +
xor eax eax +
jmp loc_444707  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+48h] +
mov eax [eax+8Ch] +
mov eax [eax+8] +
mov [esp+1Ch] eax +
mov eax [esp+44h] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_444780  +
mov edx [eax] +
mov ecx [esp+1Ch] +
xor eax eax +
and ecx edx +
cmp ecx edx +
jnz loc_444772  +
mov eax [esp+44h] +
mov ecx [esp+1Ch] +
test [eax+4] ecx +
setz al  +
movzx eax al +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+40h] +
mov eax [eax+30h] +
mov eax [eax+4] +
mov edi [eax+1B0h] +
mov eax [esp+44h] +
mov ebx [eax+8] +
test ebx ebx +
jz loc_44488E  +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
jmp loc_4447DD  +
mov edx [ebx] +
test edx edx +
jz loc_44484D  +
mov ecx [esp+14h] +
or eax ecx +
cmp edx 1 +
cmovnz eax ecx +
mov [esp+14h] eax +
mov dword ptr [ebx+8] 1 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_44486F  +
mov eax [edi+108h] +
test eax eax +
jz loc_4447F3  +
mov edx [ebx+4] +
mov [esp] edx +
call eax  +
test eax eax +
jnz loc_4447B1  +
mov esi [ebx+4] +
xor ebp ebp +
mov eax ds:off_490FE0[ebp*8] +
mov [esp] esi +
mov [esp+4] eax +
call strcmp  +
test eax eax +
jz loc_444840  +
add ebp 1 +
cmp ebp 0Ch +
jnz loc_4447F8  +
mov eax [ebx+8] +
test eax eax +
jnz loc_4447D2  +
mov eax [esp+40h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+4] esi +
mov dword ptr [esp] offset aUnrecognizedIn +
call eax  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [ebx] +
test eax eax +
jnz loc_444856  +
mov eax ds:dword_490FE4[ebp*8] +
or [esp+18h] eax +
jmp loc_4447CB  +
***
cmp eax 1 +
jnz loc_4447CB  +
mov eax ds:dword_490FE4[ebp*8] +
or [esp+14h] eax +
jmp loc_4447CB  +
***
mov edx [esp+18h] +
mov ebp [esp+14h] +
mov eax [esp+44h] +
or edx [eax] +
mov dword ptr [eax+0Ch] 1 +
or [eax+4] ebp +
mov [eax] edx +
jmp loc_444755  +
***
xor ebp ebp +
xor edx edx +
jmp loc_444877  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov [esp+3Ch+var_20] eax +
mov eax [esp+3Ch+arg_4] +
cmp [eax+30h] ecx +
jz loc_4448D9  +
mov [esp+3Ch+var_38] 32FAh +
mov [esp+3Ch+var_3C] offset a____Binutils_3 +
call sub_40C6C0  +
mov eax [esp+3Ch+arg_4] +
mov edx [eax+1Ch] +
xor eax eax +
cmp dword ptr [edx+28h] 1 +
jz loc_4448F0  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_20] +
xor ebp ebp +
test byte ptr [eax+1ADh] 1 +
jz loc_444A08  +
mov eax [esp+3Ch+arg_4] +
mov ebx [eax+34h] +
test ebx ebx +
jnz loc_444921  +
jmp loc_4449D7  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_4449D0  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_444913  +
mov eax [ebx+0A0h] +
mov esi [eax+21Ch] +
test esi esi +
jz loc_444913  +
mov ecx [eax+928h] +
test ecx ecx +
jz loc_4449C0  +
mov ecx [esp+3Ch+var_20] +
mov eax [eax+60h] +
mov edx [ecx+174h] +
movzx edi byte ptr [edx+5] +
xor edx edx +
div  edi +
mov [esp+3Ch+var_24] eax +
mov edx [esp+3Ch+var_24] +
test edx edx +
jz loc_444913  +
xor edi edi +
jmp loc_4449AD  +
mov eax [esp+3Ch+var_20] +
mov ecx [esp+3Ch+arg_4] +
mov edx [esp+3Ch+arg_0] +
mov [esi+edi*4] ebp +
mov eax [eax+180h] +
mov [esp+3Ch+var_2C] edi +
mov [esp+3Ch+var_30] ebx +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] edx +
call eax  +
add ebp eax +
add edi 1 +
cmp edi [esp+3Ch+var_24] +
jz loc_444913  +
mov eax [esi+edi*4] +
test eax eax +
jg loc_444970  +
mov dword ptr [esi+edi*4] 0FFFFFFFFh +
jmp loc_4449A0  +
mov eax [eax+68h] +
mov [esp+3Ch+var_24] eax +
jmp loc_44495D  +
mov eax [esp+3Ch+arg_4] +
mov edx [eax+1Ch] +
mov eax [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] offset sub_431F10 +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_14] ebp +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_34] eax +
call sub_4147C0  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [eax+17Ch] +
jmp loc_444903  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
mov [esp] ebx +
mov [esp+4] esi +
call sub_4448A0  +
test eax eax +
jnz loc_444A45  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
mov [esp+24h] esi +
mov [esp+20h] ebx +
add esp 14h +
pop ebx  +
pop esi  +
jmp loc_440E20  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 5Ch +
mov esi [esp+74h] +
test byte ptr [esi+4] 1 +
jnz loc_444A7C  +
mov eax [esi+1Ch] +
cmp dword ptr [eax+28h] 1 +
jz loc_444A86  +
add esp 5Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+70h] +
mov dword ptr [esp+4] offset a_stab_0 +
mov [esp] eax +
call sub_410840  +
test eax eax +
jz loc_444B57  +
mov ebx [eax+0A0h] +
mov dword ptr [esp+1Ch] 0 +
test ebx ebx +
jz loc_444B60  +
mov ebp 1 +
jmp loc_444ACE  +
mov ebx [ebx+0A0h] +
test ebx ebx +
jz loc_444B60  +
mov edi [ebx+24h] +
test edi edi +
jz loc_444AC0  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jz loc_444AC0  +
movzx eax word ptr [ebx+18h] +
and ax 380h +
add ax 0FF80h +
jnz loc_444AC0  +
mov edi [ebx+94h] +
mov eax [edi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_444AC0  +
mov ecx ebx +
mov edx esi +
lea eax [esp+28h] +
call sub_438700  +
test eax eax +
jz loc_444CF0  +
mov eax [ebx+8Ch] +
lea ecx [esp+28h] +
mov eax [eax+88h] +
mov [esp+10h] ecx +
mov dword ptr [esp+0Ch] offset sub_431F80 +
mov [esp+4] ebx +
mov [esp+8] eax +
mov [esp] edi +
call sub_4516B0  +
mov edx ebx +
test eax eax +
mov eax [esp+1Ch] +
cmovnz eax ebp +
mov [esp+1Ch] eax +
lea eax [esp+28h] +
call sub_432190  +
jmp loc_444AC0  +
***
mov dword ptr [esp+1Ch] 0 +
nop   +
movzx eax byte ptr [esi+3] +
and eax 6 +
cmp al 4 +
jz loc_444C20  +
mov eax [esp+70h] +
mov dword ptr [esp+4] offset a_eh_frame_0 +
mov [esp] eax +
call sub_410840  +
test eax eax +
jz loc_444C20  +
mov ebx [eax+0A0h] +
test ebx ebx +
jz loc_444C20  +
lea ebp [esp+28h] +
jmp loc_444BAA  +
mov ebx [ebx+0A0h] +
test ebx ebx +
jz loc_444C20  +
mov edx [ebx+24h] +
test edx edx +
jz loc_444BA0  +
mov edi [ebx+94h] +
mov eax [edi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_444BA0  +
mov ecx ebx +
mov edx esi +
mov eax ebp +
call sub_438700  +
test eax eax +
jz loc_444CF0  +
mov [esp+0Ch] ebp +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edi +
call sub_445A30  +
mov [esp+10h] ebp +
mov dword ptr [esp+0Ch] offset sub_431F80 +
mov [esp+8] ebx +
mov [esp+4] esi +
mov [esp] edi +
call sub_447020  +
mov edx ebx +
test eax eax +
mov eax 1 +
cmovz eax [esp+1Ch] +
mov [esp+1Ch] eax +
mov eax ebp +
call sub_432190  +
jmp loc_444BA0  +
***
mov ebx [esi+34h] +
test ebx ebx +
jz loc_444CA6  +
lea ebp [esp+28h] +
jmp loc_444C3A  +
mov ebx [ebx+9Ch] +
test ebx ebx +
jz loc_444CA6  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_444C30  +
mov edi [eax+1B0h] +
mov eax [edi+110h] +
test eax eax +
jz loc_444C30  +
mov ecx ebx +
mov edx esi +
mov eax ebp +
call sub_4320A0  +
test eax eax +
jz loc_444CF0  +
mov eax [edi+110h] +
mov [esp+8] esi +
mov [esp+4] ebp +
mov [esp] ebx +
call eax  +
mov edx [ebx+0A0h] +
test eax eax +
mov eax 1 +
cmovz eax [esp+1Ch] +
mov [esp+1Ch] eax +
mov eax [esp+34h] +
test eax eax +
jz loc_444C30  +
cmp eax [edx+78h] +
jz loc_444C30  +
mov [esp] eax +
call free  +
jmp loc_444C30  +
***
movzx eax byte ptr [esi+3] +
and eax 6 +
cmp al 4 +
jz loc_444CFA  +
test al al +
mov ebx [esp+1Ch] +
jz loc_444A7C  +
movzx eax byte ptr [esi] +
and eax 3 +
cmp al 2 +
jz loc_444A7C  +
mov eax [esp+70h] +
mov [esp+4] esi +
mov [esp] eax +
call sub_4476E0  +
test eax eax +
mov eax 1 +
cmovnz ebx eax +
jmp loc_444A7C  +
***
mov ebx 0FFFFFFFFh +
jmp loc_444A7C  +
***
mov [esp] esi +
call sub_446DB0  +
movzx eax byte ptr [esi+3] +
and eax 6 +
jmp loc_444CB1  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+44h] +
cmp dword ptr [ebx+3Ch] offset off_476230 +
jz loc_444D3C  +
mov ebp [ebx+14h] +
test ebp 20000h +
jz loc_444D3C  +
mov eax [ebx+8Ch] +
mov esi [eax+78h] +
test esi esi +
jz loc_444D46  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [ebx] +
mov [esp+14h] edx +
mov edx ebp +
and edx 2000000h +
mov [esp+10h] edx +
jz loc_444E65  +
mov eax [eax+7Ch] +
test eax eax +
jz loc_444E65  +
mov eax [eax+8Ch] +
mov edx [eax+74h] +
test edx edx +
jz loc_444E65  +
mov [esp] edx +
call sub_416850  +
mov edi [eax+0Ch] +
mov [esp+18h] eax +
test edi edi +
jz loc_445065  +
mov [esp+44h] ebx +
mov esi edi +
mov ebx ebp +
mov [esp+1Ch] edi +
mov ebp [esp+14h] +
jmp loc_444DAD  +
mov esi [esi] +
test esi esi +
jz loc_444EB0  +
mov edi [esi+4] +
mov eax [edi+14h] +
xor eax ebx +
test eax 2000000h +
jnz loc_444DDE  +
mov ecx [esp+10h] +
test ecx ecx +
jnz loc_445040  +
mov eax [edi] +
mov [esp] ebp +
mov [esp+4] eax +
call strcmp  +
test eax eax +
jz loc_444F7B  +
mov eax [edi+94h] +
test byte ptr [eax+2Ah] 20h +
jz loc_444DA3  +
mov ebx [esp+44h] +
mov eax [esp+48h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_416920  +
test eax eax +
jz loc_444D3C  +
mov edx [esp+10h] +
test edx edx +
jz loc_444E5B  +
mov eax [ebx+8Ch] +
mov edx [eax+7Ch] +
test edx edx +
jz loc_444E5B  +
mov ecx [esi+4] +
mov eax [edx+8Ch] +
mov dword ptr [edx+3Ch] offset off_476230 +
mov [edx+7Ch] ecx +
mov eax [eax+7Ch] +
cmp eax edx +
jnz loc_444E57  +
jmp loc_444E5B  +
mov [eax+7Ch] ecx +
mov dword ptr [eax+3Ch] offset off_476230 +
mov eax [eax+8Ch] +
mov eax [eax+7Ch] +
cmp eax edx +
jz loc_444E5B  +
test eax eax +
jnz loc_444E40  +
mov eax 1 +
jmp loc_444D3E  +
***
mov esi [esp+14h] +
mov ecx 0Eh +
mov edi offset a_gnu_linkonc_1 +
mov edx [esp+14h] +
cmps   +
setnbe cl  +
setb al  +
cmp cl al +
jnz loc_444D7A  +
mov eax edx +
mov esi edx +
add eax 0Eh +
mov dword ptr [esp+4] 2Eh +
mov [esp] eax +
call strchr  +
lea edx [eax+1] +
test eax eax +
cmovz edx esi +
jmp loc_444D7A  +
***
mov eax [esp+10h] +
mov edi [esp+1Ch] +
mov ebx [esp+44h] +
test eax eax +
jz loc_444F07  +
mov eax [ebx+8Ch] +
mov eax [eax+7Ch] +
test eax eax +
jz loc_444EDE  +
mov edx [eax+8Ch] +
mov esi [edx+7Ch] +
cmp esi eax +
jz loc_444FFC  +
mov eax [esp+18h] +
mov [esp+4] ebx +
mov [esp] eax +
call sub_416880  +
test eax eax +
jz loc_444FC4  +
xor eax eax +
cmp dword ptr [ebx+3Ch] offset off_476230 +
setz al  +
jmp loc_444D3E  +
***
mov eax [edi+4] +
test byte ptr [eax+17h] 2 +
jz loc_444F2A  +
mov eax [eax+8Ch] +
mov ecx [eax+7Ch] +
test ecx ecx +
jz loc_444F2A  +
mov eax [ecx+8Ch] +
mov esi [eax+7Ch] +
cmp esi ecx +
jz loc_444FA0  +
mov edi [edi] +
test edi edi +
jnz loc_444F07  +
mov esi [esp+14h] +
mov edi offset a_gnu_linkonc_2 +
mov ecx 10h +
cmps   +
jnz loc_444EDE  +
mov eax [esp+18h] +
mov eax [eax+0Ch] +
test eax eax +
jz loc_444EDE  +
mov ebp 10h +
mov [esp+44h] ebx +
mov edx [eax+4] +
test byte ptr [edx+17h] 2 +
jnz loc_444F6C  +
mov esi [edx] +
mov edi offset a_gnu_linkonc_3 +
mov ecx ebp +
cmps   +
jz loc_444FDC  +
mov eax [eax] +
test eax eax +
jnz loc_444F56  +
mov ebx [esp+44h] +
jmp loc_444EDE  +
***
mov ebx [esp+44h] +
mov eax [esp+48h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_416920  +
test eax eax +
jnz loc_444E5B  +
jmp loc_444D3C  +
***
mov ecx [esp+48h] +
mov edx ebx +
mov eax esi +
call sub_4327A0  +
test eax eax +
jz loc_444F2A  +
mov dword ptr [ebx+3Ch] offset off_476230 +
mov [ebx+7Ch] esi +
jmp loc_444F30  +
***
mov eax [esp+48h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp] offset aFPAlready_li_0 +
call eax  +
jmp loc_444EF6  +
***
mov eax [esp+40h] +
cmp [edx+94h] eax +
mov ebx [esp+44h] +
jz loc_444EDE  +
mov dword ptr [ebx+3Ch] offset off_476230 +
jmp loc_444EDE  +
***
test edi edi +
jnz loc_44500F  +
jmp loc_444EDE  +
***
mov edi [edi] +
test edi edi +
jz loc_444EDE  +
mov eax [edi+4] +
test byte ptr [eax+17h] 2 +
jnz loc_445005  +
mov ecx [esp+48h] +
mov edx esi +
call sub_4327A0  +
test eax eax +
jz loc_445005  +
mov eax [edi+4] +
mov dword ptr [esi+3Ch] offset off_476230 +
mov [esi+7Ch] eax +
mov dword ptr [ebx+3Ch] offset off_476230 +
jmp loc_444EDE  +
***
mov ebx [esp+44h] +
mov eax [esp+48h] +
mov [esp+4] esi +
mov [esp] ebx +
mov [esp+8] eax +
call sub_416920  +
test eax eax +
jnz loc_444E12  +
jmp loc_444D3C  +
***
cmp dword ptr [esp+10h] 0 +
jnz loc_444EC0  +
jmp loc_444F30  +
***
mov eax [esp+4] +
cmp dword ptr [eax+10h] 0FFFFFFF2h +
setz al  +
movzx eax al +
retn   +
***
mov eax 0FFFFFFF2h +
retn   +
***
mov eax offset off_4760E0 +
retn   +
***
mov eax [esp+4] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+174h] +
movzx eax byte ptr [eax+0Ah] +
shr al 3 +
movzx eax al +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+24h] +
mov eax [esi+8Ch] +
mov ebx [eax+70h] +
test ebx ebx +
jz loc_4450F0  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
mov edx [esi] +
mov ecx [esp+28h] +
mov eax [esp+20h] +
call sub_434B60  +
test eax eax +
jz loc_4450E6  +
mov [esp+4] eax +
mov eax [esp+20h] +
mov [esp] eax +
call sub_410920  +
test eax eax +
mov ebx eax +
jz loc_4450E6  +
mov eax [esi+8Ch] +
mov [eax+70h] ebx +
jmp loc_4450E6  +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov esi [esp+20h] +
mov eax [esi+8Ch] +
mov ebx [eax+70h] +
test ebx ebx +
jz loc_445150  +
add esp 10h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov edx [esi] +
mov ecx [esp+30h] +
mov eax [esp+2Ch] +
call sub_434B60  +
test eax eax +
mov edi eax +
jz loc_445147  +
mov [esp+4] eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_410920  +
test eax eax +
mov ebx eax +
jz loc_445186  +
mov eax [esi+8Ch] +
mov [eax+70h] ebx +
jmp loc_445147  +
***
mov eax [esi+14h] +
mov [esp+4] edi +
and eax 1 +
cmp eax 1 +
sbb eax eax +
and eax 0FFFFFFFDh +
add eax 10410Bh +
mov [esp+8] eax +
mov eax [esp+24h] +
mov [esp] eax +
call near ptr dword_410C20  +
test eax eax +
mov ebx eax +
jz loc_44517B  +
cmp dword ptr [esp+30h] 1 +
mov edx [eax+8Ch] +
sbb eax eax +
and eax 5 +
add eax 4 +
mov [edx+4] eax +
mov eax [esp+28h] +
mov [ebx+40h] eax +
jmp loc_44517B  +
***
sub esp 3Ch +
mov eax [esp+48h] +
mov edx [esp+44h] +
movzx ecx byte ptr [eax+30h] +
mov [edx+30h] cl +
movzx ecx byte ptr [eax+32h] +
movzx eax byte ptr [eax+31h] +
mov [edx+32h] cl +
lea ecx [esp+1Ch] +
mov [esp+29h] al +
mov eax [esp+40h] +
mov eax [eax+4] +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 1 +
mov dword ptr [esp] 14h +
call sub_432F50  +
add esp 3Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [esp+34h] +
mov ebp [esp+38h] +
mov edx [ebx+4] +
mov esi [eax+4Ch] +
mov edi [edx+1B0h] +
lea ecx [esi+1] +
mov edx [eax+6Ch] +
mov [eax+4Ch] ecx +
mov ecx [edi+174h] +
movzx ecx byte ptr [ecx+4] +
imul esi ecx +
add esi edx +
add edx [eax+24h] +
add ecx esi +
mov eax [edi+174h] +
cmp ecx edx +
jbe loc_445290  +
mov dword ptr [esp+4] 3519h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6C0  +
mov eax [edi+174h] +
mov eax [eax+44h] +
mov [esp+38h] esi +
mov [esp+34h] ebp +
mov [esp+30h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov eax [esp+34h] +
mov ebp [esp+38h] +
mov edx [ebx+4] +
mov esi [eax+4Ch] +
mov edi [edx+1B0h] +
lea ecx [esi+1] +
mov edx [eax+6Ch] +
mov [eax+4Ch] ecx +
mov ecx [edi+174h] +
movzx ecx byte ptr [ecx+3] +
imul esi ecx +
add esi edx +
add edx [eax+24h] +
add ecx esi +
mov eax [edi+174h] +
cmp ecx edx +
jbe loc_445310  +
mov dword ptr [esp+4] 3524h +
mov dword ptr [esp] offset a____Binutils_3 +
call sub_40C6C0  +
mov eax [edi+174h] +
mov eax [eax+3Ch] +
mov [esp+38h] esi +
mov [esp+34h] ebp +
mov [esp+30h] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp eax  +
***
push esi  +
push ebx  +
sub esp 4 +
mov edi [eax] +
mov [esp+4+var_4] ecx +
mov ebx edi +
jmp loc_44534E  +
lea esi [ebx+1] +
mov [eax] esi +
movzx ecx byte ptr [ebx] +
test cl cl +
jns loc_445360  +
mov ebx esi +
cmp edx ebx +
ja loc_445340  +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4+var_4] +
movzx ebp cl +
cmp edi ebx +
mov [eax] ebp +
jb loc_445372  +
jmp loc_445389  +
mov ebp eax +
sub ebx 1 +
movzx eax byte ptr [ebx] +
mov edx [esp+4+var_4] +
shl ebp 7 +
and eax 7Fh +
or eax ebp +
cmp ebx edi +
mov [edx] eax +
jnz loc_445370  +
add esp 4 +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+4] +
mov eax [eax+4] +
retn   +
***
mov ecx eax +
xor eax eax +
test bl 2 +
jnz loc_4453E6  +
mov eax [ecx+0Ch] +
cmp eax 4 +
jz loc_4453E6  +
test bl 1 +
jz loc_4453E8  +
shr bl 2 +
and ebx 1 +
test byte ptr [ecx+5] 10h +
jz loc_4453DA  +
add ebx 1 +
lea ecx [ebx+edx-1] +
add eax ebx +
add eax ecx +
neg edx  +
and eax edx +
pop ebx  +
retn   +
shr bl 2 +
and ebx 1 +
lea ecx [ebx+edx-1] +
neg edx  +
add eax ecx +
and eax edx +
pop ebx  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 14h +
mov eax [eax] +
cmp edx eax +
jbe loc_445450  +
lea edi [eax+1] +
mov [ebx] edi +
movzx ebp byte ptr [eax] +
mov edx ebp +
and edx 0FFFFFFC0h +
mov [esp+18h+var_15] dl +
movzx edx dl +
cmp [esp+18h+var_15] 0 +
cmovz edx ebp +
cmp edx 0C0h +
ja loc_445450  +
jmp ds:off_4910A0[edx*4]  +
mov eax esi +
sub eax edi +
cmp ecx eax +
jbe loc_445578  +
mov [ebx] esi +
nop   +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx esi +
sub edx edi +
cmp edx 7 +
jbe loc_44544C  +
add eax 9 +
mov [ebx] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ecx [esp+18h+var_8] +
mov edx esi +
mov eax ebx +
call sub_445330  +
test eax eax +
jz loc_445450  +
mov edx [ebx] +
mov ecx esi +
mov eax [esp+18h+var_8] +
sub ecx edx +
cmp eax ecx +
ja loc_44544C  +
add eax edx +
mov [ebx] eax +
mov eax 1 +
jmp loc_445452  +
add eax 2 +
add esi 1 +
jmp loc_4454C5  +
mov edx eax +
mov [ebx] eax +
add eax 1 +
cmp byte ptr [edx-1] 0 +
jns loc_44546E  +
cmp eax esi +
jnz loc_4454B8  +
jmp loc_445450  +
add eax 2 +
lea ecx [esi+1] +
jmp loc_4454E5  +
mov edx eax +
mov [ebx] eax +
add eax 1 +
cmp byte ptr [edx-1] 0 +
jns loc_445480  +
cmp eax ecx +
jnz loc_4454D8  +
jmp loc_445450  +
cmp esi edi +
jz loc_44544C  +
add eax 2 +
mov [ebx] eax +
mov eax 1 +
jmp loc_445452  +
mov edx esi +
sub edx edi +
cmp edx 1 +
jbe loc_44544C  +
add eax 3 +
mov [ebx] eax +
mov eax 1 +
jmp loc_445452  +
mov edx esi +
sub edx edi +
cmp edx 3 +
jbe loc_44544C  +
add eax 5 +
mov [ebx] eax +
mov eax 1 +
jmp loc_445452  +
add eax 2 +
lea ecx [esi+1] +
jmp loc_445555  +
mov edx eax +
mov [ebx] eax +
add eax 1 +
cmp byte ptr [edx-1] 0 +
jns loc_44556F  +
cmp eax ecx +
jnz loc_445548  +
jmp loc_445450  +
add edx 1 +
mov [ebx] edx +
cmp byte ptr [edx-1] 0 +
jns loc_44546E  +
cmp esi edx +
ja loc_445560  +
jmp loc_445450  +
add ecx edi +
mov eax 1 +
mov [ebx] ecx +
jmp loc_445452  +
***
mov eax [eax] +
mov eax [eax+8Ch] +
mov eax [eax+88h] +
mov edx [eax+3Ch] +
mov ecx [eax+38h] +
mov eax [esp+arg_4] +
add ecx [edx+1Ch] +
mov eax [eax] +
mov eax [eax+8Ch] +
mov eax [eax+88h] +
mov ebx [eax+3Ch] +
mov edx [eax+38h] +
mov eax 0FFFFFFFFh +
add edx [ebx+1Ch] +
xor ebx ebx +
cmp ecx edx +
setnbe bl  +
cmovnb eax ebx +
pop ebx  +
retn   +
***
push edi  +
mov edi edx +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
mov eax [ecx+8] +
mov ebx [esp+28h+arg_4] +
lea edx [eax+eax*2] +
mov eax [ebx] +
lea eax [eax+edx*4] +
cmp eax [ebx+8] +
mov [ebx+4] eax +
jnb loc_445650  +
mov edx [ecx+0Ch] +
add edx [ecx+10h] +
cmp [eax] edx +
jb loc_445629  +
jmp loc_445650  +
mov edx [ebx+4] +
lea eax [edx+0Ch] +
cmp [ebx+8] eax +
mov [ebx+4] eax +
jbe loc_445650  +
mov eax [ebp+0Ch] +
add eax [ebp+10h] +
cmp [edx+0Ch] eax +
jnb loc_445650  +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_1C] ebx +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_20] eax +
call sub_443C20  +
test eax eax +
jnz loc_445610  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor edi edi +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
mov eax [ebp+4] +
cmp [ebx+4] eax +
jz loc_445683  +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0] +
cmp [ebx] eax +
jnz loc_445679  +
movzx eax word ptr [ebp+8] +
cmp [ebx+8] ax +
jnz loc_445679  +
lea eax [ebp+0Ah] +
lea esi [ebx+0Ah] +
mov [esp+24h+var_20] eax +
mov [esp+24h+var_24] esi +
call strcmp  +
test eax eax +
jnz loc_445679  +
mov edi offset unk_4913A4 +
mov ecx 3 +
cmps   +
setnbe dl  +
setb al  +
sub edx eax +
movsx edi dl +
test edi edi +
jz loc_445679  +
mov eax [ebp+20h] +
xor edi edi +
cmp [ebx+20h] eax +
jnz loc_445679  +
mov eax [ebp+24h] +
cmp [ebx+24h] eax +
jnz loc_445679  +
mov eax [ebp+28h] +
cmp [ebx+28h] eax +
jnz loc_445679  +
mov eax [ebp+2Ch] +
cmp [ebx+2Ch] eax +
jnz loc_445679  +
lea eax [ebp+30h] +
mov [esp+24h+var_20] eax +
lea eax [ebx+30h] +
mov [esp+24h+var_1C] 8 +
mov [esp+24h+var_24] eax +
call memcmp  +
test eax eax +
mov edi eax +
jnz loc_44575A  +
mov eax [ebx+38h] +
mov edx [eax] +
mov eax [ebp+38h] +
mov eax [eax] +
mov eax [eax+3Ch] +
cmp [edx+3Ch] eax +
jnz loc_445679  +
mov eax [ebp+3Ch] +
cmp [ebx+3Ch] eax +
jnz loc_445679  +
movzx eax byte ptr [ebx+3Fh] +
cmp al 32h +
ja loc_445679  +
add ebp 41h +
add ebx 41h +
mov [esp+24h+var_1C] eax +
mov [esp+24h+var_20] ebp +
mov [esp+24h+var_24] ebx +
call memcmp  +
test eax eax +
setz al  +
movzx eax al +
mov edi eax +
jmp loc_445679  +
xor edi edi +
jmp loc_445679  +
***
jmp sub_445770  +
***
mov eax 1 +
mov ecx [esp+arg_0] +
mov ebx [edx] +
cmp [ecx] ebx +
ja loc_445797  +
jb loc_4457A0  +
mov ebx [edx+4] +
cmp [ecx+4] ebx +
mov edx [edx+4] +
sbb ebx ebx +
cmp [ecx+4] edx +
cmovbe eax ebx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
cmp ecx 4 +
mov ebx [esp+18h+arg_0] +
jz loc_445808  +
cmp ecx 8 +
jz loc_4457F5  +
cmp ecx 2 +
jz loc_4457E2  +
mov [esp+18h+var_14] 0C1h +
mov [esp+18h+var_18] offset a____Binutil_25 +
call sub_40C6C0  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
test ebx ebx +
mov eax [eax] +
jz loc_445840  +
mov eax [eax+38h] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
test ebx ebx +
mov eax [eax] +
jz loc_445830  +
mov eax [eax+20h] +
mov [esp+18h+var_18] edx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
test ebx ebx +
mov eax [eax] +
jz loc_445820  +
mov eax [eax+2Ch] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
mov eax [eax+28h] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
mov eax [eax+1Ch] +
mov [esp+18h+var_18] edx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax+34h] +
mov [esp+18h+arg_0] edx +
add esp 18h +
pop ebx  +
jmp eax  +
***
mov ebx [esp+18h+arg_0] +
cmp ebx 4 +
jz loc_4458B0  +
cmp ebx 8 +
jz loc_445893  +
cmp ebx 2 +
jz loc_445880  +
mov [esp+18h+var_14] 0D2h +
mov [esp+18h+var_18] offset a____Binutil_25 +
call sub_40C6C0  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax] +
mov eax [eax+3Ch] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] ecx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax] +
mov eax [eax+24h] +
mov [esp+18h+var_10] edx +
mov [esp+18h+var_18] ecx +
mov [esp+18h+var_14] 0 +
call eax  +
add esp 18h +
pop ebx  +
retn   +
mov eax [eax] +
mov eax [eax+30h] +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] ecx +
call eax  +
add esp 18h +
pop ebx  +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov eax [esp+14h+arg_0] +
mov edx [esp+14h+arg_8] +
mov ecx [ebx+24h] +
mov esi [eax+1Ch] +
mov eax 1 +
test ecx ecx +
jz loc_44591D  +
test word ptr [ebx+18h] 380h +
jnz loc_44591D  +
mov ecx [ebx+3Ch] +
test ecx ecx +
jz loc_445907  +
cmp ecx offset off_476230 +
jz loc_44591D  +
mov eax [edx+4] +
cmp eax [edx+8] +
jz loc_44591B  +
mov ecx [edx+20h] +
mov eax [eax+4] +
shr eax cl +
test eax eax +
jnz loc_445923  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_C] 0 +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] edx +
call sub_436130  +
test eax eax +
jz loc_44591B  +
mov edx [eax+8Ch] +
mov [edx+84h] ebx +
mov edx [eax+3Ch] +
test edx edx +
jz loc_44595A  +
cmp edx offset off_476230 +
jz loc_445A00  +
movzx edx word ptr [ebx+18h] +
and dx 0FC7Fh +
or dh 3 +
mov [ebx+18h] dx +
mov edx [ebx+8Ch] +
mov [edx+88h] eax +
mov edx [esi+0A8h] +
cmp edx [esi+0B0h] +
jz loc_4459A1  +
mov eax [esi+0B4h] +
lea ecx [edx+1] +
mov [esi+0A8h] ecx +
mov [eax+edx*4] ebx +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
test edx edx +
jnz loc_4459D7  +
mov dword ptr [esi+0ACh] 1 +
mov dword ptr [esi+0B0h] 2 +
mov [esp+14h+var_14] 8 +
call sub_40EFC0  +
mov [esi+0B4h] eax +
test eax eax +
jz loc_445A0C  +
mov edx [esi+0A8h] +
jmp loc_44598A  +
lea eax [edx+edx] +
mov [esi+0B0h] eax +
mov eax [esi+0B4h] +
shl edx 3 +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] eax +
call sub_40F050  +
mov [esi+0B4h] eax +
jmp loc_4459CB  +
or dword ptr [ebx+14h] 8000h +
jmp loc_44595A  +
mov [esp+14h+var_10] 1F6h +
mov [esp+14h+var_14] offset a____Binutil_25 +
call sub_40C6C0  +
mov eax [esi+0B4h] +
jmp loc_4459CF  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_4] +
mov ebp [esp+7Ch+arg_8] +
mov edi [esp+7Ch+arg_0] +
mov [esp+7Ch+var_20] 0 +
mov eax [eax+1Ch] +
mov [esp+7Ch+var_64] eax +
mov eax [ebp+24h] +
test eax eax +
jz loc_445A6A  +
test word ptr [ebp+18h] 380h +
jz loc_445A72  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebp+3Ch] offset off_476230 +
jz loc_445A6A  +
lea eax [esp+7Ch+var_20] +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] edi +
call sub_4111A0  +
test eax eax +
jz loc_445BA0  +
cmp dword ptr [ebp+24h] 3 +
jbe loc_445AB4  +
mov eax [edi+4] +
mov edx [esp+7Ch+var_20] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
test eax eax +
jz loc_445BF6  +
mov eax [edi+4] +
mov eax [eax+1B0h] +
mov eax [eax+11Ch] +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] edi +
call eax  +
test eax eax +
mov [esp+7Ch+var_58] eax +
jz loc_445BA0  +
mov eax [esp+7Ch+var_20] +
mov ebx [ebp+24h] +
mov [esp+7Ch+var_1C] eax +
add ebx eax +
cmp eax ebx +
jz loc_446901  +
mov edx ebx +
sub edx eax +
cmp edx 3 +
mov [esp+7Ch+var_5C] 1 +
mov [esp+7Ch+var_60] 0 +
jbe loc_445B9C  +
mov [esp+7Ch+arg_8] ebp +
mov esi eax +
mov ebp [esp+7Ch+var_5C] +
jmp loc_445B63  +
lea ecx [eax+4] +
mov [esp+7Ch+var_1C] ecx +
mov ecx [edi+4] +
mov ecx [ecx+28h] +
mov [esp+7Ch+var_7C] eax +
call ecx  +
mov ecx ebx +
cmp eax 1 +
mov eax [esp+7Ch+var_1C] +
adc [esp+7Ch+var_60] 0 +
sub esi 4 +
sub ecx eax +
cmp esi ecx +
ja loc_445B95  +
add esi eax +
cmp ebx esi +
mov [esp+7Ch+var_1C] esi +
jz loc_445C20  +
mov eax ebx +
add ebp 1 +
sub eax esi +
cmp eax 3 +
jbe loc_445B95  +
lea eax [esi+4] +
mov [esp+7Ch+var_1C] eax +
mov eax [edi+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] esi +
call eax  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_445F19  +
test eax eax +
jz loc_445C20  +
mov eax [esp+7Ch+var_1C] +
mov ecx ebx +
sub ecx eax +
cmp ecx 3 +
ja loc_445B20  +
mov ebp [esp+7Ch+arg_8] +
mov [esp+7Ch+var_1C] ebx +
mov eax [esp+7Ch+arg_4] +
xor esi esi +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+7Ch+var_74] ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aPErrorInBANo_e +
call eax  +
mov eax [esp+7Ch+var_64] +
mov dword ptr [eax+0B8h] 0 +
mov eax [esp+7Ch+var_20] +
test eax eax +
jz loc_445BDE  +
mov [esp+7Ch+var_7C] eax +
call free  +
test esi esi +
jz loc_445A6A  +
mov [esp+7Ch+var_7C] esi +
call free  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+7Ch+arg_C] +
mov edx [eax+8] +
cmp [eax+4] edx +
jnz loc_445AB4  +
mov eax [esp+7Ch+var_20] +
mov [esp+7Ch+var_7C] eax +
call free  +
jmp loc_445A6A  +
mov eax ebp +
mov [esp+7Ch+var_5C] ebp +
mov ebp [esp+7Ch+arg_8] +
shl eax 5 +
add eax 8 +
mov [esp+7Ch+var_7C] eax +
call sub_40F150  +
test eax eax +
mov [esp+7Ch+var_4C] eax +
jz loc_445BA0  +
imul eax [esp+7Ch+var_60] +
mov [esp+7Ch+var_7C] eax +
call sub_40F150  +
test eax eax +
mov esi eax +
jz loc_445EDC  +
mov ebx [edi+4] +
mov ecx [ebp+24h] +
mov eax [esp+7Ch+var_20] +
mov edx [ebx+1B0h] +
test ecx ecx +
mov [esp+7Ch+var_1C] eax +
mov [esp+7Ch+var_48] eax +
mov edx [edx+0BCh] +
mov [esp+7Ch+var_38] edx +
jz loc_446C1F  +
mov edx [esp+7Ch+var_4C] +
mov eax [edx] +
shl eax 5 +
lea eax [edx+eax+8] +
mov edx [esp+7Ch+var_48] +
mov [esp+7Ch+var_50] eax +
mov eax edx +
add eax ecx +
cmp ecx 3 +
jbe loc_44688C  +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_40] 0 +
mov [esp+7Ch+var_54] esi +
mov [esp+7Ch+arg_0] edi +
mov [esp+7Ch+arg_8] ebp +
mov edx [esp+7Ch+var_44] +
mov eax edx +
add eax 4 +
mov [esp+7Ch+var_1C] eax +
mov eax [ebx+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov edx [esp+7Ch+var_1C] +
mov ebx edx +
mov esi eax +
mov eax [esp+7Ch+var_20] +
sub ebx eax +
mov ecx ebx +
mov [esp+7Ch+var_34] ebx +
mov ebx [esp+7Ch+arg_8] +
lea ecx [esi+ecx] +
mov edi [ebx+24h] +
cmp ecx edi +
ja loc_445ECA  +
mov ecx [esp+7Ch+var_48] +
lea ebp [edx+esi] +
mov ebx [esp+7Ch+arg_C] +
sub ecx eax +
mov eax ecx +
mov ecx [esp+7Ch+var_50] +
mov [ecx+10h] eax +
lea eax [esi+4] +
mov [esp+7Ch+var_3C] eax +
mov [ecx+0Ch] eax +
mov eax [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov [esp+7Ch+var_48] eax +
sub eax [ebx] +
sar eax 2 +
imul eax eax +
test esi esi +
mov [ecx+8] eax +
jz loc_446BA4  +
mov eax ebp +
sub eax edx +
cmp eax 3 +
jbe loc_446452  +
lea eax [edx+4] +
mov [esp+7Ch+var_1C] eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
test eax eax +
jnz loc_445F25  +
mov eax [esp+7Ch+var_50] +
or byte ptr [eax+1Bh] 1 +
mov edx [esp+7Ch+var_40] +
lea ebx [edx+1] +
mov [esp+7Ch+var_3C] ebx +
imul ebx edx +
add ebx [esp+7Ch+var_54] +
mov [ebx+38h] eax +
mov eax [esp+7Ch+var_1C] +
mov [ebx] esi +
cmp ebp eax +
mov [esp+7Ch+var_48] eax +
jbe loc_445ECA  +
lea esi [eax+1] +
mov [esp+7Ch+var_1C] esi +
movzx eax byte ptr [eax] +
lea edx [eax-3] +
cmp dl 1 +
mov [ebx+8] al +
jbe loc_445DC7  +
cmp al 1 +
jnz loc_445ECA  +
mov [esp+7Ch+var_7C] esi +
call strlen  +
cmp eax 13h +
ja loc_445ECA  +
lea edx [ebx+0Ah] +
add eax 1 +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] esi +
mov [esp+7Ch+var_40] edx +
call memcpy  +
mov eax [esp+7Ch+var_1C] +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] eax +
call strchr  +
mov edi [esp+7Ch+arg_C] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_1C] edx +
mov edx [esp+7Ch+arg_C] +
mov edx [edx+4] +
cmp ecx edx +
jbe loc_445E66  +
mov esi [esp+7Ch+var_44] +
sub esi [esp+7Ch+var_20] +
cmp esi [edx] +
jbe loc_445E66  +
mov edi [edx+4] +
test edi edi +
jnz loc_445ECA  +
add edx 0Ch +
jmp loc_445E56  +
cmp [edx] esi +
jnb loc_445E5C  +
add edx 0Ch +
cmp dword ptr [edx-8] 0 +
jnz loc_446670  +
cmp edx ecx +
mov edi edx +
jb loc_445E45  +
mov edi [esp+7Ch+arg_C] +
mov [edi+4] edx +
cmp byte ptr [eax+1] 65h +
jz loc_446895  +
cmp byte ptr [ebx+8] 3 +
jbe loc_445E97  +
mov eax [esp+7Ch+var_1C] +
lea edx [eax+1] +
cmp ebp edx +
jbe loc_445ECA  +
movzx edx byte ptr [eax] +
cmp edx [esp+7Ch+var_58] +
jnz loc_445ECA  +
cmp byte ptr [eax+1] 0 +
jnz loc_445ECA  +
add eax 2 +
mov [esp+7Ch+var_1C] eax +
lea ecx [ebx+20h] +
mov edx ebp +
lea eax [esp+7Ch+var_1C] +
call sub_445330  +
test eax eax +
jz loc_445ECA  +
mov edi [esp+7Ch+var_1C] +
mov eax edi +
jmp loc_445EC6  +
lea edx [eax+1] +
mov [esp+7Ch+var_1C] edx +
movzx ecx byte ptr [edx-1] +
test cl cl +
jns loc_44646F  +
mov eax edx +
cmp ebp eax +
ja loc_445EB1  +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov eax [esp+7Ch+arg_4] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+7Ch+var_74] ebp +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] offset aPErrorInBANo_e +
call eax  +
mov eax [esp+7Ch+var_64] +
mov dword ptr [eax+0B8h] 0 +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_7C] eax +
call free  +
jmp loc_445BCE  +
mov ebp [esp+7Ch+arg_8] +
jmp loc_445BA0  +
mov edx [esp+7Ch+var_50] +
imul ecx [esp+7Ch+var_40] +
mov ebx [esp+7Ch+var_54] +
mov edx [edx+10h] +
add ecx ebx +
mov [esp+7Ch+var_48] edx +
add edx 4 +
sub edx eax +
cmp ebx ecx +
jnb loc_446A22  +
mov eax [ebx+38h] +
cmp [eax+10h] edx +
jnz loc_445F5D  +
jmp loc_446A22  +
mov eax [ebx+38h] +
cmp [eax+10h] edx +
jz loc_445F64  +
add ebx 74h +
cmp ebx ecx +
jb loc_445F55  +
cmp ebx ecx +
jz loc_445ECA  +
mov eax [ebx+38h] +
mov edi [esp+7Ch+var_50] +
mov [edi] eax +
mov ecx [ebx+38h] +
movzx eax byte ptr [edi+1Bh] +
movzx edx byte ptr [ecx+1Bh] +
and eax 0FFFFFFF7h +
and edx 8 +
or eax edx +
mov [edi+1Bh] al +
movzx edx byte ptr [ecx+1Bh] +
and eax 0FFFFFFFBh +
and edx 4 +
or eax edx +
mov [edi+1Bh] al +
mov eax [esp+7Ch+arg_C] +
mov edx [eax+4] +
mov esi [eax+8] +
cmp edx esi +
jnb loc_445FE9  +
mov ecx [esp+7Ch+var_1C] +
sub ecx [esp+7Ch+var_20] +
cmp ecx [edx] +
jbe loc_445FE9  +
mov eax [edx+4] +
test eax eax +
jnz loc_445ECA  +
lea eax [edx+0Ch] +
jmp loc_445FD9  +
cmp [eax] ecx +
jnb loc_445FDF  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_446406  +
cmp eax esi +
mov edx eax +
jb loc_445FC7  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
mov eax [esp+7Ch+arg_8] +
test byte ptr [eax+16h] 10h +
jz loc_446003  +
mov eax [esp+7Ch+arg_C] +
mov eax [eax] +
test eax eax +
jz loc_446080  +
cmp edx esi +
jnb loc_445ECA  +
mov eax [esp+7Ch+var_1C] +
sub eax [esp+7Ch+var_20] +
cmp [edx] eax +
jnz loc_445ECA  +
mov eax [esp+7Ch+arg_C] +
mov [esp+7Ch+var_6C] 0 +
mov [esp+7Ch+var_70] eax +
mov eax [esp+7Ch+var_38] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_7C] eax +
call sub_443840  +
test eax eax +
jz loc_446080  +
mov edx [esp+7Ch+arg_0] +
cmp [eax+94h] edx +
jnz loc_445ECA  +
mov eax [eax+8Ch] +
mov edi [esp+7Ch+var_50] +
mov edx [eax+80h] +
mov [edi+4] edx +
mov [eax+80h] edi +
mov eax [esp+7Ch+var_1C] +
mov [esp+7Ch+var_48] eax +
movzx eax byte ptr [ebx+3Eh] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_4466A3  +
and eax 7 +
cmp al 2 +
jz loc_446A47  +
jbe loc_446693  +
cmp al 3 +
lea esi [esi+0] +
jz loc_446A15  +
cmp al 4 +
mov [esp+7Ch+var_34] 8 +
jnz loc_4466A3  +
mov eax [esp+7Ch+var_34] +
lea esi [eax+eax] +
mov [esp+7Ch+var_18] eax +
mov eax ebp +
sub eax [esp+7Ch+var_48] +
cmp esi eax +
ja loc_446452  +
mov edi [esp+7Ch+var_34] +
neg edi  +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
add esi [esp+7Ch+var_48] +
mov eax [eax+4] +
mov ecx [edx+8] +
mov [esp+7Ch+var_1C] esi +
cmp ecx eax +
jbe loc_446C13  +
add edi esi +
mov edx [eax] +
mov esi edi +
sub esi [esp+7Ch+var_20] +
mov [esp+7Ch+var_30] edi +
cmp edx esi +
jnb loc_446431  +
add eax 0Ch +
jmp loc_446132  +
add eax 0Ch +
mov edx [eax-0Ch] +
cmp edx esi +
jnb loc_446427  +
cmp eax ecx +
mov edi eax +
jb loc_446124  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
mov eax [esp+7Ch+arg_0] +
mov ecx [esp+7Ch+var_34] +
mov edx [esp+7Ch+var_30] +
mov [esp+7Ch+var_7C] 0 +
add eax 4 +
call sub_4457B0  +
test eax eax +
jz loc_4469A0  +
cmp byte ptr [ebx+0Ah] 7Ah +
jz loc_446A2B  +
mov [esp+7Ch+var_18] 0 +
cmp byte ptr [ebx+3Dh] 0FFh +
jz loc_44643E  +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
mov edi [esp+7Ch+var_1C] +
mov eax [eax+4] +
mov esi [edx+8] +
cmp esi eax +
jbe loc_4461CF  +
mov ecx edi +
sub ecx [esp+7Ch+var_20] +
cmp ecx [eax] +
jbe loc_446858  +
lea edx [eax+0Ch] +
jmp loc_4461BF  +
lea edx [edx+0Ch] +
cmp [edx-0Ch] ecx +
jnb loc_44684E  +
cmp edx esi +
mov eax edx +
jb loc_4461B3  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
mov edx [esp+7Ch+var_50] +
mov eax edi +
sub eax [esp+7Ch+var_48] +
mov [edx+1Ah] al +
cmp byte ptr [ebx+0Ah] 7Ah +
jz loc_4469EE  +
mov eax ebp +
sub eax edi +
mov [esp+7Ch+var_18] eax +
add eax edi +
mov edx [esp+7Ch+arg_C] +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+arg_C] +
mov ecx [esp+7Ch+var_44] +
add ecx [esp+7Ch+var_3C] +
mov edx [edx+8] +
mov eax [eax+4] +
mov [esp+7Ch+var_1C] ecx +
cmp edx eax +
jbe loc_446241  +
sub ecx [esp+7Ch+var_20] +
cmp ecx [eax] +
jbe loc_446241  +
add eax 0Ch +
jmp loc_446231  +
add eax 0Ch +
cmp [eax-0Ch] ecx +
jnb loc_4466BC  +
cmp eax edx +
mov esi eax +
jb loc_446225  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+3Eh] +
xor edi edi +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_446277  +
and eax 7 +
cmp al 2 +
jz loc_446A0A  +
jbe loc_4469DB  +
cmp al 3 +
mov edi 4 +
jz loc_446277  +
cmp al 4 +
mov di 8 +
jnz loc_4469E7  +
mov ecx [esp+7Ch+var_34] +
xor esi esi +
mov [esp+7Ch+var_18] edi +
mov eax ecx +
mov [esp+7Ch+var_10] ecx +
cmp ebp eax +
jbe loc_4462A1  +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_446360  +
add eax 1 +
cmp ebp eax +
mov [esp+7Ch+var_10] eax +
ja loc_44628B  +
test ecx ecx +
jz loc_445ECA  +
test esi esi +
jz loc_4462BB  +
mov eax [esp+7Ch+var_50] +
test byte ptr [eax+1Bh] 1 +
jnz loc_445ECA  +
mov edx [esp+7Ch+var_50] +
mov eax ecx +
sub eax ebp +
add [edx+0Ch] eax +
cmp ebp ecx +
jz loc_4462D5  +
test byte ptr [edx+1Bh] 1 +
jz loc_4462D5  +
add [ebx+3Fh] al +
add [ebx] eax +
test esi esi +
jz loc_44638A  +
movzx eax byte ptr [ebx+3Eh] +
and eax 70h +
cmp al 10h +
jz loc_4462F6  +
mov eax [esp+7Ch+var_50] +
test byte ptr [eax+1Bh] 8 +
jz loc_44638A  +
lea eax ds:4[esi*4] +
mov [esp+7Ch+var_7C] eax +
call sub_40EFC0  +
mov edx [esp+7Ch+var_50] +
test eax eax +
mov [edx+1Ch] eax +
jz loc_445ECA  +
mov [eax] esi +
mov eax [esp+7Ch+var_34] +
xor esi esi +
mov edi edx +
mov [esp+7Ch+var_14] eax +
jmp loc_44633F  +
mov ecx [esp+7Ch+var_18] +
mov edx ebp +
lea eax [esp+7Ch+var_14] +
call sub_445400  +
test eax eax +
jz loc_445ECA  +
mov eax [esp+7Ch+var_14] +
cmp ebp eax +
jbe loc_44638A  +
cmp byte ptr [eax] 1 +
jnz loc_446324  +
mov edx [edi+1Ch] +
add eax 1 +
add esi 1 +
sub eax [esp+7Ch+var_48] +
mov [edx+esi*4] eax +
jmp loc_446324  +
xor eax eax +
cmp dl 1 +
setz al  +
mov ecx edi +
add esi eax +
mov edx ebp +
lea eax [esp+7Ch+var_10] +
call sub_445400  +
test eax eax +
jz loc_445ECA  +
mov ecx [esp+7Ch+var_10] +
mov eax ecx +
jmp loc_446287  +
mov edx [esp+7Ch+var_50] +
or byte ptr [edx+1Bh] 2 +
movzx eax byte ptr [ebx+3Eh] +
mov [edx+18h] al +
movzx eax byte ptr [ebx+3Dh] +
mov [edx+19h] al +
mov eax [esp+7Ch+var_4C] +
mov edx [eax] +
lea ecx [edx+1] +
mov [eax] ecx +
mov eax [esp+7Ch+var_1C] +
mov [esp+7Ch+var_50] edx +
mov edx [esp+7Ch+var_20] +
mov ebx eax +
mov [esp+7Ch+var_44] eax +
sub ebx edx +
mov [esp+7Ch+var_48] eax +
mov eax [esp+7Ch+arg_8] +
mov eax [eax+24h] +
cmp ebx eax +
jz loc_446D3D  +
add eax edx +
mov ebx [esp+7Ch+var_4C] +
mov edx eax +
sub edx [esp+7Ch+var_44] +
shl ecx 5 +
lea ebx [ebx+ecx+8] +
cmp edx 3 +
mov [esp+7Ch+var_50] ebx +
jbe loc_44687A  +
mov eax [esp+7Ch+arg_0] +
mov ebx [eax+4] +
jmp loc_445CC8  +
mov edx esi +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [eax+4] edx +
jmp loc_445EDC  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edi +
cmp esi edx +
jnz loc_446142  +
jmp loc_446168  +
mov edi [esp+7Ch+var_1C] +
mov edx ebp +
mov eax [esp+7Ch+var_18] +
sub edx edi +
cmp eax edx +
jbe loc_4461EE  +
mov eax ebp +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [esp+7Ch+var_1C] eax +
jmp loc_445EDC  +
xor ecx 40h +
movzx esi cl +
sub esi 40h +
cmp edi eax +
mov [ebx+24h] esi +
jb loc_446483  +
jmp loc_446498  +
mov esi ecx +
sub eax 1 +
movzx ecx byte ptr [eax] +
shl esi 7 +
and ecx 7Fh +
or ecx esi +
cmp eax edi +
mov [ebx+24h] ecx +
jnz loc_446481  +
cmp byte ptr [ebx+8] 1 +
jnz loc_446652  +
cmp ebp edx +
jbe loc_445ECA  +
lea eax [edx+1] +
mov [esp+7Ch+var_1C] eax +
movzx eax byte ptr [edx] +
mov [ebx+28h] eax +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov esi [edx+8] +
cmp esi eax +
jbe loc_446512  +
mov edx [esp+7Ch+var_1C] +
sub edx [esp+7Ch+var_20] +
cmp edx [eax] +
jbe loc_446512  +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_445ECA  +
add eax 0Ch +
jmp loc_446502  +
cmp [eax] edx +
jnb loc_446508  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_446790  +
cmp eax esi +
mov ecx eax +
jb loc_4464F0  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+0Ah] +
mov byte ptr [ebx+3Dh] 0FFh +
mov byte ptr [ebx+3Eh] 0FFh +
mov byte ptr [ebx+3Ch] 0FFh +
cmp al 65h +
jz loc_4469FB  +
cmp al 7Ah +
jz loc_446A54  +
mov edx [esp+7Ch+var_20] +
mov [esp+7Ch+var_44] edx +
test al al +
jz loc_44656E  +
cmp al 50h +
jz loc_4466CB  +
jle loc_4467B1  +
cmp al 52h +
nop   +
jz loc_44691B  +
cmp al 53h +
jnz loc_445ECA  +
add [esp+7Ch+var_40] 1 +
mov eax [esp+7Ch+var_40] +
movzx eax byte ptr [eax] +
test al al +
jnz loc_44653E  +
mov eax [esp+7Ch+arg_4] +
test byte ptr [eax] 1 +
jnz loc_446CDA  +
cmp byte ptr [ebx+3Eh] 0FFh +
jnz loc_446588  +
mov byte ptr [ebx+3Eh] 0 +
mov ecx [esp+7Ch+var_1C] +
mov esi ebp +
lea edx [ebx+41h] +
sub esi ecx +
mov eax esi +
cmp esi 32h +
mov [ebx+3Fh] al +
mov eax 32h +
cmovbe eax esi +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_74] eax +
call memcpy  +
mov eax [esp+7Ch+var_1C] +
mov edx [esp+7Ch+arg_C] +
lea ecx [eax+esi] +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+arg_C] +
mov edx [edx+8] +
mov [esp+7Ch+var_1C] ecx +
mov eax [eax+4] +
cmp edx eax +
jbe loc_446613  +
sub ecx [esp+7Ch+var_20] +
cmp [eax] ecx +
jnb loc_446613  +
cmp dword ptr [eax+4] 0 +
jnz loc_445ECA  +
add eax 0Ch +
jmp loc_446603  +
cmp [eax] ecx +
jnb loc_446609  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_446404  +
cmp eax edx +
mov esi eax +
jb loc_4465F1  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
mov eax [esp+7Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_446645  +
mov edi [esp+7Ch+var_50] +
mov [edi] ebx +
movzx eax byte ptr [ebx+3Ch] +
and eax 70h +
cmp al 10h +
movzx eax byte ptr [edi+5] +
setz dl  +
shl edx 3 +
and eax 0FFFFFFF7h +
or eax edx +
mov [edi+5] al +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_40] eax +
jmp loc_446241  +
lea ecx [ebx+28h] +
mov edx ebp +
lea eax [esp+7Ch+var_1C] +
call sub_445330  +
test eax eax +
jnz loc_4464B7  +
jmp loc_445ECA  +
mov edx [esp+7Ch+arg_C] +
mov eax edi +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [edx+4] eax +
jmp loc_445EDC  +
mov edx [esp+7Ch+var_58] +
test al al +
mov [esp+7Ch+var_34] edx +
jz loc_4460C6  +
mov [esp+7Ch+var_18] 0 +
xor edi edi +
xor esi esi +
mov [esp+7Ch+var_34] 0 +
jmp loc_4460E5  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] esi +
jmp loc_446241  +
mov eax [esp+7Ch+var_1C] +
cmp ebp eax +
jbe loc_445ECA  +
lea edx [eax+1] +
mov [esp+7Ch+var_1C] edx +
movzx eax byte ptr [eax] +
mov ecx eax +
and ecx 60h +
cmp cl 60h +
mov [ebx+3Ch] al +
jz loc_445ECA  +
mov ecx eax +
and ecx 7 +
cmp cl 2 +
jz loc_446CBD  +
jbe loc_446B93  +
cmp cl 3 +
jz loc_446CB3  +
cmp cl 4 +
jnz loc_445ECA  +
mov edi 8 +
and eax 70h +
cmp al 50h +
jz loc_446B6D  +
mov eax [esp+7Ch+var_1C] +
mov esi [esp+7Ch+var_50] +
mov edx eax +
mov [esp+7Ch+var_34] eax +
sub eax [esp+7Ch+var_48] +
mov [esi+4] al +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov esi [esi+8] +
cmp eax esi +
jnb loc_445ECA  +
sub edx [esp+7Ch+var_44] +
cmp [eax] edx +
jnb loc_446B06  +
mov ecx [eax+4] +
test ecx ecx +
jnz loc_445ECA  +
lea ecx [eax+0Ch] +
jmp loc_44678A  +
cmp [ecx] edx +
jnb loc_446AFC  +
add ecx 0Ch +
cmp dword ptr [ecx-8] 0 +
jnz loc_446ADB  +
cmp ecx esi +
mov eax ecx +
jb loc_446775  +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [eax+4] ecx +
jmp loc_445EDC  +
cmp al 4Ch +
jnz loc_445ECA  +
mov eax [esp+7Ch+var_1C] +
cmp ebp eax +
jbe loc_445ECA  +
lea esi [eax+1] +
mov edx [esp+7Ch+arg_C] +
mov [esp+7Ch+var_1C] esi +
movzx eax byte ptr [eax] +
mov [ebx+3Dh] al +
mov eax [esp+7Ch+arg_C] +
mov ecx [edx+8] +
mov eax [eax+4] +
cmp ecx eax +
jbe loc_446823  +
sub esi [esp+7Ch+var_44] +
cmp [eax] esi +
jnb loc_446823  +
cmp dword ptr [eax+4] 0 +
jnz loc_445ECA  +
add eax 0Ch +
jmp loc_446813  +
cmp [eax] esi +
jnb loc_446819  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_446406  +
cmp eax ecx +
mov edx eax +
jb loc_446801  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+3Dh] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_445ECA  +
and eax 7 +
jz loc_44655E  +
sub eax 2 +
cmp al 2 +
jbe loc_44655E  +
jmp loc_445ECA  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
cmp byte ptr [ebx+40h] 0 +
jz loc_4461CF  +
cmp [eax] ecx +
jnz loc_4461CF  +
mov eax [ebx+38h] +
or byte ptr [eax+5] 2 +
mov edi [esp+7Ch+var_1C] +
jmp loc_4461CF  +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [esp+7Ch+var_1C] eax +
jmp loc_445EDC  +
cmp byte ptr [eax+2] 68h +
jnz loc_445E70  +
mov eax ebp +
sub eax [esp+7Ch+var_44] +
cmp [esp+7Ch+var_58] eax +
ja loc_446452  +
mov eax [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_44] +
add esi [esp+7Ch+var_58] +
mov eax [eax+4] +
mov [esp+7Ch+var_1C] esi +
cmp ecx eax +
jbe loc_445E70  +
sub esi [esp+7Ch+var_20] +
cmp [eax] esi +
jnb loc_445E70  +
add eax 0Ch +
jmp loc_4468EC  +
add eax 0Ch +
cmp [eax-0Ch] esi +
jnb loc_446CA4  +
cmp eax ecx +
mov edx eax +
jb loc_4468E0  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
jmp loc_445E70  +
mov eax 8 +
mov [esp+7Ch+var_60] 0 +
mov [esp+7Ch+var_5C] 0 +
jmp loc_445C33  +
mov eax [esp+7Ch+var_1C] +
cmp ebp eax +
jbe loc_445ECA  +
lea edx [eax+1] +
mov edi [esp+7Ch+arg_C] +
mov [esp+7Ch+var_1C] edx +
movzx eax byte ptr [eax] +
mov [ebx+3Eh] al +
mov eax [esp+7Ch+arg_C] +
mov esi [edi+8] +
mov eax [eax+4] +
cmp eax esi +
jnb loc_446985  +
sub edx [esp+7Ch+var_44] +
cmp edx [eax] +
jbe loc_446985  +
cmp dword ptr [eax+4] 0 +
jnz loc_445ECA  +
add eax 0Ch +
jmp loc_446975  +
cmp [eax] edx +
jnb loc_44697B  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_446790  +
cmp eax esi +
mov ecx eax +
jb loc_446963  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+3Eh] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jnz loc_446835  +
jmp loc_445ECA  +
mov eax [esp+7Ch+arg_4] +
mov edx [esp+7Ch+arg_8] +
mov eax [eax+18h] +
mov eax [eax+34h] +
mov [esp+7Ch+var_74] edx +
mov edx [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] offset aDiscardingZero +
mov [esp+7Ch+var_78] edx +
call eax  +
mov eax [esp+7Ch+var_50] +
mov dword ptr [eax] 0 +
jmp loc_446168  +
test al al +
mov edi [esp+7Ch+var_58] +
jz loc_446277  +
xor edi edi +
jmp loc_446277  +
mov edx ebp +
mov eax [esp+7Ch+var_18] +
sub edx edi +
jmp loc_44644A  +
cmp byte ptr [ebx+0Bh] 68h +
jnz loc_446532  +
jmp loc_44656E  +
mov edi 2 +
nop   +
jmp loc_446277  +
mov [esp+7Ch+var_34] 4 +
jmp loc_4460C6  +
mov ebx [esp+7Ch+var_54] +
jmp loc_445F64  +
lea ecx [esp+7Ch+var_18] +
mov edx ebp +
lea eax [esp+7Ch+var_1C] +
call sub_445330  +
test eax eax +
jnz loc_44617A  +
jmp loc_445ECA  +
mov [esp+7Ch+var_34] 2 +
jmp loc_4460C6  +
lea eax [ebx+0Bh] +
mov edx ebp +
mov [esp+7Ch+var_40] eax +
lea ecx [ebx+2Ch] +
lea eax [esp+7Ch+var_1C] +
call sub_445330  +
test eax eax +
jz loc_445ECA  +
mov eax [esp+7Ch+arg_C] +
mov edx [esp+7Ch+arg_C] +
mov eax [eax+4] +
mov ecx [edx+8] +
cmp ecx eax +
jbe loc_446D4D  +
mov edx [esp+7Ch+var_20] +
mov edi edx +
mov [esp+7Ch+var_44] edx +
mov edx [esp+7Ch+var_1C] +
sub edx edi +
cmp edx [eax] +
jbe loc_446AD2  +
cmp dword ptr [eax+4] 0 +
jnz loc_445ECA  +
add eax 0Ch +
jmp loc_446AC2  +
cmp [eax] edx +
jnb loc_446AC8  +
add eax 0Ch +
mov edi [eax-8] +
test edi edi +
jnz loc_446404  +
cmp eax ecx +
mov esi eax +
jb loc_446AB0  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
movzx eax byte ptr [ebx+0Bh] +
jmp loc_44653A  +
mov edx [esp+7Ch+arg_C] +
mov esi [esp+7Ch+var_54] +
mov edi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_8] +
mov [edx+4] eax +
jmp loc_445EDC  +
mov esi [esp+7Ch+arg_C] +
mov [esi+4] ecx +
mov ecx [eax] +
cmp ecx edx +
jnz loc_445ECA  +
mov edx [esp+7Ch+arg_C] +
sub eax [edx] +
sar eax 2 +
imul eax eax +
mov [ebx+30h] eax +
mov eax [edx+4] +
mov edx [edx+8] +
mov [esp+7Ch+var_30] eax +
mov eax [esp+7Ch+var_30] +
jmp loc_446B41  +
cmp ecx [eax] +
jnz loc_446B48  +
test eax eax +
jz loc_446CC7  +
add eax 0Ch +
cmp eax edx +
jb loc_446B35  +
mov edx [esp+7Ch+arg_C] +
mov [edx+4] eax +
mov eax ebp +
sub eax [esp+7Ch+var_34] +
cmp edi eax +
ja loc_446452  +
add edi [esp+7Ch+var_34] +
mov [esp+7Ch+var_1C] edi +
jmp loc_44655E  +
mov ecx [esp+7Ch+var_44] +
lea eax [edi-1] +
sub ecx edx +
and eax ecx +
mov ecx ebp +
sub ecx edx +
cmp eax ecx +
mov [esp+7Ch+var_18] eax +
ja loc_446452  +
add eax edx +
mov [esp+7Ch+var_1C] eax +
jmp loc_446728  +
test cl cl +
jnz loc_445ECA  +
mov edi [esp+7Ch+var_58] +
jmp loc_44671D  +
mov ebx [esp+7Ch+var_34] +
mov eax edi +
mov esi [esp+7Ch+var_54] +
mov ecx [esp+7Ch+var_48] +
mov edi [esp+7Ch+arg_0] +
cmp ebx eax +
mov ebp [esp+7Ch+arg_8] +
jnz loc_445EDC  +
mov eax [esp+7Ch+arg_C] +
mov eax [eax+8] +
cmp eax ecx +
jbe loc_446C0A  +
cmp [ecx] ebx +
jnb loc_446C0A  +
cmp dword ptr [ecx+4] 0 +
jnz loc_445EDC  +
add ecx 0Ch +
jmp loc_446BFA  +
cmp [ecx] ebx +
jnb loc_446C00  +
add ecx 0Ch +
cmp dword ptr [ecx-8] 0 +
jnz loc_446D56  +
cmp ecx eax +
mov edx ecx +
jb loc_446BE9  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] ecx +
mov eax [esp+7Ch+var_4C] +
add dword ptr [eax] 1 +
jmp loc_446C27  +
lea eax [esi+edi] +
mov [esp+7Ch+var_30] eax +
jmp loc_446142  +
mov [esp+7Ch+var_40] 0 +
mov eax [esp+7Ch+var_4C] +
mov edx [esp+7Ch+var_5C] +
cmp [eax] edx +
jz loc_446C47  +
mov [esp+7Ch+var_78] 3F8h +
mov [esp+7Ch+var_7C] offset a____Binutil_25 +
call sub_40C6C0  +
mov eax [esp+7Ch+var_60] +
cmp [esp+7Ch+var_40] eax +
jz loc_446C65  +
mov [esp+7Ch+var_78] 3F9h +
mov [esp+7Ch+var_7C] offset a____Binutil_25 +
call sub_40C6C0  +
mov eax [ebp+8Ch] +
mov edx [esp+7Ch+var_4C] +
mov [eax+88h] edx +
movzx eax word ptr [ebp+18h] +
and ax 0FC7Fh +
or ax 180h +
mov [ebp+18h] ax +
mov eax [esp+7Ch+arg_4] +
movzx eax byte ptr [eax] +
and eax 3 +
cmp al 2 +
jz loc_445BCE  +
mov [edx+4] esi +
xor esi esi +
jmp loc_445BCE  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
jmp loc_445E70  +
mov edi 4 +
jmp loc_44671D  +
mov edi 2 +
jmp loc_44671D  +
mov eax [esp+7Ch+arg_C] +
mov dword ptr [eax+4] 0 +
jmp loc_446B52  +
mov eax [esp+7Ch+arg_0] +
mov edx [esp+7Ch+arg_8] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+120h] +
mov [esp+7Ch+var_74] edx +
mov edx [esp+7Ch+arg_4] +
mov [esp+7Ch+var_78] edx +
mov edx [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] edx +
call eax  +
test eax eax +
jz loc_44657E  +
movzx eax byte ptr [ebx+3Eh] +
test al 70h +
jnz loc_446D65  +
mov eax [esp+7Ch+var_50] +
or byte ptr [eax+1Bh] 8 +
test byte ptr [ebx+3Dh] 70h +
jnz loc_44657E  +
mov byte ptr [ebx+40h] 1 +
jmp loc_44657E  +
mov esi [esp+7Ch+var_54] +
mov ebp [esp+7Ch+arg_8] +
jmp loc_446C27  +
movzx eax byte ptr [ebx+0Bh] +
jmp loc_446532  +
mov eax [esp+7Ch+arg_C] +
mov [eax+4] edx +
jmp loc_445EDC  +
add al 1 +
jnz loc_446D2A  +
movzx eax byte ptr [ebx+3Ch] +
and eax 70h +
cmp al 50h +
jz loc_446D2A  +
cmp byte ptr [ebx+0Ah] 0 +
jz loc_446D92  +
mov eax [esp+7Ch+var_50] +
movzx eax byte ptr [eax+1Bh] +
mov edx [esp+7Ch+var_50] +
or eax 8 +
or byte ptr [edx+5] 10h +
mov [edx+1Bh] al +
jmp loc_446D2A  +
mov edx [esp+7Ch+var_50] +
movzx eax byte ptr [edx+1Bh] +
or eax 4 +
mov [edx+1Bh] al +
jmp loc_446D82  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
movzx edx byte ptr [eax+3] +
mov ebx [eax+1Ch] +
xor eax eax +
and edx 6 +
cmp dl 4 +
jz loc_446DD4  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [ebx+0A8h] +
test edi edi +
jz loc_446DCC  +
mov edx [ebx+0B4h] +
xor ebp ebp +
jmp loc_446DF5  +
mov edi [ebx+0A8h] +
add ebp 1 +
cmp ebp edi +
jnb loc_446E55  +
mov ecx [edx+ebp*4] +
lea eax ds:0[ebp*4] +
test byte ptr [ecx+15h] 80h +
jz loc_446DE8  +
lea ecx [ebp+1] +
cmp ecx edi +
jnb loc_446E35  +
mov [esp+2Ch+var_1C] ebp +
jmp loc_446E1A  +
mov edx [ebx+0B4h] +
mov eax esi +
mov ebp [edx+eax+4] +
add ecx 1 +
cmp ecx edi +
lea esi [eax+4] +
mov [edx+eax] ebp +
jnz loc_446E12  +
mov ebp [esp+2Ch+var_1C] +
mov edx [ebx+0B4h] +
sub ebp 1 +
sub edi 1 +
add ebp 1 +
cmp ebp edi +
mov [ebx+0A8h] edi +
mov dword ptr [edx+edi*4] 0 +
mov edx [ebx+0B4h] +
jb loc_446DF5  +
mov [esp+2Ch+var_28] edi +
mov [esp+2Ch+var_20] offset sub_445590 +
mov [esp+2Ch+var_24] 4 +
mov [esp+2Ch+var_2C] edx +
call qsort  +
mov eax [ebx+0A8h] +
mov edi [ebx+0B4h] +
mov [esp+2Ch+var_10] ebx +
sub eax 1 +
mov [esp+2Ch+var_18] edi +
mov ebp [edi] +
xor edi edi +
mov [esp+2Ch+var_1C] eax +
cmp edi [esp+2Ch+var_1C] +
jnb loc_446F3A  +
add edi 1 +
lea eax ds:0[edi*4] +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+var_18] +
mov edx [eax+edi*4] +
test edx edx +
jz loc_446EE8  +
mov eax [ebp+8Ch] +
mov ecx [edx+8Ch] +
mov eax [eax+88h] +
mov ecx [ecx+88h] +
mov ebx [eax+3Ch] +
mov esi [eax+38h] +
add esi [ebx+1Ch] +
add esi [eax+24h] +
mov eax [ecx+3Ch] +
mov ecx [ecx+38h] +
add ecx [eax+1Ch] +
cmp esi ecx +
jz loc_446F70  +
mov edx [ebp+28h] +
test edx edx +
mov edx [ebp+24h] +
jnz loc_446EF5  +
mov [ebp+28h] edx +
mov eax [ebp+94h] +
add edx 8 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call sub_410F10  +
mov ebx [esp+2Ch+var_10] +
mov eax [ebx+0A8h] +
mov esi [ebx+0B4h] +
mov ebx [esp+2Ch+var_14] +
sub eax 1 +
mov [esp+2Ch+var_1C] eax +
cmp edi [esp+2Ch+var_1C] +
mov [esp+2Ch+var_18] esi +
mov ebp [esi+ebx] +
jb loc_446E9A  +
mov eax [ebp+28h] +
mov edx [ebp+24h] +
test eax eax +
jnz loc_446F47  +
mov [ebp+28h] edx +
mov eax [ebp+94h] +
add edx 8 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call sub_410F10  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp edx +
jmp loc_446E90  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov ebp [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_C] +
mov esi [esp+1Ch+arg_10] +
mov eax [eax+8Ch] +
mov ebx [eax+80h] +
test ebx ebx +
jnz loc_446FB7  +
jmp loc_447010  +
mov ebx [ebx+4] +
test ebx ebx +
jz loc_447010  +
mov edx [esp+1Ch+arg_8] +
mov ecx ebx +
mov eax ebp +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] edi +
call sub_4455E0  +
test eax eax +
jz loc_447000  +
mov ecx [ebx] +
test ecx ecx +
jz loc_446FB0  +
movzx eax byte ptr [ecx+5] +
test al 1 +
jnz loc_446FB0  +
or eax 1 +
mov [ecx+5] al +
mov edx [esp+1Ch+arg_8] +
mov eax ebp +
mov [esp+1Ch+var_18] esi +
mov [esp+1Ch+var_1C] edi +
call sub_4455E0  +
test eax eax +
jnz loc_446FB0  +
lea esi [esi+0] +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_8] +
movzx edx word ptr [eax+18h] +
xor eax eax +
and dx 380h +
cmp dx 180h +
jz loc_447045  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+3Ch+arg_8] +
mov edx [edi+8Ch] +
mov ecx [edx+88h] +
test ecx ecx +
mov esi ecx +
mov [esp+3Ch+var_2C] ecx +
jz loc_44703D  +
mov eax [edi+94h] +
lea ebx [esi+8] +
mov ebp ebx +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov edx [edx+11Ch] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] eax +
call edx  +
mov edx [esi] +
mov edi [esp+3Ch+arg_0] +
mov [esp+3Ch+var_24] eax +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+1Ch] +
mov [esp+3Ch+var_28] eax +
mov eax edx +
shl eax 5 +
lea eax [esi+eax+8] +
cmp ebx eax +
lea esi [edi+4] +
mov [esp+3Ch+var_1C] esi +
jnb loc_44745C  +
mov [esp+3Ch+var_20] ebx +
mov ebx [esp+3Ch+var_2C] +
cmp dword ptr [ebp+0Ch] 4 +
jz loc_4474D0  +
test byte ptr [ebp+1Bh] 1 +
jnz loc_447444  +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_447444  +
mov eax [esp+3Ch+arg_8] +
test byte ptr [eax+16h] 10h +
mov eax [esp+3Ch+arg_10] +
mov edx [eax] +
jz loc_4470EE  +
test edx edx +
jz loc_447520  +
mov eax [ebp+8] +
mov edi [esp+3Ch+arg_10] +
lea eax [eax+eax*2] +
lea eax [edx+eax*4] +
cmp eax [edi+8] +
mov [edi+4] eax +
jnb loc_44710D  +
mov esi [ebp+10h] +
lea edx [esi+8] +
cmp [eax] edx +
jz loc_447127  +
mov [esp+3Ch+var_38] 552h +
mov [esp+3Ch+var_3C] offset a____Binutil_25 +
call sub_40C6C0  +
mov eax [ebp+10h] +
lea edx [eax+8] +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_38] eax +
call [esp+3Ch+arg_C]  +
test eax eax +
setz al  +
movzx eax al +
test eax eax +
jz loc_447442  +
mov eax [esp+3Ch+arg_4] +
test byte ptr [eax] 1 +
jz loc_447193  +
movzx eax byte ptr [ebp+18h] +
and eax 70h +
jnz loc_447508  +
test byte ptr [ebp+1Bh] 8 +
jnz loc_447193  +
mov eax [esp+3Ch+var_28] +
mov edi [esp+3Ch+arg_8] +
mov dword ptr [eax+0B8h] 0 +
mov eax [esp+3Ch+arg_4] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_34] edi +
mov edi [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] offset aPFdeEncodingIn +
mov [esp+3Ch+var_38] edi +
call eax  +
and byte ptr [ebp+1Bh] 0FDh +
mov eax [esp+3Ch+var_28] +
add dword ptr [eax+0B4h] 1 +
mov edi [ebp+0] +
movzx eax byte ptr [edi+1Bh] +
test al 2 +
jz loc_44743F  +
test byte ptr [edi+5] 20h +
jnz loc_447515  +
and eax 0FFFFFFFDh +
mov esi [edi] +
mov [edi+1Bh] al +
mov eax [esp+3Ch+arg_8] +
test esi esi +
mov [edi] eax +
jz loc_44743F  +
cmp byte ptr [esi+3Ch] 0FFh +
jz loc_447641  +
mov eax [esi+30h] +
lea ecx [esi+30h] +
mov [esp+3Ch+var_18] ecx +
lea edx [eax+eax*2] +
mov eax [esp+3Ch+arg_10] +
mov eax [eax] +
mov dword ptr [esi+30h] 0 +
mov dword ptr [esi+34h] 0 +
mov ecx [eax+edx*4+4] +
mov eax [esp+3Ch+arg_10] +
shr ecx 8 +
cmp ecx [eax+14h] +
jnb loc_447228  +
mov edx [esp+3Ch+arg_10] +
lea eax [ecx+ecx*4] +
mov edx [edx+0Ch] +
lea edx [edx+eax*4] +
movzx eax byte ptr [edx+0Ch] +
shr al 4 +
test al al +
jz loc_44758F  +
mov edx [esp+3Ch+arg_10] +
mov eax ecx +
sub eax [edx+18h] +
mov edx [edx+1Ch] +
mov eax [edx+eax*4] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
ja loc_447252  +
mov eax [eax+14h] +
movzx ecx byte ptr [eax+0Ch] +
lea edx [ecx-6] +
cmp dl 1 +
jbe loc_447243  +
mov ecx [esp+3Ch+arg_4] +
mov [esi+30h] eax +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] ecx +
call sub_438C10  +
test eax eax +
jnz loc_4475D6  +
mov [esp+3Ch+var_34] 0 +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] esi +
call sub_45D4A0  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+8] +
mov [esp+3Ch+var_3C] eax +
call sub_45D4A0  +
lea edx [esi+0Ah] +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_14] edx +
mov [esp+3Ch+var_10] eax +
call strlen  +
mov ecx [esp+3Ch+var_10] +
mov edx [esp+3Ch+var_14] +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_3C] edx +
add eax 1 +
mov [esp+3Ch+var_38] eax +
call sub_45D4A0  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+20h] +
mov [esp+3Ch+var_3C] eax +
call sub_45D4A0  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+24h] +
mov [esp+3Ch+var_3C] eax +
call sub_45D4A0  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+28h] +
mov [esp+3Ch+var_3C] eax +
call sub_45D4A0  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+2Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_45D4A0  +
mov [esp+3Ch+var_38] 8 +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call sub_45D4A0  +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_34] eax +
mov eax [esi+38h] +
mov eax [eax] +
add eax 3Ch +
mov [esp+3Ch+var_3C] eax +
call sub_45D4A0  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Ch] +
mov [esp+3Ch+var_3C] eax +
call sub_45D4A0  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Dh] +
mov [esp+3Ch+var_3C] eax +
call sub_45D4A0  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Eh] +
mov [esp+3Ch+var_3C] eax +
call sub_45D4A0  +
mov [esp+3Ch+var_38] 1 +
mov [esp+3Ch+var_34] eax +
lea eax [esi+3Fh] +
mov [esp+3Ch+var_3C] eax +
call sub_45D4A0  +
movzx edx byte ptr [esi+3Fh] +
cmp edx 32h +
mov [esp+3Ch+var_34] eax +
mov eax 32h +
cmova edx eax +
lea eax [esi+41h] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call sub_45D4A0  +
mov ecx [esp+3Ch+var_28] +
mov edx [ecx+0B0h] +
mov [esi+4] eax +
test edx edx +
jz loc_44764D  +
mov [esp+3Ch+var_3C] edx +
mov [esp+3Ch+var_30] 1 +
mov [esp+3Ch+var_34] eax +
mov [esp+3Ch+var_38] esi +
call sub_45D0B0  +
test eax eax +
mov edx eax +
jz loc_44743F  +
mov eax [eax] +
test eax eax +
jz loc_4476AB  +
movzx edx byte ptr [edi+5] +
or byte ptr [edi+1Bh] 2 +
or edx 20h +
mov [edi+5] dl +
mov ecx [eax+38h] +
and edx 2 +
mov [edi] ecx +
jz loc_44743C  +
mov edx [eax+38h] +
or byte ptr [edx+5] 2 +
mov edi [eax+38h] +
mov [ebp+0] edi +
mov edx [ebx] +
mov eax edx +
add ebp 20h +
shl eax 5 +
lea eax [ebx+eax+8] +
cmp ebp eax +
jb loc_4470B7  +
mov ebx [esp+3Ch+var_20] +
mov eax [esp+3Ch+var_2C] +
mov eax [eax+4] +
test eax eax +
jz loc_44747C  +
mov [esp+3Ch+var_3C] eax +
call free  +
mov eax [esp+3Ch+var_2C] +
mov edx [eax] +
mov dword ptr [eax+4] 0 +
mov eax [esp+3Ch+var_2C] +
shl edx 5 +
xor edi edi +
lea esi [eax+edx+8] +
cmp ebx esi +
jnb loc_4474AC  +
mov ebp [esp+3Ch+var_24] +
test byte ptr [ebx+1Bh] 2 +
jnz loc_4474A5  +
mov [ebx+14h] edi +
mov edx ebp +
mov eax ebx +
call sub_4453B0  +
add edi eax +
add ebx 20h +
cmp ebx esi +
jb loc_447491  +
mov eax [esp+3Ch+arg_8] +
mov esi [esp+3Ch+arg_8] +
mov eax [eax+24h] +
mov [esi+24h] edi +
cmp edi eax +
mov [esi+28h] eax +
setnz al  +
add esp 3Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_8] +
mov esi [eax+0A0h] +
movzx eax byte ptr [ebp+1Bh] +
test esi esi +
setnz dl  +
and eax 0FFFFFFFDh +
add edx edx +
add ebp 20h +
or eax edx +
mov [ebp-5] al +
mov edx [ebx] +
mov eax edx +
shl eax 5 +
lea eax [ebx+eax+8] +
cmp ebp eax +
jb loc_4470B7  +
jmp loc_447458  +
cmp al 50h +
jnz loc_447193  +
jmp loc_447162  +
mov edi [edi] +
mov [ebp+0] edi +
jmp loc_447442  +
movzx eax byte ptr [ebp+18h] +
mov edx eax +
and edx 60h +
cmp dl 60h +
jz loc_447638  +
mov edx eax +
and edx 7 +
cmp dl 2 +
jz loc_44768D  +
jbe loc_44762A  +
cmp dl 3 +
jz loc_44769C  +
cmp dl 4 +
mov esi 8 +
mov ecx 8 +
jnz loc_447638  +
mov edx [ebp+10h] +
shr al 3 +
and eax 1 +
lea edx [esi+edx+8] +
mov esi [esp+3Ch+arg_8] +
add edx [esi+6Ch] +
mov [esp+3Ch+var_3C] eax +
mov eax [esp+3Ch+var_1C] +
call sub_4457B0  +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_44713E  +
mov eax [edx+10h] +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_426C70  +
test eax eax +
jz loc_44743F  +
mov edx [eax+7Ch] +
test edx edx +
cmovz edx eax +
mov eax [edx+3Ch] +
test eax eax +
jz loc_44743F  +
mov eax [esp+3Ch+arg_0] +
mov byte ptr [esi+9] 1 +
mov ecx [esp+3Ch+var_14] +
mov eax [eax+24h] +
mov [esi+34h] ecx +
mov [esi+30h] eax +
mov eax [esp+3Ch+arg_4] +
test byte ptr [eax] 1 +
jz loc_447275  +
test byte ptr [esi+3Ch] 70h +
jnz loc_447275  +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_8] +
mov eax [eax+4] +
mov eax [eax+1B0h] +
mov eax [eax+120h] +
mov [esp+3Ch+var_34] ecx +
mov ecx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_38] ecx +
mov ecx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] ecx +
call eax  +
test eax eax +
jz loc_447275  +
or byte ptr [edi+5] 0Ch +
jmp loc_447275  +
mov ecx [esp+3Ch+var_24] +
test dl dl +
mov esi ecx +
jz loc_447562  +
xor esi esi +
xor ecx ecx +
jmp loc_447562  +
lea eax [esi+30h] +
mov [esp+3Ch+var_18] eax +
jmp loc_447275  +
mov [esp+3Ch+var_30] offset free +
mov [esp+3Ch+var_34] offset sub_445660 +
mov [esp+3Ch+var_38] offset loc_4453A0 +
mov [esp+3Ch+var_3C] 1 +
call sub_45CD80  +
mov edx eax +
mov eax [esp+3Ch+var_28] +
test edx edx +
mov [eax+0B0h] edx +
jz loc_44743F  +
mov eax [esi+4] +
jmp loc_4473F5  +
mov esi 2 +
mov ecx 2 +
jmp loc_447562  +
mov esi 4 +
mov ecx 4 +
jmp loc_447562  +
mov [esp+3Ch+var_3C] 74h +
mov [esp+3Ch+var_18] edx +
call malloc  +
test eax eax +
jz loc_44743F  +
mov edx [esp+3Ch+var_18] +
mov ecx 1Dh +
mov edi eax +
movs   +
mov [edx] eax +
jmp loc_44743C  +
***
sub esp 14h +
mov esi [esp+14h+arg_4] +
mov ebx [esi+1Ch] +
mov ecx [ebx+0ACh] +
test ecx ecx +
jnz loc_447712  +
mov eax [ebx+0B0h] +
test eax eax +
jz loc_447712  +
mov [esp+14h+var_14] eax +
call sub_45CDD0  +
mov dword ptr [ebx+0B0h] 0 +
mov eax [ebx+0A4h] +
test eax eax +
jz loc_447770  +
movzx edx byte ptr [esi+3] +
mov dword ptr [eax+24h] 8 +
and edx 6 +
cmp dl 4 +
jz loc_447739  +
mov edx [ebx+0B8h] +
test edx edx +
jnz loc_447757  +
mov edx [esp+14h+arg_0] +
mov edx [edx+0A0h] +
mov edx [edx+934h] +
mov [edx+0Ch] eax +
add esp 14h +
mov eax 1 +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+0B4h] +
lea edx ds:0Ch[edx*8] +
mov [eax+24h] edx +
jmp loc_447739  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov eax [eax+30h] +
mov [esp+1Ch+var_18] offset a_eh_frame +
mov [esp+1Ch+var_1C] eax +
call sub_410840  +
test eax eax +
jz loc_4477D0  +
mov eax [eax+0A0h] +
test eax eax +
jnz loc_4477BA  +
jmp loc_4477D0  +
mov eax [eax+0A0h] +
test eax eax +
jz loc_4477C5  +
cmp dword ptr [eax+24h] 8 +
jbe loc_4477B0  +
mov eax 1 +
add esp 1Ch +
retn   +
xor eax eax +
add esp 1Ch +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ebp [eax+34h] +
test ebp ebp +
jz loc_447827  +
mov eax [ebp+64h] +
test eax eax +
jz loc_44781D  +
mov edx offset a_eh_frame_entr +
nop   +
lea esi [esi+0] +
mov esi [eax] +
mov edi edx +
mov ecx 10h +
cmps   +
jz loc_447816  +
cmp dword ptr [eax+3Ch] offset off_476230 +
jnz loc_447830  +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_447800  +
mov ebp [ebp+9Ch] +
test ebp ebp +
jnz loc_4477EF  +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
mov eax 1 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 40h +
mov esi [esp+40h+arg_0] +
mov [esp+40h+var_4] 0 +
mov edi [esi+1Ch] +
mov ebx [edi+0A4h] +
test ebx ebx +
jz loc_447956  +
cmp dword ptr [ebx+3Ch] offset off_476230 +
jz loc_4478F6  +
movzx eax byte ptr [esi+3] +
and eax 6 +
jz loc_4478F6  +
cmp al 2 +
jz loc_4478E0  +
cmp al 4 +
jz loc_447962  +
mov eax [esi+30h] +
lea edx [esp+40h+var_4] +
mov [esp+40h+var_1C] edx +
mov [esp+40h+var_20] 0 +
mov [esp+40h+var_24] 0 +
mov [esp+40h+var_28] 0 +
mov [esp+40h+var_2C] 0 +
mov [esp+40h+var_30] ebx +
mov [esp+40h+var_34] 1 +
mov [esp+40h+var_38] offset a__gnu_eh_frame +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_40] esi +
call sub_414CB0  +
mov edx eax +
xor eax eax +
test edx edx +
jnz loc_447913  +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+40h+var_40] esi +
call sub_447780  +
test eax eax +
jnz loc_447974  +
mov ebx [edi+0A4h] +
or dword ptr [ebx+14h] 8000h +
mov eax 1 +
mov dword ptr [edi+0A4h] 0 +
add esp 40h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esp+40h+var_4] +
or byte ptr [eax+33h] 2 +
mov edx [esi+30h] +
mov byte ptr [eax+31h] 2 +
mov edx [edx+4] +
mov edx [edx+1B0h] +
mov edx [edx+0DCh] +
mov [esp+40h+var_3C] eax +
mov [esp+40h+var_38] 1 +
mov [esp+40h+var_40] esi +
call edx  +
mov eax [edi+0ACh] +
test eax eax +
jnz loc_447956  +
mov dword ptr [edi+0B8h] 1 +
add esp 40h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+40h+var_40] esi +
call sub_4477E0  +
test eax eax +
jnz loc_447885  +
jmp loc_4478F6  +
movzx eax byte ptr [esi+3] +
mov ebx [edi+0A4h] +
and eax 6 +
jmp loc_44787D  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ecx [esp+2Ch+arg_8] +
mov esi [esp+2Ch+arg_C] +
movzx edx word ptr [ecx+18h] +
mov eax esi +
and dx 380h +
cmp dx 180h +
jz loc_4479C0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ecx+8Ch] +
mov edi [edx+88h] +
mov edx [ecx+28h] +
cmp esi edx +
jnb loc_447A20  +
mov eax [edi] +
test eax eax +
jz loc_447B63  +
xor edx edx +
jmp loc_4479EF  +
add ebp [ecx+14h] +
cmp esi ebp +
jb loc_447A30  +
lea edx [ebx+1] +
cmp edx eax +
jnb loc_447A08  +
lea ebx [edx+eax] +
shr ebx 1 +
mov ecx ebx +
shl ecx 5 +
add ecx edi +
mov ebp [ecx+18h] +
cmp esi ebp +
jnb loc_4479E1  +
mov eax ebx +
cmp edx eax +
jb loc_4479EF  +
mov [esp+2Ch+var_28] 628h +
mov [esp+2Ch+var_2C] offset a____Binutil_25 +
call sub_40C6C0  +
jmp loc_447A34  +
sub eax edx +
add eax [ecx+24h] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx eax +
jnb loc_447A08  +
mov edx ebx +
mov eax 0FFFFFFFFh +
shl edx 5 +
add edx edi +
movzx ecx byte ptr [edx+23h] +
test cl 2 +
jnz loc_4479B1  +
test cl 1 +
jz loc_447B10  +
test byte ptr [edx+0Dh] 4 +
mov ebp [edx+18h] +
jz loc_447A74  +
movzx eax byte ptr [edx+0Ch] +
lea edx [ebp+eax+8] +
mov eax 0FFFFFFFEh +
cmp edx esi +
jz loc_4479B1  +
mov eax ebx +
shl eax 5 +
add eax edi +
mov edx [eax+24h] +
test edx edx +
jz loc_447AE0  +
test byte ptr [eax+23h] 8 +
jz loc_447AE0  +
lea eax [ebp+8] +
mov [esp+2Ch+var_18] eax +
add eax [edx+4] +
cmp esi eax +
jb loc_447AE0  +
mov ecx [edx] +
test ecx ecx +
jz loc_447AE0  +
cmp esi eax +
jz loc_447B6A  +
mov [esp+2Ch+var_14] edi +
mov eax 1 +
mov edi [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] ebx +
mov ebx ecx +
jmp loc_447ACD  +
mov ecx [edx+eax*4] +
add ecx edi +
cmp ecx esi +
jz loc_447B6A  +
add eax 1 +
cmp eax ebx +
jbe loc_447AC0  +
mov edi [esp+2Ch+var_14] +
mov ebx [esp+2Ch+var_10] +
lea esi [esi+0] +
shl ebx 5 +
add edi ebx +
movzx eax byte ptr [edi+23h] +
add edi 8 +
add esi [edi+14h] +
sub esi ebp +
test al 1 +
jz loc_447B56  +
shr al 2 +
and eax 1 +
test byte ptr [edi+5] 10h +
jz loc_447B04  +
add eax 1 +
add esi eax +
add eax esi +
jmp loc_4479B1  +
and ecx 8 +
mov ebp [edx+18h] +
jz loc_447B28  +
lea edx [ebp+8] +
mov eax 0FFFFFFFEh +
cmp edx esi +
jz loc_4479B1  +
mov eax ebx +
shl eax 5 +
add eax edi +
mov edx [eax+8] +
test byte ptr [edx+5] 2 +
jz loc_447A74  +
movzx eax byte ptr [eax+22h] +
lea edx [ebp+eax+8] +
mov eax 0FFFFFFFEh +
cmp edx esi +
jnz loc_447A74  +
jmp loc_4479B1  +
shr al 2 +
and eax 1 +
add eax esi +
jmp loc_4479B1  +
xor ebx ebx +
jmp loc_447A08  +
mov eax 0FFFFFFFEh +
jmp loc_4479B1  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [esp+3Ch+arg_8] +
mov edx [ebx+28h] +
mov eax [ebx+8Ch] +
test edx edx +
mov ebp [eax+88h] +
jnz loc_447BA4  +
mov eax [ebx+24h] +
mov [ebx+28h] eax +
movzx eax word ptr [ebx+18h] +
and ax 380h +
cmp ax 300h +
jz loc_447BC6  +
mov [esp+3Ch+var_38] 66Ch +
mov [esp+3Ch+var_3C] offset a____Binutil_25 +
call sub_40C6C0  +
test byte ptr [ebx+15h] 80h +
jnz loc_447BD2  +
test byte ptr [ebp+15h] 80h +
jz loc_447BE0  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+28h] +
mov eax [ebx+3Ch] +
mov [esp+3Ch+var_28] edx +
mov edx [ebx+38h] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] edx +
mov edx [esp+3Ch+arg_C] +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_34] edx +
call sub_410F50  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_447BD7  +
mov eax [esp+3Ch+arg_0] +
mov edi [esp+3Ch+arg_C] +
mov eax [eax+4] +
mov eax [eax+2Ch] +
mov [esp+3Ch+var_3C] edi +
call eax  +
mov ecx [ebx+28h] +
cmp ecx 8 +
mov edi eax +
jbe loc_447C94  +
mov [esp+3Ch+var_20] ebp +
mov esi 8 +
mov ebp [esp+3Ch+arg_0] +
jmp loc_447C51  +
mov ecx [ebx+28h] +
add esi 8 +
cmp ecx esi +
jbe loc_447C90  +
mov edi eax +
mov eax [ebp+4] +
mov ecx [esp+3Ch+arg_C] +
mov eax [eax+2Ch] +
add ecx esi +
mov [esp+3Ch+var_3C] ecx +
call eax  +
add eax esi +
cmp eax edi +
ja loc_447C45  +
mov eax [ebx+94h] +
mov edx [ebx] +
mov [esp+3Ch+var_3C] offset aBSNotInOrder +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call off_476094  +
xor eax eax +
jmp loc_447BD7  +
mov ebp [esp+3Ch+var_20] +
mov edi [ebp+3Ch] +
mov edx [ebp+38h] +
add edx [edi+1Ch] +
mov edi [ebx+3Ch] +
add edx [ebp+24h] +
and edx 0FFFFFFFEh +
sub edx [edi+1Ch] +
sub edx [ebx+38h] +
mov ebp edx +
sub ebp ecx +
test ebp 1 +
jnz loc_447D80  +
cmp edx eax +
jbe loc_447DB0  +
mov eax [ebx+24h] +
cmp ecx eax +
jz loc_447BD2  +
mov edx [esp+3Ch+arg_0] +
add ecx 8 +
cmp eax ecx +
mov edx [edx+4] +
mov edi [edx+1B0h] +
jz loc_447CF7  +
mov [esp+3Ch+var_38] 69Eh +
mov [esp+3Ch+var_3C] offset a____Binutil_25 +
call sub_40C6C0  +
mov eax [edi+1A0h] +
test eax eax +
jz loc_447DE0  +
mov eax [esp+3Ch+arg_0] +
lea edx [esp+3Ch+var_14] +
mov [esp+3Ch+var_20] edx +
mov eax [eax+4] +
mov eax [eax+30h] +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] ebp +
call eax  +
mov eax [esp+3Ch+arg_0] +
mov ecx [esp+3Ch+arg_4] +
mov eax [eax+4] +
mov ebp [eax+30h] +
mov eax [edi+1A0h] +
mov [esp+3Ch+var_3C] ecx +
call eax  +
lea ecx [esp+3Ch+var_10] +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] eax +
call ebp  +
mov ecx [ebx+3Ch] +
mov [esp+3Ch+var_28] 8 +
mov eax [ebx+28h] +
add eax [ebx+38h] +
mov edx [esp+3Ch+var_20] +
mov [esp+3Ch+var_2C] 0 +
mov [esp+3Ch+var_30] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_410F50  +
jmp loc_447BD7  +
mov eax [ebx+94h] +
mov edx [ebx] +
mov [esp+3Ch+var_3C] offset aBSInvalidInput +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call off_476094  +
mov [esp+3Ch+var_3C] 11h +
call sub_40C770  +
xor eax eax +
jmp loc_447BD7  +
mov eax [ebx+94h] +
mov edx [ebx] +
mov [esp+3Ch+var_3C] offset aBSPointsPastEn +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_34] edx +
call off_476094  +
mov [esp+3Ch+var_3C] 11h +
call sub_40C770  +
xor eax eax +
jmp loc_447BD7  +
mov [esp+3Ch+var_38] 6A0h +
mov [esp+3Ch+var_3C] offset a____Binutil_25 +
call sub_40C6C0  +
jmp loc_447D05  +
***
push esi  +
push esi  +
push esi  +
push ebx  +
sub esp 5Ch +
mov eax [esp+5Ch+arg_4] +
mov esi [esp+5Ch+arg_0] +
mov ebx [eax+1Ch] +
movzx eax byte ptr [eax+3] +
mov edi [ebx+0A4h] +
mov byte ptr [esp+5Ch+var_34] al +
and eax 6 +
jz loc_448FE1  +
test edi edi +
jz loc_448FE1  +
cmp al 4 +
jz loc_448FF0  +
mov eax [ebx+0BCh] +
test eax eax +
jz loc_4490B8  +
mov edx [ebx+0A8h] +
mov eax 8 +
cmp edx [ebx+0B4h] +
lea ecx ds:0Ch[edx*8] +
cmovz eax ecx +
mov [esp+5Ch+var_5C] eax +
xor ebp ebp +
call sub_40EFC0  +
test eax eax +
mov [esp+5Ch+var_20] eax +
jz loc_448FD7  +
mov [esp+5Ch+var_58] offset a_eh_frame +
mov [esp+5Ch+var_5C] esi +
call sub_410840  +
test eax eax +
jz loc_449108  +
mov ebp [esp+5Ch+var_20] +
lea ecx [esp+5Ch+var_14] +
mov dword ptr [ebp+0] 0 +
mov dword ptr [ebp+4] 0 +
mov byte ptr [ebp+0] 1 +
mov edx [esi+4] +
mov edx [edx+1B0h] +
mov edx [edx+128h] +
mov [esp+5Ch+var_54] eax +
mov eax [esp+5Ch+arg_4] +
mov [esp+5Ch+var_44] ecx +
mov [esp+5Ch+var_48] 4 +
mov [esp+5Ch+var_4C] edi +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] esi +
call edx  +
mov [ebp+1] al +
mov ebp [ebx+0BCh] +
test ebp ebp +
jz loc_448DE1  +
mov eax [ebx+0B4h] +
cmp [ebx+0A8h] eax +
jz loc_449090  +
mov eax [esp+3Ch] +
mov byte ptr [eax+2] 0FFh +
mov byte ptr [eax+3] 0FFh +
mov ebp [esp+3Ch] +
mov eax [esi+4] +
lea edx [ebp+4] +
mov eax [eax+30h] +
mov [esp-10h+arg_0] edx +
mov edx [esp+48h] +
mov [esp+0] edx +
call eax  +
cmp byte ptr [ebp+2] 0FFh +
jz loc_448F81  +
mov ebp [esp+3Ch] +
mov eax [esi+4] +
mov ecx [ebx+0B4h] +
mov edx ebp +
mov eax [eax+30h] +
add edx 8 +
mov [esp-10h+arg_0] edx +
mov [esp+0] ecx +
call eax  +
mov eax [ebx+0BCh] +
mov edx [ebx+0B4h] +
mov dword ptr [esp+0Ch] offset sub_445770 +
mov [esp-10h+arg_4] 0Ch +
mov [esp+0] eax +
mov [esp-10h+arg_0] edx +
call qsort  +
lea eax [ebp+10h] +
xor ebp ebp +
mov [esp+2Ch] eax +
mov dword ptr [esp+28h] 0 +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+38h] 0 +
mov [esp+30h] edi +
jmp loc_448F0D  +
mov edx [esi+4] +
mov edi [esp+2Ch] +
mov edx [edx+30h] +
lea ecx [edi-4] +
mov [esp-10h+arg_0] ecx +
mov [esp+0] eax +
call edx  +
mov eax [ebx+0BCh] +
mov edi [esi+0A0h] +
mov edx [eax+ebp+8] +
mov eax [esp+30h] +
mov eax [eax+3Ch] +
mov ecx [eax+1Ch] +
mov eax edx +
sub eax ecx +
cmp byte ptr [edi+4] 2 +
jz loc_4490A1  +
mov edx [esi+4] +
mov edi [esp+2Ch] +
mov edx [edx+30h] +
mov [esp-10h+arg_0] edi +
mov [esp+0] eax +
call edx  +
mov ecx [esp+28h] +
test ecx ecx +
jz loc_448EFA  +
mov edx [ebx+0BCh] +
lea ecx [edx+ebp-0Ch] +
mov eax [ecx+4] +
add eax [ecx] +
cmp [edx+ebp] eax +
mov eax 1 +
cmovnb eax [esp+38h] +
mov [esp+38h] eax +
mov eax [esp+28h] +
add ebp 0Ch +
add dword ptr [esp+2Ch] 8 +
add eax 1 +
mov [esp+28h] eax +
mov eax [esp+28h] +
cmp eax [ebx+0B4h] +
jnb loc_448F57  +
mov eax [ebx+0BCh] +
mov edi [esi+0A0h] +
mov edx [eax+ebp] +
mov eax [esp+30h] +
mov eax [eax+3Ch] +
mov ecx [eax+1Ch] +
mov eax edx +
sub eax ecx +
cmp byte ptr [edi+4] 2 +
jnz loc_448E81  +
add ecx eax +
mov edi 1 +
cmp edx ecx +
cmovz edi [esp+34h] +
mov [esp+34h] edi +
jmp loc_448E81  +
mov edx [esp+34h] +
mov edi [esp+30h] +
test edx edx +
jnz loc_4490F0  +
mov eax [esp+38h] +
test eax eax +
jnz loc_4490D5  +
mov eax [esp+34h] +
or eax [esp+38h] +
jnz loc_4490C2  +
mov ebp 1 +
mov edx [edi+24h] +
mov eax [edi+3Ch] +
mov [esp+14h] edx +
mov edi [edi+38h] +
mov dword ptr [esp+10h] 0 +
mov [esp-10h+arg_0] eax +
mov [esp+0] esi +
mov [esp+0Ch] edi +
mov edi [esp+3Ch] +
mov [esp-10h+arg_4] edi +
call sub_410F50  +
mov [esp+0] edi +
test eax eax +
mov eax 0 +
cmovz ebp eax +
call free  +
mov eax [ebx+0BCh] +
test eax eax +
jz loc_448FD7  +
mov [esp+0] eax +
call free  +
add esp 5Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 5Ch +
mov ebp 1 +
pop ebx  +
mov eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [edi+24h] 8 +
jnz loc_449138  +
lea ebx [esp+5Ch+var_14] +
mov eax ebx +
lea edx [esp+5Ch+var_C] +
mov byte ptr [eax] 0 +
add eax 1 +
cmp eax edx +
jnz loc_449004  +
mov eax [esi+4] +
mov byte ptr [esp+5Ch+var_14] 2 +
mov ebp [eax+1B0h] +
mov eax [ebp+19Ch] +
test eax eax +
jz loc_449119  +
mov ecx [esp+5Ch+arg_4] +
mov [esp+5Ch+var_5C] ecx +
call eax  +
mov [esp+49h] al +
mov eax [esi+4] +
mov edx [eax+30h] +
lea eax [esp+4Ch] +
mov [esp-10h+arg_0] eax +
mov eax [edi+3Ch] +
mov eax [eax+24h] +
sub eax 8 +
shr eax 3 +
mov [esp+0] eax +
call edx  +
mov edx [edi+24h] +
mov eax [edi+3Ch] +
mov [esp+14h] edx +
mov ecx [edi+38h] +
mov [esp-10h+arg_4] ebx +
mov [esp+0] esi +
mov dword ptr [esp+10h] 0 +
mov [esp+0Ch] ecx +
mov [esp-10h+arg_0] eax +
call sub_410F50  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
mov ebp eax +
mov eax ebp +
pop ebp  +
retn   +
mov eax [esp+3Ch] +
mov byte ptr [eax+2] 3 +
mov byte ptr [eax+3] 3Bh +
jmp loc_448DED  +
add ecx eax +
mov edi 1 +
cmp edx ecx +
cmovz edi [esp+34h] +
mov [esp+34h] edi +
jmp loc_448EBF  +
mov eax 8 +
jmp loc_448D42  +
mov dword ptr [esp+0] 11h +
xor ebp ebp +
call sub_40C770  +
jmp loc_448F86  +
mov eax [esp+74h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+0] offset aP_eh_frame_hdr +
call eax  +
jmp loc_448F73  +
mov eax [esp+74h] +
mov eax [eax+18h] +
mov eax [eax+2Ch] +
mov dword ptr [esp+0] offset aP_eh_frame_h_0 +
call eax  +
jmp loc_448F67  +
mov eax [esp+5Ch+var_20] +
mov [esp+5Ch+var_5C] eax +
call free  +
jmp loc_448FD7  +
mov [esp+5Ch+var_58] 87Fh +
mov [esp+5Ch+var_5C] offset a____Binutil_25 +
call sub_40C6C0  +
mov eax [ebp+19Ch] +
jmp loc_44902A  +
mov [esp+5Ch+var_54] offset aWrite_compact_ +
mov [esp+5Ch+var_58] 877h +
mov [esp+5Ch+var_5C] offset a____Binutil_25 +
call sub_40C6F0  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+5Ch+var_58] +
mov eax [eax+0A0h] +
cmp byte ptr [eax+4] 2 +
setz al  +
movzx eax al +
lea eax ds:4[eax*4] +
retn   +
***
mov eax 1 +
retn   +
***
mov eax [esp+14h] +
mov edx [eax+3Ch] +
mov edx [edx+1Ch] +
add edx [eax+38h] +
mov eax [esp+0Ch] +
mov eax [eax+1Ch] +
sub eax edx +
mov edx [esp+1Ch] +
sub eax [esp+18h] +
add eax [esp+10h] +
mov [edx] eax +
mov eax 1Bh +
retn   +
***
mov edi eax +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebp [edx] +
mov eax [esp+44h+arg_8] +
mov esi [esp+44h+arg_0] +
mov ebx [esp+44h+arg_4] +
mov eax [eax] +
test eax eax +
jz loc_449228  +
mov edi ebx +
mov eax 1 +
or edi esi +
jz loc_44921A  +
mov ecx [esp+44h+arg_C] +
cmp ebx 0 +
mov edx [ecx] +
jbe loc_449222  +
mov [esp+44h+var_38] edx +
mov [esp+44h+var_3C] ebp +
mov [esp+44h+var_40] esi +
mov [esp+44h+var_44] offset aDwarfErrorOffs +
call off_476094  +
mov [esp+44h+var_44] 11h +
call sub_40C770  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi edx +
jb loc_44921A  +
jmp loc_4491F3  +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_18] ecx +
mov [esp+44h+var_1C] edx +
call sub_410840  +
mov edx [esp+44h+var_1C] +
mov ecx [esp+44h+var_18] +
test eax eax +
mov [esp+44h+var_20] eax +
jz loc_4492A0  +
mov eax [esp+44h+var_20] +
mov eax [eax+28h] +
test eax eax +
jz loc_449293  +
mov edx [esp+44h+arg_C] +
test ecx ecx +
mov [edx] eax +
jz loc_4492F1  +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_38] ecx +
mov [esp+44h+var_3C] 0 +
mov [esp+44h+var_40] eax +
call sub_451D60  +
mov edi [esp+44h+arg_8] +
test eax eax +
mov [edi] eax +
jnz loc_4491DD  +
xor eax eax +
jmp loc_44921A  +
mov eax [esp+44h+var_20] +
mov eax [eax+24h] +
jmp loc_449257  +
mov ebp [edx+4] +
test ebp ebp +
jz loc_4492CB  +
mov [esp+44h+var_40] ebp +
mov [esp+44h+var_44] edi +
mov [esp+44h+var_18] ecx +
mov [esp+44h+var_1C] edx +
call sub_410840  +
mov edx [esp+44h+var_1C] +
mov ecx [esp+44h+var_18] +
test eax eax +
mov [esp+44h+var_20] eax +
jnz loc_44924C  +
mov eax [edx] +
mov [esp+44h+var_44] offset aDwarfErrorCanT +
mov [esp+44h+var_40] eax +
call off_476094  +
mov [esp+44h+var_44] 11h +
call sub_40C770  +
xor eax eax +
jmp loc_44921A  +
mov [esp+44h+var_44] eax +
call sub_40EFC0  +
mov ecx [esp+44h+arg_8] +
test eax eax +
mov [ecx] eax +
jz loc_449218  +
mov ecx [esp+44h+arg_C] +
mov edx [ecx] +
mov [esp+44h+var_3C] eax +
mov eax [esp+44h+var_20] +
mov [esp+44h+var_38] 0 +
mov [esp+44h+var_34] 0 +
mov [esp+44h+var_30] edx +
mov [esp+44h+var_40] eax +
mov [esp+44h+var_44] edi +
call sub_411050  +
test eax eax +
jnz loc_4491DD  +
xor eax eax +
jmp loc_44921A  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov eax [eax+1Ch] +
mov [esp+38h+var_24] edx +
mov edi [esp+38h+arg_0] +
mov [esp+38h+var_20] eax +
mov eax [esi] +
mov [esp+38h+var_34] 1Ch +
mov [esp+38h+var_38] eax +
call sub_407B20  +
test eax eax +
mov ebx eax +
jz loc_449532  +
mov dword ptr [eax] 0 +
mov eax [esp+38h+var_24] +
test edi edi +
mov [ebx+4] eax +
mov eax ebp +
mov [ebx+18h] al +
mov eax [esp+38h+arg_4] +
mov [ebx+0Ch] eax +
mov eax [esp+38h+arg_8] +
mov [ebx+10h] eax +
mov eax [esp+38h+arg_C] +
mov [ebx+14h] eax +
movzx eax [esp+38h+arg_10] +
mov [ebx+19h] al +
jz loc_4493C2  +
cmp byte ptr [edi] 0 +
jnz loc_449501  +
mov dword ptr [ebx+8] 0 +
mov eax [esp+38h+var_20] +
test eax eax +
jz loc_4493E9  +
mov eax [eax+8] +
mov edi [eax+4] +
cmp edi [esp+38h+var_24] +
jz loc_449540  +
movzx edx byte ptr [eax+19h] +
test dl dl +
jz loc_449423  +
mov [esp+38h+var_38] 0Ch +
call sub_40EFC0  +
test eax eax +
jz loc_449532  +
mov edx [esi+1Ch] +
mov edi [esp+38h+var_24] +
mov [eax+8] ebx +
mov [eax+4] edx +
mov [eax] edi +
add dword ptr [esi+0Ch] 1 +
mov [esi+1Ch] eax +
mov eax 1 +
mov [esi+20h] ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx+4] +
cmp edi ebp +
jb loc_4494E0  +
jz loc_4494D3  +
mov ecx [esi+20h] +
cmp ebp [ecx+4] +
mov [esp+38h+var_1C] ecx +
ja loc_449480  +
jz loc_4495F3  +
mov ecx [esp+38h+var_1C] +
mov ecx [ecx] +
test ecx ecx +
jz loc_4495D4  +
cmp ebp [ecx+4] +
ja loc_4495D4  +
jnz loc_449480  +
movzx edx byte ptr [ecx+18h] +
cmp [ebx+18h] dl +
ja loc_4495D4  +
lea esi [esi+0] +
jnz loc_449480  +
movzx edx byte ptr [ecx+19h] +
cmp [ebx+19h] dl +
jb loc_4495D4  +
nop   +
mov edx [eax] +
test edx edx +
jnz loc_4494B7  +
jmp loc_449620  +
cmp ebp [edx+4] +
ja loc_4495A0  +
lea esi [esi+0] +
jz loc_449580  +
mov ecx [edx] +
test ecx ecx +
jz loc_4495D0  +
mov edi [edx+4] +
mov eax edx +
mov edx ecx +
cmp ebp edi +
ja loc_4494A6  +
jnz loc_449490  +
movzx ecx byte ptr [eax+18h] +
cmp [ebx+18h] cl +
ja loc_4494A6  +
jnz loc_449490  +
movzx ecx byte ptr [eax+19h] +
cmp [ebx+19h] cl +
jb loc_4494A6  +
jmp loc_449490  +
movzx ecx byte ptr [eax+18h] +
cmp [ebx+18h] cl +
jbe loc_449434  +
mov [ebx] eax +
mov eax [esp+38h+var_20] +
mov [eax+8] ebx +
mov eax [esi+20h] +
test eax eax +
jz loc_4495E6  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] edi +
call strlen  +
mov edx [esi] +
mov [esp+38h+var_38] edx +
add eax 1 +
mov [esp+38h+var_34] eax +
call sub_407B20  +
test eax eax +
mov [ebx+8] eax +
jz loc_449532  +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] eax +
call strcpy  +
jmp loc_4493C9  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ebp +
movzx edx byte ptr [eax+19h] +
cmp [eax+18h] cl +
jnz loc_4493E5  +
movzx ecx dl +
cmp ecx dword ptr [esp+38h+arg_10] +
jnz loc_4493E5  +
cmp eax [esi+20h] +
jz loc_449629  +
mov eax [eax] +
mov [ebx] eax +
mov eax [esp+38h+var_20] +
mov [eax+8] ebx +
mov eax 1 +
jmp loc_44941B  +
movzx ecx byte ptr [edx+18h] +
cmp [ebx+18h] cl +
ja loc_4495A0  +
jnz loc_4494A6  +
movzx ecx byte ptr [edx+19h] +
cmp [ebx+19h] cl +
jnb loc_4494A6  +
lea esi [esi+0] +
mov ecx [eax] +
mov edx eax +
mov eax [esp+38h+var_20] +
mov [esi+20h] edx +
mov esi [esp+38h+var_24] +
mov [ebx] ecx +
mov [edx] ebx +
cmp esi [eax] +
jnb loc_4494F4  +
mov eax [esp+38h+var_20] +
mov esi [esp+38h+var_24] +
mov [eax] esi +
jmp loc_4494F4  +
xor ecx ecx +
jmp loc_4495A4  +
mov eax [esp+38h+var_1C] +
mov [ebx] ecx +
mov [eax] ebx +
mov eax 1 +
jmp loc_44941B  +
mov [esi+20h] ebx +
mov eax 1 +
jmp loc_44941B  +
mov ecx [esp+38h+var_1C] +
movzx ecx byte ptr [ecx+18h] +
cmp [ebx+18h] cl +
ja loc_449480  +
jnz loc_449446  +
mov ecx [esp+38h+var_1C] +
movzx ecx byte ptr [ecx+19h] +
cmp [ebx+19h] cl +
jb loc_449480  +
jmp loc_449446  +
mov edx eax +
xor ecx ecx +
jmp loc_4495A4  +
mov [esi+20h] ebx +
lea esi [esi+0] +
jmp loc_449565  +
***
push ebx  +
sub esp 14h +
mov [esp+18h+var_14] 1Ch +
mov [esp+18h+var_18] eax +
call sub_407B20  +
test eax eax +
mov ebx eax +
jz loc_449681  +
mov [esp+18h+var_10] 10h +
mov [esp+18h+var_14] offset dword_4496A0 +
mov [esp+18h+var_18] eax +
call sub_40FD60  +
test eax eax +
jz loc_449690  +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
xor ebx ebx +
add esp 14h +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
mov [esp+18h+var_14] ebx +
xor ebx ebx +
mov [esp+18h+var_18] esi +
call sub_407D70  +
jmp loc_449679  +
***
sub esp 1Ch +
mov eax [eax] +
mov eax [eax+34h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
***
jmp sub_449710  +
***
sub esp 1Ch +
mov eax [eax] +
mov eax [eax+28h] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
***
jmp sub_449730  +
***
sub esp 1Ch +
mov eax [eax] +
mov eax [eax+1Ch] +
mov [esp+1Ch+var_1C] edx +
call eax  +
add esp 1Ch +
retn   +
***
jmp sub_449750  +
***
mov ecx [esp+arg_0] +
mov eax [edx] +
cmp [ecx] eax +
jb loc_449790  +
mov eax 1 +
ja loc_449787  +
mov edx [edx+8] +
mov ecx [ecx+8] +
mov ebx [edx+4] +
cmp [ecx+4] ebx +
jb loc_449787  +
ja loc_449790  +
movzx edx byte ptr [edx+18h] +
cmp [ecx+18h] dl +
jb loc_449787  +
setnbe al  +
movzx eax al +
neg eax  +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
add eax 0Ch +
cmp [eax+4] edx +
ja loc_4497AD  +
cmp edx [eax+8] +
jb loc_4497B6  +
mov eax [eax] +
test eax eax +
jnz loc_4497A3  +
xor eax eax +
retn   +
mov eax 1 +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [edx+18h] +
mov [esp+20h+var_20] ebx +
mov [esp+20h+var_1C] eax +
call sub_410840  +
test eax eax +
jz loc_4497E6  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+1Ch] +
test eax eax +
jz loc_4497FD  +
mov [esp+20h+var_1C] eax +
mov [esp+20h+var_20] ebx +
call sub_410840  +
test eax eax +
jnz loc_4497DE  +
mov eax [ebx+64h] +
mov ebp offset a_gnu_linkonc_0 +
mov ebx 11h +
test eax eax +
jz loc_4497DE  +
nop   +
mov esi [eax] +
mov edi ebp +
mov ecx ebx +
cmps   +
jz loc_4497DE  +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_449810  +
xor eax eax +
jmp loc_4497DE  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
test ecx ecx +
jz loc_4498AA  +
mov ebx [ecx+0Ch] +
test ebx ebx +
jz loc_4498A0  +
mov eax [edx+18h] +
mov [esp+28h+var_1C] eax +
jmp loc_44987C  +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_449867  +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] esi +
call strcmp  +
test eax eax +
jz loc_449892  +
mov edi offset a_gnu_linkonc_0 +
mov ecx 11h +
cmps   +
jz loc_449892  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jz loc_4498A0  +
mov esi [ebx] +
mov eax [esp+28h+var_1C] +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] eax +
call strcmp  +
test eax eax +
jnz loc_449850  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_4497C0  +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
cmp ecx edi +
jz loc_449911  +
mov esi [edx+8] +
mov ebx edx +
test esi esi +
jnz loc_4498FE  +
mov [edx+4] ecx +
mov eax 1 +
mov [edx+8] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edi [ebx+4] +
jz loc_449920  +
mov ebx [ebx] +
test ebx ebx +
jz loc_449930  +
mov esi [ebx+8] +
cmp ecx esi +
jnz loc_4498F0  +
mov [ebx+8] edi +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [ebx+4] ecx +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax] +
mov [esp-0Ch+arg_0] 0Ch +
mov [esp-0Ch+arg_8] ecx +
mov [esp-0Ch+arg_4] edx +
mov [esp+0] eax +
call sub_407B20  +
test eax eax +
jz loc_44996E  +
mov ecx [esp-0Ch+arg_8] +
mov edx [esp-0Ch+arg_4] +
mov [eax+8] edi +
mov [eax+4] ecx +
mov ecx [edx] +
mov [eax] ecx +
mov [edx] eax +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor eax eax +
jmp loc_4498E2  +
***
push ebx  +
sub esp 10h +
mov eax [eax+4] +
mov esi [esp+10h+arg_0] +
cmp dword ptr [eax+4] 5 +
jz loc_4499D7  +
movzx ebx dl +
add ebx ecx +
cmp esi ebx +
jb loc_449A20  +
cmp dl 4 +
jz loc_449A60  +
cmp dl 8 +
jz loc_449A40  +
cmp dl 2 +
jz loc_449A70  +
mov [esp+10h+var_8] offset aRead_address +
mov [esp+10h+var_C] 346h +
mov [esp+10h+var_10] offset a____Binutil_24 +
call sub_40C6F0  +
mov ebx [eax+1B0h] +
movzx edi dl +
add edi ecx +
movzx ebx byte ptr [ebx+1ACh] +
shr bl 7 +
cmp esi edi +
jb loc_449A20  +
test bl bl +
jz loc_4499A0  +
cmp dl 4 +
jz loc_449A45  +
cmp dl 8 +
jz loc_449A30  +
cmp dl 2 +
jz loc_449A50  +
mov [esp+10h+var_8] offset aRead_address +
mov [esp+10h+var_C] 338h +
mov [esp+10h+var_10] offset a____Binutil_24 +
call sub_40C6F0  +
nop   +
xor eax eax +
xor edx edx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [eax+20h] +
mov [esp+10h+arg_0] ecx +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
mov eax [eax+1Ch] +
jmp loc_449A33  +
mov eax [eax+2Ch] +
mov [esp+10h+var_10] ecx +
call eax  +
cdq   +
jmp loc_449A24  +
mov eax [eax+38h] +
mov [esp+10h+var_10] ecx +
call eax  +
cdq   +
jmp loc_449A24  +
mov eax [eax+28h] +
mov [esp+10h+var_10] ecx +
call eax  +
xor edx edx +
jmp loc_449A24  +
mov eax [eax+34h] +
mov [esp+10h+var_10] ecx +
call eax  +
xor edx edx +
jmp loc_449A24  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+5Ch] +
mov [esp+2Ch+var_14] edx +
mov esi [esp+2Ch+arg_0] +
mov [esp+2Ch+var_1C] eax +
mov eax [ebx+50h] +
mov edi [eax+54h] +
test edi edi +
jz loc_449B3F  +
add esi edi +
jb loc_449B73  +
movzx edx byte ptr [ebx+58h] +
add edi [eax+58h] +
lea eax [ebx+8] +
mov [esp+2Ch+var_10] eax +
movzx ecx dl +
mov [esp+2Ch+var_18] edi +
jmp loc_449ACE  +
cmp ebp 0FFFFFFFFh +
jnz loc_449B16  +
mov [esp+2Ch+var_1C] eax +
mov edi [esp+2Ch+var_18] +
lea eax [esi+ecx*2] +
cmp edi eax +
jb loc_449B73  +
mov eax [ebx+8] +
mov ecx esi +
mov [esp+2Ch+var_2C] edi +
call sub_449980  +
movzx edx byte ptr [ebx+58h] +
mov [esp+2Ch+var_2C] edi +
mov ebp eax +
movzx eax dl +
add esi eax +
mov eax [ebx+8] +
mov ecx esi +
call sub_449980  +
movzx edx byte ptr [ebx+58h] +
movzx ecx dl +
add esi ecx +
mov edi eax +
or edi ebp +
jz loc_449B80  +
cmp eax 0FFFFFFFFh +
jnz loc_449AC5  +
mov edi [esp+2Ch+var_1C] +
mov edx [esp+2Ch+var_14] +
add eax edi +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_10] +
lea ecx [ebp+edi+0] +
call sub_4498C0  +
test eax eax +
jz loc_449B73  +
movzx edx byte ptr [ebx+58h] +
mov eax edi +
movzx ecx dl +
jmp loc_449ACA  +
mov edi [eax+8] +
lea edx [eax+58h] +
add eax 54h +
mov ecx [eax-1Ch] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+8] +
mov [esp+2Ch+var_20] edx +
add edi 58h +
mov [esp+2Ch+var_2C] 0 +
mov edx edi +
mov [esp+2Ch+var_28] 0 +
call sub_4491C0  +
test eax eax +
jnz loc_449B8D  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+50h] +
mov edi [eax+54h] +
jmp loc_449AA6  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov edi [ecx+8] +
mov eax [esp+40h+arg_4] +
cmp [esp+40h+arg_0] eax +
jnb loc_449C70  +
cmp edx 0Fh +
mov [esi+4] edx +
jz loc_449D25  +
ja loc_449C20  +
cmp edx 8 +
jz loc_44A1B5  +
ja loc_449C95  +
cmp edx 4 +
lea esi [esi+0] +
jz loc_44A095  +
jbe loc_449DA0  +
cmp edx 6 +
nop   +
jz loc_449C4C  +
ja loc_449D03  +
mov eax [esp+40h+arg_0] +
xor ecx ecx +
xor ebx ebx +
lea ebp [eax+2] +
cmp [esp+40h+arg_4] ebp +
jnb loc_449F97  +
mov [esi+0Ch] ebx +
mov eax ebp +
mov [esi+8] ecx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx 16h +
jz loc_44A0F0  +
ja loc_449CD5  +
cmp edx 12h +
jz loc_449BF8  +
jbe loc_449D64  +
cmp edx 14h +
lea esi [esi+0] +
jz loc_449D03  +
ja loc_449D25  +
mov eax [esp+40h+arg_0] +
xor ecx ecx +
xor ebx ebx +
lea ebp [eax+4] +
cmp [esp+40h+arg_4] ebp +
jb loc_449C0D  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
xor ebx ebx +
call sub_449710  +
mov ecx eax +
jmp loc_449C0D  +
mov [esp+40h+var_40] offset aDwarfErrorInfo +
call off_476094  +
mov [esp+40h+var_40] 11h +
call sub_40C770  +
mov eax [esp+40h+arg_0] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edx 0Bh +
jz loc_449CB6  +
jbe loc_449FB0  +
cmp edx 0Dh +
jz loc_44A080  +
lea esi [esi+0] +
ja loc_449EF4  +
mov eax [esp+40h+arg_0] +
xor ecx ecx +
xor ebx ebx +
lea ebp [eax+1] +
cmp [esp+40h+arg_4] ebp +
jb loc_449C0D  +
movzx ecx byte ptr [eax] +
xor ebx ebx +
jmp loc_449C0D  +
cmp edx 19h +
jz loc_44A174  +
nop   +
jbe loc_44A005  +
cmp edx 1F20h +
jz loc_44A140  +
cmp edx 1F21h +
jz loc_449E51  +
cmp edx 20h +
jnz loc_449D76  +
mov eax [esp+40h+arg_0] +
xor edx edx +
lea ebp [eax+8] +
xor eax eax +
cmp [esp+40h+arg_4] ebp +
jnb loc_44A190  +
mov [esi+8] eax +
mov eax ebp +
mov [esi+0Ch] edx +
jmp loc_449C8D  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_34] 0 +
mov [esp+40h+var_30] eax +
lea eax [esp+40h+var_14] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_3C] eax +
call sub_40FB80  +
mov dword ptr [esi+0Ch] 0 +
mov [esi+8] eax +
mov eax [esp+40h+arg_0] +
add eax [esp+40h+var_14] +
jmp loc_449C8D  +
cmp edx 10h +
jz loc_449E14  +
cmp edx 11h +
jz loc_449CB6  +
mov [esp+40h+var_3C] edx +
mov [esp+40h+var_40] offset aDwarfErrorIn_0 +
call off_476094  +
mov [esp+40h+var_40] 11h +
call sub_40C770  +
xor eax eax +
jmp loc_449C8D  +
cmp edx 1 +
jz loc_449DE8  +
cmp edx 3 +
jnz loc_449D76  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_407B20  +
test eax eax +
mov ebx eax +
jz loc_449D93  +
mov eax [esp+40h+arg_0] +
lea ecx [eax+2] +
cmp [esp+40h+arg_4] ecx +
jnb loc_44A1E4  +
mov dword ptr [ebx] 0 +
mov ebp ecx +
xor ecx ecx +
mov [ebx+4] ecx +
mov eax ebp +
mov [esi+8] ebx +
jmp loc_449C8D  +
mov edi [esp+40h+arg_4] +
mov eax [ebx+8] +
movzx edx byte ptr [ebx+58h] +
mov ecx [esp+40h+arg_0] +
mov [esp+40h+var_40] edi +
call sub_449980  +
mov [esi+8] eax +
mov eax [esp+40h+arg_0] +
mov [esi+0Ch] edx +
movzx ebp byte ptr [ebx+58h] +
add eax ebp +
jmp loc_449C8D  +
mov eax [ecx+54h] +
sub eax 3 +
cmp eax 1 +
ja loc_449DE8  +
cmp byte ptr [ecx+59h] 4 +
mov eax [esp+40h+arg_0] +
jz loc_44A379  +
lea ecx [eax+8] +
xor edx edx +
xor eax eax +
cmp [esp+40h+arg_4] ecx +
jnb loc_44A39D  +
mov [esi+8] eax +
mov [esi+0Ch] edx +
movzx eax byte ptr [ebx+59h] +
add eax [esp+40h+arg_0] +
jmp loc_449C8D  +
movzx eax byte ptr [ecx+59h] +
mov edx [esp+40h+arg_0] +
mov ebp [ecx+50h] +
movzx ecx al +
add edx ecx +
cmp [esp+40h+arg_4] edx +
jb loc_44A2B0  +
cmp al 4 +
mov eax [esp+40h+arg_0] +
jz loc_44A215  +
add eax 8 +
cmp [esp+40h+arg_4] eax +
jnb loc_44A2DD  +
xor edi edi +
mov [esp+40h+var_2C] 0 +
mov eax [ebp+20h] +
mov [esp+40h+var_14] ecx +
test eax eax +
jz loc_44A2F8  +
mov ecx [ebp+8] +
mov eax [ebx+50h] +
lea edx [ecx+78h] +
lea ecx [ebp+28h] +
mov eax [eax+20h] +
mov [esp+40h+var_34] ecx +
lea ecx [ebp+24h] +
mov [esp+40h+var_38] ecx +
mov ecx [esp+40h+var_2C] +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_3C] ecx +
xor ecx ecx +
call sub_4491C0  +
test eax eax +
jz loc_449EE0  +
cmp [esp+40h+var_2C] 0 +
mov eax [ebp+28h] +
ja loc_449EE0  +
cmp edi eax +
jb loc_44A1A1  +
nop   +
mov ebp [esp+40h+var_14] +
xor edi edi +
mov eax [esp+40h+arg_0] +
mov [esi+8] edi +
add eax ebp +
jmp loc_449C8D  +
movzx eax byte ptr [ecx+59h] +
mov edx [esp+40h+arg_0] +
mov ebp [ecx+50h] +
movzx ecx al +
add edx ecx +
cmp [esp+40h+arg_4] edx +
jb loc_44A2B0  +
cmp al 4 +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_28] edi +
jz loc_44A241  +
add eax 8 +
cmp [esp+40h+arg_4] eax +
jnb loc_44A2B9  +
xor edi edi +
mov [esp+40h+var_2C] 0 +
mov eax [ebp+8] +
mov [esp+40h+var_14] ecx +
mov ecx [ebp+38h] +
mov [esp+40h+var_40] edi +
lea edx [eax+70h] +
lea eax [ebp+50h] +
mov [esp+40h+var_34] eax +
lea eax [ebp+4Ch] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+var_2C] +
mov [esp+40h+var_3C] eax +
mov eax [esp+40h+var_28] +
call sub_4491C0  +
test eax eax +
jz loc_449EE0  +
cmp [esp+40h+var_2C] 0 +
mov eax [ebp+50h] +
ja loc_449EE0  +
cmp edi eax +
jnb loc_449EE0  +
add edi [ebp+4Ch] +
cmp byte ptr [edi] 0 +
jz loc_449EE0  +
mov ebp [esp+40h+var_14] +
jmp loc_449EE6  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
xor ebx ebx +
call sub_4496F0  +
mov ecx eax +
jmp loc_449C0D  +
cmp edx 9 +
jz loc_44A017  +
cmp edx 0Ah +
jnz loc_449D76  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_407B20  +
test eax eax +
jz loc_449D93  +
mov edi [esp+40h+arg_0] +
lea edx [edi+1] +
cmp [esp+40h+arg_4] edx +
jb loc_44A1D5  +
movzx ebp byte ptr [edi] +
mov [eax] ebp +
add ebp edx +
cmp [esp+40h+arg_4] ebp +
jb loc_44A3CD  +
mov [eax+4] edx +
mov [esi+8] eax +
mov eax ebp +
jmp loc_449C8D  +
cmp edx 17h +
jz loc_44A140  +
cmp edx 18h +
jnz loc_449D76  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_407B20  +
test eax eax +
mov ebx eax +
jz loc_449D93  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_34] 0 +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_30] eax +
lea eax [esp+40h+var_14] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_3C] eax +
call sub_40FB80  +
mov ecx [esp+40h+arg_0] +
xor edx edx +
add ecx [esp+40h+var_14] +
lea ebp [ecx+eax] +
cmp [esp+40h+arg_4] ebp +
mov [ebx] eax +
mov eax ebp +
cmovnb edx ecx +
mov [ebx+4] edx +
mov [esi+8] ebx +
jmp loc_449C8D  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_34] 1 +
mov [esp+40h+var_30] eax +
jmp loc_449D35  +
mov [esp+40h+var_3C] 8 +
mov [esp+40h+var_40] edi +
call sub_407B20  +
test eax eax +
mov ebx eax +
jz loc_449D93  +
mov eax [esp+40h+arg_0] +
lea ecx [eax+4] +
cmp [esp+40h+arg_4] ecx +
jb loc_449DD1  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
mov [esp+40h+var_2C] ecx +
call sub_449710  +
mov ecx [esp+40h+var_2C] +
mov [ebx] eax +
lea ebp [ecx+eax] +
cmp [esp+40h+arg_4] ebp +
jnb loc_449DDB  +
mov ecx ebp +
jmp loc_449DD7  +
mov eax [esp+40h+arg_4] +
mov [esp+40h+var_40] edi +
mov [esp+40h+var_34] 0 +
mov [esp+40h+var_30] eax +
lea eax [esp+40h+var_14] +
mov [esp+40h+var_38] eax +
mov eax [esp+40h+arg_0] +
mov [esp+40h+var_3C] eax +
call sub_40FB80  +
mov edx [esp+40h+arg_0] +
mov ecx ebx +
mov edi [esp+40h+arg_4] +
add edx [esp+40h+var_14] +
mov [esp+40h+var_3C] edi +
mov [esp+40h+var_40] edx +
mov edx eax +
mov eax esi +
call sub_449BA0  +
jmp loc_449C8D  +
cmp byte ptr [ebx+59h] 4 +
mov eax [esp+40h+arg_0] +
jz loc_44A1F9  +
lea ecx [eax+8] +
xor edx edx +
xor eax eax +
cmp [esp+40h+arg_4] ecx +
jnb loc_44A29F  +
mov [esi+8] eax +
mov [esi+0Ch] edx +
movzx ebp byte ptr [ebx+59h] +
mov eax [esp+40h+arg_0] +
add eax ebp +
jmp loc_449C8D  +
mov dword ptr [esi+8] 1 +
mov eax [esp+40h+arg_0] +
mov dword ptr [esi+0Ch] 0 +
jmp loc_449C8D  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_449730  +
jmp loc_449D18  +
add edi [ebp+24h] +
cmp byte ptr [edi] 0 +
jnz loc_449F8E  +
lea esi [esi+0] +
jmp loc_449EE0  +
mov eax [esp+40h+arg_0] +
cmp byte ptr [eax] 0 +
jnz loc_44A276  +
mov eax 1 +
xor edx edx +
mov [esi+8] edx +
add eax [esp+40h+arg_0] +
jmp loc_449C8D  +
mov dword ptr [eax] 0 +
mov ebp edx +
xor edx edx +
jmp loc_449FF8  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
mov [esp+40h+var_2C] ecx +
call sub_4496F0  +
jmp loc_44A0D0  +
add eax 4 +
xor edx edx +
xor ecx ecx +
cmp [esp+40h+arg_4] eax +
jnb loc_44A364  +
mov [esi+8] edx +
mov [esi+0Ch] ecx +
jmp loc_44A165  +
add eax 4 +
cmp [esp+40h+arg_4] eax +
jb loc_449E84  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_449710  +
movzx ecx byte ptr [ebx+59h] +
mov [esp+40h+var_2C] 0 +
mov edi eax +
jmp loc_449E8E  +
add eax 4 +
cmp [esp+40h+arg_4] eax +
jb loc_449F2B  +
mov edx [esp+40h+arg_0] +
mov eax edi +
add eax 4 +
call sub_449710  +
mov edi [ebx+8] +
movzx ecx byte ptr [ebx+59h] +
mov [esp+40h+var_2C] 0 +
mov [esp+40h+var_28] edi +
mov edi eax +
jmp loc_449F35  +
mov eax [esp+40h+arg_0] +
mov edx [esp+40h+arg_4] +
add eax 1 +
jmp loc_44A290  +
add eax 1 +
cmp byte ptr [eax-1] 0 +
jz loc_44A357  +
cmp eax edx +
jnz loc_44A283  +
sub eax [esp+40h+arg_0] +
xor edx edx +
jmp loc_44A1C9  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_449730  +
jmp loc_44A15F  +
xor ebp ebp +
xor edi edi +
jmp loc_449EE6  +
mov edx [esp+40h+arg_0] +
mov eax edi +
add eax 4 +
call sub_449730  +
movzx ecx byte ptr [ebx+59h] +
mov edi eax +
mov eax [ebx+8] +
mov [esp+40h+var_2C] edx +
mov [esp+40h+var_28] eax +
jmp loc_449F35  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_449730  +
movzx ecx byte ptr [ebx+59h] +
mov edi eax +
mov [esp+40h+var_2C] edx +
jmp loc_449E8E  +
mov eax [ebx+8] +
mov [esp+40h+var_3C] offset aHomeJenkinsM_0 +
mov [esp+40h+var_40] eax +
call sub_407F60  +
test eax eax +
mov [esp+40h+var_28] eax +
jz loc_449EE0  +
mov eax [esp+40h+var_28] +
mov [esp+40h+var_3C] 0 +
mov [esp+40h+var_40] eax +
call sub_407650  +
test eax eax +
jz loc_44A3B6  +
mov [esp+40h+var_3C] 1 +
mov [esp+40h+var_40] eax +
mov [esp+40h+var_24] eax +
call sub_4089A0  +
mov edx [esp+40h+var_24] +
test eax eax +
jz loc_44A3AE  +
mov [ebp+20h] edx +
jmp loc_449E9D  +
sub eax [esp+40h+arg_0] +
mov edx [esp+40h+arg_0] +
jmp loc_44A1C9  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_449710  +
xor ecx ecx +
mov edx eax +
jmp loc_44A20A  +
lea ecx [eax+4] +
xor edx edx +
xor eax eax +
cmp [esp+40h+arg_4] ecx +
jb loc_449E3E  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_449710  +
xor edx edx +
jmp loc_449E3E  +
mov edx [esp+40h+arg_0] +
lea eax [edi+4] +
call sub_449730  +
jmp loc_449E3E  +
mov [esp+40h+var_40] edx +
call sub_407790  +
mov eax [esp+40h+var_28] +
xor edi edi +
mov [esp+40h+var_40] eax +
call free  +
mov ebp [esp+40h+var_14] +
jmp loc_449EE6  +
mov edx ebp +
jmp loc_44A1DB  +
***
push esi  +
push ebx  +
sub esp 2Ch +
lea ecx [edx-1] +
cmp ecx [eax+4] +
jb loc_44A410  +
test edx edx +
jnz loc_44A4D0  +
mov [esp+2Ch+var_2C] offset aUnknown_5 +
call _strdup  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 0FFFFFFFh +
shl edx 4 +
add edx [eax+18h] +
mov ebx [edx] +
movzx ecx byte ptr [ebx] +
cmp cl 5Ch +
jz loc_44A4C0  +
cmp cl 2Fh +
jz loc_44A4C0  +
test cl cl +
jnz loc_44A4B2  +
mov edx [edx+4] +
test edx edx +
jz loc_44A447  +
cmp edx [eax+8] +
jbe loc_44A4E2  +
mov edi [eax+10h] +
test edi edi +
jz loc_44A4C0  +
xor esi esi +
mov [esp+2Ch+var_2C] edi +
call strlen  +
mov [esp+2Ch+var_2C] ebx +
mov ebp eax +
call strlen  +
add ebp eax +
test esi esi +
jz loc_44A568  +
mov [esp+2Ch+var_2C] esi +
call strlen  +
lea eax [ebp+eax+3] +
mov [esp+2Ch+var_2C] eax +
call sub_40EFC0  +
mov ebp eax +
xor eax eax +
test ebp ebp +
jz loc_44A403  +
mov [esp+2Ch+var_1C] ebx +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] edi +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] offset aSSS_0 +
call sprintf  +
add esp 2Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebx+1] 3Ah +
jnz loc_44A437  +
lea esi [esi+0] +
mov [esp+2Ch+var_2C] ebx +
call _strdup  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+2Ch+var_2C] offset aDwarfErrorMang +
call off_476094  +
jmp loc_44A3F7  +
mov ecx [eax+14h] +
test ecx ecx +
jz loc_44A447  +
mov esi [ecx+edx*4-4] +
test esi esi +
jz loc_44A447  +
movzx edx byte ptr [esi] +
cmp dl 5Ch +
jz loc_44A515  +
cmp dl 2Fh +
jz loc_44A515  +
test dl dl +
jnz loc_44A560  +
mov edi [eax+10h] +
test edi edi +
jnz loc_44A450  +
mov [esp+2Ch+var_2C] esi +
call strlen  +
mov [esp+2Ch+var_2C] ebx +
mov edi eax +
call strlen  +
lea ebp [edi+eax+2] +
mov [esp+2Ch+var_2C] ebp +
call sub_40EFC0  +
mov edi eax +
xor eax eax +
test edi edi +
jz loc_44A403  +
mov [esp+2Ch+var_20] ebx +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] offset aSS_8 +
mov [esp+2Ch+var_2C] edi +
call sprintf  +
mov eax edi +
jmp loc_44A403  +
cmp byte ptr [esi+1] 3Ah +
jnz loc_44A50A  +
jmp loc_44A515  +
add ebp 2 +
mov esi edi +
jmp loc_44A52B  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 7Ch +
mov ecx [edx+38h] +
mov [esp+80h+var_34] eax +
mov eax [eax+8] +
mov edi eax +
mov [esp+80h+var_68] eax +
mov eax [edx+8] +
lea edx [eax+28h] +
lea eax [ebx+48h] +
mov [esp+80h+var_74] eax +
lea eax [ebx+44h] +
mov [esp+80h+var_78] eax +
mov eax [esi+38h] +
mov [esp+80h+var_7C] 0 +
mov [esp+80h+var_80] eax +
mov eax edi +
call sub_4491C0  +
test eax eax +
jz loc_44A6AD  +
mov edi [esp+80h+var_68] +
mov [esp+80h+var_7C] 24h +
mov [esp+80h+var_80] edi +
call sub_407B20  +
test eax eax +
mov esi eax +
mov [esp+80h+var_6C] eax +
jz loc_44A6AD  +
mov [eax] edi +
mov eax [esp+80h+var_34] +
mov eax [eax+28h] +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+8] 0 +
mov [esi+10h] eax +
mov eax [ebx+48h] +
mov dword ptr [esi+14h] 0 +
mov dword ptr [esi+0Ch] 0 +
mov dword ptr [esi+1Ch] 0 +
cmp eax 0Fh +
mov dword ptr [esi+20h] 0 +
jbe loc_44B1FE  +
mov esi [esp+80h+var_34] +
mov edx [ebx+44h] +
mov edi [esi+38h] +
lea ebp [edx+eax] +
mov eax [esp+80h+var_68] +
add edi edx +
lea esi [edi+4] +
add eax 4 +
cmp ebp esi +
mov [esp+80h+var_30] eax +
jnb loc_44A6B7  +
mov eax [esp+80h+var_34] +
cmp byte ptr [eax+58h] 8 +
jz loc_44AF27  +
mov edi 4 +
xor eax eax +
lea ebp [esi+eax] +
xor eax eax +
lea ebx [esi+2] +
cmp ebp ebx +
jnb loc_44A712  +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_80] offset aDwarfErrorUnha +
call off_476094  +
mov [esp+80h+var_80] 11h +
call sub_40C770  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esp+0] offset aDwarfErrorRanO +
call off_476094  +
mov dword ptr [esp+0] 11h +
call sub_40C770  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+80h+var_30] +
mov edx edi +
call sub_449710  +
cmp eax 0FFFFFFFFh +
jnz loc_44B28C  +
add edi 0Ch +
xor eax eax +
cmp ebp edi +
jnb loc_44AF3E  +
mov esi edi +
mov edi 8 +
mov edx [ebx+48h] +
cmp edx eax +
jnb loc_44A65D  +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_78] edx +
mov [esp+80h+var_80] offset aDwarfErrorLine +
call off_476094  +
mov [esp+80h+var_80] 11h +
call sub_40C770  +
xor eax eax +
jmp loc_44A68C  +
mov eax [esp+80h+var_30] +
mov edx esi +
call sub_4496F0  +
mov ecx eax +
lea eax [eax-2] +
cmp ax 2 +
ja loc_44B284  +
xor eax eax +
cmp cx 4 +
setz al  +
lea eax [edi+eax+5] +
add eax ebx +
cmp ebp eax +
jbe loc_44B222  +
cmp edi 4 +
jz loc_44AFB4  +
add esi 0Ah +
cmp ebp esi +
jnb loc_44B00F  +
add ebx edi +
lea eax [ebx+1] +
cmp ebp eax +
mov [esp+80h+var_40] 0 +
jb loc_44A76F  +
movzx esi byte ptr [ebx] +
mov [esp+80h+var_40] esi +
cmp cx 4 +
jnz loc_44A7A0  +
lea eax [ebx+2] +
cmp ebp eax +
jnb loc_44AF12  +
mov [esp+80h+var_80] offset aDwarfErrorInva +
call off_476094  +
mov [esp+80h+var_80] 11h +
call sub_40C770  +
xor eax eax +
jmp loc_44A68C  +
mov [esp+80h+var_49] 1 +
lea edx [eax+2] +
cmp ebp edx +
mov [esp+80h+var_38] 0 +
jb loc_44A7C5  +
movzx esi byte ptr [eax+1] +
lea edx [esi-80h] +
movzx edx dl +
lea esi [edx-80h] +
mov [esp+80h+var_38] esi +
lea edx [eax+3] +
cmp ebp edx +
jb loc_44AEB5  +
movzx ecx byte ptr [eax+2] +
movzx esi cl +
mov [esp+80h+var_4A] cl +
mov [esp+80h+var_28] esi +
lea esi [eax+4] +
cmp ebp esi +
jb loc_44AE9E  +
movzx eax byte ptr [eax+3] +
mov [esp+80h+var_4B] al +
mov [esp+80h+var_5C] eax +
sub eax 1 +
add eax esi +
cmp ebp eax +
jbe loc_44A694  +
mov edi [esp+80h+var_5C] +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_80] eax +
call sub_407B20  +
cmp edi 1 +
mov [esp+80h+var_2C] eax +
mov ebx eax +
mov byte ptr [eax] 1 +
jbe loc_44A84E  +
add eax 1 +
add ebx edi +
mov edx esi +
lea esi [esi+0] +
add edx 1 +
xor ecx ecx +
cmp ebp edx +
jb loc_44A83D  +
movzx ecx byte ptr [edx-1] +
mov [eax] cl +
add eax 1 +
cmp eax ebx +
jnz loc_44A830  +
mov eax [esp+80h+var_5C] +
lea esi [esi+eax-1] +
cmp esi ebp +
jnb loc_44AE00  +
movzx eax byte ptr [esi] +
test al al +
jz loc_44AE27  +
test al al +
lea ebx [esi+1] +
jnz loc_44A87D  +
jmp loc_44AC41  +
add ebx 1 +
cmp byte ptr [ebx-1] 0 +
jz loc_44AC41  +
cmp ebp ebx +
nop   +
ja loc_44A870  +
sub ebx esi +
mov [esp+80h+var_14] ebx +
add ebx esi +
cmp ebp ebx +
jbe loc_44AE18  +
movzx eax byte ptr [ebx] +
test al al +
jz loc_44ADA9  +
mov edi [esp+80h+var_6C] +
lea esi [esp+80h+var_14] +
test al al +
lea edx [ebx+1] +
jnz loc_44A8BE  +
jmp loc_44ACC0  +
add edx 1 +
cmp byte ptr [edx-1] 0 +
jz loc_44ACC0  +
cmp ebp edx +
ja loc_44A8B1  +
mov edi edx +
sub edi ebx +
mov [esp+80h+var_14] edi +
add edi ebx +
cmp ebp edi +
jbe loc_44B0DC  +
mov eax [esp+80h+var_5C] +
mov [esp+80h+var_48] 0FFh +
sub [esp+80h+var_48] eax +
mov [esp+80h+var_64] ebp +
mov eax [esp+80h+var_6C] +
mov [esp+80h+var_44] 0 +
mov edx [eax+4] +
test edx edx +
jnz loc_44B027  +
mov [esp+80h+var_50] 0 +
xor esi esi +
mov [esp+80h+var_54] 0FFFFFFFFh +
mov [esp+80h+var_5C] 0 +
mov [esp+80h+var_3C] 0 +
mov [esp+80h+var_58] 1 +
mov byte ptr [esp+80h+var_60] 0 +
nop   +
lea ebx [edi+1] +
cmp [esp+80h+var_64] ebx +
jb loc_44AA0E  +
movzx ecx byte ptr [edi] +
cmp cl [esp+80h+var_4B] +
movzx ebp cl +
jb loc_44AA1C  +
sub cl [esp+80h+var_4B] +
cmp [esp+80h+var_4A] 0 +
jz loc_44ABB4  +
cmp [esp+80h+var_49] 1 +
jz loc_44ADE8  +
movzx ecx cl +
movzx edx byte ptr [esp+80h+var_60] +
mov eax ecx +
movzx edi [esp+80h+var_49] +
div  [esp+80h+var_4A] +
movzx eax al +
add eax edx +
cdq   +
idiv  edi +
imul eax [esp+80h+var_40] +
mov byte ptr [esp+80h+var_60] dl +
add esi eax +
mov eax ecx +
div  [esp+80h+var_4A] +
movzx eax ah +
add eax [esp+80h+var_38] +
add [esp+80h+var_58] eax +
mov eax [esp+80h+var_5C] +
mov edx esi +
movzx ecx byte ptr [esp+80h+var_60] +
mov [esp+80h+var_70] 0 +
mov [esp+80h+var_74] eax +
mov eax [esp+80h+var_3C] +
mov [esp+80h+var_78] eax +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_7C] eax +
mov eax [esp+80h+var_44] +
mov [esp+80h+var_80] eax +
mov eax [esp+80h+var_6C] +
call sub_449350  +
test eax eax +
jz loc_44ABB4  +
mov eax [esp+80h+var_54] +
mov edi ebx +
lea ebx [edi+1] +
mov [esp+80h+var_5C] 0 +
cmp eax esi +
cmova eax esi +
mov [esp+80h+var_54] eax +
mov eax [esp+80h+var_50] +
cmp eax esi +
cmovb eax esi +
cmp [esp+80h+var_64] ebx +
mov [esp+80h+var_50] eax +
jnb loc_44A93D  +
xor ecx ecx +
xor ebp ebp +
cmp cl [esp+80h+var_4B] +
jnb loc_44A94D  +
cmp ebp 9 +
ja loc_44AE3D  +
jmp ds:off_491990[ebp*4]  +
mov edi ebx +
nop   +
jmp loc_44A930  +
add edi 3 +
xor eax eax +
cmp [esp+80h+var_64] edi +
jnb loc_44AFFF  +
add esi eax +
mov byte ptr [esp+80h+var_60] 0 +
jmp loc_44A930  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_40FB80  +
mov edi [esp+80h+var_14] +
add edi ebx +
mov [esp+80h+var_3C] eax +
jmp loc_44A930  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_40FB80  +
mov edi [esp+80h+var_14] +
add edi ebx +
mov ebp eax +
mov eax [esp+80h+var_44] +
test eax eax +
jz loc_44AAC7  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov edx ebp +
call sub_44A3E0  +
mov [esp+80h+var_44] eax +
jmp loc_44A930  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov [esp+80h+var_74] 1 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_40FB80  +
add [esp+80h+var_58] eax +
mov edi [esp+80h+var_14] +
add edi ebx +
jmp loc_44A930  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
cmp [esp+80h+var_49] 1 +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_80] eax +
jz loc_44AFEE  +
call sub_40FB80  +
movzx edx byte ptr [esp+80h+var_60] +
movzx ecx [esp+80h+var_49] +
add eax edx +
xor edx edx +
div  ecx +
imul eax [esp+80h+var_40] +
mov byte ptr [esp+80h+var_60] dl +
mov esi eax +
jmp loc_44AB07  +
mov eax [esp+80h+var_64] +
lea ebp [esp+80h+var_14] +
mov ecx [esp+80h+var_68] +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_70] eax +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_80] ecx +
call sub_40FB80  +
add ebx [esp+80h+var_14] +
lea edi [ebx+1] +
cmp [esp+80h+var_64] edi +
jnb loc_44AEC7  +
mov [esp+80h+var_80] offset aDwarfErrorMa_0 +
call off_476094  +
mov [esp+80h+var_80] 11h +
call sub_40C770  +
mov eax [esp+80h+var_44] +
test eax eax +
jz loc_44ABC4  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_44ABD7  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov eax [eax+18h] +
test eax eax +
jz loc_44ABEA  +
mov [esp+80h+var_80] eax +
call free  +
mov eax [esp+80h+var_6C] +
mov eax [eax+14h] +
test eax eax +
jz loc_44A6AD  +
mov [esp+80h+var_80] eax +
call free  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+80h+var_49] 1 +
jz loc_44AFD7  +
mov eax [esp+80h+var_48] +
mov edi ebx +
movzx ecx byte ptr [esp+80h+var_60] +
cdq   +
idiv  [esp+80h+var_28] +
xor edx edx +
add eax ecx +
movzx ecx [esp+80h+var_49] +
div  ecx +
imul eax [esp+80h+var_40] +
mov byte ptr [esp+80h+var_60] dl +
add esi eax +
jmp loc_44A930  +
mov edi [esp+80h+var_6C] +
mov edx 0CCCCCCCDh +
sub ebx esi +
mov [esp+80h+var_14] ebx +
add ebx esi +
mov ecx [edi+8] +
mov eax ecx +
mul  edx +
shr edx 2 +
lea eax [edx+edx*4] +
cmp ecx eax +
jz loc_44AC90  +
mov eax [edi+14h] +
mov edi [esp+80h+var_6C] +
lea edx [ecx+1] +
cmp ebp ebx +
mov [edi+8] edx +
mov [eax+ecx*4] esi +
jbe loc_44AE02  +
movzx eax byte ptr [ebx] +
test al al +
jz loc_44AE29  +
mov esi ebx +
jmp loc_44A861  +
mov edi [esp+80h+var_6C] +
lea edx ds:14h[ecx*4] +
mov eax [edi+14h] +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_80] eax +
call sub_40F050  +
test eax eax +
jz loc_44ABC4  +
mov [edi+14h] eax +
mov ecx [edi+8] +
jmp loc_44AC66  +
mov ecx [edi+4] +
sub edx ebx +
lea eax [ebx+edx] +
mov [esp+80h+var_60] eax +
mov eax 0CCCCCCCDh +
mov [esp+80h+var_14] edx +
mul  ecx +
shr edx 2 +
lea eax [edx+edx*4] +
cmp ecx eax +
jz loc_44ADC0  +
mov eax [edi+18h] +
shl ecx 4 +
add ecx eax +
mov eax [esp+80h+var_68] +
mov [ecx] ebx +
mov ebx [esp+80h+var_60] +
mov [esp+80h+var_70] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_7C] ebx +
mov [esp+80h+var_80] eax +
mov [esp+80h+var_64] ecx +
call sub_40FB80  +
mov ecx [esp+80h+var_64] +
mov edx [esp+80h+var_14] +
add edx ebx +
mov ebx [edi+4] +
mov [ecx+4] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_64] edx +
shl ebx 4 +
add ebx [edi+18h] +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_70] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_80] eax +
call sub_40FB80  +
mov edx [esp+80h+var_64] +
add edx [esp+80h+var_14] +
mov [esp+80h+var_64] edx +
mov [ebx+8] eax +
mov ebx [edi+4] +
mov eax [esp+80h+var_68] +
shl ebx 4 +
add ebx [edi+18h] +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_70] ebp +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] esi +
mov [esp+80h+var_80] eax +
call sub_40FB80  +
mov edx [esp+80h+var_64] +
add edx [esp+80h+var_14] +
mov [ebx+0Ch] eax +
mov ebx edx +
add dword ptr [edi+4] 1 +
cmp ebp edx +
jbe loc_44AE18  +
movzx eax byte ptr [edx] +
test al al +
jnz loc_44A8A5  +
mov [esp+80h+var_14] 1 +
mov edi 1 +
jmp loc_44A8CA  +
mov eax [edi+18h] +
add ecx 5 +
shl ecx 4 +
mov [esp+80h+var_7C] ecx +
mov [esp+80h+var_80] eax +
call sub_40F050  +
test eax eax +
jz loc_44ABC4  +
mov [edi+18h] eax +
mov ecx [edi+4] +
jmp loc_44ACE8  +
movzx ecx cl +
mov eax ecx +
div  [esp+80h+var_4A] +
movzx eax al +
imul eax [esp+80h+var_40] +
add esi eax +
jmp loc_44A98D  +
mov ebx esi +
mov esi ebx +
xor ebx ebx +
add ebx esi +
cmp ebp ebx +
mov [esp+80h+var_14] 0 +
ja loc_44A892  +
mov [esp+80h+var_14] 0 +
xor edi edi +
jmp loc_44A8CA  +
mov ebx esi +
mov esi ebx +
mov ebx 1 +
mov [esp+80h+var_14] 1 +
jmp loc_44A888  +
add ebp [esp+80h+var_2C] +
mov edi ebx +
xor ebx ebx +
mov eax ebp +
cmp byte ptr [eax] 0 +
lea ebp [esp+80h+var_14] +
jz loc_44A930  +
mov [esp+80h+var_24] esi +
mov esi edi +
mov edi ebp +
mov ebp eax +
nop   +
mov eax [esp+80h+var_64] +
add ebx 1 +
mov [esp+80h+var_7C] esi +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] edi +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_40FB80  +
movzx eax byte ptr [ebp+0] +
add esi [esp+80h+var_14] +
cmp eax ebx +
ja loc_44AE60  +
mov edi esi +
mov esi [esp+80h+var_24] +
jmp loc_44A930  +
mov eax 0FFFFFFFFh +
mov [esp+80h+var_4B] 0 +
mov [esp+80h+var_5C] 0 +
jmp loc_44A7F9  +
mov [esp+80h+var_4A] 0 +
mov [esp+80h+var_28] 0 +
jmp loc_44A7DF  +
movzx edx byte ptr [ebx] +
cmp dl 3 +
jz loc_44AF4E  +
ja loc_44B03A  +
cmp dl 1 +
jz loc_44B055  +
cmp dl 2 +
jnz loc_44AB9B  +
mov ebx [esp+80h+var_34] +
mov ecx edi +
mov esi [esp+80h+var_64] +
mov eax [ebx+8] +
movzx edx byte ptr [ebx+58h] +
mov [esp+80h+var_80] esi +
call sub_449980  +
mov byte ptr [esp+80h+var_60] 0 +
mov esi eax +
movzx eax byte ptr [ebx+58h] +
add edi eax +
jmp loc_44A930  +
movzx ecx byte ptr [ebx+1] +
test cl cl +
mov [esp+80h+var_49] cl +
jnz loc_44A7A5  +
jmp loc_44A780  +
add edi 8 +
cmp ebp edi +
jnb loc_44B242  +
mov esi edi +
mov edi 8 +
jmp loc_44A65B  +
mov eax [esp+80h+var_30] +
mov edx esi +
call sub_449730  +
jmp loc_44A6D8  +
cmp [esp+80h+var_64] edi +
ja loc_44B1E4  +
mov [esp+80h+var_14] 0 +
xor eax eax +
xor ebx ebx +
add edi eax +
mov eax [esp+80h+var_6C] +
mov edx 0CCCCCCCDh +
mov ecx [eax+4] +
mov eax ecx +
mul  edx +
shr edx 2 +
lea eax [edx+edx*4] +
cmp ecx eax +
jnz loc_44B125  +
mov eax [esp+80h+var_6C] +
add ecx 5 +
shl ecx 4 +
mov eax [eax+18h] +
mov [esp+80h+var_7C] ecx +
mov [esp+80h+var_80] eax +
call sub_40F050  +
test eax eax +
jz loc_44ABB4  +
mov ecx [esp+80h+var_6C] +
mov [ecx+18h] eax +
mov ecx [ecx+4] +
jmp loc_44B12C  +
add esi 6 +
cmp ebp esi +
jb loc_44A757  +
mov eax [esp+80h+var_30] +
mov edx ebx +
mov [esp+80h+var_64] ecx +
call sub_449710  +
mov ecx [esp+80h+var_64] +
jmp loc_44A757  +
mov eax [esp+80h+var_48] +
mov edi ebx +
cdq   +
idiv  [esp+80h+var_28] +
imul eax [esp+80h+var_40] +
add esi eax +
jmp loc_44A930  +
call sub_40FB80  +
imul eax [esp+80h+var_40] +
add esi eax +
jmp loc_44AB07  +
mov eax [esp+80h+var_30] +
mov edx ebx +
call sub_4496F0  +
jmp loc_44AA44  +
mov eax [esp+80h+var_30] +
mov edx ebx +
mov [esp+80h+var_64] ecx +
call sub_449730  +
mov ecx [esp+80h+var_64] +
jmp loc_44A757  +
mov edx 1 +
call sub_44A3E0  +
mov [esp+80h+var_44] eax +
jmp loc_44A8FF  +
cmp dl 4 +
jz loc_44B0F4  +
cmp dl 80h +
jnz loc_44AB9B  +
lea edi [edi+eax-1] +
jmp loc_44A930  +
mov eax [esp+80h+var_5C] +
mov edx esi +
movzx ecx byte ptr [esp+80h+var_60] +
mov [esp+80h+var_70] 1 +
mov [esp+80h+var_74] eax +
mov eax [esp+80h+var_3C] +
mov [esp+80h+var_78] eax +
mov eax [esp+80h+var_58] +
mov [esp+80h+var_7C] eax +
mov eax [esp+80h+var_44] +
mov [esp+80h+var_80] eax +
mov eax [esp+80h+var_6C] +
call sub_449350  +
test eax eax +
jz loc_44ABB4  +
mov eax [esp+80h+var_34] +
mov ecx [esp+80h+var_54] +
lea edx [eax+0Ch] +
lea ebx [eax+8] +
mov eax [esp+80h+var_50] +
cmp ecx esi +
cmova ecx esi +
cmp eax esi +
cmovb eax esi +
mov [esp+80h+var_80] eax +
mov eax ebx +
call sub_4498C0  +
test eax eax +
jz loc_44ABB4  +
mov eax [esp+80h+var_44] +
test eax eax +
jz loc_44B0D2  +
mov [esp+80h+var_80] eax +
call free  +
cmp [esp+80h+var_64] edi +
ja loc_44A8E8  +
mov eax [esp+80h+var_6C] +
mov esi [eax+0Ch] +
test esi esi +
jnz loc_44B29E  +
mov eax [esp+80h+var_6C] +
jmp loc_44A68C  +
mov eax [esp+80h+var_64] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_70] eax +
mov eax [esp+80h+var_68] +
mov [esp+80h+var_80] eax +
call sub_40FB80  +
add edi [esp+80h+var_14] +
mov [esp+80h+var_5C] eax +
jmp loc_44A930  +
mov eax [esp+80h+var_6C] +
mov eax [eax+18h] +
shl ecx 4 +
lea edx [eax+ecx] +
mov eax [esp+80h+var_64] +
mov [edx] ebx +
mov [esp+80h+var_24] edx +
mov edx [esp+80h+var_68] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_70] eax +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_80] edx +
mov [esp+80h+var_78] ebp +
call sub_40FB80  +
mov edx [esp+80h+var_24] +
mov ecx [esp+80h+var_64] +
add edi [esp+80h+var_14] +
mov [edx+4] eax +
mov eax [esp+80h+var_6C] +
mov edx [esp+80h+var_68] +
mov ebx [eax+4] +
shl ebx 4 +
add ebx [eax+18h] +
mov [esp+80h+var_70] ecx +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_80] edx +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
call sub_40FB80  +
mov ecx [esp+80h+var_64] +
mov edx [esp+80h+var_68] +
add edi [esp+80h+var_14] +
mov [ebx+8] eax +
mov eax [esp+80h+var_6C] +
mov ebx [eax+4] +
shl ebx 4 +
add ebx [eax+18h] +
mov [esp+80h+var_7C] edi +
mov [esp+80h+var_70] ecx +
mov [esp+80h+var_74] 0 +
mov [esp+80h+var_78] ebp +
mov [esp+80h+var_80] edx +
call sub_40FB80  +
add edi [esp+80h+var_14] +
mov [ebx+0Ch] eax +
mov eax [esp+80h+var_6C] +
add dword ptr [eax+4] 1 +
jmp loc_44A930  +
cmp byte ptr [ebx+1] 0 +
jnz loc_44B252  +
mov [esp+80h+var_14] 1 +
mov eax 1 +
xor ebx ebx +
jmp loc_44AF64  +
mov [esp+80h+var_7C] eax +
mov [esp+80h+var_80] offset aDwarfErrorLi_0 +
call off_476094  +
mov [esp+80h+var_80] 11h +
call sub_40C770  +
xor eax eax +
jmp loc_44A68C  +
mov [esp+80h+var_80] offset aDwarfErrorRa_0 +
call off_476094  +
mov [esp+80h+var_80] 11h +
call sub_40C770  +
xor eax eax +
jmp loc_44A68C  +
mov eax [esp+80h+var_30] +
mov edx esi +
call sub_449710  +
jmp loc_44A6D8  +
add ebx 2 +
jmp loc_44B260  +
add ebx 1 +
cmp byte ptr [ebx-1] 0 +
jz loc_44B275  +
cmp [esp+80h+var_64] ebx +
ja loc_44B257  +
mov eax ebx +
xor ebx ebx +
sub eax edi +
mov [esp+80h+var_14] eax +
jmp loc_44AF64  +
mov eax ebx +
mov ebx edi +
sub eax edi +
mov [esp+80h+var_14] eax +
jmp loc_44AF64  +
movzx eax cx +
jmp loc_44A66D  +
test eax eax +
jz loc_44A648  +
mov edi 4 +
jmp loc_44A6DF  +
mov edi eax +
mov eax [eax] +
lea edx [esi+esi*2] +
shl edx 2 +
mov [esp+80h+var_7C] edx +
mov [esp+80h+var_80] eax +
call sub_407B20  +
test eax eax +
mov ebx eax +
jz loc_44ABC4  +
mov eax [edi+1Ch] +
mov ebp ebx +
xor edi edi +
jmp loc_44B2F8  +
mov edx [eax] +
add edi 1 +
add ebp 0Ch +
mov dword ptr [ebp-8] 0 +
mov [ebp-0Ch] edx +
mov edx [eax+8] +
mov [ebp-4] edx +
mov edx [eax+4] +
mov [esp+80h+var_80] eax +
mov [esp+80h+var_68] edx +
call free  +
cmp edi esi +
mov edx [esp+80h+var_68] +
jz loc_44B31A  +
mov eax edx +
test eax eax +
jnz loc_44B2C7  +
mov [esp+80h+var_7C] 648h +
mov [esp+80h+var_80] offset a____Binutil_24 +
mov [esp+80h+var_68] eax +
call sub_40C6C0  +
mov eax [esp+80h+var_68] +
jmp loc_44B2C7  +
test edx edx +
jz loc_44B332  +
mov [esp+80h+var_7C] 64Fh +
mov [esp+80h+var_80] offset a____Binutil_24 +
call sub_40C6C0  +
mov [esp+80h+var_74] offset sub_449750 +
mov [esp+80h+var_78] 0Ch +
mov [esp+80h+var_7C] esi +
mov [esp+80h+var_80] ebx +
call qsort  +
mov eax [ebx+8] +
mov ecx [eax+4] +
mov eax [esp+80h+var_6C] +
mov eax [eax+0Ch] +
cmp eax 1 +
mov [esp+80h+var_64] eax +
jbe loc_44B3B2  +
mov eax ebx +
mov edx 1 +
mov ebp 1 +
mov [esp+80h+var_68] ebx +
cmp [eax+0Ch] ecx +
mov esi [eax+14h] +
jnb loc_44B384  +
cmp [esi+4] ecx +
jbe loc_44B3A0  +
mov [eax+0Ch] ecx +
cmp edx ebp +
mov ecx [esi+4] +
jnb loc_44B39D  +
mov ebx [esp+80h+var_68] +
lea edi [edx+edx*2] +
lea edi [ebx+edi*4] +
mov ebx [eax+0Ch] +
mov [edi+8] esi +
mov [edi] ebx +
add edx 1 +
add ebp 1 +
add eax 0Ch +
cmp ebp [esp+80h+var_64] +
jnz loc_44B374  +
mov ebx [esp+80h+var_68] +
jmp loc_44B3B7  +
mov edx 1 +
mov eax [esp+80h+var_6C] +
mov [eax+1Ch] ebx +
mov [eax+0Ch] edx +
jmp loc_44B0EB  +
***
push edi  +
push esi  +
push ebx  +
sub esp 7Ch +
mov edi [eax+8] +
mov ebp [eax+3Ch] +
mov [esp+7Ch+var_64] eax +
mov [esp+7Ch+var_50] edi +
mov edi eax +
mov eax [eax+50h] +
mov eax [eax+10h] +
mov [esp+7Ch+var_7C] 80h +
mov esi eax +
mov [esp+7Ch+var_60] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_44BDD7  +
cmp ebp esi +
mov dword ptr [eax+4] 0 +
jnb loc_44B7F8  +
mov eax edi +
add eax 8 +
mov [esp+7Ch+var_38] 20h +
mov [esp+7Ch+var_54] 1 +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+var_60] +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_70] 0 +
mov [esp+7Ch+var_6C] eax +
lea eax [esp+7Ch+var_20] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_7C] eax +
call sub_40FB80  +
add ebp [esp+7Ch+var_20] +
test eax eax +
mov ecx eax +
jnz loc_44B810  +
sub [esp+7Ch+var_54] 1 +
mov eax [esp+7Ch+var_54] +
test eax eax +
jz loc_44BE15  +
cmp ebp [esp+7Ch+var_60] +
jb loc_44B7AF  +
mov eax [esp+7Ch+var_44] +
mov [esp+7Ch+var_7C] eax +
call free  +
xor eax eax +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx 0ECF56BFh +
mul  edx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add edx eax +
mov eax ecx +
shr edx 6 +
imul edx edx +
sub eax edx +
mov edx eax +
mov eax [esp+7Ch+var_64] +
mov eax [eax+1Ch] +
mov ebx [eax+edx*4] +
test ebx ebx +
jnz loc_44B84B  +
jmp loc_44BC20  +
mov ebx [ebx+14h] +
test ebx ebx +
jz loc_44BC20  +
cmp ecx [ebx] +
lea esi [esi+0] +
jnz loc_44B840  +
mov eax [ebx+4] +
cmp eax 2Eh +
jz loc_44B9F5  +
cmp eax 3 +
jz loc_44B9F5  +
cmp eax 1Dh +
jz loc_44B9F5  +
cmp eax 34h +
mov [esp+7Ch+var_5C] 0 +
jz loc_44BD7B  +
mov edi [esp+7Ch+var_54] +
mov eax [esp+7Ch+var_44] +
mov dword ptr [eax+edi*4] 0 +
xor edi edi +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_44B9C3  +
lea eax [edi+1Ch] +
xor esi esi +
mov [esp+7Ch+var_40] eax +
lea eax [edi+24h] +
mov [esp+7Ch+var_48] 0 +
mov [esp+7Ch+var_4C] 0 +
mov [esp+7Ch+var_58] 0 +
mov [esp+7Ch+var_3C] eax +
jmp loc_44B8FC  +
cmp eax 12h +
jz loc_44BB65  +
ja loc_44BA96  +
cmp eax 3 +
jz loc_44BB10  +
cmp eax 11h +
mov eax [esp+7Ch+var_58] +
cmovz eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_58] eax +
nop   +
add esi 1 +
cmp [ebx+0Ch] esi +
jbe loc_44B982  +
mov eax [ebx+10h] +
mov ecx [esp+7Ch+var_64] +
lea eax [eax+esi*8] +
mov edx [eax] +
mov [esp+7Ch+var_1C] edx +
mov edx [eax+4] +
mov eax [esp+7Ch+var_60] +
mov [esp+7Ch+var_7C] ebp +
mov [esp+7Ch+var_78] eax +
lea eax [esp+7Ch+var_1C] +
call sub_449BA0  +
test eax eax +
mov ebp eax +
jz loc_44B7F8  +
test edi edi +
jz loc_44BA51  +
mov eax [esp+7Ch+var_1C] +
cmp eax 3Bh +
jz loc_44BB00  +
jbe loc_44B8C7  +
cmp eax 58h +
jz loc_44BBB3  +
lea esi [esi+0] +
jbe loc_44BAC0  +
cmp eax 6Eh +
jz loc_44BB80  +
cmp eax 2007h +
jz loc_44BB80  +
cmp eax 59h +
jnz loc_44B8F0  +
mov eax [esp+7Ch+var_14] +
add esi 1 +
cmp [ebx+0Ch] esi +
mov [edi+10h] eax +
ja loc_44B8FC  +
mov esi [esp+7Ch+var_48] +
test esi esi +
jz loc_44BD10  +
mov eax [esp+7Ch+var_58] +
add [esp+7Ch+var_4C] eax +
setnz al  +
test edi edi +
setnz dl  +
and eax edx +
test al al +
jz loc_44B9C3  +
mov eax [esp+7Ch+var_4C] +
lea edx [edi+24h] +
mov ecx [esp+7Ch+var_58] +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+var_34] +
call sub_4498C0  +
test eax eax +
jz loc_44B7F8  +
mov edx [ebx+8] +
test edx edx +
jz loc_44B7E6  +
add [esp+7Ch+var_54] 1 +
mov eax [esp+7Ch+var_38] +
cmp [esp+7Ch+var_54] eax +
jge loc_44BDE1  +
mov eax [esp+7Ch+var_44] +
mov edi [esp+7Ch+var_54] +
mov dword ptr [eax+edi*4] 0 +
jmp loc_44B7E6  +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_78] 34h +
mov [esp+7Ch+var_7C] eax +
call sub_407C00  +
test eax eax +
mov edi eax +
jz loc_44B7F8  +
mov ecx [esp+7Ch+var_64] +
mov eax [ebx+4] +
mov edx [ecx+48h] +
mov [edi+18h] eax +
mov [edi] edx +
mov edx [ecx+60h] +
mov [ecx+48h] edi +
test edx edx +
jnz loc_44BD25  +
cmp eax 1Dh +
jz loc_44BD45  +
mov eax [esp+7Ch+var_44] +
mov ecx [esp+7Ch+var_54] +
mov [esp+7Ch+var_5C] 0 +
mov [eax+ecx*4] edi +
jmp loc_44B892  +
mov eax [esp+7Ch+var_5C] +
test eax eax +
jz loc_44B8F0  +
mov eax [esp+7Ch+var_1C] +
cmp eax 3Ah +
jz loc_44BC42  +
ja loc_44BBF0  +
cmp eax 2 +
jz loc_44BC60  +
cmp eax 3 +
lea esi [esi+0] +
jnz loc_44B8F0  +
mov eax [esp+7Ch+var_14] +
mov ecx [esp+7Ch+var_5C] +
mov [ecx+10h] eax +
jmp loc_44B8F0  +
cmp eax 31h +
jz loc_44BBD0  +
cmp eax 3Ah +
jnz loc_44B8F0  +
mov eax [esp+7Ch+var_64] +
mov edx [esp+7Ch+var_14] +
mov eax [eax+44h] +
call sub_44A3E0  +
mov [edi+0Ch] eax +
jmp loc_44B8F0  +
cmp eax 47h +
jz loc_44BBD0  +
cmp eax 55h +
jnz loc_44B8F0  +
mov eax [esp+7Ch+var_14] +
mov edx [esp+7Ch+var_10] +
mov [esp+7Ch+var_7C] eax +
mov eax [esp+7Ch+var_64] +
mov [esp+7Ch+var_78] edx +
mov edx [esp+7Ch+var_3C] +
call sub_449A80  +
test eax eax +
jnz loc_44B8F0  +
jmp loc_44B7F8  +
mov eax [esp+7Ch+var_14] +
mov [edi+14h] eax +
jmp loc_44B8F0  +
mov eax [edi+20h] +
test eax eax +
jnz loc_44B8F0  +
mov eax [esp+7Ch+var_18] +
cmp eax 8 +
jz loc_44BB34  +
cmp eax 0Eh +
jz loc_44BB34  +
cmp eax 1F21h +
jnz loc_44B8F0  +
mov eax [esp+7Ch+var_14] +
mov [edi+20h] eax +
mov eax [esp+7Ch+var_64] +
mov eax [eax+20h] +
lea ecx [eax-1] +
cmp ecx 1Ch +
mov [esp+7Ch+var_30] eax +
ja loc_44B8F0  +
mov eax 1 +
shl eax cl +
test eax 10025977h +
jnz loc_44BBA7  +
jmp loc_44B8F0  +
mov eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_4C] eax +
xor eax eax +
cmp [esp+7Ch+var_18] 1 +
setnz al  +
mov [esp+7Ch+var_48] eax +
jmp loc_44B8F0  +
mov eax [esp+7Ch+var_18] +
cmp eax 8 +
jz loc_44BBA0  +
cmp eax 0Eh +
jz loc_44BBA0  +
cmp eax 1F21h +
jnz loc_44B8F0  +
lea esi [esi+0] +
mov eax [esp+7Ch+var_14] +
mov [edi+20h] eax +
mov dword ptr [edi+1Ch] 1 +
jmp loc_44B8F0  +
mov eax [esp+7Ch+var_64] +
mov edx [esp+7Ch+var_14] +
mov eax [eax+44h] +
call sub_44A3E0  +
mov [edi+8] eax +
jmp loc_44B8F0  +
mov ecx [esp+7Ch+var_40] +
lea edx [esp+7Ch+var_1C] +
mov eax [esp+7Ch+var_64] +
call sub_44B3D0  +
mov [edi+20h] eax +
jmp loc_44B8F0  +
cmp eax 3Bh +
jz loc_44BD00  +
cmp eax 3Fh +
jnz loc_44B8F0  +
mov eax [esp+7Ch+var_10] +
or eax [esp+7Ch+var_14] +
jz loc_44B8F0  +
mov eax [esp+7Ch+var_5C] +
and byte ptr [eax+1Ch] 0FEh +
jmp loc_44B8F0  +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] offset aDwarfErrorCoul +
call off_476094  +
mov [esp+7Ch+var_7C] 11h +
call sub_40C770  +
jmp loc_44B7F8  +
mov eax [esp+7Ch+var_64] +
mov edx [esp+7Ch+var_14] +
mov eax [eax+44h] +
call sub_44A3E0  +
mov ecx [esp+7Ch+var_5C] +
mov [ecx+4] eax +
jmp loc_44B8F0  +
mov eax [esp+7Ch+var_18] +
lea ecx [eax-3] +
cmp ecx 15h +
ja loc_44B8F0  +
mov eax 1 +
shl eax cl +
test eax 2000C3h +
jz loc_44B8F0  +
mov eax [esp+7Ch+var_14] +
mov ecx [eax+4] +
cmp byte ptr [ecx] 3 +
jnz loc_44B8F0  +
mov edx [esp+7Ch+var_5C] +
mov [esp+7Ch+var_30] ecx +
and byte ptr [edx+1Ch] 0FEh +
mov edx [esp+7Ch+var_64] +
movzx edx byte ptr [edx+58h] +
lea ecx [edx+1] +
cmp [eax] ecx +
mov ecx [esp+7Ch+var_30] +
jnz loc_44B8F0  +
shl edx 3 +
cmp edx 8 +
jz loc_44BE2B  +
cmp edx 10h +
jz loc_44BE34  +
cmp edx 20h +
jz loc_44BE6A  +
cmp edx 40h +
jnz loc_44BE4E  +
mov eax [esp+7Ch+var_64] +
lea edx [ecx+1] +
mov eax [eax+8] +
mov eax [eax+4] +
mov eax [eax+1Ch] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov ecx [esp+7Ch+var_5C] +
mov [ecx+14h] eax +
jmp loc_44B8F0  +
mov eax [esp+7Ch+var_14] +
mov ecx [esp+7Ch+var_5C] +
mov [ecx+8] eax +
jmp loc_44B8F0  +
mov ecx [esp+7Ch+var_4C] +
test ecx ecx +
setnz al  +
test edi edi +
setnz dl  +
and eax edx +
jmp loc_44B9A0  +
mov [esp+7Ch+var_78] 9D4h +
mov [esp+7Ch+var_7C] offset a____Binutil_24 +
call sub_40C6C0  +
mov eax [edi+18h] +
cmp eax 1Dh +
jnz loc_44BA39  +
mov eax [esp+7Ch+var_54] +
sub eax 1 +
jz loc_44BA39  +
mov ecx [esp+7Ch+var_44] +
mov edx [ecx+eax*4] +
mov ecx [esp+7Ch+var_44] +
test edx edx +
jz loc_44BD71  +
jmp loc_44BE0D  +
mov edx [ecx+eax*4] +
test edx edx +
jnz loc_44BE0D  +
sub eax 1 +
jnz loc_44BD66  +
jmp loc_44BA39  +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_78] 20h +
mov [esp+7Ch+var_7C] eax +
call sub_407C00  +
test eax eax +
mov edi eax +
mov [esp+7Ch+var_5C] eax +
jz loc_44B7F8  +
mov eax [ebx+4] +
mov ecx [esp+7Ch+var_64] +
or byte ptr [edi+1Ch] 1 +
mov [edi+0Ch] eax +
mov eax [ecx+4Ch] +
mov [edi] eax +
mov eax [ecx+60h] +
mov [ecx+4Ch] edi +
test eax eax +
jz loc_44B881  +
mov [esp+7Ch+var_78] 9ECh +
mov [esp+7Ch+var_7C] offset a____Binutil_24 +
call sub_40C6C0  +
jmp loc_44B881  +
add esp 7Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shl [esp+7Ch+var_38] 1 +
mov eax [esp+7Ch+var_38] +
shl eax 2 +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+var_44] +
mov [esp+7Ch+var_7C] eax +
call sub_40F050  +
test eax eax +
jz loc_44B7F8  +
mov [esp+7Ch+var_44] eax +
jmp loc_44B9E1  +
mov [edi+4] edx +
jmp loc_44BA39  +
mov eax [esp+7Ch+var_44] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax 1 +
jmp loc_44B806  +
movzx eax byte ptr [ecx+1] +
jmp loc_44BCF1  +
mov eax [esp+7Ch+var_64] +
lea edx [ecx+1] +
mov eax [eax+8] +
mov eax [eax+4] +
mov eax [eax+34h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
jmp loc_44BCF1  +
mov [esp+7Ch+var_74] offset aScan_unit_for_ +
mov [esp+7Ch+var_78] 0A68h +
mov [esp+7Ch+var_7C] offset a____Binutil_24 +
call sub_40C6F0  +
mov eax [esp+7Ch+var_64] +
lea edx [ecx+1] +
mov eax [eax+8] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
jmp loc_44BCF1  +
***
sub esp 8 +
mov eax [eax+24h] +
test eax eax +
jnz loc_44BEB0  +
mov ecx [ebx+44h] +
test ecx ecx +
jz loc_44BEB7  +
mov eax 1 +
add esp 8 +
pop ebx  +
retn   +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
mov eax [ebx+2Ch] +
test eax eax +
jnz loc_44BED0  +
mov dword ptr [ebx+24h] 1 +
xor eax eax +
jmp loc_44BEA9  +
mov eax ebx +
call sub_44A570  +
test eax eax +
mov [ebx+44h] eax +
jz loc_44BF03  +
mov eax [ebx+40h] +
cmp [ebx+3Ch] eax +
jnb loc_44BEA4  +
mov eax ebx +
call sub_44B750  +
mov edx eax +
mov eax 1 +
test edx edx +
jnz loc_44BEA9  +
mov dword ptr [ebx+24h] 1 +
xor al al +
jmp loc_44BEA9  +
mov dword ptr [ebx+24h] 1 +
jmp loc_44BEA9  +
***
push esi  +
mov esi eax +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov edx [esp+30h+arg_8] +
mov [esp+30h+var_28] ecx +
call sub_44BE90  +
test eax eax +
jz loc_44BFA7  +
test byte ptr [ebx+0Ch] 8 +
mov ecx [esp+30h+var_28] +
jnz loc_44BFB1  +
mov esi [esi+4Ch] +
mov edi [ebx+4] +
mov ebp [ebx+10h] +
test esi esi +
jz loc_44BFA7  +
mov [esp+30h+var_28] edi +
mov edi ecx +
jmp loc_44BF56  +
mov esi [esi] +
test esi esi +
jz loc_44BFA7  +
test byte ptr [esi+1Ch] 1 +
jnz loc_44BF50  +
mov ebx [esi+4] +
test ebx ebx +
jz loc_44BF50  +
mov eax [esi+10h] +
test eax eax +
jz loc_44BF50  +
cmp edi [esi+14h] +
jnz loc_44BF50  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_44BF7A  +
cmp ebp ecx +
jnz loc_44BF50  +
mov [esp+30h+var_2C] eax +
mov eax [esp+30h+var_28] +
mov [esp+30h+var_30] eax +
call strcmp  +
test eax eax +
jnz loc_44BF50  +
mov eax [esp+30h+arg_0] +
mov [esi+18h] ebp +
mov ecx [esp+30h+arg_4] +
mov [eax] ebx +
mov eax [esi+8] +
mov [ecx] eax +
mov eax 1 +
jmp loc_44BFA9  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+48h] +
mov eax [ebx+4] +
mov edi [ebx+10h] +
test ebp ebp +
mov [esp+30h+var_1C] eax +
jz loc_44BFA7  +
mov [esp+30h+var_14] 0 +
mov edx ebp +
mov [esp+30h+var_18] 0 +
lea ebx [edx+24h] +
mov esi [edx+30h] +
mov [esp+30h+var_28] edx +
jmp loc_44BFEA  +
cmp edi esi +
jz loc_44BFEE  +
mov ebx [ebx] +
test ebx ebx +
jz loc_44C050  +
test esi esi +
jnz loc_44BFE0  +
mov ebp [ebx+4] +
cmp ecx ebp +
jb loc_44BFE4  +
mov edx [ebx+8] +
cmp ecx edx +
jnb loc_44BFE4  +
mov eax [esp+30h+var_28] +
mov [esp+30h+var_24] edx +
mov eax [eax+20h] +
test eax eax +
jz loc_44BFE4  +
mov [esp+30h+var_2C] eax +
mov eax [esp+30h+var_1C] +
mov [esp+30h+var_20] ecx +
mov [esp+30h+var_30] eax +
call strcmp  +
mov ecx [esp+30h+var_20] +
mov edx [esp+30h+var_24] +
test eax eax +
jnz loc_44BFE4  +
mov eax [esp+30h+var_18] +
sub edx ebp +
test eax eax +
jz loc_44C03B  +
cmp edx [esp+30h+var_14] +
jnb loc_44BFE4  +
mov ebx [ebx] +
mov eax [esp+30h+var_28] +
mov [esp+30h+var_14] edx +
test ebx ebx +
mov [esp+30h+var_18] eax +
jnz loc_44BFEA  +
lea esi [esi+0] +
mov edx [esp+30h+var_28] +
mov edx [edx] +
test edx edx +
jnz loc_44BFD4  +
mov edx [esp+30h+var_18] +
test edx edx +
jz loc_44BFA7  +
mov eax [edx+0Ch] +
mov ecx [esp+30h+arg_0] +
mov [edx+30h] edi +
mov [ecx] eax +
mov eax [edx+14h] +
mov edx [esp+30h+arg_4] +
mov [edx] eax +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [eax+24h] +
mov [esp+1Ch+var_14] eax +
mov [esp+1Ch+var_10] ecx +
test edi edi +
jnz loc_44C172  +
mov esi [eax+44h] +
mov ebx edx +
test esi esi +
jz loc_44C164  +
mov eax [esp+1Ch+arg_0] +
xor ebp ebp +
xor edi edi +
mov dword ptr [eax] 0 +
mov eax [esp+1Ch+var_14] +
mov esi [eax+48h] +
test esi esi +
jz loc_44C110  +
lea eax [esi+24h] +
mov edx [eax+4] +
cmp ebx edx +
jb loc_44C0F0  +
mov ecx [eax+8] +
cmp ebx ecx +
jnb loc_44C0F0  +
sub ecx edx +
test edi edi +
jz loc_44C0EB  +
cmp ecx ebp +
jnb loc_44C0F0  +
mov ebp ecx +
mov edi esi +
nop   +
mov eax [eax] +
test eax eax +
jnz loc_44C0D3  +
mov esi [esi] +
test esi esi +
jnz loc_44C0D0  +
test edi edi +
jz loc_44C110  +
mov eax [esp+1Ch+arg_0] +
cmp dword ptr [edi+18h] 1Dh +
mov [eax] edi +
jz loc_44C1D0  +
mov eax [esp+1Ch+var_14] +
mov eax [eax+44h] +
mov edx [eax+0Ch] +
test edx edx +
jle loc_44C150  +
mov ebp [eax+1Ch] +
xor ecx ecx +
jmp loc_44C134  +
mov ecx [esi+8] +
cmp ebx [ecx+4] +
jb loc_44C184  +
lea ecx [eax+1] +
cmp ecx edx +
jge loc_44C14C  +
lea eax [ecx+edx] +
sar eax 1 +
lea esi [eax+eax*2] +
lea esi [ebp+esi*4+0] +
mov edi [esi] +
cmp ebx edi +
jnb loc_44C125  +
mov edx eax +
cmp ecx edx +
jl loc_44C134  +
cmp ebx edi +
jnb loc_44C17C  +
mov eax [esp+1Ch+var_10] +
mov dword ptr [eax] 0 +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [eax+2Ch] +
test ecx ecx +
jnz loc_44C195  +
mov dword ptr [eax+24h] 1 +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esi+8] +
cmp [ecx+4] ebx +
jbe loc_44C150  +
mov eax ecx +
jmp loc_44C18D  +
cmp ebx [eax+4] +
jnb loc_44C1DC  +
mov eax [eax] +
test eax eax +
jnz loc_44C188  +
jmp loc_44C150  +
mov edi [esp+1Ch+var_14] +
mov edx [esp+1Ch+arg_C] +
mov eax edi +
call sub_44A570  +
test eax eax +
mov [edi+44h] eax +
mov eax [esp+1Ch+var_14] +
jz loc_44C16B  +
mov edi [eax+40h] +
cmp [eax+3Ch] edi +
jnb loc_44C0B7  +
call sub_44B750  +
test eax eax +
jnz loc_44C0B7  +
mov eax [esp+1Ch+var_14] +
jmp loc_44C16B  +
mov eax [esp+1Ch+arg_C] +
mov [eax+5Ch] edi +
jmp loc_44C110  +
cmp byte ptr [eax+19h] 0 +
jnz loc_44C150  +
cmp ecx eax +
jz loc_44C150  +
mov edx [eax+8] +
mov ebx [esp+1Ch+var_10] +
mov ecx [eax+0Ch] +
mov [ebx] edx +
mov edx [esp+1Ch+arg_4] +
mov [edx] ecx +
mov edx [esp+1Ch+arg_8] +
test edx edx +
jz loc_44C211  +
mov eax [eax+14h] +
mov ebx [esp+1Ch+arg_8] +
mov [ebx] eax +
mov eax [esi+8] +
mov eax [eax+4] +
sub eax edi +
jmp loc_44C174  +
***
push esi  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [eax] +
mov eax [eax+78h] +
cmp edx eax +
jz loc_44C469  +
test eax eax +
jz loc_44C461  +
mov esi [eax+4] +
test esi esi +
jz loc_44C3CE  +
lea esi [esi+0] +
mov eax [ebp+74h] +
cmp dword ptr [ebp+7Ch] 2 +
mov edi [ebp+70h] +
mov [esp+28h+var_1C] eax +
jz loc_44C426  +
mov edx ebp +
mov eax esi +
call sub_44BE90  +
test eax eax +
jz loc_44C450  +
mov ecx [esi+60h] +
test ecx ecx +
jnz loc_44C3E0  +
mov ebx [esi+48h] +
test ebx ebx +
jz loc_44C3FF  +
xor edx edx +
jmp loc_44C2F4  +
mov edx ebx +
mov ebx eax +
mov eax [ebx] +
mov [ebx] edx +
test eax eax +
jnz loc_44C2F0  +
mov [esi+48h] ebx +
mov eax 1 +
jmp loc_44C30A  +
test ebx ebx +
jz loc_44C320  +
mov edx [ebx+20h] +
test edx edx +
jz loc_44C31A  +
mov ecx ebx +
mov eax edi +
call sub_44C220  +
test eax eax +
mov ebx [ebx] +
jnz loc_44C306  +
mov edx [esi+48h] +
test edx edx +
jz loc_44C33C  +
xor ebx ebx +
jmp loc_44C334  +
mov ebx edx +
mov edx ecx +
mov ecx [edx] +
mov [edx] ebx +
test ecx ecx +
jnz loc_44C330  +
test eax eax +
mov [esi+48h] edx +
jz loc_44C450  +
mov ebx [esi+4Ch] +
test ebx ebx +
jz loc_44C416  +
xor ecx ecx +
jmp loc_44C35A  +
mov ecx ebx +
mov ebx edx +
mov edx [ebx] +
mov [ebx] ecx +
test edx edx +
jnz loc_44C356  +
mov [esi+4Ch] ebx +
mov edi [esp+28h+var_1C] +
jmp loc_44C374  +
test ebx ebx +
jz loc_44C397  +
test byte ptr [ebx+1Ch] 1 +
jnz loc_44C391  +
mov edx [ebx+4] +
test edx edx +
jz loc_44C391  +
mov edx [ebx+10h] +
test edx edx +
jz loc_44C391  +
mov ecx ebx +
mov eax edi +
call sub_44C220  +
test eax eax +
mov ebx [ebx] +
jnz loc_44C370  +
mov edx [esi+4Ch] +
test edx edx +
jz loc_44C3AE  +
xor ebx ebx +
jmp loc_44C3A6  +
mov ebx edx +
mov edx ecx +
mov ecx [edx] +
mov [edx] ebx +
test ecx ecx +
jnz loc_44C3A2  +
test eax eax +
mov [esi+4Ch] edx +
mov dword ptr [esi+60h] 1 +
jz loc_44C450  +
mov esi [esi+4] +
test esi esi +
jnz loc_44C2B0  +
mov edx [ebp+0] +
mov [ebp+78h] edx +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_24] 0C23h +
mov [esp+28h+var_28] offset a____Binutil_24 +
call sub_40C6C0  +
mov ebx [esi+48h] +
test ebx ebx +
jnz loc_44C2EB  +
mov ebx [esi+4Ch] +
mov eax 1 +
mov dword ptr [esi+48h] 0 +
test ebx ebx +
jnz loc_44C352  +
mov dword ptr [esi+4Ch] 0 +
mov dword ptr [esi+60h] 1 +
jmp loc_44C3C0  +
mov [esp+28h+var_24] 0C1Eh +
mov [esp+28h+var_28] offset a____Binutil_24 +
call sub_40C6C0  +
mov edx ebp +
mov eax esi +
call sub_44BE90  +
test eax eax +
jnz loc_44C2D5  +
nop   +
lea esi [esi+0] +
mov dword ptr [ebp+7Ch] 2 +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+4] +
jmp loc_44C2A1  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+44h] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch] eax +
jz loc_44C527  +
mov eax [esp+1Ch] +
mov eax [eax] +
test eax eax +
mov [esp+18h] eax +
jz loc_44C527  +
mov eax [esp+18h] +
mov esi [eax+48h] +
test esi esi +
jz loc_44C543  +
mov [esp+10h] esi +
nop   +
mov eax [esp+10h] +
mov edi [eax+20h] +
test edi edi +
jz loc_44C50B  +
mov eax [eax+28h] +
test eax eax +
mov [esp+14h] eax +
jz loc_44C50B  +
mov eax [esp+40h] +
mov ebx [eax] +
test ebx ebx +
jz loc_44C50B  +
mov esi eax +
test byte ptr [ebx+0Ch] 8 +
jz loc_44C502  +
mov ebp [ebx+10h] +
test ebp ebp +
jz loc_44C502  +
mov [esp+4] edi +
mov eax [ebx+4] +
mov [esp] eax +
call strcmp  +
test eax eax +
jz loc_44C531  +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jnz loc_44C4E2  +
mov eax [esp+10h] +
mov eax [eax] +
test eax eax +
mov [esp+10h] eax +
jnz loc_44C4C0  +
mov eax [esp+18h] +
mov eax [eax] +
test eax eax +
mov [esp+18h] eax +
jnz loc_44C4AB  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+14h] +
sub eax [ebp+1Ch] +
sub eax [ebx+8] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [eax+44h] +
test eax eax +
jz loc_44C564  +
mov eax [esp+18h] +
call sub_44B750  +
mov eax [esp+18h] +
mov esi [eax+48h] +
test esi esi +
jnz loc_44C4BA  +
jmp loc_44C519  +
***
mov edi [esp+18h] +
mov edx [esp+1Ch] +
mov eax edi +
call sub_44A570  +
test eax eax +
mov [edi+44h] eax +
jz loc_44C553  +
jmp loc_44C54A  +
***
mov edx [eax] +
test edx edx +
jz loc_44C5C4  +
mov eax [edx+5Ch] +
test eax eax +
jz loc_44C5C4  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_44C5C4  +
mov ebx [eax+8] +
mov ecx [esp+arg_4] +
mov [ecx] ebx +
mov ecx [eax+4] +
mov ebx [ecx+20h] +
mov ecx [esp+arg_8] +
mov [ecx] ebx +
mov ebx [eax+10h] +
mov ecx [esp+arg_C] +
mov eax [eax+4] +
mov [ecx] ebx +
mov [edx+5Ch] eax +
mov eax 1 +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_0] +
mov ecx [edx] +
test ecx ecx +
mov [esp+1Ch+var_18] ecx +
jz loc_44C7AF  +
test eax eax +
jz loc_44C7AF  +
mov eax [ecx] +
test eax eax +
mov [esp+1Ch+var_14] eax +
jz loc_44C6CE  +
mov eax [esp+1Ch+var_14] +
xor ebx ebx +
mov esi [eax+1Ch] +
mov edi [eax+48h] +
mov eax [eax+4Ch] +
mov [esp+1Ch+var_10] eax +
mov ebp [esi+ebx*4] +
test ebp ebp +
jz loc_44C632  +
lea esi [esi+0] +
mov eax [ebp+10h] +
mov [esp+1Ch+var_1C] eax +
call free  +
mov ebp [ebp+14h] +
test ebp ebp +
jnz loc_44C620  +
add ebx 1 +
cmp ebx 79h +
jnz loc_44C616  +
mov esi [esp+1Ch+var_14] +
mov eax [esi+44h] +
test eax eax +
jz loc_44C65E  +
mov eax [eax+14h] +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esi+44h] +
mov eax [eax+18h] +
mov [esp+1Ch+var_1C] eax +
call free  +
test edi edi +
jz loc_44C694  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_44C678  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [edi+0Ch] 0 +
mov eax [edi+8] +
test eax eax +
jz loc_44C68E  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [edi+8] 0 +
mov edi [edi] +
test edi edi +
jnz loc_44C662  +
mov ecx [esp+1Ch+var_10] +
mov ebx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_44C6BC  +
mov eax [ebx+4] +
test eax eax +
jz loc_44C6B6  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov dword ptr [ebx+4] 0 +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44C6A0  +
mov eax [esp+1Ch+var_14] +
mov eax [eax] +
test eax eax +
mov [esp+1Ch+var_14] eax +
jnz loc_44C603  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_44C6E1  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+44h] +
test eax eax +
jz loc_44C6F4  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+4Ch] +
test eax eax +
jz loc_44C707  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+54h] +
test eax eax +
jz loc_44C71A  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+34h] +
test eax eax +
jz loc_44C72D  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov edx [eax+80h] +
test edx edx +
jnz loc_44C7A2  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+24h] +
test eax eax +
jz loc_44C74E  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+2Ch] +
test eax eax +
jz loc_44C761  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+60h] +
test eax eax +
jz loc_44C774  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+68h] +
test eax eax +
jz loc_44C787  +
mov [esp+1Ch+var_1C] eax +
call free  +
mov eax [esp+1Ch+var_18] +
mov eax [eax+20h] +
test eax eax +
jz loc_44C7AF  +
mov [esp+1Ch+arg_0] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_407790  +
mov eax [eax+14h] +
mov [esp+1Ch+var_1C] eax +
call sub_407790  +
jmp loc_44C73B  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax [esp+4Ch+arg_10] +
mov ebp [eax] +
test ebp ebp +
jz loc_44CBB0  +
mov edi [esp+4Ch+arg_0] +
mov eax [esp+4Ch+arg_0] +
mov esi [edi+6Ch] +
mov eax [eax+64h] +
test esi esi +
jz loc_44C978  +
mov edi [ebp+60h] +
xor edx edx +
jmp loc_44C80B  +
mov ecx [eax+38h] +
add ecx [ebx+1Ch] +
cmp [edi+edx*4] ecx +
jnz loc_44C820  +
add edx 1 +
mov eax [eax+0Ch] +
cmp edx esi +
jz loc_44C978  +
mov ebx [eax+3Ch] +
test ebx ebx +
jnz loc_44C7F2  +
mov ecx [eax+1Ch] +
cmp [edi+edx*4] ecx +
jz loc_44C7FD  +
lea esi [esi+0] +
mov eax [esp+4Ch+arg_10] +
mov edi ebp +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_4C] eax +
call sub_44C5D0  +
test ebp 1 +
mov edx 84h +
jnz loc_44CD28  +
test edi 2 +
jnz loc_44CD36  +
mov ecx edx +
xor eax eax +
shr ecx 2 +
test dl 2 +
stos   +
jz loc_44C86A  +
xor ecx ecx +
add edi 2 +
mov [edi-2] cx +
and edx 1 +
jz loc_44C872  +
mov byte ptr [edi] 0 +
mov eax [esp+4Ch+arg_8] +
mov [ebp+8] eax +
mov eax [esp+4Ch+arg_C] +
mov [ebp+38h] eax +
mov eax [esp+4Ch+arg_0] +
mov eax [eax+6Ch] +
test eax eax +
jnz loc_44C9F5  +
mov eax [esp+4Ch+arg_10] +
mov [eax] ebp +
mov eax [esp+4Ch+arg_4] +
test eax eax +
jz loc_44CBD5  +
mov eax [esp+4Ch+arg_4] +
cmp [esp+4Ch+arg_0] eax +
setz bl  +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
call sub_4497C0  +
test eax eax +
mov [esp+4Ch+var_2C] eax +
jz loc_44C985  +
mov eax [esp+4Ch+arg_4] +
mov [ebp+14h] eax +
mov eax [esp+4Ch+arg_14] +
test eax eax +
jz loc_44CA60  +
mov eax [ebp+64h] +
cmp eax 0 +
mov [esp+4Ch+var_30] eax +
jnz loc_44CA46  +
mov eax [ebp+8] +
mov [esp+4Ch+var_28] ebp +
mov eax [eax+18h] +
mov [esp+4Ch+var_34] eax +
mov eax [esp+4Ch+arg_0] +
mov ebp eax +
lea esi [esi+0] +
mov ebx [ebp+64h] +
test ebx ebx +
jz loc_44C968  +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_44C918  +
cmp ebx eax +
jz loc_44C918  +
test byte ptr [ebx+15h] 20h +
jz loc_44C961  +
mov eax [ebx+1Ch] +
test eax eax +
jnz loc_44C961  +
mov esi [ebx] +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] eax +
call strcmp  +
mov edx 1 +
test eax eax +
jz loc_44C94C  +
mov edi offset a_gnu_linkonc_0 +
mov ecx 11h +
cmps   +
setz dl  +
movzx edx dl +
test byte ptr [ebx+14h] 1 +
jz loc_44C958  +
cmp [esp+4Ch+arg_0] ebp +
jz loc_44C95C  +
test edx edx +
jz loc_44C961  +
add [esp+4Ch+var_30] 1 +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_44C907  +
cmp [esp+4Ch+arg_4] ebp +
jz loc_44CBE7  +
mov ebp [esp+4Ch+arg_4] +
jmp loc_44C900  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test bl bl +
jz loc_44C8C5  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] offset aHomeJenkinsM_0 +
mov [esp+4Ch+var_4C] eax +
call sub_407F40  +
test eax eax +
mov ebx eax +
jz loc_44C9EB  +
mov [esp+4Ch+var_48] 0 +
mov [esp+4Ch+var_4C] eax +
call sub_407650  +
test eax eax +
mov [esp+4Ch+arg_4] eax +
jz loc_44C9E3  +
mov [esp+4Ch+var_48] 1 +
mov [esp+4Ch+var_4C] eax +
call sub_4089A0  +
test eax eax +
jnz loc_44CDC1  +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_4C] eax +
call sub_407790  +
mov [esp+4Ch+var_4C] ebx +
call free  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shl eax 2 +
mov [esp+4Ch+var_4C] eax +
call sub_40EFC0  +
test eax eax +
mov [ebp+60h] eax +
jz loc_44C9EB  +
mov edi [esp+4Ch+arg_0] +
mov edx [edi+64h] +
mov edi [edi+6Ch] +
test edi edi +
jz loc_44C88F  +
xor ecx ecx +
jmp loc_44CA37  +
mov ebx [edx+38h] +
add ebx [esi+1Ch] +
mov [eax+ecx*4] ebx +
add ecx 1 +
mov edx [edx+0Ch] +
cmp ecx edi +
jz loc_44C88F  +
mov esi [edx+3Ch] +
test esi esi +
jnz loc_44CA20  +
mov ebx [edx+1Ch] +
mov [eax+ecx*4] ebx +
jmp loc_44CA29  +
mov eax [ebp+68h] +
jle loc_44CA60  +
mov edx [esp+4Ch+var_30] +
nop   +
mov ecx [eax] +
add eax 8 +
mov ebx [eax-4] +
sub edx 1 +
mov [ecx+1Ch] ebx +
jnz loc_44CA50  +
mov ecx [esp+4Ch+var_2C] +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
call sub_449830  +
test eax eax +
jz loc_44CB3F  +
mov ecx [esp+4Ch+var_2C] +
xor eax eax +
mov [esp+4Ch+var_10] 0 +
test ecx ecx +
jz loc_44CAAD  +
mov ebx [esp+4Ch+arg_4] +
mov esi [esp+4Ch+arg_8] +
add eax [ecx+24h] +
mov edx esi +
mov [esp+4Ch+var_10] eax +
mov eax ebx +
call sub_449830  +
mov ecx eax +
mov eax [esp+4Ch+var_10] +
test ecx ecx +
jnz loc_44CA93  +
mov [esp+4Ch+var_4C] eax +
call sub_40EFC0  +
test eax eax +
mov [ebp+34h] eax +
jz loc_44C9EB  +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_10] 0 +
call sub_4497C0  +
test eax eax +
mov ecx eax +
jz loc_44CB83  +
mov ebx [esp+4Ch+arg_4] +
mov esi [esp+4Ch+arg_8] +
jmp loc_44CB03  +
mov edx esi +
mov eax ebx +
call sub_449830  +
test eax eax +
mov ecx eax +
jz loc_44CB83  +
mov edi [ecx+24h] +
test edi edi +
jz loc_44CAF0  +
mov eax [esp+4Ch+arg_C] +
mov [esp+4Ch+var_34] ecx +
mov [esp+4Ch+var_40] eax +
mov eax [ebp+34h] +
add eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_48] ecx +
mov [esp+4Ch+var_4C] ebx +
mov [esp+4Ch+var_44] eax +
call sub_451D60  +
test eax eax +
jz loc_44C9EB  +
add [esp+4Ch+var_10] edi +
mov ecx [esp+4Ch+var_34] +
jmp loc_44CAF0  +
mov eax [esp+4Ch+var_2C] +
mov ecx [esp+4Ch+arg_C] +
mov eax [eax+24h] +
mov [esp+4Ch+var_10] eax +
mov eax [ebp+8] +
mov [esp+4Ch+var_4C] 0 +
mov [esp+4Ch+var_48] 0 +
lea edx [eax+18h] +
lea eax [esp+4Ch+var_10] +
mov [esp+4Ch+var_40] eax +
lea eax [ebp+34h] +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_4] +
call sub_4491C0  +
test eax eax +
jz loc_44C9EB  +
mov eax [ebp+34h] +
mov edx [esp+4Ch+arg_8] +
mov [ebp+0Ch] eax +
add eax [esp+4Ch+var_10] +
mov [ebp+10h] eax +
mov eax [esp+4Ch+arg_4] +
call sub_4497C0  +
mov [ebp+18h] eax +
mov eax [ebp+0Ch] +
mov [ebp+1Ch] eax +
mov eax 1 +
jmp loc_44C97D  +
mov eax [esp+4Ch+arg_0] +
mov [esp+4Ch+var_48] 84h +
mov [esp+4Ch+var_4C] eax +
call sub_407C00  +
test eax eax +
mov ebp eax +
jnz loc_44C872  +
xor eax eax +
jmp loc_44C9ED  +
mov eax [esp+4Ch+arg_0] +
mov ebx 1 +
mov [esp+4Ch+arg_4] eax +
jmp loc_44C8AC  +
cmp [esp+4Ch+var_30] 1 +
mov ebp [esp+4Ch+var_28] +
jle loc_44CD47  +
mov edi [esp+4Ch+var_30] +
mov eax edi +
shl eax 3 +
mov [esp+4Ch+var_4C] eax +
call sub_40EFC0  +
test eax eax +
jz loc_44C9EB  +
mov [ebp+64h] edi +
mov edi [esp+4Ch+arg_0] +
mov ebx eax +
mov [ebp+68h] eax +
mov [esp+4Ch+var_24] 0 +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_30] edi +
mov [esp+4Ch+var_20] ebp +
mov eax [esp+4Ch+var_30] +
mov ebp [eax+64h] +
test ebp ebp +
jz loc_44CCD0  +
mov eax [ebp+3Ch] +
test eax eax +
jz loc_44CC53  +
cmp ebp eax +
jz loc_44CC53  +
test byte ptr [ebp+15h] 20h +
jz loc_44CCC5  +
mov eax [ebp+1Ch] +
test eax eax +
jnz loc_44CCC5  +
mov esi [ebp+0] +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_48] eax +
call strcmp  +
mov ecx 1 +
test eax eax +
jz loc_44CC85  +
mov cl 11h +
mov edi offset a_gnu_linkonc_0 +
cmps   +
setz cl  +
movzx ecx cl +
test byte ptr [ebp+14h] 1 +
jz loc_44CC95  +
mov eax [esp+4Ch+var_30] +
cmp [esp+4Ch+arg_0] eax +
jz loc_44CC99  +
test ecx ecx +
jz loc_44CCC5  +
mov esi [ebp+28h] +
test esi esi +
jnz loc_44CCA3  +
mov esi [ebp+24h] +
test ecx ecx +
jz loc_44CCF0  +
mov edi [ebp+40h] +
test edi edi +
jnz loc_44CD12  +
mov edi [esp+4Ch+var_24] +
mov eax edi +
mov [ebp+1Ch] edi +
add edi esi +
mov [esp+4Ch+var_24] edi +
mov [ebx] ebp +
add ebx 8 +
mov [ebx-4] eax +
mov ebp [ebp+0Ch] +
test ebp ebp +
jnz loc_44CC42  +
mov eax [esp+4Ch+var_20] +
mov eax [eax+14h] +
cmp [esp+4Ch+var_30] eax +
jz loc_44CDB7  +
mov [esp+4Ch+var_30] eax +
jmp loc_44CC33  +
mov ecx [ebp+40h] +
mov edi 1 +
mov eax [esp+4Ch+var_28] +
shl edi cl +
lea eax [eax+edi-1] +
neg edi  +
and eax edi +
lea edi [esi+eax] +
mov [ebp+1Ch] eax +
mov [esp+4Ch+var_28] edi +
jmp loc_44CCBD  +
mov [esp+4Ch+var_48] 0D14h +
mov [esp+4Ch+var_4C] offset a____Binutil_24 +
call sub_40C6C0  +
jmp loc_44CCAE  +
mov byte ptr [ebp+0] 0 +
lea edi [ebp+1] +
mov dl 83h +
jmp loc_44C847  +
xor ebx ebx +
add edi 2 +
mov [edi-2] bx +
sub edx 2 +
jmp loc_44C853  +
mov eax [esp+4Ch+arg_4] +
mov dword ptr [ebp+64h] 0FFFFFFFFh +
cmp [esp+4Ch+arg_0] eax +
jz loc_44CA60  +
mov ebx [eax+64h] +
mov edi [esp+4Ch+arg_0] +
test ebx ebx +
mov esi [edi+64h] +
jnz loc_44CDAE  +
jmp loc_44CA60  +
test byte ptr [ebx+15h] 20h +
jnz loc_44CA60  +
mov eax [ebx] +
mov [esp+4Ch+var_48] eax +
mov eax [esi] +
mov [esp+4Ch+var_4C] eax +
call strcmp  +
test eax eax +
jnz loc_44CDA0  +
mov eax [esi+3Ch] +
mov [ebx+3Ch] eax +
mov eax [esi+38h] +
mov [ebx+38h] eax +
mov eax [esi+1Ch] +
mov [ebx+1Ch] eax +
mov ebx [ebx+0Ch] +
mov esi [esi+0Ch] +
test ebx ebx +
jz loc_44CA60  +
test esi esi +
jnz loc_44CD70  +
jmp loc_44CA60  +
mov ebp [esp+4Ch+var_20] +
mov eax [esp+4Ch+var_30] +
jmp loc_44CD52  +
mov edx [esp+4Ch+arg_8] +
mov eax [esp+4Ch+arg_4] +
call sub_4497C0  +
test eax eax +
mov [esp+4Ch+var_2C] eax +
jz loc_44C9D7  +
mov eax [esp+4Ch+arg_4] +
mov [esp+4Ch+var_4C] eax +
call near ptr dword_4148F0+60h  +
test eax eax +
jz loc_44C9D7  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax+78h] +
mov dword ptr [ebp+80h] 1 +
mov [esp+4Ch+arg_C] eax +
mov [ebp+38h] eax +
jmp loc_44C8C5  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov esi [esp+3Ch+arg_4] +
mov ebx [esp+3Ch+arg_0] +
test esi esi +
jz loc_44CFC0  +
mov eax [ebx+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_44CFC0  +
mov eax [ebx+0A0h] +
mov ebp [eax+234h] +
test ebp ebp +
jz loc_44CF94  +
mov eax [esp+3Ch+arg_8] +
cmp [ebp+0] eax +
jz loc_44CFE2  +
mov eax [ebx+4] +
mov eax [eax+1B0h] +
mov dword ptr [ebp+8] 0 +
mov dword ptr [ebp+4] 0 +
mov dword ptr [ebp+0Ch] 0 +
mov [esp+3Ch+var_28] eax +
mov eax [esp+3Ch+arg_8] +
mov [ebp+0] eax +
mov ebx [esi] +
test ebx ebx +
jz loc_44CFC0  +
xor edx edx +
xor edi edi +
mov [esp+3Ch+var_24] ebp +
mov ebp edx +
mov [esp+3Ch+var_20] 0 +
jmp loc_44CEBA  +
cmp edi 1 +
mov eax 2 +
cmovz edi eax +
mov ebp ebx +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jz loc_44CF3F  +
test byte ptr [ebx+0Dh] 40h +
jnz loc_44CEA0  +
mov eax [esp+3Ch+var_28] +
lea edx [esp+3Ch+var_10] +
mov ecx [esp+3Ch+arg_8] +
mov eax [eax+15Ch] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_38] ecx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
test eax eax +
jz loc_44CF28  +
mov ecx [esp+3Ch+var_10] +
cmp [esp+3Ch+arg_C] ecx +
jb loc_44CF28  +
cmp ecx [esp+3Ch+var_20] +
jbe loc_44CF80  +
mov edx [esp+3Ch+var_24] +
test ebp ebp +
mov [edx+4] ebx +
mov [edx+0Ch] eax +
mov dword ptr [edx+8] 0 +
jz loc_44D00C  +
test byte ptr [ebx+0Ch] 1 +
jz loc_44CFD0  +
mov eax [ebp+4] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_20] ecx +
mov [edx+8] eax +
test edi edi +
mov eax 1 +
cmovz edi eax +
add esi 4 +
mov ebx [esi] +
test ebx ebx +
jnz loc_44CEBA  +
mov ebp [esp+3Ch+var_24] +
mov edx [ebp+4] +
test edx edx +
jz loc_44CFC0  +
mov ecx [esp+3Ch+arg_10] +
test ecx ecx +
jz loc_44CF5B  +
mov eax [ebp+8] +
mov edx [esp+3Ch+arg_10] +
mov [edx] eax +
mov eax [esp+3Ch+arg_14] +
test eax eax +
jz loc_44CF6F  +
mov eax [ebp+4] +
mov edx [esp+3Ch+arg_14] +
mov eax [eax+4] +
mov [edx] eax +
mov eax [ebp+4] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+3Ch+var_20] ecx +
jnz loc_44CF28  +
mov edx [esp+3Ch+var_24] +
cmp eax [edx+0Ch] +
jbe loc_44CF28  +
jmp loc_44CEF7  +
mov [esp+3Ch+var_38] 10h +
mov [esp+3Ch+var_3C] ebx +
call sub_407C00  +
mov ebp eax +
mov eax [ebx+0A0h] +
test ebp ebp +
mov [eax+234h] ebp +
jnz loc_44CE48  +
lea esi [esi+0] +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp edi 2 +
mov [esp+3Ch+var_20] ecx +
jnz loc_44CF1A  +
jmp loc_44CEAD  +
mov eax [ebp+4] +
test eax eax +
jz loc_44CE55  +
mov eax [eax+8] +
cmp eax [esp+3Ch+arg_C] +
ja loc_44CE55  +
add eax [ebp+0Ch] +
cmp [esp+3Ch+arg_C] eax +
jnb loc_44CE55  +
jmp loc_44CF4A  +
mov [esp+3Ch+var_20] ecx +
jmp loc_44CF28  +
***
push esi  +
push ebx  +
sub esp 8Ch +
mov esi [esp+8Ch+arg_18] +
mov eax [esp+8Ch+arg_14] +
mov ebx [esp+8Ch+arg_2C] +
mov [esp+8Ch+var_2C] 0 +
test esi esi +
mov dword ptr [eax] 0 +
jz loc_44D05E  +
mov eax [esp+8Ch+arg_18] +
mov dword ptr [eax] 0 +
mov ecx [esp+8Ch+arg_20] +
mov eax [esp+8Ch+arg_1C] +
test ecx ecx +
mov dword ptr [eax] 0 +
jz loc_44D083  +
mov eax [esp+8Ch+arg_20] +
mov dword ptr [eax] 0 +
mov eax [esp+8Ch+arg_0] +
mov eax [eax+28h] +
mov [esp+8Ch+var_7C] ebx +
mov [esp+8Ch+var_88] 0 +
shr eax 5 +
test al 42h +
setz al  +
movzx eax al +
mov [esp+8Ch+var_78] eax +
mov eax [esp+8Ch+arg_4] +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+arg_24] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_44C7C0  +
test eax eax +
jz loc_44D262  +
mov edx [esp+8Ch+arg_8] +
xor eax eax +
mov ebp [ebx] +
test edx edx +
setnz al  +
mov [esp+8Ch+var_5C] eax +
jz loc_44D201  +
mov eax [esp+8Ch+arg_C] +
test eax eax +
jnz loc_44D110  +
mov eax [esp+8Ch+arg_10] +
test eax eax +
jnz loc_44D110  +
mov eax [esp+8Ch+arg_18] +
test eax eax +
jz loc_44D124  +
mov [esp+8Ch+var_88] 0F3Dh +
mov [esp+8Ch+var_8C] offset a____Binutil_24 +
call sub_40C6C0  +
mov eax [esp+8Ch+arg_8] +
mov eax [eax+10h] +
mov [esp+8Ch+arg_C] eax +
mov eax [esp+8Ch+arg_8] +
mov edx [eax+8] +
mov eax [esp+8Ch+arg_C] +
mov eax [eax+3Ch] +
test eax eax +
jz loc_44D24F  +
mov ecx [esp+8Ch+arg_C] +
mov eax [eax+1Ch] +
add edx [ecx+38h] +
mov [esp+8Ch+var_6C] edx +
add [esp+8Ch+var_6C] eax +
mov ebx [ebp+0Ch] +
test ebx ebx +
jz loc_44D262  +
mov ecx [esp+8Ch+var_5C] +
mov dword ptr [ebp+5Ch] 0 +
test ecx ecx +
jz loc_44D287  +
mov eax [ebp+7Ch] +
test eax eax +
jz loc_44D4EC  +
cmp eax 1 +
jz loc_44D53D  +
mov ebx [ebp+0] +
test ebx ebx +
jz loc_44D408  +
mov esi [esp+8Ch+arg_8] +
mov edi [esp+8Ch+arg_1C] +
jmp loc_44D1C8  +
mov eax [ebx+24h] +
test eax eax +
jz loc_44D26F  +
mov ebx [ebx] +
test ebx ebx +
jz loc_44D408  +
test byte ptr [esi+0Ch] 8 +
jz loc_44D1D5  +
mov eax [ebx+14h] +
test eax eax +
jnz loc_44D1B3  +
mov eax [esp+8Ch+arg_14] +
mov edx esi +
mov ecx [esp+8Ch+var_6C] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_8C] eax +
mov eax ebx +
call sub_44BF10  +
test eax eax +
jz loc_44D1BE  +
mov [esp+8Ch+var_68] eax +
jmp loc_44D2FE  +
mov edi [esp+8Ch+arg_18] +
test edi edi +
jz loc_44D222  +
mov esi [esp+8Ch+arg_C] +
mov edx [esp+8Ch+arg_10] +
test esi esi +
jnz loc_44D13F  +
mov [esp+8Ch+var_88] 0F43h +
mov [esp+8Ch+var_8C] offset a____Binutil_24 +
call sub_40C6C0  +
mov eax [esp+8Ch+arg_C] +
mov edx [esp+8Ch+arg_10] +
mov eax [eax+3Ch] +
test eax eax +
jnz loc_44D151  +
mov eax [esp+8Ch+arg_C] +
add edx [eax+1Ch] +
mov [esp+8Ch+var_6C] edx +
jmp loc_44D166  +
xor eax eax +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esp+8Ch+var_6C] +
mov eax ebx +
call sub_4497A0  +
test eax eax +
jnz loc_44D1D5  +
jmp loc_44D1BE  +
mov ebx [ebp+0] +
mov [esp+8Ch+var_28] 0 +
mov [esp+8Ch+var_24] 0 +
mov [esp+8Ch+var_20] 0 +
test ebx ebx +
mov [esp+8Ch+var_1C] 0 +
jz loc_44E000  +
mov edi 0FFFFFFFFh +
mov [esp+8Ch+var_74] edi +
mov edi [esp+8Ch+var_6C] +
lea esi [esp+8Ch+var_1C] +
mov eax [ebx+14h] +
test eax eax +
jz loc_44D376  +
mov ecx [ebx+24h] +
test ecx ecx +
jz loc_44D365  +
xor eax eax +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44D2C3  +
mov [esp+8Ch+var_68] eax +
mov eax [esp+8Ch+arg_1C] +
mov eax [eax] +
test eax eax +
jz loc_44D410  +
mov [esp+8Ch+var_68] 1 +
mov eax [esp+8Ch+var_2C] +
test eax eax +
jz loc_44D31D  +
mov ecx [eax+1Ch] +
test ecx ecx +
jz loc_44D607  +
mov eax [eax+20h] +
mov edi [esp+8Ch+arg_18] +
mov [edi] eax +
mov eax [esp+8Ch+arg_0] +
mov edx [eax+28h] +
mov eax [esp+8Ch+var_68] +
shr edx 5 +
and edx 42h +
jnz loc_44D264  +
mov edx [ebp+64h] +
mov ecx [ebp+68h] +
test edx edx +
jle loc_44D264  +
mov eax [ecx] +
add ecx 8 +
sub edx 1 +
mov dword ptr [eax+1Ch] 0 +
jnz loc_44D345  +
mov eax [esp+8Ch+var_68] +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx edi +
mov eax ebx +
call sub_4497A0  +
test eax eax +
jz loc_44D2D9  +
lea eax [esp+8Ch+var_20] +
mov edx edi +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_24] +
mov [esp+8Ch+var_8C] eax +
lea ecx [esp+8Ch+var_28] +
mov eax ebx +
mov [esp+8Ch+var_80] ebp +
mov [esp+8Ch+var_84] esi +
call sub_44C090  +
test eax eax +
jz loc_44D2D9  +
cmp eax [esp+8Ch+var_74] +
ja loc_44D4AD  +
mov edx [esp+8Ch+var_28] +
test edx edx +
jz loc_44D3BD  +
mov ecx [esp+8Ch+arg_14] +
mov [ecx] edx +
mov edx [esp+8Ch+var_24] +
test edx edx +
jz loc_44D3C9  +
mov [esp+8Ch+var_2C] edx +
mov edx [esp+8Ch+arg_20] +
test edx edx +
jz loc_44D3E5  +
mov edx [esp+8Ch+var_1C] +
test edx edx +
jz loc_44D3E5  +
mov ecx [esp+8Ch+arg_20] +
mov [ecx] edx +
mov edx [esp+8Ch+var_20] +
test edx edx +
jz loc_44D4A9  +
mov ecx [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_74] eax +
mov eax 1 +
mov [ecx] edx +
jmp loc_44D2DB  +
mov [esp+8Ch+var_68] 0 +
mov eax [esp+8Ch+arg_28] +
test eax eax +
jnz loc_44D4B7  +
mov [esp+8Ch+arg_28] 4 +
lea eax [ebp+40h] +
mov ebx [ebp+0Ch] +
mov [esp+8Ch+var_3C] eax +
lea eax [ebp+3Ch] +
mov [esp+8Ch+var_38] eax +
jmp loc_44D458  +
add ebx 8 +
xor edi edi +
cmp ecx ebx +
jnb loc_44D5F5  +
test edi edi +
mov [ebp+0Ch] ebx +
jnz loc_44E0B9  +
mov ecx [ebp+10h] +
mov esi ebx +
cmp ecx ebx +
jbe loc_44D2FE  +
mov eax [ebp+14h] +
lea edx [esi+4] +
mov ebx esi +
add eax 4 +
cmp ecx edx +
jb loc_44D440  +
mov edx esi +
call sub_449710  +
cmp eax 0FFFFFFFFh +
jnz loc_44D69A  +
mov edx [ebp+0Ch] +
xor edi edi +
mov eax [ebp+14h] +
lea ebx [edx+0Ch] +
cmp [ebp+10h] ebx +
jb loc_44D44D  +
add edx 4 +
add eax 4 +
call sub_449730  +
mov edx [ebp+0Ch] +
lea ebx [edx+0Ch] +
mov edi eax +
jmp loc_44D44D  +
mov [esp+8Ch+var_74] eax +
mov eax 1 +
jmp loc_44D2DB  +
cmp [esp+8Ch+arg_28] 8 +
jz loc_44D42A  +
cmp [esp+8Ch+arg_28] 4 +
jz loc_44D42A  +
mov [esp+8Ch+var_88] 0FB3h +
mov [esp+8Ch+var_8C] offset a____Binutil_24 +
call sub_40C6C0  +
jmp loc_44D42A  +
mov eax [ebp+6Ch] +
lea edx [eax+1] +
cmp eax 63h +
mov [ebp+6Ch] edx +
jle loc_44D198  +
mov eax [esp+8Ch+arg_0] +
call sub_449640  +
mov [ebp+70h] eax +
mov eax [esp+8Ch+arg_0] +
call sub_449640  +
mov edx [ebp+70h] +
test edx edx +
mov [ebp+74h] eax +
jz loc_44E00D  +
test eax eax +
jz loc_44E00D  +
mov eax ebp +
call sub_44C280  +
mov dword ptr [ebp+7Ch] 1 +
mov eax ebp +
call sub_44C280  +
cmp dword ptr [ebp+7Ch] 1 +
jnz loc_44D198  +
mov eax [esp+8Ch+arg_8] +
test byte ptr [eax+0Ch] 8 +
jnz loc_44DF2E  +
mov eax [esp+8Ch+arg_8] +
mov edi [esp+8Ch+arg_8] +
mov eax [eax+4] +
mov ebx [edi+10h] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_88] eax +
mov eax [ebp+74h] +
mov [esp+8Ch+var_8C] eax +
call sub_40FFC0  +
test eax eax +
jz loc_44D408  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_44D408  +
mov ecx [esp+8Ch+var_6C] +
jmp loc_44D5BA  +
mov eax [eax] +
test eax eax +
jz loc_44D408  +
mov edx [eax+4] +
cmp ecx [edx+14h] +
jnz loc_44D5B0  +
mov esi [edx+18h] +
test esi esi +
jz loc_44D5CD  +
cmp ebx esi +
jnz loc_44D5B0  +
mov eax [edx+4] +
mov edi [esp+8Ch+arg_14] +
mov [edx+18h] ebx +
mov [esp+8Ch+var_68] 1 +
mov [edi] eax +
mov eax [edx+8] +
mov edi [esp+8Ch+arg_1C] +
mov [edi] eax +
jmp loc_44D2FE  +
call sub_449710  +
mov ebx [ebp+0Ch] +
add ebx 8 +
mov edi eax +
jmp loc_44D44D  +
mov edi [esp+8Ch+arg_14] +
xor eax eax +
mov edx [edi] +
test edx edx +
cmovz eax edi +
mov edi [esp+8Ch+arg_18] +
mov [esp+8Ch+var_7C] eax +
mov eax [esp+8Ch+arg_10] +
mov [esp+8Ch+var_78] edi +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+arg_C] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_4] +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_0] +
mov [esp+8Ch+var_8C] eax +
call sub_44CE10  +
mov edi [esp+8Ch+arg_C] +
mov edx [edi+3Ch] +
mov ecx [edi+1Ch] +
test edx edx +
jz loc_44D66D  +
mov ecx [edi+38h] +
add ecx [edx+1Ch] +
test eax eax +
mov edx [esp+8Ch+var_2C] +
jz loc_44D67D  +
add ecx [eax+8] +
cmp ecx [edx+28h] +
jz loc_44D68C  +
mov eax [edx+20h] +
mov dword ptr [edx+1Ch] 1 +
jmp loc_44D314  +
mov eax [esp+8Ch+arg_18] +
mov eax [eax] +
mov [edx+20h] eax +
jmp loc_44D680  +
test eax eax +
jz loc_44E098  +
cmp [esp+8Ch+arg_28] 8 +
mov [esp+8Ch+var_60] eax +
jz loc_44D750  +
mov eax [esp+8Ch+arg_28] +
add dword ptr [ebp+0Ch] 4 +
cmp [esp+8Ch+arg_28] 4 +
mov [esp+8Ch+var_64] eax +
setnz cl  +
mov ebx [ebp+0Ch] +
mov edi [ebp+14h] +
mov eax [esp+8Ch+var_60] +
mov [esp+8Ch+var_74] 0FFFFFFFEh +
mov [esp+8Ch+var_40] 0 +
mov [esp+8Ch+var_58] edi +
add edi 4 +
add eax ebx +
mov [esp+8Ch+var_70] edi +
lea edi [ebx+2] +
cmp eax edi +
mov [esp+8Ch+var_4C] eax +
mov [esp+8Ch+var_54] edi +
jnb loc_44DEAB  +
test cl cl +
jnz loc_44DE92  +
cmp [esp+8Ch+var_64] 4 +
jz loc_44DECE  +
lea eax [ebx+0Ah] +
xor edi edi +
xor ebx ebx +
cmp [esp+8Ch+var_4C] eax +
jnb loc_44DEF3  +
mov eax [esp+8Ch+var_54] +
add eax [esp+8Ch+var_64] +
lea ecx [eax+1] +
cmp [esp+8Ch+var_4C] ecx +
mov [esp+8Ch+var_34] ecx +
jnb loc_44D763  +
cmp [esp+8Ch+var_74] 2 +
ja loc_44E072  +
xor eax eax +
jmp loc_44D785  +
add dword ptr [ebp+0Ch] 4 +
xor ecx ecx +
mov [esp+8Ch+var_64] 4 +
jmp loc_44D6CE  +
movzx eax byte ptr [eax] +
cmp [esp+8Ch+var_74] 2 +
mov [esp+8Ch+var_2D] al +
ja loc_44E072  +
cmp eax 4 +
ja loc_44E022  +
jz loc_44D7A7  +
cmp eax 2 +
jz loc_44D7A7  +
mov [esp+8Ch+var_88] eax +
mov [esp+8Ch+var_8C] offset aDwarfErrorFoun +
call off_476094  +
mov [esp+8Ch+var_8C] 11h +
call sub_40C770  +
jmp loc_44D2FE  +
mov eax [esp+8Ch+var_3C] +
mov ecx [ebp+38h] +
mov edx [ebp+8] +
mov [esp+8Ch+var_8C] ebx +
mov [esp+8Ch+var_80] eax +
mov eax [esp+8Ch+var_38] +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_58] +
call sub_4491C0  +
test eax eax +
jz loc_44D2FE  +
cmp edi 0 +
mov eax [ebp+40h] +
ja loc_44D2FE  +
cmp ebx eax +
jnb loc_44D2FE  +
mov edi [esp+8Ch+var_58] +
mov [esp+8Ch+var_88] 1E4h +
mov [esp+8Ch+var_8C] edi +
call sub_407C00  +
test eax eax +
mov [esp+8Ch+var_48] eax +
jz loc_44D2FE  +
mov eax [ebp+3Ch] +
mov [esp+8Ch+var_58] edi +
add ebx eax +
add eax [ebp+40h] +
mov [esp+8Ch+var_88] ebx +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_74] eax +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] edi +
call sub_40FB80  +
add ebx [esp+8Ch+var_1C] +
test eax eax +
mov [esp+8Ch+var_50] eax +
jz loc_44DA0F  +
mov edi [esp+8Ch+var_58] +
mov [esp+8Ch+var_54] ebp +
mov ebp ebx +
mov [esp+8Ch+var_44] esi +
mov [esp+8Ch+var_88] 18h +
mov [esp+8Ch+var_8C] edi +
call sub_407C00  +
test eax eax +
mov ebx eax +
jz loc_44E019  +
mov eax [esp+8Ch+var_50] +
mov esi [esp+8Ch+var_74] +
mov [ebx] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_7C] esi +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] eax +
mov [esp+8Ch+var_8C] edi +
call sub_40FB80  +
mov edx [esp+8Ch+var_1C] +
add edx ebp +
lea ebp [edx+1] +
mov [ebx+4] eax +
xor eax eax +
cmp esi ebp +
jb loc_44D8B0  +
movzx eax byte ptr [edx] +
mov [ebx+8] eax +
jmp loc_44D8C6  +
mov eax [ebx+10h] +
lea eax [eax+edx*8] +
add edx 1 +
mov [eax] esi +
mov [ebx+0Ch] edx +
mov [eax+4] ecx +
mov eax [esp+8Ch+var_74] +
lea ecx [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] ecx +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_7C] eax +
mov [esp+8Ch+var_8C] edi +
call sub_40FB80  +
add ebp [esp+8Ch+var_1C] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_88] ebp +
mov esi eax +
mov eax [esp+8Ch+var_74] +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] eax +
call sub_40FB80  +
add ebp [esp+8Ch+var_1C] +
test esi esi +
mov ecx eax +
jz loc_44D959  +
mov edx [ebx+0Ch] +
test dl 3 +
jnz loc_44D8B5  +
mov [esp+8Ch+var_70] eax +
mov eax [ebx+10h] +
mov ecx eax +
lea eax ds:20h[edx*8] +
mov [esp+8Ch+var_8C] ecx +
mov [esp+8Ch+var_88] eax +
call sub_40F050  +
mov ecx [esp+8Ch+var_70] +
test eax eax +
jz loc_44DCA9  +
mov [ebx+10h] eax +
mov edx [ebx+0Ch] +
jmp loc_44D8B8  +
mov ecx [esp+8Ch+var_50] +
mov eax 0ECF56BFh +
mov esi [esp+8Ch+var_48] +
mul  ecx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax 6 +
imul eax eax +
sub ecx eax +
mov eax ecx +
mov ecx [esp+8Ch+var_54] +
lea eax [esi+eax*4] +
mov edx [eax] +
mov [ebx+14h] edx +
mov [eax] ebx +
mov eax ebp +
sub eax [ecx+3Ch] +
cmp eax [ecx+40h] +
jnb loc_44DA07  +
mov eax [esp+8Ch+var_74] +
mov [esp+8Ch+var_88] ebp +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_8C] edi +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_84] eax +
call sub_40FB80  +
add ebp [esp+8Ch+var_1C] +
mov ecx eax +
mov [esp+8Ch+var_50] eax +
mov eax 0ECF56BFh +
mul  ecx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx ecx +
shr eax 6 +
imul eax eax +
sub ecx eax +
mov eax ecx +
mov eax [esi+eax*4] +
test eax eax +
jz loc_44D9FB  +
cmp edx [eax] +
jz loc_44DA07  +
mov edx [esp+8Ch+var_50] +
jmp loc_44D9F4  +
cmp edx [eax] +
jz loc_44DA07  +
mov eax [eax+14h] +
test eax eax +
jnz loc_44D9F0  +
mov eax [esp+8Ch+var_50] +
test eax eax +
jnz loc_44D857  +
mov ebp [esp+8Ch+var_54] +
mov esi [esp+8Ch+var_44] +
mov eax [esp+8Ch+var_4C] +
mov edi [esp+8Ch+var_34] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_7C] eax +
lea eax [esp+8Ch+var_20] +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+var_58] +
mov [esp+8Ch+var_88] edi +
mov [esp+8Ch+var_8C] eax +
call sub_40FB80  +
mov ecx eax +
mov eax [esp+8Ch+var_20] +
add eax edi +
test ecx ecx +
mov edi eax +
jz loc_44E04C  +
mov eax ecx +
mov edx 0ECF56BFh +
mul  edx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx ecx +
shr eax 6 +
imul eax eax +
sub edx eax +
mov eax edx +
mov edx [esp+8Ch+var_48] +
mov ebx [edx+eax*4] +
test ebx ebx +
jnz loc_44DA8B  +
jmp loc_44DCDF  +
mov ebx [ebx+14h] +
test ebx ebx +
jz loc_44DCDF  +
cmp ecx [ebx] +
lea esi [esi+0] +
jnz loc_44DA80  +
mov eax [esp+8Ch+var_58] +
mov [esp+8Ch+var_88] 64h +
mov [esp+8Ch+var_8C] eax +
call sub_407C00  +
test eax eax +
mov [esp+8Ch+var_74] eax +
jz loc_44D2FE  +
mov eax [esp+8Ch+var_74] +
mov ecx [esp+8Ch+var_58] +
mov edx [esp+8Ch+var_4C] +
mov [eax+8] ecx +
mov ecx [esp+8Ch+var_40] +
mov [eax+54h] ecx +
mov ecx eax +
movzx eax [esp+8Ch+var_2D] +
mov [ecx+58h] al +
movzx eax byte ptr [esp+8Ch+var_64] +
mov [ecx+59h] al +
mov eax ecx +
mov ecx [esp+8Ch+var_48] +
mov [eax+30h] esi +
mov esi [ebx+0Ch] +
mov [eax+40h] edx +
mov [eax+50h] ebp +
mov [eax+1Ch] ecx +
mov ecx eax +
mov eax [ebp+1Ch] +
test esi esi +
mov [ecx+34h] eax +
jz loc_44DD44  +
mov eax ecx +
xor esi esi +
lea ecx [ecx+0Ch] +
mov [esp+8Ch+var_48] ecx +
mov ecx edi +
mov edi edx +
mov [esp+8Ch+var_50] ebp +
mov ebp eax +
mov [esp+8Ch+var_64] 0 +
mov [esp+8Ch+var_58] 0 +
mov [esp+8Ch+var_54] 0 +
jmp loc_44DB5C  +
cmp eax 10h +
jz loc_44DC52  +
ja loc_44DBAB  +
cmp eax 3 +
nop   +
jnz loc_44DB50  +
mov eax [esp+8Ch+var_14] +
mov [ebp+18h] eax +
lea esi [esi+0] +
add esi 1 +
cmp esi [ebx+0Ch] +
jnb loc_44DD01  +
mov eax [ebx+10h] +
lea eax [eax+esi*8] +
mov edx [eax] +
mov [esp+8Ch+var_1C] edx +
mov edx [eax+4] +
lea eax [esp+8Ch+var_1C] +
mov [esp+8Ch+var_8C] ecx +
mov ecx ebp +
mov [esp+8Ch+var_88] edi +
call sub_449BA0  +
test eax eax +
mov ecx eax +
jz loc_44DBE8  +
mov eax [esp+8Ch+var_1C] +
cmp eax 12h +
jz loc_44DC37  +
jbe loc_44DB30  +
cmp eax 1Bh +
jz loc_44DBF1  +
cmp eax 55h +
jz loc_44DBBE  +
cmp eax 13h +
nop   +
jnz loc_44DB50  +
mov eax [esp+8Ch+var_14] +
mov [ebp+20h] eax +
jmp loc_44DB50  +
mov eax [esp+8Ch+var_14] +
cmp dword ptr [ebx+4] 11h +
mov [esp+8Ch+var_64] eax +
jnz loc_44DB50  +
mov [ebp+5Ch] eax +
jmp loc_44DB50  +
mov edx [esp+8Ch+var_10] +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_70] ecx +
mov [esp+8Ch+var_88] edx +
mov edx [esp+8Ch+var_48] +
mov [esp+8Ch+var_8C] eax +
mov eax ebp +
call sub_449A80  +
mov ecx [esp+8Ch+var_70] +
test eax eax +
jnz loc_44DB50  +
mov ebp [esp+8Ch+var_50] +
jmp loc_44D2FE  +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_70] eax +
mov eax [esp+8Ch+var_18] +
cmp eax 8 +
jz loc_44DC65  +
cmp eax 0Eh +
jz loc_44DC65  +
cmp eax 1F21h +
jz loc_44DC65  +
mov [esp+8Ch+var_4C] ecx +
mov [esp+8Ch+var_8C] offset aDwarfErrorDw_a +
call off_476094  +
mov ecx [esp+8Ch+var_4C] +
mov [esp+8Ch+var_70] 0 +
mov eax [esp+8Ch+var_70] +
mov [ebp+28h] eax +
jmp loc_44DB50  +
mov eax [esp+8Ch+var_14] +
mov [esp+8Ch+var_58] eax +
xor eax eax +
cmp [esp+8Ch+var_18] 1 +
setnz al  +
mov [esp+8Ch+var_54] eax +
jmp loc_44DB50  +
mov dword ptr [ebp+2Ch] 1 +
mov eax [esp+8Ch+var_14] +
mov [ebp+38h] eax +
jmp loc_44DB50  +
mov eax [esp+8Ch+var_70] +
test eax eax +
jz loc_44DC2B  +
mov [esp+8Ch+var_88] 3Ah +
mov [esp+8Ch+var_8C] eax +
mov [esp+8Ch+var_4C] ecx +
call strchr  +
mov ecx [esp+8Ch+var_4C] +
cmp [esp+8Ch+var_70] eax +
jz loc_44DC2B  +
test eax eax +
jz loc_44DC2B  +
cmp byte ptr [eax-1] 2Eh +
jnz loc_44DC2B  +
lea edx [eax+1] +
cmp byte ptr [eax+1] 2Fh +
mov eax edx +
cmovnz eax [esp+8Ch+var_70] +
mov [esp+8Ch+var_70] eax +
jmp loc_44DC2B  +
mov ebp [esp+8Ch+var_54] +
xor ebx ebx +
mov edi [esp+8Ch+var_48] +
mov esi [edi+ebx*4] +
test esi esi +
jz loc_44DCD2  +
lea esi [esi+0] +
mov eax [esi+10h] +
mov [esp+8Ch+var_8C] eax +
call free  +
mov esi [esi+14h] +
test esi esi +
jnz loc_44DCC0  +
add ebx 1 +
cmp ebx 79h +
jnz loc_44DCB3  +
jmp loc_44D2FE  +
mov [esp+8Ch+var_88] ecx +
mov [esp+8Ch+var_8C] offset aDwarfErrorCoul +
call off_476094  +
mov [esp+8Ch+var_8C] 11h +
call sub_40C770  +
jmp loc_44D2FE  +
mov edi ecx +
mov eax [esp+8Ch+var_64] +
mov ecx [esp+8Ch+var_58] +
mov edx [esp+8Ch+var_54] +
mov ebp [esp+8Ch+var_50] +
add eax ecx +
test edx edx +
cmovz eax ecx +
test eax eax +
mov [esp+8Ch+var_58] eax +
jz loc_44DD44  +
mov ecx [esp+8Ch+var_58] +
mov eax [esp+8Ch+var_74] +
mov [esp+8Ch+var_8C] ecx +
mov ecx [esp+8Ch+var_64] +
lea edx [eax+0Ch] +
add eax 8 +
call sub_4498C0  +
test eax eax +
jz loc_44D2FE  +
mov eax [esp+8Ch+var_74] +
mov [eax+3Ch] edi +
mov eax [esp+8Ch+var_60] +
add eax [ebp+0Ch] +
jb loc_44E0AC  +
mov [ebp+0Ch] eax +
mov eax [ebp+0] +
mov edi [esp+8Ch+var_74] +
test eax eax +
jz loc_44DF09  +
mov [eax+4] edi +
mov esi [esp+8Ch+var_5C] +
mov edi [esp+8Ch+var_74] +
test esi esi +
mov [edi] eax +
mov [ebp+0] edi +
jz loc_44DDD0  +
mov eax [esp+8Ch+arg_8] +
test byte ptr [eax+0Ch] 8 +
jz loc_44DE0E  +
mov ebx [edi+14h] +
mov eax edi +
test ebx ebx +
jz loc_44DE0E  +
mov ecx [edi+24h] +
mov [esp+8Ch+var_68] 0 +
test ecx ecx +
jz loc_44DE01  +
mov ecx [ebp+18h] +
mov ebx [ebp+0Ch] +
mov eax ebx +
sub eax [ebp+1Ch] +
cmp eax [ecx+24h] +
jz loc_44DF11  +
mov esi [esp+8Ch+var_68] +
test esi esi +
jz loc_44D458  +
jmp loc_44D2F6  +
mov eax [esp+8Ch+var_74] +
mov edx [eax+14h] +
test edx edx +
jz loc_44DE4C  +
mov edi [eax+24h] +
mov [esp+8Ch+var_68] 0 +
test edi edi +
jnz loc_44DDA7  +
mov edx [esp+8Ch+var_6C] +
call sub_4497A0  +
test eax eax +
jnz loc_44DE4C  +
mov eax [esp+8Ch+var_5C] +
mov [esp+8Ch+var_68] eax +
jmp loc_44DDA7  +
mov edx [esp+8Ch+var_6C] +
call sub_4497A0  +
test eax eax +
jz loc_44DDA7  +
mov eax [esp+8Ch+arg_1C] +
mov ecx [esp+8Ch+var_6C] +
mov edx [esp+8Ch+arg_8] +
mov [esp+8Ch+var_84] ebp +
mov [esp+8Ch+var_88] eax +
mov eax [esp+8Ch+arg_14] +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_74] +
call sub_44BF10  +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+8Ch+var_68] eax +
jmp loc_44DDA7  +
mov eax [esp+8Ch+arg_20] +
mov ecx [esp+8Ch+arg_14] +
mov edx [esp+8Ch+var_6C] +
mov [esp+8Ch+var_80] ebp +
mov [esp+8Ch+var_84] eax +
mov eax [esp+8Ch+arg_1C] +
mov [esp+8Ch+var_88] eax +
lea eax [esp+8Ch+var_2C] +
mov [esp+8Ch+var_8C] eax +
mov eax [esp+8Ch+var_74] +
call sub_44C090  +
test eax eax +
setnz al  +
movzx eax al +
mov [esp+8Ch+var_68] eax +
jmp loc_44DDA7  +
mov [esp+8Ch+var_88] 0ABDh +
mov [esp+8Ch+var_8C] offset a____Binutil_24 +
call sub_40C6C0  +
jmp loc_44D71B  +
mov eax [esp+8Ch+var_70] +
mov edx ebx +
mov [esp+8Ch+var_50] ecx +
call sub_4496F0  +
mov ecx [esp+8Ch+var_50] +
mov [esp+8Ch+var_40] eax +
sub eax 2 +
mov [esp+8Ch+var_74] eax +
jmp loc_44D708  +
lea eax [ebx+6] +
xor edi edi +
xor ebx ebx +
cmp [esp+8Ch+var_4C] eax +
jb loc_44D72C  +
mov edx [esp+8Ch+var_54] +
mov eax [esp+8Ch+var_70] +
call sub_449710  +
mov ebx eax +
jmp loc_44D72C  +
mov edx [esp+8Ch+var_54] +
mov eax [esp+8Ch+var_70] +
call sub_449730  +
mov ebx eax +
mov edi edx +
jmp loc_44D72C  +
mov [ebp+4] edi +
jmp loc_44DD6D  +
mov eax [ebp+14h] +
mov edx [esp+8Ch+arg_24] +
call sub_449830  +
mov ebx [ebp+0Ch] +
mov [ebp+1Ch] ebx +
mov [ebp+18h] eax +
jmp loc_44DDBB  +
mov eax [eax+4] +
mov edi [esp+8Ch+arg_8] +
mov ebx [edi+10h] +
mov [esp+8Ch+var_80] 0 +
mov [esp+8Ch+var_84] 0 +
mov [esp+8Ch+var_88] eax +
mov eax [ebp+70h] +
mov [esp+8Ch+var_8C] eax +
call sub_40FFC0  +
test eax eax +
jz loc_44D408  +
mov esi [eax+0Ch] +
test esi esi +
jz loc_44D408  +
mov [esp+8Ch+var_74] 0 +
xor edi edi +
mov [esp+8Ch+var_68] ebp +
mov eax [esi+4] +
mov ecx eax +
mov [esp+8Ch+var_70] eax +
add eax 24h +
jz loc_44DFC6  +
mov edx [ecx+30h] +
jmp loc_44DF9A  +
cmp ebx edx +
jz loc_44DF9E  +
mov eax [eax] +
test eax eax +
jz loc_44DFC6  +
test edx edx +
jnz loc_44DF90  +
mov ecx [eax+4] +
cmp [esp+8Ch+var_6C] ecx +
jb loc_44DF94  +
mov ebp [eax+8] +
cmp [esp+8Ch+var_6C] ebp +
jnb loc_44DF94  +
sub ebp ecx +
test edi edi +
jz loc_44DFBC  +
cmp ebp [esp+8Ch+var_74] +
jnb loc_44DF94  +
mov [esp+8Ch+var_74] ebp +
mov edi [esp+8Ch+var_70] +
jmp loc_44DF94  +
mov esi [esi] +
test esi esi +
jnz loc_44DF7B  +
test edi edi +
mov ebp [esp+8Ch+var_68] +
jz loc_44D408  +
mov eax [edi+0Ch] +
mov ecx [esp+8Ch+arg_14] +
mov [edi+30h] ebx +
mov [esp+8Ch+var_68] 1 +
mov [ecx] eax +
mov eax [edi+14h] +
mov edi [esp+8Ch+arg_1C] +
mov [edi] eax +
jmp loc_44D2FE  +
mov [esp+8Ch+var_68] 0 +
jmp loc_44D2E5  +
mov dword ptr [ebp+7Ch] 2 +
jmp loc_44D198  +
mov ebp [esp+8Ch+var_54] +
jmp loc_44D2FE  +
mov [esp+8Ch+var_84] 4 +
mov [esp+8Ch+var_88] eax +
mov [esp+8Ch+var_8C] offset aDwarfErrorFo_0 +
call off_476094  +
mov [esp+8Ch+var_8C] 11h +
call sub_40C770  +
jmp loc_44D2FE  +
mov [esp+8Ch+var_88] 0 +
mov [esp+8Ch+var_8C] offset aDwarfErrorBadA +
call off_476094  +
mov [esp+8Ch+var_8C] 11h +
call sub_40C770  +
jmp loc_44D2FE  +
mov eax [esp+8Ch+var_40] +
mov [esp+8Ch+var_8C] offset aDwarfErrorFo_1 +
mov [esp+8Ch+var_88] eax +
call off_476094  +
mov [esp+8Ch+var_8C] 11h +
call sub_40C770  +
jmp loc_44D2FE  +
mov ebx [ebp+0Ch] +
mov eax [ebp+14h] +
mov ecx [ebp+10h] +
lea edx [ebx+4] +
add eax 4 +
jmp loc_44D440  +
mov [esp+8Ch+var_68] 0 +
jmp loc_44D2FE  +
mov [esp+8Ch+var_60] edi +
xor ecx ecx +
mov [esp+8Ch+var_64] 8 +
jmp loc_44D6D1  +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [ecx+0Ch] +
mov ecx [ecx+4] +
mov ebp [edx+0Ch] +
mov edx [edx+4] +
lea edi [ecx+eax-1] +
cmp ebp eax +
lea esi [edx+ebp-1] +
mov edx eax +
cmovbe edx ebp +
test edx edx +
jz loc_44E124  +
movzx ebx byte ptr [edi] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_44E130  +
mov ecx edx +
neg ecx  +
add edi ecx +
add esi ecx +
jmp loc_44E11F  +
movzx ebx byte ptr [edi+edx] +
movzx ecx byte ptr [esi+edx] +
cmp bl cl +
jnz loc_44E130  +
sub edx 1 +
jnz loc_44E113  +
pop ebx  +
sub eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax bl +
sub eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+18h+var_18] 2Ch +
call sub_40EFC0  +
test eax eax +
mov ebx eax +
jz loc_44E226  +
mov [esp+18h+var_10] 18h +
mov [esp+18h+var_14] offset dword_44E140 +
mov [esp+18h+var_18] eax +
call sub_40FD60  +
test eax eax +
jz loc_44E217  +
mov dword ptr [ebx+24h] 0 +
mov dword ptr [ebx+1Ch] 1 +
mov dword ptr [ebx+20h] 40h +
mov [esp+18h+var_18] 100h +
call sub_40EFC0  +
test eax eax +
mov [ebx+28h] eax +
jz loc_44E217  +
mov dword ptr [eax] 0 +
mov eax ebx +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] ebx +
call free  +
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
xor eax eax +
jmp loc_44E212  +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call sub_40FD90  +
mov eax [ebx+28h] +
mov [esp+18h+var_18] eax +
call free  +
mov [esp+18h+arg_0] ebx +
add esp 18h +
pop ebx  +
jmp free  +
***
push esi  +
push ebx  +
sub esp 10h +
mov edi [esp+18h+arg_4] +
mov esi [esp+18h+arg_0] +
cmp byte ptr [edi] 0 +
jz loc_44E2D5  +
mov edx [esi+24h] +
test edx edx +
jnz loc_44E2E0  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_10] 1 +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] esi +
mov [esp+18h+var_C] eax +
call sub_40FFC0  +
test eax eax +
mov ebx eax +
jz loc_44E2F6  +
add dword ptr [eax+10h] 1 +
mov eax [eax+0Ch] +
test eax eax +
jnz loc_44E2D2  +
mov [esp+18h+var_18] edi +
call strlen  +
add eax 1 +
test eax eax +
mov [ebx+0Ch] eax +
jle loc_44E326  +
mov edx [esi+1Ch] +
cmp edx [esi+20h] +
jz loc_44E302  +
mov eax [esi+28h] +
lea ecx [edx+1] +
mov [esi+1Ch] ecx +
mov [ebx+14h] edx +
mov [eax+edx*4] ebx +
mov eax [ebx+14h] +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+18h+var_14] 99h +
mov [esp+18h+var_18] offset a____Binutil_17 +
call sub_40C6C0  +
jmp loc_44E27C  +
add esp 10h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
lea eax [edx+edx] +
mov [esi+20h] eax +
mov eax [esi+28h] +
shl edx 3 +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call sub_40F110  +
test eax eax +
mov [esi+28h] eax +
jz loc_44E2F6  +
mov edx [esi+1Ch] +
jmp loc_44E2C6  +
mov [esp+18h+var_14] 0A5h +
mov [esp+18h+var_18] offset a____Binutil_17 +
call sub_40C6C0  +
jmp loc_44E2BB  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
lea eax [ebx-1] +
cmp eax 0FFFFFFFDh +
ja loc_44E36B  +
mov eax [esi+24h] +
test eax eax +
jnz loc_44E387  +
cmp ebx [esi+1Ch] +
jnb loc_44E371  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
add dword ptr [eax+10h] 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 0BCh +
mov [esp+14h+var_14] offset a____Binutil_17 +
call sub_40C6C0  +
jmp loc_44E361  +
mov [esp+14h+var_10] 0BBh +
mov [esp+14h+var_14] offset a____Binutil_17 +
call sub_40C6C0  +
cmp ebx [esi+1Ch] +
jb loc_44E361  +
jmp loc_44E371  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
lea eax [ebx-1] +
cmp eax 0FFFFFFFDh +
ja loc_44E3E4  +
mov eax [esi+24h] +
test eax eax +
jnz loc_44E410  +
cmp ebx [esi+1Ch] +
jnb loc_44E429  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
mov edx [eax+10h] +
test edx edx +
jz loc_44E3F0  +
sub edx 1 +
mov [eax+10h] edx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_10] 0C7h +
mov [esp+14h+var_14] offset a____Binutil_17 +
call sub_40C6C0  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
mov edx [eax+10h] +
jmp loc_44E3DE  +
mov [esp+14h+var_10] 0C5h +
mov [esp+14h+var_14] offset a____Binutil_17 +
call sub_40C6C0  +
cmp ebx [esi+1Ch] +
jb loc_44E3D1  +
mov [esp+14h+var_10] 0C6h +
mov [esp+14h+var_14] offset a____Binutil_17 +
call sub_40C6C0  +
mov eax [esi+28h] +
mov eax [eax+ebx*4] +
mov edx [eax+10h] +
test edx edx +
jnz loc_44E3DE  +
jmp loc_44E3F0  +
***
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov eax [eax+28h] +
mov eax [eax+edx*4] +
mov eax [eax+10h] +
retn   +
***
mov eax [esp+arg_0] +
mov edx [eax+1Ch] +
cmp edx 1 +
jbe locret_44E495  +
mov ecx [eax+28h] +
lea eax [ecx+4] +
lea ecx [ecx+edx*4] +
mov edx [eax] +
add eax 4 +
cmp eax ecx +
mov dword ptr [edx+10h] 0 +
jnz loc_44E485  +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [edi+24h] +
mov esi [edi+1Ch] +
test eax eax +
jnz loc_44E4E5  +
cmp esi ebx +
jb loc_44E4FD  +
cmp esi ebx +
mov [edi+1Ch] ebx +
jbe loc_44E4DE  +
mov edx [edi+28h] +
mov eax [edx+ebx*4] +
add ebx 1 +
cmp ebx esi +
mov dword ptr [eax+10h] 0 +
mov dword ptr [eax+0Ch] 0 +
jnz loc_44E4C6  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_C] 0E1h +
mov [esp+10h+var_10] offset a____Binutil_17 +
call sub_40C6C0  +
cmp esi ebx +
jnb loc_44E4BC  +
mov [esp+10h+var_C] 0E2h +
mov [esp+10h+var_10] offset a____Binutil_17 +
call sub_40C6C0  +
jmp loc_44E4BC  +
***
mov edx [esp+arg_0] +
push esi  +
push esi  +
push esi  +
mov edx [eax] +
mov ecx eax +
test dl 1 +
jz loc_44E841  +
xor eax eax +
cmp dword ptr [ecx+4] 0 +
jnz locret_44E85C  +
test dl 2 +
jz loc_44E854  +
mov ecx [ecx+8] +
test ecx ecx +
jz loc_44E854  +
xor eax eax +
cmp byte ptr [ecx] 0 +
jnz locret_44E85C  +
xor eax eax +
and edx 4 +
setz al  +
retn   +
***
push ebx  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov eax ecx +
jmp loc_44E8D9  +
add ebx 1 +
or ecx 0FFFFFF80h +
mov [ebx-1] cl +
mov ecx edx +
shr edx 7 +
and ecx 7Fh +
test edx edx +
jnz loc_44E8D0  +
mov [ebx] cl +
mov edx [eax] +
lea esi [ebx+1] +
test dl 1 +
jz loc_44E909  +
mov ecx [eax+4] +
mov edx esi +
mov ebx ecx +
shr ecx 7 +
and ebx 7Fh +
test ecx ecx +
jnz loc_44E917  +
lea esi [edx+1] +
mov [edx] bl +
mov edx [eax] +
and edx 2 +
jnz loc_44E930  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
or ebx 0FFFFFF80h +
add edx 1 +
mov [edx-1] bl +
mov ebx ecx +
shr ecx 7 +
and ebx 7Fh +
test ecx ecx +
jz loc_44E902  +
jmp loc_44E917  +
mov edi [eax+8] +
mov [esp+10h+var_10] edi +
call strlen  +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] esi +
lea ebx [eax+1] +
mov [esp+10h+var_8] ebx +
add esi ebx +
call memcpy  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push esi  +
push ebx  +
sub esp 1Ch +
test edx edx +
mov [esp+1Ch+var_14] edx +
jnz loc_44EAA0  +
mov edx [eax+4] +
mov edx [edx+1B0h] +
mov ecx [edx+184h] +
test ecx ecx +
mov [esp+1Ch+var_10] ecx +
jz loc_44EAAD  +
mov eax [eax+0A0h] +
mov ebx 2 +
xor edi edi +
mov ecx eax +
mov ebp eax +
imul eax [esp+1Ch+var_14] +
lea esi [ecx+eax+268h] +
nop   +
mov eax esi +
call sub_44E830  +
xor edx edx +
test eax eax +
jnz loc_44EA38  +
mov edx esi +
mov eax ebx +
call sub_44E860  +
mov edx eax +
add ebx 1 +
add edi edx +
add esi 0Ch +
cmp ebx 47h +
jnz loc_44EA20  +
mov ecx [esp+1Ch+var_14] +
mov ebx [ebp+ecx*4+8F8h] +
test ebx ebx +
jz loc_44EA7A  +
lea esi [ebx+8] +
mov ebp [ebx+4] +
mov eax esi +
call sub_44E830  +
xor edx edx +
test eax eax +
jnz loc_44EA72  +
mov edx esi +
mov eax ebp +
call sub_44E860  +
mov edx eax +
mov ebx [ebx] +
add edi edx +
test ebx ebx +
jnz loc_44EA54  +
test edi edi +
jnz loc_44EA88  +
mov edx [esp+1Ch+var_14] +
xor eax eax +
test edx edx +
jnz loc_44EA98  +
mov eax [esp+1Ch+var_10] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
lea eax [edi+eax+0Ah] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_10] offset aGnu_0 +
jmp loc_44E9FE  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 4 +
mov ebx [esp+8+arg_0] +
mov eax ebx +
call sub_44E9D0  +
mov edx 1 +
mov esi eax +
mov eax ebx +
call sub_44E9D0  +
lea edx [eax+esi] +
xor eax eax +
lea ecx [edx+1] +
test edx edx +
cmovnz eax ecx +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_4] +
mov ebp [esp+3Ch+arg_0] +
mov [esp+3Ch+var_14] 1 +
mov [esp+3Ch+var_1C] 0 +
lea edx [eax+1] +
mov [esp+3Ch+var_10] edx +
mov byte ptr [eax] 41h +
mov edx [esp+3Ch+var_1C] +
mov eax ebp +
call sub_44E9D0  +
test eax eax +
mov [esp+3Ch+var_18] eax +
jnz loc_44EB70  +
mov eax [esp+3Ch+var_18] +
add [esp+3Ch+var_1C] 1 +
add [esp+3Ch+var_10] eax +
add [esp+3Ch+var_14] eax +
cmp [esp+3Ch+var_1C] 2 +
jnz loc_44EB29  +
mov eax [esp+3Ch+var_14] +
cmp eax [esp+3Ch+arg_8] +
jnz loc_44ECAA  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_1C] +
mov edi [ebp+4] +
test eax eax +
jz loc_44EC8E  +
mov ebx 4 +
mov esi offset aGnu_0 +
mov eax [edi+30h] +
mov edi [esp+3Ch+var_10] +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_38] edi +
lea edi [edi+4] +
mov [esp+3Ch+var_3C] edx +
call eax  +
mov [esp-10h+arg_4] ebx +
mov [esp-10h+arg_0] esi +
lea esi [edi+ebx] +
mov [esp+0] edi +
call memcpy  +
mov byte ptr [esi] 1 +
mov eax [ebp+4] +
mov edx [eax+30h] +
lea eax [esi+1] +
mov [esp-10h+arg_0] eax +
mov eax [esp+24h] +
sub eax 4 +
sub eax ebx +
mov ebx 2 +
mov [esp+0] eax +
call edx  +
lea eax [esi+5] +
mov edx [ebp+0A0h] +
mov [esp+18h] eax +
imul eax [esp+20h] +
lea eax [edx+eax+250h] +
mov [esp+1Ch] eax +
mov eax [ebp+4] +
mov edi ebx +
mov eax [eax+1B0h] +
mov eax [eax+194h] +
test eax eax +
jz loc_44EC12  +
mov [esp+0] ebx +
call eax  +
mov edi eax +
mov ecx [esp+1Ch] +
lea eax [edi+edi*2] +
lea esi [ecx+eax*4] +
mov eax esi +
call sub_44E830  +
test eax eax +
jnz loc_44EC38  +
mov eax [esp+18h] +
mov ecx esi +
mov edx edi +
call sub_44E8C0  +
mov [esp+18h] eax +
add ebx 1 +
cmp ebx 47h +
jnz loc_44EBF6  +
mov eax [ebp+0A0h] +
mov edx [esp+20h] +
mov ebx [eax+edx*4+8F8h] +
test ebx ebx +
jz loc_44EB3C  +
mov edi [esp+18h] +
mov [esp+50h] ebp +
lea ebp [ebx+8] +
mov esi [ebx+4] +
mov eax ebp +
call sub_44E830  +
test eax eax +
jnz loc_44EC7F  +
mov eax edi +
mov ecx ebp +
mov edx esi +
call sub_44E8C0  +
mov edi eax +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44EC61  +
mov ebp [esp+50h] +
jmp loc_44EB3C  +
mov eax [edi+1B0h] +
mov esi [eax+184h] +
mov [esp+3Ch+var_3C] esi +
call strlen  +
lea ebx [eax+1] +
jmp loc_44EB89  +
mov [esp+3Ch+var_34] offset aBfd_elf_set_ob +
mov [esp+3Ch+var_38] 0E1h +
mov [esp+3Ch+var_3C] offset a____Binutil_23 +
call sub_40C6F0  +
lea esi [esi+0] +
lea edi [edi+0] +
mov ecx [esp+3Ch+var_30] +
cmp ecx 46h +
jbe loc_44ED10  +
mov eax [esp+3Ch+var_38] +
mov edx [esp+3Ch+var_34] +
mov eax [eax+0A0h] +
mov eax [eax+edx*4+8F8h] +
test eax eax +
jnz loc_44ED02  +
jmp loc_44ED30  +
cmp ecx edx +
jb loc_44ED30  +
mov eax [eax] +
test eax eax +
lea esi [esi+0] +
jz locret_44ED33  +
mov edx [eax+4] +
cmp edx ecx +
jnz loc_44ECF4  +
mov eax [eax+0Ch] +
retn   +
lea edx [ecx+ecx*2] +
mov ecx [esp+3Ch+var_38] +
imul eax [esp+3Ch+var_34] +
lea eax [eax+edx*4] +
add eax [ecx+0A0h] +
mov eax [eax+254h] +
retn   +
xor eax eax +
retn   +
retn   +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea esi [eax+1] +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call sub_407B20  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
mov ecx [esp+1Ch+arg_0] +
mov edx [esp+1Ch+arg_8] +
test eax eax +
jz loc_44EDD0  +
cmp eax 1 +
jnz loc_44EDB0  +
cmp edx 20h +
jz loc_44EDE8  +
and edx 1 +
cmp edx 1 +
sbb eax eax +
add eax 2 +
add esp 1Ch +
retn   +
mov [esp+1Ch+var_14] offset a_bfd_elf_obj_a +
mov [esp+1Ch+var_18] 1A8h +
mov [esp+1Ch+var_1C] offset a____Binutil_23 +
call sub_40C6F0  +
lea esi [esi+0] +
mov eax [ecx+4] +
mov eax [eax+1B0h] +
mov eax [eax+18Ch] +
mov [esp+1Ch+arg_0] edx +
add esp 1Ch +
jmp eax  +
mov eax 3 +
jmp loc_44EDA8  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
cmp ebx 46h +
ja loc_44EE40  +
imul eax ebp +
lea edx [ebx+ebx*2] +
lea esi [eax+edx*4+250h] +
add esi [edi+0A0h] +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_44ED80  +
mov [esi] eax +
mov eax [esp+1Ch+arg_C] +
mov [esi+4] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_44E960  +
mov esi eax +
jmp loc_44EE1E  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
cmp ebx 46h +
ja loc_44EEB0  +
imul eax ebp +
lea edx [ebx+ebx*2] +
lea esi [eax+edx*4+250h] +
add esi [edi+0A0h] +
mov [esp+1Ch+var_14] ebx +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_44ED80  +
mov [esi] eax +
mov eax [esp+1Ch+arg_C] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_18] eax +
call sub_44ED40  +
mov [esi+8] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_44E960  +
mov esi eax +
jmp loc_44EE7E  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
cmp esi 46h +
ja loc_44EF22  +
imul eax ebp +
lea edx [esi+esi*2] +
lea ebx [eax+edx*4+250h] +
add ebx [edi+0A0h] +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] edi +
call sub_44ED80  +
mov [ebx] eax +
mov eax [esp+1Ch+arg_C] +
mov [ebx+4] eax +
mov eax [esp+1Ch+arg_10] +
mov [esp+1Ch+var_1C] edi +
mov [esp+1Ch+var_18] eax +
call sub_44ED40  +
mov [ebx+8] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx esi +
mov edx ebp +
mov eax edi +
call sub_44E960  +
mov ebx eax +
jmp loc_44EEEE  +
***
jmp sub_44EF40  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov eax [eax+4] +
cmp dword ptr [eax+4] 5 +
jz loc_44EF60  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+4] +
cmp dword ptr [eax+4] 5 +
jnz loc_44EF58  +
mov [esp+2Ch+var_10] 0 +
mov eax [esp+2Ch+arg_0] +
imul edx [esp+2Ch+var_10] +
mov ebx [eax+0A0h] +
add edx 268h +
add ebx edx +
add edx [esi+0A0h] +
lea ebp [ebx+33Ch] +
mov edi edx +
jmp loc_44EFAA  +
add ebx 0Ch +
add edi 0Ch +
cmp ebx ebp +
jz loc_44EFD9  +
mov eax [ebx] +
mov [edi] eax +
mov eax [ebx+4] +
mov [edi+4] eax +
mov eax [ebx+8] +
test eax eax +
jz loc_44EFA0  +
cmp byte ptr [eax] 0 +
jz loc_44EFA0  +
mov [esp+2Ch+var_28] eax +
add ebx 0Ch +
add edi 0Ch +
mov [esp+2Ch+var_2C] esi +
call sub_44ED40  +
mov [edi-4] eax +
cmp ebx ebp +
jnz loc_44EFAA  +
mov eax [esp+2Ch+arg_0] +
mov ecx [esp+2Ch+var_10] +
mov eax [eax+0A0h] +
mov ebx [eax+ecx*4+8F8h] +
test ebx ebx +
jz loc_44F047  +
mov eax [ebx+8] +
and eax 3 +
cmp eax 2 +
jz loc_44F023  +
cmp eax 3 +
jz loc_44F080  +
cmp eax 1 +
jz loc_44F060  +
mov [esp+2Ch+var_24] offset a_bfd_elf_copy_ +
mov [esp+2Ch+var_28] 185h +
mov [esp+2Ch+var_2C] offset a____Binutil_23 +
call sub_40C6F0  +
mov eax [ebx+4] +
mov edx [ebx+10h] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] eax +
call sub_44EE50  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_44EFF2  +
add [esp+2Ch+var_10] 1 +
cmp [esp+2Ch+var_10] 2 +
jz loc_44EF58  +
jmp loc_44EF71  +
mov eax [ebx+4] +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] eax +
call sub_44EDF0  +
jmp loc_44F041  +
mov eax [ebx+4] +
mov ecx [ebx+10h] +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_2C] esi +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_10] +
mov [esp+2Ch+var_1C] ecx +
mov [esp+2Ch+var_20] edx +
mov [esp+2Ch+var_28] eax +
call sub_44EEC0  +
jmp loc_44F041  +
***
push esi  +
push ebx  +
sub esp 5Ch +
mov ebx [esp+5Ch+arg_4] +
mov eax [ebx+18h] +
test eax eax +
jnz loc_44F0D0  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+5Ch+var_5C] eax +
call sub_40EFC0  +
test eax eax +
mov ebp eax +
jz loc_44F0C2  +
mov eax [ebx+2Ch] +
mov edx [ebx+18h] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_4C] 0 +
mov [esp+5Ch+var_58] eax +
mov eax [esp+5Ch+arg_0] +
mov [esp+5Ch+var_48] edx +
mov [esp+5Ch+var_54] ebp +
mov [esp+5Ch+var_5C] eax +
call sub_411050  +
test eax eax +
jz loc_44F130  +
mov eax [esp+5Ch+arg_0] +
cmp byte ptr [ebp+0] 41h +
mov edx [ebx+18h] +
mov eax [eax+4] +
mov ecx [eax+1B0h] +
mov ecx [ecx+184h] +
mov [esp+5Ch+var_30] ecx +
jz loc_44F140  +
mov [esp+5Ch+var_5C] ebp +
call free  +
add esp 5Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
sub esi 1 +
mov [esp+5Ch+var_28] esi +
jz loc_44F130  +
add edx ebp +
lea ecx [edx-4] +
lea ebx [ebp+1] +
cmp ebx ecx +
mov [esp+5Ch+var_3C] edx +
mov [esp+5Ch+var_34] ecx +
jnb loc_44F130  +
mov [esp+5Ch+var_20] ebp +
mov ebp [esp+5Ch+arg_0] +
mov edi ebx +
mov eax [eax+28h] +
lea ebx [edi+4] +
mov [esp+5Ch+var_5C] edi +
call eax  +
test eax eax +
jz loc_44F428  +
mov ecx [esp+5Ch+var_28] +
mov [esp+5Ch+var_5C] ebx +
cmp ecx eax +
cmovbe eax ecx +
mov [esp+5Ch+var_24] eax +
sub eax 4 +
mov [esp+5Ch+var_58] eax +
mov esi eax +
mov [esp+5Ch+var_38] eax +
call sub_473D10  +
lea edx [eax+1] +
cmp edx esi +
jnb loc_44F428  +
test edx edx +
jz loc_44F428  +
mov eax [esp+5Ch+var_30] +
test eax eax +
jz loc_44F3F0  +
mov [esp+5Ch+var_58] eax +
mov [esp+5Ch+var_5C] ebx +
mov [esp+5Ch+var_40] edx +
call strcmp  +
mov edx [esp+5Ch+var_40] +
test eax eax +
jnz loc_44F3F0  +
mov [esp+5Ch+var_40] 0 +
mov eax [esp+5Ch+var_38] +
lea edi [ebx+edx] +
sub eax edx +
mov [esp+5Ch+var_38] eax +
jz loc_44F310  +
cmp [esp+5Ch+var_3C] edi +
jbe loc_44F310  +
mov ebx edi +
mov eax [esp+5Ch+var_3C] +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_58] ebx +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_4C] eax +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_54] eax +
call sub_40FB80  +
mov edi [esp+5Ch+var_10] +
add edi ebx +
cmp edi [esp+5Ch+var_34] +
mov esi eax +
jnb loc_44F420  +
mov eax [ebp+4] +
mov eax [eax+28h] +
mov [esp+5Ch+var_5C] edi +
add edi 4 +
call eax  +
test eax eax +
jz loc_44F310  +
mov ecx [esp+5Ch+var_38] +
mov ebx 0FFFFFFFCh +
cmp eax ecx +
cmova eax ecx +
sub ebx [esp+5Ch+var_10] +
mov [esp+5Ch+var_2C] eax +
add ebx eax +
add ebx edi +
cmp esi 1 +
jnz loc_44F2F2  +
mov eax [esp+5Ch+var_3C] +
cmp ebx eax +
cmova ebx eax +
cmp ebx edi +
jbe loc_44F2F0  +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_40FB80  +
mov [esp+5Ch+var_5C] ebp +
add edi [esp+5Ch+var_10] +
mov [esp+5Ch+var_54] eax +
mov esi eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] eax +
call sub_44ED80  +
and eax 3 +
cmp eax 2 +
jz loc_44F3C2  +
cmp eax 3 +
jz loc_44F371  +
cmp eax 1 +
jz loc_44F330  +
mov [esp+5Ch+var_54] offset a_bfd_elf_parse +
mov [esp+5Ch+var_58] 21Fh +
mov [esp+5Ch+var_5C] offset a____Binutil_23 +
call sub_40C6F0  +
lea esi [esi+0] +
mov ebx edi +
mov eax [esp+5Ch+var_2C] +
sub [esp+5Ch+var_38] eax +
cmp ebx [esp+5Ch+var_3C] +
jnb loc_44F30C  +
mov eax [esp+5Ch+var_38] +
test eax eax +
jnz loc_44F200  +
mov edi ebx +
nop   +
mov eax [esp+5Ch+var_24] +
sub [esp+5Ch+var_28] eax +
jz loc_44F428  +
cmp edi [esp+5Ch+var_34] +
jnb loc_44F428  +
mov eax [ebp+4] +
jmp loc_44F169  +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_40FB80  +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_5C] ebp +
add edi [esp+5Ch+var_10] +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] eax +
call sub_44EDF0  +
jmp loc_44F278  +
lea eax [esp+5Ch+var_10] +
mov [esp+5Ch+var_58] edi +
mov [esp+5Ch+var_4C] ebx +
mov [esp+5Ch+var_50] 0 +
mov [esp+5Ch+var_54] eax +
mov [esp+5Ch+var_5C] ebp +
call sub_40FB80  +
add edi [esp+5Ch+var_10] +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_4C] edi +
mov [esp+5Ch+var_50] eax +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_58] eax +
call sub_44EEC0  +
mov [esp+5Ch+var_5C] edi +
call strlen  +
lea edi [edi+eax+1] +
jmp loc_44F278  +
mov eax [esp+5Ch+var_40] +
mov [esp+5Ch+var_50] edi +
mov [esp+5Ch+var_54] esi +
mov [esp+5Ch+var_5C] ebp +
mov [esp+5Ch+var_58] eax +
call sub_44EE50  +
mov [esp+5Ch+var_5C] edi +
call strlen  +
lea edi [edi+eax+1] +
jmp loc_44F278  +
mov edi offset aGnu_0 +
mov ecx 4 +
mov esi ebx +
cmps   +
jnz loc_44F410  +
mov [esp+5Ch+var_40] 1 +
jmp loc_44F1E1  +
mov edi [esp+5Ch+var_38] +
add edi ebx +
jmp loc_44F310  +
add edi 4 +
jmp loc_44F310  +
mov ebp [esp+5Ch+var_20] +
jmp loc_44F130  +
***
jmp loc_44F440  +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+50h] +
mov dword ptr [esp+24h] 2 +
mov eax [eax+0A0h] +
lea ebx [eax+3D0h] +
mov eax [esp+54h] +
mov ebp [eax+0A0h] +
add ebp 3D0h +
mov edx [ebx+4] +
test edx edx +
jnz loc_44F4A1  +
mov ecx [ebp+4] +
test ecx ecx +
jnz loc_44F54A  +
add ebx 354h +
add ebp 354h +
sub dword ptr [esp+24h] 1 +
jnz loc_44F46F  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [ebx+8] +
mov edi offset aGnu_0 +
mov ecx 4 +
mov [esp+28h] esi +
cmps   +
jnz loc_44F521  +
mov ecx [ebp+4] +
cmp edx ecx +
jnz loc_44F545  +
mov esi [ebp+8] +
mov eax [esp+28h] +
mov [esp+2Ch] edx +
mov [esp+4] esi +
mov [esp] eax +
call strcmp  +
mov edx [esp+2Ch] +
test eax eax +
jz loc_44F481  +
mov ecx edx +
mov edi [esp+28h] +
mov eax offset unk_491F67 +
test esi esi +
cmovz esi eax +
mov [esp+14h] esi +
mov [esp+10h] ecx +
test edi edi +
cmovnz eax edi +
mov [esp+0Ch] eax +
mov eax [esp+50h] +
mov [esp+8] edx +
mov dword ptr [esp] offset aErrorBObjectTa +
mov [esp+4] eax +
call off_476094  +
xor eax eax +
jmp loc_44F499  +
***
mov eax [esp+28h] +
mov dword ptr [esp] offset aErrorBObjectHa +
mov [esp+8] eax +
mov eax [esp+50h] +
mov [esp+4] eax +
call off_476094  +
xor eax eax +
jmp loc_44F499  +
***
mov esi [ebp+8] +
jmp loc_44F4E2  +
***
mov eax [ebx+8] +
mov esi [ebp+8] +
mov [esp+28h] eax +
jmp loc_44F4E2  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov eax [esp+34h] +
mov edx [esp+38h] +
mov edi [esi+0A0h] +
mov ebx [eax+0A0h] +
lea ecx [edx+edx*2] +
shl ecx 2 +
add edi 250h +
lea ebx [ebx+ecx+250h] +
add edi ecx +
mov ecx [ebx+4] +
test ecx ecx +
jnz loc_44F5A2  +
mov ebp [ebx+8] +
test ebp ebp +
jz loc_44F612  +
mov ecx [eax+4] +
mov ecx [ecx+1B0h] +
mov ecx [ecx+198h] +
mov [esp+4] edx +
mov [esp] eax +
call ecx  +
mov esi eax +
mov eax [ebx+4] +
cmp [edi+4] eax +
jz loc_44F5E0  +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ebp [ebx+8] +
mov eax [edi+8] +
test ebp ebp +
setz cl  +
test eax eax +
mov edi ecx +
setz cl  +
mov edx edi +
cmp dl cl +
jnz loc_44F5C4  +
test eax eax +
jz loc_44F5D2  +
test ebp ebp +
jz loc_44F5D2  +
mov [esp+4] ebp +
mov [esp] eax +
call strcmp  +
test eax eax +
jnz loc_44F5C4  +
jmp loc_44F5D2  +
***
mov eax esi +
mov esi [edi+4] +
test esi esi +
jnz loc_44F5A2  +
mov ecx [edi+8] +
mov esi 1 +
test ecx ecx +
jnz loc_44F5A2  +
jmp loc_44F5D2  +
***
mov eax [esi+4] +
test ebx ebx +
mov edi eax +
jz loc_44F67D  +
mov edi [ebx+4] +
jmp loc_44F677  +
***
mov edi [ebx+4] +
mov ebx [ebx] +
mov eax [esp+34h] +
mov [ecx+8F8h] ebx +
jmp loc_44F683  +
***
mov eax [ebx+0Ch] +
cmp [esi+0Ch] eax +
jnz loc_44F6D3  +
mov edx [ebx+10h] +
mov eax [esi+10h] +
test edx edx +
setz byte ptr [esp+8]  +
test eax eax +
mov [esp+0Ch] edx +
setz dl  +
cmp [esp+8] dl +
jnz loc_44F6D3  +
test eax eax +
jz loc_44F729  +
mov edx [esp+0Ch] +
test edx edx +
jz loc_44F729  +
mov [esp+4] edx +
mov [esp] eax +
mov [esp+8] ecx +
call strcmp  +
mov ecx [esp+8] +
test eax eax +
jnz loc_44F6D3  +
mov ebx [ebx] +
mov esi [esi] +
mov eax [esp+34h] +
jmp loc_44F683  +
***
push edi  +
mov ecx 20h +
push esi  +
mov edi eax +
push ebx  +
mov esi edx +
sub esp 1Ch +
test dl 1 +
mov eax edx +
jnz loc_44F8C7  +
test al 2 +
jnz loc_44F8D7  +
mov ebx ecx +
xor edx edx +
and ebx 0FFFFFFFCh +
mov dword ptr [eax+edx] 0 +
add edx 4 +
cmp edx ebx +
jb loc_44F76C  +
add eax edx +
test cl 2 +
jz loc_44F78A  +
xor ebx ebx +
add eax 2 +
mov [eax-2] bx +
and ecx 1 +
jz loc_44F792  +
mov byte ptr [eax] 0 +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ebp +
call eax  +
mov edx eax +
mov [esi] eax +
xor eax eax +
test edx edx +
jz loc_44F7BD  +
lea ecx [ebp+edx+0] +
cmp [esp+28h+arg_0] ecx +
jbe loc_44F7BD  +
cmp edx 5 +
ja loc_44F7C5  +
xor edx edx +
mov al 1 +
mov [esi+1Ch] dx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edi] +
lea edx [ebp+4] +
lea ebx [ebp+6] +
mov eax [eax+34h] +
mov [esp+28h+var_28] edx +
call eax  +
mov [esi+1Ch] ax +
lea esi [esi+0] +
mov eax [esi] +
add eax ebp +
cmp ebx eax +
jnb loc_44F836  +
mov eax [edi] +
mov eax [eax+34h] +
mov [esp+28h+var_28] ebx +
call eax  +
lea ecx [ebx+2] +
mov edx eax +
and edx 0Fh +
cmp edx 8 +
ja loc_44F8C0  +
jmp ds:off_492078[edx*4]  +
cmp ax 38h +
jz loc_44F8E8  +
mov [esp+28h+var_28] ecx +
mov [esp+28h+var_1C] ecx +
call strlen  +
mov ecx [esp+28h+var_1C] +
lea ebx [ecx+eax+1] +
mov eax [esi] +
add eax ebp +
cmp ebx eax +
jb loc_44F7E8  +
add esp 1Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 0Ah +
jmp loc_44F7E0  +
add ebx 4 +
jmp loc_44F7E0  +
mov eax [edi] +
mov [esp+28h+var_1C] ecx +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov ecx [esp+28h+var_1C] +
lea ebx [ecx+eax+4] +
jmp loc_44F7E0  +
mov eax [edi] +
mov [esp+28h+var_1C] ecx +
mov eax [eax+34h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov ecx [esp+28h+var_1C] +
lea ebx [ecx+eax+2] +
jmp loc_44F7E0  +
cmp ax 12h +
jz loc_44F900  +
cmp ax 106h +
jz loc_44F910  +
add ebx 6 +
jmp loc_44F7E0  +
cmp ax 111h +
jz loc_44F8F0  +
cmp ax 121h +
jnz loc_44F89C  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov [esi+0Ch] eax +
jmp loc_44F89C  +
mov ebx ecx +
jmp loc_44F7E0  +
lea eax [edx+1] +
mov cl 1Fh +
test al 2 +
mov byte ptr [edx] 0 +
jz loc_44F765  +
xor edx edx +
add eax 2 +
mov [eax-2] dx +
sub ecx 2 +
jmp loc_44F765  +
mov [esi+14h] ecx +
jmp loc_44F81A  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov [esi+8] eax +
jmp loc_44F89C  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov [esi+4] eax +
jmp loc_44F89C  +
mov eax [edi] +
mov eax [eax+28h] +
mov [esp+28h+var_28] ecx +
call eax  +
mov dword ptr [esi+18h] 1 +
mov [esi+10h] eax +
jmp loc_44F89C  +
***
push esi  +
mov esi edx +
push ebx  +
mov ebx ecx +
sub esp 4Ch +
cmp [edx+8] ecx +
ja loc_44F945  +
cmp ecx [edx+0Ch] +
jb loc_44F950  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
mov eax [edx+10h] +
test eax eax +
jz loc_44F947  +
mov ecx [edx+20h] +
test ecx ecx +
jz loc_44F9E4  +
mov eax [esi+24h] +
test eax eax +
jz loc_44FAE0  +
mov ebp [esi+1Ch] +
test ebp ebp +
jz loc_44F999  +
mov edi [esi+20h] +
mov edx 1 +
mov eax edi +
mov ecx eax +
sub ecx edi +
cmp ebx [eax] +
jb loc_44F98D  +
cmp ebx [eax+8] +
jb loc_44F9C7  +
mov ecx edx +
add eax 8 +
add edx 1 +
cmp ebp ecx +
ja loc_44F980  +
xor eax eax +
mov edx [esi+24h] +
test edx edx +
jnz loc_44F9AA  +
jmp loc_44F947  +
mov edx [edx] +
test edx edx +
jz loc_44F947  +
cmp ebx [edx+8] +
lea esi [esi+0] +
jb loc_44F9A4  +
cmp ebx [edx+0Ch] +
jnb loc_44F9A4  +
mov eax [esp+50h+arg_4] +
mov edx [edx+4] +
mov [eax] edx +
mov eax 1 +
jmp loc_44F947  +
mov edx [esi+4] +
mov eax [esp+50h+arg_0] +
mov [eax] edx +
mov eax [esi+20h] +
mov edx [eax+ecx+4] +
mov eax [esp+50h+arg_8] +
mov [eax] edx +
mov eax 1 +
jmp loc_44F99B  +
mov eax [edi+14h] +
test eax eax +
jz loc_44FB80  +
add eax [esi+14h] +
cmp eax [edi+18h] +
mov ebp eax +
jnb loc_44F964  +
mov eax [edi] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] ebp +
call eax  +
lea ecx [ebp+4] +
add eax ebp +
mov [esp+50h+var_40] eax +
mov eax [edi] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] ecx +
call eax  +
lea ecx [ebp+8] +
mov edx 66666667h +
mov [esp+50h+var_3C] ecx +
mov [esp+50h+var_38] eax +
mov eax [esp+50h+var_40] +
sub eax ecx +
mov ebp eax +
imul  edx +
mov eax [edi] +
sar ebp 1Fh +
sar edx 2 +
sub edx ebp +
mov [esi+1Ch] edx +
shl edx 3 +
mov [esp+50h+var_4C] edx +
mov [esp+50h+var_50] eax +
call sub_407B20  +
test eax eax +
mov [esi+20h] eax +
jz loc_44F945  +
mov edx [esi+1Ch] +
test edx edx +
jz loc_44F964  +
xor ecx ecx +
mov ebp eax +
mov [esp+50h+var_40] esi +
mov esi ecx +
mov [esp+50h+var_34] ebx +
mov ebx [esp+50h+var_3C] +
jmp loc_44FA83  +
mov ebp [eax+20h] +
mov eax [edi] +
lea edx ds:0[esi*8] +
add esi 1 +
add ebp edx +
mov [esp+50h+var_3C] edx +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] ebx +
call eax  +
mov edx [esp+50h+var_3C] +
mov [ebp+4] eax +
mov eax [esp+50h+var_40] +
add edx [eax+20h] +
mov eax [edi] +
mov ebp edx +
lea edx [ebx+6] +
add ebx 0Ah +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+50h+var_50] edx +
call eax  +
add eax [esp+50h+var_38] +
mov [ebp+0] eax +
mov eax [esp+50h+var_40] +
cmp esi [eax+1Ch] +
jb loc_44FA80  +
mov esi [esp+50h+var_40] +
mov ebx [esp+50h+var_34] +
jmp loc_44F964  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_44F96F  +
mov edx [edi+10h] +
cmp ecx edx +
jb loc_44FB23  +
jmp loc_44F96F  +
cmp ax 14h +
jz loc_44FB47  +
cmp ax 1Dh +
jz loc_44FB47  +
cmp ax 3 +
jz loc_44FB47  +
mov ecx [esp+50h+var_2C] +
test ecx ecx +
jz loc_44F96F  +
mov edx [edi+10h] +
add ecx [edi+0Ch] +
cmp edx ecx +
jbe loc_44F96F  +
mov eax [edi] +
mov [esp+50h+var_50] edx +
lea edx [esp+50h+var_30] +
add eax 4 +
call sub_44F740  +
test eax eax +
jz loc_44F945  +
movzx eax [esp+50h+var_14] +
cmp ax 6 +
jnz loc_44FAF7  +
mov eax [edi] +
mov [esp+50h+var_4C] 10h +
mov [esp+50h+var_50] eax +
call sub_407C00  +
test eax eax +
jz loc_44F945  +
mov edx [esi+24h] +
mov [eax] edx +
mov edx [esp+50h+var_1C] +
mov [esi+24h] eax +
mov [eax+4] edx +
mov edx [esp+50h+var_28] +
mov [eax+8] edx +
mov edx [esp+50h+var_24] +
mov [eax+0Ch] edx +
jmp loc_44FB09  +
mov eax [edi] +
mov [esp+50h+var_4C] offset a_line_0 +
mov [esp+50h+var_50] eax +
call sub_410840  +
test eax eax +
jz loc_44F945  +
mov ebp [eax+28h] +
test ebp ebp +
jnz loc_44FBA4  +
mov ebp [eax+24h] +
mov ecx [edi+4] +
mov edx [edi] +
mov [esp+50h+var_48] 0 +
mov [esp+50h+var_4C] eax +
mov [esp+50h+var_44] ecx +
mov [esp+50h+var_50] edx +
call sub_451D60  +
test eax eax +
mov [edi+14h] eax +
jz loc_44F945  +
add ebp eax +
mov [edi+18h] ebp +
jmp loc_44F9EF  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [esp+4Ch+arg_0] +
mov eax [esi+0A0h] +
mov ebx [eax+22Ch] +
mov eax [esp+4Ch+arg_8] +
mov ebp [eax+1Ch] +
mov eax [esp+4Ch+arg_10] +
add ebp [esp+4Ch+arg_C] +
test ebx ebx +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_14] +
mov dword ptr [eax] 0 +
mov eax [esp+4Ch+arg_18] +
mov dword ptr [eax] 0 +
jz loc_44FD88  +
mov eax [ebx+0Ch] +
test eax eax +
jz loc_44FCA3  +
mov edx [ebx+8] +
test edx edx +
jz loc_44FC4A  +
cmp ebp [edx+8] +
jb loc_44FC44  +
cmp ebp [edx+0Ch] +
jb loc_44FD60  +
mov edx [edx] +
test edx edx +
jnz loc_44FC36  +
mov ecx [ebx+1Ch] +
mov edx [ebx+10h] +
cmp ecx edx +
jnb loc_44FCA3  +
mov [esp+4Ch+var_30] ebp +
jmp loc_44FC6D  +
mov edx [ebx+10h] +
add ecx [ebx+0Ch] +
cmp edx ecx +
mov [ebx+1Ch] ecx +
jbe loc_44FCA3  +
mov eax [ebx] +
mov [esp+4Ch+var_4C] edx +
lea edx [esp+4Ch+var_2C] +
add eax 4 +
call sub_44F740  +
test eax eax +
jz loc_44FCA3  +
cmp [esp+4Ch+var_10] 11h +
mov ecx [esp+4Ch+var_28] +
jz loc_44FCB0  +
test ecx ecx +
jnz loc_44FC60  +
mov ecx [ebx+1Ch] +
mov edx [ebx+10h] +
add ecx [esp+4Ch+var_2C] +
cmp edx ecx +
mov [ebx+1Ch] ecx +
ja loc_44FC6D  +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
mov [esp+4Ch+var_48] 28h +
mov [esp+4Ch+var_4C] eax +
call sub_407C00  +
test eax eax +
jz loc_44FCA3  +
mov edx [ebx+8] +
mov ecx [esp+4Ch+var_14] +
mov edi [esp+4Ch+var_20] +
mov [eax] edx +
mov [ebx+8] eax +
mov edx [esp+4Ch+var_18] +
mov [eax+10h] ecx +
mov ecx [esp+4Ch+var_1C] +
mov [eax+0Ch] edi +
mov [eax+4] edx +
mov edx [esp+4Ch+var_24] +
mov [eax+14h] ecx +
mov ecx [esp+4Ch+var_28] +
mov [eax+8] edx +
test ecx ecx +
jz loc_44FD05  +
mov esi [ebx+1Ch] +
add esi [esp+4Ch+var_2C] +
cmp esi [ebx+10h] +
jb loc_44FD50  +
mov dword ptr [eax+18h] 0 +
cmp [esp+4Ch+var_30] edx +
jb loc_44FC8E  +
cmp [esp+4Ch+var_30] edi +
jnb loc_44FC8E  +
mov edi [esp+4Ch+arg_18] +
mov edx eax +
mov eax ebx +
mov ebp [esp+4Ch+var_30] +
mov [esp+4Ch+var_44] edi +
mov edi [esp+4Ch+arg_14] +
mov ecx ebp +
mov [esp+4Ch+var_48] edi +
mov edi [esp+4Ch+arg_10] +
mov [esp+4Ch+var_4C] edi +
call sub_44F930  +
jmp loc_44FCA5  +
mov ebp [ebx+0Ch] +
add ebp ecx +
cmp esi ebp +
jz loc_44FD05  +
mov [eax+18h] esi +
jmp loc_44FD0C  +
mov eax [esp+4Ch+arg_18] +
mov ecx ebp +
mov [esp+4Ch+var_44] eax +
mov eax [esp+4Ch+arg_14] +
mov [esp+4Ch+var_48] eax +
mov eax [esp+4Ch+arg_10] +
mov [esp+4Ch+var_4C] eax +
mov eax ebx +
call sub_44F930  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esi+0A0h] +
mov [esp+4Ch+var_48] 20h +
mov [esp+4Ch+var_4C] esi +
call sub_407C00  +
test eax eax +
mov ebx eax +
mov [edi+22Ch] eax +
jz loc_44FCA3  +
mov [esp+4Ch+var_48] offset a_debug_0 +
mov [esp+4Ch+var_4C] esi +
call sub_410840  +
test eax eax +
jz loc_44FCA3  +
mov edi [eax+28h] +
test edi edi +
jnz loc_44FDD0  +
mov edi [eax+24h] +
mov ecx [esp+4Ch+arg_4] +
mov [esp+4Ch+var_44] 0 +
mov [esp+4Ch+var_48] eax +
mov [esp+4Ch+var_4C] esi +
mov [esp+4Ch+var_40] ecx +
call sub_451D60  +
test eax eax +
mov [ebx+0Ch] eax +
jz loc_44FCA3  +
add edi eax +
mov [ebx+1Ch] eax +
mov eax [esp+4Ch+arg_4] +
mov [ebx+10h] edi +
mov [ebx] esi +
mov [ebx+4] eax +
jmp loc_44FC2F  +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov ecx [eax] +
mov eax [esp+arg_4] +
mov edx [eax] +
mov eax [ecx+0Ch] +
mov ecx [ecx+4] +
mov ebp [edx+0Ch] +
mov edx [edx+4] +
lea edi [ecx+eax-1] +
cmp ebp eax +
lea esi [edx+ebp-1] +
mov edx eax +
cmovbe edx ebp +
test edx edx +
jz loc_44FE64  +
movzx ebx byte ptr [edi] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_44FE70  +
mov ecx edx +
neg ecx  +
add edi ecx +
add esi ecx +
jmp loc_44FE5F  +
movzx ebx byte ptr [edi+edx] +
movzx ecx byte ptr [esi+edx] +
cmp bl cl +
jnz loc_44FE70  +
sub edx 1 +
jnz loc_44FE53  +
pop ebx  +
sub eax ebp +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax bl +
sub eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+arg_0] +
mov edx [esp+arg_4] +
mov eax [eax] +
mov edx [edx] +
mov ebp [eax+0Ch] +
mov edi [edx+0Ch] +
mov ecx [edx+4] +
mov edx [eax+10h] +
mov ebx [eax+4] +
sub edx 1 +
mov eax edx +
and edx edi +
and eax ebp +
sub eax edx +
test eax eax +
jnz loc_44FEEA  +
cmp edi ebp +
mov edx ebp +
cmovbe edx edi +
test edx edx +
jz loc_44FEE6  +
lea esi [ebx+ebp-1] +
lea ebx [ecx+edi-1] +
movzx eax byte ptr [esi] +
movzx ecx byte ptr [ebx] +
cmp al cl +
jnz loc_44FEF0  +
mov eax edx +
neg eax  +
add esi eax +
add ebx eax +
jmp loc_44FEE1  +
movzx eax byte ptr [esi+edx] +
movzx ecx byte ptr [ebx+edx] +
cmp al cl +
jnz loc_44FEF0  +
sub edx 1 +
jnz loc_44FED5  +
mov eax ebp +
sub eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
sub eax ecx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 18h +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov [esp+2Ch+var_10] ecx +
mov ecx [eax+2Ch] +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_18] edx +
test ecx ecx +
jnz loc_450067  +
mov esi [eax+28h] +
xor ebx ebx +
mov eax edx +
test esi esi +
lea edi [edx+esi] +
jz loc_450142  +
add eax 1 +
movzx edx byte ptr [eax-1] +
mov ecx edx +
shl ecx 11h +
add edx ecx +
add edx ebx +
mov ebx edx +
shr ebx 2 +
xor ebx edx +
cmp eax edi +
jnz loc_44FFB0  +
mov edi [esp+2Ch+var_14] +
xor edx edx +
mov eax ebx +
div  dword ptr [edi+0Ch] +
mov eax [edi] +
mov edi [eax+edx*4] +
test edi edi +
jnz loc_44FFE7  +
jmp loc_450031  +
mov edi [edi] +
test edi edi +
jz loc_450031  +
cmp [edi+8] ebx +
jnz loc_44FFE1  +
cmp [edi+0Ch] esi +
jnz loc_44FFE1  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_24] esi +
mov [esp+2Ch+var_28] eax +
mov eax [edi+4] +
mov [esp+2Ch+var_2C] eax +
call memcmp  +
test eax eax +
jnz loc_44FFE1  +
mov edx [esp+2Ch+var_10] +
mov eax edi +
cmp [edi+10h] edx +
jnb loc_45005F  +
mov edx [esp+2Ch+arg_0] +
xor eax eax +
test edx edx +
jz loc_45005F  +
mov dword ptr [edi+0Ch] 0 +
mov dword ptr [edi+10h] 0 +
jmp loc_450039  +
mov eax [esp+2Ch+arg_0] +
test eax eax +
jz loc_45009A  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_24] ebx +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call sub_40FDB0  +
test eax eax +
jz loc_45009A  +
mov [eax+0Ch] esi +
mov esi [esp+2Ch+var_10] +
mov [eax+10h] esi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_14] +
mov esi [eax+28h] +
cmp esi 1 +
jz loc_4500FA  +
test esi esi +
jnz loc_4500A4  +
xor ebp ebp +
xor edx edx +
nop   +
mov eax ebp +
add edx ebp +
shl eax 11h +
imul ebp esi +
add eax edx +
mov ebx eax +
shr ebx 2 +
xor ebx eax +
add esi ebp +
jmp loc_44FFCB  +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
xor ebp ebp +
xor edx edx +
lea esi [esi+0] +
movzx edi byte ptr [eax] +
mov ebx edi +
test bl bl +
jnz loc_4500D1  +
xor ecx ecx +
nop   +
lea esi [esi+0] +
add ecx 1 +
cmp ecx esi +
jz loc_450080  +
cmp byte ptr [eax+ecx] 0 +
jz loc_4500C0  +
cmp esi ecx +
jz loc_450080  +
lea ebx [eax+esi] +
mov ecx edi +
jmp loc_4500DB  +
movzx ecx byte ptr [eax] +
movzx ecx cl +
add eax 1 +
mov edi ecx +
shl edi 11h +
add ecx edi +
add ecx edx +
mov edx ecx +
shr edx 2 +
xor edx ecx +
cmp eax ebx +
jnz loc_4500D8  +
add ebp 1 +
jmp loc_4500B0  +
mov ecx [esp+2Ch+var_18] +
movzx eax byte ptr [ecx] +
test eax eax +
jz loc_450149  +
xor ebp ebp +
xor edx edx +
lea esi [esi+0] +
mov ebx eax +
add ebp 1 +
shl ebx 11h +
add eax ebx +
add eax edx +
mov edx eax +
shr edx 2 +
xor edx eax +
movzx eax byte ptr [ecx+ebp] +
test eax eax +
jnz loc_450110  +
mov eax ebp +
add edx ebp +
shl eax 11h +
add esi ebp +
add eax edx +
mov ebx eax +
shr ebx 2 +
xor ebx eax +
jmp loc_44FFCB  +
mov ebx esi +
jmp loc_44FFCB  +
xor ebp ebp +
xor ebx ebx +
add esi ebp +
jmp loc_44FFCB  +
***
sub esp 18h +
mov [esp+18h+var_18] 1 +
call sub_44FF80  +
test eax eax +
mov edx eax +
jz loc_4501B0  +
mov ecx [edx+18h] +
test ecx ecx +
jz loc_450184  +
add esp 18h +
pop ebx  +
retn   +
mov eax [esp+18h+arg_0] +
add dword ptr [ebx+1Ch] 1 +
mov [edx+18h] eax +
mov eax [ebx+20h] +
test eax eax +
jz loc_4501A6  +
mov eax [ebx+24h] +
mov [eax+1Ch] edx +
mov [ebx+24h] edx +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
mov [ebx+20h] edx +
jmp loc_45019C  +
xor eax eax +
jmp loc_45017F  +
***
push esi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebp [esp+2Ch+arg_8] +
test ebp ebp +
jz loc_4506F6  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+4] +
test eax eax +
jz loc_4506E4  +
mov edx [eax] +
mov ecx [esp+2Ch+arg_8] +
test edx edx +
mov ebp edx +
mov [ecx+4] edx +
mov dword ptr [eax] 0 +
jnz loc_4504AE  +
jmp loc_450594  +
mov edi [esp+2Ch+arg_C] +
mov eax [ebp+8] +
test edi edi +
mov dword ptr [eax] 0 +
jz loc_4504A3  +
mov eax [ebp+4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call [esp+2Ch+arg_C]  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_450594  +
mov eax [ebp+4] +
mov [esp+2Ch+var_18] eax +
mov eax [eax+14h] +
test ah 80h +
jnz loc_450480  +
mov edi [esp+2Ch+var_18] +
test eax 1000000h +
lea ebx [ebp+14h] +
mov edx [edi+24h] +
mov ecx [edi+40h] +
lea esi [ebp+edx+14h] +
jz loc_450697  +
cmp esi ebx +
jbe loc_4504A3  +
mov eax 1 +
xor edi edi +
shl eax cl +
mov [esp+2Ch+var_10] eax +
sub eax 1 +
mov [esp+2Ch+var_14] ebp +
mov ebp ebx +
mov [esp+2Ch+var_1C] eax +
mov eax ebx +
sub eax ebp +
lea ecx [eax-1] +
xor ecx eax +
add ecx 1 +
shr ecx 1 +
cmp [esp+2Ch+var_1C] ecx +
jb loc_45050F  +
test ecx ecx +
jnz loc_450513  +
mov ecx [esp+2Ch+var_10] +
mov eax [esp+2Ch+arg_8] +
mov edx [esp+2Ch+var_14] +
mov eax [eax+8] +
mov [esp+2Ch+var_2C] edx +
mov edx ebx +
call sub_450160  +
test eax eax +
jz loc_4506CA  +
mov ecx [esp+2Ch+var_18] +
add ebx [eax+0Ch] +
mov edx [ecx+78h] +
cmp edx 1 +
jz loc_450634  +
cmp esi ebx +
jbe loc_450585  +
test edx edx +
jz loc_450571  +
cmp byte ptr [ebx] 0 +
nop   +
jnz loc_450623  +
xor eax eax +
jmp loc_45056A  +
cmp byte ptr [ebx+eax] 0 +
jnz loc_450623  +
add eax 1 +
cmp eax edx +
jnz loc_450560  +
test edi edi +
jnz loc_45057F  +
mov eax ebx +
sub eax ebp +
test [esp+2Ch+var_1C] eax +
jz loc_4505F0  +
add ebx edx +
cmp esi ebx +
ja loc_450547  +
mov ebp [esp+2Ch+var_14] +
mov ebp [ebp+0] +
test ebp ebp +
jnz loc_4504AE  +
mov eax [esp+2Ch+arg_8] +
mov ecx [eax+8] +
mov eax [ecx+20h] +
test eax eax +
jz loc_4506E4  +
mov esi [ecx+2Ch] +
xor edx edx +
xor ebx ebx +
test esi esi +
jz loc_4505D4  +
jmp loc_45070A  +
mov ebx [eax+10h] +
lea edx [edx+ebx-1] +
neg ebx  +
and edx ebx +
mov ebx ecx +
mov [eax+14h] edx +
add edx [eax+0Ch] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_45092B  +
mov ecx [eax+18h] +
mov esi [ecx+10h] +
test esi esi +
jnz loc_4505B6  +
test ebx ebx +
jz loc_4505E8  +
mov ebx [ebx+4] +
mov [ebx+24h] edx +
mov [ecx+10h] eax +
xor edx edx +
jmp loc_4505B6  +
mov ecx [esp+2Ch+var_14] +
mov edx ebx +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+8] +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_10] +
call sub_450160  +
test eax eax +
jz loc_4506CA  +
mov eax [esp+2Ch+var_18] +
mov di 1 +
mov edx [eax+78h] +
add ebx edx +
jmp loc_450581  +
cmp esi ebx +
ja loc_4504F7  +
mov ebp [esp+2Ch+var_14] +
jmp loc_450589  +
cmp esi ebx +
jbe loc_450585  +
cmp byte ptr [ebx] 0 +
nop   +
jnz loc_4504F7  +
mov eax edi +
mov edi [esp+2Ch+var_1C] +
jmp loc_450664  +
add ebx 1 +
cmp ebx esi +
jz loc_450585  +
cmp byte ptr [ebx] 0 +
jnz loc_450703  +
test eax eax +
jnz loc_450650  +
mov edx ebx +
sub edx ebp +
test edi edx +
jnz loc_450650  +
mov ecx [esp+2Ch+var_14] +
mov edx offset unk_4920C7 +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+8] +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_10] +
call sub_450160  +
test eax eax +
jz loc_4506CA  +
mov eax 1 +
jmp loc_450650  +
cmp esi ebx +
jbe loc_4504A3  +
mov edi [esp+2Ch+arg_8] +
jmp loc_4506B4  +
mov eax [esp+2Ch+var_18] +
add ebx [eax+78h] +
cmp esi ebx +
jbe loc_4504A3  +
mov eax [edi+8] +
mov ecx 1 +
mov edx ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_450160  +
test eax eax +
jnz loc_4506A5  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+4] +
test eax eax +
jz loc_4506E4  +
mov edx [eax+8] +
mov dword ptr [edx] 0 +
mov eax [eax] +
test eax eax +
jnz loc_4506D5  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax] +
test eax eax +
mov [esp+2Ch+arg_8] eax +
jnz loc_450453  +
add esp 2Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
jmp loc_4504F7  +
mov eax [ecx+1Ch] +
shl eax 2 +
mov [esp+2Ch+var_2C] eax +
call sub_40EFC0  +
test eax eax +
mov edi eax +
jz loc_450842  +
mov eax [esp+2Ch+arg_8] +
mov edx [eax+8] +
mov eax [edx+20h] +
test eax eax +
jz loc_450833  +
mov ebp edi +
xor ecx ecx +
jmp loc_450742  +
mov ebp ebx +
mov esi [eax+10h] +
mov ebx ebp +
test esi esi +
jz loc_45076C  +
mov edx [esp+2Ch+arg_8] +
add ebx 4 +
mov [ebp+0] eax +
mov edx [edx+8] +
mov ebp [edx+28h] +
sub [eax+0Ch] ebp +
cmp esi ecx +
jz loc_45076C  +
test ecx ecx +
mov ecx 0FFFFFFFFh +
cmovz ecx esi +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_450740  +
mov eax ebx +
sub eax edi +
sar eax 2 +
test eax eax +
mov [edx+1Ch] eax +
jz loc_45083A  +
cmp ecx 0FFFFFFFFh +
jz loc_450794  +
cmp [edx+28h] ecx +
mov esi offset sub_44FE80 +
jb loc_450799  +
mov esi offset sub_44FE10 +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_20] esi +
mov [esp+2Ch+var_24] 4 +
mov [esp+2Ch+var_2C] edi +
call qsort  +
lea eax [ebx-4] +
mov ebp [ebx-4] +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+8] +
mov eax [eax+28h] +
add [ebp+0Ch] eax +
mov [esp+2Ch+var_18] eax +
sub [esp+2Ch+var_1C] 4 +
cmp edi [esp+2Ch+var_1C] +
ja loc_45083A  +
mov eax [esp+2Ch+var_1C] +
mov ebx [eax] +
mov eax [esp+2Ch+var_18] +
mov esi [ebx+10h] +
add eax [ebx+0Ch] +
cmp [ebp+10h] esi +
mov [ebx+0Ch] eax +
jb loc_45082F  +
mov ecx [ebp+0Ch] +
sub esi 1 +
mov edx ecx +
sub edx eax +
test esi edx +
jnz loc_45082F  +
mov esi [ebp+4] +
cmp eax ecx +
mov [esp+2Ch+var_14] esi +
mov esi [ebx+4] +
jnb loc_45082F  +
add edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] edx +
call memcmp  +
test eax eax +
jnz loc_45082F  +
mov [ebx+14h] ebp +
mov dword ptr [ebx+10h] 0 +
mov ebx ebp +
mov ebp ebx +
jmp loc_4507CC  +
mov dword ptr [edx+1Ch] 0 +
mov [esp+2Ch+var_2C] edi +
call free  +
mov eax [esp+2Ch+arg_8] +
xor edx edx +
mov ebx [eax+8] +
mov eax [ebx+20h] +
mov ecx [eax+18h] +
mov esi [eax+10h] +
test esi esi +
jz loc_450871  +
mov ebp [ecx+10h] +
test ebp ebp +
jz loc_450921  +
lea edx [edx+esi-1] +
neg esi  +
and edx esi +
mov [eax+14h] edx +
add edx [eax+0Ch] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_450889  +
mov esi [eax+18h] +
cmp ecx esi +
jz loc_450885  +
mov ecx [ecx+4] +
mov [ecx+24h] edx +
mov ecx esi +
jmp loc_450851  +
mov eax [ecx+4] +
mov ecx [eax+40h] +
mov [eax+24h] edx +
test ecx ecx +
jz loc_4508AA  +
mov edi 1 +
shl edi cl +
mov ecx edi +
lea edx [edx+edi-1] +
neg ecx  +
and edx ecx +
mov [eax+24h] edx +
mov eax [ebx+20h] +
lea esi [ebx+20h] +
test eax eax +
jnz loc_4508C0  +
jmp loc_4508F4  +
lea esi [eax+1Ch] +
mov eax [eax+1Ch] +
test eax eax +
jz loc_4508F4  +
mov edi [eax+10h] +
test edi edi +
jnz loc_4508B6  +
mov ebx [eax+0Ch] +
mov edx [eax+1Ch] +
test ebx ebx +
mov [esi] edx +
jz loc_4508B9  +
mov ecx [eax+14h] +
mov edx [ecx+18h] +
mov [eax+18h] edx +
mov edx [ecx+10h] +
mov [eax+10h] edx +
mov edx [ecx+0Ch] +
add edx [ecx+14h] +
sub edx ebx +
mov [eax+14h] edx +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_4508C0  +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+4] +
test eax eax +
jnz loc_45090E  +
jmp loc_4506E4  +
mov eax [eax] +
test eax eax +
jz loc_4506E4  +
mov edx [eax+10h] +
test edx edx +
jnz loc_450904  +
mov edx [eax+4] +
or dword ptr [edx+14h] 208000h +
jmp loc_450904  +
mov [ecx+10h] eax +
xor edx edx +
jmp loc_450863  +
mov eax [ecx+4] +
mov [eax+24h] edx +
jmp loc_4508F4  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_8] +
mov esi [esp+3Ch+arg_4] +
test edi edi +
jz loc_450AA0  +
mov ebx [edi+10h] +
test ebx ebx +
jz loc_450AF7  +
mov ecx [esi+3Ch] +
mov edx [ecx+8Ch] +
mov eax [edx+10h] +
and eax [edx+14h] +
cmp eax 0FFFFFFFFh +
jz loc_450B04  +
mov [esp+3Ch+var_30] 0 +
mov eax [esi+38h] +
xor edx edx +
add eax [ecx+50h] +
adc edx [ecx+54h] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] eax +
call sub_4060C0  +
test eax eax +
jnz loc_450AA0  +
mov ebx [edi+10h] +
mov [esp+3Ch+var_14] 0 +
mov eax [ebx+18h] +
xor edi edi +
mov esi [esi+38h] +
mov [esp+3Ch+var_18] 0 +
mov [esp+3Ch+var_1C] eax +
mov eax [eax+4] +
mov [esp+3Ch+var_10] eax +
mov eax [eax+3Ch] +
mov ecx [eax+40h] +
test ecx ecx +
jnz loc_450B60  +
mov ebp [esp+3Ch+var_14] +
xor ecx ecx +
mov [esp+3Ch+var_24] esi +
mov esi ecx +
mov [esp+3Ch+var_20] edi +
lea esi [esi+0] +
test ebp ebp +
mov eax [ebx+4] +
mov edi [ebx+0Ch] +
jz loc_450A78  +
mov ecx [esp+3Ch+var_24] +
mov [esp+3Ch+var_34] edi +
mov [esp+3Ch+var_38] eax +
lea edx [ebp+ecx+0] +
mov [esp+3Ch+var_3C] edx +
call memcpy  +
xor edx edx +
add [esp+3Ch+var_24] edi +
adc [esp+3Ch+var_20] edx +
mov ebx [ebx+1Ch] +
add esi edi +
test ebx ebx +
jz loc_450AB0  +
mov eax [esp+3Ch+var_1C] +
cmp eax [ebx+18h] +
jnz loc_450AB0  +
mov eax [ebx+10h] +
mov edi esi +
neg edi  +
sub eax 1 +
and edi eax +
jz loc_4509F0  +
test ebp ebp +
jz loc_450B35  +
mov eax [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] edi +
add eax ebp +
mov [esp+3Ch+var_38] edx +
mov [esp+3Ch+var_3C] eax +
call memcpy  +
xor edx edx +
add [esp+3Ch+var_24] edi +
adc [esp+3Ch+var_20] edx +
add esi edi +
test ebp ebp +
mov eax [ebx+4] +
mov edi [ebx+0Ch] +
jnz loc_4509FA  +
mov ecx [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_34] ecx +
call sub_405F60  +
cmp edi eax +
jz loc_450A1C  +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_450AA0  +
mov [esp+3Ch+var_3C] eax +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx esi +
mov esi [esp+3Ch+var_24] +
mov eax [esp+3Ch+var_10] +
mov eax [eax+24h] +
sub eax ecx +
mov ebx eax +
jz loc_450AE7  +
mov eax [esp+3Ch+var_14] +
test eax eax +
jz loc_450B8F  +
add eax esi +
mov edi eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_34] ebx +
mov [esp+3Ch+var_3C] edi +
mov [esp+3Ch+var_38] eax +
call memcpy  +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_450AF7  +
mov [esp+3Ch+var_3C] eax +
call free  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [edx+30h] +
test byte ptr [ecx+17h] 8 +
mov [esp+3Ch+var_14] eax +
jz loc_450B19  +
test eax eax +
jnz loc_4509B4  +
mov [esp+3Ch+var_34] offset a_bfd_write_mer +
mov [esp+3Ch+var_38] 338h +
mov [esp+3Ch+var_3C] offset a____Binutil_16 +
call sub_40C6F0  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call sub_405F60  +
cmp edi eax +
jnz loc_450A90  +
add esi edi +
jmp loc_450A6E  +
mov eax 1 +
shl eax cl +
mov [esp+3Ch+var_3C] eax +
call sub_40F150  +
test eax eax +
mov [esp+3Ch+var_18] eax +
jz loc_450AA0  +
mov eax [esp+3Ch+var_1C] +
cmp eax [ebx+18h] +
jz loc_4509DD  +
xor ecx ecx +
jmp loc_450AB6  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] eax +
call sub_405F60  +
cmp ebx eax +
jnz loc_450A90  +
jmp loc_450AE7  +
***
push esi  +
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_450DCC  +
lea esi [esi+0] +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call sub_40FD90  +
mov eax [ebx+8] +
mov [esp+18h+var_18] eax +
call free  +
mov ebx [ebx] +
test ebx ebx +
jnz loc_450DB0  +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_14] 0 +
mov [esp+7Ch+var_10] 0 +
mov ecx [eax+24h] +
test ecx ecx +
jz loc_4510B0  +
mov eax [esp+7Ch+arg_C] +
mov eax [eax+24h] +
test eax eax +
jz loc_4510B0  +
mov eax ecx +
mov edx 0AAAAAAABh +
mul  edx +
shr edx 3 +
lea eax [edx+edx*2] +
shl eax 2 +
cmp ecx eax +
jnz loc_4510B0  +
mov eax [esp+7Ch+arg_C] +
test byte ptr [eax+14h] 4 +
jnz loc_4510B0  +
mov eax [esp+7Ch+arg_8] +
cmp dword ptr [eax+3Ch] offset off_476230 +
jz loc_4510B0  +
mov eax [esp+7Ch+arg_C] +
cmp dword ptr [eax+3Ch] offset off_476230 +
jz loc_4510B0  +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_5C] 0 +
mov ebp [eax+20h] +
test ebp ebp +
jz loc_4512F0  +
mov eax ecx +
mov edx 0AAAAAAABh +
mul  edx +
mov [esp+7Ch+var_64] edx +
shr [esp+7Ch+var_64] 3 +
mov eax [esp+7Ch+var_64] +
lea ebx ds:0FFFFFFFCh[eax*4] +
lea eax [ebx+0Ch] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_407B20  +
mov edi eax +
mov [esp+7Ch+var_48] eax +
mov eax [esp+7Ch+arg_10] +
test edi edi +
mov [eax] edi +
jz loc_450F9B  +
mov eax [esp+7Ch+arg_8] +
mov esi [esp+7Ch+arg_8] +
mov dword ptr [edi] 0 +
mov eax [eax+24h] +
mov [esi+28h] eax +
lea eax [ebx+4] +
lea ebx [edi+8] +
mov dword ptr [edi+4] 0 +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] ebx +
mov [esp+7Ch+var_3C] eax +
mov [esp+7Ch+var_38] ebx +
call memset  +
lea eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_4111A0  +
test eax eax +
jnz loc_4510C0  +
mov eax [esp+7Ch+var_14] +
test eax eax +
jz loc_450FAB  +
mov [esp+7Ch+var_7C] eax +
call free  +
mov edx [esp+7Ch+var_10] +
xor eax eax +
test edx edx +
jz loc_4510B5  +
mov [esp+7Ch+var_7C] edx +
mov [esp+7Ch+var_6C] eax +
call free  +
mov eax [esp+7Ch+var_6C] +
jmp loc_4510B5  +
mov eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [esp+7Ch+var_10] +
mov [esp+7Ch+var_14] 0 +
mov [esp+7Ch+var_7C] eax +
call free  +
mov eax [esp+7Ch+var_64] +
sub eax [esp+7Ch+var_34] +
mov ebx [esp+7Ch+arg_8] +
mov [esp+7Ch+var_10] 0 +
lea eax [eax+eax*2] +
shl eax 2 +
test eax eax +
mov [ebx+24h] eax +
jnz loc_451019  +
or dword ptr [ebx+14h] 208000h +
mov eax [esp+7Ch+arg_C] +
or dword ptr [eax+14h] 208000h +
mov eax [esp+7Ch+arg_4] +
mov ebx [eax+20h] +
mov eax [eax] +
mov [esp+7Ch+var_7C] eax +
call sub_4105B0  +
mov esi [esp+7Ch+var_34] +
test esi esi +
mov [ebx+24h] eax +
jz loc_4510B0  +
mov eax [esp+7Ch+var_3C] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_407B20  +
mov ebx [esp+7Ch+var_48] +
test eax eax +
mov [ebx+4] eax +
jz loc_450F9B  +
mov ebx [esp+7Ch+var_64] +
xor ecx ecx +
xor edx edx +
test ebx ebx +
jz loc_451098  +
mov esi [esp+7Ch+var_64] +
mov edi [esp+7Ch+var_38] +
mov [eax+edx*4] ecx +
lea ebx [ecx+0Ch] +
cmp dword ptr [edi+edx*4] 0FFFFFFFFh +
cmovz ecx ebx +
add edx 1 +
cmp edx esi +
jnz loc_451080  +
test ecx ecx +
jnz loc_4510B0  +
mov [esp+7Ch+var_78] 1EAh +
mov [esp+7Ch+var_7C] offset a____Binutil_18 +
call sub_40C6C0  +
lea esi [esi+0] +
mov eax 1 +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+7Ch+var_10] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_C] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_4111A0  +
test eax eax +
jz loc_450F9B  +
mov edi [esp+7Ch+arg_14] +
test edi edi +
jz loc_4515F7  +
mov eax [esp+7Ch+arg_14] +
mov eax [eax] +
mov [esp+7Ch+var_58] eax +
mov esi [esp+7Ch+arg_8] +
mov eax [esp+7Ch+var_14] +
mov ebx [esi+24h] +
add ebx eax +
cmp eax ebx +
mov [esp+7Ch+var_6C] ebx +
jnb loc_45168F  +
lea ebp [eax+0Ch] +
mov eax [esp+7Ch+var_48] +
mov [esp+7Ch+var_34] 0 +
mov [esp+7Ch+var_54] 0 +
lea esi [eax+0Ch] +
mov eax [esp+7Ch+arg_4] +
mov ebx esi +
add eax 4 +
mov [esp+7Ch+var_28] eax +
jmp loc_4511B1  +
mov eax [esp+7Ch+arg_0] +
lea edx [ebp-4] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edx +
call eax  +
mov ecx [esp+7Ch+arg_14] +
add eax [esp+7Ch+var_58] +
test ecx ecx +
jz loc_45117D  +
mov edi [esp+7Ch+arg_14] +
mov [edi] eax +
mov edx [esp+7Ch+var_5C] +
test edx edx +
jnz loc_4512D1  +
mov edi [esp+7Ch+var_58] +
add [esp+7Ch+var_34] 1 +
mov dword ptr [ebx-4] 0FFFFFFFFh +
mov [esp+7Ch+var_54] edi +
mov [esp+7Ch+var_58] eax +
cmp [esp+7Ch+var_6C] ebp +
jbe loc_450FCE  +
add ebp 0Ch +
add ebx 4 +
mov esi [ebx-4] +
lea eax [ebp-0Ch] +
mov [esp+7Ch+var_68] eax +
mov [esp+7Ch+var_60] ebx +
test esi esi +
jnz loc_4511A1  +
movzx esi byte ptr [ebp-8] +
mov [esp+7Ch+var_4C] ebp +
test esi esi +
jz loc_451150  +
mov eax [esp+7Ch+arg_0] +
mov edi [esp+7Ch+var_68] +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] edi +
call eax  +
mov edi [esp+7Ch+arg_C] +
add eax [esp+7Ch+var_54] +
cmp eax [edi+24h] +
jnb loc_4515B7  +
add eax [esp+7Ch+var_10] +
mov edi eax +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+arg_4] +
mov eax [eax] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_78] edi +
mov [esp+7Ch+var_7C] eax +
call sub_410480  +
cmp esi 82h +
mov [ebx-4] eax +
jnz loc_4511A1  +
cmp ebp [esp+7Ch+var_6C] +
jnb loc_451678  +
movzx eax byte ptr [ebp+4] +
test eax eax +
jz loc_451678  +
xor ecx ecx +
xor edx edx +
mov esi ebp +
xor edi edi +
mov [esp+7Ch+var_24] ebx +
mov ebx edx +
mov [esp+7Ch+var_20] ebp +
mov ebp ecx +
mov [esp+7Ch+var_44] 0 +
mov [esp+7Ch+var_50] 0 +
mov [esp+7Ch+var_30] 0 +
jmp loc_4512B0  +
cmp eax 82h +
jz loc_451398  +
mov eax [esp+7Ch+var_44] +
test eax eax +
jz loc_4513A2  +
add esi 0Ch +
cmp [esp+7Ch+var_6C] esi +
jbe loc_45146B  +
movzx eax byte ptr [esi+4] +
test eax eax +
jz loc_45146B  +
cmp eax 0C2h +
jz loc_451297  +
cmp eax 0A2h +
jnz loc_451280  +
mov eax [esp+7Ch+var_44] +
test eax eax +
jz loc_45146B  +
sub [esp+7Ch+var_44] 1 +
jmp loc_451297  +
mov edi [esp+7Ch+var_58] +
mov [esp+7Ch+var_5C] 0 +
mov [esp+7Ch+var_58] eax +
mov [esp+7Ch+var_54] edi +
jmp loc_4511CF  +
call sub_4103C0  +
mov ebx [esp+7Ch+arg_4] +
test eax eax +
mov [ebx] eax +
jz loc_450F9B  +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_78] offset unk_492144 +
mov [esp+7Ch+var_7C] eax +
call sub_410480  +
mov eax [esp+7Ch+arg_4] +
mov [esp+7Ch+var_74] 10h +
mov [esp+7Ch+var_78] offset dword_450DE0 +
add eax 4 +
mov [esp+7Ch+var_7C] eax +
call sub_40FD60  +
test eax eax +
jz loc_450F9B  +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] 102108h +
mov [esp+7Ch+var_78] offset a_stabstr_1 +
mov [esp+7Ch+var_7C] eax +
call near ptr dword_410C20  +
mov ebx [esp+7Ch+arg_4] +
test eax eax +
mov [ebx+20h] eax +
jz loc_450F9B  +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_5C] 1 +
mov ecx [eax+24h] +
jmp loc_450EE8  +
add [esp+7Ch+var_44] 1 +
jmp loc_451297  +
mov eax [esp+7Ch+var_10] +
mov edx [esp+7Ch+arg_0] +
mov [esp+7Ch+var_2C] eax +
mov eax [edx+4] +
mov eax [eax+28h] +
mov [esp+7Ch+var_7C] esi +
call eax  +
mov edx [esp+7Ch+var_54] +
add edx eax +
add edx [esp+7Ch+var_2C] +
cmp byte ptr [edx] 0 +
jz loc_451297  +
mov eax edi +
mov edi [esp+7Ch+var_30] +
mov [esp+7Ch+var_2C] esi +
mov esi edx +
jmp loc_451404  +
movzx ecx byte ptr [esi] +
lea edx [eax+1] +
add ebx 1 +
mov [eax] cl +
movzx eax byte ptr [esi] +
movsx ecx al +
add edi ecx +
cmp al 28h +
jz loc_451430  +
movzx ecx byte ptr [esi+1] +
add esi 1 +
test cl cl +
jz loc_45145C  +
mov eax edx +
cmp ebp ebx +
ja loc_4513E0  +
mov eax [esp+7Ch+var_50] +
add ebp 8000h +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_40F110  +
test eax eax +
mov [esp+7Ch+var_50] eax +
jz loc_450F9B  +
add eax ebx +
jmp loc_4513E0  +
movzx ecx byte ptr [esi+1] +
lea eax [esi+1] +
movzx esi cl +
test ds:byte_495EE0[esi+esi] 4 +
jz loc_451457  +
add eax 1 +
movzx ecx byte ptr [eax] +
movzx esi cl +
test ds:byte_495EE0[esi+esi] 4 +
jnz loc_451444  +
lea esi [eax-1] +
jmp loc_4513FB  +
mov [esp+7Ch+var_30] edi +
mov esi [esp+7Ch+var_2C] +
mov edi edx +
jmp loc_451297  +
mov eax edi +
mov edx ebx +
mov ebp [esp+7Ch+var_20] +
sub eax [esp+7Ch+var_50] +
mov ebx [esp+7Ch+var_24] +
cmp eax edx +
jz loc_45149B  +
mov [esp+7Ch+var_78] 167h +
mov [esp+7Ch+var_7C] offset a____Binutil_18 +
mov [esp+7Ch+var_44] edx +
call sub_40C6C0  +
mov edx [esp+7Ch+var_44] +
mov eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_70] 1 +
mov [esp+7Ch+var_74] 1 +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+var_28] +
mov [esp+7Ch+var_7C] eax +
call sub_40FFC0  +
test eax eax +
mov edi eax +
jz loc_450F9B  +
mov esi [eax+0Ch] +
mov edx [esp+7Ch+var_44] +
test esi esi +
jz loc_45151D  +
mov [esp+7Ch+var_44] ebx +
mov edi edx +
mov ebx [esp+7Ch+var_30] +
mov [esp+7Ch+var_40] eax +
jmp loc_4514EE  +
mov esi [esi] +
test esi esi +
jz loc_451513  +
cmp [esi+4] ebx +
jnz loc_4514E8  +
cmp [esi+8] edi +
jnz loc_4514E8  +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_74] edi +
mov [esp+7Ch+var_78] eax +
mov eax [esi+0Ch] +
mov [esp+7Ch+var_7C] eax +
call memcmp  +
test eax eax +
jnz loc_4514E8  +
mov edx edi +
mov ebx [esp+7Ch+var_44] +
mov edi [esp+7Ch+var_40] +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_78] 10h +
mov [esp+7Ch+var_44] edx +
mov [esp+7Ch+var_7C] eax +
call sub_407B20  +
test eax eax +
jz loc_450F9B  +
mov edx [esp+7Ch+var_30] +
mov ecx [esp+7Ch+var_68] +
sub ecx [esp+7Ch+var_14] +
test esi esi +
mov dword ptr [eax+0Ch] 82h +
mov [eax+8] edx +
mov edx [esp+7Ch+var_48] +
mov [eax+4] ecx +
mov ecx [edx] +
mov [eax] ecx +
mov [edx] eax +
jnz loc_451604  +
mov eax [esp+7Ch+var_28] +
mov [esp+7Ch+var_78] 10h +
mov [esp+7Ch+var_7C] eax +
call sub_410230  +
test eax eax +
mov esi eax +
jz loc_450F9B  +
mov edx [esp+7Ch+var_30] +
mov [eax+4] edx +
mov edx [esp+7Ch+var_44] +
mov [eax+8] edx +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_40F110  +
mov [esi+0Ch] eax +
mov eax [edi+0Ch] +
mov [esi] eax +
mov [edi+0Ch] esi +
jmp loc_4511A1  +
mov eax [esp+7Ch+var_68] +
sub eax [esp+7Ch+var_14] +
mov [esp+7Ch+var_7C] offset aBA0xLxStabsEnt +
mov [esp+7Ch+var_70] eax +
mov eax [esp+7Ch+arg_8] +
mov [esp+7Ch+var_74] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_78] eax +
call off_476094  +
mov [esp+7Ch+var_7C] 11h +
call sub_40C770  +
jmp loc_450F9B  +
mov [esp+7Ch+var_58] 0 +
jmp loc_451106  +
mov dword ptr [eax+0Ch] 0C2h +
mov eax [esp+7Ch+var_50] +
mov [esp+7Ch+var_7C] eax +
call free  +
cmp ebp [esp+7Ch+var_6C] +
jnb loc_450FCE  +
xor edx edx +
mov edi [esp+7Ch+var_6C] +
mov eax [esp+7Ch+var_4C] +
mov esi [esp+7Ch+var_60] +
jmp loc_45165E  +
cmp ecx 82h +
jz loc_451673  +
cmp ecx 0C2h +
jz loc_451650  +
test edx edx +
jnz loc_451650  +
add [esp+7Ch+var_34] 1 +
mov dword ptr [esi] 0FFFFFFFFh +
add eax 0Ch +
add esi 4 +
cmp edi eax +
jbe loc_4511AB  +
movzx ecx byte ptr [eax+4] +
cmp ecx 0A2h +
jnz loc_451631  +
test edx edx +
jz loc_45169C  +
sub edx 1 +
jmp loc_451650  +
add edx 1 +
jmp loc_451650  +
mov [esp+7Ch+var_50] 0 +
xor edx edx +
mov [esp+7Ch+var_30] 0 +
jmp loc_45149B  +
mov [esp+7Ch+var_34] 0 +
jmp loc_450FD2  +
mov dword ptr [esi] 0FFFFFFFFh +
add [esp+7Ch+var_34] 1 +
jmp loc_4511AB  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+3Ch+arg_4] +
mov [esp+3Ch+var_10] 0 +
mov ecx [edi+24h] +
test ecx ecx +
jz loc_451850  +
mov eax ecx +
mov esi 0AAAAAAABh +
mul  esi +
mov esi edx +
shr esi 3 +
lea eax [esi+esi*2] +
shl eax 2 +
sub ecx eax +
mov esi ecx +
jnz loc_451850  +
mov eax [edi+3Ch] +
test eax eax +
jz loc_4516FE  +
cmp eax offset off_476230 +
jz loc_451850  +
mov eax [esp+3Ch+arg_8] +
test eax eax +
jz loc_451850  +
mov eax [edi+28h] +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_28] eax +
lea eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_34] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_3C] eax +
call sub_4111A0  +
test eax eax +
jz loc_451840  +
mov ebx [esp+3Ch+var_10] +
mov edx [edi+28h] +
mov eax [esp+3Ch+arg_8] +
add edx ebx +
add eax 8 +
cmp ebx edx +
mov [esp+3Ch+var_20] eax +
jnb loc_45192E  +
xor ecx ecx +
mov esi eax +
mov [esp+3Ch+arg_4] edi +
mov ebp 0FFFFFFFFh +
mov edi ecx +
jmp loc_451775  +
cmp ebp 0FFFFFFFFh +
jz loc_451860  +
xor ebp ebp +
add ebx 0Ch +
add esi 4 +
cmp edx ebx +
jbe loc_4517A4  +
cmp dword ptr [esi] 0FFFFFFFFh +
jz loc_45176B  +
movzx eax byte ptr [ebx+4] +
cmp eax 24h +
jz loc_4518A2  +
cmp ebp 1 +
jnz loc_451760  +
add ebx 0Ch +
add edi 1 +
mov dword ptr [esi] 0FFFFFFFFh +
add esi 4 +
cmp edx ebx +
mov ebp 1 +
ja loc_451775  +
mov ecx edi +
mov ebx [esp+3Ch+var_10] +
mov edi [esp+3Ch+arg_4] +
lea esi [ecx+ecx*2] +
shl esi 2 +
mov [esp+3Ch+var_3C] ebx +
mov [esp+3Ch+var_24] ecx +
call free  +
mov ecx [esp+3Ch+var_24] +
sub [edi+24h] esi +
mov [esp+3Ch+var_10] 0 +
jnz loc_4517D8  +
or dword ptr [edi+14h] 208000h +
test ecx ecx +
jz loc_45182D  +
mov eax [esp+3Ch+var_28] +
mov edx 0AAAAAAABh +
mul  edx +
mov eax [esp+3Ch+arg_8] +
mov edi [eax+4] +
shr edx 3 +
test edi edi +
jz loc_451935  +
xor ebx ebx +
xor eax eax +
mov ebp [esp+3Ch+var_20] +
test edx edx +
jz loc_4518E0  +
lea esi [esi+0] +
mov [edi+eax*4] ebx +
lea esi [ebx+0Ch] +
cmp dword ptr [ebp+eax*4+0] 0FFFFFFFFh +
cmovz ebx esi +
add eax 1 +
cmp eax edx +
jnz loc_451810  +
test ebx ebx +
jz loc_4518E0  +
xor eax eax +
test ecx ecx +
setnz al  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_10] +
test eax eax +
jz loc_451850  +
mov [esp+3Ch+var_3C] eax +
call free  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 28h +
jz loc_45186E  +
cmp eax 26h +
jnz loc_45176B  +
mov eax [esp+3Ch+arg_10] +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] eax +
lea eax [ebx+8] +
sub eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] eax +
call [esp+3Ch+arg_C]  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_45176B  +
mov dword ptr [esi] 0FFFFFFFFh +
add edi 1 +
jmp loc_45176B  +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_24] edx +
mov eax [eax+4] +
mov eax [eax+28h] +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jnz loc_451901  +
test ebp ebp +
jz loc_4518D4  +
add edi 1 +
mov ebp 0FFFFFFFFh +
mov dword ptr [esi] 0FFFFFFFFh +
jmp loc_45176B  +
mov ebp 0FFFFFFFFh +
jmp loc_45176B  +
mov [esp+3Ch+var_38] 284h +
mov [esp+3Ch+var_3C] offset a____Binutil_18 +
mov [esp+3Ch+var_28] ecx +
call sub_40C6C0  +
mov ecx [esp+3Ch+var_28] +
jmp loc_45182D  +
mov eax [esp+3Ch+arg_10] +
xor ebp ebp +
mov [esp+3Ch+var_24] edx +
mov [esp+3Ch+var_38] eax +
lea eax [ebx+8] +
sub eax [esp+3Ch+var_10] +
mov [esp+3Ch+var_3C] eax +
call [esp+3Ch+arg_C]  +
mov edx [esp+3Ch+var_24] +
test eax eax +
jz loc_45176B  +
jmp loc_45178C  +
xor ecx ecx +
jmp loc_4517B4  +
lea eax ds:0[edx*4] +
mov [esp+3Ch+var_38] eax +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_28] edx +
mov [esp+3Ch+var_24] ecx +
mov [esp+3Ch+var_3C] eax +
call sub_407B20  +
mov edx [esp+3Ch+arg_8] +
test eax eax +
mov [edx+4] eax +
jz loc_451840  +
mov edi eax +
mov ecx [esp+3Ch+var_24] +
mov edx [esp+3Ch+var_28] +
jmp loc_4517F9  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov ebp [esp+2Ch+arg_0] +
mov edi [eax] +
test edi edi +
jz loc_451B3A  +
mov ebx [edi] +
test ebx ebx +
jz loc_4519FC  +
mov [esp+2Ch+var_14] edi +
mov esi [esp+2Ch+arg_8] +
jmp loc_4519D7  +
add eax [esp+2Ch+arg_10] +
mov edx [ebp+4] +
mov edi eax +
mov eax [ebx+8] +
lea ecx [edi+8] +
mov edx [edx+30h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov edx [ebx+0Ch] +
mov [edi+4] dl +
mov ebx [ebx] +
test ebx ebx +
jz loc_4519F8  +
mov eax [ebx+4] +
cmp eax [esi+28h] +
jb loc_4519B0  +
mov [esp+2Ch+var_28] 2AAh +
mov [esp+2Ch+var_2C] offset a____Binutil_18 +
call sub_40C6C0  +
mov eax [ebx+4] +
jmp loc_4519B0  +
mov edi [esp+2Ch+var_14] +
mov ecx [esp+2Ch+arg_8] +
add edi 8 +
mov esi [esp+2Ch+arg_10] +
mov eax [esp+2Ch+arg_10] +
add eax [ecx+28h] +
mov ebx esi +
cmp esi eax +
mov [esp+2Ch+var_14] eax +
jnb loc_451B36  +
lea esi [esi+0] +
mov eax [edi] +
cmp eax 0FFFFFFFFh +
jz loc_451AC4  +
cmp esi ebx +
jz loc_451A41  +
mov eax [ebx] +
mov [esi] eax +
mov eax [ebx+4] +
mov [esi+4] eax +
mov eax [ebx+8] +
mov [esi+8] eax +
mov eax [edi] +
mov edx [ebp+4] +
mov edx [edx+30h] +
mov [esp+2Ch+var_28] esi +
mov [esp+2Ch+var_2C] eax +
call edx  +
cmp byte ptr [ebx+4] 0 +
jnz loc_451AC1  +
cmp ebx [esp+2Ch+arg_10] +
jz loc_451A70  +
mov [esp+2Ch+var_28] 2C4h +
mov [esp+2Ch+var_2C] offset a____Binutil_18 +
call sub_40C6C0  +
mov eax [ebp+4] +
mov edx [eax+30h] +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_10] edx +
mov eax [eax] +
mov [esp+2Ch+var_2C] eax +
call sub_4105B0  +
lea ecx [esi+8] +
mov edx [esp+2Ch+var_10] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] eax +
call edx  +
mov eax [ebp+4] +
mov ecx [eax+3Ch] +
lea eax [esi+6] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+3Ch] +
mov edx [eax+24h] +
mov eax 0AAAAAAABh +
mul  edx +
shr edx 3 +
sub edx 1 +
mov [esp+2Ch+var_2C] edx +
call ecx  +
add esi 0Ch +
add ebx 0Ch +
add edi 4 +
cmp [esp+2Ch+var_14] ebx +
ja loc_451A20  +
sub esi [esp+2Ch+arg_10] +
mov eax [esp+2Ch+arg_8] +
cmp [eax+24h] esi +
jz loc_451AFC  +
mov [esp+2Ch+var_28] 2D0h +
mov [esp+2Ch+var_2C] offset a____Binutil_18 +
call sub_40C6C0  +
mov eax [esp+2Ch+arg_8] +
mov esi [eax+24h] +
mov eax [esp+2Ch+arg_8] +
mov eax [eax+3Ch] +
mov [esp+2Ch+var_18] esi +
mov ecx [esp+2Ch+arg_8] +
mov ecx [ecx+38h] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_20] ecx +
mov ecx [esp+2Ch+arg_10] +
mov [esp+2Ch+var_24] ecx +
call sub_410F50  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor esi esi +
jmp loc_451AD8  +
mov eax [esp+2Ch+arg_8] +
mov edx [eax+24h] +
mov eax [eax+3Ch] +
mov [esp+2Ch+var_18] edx +
jmp loc_451B07  +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_4] +
mov esi [esp+10h+arg_0] +
mov edx [ebx+20h] +
cmp dword ptr [edx+3Ch] offset off_476230 +
jz loc_451BB2  +
mov eax [ebx] +
mov edi [edx+38h] +
mov [esp+10h+var_10] eax +
call sub_4105B0  +
mov edx [ebx+20h] +
mov ecx [edx+3Ch] +
add edi eax +
cmp edi [ecx+24h] +
ja loc_451BF3  +
mov [esp+10h+var_4] 0 +
mov eax [edx+38h] +
xor edx edx +
add eax [ecx+50h] +
adc edx [ecx+54h] +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_8] edx +
call sub_4060C0  +
test eax eax +
jz loc_451BC0  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [ebx] +
mov [esp+10h+var_10] esi +
mov [esp+10h+var_C] eax +
call sub_4105C0  +
test eax eax +
jz loc_451BB0  +
mov eax [ebx] +
add ebx 4 +
mov [esp+10h+var_10] eax +
call sub_410450  +
mov [esp+10h+var_10] ebx +
call sub_40FD90  +
add esp 10h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_C] 2E2h +
mov [esp+10h+var_10] offset a____Binutil_18 +
call sub_40C6C0  +
mov edx [ebx+20h] +
mov ecx [edx+3Ch] +
jmp loc_451B89  +
***
push esi  +
push ebx  +
mov ebx [esp+arg_4] +
mov edx [esp+arg_0] +
mov ecx [esp+arg_8] +
test ebx ebx +
jz loc_451C70  +
mov eax [edx+28h] +
cmp ecx eax +
jnb loc_451C60  +
mov esi [ebx+4] +
test esi esi +
jz loc_451C70  +
mov eax ecx +
mov edx 0AAAAAAABh +
mul  edx +
mov eax 0FFFFFFFFh +
shr edx 3 +
cmp dword ptr [ebx+edx*4+8] 0FFFFFFFFh +
jz loc_451C5D  +
mov eax ecx +
sub eax [esi+edx*4] +
pop ebx  +
pop esi  +
retn   +
sub ecx eax +
mov eax [edx+24h] +
pop ebx  +
pop esi  +
add eax ecx +
retn   +
***
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
mov eax 1 +
retn   +
***
push esi  +
push ebx  +
sub esp 10Ch +
mov ebx [esp+10Ch+arg_0] +
mov esi [esp+10Ch+arg_4] +
mov eax [ebx+28h] +
shr eax 5 +
and eax 43h +
cmp eax 1 +
jz loc_451DC0  +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_108] esi +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_EC] eax +
lea eax [esp+10Ch+var_EC] +
mov [esp+10Ch+var_104] eax +
call sub_41F0A0  +
mov edx eax +
xor eax eax +
test edx edx +
cmovnz eax [esp+10Ch+var_EC] +
add esp 10Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test byte ptr [esi+14h] 4 +
jz loc_451D86  +
lea ebp [esp+10Ch+var_8C] +
xor eax eax +
mov ecx 20h +
mov edi ebp +
stos   +
mov edi [ebx+9Ch] +
lea eax [ebx+9Ch] +
mov dword ptr [ebx+9Ch] 0 +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_5C] ebx +
mov [esp+10Ch+var_58] ebx +
mov [esp+10Ch+var_54] eax +
call near ptr dword_4148F0  +
mov [esp+10Ch+var_B4] offset loc_451C80 +
mov [esp+10Ch+var_B0] offset loc_451C90 +
mov [esp+10Ch+var_AC] offset loc_451CA0 +
mov [esp+10Ch+var_A8] offset loc_451CB0 +
mov [esp+10Ch+var_A4] offset loc_451CC0 +
mov [esp+10Ch+var_70] eax +
lea eax [esp+10Ch+var_C8] +
mov [esp+10Ch+var_74] eax +
xor eax eax +
mov [esp+10Ch+var_C4] offset loc_451CD0 +
mov [esp+10Ch+var_9C] offset dword_451CE0 +
mov [esp+eax+10Ch+var_E0] 0 +
add eax 4 +
cmp eax 18h +
jb loc_451E57  +
mov edx [esp+10Ch+arg_8] +
mov eax [esi+24h] +
mov [esp+10Ch+var_DC] 1 +
mov [esp+10Ch+var_D0] esi +
test edx edx +
mov [esp+10Ch+var_D4] eax +
jz loc_451F51  +
mov eax [ebx+6Ch] +
mov [esp+10Ch+var_E8] eax +
shl eax 3 +
mov [esp+10Ch+var_10C] eax +
call malloc  +
test eax eax +
mov [esp+10Ch+var_E4] eax +
jz loc_452008  +
mov [esp+10Ch+var_F0] 0 +
lea esi [esp+10Ch+var_E8] +
mov [esp+10Ch+var_104] esi +
mov [esp+10Ch+var_108] offset dword_451CF0 +
mov [esp+10Ch+var_10C] ebx +
call sub_410E60  +
mov eax [esp+10Ch+arg_C] +
test eax eax +
jz loc_451FB9  +
mov eax [esp+10Ch+arg_C] +
mov [esp+10Ch+var_FC] 0 +
mov [esp+10Ch+var_108] ebp +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_F8] eax +
mov eax [esp+10Ch+arg_8] +
mov [esp+10Ch+var_100] eax +
lea eax [esp+10Ch+var_E0] +
mov [esp+10Ch+var_104] eax +
call sub_40CF10  +
test eax eax +
mov [esp+10Ch+var_EC] eax +
jz loc_451FA0  +
mov [esp+10Ch+var_104] esi +
mov [esp+10Ch+var_10C] ebx +
mov [esp+10Ch+var_108] offset dword_451D30 +
call sub_410E60  +
mov eax [esp+10Ch+var_E4] +
mov [esp+10Ch+var_10C] eax +
call free  +
mov [esp+10Ch+var_10C] ebx +
call sub_413BD0  +
mov eax [esp+10Ch+var_EC] +
mov [ebx+9Ch] edi +
add esp 10Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esi+28h] eax +
cmovnb eax [esi+28h] +
mov [esp+10Ch+var_10C] eax +
call sub_40EFC0  +
test eax eax +
mov [esp+10Ch+arg_8] eax +
jz loc_452008  +
mov eax [ebx+6Ch] +
mov [esp+10Ch+var_E8] eax +
shl eax 3 +
mov [esp+10Ch+var_10C] eax +
call malloc  +
test eax eax +
mov [esp+10Ch+var_E4] eax +
mov eax [esp+10Ch+arg_8] +
jz loc_452000  +
mov [esp+10Ch+var_F0] eax +
jmp loc_451EAF  +
mov eax [esp+10Ch+var_F0] +
test eax eax +
jz loc_451F14  +
mov [esp+10Ch+var_10C] eax +
call free  +
jmp loc_451F14  +
mov [esp+10Ch+var_108] ebp +
mov [esp+10Ch+var_10C] ebx +
call loc_415910  +
mov eax [ebx+4] +
mov eax [eax+104h] +
mov [esp+10Ch+var_10C] ebx +
call eax  +
mov [esp+10Ch+var_10C] eax +
call sub_40EFC0  +
mov [esp+10Ch+arg_C] eax +
mov eax [ebx+4] +
mov ecx [esp+10Ch+arg_C] +
mov eax [eax+108h] +
mov [esp+10Ch+var_108] ecx +
mov [esp+10Ch+var_10C] ebx +
call eax  +
jmp loc_451ED6  +
mov [esp+10Ch+var_10C] eax +
call free  +
mov [esp+10Ch+var_10C] ebx +
call sub_413BD0  +
xor eax eax +
mov [ebx+9Ch] edi +
jmp loc_451DB0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 5 +
mov esi [eax] +
mov [esp+10h+var_10+1] eax +
cmp esi 3 +
setbe dl  +
test ecx ecx +
setnz al  +
xor ebx ebx +
and dl al +
mov byte ptr [esp+10h+var_10] dl +
jz loc_452088  +
mov edi 4 +
jmp loc_452067  +
mov eax edi +
sub eax esi +
cmp eax 3 +
mov esi eax +
setbe al  +
add ebx 1 +
test al al +
jz loc_452088  +
cmp ecx ebx +
jbe loc_452088  +
movzx edx byte ptr [ebp+ebx+0] +
cmp esi 2 +
sbb eax eax +
not eax  +
cmp dl al +
jz loc_452098  +
test dl dl +
jz loc_452050  +
movzx eax byte ptr [esp+10h+var_10] +
xor esi esi +
add ebx 1 +
test al al +
jnz loc_452063  +
mov eax [esp+10h+var_10+1] +
mov [eax] esi +
add esp 5 +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esi 1 +
cmp esi 3 +
setbe al  +
jmp loc_45205C  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [eax+1Ch] +
mov eax [ebx+34h] +
test eax eax +
jz loc_4521B1  +
mov esi [ebx+28h] +
test esi esi +
jz loc_452125  +
mov edi edx +
sub edi [ebp+10h] +
cmp edi esi +
jnb loc_452148  +
mov edx [ebx+30h] +
sub esi edx +
cmp esi edi +
cmova esi edi +
add eax edx +
mov edx [ebp+0Ch] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] eax +
sub edx edi +
mov [esp+28h+var_24] edx +
call memcpy  +
sub edi esi +
jnz loc_452186  +
mov eax [ebx+30h] +
mov edx [ebx+28h] +
add eax esi +
cmp eax edx +
mov [ebx+30h] eax +
jz loc_452174  +
mov ecx [ebx+2Ch] +
xor eax eax +
cmp edx ecx +
jbe loc_45211D  +
add esi ecx +
mov [ebx+2Ch] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+24h] +
mov edi edx +
mov si 1 +
sub edi [ebp+10h] +
mov dword ptr [ebx+30h] 0 +
mov dword ptr [ebx+2Ch] 0 +
shl esi cl +
cmp edi esi +
mov [ebx+28h] esi +
jb loc_4520D7  +
mov edx [ebp+0Ch] +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_28] eax +
sub edx esi +
mov [esp+28h+var_24] edx +
call memcpy  +
mov eax [ebx+28h] +
mov dword ptr [ebx+30h] 0 +
mov [ebx+2Ch] eax +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [ebx+2Ch] +
xor eax eax +
mov dword ptr [ebx+30h] 0 +
cmp edx ecx +
ja loc_452118  +
jmp loc_45211D  +
mov eax [ebp+0Ch] +
mov edx [ebx+34h] +
mov [esp+28h+var_20] edi +
sub eax edi +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call memcpy  +
mov eax [ebx+28h] +
mov [ebx+30h] edi +
mov [ebx+2Ch] eax +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [ebp+20h] +
mov al 1 +
mov edi [ebp+28h] +
mov [esp+28h+var_20] 1 +
mov ecx [ebx+24h] +
mov [esp+28h+var_1C] edx +
mov [esp+28h+var_28] edi +
shl eax cl +
mov [esp+28h+var_24] eax +
call esi  +
test eax eax +
mov [ebx+34h] eax +
jz loc_4521E3  +
mov edx [esp+28h+var_1C] +
jmp loc_4520C7  +
mov eax 1 +
jmp loc_45211D  +
***
mov edx [esp+arg_0] +
test edx edx +
jz loc_452282  +
mov eax [edx+1Ch] +
test eax eax +
jz loc_452282  +
mov ecx [eax+8] +
mov dword ptr [eax+1Ch] 0 +
mov dword ptr [edx+14h] 0 +
mov dword ptr [edx+8] 0 +
test ecx ecx +
mov dword ptr [edx+18h] 0 +
jz loc_45222C  +
and ecx 1 +
mov [edx+30h] ecx +
lea edx [eax+530h] +
mov dword ptr [eax] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+0Ch] 0 +
mov dword ptr [eax+14h] 8000h +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+38h] 0 +
mov dword ptr [eax+3Ch] 0 +
mov [eax+6Ch] edx +
mov [eax+50h] edx +
mov [eax+4Ch] edx +
mov dword ptr [eax+1BC0h] 1 +
mov dword ptr [eax+1BC4h] 0FFFFFFFFh +
xor eax eax +
retn   +
mov eax 0FFFFFFFEh +
retn   +
***
mov edx [esp+arg_0] +
test edx edx +
jz loc_4522C0  +
mov eax [edx+1Ch] +
test eax eax +
jz loc_4522C0  +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
jmp loc_4521F0  +
mov eax 0FFFFFFFEh +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov edi [esp+1Ch+arg_0] +
mov ebx [esp+1Ch+arg_4] +
test edi edi +
jz loc_452350  +
mov esi [edi+1Ch] +
test esi esi +
jz loc_452350  +
test ebx ebx +
js loc_452341  +
mov ebp ebx +
mov eax ebx +
sar ebp 4 +
and eax 0Fh +
add ebp 1 +
cmp ebx 2Fh +
cmovle ebx eax +
lea eax [ebx-8] +
cmp eax 7 +
ja loc_452347  +
mov eax [esi+34h] +
test eax eax +
jz loc_45232B  +
cmp ebx [esi+24h] +
jz loc_45232B  +
mov ecx [edi+28h] +
mov edx [edi+24h] +
mov [esp+1Ch+var_18] eax +
mov [esp+1Ch+var_1C] ecx +
call edx  +
mov dword ptr [esi+34h] 0 +
mov [esi+8] ebp +
mov [esi+24h] ebx +
mov [esp+1Ch+arg_0] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_452290  +
neg ebx  +
xor ebp ebp +
jmp loc_452301  +
test ebx ebx +
jz loc_452309  +
nop   +
lea esi [esi+0] +
add esp 1Ch +
mov eax 0FFFFFFFEh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov eax [esp+10h+arg_8] +
mov ebx [esp+10h+arg_0] +
test eax eax +
jz loc_452420  +
cmp byte ptr [eax] 31h +
jnz loc_452420  +
cmp [esp+10h+arg_C] 38h +
jnz loc_452420  +
test ebx ebx +
jz loc_452467  +
mov eax [ebx+20h] +
mov dword ptr [ebx+18h] 0 +
test eax eax +
jz loc_452430  +
mov ecx [ebx+24h] +
mov edx [ebx+28h] +
test ecx ecx +
jz loc_452450  +
mov [esp+10h+var_8] 1BCCh +
mov [esp+10h+var_C] 1 +
mov [esp+10h+var_10] edx +
call eax  +
test eax eax +
mov esi eax +
jz loc_452460  +
mov [ebx+1Ch] eax +
mov dword ptr [eax+34h] 0 +
mov eax [esp+10h+arg_4] +
mov [esp+10h+var_10] ebx +
mov [esp+10h+var_C] eax +
call sub_4522D0  +
mov edi eax +
xor eax eax +
test edi edi +
jnz loc_452400  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call eax  +
mov eax edi +
mov dword ptr [ebx+1Ch] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add esp 10h +
mov eax 0FFFFFFFAh +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ecx [ebx+24h] +
xor edx edx +
mov eax offset loc_4549F0 +
mov dword ptr [ebx+20h] offset loc_4549F0 +
mov dword ptr [ebx+28h] 0 +
test ecx ecx +
jnz loc_4523B2  +
mov dword ptr [ebx+24h] offset loc_454A10 +
jmp loc_4523B2  +
mov eax 0FFFFFFFCh +
jmp loc_4523F3  +
mov eax 0FFFFFFFEh +
jmp loc_4523F3  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] 0Fh +
mov [esp+1Ch+var_10] eax +
mov eax [esp+1Ch+arg_4] +
mov [esp+1Ch+var_14] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_452360  +
add esp 1Ch +
retn   +
***
push edi  +
push esi  +
mov eax [esp+0Ch] +
mov ecx [esp+10h] +
test eax eax +
jz loc_452500  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_452500  +
test ecx ecx +
js loc_4524E6  +
cmp ecx 10h +
jg loc_452500  +
mov edi [eax+3Ch] +
lea esi [ecx+edi] +
cmp esi 20h +
ja loc_452500  +
mov edx 1 +
shl edx cl +
mov ecx edi +
sub edx 1 +
and edx [esp+14h] +
mov [eax+3Ch] esi +
shl edx cl +
add [eax+38h] edx +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
mov dword ptr [eax+38h] 0 +
mov dword ptr [eax+3Ch] 0 +
xor eax eax +
pop esi  +
pop edi  +
retn   +
***
mov eax 0FFFFFFFEh +
jmp loc_4524E3  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov eax [esp+7Ch+arg_0] +
test eax eax +
jz loc_453C10  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+1Ch] +
test eax eax +
mov [esp+7Ch+var_58] eax +
jz loc_453C10  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0Ch] +
test eax eax +
mov [esp+7Ch+var_48] eax +
jz loc_453C10  +
mov eax [esp+7Ch+arg_0] +
mov edi [eax] +
test edi edi +
jz loc_4538A0  +
mov eax [eax+4] +
mov [esp+7Ch+var_50] eax +
mov eax [esp+7Ch+var_58] +
mov eax [eax] +
cmp eax 0Bh +
jz loc_452710  +
mov ebx [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_58] +
mov [esp+7Ch+var_44] 0 +
mov ebx [ebx+10h] +
mov esi [edx+3Ch] +
mov ebp [edx+38h] +
mov ecx ebx +
mov [esp+7Ch+var_4C] ebx +
mov ebx [esp+7Ch+var_50] +
mov [esp+7Ch+var_54] ecx +
lea ecx [edx+70h] +
add edx 530h +
mov [esp+7Ch+var_30] ecx +
mov ecx esi +
mov esi ebp +
mov [esp+7Ch+var_2C] edx +
mov ebp edi +
mov edi ebx +
mov ebx ecx +
cmp eax 1Eh +
ja loc_453C10  +
jmp ds:off_492370[eax*4]  +
cmp ebx 1Fh +
ja loc_452600  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
nop   +
jmp loc_4525EA  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_4525E2  +
mov edx esi +
mov eax esi +
mov ebx [esp+7Ch+var_58] +
shr eax 18h +
shl edx 18h +
add edx eax +
mov eax esi +
shr eax 8 +
and eax 0FF00h +
add edx eax +
mov eax esi +
mov esi [esp+7Ch+arg_0] +
and eax 0FF00h +
shl eax 8 +
add eax edx +
mov [ebx+18h] eax +
mov [esi+30h] eax +
xor esi esi +
mov dword ptr [ebx] 0Ah +
xor ebx ebx +
mov eax [esp+7Ch+var_58] +
mov edx [eax+0Ch] +
test edx edx +
jz loc_454068  +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_454AC0  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov dword ptr [edx] 0Bh +
mov eax [esp+7Ch+arg_4] +
sub eax 5 +
cmp eax 1 +
jbe loc_4529B0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+4] +
test eax eax +
jnz loc_452724  +
cmp ebx 2 +
ja loc_4526C3  +
test edi edi +
jz loc_4529B0  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
sub edi 1 +
add ebx 8 +
shl eax cl +
add esi eax +
mov ecx [esp+7Ch+var_58] +
mov eax esi +
mov edx esi +
and eax 1 +
shr edx 1 +
mov [ecx+4] eax +
mov eax edx +
and eax 3 +
cmp eax 2 +
jz loc_453AC7  +
cmp eax 3 +
jz loc_453D4E  +
cmp eax 1 +
jz loc_453D10  +
mov dword ptr [ecx] 0Dh +
mov eax 0Dh +
mov esi edx +
sub ebx 3 +
shr esi 2 +
jmp loc_4525BE  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Ch +
mov eax 0Ch +
jmp loc_452579  +
mov eax [esp+7Ch+var_58] +
mov ecx ebx +
and ebx 0FFFFFFF8h +
and ecx 7 +
shr esi cl +
mov dword ptr [eax] 1Ah +
mov eax 1Ah +
jmp loc_4525C7  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+48h] +
test edx edx +
jz loc_4527A6  +
cmp ebx edx +
jnb loc_452781  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
nop   +
lea esi [esi+0] +
jmp loc_45276A  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx edx +
jb loc_452762  +
mov ebx ecx +
mov ecx edx +
mov eax 1 +
shl eax cl +
mov ecx [esp+7Ch+var_58] +
sub ebx edx +
sub eax 1 +
and eax esi +
add [ecx+44h] eax +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add [ecx+1BC4h] edx +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 18h +
mov edx [esp+7Ch+var_4C] +
test edx edx +
jz loc_4529B0  +
mov ecx [esp+7Ch+var_58] +
mov eax [esp+7Ch+var_54] +
mov ecx [ecx+44h] +
sub eax edx +
cmp eax ecx +
jnb loc_453920  +
sub ecx eax +
mov eax [esp+7Ch+var_58] +
cmp ecx [eax+2Ch] +
ja loc_453A24  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+30h] +
cmp ecx eax +
jbe loc_453C42  +
sub ecx eax +
mov eax [esp+7Ch+var_58] +
mov edx [eax+28h] +
mov eax [eax+34h] +
mov [esp+7Ch+var_40] edx +
sub [esp+7Ch+var_40] ecx +
add [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov edx [eax+40h] +
cmp ecx edx +
cmova ecx edx +
jmp loc_453933  +
mov eax [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov dword ptr [eax] 13h +
jz loc_4529B0  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 14h +
cmp edi 5 +
ja loc_453B17  +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+4Ch] +
mov dword ptr [eax+1BC4h] 0 +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [eax+54h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
mov [esp+7Ch+var_34] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_28] ax +
movzx eax dl +
cmp ebx eax +
mov [esp+7Ch+var_38] eax +
jnb loc_4528EB  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
mov ebx esi +
mov esi edi +
jmp loc_4528A8  +
test esi esi +
jz loc_453AE2  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub esi 1 +
mov edi [esp+7Ch+var_3C] +
shl eax cl +
add ecx 8 +
add ebx eax +
mov eax [esp+7Ch+var_34] +
and eax ebx +
lea eax [edi+eax*4] +
movzx edx byte ptr [eax] +
movzx edi word ptr [eax+2] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax dl +
cmp eax ecx +
mov [esp+7Ch+var_38] eax +
ja loc_4528A0  +
mov word ptr [esp+7Ch+var_28] di +
mov edi esi +
mov esi ebx +
mov ebx ecx +
cmp byte ptr [esp+7Ch+var_40] 0 +
jz loc_453BB0  +
test byte ptr [esp+7Ch+var_40] 0F0h +
jnz loc_453BB0  +
movzx ecx word ptr [esp+7Ch+var_28] +
mov [esp+7Ch+var_34] eax +
mov eax 1 +
mov [esp+7Ch+var_24] ecx +
movzx ecx byte ptr [esp+7Ch+var_40] +
add cl byte ptr [esp+7Ch+var_34] +
shl eax cl +
mov ecx edx +
sub eax 1 +
mov [esp+7Ch+var_20] eax +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_24] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_34] +
mov word ptr [esp+7Ch+var_28] cx +
add edx eax +
cmp ebx edx +
jb loc_4529A8  +
jmp loc_453F1C  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
add ebx 8 +
sub edi 1 +
shl eax cl +
movzx ecx byte ptr [esp+7Ch+var_34] +
add esi eax +
mov eax [esp+7Ch+var_20] +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_24] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_34] +
add edx eax +
cmp edx ebx +
jbe loc_453F17  +
test edi edi +
jnz loc_452960  +
lea esi [esi+0] +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
jmp loc_452B90  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+48h] +
test edx edx +
jnz loc_453996  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
mov edx [esp+7Ch+var_58] +
mov [edx+1BC8h] eax +
mov dword ptr [edx] 16h +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+50h] +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [eax+58h] +
mov eax 1 +
shl eax cl +
sub eax 1 +
mov [esp+7Ch+var_34] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_28] ax +
movzx eax dl +
cmp ebx eax +
mov [esp+7Ch+var_38] eax +
jnb loc_452A7F  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
mov ebx edi +
mov edi ebp +
jmp loc_452A3C  +
test ebx ebx +
jz loc_453814  +
add edi 1 +
movzx eax byte ptr [edi-1] +
sub ebx 1 +
mov edx [esp+7Ch+var_3C] +
shl eax cl +
add ecx 8 +
add esi eax +
mov eax [esp+7Ch+var_34] +
and eax esi +
lea eax [edx+eax*4] +
movzx edx byte ptr [eax] +
movzx ebp word ptr [eax+2] +
mov byte ptr [esp+7Ch+var_40] dl +
movzx edx byte ptr [eax+1] +
movzx eax dl +
cmp eax ecx +
mov [esp+7Ch+var_38] eax +
ja loc_452A34  +
mov word ptr [esp+7Ch+var_28] bp +
mov ebp edi +
mov edi ebx +
mov ebx ecx +
test byte ptr [esp+7Ch+var_40] 0F0h +
jnz loc_453A54  +
movzx ecx word ptr [esp+7Ch+var_28] +
mov [esp+7Ch+var_20] eax +
mov eax 1 +
mov [esp+7Ch+var_34] ecx +
movzx ecx byte ptr [esp+7Ch+var_40] +
add cl byte ptr [esp+7Ch+var_20] +
shl eax cl +
mov ecx edx +
sub eax 1 +
mov [esp+7Ch+var_24] eax +
and eax esi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_34] +
lea eax [ecx+eax*4] +
movzx edx byte ptr [eax] +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov byte ptr [esp+7Ch+var_40] dl +
mov edx [esp+7Ch+var_20] +
mov word ptr [esp+7Ch+var_28] cx +
add edx eax +
cmp ebx edx +
jnb loc_452B42  +
test edi edi +
jz loc_4529B0  +
mov eax esi +
mov edx [esp+7Ch+var_20] +
mov esi edi +
mov edi eax +
jmp loc_452AF9  +
test esi esi +
jz loc_453CDD  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
mov ecx ebx +
add ebx 8 +
sub esi 1 +
shl eax cl +
mov ecx edx +
add edi eax +
mov eax [esp+7Ch+var_24] +
and eax edi +
shr eax cl +
mov ecx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_34] +
lea eax [ecx+eax*4] +
movzx ecx byte ptr [eax] +
mov byte ptr [esp+7Ch+var_40] cl +
movzx ecx word ptr [eax+2] +
movzx eax byte ptr [eax+1] +
mov word ptr [esp+7Ch+var_28] cx +
lea ecx [eax+edx] +
cmp ecx ebx +
ja loc_452AF1  +
mov edx edi +
mov edi esi +
mov esi edx +
mov edx [esp+7Ch+var_20] +
sub ebx [esp+7Ch+var_38] +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add edx [ecx+1BC4h] +
jmp loc_453A5E  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Eh +
mov eax 0FFFFFFFCh +
lea esi [esi+0] +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
mov ebx edi +
mov [esp+7Ch+var_44] 1 +
mov edi ebp +
mov ebp esi +
mov esi eax +
lea esi [esi+0] +
mov eax [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_48] +
mov ecx eax +
mov [eax+0Ch] edx +
mov eax [esp+7Ch+var_58] +
mov [ecx+4] ebx +
mov edx [esp+7Ch+var_4C] +
mov [ecx] edi +
mov ebx [eax+28h] +
mov [ecx+10h] edx +
mov [eax+38h] ebp +
mov [eax+3Ch] esi +
test ebx ebx +
jnz loc_452BE0  +
mov ebx [esp+7Ch+var_54] +
cmp edx ebx +
jz loc_452BF8  +
mov eax [eax] +
cmp eax 1Ch +
ja loc_452BF8  +
cmp eax 19h +
jbe loc_452BE0  +
cmp [esp+7Ch+arg_4] 4 +
jz loc_452BF8  +
nop   +
lea esi [esi+0] +
mov edx [esp+7Ch+var_54] +
mov eax [esp+7Ch+arg_0] +
call sub_4520B0  +
test eax eax +
jnz loc_452B5D  +
mov eax [esp+7Ch+arg_0] +
mov ebx [esp+7Ch+var_50] +
mov esi [esp+7Ch+var_54] +
sub esi [eax+10h] +
sub ebx [eax+4] +
add [eax+14h] esi +
add [eax+8] ebx +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+8] +
add [eax+1Ch] esi +
test ecx ecx +
jz loc_452C60  +
test esi esi +
jz loc_452C60  +
mov edx [eax+10h] +
test edx edx +
jz loc_4538E0  +
mov edx [eax+18h] +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] esi +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_7C] edx +
sub eax esi +
mov [esp+7Ch+var_78] eax +
call sub_454FF0  +
mov edi [esp+7Ch+var_58] +
mov [edi+18h] eax +
mov edi [esp+7Ch+arg_0] +
mov [edi+30h] eax +
mov edi [esp+7Ch+var_58] +
cmp dword ptr [edi+4] 1 +
mov edx [edi] +
sbb eax eax +
not eax  +
and eax 40h +
add eax [edi+3Ch] +
cmp edx 0Bh +
jz loc_453820  +
cmp edx 0Eh +
jnz loc_453830  +
mov edx 100h +
mov edi [esp+7Ch+arg_0] +
add eax edx +
or esi ebx +
mov [edi+2Ch] eax +
jz loc_452CAD  +
cmp [esp+7Ch+arg_4] 4 +
mov eax [esp+7Ch+var_44] +
jnz loc_452B70  +
mov ebx [esp+7Ch+var_44] +
mov eax 0FFFFFFFBh +
test ebx ebx +
cmovnz eax ebx +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 1Fh +
ja loc_452CF2  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
jmp loc_452CDC  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_452CD4  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_452D00  +
mov [eax+4] esi +
mov eax [esp+7Ch+var_58] +
test byte ptr [eax+11h] 2 +
jnz loc_453D97  +
mov eax [esp+7Ch+var_58] +
xor esi esi +
xor ebx ebx +
mov dword ptr [eax] 3 +
jmp loc_452D8A  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 0Fh +
test eax eax +
jz loc_453908  +
mov edx [esp+7Ch+var_4C] +
cmp edi eax +
cmovbe eax edi +
cmp eax edx +
cmova eax edx +
test eax eax +
jz loc_4529B0  +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_48] +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov edx [esp+7Ch+var_40] +
mov eax [esp+7Ch+var_58] +
sub [esp+7Ch+var_4C] edx +
add [esp+7Ch+var_48] edx +
sub edi edx +
add ebp edx +
sub [eax+40h] edx +
mov eax [eax] +
jmp loc_4525BE  +
cmp ebx 0Fh +
ja loc_452DB4  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
jmp loc_452D9E  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_452D96  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_452DCF  +
mov ebx esi +
movzx edx bl +
mov [eax+8] edx +
mov edx esi +
shr edx 8 +
mov [eax+0Ch] edx +
mov eax [esp+7Ch+var_58] +
mov edx [eax+10h] +
test dh 2 +
mov eax edx +
jnz loc_453CA2  +
mov ebx [esp+7Ch+var_58] +
xor esi esi +
mov dword ptr [ebx] 4 +
xor ebx ebx +
test dh 4 +
jnz loc_45379A  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_453ADB  +
mov dword ptr [edx+10h] 0 +
xor edx edx +
mov ecx [esp+7Ch+var_58] +
mov dword ptr [ecx] 5 +
jmp loc_4534EF  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+68h] +
mov [esp+7Ch+var_38] eax +
mov ecx [esp+7Ch+var_58] +
mov eax [ecx+60h] +
mov [esp+7Ch+var_28] eax +
add eax [ecx+64h] +
mov [esp+7Ch+var_34] eax +
mov eax [esp+7Ch+var_34] +
cmp [esp+7Ch+var_38] eax +
mov eax [esp+7Ch+var_58] +
jnb loc_454033  +
mov ecx [eax+54h] +
mov edx [eax+4Ch] +
mov eax 1 +
shl eax cl +
lea eax [eax-1] +
mov [esp+7Ch+var_3C] eax +
and eax esi +
lea eax [edx+eax*4] +
movzx ecx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_40] ax +
movzx eax cl +
cmp ebx eax +
jnb loc_452ECA  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
mov ebx edx +
jmp loc_452E98  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
mov eax [esp+7Ch+var_3C] +
and eax esi +
lea eax [ebx+eax*4] +
movzx edx byte ptr [eax+1] +
movzx eax word ptr [eax+2] +
mov word ptr [esp+7Ch+var_40] ax +
movzx eax dl +
cmp eax ecx +
ja loc_452E90  +
mov ebx ecx +
mov ecx edx +
cmp word ptr [esp+7Ch+var_40] 0Fh +
jbe loc_453AA0  +
cmp word ptr [esp+7Ch+var_40] 10h +
jz loc_453EA3  +
cmp word ptr [esp+7Ch+var_40] 11h +
jz loc_453F2C  +
lea edx [eax+7] +
cmp ebx edx +
jnb loc_452F26  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_452F0D  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_452F05  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
shr esi cl +
sub ebx 7 +
mov edx esi +
and esi 7Fh +
add esi 0Bh +
xor ecx ecx +
mov [esp+7Ch+var_40] esi +
mov esi edx +
shr esi 7 +
mov eax [esp+7Ch+var_40] +
add eax [esp+7Ch+var_38] +
cmp eax [esp+7Ch+var_34] +
mov edx eax +
mov [esp+7Ch+var_40] eax +
ja loc_454289  +
mov word ptr [esp+7Ch+var_3C] cx +
mov eax [esp+7Ch+var_38] +
mov ecx [esp+7Ch+var_58] +
lea eax [ecx+eax*2+70h] +
mov ecx [esp+7Ch+var_30] +
lea edx [ecx+edx*2] +
movzx ecx word ptr [esp+7Ch+var_3C] +
mov [eax] cx +
add eax 2 +
cmp eax edx +
jnz loc_452F77  +
mov eax [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_58] +
mov [esp+7Ch+var_38] eax +
mov [edx+68h] eax +
jmp loc_452E3D  +
cmp ebx 0Fh +
ja loc_452FC6  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
jmp loc_452FAE  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_452FA6  +
mov ebx ecx +
mov edx [esp+7Ch+var_58] +
mov eax esi +
cmp al 8 +
mov [edx+10h] esi +
jz loc_453E0C  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownCompres +
mov eax 1Dh +
mov dword ptr [edx] 1Dh +
jmp loc_4525C7  +
cmp ebx 0Dh +
ja loc_453026  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
jmp loc_45300E  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Dh +
jbe loc_453006  +
mov ebx ecx +
mov ecx [esp+7Ch+var_58] +
mov edx esi +
mov eax esi +
shr edx 5 +
and eax 1Fh +
and edx 1Fh +
add eax 101h +
add edx 1 +
sub ebx 0Eh +
mov [ecx+64h] edx +
mov [ecx+60h] eax +
mov ecx esi +
shr ecx 0Ah +
and ecx 0Fh +
add ecx 4 +
mov [esp+7Ch+var_40] edx +
mov edx ecx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [esp+7Ch+var_58] +
shr esi 0Eh +
cmp eax 11Eh +
mov [ecx+5Ch] edx +
ja loc_453C20  +
cmp [esp+7Ch+var_40] 1Eh +
ja loc_453C20  +
mov eax [esp+7Ch+var_58] +
xor edx edx +
mov ecx ebx +
mov [esp+7Ch+var_40] edx +
mov dword ptr [eax+68h] 0 +
mov dword ptr [eax] 11h +
jmp loc_4530B2  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+5Ch] +
mov ecx edx +
mov [esp+7Ch+var_3C] edx +
mov edx [eax+68h] +
cmp ecx edx +
jbe loc_453108  +
mov ecx ebx +
mov [esp+7Ch+var_40] edx +
cmp ecx 2 +
ja loc_4530D0  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
add [esp+7Ch+var_40] 1 +
sub ecx 3 +
mov ebx [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_58] +
movzx eax ds:word_492C7E[ebx+ebx] +
mov [edx+68h] ebx +
mov ebx esi +
and ebx 7 +
shr esi 3 +
mov [edx+eax*2+70h] bx +
mov eax [esp+7Ch+var_40] +
cmp [esp+7Ch+var_3C] eax +
ja loc_4530B2  +
mov edx [esp+7Ch+var_40] +
mov ebx ecx +
cmp edx 12h +
mov ecx [esp+7Ch+var_58] +
lea eax dword_492C80[edx+edx] +
ja loc_453137  +
movzx edx word ptr [eax] +
add eax 2 +
cmp eax offset unk_492CA6 +
mov word ptr [ecx+edx*2+70h] 0 +
jnz loc_453118  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+68h] 13h +
mov eax [esp+7Ch+var_58] +
mov edx [esp+7Ch+var_2C] +
mov dword ptr [eax+54h] 7 +
mov [eax+6Ch] edx +
mov [eax+4Ch] edx +
mov edx eax +
add eax 2F0h +
mov [esp+7Ch+var_68] eax +
mov eax edx +
add eax 54h +
mov [esp+7Ch+var_6C] eax +
mov eax edx +
add eax 6Ch +
mov [esp+7Ch+var_70] eax +
mov eax [esp+7Ch+var_30] +
mov [esp+7Ch+var_74] 13h +
mov [esp+7Ch+var_7C] 0 +
mov [esp+7Ch+var_78] eax +
call sub_4552E0  +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_454015  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidCodeLen +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_4525C7  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+40h] +
jmp loc_452D31  +
mov eax ebx +
mov ebx edi +
mov [esp+7Ch+var_44] 0FFFFFFFDh +
mov edi ebp +
mov ebp esi +
mov esi eax +
jmp loc_452B90  +
mov ecx [esp+7Ch+var_4C] +
test ecx ecx +
jz loc_4529B0  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_48] +
sub [esp+7Ch+var_4C] 1 +
mov eax [edx+40h] +
mov [ecx] al +
lea eax [ecx+1] +
mov [esp+7Ch+var_48] eax +
mov eax 14h +
mov dword ptr [edx] 14h +
jmp loc_4525C7  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+8] +
test eax eax +
jz loc_453A01  +
cmp ebx 1Fh +
ja loc_453252  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
nop   +
jmp loc_45323A  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_453232  +
mov ebx ecx +
mov eax [esp+7Ch+var_54] +
mov ecx [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_58] +
sub eax [esp+7Ch+var_4C] +
add [ecx+14h] eax +
add [edx+1Ch] eax +
test eax eax +
jz loc_4532A6  +
mov ecx edx +
mov edx [edx+10h] +
test edx edx +
jz loc_453FF3  +
mov edx [ecx+18h] +
mov ecx [esp+7Ch+var_48] +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_7C] edx +
sub ecx eax +
mov [esp+7Ch+var_78] ecx +
call sub_454FF0  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov ecx [esp+7Ch+var_58] +
mov eax esi +
mov edx [ecx+10h] +
test edx edx +
jnz loc_4532D5  +
mov edx esi +
shr eax 18h +
shl edx 18h +
add edx eax +
mov eax esi +
shr eax 8 +
and eax 0FF00h +
add edx eax +
mov eax esi +
and eax 0FF00h +
shl eax 8 +
add eax edx +
mov edx [esp+7Ch+var_58] +
cmp eax [edx+18h] +
jz loc_4539F2  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aIncorrectDataC +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_54] eax +
mov eax 1Dh +
jmp loc_4525C7  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+8] +
test eax eax +
jz loc_453FD2  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
test eax eax +
jz loc_453FD2  +
cmp ebx 1Fh +
ja loc_453362  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
lea esi [esi+0] +
jmp loc_45334A  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_453342  +
mov ebx ecx +
mov eax [esp+7Ch+var_58] +
cmp [eax+1Ch] esi +
jz loc_4540D6  +
mov ecx [esp+7Ch+arg_0] +
mov dword ptr [ecx+18h] offset aIncorrectLengt +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_4525C7  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+8] +
test edx edx +
jz loc_453A10  +
cmp ebx 0Fh +
ja loc_4533D2  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
nop   +
jmp loc_4533BA  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_4533B2  +
mov ebx ecx +
test dl 2 +
jz loc_4533E3  +
cmp esi 8B1Fh +
jz loc_4540E3  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+10h] 0 +
mov eax [eax+20h] +
test eax eax +
jz loc_4533FC  +
mov dword ptr [eax+30h] 0FFFFFFFFh +
and edx 1 +
jz loc_453CEE  +
mov ecx esi +
mov eax esi +
shl ecx 8 +
mov edx 8421085h +
shr eax 8 +
movzx ecx cx +
add ecx eax +
mov eax ecx +
mul  edx +
mov eax ecx +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax 4 +
mov edx eax +
shl edx 5 +
sub edx eax +
cmp ecx edx +
jnz loc_453CEE  +
mov eax esi +
and eax 0Fh +
cmp eax 8 +
jz loc_45413F  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownCompres +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_4525C7  +
mov ecx ebx +
and ebx 0FFFFFFF8h +
and ecx 7 +
shr esi cl +
cmp ebx 1Fh +
ja loc_4534A2  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
jmp loc_45348A  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 1Fh +
jbe loc_453482  +
mov ebx ecx +
mov edx esi +
movzx eax si +
shr edx 10h +
xor edx 0FFFFh +
cmp eax edx +
jz loc_453E3A  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidStoredB +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_4525C7  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx eax +
and edx 400h +
test edx edx +
jz loc_453595  +
mov edx [esp+7Ch+var_58] +
mov ecx [edx+40h] +
cmp edi ecx +
mov [esp+7Ch+var_40] ecx +
cmovbe ecx edi +
mov edx ecx +
test edx edx +
mov [esp+7Ch+var_3C] ecx +
mov ecx [esp+7Ch+var_40] +
jz loc_453586  +
mov ecx [esp+7Ch+var_58] +
mov ecx [ecx+20h] +
test ecx ecx +
jz loc_453569  +
mov edx [ecx+10h] +
test edx edx +
mov [esp+7Ch+var_38] edx +
jz loc_453569  +
mov edx [ecx+18h] +
mov eax [ecx+14h] +
mov ecx [esp+7Ch+var_3C] +
sub eax [esp+7Ch+var_40] +
mov [esp+7Ch+var_78] ebp +
add ecx eax +
mov [esp+7Ch+var_40] ecx +
mov ecx edx +
sub ecx eax +
cmp [esp+7Ch+var_40] edx +
mov edx ecx +
cmovbe edx [esp+7Ch+var_3C] +
add eax [esp+7Ch+var_38] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_7C] eax +
call memcpy  +
mov ecx [esp+7Ch+var_58] +
mov eax [ecx+10h] +
test ah 2 +
jnz loc_453D70  +
mov edx [esp+7Ch+var_58] +
mov eax [esp+7Ch+var_3C] +
mov ecx [edx+40h] +
sub edi eax +
add ebp eax +
sub ecx eax +
mov [edx+40h] ecx +
test ecx ecx +
jnz loc_4529B0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov ecx [esp+7Ch+var_58] +
test ah 8 +
mov dword ptr [ecx+40h] 0 +
mov dword ptr [ecx] 6 +
jnz loc_4535D2  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_453663  +
mov dword ptr [edx+1Ch] 0 +
jmp loc_453663  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
test ah 8 +
jz loc_4535AB  +
test edi edi +
jz loc_4529B0  +
mov [esp+7Ch+var_38] esi +
xor edx edx +
mov esi [esp+7Ch+var_58] +
mov [esp+7Ch+var_40] ebp +
mov [esp+7Ch+var_3C] edi +
mov [esp+7Ch+var_34] ebx +
jmp loc_4535F8  +
cmp edx [esp+7Ch+var_3C] +
jnb loc_45362A  +
mov eax [esp+7Ch+var_40] +
add edx 1 +
movzx ecx byte ptr [eax+edx-1] +
mov eax [esi+20h] +
movzx ebp cl +
test eax eax +
jz loc_453626  +
mov edi [eax+1Ch] +
test edi edi +
jz loc_453626  +
mov ebx [esi+40h] +
cmp ebx [eax+20h] +
jnb loc_453626  +
lea eax [ebx+1] +
mov [esi+40h] eax +
mov [edi+ebx] cl +
test ebp ebp +
jnz loc_4535F2  +
mov eax [esp+7Ch+var_58] +
mov edi [esp+7Ch+var_3C] +
mov esi [esp+7Ch+var_38] +
mov [esp+7Ch+var_3C] ebp +
mov ebx [esp+7Ch+var_34] +
test byte ptr [eax+11h] 2 +
mov ebp [esp+7Ch+var_40] +
jnz loc_453BE5  +
mov eax [esp+7Ch+var_3C] +
sub edi edx +
add ebp edx +
test eax eax +
jnz loc_4529B0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx+40h] 0 +
mov dword ptr [edx] 7 +
test ah 10h +
jz loc_4538C0  +
test edi edi +
jz loc_4529B0  +
mov [esp+7Ch+var_38] esi +
xor edx edx +
mov esi [esp+7Ch+var_58] +
mov [esp+7Ch+var_40] ebp +
mov [esp+7Ch+var_3C] edi +
mov [esp+7Ch+var_34] ebx +
jmp loc_4536A6  +
cmp edx [esp+7Ch+var_3C] +
jnb loc_4536D8  +
mov eax [esp+7Ch+var_40] +
add edx 1 +
movzx ecx byte ptr [eax+edx-1] +
mov eax [esi+20h] +
movzx ebp cl +
test eax eax +
jz loc_4536D4  +
mov edi [eax+24h] +
test edi edi +
jz loc_4536D4  +
mov ebx [esi+40h] +
cmp ebx [eax+28h] +
jnb loc_4536D4  +
lea eax [ebx+1] +
mov [esi+40h] eax +
mov [edi+ebx] cl +
test ebp ebp +
jnz loc_4536A0  +
mov eax [esp+7Ch+var_58] +
mov edi [esp+7Ch+var_3C] +
mov esi [esp+7Ch+var_38] +
mov [esp+7Ch+var_3C] ebp +
mov ebx [esp+7Ch+var_34] +
test byte ptr [eax+11h] 2 +
mov ebp [esp+7Ch+var_40] +
jnz loc_453AF0  +
mov ecx [esp+7Ch+var_3C] +
sub edi edx +
add ebp edx +
test ecx ecx +
jnz loc_4529B0  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 8 +
test ah 2 +
jz loc_453844  +
cmp ebx 0Fh +
ja loc_453755  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
jmp loc_45373D  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx 0Fh +
jbe loc_453735  +
mov ebx ecx +
mov ecx [esp+7Ch+var_58] +
movzx edx word ptr [ecx+18h] +
cmp edx esi +
jz loc_453840  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aHeaderCrcMisma +
mov eax 1Dh +
mov dword ptr [ecx] 1Dh +
jmp loc_4525C7  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+10h] +
test dh 4 +
mov eax edx +
jz loc_452DF8  +
cmp ebx 0Fh +
ja loc_4537C0  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
jmp loc_4537AA  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx 0Fh +
jbe loc_4537A6  +
mov eax [esp+7Ch+var_58] +
mov [eax+40h] esi +
mov eax [eax+20h] +
test eax eax +
jz loc_4537D1  +
mov [eax+14h] esi +
test dh 2 +
jnz loc_453E5E  +
mov eax edx +
xor ebx ebx +
and edx 400h +
xor esi esi +
jmp loc_452E10  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
jmp loc_453674  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+10h] +
jmp loc_45371B  +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi ecx +
jmp loc_452B90  +
sub eax 0FFFFFF80h +
xor edx edx +
jmp loc_452C8B  +
cmp edx 13h +
jz loc_452C86  +
xor edx edx +
jmp loc_452C8B  +
xor ebx ebx +
xor esi esi +
mov edx [esp+7Ch+var_58] +
mov edx [edx+20h] +
test edx edx +
jz loc_45385F  +
sar eax 9 +
and eax 1 +
mov [edx+2Ch] eax +
mov dword ptr [edx+30h] 1 +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_454FF0  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov [edx+18h] eax +
mov [ecx+30h] eax +
mov eax 0Bh +
mov dword ptr [edx] 0Bh +
jmp loc_4525C7  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+4] +
test eax eax +
jnz loc_453C10  +
mov [esp+7Ch+var_50] 0 +
jmp loc_45256A  +
mov ecx [esp+7Ch+var_58] +
mov edx [ecx+20h] +
test edx edx +
jz loc_453711  +
mov dword ptr [edx+24h] 0 +
jmp loc_453711  +
mov eax [esp+7Ch+var_58] +
mov edx [eax+18h] +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_74] esi +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_7C] edx +
sub eax esi +
mov [esp+7Ch+var_78] eax +
call sub_454AC0  +
jmp loc_452C4F  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Bh +
mov eax 0Bh +
jmp loc_4525C7  +
mov eax [esp+7Ch+var_48] +
sub eax ecx +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov ecx [eax+40h] +
mov edx ecx +
mov eax [esp+7Ch+var_4C] +
mov [esp+7Ch+var_3C] ebx +
cmp ecx eax +
cmova ecx eax +
mov eax [esp+7Ch+var_58] +
sub edx ecx +
sub [esp+7Ch+var_4C] ecx +
mov [eax+40h] edx +
mov edx [esp+7Ch+var_48] +
mov eax [esp+7Ch+var_40] +
add ecx edx +
add eax 1 +
movzx ebx byte ptr [eax-1] +
add edx 1 +
cmp edx ecx +
mov [edx-1] bl +
jnz loc_453957  +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_48] edx +
mov ebx [esp+7Ch+var_3C] +
mov edx [eax+40h] +
test edx edx +
jz loc_453982  +
mov eax [eax] +
jmp loc_4525BE  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 14h +
mov eax 14h +
jmp loc_4525C7  +
cmp ebx edx +
jnb loc_4539C5  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
jmp loc_4539AE  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx eax byte ptr [ebp-1] +
sub edi 1 +
shl eax cl +
add ecx 8 +
add esi eax +
cmp ecx edx +
jb loc_4539A6  +
mov ebx ecx +
mov ecx edx +
mov eax 1 +
shl eax cl +
mov ecx [esp+7Ch+var_58] +
sub ebx edx +
sub eax 1 +
and eax esi +
add eax [ecx+40h] +
mov [ecx+40h] eax +
mov ecx edx +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add [ecx+1BC4h] edx +
jmp loc_4529D6  +
mov esi [esp+7Ch+var_4C] +
xor ebx ebx +
mov eax [edx+8] +
mov [esp+7Ch+var_54] esi +
xor esi esi +
mov edx [esp+7Ch+var_58] +
mov dword ptr [edx] 1Bh +
jmp loc_453317  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 0Ch +
mov eax 0Ch +
jmp loc_4525C7  +
mov eax [eax+1BC0h] +
test eax eax +
jz loc_4527E0  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDistanc +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_4525C7  +
mov edx [esp+7Ch+var_58] +
mov edx [edx+1BC4h] +
mov ecx eax +
sub ebx eax +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
add eax edx +
test byte ptr [esp+7Ch+var_40] 40h +
mov [ecx+1BC4h] eax +
jz loc_453C58  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDista_0 +
mov eax 1Dh +
mov dword ptr [ecx] 1Dh +
jmp loc_4525C7  +
mov edx [esp+7Ch+var_38] +
shr esi cl +
sub ebx eax +
mov ecx [esp+7Ch+var_58] +
mov eax edx +
add eax 1 +
mov [ecx+68h] eax +
mov [esp+7Ch+var_38] eax +
movzx eax word ptr [esp+7Ch+var_40] +
mov [ecx+edx*2+70h] ax +
jmp loc_452E3D  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 10h +
mov eax 10h +
jmp loc_4526FE  +
xor edx edx +
jmp loc_452E10  +
mov edi ebp +
mov ebp ebx +
mov ebx esi +
mov esi ecx +
jmp loc_452B90  +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_40] edx +
mov [esp+7Ch+var_7C] eax +
call sub_454FF0  +
mov edx [esp+7Ch+var_58] +
mov [edx+18h] eax +
mov edx [esp+7Ch+var_40] +
jmp loc_4536FA  +
cmp [esp+7Ch+var_4C] 101h +
jbe loc_452843  +
mov eax [esp+7Ch+arg_0] +
mov edx [esp+7Ch+var_48] +
mov [eax] ebp +
mov [eax+0Ch] edx +
mov edx [esp+7Ch+var_4C] +
mov [eax+4] edi +
mov [eax+10h] edx +
mov eax [esp+7Ch+var_58] +
mov [eax+38h] esi +
mov esi eax +
mov [eax+3Ch] ebx +
mov eax [esp+7Ch+var_54] +
mov [esp+7Ch+var_78] eax +
mov eax [esp+7Ch+arg_0] +
mov [esp+7Ch+var_7C] eax +
call sub_455840  +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+0Ch] +
mov [esp+7Ch+var_48] eax +
mov eax [esp+7Ch+arg_0] +
mov eax [eax+10h] +
mov [esp+7Ch+var_4C] eax +
mov eax [esp+7Ch+arg_0] +
mov ebp [eax] +
mov edi [eax+4] +
mov eax esi +
mov ebx [eax+3Ch] +
mov eax [eax] +
mov esi [esi+38h] +
cmp eax 0Bh +
jnz loc_4525BE  +
mov ecx [esp+7Ch+var_58] +
mov dword ptr [ecx+1BC4h] 0FFFFFFFFh +
jmp loc_4525C7  +
mov edx eax +
mov ecx eax +
sub ebx eax +
movzx eax word ptr [esp+7Ch+var_28] +
shr esi cl +
mov ecx [esp+7Ch+var_58] +
cmp byte ptr [esp+7Ch+var_40] 0 +
mov [ecx+1BC4h] edx +
mov [ecx+40h] eax +
jnz loc_453C79  +
mov dword ptr [ecx] 19h +
mov eax 19h +
jmp loc_4525C7  +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_40] edx +
mov [esp+7Ch+var_7C] eax +
call sub_454FF0  +
mov edx [esp+7Ch+var_58] +
mov [edx+18h] eax +
mov edx [esp+7Ch+var_40] +
jmp loc_45364C  +
mov eax 0FFFFFFFEh +
jmp loc_452B70  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aTooManyLengthO +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_4525C7  +
sub eax ecx +
mov [esp+7Ch+var_40] eax +
mov eax [esp+7Ch+var_58] +
mov eax [eax+34h] +
add [esp+7Ch+var_40] eax +
jmp loc_452807  +
mov edx [esp+7Ch+var_40] +
mov ecx [esp+7Ch+var_58] +
movzx eax word ptr [esp+7Ch+var_28] +
and edx 0Fh +
mov [ecx+48h] edx +
mov [ecx+44h] eax +
mov dword ptr [ecx] 17h +
jmp loc_452749  +
test byte ptr [esp+7Ch+var_40] 20h +
jz loc_453DDF  +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax+1BC4h] 0FFFFFFFFh +
mov dword ptr [eax] 0Bh +
mov eax 0Bh +
jmp loc_4525C7  +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
mov esi [esp+7Ch+var_58] +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [esi+18h] +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_7C] eax +
call sub_454FF0  +
mov edx [esi+10h] +
mov [esi+18h] eax +
mov eax edx +
jmp loc_452DE1  +
mov ecx edi +
mov eax ebx +
mov edi ebp +
mov ebx esi +
mov ebp ecx +
mov esi eax +
jmp loc_452B90  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aIncorrectHeade +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_4525C7  +
mov eax [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov dword ptr [eax+4Ch] offset unk_492480 +
mov dword ptr [eax+54h] 9 +
mov dword ptr [eax+50h] offset unk_492400 +
mov dword ptr [eax+58h] 5 +
mov dword ptr [eax] 13h +
jz loc_454274  +
mov eax 13h +
jmp loc_4526FE  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidBlockTy +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_4526FE  +
mov eax [esp+7Ch+var_58] +
mov edx [esp+7Ch+var_3C] +
mov eax [eax+18h] +
mov [esp+7Ch+var_74] edx +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] eax +
call sub_454FF0  +
mov ecx [esp+7Ch+var_58] +
mov [ecx+18h] eax +
jmp loc_453572  +
mov eax esi +
mov ebx [esp+7Ch+var_58] +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
mov eax esi +
shr eax 10h +
mov byte ptr [esp+7Ch+var_10+2] al +
mov eax esi +
shr eax 18h +
mov byte ptr [esp+7Ch+var_10+3] al +
mov eax [ebx+18h] +
lea edx [esp+7Ch+var_10] +
mov [esp+7Ch+var_74] 4 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_454FF0  +
mov [ebx+18h] eax +
jmp loc_452D0E  +
test byte ptr [esp+7Ch+var_40] 40h +
jz loc_453F85  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidLiteral +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_4525C7  +
test esi 0E000h +
jz loc_453F9E  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aUnknownHeaderF +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_4525C7  +
mov ebx [esp+7Ch+var_58] +
cmp [esp+7Ch+arg_4] 6 +
mov [ebx+40h] eax +
mov dword ptr [ebx] 0Eh +
jz loc_454267  +
xor ebx ebx +
xor esi esi +
jmp loc_452D27  +
mov ebx [esp+7Ch+var_58] +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
xor esi esi +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [ebx+18h] +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_7C] eax +
call sub_454FF0  +
mov [ebx+18h] eax +
mov eax [ebx+10h] +
xor ebx ebx +
mov edx eax +
and edx 400h +
jmp loc_452E10  +
lea edx [eax+2] +
cmp ebx edx +
jnb loc_453EE1  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_453EC8  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_453EC0  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
mov eax [esp+7Ch+var_38] +
shr esi cl +
test eax eax +
jz loc_454289  +
mov eax [esp+7Ch+var_58] +
sub ebx 2 +
mov ecx [esp+7Ch+var_38] +
movzx ecx word ptr [eax+ecx*2+6Eh] +
mov eax esi +
and eax 3 +
add eax 3 +
mov [esp+7Ch+var_40] eax +
shr esi 2 +
jmp loc_452F42  +
mov word ptr [esp+7Ch+var_28] cx +
movzx ecx byte ptr [esp+7Ch+var_34] +
sub ebx [esp+7Ch+var_38] +
shr esi cl +
jmp loc_453BB2  +
lea edx [eax+3] +
cmp ebx edx +
jnb loc_453F64  +
test edi edi +
jz loc_4529B0  +
mov ecx ebx +
mov ebx eax +
mov eax edx +
jmp loc_453F4B  +
test edi edi +
jz loc_453810  +
add ebp 1 +
movzx edx byte ptr [ebp-1] +
sub edi 1 +
shl edx cl +
add ecx 8 +
add esi edx +
cmp ecx eax +
jb loc_453F43  +
mov eax ebx +
mov ebx ecx +
mov ecx eax +
sub ebx eax +
shr esi cl +
sub ebx 3 +
mov edx esi +
and esi 7 +
add esi 3 +
xor ecx ecx +
mov [esp+7Ch+var_40] esi +
mov esi edx +
shr esi 3 +
jmp loc_452F42  +
mov edx [esp+7Ch+var_40] +
mov eax [esp+7Ch+var_58] +
and edx 0Fh +
mov [eax+48h] edx +
mov dword ptr [eax] 15h +
jmp loc_4529C7  +
mov eax [esp+7Ch+var_58] +
mov eax [eax+20h] +
test eax eax +
jz loc_453FB3  +
mov edx esi +
shr edx 8 +
and edx 1 +
mov [eax] edx +
test esi 200h +
jnz loc_4540A0  +
mov eax [esp+7Ch+var_58] +
xor ebx ebx +
xor esi esi +
mov dword ptr [eax] 2 +
jmp loc_452CC8  +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_44] 1 +
mov dword ptr [eax] 1Ch +
jmp loc_452B90  +
mov edx [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_48] +
mov edx [edx+18h] +
sub ecx eax +
mov [esp+7Ch+var_74] eax +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] edx +
call sub_454AC0  +
jmp loc_453295  +
mov eax [esp+7Ch+var_58] +
mov [esp+7Ch+var_38] 0 +
mov dword ptr [eax+68h] 0 +
mov dword ptr [eax] 12h +
jmp loc_452E2B  +
cmp dword ptr [eax] 1Dh +
jz loc_453383  +
cmp word ptr [eax+270h] 0 +
jnz loc_4541B4  +
mov edx [esp+7Ch+arg_0] +
mov dword ptr [edx+18h] offset aInvalidCodeMis +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_4525C7  +
mov eax ebx +
mov ecx [esp+7Ch+var_48] +
mov ebx edi +
mov edx [esp+7Ch+var_4C] +
mov edi ebp +
mov ebp esi +
mov esi eax +
mov eax [esp+7Ch+arg_0] +
mov [eax+0Ch] ecx +
mov [eax+10h] edx +
mov [eax] edi +
mov [eax+4] ebx +
mov eax [esp+7Ch+var_58] +
mov [eax+38h] ebp +
mov [eax+3Ch] esi +
mov eax 2 +
jmp loc_452B70  +
mov eax esi +
mov byte ptr [esp+7Ch+var_10] al +
mov eax esi +
mov esi [esp+7Ch+var_58] +
shr eax 8 +
mov byte ptr [esp+7Ch+var_10+1] al +
lea edx [esp+7Ch+var_10] +
mov eax [esi+18h] +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_454FF0  +
mov [esi+18h] eax +
jmp loc_453FBF  +
mov ebx edi +
xor esi esi +
mov edi ebp +
xor ebp ebp +
jmp loc_453FDC  +
mov [esp+7Ch+var_74] 0 +
xor ebx ebx +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_454FF0  +
mov esi [esp+7Ch+var_58] +
lea edx [esp+7Ch+var_10] +
mov byte ptr [esp+7Ch+var_10] 1Fh +
mov byte ptr [esp+7Ch+var_10+1] 8Bh +
mov [esi+18h] eax +
mov [esp+7Ch+var_74] 2 +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] eax +
call sub_454FF0  +
mov dword ptr [esi] 1 +
mov [esi+18h] eax +
mov eax 1 +
xor esi esi +
jmp loc_4525C7  +
mov eax [esp+7Ch+var_58] +
shr esi 4 +
mov ecx esi +
and ecx 0Fh +
add ecx 8 +
mov eax [eax+24h] +
test eax eax +
jnz loc_45423A  +
mov eax [esp+7Ch+var_58] +
mov [eax+24h] ecx +
mov ebx [esp+7Ch+var_58] +
mov eax 1 +
shl eax cl +
mov [ebx+14h] eax +
mov [esp+7Ch+var_74] 0 +
mov [esp+7Ch+var_78] 0 +
mov [esp+7Ch+var_7C] 0 +
call sub_454AC0  +
mov edx [esp+7Ch+arg_0] +
mov [ebx+18h] eax +
mov [edx+30h] eax +
mov eax esi +
and eax 200h +
cmp eax 1 +
sbb eax eax +
xor esi esi +
and eax 2 +
add eax 9 +
mov [ebx] eax +
xor ebx ebx +
jmp loc_4525BE  +
mov eax [esp+7Ch+var_58] +
mov ecx [esp+7Ch+var_2C] +
lea edx [eax+2F0h] +
mov [eax+6Ch] ecx +
mov [eax+4Ch] ecx +
lea ecx [eax+6Ch] +
add eax 54h +
mov dword ptr [eax] 9 +
mov [esp+7Ch+var_3C] edx +
mov [esp+7Ch+var_68] edx +
mov edx [esp+7Ch+var_30] +
mov [esp+7Ch+var_70] ecx +
mov [esp+7Ch+var_40] ecx +
mov ecx [esp+7Ch+var_28] +
mov [esp+7Ch+var_6C] eax +
mov [esp+7Ch+var_78] edx +
mov [esp+7Ch+var_7C] 1 +
mov [esp+7Ch+var_74] ecx +
call sub_4552E0  +
mov ecx [esp+7Ch+var_40] +
mov edx [esp+7Ch+var_3C] +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_4542A6  +
mov eax [esp+7Ch+var_58] +
mov ecx [esp+7Ch+arg_0] +
mov dword ptr [ecx+18h] offset aInvalidLiter_0 +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_4525C7  +
cmp ecx eax +
jbe loc_454160  +
mov eax [esp+7Ch+arg_0] +
sub ebx 4 +
mov dword ptr [eax+18h] offset aInvalidWindowS +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_4525C7  +
mov ebx edi +
xor esi esi +
mov edi ebp +
xor ebp ebp +
jmp loc_452B90  +
mov eax ebx +
mov ebx edi +
mov edi ebp +
mov ebp esi +
mov esi eax +
shr ebp 3 +
sub esi 3 +
jmp loc_452B90  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidBitLeng +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
jmp loc_453383  +
mov [esp+7Ch+var_40] ebx +
mov ebx [esp+7Ch+var_58] +
mov eax [ebx+6Ch] +
mov dword ptr [ebx+58h] 6 +
mov [ebx+50h] eax +
mov eax [ebx+64h] +
mov [esp+7Ch+var_68] edx +
mov edx ebx +
add edx 58h +
mov [esp+7Ch+var_6C] edx +
mov [esp+7Ch+var_70] ecx +
mov [esp+7Ch+var_74] eax +
mov eax [ebx+60h] +
mov [esp+7Ch+var_7C] 2 +
lea eax [ebx+eax*2+70h] +
mov [esp+7Ch+var_78] eax +
call sub_4552E0  +
mov ebx [esp+7Ch+var_40] +
test eax eax +
mov [esp+7Ch+var_44] eax +
jz loc_452818  +
mov eax [esp+7Ch+arg_0] +
mov dword ptr [eax+18h] offset aInvalidDista_1 +
mov eax [esp+7Ch+var_58] +
mov dword ptr [eax] 1Dh +
mov eax 1Dh +
jmp loc_4525C7  +
***
mov ebx [esp+18h+arg_0] +
test ebx ebx +
jz loc_454370  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_454370  +
mov edx [ebx+24h] +
test edx edx +
jz loc_454370  +
mov ecx [eax+34h] +
test ecx ecx +
jz loc_454353  +
mov eax [ebx+28h] +
mov [esp+18h+var_14] ecx +
mov [esp+18h+var_18] eax +
call edx  +
mov edx [ebx+24h] +
mov eax [ebx+1Ch] +
mov ecx [ebx+28h] +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] ecx +
call edx  +
xor eax eax +
mov dword ptr [ebx+1Ch] 0 +
add esp 18h +
pop ebx  +
retn   +
mov eax 0FFFFFFFEh +
jmp loc_454368  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
test ebx ebx +
jz loc_454430  +
mov esi [ebx+1Ch] +
test esi esi +
jz loc_454430  +
mov eax [esi+8] +
test eax eax +
jnz loc_4543E8  +
cmp dword ptr [esi] 0Ah +
jz loc_4543ED  +
mov eax [esp+34h] +
add eax [esp+38h] +
mov edx [esp+38h] +
mov ebp [ebx+0Ch] +
mov edi [ebx+10h] +
mov [ebx+0Ch] eax +
mov eax ebx +
mov dword ptr [ebx+10h] 0 +
call sub_4520B0  +
mov [ebx+10h] edi +
mov [ebx+0Ch] ebp +
test eax eax +
jnz loc_454437  +
mov dword ptr [esi+0Ch] 1 +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [esi] 0Ah +
jnz loc_454430  +
mov dword ptr [esp+8] 0 +
mov dword ptr [esp+4] 0 +
mov dword ptr [esp] 0 +
call sub_454AC0  +
mov ecx [esp+38h] +
mov [esp+8] ecx +
mov ecx [esp+34h] +
mov [esp] eax +
mov [esp+4] ecx +
call sub_454AC0  +
cmp [esi+18h] eax +
jz loc_4543AA  +
mov eax 0FFFFFFFDh +
jmp loc_4543E0  +
***
mov eax 0FFFFFFFEh +
jmp loc_4543E0  +
***
mov dword ptr [esi] 1Eh +
mov eax 0FFFFFFFCh +
jmp loc_4543E0  +
***
mov eax [esp+4] +
mov edx [esp+8] +
test eax eax +
jz loc_454476  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_454476  +
test byte ptr [eax+8] 2 +
jz loc_454476  +
mov [eax+20h] edx +
xor eax eax +
mov dword ptr [edx+30h] 0 +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+28h] +
test ebx ebx +
jz loc_454578  +
mov edi [ebx+1Ch] +
test edi edi +
jz loc_454578  +
mov ecx [ebx+4] +
test ecx ecx +
jz loc_454552  +
cmp dword ptr [edi] 1Fh +
lea esi [edi+68h] +
jz loc_454515  +
mov edx [edi+3Ch] +
mov eax [edi+38h] +
mov dword ptr [edi] 1Fh +
mov ecx edx +
and edx 0FFFFFFF8h +
and ecx 7 +
shl eax cl +
cmp edx 7 +
mov [edi+38h] eax +
mov ecx edx +
mov [edi+3Ch] edx +
jbe loc_454570  +
sub ecx 8 +
lea edx [esp+10h] +
shr ecx 3 +
mov esi edx +
lea ebp [esp+ecx+11h] +
mov [esi] al +
add esi 1 +
shr eax 8 +
cmp esi ebp +
jnz loc_4544E8  +
add ecx 1 +
mov [edi+38h] eax +
mov dword ptr [edi+3Ch] 0 +
lea esi [edi+68h] +
mov dword ptr [edi+68h] 0 +
mov eax esi +
call sub_452020  +
mov ecx [ebx+4] +
mov edx [ebx] +
mov eax esi +
call sub_452020  +
sub [ebx+4] eax +
add [ebx] eax +
add eax [ebx+8] +
cmp dword ptr [edi+68h] 4 +
mov esi eax +
mov [ebx+8] eax +
jnz loc_454563  +
mov ebp [ebx+14h] +
mov [esp] ebx +
call sub_452290  +
xor eax eax +
mov [ebx+8] esi +
mov [ebx+14h] ebp +
mov dword ptr [edi] 0Bh +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [edi+3Ch] 7 +
ja loc_4544A9  +
mov eax 0FFFFFFFBh +
jmp loc_45454A  +
***
add esp 14h +
mov eax 0FFFFFFFDh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
xor ecx ecx +
lea edx [esp+10h] +
jmp loc_454501  +
***
mov eax 0FFFFFFFEh +
jmp loc_45454A  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+40h] +
mov esi [esp+44h] +
test ebx ebx +
jz loc_4547E0  +
test esi esi +
jz loc_4547E0  +
mov ebp [esi+1Ch] +
test ebp ebp +
jz loc_4547E0  +
mov eax [esi+20h] +
test eax eax +
jz loc_4547E0  +
mov edx [esi+24h] +
test edx edx +
jz loc_4547E0  +
mov edx [esi+28h] +
mov dword ptr [esp+8] 1BCCh +
mov dword ptr [esp+4] 1 +
mov [esp] edx +
call eax  +
test eax eax +
mov edx eax +
jz loc_4547EA  +
mov eax [ebp+34h] +
test eax eax +
jz loc_4547A5  +
mov edi [esi+20h] +
mov eax 1 +
mov dword ptr [esp+8] 1 +
mov ecx [ebp+24h] +
mov [esp+1Ch] edx +
shl eax cl +
mov [esp+4] eax +
mov eax [esi+28h] +
mov [esp] eax +
call edi  +
mov edx [esp+1Ch] +
test eax eax +
mov [esp+18h] eax +
jz loc_4547F4  +
mov eax [esi] +
test dl 1 +
mov edi edx +
mov [ebx] eax +
mov eax [esi+4] +
mov [ebx+4] eax +
mov eax [esi+8] +
mov [ebx+8] eax +
mov eax [esi+0Ch] +
mov [ebx+0Ch] eax +
mov eax [esi+10h] +
mov [ebx+10h] eax +
mov eax [esi+14h] +
mov [ebx+14h] eax +
mov eax [esi+18h] +
mov [ebx+18h] eax +
mov eax [esi+1Ch] +
mov [ebx+1Ch] eax +
mov eax [esi+20h] +
mov [ebx+20h] eax +
mov eax [esi+24h] +
mov [ebx+24h] eax +
mov eax [esi+28h] +
mov [ebx+28h] eax +
mov eax [esi+2Ch] +
mov [ebx+2Ch] eax +
mov eax [esi+30h] +
mov [ebx+30h] eax +
mov eax [esi+34h] +
mov esi ebp +
mov [ebx+34h] eax +
mov eax 1BCCh +
jnz loc_4547B2  +
test edi 2 +
jnz loc_4547C8  +
mov ecx eax +
shr ecx 2 +
test al 2 +
movs   +
jnz loc_454790  +
test al 1 +
jnz loc_454770  +
mov eax [ebp+4Ch] +
lea ecx [ebp+530h] +
cmp eax ecx +
jnb loc_454740  +
mov eax [ebp+6Ch] +
mov edi [esp+18h] +
sub eax ecx +
sar eax 2 +
test edi edi +
lea eax [edx+eax*4+530h] +
mov [edx+6Ch] eax +
jz loc_454725  +
mov ecx [ebp+24h] +
mov eax 1 +
mov esi [ebp+34h] +
mov [esp] edi +
mov [esp+1Ch] edx +
shl eax cl +
mov [esp+8] eax +
mov [esp+4] esi +
call memcpy  +
mov edx [esp+1Ch] +
mov eax [esp+18h] +
mov [edx+34h] eax +
xor eax eax +
mov [ebx+1Ch] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
lea esi [ebp+1BBCh] +
cmp eax esi +
ja loc_4546E6  +
sub eax ecx +
sar eax 2 +
lea eax [edx+eax*4+530h] +
mov [edx+4Ch] eax +
mov eax [ebp+50h] +
sub eax ecx +
sar eax 2 +
lea eax [edx+eax*4+530h] +
mov [edx+50h] eax +
jmp loc_4546E6  +
***
movzx eax byte ptr [esi+ecx] +
mov [edi+ecx] al +
mov eax [ebp+4Ch] +
lea ecx [ebp+530h] +
cmp eax ecx +
jb loc_4546E6  +
jmp loc_454740  +
***
movzx ecx word ptr [esi] +
test al 1 +
mov [edi] cx +
mov ecx 2 +
jz loc_4546D9  +
jmp loc_454770  +
***
mov dword ptr [esp+18h] 0 +
jmp loc_454652  +
***
movzx eax byte ptr [ebp+0] +
lea edi [edx+1] +
lea esi [ebp+1] +
mov [edx] al +
mov eax 1BCBh +
jmp loc_4546B6  +
***
movzx ecx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] cx +
jmp loc_4546C2  +
***
mov eax 0FFFFFFFEh +
jmp loc_454731  +
***
mov eax 0FFFFFFFCh +
jmp loc_454731  +
***
mov ecx [esi+28h] +
mov eax [esi+24h] +
mov [esp+4] edx +
mov [esp] ecx +
call eax  +
mov eax 0FFFFFFFCh +
jmp loc_454731  +
***
mov eax [esp+4] +
test eax eax +
jz loc_454830  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_454830  +
mov dword ptr [eax+1BC0h] 1 +
mov eax 0FFFFFFFDh +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebx  +
mov eax [esp+8] +
test eax eax +
jz loc_454884  +
mov edx [eax+1Ch] +
test edx edx +
jz loc_454884  +
mov eax [edx+1BC4h] +
mov ecx [edx] +
shl eax 10h +
cmp ecx 0Fh +
jz loc_454870  +
xor ebx ebx +
cmp ecx 18h +
jz loc_454877  +
add eax ebx +
pop ebx  +
retn   +
***
mov ebx [edx+40h] +
add eax ebx +
jmp loc_454869  +
***
mov ebx [edx+1BC8h] +
sub ebx [edx+40h] +
add eax ebx +
jmp loc_454869  +
***
mov eax 0FFFF0000h +
pop ebx  +
retn   +
***
push ebx  +
sub esp 50h +
mov eax [esp+50h+arg_8] +
lea ebx [esp+50h+var_38] +
mov esi [esp+50h+arg_4] +
mov [esp+50h+var_18] 0 +
mov [esp+50h+var_14] 0 +
mov [esp+50h+var_38] eax +
mov eax [esp+50h+arg_C] +
mov [esp+50h+var_10] 0 +
mov [esp+50h+var_34] eax +
mov eax [esp+50h+arg_0] +
mov [esp+50h+var_2C] eax +
mov eax [esi] +
mov [esp+50h+var_44] 38h +
mov [esp+50h+var_48] offset a1_2_7_0 +
mov [esp+50h+var_50] ebx +
mov [esp+50h+var_28] eax +
mov eax [esp+50h+arg_10] +
mov [esp+50h+var_4C] eax +
call sub_458960  +
test eax eax +
jz loc_454900  +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+50h+var_4C] 4 +
mov [esp+50h+var_50] ebx +
call sub_457400  +
cmp eax 1 +
mov edi eax +
jz loc_454930  +
mov [esp+50h+var_50] ebx +
call sub_458580  +
test edi edi +
mov eax 0FFFFFFFBh +
cmovnz eax edi +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esp+50h+var_24] +
mov [esi] eax +
mov [esp+50h+var_50] ebx +
call sub_458580  +
add esp 50h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_1C] 0FFFFFFFFh +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_454890  +
add esp 2Ch +
retn   +
***
mov edx [esp+arg_0] +
mov eax edx +
shr eax 0Ch +
lea ecx [edx+eax+0Dh] +
mov eax edx +
shr eax 0Eh +
add eax ecx +
shr edx 19h +
add eax edx +
retn   +
***
mov eax offset a1_2_7_1 +
retn   +
***
mov eax 55h +
retn   +
***
mov eax 2 +
sub eax [esp+4] +
mov eax ds:off_492D60[eax*4] +
retn   +
***
jmp loc_4549F0  +
mov eax [esp+0Ch] +
imul eax [esp+8] +
mov [esp+4] eax +
jmp malloc  +
***
mov eax [esp+8] +
mov [esp+4] eax +
jmp free  +
***
push ebp  +
mov ebp 80078071h +
push edi  +
push esi  +
mov esi eax +
mov eax ecx +
push ebx  +
mov ebx edx +
imul  ebp +
mov eax ecx +
sar eax 1Fh +
sub esp 4 +
add edx ecx +
sar edx 0Fh +
sub edx eax +
movzx eax bx +
imul edx edx +
shr ebx 10h +
mov [esp] eax +
sub ecx edx +
mov edx ecx +
movzx ecx si +
mov edi edx +
imul edi ecx +
shr esi 10h +
add ebx esi +
sub ebx edx +
mov eax edi +
mul  ebp +
shr edx 0Fh +
imul edx edx +
sub edi edx +
mov edx 0FFF0h +
add ebx edi +
add ecx [esp] +
lea eax [ebx+0FFF1h] +
jz loc_454A94  +
lea edx [ecx-1] +
cmp edx 0FFF0h +
jbe loc_454A94  +
lea edx [ecx-0FFF2h] +
sub ebx 0FFF1h +
cmp eax 1FFE2h +
cmovnb eax ebx +
cmp eax 0FFF1h +
lea ecx [eax-0FFF1h] +
cmovnb eax ecx +
add esp 4 +
shl eax 10h +
pop ebx  +
or eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 38h +
mov ebp [esp+38h+arg_0] +
mov edi [esp+38h+arg_4] +
mov eax ebp +
movzx ebp bp +
shr eax 10h +
cmp [esp+38h+arg_8] 1 +
mov [esp+38h+var_C] eax +
jz loc_454CAB  +
test edi edi +
jz loc_454E69  +
cmp [esp+38h+arg_8] 0Fh +
ja loc_454B52  +
mov edx [esp+38h+arg_8] +
test edx edx +
jz loc_454B1A  +
mov edx [esp+38h+arg_8] +
mov eax [esp+38h+var_C] +
add edx edi +
add edi 1 +
movzx ecx byte ptr [edi-1] +
add ebp ecx +
add eax ebp +
cmp edi edx +
jnz loc_454B07  +
mov [esp+38h+var_C] eax +
mov eax [esp+38h+var_C] +
cmp ebp 0FFF1h +
mov edx 80078071h +
lea ecx [ebp-0FFF1h] +
cmovb ecx ebp +
mul  edx +
mov eax [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub eax edx +
shl eax 10h +
or ecx eax +
add esp 38h +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+38h+arg_8] 15AFh +
jbe loc_454CED  +
sub [esp+38h+arg_8] 15B0h +
lea eax [edi+15B0h] +
mov [esp+38h+var_8] eax +
mov eax edi +
movzx edi byte ptr [eax] +
add eax 10h +
lea ebx [ebp+edi+0] +
movzx edi byte ptr [eax-0Fh] +
mov [esp+38h+var_38] ebx +
add edi ebx +
mov ebx edi +
movzx edi byte ptr [eax-0Eh] +
mov [esp+38h+var_34] ebx +
mov esi edi +
movzx edi byte ptr [eax-0Dh] +
add esi ebx +
mov [esp+38h+var_30] esi +
mov ecx edi +
movzx edi byte ptr [eax-0Ch] +
add ecx esi +
mov [esp+38h+var_2C] ecx +
mov edx edi +
movzx edi byte ptr [eax-0Bh] +
add edx ecx +
mov [esp+38h+var_28] edx +
mov ebp edi +
movzx edi byte ptr [eax-0Ah] +
add ebp edx +
mov [esp+38h+var_24] ebp +
add edi ebp +
movzx ebp byte ptr [eax-1] +
mov ebx edi +
movzx edi byte ptr [eax-9] +
mov [esp+38h+var_20] ebx +
add edi ebx +
movzx ebx byte ptr [eax-4] +
mov esi edi +
movzx edi byte ptr [eax-8] +
mov [esp+38h+var_1C] esi +
mov ecx edi +
movzx edi byte ptr [eax-7] +
add ecx esi +
movzx esi byte ptr [eax-5] +
mov [esp+38h+var_18] ecx +
mov edx edi +
movzx edi byte ptr [eax-6] +
add edx ecx +
movzx ecx byte ptr [eax-3] +
mov [esp+38h+var_14] edx +
add edi edx +
movzx edx byte ptr [eax-2] +
add esi edi +
mov [esp+38h+var_10] edi +
mov edi [esp+38h+var_34] +
add ebx esi +
add edi [esp+38h+var_38] +
add ecx ebx +
add edi [esp+38h+var_30] +
add edx ecx +
add edi [esp+38h+var_2C] +
add ebp edx +
add edi [esp+38h+var_28] +
add edi [esp+38h+var_24] +
add edi [esp+38h+var_20] +
add edi [esp+38h+var_1C] +
add edi [esp+38h+var_18] +
add edi [esp+38h+var_14] +
add edi [esp+38h+var_10] +
add edi esi +
add edi ebx +
add ecx edi +
add edx ecx +
add edx ebp +
add [esp+38h+var_C] edx +
cmp eax [esp+38h+var_8] +
jnz loc_454B74  +
mov edi eax +
mov eax 80078071h +
mul  ebp +
mov eax 80078071h +
shr edx 0Fh +
imul edx edx +
sub ebp edx +
mul  [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub [esp+38h+var_C] edx +
cmp [esp+38h+arg_8] 15AFh +
ja loc_454B60  +
mov eax [esp+38h+arg_8] +
test eax eax +
jnz loc_454CE2  +
mov ecx [esp+38h+var_C] +
shl ecx 10h +
or ecx ebp +
add esp 38h +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edi] +
add ebp eax +
cmp ebp 0FFF1h +
lea eax [ebp-0FFF1h] +
cmovnb ebp eax +
mov eax [esp+38h+var_C] +
add eax ebp +
cmp eax 0FFF1h +
lea ecx [eax-0FFF1h] +
cmovb ecx eax +
add esp 38h +
shl ecx 10h +
or ecx ebp +
pop ebx  +
mov eax ecx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+38h+arg_8] 0Fh +
jbe loc_454E73  +
mov eax [esp+38h+arg_8] +
mov edx edi +
mov [esp+38h+arg_4] edi +
sub eax 10h +
mov [esp+38h+var_4] eax +
shr [esp+38h+var_4] 4 +
mov eax [esp+38h+var_4] +
shl eax 4 +
lea eax [edi+eax+10h] +
mov [esp+38h+var_8] eax +
movzx eax byte ptr [edx] +
add edx 10h +
add eax ebp +
mov esi eax +
movzx eax byte ptr [edx-0Fh] +
mov [esp+38h+var_38] esi +
add eax esi +
mov edi eax +
movzx eax byte ptr [edx-0Eh] +
mov [esp+38h+var_34] edi +
add eax edi +
movzx edi byte ptr [edx-4] +
mov esi eax +
movzx eax byte ptr [edx-0Dh] +
mov [esp+38h+var_30] esi +
add eax esi +
mov ebx eax +
movzx eax byte ptr [edx-0Ch] +
mov [esp+38h+var_2C] ebx +
mov ecx eax +
movzx eax byte ptr [edx-0Bh] +
add ecx ebx +
movzx ebx byte ptr [edx-7] +
mov [esp+38h+var_28] ecx +
mov ebp eax +
movzx eax byte ptr [edx-0Ah] +
add ebp ecx +
movzx ecx byte ptr [edx-6] +
mov [esp+38h+var_24] ebp +
add eax ebp +
mov esi eax +
movzx eax byte ptr [edx-9] +
mov [esp+38h+var_20] esi +
add eax esi +
movzx esi byte ptr [edx-8] +
mov [esp+38h+var_1C] eax +
add esi eax +
movzx eax byte ptr [edx-5] +
add ebx esi +
add ecx ebx +
add eax ecx +
lea ebp [eax+edi] +
movzx edi byte ptr [edx-3] +
mov [esp+38h+var_18] ebp +
add edi ebp +
mov ebp edi +
movzx edi byte ptr [edx-2] +
mov [esp+38h+var_14] ebp +
add edi ebp +
movzx ebp byte ptr [edx-1] +
mov [esp+38h+var_10] edi +
add ebp edi +
mov edi [esp+38h+var_34] +
add edi [esp+38h+var_38] +
add edi [esp+38h+var_30] +
add edi [esp+38h+var_2C] +
add edi [esp+38h+var_28] +
add edi [esp+38h+var_24] +
add edi [esp+38h+var_20] +
add edi [esp+38h+var_1C] +
add esi edi +
add ebx esi +
add ecx ebx +
add eax ecx +
add eax [esp+38h+var_18] +
add eax [esp+38h+var_14] +
add eax [esp+38h+var_10] +
add eax ebp +
add [esp+38h+var_C] eax +
cmp edx [esp+38h+var_8] +
jnz loc_454D12  +
mov esi [esp+38h+var_4] +
mov edi [esp+38h+arg_4] +
mov eax esi +
add eax 1 +
shl eax 4 +
add edi eax +
mov eax esi +
mov esi [esp+38h+arg_8] +
shl eax 4 +
neg eax  +
lea eax [esi+eax-11h] +
and esi 0Fh +
jz loc_454E34  +
lea edx [edi+eax+1] +
mov eax [esp+38h+var_C] +
add edi 1 +
movzx ecx byte ptr [edi-1] +
add ebp ecx +
add eax ebp +
cmp edi edx +
jnz loc_454E21  +
mov [esp+38h+var_C] eax +
mov ecx 80078071h +
mov eax ebp +
mul  ecx +
mov eax [esp+38h+var_C] +
shr edx 0Fh +
imul edx edx +
sub ebp edx +
mul  ecx +
shr edx 0Fh +
imul edx edx +
sub [esp+38h+var_C] edx +
mov ecx [esp+38h+var_C] +
shl ecx 10h +
or ecx ebp +
jmp loc_454CA1  +
mov ecx 1 +
jmp loc_454B48  +
mov eax [esp+38h+arg_8] +
sub eax 1 +
jmp loc_454E19  +
***
mov ecx [esp+0Ch] +
mov eax [esp+4] +
mov edx [esp+8] +
test ecx ecx +
js loc_454E95  +
jmp loc_454A20  +
***
mov eax 0FFFFFFFFh +
retn   +
***
mov ecx [esp+0Ch] +
mov eax [esp+4] +
mov edx [esp+8] +
test ecx ecx +
js loc_454EB5  +
jmp loc_454A20  +
***
mov eax 0FFFFFFFFh +
retn   +
***
push esi  +
push ebx  +
mov ecx [edx+edi*4] +
test ecx ecx +
jz loc_454EED  +
mov ebx edx +
xor esi esi +
test cl 1 +
jz loc_454ED7  +
xor esi [ebx] +
add ebx 4 +
shr ecx 1 +
jnz loc_454ED0  +
mov [eax+edi*4] esi +
add edi 1 +
cmp edi 20h +
jnz loc_454EC5  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
xor esi esi +
mov [eax+edi*4] esi +
add edi 1 +
cmp edi 20h +
jnz loc_454EC5  +
jmp loc_454EE9  +
***
push ebp  +
mov ebp ecx +
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 100h +
test ecx ecx +
jle loc_454FCD  +
mov edi edx +
mov edx 1 +
mov dword ptr [esp+80h] 0EDB88320h +
lea eax [esp+84h] +
lea ecx [esp+100h] +
mov [eax] edx +
add eax 4 +
add edx edx +
cmp eax ecx +
jnz loc_454F36  +
lea edx [esp+80h] +
mov eax esp +
call sub_454EC0  +
mov edx esp +
lea eax [esp+80h] +
call sub_454EC0  +
lea esi [esi+0] +
lea edx [esp+80h] +
mov eax esp +
call sub_454EC0  +
test ebp 1 +
jz loc_454F8E  +
test esi esi +
jz loc_454F8E  +
mov ebx esi +
mov eax esp +
xor esi esi +
test bl 1 +
jz loc_454F87  +
xor esi [eax] +
add eax 4 +
shr ebx 1 +
jnz loc_454F80  +
sar ebp 1 +
jz loc_454FC9  +
mov edx esp +
lea eax [esp+80h] +
call sub_454EC0  +
test ebp 1 +
jz loc_454FC5  +
test esi esi +
jz loc_454FC5  +
mov ebx esi +
xor esi esi +
lea eax [esp+80h] +
test bl 1 +
jz loc_454FBE  +
xor esi [eax] +
add eax 4 +
shr ebx 1 +
jnz loc_454FB7  +
sar ebp 1 +
jnz loc_454F60  +
mov eax esi +
xor eax edi +
add esp 100h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax offset dword_492DA0 +
retn   +
***
push esi  +
push ebx  +
sub esp 4 +
mov edx [esp+4+arg_4] +
mov ebp [esp+4+arg_8] +
test edx edx +
jz loc_455293  +
mov eax [esp+4+arg_0] +
test ebp ebp +
not eax  +
jnz loc_455034  +
jmp loc_455289  +
add edx 1 +
mov ecx eax +
xor cl [edx-1] +
shr eax 8 +
movzx ecx cl +
xor eax ds:dword_492DA0[ecx*4] +
sub ebp 1 +
jz loc_455289  +
test dl 3 +
jnz loc_455016  +
cmp ebp 1Fh +
jbe loc_455204  +
lea edi [ebp-20h] +
mov ebx edx +
mov [esp+4+var_4] edi +
shr [esp+4+var_4] 5 +
mov ecx [esp+4+var_4] +
mov [esp+4+arg_4] edx +
shl ecx 5 +
lea edi [edx+ecx+20h] +
lea esi [esi+0] +
xor eax [ebx] +
mov edx eax +
movzx ecx al +
shr edx 10h +
movzx esi ah +
mov ecx ds:dword_4939A0[ecx*4] +
shr eax 18h +
movzx edx dl +
xor ecx ds:dword_492DA0[eax*4] +
xor ecx [ebx+4] +
xor ecx ds:dword_4935A0[esi*4] +
xor ecx ds:dword_4931A0[edx*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_4939A0[esi*4] +
shr ecx 18h +
movzx eax al +
xor esi ds:dword_492DA0[ecx*4] +
xor esi [ebx+8] +
xor esi ds:dword_4935A0[edx*4] +
xor esi ds:dword_4931A0[eax*4] +
mov eax esi +
mov ecx esi +
movzx edx ah +
movzx ecx cl +
shr eax 10h +
mov ecx ds:dword_4939A0[ecx*4] +
shr esi 18h +
movzx eax al +
xor ecx ds:dword_492DA0[esi*4] +
xor ecx [ebx+0Ch] +
xor ecx ds:dword_4935A0[edx*4] +
xor ecx ds:dword_4931A0[eax*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_4939A0[esi*4] +
shr ecx 18h +
movzx eax al +
xor esi ds:dword_492DA0[ecx*4] +
xor esi [ebx+10h] +
xor esi ds:dword_4935A0[edx*4] +
xor esi ds:dword_4931A0[eax*4] +
mov eax esi +
mov ecx esi +
movzx edx ah +
movzx ecx cl +
shr eax 10h +
mov ecx ds:dword_4939A0[ecx*4] +
shr esi 18h +
movzx eax al +
xor ecx ds:dword_492DA0[esi*4] +
xor ecx [ebx+14h] +
xor ecx ds:dword_4935A0[edx*4] +
xor ecx ds:dword_4931A0[eax*4] +
mov eax ecx +
movzx esi cl +
shr eax 10h +
movzx edx ch +
mov esi ds:dword_4939A0[esi*4] +
movzx eax al +
shr ecx 18h +
xor esi ds:dword_492DA0[ecx*4] +
add ebx 20h +
xor esi [ebx-8] +
xor esi ds:dword_4935A0[edx*4] +
xor esi ds:dword_4931A0[eax*4] +
mov eax esi +
mov edx esi +
movzx ecx ah +
movzx edx dl +
shr eax 10h +
mov edx ds:dword_4939A0[edx*4] +
shr esi 18h +
movzx eax al +
xor edx ds:dword_492DA0[esi*4] +
xor edx [ebx-4] +
xor edx ds:dword_4935A0[ecx*4] +
xor edx ds:dword_4931A0[eax*4] +
mov ecx edx +
mov eax edx +
shr ecx 10h +
movzx esi dl +
shr eax 18h +
movzx ecx cl +
mov eax ds:dword_492DA0[eax*4] +
movzx edx dh +
xor eax ds:dword_4939A0[esi*4] +
xor eax ds:dword_4935A0[edx*4] +
xor eax ds:dword_4931A0[ecx*4] +
cmp ebx edi +
jnz loc_455060  +
mov ecx [esp+4+var_4] +
and ebp 1Fh +
mov edx [esp+4+arg_4] +
add ecx 1 +
shl ecx 5 +
add edx ecx +
cmp ebp 3 +
jbe loc_455266  +
lea edi [ebp-4] +
mov ebx edx +
mov [esp+4+var_4] edi +
shr [esp+4+var_4] 2 +
mov edi [esp+4+var_4] +
mov [esp+4+arg_4] edx +
lea edi [edx+edi*4+4] +
xor eax [ebx] +
add ebx 4 +
mov ecx eax +
mov edx eax +
shr ecx 10h +
movzx esi dl +
shr eax 18h +
movzx ecx cl +
mov eax ds:dword_492DA0[eax*4] +
movzx edx dh +
xor eax ds:dword_4939A0[esi*4] +
xor eax ds:dword_4935A0[edx*4] +
xor eax ds:dword_4931A0[ecx*4] +
cmp ebx edi +
jnz loc_455220  +
mov edx [esp+4+arg_4] +
and ebp 3 +
mov edi [esp+4+var_4] +
lea edx [edx+edi*4+4] +
test ebp ebp +
jz loc_455289  +
lea ebx [edx+ebp] +
lea esi [esi+0] +
add edx 1 +
mov ecx eax +
xor cl [edx-1] +
shr eax 8 +
movzx ecx cl +
xor eax ds:dword_492DA0[ecx*4] +
cmp edx ebx +
jnz loc_455270  +
add esp 4 +
not eax  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov eax [esp+4] +
jmp loc_454F00  +
***
jmp loc_4552C0  +
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov eax [esp+4] +
jmp loc_454F00  +
***
push esi  +
push ebx  +
sub esp 84h +
mov edi [esp+84h+arg_8] +
lea edx [esp+84h+var_40] +
lea eax [esp+84h+var_20] +
lea esi [esi+0] +
xor ebp ebp +
add edx 2 +
mov [edx-2] bp +
cmp edx eax +
jnz loc_455300  +
mov edx [esp+84h+arg_4] +
test edi edi +
lea ebx [edx+edi*2] +
jz loc_455330  +
nop   +
lea esi [esi+0] +
movzx ecx word ptr [edx] +
add edx 2 +
add word ptr [esp+ecx*2+84h+var_40] 1 +
cmp edx ebx +
jnz loc_455320  +
mov esi [esp+84h+arg_10] +
mov ecx 0Fh +
mov edx [esi] +
nop   +
cmp word ptr [esp+ecx*2+84h+var_40] 0 +
jnz loc_45539D  +
sub ecx 1 +
jnz loc_455340  +
mov eax [esp+84h+arg_C] +
xor ebx ebx +
xor esi esi +
mov edi [esp+84h+arg_C] +
mov eax [eax] +
lea edx [eax+4] +
mov [edi] edx +
mov byte ptr [eax] 40h +
mov byte ptr [eax+1] 1 +
mov [eax+2] bx +
mov eax [edi] +
lea edx [eax+4] +
mov [edi] edx +
mov byte ptr [eax] 40h +
mov byte ptr [eax+1] 1 +
mov [eax+2] si +
mov eax [esp+84h+arg_10] +
mov dword ptr [eax] 1 +
xor eax eax +
add esp 84h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx edx +
cmovbe edx ecx +
test ecx ecx +
mov [esp+84h+var_64] ecx +
mov [esp+84h+var_84] edx +
jz loc_45534D  +
cmp ecx 1 +
movzx esi word ptr [esp+84h+var_40+2] +
mov ebp 1 +
jbe loc_4553D6  +
test si si +
jnz loc_4553D6  +
mov edx [esp+84h+var_64] +
jmp loc_4553CF  +
cmp word ptr [esp+ebp*2+84h+var_40] 0 +
jnz loc_4553D6  +
add ebp 1 +
cmp ebp edx +
jnz loc_4553C7  +
lea edx [esp+84h+var_3C] +
movzx ecx si +
mov ebx 1 +
jmp loc_4553EA  +
movzx ecx word ptr [edx] +
add edx 2 +
add ebx ebx +
sub ebx ecx +
js loc_45575E  +
cmp eax edx +
jnz loc_4553E4  +
test ebx ebx +
jz loc_455416  +
cmp [esp+84h+var_64] 1 +
jnz loc_45575E  +
mov ecx [esp+84h+arg_0] +
test ecx ecx +
jz loc_45575E  +
xor edx edx +
xor ecx ecx +
mov word ptr [esp+84h+var_20+2] dx +
mov edx 1 +
jmp loc_45542B  +
movzx esi word ptr [esp+edx*2+84h+var_40] +
add edx 1 +
add ecx esi +
cmp edx 0Fh +
mov [eax+edx*2] cx +
jnz loc_455426  +
xor eax eax +
test edi edi +
jz loc_455477  +
mov [esp+84h+var_80] ebp +
mov esi [esp+84h+arg_4] +
mov ebp [esp+84h+arg_14] +
movzx ecx word ptr [esi+eax*2] +
test cx cx +
jz loc_45546C  +
movzx edx word ptr [esp+ecx*2+84h+var_20] +
lea ebx [edx+1] +
mov word ptr [esp+ecx*2+84h+var_20] bx +
mov [ebp+edx*2+0] ax +
add eax 1 +
cmp eax edi +
jnz loc_455451  +
mov ebp [esp+84h+var_80] +
mov ebx [esp+84h+arg_0] +
test ebx ebx +
jz loc_4557B9  +
cmp [esp+84h+arg_0] 1 +
mov edi 0FFFFFFFFh +
mov eax 100h +
mov ebx offset unk_494DA0 +
cmovnz eax edi +
mov edi offset unk_494DE0 +
mov [esp+84h+var_58] eax +
mov eax offset unk_494C1E +
cmovnz eax ebx +
mov [esp+84h+var_48] eax +
mov eax offset unk_494C5E +
cmovnz eax edi +
mov [esp+84h+var_4C] eax +
mov eax [esp+84h+var_84] +
cmp ebp eax +
cmovnb eax ebp +
mov edi eax +
mov [esp+84h+var_68] eax +
mov eax [esp+84h+arg_C] +
mov ecx edi +
mov eax [eax] +
mov [esp+84h+var_6C] eax +
mov eax 1 +
shl eax cl +
cmp [esp+84h+arg_0] 1 +
setz [esp+84h+var_42]  +
cmp eax 353h +
ja loc_4557AC  +
cmp [esp+84h+arg_0] 2 +
setz [esp+84h+var_41]  +
cmp eax 24Fh +
ja loc_45576E  +
mov ebx [esp+84h+arg_14] +
mov edi [esp+84h+var_68] +
mov [esp+84h+var_5C] eax +
sub eax 1 +
mov [esp+84h+var_84] ebp +
mov [esp+84h+var_70] ebx +
mov [esp+84h+var_54] 0FFFFFFFFh +
mov ebp edi +
mov [esp+84h+var_80] 0 +
mov [esp+84h+var_7C] 0 +
mov [esp+84h+var_50] eax +
lea esi [esi+0] +
mov eax [esp+84h+var_70] +
movzx edx byte ptr [esp+84h+var_84] +
sub dl byte ptr [esp+84h+var_7C] +
mov byte ptr [esp+84h+var_74] 0 +
movzx esi word ptr [eax] +
movzx eax si +
cmp [esp+84h+var_58] eax +
jg loc_455587  +
jge loc_4557A0  +
mov edi [esp+84h+var_48] +
movzx ebx byte ptr [edi+eax*2] +
mov byte ptr [esp+84h+var_74] bl +
mov ebx [esp+84h+var_4C] +
movzx esi word ptr [ebx+eax*2] +
mov ecx [esp+84h+var_84] +
mov edi 1 +
mov eax 1 +
sub ecx [esp+84h+var_7C] +
shl edi cl +
mov ecx ebp +
shl eax cl +
movzx ecx byte ptr [esp+84h+var_7C] +
mov ebx eax +
mov [esp+84h+var_60] eax +
lea eax ds:0[edi*4] +
mov [esp+84h+var_78] eax +
mov eax [esp+84h+var_80] +
neg [esp+84h+var_78]  +
shr eax cl +
mov ecx ebx +
add eax ebx +
mov ebx [esp+84h+var_6C] +
sub eax edi +
lea eax [ebx+eax*4+1] +
movzx ebx byte ptr [esp+84h+var_74] +
mov [esp+84h+var_74] ebp +
mov ebp [esp+84h+var_78] +
lea esi [esi+0] +
mov [eax-1] bl +
mov [eax] dl +
mov [eax+1] si +
add eax ebp +
sub ecx edi +
jnz loc_4555E0  +
mov eax [esp+84h+var_84] +
mov ebp [esp+84h+var_74] +
lea ecx [eax-1] +
mov eax 1 +
shl eax cl +
mov ecx eax +
mov eax [esp+84h+var_80] +
test ecx eax +
jz loc_455616  +
lea esi [esi+0] +
shr ecx 1 +
test ecx eax +
jnz loc_455610  +
test ecx ecx +
jz loc_455790  +
lea eax [ecx-1] +
and eax [esp+84h+var_80] +
add eax ecx +
mov [esp+84h+var_80] eax +
mov esi [esp+84h+var_84] +
movzx eax word ptr [esp+esi*2+84h+var_40] +
mov word ptr [esp+84h+var_78] ax +
sub eax 1 +
test ax ax +
mov word ptr [esp+esi*2+84h+var_40] ax +
jnz loc_455667  +
mov eax [esp+84h+var_64] +
cmp esi eax +
jz loc_4557D5  +
mov eax [esp+84h+var_70] +
mov ebx [esp+84h+arg_4] +
movzx eax word ptr [eax+2] +
movzx eax word ptr [ebx+eax*2] +
mov [esp+84h+var_84] eax +
mov eax [esp+84h+var_84] +
cmp [esp+84h+var_68] eax +
jnb loc_455754  +
mov ebx [esp+84h+var_80] +
and ebx [esp+84h+var_50] +
cmp ebx [esp+84h+var_54] +
jz loc_455754  +
mov edi [esp+84h+var_6C] +
mov edx 1 +
mov esi [esp+84h+var_60] +
mov eax [esp+84h+var_7C] +
lea edi [edi+esi*4] +
mov [esp+84h+var_6C] edi +
mov edi [esp+84h+var_84] +
test eax eax +
cmovz eax [esp+84h+var_68] +
mov ebp edi +
mov esi eax +
sub ebp eax +
mov ecx ebp +
shl edx cl +
mov ecx [esp+84h+var_64] +
mov [esp+84h+var_7C] eax +
cmp edi ecx +
jnb loc_4556E9  +
movzx eax word ptr [esp+edi*2+84h+var_40] +
sub edx eax +
test edx edx +
jle loc_4556E9  +
lea ecx [esp+esi*2+84h+var_40] +
mov edi [esp+84h+var_64] +
jmp loc_4556DD  +
movzx eax word ptr [ecx+ebp*2] +
sub edx eax +
test edx edx +
jle loc_4556E9  +
add ebp 1 +
add edx edx +
lea eax [esi+ebp] +
cmp eax edi +
jb loc_4556D3  +
mov eax 1 +
mov ecx ebp +
shl eax cl +
add [esp+84h+var_5C] eax +
cmp [esp+84h+var_5C] 353h +
ja loc_455818  +
cmp [esp+84h+var_5C] 24Fh +
ja loc_455828  +
mov eax [esp+84h+arg_C] +
mov ecx ebp +
lea edx ds:0[ebx*4] +
mov [esp+84h+var_54] ebx +
mov eax [eax] +
mov [eax+ebx*4] cl +
mov eax [esp+84h+arg_C] +
movzx ecx byte ptr [esp+84h+var_68] +
mov eax [eax] +
mov [eax+edx+1] cl +
mov eax [esp+84h+arg_C] +
mov ecx [eax] +
mov eax [esp+84h+var_6C] +
sub eax ecx +
sar eax 2 +
mov [ecx+edx+2] ax +
add [esp+84h+var_70] 2 +
jmp loc_455550  +
add esp 84h +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+84h+var_41] 0 +
jz loc_455515  +
add esp 84h +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+84h+var_80] 0 +
jmp loc_45562B  +
xor esi esi +
mov byte ptr [esp+84h+var_74] 60h +
jmp loc_455587  +
cmp [esp+84h+var_42] 0 +
jz loc_4554FD  +
jmp loc_455779  +
mov eax [esp+84h+arg_14] +
mov [esp+84h+var_58] 13h +
mov [esp+84h+var_48] eax +
mov [esp+84h+var_4C] eax +
jmp loc_4554C1  +
mov ecx [esp+84h+var_80] +
test ecx ecx +
jz loc_4557F4  +
mov eax [esp+84h+var_6C] +
mov ebx [esp+84h+var_80] +
lea eax [eax+ebx*4] +
mov [eax+1] dl +
xor edx edx +
mov byte ptr [eax] 40h +
mov [eax+2] dx +
mov eax [esp+84h+var_5C] +
mov esi [esp+84h+arg_C] +
mov ebx [esp+84h+var_68] +
shl eax 2 +
add [esi] eax +
mov eax [esp+84h+arg_10] +
mov [eax] ebx +
xor eax eax +
jmp loc_455392  +
cmp [esp+84h+var_42] 0 +
jz loc_455704  +
jmp loc_455779  +
cmp [esp+84h+var_41] 0 +
jz loc_455712  +
jmp loc_455779  +
***
push esi  +
push ebx  +
sub esp 44h +
mov eax [esp+44h+arg_0] +
mov eax [eax+1Ch] +
mov esi eax +
mov [esp+44h+var_38] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax] +
sub eax 1 +
mov edi eax +
mov [esp+44h+var_44] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax+4] +
lea eax [edi+eax-5] +
mov [esp+44h+var_2C] eax +
mov eax [esp+44h+arg_0] +
mov eax [eax+0Ch] +
lea edi [eax-1] +
mov eax [esp+44h+arg_0] +
mov eax [eax+10h] +
mov edx eax +
sub edx [esp+44h+arg_4] +
lea eax [edi+eax-101h] +
mov [esp+44h+var_34] eax +
mov eax esi +
lea ecx [edi+edx] +
mov edx 1 +
mov [esp+44h+var_14] ecx +
mov ecx [esi+28h] +
mov esi [esi+2Ch] +
mov [esp+44h+var_20] ecx +
mov [esp+44h+var_C] esi +
mov esi [eax+30h] +
mov [esp+44h+var_28] esi +
mov esi [eax+34h] +
mov [esp+44h+var_1C] esi +
mov esi eax +
mov eax [eax+38h] +
mov ebx [esi+4Ch] +
mov ebp [esi+3Ch] +
mov [esp+44h+var_40] ebx +
mov ebx [esi+50h] +
mov [esp+44h+var_24] ebx +
mov ecx [esi+54h] +
mov ebx edx +
shl ebx cl +
mov ecx [esi+58h] +
mov esi [esp+44h+var_1C] +
lea ebx [ebx-1] +
mov [esp+44h+var_30] ebx +
shl edx cl +
lea ebx [edx-1] +
mov [esp+44h+var_18] ebx +
lea ebx [esi-1] +
mov esi [esp+44h+var_28] +
add esi [esp+44h+var_20] +
mov [esp+44h+var_8] ebx +
mov [esp+44h+var_4] esi +
cmp ebp 0Eh +
ja loc_455929  +
mov esi [esp+44h+var_44] +
mov ecx ebp +
movzx ebx byte ptr [esi+1] +
lea esi [esi+2] +
movzx edx byte ptr [esi] +
mov [esp+44h+var_44] esi +
shl ebx cl +
lea ecx [ebp+8] +
add ebp 10h +
shl edx cl +
add edx ebx +
add eax edx +
mov edx [esp+44h+var_30] +
mov esi [esp+44h+var_40] +
and edx eax +
lea ebx [esi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl dl +
jz loc_4559A9  +
test dl 10h +
jnz loc_455A24  +
test dl 40h +
jnz loc_455BF5  +
mov [esp+44h+var_3C] edi +
mov edi [esp+44h+var_40] +
jmp loc_45597A  +
test dl 10h +
jnz loc_455A20  +
test dl 40h +
jnz loc_455BF1  +
mov ecx edx +
mov esi 1 +
shl esi cl +
mov edx esi +
sub edx 1 +
and edx eax +
add edx ebx +
lea ebx [edi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl dl +
jnz loc_455968  +
mov edi [esp+44h+var_3C] +
mov [edi+1] bl +
add edi 1 +
cmp edi [esp+44h+var_34] +
jnb loc_4559C2  +
mov ecx [esp+44h+var_2C] +
cmp [esp+44h+var_44] ecx +
jb loc_455904  +
mov edx [esp+44h+var_44] +
mov ecx ebp +
mov ebx 1 +
shr ecx 3 +
mov esi [esp+44h+arg_0] +
sub edx ecx +
shl ecx 3 +
sub ebp ecx +
mov ecx ebp +
shl ebx cl +
sub ebx 1 +
and ebx eax +
lea eax [edx+1] +
mov [esi] eax +
lea eax [edi+1] +
mov [esi+0Ch] eax +
mov eax [esp+44h+var_2C] +
sub eax edx +
add eax 5 +
mov [esi+4] eax +
mov eax [esp+44h+var_34] +
sub eax edi +
add eax 101h +
mov [esi+10h] eax +
mov eax [esp+44h+var_38] +
mov [eax+38h] ebx +
mov [eax+3Ch] ebp +
add esp 44h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+44h+var_3C] +
and edx 0Fh +
movzx ecx bx +
movzx ebx dl +
test ebx ebx +
mov [esp+44h+var_3C] ecx +
jz loc_455A68  +
cmp ebx ebp +
jbe loc_455A52  +
mov ecx [esp+44h+var_44] +
movzx esi byte ptr [ecx+1] +
mov ecx ebp +
add ebp 8 +
shl esi cl +
mov ecx [esp+44h+var_44] +
add eax esi +
lea esi [ecx+1] +
mov [esp+44h+var_44] esi +
mov ecx edx +
mov esi 1 +
shl esi cl +
sub ebp ebx +
sub esi 1 +
and esi eax +
add [esp+44h+var_3C] esi +
shr eax cl +
cmp ebp 0Eh +
jbe loc_455C10  +
mov edx [esp+44h+var_18] +
mov ecx [esp+44h+var_24] +
and edx eax +
lea ebx [ecx+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl 10h +
jnz loc_455AE1  +
test dl 40h +
jnz loc_455C56  +
mov [esp+44h+var_10] edi +
mov edi [esp+44h+var_24] +
jmp loc_455AB1  +
test dl 40h +
jnz loc_455C52  +
mov ecx edx +
mov esi 1 +
shl esi cl +
mov edx esi +
sub edx 1 +
and edx eax +
add edx ebx +
lea ebx [edi+edx*4] +
movzx ecx byte ptr [ebx+1] +
movzx edx byte ptr [ebx] +
movzx ebx word ptr [ebx+2] +
movzx esi cl +
shr eax cl +
sub ebp esi +
test dl 10h +
jz loc_455AA8  +
mov edi [esp+44h+var_10] +
movzx ecx bx +
mov ebx edx +
and ebx 0Fh +
movzx esi bl +
cmp esi ebp +
mov [esp+44h+var_10] ecx +
jbe loc_455B12  +
mov ecx [esp+44h+var_44] +
movzx edx byte ptr [ecx+1] +
mov ecx ebp +
shl edx cl +
lea ecx [ebp+8] +
add eax edx +
cmp esi ecx +
ja loc_455D51  +
add [esp+44h+var_44] 1 +
mov ebp ecx +
mov ecx ebx +
mov edx 1 +
shl edx cl +
sub ebp esi +
sub edx 1 +
and edx eax +
add edx [esp+44h+var_10] +
shr eax cl +
mov ecx edi +
sub ecx [esp+44h+var_14] +
mov [esp+44h+var_10] edx +
cmp [esp+44h+var_10] ecx +
mov edx ecx +
jbe loc_455C70  +
mov ecx [esp+44h+var_10] +
sub ecx edx +
cmp [esp+44h+var_C] ecx +
jnb loc_455B5C  +
mov esi [esp+44h+var_38] +
mov esi [esi+1BC0h] +
test esi esi +
jnz loc_455DB5  +
mov ebx [esp+44h+var_28] +
test ebx ebx +
jnz loc_455CD5  +
mov edx [esp+44h+var_20] +
sub edx ecx +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_455B95  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
nop   +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_455B80  +
mov edx edi +
sub edx [esp+44h+var_10] +
cmp [esp+44h+var_3C] 2 +
mov ecx [esp+44h+var_3C] +
jbe loc_455BC5  +
movzx ebx byte ptr [edx+1] +
add edx 3 +
sub ecx 3 +
add edi 3 +
mov [edi-2] bl +
movzx ebx byte ptr [edx-1] +
mov [edi-1] bl +
movzx ebx byte ptr [edx] +
cmp ecx 2 +
mov [edi] bl +
ja loc_455BA0  +
mov [esp+44h+var_3C] ecx +
mov ecx [esp+44h+var_3C] +
test ecx ecx +
jz loc_4559AF  +
movzx ecx byte ptr [edx+1] +
cmp [esp+44h+var_3C] 2 +
mov [edi+1] cl +
jnz loc_455DA4  +
movzx edx byte ptr [edx+2] +
add edi 2 +
mov [edi] dl +
jmp loc_4559AF  +
mov edi [esp+44h+var_3C] +
and edx 20h +
jz loc_455C38  +
mov esi [esp+44h+var_38] +
mov dword ptr [esi] 0Bh +
jmp loc_4559C2  +
mov esi [esp+44h+var_44] +
mov ecx ebp +
movzx ebx byte ptr [esi+1] +
movzx edx byte ptr [esi+2] +
shl ebx cl +
lea ecx [ebp+8] +
add ebp 10h +
shl edx cl +
mov ecx esi +
add edx ebx +
add ecx 2 +
add eax edx +
mov [esp+44h+var_44] ecx +
jmp loc_455A71  +
mov ecx [esp+44h+arg_0] +
mov esi [esp+44h+var_38] +
mov dword ptr [ecx+18h] offset aInvalidLiter_1 +
mov dword ptr [esi] 1Dh +
jmp loc_4559C2  +
mov edi [esp+44h+var_10] +
mov ecx [esp+44h+arg_0] +
mov dword ptr [ecx+18h] offset aInvalidDista_2 +
mov ecx [esp+44h+var_38] +
mov dword ptr [ecx] 1Dh +
jmp loc_4559C2  +
mov edx edi +
mov ebx [esp+44h+var_3C] +
sub edx [esp+44h+var_10] +
mov [esp+44h+var_10] eax +
jmp loc_455C84  +
mov edi ecx +
mov edx esi +
movzx ecx byte ptr [edx+1] +
sub ebx 3 +
cmp ebx 2 +
lea esi [edx+3] +
mov [edi+1] cl +
movzx ecx byte ptr [edx+2] +
mov [edi+2] cl +
movzx eax byte ptr [edx+3] +
lea ecx [edi+3] +
mov [edi+3] al +
ja loc_455C80  +
test ebx ebx +
mov eax [esp+44h+var_10] +
mov [esp+44h+var_3C] ebx +
jz loc_455D6D  +
movzx ecx byte ptr [edx+4] +
cmp ebx 2 +
mov [edi+4] cl +
jnz loc_455DAC  +
movzx edx byte ptr [edx+5] +
add edi 5 +
mov [edi] dl +
jmp loc_4559AF  +
cmp [esp+44h+var_28] ecx +
jnb loc_455D74  +
mov edx [esp+44h+var_4] +
sub edx ecx +
sub ecx [esp+44h+var_28] +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_455B95  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
lea esi [esi+0] +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_455D00  +
mov esi [esp+44h+var_3C] +
cmp [esp+44h+var_28] esi +
mov edx [esp+44h+var_8] +
jnb loc_455B95  +
mov edi [esp+44h+var_28] +
xor edx edx +
sub [esp+44h+var_3C] edi +
mov esi edi +
mov edi [esp+44h+var_1C] +
movzx ebx byte ptr [edi+edx] +
mov [ecx+edx+1] bl +
add edx 1 +
cmp edx esi +
jnz loc_455D31  +
mov edi [esp+44h+var_28] +
add edi ecx +
mov edx edi +
sub edx [esp+44h+var_10] +
jmp loc_455B95  +
mov edx [esp+44h+var_44] +
add ebp 10h +
movzx edx byte ptr [edx+2] +
shl edx cl +
add eax edx +
mov edx [esp+44h+var_44] +
lea ecx [edx+2] +
mov [esp+44h+var_44] ecx +
jmp loc_455B12  +
mov edi ecx +
jmp loc_4559AF  +
mov edx [esp+44h+var_28] +
sub edx ecx +
add edx [esp+44h+var_8] +
cmp [esp+44h+var_3C] ecx +
jbe loc_455B95  +
sub [esp+44h+var_3C] ecx +
add ecx edi +
nop   +
add edx 1 +
movzx ebx byte ptr [edx] +
add edi 1 +
cmp edi ecx +
mov [edi] bl +
jnz loc_455D90  +
jmp loc_455B8F  +
add edi 1 +
jmp loc_4559AF  +
add edi 4 +
nop   +
jmp loc_4559AF  +
mov esi [esp+44h+arg_0] +
mov dword ptr [esi+18h] offset aInvalidDista_3 +
mov esi [esp+44h+var_38] +
mov dword ptr [esi] 1Dh +
jmp loc_4559C2  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 28h +
mov ebx [eax+6Ch] +
mov [esp+2Ch+var_2C] edx +
mov edx [esi+90h] +
mov esi [esi+2Ch] +
mov ebp [eax+38h] +
mov [esp+2Ch+var_10] eax +
mov edi [eax+7Ch] +
mov eax [eax+78h] +
mov [esp+2Ch+var_14] edx +
lea edx [esi-106h] +
lea ecx [ebp+ebx+0] +
cmp ebx edx +
mov [esp+2Ch+var_18] ecx +
mov [esp+2Ch+var_28] 0 +
mov ecx eax +
jbe loc_455E23  +
lea edx [ebx+106h] +
mov [esp+2Ch+var_28] edx +
sub [esp+2Ch+var_28] esi +
mov esi [esp+2Ch+var_10] +
lea ebx [ebp+ebx+102h] +
mov [esp+2Ch+var_8] ebx +
mov edx [esi+40h] +
mov [esp+2Ch+var_24] edx +
mov edx [esi+34h] +
mov [esp+2Ch+var_20] edx +
mov edx [esp+2Ch+var_18] +
movzx ebx byte ptr [edx+eax-1] +
mov [esp+2Ch+var_1A] bl +
movzx ebx byte ptr [edx+eax] +
mov edx [esp+2Ch+var_2C] +
mov [esp+2Ch+var_1C] bl +
mov ebx edi +
shr ebx 2 +
cmp eax [esi+8Ch] +
mov eax [esi+74h] +
cmovnb edi ebx +
mov ebx [esp+2Ch+var_14] +
mov [esp+2Ch+var_C] eax +
cmp ebx eax +
cmova ebx eax +
mov [esp+2Ch+var_14] ebx +
jmp loc_455E9F  +
mov eax [esp+2Ch+var_24] +
and edx [esp+2Ch+var_20] +
movzx edx word ptr [eax+edx*2] +
cmp [esp+2Ch+var_28] edx +
jnb loc_455FC0  +
sub edi 1 +
jz loc_455FC0  +
lea eax [ebp+edx+0] +
mov esi ecx +
movzx ebx byte ptr [eax+ecx] +
mov [esp+2Ch+var_2C] eax +
movzx eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_1B] bl +
cmp bl al +
jnz loc_455E80  +
mov eax [esp+2Ch+var_2C] +
movzx ebx byte ptr [eax+ecx-1] +
cmp bl [esp+2Ch+var_1A] +
mov [esp+2Ch+var_19] bl +
jnz loc_455E80  +
mov ebx [esp+2Ch+var_18] +
movzx ebx byte ptr [ebx] +
cmp [eax] bl +
jnz loc_455E80  +
mov ebx [esp+2Ch+var_18] +
movzx ebx byte ptr [ebx+1] +
cmp [eax+1] bl +
jnz loc_455E80  +
mov esi [esp+2Ch+var_18] +
add eax 2 +
movzx ebx [esp+2Ch+var_1B] +
mov [esp+2Ch+var_2C] edx +
add esi 2 +
jmp loc_455F60  +
movzx edx byte ptr [eax+2] +
cmp [esi+2] dl +
jnz loc_45603E  +
movzx edx byte ptr [eax+3] +
cmp [esi+3] dl +
jnz loc_45602F  +
movzx edx byte ptr [eax+4] +
cmp [esi+4] dl +
jnz loc_456020  +
movzx edx byte ptr [eax+5] +
cmp [esi+5] dl +
jnz loc_456011  +
movzx edx byte ptr [eax+6] +
cmp [esi+6] dl +
jnz loc_456002  +
movzx edx byte ptr [eax+7] +
cmp [esi+7] dl +
jnz loc_455FF3  +
add eax 8 +
add esi 8 +
movzx edx byte ptr [eax] +
cmp [esi] dl +
jnz loc_455FEA  +
cmp [esp+2Ch+var_8] esi +
jbe loc_455FEA  +
movzx edx byte ptr [eax+1] +
cmp [esi+1] dl +
jz loc_455EF7  +
mov edx [esp+2Ch+var_2C] +
add esi 1 +
mov [esp+2Ch+var_1B] bl +
mov eax [esp+2Ch+var_8] +
sub esi eax +
sub eax 102h +
add esi 102h +
cmp ecx esi +
mov [esp+2Ch+var_18] eax +
jge loc_455FD1  +
mov eax [esp+2Ch+var_10] +
cmp [esp+2Ch+var_14] esi +
mov [eax+70h] edx +
jle loc_455FC0  +
mov eax [esp+2Ch+var_18] +
mov ecx esi +
movzx eax byte ptr [eax+esi-1] +
mov [esp+2Ch+var_1A] al +
mov eax [esp+2Ch+var_8] +
movzx eax byte ptr [eax+esi-102h] +
mov [esp+2Ch+var_1C] al +
jmp loc_455E80  +
mov eax [esp+2Ch+var_C] +
cmp esi eax +
cmovbe eax esi +
add esp 28h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax [esp+2Ch+var_1B] +
mov esi ecx +
mov [esp+2Ch+var_1C] al +
movzx eax [esp+2Ch+var_19] +
mov [esp+2Ch+var_1A] al +
jmp loc_455E80  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
jmp loc_455F73  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 7 +
jmp loc_455F73  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 6 +
jmp loc_455F73  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 5 +
jmp loc_455F73  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 4 +
jmp loc_455F73  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 3 +
jmp loc_455F73  +
mov [esp+2Ch+var_1B] bl +
mov edx [esp+2Ch+var_2C] +
add esi 2 +
jmp loc_455F73  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [eax+2Ch] +
mov edi [ebp+74h] +
lea ecx [eax+eax] +
mov edx eax +
mov [esp+48h+var_20] eax +
sub eax 106h +
mov [esp+48h+var_1C] ecx +
mov [esp+48h+var_24] eax +
mov ebx [ebp+3Ch] +
mov eax [ebp+6Ch] +
add edx [esp+48h+var_24] +
sub ebx edi +
sub ebx eax +
cmp eax edx +
jnb loc_4561D0  +
mov esi [ebp+0] +
mov edi [esi+4] +
test edi edi +
jz loc_456260  +
cmp ebx edi +
mov edx [ebp+38h] +
mov ecx [ebp+6Ch] +
mov eax [ebp+74h] +
jnb loc_456185  +
test ebx ebx +
jnz loc_456324  +
xor edi edi +
mov esi [ebp+16B4h] +
add edi eax +
mov [ebp+74h] edi +
lea eax [edi+esi] +
cmp eax 2 +
jbe loc_456163  +
mov ecx [ebp+58h] +
mov edx [ebp+6Ch] +
mov eax [ebp+38h] +
mov [esp+48h+var_34] ecx +
mov ecx [ebp+54h] +
sub edx esi +
movzx ebx byte ptr [eax+edx] +
mov [esp+48h+var_2C] eax +
mov [esp+48h+var_30] ecx +
mov [esp+48h+var_28] ecx +
movzx ecx byte ptr [esp+48h+var_34] +
mov [ebp+48h] ebx +
movzx eax byte ptr [eax+edx+1] +
shl ebx cl +
xor eax ebx +
and eax [esp+48h+var_30] +
mov [esp+48h+var_30] edi +
mov [ebp+48h] eax +
jmp loc_45615B  +
mov eax [esp+48h+var_2C] +
sub esi 1 +
mov ebx [ebp+48h] +
movzx ecx byte ptr [esp+48h+var_34] +
movzx eax byte ptr [eax+edx+2] +
shl ebx cl +
mov ecx [ebp+40h] +
xor eax ebx +
mov ebx [ebp+44h] +
and eax [esp+48h+var_28] +
mov [ebp+48h] eax +
lea eax [ebx+eax*2] +
mov ebx [ebp+34h] +
movzx edi word ptr [eax] +
and ebx edx +
mov [ecx+ebx*2] di +
mov [eax] dx +
mov eax [esp+48h+var_30] +
add edx 1 +
mov [ebp+16B4h] esi +
add eax esi +
cmp eax 2 +
jbe loc_45615F  +
test esi esi +
jnz loc_456110  +
mov edi [esp+48h+var_30] +
cmp edi 105h +
ja loc_456260  +
mov eax [ebp+0] +
mov eax [eax+4] +
test eax eax +
jz loc_456260  +
mov edx [ebp+2Ch] +
jmp loc_456075  +
mov [esp+48h+var_34] 0 +
add eax ecx +
lea ebx [edx+eax] +
mov eax [esp+48h+var_34] +
mov [esi+4] eax +
mov eax [esi] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_48] ebx +
mov [esp+48h+var_44] eax +
call memcpy  +
mov eax [esi+1Ch] +
mov eax [eax+18h] +
cmp eax 1 +
jz loc_4562B0  +
cmp eax 2 +
jz loc_4562CB  +
add [esi] edi +
add [esi+8] edi +
mov eax [ebp+74h] +
jmp loc_4560B4  +
mov esi [esp+48h+var_20] +
mov eax [ebp+38h] +
mov [esp+48h+var_40] esi +
lea edx [eax+esi] +
mov [esp+48h+var_44] edx +
mov [esp+48h+var_48] eax +
call memcpy  +
mov ecx esi +
mov eax [ebp+44h] +
sub [ebp+70h] esi +
sub [ebp+6Ch] esi +
sub [ebp+5Ch] esi +
mov esi [ebp+4Ch] +
mov [esp+48h+var_34] ebx +
mov ebx ecx +
lea edx [eax+esi*2] +
sub edx 2 +
movzx ecx word ptr [edx] +
xor eax eax +
mov edi ecx +
sub edi ebx +
cmp ebx ecx +
cmovbe eax edi +
sub esi 1 +
mov [edx] ax +
jnz loc_456204  +
mov eax [esp+48h+var_20] +
mov edx [esp+48h+var_1C] +
add edx [ebp+40h] +
mov esi eax +
mov ebx eax +
lea esi [esi+0] +
sub edx 2 +
movzx ecx word ptr [edx] +
xor eax eax +
mov edi ecx +
sub edi ebx +
cmp ebx ecx +
cmovbe eax edi +
sub esi 1 +
mov [edx] ax +
jnz loc_456230  +
mov esi [ebp+0] +
mov ebx [esp+48h+var_34] +
add ebx [esp+48h+var_20] +
mov edi [esi+4] +
test edi edi +
jnz loc_456099  +
nop   +
mov eax [ebp+16C0h] +
mov edx [ebp+3Ch] +
cmp eax edx +
jnb loc_4562A8  +
mov ebx [ebp+74h] +
add ebx [ebp+6Ch] +
cmp eax ebx +
jnb loc_4562E6  +
mov eax [ebp+38h] +
sub edx ebx +
mov esi 102h +
cmp edx 102h +
cmovbe esi edx +
mov [esp+48h+var_40] esi +
add eax ebx +
add ebx esi +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] eax +
call memset  +
mov [ebp+16C0h] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esi+30h] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_454AC0  +
mov [esi+30h] eax +
jmp loc_4561C3  +
mov eax [esi+30h] +
mov [esp+48h+var_40] edi +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] eax +
call sub_454FF0  +
mov [esi+30h] eax +
jmp loc_4561C3  +
lea ecx [ebx+102h] +
cmp eax ecx +
jnb loc_4562A8  +
sub ebx eax +
sub edx eax +
add ebx 102h +
cmp ebx edx +
cmova ebx edx +
add eax [ebp+38h] +
mov [esp+48h+var_40] ebx +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] eax +
call memset  +
add [ebp+16C0h] ebx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub edi ebx +
mov [esp+48h+var_34] edi +
mov edi ebx +
jmp loc_45618D  +
***
jmp sub_456340  +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov esi [eax+1Ch] +
mov [esp+10h+var_10] esi +
call sub_45A070  +
mov eax [esi+14h] +
mov edi [ebx+10h] +
cmp edi eax +
cmova edi eax +
test edi edi +
jnz loc_456370  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+10h] +
mov eax [ebx+0Ch] +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
call memcpy  +
add [ebx+0Ch] edi +
add [esi+10h] edi +
add [ebx+14h] edi +
sub [ebx+10h] edi +
sub [esi+14h] edi +
jnz loc_456362  +
mov eax [esi+8] +
mov [esi+10h] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov edi [esp+50h] +
mov ebp [edi+74h] +
nop   +
cmp ebp 105h +
jbe loc_45662E  +
mov ebx [edi+6Ch] +
mov eax [edi+38h] +
mov ecx [edi+58h] +
mov edx [edi+48h] +
mov esi [edi+34h] +
movzx eax byte ptr [eax+ebx+2] +
shl edx cl +
mov ecx [edi+40h] +
and esi ebx +
xor eax edx +
mov edx [edi+44h] +
and eax [edi+54h] +
mov [edi+48h] eax +
lea eax [edx+eax*2] +
movzx edx word ptr [eax] +
mov [ecx+esi*2] dx +
mov ecx [edi+70h] +
test edx edx +
mov [eax] bx +
mov eax [edi+60h] +
mov dword ptr [edi+60h] 2 +
mov [edi+64h] ecx +
mov [edi+78h] eax +
jz loc_456433  +
cmp eax [edi+80h] +
jnb loc_456433  +
mov ecx [edi+2Ch] +
mov esi ebx +
sub esi edx +
sub ecx 106h +
cmp esi ecx +
jbe loc_4566F0  +
cmp eax 2 +
jbe loc_4565B7  +
cmp [edi+60h] eax +
ja loc_4565B7  +
mov edx [edi+74h] +
sub eax 3 +
mov ecx [edi+16A4h] +
lea ebp [ebx+edx-3] +
mov edx [edi+16A0h] +
sub bx [edi+64h] +
lea esi [ebx-1] +
sub ebx 2 +
mov [ecx+edx*2] si +
mov ecx [edi+1698h] +
lea esi [edx+1] +
mov [edi+16A0h] esi +
mov [ecx+edx] al +
movzx eax al +
movzx eax ds:byte_495120[eax] +
add word ptr [edi+eax*4+498h] 1 +
cmp bx 0FFh +
ja loc_4566A0  +
movzx ebx bx +
movzx eax ds:byte_495220[ebx] +
add word ptr [edi+eax*4+988h] 1 +
mov eax [edi+16A0h] +
mov esi [edi+74h] +
mov [esp+18h] ebp +
mov [esp+20h] eax +
mov eax [edi+169Ch] +
add esi 1 +
mov [esp+1Ch] esi +
sub eax 1 +
mov [esp+24h] eax +
mov eax [edi+78h] +
sub [esp+1Ch] eax +
mov esi [esp+1Ch] +
lea ebx [eax-2] +
mov [esp+28h] eax +
mov eax [edi+6Ch] +
mov [edi+74h] esi +
mov [edi+78h] ebx +
mov [esp+2Ch] eax +
mov edx eax +
jmp loc_4564F6  +
mov edx eax +
lea eax [edx+1] +
cmp [esp+18h] eax +
mov [edi+6Ch] eax +
jb loc_456532  +
mov ecx [edi+38h] +
mov esi [edi+48h] +
movzx edx byte ptr [ecx+edx+3] +
mov ecx [edi+58h] +
shl esi cl +
mov ecx [edi+44h] +
xor edx esi +
mov esi [edi+34h] +
and edx [edi+54h] +
mov [edi+48h] edx +
lea edx [ecx+edx*2] +
mov ecx [edi+40h] +
movzx ebp word ptr [edx] +
and esi eax +
mov [ecx+esi*2] bp +
mov [edx] ax +
sub ebx 1 +
test ebx ebx +
mov [edi+78h] ebx +
jnz loc_4564F4  +
mov esi [esp+2Ch] +
mov eax [esp+28h] +
mov dword ptr [edi+68h] 0 +
mov ebp [esp+1Ch] +
mov dword ptr [edi+60h] 2 +
lea eax [eax+esi-1] +
mov esi [esp+24h] +
cmp [esp+20h] esi +
mov [edi+6Ch] eax +
jnz loc_4563C0  +
mov edx [edi+5Ch] +
xor ecx ecx +
sub eax edx +
test edx edx +
js loc_45657B  +
mov ecx [edi+38h] +
add ecx edx +
mov [esp+8] eax +
mov [esp+4] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp] edi +
call sub_45A170  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_456340  +
mov eax [edi] +
mov ebp [eax+10h] +
test ebp ebp +
jnz loc_4563BB  +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi [edi+68h] +
test esi esi +
jz loc_456680  +
mov eax [edi+38h] +
mov ecx [edi+16A4h] +
movzx edx byte ptr [eax+ebx-1] +
xor ebx ebx +
mov eax [edi+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [edi+1698h] +
lea ebx [eax+1] +
mov [edi+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [edi+edx*4+94h] 1 +
mov eax [edi+169Ch] +
sub eax 1 +
cmp [edi+16A0h] eax +
jz loc_4566B3  +
mov eax [edi+74h] +
add dword ptr [edi+6Ch] 1 +
lea ebp [eax-1] +
mov eax [edi] +
mov [edi+74h] ebp +
mov eax [eax+10h] +
test eax eax +
jz loc_4565AD  +
cmp ebp 105h +
ja loc_4563CC  +
mov eax edi +
call sub_456050  +
mov eax [edi+74h] +
cmp eax 105h +
ja loc_4563CC  +
mov edx [esp+54h] +
test edx edx +
jz loc_4565AD  +
test eax eax +
jz loc_456735  +
cmp eax 2 +
ja loc_4563CC  +
mov eax [edi+60h] +
mov edx [edi+70h] +
mov dword ptr [edi+60h] 2 +
mov ebx [edi+6Ch] +
mov [edi+78h] eax +
mov [edi+64h] edx +
jmp loc_456433  +
***
mov eax [edi+74h] +
add ebx 1 +
mov dword ptr [edi+68h] 1 +
mov [edi+6Ch] ebx +
lea ebp [eax-1] +
mov [edi+74h] ebp +
jmp loc_4563C0  +
***
shr bx 7 +
movzx ebx bx +
movzx eax ds:byte_495320[ebx] +
jmp loc_4564A3  +
***
mov edx [edi+5Ch] +
xor ecx ecx +
mov eax [edi+6Ch] +
sub eax edx +
test edx edx +
js loc_4566C6  +
mov ecx [edi+38h] +
add ecx edx +
mov [esp+8] eax +
mov dword ptr [esp+0Ch] 0 +
mov [esp+4] ecx +
mov [esp] edi +
call sub_45A170  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_456340  +
jmp loc_45660C  +
***
mov eax edi +
call sub_455DD0  +
cmp eax 5 +
mov [edi+60h] eax +
ja loc_45670D  +
cmp dword ptr [edi+88h] 1 +
jz loc_456718  +
cmp eax 3 +
jz loc_456724  +
mov ebx [edi+6Ch] +
mov eax [edi+78h] +
jmp loc_456433  +
***
mov ebx [edi+6Ch] +
mov dword ptr [edi+60h] 2 +
jmp loc_456710  +
***
mov ebx [edi+6Ch] +
mov eax ebx +
sub eax [edi+70h] +
cmp eax 1000h +
jbe loc_456710  +
jmp loc_45671B  +
***
mov esi [edi+68h] +
test esi esi +
jnz loc_4567B8  +
mov edx [edi+6Ch] +
mov eax 2 +
cmp edx 2 +
cmovbe eax edx +
cmp dword ptr [esp+54h] 4 +
mov [edi+16B4h] eax +
jz loc_4567FC  +
mov ecx [edi+16A0h] +
mov eax 1 +
test ecx ecx +
jz loc_4565AF  +
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_45677E  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] edi +
mov dword ptr [esp+0Ch] 0 +
call sub_45A170  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_456340  +
mov eax [edi] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
add esp 3Ch +
pop ebx  +
movzx eax al +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+6Ch] +
xor ebx ebx +
mov edx [edi+38h] +
mov ecx [edi+16A4h] +
movzx edx byte ptr [edx+eax-1] +
mov eax [edi+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [edi+1698h] +
lea ebx [eax+1] +
mov [edi+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [edi+edx*4+94h] 1 +
mov dword ptr [edi+68h] 0 +
jmp loc_45673C  +
***
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_45680C  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] edi +
mov dword ptr [esp+0Ch] 1 +
call sub_45A170  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_456340  +
mov eax [edi] +
cmp dword ptr [eax+10h] 1 +
sbb eax eax +
add esp 3Ch +
pop ebx  +
add eax 3 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov edi [esp+60h] +
nop   +
lea esi [esi+0] +
cmp dword ptr [edi+74h] 105h +
jbe loc_456AF0  +
mov ebx [edi+6Ch] +
mov eax [edi+38h] +
mov ecx [edi+58h] +
mov edx [edi+48h] +
mov esi [edi+34h] +
movzx eax byte ptr [eax+ebx+2] +
shl edx cl +
mov ecx [edi+40h] +
and esi ebx +
xor eax edx +
mov edx [edi+44h] +
and eax [edi+54h] +
mov [edi+48h] eax +
lea eax [edx+eax*2] +
movzx edx word ptr [eax] +
test edx edx +
mov [ecx+esi*2] dx +
mov [eax] bx +
jz loc_4568B8  +
mov eax [edi+2Ch] +
mov ecx ebx +
sub ecx edx +
sub eax 106h +
cmp ecx eax +
jbe loc_456B40  +
mov eax [edi+60h] +
cmp eax 2 +
jbe loc_456A60  +
mov edx [edi+16A0h] +
sub eax 3 +
mov ecx [edi+16A4h] +
sub bx [edi+70h] +
lea esi [edx+1] +
mov [ecx+edx*2] bx +
mov ecx [edi+1698h] +
sub ebx 1 +
mov [edi+16A0h] esi +
mov [ecx+edx] al +
movzx eax al +
movzx eax ds:byte_495120[eax] +
add word ptr [edi+eax*4+498h] 1 +
cmp bx 0FFh +
ja loc_456B26  +
movzx ebx bx +
movzx eax ds:byte_495220[ebx] +
add word ptr [edi+eax*4+988h] 1 +
mov eax [edi+169Ch] +
mov esi [edi+60h] +
sub eax 1 +
cmp [edi+16A0h] eax +
setz al  +
movzx eax al +
mov [esp+1Ch] eax +
mov eax [edi+74h] +
sub eax esi +
cmp esi [edi+80h] +
mov [edi+74h] eax +
ja loc_456AC0  +
cmp eax 2 +
jbe loc_456AC0  +
mov ecx [edi+40h] +
lea ebx [esi-1] +
mov eax [edi+6Ch] +
mov edx [edi+54h] +
mov [edi+60h] ebx +
mov ebp [edi+48h] +
mov [esp+20h] ecx +
mov ecx [edi+34h] +
mov [esp+38h] eax +
mov [esp+30h] edx +
lea edx [eax+1] +
mov [esp+3Ch] esi +
mov [esp+24h] ecx +
mov ecx [edi+44h] +
mov [esp+18h] ebx +
mov [esp+28h] ecx +
mov ecx [edi+38h] +
mov [esp+2Ch] ecx +
mov ecx [edi+58h] +
mov [esp+34h] ecx +
jmp loc_4569A7  +
mov [esp+18h] ebx +
mov ebp eax +
mov eax [esp+2Ch] +
movzx ecx byte ptr [esp+34h] +
mov [edi+6Ch] edx +
mov esi [esp+28h] +
movzx eax byte ptr [eax+edx+2] +
shl ebp cl +
mov ecx [esp+20h] +
xor eax ebp +
mov ebp [esp+24h] +
and eax [esp+30h] +
lea esi [esi+eax*2] +
and ebp edx +
movzx ebx word ptr [esi] +
mov [edi+48h] eax +
mov [ecx+ebp*2] bx +
mov ebx [esp+18h] +
mov [esi] dx +
add edx 1 +
sub ebx 1 +
test ebx ebx +
mov [edi+60h] ebx +
jnz loc_4569A1  +
mov esi [esp+3Ch] +
mov eax [esp+38h] +
add eax esi +
mov [edi+6Ch] eax +
lea esi [esi+0] +
mov esi [esp+1Ch] +
test esi esi +
jz loc_456860  +
mov edx [edi+5Ch] +
xor ecx ecx +
mov eax [edi+6Ch] +
sub eax edx +
test edx edx +
js loc_456A1F  +
mov ecx [edi+38h] +
add ecx edx +
mov [esp+8] eax +
mov [esp+4] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp] edi +
call sub_45A170  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_456340  +
mov eax [edi] +
mov ebx [eax+10h] +
test ebx ebx +
jnz loc_456860  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+38h] +
xor ebp ebp +
mov ecx [edi+16A4h] +
movzx edx byte ptr [eax+ebx] +
mov eax [edi+16A0h] +
mov [ecx+eax*2] bp +
mov ecx [edi+1698h] +
lea ebx [eax+1] +
mov [edi+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [edi+edx*4+94h] 1 +
mov eax [edi+169Ch] +
sub eax 1 +
cmp [edi+16A0h] eax +
setz al  +
movzx eax al +
mov [esp+1Ch] eax +
sub dword ptr [edi+74h] 1 +
add dword ptr [edi+6Ch] 1 +
jmp loc_456A00  +
***
mov eax [edi+6Ch] +
mov ecx [edi+38h] +
mov dword ptr [edi+60h] 0 +
add eax esi +
mov [edi+6Ch] eax +
movzx edx byte ptr [ecx+eax] +
mov [edi+48h] edx +
movzx eax byte ptr [ecx+eax+1] +
mov ecx [edi+58h] +
shl edx cl +
xor eax edx +
and eax [edi+54h] +
mov [edi+48h] eax +
jmp loc_456A00  +
***
mov eax edi +
call sub_456050  +
mov eax [edi+74h] +
cmp eax 105h +
ja loc_45686D  +
mov edx [esp+64h] +
test edx edx +
jz loc_456A51  +
test eax eax +
jz loc_456B52  +
cmp eax 2 +
ja loc_45686D  +
mov ebx [edi+6Ch] +
jmp loc_4568B8  +
***
shr bx 7 +
movzx ebx bx +
movzx eax ds:byte_495320[ebx] +
jmp loc_456918  +
***
mov eax edi +
call sub_455DD0  +
mov ebx [edi+6Ch] +
mov [edi+60h] eax +
jmp loc_4568BB  +
***
mov edx [edi+6Ch] +
mov eax 2 +
cmp edx 2 +
cmovbe eax edx +
cmp dword ptr [esp+64h] 4 +
mov [edi+16B4h] eax +
jz loc_456BC6  +
mov ecx [edi+16A0h] +
mov eax 1 +
test ecx ecx +
jz loc_456BBE  +
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_456B8C  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov dword ptr [esp+0Ch] 0 +
mov [esp] edi +
call sub_45A170  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_456340  +
mov eax [edi] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
movzx eax al +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [edi+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_456BD6  +
add eax [edi+38h] +
mov ecx eax +
mov [esp+8] edx +
mov [esp+4] ecx +
mov [esp] edi +
mov dword ptr [esp+0Ch] 1 +
call sub_45A170  +
mov eax [edi+6Ch] +
mov [edi+5Ch] eax +
mov eax [edi] +
call sub_456340  +
mov eax [edi] +
cmp dword ptr [eax+10h] 1 +
sbb eax eax +
add esp 4Ch +
pop ebx  +
add eax 3 +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
sub esp 10h +
mov ebx [esp+10h+arg_0] +
mov edi [esp+10h+arg_4] +
mov eax [ebx+0Ch] +
lea esi [eax-5] +
mov eax 0FFFFh +
cmp esi 0FFFFh +
cmovnb esi eax +
jmp loc_456CAF  +
add edx [ebx+6Ch] +
mov eax [ebx+5Ch] +
mov dword ptr [ebx+74h] 0 +
test edx edx +
mov [ebx+6Ch] edx +
lea ecx [esi+eax] +
jz loc_456C4F  +
cmp edx ecx +
jb loc_456C9C  +
sub edx ecx +
mov [ebx+74h] edx +
xor edx edx +
mov [ebx+6Ch] ecx +
sub ecx eax +
test eax eax +
js loc_456C64  +
add eax [ebx+38h] +
mov edx eax +
mov [esp+10h+var_8] ecx +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_10] ebx +
call sub_45A170  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_456340  +
mov eax [ebx] +
mov ecx [eax+10h] +
test ecx ecx +
jz loc_456D80  +
mov edx [ebx+6Ch] +
mov eax [ebx+5Ch] +
mov ecx [ebx+2Ch] +
sub edx eax +
sub ecx 106h +
cmp edx ecx +
jnb loc_456D40  +
mov edx [ebx+74h] +
cmp edx 1 +
ja loc_456C34  +
mov eax ebx +
call sub_456050  +
mov edx [ebx+74h] +
test edx edx +
jnz loc_456C34  +
test edi edi +
jz loc_456D80  +
cmp edi 4 +
mov dword ptr [ebx+16B4h] 0 +
jz loc_456D89  +
mov ecx [ebx+6Ch] +
mov eax 1 +
mov edx [ebx+5Ch] +
cmp ecx edx +
jle loc_456D82  +
sub ecx edx +
xor al al +
test edx edx +
js loc_456D08  +
mov eax [ebx+38h] +
add eax edx +
mov [esp+10h+var_8] ecx +
mov [esp+10h+var_C] eax +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_10] ebx +
call sub_45A170  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_456340  +
mov eax [ebx] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
movzx eax al +
jmp loc_456D82  +
xor ecx ecx +
test eax eax +
js loc_456D4B  +
add eax [ebx+38h] +
mov ecx eax +
mov [esp+10h+var_8] edx +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_4] 0 +
mov [esp+10h+var_10] ebx +
call sub_45A170  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_456340  +
mov eax [ebx] +
mov edx [eax+10h] +
test edx edx +
jnz loc_456CAF  +
lea esi [esi+0] +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [ebx+5Ch] +
xor ecx ecx +
mov eax [ebx+6Ch] +
sub eax edx +
test edx edx +
js loc_456D9C  +
mov ecx [ebx+38h] +
add ecx edx +
mov [esp+10h+var_8] eax +
mov [esp+10h+var_C] ecx +
mov [esp+10h+var_4] 1 +
mov [esp+10h+var_10] ebx +
call sub_45A170  +
mov eax [ebx+6Ch] +
mov [ebx+5Ch] eax +
mov eax [ebx] +
call sub_456340  +
mov eax [ebx] +
cmp dword ptr [eax+10h] 1 +
sbb eax eax +
add eax 3 +
jmp loc_456D82  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ecx [esp+50h] +
mov ebx [esp+54h] +
mov esi [esp+58h] +
test ecx ecx +
jz loc_456FEE  +
mov eax [esp+50h] +
mov edi [eax+1Ch] +
test edi edi +
jz loc_456FEE  +
test ebx ebx +
jz loc_456FEE  +
mov eax [edi+18h] +
cmp eax 2 +
mov [esp+24h] eax +
jz loc_456FEE  +
cmp eax 1 +
jz loc_456F63  +
mov eax [edi+74h] +
test eax eax +
jnz loc_456FEE  +
mov eax [edi+2Ch] +
mov dword ptr [edi+18h] 0 +
cmp esi eax +
jnb loc_456F50  +
mov eax [esp+50h] +
mov eax [eax+4] +
mov [esp+28h] eax +
mov eax [esp+50h] +
mov eax [eax] +
mov [esp+2Ch] eax +
mov eax [esp+50h] +
mov [eax+4] esi +
mov [eax] ebx +
mov eax edi +
call sub_456050  +
mov eax [edi+74h] +
cmp eax 2 +
jbe loc_456F01  +
mov edx eax +
nop   +
lea esi [esi+0] +
mov esi [edi+58h] +
mov ebx [edi+6Ch] +
mov eax [edi+48h] +
mov ebp [edi+40h] +
mov [esp+10h] esi +
mov esi [edi+38h] +
lea ecx [ebx+edx-2] +
mov [esp+0Ch] ecx +
mov [esp+14h] esi +
mov esi [edi+54h] +
mov [esp+18h] esi +
mov esi [edi+34h] +
mov [esp+1Ch] esi +
mov esi [edi+44h] +
mov [esp+20h] esi +
jmp loc_456EA8  +
mov eax edx +
mov edx [esp+14h] +
movzx ecx byte ptr [esp+10h] +
movzx edx byte ptr [edx+ebx+2] +
shl eax cl +
mov ecx [esp+1Ch] +
xor edx eax +
mov eax [esp+20h] +
and edx [esp+18h] +
and ecx ebx +
lea eax [eax+edx*2] +
movzx esi word ptr [eax] +
mov [edi+48h] edx +
mov [ebp+ecx*2+0] si +
mov [eax] bx +
add ebx 1 +
cmp ebx [esp+0Ch] +
jnz loc_456EA6  +
mov [edi+6Ch] ebx +
mov eax edi +
mov dword ptr [edi+74h] 2 +
call sub_456050  +
mov edx [edi+74h] +
cmp edx 2 +
ja loc_456E70  +
mov eax edx +
mov edx [edi+6Ch] +
mov [edi+16B4h] eax +
mov esi [esp+2Ch] +
mov dword ptr [edi+74h] 0 +
mov dword ptr [edi+78h] 2 +
add edx eax +
mov eax [esp+50h] +
mov [edi+6Ch] edx +
mov [edi+5Ch] edx +
mov dword ptr [edi+60h] 2 +
mov dword ptr [edi+68h] 0 +
mov [eax] esi +
mov esi [esp+28h] +
mov [eax+4] esi +
mov eax [esp+24h] +
mov [edi+18h] eax +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [esp+24h] +
test edx edx +
jz loc_456FA5  +
sub esi eax +
add ebx esi +
mov esi eax +
jmp loc_456E38  +
***
cmp dword ptr [edi+4] 2Ah +
jnz loc_456FEE  +
mov edx [edi+74h] +
test edx edx +
jnz loc_456FEE  +
mov eax [esp+50h] +
mov eax [eax+30h] +
mov [esp+8] esi +
mov [esp+4] ebx +
mov [esp] eax +
call sub_454AC0  +
mov ecx [esp+50h] +
mov [ecx+30h] eax +
mov eax [edi+2Ch] +
mov dword ptr [edi+18h] 0 +
cmp esi eax +
jnb loc_456F58  +
jmp loc_456E38  +
***
mov ecx [edi+4Ch] +
xor ebp ebp +
mov eax [edi+44h] +
lea edx [ecx+7FFFFFFFh] +
lea ecx [edx+edx] +
mov [eax+edx*2] bp +
mov [esp+8] ecx +
mov dword ptr [esp+4] 0 +
mov [esp] eax +
call memset  +
mov eax [edi+2Ch] +
mov dword ptr [edi+6Ch] 0 +
mov dword ptr [edi+5Ch] 0 +
mov dword ptr [edi+16B4h] 0 +
jmp loc_456F58  +
***
mov eax 0FFFFFFFEh +
jmp loc_456F48  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test ebx ebx +
jz loc_4570D0  +
mov esi [ebx+1Ch] +
test esi esi +
jz loc_4570D0  +
mov edx [ebx+20h] +
test edx edx +
jz loc_4570D0  +
mov eax [ebx+24h] +
test eax eax +
jz loc_4570D0  +
mov eax [esi+8] +
mov dword ptr [ebx+14h] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx+18h] 0 +
mov dword ptr [ebx+2Ch] 2 +
mov [esi+10h] eax +
mov eax [esi+18h] +
mov dword ptr [esi+14h] 0 +
test eax eax +
js loc_4570A1  +
jnz loc_4570A6  +
mov dword ptr [esi+4] 71h +
mov [esp+14h+var_C] 0 +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] 0 +
call sub_454AC0  +
mov [ebx+30h] eax +
mov dword ptr [esi+28h] 0 +
mov [esp+14h+var_14] esi +
call sub_459E70  +
xor eax eax +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
neg eax  +
mov [esi+18h] eax +
cmp eax 2 +
mov dword ptr [esi+4] 2Ah +
jnz loc_45706B  +
mov [esp+14h+var_C] 0 +
mov [esp+14h+var_10] 0 +
mov [esp+14h+var_14] 0 +
call sub_454FF0  +
jmp loc_457087  +
mov eax 0FFFFFFFEh +
jmp loc_45709B  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+0Ch+arg_0] +
mov [esp+0Ch+var_C] ebx +
call sub_457000  +
test eax eax +
mov esi eax +
jnz loc_4571A7  +
mov ebx [ebx+1Ch] +
mov eax [ebx+2Ch] +
mov ecx [ebx+4Ch] +
add eax eax +
mov [ebx+3Ch] eax +
mov eax [ebx+44h] +
lea edx [ecx+7FFFFFFFh] +
lea ecx [edx+edx] +
mov word ptr [eax+edx*2] 0 +
mov [esp+0Ch+var_4] ecx +
mov [esp+0Ch+var_8] 0 +
mov [esp+0Ch+var_C] eax +
call memset  +
mov eax [ebx+84h] +
mov dword ptr [ebx+6Ch] 0 +
mov dword ptr [ebx+5Ch] 0 +
mov dword ptr [ebx+74h] 0 +
lea edx [eax+eax*2] +
shl edx 2 +
lea eax dword_494F40[edx] +
movzx ecx word ptr [edx+494F42h] +
movzx edx word ptr ds:dword_494F40[edx] +
mov dword ptr [ebx+16B4h] 0 +
mov dword ptr [ebx+78h] 2 +
mov [ebx+80h] ecx +
mov [ebx+8Ch] edx +
movzx edx word ptr [eax+4] +
movzx eax word ptr [eax+6] +
mov dword ptr [ebx+60h] 2 +
mov dword ptr [ebx+68h] 0 +
mov [ebx+90h] edx +
mov [ebx+7Ch] eax +
mov dword ptr [ebx+48h] 0 +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov eax [esp+4] +
test eax eax +
jz loc_4571D0  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_4571D0  +
cmp dword ptr [eax+18h] 2 +
jnz loc_4571D0  +
mov edx [esp+8] +
mov [eax+1Ch] edx +
xor eax eax +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebx  +
mov eax [esp+8] +
mov ecx [esp+0Ch] +
mov edx [esp+10h] +
test eax eax +
jz loc_457215  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_457215  +
test ecx ecx +
jz loc_457201  +
mov ebx [eax+14h] +
mov [ecx] ebx +
test edx edx +
jz loc_457211  +
mov eax [eax+16BCh] +
mov [edx] eax +
xor eax eax +
pop ebx  +
retn   +
***
xor eax eax +
pop ebx  +
retn   +
***
mov eax 0FFFFFFFEh +
pop ebx  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov edi [esp+34h] +
mov ebp [esp+38h] +
test eax eax +
jz loc_4572A4  +
mov esi [eax+1Ch] +
test esi esi +
jz loc_4572A4  +
mov eax [esi+10h] +
add eax 2 +
cmp [esi+16A4h] eax +
jb loc_45729D  +
lea esi [esi+0] +
mov edx [esi+16BCh] +
mov ebx 10h +
mov eax 1 +
sub ebx edx +
cmp edi ebx +
cmovle ebx edi +
mov ecx ebx +
shl eax cl +
mov ecx edx +
sub eax 1 +
add edx ebx +
and eax ebp +
shl eax cl +
or [esi+16B8h] ax +
mov [esi+16BCh] edx +
mov [esp] esi +
call sub_45A070  +
mov ecx ebx +
sar ebp cl +
sub edi ebx +
jnz loc_457250  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 0FFFFFFFBh +
jmp loc_457295  +
***
mov eax 0FFFFFFFEh +
jmp loc_457295  +
***
mov eax [esp+4] +
test eax eax +
jz loc_4572E7  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_4572E7  +
mov edx [esp+8] +
mov [eax+8Ch] edx +
mov edx [esp+0Ch] +
mov [eax+80h] edx +
mov edx [esp+10h] +
mov [eax+90h] edx +
mov edx [esp+14h] +
mov [eax+7Ch] edx +
xor eax eax +
retn   +
***
mov eax 0FFFFFFFEh +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ecx [esp+18h] +
mov ebx [esp+14h] +
lea esi [ecx+7] +
mov edx esi +
lea eax [ecx+3Fh] +
shr edx 3 +
shr eax 6 +
add eax edx +
add eax ecx +
test ebx ebx +
jz loc_4573D4  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jz loc_4573D4  +
mov edx [ebx+18h] +
cmp edx 1 +
jz loc_4573C3  +
cmp edx 2 +
jz loc_457350  +
cmp edx 1 +
sbb edx edx +
not edx  +
and edx 6 +
cmp dword ptr [ebx+30h] 0Fh +
jz loc_4573A3  +
pop ebx  +
lea eax [edx+eax+5] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edi [ebx+1Ch] +
test edi edi +
jz loc_4573E0  +
mov ebp [edi+10h] +
test ebp ebp +
jz loc_4573F0  +
mov edx [edi+14h] +
add edx 14h +
mov ebp [edi+1Ch] +
test ebp ebp +
jz loc_45737F  +
sub ebp edx +
add edx 1 +
cmp byte ptr [ebp+edx-1] 0 +
jnz loc_457375  +
mov ebp [edi+24h] +
test ebp ebp +
jz loc_457392  +
sub ebp edx +
add edx 1 +
cmp byte ptr [ebp+edx-1] 0 +
jnz loc_457388  +
mov edi [edi+2Ch] +
lea ebp [edx+2] +
test edi edi +
cmovnz edx ebp +
cmp dword ptr [ebx+30h] 0Fh +
jnz loc_457342  +
cmp dword ptr [ebx+50h] 0Fh +
jnz loc_457342  +
mov eax ecx +
mov ebx ecx +
shr eax 0Ch +
add eax esi +
shr ebx 0Eh +
add eax ebx +
shr ecx 19h +
add eax ecx +
pop ebx  +
add eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp dword ptr [ebx+6Ch] 1 +
sbb edx edx +
and edx 0FFFFFFFCh +
add edx 0Ah +
jmp loc_45733C  +
***
pop ebx  +
add eax 0Bh +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx 12h +
jmp loc_45733C  +
***
mov edx 12h +
jmp loc_45736C  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov edi [esp+2Ch+arg_0] +
test edi edi +
jz loc_457FC1  +
mov eax [esp+2Ch+arg_0] +
mov ebp [eax+1Ch] +
test ebp ebp +
jz loc_457FC1  +
cmp [esp+2Ch+arg_4] 5 +
ja loc_457FC1  +
mov esi [eax+0Ch] +
test esi esi +
jz loc_4575CB  +
mov ebx [eax] +
test ebx ebx +
jz loc_457E58  +
mov eax [ebp+4] +
cmp eax 29Ah +
jz loc_4575C0  +
mov edi [esp+2Ch+arg_0] +
mov edx [edi+10h] +
test edx edx +
jz loc_458024  +
mov edi [esp+2Ch+arg_0] +
cmp eax 2Ah +
mov [ebp+0] edi +
mov edi [ebp+28h] +
mov [esp+2Ch+var_18] edi +
mov edi [esp+2Ch+arg_4] +
mov [ebp+28h] edi +
jz loc_457721  +
cmp eax 45h +
jz loc_457829  +
cmp eax 49h +
mov edx [ebp+14h] +
jz loc_4578E0  +
cmp eax 5Bh +
jz loc_457B8B  +
cmp eax 67h +
jz loc_457F0B  +
test edx edx +
mov eax [esp+2Ch+arg_0] +
jnz loc_4575E1  +
mov edx [eax+4] +
test edx edx +
jnz loc_457AD0  +
mov eax [esp+2Ch+arg_4] +
cmp eax 5 +
lea edx [eax+eax] +
setz al  +
movzx eax al +
lea eax [eax+eax*8] +
sub edx eax +
mov eax [esp+2Ch+var_18] +
cmp eax 5 +
lea ecx [eax+eax] +
setnl al  +
movzx eax al +
lea eax [eax+eax*8] +
sub ecx eax +
cmp edx ecx +
jg loc_4574F4  +
cmp [esp+2Ch+arg_4] 4 +
jnz loc_457AE6  +
mov eax [ebp+4] +
mov ecx [ebp+74h] +
test ecx ecx +
jnz loc_457612  +
mov edx [esp+2Ch+arg_4] +
test edx edx +
jz loc_457669  +
cmp eax 29Ah +
jnz loc_457612  +
lea esi [esi+0] +
cmp [esp+2Ch+arg_4] 4 +
jnz loc_457669  +
mov eax [ebp+18h] +
test eax eax +
jle loc_458320  +
cmp eax 2 +
jz loc_458070  +
mov eax [esp+2Ch+arg_0] +
mov ebx [ebp+8] +
mov edx [eax+30h] +
mov eax [ebp+14h] +
mov ecx edx +
lea esi [eax+1] +
shr edx 18h +
mov [ebp+14h] esi +
shr ecx 10h +
mov [ebx+eax] dl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [edx+eax] cl +
mov eax [esp+2Ch+arg_0] +
mov ecx [ebp+8] +
movzx edx word ptr [eax+30h] +
mov eax [ebp+14h] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov ebx edx +
shr ebx 8 +
mov [ecx+eax] bl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [ecx+eax] dl +
mov eax [esp+2Ch+arg_0] +
call sub_456340  +
mov eax [ebp+18h] +
test eax eax +
jle loc_4575AC  +
neg eax  +
mov [ebp+18h] eax +
mov edx [ebp+14h] +
xor eax eax +
test edx edx +
setz al  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+2Ch+arg_4] 4 +
jz loc_457450  +
mov eax ds:off_492D70 +
mov edi [esp+2Ch+arg_0] +
mov [edi+18h] eax +
mov eax 0FFFFFFFEh +
jmp loc_45766B  +
call sub_456340  +
mov eax [esp+2Ch+arg_0] +
mov ebx [eax+10h] +
test ebx ebx +
jz loc_457715  +
mov eax [esp+2Ch+arg_0] +
mov edx [eax+4] +
mov eax [ebp+4] +
cmp eax 29Ah +
jz loc_457ADE  +
test edx edx +
jz loc_4574F7  +
mov eax [ebp+88h] +
cmp eax 2 +
jz loc_45792C  +
cmp eax 3 +
jz loc_457B93  +
mov eax [ebp+84h] +
mov edi [esp+2Ch+arg_4] +
mov [esp+2Ch+var_2C] ebp +
lea eax [eax+eax*2] +
mov [esp+2Ch+var_28] edi +
call ds:off_494F48[eax*4]  +
mov edx eax +
and edx 0FFFFFFFDh +
lea ecx [eax-2] +
cmp ecx 1 +
jbe loc_457B50  +
test edx edx +
jnz loc_457673  +
mov eax [esp+2Ch+arg_0] +
mov edi [eax+10h] +
test edi edi +
jz loc_457715  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp eax 1 +
jnz loc_457520  +
cmp [esp+2Ch+arg_4] 1 +
jz loc_458333  +
cmp [esp+2Ch+arg_4] 5 +
jz loc_4576FD  +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_459F50  +
cmp [esp+2Ch+arg_4] 3 +
jnz loc_4576FD  +
mov edi [ebp+4Ch] +
xor ebx ebx +
mov eax [ebp+44h] +
lea edx [edi+7FFFFFFFh] +
lea ecx [edx+edx] +
mov [eax+edx*2] bx +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] eax +
call memset  +
mov esi [ebp+74h] +
test esi esi +
jnz loc_4576FD  +
mov dword ptr [ebp+6Ch] 0 +
mov dword ptr [ebp+5Ch] 0 +
mov dword ptr [ebp+16B4h] 0 +
mov eax [esp+2Ch+arg_0] +
call sub_456340  +
mov eax [esp+2Ch+arg_0] +
mov ecx [eax+10h] +
test ecx ecx +
jnz loc_457520  +
mov dword ptr [ebp+28h] 0FFFFFFFFh +
jmp loc_457669  +
cmp dword ptr [ebp+18h] 2 +
jz loc_458113  +
mov eax [ebp+30h] +
shl eax 0Ch +
lea ecx [eax-7800h] +
xor eax eax +
cmp dword ptr [ebp+88h] 1 +
jle loc_457AA3  +
mov edx [ebp+6Ch] +
or ecx eax +
mov eax ecx +
mov ebx [ebp+8] +
or eax 20h +
mov dword ptr [ebp+4] 71h +
test edx edx +
mov edx 8421085h +
cmovnz ecx eax +
mov eax ecx +
mul  edx +
mov eax [ebp+14h] +
sub ecx edx +
shr ecx 1 +
add ecx edx +
shr ecx 4 +
mov edx ecx +
shl edx 5 +
sub edx ecx +
add edx 1Fh +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx edx +
shr ecx 8 +
mov [ebx+eax] cl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [ecx+eax] dl +
mov ecx [ebp+6Ch] +
test ecx ecx +
jz loc_4577FA  +
mov eax [esp+2Ch+arg_0] +
mov esi [ebp+8] +
mov edx [eax+30h] +
mov eax [ebp+14h] +
mov ecx edx +
lea ebx [eax+1] +
shr edx 18h +
mov [ebp+14h] ebx +
shr ecx 10h +
mov [esi+eax] dl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [edx+eax] cl +
mov eax [esp+2Ch+arg_0] +
mov ebx [ebp+8] +
movzx edx word ptr [eax+30h] +
mov eax [ebp+14h] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx edx +
shr ecx 8 +
mov [ebx+eax] cl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea ebx [eax+1] +
mov [ebp+14h] ebx +
mov [ecx+eax] dl +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] 0 +
call sub_454AC0  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
mov eax [ebp+4] +
cmp eax 45h +
jnz loc_457486  +
mov ecx [ebp+1Ch] +
mov eax ecx +
mov edi [ecx+10h] +
test edi edi +
jz loc_458015  +
mov edx [ebp+14h] +
movzx ebx word ptr [ecx+14h] +
cmp ebx [ebp+20h] +
mov edi edx +
jbe loc_4578B6  +
mov eax edx +
mov esi ecx +
jmp loc_45787F  +
lea ebx [eax+1] +
mov esi [ebp+8] +
mov [ebp+14h] ebx +
mov ebx [ecx+10h] +
mov ecx [ebp+20h] +
movzx ecx byte ptr [ebx+ecx] +
mov [esi+eax] cl +
mov ecx [ebp+1Ch] +
mov eax [ebp+20h] +
movzx ebx word ptr [ecx+14h] +
mov esi ecx +
add eax 1 +
mov [ebp+20h] eax +
cmp ebx eax +
jbe loc_4578B1  +
mov eax [ebp+14h] +
cmp [ebp+0Ch] eax +
jnz loc_457850  +
mov esi [esi+2Ch] +
test esi esi +
jz loc_457893  +
cmp eax edx +
ja loc_457E30  +
mov eax [esp+2Ch+arg_0] +
call sub_456340  +
mov edx [ebp+14h] +
cmp edx [ebp+0Ch] +
mov edi edx +
jz loc_45800D  +
mov eax edx +
mov ecx [ebp+1Ch] +
jmp loc_457850  +
mov edx [ebp+14h] +
mov eax ecx +
mov ebx [eax+2Ch] +
test ebx ebx +
jz loc_4578C5  +
cmp edi edx +
jb loc_457FCB  +
mov edi [eax+14h] +
cmp [ebp+20h] edi +
jz loc_457A28  +
mov eax [ebp+4] +
cmp eax 49h +
jnz loc_457492  +
lea esi [esi+0] +
mov eax [ebp+1Ch] +
jmp loc_457A36  +
mov eax [ebp+5Ch] +
xor ecx ecx +
sub edx eax +
test eax eax +
js loc_4578F8  +
add eax [ebp+38h] +
mov ecx eax +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_45A170  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_456340  +
mov eax [ebp+0] +
mov ecx [eax+10h] +
test ecx ecx +
jz loc_45765A  +
mov eax [ebp+74h] +
jmp loc_457996  +
mov eax [ebp+6Ch] +
xor ebx ebx +
mov edx [ebp+38h] +
mov dword ptr [ebp+60h] 0 +
mov ecx [ebp+16A4h] +
movzx edx byte ptr [edx+eax] +
mov eax [ebp+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [ebp+1698h] +
lea ebx [eax+1] +
mov [ebp+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [ebp+edx*4+94h] 1 +
mov eax [ebp+169Ch] +
mov edi [ebp+6Ch] +
lea ecx [eax-1] +
mov eax [ebp+74h] +
lea edx [edi+1] +
mov [ebp+6Ch] edx +
sub eax 1 +
cmp [ebp+16A0h] ecx +
mov [ebp+74h] eax +
jz loc_4578E8  +
test eax eax +
jnz loc_457931  +
mov eax ebp +
call sub_456050  +
mov edi [ebp+74h] +
test edi edi +
jnz loc_457931  +
mov esi [esp+2Ch+arg_4] +
test esi esi +
jz loc_45765A  +
cmp [esp+2Ch+arg_4] 4 +
mov dword ptr [ebp+16B4h] 0 +
jz loc_457AFC  +
mov eax [ebp+16A0h] +
test eax eax +
jz loc_45767C  +
mov edx [ebp+5Ch] +
xor ecx ecx +
mov eax [ebp+6Ch] +
sub eax edx +
test edx edx +
js loc_4579EA  +
add edx [ebp+38h] +
mov ecx edx +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_45A170  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_456340  +
mov eax [ebp+0] +
mov eax [eax+10h] +
test eax eax +
setnz al  +
movzx eax al +
lea ecx [eax-2] +
mov edx eax +
jmp loc_45764D  +
mov dword ptr [ebp+20h] 0 +
mov dword ptr [ebp+4] 49h +
mov ecx [eax+1Ch] +
test ecx ecx +
jz loc_458042  +
mov ebx edx +
mov ecx edx +
jmp loc_457A71  +
mov esi [eax+1Ch] +
mov eax [ebp+20h] +
lea edi [eax+1] +
mov [ebp+20h] edi +
movzx eax byte ptr [esi+eax] +
lea edi [ecx+1] +
mov esi [ebp+8] +
mov [ebp+14h] edi +
test al al +
mov [esi+ecx] al +
jz loc_457B60  +
mov ecx [ebp+14h] +
mov eax [ebp+1Ch] +
cmp [ebp+0Ch] ecx +
jnz loc_457A47  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_457A85  +
cmp edx ecx +
jb loc_457E08  +
mov eax [esp+2Ch+arg_0] +
call sub_456340  +
mov edx [ebp+14h] +
cmp edx [ebp+0Ch] +
mov ebx edx +
jz loc_457FF9  +
mov eax [ebp+1Ch] +
mov ecx edx +
jmp loc_457A47  +
mov edx [ebp+84h] +
cmp edx 1 +
jle loc_457746  +
cmp edx 5 +
mov al 40h +
jle loc_457746  +
cmp edx 6 +
mov al 80h +
mov edx 0C0h +
cmovnz eax edx +
jmp loc_457746  +
mov eax [ebp+4] +
cmp eax 29Ah +
jnz loc_457612  +
test edx edx +
jz loc_4574F7  +
mov eax ds:off_492D7C +
mov edi [esp+2Ch+arg_0] +
mov [edi+18h] eax +
mov eax 0FFFFFFFBh +
jmp loc_45766B  +
mov edx [ebp+5Ch] +
xor ecx ecx +
mov eax [ebp+6Ch] +
sub eax edx +
test edx edx +
js loc_457B0F  +
add edx [ebp+38h] +
mov ecx edx +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_2C] ebp +
call sub_45A170  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_456340  +
mov eax [ebp+0] +
mov ecx [eax+10h] +
cmp ecx 1 +
sbb edx edx +
add edx 1 +
cmp ecx 1 +
sbb eax eax +
add eax 3 +
nop   +
lea esi [esi+0] +
mov dword ptr [ebp+4] 29Ah +
jmp loc_457656  +
mov edx [ebp+14h] +
xor esi esi +
mov eax [ebp+1Ch] +
mov edi [eax+2Ch] +
test edi edi +
jz loc_457B77  +
cmp ebx edx +
jb loc_4582B6  +
test esi esi +
jz loc_457E68  +
mov eax [ebp+4] +
cmp eax 5Bh +
jnz loc_45749B  +
mov eax [ebp+1Ch] +
jmp loc_457E79  +
movzx eax ds:byte_495220 +
lea edi ds:0[eax*4] +
jmp loc_457C1A  +
mov dword ptr [ebp+60h] 0 +
mov esi [ebp+6Ch] +
mov edx [ebp+38h] +
test esi esi +
jnz loc_457C70  +
mov [esp+2Ch+var_18] 0 +
mov eax [esp+2Ch+var_18] +
xor ebx ebx +
mov ecx [ebp+16A4h] +
movzx edx byte ptr [edx+eax] +
mov eax [ebp+16A0h] +
mov [ecx+eax*2] bx +
mov ecx [ebp+1698h] +
lea ebx [eax+1] +
mov [ebp+16A0h] ebx +
mov [ecx+eax] dl +
add word ptr [ebp+edx*4+94h] 1 +
mov eax [ebp+169Ch] +
sub eax 1 +
cmp [ebp+16A0h] eax +
setz al  +
movzx eax al +
sub dword ptr [ebp+74h] 1 +
add dword ptr [ebp+6Ch] 1 +
test eax eax +
jnz loc_457DBC  +
mov eax [ebp+74h] +
cmp eax 102h +
ja loc_457BA3  +
mov eax ebp +
call sub_456050  +
mov eax [ebp+74h] +
cmp eax 102h +
ja loc_457BA3  +
mov edx [esp+2Ch+arg_4] +
test edx edx +
jz loc_45765A  +
test eax eax +
jz loc_4579B4  +
cmp eax 2 +
mov dword ptr [ebp+60h] 0 +
ja loc_457BAA  +
mov eax [ebp+6Ch] +
mov edx [ebp+38h] +
mov [esp+2Ch+var_18] eax +
jmp loc_457BC0  +
lea ebx [edx+esi-1] +
movzx ecx byte ptr [ebx] +
mov [esp+2Ch+var_18] esi +
mov [esp+2Ch+var_14] ecx +
movzx ecx byte ptr [ebx] +
cmp [ebx+1] cl +
jnz loc_457BC0  +
movzx ecx byte ptr [ebx+2] +
cmp [esp+2Ch+var_14] ecx +
jnz loc_457BC0  +
movzx ecx byte ptr [ebx+3] +
cmp [esp+2Ch+var_14] ecx +
jnz loc_457BC0  +
lea ecx [edx+esi+102h] +
add ebx 3 +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] ecx +
jmp loc_457D20  +
movzx ecx byte ptr [ebx+2] +
cmp eax ecx +
jnz loc_45837A  +
movzx ecx byte ptr [ebx+3] +
cmp eax ecx +
jnz loc_4583AA  +
movzx ecx byte ptr [ebx+4] +
cmp eax ecx +
jnz loc_45839E  +
movzx ecx byte ptr [ebx+5] +
cmp eax ecx +
jnz loc_458392  +
movzx ecx byte ptr [ebx+6] +
cmp eax ecx +
jnz loc_458386  +
movzx ecx byte ptr [ebx+7] +
cmp eax ecx +
jnz loc_45836E  +
add ebx 8 +
movzx ecx byte ptr [ebx] +
cmp eax ecx +
jnz loc_45832A  +
cmp ebx [esp+2Ch+var_18] +
jnb loc_45832A  +
movzx ecx byte ptr [ebx+1] +
cmp eax ecx +
jz loc_457CC0  +
mov eax [esp+2Ch+var_10] +
add ebx 1 +
sub ebx [esp+2Ch+var_18] +
lea ecx [ebx+102h] +
cmp ecx eax +
mov [ebp+60h] ecx +
jbe loc_45830C  +
mov [ebp+60h] eax +
mov ecx eax +
mov eax [ebp+16A0h] +
lea edx [ecx-3] +
mov esi 1 +
mov ecx [ebp+16A4h] +
lea ebx [eax+1] +
mov [ecx+eax*2] si +
mov ecx [ebp+1698h] +
mov [ebp+16A0h] ebx +
mov [ecx+eax] dl +
movzx edx dl +
movzx eax ds:byte_495120[edx] +
add word ptr [ebp+eax*4+498h] 1 +
add word ptr [ebp+edi+988h] 1 +
mov eax [ebp+169Ch] +
mov edx [ebp+60h] +
mov dword ptr [ebp+60h] 0 +
sub eax 1 +
cmp [ebp+16A0h] eax +
setz al  +
movzx eax al +
sub [ebp+74h] edx +
add [ebp+6Ch] edx +
test eax eax +
jz loc_457C1A  +
mov edx [ebp+5Ch] +
xor ecx ecx +
mov eax [ebp+6Ch] +
sub eax edx +
test edx edx +
js loc_457DCF  +
add edx [ebp+38h] +
mov ecx edx +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_2C] ebp +
call sub_45A170  +
mov eax [ebp+6Ch] +
mov [ebp+5Ch] eax +
mov eax [ebp+0] +
call sub_456340  +
mov eax [ebp+0] +
mov eax [eax+10h] +
test eax eax +
jnz loc_457C1A  +
jmp loc_45765A  +
mov eax [esp+2Ch+arg_0] +
sub ecx edx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] ecx +
add edx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_454FF0  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
jmp loc_457A85  +
mov edi [esp+2Ch+arg_0] +
sub eax edx +
mov ecx [edi+30h] +
mov [esp+2Ch+var_24] eax +
add edx [ebp+8] +
mov [esp+2Ch+var_2C] ecx +
mov [esp+2Ch+var_28] edx +
call sub_454FF0  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
jmp loc_457893  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_457442  +
jmp loc_4575CB  +
mov eax [ebp+1Ch] +
mov dword ptr [ebp+20h] 0 +
mov dword ptr [ebp+4] 5Bh +
mov ecx [eax+24h] +
test ecx ecx +
jz loc_458036  +
mov ebx edx +
mov ecx edx +
jmp loc_457EB6  +
mov esi [eax+24h] +
mov eax [ebp+20h] +
lea edi [eax+1] +
mov [ebp+20h] edi +
movzx eax byte ptr [esi+eax] +
lea edi [ecx+1] +
mov esi [ebp+8] +
mov [ebp+14h] edi +
test al al +
mov [esi+ecx] al +
jz loc_457EE4  +
mov ecx [ebp+14h] +
mov eax [ebp+1Ch] +
cmp [ebp+0Ch] ecx +
jnz loc_457E90  +
mov eax [eax+2Ch] +
test eax eax +
jz loc_457EC6  +
cmp edx ecx +
jb loc_457F21  +
mov eax [esp+2Ch+arg_0] +
call sub_456340  +
mov edx [ebp+14h] +
cmp edx [ebp+0Ch] +
mov ebx edx +
jz loc_458003  +
mov eax [ebp+1Ch] +
mov ecx edx +
jmp loc_457E90  +
mov edx [ebp+14h] +
xor esi esi +
mov eax [ebp+1Ch] +
mov edi [eax+2Ch] +
test edi edi +
jz loc_457EFB  +
cmp ebx edx +
jb loc_4582E1  +
test esi esi +
jz loc_457F46  +
mov eax [ebp+4] +
cmp eax 67h +
jnz loc_4574A4  +
mov eax [ebp+1Ch] +
mov esi [eax+2Ch] +
test esi esi +
jnz loc_457F57  +
mov dword ptr [ebp+4] 71h +
jmp loc_4574A4  +
mov eax [esp+2Ch+arg_0] +
sub ecx edx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] ecx +
add edx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edx +
call sub_454FF0  +
mov edi [esp+2Ch+arg_0] +
mov [edi+30h] eax +
jmp loc_457EC6  +
mov eax [ebp+1Ch] +
mov dword ptr [ebp+4] 67h +
mov esi [eax+2Ch] +
test esi esi +
jz loc_457F15  +
lea eax [edx+2] +
cmp eax [ebp+0Ch] +
ja loc_45804E  +
lea eax [edx+1] +
mov ecx [ebp+8] +
mov [ebp+14h] eax +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+30h] +
mov [ecx+edx] al +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [esp+2Ch+arg_0] +
mov eax [eax+30h] +
shr eax 8 +
mov [ecx+edx] al +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] 0 +
call sub_454FF0  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
mov dword ptr [ebp+4] 71h +
jmp loc_4574A4  +
mov eax 0FFFFFFFEh +
jmp loc_45766B  +
mov eax [esp+2Ch+arg_0] +
sub edx edi +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] edx +
add edi [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call sub_454FF0  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
mov eax [ebp+1Ch] +
jmp loc_4578C5  +
mov esi 1 +
jmp loc_457B65  +
mov esi 1 +
jmp loc_457EE9  +
mov eax [ebp+1Ch] +
jmp loc_4578B6  +
mov dword ptr [ebp+4] 49h +
mov edx [ebp+14h] +
jmp loc_457A36  +
mov eax ds:off_492D7C +
mov [edi+18h] eax +
mov eax 0FFFFFFFBh +
jmp loc_45766B  +
mov dword ptr [ebp+4] 67h +
jmp loc_457F50  +
mov dword ptr [ebp+4] 5Bh +
jmp loc_457E79  +
mov eax [esp+2Ch+arg_0] +
call sub_456340  +
mov edx [ebp+14h] +
lea eax [edx+2] +
cmp eax [ebp+0Ch] +
ja loc_4574A4  +
jmp loc_457F63  +
mov eax [ebp+14h] +
mov edi [esp+2Ch+arg_0] +
mov ecx [ebp+8] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [edi+30h] +
mov [ecx+eax] dl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [edi+30h] +
shr eax 8 +
mov [ecx+edx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx word ptr [edi+32h] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx byte ptr [edi+33h] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov ecx [ebp+8] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [edi+8] +
mov [ecx+eax] dl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [edi+8] +
shr eax 8 +
mov [ecx+edx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx word ptr [edi+0Ah] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
movzx ecx byte ptr [edi+0Bh] +
mov [edx+eax] cl +
jmp loc_457597  +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_2C] 0 +
call sub_454FF0  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+8] +
mov [edi+30h] eax +
mov eax [ebp+14h] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 1Fh +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 8Bh +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 8 +
mov eax [ebp+1Ch] +
test eax eax +
jz loc_4583B6  +
mov edi [eax] +
mov ebx [ebp+14h] +
mov esi [ebp+8] +
test edi edi +
setnz cl  +
cmp dword ptr [eax+2Ch] 1 +
lea edx [ebx+1] +
mov [ebp+14h] edx +
sbb edx edx +
not edx  +
and edx 2 +
add ecx edx +
cmp dword ptr [eax+10h] 1 +
sbb edx edx +
not edx  +
and edx 4 +
add ecx edx +
cmp dword ptr [eax+1Ch] 1 +
sbb edx edx +
not edx  +
and edx 8 +
add edx ecx +
cmp dword ptr [eax+24h] 1 +
sbb eax eax +
not eax  +
and eax 10h +
add eax edx +
mov [esi+ebx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
mov ecx [ecx+4] +
mov [edx+eax] cl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [ebp+1Ch] +
mov eax [eax+4] +
shr eax 8 +
mov [ecx+edx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
movzx ecx word ptr [ecx+6] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
movzx ecx byte ptr [ecx+7] +
mov [edx+eax] cl +
mov eax [ebp+14h] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [ebp+84h] +
add eax [ebp+8] +
cmp edx 9 +
mov ecx eax +
mov eax 2 +
jz loc_458244  +
cmp dword ptr [ebp+88h] 1 +
jle loc_458453  +
mov eax 4 +
mov [ecx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov ecx [ebp+1Ch] +
mov ecx [ecx+0Ch] +
mov [edx+eax] cl +
mov ecx [ebp+1Ch] +
mov esi [ecx+10h] +
test esi esi +
jz loc_458463  +
mov eax [ebp+14h] +
mov ebx [ebp+8] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [ecx+14h] +
mov [ebx+eax] dl +
mov edx [ebp+14h] +
mov ecx [ebp+8] +
lea eax [edx+1] +
mov [ebp+14h] eax +
mov eax [ebp+1Ch] +
mov eax [eax+14h] +
shr eax 8 +
mov [ecx+edx] al +
mov ecx [ebp+1Ch] +
mov eax ecx +
mov ebx [ecx+2Ch] +
test ebx ebx +
jnz loc_458340  +
mov dword ptr [ebp+20h] 0 +
mov dword ptr [ebp+4] 45h +
jmp loc_45782E  +
mov eax [esp+2Ch+arg_0] +
sub edx ebx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] edx +
add ebx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] ebx +
call sub_454FF0  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
jmp loc_457B77  +
mov eax [esp+2Ch+arg_0] +
sub edx ebx +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] edx +
add ebx [ebp+8] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] ebx +
call sub_454FF0  +
mov edi [esp+2Ch+arg_0] +
mov edx [ebp+14h] +
mov [edi+30h] eax +
jmp loc_457EFB  +
cmp ecx 2 +
ja loc_457D49  +
mov [esp+2Ch+var_18] esi +
jmp loc_457BC0  +
mov eax 1 +
jmp loc_45766B  +
mov eax [esp+2Ch+var_10] +
jmp loc_457D2F  +
mov [esp+2Ch+var_2C] ebp +
call sub_45A080  +
jmp loc_4576FD  +
mov eax [esp+2Ch+arg_0] +
mov ecx [ebp+14h] +
mov edx [ebp+8] +
mov eax [eax+30h] +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] edx +
mov [esp+2Ch+var_2C] eax +
call sub_454FF0  +
mov edi [esp+2Ch+arg_0] +
mov ecx [ebp+1Ch] +
mov [edi+30h] eax +
mov eax ecx +
jmp loc_4582A3  +
mov eax [esp+2Ch+var_10] +
add ebx 7 +
jmp loc_457D2F  +
mov eax [esp+2Ch+var_10] +
add ebx 2 +
jmp loc_457D2F  +
mov eax [esp+2Ch+var_10] +
add ebx 6 +
jmp loc_457D2F  +
mov eax [esp+2Ch+var_10] +
add ebx 5 +
jmp loc_457D2F  +
mov eax [esp+2Ch+var_10] +
add ebx 4 +
jmp loc_457D2F  +
mov eax [esp+2Ch+var_10] +
add ebx 3 +
jmp loc_457D2F  +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0 +
mov eax [ebp+14h] +
lea edx [eax+1] +
mov [ebp+14h] edx +
mov edx [ebp+84h] +
add eax [ebp+8] +
cmp edx 9 +
mov ecx eax +
mov eax 2 +
jz loc_458432  +
cmp dword ptr [ebp+88h] 1 +
jle loc_45846A  +
mov eax 4 +
mov [ecx] al +
mov eax [ebp+14h] +
mov edx [ebp+8] +
lea ecx [eax+1] +
mov [ebp+14h] ecx +
mov byte ptr [edx+eax] 0Bh +
mov edx [ebp+14h] +
mov dword ptr [ebp+4] 71h +
jmp loc_4574A4  +
cmp edx 1 +
jle loc_45823F  +
xor eax eax +
jmp loc_458244  +
mov eax ecx +
jmp loc_458298  +
cmp edx 1 +
lea esi [esi+0] +
jle loc_45842D  +
xor eax eax +
jmp loc_458432  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov edx [esp+30h] +
mov esi [esp+34h] +
mov edi [esp+38h] +
test edx edx +
jz loc_458570  +
mov ebx [edx+1Ch] +
test ebx ebx +
jz loc_458570  +
cmp esi 0FFFFFFFFh +
jz loc_458531  +
cmp esi 9 +
ja loc_458570  +
cmp edi 4 +
ja loc_458570  +
mov ecx [ebx+84h] +
cmp [ebx+88h] edi +
lea eax [ecx+ecx*2] +
mov eax ds:off_494F48[eax*4] +
jz loc_458540  +
mov ebp [edx+8] +
xor eax eax +
test ebp ebp +
jnz loc_458550  +
cmp esi ecx +
jz loc_458523  +
lea ecx [esi+esi*2] +
shl ecx 2 +
lea edx dword_494F40[ecx] +
mov [ebx+84h] esi +
movzx esi word ptr [ecx+494F42h] +
movzx ecx word ptr ds:dword_494F40[ecx] +
mov [ebx+80h] esi +
mov [ebx+8Ch] ecx +
movzx ecx word ptr [edx+4] +
movzx edx word ptr [edx+6] +
mov [ebx+90h] ecx +
mov [ebx+7Ch] edx +
mov [ebx+88h] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov esi 6 +
jmp loc_4584B8  +
***
lea ebp [esi+esi*2] +
cmp ds:off_494F48[ebp*4] eax +
jnz loc_4584D9  +
xor eax eax +
jmp loc_4584E2  +
***
mov dword ptr [esp+4] 5 +
mov [esp] edx +
call sub_457400  +
mov ecx [ebx+84h] +
jmp loc_4584E2  +
***
mov eax 0FFFFFFFEh +
jmp loc_458529  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
test ebx ebx +
jz loc_45866D  +
mov eax [ebx+1Ch] +
test eax eax +
jz loc_45866D  +
mov esi [eax+4] +
cmp esi 2Ah +
jnz loc_458634  +
mov edx [eax+8] +
test edx edx +
jz loc_4585C1  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov edx [eax+44h] +
test edx edx +
jz loc_4585DA  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov edx [eax+40h] +
test edx edx +
jz loc_4585F3  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov edx [eax+38h] +
test edx edx +
jz loc_45860C  +
mov ecx [ebx+28h] +
mov eax [ebx+24h] +
mov [esp+14h+var_10] edx +
mov [esp+14h+var_14] ecx +
call eax  +
mov eax [ebx+1Ch] +
mov ecx [ebx+28h] +
mov edx [ebx+24h] +
mov [esp+14h+var_10] eax +
mov [esp+14h+var_14] ecx +
call edx  +
xor eax eax +
cmp esi 71h +
setnz al  +
mov dword ptr [ebx+1Ch] 0 +
lea eax [eax+eax*2-3] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
cmp esi 45h +
jz loc_4585A8  +
cmp esi 49h +
jz loc_4585A8  +
cmp esi 5Bh +
jz loc_4585A8  +
cmp esi 67h +
jz loc_4585A8  +
cmp esi 71h +
jz loc_4585A8  +
cmp esi 29Ah +
jz loc_4585A8  +
mov eax 0FFFFFFFEh +
jmp loc_45862E  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov esi [esp+2Ch+arg_0] +
mov edi [esp+2Ch+arg_4] +
mov ecx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_14] +
mov ebp [esp+2Ch+arg_C] +
mov edx [esp+2Ch+arg_1C] +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_18] +
test eax eax +
jz loc_4588F0  +
cmp byte ptr [eax] 31h +
jnz loc_4588F0  +
cmp edx 38h +
jnz loc_4588F0  +
test esi esi +
jz loc_458900  +
mov eax [esi+20h] +
mov dword ptr [esi+18h] 0 +
test eax eax +
jz loc_458920  +
mov ebx [esi+24h] +
test ebx ebx +
jz loc_458910  +
cmp edi 0FFFFFFFFh +
mov eax 6 +
cmovz edi eax +
test ebp ebp +
js loc_4588E0  +
cmp ebp 0Fh +
mov edx 1 +
jg loc_4588D4  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] edx +
sub eax 1 +
cmp eax 8 +
ja loc_458900  +
cmp ecx 8 +
jnz loc_458900  +
lea eax [ebp-8] +
cmp eax 7 +
ja loc_458900  +
cmp edi 9 +
ja loc_458900  +
cmp [esp+2Ch+var_14] 4 +
ja loc_458900  +
mov ecx [esi+28h] +
cmp ebp 8 +
mov eax 9 +
cmovz ebp eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_24] 16C4h +
mov [esp+2Ch+var_28] 1 +
mov [esp+2Ch+var_2C] ecx +
call eax  +
test eax eax +
mov ebx eax +
jz loc_458951  +
mov edx [esp+2Ch+var_10] +
mov ecx ebp +
mov [esi+1Ch] eax +
mov [eax+30h] ebp +
mov [eax] esi +
mov [eax+18h] edx +
mov edx 1 +
shl edx cl +
mov dword ptr [eax+1Ch] 0 +
lea eax [edx-1] +
mov ebp edx +
mov [ebx+34h] eax +
mov eax [esp+2Ch+var_18] +
mov [ebx+2Ch] edx +
mov edx 1 +
lea ecx [eax+7] +
add eax 9 +
shl edx cl +
mov [ebx+50h] ecx +
mov ecx edx +
mov [ebx+4Ch] edx +
mov edx 0AAAAAAABh +
sub ecx 1 +
mul  edx +
mov eax [esi+20h] +
mov [ebx+54h] ecx +
shr edx 1 +
mov [ebx+58h] edx +
mov edx [esi+28h] +
mov [esp+2Ch+var_24] 2 +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] edx +
call eax  +
mov ecx [ebx+2Ch] +
mov edx [esi+28h] +
mov [ebx+38h] eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] 2 +
call eax  +
mov ecx [ebx+4Ch] +
mov edx [esi+28h] +
mov [ebx+40h] eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] 2 +
call eax  +
mov edx [esi+28h] +
mov dword ptr [ebx+16C0h] 0 +
mov [ebx+44h] eax +
mov eax [esp+2Ch+var_18] +
lea ecx [eax+6] +
mov eax 1 +
shl eax cl +
mov [ebx+169Ch] eax +
mov ecx eax +
mov eax [esi+20h] +
mov [esp+2Ch+var_28] ecx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_24] 4 +
call eax  +
mov edx [ebx+169Ch] +
lea ecx ds:0[edx*4] +
mov [ebx+0Ch] ecx +
mov ecx [ebx+38h] +
mov [ebx+8] eax +
test ecx ecx +
jz loc_458933  +
mov ebp [ebx+40h] +
test ebp ebp +
jz loc_458933  +
mov ecx [ebx+44h] +
test ecx ecx +
jz loc_458933  +
test eax eax +
jz loc_458933  +
mov ecx edx +
and ecx 0FFFFFFFEh +
lea edx [edx+edx*2] +
add ecx eax +
add eax edx +
mov [ebx+1698h] eax +
mov eax [esp+2Ch+var_14] +
mov [ebx+16A4h] ecx +
mov [ebx+84h] edi +
mov byte ptr [ebx+24h] 8 +
mov [ebx+88h] eax +
mov [esp+2Ch+arg_0] esi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp loc_4570E0  +
sub ebp 10h +
mov dl 2 +
jmp loc_45870F  +
neg ebp  +
xor edx edx +
jmp loc_45870F  +
mov eax 0FFFFFFFAh +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
mov eax 0FFFFFFFEh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esi+24h] offset loc_454A10 +
jmp loc_4586EE  +
mov dword ptr [esi+20h] offset loc_4549F0 +
mov dword ptr [esi+28h] 0 +
jmp loc_4586E3  +
mov eax ds:off_492D78 +
mov dword ptr [ebx+4] 29Ah +
mov [esi+18h] eax +
mov [esp+2Ch+var_2C] esi +
call sub_458580  +
mov eax 0FFFFFFFCh +
jmp loc_4588F5  +
mov eax 0FFFFFFFCh +
jmp loc_4588F5  +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] 8 +
mov [esp+2Ch+var_20] 0Fh +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] 8 +
mov [esp+2Ch+var_14] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_458680  +
add esp 2Ch +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+34h] +
mov ebp [esp+30h] +
test eax eax +
jz loc_458C45  +
test ebp ebp +
jz loc_458C45  +
mov edx [eax+1Ch] +
test edx edx +
mov [esp+0Ch] edx +
jz loc_458C45  +
mov ecx [eax] +
mov [ebp+0] ecx +
mov ecx [eax+4] +
mov [ebp+4] ecx +
mov ecx [eax+8] +
mov [ebp+8] ecx +
mov ecx [eax+0Ch] +
mov [ebp+0Ch] ecx +
mov ecx [eax+10h] +
mov [ebp+10h] ecx +
mov ecx [eax+14h] +
mov [ebp+14h] ecx +
mov ecx [eax+18h] +
mov [ebp+18h] ecx +
mov ecx [eax+1Ch] +
mov [ebp+1Ch] ecx +
mov ecx [eax+20h] +
mov [ebp+20h] ecx +
mov ebx [eax+24h] +
mov [ebp+24h] ebx +
mov ebx [eax+28h] +
mov [ebp+28h] ebx +
mov esi [eax+2Ch] +
mov [ebp+2Ch] esi +
mov esi [eax+30h] +
mov [ebp+30h] esi +
mov eax [eax+34h] +
mov [ebp+34h] eax +
mov [esp] ebx +
mov dword ptr [esp+8] 16C4h +
mov dword ptr [esp+4] 1 +
call ecx  +
test eax eax +
mov ebx eax +
jz loc_458C60  +
test bl 1 +
mov edi eax +
mov esi [esp+0Ch] +
mov [ebp+1Ch] eax +
mov eax 16C4h +
jnz loc_458C30  +
test edi 2 +
jnz loc_458C15  +
mov ecx eax +
shr ecx 2 +
test al 2 +
movs   +
jnz loc_458C00  +
test al 1 +
jnz loc_458BF3  +
mov esi [ebx+2Ch] +
mov ecx [ebp+28h] +
mov eax [ebp+20h] +
mov [ebx] ebp +
mov [esp+4] esi +
mov [esp] ecx +
mov dword ptr [esp+8] 2 +
call eax  +
mov esi [ebx+2Ch] +
mov ecx [ebp+28h] +
mov [ebx+38h] eax +
mov eax [ebp+20h] +
mov [esp+4] esi +
mov [esp] ecx +
mov dword ptr [esp+8] 2 +
call eax  +
mov esi [ebx+4Ch] +
mov ecx [ebp+28h] +
mov [ebx+40h] eax +
mov eax [ebp+20h] +
mov [esp+4] esi +
mov [esp] ecx +
mov dword ptr [esp+8] 2 +
call eax  +
mov esi [ebx+169Ch] +
mov ecx [ebp+28h] +
mov [ebx+44h] eax +
mov eax [ebp+20h] +
mov [esp+4] esi +
mov dword ptr [esp+8] 4 +
mov [esp] ecx +
call eax  +
mov esi eax +
mov [ebx+8] eax +
mov eax [ebx+38h] +
test eax eax +
jz loc_458C50  +
mov ecx [ebx+40h] +
test ecx ecx +
jz loc_458C50  +
mov edx [ebx+44h] +
test edx edx +
jz loc_458C50  +
test esi esi +
jz loc_458C50  +
mov edi [esp+0Ch] +
mov ecx [ebx+2Ch] +
mov edx [edi+38h] +
add ecx ecx +
mov [esp+8] ecx +
mov [esp] eax +
mov [esp+4] edx +
call memcpy  +
mov ecx [ebx+2Ch] +
mov edx [edi+40h] +
mov eax [ebx+40h] +
add ecx ecx +
mov [esp+8] ecx +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov ecx [ebx+4Ch] +
mov edx [edi+44h] +
mov eax [ebx+44h] +
add ecx ecx +
mov [esp+8] ecx +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov ecx [ebx+0Ch] +
mov edx [edi+8] +
mov eax [ebx+8] +
mov [esp+8] ecx +
mov [esp+4] edx +
mov [esp] eax +
call memcpy  +
mov eax [edi+10h] +
mov edx [ebx+8] +
add eax edx +
sub eax [edi+8] +
mov [ebx+10h] eax +
mov eax [ebx+169Ch] +
mov ecx eax +
lea eax [eax+eax*2] +
and ecx 0FFFFFFFEh +
add edx eax +
add esi ecx +
lea eax [ebx+94h] +
mov [ebx+0B18h] eax +
lea eax [ebx+988h] +
mov [ebx+0B24h] eax +
lea eax [ebx+0A7Ch] +
mov [ebx+0B30h] eax +
xor eax eax +
mov [ebx+16A4h] esi +
mov [ebx+1698h] edx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
movzx eax byte ptr [esi+ecx] +
mov [edi+ecx] al +
jmp loc_458A8A  +
***
movzx ecx word ptr [esi] +
test al 1 +
mov [edi] cx +
mov ecx 2 +
jz loc_458A8A  +
jmp loc_458BF3  +
***
movzx ecx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] cx +
jmp loc_458A73  +
***
movzx eax byte ptr [esi] +
lea edi [ebx+1] +
lea esi [esi+1] +
mov [ebx] al +
mov eax 16C3h +
jmp loc_458A67  +
***
mov eax 0FFFFFFFEh +
jmp loc_458BEB  +
***
mov [esp] ebp +
call sub_458580  +
mov eax 0FFFFFFFCh +
jmp loc_458BEB  +
***
mov eax 0FFFFFFFCh +
jmp loc_458BEB  +
***
mov edi edx +
push esi  +
push ebx  +
sub esp 18h +
mov edx [eax+1450h] +
lea ebp [ecx+2D4h] +
add ecx ecx +
mov ebx [eax+ebp*4+0Ch] +
cmp ecx edx +
mov [esp+20h+var_20] edx +
mov [esp+20h+var_10] ebx +
jg loc_458D10  +
lea edx [edi+ebx*4] +
mov [esp+20h+var_18] edx +
jmp loc_458CCA  +
mov edx [eax+ecx*4+0B5Ch] +
mov ebx ecx +
movzx esi word ptr [edi+edx*4] +
mov ecx [esp+20h+var_18] +
cmp [ecx] si +
jb loc_458D10  +
jz loc_458D20  +
lea ecx [ebx+ebx] +
cmp ecx [esp+20h+var_20] +
mov [eax+ebp*4+0Ch] edx +
lea ebp [ebx+2D4h] +
jg loc_458D10  +
cmp ecx [esp+20h+var_20] +
jge loc_458CA0  +
mov esi [eax+ecx*4+0B5Ch] +
lea ebx [ecx+1] +
mov edx [eax+ecx*4+0B60h] +
mov [esp+20h+var_14] esi +
movzx esi word ptr [edi+esi*4] +
mov word ptr [esp+20h+var_1C] si +
movzx esi word ptr [edi+edx*4] +
cmp si word ptr [esp+20h+var_1C] +
jb loc_458CAD  +
jz loc_458D45  +
mov ebx ecx +
mov ecx [esp+20h+var_18] +
movzx esi word ptr [esp+20h+var_1C] +
mov edx [esp+20h+var_14] +
cmp [ecx] si +
jnb loc_458CB6  +
nop   +
mov edi [esp+20h+var_10] +
mov [eax+ebp*4+0Ch] edi +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi [esp+20h+var_10] +
movzx ecx byte ptr [eax+edx+1458h] +
cmp [eax+esi+1458h] cl +
ja loc_458CB8  +
mov edi [esp+20h+var_10] +
mov [eax+ebp*4+0Ch] edi +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+20h+var_C] ebx +
mov ebx [esp+20h+var_14] +
mov [esp+20h+var_1C] ecx +
movzx ecx byte ptr [eax+edx+1458h] +
cmp cl [eax+ebx+1458h] +
mov ecx [esp+20h+var_1C] +
cmova edx ebx +
mov ebx [esp+20h+var_C] +
cmova ebx ecx +
jmp loc_458CAD  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 4Ch +
mov eax [edx+8] +
mov ecx [edx] +
mov [esp+4Ch+var_44] edx +
mov ebp [eax+0Ch] +
mov edi [eax] +
mov [esp+4Ch+var_28] ecx +
mov dword ptr [ebx+1450h] 0 +
test ebp ebp +
mov dword ptr [ebx+1454h] 23Dh +
jle loc_4591EC  +
mov edx ecx +
xor eax eax +
mov ecx 0FFFFFFFFh +
jmp loc_458DEC  +
mov ecx [ebx+1450h] +
add edx 4 +
lea esi [ecx+1] +
mov [ebx+1450h] esi +
mov [ebx+ecx*4+0B60h] eax +
mov ecx eax +
mov byte ptr [ebx+eax+1458h] 0 +
add eax 1 +
cmp eax ebp +
jz loc_458E02  +
cmp word ptr [edx] 0 +
jnz loc_458DC2  +
xor esi esi +
add eax 1 +
mov [edx+2] si +
add edx 4 +
cmp eax ebp +
jnz loc_458DEC  +
mov esi ecx +
mov ecx [ebx+1450h] +
mov [esp+4Ch+var_4C] ebp +
mov ebp [esp+4Ch+var_28] +
jmp loc_458E48  +
mov [ebx+ecx*4+0B5Ch] eax +
mov ecx 1 +
mov [ebp+edx+0] cx +
mov byte ptr [ebx+eax+1458h] 0 +
sub dword ptr [ebx+16A8h] 1 +
test edi edi +
jz loc_458E42  +
movzx eax word ptr [edi+edx+2] +
sub [ebx+16ACh] eax +
mov ecx [ebx+1450h] +
cmp ecx 1 +
jg loc_458E6D  +
add ecx 1 +
xor edx edx +
xor eax eax +
cmp esi 1 +
mov [ebx+1450h] ecx +
jg loc_458E13  +
add esi 1 +
lea edx ds:0[esi*4] +
mov eax esi +
jmp loc_458E13  +
mov edi [esp+4Ch+var_44] +
sar ecx 1 +
mov ebp [esp+4Ch+var_4C] +
mov [esp+4Ch+var_24] esi +
mov [edi+4] esi +
mov edi [esp+4Ch+var_28] +
mov esi ecx +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_458C70  +
sub esi 1 +
jnz loc_458E83  +
mov eax [ebx+1450h] +
mov edi [esp+4Ch+var_28] +
jmp loc_458EA2  +
mov ebp esi +
lea edx [eax-1] +
mov eax [ebx+eax*4+0B5Ch] +
mov ecx 1 +
mov esi [ebx+0B60h] +
mov [ebx+1450h] edx +
mov edx edi +
mov [ebx+0B60h] eax +
mov eax ebx +
call sub_458C70  +
mov edx [ebx+1454h] +
mov eax [ebx+0B60h] +
lea ecx [edx-2] +
mov [ebx+edx*4+0B58h] esi +
mov [ebx+1454h] ecx +
lea ecx [edi+esi*4] +
mov [ebx+edx*4+0B54h] eax +
mov edx ecx +
lea ecx [edi+eax*4] +
mov [esp+4Ch+var_48] ecx +
movzx ecx word ptr [ecx] +
add cx [edx] +
mov [edi+ebp*4] cx +
movzx ecx byte ptr [ebx+esi+1458h] +
mov byte ptr [esp+4Ch+var_4C] cl +
movzx ecx byte ptr [ebx+eax+1458h] +
movzx eax byte ptr [esp+4Ch+var_4C] +
lea esi [ecx+1] +
add eax 1 +
cmp byte ptr [esp+4Ch+var_4C] cl +
mov ecx 1 +
cmovb eax esi +
mov [ebx+ebp+1458h] al +
mov eax [esp+4Ch+var_48] +
lea esi [ebp+1] +
mov [eax+2] bp +
mov eax ebx +
mov [edx+2] bp +
mov edx edi +
mov [ebx+0B60h] ebp +
call sub_458C70  +
mov eax [ebx+1450h] +
cmp eax 1 +
jg loc_458EA0  +
mov eax [ebx+1454h] +
mov ecx [ebx+0B60h] +
lea edx [eax-1] +
mov [ebx+1454h] edx +
xor edx edx +
mov [ebx+eax*4+0B58h] ecx +
mov eax [esp+4Ch+var_44] +
mov edi [eax] +
mov ebp [eax+4] +
mov eax [eax+8] +
mov [esp+4Ch+var_48] edi +
mov edi [eax] +
mov [esp+4Ch+var_30] edi +
mov edi [eax+4] +
mov [esp+4Ch+var_2C] edi +
mov edi [eax+8] +
mov eax [eax+10h] +
mov [esp+4Ch+var_38] edi +
xor esi esi +
mov [ebx+edx*2+0B3Ch] si +
add edx 1 +
cmp edx 10h +
jnz loc_458FA6  +
mov edi [esp+4Ch+var_48] +
xor edx edx +
mov [edi+ecx*4+2] dx +
mov edx [ebx+1454h] +
lea ecx [edx+1] +
cmp ecx 23Ch +
jg loc_459179  +
mov [esp+4Ch+var_44] ebp +
mov ebp [esp+4Ch+var_48] +
lea ecx [ebx+1450h] +
lea edi [ebx+edx*4+0B60h] +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_34] 0 +
mov [esp+4Ch+var_4C] eax +
mov [esp+4Ch+var_3C] ebx +
mov edx [edi] +
lea esi ds:0[edx*4] +
lea ecx [ebp+esi+0] +
movzx eax word ptr [ecx+2] +
movzx eax word ptr [ebp+eax*4+2] +
add eax 1 +
cmp [esp+4Ch+var_4C] eax +
jge loc_459026  +
add [esp+4Ch+var_34] 1 +
mov eax [esp+4Ch+var_4C] +
cmp [esp+4Ch+var_44] edx +
mov [ecx+2] ax +
jl loc_45907C  +
mov ebx [esp+4Ch+var_3C] +
add word ptr [ebx+eax*2+0B3Ch] 1 +
xor ebx ebx +
cmp [esp+4Ch+var_38] edx +
jg loc_459050  +
mov ebx [esp+4Ch+var_2C] +
sub edx [esp+4Ch+var_38] +
mov ebx [ebx+edx*4] +
movzx edx word ptr [ecx] +
add eax ebx +
mov ecx ebx +
mov ebx [esp+4Ch+var_3C] +
imul eax edx +
add [ebx+16A8h] eax +
mov eax [esp+4Ch+var_30] +
test eax eax +
jz loc_45907C  +
movzx eax word ptr [eax+esi+2] +
add eax ecx +
imul eax edx +
add [ebx+16ACh] eax +
add edi 4 +
cmp edi [esp+4Ch+var_40] +
jnz loc_459000  +
mov edx [esp+4Ch+var_34] +
mov ebp [esp+4Ch+var_44] +
mov eax [esp+4Ch+var_4C] +
mov ebx [esp+4Ch+var_3C] +
test edx edx +
jz loc_459179  +
lea ecx [eax-1] +
lea edi [eax+597h] +
lea esi [ebx+eax*2] +
mov [esp+4Ch+var_4C] ebp +
mov ebp edx +
mov [esp+4Ch+var_40] eax +
mov eax ecx +
mov [esp+4Ch+var_44] ecx +
movzx ecx word ptr [ebx+edi*2+0Ch] +
mov edx eax +
test cx cx +
jnz loc_4590D7  +
sub edx 1 +
movzx ecx word ptr [ebx+edx*2+0B3Ch] +
test cx cx +
jz loc_4590C7  +
sub ecx 1 +
sub ebp 2 +
add word ptr [ebx+edx*2+0B3Eh] 2 +
mov [ebx+edx*2+0B3Ch] cx +
movzx ecx word ptr [esi+0B3Ch] +
sub ecx 1 +
test ebp ebp +
mov [esi+0B3Ch] cx +
jg loc_4590BB  +
mov eax [esp+4Ch+var_40] +
mov ebp [esp+4Ch+var_4C] +
test eax eax +
jz loc_459179  +
mov edx 23Dh +
movzx ecx cx +
test ecx ecx +
jz loc_45915E  +
mov [esp+4Ch+var_4C] ebp +
lea esi [esi+0] +
sub edx 1 +
mov esi [ebx+edx*4+0B5Ch] +
cmp [esp+4Ch+var_4C] esi +
jl loc_459157  +
mov edi [esp+4Ch+var_48] +
lea esi [edi+esi*4] +
movzx edi word ptr [esi+2] +
cmp edi eax +
jz loc_459154  +
mov ebp eax +
sub ebp edi +
mov edi ebp +
movzx ebp word ptr [esi] +
imul edi ebp +
add [ebx+16A8h] edi +
mov [esi+2] ax +
sub ecx 1 +
test ecx ecx +
jnz loc_459120  +
mov ebp [esp+4Ch+var_4C] +
mov edi [esp+4Ch+var_44] +
test edi edi +
mov eax edi +
jz loc_459179  +
movzx ecx word ptr [ebx+edi*2+0B3Ch] +
sub edi 1 +
mov [esp+4Ch+var_44] edi +
jmp loc_459113  +
add ebx 0B3Ch +
xor edx edx +
mov eax 1 +
add dx [ebx+eax*2-2] +
add edx edx +
mov [esp+eax*2+4Ch+var_20] dx +
add eax 1 +
cmp eax 10h +
jnz loc_459186  +
mov eax [esp+4Ch+var_24] +
mov esi [esp+4Ch+var_28] +
cmp eax 0FFFFFFFFh +
lea edi [esi+eax*4+4] +
jz loc_4591E4  +
nop   +
lea esi [esi+0] +
movzx edx word ptr [esi+2] +
test edx edx +
jz loc_4591DD  +
movzx ecx [esp+edx*2+4Ch+var_20] +
xor ebx ebx +
lea eax [ecx+1] +
mov [esp+edx*2+4Ch+var_20] ax +
mov eax ecx +
and eax 1 +
or eax ebx +
shr ecx 1 +
sub edx 1 +
lea ebx [eax+eax] +
jnz loc_4591C7  +
shr ebx 1 +
mov [esi] bx +
add esi 4 +
cmp esi edi +
jnz loc_4591B0  +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+4Ch+var_4C] ebp +
xor ecx ecx +
mov esi 0FFFFFFFFh +
mov ebp [esp+4Ch+var_28] +
jmp loc_458E48  +
***
push esi  +
push ebx  +
sub esp 8 +
movzx ebx word ptr [edx+2] +
lea esi ds:4[ecx*4] +
mov word ptr [edx+esi+2] 0FFFFh +
cmp ebx 1 +
sbb ebp ebp +
add ebp 4 +
cmp ebx 1 +
sbb edi edi +
and edi 83h +
add edi 7 +
test ecx ecx +
js loc_4592BC  +
add esi edx +
xor ecx ecx +
mov [esp+8+var_4] esi +
mov [esp+8+var_8] 0FFFFFFFFh +
jmp loc_459275  +
add [eax+ebx*4+0A7Ch] cx +
test esi esi +
jz loc_4592A7  +
cmp ebx esi +
setnz cl  +
movzx ebp cl +
movzx edi cl +
add ebp 3 +
add edi 6 +
xor ecx ecx +
add edx 4 +
cmp edx [esp+8+var_4] +
jz loc_4592BC  +
mov [esp+8+var_8] ebx +
mov ebx esi +
add ecx 1 +
movzx esi word ptr [edx+6] +
cmp ecx edi +
jge loc_459284  +
cmp ebx esi +
jz loc_4592D6  +
cmp ecx ebp +
jl loc_459248  +
test ebx ebx +
jz loc_4592C4  +
cmp [esp+8+var_8] ebx +
nop   +
jz loc_45929B  +
add word ptr [eax+ebx*4+0A7Ch] 1 +
add word ptr [eax+0ABCh] 1 +
test esi esi +
jnz loc_459254  +
xor ecx ecx +
add edx 4 +
cmp edx [esp+8+var_4] +
mov ebp 3 +
mov edi 8Ah +
jnz loc_459270  +
add esp 8 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ecx 0Ah +
jg loc_4592E0  +
add word ptr [eax+0AC0h] 1 +
jmp loc_459250  +
mov ebx [esp+8+var_8] +
jmp loc_459267  +
add word ptr [eax+0AC4h] 1 +
jmp loc_459250  +
***
push edi  +
push esi  +
push ebx  +
sub esp 14h +
movzx eax word ptr [edx+2] +
cmp eax 1 +
sbb esi esi +
add esi 4 +
cmp eax 1 +
sbb ebx ebx +
and ebx 83h +
add ebx 7 +
test ecx ecx +
mov [esp+20h+var_1C] eax +
js loc_4595F4  +
lea eax [edx+ecx*4+4] +
xor edi edi +
mov [esp+20h+var_14] edx +
mov edx 0FFFFFFFFh +
mov [esp+20h+var_20] edi +
mov edi ebp +
mov [esp+20h+var_10] eax +
mov eax [esp+20h+var_14] +
movzx eax word ptr [eax+6] +
mov [esp+20h+var_18] eax +
mov eax [esp+20h+var_20] +
lea ebp [eax+1] +
cmp ebp ebx +
jge loc_45935B  +
mov eax [esp+20h+var_18] +
cmp [esp+20h+var_1C] eax +
jz loc_4596F0  +
cmp ebp esi +
jge loc_459454  +
mov eax [esp+20h+var_1C] +
mov [esp+20h+var_20] ebp +
lea edx [edi+eax*4] +
mov ebp edx +
jmp loc_4593D0  +
mov ebx edx +
shl ebx cl +
mov ecx ebx +
mov ebx [edi+14h] +
or cx [edi+16B8h] +
lea esi [ebx+1] +
mov [edi+14h] esi +
mov esi [edi+8] +
mov [edi+16B8h] cx +
mov [esi+ebx] cl +
mov ecx [edi+14h] +
mov esi [edi+8] +
lea ebx [ecx+1] +
mov [edi+14h] ebx +
movzx ebx byte ptr [edi+16B9h] +
mov [esi+ecx] bl +
mov ebx [edi+16BCh] +
mov ecx 10h +
sub ecx ebx +
sar edx cl +
sub [esp+20h+var_20] 1 +
lea eax [eax+ebx-10h] +
mov [edi+16B8h] dx +
mov [edi+16BCh] eax +
jz loc_459406  +
movzx eax word ptr [ebp+0A7Eh] +
mov edx 10h +
mov ecx [edi+16BCh] +
sub edx eax +
cmp ecx edx +
movzx edx word ptr [ebp+0A7Ch] +
jg loc_459371  +
shl edx cl +
add eax ecx +
or [edi+16B8h] dx +
sub [esp+20h+var_20] 1 +
mov [edi+16BCh] eax +
jnz loc_4593D0  +
mov eax [esp+20h+var_18] +
test eax eax +
jz loc_4595D0  +
mov eax [esp+20h+var_18] +
cmp [esp+20h+var_1C] eax +
mov [esp+20h+var_20] 0 +
setnz bl  +
movzx esi bl +
movzx ebx bl +
add esi 3 +
add ebx 6 +
add [esp+20h+var_14] 4 +
mov eax [esp+20h+var_10] +
cmp [esp+20h+var_14] eax +
jz loc_4595F4  +
mov eax [esp+20h+var_18] +
mov edx [esp+20h+var_1C] +
mov [esp+20h+var_1C] eax +
jmp loc_459337  +
mov ecx [esp+20h+var_1C] +
test ecx ecx +
jz loc_459600  +
cmp edx [esp+20h+var_1C] +
jz loc_459841  +
mov eax [esp+20h+var_1C] +
mov ebx 10h +
mov ecx [edi+16BCh] +
lea edx [edi+eax*4] +
movzx eax word ptr [edx+0A7Eh] +
sub ebx eax +
cmp ecx ebx +
movzx ebx word ptr [edx+0A7Ch] +
jle loc_459824  +
mov edx [edi+14h] +
mov esi ebx +
shl esi cl +
mov ebp [edi+8] +
mov ecx esi +
or cx [edi+16B8h] +
lea esi [edx+1] +
mov [edi+14h] esi +
mov [edi+16B8h] cx +
mov [ebp+edx+0] cl +
mov edx [edi+14h] +
mov esi [edi+8] +
lea ecx [edx+1] +
mov [edi+14h] ecx +
movzx ecx byte ptr [edi+16B9h] +
mov [esi+edx] cl +
mov edx [edi+16BCh] +
mov ecx 10h +
sub ecx edx +
sar ebx cl +
lea ecx [eax+edx-10h] +
mov [edi+16B8h] bx +
mov [edi+16BCh] ecx +
movzx eax word ptr [edi+0ABEh] +
mov edx 10h +
sub edx eax +
cmp edx ecx +
movzx edx word ptr [edi+0ABCh] +
jge loc_459700  +
mov esi edx +
mov ebp [edi+8] +
shl esi cl +
mov ecx [edi+14h] +
or ebx esi +
mov [edi+16B8h] bx +
lea esi [ecx+1] +
mov [edi+14h] esi +
mov [ebp+ecx+0] bl +
mov ecx [edi+14h] +
mov esi [edi+8] +
lea ebx [ecx+1] +
mov [edi+14h] ebx +
movzx ebx byte ptr [edi+16B9h] +
mov [esi+ecx] bl +
mov esi [edi+16BCh] +
mov ecx 10h +
sub ecx esi +
sar edx cl +
lea ecx [eax+esi-10h] +
cmp ecx 0Eh +
mov [edi+16B8h] dx +
mov [edi+16BCh] ecx +
jle loc_45971C  +
mov ebp [esp+20h+var_20] +
mov esi [edi+14h] +
sub ebp 3 +
movzx ebp bp +
mov eax ebp +
shl eax cl +
or edx eax +
mov eax [edi+8] +
lea ecx [esi+1] +
mov [edi+16B8h] dx +
mov [edi+14h] ecx +
mov [eax+esi] dl +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov eax [edi+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 0Eh +
mov [edi+16BCh] eax +
mov eax [esp+20h+var_18] +
sar ebp cl +
mov [edi+16B8h] bp +
test eax eax +
jnz loc_459412  +
lea esi [esi+0] +
add [esp+20h+var_14] 4 +
mov esi 3 +
mov eax [esp+20h+var_10] +
mov ebx 8Ah +
cmp [esp+20h+var_14] eax +
mov [esp+20h+var_20] 0 +
jnz loc_459443  +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebp 0Ah +
jg loc_459740  +
movzx esi word ptr [edi+0AC2h] +
mov eax 10h +
mov ecx [edi+16BCh] +
sub eax esi +
cmp ecx eax +
jle loc_459856  +
movzx ebx word ptr [edi+0AC0h] +
mov eax [edi+14h] +
mov edx ebx +
shl edx cl +
lea ecx [eax+1] +
mov [edi+14h] ecx +
mov ecx [edi+8] +
or dx [edi+16B8h] +
mov [edi+16B8h] dx +
mov [ecx+eax] dl +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov edx [edi+16BCh] +
mov ecx 10h +
mov eax ebx +
sub ecx edx +
sar eax cl +
lea ecx [esi+edx-10h] +
cmp ecx 0Dh +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
jle loc_45987E  +
mov esi [esp+20h+var_20] +
mov edx [edi+14h] +
sub esi 2 +
movzx esi si +
mov ebx esi +
shl ebx cl +
mov ecx [edi+8] +
or eax ebx +
lea ebx [edx+1] +
mov [edi+16B8h] ax +
mov [edi+14h] ebx +
mov [ecx+edx] al +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov eax [edi+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 0Dh +
sar esi cl +
mov [edi+16B8h] si +
mov [edi+16BCh] eax +
jmp loc_459406  +
mov [esp+20h+var_20] ebp +
mov [esp+20h+var_1C] edx +
jmp loc_459430  +
shl edx cl +
add ecx eax +
or edx ebx +
cmp ecx 0Eh +
mov [edi+16B8h] dx +
mov [edi+16BCh] ecx +
jg loc_459567  +
movzx ebp word ptr [esp+20h+var_20] +
sub ebp 3 +
movzx ebp bp +
shl ebp cl +
add ecx 2 +
or edx ebp +
mov [edi+16B8h] dx +
mov [edi+16BCh] ecx +
jmp loc_459406  +
movzx esi word ptr [edi+0AC6h] +
mov eax 10h +
mov ecx [edi+16BCh] +
sub eax esi +
cmp ecx eax +
jle loc_4598C0  +
movzx ebx word ptr [edi+0AC4h] +
mov eax [edi+14h] +
mov edx ebx +
shl edx cl +
lea ecx [eax+1] +
mov [edi+14h] ecx +
mov ecx [edi+8] +
or dx [edi+16B8h] +
mov [edi+16B8h] dx +
mov [ecx+eax] dl +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov edx [edi+16BCh] +
mov ecx 10h +
mov eax ebx +
sub ecx edx +
sar eax cl +
lea ecx [esi+edx-10h] +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
cmp ecx 9 +
jle loc_4598A0  +
mov esi [esp+20h+var_20] +
mov edx [edi+14h] +
sub esi 0Ah +
movzx esi si +
mov ebx esi +
shl ebx cl +
mov ecx [edi+8] +
or eax ebx +
lea ebx [edx+1] +
mov [edi+16B8h] ax +
mov [edi+14h] ebx +
mov [ecx+edx] al +
mov eax [edi+14h] +
mov ecx [edi+8] +
lea edx [eax+1] +
mov [edi+14h] edx +
movzx edx byte ptr [edi+16B9h] +
mov [ecx+eax] dl +
mov eax [edi+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 9 +
sar esi cl +
mov [edi+16B8h] si +
mov [edi+16BCh] eax +
jmp loc_459406  +
shl ebx cl +
add ecx eax +
or bx [edi+16B8h] +
mov [edi+16BCh] ecx +
mov [edi+16B8h] bx +
jmp loc_4594EE  +
mov ecx [edi+16BCh] +
movzx ebx word ptr [edi+16B8h] +
mov [esp+20h+var_20] ebp +
jmp loc_4594EE  +
movzx eax word ptr [edi+0AC0h] +
shl eax cl +
add ecx esi +
or ax [edi+16B8h] +
cmp ecx 0Dh +
mov [edi+16BCh] ecx +
mov [edi+16B8h] ax +
jg loc_45968E  +
lea edx [ebp-3] +
movzx edx dx +
shl edx cl +
add ecx 3 +
or eax edx +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
jmp loc_459406  +
lea edx [ebp-0Bh] +
movzx edx dx +
shl edx cl +
add ecx 7 +
or eax edx +
mov [edi+16B8h] ax +
mov [edi+16BCh] ecx +
jmp loc_459406  +
movzx eax word ptr [edi+0AC4h] +
shl eax cl +
add ecx esi +
or ax [edi+16B8h] +
mov [edi+16BCh] ecx +
mov [edi+16B8h] ax +
jmp loc_4597BC  +
***
push esi  +
push ebx  +
sub esp 18h +
mov ebp [eax+16BCh] +
mov [esp+18h+var_10] edx +
mov edx [eax+16A0h] +
mov [esp+18h+var_8] ecx +
test edx edx +
jnz loc_459961  +
movzx esi word ptr [eax+16B8h] +
mov word ptr [esp+18h+var_18] si +
mov ebx [esp+18h+var_10] +
movzx edi word ptr [ebx+402h] +
mov ebx 10h +
mov edx ebx +
sub edx edi +
cmp edx ebp +
jl loc_459D08  +
mov ebx [esp+18h+var_10] +
mov ecx ebp +
lea edx [edi+ebp] +
movzx esi word ptr [ebx+400h] +
mov [eax+16BCh] edx +
shl esi cl +
or si word ptr [esp+18h+var_18] +
mov [eax+16B8h] si +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx ebx word ptr [eax+16B8h] +
xor ecx ecx +
mov edx ecx +
mov ecx ebp +
mov esi ebx +
jmp loc_4599F9  +
mov ebx [esp+18h+var_10] +
mov edi 10h +
lea ebx [ebx+edx*4] +
movzx edx word ptr [ebx+2] +
sub edi edx +
cmp edi ecx +
jge loc_459C88  +
movzx ebp word ptr [ebx] +
mov ebx ebp +
shl ebx cl +
mov ecx ebx +
mov ebx [eax+14h] +
or ecx esi +
mov esi [eax+8] +
mov [eax+16B8h] cx +
lea edi [ebx+1] +
mov [eax+14h] edi +
mov [esi+ebx] cl +
mov ecx [eax+14h] +
mov esi [eax+8] +
lea ebx [ecx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [esi+ecx] bl +
mov edi [eax+16BCh] +
mov ecx 10h +
mov esi ebp +
sub ecx edi +
sar esi cl +
lea ecx [edx+edi-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
mov edi [esp+18h+var_18] +
cmp edi [eax+16A0h] +
jnb loc_459C60  +
mov edx edi +
mov ebx [eax+16A4h] +
lea edi [edx+1] +
mov [esp+18h+var_18] edi +
mov edi [eax+1698h] +
movzx ebx word ptr [ebx+edx*2] +
movzx edx byte ptr [edi+edx] +
test ebx ebx +
jz loc_459975  +
mov [esp+18h+var_C] edx +
mov edi [esp+18h+var_10] +
movzx edx ds:byte_495120[edx] +
lea edi [edi+edx*4+404h] +
movzx ebp word ptr [edi+2] +
mov [esp+18h+var_14] edx +
mov edx 10h +
movzx edi word ptr [edi] +
sub edx ebp +
cmp edx ecx +
jge loc_459C70  +
mov edx edi +
shl edx cl +
mov ecx [eax+14h] +
mov [esp+18h+var_4] edi +
mov edi [eax+8] +
or esi edx +
mov [eax+16B8h] si +
lea edx [ecx+1] +
mov [eax+14h] edx +
mov edx esi +
mov [edi+ecx] dl +
mov ecx [eax+14h] +
mov edi [eax+8] +
lea esi [ecx+1] +
mov [eax+14h] esi +
movzx esi byte ptr [eax+16B9h] +
mov edx esi +
mov esi [esp+18h+var_4] +
mov [edi+ecx] dl +
mov edi [eax+16BCh] +
mov ecx 10h +
sub ecx [eax+16BCh] +
sar esi cl +
lea ecx [ebp+edi-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
mov edi [esp+18h+var_14] +
mov ebp ds:dword_495A20[edi*4] +
test ebp ebp +
jz loc_459B33  +
mov edx [esp+18h+var_14] +
mov edi [esp+18h+var_C] +
sub edi ds:dword_4950A0[edx*4] +
mov edx 10h +
sub edx ebp +
cmp edx ecx +
jge loc_459CD5  +
movzx edi di +
mov edx edi +
shl edx cl +
or esi edx +
mov edx [eax+14h] +
mov [eax+16B8h] si +
mov ecx esi +
lea esi [edx+1] +
mov [eax+14h] esi +
mov esi [eax+8] +
mov [esi+edx] cl +
mov edx [eax+14h] +
mov esi [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx byte ptr [eax+16B9h] +
mov [esi+edx] cl +
mov edx [eax+16BCh] +
mov ecx 10h +
mov esi edi +
sub ecx edx +
sar esi cl +
lea ecx [ebp+edx-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
lea edi [ebx-1] +
cmp edi 0FFh +
ja loc_459CC0  +
movzx ebx ds:byte_495220[edi] +
mov [esp+18h+var_14] ebx +
mov edx [esp+18h+var_14] +
mov ebx [esp+18h+var_8] +
lea ebx [ebx+edx*4] +
mov edx 10h +
movzx ebp word ptr [ebx+2] +
movzx ebx word ptr [ebx] +
sub edx ebp +
cmp edx ecx +
mov [esp+18h+var_C] ebp +
jge loc_459CA3  +
mov ebp [eax+14h] +
mov edx ebx +
shl ebx cl +
mov ecx [eax+8] +
or ebx esi +
mov [eax+16B8h] bx +
lea esi [ebp+1] +
mov [eax+14h] esi +
mov [ecx+ebp] bl +
mov ecx [eax+14h] +
mov esi [eax+8] +
lea ebx [ecx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [esi+ecx] bl +
mov ebp [eax+16BCh] +
mov ecx 10h +
mov ebx [esp+18h+var_C] +
mov esi edx +
sub ecx ebp +
sar esi cl +
lea ecx [ebx+ebp-10h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
mov ebx [esp+18h+var_14] +
mov ebp ds:dword_4959A0[ebx*4] +
test ebp ebp +
jz loc_4599E8  +
sub edi ds:dword_495020[ebx*4] +
mov ebx 10h +
sub ebx ebp +
cmp ebx ecx +
movzx edx di +
jge loc_459CF0  +
mov ebx edx +
shl ebx cl +
mov ecx ebx +
mov ebx [eax+14h] +
or ecx esi +
mov esi [eax+8] +
mov [eax+16B8h] cx +
lea edi [ebx+1] +
mov [eax+14h] edi +
mov [esi+ebx] cl +
mov ecx [eax+14h] +
mov esi [eax+8] +
lea ebx [ecx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [esi+ecx] bl +
mov edi [eax+16BCh] +
mov ecx 10h +
mov esi edx +
sub ecx edi +
sar esi cl +
lea ecx [ebp+edi-10h] +
mov edi [esp+18h+var_18] +
cmp edi [eax+16A0h] +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jb loc_4599F7  +
nop   +
lea esi [esi+0] +
mov ebp ecx +
mov word ptr [esp+18h+var_18] si +
jmp loc_45991A  +
shl edi cl +
add ecx ebp +
or esi edi +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_459AAD  +
movzx ebx word ptr [ebx] +
shl ebx cl +
add ecx edx +
or esi ebx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_4599E8  +
shl ebx cl +
add ecx [esp+18h+var_C] +
or esi ebx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_459BCA  +
mov edx edi +
shr edx 7 +
movzx ebx ds:byte_495320[edx] +
mov [esp+18h+var_14] ebx +
jmp loc_459B4D  +
movzx edx di +
shl edx cl +
add ecx ebp +
or esi edx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_459B33  +
shl edx cl +
add ecx ebp +
or esi edx +
mov [eax+16B8h] si +
mov [eax+16BCh] ecx +
jmp loc_4599E8  +
mov esi [esp+18h+var_10] +
mov ecx ebp +
mov ebp [eax+8] +
movzx esi word ptr [esi+400h] +
mov edx esi +
shl edx cl +
mov ecx edx +
mov edx [eax+14h] +
or cx word ptr [esp+18h+var_18] +
mov [esp+18h+var_14] esi +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [eax+16B8h] cx +
mov [ebp+edx+0] cl +
mov edx [eax+14h] +
movzx ecx byte ptr [eax+16B9h] +
mov ebp [eax+8] +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [ebp+edx+0] cl +
mov edx [eax+16BCh] +
mov ebp [esp+18h+var_14] +
sub ebx edx +
mov ecx ebx +
sar ebp cl +
lea edx [edi+edx-10h] +
mov [eax+16B8h] bp +
mov [eax+16BCh] edx +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov edx [eax+16BCh] +
push ebx  +
cmp edx 8 +
jg loc_459DC0  +
test edx edx +
jle loc_459DA6  +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
xor edx edx +
mov [eax+16B8h] dx +
mov dword ptr [eax+16BCh] 0 +
pop ebx  +
retn   +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
mov edx [eax+14h] +
mov ecx [eax+8] +
lea ebx [edx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [ecx+edx] bl +
jmp loc_459DA6  +
***
mov edx [eax+16BCh] +
push ebx  +
cmp edx 10h +
jz loc_459E28  +
cmp edx 7 +
jle loc_459E26  +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
shr word ptr [eax+16B8h] 8 +
sub dword ptr [eax+16BCh] 8 +
pop ebx  +
retn   +
mov edx [eax+14h] +
mov ebx [eax+8] +
lea ecx [edx+1] +
mov [eax+14h] ecx +
movzx ecx word ptr [eax+16B8h] +
mov [ebx+edx] cl +
mov edx [eax+14h] +
mov ecx [eax+8] +
lea ebx [edx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [ecx+edx] bl +
xor edx edx +
mov [eax+16B8h] dx +
mov dword ptr [eax+16BCh] 0 +
pop ebx  +
retn   +
***
mov edx [esp+arg_0] +
lea eax [edx+94h] +
mov [edx+0B18h] eax +
lea eax [edx+988h] +
mov [edx+0B24h] eax +
lea eax [edx+0A7Ch] +
mov [edx+0B30h] eax +
xor eax eax +
mov [edx+16B8h] ax +
xor eax eax +
mov dword ptr [edx+0B20h] offset off_476828 +
mov dword ptr [edx+0B2Ch] offset off_476814 +
mov dword ptr [edx+0B38h] offset unk_476800 +
mov dword ptr [edx+16BCh] 0 +
nop   +
lea esi [esi+0] +
xor ecx ecx +
mov [edx+eax*4+94h] cx +
add eax 1 +
cmp eax 11Eh +
jnz loc_459ED0  +
xor ax ax +
xor ecx ecx +
mov [edx+eax*4+988h] cx +
add eax 1 +
cmp eax 1Eh +
jnz loc_459EE7  +
xor al al +
nop   +
lea esi [esi+0] +
xor ecx ecx +
mov [edx+eax*4+0A7Ch] cx +
add eax 1 +
cmp eax 13h +
jnz loc_459F00  +
mov eax 1 +
mov [edx+494h] ax +
mov dword ptr [edx+16ACh] 0 +
mov dword ptr [edx+16A8h] 0 +
mov dword ptr [edx+16B0h] 0 +
mov dword ptr [edx+16A0h] 0 +
retn   +
***
push esi  +
push ebx  +
mov ebx [esp+arg_0] +
mov esi [esp+arg_4] +
mov edi [esp+arg_8] +
movzx eax [esp+arg_C] +
mov ecx [ebx+16BCh] +
cmp ecx 0Dh +
jg loc_45A003  +
shl eax cl +
add ecx 3 +
or [ebx+16B8h] ax +
mov [ebx+16BCh] ecx +
mov eax ebx +
call sub_459D80  +
mov eax [ebx+14h] +
lea ebp [esi+edi] +
mov edx [ebx+8] +
lea ecx [eax+1] +
mov [ebx+14h] ecx +
mov ecx edi +
mov [edx+eax] cl +
mov eax [ebx+14h] +
mov edx [ebx+8] +
lea ecx [eax+1] +
mov [ebx+14h] ecx +
mov ecx edi +
shr cx 8 +
mov [edx+eax] cl +
mov eax [ebx+14h] +
mov edx [ebx+8] +
lea ecx [eax+1] +
mov [ebx+14h] ecx +
mov ecx edi +
not ecx  +
mov [edx+eax] cl +
mov edx [ebx+14h] +
mov ecx [ebx+8] +
lea eax [edx+1] +
mov [ebx+14h] eax +
mov eax edi +
not eax  +
shr ax 8 +
test edi edi +
mov [ecx+edx] al +
jz loc_459FFE  +
mov eax [ebx+14h] +
add esi 1 +
mov ecx [ebx+8] +
cmp esi ebp +
lea edx [eax+1] +
mov [ebx+14h] edx +
movzx edx byte ptr [esi-1] +
mov [ecx+eax] dl +
jnz loc_459FE4  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx eax +
shl edx cl +
mov ecx edx +
mov edx [ebx+14h] +
or cx [ebx+16B8h] +
lea ebp [edx+1] +
mov [ebx+14h] ebp +
mov ebp [ebx+8] +
mov [ebx+16B8h] cx +
mov [ebp+edx+0] cl +
mov edx [ebx+14h] +
movzx ecx byte ptr [ebx+16B9h] +
lea ebp [edx+1] +
mov [ebx+14h] ebp +
mov ebp [ebx+8] +
mov [ebp+edx+0] cl +
mov edx [ebx+16BCh] +
mov ecx 10h +
sub ecx edx +
sub edx 0Dh +
sar eax cl +
mov [ebx+16B8h] ax +
mov [ebx+16BCh] edx +
jmp loc_459F86  +
***
mov eax [esp+arg_0] +
jmp loc_459DF0  +
***
push ebx  +
mov eax [esp+arg_0] +
mov ecx [eax+16BCh] +
cmp ecx 0Dh +
jle loc_45A105  +
mov ebx 2 +
mov edx [eax+14h] +
mov edi ebx +
mov esi [eax+8] +
shl edi cl +
mov ecx edi +
or cx [eax+16B8h] +
lea edi [edx+1] +
mov [eax+14h] edi +
mov [eax+16B8h] cx +
mov [esi+edx] cl +
mov edx [eax+14h] +
movzx ecx byte ptr [eax+16B9h] +
mov edi [eax+8] +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [edi+edx] cl +
mov edx [eax+16BCh] +
mov ecx 10h +
sub ecx edx +
sar ebx cl +
lea ecx [edx-0Dh] +
cmp ecx 9 +
mov [eax+16B8h] bx +
mov [eax+16BCh] ecx +
jg loc_45A121  +
add ecx 7 +
mov [eax+16BCh] ecx +
pop ebx  +
pop esi  +
pop edi  +
jmp loc_459DF0  +
mov edx 2 +
shl edx cl +
add ecx 3 +
or [eax+16B8h] dx +
cmp ecx 9 +
mov [eax+16BCh] ecx +
jle loc_45A0F4  +
mov edx [eax+14h] +
movzx ecx word ptr [eax+16B8h] +
mov ebx [eax+8] +
lea esi [edx+1] +
mov [eax+14h] esi +
mov [ebx+edx] cl +
mov edx [eax+14h] +
mov ecx [eax+8] +
lea ebx [edx+1] +
mov [eax+14h] ebx +
movzx ebx byte ptr [eax+16B9h] +
mov [ecx+edx] bl +
xor edx edx +
sub dword ptr [eax+16BCh] 9 +
mov [eax+16B8h] dx +
pop ebx  +
pop esi  +
pop edi  +
jmp loc_459DF0  +
***
push esi  +
push ebx  +
sub esp 24h +
mov ebx [esp+24h+arg_0] +
mov eax [esp+24h+arg_C] +
mov edi [esp+24h+arg_4] +
mov esi [esp+24h+arg_8] +
mov ebp [ebx+84h] +
mov [esp+24h+var_C] eax +
test ebp ebp +
jle loc_45A5CF  +
mov ecx [ebx] +
cmp dword ptr [ecx+2Ch] 2 +
jz loc_45A5DB  +
lea edx [ebx+0B18h] +
mov eax ebx +
call sub_458D80  +
lea edx [ebx+0B24h] +
mov eax ebx +
call sub_458D80  +
mov ecx [ebx+0B1Ch] +
lea edx [ebx+94h] +
mov eax ebx +
call sub_459200  +
mov ecx [ebx+0B28h] +
lea edx [ebx+988h] +
mov eax ebx +
call sub_459200  +
mov eax ebx +
lea edx [ebx+0B30h] +
call sub_458D80  +
mov eax 12h +
movzx edx ds:byte_495920[eax] +
cmp word ptr [ebx+edx*4+0A7Eh] 0 +
jnz loc_45A584  +
sub eax 1 +
cmp eax 2 +
jnz loc_45A1F7  +
mov ecx 9 +
mov edx [ebx+16A8h] +
lea ecx [ecx+edx+0Eh] +
mov edx [ebx+16ACh] +
mov [ebx+16A8h] ecx +
add ecx 0Ah +
shr ecx 3 +
add edx 0Ah +
shr edx 3 +
cmp ecx edx +
cmova ecx edx +
lea ebp [esi+4] +
cmp ecx ebp +
jb loc_45A2FA  +
test edi edi +
jz loc_45A2FA  +
mov eax [esp+24h+var_C] +
mov [esp+24h+var_1C] esi +
mov [esp+24h+var_20] edi +
mov [esp+24h+var_24] ebx +
mov [esp+24h+var_18] eax +
call sub_459F50  +
xor eax eax +
nop   +
xor edi edi +
mov [ebx+eax*4+94h] di +
add eax 1 +
cmp eax 11Eh +
jnz loc_45A270  +
xor ax ax +
xor esi esi +
mov [ebx+eax*4+988h] si +
add eax 1 +
cmp eax 1Eh +
jnz loc_45A287  +
xor al al +
nop   +
lea esi [esi+0] +
xor ecx ecx +
mov [ebx+eax*4+0A7Ch] cx +
add eax 1 +
cmp eax 13h +
jnz loc_45A2A0  +
mov edx [esp+24h+var_C] +
mov eax 1 +
mov [ebx+494h] ax +
mov dword ptr [ebx+16ACh] 0 +
mov dword ptr [ebx+16A8h] 0 +
test edx edx +
mov dword ptr [ebx+16B0h] 0 +
mov dword ptr [ebx+16A0h] 0 +
jnz loc_45A576  +
add esp 24h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp dword ptr [ebx+88h] 4 +
jz loc_45A58D  +
cmp edx ecx +
jz loc_45A58D  +
mov ecx [ebx+16BCh] +
cmp ecx 0Dh +
jg loc_45A64B  +
movzx edi word ptr [esp+24h+var_C] +
lea edx [edi+4] +
movzx edx dx +
shl edx cl +
add ecx 3 +
or dx [ebx+16B8h] +
mov [ebx+16BCh] ecx +
mov [ebx+16B8h] dx +
mov esi edx +
mov edi [ebx+0B28h] +
cmp ecx 0Bh +
lea ebp [eax+1] +
mov [esp+24h+var_8] edi +
mov edi [ebx+0B1Ch] +
mov [esp+24h+var_4] edi +
jle loc_45A766  +
lea edx [edi-100h] +
movzx edi dx +
mov edx edi +
shl edx cl +
mov ecx edx +
mov edx [ebx+14h] +
or ecx esi +
mov [ebx+16B8h] cx +
lea esi [edx+1] +
mov [ebx+14h] esi +
mov esi [ebx+8] +
mov [esi+edx] cl +
mov edx [ebx+14h] +
mov esi [ebx+8] +
lea ecx [edx+1] +
mov [ebx+14h] ecx +
movzx ecx byte ptr [ebx+16B9h] +
mov [esi+edx] cl +
mov esi [ebx+16BCh] +
mov ecx 10h +
sub ecx esi +
sar edi cl +
lea ecx [esi-0Bh] +
mov esi edi +
mov [ebx+16B8h] di +
mov [ebx+16BCh] ecx +
cmp ecx 0Bh +
jle loc_45A748  +
movzx edi word ptr [esp+24h+var_8] +
mov edx edi +
shl edx cl +
mov ecx edx +
mov edx [ebx+14h] +
or ecx esi +
mov [ebx+16B8h] cx +
lea esi [edx+1] +
mov [ebx+14h] esi +
mov esi [ebx+8] +
mov [esi+edx] cl +
mov edx [ebx+14h] +
mov esi [ebx+8] +
lea ecx [edx+1] +
mov [ebx+14h] ecx +
movzx ecx byte ptr [ebx+16B9h] +
mov [esi+edx] cl +
mov esi [ebx+16BCh] +
mov ecx 10h +
sub ecx esi +
sar edi cl +
lea ecx [esi-0Bh] +
mov edx edi +
mov [ebx+16B8h] di +
mov [ebx+16BCh] ecx +
cmp ecx 0Ch +
jle loc_45A727  +
sub eax 3 +
movzx edi ax +
mov eax edi +
shl eax cl +
mov ecx [ebx+8] +
or edx eax +
mov eax [ebx+14h] +
mov [ebx+16B8h] dx +
lea esi [eax+1] +
mov [ebx+14h] esi +
mov [ecx+eax] dl +
mov eax [ebx+14h] +
mov ecx [ebx+8] +
lea edx [eax+1] +
mov [ebx+14h] edx +
movzx edx byte ptr [ebx+16B9h] +
mov [ecx+eax] dl +
mov eax [ebx+16BCh] +
mov ecx 10h +
sub ecx eax +
sar edi cl +
lea ecx [eax-0Ch] +
mov [ebx+16B8h] di +
mov [ebx+16BCh] ecx +
xor eax eax +
mov [esp+24h+var_14] ebp +
jmp loc_45A50B  +
movzx edx word ptr [ebx+edx*4+0A7Eh] +
add eax 1 +
mov esi edx +
shl esi cl +
mov ecx [ebx+14h] +
or esi edi +
mov edi [ebx+8] +
mov [esp+24h+var_10] edx +
mov edx esi +
mov [ebx+16B8h] si +
lea ebp [ecx+1] +
mov [ebx+14h] ebp +
mov [edi+ecx] dl +
mov ecx [ebx+14h] +
mov esi [ebx+8] +
lea edi [ecx+1] +
mov [ebx+14h] edi +
movzx edi byte ptr [ebx+16B9h] +
mov edx edi +
mov [esi+ecx] dl +
mov esi [ebx+16BCh] +
mov ecx 10h +
mov edx [esp+24h+var_10] +
sub ecx esi +
sub esi 0Dh +
sar edx cl +
cmp [esp+24h+var_14] eax +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] esi +
jle loc_45A540  +
mov ecx [ebx+16BCh] +
movzx edi word ptr [ebx+16B8h] +
cmp ecx 0Dh +
movzx edx ds:byte_495920[eax] +
jg loc_45A490  +
movzx esi word ptr [ebx+edx*4+0A7Eh] +
add eax 1 +
shl esi cl +
add ecx 3 +
or esi edi +
cmp [esp+24h+var_14] eax +
mov [ebx+16B8h] si +
mov [ebx+16BCh] ecx +
jg loc_45A4FE  +
mov ecx [esp+24h+var_4] +
lea esi [ebx+94h] +
mov eax ebx +
mov edx esi +
lea edi [ebx+988h] +
call sub_4592F0  +
mov ecx [esp+24h+var_8] +
mov edx edi +
mov eax ebx +
call sub_4592F0  +
mov ecx edi +
mov edx esi +
mov eax ebx +
call sub_4598F0  +
jmp loc_45A26C  +
add esp 24h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_459D80  +
lea ecx [eax+eax*2+3] +
jmp loc_45A21A  +
mov ecx [ebx+16BCh] +
cmp ecx 0Dh +
jg loc_45A6C0  +
movzx eax word ptr [esp+24h+var_C] +
add eax 2 +
movzx eax ax +
shl eax cl +
add ecx 3 +
or [ebx+16B8h] ax +
mov [ebx+16BCh] ecx +
mov ecx offset unk_495420 +
mov edx offset unk_4954A0 +
mov eax ebx +
call sub_4598F0  +
jmp loc_45A26C  +
lea ecx [esi+5] +
xor eax eax +
mov edx ecx +
jmp loc_45A241  +
xor eax eax +
mov edx 0F3FFC07Fh +
test dl 1 +
jz loc_45A5F6  +
cmp word ptr [ebx+eax*4+94h] 0 +
jnz loc_45A78F  +
add eax 1 +
shr edx 1 +
cmp eax 20h +
jnz loc_45A5E2  +
cmp word ptr [ebx+0B8h] 0 +
mov edx 1 +
jnz loc_45A643  +
cmp word ptr [ebx+0BCh] 0 +
jnz loc_45A643  +
cmp word ptr [ebx+0C8h] 0 +
jz loc_45A633  +
jmp loc_45A643  +
add eax 1 +
cmp eax 100h +
jz loc_45A78F  +
cmp word ptr [ebx+eax*4+94h] 0 +
jz loc_45A625  +
mov edx 1 +
mov [ecx+2Ch] edx +
jmp loc_45A1A5  +
mov edi [esp+24h+var_C] +
lea edx [edi+4] +
movzx edx dx +
mov edi edx +
shl edi cl +
mov ecx [ebx+14h] +
mov esi edi +
mov edi [ebx+8] +
or si [ebx+16B8h] +
mov [esp+24h+var_14] edx +
lea ebp [ecx+1] +
mov edx esi +
mov [ebx+16B8h] si +
mov [ebx+14h] ebp +
mov [edi+ecx] dl +
mov ecx [ebx+14h] +
mov esi [ebx+8] +
lea edi [ecx+1] +
mov [ebx+14h] edi +
movzx edi byte ptr [ebx+16B9h] +
mov edx edi +
mov [esi+ecx] dl +
mov edi [ebx+16BCh] +
mov ecx 10h +
mov edx [esp+24h+var_14] +
sub ecx edi +
sar edx cl +
lea ecx [edi-0Dh] +
mov esi edx +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] ecx +
jmp loc_45A344  +
mov eax [esp+24h+var_C] +
mov esi [ebx+8] +
lea edx [eax+2] +
movzx edx dx +
mov eax edx +
shl eax cl +
mov ecx eax +
mov eax [ebx+14h] +
or cx [ebx+16B8h] +
lea edi [eax+1] +
mov [ebx+14h] edi +
mov [ebx+16B8h] cx +
mov [esi+eax] cl +
mov eax [ebx+14h] +
movzx ecx byte ptr [ebx+16B9h] +
mov edi [ebx+8] +
lea esi [eax+1] +
mov [ebx+14h] esi +
mov [edi+eax] cl +
mov eax [ebx+16BCh] +
mov ecx 10h +
sub ecx eax +
sub eax 0Dh +
sar edx cl +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] eax +
jmp loc_45A5B9  +
lea eax [ebp-4] +
movzx eax ax +
shl eax cl +
add ecx 4 +
or eax edx +
mov [ebx+16B8h] ax +
mov edi eax +
mov [ebx+16BCh] ecx +
jmp loc_45A485  +
movzx edx word ptr [esp+24h+var_8] +
shl edx cl +
add ecx 5 +
or edx esi +
mov [ebx+16B8h] dx +
mov [ebx+16BCh] ecx +
jmp loc_45A425  +
movzx edi word ptr [esp+24h+var_4] +
lea edx [edi-100h] +
movzx edx dx +
shl edx cl +
add ecx 5 +
or edx esi +
mov [ebx+16B8h] dx +
mov esi edx +
mov [ebx+16BCh] ecx +
jmp loc_45A3C2  +
xor edx edx +
jmp loc_45A643  +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
mov ecx [esp+10h] +
mov ebx [esp+14h] +
mov edx [eax+16A0h] +
mov esi [eax+16A4h] +
test ecx ecx +
mov [esi+edx*2] cx +
lea esi [edx+1] +
mov [eax+16A0h] esi +
mov esi [eax+1698h] +
mov [esi+edx] bl +
jz loc_45A830  +
movzx edx ds:byte_495120[ebx] +
lea esi [ecx-1] +
add dword ptr [eax+16B0h] 1 +
add word ptr [eax+edx*4+498h] 1 +
cmp esi 0FFh +
jbe loc_45A821  +
shr esi 7 +
movzx edx ds:byte_495320[esi] +
add word ptr [eax+edx*4+988h] 1 +
mov ebx [eax+169Ch] +
lea edx [ebx-1] +
cmp [eax+16A0h] edx +
pop ebx  +
pop esi  +
setz al  +
movzx eax al +
retn   +
***
movzx edx ds:byte_49521F[ecx] +
jmp loc_45A800  +
***
add word ptr [eax+ebx*4+94h] 1 +
jmp loc_45A809  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_14] ebx +
call strlen  +
lea esi [eax+1] +
mov [esp+14h+var_14] esi +
call sub_45B8D0  +
mov [esp+14h+var_C] esi +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov edi dword_476844 +
mov [esp+14h+var_10] eax +
mov eax ds:dword_49F47C +
mov esi ds:dword_49F478 +
mov [esp+14h+var_4] edi +
mov [esp+14h+var_14] edi +
mov edi eax +
mov [esp+14h+var_8] eax +
lea esi [esi+0] +
cmp esi edi +
jle loc_45A8F5  +
cmp [esp+14h+var_14] esi +
jle loc_45A8F5  +
mov edx [esp+14h+var_14] +
mov ebp esi +
sub ebp edi +
sub edx esi +
cmp edx ebp +
jg loc_45A914  +
test edx edx +
jle loc_45A94D  +
mov ebx [esp+14h+var_10] +
lea eax [ebx+edi*4] +
add edi edx +
lea edx [ebx+edi*4] +
lea esi [esi+0] +
mov ecx [eax] +
mov ebx [eax+ebp*4] +
mov [eax] ebx +
mov [eax+ebp*4] ecx +
add eax 4 +
cmp eax edx +
jnz loc_45A8E0  +
cmp esi edi +
jg loc_45A8B4  +
mov edi [esp+14h+var_4] +
mov eax edi +
sub eax esi +
add eax [esp+14h+var_8] +
mov ds:dword_49F478 edi +
mov ds:dword_49F47C eax +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebp ebp +
jle loc_45A945  +
mov ebx [esp+14h+var_10] +
lea edx [ebp+edi+0] +
mov [esp+14h+var_C] esi +
lea eax [ebx+edi*4] +
lea ebx [ebx+edx*4] +
mov edx [esp+14h+var_14] +
sub edx esi +
nop   +
mov ecx [eax] +
mov esi [eax+edx*4] +
mov [eax] esi +
mov [eax+edx*4] ecx +
add eax 4 +
cmp eax ebx +
jnz loc_45A930  +
mov esi [esp+14h+var_C] +
sub [esp+14h+var_14] ebp +
jmp loc_45A8B0  +
add edi edx +
jmp loc_45A8B0  +
***
push esi  +
push ebx  +
sub esp 4Ch +
mov eax dword_476844 +
mov ds:dword_49F474 0 +
test eax eax +
jnz loc_45ABC0  +
mov dword_476844 1 +
mov eax 1 +
mov [esp+4Ch+var_4C] offset aPosixly_correc +
mov ds:dword_49F478 eax +
mov ds:dword_49F47C eax +
mov ds:dword_49F488 0 +
call getenv  +
mov edi [esp+4Ch+arg_8] +
movzx edx byte ptr [edi] +
mov ds:dword_49F480 eax +
cmp dl 2Dh +
jz loc_45AE53  +
cmp dl 2Bh +
jz loc_45AE02  +
test eax eax +
setz al  +
movzx eax al +
mov ds:dword_49F484 eax +
mov ds:dword_49F470 1 +
mov edx ds:dword_49F488 +
test edx edx +
jz loc_45ABD3  +
movzx eax byte ptr [edx] +
test al al +
mov byte ptr [esp+4Ch+var_2C] al +
jz loc_45ABD3  +
mov [esp+4Ch+var_34] edx +
mov ecx [esp+4Ch+arg_C] +
test ecx ecx +
jz loc_45AC84  +
mov eax dword_476844 +
lea edi ds:0[eax*4] +
mov [esp+4Ch+var_10] edi +
mov edi [esp+4Ch+arg_4] +
mov [esp+4Ch+var_24] eax +
mov eax [edi+eax*4] +
mov [esp+4Ch+var_20] eax +
movzx eax byte ptr [eax+1] +
cmp al 2Dh +
mov [esp+4Ch+var_19] al +
jz loc_45AA82  +
mov edx [esp+4Ch+arg_14] +
test edx edx +
jz loc_45AC84  +
mov eax [esp+4Ch+var_20] +
cmp byte ptr [eax+2] 0 +
jnz loc_45AA82  +
mov eax [esp+4Ch+arg_8] +
movzx ecx byte ptr [eax] +
test cl cl +
jz loc_45AA82  +
movzx ebx [esp+4Ch+var_19] +
cmp bl cl +
jnz loc_45AA78  +
jmp loc_45B33A  +
cmp bl dl +
jz loc_45AFF3  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_45AA70  +
movzx eax byte ptr [esp+4Ch+var_2C] +
mov esi [esp+4Ch+var_34] +
test al al +
jz loc_45AAA3  +
cmp al 3Dh +
jnz loc_45AA99  +
jmp loc_45AAA3  +
test al al +
jz loc_45AAA3  +
add esi 1 +
movzx eax byte ptr [esi] +
cmp al 3Dh +
jnz loc_45AA95  +
mov eax [esp+4Ch+arg_C] +
mov ebp [eax] +
test ebp ebp +
jz loc_45AF52  +
mov eax esi +
mov ebx [esp+4Ch+arg_C] +
xor edi edi +
sub eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_18] esi +
mov [esp+4Ch+var_14] 0FFFFFFFFh +
mov [esp+4Ch+var_28] 0 +
mov esi eax +
mov [esp+4Ch+var_30] 0 +
jmp loc_45AAF4  +
mov [esp+4Ch+var_28] 1 +
add ebx 10h +
mov ebp [ebx] +
add edi 1 +
test ebp ebp +
jz loc_45AB38  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call strncmp  +
test eax eax +
jnz loc_45AAE8  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
cmp eax esi +
jz loc_45AF23  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jnz loc_45AAE0  +
mov [esp+4Ch+var_30] ebx +
add ebx 10h +
mov ebp [ebx] +
mov [esp+4Ch+var_14] edi +
add edi 1 +
test ebp ebp +
jnz loc_45AAF4  +
mov eax [esp+4Ch+var_28] +
mov esi [esp+4Ch+var_18] +
test eax eax +
jz loc_45AEC0  +
mov eax dword_476840 +
mov esi [esp+4Ch+var_24] +
mov ebx [esp+4Ch+var_34] +
test eax eax +
jz loc_45AB8F  +
mov eax [esp+4Ch+arg_4] +
mov ecx [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_40] ecx +
mov [esp+4Ch+var_48] offset aSOptionSIsAmbi +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov ebx ds:dword_49F488 +
mov esi dword_476844 +
mov [esp+4Ch+var_4C] ebx +
add esi 1 +
call strlen  +
mov dword_476844 esi +
mov dword_47683C 0 +
add ebx eax +
mov eax 3Fh +
mov ds:dword_49F488 ebx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi ds:dword_49F470 +
test esi esi +
jz loc_45A98D  +
jmp loc_45A9E2  +
mov eax dword_476844 +
cmp ds:dword_49F478 eax +
jle loc_45ABE5  +
mov ds:dword_49F478 eax +
cmp eax ds:dword_49F47C +
jge loc_45ABF2  +
mov ds:dword_49F47C eax +
mov ebx ds:dword_49F484 +
cmp ebx 1 +
jz loc_45AD70  +
cmp [esp+4Ch+arg_0] eax +
jz loc_45ADDC  +
mov edi [esp+4Ch+arg_4] +
mov ecx 3 +
mov ebp [edi+eax*4] +
mov edi offset asc_495AB0 +
mov esi ebp +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jnz loc_45AD40  +
mov edx ds:dword_49F47C +
add eax 1 +
mov ecx ds:dword_49F478 +
mov dword_476844 eax +
cmp edx ecx +
jz loc_45AF30  +
cmp eax ecx +
jz loc_45AC61  +
mov eax [esp+4Ch+arg_4] +
call sub_45A880  +
mov edx ds:dword_49F47C +
mov eax [esp+4Ch+arg_0] +
cmp eax edx +
mov ds:dword_49F478 eax +
mov dword_476844 eax +
jnz loc_45ADEF  +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+4Ch+arg_8] +
mov ecx [esp+4Ch+var_34] +
movzx eax byte ptr [eax] +
add ecx 1 +
mov ds:dword_49F488 ecx +
test al al +
jz loc_45ACC2  +
movzx ebx byte ptr [esp+4Ch+var_2C] +
cmp bl al +
jz loc_45B1B1  +
mov eax [esp+4Ch+arg_8] +
jmp loc_45ACB8  +
cmp dl bl +
jz loc_45AE67  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_45ACB0  +
mov edx 1 +
xor eax eax +
mov edi [esp+4Ch+var_34] +
cmp byte ptr [edi+1] 0 +
jnz loc_45ACDA  +
add dword_476844 1 +
test dl dl +
jz loc_45AE91  +
mov ecx dword_476840 +
test ecx ecx +
jz loc_45AEB1  +
mov eax [esp+4Ch+arg_4] +
mov edx ds:dword_49F480 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
mov eax [eax] +
test edx edx +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_44] eax +
jz loc_45B12B  +
mov [esp+4Ch+var_48] offset aSIllegalOption +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax ebx +
mov dword_47683C eax +
add esp 4Ch +
mov eax 3Fh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [ebp+0] 2Dh +
jz loc_45AE16  +
test ebx ebx +
jz loc_45AC77  +
add eax 1 +
mov dword_476844 eax +
mov eax 1 +
mov ds:dword_49F474 ebp +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx ds:dword_49F47C +
mov edx ds:dword_49F478 +
cmp ecx edx +
jz loc_45AFE1  +
cmp eax edx +
jz loc_45AD96  +
mov eax [esp+4Ch+arg_4] +
call sub_45A880  +
mov eax dword_476844 +
cmp [esp+4Ch+arg_0] eax +
mov edx eax +
jle loc_45ADCC  +
mov esi [esp+4Ch+arg_0] +
mov ecx [esp+4Ch+arg_4] +
jmp loc_45ADB9  +
add edx 1 +
cmp edx esi +
mov dword_476844 edx +
jz loc_45AE80  +
mov eax [ecx+edx*4] +
cmp byte ptr [eax] 2Dh +
jnz loc_45ADA8  +
cmp byte ptr [eax+1] 0 +
jz loc_45ADA8  +
mov eax dword_476844 +
mov ds:dword_49F478 edx +
cmp [esp+4Ch+arg_0] eax +
jnz loc_45AC0B  +
mov eax ds:dword_49F478 +
mov edx ds:dword_49F47C +
cmp eax edx +
jz loc_45AC77  +
mov dword_476844 edx +
add esp 4Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ds:dword_49F484 0 +
add [esp+4Ch+arg_8] 1 +
jmp loc_45A9D8  +
movzx ecx byte ptr [ebp+1] +
test cl cl +
jz loc_45AD4A  +
mov ebx [esp+4Ch+arg_C] +
test ebx ebx +
jz loc_45AFD7  +
xor eax eax +
cmp cl 2Dh +
setz al  +
add eax 1 +
lea edx [ebp+eax+0] +
movzx eax byte ptr [edx] +
mov ds:dword_49F488 edx +
mov [esp+4Ch+var_34] edx +
mov byte ptr [esp+4Ch+var_2C] al +
jmp loc_45AA03  +
mov ds:dword_49F484 2 +
add [esp+4Ch+arg_8] 1 +
jmp loc_45A9D8  +
test eax eax +
setz dl  +
cmp byte ptr [esp+4Ch+var_2C] 3Ah +
setz bl  +
or edx ebx +
jmp loc_45ACC9  +
mov eax [esp+4Ch+arg_0] +
mov edx eax +
mov ds:dword_49F478 edx +
jmp loc_45ADD2  +
cmp byte ptr [eax] 57h +
movzx edx byte ptr [eax+1] +
jz loc_45B007  +
cmp dl 3Ah +
jz loc_45B0F2  +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_45AD65  +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_45AD2B  +
mov ebx [esp+4Ch+var_30] +
test ebx ebx +
jz loc_45AF52  +
mov edi [esp+4Ch+var_14] +
mov eax [esp+4Ch+var_24] +
add eax 1 +
mov dword_476844 eax +
cmp byte ptr [esi] 0 +
jnz loc_45AF3C  +
cmp dword ptr [ebx+4] 1 +
jz loc_45B1FB  +
mov esi [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] esi +
call strlen  +
mov ebp [esp+4Ch+arg_10] +
add eax esi +
test ebp ebp +
mov ds:dword_49F488 eax +
jz loc_45AF0C  +
mov eax [esp+4Ch+arg_10] +
mov [eax] edi +
mov eax [ebx+8] +
test eax eax +
jz loc_45B24D  +
mov edx [ebx+0Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_45AD65  +
mov esi [esp+4Ch+var_18] +
jmp loc_45AED0  +
mov ds:dword_49F47C eax +
mov edx eax +
jmp loc_45AC61  +
mov eax [ebx+4] +
test eax eax +
jz loc_45B138  +
add esi 1 +
mov ds:dword_49F474 esi +
jmp loc_45AEEB  +
mov edi [esp+4Ch+arg_14] +
test edi edi +
jnz loc_45B344  +
mov esi dword_476840 +
mov eax [esp+4Ch+var_24] +
test esi esi +
jz loc_45AFB1  +
cmp [esp+4Ch+var_19] 2Dh +
jz loc_45B49E  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_34] +
mov ecx [esp+4Ch+var_20] +
mov eax [eax] +
mov [esp+4Ch+var_3C] edi +
movsx edx byte ptr [ecx] +
mov [esp+4Ch+var_48] offset aSUnrecognizedO +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
mov [esp+4Ch+var_40] edx +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax dword_476844 +
add eax 1 +
mov dword_476844 eax +
mov eax 3Fh +
mov ds:dword_49F488 offset unk_495B9C +
mov dword_47683C 0 +
jmp loc_45AD65  +
mov eax 1 +
jmp loc_45AE39  +
cmp eax ecx +
jz loc_45AD96  +
mov ds:dword_49F47C eax +
jmp loc_45AD96  +
mov eax ecx +
mov ecx [esp+4Ch+var_34] +
add ecx 1 +
mov ds:dword_49F488 ecx +
jmp loc_45AC9C  +
cmp dl 3Bh +
jnz loc_45AE9E  +
mov eax [esp+4Ch+var_34] +
cmp byte ptr [eax+1] 0 +
jz loc_45B30D  +
add dword_476844 1 +
mov ds:dword_49F474 ecx +
mov [esp+4Ch+var_34] ecx +
mov eax [esp+4Ch+var_34] +
movzx ebx byte ptr [eax] +
mov ds:dword_49F488 eax +
cmp bl 3Dh +
jz loc_45B5E3  +
test bl bl +
jz loc_45B5E3  +
mov esi eax +
jmp loc_45B054  +
test bl bl +
jz loc_45B05F  +
add esi 1 +
movzx ebx byte ptr [esi] +
cmp bl 3Dh +
jnz loc_45B050  +
mov eax [esp+4Ch+arg_C] +
mov ebp [eax] +
test ebp ebp +
jz loc_45B5CF  +
mov eax esi +
xor edi edi +
sub eax [esp+4Ch+var_34] +
mov byte ptr [esp+4Ch+var_24] bl +
mov ebx [esp+4Ch+arg_C] +
mov [esp+4Ch+var_20] esi +
mov [esp+4Ch+var_28] 0 +
mov esi eax +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_30] 0 +
jmp loc_45B0B8  +
mov [esp+4Ch+var_2C] 1 +
add ebx 10h +
mov ebp [ebx] +
add edi 1 +
test ebp ebp +
jz loc_45B255  +
mov eax [esp+4Ch+var_34] +
mov [esp+4Ch+var_44] esi +
mov [esp+4Ch+var_4C] ebp +
mov [esp+4Ch+var_48] eax +
call strncmp  +
test eax eax +
jnz loc_45B0A8  +
mov [esp+4Ch+var_4C] ebp +
call strlen  +
cmp eax esi +
jz loc_45B482  +
mov ebp [esp+4Ch+var_30] +
test ebp ebp +
jnz loc_45B0A0  +
mov [esp+4Ch+var_28] edi +
mov [esp+4Ch+var_30] ebx +
jmp loc_45B0A8  +
cmp byte ptr [eax+2] 3Ah +
mov eax [esp+4Ch+var_34] +
jz loc_45B227  +
cmp byte ptr [eax+1] 0 +
jz loc_45B1CD  +
add dword_476844 1 +
movsx eax byte ptr [esp+4Ch+var_2C] +
mov ds:dword_49F474 ecx +
mov ds:dword_49F488 0 +
jmp loc_45AD65  +
mov [esp+4Ch+var_48] offset aSInvalidOption +
jmp loc_45AD19  +
mov eax dword_476840 +
test eax eax +
jz loc_45AEEB  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_24] +
mov eax [eax+edi*4] +
cmp byte ptr [eax+1] 2Dh +
jz loc_45B3A4  +
mov ecx [ebx] +
mov edi [esp+4Ch+arg_4] +
mov edx [edi] +
mov [esp+4Ch+var_3C] ecx +
movsx eax byte ptr [eax] +
mov [esp+4Ch+var_48] offset aSOptionCSDoesn +
mov [esp+4Ch+var_44] edx +
mov [esp+4Ch+var_40] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov esi ds:dword_49F488 +
mov [esp+4Ch+var_4C] esi +
call strlen  +
add esi eax +
mov eax [ebx+0Ch] +
mov ds:dword_49F488 esi +
mov dword_47683C eax +
mov eax 3Fh +
jmp loc_45AD65  +
mov ebx [esp+4Ch+arg_8] +
cmp byte ptr [esp+4Ch+var_2C] 3Ah +
setz dl  +
test ebx ebx +
setz al  +
or edx eax +
mov eax [esp+4Ch+arg_8] +
jmp loc_45ACC9  +
mov eax dword_476844 +
cmp eax [esp+4Ch+arg_0] +
jz loc_45B3D1  +
mov ecx [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_476844 edx +
mov eax [ecx+eax*4] +
mov ds:dword_49F474 eax +
movsx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_45B11C  +
cmp [esp+4Ch+arg_0] eax +
jle loc_45B2CD  +
mov eax [esp+4Ch+var_24] +
mov ecx [esp+4Ch+var_10] +
add eax 2 +
mov dword_476844 eax +
mov eax [esp+4Ch+arg_4] +
mov eax [eax+ecx+4] +
mov ds:dword_49F474 eax +
jmp loc_45AEEB  +
cmp byte ptr [eax+1] 0 +
jz loc_45B395  +
add dword_476844 1 +
mov ds:dword_49F474 ecx +
mov ds:dword_49F488 0 +
jmp loc_45AEA7  +
mov eax [ebx+0Ch] +
jmp loc_45AD65  +
mov edi [esp+4Ch+var_2C] +
movzx ebx byte ptr [esp+4Ch+var_24] +
mov esi [esp+4Ch+var_20] +
test edi edi +
jz loc_45B3FF  +
mov ecx dword_476840 +
mov ebx [esp+4Ch+var_34] +
test ecx ecx +
jz loc_45B2AC  +
mov eax dword_476844 +
mov ecx [esp+4Ch+arg_4] +
mov edx [ecx+eax*4] +
mov eax [ecx] +
mov [esp+4Ch+var_48] offset aSOptionWSIsAmb +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov ebx ds:dword_49F488 +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
add dword_476844 1 +
add ebx eax +
mov eax 3Fh +
mov ds:dword_49F488 ebx +
jmp loc_45AD65  +
mov eax dword_476840 +
mov esi [esp+4Ch+var_34] +
test eax eax +
jnz loc_45B4D2  +
mov [esp+4Ch+var_4C] esi +
call strlen  +
add esi eax +
mov eax [ebx+0Ch] +
mov ds:dword_49F488 esi +
mov dword_47683C eax +
mov eax [esp+4Ch+arg_8] +
cmp byte ptr [eax] 3Ah +
jnz loc_45AD30  +
mov eax 3Ah +
jmp loc_45AD65  +
mov eax dword_476844 +
cmp eax [esp+4Ch+arg_0] +
jz loc_45B50A  +
mov edi [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_476844 edx +
mov eax [edi+eax*4] +
mov ds:dword_49F474 eax +
mov [esp+4Ch+var_34] eax +
jmp loc_45B02F  +
movzx eax [esp+4Ch+var_19] +
jmp loc_45AFF5  +
cmp [esp+4Ch+var_19] 2Dh +
jz loc_45B491  +
mov eax [esp+4Ch+arg_8] +
movzx eax byte ptr [eax] +
test al al +
jz loc_45B37F  +
movzx ebx byte ptr [esp+4Ch+var_2C] +
cmp al bl +
jz loc_45B61F  +
mov edx [esp+4Ch+arg_8] +
jmp loc_45B375  +
cmp cl bl +
jz loc_45AFF5  +
add edx 1 +
movzx ecx byte ptr [edx] +
test cl cl +
jnz loc_45B36D  +
cmp dword_476840 0 +
jnz loc_45AF77  +
mov eax [esp+4Ch+var_24] +
jmp loc_45AFB1  +
mov ds:dword_49F474 0 +
jmp loc_45B23E  +
mov eax [esp+4Ch+arg_4] +
mov edx [ebx] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aSOptionSDoesnT +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
jmp loc_45B189  +
mov eax dword_476840 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
test eax eax +
jnz loc_45B5A4  +
mov eax [esp+4Ch+arg_8] +
mov dword_47683C ebx +
cmp byte ptr [eax] 3Ah +
setnz al  +
movzx eax al +
lea eax [eax+eax*4+3Ah] +
jmp loc_45B11C  +
mov eax [esp+4Ch+var_30] +
test eax eax +
jz loc_45B5CF  +
mov edi [esp+4Ch+var_28] +
mov [esp+4Ch+arg_C] eax +
test bl bl +
mov eax [esp+4Ch+arg_C] +
jz loc_45B55A  +
cmp dword ptr [eax+4] 0 +
jnz loc_45B611  +
cmp dword_476840 0 +
jz loc_45B45E  +
mov eax [esp+4Ch+arg_C] +
mov edx [eax] +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_48] offset aSOptionWSDoesn +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov edx ds:dword_49F488 +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi edx +
scas   +
not ecx  +
lea eax [edx+ecx-1] +
mov ds:dword_49F488 eax +
mov eax 3Fh +
jmp loc_45AD65  +
mov [esp+4Ch+arg_C] ebx +
mov esi [esp+4Ch+var_20] +
movzx ebx byte ptr [esp+4Ch+var_24] +
jmp loc_45B413  +
cmp dword_476840 0 +
jz loc_45B38C  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_34] +
mov eax [eax] +
mov [esp+4Ch+var_40] edi +
mov [esp+4Ch+var_48] offset aSUnrecognize_0 +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax dword_476844 +
jmp loc_45AFB1  +
mov eax [esp+4Ch+arg_4] +
mov edi [esp+4Ch+var_24] +
mov edx [eax+edi*4] +
mov eax [eax] +
mov [esp+4Ch+var_48] offset aSOptionSRequir +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov esi ds:dword_49F488 +
jmp loc_45B2DE  +
mov eax dword_476840 +
movsx ebx byte ptr [esp+4Ch+var_2C] +
test eax eax +
jz loc_45B53E  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_48] offset aSOptionRequire +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov eax [esp+4Ch+arg_8] +
mov dword_47683C ebx +
cmp byte ptr [eax] 3Ah +
setnz al  +
movzx eax al +
lea eax [eax+eax*4+3Ah] +
jmp loc_45AD65  +
cmp dword ptr [eax+4] 1 +
jz loc_45B5EC  +
mov ebx [esp+4Ch+var_34] +
mov [esp+4Ch+var_4C] ebx +
call strlen  +
mov edx [esp+4Ch+arg_10] +
add eax ebx +
test edx edx +
mov ds:dword_49F488 eax +
jz loc_45B585  +
mov eax [esp+4Ch+arg_10] +
mov [eax] edi +
mov eax [esp+4Ch+arg_C] +
mov eax [eax+8] +
test eax eax +
jz loc_45B629  +
mov edi [esp+4Ch+arg_C] +
mov edx [edi+0Ch] +
mov [eax] edx +
xor eax eax +
jmp loc_45AD65  +
mov eax [esp+4Ch+arg_4] +
mov eax [eax] +
mov [esp+4Ch+var_40] ebx +
mov [esp+4Ch+var_48] offset aSOptionRequire +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
jmp loc_45B3E3  +
mov ds:dword_49F488 0 +
mov eax 57h +
jmp loc_45AD65  +
mov esi [esp+4Ch+var_34] +
jmp loc_45B05F  +
mov eax dword_476844 +
cmp [esp+4Ch+arg_0] eax +
jle loc_45B635  +
mov ecx [esp+4Ch+arg_4] +
lea edx [eax+1] +
mov dword_476844 edx +
mov eax [ecx+eax*4] +
mov ds:dword_49F474 eax +
jmp loc_45B564  +
add esi 1 +
mov ds:dword_49F474 esi +
jmp loc_45B564  +
movzx eax byte ptr [esp+4Ch+var_2C] +
jmp loc_45AFF5  +
mov eax [esp+4Ch+arg_C] +
mov eax [eax+0Ch] +
jmp loc_45AD65  +
cmp dword_476840 0 +
jz loc_45B668  +
mov edi [esp+4Ch+arg_4] +
mov edx [edi+eax*4-4] +
mov eax [edi] +
mov [esp+4Ch+var_48] offset aSOptionSRequir +
mov [esp+4Ch+var_40] edx +
mov [esp+4Ch+var_44] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+4Ch+var_4C] eax +
call fprintf  +
mov edx ds:dword_49F488 +
xor eax eax +
or ecx 0FFFFFFFFh +
mov edi edx +
scas   +
not ecx  +
lea eax [edx+ecx-1] +
mov ds:dword_49F488 eax +
mov eax [esp+4Ch+arg_8] +
cmp byte ptr [eax] 3Ah +
jnz loc_45AD30  +
jmp loc_45B303  +
***
sub esp 2Ch +
mov eax [esp+38h] +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+0Ch] 0 +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_45A960  +
add esp 2Ch +
retn   +
***
push ebx  +
mov ebx [esp+4+arg_0] +
mov ecx [esp+4+arg_4] +
jmp loc_45B6FB  +
test eax eax +
jz loc_45B724  +
add ebx 1 +
add ecx 1 +
movzx eax byte ptr [ebx] +
movzx edx byte ptr [ecx] +
movzx eax ds:byte_495DE0[eax] +
movzx edx ds:byte_495DE0[edx] +
cmp eax 2Fh +
cmovz eax esi +
cmp edx 2Fh +
cmovz edx esi +
cmp eax edx +
jz loc_45B6F1  +
sub eax edx +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov edx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_0] +
mov ebx [esp+0Ch+arg_4] +
test edx edx +
jnz loc_45B771  +
jmp loc_45B7A2  +
test eax eax +
mov edi 5Ch +
setz cl  +
cmp edx 2Fh +
cmovz edx edi +
mov ebp ecx +
cmp eax edx +
jnz loc_45B7A0  +
mov ecx ebp +
test cl cl +
jnz loc_45B7A0  +
add esi 1 +
add ebx 1 +
sub [esp+0Ch+arg_8] 1 +
jz loc_45B7A7  +
movzx eax byte ptr [esi] +
movzx edx byte ptr [ebx] +
movzx eax ds:byte_495DE0[eax] +
movzx edx ds:byte_495DE0[edx] +
cmp eax 2Fh +
jnz loc_45B748  +
xor ebp ebp +
mov edi 5Ch +
cmp edx 2Fh +
mov eax 5Ch +
cmovz edx edi +
cmp eax edx +
jz loc_45B75E  +
sub eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov eax [esp+0Ch] +
movzx edx byte ptr [eax] +
lea ecx [eax+1] +
xor eax eax +
test dl dl +
jz loc_45B7E9  +
mov ebx 2Fh +
cmp dl 5Ch +
movzx esi dl +
cmovz esi ebx +
add ecx 1 +
imul eax eax +
movzx edx ds:byte_495DE0[esi] +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_45B7C7  +
pop ebx  +
pop esi  +
retn   +
***
sub esp 8 +
mov eax [esp+10h] +
mov [esp+4] eax +
mov eax [esp+0Ch] +
mov [esp] eax +
call sub_45B6E0  +
test eax eax +
setz al  +
add esp 8 +
movzx eax al +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 10h +
mov eax [esp+20h] +
mov [esp] eax +
call sub_45C720  +
mov ebx eax +
mov eax [esp+24h] +
mov [esp] eax +
call sub_45C720  +
mov [esp] ebx +
mov [esp+4] eax +
mov esi eax +
call sub_45B6E0  +
mov [esp] ebx +
mov edi eax +
call free  +
mov [esp] esi +
call free  +
xor eax eax +
test edi edi +
setz al  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax [esp+arg_0] +
mov off_476848 eax +
retn   +
***
sub esp 2Ch +
sub esp 18h +
sub esp 18h +
mov ebx [esp+48h+arg_0] +
lea eax [esp+48h+var_38] +
mov [esp+48h+var_44] eax +
mov [esp+48h+var_48] ebx +
call ds:_stati64  +
mov ecx 1 +
test eax eax +
jnz loc_45B9D3  +
movzx edx [esp+48h+var_32] +
and dx 0F000h +
cmp dx 8000h +
jz loc_45B9E0  +
add esp 48h +
mov eax ecx +
pop ebx  +
retn   +
mov [esp+48h+var_48] ebx +
call _unlink  +
add esp 48h +
pop ebx  +
mov ecx eax +
mov eax ecx +
retn   +
***
sub esp 1Ch +
mov eax ds:dword_49F98C +
test eax eax +
jz loc_45BA0E  +
call eax  +
mov eax [esp+20h] +
mov [esp+0] eax +
call exit  +
mov eax [esp+4] +
movzx ecx byte ptr [eax] +
test cl cl +
jz locret_45BA40  +
lea edx [eax+1] +
nop   +
cmp cl 2Fh +
movzx ecx byte ptr [edx] +
cmovz eax edx +
add edx 1 +
test cl cl +
jnz loc_45BA30  +
retn   +
***
mov eax [esp+arg_0] +
movzx edx byte ptr [eax] +
movzx ecx dl +
test ds:byte_495EE0[ecx+ecx] 88h +
jz loc_45BA6A  +
cmp byte ptr [eax+1] 3Ah +
jz loc_45BA90  +
test dl dl +
jz locret_45BA87  +
lea ecx [eax+1] +
cmp dl 5Ch +
jz loc_45BA7B  +
cmp dl 2Fh +
jnz loc_45BA7D  +
mov eax ecx +
movzx edx byte ptr [ecx] +
add ecx 1 +
test dl dl +
jnz loc_45BA71  +
retn   +
***
movzx edx byte ptr [eax+2] +
add eax 2 +
jmp loc_45BA6A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_0] +
test esi esi +
jz loc_45BB56  +
mov ecx [esi] +
test ecx ecx +
jz loc_45BB4B  +
xor eax eax +
nop   +
add eax 1 +
mov edx [esi+eax*4] +
test edx edx +
jnz loc_45BAD0  +
lea eax ds:4[eax*4] +
mov [esp+1Ch+var_1C] eax +
call sub_45B8D0  +
mov [esp+1Ch+var_10] eax +
mov eax [esi] +
test eax eax +
jz loc_45BB52  +
lea ebx [esi+4] +
mov ebp esi +
xor edi edi +
lea esi [esi+0] +
mov [esp+1Ch+var_1C] eax +
call strlen  +
add edi [esp+1Ch+var_10] +
add eax 1 +
mov [esp+1Ch+var_1C] eax +
call sub_45B8D0  +
mov [edi] eax +
mov edx [ebp+0] +
mov edi ebx +
mov ebp ebx +
add ebx 4 +
mov [esp+1Ch+var_1C] eax +
sub edi esi +
mov [esp+1Ch+var_18] edx +
call strcpy  +
mov eax [ebx-4] +
test eax eax +
jnz loc_45BB00  +
mov eax [esp+1Ch+var_10] +
mov dword ptr [eax+edi] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 4 +
jmp loc_45BAE1  +
xor edi edi +
jmp loc_45BB38  +
xor eax eax +
jmp loc_45BB43  +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
test esi esi +
jz loc_45BB94  +
mov eax [esi] +
mov ebx esi +
test eax eax +
jz loc_45BB86  +
mov [esp] eax +
add ebx 4 +
call free  +
mov eax [ebx] +
test eax eax +
jnz loc_45BB75  +
mov [esp+20h] esi +
add esp 14h +
pop ebx  +
pop esi  +
jmp free  +
***
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
test ebx ebx +
jz loc_45BDB3  +
mov [esp+2Ch+var_2C] ebx +
xor esi esi +
xor ebp ebp +
call strlen  +
xor edi edi +
add eax 1 +
mov [esp+2Ch+var_2C] eax +
call sub_45B8D0  +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] 0 +
mov [esp+2Ch+var_14] eax +
jmp loc_45BBF3  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test ds:byte_495EE0[eax+eax] 40h +
jnz loc_45BBF0  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jz loc_45BD36  +
mov eax [esp+2Ch+var_18] +
sub eax 1 +
cmp [esp+2Ch+var_1C] eax +
jge loc_45BD36  +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
lea eax [eax+edx*4] +
mov [esp+2Ch+var_10] eax +
movzx eax byte ptr [ebx] +
mov edx [esp+2Ch+var_14] +
test al al +
jnz loc_45BC51  +
jmp loc_45BC96  +
mov [edx] al +
xor esi esi +
add edx 1 +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_45BC96  +
movzx ecx al +
test ds:byte_495EE0[ecx+ecx] 40h +
jz loc_45BC6A  +
mov ecx esi +
or ecx edi +
or ecx ebp +
jz loc_45BD90  +
test esi esi +
jnz loc_45BC40  +
cmp al 5Ch +
jz loc_45BD16  +
test edi edi +
jz loc_45BD03  +
cmp al 27h +
jz loc_45BD77  +
add ebx 1 +
add edx 1 +
mov [edx-1] al +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_45BC51  +
mov eax [esp+2Ch+var_14] +
mov byte ptr [edx] 0 +
mov [esp+2Ch+var_2C] eax +
call sub_45A840  +
mov edx [esp+2Ch+var_10] +
add [esp+2Ch+var_1C] 1 +
mov [edx] eax +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
mov dword ptr [eax+edx*4] 0 +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_495EE0[edx+edx] 40h +
jz loc_45BCE3  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_495EE0[edx+edx] 40h +
jnz loc_45BCD0  +
test al al +
jnz loc_45BBF3  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
call free  +
mov eax [esp+2Ch+var_20] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebp ebp +
jz loc_45BD20  +
cmp al 22h +
jnz loc_45BC86  +
xor ebp ebp +
jmp loc_45BC47  +
mov esi 1 +
jmp loc_45BC47  +
cmp al 27h +
jz loc_45BD80  +
cmp al 22h +
jnz loc_45BC86  +
mov ebp 1 +
jmp loc_45BC47  +
mov eax [esp+2Ch+var_20] +
test eax eax +
jz loc_45BD99  +
shl [esp+2Ch+var_18] 1 +
mov eax [esp+2Ch+var_18] +
shl eax 2 +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_2C] eax +
call sub_45B950  +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+var_20] +
mov edx [esp+2Ch+var_1C] +
lea eax [eax+edx*4] +
mov [esp+2Ch+var_10] eax +
mov dword ptr [eax] 0 +
jmp loc_45BC2C  +
xor edi edi +
jmp loc_45BC47  +
mov edi 1 +
jmp loc_45BC47  +
xor esi esi +
xor ebp ebp +
jmp loc_45BC96  +
mov [esp+2Ch+var_2C] 20h +
call sub_45B8D0  +
mov [esp+2Ch+var_18] 8 +
mov [esp+2Ch+var_20] eax +
jmp loc_45BD5D  +
mov [esp+2Ch+var_20] 0 +
jmp loc_45BCF7  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+34h] +
mov edi [esp+30h] +
test esi esi +
jz loc_45BE2C  +
mov ebx [edi] +
test ebx ebx +
jnz loc_45BDFC  +
jmp loc_45BE5D  +
cmp al 27h +
jz loc_45BE17  +
cmp al 22h +
jz loc_45BE17  +
mov [esp+4] esi +
mov [esp] ebp +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_45BE2C  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jz loc_45BE40  +
movzx edx al +
movsx ebp al +
test ds:byte_495EE0[edx+edx] 40h +
jnz loc_45BE17  +
cmp al 5Ch +
jnz loc_45BDE0  +
mov [esp+4] esi +
mov dword ptr [esp] 5Ch +
call fputc  +
cmp eax 0FFFFFFFFh +
jnz loc_45BDE8  +
mov eax 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov [esp+4] esi +
mov dword ptr [esp] 0Ah +
call fputc  +
cmp eax 0FFFFFFFFh +
jz loc_45BE2C  +
add edi 4 +
jmp loc_45BDD3  +
***
xor eax eax +
nop   +
jmp loc_45BE31  +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+48h+arg_0] +
lea ebx [ebp+1] +
mov [esp+48h+var_30] 7D0h +
mov ecx [eax] +
cmp ebx ecx +
jge loc_45BEAE  +
nop   +
mov eax [esp+48h+arg_4] +
lea edi ds:0[ebx*4] +
mov edx [eax] +
mov eax [edx+ebx*4] +
cmp byte ptr [eax] 40h +
jz loc_45BEB6  +
mov ebp ebx +
lea ebx [ebp+1] +
cmp ebx ecx +
jl loc_45BE90  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
sub [esp+48h+var_30] 1 +
jz loc_45C121  +
add eax 1 +
mov [esp+48h+var_44] offset aR +
mov [esp+48h+var_48] eax +
call fopen  +
test eax eax +
mov esi eax +
jz loc_45C0A8  +
mov [esp+48h+var_40] 2 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] eax +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_45C0A0  +
mov [esp+48h+var_48] esi +
call ftell  +
cmp eax 0FFFFFFFFh +
mov [esp+48h+var_2C] eax +
jz loc_45C0A0  +
mov [esp+48h+var_40] 0 +
mov [esp+48h+var_44] 0 +
mov [esp+48h+var_48] esi +
call fseek  +
cmp eax 0FFFFFFFFh +
jz loc_45C0A0  +
mov edx [esp+48h+var_2C] +
lea eax [edx+1] +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_28] edx +
call sub_45B8D0  +
mov edx [esp+48h+var_28] +
mov [esp+48h+var_3C] esi +
mov [esp+48h+var_44] 1 +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_48] eax +
mov [esp+48h+var_2C] eax +
call fread  +
mov edx [esp+48h+var_28] +
cmp edx eax +
mov ecx eax +
jz loc_45BF8A  +
mov [esp+48h+var_48] esi +
mov [esp+48h+var_28] eax +
call ferror  +
mov ecx [esp+48h+var_28] +
test eax eax +
jnz loc_45C0A0  +
mov eax [esp+48h+var_2C] +
mov byte ptr [eax+ecx] 0 +
movzx eax byte ptr [eax] +
test al al +
jz loc_45BFC8  +
test ds:byte_495EE0[eax+eax] 40h +
jz loc_45C0B5  +
mov eax [esp+48h+var_2C] +
jmp loc_45BFBE  +
test ds:byte_495EE0[edx+edx] 40h +
jz loc_45C0B5  +
add eax 1 +
movzx edx byte ptr [eax] +
test dl dl +
jnz loc_45BFB0  +
mov [esp+48h+var_48] 4 +
call sub_45B8D0  +
mov dword ptr [eax] 0 +
mov [esp+48h+var_24] eax +
mov eax [esp+48h+arg_4] +
mov eax [eax] +
mov [esp+48h+var_48] eax +
call sub_45BAB0  +
xor edx edx +
mov [esp+48h+var_20] 0 +
mov ecx eax +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+arg_4] +
mov [eax] ecx +
mov ecx [esp+48h+arg_0] +
mov eax edx +
mov [esp+48h+var_1C] edx +
add eax [ecx] +
lea eax ds:4[eax*4] +
mov [esp+48h+var_44] eax +
mov eax [esp+48h+var_28] +
mov [esp+48h+var_48] eax +
call sub_45B950  +
mov ecx [esp+48h+arg_4] +
mov edx [esp+48h+var_1C] +
mov [esp+48h+var_28] edx +
mov [ecx] eax +
mov ecx [esp+48h+arg_0] +
mov ecx [ecx] +
sub ecx ebx +
add ebx edx +
shl ecx 2 +
mov [esp+48h+var_40] ecx +
lea ecx [eax+edi+4] +
lea eax [eax+ebx*4] +
mov [esp+48h+var_44] ecx +
mov [esp+48h+var_48] eax +
call memmove  +
mov eax [esp+48h+arg_4] +
mov ebx [esp+48h+var_24] +
add edi [eax] +
mov eax [esp+48h+var_20] +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] edi +
mov [esp+48h+var_40] eax +
call memcpy  +
mov eax [esp+48h+arg_0] +
mov edx [esp+48h+var_28] +
mov edi [esp+48h+arg_0] +
mov eax [eax] +
lea eax [edx+eax-1] +
mov [edi] eax +
mov [esp+48h+var_48] ebx +
mov ebx ebp +
call free  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_48] eax +
call free  +
nop   +
mov [esp+48h+var_48] esi +
call fclose  +
mov eax [esp+48h+arg_0] +
mov ebp ebx +
mov ecx [eax] +
jmp loc_45BEA7  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_48] eax +
call sub_45BBA0  +
mov edx [eax] +
mov [esp+48h+var_24] eax +
mov eax [esp+48h+arg_4] +
mov [esp+48h+var_20] edx +
mov eax [eax] +
mov [esp+48h+var_48] eax +
call sub_45BAB0  +
mov edx [esp+48h+var_20] +
test edx edx +
mov ecx eax +
mov [esp+48h+var_28] eax +
mov eax [esp+48h+arg_4] +
mov [eax] ecx +
jz loc_45C14B  +
mov eax [esp+48h+var_24] +
xor edx edx +
mov ecx [esp+48h+var_28] +
mov [esp+48h+var_1C] ebp +
nop   +
lea esi [esi+0] +
add edx 1 +
cmp dword ptr [eax+edx*4] 0 +
lea ebp ds:0[edx*4] +
jnz loc_45C100  +
mov [esp+48h+var_20] ebp +
mov ebp [esp+48h+var_1C] +
mov [esp+48h+var_28] ecx +
jmp loc_45C002  +
mov eax [edx] +
mov [esp+48h+var_44] offset aSErrorTooMany@ +
mov [esp+48h+var_40] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+48h+var_48] eax +
call fprintf  +
mov [esp+48h+var_48] 1 +
call sub_45BA00  +
mov [esp+48h+var_20] 0 +
jmp loc_45C002  +
***
add eax 1 +
mov ecx [edx+eax*4] +
test ecx ecx +
jnz loc_45C170  +
retn   +
***
mov eax ds:dword_49F98C +
test eax eax +
jz loc_45C220  +
mov ebx off_47684C +
mov eax [ebx+4] +
cmp eax 1Fh +
lea edx [eax+1] +
jg loc_45C1F0  +
mov [ebx+4] edx +
mov edx [esp+18h+arg_0] +
mov [ebx+eax*4+8] edx +
xor eax eax +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_18] 88h +
call malloc  +
test eax eax +
jz loc_45C22C  +
mov [eax] ebx +
mov edx 1 +
mov ebx eax +
mov dword ptr [eax+4] 0 +
mov off_47684C eax +
xor eax eax +
jmp loc_45C1DE  +
mov ds:dword_49F98C offset loc_45C190 +
jmp loc_45C1CD  +
mov eax 0FFFFFFFFh +
jmp loc_45C1EB  +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_45A960  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+40h] +
mov dword ptr [esp+14h] 1 +
mov [esp+10h] eax +
mov eax [esp+3Ch] +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_45A960  +
add esp 2Ch +
retn   +
***
mov eax ds:dword_49F540 +
test eax eax +
jz loc_45C2D0  +
retn   +
push ebp  +
mov ebp esp +
push esi  +
push ebx  +
sub esp 10h +
mov esi ds:GetTempPathA +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 0 +
call esi  +
sub esp 8 +
test eax eax +
mov ebx eax +
jnz loc_45C308  +
mov eax ds:dword_49F540 +
test eax eax +
jz loc_45C33C  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] eax +
call sub_45B8D0  +
mov [esp+1Ch+var_1C] ebx +
mov ds:dword_49F540 eax +
mov [esp+1Ch+var_18] eax +
call esi  +
sub esp 8 +
test eax eax +
jnz loc_45C2F8  +
mov eax ds:dword_49F540 +
mov [esp+1Ch+var_1C] eax +
call free  +
mov ds:dword_49F540 0 +
mov [esp+1Ch+var_1C] offset a_ +
call sub_45A840  +
mov ds:dword_49F540 eax +
jmp loc_45C301  +
***
push esi  +
mov [esp+18h+var_18] 0Ch +
sub esp 14h +
mov eax [esp+14h+arg_4] +
mov esi [esp+14h+arg_0] +
test eax eax +
jz loc_45C50C  +
lea ebx [eax+7] +
and ebx 0FFFFFFF8h +
lea ecx [ebx+8] +
cmp eax ecx +
ja loc_45C529  +
mov edx [esi+4] +
cmp ebx edx +
jbe loc_45C550  +
cmp ebx 1FFh +
ja loc_45C567  +
mov [esp+14h+var_14] 0FE0h +
call malloc  +
test eax eax +
jz loc_45C529  +
mov edx [esi+8] +
test ebx ebx +
mov dword ptr [eax+4] 0 +
mov [eax] edx +
lea edx [eax+8] +
mov [esi] edx +
mov dword ptr [esi+4] 0FD8h +
mov [esi+8] eax +
jz loc_45C531  +
mov eax ebx +
jnz loc_45C59C  +
mov edx [esi+4] +
cmp edx 7 +
ja loc_45C590  +
mov [esp+14h+var_14] 0FE0h +
mov ebx 8 +
call malloc  +
test eax eax +
jnz loc_45C4E5  +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov ebx 0FFFFFFF8h +
mov ecx 0FD0h +
mov eax 8 +
add eax edx +
mov [esi] eax +
add eax ebx +
mov [esi+4] ecx +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
mov ecx ebx +
neg ecx  +
mov eax [esi] +
sub edx ebx +
mov [esi+4] edx +
add eax ebx +
mov [esi] eax +
add esp 14h +
add eax ecx +
pop ebx  +
pop esi  +
retn   +
mov [esp+14h+var_14] ecx +
call malloc  +
test eax eax +
jz loc_45C529  +
mov edx [esi+8] +
mov [eax] edx +
mov edx [esi] +
mov [eax+4] edx +
mov [esi+8] eax +
add esp 14h +
add eax 8 +
pop ebx  +
pop esi  +
retn   +
mov ecx 0FFFFFFF8h +
mov ebx 8 +
jmp loc_45C554  +
mov ecx 0FD8h +
sub ecx ebx +
neg ebx  +
jmp loc_45C540  +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_4] +
mov eax [eax+8] +
test eax eax +
jz loc_45C630  +
mov ebx eax +
xor ebp ebp +
jmp loc_45C60D  +
lea edx [ebx+8] +
cmp esi edx +
jz loc_45C635  +
mov ebx [ebx] +
test ebx ebx +
jz loc_45C630  +
mov edi [ebx+4] +
test edi edi +
jnz loc_45C600  +
cmp esi ebx +
jbe loc_45C622  +
lea edx [ebx+0FE0h] +
cmp esi edx +
jb loc_45C682  +
mov ebp ebx +
mov ebx [ebx] +
test ebx ebx +
jnz loc_45C60D  +
lea esi [esi+0] +
call abort  +
mov ebx [ebx] +
cmp eax ebx +
jnz loc_45C642  +
jmp loc_45C650  +
mov eax esi +
mov esi [eax] +
mov [esp+1Ch+var_1C] eax +
call free  +
cmp ebx esi +
jnz loc_45C640  +
mov eax [esp+1Ch+arg_0] +
mov [eax+8] ebx +
mov edx [ebx+4] +
test edx edx +
jz loc_45C669  +
nop   +
mov ebx [ebx] +
mov eax [ebx+4] +
test eax eax +
jnz loc_45C660  +
mov eax [esp+1Ch+arg_0] +
add ebx 0FE0h +
sub ebx edi +
mov [eax] edi +
mov [eax+4] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ebx ebx +
mov [esp+1Ch+var_10] edx +
jz loc_45C630  +
cmp eax ebx +
jz loc_45C710  +
mov [esp+1Ch+var_14] 0 +
mov edi ebp +
jmp loc_45C6B8  +
cmp edi eax +
mov ecx 0 +
mov [esp+1Ch+var_1C] eax +
cmovz edi ecx +
call free  +
cmp ebp ebx +
jz loc_45C6D5  +
mov eax ebp +
test edi edi +
mov ebp [eax] +
jnz loc_45C6A0  +
cmp esi [eax+4] +
jb loc_45C706  +
mov ecx [esp+1Ch+var_14] +
test ecx ecx +
jnz loc_45C6B2  +
mov edi [esp+1Ch+var_14] +
mov [esp+1Ch+var_14] eax +
jmp loc_45C6B2  +
mov eax [esp+1Ch+var_14] +
mov edi ebp +
test eax eax +
cmovnz edi eax +
mov [esp+1Ch+var_14] edi +
mov eax [esp+1Ch+arg_0] +
mov ecx [esp+1Ch+var_14] +
mov [eax] esi +
mov [eax+8] ecx +
mov eax [esp+1Ch+var_10] +
mov ecx [esp+1Ch+arg_0] +
sub eax esi +
mov [ecx+4] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] eax +
call free  +
jmp loc_45C6B2  +
mov [esp+1Ch+var_14] eax +
jmp loc_45C6E4  +
***
push esi  +
push ebx  +
sub esp 120h +
mov esi [ebp+arg_0] +
lea eax [ebp+var_110] +
lea ebx [ebp+var_10C] +
mov [esp+128h+var_11C] eax +
mov [esp+128h+var_120] ebx +
mov [esp+128h+var_124] 104h +
mov [esp+128h+var_128] esi +
call ds:GetFullPathNameA  +
lea edx [eax-1] +
sub esp 10h +
cmp edx 102h +
ja loc_45C780  +
mov [esp+128h+var_128] ebx +
mov [esp+128h+var_124] eax +
call ds:CharLowerBuffA  +
sub esp 8 +
mov [esp+128h+var_128] ebx +
call _strdup  +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
mov [ebp+arg_0] esi +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp _strdup  +
***
sub esp 14h +
mov ebx [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
call strlen  +
mov [esp+14h+var_10] ebx +
mov esi eax +
lea eax [eax+1] +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_0] +
mov [esp+14h+var_14] eax +
call memcpy  +
add esp 14h +
pop ebx  +
add eax esi +
pop esi  +
retn   +
***
mov eax ds:dword_49F544 +
test eax eax +
jz loc_45C7E0  +
retn   +
sub esp 1Ch +
mov [esp+1Ch+var_1C] 105h +
call sub_45B8D0  +
mov [esp+1Ch+var_18] 105h +
mov [esp+1Ch+var_1C] eax +
call _getcwd  +
mov ds:dword_49F544 eax +
add esp 1Ch +
retn   +
***
mov eax [esp+arg_4] +
cmp [esp+arg_0] eax +
setz al  +
movzx eax al +
retn   +
***
mov ecx [esp+arg_0] +
mov ebx 42135234h +
movzx eax cx +
sar ecx 10h +
sub ecx eax +
add eax 5C242785h +
sub ecx 42135234h +
xor ecx 2109Ah +
mov edx ecx +
sub eax ecx +
shl edx 8 +
sub ebx ecx +
xor eax edx +
mov edx eax +
sub ebx eax +
shr edx 0Dh +
sub ecx eax +
xor edx ebx +
mov ebx edx +
sub ecx edx +
shr ebx 0Ch +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 10h +
xor ecx eax +
mov eax edx +
sub eax ebx +
mov edx ecx +
sub eax ecx +
sub ebx ecx +
shr edx 5 +
xor edx eax +
mov esi edx +
sub ebx edx +
shr esi 3 +
sub ecx edx +
xor esi ebx +
mov eax esi +
sub ecx esi +
shl eax 0Ah +
sub edx esi +
xor eax ecx +
sub edx eax +
shr eax 0Fh +
xor eax edx +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
push esi  +
push ebx  +
sub esp 3Ch +
mov ebx [eax+0Ch] +
mov edx [eax+14h] +
sub edx [eax+18h] +
mov [esp+3Ch+var_24] eax +
mov esi [eax+38h] +
mov edi ebx +
mov [esp+3Ch+var_10] ebx +
mov ebx [eax+10h] +
lea eax [edx+edx] +
lea edi [edi+ebx*4] +
cmp ebx eax +
mov [esp+3Ch+var_2C] edi +
jb loc_45CACC  +
shl edx 3 +
cmp ebx edx +
ja loc_45CAC3  +
mov edi [esp+3Ch+var_24] +
mov eax [edi+30h] +
test eax eax +
jz loc_45CAEB  +
mov edx [edi+2Ch] +
mov [esp+3Ch+var_34] 4 +
mov [esp+3Ch+var_38] ebx +
mov [esp+3Ch+var_3C] edx +
call eax  +
test eax eax +
jz loc_45CB07  +
mov edi [esp+18h] +
mov [edi+0Ch] eax +
mov eax [edi+18h] +
mov [edi+10h] ebx +
mov ebx [esp+2Ch] +
mov [edi+38h] esi +
sub [edi+14h] eax +
mov dword ptr [edi+18h] 0 +
jmp loc_45C9C5  +
add ebx 4 +
cmp [esp+10h] ebx +
jbe loc_45CAA2  +
mov eax [ebx] +
cmp eax 1 +
mov [esp+0Ch] eax +
jbe loc_45C9B8  +
mov edi [esp+18h] +
mov ecx [esp+0Ch] +
mov eax [edi] +
mov [esp+0] ecx +
call eax  +
mov esi eax +
mov [esp+1Ch] eax +
mov eax [edi+38h] +
shl eax 4 +
lea ecx dword_496140[eax] +
mov edx ds:dword_49614C[eax] +
mov eax ds:dword_496140[eax] +
mov [esp+20h] ecx +
mov ebp edx +
mov [esp+14h] eax +
mov eax esi +
mov [esp+24h] edx +
mul  dword ptr [ecx+4] +
mov eax esi +
mov ecx ebp +
mov ebp [edi+0Ch] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax [esp+14h] +
sub esi eax +
mov eax [edi+10h] +
lea ecx [ebp+esi*4+0] +
mov [esp+28h] eax +
mov eax [ecx] +
test eax eax +
jz loc_45CA8F  +
cmp eax 1 +
jz loc_45CB41  +
mov ecx [esp+1Ch] +
mov edi [esp+20h] +
mov eax ecx +
mul  dword ptr [edi+8] +
mov eax ecx +
add eax 1 +
mov edi [esp+28h] +
sub ecx edx +
shr ecx 1 +
add edx ecx +
movzx ecx byte ptr [esp+24h] +
shr edx cl +
mov ecx [esp+14h] +
sub ecx 2 +
imul edx ecx +
sub eax edx +
jmp loc_45CA7A  +
cmp edx 1 +
jz loc_45CB41  +
add esi eax +
mov edx esi +
sub edx edi +
cmp edi esi +
cmovbe esi edx +
lea ecx [ebp+esi*4+0] +
mov edx [ecx] +
test edx edx +
jnz loc_45CA71  +
mov eax [esp+0Ch] +
add ebx 4 +
cmp [esp+10h] ebx +
mov [ecx] eax +
ja loc_45C9C5  +
mov eax [esp+18h] +
mov eax [eax+28h] +
test eax eax +
jz loc_45CB11  +
mov ebx [esp+2Ch] +
mov [esp+0] ebx +
call eax  +
mov eax 1 +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp ebx 20h +
jbe loc_45C96D  +
call sub_45C8A0  +
mov edi [esp+3Ch+var_24] +
mov esi eax +
shl eax 4 +
mov ebx ds:dword_496140[eax] +
mov eax [edi+30h] +
test eax eax +
jnz loc_45C97C  +
mov eax [esp+3Ch+var_24] +
mov eax [eax+24h] +
mov [esp+3Ch+var_38] 4 +
mov [esp+3Ch+var_3C] ebx +
call eax  +
test eax eax +
jnz loc_45C998  +
add esp 3Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx [esp+18h] +
mov eax 1 +
mov edx [ebx+34h] +
test edx edx +
jz loc_45CABB  +
mov ecx [ebx+2Ch] +
mov [esp+0Ch] eax +
mov eax [esp+2Ch] +
mov [esp+0] ecx +
mov [esp+4] eax +
call edx  +
mov eax [esp+0Ch] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call abort  +
lea esi [esi+0] +
lea edi [edi+0] +
mov eax [esp+4] +
mov eax [eax+10h] +
retn   +
***
mov edx [esp+4] +
mov eax [edx+14h] +
sub eax [edx+18h] +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+30h] +
mov ebx [esp+40h] +
call sub_45C8A0  +
mov dword ptr [esp+8] 3Ch +
mov dword ptr [esp+4] 1 +
mov [esp] ebx +
mov edi eax +
shl eax 4 +
mov ebp ds:dword_496140[eax] +
call dword ptr [esp+44h]  +
test eax eax +
mov esi eax +
jz loc_45CC13  +
mov dword ptr [esp+8] 4 +
mov [esp+4] ebp +
mov [esp] ebx +
call dword ptr [esp+44h]  +
test eax eax +
mov [esi+0Ch] eax +
jz loc_45CC00  +
mov eax [esp+34h] +
mov [esi+10h] ebp +
mov [esi+38h] edi +
mov [esi+2Ch] ebx +
mov [esi] eax +
mov eax [esp+38h] +
mov [esi+4] eax +
mov eax [esp+3Ch] +
mov [esi+8] eax +
mov eax [esp+44h] +
mov [esi+30h] eax +
mov eax [esp+48h] +
mov [esi+34h] eax +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esp+48h] +
test eax eax +
jz loc_45CC13  +
mov [esp+4] esi +
mov [esp] ebx +
call dword ptr [esp+48h]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov esi [esp+1Ch+arg_14] +
call sub_45C8A0  +
mov [esp+1Ch+var_18] 3Ch +
mov [esp+1Ch+var_1C] 1 +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_496140[eax] +
call [esp+1Ch+arg_10]  +
test eax eax +
mov ebp eax +
jz loc_45CCAF  +
mov [esp+1Ch+var_18] 4 +
mov [esp+1Ch+var_1C] edi +
call esi  +
test eax eax +
mov [ebp+0Ch] eax +
jz loc_45CCA0  +
mov eax [esp+1Ch+arg_4] +
mov [ebp+10h] edi +
mov [ebp+38h] ebx +
mov [ebp+24h] esi +
mov [ebp+0] eax +
mov eax [esp+1Ch+arg_8] +
mov [ebp+4] eax +
mov eax [esp+1Ch+arg_C] +
mov [ebp+8] eax +
mov eax [esp+1Ch+arg_18] +
mov [ebp+28h] eax +
add esp 1Ch +
mov eax ebp +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+1Ch+arg_18] +
test eax eax +
jz loc_45CCAF  +
mov [esp+1Ch+var_1C] ebp +
call [esp+1Ch+arg_18]  +
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_10] +
mov edx [esp+2Ch+arg_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_1C] eax +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] edx +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_45CC20  +
add esp 2Ch +
retn   +
***
mov eax [esp+4] +
mov edx [esp+8] +
mov [eax] edx +
mov edx [esp+0Ch] +
mov [eax+4] edx +
mov edx [esp+10h] +
mov [eax+8] edx +
mov edx [esp+14h] +
mov [eax+2Ch] edx +
mov edx [esp+18h] +
mov [eax+30h] edx +
mov edx [esp+1Ch] +
mov [eax+34h] edx +
retn   +
***
sub esp 2Ch +
mov eax [esp+3Ch] +
mov dword ptr [esp+18h] offset free +
mov dword ptr [esp+14h] offset loc_45B900 +
mov dword ptr [esp+10h] offset loc_45B900 +
mov [esp+0Ch] eax +
mov eax [esp+38h] +
mov [esp+8] eax +
mov eax [esp+34h] +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_45CC20  +
add esp 2Ch +
retn   +
***
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov [esp+2Ch+var_14] offset free +
mov [esp+2Ch+var_18] offset calloc +
mov [esp+2Ch+var_1C] offset calloc +
mov [esp+2Ch+var_20] eax +
mov eax [esp+2Ch+arg_8] +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+arg_4] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call sub_45CC20  +
add esp 2Ch +
retn   +
***
push ebx  +
sub esp 10h +
mov edi [esp+10h+arg_0] +
mov eax [edi+8] +
mov ebx [edi+10h] +
mov esi [edi+0Ch] +
test eax eax +
jz loc_45CE01  +
sub ebx 1 +
js loc_45CE01  +
mov eax [esi+ebx*4] +
cmp eax 1 +
jbe loc_45CDE7  +
mov edx [edi+8] +
mov [esp+10h+var_10] eax +
call edx  +
sub ebx 1 +
jns loc_45CDEC  +
mov eax [edi+28h] +
test eax eax +
jz loc_45CE20  +
mov [esp+10h+var_10] esi +
call eax  +
mov eax [edi+28h] +
mov [esp+10h+arg_0] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
jmp eax  +
mov eax [edi+34h] +
test eax eax +
jz loc_45CE42  +
mov edx [edi+2Ch] +
mov [esp+10h+var_C] esi +
mov [esp+10h+var_10] edx +
call eax  +
mov edx [edi+2Ch] +
mov eax [edi+34h] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] edx +
call eax  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+30h] +
mov eax [esi+8] +
mov edi [esi+10h] +
mov ebp [esi+0Ch] +
test eax eax +
mov ebx edi +
jz loc_45CE8B  +
lea esi [esi+0] +
sub ebx 1 +
js loc_45CE8B  +
mov eax [ebp+ebx*4+0] +
cmp eax 1 +
jbe loc_45CE70  +
mov edx [esi+8] +
mov [esp] eax +
call edx  +
sub ebx 1 +
jns loc_45CE75  +
cmp edi 40000h +
jbe loc_45CEE0  +
mov eax 100h +
call sub_45C8A0  +
mov ebx eax +
shl eax 4 +
mov edi ds:dword_496140[eax] +
mov eax [esi+28h] +
test eax eax +
jz loc_45CF10  +
mov edx [esi+0Ch] +
mov [esp] edx +
call eax  +
mov eax [esi+30h] +
test eax eax +
jz loc_45CF28  +
mov edx [esi+2Ch] +
mov dword ptr [esp+8] 4 +
mov [esp+4] edi +
mov [esp] edx +
call eax  +
mov [esi+0Ch] eax +
mov [esi+10h] edi +
mov [esi+38h] ebx +
jmp loc_45CEF7  +
shl edi 2 +
mov [esp+8] edi +
mov dword ptr [esp+4] 0 +
mov [esp] ebp +
call memset  +
mov dword ptr [esi+18h] 0 +
mov dword ptr [esi+14h] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax [esi+34h] +
test eax eax +
jz loc_45CEB7  +
mov ecx [esi+0Ch] +
mov edx [esi+2Ch] +
mov [esp+4] ecx +
mov [esp] edx +
call eax  +
jmp loc_45CEB7  +
***
mov eax [esi+24h] +
mov dword ptr [esp+4] 4 +
mov [esp] edi +
call eax  +
mov [esi+0Ch] eax +
jmp loc_45CED5  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_8] +
mov eax [ebx+10h] +
add dword ptr [ebx+1Ch] 1 +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+38h] +
shl eax 4 +
lea ebp dword_496140[eax] +
mov eax ds:dword_496140[eax] +
mov ecx [ebp+0Ch] +
mov edi eax +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+4] +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax edi +
mov edi [ebx+0Ch] +
sub esi eax +
mov edx [edi+esi*4] +
test edx edx +
jz loc_45D060  +
cmp edx 1 +
jz loc_45D070  +
mov ecx [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_18] edx +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] ecx +
call eax  +
mov edx [esp+2Ch+var_18] +
mov ecx eax +
mov eax edx +
test ecx ecx +
jnz loc_45D054  +
mov eax [ebx+38h] +
mov edi [ebx+0Ch] +
shl eax 4 +
lea ebp dword_496140[eax] +
mov eax ds:dword_496140[eax] +
mov ecx [ebp+0Ch] +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [esp+2Ch+var_10] +
shr eax cl +
sub edx 2 +
imul eax edx +
sub [esp+2Ch+var_18] eax +
mov eax [ebx+20h] +
add esi [esp+2Ch+var_18] +
add eax 1 +
mov ecx [esp+2Ch+var_14] +
mov [ebx+20h] eax +
mov edx esi +
sub edx ecx +
cmp ecx esi +
cmovbe esi edx +
mov ebp [edi+esi*4] +
test ebp ebp +
jz loc_45D060  +
cmp ebp 1 +
jz loc_45D013  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_45D052  +
mov eax [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_45D013  +
mov eax ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 2Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] eax +
jmp loc_45CFE4  +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov eax [esi] +
mov [esp+14h+var_14] ebx +
call eax  +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_C] eax +
call sub_45CF40  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
cmp [esp+2Ch+arg_C] 1 +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jz loc_45D231  +
mov eax [ebx+38h] +
shl eax 4 +
lea edi dword_496140[eax] +
mov ecx ds:dword_49614C[eax] +
mov eax ds:dword_496140[eax] +
mov [esp+2Ch+var_18] edi +
mov esi eax +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [edi+4] +
mov eax [esp+2Ch+arg_8] +
mov edi [ebx+0Ch] +
add dword ptr [ebx+1Ch] 1 +
sub eax edx +
shr eax 1 +
add eax edx +
shr eax cl +
imul eax esi +
mov esi [esp+2Ch+arg_8] +
sub esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov [esp+2Ch+var_14] eax +
mov eax [eax] +
test eax eax +
jz loc_45D25D  +
cmp eax 1 +
jz loc_45D172  +
mov edi [esp+2Ch+arg_4] +
mov edx [ebx+4] +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_28] edi +
call edx  +
test eax eax +
jnz loc_45D224  +
mov edx [ebx+38h] +
mov edi [ebx+0Ch] +
mov [esp+2Ch+var_14] 0 +
shl edx 4 +
lea eax dword_496140[edx] +
mov ecx ds:dword_49614C[edx] +
mov [esp+2Ch+var_18] eax +
mov eax ds:dword_496140[edx] +
mov [esp+2Ch+var_10] eax +
mov ebp [esp+2Ch+var_18] +
mov eax [esp+2Ch+arg_8] +
mul  dword ptr [ebp+8] +
mov eax [esp+2Ch+arg_8] +
mov ebp [esp+2Ch+var_10] +
add eax 1 +
mov [esp+2Ch+var_18] eax +
mov eax [esp+2Ch+arg_8] +
sub ebp 2 +
sub eax edx +
shr eax 1 +
add eax edx +
mov edx [ebx+20h] +
shr eax cl +
imul eax ebp +
sub [esp+2Ch+var_18] eax +
add esi [esp+2Ch+var_18] +
add edx 1 +
mov ecx [esp+2Ch+var_1C] +
mov [ebx+20h] edx +
mov eax esi +
sub eax ecx +
cmp ecx esi +
cmovbe esi eax +
lea ebp ds:0[esi*4] +
lea eax [edi+ebp] +
mov ecx [eax] +
test ecx ecx +
jz loc_45D200  +
cmp ecx 1 +
jz loc_45D1F0  +
mov edi [esp+2Ch+arg_4] +
mov eax [ebx+4] +
mov [esp+2Ch+var_2C] ecx +
mov [esp+2Ch+var_28] edi +
call eax  +
test eax eax +
jnz loc_45D224  +
mov edx [ebx+20h] +
mov edi [ebx+0Ch] +
jmp loc_45D1A5  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
cmovnz eax ecx +
mov [esp+2Ch+var_14] eax +
jmp loc_45D1A5  +
mov edx [esp+2Ch+arg_C] +
test edx edx +
jz loc_45D259  +
mov edi [esp+2Ch+var_14] +
test edi edi +
jz loc_45D268  +
sub dword ptr [ebx+18h] 1 +
mov eax edi +
mov dword ptr [edi] 0 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+0Ch] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
add eax ebp +
pop ebp  +
retn   +
lea edx [eax+eax*2] +
mov eax [ebx+14h] +
shl eax 2 +
cmp edx eax +
ja loc_45D0CD  +
mov eax ebx +
call sub_45C930  +
test eax eax +
jz loc_45D259  +
mov eax [ebx+10h] +
mov [esp+2Ch+var_1C] eax +
jmp loc_45D0CD  +
xor eax eax +
jmp loc_45D21C  +
cmp [esp+2Ch+arg_C] 0 +
jz loc_45D259  +
mov eax [esp+2Ch+var_14] +
add dword ptr [ebx+14h] 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 14h +
mov esi [esp+14h+arg_0] +
mov ebx [esp+14h+arg_4] +
mov eax [esi] +
mov [esp+14h+var_14] ebx +
call eax  +
mov edx [esp+14h+arg_8] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] esi +
mov [esp+14h+var_8] edx +
mov [esp+14h+var_C] eax +
call sub_45D0B0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
mov eax [esp+14h+arg_8] +
mov ebx [esp+14h+arg_0] +
mov [esp+14h+var_8] 0 +
mov [esp+14h+var_C] eax +
mov eax [esp+14h+arg_4] +
mov [esp+14h+var_14] ebx +
mov [esp+14h+var_10] eax +
call sub_45D0B0  +
mov esi eax +
mov eax [eax] +
test eax eax +
jz loc_45D307  +
mov edx [ebx+8] +
test edx edx +
jz loc_45D2FD  +
mov [esp+14h+var_14] eax +
call edx  +
mov dword ptr [esi] 1 +
add dword ptr [ebx+18h] 1 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+20h] +
mov ebx [esp+24h] +
mov eax [esi] +
mov [esp] ebx +
call eax  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
call sub_45D2C0  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
sub esp 14h +
push esi  +
push ebx  +
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov ebp [esp+1Ch+arg_4] +
mov edi [esp+1Ch+arg_8] +
mov ebx [eax+0Ch] +
mov eax [eax+10h] +
lea esi [ebx+eax*4] +
jmp loc_45D3B7  +
add ebx 4 +
cmp esi ebx +
jbe loc_45D3C9  +
cmp dword ptr [ebx] 1 +
jbe loc_45D3B0  +
mov [esp+1Ch+var_18] edi +
mov [esp+1Ch+var_1C] ebx +
call ebp  +
test eax eax +
jnz loc_45D3B0  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_45D3E0  +
push edi  +
push esi  +
push ebx  +
mov ebx [esp+10h] +
mov esi [esp+14h] +
mov edi [esp+18h] +
mov eax [ebx+14h] +
sub eax [ebx+18h] +
mov edx [ebx+10h] +
shl eax 3 +
cmp edx eax +
jbe loc_45D404  +
cmp edx 20h +
ja loc_45D418  +
mov [esp+18h] edi +
mov [esp+14h] esi +
mov [esp+10h] ebx +
pop ebx  +
pop esi  +
pop edi  +
jmp sub_45D390  +
***
mov eax ebx +
call sub_45C930  +
jmp loc_45D404  +
***
jmp loc_45D430  +
push ebx  +
sub esp 8 +
mov edx [esp+10h] +
mov eax [edx+1Ch] +
test eax eax +
jz loc_45D461  +
mov ecx [edx+20h] +
xor ebx ebx +
xor edx edx +
mov [esp+4] ebx +
mov [esp] ecx +
fild  qword ptr [esp] +
mov [esp] eax +
mov [esp+4] edx +
fild  qword ptr [esp] +
add esp 8 +
fdivp st(1) st +
pop ebx  +
retn   +
***
add esp 8 +
fldz   +
pop ebx  +
retn   +
***
imul eax eax +
add ecx 1 +
lea eax [eax+edx-71h] +
movzx edx byte ptr [ecx-1] +
test dl dl +
jnz loc_45D480  +
retn   +
***
push edi  +
mov edx 9E3779B9h +
push esi  +
push ebx  +
mov eax [esp+0Ch+arg_0] +
mov ebx [esp+0Ch+arg_8] +
mov esi [esp+0Ch+arg_4] +
test al 3 +
jz loc_45D686  +
cmp esi 0Bh +
jbe loc_45D5AE  +
mov edi ecx +
mov ecx ebx +
nop   +
movzx ebp byte ptr [eax+5] +
movzx ebx byte ptr [eax+6] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+4] +
add ebp ebx +
movzx ebx byte ptr [eax+7] +
shl ebx 18h +
add ebx ebp +
movzx ebp byte ptr [eax+9] +
add edi ebx +
movzx ebx byte ptr [eax+0Ah] +
shl ebp 8 +
shl ebx 10h +
add ebx ebp +
movzx ebp byte ptr [eax+8] +
add ebx ebp +
movzx ebp byte ptr [eax+0Bh] +
shl ebp 18h +
add ebx ebp +
movzx ebp byte ptr [eax+1] +
add ebx ecx +
movzx ecx byte ptr [eax+2] +
shl ebp 8 +
shl ecx 10h +
add ecx ebp +
movzx ebp byte ptr [eax] +
add ecx ebp +
movzx ebp byte ptr [eax+3] +
shl ebp 18h +
add ecx ebp +
sub ecx ebx +
sub ecx edi +
sub edi ebx +
add edx ecx +
mov ecx ebx +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
shr ebx 0Dh +
xor ebx edi +
sub edx ecx +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
sub esi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
add eax 0Ch +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
sub ebx edx +
xor edi ecx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
xor ecx ebx +
cmp esi 0Bh +
ja loc_45D4D0  +
mov ebx ecx +
mov ecx edi +
add ebx [esp+0Ch+arg_4] +
cmp esi 0Bh +
ja loc_45D61C  +
jmp ds:off_496104[esi*4]  +
movzx esi byte ptr [eax+0Ah] +
shl esi 18h +
add ebx esi +
movzx esi byte ptr [eax+9] +
shl esi 10h +
add ebx esi +
movzx esi byte ptr [eax+8] +
shl esi 8 +
add ebx esi +
movzx esi byte ptr [eax+7] +
shl esi 18h +
add ecx esi +
movzx esi byte ptr [eax+6] +
shl esi 10h +
add ecx esi +
movzx esi byte ptr [eax+5] +
shl esi 8 +
add ecx esi +
movzx esi byte ptr [eax+4] +
add ecx esi +
movzx esi byte ptr [eax+3] +
shl esi 18h +
add edx esi +
movzx esi byte ptr [eax+2] +
shl esi 10h +
add edx esi +
movzx esi byte ptr [eax+1] +
shl esi 8 +
add edx esi +
movzx eax byte ptr [eax] +
add edx eax +
sub edx ecx +
mov eax ebx +
sub edx ebx +
sub ecx ebx +
shr eax 0Dh +
xor edx eax +
mov eax edx +
sub ecx edx +
shl eax 8 +
sub ebx edx +
xor eax ecx +
mov esi eax +
sub ebx eax +
shr esi 0Dh +
sub edx eax +
xor esi ebx +
mov ecx esi +
sub edx esi +
shr ecx 0Ch +
sub eax esi +
xor ecx edx +
mov edx eax +
mov eax ecx +
sub edx ecx +
shl eax 10h +
sub esi ecx +
xor eax edx +
mov edx eax +
sub esi eax +
shr edx 5 +
sub ecx eax +
xor edx esi +
mov ebx edx +
sub ecx edx +
shr ebx 3 +
sub eax edx +
xor ebx ecx +
mov ecx ebx +
sub eax ebx +
shl ecx 0Ah +
sub edx ebx +
xor ecx eax +
mov eax ecx +
sub edx ecx +
shr eax 0Fh +
pop ebx  +
xor eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+0Ch+arg_4] 0Bh +
jbe loc_45D5AE  +
mov edi ecx +
mov ecx ebx +
add edi [eax+4] +
add ecx [eax+8] +
mov ebx ecx +
lea ecx [ecx+edi] +
sub edi ebx +
sub edx ecx +
mov ecx ebx +
add edx [eax] +
shr ecx 0Dh +
xor edx ecx +
mov ecx edx +
sub edi edx +
shl ecx 8 +
xor ecx edi +
mov edi ebx +
sub edi edx +
mov ebx ecx +
sub edi ecx +
sub edx ecx +
shr ebx 0Dh +
xor ebx edi +
mov edi ebx +
sub edx ebx +
shr edi 0Ch +
xor edi edx +
mov edx ecx +
sub edx ebx +
mov ecx edi +
sub edx edi +
shl ecx 10h +
xor ecx edx +
mov edx ebx +
sub edx edi +
mov ebx ecx +
sub edx ecx +
sub edi ecx +
shr ebx 5 +
xor ebx edx +
mov edx ebx +
sub edi ebx +
shr edx 3 +
sub ecx ebx +
xor edx edi +
mov edi edx +
sub ecx edx +
shl edi 0Ah +
xor edi ecx +
sub ebx edx +
mov ecx edi +
sub ebx edi +
shr ecx 0Fh +
sub esi 0Ch +
xor ecx ebx +
add eax 0Ch +
cmp esi 0Bh +
ja loc_45D695  +
mov ebx ecx +
mov ecx edi +
jmp loc_45D5AE  +
***
mov ebx [esp+18h+arg_0] +
mov [esp+18h+var_18] ebx +
call strerror  +
test eax eax +
jz loc_45D740  +
add esp 18h +
pop ebx  +
retn   +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] offset aUndocumentedEr +
mov [esp+18h+var_18] offset unk_49F560 +
call sprintf  +
add esp 18h +
mov eax offset unk_49F560 +
pop ebx  +
retn   +
***
push ebx  +
mov edx [eax] +
movsx ebx byte ptr [edx] +
add edx 1 +
movzx esi bl +
test ds:byte_495EE0[esi+esi] 4 +
jz loc_45D7B5  +
lea esi [esi+0] +
lea ecx [ecx+ecx*4] +
mov [eax] edx +
lea ecx [ebx+ecx*2-30h] +
movsx ebx byte ptr [edx] +
add edx 1 +
movzx esi bl +
test ds:byte_495EE0[esi+esi] 4 +
jnz loc_45D790  +
test ecx ecx +
js loc_45D7B5  +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
retn   +
***
mov ebx eax +
movsx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_45D7E0  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_45D808  +
add edx 1 +
sub eax 30h +
mov [ebx] edx +
pop ebx  +
retn   +
lea eax [edx+1] +
mov [ebx] eax +
movzx eax byte ptr [edx+1] +
test ds:byte_495EE0[eax+eax] 4 +
jz loc_45D808  +
mov eax ebx +
call sub_45D770  +
mov edx [ebx] +
cmp byte ptr [edx] 5Fh +
jnz loc_45D808  +
add edx 1 +
mov [ebx] edx +
pop ebx  +
retn   +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
movzx edx cl +
test ds:byte_495EE0[edx+edx] 4 +
jz loc_45D880  +
sub ecx 30h +
lea ebx [eax+1] +
mov [ebp+0] ecx +
mov [edi] ebx +
movsx edx byte ptr [eax+1] +
mov eax 1 +
movzx esi dl +
test ds:byte_495EE0[esi+esi] 4 +
jz loc_45D874  +
nop   +
lea esi [esi+0] +
add ebx 1 +
lea eax [ecx+ecx*4] +
lea ecx [edx+eax*2-30h] +
movsx edx byte ptr [ebx] +
movzx esi dl +
test ds:byte_495EE0[esi+esi] 4 +
jnz loc_45D850  +
cmp dl 5Fh +
mov eax 1 +
jz loc_45D887  +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov [edi] ebx +
mov [ebp+0] ecx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov edx [ebx+10h] +
lea esi ds:0FFFFFFFCh[edx*4] +
jmp loc_45D8C9  +
mov eax [ebx+8] +
sub edx 1 +
mov [ebx+10h] edx +
lea ecx [esi-4] +
mov eax [eax+esi] +
test eax eax +
jnz loc_45D926  +
mov esi ecx +
test edx edx +
jg loc_45D8B4  +
mov edx [ebx+14h] +
mov edi [ebx+0Ch] +
lea esi ds:0FFFFFFFCh[edx*4] +
jmp loc_45D8F2  +
mov ecx [edi+esi] +
sub edx 1 +
mov [ebx+14h] edx +
lea eax [esi-4] +
test ecx ecx +
jnz loc_45D940  +
mov esi eax +
test edx edx +
jg loc_45D8E0  +
test edi edi +
jz loc_45D909  +
mov [esp+10h+var_10] edi +
call free  +
mov dword ptr [ebx+0Ch] 0 +
mov eax [ebx+8] +
test eax eax +
jz loc_45D91F  +
mov [esp+10h+var_10] eax +
call free  +
mov dword ptr [ebx+8] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+10h+var_10] eax +
call free  +
mov eax [ebx+8] +
mov dword ptr [eax+esi] 0 +
jmp loc_45D8A8  +
mov [esp+10h+var_10] ecx +
call free  +
mov eax [ebx+0Ch] +
mov dword ptr [eax+esi] 0 +
jmp loc_45D8CD  +
***
sub esp 18h +
mov edx [eax+14h] +
mov eax [eax+1Ch] +
cmp edx eax +
jl loc_45D9C1  +
test eax eax +
jz loc_45D9A6  +
lea edx [eax+eax] +
mov [ebx+1Ch] edx +
mov edx [ebx+0Ch] +
shl eax 3 +
mov [esp+18h+var_14] eax +
mov [esp+18h+var_18] edx +
call sub_45B950  +
mov edx [ebx+14h] +
mov [ebx+0Ch] eax +
lea ecx [edx+1] +
mov [ebx+14h] ecx +
mov dword ptr [eax+edx*4] 0 +
add esp 18h +
mov eax edx +
pop ebx  +
retn   +
mov dword ptr [ebx+1Ch] 5 +
mov [esp+18h+var_18] 14h +
call sub_45B8D0  +
mov edx [ebx+14h] +
mov [ebx+0Ch] eax +
jmp loc_45D992  +
mov eax [ebx+0Ch] +
jmp loc_45D992  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+18h] +
cmp [ebx+10h] eax +
jl loc_45DA04  +
test eax eax +
jz loc_45DA40  +
lea edx [eax+eax] +
mov [ebx+18h] edx +
mov edx [ebx+8] +
shl eax 3 +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call sub_45B950  +
mov [ebx+8] eax +
lea eax [esi+1] +
mov [esp+28h+var_28] eax +
call sub_45B8D0  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov edi eax +
call memcpy  +
mov eax [ebx+10h] +
mov edx [ebx+8] +
mov byte ptr [edi+esi] 0 +
lea ecx [eax+1] +
mov [ebx+10h] ecx +
mov [edx+eax*4] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+18h] 5 +
mov [esp+28h+var_28] 14h +
call sub_45B8D0  +
mov [ebx+8] eax +
jmp loc_45DA04  +
***
cmp eax 56h +
jz loc_45DA86  +
cmp eax 75h +
jz loc_45DA80  +
cmp eax 43h +
jz loc_45DA77  +
sub esp 0Ch +
call abort  +
mov eax 1 +
retn   +
mov eax 4 +
retn   +
mov eax 2 +
retn   +
***
cmp eax 7 +
push edi  +
push ebx  +
sub esp 14h +
lea edx [eax+20h] +
lea eax [eax+4] +
call sub_45DAF0  +
mov eax [esi+4] +
test eax eax +
jz loc_45DB6F  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+24h] 0 +
mov eax [esi+40h] +
test eax eax +
jz loc_45DBA5  +
mov edx [esi+44h] +
test edx edx +
jle loc_45DB96  +
xor ebx ebx +
nop   +
mov eax [eax+ebx*4] +
add ebx 1 +
mov [esp+18h+var_18] eax +
call free  +
mov eax [esi+40h] +
cmp [esi+44h] ebx +
jg loc_45DB80  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [esi+40h] 0 +
mov ebx [esi+4Ch] +
test ebx ebx +
jz loc_45DBE0  +
mov eax [ebx] +
test eax eax +
jz loc_45DBD1  +
mov [esp+18h+var_18] eax +
call free  +
mov dword ptr [ebx+4] 0 +
mov dword ptr [ebx+8] 0 +
mov dword ptr [ebx] 0 +
mov ebx [esi+4Ch] +
mov [esp+18h+var_18] ebx +
call free  +
mov dword ptr [esi+4Ch] 0 +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push edi  +
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
sub esp 1Ch +
lea eax [ecx+1] +
mov [esp+28h+var_28] eax +
call sub_45B8D0  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov ebx eax +
call memcpy  +
mov eax [edi] +
mov edx [esp+28h+arg_0] +
mov byte ptr [ebx+esi] 0 +
mov [eax+edx*4] ebx +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov ecx [eax] +
test ecx ecx +
jz loc_45DC70  +
mov esi [eax+4] +
mov eax [eax+8] +
sub eax esi +
cmp edx eax +
jle loc_45DC69  +
sub esi ecx +
add edx esi +
lea edi [edx+edx] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] ecx +
call sub_45B950  +
add esi eax +
mov [ebx] eax +
add eax edi +
mov [ebx+4] esi +
mov [ebx+8] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edx 20h +
mov esi 20h +
cmovge esi edx +
mov [esp+10h+var_10] esi +
call sub_45B8D0  +
add esi eax +
mov [ebx+8] esi +
mov [ebx] eax +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push edi  +
mov edi eax +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_1C] edx +
mov edx ecx +
call sub_45DC30  +
mov eax [edi+4] +
mov esi [edi] +
lea ebx [eax-1] +
cmp ebx esi +
jb loc_45DD02  +
movzx eax byte ptr [ebx] +
sub ebx 1 +
mov [ebx+ebp+1] al +
mov esi [edi] +
cmp ebx esi +
jnb loc_45DCF2  +
mov eax [esp+28h+var_1C] +
mov [esp+28h+var_20] ebp +
mov [esp+28h+var_28] esi +
mov [esp+28h+var_24] eax +
call memcpy  +
add [edi+4] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_45DD30  +
***
push ebx  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_18] edx +
call strlen  +
mov esi eax +
mov edx eax +
mov eax ebx +
call sub_45DC30  +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
sub esp 44h +
lea ebx [esp+48h+var_29] +
mov [esp+48h+var_40] edx +
mov [esp+48h+var_44] offset unk_4963CC +
mov [esp+48h+var_48] ebx +
call sprintf  +
cmp byte ptr [esp+48h+var_29] 0 +
jz loc_45DDCF  +
mov edx ebx +
mov eax esi +
call sub_45DD60  +
add esp 44h +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 4 +
mov eax [eax] +
movzx ecx byte ptr [eax] +
cmp cl 2Dh +
jz loc_45DE60  +
cmp cl 2Bh +
jz loc_45DE50  +
movzx edx cl +
xor eax eax +
test ds:byte_495EE0[edx+edx] 4 +
jnz loc_45DE28  +
jmp loc_45DE45  +
mov ecx [ebx] +
lea eax [ecx+1] +
mov [ebx] eax +
movzx ecx byte ptr [ecx+1] +
movzx eax cl +
test ds:byte_495EE0[eax+eax] 4 +
jz loc_45DE40  +
test cl cl +
mov ds:byte_49F5A0 cl +
jz loc_45DE10  +
mov edx offset byte_49F5A0 +
mov eax esi +
call sub_45DD60  +
jmp loc_45DE10  +
mov eax 1 +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx] edx +
movzx ecx byte ptr [eax+1] +
jmp loc_45DDF8  +
mov edx offset byte_49F5A0 +
mov eax esi +
mov ds:byte_49F5A0 2Dh +
call sub_45DD60  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx ecx byte ptr [eax+1] +
jmp loc_45DDF8  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov eax [edx] +
cmp eax ecx +
jz loc_45DEC5  +
mov esi ecx +
sub esi eax +
mov eax ebx +
mov edx esi +
call sub_45DC30  +
mov edx [edi] +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edx +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi ebp +
push esi  +
push ebx  +
mov ebx edx +
sub esp 1Ch +
mov esi ebx +
call sub_45DB40  +
mov eax ebp +
call sub_45D8A0  +
test ebp 1 +
mov eax 54h +
jnz loc_45E18B  +
test edi 2 +
jnz loc_45E176  +
mov ecx eax +
xor edx edx +
shr ecx 2 +
test al 2 +
movs   +
jz loc_45DF20  +
movzx edx word ptr [esi] +
mov [edi] dx +
mov edx 2 +
test al 1 +
jz loc_45DF2B  +
movzx eax byte ptr [esi+edx] +
mov [edi+edx] al +
mov eax [ebx+24h] +
test eax eax +
jnz loc_45E0A8  +
mov eax [ebx+20h] +
xor esi esi +
test eax eax +
jle loc_45DF91  +
nop   +
mov eax [ebx+4] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+4] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_45B8D0  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+4] +
mov ecx [eax+esi*4] +
mov eax [ebp+4] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+20h] esi +
jg loc_45DF40  +
mov eax [ebx+18h] +
test eax eax +
jnz loc_45E163  +
mov eax [ebx+10h] +
xor esi esi +
test eax eax +
jle loc_45DFF6  +
mov eax [ebx+8] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+8] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_45B8D0  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+8] +
mov ecx [eax+esi*4] +
mov eax [ebp+8] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+10h] esi +
jg loc_45DFA5  +
mov eax [ebx+1Ch] +
test eax eax +
jnz loc_45E150  +
mov edi [ebx+14h] +
xor esi esi +
test edi edi +
jle loc_45E061  +
lea esi [esi+0] +
mov eax [ebx+0Ch] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [ebp+0Ch] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_45B8D0  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+0Ch] +
mov ecx [eax+esi*4] +
mov eax [ebp+0Ch] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+14h] esi +
jg loc_45E010  +
mov eax [ebx+44h] +
test eax eax +
jnz loc_45E0C0  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jz loc_45E144  +
mov [esp+28h+var_28] 0Ch +
call sub_45B8D0  +
mov [ebp+4Ch] eax +
mov edx [ebx+4Ch] +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax] 0 +
mov ecx [edx+4] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_45DE90  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_45B8D0  +
mov [ebp+4] eax +
jmp loc_45DF36  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_45B8D0  +
mov edx [ebx+44h] +
test edx edx +
mov [ebp+40h] eax +
jle loc_45E068  +
mov [esp+28h+var_1C] eax +
xor esi esi +
jmp loc_45E0E7  +
mov eax [ebp+40h] +
mov [esp+28h+var_1C] eax +
mov eax [ebx+40h] +
lea edi ds:0[esi*4] +
mov eax [eax+esi*4] +
mov [esp+28h+var_28] eax +
call strlen  +
add edi [esp+28h+var_1C] +
lea edx [eax+1] +
mov [esp+28h+var_28] edx +
mov [esp+28h+var_1C] edx +
call sub_45B8D0  +
mov edx [esp+28h+var_1C] +
mov [edi] eax +
mov eax [ebx+40h] +
mov ecx [eax+esi*4] +
mov eax [ebp+40h] +
mov eax [eax+esi*4] +
add esi 1 +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_24] ecx +
mov [esp+28h+var_28] eax +
call memcpy  +
cmp [ebx+44h] esi +
jg loc_45E0E0  +
mov ecx [ebx+4Ch] +
test ecx ecx +
jnz loc_45E073  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_45B8D0  +
mov [ebp+0Ch] eax +
jmp loc_45E001  +
shl eax 2 +
mov [esp+28h+var_28] eax +
call sub_45B8D0  +
mov [ebp+8] eax +
jmp loc_45DF9C  +
movzx edx word ptr [esi] +
add edi 2 +
add esi 2 +
sub eax 2 +
mov [edi-2] dx +
jmp loc_45DF08  +
movzx eax byte ptr [ebx] +
lea edi [ebp+1] +
lea esi [ebx+1] +
mov [ebp+0] al +
mov eax 53h +
jmp loc_45DEFC  +
***
jmp sub_45E1B0  +
***
push edi  +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+24h] +
cmp [ebx+20h] eax +
jl loc_45E1DF  +
test eax eax +
jnz loc_45E217  +
mov dword ptr [ebx+24h] 3 +
mov [esp+28h+var_28] 0Ch +
call sub_45B8D0  +
mov [ebx+4] eax +
lea eax [esi+1] +
mov [esp+28h+var_28] eax +
call sub_45B8D0  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] ebp +
mov [esp+28h+var_28] eax +
mov edi eax +
call memcpy  +
mov eax [ebx+20h] +
mov edx [ebx+4] +
mov byte ptr [edi+esi] 0 +
lea ecx [eax+1] +
mov [ebx+20h] ecx +
mov [edx+eax*4] edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea edx [eax+eax] +
mov [ebx+24h] edx +
mov edx [ebx+4] +
shl eax 3 +
mov [esp+28h+var_24] eax +
mov [esp+28h+var_28] edx +
call sub_45B950  +
mov [ebx+4] eax +
jmp loc_45E1DF  +
***
mov eax [esp+4] +
mov byte_476858 al +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
xor ebx ebx +
sub esp 1Ch +
mov eax [esp+30h] +
mov [esp] eax +
call strlen  +
mov [esp+0Ch] eax +
jmp loc_45E278  +
add ebx 1 +
cmp ebx 4Fh +
jz loc_45E2D0  +
lea esi [ebx+ebx*2] +
mov ebp ds:off_497104[esi*4] +
lea edi ds:0[esi*4] +
mov [esp] ebp +
call strlen  +
cmp [esp+0Ch] eax +
jnz loc_45E270  +
mov eax [esp+34h] +
xor eax ds:dword_497108[esi*4] +
test al 2 +
jnz loc_45E270  +
mov eax [esp+0Ch] +
mov [esp] ebp +
mov [esp+8] eax +
mov eax [esp+30h] +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_45E270  +
mov eax ds:off_497100[edi] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov ecx [esp+4] +
mov edx offset off_496E60 +
cmp ecx 0FFFFFFFFh +
jnz loc_45E2F4  +
jmp loc_45E300  +
cmp eax ecx +
jz loc_45E300  +
add edx 0Ch +
mov eax [edx+4] +
test eax eax +
jnz loc_45E2F0  +
retn   +
***
mov dword_47685C ecx +
mov eax ecx +
retn   +
***
push edi  +
push esi  +
mov esi 0FFFFFFFFh +
push ebx  +
mov ebx offset off_496E60 +
sub esp 10h +
mov edi [esp+20h] +
jmp loc_45E330  +
add ebx 0Ch +
mov esi [ebx+4] +
test esi esi +
jz loc_45E342  +
mov eax [ebx] +
mov [esp] edi +
mov [esp+4] eax +
call strcmp  +
test eax eax +
jnz loc_45E326  +
add esp 10h +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi offset a_ada_ +
push esi  +
push ebx  +
sub esp 2Ch +
mov esi [esp+38h+arg_0] +
mov eax [esp+38h+arg_0] +
cmps   +
setnbe cl  +
setb dl  +
add eax 5 +
cmp cl dl +
cmovnz eax [esp+38h+arg_0] +
mov [esp+38h+arg_0] eax +
movzx eax byte ptr [eax] +
test ds:byte_495EE0[eax+eax] 8 +
jz loc_45E5A7  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] eax +
call strlen  +
add eax 8 +
mov [esp+38h+var_38] eax +
call sub_45B8D0  +
mov ebx [esp+38h+arg_0] +
mov [esp+38h+var_1C] eax +
mov esi eax +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_495EE0[edx+edx] 8 +
jnz loc_45E4F4  +
cmp al 4Fh +
jnz loc_45E5A7  +
mov edx 4 +
mov edi offset aOabs +
mov [esp+38h+var_20] esi +
xor ebp ebp +
mov esi edx +
jmp loc_45E3FD  +
add ebp 1 +
mov edi ds:off_496C60[ebp*8] +
test edi edi +
jz loc_45E5A7  +
mov [esp+38h+var_38] edi +
call strlen  +
mov esi eax +
mov [esp+38h+var_30] esi +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] ebx +
call strncmp  +
test eax eax +
jnz loc_45E3E1  +
mov edx esi +
mov esi [esp+38h+var_20] +
add ebx edx +
mov edx ds:off_496C64[ebp*8] +
lea ebp [esi+1] +
mov [esp+38h+var_38] edx +
mov [esp+38h+var_20] edx +
call strlen  +
mov edx [esp+38h+var_20] +
mov byte ptr [esi] 22h +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_34] edx +
mov edi eax +
add edi ebp +
mov [esp+38h+var_30] eax +
lea esi [edi+1] +
call memcpy  +
mov byte ptr [edi] 22h +
movzx eax byte ptr [ebx] +
cmp al 54h +
jz loc_45E583  +
cmp al 45h +
jnz loc_45E523  +
cmp byte ptr [ebx+1] 0 +
jz loc_45E5A7  +
cmp al 4Eh +
mov edx esi +
setz byte ptr [esp+38h+var_20]  +
mov edi ebx +
cmp byte ptr [esp+38h+var_20] 0 +
jz loc_45E54E  +
cmp byte ptr [ebx+1] 0 +
jz loc_45E5A7  +
cmp al 58h +
jz loc_45E55E  +
cmp al 53h +
jz loc_45E5F0  +
cmp al 44h +
nop   +
jz loc_45E770  +
cmp al 5Fh +
jnz loc_45E87C  +
movzx eax byte ptr [edi+1] +
cmp al 5Fh +
jnz loc_45E723  +
movzx eax byte ptr [edi+2] +
lea ebx [edi+2] +
movzx ecx al +
test ds:byte_495EE0[ecx+ecx] 4 +
jnz loc_45E7A6  +
cmp al 5Fh +
jz loc_45E650  +
mov byte ptr [edx] 2Eh +
movzx eax byte ptr [ebx] +
lea esi [edx+1] +
movzx edx al +
test ds:byte_495EE0[edx+edx] 8 +
jz loc_45E3C5  +
add esi 1 +
add ebx 1 +
mov [esi-1] al +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_495EE0[edx+edx] 0Ch +
jnz loc_45E4F4  +
cmp al 5Fh +
jnz loc_45E453  +
movzx edx byte ptr [ebx+1] +
test ds:byte_495EE0[edx+edx] 0Ch +
jnz loc_45E4F4  +
cmp al 4Eh +
mov edx esi +
setz byte ptr [esp+38h+var_20]  +
cmp al 50h +
setz cl  +
mov edi ebx +
or cl byte ptr [esp+38h+var_20] +
jz loc_45E54E  +
cmp byte ptr [ebx+1] 0 +
jz loc_45E7F7  +
cmp byte ptr [esp+38h+var_20] 0 +
jnz loc_45E483  +
cmp al 53h +
jz loc_45E483  +
cmp al 58h +
jnz loc_45E495  +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
cmp al 6Eh +
jnz loc_45E707  +
lea esi [esi+0] +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 62h +
jz loc_45E570  +
cmp al 6Eh +
jz loc_45E570  +
jmp loc_45E495  +
cmp byte ptr [ebx+1] 4Bh +
jnz loc_45E46D  +
movzx eax byte ptr [ebx+2] +
cmp al 42h +
jz loc_45E715  +
cmp al 5Fh +
jnz loc_45E5A7  +
cmp byte ptr [ebx+3] 5Fh +
jz loc_45E6E7  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] eax +
call strlen  +
add eax 3 +
mov [esp+38h+var_38] eax +
call sub_45B8D0  +
mov ebx eax +
mov eax [esp+38h+arg_0] +
cmp byte ptr [eax] 3Ch +
jz loc_45E6D1  +
mov eax [esp+38h+arg_0] +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_34] offset aS_14 +
mov [esp+38h+var_30] eax +
call sprintf  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edi+1] +
test al al +
jz loc_45E5A7  +
movzx edx byte ptr [edi+2] +
test dl dl +
jz loc_45E605  +
cmp dl 5Fh +
jnz loc_45E5A7  +
cmp al 4Fh +
jz loc_45E7D6  +
lea esi [esi+0] +
jle loc_45E6F5  +
cmp al 52h +
jz loc_45E7E0  +
cmp al 57h +
jnz loc_45E5A7  +
mov ebp offset aWrite +
mov [esp+38h+var_34] ebp +
lea ebx [edi+2] +
mov [esp+38h+var_38] esi +
call strcpy  +
mov [esp+38h+var_38] ebp +
call strlen  +
lea edx [esi+eax] +
movzx eax byte ptr [edi+2] +
mov edi ebx +
jmp loc_45E4A6  +
cmp byte ptr [edi+3] 5Fh +
jz loc_45E4DA  +
mov ebp edx +
mov eax 6 +
mov edi offset a_elabb +
xor esi esi +
jmp loc_45E68A  +
add esi 1 +
mov edi ds:off_496BA0[esi*8] +
test edi edi +
jz loc_45E5A7  +
mov [esp+38h+var_38] edi +
call strlen  +
mov [esp+38h+var_30] eax +
mov [esp+38h+var_34] edi +
mov [esp+38h+var_38] ebx +
call strncmp  +
test eax eax +
jnz loc_45E670  +
mov esi ds:off_496BA4[esi*8] +
mov [esp+38h+var_38] esi +
call strlen  +
mov [esp+38h+var_38] ebp +
mov [esp+38h+var_34] esi +
mov [esp+38h+var_30] eax +
mov ebx eax +
call memcpy  +
add ebp ebx +
mov byte ptr [ebp+0] 0 +
mov eax [esp+38h+var_1C] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+38h+var_38] ebx +
mov [esp+38h+var_34] eax +
call strcpy  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov byte ptr [esi] 2Eh +
add ebx 4 +
add esi 1 +
jmp loc_45E3B1  +
cmp al 49h +
jnz loc_45E5A7  +
mov ebp offset aInput +
jmp loc_45E627  +
cmp al 62h +
jz loc_45E570  +
nop   +
jmp loc_45E495  +
cmp byte ptr [ebx+3] 0 +
jnz loc_45E5A7  +
mov ebp esi +
jmp loc_45E6C1  +
cmp al 45h +
mov ebp edx +
jnz loc_45E7EA  +
movzx edx byte ptr [edi+2] +
lea eax [edi+2] +
movzx ecx dl +
test ds:byte_495EE0[ecx+ecx] 4 +
jz loc_45E754  +
add eax 1 +
movzx edx byte ptr [eax] +
movzx ecx dl +
test ds:byte_495EE0[ecx+ecx] 4 +
jnz loc_45E741  +
cmp dl 73h +
jnz loc_45E5A7  +
cmp byte ptr [eax+1] 0 +
jnz loc_45E5A7  +
jmp loc_45E6C1  +
movzx eax byte ptr [edi+1] +
cmp al 41h +
jz loc_45E86C  +
cmp al 46h +
mov ebx offset a_finalize +
jnz loc_45E5A7  +
mov [esp+38h+var_34] ebx +
mov [esp+38h+var_38] esi +
call strcpy  +
mov [esp+38h+var_38] ebx +
call strlen  +
add eax esi +
mov ebp eax +
jmp loc_45E6C1  +
mov ebp edx +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
movzx edx al +
test ds:byte_495EE0[edx+edx] 4 +
jnz loc_45E7D2  +
cmp al 5Fh +
jnz loc_45E805  +
movzx eax byte ptr [edi+1] +
test ds:byte_495EE0[eax+eax] 4 +
jz loc_45E5A7  +
mov ebx edi +
jmp loc_45E7A8  +
mov ebp offset aOutput +
jmp loc_45E627  +
mov ebp offset aRead +
jmp loc_45E627  +
cmp al 42h +
jnz loc_45E5A7  +
jmp loc_45E72D  +
mov ebp esi +
lea esi [esi+0] +
jmp loc_45E6C1  +
cmp al 58h +
jnz loc_45E822  +
movzx eax byte ptr [ebx+2] +
lea edi [ebx+2] +
cmp al 6Eh +
jnz loc_45E876  +
add edi 1 +
movzx eax byte ptr [edi] +
cmp al 62h +
jz loc_45E814  +
cmp al 6Eh +
jz loc_45E814  +
cmp al 2Eh +
jnz loc_45E85F  +
movzx eax byte ptr [edi+1] +
test ds:byte_495EE0[eax+eax] 4 +
jz loc_45E5A7  +
movzx eax byte ptr [edi+2] +
lea edx [edi+2] +
movzx ecx al +
test ds:byte_495EE0[ecx+ecx] 4 +
jz loc_45E85F  +
add edx 1 +
movzx eax byte ptr [edx] +
movzx ecx al +
test ds:byte_495EE0[ecx+ecx] 4 +
jnz loc_45E84C  +
test al al +
jnz loc_45E5A7  +
jmp loc_45E6C1  +
mov ebx offset a_adjust +
jmp loc_45E789  +
cmp al 62h +
jz loc_45E814  +
jmp loc_45E822  +
mov ebp edx +
nop   +
jmp loc_45E822  +
***
push esi  +
push ebx  +
sub esp 7Ch +
mov edx dword_47685C +
mov esi [esp+7Ch+arg_0] +
mov ebp [esp+7Ch+arg_4] +
cmp edx 0FFFFFFFFh +
jz loc_45E960  +
lea ebx [esp+7Ch+var_60] +
xor eax eax +
mov ecx 15h +
mov edi ebx +
test ebp 1FF04h +
stos   +
jz loc_45E911  +
mov [esp+7Ch+var_60] ebp +
mov ecx ebp +
test [esp+7Ch+var_60] 4100h +
jnz loc_45E929  +
test cl 4 +
jnz loc_45E970  +
test ch 80h +
jnz loc_45E985  +
and ecx 10000h +
jnz loc_45E944  +
mov edx esi +
mov eax ebx +
call sub_462D10  +
mov esi eax +
mov eax ebx +
call sub_45D8A0  +
mov eax esi +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
and edx 1FF04h +
mov ecx edx +
or ecx ebp +
mov [esp+7Ch+var_60] ecx +
test [esp+7Ch+var_60] 4100h +
jz loc_45E8DB  +
mov [esp+7Ch+var_78] ecx +
mov [esp+7Ch+var_7C] esi +
call sub_4700B0  +
test eax eax +
jnz loc_45E909  +
mov ecx [esp+7Ch+var_60] +
test ch 40h +
jz loc_45E8DB  +
jmp loc_45E909  +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] esi +
call sub_471DE0  +
test eax eax +
jz loc_45E8F5  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+7Ch+var_7C] esi +
call sub_45A840  +
add esp 7Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+7Ch+var_7C] esi +
call sub_4700F0  +
test eax eax +
jnz loc_45E909  +
mov ecx [esp+7Ch+var_60] +
jmp loc_45E8E4  +
mov [esp+7Ch+var_78] ebp +
mov [esp+7Ch+var_7C] esi +
call sub_45E350  +
jmp loc_45E909  +
***
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 4Ch +
mov edx [edx] +
mov ecx [esp+54h+arg_0] +
movzx eax byte ptr [edx] +
cmp al 59h +
jz loc_45EA90  +
cmp ecx 3 +
jz loc_45EAF5  +
cmp ecx 5 +
jz loc_45E9F8  +
cmp ecx 4 +
nop   +
jz loc_45EA57  +
cmp ecx 6 +
jz loc_45EC40  +
lea edx [ecx-1] +
cmp edx 1 +
jbe loc_45EB98  +
mov eax 1 +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Dh +
jz loc_45ED36  +
mov edx offset asc_49641A +
mov ecx 1 +
mov eax esi +
call sub_45DCA0  +
mov eax ebx +
call sub_45D770  +
xor edx edx +
test eax eax +
jle loc_45EA4D  +
mov byte ptr [esp+54h+var_34] al +
mov ecx 1 +
mov eax esi +
lea edx [esp+54h+var_34] +
mov byte ptr [esp+54h+var_34+1] 0 +
call sub_45DCA0  +
mov edx offset asc_49641A +
mov ecx 1 +
mov eax esi +
call sub_45DCA0  +
mov edx 1 +
add esp 4Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_45D770  +
test eax eax +
mov edx eax +
jz loc_45EDD2  +
xor eax eax +
cmp edx 1 +
jnz loc_45E9F0  +
mov eax esi +
mov ecx 4 +
mov edx offset aTrue_0 +
call sub_45DCA0  +
mov eax 1 +
jmp loc_45E9F0  +
add edx 1 +
mov eax ebx +
mov [ebx] edx +
call sub_45D7C0  +
cmp eax 0FFFFFFFFh +
mov ebp eax +
jz loc_45EE04  +
mov edx [edi+40h] +
test edx edx +
jz loc_45EAB7  +
cmp eax [edi+44h] +
jge loc_45EE04  +
mov eax ebx +
call sub_45D7C0  +
cmp eax 0FFFFFFFFh +
jz loc_45EE04  +
mov eax [edi+40h] +
test eax eax +
jz loc_45EE0E  +
mov edx [eax+ebp*4] +
test edx edx +
jz loc_45E9EB  +
cmp byte ptr [edx] 0 +
jz loc_45E9EB  +
mov eax esi +
call sub_45DD60  +
lea esi [esi+0] +
jmp loc_45E9EB  +
cmp al 45h +
jz loc_45EDED  +
cmp al 4Bh +
nop   +
jz loc_45ED00  +
cmp al 51h +
jz loc_45ED00  +
cmp al 5Fh +
jz loc_45EDB0  +
cmp al 6Dh +
mov [esp+54h+var_3C] 1 +
jz loc_45EE21  +
mov eax ebx +
mov edi 1 +
call sub_45D770  +
mov ebp eax +
xor eax eax +
cmp ebp 0FFFFFFFFh +
jz loc_45E9F0  +
lea edx [esp+54h+var_34] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_4C] ebp +
mov [esp+54h+var_50] offset aD +
mov [esp+54h+var_38] edx +
call sprintf  +
mov edx [esp+54h+var_38] +
cmp byte ptr [esp+54h+var_34] 0 +
jnz loc_45ED4C  +
test edi edi +
jnz loc_45EB77  +
cmp ebp 9 +
jle loc_45E9EB  +
mov eax [esp+54h+var_3C] +
test eax eax +
jnz loc_45E9EB  +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_45E9EB  +
add eax 1 +
mov [ebx] eax +
jmp loc_45E9EB  +
cmp al 51h +
jz loc_45ED00  +
mov eax ebx +
mov [esp+54h+var_3C] ecx +
call sub_45D770  +
cmp eax 0FFFFFFFFh +
mov ebp eax +
jz loc_45EE04  +
test eax eax +
mov ecx [esp+54h+var_3C] +
jz loc_45ED20  +
lea eax [eax+1] +
mov [esp+54h+var_54] eax +
mov [esp+54h+var_38] ecx +
call sub_45B8D0  +
mov [esp+54h+var_4C] ebp +
mov edx eax +
mov [esp+54h+var_3C] eax +
mov eax [ebx] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] eax +
call strncpy  +
mov edx [esp+54h+var_3C] +
mov byte ptr [edx+ebp] 0 +
mov eax [edi] +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] eax +
call sub_45E890  +
mov ecx [esp+54h+var_38] +
cmp ecx 1 +
mov edi eax +
jz loc_45EE84  +
test edi edi +
jz loc_45EE5F  +
cmp byte ptr [edi] 0 +
jnz loc_45EE3A  +
mov [esp+54h+var_54] edi +
call free  +
mov eax [esp+54h+var_3C] +
mov [esp+54h+var_54] eax +
call free  +
add [ebx] ebp +
mov eax 1 +
jmp loc_45E9F0  +
cmp al 45h +
jz loc_45EE48  +
cmp al 6Dh +
jnz loc_45EC87  +
mov edx offset asc_496415 +
mov eax esi +
mov ecx 1 +
call sub_45DCA0  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
jmp loc_45EC87  +
mov ecx 1 +
mov eax esi +
call sub_45DCA0  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
movzx ecx al +
test ds:byte_495EE0[ecx+ecx] 4 +
jnz loc_45EC70  +
cmp al 2Eh +
jz loc_45ED58  +
mov eax [ebx] +
movzx eax byte ptr [eax] +
cmp al 65h +
jnz loc_45E9EB  +
mov edx offset aE +
mov eax esi +
mov ecx 1 +
call sub_45DCA0  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
test ds:byte_495EE0[eax+eax] 4 +
jz loc_45E9EB  +
mov ecx 1 +
mov eax esi +
call sub_45DCA0  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
test ds:byte_495EE0[eax+eax] 4 +
jnz loc_45ECD3  +
jmp loc_45E9EB  +
mov [esp+54h+var_50] 1 +
mov ecx esi +
mov edx ebx +
mov [esp+54h+var_54] 0 +
mov eax edi +
call sub_45F670  +
jmp loc_45E9F0  +
mov ecx 1 +
mov edx offset a0 +
mov eax esi +
call sub_45DCA0  +
jmp loc_45EC33  +
mov cl 1 +
mov edx offset asc_496415 +
mov eax esi +
call sub_45DCA0  +
add dword ptr [ebx] 1 +
jmp loc_45EA00  +
mov eax esi +
call sub_45DD60  +
jmp loc_45EB6A  +
mov ecx 1 +
mov edx offset a__1 +
mov eax esi +
call sub_45DCA0  +
mov eax [ebx] +
lea edx [eax+1] +
mov [ebx] edx +
movzx eax byte ptr [eax+1] +
movzx ecx al +
test ds:byte_495EE0[ecx+ecx] 4 +
jz loc_45ECA1  +
mov ecx 1 +
mov eax esi +
call sub_45DCA0  +
mov ecx [ebx] +
lea edx [ecx+1] +
mov [ebx] edx +
movzx eax byte ptr [ecx+1] +
movzx ecx al +
test ds:byte_495EE0[ecx+ecx] 4 +
jnz loc_45ED85  +
jmp loc_45ECA1  +
cmp byte ptr [edx+1] 6Dh +
jz loc_45EE95  +
mov eax ebx +
xor edi edi +
call sub_45D7C0  +
mov [esp+54h+var_3C] 1 +
mov ebp eax +
jmp loc_45EB34  +
mov eax esi +
mov ecx 5 +
mov edx offset aFalse_0 +
call sub_45DCA0  +
mov eax 1 +
jmp loc_45E9F0  +
mov [esp+54h+var_54] 3 +
mov ecx esi +
mov edx ebx +
mov eax edi +
call sub_45EEC0  +
jmp loc_45E9F0  +
mov eax 0FFFFFFFFh +
jmp loc_45E9F0  +
mov eax esi +
mov edx ebp +
call sub_45DDA0  +
mov eax 1 +
jmp loc_45E9F0  +
mov ecx 1 +
mov edx offset asc_496415 +
mov eax esi +
call sub_45DCA0  +
add dword ptr [ebx] 1 +
jmp loc_45EB26  +
mov edx edi +
mov eax esi +
call sub_45DD60  +
jmp loc_45EC1F  +
mov [esp+54h+var_54] 6 +
mov ecx esi +
mov edx ebx +
mov eax edi +
call sub_45EEC0  +
jmp loc_45E9F0  +
mov eax [esp+54h+var_3C] +
test eax eax +
jz loc_45EC27  +
cmp byte ptr [eax] 0 +
nop   +
jz loc_45EC27  +
mov edx eax +
mov eax esi +
call sub_45DD60  +
jmp loc_45EC27  +
mov edx offset asc_49642D +
mov eax esi +
call sub_45DCA0  +
jmp loc_45EC0E  +
mov ecx 1 +
mov edx offset asc_496415 +
mov eax esi +
call sub_45DCA0  +
add dword ptr [ebx] 2 +
mov [esp+54h+var_3C] 0 +
jmp loc_45EB26  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
mov [esp+2Ch+var_10] eax +
mov eax ecx +
mov [esp+2Ch+var_14] edx +
mov edx offset asc_49642F +
mov [esp+2Ch+var_18] ecx +
mov ecx 1 +
call sub_45DCA0  +
mov edx [ebx] +
mov [esp+2Ch+var_20] edx +
add edx 1 +
mov [esp+2Ch+var_1C] edx +
mov ecx [esp+2Ch+var_1C] +
mov [ebx] edx +
mov ebx 1 +
xor edx edx +
mov eax ebx +
movzx ecx byte ptr [ecx] +
cmp cl 57h +
jz loc_45EFF5  +
nop   +
test cl cl +
jz loc_45F028  +
test edx edx +
jz loc_45EFBC  +
mov eax [esp+2Ch+var_1C] +
mov esi offset off_497100 +
xor ebx ebx +
mov [esp+2Ch+var_2C] eax +
call strlen  +
mov [esp+2Ch+var_20] eax +
jmp loc_45EF4F  +
add ebx 1 +
add esi 0Ch +
cmp ebx 4Fh +
jz loc_45F028  +
mov ebp [esi] +
mov [esp+2Ch+var_2C] ebp +
call strlen  +
cmp [esp+2Ch+var_20] eax +
mov edi eax +
jb loc_45EF40  +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_2C] ebp +
mov [esp+2Ch+var_28] eax +
call memcmp  +
test eax eax +
jnz loc_45EF40  +
mov eax [esp+2Ch+var_18] +
mov edx offset asc_496431 +
mov ecx 1 +
call sub_45DCA0  +
lea eax [ebx+ebx*2] +
mov edx ds:off_497104[eax*4] +
test edx edx +
jz loc_45EFA3  +
cmp byte ptr [edx] 0 +
jnz loc_45F034  +
mov eax [esp+2Ch+var_18] +
mov ecx 1 +
mov edx offset asc_496431 +
call sub_45DCA0  +
mov eax [esp+2Ch+var_14] +
add [eax] edi +
mov eax [esp+2Ch+arg_0] +
mov esi [esp+2Ch+var_14] +
mov ecx [esp+2Ch+var_18] +
mov [esp+2Ch+var_2C] eax +
mov eax [esp+2Ch+var_10] +
mov edx esi +
call sub_45E9A0  +
test eax eax +
jz loc_45F01B  +
mov edx [esi] +
mov [esp+2Ch+var_1C] edx +
mov ecx [esp+2Ch+var_1C] +
mov edx 1 +
movzx ecx byte ptr [ecx] +
cmp cl 57h +
jnz loc_45EF10  +
mov ebx eax +
mov eax [esp+2Ch+var_18] +
mov ecx 1 +
mov edx offset asc_496433 +
call sub_45DCA0  +
mov eax [esp+2Ch+var_14] +
add dword ptr [eax] 1 +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx eax +
mov eax [esp+2Ch+var_14] +
mov eax [eax] +
cmp byte ptr [eax] 57h +
jz loc_45EFF7  +
add esp 2Ch +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
call sub_45DD60  +
jmp loc_45EFA3  +
***
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov [esp+58h+var_40] eax +
mov eax [edx] +
mov [esp+58h+var_4C] ecx +
mov ecx [esp+58h+arg_4] +
lea edx [eax+1] +
test ecx ecx +
mov [ebp+0] edx +
jz loc_45F1A5  +
cmp byte ptr [eax+1] 7Ah +
jz loc_45F121  +
mov eax ebp +
call sub_45D770  +
test eax eax +
mov ebx eax +
mov [esp+58h+var_34] eax +
jle loc_45F2C4  +
mov edx [ebp+0] +
mov [esp+58h+var_58] edx +
mov [esp+58h+var_48] edx +
call strlen  +
cmp ebx eax +
jg loc_45F2C4  +
mov eax [esp+58h+var_40] +
mov edx [esp+58h+var_48] +
test byte ptr [eax] 4 +
jz loc_45F0CC  +
mov edi offset aJarray1z +
mov ecx 8 +
mov esi edx +
cmps   +
jz loc_45F5AC  +
mov eax [esp+58h+var_4C] +
mov ecx ebx +
xor esi esi +
call sub_45DCA0  +
mov eax [esp+58h+arg_0] +
mov ecx [esp+58h+var_34] +
mov edx [ebp+0] +
test eax eax +
jz loc_45F0F0  +
test ecx ecx +
jnz loc_45F5BE  +
add ecx edx +
test esi esi +
mov [ebp+0] ecx +
jz loc_45F2A3  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_45D810  +
test eax eax +
jz loc_45F2C4  +
mov eax [esp+58h+var_34] +
mov [esp+58h+var_3C] 1 +
jmp loc_45F1DE  +
add eax 3 +
mov [ebp+0] eax +
mov eax ebp +
call sub_45D7C0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_45F2C4  +
mov eax [esp+58h+var_40] +
mov edx [eax+40h] +
test edx edx +
jz loc_45F14D  +
cmp ebx [eax+44h] +
jge loc_45F2C4  +
mov eax ebp +
call sub_45D7C0  +
cmp eax 0FFFFFFFFh +
jz loc_45F2C4  +
mov eax [esp+58h+var_40] +
mov eax [eax+40h] +
test eax eax +
jz loc_45F642  +
mov edx [eax+ebx*4] +
test edx edx +
jz loc_45F181  +
cmp byte ptr [edx] 0 +
jz loc_45F181  +
mov eax [esp+58h+var_4C] +
call sub_45DD60  +
mov eax [esp+58h+arg_0] +
test eax eax +
jz loc_45F1A5  +
mov eax [esp+58h+var_40] +
mov eax [eax+40h] +
mov edx [eax+ebx*4] +
test edx edx +
jz loc_45F1A5  +
cmp byte ptr [edx] 0 +
jz loc_45F1A5  +
mov eax [esp+58h+arg_0] +
call sub_45DD60  +
mov eax [esp+58h+var_4C] +
mov edx (offset asc_496444+2) +
call sub_45DD60  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_45D810  +
test eax eax +
jz loc_45F2C4  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_45F530  +
mov eax [esp+58h+var_34] +
mov [esp+58h+var_3C] 0 +
test eax eax +
jle loc_45F260  +
mov edx [ebp+0] +
xor ebx ebx +
mov esi [esp+58h+var_40] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jz loc_45F39F  +
cmp al 7Ah +
jz loc_45F3F1  +
mov edx ebp +
mov eax esi +
lea ecx [esp+58h+var_30] +
call sub_45FAD0  +
mov edx [esp+58h+var_30] +
test edx edx +
mov edi eax +
jz loc_45F235  +
mov [esp+58h+var_58] edx +
call free  +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_30] 0 +
test edi edi +
jz loc_45F260  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_45F2D0  +
mov ecx [esp+58h+var_4C] +
mov edx ebp +
mov eax esi +
mov [esp+58h+var_58] edi +
call sub_45E9A0  +
mov edi eax +
test edi edi +
jnz loc_45F376  +
nop   +
xor edi edi +
mov ebx [esp+58h+var_3C] +
test ebx ebx +
jnz loc_45F580  +
mov eax [esp+58h+var_4C] +
mov eax [eax+4] +
cmp byte ptr [eax-1] 3Eh +
jz loc_45F5D3  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_496444 +
call sub_45DD60  +
mov ecx [esp+58h+arg_4] +
test ecx ecx +
jnz loc_45F4E5  +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+58h+var_4C] +
mov edx (offset asc_496444+2) +
call sub_45DD60  +
lea edx [esp+58h+var_34] +
mov eax ebp +
call sub_45D810  +
test eax eax +
jnz loc_45F1D2  +
add esp 4Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+58h+var_58] edi +
lea ecx [esp+58h+var_24] +
mov edx ebp +
mov eax esi +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_24] 0 +
call sub_45E9A0  +
test eax eax +
mov edi eax +
jz loc_45F593  +
mov eax [esi+40h] +
mov edx [esp+58h+var_20] +
sub edx [esp+58h+var_24] +
lea ecx [eax+ebx*4] +
lea eax [edx+1] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_44] ecx +
mov [esp+58h+var_48] edx +
call sub_45B8D0  +
mov ecx [esp+58h+var_44] +
mov edx [esp+58h+var_48] +
mov [ecx] eax +
mov eax [esi+40h] +
mov ecx [esp+58h+var_24] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] edx +
mov [esp+58h+var_54] ecx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov edx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+edx] 0 +
mov eax [esp+58h+var_4C] +
lea edx [esp+58h+var_24] +
mov ecx [esp+58h+var_20] +
call sub_45DE90  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_45F376  +
mov [esp+58h+var_58] eax +
call free  +
add ebx 1 +
cmp [esp+58h+var_34] ebx +
jle loc_45F262  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_49643E +
call sub_45DD60  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jnz loc_45F1F6  +
add edx 1 +
mov eax esi +
mov [ebp+0] edx +
lea ecx [esp+58h+var_30] +
mov edx ebp +
call sub_45FAD0  +
test eax eax +
mov edi eax +
jnz loc_45F470  +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_45F257  +
mov [esp+58h+var_58] eax +
call free  +
test edi edi +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_30] 0 +
jnz loc_45F376  +
jmp loc_45F260  +
mov ecx [esp+58h+var_4C] +
add edx 1 +
mov eax esi +
mov [ebp+0] edx +
mov edx ebp +
call sub_461290  +
test eax eax +
mov edi eax +
jz loc_45F260  +
mov eax ebp +
call sub_45D770  +
test eax eax +
mov [esp+58h+var_48] eax +
jle loc_45F376  +
mov eax [ebp+0] +
mov [esp+58h+var_58] eax +
call strlen  +
cmp [esp+58h+var_48] eax +
jg loc_45F376  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_496431 +
call sub_45DD60  +
mov eax [esp+58h+var_4C] +
mov edx [ebp+0] +
mov ecx [esp+58h+var_48] +
call sub_45DCA0  +
mov eax [esp+58h+arg_4] +
test eax eax +
jz loc_45F5E6  +
mov eax [esp+58h+var_48] +
add [ebp+0] eax +
jmp loc_45F376  +
mov eax [esp+58h+var_4C] +
lea edx [esp+58h+var_30] +
mov ecx [esp+58h+var_2C] +
call sub_45DE90  +
mov eax [esp+58h+arg_4] +
test eax eax +
jnz loc_45F3BC  +
mov eax [esi+40h] +
mov edx [esp+58h+var_2C] +
sub edx [esp+58h+var_30] +
lea ecx [eax+ebx*4] +
lea eax [edx+1] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_44] ecx +
mov [esp+58h+var_48] edx +
call sub_45B8D0  +
mov ecx [esp+58h+var_44] +
mov edx [esp+58h+var_48] +
mov [ecx] eax +
mov eax [esi+40h] +
mov ecx [esp+58h+var_30] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] edx +
mov [esp+58h+var_54] ecx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov edx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+edx] 0 +
jmp loc_45F3BC  +
mov edx [esp+58h+arg_8] +
test edx edx +
jz loc_45F299  +
mov ebp [esp+58h+var_40] +
mov eax ebp +
call sub_45D960  +
xor ecx ecx +
mov esi eax +
mov eax [esp+58h+var_4C] +
mov ebx [eax+4] +
mov edx [eax] +
mov [esp+58h+var_58] esi +
mov eax ebx +
sub eax edx +
cmp edx ebx +
cmovnz ecx eax +
mov eax ebp +
add eax 0Ch +
call sub_45DBF0  +
add esp 4Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+58h+var_34] +
shl eax 2 +
mov [esp+58h+var_58] eax +
call sub_45B8D0  +
mov ecx [esp+58h+var_34] +
mov esi [esp+58h+var_40] +
test ecx ecx +
mov [esi+44h] ecx +
mov [esi+40h] eax +
jle loc_45F635  +
xor edx edx +
mov ebx esi +
jmp loc_45F563  +
mov eax [ebx+40h] +
mov dword ptr [eax+edx*4] 0 +
add edx 1 +
cmp edx ecx +
jnz loc_45F560  +
mov [esp+58h+var_3C] 0 +
jmp loc_45F1E2  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_496441 +
call sub_45DD60  +
jmp loc_45F28D  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_45F260  +
mov [esp+58h+var_58] eax +
call free  +
jmp loc_45F260  +
cmp [esp+58h+arg_0] 0 +
mov ecx ebx +
mov esi 1 +
jz loc_45F0F0  +
mov eax [esp+58h+arg_0] +
call sub_45DCA0  +
mov edx [ebp+0] +
mov ecx [esp+58h+var_34] +
jmp loc_45F0F0  +
mov eax [esp+58h+var_4C] +
mov edx offset asc_496431 +
call sub_45DD60  +
jmp loc_45F27F  +
mov eax [esi+40h] +
lea edx [eax+ebx*4] +
mov eax [esp+58h+var_48] +
mov [esp+58h+var_44] edx +
add eax 1 +
mov [esp+58h+var_58] eax +
call sub_45B8D0  +
mov edx [esp+58h+var_44] +
mov ecx [esp+58h+var_48] +
mov [edx] eax +
mov eax [esi+40h] +
mov edx [ebp+0] +
mov eax [eax+ebx*4] +
mov [esp+58h+var_50] ecx +
mov [esp+58h+var_54] edx +
mov [esp+58h+var_58] eax +
call memcpy  +
mov eax [esi+40h] +
mov ecx [esp+58h+var_48] +
mov eax [eax+ebx*4] +
mov byte ptr [eax+ecx] 0 +
jmp loc_45F460  +
mov [esp+58h+var_3C] 0 +
jmp loc_45F260  +
mov eax [esp+58h+var_4C] +
mov edx ebx +
call sub_45DDA0  +
mov eax [esp+58h+arg_0] +
test eax eax +
jz loc_45F1A5  +
mov eax [esp+58h+arg_0] +
mov edx ebx +
call sub_45DDA0  +
jmp loc_45F1A5  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 4Ch +
mov [esp+58h+var_40] ecx +
call sub_45D960  +
mov ecx [esp+58h+arg_0] +
test ecx ecx +
mov [esp+58h+var_3C] eax +
jz loc_45F6A2  +
test byte ptr [esi+28h] 1 +
jz loc_45F944  +
mov [esp+58h+arg_0] 1 +
mov eax [ebp+0] +
mov [esp+58h+var_28] 0 +
mov [esp+58h+var_2C] 0 +
mov [esp+58h+var_30] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_24] 0 +
cmp byte ptr [eax] 4Bh +
jz loc_45FA6E  +
movzx edx byte ptr [eax+1] +
cmp dl 31h +
jl loc_45FA44  +
cmp dl 39h +
jle loc_45F915  +
cmp dl 5Fh +
jnz loc_45FA44  +
add eax 1 +
mov [ebp+0] eax +
mov eax ebp +
call sub_45D7C0  +
cmp eax 0FFFFFFFFh +
mov ebx eax +
jz loc_45FA44  +
mov [esp+58h+var_4C] 1 +
jmp loc_45F7C3  +
cmp al 74h +
jz loc_45F7F7  +
cmp al 4Bh +
jz loc_45F9E6  +
test dword ptr [esi] 2000h +
jnz loc_45F960  +
test ecx ecx +
jz loc_45F762  +
mov [esp+58h+var_58] ecx +
call free  +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_24] 0 +
lea ecx [esp+58h+var_24] +
mov edx ebp +
mov eax esi +
call sub_45FAD0  +
test eax eax +
mov [esp+58h+var_4C] eax +
jz loc_45F827  +
mov ecx [esp+58h+var_20] +
lea edx [esp+58h+var_24] +
lea eax [esp+58h+var_30] +
call sub_45DE90  +
mov eax [esp+58h+var_2C] +
xor ecx ecx +
mov edx [esp+58h+var_30] +
mov edi eax +
sub edi edx +
cmp edx eax +
cmovnz ecx edi +
mov eax esi +
call sub_45D9D0  +
test ebx ebx +
jle loc_45F7C3  +
test byte ptr [esi] 4 +
mov eax offset asc_496448 +
mov edx offset a__1 +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_45DD60  +
sub ebx 1 +
lea eax [ebx+1] +
test eax eax +
jle loc_45F82F  +
mov ecx [esp+58h+var_24] +
mov edx [ebp+0] +
mov [esp+58h+var_20] ecx +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jnz loc_45F722  +
lea edi [edx+1] +
mov [ebp+0] edi +
movzx eax byte ptr [edx+1] +
mov edx edi +
cmp al 74h +
jnz loc_45F72A  +
lea eax [esp+58h+var_24] +
mov edx ebp +
mov [esp+58h+var_58] eax +
lea ecx [esp+58h+var_30] +
mov eax esi +
mov [esp+58h+var_50] 0 +
mov [esp+58h+var_54] 1 +
call sub_45F050  +
test eax eax +
mov [esp+58h+var_4C] eax +
jnz loc_45F78C  +
mov [esp+58h+var_4C] 0 +
mov eax [esp+58h+var_2C] +
xor ecx ecx +
mov edx [esp+58h+var_30] +
mov ebx eax +
sub ebx edx +
cmp edx eax +
cmovnz ecx ebx +
mov ebx [esp+58h+var_3C] +
lea eax [esi+0Ch] +
mov [esp+58h+var_58] ebx +
call sub_45DBF0  +
mov edx [esp+58h+arg_0] +
test edx edx +
jz loc_45F88D  +
test byte ptr [esi] 4 +
mov eax offset asc_496448 +
mov edx offset a__1 +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_45DD60  +
test byte ptr [esi+2Ch] 1 +
jnz loc_45FABA  +
mov ecx [esp+58h+var_20] +
lea edx [esp+58h+var_24] +
lea eax [esp+58h+var_30] +
call sub_45DE90  +
mov eax [esp+58h+arg_4] +
test eax eax +
jnz loc_45FA58  +
mov eax [esp+58h+var_40] +
mov ebx [eax+4] +
cmp [eax] ebx +
jz loc_45F8BD  +
test byte ptr [esi] 4 +
mov eax offset asc_496448 +
mov edx offset a__1 +
cmovz edx eax +
lea eax [esp+58h+var_30] +
call sub_45DD60  +
mov edx [esp+58h+var_30] +
mov ecx [esp+58h+var_2C] +
cmp edx ecx +
jz loc_45F8D1  +
sub ecx edx +
jnz loc_45FAAC  +
mov eax [esp+58h+var_24] +
test eax eax +
jz loc_45F8F9  +
mov [esp+58h+var_58] eax +
call free  +
mov [esp+58h+var_20] 0 +
mov [esp+58h+var_1C] 0 +
mov [esp+58h+var_24] 0 +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_45F909  +
mov [esp+58h+var_58] eax +
call free  +
mov eax [esp+58h+var_4C] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [esp+26h] +
mov [esp+58h+var_58] eax +
mov [esp+58h+var_32] dl +
mov [esp+58h+var_31] 0 +
call atoi  +
xor edx edx +
mov ebx eax +
mov eax [ebp+0] +
cmp byte ptr [eax+2] 5Fh +
setz dl  +
lea eax [eax+edx+2] +
mov [ebp+0] eax +
jmp loc_45F715  +
test byte ptr [esi+2Ch] 1 +
jnz loc_45F69A  +
mov [esp+58h+arg_0] 0 +
jmp loc_45F6A2  +
mov eax ebp +
call sub_45D770  +
cmp eax 0FFFFFFFFh +
mov edi eax +
jz loc_45F827  +
lea eax [eax+1] +
mov [esp+58h+var_58] eax +
call sub_45B8D0  +
mov ecx eax +
mov [esp+58h+var_48] eax +
mov eax [ebp+0] +
mov [esp+58h+var_58] ecx +
mov [esp+58h+var_50] edi +
mov [esp+58h+var_54] eax +
call memcpy  +
mov ecx [esp+58h+var_48] +
mov byte ptr [ecx+edi] 0 +
mov eax [esi] +
mov [esp+58h+var_58] ecx +
mov [esp+58h+var_54] eax +
call sub_45E890  +
test eax eax +
mov ecx eax +
jz loc_45FA30  +
cmp byte ptr [eax] 0 +
jz loc_45F9CA  +
mov edx eax +
mov [esp+58h+var_44] eax +
lea eax [esp+58h+var_30] +
call sub_45DD60  +
mov ecx [esp+58h+var_44] +
mov [esp+58h+var_58] ecx +
call free  +
mov eax [esp+58h+var_48] +
mov [esp+58h+var_58] eax +
call free  +
add [ebp+0] edi +
jmp loc_45F78C  +
add edx 1 +
mov eax ebp +
mov [ebp+0] edx +
call sub_45D7C0  +
cmp eax 0FFFFFFFFh +
jz loc_45F827  +
cmp eax [esi+10h] +
jge loc_45F827  +
mov edx [esi+8] +
mov edx [edx+eax*4] +
test edx edx +
jz loc_45F7A6  +
cmp byte ptr [edx] 0 +
jz loc_45F7A6  +
lea eax [esp+58h+var_30] +
call sub_45DD60  +
jmp loc_45F7A6  +
test edi edi +
mov edx [ebp+0] +
jz loc_45F9D2  +
mov ecx edi +
lea eax [esp+58h+var_30] +
call sub_45DCA0  +
jmp loc_45F9D2  +
mov [esp+58h+var_4C] 0 +
mov eax [esp+58h+var_4C] +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+58h+var_2C] +
lea edx [esp+58h+var_30] +
mov eax [esp+58h+var_40] +
call sub_45DE90  +
jmp loc_45F8D1  +
add eax 1 +
mov [ebp+0] eax +
mov eax ebp +
call sub_45D7C0  +
cmp eax 0FFFFFFFFh +
jz loc_45FA44  +
cmp eax [esi+10h] +
jge loc_45FA44  +
mov edx [esi+8] +
xor ebx ebx +
mov edx [edx+eax*4] +
test edx edx +
jz loc_45F715  +
cmp byte ptr [edx] 0 +
jz loc_45F715  +
lea eax [esp+58h+var_30] +
call sub_45DD60  +
jmp loc_45F715  +
mov eax [esp+58h+var_40] +
call sub_45DCD0  +
jmp loc_45F8D1  +
mov edx offset asc_49644B +
lea eax [esp+58h+var_30] +
call sub_45DD60  +
jmp loc_45F87C  +
***
push edi  +
mov edi 1 +
push esi  +
push ebx  +
mov ebx edx +
sub esp 6Ch +
mov [esp+78h+var_68] eax +
mov [esp+78h+var_60] ecx +
mov [esp+78h+var_44] 0 +
mov [esp+78h+var_48] 0 +
mov [esp+78h+var_4C] 0 +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx] 0 +
test edi edi +
setnz dl  +
xor eax eax +
test eax eax +
jnz loc_45FD80  +
test dl dl +
jz loc_45FD80  +
mov ecx [ebx] +
movzx esi byte ptr [ecx] +
lea eax [esi-41h] +
cmp al 34h +
ja loc_45FD72  +
movzx eax al +
jmp ds:off_4964C4[eax*4]  +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_45FB98  +
mov eax esi +
mov esi [esp+78h+var_48] +
cmp [esp+78h+var_4C] esi +
jz loc_45FB6D  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_496431 +
call sub_45DD30  +
mov ecx [ebx] +
movzx eax byte ptr [ecx] +
movsx eax al +
mov [esp+78h+var_64] ecx +
call sub_45DA60  +
call sub_45DA90  +
mov ecx [esp+78h+var_64] +
test eax eax +
jz loc_45FB98  +
cmp byte ptr [eax] 0 +
jz loc_45FB98  +
mov edx eax +
lea eax [esp+78h+var_4C] +
call sub_45DD30  +
mov ecx [ebx] +
add ecx 1 +
mov [ebx] ecx +
jmp loc_45FB14  +
mov eax [esp+78h+var_4C] +
add ecx 1 +
cmp eax [esp+78h+var_48] +
mov [ebx] ecx +
jz loc_45FBC4  +
movzx eax byte ptr [eax] +
cmp al 26h +
jz loc_45FEA6  +
cmp al 2Ah +
jz loc_45FEA6  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
call sub_4617A0  +
test eax eax +
jz loc_45FE30  +
mov edx [ebx] +
movzx eax byte ptr [edx] +
test al al +
jnz loc_45FE73  +
cmp al 5Fh +
jnz loc_45FB14  +
add edx 1 +
mov [ebx] edx +
jmp loc_45FB14  +
mov eax [esp+78h+var_4C] +
add ecx 1 +
cmp eax [esp+78h+var_48] +
mov [ebx] ecx +
jz loc_45FC22  +
movzx eax byte ptr [eax] +
cmp al 26h +
jz loc_45FE85  +
cmp al 2Ah +
jz loc_45FE85  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_49644F +
call sub_45DD60  +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_45FE37  +
add eax 1 +
mov [ebx] eax +
mov edx offset asc_496451 +
lea eax [esp+78h+var_4C] +
call sub_45DD60  +
jmp loc_45FB14  +
add ecx 1 +
mov eax ebx +
mov [ebx] ecx +
lea edx [esp+78h+var_58] +
call sub_45D810  +
test eax eax +
jz loc_45FE30  +
mov esi [esp+78h+var_68] +
mov eax [esp+78h+var_58] +
cmp [esi+20h] eax +
jle loc_45FE30  +
mov edx [esi+4] +
lea ebx [esp+78h+var_54] +
mov eax [edx+eax*4] +
mov [esp+78h+var_54] eax +
jmp loc_45FB14  +
mov eax [esp+78h+var_68] +
add ecx 1 +
mov [ebx] ecx +
test byte ptr [eax] 4 +
jz loc_45FE60  +
test ebp ebp +
mov eax 1 +
cmovz ebp eax +
jmp loc_45FB14  +
add ecx 1 +
mov edx offset asc_496433 +
lea eax [esp+78h+var_4C] +
mov [ebx] ecx +
call sub_45DD60  +
mov edx [ebx] +
mov eax 51h +
cmp byte ptr [edx] 51h +
jz loc_45FCF2  +
mov eax [esp+78h+var_68] +
mov edx offset a__1 +
test byte ptr [eax] 4 +
mov eax offset asc_496448 +
cmovz edx eax +
lea eax [esp+78h+var_4C] +
call sub_45DD30  +
mov eax [ebx] +
movzx eax byte ptr [eax] +
movzx edx al +
test ds:byte_495EE0[edx+edx] 4 +
jnz loc_45FDA2  +
lea edx [eax-58h] +
cmp dl 1 +
jbe loc_45FF30  +
cmp al 74h +
jz loc_460002  +
xor edi edi +
cmp al 51h +
jnz loc_45FB14  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 0 +
call sub_45F670  +
test eax eax +
mov edi eax +
jz loc_45FB14  +
jmp loc_45FDE9  +
add ecx 1 +
mov edx offset asc_49642D +
lea eax [esp+78h+var_4C] +
mov [ebx] ecx +
call sub_45DD30  +
test ebp ebp +
mov eax 2 +
cmovz ebp eax +
jmp loc_45FB14  +
mov eax 1 +
test eax eax +
jz loc_45FB23  +
nop   +
test edi edi +
jz loc_45FF93  +
mov esi [ebx] +
movzx eax byte ptr [esi] +
sub eax 42h +
cmp al 17h +
ja loc_460131  +
movzx eax al +
jmp ds:off_496598[eax*4]  +
mov eax ebx +
call sub_45D770  +
cmp eax 0FFFFFFFFh +
mov [esp+78h+var_58] eax +
mov [esp+78h+var_64] eax +
jz loc_45FE30  +
mov edx [ebx] +
mov [esp+78h+var_78] edx +
mov [esp+78h+var_5C] edx +
call strlen  +
mov ecx [esp+78h+var_64] +
mov edx [esp+78h+var_5C] +
cmp ecx eax +
jg loc_45FE30  +
xor eax eax +
test ecx ecx +
jz loc_45FDE5  +
lea eax [esp+78h+var_4C] +
call sub_45DCD0  +
mov edx [ebx] +
mov eax [esp+78h+var_58] +
add eax edx +
mov [ebx] eax +
lea eax [esp+78h+var_4C] +
mov edx offset asc_49642F +
call sub_45DD30  +
mov eax esi +
cmp al 4Dh +
jnz loc_45FEC7  +
mov edx [ebx] +
movsx eax byte ptr [edx] +
cmp al 56h +
jz loc_460071  +
cmp al 75h +
jz loc_460071  +
xor esi esi +
cmp al 43h +
jz loc_460071  +
lea eax [edx+1] +
mov [ebx] eax +
cmp byte ptr [edx] 46h +
jz loc_45FFE4  +
nop   +
xor edi edi +
jmp loc_45FB14  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
mov [esp+78h+var_78] 3 +
call sub_45E9A0  +
mov edi eax +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_45FC40  +
jmp loc_45FC3B  +
mov edx offset asc_49644D +
lea eax [esp+78h+var_4C] +
call sub_45DD30  +
jmp loc_45FCA2  +
cmp al 5Fh +
jz loc_45FBE8  +
xor edi edi +
lea esi [esi+0] +
jmp loc_45FB14  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_49642F +
call sub_45DD30  +
mov edx offset asc_496433 +
lea eax [esp+78h+var_4C] +
call sub_45DD60  +
jmp loc_45FC22  +
lea eax [esp+78h+var_4C] +
mov edx offset asc_49642F +
call sub_45DD30  +
mov edx offset asc_496433 +
lea eax [esp+78h+var_4C] +
call sub_45DD60  +
jmp loc_45FBC4  +
xor esi esi +
mov eax [ebx] +
cmp byte ptr [eax] 5Fh +
jnz loc_45FE30  +
add eax 1 +
mov [ebx] eax +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_45FB14  +
test esi esi +
jz loc_45FB14  +
mov eax [esp+78h+var_48] +
cmp [esp+78h+var_4C] eax +
jz loc_45FF06  +
mov edx offset asc_496431 +
lea eax [esp+78h+var_4C] +
call sub_45DD60  +
mov eax esi +
call sub_45DA90  +
test eax eax +
jz loc_45FB14  +
cmp byte ptr [eax] 0 +
jz loc_45FB14  +
mov edx eax +
lea eax [esp+78h+var_4C] +
call sub_45DD60  +
jmp loc_45FB14  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
call sub_45FAD0  +
mov edx [esp+78h+var_40] +
mov ecx [esp+78h+var_3C] +
cmp edx ecx +
jz loc_45FF53  +
sub ecx edx +
jnz loc_460088  +
test edx edx +
jz loc_45FDE9  +
mov [esp+78h+var_78] edx +
call free  +
jmp loc_45FDE9  +
add esi 1 +
mov eax ebx +
mov [ebx] esi +
call sub_45D7C0  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_45FF93  +
mov eax [esp+78h+var_68] +
mov edx [eax+40h] +
test edx edx +
jz loc_460240  +
cmp esi [eax+44h] +
jl loc_460240  +
mov eax [esp+78h+var_60] +
mov eax [eax] +
test eax eax +
jz loc_45FFBD  +
mov [esp+78h+var_78] eax +
call free  +
mov eax [esp+78h+var_60] +
mov dword ptr [eax+4] 0 +
mov dword ptr [eax+8] 0 +
mov dword ptr [eax] 0 +
mov eax [esp+78h+var_4C] +
xor edi edi +
test eax eax +
jz loc_45FFCF  +
mov [esp+78h+var_78] eax +
call free  +
xor eax eax +
test edi edi +
jz loc_45FFDC  +
mov al 3 +
test ebp ebp +
cmovnz eax ebp +
add esp 6Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_4C] +
mov edx ebx +
call sub_4617A0  +
test eax eax +
jnz loc_45FEC9  +
xor edi edi +
jmp loc_45FB14  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
call sub_45F050  +
test eax eax +
mov edi eax +
jz loc_460058  +
mov edx [esp+78h+var_40] +
mov ecx [esp+78h+var_3C] +
sub ecx edx +
jz loc_45FF53  +
jmp loc_460088  +
mov eax [esp+78h+var_40] +
test eax eax +
jz loc_45FB14  +
mov [esp+78h+var_78] eax +
call free  +
jmp loc_45FB14  +
mov [esp+78h+var_64] edx +
call sub_45DA60  +
mov edx [esp+78h+var_64] +
add edx 1 +
mov esi eax +
jmp loc_45FE20  +
lea eax [esp+78h+var_4C] +
call sub_45DCD0  +
mov edx [esp+78h+var_40] +
jmp loc_45FF53  +
mov ecx [esp+78h+var_60] +
mov edx ebx +
mov eax [esp+78h+var_68] +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
call sub_45F670  +
mov edi eax +
test edi edi +
jz loc_45FF93  +
mov eax [esp+78h+var_4C] +
cmp eax [esp+78h+var_48] +
jz loc_45FFC3  +
mov esi [esp+78h+var_60] +
mov edx offset asc_496431 +
mov eax esi +
call sub_45DD60  +
mov ecx [esp+78h+var_48] +
mov eax esi +
lea edx [esp+78h+var_4C] +
call sub_45DE90  +
mov eax [esp+78h+var_4C] +
jmp loc_45FFC3  +
add esi 1 +
mov eax ebx +
mov [ebx] esi +
lea edx [esp+78h+var_58] +
call sub_45D810  +
test eax eax +
jz loc_45FF93  +
mov esi [esp+78h+var_68] +
mov eax [esp+78h+var_58] +
cmp [esi+14h] eax +
jle loc_45FF93  +
mov edx [esi+0Ch] +
mov edx [edx+eax*4] +
test edx edx +
jnz loc_46026F  +
jmp loc_4600C2  +
mov edi [esp+78h+var_60] +
mov [esp+78h+var_50] 0 +
lea esi [esi+0] +
movzx edx byte ptr [esi] +
lea eax [edx-43h] +
cmp al 32h +
ja loc_460184  +
movzx eax al +
jmp ds:off_4965F8[eax*4]  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_46016C  +
mov edx offset asc_496431 +
mov eax edi +
call sub_45DD60  +
mov edx offset aUnsigned +
mov eax edi +
call sub_45DD60  +
mov esi [ebx] +
movzx edx byte ptr [esi] +
lea eax [edx-43h] +
cmp al 32h +
jbe loc_46014A  +
cmp dl 78h +
mov eax esi +
ja loc_4602EB  +
jmp ds:off_4966C4[edx*4]  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_4601AE  +
mov edx offset asc_496431 +
mov eax edi +
call sub_45DD60  +
mov edx offset aSigned +
mov eax edi +
call sub_45DD60  +
mov esi [ebx] +
jmp loc_460140  +
add esi 1 +
mov [ebx] esi +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_4601D8  +
mov edx offset asc_496431 +
mov eax edi +
call sub_45DD60  +
mov edx offset a__complex +
mov eax edi +
call sub_45DD60  +
mov esi [ebx] +
jmp loc_460140  +
mov eax [esp+78h+var_68] +
test byte ptr [eax] 2 +
jz loc_460227  +
mov eax [edi+4] +
cmp [edi] eax +
jz loc_460211  +
mov edx offset asc_496431 +
mov eax edi +
call sub_45DD30  +
mov esi [ebx] +
movzx edx byte ptr [esi] +
movsx eax dl +
call sub_45DA60  +
call sub_45DA90  +
test eax eax +
jz loc_460227  +
cmp byte ptr [eax] 0 +
jnz loc_460286  +
add esi 1 +
mov [ebx] esi +
jmp loc_460140  +
mov edi 3 +
test ebp ebp +
cmovz ebp edi +
jmp loc_4600BA  +
mov eax ebx +
call sub_45D7C0  +
cmp eax 0FFFFFFFFh +
jz loc_45FF93  +
mov eax [esp+78h+var_68] +
mov eax [eax+40h] +
test eax eax +
jz loc_4606C8  +
mov edx [eax+esi*4] +
mov edi 1 +
test edx edx +
jz loc_4600C2  +
cmp byte ptr [edx] 0 +
jz loc_4600C2  +
mov eax [esp+78h+var_60] +
call sub_45DD60  +
jmp loc_4600C2  +
mov edx eax +
mov eax edi +
call sub_45DD30  +
mov esi [ebx] +
jmp loc_460227  +
add esi 1 +
mov [ebx] esi +
movzx eax byte ptr [eax+1] +
test ds:byte_495EE0[eax+eax] 4 +
jz loc_4602EB  +
lea edi [esi+1] +
mov [ebx] edi +
cmp byte ptr [esi+1] 5Fh +
jnz loc_460610  +
lea eax [esi+2] +
xor edx edx +
mov [ebx] eax +
jmp loc_4602E4  +
cmp cl 5Fh +
jz loc_4606A9  +
mov byte ptr [esp+edx+78h+var_40] cl +
add edx 1 +
lea ecx [eax+1] +
cmp edx 24h +
lea esi [esp+78h+var_40] +
mov [ebx] ecx +
jz loc_4606BB  +
mov eax ecx +
movzx ecx byte ptr [eax] +
test cl cl +
jnz loc_4602C0  +
xor edi edi +
jmp loc_460236  +
mov eax [esp+78h+var_68] +
lea esi [esp+78h+var_40] +
call sub_45D960  +
mov edx ebx +
mov ecx esi +
mov [esp+78h+var_38] 0 +
xor ebx ebx +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
mov edi eax +
mov eax [esp+78h+var_68] +
call sub_460E30  +
test eax eax +
jz loc_460375  +
mov eax [esp+78h+var_3C] +
mov edx [esp+78h+var_40] +
mov [esp+78h+var_78] edi +
mov ecx eax +
sub ecx edx +
cmp edx eax +
mov eax [esp+78h+var_68] +
cmovz ecx ebx +
add eax 0Ch +
call sub_45DBF0  +
mov eax [esp+78h+var_60] +
mov edi [eax+4] +
cmp [eax] edi +
jz loc_460361  +
mov edx offset asc_496431 +
call sub_45DD60  +
mov ecx [esp+78h+var_3C] +
mov edx esi +
mov ebx 1 +
mov eax [esp+78h+var_60] +
call sub_45DE90  +
mov eax [esp+78h+var_40] +
test eax eax +
jz loc_460385  +
mov [esp+78h+var_78] eax +
call free  +
cmp ebx 1 +
sbb edi edi +
not edi  +
and edi 3 +
jmp loc_460236  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_4603AE  +
mov edx offset asc_496431 +
call sub_45DD60  +
mov eax [esp+78h+var_60] +
mov edx offset aLongLong +
mov edi 3 +
call sub_45DD60  +
jmp loc_460236  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_4603E0  +
mov edx offset asc_496431 +
call sub_45DD60  +
mov eax [esp+78h+var_60] +
mov edx offset aWchar_t +
mov edi 5 +
call sub_45DD60  +
jmp loc_460236  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_460412  +
mov edx offset asc_496431 +
call sub_45DD60  +
mov eax [esp+78h+var_60] +
mov edx offset aVoid +
mov edi 3 +
call sub_45DD60  +
jmp loc_460236  +
mov eax [esp+78h+var_68] +
lea ecx [esp+78h+var_40] +
mov edx ebx +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] 0 +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_40] 0 +
call sub_45F050  +
mov ecx [esp+78h+var_3C] +
lea edx [esp+78h+var_40] +
mov ebx eax +
mov eax [esp+78h+var_60] +
call sub_45DE90  +
jmp loc_460375  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_46049A  +
mov edx offset asc_496431 +
call sub_45DD60  +
mov eax [esp+78h+var_60] +
mov edx offset aShort +
mov edi 3 +
call sub_45DD60  +
jmp loc_460236  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_4604CC  +
mov edx offset asc_496431 +
call sub_45DD60  +
mov eax [esp+78h+var_60] +
mov edx offset aLongDouble +
mov edi 6 +
call sub_45DD60  +
jmp loc_460236  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_4604FE  +
mov edx offset asc_496431 +
call sub_45DD60  +
mov eax [esp+78h+var_60] +
mov edx offset aLong +
mov edi 3 +
call sub_45DD60  +
jmp loc_460236  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_460530  +
mov edx offset asc_496431 +
call sub_45DD60  +
mov eax [esp+78h+var_60] +
mov edx offset aInt +
mov edi 3 +
call sub_45DD60  +
jmp loc_460236  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_460562  +
mov edx offset asc_496431 +
call sub_45DD60  +
mov eax [esp+78h+var_60] +
mov edx offset aFloat +
mov edi 6 +
call sub_45DD60  +
jmp loc_460236  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_460594  +
mov edx offset asc_496431 +
call sub_45DD60  +
mov eax [esp+78h+var_60] +
mov edx offset aDouble +
mov edi 6 +
call sub_45DD60  +
jmp loc_460236  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_4605C6  +
mov edx offset asc_496431 +
call sub_45DD60  +
mov eax [esp+78h+var_60] +
mov edx offset aChar +
mov edi 5 +
call sub_45DD60  +
jmp loc_460236  +
mov eax [esp+78h+var_60] +
add esi 1 +
mov [ebx] esi +
mov esi [eax+4] +
cmp [eax] esi +
jz loc_4605F8  +
mov edx offset asc_496431 +
call sub_45DD60  +
mov eax [esp+78h+var_60] +
mov edx offset aBool +
mov edi 4 +
call sub_45DD60  +
jmp loc_460236  +
lea esi [esp+78h+var_40] +
mov [esp+78h+var_70] 2 +
mov [esp+78h+var_74] edi +
mov [esp+78h+var_78] esi +
call strncpy  +
mov [esp+78h+var_78] edi +
mov byte ptr [esp+78h+var_40+2] 0 +
call strlen  +
mov edx 2 +
cmp eax 2 +
cmovb edx eax +
add edx edi +
mov [ebx] edx +
lea eax [esp+78h+var_50] +
mov [esp+78h+var_70] eax +
mov [esp+78h+var_74] offset asc_4964B6 +
mov [esp+78h+var_78] esi +
call sscanf  +
mov eax [esp+78h+var_50] +
mov [esp+78h+var_74] offset aIntU_t +
mov [esp+78h+var_78] esi +
mov [esp+78h+var_70] eax +
call sprintf  +
mov eax [esp+78h+var_60] +
mov edi [eax+4] +
cmp [eax] edi +
jz loc_460689  +
mov edx offset asc_496431 +
call sub_45DD60  +
cmp byte ptr [esp+78h+var_40] 0 +
mov edi 3 +
jz loc_460236  +
mov eax [esp+78h+var_60] +
mov edx esi +
call sub_45DD60  +
jmp loc_460236  +
mov ecx eax +
lea esi [esp+78h+var_40] +
add ecx 1 +
mov byte ptr [esp+edx+78h+var_40] 0 +
mov [ebx] ecx +
jmp loc_460644  +
cmp byte ptr [eax+1] 5Fh +
jz loc_4606AF  +
xor edi edi +
jmp loc_460236  +
mov eax [esp+78h+var_60] +
mov edx esi +
mov edi 1 +
call sub_45DDA0  +
jmp loc_4600C2  +
***
mov edi ecx +
push esi  +
push ebx  +
sub esp 4Ch +
mov esi [eax] +
mov [esp+54h+var_40] edx +
mov edx [edx] +
mov [esp+54h+var_44] eax +
mov ebx [esp+54h+arg_0] +
mov [esp+54h+var_3C] ecx +
add edi edx +
test esi 1000h +
jz loc_460710  +
cmp byte ptr [edi] 58h +
jz loc_460865  +
mov eax [esp+54h+var_44] +
mov ebp [eax] +
test ebp 1800h +
jz loc_46076B  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__pt__ +
mov [esp+54h+var_38] edx +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jz loc_46076B  +
lea eax [eax+6] +
lea ebp [esp+54h+var_30] +
mov [esp+54h+var_30] eax +
mov eax ebp +
call sub_45D770  +
cmp eax 0FFFFFFFFh +
jz loc_4607BA  +
mov ecx [esp+54h+var_30] +
mov edx [esp+54h+var_38] +
add eax ecx +
cmp edi eax +
jz loc_460BBC  +
mov eax [esp+54h+var_44] +
mov ebp [eax] +
and ebp 2100h +
jz loc_4607BA  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__tm__ +
mov [esp+54h+var_38] edx +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jz loc_460A91  +
lea eax [esi+6] +
lea ebp [esp+54h+var_30] +
mov [esp+54h+var_30] eax +
mov eax ebp +
call sub_45D770  +
cmp eax 0FFFFFFFFh +
jz loc_4607BA  +
mov edx [esp+54h+var_30] +
add eax edx +
cmp edi eax +
jz loc_460850  +
mov eax [esp+54h+var_40] +
cmp [esp+54h+var_3C] 0Ah +
mov edx [eax] +
jg loc_460800  +
mov eax [esp+54h+var_44] +
cmp dword ptr [eax+34h] 0FFFFFFFFh +
jz loc_460B18  +
mov eax [esp+54h+var_3C] +
test eax eax +
jz loc_4607EE  +
mov ecx [esp+54h+var_3C] +
mov eax ebx +
call sub_45DCA0  +
mov eax [esp+54h+var_40] +
mov edx [eax] +
mov eax [esp+54h+var_40] +
add edx [esp+54h+var_3C] +
mov [eax] edx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi offset a_global__0 +
mov ecx 8 +
mov esi edx +
cmps   +
jnz loc_4607C7  +
cmp byte ptr [edx+9] 4Eh +
jnz loc_4607C7  +
movsx eax byte ptr [edx+8] +
cmp al [edx+0Ah] +
jnz loc_4607C7  +
mov [esp+54h+var_50] eax +
mov [esp+54h+var_54] offset byte_476858 +
mov [esp+54h+var_38] edx +
call strchr  +
mov edx [esp+54h+var_38] +
test eax eax +
jz loc_4607C7  +
mov edx offset aAnonymous +
mov eax ebx +
call sub_45DD60  +
mov eax [esp+54h+var_40] +
mov edx [eax] +
jmp loc_4607EE  +
cmp byte ptr [edx] 5Fh +
jnz loc_4607BA  +
add edx 1 +
mov [esp+54h+var_30] edx +
jmp loc_460BCC  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] 3Ch +
mov [esp+54h+var_38] edx +
call strchr  +
mov edx [esp+54h+var_38] +
test eax eax +
jz loc_460AF0  +
sub eax edx +
cmp [esp+54h+var_3C] eax +
mov ecx eax +
jle loc_460AF0  +
test eax eax +
jnz loc_460B00  +
mov eax [esp+54h+var_3C] +
mov edi [esp+54h+var_40] +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_28] 0 +
lea eax [edx+eax+1] +
mov [edi] eax +
mov eax [esp+54h+var_44] +
mov [esp+54h+var_2C] 0 +
cmp dword ptr [eax+34h] 0FFFFFFFFh +
jz loc_460B32  +
mov edi [esp+54h+var_44] +
mov eax esi +
mov edx (offset asc_496444+2) +
or eax 1 +
mov [edi] eax +
mov eax ebx +
call sub_45DD60  +
mov edi [esp+54h+var_40] +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_460912  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
mov eax [edi] +
movzx ecx byte ptr [eax] +
cmp cl 53h +
jz loc_460932  +
jle loc_4609B1  +
cmp cl 54h +
jz loc_460A40  +
cmp cl 55h +
nop   +
jnz loc_460960  +
cmp cl 53h +
jnz loc_460B24  +
lea edx [eax+1] +
mov [edi] edx +
movzx eax byte ptr [eax+1] +
cmp al 4Eh +
jz loc_460B51  +
cmp al 50h +
jz loc_460B69  +
cmp al 4Dh +
jz loc_460D52  +
lea esi [esi+0] +
mov eax ebx +
mov edx offset asc_496444 +
call sub_45DD60  +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_460994  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
mov eax [esp+54h+var_40] +
mov eax [eax] +
cmp byte ptr [eax] 5Fh +
jz loc_460B43  +
mov eax [esp+54h+var_44] +
mov [eax] esi +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp cl 41h +
jnz loc_460960  +
add eax 1 +
mov [edi] eax +
mov eax edi +
call sub_45D770  +
test eax eax +
mov ebp eax +
jle loc_460960  +
mov edx offset asc_49642D +
lea eax [esp+54h+var_2C] +
call sub_45DD60  +
lea eax [ebp+1] +
mov [esp+54h+var_54] eax +
call sub_45B8D0  +
mov ecx eax +
mov [esp+54h+var_3C] eax +
mov eax [edi] +
mov [esp+54h+var_54] ecx +
mov [esp+54h+var_4C] ebp +
mov [esp+54h+var_50] eax +
call memcpy  +
mov ecx [esp+54h+var_3C] +
mov eax [esp+54h+var_44] +
mov byte ptr [ecx+ebp] 0 +
mov eax [eax] +
mov [esp+54h+var_54] ecx +
mov [esp+54h+var_50] eax +
call sub_45E890  +
test eax eax +
mov ecx eax +
jz loc_460D68  +
cmp byte ptr [eax] 0 +
jnz loc_460E12  +
mov [esp+54h+var_54] ecx +
call free  +
mov eax [esp+54h+var_3C] +
add [edi] ebp +
mov [esp+54h+var_54] eax +
call free  +
jmp loc_460A5C  +
add eax 1 +
mov edx edi +
mov [edi] eax +
mov eax [esp+54h+var_44] +
lea ecx [esp+54h+var_2C] +
call sub_45FAD0  +
test eax eax +
jz loc_460960  +
mov ecx [esp+54h+var_28] +
mov eax ebx +
lea edx [esp+54h+var_2C] +
call sub_45DE90  +
mov eax [edi] +
movzx eax byte ptr [eax] +
cmp al 5Fh +
jz loc_460960  +
test al al +
jz loc_460960  +
mov edx (offset aU+2) +
mov eax ebx +
call sub_45DD60  +
jmp loc_4608EA  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__ps__ +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jnz loc_460795  +
mov [esp+54h+var_54] edx +
mov [esp+54h+var_50] offset a__pt__ +
call strstr  +
mov edx [esp+54h+var_38] +
test eax eax +
mov esi eax +
jnz loc_460795  +
mov [esp+54h+var_50] offset a__s +
mov [esp+54h+var_54] edx +
call strstr  +
test eax eax +
mov esi eax +
jz loc_4607BA  +
lea eax [eax+3] +
jmp loc_460798  +
mov ecx [esp+54h+var_3C] +
test ecx ecx +
jz loc_46089B  +
mov ecx [esp+54h+var_3C] +
mov eax ebx +
call sub_45DCA0  +
mov eax [esp+54h+var_40] +
mov edx [eax] +
mov eax [esp+54h+var_44] +
mov esi [eax] +
jmp loc_46089B  +
mov dword ptr [eax+34h] 0 +
jmp loc_4607D5  +
cmp cl 55h +
jz loc_46093B  +
jmp loc_460960  +
mov eax [ebx+4] +
mov edi [esp+54h+var_44] +
sub eax [ebx] +
mov [edi+34h] eax +
jmp loc_4608CF  +
mov ebx [esp+54h+var_40] +
add eax 1 +
mov [ebx] eax +
jmp loc_4609A3  +
mov edx offset asc_496415 +
lea eax [esp+54h+var_2C] +
mov [esp+54h+var_3C] ecx +
call sub_45DD60  +
mov edx [edi] +
mov ecx [esp+54h+var_3C] +
lea eax [edx+1] +
mov [edi] eax +
movzx eax byte ptr [edx+1] +
movzx edx al +
test ds:byte_495EE0[edx+edx] 4 +
jz loc_460960  +
mov ebp ecx +
jmp loc_460BA3  +
mov eax [edi] +
lea edx [eax+1] +
mov [edi] edx +
movzx eax byte ptr [eax+1] +
movzx edx al +
test ds:byte_495EE0[edx+edx] 4 +
jz loc_460DF4  +
test al al +
mov ds:byte_49F5A0 al +
jz loc_460B87  +
mov edx offset byte_49F5A0 +
lea eax [esp+54h+var_2C] +
call sub_45DD60  +
jmp loc_460B87  +
cmp byte ptr [ecx] 5Fh +
jnz loc_460765  +
add ecx 1 +
mov [esp+54h+var_30] ecx +
mov eax [esp+54h+var_40] +
mov ecx esi +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_2C] 0 +
mov edx [eax] +
sub ecx edx +
jz loc_460BF7  +
mov eax ebx +
call sub_45DCA0  +
mov eax [esp+54h+var_44] +
cmp dword ptr [eax+34h] 0FFFFFFFFh +
jz loc_460DE3  +
mov ecx [esp+54h+var_44] +
mov edx 496446h +
mov eax [ecx] +
mov [esp+54h+var_38] eax +
or eax 1 +
mov [ecx] eax +
mov eax ebx +
call sub_45DD60  +
cmp edi [esp+54h+var_30] +
ja loc_460CEF  +
jmp loc_460D90  +
mov eax [esp+54h+var_44] +
add esi 1 +
mov edx ebp +
lea ecx [esp+54h+var_20] +
mov [esp+54h+var_30] esi +
call sub_45FAD0  +
test eax eax +
jz loc_460D90  +
mov edx offset asc_49642F +
lea eax [esp+54h+var_2C] +
call sub_45DD60  +
mov ecx [esp+54h+var_1C] +
lea eax [esp+54h+var_2C] +
lea edx [esp+54h+var_20] +
call sub_45DE90  +
mov eax [esp+54h+var_20] +
test eax eax +
jz loc_460C95  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_1C] 0 +
mov [esp+54h+var_18] 0 +
mov [esp+54h+var_20] 0 +
lea eax [esp+54h+var_2C] +
mov edx offset asc_496433 +
call sub_45DD60  +
mov eax [esp+54h+var_30] +
cmp byte ptr [eax] 4Ch +
jnz loc_460D90  +
add eax 1 +
mov [esp+54h+var_30] eax +
lea edx [esp+54h+var_2C] +
mov eax ebp +
call sub_45DDE0  +
test eax eax +
jz loc_460D90  +
mov ecx [esp+54h+var_28] +
lea edx [esp+54h+var_2C] +
mov eax ebx +
call sub_45DE90  +
mov edx (offset aU+2) +
mov eax ebx +
call sub_45DD60  +
cmp edi [esp+54h+var_30] +
jbe loc_460D90  +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_460D17  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
mov esi [esp+54h+var_30] +
movzx eax byte ptr [esi] +
cmp al 4Ch +
jz loc_460D80  +
cmp al 58h +
jz loc_460C30  +
mov eax [esp+54h+var_44] +
lea ecx [esp+54h+var_2C] +
mov edx ebp +
call sub_45FAD0  +
test eax eax +
jz loc_460D90  +
cmp esi [esp+54h+var_30] +
jnz loc_460CCA  +
mov eax [esp+54h+var_44] +
mov ebx [esp+54h+var_38] +
mov [eax] ebx +
jmp loc_4607F8  +
mov edx offset a2147483648 +
lea eax [esp+54h+var_2C] +
call sub_45DD60  +
add dword ptr [edi] 1 +
jmp loc_460A5C  +
mov edx [edi] +
mov ecx ebp +
lea eax [esp+54h+var_2C] +
call sub_45DCA0  +
jmp loc_460A2E  +
add esi 1 +
mov [esp+54h+var_30] esi +
jmp loc_460CB7  +
mov eax [esp+54h+var_2C] +
test eax eax +
jz loc_460DB8  +
mov [esp+54h+var_54] eax +
call free  +
mov [esp+54h+var_28] 0 +
mov [esp+54h+var_24] 0 +
mov [esp+54h+var_2C] 0 +
cmp edi [esp+54h+var_30] +
ja loc_460DC2  +
sub dword ptr [ebx+4] 1 +
mov eax ebx +
mov edx offset asc_496444 +
call sub_45DD60  +
mov eax [esp+54h+var_44] +
mov ebx [esp+54h+var_38] +
mov [eax] ebx +
mov eax [esp+54h+var_40] +
mov edx [eax] +
jmp loc_4607EE  +
mov eax [ebx+4] +
mov ecx [esp+54h+var_44] +
sub eax [ebx] +
mov [ecx+34h] eax +
jmp loc_460C05  +
mov ecx ebp +
cmp cl 55h +
jnz loc_460A5C  +
mov edx offset aU +
lea eax [esp+54h+var_2C] +
call sub_45DD60  +
jmp loc_460A5C  +
mov edx eax +
mov [esp+54h+var_38] eax +
lea eax [esp+54h+var_2C] +
call sub_45DD60  +
mov ecx [esp+54h+var_38] +
jmp loc_460A26  +
***
push edi  +
mov edi eax +
push esi  +
mov eax edx +
push ebx  +
mov ebx edx +
sub esp 1Ch +
call sub_45D770  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_460E82  +
mov eax [ebx] +
mov [esp+28h+var_28] eax +
call strlen  +
xor edx edx +
cmp esi eax +
jle loc_460E65  +
add esp 1Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+28h+var_28] ebp +
mov edx ebx +
mov eax edi +
mov ecx esi +
call sub_4606E0  +
add esp 1Ch +
mov edx 1 +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 1Ch +
xor edx edx +
pop ebx  +
mov eax edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp ebp 2 +
jle loc_460F36  +
cmp al 6Fh +
jz loc_460FE0  +
cmp ebp 4 +
jle loc_460F36  +
mov dword ptr [esp+8] 4 +
mov dword ptr [esp+4] offset aType +
mov [esp] ebx +
call memcmp  +
test eax eax +
jnz loc_460F36  +
movsx eax byte ptr [ebx+4] +
add ebx 5 +
mov dword ptr [esp] offset byte_476858 +
mov [esp+4] eax +
call strchr  +
test eax eax +
jz loc_460F36  +
lea ecx [esp+30h] +
mov eax esi +
lea edx [esp+2Ch] +
mov [esp+2Ch] ebx +
call sub_45FAD0  +
test eax eax +
jnz loc_460F62  +
xor ebx ebx +
mov eax esi +
call sub_45D8A0  +
add esp 9Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp ebp 2 +
jg loc_460EE3  +
nop   +
jmp loc_460F36  +
***
mov eax [esp+0B4h] +
mov ebx 1 +
mov [esp] eax +
call strlen  +
mov edx 20h +
add eax [esp+0B4h] +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov [eax+8] dx +
mov edi [esp+30h] +
mov eax [esp+34h] +
mov [esp+4] edi +
sub eax edi +
mov [esp+8] eax +
mov eax [esp+0B4h] +
mov [esp] eax +
call strncat  +
test edi edi +
jz loc_460F38  +
mov [esp] edi +
call free  +
mov dword ptr [esp+34h] 0 +
mov dword ptr [esp+38h] 0 +
mov dword ptr [esp+30h] 0 +
jmp loc_460F38  +
***
cmp byte ptr [ebx+1] 70h +
jnz loc_460EE3  +
movsx eax byte ptr [ebx+2] +
mov dword ptr [esp] offset byte_476858 +
mov [esp+4] eax +
call strchr  +
test eax eax +
jz loc_460EE3  +
cmp ebp 9 +
jle loc_4611C0  +
lea eax [ebx+3] +
mov dword ptr [esp+8] 7 +
mov dword ptr [esp+4] offset aAssign_ +
mov [esp] eax +
call memcmp  +
test eax eax +
jnz loc_4611C0  +
lea eax [ebp-0Ah] +
xor edi edi +
mov [esp+18h] eax +
lea eax [ebx+0Ah] +
mov ebp offset off_497100 +
mov [esp+1Ch] eax +
jmp loc_46105F  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_460F36  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp eax [esp+18h] +
jnz loc_461050  +
mov eax [esp+18h] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_461050  +
mov eax [esp+0B4h] +
mov ebx 1 +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov byte ptr [eax+8] 0 +
lea eax [edi+edi*2] +
mov eax ds:off_497104[eax*4] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
add eax 8 +
mov [esp] eax +
call strcpy  +
mov eax [esp+0B4h] +
mov [esp] eax +
call strlen  +
mov edx [esp+0B4h] +
mov ecx 3Dh +
mov [edx+eax] cx +
jmp loc_460F38  +
***
lea eax [ebx+2] +
mov ebp offset off_497100 +
xor edi edi +
mov [esp+18h] eax +
jmp loc_46114F  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_460F36  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp eax 2 +
jnz loc_461140  +
mov eax [esp+18h] +
mov dword ptr [esp+8] 2 +
mov [esp] ebx +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_461140  +
mov eax [esp+0B4h] +
mov ebx 1 +
mov dword ptr [eax] 7265706Fh +
mov dword ptr [eax+4] 726F7461h +
mov byte ptr [eax+8] 0 +
lea eax [edi+edi*2] +
mov eax ds:off_497104[eax*4] +
mov [esp+4] eax +
mov eax [esp+0B4h] +
add eax 8 +
mov [esp] eax +
call strcpy  +
jmp loc_460F38  +
***
lea eax [ebp-3] +
xor edi edi +
mov [esp+18h] eax +
lea eax [ebx+3] +
mov ebp offset off_497100 +
mov [esp+1Ch] eax +
jmp loc_4611E6  +
add edi 1 +
add ebp 0Ch +
cmp edi 4Fh +
jz loc_460F36  +
mov ebx [ebp+0] +
mov [esp] ebx +
call strlen  +
cmp [esp+18h] eax +
jnz loc_4611D7  +
mov eax [esp+18h] +
mov [esp] ebx +
mov [esp+8] eax +
mov eax [esp+1Ch] +
mov [esp+4] eax +
call memcmp  +
test eax eax +
jnz loc_4611D7  +
jmp loc_46117B  +
***
cmp byte ptr [ebx+3] 70h +
lea esi [esi+0] +
jnz loc_4610FC  +
add ebx 4 +
jmp loc_460F1F  +
***
push edi  +
mov edi edx +
push esi  +
mov edx offset aTemplate +
push ebx  +
mov esi 1 +
sub esp 2Ch +
mov [esp+38h+var_2C] eax +
mov eax ecx +
call sub_45DD60  +
lea edx [esp+38h+var_28] +
mov eax edi +
call sub_45D810  +
test eax eax +
jz loc_4612D0  +
mov eax [esp+38h+var_28] +
xor ebx ebx +
test eax eax +
jg loc_46134D  +
lea esi [esi+0] +
mov eax [ebp+4] +
cmp byte ptr [eax-1] 3Eh +
jz loc_461381  +
mov eax ebp +
mov edx offset aClass +
call sub_45DD60  +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp-4+arg_8] +
lea ecx [esp-4+arg_10] +
mov edx edi +
call sub_45FAD0  +
test eax eax +
mov esi eax +
jnz loc_461392  +
mov eax [esp-4+arg_10] +
test eax eax +
jz loc_461334  +
mov [esp+0] eax +
call free  +
mov [esp-4+arg_14] 0 +
mov [esp-4+arg_18] 0 +
mov [esp-4+arg_10] 0 +
test esi esi +
jz loc_461372  +
add ebx 1 +
cmp [esp-4+arg_C] ebx +
jle loc_4612D0  +
mov edx offset asc_49643E +
mov eax ebp +
call sub_45DD60  +
mov edx [edi] +
movzx eax byte ptr [edx] +
cmp al 5Ah +
jz loc_4613A6  +
cmp al 7Ah +
jnz loc_4612F3  +
mov eax [esp-4+arg_8] +
add edx 1 +
mov ecx ebp +
mov [edi] edx +
mov edx edi +
call sub_461290  +
mov esi eax +
test esi esi +
jnz loc_461338  +
mov eax [ebp+4] +
xor esi esi +
cmp byte ptr [eax-1] 3Eh +
jnz loc_4612DD  +
mov edx offset asc_496431 +
mov eax ebp +
call sub_45DD60  +
jmp loc_4612DD  +
mov ecx [esp-4+arg_14] +
lea edx [esp-4+arg_10] +
mov eax ebp +
call sub_45DE90  +
jmp loc_46130C  +
add edx 1 +
mov eax ebp +
mov [edi] edx +
mov edx offset aClass_0 +
call sub_45DD60  +
jmp loc_461338  +
***
mov edi eax +
push esi  +
mov esi ecx +
push ebx  +
mov ebx edx +
sub esp 1Ch +
mov ebp [edx] +
mov eax [eax+50h] +
test eax eax +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] 0 +
jg loc_461421  +
mov eax [ebx] +
cmp byte ptr [eax] 6Eh +
jnz loc_461483  +
add eax 1 +
mov [ebx] eax +
mov eax ebx +
call sub_45D770  +
test eax eax +
mov [edi+50h] eax +
jle loc_461465  +
cmp eax 9 +
jg loc_461471  +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi] 0 +
mov edx [edi+4Ch] +
sub eax 1 +
mov [edi+50h] eax +
test edx edx +
jz loc_461465  +
mov ecx [edx+4] +
mov eax esi +
mov ebx 1 +
call sub_45DE90  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esp+0] 0Ch +
call sub_45B8D0  +
mov [edi+4Ch] eax +
mov ecx eax +
mov edx ebx +
mov eax edi +
call sub_45FAD0  +
test eax eax +
jnz loc_4614C4  +
xor ebx ebx +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [ebx] +
cmp byte ptr [ebp+0] 5Fh +
jnz loc_461465  +
add ebp 1 +
mov [ebx] ebp +
jmp loc_4613D2  +
mov ecx [edi+4Ch] +
test ecx ecx +
jz loc_461447  +
mov eax [ecx] +
test eax eax +
jz loc_461458  +
mov [esp+24h+var_24] eax +
mov [esp+24h+var_18] ecx +
call free  +
mov ecx [esp+24h+var_18] +
mov edx ebx +
mov eax edi +
mov dword ptr [ecx+4] 0 +
mov dword ptr [ecx+8] 0 +
mov dword ptr [ecx] 0 +
mov ecx [edi+4Ch] +
call sub_45FAD0  +
test eax eax +
jz loc_461465  +
mov edx [edi+4Ch] +
mov eax esi +
mov ecx [edx+4] +
call sub_45DE90  +
mov eax [edi+48h] +
mov ecx [ebx] +
mov ebx 1 +
test eax eax +
jnz loc_461467  +
sub ecx ebp +
mov edx ebp +
mov eax edi +
call sub_45E1B0  +
jmp loc_461467  +
***
push edi  +
mov edi ecx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
test byte ptr [eax] 1 +
jnz loc_461711  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
xor esi esi +
cmp al 5Fh +
jz loc_461635  +
test al al +
jz loc_461635  +
cmp al 65h +
jz loc_461635  +
cmp al 54h +
jz loc_461536  +
cmp al 4Eh +
lea esi [esi+0] +
jnz loc_461674  +
lea eax [edx+1] +
mov [ebp+0] eax +
cmp byte ptr [edx] 4Eh +
jz loc_4616D8  +
mov [esp+48h+var_30] 1 +
test dword ptr [ebx] 3800h +
jz loc_46155F  +
cmp dword ptr [ebx+20h] 9 +
jg loc_46173C  +
lea edx [esp+48h+var_2C] +
mov eax ebp +
call sub_45D810  +
test eax eax +
jz loc_4616F0  +
mov eax [esp+48h+var_2C] +
test dword ptr [ebx] 3C00h +
jz loc_461585  +
sub eax 1 +
mov [esp+48h+var_2C] eax +
test eax eax +
js loc_4616F0  +
cmp [ebx+20h] eax +
jg loc_4615A4  +
jmp loc_4616F0  +
mov eax [esp+48h+var_24] +
test eax eax +
jnz loc_4615F9  +
mov esi 1 +
mov eax [ebx+50h] +
test eax eax +
jle loc_461620  +
mov eax [ebx+4] +
test esi esi +
mov edx [esp+48h+var_2C] +
mov eax [eax+edx*4] +
mov [esp+48h+var_28] eax +
jz loc_4615C6  +
test byte ptr [ebx] 1 +
jnz loc_461663  +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_28] +
call sub_4613C0  +
test eax eax +
jz loc_4616F0  +
test byte ptr [ebx] 1 +
jz loc_461597  +
mov ecx [esp+48h+var_20] +
mov eax edi +
lea edx [esp+48h+var_24] +
call sub_45DE90  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_46159F  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
jmp loc_46159F  +
sub [esp+48h+var_30] 1 +
jns loc_4615AB  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jnz loc_461516  +
mov ecx [ebx+50h] +
test ecx ecx +
jg loc_461526  +
cmp al 65h +
jz loc_461762  +
test byte ptr [ebx] 1 +
jz loc_461659  +
mov edx offset asc_496433 +
mov eax edi +
call sub_45DD60  +
mov eax 1 +
jmp loc_4616F2  +
mov edx offset asc_49643E +
mov eax edi +
call sub_45DD60  +
jmp loc_4615C6  +
test esi esi +
jz loc_461686  +
test byte ptr [ebx] 1 +
nop   +
lea esi [esi+0] +
jnz loc_461751  +
lea ecx [esp+48h+var_24] +
mov edx ebp +
mov eax ebx +
call sub_4613C0  +
test eax eax +
jz loc_4616F0  +
test byte ptr [ebx] 1 +
jnz loc_461700  +
mov eax [esp+48h+var_24] +
mov esi 1 +
test eax eax +
jz loc_461627  +
mov [esp+48h+var_48] eax +
call free  +
mov edx [ebp+0] +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
movzx eax byte ptr [edx] +
jmp loc_46162D  +
lea edx [esp+48h+var_30] +
mov eax ebp +
call sub_45D810  +
test eax eax +
jnz loc_46154D  +
nop   +
lea esi [esi+0] +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+48h+var_20] +
lea edx [esp+48h+var_24] +
mov eax edi +
call sub_45DE90  +
jmp loc_46169C  +
mov edx offset asc_49642F +
mov eax ecx +
call sub_45DD60  +
mov edx [ebp+0] +
movzx eax byte ptr [edx] +
test al al +
jnz loc_46150C  +
mov edx offset aVoid +
mov eax edi +
call sub_45DD60  +
jmp loc_461506  +
mov eax ebp +
call sub_45D770  +
test eax eax +
mov [esp+48h+var_2C] eax +
jg loc_461576  +
jmp loc_4616F0  +
mov edx offset asc_49643E +
mov eax edi +
call sub_45DD60  +
jmp loc_461686  +
add edx 1 +
test byte ptr [ebx] 1 +
mov [ebp+0] edx +
jz loc_461659  +
test esi esi +
jnz loc_461786  +
mov edx offset a____0 +
mov eax edi +
call sub_45DD60  +
jmp loc_461648  +
mov edx 4968B6h +
mov eax edi +
call sub_45DD60  +
jmp loc_461775  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov ebp [eax+4Ch] +
add dword ptr [eax+48h] 1 +
mov edi [eax+50h] +
mov dword ptr [eax+4Ch] 0 +
mov dword ptr [eax+50h] 0 +
call sub_4614F0  +
mov esi [ebx+4Ch] +
test esi esi +
jz loc_46180A  +
mov edx [esi] +
test edx edx +
jz loc_4617FA  +
mov [esp+1Ch+var_1C] edx +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi] 0 +
mov esi [ebx+4Ch] +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_10] eax +
call free  +
mov eax [esp+1Ch+var_10] +
mov [ebx+4Ch] ebp +
mov [ebx+50h] edi +
sub dword ptr [ebx+48h] 1 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 3Ch +
mov edx [edx] +
mov esi [esp+48h+arg_0] +
mov ecx esi +
sub ecx edx +
jnz loc_461A20  +
mov eax ebx +
mov edx 1 +
call sub_45DC30  +
mov eax [ebx+4] +
mov byte ptr [eax] 0 +
lea eax [esi+2] +
test dword ptr [ebp+0] 1000h +
mov [edi] eax +
jz loc_461867  +
cmp byte ptr [esi+2] 58h +
jz loc_461A68  +
test dword ptr [ebp+0] 3C00h +
mov edx [ebx] +
jz loc_46189A  +
mov edi offset a__ct +
mov ecx 5 +
mov esi edx +
cmps   +
jz loc_461A30  +
mov edi offset a__dt +
mov ecx 5 +
mov esi edx +
cmps   +
jz loc_461A54  +
mov eax [ebx+4] +
movzx edi byte ptr [edx] +
mov esi eax +
sub esi edx +
cmp esi 2 +
mov [esp+48h+var_38] eax +
jle loc_461954  +
mov eax edi +
cmp al 6Fh +
jz loc_461A90  +
cmp esi 4 +
jle loc_461954  +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_40] 4 +
mov [esp+48h+var_44] offset aType +
mov [esp+48h+var_34] edx +
call memcmp  +
mov edx [esp+48h+var_34] +
test eax eax +
jnz loc_461954  +
movsx eax byte ptr [edx+4] +
mov [esp+48h+var_48] offset byte_476858 +
mov [esp+48h+var_44] eax +
call strchr  +
mov edx [esp+48h+var_34] +
test eax eax +
jz loc_461954  +
add edx 5 +
mov [esp+48h+var_28] edx +
lea ecx [esp+48h+var_24] +
mov eax ebp +
lea edx [esp+48h+var_28] +
call sub_45FAD0  +
test eax eax +
jnz loc_461B80  +
mov eax [ebx+4] +
mov edx [ebx] +
mov [esp+48h+var_38] eax +
nop   +
lea esi [esi+0] +
mov ecx [esp+48h+var_38] +
cmp edx ecx +
jz loc_461A80  +
sub ecx edx +
mov eax 1 +
cmp ecx 1 +
jz loc_461A44  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edi +
cmp al 5Fh +
jnz loc_461930  +
cmp byte ptr [edx+1] 5Fh +
jnz loc_461930  +
movzx eax byte ptr [edx+2] +
cmp al 6Fh +
jz loc_461C5F  +
movzx ecx al +
test ds:byte_495EE0[ecx+ecx] 8 +
jz loc_461930  +
movzx ecx byte ptr [edx+3] +
test ds:byte_495EE0[ecx+ecx] 8 +
jz loc_461930  +
cmp byte ptr [edx+4] 0 +
jnz loc_461C7E  +
lea eax [edx+2] +
mov edi offset off_497100 +
mov [esp+48h+var_30] ebx +
xor esi esi +
mov ebx eax +
mov [esp+48h+var_34] edx +
jmp loc_4619B6  +
add esi 1 +
add edi 0Ch +
cmp esi 4Fh +
jz loc_461D07  +
mov ebp [edi] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax 2 +
jnz loc_4619A7  +
mov [esp+48h+var_40] 2 +
mov [esp+48h+var_44] ebx +
mov [esp+48h+var_48] ebp +
call memcmp  +
test eax eax +
jnz loc_4619A7  +
mov edx [esp+48h+var_34] +
mov ebx [esp+48h+var_30] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_45DD60  +
lea eax [esi+esi*2] +
mov edx ds:off_497104[eax*4] +
test edx edx +
jz loc_461922  +
cmp byte ptr [edx] 0 +
jz loc_461922  +
mov eax ebx +
call sub_45DD60  +
jmp loc_461922  +
mov eax ebx +
call sub_45DCA0  +
jmp loc_46183D  +
add dword ptr [ebp+28h] 1 +
mov eax 1 +
mov [ebx+4] edx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
cmp byte ptr [edx] 2Eh +
setnz al  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add dword ptr [ebp+2Ch] 1 +
mov eax 1 +
mov [ebx+4] edx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+48h+var_48] ebx +
xor ecx ecx +
mov edx edi +
mov eax ebp +
call sub_4606E0  +
jmp loc_461867  +
add esp 3Ch +
mov eax 1 +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 70h +
jnz loc_4618BB  +
movsx eax byte ptr [edx+2] +
mov [esp+48h+var_48] offset byte_476858 +
mov [esp+48h+var_34] edx +
mov [esp+48h+var_44] eax +
call strchr  +
mov edx [esp+48h+var_34] +
test eax eax +
jz loc_4618BB  +
cmp esi 9 +
jle loc_461BE0  +
lea eax [edx+3] +
mov [esp+48h+var_40] 7 +
mov [esp+48h+var_44] offset aAssign_ +
mov [esp+48h+var_48] eax +
call memcmp  +
mov edx [esp+48h+var_34] +
test eax eax +
jnz loc_461BE0  +
lea eax [edx+0Ah] +
sub esi 0Ah +
xor edi edi +
mov [esp+48h+var_34] eax +
mov [esp+48h+var_30] edx +
mov [esp+48h+var_2C] ebx +
jmp loc_461B10  +
add edi 1 +
cmp edi 4Fh +
jz loc_461C75  +
lea eax [edi+edi*2] +
mov ebp ds:off_497100[eax*4] +
lea ebx ds:0[eax*4] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax esi +
jnz loc_461B04  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_44] eax +
call memcmp  +
test eax eax +
jnz loc_461B04  +
mov edx [esp+48h+var_30] +
mov edi ebx +
mov ebx [esp+48h+var_2C] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_45DD60  +
mov edx ds:off_497104[edi] +
test edx edx +
jz loc_461B71  +
cmp byte ptr [edx] 0 +
jnz loc_461D10  +
mov edx offset asc_496923 +
jmp loc_461A0F  +
mov eax [ebx] +
mov edx offset aOperator_2 +
mov [ebx+4] eax +
mov eax ebx +
call sub_45DD60  +
mov ecx [esp+48h+var_20] +
mov eax ebx +
lea edx [esp+48h+var_24] +
call sub_45DE90  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_461922  +
mov [esp+48h+var_48] eax +
call free  +
mov eax [ebx+4] +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
mov edx [ebx] +
mov [esp+48h+var_38] eax +
jmp loc_461930  +
lea eax [edx+3] +
sub esi 3 +
xor edi edi +
mov [esp+48h+var_34] eax +
mov [esp+48h+var_30] edx +
mov [esp+48h+var_2C] ebx +
jmp loc_461BFE  +
add edi 1 +
cmp edi 4Fh +
jz loc_461C75  +
lea eax [edi+edi*2] +
mov ebp ds:off_497100[eax*4] +
lea ebx ds:0[eax*4] +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax esi +
jnz loc_461BF6  +
mov eax [esp+48h+var_34] +
mov [esp+48h+var_40] esi +
mov [esp+48h+var_48] ebp +
mov [esp+48h+var_44] eax +
call memcmp  +
test eax eax +
jnz loc_461BF6  +
mov edx [esp+48h+var_30] +
mov edi ebx +
mov ebx [esp+48h+var_2C] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_45DD60  +
mov edx ds:off_497104[edi] +
test edx edx +
jnz loc_461A06  +
jmp loc_461922  +
cmp byte ptr [edx+3] 70h +
jnz loc_46196C  +
add edx 4 +
lea esi [esi+0] +
jmp loc_461907  +
mov edx [esp+48h+var_30] +
jmp loc_461930  +
cmp al 61h +
jnz loc_461930  +
cmp byte ptr [edx+5] 0 +
jnz loc_461930  +
mov esi offset off_497100 +
xor edi edi +
lea eax [edx+2] +
mov [esp+48h+var_30] ebx +
mov ebp eax +
mov ebx esi +
mov [esp+48h+var_34] edx +
jmp loc_461CB3  +
add edi 1 +
add ebx 0Ch +
cmp edi 4Fh +
jz loc_461D07  +
mov esi [ebx] +
mov [esp+48h+var_48] esi +
call strlen  +
cmp eax 3 +
jnz loc_461CA8  +
mov [esp+48h+var_40] 3 +
mov [esp+48h+var_44] ebp +
mov [esp+48h+var_48] esi +
call memcmp  +
test eax eax +
jnz loc_461CA8  +
mov edx [esp+48h+var_34] +
imul edi edi +
mov ebx [esp+48h+var_30] +
mov [ebx+4] edx +
mov eax ebx +
mov edx offset aOperator_1 +
call sub_45DD60  +
mov edx ds:off_497104[edi] +
test edx edx +
jnz loc_461A06  +
jmp loc_461922  +
mov edx [esp+48h+var_34] +
jmp loc_461930  +
mov eax ebx +
call sub_45DD60  +
jmp loc_461B71  +
***
push edi  +
push esi  +
mov esi 1 +
push ebx  +
mov ebx eax +
sub esp 6Ch +
lea eax [eax+20h] +
mov [esp+78h+var_54] eax +
lea eax [ebx+4] +
mov [esp+78h+var_5C] ecx +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_4C] 0 +
mov [esp+78h+var_64] 0 +
mov [esp+78h+var_58] 0 +
mov [esp+78h+var_50] eax +
mov edi [ebp+0] +
movsx eax byte ptr [edi] +
test al al +
jz loc_462375  +
lea edx [eax-30h] +
cmp dl 45h +
ja loc_462206  +
movzx edx dl +
jmp ds:off_496938[edx*4]  +
mov eax [esp+78h+var_60] +
lea ecx [esp+78h+var_30] +
mov edx ebp +
mov [esp+78h+var_70] 1 +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_34] 0 +
test eax eax +
cmovnz edi eax +
mov eax ebx +
mov [esp+78h+var_60] edi +
lea edi [esp+78h+var_3C] +
mov [esp+78h+var_78] edi +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_3C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_30] 0 +
call sub_45F050  +
test eax eax +
mov esi eax +
jnz loc_462340  +
test byte ptr [ebx] 4 +
mov eax offset asc_496448 +
mov edx offset a__1 +
cmovz edx eax +
lea eax [esp+78h+var_30] +
call sub_45DD60  +
mov edx [esp+78h+var_30] +
mov ecx [esp+78h+var_2C] +
cmp edx ecx +
jz loc_461E1E  +
sub ecx edx +
jnz loc_462430  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_462406  +
test byte ptr [ebx+28h] 1 +
jnz loc_462240  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_462240  +
mov eax [esp+78h+var_3C] +
test eax eax +
jz loc_461E64  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_38] 0 +
mov [esp+78h+var_34] 0 +
mov [esp+78h+var_3C] 0 +
mov eax [esp+78h+var_30] +
test eax eax +
jz loc_461E8C  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_30] 0 +
test esi esi +
setnz al  +
mov edi eax +
mov eax 1 +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_64] 1 +
jmp loc_461F39  +
test dword ptr [ebx] 300h +
jz loc_461EC4  +
mov ecx [esp+78h+var_4C] +
test ecx ecx +
jnz loc_462440  +
test dword ptr [ebx] 1000h +
jz loc_461F76  +
lea eax [edi+1] +
mov [ebp+0] eax +
movzx eax byte ptr [edi+1] +
test al al +
jz loc_461F2A  +
add edi 2 +
test ds:byte_495EE0[eax+eax] 4 +
jnz loc_461EFD  +
jmp loc_461F2A  +
add edi 1 +
test ds:byte_495EE0[eax+eax] 4 +
jz loc_461F2A  +
mov [ebp+0] edi +
movzx eax byte ptr [edi] +
test al al +
jnz loc_461EF0  +
jmp loc_461F2A  +
mov eax [esp+78h+var_60] +
test eax eax +
cmovz eax edi +
add edi 1 +
mov [ebp+0] edi +
mov [esp+78h+var_60] eax +
mov dword ptr [ebx+30h] 1 +
movzx eax byte ptr [esp+78h+var_64] +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
mov ecx edi +
test cl cl +
jz loc_461F6E  +
test al al +
jz loc_461F6E  +
test dword ptr [ebx] 2C00h +
jnz loc_462258  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_4614F0  +
mov [esp+78h+var_64] 0 +
mov [esp+78h+var_58] 1 +
mov esi eax +
test esi esi +
jnz loc_461D62  +
xor esi esi +
add esp 6Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 1 +
call sub_45F670  +
test eax eax +
mov esi eax +
jz loc_4621DE  +
mov eax [ebx+48h] +
mov ecx [ebp+0] +
test eax eax +
jnz loc_4621DE  +
sub ecx edi +
mov edx edi +
mov eax ebx +
call sub_45E1B0  +
jmp loc_4621DE  +
test dword ptr [ebx] 1000h +
jz loc_461F76  +
add edi 1 +
jmp loc_461FD7  +
test al al +
jz loc_461FE6  +
mov [ebp+0] edi +
movzx eax byte ptr [edi] +
mov edx edi +
add edi 1 +
cmp al 5Fh +
jnz loc_461FD3  +
test al al +
jz loc_461F76  +
add edx 1 +
mov [ebp+0] edx +
jmp loc_461F2A  +
call sub_45DA60  +
or [ebx+38h] eax +
mov eax [esp+78h+var_60] +
test eax eax +
cmovz eax edi +
add edi 1 +
mov [esp+78h+var_60] eax +
mov [ebp+0] edi +
jmp loc_461F2A  +
lea ecx [esp+78h+var_24] +
mov edx ebp +
mov eax ebx +
call sub_45FAD0  +
test eax eax +
mov esi eax +
jz loc_461E8C  +
test byte ptr [ebx] 4 +
mov eax offset asc_496448 +
mov edx offset a__1 +
cmovz edx eax +
lea eax [esp+78h+var_24] +
call sub_45DD60  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_462059  +
sub ecx edx +
jnz loc_4624F8  +
test edx edx +
jz loc_461E8C  +
mov [esp+78h+var_78] edx +
call free  +
jmp loc_461E8C  +
mov eax [esp+78h+var_60] +
mov dword ptr [ebx+34h] 0FFFFFFFFh +
mov [esp+78h+var_1C] 0 +
mov [esp+78h+var_20] 0 +
test eax eax +
cmovnz edi eax +
mov eax ebx +
mov [esp+78h+var_60] edi +
mov [esp+78h+var_24] 0 +
call sub_45D960  +
lea ecx [esp+78h+var_24] +
mov edx ebp +
mov edi eax +
mov eax ebx +
call sub_460E30  +
test eax eax +
jnz loc_462270  +
mov edx [esp+78h+var_24] +
xor edi edi +
xor esi esi +
test edx edx +
jz loc_4620CE  +
mov [esp+78h+var_78] edx +
call free  +
test esi esi +
jz loc_4620E0  +
mov eax [ebx+48h] +
mov ecx [ebp+0] +
test eax eax +
jz loc_4624D3  +
test dword ptr [ebx] 2300h +
jz loc_462360  +
mov eax [ebp+0] +
cmp byte ptr [eax] 46h +
jz loc_462360  +
mov eax 1 +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_64] 1 +
jmp loc_461F39  +
test dword ptr [ebx] 300h +
jz loc_461F76  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_70] 0 +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 0 +
call sub_45F050  +
test byte ptr [ebx+28h] 1 +
mov esi eax +
mov eax 1 +
cmovnz eax [esp+78h+var_4C] +
add dword ptr [ebp+0] 1 +
mov [esp+78h+var_4C] eax +
jmp loc_461F2A  +
add edi 1 +
mov [ebp+0] edi +
test dword ptr [ebx] 3C00h +
jnz loc_4623F4  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_4614F0  +
test eax eax +
mov esi eax +
jz loc_461F76  +
test dword ptr [ebx] 2100h +
jz loc_46219D  +
mov eax [ebp+0] +
cmp byte ptr [eax] 5Fh +
jz loc_462528  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_58] 1 +
and eax 1 +
jmp loc_461F3F  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
mov [esp+78h+var_74] 0 +
mov [esp+78h+var_78] 1 +
call sub_45F670  +
mov esi eax +
test dword ptr [ebx] 300h +
jnz loc_461E8C  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_461F39  +
test dword ptr [ebx] 300h +
jz loc_461F76  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_4614F0  +
mov [esp+78h+var_58] 1 +
mov esi eax +
movzx eax byte ptr [esp+78h+var_64] +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_461F39  +
mov ecx [esp+78h+var_38] +
mov edx edi +
mov eax [esp+78h+var_5C] +
call sub_45DE90  +
sub dword ptr [ebx+28h] 1 +
jmp loc_461E3C  +
mov edx [esp+78h+var_54] +
mov eax [esp+78h+var_50] +
call sub_45DAF0  +
jmp loc_461F4F  +
test byte ptr [ebx+28h] 1 +
mov esi [esp+78h+var_20] +
jnz loc_462280  +
test byte ptr [ebx+2Ch] 1 +
jz loc_4622B3  +
mov ecx [ebx+34h] +
mov edx [esp+78h+var_24] +
lea eax [ecx+1] +
cmp eax 1 +
jbe loc_462521  +
add ecx edx +
mov [esp+78h+var_20] ecx +
cmp edx ecx +
jz loc_4622A5  +
sub ecx edx +
jnz loc_4624A9  +
test byte ptr [ebx+2Ch] 1 +
jnz loc_46250A  +
sub dword ptr [ebx+28h] 1 +
mov edx [esp+78h+var_24] +
mov ecx esi +
mov eax 0 +
mov [esp+78h+var_20] esi +
sub ecx edx +
cmp esi edx +
cmovz ecx eax +
mov eax ebx +
call sub_45D9D0  +
mov eax [esp+78h+var_20] +
mov esi 1 +
mov edx [esp+78h+var_24] +
mov [esp+78h+var_78] edi +
mov edi 1 +
mov ecx eax +
sub ecx edx +
cmp edx eax +
mov eax 0 +
cmovz ecx eax +
lea eax [ebx+0Ch] +
call sub_45DBF0  +
mov eax offset asc_496448 +
mov edx offset a__1 +
test byte ptr [ebx] 4 +
cmovz edx eax +
mov eax [esp+78h+var_5C] +
call sub_45DD30  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_4620C2  +
sub ecx edx +
jz loc_4620C2  +
mov eax [esp+78h+var_5C] +
call sub_45DCD0  +
mov edx [esp+78h+var_24] +
jmp loc_4620C2  +
mov eax [ebx+48h] +
mov ecx [ebp+0] +
test eax eax +
jnz loc_461DF1  +
mov edx [esp+78h+var_60] +
mov eax ebx +
sub ecx edx +
call sub_45E1B0  +
jmp loc_461DF1  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
and eax 1 +
jmp loc_461F39  +
mov edx [esp+78h+var_58] +
test edx edx +
jnz loc_4624C6  +
test esi esi +
jz loc_4624C6  +
test dword ptr [ebx] 300h +
jnz loc_4624B7  +
test byte ptr [ebx] 1 +
jz loc_461F78  +
mov eax [ebx+30h] +
test eax eax +
jnz loc_4624E5  +
mov eax [ebx+38h] +
test eax eax +
jz loc_461F78  +
mov ecx [esp+78h+var_5C] +
mov edi [ecx+4] +
cmp [ecx] edi +
jz loc_4623CE  +
mov eax ecx +
mov edx offset asc_496431 +
call sub_45DD60  +
mov eax [ebx+38h] +
call sub_45DA90  +
test eax eax +
jz loc_461F78  +
cmp byte ptr [eax] 0 +
jz loc_461F78  +
mov edx eax +
mov eax [esp+78h+var_5C] +
call sub_45DD60  +
jmp loc_461F78  +
mov edx [esp+78h+var_54] +
mov eax [esp+78h+var_50] +
call sub_45DAF0  +
jmp loc_462172  +
mov edx offset asc_49644B +
mov eax edi +
call sub_45DD30  +
mov ecx [esp+78h+var_38] +
mov edx edi +
mov eax [esp+78h+var_5C] +
call sub_45DE90  +
sub dword ptr [ebx+2Ch] 1 +
jmp loc_461E28  +
mov eax [esp+78h+var_5C] +
call sub_45DCD0  +
jmp loc_461E1E  +
add edi 1 +
mov edx ebp +
mov [ebp+0] edi +
lea ecx [esp+78h+var_24] +
mov eax ebx +
call sub_45FAD0  +
mov edx [esp+78h+var_24] +
cmp edx [esp+78h+var_20] +
mov esi eax +
jz loc_462481  +
mov edx offset asc_496431 +
lea eax [esp+78h+var_24] +
call sub_45DD60  +
mov edx [esp+78h+var_24] +
mov ecx [esp+78h+var_20] +
cmp edx ecx +
jz loc_462481  +
sub ecx edx +
jnz loc_462589  +
test edx edx +
jz loc_46248D  +
mov [esp+78h+var_78] edx +
call free  +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_4C] 1 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_461F39  +
mov eax [esp+78h+var_5C] +
call sub_45DCD0  +
jmp loc_4622A5  +
mov ecx [esp+78h+var_5C] +
mov edx ebp +
mov eax ebx +
call sub_4614F0  +
mov esi eax +
test esi esi +
jnz loc_462395  +
jmp loc_461F78  +
mov edx [esp+78h+var_60] +
mov eax ebx +
sub ecx edx +
call sub_45E1B0  +
jmp loc_4620E0  +
mov eax [esp+78h+var_5C] +
mov edx offset aStatic +
call sub_45DD60  +
jmp loc_4623A9  +
mov eax [esp+78h+var_5C] +
call sub_45DCD0  +
mov edx [esp+78h+var_24] +
jmp loc_462059  +
mov eax [esp+78h+var_5C] +
mov edx offset asc_49644B +
call sub_45DD30  +
sub dword ptr [ebx+2Ch] 1 +
jmp loc_4622B3  +
mov ecx esi +
jmp loc_462299  +
add eax 1 +
mov edx ebp +
mov [ebp+0] eax +
lea ecx [esp+78h+var_30] +
mov eax ebx +
call sub_45FAD0  +
mov esi eax +
mov eax [esp+78h+var_30] +
test eax eax +
jz loc_462565  +
mov [esp+78h+var_78] eax +
call free  +
mov [esp+78h+var_2C] 0 +
mov [esp+78h+var_28] 0 +
mov [esp+78h+var_30] 0 +
movzx eax byte ptr [esp+78h+var_64] +
mov [esp+78h+var_60] 0 +
mov [esp+78h+var_58] 1 +
and eax 1 +
test esi esi +
setnz cl  +
mov edi ecx +
jmp loc_461F39  +
mov eax [esp+78h+var_5C] +
call sub_45DCD0  +
mov edx [esp+78h+var_24] +
jmp loc_462481  +
***
push edi  +
push esi  +
push ebx  +
mov ebx ecx +
sub esp 8Ch +
mov ecx [edx] +
mov esi [esp+98h+arg_0] +
mov [esp+98h+var_80] eax +
mov [esp+98h+var_84] ecx +
cmp byte ptr [esi+2] 0 +
jz loc_46272B  +
mov eax [eax] +
and eax 3C00h +
mov [esp+98h+var_7C] eax +
jnz loc_462710  +
lea eax [esi+2] +
mov [esp+98h+var_94] offset unk_496A50 +
mov [esp+98h+var_98] eax +
call strstr  +
test eax eax +
jz loc_462710  +
mov ecx [ebx+4] +
mov edx ebx +
lea eax [esp+98h+var_78] +
mov [esp+98h+var_70] 0 +
lea edi [esp+98h+var_6C] +
mov [esp+98h+var_74] 0 +
mov [esp+98h+var_78] 0 +
call sub_45DE90  +
mov eax [esp+98h+var_7C] +
mov ecx 15h +
mov edx [esp+98h+var_80] +
stos   +
lea eax [esp+98h+var_6C] +
call sub_45DED0  +
mov edi [esp+98h+var_80] +
cmp byte ptr [esi+2] 0 +
jz loc_4626D7  +
mov [esp+98h+var_98] esi +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_461820  +
test eax eax +
jz loc_46266A  +
mov ecx ebx +
mov edx ebp +
mov eax edi +
call sub_461D20  +
test eax eax +
jnz loc_462738  +
mov eax [esp+98h+var_84] +
lea edx [esp+98h+var_78] +
mov ecx [esp+98h+var_74] +
mov [ebp+0] eax +
mov eax [ebx] +
mov [ebx+4] eax +
mov eax ebx +
call sub_45DE90  +
lea edx [esp+98h+var_6C] +
mov eax edi +
call sub_45DED0  +
movzx edx byte ptr [esi+2] +
lea eax [esi+2] +
test dl dl +
jnz loc_4626A7  +
jmp loc_4626D7  +
add eax 1 +
test dl dl +
jz loc_4626D7  +
cmp dl 5Fh +
movzx edx byte ptr [eax+1] +
jnz loc_4626A0  +
cmp dl 5Fh +
jnz loc_4626A0  +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_4626C4  +
jmp loc_4626CC  +
movzx edx byte ptr [eax+1] +
add eax 1 +
cmp dl 5Fh +
jz loc_4626C0  +
test dl dl +
lea esi [eax-2] +
jnz loc_462645  +
xor edi edi +
lea eax [esp+98h+var_6C] +
call sub_45DB40  +
lea eax [esp+98h+var_6C] +
call sub_45D8A0  +
mov edx [esp+98h+var_78] +
mov eax edi +
test edx edx +
jz loc_462720  +
mov [esp+98h+var_98] edx +
mov [esp+98h+var_84] edi +
call free  +
mov eax [esp+98h+var_84] +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+98h+var_80] +
mov ecx ebx +
mov edx ebp +
mov [esp+98h+var_98] esi +
call sub_461820  +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 8Ch +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi eax +
jmp loc_4626D9  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 6Ch +
mov ebp [edx] +
mov [esp+6Ch+var_5C] eax +
mov [esp+6Ch+var_58] ecx +
cmp byte ptr [ebp+0] 5Fh +
jz loc_4627F0  +
mov edi offset a__thunk_ +
mov ecx 8 +
mov esi ebp +
cmps   +
jz loc_4628F0  +
mov edi offset a__t +
mov ecx 3 +
mov esi ebp +
cmps   +
jnz loc_4627E0  +
movzx eax byte ptr [ebp+3] +
cmp al 69h +
setz cl  +
cmp al 66h +
jnz loc_462980  +
test cl cl +
jnz loc_462988  +
mov edi offset aType_infoFunct +
lea eax [ebp+4] +
mov [ebx] eax +
movzx eax byte ptr [ebp+4] +
cmp al 51h +
jz loc_462AB0  +
cmp al 74h +
jz loc_462AD5  +
cmp al 4Bh +
jz loc_462AB0  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
call sub_45FAD0  +
mov esi eax +
test esi esi +
jz loc_4627E0  +
mov eax [ebx] +
cmp byte ptr [eax] 0 +
jz loc_462BB0  +
xor esi esi +
add esp 6Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx esi byte ptr [ebp+1] +
mov [esp+6Ch+var_6C] offset byte_476858 +
mov eax esi +
movsx edi al +
mov [esp+6Ch+var_68] edi +
call strchr  +
test eax eax +
jz loc_462817  +
cmp byte ptr [ebp+2] 5Fh +
jz loc_462BD0  +
mov eax esi +
cmp al 5Fh +
jz loc_462992  +
mov eax esi +
cmp al 76h +
jz loc_462A80  +
mov [esp+6Ch+var_68] edi +
mov [esp+6Ch+var_6C] offset a0123456789qt +
call strchr  +
test eax eax +
jz loc_46275D  +
mov [esp+6Ch+var_68] offset byte_476858 +
mov [esp+6Ch+var_6C] ebp +
call strpbrk  +
test eax eax +
mov [esp+6Ch+var_54] eax +
jz loc_46275D  +
lea eax [ebp+1] +
mov [ebx] eax +
movzx eax byte ptr [ebp+1] +
cmp al 51h +
jz loc_462B88  +
cmp al 74h +
jz loc_462B02  +
cmp al 4Bh +
jz loc_462B88  +
mov eax ebx +
call sub_45D770  +
test eax eax +
mov ebp eax +
js loc_4627E0  +
mov edx [ebx] +
mov [esp+6Ch+var_6C] edx +
mov [esp+6Ch+var_50] edx +
call strlen  +
mov edx [esp+6Ch+var_50] +
cmp ebp eax +
jg loc_4627E0  +
cmp ebp 0Ah +
jle loc_462CA0  +
mov edi offset a_global__0 +
mov ecx 8 +
mov esi edx +
cmps   +
jnz loc_4628CE  +
cmp byte ptr [edx+9] 4Eh +
jz loc_462CB0  +
mov eax [esp+6Ch+var_58] +
mov ecx ebp +
call sub_45DCA0  +
mov edx [ebx] +
lea edi [edx+ebp] +
mov [ebx] edi +
mov esi 1 +
jmp loc_462B34  +
lea edx [ebp+8] +
mov eax ebx +
mov [ebx] edx +
call sub_45D770  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_4627E0  +
mov eax [ebx] +
lea edx [eax+1] +
mov eax [esp+6Ch+var_5C] +
mov [ebx] edx +
call sub_462D10  +
test eax eax +
mov edi eax +
jz loc_4627E0  +
neg esi  +
mov [esp+6Ch+var_64] esi +
lea esi [esp+6Ch+var_3E] +
mov [esp+6Ch+var_68] offset aVirtualFunctio +
mov [esp+6Ch+var_6C] esi +
call sprintf  +
cmp byte ptr [esp+6Ch+var_3E] 0 +
jnz loc_462C47  +
cmp byte ptr [edi] 0 +
jz loc_462956  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
call sub_45DD60  +
mov [esp+6Ch+var_6C] edi +
call free  +
mov esi [ebx] +
mov [esp+6Ch+var_6C] esi +
call strlen  +
add esi eax +
mov [ebx] esi +
add esp 6Ch +
mov esi 1 +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test cl cl +
jz loc_4627E0  +
mov edi offset aType_infoNode +
jmp loc_46279F  +
cmp byte ptr [ebp+2] 76h +
jnz loc_46275D  +
cmp byte ptr [ebp+3] 74h +
jnz loc_46275D  +
cmp byte ptr [ebp+4] 5Fh +
jnz loc_46275D  +
add ebp 5 +
mov [ebx] ebp +
mov esi 1 +
mov edi ebp +
movzx eax byte ptr [edi] +
test al al +
jz loc_462A65  +
cmp al 51h +
jz loc_462BE7  +
cmp al 74h +
jz loc_462C10  +
cmp al 4Bh +
jz loc_462BE7  +
test ds:byte_495EE0[eax+eax] 4 +
jnz loc_462C57  +
mov [esp+6Ch+var_68] offset byte_476858 +
mov [esp+6Ch+var_6C] edi +
call strcspn  +
mov ebp eax +
test ebp ebp +
jnz loc_462C8C  +
add edi ebp +
mov [ebx] edi +
mov [esp+6Ch+var_68] offset byte_476858 +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
test esi esi +
jz loc_4627E0  +
test eax eax +
jz loc_462C40  +
cmp edi eax +
lea esi [esi+0] +
jnz loc_4627E0  +
mov eax [esp+6Ch+var_5C] +
mov edx offset a__1 +
test byte ptr [eax] 4 +
mov eax offset asc_496448 +
cmovz edx eax +
mov eax [esp+6Ch+var_58] +
call sub_45DD60  +
mov eax [ebx] +
lea edi [eax+1] +
mov [ebx] edi +
movzx eax byte ptr [edi] +
test al al +
jnz loc_4629C7  +
test esi esi +
jz loc_4627E2  +
mov eax [esp+6Ch+var_58] +
mov edx offset aVirtualTable +
call sub_45DD60  +
jmp loc_4627E2  +
cmp byte ptr [ebp+2] 74h +
jnz loc_46275D  +
movsx eax byte ptr [ebp+3] +
mov [esp+6Ch+var_6C] offset byte_476858 +
mov [esp+6Ch+var_68] eax +
call strchr  +
test eax eax +
jz loc_46275D  +
add ebp 4 +
mov [ebx] ebp +
jmp loc_4629B5  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45F670  +
mov esi eax +
jmp loc_4627D1  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45F050  +
mov esi eax +
jmp loc_4627D1  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45F050  +
mov esi eax +
test esi esi +
jz loc_4627E0  +
mov edi [ebx] +
cmp edi [esp+6Ch+var_54] +
jnz loc_4627E0  +
mov eax [esp+6Ch+var_5C] +
add edi 1 +
mov edx offset a__1 +
mov [ebx] edi +
test byte ptr [eax] 4 +
mov eax offset asc_496448 +
cmovz edx eax +
mov eax [esp+6Ch+var_58] +
call sub_45DD60  +
mov ebp [ebx] +
mov [esp+6Ch+var_6C] ebp +
call strlen  +
test eax eax +
mov edi eax +
jz loc_462B7F  +
mov ecx eax +
mov eax [esp+6Ch+var_58] +
mov edx ebp +
call sub_45DCA0  +
mov ebp [ebx] +
add edi ebp +
mov [ebx] edi +
jmp loc_4627E2  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45F670  +
mov esi eax +
jmp loc_462B2A  +
cmp byte ptr [edi] 0 +
jz loc_4627E2  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
call sub_45DD60  +
jmp loc_4627E2  +
mov eax [esp+6Ch+var_5C] +
lea edx [ebp+3] +
mov esi 1 +
mov [ebx] edx +
add dword ptr [eax+2Ch] 1 +
jmp loc_4627E2  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45F670  +
mov edi [ebx] +
mov esi eax +
jmp loc_462A0B  +
mov ecx [esp+6Ch+var_58] +
mov edx ebx +
mov eax [esp+6Ch+var_5C] +
mov [esp+6Ch+var_64] 1 +
mov [esp+6Ch+var_68] 1 +
mov [esp+6Ch+var_6C] 0 +
call sub_45F050  +
mov edi [ebx] +
mov esi eax +
jmp loc_462A0B  +
mov edi [ebx] +
jmp loc_4629BC  +
mov eax [esp+6Ch+var_58] +
mov edx esi +
call sub_45DD60  +
jmp loc_462946  +
mov eax ebx +
call sub_45D770  +
mov edi [ebx] +
mov [esp+6Ch+var_6C] edi +
mov ebp eax +
call strlen  +
cmp ebp eax +
jle loc_4629FF  +
mov [esp+6Ch+var_68] offset byte_476858 +
mov esi 1 +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
jmp loc_462A23  +
mov eax [esp+6Ch+var_58] +
mov edx edi +
mov ecx ebp +
call sub_45DCA0  +
mov edi [ebx] +
jmp loc_462A07  +
test ebp ebp +
jz loc_4628DB  +
jmp loc_4628CE  +
movsx eax byte ptr [edx+8] +
cmp al [edx+0Ah] +
jnz loc_4628CE  +
mov [esp+6Ch+var_68] eax +
mov [esp+6Ch+var_6C] offset byte_476858 +
call strchr  +
mov edx [esp+6Ch+var_50] +
test eax eax +
jz loc_4628CE  +
mov eax [esp+6Ch+var_58] +
mov edx offset aAnonymous +
call sub_45DD60  +
mov edi [ebx] +
mov [esp+6Ch+var_68] offset byte_476858 +
add edi ebp +
mov [ebx] edi +
mov [esp+6Ch+var_6C] edi +
call strpbrk  +
mov [esp+6Ch+var_54] eax +
jmp loc_4628E0  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [eax+28h] +
test edx edx +
mov [esp+48h+var_2C] edx +
mov dword ptr [ebx+28h] 0 +
mov dword ptr [ebx+3Ch] 0 +
mov [esp+48h+var_40] eax +
mov eax [ebx+2Ch] +
mov dword ptr [ebx+2Ch] 0 +
mov [esp+48h+var_3C] eax +
mov eax [ebx+30h] +
mov [esp+48h+var_38] eax +
mov eax [ebx+38h] +
mov dword ptr [ebx+38h] 0 +
mov [esp+48h+var_34] eax +
jz loc_4630A0  +
cmp byte ptr [edx] 0 +
jz loc_4630A0  +
test dword ptr [ebx] 300h +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_24] 0 +
jnz loc_462E58  +
mov [esp+48h+var_48] ebp +
call strlen  +
cmp eax 6 +
jbe loc_462EF0  +
mov edi offset a_imp__ +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_462F80  +
mov edi offset a__imp_ +
mov ecx 6 +
mov esi ebp +
cmps   +
jz loc_462F80  +
cmp eax 0Ah +
jbe loc_462EF0  +
mov edi offset a_global__0 +
mov ecx 8 +
mov esi ebp +
cmps   +
jnz loc_462EF0  +
movsx eax byte ptr [ebp+8] +
mov [esp+48h+var_48] offset byte_476858 +
mov [esp+48h+var_44] eax +
call strchr  +
test eax eax +
jz loc_4632B1  +
movzx ecx byte ptr [ebp+0Ah] +
cmp [eax] cl +
mov [esp+48h+var_30] ebp +
jnz loc_462F92  +
movzx eax byte ptr [ebp+9] +
cmp al 44h +
jz loc_4632BA  +
cmp al 49h +
mov [esp+48h+var_30] ebp +
jnz loc_462F92  +
add ebp 0Bh +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+28h] 2 +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_462740  +
test eax eax +
jnz loc_46332F  +
mov eax [esp+48h+var_2C] +
mov [esp+48h+var_30] eax +
jmp loc_462F92  +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_462740  +
test eax eax +
mov esi eax +
jz loc_462F40  +
mov ebp [esp+48h+var_2C] +
cmp byte ptr [ebp+0] 0 +
jnz loc_463002  +
mov eax [ebx+28h] +
cmp eax 2 +
jz loc_463083  +
cmp dword ptr [ebx+2Ch] 2 +
jz loc_463145  +
cmp dword ptr [ebx+3Ch] 1 +
jz loc_463160  +
mov eax ebx +
call sub_45DB40  +
test esi esi +
jnz loc_463018  +
mov edx [esp+48h+var_24] +
xor eax eax +
test edx edx +
jz loc_462EC8  +
mov [esp+48h+var_48] edx +
mov [esp+48h+var_30] eax +
call free  +
mov eax [esp+48h+var_30] +
mov edi [esp+48h+var_40] +
mov ecx [esp+48h+var_3C] +
mov [ebx+28h] edi +
mov edi [esp+48h+var_38] +
mov [ebx+2Ch] ecx +
mov ecx [esp+48h+var_34] +
mov [ebx+30h] edi +
mov [ebx+38h] ecx +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test dword ptr [ebx] 3800h +
mov [esp+48h+var_30] ebp +
jz loc_462F92  +
mov edi offset a__std__ +
mov ecx 7 +
mov esi ebp +
cmps   +
jz loc_463180  +
mov esi [esp+48h+var_30] +
mov edi offset a__sti__ +
mov ecx 7 +
cmps   +
jnz loc_462F92  +
mov eax [esp+48h+var_30] +
mov dword ptr [ebx+28h] 2 +
add eax 7 +
mov [esp+48h+var_2C] eax +
mov [esp+48h+var_30] eax +
jmp loc_462F92  +
mov eax ebx +
call sub_45DB40  +
mov eax ebx +
call sub_45D8A0  +
mov eax [esp+48h+var_24] +
test eax eax +
jz loc_462F76  +
mov [esp+48h+var_48] eax +
call free  +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
mov ebp [esp+48h+var_2C] +
jmp loc_462D8C  +
add ebp 6 +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+3Ch] 1 +
mov [esp+48h+var_30] ebp +
mov eax [esp+48h+var_30] +
mov edx eax +
jmp loc_462FAD  +
cmp byte ptr [eax+1] 5Fh +
lea edx [eax+1] +
jz loc_463034  +
mov [esp+48h+var_44] 5Fh +
mov [esp+48h+var_48] edx +
call strchr  +
test eax eax +
jnz loc_462FA0  +
cmp dword ptr [ebx+28h] 2 +
jz loc_462FD3  +
xor esi esi +
cmp dword ptr [ebx+2Ch] 2 +
jnz loc_462E95  +
mov esi [esp+48h+var_2C] +
test esi esi +
jz loc_462FE4  +
cmp byte ptr [esi] 0 +
jnz loc_463197  +
mov [esp+48h+var_48] esi +
call strlen  +
lea ebp [esi+eax] +
mov [esp+48h+var_2C] ebp +
cmp byte ptr [ebp+0] 0 +
mov esi 1 +
jz loc_462E7F  +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_461D20  +
mov esi eax +
jmp loc_462E7F  +
lea eax [esp+48h+var_24] +
mov ecx 1 +
mov edx offset unk_496340 +
call sub_45DCA0  +
mov eax [esp+48h+var_24] +
jmp loc_462EC8  +
test edx edx +
mov esi eax +
jz loc_462FC1  +
mov [esp+48h+var_44] offset a__2 +
mov [esp+48h+var_48] esi +
call strspn  +
cmp eax 2 +
jle loc_46305B  +
lea esi [esi+eax-2] +
test esi esi +
jz loc_462FC1  +
mov eax [ebx+30h] +
test eax eax +
jz loc_4630A7  +
movzx eax byte ptr [esi] +
movzx edx al +
test ds:byte_495EE0[edx+edx] 4 +
jnz loc_46307A  +
cmp al 74h +
jnz loc_462FC1  +
mov ebp [esp+48h+var_30] +
jmp loc_462FF3  +
mov edx offset aGlobalConstr_0 +
lea eax [esp+48h+var_24] +
call sub_45DD30  +
mov dword ptr [ebx+28h] 0 +
jmp loc_462E9F  +
xor eax eax +
jmp loc_462EC8  +
cmp [esp+48h+var_30] esi +
jz loc_4631AB  +
mov eax [ebx] +
test ah 8 +
jz loc_4630F0  +
cmp byte ptr [esi+2] 70h +
jnz loc_4630F0  +
cmp byte ptr [esi+3] 74h +
jnz loc_4630F0  +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_48] eax +
call strlen  +
lea edx [esp+48h+var_24] +
mov [esp+48h+var_48] edx +
lea edx [esp+48h+var_2C] +
mov ecx eax +
mov eax ebx +
call sub_4606E0  +
mov ebp [esp+48h+var_2C] +
jmp loc_462FF3  +
test ah 20h +
jz loc_463110  +
movzx eax byte ptr [esi+2] +
cmp al 74h +
jz loc_4631F4  +
cmp al 70h +
jnz loc_463110  +
movzx eax byte ptr [esi+3] +
sub eax 73h +
cmp al 1 +
jbe loc_4630C4  +
cmp [esp+48h+var_30] esi +
jz loc_463205  +
cmp byte ptr [esi+2] 0 +
jz loc_462FC1  +
mov [esp+48h+var_48] esi +
lea ecx [esp+48h+var_24] +
mov eax ebx +
lea edx [esp+48h+var_2C] +
call sub_4625A0  +
test eax eax +
mov esi eax +
jz loc_462E7F  +
jmp loc_462E71  +
mov edx offset aGlobalDestru_0 +
lea eax [esp+48h+var_24] +
call sub_45DD30  +
mov dword ptr [ebx+2Ch] 0 +
jmp loc_462E9F  +
mov edx offset aImportStubFor +
lea eax [esp+48h+var_24] +
call sub_45DD30  +
mov dword ptr [ebx+3Ch] 0 +
jmp loc_462E9F  +
add ebp 7 +
mov [esp+48h+var_2C] ebp +
mov dword ptr [ebx+2Ch] 2 +
mov [esp+48h+var_30] ebp +
jmp loc_462F92  +
mov edx esi +
lea eax [esp+48h+var_24] +
call sub_45DD60  +
mov esi [esp+48h+var_2C] +
jmp loc_462FE4  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax+2] +
movzx edx al +
test ds:byte_495EE0[edx+edx] 4 +
jz loc_463280  +
mov eax [ebx] +
test ah 1Ch +
jz loc_463298  +
mov eax [esp+48h+var_30] +
add eax 2 +
mov [esp+48h+var_2C] eax +
lea eax [esp+48h+var_2C] +
call sub_45D770  +
mov esi [esp+48h+var_2C] +
test esi esi +
jnz loc_462FDB  +
jmp loc_462FE4  +
cmp byte ptr [esi+3] 6Dh +
jnz loc_463110  +
nop   +
jmp loc_4630C4  +
mov eax [esp+48h+var_30] +
movzx eax byte ptr [eax+2] +
movzx edx al +
test ds:byte_495EE0[edx+edx] 4 +
jnz loc_46311A  +
cmp al 74h +
jz loc_463124  +
test dword ptr [ebx] 3C00h +
jnz loc_4632CF  +
mov eax [esp+48h+var_30] +
cmp byte ptr [eax] 5Fh +
jnz loc_46324C  +
nop   +
lea esi [esi+0] +
add eax 1 +
cmp byte ptr [eax] 5Fh +
jz loc_463240  +
mov [esp+48h+var_30] eax +
mov eax [esp+48h+var_30] +
mov [esp+48h+var_44] offset unk_496A50 +
mov [esp+48h+var_48] eax +
call strstr  +
test eax eax +
jz loc_462FC1  +
cmp byte ptr [eax+2] 0 +
jz loc_462FC1  +
mov [esp+48h+var_48] eax +
jmp loc_463127  +
cmp al 51h +
jz loc_463296  +
cmp al 74h +
jz loc_463296  +
cmp al 4Bh +
jz loc_463296  +
cmp al 48h +
nop   +
jnz loc_4630B1  +
mov eax [ebx] +
test ah 3Ch +
jnz loc_4632A1  +
add dword ptr [ebx+28h] 1 +
mov ebp [esp+48h+var_30] +
add ebp 2 +
mov [esp+48h+var_2C] ebp +
jmp loc_462FF3  +
mov [esp+48h+var_30] ebp +
jmp loc_462F92  +
mov eax ebp +
add eax 0Bh +
mov [esp+48h+var_2C] eax +
mov dword ptr [ebx+2Ch] 2 +
jmp loc_462E34  +
mov esi [esp+48h+var_30] +
mov edi offset a__vtbl__ +
mov ecx 8 +
cmps   +
jnz loc_463232  +
mov esi [esp+48h+var_30] +
movzx edx byte ptr [esi+8] +
mov eax esi +
add eax 8 +
mov [esp+48h+var_28] eax +
test dl dl +
jz loc_463338  +
lea eax [esp+48h+var_28] +
call sub_45D770  +
cmp eax 0FFFFFFFFh +
jz loc_463232  +
add eax [esp+48h+var_28] +
mov [esp+48h+var_28] eax +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jnz loc_4632F6  +
cmp byte ptr [eax+1] 5Fh +
jnz loc_4632FA  +
lea edx [eax+2] +
mov [esp+48h+var_28] edx +
movzx edx byte ptr [eax+2] +
jmp loc_4632F6  +
mov ebp [esp+48h+var_2C] +
jmp loc_462FF3  +
mov eax [esp+48h+var_2C] +
lea edx [eax+8] +
movzx eax byte ptr [eax+8] +
mov [esp+48h+var_2C] edx +
test al al +
jz loc_4633C3  +
lea eax [esp+48h+var_2C] +
call sub_45D770  +
cmp eax 0FFFFFFFFh +
mov esi eax +
jz loc_463232  +
mov edi [esp+48h+var_2C] +
mov [esp+48h+var_48] edi +
call strlen  +
cmp esi eax +
jg loc_463232  +
test esi esi +
jnz loc_4633B0  +
add esi edi +
mov [esp+48h+var_2C] esi +
movzx eax byte ptr [esi] +
cmp al 5Fh +
jnz loc_463347  +
cmp byte ptr [esi+1] 5Fh +
jnz loc_46334B  +
mov edx offset asc_496448 +
lea eax [esp+48h+var_24] +
call sub_45DD30  +
mov eax [esp+48h+var_2C] +
lea edx [eax+2] +
mov [esp+48h+var_2C] edx +
movzx eax byte ptr [eax+2] +
jmp loc_463347  +
mov edx edi +
mov ecx esi +
lea eax [esp+48h+var_24] +
call sub_45DCD0  +
mov edi [esp+48h+var_2C] +
jmp loc_463377  +
mov edx offset aVirtualTable +
lea eax [esp+48h+var_24] +
call sub_45DD60  +
mov ebp [esp+48h+var_2C] +
jmp loc_462FF3  +
***
push esi  +
xor esi esi +
push ebx  +
sub esp 14h +
mov edx [esp+20h] +
lea ebx [esp+24h] +
test edx edx +
jz loc_463407  +
mov [esp] edx +
add ebx 4 +
call strlen  +
mov edx [ebx-4] +
add esi eax +
test edx edx +
jnz loc_4633F3  +
add esp 14h +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea edi [esp+38h] +
mov esi [esp+30h] +
test ebx ebx +
jz loc_46344D  +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_463427  +
mov byte ptr [esi] 0 +
mov eax [esp+30h] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov esi ds:dword_49F990 +
mov ebx [esp+30h] +
lea edi [esp+34h] +
test ebx ebx +
jz loc_4634A6  +
lea esi [esi+0] +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_463480  +
mov byte ptr [esi] 0 +
mov eax ds:dword_49F990 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_0] +
lea esi [esp+1Ch+arg_4] +
test ebx ebx +
jz loc_463535  +
mov eax ebx +
xor edi edi +
mov [esp+1Ch+var_1C] eax +
add esi 4 +
call strlen  +
add edi eax +
mov eax [esi-4] +
test eax eax +
jnz loc_4634D7  +
add edi 1 +
mov [esp+1Ch+var_1C] edi +
lea edi [esp+1Ch+arg_4] +
call sub_45B8D0  +
mov [esp+1Ch+var_10] eax +
mov esi eax +
mov [esp+1Ch+var_1C] ebx +
add edi 4 +
call strlen  +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_1C] esi +
mov [esp+1Ch+var_14] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_463500  +
mov byte ptr [esi] 0 +
mov eax [esp+1Ch+var_10] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_1C] 1 +
call sub_45B8D0  +
mov esi eax +
mov [esp+1Ch+var_10] eax +
jmp loc_463526  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+34h] +
lea esi [esp+38h] +
test ebx ebx +
jz loc_4635D9  +
mov eax ebx +
xor ebp ebp +
mov [esp] eax +
add esi 4 +
call strlen  +
add ebp eax +
mov eax [esi-4] +
test eax eax +
jnz loc_463567  +
add ebp 1 +
mov [esp] ebp +
lea edi [esp+38h] +
call sub_45B8D0  +
mov [esp+0Ch] eax +
mov esi eax +
mov [esp] ebx +
add edi 4 +
call strlen  +
mov [esp+4] ebx +
mov [esp] esi +
mov [esp+8] eax +
mov ebp eax +
call memcpy  +
mov ebx [edi-4] +
add esi ebp +
test ebx ebx +
jnz loc_463590  +
mov eax [esp+30h] +
mov byte ptr [esi] 0 +
test eax eax +
jz loc_4635CD  +
mov eax [esp+30h] +
mov [esp] eax +
call free  +
mov eax [esp+0Ch] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov dword ptr [esp] 1 +
call sub_45B8D0  +
mov esi eax +
mov [esp+0Ch] eax +
jmp loc_4635B6  +
***
push ebx  +
sub esp 14h +
test eax eax +
jz loc_46361E  +
mov edx [eax] +
lea ebx [eax+4] +
test edx edx +
jz loc_463616  +
mov [esp+18h+var_18] edx +
add ebx 4 +
call free  +
mov edx [ebx-4] +
test edx edx +
jnz loc_463604  +
mov [esp+18h+var_18] esi +
call free  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
mov esi edx +
push ebx  +
sub esp 10h +
lea eax [edx+1] +
mov [esp+18h+var_18] eax +
call malloc  +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov ebx eax +
mov [esp+18h+var_18] eax +
call memcpy  +
mov eax ebx +
mov byte ptr [ebx+esi] 0 +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 1Ch +
movzx ebx byte ptr [eax+1] +
mov [esp+28h+var_1C] edx +
xor edx edx +
cmp bl 3Ah +
jnz loc_4636A6  +
jmp loc_4637BF  +
cmp eax 5Ch +
jz loc_463731  +
cmp eax 2Fh +
lea esi [esi+0] +
jz loc_463731  +
movsx eax byte ptr [ecx] +
add ecx 1 +
test eax eax +
jnz loc_463690  +
lea eax ds:8[edx*4] +
mov [esp+28h+var_28] eax +
call malloc  +
test eax eax +
mov edi eax +
jz loc_463808  +
xor ebp ebp +
cmp bl 3Ah +
jz loc_463790  +
mov edx esi +
jmp loc_4636E4  +
cmp eax 5Ch +
jz loc_463753  +
cmp eax 2Fh +
jz loc_463753  +
mov edx ebx +
lea ebx [edx+1] +
movsx eax byte ptr [ebx-1] +
test eax eax +
jnz loc_4636D8  +
sub edx esi +
mov eax ebp +
test edx edx +
jle loc_463706  +
lea ebx [edi+eax*4] +
mov eax esi +
call sub_463630  +
add ebp 1 +
mov [ebx] eax +
mov eax [edi+ebp*4-4] +
mov dword ptr [edi+ebp*4] 0 +
test eax eax +
jz loc_46380F  +
mov eax [esp+28h+var_1C] +
test eax eax +
jz loc_4637DC  +
mov [eax] ebp +
mov eax edi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movsx eax byte ptr [ecx] +
add edx 1 +
cmp al 5Ch +
jnz loc_46374A  +
nop   +
lea esi [esi+0] +
add ecx 1 +
movsx eax byte ptr [ecx] +
cmp al 5Ch +
jz loc_463740  +
cmp al 2Fh +
jz loc_463740  +
jmp loc_4636A9  +
movzx eax byte ptr [ebx] +
cmp al 2Fh +
jnz loc_4637E6  +
nop   +
add ebx 1 +
movzx eax byte ptr [ebx] +
cmp al 5Ch +
jz loc_463760  +
cmp al 2Fh +
jz loc_463760  +
mov edx ebx +
mov eax esi +
sub edx esi +
add ebp 1 +
call sub_463630  +
test eax eax +
mov [edi+ebp*4-4] eax +
jz loc_4637F3  +
mov esi ebx +
jmp loc_4636D4  +
movzx eax byte ptr [esi+2] +
cmp al 5Ch +
jz loc_4637A0  +
cmp al 2Fh +
jnz loc_4636D4  +
mov edx 3 +
mov eax esi +
call sub_463630  +
test eax eax +
mov [edi] eax +
jz loc_46381D  +
add esi 3 +
mov ebp 1 +
jmp loc_4636D4  +
movzx eax byte ptr [eax+2] +
cmp al 5Ch +
jz loc_4637CF  +
cmp al 2Fh +
jnz loc_4636A6  +
lea ecx [esi+3] +
mov edx 1 +
jmp loc_4636A6  +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 5Ch +
jz loc_463760  +
jmp loc_46376E  +
mov eax edi +
mov dword ptr [edi+ebp*4] 0 +
call sub_4635F0  +
xor eax eax +
jmp loc_463729  +
xor eax eax +
jmp loc_463729  +
mov eax edi +
call sub_4635F0  +
xor eax eax +
jmp loc_463729  +
mov [esp+28h+var_28] edi +
call free  +
xor eax eax +
jmp loc_463729  +
***
push edi  +
push esi  +
mov esi eax +
push ebx  +
sub esp 7Ch +
test eax eax +
mov [ebp+var_5C] edx +
mov [ebp+var_60] ecx +
jz loc_463B10  +
test edx edx +
jz loc_463B10  +
mov ebx [ebp+var_60] +
test ebx ebx +
jz loc_463B10  +
mov [esp+88h+var_88] eax +
call sub_45BAA0  +
cmp eax esi +
mov [ebp+var_64] eax +
jz loc_463B20  +
mov ecx [ebp+arg_0] +
mov [esp+88h+var_88] esi +
test ecx ecx +
jnz loc_463990  +
call _strdup  +
mov ebx eax +
test ebx ebx +
jz loc_463B10  +
lea edx [ebp+var_50] +
mov eax ebx +
call sub_463670  +
mov [esp+88h+var_88] ebx +
mov esi eax +
mov [ebp+var_64] eax +
call free  +
test esi esi +
jz loc_463B10  +
mov eax [ebp+var_5C] +
lea edx [ebp+var_4C] +
call sub_463670  +
test eax eax +
mov ebx eax +
jz loc_463B00  +
mov eax [ebp+var_50] +
lea esi [eax-1] +
cmp esi [ebp+var_4C] +
mov [ebp+var_50] esi +
jnz loc_46390D  +
test esi esi +
jle loc_463B00  +
mov [ebp+var_5C] esi +
xor edi edi +
mov esi [ebp+var_64] +
jmp loc_4638EC  +
add edi 1 +
cmp [ebp+var_5C] edi +
jz loc_463B00  +
mov eax [ebx+edi*4] +
mov [esp+88h+var_84] eax +
mov eax [esi+edi*4] +
mov [esp+88h+var_88] eax +
call strcmp  +
test eax eax +
jz loc_4638E0  +
mov esi [ebp+var_5C] +
cmp esi edi +
jz loc_463B00  +
mov eax [ebp+var_60] +
lea edx [ebp+var_48] +
call sub_463670  +
test eax eax +
mov edx eax +
mov [ebp+var_60] eax +
jz loc_463B00  +
mov eax [ebp+var_4C] +
mov ecx [ebp+var_48] +
mov [ebp+var_68] eax +
cmp ecx eax +
cmovle eax ecx +
test eax eax +
mov [ebp+var_6C] ecx +
jle loc_463C98  +
xor edi edi +
mov esi edx +
mov [ebp+var_5C] eax +
jmp loc_46394F  +
add edi 1 +
cmp edi [ebp+var_5C] +
jz loc_4639A0  +
mov eax [esi+edi*4] +
mov [esp+88h+var_84] eax +
mov eax [ebx+edi*4] +
mov [esp+88h+var_88] eax +
call strcmp  +
test eax eax +
jz loc_463947  +
xor esi esi +
test edi edi +
jnz loc_4639A0  +
mov eax [ebp+var_64] +
call sub_4635F0  +
mov eax ebx +
call sub_4635F0  +
mov eax [ebp+var_60] +
call sub_4635F0  +
lea esp [ebp-0Ch] +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call sub_45C720  +
mov ebx eax +
jmp loc_463884  +
mov eax [ebp+var_50] +
test eax eax +
jle loc_463C6D  +
mov edx [ebp+var_64] +
mov [ebp+var_5C] ebx +
mov [ebp+var_70] edi +
mov esi edx +
lea eax [edx+eax*4] +
xor edx edx +
mov edi esi +
mov ebx edx +
mov esi eax +
mov eax [edi] +
add edi 4 +
mov [esp+88h+var_88] eax +
call strlen  +
add ebx eax +
cmp edi esi +
jnz loc_4639C1  +
mov esi ebx +
mov edi [ebp+var_70] +
mov ebx [ebp+var_5C] +
mov eax [ebp+var_68] +
mov edx [ebp+var_6C] +
sub eax edi +
lea eax [eax+eax*2] +
add eax esi +
cmp edx edi +
jle loc_463A1D  +
mov ecx [ebp+var_60] +
mov [ebp+var_5C] ebx +
mov ebx eax +
mov [ebp+var_68] edi +
lea esi [ecx+edi*4] +
lea edx [ecx+edx*4] +
mov edi esi +
mov esi edx +
mov eax [edi] +
add edi 4 +
mov [esp+88h+var_88] eax +
call strlen  +
add ebx eax +
cmp edi esi +
jnz loc_463A02  +
mov eax ebx +
mov edi [ebp+var_68] +
mov ebx [ebp+var_5C] +
mov esi eax +
add esi 1 +
mov [esp+88h+var_88] esi +
call malloc  +
test eax eax +
mov esi eax +
jz loc_46396B  +
mov byte ptr [eax] 0 +
mov eax [ebp+var_50] +
xor ecx ecx +
test eax eax +
mov [ebp+var_5C] eax +
jle loc_463A6D  +
mov [ebp+var_68] ebx +
mov ebx [ebp+var_64] +
mov [ebp+var_6C] edi +
mov edi ecx +
nop   +
mov eax [ebx+edi*4] +
add edi 1 +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
call strcat  +
cmp edi [ebp+var_5C] +
jnz loc_463A50  +
mov ebx [ebp+var_68] +
mov edi [ebp+var_6C] +
mov edx esi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_463A6F  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovnz ecx edx +
add al al +
mov eax [ebp+var_4C] +
sbb ecx 3 +
cmp edi eax +
jge loc_463CA7  +
sub eax edi +
lea eax [eax+eax*2] +
add eax ecx +
nop   +
mov edx 2E2Eh +
add ecx 3 +
mov [ecx-3] dx +
mov byte ptr [ecx-1] 0 +
cmp ecx eax +
mov byte ptr [ecx-1] 2Fh +
jnz loc_463AB0  +
mov byte ptr [eax] 0 +
mov eax [ebp+var_48] +
cmp edi eax +
mov [ebp+var_5C] eax +
jge loc_46396B  +
mov [ebp+var_68] ebx +
mov ebx [ebp+var_60] +
nop   +
mov eax [ebx+edi*4] +
add edi 1 +
mov [esp+88h+var_88] esi +
mov [esp+88h+var_84] eax +
call strcat  +
cmp edi [ebp+var_5C] +
jnz loc_463AE0  +
mov ebx [ebp+var_68] +
jmp loc_46396B  +
xor esi esi +
mov [ebp+var_60] 0 +
jmp loc_46396B  +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+88h+var_88] offset aPath +
call getenv  +
test eax eax +
jz loc_46386F  +
mov [esp+88h+var_88] eax +
mov [ebp+var_68] eax +
call strlen  +
lea ebx [eax+1] +
mov eax 2 +
cmp ebx 1 +
cmovbe ebx eax +
mov eax [ebp+var_64] +
mov [esp+88h+var_88] eax +
call strlen  +
lea eax [ebx+eax+23h] +
and eax 0FFFFFFF0h +
call sub_472FB0  +
mov edx [ebp+var_68] +
sub esp eax +
lea edi [esp+88h+var_70+3] +
mov ebx edx +
and edi 0FFFFFFF0h +
mov [ebp+var_68] edi +
movzx eax byte ptr [ebx] +
test al al +
jz loc_463B90  +
cmp al 3Bh +
jz loc_463B90  +
add ebx 1 +
movzx eax byte ptr [ebx] +
test al al +
jnz loc_463B7C  +
lea esi [esi+0] +
cmp ebx edx +
jz loc_463C80  +
mov esi ebx +
sub esi edx +
mov [esp+88h+var_80] esi +
mov [esp+88h+var_84] edx +
mov [esp+88h+var_88] edi +
call memcpy  +
movzx eax byte ptr [ebx-1] +
cmp al 5Ch +
jz loc_463C74  +
cmp al 2Fh +
jz loc_463C74  +
mov byte ptr [edi+esi] 2Fh +
mov byte ptr [edi+esi+1] 0 +
mov eax [ebp+var_64] +
mov [esp+88h+var_88] edi +
mov [esp+88h+var_84] eax +
call strcat  +
mov [esp+88h+var_84] 0 +
mov [esp+88h+var_88] edi +
call ds:_access  +
test eax eax +
jz loc_463C3C  +
mov edx edi +
mov ecx [edx] +
add edx 4 +
lea eax [ecx-1010101h] +
not ecx  +
and eax ecx +
and eax 80808080h +
jz loc_463BEF  +
mov ecx eax +
shr ecx 10h +
test eax 8080h +
cmovz eax ecx +
lea ecx [edx+2] +
cmovz edx ecx +
add al al +
sbb edx 3 +
mov dword ptr [edx] 6578652Eh +
mov byte ptr [edx+4] 0 +
mov [esp+88h+var_84] 0 +
mov [esp+88h+var_88] edi +
call ds:_access  +
test eax eax +
jnz loc_463C5E  +
lea eax [ebp+var_48] +
mov [esp+88h+var_84] eax +
mov [esp+88h+var_88] edi +
call ds:_stati64  +
test eax eax +
js loc_463C5E  +
movzx eax [ebp+var_42] +
and ax 0F000h +
cmp ax 8000h +
jz loc_463C9F  +
cmp byte ptr [ebx] 0 +
jz loc_463C90  +
add ebx 1 +
mov edx ebx +
jmp loc_463B75  +
xor esi esi +
jmp loc_4639DC  +
mov byte ptr [edi+esi] 0 +
jmp loc_463BC9  +
mov byte ptr [edi] 2Eh +
mov byte ptr [edi+1] 2Fh +
mov byte ptr [edi+2] 0 +
jmp loc_463BC9  +
mov esi [ebp+var_64] +
jmp loc_46386F  +
xor esi esi +
jmp loc_46396B  +
mov esi [ebp+var_68] +
jmp loc_46386F  +
mov eax ecx +
jmp loc_463AC8  +
***
mov eax [esp+arg_0] +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov [esp+arg_0] 1 +
jmp sub_463830  +
***
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov edx [esp+8] +
mov dword ptr [esp+4] 0 +
jmp sub_463830  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ecx [esp+2Ch+arg_0] +
movzx eax byte ptr [ecx] +
lea esi [ecx+1] +
test al al +
jz loc_464155  +
mov ebx [esp+2Ch+arg_8] +
mov edi [esp+2Ch+arg_8] +
mov ebp [esp+2Ch+arg_4] +
and ebx 1 +
mov [esp+2Ch+var_1C] ebx +
mov ebx [esp+2Ch+arg_8] +
and edi 10h +
mov [esp+2Ch+var_18] ebp +
and ebx 4 +
mov [esp+2Ch+var_14] ebx +
mov ebx [esp+2Ch+arg_8] +
and ebx 2 +
mov [esp+2Ch+var_20] ebx +
test edi edi +
jz loc_463D44  +
movzx eax ds:byte_495DE0[eax] +
cmp al 3Fh +
jz loc_463E15  +
jbe loc_463DB0  +
cmp al 5Bh +
jz loc_463E82  +
cmp al 5Ch +
jnz loc_463E62  +
mov ebp [esp+2Ch+var_20] +
test ebp ebp +
jnz loc_463FC5  +
test edi edi +
movzx edx byte ptr [ecx+1] +
lea esi [ecx+2] +
jz loc_463FD2  +
movzx edx ds:byte_495DE0[edx] +
mov eax [esp+2Ch+var_18] +
movzx eax byte ptr [eax] +
movzx eax ds:byte_495DE0[eax] +
cmp eax edx +
jnz loc_463E08  +
movzx eax byte ptr [esi] +
lea edx [esi+1] +
add [esp+2Ch+var_18] 1 +
test al al +
jz loc_464120  +
mov ecx esi +
mov esi edx +
jmp loc_463D39  +
cmp al 2Ah +
jnz loc_463E62  +
test byte ptr [esp+2Ch+arg_8] 4 +
mov ebp [esp+2Ch+var_18] +
jnz loc_463F95  +
movzx edx byte ptr [ecx+1] +
lea esi [ecx+2] +
cmp dl 3Fh +
jnz loc_46415B  +
mov eax [esp+2Ch+arg_8] +
and eax 1 +
jmp loc_463DF3  +
add esi 1 +
movzx edx byte ptr [esi-1] +
add ebp 1 +
cmp dl 2Ah +
jnz loc_464014  +
test eax eax +
jz loc_463DFD  +
cmp byte ptr [ebp+0] 2Fh +
jz loc_463E08  +
cmp dl 3Fh +
jnz loc_463DE0  +
cmp byte ptr [ebp+0] 0 +
jnz loc_463DE0  +
mov eax 1 +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+2Ch+var_18] +
movzx eax byte ptr [eax] +
test al al +
jz loc_463E08  +
mov ebx [esp+2Ch+var_1C] +
test ebx ebx +
jz loc_463E2C  +
cmp al 2Fh +
jz loc_463E08  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
jz loc_463D92  +
cmp al 2Eh +
jnz loc_463D92  +
mov eax [esp+2Ch+var_18] +
cmp eax [esp+2Ch+arg_4] +
jz loc_463E08  +
mov edx [esp+2Ch+var_1C] +
test edx edx +
jz loc_463D92  +
cmp byte ptr [eax-1] 2Fh +
jnz loc_463D92  +
jmp loc_463E08  +
mov ebx [esp+2Ch+var_18] +
test edi edi +
movzx edx byte ptr [ebx] +
jz loc_463D8E  +
movzx edx ds:byte_495DE0[edx] +
cmp eax edx +
jz loc_463D92  +
jmp loc_463E08  +
mov eax [esp+2Ch+var_18] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_463E08  +
mov ebx [esp+2Ch+var_14] +
test ebx ebx +
jnz loc_463FE6  +
movzx eax byte ptr [ecx+1] +
movzx ebp dl +
cmp al 5Eh +
setz bl  +
cmp al 21h +
setz al  +
add ecx 2 +
or ebx eax +
movzx eax bl +
test eax eax +
cmovnz esi ecx +
mov [esp+2Ch+var_10] eax +
lea ecx [esi+1] +
movzx eax byte ptr [esi] +
jmp loc_463EE8  +
cmp dl ss:byte_495DE0[ebp] +
movzx ecx ss:byte_495DE0[ebp] +
ja loc_463EDE  +
cmp ecx ebx +
jle loc_4640D1  +
cmp al 5Dh +
jz loc_4640C0  +
mov ecx esi +
mov esi [esp+2Ch+var_20] +
movzx edx al +
test esi esi +
jnz loc_463EFB  +
cmp al 5Ch +
jz loc_463F80  +
test edi edi +
jz loc_463F06  +
movzx edx ds:byte_495DE0[edx] +
test al al +
jz loc_463E08  +
test edi edi +
movzx eax byte ptr [ecx] +
lea esi [ecx+1] +
jz loc_463F1F  +
movzx eax ds:byte_495DE0[eax] +
mov ebx [esp+2Ch+var_1C] +
test ebx ebx +
jz loc_463F2F  +
cmp al 2Fh +
jz loc_463E08  +
cmp al 2Dh +
movzx ebx dl +
jz loc_463F42  +
test edi edi +
jnz loc_463EC7  +
cmp edx ebp +
jg loc_463EDE  +
mov ecx ebp +
jmp loc_463ED6  +
movzx ebx byte ptr [ecx+1] +
cmp bl 5Dh +
jz loc_463F90  +
mov esi [esp+2Ch+var_20] +
lea eax [ecx+2] +
test esi esi +
jnz loc_463F5F  +
cmp bl 5Ch +
jz loc_4640B4  +
test bl bl +
jz loc_463E08  +
test edi edi +
jz loc_463F72  +
movzx ebx ds:byte_495DE0[ebx] +
lea esi [eax+1] +
movzx eax byte ptr [eax] +
jmp loc_463F36  +
movzx edx byte ptr [ecx] +
add ecx 1 +
jmp loc_463EFB  +
movzx ebx dl +
jmp loc_463F36  +
cmp byte ptr [ebp+0] 2Eh +
jnz loc_463DC7  +
cmp [esp+2Ch+arg_4] ebp +
jz loc_463E08  +
test byte ptr [esp+2Ch+arg_8] 1 +
jz loc_463DC7  +
cmp byte ptr [ebp-1] 2Fh +
jnz loc_463DC7  +
nop   +
jmp loc_463E08  +
test edi edi +
mov edx 5Ch +
jnz loc_463D80  +
mov eax [esp+2Ch+var_18] +
movzx eax byte ptr [eax] +
cmp eax edx +
jz loc_463D92  +
jmp loc_463E08  +
cmp dl 2Eh +
jnz loc_463E9D  +
cmp eax [esp+2Ch+arg_4] +
jz loc_463E08  +
mov ebp [esp+2Ch+var_1C] +
test ebp ebp +
jz loc_463E9D  +
cmp byte ptr [eax-1] 2Fh +
jnz loc_463E9D  +
jmp loc_463E08  +
cmp dl 3Fh +
jz loc_463DF3  +
xor eax eax +
test dl dl +
jz loc_463E0D  +
test byte ptr [esp+2Ch+arg_8] 2 +
movzx ebx dl +
jnz loc_46403A  +
cmp dl 5Ch +
jz loc_46414B  +
test edi edi +
jz loc_464045  +
movzx ebx ds:byte_495DE0[ebx] +
movzx eax byte ptr [ebp+0] +
sub esi 1 +
test al al +
jz loc_463E08  +
mov ecx [esp+2Ch+arg_8] +
mov [esp+2Ch+var_1C] esi +
mov esi ebx +
mov ebx edx +
and ecx 0FFFFFFFBh +
mov [esp+2Ch+var_20] ecx +
jmp loc_46407F  +
add ebp 1 +
movzx eax byte ptr [ebp+0] +
test al al +
jz loc_463E08  +
cmp bl 5Bh +
jz loc_464093  +
test edi edi +
jz loc_46408F  +
movzx eax ds:byte_495DE0[eax] +
cmp eax esi +
jnz loc_464070  +
mov eax [esp+2Ch+var_20] +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_24] eax +
mov eax [esp+2Ch+var_1C] +
mov [esp+2Ch+var_2C] eax +
call sub_463CF0  +
test eax eax +
jnz loc_464070  +
jmp loc_463E0D  +
lea eax [ecx+3] +
movzx ebx byte ptr [ecx+2] +
jmp loc_463F5F  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jnz loc_463D92  +
jmp loc_463E08  +
cmp al 5Dh +
jz loc_464109  +
test al al +
jz loc_463E08  +
mov ecx [esp+2Ch+var_20] +
mov edx esi +
add esi 1 +
test ecx ecx +
movzx eax byte ptr [edx] +
jnz loc_4640F1  +
cmp al 5Ch +
jz loc_464102  +
cmp al 5Dh +
jz loc_464109  +
test al al +
jz loc_463E08  +
mov edx esi +
nop   +
jmp loc_4640E3  +
lea esi [edx+2] +
mov edx esi +
jmp loc_4640E3  +
mov eax [esp+2Ch+var_10] +
test eax eax +
jz loc_463D92  +
jmp loc_463E08  +
mov ebp [esp+2Ch+var_18] +
movzx edx byte ptr [ebp+0] +
xor eax eax +
test dl dl +
jz loc_463E0D  +
test byte ptr [esp+2Ch+arg_8] 8 +
jz loc_463E08  +
cmp dl 2Fh +
jnz loc_463E08  +
jmp loc_463E0D  +
movzx ebx byte ptr [esi] +
nop   +
jmp loc_46403A  +
mov ebp [esp+2Ch+arg_4] +
jmp loc_464124  +
cmp dl 2Ah +
jz loc_463DD7  +
jmp loc_46401D  +
***
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov ebx [esp+3Ch+arg_4] +
mov [esp+3Ch+var_3C] eax +
call strlen  +
lea edx [ebx+5] +
cmp edx eax +
jge loc_46442B  +
mov ecx [esp+3Ch+arg_0] +
sub eax ebx +
mov edi offset aXxxxxx +
lea ebx [ecx+eax-6] +
mov ecx 6 +
mov esi ebx +
cmps   +
jnz loc_46442B  +
lea eax [esp+3Ch+var_14] +
mov [esp+3Ch+var_38] 0 +
mov [esp+3Ch+var_3C] eax +
call sub_474330  +
mov eax [esp+3Ch+var_10] +
mov ebp [esp+3Ch+var_14] +
cdq   +
shld edx eax +
mov edi ebp +
shl eax 10h +
sar edi 1Fh +
xor ebp eax +
mov eax edx +
xor eax edi +
mov [esp+3Ch+var_20] eax +
call _getpid  +
xor ebp eax +
mov ecx eax +
mov eax [esp+3Ch+var_20] +
sar ecx 1Fh +
mov esi ebp +
mov ebp 7FFFh +
xor eax ecx +
mov edi eax +
add esi ds:dword_49F5A8 +
adc edi ds:dword_49F5AC +
mov ds:dword_49F5A8 esi +
mov ds:dword_49F5AC edi +
jmp loc_46426C  +
call ds:__imp__errno  +
cmp dword ptr [eax] 11h +
jz loc_464242  +
call ds:__imp__errno  +
cmp dword ptr [eax] 15h +
jnz loc_464417  +
mov esi ds:dword_49F5A8 +
mov edi ds:dword_49F5AC +
add esi 1E61h +
adc edi 0 +
sub ebp 1 +
mov ds:dword_49F5A8 esi +
mov ds:dword_49F5AC edi +
jz loc_464417  +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
call sub_4732E0  +
movzx eax ds:byte_497600[eax] +
mov [ebx] al +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
call sub_473430  +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov esi eax +
mov edi edx +
mov [esp+3Ch+var_38] edx +
call sub_4732E0  +
movzx eax ds:byte_497600[eax] +
mov [ebx+1] al +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
call sub_473430  +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov esi eax +
mov edi edx +
mov [esp+3Ch+var_38] edx +
call sub_4732E0  +
movzx eax ds:byte_497600[eax] +
mov [ebx+2] al +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
call sub_473430  +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov esi eax +
mov edi edx +
mov [esp+3Ch+var_38] edx +
call sub_4732E0  +
movzx eax ds:byte_497600[eax] +
mov [ebx+3] al +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
call sub_473430  +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov esi eax +
mov edi edx +
mov [esp+3Ch+var_38] edx +
call sub_4732E0  +
movzx eax ds:byte_497600[eax] +
mov [ebx+4] al +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] esi +
mov [esp+3Ch+var_38] edi +
call sub_473430  +
mov [esp+3Ch+var_34] 3Eh +
mov [esp+3Ch+var_30] 0 +
mov [esp+3Ch+var_3C] eax +
mov [esp+3Ch+var_38] edx +
call sub_4732E0  +
movzx eax ds:byte_497600[eax] +
mov [ebx+5] al +
mov eax [esp+3Ch+arg_0] +
mov [esp+3Ch+var_34] 180h +
mov [esp+3Ch+var_38] 8502h +
mov [esp+3Ch+var_3C] eax +
call _open  +
test eax eax +
js loc_464228  +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+arg_0] +
mov byte ptr [eax] 0 +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 3Ch +
mov eax 0FFFFFFFFh +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
cmp edx 4Bh +
ja loc_464497  +
push ebp  +
push edi  +
push esi  +
push ebx  +
mov ebx eax +
jmp ds:off_497640[edx*4]  +
test ecx ecx +
jz loc_464493  +
mov esi [ebx+14h] +
xor eax eax +
cmp esi [ebx+18h] +
jge loc_464482  +
mov ebp [ebx+10h] +
lea edi [esi+esi*2] +
add esi 1 +
mov [ebx+14h] esi +
lea edi [ebp+edi*4+0] +
test edi edi +
jz loc_464482  +
mov eax [esp+10h+arg_0] +
mov [edi] edx +
mov [edi+4] ecx +
mov [edi+8] eax +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jz loc_464493  +
mov eax [esp+10h+arg_0] +
test eax eax +
jnz loc_464456  +
xor eax eax +
jmp loc_464482  +
xor eax eax +
retn   +
***
push ebx  +
mov ebx [eax+14h] +
cmp ebx [eax+18h] +
jge loc_4644C6  +
mov esi [eax+10h] +
lea edi [ebx+ebx*2] +
add ebx 1 +
mov [eax+14h] ebx +
lea esi [esi+edi*4] +
test esi esi +
jz loc_4644C6  +
test edx edx +
jz loc_4644C6  +
test ecx ecx +
jnz loc_4644D0  +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
retn   +
mov dword ptr [esi] 0 +
mov eax esi +
mov [esi+4] edx +
mov [esi+8] ecx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 4 +
mov eax [eax+0Ch] +
movzx eax byte ptr [eax] +
jmp loc_464545  +
test dl dl +
jnz loc_464551  +
cmp al 4Bh +
jnz loc_464590  +
add dword ptr [ebx+0Ch] 1 +
cmp edi 1 +
sbb edx edx +
add dword ptr [ebx+30h] 6 +
and edx 0FFFFFFFDh +
add edx 1Eh +
xor ecx ecx +
mov eax ebx +
mov [esp+10h+var_10] 0 +
call sub_464440  +
test eax eax +
mov [esi] eax +
jz loc_464585  +
lea esi [eax+4] +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
cmp al 72h +
setz dl  +
cmp al 56h +
setz cl  +
jnz loc_464507  +
add dword ptr [ebx+0Ch] 1 +
test dl dl +
jz loc_464570  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Ch +
add dword ptr [ebx+30h] 9 +
jmp loc_464526  +
test cl cl +
jz loc_464517  +
cmp edi 1 +
sbb edx edx +
and edx 0FFFFFFFDh +
add edx 1Dh +
add dword ptr [ebx+30h] 9 +
jmp loc_464526  +
add esp 4 +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jnz loc_4645D3  +
cmp al 46h +
jnz loc_4645D3  +
cmp esi ebp +
jnz loc_4645BA  +
lea esi [esi+0] +
jmp loc_4645D3  +
cmp eax 1Bh +
jz loc_4645E0  +
cmp eax 19h +
jnz loc_4645B3  +
mov dword ptr [ebp+0] 1Ch +
add ebp 4 +
cmp esi ebp +
jz loc_4645D3  +
mov ebp [ebp+0] +
mov eax [ebp+0] +
cmp eax 1Ah +
jnz loc_4645A2  +
mov dword ptr [ebp+0] 1Dh +
add ebp 4 +
cmp esi ebp +
jnz loc_4645BA  +
add esp 4 +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebp+0] 1Eh +
jmp loc_4645B3  +
***
sub esp 4 +
mov ecx [ebx+0Ch] +
mov eax edx +
cmp byte ptr [ecx] 52h +
setz dl  +
cmp byte ptr [ecx] 4Fh +
jnz loc_464630  +
test dl dl +
jnz loc_464634  +
add dword ptr [ebx+30h] 3 +
mov edx 20h +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov ecx eax +
mov eax ebx +
mov [esp+4+var_4] 0 +
call sub_464440  +
add esp 4 +
pop ebx  +
retn   +
test dl dl +
jz loc_464629  +
add dword ptr [ebx+30h] 2 +
mov edx 1Fh +
jmp loc_464613  +
***
push esi  +
mov edi edx +
push ebx  +
mov esi eax +
mov ebx ecx +
jz loc_464667  +
lea esi [esi+0] +
cmp dword ptr [ebx] 4Bh +
ja loc_464667  +
mov ecx [ebx] +
jmp ds:off_497770[ecx*4]  +
mov ebx [ebx+8] +
test ebx ebx +
jnz loc_464650  +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov ebx [ebx+4] +
jmp loc_464663  +
mov ecx [ebx+4] +
cmp dword ptr [ecx] 5 +
jnz loc_464683  +
add dword ptr [edi] 1 +
mov ecx [ebx+4] +
mov edx edi +
mov eax esi +
call sub_464640  +
mov ebx [ebx+8] +
jmp loc_464663  +
add dword ptr [esi] 1 +
mov ecx [ebx+4] +
jmp loc_464683  +
***
mov ecx [eax+100h] +
cmp ecx 0FFh +
jz loc_4646D0  +
lea ebx [ecx+1] +
mov [eax+100h] ebx +
mov [eax+ecx] dl +
mov [eax+104h] dl +
add esp 28h +
pop ebx  +
retn   +
mov ebx [eax+10Ch] +
mov ecx [eax+108h] +
mov byte ptr [eax+0FFh] 0 +
mov [esp+28h+var_C] edx +
mov [esp+28h+var_20] ebx +
mov ebx 1 +
mov [esp+28h+var_28] eax +
mov [esp+28h+var_10] eax +
mov [esp+28h+var_24] 0FFh +
call ecx  +
mov eax [esp+28h+var_10] +
xor ecx ecx +
mov edx [esp+28h+var_C] +
add dword ptr [eax+120h] 1 +
jmp loc_4646B5  +
***
push esi  +
mov esi eax +
push ebx  +
mov eax [eax] +
movsx ecx byte ptr [eax] +
cmp cl 6Eh +
jz loc_464764  +
lea eax [ecx-30h] +
cmp al 9 +
ja loc_464773  +
mov eax [esi] +
lea edx [eax+1] +
xor eax eax +
nop   +
lea eax [eax+eax*4] +
mov [esi] edx +
lea eax [ecx+eax*2-30h] +
movsx ecx byte ptr [edx] +
add edx 1 +
lea ebx [ecx-30h] +
cmp bl 9 +
jbe loc_464740  +
mov edx eax +
neg edx  +
test edi edi +
pop ebx  +
cmovnz eax edx +
pop esi  +
pop edi  +
retn   +
lea edx [eax+1] +
mov di 1 +
mov [esi] edx +
movsx ecx byte ptr [eax+1] +
jmp loc_464731  +
xor eax eax +
jmp loc_464757  +
***
mov edx [eax+14h] +
cmp edx [eax+18h] +
jge loc_4647B5  +
push ebx  +
mov ecx [eax+10h] +
lea ebx [edx+edx*2] +
add edx 1 +
mov [eax+14h] edx +
lea ebx [ecx+ebx*4] +
test ebx ebx +
jz loc_4647B1  +
mov dword ptr [ebx] 40h +
add eax 0Ch +
call sub_464720  +
mov [ebx+4] eax +
mov eax ebx +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
xor eax eax +
retn   +
***
mov ebx eax +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_4647E8  +
cmp al 6Eh +
jz loc_4647E1  +
lea eax [ebx+0Ch] +
call sub_464720  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_4647F2  +
mov eax 0FFFFFFFFh +
pop ebx  +
retn   +
xor eax eax +
add edx 1 +
mov [ebx+0Ch] edx +
pop ebx  +
retn   +
add eax 1 +
jmp loc_4647EA  +
***
mov ebx eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 54h +
jz loc_464811  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_4647C0  +
test eax eax +
js loc_46480C  +
mov ecx [ebx+14h] +
add dword ptr [ebx+28h] 1 +
cmp ecx [ebx+18h] +
jge loc_46480C  +
mov edx [ebx+10h] +
lea esi [ecx+ecx*2] +
add ecx 1 +
mov [ebx+14h] ecx +
lea edx [edx+esi*4] +
test edx edx +
jz loc_46480C  +
mov [edx+4] eax +
mov eax edx +
mov dword ptr [edx] 5 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [eax+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_464860  +
mov eax 1 +
retn   +
add edx 1 +
add eax 0Ch +
mov [eax] edx +
call sub_464720  +
not eax  +
shr eax 1Fh +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
lea eax [eax+0Ch] +
call sub_464720  +
test eax eax +
mov esi eax +
jle loc_464934  +
mov edi [ebx+0Ch] +
mov eax [ebx+4] +
sub eax edi +
cmp esi eax +
jg loc_464938  +
test byte ptr [ebx+8] 4 +
lea eax [edi+esi] +
mov [ebx+0Ch] eax +
jnz loc_4648F0  +
cmp esi 9 +
jle loc_4648D7  +
mov [esp+10h+var_8] 8 +
mov [esp+10h+var_C] offset a_global_ +
mov [esp+10h+var_10] edi +
call memcmp  +
test eax eax +
jz loc_464900  +
mov ecx esi +
mov edx edi +
mov eax ebx +
call sub_4644A0  +
mov [ebx+2Ch] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp byte ptr [eax] 24h +
jnz loc_4648B6  +
add eax 1 +
mov [ebx+0Ch] eax +
jmp loc_4648B6  +
movzx eax byte ptr [edi+8] +
cmp al 2Eh +
jz loc_464910  +
cmp al 5Fh +
jz loc_464910  +
cmp al 24h +
jnz loc_4648D7  +
cmp byte ptr [edi+9] 4Eh +
jnz loc_4648D7  +
mov eax [ebx+30h] +
mov ecx 15h +
mov edx offset aAnonymousNames +
add eax 16h +
sub eax esi +
mov [ebx+30h] eax +
mov eax ebx +
call sub_4644A0  +
jmp loc_4648E2  +
xor eax eax +
jmp loc_4648E5  +
xor eax eax +
lea esi [esi+0] +
jmp loc_4648E2  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov esi [eax+0Ch] +
mov ebp [eax+2Ch] +
cmp byte ptr [esi] 42h +
jnz loc_46498E  +
add esi 1 +
mov eax ebx +
mov [ebx+0Ch] esi +
call sub_464880  +
mov ecx edi +
mov edx 4Ah +
mov [esp+24h+var_24] eax +
mov eax ebx +
call sub_464440  +
mov esi [ebx+0Ch] +
cmp byte ptr [esi] 42h +
mov edi eax +
jz loc_464966  +
mov [ebx+2Ch] ebp +
add esp 1Ch +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 53h +
jz loc_4649C0  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov esi edx +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jnz loc_464A10  +
xor edx edx +
mov ecx [ebx+8] +
shr ecx 3 +
and ecx 1 +
test esi esi +
jz loc_4649EF  +
test cl cl +
jnz loc_4649EF  +
mov eax [ebx+0Ch] +
movzx eax byte ptr [eax] +
sub eax 43h +
cmp al 1 +
setbe cl  +
movzx ecx cl +
mov eax offset aT_0 +
cmp dl [eax] +
jz loc_464AA4  +
add eax 1Ch +
cmp eax offset aSignedChar +
jnz loc_4649F7  +
jmp loc_4649B1  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax+1] +
lea eax [edx-30h] +
cmp al 9 +
ja loc_464B7A  +
cmp dl 5Fh +
jz loc_464AA0  +
lea ecx [edx-30h] +
xor eax eax +
cmp cl 9 +
ja loc_464A63  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-30h] +
cmp eax ecx +
ja loc_4649B1  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_464A78  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_464A80  +
mov eax ecx +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_464A34  +
lea ecx [edx-41h] +
cmp cl 19h +
ja loc_4649B1  +
lea ecx [eax+eax*8] +
lea ecx [edx+ecx*4-37h] +
jmp loc_464A3B  +
xor edx edx +
mov eax ecx +
jmp loc_464A5B  +
add ecx 1 +
cmp ecx [ebx+20h] +
jnb loc_4649B1  +
mov eax [ebx+1Ch] +
add dword ptr [ebx+28h] 1 +
mov eax [eax+ecx*4] +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
jmp loc_464A83  +
mov edi [eax+14h] +
test edi edi +
mov [esp+1Ch+var_14] edi +
jz loc_464B6A  +
mov edx [ebx+14h] +
mov ebp [ebx+18h] +
mov edi [eax+18h] +
mov [esp+1Ch+var_18] 0 +
cmp edx ebp +
mov [esp+1Ch+var_10] edi +
jge loc_464AF7  +
mov esi [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea edi [esi+edi*4] +
test edi edi +
jz loc_464AF7  +
mov esi [esp+1Ch+var_14] +
mov dword ptr [edi] 18h +
mov [esp+1Ch+var_18] edi +
mov [edi+4] esi +
mov esi [esp+1Ch+var_10] +
mov [edi+8] esi +
mov edi [esp+1Ch+var_18] +
mov [ebx+2Ch] edi +
test ecx ecx +
jz loc_464B72  +
mov esi [eax+0Ch] +
mov ecx [eax+10h] +
add [ebx+30h] ecx +
xor eax eax +
cmp edx ebp +
jge loc_464B30  +
mov eax [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+edi*4] +
test eax eax +
jz loc_464B30  +
mov dword ptr [eax] 18h +
mov [eax+4] esi +
mov [eax+8] ecx +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 42h +
jnz loc_4649B3  +
mov edx eax +
mov eax ebx +
call sub_464950  +
test eax eax +
jz loc_4649B1  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_4649B3  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_4649B3  +
mov ebp [ebx+18h] +
mov edx [ebx+14h] +
jmp loc_464AFE  +
mov esi [eax+4] +
mov ecx [eax+8] +
jmp loc_464B08  +
cmp dl 5Fh +
jz loc_464A25  +
lea eax [edx-41h] +
cmp al 19h +
jbe loc_464A2A  +
nop   +
jmp loc_4649D0  +
***
push ebx  +
mov ebx eax +
jnz loc_464BBE  +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jnz loc_464BB5  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
movsx edx byte ptr [eax] +
cmp edx 68h +
jz loc_464BF0  +
cmp edx 76h +
jnz loc_464BB0  +
lea esi [ebx+0Ch] +
mov eax esi +
call sub_464720  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jnz loc_464BB0  +
add eax 1 +
mov [ebx+0Ch] eax +
mov eax esi +
call sub_464720  +
jmp loc_464BF8  +
lea eax [ebx+0Ch] +
call sub_464720  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jnz loc_464BB2  +
add edx 1 +
mov al 1 +
mov [ebx+0Ch] edx +
jmp loc_464BB2  +
***
mov ecx [eax+110h] +
test ecx ecx +
jz loc_464C57  +
mov eax [ecx+4] +
mov edx [edx] +
mov eax [eax+8] +
test eax eax +
jz loc_464C50  +
cmp dword ptr [eax] 2Fh +
jnz loc_464C50  +
cmp edx 0 +
jg loc_464C3B  +
jmp loc_464C47  +
cmp dword ptr [eax] 2Fh +
jnz loc_464C50  +
test edx edx +
jz loc_464C53  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jnz loc_464C32  +
retn   +
jz loc_464C53  +
lea esi [esi+0] +
xor eax eax +
retn   +
mov eax [eax+4] +
retn   +
mov dword ptr [eax+118h] 1 +
xor eax eax +
retn   +
***
push ebx  +
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_464CA5  +
cmp dword ptr [ebx] 4Ah +
ja loc_464C90  +
mov edx [ebx] +
jmp ds:off_4978C0[edx*4]  +
mov edx [ebx+4] +
mov eax esi +
call sub_464C70  +
test eax eax +
jnz loc_464CA7  +
mov ebx [ebx+8] +
test ebx ebx +
jnz loc_464C7D  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
lea edx [ebx+4] +
mov eax esi +
call sub_464C10  +
test eax eax +
jz loc_464CA5  +
cmp dword ptr [eax] 2Fh +
jnz loc_464CA5  +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_8] +
mov edi [esp+10h+arg_4] +
mov eax [esi+4] +
mov ebx [esi+8] +
lea eax [edi+eax+1] +
cmp eax ebx +
ja loc_464D30  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_464D00  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov eax [esi] +
mov edx [esp+10h+arg_0] +
add eax [esi+4] +
mov [esp+10h+var_8] edi +
mov [esp+10h+var_C] edx +
mov [esp+10h+var_10] eax +
call memcpy  +
mov eax [esi] +
add eax edi +
add eax [esi+4] +
mov byte ptr [eax] 0 +
add [esi+4] edi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx [esi+0Ch] +
test edx edx +
jnz loc_464CF3  +
test ebx ebx +
jnz loc_464D42  +
cmp eax 2 +
mov bl 2 +
jbe loc_464D48  +
add ebx ebx +
cmp eax ebx +
ja loc_464D42  +
mov eax [esi] +
mov [esp+10h+var_C] ebx +
mov [esp+10h+var_10] eax +
call realloc  +
test eax eax +
jz loc_464D61  +
mov [esi] eax +
mov [esi+8] ebx +
jmp loc_464CEC  +
mov eax [esi] +
mov [esp+10h+var_10] eax +
call free  +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 0 +
mov dword ptr [esi+0Ch] 1 +
jmp loc_464CF3  +
***
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+14h+var_14] edx +
call strlen  +
test eax eax +
jz loc_464E13  +
mov ecx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_464DCC  +
lea eax [ecx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+ecx] dl +
mov [ebx+104h] dl +
jz loc_464E13  +
mov ecx eax +
cmp ecx 0FFh +
movzx edx byte ptr [esi] +
jnz loc_464DB1  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+14h+var_8] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+14h+var_C] ecx +
mov [esp+14h+var_10] 0FFh +
mov [esp+14h+var_14] ebx +
call eax  +
mov eax 1 +
xor ecx ecx +
add dword ptr [ebx+120h] 1 +
mov edx [esp+14h+var_8] +
jmp loc_464DB4  +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 30h +
lea esi [esp+30h+var_19] +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] offset unk_4979EC +
mov [esp+30h+var_30] esi +
call sprintf  +
mov [esp+30h+var_30] esi +
call strlen  +
test eax eax +
jz loc_464EC0  +
mov edx [ebx+100h] +
lea edi [esi+eax] +
jmp loc_464E72  +
lea eax [edx+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] eax +
mov [ebx+edx] cl +
mov [ebx+104h] cl +
jz loc_464EC0  +
mov edx eax +
cmp edx 0FFh +
movzx ecx byte ptr [esi] +
jnz loc_464E57  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+30h+var_24] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+30h+var_28] edx +
mov [esp+30h+var_2C] 0FFh +
mov [esp+30h+var_30] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov ecx [esp+30h+var_24] +
jmp loc_464E5A  +
add esp 30h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 8Ch +
test ecx ecx +
mov [esp+98h+var_80] edx +
jz loc_464FD0  +
mov eax [eax+118h] +
test eax eax +
jnz loc_464FC0  +
mov eax [ecx] +
cmp eax 4Bh +
ja loc_466473  +
jmp ds:off_497C58[eax*4]  +
mov edx [ecx+4] +
xor esi esi +
cmp dword ptr [edx] 27h +
jnz loc_464F40  +
mov edx [edx+4] +
mov esi [edx+10h] +
cmp esi 1 +
jb loc_464F40  +
cmp esi 6 +
jbe loc_466D62  +
cmp esi 7 +
jnz loc_464F40  +
mov edx [ecx+8] +
mov ecx [edx] +
test ecx ecx +
jnz loc_464F40  +
cmp dword ptr [edx+8] 1 +
jz loc_46719E  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_466D17  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_80] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov ecx [ebp+4] +
call sub_467270  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_466CE0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
cmp dword ptr [ebp+0] 3Ch +
jz loc_466EE2  +
cmp esi 8 +
jz loc_466EB7  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
lea esi [esi+0] +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+118h] 1 +
add esp 8Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_467270  +
mov eax ebx +
mov edx offset aClone +
call sub_464D90  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_467270  +
mov edx 5Dh +
mov eax ebx +
call sub_4646A0  +
jmp loc_464FC0  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_467270  +
mov eax ebx +
mov edx offset aAbi +
call sub_464D90  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_467270  +
mov edx 5Dh +
mov eax ebx +
call sub_4646A0  +
jmp loc_464FC0  +
mov edx [ecx+4] +
mov eax ebx +
call sub_464C70  +
test eax eax +
jz loc_46707B  +
xor esi esi +
cmp dword ptr [eax] 2Fh +
jnz loc_466692  +
mov edx [eax+4] +
test edx edx +
jz loc_466692  +
mov eax [eax+8] +
add esi 1 +
test eax eax +
jnz loc_465068  +
mov eax [ebp+4] +
mov [esp+98h+var_78] eax +
lea eax [esi-1] +
xor edi edi +
mov [esp+98h+var_74] eax +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
mov [ebx+11Ch] edi +
call sub_467270  +
cmp [esp+98h+var_74] edi +
jle loc_4664B4  +
mov eax [ebx+100h] +
mov ebp offset asc_497B86 +
jmp loc_4650E5  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp (offset asc_497B86+2) +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4664B4  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+0] +
jnz loc_4650C2  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4650C5  +
mov eax [ebx+100h] +
mov esi offset aNonTransaction +
jmp loc_465163  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497B71h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_466567  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_465140  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_465143  +
mov eax ebx +
mov edx offset aUnnamedType +
call sub_464D90  +
mov edx [ebp+4] +
mov eax ebx +
add edx 1 +
call sub_464E20  +
mov edx 7Dh +
mov eax ebx +
call sub_4646A0  +
jmp loc_464FC0  +
mov eax ebx +
mov edx offset aLambda +
call sub_464D90  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
mov eax ebx +
mov edx offset asc_497C3A +
call sub_464D90  +
mov edx [ebp+8] +
mov eax ebx +
add edx 1 +
call sub_464E20  +
mov edx 7Dh +
mov eax ebx +
call sub_4646A0  +
jmp loc_464FC0  +
mov eax ebx +
mov edx offset aGlobalDestruct +
call sub_464D90  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov eax ebx +
mov edx offset aGlobalConstruc +
call sub_464D90  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov eax ebx +
mov edx offset aDecltype +
call sub_464D90  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+4] +
call sub_467270  +
mov edx 29h +
mov eax ebx +
call sub_4646A0  +
jmp loc_464FC0  +
mov edx [ecx+4] +
mov eax ebx +
call sub_464E20  +
jmp loc_464FC0  +
mov eax [ebx+100h] +
mov esi offset aTransactionClo +
jmp loc_4652C3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497B56h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46658D  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4652A0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4652A3  +
mov eax [ebx+100h] +
mov edx [ecx+4] +
cmp eax 0FFh +
jz loc_466C3F  +
lea ecx [eax+1] +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jmp loc_464FC0  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_467270  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_467270  +
jmp loc_464FC0  +
mov eax ebx +
mov edx offset aJavaResource +
call sub_464D90  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov dword ptr [ebx+118h] 1 +
jmp loc_464FC0  +
mov eax [ecx+8] +
cmp dword ptr [eax] 39h +
jnz loc_464FD0  +
mov edx [eax+8] +
cmp dword ptr [edx] 3Ah +
jnz loc_464FD0  +
mov eax [eax+4] +
mov edi offset aQu +
mov ebp [ecx+4] +
mov ecx 3 +
mov [esp+98h+var_7C] eax +
mov eax [edx+4] +
mov [esp+98h+var_78] eax +
mov eax [edx+8] +
mov [esp+98h+var_74] eax +
mov eax [ebp+4] +
mov esi [eax] +
cmps   +
jz loc_46700F  +
mov eax ebx +
mov edx offset aNew +
call sub_464D90  +
mov eax [esp+98h+var_7C] +
cmp dword ptr [eax+4] 0 +
jz loc_4653F9  +
mov edx [esp+98h+var_80] +
mov ecx eax +
mov eax ebx +
call sub_468500  +
mov edx 20h +
mov eax ebx +
call sub_4646A0  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [esp+98h+var_78] +
mov edx edi +
call sub_467270  +
mov ecx [esp+98h+var_74] +
test ecx ecx +
jz loc_464FC0  +
mov edx edi +
mov eax ebx +
call sub_468500  +
jmp loc_464FC0  +
mov dword ptr [ebx+118h] 1 +
jmp loc_464FC0  +
mov eax [ecx+8] +
cmp dword ptr [eax] 37h +
jnz loc_464FD0  +
mov edi [ecx+4] +
mov esi [edi+4] +
mov [esp+98h+var_7C] edi +
mov edx [esi] +
cmp byte ptr [edx+1] 63h +
jz loc_466F1F  +
mov edi [esp+98h+var_7C] +
cmp dword ptr [edi] 31h +
jz loc_466482  +
mov esi edx +
mov ecx 3 +
mov edi offset aCl +
cmps   +
mov ecx [eax+4] +
jnz loc_46547E  +
cmp dword ptr [ecx] 3 +
jz loc_467056  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_468500  +
mov eax [ebp+4] +
mov ecx 3 +
mov edi offset aIx +
mov edx [eax+4] +
mov [esp+98h+var_7C] eax +
mov edx [edx] +
mov esi edx +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_466FCD  +
mov ecx 3 +
mov esi edx +
mov edi offset aCl +
cmps   +
jnz loc_466FFB  +
mov eax [ebp+8] +
mov edx [esp+98h+var_80] +
mov ecx [eax+8] +
mov eax ebx +
call sub_468500  +
mov eax [ebp+4] +
cmp dword ptr [eax] 31h +
jnz loc_464FC0  +
mov eax [eax+4] +
cmp dword ptr [eax+8] 1 +
jnz loc_464FC0  +
mov eax [eax+4] +
cmp byte ptr [eax] 3Eh +
jnz loc_464FC0  +
mov edx 29h +
mov eax ebx +
call sub_4646A0  +
jmp loc_464FC0  +
mov eax [ecx+4] +
mov edi [ecx+8] +
mov [esp+98h+var_78] eax +
mov eax [eax] +
mov [esp+98h+var_7C] edi +
cmp eax 31h +
jz loc_4669DE  +
cmp eax 33h +
jz loc_466AAC  +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_468440  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_468500  +
jmp loc_464FC0  +
mov eax ebx +
mov edx offset aOperator +
call sub_464D90  +
mov edx [esp+98h+var_80] +
lea ecx [ebp+4] +
mov eax ebx +
call sub_4681C0  +
jmp loc_464FC0  +
mov eax ebx +
mov edx offset aOperator +
call sub_464D90  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov ebp [ecx+4] +
mov eax ebx +
mov edx offset aOperator_0 +
mov edi [ebp+8] +
call sub_464D90  +
mov esi [ebp+4] +
movzx eax byte ptr [esi] +
sub eax 61h +
cmp al 19h +
jbe loc_46680A  +
xor eax eax +
cmp byte ptr [esi+edi-1] 20h +
setz al  +
sub edi eax +
jz loc_464FC0  +
mov eax [ebx+100h] +
add edi esi +
jmp loc_4655F1  +
lea ecx [eax+1] +
add esi 1 +
cmp esi edi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_464FC0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4655D2  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_4655D5  +
mov ecx [ecx+4] +
mov esi [ebp+8] +
test ecx ecx +
jz loc_46564C  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_467270  +
mov eax ebx +
mov edx 7Bh +
call sub_4646A0  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx esi +
call sub_467270  +
mov edx 7Dh +
mov eax ebx +
call sub_4646A0  +
jmp loc_464FC0  +
mov ecx [ecx+4] +
test ecx ecx +
jz loc_465688  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_467270  +
mov eax [ebp+8] +
test eax eax +
jz loc_464FC0  +
mov eax [ebx+100h] +
cmp eax 0FDh +
ja loc_466ADB  +
mov edx offset asc_497B86 +
mov eax ebx +
call sub_464D90  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
mov esi [ebx+120h] +
mov edi [ebx+100h] +
call sub_467270  +
cmp [ebx+120h] esi +
jnz loc_464FC0  +
mov eax [ebx+100h] +
cmp eax edi +
jnz loc_464FC0  +
sub eax 2 +
mov [ebx+100h] eax +
jmp loc_464FC0  +
cmp word ptr [ecx+0Ah] 0 +
jnz loc_46681E  +
mov ecx [ebp+4] +
cmp dword ptr [ecx+4] offset off_498780 +
jz loc_465720  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_467270  +
mov edx 20h +
mov eax ebx +
call sub_4646A0  +
cmp word ptr [ebp+8] 0 +
jz loc_46675C  +
mov edx offset a_accum +
mov eax ebx +
call sub_464D90  +
jmp loc_464FC0  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_468440  +
jmp loc_464FC0  +
mov eax [ebx+114h] +
mov [esp+98h+var_54] ecx +
mov edx [esp+98h+var_80] +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov ecx [ecx+8] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_467270  +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_46579C  +
mov edx [esp+98h+var_80] +
mov ecx ebp +
mov eax ebx +
call sub_4672B0  +
mov eax [esp+98h+var_58] +
mov [ebx+114h] eax +
jmp loc_464FC0  +
mov edi [ebx+114h] +
lea eax [esp+98h+var_58] +
mov ecx eax +
mov [esp+98h+var_78] eax +
mov [ebx+114h] eax +
mov esi edi +
mov [esp+98h+var_74] edi +
test esi esi +
mov [esp+98h+var_58] edi +
mov edi eax +
mov eax [ebx+110h] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
jz loc_467230  +
mov eax [esi+4] +
mov eax [eax] +
sub eax 19h +
cmp eax 2 +
ja loc_467230  +
mov eax esi +
mov esi 1 +
mov [esp+98h+var_70] ebp +
mov [esp+98h+var_7C] ecx +
jmp loc_46581D  +
mov edx [eax+4] +
mov edx [edx] +
sub edx 19h +
cmp edx 2 +
ja loc_46586E  +
mov edx [eax+8] +
test edx edx +
jnz loc_465868  +
cmp esi 3 +
ja loc_466BF7  +
mov ebp [eax] +
mov edx esi +
add esi 1 +
shl edx 4 +
lea ecx [esp+edx+98h+var_58] +
mov [esp+edx+98h+var_58] ebp +
mov ebp [eax+4] +
mov [ecx+4] ebp +
mov ebp [eax+8] +
mov [ecx+8] ebp +
mov ebp [eax+0Ch] +
mov [ecx+0Ch] ebp +
mov [esp+edx+98h+var_58] edi +
mov edi [esp+98h+var_7C] +
add edi edx +
mov [ebx+114h] edi +
mov dword ptr [eax+8] 1 +
mov eax [eax] +
test eax eax +
jnz loc_465810  +
mov ebp [esp+98h+var_70] +
mov eax ebx +
mov edx [esp+98h+var_80] +
mov ecx [ebp+8] +
call sub_467270  +
mov eax [esp+98h+var_74] +
mov [ebx+114h] eax +
mov eax [esp+98h+var_50] +
test eax eax +
jnz loc_464FC0  +
cmp esi 1 +
jz loc_466F90  +
mov edi [esp+98h+var_78] +
sub esi 1 +
mov [esp+98h+var_7C] ebp +
mov ebp [esp+98h+var_80] +
mov eax esi +
shl eax 4 +
lea edi [edi+eax+4] +
mov ecx [edi] +
mov edx ebp +
mov eax ebx +
sub edi 10h +
call sub_4672B0  +
cmp esi 1 +
jz loc_46677A  +
sub esi 1 +
jmp loc_4658B7  +
test byte ptr [esp+98h+var_80] 20h +
jnz loc_4667D5  +
cmp dword ptr [ecx+4] 0 +
jz loc_4658EF  +
test byte ptr [esp+98h+var_80] 40h +
jz loc_466C7E  +
mov eax [ebx+114h] +
lea ecx [ebp+8] +
mov edx [esp+98h+var_80] +
mov [esp+98h+var_98] eax +
mov eax ebx +
and edx 0FFFFFF9Fh +
call sub_467EB0  +
jmp loc_464FC0  +
mov eax [ebx+100h] +
mov esi offset aVirtualThunkTo +
jmp loc_465943  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497AA1h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46651B  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_465920  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_465923  +
mov eax [ebx+100h] +
mov esi offset aNonVirtualThun +
jmp loc_4659B9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497A8Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_466508  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_465996  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_465999  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFnFor +
jmp loc_465A33  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497A79h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4664F5  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_465A10  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_465A13  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoNameFo +
jmp loc_465AA9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497A68h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46665E  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_465A86  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_465A89  +
mov eax [ebx+100h] +
mov esi offset aTypeinfoFor +
jmp loc_465B23  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497A55h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46664B  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_465B00  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_465B03  +
mov eax ebx +
mov edx offset aConstructionVt +
call sub_464D90  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+4] +
mov edx edi +
call sub_467270  +
mov eax ebx +
mov edx offset aIn +
call sub_464D90  +
mov ecx [ebp+8] +
mov edx edi +
mov eax ebx +
call sub_467270  +
jmp loc_464FC0  +
mov eax ebx +
mov edx offset aVttFor +
call sub_464D90  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov eax ebx +
mov edx offset aVtableFor +
call sub_464D90  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov eax ebx +
mov edx 7Eh +
call sub_4646A0  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov ecx [ecx+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov esi [ecx+4] +
test esi esi +
jnz loc_4666A6  +
mov edx offset aThis +
mov eax ebx +
call sub_464D90  +
jmp loc_464FC0  +
lea edx [ecx+4] +
mov eax ebx +
call sub_464C10  +
test eax eax +
jz loc_4667C6  +
cmp dword ptr [eax] 2Fh +
jz loc_46679A  +
mov esi [ebx+110h] +
mov ecx eax +
mov eax ebx +
mov edx [esi] +
mov [ebx+110h] edx +
mov edx [esp+98h+var_80] +
call sub_467270  +
mov [ebx+110h] esi +
jmp loc_464FC0  +
mov eax [ebx+140h] +
test byte ptr [esp+98h+var_80] 4 +
mov [ebx+140h] ecx +
mov [esp+98h+var_7C] eax +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov edx [ecx+4] +
mov [esp+98h+var_78] eax +
jz loc_465CAD  +
mov esi [edx] +
test esi esi +
jnz loc_465CAD  +
cmp dword ptr [edx+8] 6 +
jz loc_466F99  +
mov ecx edx +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_467270  +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_466EA6  +
mov edx 3Ch +
mov eax ebx +
call sub_4646A0  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
cmp byte ptr [ebx+104h] 3Eh +
jz loc_466E95  +
mov edx 3Eh +
mov eax ebx +
call sub_4646A0  +
mov eax [esp+98h+var_78] +
mov [ebx+114h] eax +
mov eax [esp+98h+var_7C] +
mov [ebx+140h] eax +
jmp loc_464FC0  +
mov eax [ebx+114h] +
mov dword ptr [ebx+114h] 0 +
mov esi [ecx+4] +
mov [esp+98h+var_74] eax +
test esi esi +
jz loc_466E86  +
mov eax [ebx+110h] +
xor edx edx +
xor edi edi +
mov [esp+98h+var_70] ecx +
mov [esp+98h+var_7C] eax +
lea eax [esp+98h+var_58] +
mov [esp+98h+var_78] eax +
mov ecx [esp+98h+var_7C] +
add edi 1 +
mov ebp eax +
mov [eax] edx +
mov edx [esi] +
mov [ebx+114h] eax +
mov [eax+4] esi +
mov [eax+0Ch] ecx +
lea ecx [edx-1Ch] +
cmp ecx 4 +
mov dword ptr [eax+8] 0 +
jbe loc_4664C4  +
cmp edx 4 +
mov ebp [esp+98h+var_70] +
jz loc_467124  +
cmp edx 2 +
jnz loc_465E06  +
mov ecx [esi+8] +
cmp dword ptr [ecx] 45h +
jz loc_467166  +
mov eax [ecx] +
sub eax 1Ch +
cmp eax 4 +
ja loc_465E06  +
cmp edi 4 +
jz loc_467148  +
mov eax edi +
shl eax 4 +
mov [esp+98h+var_70] esi +
mov esi [esp+98h+var_7C] +
add eax [esp+98h+var_78] +
jmp loc_465DC8  +
add eax 10h +
cmp edi 4 +
jz loc_467148  +
mov edx [eax-0Ch] +
add edi 1 +
mov [ebx+114h] eax +
mov [eax-0Ch] ecx +
mov [eax+4] edx +
mov edx [eax-8] +
mov dword ptr [eax-8] 0 +
mov [eax+8] edx +
mov edx [eax-4] +
mov [eax-4] esi +
mov [eax+0Ch] edx +
lea edx [eax-10h] +
mov [eax] edx +
mov ecx [ecx+4] +
mov edx [ecx] +
sub edx 1Ch +
cmp edx 4 +
jbe loc_465DBC  +
mov esi [esp+98h+var_70] +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
cmp dword ptr [esi] 4 +
jz loc_467157  +
test edi edi +
jz loc_466F10  +
lea ebp [edi-1] +
mov edi [esp+98h+var_78] +
mov eax ebp +
shl eax 4 +
lea esi [edi+eax+8] +
jmp loc_465E45  +
sub esi 10h +
test ebp ebp +
jz loc_466F10  +
sub ebp 1 +
mov edi [esi] +
test edi edi +
jnz loc_465E37  +
mov eax ebx +
mov edx 20h +
call sub_4646A0  +
mov ecx [esi-4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_4672B0  +
jmp loc_465E37  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_464FC0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_465E9F  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_464FC0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_465E80  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_465E83  +
mov eax [ebx+100h] +
mov esi offset aReferenceTempo +
jmp loc_465F17  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497B27h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4665A0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_465EF4  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_465EF7  +
mov eax [ebx+100h] +
mov esi offset aTlsWrapperFunc +
jmp loc_465F93  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497B11h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_466638  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_465F70  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_465F73  +
mov eax [ebx+100h] +
mov esi offset aTlsInitFunctio +
jmp loc_466009  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497AF7h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4664E2  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_465FE6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_465FE9  +
mov eax [ebx+100h] +
mov esi offset aJavaClassFor +
jmp loc_466083  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497ACCh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46652E  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_466060  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_466063  +
mov eax [ebx+100h] +
mov esi offset aGuardVariableF +
jmp loc_4660F9  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497AE0h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_466554  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4660D6  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4660D9  +
mov eax [ebx+100h] +
mov esi offset aCovariantRetur +
jmp loc_466173  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497ABCh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_466541  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_466150  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_466153  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [ecx+4] +
mov edx edi +
call sub_467270  +
and edi 4 +
jnz loc_4666CC  +
mov edx offset asc_4979F6 +
mov eax ebx +
call sub_464D90  +
mov ecx [ebp+8] +
cmp dword ptr [ecx] 45h +
jz loc_466C06  +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_467270  +
jmp loc_464FC0  +
test byte ptr [esp+98h+var_80] 4 +
jnz loc_466B21  +
mov edi [ecx+8] +
mov ebp [ecx+4] +
test edi edi +
jz loc_464FC0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_46623F  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_464FC0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_466220  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_466223  +
test byte ptr [esp+98h+var_80] 4 +
mov eax [ecx+4] +
jnz loc_4666DD  +
mov edi [eax+4] +
mov ebp [eax] +
test edi edi +
jz loc_464FC0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_4662CF  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_464FC0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_4662B0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_4662B3  +
mov eax [ecx+4] +
xor esi esi +
cmp dword ptr [eax] 5 +
jz loc_466899  +
mov edx [eax] +
cmp edx 23h +
jz loc_46676D  +
cmp edx [ebp+0] +
jz loc_46676D  +
cmp edx 24h +
jz loc_466E35  +
mov edi [ebx+114h] +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+98h+var_58] edi +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_4C] eax +
mov ecx [ebp+4] +
mov edx [esp+98h+var_80] +
mov eax ebx +
call sub_467270  +
mov edi [esp+98h+var_50] +
test edi edi +
jz loc_466680  +
mov eax [esp+98h+var_58] +
test esi esi +
mov [ebx+114h] eax +
jz loc_464FC0  +
mov eax [esp+98h+var_7C] +
mov [ebx+110h] eax +
jmp loc_464FC0  +
mov edi [ebx+114h] +
xor esi esi +
jmp loc_466348  +
mov edi [ebx+114h] +
test edi edi +
jz loc_46713F  +
mov edx edi +
mov ecx [edx+8] +
test ecx ecx +
jnz loc_4663DD  +
mov ecx [edx+4] +
mov ecx [ecx] +
lea esi [ecx-19h] +
cmp esi 2 +
ja loc_4663E3  +
cmp eax ecx +
jz loc_466B0E  +
mov edx [edx] +
test edx edx +
jnz loc_4663C1  +
xor esi esi +
jmp loc_466348  +
mov eax [ebx+100h] +
mov esi offset aHiddenAliasFor +
jmp loc_46641A  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497B3Fh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_46657A  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4663F7  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4663FA  +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov dword ptr [ebx+118h] 1 +
jmp loc_464FC0  +
cmp dword ptr [esi+8] 1 +
jnz loc_465462  +
mov ecx [esi+4] +
cmp byte ptr [ecx] 3Eh +
jnz loc_465462  +
mov eax ebx +
mov edx 28h +
call sub_4646A0  +
mov eax [ebp+4] +
mov eax [eax+4] +
mov esi [eax] +
mov eax [ebp+8] +
jmp loc_465464  +
add edi 1 +
cmp edi esi +
jnz loc_465096  +
jmp loc_464FC0  +
mov esi [esi+4] +
test esi esi +
jz loc_466E86  +
add eax 10h +
cmp edi 4 +
jz loc_466671  +
mov edx ebp +
jmp loc_465D4C  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov ecx [ebp+8] +
mov eax ebx +
mov esi offset aFor +
mov edx [esp+98h+var_80] +
call sub_467270  +
mov eax [ebx+100h] +
jmp loc_4665DF  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497B2Dh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_466625  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4665C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_4665C3  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov dword ptr [ebx+118h] 1 +
jmp loc_464FC0  +
mov edx [esp+98h+var_80] +
mov ecx ebp +
mov eax ebx +
call sub_4672B0  +
jmp loc_466386  +
mov eax [ebp+4] +
test esi esi +
mov [esp+98h+var_78] eax +
jnz loc_46508D  +
jmp loc_464FC0  +
mov eax ebx +
mov edx offset aParm +
call sub_464D90  +
mov edx esi +
mov eax ebx +
call sub_464E20  +
mov edx 7Dh +
mov eax ebx +
call sub_4646A0  +
jmp loc_464FC0  +
mov edx 2Eh +
mov eax ebx +
call sub_4646A0  +
jmp loc_4661DE  +
mov edi [eax+0Ch] +
mov ebp [eax+8] +
test edi edi +
jz loc_464FC0  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_466714  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_464FC0  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_4666F5  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_4666F8  +
mov edx offset a_fract +
mov eax ebx +
call sub_464D90  +
jmp loc_464FC0  +
mov edi [ebx+114h] +
mov ebp eax +
jmp loc_466348  +
mov ebp [esp+98h+var_7C] +
mov eax [ebx+114h] +
mov edx [esp+98h+var_80] +
lea ecx [ebp+4] +
mov [esp+98h+var_98] eax +
mov eax ebx +
call sub_467C30  +
jmp loc_464FC0  +
mov edx [ebx+11Ch] +
jmp loc_4667B1  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jz loc_4667C6  +
cmp dword ptr [eax] 2Fh +
jnz loc_4667C6  +
cmp edx 0 +
jg loc_4667A2  +
jnz loc_4667C6  +
mov eax [eax+4] +
test eax eax +
lea esi [esi+0] +
jnz loc_465C49  +
mov dword ptr [ebx+118h] 1 +
jmp loc_464FC0  +
mov esi [esp+98h+var_80] +
lea ecx [ecx+8] +
mov eax [ebx+114h] +
and esi 0FFFFFF9Fh +
mov [esp+98h+var_98] eax +
mov edx esi +
mov eax ebx +
call sub_467EB0  +
mov ecx [ebp+4] +
test ecx ecx +
jz loc_464FC0  +
mov edx esi +
mov eax ebx +
call sub_467270  +
jmp loc_464FC0  +
mov edx 20h +
mov eax ebx +
call sub_4646A0  +
mov esi [ebp+4] +
jmp loc_4655B6  +
mov eax [ebx+100h] +
mov esi offset a_sat +
jmp loc_466853  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497B77h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_4656FD  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_466830  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_7C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_7C] +
jmp loc_466833  +
mov esi [ebx+12Ch] +
mov edi [ebx+128h] +
test esi esi +
mov [esp+98h+var_78] edi +
jle loc_4668D5  +
cmp eax [edi] +
jz loc_466DEB  +
lea edx [edi+8] +
xor ecx ecx +
jmp loc_4668CE  +
mov edi edx +
add edx 8 +
cmp eax [edx-8] +
jz loc_466DEF  +
add ecx 1 +
cmp ecx esi +
jnz loc_4668C0  +
cmp esi [ebx+130h] +
jge loc_46720D  +
mov edi [esp+98h+var_78] +
lea ecx [edi+esi*8] +
mov edi [ebx+110h] +
add esi 1 +
mov [ebx+12Ch] esi +
add ecx 4 +
mov [ecx-4] eax +
test edi edi +
mov [esp+98h+var_6C] edi +
jz loc_466968  +
mov edi [ebx+138h] +
mov esi [ebx+13Ch] +
lea edx ds:0[edi*8] +
cmp esi edi +
mov [esp+98h+var_70] esi +
mov [esp+98h+var_78] edx +
jle loc_46720D  +
mov [esp+98h+var_74] eax +
mov edx [esp+98h+var_6C] +
jmp loc_466941  +
add [esp+98h+var_78] 8 +
cmp edi [esp+98h+var_70] +
jz loc_467203  +
mov eax [edx+4] +
add edi 1 +
mov esi [esp+98h+var_78] +
add esi [ebx+134h] +
mov [esi+4] eax +
mov [ecx] esi +
mov edx [edx] +
mov ecx esi +
test edx edx +
jnz loc_466932  +
mov eax [esp+98h+var_74] +
mov [ebx+138h] edi +
mov dword ptr [ecx] 0 +
cmp dword ptr [ebx+118h] 0 +
jnz loc_464FC0  +
xor esi esi +
lea edx [eax+4] +
mov eax ebx +
call sub_464C10  +
test eax eax +
jz loc_4669C1  +
cmp dword ptr [eax] 2Fh +
jnz loc_466325  +
mov edx [ebx+11Ch] +
jmp loc_4669AF  +
mov eax [eax+8] +
sub edx 1 +
test eax eax +
jz loc_4669C1  +
cmp dword ptr [eax] 2Fh +
jnz loc_4669C1  +
cmp edx 0 +
jg loc_4669A0  +
jnz loc_4669C1  +
mov eax [eax+4] +
test eax eax +
jnz loc_466325  +
test esi esi +
jz loc_4669CF  +
mov eax [esp+98h+var_7C] +
mov [ebx+110h] eax +
mov dword ptr [ebx+118h] 1 +
jmp loc_464FC0  +
mov eax [esp+98h+var_78] +
mov edi offset aAd +
mov ecx 3 +
mov eax [eax+4] +
mov ebp [eax] +
mov eax [esp+98h+var_7C] +
mov esi ebp +
cmps   +
mov eax [eax] +
jnz loc_466A06  +
cmp eax 3 +
jz loc_46709A  +
cmp eax 37h +
jz loc_467178  +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_468440  +
test ebp ebp +
jz loc_465541  +
mov edi offset aGs +
mov ecx 3 +
mov esi ebp +
cmps   +
jz loc_466D4E  +
mov edi offset aSt +
mov ecx 3 +
mov esi ebp +
cmps   +
jnz loc_465541  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4670F2  +
lea edx [eax+1] +
mov ecx [esp+98h+var_7C] +
mov [ebx+100h] edx +
mov edx [esp+98h+var_80] +
mov byte ptr [ebx+eax] 28h +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
call sub_467270  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4670C0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_464FC0  +
mov eax ebx +
mov edx 28h +
call sub_4646A0  +
mov ecx [esp+98h+var_78] +
mov eax ebx +
mov edx [esp+98h+var_80] +
add ecx 4 +
call sub_4681C0  +
mov edx 29h +
mov eax ebx +
call sub_4646A0  +
jmp loc_465541  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov byte ptr [ebx+eax] 0 +
mov [esp+98h+var_94] eax +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_98] ebx +
call edx  +
mov dword ptr [ebx+100h] 0 +
add dword ptr [ebx+120h] 1 +
jmp loc_4656A4  +
mov ecx [ebp+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov esi [ecx+4] +
mov edi [ecx+8] +
add edi esi +
cmp esi edi +
jb loc_466B5D  +
jmp loc_464FC0  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_466BB8  +
lea ecx [edx+1] +
mov [ebx+100h] ecx +
mov [ebx+edx] al +
mov [ebx+104h] al +
add esi 1 +
cmp edi esi +
jbe loc_464FC0  +
mov eax edi +
sub eax esi +
cmp eax 3 +
movzx eax byte ptr [esi] +
jle loc_466B32  +
cmp al 5Fh +
jnz loc_466B32  +
cmp byte ptr [esi+1] 5Fh +
jnz loc_466B32  +
cmp byte ptr [esi+2] 55h +
jnz loc_466B32  +
lea ebp [esi+3] +
cmp edi ebp +
jbe loc_466B32  +
xor ecx ecx +
jmp loc_466B9A  +
movsx eax dl +
sub eax 30h +
shl ecx 4 +
add ebp 1 +
add ecx eax +
cmp ebp edi +
jz loc_46716E  +
movzx edx byte ptr [ebp+0] +
lea eax [edx-30h] +
cmp al 9 +
jbe loc_466B84  +
lea eax [edx-41h] +
cmp al 5 +
ja loc_466E70  +
movsx eax dl +
sub eax 37h +
jmp loc_466B8A  +
mov ecx [ebx+10Ch] +
mov edx [ebx+108h] +
mov [esp+98h+var_80] eax +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call edx  +
mov ecx 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
mov eax [esp+98h+var_80] +
jmp loc_466B43  +
mov dword ptr [ebx+118h] 1 +
jmp loc_464FC0  +
mov edx offset aDefaultArg +
mov eax ebx +
mov [esp+98h+var_7C] ecx +
call sub_464D90  +
mov ecx [esp+98h+var_7C] +
mov eax [ecx+8] +
lea edx [eax+1] +
mov eax ebx +
call sub_464E20  +
mov edx offset asc_497A07 +
mov eax ebx +
call sub_464D90  +
mov ecx [esp+98h+var_7C] +
mov ecx [ecx+4] +
jmp loc_4661EA  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+98h+var_80] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_90] ecx +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_98] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+98h+var_80] +
jmp loc_465320  +
mov eax [ebx+114h] +
mov edx [esp+98h+var_80] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
and edx 0FFFFFF9Fh +
mov ecx [ebp+4] +
mov [esp+98h+var_4C] eax +
mov eax ebx +
call sub_467270  +
mov ecx [esp+98h+var_50] +
mov eax [esp+98h+var_58] +
test ecx ecx +
mov [ebx+114h] eax +
jnz loc_464FC0  +
mov edx 20h +
mov eax ebx +
call sub_4646A0  +
jmp loc_4658EF  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_464F87  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_464F54  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
jmp loc_464FC0  +
mov ecx [ecx+8] +
mov edi [ecx] +
test edi edi +
jnz loc_464F40  +
cmp eax 3Ch +
jz loc_46721C  +
mov edx [esp+98h+var_80] +
mov eax ebx +
sub esi 2 +
call sub_467270  +
cmp esi 4 +
ja loc_464FC0  +
jmp ds:off_497D88[esi*4]  +
mov edx offset aLl +
mov eax ebx +
call sub_464D90  +
jmp loc_464FC0  +
mov edx offset aUl +
mov eax ebx +
call sub_464D90  +
jmp loc_464FC0  +
mov edx 6Ch +
mov eax ebx +
call sub_4646A0  +
jmp loc_464FC0  +
mov edx 75h +
mov eax ebx +
call sub_4646A0  +
jmp loc_464FC0  +
mov edx offset aUll +
mov eax ebx +
call sub_464D90  +
jmp loc_464FC0  +
mov edi [esp+98h+var_78] +
mov esi [ebx+124h] +
test esi esi +
jz loc_466EF3  +
mov ecx [esi] +
cmp ecx eax +
jz loc_46697B  +
mov edx esi +
jmp loc_466E25  +
mov edx [edx+4] +
test edx edx +
jz loc_466EF3  +
mov ecx [edx] +
cmp ecx eax +
jz loc_46697B  +
cmp ebp ecx +
jnz loc_466E10  +
cmp edx esi +
jz loc_466E10  +
lea esi [esi+0] +
jmp loc_46697B  +
mov ecx [eax+4] +
mov eax [ebx+114h] +
mov [esp+98h+var_54] ebp +
mov [esp+98h+var_50] 0 +
test ecx ecx +
mov [esp+98h+var_58] eax +
lea eax [esp+98h+var_58] +
mov [ebx+114h] eax +
mov eax [ebx+110h] +
mov [esp+98h+var_4C] eax +
jnz loc_46636F  +
jmp loc_46636C  +
lea eax [edx-61h] +
cmp al 5 +
ja loc_4671CE  +
movsx eax dl +
sub eax 57h +
jmp loc_466B8A  +
mov dword ptr [ebx+118h] 1 +
jmp loc_464FC0  +
mov edx 20h +
mov eax ebx +
call sub_4646A0  +
jmp loc_465CEE  +
mov edx 20h +
mov eax ebx +
call sub_4646A0  +
jmp loc_465CC7  +
mov eax ebx +
mov edx 5Bh +
call sub_4646A0  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+8] +
call sub_467270  +
mov edx 5Dh +
mov eax ebx +
call sub_4646A0  +
jmp loc_464FC0  +
mov edx 2Dh +
mov eax ebx +
call sub_4646A0  +
jmp loc_464FA2  +
mov esi [ebx+110h] +
mov edx [edi+4] +
mov [esp+98h+var_7C] esi +
mov esi 1 +
mov [ebx+110h] edx +
jmp loc_46697D  +
mov eax [esp+98h+var_74] +
mov [ebx+114h] eax +
jmp loc_464FC0  +
movzx edi byte ptr [edx] +
lea ecx [edi-63h] +
cmp cl 1 +
jbe loc_466F38  +
sub edi 72h +
mov ecx edi +
cmp cl 1 +
ja loc_465455  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [esp+98h+var_7C] +
mov edx edi +
call sub_468440  +
mov eax ebx +
mov edx 3Ch +
call sub_4646A0  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+4] +
mov eax ebx +
call sub_467270  +
mov eax ebx +
mov edx offset asc_497C55 +
call sub_464D90  +
mov eax [ebp+8] +
mov edx edi +
mov ecx [eax+8] +
mov eax ebx +
call sub_467270  +
mov edx 29h +
mov eax ebx +
call sub_4646A0  +
jmp loc_464FC0  +
mov eax [esp+98h+var_74] +
jmp loc_466784  +
mov esi [edx+4] +
mov edi offset aJarray +
mov ecx 6 +
cmps   +
jnz loc_465CAD  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+8] +
call sub_467270  +
mov edx offset asc_497A12 +
mov eax ebx +
call sub_464D90  +
jmp loc_465CFA  +
mov eax ebx +
mov edx 5Bh +
call sub_4646A0  +
mov eax [ebp+8] +
mov edx [esp+98h+var_80] +
mov ecx [eax+8] +
mov eax ebx +
call sub_467270  +
mov edx 5Dh +
mov eax ebx +
call sub_4646A0  +
jmp loc_4654DA  +
mov ecx [esp+98h+var_7C] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_468440  +
jmp loc_4654C9  +
mov edi [esp+98h+var_80] +
mov eax ebx +
mov ecx [esp+98h+var_7C] +
mov edx edi +
call sub_468500  +
mov ecx ebp +
mov edx edi +
mov eax ebx +
call sub_468440  +
mov ecx [esp+98h+var_78] +
mov edx edi +
mov eax ebx +
call sub_468500  +
mov eax ebx +
mov edx offset asc_497BAE +
call sub_464D90  +
mov ecx [esp+98h+var_74] +
mov edx edi +
mov eax ebx +
call sub_468500  +
jmp loc_464FC0  +
mov eax [ecx+8] +
cmp dword ptr [eax] 29h +
jz loc_467068  +
mov dword ptr [ebx+118h] 1 +
mov ecx [ecx+4] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_468500  +
jmp loc_465489  +
mov edx [esp+98h+var_80] +
mov eax ebx +
mov ecx [ebp+4] +
call sub_468500  +
mov edx offset a___ +
mov eax ebx +
call sub_464D90  +
jmp loc_464FC0  +
mov eax [esp+98h+var_7C] +
mov eax [eax+4] +
cmp dword ptr [eax] 1 +
jnz loc_466A0F  +
mov edi [esp+98h+var_7C] +
mov edx [edi+8] +
cmp dword ptr [edx] 29h +
cmovnz eax edi +
mov [esp+98h+var_7C] eax +
jmp loc_466A0F  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_466A93  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+98h+var_94] 0FFh +
mov [esp+98h+var_90] edx +
mov [esp+98h+var_98] ebx +
call eax  +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_466A5F  +
mov eax [esp+98h+var_7C] +
mov [esp+98h+var_5C] esi +
mov [esp+98h+var_60] eax +
lea eax [esp+98h+var_60] +
mov [ebx+110h] eax +
jmp loc_465E06  +
xor edi edi +
xor esi esi +
jmp loc_466348  +
mov dword ptr [ebx+118h] 1 +
jmp loc_464FC0  +
mov eax [esp+98h+var_60] +
mov [ebx+110h] eax +
jmp loc_465E1D  +
mov ecx [ecx+4] +
jmp loc_465D96  +
mov eax 5Fh +
jmp loc_466B32  +
mov eax [esp+98h+var_7C] +
mov edi [esp+98h+var_80] +
mov ecx [eax+4] +
mov eax ebx +
mov edx edi +
call sub_468500  +
mov ecx [esp+98h+var_78] +
mov edx edi +
mov eax ebx +
call sub_468440  +
jmp loc_464FC0  +
cmp eax 3Bh +
jnz loc_464F40  +
mov eax [edx+4] +
movzx eax byte ptr [eax] +
cmp al 30h +
jz loc_467258  +
cmp al 31h +
jnz loc_464F40  +
mov edx offset aTrue +
mov eax ebx +
call sub_464D90  +
jmp loc_464FC0  +
cmp edi ebp +
mov eax 5Fh +
jbe loc_466B32  +
cmp dl 5Fh +
jnz loc_466B32  +
cmp ecx 0FFh +
mov eax edx +
ja loc_466B32  +
movsx edx cl +
mov eax ebx +
call sub_4646A0  +
mov esi ebp +
jmp loc_466B52  +
mov eax [esp+98h+var_74] +
mov [ebx+138h] edi +
mov dword ptr [ebx+118h] 1 +
jmp loc_46696E  +
mov edx 2Dh +
mov eax ebx +
call sub_4646A0  +
mov ecx [ebp+8] +
jmp loc_466D78  +
mov ecx [ebp+8] +
mov eax ebx +
mov edx [esp+98h+var_80] +
call sub_467270  +
mov eax [esp+98h+var_74] +
cmp [esp+98h+var_50] 0 +
mov [ebx+114h] eax +
jz loc_466784  +
jmp loc_464FC0  +
mov edx offset aFalse +
mov eax ebx +
call sub_464D90  +
jmp loc_464FC0  +
***
sub esp 18h +
mov eax [eax+124h] +
mov [esp+18h+var_10] ecx +
mov [esp+18h+var_C] eax +
lea eax [esp+18h+var_10] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_464ED0  +
mov eax [esp+18h+var_C] +
mov [ebx+124h] eax +
add esp 18h +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 3Ch +
mov eax [ecx] +
mov [esp+3Ch+var_24] edx +
sub eax 3 +
cmp eax 2Ah +
ja loc_4672F8  +
jmp ds:off_497DE0[eax*4]  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46790E  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov ecx [ecx+8] +
mov eax [ebx+124h] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_14] ecx +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_464ED0  +
mov eax [esp+3Ch+var_10] +
mov [ebx+124h] eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+100h] +
mov esi offset a__vector +
jmp loc_467365  +
lea ebp [eax+1] +
add esi 1 +
mov edx edi +
cmp esi 497DDCh +
mov [ebx+100h] ebp +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_467840  +
mov eax ebp +
cmp eax 0FFh +
movzx edi byte ptr [esi] +
jnz loc_467340  +
mov ebp [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_20] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ebp +
mov ebp 1 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+3Ch+var_20] +
add dword ptr [ebx+120h] 1 +
jmp loc_467343  +
mov ecx [ecx+4] +
jmp loc_4672F8  +
mov eax [ebx+100h] +
mov esi offset aRestrict +
jmp loc_4673E8  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497DA5h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_467325  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4673C5  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_4673C8  +
mov eax [ebx+100h] +
mov esi offset aVolatile +
jmp loc_467463  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497DAFh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_467325  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_467440  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_467443  +
mov eax [ebx+100h] +
mov esi offset aConst +
jmp loc_4674E3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497DB6h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_467325  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4674C0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_4674C3  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46794D  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
cmp eax 0FFh +
jz loc_4678A0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 26h +
mov byte ptr [ebx+104h] 26h +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4678D7  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
mov esi offset asc_497DB7 +
jmp loc_4675D3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497DB9h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_467325  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4675B0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_4675B3  +
test byte ptr [esp+3Ch+var_24] 4 +
jnz loc_467325  +
mov edx 2Ah +
mov eax ebx +
call sub_4646A0  +
jmp loc_467325  +
mov eax [ebx+100h] +
jmp loc_467556  +
mov eax [ebx+100h] +
jmp loc_4675A6  +
mov eax [ebx+100h] +
mov esi offset aComplex +
jmp loc_467693  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497DC2h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_467325  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_467670  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_467673  +
mov eax [ebx+100h] +
mov esi offset aImaginary +
jmp loc_467713  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497DCDh +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_467325  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4676F0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_4676F3  +
cmp byte ptr [ebx+104h] 28h +
jz loc_46778E  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4679BB  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
mov eax [ebx+124h] +
mov esi offset asc_497DCE +
mov ecx [ecx+4] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
mov [esp+3Ch+var_14] ecx +
call sub_464ED0  +
mov eax [esp+3Ch+var_10] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
jmp loc_4677F3  +
lea ecx [eax+1] +
add esi 1 +
cmp esi 497DD1h +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_467325  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_4677D0  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_24] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] ecx +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+3Ch+var_24] +
jmp loc_4677D3  +
mov eax [ebx+124h] +
mov ecx [ecx+4] +
mov edx [esp+3Ch+var_24] +
mov [esp+3Ch+var_10] eax +
lea eax [esp+3Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
mov [esp+3Ch+var_14] ecx +
call sub_464ED0  +
mov eax [esp+3Ch+var_10] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_467984  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_467325  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_467564  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_467595  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_20] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] esi +
mov esi 1 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+3Ch+var_20] +
add dword ptr [ebx+120h] 1 +
jmp loc_4672E4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_467545  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_3C] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_467884  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+3Ch+var_20] ecx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+3Ch+var_34] esi +
mov esi 1 +
mov [esp+3Ch+var_38] 0FFh +
mov [esp+3Ch+var_3C] ebx +
call eax  +
xor eax eax +
mov ecx [esp+3Ch+var_20] +
add dword ptr [ebx+120h] 1 +
jmp loc_46777D  +
***
push esi  +
push ebx  +
mov ebx ecx +
sub esp 2Ch +
test ecx ecx +
mov [esp+2Ch+var_14] edx +
mov ebp [esp+2Ch+arg_0] +
jz loc_467A81  +
mov ecx [eax+118h] +
mov esi eax +
test ecx ecx +
jz loc_467A2D  +
jmp loc_467A81  +
mov edx [esi+118h] +
test edx edx +
jnz loc_467A81  +
mov eax [ebx+8] +
test eax eax +
jnz loc_467A7B  +
mov ecx [ebx+4] +
test ebp ebp +
mov eax [ecx] +
jnz loc_467A45  +
lea edx [eax-1Ch] +
cmp edx 4 +
jbe loc_467A7B  +
mov edx [ebx+0Ch] +
cmp eax 29h +
mov dword ptr [ebx+8] 1 +
mov edi [esi+110h] +
mov [esi+110h] edx +
jz loc_467A89  +
cmp eax 2Ah +
jz loc_467AAA  +
cmp eax 2 +
jz loc_467ACB  +
mov edx [esp+2Ch+var_14] +
mov eax esi +
call sub_4672B0  +
mov [esi+110h] edi +
mov ebx [ebx] +
test ebx ebx +
jnz loc_467A23  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 8 +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
mov eax esi +
call sub_467EB0  +
mov [esi+110h] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx] +
add ecx 4 +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_2C] eax +
mov eax esi +
call sub_467C30  +
mov [esi+110h] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebp [esi+114h] +
mov eax esi +
mov dword ptr [esi+114h] 0 +
mov edx [esp+2Ch+var_14] +
mov ecx [ecx+4] +
call sub_467270  +
mov eax [esi+100h] +
test byte ptr [esp+2Ch+var_14] 4 +
mov [esi+114h] ebp +
jnz loc_467B65  +
mov ebp offset asc_4979F6 +
mov [esp+2Ch+var_10] ebx +
jmp loc_467B26  +
lea ecx [eax+1] +
add ebp 1 +
cmp ebp 4979F8h +
mov [esi+100h] ecx +
mov [esi+eax] bl +
mov [esi+104h] bl +
jz loc_467B82  +
mov eax ecx +
cmp eax 0FFh +
movzx ebx byte ptr [ebp+0] +
jnz loc_467B07  +
mov ecx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_2C] esi +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_467B0A  +
cmp eax 0FFh +
jz loc_467BBB  +
lea edx [eax+1] +
mov [esi+100h] edx +
mov byte ptr [esi+eax] 2Eh +
mov byte ptr [esi+104h] 2Eh +
jmp loc_467B86  +
mov ebx [esp+2Ch+var_10] +
mov eax [ebx+4] +
mov ecx [eax+8] +
mov eax [ecx] +
cmp eax 45h +
jnz loc_467B9A  +
jmp loc_467BEF  +
mov ecx [ecx+4] +
mov eax [ecx] +
sub eax 1Ch +
cmp eax 4 +
jbe loc_467B95  +
mov edx [esp+2Ch+var_14] +
mov eax esi +
call sub_467270  +
mov [esi+110h] edi +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [esi+10Ch] +
mov eax [esi+108h] +
mov byte ptr [esi+0FFh] 0 +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] esi +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [esi+120h] 1 +
jmp loc_467B6F  +
mov edx offset aDefaultArg +
mov eax esi +
mov [esp+2Ch+var_10] ecx +
call sub_464D90  +
mov ecx [esp+2Ch+var_10] +
mov eax [ecx+8] +
lea edx [eax+1] +
mov eax esi +
call sub_464E20  +
mov edx offset asc_497A07 +
mov eax esi +
call sub_464D90  +
mov ecx [esp+2Ch+var_10] +
jmp loc_467B95  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [esp+28h+arg_0] +
test eax eax +
jz loc_467C6A  +
mov edx [eax+8] +
test edx edx +
jz loc_467CF0  +
mov eax [eax] +
test eax eax +
jnz loc_467C45  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_467A00  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_467DB0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 20h +
mov byte ptr [ebx+104h] 20h +
cmp edx 0FFh +
jz loc_467E57  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 5Bh +
mov byte ptr [ebx+104h] 5Bh +
mov ecx [ebp+0] +
test ecx ecx +
jz loc_467CC5  +
mov eax ebx +
mov edx edi +
call sub_467270  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_467E20  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 5Dh +
mov byte ptr [ebx+104h] 5Dh +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
cmp dword ptr [eax] 2Ah +
jz loc_467E90  +
mov eax [ebx+100h] +
mov esi offset unk_497E8C +
jmp loc_467D2F  +
lea ecx [eax+1] +
add esi 1 +
cmp esi offset unk_497E8E +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_467D75  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [esi] +
jnz loc_467D10  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+28h+var_1C] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_20] ecx +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_28] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+28h+var_1C] +
jmp loc_467D13  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_467A00  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_467DE7  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 29h +
mov byte ptr [ebx+104h] 29h +
jmp loc_467C70  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_467C7E  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_467D9A  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_467CD3  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+28h+var_24] 0FFh +
mov [esp+28h+var_20] edx +
mov [esp+28h+var_28] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_467C9E  +
mov ecx [esp+28h+arg_0] +
mov edx edi +
mov eax ebx +
mov [esp+28h+var_28] 0 +
call sub_467A00  +
mov edx [ebx+100h] +
jmp loc_467C8F  +
***
mov edi edx +
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov esi [esp+34h+arg_0] +
mov [esp+34h+var_28] ecx +
test esi esi +
jz loc_467F90  +
mov ebp [esi+8] +
test ebp ebp +
jnz loc_467F90  +
mov eax esi +
mov edx 1 +
jmp loc_467EFE  +
and ch 0Eh +
jnz loc_468052  +
mov eax [eax] +
test eax eax +
jz loc_467F90  +
mov ecx [eax+8] +
test ecx ecx +
jnz loc_467F90  +
mov ecx [eax+4] +
mov ecx [ecx] +
sub ecx 19h +
cmp ecx 12h +
ja loc_467EE9  +
mov ebp edx +
shl ebp cl +
test ebp 43107h +
mov ecx ebp +
jz loc_467EE0  +
movzx eax byte ptr [ebx+104h] +
cmp al 20h +
jz loc_468067  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_468184  +
lea eax [edx+1] +
cmp eax 0FFh +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jnz loc_468078  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46807B  +
mov ebp [ebx+114h] +
mov edx edi +
mov ecx esi +
mov dword ptr [ebx+114h] 0 +
mov eax ebx +
mov [esp+34h+var_34] 0 +
call sub_467A00  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4680DF  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 28h +
mov edx [esp+34h+var_28] +
mov byte ptr [ebx+104h] 28h +
mov ecx [edx] +
test ecx ecx +
jz loc_468013  +
mov eax [ebx+124h] +
mov edx edi +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] eax +
lea eax [esp+34h+var_1C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_464ED0  +
mov eax [esp+34h+var_18] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_468116  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ecx esi +
mov edx edi +
mov byte ptr [ebx+eax] 29h +
mov eax ebx +
mov byte ptr [ebx+104h] 29h +
mov [esp+34h+var_34] 1 +
call sub_467A00  +
mov [ebx+114h] ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+104h] +
mov edx eax +
and edx 0FFFFFFFDh +
cmp dl 28h +
jnz loc_467F20  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_467F59  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov ebp [ebx+114h] +
mov ecx esi +
mov byte ptr [ebx+eax] 28h +
mov edx edi +
mov eax ebx +
mov byte ptr [ebx+104h] 28h +
mov dword ptr [ebx+114h] 0 +
mov [esp+34h+var_34] 0 +
call sub_467A00  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_46814D  +
lea edx [eax+1] +
cmp edx 0FFh +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
jnz loc_467FC4  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_467FC7  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_468021  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4680C2  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_467F3D  +
***
mov edi edx +
push esi  +
mov esi ecx +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+140h] +
test eax eax +
jz loc_4681EF  +
mov edx [ebx+110h] +
mov [esp+34h+var_20] eax +
mov [esp+34h+var_24] edx +
lea edx [esp+34h+var_24] +
mov [ebx+110h] edx +
mov ecx [esi] +
cmp dword ptr [ecx] 4 +
jz loc_468240  +
mov eax [ebx+124h] +
mov edx edi +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] eax +
lea eax [esp+34h+var_1C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_464ED0  +
mov edx [ebx+140h] +
mov eax [esp+34h+var_18] +
test edx edx +
mov [ebx+124h] eax +
jz loc_468235  +
mov eax [esp+34h+var_24] +
mov [ebx+110h] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebx+124h] +
lea ebp [esp+34h+var_1C] +
mov edx edi +
mov ecx [ecx+4] +
mov [ebx+124h] ebp +
mov [esp+34h+var_18] eax +
mov eax ebx +
mov [esp+34h+var_1C] ecx +
call sub_464ED0  +
mov eax [esp+34h+var_18] +
mov [ebx+124h] eax +
mov eax [ebx+140h] +
test eax eax +
jz loc_468282  +
mov eax [esp+34h+var_24] +
mov [ebx+110h] eax +
cmp byte ptr [ebx+104h] 3Ch +
jz loc_468387  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_468312  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov edx edi +
mov byte ptr [ebx+eax] 3Ch +
mov byte ptr [ebx+104h] 3Ch +
mov eax [esi] +
mov ecx [eax+8] +
mov eax [ebx+124h] +
mov [ebx+124h] ebp +
mov [esp+34h+var_1C] ecx +
mov [esp+34h+var_18] eax +
mov eax ebx +
call sub_464ED0  +
mov eax [esp+34h+var_18] +
cmp byte ptr [ebx+104h] 3Eh +
mov [ebx+124h] eax +
jz loc_4683B0  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_468350  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 3Eh +
mov byte ptr [ebx+104h] 3Eh +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_46829F  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4682F9  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_4683D7  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_468295  +
mov edx [ebx+100h] +
cmp edx 0FFh +
jz loc_46840B  +
lea eax [edx+1] +
mov [ebx+100h] eax +
mov byte ptr [ebx+edx] 20h +
mov byte ptr [ebx+104h] 20h +
jmp loc_4682EF  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_468398  +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov eax 1 +
xor edx edx +
add dword ptr [ebx+120h] 1 +
jmp loc_4683C1  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
cmp dword ptr [ecx] 31h +
jz loc_468480  +
mov eax [eax+124h] +
mov [esp+2Ch+var_14] ecx +
mov [esp+2Ch+var_10] eax +
lea eax [esp+2Ch+var_14] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_464ED0  +
mov eax [esp+2Ch+var_10] +
mov [ebx+124h] eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ecx+4] +
mov edi [eax+8] +
mov ebp [eax+4] +
test edi edi +
jz loc_468477  +
mov eax [ebx+100h] +
xor esi esi +
jmp loc_4684B2  +
lea ecx [eax+1] +
add esi 1 +
cmp edi esi +
mov [ebx+100h] ecx +
mov [ebx+eax] dl +
mov [ebx+104h] dl +
jz loc_468477  +
mov eax ecx +
cmp eax 0FFh +
movzx edx byte ptr [ebp+esi+0] +
jnz loc_468497  +
mov ecx [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+2Ch+var_20] edx +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+2Ch+var_24] ecx +
mov [esp+2Ch+var_28] 0FFh +
mov [esp+2Ch+var_2C] ebx +
call eax  +
mov ecx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
mov edx [esp+2Ch+var_20] +
jmp loc_46849A  +
***
mov ebx eax +
sub esp 34h +
mov eax [ecx] +
cmp eax 1 +
jbe loc_468513  +
cmp eax 30h +
jnz loc_468542  +
mov eax [ebx+124h] +
mov [esp+34h+var_C] ecx +
mov [esp+34h+var_8] eax +
lea eax [esp+34h+var_C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_464ED0  +
mov eax [esp+34h+var_8] +
mov [ebx+124h] eax +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
cmp eax 6 +
jz loc_468513  +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4685F4  +
lea esi [eax+1] +
mov [ebx+100h] esi +
mov byte ptr [ebx+eax] 28h +
mov eax [ebx+124h] +
mov byte ptr [ebx+104h] 28h +
mov [esp+34h+var_C] ecx +
mov [esp+34h+var_8] eax +
lea eax [esp+34h+var_C] +
mov [ebx+124h] eax +
mov eax ebx +
call sub_464ED0  +
mov eax [esp+34h+var_8] +
mov [ebx+124h] eax +
mov eax [ebx+100h] +
cmp eax 0FFh +
jz loc_4685C0  +
lea edx [eax+1] +
mov [ebx+100h] edx +
mov byte ptr [ebx+eax] 29h +
mov byte ptr [ebx+104h] 29h +
add esp 34h +
pop ebx  +
pop esi  +
retn   +
mov edx [ebx+10Ch] +
mov eax [ebx+108h] +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_2C] edx +
mov [esp+34h+var_34] ebx +
call eax  +
mov edx 1 +
xor eax eax +
add dword ptr [ebx+120h] 1 +
jmp loc_4685A5  +
mov esi [ebx+10Ch] +
mov eax [ebx+108h] +
mov [esp+34h+var_18] ecx +
mov [esp+34h+var_1C] edx +
mov [esp+34h+var_2C] esi +
mov esi 1 +
mov byte ptr [ebx+0FFh] 0 +
mov [esp+34h+var_30] 0FFh +
mov [esp+34h+var_34] ebx +
call eax  +
xor eax eax +
mov ecx [esp+34h+var_18] +
add dword ptr [ebx+120h] 1 +
mov edx [esp+34h+var_1C] +
jmp loc_46855B  +
***
mov edx [esp+4] +
xor eax eax +
test edx edx +
jz locret_468674  +
mov ecx [esp+8] +
test ecx ecx +
jz locret_468674  +
mov ecx [esp+0Ch] +
test ecx ecx +
jz locret_468674  +
mov eax [esp+8] +
mov dword ptr [edx] 0 +
mov [edx+4] eax +
mov eax [esp+0Ch] +
mov [edx+8] eax +
mov eax 1 +
retn   +
***
retn   +
***
push ebx  +
mov eax [esp+8] +
mov ecx [esp+0Ch] +
mov edx [esp+10h] +
test eax eax +
jz loc_4686B1  +
mov ebx ecx +
shr ebx 1Fh +
test bl bl +
jnz loc_4686B1  +
test edx edx +
jz loc_4686B1  +
mov dword ptr [eax] 32h +
mov [eax+4] ecx +
mov [eax+8] edx +
mov eax 1 +
pop ebx  +
retn   +
***
xor eax eax +
pop ebx  +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_4686F8  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_4686F8  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_4686FA  +
mov eax [esp+8] +
mov dword ptr [edx] 7 +
mov [edx+4] eax +
mov eax [esp+0Ch] +
mov [edx+8] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
mov edx [esp+4] +
test edx edx +
jz loc_468738  +
mov eax [esp+0Ch] +
test eax eax +
jz loc_468738  +
mov eax [esp+8] +
lea ecx [eax-1] +
xor eax eax +
cmp ecx 4 +
ja locret_46873A  +
mov eax [esp+8] +
mov dword ptr [edx] 8 +
mov [edx+4] eax +
mov eax [esp+0Ch] +
mov [edx+8] eax +
mov eax 1 +
retn   +
***
xor eax eax +
retn   +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
mov ecx [ebx+0Ch] +
movsx eax byte ptr [ecx] +
cmp al 72h +
jz loc_468890  +
cmp al 56h +
jz loc_468890  +
cmp al 4Bh +
jz loc_468890  +
lea edx [eax-30h] +
cmp dl 4Ah +
ja loc_468883  +
movzx edx dl +
jmp ds:off_497E9C[edx*4]  +
mov eax [ebx+34h] +
mov dword ptr [ebx+34h] 1 +
mov [esp+2Ch+var_24] eax +
movzx eax byte ptr [ecx+2] +
cmp al 4Ch +
jz loc_46947D  +
cmp al 54h +
jz loc_46946F  +
cmp al 73h +
jz loc_4691F5  +
cmp al 66h +
nop   +
lea esi [esi+0] +
jz loc_469232  +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_469158  +
cmp al 6Fh +
jz loc_469148  +
cmp al 74h +
setz dl  +
jnz loc_4698F1  +
cmp byte ptr [ecx+3] 6Ch +
jz loc_46962F  +
mov eax ebx +
call sub_469A80  +
test eax eax +
mov esi eax +
jz loc_469402  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_46948B  +
cmp ecx 32h +
jz loc_469767  +
cmp ecx 33h +
jnz loc_469402  +
xor ebp ebp +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_469855  +
mov eax ebx +
call sub_46D270  +
test ebp ebp +
mov [esp+2Ch+var_2C] eax +
jz loc_46883A  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_464440  +
mov ecx eax +
mov eax [esp+2Ch+var_24] +
mov edx 41h +
mov [ebx+34h] eax +
mov eax ebx +
mov [esp+2Ch+var_2C] 0 +
call sub_464440  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_468883  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_468883  +
lea ecx [edx+1] +
mov [ebx+0Ch] ecx +
cmp byte ptr [edx] 45h +
jz loc_468948  +
xor eax eax +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor ecx ecx +
mov eax ebx +
lea edx [esp+2Ch+var_10] +
call sub_4644F0  +
test eax eax +
mov esi eax +
jz loc_468883  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_4688F0  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov edx eax +
mov [esi] eax +
test edx edx +
jz loc_468883  +
mov eax [edx] +
sub eax 1Fh +
cmp eax 1 +
jbe loc_468900  +
mov edx [esp+2Ch+var_10] +
test edx edx +
jz loc_468883  +
mov eax [ebx+20h] +
cmp eax [ebx+24h] +
jge loc_468883  +
mov ecx [ebx+1Ch] +
mov [ecx+eax*4] edx +
add eax 1 +
mov [ebx+20h] eax +
mov eax [esp+2Ch+var_10] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_46A090  +
mov edx eax +
mov [esi] eax +
jmp loc_4688B7  +
mov ecx [esp+2Ch+var_10] +
mov eax [edx+4] +
mov [edx+4] ecx +
mov edx [esi] +
mov [esp+2Ch+var_10] edx +
mov [esi] eax +
jmp loc_4688C5  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_464880  +
mov edx 28h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_10] eax +
lea esi [esi+0] +
test eax eax +
jz loc_468883  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_468883  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax [esp+2Ch+var_10] +
mov [ebx+20h] edx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebx +
call sub_46A810  +
mov [esp+2Ch+var_10] eax +
jmp loc_468940  +
lea edx [ecx+1] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [ecx+1] +
cmp al 5Fh +
jz loc_468EF3  +
sub eax 30h +
cmp al 9 +
ja loc_468F3A  +
mov ecx edx +
nop   +
add ecx 1 +
mov [ebx+0Ch] ecx +
movzx eax byte ptr [ecx] +
sub eax 30h +
cmp al 9 +
jbe loc_4689A0  +
sub ecx edx +
mov eax ebx +
call sub_4644A0  +
test eax eax +
mov esi eax +
jz loc_4689CB  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jz loc_468EF5  +
xor eax eax +
jmp loc_468AA9  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov edx 25h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_10] eax +
jmp loc_468940  +
mov eax ebx +
call sub_46A090  +
mov [esp+2Ch+var_10] eax +
jmp loc_468940  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov edx 26h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_10] eax +
jmp loc_468940  +
lea eax [ecx+1] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+1] 0 +
jz loc_468883  +
lea eax [ecx+2] +
mov [ebx+0Ch] eax +
movzx eax byte ptr [ecx+1] +
sub eax 46h +
cmp al 30h +
ja loc_468883  +
movzx eax al +
jmp ds:off_497FC8[eax*4]  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
test eax eax +
mov esi eax +
jz loc_4689CB  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
test eax eax +
jz loc_4689CB  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 2Bh +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_10] eax +
jmp loc_468940  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov edx 24h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_10] eax +
jmp loc_468940  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov edx 22h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_10] eax +
jmp loc_468940  +
add ecx 1 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov edx 23h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_10] eax +
jmp loc_468940  +
movzx eax byte ptr [ecx+1] +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_468B5B  +
cmp al 5Fh +
jz loc_468B5B  +
sub eax 41h +
cmp al 19h +
ja loc_468F19  +
xor edx edx +
mov eax ebx +
call sub_4649A0  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [edx] 49h +
jnz loc_468885  +
mov eax ebx +
call sub_46A0E0  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_10] eax +
jmp loc_468940  +
add ecx 1 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_464880  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_469017  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov edx 21h +
mov [esp+2Ch+var_2C] esi +
mov ecx eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_10] eax +
jmp loc_468940  +
mov edx [ebx+14h] +
lea eax [eax+eax*4-1E5h] +
cmp edx [ebx+18h] +
lea esi ds:4986E0h[eax*4] +
jl loc_468EC1  +
mov esi large ds:4 +
xor eax eax +
mov edx [esi+4] +
add ecx 1 +
add [ebx+30h] edx +
mov [ebx+0Ch] ecx +
jmp loc_468885  +
mov eax ebx +
call sub_464800  +
mov esi [ebx+0Ch] +
mov [esp+2Ch+var_10] eax +
cmp byte ptr [esi] 49h +
jnz loc_468940  +
mov edx [ebx+38h] +
test edx edx +
jnz loc_46903C  +
test eax eax +
jz loc_468883  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_468883  +
mov ecx [ebx+1Ch] +
mov [ecx+edx*4] eax +
add edx 1 +
mov eax ebx +
mov [ebx+20h] edx +
call sub_46A0E0  +
jmp loc_468B7B  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_468EE6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469A65  +
mov dword ptr [eax] 27h +
mov edx offset off_49894C +
mov dword ptr [eax+4] offset off_49894C +
mov edx [edx+4] +
add [ebx+30h] edx +
jmp loc_468885  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_468EE6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469A65  +
mov dword ptr [eax] 27h +
mov edx offset off_498924 +
mov dword ptr [eax+4] offset off_498924 +
jmp loc_468C93  +
mov eax ebx +
call sub_46D820  +
jmp loc_468AA9  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_468EE6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469A65  +
mov dword ptr [eax] 27h +
mov edx offset off_498938 +
mov dword ptr [eax+4] offset off_498938 +
jmp loc_468C93  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_10] eax +
jmp loc_468940  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_468EE6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469A65  +
mov dword ptr [eax] 27h +
mov edx offset off_498960 +
mov dword ptr [eax+4] offset off_498960 +
jmp loc_468C93  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_468EE6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469A65  +
mov dword ptr [eax] 27h +
mov edx offset off_4988FC +
mov dword ptr [eax+4] offset off_4988FC +
jmp loc_468C93  +
mov ecx 4 +
mov edx offset aAuto +
mov eax ebx +
call sub_4644A0  +
jmp loc_468885  +
mov eax [ebx+14h] +
xor esi esi +
cmp eax [ebx+18h] +
jge loc_468DE4  +
mov edx [ebx+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebx+14h] eax +
lea esi [edx+esi*4] +
mov [esp+2Ch+var_10] esi +
mov dword ptr [esi] 2Ch +
movzx eax byte ptr [ecx+2] +
sub eax 30h +
cmp al 9 +
setbe al  +
movzx eax al +
test ax ax +
mov [esi+8] ax +
jnz loc_46919A  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov [esi+4] eax +
mov eax [esp+2Ch+var_10] +
mov eax [eax+4] +
test eax eax +
jz loc_468883  +
lea eax [ebx+0Ch] +
call sub_464720  +
mov eax [ebx+0Ch] +
xor edx edx +
cmp byte ptr [eax] 0 +
jz loc_468E44  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
xor edx edx +
cmp byte ptr [eax] 73h +
setz dl  +
mov eax [esp+2Ch+var_10] +
mov [eax+0Ah] dx +
jmp loc_468885  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_468EE6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469A65  +
mov dword ptr [eax] 27h +
mov edx offset off_4988E8 +
mov dword ptr [eax+4] offset off_4988E8 +
jmp loc_468C93  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_468EE6  +
mov eax [ebx+10h] +
lea ecx [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+ecx*4] +
test eax eax +
jz loc_469A65  +
mov dword ptr [eax] 27h +
mov edx offset off_498910 +
mov dword ptr [eax+4] offset off_498910 +
jmp loc_468C93  +
mov eax [ebx+10h] +
lea edi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+edi*4] +
test eax eax +
jz loc_469A70  +
mov dword ptr [eax] 27h +
mov [eax+4] esi +
jmp loc_468BFA  +
mov edx large ds:4 +
xor eax eax +
jmp loc_468C93  +
xor esi esi +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov ecx esi +
mov edx 2Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
jmp loc_468AA9  +
mov eax ebx +
call sub_46A810  +
test eax eax +
mov [esp+2Ch+var_10] eax +
jz loc_468883  +
cmp dword ptr [eax] 18h +
jnz loc_468948  +
jmp loc_468885  +
mov edi [ebx+34h] +
mov dword ptr [ebx+34h] 1 +
movzx eax byte ptr [ecx+1] +
cmp al 4Ch +
jz loc_4691D4  +
cmp al 54h +
jz loc_469286  +
cmp al 73h +
jz loc_4690B8  +
cmp al 66h +
jz loc_4690F5  +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_469093  +
cmp al 6Fh +
jz loc_469083  +
cmp al 74h +
setz dl  +
jnz loc_469A54  +
cmp byte ptr [ecx+2] 6Ch +
jz loc_469294  +
mov eax ebx +
call sub_469A80  +
test eax eax +
mov esi eax +
jz loc_4691EA  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_4693A2  +
cmp ecx 32h +
jz loc_4692C6  +
cmp ecx 33h +
jnz loc_4691EA  +
mov [esp+2Ch+var_24] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46983E  +
mov eax ebx +
call sub_46D270  +
cmp [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] eax +
jz loc_468FF5  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_464440  +
mov esi eax +
test esi esi +
mov [ebx+34h] edi +
jnz loc_4689BF  +
xor eax eax +
jmp loc_468AA9  +
mov eax ebx +
call sub_46A0E0  +
mov ecx [esp+2Ch+var_10] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_10] eax +
mov esi eax +
jmp loc_468BB6  +
mov eax [ebx+28h] +
mov ebp [ebx+14h] +
mov edi [ebx+20h] +
mov [esp+2Ch+var_24] eax +
mov eax [ebx+30h] +
mov [esp+2Ch+var_20] eax +
mov eax ebx +
call sub_46A0E0  +
mov ecx [ebx+0Ch] +
cmp byte ptr [ecx] 49h +
jz loc_4691AB  +
mov eax [esp+2Ch+var_24] +
mov [ebx+0Ch] esi +
mov [ebx+14h] ebp +
mov [ebx+20h] edi +
mov [ebx+28h] eax +
mov eax [esp+2Ch+var_20] +
mov [ebx+30h] eax +
mov eax [esp+2Ch+var_10] +
jmp loc_468940  +
cmp byte ptr [ecx+2] 6Eh +
jnz loc_468F91  +
add ecx 3 +
mov [ebx+0Ch] ecx +
mov eax ebx +
call sub_469CF0  +
test eax eax +
mov esi eax +
jz loc_4691EA  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
jz loc_4693DB  +
mov [ebx+34h] edi +
jmp loc_4689C2  +
movzx eax byte ptr [ecx+2] +
cmp al 72h +
jz loc_469432  +
cmp al 70h +
jnz loc_468F91  +
add ecx 3 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_46D270  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_469005  +
cmp byte ptr [ecx+2] 70h +
jnz loc_468F91  +
lea eax [ecx+3] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+3] 54h +
jnz loc_469661  +
add ecx 4 +
xor edx edx +
mov [ebx+0Ch] ecx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_4691EA  +
imul esi eax +
add eax 1 +
add esi [ebx+10h] +
mov [ebx+14h] eax +
test esi esi +
jz loc_4691EA  +
mov [esi+4] edx +
mov edx [ebx+0Ch] +
mov dword ptr [esi] 6 +
jmp loc_4690B0  +
cmp byte ptr [ecx+3] 6Eh +
jnz loc_4687DF  +
add ecx 4 +
mov [ebx+0Ch] ecx +
mov eax ebx +
call sub_469CF0  +
test eax eax +
jz loc_469402  +
mov edx [ebx+0Ch] +
mov ecx eax +
cmp byte ptr [edx] 49h +
jnz loc_46884A  +
mov [esp+2Ch+var_20] eax +
mov eax ebx +
call sub_46A0E0  +
mov ecx [esp+2Ch+var_20] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46884A  +
lea eax [ebx+0Ch] +
call sub_464720  +
mov esi [esp+2Ch+var_10] +
jmp loc_468E0A  +
mov ecx [esp+2Ch+var_10] +
test ecx ecx +
jz loc_468883  +
mov edx [ebx+20h] +
cmp edx [ebx+24h] +
jge loc_468883  +
mov esi [ebx+1Ch] +
mov [esi+edx*4] ecx +
add edx 1 +
mov [ebx+20h] edx +
jmp loc_468B7B  +
mov eax ebx +
call sub_46B2E0  +
mov esi eax +
jmp loc_469005  +
cmp al 77h +
jz loc_46931A  +
mov [ebx+34h] edi +
xor eax eax +
nop   +
jmp loc_468AA9  +
movzx eax byte ptr [ecx+3] +
cmp al 72h +
jz loc_46972A  +
cmp al 70h +
jnz loc_4687DF  +
add ecx 4 +
mov eax ebx +
mov [ebx+0Ch] ecx +
call sub_46D270  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46884A  +
cmp byte ptr [ecx+3] 70h +
jnz loc_4687DF  +
lea eax [ecx+4] +
mov [ebx+0Ch] eax +
cmp byte ptr [ecx+4] 54h +
jnz loc_4696BF  +
add ecx 5 +
xor esi esi +
mov [ebx+0Ch] ecx +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_469402  +
imul eax edx +
xor ecx ecx +
add eax [ebx+10h] +
add edx 1 +
mov [ebx+14h] edx +
test eax eax +
jz loc_46884A  +
mov dword ptr [eax] 6 +
mov ecx eax +
mov [eax+4] esi +
jmp loc_46884A  +
mov eax ebx +
call sub_464800  +
mov esi eax +
jmp loc_469005  +
xor esi esi +
test dl dl +
jnz loc_469708  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_46B500  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_469005  +
mov eax [eax+4] +
xor ebp ebp +
cmp eax 1 +
jz loc_4699C5  +
jle loc_469409  +
cmp eax 2 +
jz loc_469591  +
cmp eax 3 +
jnz loc_4691EA  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jz loc_4696E8  +
cmp byte ptr [ebp+0] 6Eh +
jnz loc_4691EA  +
movzx eax byte ptr [ebp+1] +
cmp al 61h +
jnz loc_4691E2  +
mov edx 5Fh +
mov eax ebx +
call sub_46B500  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] eax +
call sub_468740  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_469A39  +
cmp dl 70h +
jz loc_469A18  +
cmp dl 69h +
jnz loc_4691EA  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_4691EA  +
mov eax ebx +
call sub_46D270  +
mov [esp+2Ch+var_2C] eax +
mov ecx ebp +
mov edx 3Ah +
mov eax ebx +
call sub_464440  +
mov ecx [esp+2Ch+var_24] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_469005  +
mov eax [eax+4] +
mov [esp+2Ch+var_24] ecx +
mov ebp [eax] +
mov eax [eax+8] +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
mov ecx [esp+2Ch+var_24] +
test eax eax +
jz loc_4696D8  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
jmp loc_4692CB  +
mov eax ebx +
call sub_46A0E0  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_469005  +
cmp al 77h +
jz loc_46950D  +
xor ecx ecx +
jmp loc_46884A  +
test eax eax +
nop   +
lea esi [esi+0] +
jnz loc_4691EA  +
mov ecx esi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_469005  +
add ecx 3 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov esi eax +
mov eax ebx +
call sub_469CF0  +
mov ebp eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46969F  +
mov [esp+2Ch+var_2C] ebp +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_469005  +
mov eax ebx +
call sub_464800  +
mov ecx eax +
jmp loc_46884A  +
mov eax ebx +
call sub_46B2E0  +
mov ecx eax +
jmp loc_46884A  +
mov eax [eax+4] +
mov [esp+2Ch+var_20] ecx +
mov edi [eax] +
mov eax [eax+8] +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
mov ecx [esp+2Ch+var_20] +
test eax eax +
jz loc_469952  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_469924  +
jle loc_46980B  +
cmp eax 2 +
jz loc_469771  +
cmp eax 3 +
jnz loc_469402  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_4699A7  +
cmp byte ptr [edi] 6Eh +
jnz loc_469402  +
movzx eax byte ptr [edi+1] +
cmp al 61h +
jnz loc_4693FA  +
mov edx 5Fh +
mov eax ebx +
call sub_46B500  +
mov [esp+2Ch+var_2C] ebx +
mov edi eax +
call sub_468740  +
mov ebp eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46999A  +
cmp dl 70h +
jz loc_469979  +
cmp dl 69h +
jnz loc_469402  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_469402  +
mov eax ebx +
call sub_46D270  +
mov [esp+2Ch+var_2C] eax +
mov ecx ebp +
mov edx 3Ah +
mov eax ebx +
call sub_464440  +
mov ecx edi +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46884A  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_469678  +
mov eax ebx +
call sub_46D270  +
mov [esp+2Ch+var_24] eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jz loc_469717  +
mov [esp+2Ch+var_28] offset unk_497E8F +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jz loc_4695EF  +
mov [esp+2Ch+var_28] offset unk_497E92 +
mov [esp+2Ch+var_2C] ebp +
call strcmp  +
test eax eax +
jnz loc_469A46  +
mov eax ebx +
call sub_469CF0  +
mov ebp eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_469905  +
mov ecx [esp+2Ch+var_24] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] ebp +
call sub_464440  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_469005  +
xor esi esi +
test dl dl +
jnz loc_46982F  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_46B500  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46884A  +
mov eax ebx +
call sub_4647C0  +
add eax 1 +
mov edx eax +
jnz loc_469117  +
jmp loc_4691EA  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_46968E  +
sub eax 72h +
cmp al 1 +
ja loc_4695A0  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov [esp+2Ch+var_24] eax +
jmp loc_4695AB  +
mov eax ebx +
call sub_46A0E0  +
mov ecx ebp +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46945A  +
mov eax ebx +
call sub_4647C0  +
add eax 1 +
mov esi eax +
jnz loc_469254  +
xor ecx ecx +
jmp loc_46884A  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov [esp+2Ch+var_2C] eax +
jmp loc_468FF5  +
mov eax ebx +
call sub_46D270  +
mov [esp+2Ch+var_24] eax +
mov eax ebx +
call sub_46D270  +
mov ebp eax +
mov eax ebx +
call sub_46D270  +
jmp loc_469366  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov esi eax +
jmp loc_46929E  +
mov edx 45h +
mov eax ebx +
call sub_46B500  +
mov ebp eax +
jmp loc_469604  +
add ecx 4 +
mov [ebx+0Ch] ecx +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov esi eax +
mov eax ebx +
call sub_469CF0  +
mov ebp eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46986C  +
mov [esp+2Ch+var_2C] ebp +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46884A  +
mov eax [eax+4] +
xor edi edi +
jmp loc_4694BF  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46989F  +
mov eax ebx +
call sub_46D270  +
mov ebp eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46988C  +
mov [esp+2Ch+var_28] offset unk_497E8F +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_4697CD  +
mov [esp+2Ch+var_28] offset unk_497E92 +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jnz loc_4698C4  +
mov eax ebx +
call sub_469CF0  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_4698D2  +
mov ecx ebp +
mov edx 37h +
mov [esp+2Ch+var_2C] edi +
mov eax ebx +
call sub_464440  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46884A  +
test eax eax +
jnz loc_469402  +
mov ecx esi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46884A  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov esi eax +
jmp loc_469639  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46B500  +
jmp loc_468FDA  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46B500  +
jmp loc_468822  +
mov eax ebx +
call sub_46A0E0  +
mov ecx ebp +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_2C] eax +
jmp loc_469752  +
mov edx 45h +
mov eax ebx +
call sub_46B500  +
mov edi eax +
jmp loc_4697E2  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_4698B5  +
sub eax 72h +
cmp al 1 +
ja loc_469780  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov ebp eax +
jmp loc_469789  +
mov eax ebx +
call sub_46D270  +
mov edi eax +
jmp loc_4697E2  +
mov eax ebx +
call sub_46A0E0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov edi eax +
jmp loc_4697E2  +
cmp al 69h +
jz loc_4687D5  +
lea esi [esi+0] +
jmp loc_4687DF  +
mov eax ebx +
call sub_46A0E0  +
mov ecx ebp +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ebp eax +
jmp loc_469604  +
xor ebp ebp +
test edi edi +
jz loc_469938  +
movzx eax byte ptr [edi] +
cmp al 6Dh +
jnz loc_469946  +
xor ebp ebp +
cmp al [edi+1] +
jz loc_469962  +
cmp ecx 33h +
jnz loc_46881B  +
jmp loc_46880F  +
cmp al 70h +
jnz loc_469938  +
lea esi [esi+0] +
jmp loc_469931  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46883A  +
mov eax [ebx+0Ch] +
mov bp 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_469938  +
add eax 1 +
xor bp bp +
mov [ebx+0Ch] eax +
jmp loc_469938  +
cmp byte ptr [eax+1] 69h +
jnz loc_469402  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46B500  +
jmp loc_469557  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_469557  +
mov eax ebx +
call sub_46D270  +
mov edi eax +
mov eax ebx +
call sub_46D270  +
mov ebp eax +
mov eax ebx +
call sub_46D270  +
jmp loc_469557  +
test ebp ebp +
mov [esp+2Ch+var_24] 0 +
jz loc_4699DD  +
movzx eax byte ptr [ebp+0] +
cmp al 6Dh +
jz loc_4699EB  +
cmp al 70h +
jz loc_4699EB  +
cmp ecx 33h +
jnz loc_468FD3  +
jmp loc_468FC7  +
cmp al [ebp+1] +
mov [esp+2Ch+var_24] 0 +
jnz loc_4699DD  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_24] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_4699DD  +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_24] 0 +
jmp loc_4699DD  +
cmp byte ptr [eax+1] 69h +
jnz loc_4691EA  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46B500  +
jmp loc_469366  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_469366  +
mov eax ebx +
call sub_46D270  +
mov ebp eax +
jmp loc_469604  +
cmp al 69h +
jz loc_468F87  +
lea esi [esi+0] +
jmp loc_468F91  +
mov edx large ds:4 +
jmp loc_468C93  +
mov esi large ds:4 +
jmp loc_468BFA  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+1Ch+var_10] eax +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 0 +
jz loc_469B24  +
mov esi [esp+1Ch+var_10] +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx edi byte ptr [eax] +
cmp byte ptr [eax+1] 0 +
jz loc_469C14  +
lea edx [eax+2] +
mov [esi+0Ch] edx +
movzx eax byte ptr [eax+1] +
mov [esp+1Ch+var_11] al +
mov eax edi +
cmp al 76h +
jnz loc_469B96  +
movzx eax [esp+1Ch+var_11] +
sub eax 30h +
cmp al 9 +
ja loc_469B2B  +
mov edi [esp+1Ch+var_10] +
mov eax edi +
call sub_464880  +
mov edx [edi+14h] +
cmp edx [edi+18h] +
jge loc_469B8C  +
mov esi [esp+1Ch+var_10] +
lea ebx [edx+edx*2] +
add edx 1 +
mov ecx [esi+10h] +
mov [esi+14h] edx +
lea ecx [ecx+ebx*4] +
test ecx ecx +
jz loc_469B8C  +
test eax eax +
jz loc_469B8C  +
movsx edx [esp+1Ch+var_11] +
mov [ecx+8] eax +
mov eax ecx +
mov dword ptr [ecx] 32h +
sub edx 30h +
mov [ecx+4] edx +
jmp loc_469B8E  +
xor edi edi +
mov [esp+1Ch+var_11] 0 +
mov ebx 3Dh +
xor eax eax +
mov [esp+1Ch+var_18] ebx +
jmp loc_469B48  +
mov ebx edi +
cmp cl bl +
jle loc_469B83  +
mov [esp+1Ch+var_18] edx +
cmp eax [esp+1Ch+var_18] +
jz loc_469B8C  +
mov edx [esp+1Ch+var_18] +
mov ebx edi +
sub edx eax +
mov ecx edx +
shr ecx 1Fh +
add edx ecx +
sar edx 1 +
add edx eax +
mov ecx edx +
shl ecx 4 +
mov esi ds:off_498B00[ecx] +
lea ebp off_498B00[ecx] +
movzx ecx byte ptr [esi] +
cmp bl cl +
jnz loc_469B38  +
movzx ecx byte ptr [esi+1] +
cmp [esp+1Ch+var_11] cl +
jz loc_469BE0  +
cmp cl [esp+1Ch+var_11] +
jg loc_469B3E  +
lea eax [edx+1] +
cmp eax [esp+1Ch+var_18] +
jnz loc_469B48  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp [esp+1Ch+var_11] 76h +
jnz loc_469B2B  +
mov eax edi +
cmp al 63h +
jnz loc_469B2B  +
mov edi [esp+1Ch+var_10] +
mov eax [edi+34h] +
mov ebx [edi+38h] +
test eax eax +
setz al  +
movzx eax al +
mov [edi+38h] eax +
mov [esp+1Ch+var_1C] edi +
call sub_468740  +
mov edx 33h +
mov [edi+38h] ebx +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax edi +
call sub_464440  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edi [esp+1Ch+var_10] +
xor eax eax +
mov ecx [edi+14h] +
cmp ecx [edi+18h] +
jge loc_469B8E  +
mov edx [edi+10h] +
lea ebx [ecx+ecx*2] +
add ecx 1 +
mov [edi+14h] ecx +
lea edx [edx+ebx*4] +
test edx edx +
jz loc_469B8E  +
mov dword ptr [edx] 31h +
mov eax edx +
mov [edx+4] ebp +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+1Ch+var_11] 0 +
jmp loc_469ABC  +
***
mov ebx eax +
sub esp 24h +
mov eax [eax+0Ch] +
mov [esp+24h+var_8] 0 +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_469CC0  +
cmp dl 45h +
jz loc_469CC0  +
cmp dl 2Eh +
jz loc_469CC0  +
lea esi [esp+24h+var_8] +
jmp loc_469C94  +
cmp byte ptr [eax+1] 45h +
jz loc_469CA4  +
mov [esp+24h+var_24] ebx +
call sub_468740  +
test eax eax +
jz loc_469CC0  +
mov ecx eax +
mov edx 2Eh +
mov [esp+24h+var_24] 0 +
mov eax ebx +
call sub_464440  +
test eax eax +
mov [esi] eax +
jz loc_469CC0  +
lea esi [eax+8] +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
test dl dl +
jz loc_469CA4  +
cmp dl 45h +
jz loc_469CA4  +
cmp dl 2Eh +
jz loc_469CA4  +
cmp dl 4Fh +
jz loc_469C50  +
cmp dl 52h +
jnz loc_469C56  +
cmp byte ptr [eax+1] 45h +
jnz loc_469C56  +
mov eax [esp+24h+var_8] +
test eax eax +
jz loc_469CC0  +
mov edx [eax+8] +
test edx edx +
jz loc_469CC8  +
add esp 24h +
pop ebx  +
pop esi  +
retn   +
add esp 24h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
mov edx [eax+4] +
cmp dword ptr [edx] 27h +
jnz loc_469CB3  +
mov edx [edx+4] +
cmp dword ptr [edx+10h] 9 +
jnz loc_469CB3  +
mov edx [edx+4] +
sub [ebx+30h] edx +
mov dword ptr [eax+4] 0 +
jmp loc_469CB3  +
***
push esi  +
mov ebx eax +
sub esp 14h +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 4Ah +
jz loc_46A067  +
xor esi esi +
test edx edx +
jnz loc_46A06D  +
mov eax ebx +
call sub_469C20  +
test eax eax +
jz loc_46A080  +
mov [esp+14h+var_14] eax +
mov ecx esi +
mov edx 29h +
mov eax ebx +
call sub_464440  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+14h+var_14] ebx +
call sub_468740  +
test eax eax +
mov esi eax +
jnz loc_46A045  +
nop   +
lea esi [esi+0] +
xor eax eax +
jmp loc_46A061  +
***
sub esp 8 +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 46h +
jz loc_46A0A5  +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 59h +
jnz loc_46A0B7  +
add eax 2 +
mov [ebx+0Ch] eax +
mov edx 1 +
mov eax ebx +
call sub_46A030  +
mov edx eax +
mov eax ebx +
call sub_4645F0  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 45h +
jnz loc_46A09E  +
add edx 1 +
mov [ebx+0Ch] edx +
add esp 8 +
pop ebx  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 3Ch +
mov eax [eax+2Ch] +
mov edx [ebp+0Ch] +
mov [esp+48h+var_34] eax +
movzx eax byte ptr [edx] +
sub eax 49h +
cmp al 1 +
ja loc_46A270  +
lea eax [edx+1] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+1] 45h +
jz loc_46A58A  +
mov [esp+48h+var_1C] 0 +
lea ebx [esp+48h+var_1C] +
movzx edx byte ptr [edx+1] +
jmp loc_46A16F  +
sub edx 49h +
cmp dl 1 +
ja loc_46A290  +
mov eax ebp +
call sub_46A0E0  +
mov ecx eax +
test ecx ecx +
jz loc_46A270  +
mov [esp+48h+var_48] 0 +
mov edx 2Fh +
mov eax ebp +
call sub_464440  +
test eax eax +
mov [ebx] eax +
jz loc_46A270  +
lea ebx [eax+8] +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46A404  +
cmp dl 4Ch +
jz loc_46A280  +
jle loc_46A123  +
cmp dl 58h +
lea esi [esi+0] +
jnz loc_46A290  +
lea esi [eax+1] +
mov edi [ebp+34h] +
mov [ebp+0Ch] esi +
mov dword ptr [ebp+34h] 1 +
movzx edx byte ptr [eax+1] +
mov [esp+48h+var_3C] edi +
cmp dl 4Ch +
jz loc_46A420  +
cmp dl 54h +
jz loc_46A431  +
cmp dl 73h +
jz loc_46A370  +
cmp dl 66h +
jz loc_46A3B2  +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_46A2B0  +
cmp dl 6Fh +
jz loc_46A2A0  +
cmp dl 74h +
setz cl  +
jnz loc_46A7B2  +
cmp byte ptr [eax+2] 6Ch +
jz loc_46A442  +
mov eax ebp +
call sub_469A80  +
test eax eax +
mov [esp+48h+var_38] eax +
jz loc_46A360  +
mov eax [esp+48h+var_38] +
mov edx [eax] +
cmp edx 31h +
jz loc_46A2E4  +
cmp edx 32h +
jz loc_46A480  +
cmp edx 33h +
jnz loc_46A360  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46A6B5  +
mov eax ebp +
call sub_46D270  +
test esi esi +
mov [esp+48h+var_48] eax +
jz loc_46A24E  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_464440  +
mov [esp+48h+var_48] eax +
mov ecx [esp+48h+var_38] +
mov edx 35h +
mov eax ebp +
call sub_464440  +
mov edx [ebp+0Ch] +
mov ecx eax +
mov eax [esp+48h+var_3C] +
mov [ebp+34h] eax +
cmp byte ptr [edx] 45h +
jz loc_46A2D9  +
nop   +
xor eax eax +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_46B2E0  +
mov ecx eax +
jmp loc_46A138  +
mov [esp+48h+var_48] ebp +
call sub_468740  +
mov ecx eax +
jmp loc_46A138  +
cmp byte ptr [eax+2] 6Eh +
jnz loc_46A1ED  +
add eax 3 +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_469CF0  +
mov edx [ebp+0Ch] +
test eax eax +
jz loc_46A363  +
cmp byte ptr [edx] 49h +
mov ecx eax +
jz loc_46A494  +
mov eax [esp+48h+var_3C] +
mov [ebp+34h] eax +
cmp byte ptr [edx] 45h +
jnz loc_46A270  +
add edx 1 +
mov [ebp+0Ch] edx +
jmp loc_46A138  +
mov eax [eax+4] +
mov edi offset aSt +
mov esi [eax] +
mov [esp+48h+var_2C] eax +
mov eax [eax+8] +
mov [esp+48h+var_30] esi +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_46A6CC  +
mov eax [esp+48h+var_2C] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_46A7C5  +
jle loc_46A4C0  +
cmp eax 2 +
jz loc_46A4E9  +
cmp eax 3 +
jnz loc_46A360  +
mov esi [esp+48h+var_30] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_46A6FE  +
mov eax [esp+48h+var_30] +
cmp byte ptr [eax] 6Eh +
jz loc_46A601  +
nop   +
mov edx [ebp+0Ch] +
xor ecx ecx +
jmp loc_46A2CD  +
movzx edx byte ptr [eax+2] +
cmp dl 72h +
jz loc_46A5AA  +
cmp dl 70h +
jnz loc_46A1ED  +
add eax 3 +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_46D270  +
mov edx 49h +
mov [esp+48h+var_48] 0 +
mov ecx eax +
mov eax ebp +
call sub_464440  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_46A2CD  +
cmp byte ptr [eax+2] 70h +
jnz loc_46A1ED  +
lea edx [eax+3] +
mov [ebp+0Ch] edx +
cmp byte ptr [eax+3] 54h +
jnz loc_46A5EA  +
add eax 4 +
xor edx edx +
mov [ebp+0Ch] eax +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_46A360  +
mov ecx [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea ecx [ecx+esi*4] +
test ecx ecx +
jz loc_46A68D  +
mov [ecx+4] edx +
mov edx [ebp+0Ch] +
mov dword ptr [ecx] 6 +
jmp loc_46A2CD  +
add eax 1 +
mov [ebp+0Ch] eax +
mov eax [esp+48h+var_34] +
mov [ebp+2Ch] eax +
mov eax [esp+48h+var_1C] +
add esp 3Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_46B2E0  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_46A2CD  +
mov eax ebp +
call sub_464800  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_46A2CD  +
xor edi edi +
test cl cl +
jnz loc_46A6D9  +
add esi 2 +
mov edx 45h +
mov [ebp+0Ch] esi +
mov eax ebp +
call sub_46B500  +
mov ecx edi +
mov edx 30h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_464440  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_46A2CD  +
mov eax [esp+48h+var_38] +
mov [esp+48h+var_30] 0 +
mov eax [eax+4] +
jmp loc_46A31F  +
mov [esp+48h+var_38] eax +
mov eax ebp +
call sub_46A0E0  +
mov ecx [esp+48h+var_38] +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_464440  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_46A2CD  +
test eax eax +
jnz loc_46A360  +
mov ecx [esp+48h+var_38] +
mov edx 34h +
mov eax ebp +
mov [esp+48h+var_48] 0 +
call sub_464440  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_46A2CD  +
mov eax [esp+48h+var_38] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46A71C  +
mov eax ebp +
call sub_46D270  +
mov [esp+48h+var_2C] eax +
mov esi [esp+48h+var_30] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_46A6EB  +
mov esi [esp+48h+var_30] +
mov edi offset unk_497E8F +
mov ecx 3 +
cmps   +
jz loc_46A545  +
mov esi [esp+48h+var_30] +
mov edi offset unk_497E92 +
mov ecx 3 +
cmps   +
jnz loc_46A743  +
mov eax ebp +
call sub_469CF0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46A772  +
mov ecx [esp+48h+var_2C] +
mov edx 37h +
mov eax ebp +
mov [esp+48h+var_48] esi +
call sub_464440  +
mov ecx [esp+48h+var_38] +
mov edx 36h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_464440  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_46A2CD  +
add edx 2 +
xor ecx ecx +
mov [ebp+0Ch] edx +
mov eax ebp +
mov edx 2Fh +
mov [esp+48h+var_48] 0 +
call sub_464440  +
jmp loc_46A272  +
add eax 3 +
mov [ebp+0Ch] eax +
mov [esp+48h+var_48] ebp +
call sub_468740  +
mov esi eax +
mov eax ebp +
call sub_469CF0  +
mov edi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46A695  +
mov [esp+48h+var_48] edi +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_464440  +
mov edx [ebp+0Ch] +
mov ecx eax +
jmp loc_46A2CD  +
mov eax ebp +
call sub_4647C0  +
add eax 1 +
mov edx eax +
jnz loc_46A3D4  +
jmp loc_46A360  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_46A751  +
mov edx 5Fh +
mov eax ebp +
call sub_46B500  +
mov [esp+48h+var_48] ebp +
mov esi eax +
call sub_468740  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_46A765  +
xor ecx ecx +
cmp al 70h +
jz loc_46A791  +
cmp al 69h +
jnz loc_46A2CD  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_46A2CD  +
mov eax ebp +
call sub_46D270  +
mov [esp+48h+var_48] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_464440  +
mov ecx esi +
mov edx 39h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_464440  +
mov ecx [esp+48h+var_38] +
mov edx 38h +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_464440  +
mov ecx eax +
mov edx [ebp+0Ch] +
jmp loc_46A2CD  +
mov eax ebp +
call sub_46A0E0  +
mov ecx edi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_464440  +
mov [esp+48h+var_48] eax +
jmp loc_46A5D2  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_46B500  +
jmp loc_46A236  +
mov [esp+48h+var_48] ebp +
call sub_468740  +
jmp loc_46A24B  +
mov [esp+48h+var_48] ebp +
call sub_468740  +
mov esi [ebp+0Ch] +
mov edi eax +
jmp loc_46A44C  +
mov edx 45h +
mov eax ebp +
call sub_46B500  +
mov esi eax +
jmp loc_46A55A  +
mov eax ebp +
call sub_46D270  +
mov esi eax +
mov eax ebp +
call sub_46D270  +
mov edi eax +
mov eax ebp +
call sub_46D270  +
jmp loc_46A656  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46A732  +
sub eax 72h +
cmp al 1 +
ja loc_46A4FC  +
mov [esp+48h+var_48] ebp +
call sub_468740  +
mov [esp+48h+var_2C] eax +
jmp loc_46A507  +
mov eax ebp +
call sub_46D270  +
mov esi eax +
jmp loc_46A55A  +
cmp al 77h +
jz loc_46A60D  +
lea esi [esi+0] +
jmp loc_46A360  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_46A656  +
mov eax ebp +
call sub_46A0E0  +
mov ecx esi +
mov edx 4 +
mov [esp+48h+var_48] eax +
mov eax ebp +
call sub_464440  +
mov esi eax +
jmp loc_46A55A  +
cmp byte ptr [edx+1] 69h +
jnz loc_46A2CD  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_46B500  +
jmp loc_46A656  +
cmp dl 69h +
jz loc_46A1E3  +
nop   +
lea esi [esi+0] +
jmp loc_46A1ED  +
mov eax [esp+48h+var_30] +
xor esi esi +
test eax eax +
jz loc_46A7DA  +
movzx eax byte ptr [eax] +
cmp al 6Dh +
jz loc_46A7E8  +
cmp al 70h +
jz loc_46A7E8  +
cmp edx 33h +
jnz loc_46A22F  +
jmp loc_46A223  +
mov edi [esp+48h+var_30] +
xor esi esi +
cmp al [edi+1] +
jnz loc_46A7DA  +
mov eax [ebp+0Ch] +
mov si 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_46A7DA  +
add eax 1 +
xor si si +
mov [ebp+0Ch] eax +
jmp loc_46A7DA  +
***
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 53h +
jz loc_46A994  +
jle loc_46A873  +
cmp al 55h +
jz loc_46A860  +
cmp al 5Ah +
nop   +
jnz loc_46A940  +
add edx 1 +
mov eax esi +
mov [esi+0Ch] edx +
xor edx edx +
call sub_46AC20  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 45h +
mov ebx eax +
jz loc_46AB00  +
xor ebx ebx +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
call sub_469CF0  +
mov ebx eax +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Eh +
jnz loc_46A940  +
add edx 1 +
mov ecx 1 +
mov [esi+0Ch] edx +
mov eax esi +
lea edx [esp+30h+var_14] +
call sub_4644F0  +
test eax eax +
mov edi eax +
jz loc_46A853  +
xor edx edx +
mov eax esi +
call sub_4645F0  +
xor ebp ebp +
mov [esp+30h+var_24] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
lea esi [esi+0] +
test bl bl +
jz loc_46A932  +
cmp bl 44h +
jz loc_46AA96  +
lea edx [ebx-30h] +
cmp dl 9 +
jbe loc_46AA40  +
lea edx [ebx-61h] +
cmp dl 19h +
jbe loc_46AA40  +
cmp bl 43h +
jz loc_46AA40  +
cmp bl 55h +
jz loc_46AA40  +
cmp bl 4Ch +
jz loc_46AA40  +
cmp bl 53h +
jz loc_46AAE0  +
cmp bl 49h +
jz loc_46AAC0  +
cmp bl 54h +
jz loc_46AAF1  +
cmp bl 45h +
nop   +
jz loc_46ABDD  +
cmp bl 4Dh +
jnz loc_46A932  +
test ebp ebp +
lea esi [esi+0] +
jz loc_46A932  +
lea edx [eax+1] +
mov [esi+0Ch] edx +
movzx ebx byte ptr [eax+1] +
mov eax edx +
test bl bl +
jnz loc_46A8B4  +
mov dword ptr [edi] 0 +
xor ebx ebx +
jmp loc_46A855  +
mov eax esi +
call sub_469CF0  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 49h +
mov ebx eax +
jnz loc_46A869  +
test eax eax +
jz loc_46A853  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_46A853  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebx +
add eax 1 +
mov [esi+20h] eax +
mov eax esi +
call sub_46A0E0  +
mov ecx ebx +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_464440  +
mov ebx eax +
jmp loc_46A869  +
cmp byte ptr [edx+1] 74h +
jz loc_46A9D2  +
xor edx edx +
mov eax esi +
call sub_4649A0  +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_46A869  +
mov eax esi +
call sub_46A0E0  +
mov ecx edi +
mov edx 4 +
mov [esp+30h+var_30] eax +
mov eax esi +
call sub_464440  +
mov ebx eax +
jmp loc_46A869  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_469CF0  +
mov ecx 3 +
mov edx offset aStd +
mov ebx eax +
mov eax esi +
call sub_4644A0  +
mov edx 1 +
mov [esp+30h+var_30] ebx +
mov ecx eax +
mov eax esi +
call sub_464440  +
add dword ptr [esi+30h] 3 +
mov edi eax +
mov eax [esi+0Ch] +
mov ebx edi +
cmp byte ptr [eax] 49h +
jnz loc_46A869  +
test edi edi +
jz loc_46A853  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_46A853  +
mov edx [esi+1Ch] +
mov [edx+eax*4] edi +
add eax 1 +
mov [esi+20h] eax +
jmp loc_46A9B3  +
mov eax esi +
call sub_469CF0  +
test ebp ebp +
jz loc_46AAB0  +
mov edx 1 +
mov [esp+30h+var_30] eax +
mov ecx ebp +
mov eax esi +
call sub_464440  +
mov ebp eax +
cmp bl 53h +
jz loc_46AA8B  +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jz loc_46AAB4  +
test ebp ebp +
jz loc_46A932  +
mov eax [esi+20h] +
cmp eax [esi+24h] +
jge loc_46A932  +
mov edx [esi+1Ch] +
mov [edx+eax*4] ebp +
add eax 1 +
mov [esi+20h] eax +
mov eax [esi+0Ch] +
movzx ebx byte ptr [eax] +
jmp loc_46A8B0  +
movzx eax byte ptr [eax+1] +
and eax 0FFFFFFDFh +
cmp al 54h +
jnz loc_46AA40  +
mov [esp+30h+var_30] esi +
call sub_468740  +
test ebp ebp +
jnz loc_46AA4B  +
lea esi [esi+0] +
mov ebp eax +
jmp loc_46AA5E  +
mov ebx 45h +
jmp loc_46A8BD  +
test ebp ebp +
jz loc_46A932  +
mov eax esi +
call sub_46A0E0  +
mov edx 4 +
jmp loc_46AA50  +
mov edx 1 +
mov eax esi +
call sub_4649A0  +
jmp loc_46AA47  +
mov eax esi +
call sub_464800  +
jmp loc_46AA47  +
lea eax [edx+1] +
mov [esi+0Ch] eax +
movzx eax byte ptr [edx+1] +
cmp al 73h +
jz loc_46ABB2  +
cmp al 64h +
mov ebp 0FFFFFFFFh +
jz loc_46AB81  +
mov eax esi +
call sub_46A810  +
test eax eax +
mov edi eax +
jz loc_46AB34  +
mov eax [eax] +
cmp eax 44h +
jz loc_46AB34  +
cmp eax 46h +
jnz loc_46ABA0  +
cmp ebp 0FFFFFFFFh +
mov edx edi +
jz loc_46AB64  +
mov eax [esi+14h] +
xor edx edx +
cmp eax [esi+18h] +
jge loc_46AB64  +
mov edx [esi+10h] +
lea ecx [eax+eax*2] +
add eax 1 +
mov [esi+14h] eax +
lea edx [edx+ecx*4] +
test edx edx +
jz loc_46AB64  +
mov dword ptr [edx] 45h +
mov [edx+8] ebp +
mov [edx+4] edi +
mov [esp+30h+var_30] edx +
mov ecx ebx +
mov eax esi +
mov edx 2 +
call sub_464440  +
add esp 2Ch +
mov ebx eax +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_4647C0  +
test eax eax +
mov ebp eax +
jns loc_46AB1B  +
xor ebx ebx +
jmp loc_46A855  +
mov eax esi +
call sub_464850  +
test eax eax +
jnz loc_46AB34  +
xor ebx ebx +
jmp loc_46A855  +
add edx 2 +
mov eax esi +
mov [esi+0Ch] edx +
call sub_464850  +
test eax eax +
jz loc_46A853  +
mov ecx 0Eh +
mov edx offset aStringLiteral +
mov eax esi +
call sub_4644A0  +
mov [esp+30h+var_30] eax +
jmp loc_46AB67  +
test ebp ebp +
mov [edi] ebp +
jz loc_46A853  +
mov edi [esp+30h+var_24] +
test edi edi +
jz loc_46ABFA  +
mov eax [esp+30h+var_14] +
mov [esp+30h+var_14] edi +
mov [edi+4] eax +
mov eax [esi+0Ch] +
cmp byte ptr [eax] 45h +
jnz loc_46A853  +
add eax 1 +
mov ebx [esp+30h+var_14] +
mov [esi+0Ch] eax +
jmp loc_46A869  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov eax [eax+0Ch] +
movzx ecx byte ptr [eax] +
cmp cl 54h +
jz loc_46AD00  +
cmp cl 47h +
jz loc_46AD00  +
mov eax ebx +
mov edi edx +
call sub_46A810  +
test eax eax +
mov esi eax +
jnz loc_46ACB2  +
mov eax [ebx+0Ch] +
test esi esi +
movzx edx byte ptr [eax] +
mov eax esi +
jz loc_46AD18  +
test dl dl +
jz loc_46AD18  +
cmp dl 45h +
jz loc_46AD18  +
mov edx [eax] +
cmp edx 4 +
jz loc_46AD20  +
jb loc_46AC90  +
sub edx 1Ch +
cmp edx 4 +
ja loc_46AC90  +
mov eax [eax+4] +
test eax eax +
jnz loc_46AC71  +
lea esi [esi+0] +
xor edx edx +
mov eax ebx +
call sub_46A030  +
mov ecx esi +
mov edx 3 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_464440  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test edi edi +
jz loc_46AC50  +
test byte ptr [ebx+8] 1 +
jnz loc_46AC50  +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
ja loc_46ACD3  +
mov esi [esi+4] +
mov edx [esi] +
lea eax [edx-1Ch] +
cmp eax 4 +
jbe loc_46ACC6  +
cmp edx 2 +
mov eax esi +
jnz loc_46AD18  +
mov eax [esi+8] +
mov ecx [eax] +
lea edx [ecx-1Ch] +
cmp edx 4 +
ja loc_46ACF4  +
mov eax [eax+4] +
mov edi [eax] +
lea edx [edi-1Ch] +
cmp edx 4 +
jbe loc_46ACE7  +
mov [esi+8] eax +
mov eax esi +
jmp loc_46AD18  +
mov ecx [ebx+30h] +
lea edx [ecx+14h] +
mov [ebx+30h] edx +
movzx edx byte ptr [eax] +
cmp dl 54h +
jz loc_46AD60  +
cmp dl 47h +
jz loc_46AD35  +
xor eax eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [eax+4] +
test eax eax +
jz loc_46AD90  +
cmp dword ptr [eax] 33h +
ja loc_46AD90  +
mov edx [eax] +
jmp ds:off_4980D0[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_46AD16  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx edi byte ptr [eax+1] +
lea edx [edi-41h] +
cmp dl 31h +
ja loc_46AD16  +
movzx edx dl +
jmp ds:off_4981A0[edx*4]  +
lea edx [eax+1] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+1] 0 +
jz loc_46AD16  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
movzx eax byte ptr [eax+1] +
sub eax 43h +
cmp al 33h +
ja loc_46AD16  +
movzx eax al +
jmp ds:off_498268[eax*4]  +
mov eax [eax+8] +
test eax eax +
jnz loc_46AD27  +
nop   +
mov edx 1 +
jmp loc_46AC92  +
lea eax [ebx+0Ch] +
call sub_464720  +
cmp eax 1 +
jle loc_46AD16  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 0 +
jz loc_46AD16  +
lea edi [edx+1] +
mov [ebx+0Ch] edi +
cmp byte ptr [edx] 5Fh +
jnz loc_46AD16  +
lea ebp [eax-1] +
mov [esp+1Ch+var_10] 0 +
movzx eax byte ptr [edi] +
test al al +
jz loc_46AD16  +
xor esi esi +
cmp al 24h +
jz loc_46B122  +
movzx eax byte ptr [edi+esi] +
test al al +
jz loc_46ADF9  +
cmp al 24h +
jz loc_46ADF9  +
add esi 1 +
cmp esi ebp +
jl loc_46ADE6  +
mov edx edi +
mov ecx esi +
mov eax ebx +
sub ebp esi +
call sub_4644A0  +
mov edi [ebx+0Ch] +
add edi esi +
mov [ebx+0Ch] edi +
test eax eax +
jz loc_46AD16  +
mov ecx [esp+1Ch+var_10] +
test ecx ecx +
jz loc_46B170  +
mov [esp+1Ch+var_1C] eax +
mov edx 3Eh +
mov eax ebx +
call sub_464440  +
test eax eax +
mov [esp+1Ch+var_10] eax +
jz loc_46AD16  +
test ebp ebp +
jg loc_46ADD1  +
mov ecx [esp+1Ch+var_10] +
mov edx 3Dh +
mov eax ebx +
mov [esp+1Ch+var_1C] 0 +
call sub_464440  +
jmp loc_46AD18  +
mov eax ebx +
call sub_46A810  +
mov edx 13h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
jmp loc_46AD18  +
mov eax ebx +
call sub_46A810  +
mov esi eax +
mov eax ebx +
call sub_464780  +
mov ecx esi +
mov edx 16h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_464440  +
jmp loc_46AD18  +
xor edx edx +
mov eax ebx +
call sub_46AC20  +
mov edx 17h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
jmp loc_46AD18  +
cmp byte ptr [eax+2] 0 +
jz loc_46B179  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 6Eh +
jnz loc_46B179  +
xor edx edx +
mov eax ebx +
call sub_46AC20  +
mov edx 48h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
jmp loc_46AD18  +
mov edx 76h +
mov eax ebx +
call sub_464BA0  +
test eax eax +
jz loc_46AD16  +
xor edx edx +
mov eax ebx +
call sub_46AC20  +
mov edx 10h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
jmp loc_46AD18  +
mov eax ebx +
call sub_46A810  +
mov edx 14h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
jmp loc_46AD18  +
mov [esp+1Ch+var_1C] ebx +
call sub_468740  +
mov edx 0Eh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
jmp loc_46AD18  +
mov [esp+1Ch+var_1C] ebx +
call sub_468740  +
mov esi eax +
lea eax [ebx+0Ch] +
call sub_464720  +
test eax eax +
js loc_46AD16  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 5Fh +
jnz loc_46AD16  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_468740  +
mov edx 0Bh +
add dword ptr [ebx+30h] 5 +
mov [esp+1Ch+var_1C] esi +
mov ecx eax +
mov eax ebx +
call sub_464440  +
jmp loc_46AD18  +
mov edx 68h +
mov eax ebx +
call sub_464BA0  +
test eax eax +
jz loc_46AD16  +
xor edx edx +
mov eax ebx +
call sub_46AC20  +
mov edx 0Fh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
jmp loc_46AD18  +
xor edx edx +
mov eax ebx +
call sub_464BA0  +
test eax eax +
jz loc_46AD16  +
xor edx edx +
mov eax ebx +
call sub_464BA0  +
test eax eax +
jz loc_46AD16  +
xor edx edx +
mov eax ebx +
call sub_46AC20  +
mov edx 11h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
jmp loc_46AD18  +
mov eax ebx +
call sub_46A810  +
mov edx 15h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
jmp loc_46AD18  +
add ecx 0Fh +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_468740  +
mov edx 9 +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
jmp loc_46AD18  +
add ecx 0Ah +
mov [ebx+30h] ecx +
mov [esp+1Ch+var_1C] ebx +
call sub_468740  +
mov edx 0Ah +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
jmp loc_46AD18  +
mov [esp+1Ch+var_1C] ebx +
call sub_468740  +
mov edx 0Dh +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
jmp loc_46AD18  +
mov [esp+1Ch+var_1C] ebx +
call sub_468740  +
mov edx 12h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
jmp loc_46AD18  +
mov [esp+1Ch+var_1C] ebx +
call sub_468740  +
mov edx 0Ch +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
jmp loc_46AD18  +
movzx eax byte ptr [edi+1] +
cmp al 53h +
jz loc_46B1A3  +
cmp al 5Fh +
jz loc_46B19C  +
cmp al 24h +
jnz loc_46AD16  +
mov ecx 24h +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46B1AA  +
mov eax [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea eax [eax+esi*4] +
test eax eax +
jz loc_46B1AA  +
mov [eax+4] ecx +
mov ecx [ebx+0Ch] +
sub ebp 2 +
mov dword ptr [eax] 3Fh +
lea edi [ecx+2] +
mov [ebx+0Ch] edi +
jmp loc_46AE16  +
mov [esp+1Ch+var_10] eax +
jmp loc_46AE3D  +
xor edx edx +
mov eax ebx +
call sub_46AC20  +
mov edx 47h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
jmp loc_46AD18  +
mov ecx 2Eh +
jmp loc_46B13B  +
mov ecx 2Fh +
jmp loc_46B13B  +
add dword ptr [ebx+0Ch] 2 +
jmp loc_46AD16  +
***
push ebx  +
sub esp 10h +
mov esi [esp+10h+arg_0] +
mov ebx [esp+10h+arg_4] +
mov eax [esi+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 5Fh +
jz loc_46B2C0  +
test ebx ebx +
jnz loc_46B1E6  +
cmp dl 5Ah +
jz loc_46B1EF  +
xor eax eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
add eax 1 +
mov edx ebx +
mov [esi+0Ch] eax +
mov eax esi +
call sub_46AC20  +
test ebx ebx +
mov edi eax +
jz loc_46B1E8  +
test byte ptr [esi+8] 1 +
jz loc_46B1E8  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
jnz loc_46B1E8  +
movzx eax byte ptr [edx+1] +
lea ecx [eax-61h] +
cmp cl 19h +
jbe loc_46B294  +
cmp al 5Fh +
jz loc_46B294  +
sub eax 30h +
cmp al 9 +
ja loc_46B28B  +
movzx ecx byte ptr [edx] +
mov ebx edx +
cmp cl 2Eh +
jnz loc_46B262  +
movzx eax byte ptr [ebx+1] +
sub eax 30h +
cmp al 9 +
ja loc_46B262  +
movzx ecx byte ptr [ebx+2] +
lea eax [ebx+2] +
lea ebx [ecx-30h] +
cmp bl 9 +
mov ebx eax +
ja loc_46B22E  +
nop   +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_46B250  +
cmp cl 2Eh +
jz loc_46B233  +
mov ecx ebx +
mov eax esi +
sub ecx edx +
mov [esi+0Ch] ebx +
call sub_4644A0  +
mov ecx edi +
mov edx 4Bh +
mov [esp+10h+var_10] eax +
mov eax esi +
call sub_464440  +
mov edx [esi+0Ch] +
cmp byte ptr [edx] 2Eh +
mov edi eax +
jz loc_46B212  +
add esp 10h +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx ecx byte ptr [edx+2] +
lea ebx [edx+2] +
lea eax [ecx-61h] +
cmp al 19h +
ja loc_46B2AF  +
add ebx 1 +
movzx ecx byte ptr [ebx] +
lea eax [ecx-61h] +
cmp al 19h +
jbe loc_46B2A2  +
cmp cl 5Fh +
jz loc_46B2A2  +
jmp loc_46B22E  +
lea ecx [eax+1] +
mov [esi+0Ch] ecx +
movzx edx byte ptr [eax+1] +
mov eax ecx +
jmp loc_46B1E1  +
***
jmp sub_46B2E0  +
***
push esi  +
push edi  +
mov edi ecx +
push esi  +
mov esi edx +
push ebx  +
mov ebx eax +
sub esp 5Ch +
mov dword ptr [edx] 0 +
mov dword ptr [ecx] 0 +
mov [esp+68h+var_68] eax +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_4C] 4000h +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
lea eax [eax+edx*4] +
lea eax ds:12h[eax*4] +
and eax 0FFFFFFF0h +
mov [ebp+var_30] edx +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_472FB0  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+68h+var_60] +
and eax 0FFFFFFF0h +
call sub_472FB0  +
sub esp eax +
lea eax [esp+68h+var_60] +
mov [ebp+var_38] eax +
lea eax [ebp+var_54] +
mov [esp+68h+var_64] 1 +
mov [esp+68h+var_68] eax +
mov [ebp+var_44] ecx +
call sub_46B1C0  +
mov ebx eax +
xor eax eax +
lea esi [esi+0] +
***
mov eax [ebx+4] +
lea esp [ebp-0Ch] +
mov eax [ebx+4] +
jmp loc_46B4B0  +
***
jmp loc_46B4B0  +
***
push edi  +
push esi  +
push ebx  +
sub esp 4Ch +
mov ebx [eax+0Ch] +
mov [esp+58h+var_1C] 0 +
lea eax [esp+58h+var_1C] +
mov [esp+58h+var_41] dl +
mov [esp+58h+var_4C] eax +
cmp [ebx] dl +
jz loc_46BD4A  +
mov eax [ebp+34h] +
mov dword ptr [ebp+34h] 1 +
mov [esp+58h+var_48] eax +
movzx eax byte ptr [ebx] +
cmp al 4Ch +
jz loc_46B7B1  +
cmp al 54h +
jz loc_46B7D1  +
cmp al 73h +
jz loc_46B670  +
cmp al 66h +
jz loc_46B6B0  +
lea edx [eax-30h] +
cmp dl 9 +
jbe loc_46B5FE  +
cmp al 6Fh +
jz loc_46B5F2  +
cmp al 74h +
setz dl  +
jnz loc_46D0D6  +
cmp byte ptr [ebx+1] 6Ch +
jz loc_46B7E0  +
mov eax ebp +
call sub_469A80  +
test eax eax +
mov ebx eax +
jz loc_46B7A0  +
mov eax [eax] +
cmp eax 31h +
jz loc_46B710  +
cmp eax 32h +
jz loc_46B811  +
cmp eax 33h +
jnz loc_46B7A0  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46BE33  +
mov eax ebp +
call sub_46D270  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_46B5DD  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_464440  +
mov [esp+58h+var_58] eax +
mov ecx ebx +
mov edx 35h +
mov eax ebp +
call sub_464440  +
mov ecx eax +
jmp loc_46B7C0  +
cmp byte ptr [ebx+1] 6Eh +
jnz loc_46B582  +
add ebx 2 +
mov [ebp+0Ch] ebx +
mov eax ebp +
call sub_469CF0  +
test eax eax +
jz loc_46B7A0  +
mov edx [ebp+0Ch] +
mov ecx eax +
cmp byte ptr [edx] 49h +
jz loc_46B821  +
mov eax [esp+58h+var_48] +
mov [ebp+34h] eax +
mov [esp+58h+var_58] 0 +
mov edx 2Eh +
mov eax ebp +
call sub_464440  +
mov edi [esp+58h+var_4C] +
test eax eax +
mov [edi] eax +
jz loc_46B7A7  +
mov ebx [ebp+0Ch] +
add eax 8 +
mov [esp+58h+var_4C] eax +
movzx eax [esp+58h+var_41] +
cmp [ebx] al +
jnz loc_46B528  +
add ebx 1 +
mov eax [esp+58h+var_1C] +
mov [ebp+0Ch] ebx +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+1] +
cmp al 72h +
jz loc_46B934  +
cmp al 70h +
jnz loc_46B582  +
add ebx 2 +
mov eax ebp +
mov [ebp+0Ch] ebx +
call sub_46D270  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
mov eax ebp +
call sub_464440  +
mov ecx eax +
jmp loc_46B7C0  +
cmp byte ptr [ebx+1] 70h +
jnz loc_46B582  +
lea eax [ebx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [ebx+2] 54h +
jz loc_46B8D0  +
mov eax ebp +
call sub_4647C0  +
add eax 1 +
jz loc_46B7A0  +
mov edx [ebp+14h] +
cmp edx [ebp+18h] +
jge loc_46B7A0  +
mov ecx [ebp+10h] +
lea ebx [edx+edx*2] +
add edx 1 +
mov [ebp+14h] edx +
lea ecx [ecx+ebx*4] +
test ecx ecx +
jz loc_46B7A0  +
mov dword ptr [ecx] 6 +
mov [ecx+4] eax +
jmp loc_46B61B  +
mov edi [ebx+4] +
mov esi [edi] +
mov [esp+58h+var_3C] edi +
mov edi [edi+8] +
mov [esp+58h+var_40] esi +
lea ecx [edi-2] +
mov edi offset aSt +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_46BA20  +
mov esi [esp+58h+var_3C] +
mov edx [esi+0Ch] +
cmp edx 1 +
jz loc_46D085  +
jle loc_46B910  +
cmp edx 2 +
jz loc_46B846  +
cmp edx 3 +
jnz loc_46B7A0  +
mov esi [esp+58h+var_40] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_46BA52  +
mov eax [esp+58h+var_40] +
cmp byte ptr [eax] 6Eh +
jnz loc_46B7A0  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jz loc_46B971  +
cmp al 77h +
jz loc_46B971  +
nop   +
lea esi [esi+0] +
mov eax [esp+58h+var_48] +
mov [ebp+34h] eax +
xor eax eax +
add esp 4Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax ebp +
call sub_46B2E0  +
mov ecx eax +
lea esi [esi+0] +
mov eax [esp+58h+var_48] +
test ecx ecx +
mov [ebp+34h] eax +
jnz loc_46B622  +
jmp loc_46B7A7  +
mov eax ebp +
call sub_464800  +
mov ecx eax +
jmp loc_46B7C0  +
xor esi esi +
test dl dl +
jnz loc_46BA40  +
add ebx 2 +
mov edx 45h +
mov [ebp+0Ch] ebx +
mov eax ebp +
call sub_46B500  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov ecx eax +
jmp loc_46B7C0  +
mov edx [ebx+4] +
mov [esp+58h+var_40] 0 +
jmp loc_46B74B  +
mov [esp+58h+var_40] eax +
mov eax ebp +
call sub_46A0E0  +
mov ecx [esp+58h+var_40] +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov ecx eax +
jmp loc_46B7C0  +
mov eax [ebx+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46BD23  +
mov eax ebp +
call sub_46D270  +
mov [esp+58h+var_3C] eax +
mov esi [esp+58h+var_40] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_46BD10  +
mov esi [esp+58h+var_40] +
mov edi offset unk_497E8F +
mov ecx 3 +
cmps   +
jz loc_46B8E0  +
mov esi [esp+58h+var_40] +
mov edi offset unk_497E92 +
mov ecx 3 +
cmps   +
jz loc_46B8E0  +
mov eax ebp +
call sub_46D270  +
mov esi eax +
mov ecx [esp+58h+var_3C] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_464440  +
mov ecx ebx +
mov edx 36h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov ecx eax +
jmp loc_46B7C0  +
add ebx 3 +
xor eax eax +
mov [ebp+0Ch] ebx +
jmp loc_46B6DA  +
mov eax ebp +
call sub_469CF0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_46B8A3  +
mov eax ebp +
call sub_46A0E0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov esi eax +
jmp loc_46B8A3  +
test edx edx +
jnz loc_46B7A0  +
mov ecx ebx +
mov edx 34h +
mov [esp+58h+var_58] 0 +
mov eax ebp +
call sub_464440  +
mov ecx eax +
jmp loc_46B7C0  +
add ebx 2 +
mov [ebp+0Ch] ebx +
mov [esp+58h+var_58] ebp +
call sub_468740  +
mov ebx eax +
mov eax ebp +
call sub_469CF0  +
mov edx [ebp+0Ch] +
cmp byte ptr [edx] 49h +
mov esi eax +
jz loc_46BD6A  +
mov [esp+58h+var_58] eax +
mov ecx ebx +
mov edx 1 +
mov eax ebp +
call sub_464440  +
mov ecx eax +
jmp loc_46B7C0  +
mov edx 5Fh +
mov eax ebp +
call sub_46B500  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_3C] eax +
call sub_468740  +
mov [esp+58h+var_40] eax +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46BEA4  +
cmp dl 70h +
jz loc_46BF4C  +
cmp dl 69h +
jnz loc_46B7A0  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46B7A0  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_46B500  +
xor ecx ecx +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov ecx eax +
mov [esp+58h+var_58] ecx +
mov ecx [esp+58h+var_40] +
mov edx 3Ah +
mov eax ebp +
call sub_464440  +
mov ecx [esp+58h+var_3C] +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov ecx ebx +
mov edx 38h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov ecx eax +
jmp loc_46B7C0  +
mov [esp+58h+var_58] ebp +
call sub_468740  +
mov ecx ebx +
mov edx 35h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov ecx eax +
jmp loc_46B7C0  +
mov [esp+58h+var_58] ebp +
call sub_468740  +
mov ebx [ebp+0Ch] +
mov esi eax +
jmp loc_46B7EA  +
mov edx [ebp+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_46C112  +
cmp al 54h +
jz loc_46C15A  +
cmp al 73h +
jz loc_46BF6F  +
cmp al 66h +
jz loc_46BE4A  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_46BD8A  +
mov eax ebp +
call sub_469CF0  +
mov edx [ebp+0Ch] +
test eax eax +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jz loc_46BAA1  +
cmp al 49h +
jz loc_46C59C  +
cmp al 4Ch +
jz loc_46C128  +
cmp al 54h +
nop   +
lea esi [esi+0] +
jz loc_46C170  +
cmp al 73h +
jz loc_46BFA3  +
cmp al 66h +
jz loc_46C014  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_46BEC1  +
cmp al 6Fh +
jz loc_46BEB1  +
cmp al 74h +
setz cl  +
jnz loc_46CBE9  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46C4A9  +
mov eax ebp +
call sub_469A80  +
test eax eax +
mov [esp+58h+var_40] eax +
jz loc_46C0EA  +
mov eax [esp+58h+var_40] +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_38] eax +
jz loc_46C186  +
mov eax [esp+58h+var_38] +
cmp eax 32h +
jz loc_46C53D  +
cmp eax 33h +
jnz loc_46C0EA  +
mov edx [ebp+0Ch] +
movzx ecx byte ptr [edx] +
cmp [esp+58h+var_38] 33h +
mov [esp+58h+var_30] 0 +
jnz loc_46BB49  +
cmp cl 5Fh +
jz loc_46C8C7  +
cmp cl 4Ch +
jz loc_46CD0D  +
cmp cl 54h +
jz loc_46CC7A  +
cmp cl 73h +
nop   +
jz loc_46C9B3  +
cmp cl 66h +
jz loc_46C960  +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_46C922  +
cmp cl 6Fh +
jz loc_46C912  +
cmp cl 74h +
setz al  +
jnz loc_46D017  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46CCA1  +
mov eax ebp +
call sub_469A80  +
test eax eax +
mov [esp+58h+var_38] eax +
jz loc_46CC9A  +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_34] eax +
jz loc_46CE0B  +
mov eax [esp+58h+var_34] +
cmp eax 32h +
jz loc_46CD32  +
cmp eax 33h +
jnz loc_46CC9A  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46D161  +
mov eax ebp +
call sub_46D270  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_46BBFE  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_464440  +
mov [esp+58h+var_58] eax +
mov ecx [esp+58h+var_38] +
mov edx 35h +
mov eax ebp +
call sub_464440  +
mov esi eax +
mov eax [esp+58h+var_30] +
test eax eax +
jz loc_46C8DB  +
mov ecx esi +
mov edx 37h +
mov [esp+58h+var_58] esi +
mov eax ebp +
call sub_464440  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_46C13E  +
cmp al 54h +
jz loc_46C14C  +
cmp al 73h +
jz loc_46BFD7  +
cmp al 66h +
jz loc_46C072  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_46BF0A  +
cmp al 6Fh +
jz loc_46BEFA  +
cmp al 74h +
setz cl  +
jnz loc_46D072  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46C4FD  +
mov eax ebp +
call sub_469A80  +
test eax eax +
mov [esp+58h+var_38] eax +
jz loc_46BEAA  +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_34] eax +
jz loc_46C28B  +
mov eax [esp+58h+var_34] +
cmp eax 32h +
jz loc_46C54B  +
cmp eax 33h +
jnz loc_46BEAA  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46CD1B  +
mov eax ebp +
call sub_46D270  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_46BCF8  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_464440  +
mov [esp+58h+var_58] eax +
mov ecx [esp+58h+var_38] +
mov edx 35h +
mov eax ebp +
call sub_464440  +
mov ecx eax +
jmp loc_46B9DD  +
mov edx 45h +
mov eax ebp +
call sub_46B500  +
mov esi eax +
jmp loc_46B8A3  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46BD39  +
sub eax 72h +
cmp al 1 +
ja loc_46B855  +
mov [esp+58h+var_58] ebp +
call sub_468740  +
mov [esp+58h+var_3C] eax +
jmp loc_46B860  +
add ebx 1 +
xor ecx ecx +
mov [ebp+0Ch] ebx +
mov edx 2Eh +
mov eax ebp +
mov [esp+58h+var_58] 0 +
call sub_464440  +
jmp loc_46B7A9  +
mov eax ebp +
call sub_46A0E0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov [esp+58h+var_58] eax +
jmp loc_46B95C  +
cmp al 6Fh +
jz loc_46C0FD  +
cmp al 74h +
setz cl  +
jnz loc_46CCDE  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46C4D2  +
mov eax ebp +
call sub_469A80  +
test eax eax +
mov [esp+58h+var_40] eax +
jz loc_46C0CF  +
mov eax [esp+58h+var_40] +
mov eax [eax] +
cmp eax 31h +
mov [esp+58h+var_3C] eax +
jz loc_46C3A0  +
mov eax [esp+58h+var_3C] +
cmp eax 32h +
jz loc_46C52F  +
cmp eax 33h +
jnz loc_46C0CF  +
xor esi esi +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46D0E5  +
mov eax ebp +
call sub_46D270  +
test esi esi +
mov [esp+58h+var_58] eax +
jz loc_46C8A0  +
mov ecx eax +
mov edx 37h +
mov eax ebp +
call sub_464440  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jmp loc_46BAA1  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_46B500  +
jmp loc_46B5C5  +
cmp byte ptr [edx+1] 70h +
jnz loc_46BDA7  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_46C79F  +
add edx 3 +
xor ecx ecx +
mov [ebp+0Ch] edx +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_46C0D2  +
mov edi [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea esi [edi+esi*4] +
test esi esi +
mov [esp+58h+var_3C] esi +
jz loc_46BE2B  +
mov eax [esp+58h+var_3C] +
mov dword ptr [eax] 6 +
mov [eax+4] ecx +
movzx eax byte ptr [edx] +
jmp loc_46BAA1  +
add eax 1 +
mov [ebp+0Ch] eax +
xor ecx ecx +
jmp loc_46B9DD  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46BAEF  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_469CF0  +
mov edx [ebp+0Ch] +
test eax eax +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
jz loc_46BC4A  +
cmp al 49h +
jnz loc_46BC4A  +
mov eax ebp +
call sub_46A0E0  +
mov ecx [esp+58h+var_40] +
mov edx 4 +
mov [esp+58h+var_58] eax +
jmp loc_46BC39  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46BC93  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_469CF0  +
test eax eax +
mov ecx eax +
jz loc_46B9DD  +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_46B9DD  +
mov eax ebp +
mov [esp+58h+var_38] ecx +
call sub_46A0E0  +
mov ecx [esp+58h+var_38] +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov ecx eax +
jmp loc_46B9DD  +
cmp byte ptr [eax+1] 69h +
jnz loc_46B7A0  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_46B500  +
mov ecx eax +
jmp loc_46B9DD  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46C7C0  +
cmp al 70h +
jnz loc_46BDA7  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_46D270  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
jmp loc_46BE1D  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46C831  +
cmp al 70h +
jnz loc_46BAEF  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_46D270  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
jmp loc_46BC39  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46C7F4  +
cmp al 70h +
jnz loc_46BC93  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_46D270  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
mov eax ebp +
call sub_464440  +
mov ecx eax +
jmp loc_46B9DD  +
cmp byte ptr [edx+1] 70h +
jnz loc_46BAEF  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_46C880  +
add edx 3 +
xor ecx ecx +
mov [ebp+0Ch] edx +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_46C0ED  +
mov edi [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea esi [edi+esi*4] +
test esi esi +
mov [esp+58h+var_40] esi +
jz loc_46BC47  +
mov eax [esp+58h+var_40] +
mov dword ptr [eax] 6 +
mov [eax+4] ecx +
movzx eax byte ptr [edx] +
jmp loc_46BC4A  +
cmp byte ptr [edx+1] 70h +
jnz loc_46BC93  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_46C865  +
add edx 3 +
mov [ebp+0Ch] edx +
xor edx edx +
mov eax [ebp+14h] +
xor ecx ecx +
cmp eax [ebp+18h] +
jge loc_46B9DD  +
mov ecx [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea ecx [ecx+esi*4] +
test ecx ecx +
jz loc_46B9DD  +
mov dword ptr [ecx] 6 +
mov [ecx+4] edx +
jmp loc_46B9DD  +
cmp al 77h +
jz loc_46C42F  +
mov edx [ebp+0Ch] +
movzx eax byte ptr [edx] +
mov [esp+58h+var_3C] 0 +
jmp loc_46BAA1  +
cmp al 77h +
jz loc_46C211  +
mov edx [ebp+0Ch] +
movzx eax byte ptr [edx] +
mov [esp+58h+var_40] 0 +
jmp loc_46BC4A  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46BDA7  +
add edx 2 +
mov [ebp+0Ch] edx +
jmp loc_46BA84  +
mov eax ebp +
call sub_46B2E0  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jmp loc_46BAA1  +
mov eax ebp +
call sub_46B2E0  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
jmp loc_46BC4A  +
mov eax ebp +
call sub_46B2E0  +
mov ecx eax +
jmp loc_46B9DD  +
mov eax ebp +
call sub_464800  +
mov ecx eax +
jmp loc_46B9DD  +
mov eax ebp +
call sub_464800  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_3C] eax +
movzx eax byte ptr [edx] +
jmp loc_46BAA1  +
mov eax ebp +
call sub_464800  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_40] eax +
movzx eax byte ptr [edx] +
jmp loc_46BC4A  +
mov eax [esp+58h+var_40] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_34] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
mov [esp+58h+var_30] eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_46C8EC  +
mov eax [esp+58h+var_34] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jz loc_46D178  +
jle loc_46C5B4  +
cmp ecx 2 +
jz loc_46C708  +
cmp ecx 3 +
jnz loc_46C0EA  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_46C9F0  +
cmp byte ptr [edx] 6Eh +
jnz loc_46C0EA  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_46C0E2  +
mov edx 5Fh +
mov eax ebp +
call sub_46B500  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_468740  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_46D202  +
cmp al 70h +
jz loc_46D1E1  +
cmp al 69h +
jnz loc_46D154  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_46D142  +
mov eax ebp +
call sub_46D270  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_464440  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov ecx [esp+58h+var_40] +
mov edx 38h +
mov [esp+58h+var_58] eax +
jmp loc_46BC39  +
mov eax [esp+58h+var_38] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_30] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
mov [esp+58h+var_2C] eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_46C905  +
mov eax [esp+58h+var_30] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jz loc_46D025  +
jle loc_46C576  +
cmp ecx 2 +
jz loc_46C668  +
cmp ecx 3 +
jnz loc_46BEAA  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_46CA2E  +
xor ecx ecx +
cmp byte ptr [edx] 6Eh +
jnz loc_46B9DD  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_46CC3F  +
mov edx 5Fh +
mov eax ebp +
call sub_46B500  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_468740  +
mov edi eax +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46CC6D  +
xor ecx ecx +
cmp dl 70h +
jz loc_46CC4C  +
cmp dl 69h +
jnz loc_46B9DD  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46B9DD  +
mov eax ebp +
call sub_46D270  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_464440  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov ecx [esp+58h+var_38] +
mov edx 38h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov ecx eax +
jmp loc_46B9DD  +
mov eax [esp+58h+var_40] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_38] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
mov [esp+58h+var_34] eax +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_46C8AE  +
mov eax [esp+58h+var_38] +
mov ecx [eax+0Ch] +
cmp ecx 1 +
jz loc_46D0FC  +
jle loc_46C559  +
cmp ecx 2 +
jz loc_46C5D1  +
cmp ecx 3 +
lea esi [esi+0] +
jnz loc_46C0CF  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_46CBAC  +
cmp byte ptr [edx] 6Eh +
jnz loc_46C0CF  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_46C0C7  +
mov edx 5Fh +
mov eax ebp +
call sub_46B500  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_468740  +
mov edx [ebp+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_46CC13  +
cmp al 70h +
jz loc_46CBF6  +
cmp al 69h +
jnz loc_46CBDC  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_46CBCA  +
mov eax ebp +
call sub_46D270  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_464440  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov ecx [esp+58h+var_40] +
mov edx 38h +
mov [esp+58h+var_58] eax +
jmp loc_46BE1D  +
xor esi esi +
test cl cl +
jnz loc_46CB4E  +
add dword ptr [ebp+0Ch] 2 +
mov edx 45h +
mov eax ebp +
call sub_46B500  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
jmp loc_46BC39  +
xor esi esi +
test cl cl +
jnz loc_46CA0E  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_46B500  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
jmp loc_46BE1D  +
xor esi esi +
test cl cl +
jnz loc_46CB9D  +
add dword ptr [ebp+0Ch] 2 +
mov edx 45h +
mov eax ebp +
call sub_46B500  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov ecx eax +
jmp loc_46B9DD  +
mov eax [esp+58h+var_40] +
xor edx edx +
mov ecx [eax+4] +
jmp loc_46C3E1  +
mov eax [esp+58h+var_40] +
xor edx edx +
mov ecx [eax+4] +
jmp loc_46C1C7  +
mov eax [esp+58h+var_38] +
xor edx edx +
mov ecx [eax+4] +
jmp loc_46C2CC  +
test ecx ecx +
jnz loc_46C0CF  +
mov [esp+58h+var_58] 0 +
mov ecx [esp+58h+var_40] +
mov edx 34h +
jmp loc_46BE1D  +
test ecx ecx +
jnz loc_46BEAA  +
mov ecx [esp+58h+var_38] +
mov edx 34h +
mov eax ebp +
mov [esp+58h+var_58] 0 +
call sub_464440  +
mov ecx eax +
jmp loc_46B9DD  +
mov eax ebp +
call sub_46A0E0  +
mov ecx [esp+58h+var_3C] +
mov edx 4 +
mov [esp+58h+var_58] eax +
jmp loc_46BE1D  +
test ecx ecx +
jnz loc_46C0EA  +
mov [esp+58h+var_58] 0 +
mov ecx [esp+58h+var_40] +
mov edx 34h +
jmp loc_46BC39  +
mov eax [esp+58h+var_40] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46CAFF  +
mov eax ebp +
mov [esp+58h+var_38] edx +
call sub_46D270  +
mov edx [esp+58h+var_38] +
mov [esp+58h+var_3C] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_46CAEC  +
mov edi offset unk_497E8F +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_46C62F  +
mov edi offset unk_497E92 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_46CA20  +
mov eax ebp +
call sub_469CF0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46CC20  +
mov ecx [esp+58h+var_3C] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_464440  +
mov ecx [esp+58h+var_40] +
mov edx 36h +
mov [esp+58h+var_58] eax +
jmp loc_46BE1D  +
mov eax [esp+58h+var_38] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46CAAF  +
mov eax ebp +
mov [esp+58h+var_30] edx +
call sub_46D270  +
mov edx [esp+58h+var_30] +
mov [esp+58h+var_34] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_46CA8E  +
mov edi offset unk_497E8F +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_46C6C6  +
mov edi offset unk_497E92 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_46CADE  +
mov eax ebp +
call sub_469CF0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46D1C2  +
mov ecx [esp+58h+var_34] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_464440  +
mov ecx [esp+58h+var_38] +
mov edx 36h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov ecx eax +
jmp loc_46B9DD  +
mov eax [esp+58h+var_40] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46CA5F  +
mov eax ebp +
mov [esp+58h+var_34] edx +
call sub_46D270  +
mov edx [esp+58h+var_34] +
mov [esp+58h+var_38] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_46CA4C  +
mov edi offset unk_497E8F +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_46C766  +
mov edi offset unk_497E92 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_46CAA1  +
mov eax ebp +
call sub_469CF0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46CCEB  +
mov ecx [esp+58h+var_38] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_464440  +
mov ecx [esp+58h+var_40] +
mov edx 36h +
mov [esp+58h+var_58] eax +
jmp loc_46BC39  +
mov eax ebp +
call sub_4647C0  +
mov edx [ebp+0Ch] +
add eax 1 +
mov ecx eax +
jnz loc_46BE6C  +
jmp loc_46C0D2  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_468740  +
mov edi eax +
mov eax ebp +
call sub_469CF0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46CB2E  +
mov [esp+58h+var_58] esi +
mov ecx edi +
mov edx 1 +
jmp loc_46BE1D  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_468740  +
mov esi eax +
mov eax ebp +
call sub_469CF0  +
mov edi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46CB5D  +
mov [esp+58h+var_58] edi +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_464440  +
mov ecx eax +
jmp loc_46B9DD  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_468740  +
mov edi eax +
mov eax ebp +
call sub_469CF0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46CB7D  +
mov [esp+58h+var_58] esi +
mov ecx edi +
mov edx 1 +
jmp loc_46BC39  +
mov eax ebp +
call sub_4647C0  +
add eax 1 +
mov edx eax +
jnz loc_46C094  +
xor ecx ecx +
jmp loc_46B9DD  +
mov eax ebp +
call sub_4647C0  +
mov edx [ebp+0Ch] +
add eax 1 +
mov ecx eax +
jnz loc_46C036  +
jmp loc_46C0ED  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
jmp loc_46BE1D  +
mov [esp+58h+var_58] ebp +
call sub_468740  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
jmp loc_46BE1D  +
add edx 1 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_46B500  +
mov esi eax +
mov [esp+58h+var_58] esi +
mov ecx [esp+58h+var_40] +
mov edx 35h +
jmp loc_46BC39  +
mov [esp+58h+var_58] ebp +
call sub_468740  +
mov ecx [esp+58h+var_40] +
mov edx 35h +
mov [esp+58h+var_58] eax +
jmp loc_46BC39  +
mov [esp+58h+var_58] ebp +
call sub_468740  +
jmp loc_46BCF5  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46BB99  +
add edx 2 +
mov [ebp+0Ch] edx +
mov eax ebp +
call sub_469CF0  +
test eax eax +
mov esi eax +
jz loc_46CC9A  +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_46BC10  +
mov eax ebp +
call sub_46A0E0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov esi eax +
jmp loc_46BC10  +
cmp byte ptr [edx+1] 70h +
jnz loc_46BB99  +
lea eax [edx+2] +
mov [ebp+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_46CC88  +
add edx 3 +
mov [ebp+0Ch] edx +
xor edx edx +
mov eax [ebp+14h] +
cmp eax [ebp+18h] +
jge loc_46CC9A  +
mov ecx [ebp+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebp+14h] eax +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_46BC10  +
mov dword ptr [esi] 6 +
mov [esi+4] edx +
jmp loc_46BC10  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46D20F  +
cmp al 70h +
jnz loc_46BB99  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
call sub_46D270  +
mov edx 49h +
mov [esp+58h+var_58] 0 +
mov ecx eax +
mov eax ebp +
call sub_464440  +
mov esi eax +
jmp loc_46BC10  +
mov eax ebp +
call sub_46D270  +
mov esi eax +
mov eax ebp +
call sub_46D270  +
mov edi eax +
mov eax ebp +
call sub_46D270  +
jmp loc_46C258  +
mov [esp+58h+var_58] ebp +
call sub_468740  +
mov edx [ebp+0Ch] +
mov esi eax +
jmp loc_46C4DC  +
mov eax ebp +
call sub_46D270  +
mov esi eax +
jmp loc_46C644  +
mov eax ebp +
call sub_46D270  +
mov esi eax +
mov eax ebp +
call sub_46D270  +
mov edi eax +
mov eax ebp +
call sub_46D270  +
jmp loc_46C364  +
mov edx 45h +
mov eax ebp +
call sub_46B500  +
mov esi eax +
jmp loc_46C77B  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_46CA75  +
sub eax 72h +
cmp al 1 +
ja loc_46C71B  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_34] edx +
call sub_468740  +
mov edx [esp+58h+var_34] +
mov [esp+58h+var_38] eax +
jmp loc_46C72E  +
mov edx 45h +
mov eax ebp +
call sub_46B500  +
mov esi eax +
jmp loc_46C6DB  +
mov eax ebp +
call sub_46D270  +
mov esi eax +
jmp loc_46C77B  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_46CAC5  +
sub eax 72h +
cmp al 1 +
ja loc_46C67B  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_30] edx +
call sub_468740  +
mov edx [esp+58h+var_30] +
mov [esp+58h+var_34] eax +
jmp loc_46C68E  +
mov eax ebp +
call sub_46D270  +
mov esi eax +
jmp loc_46C6DB  +
mov edx 45h +
mov eax ebp +
call sub_46B500  +
mov esi eax +
jmp loc_46C644  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_46CB15  +
sub eax 72h +
cmp al 1 +
ja loc_46C5E4  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_38] edx +
call sub_468740  +
mov edx [esp+58h+var_38] +
mov [esp+58h+var_3C] eax +
jmp loc_46C5F7  +
mov eax ebp +
call sub_46A0E0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov [esp+58h+var_58] eax +
jmp loc_46C7E8  +
mov [esp+58h+var_58] ebp +
call sub_468740  +
mov esi eax +
jmp loc_46C4B3  +
mov eax ebp +
call sub_46A0E0  +
mov ecx edi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov [esp+58h+var_58] eax +
jmp loc_46C81C  +
mov eax ebp +
call sub_46A0E0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov [esp+58h+var_58] eax +
jmp loc_46C859  +
mov [esp+58h+var_58] ebp +
call sub_468740  +
mov esi eax +
jmp loc_46C507  +
mov eax ebp +
call sub_46D270  +
mov esi eax +
mov eax ebp +
call sub_46D270  +
mov edi eax +
mov eax ebp +
call sub_46D270  +
jmp loc_46C476  +
mov eax 69h +
mov [esp+58h+var_3C] 0 +
jmp loc_46BAD2  +
mov [esp+58h+var_3C] 0 +
jmp loc_46BAA1  +
cmp al 69h +
jz loc_46BAE5  +
jmp loc_46BAEF  +
cmp byte ptr [edx+1] 69h +
jnz loc_46CBCF  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_46B500  +
jmp loc_46C476  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_46C476  +
mov eax ebp +
call sub_46A0E0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov esi eax +
jmp loc_46C644  +
cmp al 77h +
jz loc_46C318  +
jmp loc_46B9DD  +
cmp byte ptr [eax+1] 69h +
jnz loc_46B9DD  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_46B500  +
jmp loc_46C364  +
add eax 1 +
mov [ebp+0Ch] eax +
xor eax eax +
jmp loc_46C364  +
mov eax ebp +
call sub_464800  +
mov esi eax +
jmp loc_46BC10  +
mov eax ebp +
call sub_4647C0  +
add eax 1 +
mov edx eax +
jnz loc_46C982  +
xor esi esi +
jmp loc_46BC10  +
xor esi esi +
test al al +
jz loc_46CCB4  +
mov [esp+58h+var_58] ebp +
call sub_468740  +
mov edx [ebp+0Ch] +
mov esi eax +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_46B500  +
mov ecx esi +
mov edx 30h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov esi eax +
jmp loc_46BC10  +
cmp al 69h +
jz loc_46BD9D  +
jmp loc_46BDA7  +
mov eax ebp +
lea esi [esi+0] +
call sub_46A0E0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov esi eax +
jmp loc_46C77B  +
mov eax ebp +
call sub_46B2E0  +
mov esi eax +
jmp loc_46BC10  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_46B500  +
jmp loc_46BCE0  +
mov eax [esp+58h+var_38] +
xor edx edx +
mov eax [eax+4] +
cmp eax 1 +
jz loc_46CFD4  +
jle loc_46CFAE  +
cmp eax 2 +
jz loc_46CEB2  +
cmp eax 3 +
jnz loc_46CC9A  +
mov esi edx +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_46CE94  +
cmp byte ptr [edx] 6Eh +
jnz loc_46CC9A  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_46CE87  +
mov edx 5Fh +
mov eax ebp +
call sub_46B500  +
mov [esp+58h+var_58] ebp +
mov esi eax +
call sub_468740  +
mov edi eax +
mov eax [ebp+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46CE7A  +
cmp dl 70h +
jz loc_46CE49  +
cmp dl 69h +
jnz loc_46CC9A  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46CC9A  +
mov eax ebp +
call sub_46D270  +
mov [esp+58h+var_58] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebp +
call sub_464440  +
mov ecx esi +
mov edx 39h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov ecx [esp+58h+var_38] +
mov edx 38h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov esi eax +
jmp loc_46BC10  +
mov eax [esp+58h+var_38] +
mov edi offset aSt +
mov eax [eax+4] +
mov edx [eax] +
mov [esp+58h+var_2C] eax +
mov eax [eax+8] +
mov esi edx +
lea ecx [eax-2] +
add [ebp+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov eax esi +
cmp al cl +
jz loc_46CE6A  +
mov eax [esp+58h+var_2C] +
mov eax [eax+0Ch] +
jmp loc_46CD3B  +
cmp byte ptr [eax+1] 69h +
jnz loc_46CC9A  +
add eax 2 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_46B500  +
jmp loc_46CDCF  +
mov [esp+58h+var_58] ebp +
call sub_468740  +
mov [esp+58h+var_58] eax +
jmp loc_46BBFE  +
add eax 1 +
mov [ebp+0Ch] eax +
xor eax eax +
jmp loc_46CDCF  +
cmp al 77h +
jz loc_46CD85  +
jmp loc_46CC9A  +
mov eax ebp +
call sub_46D270  +
mov esi eax +
mov eax ebp +
call sub_46D270  +
mov edi eax +
mov eax ebp +
call sub_46D270  +
jmp loc_46CDCF  +
mov eax [esp+58h+var_38] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46CF74  +
mov eax ebp +
mov [esp+58h+var_2C] edx +
call sub_46D270  +
mov edx [esp+58h+var_2C] +
mov [esp+58h+var_34] eax +
mov edi offset aCl +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_46CF64  +
mov edi offset unk_497E8F +
mov esi edx +
mov ecx 3 +
cmps   +
jz loc_46CF0C  +
mov edi offset unk_497E92 +
mov esi edx +
mov ecx 3 +
cmps   +
jnz loc_46CFA3  +
mov eax ebp +
call sub_469CF0  +
mov esi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_46CF37  +
mov eax ebp +
call sub_46A0E0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov esi eax +
mov ecx [esp+58h+var_34] +
mov edx 37h +
mov eax ebp +
mov [esp+58h+var_58] esi +
call sub_464440  +
mov ecx [esp+58h+var_38] +
mov edx 36h +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov esi eax +
jmp loc_46BC10  +
mov edx 45h +
mov eax ebp +
call sub_46B500  +
mov esi eax +
jmp loc_46CF37  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_46CF8A  +
sub eax 72h +
cmp al 1 +
ja loc_46CEC5  +
mov [esp+58h+var_58] ebp +
mov [esp+58h+var_2C] edx +
call sub_468740  +
mov edx [esp+58h+var_2C] +
mov [esp+58h+var_34] eax +
jmp loc_46CED8  +
mov eax ebp +
call sub_46D270  +
mov esi eax +
jmp loc_46CF37  +
test eax eax +
jnz loc_46CC9A  +
mov ecx [esp+58h+var_38] +
mov edx 34h +
mov eax ebp +
mov [esp+58h+var_58] 0 +
call sub_464440  +
mov esi eax +
jmp loc_46BC10  +
test edx edx +
jz loc_46D013  +
movzx eax byte ptr [edx] +
cmp al 6Dh +
jz loc_46CFE5  +
xor esi esi +
cmp al 70h +
jnz loc_46CFEC  +
xor esi esi +
cmp al [edx+1] +
jz loc_46CFFC  +
cmp [esp+58h+var_34] 33h +
jnz loc_46BBDF  +
jmp loc_46BBD3  +
mov eax [ebp+0Ch] +
mov si 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_46CFEC  +
add eax 1 +
xor si si +
mov [ebp+0Ch] eax +
jmp loc_46CFEC  +
xor esi esi +
jmp loc_46CFEC  +
cmp cl 69h +
jz loc_46BB8F  +
jmp loc_46BB99  +
test edx edx +
jz loc_46D06E  +
movzx ecx byte ptr [edx] +
cmp cl 6Dh +
nop   +
jz loc_46D050  +
xor esi esi +
cmp cl 70h +
jz loc_46D050  +
cmp [esp+58h+var_34] 33h +
jnz loc_46BCD9  +
jmp loc_46BCCD  +
xor esi esi +
cmp cl [edx+1] +
jnz loc_46D039  +
mov edx [ebp+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_46D039  +
add edx 1 +
xor si si +
mov [ebp+0Ch] edx +
jmp loc_46D039  +
xor esi esi +
jmp loc_46D039  +
cmp al 69h +
jz loc_46BC89  +
lea esi [esi+0] +
jmp loc_46BC93  +
mov esi [esp+58h+var_40] +
test esi esi +
jz loc_46D0D2  +
movzx edx byte ptr [esi] +
cmp dl 6Dh +
jz loc_46D0B0  +
xor esi esi +
cmp dl 70h +
jz loc_46D0B0  +
cmp eax 33h +
jnz loc_46B5BE  +
jmp loc_46B5B2  +
mov edi [esp+58h+var_40] +
xor esi esi +
cmp dl [edi+1] +
jnz loc_46D09C  +
mov edx [ebp+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_46D09C  +
add edx 1 +
xor si si +
mov [ebp+0Ch] edx +
jmp loc_46D09C  +
xor esi esi +
jmp loc_46D09C  +
cmp al 69h +
jz loc_46B578  +
nop   +
jmp loc_46B582  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_46B500  +
jmp loc_46BDF8  +
test edx edx +
jz loc_46D13E  +
movzx ecx byte ptr [edx] +
cmp cl 6Dh +
jz loc_46D120  +
xor esi esi +
cmp cl 70h +
jz loc_46D120  +
cmp [esp+58h+var_3C] 33h +
jnz loc_46BDF1  +
jmp loc_46BDE5  +
xor esi esi +
cmp cl [edx+1] +
jnz loc_46D10F  +
mov edx [ebp+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_46D10F  +
add edx 1 +
xor si si +
mov [ebp+0Ch] edx +
jmp loc_46D10F  +
xor esi esi +
jmp loc_46D10F  +
mov eax 69h +
mov [esp+58h+var_40] 0 +
jmp loc_46BC76  +
mov [esp+58h+var_40] 0 +
jmp loc_46BC4A  +
add eax 1 +
mov edx 45h +
mov [ebp+0Ch] eax +
mov eax ebp +
call sub_46B500  +
jmp loc_46BBE6  +
test edx edx +
jz loc_46BB2B  +
movzx ecx byte ptr [edx] +
cmp cl 6Dh +
jz loc_46D191  +
cmp cl 70h +
jnz loc_46BB2B  +
cmp cl [edx+1] +
jnz loc_46BB2B  +
mov edx [ebp+0Ch] +
mov [esp+58h+var_30] 1 +
movzx ecx byte ptr [edx] +
cmp cl 5Fh +
jnz loc_46BB49  +
lea esi [edx+1] +
mov [ebp+0Ch] esi +
movzx ecx byte ptr [edx+1] +
mov edx esi +
jmp loc_46BB31  +
mov eax ebp +
call sub_46A0E0  +
mov ecx esi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov esi eax +
jmp loc_46C6DB  +
cmp byte ptr [edx+1] 69h +
jnz loc_46D147  +
add edx 2 +
mov eax ebp +
mov [ebp+0Ch] edx +
mov edx 45h +
call sub_46B500  +
jmp loc_46C258  +
add edx 1 +
xor eax eax +
mov [ebp+0Ch] edx +
jmp loc_46C258  +
add edx 2 +
mov [ebp+0Ch] edx +
mov [esp+58h+var_58] ebp +
call sub_468740  +
mov esi eax +
mov eax ebp +
call sub_469CF0  +
mov edi eax +
mov eax [ebp+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46D248  +
mov [esp+58h+var_58] edi +
mov ecx esi +
mov edx 1 +
mov eax ebp +
call sub_464440  +
mov esi eax +
jmp loc_46BC10  +
mov eax ebp +
call sub_46A0E0  +
mov ecx edi +
mov edx 4 +
mov [esp+58h+var_58] eax +
mov eax ebp +
call sub_464440  +
mov [esp+58h+var_58] eax +
jmp loc_46D233  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 1Ch +
mov edx [eax+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_46D565  +
cmp al 54h +
jz loc_46D573  +
cmp al 73h +
jz loc_46D3B7  +
cmp al 66h +
jz loc_46D360  +
lea ecx [eax-30h] +
cmp cl 9 +
ja loc_46D2D0  +
mov eax ebx +
call sub_469CF0  +
test eax eax +
jz loc_46D540  +
mov edx [ebx+0Ch] +
mov esi eax +
cmp byte ptr [edx] 49h +
jz loc_46D591  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 6Fh +
jz loc_46D550  +
cmp al 74h +
setz cl  +
jnz loc_46D812  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46D503  +
mov eax ebx +
call sub_469A80  +
test eax eax +
mov ebp eax +
jz loc_46D540  +
mov eax [eax] +
cmp eax 31h +
jz loc_46D3F4  +
cmp eax 32h +
jz loc_46D581  +
cmp eax 33h +
jnz loc_46D540  +
xor esi esi +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46D695  +
mov eax ebx +
call sub_46D270  +
test esi esi +
mov [esp+1Ch+var_1C] eax +
jz loc_46D348  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_464440  +
mov [esp+1Ch+var_1C] eax +
mov ecx ebp +
mov edx 35h +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_46D2C4  +
cmp byte ptr [edx+1] 70h +
jnz loc_46D2ED  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jz loc_46D688  +
mov eax ebx +
call sub_4647C0  +
add eax 1 +
jz loc_46D540  +
mov edx [ebx+14h] +
cmp edx [ebx+18h] +
jge loc_46D540  +
mov ecx [ebx+10h] +
lea esi [edx+edx*2] +
add edx 1 +
mov [ebx+14h] edx +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_46D540  +
mov dword ptr [esi] 6 +
mov [esi+4] eax +
jmp loc_46D2C4  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46D5B0  +
cmp al 70h +
jnz loc_46D2ED  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_46D270  +
mov edx 49h +
mov [esp+1Ch+var_1C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_46D2C4  +
mov edi [ebp+4] +
mov esi [edi] +
mov [esp+1Ch+var_10] edi +
mov edi [edi+8] +
mov [esp+1Ch+var_14] esi +
lea ecx [edi-2] +
mov edi offset aSt +
add [ebx+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_46D6D4  +
mov edi [esp+1Ch+var_10] +
mov edx [edi+0Ch] +
cmp edx 1 +
jz loc_46D7C6  +
jle loc_46D6B0  +
cmp edx 2 +
jz loc_46D5F0  +
cmp edx 3 +
jnz loc_46D540  +
mov esi [esp+1Ch+var_14] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_46D6F3  +
mov eax [esp+1Ch+var_14] +
cmp byte ptr [eax] 6Eh +
jnz loc_46D540  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_46D537  +
mov edx 5Fh +
mov eax ebx +
call sub_46B500  +
mov [esp+1Ch+var_1C] ebx +
mov esi eax +
call sub_468740  +
mov edi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46D779  +
cmp dl 70h +
jz loc_46D7A5  +
cmp dl 69h +
jnz loc_46D540  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46D540  +
mov eax ebx +
call sub_46D270  +
mov [esp+1Ch+var_1C] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebx +
call sub_464440  +
mov ecx esi +
mov edx 39h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_464440  +
mov ecx ebp +
mov edx 38h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_46D2C4  +
xor esi esi +
test cl cl +
jnz loc_46D6E1  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_46B500  +
mov ecx esi +
mov edx 30h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_46D2C4  +
cmp al 77h +
jz loc_46D47F  +
nop   +
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46D2ED  +
add edx 2 +
mov [ebx+0Ch] edx +
jmp loc_46D2A7  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_46B2E0  +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_464800  +
mov edx [ebp+4] +
mov [esp+1Ch+var_14] 0 +
jmp loc_46D42F  +
mov eax ebx +
call sub_46A0E0  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_46D2C4  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+1Ch+var_1C] ebx +
call sub_468740  +
mov esi eax +
mov eax ebx +
call sub_469CF0  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
mov edi eax +
jz loc_46D74B  +
mov [esp+1Ch+var_1C] eax +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_46D2C4  +
mov eax [ebp+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46D724  +
mov eax ebx +
call sub_46D270  +
mov [esp+1Ch+var_10] eax +
mov esi [esp+1Ch+var_14] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_46D711  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_497E8F +
mov ecx 3 +
cmps   +
jz loc_46D648  +
mov esi [esp+1Ch+var_14] +
mov edi offset unk_497E92 +
mov ecx 3 +
cmps   +
jnz loc_46D76B  +
mov eax ebx +
call sub_469CF0  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46D786  +
mov ecx [esp+1Ch+var_10] +
mov edx 37h +
mov eax ebx +
mov [esp+1Ch+var_1C] esi +
call sub_464440  +
mov ecx ebp +
mov edx 36h +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_46D2C4  +
add edx 3 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_46D386  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46B500  +
jmp loc_46D330  +
test edx edx +
jnz loc_46D540  +
mov [esp+1Ch+var_1C] 0 +
mov ecx ebp +
mov edx 34h +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_46D2C4  +
mov [esp+1Ch+var_1C] ebx +
call sub_468740  +
jmp loc_46D345  +
mov [esp+1Ch+var_1C] ebx +
call sub_468740  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46D50D  +
mov eax ebx +
call sub_46D270  +
mov esi eax +
mov eax ebx +
call sub_46D270  +
mov edi eax +
mov eax ebx +
call sub_46D270  +
jmp loc_46D4C9  +
mov edx 45h +
mov eax ebx +
call sub_46B500  +
mov esi eax +
jmp loc_46D65D  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46D73A  +
sub eax 72h +
cmp al 1 +
ja loc_46D5FF  +
mov [esp+1Ch+var_1C] ebx +
call sub_468740  +
mov [esp+1Ch+var_10] eax +
jmp loc_46D60A  +
mov eax ebx +
call sub_46A0E0  +
mov ecx edi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_464440  +
mov [esp+1Ch+var_1C] eax +
jmp loc_46D5D8  +
mov eax ebx +
call sub_46D270  +
mov esi eax +
jmp loc_46D65D  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_46D4C9  +
mov eax ebx +
call sub_46A0E0  +
mov ecx esi +
mov edx 4 +
mov [esp+1Ch+var_1C] eax +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_46D65D  +
cmp byte ptr [eax+1] 69h +
jnz loc_46D540  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46B500  +
jmp loc_46D4C9  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
test edi edi +
jz loc_46D7DD  +
movzx edx byte ptr [edi] +
cmp dl 6Dh +
jz loc_46D7F0  +
cmp dl 70h +
jz loc_46D7F0  +
cmp eax 33h +
jnz loc_46D329  +
jmp loc_46D31D  +
mov edi [esp+1Ch+var_14] +
xor esi esi +
cmp dl [edi+1] +
jnz loc_46D7DD  +
mov edx [ebx+0Ch] +
mov si 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_46D7DD  +
add edx 1 +
xor si si +
mov [ebx+0Ch] edx +
jmp loc_46D7DD  +
cmp al 69h +
jz loc_46D2E3  +
jmp loc_46D2ED  +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 2Ch +
mov eax [eax+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46D858  +
mov eax ebx +
call sub_464780  +
mov esi eax +
test esi esi +
jz loc_46DC34  +
mov edx [ebx+0Ch] +
xor eax eax +
cmp byte ptr [edx] 5Fh +
jz loc_46D8F0  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea esi [eax+1] +
mov ebp [ebx+34h] +
mov [ebx+0Ch] esi +
mov dword ptr [ebx+34h] 1 +
movzx edx byte ptr [eax+1] +
cmp dl 4Ch +
jz loc_46DBD0  +
cmp dl 54h +
jz loc_46DBE0  +
cmp dl 73h +
jz loc_46D917  +
cmp dl 66h +
jz loc_46DA90  +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_46DA65  +
cmp dl 6Fh +
jz loc_46DA55  +
cmp dl 74h +
setz cl  +
jnz loc_46F9B7  +
cmp byte ptr [eax+2] 6Ch +
jnz loc_46D92D  +
xor edi edi +
test cl cl +
jnz loc_46DE66  +
add esi 2 +
mov edx 45h +
mov [ebx+0Ch] esi +
mov eax ebx +
call sub_46B500  +
mov ecx edi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_46DA82  +
add edx 1 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov ecx esi +
mov edx 2Dh +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx edx byte ptr [eax+2] +
cmp dl 72h +
jz loc_46DDD7  +
cmp dl 70h +
jz loc_46DE2D  +
mov eax ebx +
call sub_469A80  +
test eax eax +
mov [esp+2Ch+var_1C] eax +
jz loc_46DBC7  +
mov eax [eax] +
cmp eax 31h +
jz loc_46DBF0  +
cmp eax 32h +
jz loc_46DAE0  +
cmp eax 33h +
jnz loc_46DBC7  +
mov edx [ebx+0Ch] +
xor esi esi +
movzx eax byte ptr [edx] +
cmp al 5Fh +
jz loc_46E47E  +
cmp al 4Ch +
jz loc_46E462  +
cmp al 54h +
jz loc_46E470  +
cmp al 73h +
nop   +
jz loc_46E187  +
cmp al 66h +
jz loc_46E1C4  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_46DE88  +
cmp al 6Fh +
jz loc_46DE78  +
cmp al 74h +
setz cl  +
jnz loc_46FA4A  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46E6DE  +
mov eax ebx +
call sub_469A80  +
test eax eax +
mov edi eax +
jz loc_46E289  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_46E4D7  +
cmp ecx 32h +
jz loc_46E710  +
cmp ecx 33h +
jnz loc_46E289  +
mov [esp+2Ch+var_18] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46FA33  +
mov eax ebx +
call sub_46D270  +
cmp [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_2C] eax +
jz loc_46DA1B  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_2C] eax +
mov ecx edi +
mov edx 35h +
mov eax ebx +
call sub_464440  +
mov ecx eax +
test esi esi +
mov [esp+2Ch+var_2C] ecx +
jz loc_46DA41  +
mov edx 37h +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_2C] eax +
mov ecx [esp+2Ch+var_1C] +
mov edx 35h +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_46DA82  +
cmp byte ptr [eax+2] 6Eh +
jnz loc_46D92D  +
add eax 3 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_469CF0  +
test eax eax +
mov esi eax +
jz loc_46DBC7  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46DC3B  +
mov [ebx+34h] ebp +
jmp loc_46D83A  +
cmp byte ptr [eax+2] 70h +
jnz loc_46D92D  +
lea edx [eax+3] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+3] 54h +
jnz loc_46DE14  +
add eax 4 +
xor edx edx +
mov [ebx+0Ch] eax +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_46DBC7  +
mov ecx [ebx+10h] +
lea esi [eax+eax*2] +
add eax 1 +
mov [ebx+14h] eax +
lea esi [ecx+esi*4] +
test esi esi +
jz loc_46DA82  +
mov dword ptr [esi] 6 +
mov [esi+4] edx +
jmp loc_46DA82  +
mov edi [esp+2Ch+var_1C] +
mov [esp+2Ch+var_18] 0 +
mov edx [edi+4] +
cmp edx 1 +
jz loc_46F6E6  +
jle loc_46DC5A  +
cmp edx 2 +
jz loc_46DC80  +
cmp edx 3 +
jnz loc_46DBC7  +
mov esi [esp+2Ch+var_18] +
mov edi offset aQu +
mov ecx 3 +
cmps   +
jz loc_46DEDD  +
mov eax [esp+2Ch+var_18] +
cmp byte ptr [eax] 6Eh +
jnz loc_46DBC7  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_46DBBF  +
mov edx 5Fh +
mov eax ebx +
call sub_46B500  +
mov [esp+2Ch+var_2C] ebx +
mov edi eax +
call sub_468740  +
mov esi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46E266  +
cmp dl 70h +
jz loc_46E43F  +
cmp dl 69h +
jnz loc_46DBC7  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46DBC7  +
mov eax ebx +
call sub_46D270  +
mov ecx eax +
mov [esp+2Ch+var_2C] ecx +
mov edx 3Ah +
mov ecx esi +
mov eax ebx +
call sub_464440  +
mov ecx edi +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx [esp+2Ch+var_1C] +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_46DA82  +
cmp al 77h +
jz loc_46DB3F  +
xor esi esi +
jmp loc_46DA82  +
mov eax ebx +
call sub_46B2E0  +
mov esi eax +
jmp loc_46DA82  +
mov eax ebx +
call sub_464800  +
mov esi eax +
jmp loc_46DA82  +
mov edi [esp+2Ch+var_1C] +
mov edi [edi+4] +
mov esi [edi] +
mov [esp+2Ch+var_14] edi +
mov edi [edi+8] +
mov [esp+2Ch+var_18] esi +
lea ecx [edi-2] +
mov edi offset aSt +
add [ebx+30h] ecx +
mov ecx 3 +
cmps   +
setnbe cl  +
mov esi ecx +
setb cl  +
mov edx esi +
cmp dl cl +
jz loc_46DE56  +
mov edi [esp+2Ch+var_14] +
mov edx [edi+0Ch] +
jmp loc_46DAEF  +
xor eax eax +
jmp loc_46D850  +
mov eax ebx +
call sub_46A0E0  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_46DA82  +
test edx edx +
jnz loc_46DBC7  +
mov ecx [esp+2Ch+var_1C] +
mov edx 34h +
mov eax ebx +
mov [esp+2Ch+var_2C] 0 +
call sub_464440  +
mov esi eax +
jmp loc_46DA82  +
mov eax [esp+2Ch+var_1C] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46E140  +
mov edx [ebx+0Ch] +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_46E7BF  +
cmp al 54h +
jz loc_46E913  +
cmp al 73h +
jz loc_46E295  +
cmp al 66h +
jz loc_46E2D4  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_46E224  +
cmp al 6Fh +
jz loc_46E214  +
cmp al 74h +
setz cl  +
jnz loc_46F9F7  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46EA51  +
mov eax ebx +
call sub_469A80  +
test eax eax +
mov esi eax +
jz loc_46E5FF  +
mov edx [eax] +
cmp edx 31h +
jz loc_46E7CF  +
cmp edx 32h +
jz loc_46EA16  +
cmp edx 33h +
jnz loc_46E5FF  +
xor ecx ecx +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46F85B  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_46D270  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
mov [esp+2Ch+var_2C] eax +
jz loc_46DD45  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_14] eax +
mov esi [esp+2Ch+var_18] +
mov edi offset aCl +
mov ecx 3 +
cmps   +
jz loc_46DECA  +
mov esi [esp+2Ch+var_18] +
mov edi offset unk_497E8F +
mov ecx 3 +
cmps   +
jz loc_46DD95  +
mov esi [esp+2Ch+var_18] +
mov edi offset unk_497E92 +
mov ecx 3 +
cmps   +
jnz loc_46E273  +
mov eax ebx +
call sub_469CF0  +
mov esi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46E330  +
mov ecx [esp+2Ch+var_14] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] esi +
call sub_464440  +
mov ecx [esp+2Ch+var_1C] +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_46DA82  +
add eax 3 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov esi eax +
mov eax ebx +
call sub_469CF0  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46E167  +
mov [esp+2Ch+var_2C] edi +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_46DA82  +
mov eax ebx +
call sub_4647C0  +
add eax 1 +
mov edx eax +
jnz loc_46DAB2  +
xor esi esi +
jmp loc_46DA82  +
add eax 3 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46D270  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_46DA82  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46DA41  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov esi [ebx+0Ch] +
mov edi eax +
jmp loc_46D8C1  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46D9B7  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_469CF0  +
test eax eax +
mov ecx eax +
jz loc_46E289  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_46DA2B  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_46A0E0  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46DA2B  +
mov edx 45h +
mov eax ebx +
call sub_46B500  +
mov esi eax +
jmp loc_46DDAA  +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 4Ch +
jz loc_46EA8B  +
cmp dl 54h +
jz loc_46EB8A  +
cmp dl 73h +
jz loc_46E60C  +
cmp dl 66h +
jz loc_46E71A  +
lea ecx [edx-30h] +
cmp cl 9 +
jbe loc_46E400  +
cmp dl 6Fh +
jz loc_46E3F0  +
cmp dl 74h +
setz cl  +
jnz loc_46F6D8  +
cmp byte ptr [eax+1] 6Ch +
jz loc_46ECC5  +
mov eax ebx +
call sub_469A80  +
test eax eax +
mov esi eax +
jz loc_46F0E9  +
mov edx [eax] +
cmp edx 31h +
jz loc_46EC8C  +
cmp edx 32h +
jz loc_46EBAC  +
cmp edx 33h +
jnz loc_46EA47  +
xor ecx ecx +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46F8A0  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_46D270  +
mov ecx [esp+2Ch+var_18] +
test ecx ecx +
mov [esp+2Ch+var_2C] eax +
jz loc_46DF95  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_2C] eax +
mov edx 35h +
mov ecx esi +
mov eax ebx +
call sub_464440  +
mov edx [ebx+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 4Ch +
jz loc_46EA9C  +
cmp al 54h +
jz loc_46EB9B  +
cmp al 73h +
jz loc_46E497  +
cmp al 66h +
jz loc_46E68B  +
lea ecx [eax-30h] +
cmp cl 9 +
jbe loc_46E3B1  +
cmp al 6Fh +
jz loc_46E3A1  +
cmp al 74h +
setz cl  +
jnz loc_46F63D  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46EE26  +
mov eax ebx +
call sub_469A80  +
test eax eax +
mov esi eax +
jz loc_46E8E5  +
mov ecx [eax] +
cmp ecx 31h +
jz loc_46ECFA  +
cmp ecx 32h +
jz loc_46F004  +
cmp ecx 33h +
jnz loc_46E8E5  +
mov [esp+2Ch+var_18] 0 +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46F606  +
mov eax ebx +
call sub_46D270  +
cmp [esp+2Ch+var_18] 0 +
mov [esp+2Ch+var_2C] eax +
jz loc_46E058  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_2C] eax +
mov ecx esi +
mov edx 35h +
mov eax ebx +
call sub_464440  +
mov edx [ebx+0Ch] +
mov esi eax +
movzx ecx byte ptr [edx] +
cmp cl 4Ch +
jz loc_46EA20  +
cmp cl 54h +
jz loc_46EE18  +
cmp cl 73h +
jz loc_46E64E  +
cmp cl 66h +
jz loc_46E76D  +
lea eax [ecx-30h] +
cmp al 9 +
jbe loc_46E35F  +
cmp cl 6Fh +
jz loc_46E34F  +
cmp cl 74h +
setz al  +
jnz loc_46F760  +
cmp byte ptr [edx+1] 6Ch +
jz loc_46EF50  +
mov eax ebx +
call sub_469A80  +
test eax eax +
mov [esp+2Ch+var_18] eax +
jz loc_46E26C  +
mov eax [eax] +
cmp eax 31h +
mov [esp+2Ch+var_10] eax +
jz loc_46EF88  +
mov eax [esp+2Ch+var_10] +
cmp eax 32h +
jz loc_46EE5B  +
cmp eax 33h +
jnz loc_46E26C  +
xor ecx ecx +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 5Fh +
jz loc_46FA05  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_46D270  +
mov ecx [esp+2Ch+var_14] +
test ecx ecx +
mov [esp+2Ch+var_2C] eax +
jz loc_46E129  +
mov ecx eax +
mov edx 37h +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_2C] eax +
mov ecx [esp+2Ch+var_18] +
mov edx 35h +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46DB83  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46E156  +
sub eax 72h +
cmp al 1 +
ja loc_46DC93  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov [esp+2Ch+var_14] eax +
jmp loc_46DD57  +
mov eax ebx +
call sub_46A0E0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46DDFF  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46E9D9  +
cmp al 70h +
jnz loc_46D9B7  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_46D270  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46DA2B  +
cmp byte ptr [edx+1] 70h +
jnz loc_46D9B7  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_46EA2E  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_46E289  +
imul ecx eax +
add eax 1 +
add ecx [ebx+10h] +
mov [ebx+14h] eax +
test ecx ecx +
jz loc_46DA2B  +
mov dword ptr [ecx] 6 +
mov [ecx+4] edx +
jmp loc_46DA2B  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46DCE2  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_469CF0  +
test eax eax +
mov [esp+2Ch+var_14] eax +
jz loc_46E5FF  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_46DD57  +
mov eax ebx +
call sub_46A0E0  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_14] eax +
jmp loc_46DD57  +
add eax 1 +
mov [ebx+0Ch] eax +
xor ecx ecx +
jmp loc_46DB83  +
mov eax ebx +
call sub_46D270  +
mov esi eax +
jmp loc_46DDAA  +
cmp al 77h +
jz loc_46E56B  +
xor ecx ecx +
nop   +
lea esi [esi+0] +
jmp loc_46DA2B  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46EFC5  +
cmp al 70h +
jnz loc_46DCE2  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_46D270  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_14] eax +
jmp loc_46DD57  +
cmp byte ptr [edx+1] 70h +
jnz loc_46DCE2  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_46EB73  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_46E5FF  +
imul edi eax +
add eax 1 +
mov [ebx+14h] eax +
mov [esp+2Ch+var_14] edi +
mov edi [ebx+10h] +
add [esp+2Ch+var_14] edi +
mov eax [esp+2Ch+var_14] +
test eax eax +
jz loc_46DD57  +
mov dword ptr [eax] 6 +
mov [eax+4] edx +
jmp loc_46DD57  +
mov eax ebx +
call sub_46A0E0  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov esi eax +
jmp loc_46DDAA  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46E0BC  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_469CF0  +
test eax eax +
mov ecx eax +
jz loc_46DB83  +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jnz loc_46DB83  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_46A0E0  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46DB83  +
cmp byte ptr [edx+1] 6Eh +
jnz loc_46DFF4  +
add edx 2 +
mov [ebx+0Ch] edx +
mov eax ebx +
call sub_469CF0  +
mov edx [ebx+0Ch] +
test eax eax +
mov esi eax +
jz loc_46E06B  +
cmp byte ptr [edx] 49h +
jnz loc_46E06B  +
mov eax ebx +
call sub_46A0E0  +
mov ecx esi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46E06B  +
cmp byte ptr [eax+1] 6Eh +
jnz loc_46DF32  +
add eax 2 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_469CF0  +
test eax eax +
mov edi eax +
jz loc_46F0E9  +
mov edx [ebx+0Ch] +
cmp byte ptr [edx] 49h +
jnz loc_46DFA8  +
mov eax ebx +
call sub_46A0E0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46DFA8  +
cmp byte ptr [eax+1] 69h +
jnz loc_46DBC7  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46B500  +
mov ecx eax +
jmp loc_46DB83  +
mov eax ebx +
call sub_46B2E0  +
mov ecx eax +
jmp loc_46DA2B  +
mov eax ebx +
call sub_464800  +
mov ecx eax +
jmp loc_46DA2B  +
add edx 1 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_46B500  +
mov ecx eax +
jmp loc_46DA2B  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46F3E4  +
cmp al 70h +
jnz loc_46DFF4  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_46D270  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46E06B  +
mov eax [eax+4] +
mov [esp+2Ch+var_14] ecx +
mov edx [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edx +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
test eax eax +
jz loc_46F00E  +
mov eax [edi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_46F64A  +
jle loc_46E8EF  +
cmp eax 2 +
jz loc_46E923  +
cmp eax 3 +
nop   +
jnz loc_46E289  +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
test eax eax +
jz loc_46F473  +
cmp byte ptr [edx] 6Eh +
jnz loc_46E289  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_46E281  +
mov edx 5Fh +
mov eax ebx +
call sub_46B500  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_18] eax +
call sub_468740  +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46F5E8  +
cmp dl 70h +
jz loc_46F5C7  +
cmp dl 69h +
jnz loc_46E289  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46E289  +
mov eax ebx +
call sub_46D270  +
mov ecx [esp+2Ch+var_14] +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx [esp+2Ch+var_18] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx edi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46DA2B  +
cmp al 77h +
jz loc_46E853  +
mov [esp+2Ch+var_14] 0 +
jmp loc_46DD57  +
movzx edx byte ptr [eax+1] +
cmp dl 72h +
jz loc_46F106  +
cmp dl 70h +
jnz loc_46DF32  +
add eax 2 +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46D270  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46DFA8  +
movzx eax byte ptr [edx+1] +
cmp al 72h +
jz loc_46F040  +
cmp al 70h +
jnz loc_46E0BC  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
call sub_46D270  +
mov edx 49h +
mov [esp+2Ch+var_2C] 0 +
mov ecx eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46DB83  +
cmp byte ptr [edx+1] 70h +
jnz loc_46DFF4  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_46F424  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_46E8E5  +
imul esi eax +
add eax 1 +
add esi [ebx+10h] +
mov [ebx+14h] eax +
test esi esi +
jz loc_46E8E7  +
mov [esi+4] edx +
mov edx [ebx+0Ch] +
mov dword ptr [esi] 6 +
jmp loc_46E06B  +
xor edi edi +
test cl cl +
jnz loc_46F01E  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_46B500  +
mov ecx edi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46DA2B  +
mov eax [eax+4] +
xor edx edx +
jmp loc_46E513  +
cmp byte ptr [eax+1] 70h +
jnz loc_46DF32  +
lea edx [eax+2] +
mov [ebx+0Ch] edx +
cmp byte ptr [eax+2] 54h +
jnz loc_46F0D7  +
add eax 3 +
xor edx edx +
mov [ebx+0Ch] eax +
mov eax [ebx+14h] +
cmp eax [ebx+18h] +
jge loc_46F0E9  +
imul edi eax +
add eax 1 +
add edi [ebx+10h] +
mov [ebx+14h] eax +
test edi edi +
jz loc_46EA49  +
mov [edi+4] edx +
mov edx [ebx+0Ch] +
mov dword ptr [edi] 6 +
jmp loc_46DFA8  +
cmp byte ptr [edx+1] 70h +
jnz loc_46E0BC  +
lea eax [edx+2] +
mov [ebx+0Ch] eax +
cmp byte ptr [edx+2] 54h +
jnz loc_46F081  +
add edx 3 +
mov [ebx+0Ch] edx +
xor edx edx +
mov eax [ebx+14h] +
xor ecx ecx +
cmp eax [ebx+18h] +
jge loc_46DB83  +
imul ecx eax +
add eax 1 +
add ecx [ebx+10h] +
mov [ebx+14h] eax +
test ecx ecx +
jz loc_46DB83  +
mov dword ptr [ecx] 6 +
mov [ecx+4] edx +
jmp loc_46DB83  +
mov eax ebx +
call sub_46B2E0  +
mov [esp+2Ch+var_14] eax +
jmp loc_46DD57  +
mov eax [eax+4] +
mov [esp+2Ch+var_14] edx +
mov edi [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edi +
sub eax 2 +
add [ebx+30h] eax +
call strcmp  +
mov edx [esp+2Ch+var_14] +
test eax eax +
jz loc_46F463  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_46F58D  +
jle loc_46EB4D  +
cmp eax 2 +
jz loc_46EAAD  +
cmp eax 3 +
nop   +
jnz loc_46E5FF  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46F2EE  +
cmp byte ptr [edi] 6Eh +
jnz loc_46E5FF  +
movzx eax byte ptr [edi+1] +
cmp al 61h +
jnz loc_46E5F7  +
mov edx 5Fh +
mov eax ebx +
call sub_46B500  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] eax +
call sub_468740  +
mov edi eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46F8FF  +
cmp dl 70h +
jz loc_46F8DE  +
cmp dl 69h +
jnz loc_46E5FF  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46E5FF  +
mov eax ebx +
call sub_46D270  +
mov [esp+2Ch+var_2C] eax +
mov ecx edi +
mov edx 3Ah +
mov eax ebx +
call sub_464440  +
mov ecx [esp+2Ch+var_14] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_14] eax +
jmp loc_46DD57  +
cmp al 77h +
jz loc_46ED8C  +
xor esi esi +
mov edx [ebx+0Ch] +
jmp loc_46E06B  +
test eax eax +
jnz loc_46E289  +
mov ecx edi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46DA2B  +
mov eax ebx +
call sub_464800  +
mov [esp+2Ch+var_14] eax +
jmp loc_46DD57  +
mov eax [edi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46F09A  +
mov eax ebx +
mov [esp+2Ch+var_14] edx +
call sub_46D270  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_14] edx +
call strcmp  +
mov edx [esp+2Ch+var_14] +
test eax eax +
jz loc_46F0F3  +
mov [esp+2Ch+var_28] offset unk_497E8F +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_14] edx +
call strcmp  +
test eax eax +
jz loc_46E999  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_497E92 +
mov [esp+2Ch+var_2C] edx +
call strcmp  +
test eax eax +
jnz loc_46F0C9  +
mov eax ebx +
call sub_469CF0  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46F6A4  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_18] +
mov edx 37h +
mov eax ebx +
call sub_464440  +
mov ecx edi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46DA2B  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov edi eax +
mov eax ebx +
call sub_469CF0  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46F43D  +
mov [esp+2Ch+var_2C] ecx +
mov ecx edi +
mov edx 1 +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46DA2B  +
mov eax [eax+4] +
xor edi edi +
jmp loc_46E803  +
mov eax ebx +
call sub_46B2E0  +
mov ecx eax +
jmp loc_46DB83  +
mov eax ebx +
call sub_4647C0  +
add eax 1 +
mov edx eax +
jnz loc_46E1E6  +
xor ecx ecx +
jmp loc_46DA2B  +
xor edi edi +
mov edx [ebx+0Ch] +
jmp loc_46DFA8  +
xor esi esi +
test cl cl +
jz loc_46EA61  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov esi eax +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_46B500  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_14] eax +
jmp loc_46DD57  +
mov eax ebx +
call sub_46B2E0  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46DFA8  +
mov eax ebx +
call sub_46B2E0  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46E06B  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46F146  +
mov eax ebx +
call sub_46D270  +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46F02D  +
mov [esp+2Ch+var_28] offset unk_497E8F +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46EB0B  +
mov [esp+2Ch+var_28] offset unk_497E92 +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jnz loc_46F732  +
mov eax ebx +
call sub_469CF0  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46F8BF  +
mov ecx [esp+2Ch+var_14] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] edi +
call sub_464440  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_14] eax +
jmp loc_46DD57  +
test eax eax +
jnz loc_46E5FF  +
mov [esp+2Ch+var_2C] 0 +
mov ecx esi +
mov edx 34h +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_14] eax +
jmp loc_46DD57  +
mov eax ebx +
call sub_4647C0  +
add eax 1 +
mov edx eax +
jnz loc_46E2F6  +
jmp loc_46E5FF  +
mov eax ebx +
call sub_464800  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46DFA8  +
mov eax ebx +
call sub_464800  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46E06B  +
mov eax [eax+4] +
xor edi edi +
cmp eax 1 +
jz loc_46FB10  +
jle loc_46F20E  +
cmp eax 2 +
jz loc_46F16D  +
cmp eax 3 +
lea esi [esi+0] +
jnz loc_46EA47  +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46FAC8  +
cmp byte ptr [edi] 6Eh +
jnz loc_46F0E9  +
movzx eax byte ptr [edi+1] +
cmp al 61h +
jnz loc_46FB03  +
mov edx 5Fh +
mov eax ebx +
call sub_46B500  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_18] eax +
call sub_468740  +
mov edx [ebx+0Ch] +
mov edi eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_46FAF6  +
cmp al 70h +
jz loc_46FA6D  +
cmp al 69h +
jnz loc_46F0EC  +
cmp byte ptr [edx+1] 6Ch +
nop   +
jnz loc_46F9EB  +
mov eax ebx +
call sub_46D270  +
mov ecx edi +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx [esp+2Ch+var_18] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov edx 38h +
mov ecx esi +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46DFA8  +
mov eax [eax+4] +
mov [esp+2Ch+var_18] edx +
mov edi [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edi +
sub eax 2 +
add [ebx+30h] eax +
call strcmp  +
mov edx [esp+2Ch+var_18] +
test eax eax +
jz loc_46FA57  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
jmp loc_46EBB1  +
xor esi esi +
test cl cl +
jnz loc_46F99B  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_46B500  +
mov edx 30h +
mov ecx esi +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46DFA8  +
mov eax [eax+4] +
mov [esp+2Ch+var_14] ecx +
mov edx [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] edx +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
test eax eax +
jz loc_46F504  +
mov eax [esi+4] +
mov eax [eax+0Ch] +
cmp eax 1 +
jz loc_46F4CA  +
jle loc_46F495  +
cmp eax 2 +
jz loc_46F235  +
cmp eax 3 +
jnz loc_46E8E5  +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_18] edx +
call strcmp  +
mov edx [esp+2Ch+var_18] +
test eax eax +
jz loc_46F56B  +
cmp byte ptr [edx] 6Eh +
jnz loc_46E8E5  +
movzx eax byte ptr [edx+1] +
cmp al 61h +
jnz loc_46E8DD  +
mov edx 5Fh +
mov eax ebx +
call sub_46B500  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_18] eax +
call sub_468740  +
mov edx [ebx+0Ch] +
mov [esp+2Ch+var_14] eax +
movzx eax byte ptr [edx] +
cmp al 45h +
jz loc_46F547  +
cmp al 70h +
jz loc_46F535  +
cmp al 69h +
jnz loc_46F5FF  +
cmp byte ptr [edx+1] 6Ch +
jnz loc_46F5F5  +
mov eax ebx +
call sub_46D270  +
mov ecx [esp+2Ch+var_14] +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx [esp+2Ch+var_18] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx esi +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46E06B  +
mov eax ebx +
call sub_464800  +
mov ecx eax +
jmp loc_46DB83  +
xor esi esi +
test cl cl +
jnz loc_46FA24  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
call sub_46B500  +
mov ecx esi +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46E06B  +
mov eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_14] 0 +
mov eax [eax+4] +
cmp eax 1 +
jz loc_46F7ED  +
jle loc_46F3BE  +
cmp eax 2 +
jz loc_46F30E  +
cmp eax 3 +
jnz loc_46E26C  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset aQu +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jz loc_46F96B  +
mov eax [esp+2Ch+var_14] +
cmp byte ptr [eax] 6Eh +
jnz loc_46E26C  +
movzx eax byte ptr [eax+1] +
cmp al 61h +
jnz loc_46F79C  +
mov edx 5Fh +
mov eax ebx +
call sub_46B500  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] eax +
call sub_468740  +
mov [esp+2Ch+var_10] eax +
mov eax [ebx+0Ch] +
movzx edx byte ptr [eax] +
cmp dl 45h +
jz loc_46F78F  +
xor ecx ecx +
cmp dl 70h +
jz loc_46F76E  +
cmp dl 69h +
jnz loc_46DB83  +
cmp byte ptr [eax+1] 6Ch +
jnz loc_46DB83  +
mov eax ebx +
call sub_46D270  +
mov ecx [esp+2Ch+var_10] +
mov edx 3Ah +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx [esp+2Ch+var_14] +
mov edx 39h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx [esp+2Ch+var_18] +
mov edx 38h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46DB83  +
xor ecx ecx +
test al al +
jnz loc_46F6C9  +
add dword ptr [ebx+0Ch] 2 +
mov edx 45h +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_46B500  +
mov ecx [esp+2Ch+var_18] +
mov edx 30h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46DB83  +
mov eax [esp+2Ch+var_18] +
mov eax [eax+4] +
mov ecx [eax] +
mov eax [eax+8] +
mov [esp+2Ch+var_28] offset aSt +
mov [esp+2Ch+var_2C] ecx +
sub eax 2 +
add [ebx+30h] eax +
mov [esp+2Ch+var_14] ecx +
call strcmp  +
test eax eax +
jz loc_46F9AA  +
mov eax [esp+2Ch+var_18] +
mov eax [eax+4] +
mov eax [eax+0Ch] +
jmp loc_46EE6A  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov esi eax +
mov eax ebx +
call sub_469CF0  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46F61D  +
mov [esp+2Ch+var_2C] edi +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_14] eax +
jmp loc_46DD57  +
mov eax [eax+4] +
xor edx edx +
jmp loc_46ED36  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46DA1B  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov edi eax +
jmp loc_46E6E8  +
mov edx 45h +
mov eax ebx +
call sub_46B500  +
mov edi eax +
jmp loc_46EB20  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_469CF0  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46F9C5  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_18] +
mov edx 1 +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46DB83  +
mov eax ebx +
call sub_4647C0  +
add eax 1 +
mov edx eax +
jnz loc_46E78F  +
xor ecx ecx +
jmp loc_46DB83  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_46F0B0  +
sub eax 72h +
cmp al 1 +
ja loc_46E932  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] edx +
call sub_468740  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
jmp loc_46E945  +
mov eax ebx +
call sub_46D270  +
mov ecx eax +
jmp loc_46E9AE  +
mov eax ebx +
call sub_4647C0  +
add eax 1 +
mov edx eax +
jnz loc_46E73C  +
mov edx [ebx+0Ch] +
xor edi edi +
jmp loc_46DFA8  +
mov edx 45h +
mov eax ebx +
call sub_46B500  +
mov ecx eax +
jmp loc_46E9AE  +
add eax 2 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov esi eax +
mov eax ebx +
call sub_469CF0  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46F740  +
mov [esp+2Ch+var_2C] edi +
mov edx 1 +
mov ecx esi +
mov eax ebx +
call sub_464440  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46DFA8  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46F15C  +
sub eax 72h +
cmp al 1 +
ja loc_46EABC  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov [esp+2Ch+var_14] eax +
jmp loc_46EAC7  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46FAA1  +
mov eax ebx +
call sub_46D270  +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46FA8E  +
mov [esp+2Ch+var_28] offset unk_497E8F +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jz loc_46F1CB  +
mov [esp+2Ch+var_28] offset unk_497E92 +
mov [esp+2Ch+var_2C] edi +
call strcmp  +
test eax eax +
jnz loc_46FAE8  +
mov eax ebx +
call sub_469CF0  +
mov edi eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46FB42  +
mov ecx [esp+2Ch+var_18] +
mov edx 37h +
mov eax ebx +
mov [esp+2Ch+var_2C] edi +
call sub_464440  +
mov edx 36h +
mov ecx esi +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46DFA8  +
test eax eax +
jnz loc_46EA47  +
mov edx 34h +
mov ecx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_464440  +
mov edx [ebx+0Ch] +
mov edi eax +
jmp loc_46DFA8  +
mov eax [esi+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46F7BE  +
mov eax ebx +
mov [esp+2Ch+var_14] edx +
call sub_46D270  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_14] edx +
call strcmp  +
mov edx [esp+2Ch+var_14] +
test eax eax +
jz loc_46F7AB  +
mov [esp+2Ch+var_28] offset unk_497E8F +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_14] edx +
call strcmp  +
test eax eax +
jz loc_46F2AB  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_497E92 +
mov [esp+2Ch+var_2C] edx +
call strcmp  +
test eax eax +
jnz loc_46F4BC  +
mov eax ebx +
call sub_469CF0  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46F90C  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_18] +
mov edx 37h +
mov eax ebx +
call sub_464440  +
mov ecx esi +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46E06B  +
mov eax ebx +
call sub_46D270  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_46D270  +
mov edi eax +
mov eax ebx +
call sub_46D270  +
jmp loc_46E89F  +
mov eax [esp+2Ch+var_18] +
mov eax [eax+4] +
mov eax [eax] +
cmp byte ptr [eax+1] 63h +
jz loc_46F944  +
mov eax ebx +
call sub_46D270  +
mov [esp+2Ch+var_10] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset aCl +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jz loc_46F931  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_497E8F +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jz loc_46F37C  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] offset unk_497E92 +
mov [esp+2Ch+var_2C] eax +
call strcmp  +
test eax eax +
jnz loc_46F98D  +
mov eax ebx +
call sub_469CF0  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46F822  +
mov [esp+2Ch+var_2C] ecx +
mov ecx [esp+2Ch+var_10] +
mov edx 37h +
mov eax ebx +
call sub_464440  +
mov ecx [esp+2Ch+var_18] +
mov edx 36h +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46DB83  +
test eax eax +
jnz loc_46E26C  +
mov ecx [esp+2Ch+var_18] +
mov edx 34h +
mov eax ebx +
mov [esp+2Ch+var_2C] 0 +
call sub_464440  +
mov ecx eax +
jmp loc_46DB83  +
add edx 2 +
mov [ebx+0Ch] edx +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov esi eax +
mov eax ebx +
call sub_469CF0  +
mov ecx eax +
mov eax [ebx+0Ch] +
cmp byte ptr [eax] 49h +
jz loc_46F87A  +
mov [esp+2Ch+var_2C] ecx +
mov ecx esi +
mov edx 1 +
mov eax ebx +
call sub_464440  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46E06B  +
mov eax ebx +
call sub_4647C0  +
add eax 1 +
mov edx eax +
jnz loc_46E6AD  +
xor esi esi +
jmp loc_46E8E7  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_46A0E0  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46EA01  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46DD45  +
mov eax ebx +
call sub_46D270  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_46D270  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_46D270  +
jmp loc_46E5B9  +
test eax eax +
jnz loc_46E8E5  +
mov ecx esi +
mov edx 34h +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_464440  +
mov edx [ebx+0Ch] +
mov esi eax +
jmp loc_46E06B  +
mov eax ebx +
call sub_46D270  +
mov ecx eax +
jmp loc_46F2C0  +
test edx edx +
mov [esp+2Ch+var_18] 0 +
jz loc_46F4EA  +
movzx eax byte ptr [edx] +
cmp al 6Dh +
jnz loc_46F4F8  +
cmp al [edx+1] +
mov [esp+2Ch+var_18] 0 +
jz loc_46F515  +
cmp ecx 33h +
jnz loc_46E036  +
jmp loc_46E02A  +
cmp al 70h +
lea esi [esi+0] +
jnz loc_46F4EA  +
jmp loc_46F4DD  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov [esp+2Ch+var_2C] eax +
nop   +
jmp loc_46E058  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_18] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_46F4EA  +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_18] 0 +
jmp loc_46F4EA  +
cmp byte ptr [edx+1] 69h +
mov ecx 70h +
jz loc_46F554  +
xor esi esi +
jmp loc_46E09D  +
add edx 1 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_46EDD7  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_46B500  +
jmp loc_46EDD7  +
mov eax ebx +
call sub_46D270  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_46D270  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_46D270  +
jmp loc_46EDD7  +
xor ecx ecx +
test edi edi +
jz loc_46F59E  +
movzx eax byte ptr [edi] +
cmp al 6Dh +
jz loc_46F5AC  +
cmp al 70h +
jz loc_46F5AC  +
cmp edx 33h +
jnz loc_46DD1E  +
jmp loc_46DD12  +
xor ecx ecx +
cmp al [edi+1] +
jnz loc_46F59E  +
mov eax [ebx+0Ch] +
mov cl 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_46F59E  +
add eax 1 +
xor cl cl +
mov [ebx+0Ch] eax +
jmp loc_46F59E  +
cmp byte ptr [eax+1] 69h +
jnz loc_46E289  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46B500  +
jmp loc_46E5B9  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_46E5B9  +
mov ecx 69h +
jmp loc_46F540  +
xor esi esi +
jmp loc_46E06B  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46B500  +
jmp loc_46E03D  +
mov eax ebx +
call sub_46A0E0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46EFED  +
cmp al 69h +
jz loc_46DFEA  +
jmp loc_46DFF4  +
test edx edx +
mov [esp+2Ch+var_18] 0 +
jz loc_46F66A  +
movzx eax byte ptr [edx] +
cmp al 6Dh +
jnz loc_46F678  +
cmp al [edx+1] +
mov [esp+2Ch+var_18] 0 +
jz loc_46F684  +
cmp ecx 33h +
jnz loc_46D9F9  +
jmp loc_46D9ED  +
cmp al 70h +
lea esi [esi+0] +
jnz loc_46F66A  +
jmp loc_46F65D  +
mov eax [ebx+0Ch] +
mov [esp+2Ch+var_18] 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_46F66A  +
add eax 1 +
mov [ebx+0Ch] eax +
mov [esp+2Ch+var_18] 0 +
jmp loc_46F66A  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_46A0E0  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46E9AE  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov ecx eax +
jmp loc_46EF5A  +
cmp dl 69h +
jz loc_46DF28  +
jmp loc_46DF32  +
mov edi [esp+2Ch+var_18] +
test edi edi +
jz loc_46F704  +
movzx edx byte ptr [edi] +
cmp dl 6Dh +
jz loc_46F6FB  +
cmp dl 70h +
jnz loc_46F704  +
mov edi [esp+2Ch+var_18] +
cmp dl [edi+1] +
jz loc_46F71A  +
mov edx [ebx+0Ch] +
xor esi esi +
cmp eax 33h +
jz loc_46D962  +
movzx eax byte ptr [edx] +
jmp loc_46D96D  +
mov edx [ebx+0Ch] +
mov esi 1 +
cmp byte ptr [edx] 5Fh +
jnz loc_46F709  +
add edx 1 +
xor si si +
mov [ebx+0Ch] edx +
jmp loc_46F709  +
mov eax ebx +
call sub_46D270  +
mov edi eax +
jmp loc_46EB20  +
mov eax ebx +
call sub_46A0E0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46F12E  +
cmp cl 69h +
jz loc_46E0B2  +
jmp loc_46E0BC  +
cmp byte ptr [eax+1] 69h +
jnz loc_46DB83  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46B500  +
jmp loc_46EF10  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_46EF10  +
cmp al 77h +
jz loc_46EEC0  +
xor ecx ecx +
jmp loc_46DB83  +
mov edx 45h +
mov eax ebx +
call sub_46B500  +
mov ecx eax +
jmp loc_46F2C0  +
movzx eax byte ptr [eax] +
lea ecx [eax-63h] +
cmp cl 1 +
jbe loc_46F7D4  +
sub eax 72h +
cmp al 1 +
ja loc_46F244  +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_14] edx +
call sub_468740  +
mov edx [esp+2Ch+var_14] +
mov [esp+2Ch+var_18] eax +
jmp loc_46F257  +
mov eax [esp+2Ch+var_14] +
xor ecx ecx +
test eax eax +
jz loc_46F809  +
movzx eax byte ptr [eax] +
cmp al 6Dh +
jnz loc_46F819  +
mov edx [esp+2Ch+var_14] +
xor ecx ecx +
cmp al [edx+1] +
jz loc_46F847  +
cmp [esp+2Ch+var_10] 33h +
jnz loc_46E102  +
jmp loc_46E0F6  +
cmp al 70h +
jnz loc_46F809  +
lea esi [esi+0] +
jmp loc_46F7FE  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_46A0E0  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46F391  +
mov eax [ebx+0Ch] +
mov cl 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_46F809  +
add eax 1 +
xor cl cl +
mov [ebx+0Ch] eax +
jmp loc_46F809  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_46B500  +
mov ecx [esp+2Ch+var_14] +
jmp loc_46DD2D  +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_46A0E0  +
mov ecx [esp+2Ch+var_18] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46F40C  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
mov [esp+2Ch+var_18] ecx +
call sub_46B500  +
mov ecx [esp+2Ch+var_18] +
jmp loc_46DF7D  +
mov eax ebx +
call sub_46A0E0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov edi eax +
jmp loc_46EB20  +
cmp byte ptr [eax+1] 69h +
jnz loc_46E5FF  +
add eax 2 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46B500  +
jmp loc_46E89F  +
add eax 1 +
mov [ebx+0Ch] eax +
xor eax eax +
jmp loc_46E89F  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_46A0E0  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov ecx eax +
jmp loc_46F2C0  +
mov edx 45h +
mov eax ebx +
call sub_46B500  +
mov ecx eax +
jmp loc_46F391  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46F95A  +
sub eax 72h +
cmp al 1 +
ja loc_46F321  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov [esp+2Ch+var_10] eax +
jmp loc_46F32C  +
mov eax ebx +
call sub_46D270  +
mov [esp+2Ch+var_14] eax +
mov eax ebx +
call sub_46D270  +
mov [esp+2Ch+var_10] eax +
mov eax ebx +
call sub_46D270  +
jmp loc_46EF10  +
mov eax ebx +
call sub_46D270  +
mov ecx eax +
jmp loc_46F391  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov esi eax +
jmp loc_46ECCF  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
jmp loc_46E126  +
cmp dl 69h +
jz loc_46D8B1  +
jmp loc_46D92D  +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_46A0E0  +
mov ecx [esp+2Ch+var_14] +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46F06A  +
mov eax 69h +
xor edi edi +
jmp loc_46DFD7  +
cmp al 69h +
jz loc_46DCD8  +
nop   +
jmp loc_46DCE2  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
mov [esp+2Ch+var_14] ecx +
call sub_46B500  +
mov ecx [esp+2Ch+var_14] +
jmp loc_46E111  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov esi eax +
jmp loc_46EE30  +
add eax 1 +
mov edx 45h +
mov [ebx+0Ch] eax +
mov eax ebx +
call sub_46B500  +
jmp loc_46DA00  +
cmp al 69h +
jz loc_46D9AD  +
jmp loc_46D9B7  +
mov [esp+2Ch+var_2C] ebx +
lea esi [esi+0] +
call sub_468740  +
mov [esp+2Ch+var_2C] eax +
jmp loc_46DF95  +
cmp byte ptr [edx+1] 69h +
jnz loc_46F9F0  +
add edx 2 +
mov eax ebx +
mov [ebx+0Ch] edx +
mov edx 45h +
call sub_46B500  +
jmp loc_46EC4D  +
mov edx 45h +
mov eax ebx +
call sub_46B500  +
mov edi eax +
jmp loc_46F1E0  +
movzx eax byte ptr [eax] +
lea edx [eax-63h] +
cmp dl 1 +
jbe loc_46FAB7  +
sub eax 72h +
cmp al 1 +
ja loc_46F17C  +
mov [esp+2Ch+var_2C] ebx +
call sub_468740  +
mov [esp+2Ch+var_18] eax +
jmp loc_46F187  +
mov eax ebx +
call sub_46D270  +
mov [esp+2Ch+var_18] eax +
mov eax ebx +
call sub_46D270  +
mov edi eax +
mov eax ebx +
call sub_46D270  +
jmp loc_46EC4D  +
mov eax ebx +
call sub_46D270  +
mov edi eax +
jmp loc_46F1E0  +
add edx 1 +
xor eax eax +
mov [ebx+0Ch] edx +
jmp loc_46EC4D  +
cmp al 77h +
jz loc_46EC03  +
jmp loc_46F0E9  +
xor ecx ecx +
test edi edi +
jz loc_46FB24  +
movzx eax byte ptr [edi] +
cmp al 6Dh +
jnz loc_46FB35  +
xor ecx ecx +
cmp al [edi+1] +
jz loc_46FB61  +
cmp edx 33h +
jnz loc_46DF6E  +
lea esi [esi+0] +
jmp loc_46DF62  +
cmp al 70h +
jnz loc_46FB24  +
lea esi [esi+0] +
jmp loc_46FB1D  +
mov eax ebx +
call sub_46A0E0  +
mov ecx edi +
mov edx 4 +
mov [esp+2Ch+var_2C] eax +
mov eax ebx +
call sub_464440  +
mov edi eax +
jmp loc_46F1E0  +
mov eax [ebx+0Ch] +
mov cl 1 +
cmp byte ptr [eax] 5Fh +
jnz loc_46FB24  +
add eax 1 +
xor cl cl +
mov [ebx+0Ch] eax +
jmp loc_46FB24  +
***
push edi  +
push esi  +
push ebx  +
sub esp 16Ch +
mov eax [ebp+arg_8] +
mov ebx [ebp+arg_4] +
lea edx [ebp+var_2C] +
mov esi esp +
mov [ebp+var_5C] 0 +
mov [ebp+var_58] 0 +
mov [ebp+var_54] eax +
mov eax [ebp+arg_C] +
mov ecx ebx +
mov [ebp+var_4C] 0 +
mov [ebp+var_48] 0 +
mov [ebp+var_50] eax +
lea eax [ebp+var_20] +
mov [ebp+var_40] 0 +
mov [ebp+var_3C] 0 +
mov [ebp+var_44] 0 +
mov [ebp+var_38] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_30] 0 +
mov [ebp+var_2C] 0 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_20] 0 +
call sub_464640  +
mov eax [ebp+var_2C] +
mov edx [ebp+var_20] +
mov [ebp+var_1C] 0 +
imul edx eax +
lea eax ds:12h[eax*8] +
and eax 0FFFFFFF0h +
mov [ebp+var_20] edx +
call sub_472FB0  +
sub esp eax +
lea eax ds:12h[edx*8] +
lea ecx [esp+178h+var_16C] +
and eax 0FFFFFFF0h +
call sub_472FB0  +
mov edx [ebp+arg_0] +
sub esp eax +
lea eax [esp+178h+var_16C] +
mov [ebp+var_28] eax +
mov eax [ebp+var_38] +
lea edi [ebp+var_15C] +
mov [ebp+var_34] ecx +
mov ecx ebx +
mov [ebp+var_164] ebx +
mov [ebp+var_160] eax +
lea eax [ebp+var_164] +
mov [ebp+var_38] eax +
mov eax edi +
call sub_464ED0  +
mov eax [ebp+var_160] +
mov [ebp+var_38] eax +
mov eax [ebp+var_5C] +
mov esp esi +
mov ecx [ebp+var_50] +
mov edx [ebp+var_54] +
mov byte ptr [ebp+eax+var_15C] 0 +
mov [esp+178h+var_174] eax +
mov [esp+178h+var_178] edi +
mov [esp+178h+var_170] ecx +
call edx  +
mov edx [ebp+var_44] +
xor eax eax +
test edx edx +
setz al  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp sub_46FCC0  +
***
push edi  +
push esi  +
push ebx  +
mov ebx eax +
sub esp 6Ch +
cmp byte ptr [eax] 5Fh +
mov [ebp+var_5C] edx +
mov [ebp+var_60] ecx +
jz loc_46FEA0  +
mov edi offset a_global_ +
mov ecx 8 +
mov esi ebx +
cmps   +
jz loc_46FE54  +
mov eax [ebp+var_5C] +
and eax 10h +
jz loc_46FE4C  +
xor esi esi +
mov [esp+78h+var_78] ebx +
mov edi esp +
call strlen  +
mov [ebp+var_54] ebx +
mov [ebp+var_48] ebx +
mov [ebp+var_40] 0 +
mov [ebp+var_34] 0 +
mov [ebp+var_2C] 0 +
mov edx eax +
lea eax [ebx+eax] +
mov [ebp+var_50] eax +
mov eax [ebp+var_5C] +
mov [ebp+var_30] edx +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
mov [ebp+var_4C] eax +
lea eax [edx+edx] +
mov [ebp+var_3C] eax +
lea eax [eax+edx*4] +
lea eax ds:12h[eax*4] +
and eax 0FFFFFFF0h +
mov [ebp+var_20] 0 +
mov [ebp+var_1C] 0 +
call sub_472FB0  +
sub esp eax +
lea eax ds:12h[edx*4] +
lea ecx [esp+78h+var_68] +
and eax 0FFFFFFF0h +
call sub_472FB0  +
sub esp eax +
cmp esi 1 +
lea eax [esp+78h+var_68] +
mov [ebp+var_44] ecx +
mov [ebp+var_38] eax +
jz loc_46FE00  +
jb loc_46FEB5  +
cmp esi 3 +
ja loc_46FEB5  +
cmp byte ptr [ebx+0Bh] 5Fh +
lea edx [ebx+0Bh] +
mov [ebp+var_48] edx +
jnz loc_46FDB1  +
cmp byte ptr [ebx+0Ch] 5Ah +
jz loc_46FED0  +
mov [esp+78h+var_78] edx +
lea ebx [ebp+var_54] +
mov [ebp+var_64] edx +
call strlen  +
mov edx [ebp+var_64] +
mov ecx eax +
mov eax ebx +
call sub_4644A0  +
mov ecx eax +
xor edx edx +
cmp esi 2 +
setnz dl  +
mov eax ebx +
add edx 42h +
mov [esp+78h+var_78] 0 +
call sub_464440  +
mov esi [ebp+var_48] +
mov [esp+78h+var_78] esi +
mov ebx eax +
call strlen  +
add esi eax +
mov [ebp+var_48] esi +
jmp loc_46FE15  +
lea eax [ebp+var_54] +
mov [esp+78h+var_74] 1 +
mov [esp+78h+var_78] eax +
call sub_46B1C0  +
mov ebx eax +
test byte ptr [ebp+var_5C] 1 +
jz loc_46FE25  +
mov edx [ebp+var_48] +
xor eax eax +
cmp byte ptr [edx] 0 +
jnz loc_46FE4A  +
test ebx ebx +
jz loc_46FEC7  +
mov eax [ebp+arg_0] +
mov [esp+78h+var_6C] eax +
mov eax [ebp+var_60] +
mov [esp+78h+var_74] ebx +
mov [esp+78h+var_70] eax +
mov eax [ebp+var_5C] +
mov [esp+78h+var_78] eax +
call sub_46FB80  +
mov esp edi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+8] +
cmp al 2Eh +
jz loc_46FE60  +
cmp al 5Fh +
jnz loc_46FE90  +
movzx eax byte ptr [ebx+9] +
cmp al 49h +
setz dl  +
jz loc_46FE73  +
cmp al 44h +
jnz loc_46FCEE  +
cmp byte ptr [ebx+0Ah] 5Fh +
jnz loc_46FCEE  +
mov esi edx +
shl esi 1Fh +
sar esi 1Fh +
add esi 3 +
jmp loc_46FCFC  +
cmp al 24h +
jnz loc_46FCEE  +
jmp loc_46FE60  +
cmp byte ptr [eax+1] 5Ah +
jnz loc_46FCDA  +
mov esi 1 +
nop   +
jmp loc_46FCFC  +
lea eax [ebp+var_54] +
mov [esp+78h+var_78] eax +
call sub_468740  +
mov ebx eax +
jmp loc_46FE15  +
xor eax eax +
mov esp edi +
jmp loc_46FE4C  +
add ebx 0Dh +
xor edx edx +
mov [ebp+var_48] ebx +
lea ebx [ebp+var_54] +
mov eax ebx +
call sub_46AC20  +
mov ecx eax +
jmp loc_46FDCD  +
***
sub esp 28h +
lea ecx [esp+28h+var_18] +
mov [esp+28h+var_28] ecx +
mov ecx offset sub_464CD0 +
mov [esp+28h+var_18] 0 +
mov [esp+28h+var_14] 0 +
mov [esp+28h+var_10] 0 +
mov [esp+28h+var_C] 0 +
call sub_46FCC0  +
test eax eax +
jz loc_46FF46  +
mov edx [esp+28h+var_C] +
mov eax 1 +
test edx edx +
cmovz eax [esp+28h+var_10] +
mov [ebx] eax +
mov eax [esp+28h+var_18] +
add esp 28h +
pop ebx  +
retn   +
mov eax [esp+28h+var_18] +
mov [esp+28h+var_28] eax +
call free  +
xor eax eax +
mov dword ptr [ebx] 0 +
jmp loc_46FF41  +
***
push ebx  +
sub esp 28h +
mov eax [esp+38h] +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
test eax eax +
mov dword ptr [esp+1Ch] 0 +
jnz loc_46FFD3  +
lea eax [esp+10h] +
mov [esp+0Ch] eax +
mov eax [esp+34h] +
mov dword ptr [esp+8] offset sub_464CD0 +
mov [esp+4] eax +
mov eax [esp+30h] +
mov [esp] eax +
call sub_46FB80  +
test eax eax +
jz loc_470004  +
mov edx [esp+1Ch] +
mov eax 1 +
test edx edx +
mov edx [esp+3Ch] +
cmovz eax [esp+18h] +
mov [edx] eax +
mov eax [esp+10h] +
add esp 28h +
pop ebx  +
retn   +
***
cmp eax 2 +
mov ebx 2 +
jbe loc_46FFE6  +
lea esi [esi+0] +
add ebx ebx +
cmp eax ebx +
ja loc_46FFE0  +
mov [esp+4] ebx +
mov dword ptr [esp] 0 +
call realloc  +
test eax eax +
jz loc_47001E  +
mov [esp+10h] eax +
mov [esp+18h] ebx +
jmp loc_46FF8C  +
***
mov eax [esp+10h] +
mov [esp] eax +
call free  +
mov eax [esp+3Ch] +
mov dword ptr [eax] 0 +
xor eax eax +
jmp loc_46FFCE  +
***
mov eax [esp+10h] +
mov [esp] eax +
call free  +
mov dword ptr [esp+10h] 0 +
mov dword ptr [esp+14h] 0 +
mov dword ptr [esp+18h] 0 +
mov dword ptr [esp+1Ch] 1 +
jmp loc_46FF8C  +
***
push ebx  +
mov ecx [esp+8] +
mov edx [esp+10h] +
mov eax [esp+14h] +
lea ebx [ecx+edx] +
mov [eax+4] ebx +
mov ebx [esp+0Ch] +
mov [eax] ecx +
mov [eax+0Ch] ecx +
lea ecx [edx+edx] +
mov [eax+18h] ecx +
mov [eax+8] ebx +
mov dword ptr [eax+14h] 0 +
mov [eax+24h] edx +
mov dword ptr [eax+20h] 0 +
mov dword ptr [eax+28h] 0 +
mov dword ptr [eax+2Ch] 0 +
mov dword ptr [eax+30h] 0 +
mov dword ptr [eax+34h] 0 +
mov dword ptr [eax+38h] 0 +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov edx [esp+1Ch+arg_4] +
lea ecx [esp+1Ch+var_10] +
mov eax [esp+1Ch+arg_0] +
call sub_46FEF0  +
add esp 1Ch +
retn   +
***
mov edx [esp+10h] +
mov eax [esp+4] +
mov ecx [esp+0Ch] +
mov [esp+4] edx +
mov edx [esp+8] +
jmp sub_46FCC0  +
***
sub esp 1Ch +
mov edx 25h +
mov eax [esp+1Ch+arg_0] +
lea ecx [esp+1Ch+var_10] +
call sub_46FEF0  +
add esp 1Ch +
retn   +
***
mov edx [esp+0Ch] +
mov eax [esp+4] +
mov ecx [esp+8] +
mov [esp+4] edx +
mov edx 25h +
jmp sub_46FCC0  +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_46B3F0  +
xor edx edx +
test eax eax +
cmovnz edx [esp+8] +
add esp 1Ch +
mov eax edx +
retn   +
***
sub esp 1Ch +
mov eax [esp+20h] +
lea edx [esp+8] +
lea ecx [esp+0Ch] +
call sub_46B3F0  +
xor edx edx +
test eax eax +
cmovnz edx [esp+0Ch] +
add esp 1Ch +
mov eax edx +
retn   +
***
push ebx  +
mov ebx eax +
sub esp 10h +
mov ecx [eax] +
test ecx ecx +
jz loc_4701D0  +
mov esi [eax+4] +
mov eax [eax+8] +
sub eax esi +
cmp edx eax +
jle loc_4701C9  +
sub esi ecx +
add edx esi +
lea edi [edx+edx] +
mov [esp+10h+var_C] edi +
mov [esp+10h+var_10] ecx +
call sub_45B950  +
add esi eax +
mov [ebx] eax +
add eax edi +
mov [ebx+4] esi +
mov [ebx+8] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
cmp edx 20h +
mov esi 20h +
cmovge esi edx +
mov [esp+10h+var_10] esi +
call sub_45B8D0  +
add esi eax +
mov [ebx+8] esi +
mov [ebx] eax +
mov [ebx+4] eax +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
push esi  +
push ebx  +
mov ebx eax +
sub esp 10h +
mov [esp+18h+var_18] edx +
call strlen  +
mov esi eax +
mov edx eax +
mov eax ebx +
call sub_470190  +
mov eax [ebx+4] +
mov [esp+18h+var_10] esi +
mov [esp+18h+var_14] edi +
mov [esp+18h+var_18] eax +
call memcpy  +
add [ebx+4] esi +
add esp 10h +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
test edx edx +
jz loc_4702C0  +
movzx ecx byte ptr [edx] +
test cl cl +
jz loc_4702C0  +
sub ecx 46h +
cmp cl 11h +
ja loc_4702C0  +
movzx ecx cl +
jmp ds:off_498F1C[ecx*4]  +
lea ebx [edx+1] +
mov edx offset aExternWindows +
call sub_470200  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
add esp 8 +
lea eax [edx+1] +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternC +
call sub_470200  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternC_0 +
call sub_470200  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
lea ebx [edx+1] +
mov edx offset aExternPascal +
call sub_470200  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
add esp 8 +
xor eax eax +
pop ebx  +
retn   +
***
test edx edx +
jz loc_47039E  +
push esi  +
mov esi eax +
push ebx  +
sub esp 4 +
movzx eax byte ptr [edx] +
test al al +
jz loc_470310  +
lea ebx [edx+2] +
mov edx eax +
cmp dl 4Eh +
lea eax [ebx-2] +
jnz loc_470312  +
movzx ecx byte ptr [ebx-1] +
lea edx [ecx-61h] +
cmp dl 0Ah +
ja loc_470310  +
movzx edx dl +
jmp ds:off_498FA4[edx*4]  +
xor eax eax +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov edx offset a@nogc +
mov eax esi +
call sub_470200  +
movzx edx byte ptr [ebx] +
add ebx 2 +
jmp loc_4702EB  +
mov edx offset a@safe +
mov eax esi +
call sub_470200  +
jmp loc_470324  +
mov edx offset a@trusted +
mov eax esi +
call sub_470200  +
jmp loc_470324  +
mov edx offset a@property +
mov eax esi +
call sub_470200  +
jmp loc_470324  +
mov edx offset aRef +
mov eax esi +
call sub_470200  +
jmp loc_470324  +
mov edx offset aNothrow +
mov eax esi +
call sub_470200  +
jmp loc_470324  +
mov edx offset aPure +
mov eax esi +
call sub_470200  +
jmp loc_470324  +
mov edx offset aReturn +
mov eax esi +
call sub_470200  +
jmp loc_470324  +
xor eax eax +
retn   +
***
jmp sub_4703B0  +
***
push edi  +
mov edi edx +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_28] edx +
call strlen  +
test eax eax +
mov esi eax +
jnz loc_4703D1  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx eax +
mov eax ebp +
call sub_470190  +
mov eax [ebp+4] +
mov ebx [ebp+0] +
lea ecx [eax-1] +
cmp ecx ebx +
jb loc_4703F8  +
movzx eax byte ptr [ecx] +
sub ecx 1 +
mov [ecx+esi+1] al +
mov ebx [ebp+0] +
cmp ecx ebx +
jnb loc_4703E7  +
mov [esp+28h+var_20] esi +
mov [esp+28h+var_24] edi +
mov [esp+28h+var_28] ebx +
call memcpy  +
add [ebp+4] esi +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push esi  +
mov edi ecx +
push esi  +
mov esi eax +
push ebx  +
sub esp 2Ch +
cmp cl 61h +
setz al  +
mov ebp eax +
mov eax ecx +
and eax 0FFFFFFFDh +
cmp al 75h +
jz loc_4704C0  +
mov eax ebp +
test al al +
jnz loc_4704C0  +
cmp cl 62h +
jz loc_470640  +
movzx eax byte ptr [edx] +
xor ecx ecx +
mov ebx edx +
test ds:byte_495EE0[eax+eax] 4 +
jz loc_4704AB  +
lea esi [esi+0] +
add ebx 1 +
movzx eax byte ptr [ebx] +
add ecx 1 +
test ds:byte_495EE0[eax+eax] 4 +
jnz loc_470490  +
test ecx ecx +
jnz loc_470688  +
lea eax [edi-68h] +
cmp al 0Ch +
ja loc_470681  +
movzx eax al +
jmp ds:off_498FF0[eax*4]  +
lea eax [esp+34h+var_24] +
mov [esp+34h+var_2C] 0Ah +
mov [esp+34h+var_30] eax +
mov [esp+34h+var_34] edx +
call strtol  +
mov ecx [esp+34h+var_24] +
test ecx ecx +
mov ebx eax +
jz loc_4706B0  +
test eax eax +
js loc_4706B0  +
mov eax esi +
mov edx offset asc_498FDB +
call sub_470200  +
lea eax [ebx-20h] +
cmp eax 5Eh +
ja loc_470538  +
mov eax ebp +
test al al +
jz loc_470538  +
mov ecx 1 +
mov eax esi +
lea edx [esp+34h+var_20] +
mov byte ptr [esp+34h+var_20] bl +
call sub_470420  +
lea esi [esi+0] +
mov eax esi +
mov edx offset asc_498FDB +
call sub_470200  +
mov eax [esp+34h+var_24] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax edi +
cmp al 75h +
jz loc_470695  +
cmp al 77h +
jz loc_470626  +
xor ecx ecx +
cmp al 61h +
jnz loc_470561  +
mov edx offset asc_498FDD +
mov eax esi +
call sub_470200  +
mov ecx 2 +
test ebx ebx +
jz loc_4706B7  +
mov edx 9 +
jmp loc_470584  +
add eax 30h +
sub ecx 1 +
sar ebx 4 +
mov byte ptr [esp+edx+34h+var_20] al +
sub edx 1 +
test ebx ebx +
jz loc_4705A4  +
mov eax ebx +
mov edi edx +
and eax 0Fh +
cmp eax 9 +
jle loc_470570  +
add eax 57h +
sub ecx 1 +
sar ebx 4 +
mov byte ptr [esp+edx+34h+var_20] al +
sub edx 1 +
test ebx ebx +
jnz loc_470584  +
test ecx ecx +
jle loc_4705BE  +
mov eax edi +
mov edx ecx +
sub eax ecx +
lea eax [esp+eax+34h+var_20] +
mov byte ptr [eax+edx-1] 30h +
sub edx 1 +
jnz loc_4705B2  +
sub edi ecx +
mov ecx 0Ah +
sub ecx edi +
jz loc_470520  +
lea edx [esp+edi+34h+var_20] +
mov eax esi +
call sub_470420  +
jmp loc_470520  +
mov eax esi +
mov edx offset aUl_0 +
call sub_470200  +
mov eax ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edx offset asc_498FE8 +
call sub_470200  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edx offset aU_2 +
call sub_470200  +
add esp 2Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset aU_1 +
mov eax esi +
call sub_470200  +
mov ecx 8 +
jmp loc_470561  +
lea eax [esp+34h+var_20] +
mov [esp+34h+var_34] edx +
mov [esp+34h+var_2C] 0Ah +
mov [esp+34h+var_30] eax +
call strtol  +
mov edx [esp+34h+var_20] +
test edx edx +
jz loc_4706B0  +
test eax eax +
js loc_4706B0  +
mov eax offset aFalse_1 +
mov edx offset aTrue_1 +
cmovz edx eax +
mov eax esi +
call sub_470200  +
mov eax [esp+34h+var_20] +
jmp loc_4705EE  +
mov eax ebx +
jmp loc_4705EE  +
mov eax esi +
call sub_470420  +
nop   +
jmp loc_4704AB  +
mov edx offset aU_0 +
mov eax esi +
call sub_470200  +
mov ecx 4 +
jmp loc_470561  +
xor eax eax +
jmp loc_4705EE  +
mov edi 0Ah +
jmp loc_4705A4  +
***
jmp sub_4706D0  +
***
push esi  +
mov edi offset unk_499024 +
push ebx  +
mov esi edx +
sub esp 40h +
mov ebx edx +
cmps   +
jz loc_470817  +
mov edi offset off_49902C +
mov ecx 3 +
mov esi edx +
cmps   +
jz loc_470856  +
mov edi offset aNinf +
mov ecx 4 +
mov esi edx +
cmps   +
jz loc_47086C  +
movzx ecx byte ptr [edx] +
xor edx edx +
cmp cl 4Eh +
jz loc_47082D  +
movzx esi cl +
test ds:byte_495EE1[esi+esi] 1 +
jz loc_47084B  +
mov [esp+edx+48h+var_46] cl +
lea ecx [edx+4] +
mov [esp+edx+48h+var_48] 30h +
lea esi [ebx+1] +
mov [esp+edx+48h+var_47] 78h +
mov [esp+edx+48h+var_45] 2Eh +
movzx edx byte ptr [ebx+1] +
movzx ebx dl +
test ds:byte_495EE1[ebx+ebx] 1 +
jz loc_470779  +
lea edi [esp-1] +
add ecx 1 +
add esi 1 +
mov [edi+ecx] dl +
movzx edx byte ptr [esi] +
movzx ebx dl +
test ds:byte_495EE1[ebx+ebx] 1 +
jnz loc_470760  +
cmp dl 50h +
jnz loc_47084B  +
movzx edi byte ptr [esi+1] +
lea edx [ecx+1] +
mov [esp+ecx+48h+var_48] 70h +
mov ebx edi +
cmp bl 4Eh +
jz loc_470882  +
lea ebx [esi+1] +
mov esi edi +
mov ecx esi +
movzx ecx cl +
test ds:byte_495EE0[ecx+ecx] 4 +
jz loc_4707CB  +
mov ecx esi +
lea edi [esp-1] +
add edx 1 +
add ebx 1 +
mov [edi+edx] cl +
movzx ecx byte ptr [ebx] +
movzx esi cl +
test ds:byte_495EE0[esi+esi] 4 +
jnz loc_4707B2  +
mov [esp+edx+48h+var_48] 0 +
mov esi esp +
mov ecx esp +
mov edi [ecx] +
add ecx 4 +
lea edx [edi-1010101h] +
not edi  +
and edx edi +
and edx 80808080h +
jz loc_4707D3  +
mov edi edx +
shr edi 10h +
test edx 8080h +
cmovz edx edi +
lea edi [ecx+2] +
cmovz ecx edi +
add dl dl +
sbb ecx 3 +
sub ecx esi +
jz loc_470824  +
mov edx esi +
call sub_470420  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset unk_499028 +
add ebx 3 +
call sub_470200  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
movzx ecx byte ptr [ebx+1] +
add ebx 1 +
mov dl 1 +
mov [esp+48h+var_48] 2Dh +
movzx esi cl +
test ds:byte_495EE1[esi+esi] 1 +
jnz loc_470733  +
add esp 40h +
xor ebx ebx +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset unk_499030 +
add ebx 3 +
call sub_470200  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov edx offset aInf +
add ebx 4 +
call sub_470200  +
add esp 40h +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
retn   +
mov [esp+edx+48h+var_48] 2Dh +
lea ebx [esi+2] +
movzx esi byte ptr [esi+2] +
lea edx [ecx+2] +
jmp loc_47079D  +
***
push esi  +
push ebx  +
sub esp 2Ch +
test edx edx +
mov esi [esp+2Ch+arg_0] +
jz loc_470907  +
mov ebx eax +
movzx eax byte ptr [edx] +
test al al +
jz loc_470907  +
lea edi [eax-30h] +
mov ebp ecx +
mov ecx edi +
cmp cl 47h +
ja loc_470907  +
movzx edi cl +
jmp ds:off_49906C[edi*4]  +
add edx 1 +
mov byte ptr [esp+2Ch+var_12] al +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
call strtol  +
mov ebp [esp+2Ch+var_12+2] +
test ebp ebp +
mov edi eax +
jz loc_470907  +
test eax eax +
js loc_470907  +
cmp byte ptr [ebp+0] 5Fh +
jz loc_470AE5  +
xor esi esi +
add esp 2Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [edx+1] +
lea ecx [edx+1] +
sub eax 30h +
cmp al 9 +
ja loc_470907  +
mov edx ecx +
mov eax esi +
movsx ecx al +
mov eax ebx +
call sub_470450  +
add esp 2Ch +
pop ebx  +
mov esi eax +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
add edx 1 +
cmp al 48h +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
jz loc_470CA3  +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_470907  +
test eax eax +
js loc_470907  +
mov edx offset asc_49905C +
mov eax ebx +
call sub_470200  +
jmp loc_4709A5  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_4708A0  +
test edi edi +
mov esi eax +
jz loc_4709A5  +
mov edx offset asc_499060 +
mov eax ebx +
call sub_470200  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_470981  +
mov edx offset asc_499063 +
mov eax ebx +
call sub_470200  +
jmp loc_470909  +
lea edi [edx+1] +
mov eax ebx +
mov edx offset asc_499043 +
call sub_470200  +
mov eax esi +
mov edx edi +
movsx ecx al +
mov eax ebx +
call sub_470450  +
mov esi eax +
jmp loc_470909  +
add edx 1 +
lea eax [esp+2Ch+var_12+2] +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
mov [esp+2Ch+var_2C] edx +
mov [esp+2Ch+var_20] ebp +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_470907  +
test eax eax +
js loc_470907  +
mov ebp [esp+2Ch+var_20] +
test ebp ebp +
jz loc_470A2A  +
mov edx ebp +
mov eax ebx +
call sub_470200  +
mov edx offset asc_499065 +
mov eax ebx +
call sub_470200  +
jmp loc_470A5C  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_4708A0  +
test edi edi +
mov esi eax +
jz loc_470A5C  +
mov edx offset asc_499060 +
mov eax ebx +
call sub_470200  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_470A38  +
mov edx offset asc_499067 +
mov eax ebx +
call sub_470200  +
jmp loc_470909  +
add edx 1 +
mov eax ebx +
call sub_4706D0  +
mov edx offset asc_499045 +
mov esi eax +
mov eax ebx +
call sub_470200  +
test esi esi +
jz loc_470907  +
cmp byte ptr [esi] 63h +
jnz loc_470907  +
lea edx [esi+1] +
mov eax ebx +
call sub_4706D0  +
mov edx offset aI +
mov esi eax +
mov eax ebx +
call sub_470200  +
jmp loc_470909  +
add edx 1 +
mov eax ebx +
call sub_4706D0  +
mov esi eax +
jmp loc_470909  +
lea esi [edx+1] +
mov eax ebx +
mov edx offset aNull +
call sub_470200  +
jmp loc_470909  +
mov edx offset asc_499049 +
mov eax ebx +
call sub_470200  +
test edi edi +
lea esi [ebp+1] +
jz loc_470D21  +
movzx edx byte ptr [ebp+1] +
movzx eax dl +
test ds:byte_495EE1[eax+eax] 1 +
jz loc_470907  +
movzx ecx byte ptr [ebp+2] +
movzx eax cl +
test ds:byte_495EE1[eax+eax] 1 +
jz loc_470907  +
mov eax edx +
lea edx [eax-61h] +
lea ebp [edi-1] +
xor edi edi +
cmp dl 5 +
ja loc_470BB1  +
sub eax 57h +
shl eax 4 +
lea edx [ecx-61h] +
cmp dl 5 +
ja loc_470BCF  +
sub ecx 57h +
or eax ecx +
lea edx [eax-9] +
cmp dl 17h +
mov byte ptr [esp+2Ch+var_12+1] al +
ja loc_470C34  +
movzx edx dl +
jmp ds:off_49918C[edx*4]  +
mov edx offset asc_49904B +
mov eax ebx +
call sub_470200  +
add esi 2 +
cmp edi ebp +
jz loc_470D21  +
movzx eax byte ptr [esi] +
movzx edx al +
test ds:byte_495EE1[edx+edx] 1 +
jz loc_470907  +
movzx ecx byte ptr [esi+1] +
add edi 1 +
movzx edx cl +
test ds:byte_495EE1[edx+edx] 1 +
jz loc_470907  +
lea edx [eax-61h] +
cmp dl 5 +
jbe loc_470B35  +
lea edx [eax-41h] +
cmp dl 5 +
ja loc_470C66  +
sub eax 37h +
lea edx [ecx-61h] +
shl eax 4 +
cmp dl 5 +
jbe loc_470B47  +
lea edx [ecx-41h] +
cmp dl 5 +
ja loc_470C56  +
sub ecx 37h +
jmp loc_470B4A  +
mov edx offset aR_0 +
mov eax ebx +
call sub_470200  +
jmp loc_470B72  +
mov edx offset aF +
mov eax ebx +
call sub_470200  +
jmp loc_470B72  +
mov edx offset aV +
mov eax ebx +
call sub_470200  +
jmp loc_470B72  +
mov edx offset aN +
mov eax ebx +
call sub_470200  +
jmp loc_470B72  +
mov edx offset aT +
mov eax ebx +
call sub_470200  +
jmp loc_470B72  +
movzx eax al +
test ds:byte_495EE0[eax+eax] 10h +
jz loc_470C84  +
mov ecx 1 +
mov eax ebx +
lea edx [esp+2Ch+var_12+1] +
call sub_470420  +
jmp loc_470B72  +
lea edx [ecx-30h] +
xor ecx ecx +
cmp dl 9 +
cmovbe ecx edx +
jmp loc_470B4A  +
lea edx [eax-30h] +
mov eax edx +
shl eax 4 +
mov byte ptr [esp+2Ch+var_20] al +
xor eax eax +
cmp dl 9 +
movzx edx byte ptr [esp+2Ch+var_20] +
cmovbe eax edx +
jmp loc_470B3B  +
mov eax ebx +
mov edx offset asc_498FDD +
call sub_470200  +
mov ecx 2 +
mov edx esi +
mov eax ebx +
call sub_470420  +
jmp loc_470B72  +
call strtol  +
mov esi [esp+2Ch+var_12+2] +
test esi esi +
mov edi eax +
jz loc_470907  +
test eax eax +
js loc_470907  +
mov edx offset asc_49905C +
mov eax ebx +
call sub_470200  +
jmp loc_470D14  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_4708A0  +
mov edx (offset asc_49905C+2) +
mov esi eax +
mov eax ebx +
call sub_470200  +
xor ecx ecx +
mov edx esi +
mov [esp+2Ch+var_2C] 0 +
mov eax ebx +
call sub_4708A0  +
test edi edi +
mov esi eax +
jz loc_470D14  +
mov edx offset asc_499060 +
mov eax ebx +
call sub_470200  +
sub edi 1 +
cmp edi 0FFFFFFFFh +
jnz loc_470CD0  +
jmp loc_4709AD  +
mov edx offset asc_499049 +
mov eax ebx +
call sub_470200  +
cmp byte ptr [esp+2Ch+var_12] 61h +
jz loc_470909  +
mov ecx 1 +
mov eax ebx +
lea edx [esp+2Ch+var_12] +
call sub_470420  +
jmp loc_470909  +
***
mov ebx edx +
sub esp 4 +
test edx edx +
jz loc_470DC6  +
movzx ecx byte ptr [edx] +
mov esi eax +
test cl cl +
jz loc_470DC6  +
cmp cl 4Fh +
jz loc_470DD0  +
jle loc_470DA5  +
cmp cl 78h +
nop   +
jz loc_470D90  +
cmp cl 79h +
jnz loc_470DE7  +
mov eax esi +
mov edx offset aImmutable_0 +
call sub_470200  +
lea eax [ebx+1] +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
mov eax esi +
mov edx offset aConst_2 +
call sub_470200  +
add esp 4 +
lea eax [ebx+1] +
pop ebx  +
pop esi  +
retn   +
cmp cl 4Eh +
jnz loc_470DE7  +
cmp byte ptr [ebx+1] 67h +
jnz loc_470DC6  +
mov edx offset aInout +
mov eax esi +
add ebx 2 +
call sub_470200  +
movzx ecx byte ptr [ebx] +
test cl cl +
jnz loc_470D64  +
xor eax eax +
jmp loc_470D86  +
add ebx 1 +
mov edx offset aShared_0 +
mov eax esi +
call sub_470200  +
test ebx ebx +
jnz loc_470DBF  +
xor eax eax +
jmp loc_470D86  +
add esp 4 +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 2Ch +
test edx edx +
jz loc_470E18  +
movzx edx byte ptr [edx] +
test dl dl +
jz loc_470E18  +
sub edx 41h +
cmp dl 39h +
ja loc_470E18  +
movzx edx dl +
mov esi eax +
jmp ds:off_4992EC[edx*4]  +
xor eax eax +
lea esi [esi+0] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
movzx eax byte ptr [ebx+1] +
cmp al 69h +
jz loc_4712BC  +
cmp al 6Bh +
jnz loc_470E18  +
mov eax esi +
mov edx offset aUcent +
call sub_470200  +
lea eax [ebx+2] +
jmp loc_470E20  +
add ebx 1 +
mov edx offset aImmutable +
mov eax esi +
call sub_470200  +
mov edx ebx +
mov eax esi +
call sub_470DF0  +
mov edx offset asc_499067 +
mov ebx eax +
mov eax esi +
call sub_470200  +
mov eax ebx +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add ebx 1 +
mov edx offset aConst_1 +
jmp loc_470E58  +
mov edx offset aDchar +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aVoid_0 +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aWchar +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aUshort +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aShort_0 +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aCdouble +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aCfloat +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aIdouble +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aIfloat +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aNone +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aUlong +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aLong_0 +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aUint +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aIreal +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aInt_0 +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aUbyte +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aByte +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aFloat_0 +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aReal +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aDouble_0 +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aCreal +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aBool_0 +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
mov edx offset aChar_0 +
call sub_470200  +
lea eax [ebx+1] +
jmp loc_470E20  +
lea edx [ebx+1] +
call sub_470DF0  +
mov edx offset asc_49923B +
mov ebx eax +
mov eax esi +
call sub_470200  +
mov eax ebx +
jmp loc_470E20  +
add ebx 1 +
mov edx offset aShared +
jmp loc_470E58  +
movzx edx byte ptr [ebx+1] +
cmp dl 67h +
jz loc_47130C  +
xor eax eax +
cmp dl 68h +
jnz loc_470E20  +
add ebx 2 +
mov edx offset a__vector_0 +
jmp loc_470E58  +
lea edx [ebx+1] +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] 0 +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_18] 0 +
call sub_470DF0  +
mov ebx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
cmp ebx ecx +
jz loc_4712F0  +
sub ecx ebx +
mov edx eax +
mov eax esi +
mov edi ecx +
call sub_470DF0  +
mov edx offset asc_49905C +
mov ebx eax +
mov eax esi +
call sub_470200  +
test edi edi +
mov edx [esp+2Ch+var_18] +
jz loc_4710F5  +
mov ecx edi +
mov eax esi +
call sub_470420  +
mov edx offset asc_499063 +
mov eax esi +
call sub_470200  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jz loc_470E76  +
mov [esp+2Ch+var_2C] edx +
call free  +
mov eax ebx +
jmp loc_470E78  +
lea edx [ebx+1] +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_10] 0 +
mov [esp+2Ch+var_14] 0 +
mov [esp+2Ch+var_18] 0 +
call sub_470D50  +
mov ebx [esp+2Ch+var_18] +
mov ecx [esp+2Ch+var_14] +
cmp ebx ecx +
jz loc_4712D0  +
sub ecx ebx +
mov edx eax +
mov eax esi +
mov edi ecx +
call sub_471490  +
mov edx offset aDelegate +
mov ebx eax +
mov eax esi +
call sub_470200  +
test edi edi +
mov edx [esp+2Ch+var_18] +
jz loc_471184  +
mov ecx edi +
mov eax esi +
call sub_470420  +
mov edx [esp+2Ch+var_18] +
test edx edx +
jnz loc_47110D  +
mov eax ebx +
jmp loc_470E78  +
lea edx [ebx+1] +
mov ecx 2 +
call sub_471AE0  +
jmp loc_470E20  +
add ebx 1 +
lea eax [esp+2Ch+var_18] +
mov [esp+2Ch+var_2C] ebx +
mov [esp+2Ch+var_24] 0Ah +
mov [esp+2Ch+var_28] eax +
call strtol  +
mov edi [esp+2Ch+var_18] +
test edi edi +
mov ebx eax +
jz loc_470E18  +
test eax eax +
js loc_470E18  +
mov edx offset aTuple +
mov eax esi +
call sub_470200  +
jmp loc_4711FC  +
mov edx edi +
mov eax esi +
call sub_470DF0  +
test ebx ebx +
mov edi eax +
jz loc_4711FC  +
mov edx offset asc_499060 +
mov eax esi +
call sub_470200  +
sub ebx 1 +
cmp ebx 0FFFFFFFFh +
jnz loc_4711E1  +
mov eax esi +
mov edx offset asc_499067 +
call sub_470200  +
mov eax edi +
jmp loc_470E20  +
lea edx [ebx+1] +
call sub_470DF0  +
mov edx offset asc_499238 +
mov ebx eax +
mov eax esi +
call sub_470200  +
mov eax ebx +
jmp loc_470E20  +
movzx eax byte ptr [ebx+1] +
lea edi [ebx+1] +
mov edx edi +
test ds:byte_495EE0[eax+eax] 4 +
jz loc_471319  +
nop   +
lea esi [esi+0] +
mov ebp edx +
add edx 1 +
movzx eax byte ptr [edx] +
sub ebp ebx +
test ds:byte_495EE0[eax+eax] 4 +
jnz loc_471250  +
mov eax esi +
call sub_470DF0  +
mov edx offset asc_49905C +
mov ebx eax +
mov eax esi +
call sub_470200  +
test ebp ebp +
jz loc_471288  +
mov ecx ebp +
mov edx edi +
mov eax esi +
call sub_470420  +
mov eax esi +
mov edx offset asc_499063 +
call sub_470200  +
mov eax ebx +
jmp loc_470E20  +
mov edx ebx +
call sub_471490  +
mov edx offset aFunction +
mov ebx eax +
mov eax esi +
call sub_470200  +
mov eax ebx +
jmp loc_470E20  +
mov eax esi +
mov edx offset aCent +
call sub_470200  +
lea eax [ebx+2] +
jmp loc_470E20  +
mov edx eax +
mov eax esi +
call sub_471490  +
mov edx offset aDelegate +
mov ebx eax +
mov eax esi +
call sub_470200  +
mov edx [esp+2Ch+var_18] +
jmp loc_471184  +
mov edx eax +
mov eax esi +
call sub_470DF0  +
mov edx offset asc_49905C +
mov ebx eax +
mov eax esi +
call sub_470200  +
jmp loc_4710F5  +
add ebx 2 +
mov edx offset aInout_0 +
jmp loc_470E58  +
mov eax esi +
call sub_470DF0  +
mov edx offset asc_49905C +
mov ebx eax +
mov eax esi +
call sub_470200  +
jmp loc_471288  +
***
push esi  +
push ebx  +
mov ebx edx +
sub esp 0Ch +
test edx edx +
jz loc_471480  +
movzx edx byte ptr [edx] +
test dl dl +
jz loc_47141C  +
mov esi eax +
xor edi edi +
cmp dl 59h +
jz loc_4713D2  +
cmp dl 5Ah +
jz loc_4713C7  +
cmp dl 58h +
jz loc_4713B0  +
test edi edi +
jnz loc_471420  +
movzx eax byte ptr [ebx] +
cmp al 4Dh +
jz loc_471462  +
cmp al 4Eh +
jz loc_471431  +
cmp al 4Bh +
jz loc_4713F0  +
cmp al 4Ch +
jz loc_471451  +
cmp al 4Ah +
jnz loc_4713FF  +
mov edx offset aOut +
mov eax esi +
add ebx 1 +
call sub_470200  +
jmp loc_4713FF  +
mov eax esi +
mov edx offset unk_4993D4 +
call sub_470200  +
lea eax [ebx+1] +
add esp 0Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 0Ch +
lea eax [ebx+1] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
mov edx offset a____1 +
call sub_470200  +
add esp 0Ch +
lea eax [ebx+1] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov edx offset aRef +
mov eax esi +
add ebx 1 +
call sub_470200  +
mov edx ebx +
mov eax esi +
call sub_470DF0  +
test eax eax +
mov ebx eax +
jz loc_471480  +
movzx edx byte ptr [eax] +
add edi 1 +
test dl dl +
jnz loc_471360  +
mov eax ebx +
jmp loc_4713BF  +
mov edx offset asc_499060 +
mov eax esi +
call sub_470200  +
jmp loc_471377  +
cmp byte ptr [ebx+1] 6Bh +
jnz loc_4713FF  +
mov eax esi +
mov edx offset aReturn +
lea ebp [ebx+2] +
call sub_470200  +
movzx eax byte ptr [ebx+2] +
mov ebx ebp +
jmp loc_47138A  +
mov edx offset aLazy +
mov eax esi +
add ebx 1 +
call sub_470200  +
jmp loc_4713FF  +
mov eax esi +
mov edx offset aScope +
lea ebp [ebx+1] +
call sub_470200  +
movzx eax byte ptr [ebx+1] +
mov ebx ebp +
jmp loc_471382  +
xor eax eax +
jmp loc_4713BF  +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 4Ch +
test edx edx +
jz loc_4715DC  +
cmp byte ptr [edx] 0 +
jz loc_4715DC  +
mov esi eax +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_30] 0 +
mov [esp+4Ch+var_1C] 0 +
mov [esp+4Ch+var_20] 0 +
mov [esp+4Ch+var_24] 0 +
mov [esp+4Ch+var_10] 0 +
mov [esp+4Ch+var_14] 0 +
mov [esp+4Ch+var_18] 0 +
call sub_470240  +
mov edx eax +
lea eax [esp+4Ch+var_30] +
call sub_4702D0  +
mov ecx [esp+4Ch+var_2C] +
mov ebp [esp+4Ch+var_30] +
mov edi ecx +
sub edi ebp +
cmp ebp ecx +
mov edx eax +
cmovz edi ebx +
lea eax [esp+4Ch+var_24] +
call sub_471340  +
mov ecx [esp+4Ch+var_20] +
mov ebp [esp+4Ch+var_24] +
mov edx ecx +
sub edx ebp +
cmp ebp ecx +
cmovnz ebx edx +
mov edx eax +
lea eax [esp+4Ch+var_18] +
mov ebp ebx +
call sub_470DF0  +
mov edx [esp+4Ch+var_18] +
mov ecx [esp+4Ch+var_14] +
cmp edx ecx +
mov ebx eax +
jz loc_471554  +
sub ecx edx +
jnz loc_4715E6  +
mov edx offset asc_499065 +
mov eax esi +
call sub_470200  +
test ebp ebp +
mov edx [esp+4Ch+var_24] +
jnz loc_471604  +
mov edx offset asc_4993F0 +
mov eax esi +
call sub_470200  +
test edi edi +
mov edx [esp+4Ch+var_30] +
jnz loc_4715F2  +
test edx edx +
jz loc_4715A4  +
mov [esp+4Ch+var_4C] edx +
call free  +
mov [esp+4Ch+var_2C] 0 +
mov [esp+4Ch+var_28] 0 +
mov [esp+4Ch+var_30] 0 +
mov eax [esp+4Ch+var_24] +
test eax eax +
jz loc_4715CC  +
mov [esp+4Ch+var_4C] eax +
call free  +
mov [esp+4Ch+var_20] 0 +
mov [esp+4Ch+var_1C] 0 +
mov [esp+4Ch+var_24] 0 +
mov eax [esp+4Ch+var_18] +
test eax eax +
jz loc_4715DC  +
mov [esp+4Ch+var_4C] eax +
call free  +
add esp 4Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
call sub_470420  +
jmp loc_471554  +
mov ecx edi +
mov eax esi +
call sub_470420  +
mov edx [esp+4Ch+var_30] +
jmp loc_471580  +
mov ecx ebp +
mov eax esi +
call sub_470420  +
jmp loc_47156C  +
***
push esi  +
push ebx  +
sub esp 3Ch +
test edx edx +
mov [esp+3Ch+var_28] eax +
jz loc_471734  +
cmp byte ptr [edx] 0 +
jz loc_471734  +
lea eax [esp+3Ch+var_1C] +
mov esi ecx +
mov [esp+3Ch+var_34] 0Ah +
mov [esp+3Ch+var_38] eax +
mov [esp+3Ch+var_3C] edx +
call strtol  +
mov ebx [esp+3Ch+var_1C] +
test ebx ebx +
mov [esp+3Ch+var_24] eax +
jz loc_471734  +
test eax eax +
jle loc_471734  +
cmp esi 4 +
jz loc_471757  +
mov [esp+3Ch+var_3C] ebx +
call strlen  +
mov edi [esp+3Ch+var_24] +
cmp eax edi +
jb loc_471734  +
cmp edi 4 +
jle loc_471740  +
mov edi offset a__t_0 +
mov ecx 3 +
mov esi ebx +
cmps   +
jnz loc_471740  +
movzx eax byte ptr [ebx+3] +
movzx edx al +
test ds:byte_495EE0[edx+edx] 4 +
jz loc_471734  +
cmp al 30h +
jz loc_471734  +
mov esi [esp+3Ch+var_28] +
lea edx [ebx+3] +
mov ecx 3 +
mov eax esi +
call sub_471620  +
mov edx offset asc_4993FA +
mov edi eax +
mov eax esi +
call sub_470200  +
test edi edi +
jz loc_471726  +
movzx eax byte ptr [edi] +
test al al +
jz loc_4719B9  +
xor esi esi +
cmp al 5Ah +
jz loc_471AD3  +
test esi esi +
jnz loc_471967  +
movzx eax byte ptr [edi] +
cmp al 48h +
jz loc_471980  +
cmp al 54h +
jz loc_471A50  +
cmp al 56h +
jz loc_4719E0  +
cmp al 53h +
lea esi [esi+0] +
jz loc_471990  +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_499067 +
call sub_470200  +
xor esi esi +
add esp 3Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [esp+3Ch+var_24] +
sub eax 6 +
cmp eax 6 +
ja loc_471850  +
jmp ds:off_4994A4[eax*4]  +
mov eax [esp+3Ch+var_28] +
xor edi edi +
mov ebp [esp+3Ch+var_24] +
mov edx [eax] +
mov eax [eax+4] +
mov ecx eax +
sub ecx edx +
cmp edx eax +
cmovz ecx edi +
mov edx ebx +
mov [esp+3Ch+var_20] ecx +
jmp loc_4717EA  +
mov [esp+3Ch+var_1C] 0 +
movzx eax byte ptr [edx] +
mov ebp [esp+3Ch+var_24] +
test ds:byte_495EE0[eax+eax] 4 +
jnz loc_4717FD  +
mov edi offset a_d +
mov esi edx +
mov ecx 2 +
cmps   +
jz loc_471820  +
mov eax edx +
sub eax ebx +
cmp eax ebp +
jz loc_471960  +
mov eax 66666667h +
imul  ebp +
mov eax [esp+3Ch+var_28] +
sar ebp 1Fh +
sar edx 2 +
mov ecx [eax+4] +
sub edx ebp +
mov ebp edx +
mov edx [eax] +
xor eax eax +
mov esi ecx +
sub esi edx +
cmp edx ecx +
cmovnz eax esi +
cmp [esp+3Ch+var_20] eax +
js loc_471813  +
lea edx [ebx-1] +
mov ebx [esp+3Ch+var_1C] +
test ebx ebx +
jz loc_471734  +
test ebp ebp +
jz loc_471777  +
movzx eax byte ptr [edx] +
mov ebx edx +
test ds:byte_495EE0[eax+eax] 4 +
jz loc_471790  +
mov eax [esp+3Ch+var_28] +
mov ecx 3 +
call sub_471AE0  +
mov edx eax +
test edx edx +
jnz loc_4717A4  +
jmp loc_4717B0  +
mov eax [esp+3Ch+var_28] +
add edx [esp+3Ch+var_20] +
mov [eax+4] edx +
jmp loc_4717DB  +
mov eax [esp+3Ch+var_28] +
add edx 2 +
mov ecx 1 +
call sub_471AE0  +
mov edx eax +
jmp loc_47180D  +
mov edi offset a__postblitmfz +
mov ecx 0Dh +
mov esi ebx +
cmps   +
jz loc_471A7C  +
lea esi [esi+0] +
mov esi [esp+3Ch+var_24] +
mov edx ebx +
mov eax [esp+3Ch+var_28] +
mov ecx esi +
add esi ebx +
call sub_470420  +
jmp loc_471736  +
mov edi offset a__classz +
mov ecx 8 +
mov esi ebx +
cmps   +
jnz loc_471850  +
mov edx offset aClassinfoFor +
jmp loc_4718F0  +
mov ecx [esp+3Ch+var_24] +
mov eax 7 +
mov edi offset a__ctor +
mov esi ebx +
cmp ecx 7 +
cmovg ecx eax +
cmp ecx ecx +
cmps   +
jz loc_471A63  +
mov edi [esp+3Ch+var_24] +
mov esi ebx +
cmp edi 7 +
cmovle eax edi +
mov edi offset a__dtor +
mov ecx eax +
cmp eax eax +
cmps   +
jz loc_471A97  +
mov edi offset a__initz +
mov ecx 7 +
mov esi ebx +
cmps   +
jz loc_471ABA  +
mov edi offset a__vtblz +
mov ecx 7 +
mov esi ebx +
cmps   +
jnz loc_471850  +
mov edx offset aVtableFor_0 +
lea esi [esi+0] +
mov edi [esp+3Ch+var_28] +
mov eax edi +
call sub_4703B0  +
mov eax [edi] +
mov edx [edi+4] +
cmp eax edx +
jz loc_471AB0  +
sub edx eax +
sub edx 1 +
mov edi [esp+3Ch+var_28] +
add eax edx +
mov esi [esp+3Ch+var_24] +
mov [edi+4] eax +
add esi ebx +
jmp loc_471736  +
mov edi offset a__moduleinfoz +
mov ecx 0Dh +
mov esi ebx +
cmps   +
jnz loc_471850  +
mov edx offset aModuleinfoFor +
jmp loc_4718F0  +
mov edi offset a__interfacez +
mov ecx 0Ch +
mov esi ebx +
cmps   +
jnz loc_471850  +
mov edx offset aInterfaceFor +
jmp loc_4718F0  +
mov esi edx +
jmp loc_471736  +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_499060 +
call sub_470200  +
jmp loc_4716FF  +
movzx eax byte ptr [edi+1] +
add edi 1 +
jmp loc_47170A  +
mov eax [esp+3Ch+var_28] +
lea edx [edi+1] +
mov ecx 4 +
call sub_471AE0  +
mov edi eax +
test edi edi +
jz loc_471726  +
movzx eax byte ptr [edi] +
add esi 1 +
test al al +
jnz loc_4716EF  +
mov esi edi +
mov eax [esp+3Ch+var_28] +
mov edx offset asc_499067 +
call sub_470200  +
mov eax esi +
sub eax ebx +
cmp [esp+3Ch+var_24] eax +
mov eax 0 +
cmovnz esi eax +
jmp loc_471736  +
lea edx [edi+1] +
movsx ebp byte ptr [edi+1] +
lea eax [esp+3Ch+var_18] +
mov [esp+3Ch+var_10] 0 +
mov [esp+3Ch+var_14] 0 +
mov [esp+3Ch+var_18] 0 +
call sub_470DF0  +
mov edx 1 +
mov edi eax +
lea eax [esp+3Ch+var_18] +
call sub_470190  +
mov eax [esp+3Ch+var_14] +
mov edx edi +
mov byte ptr [eax] 0 +
mov eax [esp+3Ch+var_28] +
mov ecx [esp+3Ch+var_18] +
mov [esp+3Ch+var_3C] ebp +
call sub_4708A0  +
mov edi eax +
mov eax [esp+3Ch+var_18] +
test eax eax +
jz loc_4719A3  +
mov [esp+3Ch+var_3C] eax +
call free  +
jmp loc_4719A3  +
mov eax [esp+3Ch+var_28] +
lea edx [edi+1] +
call sub_470DF0  +
mov edi eax +
jmp loc_4719A3  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThis_0 +
call sub_470200  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_471736  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThisThis +
call sub_470200  +
mov eax [esp+3Ch+var_24] +
lea esi [ebx+eax+3] +
jmp loc_471736  +
mov eax [esp+3Ch+var_28] +
mov edx offset aThis_1 +
call sub_470200  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_471736  +
mov edx 0FFFFFFFFh +
jmp loc_47190D  +
mov eax [esp+3Ch+var_28] +
mov edx offset aInit +
call sub_470200  +
mov esi [esp+3Ch+var_24] +
add esi ebx +
jmp loc_471736  +
lea esi [edi+1] +
jmp loc_4719BB  +
***
push edi  +
mov edi 1 +
push esi  +
mov esi edi +
push ebx  +
mov ebx edx +
sub esp 3Ch +
mov [esp+48h+var_3C] ecx +
jmp loc_471B44  +
movzx eax byte ptr [eax] +
cmp al 4Dh +
mov ecx eax +
jz loc_471D32  +
sub ecx 46h +
cmp cl 11h +
ja loc_471B20  +
mov edx 1 +
shl edx cl +
and edx 39001h +
jnz loc_471BC0  +
movzx edx al +
test ds:byte_495EE0[edx+edx] 4 +
jz loc_471CF3  +
test esi esi +
jz loc_471B41  +
mov edx offset unk_4994C0 +
mov eax ebp +
call sub_470200  +
add esi 1 +
mov ecx [esp+48h+var_3C] +
mov edx ebx +
mov eax ebp +
call sub_471620  +
test eax eax +
mov ebx eax +
jnz loc_471AF8  +
cmp [esp+48h+var_3C] 1 +
jbe loc_471B65  +
xor edx edx +
jmp loc_471D00  +
xor ebx ebx +
mov eax [ebp+4] +
xor edi edi +
mov edx [ebp+0] +
mov esi eax +
sub esi edx +
cmp edx eax +
mov edx ebx +
mov eax ebp +
cmovz esi edi +
call sub_470DF0  +
mov ebx [ebp+4] +
mov edx [ebp+0] +
mov ecx ebx +
sub ecx edx +
cmp edx ebx +
cmovz ecx edi +
cmp esi ecx +
js loc_471DB0  +
mov edx eax +
mov eax [esp+48h+var_3C] +
test eax eax +
jnz loc_471D00  +
test edx edx +
jz loc_471B5E  +
cmp byte ptr [edx] 0 +
jnz loc_471B5E  +
add esp 3Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp al 4Dh +
jnz loc_471BCB  +
movzx eax byte ptr [ebx+1] +
add ebx 1 +
cmp al 56h +
jz loc_471D10  +
mov [esp+48h+var_29] 0 +
mov [esp+48h+var_34] 0 +
mov [esp+48h+var_30] 0 +
mov edx ebx +
xor edi edi +
lea eax [esp+48h+var_24] +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_24] 0 +
call sub_470D50  +
mov edx [ebp+4] +
mov ecx [ebp+0] +
mov ebx edx +
sub ebx ecx +
cmp ecx edx +
mov edx eax +
mov eax ebp +
cmovz ebx edi +
call sub_470240  +
mov edx eax +
mov eax ebp +
call sub_4702D0  +
mov ecx [ebp+0] +
mov [esp+48h+var_38] eax +
mov eax [ebp+4] +
mov edx eax +
sub edx ecx +
cmp ecx eax +
cmovnz edi edx +
cmp ebx edi +
js loc_471D68  +
mov edx offset asc_499065 +
mov eax ebp +
call sub_470200  +
mov edx [esp+48h+var_38] +
mov eax ebp +
call sub_471340  +
mov edx offset asc_499067 +
mov ebx eax +
mov eax ebp +
call sub_470200  +
mov edx [esp+48h+var_24] +
mov ecx [esp+48h+var_20] +
cmp edx ecx +
jz loc_471C89  +
sub ecx edx +
jz loc_471C89  +
mov eax ebp +
call sub_470420  +
mov edx [esp+48h+var_24] +
test edx edx +
jz loc_471CAD  +
mov [esp+48h+var_48] edx +
call free  +
mov [esp+48h+var_20] 0 +
mov [esp+48h+var_1C] 0 +
mov [esp+48h+var_24] 0 +
test ebx ebx +
jnz loc_471CD7  +
cmp [esp+48h+var_29] 0 +
jz loc_471CD7  +
mov ecx [ebp+4] +
xor eax eax +
mov edx [ebp+0] +
mov ebx ecx +
sub ebx edx +
cmp edx ecx +
cmovnz eax ebx +
mov ebx [esp+48h+var_30] +
cmp [esp+48h+var_34] eax +
js loc_471D94  +
test ebx ebx +
jz loc_471B57  +
movzx eax byte ptr [ebx] +
movzx edx al +
test ds:byte_495EE0[edx+edx] 4 +
jnz loc_471B31  +
cmp [esp+48h+var_3C] 1 +
mov edx ebx +
jbe loc_471DA0  +
add esp 3Ch +
mov eax edx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax [ebp+0] +
mov edx [ebp+4] +
cmp eax edx +
jz loc_471DC0  +
sub edx eax +
mov [esp+48h+var_34] edx +
setnz [esp+48h+var_29]  +
mov [esp+48h+var_30] ebx +
jmp loc_471BE8  +
lea edi [ebx+1] +
mov [esp+48h+var_38] edi +
mov ecx edi +
xor edi edi +
movzx edx byte ptr [ecx] +
cmp dl 4Fh +
jz loc_471D60  +
jg loc_471D72  +
cmp dl 4Eh +
jnz loc_471D90  +
cmp byte ptr [ecx+1] 67h +
jnz loc_471D90  +
add ecx 2 +
movzx edx byte ptr [ecx] +
add edi 2 +
cmp dl 4Fh +
jnz loc_471D45  +
add ecx 1 +
add edi 1 +
jmp loc_471D3D  +
add ecx ebx +
mov [ebp+4] ecx +
jmp loc_471C49  +
sub edx 78h +
cmp dl 1 +
ja loc_471D90  +
mov edx 1 +
mov ecx [esp+48h+var_38] +
add ecx edi +
movzx ecx byte ptr [ecx+edx] +
jmp loc_471B05  +
xor edx edx +
jmp loc_471D7F  +
add edx [esp+48h+var_34] +
mov [ebp+4] edx +
jmp loc_471CD7  +
cmp al 5Ah +
jnz loc_471B67  +
lea eax [ebx+1] +
jmp loc_471B98  +
add edx esi +
mov [ebp+4] edx +
jmp loc_471B98  +
mov [esp+48h+var_30] ebx +
mov [esp+48h+var_29] 0 +
mov [esp+48h+var_34] 0 +
jmp loc_471BE8  +
***
sub esp 24h +
mov edx [esp+24h+arg_0] +
test edx edx +
jz loc_471E81  +
cmp byte ptr [edx] 0 +
jz loc_471E81  +
mov edi offset a_d +
mov ecx 2 +
mov esi edx +
cmps   +
jnz loc_471E81  +
mov [esp+24h+var_8] 0 +
mov edi offset a_dmain +
mov ecx 7 +
mov [esp+24h+var_C] 0 +
mov esi edx +
mov [esp+24h+var_10] 0 +
cmps   +
jz loc_471E90  +
lea edi [esp+24h+var_10] +
add edx 2 +
xor ecx ecx +
mov eax edi +
call sub_471AE0  +
mov edx [esp+24h+var_10] +
test eax eax +
jz loc_471E75  +
mov ecx [esp+24h+var_C] +
cmp edx ecx +
jz loc_471E81  +
sub ecx edx +
test ecx ecx +
jle loc_471E81  +
mov eax edi +
mov edx 1 +
call sub_470190  +
mov eax [esp+24h+var_C] +
mov byte ptr [eax] 0 +
mov eax [esp+24h+var_10] +
add esp 24h +
pop esi  +
pop edi  +
retn   +
test edx edx +
jz loc_471E4A  +
mov [esp+24h+var_24] edx +
call free  +
add esp 24h +
xor eax eax +
pop esi  +
pop edi  +
retn   +
lea edi [esp+24h+var_10] +
mov edx offset aDMain +
mov eax edi +
call sub_470200  +
mov edx [esp+24h+var_10] +
mov ecx [esp+24h+var_C] +
jmp loc_471E4E  +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_4] +
test eax eax +
jz loc_471ED0  +
cmp eax 3 +
jz loc_471ED0  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
mov edx [esp+1Ch+arg_8] +
mov [esp+1Ch+var_18] eax +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_1C] eax +
call sub_472BD0  +
mov eax 1 +
add esp 1Ch +
retn 0Ch  +
***
cmp dword_476870 2 +
mov eax [esp+18h+arg_4] +
jz loc_471F1B  +
mov dword_476870 2 +
cmp eax 2 +
jz loc_471F31  +
cmp eax 1 +
jz loc_471F60  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov ebx offset unk_4A1030 +
cmp ebx offset unk_4A1030 +
jz loc_471F25  +
nop   +
mov eax [ebx] +
test eax eax +
jz loc_471F48  +
call eax  +
add ebx 4 +
cmp ebx offset unk_4A1030 +
jnz loc_471F40  +
add esp 18h +
mov eax 1 +
pop ebx  +
retn 0Ch  +
mov eax [esp+18h+arg_8] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_10] eax +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_18] eax +
call sub_472BD0  +
jmp loc_471F25  +
***
xor eax eax +
retn   +
***
mov eax ds:__lconv_init +
jmp eax  +
***
retn   +
***
retn   +
***
mov eax ds:dword_49F998 +
mov [esp+28h+var_28] eax +
call sub_471FA0  +
cmp eax 0FFFFFFFFh +
mov [esp+28h+var_10] eax +
jz loc_472060  +
mov [esp+28h+var_28] 8 +
call _lock  +
mov eax ds:dword_49F998 +
mov [esp+28h+var_28] eax +
call sub_471FA0  +
mov [esp+28h+var_10] eax +
mov eax ds:dword_49F994 +
mov [esp+28h+var_28] eax +
call sub_471FA0  +
mov [esp+28h+var_C] eax +
lea eax [esp+28h+var_C] +
mov [esp+28h+var_20] eax +
lea eax [esp+28h+var_10] +
mov [esp+28h+var_24] eax +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call __dllonexit  +
mov ebx eax +
mov eax [esp+28h+var_10] +
mov [esp+28h+var_28] eax +
call sub_471FB0  +
mov ds:dword_49F998 eax +
mov eax [esp+28h+var_C] +
mov [esp+28h+var_28] eax +
call sub_471FB0  +
mov [esp+28h+var_28] 8 +
mov ds:dword_49F994 eax +
call _unlock  +
add esp 28h +
mov eax ebx +
pop ebx  +
retn   +
mov eax [esp+28h+arg_0] +
mov [esp+28h+var_28] eax +
call ds:_onexit  +
add esp 28h +
pop ebx  +
retn   +
***
sub esp 1Ch +
mov eax [esp+1Ch+arg_0] +
mov [esp+1Ch+var_1C] eax +
call sub_471FC0  +
test eax eax +
setz al  +
add esp 1Ch +
movzx eax al +
neg eax  +
retn   +
***
push esi  +
push ebx  +
sub esp 10h +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
mov eax [eax] +
cmp eax 0C0000091h +
ja loc_4720F8  +
cmp eax 0C000008Dh +
jnb loc_472160  +
cmp eax 0C0000005h +
jnz loc_472167  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 0Bh +
call signal  +
cmp eax 1 +
jz loc_472196  +
test eax eax +
jz loc_47210D  +
mov [esp+18h+var_18] 0Bh +
call eax  +
jmp loc_47214D  +
cmp eax 0C0000094h +
jz loc_472121  +
cmp eax 0C0000096h +
jz loc_47216E  +
cmp eax 0C0000093h +
jz loc_472160  +
mov eax ds:dword_49F5D4 +
test eax eax +
jz loc_472152  +
mov [ebp+arg_0] ebx +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
jmp eax  +
xor esi esi +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 8 +
call signal  +
cmp eax 1 +
jz loc_4721C6  +
test eax eax +
jz loc_47210D  +
mov [esp+18h+var_18] 8 +
call eax  +
mov eax 0FFFFFFFFh +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
mov esi 1 +
jmp loc_472123  +
cmp eax 0C000001Dh +
jnz loc_47210D  +
mov [esp+18h+var_14] 0 +
mov [esp+18h+var_18] 4 +
call signal  +
cmp eax 1 +
jz loc_4721B0  +
test eax eax +
jz loc_47210D  +
mov [esp+18h+var_18] 4 +
call eax  +
jmp loc_47214D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 0Bh +
call signal  +
jmp loc_47214D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 4 +
call signal  +
jmp loc_47214D  +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] 8 +
call signal  +
test esi esi +
jz loc_47214D  +
call sub_472830  +
jmp loc_47214D  +
***
retn   +
***
sub esp 3Ch +
mov eax ds:dword_49F5D8 +
fld  qword ptr [esp+48h] +
fld  qword ptr [esp+50h] +
fld  qword ptr [esp+58h] +
test eax eax +
jz loc_472241  +
fxch  st(2) +
mov edx [esp+40h] +
fstp  qword ptr [esp+18h] +
fstp  qword ptr [esp+20h] +
fstp  qword ptr [esp+28h] +
mov [esp+10h] edx +
mov edx [esp+44h] +
mov [esp+14h] edx +
lea edx [esp+10h] +
mov [esp] edx +
call eax  +
jmp loc_472247  +
fstp  st +
fstp  st +
fstp  st +
add esp 3Ch +
retn   +
***
mov eax [esp+arg_0] +
mov ds:dword_49F5D8 eax +
jmp loc_4746A8  +
***
sub esp 3Ch +
mov eax [esp+3Ch+arg_0] +
mov edx [eax] +
lea ecx [edx-1] +
mov edx offset aUnknownError +
cmp ecx 5 +
ja loc_47227D  +
mov edx ds:off_4995F0[ecx*4] +
fld  qword ptr [eax+18h] +
fld  qword ptr [eax+10h] +
fld  qword ptr [eax+8] +
fxch  st(2) +
mov eax [eax+4] +
fstp  [esp+3Ch+var_1C] +
fstp  [esp+3Ch+var_24] +
fstp  [esp+3Ch+var_2C] +
mov [esp+3Ch+var_34] edx +
mov [esp+3Ch+var_30] eax +
mov eax ds:_iob +
mov [esp+3Ch+var_38] offset a_matherrSInSGG +
add eax 40h +
mov [esp+3Ch+var_3C] eax +
call fprintf  +
xor eax eax +
add esp 3Ch +
retn   +
***
mov eax ds:_iob +
mov [esp+18h+var_10] 1Bh +
lea ebx [esp+18h+arg_4] +
mov [esp+18h+var_14] 1 +
mov [esp+18h+var_18] offset aMingwW64Runtim +
add eax 40h +
mov [esp+18h+var_C] eax +
call fwrite  +
mov eax [esp+18h+arg_0] +
mov [esp+18h+var_10] ebx +
mov [esp+18h+var_14] eax +
mov eax ds:_iob +
add eax 40h +
mov [esp+18h+var_18] eax +
call vfprintf  +
call abort  +
jmp sub_472320  +
***
push edi  +
mov eax ds:dword_49F5DC +
retn   +
***
call eax  +
mov eax off_47686C +
lea edx [eax+4] +
mov eax [eax+4] +
mov off_47686C edx +
test eax eax +
jnz loc_472850  +
add esp 0Ch +
retn   +
***
mov ebx ds:dword_475AC0 +
cmp ebx 0FFFFFFFFh +
jz loc_4728A3  +
test ebx ebx +
jz loc_472892  +
call ds:dword_475AC0[ebx*4]  +
sub ebx 1 +
lea esi [esi+0] +
jnz loc_472883  +
mov [esp+18h+var_18] offset dword_472840 +
call sub_472080  +
add esp 18h +
pop ebx  +
retn   +
xor ebx ebx +
jmp loc_4728A9  +
mov ebx eax +
lea eax [ebx+1] +
mov edx ds:dword_475AC0[eax*4] +
test edx edx +
jnz loc_4728A7  +
jmp loc_47287F  +
***
mov eax ds:dword_49F5E8 +
test eax eax +
jz loc_4728D0  +
retn   +
mov ds:dword_49F5E8 1 +
jmp sub_472870  +
***
push edi  +
push esi  +
push ebx  +
sub esp 2Ch +
mov eax dword_476880 +
mov [ebp+var_28] 0 +
mov [ebp+var_24] 0 +
cmp eax 0BB40E64Eh +
jz loc_472912  +
not eax  +
mov dword_476884 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea eax [ebp+var_28] +
mov [esp+38h+var_38] eax +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+var_28] +
mov edi [ebp+var_24] +
xor esi edi +
sub esp 4 +
call ds:GetCurrentProcessId  +
mov ebx eax +
call ds:GetCurrentThreadId  +
mov [ebp+var_2C] eax +
call ds:GetTickCount  +
mov [ebp+var_30] eax +
lea eax [ebp+var_20] +
mov [esp+38h+var_38] eax +
call ds:QueryPerformanceCounter  +
xor esi [ebp+var_20] +
xor esi [ebp+var_1C] +
xor esi ebx +
xor esi [ebp+var_2C] +
sub esp 4 +
xor esi [ebp+var_30] +
cmp esi 0BB40E64Eh +
jz loc_472980  +
mov eax esi +
not eax  +
mov dword_476880 esi +
mov dword_476884 eax +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax 44BF19B0h +
mov esi 0BB40E64Fh +
jmp loc_47296C  +
***
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov [esp+28h+var_28] offset unk_49F948 +
call ds:EnterCriticalSection  +
mov edi ds:dword_49F940 +
mov esi ds:GetLastError +
sub esp 4 +
test edi edi +
jz loc_472A79  +
lea esi [esi+0] +
mov eax [edi] +
mov [esp+28h+var_28] eax +
call ds:TlsGetValue  +
sub esp 4 +
mov ebx eax +
call esi  +
test eax eax +
jnz loc_472A72  +
test ebx ebx +
jz loc_472A72  +
mov eax [edi+4] +
mov [esp+28h+var_28] ebx +
call eax  +
mov edi [edi+8] +
test edi edi +
jnz loc_472A50  +
mov [esp+28h+var_28] offset unk_49F948 +
call ds:LeaveCriticalSection  +
sub esp 4 +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
jmp loc_472AA0  +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push ebx  +
sub esp 10h +
mov eax ds:dword_49F944 +
test eax eax +
jnz loc_472AC0  +
lea esp [ebp-8] +
mov eax esi +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov dword ptr [esp+4] 0Ch +
mov dword ptr [esp] 1 +
call calloc  +
test eax eax +
mov ebx eax +
jz loc_472B1C  +
mov eax [ebp+8] +
mov dword ptr [esp] offset unk_49F948 +
mov [ebx] eax +
mov eax [ebp+0Ch] +
mov [ebx+4] eax +
call ds:EnterCriticalSection  +
mov eax ds:dword_49F940 +
mov ds:dword_49F940 ebx +
mov [ebx+8] eax +
sub esp 4 +
mov dword ptr [esp] offset unk_49F948 +
call ds:LeaveCriticalSection  +
mov eax esi +
sub esp 4 +
lea esp [ebp-8] +
pop ebx  +
pop esi  +
pop ebp  +
retn   +
***
mov esi 0FFFFFFFFh +
jmp loc_472AB3  +
***
push ebp  +
mov ebp esp +
push ebx  +
sub esp 14h +
mov eax ds:dword_49F944 +
mov ebx [ebp+8] +
test eax eax +
jnz loc_472B50  +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov dword ptr [esp] offset unk_49F948 +
call ds:EnterCriticalSection  +
mov edx ds:dword_49F940 +
sub esp 4 +
test edx edx +
jz loc_472B81  +
mov eax [edx] +
cmp eax ebx +
jnz loc_472B7A  +
jmp loc_472BB8  +
mov ecx [eax] +
cmp ecx ebx +
jz loc_472B98  +
mov edx eax +
mov eax [edx+8] +
test eax eax +
jnz loc_472B72  +
mov dword ptr [esp] offset unk_49F948 +
call ds:LeaveCriticalSection  +
sub esp 4 +
xor eax eax +
mov ebx [ebp-4] +
leave   +
retn   +
***
mov ecx [eax+8] +
mov [edx+8] ecx +
mov [esp] eax +
call free  +
mov dword ptr [esp] offset unk_49F948 +
call ds:LeaveCriticalSection  +
sub esp 4 +
jmp loc_472B91  +
***
mov eax [edx+8] +
mov ds:dword_49F940 eax +
mov eax edx +
jmp loc_472B9E  +
***
sub esp 18h +
mov eax [ebp+arg_4] +
cmp eax 1 +
jz loc_472C24  +
jb loc_472BF5  +
cmp eax 3 +
jnz loc_472BEE  +
mov eax ds:dword_49F944 +
test eax eax +
jnz loc_472C52  +
mov eax 1 +
leave   +
retn   +
mov eax ds:dword_49F944 +
test eax eax +
jnz loc_472C60  +
mov eax ds:dword_49F944 +
cmp eax 1 +
jnz loc_472BEE  +
mov ds:dword_49F944 0 +
mov [esp+18h+var_18] offset unk_49F948 +
call ds:DeleteCriticalSection  +
sub esp 4 +
jmp loc_472BEE  +
mov eax ds:dword_49F944 +
test eax eax +
jz loc_472C40  +
mov ds:dword_49F944 1 +
mov eax 1 +
leave   +
retn   +
mov [esp+18h+var_18] offset unk_49F948 +
call ds:InitializeCriticalSection  +
sub esp 4 +
jmp loc_472C2D  +
call sub_472A20  +
jmp loc_472BEE  +
call sub_472A20  +
jmp loc_472BFE  +
***
add eax [eax+3Ch] +
cmp dword ptr [eax] 4550h +
jz loc_472C80  +
xor eax eax +
retn   +
cmp word ptr [eax+18h] 10Bh +
setz al  +
movzx eax al +
retn   +
***
mov eax [esp+4] +
cmp word ptr [eax] 5A4Dh +
jz loc_472CA0  +
xor eax eax +
retn   +
***
jmp sub_472C70  +
***
mov edx [esp+arg_0] +
mov ebx [esp+arg_4] +
add edx [edx+3Ch] +
movzx esi word ptr [edx+6] +
movzx eax word ptr [edx+14h] +
test esi esi +
lea eax [edx+eax+18h] +
jz loc_472CE8  +
xor edx edx +
nop   +
mov ecx [eax+0Ch] +
cmp ecx ebx +
ja loc_472CDE  +
add ecx [eax+8] +
cmp ebx ecx +
jb loc_472CEA  +
add edx 1 +
add eax 28h +
cmp edx esi +
jb loc_472CD0  +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
***
push ebp  +
push edi  +
push esi  +
xor esi esi +
push ebx  +
sub esp 1Ch +
mov edi [esp+30h] +
mov [esp] edi +
call strlen  +
cmp eax 8 +
ja loc_472D15  +
cmp word ptr ds:400000h 5A4Dh +
jz loc_472D20  +
add esp 1Ch +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
mov eax 400000h +
call sub_472C70  +
test eax eax +
jz loc_472D15  +
mov eax ds:40003Ch +
lea edx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
movzx ebp word ptr [edx+6] +
lea ebx [edx+eax+18h] +
test ebp ebp +
jnz loc_472D5A  +
jmp loc_472D15  +
***
add esi 1 +
add ebx 28h +
cmp esi ebp +
jnb loc_472D80  +
mov dword ptr [esp+8] 8 +
mov [esp+4] edi +
mov [esp] ebx +
call strncmp  +
test eax eax +
jnz loc_472D50  +
add esp 1Ch +
mov esi ebx +
mov eax esi +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
add esp 1Ch +
xor esi esi +
pop ebx  +
mov eax esi +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
jz loc_472DA8  +
add esp 8 +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_472C70  +
test eax eax +
jz loc_472DA1  +
mov eax [esp+8+arg_0] +
mov [esp+8+var_8] 400000h +
sub eax 400000h +
mov [esp+8+var_4] eax +
call sub_472CB0  +
add esp 8 +
mov ebx eax +
mov eax ebx +
pop ebx  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_472DF2  +
mov eax ebx +
pop ebx  +
retn   +
mov eax 400000h +
call sub_472C70  +
test eax eax +
jz loc_472DEE  +
mov eax ds:40003Ch +
movzx ebx word ptr [eax+400006h] +
mov eax ebx +
pop ebx  +
retn   +
***
push esi  +
xor esi esi +
cmp word ptr ds:400000h 5A4Dh +
push ebx  +
mov ebx [esp+0Ch] +
jz loc_472E28  +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov eax 400000h +
call sub_472C70  +
test eax eax +
jz loc_472E23  +
mov eax ds:40003Ch +
lea ecx [eax+400000h] +
movzx eax word ptr [eax+400014h] +
lea edx [ecx+eax+18h] +
movzx ecx word ptr [ecx+6] +
test ecx ecx +
jz loc_472E23  +
xor eax eax +
test byte ptr [edx+27h] 20h +
jz loc_472E63  +
test ebx ebx +
jz loc_472E74  +
sub ebx 1 +
add eax 1 +
add edx 28h +
cmp eax ecx +
jb loc_472E56  +
xor esi esi +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
mov esi edx +
mov eax esi +
pop ebx  +
pop esi  +
retn   +
***
cmp word ptr ds:400000h 5A4Dh +
jz loc_472E90  +
xor eax eax +
retn   +
mov eax 400000h +
call sub_472C70  +
test eax eax +
jz loc_472E8B  +
mov eax 400000h +
retn   +
***
xor eax eax +
cmp word ptr ds:400000h 5A4Dh +
jz loc_472EC0  +
retn   +
***
sub esp 8 +
mov eax 400000h +
call sub_472C70  +
test eax eax +
jz loc_472EF6  +
mov eax [esp+0Ch] +
mov dword ptr [esp] 400000h +
sub eax 400000h +
mov [esp+4] eax +
call sub_472CB0  +
test eax eax +
jz loc_472F00  +
mov eax [eax+24h] +
not eax  +
shr eax 1Fh +
add esp 8 +
retn   +
***
xor eax eax +
jmp loc_472EF6  +
***
push edi  +
xor edi edi +
push esi  +
push ebx  +
sub esp 8 +
cmp word ptr ds:400000h 5A4Dh +
mov ebx [esp+18h] +
jz loc_472F30  +
add esp 8 +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
mov eax 400000h +
call sub_472C70  +
test eax eax +
jz loc_472F27  +
mov eax ds:40003Ch +
mov esi [eax+400080h] +
test esi esi +
jz loc_472F27  +
mov [esp+4] esi +
mov dword ptr [esp] 400000h +
call sub_472CB0  +
test eax eax +
jz loc_472F27  +
add esi 400000h +
mov edx esi +
jnz loc_472F76  +
jmp loc_472F27  +
***
sub ebx 1 +
add edx 14h +
mov ecx [edx+4] +
test ecx ecx +
jnz loc_472F84  +
mov eax [edx+0Ch] +
test eax eax +
jz loc_472FA0  +
test ebx ebx +
jg loc_472F70  +
mov edi [edx+0Ch] +
add esp 8 +
pop ebx  +
pop esi  +
add edi 400000h +
mov eax edi +
pop edi  +
retn   +
***
add esp 8 +
xor edi edi +
mov eax edi +
pop ebx  +
pop esi  +
pop edi  +
retn   +
***
cmp eax 1000h +
lea ecx [esp+arg_0] +
jb loc_472FD2  +
sub ecx 1000h +
or dword ptr [ecx] 0 +
sub eax 1000h +
cmp eax 1000h +
ja loc_472FBD  +
sub ecx eax +
or dword ptr [ecx] 0 +
pop eax  +
pop ecx  +
retn   +
***
push esi  +
push ebx  +
sub esp 18h +
mov ebx [esp+18h+arg_4] +
mov esi [esp+18h+arg_C] +
mov ebp [esp+18h+arg_8] +
mov eax [esp+18h+arg_0] +
test ebx ebx +
mov edx ebx +
mov edi esi +
mov [esp+18h+var_18] 0 +
js loc_473090  +
test edi edi +
mov ecx ebp +
mov ebx esi +
js loc_4730AA  +
mov esi edx +
mov edx ebx +
test edx edx +
mov ebp eax +
mov edi ecx +
mov ebx eax +
jnz loc_473032  +
cmp ecx esi +
jbe loc_473054  +
mov edx esi +
xor esi esi +
div  ecx +
mov ebx eax +
jmp loc_47303A  +
cmp edx esi +
jbe loc_473073  +
xor esi esi +
xor ebx ebx +
mov ecx [esp+18h+var_18] +
mov eax ebx +
mov edx esi +
test ecx ecx +
jz loc_47304C  +
neg eax  +
adc edx 0 +
neg edx  +
add esp 18h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test ecx ecx +
jnz loc_473063  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ecx eax +
mov eax esi +
xor edx edx +
div  ecx +
mov esi eax +
mov eax ebx +
div  ecx +
mov ebx eax +
jmp loc_47303A  +
bsr ebx edx +
xor ebx 1Fh +
jnz loc_4730C0  +
cmp ecx eax +
jbe loc_473083  +
cmp edx esi +
jnb loc_473036  +
xor esi esi +
mov ebx 1 +
jmp loc_47303A  +
neg eax  +
mov ecx ebp +
adc edx 0 +
mov ebx esi +
neg edx  +
test edi edi +
mov [esp+18h+var_18] 0FFFFFFFFh +
jns loc_473016  +
neg ecx  +
adc ebx 0 +
not [esp+18h+var_18]  +
neg ebx  +
jmp loc_473016  +
mov ecx ebx +
mov eax 20h +
sub eax ebx +
shl edx cl +
mov ecx eax +
mov [esp+18h+var_10] edx +
mov edx edi +
shr edx cl +
mov ecx ebx +
mov [esp+18h+var_14] edx +
mov edx [esp+18h+var_10] +
shl edi cl +
or [esp+18h+var_14] edx +
mov ecx eax +
mov edx esi +
shr edx cl +
mov ecx ebx +
shl esi cl +
mov ecx eax +
mov [esp+18h+var_10] edx +
mov edx ebp +
shr edx cl +
mov eax edx +
or eax esi +
mov esi [esp+18h+var_10] +
mov edx esi +
div  [esp+18h+var_14] +
mov esi edx +
mov [esp+18h+var_14] eax +
mul  edi +
cmp esi edx +
jb loc_473130  +
mov ecx ebx +
shl ebp cl +
cmp ebp eax +
jnb loc_47311F  +
cmp esi edx +
jz loc_473130  +
mov ebx [esp+18h+var_14] +
xor esi esi +
jmp loc_47303A  +
mov ebx [esp+18h+var_14] +
xor esi esi +
sub ebx 1 +
jmp loc_47303A  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+1Ch+arg_4] +
mov eax [esp+1Ch+arg_C] +
mov esi [esp+1Ch+arg_8] +
mov edi [esp+1Ch+arg_0] +
test ebx ebx +
mov ebp ebx +
mov edx eax +
mov [esp+1Ch+var_1C] 0 +
js loc_473210  +
test edx edx +
mov ecx esi +
mov ebx eax +
js loc_473203  +
mov edx ebx +
mov eax edi +
test edx edx +
mov esi ebp +
mov [esp+1Ch+var_18] ecx +
mov ebx edi +
mov [esp+1Ch+var_14] ebp +
jnz loc_4731A0  +
cmp ecx ebp +
jbe loc_4731E6  +
mov edx ebp +
div  ecx +
mov esi edx +
mov eax esi +
xor edx edx +
jmp loc_4731A8  +
cmp edx ebp +
jbe loc_4731C0  +
mov eax edi +
mov edx ebp +
mov ecx [esp+1Ch+var_1C] +
test ecx ecx +
jz loc_4731B6  +
neg eax  +
adc edx 0 +
neg edx  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
bsr edi edx +
mov [esp+1Ch+var_10] edi +
xor [esp+1Ch+var_10] 1Fh +
jnz loc_473223  +
cmp ecx eax +
jbe loc_4732B0  +
cmp edx ebp +
jb loc_4732B0  +
mov eax ebx +
mov edx [esp+1Ch+var_14] +
jmp loc_4731A8  +
test ecx ecx +
jnz loc_4731F5  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ecx eax +
mov eax esi +
xor edx edx +
div  ecx +
mov eax ebx +
div  ecx +
mov esi edx +
jmp loc_473194  +
neg ecx  +
adc ebx 0 +
neg ebx  +
jmp loc_473176  +
neg edi  +
adc ebp 0 +
neg ebp  +
mov [esp+1Ch+var_1C] 0FFFFFFFFh +
jmp loc_47316A  +
mov ebp [esp+1Ch+var_10] +
mov edi 20h +
sub edi ebp +
mov ecx ebp +
mov ebp [esp+1Ch+var_18] +
shl edx cl +
mov ecx edi +
mov ebx ebp +
shr ebx cl +
mov [esp+1Ch+var_18] ebx +
mov ebx ebp +
mov ebp [esp+1Ch+var_10] +
or [esp+1Ch+var_18] edx +
mov edx esi +
mov ecx ebp +
shl ebx cl +
mov ecx edi +
shr edx cl +
mov ecx ebp +
shl esi cl +
mov ecx edi +
mov [esp+1Ch+var_14] ebx +
mov ebx edx +
mov edx eax +
shr edx cl +
mov ecx ebp +
or edx esi +
shl eax cl +
mov ebp eax +
mov eax edx +
mov edx ebx +
div  [esp+1Ch+var_18] +
mov ebx edx +
mul  [esp+1Ch+var_14] +
cmp ebx edx +
mov esi eax +
mov ecx edx +
jb loc_4732C4  +
cmp ebp eax +
jb loc_4732C0  +
mov eax ebp +
mov ebp [esp+1Ch+var_10] +
sub eax esi +
sbb ebx ecx +
mov ecx ebp +
shr eax cl +
mov ecx edi +
mov esi eax +
mov eax ebx +
shl eax cl +
mov ecx ebp +
or esi eax +
shr ebx cl +
mov eax esi +
mov edx ebx +
jmp loc_4731A8  +
mov eax esi +
sub ebx ecx +
sbb eax edx +
mov [esp+1Ch+var_14] eax +
jmp loc_4731DE  +
cmp ebx edx +
jnz loc_473286  +
mov ecx edx +
mov esi eax +
sub esi [esp+1Ch+var_14] +
sbb ecx [esp+1Ch+var_18] +
jmp loc_473286  +
***
push esi  +
push esi  +
push ebx  +
sub esp 14h +
mov esi [esp+14h+arg_C] +
mov edi [esp+14h+arg_0] +
mov ebp [esp+14h+arg_4] +
mov ecx [esp+14h+arg_8] +
test esi esi +
mov [esp+14h+var_14] edi +
mov eax ebp +
mov edx ecx +
jnz loc_473480  +
cmp ecx ebp +
ja loc_4734B2  +
test ecx ecx +
mov ebx ecx +
jnz loc_473467  +
mov eax 1 +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax ebp +
xor edx edx +
div  ebx +
mov ebp eax +
mov eax edi +
div  ebx +
mov edx ebp +
add esp 14h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
cmp esi ebp +
ja loc_4734A6  +
bsr ebx esi +
xor ebx 1Fh +
jnz loc_4734C2  +
cmp ecx [esp+14h+var_14] +
mov edx 0 +
jbe loc_473520  +
cmp esi ebp +
jb loc_473520  +
xor eax eax +
jmp loc_473475  +
add esp 14h +
xor edx edx +
pop ebx  +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn   +
add esp 14h +
mov eax edi +
pop ebx  +
mov edx ebp +
pop esi  +
div  ecx +
pop edi  +
xor edx edx +
pop ebp  +
retn   +
mov edi 20h +
mov ecx ebx +
sub edi ebx +
mov ebp edx +
shl esi cl +
mov ecx edi +
shr ebp cl +
mov ecx ebx +
shl edx cl +
or ebp esi +
mov [esp+14h+var_10] edx +
mov edx [esp+14h+var_14] +
mov ecx edi +
mov esi eax +
shr esi cl +
mov ecx ebx +
shl eax cl +
mov ecx edi +
shr edx cl +
mov edi edx +
mov edx esi +
or edi eax +
mov eax edi +
div  ebp +
mov esi edx +
mov edi eax +
mul  [esp+14h+var_10] +
cmp esi edx +
jb loc_473530  +
mov ebp [esp+14h+var_14] +
mov ecx ebx +
shl ebp cl +
cmp ebp eax +
jnb loc_473513  +
cmp esi edx +
jz loc_473530  +
mov eax edi +
xor edx edx +
jmp loc_473475  +
mov eax 1 +
jmp loc_473475  +
add esp 14h +
xor edx edx +
pop ebx  +
lea eax [edi-1] +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
push edi  +
push esi  +
push ebx  +
sub esp 23Ch +
mov ebx [ebp+arg_4] +
mov [esp+248h+var_248] 4000h +
mov esi [ebp+arg_0] +
call malloc  +
test ebx ebx +
mov edi eax +
jz loc_473650  +
cmp word ptr [ebx] 0 +
mov eax offset aUnknown +
cmovz ebx eax +
test esi esi +
jz loc_473643  +
cmp word ptr [esi] 0 +
mov eax offset a? +
cmovz esi eax +
lea edx [ebp+var_222] +
mov [esp+248h+var_244] edx +
mov [ebp+var_22C] edx +
mov [esp+248h+var_240] 104h +
mov [esp+248h+var_248] 0 +
call ds:GetModuleFileNameW  +
mov edx [ebp+var_22C] +
sub esp 0Ch +
test eax eax +
jz loc_473628  +
mov eax [ebp+arg_8] +
mov [esp+248h+var_230] esi +
mov [esp+248h+var_238] ebx +
mov [esp+248h+var_23C] edx +
mov [esp+248h+var_234] eax +
mov [esp+248h+var_240] offset aAssertionFaile +
mov [esp+248h+var_244] 1FFFh +
mov [esp+248h+var_248] edi +
call _snwprintf  +
mov eax ds:dword_49F5C4 +
test eax eax +
jz loc_473677  +
mov [esp+248h+var_23C] 12012h +
mov [esp+248h+var_240] offset aMingwRuntimeAs +
mov [esp+248h+var_244] edi +
mov [esp+248h+var_248] 0 +
call ds:MessageBoxW  +
sub esp 10h +
cmp eax 3 +
jz loc_47365F  +
cmp eax 5 +
jnz loc_47365A  +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov [esp+248h+var_248] edx +
mov [esp+248h+var_244] offset aUnknown +
call wcscpy  +
mov edx [ebp+var_22C] +
jmp loc_4735BA  +
mov esi offset a? +
jmp loc_473588  +
mov ebx offset aUnknown +
jmp loc_473574  +
call abort  +
mov [esp+248h+var_248] 16h +
call raise  +
mov [esp+248h+var_248] 3 +
call _exit  +
mov eax ds:_iob +
mov [esp+248h+var_240] edi +
mov [esp+248h+var_244] offset aWs +
add eax 40h +
mov [esp+248h+var_248] eax +
call fwprintf  +
call abort  +
nop   +
lea esi [esi+0] +
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+274h+var_244] +
mov eax [esp+274h+var_23C] +
mov edi [esp+274h+var_240] +
mov [esp+274h+var_274] ebp +
mov [esp+274h+var_268] eax +
call strlen  +
lea eax [eax+eax+2] +
mov [esp+274h+var_274] eax +
call malloc  +
mov [esp+274h+var_274] edi +
mov esi eax +
call strlen  +
lea eax [eax+eax+2] +
mov [esp+274h+var_274] eax +
call malloc  +
movzx ecx byte ptr [ebp+0] +
test cl cl +
jz loc_473762  +
xor ebx ebx +
xor edx edx +
lea esi [esi+0] +
add edx 1 +
mov [esi+ebx*2] cx +
movzx ecx byte ptr [ebp+edx+0] +
mov ebx edx +
test cl cl +
jnz loc_4736F0  +
add edx edx +
xor ebx ebx +
mov [esi+edx] bx +
movzx ecx byte ptr [edi] +
test cl cl +
jz loc_473766  +
xor ebx ebx +
xor edx edx +
add edx 1 +
mov [eax+ebx*2] cx +
movzx ecx byte ptr [edi+edx] +
mov ebx edx +
test cl cl +
jnz loc_473715  +
add edx edx +
mov edi [esp+274h+var_268] +
xor ecx ecx +
mov [eax+edx] cx +
mov [esp+274h+var_270] eax +
mov [esp+274h+var_274] esi +
mov [esp+274h+var_26C] edi +
mov [esp+274h+var_268] eax +
call sub_473540  +
mov [esp+274h+var_274] esi +
call free  +
mov eax [esp+274h+var_268] +
mov [esp+274h+var_244] eax +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
jmp free  +
xor edx edx +
jmp loc_473704  +
xor edx edx +
jmp loc_473728  +
***
sub esp 2Ch +
lea eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+arg_0] +
mov [esp+2Ch+var_2C] eax +
call fgetpos  +
test eax eax +
jnz loc_473797  +
mov eax [esp+2Ch+var_14] +
mov edx [esp+2Ch+var_10] +
add esp 2Ch +
retn   +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_473793  +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov ebp [esp+1Ch+arg_0] +
mov eax [ebp+0Ch] +
mov ebx [ebp+8] +
mov edx eax +
and edx 3 +
cmp edx 2 +
jz loc_4737E0  +
xor eax eax +
mov [ebp+0] ebx +
mov dword ptr [ebp+4] 0 +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
test eax 108h +
jz loc_4737CB  +
mov edx [ebp+0] +
sub edx ebx +
mov edi edx +
sar edi 1Fh +
cmp edi 0 +
jl loc_4737CB  +
jle loc_473840  +
mov [esp+1Ch+var_1C] ebp +
mov [esp+1Ch+var_10] edx +
call _fileno  +
mov edx [esp+1Ch+var_10] +
mov [esp+1Ch+var_18] ebx +
mov [esp+1Ch+var_14] edx +
mov [esp+1Ch+var_1C] eax +
call _write  +
mov edx [esp+1Ch+var_10] +
mov ebx eax +
xor edx eax +
sar ebx 1Fh +
mov ecx ebx +
xor ecx edi +
or ecx edx +
jnz loc_473847  +
mov eax [ebp+0Ch] +
test al 80h +
jz loc_473838  +
and eax 0FFFFFFFDh +
mov [ebp+0Ch] eax +
mov ebx [ebp+8] +
xor eax eax +
jmp loc_4737CD  +
cmp edx 0 +
jbe loc_4737CB  +
jmp loc_4737F8  +
or dword ptr [ebp+0Ch] 20h +
mov eax 0FFFFFFFFh +
mov ebx [ebp+8] +
jmp loc_4737CD  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov eax [esp+2Ch+arg_C] +
mov ebx [esp+2Ch+arg_0] +
mov esi [esp+2Ch+arg_4] +
mov edi [esp+2Ch+arg_8] +
cmp eax 1 +
jz loc_4738A5  +
cmp eax 2 +
jz loc_4738C3  +
test eax eax +
jnz loc_4738F0  +
mov [esp+2Ch+var_14] esi +
lea ebp [esp+2Ch+var_14] +
mov [esp+2Ch+var_10] edi +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
call fsetpos  +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
lea ebp [esp+2Ch+var_14] +
mov [esp+2Ch+var_28] ebp +
mov [esp+2Ch+var_2C] ebx +
call fgetpos  +
test eax eax +
jnz loc_473902  +
add [esp+2Ch+var_14] esi +
adc [esp+2Ch+var_10] edi +
jmp loc_473891  +
mov [esp+2Ch+var_2C] ebx +
lea ebp [esp+2Ch+var_14] +
call fflush  +
mov [esp+2Ch+var_2C] ebx +
call _fileno  +
mov [esp+2Ch+var_2C] eax +
call _filelengthi64  +
add eax esi +
adc edx edi +
mov [esp+2Ch+var_14] eax +
mov [esp+2Ch+var_10] edx +
jmp loc_473891  +
call _errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_47389D  +
mov eax 0FFFFFFFFh +
jmp loc_47389D  +
***
push esi  +
push ebx  +
sub esp 2Ch +
mov ebx [esp+2Ch+arg_0] +
call _errno  +
mov dword ptr [eax] 0 +
mov [esp+2Ch+var_2C] ebx +
call _fileno  +
mov [esp+2Ch+var_14] eax +
mov eax [ebx+4] +
test eax eax +
js loc_473A80  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_20] 1 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] eax +
call _lseeki64  +
test edx edx +
mov [esp+2Ch+var_1C] eax +
mov [esp+2Ch+var_18] edx +
js loc_473AC1  +
mov edx [ebx+0Ch] +
test edx 108h +
jz loc_473A60  +
mov ecx [ebx] +
mov eax [ebx+8] +
mov esi ecx +
sub esi eax +
test dl 3 +
mov [esp+2Ch+var_10] esi +
jnz loc_473A07  +
test dl 80h +
jz loc_473B92  +
mov esi [esp+2Ch+var_10] +
mov ebp [esp+2Ch+var_18] +
mov edi [esp+2Ch+var_1C] +
mov eax ebp +
or eax edi +
jz loc_473A90  +
and edx 1 +
jz loc_473AA0  +
mov edi [ebx+4] +
test edi edi +
jz loc_473AB4  +
mov eax [esp+2Ch+var_14] +
add edi [esp+2Ch+var_10] +
mov ecx eax +
and eax 1Fh +
lea eax [eax+eax*4] +
shl eax 3 +
mov edx eax +
mov ebp eax +
mov eax ds:__pioinfo +
sar ecx 5 +
mov eax [eax+ecx*4] +
cmp byte ptr [eax+edx+4] 0 +
js loc_473AD0  +
mov ecx edi +
xor ebx ebx +
mov eax esi +
xor edx edx +
sub [esp+2Ch+var_1C] ecx +
sbb [esp+2Ch+var_18] ebx +
jmp loc_473AA4  +
mov esi [esp+2Ch+var_14] +
mov edi esi +
and esi 1Fh +
sar edi 5 +
mov ebp edi +
lea edi [esi+esi*4] +
mov esi ds:__pioinfo +
shl edi 3 +
add edi [esi+ebp*4] +
mov esi [esp+2Ch+var_10] +
cmp byte ptr [edi+4] 0 +
jns loc_47399F  +
cmp ecx eax +
jbe loc_47399B  +
mov ebp [esp+2Ch+var_14] +
mov edi ecx +
xor ecx ecx +
cmp byte ptr [eax] 0Ah +
setz cl  +
add eax 1 +
add esi ecx +
cmp eax edi +
jnz loc_473A40  +
mov [esp+2Ch+var_14] ebp +
jmp loc_47399F  +
mov eax [ebx+4] +
mov edi [esp+2Ch+var_1C] +
mov ebp [esp+2Ch+var_18] +
cdq   +
sub edi eax +
sbb ebp edx +
mov eax edi +
mov edx ebp +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [ebx+4] 0 +
jmp loc_47393D  +
add esp 2Ch +
mov eax esi +
pop ebx  +
xor edx edx +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov eax esi +
xor edx edx +
add eax [esp+2Ch+var_1C] +
adc edx [esp+2Ch+var_18] +
add esp 2Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
xor eax eax +
xor edx edx +
xor ecx ecx +
xor ebx ebx +
jmp loc_4739FA  +
mov eax 0FFFFFFFFh +
mov edx 0FFFFFFFFh +
jmp loc_473A74  +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_20] 2 +
mov [esp+2Ch+var_28] 0 +
mov [esp+2Ch+var_24] 0 +
mov [esp+2Ch+var_2C] eax +
mov [esp+2Ch+var_10] ecx +
call _lseeki64  +
mov ecx [esp+2Ch+var_10] +
xor edx [esp+2Ch+var_18] +
xor eax [esp+2Ch+var_1C] +
or edx eax +
jnz loc_473B35  +
mov eax [ebx+8] +
lea ecx [eax+edi] +
cmp eax ecx +
jnb loc_473B23  +
xor edx edx +
cmp byte ptr [eax] 0Ah +
setz dl  +
add eax 1 +
add edi edx +
cmp eax ecx +
jnz loc_473B12  +
test byte ptr [ebx+0Dh] 20h +
jz loc_4739F2  +
add edi 1 +
jmp loc_4739F2  +
mov eax [esp+2Ch+var_1C] +
mov edx [esp+2Ch+var_18] +
mov [esp+2Ch+var_20] 0 +
mov [esp+2Ch+var_10] ecx +
mov [esp+2Ch+var_28] eax +
mov eax [esp+2Ch+var_14] +
mov [esp+2Ch+var_24] edx +
mov [esp+2Ch+var_2C] eax +
call _lseeki64  +
cmp edi 200h +
mov ecx [esp+2Ch+var_10] +
ja loc_473B7B  +
mov eax [ebx+0Ch] +
mov edi 200h +
and eax 408h +
cmp eax 8 +
jz loc_473B7E  +
mov edi [ebx+18h] +
mov eax ds:__pioinfo +
mov eax [eax+ecx*4] +
test byte ptr [eax+ebp+4] 4 +
jnz loc_473B2D  +
jmp loc_4739F2  +
call _errno  +
mov edx 0FFFFFFFFh +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_473A74  +
***
push ebp  +
push edi  +
push esi  +
push ebx  +
sub esp 1Ch +
mov ebx [esp+30h] +
mov esi [esp+34h] +
mov edi [esp+38h] +
mov ebp [esp+3Ch] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_473C52  +
cmp ebp 2 +
ja loc_473C52  +
and dword ptr [ebx+0Ch] 0FFFFFFEFh +
cmp ebp 1 +
jz loc_473C41  +
mov [esp] ebx +
call sub_4737B0  +
mov eax [ebx+0Ch] +
test al 80h +
jnz loc_473C30  +
and eax 409h +
cmp eax 9 +
jz loc_473C38  +
mov [esp] ebx +
call _fileno  +
mov [esp+0Ch] ebp +
mov [esp+4] esi +
mov [esp+8] edi +
mov [esp] eax +
call _lseeki64  +
and eax edx +
cmp eax 0FFFFFFFFh +
setz al  +
movzx eax al +
neg eax  +
add esp 1Ch +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
***
and eax 0FFFFFFFCh +
mov [ebx+0Ch] eax +
jmp loc_473BFD  +
***
mov dword ptr [ebx+18h] 200h +
jmp loc_473BFD  +
***
mov [esp] ebx +
call sub_473910  +
add esi eax +
adc edi edx +
xor bp bp +
jmp loc_473BE4  +
***
call _errno  +
mov dword ptr [eax] 16h +
mov eax 0FFFFFFFFh +
jmp loc_473C26  +
***
push esi  +
push ebx  +
xor ebx ebx +
sub esp 4 +
mov esi [esp+10h] +
call __doserrno  +
mov [eax] esi +
jmp loc_473C91  +
add ebx 1 +
cmp ds:dword_499804[ebx*8] 0FFFFFFFFh +
jz loc_473CB0  +
cmp ds:dword_499800[ebx*8] esi +
jnz loc_473C84  +
call _errno  +
mov edx ds:dword_499804[ebx*8] +
mov [eax] edx +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
lea eax [esi-13h] +
cmp eax 11h +
jbe loc_473CE5  +
sub esi 0BCh +
cmp esi 0Eh +
jbe loc_473CD4  +
call _errno  +
mov dword ptr [eax] 16h +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 8 +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 0Dh +
add esp 4 +
pop ebx  +
pop esi  +
retn   +
***
mov edx [esp+arg_0] +
test ecx ecx +
jz loc_473D38  +
cmp byte ptr [edx] 0 +
mov ebx edx +
jnz loc_473D2B  +
jmp loc_473D38  +
cmp byte ptr [edx] 0 +
jz loc_473D36  +
add edx 1 +
mov eax edx +
sub eax ebx +
cmp eax ecx +
jb loc_473D26  +
pop ebx  +
retn   +
xor eax eax +
pop ebx  +
retn   +
***
push esi  +
push ebx  +
sub esp 1Ch +
mov esi [esp+1Ch+arg_4] +
lea edi [esp+1Ch+arg_8] +
mov [esp+1Ch+var_10] edi +
mov [esp+1Ch+var_18] 0 +
mov [esp+1Ch+var_1C] 0 +
mov [esp+1Ch+var_14] esi +
call _vsnprintf  +
test eax eax +
mov ebx eax +
js loc_473DB4  +
lea ebp [eax+1] +
mov [esp+1Ch+var_1C] ebp +
call malloc  +
mov edx [esp+1Ch+arg_0] +
test eax eax +
mov [edx] eax +
jz loc_473DC0  +
mov [esp+1Ch+var_10] edi +
mov [esp+1Ch+var_14] esi +
mov [esp+1Ch+var_18] ebp +
mov [esp+1Ch+var_1C] eax +
call _vsnprintf  +
mov eax [esp+1Ch+arg_0] +
mov eax [eax] +
mov byte ptr [eax+ebx] 0 +
add esp 1Ch +
mov eax ebx +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov ebx 0FFFFFFFFh +
jmp loc_473DB4  +
***
push edi  +
push esi  +
push ebx  +
sub esp 12Ch +
mov ebx [ebp+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_473F8E  +
cmp byte ptr [ebx] 0 +
jz loc_473F58  +
mov [esp+138h+var_138] ebx +
call ds:GetFileAttributesA  +
sub esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_473F70  +
test al 10h +
jz loc_473F58  +
lea edi [ebp+var_11C] +
mov [esp+138h+var_134] ebx +
mov ebx edi +
mov [esp+138h+var_130] 104h +
mov [esp+138h+var_138] edi +
call _fullpath  +
mov edx [ebx] +
add ebx 4 +
lea eax [edx-1010101h] +
not edx  +
and eax edx +
and eax 80808080h +
jz loc_473E44  +
mov edx eax +
shr edx 10h +
test eax 8080h +
cmovz eax edx +
lea edx [ebx+2] +
cmovz ebx edx +
add al al +
sbb ebx 3 +
sub ebx edi +
lea eax [ebx+233h] +
mov [esp+138h+var_138] eax +
call malloc  +
test eax eax +
mov esi eax +
jz loc_473F7F  +
lea edx [eax+22Ch] +
lea eax [ebx+1] +
mov [esp+138h+var_138] edx +
mov [esp+138h+var_130] eax +
mov [esp+138h+var_134] edi +
mov [ebp+var_12C] edx +
call memcpy  +
mov edx [ebp+var_12C] +
cmp byte ptr [esi+22Ch] 0 +
jz loc_473ED3  +
movzx eax byte ptr [esi+ebx+22Bh] +
cmp al 2Fh +
jz loc_473ED3  +
cmp al 5Ch +
jz loc_473ED3  +
mov edi 5Ch +
mov [edx+ebx] di +
mov eax edx +
mov ecx [eax] +
add eax 4 +
lea edx [ecx-1010101h] +
not ecx  +
and edx ecx +
and edx 80808080h +
jz loc_473ED5  +
mov ecx edx +
shr ecx 10h +
test edx 8080h +
cmovz edx ecx +
lea ecx [eax+2] +
cmovz eax ecx +
add dl dl +
sbb eax 3 +
mov edx 2Ah +
mov [eax] dx +
xor ecx ecx +
xor eax eax +
lea edx [esi+120h] +
xor ebx ebx +
mov [esi+11Ch] cx +
mov edi edx +
mov ecx 41h +
mov dword ptr [esi+224h] 0FFFFFFFFh +
mov dword ptr [esi+228h] 0 +
mov dword ptr [esi+118h] 0 +
mov [esi+11Eh] bx +
stos   +
mov eax esi +
lea esp [ebp-0Ch] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 14h +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
call _errno  +
mov dword ptr [eax] 2 +
xor eax eax +
jmp loc_473F50  +
call _errno  +
mov dword ptr [eax] 0Ch +
xor eax eax +
jmp loc_473F50  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_473F50  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_4740A2  +
mov eax [ebx+228h] +
test eax eax +
js loc_47408D  +
jz loc_474030  +
mov eax [ebx+224h] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findnext  +
test eax eax +
jnz loc_474060  +
mov eax [ebx+228h] +
add eax 1 +
test eax eax +
mov [ebx+228h] eax +
jle loc_47408D  +
lea esi [ebx+14h] +
mov [esp+14h+var_14] esi +
call strlen  +
mov [ebx+11Eh] ax +
lea eax [ebx+120h] +
mov [esp+14h+var_10] esi +
mov [esp+14h+var_14] eax +
call strcpy  +
lea eax [ebx+118h] +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
lea eax [ebx+22Ch] +
mov [esp+14h+var_10] ebx +
mov [esp+14h+var_14] eax +
call _findfirst  +
cmp eax 0FFFFFFFFh +
mov [ebx+224h] eax +
jz loc_474083  +
mov dword ptr [ebx+228h] 1 +
jmp loc_473FF9  +
call ds:GetLastError  +
cmp eax 12h +
jz loc_474095  +
mov eax [ebx+224h] +
mov [esp+14h+var_14] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
xor eax eax +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0 +
jmp loc_47406B  +
call _errno  +
mov dword ptr [eax] 0Eh +
xor eax eax +
jmp loc_474023  +
***
sub esp 14h +
mov ebx [esp+14h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_4740FF  +
mov eax [ebx+224h] +
xor esi esi +
cmp eax 0FFFFFFFFh +
jz loc_4740EF  +
mov [esp+14h+var_14] eax +
call _findclose  +
mov esi eax +
mov [esp+14h+var_14] ebx +
call free  +
mov eax esi +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_4740F9  +
***
jmp sub_474120  +
***
mov ebx [esp+18h+arg_0] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_474163  +
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_47414A  +
mov [esp+18h+var_18] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0 +
add esp 18h +
pop ebx  +
retn   +
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_47415E  +
***
push ebx  +
sub esp 8 +
mov ebx [esp+10h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_474192  +
mov eax [ebx+228h] +
add esp 8 +
pop ebx  +
retn   +
***
call _errno  +
mov dword ptr [eax] 0Eh +
mov eax 0FFFFFFFFh +
jmp loc_47418D  +
***
push esi  +
push ebx  +
sub esp 14h +
mov ebx [esp+20h] +
mov esi [esp+24h] +
call _errno  +
test ebx ebx +
mov dword ptr [eax] 0 +
jz loc_47423D  +
cmp esi 0FFFFFFFFh +
jl loc_474230  +
jz loc_474200  +
mov [esp] ebx +
call sub_474120  +
nop   +
lea esi [esi+0] +
jmp loc_4741EE  +
mov [esp] ebx +
call sub_473FA0  +
test eax eax +
jz loc_474227  +
cmp esi [ebx+228h] +
jg loc_4741E2  +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
mov eax [ebx+224h] +
cmp eax 0FFFFFFFFh +
jz loc_474213  +
mov [esp] eax +
call _findclose  +
mov dword ptr [ebx+224h] 0FFFFFFFFh +
mov dword ptr [ebx+228h] 0FFFFFFFFh +
add esp 14h +
pop ebx  +
pop esi  +
retn   +
***
call _errno  +
mov dword ptr [eax] 16h +
jmp loc_474227  +
***
call _errno  +
mov dword ptr [eax] 0Eh +
jmp loc_474227  +
***
push edi  +
push esi  +
push ebx  +
sub esp 0DCh +
mov esi [ebp+arg_4] +
mov ebx [ebp+arg_0] +
test esi esi +
jz loc_474295  +
lea eax [ebp+var_C4] +
mov [esp+0E8h+var_E8] eax +
call ds:GetTimeZoneInformation  +
sub esp 4 +
cmp eax 0FFFFFFFFh +
jz loc_474310  +
mov edx [ebp+var_C4] +
cmp eax 2 +
setz al  +
movzx eax al +
mov [esi+4] eax +
mov [esi] edx +
test ebx ebx +
jz loc_474303  +
lea eax [ebp+var_D0] +
mov [esp+0E8h+var_E8] eax +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+var_D0] +
mov edi [ebp+var_CC] +
sub esp 4 +
add esi 2AC18000h +
adc edi 0FE624E21h +
mov [esp+0E8h+var_E0] 989680h +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E8] esi +
mov [esp+0E8h+var_E4] edi +
call sub_473430  +
mov [ebx] eax +
mov [esp+0E8h+var_E0] 989680h +
mov [esp+0E8h+var_DC] 0 +
mov [esp+0E8h+var_E8] esi +
mov [esp+0E8h+var_E4] edi +
call sub_4732E0  +
imul eax eax +
mov [ebx+4] eax +
lea esp [ebp-0Ch] +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn   +
mov dword ptr [esi] 0 +
mov dword ptr [esi+4] 0 +
jmp loc_474295  +
***
sub esp 24h +
mov eax [esp+24h+arg_4] +
mov ebx [esp+24h+arg_0] +
mov [esp+24h+var_20] eax +
lea eax [esp+24h+var_C] +
mov [esp+24h+var_24] eax +
call sub_474250  +
test eax eax +
mov ecx eax +
jnz loc_474380  +
mov eax [esp+24h+var_C] +
mov edx 10624DD3h +
mov esi [esp+24h+var_8] +
mov [ebx] eax +
mov eax esi +
imul  edx +
sar esi 1Fh +
sar edx 6 +
sub edx esi +
mov [ebx+4] edx +
add esp 24h +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
mov ecx 0FFFFFFFFh +
jmp loc_474371  +
***
push esi  +
push ebx  +
sub esp 24h +
mov eax [esp+34h] +
mov ebx [esp+30h] +
mov [esp+4] eax +
lea eax [esp+18h] +
mov [esp] eax +
call sub_474250  +
test eax eax +
mov ecx eax +
jnz loc_4743E0  +
mov eax [esp+18h] +
mov edx 10624DD3h +
mov esi [esp+1Ch] +
mov [ebx] eax +
mov eax esi +
imul  edx +
sar esi 1Fh +
sar edx 6 +
sub edx esi +
mov [ebx+4] edx +
add esp 24h +
mov eax ecx +
pop ebx  +
pop esi  +
retn   +
***
mov ecx 0FFFFFFFFh +
jmp loc_4743D1  +
***
retn   +
***
mov eax [esp+4] +
xchg eax ds:dword_49F964 +
retn   +
***
jmp ds:__setusermatherr  +
***
push edi  +
push esi  +
sub esp 18h +
call sub_401500  +
mov [esp+18h+var_18] offset sub_401550 +
call sub_472080  +
leave   +
retn   +
***
