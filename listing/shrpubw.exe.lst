retn   +
***
pop edi  +
xchg eax esi +
call dword ptr [esi]  +
rcl byte ptr [ecx] 1 +
xchg eax ecx +
retf   +
***
jmp near ptr byte_1002271  +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call ??3@YAXPAX@Z  +
pop ecx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax [ecx] +
mov cx [eax] +
cmp cx [edx] +
jnz loc_100274C  +
test cx cx +
jz loc_1002748  +
mov cx [eax+2] +
cmp cx [edx+2] +
jnz loc_100274C  +
add eax 4 +
add edx 4 +
test cx cx +
jnz loc_1002726  +
xor eax eax +
jmp loc_1002751  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
pop ebp  +
retn 4  +
***
mov eax ds:?messageMap@CWinApp@@1UAFX_MSGMAP@@B +
retn   +
***
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_10014A4 +
mov eax [esi+0E0h] +
mov dword ptr [ebp-4] 9 +
test eax eax +
jz loc_1002912  +
push eax  +
call ds:FreeLibrary  +
mov eax [esi+11Ch] +
test eax eax +
jz loc_1002923  +
push eax  +
call ds:LocalFree  +
lea ecx [esi+10Ch] +
call ??1CString@@QAE@XZ  +
lea ecx [esi+108h] +
mov byte ptr [ebp-4] 8 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+104h] +
mov byte ptr [ebp-4] 7 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+100h] +
mov byte ptr [ebp-4] 6 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+0FCh] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+0F0h] +
mov byte ptr [ebp-4] 4 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+0ECh] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+0E8h] +
mov byte ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+0D0h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+0CCh] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call ??1CWinApp@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi [ebp+lpMachineName] +
xor ebx ebx +
mov eax 80000002h +
mov [ebp+var_18] ebx +
mov [ebp+hKey] eax +
cmp esi ebx +
jz loc_1002A05  +
cmp [esi] bx +
jz loc_1002A05  +
lea ecx [ebp+hKey] +
push ecx  +
push eax  +
push esi  +
call ds:RegConnectRegistryW  +
test eax eax +
jz loc_1002A05  +
xor eax eax +
jmp loc_1002AE9  +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
push ebx  +
push offset aSystemCurrentc  +
push [ebp+hKey]  +
mov [ebp+phkResult] ebx +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1002AD4  +
mov esi ds:RegQueryValueExW +
push edi  +
lea eax [ebp+cbData] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
mov edi offset ValueName +
push edi  +
push [ebp+phkResult]  +
mov [ebp+cbData] ebx +
call esi  +
test eax eax +
jnz loc_1002AC7  +
mov eax [ebp+cbData] +
inc eax  +
push 1  +
push eax  +
call ds:calloc  +
pop ecx  +
pop ecx  +
mov [ebp+var_14] eax +
cmp eax ebx +
jz loc_1002AC7  +
lea ecx [ebp+cbData] +
push ecx  +
push eax  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push edi  +
push [ebp+phkResult]  +
mov [ebp+Type] 7 +
call esi  +
test eax eax +
jnz loc_1002ABD  +
cmp [ebp+Type] 7 +
jnz loc_1002ABD  +
mov esi [ebp+var_14] +
cmp [esi] bx +
jz loc_1002ABD  +
mov ebx ds:lstrlenW +
mov edi offset String +
push edi  +
call ebx  +
push eax  +
push edi  +
push esi  +
call ds:wcsncmp  +
add esp 0Ch +
test eax eax +
jz loc_1002AB4  +
push esi  +
call ebx  +
lea esi [esi+eax*2+2] +
cmp word ptr [esi] 0 +
jnz loc_1002A92  +
jmp loc_1002ABB  +
mov [ebp+var_18] 1 +
xor ebx ebx +
push [ebp+var_14]  +
call ds:free  +
pop ecx  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov esi [ebp+lpMachineName] +
pop edi  +
cmp esi ebx +
jz loc_1002AE6  +
cmp [esi] bx +
jz loc_1002AE6  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax [ebp+var_18] +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
shr ecx 1 +
push 0  +
pop eax  +
jz loc_1002B0B  +
cmp ecx 7FFFFFFFh +
jbe loc_1002B10  +
mov eax 80070057h +
test eax eax +
jl loc_1002B5B  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_1002B4B  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_1002B46  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_1002B46  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_1002B2E  +
pop edi  +
test esi esi +
jnz loc_1002B52  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10028E3  +
test byte ptr [ebp+8] 1 +
jz loc_1002B7E  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea ecx [esi+0E8h] +
call ?Empty@CString@@QAEXXZ  +
lea ecx [esi+0ECh] +
call ?Empty@CString@@QAEXXZ  +
lea ecx [esi+0F0h] +
call ?Empty@CString@@QAEXXZ  +
lea edi [esi+11Ch] +
mov eax [edi] +
xor ebx ebx +
mov dword ptr [esi+0F4h] 1 +
mov [esi+0F8h] ebx +
cmp eax ebx +
jz loc_1002BD9  +
push eax  +
call ds:LocalFree  +
mov [edi] ebx +
lea ecx [esi+0FCh] +
call ?Empty@CString@@QAEXXZ  +
lea ecx [esi+100h] +
call ?Empty@CString@@QAEXXZ  +
mov eax [esi+0C4h] +
push ebx  +
push 1  +
push 465h  +
mov [esi+110h] ebx +
mov [esi+114h] ebx +
mov [esi+118h] ebx +
push dword ptr [eax+20h]  +
call ds:PostMessageW  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
call __EH_prolog3_GS  +
mov esi ecx +
lea edi [esi+0CCh] +
xor ebx ebx +
mov ecx edi +
mov [ebp-44h] ebx +
call ?Empty@CString@@QAEXXZ  +
lea ecx [esi+0D0h] +
mov [ebp-3Ch] ecx +
call ?Empty@CString@@QAEXXZ  +
push dword ptr [esi+74h]  +
lea ecx [ebp-34h] +
mov [esi+0D4h] ebx +
call ??0CString@@QAE@PBG@Z  +
lea ecx [ebp-34h] +
mov [ebp-4] ebx +
call ?TrimLeft@CString@@QAEXXZ  +
lea ecx [ebp-34h] +
call ?TrimRight@CString@@QAEXXZ  +
mov eax [ebp-34h] +
cmp [eax-8] ebx +
jz loc_1002D86  +
mov ebx offset aS +
push ebx  +
lea ecx [ebp-34h] +
call sub_100271C  +
test eax eax +
jz loc_1002D86  +
push 2  +
lea eax [ebp-38h] +
push eax  +
lea ecx [ebp-34h] +
call ?Left@CString@@QBE?AV1@H@Z  +
push ebx  +
mov ecx eax +
call sub_100271C  +
mov ebx eax +
neg ebx  +
sbb bl bl +
lea ecx [ebp-38h] +
inc bl  +
call ??1CString@@QAE@XZ  +
test bl bl +
jz loc_1002DB7  +
mov eax [ebp-34h] +
cmp dword ptr [eax-8] 2 +
jle loc_1002CD2  +
movzx eax word ptr [eax+4] +
jmp loc_1002CD4  +
xor eax eax +
push eax  +
call ds:iswspace  +
pop ecx  +
test eax eax +
jz loc_1002DB7  +
push 3  +
lea eax [ebp-38h] +
push eax  +
lea ecx [ebp-34h] +
call ?Mid@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-34h] +
mov byte ptr [ebp-4] 1 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-38h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-34h] +
call ?TrimLeft@CString@@QAEXXZ  +
push 2  +
lea eax [ebp-38h] +
push eax  +
lea ecx [ebp-34h] +
call ?Left@CString@@QBE?AV1@H@Z  +
push offset asc_1001618  +
mov ecx eax +
call sub_100271C  +
mov ebx eax +
neg ebx  +
sbb bl bl +
lea ecx [ebp-38h] +
inc bl  +
call ??1CString@@QAE@XZ  +
test bl bl +
jz loc_1002D69  +
push 2  +
lea eax [ebp-38h] +
push eax  +
lea ecx [ebp-34h] +
call ?Mid@CString@@QBE?AV1@H@Z  +
push eax  +
mov ecx edi +
mov byte ptr [ebp-4] 2 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-38h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
jmp loc_1002D74  +
lea eax [ebp-34h] +
push eax  +
mov ecx edi +
call ??4CString@@QAEABV0@ABV0@@Z  +
push edi  +
call sub_1006A1A  +
test eax eax +
jz loc_1002DB7  +
push edi  +
call sub_1006AC9  +
jmp loc_1002DB7  +
push 10h  +
pop ebx  +
lea eax [ebp-38h] +
push eax  +
lea eax [ebp-30h] +
push eax  +
mov [ebp-38h] ebx +
call ds:GetComputerNameW  +
test eax eax +
jz loc_1002EFA  +
lea eax [ebp-30h] +
push eax  +
mov ecx edi +
call ??4CString@@QAEABV0@PBG@Z  +
mov dword ptr [esi+0D4h] 1 +
mov eax [edi] +
xor ebx ebx +
cmp [eax-8] ebx +
jnz loc_1002E24  +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
push dword ptr [eax+10h]  +
lea ecx [ebp-38h] +
call ??0CString@@QAE@PBG@Z  +
lea ecx [ebp-3Ch] +
mov byte ptr [ebp-4] 3 +
call ??0CString@@QAE@XZ  +
push dword ptr [ebp-38h]  +
lea eax [ebp-3Ch] +
push 1Eh  +
push eax  +
mov byte ptr [ebp-4] 4 +
call ?FormatMessageW@CString@@QAAXIZZ  +
add esp 0Ch +
push dword ptr [ebp-3Ch]  +
push 4  +
push ebx  +
push 10h  +
call ds:GetActiveWindow  +
push eax  +
call sub_10066A7  +
add esp 14h +
lea ecx [ebp-3Ch] +
mov byte ptr [ebp-4] 3 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-38h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
jmp loc_1002F13  +
lea ecx [ebp-40h] +
push ecx  +
push 65h  +
push eax  +
mov [ebp-40h] ebx +
call NetServerGetInfo  +
cmp eax ebx +
jnz loc_1002EE2  +
mov eax [ebp-40h] +
mov eax [eax+8] +
and eax 0Fh +
cmp al 5 +
jb loc_1002E86  +
push dword ptr [edi]  +
mov dword ptr [esi+0DCh] 1 +
call sub_10029CB  +
push offset aNtdll_dll  +
mov [esi+0D8h] eax +
call ds:LoadLibraryW  +
mov [esi+0E0h] eax +
cmp eax ebx +
jz loc_1002E86  +
push offset ProcName  +
push eax  +
call ds:GetProcAddress  +
mov [esi+0E4h] eax +
push dword ptr [ebp-40h]  +
call NetApiBufferFree  +
cmp [esi+0D4h] ebx +
jnz loc_1002EA3  +
push dword ptr [edi]  +
call sub_100672B  +
mov [esi+0D4h] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-34h] +
mov dword ptr [ebp-44h] 1 +
call ??1CString@@QAE@XZ  +
mov ecx [ebp-3Ch] +
push offset asc_1001618  +
call ??4CString@@QAEABV0@PBG@Z  +
mov ecx [ebp-3Ch] +
push edi  +
call ??YCString@@QAEABV0@ABV0@@Z  +
mov ecx [ebp-3Ch] +
push offset asc_10015E8  +
call ??YCString@@QAEABV0@PBG@Z  +
mov eax [ebp-44h] +
call sub_10074C9  +
retn   +
push dword ptr [edi]  +
push 3  +
push eax  +
push 10h  +
call ds:GetActiveWindow  +
push eax  +
call sub_10066A7  +
add esp 14h +
jmp loc_1002F13  +
push 2  +
call ds:GetLastError  +
push eax  +
push ebx  +
call ds:GetActiveWindow  +
push eax  +
call sub_10066A7  +
add esp 10h +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-34h] +
call ??1CString@@QAE@XZ  +
mov ecx edi +
call ?Empty@CString@@QAEXXZ  +
jmp loc_1002ED9  +
***
call __EH_prolog3_GS  +
xor esi esi +
push esi  +
push esi  +
push 1  +
push esi  +
mov ebx ecx +
call ds:HeapSetInformation  +
push esi  +
push dword ptr [ebx+74h]  +
call ds:RegisterApplicationRestart  +
call ds:InitCommonControls  +
mov ecx ebx +
call ?Enable3dControls@CWinApp@@IAEHXZ  +
mov ecx ebx +
call sub_1002C21  +
test eax eax +
jz loc_100328D  +
mov edi ds:LoadImageW +
push esi  +
push esi  +
push esi  +
push esi  +
push 83h  +
push dword ptr [ebx+6Ch]  +
mov [ebx+20h] esi +
mov [ebp-26Ch] esi +
call edi  +
mov [ebp-270h] eax +
cmp eax esi +
jz loc_1003245  +
push esi  +
push esi  +
push esi  +
push esi  +
push 84h  +
push dword ptr [ebx+6Ch]  +
call edi  +
mov [ebp-26Ch] eax +
cmp eax esi +
jz loc_1003245  +
push 0C0h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-274h] eax +
mov [ebp-4] esi +
cmp eax esi +
jz loc_1002FEA  +
push dword ptr [ebp-26Ch]  +
mov ecx eax +
push esi  +
push dword ptr [ebp-270h]  +
push esi  +
push esi  +
push 1  +
call MFC42u_6484  +
jmp loc_1002FEC  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [ebx+0C4h] eax +
cmp eax esi +
jz loc_1003245  +
lea ecx [ebp-4D8h] +
call sub_10033C2  +
lea ecx [ebp-440h] +
mov dword ptr [ebp-4] 1 +
call sub_1003BCD  +
lea ecx [ebp-578h] +
mov byte ptr [ebp-4] 2 +
call sub_10044FE  +
lea ecx [ebp-30Ch] +
mov byte ptr [ebp-4] 3 +
call sub_1004E02  +
lea ecx [ebp-3A8h] +
mov byte ptr [ebp-4] 4 +
call sub_10054C3  +
push 1F4h  +
lea eax [ebp-260h] +
push esi  +
push eax  +
mov byte ptr [ebp-4] 5 +
call memset  +
add esp 0Ch +
push esi  +
lea eax [ebp-264h] +
push eax  +
push esi  +
push 29h  +
mov dword ptr [ebp-264h] 1F8h +
call ds:SystemParametersInfoW  +
lea ecx [ebp-268h] +
call ??0CString@@QAE@XZ  +
push 4Dh  +
lea ecx [ebp-268h] +
mov byte ptr [ebp-4] 6 +
call ?LoadStringW@CString@@QAEHI@Z  +
test eax eax +
jnz loc_10030FB  +
lea ecx [ebp-268h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-3A8h] +
mov byte ptr [ebp-4] 4 +
call sub_1005428  +
lea ecx [ebp-30Ch] +
mov byte ptr [ebp-4] 3 +
call sub_1004B84  +
lea ecx [ebp-578h] +
mov byte ptr [ebp-4] 2 +
call sub_1004456  +
lea ecx [ebp-440h] +
mov byte ptr [ebp-4] 1 +
call sub_10035C9  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-4D8h] +
call sub_10032ED  +
jmp loc_1003245  +
push 17h  +
pop ecx  +
push dword ptr [ebp-268h]  +
lea eax [ebp-50h] +
push 40h  +
lea esi [ebp-0CCh] +
lea edi [ebp-6Ch] +
movs   +
push eax  +
mov dword ptr [ebp-5Ch] 2BCh +
call sub_1002AF4  +
push 0  +
call ds:GetDC  +
mov edi eax +
push 5Ah  +
push edi  +
call ds:GetDeviceCaps  +
imul eax eax +
push 0FFFFFFB8h  +
cdq   +
pop ecx  +
idiv  ecx +
lea esi [ebx+0C8h] +
mov [ebp-6Ch] eax +
lea eax [ebp-6Ch] +
push eax  +
call ds:CreateFontIndirectW  +
push edi  +
push 0  +
mov [esi] eax +
call ds:ReleaseDC  +
cmp dword ptr [esi] 0 +
jz loc_10031E9  +
mov ecx [ebx+0C4h] +
lea eax [ebp-4D8h] +
push eax  +
call MFC42u_6564  +
mov ecx [ebx+0C4h] +
lea eax [ebp-440h] +
push eax  +
call MFC42u_6564  +
mov ecx [ebx+0C4h] +
lea eax [ebp-578h] +
push eax  +
call MFC42u_6564  +
mov ecx [ebx+0C4h] +
lea eax [ebp-30Ch] +
push eax  +
call MFC42u_6564  +
mov ecx [ebx+0C4h] +
lea eax [ebp-3A8h] +
push eax  +
call MFC42u_6564  +
mov eax [ebx+0C4h] +
or dword ptr [eax+90h] 20h +
mov eax [ebx+0C4h] +
or dword ptr [eax+90h] 1110000h +
mov ecx [ebx+0C4h] +
mov eax [ecx] +
call dword ptr [eax+0C0h]  +
lea ecx [ebp-268h] +
mov byte ptr [ebp-4] 5 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-3A8h] +
mov byte ptr [ebp-4] 4 +
call sub_1005428  +
lea ecx [ebp-30Ch] +
mov byte ptr [ebp-4] 3 +
call sub_1004B84  +
lea ecx [ebp-578h] +
mov byte ptr [ebp-4] 2 +
call sub_1004456  +
lea ecx [ebp-440h] +
mov byte ptr [ebp-4] 1 +
call sub_10035C9  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-4D8h] +
call sub_10032ED  +
xor esi esi +
mov eax [ebx+0C8h] +
mov edi ds:DeleteObject +
cmp eax esi +
jz loc_1003258  +
push eax  +
call edi  +
add ebx 0C4h +
mov ecx [ebx] +
cmp ecx esi +
jz loc_100326D  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+4]  +
mov [ebx] esi +
cmp [ebp-26Ch] esi +
jz loc_100327D  +
push dword ptr [ebp-26Ch]  +
call edi  +
cmp [ebp-270h] esi +
jz loc_100328D  +
push dword ptr [ebp-270h]  +
call edi  +
xor eax eax +
call sub_10074C9  +
retn   +
***
mov eax offset off_1001628 +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
lea ecx [esi+94h] +
mov dword ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+90h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call ??1CPropertyPage@@UAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov dword ptr [ecx] offset off_10016BC +
jmp sub_10032A5  +
***
retn   +
***
jmp ?AfxTryCleanup@@YGXXZ  +
***
call ds:EnableWindow  +
retn   +
***
call ds:EnableWindow  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov ecx [eax+4] +
call ?BeginWaitCursor@CCmdTarget@@QAEXXZ  +
mov eax esi +
pop esi  +
retn   +
***
call __EH_prolog3_catch  +
mov ecx [ebp-14h] +
mov [ebp-18h] ecx +
test ecx ecx +
jz loc_1003396  +
call ?Delete@CException@@QAEXXZ  +
mov eax offset loc_1003378 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push 0  +
push 470h  +
push dword ptr [ecx+20h]  +
call ds:PostMessageW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push 7F2h  +
mov esi ecx +
call MFC42u_6481  +
or dword ptr [esi+64h] 800h +
mov dword ptr [esi] offset off_10016BC +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_10016BC +
call sub_10032A5  +
test byte ptr [ebp+8] 1 +
jz loc_100340C  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
call ?OnInitDialog@CDialog@@UAEHXZ  +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov esi [eax+4] +
mov ebx ds:GetParent +
lea eax [esi+108h] +
push eax  +
push 3024h  +
push dword ptr [edi+20h]  +
call ebx  +
push eax  +
call ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z  +
mov ecx eax +
call ?GetDlgItemTextW@CWnd@@QBEHHAAVCString@@@Z  +
lea eax [esi+10Ch] +
push eax  +
push 3025h  +
push dword ptr [edi+20h]  +
call ebx  +
push eax  +
call ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z  +
mov ecx eax +
call ?GetDlgItemTextW@CWnd@@QBEHHAAVCString@@@Z  +
mov esi [esi+0C8h] +
push 3F8h  +
mov ecx edi +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
push 1  +
push esi  +
push 30h  +
push dword ptr [eax+20h]  +
call ds:SendMessageW  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov edi ds:GetParent +
mov esi ecx +
push 2  +
push dword ptr [esi+20h]  +
call edi  +
push eax  +
call ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z  +
mov ecx eax +
call sub_10033A1  +
push dword ptr [esi+20h]  +
call edi  +
push eax  +
call ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z  +
push 1  +
push 2  +
mov ecx eax +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push 0  +
push 0  +
push 8002h  +
push dword ptr [esi+20h]  +
call ds:PostMessageW  +
pop edi  +
mov ecx esi +
pop esi  +
jmp ?OnSetActive@CPropertyPage@@UAEHXZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
lea ecx [ebp+0Fh] +
call sub_1003334  +
push offset aHtmlA42d60db05  +
push 0  +
push offset aFile_srv_chm  +
push 0  +
call sub_1007D44  +
mov eax [ebp+0Ch] +
and dword ptr [eax] 0 +
lea ecx [ebp+0Fh] +
call sub_100334F  +
pop ebp  +
retn 8  +
***
push dword ptr [ecx+20h]  +
call ds:GetParent  +
push eax  +
call ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z  +
push 3024h  +
mov ecx eax +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?SetFocus@CWnd@@QAEPAV1@XZ  +
xor eax eax +
retn 8  +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_3 +
call __EH_prolog3  +
push 98h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_1003584  +
call sub_10033C2  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jl loc_10035A8  +
mov eax [ecx] +
cmp edx [eax-8] +
jge loc_10035A8  +
mov ax [eax+edx*2] +
jmp loc_10035AA  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov eax ds:MFC42u_6593 +
retn   +
***
mov eax offset off_1001830 +
retn   +
***
mov dword ptr [ecx] offset off_10018AC +
jmp sub_10032A5  +
***
retn   +
***
push 3E9h  +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?SetFocus@CWnd@@QAEPAV1@XZ  +
xor eax eax +
retn 8  +
***
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov eax [eax+4] +
lea ecx [eax+0E8h] +
jmp ?Empty@CString@@QAEXXZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_1003632  +
cmp word ptr [edi] 0 +
jz loc_1003632  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_100364E  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
push 2  +
push edi  +
push esi  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jz loc_1003656  +
add esi 8 +
cmp word ptr [esi] 0 +
jnz loc_100363A  +
jmp loc_1003632  +
xor eax eax +
inc eax  +
jmp loc_1003634  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_100A278 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
mov ecx [ebp+10h] +
push ebx  +
mov ebx [ebp+8] +
dec eax  +
dec eax  +
push esi  +
mov esi [ebp+14h] +
jz loc_100369E  +
dec eax  +
dec eax  +
jnz loc_10036DB  +
push 12h  +
push eax  +
push 10h  +
push ebx  +
call sub_10066A7  +
xor eax eax +
add esp 10h +
inc eax  +
jmp loc_10036DD  +
push edi  +
lea eax [ebp-20Ch] +
push eax  +
push ecx  +
xor edi edi +
call ds:SHGetPathFromIDListW  +
test eax eax +
jz loc_10036CB  +
test esi esi +
jz loc_10036C8  +
push esi  +
lea eax [ebp-20Ch] +
push eax  +
call sub_1003617  +
mov edi eax +
jmp loc_10036CB  +
xor edi edi +
inc edi  +
push edi  +
push 0  +
push 465h  +
push ebx  +
call ds:SendMessageW  +
pop edi  +
xor eax eax +
mov ecx [ebp-4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10073ED  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call NetpwPathType  +
test eax eax +
jz loc_1003712  +
xor eax eax +
jmp locret_100371F  +
mov eax [ebp+var_4] +
xor eax 2006h +
neg eax  +
sbb eax eax +
inc eax  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
xor edi edi +
cmp [ebp+arg_0] edi +
jnz loc_100373F  +
call ds:GetActiveWindow  +
mov [ebp+arg_0] eax +
mov ebx [ebp+lpFileName] +
push ebx  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jnz loc_10037CC  +
call ds:GetLastError  +
cmp eax 3 +
jz loc_10037C7  +
cmp eax 2 +
jz loc_10037C7  +
cmp eax 5 +
jz loc_10037EB  +
cmp eax edi +
mov edi eax +
jle loc_1003779  +
and edi 0FFFFh +
or edi 80070000h +
cmp eax 15h +
jnz loc_10037AA  +
mov ecx ebx +
push esi  +
lea esi [ecx+2] +
mov dx [ecx] +
inc ecx  +
inc ecx  +
test dx dx +
jnz loc_1003784  +
sub ecx esi +
sar ecx 1 +
cmp ecx 3 +
pop esi  +
jle loc_10037AA  +
cmp word ptr [ebx+ecx*2-2] 5Ch +
jnz loc_10037AA  +
cmp word ptr [ebx+ecx*2-4] 3Ah +
jnz loc_10037AA  +
xor edi edi +
test edi edi +
jge loc_10037EB  +
cmp [ebp+arg_8] 0 +
jz loc_10037EB  +
push ebx  +
push 23h  +
push eax  +
push 0  +
push [ebp+arg_0]  +
call sub_10066A7  +
add esp 14h +
jmp loc_10037EB  +
xor edi edi +
inc edi  +
jmp loc_10037EB  +
test al 10h +
jnz loc_10037EB  +
cmp [ebp+arg_8] edi +
jz loc_10037E6  +
push ebx  +
push 14h  +
push edi  +
push 10h  +
push [ebp+arg_0]  +
call sub_10066A7  +
add esp 14h +
mov edi 80004005h +
mov eax edi +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3  +
push dword ptr [ebp+8]  +
xor edi edi +
mov [ebp-18h] edi +
call sub_100672B  +
lea ecx [ebp-14h] +
mov esi eax +
call ??0CString@@QAE@XZ  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp+0Ch]  +
mov [ebp-4] edi +
push dword ptr [ebp+8]  +
call sub_1006828  +
mov eax offset a? +
cmp esi edi +
jnz loc_100383B  +
mov eax offset a?Unc +
push eax  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@PBG@Z  +
mov byte ptr [ebp-4] 1 +
cmp esi edi +
jz loc_1003851  +
lea eax [ebp-14h] +
jmp loc_1003870  +
mov eax [ebp-14h] +
mov eax [eax-8] +
dec eax  +
push eax  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-14h] +
call ?Right@CString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 2 +
mov dword ptr [ebp-18h] 1 +
push eax  +
lea ecx [ebp-10h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
test byte ptr [ebp-18h] 1 +
mov dword ptr [ebp-4] 1 +
jz loc_100388E  +
lea ecx [ebp+0Ch] +
call ??1CString@@QAE@XZ  +
push edi  +
push dword ptr [ebp-10h]  +
push edi  +
call sub_1003728  +
neg esi  +
sbb esi esi +
and esi 16h +
add esi 24h +
push esi  +
push dword ptr [ebp-10h]  +
call ds:wcschr  +
mov ecx [ebp-10h] +
mov ebx ds:wcsrchr +
add eax 4 +
push 5Ch  +
push eax  +
mov [ebp+8] ecx +
mov [ebp-18h] eax +
call ebx  +
add esp 10h +
jmp loc_10038F5  +
push 1  +
push dword ptr [ebp+8]  +
xor eax eax +
push eax  +
mov [esi] ax +
call sub_1003728  +
test eax eax +
jl loc_10038FD  +
jz loc_1003922  +
test edi edi +
jz loc_10038E9  +
push 5Ch  +
pop eax  +
mov [edi-2] ax +
push 5Ch  +
push dword ptr [ebp-18h]  +
lea edi [esi+2] +
call ebx  +
pop ecx  +
pop ecx  +
mov esi eax +
test esi esi +
jnz loc_10038C8  +
jmp loc_1003928  +
xor esi esi +
inc esi  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
call __EH_epilog3  +
retn 8  +
push 5Ch  +
pop eax  +
mov [esi] ax +
mov esi ds:CreateDirectoryW +
jmp loc_100395B  +
test edi edi +
jz loc_100397E  +
cmp word ptr [edi] 0 +
jz loc_100397E  +
push 5Ch  +
pop eax  +
push eax  +
push edi  +
mov [edi-2] ax +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1003959  +
xor ecx ecx +
mov [eax] cx +
lea edi [eax+2] +
jmp loc_100395B  +
xor edi edi +
push 0  +
push dword ptr [ebp+8]  +
call esi  +
test eax eax +
jnz loc_1003930  +
call ds:GetLastError  +
test eax eax +
jle loc_100397A  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_1003900  +
xor esi esi +
jmp loc_1003900  +
***
call __EH_prolog3  +
xor ebx ebx +
mov [ebp-1Ch] ebx +
call ds:GetActiveWindow  +
push dword ptr [ebp+8]  +
mov [ebp-14h] eax +
call sub_100672B  +
mov esi [ebp+0Ch] +
push esi  +
push dword ptr [ebp+8]  +
mov edi eax +
call sub_10068AE  +
cmp eax ebx +
jl loc_10039D8  +
jz loc_10039D8  +
push esi  +
push 22h  +
push ebx  +
push 10h  +
push dword ptr [ebp-14h]  +
call sub_10066A7  +
add esp 14h +
xor eax eax +
jmp loc_1003B3A  +
push esi  +
call ds:lstrlenW  +
cmp eax 3 +
jnz loc_1003A0F  +
push 3Ah  +
pop eax  +
cmp ax [esi+2] +
jnz loc_1003A0F  +
push 5Ch  +
pop eax  +
cmp ax [esi+4] +
jnz loc_1003A0F  +
push esi  +
push 2Fh  +
push ebx  +
push 134h  +
push dword ptr [ebp-14h]  +
call sub_10066A7  +
add esp 14h +
cmp eax 7 +
jz loc_10039D1  +
cmp edi ebx +
jnz loc_1003A30  +
push esi  +
push dword ptr [ebp+8]  +
call sub_100694D  +
cmp eax ebx +
jge loc_1003A26  +
push esi  +
push 8  +
push eax  +
jmp loc_10039C4  +
jz loc_1003A30  +
xor eax eax +
inc eax  +
jmp loc_1003B3A  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
lea eax [ebp-10h] +
push eax  +
push esi  +
push dword ptr [ebp+8]  +
mov [ebp-4] ebx +
call sub_1006828  +
mov eax offset a? +
cmp edi ebx +
jnz loc_1003A56  +
mov eax offset a?Unc +
push eax  +
lea ecx [ebp-18h] +
call ??0CString@@QAE@PBG@Z  +
xor ebx ebx +
inc ebx  +
mov [ebp-4] bl +
test edi edi +
jz loc_1003A6E  +
lea eax [ebp-10h] +
jmp loc_1003A89  +
mov eax [ebp-10h] +
mov eax [eax-8] +
dec eax  +
push eax  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-10h] +
call ?Right@CString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 2 +
mov [ebp-1Ch] ebx +
push eax  +
lea ecx [ebp-18h] +
call ??YCString@@QAEABV0@ABV0@@Z  +
mov [ebp-4] ebx +
test [ebp-1Ch] bl +
jz loc_1003AA2  +
lea ecx [ebp+0Ch] +
call ??1CString@@QAE@XZ  +
push ebx  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-14h]  +
call sub_1003728  +
test eax eax +
jl loc_1003B17  +
jz loc_1003B17  +
push dword ptr [ebp-10h]  +
push 15h  +
push 0  +
push 24h  +
push dword ptr [ebp-14h]  +
call sub_10066A7  +
add esp 14h +
cmp eax 6 +
jz loc_1003AEA  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
jmp loc_10039D1  +
push esi  +
push dword ptr [ebp+8]  +
call sub_10037F8  +
mov esi eax +
test esi esi +
jge loc_1003B0C  +
push dword ptr [ebp-10h]  +
push 16h  +
push esi  +
push 10h  +
push dword ptr [ebp-14h]  +
call sub_10066A7  +
add esp 14h +
xor eax eax +
test esi esi +
setz al  +
mov esi eax +
jmp loc_1003B20  +
xor ecx ecx +
test eax eax +
setz cl  +
mov esi ecx +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
shr ecx 1 +
push 0  +
pop eax  +
mov edx 80070057h +
jz loc_1003B63  +
cmp ecx 7FFFFFFFh +
jbe loc_1003B65  +
mov eax edx +
test eax eax +
jl loc_1003BC4  +
push edi  +
mov edi [ebp+arg_C] +
shr edi 1 +
cmp edi 7FFFFFFEh +
jbe loc_1003B83  +
mov eax edx +
mov edx [ebp+arg_0] +
xor ecx ecx +
mov [edx] cx +
jmp loc_1003BC3  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_1003BB3  +
mov edx [ebp+arg_8] +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_1003BAF  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_1003BAF  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_1003B97  +
test esi esi +
jnz loc_1003BBA  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push esi  +
push 2Ah  +
push 29h  +
push 0  +
push 65h  +
mov esi ecx +
call MFC42u_6481  +
or dword ptr [esi+64h] 3000h +
mov dword ptr [esi] offset off_10018AC +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_10018AC +
call sub_10032A5  +
test byte ptr [ebp+8] 1 +
jz loc_1003C15  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call ?OnInitDialog@CDialog@@UAEHXZ  +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov eax [eax+4] +
push dword ptr [eax+0CCh]  +
mov ecx esi +
push 3E8h  +
call ?SetDlgItemTextW@CWnd@@QAEXHPBG@Z  +
push 3E9h  +
mov ecx esi +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
push 0  +
push 0FFh  +
push 0C5h  +
push dword ptr [eax+20h]  +
call ds:SendMessageW  +
xor eax eax +
inc eax  +
pop esi  +
retn   +
***
call __EH_prolog3  +
mov [ebp-18h] ecx +
lea ecx [ebp-0Dh] +
call sub_1003334  +
mov ecx [ebp-18h] +
and dword ptr [ebp-4] 0 +
call sub_10035FF  +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov ebx [eax+4] +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
mov ecx [ebp-18h] +
lea eax [ebp-14h] +
push eax  +
mov esi 3E9h +
push esi  +
mov byte ptr [ebp-4] 1 +
call ?GetDlgItemTextW@CWnd@@QBEHHAAVCString@@@Z  +
lea ecx [ebp-14h] +
call ?TrimLeft@CString@@QAEXXZ  +
lea ecx [ebp-14h] +
call ?TrimRight@CString@@QAEXXZ  +
mov eax [ebp-14h] +
mov edi [eax-8] +
test edi edi +
jnz loc_1003D3D  +
lea ecx [ebp-1Ch] +
call ??0CString@@QAE@XZ  +
push 1Fh  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 2 +
call ?LoadStringW@CString@@QAEHI@Z  +
push dword ptr [ebp-1Ch]  +
push 5  +
push edi  +
push 10h  +
call ds:GetActiveWindow  +
push eax  +
call sub_10066A7  +
mov ecx [ebp-18h] +
add esp 14h +
push esi  +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?SetFocus@CWnd@@QAEPAV1@XZ  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0Dh] +
call sub_100334F  +
or eax 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
lea eax [edi-1] +
push eax  +
lea ecx [ebp-14h] +
mov [ebp-1Ch] eax +
call sub_100358F  +
cmp ax 5Ch +
jnz loc_1003D71  +
add edi 0FFFFFFFEh +
push edi  +
lea ecx [ebp-14h] +
call sub_100358F  +
cmp ax 3Ah +
jz loc_1003D71  +
push 0  +
push dword ptr [ebp-1Ch]  +
lea ecx [ebp-14h] +
call ?SetAt@CString@@QAEXHG@Z  +
push dword ptr [ebp-14h]  +
call sub_10036F2  +
test eax eax +
jnz loc_1003DA7  +
push 6  +
push 0  +
push 10h  +
call ds:GetActiveWindow  +
push eax  +
call sub_10066A7  +
mov ecx [ebp-18h] +
add esp 10h +
push esi  +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?SetFocus@CWnd@@QAEPAV1@XZ  +
jmp loc_1003D1C  +
mov edx [ebx+0E4h] +
xor edi edi +
cmp edx edi +
jz loc_1003E17  +
mov eax [ebp-14h] +
lea ecx [eax+6] +
mov [ebp-24h] eax +
mov [ebp-20h] ecx +
cmp [ecx] di +
jz loc_1003E1A  +
push eax  +
call edx  +
mov [ebp-1Ch] eax +
test eax eax +
jnz loc_1003E10  +
push 5Ch  +
push dword ptr [ebp-20h]  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_1003DE5  +
push 5Ch  +
pop ecx  +
mov [edi] cx +
test eax eax +
jz loc_1003E00  +
push dword ptr [ebp-24h]  +
xor ecx ecx +
mov edi eax +
mov [eax] cx +
call dword ptr [ebx+0E4h]  +
mov [ebp-1Ch] eax +
test eax eax +
jz loc_1003DCE  +
cmp dword ptr [ebp-1Ch] 0 +
jz loc_1003E17  +
test edi edi +
jz loc_1003E10  +
push 5Ch  +
pop eax  +
mov [edi] ax +
push 11h  +
jmp loc_1003D7F  +
mov eax [ebp-14h] +
mov ecx [ebx+0CCh] +
push eax  +
push ecx  +
call sub_100398A  +
test eax eax +
jnz loc_1003E5D  +
mov ecx [ebp-18h] +
push esi  +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?SetFocus@CWnd@@QAEPAV1@XZ  +
or esi 0FFFFFFFFh +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0Dh] +
call sub_100334F  +
mov eax esi +
jmp loc_1003D37  +
lea eax [ebp-14h] +
push eax  +
lea ecx [ebx+0E8h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov ecx [ebp-18h] +
call ?OnWizardNext@CPropertyPage@@UAEJXZ  +
mov esi eax +
jmp loc_1003E3E  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov esi ds:GetParent +
mov ebx [eax+4] +
push 3  +
push dword ptr [edi+20h]  +
call esi  +
push eax  +
call ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z  +
mov ecx eax +
call sub_10033A1  +
cmp dword ptr [ebx+110h] 0 +
jnz loc_1003F23  +
push dword ptr [ebx+108h]  +
push 3024h  +
push dword ptr [edi+20h]  +
call esi  +
push eax  +
call ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z  +
mov ecx eax +
call ?SetDlgItemTextW@CWnd@@QAEXHPBG@Z  +
push dword ptr [edi+20h]  +
call esi  +
push eax  +
call ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z  +
push 5  +
push 3023h  +
mov ecx eax +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?ShowWindow@CWnd@@QAEHH@Z  +
push dword ptr [edi+20h]  +
call esi  +
push eax  +
call ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z  +
xor esi esi +
inc esi  +
push esi  +
push 2  +
mov ecx eax +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push dword ptr [ebx+0E8h]  +
mov ecx edi +
push 3E9h  +
call ?SetDlgItemTextW@CWnd@@QAEXHPBG@Z  +
mov [ebx+110h] esi +
mov ecx edi +
call ?OnSetActive@CPropertyPage@@UAEHXZ  +
push 0  +
push 0  +
push 8002h  +
push dword ptr [edi+20h]  +
mov esi eax +
call ds:PostMessageW  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0DCh +
mov eax dword_100A278 +
xor eax ebp +
mov [ebp-4] eax +
and dword ptr [ebp-0DCh] 0 +
push ebx  +
mov ebx [ebp+0Ch] +
lea eax [ebp-0D8h] +
push eax  +
push 68h  +
call ds:GetLogicalDriveStringsW  +
test eax eax +
jnz loc_1003F98  +
call ds:GetLastError  +
test eax eax +
jle loc_1003F90  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-0DCh] eax +
jmp loc_1003FF3  +
lea ecx [eax+1] +
mov eax [ebp+8] +
cmp ecx eax +
jbe loc_1003FAE  +
mov dword ptr [ebp-0DCh] 80070057h +
jmp loc_1003FF3  +
push esi  +
push edi  +
lea edi [eax+eax] +
push edi  +
push 0  +
push ebx  +
call memset  +
add esp 0Ch +
cmp word ptr [ebp-0D8h] 0 +
lea esi [ebp-0D8h] +
jz loc_1003FF1  +
push esi  +
call ds:GetDriveTypeW  +
cmp eax 4 +
jz loc_1003FE8  +
push 8  +
push esi  +
push edi  +
push ebx  +
call sub_1003B47  +
add ebx 8 +
add esi 8 +
cmp word ptr [esi] 0 +
jnz loc_1003FCF  +
pop edi  +
pop esi  +
mov ecx [ebp-4] +
mov eax [ebp-0DCh] +
xor ecx ebp +
pop ebx  +
call sub_10073ED  +
leave   +
retn 8  +
***
call __EH_prolog3_GS  +
mov eax [ebp+8] +
mov edi [ebp+0Ch] +
mov [ebp-0F8h] eax +
mov eax [ebp+10h] +
push 0D2h  +
mov [ebp-104h] eax +
xor ebx ebx +
lea eax [ebp-0E4h] +
push ebx  +
push eax  +
mov [ebp-100h] edi +
call memset  +
add esp 0Ch +
lea ecx [ebp-0E8h] +
call ??0CString@@QAE@XZ  +
cmp word ptr [edi] 5Ch +
mov [ebp-4] ebx +
jnz loc_1004077  +
cmp word ptr [edi+2] 5Ch +
jnz loc_1004077  +
push edi  +
lea ecx [ebp-0E8h] +
call ??4CString@@QAEABV0@PBG@Z  +
jmp loc_1004093  +
push offset asc_1001618  +
lea ecx [ebp-0E8h] +
call ??4CString@@QAEABV0@PBG@Z  +
push edi  +
lea ecx [ebp-0E8h] +
call ??YCString@@QAEABV0@PBG@Z  +
push 2  +
push ebx  +
call ds:CoInitializeEx  +
mov esi eax +
cmp esi ebx +
jl loc_1004225  +
lea eax [ebp-0F0h] +
push eax  +
call ds:SHGetMalloc  +
mov esi eax +
cmp esi ebx +
jl loc_100421B  +
lea eax [ebp-0FCh] +
push eax  +
call ds:SHGetDesktopFolder  +
mov esi eax +
cmp esi ebx +
jl loc_100420F  +
push edi  +
call sub_100672B  +
test eax eax +
jz loc_1004108  +
lea eax [ebp-0F4h] +
push eax  +
push 11h  +
push ebx  +
call ds:SHGetSpecialFolderLocation  +
mov esi eax +
cmp esi ebx +
jl loc_1004203  +
lea eax [ebp-0E4h] +
push eax  +
push 69h  +
call near ptr byte_1003F48+1  +
jmp loc_100412A  +
mov eax [ebp-0FCh] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-0F4h] +
push edx  +
push ebx  +
push dword ptr [ebp-0E8h]  +
push ebx  +
push dword ptr [ebp-0F8h]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jl loc_1004203  +
lea ecx [ebp-0ECh] +
call ??0CString@@QAE@XZ  +
push 0Ah  +
lea ecx [ebp-0ECh] +
mov byte ptr [ebp-4] 1 +
call ?LoadStringW@CString@@QAEHI@Z  +
xor eax eax +
push 8  +
pop ecx  +
lea edi [ebp-124h] +
stos   +
mov eax [ebp-0F8h] +
mov [ebp-124h] eax +
mov eax [ebp-0ECh] +
mov [ebp-118h] eax +
mov eax [ebp-0F4h] +
mov [ebp-11Ch] ebx +
mov [ebp-120h] eax +
mov dword ptr [ebp-114h] 8071h +
mov dword ptr [ebp-110h] offset loc_1003660 +
cmp [ebp-0E4h] bx +
jz loc_10041B0  +
lea eax [ebp-0E4h] +
mov [ebp-10Ch] eax +
lea eax [ebp-124h] +
push eax  +
call ds:SHBrowseForFolderW  +
mov edi eax +
cmp edi ebx +
jz loc_10041DD  +
push dword ptr [ebp-104h]  +
push edi  +
call ds:SHGetPathFromIDListW  +
mov eax [ebp-0F0h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp-0F0h] +
push dword ptr [ebp-0F4h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
lea ecx [ebp-0ECh] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
mov edi [ebp-100h] +
mov eax [ebp-0FCh] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-0F0h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
call ds:CoUninitialize  +
cmp esi ebx +
jge loc_100423A  +
push edi  +
push 0Bh  +
push esi  +
push 30h  +
call ds:GetActiveWindow  +
push eax  +
call sub_10066A7  +
add esp 14h +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0E8h] +
call ??1CString@@QAE@XZ  +
call sub_10074C9  +
retn 0Ch  +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_3 +
call __EH_prolog3  +
push 98h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_1004280  +
call sub_1003BCD  +
call __EH_epilog3  +
retn   +
***
mov esi ds:wcschr +
lea eax [ebp-41Ch] +
push 5Ch  +
push eax  +
call esi  +
mov edi eax +
inc edi  +
inc edi  +
push 5Ch  +
push edi  +
call esi  +
mov esi eax +
add esp 10h +
cmp esi ebx +
jz loc_1004353  +
cmp [esi] bx +
jz loc_1004353  +
xor eax eax +
mov [esi] ax +
inc esi  +
inc esi  +
lea eax [ebp-42Ch] +
push eax  +
push 2  +
push edi  +
push dword ptr [ebp-43Ch]  +
mov [ebp-42Ch] ebx +
call NetShareGetInfo  +
test eax eax +
jnz loc_1004415  +
mov eax [ebp-42Ch] +
push dword ptr [eax+18h]  +
lea ecx [ebp-424h] +
call ??4CString@@QAEABV0@PBG@Z  +
cmp esi ebx +
jz loc_100440A  +
cmp [esi] bx +
jz loc_100440A  +
push 1  +
push 5Ch  +
lea ecx [ebp-430h] +
call ??0CString@@QAE@GH@Z  +
push 1  +
lea eax [ebp-438h] +
push eax  +
lea ecx [ebp-424h] +
mov byte ptr [ebp-4] 1 +
call ?Right@CString@@QBE?AV1@H@Z  +
push dword ptr [eax]  +
lea ecx [ebp-430h] +
call sub_100271C  +
test eax eax +
lea ecx [ebp-438h] +
setnz byte ptr [ebp-425h]  +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-430h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
cmp [ebp-425h] bl +
jz loc_10043FE  +
push 5Ch  +
lea ecx [ebp-424h] +
call ??YCString@@QAEABV0@G@Z  +
push esi  +
lea ecx [ebp-424h] +
call ??YCString@@QAEABV0@PBG@Z  +
push dword ptr [ebp-42Ch]  +
call NetApiBufferFree  +
mov eax [ebp-424h] +
cmp [eax-8] ebx +
jz loc_1004431  +
mov ecx [ebp-434h] +
push eax  +
push 3E9h  +
call ?SetDlgItemTextW@CWnd@@QAEXHPBG@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-424h] +
call ??1CString@@QAE@XZ  +
call sub_10074C9  +
retn   +
***
mov eax offset off_10019C0 +
retn   +
***
mov dword ptr [ecx] offset off_1001A54 +
jmp sub_10032A5  +
***
retn   +
***
push 3EAh  +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?SetFocus@CWnd@@QAEPAV1@XZ  +
xor eax eax +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_100A278 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push 0  +
push 104h  +
lea ecx [ebp+var_20C] +
push ecx  +
lea ecx [ebp+var_210] +
push ecx  +
push eax  +
call NetpIsRemote  +
test eax eax +
jnz loc_10044EA  +
cmp [ebp+var_210] 0FFFFFFFFh +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push esi  +
jnz loc_10044E5  +
lea eax [ebp+var_20C] +
push eax  +
call NetpsNameValidate  +
jmp loc_10044EA  +
call NetpwNameValidate  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_10073ED  +
leave   +
retn 10h  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
push 2Ch  +
push 2Bh  +
push 0  +
push 66h  +
call MFC42u_6481  +
and dword ptr [ebp-4] 0 +
or dword ptr [esi+64h] 3000h +
mov dword ptr [esi] offset off_1001A54 +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov eax [eax+4] +
mov ecx [eax+0DCh] +
mov [esi+98h] ecx +
mov dword ptr [eax+0F4h] 1 +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1001A54 +
call sub_10032A5  +
test byte ptr [ebp+8] 1 +
jz loc_1004578  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
call ?OnInitDialog@CDialog@@UAEHXZ  +
push 3EAh  +
mov ecx ebx +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov esi ds:SendMessageW +
push 0  +
push 50h  +
mov edi 0C5h +
push edi  +
push dword ptr [eax+20h]  +
call esi  +
push 3F9h  +
mov ecx ebx +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
push 0  +
push 104h  +
push edi  +
push dword ptr [eax+20h]  +
call esi  +
push 3EBh  +
mov ecx ebx +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
push 0  +
push 100h  +
push edi  +
push dword ptr [eax+20h]  +
call esi  +
xor edi edi +
cmp [ebx+98h] edi +
jnz loc_100463F  +
push edi  +
push 3FAh  +
mov ecx ebx +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push offset dword_1001B4C  +
mov esi 3FBh +
push esi  +
mov ecx ebx +
call ?SetDlgItemTextW@CWnd@@QAEXHPBG@Z  +
push edi  +
push esi  +
mov ecx ebx +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push edi  +
push 3FCh  +
mov ecx ebx +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?EnableWindow@CWnd@@QAEHH@Z  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
cmp dword ptr [esi+98h] 0 +
jz loc_10046B5  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov eax [esi+9Ch] +
and dword ptr [ebp-4] 0 +
and eax 30h +
jz loc_1004690  +
cmp eax 10h +
jz loc_100468C  +
cmp eax 20h +
jz loc_100468C  +
cmp eax 30h +
jnz loc_100469A  +
push 27h  +
jmp loc_1004692  +
push 26h  +
jmp loc_1004692  +
push 25h  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push dword ptr [ebp-10h]  +
mov ecx esi +
push 3FBh  +
call ?SetDlgItemTextW@CWnd@@QAEXHPBG@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push offset aFilemgmt_dll  +
mov esi ecx +
call ds:LoadLibraryW  +
mov ebx eax +
test ebx ebx +
jz loc_100470C  +
push edi  +
push offset aCachesettingsd  +
push ebx  +
call ds:GetProcAddress  +
mov edi eax +
test edi edi +
jz loc_1004704  +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov eax [eax+4] +
add eax 0CCh +
push eax  +
lea eax [esi+9Ch] +
push eax  +
push dword ptr [esi+20h]  +
call edi  +
push ebx  +
call ds:FreeLibrary  +
pop edi  +
mov ecx esi +
pop esi  +
pop ebx  +
jmp sub_100464B  +
***
call __EH_prolog3  +
mov edi ecx +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov esi [eax+4] +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea eax [ebp-14h] +
push eax  +
push 3EAh  +
mov ecx edi +
call ?GetDlgItemTextW@CWnd@@QBEHHAAVCString@@@Z  +
add esi 0D0h +
push esi  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@ABV0@@Z  +
lea eax [ebp-14h] +
push eax  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 1 +
call ??YCString@@QAEABV0@ABV0@@Z  +
push 104h  +
lea eax [ebp-18h] +
push eax  +
lea ecx [ebp-10h] +
call ?Left@CString@@QBE?AV1@H@Z  +
push dword ptr [eax]  +
mov ecx edi +
push 3F9h  +
mov byte ptr [ebp-4] 2 +
call ?SetDlgItemTextW@CWnd@@QAEXHPBG@Z  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov eax [eax+4] +
push [ebp+netname]  +
mov eax [eax+0CCh] +
push eax  +
call sub_100639C  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov esi [eax+4] +
lea ecx [esi+0ECh] +
call ?Empty@CString@@QAEXXZ  +
lea ecx [esi+0F0h] +
call ?Empty@CString@@QAEXXZ  +
and dword ptr [esi+0F8h] 0 +
pop esi  +
retn   +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_3 +
call __EH_prolog3  +
push 0A0h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_100483B  +
call sub_10044FE  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov ebx ecx +
lea ecx [ebp-0Dh] +
call sub_1003334  +
and dword ptr [ebp-4] 0 +
mov ecx ebx +
call sub_10047E2  +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov esi [eax+4] +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
lea eax [ebp-14h] +
push eax  +
mov edi 3EAh +
push edi  +
mov ecx ebx +
mov byte ptr [ebp-4] 1 +
call ?GetDlgItemTextW@CWnd@@QBEHHAAVCString@@@Z  +
lea ecx [ebp-14h] +
call ?TrimLeft@CString@@QAEXXZ  +
lea ecx [ebp-14h] +
call ?TrimRight@CString@@QAEXXZ  +
mov eax [ebp-14h] +
xor edx edx +
cmp [eax-8] edx +
jnz loc_1004910  +
lea ecx [ebp-1Ch] +
call ??0CString@@QAE@XZ  +
push 20h  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 2 +
call ?LoadStringW@CString@@QAEHI@Z  +
push dword ptr [ebp-1Ch]  +
push 5  +
push 0  +
push 10h  +
call ds:GetActiveWindow  +
push eax  +
call sub_10066A7  +
add esp 14h +
push edi  +
mov ecx ebx +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?SetFocus@CWnd@@QAEPAV1@XZ  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0Dh] +
call sub_100334F  +
or eax 0FFFFFFFFh +
call __EH_epilog3  +
retn   +
cmp [esi+0D4h] edx +
jz loc_100491C  +
xor ecx ecx +
jmp loc_1004922  +
mov ecx [esi+0CCh] +
push edx  +
push 9  +
push eax  +
push ecx  +
call sub_100448C  +
push dword ptr [ebp-14h]  +
test eax eax +
jz loc_1004959  +
push 0Dh  +
push 0  +
push 10h  +
call ds:GetActiveWindow  +
push eax  +
call sub_10066A7  +
add esp 14h +
push edi  +
mov ecx ebx +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?SetFocus@CWnd@@QAEPAV1@XZ  +
jmp loc_10048EF  +
mov ecx ebx +
call sub_10047BD  +
test eax eax +
jz loc_10049AD  +
push dword ptr [ebp-14h]  +
push 7  +
push 0  +
push 10h  +
call ds:GetActiveWindow  +
push eax  +
call sub_10066A7  +
add esp 14h +
push edi  +
mov ecx ebx +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?SetFocus@CWnd@@QAEPAV1@XZ  +
or esi 0FFFFFFFFh +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0Dh] +
call sub_100334F  +
mov eax esi +
jmp loc_100490A  +
lea eax [ebp-14h] +
push eax  +
lea ecx [esi+0ECh] +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-18h] +
call ??0CString@@QAE@XZ  +
lea eax [ebp-18h] +
push eax  +
push 3EBh  +
mov ecx ebx +
mov byte ptr [ebp-4] 3 +
call ?GetDlgItemTextW@CWnd@@QBEHHAAVCString@@@Z  +
lea ecx [ebp-18h] +
call ?TrimLeft@CString@@QAEXXZ  +
lea ecx [ebp-18h] +
call ?TrimRight@CString@@QAEXXZ  +
lea eax [ebp-18h] +
push eax  +
lea ecx [esi+0F0h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
mov eax [ebx+9Ch] +
mov ecx ebx +
mov [esi+0F8h] eax +
call ?OnWizardNext@CPropertyPage@@UAEJXZ  +
lea ecx [ebp-18h] +
mov esi eax +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
jmp loc_100498E  +
***
call __EH_prolog3  +
mov edi ecx +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov esi [eax+4] +
push dword ptr [esi+108h]  +
push 3024h  +
push dword ptr [edi+20h]  +
call ds:GetParent  +
push eax  +
call ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z  +
mov ecx eax +
call ?SetDlgItemTextW@CWnd@@QAEXHPBG@Z  +
cmp dword ptr [esi+114h] 0 +
jnz loc_1004B51  +
push dword ptr [esi+0F0h]  +
mov ecx edi +
push 3EBh  +
call ?SetDlgItemTextW@CWnd@@QAEXHPBG@Z  +
mov eax [esi+0F8h] +
mov ecx edi +
mov [edi+9Ch] eax +
call sub_100464B  +
push dword ptr [esi+0ECh]  +
mov ebx 3EAh +
push ebx  +
mov ecx edi +
call ?SetDlgItemTextW@CWnd@@QAEXHPBG@Z  +
push 3  +
lea eax [ebp-14h] +
push eax  +
lea ecx [esi+0E8h] +
call ?Mid@CString@@QBE?AV1@H@Z  +
and dword ptr [ebp-4] 0 +
push 5Ch  +
lea ecx [ebp-14h] +
call ?ReverseFind@CString@@QBEHG@Z  +
lea ecx [ebp-10h] +
mov [ebp-18h] eax +
call ??0CString@@QAE@XZ  +
mov eax [ebp-18h] +
mov byte ptr [ebp-4] 1 +
test eax eax +
jnz loc_1004AE1  +
lea eax [ebp-14h] +
push eax  +
lea ecx [ebp-10h] +
call ??4CString@@QAEABV0@ABV0@@Z  +
jmp loc_1004B08  +
inc eax  +
push eax  +
lea eax [ebp-18h] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CString@@QBE?AV1@H@Z  +
push eax  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 2 +
call ??4CString@@QAEABV0@ABV0@@Z  +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
mov eax [ebp-10h] +
cmp dword ptr [eax-8] 50h +
jg loc_1004B28  +
push eax  +
mov ecx edi +
call sub_10047BD  +
test eax eax +
jnz loc_1004B28  +
push dword ptr [ebp-10h]  +
mov ecx edi +
push ebx  +
call ?SetDlgItemTextW@CWnd@@QAEXHPBG@Z  +
mov ecx edi +
call sub_100471A  +
lea ecx [ebp-10h] +
mov dword ptr [esi+114h] 1 +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov ecx edi +
call ?OnSetActive@CPropertyPage@@UAEHXZ  +
push 0  +
push 0  +
push 8002h  +
push dword ptr [edi+20h]  +
mov esi eax +
call ds:PostMessageW  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov eax offset off_1001B80 +
retn   +
***
mov dword ptr [ecx] offset off_1001C54 +
jmp sub_10032A5  +
***
mov eax ds:?messageMap@CPropertyPage@@1UAFX_MSGMAP@@B +
retn   +
***
retn   +
***
call __EH_prolog3  +
mov esi ecx +
call ?OnInitDialog@CDialog@@UAEHXZ  +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov eax [eax+4] +
cmp dword ptr [eax+0D8h] 0 +
jz loc_1004C30  +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
push 3Eh  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 1 +
call ?LoadStringW@CString@@QAEHI@Z  +
push 3Fh  +
lea ecx [ebp-10h] +
call ?LoadStringW@CString@@QAEHI@Z  +
push dword ptr [ebp-14h]  +
mov ecx esi +
push 3F2h  +
call ?SetDlgItemTextW@CWnd@@QAEXHPBG@Z  +
push dword ptr [ebp-10h]  +
mov ecx esi +
push 3F3h  +
call ?SetDlgItemTextW@CWnd@@QAEXHPBG@Z  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn   +
***
push 1  +
push 3F5h  +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?EnableWindow@CWnd@@QAEHH@Z  +
retn   +
***
mov edi edi +
push esi  +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov eax [eax+4] +
lea esi [eax+11Ch] +
mov eax [esi] +
test eax eax +
jz loc_1004C78  +
push eax  +
call ds:LocalFree  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
call __EH_prolog3  +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov esi [eax+4] +
xor ebx ebx +
lea ecx [ebp-10h] +
mov [ebp-18h] ebx +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-1Ch] +
mov [ebp-4] ebx +
call ??0CString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
cmp [esi+0F4h] ebx +
jz loc_1004D5C  +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
push 0Eh  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 2 +
call ?LoadStringW@CString@@QAEHI@Z  +
push dword ptr [esi+11Ch]  +
mov eax [esi+0E8h] +
mov ecx [esi+0F0h] +
mov edx [esi+0ECh] +
mov edi [esi+0CCh] +
push eax  +
push ecx  +
push edx  +
push edi  +
call sub_10063D1  +
cmp eax ebx +
jz loc_1004D08  +
lea ecx [ebp-10h] +
push ecx  +
push eax  +
call sub_10064EA  +
jmp loc_1004D50  +
mov dword ptr [ebp-18h] 1 +
cmp [esi+0D4h] ebx +
jz loc_1004D2F  +
mov eax [esi+0E8h] +
push ebx  +
push eax  +
push 1005h  +
push 200h  +
call ds:SHChangeNotify  +
cmp [esi+0DCh] ebx +
jz loc_1004D50  +
push dword ptr [esi+0F8h]  +
mov eax [esi+0ECh] +
mov ecx [esi+0CCh] +
push eax  +
push ecx  +
call sub_1006427  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea edi [esi+0ECh] +
push edi  +
lea eax [esi+0D0h] +
push eax  +
lea eax [ebp-14h] +
push eax  +
call ??H@YG?AVCString@@ABV0@0@Z  +
push dword ptr [eax]  +
lea eax [esi+104h] +
push dword ptr [edi]  +
mov byte ptr [ebp-4] 3 +
push dword ptr [esi+0E8h]  +
push dword ptr [esi+0CCh]  +
push 30h  +
push eax  +
call ?FormatMessageW@CString@@QAAXIZZ  +
add esp 18h +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+0FCh] +
cmp [ebp-18h] ebx +
jnz loc_1004DCC  +
push 36h  +
call ?LoadStringW@CString@@QAEHI@Z  +
push dword ptr [ebp-10h]  +
add esi 100h +
push 3Ah  +
push esi  +
call ?FormatMessageW@CString@@QAAXIZZ  +
add esp 0Ch +
jmp loc_1004DE0  +
push 34h  +
call ?LoadStringW@CString@@QAEHI@Z  +
push 37h  +
lea ecx [esi+100h] +
call ?LoadStringW@CString@@QAEHI@Z  +
lea ecx [ebp-1Ch] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
push 43h  +
push 42h  +
push 0  +
push 7D4h  +
call MFC42u_6481  +
and dword ptr [ebp-4] 0 +
or dword ptr [esi+64h] 3000h +
push 42h  +
lea ecx [esi+90h] +
mov dword ptr [esi] offset off_1001C54 +
call ?LoadStringW@CString@@QAEHI@Z  +
push 43h  +
lea ecx [esi+94h] +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1001C54 +
call sub_10032A5  +
test byte ptr [ebp+8] 1 +
jz loc_1004E7B  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1004C57  +
push 0  +
push 3F5h  +
mov ecx esi +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?EnableWindow@CWnd@@QAEHH@Z  +
pop esi  +
retn   +
***
push 54h  +
mov eax offset dword_1008350 +
call __EH_prolog3  +
mov ebx ecx +
lea ecx [ebp-0Dh] +
call sub_1003334  +
xor edi edi +
push 2  +
push edi  +
mov [ebp-4] edi +
call ds:CoInitializeEx  +
cmp eax edi +
mov [ebp-18h] eax +
jl loc_100509D  +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov esi [eax+4] +
lea ecx [ebp-20h] +
mov dword ptr [ebp-24h] 1 +
call ??0CString@@QAE@XZ  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@XZ  +
push 1Dh  +
lea ecx [ebp-20h] +
mov byte ptr [ebp-4] 2 +
call ?LoadStringW@CString@@QAEHI@Z  +
push 1Bh  +
lea ecx [ebp-1Ch] +
call ?LoadStringW@CString@@QAEHI@Z  +
push 1Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
mov byte ptr [ebp-4] 3 +
cmp ecx edi +
jz loc_1004F3C  +
push dword ptr [esi+11Ch]  +
call sub_1006304  +
mov [ebp-14h] eax +
jmp loc_1004F3F  +
mov [ebp-14h] edi +
mov byte ptr [ebp-4] 2 +
cmp [ebp-14h] edi +
jnz loc_1004F61  +
push 1Ch  +
push 8007000Eh  +
push 30h  +
push dword ptr [ebx+20h]  +
call sub_10066A7  +
add esp 10h +
jmp loc_100507F  +
push dword ptr [ebp-1Ch]  +
mov eax [esi+0ECh] +
mov ecx [esi+0CCh] +
push eax  +
push ecx  +
mov ecx [ebp-14h] +
call sub_1005C81  +
push dword ptr [ebp-14h]  +
call ds:CreateSecurityPage  +
mov [ebp-2Ch] eax +
cmp eax edi +
jnz loc_1004FB1  +
call ds:GetLastError  +
cmp eax edi +
jle loc_1004F9E  +
and eax 0FFFFh +
or eax 80070000h +
push 1Ch  +
push eax  +
push 30h  +
push dword ptr [ebx+20h]  +
mov [ebp-18h] eax +
call sub_10066A7  +
add esp 10h +
cmp [ebp-18h] edi +
jl loc_1005076  +
push 18h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-18h] ecx +
mov byte ptr [ebp-4] 4 +
cmp ecx edi +
jz loc_1004FD6  +
call sub_10061A8  +
mov edi eax +
mov byte ptr [ebp-4] 2 +
test edi edi +
jnz loc_1004FFD  +
push 1Ch  +
push 8007000Eh  +
push 30h  +
push dword ptr [ebx+20h]  +
call sub_10066A7  +
add esp 10h +
push dword ptr [ebp-2Ch]  +
call ds:DestroyPropertySheetPage  +
jmp loc_1005076  +
mov eax [esi+0E8h] +
mov esi [esi+0CCh] +
push eax  +
push esi  +
mov ecx edi +
call sub_1005EFA  +
push edi  +
lea eax [ebp-28h] +
push eax  +
call sub_1005FF7  +
test eax eax +
jl loc_1005027  +
mov dword ptr [ebp-24h] 2 +
push 34h  +
pop esi  +
push esi  +
lea eax [ebp-60h] +
push 0  +
push eax  +
call memset  +
mov eax [ebx+20h] +
add esp 0Ch +
mov [ebp-60h] esi +
mov dword ptr [ebp-5Ch] 80h +
mov [ebp-58h] eax +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov eax [eax+0Ch] +
mov [ebp-54h] eax +
mov eax [ebp-20h] +
mov [ebp-4Ch] eax +
mov eax [ebp-24h] +
mov [ebp-48h] eax +
lea eax [ebp-2Ch] +
mov [ebp-40h] eax +
lea eax [ebp-60h] +
push eax  +
call ds:PropertySheetW  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
mov eax [ebp-14h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
call ds:CoUninitialize  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [ebp-20h] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0Dh] +
call sub_100334F  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov [ebp-14h] ecx +
lea ecx [ebp-0Dh] +
call sub_1003334  +
and dword ptr [ebp-4] 0 +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov ecx [ebp-14h] +
mov esi [eax+4] +
push 3F4h  +
mov edi 3F1h +
push edi  +
call ?GetCheckedRadioButton@CWnd@@QAEHHH@Z  +
sub eax edi +
jz loc_10052C3  +
dec eax  +
jz loc_1005213  +
dec eax  +
jz loc_1005176  +
dec eax  +
jz loc_1005113  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0Dh] +
call sub_100334F  +
xor eax eax +
call __EH_epilog3  +
retn   +
lea edi [esi+11Ch] +
cmp dword ptr [edi] 0 +
jnz loc_100515F  +
lea ecx [ebp-2Ch] +
call sub_10056CC  +
mov esi [esi+0CCh] +
push 1200A9h  +
push offset aEveryone  +
push esi  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 4 +
call sub_10060A9  +
test eax eax +
jl loc_1005153  +
push edi  +
push 1  +
lea eax [ebp-2Ch] +
push eax  +
call sub_10057A8  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 0 +
call sub_1005707  +
mov ecx [ebp-14h] +
call sub_1004C7F  +
mov ecx [ebp-14h] +
call ?OnWizardNext@CPropertyPage@@UAEJXZ  +
mov esi eax +
jmp loc_100532B  +
push offset sub_1005707  +
push offset sub_10056CC  +
push 2  +
push 14h  +
lea eax [ebp-40h] +
push eax  +
call ??_L@YGXPAXIHP6EX0@Z1@Z  +
mov eax [esi+0CCh] +
mov edi 1F01FFh +
push edi  +
push offset aAdministrators  +
push eax  +
lea ecx [ebp-40h] +
mov byte ptr [ebp-4] 3 +
mov dword ptr [ebp-18h] 1 +
call sub_10060A9  +
mov ebx eax +
test ebx ebx +
jl loc_10051F8  +
cmp dword ptr [esi+0D8h] 0 +
jz loc_10051DF  +
mov eax [esi+0CCh] +
push edi  +
push offset aSbsFolderOpera  +
push eax  +
lea ecx [ebp-2Ch] +
mov dword ptr [ebp-18h] 2 +
call sub_10060A9  +
mov ebx eax +
test ebx ebx +
jl loc_10051F8  +
add esi 11Ch +
push esi  +
push dword ptr [ebp-18h]  +
lea eax [ebp-40h] +
push eax  +
call sub_10057A8  +
mov ebx eax +
push offset sub_1005707  +
push 2  +
lea eax [ebp-40h] +
push 14h  +
push eax  +
mov byte ptr [ebp-4] 0 +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
jmp loc_100530E  +
push offset sub_1005707  +
push offset sub_10056CC  +
push 3  +
push 14h  +
lea eax [ebp-54h] +
push eax  +
call ??_L@YGXPAXIHP6EX0@Z1@Z  +
mov eax [esi+0CCh] +
push 1200A9h  +
push offset aEveryone  +
push eax  +
lea ecx [ebp-54h] +
mov byte ptr [ebp-4] 2 +
call sub_10060A9  +
mov ebx eax +
test ebx ebx +
jl loc_10052B4  +
mov eax [esi+0CCh] +
mov edi 1F01FFh +
push edi  +
push offset aAdministrators  +
push eax  +
lea ecx [ebp-40h] +
mov dword ptr [ebp-18h] 2 +
call sub_10060A9  +
mov ebx eax +
test ebx ebx +
jl loc_10052B4  +
cmp dword ptr [esi+0D8h] 0 +
jz loc_100529B  +
mov eax [esi+0CCh] +
push edi  +
push offset aSbsFolderOpera  +
push eax  +
lea ecx [ebp-2Ch] +
mov dword ptr [ebp-18h] 3 +
call sub_10060A9  +
mov ebx eax +
test ebx ebx +
jl loc_10052B4  +
add esi 11Ch +
push esi  +
push dword ptr [ebp-18h]  +
lea eax [ebp-54h] +
push eax  +
call sub_10057A8  +
mov ebx eax +
push offset sub_1005707  +
push 3  +
lea eax [ebp-54h] +
jmp loc_1005202  +
lea ecx [ebp-2Ch] +
call sub_10056CC  +
mov eax [esi+0CCh] +
push 1200A9h  +
push offset aEveryone  +
push eax  +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 1 +
call sub_10060A9  +
mov ebx eax +
test ebx ebx +
jl loc_1005302  +
add esi 11Ch +
push esi  +
push 1  +
lea eax [ebp-2Ch] +
push eax  +
call sub_10057A8  +
mov ebx eax +
lea ecx [ebp-2Ch] +
mov byte ptr [ebp-4] 0 +
call sub_1005707  +
test ebx ebx +
jge loc_100515F  +
mov eax [ebp-14h] +
push 0Ch  +
push ebx  +
push 10h  +
push dword ptr [eax+20h]  +
call sub_10066A7  +
add esp 10h +
xor esi esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0Dh] +
call sub_100334F  +
mov eax esi +
jmp loc_100510D  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov edi [eax+4] +
push dword ptr [edi+10Ch]  +
push 3024h  +
push dword ptr [ebx+20h]  +
call ds:GetParent  +
push eax  +
call ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z  +
mov ecx eax +
call ?SetDlgItemTextW@CWnd@@QAEXHPBG@Z  +
push 1  +
mov esi 3F1h +
push esi  +
mov ecx ebx +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push 1  +
push 3F2h  +
mov ecx ebx +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push 1  +
push 3F3h  +
mov ecx ebx +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?EnableWindow@CWnd@@QAEHH@Z  +
add edi 118h +
cmp dword ptr [edi] 0 +
jnz loc_10053D9  +
push esi  +
push 3F4h  +
push esi  +
mov ecx ebx +
call ?CheckRadioButton@CWnd@@QAEXHHH@Z  +
mov ecx ebx +
call sub_1004E87  +
mov dword ptr [edi] 1 +
pop edi  +
pop esi  +
mov ecx ebx +
pop ebx  +
jmp ?OnSetActive@CPropertyPage@@UAEHXZ  +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_3 +
call __EH_prolog3  +
push 98h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_1005412  +
call sub_1004E02  +
call __EH_epilog3  +
retn   +
***
mov eax offset off_1001DAC +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1001E0C +
and dword ptr [ebp-4] 0 +
lea ecx [esi+98h] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_10032A5  +
call __EH_epilog3  +
retn   +
***
retn   +
***
push 404h  +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?SetFocus@CWnd@@QAEPAV1@XZ  +
xor eax eax +
retn 8  +
***
push 0F0h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lParam]  +
push 0  +
push 479h  +
push dword ptr [ecx+20h]  +
call ds:SendMessageW  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
xor edi edi +
push edi  +
push edi  +
push edi  +
push 87h  +
call MFC42u_6481  +
mov [ebp-4] edi +
lea edi [esi+98h] +
mov ecx edi +
mov dword ptr [esi] offset off_1001E0C +
call ??0CString@@QAE@XZ  +
or dword ptr [esi+64h] 800h +
push 28h  +
mov ecx edi +
mov byte ptr [ebp-4] 1 +
call ?LoadStringW@CString@@QAEHI@Z  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1005428  +
test byte ptr [ebp+8] 1 +
jz loc_1005534  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
call ?OnInitDialog@CDialog@@UAEHXZ  +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov eax [eax+4] +
mov esi [eax+0C8h] +
push 401h  +
mov ecx edi +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
push 1  +
push esi  +
push 30h  +
push dword ptr [eax+20h]  +
call ds:SendMessageW  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov esi [eax+4] +
push 404h  +
mov ecx edi +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call sub_100548A  +
cmp eax 1 +
jnz loc_10055B0  +
mov ecx esi +
call sub_1002B8A  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
mov ecx edi +
pop edi  +
pop esi  +
jmp ?OnWizardFinish@CPropertyPage@@UAEHXZ  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov edi ds:GetParent +
mov ebx [eax+4] +
push 4  +
push dword ptr [esi+20h]  +
call edi  +
push eax  +
call ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z  +
mov ecx eax +
call sub_10033A1  +
push dword ptr [esi+98h]  +
push dword ptr [esi+20h]  +
call edi  +
push eax  +
call ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z  +
mov ecx eax +
call sub_10054A2  +
push dword ptr [esi+20h]  +
call edi  +
push eax  +
call ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z  +
push 0  +
push 3023h  +
mov ecx eax +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?ShowWindow@CWnd@@QAEHH@Z  +
push dword ptr [esi+20h]  +
call edi  +
push eax  +
call ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z  +
xor edi edi +
push edi  +
push 2  +
mov ecx eax +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ecx eax +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push dword ptr [ebx+0FCh]  +
mov ecx esi +
push 401h  +
call ?SetDlgItemTextW@CWnd@@QAEXHPBG@Z  +
push dword ptr [ebx+100h]  +
mov ecx esi +
push 402h  +
call ?SetDlgItemTextW@CWnd@@QAEXHPBG@Z  +
push dword ptr [ebx+104h]  +
mov ecx esi +
push 403h  +
call ?SetDlgItemTextW@CWnd@@QAEXHPBG@Z  +
mov ecx esi +
call ?OnSetActive@CPropertyPage@@UAEHXZ  +
push edi  +
push edi  +
push 8002h  +
push dword ptr [esi+20h]  +
mov ebx eax +
call ds:PostMessageW  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
retn   +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_3 +
call __EH_prolog3  +
push 9Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_10056C1  +
call sub_10054C3  +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [esi+4] +
call ??0CString@@QAE@XZ  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
and dword ptr [esi+10h] 0 +
mov eax esi +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov eax [esi+0Ch] +
and dword ptr [ebp-4] 0 +
test eax eax +
jz loc_1005738  +
cmp dword ptr [esi+10h] 0 +
push eax  +
jz loc_1005732  +
call ds:FreeSid  +
jmp loc_1005738  +
call ds:LocalFree  +
lea ecx [esi+4] +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov eax [ecx+0Ch] +
test eax eax +
jz loc_1005765  +
push eax  +
call ds:GetLengthSid  +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ecx+0Ch]  +
push dword ptr [ecx+8]  +
push 2  +
push [ebp+pAcl]  +
call ds:AddAccessAllowedAce  +
test eax eax +
jnz loc_100579D  +
call ds:GetLastError  +
test eax eax +
jle loc_100579F  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_100579F  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
xor esi esi +
cmp [ebp+arg_0] esi +
jz loc_100590B  +
cmp [ebp+arg_4] esi +
jz loc_100590B  +
mov ebx [ebp+arg_8] +
cmp ebx esi +
jz loc_100590B  +
mov eax [ebx] +
cmp eax esi +
jz loc_10057E0  +
push eax  +
call ds:LocalFree  +
mov [ebx] esi +
mov eax [ebp+arg_4] +
push edi  +
push 8  +
mov [ebp+arg_8] esi +
mov [ebp+pAbsoluteSecurityDescriptor] esi +
mov esi [ebp+arg_0] +
pop edi  +
test eax eax +
jbe loc_100580A  +
mov [ebp+pAcl] eax +
mov ecx esi +
call sub_1005756  +
add esi 14h +
dec [ebp+pAcl]  +
lea edi [edi+eax+8] +
jnz loc_10057F7  +
mov esi ds:LocalAlloc +
push edi  +
push 40h  +
call esi  +
mov [ebp+pAcl] eax +
test eax eax +
jz loc_10058BA  +
push 2  +
push edi  +
push eax  +
call ds:InitializeAcl  +
test eax eax +
jz loc_10058BA  +
mov edi [ebp+arg_0] +
and [ebp+arg_0] 0 +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_4] +
jnb loc_1005858  +
push [ebp+pAcl]  +
mov ecx edi +
call sub_100576D  +
add edi 14h +
inc [ebp+arg_0]  +
mov [ebp+arg_8] eax +
test eax eax +
jge loc_1005839  +
cmp [ebp+arg_8] 0 +
jl loc_10058D7  +
push 14h  +
push 40h  +
call esi  +
mov edi eax +
mov [ebp+pAbsoluteSecurityDescriptor] edi +
test edi edi +
jz loc_10058BA  +
push 1  +
push edi  +
call ds:InitializeSecurityDescriptor  +
test eax eax +
jz loc_10058BA  +
push 0  +
push [ebp+pAcl]  +
push 1  +
push edi  +
call ds:SetSecurityDescriptorDacl  +
test eax eax +
jz loc_10058BA  +
and [ebp+dwBufferLength] 0 +
lea eax [ebp+dwBufferLength] +
push eax  +
push dword ptr [ebx]  +
push edi  +
mov edi ds:MakeSelfRelativeSD +
call edi  +
push [ebp+dwBufferLength]  +
push 40h  +
call esi  +
mov [ebx] eax +
test eax eax +
jz loc_10058BA  +
lea ecx [ebp+dwBufferLength] +
push ecx  +
push eax  +
push [ebp+pAbsoluteSecurityDescriptor]  +
call edi  +
test eax eax +
jnz loc_10058D1  +
call ds:GetLastError  +
test eax eax +
jle loc_10058CE  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+arg_8] eax +
cmp [ebp+arg_8] 0 +
jge loc_10058E7  +
mov eax [ebx] +
test eax eax +
jz loc_10058E7  +
push eax  +
call ds:LocalFree  +
and dword ptr [ebx] 0 +
cmp [ebp+pAcl] 0 +
pop edi  +
jz loc_10058F7  +
push [ebp+pAcl]  +
call ds:LocalFree  +
cmp [ebp+pAbsoluteSecurityDescriptor] 0 +
jz loc_1005906  +
push [ebp+pAbsoluteSecurityDescriptor]  +
call ds:LocalFree  +
mov eax [ebp+arg_8] +
jmp loc_1005910  +
mov eax 80070057h +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
call __EH_prolog3_GS  +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
mov edx [ebp+14h] +
mov [ebp-844h] eax +
mov eax [ebp+10h] +
xor ebx ebx +
mov [ebp-834h] ecx +
mov [ebp-830h] eax +
mov [ebp-840h] edx +
cmp ecx ebx +
jz loc_1005C12  +
cmp [ecx] bx +
jz loc_1005C12  +
cmp eax ebx +
jz loc_1005C12  +
cmp edx ebx +
jz loc_1005C12  +
push 8  +
mov [eax] ebx +
pop ecx  +
push dword ptr [ebp-834h]  +
xor eax eax +
lea edi [ebp-868h] +
stos   +
lea ecx [ebp-828h] +
mov [ebp-818h] bl +
mov [ebp-817h] bl +
mov [ebp-816h] bl +
mov [ebp-815h] bl +
mov [ebp-814h] bl +
mov byte ptr [ebp-813h] 5 +
mov [ebp-820h] bl +
mov [ebp-81Fh] bl +
mov [ebp-81Eh] bl +
mov [ebp-81Dh] bl +
mov [ebp-81Ch] bl +
mov byte ptr [ebp-81Bh] 1 +
xor esi esi +
mov [ebp-824h] ebx +
mov [ebp-82Ch] bl +
mov dword ptr [edx] 1 +
call ??0CString@@QAE@PBG@Z  +
lea ecx [ebp-828h] +
mov [ebp-4] ebx +
call ?MakeLower@CString@@QAEXXZ  +
push offset aAdministrators  +
lea ecx [ebp-828h] +
call sub_100271C  +
test eax eax +
jnz loc_1005A2D  +
push 20h  +
lea esi [ebp-818h] +
mov byte ptr [ebp-82Ch] 2 +
pop eax  +
mov dword ptr [ebp-864h] 220h +
jmp loc_1005A9C  +
push offset aEveryone  +
lea ecx [ebp-828h] +
call sub_100271C  +
test eax eax +
jnz loc_1005A50  +
lea esi [ebp-820h] +
mov byte ptr [ebp-82Ch] 1 +
jmp loc_1005A9C  +
push offset aSystem  +
lea ecx [ebp-828h] +
call sub_100271C  +
test eax eax +
jnz loc_1005A68  +
push 12h  +
jmp loc_1005A7E  +
push offset aInteractive  +
lea ecx [ebp-828h] +
call sub_100271C  +
test eax eax +
jnz loc_1005A8E  +
push 4  +
mov byte ptr [ebp-82Ch] 1 +
lea esi [ebp-818h] +
pop eax  +
jmp loc_1005A9C  +
mov eax [ebp-840h] +
mov [eax] ebx +
mov eax [ebp-868h] +
mov ecx [ebp-840h] +
cmp [ecx] ebx +
jz loc_1005AE9  +
push dword ptr [ebp-830h]  +
push dword ptr [ebp-84Ch]  +
push dword ptr [ebp-850h]  +
push dword ptr [ebp-854h]  +
push dword ptr [ebp-858h]  +
push dword ptr [ebp-85Ch]  +
push dword ptr [ebp-860h]  +
push dword ptr [ebp-864h]  +
push eax  +
push dword ptr [ebp-82Ch]  +
push esi  +
call ds:AllocateAndInitializeSid  +
jmp loc_1005BA0  +
mov esi ds:LookupAccountNameW +
lea eax [ebp-848h] +
push eax  +
lea eax [ebp-83Ch] +
push eax  +
lea eax [ebp-810h] +
push eax  +
lea eax [ebp-838h] +
push eax  +
mov eax [ebp-830h] +
push dword ptr [eax]  +
mov edi 400h +
push dword ptr [ebp-834h]  +
mov [ebp-838h] ebx +
push dword ptr [ebp-844h]  +
mov [ebp-83Ch] edi +
call esi  +
call ds:GetLastError  +
mov [ebp-824h] eax +
cmp eax 7Ah +
jnz loc_1005BB0  +
push dword ptr [ebp-838h]  +
mov [ebp-824h] ebx +
push 40h  +
call ds:LocalAlloc  +
mov ecx [ebp-830h] +
mov [ecx] eax +
cmp eax ebx +
jnz loc_1005B6F  +
mov dword ptr [ebp-824h] 8 +
jmp loc_1005BBA  +
lea ecx [ebp-848h] +
push ecx  +
lea ecx [ebp-83Ch] +
push ecx  +
lea ecx [ebp-810h] +
push ecx  +
lea ecx [ebp-838h] +
push ecx  +
push eax  +
push dword ptr [ebp-834h]  +
mov [ebp-83Ch] edi +
push dword ptr [ebp-844h]  +
call esi  +
test eax eax +
jnz loc_1005BEB  +
call ds:GetLastError  +
mov [ebp-824h] eax +
mov esi [ebp-824h] +
cmp esi ebx +
jz loc_1005BEB  +
mov esi [ebp-830h] +
mov eax [esi] +
cmp eax ebx +
jz loc_1005BE1  +
mov ecx [ebp-840h] +
push eax  +
cmp [ecx] ebx +
jz loc_1005BD9  +
call ds:FreeSid  +
jmp loc_1005BDF  +
call ds:LocalFree  +
mov [esi] ebx +
mov esi [ebp-824h] +
cmp esi ebx +
jg loc_1005BF3  +
mov esi [ebp-824h] +
jmp loc_1005BFF  +
and esi 0FFFFh +
or esi 80070000h +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-828h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
jmp loc_1005C17  +
mov eax 80070057h +
call sub_10074C9  +
retn 10h  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1001F40 +
cmp dword ptr [esi+18h] 0 +
mov dword ptr [ebp-4] 1 +
jz loc_1005C56  +
mov eax [esi+14h] +
test eax eax +
jz loc_1005C56  +
push eax  +
call ds:LocalFree  +
lea ecx [esi+10h] +
call ??1CString@@QAE@XZ  +
lea ecx [esi+0Ch] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [esi+8] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
lea ecx [esi+8] +
call ??4CString@@QAEABV0@PBG@Z  +
push [ebp+arg_4]  +
lea ecx [esi+0Ch] +
call ??4CString@@QAEABV0@PBG@Z  +
push [ebp+arg_8]  +
lea ecx [esi+10h] +
call ??4CString@@QAEABV0@PBG@Z  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_1002028 +
xor eax eax +
cmps   +
jz loc_1005CEA  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset sub_1001C3C +
xor eax eax +
cmps   +
jz loc_1005CEA  +
mov eax [ebp+10h] +
and dword ptr [eax] 0 +
mov eax 80004002h +
jmp loc_1005CF7  +
mov eax [ebp+8] +
mov ecx [ebp+10h] +
mov [ecx] eax +
inc dword ptr [eax+4]  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
inc dword ptr [eax+4]  +
mov eax [eax+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1005C24  +
test [ebp+arg_0] 1 +
jz loc_1005D33  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
mov dword ptr [esi] 0A23h +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov eax [eax+0Ch] +
mov [esi+4] eax +
mov eax [ebp+8] +
mov ecx [eax+8] +
mov [esi+8] ecx +
mov ecx [eax+0Ch] +
mov [esi+0Ch] ecx +
mov eax [eax+10h] +
mov [esi+10h] eax +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+14h] +
mov dword ptr [eax] offset off_100A190 +
mov eax [ebp+18h] +
mov dword ptr [eax] 3 +
mov eax [ebp+1Ch] +
mov dword ptr [eax] 2 +
xor eax eax +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset unk_100A1C0  +
push dword ptr [ebp+14h]  +
call ds:MapGenericMask  +
xor eax eax +
pop ebp  +
retn 10h  +
***
xor eax eax +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi dword ptr [ebp+pControl] +
push [ebp+pAbsoluteSecurityDescriptor]  +
xor esi esi +
mov [edi] esi +
call ds:GetSecurityDescriptorLength  +
push eax  +
push 40h  +
mov [ebp+dwBufferLength] eax +
call ds:LocalAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_1005E03  +
call ds:GetLastError  +
mov esi eax +
jmp loc_1005E4C  +
and dword ptr [ebp+pControl] esi +
and [ebp+dwRevision] esi +
lea eax [ebp+dwRevision] +
push eax  +
lea eax [ebp+pControl] +
push eax  +
push [ebp+pAbsoluteSecurityDescriptor]  +
call ds:GetSecurityDescriptorControl  +
test eax eax +
jz loc_1005DF9  +
test dword ptr [ebp+pControl] 8000h +
jz loc_1005E38  +
push [ebp+dwBufferLength]  +
push [ebp+pAbsoluteSecurityDescriptor]  +
push ebx  +
call memcpy  +
add esp 0Ch +
jmp loc_1005E4A  +
lea eax [ebp+dwBufferLength] +
push eax  +
push ebx  +
push [ebp+pAbsoluteSecurityDescriptor]  +
call ds:MakeSelfRelativeSD  +
test eax eax +
jz loc_1005DF9  +
mov [edi] ebx +
test esi esi +
jz loc_1005E6F  +
test ebx ebx +
jz loc_1005E5B  +
push ebx  +
call ds:LocalFree  +
test esi esi +
jle loc_1005E6B  +
and esi 0FFFFh +
or esi 80070000h +
mov eax esi +
jmp loc_1005E71  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_1001F6C +
lea ecx [esi+10h] +
mov dword ptr [ebp-4] 1 +
call ??1CString@@QAE@XZ  +
lea ecx [esi+0Ch] +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [esi+8] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov eax 80004001h +
retn 8  +
***
mov eax 80004001h +
retn 10h  +
***
mov eax 80004001h +
retn 0Ch  +
***
mov eax 80004001h +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
lea ecx [esi+8] +
call ??4CString@@QAEABV0@PBG@Z  +
push [ebp+arg_4]  +
lea ecx [esi+0Ch] +
call ??4CString@@QAEABV0@PBG@Z  +
lea eax [esi+10h] +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1006828  +
push offset szFormat  +
call ds:RegisterClipboardFormatW  +
mov [esi+14h] ax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_1002028 +
xor eax eax +
cmps   +
jz loc_1005F76  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_1002038 +
xor eax eax +
cmps   +
jz loc_1005F76  +
mov eax [ebp+10h] +
and dword ptr [eax] 0 +
mov eax 80004002h +
jmp loc_1005F83  +
mov eax [ebp+8] +
mov ecx [ebp+10h] +
mov [ecx] eax +
inc dword ptr [eax+4]  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1005E7D  +
test [ebp+arg_0] 1 +
jz loc_1005FA8  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ecx+10h]  +
call ds:InternalExtractIconListW  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
neg eax  +
sbb eax eax +
and eax 7FFFBFFBh +
add eax 80004005h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
mov [eax] ecx +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 1  +
xor edi edi +
push edi  +
push offset rclsid  +
mov [ebp+ppv] edi +
call ds:CoCreateInstance  +
mov esi eax +
cmp esi edi +
jl loc_1006074  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push edi  +
push [ebp+arg_4]  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi edi +
jl loc_100606B  +
mov eax [ebp+ppv] +
lea edx [ebp+arg_4] +
push edx  +
push offset loc_1002058  +
mov [ebp+arg_4] edi +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi edi +
jl loc_100606B  +
push [ebp+arg_0]  +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push offset loc_1005FDE  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
mov eax [ebp+arg_4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
lea esi [ecx+11Ch] +
mov eax [esi] +
test eax eax +
jz loc_100609A  +
push eax  +
call ds:LocalFree  +
mov eax [ebp+arg_0] +
mov [esi] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+arg_0]  +
mov esi ecx +
call ??4CString@@QAEABV0@PBG@Z  +
push [ebp+arg_4]  +
lea edi [esi+4] +
mov ecx edi +
call ??4CString@@QAEABV0@PBG@Z  +
mov eax [ebp+arg_8] +
mov edi [edi] +
mov [esi+8] eax +
mov eax [esi] +
lea ecx [esi+10h] +
push ecx  +
add esi 0Ch +
push esi  +
push edi  +
push eax  +
call sub_100591B  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
dec dword ptr [ecx+4]  +
mov eax [ecx+4] +
jnz loc_1006104  +
push 1  +
call sub_1005D19  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+8] +
and dword ptr [ebp-4] 0 +
push esi  +
lea eax [ebp-4] +
push eax  +
push dword ptr [ebp+10h]  +
call sub_1005DCD  +
mov esi eax +
test esi esi +
jl loc_100613F  +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov eax [eax+4] +
push dword ptr [ebp-4]  +
mov ecx eax +
call sub_1006081  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
call __EH_prolog3  +
lea ecx [ebp-20h] +
call sub_10056CC  +
and dword ptr [ebp-4] 0 +
push 1200A9h  +
push offset aEveryone  +
push 0  +
lea ecx [ebp-20h] +
call sub_10060A9  +
mov esi eax +
test esi esi +
jl loc_100618D  +
push dword ptr [ebp+8]  +
lea eax [ebp-20h] +
push 1  +
push eax  +
call sub_10057A8  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-20h] +
call sub_1005707  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
lea ecx [esi+8] +
mov dword ptr [esi] offset off_1001F6C +
mov dword ptr [esi+4] 1 +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [esi+0Ch] +
call ??0CString@@QAE@XZ  +
lea ecx [esi+10h] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@XZ  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
dec dword ptr [ecx+4]  +
mov eax [ecx+4] +
jnz loc_100620C  +
push 1  +
call sub_1005F8E  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov ecx [ebp+8] +
mov ax [ecx+14h] +
mov edx [ebp+0Ch] +
cmp ax [edx] +
jz loc_1006235  +
mov eax 80040064h +
jmp locret_10062FB  +
and dword ptr [ebp+8] 0 +
lea eax [ebp+8] +
push eax  +
call sub_1005FB4  +
mov [ebp-4] eax +
test eax eax +
jl loc_10062F8  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
push edi  +
call ds:SHELL32_16  +
push eax  +
call ds:SHELL32_18  +
push edi  +
mov [ebp+0Ch] eax +
call ds:SHELL32_17  +
mov esi ds:SHELL32_152 +
push edi  +
call esi  +
push dword ptr [ebp+0Ch]  +
mov ebx eax +
call esi  +
mov [ebp-8] eax +
lea eax [eax+ebx+0Ch] +
push eax  +
push 40h  +
call ds:GlobalAlloc  +
mov esi eax +
test esi esi +
jz loc_10062D2  +
push ebx  +
push edi  +
mov edi ds:memmove +
lea eax [esi+0Ch] +
push eax  +
mov dword ptr [esi] 1 +
mov dword ptr [esi+4] 0Ch +
call edi  +
push dword ptr [ebp-8]  +
lea eax [ebx+0Ch] +
push dword ptr [ebp+0Ch]  +
mov [esi+8] eax +
add eax esi +
push eax  +
call edi  +
mov eax [ebp+10h] +
add esp 18h +
and dword ptr [eax+8] 0 +
mov [eax+4] esi +
mov dword ptr [eax] 1 +
jmp loc_10062D9  +
mov dword ptr [ebp-4] 8007000Eh +
cmp dword ptr [ebp+8] 0 +
mov esi ds:SHELL32_155 +
jz loc_10062EA  +
push dword ptr [ebp+8]  +
call esi  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_10062F5  +
push dword ptr [ebp+0Ch]  +
call esi  +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp-4] +
leave   +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
lea ecx [esi+8] +
mov dword ptr [esi] offset off_1001F40 +
mov dword ptr [esi+4] 1 +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [esi+0Ch] +
call ??0CString@@QAE@XZ  +
lea ecx [esi+10h] +
mov byte ptr [ebp-4] 1 +
call ??0CString@@QAE@XZ  +
mov eax [ebp+8] +
xor ecx ecx +
test eax eax +
setz cl  +
mov [esi+14h] eax +
mov eax esi +
mov [esi+18h] ecx +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+10h] +
and dword ptr [ebx] 0 +
push esi  +
push edi  +
mov edi [ebp+8] +
lea esi [edi+14h] +
cmp dword ptr [esi] 0 +
jnz loc_1006386  +
push esi  +
mov ecx edi +
call sub_100614B  +
test eax eax +
jl loc_1006390  +
push ebx  +
push dword ptr [esi]  +
mov ecx edi +
call sub_1005DCD  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
xor esi esi +
push esi  +
push [ebp+netname]  +
mov [ebp+Buffer] esi +
push [ebp+servername]  +
call NetShareGetInfo  +
test eax eax +
jnz loc_10063C5  +
push [ebp+Buffer]  +
inc esi  +
call NetApiBufferFree  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push edi  +
push 0Ah  +
xor eax eax +
pop ecx  +
lea edi [ebp+buf] +
stos   +
mov eax [ebp+parm_err] +
and [ebp+var_24] 0 +
or [ebp+var_18] 0FFFFFFFFh +
and [ebp+parm_err] 0 +
mov dword ptr [ebp+buf] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_20] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_10] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_4] eax +
lea eax [ebp+parm_err] +
push eax  +
lea eax [ebp+buf] +
push eax  +
push 1F6h  +
push [ebp+servername]  +
call NetShareAdd  +
pop edi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+parm_err] +
and [ebp+parm_err] 0 +
mov dword ptr [ebp+buf] eax +
lea eax [ebp+parm_err] +
push eax  +
lea eax [ebp+buf] +
push eax  +
push 3EDh  +
push [ebp+netname]  +
push [ebp+servername]  +
call NetShareSetInfo  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+dwMessageId] esi +
jz loc_10064DB  +
mov eax [ebp+lpLibFileName] +
cmp eax esi +
jz loc_10064DB  +
cmp [eax] si +
jz loc_10064DB  +
cmp [ebp+lpBuffer] esi +
jz loc_10064DB  +
push edi  +
push eax  +
call ds:LoadLibraryW  +
mov edi eax +
cmp edi esi +
jnz loc_100649C  +
call ds:GetLastError  +
cmp eax esi +
jle loc_1006498  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_10064D6  +
push esi  +
push esi  +
push [ebp+lpBuffer]  +
push 400h  +
push [ebp+dwMessageId]  +
push edi  +
push 900h  +
call ds:FormatMessageW  +
test eax eax +
jnz loc_10064CF  +
call ds:GetLastError  +
cmp eax esi +
jle loc_10064CD  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
push edi  +
call ds:FreeLibrary  +
mov eax esi +
pop edi  +
jmp loc_10064E0  +
mov eax 80070057h +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi dword ptr [ebp+Buffer] +
test esi esi +
jnz loc_1006501  +
mov eax 80070057h +
jmp loc_1006590  +
and dword ptr [ebp+Buffer] 0 +
push 0  +
push 0  +
lea eax [ebp+Buffer] +
push eax  +
push 400h  +
push esi  +
push 0  +
push 1100h  +
call ds:FormatMessageW  +
test eax eax +
jnz loc_1006567  +
call ds:GetLastError  +
mov ecx 80070000h +
test eax eax +
jle loc_100653A  +
and eax 0FFFFh +
or eax ecx +
cmp eax 8007013Dh +
jz loc_1006551  +
mov edx esi +
and edx 0FFFF0000h +
cmp edx ecx +
jz loc_1006551  +
test edx edx +
jnz loc_1006563  +
lea eax [ebp+Buffer] +
push eax  +
movzx eax si +
push offset aNetmsg_dll  +
push eax  +
call sub_1006458  +
test eax eax +
jl loc_100657D  +
push dword ptr [ebp+Buffer]  +
mov ecx [ebp+arg_4] +
call ??4CString@@QAEABV0@PBG@Z  +
push dword ptr [ebp+Buffer]  +
call ds:LocalFree  +
jmp loc_100658E  +
push esi  +
push offset a0xX  +
push [ebp+arg_4]  +
call ?Format@CString@@QAAXPBGZZ  +
add esp 0Ch +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
call __EH_prolog3  +
lea ecx [ebp-10h] +
xor ebx ebx +
xor edi edi +
call ??0CString@@QAE@XZ  +
mov esi [ebp+0Ch] +
mov [ebp-4] ebx +
cmp esi ebx +
jz loc_10065D0  +
lea eax [ebp-10h] +
push eax  +
push esi  +
call sub_10064EA  +
mov edi eax +
cmp edi ebx +
jl loc_100667D  +
cmp [ebp+10h] ebx +
jnz loc_10065FC  +
mov ecx [ebp+8] +
cmp esi ebx +
jz loc_10065EA  +
lea eax [ebp-10h] +
push eax  +
call ??4CString@@QAEABV0@ABV0@@Z  +
jmp loc_1006679  +
mov eax [ebp+14h] +
add dword ptr [eax] 4 +
mov eax [eax] +
push dword ptr [eax-4]  +
call ??4CString@@QAEABV0@PBG@Z  +
jmp loc_1006679  +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
push dword ptr [ebp+10h]  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 1 +
call ?LoadStringW@CString@@QAEHI@Z  +
push dword ptr [ebp+14h]  +
lea eax [ebp+0Ch] +
push ebx  +
push eax  +
push ebx  +
push ebx  +
push dword ptr [ebp-14h]  +
mov [ebp+0Ch] ebx +
push 500h  +
call ds:FormatMessageW  +
cmp eax ebx +
jnz loc_100664A  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1006646  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
jmp loc_100666E  +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
call ??4CString@@QAEABV0@PBG@Z  +
cmp esi ebx +
jz loc_1006665  +
mov ecx [ebp+8] +
lea eax [ebp-10h] +
push eax  +
call ??YCString@@QAEABV0@ABV0@@Z  +
push dword ptr [ebp+0Ch]  +
call ds:LocalFree  +
lea ecx [ebp-14h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
cmp edi ebx +
jge loc_100668E  +
push edi  +
push offset a0xX  +
push dword ptr [ebp+8]  +
call ?Format@CString@@QAAXPBGZZ  +
add esp 0Ch +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3  +
lea ecx [ebp-14h] +
call ??0CString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
push 1  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 1 +
call ?LoadStringW@CString@@QAEHI@Z  +
lea eax [ebp+18h] +
mov [ebp-18h] eax +
lea eax [ebp-18h] +
push eax  +
push dword ptr [ebp+14h]  +
lea eax [ebp-10h] +
push dword ptr [ebp+10h]  +
push eax  +
call sub_100659A  +
push dword ptr [ebp+0Ch]  +
and dword ptr [ebp-18h] 0 +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp+8]  +
call ds:MessageBoxW  +
lea ecx [ebp-10h] +
mov esi eax +
mov byte ptr [ebp-4] 0 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_100A278 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+lpString2] edi +
test edi edi +
jz loc_1006810  +
movzx esi word ptr [edi] +
test si si +
jz loc_1006810  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1006764  +
sub eax edx +
sar eax 1 +
cmp eax 2 +
jbe loc_100678C  +
cmp si 5Ch +
jnz loc_100678C  +
cmp [edi+2] si +
jnz loc_100678C  +
add edi 4 +
mov [ebp+lpString2] edi +
push ebx  +
mov ebx ds:GetComputerNameExW +
lea eax [ebp+var_208] +
push eax  +
lea eax [ebp+String1] +
push eax  +
xor esi esi +
push esi  +
mov [ebp+var_208] 100h +
call ebx  +
test eax eax +
jz loc_1006805  +
push edi  +
mov edi ds:lstrcmpiW +
lea eax [ebp+String1] +
push eax  +
call edi  +
mov esi eax +
neg esi  +
sbb esi esi +
inc esi  +
jnz loc_100680B  +
lea eax [ebp+var_208] +
push eax  +
lea eax [ebp+String1] +
push eax  +
push 3  +
mov [ebp+var_208] 100h +
call ebx  +
test eax eax +
jz loc_1006805  +
push [ebp+lpString2]  +
lea eax [ebp+String1] +
push eax  +
call edi  +
mov esi eax +
neg esi  +
sbb esi esi +
inc esi  +
jmp loc_100680B  +
call ds:GetLastError  +
mov eax esi +
pop ebx  +
jmp loc_1006813  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_10073ED  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_100672B  +
test eax eax +
jz loc_1006848  +
push [ebp+arg_4]  +
mov ecx [ebp+arg_8] +
call ??4CString@@QAEABV0@PBG@Z  +
jmp loc_10068A4  +
cmp word ptr [esi] 5Ch +
push edi  +
jnz loc_1006863  +
cmp word ptr [esi+2] 5Ch +
jnz loc_1006863  +
mov edi [ebp+arg_8] +
push esi  +
mov ecx edi +
call ??4CString@@QAEABV0@PBG@Z  +
jmp loc_100687A  +
mov edi [ebp+arg_8] +
push offset asc_1001618  +
mov ecx edi +
call ??4CString@@QAEABV0@PBG@Z  +
push esi  +
mov ecx edi +
call ??YCString@@QAEABV0@PBG@Z  +
push offset asc_10015E8  +
mov ecx edi +
call ??YCString@@QAEABV0@PBG@Z  +
push [ebp+arg_4]  +
mov ecx edi +
call ??YCString@@QAEABV0@PBG@Z  +
push 3Ah  +
mov ecx edi +
call ?Find@CString@@QBEHG@Z  +
push 24h  +
push eax  +
mov ecx edi +
call ?SetAt@CString@@QAEXHG@Z  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
xor esi esi +
push esi  +
lea eax [ebp+totalentries] +
push eax  +
lea eax [ebp+entriesread] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
push [ebp+servername]  +
mov [ebp+var_4] 1 +
mov [ebp+Buffer] esi +
mov [ebp+entriesread] esi +
mov [ebp+totalentries] esi +
call NetServerDiskEnum  +
cmp eax esi +
jnz loc_1006931  +
push edi  +
mov edi [ebp+Buffer] +
mov [ebp+servername] esi +
cmp [ebp+entriesread] esi +
jbe loc_1006926  +
mov esi ds:towupper +
push ebx  +
mov eax [ebp+arg_4] +
movzx eax word ptr [eax] +
push eax  +
call esi  +
mov bx ax +
movzx eax word ptr [edi] +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
cmp ax bx +
jz loc_1006921  +
add edi 6 +
inc [ebp+servername]  +
mov eax [ebp+servername] +
cmp eax [ebp+entriesread] +
jb loc_10068F8  +
jmp loc_1006925  +
and [ebp+var_4] 0 +
pop ebx  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
pop edi  +
jmp loc_1006940  +
jle loc_100693D  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
xor esi esi +
push esi  +
lea ecx [ebp+totalentries] +
push ecx  +
lea ecx [ebp+entriesread] +
push ecx  +
push 0FFFFFFFFh  +
xor eax eax +
lea ecx [ebp+Buffer] +
inc eax  +
push ecx  +
push eax  +
push [ebp+servername]  +
mov [ebp+var_4] eax +
mov [ebp+Buffer] esi +
mov [ebp+entriesread] esi +
mov [ebp+totalentries] esi +
call NetShareEnum  +
cmp eax esi +
jnz loc_10069FE  +
push edi  +
mov edi [ebp+Buffer] +
mov [ebp+var_8] esi +
cmp [ebp+entriesread] esi +
jbe loc_10069F3  +
push ebx  +
mov ebx ds:towupper +
test dword ptr [edi+4] 80000000h +
jz loc_10069DE  +
mov esi [edi] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10069A6  +
sub eax edx +
sar eax 1 +
cmp eax 2 +
jnz loc_10069DE  +
cmp word ptr [esi+2] 24h +
jnz loc_10069DE  +
mov eax [ebp+arg_4] +
movzx eax word ptr [eax] +
push eax  +
call ebx  +
movzx ecx word ptr [esi] +
push ecx  +
mov word ptr [ebp+servername+2] ax +
call ebx  +
pop ecx  +
pop ecx  +
mov cx word ptr [ebp+servername+2] +
cmp ax cx +
jz loc_10069EE  +
add edi 0Ch +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
cmp eax [ebp+entriesread] +
jb loc_1006996  +
jmp loc_10069F2  +
and [ebp+var_4] 0 +
pop ebx  +
push [ebp+Buffer]  +
call NetApiBufferFree  +
pop edi  +
jmp loc_1006A0D  +
jle loc_1006A0A  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 218h +
mov eax dword_100A278 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor eax eax +
push 18Eh  +
xor edi edi +
mov [ebp+WSAData.wVersion] ax +
lea eax [ebp+WSAData.wHighVersion] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+WSAData] +
push eax  +
push 202h  +
call ds:WSAStartup  +
test eax eax +
jnz loc_1006AB2  +
push 7Eh  +
mov [ebp+Address.sa_family] ax +
lea eax [ebp+Address.sa_data] +
push edi  +
push eax  +
call memset  +
mov esi [esi] +
add esp 0Ch +
lea eax [ebp+AddressLength] +
push eax  +
lea eax [ebp+Address] +
push eax  +
push edi  +
push 17h  +
push esi  +
mov [ebp+AddressLength] 80h +
call ds:WSAStringToAddressW  +
test eax eax +
jnz loc_1006AAC  +
inc edi  +
call ds:WSACleanup  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_10073ED  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
cmp dword ptr [eax-8] 0 +
jz loc_1006AFC  +
push 2Dh  +
push 3Ah  +
mov ecx esi +
call MFC42u_6867  +
push 73h  +
push 25h  +
mov ecx esi +
call MFC42u_6867  +
push offset a_ipv6Literal_n  +
mov ecx esi +
call ??YCString@@QAEABV0@PBG@Z  +
pop esi  +
pop ebp  +
retn 4  +
***
jmp ds:?GetRuntimeClass@CWinApp@@UBEPAUCRuntimeClass@@XZ  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_10070E5  +
test eax eax +
jnz loc_10070EA  +
mov ecx [esi] +
test ecx ecx +
jz loc_10070E2  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_10070D6  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_100A3E4 +
push offset dword_100A3D4  +
push dword_100A3E0  +
mov dword_100A3D4 eax +
push offset unk_100A3C4  +
push offset unk_100A3C8  +
push offset unk_100A3C0  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_100A3D0 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+var_1C] ebx +
mov [ebp+ms_exc.disabled] ebx +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoW  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov [ebp+ms_exc.disabled] 1 +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_20] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_100718D  +
cmp eax esi +
jnz loc_1007180  +
xor esi esi +
inc esi  +
mov [ebp+var_20] esi +
jmp loc_1007190  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1007167  +
xor esi esi +
inc esi  +
mov eax dword_100A720 +
cmp eax esi +
jnz loc_10071A3  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_10071D2  +
mov eax dword_100A720 +
test eax eax +
jnz loc_10071CC  +
mov dword_100A720 esi +
push offset dword_100145C  +
push offset dword_1001450  +
call sub_10070C9  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10071D2  +
jmp loc_10072F6  +
mov dword_100A3DC esi +
mov eax dword_100A720 +
cmp eax esi +
jnz loc_10071F6  +
push offset dword_100144C  +
push offset dword_100143C  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_100A720 2 +
cmp [ebp+var_20] ebx +
jnz loc_1007203  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_100A730 ebx +
jz loc_1007224  +
push offset dword_100A730  +
call sub_10077E9  +
pop ecx  +
test eax eax +
jz loc_1007224  +
push ebx  +
push 2  +
push ebx  +
call dword_100A730  +
mov eax ds:_wcmdln +
cmp [eax] ebx +
jz loc_10072F6  +
mov eax [eax] +
mov [ebp+var_24] eax +
movzx ecx word ptr [eax] +
cmp cx 20h +
ja $LN58  +
cmp cx bx +
jz loc_1007249  +
cmp [ebp+var_1C] ebx +
jnz $LN58  +
movzx ecx word ptr [eax] +
cmp cx bx +
jz loc_100725E  +
cmp cx 20h +
ja loc_100725E  +
inc eax  +
inc eax  +
mov [ebp+var_24] eax +
jmp loc_1007249  +
test byte ptr [ebp+StartupInfo.dwFlags] 1 +
jz loc_100726A  +
movzx ecx [ebp+StartupInfo.wShowWindow] +
jmp loc_100726D  +
push 0Ah  +
pop ecx  +
push ecx  +
push eax  +
push ebx  +
push 1000000h  +
call _wWinMain@16  +
mov dword_100A3D8 eax +
cmp dword_100A3CC ebx +
jnz $LN59  +
push eax  +
call ds:exit  +
cmp cx 22h +
jnz loc_100729F  +
xor ecx ecx +
cmp [ebp+var_1C] ebx +
setz cl  +
mov [ebp+var_1C] ecx +
inc eax  +
inc eax  +
jmp loc_1007233  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-28h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-28h] +
mov dword_100A3D8 eax +
xor ebx ebx +
cmp dword_100A3CC ebx +
jnz $LN59  +
push eax  +
call ds:_exit  +
cmp dword_100A3DC ebx +
jnz loc_10072E1  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_100A3D8 +
jmp loc_1007302  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_100731F  +
xor eax eax +
jmp loc_100736C  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_100731B  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1007359  +
cmp ecx 20Bh +
jnz loc_100731B  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_100731B  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1007367  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_100731B  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 2  +
mov dword_100A3CC eax +
call sub_1007982  +
push eax  +
call ds:__set_app_type  +
or dword_100A728 0FFFFFFFFh +
or dword_100A72C 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_100A3EC +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_100A3E8 +
mov [eax] ecx +
call sub_1007914  +
cmp dword_100A288 0 +
jnz loc_10073C5  +
push offset sub_1007914  +
call ds:__setusermatherr  +
pop ecx  +
call sub_10078FC  +
xor eax eax +
retn   +
***
call sub_10079C1  +
jmp ___tmainCRTStartup  +
***
cmp ecx dword_100A278 +
jnz loc_10073F8  +
retn 0  +
jmp loc_1007A57  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_100A278 +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_100A278 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_100A278 +
xor eax ebp +
push eax  +
mov [ebp-10h] eax +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_10073ED  +
jmp __EH_epilog3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_10074F8  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call sub_100750F  +
neg eax  +
sbb eax eax +
neg eax  +
pop ecx  +
dec eax  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
dec [ebp+arg_8]  +
js loc_1007605  +
mov ecx [ebp+arg_0] +
sub ecx [ebp+arg_4] +
mov [ebp+arg_0] ecx +
call [ebp+arg_C]  +
jmp loc_10075C5  +
mov eax [ebp-14h] +
mov [ebp-1Ch] eax +
mov eax [ebp-1Ch] +
mov eax [eax] +
mov [ebp-20h] eax +
mov eax [ebp-20h] +
cmp dword ptr [eax] 0E06D7363h +
jz loc_10075FC  +
mov dword ptr [ebp-24h] 0 +
mov eax [ebp-24h] +
retn   +
call ds:?terminate@@YAXXZ  +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 10h  +
***
call __SEH_prolog4  +
cmp dword ptr [ebp-1Ch] 0 +
jnz $LN9  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_10075B5  +
retn   +
***
call __SEH_prolog4  +
cmp dword ptr [ebp-20h] 0 +
jnz $LN10_0  +
push dword ptr [ebp+18h]  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_10075B5  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1007734  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1007734  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_100772E  +
cmp eax 19930521h +
jz loc_100772E  +
cmp eax 19930522h +
jz loc_100772E  +
cmp eax 1994000h +
jnz loc_1007734  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_10076F4+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1007776  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1007772  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_10077DD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_10077D5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_10077DF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_10077C5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1007760  +
pop ecx  +
test eax eax +
jz loc_1007846  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_10077A0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1007846  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100784F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_10073ED  +
push offset dword_100A278  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1007975  +
cmp ecx 0FFFFFFFFh +
jz loc_1007975  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_100796E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_100796E  +
cmp edx 10000000h +
jnb loc_100796E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_100796E  +
jmp loc_1007969  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_10079B7  +
push eax  +
call sub_100791C  +
test eax eax +
jz loc_10079B7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_10079AC  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_10079B7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_100A278 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_10079F3  +
test eax ebx +
jz loc_10079F3  +
not eax  +
mov dword_100A27C eax +
jmp loc_1007A4E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1007A3A  +
test dword_100A278 ebx +
jnz loc_1007A3F  +
mov esi 0BB40E64Fh +
mov dword_100A278 esi +
not esi  +
mov dword_100A27C esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_100A4F0 eax +
mov dword_100A4EC ecx +
mov dword_100A4E8 edx +
mov dword_100A4E4 ebx +
mov dword_100A4E0 esi +
mov dword_100A4DC edi +
mov word_100A508 ss +
mov word_100A4FC cs +
mov word_100A4D8 ds +
mov word_100A4D4 es +
mov word_100A4D0 fs +
mov word_100A4CC gs +
pushf   +
pop dword_100A500  +
mov eax [ebp+0] +
mov dword_100A4F4 eax +
mov eax [ebp+4] +
mov dword_100A4F8 eax +
lea eax [ebp+8] +
mov dword_100A504 eax +
mov eax [ebp-320h] +
mov dword_100A440 10001h +
mov eax dword_100A4F8 +
mov dword_100A3FC eax +
mov dword_100A3F0 0C0000409h +
mov dword_100A3F4 1 +
mov eax dword_100A278 +
mov [ebp-328h] eax +
mov eax dword_100A27C +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1007C07  +
cmp ecx 7FFFFFFFh +
jbe loc_1007C0C  +
mov eax 80070057h +
test eax eax +
jl loc_1007C50  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_1007C43  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_1007C3E  +
mov cl [edx+eax] +
test cl cl +
jz loc_1007C3E  +
mov [eax] cl +
inc eax  +
dec esi  +
jnz loc_1007C2A  +
pop edi  +
test esi esi +
jnz loc_1007C49  +
dec eax  +
mov ebx 8007007Ah +
mov byte ptr [eax] 0 +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 118h +
mov eax dword_100A278 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
mov [ebp+lpDst] eax +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
xor esi esi +
push esi  +
push offset SubKey  +
push 80000000h  +
call ds:RegOpenKeyExA  +
test eax eax +
jnz loc_1007D2E  +
push edi  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Src] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push esi  +
push esi  +
push [ebp+hKey]  +
mov edi 104h +
mov [ebp+cbData] edi +
mov [ebp+Type] 1 +
call ds:RegQueryValueExA  +
test eax eax +
jnz loc_1007D1D  +
cmp [ebp+Type] 2 +
mov [ebp+var_5] al +
lea eax [ebp+Src] +
jnz loc_1007D07  +
push edi  +
push [ebp+lpDst]  +
push eax  +
call ds:ExpandEnvironmentStringsA  +
dec eax  +
lea ecx [edi-1] +
cmp ecx eax +
sbb esi esi +
inc esi  +
jmp loc_1007D1D  +
push eax  +
push edi  +
push [ebp+lpDst]  +
call sub_1007BF1  +
xor ecx ecx +
test eax eax +
setnl cl  +
mov esi ecx +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax esi +
pop edi  +
jmp loc_1007D30  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_10073ED  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 108h +
mov eax dword_100A278 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx dword_100A718 +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test ecx ecx +
jnz loc_1007DC3  +
cmp dword_100A714 ecx +
jnz loc_1007DC3  +
lea eax [ebp+LibFileName] +
push eax  +
call sub_1007C59  +
mov esi ds:LoadLibraryA +
test eax eax +
jz loc_1007D98  +
lea eax [ebp+LibFileName] +
push eax  +
call esi  +
mov dword_100A718 eax +
mov ecx dword_100A718 +
test ecx ecx +
jnz loc_1007DC3  +
push offset LibFileName  +
call esi  +
mov ecx eax +
mov dword_100A718 ecx +
test ecx ecx +
jnz loc_1007DC3  +
mov dword_100A714 1 +
xor eax eax +
jmp loc_1007DE8  +
mov eax dword_100A710 +
test eax eax +
jnz loc_1007DDE  +
push 0Fh  +
push ecx  +
call ds:GetProcAddress  +
mov dword_100A710 eax +
test eax eax +
jz loc_1007DB5  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push ebx  +
push edi  +
call eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10073ED  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_1007E34  +
push ebp  +
mov ebp esp +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov cl [ebp+arg_0] +
mov [eax+14h] cl +
mov ecx [ebp+arg_4] +
mov [eax+2040h] ecx +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
jmp ds:?AfxWinMain@@YGHPAUHINSTANCE__@@0PAGH@Z  +
***
lea ecx [ebp-1Ch] +
jmp loc_1003308  +
***
retn   +
***
lea ecx [ebp-14h] +
jmp ??1CString@@QAE@XZ  +
***
push offset sub_1005707  +
push 2  +
push 14h  +
lea eax [ebp-40h] +
push eax  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
push offset sub_1005707  +
push 3  +
push 14h  +
lea eax [ebp-54h] +
push eax  +
call ??_M@YGXPAXIHP6EX0@Z@Z  +
retn   +
***
lea ecx [ebp-2Ch] +
jmp sub_1005707  +
***
jmp fword ptr (byte_1009BFF-1009C5Ah)[eax]  +
***
retn   +
***
jmp sub_10028E3  +
***
retf   +
***
