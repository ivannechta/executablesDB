mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push 30h  +
pop ecx  +
cmp cx ax +
ja loc_100159D  +
push 39h  +
pop ecx  +
cmp cx ax +
jnb loc_10015B6  +
push 41h  +
pop ecx  +
cmp cx ax +
ja loc_10015AD  +
push 46h  +
pop ecx  +
cmp cx ax +
jnb loc_10015B6  +
add eax 0FFFFFF9Fh +
cmp ax 5 +
ja loc_10015BB  +
xor eax eax +
inc eax  +
jmp loc_10015BD  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
lea ecx [eax-30h] +
cmp ecx 9 +
ja loc_10015DB  +
sub eax 30h +
jmp loc_10015F3  +
lea ecx [eax-61h] +
cmp ecx 5 +
ja loc_10015E8  +
sub eax 57h +
jmp loc_10015F3  +
lea ecx [eax-41h] +
cmp ecx 5 +
ja loc_10015F3  +
sub eax 37h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov eax dword_100A034 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov [ebp+lpString] esi +
mov [ebp+var_30] ebx +
mov [ebp+var_28] ebx +
cmp lpCommandLine ebx +
jz loc_1001756  +
cmp esi ebx +
jz loc_1001756  +
push 1Eh  +
pop ecx  +
lea eax [ebp+var_24] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1001639  +
push 0Ah  +
lea eax [ebp+var_24] +
push eax  +
push [ebp+arg_4]  +
call ds:_ultow  +
add esp 0Ch +
push esi  +
push lpCommandLine  +
jmp loc_100173B  +
push ebx  +
push esi  +
call sub_1005F92  +
mov edi eax +
add edi 0Ah +
cmp [ebp+var_28] ebx +
jnz loc_100167C  +
lea eax [edi+edi] +
push eax  +
call sub_10060B0  +
mov [ebp+var_28] eax +
jmp loc_1001685  +
lea eax [ebp+var_28] +
push eax  +
call sub_100638B  +
cmp [ebp+var_28] ebx +
jz loc_100174F  +
push edi  +
push ebx  +
push [ebp+lpString]  +
call sub_1005F92  +
lea eax [esi+eax*2] +
push eax  +
push [ebp+var_28]  +
call sub_10066F8  +
mov eax lpCommandLine +
mov ecx [ebp+var_30] +
push [ebp+lpString]  +
lea eax [eax+ecx*2] +
push eax  +
call sub_1002EEA  +
mov edi eax +
cmp edi ebx +
jz loc_10016F9  +
mov eax lpCommandLine +
mov esi edi +
sub esi eax +
push eax  +
sar esi 1 +
call sub_1006159  +
shr eax 1 +
sub eax esi +
push eax  +
push offset asc_10011F8  +
push edi  +
call sub_10066F8  +
push lpCommandLine  +
call sub_1006159  +
shr eax 1 +
sub eax esi +
push eax  +
lea eax [ebp+var_24] +
push eax  +
push edi  +
call sub_100673B  +
push ebx  +
push lpCommandLine  +
call sub_1005F92  +
push lpCommandLine  +
mov esi eax +
mov [ebp+var_30] esi +
call sub_1006159  +
shr eax 1 +
push eax  +
push [ebp+var_28]  +
push lpCommandLine  +
call sub_100673B  +
lea eax [ebp+var_28] +
push eax  +
call sub_100638B  +
mov eax lpCommandLine +
push [ebp+lpString]  +
lea eax [eax+esi*2] +
push eax  +
call sub_1002EEA  +
mov esi eax +
cmp esi ebx +
jnz loc_100165D  +
xor eax eax +
inc eax  +
jmp loc_100178F  +
push 8007000Eh  +
jmp loc_1001758  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10056FC  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax lpCommandLine +
push ebx  +
xor ebx ebx +
mov [ebp+var_4] ebx +
cmp eax ebx +
jnz loc_10017FA  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
jmp loc_1001974  +
push esi  +
push edi  +
mov edi ds:StrPBrkW +
mov esi offset asc_10011F8 +
jmp loc_1001818  +
mov ecx lpCommandLine +
sub eax ecx +
sar eax 1 +
inc ebx  +
inc eax  +
lea eax [ecx+eax*2] +
push esi  +
push eax  +
call edi  +
test eax eax +
jnz loc_1001809  +
and [ebp+var_8] eax +
push eax  +
push lpCommandLine  +
call sub_1005F92  +
lea eax [eax+ebx+0Ah] +
mov [ebp+var_10] eax +
add eax eax +
cmp lpCommandLine 0 +
push eax  +
jnz loc_100184E  +
call sub_10060B0  +
mov lpCommandLine eax +
jmp loc_1001863  +
mov ebx offset lpCommandLine +
push ebx  +
call sub_1006406  +
test eax eax +
jnz loc_1001863  +
push ebx  +
call sub_100638B  +
mov eax lpCommandLine +
test eax eax +
jnz loc_1001963  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push 0  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
jmp loc_1001972  +
push 0  +
push ebx  +
call sub_1005F92  +
add eax 0Ah +
cmp [ebp+var_4] 0 +
mov [ebp+var_C] eax +
jnz loc_10018D3  +
add eax eax +
push eax  +
call sub_10060B0  +
mov [ebp+var_4] eax +
jmp loc_10018DC  +
lea eax [ebp+var_4] +
push eax  +
call sub_100638B  +
cmp [ebp+var_4] 0 +
jz loc_1001870  +
push [ebp+var_C]  +
push 0  +
push esi  +
call sub_1005F92  +
lea eax [ebx+eax*2] +
push eax  +
push [ebp+var_4]  +
call sub_10066F8  +
mov eax lpCommandLine +
mov ebx [ebp+var_8] +
push esi  +
lea eax [eax+ebx*2] +
push eax  +
call sub_1002EEA  +
mov [ebp+var_C] eax +
test eax eax +
jz loc_100192F  +
push lpCommandLine  +
call sub_1006159  +
shr eax 1 +
sub eax ebx +
push eax  +
push offset asc_10011FC  +
push [ebp+var_C]  +
call sub_10066F8  +
push 0  +
push lpCommandLine  +
call sub_1005F92  +
push [ebp+var_10]  +
mov ebx eax +
push [ebp+var_4]  +
mov [ebp+var_8] ebx +
push lpCommandLine  +
call sub_100673B  +
lea eax [ebp+var_4] +
push eax  +
call sub_100638B  +
mov eax lpCommandLine +
lea eax [eax+ebx*2] +
push esi  +
push eax  +
call edi  +
mov ebx eax +
test ebx ebx +
jnz loc_10018B2  +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jbe loc_10019AC  +
push esi  +
mov esi offset lpStart +
push esi  +
call sub_100638B  +
add esi 4 +
dec edi  +
jnz loc_100199F  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax dword_100A078 +
push edi  +
xor edi edi +
mov [ebp+lpMem] edi +
cmp eax edi +
jnz loc_1001A0B  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push edi  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
jmp loc_1001AA6  +
push ebx  +
push esi  +
push edi  +
push eax  +
call sub_1005F92  +
mov ebx eax +
add ebx 0Ah +
lea eax [ebx+ebx] +
push eax  +
cmp lpCommandLine edi +
jnz loc_1001A31  +
call sub_10060B0  +
mov lpCommandLine eax +
jmp loc_1001A46  +
mov esi offset lpCommandLine +
push esi  +
call sub_1006406  +
test eax eax +
jnz loc_1001A46  +
push esi  +
call sub_100638B  +
mov eax lpCommandLine +
test eax eax +
jz loc_1001BE0  +
push ebx  +
push dword_100A078  +
push eax  +
call sub_10066F8  +
push 25h  +
push lpCommandLine  +
jmp loc_1001A9A  +
lea ecx [eax+2] +
movzx edx word ptr [ecx] +
push 25h  +
pop esi  +
cmp si dx +
jnz loc_1001AAB  +
mov edi eax +
sub edi lpCommandLine +
mov edx ebx +
sar edi 1 +
sub edx edi +
push edx  +
push ecx  +
push eax  +
call sub_10066F8  +
inc edi  +
mov eax lpCommandLine +
push 25h  +
lea eax [eax+edi*2] +
push eax  +
call sub_1002ECD  +
test eax eax +
jnz loc_1001A6A  +
inc eax  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 4  +
movzx esi dx +
sub esi 30h +
cmp [ebp+arg_0] esi +
jb loc_1001A8E  +
xor ebx ebx +
cmp [ebp+lpMem] ebx +
jnz loc_1001AD3  +
push ebx  +
push eax  +
call sub_1005F92  +
lea eax [eax+eax+14h] +
push eax  +
call sub_10060B0  +
mov [ebp+lpMem] eax +
jmp loc_1001ADC  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100638B  +
cmp [ebp+lpMem] ebx +
jz loc_1001BAE  +
lea esi dword_100A050[esi*4] +
push ebx  +
push dword ptr [esi]  +
mov [ebp+var_8] esi +
call sub_1005F92  +
push ebx  +
push lpCommandLine  +
mov esi eax +
mov [ebp+var_C] esi +
call sub_1005F92  +
cmp lpCommandLine 0 +
lea ebx [eax+esi+0Ah] +
lea eax [ebx+ebx] +
push eax  +
jnz loc_1001B25  +
call sub_10060B0  +
mov lpCommandLine eax +
jmp loc_1001B3A  +
mov esi offset lpCommandLine +
push esi  +
call sub_1006406  +
test eax eax +
jnz loc_1001B3A  +
push esi  +
call sub_100638B  +
mov eax lpCommandLine +
test eax eax +
jz loc_1001BD7  +
push 25h  +
lea eax [eax+edi*2] +
push eax  +
call sub_1002ECD  +
mov esi eax +
test esi esi +
jz loc_1001BA0  +
push [ebp+lpMem]  +
call sub_1006159  +
shr eax 1 +
push eax  +
lea eax [esi+4] +
push eax  +
push [ebp+lpMem]  +
call sub_10066F8  +
mov eax esi +
sub eax lpCommandLine +
mov edi ebx +
sar eax 1 +
sub edi eax +
mov eax [ebp+var_8] +
push edi  +
push dword ptr [eax]  +
push esi  +
call sub_10066F8  +
push edi  +
push [ebp+lpMem]  +
push esi  +
call sub_100673B  +
sub esi lpCommandLine +
sar esi 1 +
add esi [ebp+var_C] +
mov edi esi +
lea eax [ebp+lpMem] +
push eax  +
call sub_100638B  +
jmp loc_1001A8F  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
push offset a12  +
push ebx  +
jmp loc_1001C08  +
lea eax [ebp+lpMem] +
push eax  +
call sub_100638B  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
push offset a12  +
push 0  +
mov eax ds:_iob +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
jmp loc_1001AA4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_1001D38  +
mov esi [eax] +
cmp esi edi +
jz loc_1001D38  +
mov eax [ebp+arg_4] +
cmp eax edi +
jz loc_1001D38  +
cmp [eax] edi +
jnz loc_1001D38  +
push 20h  +
pop eax  +
cmp ax [esi] +
jnz loc_1001C6E  +
push 1  +
push offset asc_1001208  +
push esi  +
call sub_1006B58  +
push 22h  +
pop eax  +
cmp ax [esi] +
jnz loc_1001C7B  +
inc esi  +
inc esi  +
push eax  +
jmp loc_1001C7D  +
push 20h  +
push esi  +
call sub_1002ECD  +
mov ebx eax +
cmp ebx edi +
jnz loc_1001C94  +
push edi  +
push esi  +
call sub_1005F92  +
mov edi eax +
jmp loc_1001C9A  +
mov edi ebx +
sub edi esi +
sar edi 1 +
mov eax [ebp+arg_4] +
cmp dword ptr [eax] 0 +
jnz loc_1001CB3  +
lea eax [edi+edi+14h] +
push eax  +
call sub_10060B0  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
jmp loc_1001CB9  +
push eax  +
call sub_100638B  +
mov eax [ebp+arg_4] +
mov eax [eax] +
test eax eax +
jnz loc_1001CEC  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
push offset a12  +
push 0  +
jmp loc_1001D5C  +
lea ecx [edi+1] +
push ecx  +
push esi  +
push eax  +
call sub_10066F8  +
xor eax eax +
cmp ebx eax +
jnz loc_1001D0C  +
push eax  +
push esi  +
call sub_1005F92  +
push eax  +
push offset dword_1001204  +
jmp loc_1001D2D  +
push 22h  +
pop ecx  +
push eax  +
push esi  +
cmp cx [ebx] +
jnz loc_1001D22  +
call sub_1005F92  +
push eax  +
lea eax [esi+edi*2+4] +
jmp loc_1001D2C  +
call sub_1005F92  +
push eax  +
lea eax [esi+edi*2+2] +
push eax  +
push esi  +
call sub_10066F8  +
xor eax eax +
inc eax  +
jmp loc_1001D71  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
push offset a12  +
push edi  +
mov eax ds:_iob +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_100A034 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_0] +
push 0Ah  +
pop ecx  +
lea eax [ebp+WideCharStr] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1001D98  +
push 5  +
pop ecx  +
lea eax [ebp+MultiByteStr] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1001DA5  +
test edx edx +
jnz loc_1001DEF  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push 0  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
jmp loc_1001E8D  +
push ebx  +
push esi  +
push edi  +
push offset a0x  +
push edx  +
call sub_1002EEA  +
mov esi eax +
test esi esi +
jz loc_1001E87  +
lea edx [esi+4] +
movzx edi word ptr [edx] +
push edi  +
call sub_1001585  +
cmp eax 1 +
jnz loc_1001E7F  +
movzx ebx word ptr [esi+6] +
push ebx  +
call sub_1001585  +
cmp eax 1 +
jnz loc_1001E7F  +
movzx eax di +
push eax  +
call sub_10015C6  +
mov edx eax +
movzx eax bx +
push eax  +
shl dl 4 +
call sub_10015C6  +
push 5  +
add dl al +
lea eax [ebp+WideCharStr] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+MultiByteStr] +
push eax  +
push 0  +
push 1B5h  +
mov [ebp+MultiByteStr] dl +
mov byte ptr [ebp-0Bh] 0 +
call ds:MultiByteToWideChar  +
mov ax [ebp+WideCharStr] +
push 0  +
lea edi [esi+2] +
push edi  +
mov [esi] ax +
call sub_1005F92  +
push eax  +
add esi 8 +
push esi  +
push edi  +
call sub_10066F8  +
mov edx edi +
test edx edx +
jnz loc_1001DF2  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_10056FC  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 64h +
push ebx  +
xor ebx ebx +
mov [ebp+lpFileName] ebx +
mov [ebp+lpApplicationName] ebx +
mov [ebp+FilePart] ebx +
cmp lpCommandLine ebx +
jnz loc_1001EFA  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
jmp loc_1002113  +
push 10h  +
pop ecx  +
lea eax [ebp+hObject] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1001F00  +
push 44h  +
pop edx  +
mov ecx edx +
lea eax [ebp+StartupInfo] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1001F0E  +
lea eax [ebp+lpFileName] +
push eax  +
push offset lpCommandLine  +
mov [ebp+StartupInfo.cb] edx +
call sub_1001C27  +
test eax eax +
jnz loc_1001F6E  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
lea eax [ebp+lpFileName] +
push eax  +
call sub_100638B  +
jmp loc_1001EF3  +
push esi  +
mov esi ds:SearchPathW +
push edi  +
lea eax [ebp+FilePart] +
push eax  +
push [ebp+lpApplicationName]  +
mov edi offset Extension +
push ebx  +
push edi  +
push [ebp+lpFileName]  +
push ebx  +
call esi  +
mov [ebp+var_10] eax +
cmp eax ebx +
jnz loc_1001F9A  +
call ds:GetLastError  +
push eax  +
jmp loc_1001FC1  +
cmp [ebp+lpApplicationName] ebx +
jnz loc_1001FAE  +
lea eax [eax+eax+14h] +
push eax  +
call sub_10060B0  +
mov [ebp+lpApplicationName] eax +
jmp loc_1001FB7  +
lea eax [ebp+lpApplicationName] +
push eax  +
call sub_100638B  +
cmp [ebp+lpApplicationName] ebx +
jnz loc_1001FFB  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
lea eax [ebp+lpFileName] +
jmp loc_100205C  +
lea eax [ebp+FilePart] +
push eax  +
push [ebp+lpApplicationName]  +
mov eax [ebp+var_10] +
add eax 9 +
push eax  +
push edi  +
push [ebp+lpFileName]  +
push ebx  +
call esi  +
test eax eax +
jnz loc_1002069  +
call ds:GetLastError  +
push eax  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
lea eax [ebp+lpFileName] +
push eax  +
call sub_100638B  +
lea eax [ebp+lpApplicationName] +
push eax  +
call sub_100638B  +
xor eax eax +
jmp loc_1002111  +
lea eax [ebp+hObject] +
push eax  +
lea eax [ebp+StartupInfo] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push lpCommandLine  +
push [ebp+lpApplicationName]  +
call ds:CreateProcessW  +
test eax eax +
jnz loc_10020E1  +
call ds:GetLastError  +
cmp eax 0C1h +
jnz loc_1002021  +
push 0A3h  +
call sub_1007628  +
push eax  +
mov esi 0AAh +
push esi  +
call sub_1007628  +
push eax  +
push [ebp+lpFileName]  +
push esi  +
call sub_1007628  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12345  +
push ebx  +
add eax 40h +
push 5  +
push eax  +
call sub_10074D5  +
add esp 24h +
jmp loc_1002050  +
push 0FFFFFFFFh  +
push [ebp+hObject]  +
call ds:WaitForSingleObject  +
push [ebp+hObject]  +
mov esi ds:CloseHandle +
call esi  +
push dword ptr [ebp-1Ch]  +
call esi  +
lea eax [ebp+lpApplicationName] +
push eax  +
call sub_100638B  +
lea eax [ebp+lpFileName] +
push eax  +
call sub_100638B  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 890h +
mov eax dword_100A034 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov ecx 94h +
lea esi [ebp+arg_4] +
lea edi [ebp+dwAttrTo] +
xor ebx ebx +
movs   +
xor esi esi +
mov [ebp+lpString] eax +
mov [ebp+var_878] ebx +
cmp eax ebx +
jz loc_1002B72  +
cmp lpCommandLine ebx +
jz loc_1002B72  +
mov ecx 208h +
lea eax [ebp+TimeStr] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1002175  +
mov ecx 410h +
lea eax [ebp+pszTo] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1002186  +
push 10h  +
pop ecx  +
lea eax [ebp+Time] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1002195  +
push 8  +
pop ecx  +
lea eax [ebp+LocalFileTime] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10021A4  +
cmp dword_100A000 1 +
jnz loc_10021C0  +
call sub_10017A5  +
test eax eax +
jz loc_1002BA9  +
push offset a@fname  +
push lpCommandLine  +
call sub_1002EEA  +
mov edi offset asc_10012E4 +
test eax eax +
jz loc_10022D3  +
cmp dword_100A000 1 +
jnz loc_1002202  +
push 1  +
push offset a@fname  +
call sub_10015FC  +
test eax eax +
jnz loc_1002202  +
push 1  +
call sub_100198C  +
jmp loc_1002BA9  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_1005F92  +
add eax 0Ah +
mov [ebp+var_870] eax +
cmp lpStart ebx +
jnz loc_100222F  +
add eax eax +
push eax  +
call sub_10060B0  +
mov lpStart eax +
jmp loc_1002239  +
push offset lpStart  +
call sub_100638B  +
mov eax lpStart +
xor esi esi +
inc esi  +
cmp eax ebx +
jnz loc_1002284  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
jmp loc_10021F6  +
push [ebp+var_870]  +
push edi  +
push eax  +
call sub_10066F8  +
push [ebp+var_870]  +
lea eax [ebp+String] +
push eax  +
push lpStart  +
call sub_100673B  +
push 2Eh  +
push ebx  +
push lpStart  +
call ds:StrRChrW  +
cmp eax ebx +
jz loc_10022C1  +
xor ecx ecx +
mov [eax] cx +
push [ebp+var_870]  +
push edi  +
push lpStart  +
call sub_100673B  +
push offset a@file  +
push lpCommandLine  +
call sub_1002EEA  +
test eax eax +
jz loc_10023D9  +
cmp dword_100A000 1 +
jnz loc_1002317  +
lea eax [esi+1] +
push eax  +
push offset a@file  +
mov [ebp+var_870] eax +
call sub_10015FC  +
test eax eax +
jnz loc_1002317  +
push [ebp+var_870]  +
jmp loc_10021F8  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_1005F92  +
add eax 0Ah +
mov [ebp+var_870] eax +
cmp lpStart[esi*4] ebx +
jnz loc_1002347  +
add eax eax +
push eax  +
call sub_10060B0  +
mov lpStart[esi*4] eax +
jmp loc_1002354  +
lea eax lpStart[esi*4] +
push eax  +
call sub_100638B  +
mov eax lpStart[esi*4] +
inc esi  +
cmp eax ebx +
jnz loc_10023A0  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
push esi  +
jmp loc_10021F8  +
push [ebp+var_870]  +
push edi  +
push eax  +
call sub_10066F8  +
push [ebp+var_870]  +
lea eax [ebp+String] +
push eax  +
push dword_100A050[esi*4]  +
call sub_100673B  +
push [ebp+var_870]  +
push edi  +
push dword_100A050[esi*4]  +
call sub_100673B  +
push offset a@ext  +
push lpCommandLine  +
call sub_1002EEA  +
test eax eax +
jz loc_1002556  +
cmp dword_100A000 1 +
jnz loc_1002416  +
lea eax [esi+1] +
push eax  +
push offset a@ext  +
mov [ebp+var_870] eax +
call sub_10015FC  +
test eax eax +
jz loc_100230C  +
push 2Eh  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call ds:StrRChrW  +
push ebx  +
test eax eax +
jz loc_10024FB  +
push 2Eh  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call ds:StrRChrW  +
push eax  +
call sub_1005F92  +
add eax 0Ah +
mov [ebp+var_870] eax +
cmp lpStart[esi*4] ebx +
jnz loc_1002468  +
add eax eax +
push eax  +
call sub_10060B0  +
mov lpStart[esi*4] eax +
jmp loc_1002475  +
lea eax lpStart[esi*4] +
push eax  +
call sub_100638B  +
inc esi  +
cmp dword_100A050[esi*4] ebx +
jz loc_1002360  +
push ebx  +
push 2Eh  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call ds:StrRChrW  +
inc eax  +
inc eax  +
push eax  +
call sub_1005F92  +
push [ebp+var_870]  +
test eax eax +
jbe loc_10024ED  +
push edi  +
push dword_100A050[esi*4]  +
call sub_10066F8  +
push [ebp+var_870]  +
lea eax [ebp+String] +
push 2Eh  +
push ebx  +
push eax  +
call ds:StrRChrW  +
inc eax  +
inc eax  +
push eax  +
push dword_100A050[esi*4]  +
call sub_100673B  +
push [ebp+var_870]  +
push edi  +
push dword_100A050[esi*4]  +
call sub_100673B  +
jmp loc_1002556  +
push offset String  +
push dword_100A050[esi*4]  +
jmp loc_1002551  +
push offset String  +
call sub_1005F92  +
add eax 0Ah +
mov [ebp+var_870] eax +
cmp lpStart[esi*4] ebx +
jnz loc_1002528  +
add eax eax +
push eax  +
call sub_10060B0  +
mov lpStart[esi*4] eax +
jmp loc_1002535  +
lea eax lpStart[esi*4] +
push eax  +
call sub_100638B  +
mov eax lpStart[esi*4] +
inc esi  +
cmp eax ebx +
jz loc_1002360  +
push [ebp+var_870]  +
push offset String  +
push eax  +
call sub_10066F8  +
push offset a@path  +
push lpCommandLine  +
call sub_1002EEA  +
test eax eax +
jz loc_1002637  +
cmp dword_100A000 1 +
jnz loc_100258F  +
lea edi [esi+1] +
push edi  +
push offset a@path  +
call sub_10015FC  +
test eax eax +
jnz loc_100258F  +
push edi  +
jmp loc_10021F8  +
push ebx  +
push [ebp+lpString]  +
call sub_1005F92  +
mov edi eax +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_1005F92  +
lea eax [edi+eax+0Ah] +
lea edi lpStart[esi*4] +
mov [ebp+var_870] eax +
cmp [edi] ebx +
jnz loc_10025CB  +
add eax eax +
push eax  +
call sub_10060B0  +
mov [edi] eax +
jmp loc_10025D1  +
push edi  +
call sub_100638B  +
mov eax lpStart[esi*4] +
inc esi  +
cmp eax ebx +
jz loc_1002360  +
push [ebp+var_870]  +
mov edi offset asc_10012E4 +
push edi  +
push eax  +
call sub_10066F8  +
push [ebp+var_870]  +
push [ebp+lpString]  +
push dword_100A050[esi*4]  +
call sub_100673B  +
push [ebp+var_870]  +
lea eax [ebp+String] +
push eax  +
push dword_100A050[esi*4]  +
call sub_100673B  +
push [ebp+var_870]  +
push edi  +
push dword_100A050[esi*4]  +
call sub_100673B  +
push offset a@relpath  +
push lpCommandLine  +
call sub_1002EEA  +
test eax eax +
jz loc_1002753  +
cmp dword_100A000 1 +
jnz loc_1002674  +
lea eax [esi+1] +
push eax  +
push offset a@relpath  +
mov [ebp+var_870] eax +
call sub_10015FC  +
test eax eax +
jz loc_100230C  +
push 208h  +
push [ebp+lpString]  +
lea eax [ebp+pszTo] +
push eax  +
call sub_10066F8  +
push 208h  +
lea eax [ebp+String] +
push eax  +
lea eax [ebp+pszTo] +
push eax  +
call sub_100673B  +
push [ebp+dwAttrTo]  +
lea eax [ebp+pszTo] +
push eax  +
push 10h  +
push pszFrom  +
lea eax [ebp+TimeStr] +
push eax  +
call ds:PathRelativePathToW  +
test eax eax +
jz loc_100236B  +
push ebx  +
lea eax [ebp+TimeStr] +
push eax  +
call sub_1005F92  +
add eax 0Ah +
mov [ebp+var_870] eax +
cmp lpStart[esi*4] ebx +
jnz loc_10026FD  +
add eax eax +
push eax  +
call sub_10060B0  +
mov lpStart[esi*4] eax +
jmp loc_100270A  +
lea eax lpStart[esi*4] +
push eax  +
call sub_100638B  +
mov eax lpStart[esi*4] +
inc esi  +
cmp eax ebx +
jz loc_1002360  +
push [ebp+var_870]  +
push edi  +
push eax  +
call sub_10066F8  +
push [ebp+var_870]  +
lea eax [ebp+TimeStr] +
push eax  +
push dword_100A050[esi*4]  +
call sub_100673B  +
push [ebp+var_870]  +
push edi  +
push dword_100A050[esi*4]  +
call sub_100673B  +
mov edi offset a@isdir +
push edi  +
push lpCommandLine  +
call sub_1002EEA  +
test eax eax +
jz loc_1002850  +
cmp dword_100A000 1 +
jnz loc_100278D  +
lea eax [esi+1] +
push eax  +
push edi  +
mov [ebp+var_870] eax +
call sub_10015FC  +
test eax eax +
jz loc_100230C  +
test [ebp+dwAttrTo] 10h +
push ebx  +
jz loc_10027ED  +
push 0A4h  +
call sub_1007628  +
push eax  +
call sub_1005F92  +
mov edi eax +
add edi 0Ah +
cmp lpStart[esi*4] ebx +
jnz loc_10027CA  +
lea eax [edi+edi] +
push eax  +
call sub_10060B0  +
mov lpStart[esi*4] eax +
jmp loc_10027D7  +
lea eax lpStart[esi*4] +
push eax  +
call sub_100638B  +
inc esi  +
cmp dword_100A050[esi*4] ebx +
jz loc_1002360  +
push edi  +
push 0A4h  +
jmp loc_100283E  +
push 0A5h  +
call sub_1007628  +
push eax  +
call sub_1005F92  +
mov edi eax +
add edi 0Ah +
cmp lpStart[esi*4] ebx +
jnz loc_100281D  +
lea eax [edi+edi] +
push eax  +
call sub_10060B0  +
mov lpStart[esi*4] eax +
jmp loc_100282A  +
lea eax lpStart[esi*4] +
push eax  +
call sub_100638B  +
inc esi  +
cmp dword_100A050[esi*4] ebx +
jz loc_1002360  +
push edi  +
push 0A5h  +
call sub_1007628  +
push eax  +
push dword_100A050[esi*4]  +
call sub_10066F8  +
mov edi offset a@fsize +
push edi  +
push lpCommandLine  +
call sub_1002EEA  +
test eax eax +
jz loc_1002909  +
cmp dword_100A000 1 +
jnz loc_100288A  +
lea eax [esi+1] +
push eax  +
push edi  +
mov [ebp+var_870] eax +
call sub_10015FC  +
test eax eax +
jz loc_100230C  +
mov ecx [ebp+var_84C] +
push 0Ah  +
lea eax [ebp+TimeStr] +
push eax  +
mov eax [ebp+var_850] +
add ecx eax +
xor edx edx +
neg eax  +
xor edi edi +
add ecx eax +
adc edx edi +
push edx  +
push ecx  +
call ds:_ui64tow  +
add esp 10h +
push ebx  +
lea eax [ebp+TimeStr] +
push eax  +
call sub_1005F92  +
mov edi eax +
lea eax lpStart[esi*4] +
add edi 0Ah +
cmp [eax] ebx +
jnz loc_10028E5  +
lea eax [edi+edi] +
push eax  +
call sub_10060B0  +
mov lpStart[esi*4] eax +
jmp loc_10028EB  +
push eax  +
call sub_100638B  +
mov eax lpStart[esi*4] +
inc esi  +
cmp eax ebx +
jz loc_1002360  +
push edi  +
lea ecx [ebp+TimeStr] +
push ecx  +
push eax  +
call sub_10066F8  +
lea eax [ebp+LocalFileTime] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToLocalFileTime  +
cmp eax 1 +
jnz loc_1002AEF  +
lea eax [ebp+Time] +
push eax  +
lea eax [ebp+LocalFileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
cmp eax 1 +
jnz loc_1002AEF  +
lea eax [ebp+var_878] +
push eax  +
call sub_1005F39  +
mov edi offset a@fdate +
push edi  +
push lpCommandLine  +
mov [ebp+lpString] eax +
call sub_1002EEA  +
test eax eax +
jz loc_1002A23  +
cmp dword_100A000 1 +
jnz loc_100298F  +
lea eax [esi+1] +
push eax  +
push edi  +
mov [ebp+var_870] eax +
call sub_10015FC  +
test eax eax +
jz loc_100230C  +
push 0FEh  +
lea eax [ebp+TimeStr] +
push eax  +
mov eax [ebp+var_878] +
dec eax  +
neg eax  +
sbb eax eax +
not eax  +
and eax offset aMmDdYyyy +
push eax  +
lea eax [ebp+Time] +
push eax  +
push 1  +
push [ebp+lpString]  +
call ds:GetDateFormatW  +
test eax eax +
jz loc_100236B  +
push ebx  +
lea eax [ebp+TimeStr] +
push eax  +
call sub_1005F92  +
mov edi eax +
add edi 0Ah +
cmp lpStart[esi*4] ebx +
jnz loc_10029F8  +
lea eax [edi+edi] +
push eax  +
call sub_10060B0  +
mov lpStart[esi*4] eax +
jmp loc_1002A05  +
lea eax lpStart[esi*4] +
push eax  +
call sub_100638B  +
mov eax lpStart[esi*4] +
inc esi  +
cmp eax ebx +
jz loc_1002360  +
push edi  +
lea ecx [ebp+TimeStr] +
push ecx  +
push eax  +
call sub_10066F8  +
mov edi offset a@ftime +
push edi  +
push lpCommandLine  +
call sub_1002EEA  +
test eax eax +
jz loc_1002AEF  +
cmp dword_100A000 1 +
jnz loc_1002A5D  +
lea eax [esi+1] +
push eax  +
push edi  +
mov [ebp+var_870] eax +
call sub_10015FC  +
test eax eax +
jz loc_100230C  +
push 0FEh  +
lea eax [ebp+TimeStr] +
push eax  +
mov eax [ebp+var_878] +
dec eax  +
neg eax  +
sbb eax eax +
not eax  +
and eax offset aHhMmSs +
push eax  +
lea eax [ebp+Time] +
push eax  +
push ebx  +
push 400h  +
call ds:GetTimeFormatW  +
test eax eax +
jz loc_100236B  +
push ebx  +
lea eax [ebp+TimeStr] +
push eax  +
call sub_1005F92  +
mov edi eax +
add edi 0Ah +
cmp lpStart[esi*4] ebx +
jnz loc_1002AC4  +
lea eax [edi+edi] +
push eax  +
call sub_10060B0  +
mov lpStart[esi*4] eax +
jmp loc_1002AD1  +
lea eax lpStart[esi*4] +
push eax  +
call sub_100638B  +
mov eax lpStart[esi*4] +
inc esi  +
cmp eax ebx +
jz loc_1002360  +
push edi  +
lea ecx [ebp+TimeStr] +
push ecx  +
push eax  +
call sub_10066F8  +
cmp dword_100A000 1 +
jnz loc_1002B53  +
push ebx  +
push lpCommandLine  +
call sub_1005F92  +
mov edi eax +
add edi 0Ah +
lea eax [edi+edi] +
push eax  +
cmp dword_100A078 ebx +
jnz loc_1002B21  +
call sub_10060B0  +
mov dword_100A078 eax +
jmp loc_1002B39  +
push offset dword_100A078  +
call sub_1006406  +
test eax eax +
jnz loc_1002B39  +
push offset dword_100A078  +
call sub_100638B  +
mov eax dword_100A078 +
cmp eax ebx +
jz loc_1002360  +
push edi  +
push lpCommandLine  +
push eax  +
call sub_10066F8  +
push esi  +
mov dword_100A000 ebx +
call sub_10019B6  +
push esi  +
test eax eax +
jz loc_10021F8  +
call sub_100198C  +
xor eax eax +
inc eax  +
jmp loc_1002BAB  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10056FC  +
leave   +
retn 254h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
cmp [ebp+lpString] edi +
jnz loc_1002C10  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push edi  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
jmp loc_1002CF6  +
push 8  +
call sub_10060B0  +
mov [ebp+var_4] eax +
cmp eax edi +
jnz loc_1002C25  +
push 8007000Eh  +
jmp loc_1002BD4  +
push esi  +
push edi  +
push [ebp+lpString]  +
call sub_1005F92  +
mov esi eax +
mov eax [ebp+var_4] +
add esi 0Ah +
cmp [eax] edi +
jnz loc_1002C4B  +
lea eax [esi+esi] +
push eax  +
call sub_10060B0  +
mov ecx [ebp+var_4] +
mov [ecx] eax +
jmp loc_1002C51  +
push eax  +
call sub_100638B  +
mov eax [ebp+var_4] +
cmp [eax] edi +
jnz loc_1002C9F  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push edi  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
lea eax [ebp+var_4] +
push eax  +
call sub_100638B  +
xor eax eax +
jmp loc_1002CF5  +
push esi  +
push [ebp+lpString]  +
push dword ptr [eax]  +
call sub_10066F8  +
mov eax [ebp+var_4] +
mov [eax+4] edi +
mov eax dword_100A07C +
cmp eax edi +
jnz loc_1002CC3  +
mov eax [ebp+var_4] +
mov dword_100A07C eax +
jmp loc_1002CED  +
mov ecx dword_100A080 +
cmp ecx edi +
jnz loc_1002CD5  +
mov ecx [ebp+var_4] +
mov [ecx+4] eax +
jmp loc_1002CB9  +
mov eax [ecx+4] +
mov ecx [ebp+var_4] +
mov [ecx+4] eax +
mov eax [ebp+var_4] +
mov ecx dword_100A080 +
mov [ecx+4] eax +
mov eax [ebp+var_4] +
mov dword_100A080 eax +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_100A07C +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_1002D51  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push 0  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
leave   +
retn   +
push esi  +
push 0  +
push dword ptr [eax]  +
call sub_1005F92  +
mov esi eax +
add esi 0Ah +
cmp lpCommandLine 0 +
jnz loc_1002D79  +
lea eax [esi+esi] +
push eax  +
call sub_10060B0  +
mov lpCommandLine eax +
jmp loc_1002D83  +
push offset lpCommandLine  +
call sub_100638B  +
mov ecx lpCommandLine +
test ecx ecx +
jnz loc_1002DCC  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push 0  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
jmp loc_1002DF5  +
mov eax [ebp+var_4] +
mov edx [eax+4] +
push esi  +
mov dword_100A07C edx +
push dword ptr [eax]  +
push ecx  +
call sub_10066F8  +
push [ebp+var_4]  +
call sub_100638B  +
lea eax [ebp+var_4] +
push eax  +
call sub_100638B  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
cmp ebx edi +
jz loc_1002E88  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_1002E88  +
movzx eax word ptr [ebx] +
mov [ebp+arg_0] eax +
cmp eax edi +
jz loc_1002E7E  +
cmp eax 2Ah +
jz loc_1002E63  +
cmp eax 3Fh +
jz loc_1002E5C  +
movzx eax word ptr [esi] +
mov edi ds:toupper +
push eax  +
call edi  +
push [ebp+arg_0]  +
mov [ebp+arg_0] eax +
call edi  +
pop ecx  +
pop ecx  +
mov ecx [ebp+arg_0] +
cmp ecx eax +
jnz loc_1002EBF  +
add esi 2 +
push esi  +
add ebx 2 +
push ebx  +
call sub_1002DFD  +
test eax eax +
jz loc_1002EBF  +
xor eax eax +
inc eax  +
jmp loc_1002EC1  +
cmp [esi] di +
jz loc_1002EBF  +
jmp loc_1002E46  +
lea edi [ebx+2] +
push esi  +
push edi  +
call sub_1002DFD  +
cmp eax 1 +
jz loc_1002E57  +
mov ax [esi] +
inc esi  +
inc esi  +
test ax ax +
jnz loc_1002E66  +
jmp loc_1002EBF  +
xor eax eax +
cmp [esi] di +
setz al  +
jmp loc_1002EC1  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push edi  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_1002EDE  +
xor eax eax +
pop ebp  +
retn 8  +
pop ebp  +
jmp ds:StrChrW  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1002F02  +
cmp [ebp+arg_4] 0 +
jz loc_1002F02  +
pop ebp  +
jmp ds:StrStrW  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1002F23  +
cmp ecx 7FFFFFFFh +
jbe loc_1002F28  +
mov eax 80070057h +
test eax eax +
jl loc_1002F65  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1002F55  +
cmp eax esi +
ja loc_1002F55  +
jnz loc_1002F60  +
jmp loc_1002F5A  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 26Ch +
mov eax dword_100A034 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_C] +
mov ecx [ebp+arg_1C] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_20] +
xor ebx ebx +
mov [ebp+var_268] eax +
mov [ebp+lpString] esi +
mov [ebp+var_264] edx +
mov [ebp+var_260] ecx +
mov [ebp+var_26C] edi +
cmp eax ebx +
jz loc_10032D5  +
cmp ecx ebx +
jz loc_10032D5  +
cmp esi ebx +
jz loc_10032D5  +
cmp edi ebx +
jz loc_10032D5  +
cmp edx ebx +
jz loc_10032D5  +
mov ecx 250h +
lea eax [ebp+String] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1002FE6  +
lea eax [ebp+String] +
push eax  +
push lpCommandLine  +
call ds:FindFirstFileW  +
mov edi eax +
mov [ebp+hFindFile] edi +
cmp edi 0FFFFFFFFh +
jz loc_100321A  +
push ebx  +
push 1  +
push offset String2  +
lea eax [ebp-228h] +
push eax  +
call sub_1005FB4  +
test eax eax +
jz loc_10031FE  +
push ebx  +
push 1  +
push offset a__  +
lea eax [ebp-228h] +
push eax  +
call sub_1005FB4  +
test eax eax +
jz loc_10031FE  +
cmp [ebp+arg_24] 1 +
jnz loc_1003102  +
test dword ptr [ebp+String] 10h +
jz loc_1003102  +
push ebx  +
push [ebp+lpString]  +
call sub_1005F92  +
mov esi eax +
push ebx  +
lea eax [ebp-228h] +
push eax  +
call sub_1005F92  +
lea esi [esi+eax+0Ah] +
lea eax [esi+esi] +
push eax  +
cmp lpCommandLine ebx +
jnz loc_1003099  +
call sub_10060B0  +
mov lpCommandLine eax +
jmp loc_10030B1  +
push offset lpCommandLine  +
call sub_1006406  +
test eax eax +
jnz loc_10030B1  +
push offset lpCommandLine  +
call sub_100638B  +
mov eax lpCommandLine +
cmp eax ebx +
jz loc_1003233  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_10066F8  +
push esi  +
lea eax [ebp-228h] +
push eax  +
push lpCommandLine  +
call sub_100673B  +
push esi  +
push offset asc_10012FC  +
push lpCommandLine  +
call sub_100673B  +
push lpCommandLine  +
call sub_1002BC1  +
test eax eax +
jz loc_100326D  +
lea eax [ebp-228h] +
push eax  +
push [ebp+var_26C]  +
call sub_1002DFD  +
cmp eax 1 +
jnz loc_10031FE  +
cmp [ebp+arg_8] 2 +
jz loc_100314B  +
push dword ptr [ebp-23Ch]  +
lea esi [ebp+arg_10] +
push dword ptr [ebp-240h]  +
sub esp 0Ch +
mov edi esp +
push [ebp+arg_8]  +
movs   +
movs   +
movs   +
call sub_1004C54  +
cmp eax 1 +
jnz loc_10031FE  +
push ebx  +
push [ebp+var_264]  +
call sub_1005F92  +
mov esi eax +
add esi 0Ah +
lea eax [esi+esi] +
push eax  +
cmp lpCommandLine ebx +
jnz loc_1003174  +
call sub_10060B0  +
mov lpCommandLine eax +
jmp loc_1003189  +
mov edi offset lpCommandLine +
push edi  +
call sub_1006406  +
test eax eax +
jnz loc_1003189  +
push edi  +
call sub_100638B  +
mov eax lpCommandLine +
cmp eax ebx +
jz loc_1003281  +
push esi  +
push [ebp+var_264]  +
push eax  +
call sub_10066F8  +
sub esp 250h +
mov edi esp +
push [ebp+lpString]  +
mov ecx 94h +
lea esi [ebp+String] +
movs   +
call sub_100211B  +
xor esi esi +
inc esi  +
cmp eax esi +
jnz loc_10032CB  +
mov edi [ebp+var_268] +
cmp [edi] ebx +
jnz loc_10031EB  +
mov eax ds:_iob +
push offset asc_10012F8  +
add eax 20h +
push eax  +
call sub_100677E  +
call sub_1001EA0  +
cmp eax esi +
jnz loc_10031FC  +
mov eax [ebp+var_260] +
mov [eax] esi +
mov [edi] esi +
mov edi [ebp+hFindFile] +
lea eax [ebp+String] +
push eax  +
push edi  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_1003010  +
cmp edi ebx +
jz loc_1003225  +
push edi  +
call ds:FindClose  +
xor eax eax +
mov dword_100A080 ebx +
inc eax  +
jmp loc_100330E  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
cmp edi ebx +
jz loc_100330C  +
push edi  +
call ds:FindClose  +
jmp loc_100330C  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
cmp [ebp+hFindFile] ebx +
jz loc_100330C  +
push [ebp+hFindFile]  +
jmp loc_1003276  +
mov eax [ebp+var_260] +
mov [eax] ebx +
jmp loc_10032BB  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10056FC  +
leave   +
retn 28h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
cmp [ebp+lpSrch] ebx +
jz loc_10033C9  +
cmp [ebp+lpString] ebx +
jz loc_10033C9  +
push [ebp+lpSrch]  +
call ds:StrDupW  +
mov edi eax +
mov [ebp+hMem] edi +
cmp edi ebx +
jnz loc_1003359  +
push 8007000Eh  +
jmp loc_10033CB  +
push esi  +
push edi  +
call ds:CharLowerW  +
push ebx  +
push [ebp+lpString]  +
call sub_1005F92  +
push [ebp+lpString]  +
mov esi eax +
push edi  +
jmp loc_10033B1  +
mov ecx eax +
sub ecx [ebp+hMem] +
lea edx [esi+esi] +
sar ecx 1 +
add eax edx +
cmp esi 1 +
jbe loc_10033AD  +
mov edx [ebp+lpSrch] +
lea ecx [edx+ecx*2+2] +
lea edi [esi-1] +
movzx edx word ptr [ecx] +
push 41h  +
pop ebx  +
cmp bx dx +
ja loc_10033A6  +
push 5Ah  +
pop ebx  +
cmp bx dx +
jb loc_10033A6  +
add edx 20h +
mov [ecx] dx +
inc ecx  +
inc ecx  +
dec edi  +
jnz loc_100338D  +
xor ebx ebx +
push [ebp+lpString]  +
push eax  +
call sub_1002EEA  +
cmp eax ebx +
jnz loc_1003372  +
push [ebp+hMem]  +
call ds:LocalFree  +
xor eax eax +
inc eax  +
pop esi  +
jmp loc_1003402  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpBuffer] +
xor ebx ebx +
cmp edi ebx +
jz loc_10034B9  +
cmp [ebp+arg_4] ebx +
jz loc_10034B9  +
push edi  +
mov esi 1FCh +
push esi  +
call ds:GetCurrentDirectoryW  +
test eax eax +
jz loc_10034C1  +
push ebx  +
push edi  +
call sub_1005F92  +
push 5Ch  +
pop ecx  +
cmp cx [edi+eax*2-2] +
jz loc_100345D  +
push esi  +
push offset asc_10012FC  +
push edi  +
call sub_100673B  +
push offset a@relpath  +
push [ebp+arg_4]  +
call sub_1002EEA  +
test eax eax +
jz loc_10034B4  +
push ebx  +
push edi  +
call sub_1005F92  +
mov esi eax +
add esi 0Ah +
cmp pszFrom ebx +
jnz loc_1003492  +
lea eax [esi+esi] +
push eax  +
call sub_10060B0  +
mov pszFrom eax +
jmp loc_100349C  +
push offset pszFrom  +
call sub_100638B  +
mov eax pszFrom +
cmp eax ebx +
jnz loc_10034AC  +
push 8007000Eh  +
jmp loc_10034BB  +
push esi  +
push edi  +
push eax  +
call sub_10066F8  +
xor eax eax +
inc eax  +
jmp loc_10034F2  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_100A034 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_20C] eax +
mov [ebp+var_208] ecx +
mov [ebp+var_214] 1 +
cmp edi ebx +
jnz loc_1003580  +
cmp eax ebx +
jz loc_1003542  +
cmp ecx ebx +
jnz loc_1003580  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
jmp loc_1003B3F  +
mov ecx 1FCh +
lea eax [ebp+String] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_100358B  +
push esi  +
lea eax [ebp+var_214] +
push eax  +
call sub_1005F39  +
mov esi 0FEh +
push esi  +
lea ecx [ebp+String] +
push ecx  +
push 1Dh  +
push eax  +
mov [ebp+Locale] eax +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_1003A19  +
lea eax [ebp+String] +
cmp [ebp+var_208] ebx +
jz loc_10035DE  +
push 5  +
push eax  +
push [ebp+var_208]  +
jmp loc_100370E  +
push eax  +
lea eax [edi+2] +
push eax  +
call sub_1002EEA  +
mov [ebp+var_204] eax +
cmp eax ebx +
jnz loc_1003645  +
push 1  +
push 0Ah  +
push edi  +
call sub_1007214  +
test eax eax +
jnz loc_1003B3B  +
push 97h  +
call sub_1007628  +
push eax  +
push 9Ah  +
call sub_1007628  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a123  +
push ebx  +
add eax 40h +
push 3  +
push eax  +
call sub_10074D5  +
add esp 1Ch +
xor eax eax +
jmp loc_1003B3E  +
push 2Fh  +
pop ecx  +
mov [eax] cx +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_1005F92  +
cmp eax 1 +
jbe loc_100369C  +
push ebx  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_1005F92  +
mov ecx [ebp+var_204] +
lea eax [ecx+eax*2] +
push eax  +
call sub_1005F92  +
inc eax  +
push eax  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_1005F92  +
mov ecx [ebp+var_204] +
lea eax [ecx+eax*2] +
push eax  +
add ecx 2 +
push ecx  +
call sub_10066F8  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_204]  +
call sub_1002EEA  +
mov [ebp+var_208] eax +
cmp eax ebx +
jz loc_1003604  +
push 2Fh  +
pop ecx  +
mov [eax] cx +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_1005F92  +
cmp eax 1 +
jbe loc_1003713  +
push ebx  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_1005F92  +
mov ecx [ebp+var_208] +
lea eax [ecx+eax*2] +
push eax  +
call sub_1005F92  +
inc eax  +
push eax  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_1005F92  +
mov ecx [ebp+var_208] +
lea eax [ecx+eax*2] +
push eax  +
add ecx 2 +
push ecx  +
call sub_10066F8  +
push esi  +
lea eax [ebp+String] +
push eax  +
push 21h  +
push [ebp+Locale]  +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_1003A19  +
movzx eax [ebp+String] +
sub eax 30h +
jz loc_10039FF  +
dec eax  +
jz loc_1003897  +
dec eax  +
jnz loc_1003604  +
push esi  +
lea eax [ebp+String] +
push eax  +
push 1Fh  +
push [ebp+Locale]  +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_1003A19  +
push offset pszSet  +
lea eax [ebp+String] +
push eax  +
call ds:StrPBrkW  +
cmp eax ebx +
jz loc_1003604  +
push 64h  +
pop ecx  +
cmp cx [eax] +
mov eax [ebp+var_20C] +
jnz loc_1003845  +
cmp eax ebx +
jz loc_10037A8  +
mov dword ptr [eax] 4 +
jmp loc_1003B3B  +
push esi  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_10066F8  +
push 2Fh  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call ds:StrRChrW  +
mov [ebp+var_204] eax +
cmp eax ebx +
jz loc_1003604  +
push 0FDh  +
add eax 2 +
lea ecx [edi+2] +
push eax  +
push ecx  +
call sub_10066F8  +
push esi  +
push offset asc_100131C  +
lea eax [edi+2] +
push eax  +
call sub_100673B  +
mov ecx [ebp+var_204] +
xor eax eax +
push 2Fh  +
mov [ecx] ax +
push ebx  +
lea eax [ebp+String] +
push eax  +
call ds:StrRChrW  +
mov [ebp+var_204] eax +
cmp eax ebx +
jz loc_1003604  +
push esi  +
add eax 2 +
push eax  +
push edi  +
call sub_100673B  +
push esi  +
push offset asc_100131C  +
lea eax [edi+2] +
push eax  +
call sub_100673B  +
mov ecx [ebp+var_204] +
xor eax eax +
mov [ecx] ax +
jmp loc_100388C  +
cmp eax ebx +
jz loc_1003854  +
mov dword ptr [eax] 5 +
jmp loc_1003B3B  +
push esi  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_10066F8  +
push 0FDh  +
lea eax [ebp+var_1F4] +
push eax  +
lea eax [edi+2] +
push eax  +
call sub_10066F8  +
xor eax eax +
mov [ebp+var_1F6] ax +
push esi  +
push offset asc_100131C  +
push edi  +
call sub_100673B  +
lea eax [ebp-1FEh] +
jmp loc_1003B25  +
push esi  +
lea eax [ebp+String] +
push eax  +
push 1Fh  +
push [ebp+Locale]  +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_1003A19  +
push offset aMy  +
lea eax [ebp+String] +
push eax  +
call ds:StrPBrkW  +
cmp eax ebx +
jz loc_1003604  +
push 4Dh  +
pop ecx  +
cmp cx [eax] +
mov eax [ebp+var_20C] +
jnz loc_10039A2  +
cmp eax ebx +
jz loc_10038F0  +
mov dword ptr [eax] 2 +
jmp loc_1003B3B  +
push esi  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_10066F8  +
push 2Fh  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call ds:StrRChrW  +
mov [ebp+var_204] eax +
push 2Fh  +
lea eax [ebp+String] +
push eax  +
call sub_1002ECD  +
mov [ebp+var_208] eax +
cmp [ebp+var_204] ebx +
jz loc_1003604  +
cmp eax ebx +
jz loc_1003604  +
push 0FDh  +
add eax 2 +
push eax  +
lea eax [edi+2] +
push eax  +
call sub_10066F8  +
mov eax [ebp+var_208] +
lea ecx [ebp+String] +
sub eax ecx +
sar eax 1 +
mov ecx esi +
sub ecx eax +
push ecx  +
push [ebp+var_204]  +
push [ebp+var_208]  +
call sub_10066F8  +
push 2Fh  +
push edi  +
call sub_1002ECD  +
cmp eax ebx +
jz loc_1003604  +
mov ecx eax +
sub ecx edi +
sar ecx 1 +
sub esi ecx +
push esi  +
lea ecx [ebp-1FEh] +
push ecx  +
add eax 2 +
push eax  +
call sub_10066F8  +
jmp loc_1003B3B  +
cmp eax ebx +
jz loc_10039B1  +
mov dword ptr [eax] 3 +
jmp loc_1003B3B  +
push esi  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_10066F8  +
push 2Fh  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call ds:StrRChrW  +
mov [ebp+var_204] eax +
cmp eax ebx +
jz loc_1003604  +
push 0FDh  +
add eax 2 +
push eax  +
lea eax [edi+2] +
push eax  +
call sub_10066F8  +
mov ecx [ebp+var_204] +
xor eax eax +
mov [ecx] ax +
jmp loc_1003880  +
push esi  +
lea eax [ebp+String] +
push eax  +
push 1Fh  +
push [ebp+Locale]  +
call ds:GetLocaleInfoW  +
test eax eax +
jnz loc_1003A4D  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
jmp loc_100363E  +
push offset aDy  +
lea eax [ebp+String] +
push eax  +
call ds:StrPBrkW  +
cmp eax ebx +
jz loc_1003604  +
push 79h  +
pop ecx  +
cmp cx [eax] +
jnz loc_1003B2F  +
mov ecx [ebp+var_20C] +
cmp ecx ebx +
jz loc_1003A87  +
xor eax eax +
inc eax  +
mov [ecx] eax +
jmp loc_1003B3E  +
push esi  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_10066F8  +
push 2Fh  +
push ebx  +
push edi  +
call ds:StrRChrW  +
push 2Fh  +
push edi  +
mov [ebp+var_204] eax +
call sub_1002ECD  +
cmp [ebp+var_204] ebx +
jz loc_1003604  +
cmp eax ebx +
jz loc_1003604  +
add eax 2 +
push ebx  +
push eax  +
mov [ebp+Locale] eax +
call sub_1005F92  +
inc eax  +
push eax  +
mov eax [ebp+var_204] +
add eax 2 +
push eax  +
push [ebp+Locale]  +
call sub_10066F8  +
push esi  +
push offset asc_100131C  +
push edi  +
call sub_100673B  +
push 2Fh  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call ds:StrRChrW  +
cmp eax ebx +
jz loc_1003604  +
xor ecx ecx +
mov [eax] cx +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_1005F92  +
lea eax [ebp+eax*2+var_208] +
push esi  +
push eax  +
push edi  +
call sub_100673B  +
jmp loc_1003B3B  +
mov eax [ebp+var_20C] +
cmp eax ebx +
jz loc_1003B3B  +
mov [eax] ebx +
xor eax eax +
inc eax  +
pop esi  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_10056FC  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 5F4h +
mov eax dword_100A034 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
mov edx [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_20] +
push esi  +
mov esi [ebp+arg_10] +
mov [ebp+var_5E8] ebx +
push edi  +
mov edi [ebp+arg_14] +
xor ebx ebx +
mov [ebp+var_5F4] eax +
mov [ebp+var_5E4] ecx +
mov [ebp+var_5EC] edx +
mov [ebp+var_5E0] esi +
mov [ebp+var_5F0] edi +
cmp eax ebx +
jz loc_10041C2  +
cmp ecx ebx +
jz loc_10041C2  +
cmp edx ebx +
jz loc_10041C2  +
cmp esi ebx +
jz loc_10041C2  +
cmp edi ebx +
jz loc_10041C2  +
cmp [ebp+arg_18] ebx +
jz loc_10041C2  +
cmp [ebp+arg_1C] ebx +
jz loc_10041C2  +
cmp [ebp+var_5E8] ebx +
jz loc_10041C2  +
mov ecx 1E0h +
lea eax [ebp+dwErrCode] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1003BF5  +
mov ecx 3F8h +
lea eax [ebp+var_3FC] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1003C06  +
push 8  +
mov edi offset aParser2 +
push edi  +
lea eax [ebp+dwErrCode] +
push eax  +
call sub_10066B5  +
mov eax [ebp+arg_1C] +
push 8  +
mov [ebp+var_5B0] eax +
xor esi esi +
push edi  +
lea eax [ebp+var_58C] +
inc esi  +
push eax  +
mov [ebp+var_5D4] 0Ah +
mov [ebp+var_5BC] offset a? +
mov [ebp+var_5B8] ebx +
mov [ebp+var_5B4] ebx +
mov [ebp+var_5CC] 20000h +
mov [ebp+var_5C8] ebx +
mov [ebp+var_5C4] esi +
mov [ebp+var_5C0] ebx +
mov [ebp+var_5AC] ebx +
mov [ebp+var_5A8] ebx +
mov [ebp+var_5A4] ebx +
mov [ebp+var_5A0] ebx +
mov [ebp+var_59C] ebx +
mov [ebp+var_598] ebx +
mov [ebp+var_594] ebx +
call sub_10066B5  +
mov eax [ebp+var_5E4] +
push 8  +
mov [ebp+var_560] eax +
push edi  +
lea eax [ebp+var_53C] +
push eax  +
mov [ebp+var_584] esi +
mov [ebp+var_56C] offset aP +
mov [ebp+var_568] ebx +
mov [ebp+var_564] ebx +
mov [ebp+var_57C] 0C0h +
mov [ebp+var_578] ebx +
mov [ebp+var_574] esi +
mov [ebp+var_570] ebx +
mov [ebp+var_55C] 1FCh +
mov [ebp+var_558] ebx +
mov [ebp+var_554] ebx +
mov [ebp+var_550] ebx +
mov [ebp+var_54C] ebx +
mov [ebp+var_548] ebx +
mov [ebp+var_544] ebx +
call sub_10066B5  +
mov eax [ebp+var_5EC] +
push 8  +
mov [ebp+var_510] eax +
push edi  +
lea eax [ebp+var_4EC] +
push eax  +
mov [ebp+var_534] esi +
mov [ebp+var_51C] offset aM +
mov [ebp+var_518] ebx +
mov [ebp+var_514] ebx +
mov [ebp+var_52C] 0C0h +
mov [ebp+var_528] ebx +
mov [ebp+var_524] esi +
mov [ebp+var_520] ebx +
mov [ebp+var_50C] 0FEh +
mov [ebp+var_508] ebx +
mov [ebp+var_504] ebx +
mov [ebp+var_500] ebx +
mov [ebp+var_4FC] ebx +
mov [ebp+var_4F8] ebx +
mov [ebp+var_4F4] ebx +
call sub_10066B5  +
mov [ebp+var_4E4] esi +
mov [ebp+var_4CC] offset aC +
mov [ebp+var_4C8] ebx +
mov [ebp+var_4C4] ebx +
mov [ebp+var_4DC] 0C0h +
mov [ebp+var_4D8] ebx +
mov [ebp+var_4D4] esi +
mov eax [ebp+var_5E0] +
push 8  +
mov [ebp+var_4C0] eax +
push edi  +
lea eax [ebp+var_49C] +
push eax  +
mov [ebp+var_4D0] ebx +
mov [ebp+var_4BC] 0FEh +
mov [ebp+var_4B8] ebx +
mov [ebp+var_4B4] ebx +
mov [ebp+var_4B0] ebx +
mov [ebp+var_4AC] ebx +
mov [ebp+var_4A8] ebx +
mov [ebp+var_4A4] ebx +
call sub_10066B5  +
mov eax [ebp+var_5F0] +
push 8  +
mov [ebp+var_470] eax +
push edi  +
lea eax [ebp+var_44C] +
push eax  +
mov [ebp+var_494] esi +
mov [ebp+var_47C] offset aD +
mov [ebp+var_478] ebx +
mov [ebp+var_474] ebx +
mov [ebp+var_48C] 0C0h +
mov [ebp+var_488] ebx +
mov [ebp+var_484] esi +
mov [ebp+var_480] ebx +
mov [ebp+var_46C] 0FDh +
mov [ebp+var_468] ebx +
mov [ebp+var_464] ebx +
mov [ebp+var_460] ebx +
mov [ebp+var_45C] ebx +
mov [ebp+var_458] ebx +
mov [ebp+var_454] ebx +
call sub_10066B5  +
mov eax [ebp+arg_18] +
push ebx  +
mov [ebp+var_420] eax +
lea eax [ebp+dwErrCode] +
push eax  +
push 6  +
push 0FFFFFFFFh  +
push [ebp+var_5F4]  +
mov [ebp+var_444] 0Ah +
push [ebp+arg_0]  +
mov [ebp+var_42C] offset aS_1 +
mov [ebp+var_428] ebx +
mov [ebp+var_424] ebx +
mov [ebp+var_43C] ebx +
mov [ebp+var_438] ebx +
mov [ebp+var_434] esi +
mov [ebp+var_430] ebx +
mov [ebp+var_41C] ebx +
mov [ebp+var_418] ebx +
mov [ebp+var_414] ebx +
mov [ebp+var_410] ebx +
mov [ebp+var_40C] ebx +
mov [ebp+var_408] ebx +
mov [ebp+var_404] ebx +
call sub_1008517  +
test eax eax +
jz loc_10041CF  +
mov eax [ebp+arg_1C] +
cmp [eax] esi +
jnz loc_1003F82  +
cmp [ebp+arg_0] 2 +
jbe loc_10041BE  +
push 97h  +
call sub_1007628  +
push eax  +
push 98h  +
call sub_1007628  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a123  +
push ebx  +
add eax 40h +
push 3  +
push eax  +
call sub_10074D5  +
add esp 1Ch +
jmp loc_10041F9  +
mov edi [ebp+var_5E4] +
cmp [ebp+var_570] ebx +
jnz loc_1003FA0  +
push 0FEh  +
push offset String2  +
push edi  +
call sub_10066F8  +
push 5Ch  +
pop eax  +
cmp ax [edi] +
jnz loc_1003FE8  +
cmp ax [edi+2] +
jnz loc_1003FE8  +
push eax  +
add edi 4 +
push edi  +
call sub_1002ECD  +
cmp eax ebx +
jz loc_1003FDE  +
movzx eax word ptr [eax+2] +
xor ecx ecx +
cmp cx ax +
jz loc_1003FDE  +
push 5Ch  +
pop ecx  +
cmp cx ax +
jz loc_1003FDE  +
push 0ACh  +
call sub_1007628  +
jmp loc_10041D4  +
push 10Bh  +
jmp loc_10041C4  +
push offset a___  +
push edi  +
call sub_1002EEA  +
test eax eax +
jnz loc_1003FDE  +
push offset asc_1001364  +
push edi  +
call sub_1002EEA  +
test eax eax +
jnz loc_1003FDE  +
push offset asc_100131C  +
push edi  +
call sub_1002EEA  +
test eax eax +
jnz loc_1003FDE  +
cmp [ebp+var_520] ebx +
jnz loc_100403A  +
push 0FEh  +
push offset asc_1001360  +
push [ebp+var_5EC]  +
call sub_10066F8  +
mov eax [ebp+var_5E8] +
mov [eax] ebx +
cmp [ebp+var_4D0] ebx +
jnz loc_100405C  +
push 0FEh  +
push offset aCmdCEcho@file  +
push [ebp+var_5E0]  +
call sub_10066F8  +
jmp loc_100411B  +
mov edi [ebp+var_5E0] +
push edi  +
call sub_1001D7D  +
test eax eax +
jz loc_10041F9  +
push offset a@file  +
push edi  +
call sub_1003324  +
test eax eax +
jz loc_10041F9  +
push offset a@fname  +
push edi  +
call sub_1003324  +
test eax eax +
jz loc_10041F9  +
push offset a@ext  +
push edi  +
call sub_1003324  +
test eax eax +
jz loc_10041F9  +
push offset a@path  +
push edi  +
call sub_1003324  +
test eax eax +
jz loc_10041F9  +
push offset a@relpath  +
push edi  +
call sub_1003324  +
test eax eax +
jz loc_10041F9  +
push offset a@isdir  +
push edi  +
call sub_1003324  +
test eax eax +
jz loc_10041F9  +
push offset a@fsize  +
push edi  +
call sub_1003324  +
test eax eax +
jz loc_10041F9  +
push offset a@fdate  +
push edi  +
call sub_1003324  +
test eax eax +
jz loc_10041F9  +
push offset a@ftime  +
push edi  +
call sub_1003324  +
test eax eax +
jz loc_10041F9  +
cmp [ebp+var_480] ebx +
jz loc_10041BE  +
mov edi [ebp+var_5F0] +
movzx eax word ptr [edi] +
push 2Bh  +
pop ecx  +
cmp cx ax +
jz loc_1004174  +
push 2Dh  +
pop ecx  +
cmp cx ax +
jz loc_1004174  +
push 1FCh  +
push edi  +
lea eax [ebp+var_3FC] +
push eax  +
call sub_10066F8  +
push 0FEh  +
push offset asc_1001338  +
push edi  +
call sub_10066F8  +
push 0FEh  +
lea eax [ebp+var_3FC] +
push eax  +
push edi  +
call sub_100673B  +
movzx eax word ptr [edi] +
push 2Bh  +
pop ecx  +
cmp cx ax +
jz loc_1004187  +
push 2Dh  +
pop ecx  +
cmp cx ax +
jnz loc_1004192  +
push ebx  +
push edi  +
call sub_1005F92  +
cmp eax esi +
ja loc_10041A7  +
push 97h  +
call sub_1007628  +
push eax  +
push 9Ah  +
jmp loc_1003F53  +
push ebx  +
push ebx  +
push edi  +
call sub_10034FE  +
test eax eax +
jz loc_10041F9  +
push 2Fh  +
add edi 2 +
push edi  +
call sub_1002ECD  +
mov eax esi +
jmp loc_10041FB  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10056FC  +
leave   +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
mov [ebp+var_4] edi +
mov ebx 1389h +
cmp dword_100A07C edi +
jz loc_10043AC  +
call sub_1002D00  +
test eax eax +
jz loc_10043C3  +
push 1FCh  +
push lpCommandLine  +
push [ebp+lpPathName]  +
call sub_10066F8  +
push [ebp+lpPathName]  +
call ds:SetCurrentDirectoryW  +
test eax eax +
jnz loc_10042F8  +
call ds:GetLastError  +
cmp eax 5 +
jnz loc_10042BE  +
push 0A9h  +
call sub_1007628  +
push eax  +
mov esi 0AAh +
push esi  +
call sub_1007628  +
push eax  +
push [ebp+lpPathName]  +
push esi  +
call sub_1007628  +
push eax  +
push 0A7h  +
call sub_1007628  +
push eax  +
push ebx  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a123456  +
push edi  +
add eax 40h +
push 6  +
push eax  +
call sub_10074D5  +
add esp 28h +
jmp loc_10042E9  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push ebx  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push edi  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
push offset lpCommandLine  +
call sub_100638B  +
jmp loc_1004397  +
push edi  +
push lpCommandLine  +
call sub_1005F92  +
push edi  +
push [ebp+lpString]  +
mov esi eax +
call sub_1005F92  +
lea esi [esi+eax+0Ah] +
lea eax [esi+esi] +
push eax  +
cmp lpCommandLine edi +
jnz loc_100432B  +
call sub_10060B0  +
mov lpCommandLine eax +
jmp loc_1004343  +
push offset lpCommandLine  +
call sub_1006406  +
test eax eax +
jnz loc_1004343  +
push offset lpCommandLine  +
call sub_100638B  +
mov eax lpCommandLine +
cmp eax edi +
jz loc_10043D6  +
push esi  +
push offset asc_1001360  +
push eax  +
call sub_100673B  +
push [ebp+arg_1C]  +
lea eax [ebp+var_4] +
push [ebp+lpString]  +
lea esi [ebp+arg_C] +
push eax  +
sub esp 0Ch +
mov edi esp +
push [ebp+arg_8]  +
movs   +
push [ebp+arg_18]  +
movs   +
push [ebp+lpPathName]  +
lea eax [ebp+var_8] +
push eax  +
movs   +
call sub_1002F6C  +
test eax eax +
jz loc_100440E  +
push offset lpCommandLine  +
call sub_100638B  +
xor edi edi +
cmp dword_100A07C edi +
jnz loc_1004234  +
cmp [ebp+var_8] edi +
jnz loc_10044B6  +
push 2  +
pop esi  +
cmp [ebp+arg_18] esi +
jz loc_100441E  +
push 9Bh  +
call sub_1007628  +
jmp loc_1004493  +
push offset lpCommandLine  +
call sub_100638B  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 24h  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push ebx  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push edi  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
jmp loc_10043CD  +
xor esi esi +
push offset lpCommandLine  +
call sub_100638B  +
mov eax esi +
jmp loc_10043CF  +
cmp [ebp+arg_20] 1 +
jnz loc_1004472  +
push 0A2h  +
call sub_1007628  +
push eax  +
mov esi 0AAh +
push esi  +
call sub_1007628  +
push eax  +
push [ebp+lpString]  +
push esi  +
call sub_1007628  +
push eax  +
push 0A1h  +
call sub_1007628  +
push eax  +
push ebx  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a123456  +
push edi  +
add eax 40h +
push 6  +
push eax  +
call sub_10074D5  +
add esp 28h +
jmp loc_10044B3  +
call ds:GetLastError  +
cmp eax 6 +
jz loc_1004482  +
cmp eax 12h +
jnz loc_1004489  +
push esi  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push ebx  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push edi  +
add eax 40h +
push esi  +
push eax  +
call sub_10074D5  +
add esp 18h +
mov [ebp+var_4] edi +
mov esi [ebp+var_4] +
jmp loc_1004410  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 314h +
mov eax dword_100A034 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_314] 0 +
mov ecx 200h +
lea eax [ebp+String] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_10044EA  +
push 28h  +
pop ecx  +
lea eax [ebp+var_38] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_10044F7  +
push 0Ah  +
pop ecx  +
lea eax [ebp+var_10] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1004504  +
push 64h  +
pop ecx  +
lea eax [ebp+var_9C] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1004514  +
push 64h  +
pop ecx  +
lea eax [ebp+var_100] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1004524  +
push 10h  +
pop ecx  +
lea eax [ebp+SystemTime] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1004534  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_314] +
push eax  +
push ecx  +
call sub_10034FE  +
test eax eax +
jz loc_100484B  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
mov eax [ebp+var_314] +
dec eax  +
jz loc_100470A  +
dec eax  +
jz loc_10046C2  +
dec eax  +
jz loc_100466B  +
dec eax  +
jz loc_1004623  +
dec eax  +
lea eax [ebp+var_10] +
push eax  +
push eax  +
jz loc_10045D1  +
push 0ADh  +
call sub_1007628  +
push eax  +
lea eax [ebp+var_38] +
push 14h  +
push eax  +
call sub_1002F0D  +
lea eax [ebp+var_10] +
push eax  +
push eax  +
push offset a01S01S2001  +
lea eax [ebp+var_100] +
push 32h  +
push eax  +
call sub_1002F0D  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
movzx eax [ebp+SystemTime.wDay] +
jmp loc_1004750  +
push 0B2h  +
call sub_1007628  +
push eax  +
lea eax [ebp+var_38] +
push 14h  +
push eax  +
call sub_1002F0D  +
lea eax [ebp+var_10] +
push eax  +
push eax  +
push offset a2001S01S01  +
lea eax [ebp+var_100] +
push 32h  +
push eax  +
call sub_1002F0D  +
movzx eax [ebp+SystemTime.wDay] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
movzx eax [ebp+SystemTime.wYear] +
jmp loc_100475C  +
lea eax [ebp+var_10] +
push eax  +
push eax  +
push 0B1h  +
call sub_1007628  +
push eax  +
lea eax [ebp+var_38] +
push 14h  +
push eax  +
call sub_1002F0D  +
lea eax [ebp+var_10] +
push eax  +
push eax  +
push offset a2001S01S01  +
lea eax [ebp+var_100] +
push 32h  +
push eax  +
call sub_1002F0D  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
movzx eax [ebp+SystemTime.wDay] +
jmp loc_1004612  +
lea eax [ebp+var_10] +
push eax  +
push eax  +
push 0B0h  +
call sub_1007628  +
push eax  +
lea eax [ebp+var_38] +
push 14h  +
push eax  +
call sub_1002F0D  +
lea eax [ebp+var_10] +
push eax  +
push eax  +
push offset a01S2001S01  +
lea eax [ebp+var_100] +
push 32h  +
push eax  +
call sub_1002F0D  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
movzx eax [ebp+SystemTime.wDay] +
jmp loc_100475C  +
lea eax [ebp+var_10] +
push eax  +
push eax  +
push 0AFh  +
call sub_1007628  +
push eax  +
lea eax [ebp+var_38] +
push 14h  +
push eax  +
call sub_1002F0D  +
lea eax [ebp+var_10] +
push eax  +
push eax  +
push offset a01S01S2001  +
lea eax [ebp+var_100] +
push 32h  +
push eax  +
call sub_1002F0D  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
jmp loc_10046B1  +
lea eax [ebp+var_10] +
push eax  +
push eax  +
push 0AEh  +
call sub_1007628  +
push eax  +
lea eax [ebp+var_38] +
push 14h  +
push eax  +
call sub_1002F0D  +
lea eax [ebp+var_10] +
push eax  +
push eax  +
push offset a01S2001S01  +
lea eax [ebp+var_100] +
push 32h  +
push eax  +
call sub_1002F0D  +
movzx eax [ebp+SystemTime.wDay] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
push offset aDSDSD  +
lea eax [ebp+var_9C] +
push 32h  +
push eax  +
call sub_1002F0D  +
add esp 48h +
push edi  +
mov edi [ebp+dwMessageId] +
cmp edi [ebp+arg_4] +
ja loc_1004847  +
push ebx  +
mov ebx 107h +
push esi  +
lea esi [ebx-7] +
mov edx 0CBh +
cmp edi edx +
jz loc_10047FC  +
cmp edi 0F1h +
jbe loc_10047F4  +
cmp edi 0FBh +
jbe loc_10047DE  +
add edx 3Ah +
cmp edi edx +
jz loc_10047C7  +
cmp edi ebx +
jnz loc_10047F4  +
mov ecx esi +
lea eax [ebp+String] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_10047B6  +
lea eax [ebp+var_9C] +
push eax  +
push ebx  +
jmp loc_1004810  +
mov ecx esi +
lea eax [ebp+String] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_10047CF  +
lea eax [ebp+var_100] +
jmp loc_100480E  +
mov ecx esi +
lea eax [ebp+String] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_10047E6  +
lea eax [ebp+var_38] +
push eax  +
push edi  +
jmp loc_1004810  +
push edi  +
call sub_1007628  +
jmp loc_100482C  +
mov ecx esi +
lea eax [ebp+String] +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1004804  +
lea eax [ebp+var_38] +
push eax  +
push edx  +
call sub_1007628  +
push eax  +
lea eax [ebp+String] +
push esi  +
push eax  +
call sub_1002F0D  +
add esp 10h +
lea eax [ebp+String] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call sub_100677E  +
inc edi  +
cmp edi [ebp+arg_4] +
jbe loc_100478A  +
pop esi  +
pop ebx  +
xor eax eax +
inc eax  +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_10056FC  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 624h +
mov eax dword_100A034 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
push ebx  +
xor edi edi +
inc edi  +
push ebx  +
push edi  +
push ebx  +
mov [ebp+var_618] eax +
mov [ebp+var_604] 2 +
mov [ebp+var_614] ebx +
mov [ebp+var_608] ebx +
mov [ebp+var_610] edi +
mov [ebp+lpString] ebx +
mov [ebp+var_600] ebx +
call ds:HeapSetInformation  +
push 0Ch  +
pop ecx  +
lea eax [ebp+var_624] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10048BF  +
mov ecx 3F8h +
lea eax [ebp+PathName] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10048D0  +
mov esi 1FCh +
mov ecx esi +
lea eax [ebp+var_200] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10048E3  +
cmp [ebp+lpString] ebx +
jnz loc_10048FF  +
push esi  +
call sub_10060B0  +
mov [ebp+lpString] eax +
jmp loc_100490B  +
lea eax [ebp+lpString] +
push eax  +
call sub_100638B  +
cmp [ebp+var_600] ebx +
jnz loc_1004921  +
push esi  +
call sub_10060B0  +
mov [ebp+var_600] eax +
jmp loc_100492D  +
lea eax [ebp+var_600] +
push eax  +
call sub_100638B  +
cmp [ebp+var_600] ebx +
jz loc_1004BE7  +
cmp [ebp+lpString] ebx +
jz loc_1004BE7  +
mov esi ds:SetErrorMode +
push edi  +
call esi  +
mov [ebp+uMode] eax +
lea eax [ebp+var_610] +
push eax  +
lea eax [ebp+var_608] +
push eax  +
lea eax [ebp+var_614] +
push eax  +
push [ebp+lpString]  +
lea eax [ebp+var_200] +
push eax  +
push [ebp+var_600]  +
lea eax [ebp+PathName] +
push eax  +
push [ebp+var_618]  +
push [ebp+arg_0]  +
call sub_1003B54  +
test eax eax +
jnz loc_10049C7  +
lea eax [ebp+lpString] +
push eax  +
call sub_100638B  +
lea eax [ebp+var_600] +
push eax  +
call sub_100638B  +
mov ebx edi +
call sub_1006612  +
push [ebp+uMode]  +
call ds:SetErrorMode  +
mov eax ebx +
jmp loc_1004C40  +
cmp [ebp+var_608] edi +
jnz loc_1004A1E  +
push 10Bh  +
push 0C9h  +
mov [ebp+var_604] ebx +
call sub_10044C3  +
test eax eax +
jnz loc_10049EE  +
mov [ebp+var_604] edi +
lea eax [ebp+lpString] +
push eax  +
call sub_100638B  +
lea eax [ebp+var_600] +
push eax  +
call sub_100638B  +
call sub_1006612  +
push [ebp+uMode]  +
call esi  +
mov eax [ebp+var_604] +
jmp loc_1004C40  +
lea eax [ebp+PathName] +
push eax  +
call ds:SetCurrentDirectoryW  +
cmp eax edi +
jnz loc_1004B11  +
lea eax [ebp+var_200] +
push eax  +
lea eax [ebp+PathName] +
push eax  +
call sub_100340D  +
cmp eax edi +
jnz loc_1004BA4  +
lea eax [ebp+PathName] +
push eax  +
call sub_1002BC1  +
cmp eax edi +
jnz loc_1004BA4  +
push ebx  +
push [ebp+lpString]  +
mov [ebp+var_608] edi +
call sub_1005F92  +
test eax eax +
jz loc_1004A97  +
push [ebp+lpString]  +
lea eax [ebp+var_624] +
push eax  +
lea eax [ebp+var_604] +
push eax  +
call sub_1005347  +
mov [ebp+var_608] eax +
cmp [ebp+var_608] edi +
jnz loc_1004BA4  +
lea eax [ebp+lpString] +
push eax  +
call sub_100638B  +
push [ebp+var_610]  +
lea esi [ebp+var_624] +
push [ebp+var_614]  +
lea eax [ebp+var_200] +
push [ebp+var_604]  +
sub esp 0Ch +
mov edi esp +
movs   +
push eax  +
push [ebp+var_600]  +
movs   +
lea eax [ebp+PathName] +
push eax  +
movs   +
call sub_1004211  +
cmp eax 1 +
jnz loc_1004B81  +
push offset pszFrom  +
call sub_100638B  +
lea eax [ebp+var_600] +
push eax  +
call sub_100638B  +
call sub_100197C  +
jmp loc_10049AF  +
call ds:GetLastError  +
mov [ebp+var_604] eax +
cmp eax 5 +
jz loc_1004B7D  +
cmp eax 35h +
jz loc_1004B69  +
cmp eax 43h +
jz loc_1004B69  +
cmp eax 7Bh +
jz loc_1004B62  +
push 0ABh  +
call sub_1007628  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
jmp loc_1004BA4  +
push 10Bh  +
jmp loc_1004B6B  +
push 7Bh  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
jmp loc_1004B3B  +
push 5  +
jmp loc_1004B6B  +
xor edi edi +
inc edi  +
jmp loc_1004BA4  +
mov dword_100A080 eax +
mov ecx [eax+4] +
push eax  +
mov dword_100A07C ecx +
call sub_100638B  +
push offset dword_100A080  +
call sub_100638B  +
mov eax dword_100A07C +
cmp eax ebx +
jnz loc_1004B86  +
push offset pszFrom  +
call sub_100638B  +
lea eax [ebp+var_600] +
push eax  +
call sub_100638B  +
lea eax [ebp+lpString] +
push eax  +
call sub_100638B  +
call sub_100197C  +
call sub_1006612  +
push [ebp+uMode]  +
call ds:SetErrorMode  +
jmp loc_1004C3E  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
lea eax [ebp+lpString] +
push eax  +
call sub_100638B  +
lea eax [ebp+var_600] +
push eax  +
call sub_100638B  +
call sub_1006612  +
mov eax edi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10056FC  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea eax [ebp+LocalFileTime] +
push eax  +
lea eax [ebp+FileTime] +
xor esi esi +
push eax  +
mov dword ptr [ebp+FatDate] esi +
mov dword ptr [ebp+FatTime] esi +
call ds:FileTimeToLocalFileTime  +
test eax eax +
jnz loc_1004CAD  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push esi  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
pop esi  +
leave   +
retn 18h  +
lea eax [ebp+FatTime] +
push eax  +
lea eax [ebp+FatDate] +
push eax  +
lea eax [ebp+LocalFileTime] +
push eax  +
call ds:FileTimeToDosDateTime  +
test eax eax +
jz loc_1004C77  +
mov eax [ebp+arg_0] +
sub eax esi +
jz loc_1004D3B  +
dec eax  +
jz loc_1004D09  +
push 97h  +
call sub_1007628  +
push eax  +
push 9Ah  +
call sub_1007628  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a123  +
push esi  +
add eax 40h +
push 3  +
push eax  +
call sub_10074D5  +
add esp 1Ch +
jmp loc_1004CA6  +
mov ecx dword ptr [ebp+FatDate] +
mov eax ecx +
shr eax 9 +
and eax 7Fh +
add eax 7BCh +
cmp [ebp+arg_C] eax +
ja loc_1004CA6  +
jnz loc_1004D77  +
mov eax ecx +
shr eax 5 +
and eax 0Fh +
cmp [ebp+arg_8] eax +
ja loc_1004CA6  +
jnz loc_1004D77  +
and ecx 1Fh +
cmp ecx [ebp+arg_4] +
jmp loc_1004D6F  +
mov ecx dword ptr [ebp+FatDate] +
mov eax ecx +
shr eax 9 +
and eax 7Fh +
add eax 7BCh +
cmp [ebp+arg_C] eax +
jb loc_1004CA6  +
jnz loc_1004D77  +
mov eax ecx +
shr eax 5 +
and eax 0Fh +
cmp [ebp+arg_8] eax +
jb loc_1004CA6  +
jnz loc_1004D77  +
and ecx 1Fh +
cmp [ebp+arg_4] ecx +
sbb eax eax +
inc eax  +
jmp loc_1004CA8  +
xor eax eax +
inc eax  +
jmp loc_1004CA8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_100A034 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+lpString] +
xor ebx ebx +
mov [ebp+var_1C] ebx +
cmp edi ebx +
jz loc_1004F7F  +
push ebx  +
push edi  +
call sub_1005F92  +
cmp eax 0Bh +
ja loc_1004F7F  +
push ebx  +
push edi  +
call sub_1005F92  +
cmp eax 9 +
jb loc_1004F7F  +
cmp esi ebx +
jz loc_1004F7F  +
push 14h  +
pop ecx  +
lea eax [ebp+var_18] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_1004DDA  +
push 4  +
lea ebx [edi+2] +
push ebx  +
lea eax [ebp+var_18] +
push eax  +
call sub_10066F8  +
push 2Fh  +
pop edi  +
push edi  +
lea eax [ebp+var_18] +
push eax  +
call sub_1002ECD  +
test eax eax +
jz loc_1004F7F  +
mov eax edi +
cmp ax [ebp+var_18] +
jz loc_1004F7F  +
cmp ax [ebp-16h] +
jnz loc_1004E21  +
add ebx 4 +
xor eax eax +
mov [ebp-16h] ax +
jmp loc_1004E2A  +
add ebx 6 +
xor eax eax +
mov [ebp+var_14] ax +
push edi  +
lea eax [ebp+var_18] +
push eax  +
call sub_1002ECD  +
test eax eax +
jnz loc_1004F7F  +
and [ebp+var_1C] eax +
mov edi ds:wcstoul +
push 0Ah  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
call edi  +
add esp 0Ch +
push 0  +
push [ebp+var_1C]  +
mov [esi+4] eax +
call sub_1005F92  +
test eax eax +
jnz loc_1004F7F  +
push 4  +
push ebx  +
lea eax [ebp+var_18] +
push eax  +
call sub_10066F8  +
push 2Fh  +
lea eax [ebp+var_18] +
push eax  +
call sub_1002ECD  +
test eax eax +
jz loc_1004F7F  +
push 2Fh  +
pop eax  +
cmp ax [ebp+var_18] +
jz loc_1004F7F  +
cmp ax [ebp-16h] +
jnz loc_1004EA6  +
add ebx 4 +
xor eax eax +
mov [ebp-16h] ax +
jmp loc_1004EAF  +
add ebx 6 +
xor eax eax +
mov [ebp+var_14] ax +
and [ebp+var_1C] 0 +
push 0Ah  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
call edi  +
add esp 0Ch +
push 0  +
push [ebp+var_1C]  +
mov [esi] eax +
call sub_1005F92  +
test eax eax +
jnz loc_1004F7F  +
push eax  +
push ebx  +
call sub_1005F92  +
cmp eax 4 +
jnz loc_1004F7F  +
push 5  +
push ebx  +
lea eax [ebp+var_18] +
push eax  +
call sub_10066F8  +
and [ebp+var_1C] 0 +
push 0Ah  +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
call edi  +
add esp 0Ch +
push 0  +
push [ebp+var_1C]  +
mov [esi+8] eax +
call sub_1005F92  +
test eax eax +
jnz loc_1004F7F  +
mov edi [esi] +
test edi edi +
jbe loc_1004F7F  +
mov ecx [esi+4] +
test ecx ecx +
jbe loc_1004F7F  +
mov esi [esi+8] +
test esi esi +
jbe loc_1004F7F  +
xor edx edx +
mov eax esi +
mov ebx 190h +
div  ebx +
test edx edx +
jz loc_1004F4E  +
test esi 3 +
jnz loc_1004F5D  +
mov eax esi +
push 64h  +
xor edx edx +
pop esi  +
div  esi +
test edx edx +
jz loc_1004F5D  +
cmp ecx 2 +
jnz loc_1004F5D  +
push 1Dh  +
pop eax  +
cmp eax edi +
sbb eax eax +
inc eax  +
jmp loc_1004F81  +
lea eax [ecx-1] +
cmp eax 0Bh +
ja loc_1004F7F  +
movzx eax ds:byte_1004FA0[eax] +
jmp ds:off_1004F94[eax*4]  +
push 1Fh  +
jmp loc_1004F55  +
push 1Ch  +
jmp loc_1004F55  +
push 1Eh  +
jmp loc_1004F55  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10056FC  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_1004FF9  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push 0  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
jmp loc_100504C  +
push esi  +
mov esi [ecx+8] +
push edi  +
xor edx edx +
mov eax esi +
mov edi 190h +
div  edi +
test edx edx +
jz loc_1005022  +
test esi 3 +
jnz loc_100502A  +
mov eax esi +
push 64h  +
xor edx edx +
pop esi  +
div  esi +
test edx edx +
jz loc_100502A  +
cmp dword ptr [ecx+4] 2 +
jbe loc_100502A  +
inc dword ptr [ecx]  +
lea eax [ecx+4] +
cmp dword ptr [eax] 1 +
jbe loc_1005045  +
mov edx [eax] +
mov esi [edx*4+1009FFCh] +
add [ecx] esi +
dec edx  +
mov [eax] edx +
cmp edx 1 +
ja loc_1005032  +
dec dword ptr [ecx]  +
xor eax eax +
pop edi  +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jnz loc_100509D  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push 0  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
jmp loc_10050EE  +
push ebx  +
push esi  +
push edi  +
mov edi [eax+8] +
xor edx edx +
mov eax edi +
mov ebx 190h +
div  ebx +
lea esi [edi-76Ch] +
mov ecx esi +
imul ecx ecx +
test edx edx +
jz loc_10050DE  +
test edi 3 +
jnz loc_10050D5  +
mov eax edi +
push 64h  +
xor edx edx +
pop edi  +
div  edi +
test edx edx +
jnz loc_10050DE  +
shr esi 2 +
lea ecx [ecx+esi+1] +
jmp loc_10050E3  +
shr esi 2 +
add ecx esi +
mov eax [ebp+arg_0] +
add [eax] ecx +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_1005142  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push 0  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
jmp loc_1005202  +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov dword ptr [ecx+8] 76Ch +
jmp loc_100518E  +
mov edi [ecx+8] +
xor edx edx +
mov eax edi +
mov ebx 190h +
div  ebx +
test edx edx +
jz loc_100517F  +
test edi 3 +
jnz loc_1005178  +
push 64h  +
xor edx edx +
mov eax edi +
pop ebx  +
div  ebx +
test edx edx +
jnz loc_100517F  +
mov eax 16Dh +
jmp loc_1005184  +
mov eax 16Eh +
cmp esi eax +
jbe loc_1005192  +
sub esi eax +
inc edi  +
mov [ecx+8] edi +
test esi esi +
jnz loc_1005151  +
xor edi edi +
test esi esi +
jz loc_10051FC  +
mov eax [ecx+8] +
xor edx edx +
mov ebx 190h +
div  ebx +
mov [ebp+arg_0] edx +
cmp [ebp+arg_0] 0 +
jz loc_10051BF  +
mov eax [ecx+8] +
test al 3 +
jnz loc_10051E1  +
push 64h  +
xor edx edx +
pop ebx  +
div  ebx +
test edx edx +
jz loc_10051E1  +
lea eax [edi+1] +
cmp eax 2 +
jnz loc_10051E1  +
lea eax unk_100A004[edi*4] +
mov edx [eax] +
inc edx  +
cmp esi edx +
jbe loc_10051F3  +
inc dword ptr [ecx+4]  +
or edx 0FFFFFFFFh +
sub edx [eax] +
add esi edx +
jmp loc_10051F7  +
lea eax unk_100A004[edi*4] +
cmp esi [eax] +
jbe loc_10051F3  +
inc dword ptr [ecx+4]  +
sub esi [eax] +
jmp loc_10051F7  +
mov [ecx] esi +
xor esi esi +
inc edi  +
test esi esi +
jnz loc_10051A7  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp [ebp+arg_0] ebx +
jz loc_1005302  +
mov esi [ebp+arg_8] +
cmp esi ebx +
jz loc_1005302  +
mov eax [ebp+arg_4] +
cmp eax ebx +
jz loc_1005302  +
push 0Ah  +
add eax 2 +
push ebx  +
push eax  +
call ds:wcstoul  +
mov edi eax +
add esp 0Ch +
cmp edi 8000h +
jbe loc_1005290  +
push 97h  +
call sub_1007628  +
push eax  +
push 9Ah  +
call sub_1007628  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a123  +
push ebx  +
add eax 40h +
push 3  +
push eax  +
call sub_10074D5  +
add esp 1Ch +
jmp loc_1005339  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:GetLocalTime  +
movzx eax [ebp+SystemTime.wDay] +
mov [esi] eax +
movzx eax [ebp+SystemTime.wMonth] +
mov [esi+4] eax +
movzx eax [ebp+SystemTime.wYear] +
mov [esi+8] eax +
cmp edi ebx +
jnz loc_10052BA  +
xor eax eax +
inc eax  +
jmp loc_100533B  +
push esi  +
call sub_1004FB1  +
test eax eax +
jz loc_1005339  +
push esi  +
call sub_1005055  +
test eax eax +
jz loc_1005339  +
mov eax [ebp+arg_0] +
mov eax [eax] +
cmp eax ebx +
jnz loc_10052E7  +
mov eax [esi] +
cmp eax edi +
jnb loc_10052E1  +
push 2  +
jmp loc_1005304  +
sub eax edi +
mov [esi] eax +
jmp loc_10052F2  +
cmp eax 1 +
jnz loc_1005251  +
add [esi] edi +
push dword ptr [esi]  +
push esi  +
call sub_10050F7  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_100533B  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
cmp edi ebx +
jz loc_1005414  +
cmp [ebp+arg_4] ebx +
jz loc_1005414  +
mov esi [ebp+arg_8] +
cmp esi ebx +
jz loc_1005414  +
movzx eax word ptr [esi] +
sub eax 2Bh +
jz loc_10053BF  +
dec eax  +
dec eax  +
jz loc_10053BB  +
push 97h  +
call sub_1007628  +
push eax  +
push 9Ah  +
call sub_1007628  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a123  +
push ebx  +
add eax 40h +
push 3  +
push eax  +
call sub_10074D5  +
add esp 1Ch +
jmp loc_100544B  +
mov [edi] ebx +
jmp loc_10053C5  +
mov dword ptr [edi] 1 +
push 2Fh  +
push esi  +
call sub_1002ECD  +
test eax eax +
jz loc_1005401  +
push ebx  +
push esi  +
call sub_1005F92  +
add eax 0FFFFFFF7h +
cmp eax 2 +
ja loc_100537C  +
push offset asc_100141C  +
push esi  +
call sub_1002EEA  +
test eax eax +
jnz loc_100537C  +
push [ebp+arg_4]  +
push esi  +
call sub_1004D84  +
test eax eax +
jnz loc_100540F  +
jmp loc_100537C  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_100520B  +
test eax eax +
jz loc_100544B  +
xor eax eax +
inc eax  +
jmp loc_100544D  +
push 57h  +
call ds:SetLastError  +
call sub_1005D43  +
call sub_1005CB0  +
push eax  +
push 1389h  +
call sub_1007628  +
push eax  +
mov eax ds:_iob +
push offset a12  +
push ebx  +
add eax 40h +
push 2  +
push eax  +
call sub_10074D5  +
add esp 18h +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1005475  +
test eax eax +
jnz loc_100547A  +
mov ecx [esi] +
test ecx ecx +
jz loc_1005472  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1005466  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_100A0B0 +
push offset dword_100A0A0  +
push dword_100A0AC  +
mov dword_100A0A0 eax +
push offset dword_100A090  +
push offset dword_100A094  +
push offset dword_100A08C  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_100A09C eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1005502  +
cmp eax esi +
jnz loc_10054F5  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1005505  +
push 3E8h  +
call ds:Sleep  +
jmp loc_10054DC  +
xor esi esi +
inc esi  +
mov eax dword_100A500 +
cmp eax esi +
jnz loc_1005518  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1005553  +
mov eax dword_100A500 +
test eax eax +
jnz loc_100554D  +
mov dword_100A500 esi +
push offset dword_10011CC  +
push offset dword_10011C0  +
call sub_1005459  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1005553  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_100561D  +
mov dword_100A0A8 esi +
mov eax dword_100A500 +
cmp eax esi +
jnz loc_1005577  +
push offset dword_10011BC  +
push offset dword_10011B4  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_100A500 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1005584  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_100A508 ebx +
jz loc_10055A5  +
push offset dword_100A508  +
call sub_1005809  +
pop ecx  +
test eax eax +
jz loc_10055A5  +
push ebx  +
push 2  +
push ebx  +
call dword_100A508  +
push dword_100A090  +
push dword_100A094  +
push dword_100A08C  +
call sub_100485E  +
add esp 0Ch +
mov dword_100A0A4 eax +
cmp dword_100A098 ebx +
jnz loc_1005603  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_100A0A4 eax +
xor ebx ebx +
cmp dword_100A098 ebx +
jnz loc_1005603  +
push eax  +
call ds:_exit  +
cmp dword_100A0A8 ebx +
jnz loc_1005611  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_100A0A4 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_100563A  +
xor eax eax +
jmp loc_1005687  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1005636  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1005674  +
cmp ecx 20Bh +
jnz loc_1005636  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1005636  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1005682  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1005636  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_100A098 eax +
call sub_10059A2  +
push eax  +
call ds:__set_app_type  +
or dword_100A4F8 0FFFFFFFFh +
or dword_100A4FC 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_100A0B8 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_100A0B4 +
mov [eax] ecx +
call sub_1005934  +
cmp dword_100A044 0 +
jnz loc_10056E0  +
push offset sub_1005934  +
call ds:__setusermatherr  +
pop ecx  +
call sub_100591C  +
xor eax eax +
retn   +
***
call sub_10059E1  +
jmp sub_10054BA  +
***
cmp ecx dword_100A034 +
jnz loc_1005707  +
retn 0  +
jmp loc_1005A77  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_100574E  +
cmp dword ptr [eax+10h] 3 +
jnz loc_100574E  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1005748  +
cmp eax 19930521h +
jz loc_1005748  +
cmp eax 19930522h +
jz loc_1005748  +
cmp eax 1994000h +
jnz loc_100574E  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_1005710+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1005796  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1005792  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_10057FD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_10057F5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_10057FF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_10057E5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1005780  +
pop ecx  +
test eax eax +
jz loc_1005866  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_10057C0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1005866  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100586F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_10056FC  +
push offset dword_100A034  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1005995  +
cmp ecx 0FFFFFFFFh +
jz loc_1005995  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_100598E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_100598E  +
cmp edx 10000000h +
jnb loc_100598E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_100598E  +
jmp loc_1005989  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_10059D7  +
push eax  +
call sub_100593C  +
test eax eax +
jz loc_10059D7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_10059CC  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_10059D7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_100A034 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1005A13  +
test eax ebx +
jz loc_1005A13  +
not eax  +
mov dword_100A038 eax +
jmp loc_1005A6E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1005A5A  +
test dword_100A034 ebx +
jnz loc_1005A5F  +
mov esi 0BB40E64Fh +
mov dword_100A034 esi +
not esi  +
mov dword_100A038 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_100A1C0 eax +
mov dword_100A1BC ecx +
mov dword_100A1B8 edx +
mov dword_100A1B4 ebx +
mov dword_100A1B0 esi +
mov dword_100A1AC edi +
mov word_100A1D8 ss +
mov word_100A1CC cs +
mov word_100A1A8 ds +
mov word_100A1A4 es +
mov word_100A1A0 fs +
mov word_100A19C gs +
pushf   +
pop dword_100A1D0  +
mov eax [ebp+0] +
mov dword_100A1C4 eax +
mov eax [ebp+4] +
mov dword_100A1C8 eax +
lea eax [ebp+8] +
mov dword_100A1D4 eax +
mov eax [ebp-320h] +
mov dword_100A110 10001h +
mov eax dword_100A1C8 +
mov dword_100A0CC eax +
mov dword_100A0C0 0C0000409h +
mov dword_100A0C4 1 +
mov eax dword_100A034 +
mov [ebp-328h] eax +
mov eax dword_100A038 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push edi  +
xor edi edi +
inc edi  +
cmp dword_100A3E0 edi +
jnz loc_1005BA2  +
push dword_100A3E8  +
call sub_100887E  +
test eax eax +
jnz loc_1005B9E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005C36  +
push 42Bh  +
jmp loc_1005C30  +
mov eax edi +
pop edi  +
retn   +
cmp dword_100A3E8 0 +
jnz loc_1005B86  +
call sub_100889F  +
push eax  +
mov dword_100A3E8 eax +
call sub_100887E  +
test eax eax +
jz loc_1005C24  +
push 0  +
push offset dword_1001430  +
push dword_100A3E8  +
call sub_1008BC1  +
test eax eax +
jnz loc_1005C24  +
push 3  +
push dword_100A3E8  +
call sub_1008D8C  +
cmp eax edi +
jnz loc_1005C24  +
push 3  +
push dword_100A3E8  +
call sub_1008D8C  +
cmp eax 2 +
jnz loc_1005C24  +
push 3  +
push dword_100A3E8  +
call sub_1008D8C  +
cmp eax 3 +
jnz loc_1005C24  +
push 0  +
mov dword_100A3E0 edi +
call ds:SetThreadUILanguage  +
xor ecx ecx +
test ax ax +
setnz cl  +
pop edi  +
mov eax ecx +
retn   +
call ds:GetLastError  +
test eax eax +
jnz loc_1005C36  +
push 8  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_100A3E0 0 +
push esi  +
jz loc_1005CA4  +
push 3  +
push dword_100A3E8  +
call sub_1008EE7  +
cmp eax [ebp+arg_0] +
jbe loc_1005CA4  +
push [ebp+arg_0]  +
push 3  +
push dword_100A3E8  +
call sub_100917E  +
test eax eax +
jz loc_1005CA4  +
push [ebp+arg_0]  +
push 3  +
push dword_100A3E8  +
call sub_1008F83  +
mov esi eax +
test esi esi +
jz loc_1005CA4  +
push 7  +
push offset aBuffer  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1005CA4  +
mov eax [esi+0Ch] +
jmp loc_1005CA6  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_100A3E8 +
test eax eax +
jz loc_1005CD1  +
push eax  +
call sub_100887E  +
test eax eax +
jz loc_1005CD1  +
push 0  +
push dword_100A3E8  +
call sub_1008F54  +
retn   +
mov eax offset dword_1001430 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetLastError +
push edi  +
call esi  +
cmp [ebp+lpString] 0 +
mov edi eax +
jnz loc_1005D05  +
call esi  +
test eax eax +
jnz loc_1005D01  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1005D38  +
call sub_1005B69  +
test eax eax +
jz loc_1005D01  +
push 0  +
push [ebp+lpString]  +
push 0  +
push dword_100A3E8  +
call sub_100903C  +
test eax eax +
jnz loc_1005D2E  +
call esi  +
test eax eax +
jnz loc_1005D01  +
push 8  +
jmp loc_1005CFB  +
push edi  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor edi edi +
mov [ebp+hMem] edi +
call sub_1005B69  +
test eax eax +
jz loc_1005DC2  +
push ebx  +
push esi  +
mov esi ds:GetLastError +
push edi  +
push edi  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
call esi  +
push eax  +
push edi  +
push 1300h  +
call ds:FormatMessageW  +
mov ebx ds:SetLastError +
test eax eax +
jz loc_1005D9C  +
cmp [ebp+hMem] edi +
jz loc_1005DB4  +
push [ebp+hMem]  +
call sub_1005CDC  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
jmp loc_1005DC0  +
cmp [ebp+hMem] edi +
jz loc_1005DB4  +
push [ebp+hMem]  +
call ds:LocalFree  +
call esi  +
test eax eax +
jnz loc_1005DB4  +
push 8  +
call ebx  +
call esi  +
test eax eax +
jnz loc_1005DBE  +
push 8  +
call ebx  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1005D43  +
test eax eax +
jz loc_1005DEC  +
call sub_1005CB0  +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_100677E  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_100A034 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+var_120] +
push 0  +
push eax  +
call memset  +
mov eax dword_100A048 +
add esp 0Ch +
push 3  +
mov [ebp+var_11C] eax +
mov eax dword_100A04C +
push 2  +
mov [ebp+var_118] eax +
mov ax word_100A3EC +
push 0  +
mov [ebp+var_120] esi +
mov esi ds:VerSetConditionMask +
push 0  +
mov [ebp+var_C] ax +
call esi  +
push 3  +
push 1  +
push edx  +
push eax  +
call esi  +
push 3  +
push 20h  +
push edx  +
push eax  +
call esi  +
push edx  +
push eax  +
push 3  +
lea eax [ebp+var_120] +
push eax  +
call ds:VerifyVersionInfoW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_10056FC  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+Mode] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1005EB2  +
call ds:GetLastError  +
test eax eax +
jnz loc_1005EAE  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1005F2F  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call ds:_fileno  +
mov esi ds:_errno +
mov edi eax +
call esi  +
push edi  +
mov [eax] ebx +
call ds:_get_osfhandle  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0FFFFFFFFh +
jz loc_1005F23  +
call esi  +
cmp dword ptr [eax] 9 +
jz loc_1005F23  +
push ebx  +
call ds:GetFileType  +
cmp eax 2 +
jnz loc_1005F2B  +
sub edi 0 +
jz loc_1005EFF  +
dec edi  +
jz loc_1005EFB  +
dec edi  +
jnz loc_1005F2B  +
push 0FFFFFFF4h  +
jmp loc_1005F01  +
push 0FFFFFFF5h  +
jmp loc_1005F01  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
test eax eax +
jz loc_1005F2B  +
cmp eax 0FFFFFFFFh +
jz loc_1005F2B  +
lea ecx [ebp+Mode] +
push ecx  +
push eax  +
call ds:GetConsoleMode  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1005F2D  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call ds:GetUserDefaultLCID  +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_1005F4E  +
and dword ptr [edx] 0 +
mov ecx eax +
and ecx 3FFh +
cmp cx 1 +
jz loc_1005F7A  +
cmp cx 0Dh +
jz loc_1005F7A  +
cmp cx 1Eh +
jz loc_1005F7A  +
cmp cx 39h +
jz loc_1005F7A  +
cmp cx 49h +
jz loc_1005F7A  +
cmp cx 29h +
jnz loc_1005F89  +
test edx edx +
jz loc_1005F84  +
mov dword ptr [edx] 1 +
mov eax 409h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_1005FA1  +
xor eax eax +
jmp loc_1005FAA  +
push [ebp+lpString]  +
call ds:lstrlenW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1005FF2  +
cmp [ebp+lpString2] 0 +
jz loc_1005FF2  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1005FD8  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jmp loc_1006006  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006004  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_100604D  +
cmp [ebp+lpString2] 0 +
jz loc_100604D  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1006033  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringA  +
dec eax  +
dec eax  +
jmp loc_1006061  +
call ds:GetLastError  +
test eax eax +
jnz loc_100605F  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_1006083  +
call ds:GetLastError  +
test eax eax +
jnz loc_10060A5  +
push 57h  +
jmp loc_100609F  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_10060A5  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapValidate  +
test eax eax +
jnz loc_10060A7  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
cmp [ebp+dwBytes] 0 +
ja loc_10060D6  +
call ds:GetLastError  +
test eax eax +
jnz loc_100614A  +
push 57h  +
call ds:SetLastError  +
jmp loc_100614A  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_100614A  +
and [ebp+ms_exc.disabled] 0 +
push [ebp+dwBytes]  +
push 0Ch  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_20] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100614C  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_1006131  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_1006131  +
push 570h  +
call ds:SetLastError  +
call sub_1005D43  +
jmp loc_1006143  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006143  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_100617B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006176  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_100619D  +
push [ebp+lpMem]  +
call sub_100606A  +
test eax eax +
jz loc_1006176  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1006176  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_10061D6  +
cmp [ebp+arg_4] eax +
jz loc_10061D2  +
mov dl [ebx] +
test dl dl +
jz loc_10061D2  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_10061BA  +
test esi esi +
jnz loc_10061DD  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10061E9  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_100622A  +
cmp [ebp+arg_4] eax +
jz loc_1006226  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1006226  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1006209  +
test esi esi +
jnz loc_1006232  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1006240  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1006275  +
cmp eax esi +
ja loc_1006275  +
jz loc_100627A  +
jmp loc_1006282  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_100628B  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_10062B3  +
call ds:GetLastError  +
test eax eax +
jnz loc_10062F6  +
push 57h  +
jmp loc_10062F0  +
push 0  +
push esi  +
call sub_1005F92  +
test eax eax +
jz loc_10062EB  +
mov ecx [ebp+arg_C] +
cmp ecx eax +
jnb loc_10062EB  +
cmp [ebp+arg_8] 1 +
push dword ptr [ebp+wMatch]  +
lea eax [esi+ecx*2] +
push eax  +
jnz loc_10062DB  +
call ds:StrChrIW  +
jmp loc_10062E1  +
call ds:StrChrW  +
test eax eax +
jz loc_10062EB  +
sub eax esi +
sar eax 1 +
jmp loc_10062F9  +
push 490h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_100636A  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_100636A  +
push 0  +
push edi  +
call sub_1005F92  +
push 0  +
push ebx  +
mov esi eax +
call sub_1005F92  +
test eax eax +
jz loc_100635D  +
test esi esi +
jz loc_100635D  +
mov ecx [ebp+arg_C] +
cmp ecx esi +
jnb loc_100635D  +
sub esi ecx +
cmp esi eax +
jb loc_100635D  +
cmp [ebp+arg_8] 1 +
push ebx  +
lea eax [edi+ecx*2] +
push eax  +
jnz loc_1006353  +
call ds:StrStrIW  +
jmp loc_1006359  +
call ds:StrStrW  +
test eax eax +
jnz loc_1006364  +
push 490h  +
jmp loc_1006376  +
sub eax edi +
sar eax 1 +
jmp loc_100637F  +
call ds:GetLastError  +
test eax eax +
jnz loc_100637C  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_10063AE  +
call ds:GetLastError  +
test eax eax +
jnz loc_10063AA  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10063FC  +
cmp dword ptr [esi] 0 +
jnz loc_10063B8  +
xor eax eax +
inc eax  +
jmp loc_10063FC  +
push ebx  +
call ds:GetProcessHeap  +
mov ebx eax +
test ebx ebx +
jz loc_10063DC  +
push dword ptr [esi]  +
call sub_1006159  +
cmp eax 0FFFFFFFFh +
jnz loc_10063E0  +
push 80004003h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10063FB  +
push eax  +
push 0  +
push dword ptr [esi]  +
call memset  +
add esp 0Ch +
push dword ptr [esi]  +
push 0  +
push ebx  +
call ds:HeapFree  +
and dword ptr [esi] 0 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
mov esi [ebp+arg_0] +
xor edi edi +
cmp esi edi +
jz loc_10064CB  +
mov eax [esi] +
cmp eax edi +
jz loc_10064CB  +
cmp [ebp+dwBytes] edi +
jnz loc_1006439  +
push esi  +
call sub_100638B  +
jmp loc_10064DF  +
push eax  +
call sub_100606A  +
test eax eax +
jnz loc_100644A  +
mov [esi] edi +
jmp loc_10064DD  +
call ds:GetProcessHeap  +
cmp eax edi +
jz loc_10064DD  +
mov [ebp+ms_exc.disabled] edi +
push [ebp+dwBytes]  +
push dword ptr [esi]  +
push 0Ch  +
push eax  +
call ds:HeapReAlloc  +
cmp eax edi +
jnz loc_1006488  +
call ds:GetLastError  +
test eax eax +
jnz loc_100647F  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_10064DD  +
mov [esi] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
inc eax  +
jmp loc_10064DF  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_100646D  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_100646D  +
push 570h  +
call ds:SetLastError  +
call sub_1005D43  +
jmp loc_100647F  +
call ds:GetLastError  +
test eax eax +
jnz loc_10064DD  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
call __SEH_epilog4  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1006502  +
cmp edx 7FFFFFFFh +
jbe loc_1006507  +
mov eax 80070057h +
test eax eax +
jl loc_100651D  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_10061A6  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_100653C  +
cmp edx 7FFFFFFFh +
jbe loc_1006541  +
mov eax 80070057h +
test eax eax +
jl loc_1006557  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_10061F5  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push edi  +
mov ebx 7FFFFFFFh +
test edx edx +
jz loc_1006579  +
cmp edx ebx +
jbe loc_100657E  +
mov eax 80070057h +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_10065B5  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_10065A2  +
cmp [eax] cx +
jz loc_100659E  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_1006594  +
cmp esi ecx +
jnz loc_10065AB  +
mov [ebp+arg_4] 80070057h +
jmp loc_10065AF  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
jmp loc_10065B7  +
xor ecx ecx +
test eax eax +
jl loc_10065CB  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_10061F5  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_10065EB  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_10065F0  +
mov eax 80070057h +
test eax eax +
jl loc_1006609  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_100624C  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push dword_100A3E8  +
call sub_100887E  +
cmp eax 1 +
jnz loc_100669C  +
push edi  +
push 3  +
push dword_100A3E8  +
call sub_1008EE7  +
mov edi eax +
test edi edi +
jz loc_1006691  +
push esi  +
lea esi [edi-1] +
push esi  +
push 3  +
push dword_100A3E8  +
call sub_100917E  +
cmp eax 10000h +
jnz loc_100668A  +
push esi  +
push 3  +
push dword_100A3E8  +
call sub_1008F83  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100668A  +
add eax 0Ch +
push eax  +
call sub_100638B  +
lea eax [ebp+var_4] +
push eax  +
call sub_100638B  +
push esi  +
push 3  +
push dword_100A3E8  +
call sub_1008EB0  +
dec edi  +
dec esi  +
test edi edi +
jnz loc_1006640  +
pop esi  +
push offset dword_100A3E8  +
call sub_1008914  +
pop edi  +
cmp dword_100A3E4 1 +
jnz loc_10066AB  +
call ds:WSACleanup  +
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_10066E8  +
cmp [ebp+arg_4] 0 +
jz loc_10066E8  +
cmp [ebp+arg_8] 0 +
jle loc_10066E8  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_10064EC  +
test eax eax +
jge loc_10066EE  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_10066EA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100672B  +
cmp [ebp+arg_4] 0 +
jz loc_100672B  +
cmp [ebp+arg_8] 0 +
jle loc_100672B  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1006526  +
test eax eax +
jge loc_1006731  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_100672D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100676E  +
cmp [ebp+arg_4] 0 +
jz loc_100676E  +
cmp [ebp+arg_8] 0 +
jle loc_100676E  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_1006560  +
test eax eax +
jge loc_1006774  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_1006770  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_10069C3  +
mov ebx [ebp+lpString] +
cmp ebx edi +
jz loc_10069C3  +
push [ebp+hConsoleOutput]  +
call sub_1005E8B  +
cmp eax 1 +
jnz loc_10068B0  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_10067C7  +
push 0FFFFFFF5h  +
jmp loc_10067D7  +
call esi  +
add eax 40h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_1006898  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
push edi  +
push ebx  +
mov [ebp+hConsoleOutput] eax +
mov [ebp+NumberOfCharsWritten] edi +
call sub_1005F92  +
push edi  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push eax  +
push ebx  +
push [ebp+hConsoleOutput]  +
mov ebx ds:WriteConsoleW +
mov [ebp+var_10] eax +
call ebx  +
test eax eax +
jz loc_100680B  +
mov eax [ebp+var_10] +
cmp eax [ebp+NumberOfCharsWritten] +
jz loc_1006870  +
call ds:GetLastError  +
cmp eax 8 +
jnz loc_1006894  +
mov esi [ebp+lpString] +
push edi  +
push esi  +
call sub_1005F92  +
mov [ebp+var_10] eax +
mov [ebp+var_C] edi +
cmp eax edi +
jbe loc_1006870  +
mov [ebp+cchWideChar] esi +
mov esi 400h +
mov eax [ebp+var_10] +
sub eax [ebp+var_C] +
mov [ebp+lpString] esi +
cmp eax esi +
ja loc_1006842  +
mov [ebp+lpString] eax +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+lpString]  +
push [ebp+cchWideChar]  +
push [ebp+hConsoleOutput]  +
call ebx  +
test eax eax +
jz loc_1006878  +
mov eax [ebp+lpString] +
cmp eax [ebp+NumberOfCharsWritten] +
jnz loc_1006878  +
add [ebp+var_C] esi +
mov eax [ebp+var_C] +
add [ebp+cchWideChar] 800h +
cmp eax [ebp+var_10] +
jb loc_1006832  +
xor eax eax +
inc eax  +
jmp loc_10069D7  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_1005DCA  +
call sub_1006612  +
push 1  +
call ds:ExitProcess  +
call esi  +
jmp loc_100687E  +
call ds:GetLastError  +
test eax eax +
jnz loc_10069D5  +
push 42Bh  +
jmp loc_10069CF  +
push edi  +
push ebx  +
call sub_1005F92  +
push 100h  +
push edi  +
mov esi offset unk_100A3F8 +
push esi  +
mov [ebp+var_10] eax +
call memset  +
add esp 0Ch +
mov [ebp+var_C] edi +
cmp [ebp+var_10] edi +
jbe loc_1006870  +
mov ebx 0FFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
sub eax ecx +
mov [ebp+NumberOfCharsWritten] edi +
mov [ebp+cchWideChar] ebx +
cmp eax ebx +
ja loc_10068F0  +
mov [ebp+cchWideChar] eax +
mov eax [ebp+lpString] +
lea eax [eax+ecx*2] +
mov [ebp+lpWideCharStr] eax +
push edi  +
push edi  +
push edi  +
push edi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_100694D  +
cmp eax ebx +
jbe loc_100695B  +
add eax 0FFFFFF01h +
cmp eax 3 +
jbe loc_100692D  +
shr eax 1 +
sub [ebp+cchWideChar] eax +
jmp loc_1006930  +
dec [ebp+cchWideChar]  +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+cchWideChar] edi +
jnz loc_10068F9  +
call ds:GetLastError  +
test eax eax +
jnz loc_100694D  +
push 42Bh  +
call ds:SetLastError  +
call ds:__iob_func  +
add eax 20h +
jmp loc_1006881  +
cmp eax [ebp+cchWideChar] +
jnb loc_1006963  +
mov [ebp+cchWideChar] eax +
push 100h  +
push edi  +
push esi  +
call memset  +
add esp 0Ch +
push edi  +
push edi  +
push ebx  +
push esi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_100694D  +
mov eax [ebp+cchWideChar] +
add [ebp+var_C] eax +
push esi  +
push offset aS  +
push [ebp+hConsoleOutput]  +
call ds:fprintf  +
push [ebp+hConsoleOutput]  +
call ds:fflush  +
mov eax [ebp+var_C] +
add esp 10h +
cmp [ebp+var_10] eax +
ja loc_10068DB  +
jmp loc_1006870  +
call ds:GetLastError  +
test eax eax +
jnz loc_10069D5  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_10069FB  +
cmp [ebp+arg_8] 0 +
jnz loc_10069FB  +
xor eax eax +
jmp loc_1006B4F  +
call sub_1005B69  +
test eax eax +
jz loc_10069F4  +
push ebx  +
push esi  +
push edi  +
push 3  +
pop esi  +
push esi  +
push dword_100A3E8  +
call sub_1008EE7  +
mov ebx [ebp+arg_0] +
mov edi eax +
cmp edi ebx +
ja loc_1006A48  +
push esi  +
push dword_100A3E8  +
call sub_1008F1B  +
test eax eax +
jz loc_1006B13  +
mov ecx ebx +
sub ecx edi +
inc ecx  +
push ecx  +
push eax  +
call sub_1008E07  +
cmp eax 0FFFFFFFFh +
jz loc_1006B13  +
push ebx  +
push esi  +
push dword_100A3E8  +
call sub_100917E  +
mov edi offset aBuffer +
test eax eax +
jz loc_1006A96  +
push ebx  +
push esi  +
push dword_100A3E8  +
call sub_1008F83  +
mov esi eax +
test esi esi +
jz loc_1006B13  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1006B13  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_1006AD5  +
mov edi [ebp+arg_8] +
jmp loc_1006AE0  +
push 10h  +
call sub_10060B0  +
mov esi eax +
mov [ebp+arg_0] esi +
test esi esi +
jz loc_1006B13  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
push 7  +
push edi  +
push esi  +
call sub_10066B5  +
push esi  +
push ebx  +
push 3  +
push dword_100A3E8  +
call sub_10090E5  +
test eax eax +
jnz loc_1006A75  +
lea eax [ebp+arg_0] +
push eax  +
call sub_100638B  +
jmp loc_1006B13  +
push 0  +
push ebx  +
call sub_1005F92  +
mov edi eax +
inc edi  +
mov eax [esi+8] +
cmp edi eax +
ja loc_1006AF6  +
cmp edi 100h +
jbe loc_1006B0D  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1006B0D  +
test eax eax +
lea eax [edi+edi] +
push eax  +
jnz loc_1006B17  +
call sub_10060B0  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_1006B13  +
mov [esi+8] edi +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_1006B22  +
xor eax eax +
jmp loc_1006B4C  +
lea eax [esi+0Ch] +
push eax  +
call sub_1006406  +
jmp loc_1006B06  +
test ebx ebx +
jz loc_1006B32  +
push edi  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_10066F8  +
jmp loc_1006B49  +
cmp [ebp+arg_C] 1 +
jnz loc_1006B49  +
lea eax [edi+edi] +
push eax  +
push 0  +
push dword ptr [esi+0Ch]  +
call memset  +
add esp 0Ch +
mov eax [esi+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_100A034 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
mov esi offset asc_1001440 +
lea edi [ebp+var_C] +
movs   +
mov [ebp+lpStart] eax +
xor eax eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
movs   +
cmp ebx eax +
jz loc_1006C55  +
push eax  +
push ebx  +
call sub_1005F92  +
test eax eax +
jz loc_1006C55  +
cmp [ebp+lpStart] 0 +
jz loc_1006BB4  +
push 0  +
push [ebp+lpStart]  +
call sub_1005F92  +
test eax eax +
jnz loc_1006BBA  +
lea eax [ebp+var_C] +
mov [ebp+lpStart] eax +
mov edi [ebp+arg_8] +
mov esi ebx +
cmp edi 3 +
jz loc_1006BC9  +
cmp edi 1 +
jnz loc_1006BEB  +
cmp word ptr [ebx] 0 +
jz loc_1006BE8  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_1006BE8  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_1006BCF  +
mov [ebp+var_18] esi +
cmp edi 3 +
jz loc_1006BF5  +
cmp edi 2 +
jnz loc_1006C37  +
cmp edi 2 +
jnz loc_1006BFC  +
mov esi ebx +
movzx eax word ptr [esi] +
test ax ax +
jz loc_1006C37  +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_1006C1D  +
cmp [ebp+var_14] 0 +
jnz loc_1006C21  +
mov [ebp+var_14] esi +
jmp loc_1006C21  +
and [ebp+var_14] 0 +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_1006C04  +
mov eax [ebp+var_14] +
test eax eax +
jz loc_1006C37  +
xor ecx ecx +
mov [eax] cx +
cmp [ebp+var_18] ebx +
jbe loc_1006C51  +
push 0  +
push [ebp+var_18]  +
call sub_1005F92  +
inc eax  +
push eax  +
push [ebp+var_18]  +
push ebx  +
call sub_10066F8  +
mov eax ebx +
jmp loc_1006C5A  +
mov eax offset dword_1001430 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_10056FC  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_4] esi +
jnz loc_1006C93  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006C8F  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1006CFA  +
cmp [ebp+arg_0] esi +
jnz loc_1006CA5  +
push [ebp+arg_4]  +
call sub_1005CDC  +
xor eax eax +
inc eax  +
jmp loc_1006CFA  +
push edi  +
push 1  +
add esi 100h +
push esi  +
push 0  +
push 5  +
call sub_10069E3  +
mov edi eax +
test edi edi +
jz loc_1006CE5  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_10065D6  +
cmp eax 8007007Ah +
jz loc_1006CA6  +
test eax eax +
jge loc_1006CF3  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1006CF9  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006CE1  +
push 8  +
jmp loc_1006CDB  +
push edi  +
call sub_1005CDC  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+lpString] ebx +
cmp [ebp+dwMessageId] ebx +
jnz loc_1006D2F  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006D25  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1001430 +
jmp loc_1006E3C  +
call sub_1005B69  +
test eax eax +
jz loc_1006D25  +
push esi  +
push 1  +
push dword_100A3E8  +
call sub_1008EE7  +
mov esi eax +
cmp esi [ebp+arg_8] +
ja loc_1006D8C  +
push 1  +
push dword_100A3E8  +
call sub_1008F1B  +
cmp eax ebx +
jz loc_1006D70  +
mov ecx [ebp+arg_8] +
sub ecx esi +
inc ecx  +
push ecx  +
push eax  +
call sub_1008E07  +
cmp eax 0FFFFFFFFh +
jnz loc_1006D8C  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006D82  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001430 +
jmp loc_1006E3B  +
mov esi 80h +
push edi  +
push 1  +
add esi esi +
push esi  +
push ebx  +
push 4  +
call sub_10069E3  +
mov edi eax +
cmp edi ebx +
jz loc_1006E00  +
push esi  +
push edi  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call ds:LoadStringW  +
cmp eax ebx +
jnz loc_1006DE3  +
call ds:GetLastError  +
cmp eax 716h +
jnz loc_1006E12  +
push ebx  +
push ebx  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
push 0B00h  +
call ds:FormatMessageW  +
cmp eax ebx +
jz loc_1006E12  +
mov edi [ebp+lpString] +
lea ecx [esi-1] +
cmp eax ecx +
jnb loc_1006D92  +
push ebx  +
push edi  +
push [ebp+arg_8]  +
push 1  +
push dword_100A3E8  +
call sub_100911F  +
test eax eax +
jnz loc_1006E19  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006E12  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001430 +
jmp loc_1006E3A  +
cmp [ebp+lpString] ebx +
jz loc_1006E2A  +
push [ebp+lpString]  +
call ds:LocalFree  +
mov [ebp+lpString] ebx +
push [ebp+arg_8]  +
push 1  +
push dword_100A3E8  +
call sub_1008FBA  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+lpString] ebx +
jz loc_1006FEB  +
push ebx  +
push [ebp+lpString]  +
call sub_1005F92  +
test eax eax +
jz loc_1006FEB  +
call sub_1005B69  +
test eax eax +
jz loc_1006FFD  +
call sub_1005B69  +
test eax eax +
jz loc_1006FA5  +
push 3  +
pop esi  +
push esi  +
push dword_100A3E8  +
call sub_1008EE7  +
mov edi eax +
cmp edi ebx +
ja loc_1006EC8  +
push esi  +
push dword_100A3E8  +
call sub_1008F1B  +
cmp eax ebx +
jz loc_1006FA5  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1008E07  +
cmp eax 0FFFFFFFFh +
jz loc_1006FA5  +
push ebx  +
push esi  +
push dword_100A3E8  +
call sub_100917E  +
mov edi offset aBuffer +
test eax eax +
jz loc_1006F40  +
push ebx  +
push esi  +
push dword_100A3E8  +
call sub_1008F83  +
mov esi eax +
cmp esi ebx +
jz loc_1006FA5  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1006FA5  +
push ebx  +
push [ebp+lpString]  +
call sub_1005F92  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1006F2C  +
cmp edi 100h +
jbe loc_1006F8D  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1006F8D  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1006F7D  +
call sub_10060B0  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1006F88  +
push 10h  +
call sub_10060B0  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_1006FA5  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_10066B5  +
push esi  +
push ebx  +
push 3  +
push dword_100A3E8  +
call sub_10090E5  +
test eax eax +
jnz loc_1006EF5  +
lea eax [ebp+var_8] +
push eax  +
call sub_100638B  +
jmp loc_1006FA5  +
lea eax [esi+0Ch] +
push eax  +
call sub_1006406  +
test eax eax +
jz loc_1006FA5  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_1006FA5  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_10066F8  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_1006FB3  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006FFD  +
push 8  +
jmp loc_1006FF7  +
mov edi ds:_errno +
call edi  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call ds:wcstod  +
fstp  qword ptr [ebp-0Ch] +
pop ecx  +
pop ecx  +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_1006FEB  +
cmp [ebp+var_4] ebx +
jz loc_1006FE6  +
push ebx  +
push [ebp+var_4]  +
call sub_1005F92  +
test eax eax +
jnz loc_1006FEB  +
fld  qword ptr [ebp-0Ch] +
jmp loc_1006FFF  +
call ds:GetLastError  +
test eax eax +
jnz loc_1006FFD  +
push 57h  +
call ds:SetLastError  +
fldz   +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString]  +
call sub_1006E46  +
fstp  st +
call ds:GetLastError  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_10071F4  +
cmp [ebp+lpString] ebx +
jz loc_10071F4  +
call sub_1005B69  +
test eax eax +
jz loc_1007206  +
call sub_1005B69  +
test eax eax +
jz loc_100718A  +
push 3  +
pop esi  +
push esi  +
push dword_100A3E8  +
call sub_1008EE7  +
mov edi eax +
cmp edi ebx +
ja loc_10070AD  +
push esi  +
push dword_100A3E8  +
call sub_1008F1B  +
cmp eax ebx +
jz loc_100718A  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1008E07  +
cmp eax 0FFFFFFFFh +
jz loc_100718A  +
push ebx  +
push esi  +
push dword_100A3E8  +
call sub_100917E  +
mov edi offset aBuffer +
test eax eax +
jz loc_1007125  +
push ebx  +
push esi  +
push dword_100A3E8  +
call sub_1008F83  +
mov esi eax +
cmp esi ebx +
jz loc_100718A  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100718A  +
push ebx  +
push [ebp+lpString]  +
call sub_1005F92  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_1007111  +
cmp edi 100h +
jbe loc_1007172  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_1007172  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_1007162  +
call sub_10060B0  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_100716D  +
push 10h  +
call sub_10060B0  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_100718A  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_10066B5  +
push esi  +
push ebx  +
push 3  +
push dword_100A3E8  +
call sub_10090E5  +
test eax eax +
jnz loc_10070DA  +
lea eax [ebp+var_8] +
push eax  +
call sub_100638B  +
jmp loc_100718A  +
lea eax [esi+0Ch] +
push eax  +
call sub_1006406  +
test eax eax +
jz loc_100718A  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_100718A  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_10066F8  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_1007198  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007206  +
push 8  +
jmp loc_1007200  +
push 3  +
push ebx  +
push esi  +
call sub_1006B58  +
push ebx  +
push esi  +
call sub_1005F92  +
test eax eax +
jz loc_10071F4  +
mov edi ds:_errno +
call edi  +
push [ebp+arg_4]  +
mov [eax] ebx +
cmp word ptr [esi] 2Dh +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_10071CC  +
call ds:wcstol  +
jmp loc_10071D2  +
call ds:wcstoul  +
add esp 0Ch +
mov esi eax +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_10071F4  +
cmp [ebp+var_4] ebx +
jz loc_10071F0  +
push ebx  +
push [ebp+var_4]  +
call sub_1005F92  +
test eax eax +
jnz loc_10071F4  +
mov eax esi +
jmp loc_1007208  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007206  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_10073D7  +
cmp [ebp+lpString] ebx +
jz loc_10073D7  +
call sub_1005B69  +
test eax eax +
jz loc_1007363  +
push 3  +
pop esi  +
push esi  +
push dword_100A3E8  +
call sub_1008EE7  +
mov edi eax +
cmp edi ebx +
ja loc_1007286  +
push esi  +
push dword_100A3E8  +
call sub_1008F1B  +
cmp eax ebx +
jz loc_1007363  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_1008E07  +
cmp eax 0FFFFFFFFh +
jz loc_1007363  +
push ebx  +
push esi  +
push dword_100A3E8  +
call sub_100917E  +
mov edi offset aBuffer +
test eax eax +
jz loc_10072FE  +
push ebx  +
push esi  +
push dword_100A3E8  +
call sub_1008F83  +
mov esi eax +
cmp esi ebx +
jz loc_1007363  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_1007363  +
push ebx  +
push [ebp+lpString]  +
call sub_1005F92  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_10072EA  +
cmp edi 100h +
jbe loc_100734B  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_100734B  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_100733B  +
call sub_10060B0  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_1007346  +
push 10h  +
call sub_10060B0  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_1007363  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_10066B5  +
push esi  +
push ebx  +
push 3  +
push dword_100A3E8  +
call sub_10090E5  +
test eax eax +
jnz loc_10072B3  +
lea eax [ebp+var_8] +
push eax  +
call sub_100638B  +
jmp loc_1007363  +
lea eax [esi+0Ch] +
push eax  +
call sub_1006406  +
test eax eax +
jz loc_1007363  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_1007363  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_10066F8  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_1007371  +
call ds:GetLastError  +
test eax eax +
jnz loc_10073E9  +
push 8  +
jmp loc_10073E3  +
push 3  +
push ebx  +
push esi  +
call sub_1006B58  +
push ebx  +
push esi  +
call sub_1005F92  +
test eax eax +
jz loc_10073E9  +
cmp [ebp+arg_8] ebx +
jnz loc_1007390  +
cmp word ptr [esi] 2Dh +
jz loc_10073E9  +
mov edi ds:_errno +
call edi  +
cmp [ebp+arg_8] 1 +
push [ebp+arg_4]  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_10073B0  +
call ds:wcstol  +
jmp loc_10073B6  +
call ds:wcstoul  +
add esp 0Ch +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_10073E9  +
cmp [ebp+var_4] ebx +
jz loc_10073D2  +
push ebx  +
push [ebp+var_4]  +
call sub_1005F92  +
test eax eax +
jnz loc_10073E9  +
xor eax eax +
inc eax  +
jmp loc_10073EB  +
call ds:GetLastError  +
test eax eax +
jnz loc_10073E9  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp dword ptr [ebp+arg_0] ebx +
jz loc_10074B5  +
cmp dword ptr [ebp+lpString] ebx +
jz loc_10074B5  +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_1005F92  +
mov edi eax +
push 1  +
add edi 4 +
push edi  +
push ebx  +
push ebx  +
call sub_10069E3  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_1007446  +
call ds:GetLastError  +
test eax eax +
jnz loc_10074C7  +
push 8  +
jmp loc_10074C1  +
push ebx  +
push dword ptr [ebp+arg_0]  +
call sub_1005F92  +
mov esi eax +
push 1  +
add esi 4 +
push esi  +
push ebx  +
push 1  +
call sub_10069E3  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_1007434  +
push dword ptr [ebp+lpString]  +
mov ebx offset aS_0 +
push ebx  +
push edi  +
push [ebp+var_8]  +
call sub_1002F0D  +
add esp 10h +
test eax eax +
jge loc_1007485  +
movzx eax ax +
push eax  +
jmp loc_10074C1  +
push dword ptr [ebp+arg_0]  +
push ebx  +
push esi  +
push [ebp+var_4]  +
call sub_1002F0D  +
add esp 10h +
test eax eax +
jl loc_100747F  +
push 0  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_1006303  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov eax ecx +
jmp loc_10074C9  +
call ds:GetLastError  +
test eax eax +
jnz loc_10074C7  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
cmp [ebp+lpString] ebx +
jz loc_10075DC  +
cmp [ebp+hConsoleOutput] ebx +
jz loc_10075DC  +
cmp [ebp+arg_4] ebx +
jnz loc_1007507  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_100677E  +
jmp loc_10075F0  +
cmp [ebp+arg_8] ebx +
jnz loc_100759C  +
or [ebp+var_8] 0FFFFFFFFh +
lea eax [ebp+arg_10] +
mov [ebp+Arguments] eax +
xor eax eax +
cmp [ebp+var_8] 0FFFFFFFFh +
push 1  +
setnz al  +
dec eax  +
and eax 800h +
add eax 800h +
add ebx eax +
push ebx  +
push 0  +
push 3  +
call sub_10069E3  +
mov edi eax +
test edi edi +
jz loc_1007589  +
lea eax [ebp+Arguments] +
push eax  +
lea eax [ebx-1] +
push eax  +
push edi  +
push 0  +
push 0  +
push [ebp+lpString]  +
push 400h  +
call ds:FormatMessageW  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_1007579  +
call ds:GetLastError  +
test eax eax +
jz loc_1007597  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_10075EE  +
and [ebp+Arguments] 0 +
cmp [ebp+var_8] 0 +
jz loc_1007514  +
push edi  +
jmp loc_10074FA  +
call ds:GetLastError  +
test eax eax +
jnz loc_10075EE  +
push 8  +
jmp loc_10075E8  +
xor eax eax +
inc eax  +
jmp loc_10075F0  +
push 1  +
add ebx 800h +
push ebx  +
push 0  +
lea eax [ebp+arg_10] +
push 3  +
mov [ebp+Arguments] eax +
call sub_10069E3  +
mov edi eax +
test edi edi +
jz loc_1007589  +
push [ebp+Arguments]  +
push [ebp+lpString]  +
push ebx  +
push edi  +
call sub_10065D6  +
and [ebp+Arguments] 0 +
cmp eax 8007007Ah +
jz loc_100759C  +
test eax eax +
jge loc_1007583  +
movzx eax ax +
push eax  +
jmp loc_10075E8  +
call ds:GetLastError  +
test eax eax +
jnz loc_10075EE  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
inc dword_100A3F4  +
mov eax dword_100A3F4 +
push 0Ah  +
pop ecx  +
xor edx edx +
div  ecx +
add edx 4 +
push edx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call sub_1006D02  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwMessageId]  +
push 0  +
call sub_10075F9  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:SetLastError +
push edi  +
push 0  +
call esi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_100766E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007666  +
push 57h  +
call esi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push edi  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_1007666  +
movzx eax word ptr [edi] +
push 0  +
push 1  +
push eax  +
push offset asc_1001454  +
call sub_1006298  +
cmp eax 0FFFFFFFFh +
jz loc_1007666  +
xor eax eax +
inc eax  +
jmp loc_1007668  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
dec eax  +
cmp eax 9 +
ja loc_10076BC  +
movzx eax ds:byte_10076CB[eax] +
jmp ds:off_10076C3[eax*4]  +
xor eax eax +
inc eax  +
jmp loc_10076BE  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
call edi  +
cmp [ebp+lpString] ebx +
jz loc_100775F  +
cmp [ebp+arg_4] ebx +
jnz loc_100775F  +
push ebx  +
push 1  +
push 7Ch  +
push [ebp+lpString]  +
call sub_1006298  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_1007719  +
push ebx  +
call edi  +
push ebx  +
push [ebp+lpString]  +
call sub_1005F92  +
mov esi eax +
push 1  +
lea eax [esi+5] +
push eax  +
push ebx  +
push 0Ch  +
call sub_10069E3  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jnz loc_100773C  +
call ds:GetLastError  +
test eax eax +
jnz loc_100776D  +
push 8  +
jmp loc_100776B  +
lea ecx [esi+1] +
push ecx  +
push offset asc_100131C  +
push eax  +
call sub_10066F8  +
add esi 2 +
push esi  +
push [ebp+lpString]  +
push [ebp+arg_4]  +
call sub_100673B  +
mov eax [ebp+arg_4] +
jmp loc_100776F  +
call ds:GetLastError  +
test eax eax +
jnz loc_100776D  +
push 57h  +
call edi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ds:SetLastError +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call esi  +
mov ecx [ebp+arg_8] +
cmp [ebp+arg_4] edi +
jz loc_10077B4  +
cmp ecx edi +
jnz loc_10077B4  +
call ds:GetLastError  +
test eax eax +
jnz loc_10077AD  +
push 57h  +
call esi  +
xor eax eax +
jmp loc_1007A17  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_100779F  +
or dword ptr [eax] 0FFFFFFFFh +
push ebx  +
mov [ebp+arg_8] edi +
cmp [ebp+arg_4] edi +
jbe loc_1007A13  +
lea edi [ecx+3Ch] +
lea eax [edi-3Ch] +
test eax eax +
jz loc_1007A1D  +
xor ebx ebx +
push ebx  +
push 1  +
lea eax [edi-3Ch] +
push offset aParser2_0  +
push eax  +
call sub_100600F  +
test eax eax +
jnz loc_10078CF  +
mov eax [edi-28h] +
mov esi [edi-2Ch] +
mov [ebp+var_10] eax +
cmp [edi] ebx +
jnz loc_10078CF  +
cmp [edi+4] ebx +
jnz loc_10078CF  +
cmp [edi+8] ebx +
jnz loc_10078CF  +
cmp [edi+0Ch] ebx +
jnz loc_10078CF  +
mov ebx esi +
and ebx 40000h +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_100784A  +
mov eax [edi-1Ch] +
test eax eax +
jz loc_10078CF  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jz loc_10078CF  +
mov eax esi +
and eax 20000h +
xor ecx ecx +
mov edx eax +
or edx ecx +
jz loc_100785F  +
cmp dword ptr [edi-34h] 0Ah +
jnz loc_10078CF  +
mov edx eax +
or edx ecx +
jz loc_1007870  +
xor ecx ecx +
inc ecx  +
cmp [ebp+var_4] ecx +
jz loc_10078CF  +
mov [ebp+var_4] ecx +
mov edx ebx +
xor ecx ecx +
or edx ecx +
jz loc_1007885  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 0FFFFFFFFh +
jnz loc_10078CF  +
mov edx [ebp+arg_8] +
mov [ecx] edx +
xor ecx ecx +
or eax ecx +
jz loc_1007891  +
xor eax eax +
or ebx eax +
jnz loc_10078CF  +
mov eax [edi-34h] +
dec eax  +
cmp eax 9 +
ja loc_10078CF  +
jmp ds:off_1007A3F[eax*4]  +
mov eax esi +
and eax 10000h +
xor ecx ecx +
mov [ebp+var_C] eax +
or eax ecx +
jz loc_10078E8  +
mov ebx esi +
and ebx 1 +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_10078CF  +
cmp [edi-10h] ecx +
jnz loc_10078CF  +
mov eax [edi-0Ch] +
test eax eax +
jz loc_1007907  +
cmp eax 2 +
jnb loc_1007907  +
call ds:GetLastError  +
test eax eax +
jnz loc_10078E1  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1007A16  +
mov eax [edi-10h] +
test eax eax +
jz loc_10078CF  +
mov ebx esi +
and ebx 1 +
xor ecx ecx +
mov edx ebx +
or edx ecx +
jz loc_1007907  +
push dword ptr [eax]  +
call sub_100887E  +
test eax eax +
jz loc_10078CF  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_1007917  +
cmp [edi-14h] ecx +
jz loc_10078CF  +
xor eax eax +
or ebx eax +
jnz loc_10079FD  +
cmp dword ptr [edi-24h] 1 +
jnz loc_10078CF  +
and esi 20h +
or esi eax +
jnz loc_10078CF  +
mov eax [ebp+var_C] +
xor ecx ecx +
or eax ecx +
jnz loc_10079FD  +
cmp dword ptr [edi-0Ch] 2 +
jb loc_10078CF  +
jmp loc_10079FD  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jnz loc_1007A35  +
mov eax esi +
and eax 10000h +
or eax ecx +
jnz loc_10078CF  +
mov eax esi +
and eax 40h +
or eax ecx +
jnz loc_10078CF  +
mov eax esi +
and eax 80h +
or eax ecx +
jnz loc_10078CF  +
mov edx [edi-10h] +
test edx edx +
jz loc_10078CF  +
mov eax esi +
and eax 1 +
or eax ecx +
jz loc_10079A5  +
push dword ptr [edx]  +
call sub_100887E  +
test eax eax +
jz loc_10078CF  +
jmp loc_10079FD  +
cmp dword ptr [edi-24h] 1 +
ja loc_10078CF  +
and esi 20h +
xor eax eax +
jmp loc_10079F5  +
cmp dword ptr [edi-8] 0 +
jz loc_10078CF  +
cmp dword ptr [edi-4] 0 +
jnz loc_10079FD  +
lea eax [edi-3Ch] +
mov [edi-4] eax +
jmp loc_10079FD  +
mov eax esi +
and eax 0Fh +
xor ecx ecx +
or eax ecx +
jnz loc_10078CF  +
mov eax esi +
and eax 0FFF0h +
or eax ecx +
jnz loc_10078CF  +
mov eax [ebp+var_10] +
and esi 0FFEDFFFFh +
or esi eax +
jnz loc_10078CF  +
and dword ptr [edi-20h] 0 +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
add edi 50h +
cmp eax [ebp+arg_4] +
jb loc_10077CE  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
call ds:GetLastError  +
test eax eax +
jnz loc_10078E1  +
push 42Bh  +
jmp loc_10078DB  +
push 78h  +
jmp loc_10078DB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
fldz   +
push ebx  +
mov ebx ds:SetLastError +
fstp  [ebp+var_18] +
fldz   +
push edi  +
xor edi edi +
fstp  [ebp+var_28] +
push edi  +
mov dword ptr [ebp+String2] edi +
mov [ebp+var_14] edi +
call ebx  +
mov eax [ebp+arg_8] +
cmp eax edi +
jnz loc_1007AB2  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007AA6  +
push 57h  +
call ebx  +
call sub_1005D43  +
xor eax eax +
jmp loc_1008016  +
push esi  +
mov esi [eax+0Ch] +
mov eax [eax+8] +
mov dword ptr [ebp+var_8] eax +
cmp esi edi +
jz loc_1008000  +
cmp eax edi +
jz loc_1008000  +
mov eax [esi+2Ch] +
mov ecx [esi+8] +
mov edi [esi+10h] +
mov [ebp+var_4] eax +
mov eax [esi+14h] +
mov [ebp+var_1C] eax +
mov eax [esi+30h] +
mov [ebp+var_C] eax +
mov eax [esi+28h] +
mov [ebp+var_1C] eax +
cmp ecx 0Ah +
jz loc_1007B51  +
cmp [ebp+lpString2] 0 +
jnz loc_1007B51  +
mov eax edi +
and eax 10h +
xor edx edx +
or eax edx +
jnz loc_1007B51  +
cmp dword ptr [ebp+lpString] edx +
jz loc_1007B2F  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1007B2F  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EBh  +
call sub_1007628  +
push eax  +
push 2  +
call sub_1006C70  +
add esp 10h +
jmp loc_1007B45  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007B40  +
push 42Bh  +
call ebx  +
call sub_1005D43  +
push 800401E4h  +
call ebx  +
jmp loc_1008013  +
cmp dword ptr [ebp+lpString] 0 +
jnz loc_1007B69  +
mov eax edi +
and eax 40000h +
xor edx edx +
or eax edx +
jnz loc_1007B74  +
jmp loc_1008000  +
cmp dword ptr [esi+24h] 0 +
jz loc_1007B7A  +
cmp ecx 9 +
jz loc_1007B7A  +
mov eax [esi+24h] +
mov dword ptr [ebp+lpString] eax +
lea eax [ecx-1] +
cmp eax 9 +
ja loc_1008000  +
jmp ds:off_100801C[eax*4]  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_1007BE8  +
mov eax edi +
and eax 42h +
xor ecx ecx +
or eax ecx +
jz loc_1007BE8  +
push ecx  +
push ecx  +
push ebx  +
push 0Ah  +
call sub_10069E3  +
test eax eax +
jnz loc_1007BC8  +
call ds:GetLastError  +
test eax eax +
jnz loc_100800E  +
push 8  +
call ds:SetLastError  +
jmp loc_100800E  +
push 3  +
push offset asc_1001440  +
push eax  +
call sub_1006B58  +
mov ebx eax +
mov [ebp+lpString2] ebx +
call ds:GetLastError  +
test eax eax +
jnz loc_100800E  +
mov eax edi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_1007C63  +
test ebx ebx +
jz loc_1007FFB  +
push 1  +
push [ebp+var_1C]  +
push ebx  +
call sub_10073F7  +
test eax eax +
jnz loc_1007C63  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1007C3A  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1007C3A  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push ebx  +
push 15E1h  +
call sub_1007628  +
push eax  +
push 3  +
call sub_1006C70  +
add esp 14h +
jmp loc_1007C53  +
push dword ptr [ebp+var_8]  +
push ebx  +
push 15ECh  +
call sub_1007628  +
push eax  +
push 2  +
call sub_1006C70  +
add esp 10h +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_1008013  +
test ebx ebx +
jz loc_1007FFB  +
mov ebx ds:lstrlenW +
mov eax edi +
and eax 80h +
xor ecx ecx +
or eax ecx +
jz loc_1007CBC  +
push [ebp+lpString2]  +
call ebx  +
test eax eax +
jnz loc_1007CBC  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1007CA2  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_1007CA2  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EEh  +
jmp loc_1007C43  +
push dword ptr [ebp+var_8]  +
push 15EFh  +
call sub_1007628  +
push eax  +
push 1  +
call sub_1006C70  +
add esp 0Ch +
jmp loc_1007C53  +
mov eax edi +
and eax 1 +
xor ecx ecx +
or eax ecx +
jz loc_1007D0C  +
mov esi [esi+10h] +
and esi 4000h +
xor eax eax +
or esi eax +
jz loc_1007CEF  +
push eax  +
mov eax [ebp+var_4] +
push 1  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_1009241  +
cmp eax 0FFFFFFFFh +
jnz loc_1007FFB  +
mov eax [ebp+var_4] +
push 0  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_1008BC1  +
cmp eax 0FFFFFFFFh +
jnz loc_1007FFB  +
jmp loc_1007BAD  +
cmp [ebp+var_C] ecx +
jz loc_1007D4B  +
push [ebp+lpString2]  +
call ebx  +
cmp eax [ebp+var_C] +
jl loc_1007D4B  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_1007D3C  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_1007D3C  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push dword ptr [ebp+lpString]  +
push 15F4h  +
jmp loc_1007C43  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push 15F2h  +
jmp loc_1007CAA  +
and edi 10000h +
xor eax eax +
or edi eax +
jz loc_1007D75  +
push [ebp+lpString2]  +
call ebx  +
mov edi eax +
inc edi  +
lea eax [edi+edi] +
push eax  +
call sub_10060B0  +
test eax eax +
jz loc_1007BAD  +
mov [esi+2Ch] eax +
jmp loc_1007D7B  +
mov eax [ebp+var_4] +
mov edi [ebp+var_C] +
push edi  +
push [ebp+lpString2]  +
push eax  +
call sub_10066F8  +
jmp loc_1007FFB  +
mov ebx [ebp+lpString2] +
xor eax eax +
cmp ecx 2 +
setz al  +
mov [ebp+var_C] eax +
test ebx ebx +
jz loc_1007FFB  +
push 0  +
push ebx  +
call sub_1005F92  +
test eax eax +
jz loc_1007E54  +
push [ebp+var_C]  +
push 0Ah  +
push ebx  +
call sub_1007214  +
test eax eax +
jz loc_1007E54  +
push 0Ah  +
push ebx  +
call sub_100702E  +
cmp [ebp+var_C] 1 +
jnz loc_1007DD6  +
mov dword ptr [ebp+String2] eax +
jmp loc_1007DD9  +
mov [ebp+var_14] eax +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_1007E3E  +
mov esi [esi+10h] +
and esi 4000h +
or esi eax +
jz loc_1007E17  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_1007E04  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_10091B5  +
jmp loc_1007E0E  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_10091D8  +
cmp eax 0FFFFFFFFh +
jnz loc_1007FFB  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_1007E2F  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_1008C38  +
jmp loc_1007CFE  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_1008C8D  +
jmp loc_1007CFE  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
mov ecx dword ptr [ebp+String2] +
jz loc_1007E4D  +
mov ecx [ebp+var_14] +
mov [eax] ecx +
jmp loc_1007FFB  +
and edi 10h +
xor eax eax +
or edi eax +
jz loc_1007E66  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jnz loc_1007EBA  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1007E88  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1007E88  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E2h  +
jmp loc_1007C43  +
push dword ptr [ebp+var_8]  +
push 15F0h  +
jmp loc_1007CAA  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_1007FFB  +
push ebx  +
call sub_100700B  +
test eax eax +
jnz loc_1007EF3  +
and edi 10h +
or edi eax +
jz loc_1007EC4  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jz loc_1007EC4  +
xor eax eax +
inc eax  +
mov [ecx] eax +
jmp loc_1008015  +
cmp dword ptr [ebp+lpString] eax +
jz loc_1007EE6  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1007EE6  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E3h  +
jmp loc_1007C43  +
push dword ptr [ebp+var_8]  +
push 15F1h  +
jmp loc_1007CAA  +
cmp dword ptr [esi+8] 7 +
push ebx  +
jnz loc_1007F04  +
call sub_1006E46  +
fstp  [ebp+var_18] +
jmp loc_1007F0C  +
call sub_1006E46  +
fstp  [ebp+var_28] +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_1007F82  +
mov eax [esi+10h] +
and eax 4000h +
xor ecx ecx +
or eax ecx +
jz loc_1007F53  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_1007F3C  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_10091FB  +
jmp loc_1007F4A  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_100921E  +
cmp eax 0FFFFFFFFh +
jnz loc_1007FFB  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_1007F6F  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_1008CE2  +
jmp loc_1007CFE  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_1008D37  +
jmp loc_1007CFE  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
jnz loc_1007F92  +
fld  [ebp+var_18] +
fstp  dword ptr [eax] +
jmp loc_1007FFB  +
fld  [ebp+var_28] +
fstp  qword ptr [eax] +
jmp loc_1007FFB  +
push [ebp+arg_8]  +
push dword ptr [esi+38h]  +
push [ebp+lpString2]  +
push dword ptr [ebp+lpString]  +
call dword ptr [esi+34h]  +
jmp loc_1008015  +
cmp [ebp+lpString2] 0 +
jz loc_1007FF2  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_1007FD3  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1007FD3  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15F3h  +
jmp loc_1007C43  +
call ds:GetLastError  +
test eax eax +
jnz loc_1007FE8  +
push 42Bh  +
call ds:SetLastError  +
call sub_1005D43  +
jmp loc_1007C53  +
mov eax [ebp+var_4] +
mov dword ptr [eax] 1 +
xor eax eax +
inc eax  +
jmp loc_1008015  +
call ds:GetLastError  +
test eax eax +
jnz loc_100800E  +
push 57h  +
call ebx  +
call sub_1005D43  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_100810A  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_100810A  +
cmp [ebp+arg_8] edi +
jz loc_100810A  +
push [ebp+arg_8]  +
call sub_1007640  +
test eax eax +
jnz loc_100808F  +
push 490h  +
jmp loc_1008116  +
mov [ebp+arg_4] edi +
cmp [ebp+arg_0] edi +
jbe loc_1008085  +
add esi 20h +
jmp loc_100809E  +
xor edi edi +
lea eax [esi-20h] +
test eax eax +
jz loc_10080EB  +
mov eax [esi-10h] +
and eax 100000h +
xor ecx ecx +
or eax ecx +
jnz loc_10080B6  +
xor edi edi +
inc edi  +
mov eax [esi] +
test eax eax +
jz loc_10080DB  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jle loc_10080DB  +
mov eax [ebp+arg_8] +
push edi  +
push dword ptr [esi]  +
add eax 2 +
push eax  +
call sub_10073F7  +
cmp eax 1 +
jz loc_1008105  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
add esi 50h +
cmp eax [ebp+arg_0] +
jb loc_100809C  +
jmp loc_1008085  +
call ds:GetLastError  +
test eax eax +
jnz loc_10080FC  +
push 42Bh  +
call ebx  +
call sub_1005D43  +
xor eax eax +
jmp loc_100811B  +
mov eax [ebp+arg_4] +
jmp loc_100811B  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008118  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_10081FF  +
cmp [ebp+arg_4] edi +
jz loc_10081FF  +
cmp [ebp+lpString] edi +
jz loc_10081FF  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_10081FF  +
push edi  +
push 1  +
push 3Ah  +
push [ebp+lpString]  +
mov [esi] edi +
mov [esi+4] edi +
call sub_1006298  +
mov ebx eax +
or eax 0FFFFFFFFh +
cmp ebx eax +
jz loc_1008210  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov edi eax +
push 1  +
lea eax [ebx+5] +
push eax  +
push 0  +
sub edi ebx +
push 8  +
dec edi  +
call sub_10069E3  +
mov [esi] eax +
test eax eax +
jnz loc_10081B6  +
call ds:GetLastError  +
test eax eax +
jnz loc_100820D  +
push 8  +
call ds:SetLastError  +
jmp loc_100820D  +
push 1  +
lea eax [edi+5] +
push eax  +
push 0  +
push 9  +
call sub_10069E3  +
mov [esi+4] eax +
test eax eax +
jz loc_10081A2  +
lea eax [ebx+1] +
push eax  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_10066F8  +
test edi edi +
jz loc_10081F0  +
mov eax [ebp+lpString] +
inc edi  +
push edi  +
lea eax [eax+ebx*2+2] +
push eax  +
push dword ptr [esi+4]  +
call sub_10066F8  +
push dword ptr [esi]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1008049  +
jmp loc_1008210  +
call ds:GetLastError  +
test eax eax +
jnz loc_100820D  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
test ebx ebx +
jz loc_100829B  +
mov esi [ebp+dwErrCode] +
test esi esi +
jz loc_100829B  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
call sub_1005CB0  +
test eax eax +
jnz loc_100824C  +
push 7  +
call sub_1005C3F  +
jmp loc_1008258  +
push 0  +
push 0  +
push eax  +
push 7  +
call sub_10069E3  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_100829B  +
test ebx ebx +
jbe loc_1008285  +
add esi 2Ch +
cmp dword ptr [esi] 0 +
jz loc_100827F  +
mov eax [esi-1Ch] +
and eax 10000h +
xor ecx ecx +
or eax ecx +
jz loc_100827F  +
push esi  +
call sub_100638B  +
add esi 50h +
dec ebx  +
jnz loc_1008266  +
push [ebp+arg_0]  +
call sub_1005CDC  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
jmp loc_100829D  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+dwLen] edi +
mov [ebp+puLen] edi +
mov dword ptr [ebp+lpString] edi +
mov [ebp+pBlock] edi +
mov [ebp+lpBuffer] edi +
call ds:SetLastError  +
mov esi 104h +
xor eax eax +
mov [ebp+dwLen] esi +
neg eax  +
sbb eax eax +
push 1  +
and eax esi +
add [ebp+dwLen] eax +
push [ebp+dwLen]  +
push edi  +
push 7  +
call sub_10069E3  +
mov ebx eax +
cmp ebx edi +
jz loc_100832C  +
push [ebp+dwLen]  +
push ebx  +
push edi  +
call ds:GetModuleFileNameW  +
cmp eax edi +
jz loc_100833E  +
mov ecx [ebp+dwLen] +
dec ecx  +
cmp eax ecx +
jnb loc_10082D5  +
push edi  +
push ebx  +
call GetFileVersionInfoSizeW  +
mov [ebp+dwLen] eax +
cmp eax edi +
jnz loc_1008345  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jnz loc_100833E  +
call esi  +
test eax eax +
jnz loc_100833E  +
push 57h  +
jmp loc_1008338  +
call ds:GetLastError  +
test eax eax +
jnz loc_100833E  +
push 8  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100850B  +
add eax 0Ah +
push eax  +
mov [ebp+dwLen] eax +
call sub_10060B0  +
mov [ebp+pBlock] eax +
cmp eax edi +
jz loc_100833E  +
push eax  +
push [ebp+dwLen]  +
push edi  +
push ebx  +
call GetFileVersionInfoW  +
test eax eax +
jnz loc_1008372  +
lea eax [ebp+pBlock] +
push eax  +
call sub_100638B  +
jmp loc_100833E  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jz loc_1008367  +
push 1  +
push 40h  +
push edi  +
push 7  +
call sub_10069E3  +
xor esi esi +
test [ebp+puLen] 0FFFFFFFCh +
mov ebx eax +
mov dword ptr [ebp+lpString] edi +
jbe loc_1008367  +
mov eax [ebp+lpBuffer] +
lea eax [eax+esi*4] +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push ecx  +
push eax  +
push offset aStringfileinfo  +
push 40h  +
push ebx  +
call sub_1002F0D  +
add esp 14h +
lea eax [ebp+dwLen] +
push eax  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jnz loc_10083E9  +
mov eax [ebp+puLen] +
inc esi  +
shr eax 2 +
mov dword ptr [ebp+lpString] edi +
cmp esi eax +
jb loc_10083A7  +
cmp dword ptr [ebp+lpString] edi +
jz loc_1008367  +
push edi  +
push dword ptr [ebp+lpString]  +
call sub_1005F92  +
cmp eax 4 +
ja loc_1008421  +
lea eax [ebp+pBlock] +
push eax  +
call sub_100638B  +
call ds:GetLastError  +
test eax eax +
jnz loc_100833E  +
push 42Bh  +
jmp loc_1008338  +
push edi  +
push 1  +
mov ebx offset a_exe_0 +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_1006303  +
mov esi ds:lstrlenW +
cmp eax 0FFFFFFFFh +
jz loc_100845B  +
push dword ptr [ebp+lpString]  +
call esi  +
push ebx  +
mov [ebp+var_18] eax +
call esi  +
mov ecx [ebp+var_18] +
mov dx ds:word_100142C +
sub ecx eax +
mov eax dword ptr [ebp+lpString] +
mov [eax+ecx*2] dx +
cmp [ebp+arg_0] edi +
jz loc_10084AB  +
push dword ptr [ebp+lpString]  +
call esi  +
push [ebp+arg_0]  +
mov ebx eax +
call esi  +
push 1  +
lea eax [ebx+eax+0Bh] +
push eax  +
push edi  +
push 7  +
mov [ebp+dwLen] eax +
call sub_10069E3  +
mov esi eax +
cmp esi edi +
jnz loc_1008492  +
lea eax [ebp+pBlock] +
push eax  +
call sub_100638B  +
jmp loc_100832C  +
push [ebp+arg_0]  +
push dword ptr [ebp+lpString]  +
push offset aSS  +
push [ebp+dwLen]  +
push esi  +
call sub_1002F0D  +
add esp 14h +
jmp loc_10084CB  +
cmp dword ptr [ebp+lpString] edi +
jnz loc_10084B9  +
push 7  +
call sub_1005C3F  +
jmp loc_10084C5  +
push edi  +
push edi  +
push dword ptr [ebp+lpString]  +
push 7  +
call sub_10069E3  +
mov esi eax +
cmp esi edi +
jz loc_1008484  +
push esi  +
mov dword ptr [ebp+lpString] esi +
call ds:CharUpperW  +
push 1  +
push 50h  +
push edi  +
push 0Bh  +
call sub_10069E3  +
mov esi eax +
cmp esi edi +
jz loc_1008484  +
push dword ptr [ebp+lpString]  +
push 15EDh  +
call sub_1007628  +
push eax  +
push 50h  +
push esi  +
call sub_1002F0D  +
add esp 10h +
lea eax [ebp+pBlock] +
push eax  +
call sub_100638B  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
mov [ebp+var_8] ebx +
xor esi esi +
call edi  +
cmp [ebp+arg_0] ebx +
jz loc_100858D  +
cmp [ebp+arg_4] ebx +
jz loc_100858D  +
cmp [ebp+arg_C] ebx +
jz loc_100858D  +
cmp [ebp+dwErrCode] ebx +
jz loc_100858D  +
cmp dword ptr [ebp+arg_14] ebx +
jnz loc_100858D  +
call sub_1005DF5  +
test eax eax +
jnz loc_100856D  +
push 157Fh  +
call sub_1007628  +
push eax  +
call sub_1005CDC  +
push 47Eh  +
call edi  +
jmp loc_1008596  +
call sub_1005B69  +
test eax eax +
jz loc_1008591  +
mov eax [ebp+arg_8] +
cmp eax 0FFFFFFFFh +
jz loc_10085B5  +
cmp eax [ebp+arg_C] +
jl loc_100859F  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008591  +
push 57h  +
call edi  +
call sub_1005D43  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
mov ecx [ebp+dwErrCode] +
imul eax eax +
push ebx  +
push dword ptr [eax+ecx+20h]  +
call sub_10076DA  +
mov esi eax +
cmp esi ebx +
jz loc_1008591  +
push esi  +
call sub_10082A8  +
mov dword ptr [ebp+arg_14] eax +
cmp eax ebx +
jz loc_1008591  +
push [ebp+dwErrCode]  +
lea eax [ebp+var_8] +
push [ebp+arg_C]  +
push eax  +
call sub_100777B  +
test eax eax +
jz loc_1008591  +
xor eax eax +
inc eax  +
mov [ebp+var_C] ebx +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] eax +
jbe loc_1008717  +
jmp loc_10085EC  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
lea ecx [ecx+eax*4] +
mov ebx [ecx] +
push 2  +
inc eax  +
pop esi  +
mov [ebp+arg_8] esi +
cmp eax [ebp+arg_0] +
jnb loc_1008605  +
mov edi [ecx+4] +
jmp loc_1008607  +
xor edi edi +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1008049  +
cmp eax 0FFFFFFFFh +
jnz loc_100864C  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1008127  +
cmp eax 0FFFFFFFFh +
jnz loc_100863F  +
mov eax [ebp+var_8] +
cmp eax 0FFFFFFFFh +
jz loc_1008754  +
mov edi ebx +
xor ebx ebx +
jmp loc_1008645  +
mov ebx [ebp+var_14] +
mov edi [ebp+var_10] +
mov [ebp+arg_8] 1 +
imul eax eax +
add eax [ebp+dwErrCode] +
mov esi eax +
jz loc_1008787  +
test edi edi +
jz loc_10086A7  +
cmp [ebp+arg_8] 2 +
jnz loc_10086A7  +
push dword ptr [esi+8]  +
call sub_100769B  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_10086A2  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1008049  +
cmp eax 0FFFFFFFFh +
jnz loc_1008699  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_1008127  +
cmp eax 0FFFFFFFFh +
jz loc_10086A7  +
mov [ebp+arg_8] 1 +
jmp loc_10086A5  +
mov [ebp+arg_8] ecx +
xor edi edi +
mov eax [ebp+arg_8] +
mov [ebp+var_24] eax +
mov eax [ebp+var_8] +
mov [ebp+var_20] eax +
mov eax dword ptr [ebp+arg_14] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_24] +
push eax  +
push edi  +
push ebx  +
mov [ebp+var_18] esi +
call sub_1007A6C  +
mov ecx [ebp+var_24] +
test eax eax +
jz loc_1008800  +
mov eax [esi+18h] +
test eax eax +
jz loc_10086E2  +
cmp eax [esi+1Ch] +
jz loc_10087A5  +
inc dword ptr [esi+1Ch]  +
mov esi [esi+10h] +
and esi 20000h +
xor eax eax +
or esi eax +
jz loc_10086FB  +
mov [ebp+var_C] 1 +
add [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jb loc_10085E9  +
mov edi ds:SetLastError +
xor ebx ebx +
cmp [ebp+var_C] ebx +
jnz loc_1008749  +
xor esi esi +
cmp [ebp+arg_C] ebx +
jbe loc_1008749  +
mov ecx [ebp+dwErrCode] +
cmp ecx ebx +
jz loc_10087EA  +
mov eax [ecx+10h] +
and eax 80000h +
xor edx edx +
or eax edx +
jz loc_1008740  +
cmp [ecx+1Ch] ebx +
jz loc_1008810  +
inc esi  +
add ecx 50h +
cmp esi [ebp+arg_C] +
jb loc_1008721  +
push ebx  +
call edi  +
xor eax eax +
inc eax  +
jmp loc_1008598  +
push dword ptr [ebp+arg_14]  +
push ebx  +
push 15E7h  +
call sub_1007628  +
push eax  +
push esi  +
call sub_1006C70  +
add esp 10h +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100821C  +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_1008596  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008591  +
push 42Bh  +
call ds:SetLastError  +
jmp loc_1008591  +
test ebx ebx +
jz loc_10087D2  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_10087D2  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push ebx  +
push 15E5h  +
call sub_1007628  +
push eax  +
push 3  +
call sub_1006C70  +
add esp 14h +
jmp loc_100876C  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push 15EAh  +
call sub_1007628  +
push eax  +
push 2  +
jmp loc_1008764  +
call ds:GetLastError  +
test eax eax +
jnz loc_10087FB  +
push 42Bh  +
call edi  +
call sub_1005D43  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100821C  +
jmp loc_1008596  +
mov eax [ecx+20h] +
cmp eax ebx +
jnz loc_100882A  +
mov eax [ecx+10h] +
and eax 40000h +
xor edx edx +
or eax edx +
jz loc_10087EA  +
mov edi [ecx+24h] +
jmp loc_1008842  +
mov ecx [ecx+24h] +
cmp ecx ebx +
jnz loc_1008840  +
push ebx  +
push eax  +
call sub_10076DA  +
mov edi eax +
test edi edi +
jnz loc_1008846  +
jmp loc_10087FB  +
mov edi ecx +
test edi edi +
jz loc_100885C  +
push edi  +
call ds:lstrlenW  +
test eax eax +
jz loc_100885C  +
push dword ptr [ebp+arg_14]  +
push edi  +
push 15E4h  +
jmp loc_10087DD  +
push dword ptr [ebp+arg_14]  +
push 15E8h  +
call sub_1007628  +
push eax  +
push 1  +
call sub_1006C70  +
add esp 0Ch +
jmp loc_100876C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1008894  +
cmp dword ptr [eax] 9 +
jnz loc_1008894  +
xor eax eax +
inc eax  +
jmp loc_1008896  +
xor eax eax +
pop ebp  +
retn 4  +
***
xor ecx ecx +
cmp eax ecx +
jnz loc_10088AF  +
xor eax eax +
retn   +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 9 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_100887E  +
test eax eax +
jz loc_100890A  +
mov eax [esi+8] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_10088FE  +
push edi  +
mov edi [eax+10h] +
push eax  +
call sub_1008A0B  +
lea eax [ebp+arg_0] +
push eax  +
call sub_100638B  +
mov eax edi +
mov [ebp+arg_0] eax +
test edi edi +
jnz loc_10088E2  +
pop edi  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [esi] +
push ecx  +
call sub_100887E  +
test eax eax +
jz loc_1008935  +
push ecx  +
call sub_10088C4  +
push esi  +
call sub_100638B  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_100887E  +
test eax eax +
jz loc_1008954  +
mov eax [ecx+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_100887E  +
test eax eax +
jnz loc_1008973  +
xor eax eax +
jmp loc_1008998  +
mov edx [ebp+arg_4] +
cmp [ecx+4] edx +
jbe loc_100896F  +
mov eax [ecx+8] +
push esi  +
xor esi esi +
cmp edx 1 +
jb loc_100898E  +
dec edx  +
mov esi eax +
mov eax [eax+10h] +
jnz loc_1008986  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_1008997  +
mov [ecx] esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_100887E  +
test eax eax +
jnz loc_10089B9  +
or eax 0FFFFFFFFh +
jmp loc_1008A01  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
jz loc_10089B4  +
push 14h  +
call sub_10060B0  +
test eax eax +
jz loc_10089B4  +
mov ecx [ebp+arg_4] +
and dword ptr [eax+10h] 0 +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov ecx [ebp+arg_C] +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 63h +
inc dword ptr [esi+4]  +
cmp dword ptr [esi+8] 0 +
jnz loc_10089F4  +
mov [esi+8] eax +
jmp loc_10089FA  +
mov ecx [esi+0Ch] +
mov [ecx+10h] eax +
mov [esi+0Ch] eax +
mov eax [esi+4] +
dec eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_1008A7F  +
mov eax [edx+4] +
mov ecx 70000h +
cmp eax ecx +
ja loc_1008A4A  +
jz loc_1008A66  +
cmp eax 20000h +
jz loc_1008A66  +
cmp eax 30000h +
jz loc_1008A66  +
cmp eax 40000h +
jz loc_1008A66  +
cmp eax 50000h +
jz loc_1008A66  +
cmp eax 60000h +
jz loc_1008A66  +
jmp loc_1008A7F  +
cmp eax 80000h +
jz loc_1008A71  +
cmp eax 90000h +
jz loc_1008A66  +
cmp eax 0A0000h +
jz loc_1008A66  +
cmp eax 0B0000h +
jnz loc_1008A7F  +
add edx 0Ch +
push edx  +
call sub_100638B  +
jmp loc_1008A7F  +
push esi  +
lea esi [edx+0Ch] +
push esi  +
call sub_1008914  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_100887E  +
test eax eax +
jnz loc_1008AA3  +
or eax 0FFFFFFFFh +
jmp loc_1008BB2  +
xor edx edx +
push esi  +
push edi  +
mov edi [ebx+8] +
mov [ebp+arg_0] edx +
cmp [ebx+4] edx +
jbe loc_1008BAD  +
mov esi [ebp+lpString2] +
mov eax [ebp+arg_4] +
cmp [edi+4] eax +
jnz loc_1008B9D  +
mov ecx 70000h +
cmp eax ecx +
ja loc_1008B31  +
jz loc_1008B1F  +
cmp eax 20000h +
jz loc_1008B03  +
cmp eax 30000h +
jz loc_1008B94  +
cmp eax 40000h +
jz loc_1008B94  +
cmp eax 60000h +
jnz loc_1008B9D  +
mov eax [edi+0Ch] +
fld  dword ptr [eax] +
fld  dword ptr [esi] +
fucompp   +
jmp loc_1008B26  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_1005FB4  +
test eax eax +
jz loc_1008BB7  +
mov edx [ebp+arg_0] +
jmp loc_1008B9D  +
mov eax [edi+0Ch] +
fld  qword ptr [esi] +
fcomp  qword ptr [eax] +
fnstsw  ax +
test ah 44h +
jp loc_1008B9D  +
mov eax edx +
jmp loc_1008BB0  +
cmp eax 90000h +
jz loc_1008B94  +
cmp eax 0A0000h +
jz loc_1008B57  +
cmp eax 0B0000h +
jnz loc_1008B9D  +
mov eax [edi+0Ch] +
mov ecx [esi+4] +
cmp ecx [eax+4] +
jnz loc_1008B9D  +
mov ecx [esi] +
cmp ecx [eax] +
jmp loc_1008B9B  +
mov eax [edi+0Ch] +
mov cx [esi+6] +
cmp cx [eax+6] +
jnz loc_1008B9D  +
mov cx [esi+0Eh] +
cmp cx [eax+0Eh] +
jnz loc_1008B9D  +
mov cx [esi+0Ah] +
cmp cx [eax+0Ah] +
jnz loc_1008B9D  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_1008B9D  +
mov cx [esi+0Ch] +
cmp cx [eax+0Ch] +
jnz loc_1008B9D  +
mov cx [esi] +
cmp cx [eax] +
jmp loc_1008B9B  +
mov eax [edi+0Ch] +
mov eax [eax] +
cmp eax [esi] +
jz loc_1008B2D  +
mov edi [edi+10h] +
inc edx  +
mov [ebp+arg_0] edx +
cmp edx [ebx+4] +
jb loc_1008AB9  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
mov eax [ebp+arg_0] +
jmp loc_1008BB0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100887E  +
test eax eax +
jnz loc_1008BDC  +
or eax 0FFFFFFFFh +
jmp locret_1008C2F  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_1008BEF  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov esi eax +
push edi  +
inc esi  +
lea edi [esi+esi] +
push edi  +
call sub_10060B0  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1008C2A  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_10066F8  +
push [ebp+var_4]  +
push edi  +
push 20000h  +
push [ebp+arg_0]  +
call sub_10089A1  +
cmp eax 0FFFFFFFFh +
jnz loc_1008C2D  +
lea eax [ebp+var_4] +
push eax  +
call sub_100638B  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100887E  +
test eax eax +
jz loc_1008C81  +
push 4  +
call sub_10060B0  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1008C81  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 30000h  +
push [ebp+arg_0]  +
call sub_10089A1  +
cmp eax 0FFFFFFFFh +
jnz locret_1008C84  +
lea eax [ebp+var_4] +
push eax  +
call sub_100638B  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100887E  +
test eax eax +
jz loc_1008CD6  +
push 4  +
call sub_10060B0  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1008CD6  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 40000h  +
push [ebp+arg_0]  +
call sub_10089A1  +
cmp eax 0FFFFFFFFh +
jnz locret_1008CD9  +
lea eax [ebp+var_4] +
push eax  +
call sub_100638B  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100887E  +
test eax eax +
jz loc_1008D2B  +
push 4  +
call sub_10060B0  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1008D2B  +
fld  [ebp+arg_4] +
fstp  dword ptr [eax] +
push [ebp+var_4]  +
push 4  +
push 60000h  +
push [ebp+arg_0]  +
call sub_10089A1  +
cmp eax 0FFFFFFFFh +
jnz locret_1008D2E  +
lea eax [ebp+var_4] +
push eax  +
call sub_100638B  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100887E  +
test eax eax +
jz loc_1008D80  +
push 8  +
call sub_10060B0  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1008D80  +
fld  [ebp+arg_4] +
fstp  qword ptr [eax] +
push [ebp+var_4]  +
push 8  +
push 70000h  +
push [ebp+arg_0]  +
call sub_10089A1  +
cmp eax 0FFFFFFFFh +
jnz locret_1008D83  +
lea eax [ebp+var_4] +
push eax  +
call sub_100638B  +
or eax 0FFFFFFFFh +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+var_4] esi +
call sub_100887E  +
test eax eax +
jz loc_1008DFA  +
call sub_100889F  +
push eax  +
mov [ebp+var_4] eax +
call sub_100887E  +
test eax eax +
jz loc_1008DFA  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] esi +
jbe loc_1008DD4  +
push esi  +
push esi  +
push esi  +
push [ebp+var_4]  +
call sub_10089A1  +
cmp eax 0FFFFFFFFh +
jz loc_1008DD4  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_1008DBE  +
cmp edi [ebp+arg_4] +
pop edi  +
jnz loc_1008DF1  +
push [ebp+var_4]  +
push 4  +
push 80000h  +
push [ebp+arg_0]  +
call sub_10089A1  +
cmp eax 0FFFFFFFFh +
jnz loc_1008DFD  +
lea eax [ebp+var_4] +
push eax  +
call sub_1008914  +
or eax 0FFFFFFFFh +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_100887E  +
test eax eax +
jnz loc_1008E1D  +
or eax 0FFFFFFFFh +
jmp loc_1008E41  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] edi +
jbe loc_1008E3E  +
push 0  +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_10089A1  +
cmp eax 0FFFFFFFFh +
jz loc_1008E3E  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_1008E25  +
mov eax edi +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_100895D  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_1008EA6  +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_1008E83  +
mov eax [eax+10h] +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
jmp loc_1008E89  +
mov edx [eax+10h] +
mov [esi+8] edx +
cmp eax [esi+0Ch] +
jnz loc_1008E91  +
mov [esi+0Ch] ecx +
dec dword ptr [esi+4]  +
push eax  +
call sub_1008A0B  +
lea eax [ebp+var_4] +
push eax  +
call sub_100638B  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100895D  +
test eax eax +
jz loc_1008EDC  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1008EDC  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1008E4A  +
jmp loc_1008EDE  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100895D  +
test eax eax +
jz loc_1008F10  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1008F10  +
push dword ptr [eax+0Ch]  +
call sub_100893F  +
jmp loc_1008F12  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100895D  +
test eax eax +
jnz loc_1008F35  +
xor eax eax +
jmp loc_1008F4B  +
mov ecx [eax+4] +
cmp ecx 10000h +
jz loc_1008F48  +
cmp ecx 80000h +
jnz loc_1008F31  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100895D  +
test eax eax +
jnz loc_1008F6E  +
xor eax eax +
jmp loc_1008F7A  +
cmp dword ptr [eax+4] 20000h +
jnz loc_1008F6A  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100895D  +
test eax eax +
jz loc_1008FAF  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1008FAF  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1008F1B  +
jmp loc_1008FB1  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100895D  +
test eax eax +
jz loc_1008FE6  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1008FE6  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1008F54  +
jmp loc_1008FE8  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_1009002  +
xor eax eax +
jmp loc_1009032  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100895D  +
test eax eax +
jz loc_1008FFE  +
mov ecx [eax+4] +
mov edx 10000h +
cmp ecx edx +
jz loc_1009025  +
test ecx ecx +
jz loc_1009029  +
jmp loc_1008FFE  +
test ecx ecx +
jnz loc_100902C  +
mov [eax+4] edx +
mov [eax+0Ch] esi +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100895D  +
mov esi eax +
cmp esi edi +
jnz loc_100905B  +
xor eax eax +
jmp loc_10090DA  +
mov eax [esi+4] +
push ebx  +
mov ebx 20000h +
cmp eax ebx +
jz loc_100906C  +
cmp eax edi +
jnz loc_10090C1  +
cmp [ebp+arg_C] edi +
jnz loc_100907D  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov [ebp+arg_C] eax +
mov eax [ebp+arg_C] +
inc eax  +
mov [ebp+arg_C] eax +
cmp [esi+4] edi +
jnz loc_10090A1  +
lea edi [eax+eax] +
push edi  +
call sub_10060B0  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_10090C1  +
mov [esi+4] ebx +
mov [esi+8] edi +
jmp loc_10090C8  +
lea ebx [eax+eax] +
cmp [esi+8] ebx +
jnb loc_10090C8  +
lea edi [esi+0Ch] +
push edi  +
call sub_100638B  +
and dword ptr [edi] 0 +
push ebx  +
call sub_10060B0  +
mov [edi] eax +
test eax eax +
jnz loc_10090C5  +
xor eax eax +
jmp loc_10090D9  +
mov [esi+8] ebx +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_10066F8  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100895D  +
test eax eax +
jz loc_1009114  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1009114  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_1008FF1  +
jmp loc_1009116  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100895D  +
test eax eax +
jz loc_1009151  +
cmp dword ptr [eax+4] 80000h +
jnz loc_1009151  +
push [ebp+arg_10]  +
push [ebp+lpString]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100903C  +
jmp loc_1009153  +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100895D  +
test eax eax +
jz loc_1009175  +
mov eax [eax+4] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100895D  +
test eax eax +
jz loc_10091AA  +
cmp dword ptr [eax+4] 80000h +
jnz loc_10091AA  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100915C  +
jmp loc_10091AC  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 30000h  +
push [ebp+arg_0]  +
call sub_1008A88  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 40000h  +
push [ebp+arg_0]  +
call sub_1008A88  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 60000h  +
push [ebp+arg_0]  +
call sub_1008A88  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 70000h  +
push [ebp+arg_0]  +
call sub_1008A88  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+lpString2]  +
push 20000h  +
push [ebp+arg_0]  +
call sub_1008A88  +
pop ebp  +
retn 10h  +
***
retf   +
***
