cmp esp ebx +
retf   +
***
retf 0  +
***
retn   +
***
retn 0  +
***
retf   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_101B913  +
mov eax [ebp+arg_0] +
jb loc_101B90A  +
cmp eax 0FFFFFFFFh +
ja loc_101B913  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_101B91E  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 0Fh  +
lea eax [ebp+var_48] +
push eax  +
xor edi edi +
mov ebx offset unk_10553C8 +
push esi  +
mov [ebp+var_4] edi +
mov [ebp+var_48] offset unk_1055068 +
mov [ebp+var_44] offset unk_10550C8 +
mov [ebp+var_40] offset unk_1055128 +
mov [ebp+var_3C] offset unk_1055368 +
mov [ebp+var_38] ebx +
mov [ebp+var_34] offset unk_1055428 +
mov [ebp+var_30] offset unk_1055488 +
mov [ebp+var_2C] offset unk_10554E8 +
mov [ebp+var_28] offset unk_1055548 +
mov [ebp+var_24] offset unk_10555A8 +
mov [ebp+var_20] offset unk_1055608 +
mov [ebp+var_1C] offset unk_1055668 +
mov [ebp+var_18] offset unk_10556C8 +
mov [ebp+var_14] offset unk_10557E8 +
mov [ebp+var_10] offset unk_1055308 +
call sub_104D17E  +
cmp eax edi +
jge loc_101B9B7  +
mov [ebp+var_4] eax +
push 2  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
mov [ebp+var_C] offset unk_1055848 +
mov [ebp+var_8] offset unk_10558A8 +
call sub_104D271  +
cmp eax edi +
jge loc_101B9D8  +
mov [ebp+var_4] eax +
cmp dword_1055770 edi +
jz loc_101BA01  +
push 2  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
mov [ebp+var_C] offset unk_1055188 +
mov [ebp+var_8] offset unk_10552A8 +
call sub_104D17E  +
cmp eax edi +
jge loc_101BA01  +
mov [ebp+var_4] eax +
cmp dword_1055890 edi +
jnz loc_101BA11  +
cmp dword_10558F0 edi +
jz loc_101BA4B  +
cmp dword_1055710 edi +
jnz loc_101BA29  +
cmp dword_10556B0 edi +
jnz loc_101BA43  +
cmp dword_1055770 edi +
jnz loc_101BA43  +
push 1  +
lea eax [ebp+var_8] +
push eax  +
push esi  +
mov [ebp+var_8] offset unk_10551E8 +
call sub_104D17E  +
cmp eax edi +
jge loc_101BA43  +
mov [ebp+var_4] eax +
cmp dword_10558F0 edi +
jnz loc_101BA65  +
push 1  +
lea eax [ebp+var_8] +
push eax  +
push esi  +
mov [ebp+var_8] offset unk_1055728 +
call sub_104D17E  +
cmp eax edi +
jge loc_101BA65  +
mov [ebp+var_4] eax +
cmp dword_1055220 edi +
jz loc_101BACC  +
cmp dword_1055230 edi +
jz loc_101BB48  +
mov esi ds:__imp__wcsicmp +
mov edi offset aCsv +
push edi  +
push dword_1055244  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101BB46  +
cmp dword_1055230 eax +
jz loc_101BACA  +
push edi  +
push dword_1055244  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101BACA  +
push 1  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_8] offset unk_1055248 +
call sub_104D17E  +
test eax eax +
jge loc_101BACA  +
mov [ebp+var_4] eax +
xor edi edi +
push 2  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_C] ebx +
mov [ebp+var_8] offset unk_1055668 +
call sub_104D0E6  +
cmp eax edi +
jge loc_101BAEB  +
mov [ebp+var_4] eax +
push 2  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_C] ebx +
mov [ebp+var_8] offset unk_1055728 +
call sub_104D0E6  +
cmp eax edi +
pop edi  +
pop esi  +
pop ebx  +
jge loc_101BB0D  +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
mov dword_10556D4 320h +
mov dword_1055674 321h +
mov dword_10551F4 323h +
mov dword_1055734 324h +
mov dword_10558B4 322h +
leave   +
retn 4  +
xor edi edi +
push 1  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_8] offset unk_1055788 +
call sub_104D17E  +
cmp eax edi +
jge loc_101BACC  +
mov [ebp+var_4] eax +
jmp loc_101BACC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push esi  +
push 100h  +
push 2  +
push esi  +
push esi  +
push 40000000h  +
push [ebp+hObject]  +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
cmp eax esi +
jz loc_101BBFF  +
cmp eax 0FFFFFFFFh +
jz loc_101BBFF  +
push ebx  +
push edi  +
push 17h  +
push [ebp+NumberOfBytesWritten]  +
push esi  +
call ds:FindResourceW  +
mov edi eax +
cmp edi esi +
jz loc_101BBEA  +
push edi  +
push esi  +
call ds:SizeofResource  +
push edi  +
push esi  +
mov ebx eax +
call ds:LoadResource  +
cmp eax esi +
jz loc_101BBEA  +
push eax  +
call ds:LockResource  +
cmp eax esi +
jz loc_101BBF2  +
push esi  +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
push ebx  +
push eax  +
push [ebp+hObject]  +
mov [ebp+NumberOfBytesWritten] esi +
call ds:WriteFile  +
test eax eax +
jnz loc_101BBF2  +
call ds:GetLastError  +
mov esi eax +
push [ebp+hObject]  +
call ds:CloseHandle  +
pop edi  +
pop ebx  +
jmp loc_101BC07  +
call ds:GetLastError  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_101BC29  +
cmp edx 7FFFFFFFh +
jbe loc_101BC2E  +
mov eax 80070057h +
test eax eax +
jl loc_101BC44  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1024F9F  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push esi  +
mov esi 7FFFFFFFh +
test edx edx +
jz loc_101BC66  +
cmp edx esi +
jbe loc_101BC6B  +
mov eax 80070057h +
mov ebx [ebp+arg_0] +
test eax eax +
jl loc_101BC83  +
push edi  +
lea edi [ebp+arg_0] +
mov eax ebx +
call sub_101F0EA  +
mov ecx [ebp+arg_0] +
pop edi  +
jmp loc_101BC85  +
xor ecx ecx +
test eax eax +
jl loc_101BC9C  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_8] +
push esi  +
sub edx ecx +
push 0  +
lea ecx [ebx+ecx*2] +
call sub_1024F9F  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_101BCBD  +
cmp ecx 7FFFFFFFh +
jbe loc_101BCC2  +
mov eax 80070057h +
test eax eax +
jl loc_101BCFF  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:__imp__vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_101BCEF  +
cmp eax esi +
ja loc_101BCEF  +
jnz loc_101BCFA  +
jmp loc_101BCF4  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
fld  [ebp+arg_4] +
push ecx  +
fmul  ds:dbl_1001648 +
push ecx  +
lea eax [ebp+Arguments] +
fstp  [esp+2Ch+var_2C] +
push offset a1_2f  +
push 10h  +
push eax  +
call sub_101BCA7  +
push offset asc_1001630  +
call ds:wprintf  +
lea eax [ebp+Arguments] +
push eax  +
push offset a1S  +
call sub_104D8D2  +
mov ecx [ebp+var_4] +
xor ecx ebp +
add esp 20h +
call sub_101CA75  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 10ACh +
call __alloca_probe  +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
xor eax eax +
mov esi 7FEh +
push esi  +
mov [ebp+FileName] ax +
lea eax [ebp-1002h] +
push ebx  +
push eax  +
mov [ebp+var_1014] ebx +
mov [ebp+var_1018] ebx +
mov [ebp+var_1010] ebx +
mov [ebp+var_100C] ebx +
call memset  +
xor eax eax +
push esi  +
mov word ptr [ebp+hObject] ax +
lea eax [ebp+hObject+2] +
push ebx  +
push eax  +
call memset  +
add esp 18h +
push ebx  +
push ebx  +
push 1  +
push ebx  +
mov [ebp+var_1024] ebx +
call ds:HeapSetInformation  +
push 88h  +
lea eax [ebp+var_10AC] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
push offset unk_10550C8  +
push offset unk_1055068  +
push edi  +
push [ebp+arg_0]  +
call sub_104CEB4  +
mov esi eax +
cmp esi ebx +
jl loc_101C708  +
cmp esi 1 +
jz loc_101C708  +
cmp dword_1055050 ebx +
jz loc_101BE32  +
mov dword_1055000 0Ah +
lea eax [ebp+dwBytes] +
push eax  +
call sub_101F185  +
push 4  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_101B8F5  +
mov esi eax +
cmp esi ebx +
jl loc_101C708  +
push dword ptr [ebp+dwBytes]  +
mov edi ds:GetProcessHeap +
push ebx  +
call edi  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp+var_1020] eax +
cmp eax ebx +
jnz loc_101BE80  +
mov esi 8007000Eh +
jmp loc_101C6D0  +
push dword ptr [ebp+dwBytes]  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jz loc_101BEAC  +
push dword ptr [ebp+dwBytes]  +
push ebx  +
call edi  +
push eax  +
call esi  +
mov [ebp+var_1014] eax +
cmp eax ebx +
jnz loc_101BEB6  +
mov esi 8007000Eh +
jmp loc_101C6B4  +
push 12Ch  +
push ebx  +
call sub_104D8EC  +
mov eax dword_1055170 +
neg eax  +
sbb eax eax +
and eax 0FFFFEFFFh +
add eax 1001h +
pop ecx  +
pop ecx  +
mov dword ptr [ebp+dwBytes] eax +
cmp dword_1055770 ebx +
jz loc_101C069  +
cmp dword_10551D0 ebx +
jz loc_101BF11  +
push offset aHtml  +
push dword_10551E4  +
call ds:__imp__wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101BF11  +
mov [ebp+var_1024] 1 +
mov edi dword_1055784 +
cmp edi ebx +
jnz loc_101BF2D  +
mov edi offset aWorkload_html +
cmp [ebp+var_1024] ebx +
jnz loc_101BF2D  +
mov edi offset aWorkload_xml +
push dword ptr [ebp+dwBytes]  +
or [ebp+var_1034] 8 +
push edi  +
mov [ebp+var_1088] edi +
call sub_104E4B5  +
mov esi eax +
cmp esi ebx +
jl loc_101C6B4  +
push edi  +
call ds:DeleteFileW  +
lea eax [ebp+hObject] +
cmp [ebp+var_1024] ebx +
jnz loc_101C01B  +
push edi  +
push 400h  +
push eax  +
call sub_101BC13  +
mov esi eax +
cmp esi ebx +
jl loc_101C6B4  +
lea eax [ebp+hObject] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_101BF88  +
sub eax edx +
sar eax 1 +
lea edi [ebp+eax*2-806h] +
jmp loc_101BFA7  +
cmp word ptr [edi] 5Ch +
jz loc_101BFB3  +
dec edi  +
dec edi  +
lea eax [ebp+hObject] +
cmp edi eax +
ja loc_101BF9F  +
jmp loc_101BFDA  +
inc edi  +
xor eax eax +
push offset aReport_xsl  +
inc edi  +
mov [edi] ax +
push 400h  +
lea eax [ebp+hObject] +
push eax  +
call sub_101BC4D  +
mov esi eax +
cmp esi ebx +
jl loc_101C6B4  +
lea eax [ebp+hObject] +
cmp edi eax +
jnz loc_101BFFE  +
push offset aReport_xsl  +
push 400h  +
push eax  +
call sub_101BC13  +
mov esi eax +
cmp esi ebx +
jl loc_101C6B4  +
lea eax [ebp+hObject] +
push eax  +
push offset aXreport_xsl  +
call sub_101BB72  +
mov [ebp+var_1070] offset aReport_xsl +
jmp loc_101C069  +
push 400h  +
push eax  +
call sub_1022D0C  +
xor esi esi +
cmp eax ebx +
jz loc_101C03A  +
jle loc_101C038  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi ebx +
jl loc_101C6B4  +
lea eax [ebp+hObject] +
push eax  +
push offset aXreport_xsl  +
call sub_101BB72  +
or [ebp+var_1034] 40000h +
lea eax [ebp+hObject] +
mov [ebp+var_1070] eax +
cmp dword_1055650 ebx +
jz loc_101C090  +
mov eax dword_1055664 +
mov [ebp+var_1028] eax +
cmp eax 1 +
jb loc_101C086  +
cmp eax 5 +
jbe loc_101C09A  +
mov esi 80070057h +
jmp loc_101C6B4  +
mov [ebp+var_1028] 1 +
cmp dword_10558F0 ebx +
jz loc_101C10C  +
mov esi dword_1055904 +
push 12Fh  +
push ebx  +
call sub_104D8EC  +
pop ecx  +
pop ecx  +
jmp loc_101C0FD  +
call sub_101F185  +
cmp [ebp+var_1010] eax +
jnb loc_101C102  +
mov ecx [ebp+var_1010] +
mov eax [ebp+lpMem] +
inc [ebp+var_1010]  +
push esi  +
push offset a1S_0  +
mov [eax+ecx*4] esi +
call sub_104D8D2  +
pop ecx  +
mov eax esi +
pop ecx  +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_101C0EB  +
sub eax ecx +
sar eax 1 +
lea esi [esi+eax*2+2] +
cmp [esi] bx +
jnz loc_101C0B7  +
push offset asc_100168C  +
call sub_104D940  +
cmp dword_1055890 ebx +
jz loc_101C1AA  +
push 1  +
push offset dword_10558A4  +
call sub_104DDAB  +
mov esi eax +
cmp esi ebx +
jl loc_101C6B4  +
mov edi dword_10558A4 +
push 130h  +
push ebx  +
call sub_104D8EC  +
pop ecx  +
pop ecx  +
jmp loc_101C19B  +
call sub_101F185  +
cmp [ebp+var_1018] eax +
jnb loc_101C1A0  +
mov ecx [ebp+var_1018] +
mov eax [ebp+var_1020] +
inc [ebp+var_1018]  +
push 2  +
push edi  +
mov [eax+ecx*4] edi +
call sub_104E4B5  +
mov esi eax +
cmp esi ebx +
jl loc_101C6B4  +
push edi  +
push offset a1S_0  +
call sub_104D8D2  +
pop ecx  +
mov eax edi +
pop ecx  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_101C189  +
sub eax edx +
sar eax 1 +
lea edi [edi+eax*2+2] +
cmp [edi] bx +
jnz loc_101C143  +
push offset asc_100168C  +
call sub_104D940  +
cmp dword_10552F0 ebx +
jz loc_101C1D9  +
mov eax dword_1055304 +
or [ebp+var_1034] 4000000h +
push 2  +
push eax  +
mov [ebp+var_107C] eax +
call sub_104E4B5  +
mov esi eax +
cmp esi ebx +
jl loc_101C6B4  +
cmp dword_1055350 ebx +
jz loc_101C281  +
or [ebp+var_1034] 40000000h +
push 1  +
push offset dword_1055364  +
call sub_104DDAB  +
mov esi eax +
cmp esi ebx +
jl loc_101C6B4  +
mov edi dword_1055364 +
push 130h  +
push ebx  +
call sub_104D8EC  +
pop ecx  +
pop ecx  +
jmp loc_101C272  +
call sub_101F185  +
cmp [ebp+var_100C] eax +
jnb loc_101C277  +
mov ecx [ebp+var_100C] +
mov eax [ebp+var_1014] +
inc [ebp+var_100C]  +
push 2  +
push edi  +
mov [eax+ecx*4] edi +
call sub_104E4B5  +
mov esi eax +
cmp esi ebx +
jl loc_101C6B4  +
push edi  +
push offset a1S_0  +
call sub_104D8D2  +
pop ecx  +
mov eax edi +
pop ecx  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_101C260  +
sub eax edx +
sar eax 1 +
lea edi [edi+eax*2+2] +
cmp [edi] bx +
jnz loc_101C21A  +
push offset asc_100168C  +
call sub_104D940  +
cmp dword_1055410 ebx +
jz loc_101C293  +
or [ebp+var_1034] 1000h +
cmp dword_1055470 ebx +
jz loc_101C2B0  +
mov eax dword_1055484 +
or [ebp+var_1034] 80000h +
mov [ebp+var_1068] eax +
cmp dword_10554D0 ebx +
jz loc_101C2CD  +
mov eax dword_10554E4 +
or [ebp+var_1034] 100000h +
mov [ebp+var_1064] eax +
cmp dword_1055530 ebx +
jz loc_101C2EA  +
mov eax dword_1055544 +
or [ebp+var_1034] 200000h +
mov [ebp+var_1060] eax +
cmp dword_1055590 ebx +
jz loc_101C307  +
mov eax dword_10555A4 +
or [ebp+var_1034] 400000h +
mov [ebp+var_105C] eax +
cmp dword_10555F0 ebx +
jz loc_101C319  +
or [ebp+var_1034] 800000h +
cmp dword_10553B0 ebx +
jz loc_101C34C  +
mov eax dword_10553C4 +
push dword ptr [ebp+dwBytes]  +
or [ebp+var_1034] 800h +
push eax  +
mov [ebp+var_1074] eax +
call sub_104E4B5  +
mov esi eax +
cmp esi ebx +
jl loc_101C6B4  +
cmp dword_1055230 ebx +
jz loc_101C3B3  +
mov esi ds:__imp__wcsicmp +
push offset aCsv  +
push dword_1055244  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101C3D1  +
push offset aXml  +
push dword_1055244  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101C3B3  +
push offset aEvtx  +
push dword_1055244  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101C3D1  +
cmp dword_10557D0 ebx +
jz loc_101C3A7  +
or [ebp+var_1034] 10000000h +
jmp loc_101C3D1  +
or [ebp+var_1034] 2000000h +
jmp loc_101C3D1  +
cmp dword_10557D0 ebx +
jz loc_101C3C7  +
or [ebp+var_1034] 8000000h +
jmp loc_101C3D1  +
or [ebp+var_1034] 1000000h +
cmp dword_1055290 ebx +
jz loc_101C3FB  +
mov eax dword_10552A4 +
cmp eax ebx +
jz loc_101C3FB  +
push offset aUnicode  +
push eax  +
call ds:__imp__wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101C3FB  +
or [ebp+var_1034] 20h +
cmp dword_1055710 ebx +
jz loc_101C45B  +
mov eax dword_1055724 +
cmp eax ebx +
jnz loc_101C435  +
test [ebp+var_1034] 9000000h +
jz loc_101C41F  +
mov eax offset aDumpfile_xml +
jmp loc_101C435  +
test [ebp+var_1034] 12000000h +
mov eax offset aDumpfile_evtx +
jnz loc_101C435  +
mov eax offset aDumpfile_csv +
push dword ptr [ebp+dwBytes]  +
or [ebp+var_1034] 80h +
push eax  +
mov dword ptr [ebp+Arguments] eax +
call sub_104E4B5  +
mov esi eax +
cmp esi ebx +
jl loc_101C6B4  +
mov edi offset aSummary_txt +
cmp dword_10556B0 ebx +
jz loc_101C499  +
mov eax dword_10556C4 +
cmp eax ebx +
jnz loc_101C473  +
mov eax edi +
push dword ptr [ebp+dwBytes]  +
or [ebp+var_1034] 400h +
push eax  +
mov [ebp+var_1084] eax +
call sub_104E4B5  +
mov esi eax +
cmp esi ebx +
jl loc_101C6B4  +
cmp dword_1055830 ebx +
jz loc_101C4D5  +
mov eax dword_1055844 +
cmp eax ebx +
jnz loc_101C4AF  +
mov eax offset aSchema_man +
push dword ptr [ebp+dwBytes]  +
or [ebp+var_1034] 20000000h +
push eax  +
mov [ebp+var_1058] eax +
call sub_104E4B5  +
mov esi eax +
cmp esi ebx +
jl loc_101C6B4  +
test [ebp+var_1034] 20000488h +
jnz loc_101C551  +
or [ebp+var_1034] 480h +
test [ebp+var_1034] 9000000h +
jz loc_101C4FE  +
mov eax offset aDumpfile_xml +
jmp loc_101C514  +
test [ebp+var_1034] 12000000h +
mov eax offset aDumpfile_evtx +
jnz loc_101C514  +
mov eax offset aDumpfile_csv +
push dword ptr [ebp+dwBytes]  +
mov dword ptr [ebp+Arguments] eax +
push eax  +
mov [ebp+var_1084] edi +
call sub_104E4B5  +
mov esi eax +
cmp esi ebx +
jl loc_101C6B4  +
push dword ptr [ebp+dwBytes]  +
push [ebp+var_1084]  +
call sub_104E4B5  +
mov esi eax +
cmp esi ebx +
jl loc_101C6B4  +
mov eax [ebp+var_1020] +
mov [ebp+var_1098] eax +
mov eax [ebp+var_1018] +
mov [ebp+var_10A4] eax +
mov eax [ebp+lpMem] +
mov [ebp+var_1094] eax +
mov eax [ebp+var_1010] +
mov [ebp+var_10A0] eax +
mov eax [ebp+var_1014] +
mov [ebp+var_1090] eax +
mov eax [ebp+var_100C] +
mov [ebp+var_109C] eax +
cmp dword_1055890 ebx +
jz loc_101C5B8  +
fldz   +
push ecx  +
push ecx  +
fstp  [esp+10D0h+var_10D0] +
push ebx  +
mov [ebp+var_1030] offset sub_101BD06 +
call sub_101BD06  +
lea eax [ebp+var_10AC] +
push eax  +
call sub_101FDD5  +
xor esi esi +
cmp eax ebx +
jz loc_101C5D8  +
jle loc_101C5D6  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
cmp esi ebx +
jl loc_101C6B4  +
cmp dword_10558F0 ebx +
jnz loc_101C5FF  +
fld1   +
push ecx  +
push ecx  +
fstp  [esp+10D0h+var_10D0] +
push ebx  +
call sub_101BD06  +
push offset asc_100168C  +
call sub_104D940  +
push 12Dh  +
push ebx  +
call sub_104D8EC  +
test byte ptr [ebp+var_1034] 80h +
pop ecx  +
pop ecx  +
jz loc_101C629  +
push dword ptr [ebp+Arguments]  +
push 132h  +
push ebx  +
call sub_104D8EC  +
add esp 0Ch +
test [ebp+var_1034] 400h +
jz loc_101C649  +
push [ebp+var_1084]  +
push 134h  +
push ebx  +
call sub_104D8EC  +
add esp 0Ch +
test [ebp+var_1034] 20000000h +
jz loc_101C669  +
push [ebp+var_1058]  +
push 139h  +
push ebx  +
call sub_104D8EC  +
add esp 0Ch +
test byte ptr [ebp+var_1034] 8 +
jz loc_101C686  +
push [ebp+var_1088]  +
push 133h  +
push ebx  +
call sub_104D8EC  +
add esp 0Ch +
test [ebp+var_1034] 800h +
jz loc_101C6A6  +
push [ebp+var_1074]  +
push 137h  +
push ebx  +
call sub_104D8EC  +
add esp 0Ch +
lea eax [ebp+var_10AC] +
push eax  +
call sub_101F69E  +
mov esi eax +
cmp [ebp+lpMem] ebx +
jz loc_101C6D0  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+var_1020] ebx +
jz loc_101C6EC  +
push [ebp+var_1020]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+var_1014] ebx +
jz loc_101C708  +
push [ebp+var_1014]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
test byte ptr [ebp+var_1034] 8 +
jz loc_101C727  +
cmp esi ebx +
jge loc_101C727  +
push 12Eh  +
push esi  +
lea eax [ebp+var_10AC] +
push eax  +
call sub_101F969  +
lea eax [ebp+FileName] +
test eax eax +
jz loc_101C749  +
xor eax eax +
cmp ax [ebp+FileName] +
jz loc_101C749  +
lea eax [ebp+FileName] +
push eax  +
call ds:DeleteFileW  +
test [ebp+var_1034] 40000h +
jz loc_101C762  +
lea eax [ebp+hObject] +
push eax  +
call ds:DeleteFileW  +
push offset asc_100168C  +
call sub_104D940  +
cmp byte_10566D0 bl +
jz loc_101C781  +
push 138h  +
push ebx  +
call sub_104D8EC  +
pop ecx  +
pop ecx  +
cmp esi ebx +
jge loc_101C792  +
push offset aPdh_dll  +
push esi  +
call sub_104D958  +
jmp loc_101C7A4  +
cmp esi 1 +
jz loc_101C7A4  +
push 3B60h  +
push ebx  +
call sub_104D8EC  +
pop ecx  +
pop ecx  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_101C7D6  +
test eax eax +
jnz loc_101C7DB  +
mov ecx [esi] +
test ecx ecx +
jz loc_101C7D3  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_101C7C7  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_10563A4 +
push offset dword_1056394  +
push dword_10563A0  +
mov dword_1056394 eax +
push offset dword_1056384  +
push offset dword_1056388  +
push offset dword_1056380  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1056390 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_101C863  +
cmp eax esi +
jnz loc_101C856  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_101C866  +
push 3E8h  +
call ds:Sleep  +
jmp loc_101C83D  +
xor esi esi +
inc esi  +
mov eax dword_10599AC +
cmp eax esi +
jnz loc_101C879  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_101C8B4  +
mov eax dword_10599AC +
test eax eax +
jnz loc_101C8AE  +
mov dword_10599AC esi +
push offset dword_10014B4  +
push offset dword_10014A8  +
call sub_101C7BA  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101C8B4  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_101C97E  +
mov dword_105639C esi +
mov eax dword_10599AC +
cmp eax esi +
jnz loc_101C8D8  +
push offset dword_10014A4  +
push offset dword_100143C  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_10599AC 2 +
cmp [ebp+var_1C] ebx +
jnz loc_101C8E5  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_10599B4 ebx +
jz loc_101C906  +
push offset dword_10599B4  +
call sub_101CBC9  +
pop ecx  +
test eax eax +
jz loc_101C906  +
push ebx  +
push 2  +
push ebx  +
call dword_10599B4  +
push dword_1056384  +
push dword_1056388  +
push dword_1056380  +
call sub_101BD65  +
add esp 0Ch +
mov dword_1056398 eax +
cmp dword_105638C ebx +
jnz loc_101C964  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1056398 eax +
xor ebx ebx +
cmp dword_105638C ebx +
jnz loc_101C964  +
push eax  +
call ds:_exit  +
cmp dword_105639C ebx +
jnz loc_101C972  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1056398 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_101C99B  +
xor eax eax +
jmp loc_101C9E8  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_101C997  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_101C9D5  +
cmp ecx 20Bh +
jnz loc_101C997  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_101C997  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_101C9E3  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_101C997  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_105638C eax +
call sub_101CD62  +
push eax  +
call ds:__set_app_type  +
or dword_10599A4 0FFFFFFFFh +
or dword_10599A8 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_10563AC +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_10563A8 +
mov [eax] ecx +
call sub_101CCF4  +
cmp dword_1055918 0 +
jnz loc_101CA41  +
push offset sub_101CCF4  +
call ds:__setusermatherr  +
pop ecx  +
call sub_101CCDC  +
xor eax eax +
retn   +
***
call sub_101CDA1  +
jmp sub_101C81B  +
***
cmp ecx dword_1055908 +
jnz loc_101CA80  +
retn 0  +
jmp loc_101CE37  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_101CB08  +
cmp dword ptr [eax+10h] 3 +
jnz loc_101CB08  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_101CB02  +
cmp eax 19930521h +
jz loc_101CB02  +
cmp eax 19930522h +
jz loc_101CB02  +
cmp eax 1994000h +
jnz loc_101CB08  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_101CAC8+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_101CB56  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_101CB52  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_101CBBD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_101CBB5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_101CBBF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_101CBA5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_101CB40  +
pop ecx  +
test eax eax +
jz loc_101CC26  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_101CB80  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_101CC26  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_101CC2F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_101CA75  +
push offset dword_1055908  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_101CD55  +
cmp ecx 0FFFFFFFFh +
jz loc_101CD55  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_101CD4E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_101CD4E  +
cmp edx 10000000h +
jnb loc_101CD4E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_101CD4E  +
jmp loc_101CD49  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_101CD97  +
push eax  +
call sub_101CCFC  +
test eax eax +
jz loc_101CD97  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_101CD8C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_101CD97  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1055908 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_101CDD3  +
test eax ebx +
jz loc_101CDD3  +
not eax  +
mov dword_105590C eax +
jmp loc_101CE2E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_101CE1A  +
test dword_1055908 ebx +
jnz loc_101CE1F  +
mov esi 0BB40E64Fh +
mov dword_1055908 esi +
not esi  +
mov dword_105590C esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_10564B0 eax +
mov dword_10564AC ecx +
mov dword_10564A8 edx +
mov dword_10564A4 ebx +
mov dword_10564A0 esi +
mov dword_105649C edi +
mov word_10564C8 ss +
mov word_10564BC cs +
mov word_1056498 ds +
mov word_1056494 es +
mov word_1056490 fs +
mov word_105648C gs +
pushf   +
pop dword_10564C0  +
mov eax [ebp+0] +
mov dword_10564B4 eax +
mov eax [ebp+4] +
mov dword_10564B8 eax +
lea eax [ebp+8] +
mov dword_10564C4 eax +
mov eax [ebp-320h] +
mov dword_1056400 10001h +
mov eax dword_10564B8 +
mov dword_10563BC eax +
mov dword_10563B0 0C0000409h +
mov dword_10563B4 1 +
mov eax dword_1055908 +
mov [ebp-328h] eax +
mov eax dword_105590C +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push 9  +
pop ecx  +
cmp cx ax +
jz loc_101CF9C  +
push 0Ah  +
pop ecx  +
cmp cx ax +
jz loc_101CF9C  +
push 0Dh  +
pop ecx  +
cmp cx ax +
jz loc_101CF9C  +
push 20h  +
pop ecx  +
cmp cx ax +
ja loc_101CF5B  +
mov ecx 0D7FFh +
cmp cx ax +
jnb loc_101CF6B  +
lea ecx [eax+2000h] +
mov edx 1FFDh +
cmp cx dx +
ja loc_101CF98  +
push 7Fh  +
pop ecx  +
cmp cx ax +
ja loc_101CF7B  +
add ecx 5 +
cmp cx ax +
jnb loc_101CF98  +
mov ecx 86h +
cmp cx ax +
ja loc_101CF8D  +
add ecx 19h +
cmp cx ax +
jnb loc_101CF98  +
add eax 230h +
cmp ax 1Fh +
ja loc_101CF9C  +
xor al al +
jmp loc_101CF9E  +
mov al 1 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_101D088  +
cmp [ebp+arg_4] 0 +
push ebx  +
jnz loc_101CFF6  +
mov ebx [ebp+arg_C] +
cmp bl 0Dh +
jz loc_101CFE9  +
cmp bl 0Ah +
jz loc_101CFE9  +
movzx ax bl +
movzx eax ax +
push eax  +
call sub_101CF29  +
push edi  +
test al al +
jnz loc_101CFE6  +
push 0BFh  +
jmp loc_101CFEC  +
push ebx  +
jmp loc_101CFEC  +
push edi  +
push 20h  +
call sub_1023F51  +
jmp loc_101D087  +
cmp [ebp+arg_8] 0 +
jnz loc_101D078  +
mov bl byte ptr [ebp+arg_C] +
cmp bl 22h +
jnz loc_101D00C  +
push edi  +
push offset aQuot  +
jmp loc_101D03E  +
cmp bl 26h +
jnz loc_101D019  +
push edi  +
push offset aAmp  +
jmp loc_101D03E  +
cmp bl 3Ch +
jnz loc_101D026  +
push edi  +
push offset aLt  +
jmp loc_101D03E  +
cmp bl 3Eh +
jnz loc_101D033  +
push edi  +
push offset aGt  +
jmp loc_101D03E  +
cmp bl 27h +
jnz loc_101D045  +
push edi  +
push offset aApos  +
call sub_1023CCF  +
jmp loc_101D087  +
movzx si bl +
push esi  +
call sub_101CF29  +
test al al +
jnz loc_101D05B  +
push edi  +
push 0BFh  +
jmp loc_101D082  +
cmp bl 7Fh +
jbe loc_101D074  +
movzx eax bl +
push eax  +
push offset aHu  +
push edi  +
call sub_1024264  +
add esp 0Ch +
jmp loc_101D087  +
push edi  +
push esi  +
jmp loc_101D082  +
movzx ax byte ptr [ebp+arg_C] +
movzx eax ax +
push edi  +
push eax  +
call sub_1023ECA  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov edi [ebp+NumberOfBytesWritten] +
test edi edi +
jz loc_101D0DC  +
test esi esi +
jz loc_101D0DC  +
cmp byte ptr [ebp+arg_4] 0 +
jnz loc_101D0B6  +
push edi  +
push 22h  +
call sub_1023F51  +
movzx eax byte ptr [esi] +
jmp loc_101D0CB  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push edi  +
call sub_101CFA7  +
inc esi  +
mov al [esi] +
test al al +
jnz loc_101D0BB  +
cmp byte ptr [ebp+arg_4] al +
jnz loc_101D0DC  +
push edi  +
push 22h  +
call sub_1023F51  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+NumberOfBytesWritten] +
test edi edi +
jz loc_101D1F6  +
cmp [ebp+arg_4] 0 +
push esi  +
jnz loc_101D15B  +
mov eax dword_10566D8 +
test byte ptr [eax+3B0h] 20h +
mov esi [ebp+arg_C] +
jnz loc_101D12A  +
mov eax 0FFh +
cmp si ax +
jbe loc_101D12A  +
push edi  +
push 0BFh  +
call sub_1023F51  +
jmp loc_101D1F5  +
push 0Dh  +
pop eax  +
cmp ax si +
jz loc_101D153  +
push 0Ah  +
pop eax  +
cmp ax si +
jz loc_101D153  +
push esi  +
call sub_101CF29  +
push edi  +
test al al +
jnz loc_101D1E9  +
push 0BFh  +
jmp loc_101D1F0  +
push edi  +
push 20h  +
jmp loc_101D1F0  +
cmp [ebp+arg_8] 0 +
jnz loc_101D1EC  +
mov esi [ebp+arg_C] +
push 22h  +
pop eax  +
cmp ax si +
jnz loc_101D178  +
push edi  +
push offset aQuot  +
jmp loc_101D1B6  +
push 26h  +
pop eax  +
cmp ax si +
jnz loc_101D188  +
push edi  +
push offset aAmp  +
jmp loc_101D1B6  +
push 3Ch  +
pop eax  +
cmp ax si +
jnz loc_101D198  +
push edi  +
push offset aLt  +
jmp loc_101D1B6  +
push 3Eh  +
pop eax  +
cmp ax si +
jnz loc_101D1A8  +
push edi  +
push offset aGt  +
jmp loc_101D1B6  +
push 27h  +
pop eax  +
cmp ax si +
jnz loc_101D1BD  +
push edi  +
push offset aApos  +
call sub_1023CCF  +
jmp loc_101D1F5  +
push esi  +
call sub_101CF29  +
test al al +
jnz loc_101D1CE  +
push 0BFh  +
jmp loc_101D1D8  +
cmp si 7Fh +
jbe loc_101D1E8  +
movzx eax si +
push eax  +
push offset aHu  +
push edi  +
call sub_1024264  +
add esp 0Ch +
jmp loc_101D1F5  +
push edi  +
push esi  +
jmp loc_101D1F0  +
push edi  +
push [ebp+arg_C]  +
call sub_1023ECA  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_101D253  +
test esi esi +
jz loc_101D253  +
cmp [ebp+arg_4] 0 +
jnz loc_101D223  +
push edi  +
push 22h  +
call sub_1023ECA  +
movzx eax word ptr [esi] +
test ax ax +
jz loc_101D245  +
movzx eax ax +
push eax  +
push dword ptr [ebp+arg_8]  +
push dword ptr [ebp+arg_4]  +
push edi  +
call sub_101D0E7  +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_101D22E  +
cmp [ebp+arg_4] 0 +
jnz loc_101D253  +
push edi  +
push 22h  +
call sub_1023ECA  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+NumberOfBytesWritten] +
push edi  +
mov edi [ebp+arg_8] +
test ebx ebx +
jz loc_101D2B2  +
test edi edi +
jz loc_101D2B2  +
cmp [ebp+arg_4] 0 +
jnz loc_101D281  +
push ebx  +
push 22h  +
call sub_1023F51  +
mov eax [ebp+arg_C] +
test eax eax +
jbe loc_101D2A4  +
push esi  +
lea esi [eax-1] +
shr esi 1 +
inc esi  +
movzx eax word ptr [edi] +
push eax  +
push 0  +
push dword ptr [ebp+arg_4]  +
push ebx  +
call sub_101D0E7  +
inc edi  +
inc edi  +
dec esi  +
jnz loc_101D28F  +
pop esi  +
cmp [ebp+arg_4] 0 +
jnz loc_101D2B2  +
push ebx  +
push 22h  +
call sub_1023F51  +
pop edi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
xor edx edx +
push esi  +
mov esi eax +
cmp eax edx +
jz loc_101D300  +
jmp loc_101D2E7  +
mov cl [eax] +
cmp cl 9 +
jz loc_101D2E3  +
cmp cl 2Ch +
jz loc_101D2E3  +
cmp cl 0Ah +
jnz loc_101D2DE  +
mov byte ptr [eax] 2Ch +
jmp loc_101D2E6  +
cmp cl 0Dh +
jnz loc_101D2E6  +
mov byte ptr [eax] 20h +
inc eax  +
cmp [eax] dl +
jnz loc_101D2C8  +
jmp loc_101D2FB  +
mov cl [eax] +
cmp cl 20h +
jz loc_101D2F9  +
cmp cl 2Ch +
jnz loc_101D300  +
mov [eax] dl +
dec eax  +
cmp esi eax +
jb loc_101D2ED  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi eax +
test eax eax +
jz loc_101D36B  +
push edi  +
push 20h  +
pop edx  +
jmp loc_101D345  +
movzx ecx word ptr [eax] +
push 9  +
pop edi  +
cmp di cx +
jz loc_101D33E  +
push 2Ch  +
pop edi  +
cmp di cx +
jz loc_101D33E  +
push 0Ah  +
pop edi  +
cmp di cx +
jnz loc_101D336  +
push 2Ch  +
pop ecx  +
jmp loc_101D340  +
push 0Dh  +
pop edi  +
cmp di cx +
jnz loc_101D343  +
mov ecx edx +
mov [eax] cx +
inc eax  +
inc eax  +
cmp word ptr [eax] 0 +
jnz loc_101D316  +
jmp loc_101D364  +
movzx ecx word ptr [eax] +
mov edi edx +
cmp di cx +
jz loc_101D35F  +
push 2Ch  +
pop edi  +
cmp di cx +
jnz loc_101D36A  +
xor ecx ecx +
mov [eax] cx +
dec eax  +
dec eax  +
cmp esi eax +
jb loc_101D34D  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
mov [ebp+var_8] 1 +
mov [ebp+var_4] edi +
cmp [ebx+8] edi +
jbe loc_101D470  +
lea edx [ebx+14h] +
mov [ebp+arg_8] edx +
cmp [ebx+0Ch] edi +
jnz loc_101D3CA  +
cmp [ebp+arg_18] edi +
jz loc_101D3BC  +
cmp dword ptr [ebx+4] 2 +
jnz loc_101D3B0  +
mov esi [edx] +
jmp loc_101D3B7  +
mov ecx [edx] +
xor esi esi +
inc esi  +
shl esi cl +
and esi [ebp+arg_C] +
jmp loc_101D414  +
mov ecx [ebp+arg_C] +
xor eax eax +
cmp [edx] ecx +
setz al  +
mov esi eax +
jmp loc_101D414  +
mov ecx [ebp+arg_10] +
cmp ecx edi +
jz loc_101D414  +
mov eax [edx] +
cmp eax edi +
jz loc_101D414  +
add eax ebx +
cmp eax edi +
jz loc_101D414  +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_101D403  +
cmp dx di +
jz loc_101D3FF  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_101D403  +
add eax 4 +
add ecx 4 +
cmp dx di +
jnz loc_101D3DD  +
xor eax eax +
jmp loc_101D408  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
mov edx [ebp+arg_8] +
xor ecx ecx +
cmp eax edi +
setz cl  +
mov esi ecx +
cmp esi edi +
jz loc_101D456  +
mov eax [edx-4] +
cmp eax edi +
jz loc_101D456  +
lea edi [eax+ebx] +
test edi edi +
jz loc_101D454  +
xor eax eax +
cmp [ebp+arg_18] eax +
jz loc_101D47B  +
cmp [ebp+var_8] eax +
jnz loc_101D43F  +
push [ebp+lpBuffer]  +
push offset asc_1001810  +
call sub_1023CCF  +
push edi  +
push 0  +
push [ebp+arg_4]  +
push [ebp+lpBuffer]  +
call sub_101D200  +
and [ebp+var_8] 0 +
mov edx [ebp+arg_8] +
xor edi edi +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
add edx 8 +
mov [ebp+arg_8] edx +
cmp eax [ebx+8] +
jb loc_101D39C  +
cmp [ebp+var_8] edi +
jz loc_101D488  +
cmp [ebp+arg_10] edi +
jz loc_101D491  +
push [ebp+arg_10]  +
push edi  +
jmp loc_101D47D  +
push edi  +
push eax  +
push [ebp+arg_4]  +
push [ebp+lpBuffer]  +
call sub_101D200  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
xor al al +
jmp loc_101D48A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
mov eax [ecx+4] +
and eax 0FFFFFFBFh +
dec eax  +
jz loc_101D4DC  +
dec eax  +
jz loc_101D4C5  +
dec eax  +
dec eax  +
jz loc_101D4C9  +
sub eax 4 +
jz loc_101D4DC  +
sub eax 8 +
jz loc_101D4C5  +
sub eax 18h +
jz loc_101D4C5  +
xor al al +
jmp loc_101D4F3  +
push 1  +
jmp loc_101D4DE  +
push [ebp+arg_10]  +
push ecx  +
push [ebp+arg_4]  +
push [ebp+lpBuffer]  +
call sub_1024D24  +
mov al 1 +
jmp loc_101D4F3  +
push 0  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push ecx  +
push [ebp+arg_4]  +
push [ebp+lpBuffer]  +
call sub_101D372  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+hMem] 0 +
lea eax [ebp+hMem] +
push eax  +
push [ebp+arg_8]  +
call ConvertSidToStringSidW  +
test eax eax +
jz locret_101D52F  +
push [ebp+hMem]  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101D200  +
push [ebp+hMem]  +
call ds:LocalFree  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
xor edx edx +
cmp [ebp+arg_10] edx +
push esi  +
mov esi [ebp+arg_0] +
setnz al  +
push edi  +
inc eax  +
mov edi eax +
cmp esi edx +
jnz loc_101D558  +
push 57h  +
pop eax  +
jmp loc_101D5D1  +
cmp [ebp+lpMem] edx +
jz loc_101D553  +
mov ecx [ebp+arg_4] +
cmp ecx edx +
jz loc_101D553  +
push ebx  +
mov ebx [ebp+arg_C] +
cmp [ecx] ebx +
jnb loc_101D5CE  +
mov eax [esi] +
shl edi 0Ah +
cmp ebx edi +
ja loc_101D598  +
cmp eax edx +
jz loc_101D58F  +
cmp eax [ebp+lpMem] +
jz loc_101D58F  +
push eax  +
push edx  +
push hHeap  +
call ds:HeapFree  +
mov ecx [ebp+arg_4] +
mov eax [ebp+lpMem] +
mov [esi] eax +
mov [ecx] edi +
jmp loc_101D5CE  +
cmp eax edx +
jz loc_101D5AF  +
cmp eax [ebp+lpMem] +
jz loc_101D5AF  +
push eax  +
push edx  +
push hHeap  +
call ds:HeapFree  +
push ebx  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [esi] eax +
test eax eax +
jnz loc_101D5C9  +
push 8  +
pop eax  +
jmp loc_101D5D0  +
mov eax [ebp+arg_4] +
mov [eax] ebx +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jz loc_101D627  +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jz loc_101D626  +
cmp [ebp+arg_C] 0 +
jz loc_101D602  +
push [ebp+NumberOfBytesWritten]  +
push offset a0x  +
call sub_1023CCF  +
push esi  +
xor esi esi +
cmp [ebp+arg_4] esi +
jbe loc_101D625  +
movzx eax byte ptr [esi+edi] +
push eax  +
push offset a02x  +
push [ebp+NumberOfBytesWritten]  +
call sub_1024264  +
add esp 0Ch +
inc esi  +
cmp esi [ebp+arg_4] +
jb loc_101D60A  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpBuffer]  +
push offset aBinaryeventdat  +
call sub_1023CCF  +
mov eax [ebp+arg_4] +
movzx ecx word ptr [eax+56h] +
test cx cx +
jbe loc_101D664  +
mov eax [eax+5Ch] +
test eax eax +
jz loc_101D664  +
push 0  +
push eax  +
movzx eax cx +
push eax  +
push [ebp+lpBuffer]  +
call sub_101D5DC  +
push [ebp+lpBuffer]  +
push offset aBinaryeventd_0  +
call sub_1023CCF  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx dword_1079B60 +
sub esp 10h +
push ebx  +
mov ebx [ebp+arg_4] +
mov eax [ebx] +
mov edx [ebx+4] +
push esi  +
mov esi dword_1079B64 +
push edi  +
mov edi dword_1079A84 +
test edi edi +
jz loc_101D860  +
cmp edi 2 +
jz loc_101D860  +
cmp edi 1 +
jnz loc_101D793  +
mov edi dword_1079A88 +
mov ebx edi +
or ebx dword_1079A8C +
jnz loc_101D6DB  +
mov ecx [ebp+arg_4] +
mov edx [ecx] +
mov eax [ebp+arg_0] +
mov [eax] edx +
mov ecx [ecx+4] +
jmp loc_101D86A  +
cmp edx esi +
jb loc_101D73C  +
ja loc_101D6E5  +
cmp eax ecx +
jbe loc_101D73C  +
sub eax ecx +
sbb edx esi +
and dword ptr [ebp+var_8] 0 +
mov dword ptr [ebp+var_8+4] edx +
mov dword ptr [ebp+var_10] eax +
mov ecx 7FFFFFFFh +
and edx ecx +
mov dword ptr [ebp+var_10+4] edx +
fild  [ebp+var_10] +
mov edx dword_1079A8C +
mov eax 80000000h +
and dword ptr [ebp+var_8+4] eax +
fild  [ebp+var_8] +
mov dword ptr [ebp+var_8+4] edx +
and dword ptr [ebp+var_8+4] eax +
and edx ecx +
and dword ptr [ebp+var_8] 0 +
fchs   +
faddp st(1) st +
mov dword ptr [ebp+var_10] edi +
mov dword ptr [ebp+var_10+4] edx +
fild  [ebp+var_10] +
fild  [ebp+var_8] +
fchs   +
faddp st(1) st +
fdivr  ds:dbl_10018C8 +
jmp loc_101D7E9  +
sub ecx eax +
sbb esi edx +
and dword ptr [ebp+var_8] 0 +
mov edx dword_1079A8C +
mov dword ptr [ebp+var_10] ecx +
mov dword ptr [ebp+var_8+4] esi +
mov ecx 7FFFFFFFh +
and esi ecx +
mov dword ptr [ebp+var_10+4] esi +
fild  [ebp+var_10] +
mov eax 80000000h +
and dword ptr [ebp+var_8+4] eax +
fild  [ebp+var_8] +
mov dword ptr [ebp+var_8+4] edx +
and dword ptr [ebp+var_8+4] eax +
and edx ecx +
and dword ptr [ebp+var_8] 0 +
fchs   +
faddp st(1) st +
mov dword ptr [ebp+var_10] edi +
mov dword ptr [ebp+var_10+4] edx +
fild  [ebp+var_10] +
fild  [ebp+var_8] +
fchs   +
faddp st(1) st +
fdivr  ds:dbl_10018C8 +
jmp loc_101D840  +
mov edi dword_1079A98 +
test edi edi +
jz loc_101D860  +
cmp edx esi +
jb loc_101D802  +
ja loc_101D7AB  +
cmp eax ecx +
jbe loc_101D802  +
sub eax ecx +
sbb edx esi +
and dword ptr [ebp+var_8] 0 +
mov dword ptr [ebp+var_8+4] edx +
and dword ptr [ebp+var_8+4] 80000000h +
and edx 7FFFFFFFh +
mov dword ptr [ebp+var_10] eax +
mov dword ptr [ebp+var_10+4] edx +
fild  [ebp+var_10] +
mov [ebp+arg_4] edi +
fild  [ebp+var_8] +
fchs   +
faddp st(1) st +
fild  [ebp+arg_4] +
test edi edi +
jge loc_101D7E3  +
fadd  ds:dbl_10018C0 +
fdivr  ds:dbl_10018B8 +
fmulp st(1) st +
call _ftol2  +
mov ecx eax +
add ecx SystemTimeAsFileTime.dwLowDateTime +
mov eax edx +
adc eax SystemTimeAsFileTime.dwHighDateTime +
jmp loc_101D856  +
sub ecx eax +
sbb esi edx +
and dword ptr [ebp+var_8] 0 +
mov dword ptr [ebp+var_8+4] esi +
and dword ptr [ebp+var_8+4] 80000000h +
and esi 7FFFFFFFh +
mov dword ptr [ebp+var_10] ecx +
mov dword ptr [ebp+var_10+4] esi +
fild  [ebp+var_10] +
mov [ebp+arg_4] edi +
fild  [ebp+var_8] +
fchs   +
faddp st(1) st +
fild  [ebp+arg_4] +
test edi edi +
jge loc_101D83A  +
fadd  ds:dbl_10018C0 +
fdivr  ds:dbl_10018B8 +
fmulp st(1) st +
call _ftol2  +
mov ecx SystemTimeAsFileTime.dwLowDateTime +
sub ecx eax +
mov eax SystemTimeAsFileTime.dwHighDateTime +
sbb eax edx +
mov edx [ebp+arg_0] +
mov [edx] ecx +
mov [edx+4] eax +
jmp loc_101D86D  +
mov ecx eax +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx [ebx+4] +
mov [eax+4] ecx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push 104h  +
lea eax [ebp+FileName] +
push eax  +
call sub_1022D0C  +
test eax eax +
jz loc_101D8A7  +
xor eax eax +
jmp loc_101D8B7  +
push 1  +
push 0  +
lea eax [ebp+FileName] +
push eax  +
call sub_1024012  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_101CA75  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ds:MultiByteToWideChar +
xor ebx ebx +
push ebx  +
push ebx  +
push 0FFFFFFFFh  +
push [ebp+lpMultiByteStr]  +
mov [ebp+var_4] ebx +
push ebx  +
push [ebp+CodePage]  +
call edi  +
mov esi eax +
cmp esi ebx +
jz loc_101D91E  +
lea eax [esi+esi+2] +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_101D91E  +
lea ecx [esi+1] +
push ecx  +
push eax  +
push 0FFFFFFFFh  +
push [ebp+lpMultiByteStr]  +
push ebx  +
push [ebp+CodePage]  +
call edi  +
mov eax [ebp+arg_8] +
mov [eax] esi +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_101D93C  +
xor eax eax +
jmp loc_101D96A  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
push ebx  +
call sub_1024129  +
push ebx  +
test eax eax +
jz loc_101D96E  +
call sub_102409A  +
push ebx  +
mov esi eax +
call sub_104729A  +
mov edi eax +
mov eax [ebp+arg_4] +
mov byte ptr [esi+edi] 0 +
mov [eax] esi +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
call sub_102409A  +
mov esi eax +
lea eax [esi+1] +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_101D9AC  +
lea eax [ebp+arg_0] +
push eax  +
push esi  +
push edi  +
push ebx  +
call sub_1024145  +
test eax eax +
jz loc_101D95C  +
push edi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
xor eax eax +
jmp loc_101D967  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_101D9CA  +
push 57h  +
pop eax  +
jmp loc_101DA68  +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
cmp ebx 1 +
jbe loc_101DA3A  +
mov eax ebx +
shl eax 2 +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov edi [ebp+arg_0] +
mov [edi] eax +
test eax eax +
jnz loc_101D9F6  +
push 8  +
pop eax  +
jmp loc_101DA66  +
and [ebp+arg_0] 0 +
mov [edi+8] ebx +
test ebx ebx +
jbe loc_101DA64  +
lea eax [ebp+arg_8] +
push eax  +
push esi  +
call ds:_getmbcp  +
push eax  +
call sub_101D8C8  +
test eax eax +
jz loc_101DA4F  +
mov ecx [edi] +
mov edx [ebp+arg_0] +
mov [ecx+edx*4] eax +
mov eax esi +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_101DA23  +
sub eax ecx +
inc [ebp+arg_0]  +
lea esi [esi+eax+1] +
cmp [ebp+arg_0] ebx +
jb loc_101DA01  +
jmp loc_101DA64  +
lea eax [ebp+arg_8] +
push eax  +
push esi  +
call ds:_getmbcp  +
push eax  +
call sub_101D8C8  +
test eax eax +
jnz loc_101DA57  +
call ds:GetLastError  +
jmp loc_101DA66  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
mov eax [ebp+arg_8] +
add eax eax +
mov [ecx+8] eax +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_8]  +
call sub_101D92D  +
mov esi eax +
test esi esi +
jnz loc_101DA92  +
mov eax 54Fh +
jmp loc_101DABE  +
push edi  +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101D9B5  +
push [ebp+arg_8]  +
mov edi eax +
call sub_1024129  +
test eax eax +
jnz loc_101DABB  +
push esi  +
push eax  +
push hHeap  +
call ds:HeapFree  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_4]  +
call sub_101D92D  +
mov esi eax +
test esi esi +
jnz loc_101DAE9  +
call ds:GetLastError  +
jmp loc_101DB2F  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call ds:_getmbcp  +
push eax  +
call sub_101D8C8  +
push [ebp+arg_4]  +
mov edi eax +
call sub_1024129  +
test eax eax +
jnz loc_101DB17  +
push esi  +
push eax  +
push hHeap  +
call ds:HeapFree  +
test edi edi +
jnz loc_101DB23  +
call ds:GetLastError  +
jmp loc_101DB2E  +
push 0  +
push edi  +
push [ebp+arg_0]  +
call EvtIntWriteXmlEventToLocalLogfile  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_101DCE6  +
cmp dword ptr [ebx+5Ch] 0 +
jnz loc_101DB5C  +
xor eax eax +
cmp ax [ebx+56h] +
jnz loc_101DCE6  +
push esi  +
lea eax [ebx+18h] +
push eax  +
call sub_102534C  +
mov esi eax +
test esi esi +
jz loc_101DCE5  +
inc dword ptr [esi+14h]  +
mov ax [ebx+4] +
mov [esi+0C40h] ax +
mov eax dword_10566D8 +
test byte ptr [eax+3B0h] 8 +
jz loc_101DB95  +
cmp [ebp+arg_4] 0 +
jnz loc_101DB95  +
inc dword ptr [esi+18h]  +
mov eax dword_10566D8 +
push edi  +
mov edi 400h +
test [eax+3B0h] edi +
jz loc_101DBBA  +
mov eax 100h +
test [ebx+4] ax +
jnz loc_101DBBA  +
mov byte_1079A5B 1 +
push 0  +
push esi  +
push ebx  +
call sub_10259D2  +
mov ebx eax +
test ebx ebx +
jz loc_101DCE4  +
mov ecx dword_10566D8 +
test dword ptr [ecx+3B0h] 4000000h +
jz loc_101DBF5  +
cmp [ebp+arg_4] 0 +
jnz loc_101DBF5  +
push ebx  +
push esi  +
push [ebp+arg_0]  +
call sub_103061A  +
mov ecx dword_10566D8 +
mov eax [ecx+3B0h] +
test eax edi +
jnz loc_101DC09  +
test al 8 +
jz loc_101DC4A  +
cmp [ebp+arg_4] 0 +
jnz loc_101DC4A  +
push ebx  +
push esi  +
push [ebp+arg_0]  +
call sub_1025AB7  +
test eax eax +
jz loc_101DCE4  +
mov ecx dword_10566D8 +
test [ecx+3B0h] edi +
jz loc_101DC32  +
inc dword ptr [eax+8]  +
mov ecx dword_10566D8 +
test byte ptr [ecx+3B0h] 8 +
jz loc_101DC4A  +
cmp [ebp+arg_4] 0 +
jnz loc_101DC4A  +
inc dword ptr [eax+0Ch]  +
mov ecx dword_10566D8 +
mov eax [ecx+3B0h] +
test al al +
jns loc_101DCE4  +
mov edi 12000000h +
test eax edi +
jnz loc_101DC69  +
mov esi [ecx+39Ch] +
jmp loc_101DC7A  +
call sub_101D879  +
mov esi eax +
test esi esi +
jz loc_101DCE4  +
mov ecx dword_10566D8 +
mov ecx [ecx+3B0h] +
test ecx 1B000000h +
jnz loc_101DC8C  +
xor dl dl +
jmp loc_101DC8E  +
mov dl 1 +
test ecx 18000000h +
jnz loc_101DC9A  +
xor al al +
jmp loc_101DC9C  +
mov al 1 +
test dl dl +
jz loc_101DCAF  +
movzx eax al +
push eax  +
push [ebp+arg_0]  +
push esi  +
call sub_1024E69  +
jmp loc_101DCB8  +
push [ebp+arg_0]  +
push esi  +
call sub_1024F3A  +
mov eax dword_10566D8 +
test [eax+3B0h] edi +
jz loc_101DCE4  +
push esi  +
push 0  +
call sub_1023F51  +
mov eax dword_10566D8 +
push esi  +
push dword ptr [eax+68Ch]  +
call sub_101DAC8  +
push esi  +
call sub_1023FB3  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 2010h +
call __alloca_probe  +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+Sid] +
push esi  +
mov esi [ebp+arg_0] +
mov eax 400h +
mov [ebp+cbName] eax +
mov [ebp+cbReferencedDomainName] eax +
lea eax [ebp+peUse] +
push eax  +
lea eax [ebp+cbReferencedDomainName] +
push eax  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
lea eax [ebp+cbName] +
push eax  +
lea eax [ebp+Name] +
push eax  +
push ecx  +
push 0  +
call ds:LookupAccountSidW  +
test eax eax +
jz loc_101DD90  +
lea eax [ebp+Name] +
push eax  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
push offset aSS  +
lea eax [ebp+var_1004] +
push 800h  +
push eax  +
call sub_101BCA7  +
add esp 14h +
test eax eax +
jl loc_101DD90  +
lea eax [ebp+var_1004] +
push eax  +
push 0  +
push [ebp+arg_4]  +
push esi  +
call sub_101D200  +
jmp loc_101DDA8  +
cmp byte ptr [ebp+arg_4] 0 +
push esi  +
jz loc_101DD9E  +
push offset aSystem_1  +
jmp loc_101DDA3  +
push offset aSystem  +
call sub_1023CCF  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+lpDateStr] +
push edi  +
mov edi [ebp+cchDate] +
push edi  +
push esi  +
push offset Format  +
push [ebp+lpTime]  +
mov ebx 400h +
push 0  +
push ebx  +
call ds:GetDateFormatW  +
test eax eax +
jnz loc_101DDEE  +
mov [esi] ax +
jmp loc_101DE7C  +
push 54h  +
pop ecx  +
lea esi [esi+eax*2-2] +
mov [esi] cx +
sub edi eax +
push edi  +
inc esi  +
inc esi  +
push esi  +
push offset aHhMmSs  +
push [ebp+lpTime]  +
push 0  +
push ebx  +
call ds:GetTimeFormatW  +
xor ebx ebx +
cmp eax ebx +
jnz loc_101DE1F  +
mov ecx [ebp+lpDateStr] +
xor eax eax +
mov [ecx] ax +
jmp loc_101DE7C  +
cmp [ebp+arg_10] ebx +
jz loc_101DE7C  +
xor ecx ecx +
inc ecx  +
sub ecx eax +
lea esi [esi+eax*2-2] +
mov eax [ebp+arg_4] +
add edi ecx +
cmp eax ebx +
jz loc_101DE65  +
mov ecx [eax] +
mov eax [eax+4] +
push ebx  +
push 989680h  +
push eax  +
push ecx  +
call __aullrem  +
push ebx  +
push 64h  +
push edx  +
push eax  +
call __allmul  +
push edx  +
push eax  +
push offset a_09i64uz  +
push edi  +
push esi  +
call sub_101BCA7  +
add esp 14h +
jmp loc_101DE7C  +
mov eax [ebp+lpTime] +
movzx eax word ptr [eax+0Eh] +
push eax  +
push offset a_03uz  +
push edi  +
push esi  +
call sub_101BCA7  +
add esp 10h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 138h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
or [ebp+var_120] 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
cdq   +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+var_124] edx +
mov [ebp+var_128] eax +
mov eax dword_10566D8 +
mov esi [eax+348h] +
mov ecx [eax+350h] +
push esi  +
push 10000h  +
lea edx [ebp+var_128] +
push edx  +
mov edx ecx +
add eax 358h +
neg edx  +
push 1  +
sbb edx edx +
and edx eax +
push edx  +
push ecx  +
push edi  +
call TdhGetProperty  +
xor ecx ecx +
mov [ebp+var_118] eax +
cmp eax ecx +
jnz loc_101E074  +
movzx eax [ebp+arg_10] +
dec eax  +
jz loc_101E069  +
sub eax 7 +
jz loc_101E04A  +
sub eax 7 +
jz loc_101E02F  +
dec eax  +
dec eax  +
jz loc_101DFC3  +
dec eax  +
jnz loc_101E074  +
lea edi [ebp+Time] +
movs   +
movs   +
movs   +
movs   +
mov eax dword ptr [ebp+Time] +
shr eax 10h +
cmp ax 0Ch +
ja loc_101DF70  +
push 1  +
push 40h  +
lea eax [ebp+DateStr] +
push eax  +
push ecx  +
lea eax [ebp+Time] +
push eax  +
call sub_101DDBC  +
lea eax [ebp+DateStr] +
push eax  +
push offset aWs  +
jmp loc_101E05E  +
movzx eax word ptr [ebp-106h] +
push eax  +
movzx eax word ptr [ebp-108h] +
push eax  +
movzx eax word ptr [ebp-10Ah] +
push eax  +
movzx eax word ptr [ebp-10Ch] +
push eax  +
movzx eax word ptr [ebp-10Eh] +
push eax  +
movzx eax word ptr [ebp-110h] +
push eax  +
movzx eax word ptr [ebp-112h] +
push eax  +
movzx eax word ptr [ebp+Time] +
push eax  +
push offset aUUUUUUUU  +
push ebx  +
call sub_1024264  +
add esp 28h +
jmp loc_101E074  +
mov eax [esi] +
mov [ebp-10Ch] eax +
mov eax [esi+4] +
mov [ebp-108h] eax +
lea eax [ebp+SystemTime] +
push eax  +
lea eax [ebp-10Ch] +
push eax  +
call ds:FileTimeToSystemTime  +
test eax eax +
jz loc_101E013  +
cmp [ebp+SystemTime.wMonth] 0Ch +
ja loc_101E013  +
push 1  +
push 40h  +
lea eax [ebp+DateStr] +
push eax  +
lea eax [ebp-10Ch] +
push eax  +
lea eax [ebp+SystemTime] +
jmp loc_101DF59  +
push dword ptr [ebp-108h]  +
push dword ptr [ebp-10Ch]  +
push offset aUU  +
push ebx  +
call sub_1024264  +
add esp 10h +
jmp loc_101E074  +
push ebx  +
push esi  +
push 80h  +
lea eax [ebp+var_104] +
push eax  +
call sub_1034A70  +
push eax  +
call sub_1023CCF  +
jmp loc_101E074  +
mov esi [esi] +
push esi  +
cmp byte ptr [ebp+arg_8] cl +
jz loc_101E059  +
push offset aD  +
jmp loc_101E05E  +
push offset a8u  +
push ebx  +
call sub_1024264  +
add esp 0Ch +
jmp loc_101E074  +
push esi  +
push ecx  +
push [ebp+arg_8]  +
push ebx  +
call sub_101D200  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_118] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
push 1  +
push offset aGuidname  +
push 0  +
push ebx  +
push edi  +
call sub_101DE88  +
test eax eax +
jnz loc_101E218  +
push esi  +
push edi  +
mov esi offset asc_1001AF8 +
push esi  +
call sub_1023E04  +
push 1  +
push offset aFunctionname  +
push 0  +
push ebx  +
push edi  +
call sub_101DE88  +
test eax eax +
jnz loc_101E217  +
push edi  +
push esi  +
call sub_1023E04  +
push 1  +
push offset aFormattedstrin  +
push 0  +
push ebx  +
push edi  +
call sub_101DE88  +
test eax eax +
jnz loc_101E217  +
push edi  +
push esi  +
call sub_1023E04  +
push 1  +
push offset aComponentname  +
push 0  +
push ebx  +
push edi  +
call sub_101DE88  +
test eax eax +
jnz loc_101E217  +
push edi  +
push esi  +
call sub_1023E04  +
push 1  +
push offset aSubcomponentna  +
push 0  +
push ebx  +
push edi  +
call sub_101DE88  +
test eax eax +
jnz loc_101E217  +
push edi  +
push esi  +
call sub_1023E04  +
push 0Fh  +
push offset aTraceguid  +
push 0  +
push ebx  +
push edi  +
call sub_101DE88  +
test eax eax +
jnz loc_101E217  +
push edi  +
push esi  +
call sub_1023E04  +
push 1  +
push offset aGuidtypename  +
push 0  +
push ebx  +
push edi  +
call sub_101DE88  +
test eax eax +
jnz loc_101E217  +
push edi  +
push esi  +
call sub_1023E04  +
push 12h  +
push offset aSystemtime  +
push 0  +
push ebx  +
push edi  +
call sub_101DE88  +
test eax eax +
jnz loc_101E217  +
push edi  +
push esi  +
call sub_1023E04  +
push 8  +
push offset aSequencenum  +
push 0  +
push ebx  +
push edi  +
call sub_101DE88  +
test eax eax +
jnz loc_101E217  +
push edi  +
push esi  +
call sub_1023E04  +
push 1  +
push offset aFlagsname  +
push 0  +
push ebx  +
push edi  +
call sub_101DE88  +
test eax eax +
jnz loc_101E217  +
push edi  +
push esi  +
call sub_1023E04  +
push 1  +
push offset aLevelname  +
push 0  +
push ebx  +
push edi  +
call sub_101DE88  +
test eax eax +
jnz loc_101E217  +
push edi  +
push esi  +
call sub_1023E04  +
push 11h  +
push offset aRawsystemtime  +
push 0  +
push ebx  +
push edi  +
call sub_101DE88  +
test eax eax +
jnz loc_101E217  +
push edi  +
push esi  +
call sub_1023E04  +
push 0Fh  +
push offset aProviderguid  +
push 0  +
push ebx  +
push edi  +
call sub_101DE88  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+lpBuffer] +
push edi  +
push esi  +
push offset aDebugdata  +
call sub_1023CCF  +
push esi  +
push offset aSequencenumber  +
call sub_1023CCF  +
mov ebx [ebp+arg_4] +
push 8  +
push offset aSequencenum  +
xor edi edi +
inc edi  +
push edi  +
push ebx  +
push esi  +
call sub_101DE88  +
push esi  +
push offset aSequencenumb_0  +
mov [ebp+lpBuffer] eax +
call sub_1023CCF  +
mov eax [ebp+lpBuffer] +
test eax eax +
jnz loc_101E3D1  +
push esi  +
push offset aFlagsname_0  +
call sub_1023CCF  +
push edi  +
push offset aFlagsname  +
push edi  +
push ebx  +
push esi  +
call sub_101DE88  +
push esi  +
push offset aFlagsname_1  +
mov [ebp+lpBuffer] eax +
call sub_1023CCF  +
mov eax [ebp+lpBuffer] +
test eax eax +
jnz loc_101E3D1  +
push esi  +
push offset aLevelname_0  +
call sub_1023CCF  +
push edi  +
push offset aLevelname  +
push edi  +
push ebx  +
push esi  +
call sub_101DE88  +
push esi  +
push offset aLevelname_1  +
mov [ebp+lpBuffer] eax +
call sub_1023CCF  +
mov eax [ebp+lpBuffer] +
test eax eax +
jnz loc_101E3D1  +
push esi  +
push offset aComponent  +
call sub_1023CCF  +
push edi  +
push offset aComponentname  +
push edi  +
push ebx  +
push esi  +
call sub_101DE88  +
push esi  +
push offset aComponent_0  +
mov [ebp+lpBuffer] eax +
call sub_1023CCF  +
mov eax [ebp+lpBuffer] +
test eax eax +
jnz loc_101E3D1  +
push esi  +
push offset aSubcomponent  +
call sub_1023CCF  +
push edi  +
push offset aSubcomponentna  +
push edi  +
push ebx  +
push esi  +
call sub_101DE88  +
push esi  +
push offset aSubcomponent_0  +
mov [ebp+lpBuffer] eax +
call sub_1023CCF  +
mov eax [ebp+lpBuffer] +
test eax eax +
jnz loc_101E3D1  +
push esi  +
push offset aFileline  +
call sub_1023CCF  +
push edi  +
push offset aGuidtypename  +
push edi  +
push ebx  +
push esi  +
call sub_101DE88  +
push esi  +
push offset aFileline_0  +
mov [ebp+lpBuffer] eax +
call sub_1023CCF  +
mov eax [ebp+lpBuffer] +
test eax eax +
jnz loc_101E3D1  +
push esi  +
push offset aFunction  +
call sub_1023CCF  +
push edi  +
push offset aFunctionname  +
push edi  +
push ebx  +
push esi  +
call sub_101DE88  +
push esi  +
push offset aFunction_0  +
mov [ebp+lpBuffer] eax +
call sub_1023CCF  +
mov eax [ebp+lpBuffer] +
test eax eax +
jnz loc_101E3D1  +
push esi  +
push offset aMessage  +
call sub_1023CCF  +
push edi  +
push offset aFormattedstrin  +
push edi  +
push ebx  +
push esi  +
call sub_101DE88  +
push esi  +
push offset aMessage_0  +
mov edi eax +
call sub_1023CCF  +
test edi edi +
jz loc_101E3C4  +
mov eax edi +
jmp loc_101E3D1  +
push esi  +
push offset aDebugdata_0  +
call sub_1023CCF  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0F50h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_18] +
mov [ebp+NumberOfBytesWritten] eax +
mov eax [ebp+arg_1C] +
xor ecx ecx +
push ebx  +
mov ebx [ebp+arg_8] +
mov [ebp+var_F50] eax +
mov eax [ebp+arg_14] +
test byte ptr [eax] 1 +
push esi  +
mov esi [ebp+arg_C] +
mov [ebp+var_F28] edx +
mov [ebp+var_F30] ecx +
mov [ebp+lpMem] ecx +
mov [ebp+lpMultiByteStr] ecx +
mov [ebp+var_F44] ecx +
mov [ebp-0F34h] ecx +
mov [ebp+var_F19] cl +
jz loc_101E44E  +
push 32h  +
pop eax  +
jmp loc_101EFC0  +
cmp ebx ecx +
jnz loc_101E456  +
push 0Dh  +
jmp loc_101E448  +
test [ebp+arg_10] 40h +
mov ecx dword_10566D8 +
push edi  +
mov edi [ecx+680h] +
jz loc_101E475  +
mov [ebp+var_F48] 40h +
jmp loc_101E48F  +
test [ebp+arg_10] 20h +
jnz loc_101E485  +
mov [ebp+var_F48] edi +
test edi edi +
ja loc_101E48F  +
mov [ebp+var_F48] 20h +
movzx ecx word ptr [eax+8] +
movzx eax word ptr [eax+0Ah] +
movzx edi cx +
mov [ebp+var_F2C] eax +
movzx eax di +
mov [ebp+var_F4C] edi +
mov edi 12Ch +
cmp eax edi +
jg loc_101E90A  +
jz loc_101EC7F  +
dec eax  +
cmp eax 14h +
ja loc_101EF47  +
jmp ds:off_101EFD0[eax*4]  +
mov bl [ebx] +
test edx edx +
jz loc_101E4F7  +
push 0  +
push 0  +
movsx eax bl +
push eax  +
push edx  +
push 1  +
push [ebp+NumberOfBytesWritten]  +
call sub_101D49A  +
mov [ebp+var_F19] al +
test al al +
jnz loc_101EFA7  +
movsx eax bl +
push eax  +
push offset aD  +
push [ebp+NumberOfBytesWritten]  +
call sub_1024264  +
add esp 0Ch +
jmp loc_101EFA7  +
mov bl [ebx] +
test edx edx +
jz loc_101E53D  +
push 0  +
push 0  +
movzx eax bl +
push eax  +
push edx  +
push 1  +
push [ebp+NumberOfBytesWritten]  +
call sub_101D49A  +
mov [ebp+var_F19] al +
test al al +
jnz loc_101EFA7  +
push 10h  +
pop eax  +
cmp ax word ptr [ebp+var_F2C] +
movzx eax bl +
push eax  +
jnz loc_101E5DE  +
cmp [ebp+arg_4] 0 +
jz loc_101E55E  +
push offset a0xX  +
jmp loc_101E500  +
push offset asc_1001DC8  +
jmp loc_101E500  +
movzx esi word ptr [ebx] +
test edx edx +
jz loc_101E590  +
push 0  +
push 0  +
movsx eax si +
push eax  +
push edx  +
push 1  +
push [ebp+NumberOfBytesWritten]  +
call sub_101D49A  +
mov [ebp+var_F19] al +
test al al +
jnz loc_101EFA7  +
movsx eax si +
jmp loc_101E4FA  +
movzx esi word ptr [ebx] +
test edx edx +
jz loc_101E5C3  +
push 0  +
push 0  +
movzx eax si +
push eax  +
push edx  +
push 1  +
push [ebp+NumberOfBytesWritten]  +
call sub_101D49A  +
mov [ebp+var_F19] al +
test al al +
jnz loc_101EFA7  +
push 16h  +
pop eax  +
cmp ax word ptr [ebp+var_F2C] +
jnz loc_101E5E8  +
movzx eax si +
movzx ecx al +
shl ecx 8 +
shr eax 8 +
add ecx eax +
push ecx  +
push offset aU  +
jmp loc_101E500  +
push 11h  +
pop eax  +
cmp ax word ptr [ebp+var_F2C] +
movzx eax si +
jmp loc_101E54A  +
mov ebx [ebx] +
test edx edx +
jz loc_101E621  +
push 0  +
push 0  +
push ebx  +
push edx  +
push 1  +
push [ebp+NumberOfBytesWritten]  +
call sub_101D49A  +
mov [ebp+var_F19] al +
test al al +
jnz loc_101EFA7  +
push ebx  +
jmp loc_101E4FB  +
push 14h  +
pop eax  +
push 12h  +
pop esi  +
cmp ax word ptr [ebp+var_F4C] +
jnz loc_101E63C  +
mov [ebp+var_F2C] esi +
mov ebx [ebx] +
test edx edx +
jz loc_101E663  +
push 0  +
push 0  +
push ebx  +
push edx  +
push 1  +
push [ebp+NumberOfBytesWritten]  +
call sub_101D49A  +
mov [ebp+var_F19] al +
test al al +
jnz loc_101EFA7  +
push 0Dh  +
pop eax  +
cmp ax word ptr [ebp+var_F4C] +
jnz loc_101E68E  +
mov eax offset aFalse +
test ebx ebx +
jz loc_101E67D  +
mov eax offset aTrue +
push [ebp+NumberOfBytesWritten]  +
push eax  +
call sub_1023CCF  +
jmp loc_101EFA7  +
mov eax [ebp+var_F2C] +
push 17h  +
pop ecx  +
cmp cx ax +
jnz loc_101E6D3  +
mov eax ebx +
shr eax 18h +
push eax  +
mov ecx ebx +
shr ecx 10h +
mov eax 0FFh +
and ecx eax +
push ecx  +
mov ecx ebx +
shr ecx 8 +
and ecx eax +
push ecx  +
movzx eax bl +
push eax  +
push offset aD_D_D_D  +
push [ebp+NumberOfBytesWritten]  +
call sub_1024264  +
add esp 18h +
jmp loc_101EFA7  +
push 1Bh  +
pop ecx  +
cmp cx ax +
jnz loc_101E6ED  +
imul ebx dword_1079A80 +
push ebx  +
push offset aLu  +
jmp loc_101E500  +
cmp si ax +
jz loc_101EE2B  +
push 1Dh  +
pop ecx  +
cmp cx ax +
jz loc_101EE2B  +
push ebx  +
jmp loc_101E5DE  +
push dword ptr [ebx+4]  +
mov eax [ebx] +
push eax  +
push offset aI64d  +
push [ebp+NumberOfBytesWritten]  +
call sub_1024264  +
add esp 10h +
jmp loc_101EFA7  +
and [ebp+dwAddressStringLength] 0 +
and dword ptr [ebp-0F34h] 0 +
push 15h  +
pop eax  +
push 13h  +
pop ecx  +
cmp ax word ptr [ebp+var_F4C] +
jnz loc_101E749  +
mov [ebp+var_F2C] ecx +
mov eax [ebx] +
mov ebx [ebx+4] +
push 1Bh  +
pop edx  +
push ebx  +
push eax  +
cmp dx word ptr [ebp+var_F2C] +
jnz loc_101E77B  +
lea eax [ebp+dwAddressStringLength] +
push eax  +
call sub_103B0CD  +
push dword ptr [ebp-0F34h]  +
push [ebp+dwAddressStringLength]  +
push offset aI64u  +
jmp loc_101E713  +
cmp cx word ptr [ebp+var_F2C] +
jnz loc_101E774  +
cmp [ebp+arg_4] 0 +
jz loc_101E791  +
push offset a0xI64x  +
jmp loc_101E713  +
push offset aI64x  +
jmp loc_101E713  +
mov eax [ebx] +
mov [ebp-0F34h] eax +
fld  dword ptr [ebp-0F34h] +
push ecx  +
push ecx  +
fstp  [esp+0F64h+var_F64] +
push offset aF  +
jmp loc_101E713  +
mov eax [ebx] +
mov [ebp+dwAddressStringLength] eax +
mov eax [ebx+4] +
mov [ebp-0F34h] eax +
fld  qword ptr [ebp+dwAddressStringLength] +
jmp loc_101E7A9  +
mov esi ebx +
lea edi [ebp+Time] +
movs   +
movs   +
lea eax [ebp+Time] +
push eax  +
movs   +
push 80h  +
lea eax [ebp+var_104] +
push eax  +
movs   +
call sub_1034A70  +
push eax  +
push offset aWs_0  +
jmp loc_101E500  +
mov eax [ebx] +
mov [ebp+dwAddressStringLength] eax +
mov eax [ebx+4] +
mov [ebp-0F34h] eax +
lea eax [ebp+Time] +
push eax  +
lea eax [ebp+dwAddressStringLength] +
push eax  +
call ds:FileTimeToSystemTime  +
test eax eax +
jz loc_101E859  +
cmp [ebp+Time.wMonth] 0Ch +
ja loc_101E859  +
push 1  +
push 40h  +
lea eax [ebp+DateStr] +
push eax  +
lea eax [ebp+dwAddressStringLength] +
push eax  +
lea eax [ebp+Time] +
push eax  +
call sub_101DDBC  +
lea eax [ebp+DateStr] +
jmp loc_101E7F5  +
push dword ptr [ebp-0F34h]  +
push [ebp+dwAddressStringLength]  +
push offset aUU  +
jmp loc_101E713  +
mov esi ebx +
lea edi [ebp+var_F40] +
movs   +
movs   +
movs   +
movs   +
mov eax [ebp+var_F40] +
shr eax 10h +
cmp ax 0Ch +
ja loc_101E89F  +
push 1  +
push 40h  +
lea eax [ebp+DateStr] +
push eax  +
push 0  +
lea eax [ebp+var_F40] +
jmp loc_101E84B  +
movzx eax word ptr [ebp-0F32h] +
push eax  +
movzx eax word ptr [ebp-0F34h] +
push eax  +
movzx eax word ptr [ebp+dwAddressStringLength+2] +
push eax  +
movzx eax word ptr [ebp+dwAddressStringLength] +
push eax  +
movzx eax [ebp+var_F3A] +
push eax  +
movzx eax [ebp+var_F3C] +
push eax  +
movzx eax word ptr [ebp+var_F40+2] +
push eax  +
movzx eax word ptr [ebp+var_F40] +
push eax  +
push offset aUUUUUUUU  +
push [ebp+NumberOfBytesWritten]  +
call sub_1024264  +
add esp 28h +
jmp loc_101EFA7  +
push ebx  +
push 1  +
push [ebp+NumberOfBytesWritten]  +
call sub_101D4FC  +
jmp loc_101EFA7  +
mov edx 12Dh +
sub eax edx +
cmp eax 9 +
ja loc_101EF47  +
jmp ds:off_101F024[eax*4]  +
push 0  +
lea eax [esi+1] +
push eax  +
lea eax [ebp+Mem] +
push eax  +
lea eax [ebp-0F34h] +
push eax  +
lea eax [ebp+lpMultiByteStr] +
push eax  +
call sub_101D538  +
mov [ebp+var_F30] eax +
test eax eax +
jnz loc_101EF7C  +
cmp [ebp+lpMultiByteStr] eax +
jz loc_101EFA7  +
mov edi [ebp+lpMultiByteStr] +
push esi  +
push ebx  +
push edi  +
call memcpy  +
add esp 0Ch +
cmp [ebp+var_F28] 0 +
mov byte ptr [esi+edi] 0 +
jz loc_101EA02  +
push 1  +
lea esi [esi+esi+2] +
push esi  +
lea eax [ebp+var_F04] +
push eax  +
lea eax [ebp+var_F44] +
push eax  +
lea eax [ebp+lpMem] +
push eax  +
call sub_101D538  +
mov [ebp+var_F30] eax +
test eax eax +
jnz loc_101EF51  +
xor edi edi +
cmp [ebp+lpMem] edi +
jz loc_101EF7C  +
push esi  +
push [ebp+lpMem]  +
push 0FFFFFFFFh  +
push [ebp+lpMultiByteStr]  +
push edi  +
push edi  +
call ds:MultiByteToWideChar  +
test eax eax +
jz loc_101EDE0  +
push esi  +
push [ebp+lpMem]  +
push edi  +
push [ebp+var_F28]  +
push 1  +
push [ebp+NumberOfBytesWritten]  +
call sub_101D49A  +
mov [ebp+var_F19] al +
test al al +
jnz loc_101EF51  +
push [ebp+lpMultiByteStr]  +
push 0  +
push 1  +
push [ebp+NumberOfBytesWritten]  +
call sub_101D093  +
jmp loc_101EF51  +
push 1  +
lea eax [esi+2] +
push eax  +
lea eax [ebp+var_F04] +
push eax  +
lea eax [ebp+var_F44] +
push eax  +
lea eax [ebp+lpMem] +
push eax  +
call sub_101D538  +
mov [ebp+var_F30] eax +
test eax eax +
jnz loc_101EF51  +
cmp [ebp+lpMem] eax +
jz loc_101EFA7  +
mov edi [ebp+lpMem] +
push esi  +
push ebx  +
push edi  +
call memcpy  +
xor eax eax +
shr esi 1 +
add esp 0Ch +
mov [edi+esi*2] ax +
cmp [ebp+var_F28] eax +
jz loc_101EA9D  +
push 2  +
push edi  +
push 0  +
push [ebp+var_F28]  +
push 1  +
push [ebp+NumberOfBytesWritten]  +
call sub_101D49A  +
mov [ebp+var_F19] al +
test al al +
jnz loc_101EF51  +
push [ebp+lpMem]  +
push 0  +
push 1  +
push [ebp+NumberOfBytesWritten]  +
call sub_101D200  +
jmp loc_101EF51  +
push 1  +
lea eax [esi+2] +
push eax  +
lea eax [ebp+var_F04] +
push eax  +
lea eax [ebp+var_F44] +
push eax  +
lea eax [ebp+lpMem] +
push eax  +
call sub_101D538  +
mov [ebp+var_F30] eax +
test eax eax +
jnz loc_101EF51  +
cmp [ebp+lpMem] eax +
jz loc_101EFA7  +
push esi  +
push ebx  +
push [ebp+lpMem]  +
call memcpy  +
mov ecx [ebp+lpMem] +
shr esi 1 +
xor eax eax +
add esp 0Ch +
mov [ecx+esi*2] ax +
cmp di word ptr [ebp+var_F2C] +
jnz loc_101EB1F  +
mov eax ecx +
call sub_101D307  +
cmp [ebp+var_F28] 0 +
jz loc_101EB53  +
push 2  +
push [ebp+lpMem]  +
push 0  +
push [ebp+var_F28]  +
push 1  +
push [ebp+NumberOfBytesWritten]  +
call sub_101D49A  +
mov [ebp+var_F19] al +
test al al +
jnz loc_101EF51  +
push [ebp+lpMem]  +
push 1Ch  +
pop eax  +
cmp ax word ptr [ebp+var_F2C] +
setz al  +
movzx eax al +
push eax  +
jmp loc_101EAA5  +
push 0  +
lea eax [esi+1] +
push eax  +
lea eax [ebp+Mem] +
push eax  +
lea eax [ebp-0F34h] +
push eax  +
lea eax [ebp+lpMultiByteStr] +
push eax  +
call sub_101D538  +
mov [ebp+var_F30] eax +
test eax eax +
jnz loc_101EF7C  +
cmp [ebp+lpMultiByteStr] eax +
jz loc_101EFA7  +
push esi  +
push ebx  +
push [ebp+lpMultiByteStr]  +
call memcpy  +
mov eax [ebp+lpMultiByteStr] +
add esp 0Ch +
mov byte ptr [esi+eax] 0 +
cmp di word ptr [ebp+var_F2C] +
jnz loc_101EBD1  +
call sub_101D2BD  +
cmp [ebp+var_F28] 0 +
jz loc_101EC63  +
push 1  +
lea esi [esi+esi+2] +
push esi  +
lea eax [ebp+var_F04] +
push eax  +
lea eax [ebp+var_F44] +
push eax  +
lea eax [ebp+lpMem] +
push eax  +
call sub_101D538  +
mov [ebp+var_F30] eax +
test eax eax +
jnz loc_101EF51  +
cmp [ebp+lpMem] eax +
jz loc_101EF7C  +
push esi  +
push [ebp+lpMem]  +
xor edi edi +
push 0FFFFFFFFh  +
push [ebp+lpMultiByteStr]  +
push edi  +
push edi  +
call ds:MultiByteToWideChar  +
test eax eax +
jz loc_101EDE0  +
push esi  +
push [ebp+lpMem]  +
push edi  +
push [ebp+var_F28]  +
push 1  +
push [ebp+NumberOfBytesWritten]  +
call sub_101D49A  +
mov [ebp+var_F19] al +
test al al +
jnz loc_101EF51  +
push [ebp+lpMultiByteStr]  +
push 1Ch  +
pop eax  +
cmp ax word ptr [ebp+var_F2C] +
setz al  +
movzx eax al +
push eax  +
jmp loc_101EA0A  +
cmp di cx +
jnz loc_101EC89  +
movzx eax word ptr [ebx] +
jmp loc_101ECA1  +
movzx cx byte ptr [ebx] +
movzx ax byte ptr [ebx+1] +
mov edx 100h +
imul cx dx +
add ax cx +
movzx eax ax +
movzx esi ax +
push 1  +
lea edi [esi+2] +
push edi  +
lea eax [ebp+var_F04] +
push eax  +
lea eax [ebp+var_F44] +
push eax  +
lea eax [ebp+lpMem] +
push eax  +
call sub_101D538  +
mov [ebp+var_F30] eax +
test eax eax +
jnz loc_101EF51  +
cmp [ebp+lpMem] eax +
jz loc_101EFA7  +
push esi  +
add ebx 2 +
push ebx  +
mov ebx [ebp+lpMem] +
push ebx  +
call memcpy  +
xor eax eax +
shr esi 1 +
add esp 0Ch +
mov [ebx+esi*2] ax +
cmp [ebp+var_F28] eax +
jz loc_101EA9D  +
push edi  +
push ebx  +
jmp loc_101EA7A  +
cmp dx cx +
jnz loc_101ED17  +
movzx eax word ptr [ebx] +
jmp loc_101ED2F  +
movzx cx byte ptr [ebx] +
movzx ax byte ptr [ebx+1] +
mov edx 100h +
imul cx dx +
add ax cx +
movzx eax ax +
movzx esi ax +
push 0  +
lea eax [esi+1] +
push eax  +
lea eax [ebp+Mem] +
push eax  +
lea eax [ebp-0F34h] +
push eax  +
lea eax [ebp+lpMultiByteStr] +
push eax  +
call sub_101D538  +
mov [ebp+var_F30] eax +
test eax eax +
jnz loc_101EF7C  +
mov edi [ebp+lpMultiByteStr] +
test edi edi +
jz loc_101EFA7  +
push esi  +
add ebx 2 +
push ebx  +
push edi  +
call memcpy  +
add esp 0Ch +
cmp [ebp+var_F28] 0 +
mov byte ptr [esi+edi] 0 +
jz loc_101EE1A  +
push 1  +
lea esi [esi+esi+2] +
push esi  +
lea eax [ebp+var_F04] +
push eax  +
lea eax [ebp+var_F44] +
push eax  +
lea eax [ebp+lpMem] +
push eax  +
call sub_101D538  +
mov [ebp+var_F30] eax +
test eax eax +
jnz loc_101EF51  +
cmp [ebp+lpMem] eax +
jz loc_101EF7C  +
push esi  +
push [ebp+lpMem]  +
xor ebx ebx +
push 0FFFFFFFFh  +
push edi  +
push ebx  +
push ebx  +
call ds:MultiByteToWideChar  +
test eax eax +
jnz loc_101EDF1  +
call ds:GetLastError  +
mov [ebp+var_F30] eax +
jmp loc_101EF51  +
push esi  +
push [ebp+lpMem]  +
push ebx  +
push [ebp+var_F28]  +
push 1  +
push [ebp+NumberOfBytesWritten]  +
call sub_101D49A  +
mov [ebp+var_F19] al +
test al al +
jnz loc_101EF51  +
push edi  +
jmp loc_101EA08  +
cmp [ebp+var_F48] 20h +
jnz loc_101EE31  +
mov ebx [ebx] +
push ebx  +
jmp loc_101E551  +
mov eax [ebx] +
mov ebx [ebx+4] +
push ebx  +
push eax  +
jmp loc_101E784  +
mov eax 100h +
lea ecx [eax+35h] +
mov [ebp-0F34h] eax +
cmp cx word ptr [ebp+var_F4C] +
jnz loc_101EE58  +
mov esi [ebx] +
jmp loc_101EE64  +
push 18h  +
pop ecx  +
cmp cx word ptr [ebp+var_F2C] +
jz loc_101EE79  +
push 18h  +
pop ecx  +
cmp cx word ptr [ebp+var_F2C] +
jnz loc_101EEC2  +
cmp esi 10h +
jnz loc_101EF0A  +
mov esi ebx +
lea edi [ebp+Time] +
movs   +
push eax  +
movs   +
lea eax [ebp+szAddressString] +
push eax  +
lea eax [ebp+Time] +
push eax  +
movs   +
push 0  +
push 17h  +
movs   +
call sub_10342F1  +
test eax eax +
jz loc_101EEAC  +
lea eax [ebp+szAddressString] +
jmp loc_101E7F5  +
push dword ptr [ebp+arg_4]  +
push ebx  +
push 10h  +
push [ebp+NumberOfBytesWritten]  +
call sub_101D5DC  +
jmp loc_101EFA7  +
push 19h  +
pop eax  +
cmp ax word ptr [ebp+var_F2C] +
jnz loc_101EF0A  +
cmp esi 80h +
ja loc_101EF0A  +
push esi  +
lea eax [ebp+DateStr] +
push ebx  +
push eax  +
call memcpy  +
add esp 0Ch +
lea eax [ebp-0F34h] +
push eax  +
lea eax [ebp+szAddressString] +
push eax  +
push 0  +
push esi  +
lea eax [ebp+DateStr] +
push eax  +
call ds:WSAAddressToStringW  +
cmp eax 0FFFFFFFFh +
jnz loc_101EEA1  +
push dword ptr [ebp+arg_4]  +
push ebx  +
push esi  +
jmp loc_101EEB2  +
cmp dword ptr [ebx] 0 +
jnz loc_101EF26  +
push [ebp+NumberOfBytesWritten]  +
push offset a0  +
jmp loc_101E684  +
cmp [ebp+var_F48] 40h +
jnz loc_101EF34  +
add ebx 10h +
jmp loc_101EF37  +
add ebx 8 +
push ebx  +
push 1  +
push [ebp+NumberOfBytesWritten]  +
call sub_101DCF0  +
jmp loc_101EF51  +
mov [ebp+var_F30] 32h +
cmp [ebp+lpMem] 0 +
jz loc_101EF7C  +
lea eax [ebp+var_F04] +
cmp [ebp+lpMem] eax +
jz loc_101EF7C  +
push [ebp+lpMem]  +
push 0  +
push hHeap  +
call ds:HeapFree  +
cmp [ebp+lpMultiByteStr] 0 +
jz loc_101EFA7  +
lea eax [ebp+Mem] +
cmp [ebp+lpMultiByteStr] eax +
jz loc_101EFA7  +
push [ebp+lpMultiByteStr]  +
push 0  +
push hHeap  +
call ds:HeapFree  +
mov eax [ebp+var_F50] +
pop edi  +
test eax eax +
jz loc_101EFBA  +
mov cl [ebp+var_F19] +
mov [eax] cl +
mov eax [ebp+var_F30] +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101E3E0  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
and dword ptr [esi+8] 0 +
push edi  +
mov dword ptr [esi+0Ch] 1 +
call sub_101D879  +
mov edi eax +
call ds:GetLastError  +
test edi edi +
jz loc_101F0DF  +
push [ebp+arg_18]  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push 0  +
push edi  +
call sub_101E3E0  +
mov [ebp+arg_0] eax +
push edi  +
test eax eax +
jz loc_101F0CD  +
call sub_1023FB3  +
mov eax [ebp+arg_0] +
jmp loc_101F0DF  +
push 1  +
push esi  +
call sub_101DA72  +
push edi  +
mov esi eax +
call sub_1023FB3  +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_101F105  +
cmp [esi] ax +
jz loc_101F101  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_101F0F7  +
test edx edx +
jnz loc_101F10A  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_101F11B  +
test eax eax +
jl loc_101F118  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov eax dword_1079AAC +
mov ecx [ebp+var_4] +
lea ebx [ecx+eax] +
mov esi [ebx] +
jmp loc_101F16A  +
mov eax esi +
mov edi [eax+2Ch] +
mov esi [esi] +
test edi edi +
jz loc_101F164  +
mov ecx [eax] +
mov edx [eax+4] +
mov [edx] ecx +
mov [ecx+4] edx +
lea ecx [edi+8] +
mov edx [ecx+4] +
mov [eax] ecx +
mov [eax+4] edx +
mov [edx] eax +
mov [ecx+4] eax +
jmp loc_101F16A  +
push eax  +
call sub_1023571  +
cmp esi ebx +
jnz loc_101F13D  +
add [ebp+var_4] 8 +
cmp [ebp+var_4] 0E8h +
jl loc_101F12E  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
pop eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 194h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
lea eax [ebp+WSAData] +
push eax  +
push 202h  +
call ds:WSAStartup  +
mov esi eax +
test esi esi +
jz loc_101F1CA  +
push esi  +
push offset aErrorWsastartu  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
mov ecx [ebp+var_4] +
xor eax eax +
test esi esi +
setz al  +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn   +
***
cmp hHeap 0 +
jz locret_101F20A  +
call ds:GetProcessHeap  +
mov ecx hHeap +
cmp ecx eax +
jz locret_101F20A  +
push ecx  +
call ds:HeapDestroy  +
and hHeap 0 +
retn   +
***
mov edi edi +
push esi  +
xor esi esi +
cmp hHeap esi +
jnz loc_101F253  +
push esi  +
push esi  +
push esi  +
call ds:HeapCreate  +
mov hHeap eax +
test eax eax +
jnz loc_101F248  +
call ds:GetProcessHeap  +
mov hHeap eax +
test eax eax +
jnz loc_101F248  +
call ds:GetLastError  +
mov esi eax +
jmp loc_101F24A  +
xor esi esi +
test esi esi +
jz loc_101F253  +
call sub_101F1E3  +
mov eax esi +
pop esi  +
retn   +
***
xor eax eax +
cmp byte_10799E0 al +
setz al  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1ACh +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
push 19Ch  +
xor ebx ebx +
lea eax [ebp+var_1A0] +
push ebx  +
push eax  +
call memset  +
or [ebp+var_190] 10000000h +
add esp 0Ch +
lea eax [ebp+var_1A4] +
push eax  +
mov byte_10799E0 bl +
mov dword_1079A18 ebx +
mov [ebp+var_1A4] esi +
mov [ebp+var_14] offset loc_102681A +
mov [ebp+var_24] offset loc_101F25C +
call ds:OpenTraceW  +
mov [ebp+var_1AC] eax +
mov [ebp+var_1A8] edx +
cmp eax 0FFFFFFFFh +
jnz loc_101F2F0  +
cmp edx ebx +
jz loc_101F313  +
push ebx  +
push ebx  +
push 1  +
lea eax [ebp+var_1AC] +
push eax  +
call ds:ProcessTrace  +
push [ebp+var_1A8]  +
push [ebp+var_1AC]  +
call ds:CloseTrace  +
mov eax dword_1079A18 +
mov ecx [ebp+var_4] +
mov [edi] eax +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call PdhGetLogFileTypeW  +
test eax eax +
jnz loc_101F360  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_101F360  +
cmp eax 3 +
jbe loc_101F36C  +
cmp eax 5 +
jbe loc_101F360  +
cmp eax 8 +
jnz loc_101F36C  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_101F26F  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_4] +
mov [eax] ecx +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+8] 0 +
push edi  +
jbe loc_101F3E6  +
mov edi [ebp+arg_10] +
mov ebx [ebp+arg_C] +
mov ecx [ebp+var_4] +
lea eax [ebp+arg_0] +
push eax  +
mov eax [esi+14h] +
push dword ptr [eax+ecx*4]  +
call sub_101F330  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_101F40E  +
jbe loc_101F3DB  +
cmp eax 3 +
jbe loc_101F3C3  +
cmp eax 5 +
jbe loc_101F3EF  +
cmp eax 8 +
ja loc_101F3DB  +
mov eax [ebx] +
cmp eax 40h +
jnb loc_101F409  +
mov ecx [esi+14h] +
mov edx [ebp+var_4] +
mov ecx [ecx+edx*4] +
mov edx [ebp+arg_4] +
mov [edx+eax*4] ecx +
inc dword ptr [ebx]  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [esi+8] +
jb loc_101F399  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
mov eax [edi] +
cmp eax 40h +
jnb loc_101F409  +
mov ecx [esi+14h] +
mov edx [ebp+var_4] +
mov ecx [ecx+edx*4] +
mov edx [ebp+arg_8] +
mov [edx+eax*4] ecx +
inc dword ptr [edi]  +
jmp loc_101F3DB  +
push 4  +
pop eax  +
jmp loc_101F3E8  +
mov eax 570h +
jmp loc_101F3E8  +
***
call __SEH_prolog4  +
mov ecx dword_10566D8 +
mov edx [ecx+684h] +
xor esi esi +
cmp [ecx+3B4h] esi +
jz loc_101F4CF  +
cmp edx esi +
jz loc_101F456  +
cmp [edx+10h] esi +
jz loc_101F4CF  +
cmp edx esi +
jz loc_101F456  +
mov eax [edx+10h] +
jmp loc_101F458  +
xor eax eax +
mov edi dword_10566E4 +
inc edi  +
mov [ebp+var_1C] edi +
fild  [ebp+var_1C] +
test edi edi +
jge loc_101F46F  +
fadd  ds:dbl_10018C0 +
mov [ebp+var_1C] eax +
fild  [ebp+var_1C] +
test eax eax +
jge loc_101F47F  +
fadd  ds:dbl_10018C0 +
faddp st(1) st +
fldz   +
fcom  st(1) +
fnstsw  ax +
test ah 5 +
jp loc_101F49F  +
cmp edx esi +
jz loc_101F495  +
fstp  st +
fld  qword ptr [edx+8] +
fadd  qword ptr [ecx+5C8h] +
fdivrp st(1) st +
jmp loc_101F4A1  +
fstp  st(1) +
wait   +
mov [ebp+ms_exc.disabled] esi +
push ecx  +
push ecx  +
fstp  [esp+24h+var_24] +
push 1  +
call dword ptr [ecx+3B4h]  +
wait   +
jmp loc_101F4C8  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov eax dword_10566D8 +
and dword ptr [eax+3B4h] 0 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
xor esi esi +
push esi  +
push 80h  +
push 3  +
push esi  +
push 3  +
push 80000000h  +
push [ebp+NumberOfBytesRead]  +
mov [ebp+Buffer] esi +
call ds:CreateFileW  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jnz loc_101F50F  +
call ds:GetLastError  +
jmp loc_101F553  +
push edi  +
push esi  +
push ebx  +
call ds:GetFileSize  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_101F54B  +
cmp edi esi +
jbe loc_101F54B  +
push esi  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 4  +
lea eax [ebp+Buffer] +
push eax  +
push ebx  +
call ds:ReadFile  +
test eax eax +
jz loc_101F54B  +
cmp [ebp+Buffer] esi +
jbe loc_101F54B  +
xor edx edx +
mov eax edi +
div  [ebp+Buffer] +
add dword_10566E4 eax +
push ebx  +
call ds:CloseHandle  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_101F574  +
cmp ecx 7FFFFFFFh +
jbe loc_101F579  +
mov eax 80070057h +
test eax eax +
jl loc_101F5C4  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_101F5B4  +
mov edx [ebp+arg_8] +
push edi  +
mov edi 7FFFFFFEh +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_101F5AF  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_101F5AF  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_101F597  +
pop edi  +
test esi esi +
jnz loc_101F5BB  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
test eax eax +
jz loc_101F5EF  +
mov edx [ebp+arg_4] +
cmp edx 7FFFFFFFh +
ja loc_101F5EF  +
call sub_101F0EA  +
jmp loc_101F5F4  +
mov eax 80070057h +
test eax eax +
jge loc_101F5FF  +
test edi edi +
jz loc_101F5FF  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
inc dword_10566E0  +
fild  dword_10566E0 +
mov eax dword_10566E0 +
test eax eax +
jge loc_101F62A  +
fadd  ds:dbl_10018C0 +
mov eax dword_10566D8 +
fstp  qword ptr [eax+5C8h] +
mov eax dword_10566D8 +
cmp dword ptr [eax+3B4h] 0 +
jz loc_101F65F  +
cmp dword_10566E4 0 +
jbe loc_101F65F  +
test byte ptr dword_10566E0 0Fh +
jnz loc_101F65F  +
call sub_101F41A  +
mov eax dword_10566D8 +
lea ecx [eax+398h] +
cmp dword ptr [ecx] 0 +
jz loc_101F677  +
push dword ptr [ecx]  +
call ds:SetEvent  +
mov eax dword_10566D8 +
test byte ptr [eax+3B0h] 10h +
jz loc_101F692  +
mov eax [eax] +
mov eax [eax+44h] +
imul eax eax +
push eax  +
call ds:Sleep  +
xor eax eax +
inc eax  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 808h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax dword_10566D8 +
and [ebp+var_808] 0 +
push edi  +
mov edi [ebp+arg_0] +
test eax eax +
jnz loc_101F6CF  +
push 6  +
pop eax  +
jmp loc_101F955  +
mov ecx [eax+8] +
add ecx [eax+4] +
push ebx  +
push esi  +
jz loc_101F716  +
mov esi 3C0h +
mov ebx ecx +
mov ecx [esi+eax] +
mov edx [esi+eax+4] +
cmp ecx 0FFFFFFFFh +
jnz loc_101F6F0  +
test edx edx +
jz loc_101F710  +
push edx  +
push ecx  +
call ds:CloseTrace  +
mov eax dword_10566D8 +
or dword ptr [esi+eax] 0FFFFFFFFh +
mov eax dword_10566D8 +
and dword ptr [esi+eax+4] 0 +
mov eax dword_10566D8 +
add esi 8 +
dec ebx  +
jnz loc_101F6E0  +
xor esi esi +
cmp [edi+10h] esi +
jbe loc_101F733  +
mov eax [edi+1Ch] +
push dword ptr [eax+esi*4]  +
call TdhUnloadManifest  +
inc esi  +
cmp esi [edi+10h] +
jb loc_101F71D  +
mov eax dword_10566D8 +
mov esi 400h +
test [eax+3B0h] esi +
jz loc_101F74A  +
call sub_10396E4  +
mov eax dword_10566D8 +
test byte ptr [eax+3B0h] 8 +
mov edi ds:DeleteFileW +
jz loc_101F81F  +
lea ecx [eax+314h] +
cmp dword ptr [ecx] 0 +
jz loc_101F81F  +
push dword ptr [ecx]  +
call ds:lstrlenW  +
test eax eax +
jz loc_101F81A  +
mov eax dword_10566D8 +
mov ebx 40000h +
test [eax+3B0h] ebx +
jz loc_101F7A6  +
cmp dword ptr [eax+320h] 0 +
jz loc_101F7A6  +
push esi  +
lea eax [ebp+FileName] +
push eax  +
call sub_1022D0C  +
jmp loc_101F7BE  +
push dword ptr [eax+314h]  +
lea eax [ebp+FileName] +
push esi  +
push eax  +
call sub_101F55E  +
and eax 0FFFFh +
mov [ebp+var_808] eax +
test eax eax +
jnz loc_101F81A  +
mov eax dword_10566D8 +
push dword ptr [eax+3B0h]  +
lea eax [ebp+FileName] +
push eax  +
call sub_103AD72  +
mov eax dword_10566D8 +
test [eax+3B0h] ebx +
jz loc_101F81F  +
lea ecx [eax+320h] +
cmp dword ptr [ecx] 0 +
jz loc_101F81F  +
push dword ptr [eax+314h]  +
lea eax [ebp+FileName] +
push dword ptr [ecx]  +
push eax  +
call sub_103C782  +
mov [ebp+var_808] eax +
lea eax [ebp+FileName] +
push eax  +
call edi  +
mov eax dword_10566D8 +
mov ebx ds:HeapFree +
lea ecx [eax+348h] +
cmp dword ptr [ecx] 0 +
jz loc_101F841  +
push dword ptr [ecx]  +
push 0  +
push hHeap  +
call ebx  +
mov eax dword_10566D8 +
mov ecx lpMem +
test ecx ecx +
jz loc_101F85B  +
push ecx  +
push 0  +
push hHeap  +
call ebx  +
mov eax dword_10566D8 +
mov ecx lpFileName +
mov esi ds:fclose +
test ecx ecx +
jz loc_101F883  +
push ecx  +
call esi  +
and lpFileName 0 +
mov [esp+824h+var_824] offset word_10566E8 +
call edi  +
mov eax dword_10566D8 +
mov ecx dword_1079A74 +
test ecx ecx +
jz loc_101F8A5  +
push ecx  +
call esi  +
and dword_1079A74 0 +
mov [esp+824h+var_824] offset word_1056EE8 +
call edi  +
mov eax dword_10566D8 +
mov edx [eax+3B0h] +
test dl dl +
jns loc_101F8F6  +
lea ecx [eax+39Ch] +
cmp dword ptr [ecx] 0 +
jz loc_101F8E5  +
test edx 9000000h +
jz loc_101F8D5  +
push offset aEvents  +
push dword ptr [ecx]  +
call sub_10243C0  +
mov eax dword_10566D8 +
pop ecx  +
pop ecx  +
push dword ptr [eax+39Ch]  +
call sub_1023FB3  +
mov eax dword_10566D8 +
add eax 68Ch +
cmp dword ptr [eax] 0 +
jz loc_101F8F6  +
push dword ptr [eax]  +
call EvtClose  +
call sub_10237D6  +
call ds:WSACleanup  +
push offset unk_1079A00  +
call ds:RtlDeleteCriticalSection  +
push dword_10566D8  +
call sub_102515E  +
mov eax dword_10566D8 +
lea ecx [eax+684h] +
xor esi esi +
cmp [ecx] esi +
jz loc_101F934  +
push dword ptr [ecx]  +
call sub_103B312  +
mov eax dword_10566D8 +
cmp eax esi +
jz loc_101F942  +
push eax  +
push esi  +
push hHeap  +
call ebx  +
mov dword_10566D8 esi +
call sub_101F1E3  +
mov eax [ebp+var_808] +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 804h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
test byte ptr [esi+78h] 8 +
push edi  +
jz loc_101FA02  +
mov eax [esi+24h] +
test eax eax +
jz loc_101FA02  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jz loc_101FA02  +
mov edi 40000h +
test [esi+78h] edi +
jz loc_101FA15  +
cmp [esi+3Ch] ebx +
jz loc_101FA15  +
push 400h  +
lea eax [ebp+FileName] +
push eax  +
call sub_1022D0C  +
mov ebx eax +
test ebx ebx +
jnz loc_101FA04  +
lea eax [ebp+FileName] +
push eax  +
push [ebp+uID]  +
push dword ptr [ebp+arg_4]  +
push esi  +
call sub_1031B4B  +
test [esi+78h] edi +
jz loc_101FA02  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_101FA02  +
push dword ptr [esi+24h]  +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_103C782  +
mov ebx eax +
lea eax [ebp+FileName] +
push eax  +
call ds:DeleteFileW  +
mov eax ebx +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 0Ch  +
push dword ptr [esi+24h]  +
lea eax [ebp+FileName] +
push 400h  +
push eax  +
call sub_101F55E  +
test eax eax +
jge loc_101F9C4  +
mov eax 54Fh +
jmp loc_101FA04  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10Ch +
push ebx  +
push edi  +
push 100h  +
xor edi edi +
lea eax [ebp+lpMem] +
push edi  +
push eax  +
call memset  +
mov ebx [ebp+arg_0] +
mov eax [ebx+4] +
add esp 0Ch +
cmp eax edi +
jbe loc_101FA6C  +
mov [ebp+var_C] edi +
jmp loc_101FA76  +
mov eax [ebx+8] +
mov [ebp+var_C] 1 +
mov [ebp+arg_0] eax +
cmp eax 40h +
jb loc_101FA86  +
push 4  +
pop eax  +
jmp loc_101FDCA  +
push esi  +
mov [ebp+var_8] edi +
cmp [ebp+arg_0] edi +
jbe loc_101FB05  +
lea eax [ebx+10h] +
mov dword ptr [ebp+Buffer] eax +
mov esi 1A0h +
push esi  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov edi eax +
mov eax [ebp+var_8] +
mov dword ptr [ebp+eax*4+lpMem] edi +
test edi edi +
jz loc_101FB36  +
push esi  +
push 0  +
push edi  +
call memset  +
mov eax dword ptr [ebp+Buffer] +
add esp 0Ch +
cmp [ebp+var_C] 0 +
jz loc_101FAE0  +
mov eax [eax+100h] +
mov [edi+4] eax +
mov dword ptr [edi+14h] 100h +
jmp loc_101FAF4  +
mov dword ptr [edi+180h] offset loc_103AEE7 +
mov eax [eax] +
push eax  +
mov [edi] eax +
call sub_101F4DA  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
add dword ptr [ebp+Buffer] 4 +
cmp eax [ebp+arg_0] +
jb loc_101FA9A  +
xor edi edi +
cmp [ebp+arg_0] 1 +
jnz loc_101FB49  +
cmp [ebp+var_C] edi +
jnz loc_101FB49  +
mov eax dword ptr [ebp+lpMem] +
mov esi [eax] +
lea eax [ebp+Buffer] +
push eax  +
push 7FFFFFFFh  +
push esi  +
call sub_101F5CD  +
test eax eax +
jge loc_101FB3E  +
call ds:GetLastError  +
jmp loc_101FD78  +
push 0Eh  +
pop edi  +
jmp loc_101FD7A  +
push dword ptr [ebp+Buffer]  +
push esi  +
call sub_103B01B  +
jmp loc_101FB4E  +
call sub_103EA11  +
mov [ebp+var_8] edi +
cmp [ebp+arg_0] edi +
jbe loc_101FBCF  +
mov edi [ebp+var_C] +
neg edi  +
sbb edi edi +
and edi 100h +
or edi 10000000h +
lea esi [ebx+3C0h] +
mov eax [ebp+var_8] +
mov eax dword ptr [ebp+eax*4+lpMem] +
mov [eax+14h] edi +
mov ecx [ebx+3B0h] +
and ecx 1000h +
or [eax+14h] ecx +
and dword ptr [eax+178h] 0 +
mov dword ptr [eax+180h] offset loc_101F609 +
push eax  +
mov dword ptr [eax+190h] offset loc_102BCC4 +
call ds:OpenTraceW  +
mov [esi] eax +
mov [esi+4] edx +
cmp eax 0FFFFFFFFh +
jnz loc_101FBBF  +
test edx edx +
jz loc_101FB2B  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
add esi 8 +
cmp eax [ebp+arg_0] +
jb loc_101FB6F  +
xor edi edi +
mov eax [ebx+3B0h] +
test al al +
jns loc_101FD08  +
test eax 12000000h +
jnz loc_101FCE1  +
mov [ebp+Buffer] 0 +
test al 20h +
jz loc_101FBF4  +
mov [ebp+Buffer] 1 +
push edi  +
push dword ptr [ebp+Buffer]  +
push dword ptr [ebx+318h]  +
call sub_1024012  +
mov esi eax +
cmp esi edi +
jz loc_101FB2B  +
cmp [ebp+Buffer] 0 +
mov [ebx+39Ch] esi +
jz loc_101FC2C  +
push esi  +
push 2  +
lea eax [ebp+Buffer] +
push eax  +
mov dword ptr [ebp+Buffer] 0FEFFh +
call sub_1023B75  +
mov eax [ebx+3B0h] +
test eax 9000000h +
jnz loc_101FCD2  +
push offset aUserMs  +
push offset aKernelMs  +
push offset aClockTime  +
test eax 200h +
jz loc_101FCB3  +
push offset aRelatedActivit  +
push offset aActivityId  +
push offset aParentInstance  +
push offset aInstanceId  +
push offset aProcessorNumbe  +
push offset aTid  +
push offset aPid  +
push offset aKeyword  +
push offset aTask  +
push offset aOpcode  +
push offset aLevel  +
push offset aChannel  +
push offset aVersion  +
push offset aEventId_0  +
push offset aType  +
push offset aEventName  +
push offset a12hs10hs12hs10  +
push esi  +
call sub_1024264  +
add esp 54h +
jmp loc_101FD08  +
push offset aTid  +
push offset aType  +
push offset aEventName  +
push offset a12hs10hs11hs21  +
push esi  +
call sub_1024264  +
add esp 20h +
jmp loc_101FD08  +
push offset aEvents_0  +
push esi  +
call sub_10243C0  +
pop ecx  +
pop ecx  +
jmp loc_101FD08  +
lea edi [ebx+318h] +
push dword ptr [edi]  +
call ds:DeleteFileW  +
push 0  +
push dword ptr [edi]  +
call EvtIntCreateLocalLogfile  +
test eax eax +
jz loc_101FB2B  +
mov [ebx+68Ch] eax +
xor edi edi +
mov esi ds:GetSystemTimeAsFileTime +
cmp [ebp+var_C] edi +
jz loc_101FD1A  +
push offset SystemTimeAsFileTime  +
call esi  +
push edi  +
push edi  +
push [ebp+arg_0]  +
lea eax [ebx+3C0h] +
push eax  +
call ds:ProcessTrace  +
cmp [ebp+var_C] 0 +
mov edi eax +
jz loc_101FD4D  +
cmp stru_1079A28.dwLowDateTime 0FFFFFFFFh +
jnz loc_101FD4D  +
cmp stru_1079A28.dwHighDateTime 0FFFFFFFFh +
jnz loc_101FD4D  +
push offset stru_1079A28  +
call esi  +
mov eax stru_1079A28.dwLowDateTime +
sub eax SystemTimeAsFileTime.dwLowDateTime +
mov dword_1079A7C eax +
test edi edi +
jnz loc_101FD7A  +
test dword ptr [ebx+3B0h] 20000000h +
jz loc_101FD7A  +
push dword ptr [ebx+34Ch]  +
call sub_103E6B9  +
mov edi eax +
xor esi esi +
cmp [ebp+arg_0] esi +
jbe loc_101FDC7  +
add ebx 3C0h +
mov eax [ebx] +
mov ecx [ebx+4] +
cmp eax 0FFFFFFFFh +
jnz loc_101FD95  +
test ecx ecx +
jz loc_101FDA4  +
push ecx  +
push eax  +
call ds:CloseTrace  +
or dword ptr [ebx] 0FFFFFFFFh +
and dword ptr [ebx+4] 0 +
mov eax dword ptr [ebp+esi*4+lpMem] +
test eax eax +
jz loc_101FDBE  +
push eax  +
push 0  +
push hHeap  +
call ds:HeapFree  +
inc esi  +
add ebx 8 +
cmp esi [ebp+arg_0] +
jb loc_101FD87  +
mov eax edi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
call __SEH_prolog4_GS  +
mov ebx [ebp+arg_0] +
xor edi edi +
mov [ebp+var_148] edi +
mov [ebp+var_140] edi +
mov [ebp+var_138] edi +
mov [ebp+hHandle] edi +
call sub_101F210  +
cmp eax edi +
jnz loc_102122F  +
push edi  +
push edi  +
push 1  +
push hHeap  +
call ds:HeapSetInformation  +
cmp ebx edi +
jnz loc_101FE2A  +
push 0Dh  +
pop eax  +
jmp loc_102122F  +
mov eax [ebx+0Ch] +
cmp eax edi +
jnz loc_101FE42  +
cmp [ebx+8] edi +
jnz loc_101FE40  +
mov eax 667h +
jmp loc_102122F  +
cmp eax edi +
jbe loc_101FE49  +
cmp [ebx+8] edi +
ja loc_101FE22  +
mov esi 698h +
mov eax [ebx+8] +
cmp eax edi +
jbe loc_101FE85  +
mov ecx [ebx+14h] +
mov [ebp+var_134] eax +
mov eax [ecx] +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_101FE63  +
sub eax edi +
sar eax 1 +
lea esi [esi+eax*2+9] +
and esi 0FFFFFFF8h +
add ecx 4 +
dec [ebp+var_134]  +
jnz loc_101FE5E  +
xor edi edi +
mov eax [ebx+0Ch] +
cmp eax edi +
jbe loc_101FEBA  +
mov ecx [ebx+18h] +
mov [ebp+var_134] eax +
mov eax [ecx] +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_101FE9A  +
sub eax edi +
sar eax 1 +
lea esi [esi+eax*2+9] +
and esi 0FFFFFFF8h +
add ecx 4 +
dec [ebp+var_134]  +
jnz loc_101FE95  +
mov eax [ebx+24h] +
test eax eax +
jz loc_101FED9  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101FEC4  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+9] +
and esi 0FFFFFFF8h +
mov eax [ebx+30h] +
test eax eax +
jz loc_101FEF8  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101FEE3  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+9] +
and esi 0FFFFFFF8h +
mov eax [ebx+10h] +
test eax eax +
jbe loc_101FF2D  +
mov ecx [ebx+1Ch] +
mov [ebp+var_134] eax +
mov eax [ecx] +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_101FF0D  +
sub eax edi +
sar eax 1 +
lea esi [esi+eax*2+9] +
and esi 0FFFFFFF8h +
add ecx 4 +
dec [ebp+var_134]  +
jnz loc_101FF08  +
mov eax [ebx+34h] +
test eax eax +
jz loc_101FF50  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101FF37  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+9] +
push 0FFFFFFF8h  +
pop edi  +
and esi edi +
jmp loc_101FF53  +
push 0FFFFFFF8h  +
pop edi  +
mov eax [ebx+2Ch] +
test eax eax +
jz loc_101FF71  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101FF5D  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+9] +
and esi edi +
mov eax [ebx+20h] +
test eax eax +
jz loc_101FF8F  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101FF7B  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+9] +
and esi edi +
mov eax [ebx+38h] +
test eax eax +
jz loc_101FFAD  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101FF99  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+9] +
and esi edi +
mov eax [ebx+28h] +
test eax eax +
jz loc_101FFCB  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101FFB7  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+9] +
and esi edi +
mov eax [ebx+3Ch] +
test eax eax +
jz loc_101FFE9  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101FFD5  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+9] +
and esi edi +
mov eax [ebx+40h] +
test eax eax +
jz loc_1020007  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101FFF3  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+9] +
and esi edi +
mov eax [ebx+44h] +
test eax eax +
jz loc_1020025  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1020011  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+9] +
and esi edi +
mov eax [ebx+48h] +
test eax eax +
jz loc_1020043  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_102002F  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+9] +
and esi edi +
mov eax [ebx+4Ch] +
test eax eax +
jz loc_1020061  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_102004D  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+9] +
and esi edi +
mov eax [ebx+50h] +
test eax eax +
jz loc_102007F  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_102006B  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+9] +
and esi edi +
mov eax [ebx+54h] +
test eax eax +
jz loc_102009D  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1020089  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+9] +
and esi edi +
add esi 1E8h +
push esi  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jnz loc_10200BF  +
push 0Eh  +
jmp loc_101FE24  +
push esi  +
push 0  +
push edi  +
call memset  +
add esp 0Ch +
mov dword_10566D8 edi +
push 10000h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ecx dword_10566D8 +
mov [ecx+348h] eax +
mov eax dword_10566D8 +
cmp dword ptr [eax+348h] 0 +
jnz loc_102010F  +
push edi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
jmp loc_10200B8  +
add edi 698h +
mov [ebp+var_134] edi +
push offset unk_1079A00  +
call ds:RtlInitializeCriticalSection  +
push 148h  +
push 0  +
push offset SystemTimeAsFileTime  +
call memset  +
add esp 0Ch +
or eax 0FFFFFFFFh +
mov stru_1079A28.dwLowDateTime eax +
mov stru_1079A28.dwHighDateTime eax +
mov byte_1079A58 0 +
mov byte_1079A59 0 +
mov stru_1079A50.dwLowDateTime eax +
mov stru_1079A50.dwHighDateTime eax +
mov eax offset dword_1079AB0 +
mov dword_1079AB4 eax +
mov dword_1079AB0 eax +
mov eax offset dword_1079AB8 +
mov dword_1079ABC eax +
mov dword_1079AB8 eax +
mov eax offset dword_1079AC0 +
mov dword_1079AC4 eax +
mov dword_1079AC0 eax +
mov eax offset dword_1079AC8 +
mov dword_1079ACC eax +
mov dword_1079AC8 eax +
mov eax offset dword_1079AD0 +
mov dword_1079AD4 eax +
mov dword_1079AD0 eax +
mov eax offset dword_1079AD8 +
mov dword_1079ADC eax +
mov dword_1079AD8 eax +
mov eax offset dword_1079AE0 +
mov dword_1079AE4 eax +
mov dword_1079AE0 eax +
mov eax offset dword_1079AE8 +
mov dword_1079AEC eax +
mov dword_1079AE8 eax +
mov eax offset dword_1079AF0 +
mov dword_1079AF4 eax +
mov dword_1079AF0 eax +
mov eax offset dword_1079AF8 +
mov dword_1079AFC eax +
mov dword_1079AF8 eax +
mov eax offset dword_1079B00 +
mov dword_1079B04 eax +
mov dword_1079B00 eax +
mov eax offset dword_1079B08 +
mov dword_1079B0C eax +
mov dword_1079B08 eax +
mov eax offset dword_1079B14 +
mov dword_1079B18 eax +
mov dword_1079B14 eax +
mov eax offset dword_1079B1C +
mov dword_1079B20 eax +
mov dword_1079B1C eax +
mov eax offset dword_1079B24 +
mov dword_1079B28 eax +
mov dword_1079B24 eax +
mov eax offset dword_1079B2C +
mov dword_1079B30 eax +
mov dword_1079B2C eax +
mov eax offset dword_1079B3C +
mov dword_1079B40 eax +
mov dword_1079B3C eax +
mov eax offset dword_1079B34 +
mov dword_1079B38 eax +
mov dword_1079B34 eax +
mov eax offset dword_1079B44 +
mov dword_1079B48 eax +
mov dword_1079B44 eax +
mov eax offset dword_1079B4C +
mov dword_1079B50 eax +
mov dword_1079B4C eax +
test byte ptr [ebx+78h] 8 +
jz loc_10203BF  +
lea eax [ebp+var_140] +
push eax  +
lea eax [ebp+var_138] +
push eax  +
lea eax [ebp+var_24C] +
push eax  +
lea eax [ebp+var_34C] +
push eax  +
push ebx  +
call sub_101F37D  +
mov [ebp+var_134] eax +
test eax eax +
jz loc_10203DF  +
xor edi edi +
cmp [ebp+var_134] edi +
jz loc_1021229  +
mov [ebp+ms_exc.disabled] edi +
push offset unk_1079A00  +
call ds:RtlDeleteCriticalSection  +
push dword_10566D8  +
call sub_102515E  +
mov eax dword_10566D8 +
add eax 39Ch +
cmp [eax] edi +
jz loc_1020301  +
push dword ptr [eax]  +
call sub_1023FB3  +
mov eax dword_10566D8 +
add eax 68Ch +
cmp [eax] edi +
jz loc_1020316  +
push dword ptr [eax]  +
call EvtClose  +
cmp [ebp+var_148] edi +
jz loc_1020323  +
call sub_10237D6  +
mov eax lpMem +
cmp eax edi +
jz loc_102033A  +
push eax  +
push edi  +
push hHeap  +
call ds:HeapFree  +
mov eax lpFileName +
cmp eax edi +
jz loc_102035D  +
push eax  +
call ds:fclose  +
mov lpFileName edi +
mov [esp+34Ch+var_34C] offset word_10566E8 +
call ds:DeleteFileW  +
mov eax dword_1079A74 +
cmp eax edi +
jz loc_1020380  +
push eax  +
call ds:fclose  +
mov dword_1079A74 edi +
mov [esp+34Ch+var_34C] offset word_1056EE8 +
call ds:DeleteFileW  +
mov eax dword_10566D8 +
cmp eax edi +
jz loc_1021222  +
add eax 684h +
cmp [eax] edi +
jz loc_102039D  +
push dword ptr [eax]  +
call sub_103B312  +
mov eax dword_10566D8 +
cmp eax edi +
jz loc_10203B4  +
push eax  +
push edi  +
push hHeap  +
call ds:HeapFree  +
mov dword_10566D8 edi +
jmp loc_1021222  +
mov eax [ebx+8] +
test eax eax +
jbe loc_10203D9  +
mov esi [ebx+14h] +
mov ecx eax +
lea edi [ebp+var_24C] +
movs   +
mov edi [ebp+var_134] +
mov [ebp+var_140] eax +
xor esi esi +
cmp [ebp+var_138] esi +
jbe loc_102041E  +
test byte ptr [ebx+78h] 8 +
jnz loc_10203FE  +
mov [ebp+var_134] 0A0h +
jmp loc_10202C5  +
push [ebp+var_138]  +
lea eax [ebp+var_34C] +
push eax  +
call sub_103B9DF  +
mov [ebp+var_134] eax +
cmp eax esi +
jnz loc_10202C5  +
mov eax 3C0h +
mov ecx dword_10566D8 +
or dword ptr [eax+ecx] 0FFFFFFFFh +
mov ecx dword_10566D8 +
mov [eax+ecx+4] esi +
add eax 8 +
cmp eax 5C0h +
jb loc_1020423  +
cmp [ebp+var_140] esi +
jbe loc_10204E1  +
push 10h  +
pop esi  +
lea eax [ebp+var_24C] +
sub eax esi +
mov [ebp+var_134] eax +
mov eax [ebp+var_140] +
mov [ebp+var_138] eax +
mov eax dword_10566D8 +
mov [esi+eax] edi +
mov eax [ebp+var_134] +
mov ecx [eax+esi] +
mov eax ecx +
lea edx [eax+2] +
mov [ebp+var_13C] edx +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1020486  +
sub eax [ebp+var_13C] +
sar eax 1 +
push ecx  +
inc eax  +
push eax  +
mov eax dword_10566D8 +
push dword ptr [esi+eax]  +
call sub_101F55E  +
mov eax dword_10566D8 +
mov ecx [esi+eax] +
lea edx [ecx+2] +
mov [ebp+var_13C] edx +
mov dx [ecx] +
inc ecx  +
inc ecx  +
test dx dx +
jnz loc_10204B9  +
sub ecx [ebp+var_13C] +
sar ecx 1 +
lea ecx [ecx+ecx+9] +
and ecx 0FFFFFFF8h +
add edi ecx +
add esi 4 +
dec [ebp+var_138]  +
jnz loc_102046F  +
jmp loc_10204E6  +
mov eax dword_10566D8 +
and [ebp+var_134] 0 +
cmp dword ptr [ebx+0Ch] 0 +
jbe loc_1020588  +
mov ecx [ebx+8] +
mov edx [ebp+var_134] +
add ecx edx +
lea esi ds:110h[ecx*4] +
mov [esi+eax] edi +
mov ecx edx +
shl ecx 2 +
mov eax [ebx+18h] +
mov eax [ecx+eax] +
mov [ebp+var_138] eax +
lea edx [eax+2] +
mov [ebp+var_13C] edx +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1020526  +
sub eax [ebp+var_13C] +
sar eax 1 +
push [ebp+var_138]  +
inc eax  +
push eax  +
mov eax dword_10566D8 +
push dword ptr [ecx+eax+110h]  +
call sub_101F55E  +
mov eax dword_10566D8 +
mov ecx [esi+eax] +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_102055C  +
sub ecx edx +
sar ecx 1 +
lea ecx [ecx+ecx+9] +
and ecx 0FFFFFFF8h +
add edi ecx +
inc [ebp+var_134]  +
mov ecx [ebp+var_134] +
cmp ecx [ebx+0Ch] +
jb loc_10204F7  +
cmp dword ptr [ebx+24h] 0 +
jz loc_10205E2  +
mov [eax+314h] edi +
mov ecx [ebx+24h] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_102059C  +
sub eax edx +
sar eax 1 +
push ecx  +
inc eax  +
push eax  +
mov eax dword_10566D8 +
push dword ptr [eax+314h]  +
call sub_101F55E  +
mov eax dword_10566D8 +
mov ecx [eax+314h] +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_10205CB  +
sub ecx edx +
sar ecx 1 +
lea ecx [ecx+ecx+9] +
and ecx 0FFFFFFF8h +
add edi ecx +
cmp dword ptr [ebx+2Ch] 0 +
jz loc_102063C  +
mov [eax+318h] edi +
mov ecx [ebx+2Ch] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_10205F6  +
sub eax edx +
sar eax 1 +
push ecx  +
inc eax  +
push eax  +
mov eax dword_10566D8 +
push dword ptr [eax+318h]  +
call sub_101F55E  +
mov eax dword_10566D8 +
mov ecx [eax+318h] +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_1020625  +
sub ecx edx +
sar ecx 1 +
lea ecx [ecx+ecx+9] +
and ecx 0FFFFFFF8h +
add edi ecx +
cmp dword ptr [ebx+30h] 0 +
jz loc_1020696  +
mov [eax+31Ch] edi +
mov ecx [ebx+30h] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1020650  +
sub eax edx +
sar eax 1 +
push ecx  +
inc eax  +
push eax  +
mov eax dword_10566D8 +
push dword ptr [eax+31Ch]  +
call sub_101F55E  +
mov eax dword_10566D8 +
mov ecx [eax+31Ch] +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_102067F  +
sub ecx edx +
sar ecx 1 +
lea ecx [ecx+ecx+9] +
and ecx 0FFFFFFF8h +
add edi ecx +
and [ebp+var_134] 0 +
cmp dword ptr [ebx+10h] 0 +
jbe loc_1020722  +
mov esi 210h +
mov [esi+eax] edi +
mov eax [ebx+1Ch] +
mov ecx [esi+eax-210h] +
mov eax ecx +
lea edx [eax+2] +
mov [ebp+var_13C] edx +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_10206C0  +
sub eax [ebp+var_13C] +
sar eax 1 +
push ecx  +
inc eax  +
push eax  +
mov eax dword_10566D8 +
push dword ptr [esi+eax]  +
call sub_101F55E  +
mov eax dword_10566D8 +
mov ecx [esi+eax] +
lea edx [ecx+2] +
mov [ebp+var_13C] edx +
mov dx [ecx] +
inc ecx  +
inc ecx  +
test dx dx +
jnz loc_10206F3  +
sub ecx [ebp+var_13C] +
sar ecx 1 +
lea ecx [ecx+ecx+9] +
and ecx 0FFFFFFF8h +
add edi ecx +
inc [ebp+var_134]  +
add esi 4 +
mov ecx [ebp+var_134] +
cmp ecx [ebx+10h] +
jb loc_10206A8  +
cmp dword ptr [ebx+34h] 0 +
jz loc_102077C  +
mov [eax+328h] edi +
mov ecx [ebx+34h] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1020736  +
sub eax edx +
sar eax 1 +
push ecx  +
inc eax  +
push eax  +
mov eax dword_10566D8 +
push dword ptr [eax+328h]  +
call sub_101F55E  +
mov eax dword_10566D8 +
mov ecx [eax+328h] +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_1020765  +
sub ecx edx +
sar ecx 1 +
lea ecx [ecx+ecx+9] +
and ecx 0FFFFFFF8h +
add edi ecx +
cmp dword ptr [ebx+20h] 0 +
jz loc_10207D6  +
mov [eax+32Ch] edi +
mov ecx [ebx+20h] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1020790  +
sub eax edx +
sar eax 1 +
push ecx  +
inc eax  +
push eax  +
mov eax dword_10566D8 +
push dword ptr [eax+32Ch]  +
call sub_101F55E  +
mov eax dword_10566D8 +
mov ecx [eax+32Ch] +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_10207BF  +
sub ecx edx +
sar ecx 1 +
lea ecx [ecx+ecx+9] +
and ecx 0FFFFFFF8h +
add edi ecx +
cmp dword ptr [ebx+38h] 0 +
jz loc_1020830  +
mov [eax+334h] edi +
mov ecx [ebx+38h] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_10207EA  +
sub eax edx +
sar eax 1 +
push ecx  +
inc eax  +
push eax  +
mov eax dword_10566D8 +
push dword ptr [eax+334h]  +
call sub_101F55E  +
mov eax dword_10566D8 +
mov ecx [eax+334h] +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_1020819  +
sub ecx edx +
sar ecx 1 +
lea ecx [ecx+ecx+9] +
and ecx 0FFFFFFF8h +
add edi ecx +
cmp dword ptr [ebx+28h] 0 +
jz loc_102088A  +
mov [eax+330h] edi +
mov ecx [ebx+28h] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1020844  +
sub eax edx +
sar eax 1 +
push ecx  +
inc eax  +
push eax  +
mov eax dword_10566D8 +
push dword ptr [eax+330h]  +
call sub_101F55E  +
mov eax dword_10566D8 +
mov ecx [eax+330h] +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_1020873  +
sub ecx edx +
sar ecx 1 +
lea ecx [ecx+ecx+9] +
and ecx 0FFFFFFF8h +
add edi ecx +
cmp dword ptr [ebx+3Ch] 0 +
jz loc_10208E4  +
mov [eax+320h] edi +
mov ecx [ebx+3Ch] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_102089E  +
sub eax edx +
sar eax 1 +
push ecx  +
inc eax  +
push eax  +
mov eax dword_10566D8 +
push dword ptr [eax+320h]  +
call sub_101F55E  +
mov eax dword_10566D8 +
mov ecx [eax+320h] +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_10208CD  +
sub ecx edx +
sar ecx 1 +
lea ecx [ecx+ecx+9] +
and ecx 0FFFFFFF8h +
add edi ecx +
cmp dword ptr [ebx+40h] 0 +
jz loc_102093E  +
mov [eax+324h] edi +
mov ecx [ebx+40h] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_10208F8  +
sub eax edx +
sar eax 1 +
push ecx  +
inc eax  +
push eax  +
mov eax dword_10566D8 +
push dword ptr [eax+324h]  +
call sub_101F55E  +
mov eax dword_10566D8 +
mov ecx [eax+324h] +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_1020927  +
sub ecx edx +
sar ecx 1 +
lea ecx [ecx+ecx+9] +
and ecx 0FFFFFFF8h +
add edi ecx +
cmp dword ptr [ebx+44h] 0 +
jz loc_1020998  +
mov [eax+338h] edi +
mov ecx [ebx+44h] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1020952  +
sub eax edx +
sar eax 1 +
push ecx  +
inc eax  +
push eax  +
mov eax dword_10566D8 +
push dword ptr [eax+338h]  +
call sub_101F55E  +
mov eax dword_10566D8 +
mov ecx [eax+338h] +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_1020981  +
sub ecx edx +
sar ecx 1 +
lea ecx [ecx+ecx+9] +
and ecx 0FFFFFFF8h +
add edi ecx +
cmp dword ptr [ebx+48h] 0 +
jz loc_10209F2  +
mov [eax+33Ch] edi +
mov ecx [ebx+48h] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_10209AC  +
sub eax edx +
sar eax 1 +
push ecx  +
inc eax  +
push eax  +
mov eax dword_10566D8 +
push dword ptr [eax+33Ch]  +
call sub_101F55E  +
mov eax dword_10566D8 +
mov ecx [eax+33Ch] +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_10209DB  +
sub ecx edx +
sar ecx 1 +
lea ecx [ecx+ecx+9] +
and ecx 0FFFFFFF8h +
add edi ecx +
cmp dword ptr [ebx+4Ch] 0 +
jz loc_1020A4C  +
mov [eax+340h] edi +
mov ecx [ebx+4Ch] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1020A06  +
sub eax edx +
sar eax 1 +
push ecx  +
inc eax  +
push eax  +
mov eax dword_10566D8 +
push dword ptr [eax+340h]  +
call sub_101F55E  +
mov eax dword_10566D8 +
mov ecx [eax+340h] +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_1020A35  +
sub ecx edx +
sar ecx 1 +
lea ecx [ecx+ecx+9] +
and ecx 0FFFFFFF8h +
add edi ecx +
cmp dword ptr [ebx+50h] 0 +
jz loc_1020AA6  +
mov [eax+344h] edi +
mov ecx [ebx+50h] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1020A60  +
sub eax edx +
sar eax 1 +
push ecx  +
inc eax  +
push eax  +
mov eax dword_10566D8 +
push dword ptr [eax+344h]  +
call sub_101F55E  +
mov eax dword_10566D8 +
mov ecx [eax+344h] +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_1020A8F  +
sub ecx edx +
sar ecx 1 +
lea ecx [ecx+ecx+9] +
and ecx 0FFFFFFF8h +
add edi ecx +
cmp dword ptr [ebx+54h] 0 +
jz loc_1020B00  +
mov [eax+34Ch] edi +
mov ecx [ebx+54h] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_1020ABA  +
sub eax edx +
sar eax 1 +
push ecx  +
inc eax  +
push eax  +
mov eax dword_10566D8 +
push dword ptr [eax+34Ch]  +
call sub_101F55E  +
mov eax dword_10566D8 +
mov ecx [eax+34Ch] +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_1020AE9  +
sub ecx edx +
sar ecx 1 +
lea ecx [ecx+ecx+9] +
and ecx 0FFFFFFF8h +
add edi ecx +
mov ecx [ebp+var_140] +
mov [eax+4] ecx +
mov eax [ebx+0Ch] +
mov ecx dword_10566D8 +
mov [ecx+8] eax +
mov eax [ebx+10h] +
mov ecx dword_10566D8 +
mov [ecx+0Ch] eax +
mov eax [ebx+58h] +
mov ecx dword_10566D8 +
mov [ecx+3A0h] eax +
mov eax [ebx+5Ch] +
mov ecx dword_10566D8 +
mov [ecx+3A4h] eax +
mov eax [ebx+60h] +
mov ecx dword_10566D8 +
mov [ecx+3A8h] eax +
mov eax [ebx+64h] +
mov ecx dword_10566D8 +
mov [ecx+3ACh] eax +
mov eax [ebx+78h] +
mov ecx dword_10566D8 +
mov [ecx+3B0h] eax +
mov eax [ebx+4] +
mov ecx dword_10566D8 +
mov [ecx+398h] eax +
mov eax [ebx+80h] +
mov ecx dword_10566D8 +
mov [ecx+5C0h] eax +
mov eax [ebx+84h] +
mov ecx dword_10566D8 +
mov [ecx+688h] eax +
xor esi esi +
mov [ebp+var_138] esi +
mov ecx dword_10566D8 +
lea eax [ecx+338h] +
cmp [eax] esi +
jz loc_1020BE3  +
mov eax [eax] +
cdq   +
mov [ecx+358h] eax +
mov eax dword_10566D8 +
mov [eax+35Ch] edx +
mov eax dword_10566D8 +
and [eax+360h] esi +
inc esi  +
mov [ebp+var_138] esi +
mov ecx dword_10566D8 +
lea eax [ecx+33Ch] +
cmp dword ptr [eax] 0 +
jz loc_1020C27  +
mov eax [eax] +
cdq   +
shl esi 4 +
mov [esi+ecx+358h] eax +
mov eax dword_10566D8 +
mov [esi+eax+35Ch] edx +
mov esi [ebp+var_138] +
lea eax [esi+36h] +
shl eax 4 +
mov ecx dword_10566D8 +
mov dword ptr [eax+ecx] 1 +
inc esi  +
mov ecx dword_10566D8 +
lea eax [ecx+340h] +
cmp dword ptr [eax] 0 +
jz loc_1020C4B  +
push dword ptr [ecx+344h]  +
push dword ptr [eax]  +
push dword ptr [ecx+33Ch]  +
call sub_104F49F  +
mov ecx dword_10566D8 +
test dword ptr [ecx+3B0h] 800000h +
jz loc_1020C8F  +
mov eax esi +
shl eax 4 +
mov dword ptr [eax+ecx+358h] 1 +
mov ecx dword_10566D8 +
and dword ptr [eax+ecx+35Ch] 0 +
lea eax [esi+36h] +
shl eax 4 +
mov ecx dword_10566D8 +
mov dword ptr [eax+ecx] 2 +
inc esi  +
mov ecx dword_10566D8 +
mov eax esi +
shl eax 4 +
mov dword ptr [eax+ecx+358h] 4 +
mov ecx dword_10566D8 +
and dword ptr [eax+ecx+35Ch] 0 +
lea eax [esi+36h] +
shl eax 4 +
mov ecx dword_10566D8 +
mov dword ptr [eax+ecx] 3 +
inc esi  +
mov eax dword_10566D8 +
mov [eax+350h] esi +
mov eax edi +
mov dword_1079AAC eax +
mov esi 0E8h +
add edi esi +
push esi  +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
xor eax eax +
mov ecx dword_1079AAC +
add ecx eax +
mov [ecx+4] ecx +
mov ecx dword_1079AAC +
add ecx eax +
mov edx [ecx+4] +
mov [ecx] edx +
add eax 8 +
cmp eax esi +
jb loc_1020CE8  +
mov dword_1079B10 edi +
mov esi 100h +
push esi  +
push 0  +
push edi  +
call memset  +
add esp 0Ch +
xor ecx ecx +
mov eax dword_1079B10 +
add eax ecx +
mov [eax+4] eax +
mov eax dword_1079B10 +
add eax ecx +
mov edx [eax+4] +
mov [eax] edx +
add ecx 8 +
cmp ecx esi +
jb loc_1020D20  +
xor esi esi +
test byte ptr [ebx+78h] 80h +
jz loc_1020D59  +
cmp [ebx+2Ch] esi +
jz loc_1020D59  +
mov eax dword_10566D8 +
or dword ptr [eax+3B0h] 80h +
mov edx 400h +
test [ebx+78h] edx +
jz loc_1020D73  +
cmp [ebx+28h] esi +
jz loc_1020D73  +
mov eax dword_10566D8 +
or [eax+3B0h] edx +
mov ecx 800h +
test [ebx+78h] ecx +
jz loc_1020D8D  +
cmp [ebx+38h] esi +
jz loc_1020D8D  +
mov eax dword_10566D8 +
or [eax+3B0h] ecx +
mov ecx 80000h +
test [ebx+78h] ecx +
jz loc_1020DA7  +
cmp [ebx+44h] esi +
jz loc_1020DA7  +
mov eax dword_10566D8 +
or [eax+3B0h] ecx +
mov ecx 100000h +
test [ebx+78h] ecx +
jz loc_1020DC1  +
cmp [ebx+48h] esi +
jz loc_1020DC1  +
mov eax dword_10566D8 +
or [eax+3B0h] ecx +
mov ecx 200000h +
test [ebx+78h] ecx +
jz loc_1020DDB  +
cmp [ebx+4Ch] esi +
jz loc_1020DDB  +
mov eax dword_10566D8 +
or [eax+3B0h] ecx +
mov ecx 400000h +
test [ebx+78h] ecx +
jz loc_1020DF5  +
cmp [ebx+50h] esi +
jz loc_1020DF5  +
mov eax dword_10566D8 +
or [eax+3B0h] ecx +
mov eax [ebx+78h] +
mov ecx 4000000h +
test eax ecx +
jz loc_1020E15  +
test al 8 +
jz loc_1020E15  +
cmp [ebx+30h] esi +
jz loc_1020E15  +
mov eax dword_10566D8 +
or [eax+3B0h] ecx +
mov ecx 40000000h +
test [ebx+78h] ecx +
jz loc_1020E2F  +
cmp [ebx+10h] esi +
jz loc_1020E2F  +
mov eax dword_10566D8 +
or [eax+3B0h] ecx +
push edx  +
push offset word_10566E8  +
call sub_1022D0C  +
mov [ebp+var_134] eax +
cmp eax esi +
jnz loc_10202C5  +
mov edi offset aW +
push edi  +
push offset word_10566E8  +
mov esi ds:_wfopen +
call esi  +
pop ecx  +
pop ecx  +
mov lpFileName eax +
test eax eax +
jnz loc_1020E72  +
call ds:GetLastError  +
mov [ebp+var_134] eax +
cmp [ebp+var_134] 0 +
jnz loc_10202C5  +
push 400h  +
push offset word_1056EE8  +
call sub_1022D0C  +
mov [ebp+var_134] eax +
test eax eax +
jnz loc_10202C5  +
push edi  +
push offset word_1056EE8  +
call esi  +
pop ecx  +
pop ecx  +
mov dword_1079A74 eax +
test eax eax +
jnz loc_1020EBB  +
call ds:GetLastError  +
mov [ebp+var_134] eax +
xor edi edi +
cmp [ebp+var_134] edi +
jnz loc_10202D3  +
mov byte_1079A78 0 +
mov eax dword_10566D8 +
or dword ptr [eax+3B0h] 200h +
test byte ptr [ebx+78h] 8 +
jz loc_1020F00  +
mov eax dword_10566D8 +
or dword ptr [eax+3B0h] 8 +
mov eax dword_10566D8 +
or dword ptr [eax+3B0h] 8000h +
mov ecx 40000h +
test [ebx+78h] ecx +
jz loc_1020F15  +
mov eax dword_10566D8 +
or [eax+3B0h] ecx +
mov ecx 1000000h +
test [ebx+78h] ecx +
jz loc_1020F2A  +
mov eax dword_10566D8 +
or [eax+3B0h] ecx +
mov ecx 2000000h +
test [ebx+78h] ecx +
jz loc_1020F3F  +
mov eax dword_10566D8 +
or [eax+3B0h] ecx +
mov ecx 8000000h +
test [ebx+78h] ecx +
jz loc_1020F54  +
mov eax dword_10566D8 +
or [eax+3B0h] ecx +
mov ecx 10000000h +
test [ebx+78h] ecx +
jz loc_1020F69  +
mov eax dword_10566D8 +
or [eax+3B0h] ecx +
mov ecx 20000000h +
test [ebx+78h] ecx +
jz loc_1020F7E  +
mov eax dword_10566D8 +
or [eax+3B0h] ecx +
mov eax [ebx+7Ch] +
cmp eax edi +
jz loc_1020F91  +
mov ecx dword_10566D8 +
mov [ecx+3B4h] eax +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 114h +
lea eax [ebp+VersionInformation] +
push eax  +
call ds:GetVersionExW  +
test eax eax +
jz loc_1021040  +
cmp [ebp+VersionInformation.dwMajorVersion] 5 +
ja loc_1020FC8  +
jnz loc_1021040  +
cmp [ebp+VersionInformation.dwMinorVersion] 1 +
jb loc_1021040  +
mov byte_10566DC 1 +
push offset LibFileName  +
call ds:LoadLibraryW  +
mov hModule eax +
cmp eax edi +
jz loc_1021040  +
push offset ProcName  +
push eax  +
mov edi ds:GetProcAddress +
call edi  +
push eax  +
mov esi ds:EncodePointer +
call esi  +
mov dword_10576E8 eax +
push offset aRtlipv4addre_0  +
push hModule  +
call edi  +
push eax  +
call esi  +
mov dword_10576EC eax +
push offset aRtlipv6address  +
push hModule  +
call edi  +
push eax  +
call esi  +
mov dword_10576F0 eax +
push offset aRtlipv6addre_0  +
push hModule  +
call edi  +
push eax  +
call esi  +
mov dword_10576F4 eax +
xor edi edi +
mov [ebp+var_148] 1 +
push dword_10566D8  +
call sub_1025078  +
mov [ebp+var_134] eax +
cmp eax edi +
jnz loc_10202C7  +
mov eax dword_10566D8 +
test dword ptr [eax+3B0h] 4000000h +
jz loc_102109C  +
push dword ptr [eax+31Ch]  +
call sub_1047BFA  +
mov dword_1079B5C eax +
cmp eax edi +
jnz loc_1021097  +
mov [ebp+var_134] 3AA0h +
jmp loc_10202C7  +
mov eax dword_10566D8 +
test dword ptr [eax+3B0h] 40000000h +
jz loc_10210CE  +
xor esi esi +
cmp [ebx+10h] edi +
jbe loc_10210CE  +
mov eax [ebx+1Ch] +
push dword ptr [eax+esi*4]  +
call TdhLoadManifest  +
mov [ebp+var_134] eax +
cmp eax edi +
jnz loc_10202C7  +
inc esi  +
cmp esi [ebx+10h] +
jb loc_10210AF  +
call sub_101F18E  +
test eax eax +
jnz loc_10210EE  +
call ds:WSACleanup  +
call ds:WSAGetLastError  +
mov [ebp+var_134] eax +
jmp loc_10202C7  +
mov eax dword_10566D8 +
cmp byte ptr [eax+5D0h] 0 +
jz loc_1021149  +
mov ecx stru_1079A48.dwHighDateTime +
mov edx stru_1079A50.dwHighDateTime +
cmp ecx edx +
ja loc_1021149  +
jb loc_102111C  +
mov esi stru_1079A48.dwLowDateTime +
cmp esi stru_1079A50.dwLowDateTime +
jnb loc_1021149  +
mov esi stru_1079A48.dwLowDateTime +
mov SystemTimeAsFileTime.dwLowDateTime esi +
mov SystemTimeAsFileTime.dwHighDateTime ecx +
mov ecx stru_1079A50.dwLowDateTime +
mov stru_1079A28.dwLowDateTime ecx +
mov stru_1079A28.dwHighDateTime edx +
mov byte ptr [eax+5D1h] 1 +
jmp loc_1021150  +
mov byte ptr [eax+5D1h] 0 +
mov eax dword_10566D8 +
cmp [eax+684h] edi +
jz loc_102117E  +
lea eax [ebp+ThreadId] +
push eax  +
push edi  +
push edi  +
push offset StartAddress  +
push edi  +
push edi  +
call ds:CreateThread  +
mov [ebp+hHandle] eax +
mov eax dword_10566D8 +
cmp [eax+4] edi +
ja loc_1021188  +
cmp [eax+8] edi +
jbe loc_1021199  +
push eax  +
call sub_101FA39  +
mov [ebp+var_134] eax +
mov eax dword_10566D8 +
cmp [ebp+hHandle] edi +
jz loc_10211B4  +
push 0FFFFFFFFh  +
push [ebp+hHandle]  +
call ds:WaitForSingleObject  +
mov eax dword_10566D8 +
cmp [eax+4] edi +
ja loc_10211DC  +
cmp [eax+8] edi +
ja loc_10211DC  +
lea ecx [eax+684h] +
cmp [ecx] edi +
jz loc_10211F0  +
mov ecx [ecx] +
cmp [ecx+14h] edi +
jnz loc_10211F0  +
call sub_103B367  +
mov [ebp+var_134] edi +
jmp loc_10211EB  +
call sub_102BBD7  +
call sub_1025BBC  +
call sub_101F121  +
mov eax dword_10566D8 +
cmp [ebp+var_134] edi +
jnz loc_10202D3  +
add eax 684h +
cmp [eax] edi +
jz loc_10202C7  +
mov eax [eax] +
mov eax [eax+14h] +
cmp eax edi +
jz loc_10202C7  +
jmp loc_10210E3  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax [ebp+var_134] +
call __SEH_epilog4_GS  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
push 19h  +
xor edx edx +
lea ecx [eax-1] +
pop esi  +
cmp esi eax +
lea edi [eax-19h] +
sbb eax eax +
and eax edi +
movzx ecx cx +
movzx eax ax +
jmp loc_102127E  +
mov edi [ebp+arg_0] +
imul edx edx +
movzx esi cx +
movsx si byte ptr [esi+edi] +
add si dx +
movzx edx si +
test cx cx +
jz loc_1021283  +
add ecx 0FFFFh +
cmp cx ax +
jnb loc_102125F  +
movzx eax dx +
and eax 8000001Fh +
jns loc_1021292  +
dec eax  +
or eax 0FFFFFFE0h +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_10212DA  +
push 178h  +
push 0  +
push esi  +
call memset  +
lea eax [esi+8] +
mov [esi+0Ch] eax +
mov [eax] eax +
lea eax [esi+10h] +
mov [esi+14h] eax +
mov [eax] eax +
lea eax [esi+18h] +
mov [esi+1Ch] eax +
mov [eax] eax +
lea eax [esi+20h] +
add esp 0Ch +
mov [esi+24h] eax +
mov [eax] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov edi offset unk_1079A00 +
push edi  +
xor esi esi +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079B3C +
cmp eax offset dword_1079B3C +
jz loc_102130E  +
mov ecx [eax] +
mov esi eax +
mov eax [eax+4] +
mov [eax] ecx +
mov [ecx+4] eax +
push edi  +
call ds:RtlLeaveCriticalSection  +
test esi esi +
jnz loc_102133B  +
push 34h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_102133B  +
push 0Eh  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1021352  +
push 34h  +
push 0  +
push esi  +
call memset  +
lea eax [esi+8] +
mov [esi+0Ch] eax +
mov [eax] eax +
add esp 0Ch +
mov eax esi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1021383  +
push 70h  +
push 0  +
push esi  +
call memset  +
add esp 0Ch +
or eax 0FFFFFFFFh +
mov [esi+60h] eax +
mov [esi+5Ch] eax +
mov [esi+68h] eax +
mov [esi+64h] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_10213D2  +
push 0B0h  +
push 0  +
push esi  +
call memset  +
lea eax [esi+8] +
mov [esi+0Ch] eax +
mov [eax] eax +
lea eax [esi+10h] +
mov [esi+14h] eax +
mov [eax] eax +
lea eax [esi+18h] +
mov [esi+1Ch] eax +
mov [eax] eax +
lea eax [esi+20h] +
mov [esi+24h] eax +
mov [eax] eax +
lea eax [esi+28h] +
add esp 0Ch +
mov [esi+2Ch] eax +
mov [eax] eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 28h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jz loc_1021425  +
mov ecx [ebp+arg_4] +
mov [eax+8] ecx +
mov ecx [ebp+arg_8] +
mov [eax+0Ch] ecx +
mov ecx [ebp+arg_C] +
mov [eax+10h] ecx +
mov ecx [ebp+arg_10] +
mov [eax+18h] ecx +
mov ecx [ebp+arg_14] +
mov [eax+1Ch] ecx +
mov ecx [ebp+arg_18] +
mov [eax+14h] ecx +
mov ecx [ebp+arg_1C] +
mov [eax+20h] ecx +
mov ecx [ebp+arg_20] +
mov [eax+24h] ecx +
mov ecx [ebp+arg_0] +
test eax eax +
mov [ecx] eax +
setnz al  +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 40h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jz loc_1021483  +
mov ecx [ebp+arg_C] +
mov [eax+20h] ecx +
mov ecx [ebp+arg_10] +
mov [eax+24h] ecx +
mov ecx [ebp+arg_4] +
mov [eax+18h] ecx +
mov ecx [ebp+arg_8] +
mov [eax+1Ch] ecx +
mov ecx [ebp+arg_14] +
mov [eax+28h] ecx +
mov ecx [ebp+arg_18] +
mov [eax+30h] ecx +
mov ecx [ebp+arg_1C] +
mov [eax+34h] ecx +
lea ecx [eax+38h] +
mov [eax+3Ch] ecx +
mov [ecx] ecx +
mov ecx [ebp+arg_0] +
test eax eax +
mov [ecx] eax +
setnz al  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_10214E8  +
mov eax [edi] +
mov ecx [edi+4] +
push ebx  +
mov [ecx] eax +
lea ebx [edi+38h] +
push esi  +
mov [eax+4] ecx +
mov esi [ebx] +
jmp loc_10214D3  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call ds:HeapFree  +
cmp esi ebx +
jnz loc_10214B6  +
push edi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
test ebx ebx +
jz loc_102153E  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_102153E  +
push 24h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov edx eax +
xor eax eax +
test edx edx +
jz loc_1021540  +
push edi  +
push 9  +
pop ecx  +
mov edi edx +
stos   +
lea eax [ebx+8] +
mov [edx+8] esi +
mov ecx [eax] +
mov [edx+4] eax +
mov [edx] ecx +
mov [ecx+4] edx +
mov [eax] edx +
mov eax edx +
pop edi  +
jmp loc_1021540  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push esi  +
test edx edx +
jz loc_102157A  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_102157A  +
lea ecx [edx+8] +
mov eax [ecx] +
jmp loc_102156D  +
cmp esi [eax+8] +
jz loc_102157C  +
mov eax [eax] +
cmp eax ecx +
jnz loc_1021566  +
push esi  +
push edx  +
call sub_10214F2  +
jmp loc_102157C  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_1021597  +
xor eax eax +
jmp loc_10215D8  +
push esi  +
push edi  +
mov edi 88h +
push edi  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_10215D6  +
push edi  +
push 0  +
push esi  +
call memset  +
mov eax [ebp+arg_0] +
mov [esi+18h] eax +
lea eax [ebx+10h] +
mov ecx [eax] +
mov [esi+4] eax +
mov [esi] ecx +
mov [ecx+4] esi +
mov [eax] esi +
add esp 0Ch +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 178h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_1021605  +
xor al al +
jmp loc_1021654  +
push esi  +
call sub_102129D  +
mov ecx [ebp+arg_4] +
mov eax [ecx+10h] +
mov [esi+78h] eax +
mov eax [ecx+14h] +
mov [esi+7Ch] eax +
mov eax [esi+78h] +
mov [esi+70h] eax +
mov eax [esi+7Ch] +
mov [esi+74h] eax +
mov eax [ebp+arg_0] +
mov [esi+28h] eax +
movzx ecx byte ptr [ecx+50h] +
mov [esi+3Ch] ecx +
cdq   +
push 1Dh  +
pop ecx  +
idiv  ecx +
mov eax dword_1079AAC +
lea eax [eax+edx*8] +
mov ecx [eax] +
mov [esi+4] eax +
mov [esi] ecx +
mov [ecx+4] esi +
mov [eax] esi +
mov eax [ebp+arg_8] +
mov [eax] esi +
mov al 1 +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
jmp loc_10216B8  +
test ebx ebx +
jz loc_10216C0  +
mov edx [ebx] +
mov [ebp+arg_0] edx +
cmp edx ebx +
jz loc_10216C0  +
cmp dword ptr [edx+18h] 0 +
mov eax edx +
jz loc_10216AE  +
cmp [ebp+arg_C] 0 +
jz loc_102168C  +
cmp [ebp+arg_C] 1 +
jnz loc_10216A8  +
mov esi [edx+10h] +
mov edi [ebp+arg_4] +
push 4  +
xor edx edx +
mov edx [ebp+arg_0] +
pop ecx  +
cmps   +
jnz loc_10216A8  +
mov cx [ebp+arg_8] +
cmp [edx+14h] cx +
jz loc_10216CE  +
cmp [ebp+arg_C] 0 +
ja loc_10216B2  +
mov edx [edx] +
jmp loc_1021671  +
dec [ebp+arg_C]  +
lea ebx [edx+8] +
xor eax eax +
cmp [ebp+arg_C] 20h +
jbe loc_102166B  +
cmp [ebp+arg_C] 0 +
jnz loc_1021714  +
test ebx ebx +
jz loc_1021714  +
mov eax [ebx] +
jmp loc_10216ED  +
mov eax edx +
jmp loc_1021714  +
mov edi [ebp+arg_4] +
mov esi [eax+10h] +
push 4  +
pop ecx  +
xor edx edx +
cmps   +
jnz loc_10216EB  +
mov cx [ebp+arg_8] +
cmp [eax+14h] cx +
jz loc_1021714  +
mov eax [eax] +
cmp eax ebx +
jnz loc_10216D2  +
call sub_10212E4  +
test eax eax +
jz loc_1021714  +
mov ecx [ebp+arg_4] +
mov [eax+10h] ecx +
mov cx [ebp+arg_8] +
mov [eax+14h] cx +
mov ecx [ebx] +
mov [eax] ecx +
mov [eax+4] ebx +
mov [ecx+4] eax +
mov [ebx] eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1021731  +
xor al al +
jmp loc_1021769  +
push edi  +
mov edi offset unk_1079A00 +
push edi  +
call ds:RtlEnterCriticalSection  +
mov eax [esi] +
mov ecx [esi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
mov eax dword_1079B3C +
mov [esi] eax +
mov dword ptr [esi+4] offset dword_1079B3C +
mov [eax+4] esi +
push edi  +
mov dword_1079B3C esi +
call ds:RtlLeaveCriticalSection  +
mov al 1 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_10217B3  +
mov ecx [ebp+arg_4] +
cmp ecx 20h +
ja loc_10217B3  +
push esi  +
mov esi [eax] +
cmp esi eax +
jz loc_10217AE  +
push ebx  +
push edi  +
lea ebx [ecx+1] +
mov edi esi +
mov esi [esi] +
push ebx  +
lea eax [edi+8] +
push eax  +
call sub_1021773  +
push edi  +
call sub_1021720  +
cmp esi [ebp+arg_0] +
jnz loc_1021793  +
pop edi  +
pop ebx  +
mov al 1 +
pop esi  +
jmp loc_10217B5  +
xor al al +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi offset unk_1079A00 +
push edi  +
call ds:RtlEnterCriticalSection  +
mov esi dword_1079AB0 +
mov eax offset dword_1079AB0 +
jmp loc_10217E8  +
mov ecx [esi+3Ch] +
cmp ecx [ebp+arg_0] +
jz loc_10217FB  +
mov esi [esi] +
cmp esi eax +
jnz loc_10217DE  +
push edi  +
call ds:RtlLeaveCriticalSection  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
push edi  +
call ds:RtlLeaveCriticalSection  +
cmp dword ptr [esi+40h] 0 +
jz loc_102180E  +
cmp [ebp+arg_4] 0 +
jnz loc_10217F3  +
mov eax esi +
jmp loc_10217F5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx dword_1079AB0 +
push esi  +
mov esi offset dword_1079AB0 +
jmp loc_1021834  +
mov eax [ebp+arg_4] +
cmp eax [ecx+3Ch] +
jz loc_102183F  +
mov ecx [ecx] +
cmp ecx esi +
jnz loc_102182A  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
mov eax [ecx] +
mov edx [ecx+4] +
mov [edx] eax +
mov [eax+4] edx +
mov eax dword_1079AB0 +
mov [ecx] eax +
mov [ecx+4] esi +
mov esi [ebp+arg_0] +
mov [eax+4] ecx +
lea edx [ecx+10h] +
mov dword_1079AB0 ecx +
mov eax [edx] +
jmp loc_102186D  +
cmp esi [eax+18h] +
jz loc_102187A  +
mov eax [eax] +
cmp eax edx +
jnz loc_1021866  +
push ecx  +
push esi  +
call sub_1021586  +
jmp loc_102183A  +
mov ecx [eax] +
mov esi [eax+4] +
mov [esi] ecx +
mov [ecx+4] esi +
mov ecx [edx] +
mov [eax] ecx +
mov [eax+4] edx +
mov [ecx+4] eax +
mov [edx] eax +
jmp loc_102183A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx dword_1079AB0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
mov esi offset dword_1079AB0 +
jmp loc_10218CD  +
lea edx [ecx+10h] +
mov eax [edx] +
jmp loc_10218BF  +
cmp ebx [eax+18h] +
jz loc_10218D8  +
mov eax [eax] +
cmp eax edx +
jnz loc_10218B8  +
cmp dword ptr [ecx+3Ch] 0 +
jnz loc_10218CB  +
mov edi ecx +
mov ecx [ecx] +
cmp ecx esi +
jnz loc_10218B1  +
push edi  +
push ebx  +
call sub_1021586  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edx edx +
push 1Dh  +
pop ecx  +
mov eax esi +
div  ecx +
mov eax dword_1079AAC +
and [ebp+var_4] 0 +
lea edx [eax+edx*8] +
mov ecx [edx] +
cmp ecx edx +
jz loc_1021981  +
mov ebx [ebp+arg_4] +
inc [ebp+var_4]  +
mov eax ecx +
mov ecx [ecx] +
cmp [eax+28h] esi +
jnz loc_1021927  +
test esi esi +
jnz loc_102192D  +
movzx edi byte ptr [ebx+50h] +
cmp edi [eax+3Ch] +
jz loc_102192D  +
cmp ecx edx +
jnz loc_102190E  +
jmp loc_1021981  +
cmp dword ptr [eax+38h] 0 +
jnz loc_1021951  +
cmp [ebp+var_4] 28h +
jbe loc_1021983  +
mov ecx [eax] +
mov esi [eax+4] +
mov [esi] ecx +
mov [ecx+4] esi +
mov ecx [edx] +
mov [eax] ecx +
mov [eax+4] edx +
mov [ecx+4] eax +
mov [edx] eax +
jmp loc_1021983  +
mov ecx [eax+78h] +
cmp ecx [ebx+10h] +
jnz loc_1021961  +
mov ecx [eax+7Ch] +
cmp ecx [ebx+14h] +
jz loc_1021933  +
push 4  +
lea esi [ebx+18h] +
pop ecx  +
mov edi offset loc_100176C +
xor ebx ebx +
cmps   +
jnz loc_1021981  +
mov ecx [ebp+arg_4] +
mov cl [ecx+2Dh] +
test cl cl +
jz loc_1021933  +
cmp cl 24h +
jz loc_1021933  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_1079AB8 +
mov ecx offset dword_1079AB8 +
jmp loc_10219AA  +
mov edx [eax+8] +
cmp edx [ebp+arg_0] +
jz loc_10219B0  +
mov eax [eax] +
cmp eax ecx +
jnz loc_10219A0  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_1021A67  +
cmp [ebp+arg_4] 0 +
push ebx  +
push esi  +
jz loc_1021A1B  +
mov eax [edi+8] +
test eax eax +
jz loc_1021A1B  +
cmp dword ptr [eax+48h] 0 +
mov esi ds:fwprintf +
jz loc_10219FC  +
mov ecx eax +
mov eax [ecx+48h] +
add eax ecx +
jz loc_10219FC  +
push eax  +
push offset aS  +
push [ebp+arg_4]  +
call esi  +
add esp 0Ch +
mov eax [edi+8] +
movzx ecx byte ptr [eax+22h] +
push ecx  +
movzx ecx byte ptr [eax+24h] +
movzx eax byte ptr [eax+25h] +
push ecx  +
push eax  +
push offset aTypeDLevelDVer  +
push [ebp+arg_4]  +
call esi  +
add esp 14h +
mov eax [edi+8] +
test eax eax +
jz loc_1021A37  +
cmp byte ptr [edi+21h] 0 +
jz loc_1021A37  +
push eax  +
push 0  +
push hHeap  +
call ds:HeapFree  +
lea ebx [edi+28h] +
mov esi [ebx] +
jmp loc_1021A52  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
mov [ecx] eax +
push edx  +
mov [eax+4] ecx +
call sub_102C537  +
cmp ebx esi +
jnz loc_1021A3E  +
push edi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+0Ch] +
test eax eax +
jz loc_1021A87  +
push eax  +
call sub_102C758  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 80Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
mov [ebp+var_80C] esi +
test ebx ebx +
jz loc_1021BC3  +
test esi esi +
jz loc_1021AFB  +
mov eax [ebx+10h] +
test eax eax +
jnz loc_1021AEB  +
lea eax [ebx+1Ch] +
push eax  +
push 400h  +
lea eax [ebp+var_804] +
push eax  +
call sub_1034A70  +
push eax  +
push offset aS_0  +
push esi  +
call ds:fwprintf  +
add esp 0Ch +
push edi  +
lea edi [ebx+2Ch] +
mov [ebp+var_808] 100h +
mov esi [edi] +
jmp loc_1021B27  +
push [ebp+var_80C]  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
mov [ecx] eax +
push edx  +
mov [eax+4] ecx +
call sub_10219B9  +
cmp edi esi +
jnz loc_1021B0D  +
add edi 8 +
dec [ebp+var_808]  +
jnz loc_1021B09  +
lea edi [ebx+0C38h] +
mov esi [edi] +
jmp loc_1021B54  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
mov [ecx] eax +
push edx  +
mov [eax+4] ecx +
call sub_1021A71  +
cmp edi esi +
jnz loc_1021B40  +
mov edi ds:HeapFree +
lea eax [ebx+82Ch] +
mov esi [eax] +
jmp loc_1021B87  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call edi  +
lea eax [ebx+82Ch] +
cmp eax esi +
jnz loc_1021B68  +
lea esi [ebx+838h] +
mov [ebp+var_808] 100h +
mov eax [esi] +
test eax eax +
jz loc_1021BAC  +
push eax  +
push 0  +
push hHeap  +
call edi  +
add esi 4 +
dec [ebp+var_808]  +
jnz loc_1021B9B  +
push ebx  +
push 0  +
push hHeap  +
call edi  +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:HeapFree +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+8] +
test eax eax +
jz loc_1021BFA  +
push eax  +
push 0  +
push hHeap  +
call esi  +
mov eax [edi+0Ch] +
test eax eax +
jz loc_1021C0C  +
push eax  +
push 0  +
push hHeap  +
call esi  +
push edi  +
push 0  +
push hHeap  +
call esi  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
lea edi [ebx+10h] +
mov esi [edi] +
jmp loc_1021C48  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
mov [ecx] eax +
push edx  +
mov [eax+4] ecx +
call sub_1021BD8  +
cmp edi esi +
jnz loc_1021C34  +
mov eax [ebx+8] +
mov esi ds:HeapFree +
xor edi edi +
cmp eax edi +
jz loc_1021C65  +
push eax  +
push edi  +
push hHeap  +
call esi  +
mov eax [ebx+0Ch] +
cmp eax edi +
jz loc_1021C76  +
push eax  +
push edi  +
push hHeap  +
call esi  +
push ebx  +
push edi  +
push hHeap  +
call esi  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
and [ebp+var_4] 0 +
or eax [ebp+arg_4] +
jz locret_1021D03  +
push ebx  +
push edi  +
mov ebx offset unk_1079A00 +
push ebx  +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079B24 +
mov edi offset dword_1079B24 +
cmp eax edi +
jz loc_1021CF7  +
push esi  +
mov ecx [ebp+arg_8] +
cmp ecx [eax+18h] +
jnz loc_1021CEB  +
mov esi [eax+0Ch] +
mov ecx [eax+8] +
cmp [ebp+arg_4] esi +
jb loc_1021CEB  +
ja loc_1021CD5  +
cmp [ebp+arg_0] ecx +
jb loc_1021CEB  +
mov edx [eax+10h] +
add edx ecx +
mov ecx [eax+14h] +
adc ecx esi +
cmp [ebp+arg_4] ecx +
jb loc_1021CF3  +
ja loc_1021CEB  +
cmp [ebp+arg_0] edx +
jb loc_1021CF3  +
mov eax [eax] +
cmp eax edi +
jnz loc_1021CBB  +
jmp loc_1021CF6  +
mov [ebp+var_4] eax +
pop esi  +
push ebx  +
call ds:RtlLeaveCriticalSection  +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
mov eax edi +
or eax ebx +
jz loc_1021D84  +
push esi  +
push 48h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_1021D83  +
push 48h  +
push 0  +
push esi  +
call memset  +
lea eax [esi+8] +
mov [esi+10h] edi +
add esp 0Ch +
mov [esi+0Ch] eax +
mov [eax] eax +
mov eax [ebp+arg_8] +
mov edi offset unk_1079A00 +
push edi  +
mov [esi+14h] ebx +
mov [esi+28h] eax +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079AC0 +
mov [esi] eax +
mov dword ptr [esi+4] offset dword_1079AC0 +
mov [eax+4] esi +
push edi  +
mov dword_1079AC0 esi +
call ds:RtlLeaveCriticalSection  +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1021DA0  +
xor al al +
jmp loc_1021E1F  +
push ebx  +
push edi  +
mov edi offset unk_1079A00 +
push edi  +
call ds:RtlEnterCriticalSection  +
mov eax [esi] +
mov ecx [esi+4] +
mov [ecx] eax +
push edi  +
mov [eax+4] ecx +
call ds:RtlLeaveCriticalSection  +
mov eax [esi+24h] +
mov ebx ds:HeapFree +
test eax eax +
jz loc_1021DD7  +
push eax  +
push 0  +
push hHeap  +
call ebx  +
mov eax [esi+20h] +
test eax eax +
jz loc_1021DE9  +
push eax  +
push 0  +
push hHeap  +
call ebx  +
lea eax [esi+8] +
mov edi [eax] +
jmp loc_1021E0C  +
mov edx edi +
mov eax [edx] +
mov ecx [edx+4] +
mov edi [edi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call ebx  +
lea eax [esi+8] +
cmp eax edi +
jnz loc_1021DF0  +
push esi  +
push 0  +
push hHeap  +
call ebx  +
pop edi  +
mov al 1 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi offset unk_1079A00 +
push esi  +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079AC0 +
mov ecx offset dword_1079AC0 +
jmp loc_1021E60  +
cmp byte ptr [eax+44h] 0 +
jnz loc_1021E5E  +
mov edx [eax+10h] +
cmp edx [ebp+arg_0] +
jnz loc_1021E5E  +
mov edx [eax+14h] +
cmp edx [ebp+arg_4] +
jz loc_1021E68  +
mov eax [eax] +
cmp eax ecx +
jnz loc_1021E48  +
xor edi edi +
jmp loc_1021E6A  +
mov edi eax +
push esi  +
call ds:RtlLeaveCriticalSection  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
lea esi [ebx+8] +
mov eax [esi] +
cmp eax esi +
jz loc_1021EC1  +
push edi  +
mov edx eax +
mov ecx [edx+84h] +
mov edi [edx+80h] +
mov eax [eax] +
cmp ecx edi +
jbe loc_1021EBC  +
cmp dword ptr [ebx+3Ch] 0 +
jnz loc_1021EB7  +
cmp dword ptr [edx+28h] 0 +
jnz loc_1021EBC  +
sub ecx edi +
add [ebp+var_4] ecx +
cmp eax esi +
jnz loc_1021E97  +
pop edi  +
mov eax dword_1079A80 +
imul eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
lea esi [ebx+8] +
mov eax [esi] +
cmp eax esi +
jz loc_1021F18  +
push edi  +
mov edx eax +
mov ecx [edx+8Ch] +
mov edi [edx+88h] +
mov eax [eax] +
cmp ecx edi +
jbe loc_1021F13  +
cmp dword ptr [ebx+3Ch] 0 +
jnz loc_1021F0E  +
cmp dword ptr [edx+28h] 0 +
jnz loc_1021F13  +
sub ecx edi +
add [ebp+var_4] ecx +
cmp eax esi +
jnz loc_1021EEE  +
pop edi  +
mov eax dword_1079A80 +
imul eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi offset unk_1079A00 +
push esi  +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079AF8 +
mov ecx offset dword_1079AF8 +
jmp loc_1021F55  +
mov edx [eax+8] +
cmp edx [ebp+arg_0] +
jz loc_1021F5D  +
mov eax [eax] +
cmp eax ecx +
jnz loc_1021F4B  +
xor edi edi +
jmp loc_1021F5F  +
mov edi eax +
push esi  +
call ds:RtlLeaveCriticalSection  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi offset unk_1079A00 +
push edi  +
xor ebx ebx +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079B00 +
mov esi offset dword_1079B00 +
jmp loc_1021FA8  +
mov ecx [eax+8] +
cmp ecx [ebp+arg_0] +
jnz loc_1021FA5  +
mov ecx [eax+0Ch] +
cmp ecx [ebp+arg_4] +
jz loc_1021FB0  +
mov eax [eax] +
inc ebx  +
cmp eax esi +
jnz loc_1021F95  +
xor esi esi +
jmp loc_1021FD4  +
cmp ebx 28h +
jbe loc_1021FD2  +
mov ecx [eax] +
mov edx [eax+4] +
mov [edx] ecx +
mov [ecx+4] edx +
mov ecx dword_1079B00 +
mov [eax] ecx +
mov [eax+4] esi +
mov [ecx+4] eax +
mov dword_1079B00 eax +
mov esi eax +
push edi  +
call ds:RtlLeaveCriticalSection  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi offset unk_1079A00 +
push edi  +
xor ebx ebx +
call ds:RtlEnterCriticalSection  +
mov esi dword_1079B00 +
mov edx [ebp+arg_8] +
mov eax offset dword_1079B00 +
jmp loc_102202A  +
mov ecx [esi+18h] +
cmp ecx [ebp+arg_0] +
jnz loc_1022027  +
mov ecx [esi+1Ch] +
cmp ecx [ebp+arg_4] +
jnz loc_1022027  +
test edx edx +
jz loc_102203C  +
cmp edx esi +
jnz loc_102203C  +
mov esi [esi] +
inc ebx  +
cmp esi eax +
jnz loc_102200F  +
mov eax dword_1079B08 +
xor ecx ecx +
mov esi offset dword_1079B08 +
jmp loc_102208A  +
cmp ebx 28h +
jbe loc_102205F  +
mov ecx [esi] +
mov edx [esi+4] +
mov [edx] ecx +
mov [ecx+4] edx +
mov ecx dword_1079B00 +
mov [esi] ecx +
mov [esi+4] eax +
mov [ecx+4] esi +
mov dword_1079B00 esi +
push edi  +
call ds:RtlLeaveCriticalSection  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov ebx [eax+18h] +
cmp ebx [ebp+arg_0] +
jnz loc_1022087  +
mov ebx [eax+1Ch] +
cmp ebx [ebp+arg_4] +
jnz loc_1022087  +
test edx edx +
jz loc_1022092  +
cmp edx eax +
jnz loc_1022092  +
mov eax [eax] +
inc ecx  +
cmp eax esi +
jnz loc_102206F  +
xor esi esi +
jmp loc_102205F  +
cmp ecx 28h +
jbe loc_10220B4  +
mov ecx [eax] +
mov edx [eax+4] +
mov [edx] ecx +
mov [ecx+4] edx +
mov ecx dword_1079B08 +
mov [eax] ecx +
mov [eax+4] esi +
mov [ecx+4] eax +
mov dword_1079B08 eax +
mov esi eax +
jmp loc_102205F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi offset unk_1079A00 +
push edi  +
xor ebx ebx +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079B08 +
mov esi offset dword_1079B08 +
jmp loc_10220F2  +
mov ecx [eax+8] +
cmp ecx [ebp+arg_0] +
jnz loc_10220EF  +
mov ecx [eax+0Ch] +
cmp ecx [ebp+arg_4] +
jz loc_10220FA  +
mov eax [eax] +
inc ebx  +
cmp eax esi +
jnz loc_10220DF  +
xor esi esi +
jmp loc_102211E  +
cmp ebx 28h +
jbe loc_102211C  +
mov ecx [eax] +
mov edx [eax+4] +
mov [edx] ecx +
mov [ecx+4] edx +
mov ecx dword_1079B08 +
mov [eax] ecx +
mov [eax+4] esi +
mov [ecx+4] eax +
mov dword_1079B08 eax +
mov esi eax +
push edi  +
call ds:RtlLeaveCriticalSection  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
xor esi esi +
mov [ebp+var_4] esi +
cmp eax esi +
jnz loc_102214A  +
xor eax eax +
jmp loc_10221C8  +
mov ecx [ebp+arg_4] +
add ecx eax +
mov edx eax +
cmp eax ecx +
jz loc_1022160  +
cmp byte ptr [edx] 3Fh +
jz loc_1022160  +
inc esi  +
inc edx  +
cmp edx ecx +
jnz loc_1022155  +
cmp byte ptr [edx-1] 2Fh +
jnz loc_1022167  +
dec esi  +
push ebx  +
push edi  +
lea ebx [esi+eax] +
mov cl [ebx] +
push esi  +
push eax  +
mov byte ptr [ebp+arg_4+3] cl +
mov byte ptr [ebx] 0 +
call sub_102123C  +
push offset unk_1079A00  +
movzx esi ax +
call ds:RtlEnterCriticalSection  +
mov ecx dword_1079B10 +
movzx eax si +
lea edi [ecx+eax*8] +
mov esi [edi] +
jmp loc_10221B0  +
push dword ptr [esi+38h]  +
push [ebp+arg_0]  +
call ds:_stricmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10221CD  +
mov esi [esi] +
inc [ebp+var_4]  +
cmp esi edi +
jnz loc_1022199  +
push offset unk_1079A00  +
call ds:RtlLeaveCriticalSection  +
mov al byte ptr [ebp+arg_4+3] +
mov [ebx] al +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 8  +
cmp [ebp+var_4] 14h +
jbe loc_10221E9  +
mov eax [esi] +
mov ecx [esi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
mov eax [edi] +
mov [esi] eax +
mov [esi+4] edi +
mov [eax+4] esi +
mov [edi] esi +
push offset unk_1079A00  +
call ds:RtlLeaveCriticalSection  +
mov eax esi +
jmp loc_10221C6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+Source1] 0 +
jnz loc_102220E  +
xor eax eax +
pop ebp  +
retn 0Ch  +
push ebx  +
push esi  +
push edi  +
mov ebx offset unk_1079A00 +
push ebx  +
call ds:RtlEnterCriticalSection  +
mov esi dword_1079B14 +
mov edi offset dword_1079B14 +
jmp loc_1022252  +
mov ax [esi+20h] +
cmp ax [ebp+arg_0] +
jnz loc_1022250  +
mov eax [esi+24h] +
cmp eax [ebp+arg_4] +
jnz loc_1022250  +
push 10h  +
lea eax [esi+28h] +
push eax  +
push [ebp+Source1]  +
call ds:RtlCompareMemory  +
cmp eax 10h +
jz loc_1022258  +
mov esi [esi] +
cmp esi edi +
jnz loc_102222A  +
xor esi esi +
push ebx  +
call ds:RtlLeaveCriticalSection  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
jmp loc_102220A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi offset unk_1079A00 +
push esi  +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079B1C +
mov ecx offset dword_1079B1C +
jmp loc_1022294  +
mov edx [eax+8] +
cmp edx [ebp+arg_0] +
jz loc_102229C  +
mov eax [eax] +
cmp eax ecx +
jnz loc_102228A  +
xor edi edi +
jmp loc_102229E  +
mov edi eax +
push esi  +
call ds:RtlLeaveCriticalSection  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi offset unk_1079A00 +
push edi  +
xor esi esi +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079B2C +
cmp eax offset dword_1079B2C +
jz loc_10222E0  +
mov ecx [eax] +
mov esi eax +
mov eax [eax+4] +
mov [eax] ecx +
mov [ecx+4] eax +
mov ebx ds:RtlLeaveCriticalSection +
push edi  +
call ebx  +
test esi esi +
jnz loc_1022312  +
push 210h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_1022312  +
push 0Eh  +
call ds:SetLastError  +
xor eax eax +
jmp loc_102234B  +
push 210h  +
push 0  +
push esi  +
call memset  +
mov eax [ebp+arg_0] +
add esp 0Ch +
push edi  +
mov [esi+8] eax +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079AF8 +
mov [esi] eax +
mov dword ptr [esi+4] offset dword_1079AF8 +
mov [eax+4] esi +
push edi  +
mov dword_1079AF8 esi +
call ebx  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov esi offset unk_1079A00 +
push esi  +
xor ebx ebx +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079B34 +
cmp eax offset dword_1079B34 +
jz loc_1022385  +
mov ecx [eax] +
mov ebx eax +
mov eax [eax+4] +
mov [eax] ecx +
mov [ecx+4] eax +
push esi  +
call ds:RtlLeaveCriticalSection  +
mov edi 2C8h +
test ebx ebx +
jnz loc_10223B6  +
push edi  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_10223B6  +
push 0Eh  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1022427  +
push edi  +
push 0  +
push ebx  +
call memset  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_C] +
mov [ebx+8] eax +
mov eax [ebp+arg_4] +
mov [ebx+0Ch] eax +
mov ax [ebp+arg_8] +
add esp 0Ch +
cmp [ebp+arg_10] 0 +
mov [ebx+2A4h] ax +
mov [ebx+2A8h] ecx +
jz loc_1022400  +
cmp ax 17h +
jnz loc_1022400  +
mov esi [ebp+arg_10] +
lea edi [ebx+2ACh] +
movs   +
movs   +
movs   +
movs   +
mov esi offset unk_1079A00 +
push esi  +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079B00 +
mov [ebx] eax +
mov dword ptr [ebx+4] offset dword_1079B00 +
mov [eax+4] ebx +
push esi  +
mov dword_1079B00 ebx +
call ds:RtlLeaveCriticalSection  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push 38h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_102245B  +
push 0Eh  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10224BA  +
push esi  +
push 38h  +
push 0  +
push ebx  +
call memset  +
mov esi [ebp+Source1] +
mov ax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
add esp 0Ch +
mov [ebx+20h] ax +
mov [ebx+24h] ecx +
test esi esi +
jz loc_102248D  +
cmp ax 17h +
jnz loc_102248D  +
push edi  +
lea edi [ebx+28h] +
movs   +
movs   +
movs   +
movs   +
pop edi  +
mov esi offset unk_1079A00 +
push esi  +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079B14 +
mov [ebx] eax +
mov dword ptr [ebx+4] offset dword_1079B14 +
mov [eax+4] ebx +
push esi  +
mov dword_1079B14 ebx +
call ds:RtlLeaveCriticalSection  +
mov eax ebx +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+Source1]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
call sub_10221FD  +
test eax eax +
jnz loc_10224E1  +
pop ebp  +
jmp loc_1022433  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 48h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_1022512  +
push 0Eh  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1022553  +
push edi  +
push 48h  +
push 0  +
push esi  +
call memset  +
mov eax [ebp+arg_0] +
add esp 0Ch +
mov edi offset unk_1079A00 +
push edi  +
mov [esi+8] eax +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079B1C +
mov [esi] eax +
mov dword ptr [esi+4] offset dword_1079B1C +
mov [eax+4] esi +
push edi  +
mov dword_1079B1C esi +
call ds:RtlLeaveCriticalSection  +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_102226B  +
test eax eax +
jnz loc_1022574  +
pop ebp  +
jmp loc_10224EA  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi offset unk_1079A00 +
push esi  +
xor edi edi +
call ds:RtlEnterCriticalSection  +
mov eax [ebp+arg_0] +
mov ecx dword_1079B10 +
lea ecx [ecx+eax*8] +
mov eax [ecx] +
cmp eax ecx +
jz loc_10225B0  +
mov ecx [eax] +
mov edi eax +
mov eax [eax+4] +
mov [eax] ecx +
mov [ecx+4] eax +
push esi  +
call ds:RtlLeaveCriticalSection  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
mov esi offset unk_1079A00 +
push esi  +
xor edi edi +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079B14 +
cmp eax offset dword_1079B14 +
jz loc_10225EE  +
mov ecx [eax] +
mov edi eax +
mov eax [eax+4] +
mov [eax] ecx +
mov [ecx+4] eax +
push esi  +
call ds:RtlLeaveCriticalSection  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi offset unk_1079A00 +
push esi  +
xor edi edi +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079B1C +
cmp eax offset dword_1079B1C +
jz loc_1022629  +
mov ecx [eax] +
mov edi eax +
mov eax [eax+4] +
mov [eax] ecx +
mov [ecx+4] eax +
push esi  +
call ds:RtlLeaveCriticalSection  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_102264F  +
push 57h  +
pop eax  +
jmp loc_10227F9  +
mov eax lpFileName +
push edi  +
test eax eax +
jz loc_10227C2  +
cmp [ebp+arg_4] 0 +
jz loc_10227C2  +
mov edi ds:fprintf +
push ebx  +
push dword ptr [esi+8]  +
mov ebx offset aD_4 +
push ebx  +
push eax  +
call edi  +
push dword ptr [esi+0Ch]  +
push ebx  +
push lpFileName  +
call edi  +
push dword ptr [esi+10h]  +
push ebx  +
push lpFileName  +
call edi  +
push dword ptr [esi+14h]  +
push ebx  +
push lpFileName  +
call edi  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+38h]  +
push offset aI64u_1  +
push lpFileName  +
call edi  +
add esp 40h +
push dword ptr [esi+44h]  +
push dword ptr [esi+40h]  +
push offset aI64u_1  +
push lpFileName  +
call edi  +
mov eax [esi+48h] +
sub eax [esi+50h] +
mov ecx [esi+4Ch] +
sbb ecx [esi+54h] +
push ecx  +
push eax  +
push offset aI64u_1  +
push lpFileName  +
call edi  +
push dword ptr [esi+64h]  +
push dword ptr [esi+60h]  +
push offset aI64u_1  +
push lpFileName  +
call edi  +
push dword ptr [esi+18h]  +
push ebx  +
push lpFileName  +
call edi  +
push dword ptr [esi+1Ch]  +
push ebx  +
push lpFileName  +
call edi  +
add esp 48h +
push dword ptr [esi+20h]  +
push ebx  +
push lpFileName  +
call edi  +
push dword ptr [esi+24h]  +
push ebx  +
push lpFileName  +
call edi  +
push dword ptr [esi+28h]  +
push ebx  +
push lpFileName  +
call edi  +
movsx eax word ptr [esi+68h] +
push eax  +
push offset aHd  +
push lpFileName  +
call edi  +
push dword ptr [esi+30h]  +
push ebx  +
push lpFileName  +
call edi  +
movsx eax word ptr [esi+6Ah] +
push eax  +
mov ebx offset aHd +
push ebx  +
push lpFileName  +
call edi  +
add esp 48h +
movsx eax word ptr [esi+6Ch] +
push eax  +
push ebx  +
push lpFileName  +
call edi  +
movsx eax word ptr [esi+6Eh] +
push eax  +
push ebx  +
push lpFileName  +
call edi  +
movsx eax word ptr [esi+70h] +
push eax  +
push ebx  +
push lpFileName  +
call edi  +
movsx eax word ptr [esi+72h] +
push eax  +
push ebx  +
push lpFileName  +
call edi  +
movsx eax word ptr [esi+74h] +
push eax  +
push ebx  +
push lpFileName  +
call edi  +
push dword ptr [esi+78h]  +
push offset aD_0  +
push lpFileName  +
call edi  +
add esp 48h +
pop ebx  +
mov edi offset unk_1079A00 +
push edi  +
call ds:RtlEnterCriticalSection  +
mov eax [esi] +
mov ecx [esi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
mov eax dword_1079B2C +
mov [esi] eax +
mov dword ptr [esi+4] offset dword_1079B2C +
mov [eax+4] esi +
push edi  +
mov dword_1079B2C esi +
call ds:RtlLeaveCriticalSection  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1022818  +
push 57h  +
pop eax  +
jmp loc_1022C28  +
mov eax dword_1079A74 +
push edi  +
test eax eax +
jz loc_1022BF1  +
cmp [ebp+arg_4] 0 +
jz loc_1022BF1  +
mov edi ds:fprintf +
push ebx  +
push dword ptr [esi+0Ch]  +
mov ebx offset aI64u_1 +
push dword ptr [esi+8]  +
push ebx  +
push eax  +
call edi  +
push dword ptr [esi+10h]  +
push offset aD_4  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+20h]  +
push offset aD_4  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+28h]  +
push offset aD_4  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+2Ch]  +
push offset aD_4  +
push dword_1079A74  +
call edi  +
add esp 40h +
push dword ptr [esi+48h]  +
push offset aD_4  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+4Ch]  +
push offset aD_4  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+54h]  +
push dword ptr [esi+50h]  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+5Ch]  +
push dword ptr [esi+58h]  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+64h]  +
push dword ptr [esi+60h]  +
push ebx  +
push dword_1079A74  +
call edi  +
add esp 48h +
push dword ptr [esi+6Ch]  +
push dword ptr [esi+68h]  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+74h]  +
push dword ptr [esi+70h]  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+7Ch]  +
push dword ptr [esi+78h]  +
push ebx  +
push dword_1079A74  +
call edi  +
movsx eax word ptr [esi+80h] +
push eax  +
push offset aHd  +
push dword_1079A74  +
call edi  +
movsx eax word ptr [esi+82h] +
push eax  +
push offset aHd  +
push dword_1079A74  +
call edi  +
add esp 48h +
push dword ptr [esi+8Ch]  +
push dword ptr [esi+88h]  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+94h]  +
push dword ptr [esi+90h]  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+9Ch]  +
push dword ptr [esi+98h]  +
push ebx  +
push dword_1079A74  +
call edi  +
movsx eax word ptr [esi+0B4h] +
push eax  +
push offset aHd  +
push dword_1079A74  +
call edi  +
movsx eax word ptr [esi+0B6h] +
push eax  +
push offset aHd  +
push dword_1079A74  +
call edi  +
add esp 48h +
push dword ptr [esi+0BCh]  +
push dword ptr [esi+0B8h]  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+0C4h]  +
push dword ptr [esi+0C0h]  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+0CCh]  +
push dword ptr [esi+0C8h]  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+0D4h]  +
push dword ptr [esi+0D0h]  +
push ebx  +
push dword_1079A74  +
call edi  +
add esp 40h +
push dword ptr [esi+0DCh]  +
push dword ptr [esi+0D8h]  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+0ECh]  +
push dword ptr [esi+0E8h]  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+0F4h]  +
push dword ptr [esi+0F0h]  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+0FCh]  +
push dword ptr [esi+0F8h]  +
push ebx  +
push dword_1079A74  +
call edi  +
add esp 40h +
push dword ptr [esi+104h]  +
push dword ptr [esi+100h]  +
push ebx  +
push dword_1079A74  +
call edi  +
movzx eax word ptr [esi+108h] +
push eax  +
mov ebx offset aHd +
push ebx  +
push dword_1079A74  +
call edi  +
movzx eax word ptr [esi+10Ah] +
push eax  +
push ebx  +
push dword_1079A74  +
call edi  +
movzx eax word ptr [esi+2A4h] +
push eax  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+2A8h]  +
push offset aD_4  +
push dword_1079A74  +
call edi  +
movzx eax word ptr [esi+2ACh] +
add esp 40h +
push eax  +
push ebx  +
push dword_1079A74  +
call edi  +
movzx eax word ptr [esi+2AEh] +
push eax  +
push ebx  +
push dword_1079A74  +
call edi  +
movzx eax word ptr [esi+2B0h] +
push eax  +
push ebx  +
push dword_1079A74  +
call edi  +
movzx eax word ptr [esi+2B2h] +
push eax  +
push ebx  +
push dword_1079A74  +
call edi  +
movzx eax word ptr [esi+2B4h] +
push eax  +
push ebx  +
push dword_1079A74  +
call edi  +
movzx eax word ptr [esi+2B6h] +
push eax  +
push ebx  +
push dword_1079A74  +
call edi  +
movzx eax word ptr [esi+2B8h] +
add esp 48h +
push eax  +
push ebx  +
push dword_1079A74  +
call edi  +
movzx eax word ptr [esi+2BAh] +
push eax  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+10Ch]  +
mov ebx offset aD_4 +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+24h]  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+30h]  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+34h]  +
push ebx  +
push dword_1079A74  +
call edi  +
add esp 48h +
push dword ptr [esi+38h]  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+3Ch]  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+40h]  +
push ebx  +
push dword_1079A74  +
call edi  +
push dword ptr [esi+44h]  +
push offset aD_5  +
push dword_1079A74  +
call edi  +
lea ebx [esi+2BCh] +
mov eax [ebx] +
add esp 30h +
test eax eax +
jz loc_1022BE1  +
push eax  +
push offset aS_6  +
push dword_1079A74  +
call edi  +
mov ebx [ebx] +
add esp 0Ch +
test ebx ebx +
jz loc_1022BF0  +
push ebx  +
push 0  +
push hHeap  +
call ds:HeapFree  +
jmp loc_1022BF0  +
push offset aUnknown_2  +
push dword_1079A74  +
call edi  +
pop ecx  +
pop ecx  +
pop ebx  +
mov edi offset unk_1079A00 +
push edi  +
call ds:RtlEnterCriticalSection  +
mov eax [esi] +
mov ecx [esi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
mov eax dword_1079B34 +
mov [esi] eax +
mov dword ptr [esi+4] offset dword_1079B34 +
mov [eax+4] esi +
push edi  +
mov dword_1079B34 esi +
call ds:RtlLeaveCriticalSection  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
mov edx 80070057h +
test ecx ecx +
jz loc_1022C4D  +
cmp ecx 7FFFFFFFh +
jbe loc_1022C4F  +
mov eax edx +
test eax eax +
jl loc_1022CA3  +
push esi  +
mov esi [ebp+arg_C] +
cmp esi 7FFFFFFEh +
jbe loc_1022C69  +
mov ecx [ebp+arg_0] +
mov eax edx +
mov byte ptr [ecx] 0 +
jmp loc_1022CA2  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push edi  +
mov edi ecx +
test ecx ecx +
jz loc_1022C95  +
sub esi ecx +
mov ecx [ebp+arg_8] +
sub ecx eax +
lea edx [esi+edi] +
test edx edx +
jz loc_1022C91  +
mov dl [ecx+eax] +
test dl dl +
jz loc_1022C91  +
mov [eax] dl +
inc eax  +
dec edi  +
jnz loc_1022C7D  +
test edi edi +
jnz loc_1022C9B  +
dec eax  +
mov ebx 8007007Ah +
mov byte ptr [eax] 0 +
pop edi  +
mov eax ebx +
pop ebx  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
shr ecx 1 +
push 0  +
pop eax  +
jz loc_1022CC3  +
cmp ecx 7FFFFFFFh +
jbe loc_1022CC8  +
mov eax 80070057h +
test eax eax +
jl loc_1022D05  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:__imp__vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1022CF5  +
cmp eax esi +
ja loc_1022CF5  +
jnz loc_1022D00  +
jmp loc_1022CFA  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 414h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+PathName] +
push eax  +
mov esi 104h +
push esi  +
call ds:GetTempPathW  +
test eax eax +
jz loc_1022D77  +
cmp eax esi +
ja loc_1022D77  +
lea eax [ebp+TempFileName] +
push eax  +
push 0  +
push offset PrefixString  +
lea eax [ebp+PathName] +
push eax  +
call ds:GetTempFileNameW  +
test eax eax +
jz loc_1022D77  +
lea eax [ebp+TempFileName] +
push eax  +
push [ebp+arg_4]  +
push edi  +
call sub_101F55E  +
and eax 0FFFFh +
jmp loc_1022D7D  +
call ds:GetLastError  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1022DF0  +
push ebx  +
push edi  +
push 38h  +
push 0  +
push esi  +
call memset  +
mov edi [ebp+arg_4] +
add esp 0Ch +
lea eax [esi+30h] +
mov [esi+34h] eax +
mov [eax] eax +
push 20h  +
lea eax [esi+28h] +
push 8  +
mov [esi+2Ch] eax +
mov [eax] eax +
mov [esi+8] edi +
push hHeap  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_1022DEB  +
push edi  +
push offset aDiskD  +
push 20h  +
push ebx  +
call sub_1022CAC  +
add esp 10h +
pop edi  +
mov [esi+0Ch] ebx +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp [ebp+arg_0] ebx +
jz loc_1022E50  +
cmp [ebp+arg_14] ebx +
jz loc_1022E50  +
mov edi ds:HeapAlloc +
push 48h  +
push 8  +
push hHeap  +
call edi  +
mov esi eax +
cmp esi ebx +
jz loc_1022EAC  +
push 48h  +
push ebx  +
push esi  +
call memset  +
mov ebx [ebp+arg_18] +
add esp 0Ch +
cmp ebx 7FFFFFFFh +
jbe loc_1022E59  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
lea eax [ebx+ebx] +
push eax  +
push 8  +
push hHeap  +
call edi  +
mov [esi+40h] eax +
test eax eax +
jnz loc_1022E80  +
push esi  +
push eax  +
push hHeap  +
call ds:HeapFree  +
xor esi esi +
jmp loc_1022EAC  +
push [ebp+arg_14]  +
push ebx  +
push eax  +
call sub_101F55E  +
push dword ptr [esi+40h]  +
call ds:_wcslwr  +
mov eax [ebp+arg_4] +
mov [esi+10h] eax +
mov eax [ebp+arg_8] +
mov [esi+14h] eax +
mov eax [ebp+arg_C] +
mov [esi+18h] eax +
mov eax [ebp+arg_10] +
pop ecx  +
mov [esi+1Ch] eax +
mov eax [ebp+arg_0] +
test esi esi +
mov [eax] esi +
setnz al  +
jmp loc_1022E52  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov ebx offset String +
push ebx  +
call ds:lstrlenW  +
push 0B0h  +
push 8  +
push hHeap  +
mov edi eax +
inc edi  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_1022EF6  +
xor al al +
jmp loc_1022F6D  +
push esi  +
call sub_102138D  +
mov eax [ebp+arg_0] +
push edi  +
push ebx  +
xor edi edi +
push edi  +
push edi  +
push edi  +
mov [esi+3Ch] eax +
push edi  +
lea eax [ebp+var_4] +
push eax  +
call sub_1022DFA  +
test al al +
jnz loc_1022F27  +
push esi  +
push edi  +
push hHeap  +
call ds:HeapFree  +
jmp loc_1022EF2  +
mov edi [ebp+var_4] +
mov ebx offset unk_1079A00 +
push ebx  +
mov [edi+8] esi +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079AB0 +
mov [esi] eax +
mov dword ptr [esi+4] offset dword_1079AB0 +
mov [eax+4] esi +
mov dword_1079AB0 esi +
lea eax [esi+20h] +
mov ecx [eax] +
mov [edi] ecx +
mov [edi+4] eax +
mov [ecx+4] edi +
push ebx  +
mov [eax] edi +
call ds:RtlLeaveCriticalSection  +
mov eax [ebp+arg_4] +
mov [eax] esi +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 38h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_1022F99  +
xor al al +
jmp loc_1022FC6  +
push edi  +
mov edi [ebp+arg_0] +
push edi  +
push esi  +
call sub_1022D92  +
mov [esi+8] edi +
mov eax dword_1079AB8 +
mov [esi] eax +
mov dword ptr [esi+4] offset dword_1079AB8 +
mov [eax+4] esi +
mov eax [ebp+arg_4] +
mov dword_1079AB8 esi +
mov [eax] esi +
mov al 1 +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1022FE4  +
xor al al +
jmp loc_1023043  +
mov eax [esi] +
mov ecx [esi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
mov eax [esi+0Ch] +
test eax eax +
jz loc_1023004  +
push eax  +
push 0  +
push hHeap  +
call ds:HeapFree  +
push ebx  +
lea ebx [esi+30h] +
push edi  +
mov edi [ebx] +
jmp loc_1023017  +
mov eax edi +
mov edi [edi] +
push eax  +
call sub_1023621  +
cmp edi ebx +
jnz loc_102300D  +
lea ebx [esi+28h] +
mov edi [ebx] +
jmp loc_102302C  +
mov eax edi +
mov edi [edi] +
push eax  +
call sub_1021D8F  +
cmp edi ebx +
jnz loc_1023022  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
pop edi  +
mov al 1 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_102305E  +
xor eax eax +
jmp loc_10230A2  +
mov eax [edi] +
push ebx  +
mov ebx [ebp+arg_4] +
jmp loc_102306D  +
cmp [eax+8] ebx +
jz loc_10230A1  +
mov eax [eax] +
cmp eax edi +
jnz loc_1023066  +
push esi  +
push 38h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_10230A0  +
push ebx  +
push esi  +
call sub_1022D92  +
mov [esi+8] ebx +
mov eax [edi] +
mov [esi] eax +
mov [esi+4] edi +
mov [eax+4] esi +
mov [edi] esi +
mov eax esi +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1023101  +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
lea edi [eax+18h] +
mov eax [edi] +
jmp loc_10230CB  +
cmp [eax+8] ebx +
jz loc_10230FF  +
mov eax [eax] +
cmp eax edi +
jnz loc_10230C4  +
push esi  +
push 38h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_10230FE  +
push ebx  +
push esi  +
call sub_1022D92  +
mov [esi+8] ebx +
mov eax [edi] +
mov [esi] eax +
mov [esi+4] edi +
mov [eax+4] esi +
mov [edi] esi +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
test eax eax +
jz locret_102323A  +
lea ecx [eax+30h] +
mov eax [ecx] +
push ebx  +
mov ebx [ebp+arg_4] +
mov [ebp+var_4] ecx +
jmp loc_1023134  +
cmp [eax+3Ch] ebx +
jz loc_1023239  +
mov eax [eax] +
cmp eax ecx +
jnz loc_1023129  +
push esi  +
push edi  +
mov edi ds:HeapAlloc +
push 0B0h  +
push 8  +
push hHeap  +
call edi  +
mov esi eax +
test esi esi +
jz loc_1023237  +
push esi  +
call sub_102138D  +
push 0  +
push ebx  +
mov [esi+3Ch] ebx +
call sub_10217BE  +
mov ebx eax +
mov [ebp+arg_4] ebx +
test ebx ebx +
jz loc_1023226  +
mov eax [ebx+30h] +
test eax eax +
jz loc_10231D2  +
xor ecx ecx +
cmp cx [eax] +
jz loc_10231D2  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1023188  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
push 8  +
push hHeap  +
call edi  +
mov [esi+30h] eax +
test eax eax +
jz loc_10231D2  +
mov edx [ebx+30h] +
mov ecx edx +
lea ebx [ecx+2] +
mov [ebp+arg_0] ebx +
mov bx [ecx] +
inc ecx  +
inc ecx  +
test bx bx +
jnz loc_10231B7  +
sub ecx [ebp+arg_0] +
push edx  +
sar ecx 1 +
inc ecx  +
push ecx  +
push eax  +
call sub_101F55E  +
mov ebx [ebp+arg_4] +
mov eax [ebx+34h] +
test eax eax +
jz loc_1023226  +
xor ecx ecx +
cmp cx [eax] +
jz loc_1023226  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10231E3  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
push 8  +
push hHeap  +
call edi  +
mov [esi+34h] eax +
test eax eax +
jz loc_1023226  +
mov edx [ebx+34h] +
mov ecx edx +
lea ebx [ecx+2] +
mov di [ecx] +
inc ecx  +
inc ecx  +
test di di +
jnz loc_102320F  +
sub ecx ebx +
sar ecx 1 +
push edx  +
inc ecx  +
push ecx  +
push eax  +
call sub_101F55E  +
mov ecx [ebp+var_4] +
mov eax [ecx] +
mov [esi] eax +
mov [esi+4] ecx +
mov [eax+4] esi +
mov [ecx] esi +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:HeapAlloc +
push esi  +
push 28h  +
push 8  +
push hHeap  +
call ebx  +
mov esi eax +
test esi esi +
jnz loc_102326F  +
push 0Eh  +
call ds:SetLastError  +
jmp loc_1023312  +
push edi  +
xor eax eax +
push 0Ah  +
pop ecx  +
mov edi esi +
stos   +
mov eax [ebp+arg_0] +
mov edi [ebp+arg_20] +
mov [esi+8] eax +
mov eax [ebp+arg_4] +
mov [esi+0Ch] eax +
mov eax [ebp+arg_8] +
mov [esi+10h] eax +
mov eax [ebp+arg_C] +
mov [esi+14h] eax +
mov eax [ebp+arg_10] +
mov [esi+18h] eax +
mov eax [ebp+arg_14] +
mov [esi+1Ch] eax +
mov eax [ebp+arg_18] +
mov [esi+20h] eax +
test edi edi +
jz loc_10232CB  +
lea eax [edi+edi+2] +
push eax  +
push 8  +
push hHeap  +
call ebx  +
mov [esi+24h] eax +
test eax eax +
jz loc_10232CB  +
push [ebp+arg_1C]  +
inc edi  +
push edi  +
push eax  +
call sub_101F55E  +
mov edi offset unk_1079A00 +
push edi  +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079B24 +
mov ecx offset dword_1079B24 +
cmp eax ecx +
jz loc_10232FD  +
mov edx [esi+8] +
mov ebx [esi+0Ch] +
cmp ebx [eax+0Ch] +
jb loc_10232FD  +
ja loc_10232F7  +
cmp edx [eax+8] +
jb loc_10232FD  +
mov eax [eax] +
cmp eax ecx +
jnz loc_10232EB  +
mov ecx [eax+4] +
mov [esi] eax +
mov [esi+4] ecx +
mov [ecx] esi +
push edi  +
mov [eax+4] esi +
call ds:RtlLeaveCriticalSection  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset unk_1079A00  +
call ds:RtlEnterCriticalSection  +
mov esi dword_1079AC0 +
cmp esi offset dword_1079AC0 +
jz loc_10233C0  +
push ebx  +
push edi  +
mov edi ds:lstrlenW +
cmp dword ptr [esi+20h] 0 +
jnz loc_10233B4  +
mov eax [esi+28h] +
cmp eax [ebp+arg_0] +
jnz loc_10233B4  +
mov ebx [esi+18h] +
mov edx [esi+1Ch] +
mov eax ebx +
or eax edx +
jz loc_10233B4  +
mov eax [ebp+arg_8] +
cmp edx eax +
jb loc_10233B4  +
ja loc_1023370  +
cmp ebx [ebp+arg_4] +
jb loc_10233B4  +
mov ecx [ebp+arg_4] +
add ecx [ebp+arg_C] +
adc eax [ebp+arg_10] +
cmp edx eax +
ja loc_10233B4  +
jb loc_1023383  +
cmp ebx ecx +
jnb loc_10233B4  +
push [ebp+lpString]  +
call edi  +
lea eax [eax+eax+2] +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [esi+20h] eax +
test eax eax +
jz loc_10233B4  +
push [ebp+lpString]  +
push [ebp+lpString]  +
call edi  +
inc eax  +
push eax  +
push dword ptr [esi+20h]  +
call sub_101F55E  +
mov esi [esi] +
cmp esi offset dword_1079AC0 +
jnz loc_1023348  +
pop edi  +
pop ebx  +
push offset unk_1079A00  +
call ds:RtlLeaveCriticalSection  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
cmp [ebp+arg_0] esi +
jnz loc_10233EA  +
xor eax eax +
jmp loc_1023544  +
push edi  +
mov edi offset unk_1079A00 +
push edi  +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079B44 +
cmp eax offset dword_1079B44 +
jz loc_102340F  +
mov ecx [eax] +
mov esi eax +
mov eax [eax+4] +
mov [eax] ecx +
mov [ecx+4] eax +
push ebx  +
mov ebx ds:RtlLeaveCriticalSection +
push edi  +
call ebx  +
test esi esi +
jnz loc_1023440  +
push 40h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_1023440  +
push 0Eh  +
call ds:SetLastError  +
jmp loc_1023500  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
and [ebp+var_4] 0 +
add ecx eax +
jmp loc_1023457  +
cmp byte ptr [eax] 3Fh +
jz loc_102345B  +
inc [ebp+var_4]  +
inc eax  +
cmp eax ecx +
jnz loc_102344E  +
cmp byte ptr [eax-1] 2Fh +
jnz loc_1023468  +
dec [ebp+var_4]  +
mov byte ptr [eax-1] 0 +
push 40h  +
push 0  +
push esi  +
call memset  +
mov eax [ebp+var_4] +
add esp 0Ch +
inc eax  +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [esi+38h] eax +
test eax eax +
jnz loc_10234B2  +
push edi  +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079B44 +
mov [esi] eax +
mov dword ptr [esi+4] offset dword_1079B44 +
mov [eax+4] esi +
push edi  +
mov dword_1079B44 esi +
call ebx  +
jmp loc_1023500  +
mov ecx [ebp+var_4] +
push ecx  +
push [ebp+arg_0]  +
inc ecx  +
push ecx  +
push eax  +
call sub_1022C32  +
test eax eax +
jge loc_1023504  +
push edi  +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079B44 +
mov [esi] eax +
mov dword ptr [esi+4] offset dword_1079B44 +
mov [eax+4] esi +
push edi  +
mov dword_1079B44 esi +
call ebx  +
mov eax [esi+38h] +
test eax eax +
jz loc_10234FC  +
push eax  +
push 0  +
push hHeap  +
call ds:HeapFree  +
and dword ptr [esi+38h] 0 +
xor eax eax +
jmp loc_1023542  +
mov eax [ebp+var_4] +
mov ecx [esi+38h] +
push eax  +
mov byte ptr [eax+ecx] 0 +
push dword ptr [esi+38h]  +
call sub_102123C  +
movzx eax ax +
push edi  +
mov [ebp+arg_0] eax +
call ds:RtlEnterCriticalSection  +
mov ecx dword_1079B10 +
movzx eax word ptr [ebp+arg_0] +
lea eax [ecx+eax*8] +
mov ecx [eax] +
mov [esi] ecx +
mov [esi+4] eax +
mov [ecx+4] esi +
push edi  +
mov [eax] esi +
call ebx  +
mov eax esi +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1022133  +
test eax eax +
jnz loc_1023568  +
pop ebp  +
jmp loc_10233D5  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1023585  +
xor al al +
jmp loc_1023617  +
mov eax [esi] +
mov ecx [esi+4] +
push ebx  +
push edi  +
mov [ecx] eax +
mov [eax+4] ecx +
push 0  +
lea eax [esi+10h] +
push eax  +
call sub_1021773  +
mov ebx ds:HeapFree +
lea eax [esi+18h] +
mov edi [eax] +
jmp loc_10235C5  +
mov edx edi +
mov eax [edx] +
mov ecx [edx+4] +
mov edi [edi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call ebx  +
lea eax [esi+18h] +
cmp edi eax +
jnz loc_10235A9  +
lea eax [esi+20h] +
mov edi [eax] +
jmp loc_10235EC  +
mov edx edi +
mov eax [edx] +
mov ecx [edx+4] +
mov edi [edi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call ebx  +
lea eax [esi+20h] +
cmp edi eax +
jnz loc_10235D0  +
lea eax [esi+8] +
mov edi [eax] +
jmp loc_1023604  +
mov eax edi +
mov edi [edi] +
push eax  +
call sub_1022FD3  +
lea eax [esi+8] +
cmp edi eax +
jnz loc_10235F7  +
push esi  +
push 0  +
push hHeap  +
call ebx  +
pop edi  +
mov al 1 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+lpMem] +
test ebx ebx +
jnz loc_1023635  +
xor al al +
jmp loc_10237CC  +
push esi  +
push edi  +
mov esi offset unk_1079A00 +
push esi  +
call ds:RtlEnterCriticalSection  +
mov eax [ebx] +
mov ecx [ebx+4] +
mov [ecx] eax +
push esi  +
mov [eax+4] ecx +
call ds:RtlLeaveCriticalSection  +
lea edi [ebx+8] +
mov esi [edi] +
cmp esi edi +
jz loc_102366D  +
mov eax esi +
mov esi [esi] +
push eax  +
call sub_1023571  +
cmp esi edi +
jnz loc_102365D  +
jmp loc_10236A0  +
and [ebp+lpMem] 0 +
mov eax dword_1079AAC +
mov ecx [ebp+lpMem] +
lea edi [ecx+eax] +
mov esi [edi] +
jmp loc_102368F  +
mov eax esi +
mov esi [esi] +
cmp [eax+2Ch] ebx +
jnz loc_102368F  +
push eax  +
call sub_1023571  +
cmp esi edi +
jnz loc_1023680  +
add [ebp+lpMem] 8 +
cmp [ebp+lpMem] 0E8h +
jb loc_1023671  +
mov esi ds:HeapFree +
lea eax [ebx+10h] +
mov edi [eax] +
jmp loc_1023715  +
mov eax [edi+20h] +
mov [ebp+lpMem] edi +
test eax eax +
jz loc_10236C2  +
push eax  +
push 0  +
push hHeap  +
call esi  +
mov eax [edi+24h] +
test eax eax +
jz loc_10236D4  +
push eax  +
push 0  +
push hHeap  +
call esi  +
mov eax [edi+28h] +
test eax eax +
jz loc_10236E6  +
push eax  +
push 0  +
push hHeap  +
call esi  +
mov eax [edi+2Ch] +
test eax eax +
jz loc_10236F8  +
push eax  +
push 0  +
push hHeap  +
call esi  +
mov edx [ebp+lpMem] +
mov eax [edx] +
mov ecx [edx+4] +
mov edi [edi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call esi  +
lea eax [ebx+10h] +
cmp edi eax +
jnz loc_10236AD  +
lea eax [ebx+18h] +
mov edi [eax] +
jmp loc_102372D  +
mov eax edi +
mov edi [edi] +
push eax  +
call sub_1022FD3  +
lea eax [ebx+18h] +
cmp edi eax +
jnz loc_1023720  +
lea eax [ebx+28h] +
mov edi [eax] +
jmp loc_1023745  +
mov eax edi +
mov edi [edi] +
push eax  +
call sub_1021496  +
lea eax [ebx+28h] +
cmp edi eax +
jnz loc_1023738  +
lea eax [ebx+20h] +
mov edi [eax] +
cmp edi eax +
jz loc_1023789  +
jmp loc_1023757  +
mov edi [ebp+lpMem] +
mov eax [edi] +
mov ecx [edi+4] +
mov [ecx] eax +
mov [ebp+lpMem] eax +
mov [eax+4] ecx +
mov eax [edi+40h] +
test eax eax +
jz loc_1023776  +
push eax  +
push 0  +
push hHeap  +
call esi  +
push edi  +
push 0  +
push hHeap  +
call esi  +
lea eax [ebx+20h] +
cmp [ebp+lpMem] eax +
jnz loc_1023754  +
mov eax [ebx+34h] +
xor edi edi +
cmp eax edi +
jz loc_102379C  +
push eax  +
push edi  +
push hHeap  +
call esi  +
mov eax [ebx+30h] +
cmp eax edi +
jz loc_10237AD  +
push eax  +
push edi  +
push hHeap  +
call esi  +
mov eax [ebx+38h] +
cmp eax edi +
jz loc_10237BE  +
push eax  +
push edi  +
push hHeap  +
call esi  +
push ebx  +
push edi  +
push hHeap  +
call esi  +
pop edi  +
mov al 1 +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_10566D8 +
push ebx  +
push esi  +
mov esi dword_1079AD8 +
xor ebx ebx +
test dword ptr [eax+3B0h] 800h +
push edi  +
jz loc_1023812  +
add eax 334h +
cmp [eax] ebx +
jz loc_1023812  +
push offset aW_0  +
push dword ptr [eax]  +
call ds:_wfopen  +
pop ecx  +
pop ecx  +
mov ebx eax +
mov edi offset dword_1079AD8 +
jmp loc_102382E  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
push ebx  +
mov [ecx] eax +
push edx  +
mov [eax+4] ecx +
call sub_1021AA0  +
cmp esi edi +
jnz loc_1023819  +
test ebx ebx +
jz loc_102383E  +
push ebx  +
call ds:fclose  +
pop ecx  +
mov ebx dword_1079AE0 +
mov esi ds:HeapFree +
jmp loc_1023877  +
mov edi ebx +
mov eax [edi] +
mov ecx [edi+4] +
mov ebx [ebx] +
mov [ecx] eax +
mov [eax+4] ecx +
mov eax [edi+18h] +
test eax eax +
jz loc_102386C  +
push eax  +
push 0  +
push hHeap  +
call esi  +
push edi  +
push 0  +
push hHeap  +
call esi  +
cmp ebx offset dword_1079AE0 +
jnz loc_102384C  +
mov edi dword_1079AB8 +
mov ebx offset dword_1079AB8 +
jmp loc_1023896  +
mov eax edi +
mov edi [edi] +
push eax  +
call sub_1022FD3  +
cmp edi ebx +
jnz loc_102388C  +
mov edi dword_1079AB0 +
mov ebx offset dword_1079AB0 +
jmp loc_10238B1  +
mov eax edi +
mov edi [edi] +
push eax  +
call sub_1023621  +
cmp edi ebx +
jnz loc_10238A7  +
mov ebx dword_1079AE8 +
jmp loc_10238E8  +
mov edi ebx +
mov eax [edi] +
mov ecx [edi+4] +
mov ebx [ebx] +
mov [ecx] eax +
mov [eax+4] ecx +
mov eax [edi+40h] +
test eax eax +
jz loc_10238DD  +
push eax  +
push 0  +
push hHeap  +
call esi  +
push edi  +
push 0  +
push hHeap  +
call esi  +
cmp ebx offset dword_1079AE8 +
jnz loc_10238BD  +
mov edi dword_1079AC0 +
mov ebx offset dword_1079AC0 +
jmp loc_1023907  +
mov eax edi +
mov edi [edi] +
push eax  +
call sub_1021D8F  +
cmp edi ebx +
jnz loc_10238FD  +
mov eax dword_1079AC8 +
mov ecx offset dword_1079AC8 +
jmp loc_1023919  +
mov eax [eax] +
cmp eax ecx +
jnz loc_1023917  +
mov edi dword_1079AF8 +
mov ebx offset dword_1079AF8 +
jmp loc_1023943  +
mov edx edi +
mov eax [edx] +
mov ecx [edx+4] +
mov edi [edi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call esi  +
cmp edi ebx +
jnz loc_102392A  +
mov ebx dword_1079B00 +
jmp loc_102397D  +
mov edi ebx +
mov eax [edi] +
mov ecx [edi+4] +
mov ebx [ebx] +
mov [ecx] eax +
mov [eax+4] ecx +
mov eax [edi+2BCh] +
test eax eax +
jz loc_1023972  +
push eax  +
push 0  +
push hHeap  +
call esi  +
push edi  +
push 0  +
push hHeap  +
call esi  +
cmp ebx offset dword_1079B00 +
jnz loc_102394F  +
mov ebx dword_1079B08 +
jmp loc_10239BB  +
mov edi ebx +
mov eax [edi] +
mov ecx [edi+4] +
mov ebx [ebx] +
mov [ecx] eax +
mov [eax+4] ecx +
mov eax [edi+2BCh] +
test eax eax +
jz loc_10239B0  +
push eax  +
push 0  +
push hHeap  +
call esi  +
push edi  +
push 0  +
push hHeap  +
call esi  +
cmp ebx offset dword_1079B08 +
jnz loc_102398D  +
and [ebp+var_4] 0 +
mov eax dword_1079B10 +
mov ecx [ebp+var_4] +
lea ebx [ecx+eax] +
mov edi [ebx] +
jmp loc_10239EF  +
mov edx edi +
mov eax [edx] +
mov ecx [edx+4] +
mov edi [edi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call esi  +
cmp edi ebx +
jnz loc_10239D6  +
add [ebp+var_4] 8 +
cmp [ebp+var_4] 100h +
jb loc_10239C7  +
mov edi dword_1079B14 +
mov ebx offset dword_1079B14 +
jmp loc_1023A26  +
mov edx edi +
mov eax [edx] +
mov ecx [edx+4] +
mov edi [edi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call esi  +
cmp edi ebx +
jnz loc_1023A0D  +
mov edi dword_1079B1C +
mov ebx offset dword_1079B1C +
jmp loc_1023A50  +
mov edx edi +
mov eax [edx] +
mov ecx [edx+4] +
mov edi [edi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call esi  +
cmp edi ebx +
jnz loc_1023A37  +
mov ebx dword_1079B24 +
jmp loc_1023A87  +
mov edi ebx +
mov eax [edi] +
mov ecx [edi+4] +
mov ebx [ebx] +
mov [ecx] eax +
mov [eax+4] ecx +
mov eax [edi+24h] +
test eax eax +
jz loc_1023A7C  +
push eax  +
push 0  +
push hHeap  +
call esi  +
push edi  +
push 0  +
push hHeap  +
call esi  +
cmp ebx offset dword_1079B24 +
jnz loc_1023A5C  +
mov edi dword_1079B2C +
mov ebx offset dword_1079B2C +
jmp loc_1023AB5  +
mov edx edi +
mov eax [edx] +
mov ecx [edx+4] +
mov edi [edi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call esi  +
cmp edi ebx +
jnz loc_1023A9C  +
mov edi dword_1079B3C +
mov ebx offset dword_1079B3C +
jmp loc_1023ADF  +
mov edx edi +
mov eax [edx] +
mov ecx [edx+4] +
mov edi [edi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call esi  +
cmp edi ebx +
jnz loc_1023AC6  +
mov edi dword_1079B34 +
mov ebx offset dword_1079B34 +
jmp loc_1023B09  +
mov edx edi +
mov eax [edx] +
mov ecx [edx+4] +
mov edi [edi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call esi  +
cmp edi ebx +
jnz loc_1023AF0  +
mov edi dword_1079B44 +
mov ebx offset dword_1079B44 +
jmp loc_1023B33  +
mov edx edi +
mov eax [edx] +
mov ecx [edx+4] +
mov edi [edi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call esi  +
cmp edi ebx +
jnz loc_1023B1A  +
mov esi dword_1079B4C +
mov edi offset dword_1079B4C +
jmp loc_1023B58  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
mov [ecx] eax +
push edx  +
mov [eax+4] ecx +
call sub_1021C22  +
cmp esi edi +
jnz loc_1023B44  +
mov eax dword_1079B5C +
pop edi  +
pop esi  +
pop ebx  +
test eax eax +
jz locret_1023B6E  +
push eax  +
call sub_1047BA6  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+NumberOfBytesWritten] +
cmp ebx 10000h +
jbe loc_1023BCF  +
push edi  +
mov edi ds:WriteFile +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push dword ptr [esi+10004h]  +
lea eax [esi+4] +
push eax  +
push dword ptr [esi]  +
call edi  +
mov eax [ebp+NumberOfBytesWritten] +
add [esi+10008h] eax +
and dword ptr [esi+10004h] 0 +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push ebx  +
push [ebp+lpBuffer]  +
push dword ptr [esi]  +
call edi  +
mov eax [ebp+NumberOfBytesWritten] +
add [esi+10008h] eax +
pop edi  +
jmp loc_1023C22  +
mov eax [esi+10004h] +
lea ecx [eax+ebx] +
cmp ecx 0FFFFh +
jbe loc_1023C03  +
push 0  +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
push eax  +
lea eax [esi+4] +
push eax  +
push dword ptr [esi]  +
call ds:WriteFile  +
mov eax [ebp+NumberOfBytesWritten] +
add [esi+10008h] eax +
and dword ptr [esi+10004h] 0 +
mov eax [esi+10004h] +
push ebx  +
push [ebp+lpBuffer]  +
lea eax [eax+esi+4] +
push eax  +
call memcpy  +
add esp 0Ch +
add [esi+10004h] ebx +
mov eax ebx +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
and [ebp+dwBytes] 0 +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1023C3D  +
push esi  +
mov esi ds:wcstombs_s +
sub eax edx +
sar eax 1 +
push eax  +
push [ebp+arg_0]  +
lea eax [ebp+dwBytes] +
push 0  +
push 0  +
push eax  +
call esi  +
add esp 14h +
test eax eax +
jz loc_1023C6B  +
xor eax eax +
jmp loc_1023CC5  +
inc [ebp+dwBytes]  +
push edi  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_1023CBE  +
mov eax [ebp+arg_0] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1023C8C  +
sub eax edx +
sar eax 1 +
push eax  +
push [ebp+arg_0]  +
lea eax [ebp+dwBytes] +
push [ebp+dwBytes]  +
push edi  +
push eax  +
call esi  +
add esp 14h +
test eax eax +
jz loc_1023CC2  +
push edi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
xor eax eax +
jmp loc_1023CC4  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+lpMem] 0 +
push ebx  +
push esi  +
mov esi [ebp+lpBuffer] +
cmp byte ptr [esi+1000Ch] 0 +
push edi  +
jnz loc_1023D0D  +
push [ebp+NumberOfBytesWritten]  +
call sub_1023C2D  +
mov edi eax +
mov [ebp+lpMem] edi +
test edi edi +
jz loc_1023DF8  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1023D00  +
sub eax edx +
mov ebx eax +
jmp loc_1023D26  +
mov edi [ebp+NumberOfBytesWritten] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1023D15  +
sub eax edx +
sar eax 1 +
lea ebx [eax+eax] +
mov [ebp+lpBuffer] edi +
cmp ebx 10000h +
jbe loc_1023D8E  +
mov edi ds:WriteFile +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push dword ptr [esi+10004h]  +
lea eax [esi+4] +
push eax  +
push dword ptr [esi]  +
call edi  +
mov eax [ebp+NumberOfBytesWritten] +
add [esi+10008h] eax +
and dword ptr [esi+10004h] 0 +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push ebx  +
push [ebp+lpBuffer]  +
push dword ptr [esi]  +
call edi  +
mov eax [ebp+NumberOfBytesWritten] +
add [esi+10008h] eax +
cmp [ebp+lpMem] 0 +
jz loc_1023D89  +
push [ebp+lpMem]  +
push 0  +
push hHeap  +
call ds:HeapFree  +
mov eax [ebp+NumberOfBytesWritten] +
jmp loc_1023DF8  +
mov eax [esi+10004h] +
lea ecx [eax+ebx] +
cmp ecx 0FFFFh +
jbe loc_1023DC2  +
push 0  +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
push eax  +
lea eax [esi+4] +
push eax  +
push dword ptr [esi]  +
call ds:WriteFile  +
mov eax [ebp+NumberOfBytesWritten] +
add [esi+10008h] eax +
and dword ptr [esi+10004h] 0 +
mov eax [esi+10004h] +
push ebx  +
push [ebp+lpBuffer]  +
lea eax [eax+esi+4] +
push eax  +
call memcpy  +
add [esi+10004h] ebx +
add esp 0Ch +
cmp [ebp+lpMem] 0 +
jz loc_1023DF6  +
push [ebp+lpMem]  +
push 0  +
push hHeap  +
call ds:HeapFree  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+lpBuffer] +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1023E0F  +
sub eax edx +
push ebx  +
mov ebx eax +
push esi  +
mov esi [ebp+NumberOfBytesWritten] +
cmp ebx 10000h +
jbe loc_1023E6C  +
push edi  +
mov edi ds:WriteFile +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push dword ptr [esi+10004h]  +
lea eax [esi+4] +
push eax  +
push dword ptr [esi]  +
call edi  +
mov eax [ebp+NumberOfBytesWritten] +
add [esi+10008h] eax +
and dword ptr [esi+10004h] 0 +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push ebx  +
push [ebp+lpBuffer]  +
push dword ptr [esi]  +
call edi  +
mov eax [ebp+NumberOfBytesWritten] +
add [esi+10008h] eax +
pop edi  +
jmp loc_1023EBF  +
mov eax [esi+10004h] +
lea ecx [eax+ebx] +
cmp ecx 0FFFFh +
jbe loc_1023EA0  +
push 0  +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
push eax  +
lea eax [esi+4] +
push eax  +
push dword ptr [esi]  +
call ds:WriteFile  +
mov eax [ebp+NumberOfBytesWritten] +
add [esi+10008h] eax +
and dword ptr [esi+10004h] 0 +
mov eax [esi+10004h] +
push ebx  +
push [ebp+lpBuffer]  +
lea eax [eax+esi+4] +
push eax  +
call memcpy  +
add esp 0Ch +
add [esi+10004h] ebx +
mov eax ebx +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
cmp byte ptr [esi+1000Ch] 0 +
push edi  +
jnz loc_1023EED  +
mov al byte ptr [ebp+arg_0] +
xor edi edi +
inc edi  +
mov byte ptr [ebp+arg_4+3] al +
lea ebx [ebp+arg_4+3] +
jmp loc_1023EF3  +
push 2  +
pop edi  +
lea ebx [ebp+arg_0] +
mov eax [esi+10004h] +
lea ecx [eax+edi] +
cmp ecx 0FFFFh +
jbe loc_1023F27  +
push 0  +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
push eax  +
lea eax [esi+4] +
push eax  +
push dword ptr [esi]  +
call ds:WriteFile  +
mov eax [ebp+NumberOfBytesWritten] +
add [esi+10008h] eax +
and dword ptr [esi+10004h] 0 +
mov eax [esi+10004h] +
push edi  +
lea eax [eax+esi+4] +
push ebx  +
push eax  +
call memcpy  +
add [esi+10004h] edi +
add esp 0Ch +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+NumberOfBytesWritten] +
mov eax [ebx+10004h] +
lea ecx [eax+1] +
push esi  +
push edi  +
cmp ecx 0FFFFh +
jbe loc_1023F90  +
push 0  +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
push eax  +
lea eax [ebx+4] +
push eax  +
push dword ptr [ebx]  +
call ds:WriteFile  +
mov eax [ebp+NumberOfBytesWritten] +
add [ebx+10008h] eax +
and dword ptr [ebx+10004h] 0 +
mov eax [ebx+10004h] +
lea edi [eax+ebx+4] +
lea esi [ebp+arg_0] +
movs   +
inc dword ptr [ebx+10004h]  +
pop edi  +
xor eax eax +
pop esi  +
inc eax  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+NumberOfBytesWritten] +
test esi esi +
jnz loc_1023FC4  +
xor eax eax +
jmp loc_1024008  +
mov eax [esi+10004h] +
test eax eax +
jbe loc_1023FF3  +
cmp byte ptr [esi+1000Dh] 0 +
jnz loc_1023FF3  +
push 0  +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
push eax  +
lea eax [esi+4] +
push eax  +
push dword ptr [esi]  +
call ds:WriteFile  +
mov eax [ebp+NumberOfBytesWritten] +
add [esi+10008h] eax +
and dword ptr [esi+10004h] 0 +
dec dword_10576FC  +
push dword ptr [esi]  +
call ds:CloseHandle  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10576FC +
push esi  +
mov esi eax +
cmp eax 2 +
jb loc_1024028  +
xor eax eax +
jmp loc_1024090  +
push ebx  +
xor ebx ebx +
xor eax eax +
cmp [ebp+arg_8] bl +
push ebx  +
setz al  +
dec eax  +
and eax 4000000h +
sub eax 0FFFFFF80h +
push eax  +
push 2  +
push ebx  +
push ebx  +
push 40000000h  +
push [ebp+lpFileName]  +
call ds:CreateFileW  +
mov edx eax +
cmp edx 0FFFFFFFFh +
jnz loc_102405B  +
xor eax eax +
jmp loc_102408F  +
mov ecx esi +
imul ecx ecx +
inc dword_10576FC  +
lea eax dword_10599C0[ecx] +
mov [eax] edx +
mov dl [ebp+arg_4] +
mov byte_10699CC[ecx] dl +
mov dl [ebp+arg_8] +
mov dword_10699C4[ecx] ebx +
mov dword_10699C8[ecx] ebx +
mov byte_10699CD[ecx] dl +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ecx+10008h] +
add eax [ecx+10004h] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+10008h] +
mov ecx [esi+10004h] +
push edi  +
mov edi [ebp+lDistanceToMove] +
add ecx eax +
cmp edi ecx +
jbe loc_10240DB  +
push 19h  +
pop eax  +
jmp loc_102411E  +
cmp edi eax +
ja loc_1024114  +
push 0  +
push 0  +
push edi  +
push dword ptr [esi]  +
call ds:SetFilePointer  +
cmp eax 0FFFFFFFFh +
jnz loc_10240F9  +
call ds:GetLastError  +
jmp loc_102411E  +
push dword ptr [esi]  +
call ds:SetEndOfFile  +
test eax eax +
jz loc_10240F1  +
and dword ptr [esi+10004h] 0 +
mov [esi+10008h] edi +
jmp loc_102411C  +
sub edi eax +
mov [esi+10004h] edi +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
xor eax eax +
cmp [ecx+10008h] eax +
setz al  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+lpBuffer] +
push edi  +
mov edi [ebp+arg_0] +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push [ebp+NumberOfBytesRead]  +
push ebx  +
push dword ptr [edi]  +
call ds:ReadFile  +
test eax eax +
jnz loc_1024170  +
call ds:GetLastError  +
jmp loc_1024198  +
mov eax [ebp+NumberOfBytesRead] +
push esi  +
lea esi [edi+10004h] +
push dword ptr [esi]  +
add edi 4 +
add eax ebx +
push edi  +
push eax  +
call memcpy  +
mov eax [esi] +
add eax [ebp+NumberOfBytesRead] +
mov ecx [ebp+arg_C] +
add esp 0Ch +
mov [ecx] eax +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_10241B9  +
cmp ecx 7FFFFFFFh +
jbe loc_10241BE  +
mov eax 80070057h +
test eax eax +
jl loc_10241FA  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnprintf  +
add esp 10h +
test eax eax +
jl loc_10241ED  +
cmp eax esi +
ja loc_10241ED  +
jnz loc_10241F5  +
mov [esi+edi] bl +
jmp loc_10241F5  +
mov [esi+edi] bl +
mov ebx 8007007Ah +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
shr ecx 1 +
push 0  +
pop eax  +
jz loc_102421A  +
cmp ecx 7FFFFFFFh +
jbe loc_102421F  +
mov eax 80070057h +
test eax eax +
jl loc_102425B  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:__imp__vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_102424B  +
cmp eax esi +
ja loc_102424B  +
jnz loc_1024256  +
jmp loc_1024250  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+NumberOfBytesWritten] +
xor ebx ebx +
push edi  +
mov [ebp+var_1] bl +
cmp [esi+1000Ch] bl +
jnz loc_102433A  +
push [ebp+arg_4]  +
call sub_1023C2D  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jz loc_1024333  +
mov eax [esi+10004h] +
mov edi 10000h +
jmp loc_10242D3  +
cmp [ebp+var_1] bl +
jnz loc_1024323  +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push dword ptr [esi+10004h]  +
lea eax [esi+4] +
push eax  +
push dword ptr [esi]  +
call ds:WriteFile  +
mov eax [ebp+NumberOfBytesWritten] +
add [esi+10008h] eax +
mov [esi+10004h] ebx +
mov [ebp+var_1] 1 +
mov eax ebx +
lea ecx [ebp+arg_8] +
push ecx  +
push [ebp+lpMem]  +
mov ecx edi +
sub ecx eax +
push ecx  +
lea eax [eax+esi+4] +
push eax  +
call sub_10241A3  +
test eax eax +
jl loc_10242A2  +
mov ecx [esi+10004h] +
lea eax [ecx+esi+4] +
lea edi [eax+1] +
mov dl [eax] +
inc eax  +
cmp dl bl +
jnz loc_10242FA  +
push [ebp+lpMem]  +
sub eax edi +
add ecx eax +
push ebx  +
mov [esi+10004h] ecx +
push hHeap  +
mov [ebp+NumberOfBytesWritten] eax +
call ds:HeapFree  +
mov eax [ebp+NumberOfBytesWritten] +
jmp loc_1024335  +
push [ebp+lpMem]  +
push ebx  +
push hHeap  +
call ds:HeapFree  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
mov eax [esi+10004h] +
mov edi 10000h +
jmp loc_1024378  +
cmp [ebp+var_1] bl +
jnz loc_1024333  +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push dword ptr [esi+10004h]  +
lea eax [esi+4] +
push eax  +
push dword ptr [esi]  +
call ds:WriteFile  +
mov eax [ebp+NumberOfBytesWritten] +
add [esi+10008h] eax +
mov [esi+10004h] ebx +
mov [ebp+var_1] 1 +
mov eax ebx +
lea ecx [ebp+arg_8] +
push ecx  +
push [ebp+arg_4]  +
mov ecx edi +
sub ecx eax +
push ecx  +
lea eax [eax+esi+4] +
push eax  +
call sub_1024203  +
test eax eax +
jl loc_1024347  +
mov ecx [esi+10004h] +
lea eax [ecx+esi+4] +
lea edx [eax+2] +
mov di [eax] +
inc eax  +
inc eax  +
cmp di bx +
jnz loc_102439F  +
sub eax edx +
sar eax 1 +
lea ecx [ecx+eax*2] +
mov [esi+10004h] ecx +
jmp loc_1024335  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+NumberOfBytesWritten] +
push edi  +
xor bl bl +
mov edi 10000h +
jmp loc_1024402  +
test bl bl +
jnz loc_1024442  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push dword ptr [esi+10004h]  +
lea eax [esi+4] +
push eax  +
push dword ptr [esi]  +
call ds:WriteFile  +
mov eax [ebp+NumberOfBytesWritten] +
add [esi+10008h] eax +
and dword ptr [esi+10004h] 0 +
inc bl  +
mov eax [esi+10004h] +
lea ecx [ebp+arg_8] +
push ecx  +
push [ebp+arg_4]  +
mov ecx edi +
sub ecx eax +
push ecx  +
lea eax [eax+esi+4] +
push eax  +
call sub_10241A3  +
test eax eax +
jl loc_10243D4  +
mov ecx [esi+10004h] +
lea eax [ecx+esi+4] +
lea edi [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_102442F  +
sub eax edi +
add ecx eax +
mov [esi+10004h] ecx +
jmp loc_1024444  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi dword ptr [ebp+arg_8] +
push edi  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
call sub_102483D  +
mov esi 491h +
jmp loc_1024480  +
inc edi  +
inc edi  +
xor eax eax +
cmp ax [edi] +
jz loc_1024486  +
push edi  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
call sub_102483D  +
cmp eax esi +
jz loc_102446B  +
jmp loc_1024488  +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov edi dword ptr [ebp+arg_14] +
mov ebx [edi] +
push edi  +
push [ebp+arg_10]  +
mov dword ptr [ebp+arg_8] eax +
push [ebp+arg_C]  +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102494D  +
mov esi 491h +
jmp loc_10244EB  +
add dword ptr [ebp+arg_8] 2 +
inc [ebp+arg_C]  +
mov eax [ebp+arg_10] +
mov edx dword ptr [ebp+arg_8] +
mov [edi] ebx +
inc dword ptr [eax+ebx*8-4]  +
xor ecx ecx +
cmp cx [edx] +
jz loc_10244F1  +
push edi  +
push eax  +
push [ebp+arg_C]  +
push edx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102494D  +
cmp eax esi +
jz loc_10244C0  +
jmp loc_10244F3  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_8] +
and dword ptr [edx] 0 +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push 3  +
pop edi  +
cmp esi edi +
jnb loc_102451B  +
push 0Dh  +
pop eax  +
jmp loc_1024560  +
mov eax [ebp+arg_0] +
movzx ecx word ptr [eax] +
push ebx  +
push 69h  +
pop ebx  +
cmp bx cx +
jnz loc_1024554  +
push 2Fh  +
pop ebx  +
cmp bx [eax+2] +
jnz loc_1024554  +
push 4  +
mov dword ptr [edx] 1 +
pop edi  +
cmp esi edi +
jb loc_102455C  +
push 2Fh  +
pop ecx  +
sub cx [eax+esi*2-2] +
movzx eax cx +
neg eax  +
sbb eax eax +
and eax 0Dh +
jmp loc_102455F  +
push 2Fh  +
pop edx  +
cmp dx cx +
jz loc_102453C  +
push 0Dh  +
pop eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 18h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
xor ecx ecx +
cmp eax ecx +
jnz loc_102458A  +
xor eax eax +
jmp loc_1024599  +
mov edx [ebp+arg_0] +
mov [eax+8] edx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
mov [eax+14h] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
movzx eax word ptr [esi] +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
push 7Dh  +
pop ecx  +
cmp cx ax +
jz loc_10245D3  +
push eax  +
call ds:iswspace  +
pop ecx  +
test eax eax +
jz loc_10245D8  +
inc esi  +
inc esi  +
dec edi  +
movzx eax word ptr [esi] +
jnz loc_10245B5  +
jmp loc_10245DA  +
xor ebx ebx +
inc ebx  +
jmp loc_10245DA  +
xor ebx ebx +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi [edi] +
jmp loc_1024613  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call ds:HeapFree  +
cmp edi esi +
jnz loc_10245F6  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
xor ebx ebx +
push esi  +
push ebx  +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
call sub_102456B  +
mov esi eax +
cmp esi ebx +
jnz loc_1024648  +
push 8  +
pop eax  +
jmp loc_1024829  +
xor ecx ecx +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_C] ecx +
mov [ebp+var_10] ebx +
cmp [ebp+arg_4] ebx +
jbe loc_10247E6  +
mov [ebp+arg_8] 1 +
mov eax [ebp+var_10] +
mov edx [ebp+arg_0] +
movzx ebx word ptr [edx+eax*2] +
movzx eax bx +
sub eax 5Ch +
jz loc_102476C  +
sub eax 1Fh +
jz loc_102471D  +
dec eax  +
dec eax  +
jnz loc_10247AB  +
cmp [ebp+var_8] eax +
jz loc_1024804  +
cmp [esi+14h] eax +
jbe loc_1024804  +
mov eax [esi+10h] +
push 0Ah  +
lea ecx [ebp+var_14] +
lea eax [edx+eax*2] +
push ecx  +
push eax  +
mov [ebp+var_8] eax +
call ds:wcstoul  +
mov ebx eax +
add esp 0Ch +
cmp ebx [ebp+arg_10] +
jnb loc_1024804  +
mov eax [ebp+var_14] +
sub eax [ebp+var_8] +
mov ecx [esi+14h] +
sar eax 1 +
sub ecx eax +
inc ecx  +
push ecx  +
push [ebp+var_14]  +
call sub_10245A2  +
test eax eax +
jz loc_1024804  +
mov [esi+10h] ebx +
mov eax [edi+4] +
mov [esi+4] eax +
mov [esi] edi +
mov [eax] esi +
mov eax [ebp+arg_C] +
mov [edi+4] esi +
mov eax [eax+ebx*8+4] +
add [ebp+var_C] eax +
push 0  +
call sub_102456B  +
mov esi eax +
test esi esi +
jz loc_102482F  +
mov eax [ebp+arg_8] +
and [ebp+var_8] 0 +
mov ecx [ebp+var_C] +
mov [esi+10h] eax +
jmp loc_10247CC  +
cmp [ebp+var_8] 0 +
jnz loc_1024804  +
cmp dword ptr [esi+14h] 0 +
jbe loc_1024756  +
mov eax [edi+4] +
mov [esi] edi +
mov [esi+4] eax +
mov [eax] esi +
mov [edi+4] esi +
add ecx [esi+14h] +
push 1  +
mov [ebp+var_C] ecx +
call sub_102456B  +
mov esi eax +
test esi esi +
jz loc_102482F  +
mov ecx [ebp+var_C] +
jmp loc_102475D  +
mov dword ptr [esi+8] 1 +
mov eax [ebp+arg_8] +
mov [esi+10h] eax +
mov [ebp+var_8] 1 +
jmp loc_10247CC  +
cmp [ebp+var_8] 0 +
jnz loc_1024804  +
mov eax [ebp+var_10] +
inc eax  +
inc [ebp+arg_8]  +
inc dword ptr [esi+14h]  +
mov [ebp+var_10] eax +
mov dword ptr [esi+0Ch] 1 +
cmp eax [ebp+arg_4] +
jnb loc_1024804  +
movzx ebx word ptr [edx+eax*2] +
push 7Bh  +
pop eax  +
cmp ax bx +
jz loc_10247C9  +
push 7Dh  +
pop eax  +
cmp ax bx +
jz loc_10247C9  +
push 5Ch  +
pop eax  +
cmp ax bx +
jnz loc_1024804  +
cmp [ebp+var_8] 0 +
jz loc_10247C9  +
push ebx  +
call ds:iswspace  +
pop ecx  +
test eax eax +
jnz loc_10247C6  +
add ebx 0FFFFFFD0h +
cmp bx 9 +
ja loc_1024804  +
mov ecx [ebp+var_C] +
inc dword ptr [esi+14h]  +
inc [ebp+var_10]  +
mov eax [ebp+var_10] +
inc [ebp+arg_8]  +
cmp eax [ebp+arg_4] +
jb loc_1024664  +
cmp [ebp+var_8] 0 +
jnz loc_1024804  +
xor ebx ebx +
cmp [esi+14h] ebx +
jbe loc_10247FD  +
mov eax [edi+4] +
mov [esi] edi +
mov [esi+4] eax +
mov [eax] esi +
mov [edi+4] esi +
add ecx [esi+14h] +
xor esi esi +
mov eax [ebp+arg_14] +
mov [eax] ecx +
jmp loc_1024813  +
mov [ebp+var_4] 0Dh +
push edi  +
call sub_10245E8  +
xor ebx ebx +
pop edi  +
cmp esi ebx +
jz loc_1024826  +
push esi  +
push ebx  +
push hHeap  +
call ds:HeapFree  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
mov [ebp+var_4] 8 +
jmp loc_102480B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi dword ptr [ebp+arg_0] +
push edi  +
mov edi dword ptr [ebp+arg_8] +
jmp loc_10248ED  +
movzx eax word ptr [esi] +
movzx ecx ax +
cmp ecx 2Ah +
jz loc_102490E  +
cmp ecx 2Fh +
jz loc_102493F  +
cmp ecx 3Fh +
jz loc_10248E2  +
cmp ecx 5Ch +
jnz loc_10248A5  +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
xor ecx ecx +
cmp cx ax +
jz loc_102493F  +
push 3Fh  +
pop ecx  +
cmp cx ax +
jz loc_10248A5  +
push 2Ah  +
pop ecx  +
cmp cx ax +
jz loc_10248A5  +
push 2Fh  +
pop ecx  +
cmp cx ax +
jz loc_10248A5  +
push 5Ch  +
pop ecx  +
cmp cx ax +
jnz loc_102493F  +
cmp [ebp+arg_4] 0 +
jz loc_10248D6  +
mov [ebp+arg_8] ax +
xor eax eax +
mov [ebp+12h] ax +
mov ax [edi] +
mov [ebp+arg_0] ax +
xor eax eax +
mov [ebp+0Ah] ax +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+arg_8] +
push eax  +
call ds:__imp__wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jmp loc_10248D9  +
cmp [edi] ax +
jz loc_10248E9  +
mov eax 491h +
jmp loc_1024908  +
xor eax eax +
cmp ax [edi] +
jz loc_10248DB  +
inc edi  +
inc edi  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_102484F  +
xor eax eax +
sub ax [edi] +
movzx eax ax +
neg eax  +
sbb eax eax +
and eax 491h +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jz loc_102492C  +
push 2Ah  +
pop ecx  +
cmp cx ax +
jz loc_102490E  +
push edi  +
push [ebp+arg_4]  +
push esi  +
call sub_102444E  +
jmp loc_1024908  +
lea eax [ebp+arg_4] +
push eax  +
push 7FFFFFFFh  +
push edi  +
call sub_101F5CD  +
test eax eax +
jge loc_1024944  +
push 0Dh  +
pop eax  +
jmp loc_1024908  +
xor eax eax +
jmp loc_1024908  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
and [ebp+var_4] 0 +
cmp word ptr [eax] 0 +
mov ecx dword ptr [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_8] eax +
mov [ebp+arg_0] ecx +
jz loc_1024A76  +
mov esi dword ptr [ebp+arg_14] +
mov edi [ebp+arg_10] +
mov ebx [ebp+arg_C] +
movzx ecx word ptr [eax] +
movzx edx cx +
cmp edx 2Ah +
jz loc_1024A98  +
cmp edx 2Fh +
jz loc_1024AE5  +
cmp edx 3Fh +
jz loc_1024A42  +
cmp edx 5Ch +
jnz loc_10249D7  +
inc eax  +
inc eax  +
movzx ecx word ptr [eax] +
xor edx edx +
mov [ebp+var_8] eax +
cmp dx cx +
jz loc_1024AE5  +
push 3Fh  +
pop edx  +
cmp dx cx +
jz loc_10249D7  +
push 2Ah  +
pop edx  +
cmp dx cx +
jz loc_10249D7  +
push 2Fh  +
pop edx  +
cmp dx cx +
jz loc_10249D7  +
push 5Ch  +
pop edx  +
cmp dx cx +
jnz loc_1024AE5  +
cmp [ebp+arg_4] 0 +
jz loc_1024A14  +
xor eax eax +
mov [ebp+1Eh] ax +
mov eax [ebp+arg_0] +
mov ax [eax] +
mov [ebp+arg_8] ax +
xor eax eax +
mov [ebp+12h] ax +
lea eax [ebp+arg_8] +
push eax  +
lea eax [ebp+arg_14] +
push eax  +
mov [ebp+arg_14] cx +
call ds:__imp__wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1024A91  +
mov eax [ebp+var_8] +
jmp loc_1024A1C  +
mov edx [ebp+arg_0] +
cmp [edx] cx +
jnz loc_1024A91  +
cmp [ebp+var_4] 0 +
jnz loc_1024A38  +
inc dword ptr [esi]  +
mov ecx [esi] +
mov [edi+ecx*8-8] ebx +
mov edx [esi] +
xor ecx ecx +
inc ecx  +
mov [edi+edx*8-4] ecx +
mov [ebp+var_4] ecx +
jmp loc_1024A62  +
mov ecx [esi] +
lea ecx [edi+ecx*8-4] +
inc dword ptr [ecx]  +
jmp loc_1024A62  +
mov edx [ebp+arg_0] +
xor ecx ecx +
cmp cx [edx] +
jz loc_1024A91  +
inc dword ptr [esi]  +
mov ecx [esi] +
and [ebp+var_4] 0 +
mov [edi+ecx*8-8] ebx +
mov ecx [esi] +
mov dword ptr [edi+ecx*8-4] 1 +
add [ebp+arg_0] 2 +
inc ebx  +
inc eax  +
inc eax  +
cmp word ptr [eax] 0 +
mov [ebp+var_8] eax +
jnz loc_102497A  +
mov ecx [ebp+arg_0] +
xor eax eax +
sub ax [ecx] +
movzx eax ax +
neg eax  +
sbb eax eax +
and eax 491h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
mov eax 491h +
jmp loc_1024A8A  +
inc eax  +
inc eax  +
cmp word ptr [eax] 0 +
jz loc_1024AC8  +
inc dword ptr [esi]  +
mov ecx [esi] +
mov [edi+ecx*8-8] ebx +
mov ecx [esi] +
and dword ptr [edi+ecx*8-4] 0 +
push 2Ah  +
pop ecx  +
cmp cx [eax] +
jz loc_1024A98  +
push esi  +
push edi  +
push ebx  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
push eax  +
call sub_1024493  +
jmp loc_1024A8A  +
inc dword ptr [esi]  +
mov eax [esi] +
mov [edi+eax*8-8] ebx +
lea eax [ebp+arg_4] +
push eax  +
push 7FFFFFFFh  +
push [ebp+arg_0]  +
call sub_101F5CD  +
test eax eax +
jge loc_1024AEA  +
push 0Dh  +
pop eax  +
jmp loc_1024A8A  +
mov eax [esi] +
mov ecx [ebp+arg_4] +
mov [edi+eax*8-4] ecx +
xor eax eax +
jmp loc_1024A8A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
mov edi [ebp+dwBytes] +
lea eax [ebp+dwBytes] +
push eax  +
push 2  +
pop ecx  +
inc edi  +
mov eax edi +
mul  ecx +
push edx  +
push eax  +
call sub_101B8F5  +
test eax eax +
jge loc_1024B26  +
xor eax eax +
jmp loc_1024BF0  +
push esi  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
mov [ebp+lpMem] esi +
test esi esi +
jz loc_1024BEF  +
mov eax [ebp+arg_10] +
push ebx  +
mov ebx [eax] +
mov [ebp+dwBytes] edi +
cmp eax ebx +
jz loc_1024BE0  +
mov eax ebx +
cmp dword ptr [eax+8] 0 +
mov ebx [ebx] +
mov [ebp+var_C] ebx +
jz loc_1024B7B  +
mov eax [eax+10h] +
mov ecx [ebp+arg_8] +
lea eax [ecx+eax*8] +
mov edi [eax+4] +
mov ecx [eax] +
mov eax [ebp+arg_0] +
push edi  +
lea eax [eax+ecx*2] +
push eax  +
jmp loc_1024B8F  +
cmp dword ptr [eax+0Ch] 0 +
mov ecx [eax+10h] +
mov edx [ebp+arg_4] +
mov edi [eax+14h] +
lea ecx [edx+ecx*2] +
jnz loc_1024BA4  +
push edi  +
push ecx  +
push [ebp+dwBytes]  +
push esi  +
call sub_105245A  +
test eax eax +
jl loc_1024BF5  +
sub [ebp+dwBytes] edi +
lea esi [esi+edi*2] +
jmp loc_1024BD7  +
and [ebp+var_4] 0 +
xor eax eax +
mov edx esi +
test edi edi +
jbe loc_1024BCE  +
push 5Ch  +
pop ebx  +
cmp bx [ecx+eax*2] +
jnz loc_1024BBA  +
inc eax  +
mov bx [ecx+eax*2] +
mov [edx] bx +
inc edx  +
inc edx  +
inc [ebp+var_4]  +
inc eax  +
cmp eax edi +
jb loc_1024BB0  +
mov ebx [ebp+var_C] +
mov eax [ebp+var_4] +
sub [ebp+dwBytes] eax +
lea esi [esi+eax*2] +
cmp [ebp+arg_10] ebx +
jnz loc_1024B56  +
xor eax eax +
mov [esi] ax +
mov eax [ebp+arg_14] +
and dword ptr [eax] 0 +
mov eax [ebp+lpMem] +
pop ebx  +
pop esi  +
pop edi  +
leave   +
retn 18h  +
push [ebp+lpMem]  +
push 0  +
push hHeap  +
call ds:HeapFree  +
xor eax eax +
jmp loc_1024BEE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+lpMem] +
lea eax [ebp+var_14] +
mov [ebp+var_10] eax +
mov [ebp+var_14] eax +
push esi  +
mov eax ebx +
shl eax 3 +
push eax  +
push 8  +
push hHeap  +
xor esi esi +
mov dword ptr [ebp+var_8] esi +
mov [ebp+var_4] esi +
mov [ebp+var_C] esi +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax esi +
jnz loc_1024C52  +
xor eax eax +
jmp loc_1024D19  +
push edi  +
mov edi [ebp+dwBytes] +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push edi  +
call sub_10244FF  +
mov esi [ebp+arg_14] +
mov [esi] eax +
test eax eax +
jnz loc_1024C97  +
cmp [ebp+var_4] eax +
lea eax [edi+4] +
jnz loc_1024C75  +
lea eax [edi+2] +
xor ecx ecx +
mov [edi+ebx*2-2] cx +
lea ecx [ebp+var_8] +
push ecx  +
push [ebp+lpMem]  +
push 0  +
push [ebp+arg_10]  +
push [ebp+var_4]  +
push eax  +
call sub_102494D  +
mov [esi] eax +
test eax eax +
jz loc_1024CA4  +
cmp eax 0Dh +
jnz loc_1024CF3  +
push edi  +
push offset aMalFormedPatte  +
jmp loc_1024CD0  +
lea eax [ebp+dwBytes] +
push eax  +
push dword ptr [ebp+var_8]  +
lea eax [ebp+var_14] +
push [ebp+lpMem]  +
push eax  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
call sub_1024622  +
mov [esi] eax +
test eax eax +
jz loc_1024CDA  +
cmp eax 0Dh +
jnz loc_1024CF3  +
push [ebp+arg_8]  +
push offset aMalFormedRepla  +
call ds:wprintf  +
pop ecx  +
pop ecx  +
jmp loc_1024CF3  +
push esi  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+dwBytes]  +
push [ebp+lpMem]  +
push [ebp+arg_8]  +
push [ebp+arg_10]  +
call sub_1024AFC  +
mov [ebp+var_C] eax +
push 2Fh  +
pop eax  +
push [ebp+lpMem]  +
mov [edi+ebx*2-2] ax +
push 0  +
push hHeap  +
call ds:HeapFree  +
lea eax [ebp+var_14] +
push eax  +
call sub_10245E8  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
mov eax [esi+0Ch] +
xor ebx ebx +
push edi  +
mov edi dword ptr [ebp+arg_C] +
mov [ebp+var_10] ebx +
mov [ebp+var_14] edi +
mov [ebp+var_18] ebx +
cmp eax ebx +
jz loc_1024E5D  +
add eax esi +
cmp eax ebx +
jz loc_1024E5D  +
mov ecx offset aTracerptSimple +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1024D80  +
cmp dx bx +
jz loc_1024D7C  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1024D80  +
add eax 4 +
add ecx 4 +
cmp dx bx +
jnz loc_1024D5A  +
xor eax eax +
jmp loc_1024D85  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_1024E30  +
cmp edi ebx +
jz loc_1024E5D  +
mov [ebp+arg_8] ebx +
cmp [esi+8] ebx +
jbe loc_1024E30  +
lea edi [esi+10h] +
mov [ebp+var_4] edi +
mov eax [edi+4] +
test eax eax +
jnz loc_1024DB2  +
xor ebx ebx +
jmp loc_1024DB5  +
lea ebx [eax+esi] +
lea eax [ebp+lpMem] +
push eax  +
push 7FFFFFFFh  +
push ebx  +
call sub_101F5CD  +
test eax eax +
jl loc_1024E30  +
cmp [ebp+lpMem] 0 +
jz loc_1024E30  +
mov eax [edi] +
test eax eax +
jz loc_1024E30  +
lea edi [eax+esi] +
test edi edi +
jz loc_1024E30  +
lea eax [ebp+var_8] +
push eax  +
push 7FFFFFFFh  +
push edi  +
call sub_101F5CD  +
test eax eax +
jl loc_1024E30  +
cmp [ebp+var_8] 0 +
jz loc_1024E30  +
lea eax [ebp+var_10] +
push eax  +
push dword ptr [ebp+arg_C]  +
push [ebp+var_8]  +
push edi  +
push [ebp+lpMem]  +
push ebx  +
call sub_1024C0F  +
test eax eax +
jnz loc_1024E26  +
cmp [ebp+var_10] 0Dh +
jz loc_1024E5D  +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
add [ebp+var_4] 8 +
cmp eax [esi+8] +
jnb loc_1024E30  +
mov edi [ebp+var_4] +
jmp loc_1024DA7  +
mov [ebp+var_14] eax +
mov [ebp+var_18] 1 +
mov esi [ebp+var_14] +
xor edi edi +
cmp esi edi +
jz loc_1024E46  +
push esi  +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101D200  +
cmp [ebp+var_18] edi +
jz loc_1024E5D  +
cmp esi edi +
jz loc_1024E5D  +
push esi  +
push edi  +
push hHeap  +
call ds:HeapFree  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 484h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
lea ecx [ebp+var_484] +
call sub_1049BE4  +
lea ecx [ebp+var_3D4] +
call sub_10491AF  +
push [ebp+lDistanceToMove]  +
lea eax [ebp+var_3D4] +
push edi  +
lea ecx [ebp+var_484] +
mov [ebp+var_3E4] offset off_1055928 +
mov [ebp+var_3E0] offset off_1055924 +
mov [ebp+var_468] eax +
call sub_104AFEA  +
push [ebp+lDistanceToMove]  +
lea eax [ebp+var_484] +
push eax  +
push esi  +
lea ecx [ebp+var_3D4] +
call sub_1049A9D  +
mov esi eax +
mov eax [ebp+var_480] +
test eax eax +
jz loc_1024F0D  +
cmp dword ptr [eax+30h] 2 +
jz loc_1024F0D  +
cmp [ebp+lDistanceToMove] 0 +
jnz loc_1024F0D  +
cmp esi 6Fh +
jz loc_1024F06  +
cmp esi 3A9Dh +
jnz loc_1024F0D  +
mov byte_10566D0 1 +
lea ecx [ebp+var_3D4] +
call sub_1047D44  +
lea ecx [ebp+var_484] +
call sub_104A29C  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B4h +
lea ecx [ebp+var_B4] +
call sub_1049BE4  +
lea ecx [ebp-1] +
call sub_104B1DE  +
push 0  +
push [ebp+arg_4]  +
lea ecx [ebp+var_B4] +
mov [ebp+var_10] offset off_1055920 +
call sub_104AFEA  +
lea eax [ebp+var_B4] +
push eax  +
push [ebp+arg_0]  +
lea ecx [ebp-1] +
call sub_104B73F  +
lea ecx [ebp-1] +
call nullsub_1  +
lea ecx [ebp+var_B4] +
call sub_104A29C  +
xor eax eax +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1024FD4  +
cmp [ebp+arg_4] eax +
jz loc_1024FD0  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1024FD0  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1024FB3  +
test esi esi +
jnz loc_1024FDC  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1024FEA  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
adc ecx [ebp+arg_C] +
cmp ecx [ebp+arg_4] +
jb loc_102501F  +
ja loc_1025013  +
cmp eax [ebp+arg_0] +
jb loc_102501F  +
mov edx [ebp+arg_10] +
mov [edx] eax +
mov [edx+4] ecx +
xor eax eax +
jmp loc_102502E  +
mov eax [ebp+arg_10] +
or dword ptr [eax] 0FFFFFFFFh +
or dword ptr [eax+4] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
cmp ecx [ebp+arg_C] +
jb loc_1025060  +
mov eax [ebp+arg_0] +
ja loc_102504E  +
cmp eax [ebp+arg_8] +
jb loc_1025060  +
sub eax [ebp+arg_8] +
mov edx [ebp+arg_10] +
sbb ecx [ebp+arg_C] +
mov [edx] eax +
mov [edx+4] ecx +
xor eax eax +
jmp loc_102506F  +
mov eax [ebp+arg_10] +
or dword ptr [eax] 0FFFFFFFFh +
or dword ptr [eax+4] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
xor esi esi +
push esi  +
push esi  +
mov [ebp+ppv] esi +
mov [ebp+var_8] esi +
mov [ebp+var_C] esi +
call ds:CoInitializeEx  +
test eax eax +
jge loc_10250A2  +
mov eax 1070h +
jmp loc_1025154  +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 1  +
push esi  +
push offset rclsid  +
mov byte ptr [edi+694h] 1 +
call ds:CoCreateInstance  +
mov ebx eax +
cmp ebx esi +
jl loc_1025125  +
push offset aRootWmi  +
call ds:SysAllocString  +
push eax  +
mov [ebp+var_8] eax +
call ds:SysStringLen  +
test eax eax +
jnz loc_10250ED  +
mov [ebp+var_C] 8 +
jmp loc_1025125  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+pProxy] +
push edx  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov ebx eax +
cmp ebx esi +
jl loc_1025125  +
mov eax [ebp+pProxy] +
push esi  +
push esi  +
push 3  +
push 4  +
push esi  +
push esi  +
push 0Ah  +
push eax  +
mov [edi+690h] eax +
call ds:CoSetProxyBlanket  +
mov ebx eax +
mov eax [ebp+ppv] +
cmp eax esi +
jz loc_1025135  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+ppv] esi +
push [ebp+var_8]  +
call ds:SysFreeString  +
mov eax [ebp+var_C] +
cmp eax esi +
jnz loc_1025152  +
cmp ebx esi +
jge loc_1025150  +
mov eax 1070h +
jmp loc_1025152  +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+690h] +
test eax eax +
jz loc_1025177  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp byte ptr [esi+694h] 0 +
pop esi  +
jz loc_1025187  +
call ds:CoUninitialize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+dwBytes] 0 +
mov edx dword_1079AE0 +
push ebx  +
push esi  +
push edi  +
jmp loc_10251F1  +
mov ecx [ebp+arg_4] +
mov ebx edx +
mov edx [edx] +
mov eax [ebx+1Ch] +
mov si [eax] +
cmp si [ecx] +
jnz loc_10251D6  +
test si si +
jz loc_10251D2  +
mov si [eax+2] +
cmp si [ecx+2] +
jnz loc_10251D6  +
add eax 4 +
add ecx 4 +
test si si +
jnz loc_10251B0  +
xor eax eax +
jmp loc_10251DB  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_10251F1  +
mov edi [ebp+arg_0] +
push 4  +
add edi 18h +
pop ecx  +
lea esi [ebx+8] +
xor eax eax +
cmps   +
jz loc_10251FB  +
cmp edx offset dword_1079AE0 +
jnz loc_10251A6  +
jmp loc_1025206  +
mov eax [ebx+18h] +
test eax eax +
jnz loc_10252B7  +
lea eax [ebp+dwBytes] +
push eax  +
xor ebx ebx +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TdhGetEventMapInformation  +
cmp eax 7Ah +
jz loc_1025224  +
xor eax eax +
jmp loc_10252B7  +
push [ebp+dwBytes]  +
mov esi ds:HeapAlloc +
push 8  +
push hHeap  +
call esi  +
mov edi eax +
mov [ebp+var_8] edi +
test edi edi +
jz loc_102521D  +
lea eax [ebp+dwBytes] +
push eax  +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call TdhGetEventMapInformation  +
test eax eax +
jnz loc_1025266  +
push 20h  +
push 8  +
push hHeap  +
call esi  +
mov ebx eax +
test ebx ebx +
jnz loc_1025288  +
mov esi ds:HeapFree +
push edi  +
push 0  +
push hHeap  +
call esi  +
test ebx ebx +
jz loc_102521D  +
push ebx  +
push 0  +
push hHeap  +
call esi  +
jmp loc_102521D  +
mov eax [ebp+arg_4] +
mov esi [ebp+arg_0] +
mov [ebx+18h] edi +
mov [ebx+1Ch] eax +
add esi 18h +
lea edi [ebx+8] +
movs   +
movs   +
movs   +
movs   +
mov eax dword_1079AE4 +
mov [ebx+4] eax +
mov dword ptr [ebx] offset dword_1079AE0 +
mov [eax] ebx +
mov eax [ebp+var_8] +
mov dword_1079AE4 ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jnz loc_10252D8  +
retn   +
lea ecx [eax+28h] +
mov [eax+2Ch] ecx +
mov [ecx] ecx +
mov byte ptr [eax+20h] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1025343  +
push ebx  +
mov bx [ebp+arg_4] +
push edi  +
lea edi [eax+8] +
mov ecx [edi] +
jmp loc_102530D  +
mov eax ecx +
mov ecx [ecx] +
cmp [eax+8] bx +
jz loc_1025341  +
cmp ecx edi +
jnz loc_1025303  +
push esi  +
push 70h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_1025340  +
push esi  +
call sub_102135A  +
mov [esi+8] bx +
mov eax [edi] +
mov [esi] eax +
mov [esi+4] edi +
mov [eax+4] esi +
mov [edi] esi +
mov eax esi +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_102535E  +
xor eax eax +
jmp loc_1025406  +
mov eax dword_1079AD8 +
push esi  +
push edi  +
jmp loc_102537C  +
mov edi [ebp+arg_0] +
push 4  +
pop ecx  +
lea esi [eax+1Ch] +
xor edx edx +
cmps   +
jz loc_1025404  +
mov eax [eax] +
cmp eax offset dword_1079AD8 +
jnz loc_1025367  +
push ebx  +
mov esi 0C4Ch +
push esi  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_1025403  +
push esi  +
push 0  +
push ebx  +
call memset  +
mov esi [ebp+arg_0] +
lea edi [ebx+1Ch] +
movs   +
movs   +
movs   +
add esp 0Ch +
movs   +
lea eax [ebx+2Ch] +
mov ecx 100h +
mov [eax+4] eax +
mov [eax] eax +
add eax 8 +
dec ecx  +
jnz loc_10253BC  +
lea eax [ebx+82Ch] +
mov [ebx+830h] eax +
mov [eax] eax +
lea eax [ebx+8] +
mov [ebx+0Ch] eax +
mov [eax] eax +
lea eax [ebx+0C38h] +
mov [ebx+0C3Ch] eax +
mov [eax] eax +
mov eax dword_1079ADC +
mov [ebx+4] eax +
mov dword ptr [ebx] offset dword_1079AD8 +
mov [eax] ebx +
mov dword_1079ADC ebx +
mov eax ebx +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movzx ecx [ebp+arg_8] +
mov edx [ebp+arg_0] +
lea edx [edx+ecx*8+2Ch] +
mov ecx [edx] +
xor eax eax +
cmp edx ecx +
jz loc_102544B  +
push esi  +
push edi  +
movzx esi word ptr [ecx+10h] +
cmp si [ebp+arg_4] +
jz loc_1025447  +
mov edi 0FFFFh +
cmp di si +
jnz loc_102543F  +
mov eax ecx +
mov ecx [ecx] +
cmp edx ecx +
jnz loc_1025429  +
jmp loc_1025449  +
mov eax ecx +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movzx eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push esi  +
lea esi [ecx+eax*8+2Ch] +
mov ecx [esi] +
push edi  +
xor edi edi +
jmp loc_1025490  +
mov al [ecx+15h] +
cmp al [ebp+arg_4] +
jnz loc_1025483  +
mov dl [ecx+12h] +
cmp dl [ebp+arg_8] +
jz loc_1025496  +
cmp dl 0FFh +
jnz loc_1025483  +
mov edi ecx +
cmp al 0FFh +
jnz loc_102548E  +
cmp [ecx+12h] al +
jnz loc_102548E  +
mov edi ecx +
mov ecx [ecx] +
cmp esi ecx +
jnz loc_102546C  +
jmp loc_1025498  +
mov edi ecx +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov edx [ebp+arg_0] +
and [ebp+var_4] 0 +
xor eax eax +
push edi  +
mov word ptr [ebp+var_14] ax +
lea edi [ebp+var_14+2] +
stos   +
stos   +
stos   +
add edx 2Ch +
stos   +
mov eax [edx] +
cmp edx eax +
jz loc_10254F2  +
push ebx  +
push esi  +
mov esi eax +
mov eax [eax] +
mov [ebp+arg_0] esi +
push 4  +
add esi 10h +
pop ecx  +
lea edi [ebp+var_14] +
xor ebx ebx +
cmps   +
jz loc_10254EA  +
cmp edx eax +
jnz loc_10254CE  +
jmp loc_10254F0  +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
pop esi  +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov dx [eax] +
jnz loc_1025520  +
cmp dx [ecx] +
jnz loc_102553B  +
mov al [eax+2] +
cmp al [ecx+2] +
jmp loc_1025535  +
cmp dx [ecx] +
jnz loc_102553B  +
mov dl [eax+2] +
cmp dl [ecx+2] +
jnz loc_102553B  +
mov ax [eax+6] +
cmp ax [ecx+6] +
jnz loc_102553B  +
mov al 1 +
jmp loc_102553D  +
xor al al +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_10566D8 +
push ebx  +
push esi  +
mov esi [ebp+lpMem] +
push edi  +
xor edi edi +
mov [ebp+dwBytes] edi +
mov ecx [eax+350h] +
lea edx [ebp+dwBytes] +
push edx  +
mov edx ecx +
add eax 358h +
xor ebx ebx +
neg edx  +
push edi  +
sbb edx edx +
and edx eax +
push edx  +
push ecx  +
push esi  +
call TdhGetEventInformation  +
cmp eax edi +
jz loc_102558E  +
cmp eax 7Ah +
jz loc_102558E  +
xor eax eax +
jmp loc_1025657  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax edi +
jz loc_1025587  +
mov eax dword_10566D8 +
mov ecx [eax+350h] +
lea edx [ebp+dwBytes] +
push edx  +
push [ebp+lpMem]  +
mov edx ecx +
add eax 358h +
neg edx  +
sbb edx edx +
and edx eax +
push edx  +
push ecx  +
push esi  +
call TdhGetEventInformation  +
cmp eax edi +
jnz loc_1025645  +
call sub_10252C3  +
mov ebx eax +
cmp ebx edi +
jz loc_1025645  +
mov eax [ebp+lpMem] +
add esi 28h +
lea edi [ebx+10h] +
movs   +
movs   +
movs   +
movs   +
movzx ecx byte ptr [ebx+12h] +
mov esi [ebp+arg_4] +
mov [ebx+8] eax +
mov byte ptr [ebx+21h] 1 +
lea ecx [esi+ecx*8+2Ch] +
mov edx [ecx] +
mov [ebx] edx +
mov [ebx+4] ecx +
mov [edx+4] ebx +
mov [ecx] ebx +
cmp dword ptr [esi+10h] 0 +
jnz loc_1025655  +
mov ecx [eax+30h] +
cmp ecx 1 +
jnz loc_102561A  +
mov ecx [eax+44h] +
jmp loc_1025636  +
cmp ecx 2 +
jz loc_1025633  +
test ecx ecx +
jnz loc_1025655  +
mov ecx [eax+50h] +
test ecx ecx +
jz loc_102562C  +
add ecx eax +
mov [esi+10h] ecx +
test ecx ecx +
jnz loc_1025655  +
mov ecx [eax+34h] +
test ecx ecx +
jnz loc_102563E  +
xor eax eax +
jmp loc_1025640  +
add eax ecx +
mov [esi+10h] eax +
jmp loc_1025655  +
push [ebp+lpMem]  +
push edi  +
push hHeap  +
call ds:HeapFree  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
mov ecx [ebp+arg_0] +
push ebx  +
mov bl [edx+2] +
movzx eax bl +
lea ecx [ecx+eax*8+2Ch] +
mov eax [ecx] +
cmp ecx eax +
jz loc_1025693  +
movzx edx word ptr [edx] +
cmp [eax+10h] dx +
jnz loc_102568D  +
cmp [eax+12h] bl +
jz loc_1025695  +
mov eax [eax] +
cmp ecx eax +
jnz loc_1025682  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov al [esi+2Ah] +
mov [ebp+var_1] al +
lea eax [ebp+dwBytes] +
push eax  +
xor ebx ebx +
push ebx  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
mov eax dword_10566D8 +
mov [ebp+dwBytes] ebx +
push dword ptr [eax+690h]  +
mov [ebp+var_14] ebx +
push esi  +
call TdhGetAllEventsInformation  +
cmp eax ebx +
jz loc_10256E8  +
cmp eax 7Ah +
jz loc_10256E8  +
xor eax eax +
jmp loc_102589B  +
push edi  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov edi eax +
mov [ebp+var_18] edi +
cmp edi ebx +
jz loc_1025848  +
lea eax [ebp+dwBytes] +
push eax  +
push edi  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
mov eax dword_10566D8 +
push dword ptr [eax+690h]  +
push esi  +
call TdhGetAllEventsInformation  +
cmp eax ebx +
mov ebx [ebp+arg_4] +
jnz loc_102587C  +
movzx eax [ebp+var_1] +
mov [ebx+eax*4+838h] edi +
cmp dword ptr [ebx+10h] 0 +
mov [ebp+var_20] eax +
mov eax [edi] +
jnz loc_102577C  +
mov ecx [eax+30h] +
cmp ecx 1 +
jnz loc_1025753  +
mov ecx [eax+44h] +
jmp loc_102576F  +
cmp ecx 2 +
jz loc_102576C  +
test ecx ecx +
jnz loc_102577C  +
mov ecx [eax+50h] +
test ecx ecx +
jz loc_1025765  +
add ecx eax +
mov [ebx+10h] ecx +
test ecx ecx +
jnz loc_102577C  +
mov ecx [eax+34h] +
test ecx ecx +
jnz loc_1025777  +
xor eax eax +
jmp loc_1025779  +
add eax ecx +
mov [ebx+10h] eax +
cmp [ebp+var_10] 0FFFFFFFFh +
jnz loc_10257CD  +
cmp [ebp+var_8] 0 +
jbe loc_10257CD  +
movzx eax word ptr [esi+4] +
test al 8 +
jz loc_10257A2  +
movzx eax byte ptr [esi+2Ah] +
push eax  +
movzx eax word ptr [esi+28h] +
push eax  +
push ebx  +
call sub_102540F  +
jmp loc_10257C5  +
test eax 100h +
jz loc_10257BB  +
movzx eax byte ptr [esi+2Ah] +
push eax  +
movzx eax byte ptr [esi+2Dh] +
push eax  +
push ebx  +
call sub_1025454  +
jmp loc_10257C5  +
lea eax [esi+28h] +
push eax  +
push ebx  +
call sub_1025663  +
test eax eax +
jnz loc_1025897  +
and [ebp+arg_4] 0 +
cmp [ebp+var_8] 0 +
jbe loc_102583F  +
jmp loc_10257DC  +
mov edi [ebp+var_18] +
mov eax [ebp+arg_4] +
mov esi [edi+eax*4] +
mov [ebp+var_1C] esi +
call sub_10252C3  +
test eax eax +
jz loc_102587C  +
add esi 20h +
lea edi [eax+10h] +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+var_1C] +
cmp byte ptr [esi+22h] 0FFh +
jnz loc_102580E  +
mov ecx [ebp+arg_0] +
mov cl [ecx+2Ah] +
mov [eax+12h] cl +
mov ecx [ebp+var_20] +
lea ecx [ebx+ecx*8+2Ch] +
mov [eax+8] esi +
mov byte ptr [eax+21h] 0 +
mov edx [ecx] +
mov [eax+4] ecx +
mov [eax] edx +
mov [edx+4] eax +
mov [ecx] eax +
mov ecx [ebp+arg_4] +
cmp ecx [ebp+var_10] +
jnz loc_1025833  +
mov [ebp+var_14] eax +
inc ecx  +
mov [ebp+arg_4] ecx +
cmp ecx [ebp+var_8] +
jb loc_10257D9  +
mov esi [ebp+arg_0] +
call sub_10252C3  +
test eax eax +
jnz loc_102584C  +
xor eax eax +
jmp loc_102589A  +
lea ecx [eax+10h] +
add esi 28h +
mov edi ecx +
movs   +
movs   +
movs   +
movs   +
mov edx 0FFFFh +
mov [ecx] dx +
lea ecx [ebx+824h] +
mov byte ptr [eax+15h] 0FFh +
mov byte ptr [eax+12h] 0FFh +
mov edx [ecx] +
mov [eax] edx +
mov [eax+4] ecx +
mov [edx+4] eax +
mov [ecx] eax +
jmp loc_1025897  +
push edi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
movzx eax [ebp+var_1] +
and dword ptr [ebx+eax*4+838h] 0 +
mov eax [ebp+var_14] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test byte ptr [eax+4] 8 +
push [ebp+arg_4]  +
push eax  +
jnz loc_10258BF  +
call sub_102569F  +
jmp loc_10258C4  +
call sub_1025546  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_8] +
movzx eax byte ptr [edx+2] +
mov ecx [ebp+arg_4] +
push esi  +
push edi  +
lea edi [ecx+eax*8+2Ch] +
mov ecx [edi] +
xor esi esi +
cmp edi ecx +
jz loc_10259C5  +
mov eax 0FFFFh +
push ebx  +
mov bx [ecx+10h] +
cmp bx [edx] +
jnz loc_1025945  +
mov bl [ecx+12h] +
cmp bl [edx+2] +
jnz loc_1025945  +
cmp [ebp+arg_C] 0 +
mov esi ecx +
jz loc_1025911  +
mov byte ptr [ecx+20h] 1 +
mov bx [ecx+16h] +
cmp bx [edx+6] +
jnz loc_1025955  +
mov bl [ecx+15h] +
cmp bl [edx+5] +
jnz loc_1025955  +
mov bl [ecx+14h] +
cmp bl [edx+4] +
jnz loc_1025955  +
mov bl [ecx+13h] +
cmp bl [edx+3] +
jnz loc_1025955  +
mov ebx [ecx+18h] +
cmp ebx [edx+8] +
jnz loc_1025955  +
mov ebx [ecx+1Ch] +
cmp ebx [edx+0Ch] +
jz loc_102595B  +
jmp loc_1025955  +
mov ebx eax +
cmp bx [ecx+10h] +
jnz loc_1025955  +
cmp byte ptr [ecx+12h] 0FFh +
jnz loc_1025955  +
mov esi ecx +
mov ecx [ecx] +
cmp edi ecx +
jnz loc_10258F4  +
pop ebx  +
test esi esi +
jz loc_10259C5  +
cmp ax [esi+10h] +
jnz loc_1025972  +
cmp byte ptr [esi+15h] 0FFh +
jnz loc_1025972  +
cmp byte ptr [esi+12h] 0FFh +
jz loc_10259C5  +
mov ax [esi+16h] +
cmp ax [edx+6] +
jnz loc_10259A4  +
mov al [esi+15h] +
cmp al [edx+5] +
jnz loc_10259A4  +
mov al [esi+14h] +
cmp al [edx+4] +
jnz loc_10259A4  +
mov al [esi+13h] +
cmp al [edx+3] +
jnz loc_10259A4  +
mov eax [esi+18h] +
cmp eax [edx+8] +
jnz loc_10259A4  +
mov eax [esi+1Ch] +
cmp eax [edx+0Ch] +
jz loc_10259C5  +
push [ebp+arg_4]  +
mov edi esi +
push [ebp+lpMem]  +
call sub_1025546  +
mov esi eax +
test esi esi +
jz loc_10259C3  +
cmp byte ptr [edi+20h] 0 +
jz loc_10259C5  +
mov byte ptr [esi+20h] 1 +
jmp loc_10259C5  +
mov esi edi +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_10259E6  +
xor eax eax +
jmp loc_1025AAD  +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_1025A73  +
movzx eax word ptr [ebx+4] +
test al 4 +
jnz loc_1025A44  +
test al 8 +
jz loc_1025A10  +
movzx eax byte ptr [ebx+2Ah] +
push eax  +
movzx eax word ptr [ebx+28h] +
push eax  +
push esi  +
call sub_102540F  +
jmp loc_1025A37  +
test eax 100h +
jz loc_1025A29  +
movzx eax byte ptr [ebx+2Ah] +
push eax  +
movzx eax byte ptr [ebx+2Dh] +
push eax  +
push esi  +
call sub_1025454  +
jmp loc_1025A37  +
push dword ptr [ebp+arg_8]  +
lea eax [ebx+28h] +
push eax  +
push esi  +
push ebx  +
call sub_10258CD  +
test eax eax +
jnz loc_1025AAC  +
push esi  +
push ebx  +
call sub_10258A6  +
jmp loc_1025A66  +
push esi  +
call sub_10254A5  +
test eax eax +
jnz loc_1025AAC  +
call sub_10252C3  +
test eax eax +
jz loc_1025A73  +
lea ecx [esi+2Ch] +
mov edx [ecx] +
mov [eax] edx +
mov [eax+4] ecx +
mov [edx+4] eax +
mov [ecx] eax +
test eax eax +
jnz loc_1025AAC  +
call sub_10252C3  +
test eax eax +
jnz loc_1025A77  +
xor eax eax +
jmp loc_1025AAC  +
push edi  +
lea ecx [eax+10h] +
mov edi ecx +
lea esi [ebx+28h] +
movs   +
movs   +
movs   +
movs   +
mov edx 0FFFFh +
mov [ecx] dx +
mov edx [ebp+arg_4] +
mov byte ptr [eax+15h] 0FFh +
mov byte ptr [eax+12h] 0FFh +
movzx ecx byte ptr [ebx+2Ah] +
lea ecx [edx+ecx*8+2Ch] +
mov edx [ecx] +
mov [eax] edx +
mov [eax+4] ecx +
mov [edx+4] eax +
mov [ecx] eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jnz loc_1025AD0  +
xor eax eax +
jmp loc_1025BB2  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_1025AC9  +
push esi  +
push edi  +
lea edi [eax+82Ch] +
mov esi [edi] +
cmp edi esi +
jz loc_1025B32  +
movzx ecx word ptr [ebx+28h] +
mov eax esi +
mov esi [esi] +
cmp [eax+10h] cx +
jnz loc_1025B11  +
mov dx [eax+16h] +
cmp dx [ebx+2Eh] +
jnz loc_1025B11  +
mov dl [eax+15h] +
cmp dl [ebx+2Dh] +
jnz loc_1025B11  +
mov dl [eax+12h] +
cmp dl [ebx+2Ah] +
jz loc_1025BB0  +
mov dx [eax+16h] +
cmp dx [ebx+2Eh] +
jnz loc_1025B2E  +
mov dl [eax+15h] +
cmp dl [ebx+2Dh] +
jnz loc_1025B2E  +
mov dl [eax+12h] +
cmp dl [ebx+2Ah] +
jnz loc_1025B2E  +
mov [ebp+var_4] eax +
cmp edi esi +
jnz loc_1025AE9  +
push 28h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jz loc_1025BB0  +
lea esi [ebx+28h] +
lea edi [eax+10h] +
movs   +
movs   +
movs   +
movs   +
movzx ecx word ptr [ebx+4] +
shr ecx 3 +
and ecx 1 +
mov [eax+24h] ecx +
mov ecx [ebp+var_4] +
test ecx ecx +
jnz loc_1025B7B  +
mov ecx [ebp+arg_4] +
add ecx 82Ch +
mov edx [ecx] +
mov [eax] edx +
mov [eax+4] ecx +
mov [edx+4] eax +
mov [ecx] eax +
jmp loc_1025B89  +
mov edx [ecx] +
mov [eax] edx +
mov [eax+4] ecx +
mov [ecx] eax +
mov ecx [eax] +
mov [ecx+4] eax +
mov ecx [ebp+arg_4] +
inc dword ptr [ecx+834h]  +
mov edx [ebp+arg_8] +
mov ecx [edx+8] +
test ecx ecx +
jz loc_1025BB0  +
cmp dword ptr [ecx+48h] 0 +
jnz loc_1025BA6  +
xor ecx ecx +
jmp loc_1025BAD  +
mov edx ecx +
mov ecx [edx+48h] +
add ecx edx +
mov [eax+20h] ecx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov eax dword_1079AB0 +
mov ecx offset dword_1079AB0 +
jmp loc_1025BD9  +
mov edx eax +
cmp dword ptr [edx+40h] 0 +
mov eax [eax] +
jnz loc_1025BD9  +
mov dword ptr [edx+40h] 1 +
cmp eax ecx +
jnz loc_1025BC8  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
and [ebp+arg_0] 0 +
push edi  +
mov edi [eax] +
cmp edi eax +
jz loc_1025C2F  +
push ebx  +
push esi  +
mov ecx edi +
mov ebx [ecx+14h] +
mov edi [edi] +
mov edx [ecx+10h] +
cmp [ebp+arg_8] ebx +
jb loc_1025C24  +
ja loc_1025C0E  +
cmp [ebp+arg_4] edx +
jb loc_1025C24  +
mov esi [ecx+18h] +
add esi edx +
mov edx [ecx+1Ch] +
adc edx ebx +
cmp [ebp+arg_8] edx +
jb loc_1025C2A  +
ja loc_1025C24  +
cmp [ebp+arg_4] esi +
jb loc_1025C2A  +
cmp edi eax +
jnz loc_1025BF8  +
jmp loc_1025C2D  +
mov [ebp+arg_0] ecx +
pop esi  +
pop ebx  +
mov eax [ebp+arg_0] +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mov ecx [eax+10h] +
push esi  +
mov esi [eax+14h] +
cmp [ebp+arg_C] esi +
jb loc_1025C71  +
ja loc_1025C57  +
cmp [ebp+arg_8] ecx +
jb loc_1025C71  +
mov edx [eax+18h] +
add edx ecx +
mov ecx [eax+1Ch] +
adc ecx esi +
cmp [ebp+arg_C] ecx +
ja loc_1025C71  +
jb loc_1025C6D  +
cmp [ebp+arg_8] edx +
jnb loc_1025C71  +
mov dl 1 +
jmp loc_1025C73  +
xor dl dl +
movzx ecx [ebp+arg_10] +
sub ecx 0Ah +
pop esi  +
jz loc_1025D2D  +
dec ecx  +
jz loc_1025CFC  +
dec ecx  +
jz loc_1025CCB  +
dec ecx  +
dec ecx  +
jnz loc_1025D59  +
mov ecx [ebp+arg_0] +
test dl dl +
jz loc_1025CB2  +
inc dword ptr [ecx+88h]  +
inc dword ptr [eax+30h]  +
mov eax [eax+44h] +
test eax eax +
jz loc_1025D59  +
inc dword ptr [eax+30h]  +
jmp loc_1025D59  +
inc dword ptr [ecx+78h]  +
inc dword ptr [eax+20h]  +
mov eax [eax+44h] +
test eax eax +
jz loc_1025D59  +
inc dword ptr [eax+20h]  +
jmp loc_1025D59  +
mov ecx [ebp+arg_0] +
test dl dl +
jz loc_1025CE7  +
inc dword ptr [ecx+94h]  +
inc dword ptr [eax+3Ch]  +
mov eax [eax+44h] +
test eax eax +
jz loc_1025D59  +
inc dword ptr [eax+3Ch]  +
jmp loc_1025D59  +
inc dword ptr [ecx+84h]  +
inc dword ptr [eax+2Ch]  +
mov eax [eax+44h] +
test eax eax +
jz loc_1025D59  +
inc dword ptr [eax+2Ch]  +
jmp loc_1025D59  +
mov ecx [ebp+arg_0] +
test dl dl +
jz loc_1025D18  +
inc dword ptr [ecx+90h]  +
inc dword ptr [eax+38h]  +
mov eax [eax+44h] +
test eax eax +
jz loc_1025D59  +
inc dword ptr [eax+38h]  +
jmp loc_1025D59  +
inc dword ptr [ecx+80h]  +
inc dword ptr [eax+28h]  +
mov eax [eax+44h] +
test eax eax +
jz loc_1025D59  +
inc dword ptr [eax+28h]  +
jmp loc_1025D59  +
mov ecx [ebp+arg_0] +
test dl dl +
jz loc_1025D49  +
inc dword ptr [ecx+8Ch]  +
inc dword ptr [eax+34h]  +
mov eax [eax+44h] +
test eax eax +
jz loc_1025D59  +
inc dword ptr [eax+34h]  +
jmp loc_1025D59  +
inc dword ptr [ecx+7Ch]  +
inc dword ptr [eax+24h]  +
mov eax [eax+44h] +
test eax eax +
jz loc_1025D59  +
inc dword ptr [eax+24h]  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_C]  +
and [ebp+var_4] 0 +
push 0  +
call sub_10217BE  +
test eax eax +
jz loc_1025E00  +
push esi  +
push [ebp+arg_8]  +
add eax 20h +
push [ebp+arg_4]  +
push eax  +
call sub_1025BE3  +
mov esi eax +
test esi esi +
jz loc_1025DFF  +
push dword ptr [esi+40h]  +
call ds:lstrlenW  +
inc eax  +
push eax  +
push dword ptr [esi+40h]  +
lea eax [ebp+var_4] +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+18h]  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
push eax  +
call sub_1022DFA  +
test al al +
jz loc_1025DFF  +
push ebx  +
push edi  +
mov edi offset unk_1079A00 +
push edi  +
call ds:RtlEnterCriticalSection  +
mov ebx [ebp+arg_0] +
mov edx [ebp+var_4] +
lea eax [ebx+20h] +
mov ecx [eax] +
mov [edx] ecx +
mov edx [ebp+var_4] +
mov [edx+4] eax +
mov edx [ebp+var_4] +
mov [ecx+4] edx +
mov ecx [ebp+var_4] +
push edi  +
mov [eax] ecx +
call ds:RtlLeaveCriticalSection  +
mov eax [ebp+var_4] +
mov [eax+8] ebx +
mov eax [esi+44h] +
mov ecx [ebp+var_4] +
pop edi  +
mov [ecx+44h] eax +
pop ebx  +
pop esi  +
mov eax [ebp+var_4] +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
lea eax [ebp+var_8] +
push eax  +
mov eax [ebp+arg_0] +
cdq   +
push edx  +
push eax  +
mov eax [ebp+arg_8] +
cdq   +
push edx  +
push eax  +
call sub_1025037  +
test eax eax +
jge loc_1025E33  +
mov eax 54Fh +
jmp locret_1025E67  +
lea eax [ebp+var_8] +
push eax  +
push 0  +
push [ebp+arg_C]  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_1024FF6  +
test eax eax +
jl loc_1025E2C  +
mov edx [ebp+var_4] +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp edx ecx +
ja loc_1025E64  +
jb loc_1025E60  +
mov ecx [ebp+var_8] +
cmp ecx eax +
ja loc_1025E64  +
xor eax eax +
jmp locret_1025E67  +
push 6Fh  +
pop eax  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
xor ecx ecx +
xor bl bl +
cmp eax ecx +
jz loc_1025F79  +
push esi  +
mov esi [ebp+arg_4] +
cmp esi ecx +
jz loc_1025F78  +
mov edx [ebp+arg_8] +
cmp edx ecx +
jz loc_1025F78  +
push edi  +
cmp [eax+78h] ecx +
jbe loc_1025EC5  +
mov edi [esi+8] +
lea edx [eax+7Ch] +
cmp [edx] edi +
jz loc_1025EB7  +
inc ecx  +
add edx 28h +
cmp ecx [eax+78h] +
jb loc_1025EA8  +
jmp loc_1025EB9  +
mov bl 1 +
mov edx [ebp+arg_8] +
cmp ecx 0Ah +
jnb loc_1025ED6  +
test bl bl +
jnz loc_1025EDE  +
mov ebx [esi+8] +
mov edi ecx +
imul edi edi +
mov [edi+eax+7Ch] ebx +
inc dword ptr [eax+78h]  +
mov bl 1 +
test bl bl +
jz loc_1025F77  +
imul ecx ecx +
add eax ecx +
mov ecx [eax+80h] +
test ecx ecx +
jbe loc_1025EFF  +
mov edi [esi+38h] +
imul edi dword_1079A80 +
sub edi ecx +
add [eax+90h] edi +
mov ecx [eax+84h] +
test ecx ecx +
jbe loc_1025F1B  +
mov edi [esi+3Ch] +
imul edi dword_1079A80 +
sub edi ecx +
add [eax+94h] edi +
mov ecx [eax+88h] +
test ecx ecx +
jbe loc_1025F30  +
mov edi [edx+44h] +
sub edi ecx +
add [eax+98h] edi +
mov ecx [eax+8Ch] +
test ecx ecx +
jbe loc_1025F45  +
mov edi [edx+48h] +
sub edi ecx +
add [eax+9Ch] edi +
mov ecx [esi+38h] +
imul ecx dword_1079A80 +
mov [eax+80h] ecx +
mov ecx [esi+3Ch] +
imul ecx dword_1079A80 +
mov [eax+84h] ecx +
mov ecx [edx+44h] +
mov [eax+88h] ecx +
mov ecx [edx+48h] +
mov [eax+8Ch] ecx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
xor esi esi +
mov [ebp+var_2] 0 +
mov [ebp+var_1] 0 +
cmp eax esi +
jz loc_10263E8  +
mov edx [ebp+arg_4] +
cmp edx esi +
jz loc_10263E8  +
push ebx  +
mov ebx [ebp+arg_8] +
cmp ebx esi +
jz loc_10263E7  +
push edi  +
mov [ebp+var_8] esi +
cmp [eax+10Ch] esi +
jbe loc_1025FE3  +
mov edi [edx+8] +
lea ecx [eax+114h] +
cmp [ecx] edi +
jz loc_102610A  +
inc esi  +
add ecx 28h +
mov [ebp+var_8] esi +
cmp esi [eax+10Ch] +
jb loc_1025FCC  +
cmp [ebp+arg_C] 0 +
jnz loc_10263E6  +
cmp esi 0Ah +
jnb loc_1026015  +
cmp [ebp+var_2] 0 +
jnz loc_102601F  +
mov edi [edx+8] +
mov ecx esi +
imul ecx ecx +
mov [ecx+eax+114h] edi +
inc dword ptr [eax+10Ch]  +
mov [ebp+var_2] 1 +
mov [ebp+var_1] 1 +
cmp [ebp+var_2] 0 +
jz loc_10263E6  +
lea ecx [esi+7] +
imul ecx ecx +
lea edi [ecx+eax] +
mov ecx [edx+38h] +
imul ecx dword_1079A80 +
mov [ebp+arg_0] edi +
cmp ecx [edi] +
jnb loc_102603B  +
mov [edi] ecx +
mov ecx [edx+3Ch] +
imul esi esi +
imul ecx dword_1079A80 +
add esi eax +
mov [ebp+arg_4] esi +
cmp ecx [esi+11Ch] +
jnb loc_102605B  +
mov [esi+11Ch] ecx +
cmp [ebp+var_1] 0 +
jnz loc_10260A7  +
mov ecx [edx+38h] +
imul ecx dword_1079A80 +
sub ecx [edi] +
add [esi+128h] ecx +
mov ecx [edx+3Ch] +
imul ecx dword_1079A80 +
sub ecx [esi+11Ch] +
add [esi+12Ch] ecx +
mov ecx [ebx+44h] +
sub ecx [esi+120h] +
add [esi+130h] ecx +
mov ecx [ebx+48h] +
sub ecx [esi+124h] +
add [esi+134h] ecx +
push 4  +
lea esi [edx+18h] +
pop ecx  +
mov edi offset unk_105595C +
xor ebx ebx +
cmps   +
jz loc_102636D  +
push 4  +
pop ecx  +
mov edi offset unk_105596C +
lea esi [edx+18h] +
xor ebx ebx +
cmps   +
jz loc_102636D  +
push 4  +
pop ecx  +
mov edi offset unk_105597C +
lea esi [edx+18h] +
xor ebx ebx +
cmps   +
jnz loc_102616D  +
mov ecx [eax+0E8h] +
or ecx [eax+0ECh] +
jz loc_1026168  +
mov ecx [eax+0F0h] +
or ecx [eax+0F4h] +
jnz loc_1026168  +
cmp [ebp+var_1] bl +
jmp loc_10262FD  +
cmp [ebp+arg_C] 0 +
jnz loc_102615F  +
cmp esi [eax+110h] +
jz loc_102615F  +
mov ecx [edx+38h] +
imul ecx dword_1079A80 +
lea edi [esi+7] +
imul edi edi +
mov [edi+eax] ecx +
mov edx [edx+3Ch] +
mov ecx esi +
imul ecx ecx +
add ecx eax +
imul edx dword_1079A80 +
mov [ecx+11Ch] edx +
mov edx [ebx+44h] +
mov [ecx+120h] edx +
mov edx [ebx+48h] +
mov [ecx+124h] edx +
mov [eax+110h] esi +
jmp loc_10263E6  +
mov [ebp+var_2] 1 +
jmp loc_1025FED  +
cmp [ebp+var_1] bl +
jmp loc_10261CA  +
push 4  +
pop ecx  +
mov edi offset unk_105598C +
lea esi [edx+18h] +
xor ebx ebx +
cmps   +
jnz loc_1026202  +
xor ecx ecx +
cmp [eax+0B0h] ecx +
jbe loc_10261C7  +
cmp [ebp+var_1] cl +
jnz loc_10263A0  +
mov ecx [edx+38h] +
imul ecx dword_1079A80 +
mov esi [ebp+arg_0] +
sub ecx [esi] +
mov edi [ebp+arg_4] +
add [eax+38h] ecx +
mov esi [edx+3Ch] +
imul esi dword_1079A80 +
sub esi [edi+11Ch] +
mov ecx [eax+38h] +
add esi ecx +
mov [eax+38h] esi +
jmp loc_10263A0  +
cmp [ebp+var_1] cl +
jnz loc_10263A0  +
mov ecx [edx+38h] +
imul ecx dword_1079A80 +
mov esi [ebp+arg_0] +
sub ecx [esi] +
mov edi [ebp+arg_4] +
add [eax+34h] ecx +
mov esi [edx+3Ch] +
imul esi dword_1079A80 +
sub esi [edi+11Ch] +
mov ecx [eax+34h] +
add esi ecx +
mov [eax+34h] esi +
jmp loc_10263A0  +
push 4  +
pop ecx  +
mov edi offset unk_105599C +
lea esi [edx+18h] +
xor ebx ebx +
cmps   +
jz loc_1026332  +
push 4  +
pop ecx  +
mov edi offset unk_10559AC +
lea esi [edx+18h] +
xor ebx ebx +
cmps   +
jz loc_1026332  +
push 4  +
pop ecx  +
mov edi offset unk_10559BC +
lea esi [edx+18h] +
xor ebx ebx +
cmps   +
jnz loc_1026262  +
mov ecx [eax+0E8h] +
or ecx [eax+0ECh] +
jz loc_102625D  +
mov ecx [eax+0F0h] +
or ecx [eax+0F4h] +
jz loc_1026102  +
cmp [ebp+var_1] bl +
jmp loc_10262C1  +
push 4  +
pop ecx  +
mov edi offset unk_10559EC +
lea esi [edx+18h] +
xor ebx ebx +
cmps   +
jz loc_1026299  +
push 4  +
pop ecx  +
mov edi offset unk_10559FC +
lea esi [edx+18h] +
xor ebx ebx +
cmps   +
jz loc_1026299  +
push 4  +
pop ecx  +
mov edi offset unk_1055A0C +
lea esi [edx+18h] +
xor ebx ebx +
cmps   +
jnz loc_10263A0  +
mov ecx [eax+0E8h] +
or ecx [eax+0ECh] +
jnz loc_10262F9  +
mov ecx [eax+0D0h] +
or ecx [eax+0D4h] +
jnz loc_10262BD  +
cmp [ebp+var_1] cl +
jmp loc_10261CA  +
cmp [ebp+var_1] 0 +
jnz loc_10263A0  +
mov ecx [edx+38h] +
imul ecx dword_1079A80 +
mov esi [ebp+arg_0] +
sub ecx [esi] +
mov edi [ebp+arg_4] +
add [eax+3Ch] ecx +
mov esi [edx+3Ch] +
imul esi dword_1079A80 +
sub esi [edi+11Ch] +
mov ecx [eax+3Ch] +
add esi ecx +
mov [eax+3Ch] esi +
jmp loc_10263A0  +
cmp [ebp+var_1] 0 +
jnz loc_10263A0  +
mov ecx [edx+38h] +
imul ecx dword_1079A80 +
mov esi [ebp+arg_0] +
sub ecx [esi] +
mov edi [ebp+arg_4] +
add [eax+40h] ecx +
mov esi [edx+3Ch] +
imul esi dword_1079A80 +
sub esi [edi+11Ch] +
mov ecx [eax+40h] +
add esi ecx +
mov [eax+40h] esi +
jmp loc_10263A0  +
cmp [ebp+var_1] 0 +
jnz loc_10263A0  +
cmp byte ptr [edx+2Dh] 13h +
jz loc_10263A0  +
mov ecx [edx+38h] +
imul ecx dword_1079A80 +
mov esi [ebp+arg_0] +
sub ecx [esi] +
mov edi [ebp+arg_4] +
add [eax+44h] ecx +
mov esi [edx+3Ch] +
imul esi dword_1079A80 +
sub esi [edi+11Ch] +
mov ecx [eax+44h] +
add esi ecx +
mov [eax+44h] esi +
jmp loc_10263A0  +
cmp [ebp+var_1] 0 +
jnz loc_10263A0  +
mov ecx [edx+38h] +
imul ecx dword_1079A80 +
mov esi [ebp+arg_0] +
sub ecx [esi] +
mov edi [ebp+arg_4] +
add [eax+30h] ecx +
mov esi [edx+3Ch] +
imul esi dword_1079A80 +
sub esi [edi+11Ch] +
mov ecx [eax+30h] +
add esi ecx +
mov [eax+30h] esi +
mov ecx [edx+38h] +
imul ecx dword_1079A80 +
mov esi [ebp+arg_0] +
mov [esi] ecx +
mov ecx [edx+3Ch] +
imul ecx dword_1079A80 +
cmp [ebp+arg_C] 0 +
mov edx [ebp+arg_4] +
mov [edx+11Ch] ecx +
mov ecx [ebp+arg_8] +
mov esi [ecx+44h] +
mov [edx+120h] esi +
mov ecx [ecx+48h] +
mov [edx+124h] ecx +
jnz loc_10263E6  +
mov ecx [ebp+var_8] +
mov [eax+110h] ecx +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
cmp eax ecx +
jz loc_1026441  +
xor edx edx +
mov [eax+28h] ecx +
mov [eax+2Ch] ecx +
mov [eax+48h] ecx +
mov [eax+4Ch] ecx +
cmp [eax+10Ch] ecx +
jbe loc_1026441  +
lea ecx [eax+12Ch] +
push esi  +
mov esi [ecx-4] +
add [eax+28h] esi +
mov esi [ecx] +
add [eax+2Ch] esi +
mov esi [ecx+4] +
add [eax+48h] esi +
mov esi [ecx+8] +
add [eax+4Ch] esi +
inc edx  +
add ecx 28h +
cmp edx [eax+10Ch] +
jb loc_102641D  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor ebx ebx +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1021FE9  +
mov esi eax +
cmp esi ebx +
jnz loc_102646C  +
xor eax eax +
jmp loc_102657B  +
push edi  +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1021FE9  +
mov edi eax +
cmp edi ebx +
jz loc_10265AB  +
cmp [ebp+arg_8] bl +
jz loc_1026504  +
mov eax [esi+0E8h] +
mov ecx [esi+0ECh] +
mov edx eax +
or edx ecx +
jnz loc_10264D7  +
mov edx [edi+0E8h] +
or edx [edi+0ECh] +
jnz loc_10264D7  +
mov eax [esi+0D4h] +
cmp eax [edi+0D4h] +
ja loc_1026595  +
jb loc_10265AB  +
mov eax [esi+0D0h] +
cmp eax [edi+0D0h] +
jnb loc_1026595  +
jmp loc_10265AB  +
mov edx eax +
or edx ecx +
jz loc_10264EF  +
mov edx [edi+0E8h] +
or edx [edi+0ECh] +
jz loc_1026595  +
or eax ecx +
jnz loc_102656A  +
mov eax [edi+0E8h] +
or eax [edi+0ECh] +
jmp loc_10265A9  +
mov eax [esi+0F0h] +
mov ecx [esi+0F4h] +
mov edx eax +
or edx ecx +
jnz loc_1026581  +
mov edx [edi+0F0h] +
or edx [edi+0F4h] +
jnz loc_1026581  +
mov eax [esi+0E8h] +
mov ecx [esi+0ECh] +
mov edx eax +
or edx ecx +
jnz loc_1026544  +
mov edx [edi+0E8h] +
or edx [edi+0ECh] +
jnz loc_1026595  +
mov edx eax +
or edx ecx +
jz loc_1026558  +
mov edx [edi+0E8h] +
or edx [edi+0ECh] +
jz loc_10265AB  +
or eax ecx +
jz loc_102656A  +
mov eax [edi+0E8h] +
or eax [edi+0ECh] +
jnz loc_1026595  +
push ebx  +
push esi  +
call sub_1022803  +
push ebx  +
push edi  +
call sub_1022803  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov edx eax +
or edx ecx +
jz loc_1026599  +
mov edx [edi+0F0h] +
or edx [edi+0F4h] +
jnz loc_1026599  +
mov eax edi +
jmp loc_102657A  +
or eax ecx +
jnz loc_102656A  +
mov eax [edi+0F0h] +
or eax [edi+0F4h] +
jz loc_102656A  +
mov eax esi +
jmp loc_102657A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_100173C +
xor eax eax +
cmps   +
jnz loc_10265D6  +
push [ebp+lpMem]  +
call sub_1023571  +
jmp loc_10265FC  +
mov esi [ebp+arg_4] +
push 4  +
pop ecx  +
mov edi offset dword_100172C +
xor eax eax +
cmps   +
jnz loc_10265FC  +
mov eax [ebp+lpMem] +
cmp dword ptr [eax+44h] 0 +
jnz loc_10265FC  +
cmp dword ptr [eax+48h] 0 +
jnz loc_10265FC  +
push eax  +
call sub_1023621  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_0] esi +
jz loc_102665D  +
cmp [ebp+arg_8] esi +
jz loc_102665D  +
push ebx  +
mov ebx [ebp+arg_4] +
cmp ebx esi +
jle loc_102665C  +
cmp [ebp+arg_C] esi +
jle loc_102665C  +
cmp [ebp+arg_C] ebx +
jl loc_102665C  +
push edi  +
lea edi [ebx-1] +
cmp edi esi +
jle loc_1026651  +
mov eax [ebp+arg_0] +
add eax esi +
mov [ebp+arg_C] eax +
lea eax [ebp+arg_C] +
push eax  +
call ds:RtlAnsiCharToUnicodeChar  +
mov ecx [ebp+arg_8] +
mov [ecx+esi*2] ax +
inc esi  +
cmp esi edi +
jl loc_1026633  +
mov ecx [ebp+arg_8] +
xor eax eax +
mov [ecx+ebx*2-2] ax +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C0h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1026807  +
cmp byte ptr [eax+2Dh] 0 +
jnz loc_1026807  +
mov eax [eax+5Ch] +
cmp dword ptr [eax+2Ch] 8 +
mov ecx [eax+10h] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_B8] ecx +
mov ecx [eax+14h] +
mov [ebp+var_B4] ecx +
push 2Bh  +
lea edi [ebp+var_B0] +
jnz loc_10266CE  +
mov ebx [eax+108h] +
mov ecx [eax+10Ch] +
lea edx [eax+118h] +
lea esi [eax+48h] +
jmp loc_10266E3  +
mov ebx [eax+100h] +
mov ecx [eax+104h] +
lea edx [eax+110h] +
lea esi [eax+40h] +
mov [ebp+var_BC] ecx +
pop ecx  +
push offset aNtKernelLogger  +
push edx  +
movs   +
call ds:__imp__wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_102679E  +
mov eax dword_10566D8 +
cmp byte ptr [eax+5D0h] 0 +
push 2Bh  +
pop ecx  +
jnz loc_102672F  +
lea edi [eax+5D4h] +
lea esi [ebp+var_B0] +
movs   +
mov eax dword_10566D8 +
mov byte ptr [eax+5D0h] 1 +
jmp loc_1026747  +
lea edi [ebp+var_B0] +
lea esi [eax+5D4h] +
xor edx edx +
cmps   +
jz loc_1026747  +
mov [eax+5D0h] dl +
mov eax stru_1079A48.dwHighDateTime +
mov edx [ebp+var_BC] +
cmp eax edx +
ja loc_102676D  +
jb loc_1026761  +
mov eax stru_1079A48.dwLowDateTime +
cmp eax ebx +
jnb loc_102676D  +
mov stru_1079A48.dwLowDateTime ebx +
mov stru_1079A48.dwHighDateTime edx +
mov eax stru_1079A50.dwHighDateTime +
mov esi [ebp+var_B4] +
cmp eax esi +
jb loc_10267AA  +
ja loc_102678B  +
mov eax stru_1079A50.dwLowDateTime +
cmp eax [ebp+var_B8] +
jbe loc_10267AA  +
mov eax [ebp+var_B8] +
mov stru_1079A50.dwLowDateTime eax +
mov stru_1079A50.dwHighDateTime esi +
jmp loc_10267AA  +
mov esi [ebp+var_B4] +
mov edx [ebp+var_BC] +
mov ecx SystemTimeAsFileTime.dwLowDateTime +
mov eax SystemTimeAsFileTime.dwHighDateTime +
mov edi ecx +
or edi eax +
jz loc_10267C5  +
cmp eax edx +
jb loc_10267D1  +
ja loc_10267C5  +
cmp ecx ebx +
jbe loc_10267D1  +
mov SystemTimeAsFileTime.dwLowDateTime ebx +
mov SystemTimeAsFileTime.dwHighDateTime edx +
mov ecx stru_1079A28.dwLowDateTime +
mov eax stru_1079A28.dwHighDateTime +
mov edx ecx +
and edx eax +
cmp edx 0FFFFFFFFh +
jz loc_10267F3  +
cmp eax esi +
ja loc_1026804  +
jb loc_10267F3  +
cmp ecx [ebp+var_B8] +
jnb loc_1026804  +
mov eax [ebp+var_B8] +
mov stru_1079A28.dwLowDateTime eax +
mov stru_1079A28.dwHighDateTime esi +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push ebx  +
push esi  +
push edi  +
lea edx [eax+18h] +
push 4  +
pop ecx  +
mov edi offset dword_10016EC +
mov esi edx +
xor ebx ebx +
cmps   +
jnz loc_1026845  +
cmp [eax+2Dh] bl +
jnz loc_1026845  +
push eax  +
call sub_1026667  +
jmp loc_1026866  +
push 4  +
pop ecx  +
mov edi offset dword_1001E94 +
mov esi edx +
xor eax eax +
cmps   +
mov byte_10799E0 1 +
mov dword_1079A18 8 +
jz loc_1026870  +
mov dword_1079A18 5 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
test eax eax +
jz loc_102689E  +
mov edx [ebp+arg_4] +
cmp edx 7FFFFFFFh +
ja loc_102689E  +
call sub_1031737  +
jmp loc_10268A3  +
mov eax 80070057h +
test eax eax +
jge loc_10268AE  +
test edi edi +
jz loc_10268AE  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov esi offset aK +
lea edi [ebp+var_C] +
movs   +
movs   +
xor esi esi +
lea eax [ebx+10h] +
mov [ebp+var_1C] 20h +
mov [ebp+var_18] esi +
mov [ebp+var_D] 0 +
cmp [eax] eax +
jz loc_10269AA  +
cmp [ebx+3Ch] esi +
jz loc_10269AA  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push ecx  +
call wcstok_s  +
add esp 0Ch +
mov [ebp+var_14] eax +
cmp eax esi +
jz loc_10269AA  +
cmp [ebp+var_D] 0 +
jnz loc_1026953  +
push [ebp+var_14]  +
lea eax [ebp+var_C] +
push eax  +
call ds:__imp__wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_102693B  +
mov [ebp+var_D] 1 +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push esi  +
call wcstok_s  +
add esp 0Ch +
mov [ebp+var_14] eax +
cmp eax esi +
jnz loc_102691E  +
mov eax [ebp+var_14] +
cmp eax esi +
jz loc_10269AA  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_102695D  +
sub eax edx +
sar eax 1 +
mov esi eax +
jz loc_10269AA  +
inc esi  +
lea eax [esi+esi] +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_10269AA  +
push [ebp+var_14]  +
push esi  +
push edi  +
call sub_101F55E  +
test eax eax +
jge loc_10269A7  +
push edi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
jmp loc_10269AA  +
mov [ebx+38h] edi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10566D8 +
push ebx  +
push esi  +
push edi  +
mov edi [eax+680h] +
movzx eax [ebp+arg_10] +
xor ebx ebx +
test al 40h +
jz loc_10269E1  +
push 40h  +
jmp loc_10269EB  +
test al 20h +
jnz loc_10269E9  +
cmp edi ebx +
ja loc_10269EC  +
push 20h  +
pop edi  +
mov eax [ebp+arg_C] +
movzx ecx word ptr [eax+8] +
xor esi esi +
cmp ecx 15h +
jg loc_1026A92  +
cmp ecx 14h +
jge loc_1026AA8  +
cmp ecx 0Fh +
jg loc_1026A50  +
jz loc_1026AA8  +
cmp ecx 1 +
jz loc_1026B17  +
cmp ecx 2 +
jz loc_1026ADD  +
jle loc_1026C4A  +
cmp ecx 0Dh +
jle loc_1026AA8  +
cmp ecx 0Eh +
jnz loc_1026C4A  +
movzx eax word ptr [eax+12h] +
cmp ax bx +
ja loc_1026AF4  +
mov eax [ebp+arg_0] +
sub eax [ebp+arg_8] +
add eax [ebp+arg_4] +
jmp loc_1026ABB  +
cmp ecx 10h +
jz loc_1026AC2  +
jle loc_1026C4A  +
cmp ecx 12h +
jle loc_1026AA8  +
cmp ecx 13h +
jnz loc_1026C4A  +
mov esi [ebp+arg_8] +
push 1  +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1025E0C  +
test eax eax +
jnz loc_1026C51  +
movzx edi byte ptr [esi+1] +
lea edi ds:8[edi*4] +
jmp loc_1026C37  +
sub ecx 12Ch +
cmp ecx 0Ah +
ja loc_1026C4A  +
jmp ds:off_1026C58[ecx*4]  +
movzx ecx word ptr [eax+10h] +
movzx eax word ptr [eax+12h] +
cmp cx bx +
jbe loc_1026ABB  +
movzx ecx cx +
imul eax ecx +
mov esi eax +
jmp loc_1026C4A  +
movzx eax word ptr [eax+10h] +
shr edi 3 +
cmp ax bx +
jbe loc_1026C48  +
movzx eax ax +
imul edi eax +
jmp loc_1026C48  +
mov esi [ebp+arg_0] +
mov ecx [ebp+arg_8] +
movzx eax word ptr [eax+12h] +
sub esi ecx +
add esi [ebp+arg_4] +
mov dword ptr [ebp+arg_10] ebx +
cmp ax bx +
jbe loc_1026AF9  +
movzx eax ax +
jmp loc_1026ABB  +
cmp [ecx] bl +
jz loc_1026B12  +
lea eax [ebp+arg_10] +
push eax  +
push esi  +
push ecx  +
call sub_102687C  +
test eax eax +
jnz loc_1026B12  +
mov eax dword ptr [ebp+arg_10] +
inc eax  +
jmp loc_1026ABB  +
lea eax [esi+1] +
jmp loc_1026ABB  +
mov esi [ebp+arg_0] +
mov ecx [ebp+arg_8] +
movzx eax word ptr [eax+12h] +
sub esi ecx +
add esi [ebp+arg_4] +
mov dword ptr [ebp+arg_10] ebx +
cmp ax bx +
jbe loc_1026B35  +
movzx eax ax +
add eax eax +
jmp loc_1026ABB  +
cmp [ecx] bx +
jz loc_1026B59  +
lea eax [ebp+arg_10] +
push eax  +
mov eax esi +
shr eax 1 +
push eax  +
push ecx  +
call sub_101F5CD  +
test eax eax +
jnz loc_1026B59  +
mov eax dword ptr [ebp+arg_10] +
lea eax [eax+eax+2] +
jmp loc_1026ABB  +
lea eax [esi+2] +
jmp loc_1026ABB  +
xor ebx ebx +
inc ebx  +
mov edi [ebp+arg_8] +
push 2  +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1025E0C  +
test eax eax +
jnz loc_1026C51  +
test ebx ebx +
jz loc_1026B9B  +
movzx ax byte ptr [edi] +
mov ecx 100h +
imul ax cx +
movzx cx byte ptr [edi+1] +
add ax cx +
movzx eax ax +
jmp loc_1026B9E  +
movzx eax word ptr [edi] +
movzx esi ax +
inc esi  +
inc esi  +
push esi  +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1025E0C  +
test eax eax +
jnz loc_1026C51  +
jmp loc_1026C4A  +
mov esi [ebp+arg_8] +
mov ebx [ebp+arg_4] +
push 4  +
push esi  +
push ebx  +
push [ebp+arg_0]  +
call sub_1025E0C  +
test eax eax +
jnz loc_1026C51  +
cmp [esi] eax +
jnz loc_1026BDC  +
push 4  +
pop esi  +
jmp loc_1026C4A  +
cmp edi 40h +
jnz loc_1026BE5  +
push 10h  +
jmp loc_1026BEC  +
cmp edi 20h +
jnz loc_1026C18  +
push 8  +
pop edi  +
push edi  +
push esi  +
push ebx  +
push [ebp+arg_0]  +
call sub_1025E0C  +
test eax eax +
jnz loc_1026C51  +
push 1  +
add esi edi +
push esi  +
push ebx  +
push [ebp+arg_0]  +
call sub_1025E0C  +
test eax eax +
jnz loc_1026C51  +
movzx eax byte ptr [esi+1] +
lea esi [edi+eax*4+8] +
jmp loc_1026C4A  +
push 32h  +
pop eax  +
jmp loc_1026C51  +
mov esi [ebp+arg_8] +
push 4  +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1025E0C  +
test eax eax +
jnz loc_1026C51  +
mov eax [esi] +
lea edi [eax+4] +
push edi  +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1025E0C  +
test eax eax +
jnz loc_1026C51  +
mov esi edi +
mov eax [ebp+arg_14] +
mov [eax] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+5Ch] +
movzx ecx word ptr [esi+56h] +
xor ebx ebx +
push edi  +
mov [ebp+var_C] eax +
mov [ebp+var_4] ecx +
cmp eax ebx +
jz loc_1026E93  +
cmp ecx ebx +
jz loc_1026E93  +
mov ecx [ebp+arg_4] +
cmp dword ptr [ecx+30h] 1 +
jz loc_1026D12  +
push [ebp+arg_10]  +
mov eax [ebp+arg_8] +
mov edi [ebp+arg_C] +
push dword ptr [edi]  +
or [ebp+var_1C] 0FFFFFFFFh +
cdq   +
mov [ebp+var_24] eax +
lea eax [ebp+var_24] +
push eax  +
push 1  +
push ebx  +
push ebx  +
push esi  +
mov [ebp+var_20] edx +
call TdhGetProperty  +
cmp eax ebx +
jz loc_1026E96  +
cmp eax 7Ah +
jnz loc_1026E96  +
push edi  +
lea eax [ebp+var_24] +
push eax  +
push 1  +
push ebx  +
push ebx  +
push esi  +
call TdhGetPropertySize  +
cmp eax ebx +
jnz loc_1026E96  +
push 7Ah  +
jmp loc_1026E95  +
xor edi edi +
mov [ebp+var_8] ebx +
cmp [ecx+68h] ebx +
jbe loc_1026DB6  +
lea edx [ecx+70h] +
mov [ebp+arg_0] edx +
jmp loc_1026D2F  +
mov edx [ebp+arg_0] +
mov ecx eax +
xor ebx ebx +
mov eax [edx+4] +
cmp eax ebx +
jnz loc_1026D3B  +
mov [ebp+var_10] ebx +
jmp loc_1026D40  +
add eax ecx +
mov [ebp+var_10] eax +
mov eax [esi+5Ch] +
lea ecx [ebp+var_14] +
push ecx  +
movzx ecx word ptr [esi+4] +
push ecx  +
movzx ecx word ptr [esi+56h] +
push edx  +
lea ebx [eax+edi] +
push ebx  +
push ecx  +
push eax  +
call sub_10269C0  +
test eax eax +
jnz loc_1026E96  +
mov eax [ebp+var_10] +
test eax eax +
jz loc_1026D9D  +
mov ecx [ebp+arg_8] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1026D94  +
test dx dx +
jz loc_1026D90  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1026D94  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1026D6E  +
xor eax eax +
jmp loc_1026D99  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_1026DC0  +
add edi [ebp+var_14] +
inc [ebp+var_8]  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_8] +
add [ebp+arg_0] 18h +
cmp ecx [eax+68h] +
jb loc_1026D28  +
mov eax 490h +
jmp loc_1026E96  +
mov esi [ebp+var_14] +
mov eax [ebp+arg_C] +
cmp [eax] esi +
jb loc_1026E8E  +
add edi esi +
cmp [ebp+var_4] edi +
jnb loc_1026E67  +
mov eax [ebp+arg_0] +
movzx eax word ptr [eax+8] +
mov ecx 130h +
cmp cx ax +
jz loc_1026DF2  +
xor ecx ecx +
inc ecx  +
cmp cx ax +
jnz loc_1026E20  +
lea edi [esi-2] +
push edi  +
push ebx  +
push [ebp+var_4]  +
push [ebp+var_C]  +
call sub_1025E0C  +
test eax eax +
jnz loc_1026E96  +
push edi  +
push ebx  +
mov ebx [ebp+arg_10] +
push ebx  +
call memcpy  +
xor eax eax +
add esp 0Ch +
add edi ebx +
stos   +
jmp loc_1026E85  +
cmp [ebp+var_4] edi +
jnb loc_1026E67  +
mov eax [ebp+arg_0] +
movzx eax word ptr [eax+8] +
mov ecx 131h +
cmp cx ax +
jz loc_1026E3E  +
push 2  +
pop ecx  +
cmp cx ax +
jnz loc_1026E67  +
lea edi [esi-1] +
push edi  +
push ebx  +
push [ebp+var_4]  +
push [ebp+var_C]  +
call sub_1025E0C  +
test eax eax +
jnz loc_1026E96  +
push edi  +
push ebx  +
mov ebx [ebp+arg_10] +
push ebx  +
call memcpy  +
xor eax eax +
add esp 0Ch +
add edi ebx +
stos   +
jmp loc_1026E85  +
push esi  +
push ebx  +
push [ebp+var_4]  +
push [ebp+var_C]  +
call sub_1025E0C  +
test eax eax +
jnz loc_1026E96  +
push esi  +
push ebx  +
push [ebp+arg_10]  +
call memcpy  +
add esp 0Ch +
xor eax eax +
mov ecx [ebp+arg_C] +
mov [ecx] esi +
jmp loc_1026E96  +
push 7Ah  +
pop eax  +
jmp loc_1026E87  +
push 0Dh  +
pop eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1026EB4  +
push 57h  +
pop eax  +
jmp loc_1026EF6  +
cmp [ebp+arg_C] 0 +
jz loc_1026EAF  +
lea eax [esi+18h] +
push eax  +
call sub_102534C  +
test eax eax +
jnz loc_1026ECB  +
push 8  +
jmp loc_1026EB1  +
push 0  +
push eax  +
push esi  +
call sub_10259D2  +
test eax eax +
jz loc_1026EC7  +
mov eax [eax+8] +
test eax eax +
jnz loc_1026EE6  +
mov eax 490h +
jmp loc_1026EF6  +
push [ebp+arg_8]  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
push eax  +
push esi  +
call sub_1026C89  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
and [ebp+var_C] 0 +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push edi  +
push dword ptr [edi+8]  +
call sub_10218E4  +
mov esi eax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push offset aJobid  +
push edi  +
mov [ebp+var_10] esi +
mov [ebp+var_4] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_1027432  +
cmp [ebp+var_C] eax +
jnz loc_1026F61  +
test esi esi +
jz loc_1027432  +
mov esi [esi+0A4h] +
test esi esi +
jz loc_1027432  +
mov [ebp+var_C] esi +
jmp loc_1026F87  +
test esi esi +
jz loc_1026F87  +
mov eax [esi+0A4h] +
cmp [ebp+var_C] eax +
jz loc_1026F7E  +
push eax  +
call sub_1021F2C  +
push esi  +
push edi  +
push eax  +
call sub_1025E70  +
mov eax [ebp+var_C] +
mov [esi+0A4h] eax +
push ebx  +
push [ebp+var_C]  +
call sub_1021F2C  +
mov ebx eax +
lea eax [edi+18h] +
push 4  +
pop ecx  +
mov edi offset unk_105594C +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_1026FB3  +
mov edx [ebp+arg_0] +
mov ecx 320h +
cmp [edx+28h] cx +
jz loc_1026FCC  +
push 4  +
mov esi eax +
pop ecx  +
mov edi offset unk_105592C +
xor eax eax +
cmps   +
jnz loc_1026FF9  +
mov eax [ebp+arg_0] +
cmp byte ptr [eax+2Dh] 1 +
jnz loc_1026FF9  +
test ebx ebx +
jz loc_1026FD8  +
push 0  +
push ebx  +
call sub_102263A  +
push [ebp+var_C]  +
call sub_10222B2  +
mov ebx eax +
test ebx ebx +
jz loc_1027431  +
mov eax [ebp+arg_0] +
mov ecx [eax+10h] +
mov [ebx+38h] ecx +
mov eax [eax+14h] +
mov [ebx+3Ch] eax +
test ebx ebx +
jz loc_1027431  +
push [ebp+var_10]  +
push [ebp+arg_0]  +
push ebx  +
call sub_1025E70  +
mov edx [ebp+arg_0] +
add edx 18h +
push 4  +
xor eax eax +
mov eax [ebp+arg_0] +
pop ecx  +
mov edi offset unk_105594C +
mov esi edx +
cmps   +
mov [ebp+var_8] edx +
jnz loc_1027038  +
mov ecx 322h +
cmp [eax+28h] cx +
jz loc_10270CB  +
push 4  +
mov esi edx +
pop ecx  +
mov edi offset unk_105594C +
xor edx edx +
cmps   +
jnz loc_1027053  +
mov ecx 326h +
cmp [eax+28h] cx +
jz loc_10270CB  +
mov esi [ebp+var_8] +
push 4  +
pop ecx  +
mov edi offset unk_105594C +
xor edx edx +
cmps   +
jnz loc_102706F  +
mov ecx 327h +
cmp [eax+28h] cx +
jz loc_10270CB  +
mov esi [ebp+var_8] +
push 4  +
pop ecx  +
mov edi offset unk_105592C +
xor edx edx +
cmps   +
jnz loc_1027086  +
cmp byte ptr [eax+2Dh] 0Ah +
jz loc_10270CB  +
mov esi [ebp+var_8] +
push 4  +
pop ecx  +
mov edi offset unk_105592C +
xor edx edx +
cmps   +
jnz loc_102709D  +
cmp byte ptr [eax+2Dh] 2 +
jz loc_10270CB  +
mov esi [ebp+var_8] +
push 4  +
pop ecx  +
mov edi offset unk_105592C +
xor edx edx +
cmps   +
jnz loc_10270B4  +
cmp byte ptr [eax+2Dh] 0Ch +
jz loc_10270CB  +
mov esi [ebp+var_8] +
push 4  +
pop ecx  +
mov edi offset unk_105592C +
xor edx edx +
cmps   +
jnz loc_10270D9  +
cmp byte ptr [eax+2Dh] 0Dh +
jnz loc_10270D9  +
mov ecx [ebp+var_10] +
test ecx ecx +
jz loc_10270D9  +
and dword ptr [ecx+0A4h] 0 +
mov esi [ebp+var_8] +
push 4  +
pop ecx  +
mov edi offset unk_105594C +
xor edx edx +
cmps   +
jnz loc_10270F9  +
mov ecx 326h +
cmp [eax+28h] cx +
jz loc_1027425  +
mov esi [ebp+var_8] +
push 4  +
pop ecx  +
mov edi offset unk_105592C +
xor edx edx +
cmps   +
jnz loc_1027114  +
cmp byte ptr [eax+2Dh] 0Ch +
jz loc_1027425  +
mov esi [ebp+var_8] +
push 4  +
pop ecx  +
mov edi offset unk_105594C +
xor edx edx +
cmps   +
jnz loc_1027134  +
mov ecx 327h +
cmp [eax+28h] cx +
jz loc_10273FB  +
mov esi [ebp+var_8] +
push 4  +
pop ecx  +
mov edi offset unk_105592C +
xor edx edx +
cmps   +
jnz loc_102714F  +
cmp byte ptr [eax+2Dh] 0Dh +
jz loc_10273FB  +
mov esi [ebp+var_8] +
push 4  +
pop ecx  +
mov edi offset unk_105594C +
xor edx edx +
cmps   +
jnz loc_102716F  +
mov ecx 321h +
cmp [eax+28h] cx +
jz loc_10273ED  +
mov esi [ebp+var_8] +
push 4  +
pop ecx  +
mov edi offset unk_105592C +
xor edx edx +
cmps   +
jnz loc_102718A  +
cmp byte ptr [eax+2Dh] 7 +
jz loc_10273ED  +
mov esi [ebp+var_8] +
push 4  +
pop ecx  +
mov edi offset unk_105594C +
xor edx edx +
cmps   +
jnz loc_10271AA  +
mov ecx 322h +
cmp [eax+28h] cx +
jz loc_10272E6  +
mov esi [ebp+var_8] +
push 4  +
pop ecx  +
mov edi offset unk_105592C +
xor edx edx +
cmps   +
jnz loc_10271C5  +
cmp byte ptr [eax+2Dh] 2 +
jz loc_10272E6  +
mov esi [ebp+var_8] +
push 4  +
pop ecx  +
mov edi offset unk_105594C +
xor edx edx +
cmps   +
jnz loc_10271E1  +
mov ecx 325h +
cmp [eax+28h] cx +
jz loc_1027200  +
mov esi [ebp+var_8] +
push 4  +
pop ecx  +
mov edi offset unk_105593C +
xor edx edx +
cmps   +
jnz loc_1027431  +
cmp byte ptr [eax+2Dh] 0Bh +
jnz loc_1027431  +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebx+30h] +
push ecx  +
push offset aGdijobsize  +
push eax  +
mov [ebp+var_4] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_1027431  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebx+2Ch] +
push eax  +
push offset aIcmmethod  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_1027431  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebx+6Ah] +
push eax  +
push offset aColor  +
push esi  +
mov [ebp+var_4] 2 +
call sub_1026EA2  +
test eax eax +
jnz loc_1027431  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebx+6Ch] +
push eax  +
push offset aXres  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_1027431  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebx+6Eh] +
push eax  +
push offset aYres  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_1027431  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebx+70h] +
push eax  +
push offset aQuality  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_1027431  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebx+72h] +
push eax  +
push offset aCopies  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_1027431  +
lea eax [ebp+var_4] +
push eax  +
add ebx 74h +
push ebx  +
push offset aTtoption  +
push esi  +
call sub_1026EA2  +
jmp loc_1027431  +
mov ecx [eax+10h] +
mov [ebx+40h] ecx +
mov ecx [eax+14h] +
mov [ebx+44h] ecx +
mov ecx [eax+10h] +
sub ecx [ebx+38h] +
mov eax [eax+14h] +
sbb eax [ebx+3Ch] +
push 0  +
push 2710h  +
push eax  +
push ecx  +
call __aulldiv  +
add [ebx+48h] eax +
mov esi [ebp+arg_0] +
lea eax [ebp+var_4] +
adc [ebx+4Ch] edx +
push eax  +
lea eax [ebx+20h] +
push eax  +
push offset aJobsize  +
push esi  +
mov [ebp+var_4] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_1027431  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebx+1Ch] +
push eax  +
push offset aDatatype  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_1027431  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebx+24h] +
push eax  +
push offset aPages  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_1027431  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebx+28h] +
push eax  +
push offset aPagesperside  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_1027431  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebx+68h] +
push eax  +
push offset aFilesopened  +
push esi  +
mov [ebp+var_4] 2 +
call sub_1026EA2  +
test eax eax +
jnz loc_1027431  +
xor ecx ecx +
mov [ebx+0Ch] eax +
mov [ebx+10h] eax +
mov [ebx+14h] eax +
mov [ebx+18h] eax +
cmp [ebx+78h] eax +
jbe loc_10273E3  +
lea eax [ebx+94h] +
mov edx [eax-4] +
add [ebx+0Ch] edx +
mov edx [eax] +
add [ebx+10h] edx +
mov edx [eax+4] +
add [ebx+14h] edx +
mov edx [eax+8] +
add [ebx+18h] edx +
inc ecx  +
add eax 28h +
cmp ecx [ebx+78h] +
jb loc_10273C3  +
push 1  +
push ebx  +
call sub_102263A  +
jmp loc_1027431  +
mov ecx [eax+10h] +
mov [ebx+60h] ecx +
mov eax [eax+14h] +
mov [ebx+64h] eax +
jmp loc_1027431  +
mov ecx [eax+10h] +
sub ecx [ebx+58h] +
mov eax [eax+14h] +
sbb eax [ebx+5Ch] +
push 0  +
push 2710h  +
push eax  +
push ecx  +
call __aulldiv  +
add [ebx+50h] eax +
adc [ebx+54h] edx +
and dword ptr [ebx+58h] 0 +
and dword ptr [ebx+5Ch] 0 +
jmp loc_1027431  +
mov ecx [eax+10h] +
mov [ebx+58h] ecx +
mov eax [eax+14h] +
mov [ebx+5Ch] eax +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
and [ebp+var_24] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push 2  +
pop esi  +
mov [ebp+var_2C] eax +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
push offset aAddresstype  +
push ebx  +
mov [ebp+var_28] esi +
call sub_1026EA2  +
test eax eax +
jnz loc_10274E4  +
push edi  +
cmp word ptr [ebp+var_24] si +
jnz loc_1027498  +
mov esi [ebx+5Ch] +
add esi 6 +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
push eax  +
movs   +
push [ebp+var_14+2]  +
push 2  +
jmp loc_10274B6  +
cmp word ptr [ebp+var_24] 17h +
jnz loc_10274E3  +
mov esi [ebx+5Ch] +
push 6  +
pop ecx  +
add esi ecx +
lea edi [ebp+var_20] +
movs   +
lea eax [ebp+var_1A] +
push eax  +
push 0  +
movs   +
push 17h  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_1022357  +
test eax eax +
jz loc_10274E3  +
and dword ptr [eax+10h] 0 +
mov ecx [ebx+10h] +
push 0  +
push [ebp+arg_10]  +
mov [eax+50h] ecx +
push [ebp+var_2C]  +
mov ecx [ebx+14h] +
push eax  +
mov [eax+54h] ecx +
call sub_1025F83  +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
and [ebp+var_34] 0 +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_38] eax +
lea eax [ebp+var_3C] +
push eax  +
lea eax [ebp+var_34] +
push eax  +
push offset aRemoteaddrleng  +
push esi  +
mov [ebp+var_3C] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_10275DC  +
movzx eax ds:byte_10178F2 +
push edi  +
cmp [ebp+var_34] eax +
jnz loc_1027570  +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_34] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push offset aRemoteaddr  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_10275DB  +
push eax  +
push [ebp+var_10]  +
push 2  +
jmp loc_10275A5  +
movzx eax ds:byte_1017907 +
cmp [ebp+var_34] eax +
jnz loc_10275DB  +
push 7  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_30] +
stos   +
lea eax [ebp+var_34] +
push eax  +
lea eax [ebp+var_30] +
push eax  +
push offset aRemoteaddr  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_10275DB  +
lea eax [ebp+var_28] +
push eax  +
push 0  +
push 17h  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_1022357  +
test eax eax +
jz loc_10275DB  +
xor ecx ecx +
inc ecx  +
push 0  +
push [ebp+arg_10]  +
mov [eax+10h] ecx +
push [ebp+var_38]  +
mov [eax+0B4h] cx +
mov ecx [esi+10h] +
mov [eax+50h] ecx +
mov ecx [esi+14h] +
push eax  +
mov [eax+54h] ecx +
call sub_1025F83  +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 4  +
add esi 18h +
pop eax  +
mov ebx offset unk_105595C +
mov ecx eax +
mov edi ebx +
xor edx edx +
cmps   +
jnz loc_1027669  +
mov ecx [ebp+arg_0] +
cmp byte ptr [ecx+2Dh] 0Eh +
jnz loc_1027669  +
mov ebx [ebp+arg_4] +
mov [ebp+arg_14] eax +
lea eax [ebp+arg_14] +
push eax  +
lea eax [ebx+24h] +
push eax  +
push offset aBytessent  +
push ecx  +
call sub_1026EA2  +
test eax eax +
jnz loc_10277BE  +
mov esi [ebp+arg_0] +
lea eax [ebp+arg_14] +
push eax  +
lea eax [ebx+20h] +
push eax  +
push offset aSiteid  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_10277BE  +
mov eax 0C8h +
mov [ebx+108h] ax +
jmp loc_102771F  +
mov edx [ebp+arg_0] +
mov edi ebx +
mov ecx eax +
lea esi [edx+18h] +
xor ebx ebx +
cmps   +
jnz loc_10276CB  +
cmp byte ptr [edx+2Dh] 14h +
jnz loc_10276CB  +
mov ebx [ebp+arg_4] +
mov [ebp+arg_14] eax +
lea eax [ebp+arg_14] +
push eax  +
lea eax [ebx+24h] +
push eax  +
push offset aBytessent  +
push edx  +
call sub_1026EA2  +
test eax eax +
jnz loc_10277BE  +
lea eax [ebp+arg_14] +
push eax  +
lea eax [ebx+20h] +
push eax  +
push offset aSiteid  +
push [ebp+arg_0]  +
call sub_1026EA2  +
test eax eax +
jnz loc_10277BE  +
mov eax 130h +
mov [ebx+108h] ax +
jmp loc_102771C  +
mov ebx [ebp+arg_4] +
mov eax [ebx+88h] +
or eax [ebx+8Ch] +
jz loc_10276E4  +
mov eax [ebx+78h] +
or eax [ebx+7Ch] +
jnz loc_10276F5  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
call sub_10220BD  +
test eax eax +
jz loc_10276F5  +
mov ebx eax +
lea eax [ebp+arg_14] +
push eax  +
lea eax [ebx+108h] +
push eax  +
push offset aHttpstatus  +
push [ebp+arg_0]  +
mov [ebp+arg_14] 2 +
call sub_1026EA2  +
test eax eax +
jnz loc_10277BE  +
mov esi [ebp+arg_0] +
mov eax [esi+10h] +
mov [ebx+58h] eax +
mov eax [esi+14h] +
mov [ebx+5Ch] eax +
movzx ax byte ptr [esi+2Dh] +
mov ecx [ebx+5Ch] +
mov [ebx+82h] ax +
mov eax [ebx+58h] +
sub eax [ebx+50h] +
push 4  +
sbb ecx [ebx+54h] +
mov [ebx+60h] eax +
mov [ebx+64h] ecx +
add esi 18h +
pop ecx  +
mov edi offset unk_105595C +
xor eax eax +
cmps   +
jnz loc_1027768  +
mov eax [ebp+arg_0] +
mov al [eax+2Dh] +
cmp al 0Eh +
jz loc_10277A0  +
cmp al 14h +
jz loc_10277A0  +
mov eax [ebx+0E8h] +
or eax [ebx+0ECh] +
jnz loc_1027784  +
mov eax [ebx+90h] +
or eax [ebx+94h] +
jnz loc_10277A0  +
mov eax [ebx+90h] +
or eax [ebx+94h] +
jz loc_10277BC  +
mov eax [ebx+0F0h] +
or eax [ebx+0F4h] +
jz loc_10277BC  +
push 0  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push ebx  +
call sub_1025F83  +
push ebx  +
call sub_10263F2  +
push 1  +
push ebx  +
call sub_1022803  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 4  +
add esi 18h +
pop eax  +
mov ebx offset unk_105596C +
mov ecx eax +
mov edi ebx +
xor edx edx +
cmps   +
jnz loc_1027843  +
mov ecx [ebp+arg_0] +
cmp byte ptr [ecx+2Dh] 19h +
jnz loc_1027843  +
mov ebx [ebp+arg_4] +
mov [ebp+arg_14] eax +
lea eax [ebp+arg_14] +
push eax  +
lea eax [ebx+24h] +
push eax  +
push offset aBytessent  +
push ecx  +
call sub_1026EA2  +
test eax eax +
jnz loc_1027998  +
mov esi [ebp+arg_0] +
lea eax [ebp+arg_14] +
push eax  +
lea eax [ebx+20h] +
push eax  +
push offset aSiteid  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_1027998  +
mov eax 0C8h +
mov [ebx+108h] ax +
jmp loc_10278F9  +
mov edx [ebp+arg_0] +
mov edi ebx +
mov ecx eax +
lea esi [edx+18h] +
xor ebx ebx +
cmps   +
jnz loc_10278A5  +
cmp byte ptr [edx+2Dh] 1Ah +
jnz loc_10278A5  +
mov ebx [ebp+arg_4] +
mov [ebp+arg_14] eax +
lea eax [ebp+arg_14] +
push eax  +
lea eax [ebx+24h] +
push eax  +
push offset aBytessent  +
push edx  +
call sub_1026EA2  +
test eax eax +
jnz loc_1027998  +
lea eax [ebp+arg_14] +
push eax  +
lea eax [ebx+20h] +
push eax  +
push offset aSiteid  +
push [ebp+arg_0]  +
call sub_1026EA2  +
test eax eax +
jnz loc_1027998  +
mov eax 130h +
mov [ebx+108h] ax +
jmp loc_10278F6  +
mov ebx [ebp+arg_4] +
mov eax [ebx+88h] +
or eax [ebx+8Ch] +
jz loc_10278BE  +
mov eax [ebx+78h] +
or eax [ebx+7Ch] +
jnz loc_10278CF  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
call sub_10220BD  +
test eax eax +
jz loc_10278CF  +
mov ebx eax +
lea eax [ebp+arg_14] +
push eax  +
lea eax [ebx+108h] +
push eax  +
push offset aHttpstatus  +
push [ebp+arg_0]  +
mov [ebp+arg_14] 2 +
call sub_1026EA2  +
test eax eax +
jnz loc_1027998  +
mov esi [ebp+arg_0] +
mov eax [esi+10h] +
mov [ebx+58h] eax +
mov eax [esi+14h] +
mov [ebx+5Ch] eax +
movzx ax byte ptr [esi+2Dh] +
mov ecx [ebx+5Ch] +
mov [ebx+82h] ax +
mov eax [ebx+58h] +
sub eax [ebx+50h] +
push 4  +
sbb ecx [ebx+54h] +
mov [ebx+60h] eax +
mov [ebx+64h] ecx +
add esi 18h +
pop ecx  +
mov edi offset unk_105596C +
xor eax eax +
cmps   +
jnz loc_1027942  +
mov eax [ebp+arg_0] +
mov al [eax+2Dh] +
cmp al 19h +
jz loc_102797A  +
cmp al 1Ah +
jz loc_102797A  +
mov eax [ebx+0E8h] +
or eax [ebx+0ECh] +
jnz loc_102795E  +
mov eax [ebx+90h] +
or eax [ebx+94h] +
jnz loc_102797A  +
mov eax [ebx+90h] +
or eax [ebx+94h] +
jz loc_1027996  +
mov eax [ebx+0F0h] +
or eax [ebx+0F4h] +
jz loc_1027996  +
push 0  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push ebx  +
call sub_1025F83  +
push ebx  +
call sub_10263F2  +
push 1  +
push ebx  +
call sub_1022803  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ecx [ebp+arg_0] +
push esi  +
push edi  +
mov ebx [ebp+arg_4] +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
push 10h  +
pop esi  +
stos   +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push offset aRequestid  +
push ecx  +
mov [ebp+var_24] ecx +
mov [ebp+var_18] esi +
call sub_1026EA2  +
test eax eax +
jnz loc_1027AB5  +
mov eax [ebp+var_14] +
mov ecx [ebp+var_10] +
mov [ebp+var_20] eax +
or eax ecx +
mov [ebp+var_1C] ecx +
jnz loc_1027A2F  +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push offset aContextid  +
push [ebp+var_24]  +
mov [ebp+var_18] esi +
call sub_1026EA2  +
test eax eax +
jnz loc_1027AB5  +
mov eax [ebp+var_C] +
mov [ebp+var_20] eax +
mov eax [ebp+var_8] +
mov [ebp+var_1C] eax +
push [ebp+var_1C]  +
push [ebp+var_20]  +
call sub_1021F73  +
mov esi eax +
test esi esi +
jz loc_1027A74  +
mov edi offset unk_1079A00 +
push edi  +
call ds:RtlEnterCriticalSection  +
mov eax [esi] +
mov ecx [esi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
mov eax dword_1079B08 +
mov [esi] eax +
mov dword ptr [esi+4] offset dword_1079B08 +
mov [eax+4] esi +
push edi  +
mov dword_1079B08 esi +
call ds:RtlLeaveCriticalSection  +
mov eax [ebp+var_20] +
mov [ebx+8] eax +
mov eax [ebp+var_1C] +
mov [ebx+0Ch] eax +
mov eax [ebp+var_24] +
mov ecx [eax+10h] +
mov [ebx+70h] ecx +
mov ecx [eax+14h] +
mov [ebx+74h] ecx +
lea ecx [ebp+var_18] +
push ecx  +
lea ecx [ebp+var_28] +
push ecx  +
push offset aSiteid  +
push eax  +
mov [ebp+var_18] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_1027AB5  +
mov eax [ebp+var_28] +
mov [ebx+20h] eax +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
mov ecx [eax+10h] +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_4] +
mov [esi+70h] ecx +
mov ecx [eax+14h] +
mov [esi+74h] ecx +
lea ecx [ebp+arg_0] +
push ecx  +
lea ecx [ebp+var_4] +
push ecx  +
push offset aSiteid  +
push eax  +
mov [ebp+arg_0] 4 +
call sub_1026EA2  +
mov eax [ebp+var_4] +
mov [esi+20h] eax +
xor eax eax +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov ecx [ebp+cchWideChar] +
mov edx [ecx+10h] +
mov eax [ebp+arg_4] +
mov [eax+68h] edx +
mov ecx [ecx+14h] +
push ebx  +
mov [eax+6Ch] ecx +
mov eax [eax+2BCh] +
xor ebx ebx +
push esi  +
push edi  +
cmp eax ebx +
jz loc_1027B4A  +
push eax  +
push ebx  +
push hHeap  +
call ds:HeapFree  +
mov esi 800h +
push esi  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov edi eax +
cmp edi ebx +
jz loc_1027C61  +
push esi  +
push ebx  +
push edi  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_4] +
push eax  +
mov [ebp+var_4] esi +
push edi  +
mov esi offset aUrl +
push esi  +
push [ebp+cchWideChar]  +
call sub_1026EA2  +
mov [ebp+var_8] eax +
cmp eax 7Ah +
jnz loc_1027BF8  +
push edi  +
push ebx  +
push hHeap  +
call ds:HeapFree  +
mov eax [ebp+var_4] +
add eax 2 +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov edi eax +
cmp edi ebx +
jz loc_1027C61  +
mov eax [ebp+var_4] +
add eax 2 +
push eax  +
push ebx  +
push edi  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push esi  +
push [ebp+cchWideChar]  +
call sub_1026EA2  +
mov [ebp+var_8] eax +
cmp eax ebx +
jz loc_1027BF8  +
mov esi eax +
push edi  +
push ebx  +
push hHeap  +
call ds:HeapFree  +
mov eax esi +
jmp loc_1027C64  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_1027BFD  +
sub eax edx +
sar eax 1 +
mov [ebp+cchWideChar] eax +
jz loc_1027C49  +
inc eax  +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
cmp esi ebx +
jz loc_1027C5C  +
mov eax [ebp+cchWideChar] +
push ebx  +
push ebx  +
inc eax  +
push eax  +
push esi  +
push [ebp+cchWideChar]  +
push edi  +
push ebx  +
push ebx  +
call ds:WideCharToMultiByte  +
mov eax [ebp+cchWideChar] +
mov [esi+eax] bl +
mov eax [ebp+arg_4] +
mov [eax+2BCh] esi +
push edi  +
push ebx  +
push hHeap  +
call ds:HeapFree  +
mov eax [ebp+var_8] +
jmp loc_1027C64  +
push 8  +
pop esi  +
jmp loc_1027BE6  +
push 8  +
pop eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 5Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_40] 0 +
and [ebp+var_3C] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_1028777  +
lea eax [ebx+18h] +
push eax  +
call sub_102534C  +
test eax eax +
jz loc_1028777  +
mov eax dword_10566D8 +
mov ecx [eax+680h] +
movzx eax word ptr [ebx+4] +
push esi  +
push 20h  +
pop esi  +
push 40h  +
pop edx  +
test al dl +
jz loc_1027CC6  +
mov [ebp+var_4C] edx +
jmp loc_1027CD4  +
test al 20h +
jnz loc_1027CD1  +
mov [ebp+var_4C] ecx +
test ecx ecx +
ja loc_1027CD4  +
mov [ebp+var_4C] esi +
mov eax dword_1079A60 +
or eax dword_1079A64 +
jnz loc_1027CF1  +
mov eax [ebx+10h] +
mov dword_1079A60 eax +
mov eax [ebx+14h] +
mov dword_1079A64 eax +
mov eax [ebx+10h] +
push edi  +
mov dword_1079A68 eax +
mov eax [ebx+14h] +
push ebx  +
mov dword_1079A6C eax +
push dword ptr [ebx+8]  +
call sub_10218E4  +
push 4  +
mov [ebp+var_48] eax +
pop ecx  +
mov edi offset unk_10559EC +
lea esi [ebx+18h] +
xor eax eax +
cmps   +
jz loc_1027F4B  +
push 4  +
lea edx [ebx+18h] +
pop ecx  +
mov edi offset unk_10559FC +
mov esi edx +
xor eax eax +
cmps   +
jz loc_1027F4B  +
push 4  +
pop ecx  +
mov edi offset unk_1055A0C +
mov esi edx +
xor eax eax +
cmps   +
jz loc_1027F4B  +
push 4  +
pop ecx  +
mov edi offset unk_10559CC +
mov esi edx +
xor eax eax +
cmps   +
jz loc_1027E93  +
push 4  +
pop ecx  +
mov edi offset unk_10559DC +
mov esi edx +
xor eax eax +
cmps   +
jz loc_1027E93  +
push 4  +
pop ecx  +
mov edi offset dword_100173C +
mov esi edx +
xor eax eax +
cmps   +
jz loc_1027EAC  +
push 4  +
pop ecx  +
mov edi offset unk_105595C +
mov esi edx +
xor eax eax +
cmps   +
jnz loc_1027DC8  +
mov al [ebx+2Dh] +
cmp al 1 +
jz loc_1027DB1  +
cmp al 0Ah +
jz loc_1027DB1  +
cmp al 0Bh +
jz loc_1027DB1  +
cmp al 0Eh +
jz loc_1027DB1  +
cmp al 14h +
jnz loc_1027DC8  +
and [ebp+var_40] 0 +
and [ebp+var_3C] 0 +
lea eax [ebp+var_44] +
push eax  +
lea eax [ebp+var_40] +
push eax  +
push offset aRequestobj  +
jmp loc_1027DF4  +
push 4  +
mov eax offset unk_105596C +
mov esi edx +
pop ecx  +
mov edi eax +
xor edx edx +
cmps   +
jnz loc_1027E06  +
mov cl [ebx+2Dh] +
cmp cl 0Bh +
jz loc_1027DE7  +
cmp cl 0Dh +
jnz loc_1027E06  +
lea eax [ebp+var_44] +
push eax  +
lea eax [ebp+var_40] +
push eax  +
push offset aRequestid  +
push ebx  +
mov [ebp+var_44] 8 +
call sub_1026EA2  +
jmp loc_1027EAC  +
push 4  +
mov edi eax +
pop ecx  +
lea esi [ebx+18h] +
xor eax eax +
cmps   +
jnz loc_1027E2E  +
mov al [ebx+2Dh] +
cmp al 0Ch +
jz loc_1027E23  +
cmp al 19h +
jz loc_1027E23  +
cmp al 1Ah +
jnz loc_1027E2E  +
mov eax [ebx+40h] +
mov [ebp+var_40] eax +
mov eax [ebx+44h] +
jmp loc_1027EA9  +
and [ebp+var_40] edx +
and [ebp+var_3C] edx +
xor eax eax +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_44] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push offset aRequestid  +
push ebx  +
mov [ebp+var_44] 10h +
call sub_1026EA2  +
mov eax [ebp+var_14] +
mov ecx [ebp+var_10] +
mov [ebp+var_40] eax +
or eax ecx +
mov [ebp+var_3C] ecx +
jnz loc_1027ED3  +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_44] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
push offset aContextid  +
push ebx  +
mov [ebp+var_44] 10h +
call sub_1026EA2  +
mov eax [ebp+var_C] +
mov [ebp+var_40] eax +
mov eax [ebp+var_8] +
jmp loc_1027EA9  +
mov eax [ebp+var_48] +
test eax eax +
jz loc_1027EAC  +
mov ecx [eax+158h] +
mov [ebp+var_40] ecx +
mov eax [eax+15Ch] +
mov [ebp+var_3C] eax +
mov eax [ebp+var_40] +
or eax [ebp+var_3C] +
jnz loc_1027ED3  +
mov eax [ebp+var_48] +
test eax eax +
jz loc_1028775  +
mov ecx [eax+158h] +
mov [ebp+var_40] ecx +
mov eax [eax+15Ch] +
mov [ebp+var_3C] eax +
jmp loc_1027F16  +
mov eax [ebp+var_48] +
test eax eax +
jz loc_1027F16  +
mov ecx [eax+158h] +
mov eax [eax+15Ch] +
cmp [ebp+var_40] ecx +
jnz loc_1027EF0  +
cmp [ebp+var_3C] eax +
jz loc_1027F16  +
push eax  +
push ecx  +
call sub_1021F73  +
mov esi [ebp+var_48] +
push 1  +
push esi  +
push ebx  +
push eax  +
call sub_1025F83  +
mov eax [ebp+var_40] +
mov [esi+158h] eax +
mov eax [ebp+var_3C] +
mov [esi+15Ch] eax +
mov eax [ebp+var_40] +
or eax [ebp+var_3C] +
jz loc_1028775  +
push [ebp+var_3C]  +
push [ebp+var_40]  +
call sub_1021F73  +
mov [ebp+var_38] eax +
test eax eax +
jnz loc_1028082  +
push [ebp+var_3C]  +
push [ebp+var_40]  +
call sub_10220BD  +
mov [ebp+var_38] eax +
jmp loc_1028082  +
xor eax eax +
cmp [ebp+var_4C] 20h +
mov [ebp+var_5C] eax +
mov [ebp+var_58] eax +
mov [ebp+var_54] eax +
lea eax [ebp+var_44] +
push eax  +
jnz loc_1027F82  +
lea eax [ebp+var_5C] +
push eax  +
push offset aConnid  +
push ebx  +
mov [ebp+var_44] 4 +
call sub_1026EA2  +
mov eax [ebp+var_5C] +
and [ebp+var_54] 0 +
mov [ebp+var_58] eax +
jmp loc_1027F98  +
lea eax [ebp+var_58] +
push eax  +
push offset aConnid  +
push ebx  +
mov [ebp+var_44] 8 +
call sub_1026EA2  +
mov eax [ebp+var_58] +
or eax [ebp+var_54] +
jnz loc_1027FDC  +
and [ebp+var_40] eax +
and [ebp+var_3C] eax +
lea edi [ebp+var_34] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_44] +
push eax  +
lea eax [ebp+var_34] +
push eax  +
push offset aContextid  +
push ebx  +
mov [ebp+var_44] 10h +
call sub_1026EA2  +
mov ecx [ebp+var_28] +
mov eax [ebp+var_2C] +
push ecx  +
push eax  +
mov [ebp+var_40] eax +
mov [ebp+var_3C] ecx +
call sub_1021F73  +
jmp loc_1027FF4  +
cmp byte ptr [ebx+2Dh] 1 +
setz al  +
mov byte ptr [ebp+var_50] al +
push [ebp+var_50]  +
push [ebp+var_54]  +
push [ebp+var_58]  +
call sub_102644A  +
mov [ebp+var_38] eax +
test eax eax +
jz loc_1028775  +
mov ecx [eax+8] +
mov esi [ebp+var_48] +
mov [ebp+var_40] ecx +
mov eax [eax+0Ch] +
mov [ebp+var_3C] eax +
test esi esi +
jz loc_1028049  +
mov edx [esi+158h] +
mov edi [esi+15Ch] +
cmp ecx edx +
jnz loc_1028026  +
cmp eax edi +
jz loc_102803A  +
push edi  +
push edx  +
call sub_1021F73  +
push 1  +
push esi  +
push ebx  +
push eax  +
call sub_1025F83  +
mov ecx [ebp+var_40] +
mov [esi+158h] ecx +
mov eax [ebp+var_3C] +
mov [esi+15Ch] eax +
push 4  +
lea eax [ebx+18h] +
pop ecx  +
mov edi offset unk_10559FC +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_1028061  +
xor eax eax +
inc eax  +
jmp loc_1028078  +
push 4  +
mov esi eax +
pop ecx  +
mov edi offset unk_1055A0C +
xor eax eax +
cmps   +
jnz loc_1028076  +
push 2  +
pop eax  +
jmp loc_1028078  +
xor eax eax +
mov ecx [ebp+var_38] +
mov [ecx+10Ah] ax +
push 4  +
mov edx offset unk_105595C +
pop ecx  +
mov edi edx +
lea esi [ebx+18h] +
xor eax eax +
cmps   +
jnz loc_10280C4  +
cmp byte ptr [ebx+2Dh] 1 +
jnz loc_10280C4  +
cmp [ebp+var_38] eax +
jz loc_10280AF  +
push eax  +
push [ebp+var_38]  +
call sub_1022803  +
inc dword_1057938  +
push [ebp+var_48]  +
push ebx  +
push [ebp+var_3C]  +
push [ebp+var_40]  +
push ebx  +
call sub_102743D  +
jmp loc_1028775  +
push 4  +
pop ecx  +
mov edi offset unk_105596C +
lea esi [ebx+18h] +
xor eax eax +
cmps   +
jnz loc_1028104  +
cmp byte ptr [ebx+2Dh] 0Bh +
jnz loc_1028104  +
cmp [ebp+var_38] eax +
jz loc_10280EF  +
push eax  +
push [ebp+var_38]  +
call sub_1022803  +
inc dword_1057938  +
push [ebp+var_48]  +
push ebx  +
push [ebp+var_3C]  +
push [ebp+var_40]  +
push ebx  +
call sub_10274F9  +
jmp loc_1028775  +
mov eax [ebp+var_38] +
test eax eax +
jnz loc_1028116  +
inc dword_105793C  +
jmp loc_1028775  +
push 4  +
mov edi edx +
pop ecx  +
lea esi [ebx+18h] +
xor edx edx +
cmps   +
jnz loc_10281C0  +
mov cl [ebx+2Dh] +
cmp cl 0Ah +
jnz loc_102813B  +
push [ebp+var_38]  +
push ebx  +
call sub_1027B14  +
jmp loc_102815C  +
cmp cl 0Bh +
jnz loc_1028169  +
mov eax [ebp+var_48] +
test eax eax +
jz loc_1028153  +
and [eax+158h] edx +
and [eax+15Ch] edx +
push [ebp+var_38]  +
push ebx  +
call sub_10279A4  +
test eax eax +
jnz loc_1028775  +
jmp loc_1028767  +
cmp cl 0Ch +
jz loc_102825A  +
cmp cl 0Dh +
jz loc_102825A  +
cmp cl 10h +
jz loc_102825A  +
cmp cl 0Eh +
jz loc_10281AB  +
cmp cl 0Fh +
jz loc_10281AB  +
cmp cl 14h +
jz loc_10281AB  +
cmp cl 11h +
jz loc_10281AB  +
cmp cl 12h +
jz loc_10281AB  +
cmp cl 13h +
jz loc_10281AB  +
cmp cl 2 +
jnz loc_1028767  +
push [ebp+var_3C]  +
push [ebp+var_40]  +
push [ebp+var_48]  +
push ebx  +
push [ebp+var_38]  +
push ebx  +
call sub_10275F0  +
jmp loc_102815C  +
push 4  +
pop ecx  +
mov edi offset unk_105596C +
lea esi [ebx+18h] +
xor edx edx +
cmps   +
jnz loc_1028277  +
mov cl [ebx+2Dh] +
cmp cl 0Ch +
jz loc_1028130  +
cmp cl 0Dh +
jnz loc_1028207  +
mov eax [ebp+var_48] +
test eax eax +
jz loc_10281F9  +
and [eax+158h] edx +
and [eax+15Ch] edx +
push [ebp+var_38]  +
push ebx  +
call sub_1027ACB  +
jmp loc_102815C  +
cmp cl 0Eh +
jz loc_102825A  +
cmp cl 10h +
jz loc_102825A  +
cmp cl 13h +
jz loc_102825A  +
cmp cl 19h +
jz loc_1028242  +
cmp cl 14h +
jz loc_1028242  +
cmp cl 1Ah +
jz loc_1028242  +
cmp cl 15h +
jz loc_1028242  +
cmp cl 16h +
jz loc_1028242  +
cmp cl 17h +
jz loc_1028242  +
cmp cl 18h +
jz loc_1028242  +
cmp cl 33h +
jnz loc_1028767  +
push [ebp+var_3C]  +
push [ebp+var_40]  +
push [ebp+var_48]  +
push ebx  +
push [ebp+var_38]  +
push ebx  +
call sub_10277CA  +
jmp loc_102815C  +
mov ecx [ebx+10h] +
mov [eax+78h] ecx +
mov ecx [ebx+14h] +
mov [eax+7Ch] ecx +
movzx cx byte ptr [ebx+2Dh] +
mov [eax+80h] cx +
jmp loc_1028767  +
push 4  +
pop ecx  +
mov edi offset unk_105597C +
lea esi [ebx+18h] +
xor edx edx +
cmps   +
jnz loc_10283A2  +
mov cl [ebx+2Dh] +
cmp cl 1 +
jnz loc_10282AB  +
mov ecx [ebx+10h] +
mov [eax+88h] ecx +
mov ecx [ebx+14h] +
mov [eax+8Ch] ecx +
jmp loc_1028767  +
cmp cl 0Ah +
jz loc_1028380  +
cmp cl 0Bh +
jz loc_1028380  +
cmp cl 0Ch +
jz loc_1028380  +
cmp cl 0Dh +
jz loc_1028380  +
cmp cl 2 +
jnz loc_1028767  +
mov eax [ebp+var_38] +
mov ecx [eax+88h] +
or ecx [eax+8Ch] +
jz loc_10282F1  +
mov ecx [eax+78h] +
or ecx [eax+7Ch] +
jnz loc_1028307  +
push [ebp+var_3C]  +
push [ebp+var_40]  +
call sub_10220BD  +
test eax eax +
jz loc_1028307  +
mov esi eax +
mov [ebp+var_38] esi +
jmp loc_102830A  +
mov esi [ebp+var_38] +
lea eax [ebp+var_44] +
push eax  +
lea eax [esi+24h] +
push eax  +
push offset aBytessent  +
push ebx  +
mov [ebp+var_44] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_1028775  +
mov eax [ebx+10h] +
mov [esi+90h] eax +
mov eax [ebx+14h] +
mov [esi+94h] eax +
movzx ax byte ptr [ebx+2Dh] +
mov [esi+0B6h] ax +
mov eax [esi+0E8h] +
or eax [esi+0ECh] +
mov eax [esi+58h] +
jz loc_1028378  +
or eax [esi+5Ch] +
jz loc_1028767  +
mov eax [ebp+var_38] +
mov ecx [eax+0F0h] +
or ecx [eax+0F4h] +
jmp loc_10286F9  +
or eax [esi+5Ch] +
jmp loc_10286F9  +
movzx cx cl +
mov [eax+0B4h] cx +
mov ecx [ebx+10h] +
mov [eax+0B8h] ecx +
mov ecx [ebx+14h] +
mov [eax+0BCh] ecx +
jmp loc_1028767  +
push 4  +
pop ecx  +
mov edi offset unk_105598C +
lea esi [ebx+18h] +
xor edx edx +
cmps   +
jnz loc_102843B  +
mov cl [ebx+2Dh] +
cmp cl 1 +
jnz loc_10283EE  +
mov ecx [eax+0A0h] +
or ecx [eax+0A4h] +
mov ecx [ebx+10h] +
mov [eax+0A0h] ecx +
mov ecx [ebx+14h] +
mov [eax+0A4h] ecx +
jnz loc_1028767  +
inc dword ptr [eax+0B0h]  +
jmp loc_1028767  +
cmp cl 2 +
jnz loc_1028767  +
mov eax [ebp+var_38] +
mov edx [eax+0A0h] +
mov esi [eax+0A4h] +
mov eax edx +
or eax esi +
jz loc_1028767  +
mov edi [ebx+10h] +
mov ecx [ebp+var_38] +
sub edi edx +
mov edx [ebx+14h] +
sbb edx esi +
lea eax [ecx+98h] +
add [eax] edi +
adc [eax+4] edx +
and dword ptr [ecx+0A0h] 0 +
and dword ptr [ecx+0A4h] 0 +
jmp loc_1028767  +
push 4  +
pop ecx  +
mov edi offset unk_105599C +
lea esi [ebx+18h] +
xor edx edx +
cmps   +
jz loc_102871D  +
push 4  +
pop ecx  +
mov edi offset unk_10559AC +
lea esi [ebx+18h] +
xor edx edx +
cmps   +
jz loc_102871D  +
push 4  +
pop ecx  +
mov edi offset unk_10559BC +
lea esi [ebx+18h] +
xor edx edx +
cmps   +
jnz loc_1028566  +
mov cl [ebx+2Dh] +
cmp cl 1 +
jnz loc_1028539  +
xor ecx ecx +
cmp [ebp+var_4C] 20h +
push 0Ch  +
mov [ebp+var_50] ecx +
mov [ebp+var_C] ecx +
mov [ebp+var_8] ecx +
pop ecx  +
mov [eax+0B4h] cx +
lea eax [ebp+var_44] +
push eax  +
jnz loc_10284C8  +
lea eax [ebp+var_50] +
push eax  +
push offset aConnid_0  +
push ebx  +
mov [ebp+var_44] 4 +
call sub_1026EA2  +
mov ecx [ebp+var_50] +
xor edx edx +
mov [ebp+var_C] ecx +
mov [ebp+var_8] edx +
jmp loc_10284E4  +
lea eax [ebp+var_C] +
push eax  +
push offset aConnid_0  +
push ebx  +
mov [ebp+var_44] 8 +
call sub_1026EA2  +
mov edx [ebp+var_8] +
mov ecx [ebp+var_C] +
mov eax ecx +
or eax edx +
jnz loc_1028519  +
lea edi [ebp+var_24] +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_44] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
push offset aContextid  +
push ebx  +
mov [ebp+var_44] 10h +
call sub_1026EA2  +
test eax eax +
jnz loc_1028775  +
mov ecx [ebp+var_1C] +
mov edx [ebp+var_18] +
mov eax [ebp+var_38] +
mov [eax+18h] ecx +
mov [eax+1Ch] edx +
mov ecx [ebx+10h] +
mov [eax+0D0h] ecx +
mov ecx [ebx+14h] +
mov [eax+0D4h] ecx +
jmp loc_1028767  +
cmp cl 2 +
jnz loc_1028767  +
mov eax [ebp+var_38] +
push 2  +
pop ecx  +
mov [eax+0E0h] cx +
mov ecx [ebx+10h] +
mov [eax+0D8h] ecx +
mov ecx [ebx+14h] +
mov [eax+0DCh] ecx +
jmp loc_1028767  +
push 4  +
pop ecx  +
mov edi offset unk_10559CC +
lea esi [ebx+18h] +
xor edx edx +
cmps   +
jnz loc_10285F5  +
mov cl [ebx+2Dh] +
cmp cl 1 +
jnz loc_102859F  +
add eax 100h +
mov ecx [eax] +
or ecx [eax+4] +
jnz loc_1028767  +
mov ecx [ebx+10h] +
mov [eax] ecx +
mov ecx [ebx+14h] +
mov [eax+4] ecx +
jmp loc_1028767  +
cmp cl 2 +
jnz loc_1028767  +
mov edx [ebp+var_38] +
mov edi [edx+100h] +
mov esi [edx+104h] +
mov eax edi +
or eax esi +
jz loc_10285E2  +
mov ecx [ebx+14h] +
mov eax [ebx+10h] +
cmp ecx esi +
jb loc_10285E2  +
ja loc_10285CD  +
cmp eax edi +
jbe loc_10285E2  +
sub eax edi +
sbb ecx esi +
mov [edx+100h] eax +
mov [edx+104h] ecx +
jmp loc_1028767  +
and dword ptr [edx+100h] 0 +
and dword ptr [edx+104h] 0 +
jmp loc_1028767  +
push 4  +
pop ecx  +
mov edi offset unk_10559DC +
lea esi [ebx+18h] +
xor edx edx +
cmps   +
jnz loc_102866E  +
mov cl [ebx+2Dh] +
cmp cl 1 +
jnz loc_1028618  +
add eax 0F8h +
jmp loc_1028584  +
cmp cl 2 +
jnz loc_1028767  +
mov edx [ebp+var_38] +
mov edi [edx+0F8h] +
mov esi [edx+0FCh] +
mov eax edi +
or eax esi +
jz loc_102865B  +
mov ecx [ebx+14h] +
mov eax [ebx+10h] +
cmp ecx esi +
jb loc_102865B  +
ja loc_1028646  +
cmp eax edi +
jbe loc_102865B  +
sub eax edi +
sbb ecx esi +
mov [edx+0F8h] eax +
mov [edx+0FCh] ecx +
jmp loc_1028767  +
and dword ptr [edx+0F8h] 0 +
and dword ptr [edx+0FCh] 0 +
jmp loc_1028767  +
push 4  +
pop ecx  +
mov edi offset unk_10559EC +
lea esi [ebx+18h] +
xor edx edx +
cmps   +
jz loc_10286A8  +
push 4  +
pop ecx  +
mov edi offset unk_10559FC +
lea esi [ebx+18h] +
xor edx edx +
cmps   +
jz loc_10286A8  +
push 4  +
pop ecx  +
mov edi offset unk_1055A0C +
lea esi [ebx+18h] +
xor eax eax +
cmps   +
jnz loc_1028767  +
mov eax [ebp+var_38] +
mov cl [ebx+2Dh] +
cmp cl 1 +
jnz loc_10286C7  +
mov ecx [ebx+10h] +
mov [eax+0E8h] ecx +
mov ecx [ebx+14h] +
mov [eax+0ECh] ecx +
jmp loc_1028767  +
cmp cl 2 +
jnz loc_1028767  +
mov eax [ebp+var_38] +
mov ecx [ebx+10h] +
mov [eax+0F0h] ecx +
mov ecx [ebx+14h] +
mov [eax+0F4h] ecx +
mov ecx [eax+58h] +
or ecx [eax+5Ch] +
jz loc_1028767  +
mov ecx [eax+90h] +
or ecx [eax+94h] +
jz loc_1028767  +
push 0  +
push [ebp+var_48]  +
push ebx  +
push [ebp+var_38]  +
call sub_1025F83  +
push [ebp+var_38]  +
call sub_10263F2  +
push 1  +
push [ebp+var_38]  +
call sub_1022803  +
jmp loc_1028775  +
mov cl [ebx+2Dh] +
cmp cl 1 +
jz loc_102874B  +
cmp cl 12h +
jz loc_102874B  +
cmp cl 2 +
jz loc_1028737  +
cmp cl 13h +
jnz loc_1028767  +
mov eax [ebp+var_38] +
mov ecx [ebx+10h] +
mov [eax+0C8h] ecx +
mov ecx [ebx+14h] +
mov [eax+0CCh] ecx +
jmp loc_1028767  +
push 0Bh  +
pop ecx  +
mov [eax+0B4h] cx +
mov ecx [ebx+10h] +
mov [eax+0C0h] ecx +
mov ecx [ebx+14h] +
mov [eax+0C4h] ecx +
push 0  +
push [ebp+var_48]  +
push ebx  +
push [ebp+var_38]  +
call sub_1025F83  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+var_8] 0 +
and [ebp+var_C] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
mov al [ebx+2Dh] +
mov [ebp+var_1] 0 +
lea edx [ebx+18h] +
cmp al 4 +
jz loc_10287B8  +
cmp al 2 +
jz loc_10287B8  +
xor al al +
jmp loc_102883A  +
push esi  +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_100173C +
mov esi edx +
xor eax eax +
cmps   +
jnz loc_10287F3  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push offset aTthreadid  +
push ebx  +
mov [ebp+arg_0] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_1028835  +
push ebx  +
push [ebp+var_8]  +
call sub_10218E4  +
jmp loc_1028828  +
push 4  +
pop eax  +
mov esi edx +
mov ecx eax +
mov edi offset dword_100172C +
xor edx edx +
cmps   +
jnz loc_1028835  +
mov [ebp+arg_0] eax +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push offset aProcessid  +
push ebx  +
call sub_1026EA2  +
test eax eax +
jnz loc_1028835  +
push eax  +
push [ebp+var_C]  +
call sub_10217BE  +
test eax eax +
jz loc_1028835  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
mov [ebp+var_1] 1 +
mov al [ebp+var_1] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
xor eax eax +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_10] eax +
mov [ebp+var_8] eax +
mov [ebp+lpMem] eax +
mov eax [ebp+arg_0] +
mov cl [eax+2Dh] +
lea edx [eax+18h] +
mov byte ptr [ebp+arg_0+3] cl +
push 4  +
pop ecx  +
mov edi offset dword_10016FC +
mov esi edx +
xor ebx ebx +
cmps   +
mov [ebp+var_4] edx +
jz loc_10289ED  +
push 4  +
mov esi edx +
pop ecx  +
mov edi offset dword_10016EC +
xor edx edx +
cmps   +
jz loc_10289ED  +
mov esi [eax+14h] +
mov ecx SystemTimeAsFileTime.dwHighDateTime +
mov edi [eax+10h] +
mov edx SystemTimeAsFileTime.dwLowDateTime +
cmp ecx esi +
ja loc_10288F9  +
jb loc_10288AD  +
cmp edx edi +
ja loc_10288CC  +
cmp stru_1079A28.dwHighDateTime esi +
jb loc_10288CC  +
ja loc_10288BF  +
cmp stru_1079A28.dwLowDateTime edi +
jb loc_10288CC  +
cmp byte_1079A58 bl +
jz loc_10288CC  +
and [ebp+var_8] ebx +
jmp loc_1028900  +
cmp ecx esi +
ja loc_10288F9  +
jb loc_10288D6  +
cmp edx edi +
ja loc_10288F9  +
cmp byte_1079A58 bl +
jz loc_10288F9  +
cmp stru_1079A28.dwHighDateTime esi +
ja loc_1028900  +
jb loc_10288F0  +
cmp stru_1079A28.dwLowDateTime edi +
jnb loc_1028900  +
mov [ebp+var_8] 2 +
jmp loc_1028900  +
mov [ebp+var_8] 1 +
mov ecx [ebp+var_8] +
dec ecx  +
jz loc_1028961  +
dec ecx  +
jnz loc_10289DB  +
mov esi [ebp+var_4] +
xor ebx ebx +
inc ebx  +
push 4  +
pop ecx  +
mov edi offset dword_100173C +
xor eax eax +
cmps   +
jz loc_102894D  +
mov esi [ebp+var_4] +
push 4  +
pop ecx  +
mov edi offset dword_100172C +
xor eax eax +
cmps   +
jz loc_102894D  +
mov esi [ebp+var_4] +
push 4  +
pop ecx  +
mov edi offset loc_100176C +
xor eax eax +
cmps   +
jnz loc_10289DE  +
cmp byte ptr [ebp+arg_0+3] 24h +
jmp loc_1028957  +
cmp byte ptr [ebp+arg_0+3] 4 +
jz loc_102895D  +
cmp byte ptr [ebp+arg_0+3] 2 +
jnz loc_10289DE  +
xor ebx ebx +
jmp loc_10289DE  +
mov edx [ebp+var_4] +
push 4  +
pop ecx  +
mov edi offset dword_100173C +
mov esi edx +
xor ebx ebx +
cmps   +
jz loc_10289A7  +
push 4  +
pop ecx  +
mov edi offset dword_100172C +
mov esi edx +
xor ebx ebx +
cmps   +
jz loc_10289A7  +
push 4  +
pop ecx  +
mov edi offset loc_100176C +
mov esi edx +
xor eax eax +
cmps   +
jz loc_102895D  +
push 4  +
pop ecx  +
mov edi offset dword_100175C +
mov esi edx +
xor eax eax +
cmps   +
jz loc_102895D  +
inc ebx  +
jmp loc_10289DE  +
mov cl byte ptr [ebp+arg_0+3] +
cmp cl 3 +
jz loc_102895D  +
xor ebx ebx +
inc ebx  +
cmp cl bl +
jz loc_102895D  +
cmp cl 4 +
jz loc_10289C0  +
cmp cl 2 +
jnz loc_10289DB  +
lea ecx [ebp+lpMem] +
push ecx  +
push eax  +
call sub_102878B  +
test al al +
jz loc_10289DE  +
push [ebp+var_4]  +
push [ebp+lpMem]  +
call sub_10265B4  +
jmp loc_10289DE  +
mov ebx [ebp+var_10] +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_8] +
mov [eax] ebx +
mov eax [ebp+arg_8] +
mov [eax] ecx +
jmp loc_10289F7  +
mov eax [ebp+arg_4] +
and [eax] ebx +
mov eax [ebp+arg_8] +
and [eax] ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_10016EC +
lea esi [ebx+18h] +
xor eax eax +
cmps   +
jz loc_1028B1A  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_1028B1A  +
cmp [esi+38h] eax +
jnz loc_1028B1A  +
mov eax dword_10566D8 +
cmp byte ptr [eax+5D1h] 0 +
jz loc_1028ACF  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
push ebx  +
call sub_1028844  +
mov eax [ebp+arg_0] +
sub eax 0 +
jz loc_1028ACF  +
dec eax  +
jz loc_1028A9D  +
dec eax  +
jnz loc_1028B1A  +
mov eax [ebx+10h] +
mov [esi+78h] eax +
mov eax [ebx+14h] +
mov [esi+7Ch] eax +
cmp eax stru_1079A28.dwHighDateTime +
jb loc_1028B1A  +
mov eax stru_1079A28.dwLowDateTime +
ja loc_1028A93  +
mov ecx [esi+78h] +
cmp ecx eax +
jbe loc_1028B1A  +
mov [esi+78h] eax +
mov eax stru_1079A28.dwHighDateTime +
jmp loc_1028ACA  +
mov eax [ebx+38h] +
mov [esi+80h] eax +
mov eax [ebx+3Ch] +
mov [esi+88h] eax +
mov eax [ebx+38h] +
mov [esi+84h] eax +
mov eax [ebx+3Ch] +
mov [esi+8Ch] eax +
mov eax [ebx+10h] +
mov [esi+78h] eax +
mov eax [ebx+14h] +
mov [esi+7Ch] eax +
jmp loc_1028B1A  +
mov eax [ebx+10h] +
mov [esi+78h] eax +
mov eax [ebx+14h] +
mov [esi+7Ch] eax +
cmp eax stru_1079A28.dwHighDateTime +
jb loc_1028AFC  +
mov eax stru_1079A28.dwLowDateTime +
ja loc_1028AF1  +
mov ecx [esi+78h] +
cmp ecx eax +
jbe loc_1028AFC  +
mov [esi+78h] eax +
mov eax stru_1079A28.dwHighDateTime +
mov [esi+7Ch] eax +
mov ecx [ebx+38h] +
lea eax [esi+84h] +
cmp [eax] ecx +
jnb loc_1028B0B  +
mov [eax] ecx +
mov ebx [ebx+3Ch] +
lea eax [esi+8Ch] +
cmp [eax] ebx +
jnb loc_1028B1A  +
mov [eax] ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+lpString] +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
cmp esi ebx +
jz loc_1028F0A  +
cmp [esi+2Dh] bl +
jnz loc_1028F0A  +
mov eax [esi+5Ch] +
push edi  +
mov [ebp+lpString] eax +
mov eax dword_10566D8 +
mov eax [eax+680h] +
push 4  +
pop edi  +
mov [ebp+var_14] eax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push offset aPointersize  +
push esi  +
mov [ebp+var_4] edi +
call sub_1026EA2  +
test eax eax +
jnz loc_1028F09  +
mov eax [ebp+var_8] +
mov ecx dword_10566D8 +
shl eax 3 +
mov [ebp+var_8] eax +
mov [ecx+680h] eax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push offset aProviderversio  +
push esi  +
mov [ebp+var_4] edi +
call sub_1026EA2  +
test eax eax +
jnz loc_1028F09  +
and [ebp+var_C] 0FAFFFFFFh +
mov eax [ebp+var_C] +
mov dword_1079AA8 eax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push offset aTimerresolutio  +
push esi  +
mov [ebp+var_4] edi +
call sub_1026EA2  +
test eax eax +
jnz loc_1028F09  +
mov eax [ebp+var_10] +
xor edx edx +
mov ecx 2710h +
div  ecx +
mov dword_1079A80 eax +
cmp [ebp+var_10] ebx +
jbe loc_1028BFD  +
mov dword_1055AAC eax +
lea eax [ebp+var_4] +
push eax  +
push offset dword_1079A84  +
push offset aReservedflags  +
push esi  +
mov [ebp+var_4] edi +
call sub_1026EA2  +
test eax eax +
jnz loc_1028F09  +
push 8  +
pop ebx  +
lea eax [ebp+var_4] +
push eax  +
push offset dword_1079A88  +
push offset aPerffreq  +
push esi  +
mov [ebp+var_4] ebx +
call sub_1026EA2  +
test eax eax +
jnz loc_1028F09  +
lea eax [ebp+var_4] +
push eax  +
push offset dword_1079A94  +
push offset aNumberofproces  +
push esi  +
mov [ebp+var_4] edi +
call sub_1026EA2  +
test eax eax +
jnz loc_1028F09  +
cmp dword_105792C eax +
jnz loc_1028C83  +
mov eax dword_1079A94 +
push 100h  +
push 0  +
push offset dword_1057708  +
mov dword_105792C eax +
call memset  +
add esp 0Ch +
lea eax [ebp+var_4] +
push eax  +
push offset dword_1079A98  +
push offset aCpuspeed  +
push esi  +
mov [ebp+var_4] edi +
call sub_1026EA2  +
test eax eax +
jnz loc_1028F09  +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push offset aLogfilemode  +
push esi  +
mov [ebp+var_4] edi +
call sub_1026EA2  +
test eax eax +
jnz loc_1028F09  +
mov eax [ebp+var_18] +
and eax 800h +
mov dword_1057928 eax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push offset aEventslost  +
push esi  +
mov [ebp+var_4] edi +
call sub_1026EA2  +
test eax eax +
jnz loc_1028F09  +
mov eax [ebp+var_1C] +
add dword_1057918 eax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
push offset aStarttime  +
push esi  +
mov [ebp+var_4] ebx +
call sub_1026EA2  +
test eax eax +
jnz loc_1028F09  +
mov eax dword_10566D8 +
test byte ptr [eax+3B0h] 8 +
jnz loc_1028D4D  +
mov ecx SystemTimeAsFileTime.dwLowDateTime +
mov eax SystemTimeAsFileTime.dwHighDateTime +
mov ebx [ebp+var_28] +
mov edx ecx +
or edx eax +
mov edx [ebp+var_2C] +
jz loc_1028D41  +
cmp eax ebx +
jb loc_1028D4D  +
ja loc_1028D41  +
cmp ecx edx +
jbe loc_1028D4D  +
mov SystemTimeAsFileTime.dwLowDateTime edx +
mov SystemTimeAsFileTime.dwHighDateTime ebx +
mov eax [esi+10h] +
mov dword_1079B60 eax +
mov eax [esi+14h] +
mov dword_1079B64 eax +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
push offset aEndtime  +
push esi  +
mov [ebp+var_4] 8 +
call sub_1026EA2  +
test eax eax +
jnz loc_1028F09  +
mov eax dword_10566D8 +
test byte ptr [eax+3B0h] 8 +
mov ecx [ebp+var_24] +
jnz loc_1028DBF  +
mov esi stru_1079A28.dwLowDateTime +
mov edx stru_1079A28.dwHighDateTime +
mov ebx esi +
and ebx edx +
cmp ebx 0FFFFFFFFh +
jz loc_1028DB0  +
cmp edx [ebp+var_20] +
ja loc_1028DBF  +
jb loc_1028DB0  +
cmp esi ecx +
jnb loc_1028DBF  +
mov edx [ebp+var_20] +
mov stru_1079A28.dwLowDateTime ecx +
mov stru_1079A28.dwHighDateTime edx +
cmp byte_1079A78 0 +
jnz loc_1028DDB  +
or ecx [ebp+var_20] +
mov byte_1079A78 1 +
jz loc_1028DDB  +
mov byte_1079A78 0 +
test byte ptr [eax+3B0h] 8 +
jz loc_1028EBD  +
mov ebx ds:HeapAlloc +
push 20h  +
push 8  +
push hHeap  +
call ebx  +
mov esi eax +
test esi esi +
jz loc_1028EB8  +
mov eax [ebp+lpString] +
cmp dword ptr [eax+2Ch] 8 +
jnz loc_1028E14  +
add eax 118h +
jmp loc_1028E19  +
add eax 110h +
mov edi ds:lstrlenW +
push eax  +
mov [ebp+lpString] eax +
call edi  +
lea eax [eax+eax+2] +
push eax  +
push 8  +
push hHeap  +
call ebx  +
mov [esi+1Ch] eax +
test eax eax +
jz loc_1028E4D  +
push [ebp+lpString]  +
push [ebp+lpString]  +
call edi  +
inc eax  +
push eax  +
push dword ptr [esi+1Ch]  +
call sub_101F55E  +
push [ebp+lpString]  +
call edi  +
mov ecx [ebp+lpString] +
lea eax [ecx+eax*2+2] +
push eax  +
mov [ebp+lpString] eax +
call edi  +
lea eax [eax+eax+2] +
push eax  +
push 8  +
push hHeap  +
call ebx  +
mov [esi+18h] eax +
test eax eax +
jz loc_1028E87  +
push [ebp+lpString]  +
push [ebp+lpString]  +
call edi  +
inc eax  +
push eax  +
push dword ptr [esi+18h]  +
call sub_101F55E  +
mov eax [ebp+var_2C] +
mov [esi+8] eax +
mov eax [ebp+var_28] +
mov [esi+0Ch] eax +
mov eax [ebp+var_24] +
mov [esi+10h] eax +
mov eax [ebp+var_20] +
mov [esi+14h] eax +
mov eax dword_1079AF4 +
mov dword ptr [esi] offset dword_1079AF0 +
mov [esi+4] eax +
push 4  +
mov [eax] esi +
mov dword_1079AF4 esi +
pop edi  +
mov eax dword_10566D8 +
mov ecx [ebp+var_8] +
cmp [ebp+var_14] ecx +
jbe loc_1028ECB  +
mov ecx [ebp+var_14] +
mov [ebp+var_8] ecx +
cmp ecx 10h +
jnb loc_1028ED6  +
push 20h  +
pop ecx  +
mov [ebp+var_8] ecx +
mov edx [eax+350h] +
cmp edx edi +
ja loc_1028F09  +
shr ecx 3 +
shl edx 4 +
mov [edx+eax+348h] ecx +
mov eax dword_10566D8 +
and dword ptr [edx+eax+34Ch] 0 +
mov eax [ebp+var_8] +
mov ecx dword_10566D8 +
mov [ecx+680h] eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea eax [ebp+var_10] +
push eax  +
xor edi edi +
lea eax [ebp+var_C] +
push eax  +
push offset aDisknumber  +
push esi  +
mov [ebp+var_C] edi +
mov [ebp+var_8] edi +
mov [ebp+var_24] edi +
mov [ebp+var_20] edi +
mov [ebp+var_18] edi +
mov [ebp+var_2C] edi +
mov [ebp+var_28] edi +
mov [ebp+var_14] edi +
mov [ebp+var_1] 1 +
mov [ebp+var_10] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_1029297  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push offset aIrpflags  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_1029297  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push offset aTransfersize  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_1029297  +
push ebx  +
push 8  +
pop ebx  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
push offset aFileobject  +
push esi  +
mov [ebp+var_10] ebx +
call sub_1026EA2  +
test eax eax +
jnz loc_1029296  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
push offset aByteoffset  +
push esi  +
mov [ebp+var_10] ebx +
call sub_1026EA2  +
test eax eax +
jnz loc_1029296  +
test byte ptr [ebp+var_18] 42h +
jz loc_1028FE5  +
mov [ebp+var_14] 1 +
push [ebp+var_C]  +
call sub_102198F  +
mov [ebp+arg_0] eax +
cmp eax edi +
jnz loc_102900B  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+var_C]  +
call sub_1022F79  +
test al al +
jz loc_1029296  +
mov eax [ebp+arg_0] +
shr [ebp+var_8] 0Ah +
inc dword ptr [eax+14h]  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_8] +
add [eax+1Ch] ecx +
mov eax [ebp+arg_4] +
cmp eax edi +
jnz loc_1029083  +
lea eax [ebp+arg_4] +
push eax  +
push esi  +
push dword ptr [esi+8]  +
call sub_10215E2  +
test al al +
jz loc_1029296  +
push 1  +
push edi  +
call sub_10217BE  +
mov ecx [ebp+arg_4] +
mov [ecx+2Ch] eax +
mov eax [esi+10h] +
mov ecx [ebp+arg_4] +
mov [ecx+70h] eax +
mov eax [esi+14h] +
mov ecx [ebp+arg_4] +
mov [ecx+74h] eax +
mov eax [ebp+arg_4] +
mov byte ptr [eax+34h] 1 +
mov eax [esi+38h] +
mov ecx [ebp+arg_4] +
mov [ecx+80h] eax +
mov eax [esi+3Ch] +
mov ecx [ebp+arg_4] +
mov [ecx+88h] eax +
push [ebp+arg_4]  +
xor ebx ebx +
push esi  +
call sub_1028A03  +
jmp loc_1029096  +
cmp [eax+2Ch] edi +
jz loc_1029090  +
mov ecx [eax+2Ch] +
mov ebx [ecx+3Ch] +
jmp loc_1029092  +
xor ebx ebx +
cmp ebx edi +
jnz loc_102909C  +
mov [ebp+var_1] 0 +
jmp loc_10290DE  +
lea ecx [eax+0A8h] +
cmp [ecx] edi +
jz loc_10290AE  +
mov eax [ecx] +
inc dword ptr [eax+50h]  +
mov eax [ebp+arg_4] +
inc dword ptr [eax+48h]  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_8] +
add [eax+68h] ecx +
mov eax [ebp+arg_4] +
cmp [eax+168h] edi +
jz loc_10290DE  +
push ebx  +
push dword ptr [eax+164h]  +
call sub_1021817  +
cmp eax edi +
jz loc_10290DE  +
inc dword ptr [eax+5Ch]  +
mov ecx [ebp+var_8] +
add [eax+64h] ecx +
push ebx  +
push [ebp+arg_0]  +
call sub_102310A  +
cmp [ebp+var_1] 0 +
jz loc_102910A  +
cmp eax edi +
jz loc_102910A  +
cmp [ebp+var_14] edi +
jz loc_1029101  +
inc dword ptr [eax+5Ch]  +
mov ecx [ebp+var_8] +
add [eax+60h] ecx +
jmp loc_102910A  +
inc dword ptr [eax+48h]  +
mov ecx [ebp+var_8] +
add [eax+74h] ecx +
cmp [ebp+var_1] 0 +
mov eax [ebp+arg_4] +
mov ebx [eax+2Ch] +
jz loc_10291FB  +
cmp ebx edi +
jz loc_1029143  +
inc dword ptr [ebx+48h]  +
mov eax [ebp+var_8] +
add [ebx+74h] eax +
push [ebp+var_C]  +
push ebx  +
call sub_10230AC  +
mov [ebp+arg_0] eax +
cmp eax edi +
jz loc_1029143  +
inc dword ptr [eax+14h]  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_8] +
add [eax+1Ch] ecx +
push [ebp+var_20]  +
push [ebp+var_24]  +
call sub_1021E29  +
mov esi eax +
cmp esi edi +
jnz loc_102916C  +
push [ebp+var_C]  +
push [ebp+var_20]  +
push [ebp+var_24]  +
call sub_1021D0C  +
mov esi eax +
cmp esi edi +
jz loc_10291FB  +
cmp dword ptr [esi+28h] 0FFFFFFFFh +
jnz loc_1029178  +
mov eax [ebp+var_C] +
mov [esi+28h] eax +
mov eax [ebp+var_2C] +
mov [esi+18h] eax +
mov eax [ebp+var_28] +
inc dword ptr [esi+34h]  +
mov [esi+1Ch] eax +
mov eax [ebp+var_8] +
add [esi+3Ch] eax +
cmp [esi+20h] edi +
jnz loc_10291E7  +
push dword ptr [esi+28h]  +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+18h]  +
call sub_1021C8C  +
mov [ebp+var_1C] eax +
cmp eax edi +
jz loc_10291E7  +
mov eax [eax+24h] +
cmp eax edi +
jz loc_10291E7  +
mov edi ds:lstrlenW +
push eax  +
call edi  +
lea eax [eax+eax+2] +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [esi+20h] eax +
test eax eax +
jz loc_10291E5  +
mov eax [ebp+var_1C] +
mov eax [eax+24h] +
push eax  +
push eax  +
call edi  +
inc eax  +
push eax  +
push dword ptr [esi+20h]  +
call sub_101F55E  +
xor edi edi +
push ebx  +
push esi  +
call sub_102154B  +
cmp eax edi +
jz loc_10291FB  +
inc dword ptr [eax+10h]  +
mov ecx [ebp+var_8] +
add [eax+1Ch] ecx +
mov eax [ebp+arg_4] +
push [ebp+var_C]  +
add eax 8 +
push eax  +
call sub_102304D  +
cmp [ebp+var_1] 0 +
mov [ebp+arg_0] eax +
jz loc_1029223  +
cmp eax edi +
jz loc_1029223  +
inc dword ptr [eax+14h]  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_8] +
add [eax+1Ch] ecx +
cmp [ebp+var_14] edi +
jnz loc_102922E  +
test byte ptr [ebp+var_18] 8 +
jz loc_1029296  +
inc dword_1057914  +
cmp [ebp+var_1] 0 +
mov [ebp+var_14] edi +
jz loc_1029296  +
push [ebp+var_20]  +
lea eax [ebp+var_14] +
push [ebp+var_24]  +
push [ebp+var_8]  +
push [ebp+var_28]  +
push [ebp+var_2C]  +
push [ebp+var_C]  +
push [ebp+var_18]  +
push dword_1057914  +
push eax  +
call sub_10213DC  +
test al al +
jz loc_1029296  +
mov esi offset unk_1079A00 +
push esi  +
call ds:RtlEnterCriticalSection  +
mov eax [ebp+arg_4] +
mov edx [ebp+var_14] +
add eax 20h +
mov ecx [eax] +
mov [edx] ecx +
mov edx [ebp+var_14] +
mov [edx+4] eax +
mov edx [ebp+var_14] +
mov [ecx+4] edx +
mov ecx [ebp+var_14] +
push esi  +
mov [eax] ecx +
call ds:RtlLeaveCriticalSection  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 430h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
lea ecx [ebp+var_430] +
mov [ebp+var_318] eax +
mov [ebp+var_328] ebx +
mov [ebp+cbName] ebx +
mov [ebp+cbReferencedDomainName] ebx +
mov [ebp+var_310] ecx +
cmp eax ebx +
jz loc_102970B  +
lea ecx [ebp+var_32C] +
push ecx  +
lea ecx [ebp+var_328] +
push ecx  +
push offset aProcessid  +
push eax  +
mov [ebp+var_32C] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_102970B  +
push esi  +
mov esi [ebp+var_328] +
push ebx  +
push esi  +
mov dword ptr [ebp+var_320] esi +
call sub_10217BE  +
mov [ebp+var_308] eax +
cmp eax ebx +
jnz loc_1029341  +
lea eax [ebp+var_308] +
push eax  +
push esi  +
call sub_1022EBD  +
jmp loc_1029383  +
cmp [eax+34h] ebx +
jz loc_1029365  +
push dword ptr [eax+34h]  +
push ebx  +
push hHeap  +
call ds:HeapFree  +
mov eax [ebp+var_308] +
mov [eax+34h] ebx +
mov eax [ebp+var_308] +
cmp [eax+30h] ebx +
jz loc_1029389  +
push dword ptr [eax+30h]  +
push ebx  +
push hHeap  +
call ds:HeapFree  +
mov eax [ebp+var_308] +
mov [eax+30h] ebx +
mov eax [ebp+var_308] +
cmp eax ebx +
jz loc_102970A  +
push 10h  +
mov [eax+3Ch] esi +
mov esi ds:HeapAlloc +
push 8  +
push hHeap  +
call esi  +
mov ecx eax +
mov [ebp+lpMem] ecx +
cmp ecx ebx +
jz loc_102970A  +
push edi  +
xor eax eax +
mov edi ecx +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+dwBytes] +
push eax  +
push ecx  +
mov edi offset aImagefilename +
push edi  +
push [ebp+var_318]  +
mov [ebp+dwBytes] 10h +
call sub_1026EA2  +
cmp eax 7Ah +
jnz loc_1029449  +
push [ebp+lpMem]  +
push ebx  +
push hHeap  +
call ds:HeapFree  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call esi  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jz loc_1029709  +
push [ebp+dwBytes]  +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+lpMem]  +
push edi  +
push [ebp+var_318]  +
call sub_1026EA2  +
test eax eax +
jnz loc_10296CF  +
mov edi [ebp+lpMem] +
push edi  +
call ds:lstrlenA  +
mov [ebp+cbName] eax +
cmp eax ebx +
jbe loc_1029497  +
lea eax [eax+eax+2] +
push eax  +
push 8  +
push hHeap  +
call esi  +
mov ecx [ebp+var_308] +
mov [ecx+34h] eax +
mov eax [ebp+var_308] +
cmp [eax+34h] ebx +
jz loc_10294BA  +
mov ecx [ebp+cbName] +
inc ecx  +
push ecx  +
push dword ptr [eax+34h]  +
push ecx  +
push edi  +
call sub_1026607  +
jmp loc_1029504  +
push 800h  +
push 8  +
push hHeap  +
call esi  +
mov ecx [ebp+var_308] +
mov [ecx+34h] eax +
mov eax [ebp+var_308] +
cmp [eax+34h] ebx +
jnz loc_10294CD  +
push edi  +
push ebx  +
push hHeap  +
call ds:HeapFree  +
jmp loc_1029709  +
cmp dword ptr [ebp+var_320] ebx +
jnz loc_10294E9  +
push offset aIdle  +
push 400h  +
push dword ptr [eax+34h]  +
call sub_101F55E  +
jmp loc_1029504  +
push dword ptr [ebp+var_320]  +
push offset aUnknown0x08x  +
push 400h  +
push dword ptr [eax+34h]  +
call sub_101BCA7  +
add esp 10h +
lea eax [ebp+dwBytes] +
push eax  +
lea eax [ebp+var_430] +
push eax  +
mov edi offset aUsersid +
push edi  +
push [ebp+var_318]  +
mov [ebp+dwBytes] 100h +
call sub_1026EA2  +
cmp eax 7Ah +
jnz loc_1029581  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call esi  +
mov [ebp+var_310] eax +
cmp eax ebx +
jz loc_1029709  +
push [ebp+dwBytes]  +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+var_310]  +
push edi  +
push [ebp+var_318]  +
call sub_1026EA2  +
test eax eax +
jnz loc_10296CF  +
cmp [ebp+dwBytes] 4 +
mov edi [ebp+var_310] +
push 40h  +
mov eax edi +
pop edx  +
jbe loc_10295C5  +
mov eax dword_10566D8 +
mov ecx [eax+680h] +
mov eax [ebp+var_318] +
movzx eax word ptr [eax+4] +
test al dl +
jnz loc_10295BD  +
test al 20h +
jnz loc_10295C2  +
cmp ecx ebx +
ja loc_10295B9  +
push 20h  +
pop ecx  +
cmp ecx edx +
jnz loc_10295C2  +
lea eax [edi+10h] +
jmp loc_10295C5  +
lea eax [edi+8] +
lea ecx [ebp+peUse] +
push ecx  +
lea ecx [ebp+cbReferencedDomainName] +
push ecx  +
lea ecx [ebp+ReferencedDomainName] +
push ecx  +
lea ecx [ebp+cbName] +
push ecx  +
lea ecx [ebp+Name] +
push ecx  +
push eax  +
push ebx  +
mov [ebp+cbReferencedDomainName] edx +
mov [ebp+cbName] edx +
call ds:LookupAccountSidW  +
test eax eax +
jz loc_10296A0  +
push offset asc_1002748  +
mov edi 100h +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_101F55E  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_101BC4D  +
push offset asc_100159C  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_101BC4D  +
lea eax [ebp+Name] +
push eax  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_101BC4D  +
lea eax [ebp+String] +
push eax  +
call ds:lstrlenW  +
mov [ebp+cbName] eax +
cmp eax ebx +
jbe loc_10296CF  +
lea eax [eax+eax+2] +
push eax  +
push 8  +
push hHeap  +
call esi  +
mov ecx [ebp+var_308] +
mov [ecx+30h] eax +
mov eax [ebp+var_308] +
cmp [eax+30h] ebx +
jz loc_10296CF  +
lea ecx [ebp+String] +
push ecx  +
mov ecx [ebp+cbName] +
inc ecx  +
push ecx  +
jmp loc_10296C7  +
push 0Eh  +
push 8  +
push hHeap  +
call esi  +
mov ecx [ebp+var_308] +
mov [ecx+30h] eax +
mov eax [ebp+var_308] +
cmp [eax+30h] ebx +
jz loc_10296CF  +
push offset aSystem_0  +
push 7  +
push dword ptr [eax+30h]  +
call sub_101F55E  +
push [ebp+lpMem]  +
mov esi ds:HeapFree +
push ebx  +
push hHeap  +
call esi  +
cmp [ebp+var_310] ebx +
jz loc_1029709  +
lea eax [ebp+var_430] +
cmp [ebp+var_310] eax +
jz loc_1029709  +
push [ebp+var_310]  +
push ebx  +
push hHeap  +
call esi  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 42Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push edi  +
xor edi edi +
lea ecx [ebp+var_42C] +
mov [ebp+var_310] eax +
mov [ebp+var_320] edi +
mov [ebp+var_31C] edi +
mov [ebp+cbName] edi +
mov [ebp+cbReferencedDomainName] edi +
mov [ebp+var_314] ecx +
cmp eax edi +
jz loc_1029B75  +
lea ecx [ebp+var_328] +
push ecx  +
lea ecx [ebp+var_320] +
push ecx  +
push offset aProcessid  +
push eax  +
mov [ebp+var_328] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_1029B75  +
push ebx  +
push esi  +
xor esi esi +
inc esi  +
push esi  +
push [ebp+var_320]  +
call sub_10217BE  +
mov ebx eax +
cmp ebx edi +
jz loc_1029B73  +
cmp [ebx+40h] edi +
jnz loc_1029B73  +
push 10h  +
mov [ebx+40h] esi +
mov esi ds:HeapAlloc +
push 8  +
push hHeap  +
call esi  +
mov ecx eax +
mov [ebp+lpMem] ecx +
cmp ecx edi +
jz loc_1029B73  +
xor eax eax +
mov edi ecx +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+dwBytes] +
push eax  +
push ecx  +
mov edi offset aImagefilename +
push edi  +
push [ebp+var_310]  +
mov [ebp+dwBytes] 10h +
call sub_1026EA2  +
cmp eax 7Ah +
jnz loc_1029874  +
push [ebp+lpMem]  +
push 0  +
push hHeap  +
call ds:HeapFree  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call esi  +
mov [ebp+lpMem] eax +
test eax eax +
jz loc_1029B73  +
push [ebp+dwBytes]  +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+lpMem]  +
push edi  +
push [ebp+var_310]  +
call sub_1026EA2  +
test eax eax +
jnz loc_1029B1F  +
push [ebp+lpMem]  +
call ds:lstrlenA  +
xor edi edi +
mov [ebp+cbName] eax +
cmp eax edi +
jbe loc_10298D2  +
mov eax [ebx+34h] +
cmp eax edi +
jz loc_10298A1  +
push eax  +
push edi  +
push hHeap  +
call ds:HeapFree  +
mov eax [ebp+cbName] +
lea eax [eax+eax+2] +
push eax  +
push 8  +
push hHeap  +
call esi  +
mov [ebx+34h] eax +
cmp eax edi +
jz loc_10298D2  +
mov ecx [ebp+cbName] +
inc ecx  +
push ecx  +
push eax  +
push ecx  +
push [ebp+lpMem]  +
call sub_1026607  +
lea eax [ebp+dwBytes] +
push eax  +
push edi  +
mov [ebp+dwBytes] edi +
mov edi offset aCommandline +
push edi  +
push [ebp+var_310]  +
call sub_1026EA2  +
cmp eax 7Ah +
jnz loc_1029930  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call esi  +
mov [ebp+var_31C] eax +
test eax eax +
jz loc_1029B1F  +
lea ecx [ebp+dwBytes] +
push ecx  +
push eax  +
push edi  +
push [ebp+var_310]  +
call sub_1026EA2  +
test eax eax +
jnz loc_1029B1F  +
push [ebp+var_31C]  +
push ebx  +
call sub_10268B8  +
lea eax [ebp+dwBytes] +
push eax  +
lea eax [ebp+var_42C] +
push eax  +
mov edi offset aUsersid +
push edi  +
push [ebp+var_310]  +
mov [ebp+dwBytes] 100h +
call sub_1026EA2  +
cmp eax 7Ah +
jnz loc_10299BA  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call esi  +
mov [ebp+var_314] eax +
test eax eax +
jz loc_1029B73  +
push [ebp+dwBytes]  +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+var_314]  +
push edi  +
push [ebp+var_310]  +
call sub_1026EA2  +
test eax eax +
jnz loc_1029B1F  +
cmp [ebp+dwBytes] 4 +
mov edi [ebp+var_314] +
push 40h  +
mov eax edi +
pop edx  +
jbe loc_10299FE  +
mov eax dword_10566D8 +
mov ecx [eax+680h] +
mov eax [ebp+var_310] +
movzx eax word ptr [eax+4] +
test al dl +
jnz loc_10299F6  +
test al 20h +
jnz loc_10299FB  +
test ecx ecx +
ja loc_10299F2  +
push 20h  +
pop ecx  +
cmp ecx edx +
jnz loc_10299FB  +
lea eax [edi+10h] +
jmp loc_10299FE  +
lea eax [edi+8] +
lea ecx [ebp+peUse] +
push ecx  +
lea ecx [ebp+cbReferencedDomainName] +
push ecx  +
lea ecx [ebp+ReferencedDomainName] +
push ecx  +
lea ecx [ebp+cbName] +
push ecx  +
lea ecx [ebp+Name] +
push ecx  +
push eax  +
push 0  +
mov [ebp+cbReferencedDomainName] edx +
mov [ebp+cbName] edx +
call ds:LookupAccountSidW  +
test eax eax +
jz loc_1029AE9  +
push offset asc_1002748  +
mov edi 100h +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_101F55E  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_101BC4D  +
push offset asc_100159C  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_101BC4D  +
lea eax [ebp+Name] +
push eax  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_101BC4D  +
lea eax [ebp+String] +
push eax  +
call ds:lstrlenW  +
mov [ebp+cbName] eax +
test eax eax +
jbe loc_1029B1F  +
mov eax [ebx+30h] +
test eax eax +
jz loc_1029ABC  +
push eax  +
push 0  +
push hHeap  +
call ds:HeapFree  +
mov eax [ebp+cbName] +
lea eax [eax+eax+2] +
push eax  +
push 8  +
push hHeap  +
call esi  +
mov [ebx+30h] eax +
test eax eax +
jz loc_1029B1F  +
lea ecx [ebp+String] +
push ecx  +
mov ecx [ebp+cbName] +
inc ecx  +
push ecx  +
jmp loc_1029B19  +
mov eax [ebx+30h] +
test eax eax +
jz loc_1029AFF  +
push eax  +
push 0  +
push hHeap  +
call ds:HeapFree  +
push 0Eh  +
push 8  +
push hHeap  +
call esi  +
mov [ebx+30h] eax +
test eax eax +
jz loc_1029B1F  +
push offset aSystem_0  +
push 7  +
push eax  +
call sub_101F55E  +
push [ebp+lpMem]  +
mov esi ds:HeapFree +
push 0  +
push hHeap  +
call esi  +
xor edi edi +
cmp [ebp+var_314] edi +
jz loc_1029B5C  +
lea eax [ebp+var_42C] +
cmp [ebp+var_314] eax +
jz loc_1029B5C  +
push [ebp+var_314]  +
push edi  +
push hHeap  +
call esi  +
cmp [ebp+var_31C] edi +
jz loc_1029B73  +
push [ebp+var_31C]  +
push edi  +
push hHeap  +
call esi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
cmp dword ptr [esi+168h] 0 +
mov byte ptr [esi+160h] 1 +
jnz loc_1029C14  +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
push 4  +
pop ebx  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
push offset aSubprocesstag  +
push edi  +
mov [ebp+arg_4] ebx +
call sub_1026EA2  +
test eax eax +
jnz loc_1029C12  +
push dword ptr [edi+0Ch]  +
push [ebp+arg_0]  +
call sub_1021817  +
test eax eax +
jz loc_1029C12  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push offset aTaskid  +
push edi  +
mov [ebp+arg_4] ebx +
call sub_1026EA2  +
test eax eax +
jnz loc_1029C12  +
mov eax [ebp+var_4] +
mov [esi+168h] eax +
mov eax [ebp+arg_0] +
mov [esi+164h] eax +
mov eax [edi+38h] +
mov [esi+16Ch] eax +
mov eax [edi+3Ch] +
mov [esi+170h] eax +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
mov ebx [edi+0Ch] +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push offset aTaskid  +
push edi  +
mov [ebp+arg_0] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_1029C8D  +
mov eax [ebp+var_4] +
push esi  +
mov esi [ebp+arg_4] +
lea ecx [esi+168h] +
cmp eax [ecx] +
jnz loc_1029C8C  +
and dword ptr [ecx] 0 +
lea eax [esi+164h] +
mov edx [eax] +
and dword ptr [eax] 0 +
push ebx  +
push edx  +
call sub_1021817  +
test eax eax +
jz loc_1029C8C  +
mov ecx [edi+38h] +
sub ecx [esi+16Ch] +
add [eax+30h] ecx +
mov ecx [edi+3Ch] +
sub ecx [esi+170h] +
add [eax+34h] ecx +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
push 4  +
pop esi  +
lea eax [ebp+dwBytes] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
push offset aProcessid  +
push [ebp+arg_0]  +
mov [ebp+dwBytes] esi +
call sub_1026EA2  +
test eax eax +
jnz loc_1029E18  +
lea eax [ebp+dwBytes] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push offset aSubprocesstag  +
push [ebp+arg_0]  +
mov [ebp+dwBytes] esi +
call sub_1026EA2  +
test eax eax +
jnz loc_1029E18  +
lea eax [ebp+dwBytes] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push offset aServicestate  +
push [ebp+arg_0]  +
mov [ebp+dwBytes] esi +
call sub_1026EA2  +
test eax eax +
jnz loc_1029E18  +
push edi  +
push [ebp+var_8]  +
call sub_1021897  +
mov edi eax +
xor esi esi +
cmp edi esi +
jz loc_1029E17  +
mov eax [ebp+var_C] +
push ebx  +
mov [edi+1Ch] eax +
lea eax [ebp+dwBytes] +
push eax  +
push esi  +
mov ebx offset aServicename +
push ebx  +
push [ebp+arg_0]  +
mov [ebp+dwBytes] esi +
call sub_1026EA2  +
cmp eax 7Ah +
jnz loc_1029D6C  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_1029E16  +
lea eax [ebp+dwBytes] +
push eax  +
push esi  +
push ebx  +
push [ebp+arg_0]  +
call sub_1026EA2  +
test eax eax +
jnz loc_1029E03  +
mov [edi+20h] esi +
lea eax [ebp+dwBytes] +
push eax  +
xor esi esi +
push esi  +
mov ebx offset aDisplayname +
push ebx  +
push [ebp+arg_0]  +
mov [ebp+dwBytes] esi +
call sub_1026EA2  +
cmp eax 7Ah +
jnz loc_1029DB5  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_1029E16  +
lea eax [ebp+dwBytes] +
push eax  +
push esi  +
push ebx  +
push [ebp+arg_0]  +
call sub_1026EA2  +
test eax eax +
jnz loc_1029E03  +
mov [edi+24h] esi +
lea eax [ebp+dwBytes] +
push eax  +
xor esi esi +
push esi  +
mov ebx offset aProcessname +
push ebx  +
push [ebp+arg_0]  +
mov [ebp+dwBytes] esi +
call sub_1026EA2  +
cmp eax 7Ah +
jnz loc_1029DFE  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_1029E16  +
lea eax [ebp+dwBytes] +
push eax  +
push esi  +
push ebx  +
push [ebp+arg_0]  +
call sub_1026EA2  +
test eax eax +
jnz loc_1029E03  +
mov [edi+28h] esi +
xor esi esi +
test esi esi +
jz loc_1029E16  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea eax [ebp+var_10] +
push eax  +
xor edi edi +
lea eax [ebp+var_C] +
push eax  +
push offset aDisknumber  +
push esi  +
mov [ebp+var_C] edi +
mov [ebp+var_8] edi +
mov [ebp+var_18] edi +
mov [ebp+var_20] edi +
mov [ebp+var_1C] edi +
mov [ebp+var_1] 0 +
mov [ebp+var_28] edi +
mov [ebp+var_24] edi +
mov [ebp+var_2] 1 +
mov [ebp+var_10] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_102A1F4  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push offset aIrpflags  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_102A1F4  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push offset aTransfersize  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_102A1F4  +
push ebx  +
push 8  +
pop ebx  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
push offset aFileobject  +
push esi  +
mov [ebp+var_10] ebx +
call sub_1026EA2  +
test eax eax +
jnz loc_102A1F3  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
push offset aByteoffset  +
push esi  +
mov [ebp+var_10] ebx +
call sub_1026EA2  +
test eax eax +
jnz loc_102A1F3  +
shr [ebp+var_8] 0Ah +
test byte ptr [ebp+var_18] 42h +
jz loc_1029EF4  +
mov [ebp+var_1] 1 +
push [ebp+var_C]  +
call sub_102198F  +
mov [ebp+arg_0] eax +
cmp eax edi +
jnz loc_1029F1A  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+var_C]  +
call sub_1022F79  +
test al al +
jz loc_102A1F3  +
mov eax [ebp+arg_0] +
cmp [ebp+var_1] 0 +
jz loc_1029F2E  +
inc dword ptr [eax+20h]  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_8] +
add [eax+24h] ecx +
jmp loc_1029F3A  +
inc dword ptr [eax+10h]  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_8] +
add [eax+18h] ecx +
mov eax [ebp+arg_4] +
cmp eax edi +
jnz loc_1029FA2  +
lea eax [ebp+arg_4] +
push eax  +
push esi  +
push dword ptr [esi+8]  +
call sub_10215E2  +
test al al +
jz loc_102A1F3  +
push 1  +
push edi  +
call sub_10217BE  +
mov ecx [ebp+arg_4] +
mov [ecx+2Ch] eax +
mov eax [esi+10h] +
mov ecx [ebp+arg_4] +
mov [ecx+70h] eax +
mov eax [esi+14h] +
mov ecx [ebp+arg_4] +
mov [ecx+74h] eax +
mov eax [ebp+arg_4] +
mov byte ptr [eax+34h] 1 +
mov eax [esi+38h] +
mov ecx [ebp+arg_4] +
mov [ecx+80h] eax +
mov eax [esi+3Ch] +
mov ecx [ebp+arg_4] +
mov [ecx+88h] eax +
push [ebp+arg_4]  +
xor ebx ebx +
push esi  +
call sub_1028A03  +
jmp loc_1029FB5  +
cmp [eax+2Ch] edi +
jz loc_1029FAF  +
mov ecx [eax+2Ch] +
mov ebx [ecx+3Ch] +
jmp loc_1029FB1  +
xor ebx ebx +
cmp ebx edi +
jnz loc_1029FBB  +
mov [ebp+var_2] 0 +
jmp loc_102A011  +
lea ecx [eax+0A8h] +
cmp [ecx] edi +
jz loc_1029FCD  +
mov eax [ecx] +
inc dword ptr [eax+4Ch]  +
mov eax [ebp+arg_4] +
cmp [ebp+var_1] 0 +
jz loc_1029FE1  +
inc dword ptr [eax+5Ch]  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_8] +
add [eax+6Ch] ecx +
jmp loc_1029FED  +
inc dword ptr [eax+44h]  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_8] +
add [eax+64h] ecx +
mov eax [ebp+arg_4] +
cmp [eax+168h] edi +
jz loc_102A011  +
push ebx  +
push dword ptr [eax+164h]  +
call sub_1021817  +
cmp eax edi +
jz loc_102A011  +
inc dword ptr [eax+58h]  +
mov ecx [ebp+var_8] +
add [eax+60h] ecx +
push ebx  +
push [ebp+arg_0]  +
call sub_102310A  +
cmp [ebp+var_2] 0 +
jz loc_102A03E  +
cmp eax edi +
jz loc_102A03E  +
cmp [ebp+var_1] 0 +
jz loc_102A035  +
inc dword ptr [eax+5Ch]  +
mov ecx [ebp+var_8] +
add [eax+60h] ecx +
jmp loc_102A03E  +
inc dword ptr [eax+44h]  +
mov ecx [ebp+var_8] +
add [eax+70h] ecx +
cmp [ebp+var_2] 0 +
mov eax [ebp+arg_4] +
mov ebx [eax+2Ch] +
jz loc_102A143  +
cmp ebx edi +
jz loc_102A08B  +
inc dword ptr [ebx+44h]  +
mov eax [ebp+var_8] +
add [ebx+70h] eax +
push [ebp+var_C]  +
push ebx  +
call sub_10230AC  +
mov [ebp+arg_0] eax +
cmp eax edi +
jz loc_102A08B  +
cmp [ebp+var_1] 0 +
jz loc_102A07F  +
inc dword ptr [eax+20h]  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_8] +
add [eax+24h] ecx +
jmp loc_102A08B  +
inc dword ptr [eax+10h]  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_8] +
add [eax+18h] ecx +
push [ebp+var_1C]  +
push [ebp+var_20]  +
call sub_1021E29  +
mov esi eax +
cmp esi edi +
jnz loc_102A0B4  +
push [ebp+var_C]  +
push [ebp+var_1C]  +
push [ebp+var_20]  +
call sub_1021D0C  +
mov esi eax +
cmp esi edi +
jz loc_102A143  +
cmp dword ptr [esi+28h] 0FFFFFFFFh +
jnz loc_102A0C0  +
mov eax [ebp+var_C] +
mov [esi+28h] eax +
mov eax [ebp+var_28] +
mov [esi+18h] eax +
mov eax [ebp+var_24] +
inc dword ptr [esi+2Ch]  +
mov [esi+1Ch] eax +
mov eax [ebp+var_8] +
add [esi+38h] eax +
cmp [esi+20h] edi +
jnz loc_102A12F  +
push dword ptr [esi+28h]  +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+18h]  +
call sub_1021C8C  +
mov [ebp+var_14] eax +
cmp eax edi +
jz loc_102A12F  +
mov eax [eax+24h] +
cmp eax edi +
jz loc_102A12F  +
mov edi ds:lstrlenW +
push eax  +
call edi  +
lea eax [eax+eax+2] +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [esi+20h] eax +
test eax eax +
jz loc_102A12D  +
mov eax [ebp+var_14] +
mov eax [eax+24h] +
push eax  +
push eax  +
call edi  +
inc eax  +
push eax  +
push dword ptr [esi+20h]  +
call sub_101F55E  +
xor edi edi +
push ebx  +
push esi  +
call sub_102154B  +
cmp eax edi +
jz loc_102A143  +
inc dword ptr [eax+0Ch]  +
mov ecx [ebp+var_8] +
add [eax+18h] ecx +
mov eax [ebp+arg_4] +
push [ebp+var_C]  +
add eax 8 +
push eax  +
call sub_102304D  +
cmp [ebp+var_2] 0 +
mov [ebp+arg_0] eax +
jz loc_102A17F  +
cmp eax edi +
jz loc_102A17F  +
cmp [ebp+var_1] 0 +
jz loc_102A173  +
inc dword ptr [eax+20h]  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_8] +
add [eax+24h] ecx +
jmp loc_102A17F  +
inc dword ptr [eax+10h]  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_8] +
add [eax+18h] ecx +
cmp [ebp+var_1] 0 +
jnz loc_102A18B  +
test byte ptr [ebp+var_18] 8 +
jz loc_102A1F3  +
inc dword_1057910  +
cmp [ebp+var_2] 0 +
mov [ebp+var_14] edi +
jz loc_102A1F3  +
push [ebp+var_1C]  +
lea eax [ebp+var_14] +
push [ebp+var_20]  +
push [ebp+var_8]  +
push [ebp+var_24]  +
push [ebp+var_28]  +
push [ebp+var_C]  +
push [ebp+var_18]  +
push dword_1057910  +
push eax  +
call sub_10213DC  +
test al al +
jz loc_102A1F3  +
mov esi offset unk_1079A00 +
push esi  +
call ds:RtlEnterCriticalSection  +
mov eax [ebp+arg_4] +
mov edx [ebp+var_14] +
add eax 18h +
mov ecx [eax] +
mov [edx] ecx +
mov edx [ebp+var_14] +
mov [edx+4] eax +
mov edx [ebp+var_14] +
mov [ecx+4] edx +
mov ecx [ebp+var_14] +
push esi  +
mov [eax] ecx +
call ds:RtlLeaveCriticalSection  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 824h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
xor eax eax +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_81C] eax +
mov [ebp+var_818] eax +
mov [ebp+var_814] eax +
mov [ebp+var_810] eax +
mov [ebp+var_80C] eax +
mov [ebp+var_820] eax +
mov [ebp+var_824] eax +
cmp esi eax +
jz loc_102A3A8  +
mov [ebp+String] ax +
lea eax [ebp+var_808] +
push eax  +
lea eax [ebp+var_81C] +
push eax  +
push offset aStartoffset  +
push esi  +
mov [ebp+var_808] 8 +
call sub_1026EA2  +
test eax eax +
jnz loc_102A3A8  +
lea eax [ebp+var_808] +
push eax  +
lea eax [ebp+var_814] +
push eax  +
push offset aPartitionsize  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_102A3A8  +
push edi  +
push 4  +
pop edi  +
lea eax [ebp+var_808] +
push eax  +
lea eax [ebp+var_80C] +
push eax  +
push offset aDisknumber  +
push esi  +
mov [ebp+var_808] edi +
call sub_1026EA2  +
test eax eax +
jnz loc_102A3A7  +
lea eax [ebp+var_808] +
push eax  +
lea eax [ebp+var_820] +
push eax  +
push offset aSize_0  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_102A3A7  +
lea eax [ebp+var_808] +
push eax  +
lea eax [ebp+var_824] +
push eax  +
push offset aDrivetype  +
push esi  +
mov [ebp+var_808] edi +
call sub_1026EA2  +
test eax eax +
jnz loc_102A3A7  +
lea eax [ebp+var_808] +
push eax  +
lea eax [ebp+String] +
push eax  +
push offset aDriveletterstr  +
push esi  +
mov [ebp+var_808] 800h +
call sub_1026EA2  +
test eax eax +
jnz loc_102A3A7  +
lea eax [ebp+String] +
push eax  +
call ds:lstrlenW  +
push eax  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_824]  +
push [ebp+var_820]  +
push [ebp+var_80C]  +
push [ebp+var_810]  +
push [ebp+var_814]  +
push [ebp+var_818]  +
push [ebp+var_81C]  +
call sub_1023243  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_810]  +
push [ebp+var_814]  +
push [ebp+var_818]  +
push [ebp+var_81C]  +
push [ebp+var_80C]  +
call sub_102331D  +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_20C] 0 +
xor eax eax +
push esi  +
mov esi [ebp+arg_0] +
mov word ptr [ebp+var_204] ax +
lea eax [ebp+var_208] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
push offset aMemsize  +
push esi  +
mov [ebp+var_208] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_102A484  +
mov eax [ebp+var_20C] +
mov dword_1079A9C eax +
lea eax [ebp+var_208] +
push eax  +
lea eax [ebp+var_204] +
push eax  +
push offset aComputername  +
push esi  +
mov [ebp+var_208] 200h +
call sub_1026EA2  +
test eax eax +
jnz loc_102A484  +
lea eax [ebp+var_204] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_102A447  +
sub eax edx +
sar eax 1 +
mov esi eax +
jz loc_102A484  +
lea eax [esi+esi+2] +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov lpMem eax +
test eax eax +
jz loc_102A484  +
lea ecx [ebp+var_204] +
push ecx  +
inc esi  +
push esi  +
push eax  +
call sub_101F55E  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 814h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_810] ebx +
mov [ebp+var_80C] ebx +
cmp edi ebx +
jz loc_102A616  +
push esi  +
mov esi 800h +
push esi  +
lea eax [ebp+String] +
push ebx  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_808] +
push eax  +
lea eax [ebp+var_810] +
push eax  +
push offset aFileobject  +
push edi  +
mov [ebp+var_808] 8 +
call sub_1026EA2  +
test eax eax +
jnz loc_102A615  +
lea eax [ebp+var_808] +
push eax  +
lea eax [ebp+String] +
push eax  +
push offset aFilename  +
push edi  +
mov [ebp+var_808] esi +
call sub_1026EA2  +
test eax eax +
jnz loc_102A615  +
push [ebp+var_80C]  +
push [ebp+var_810]  +
call sub_1021E29  +
mov esi eax +
cmp esi ebx +
jnz loc_102A565  +
push 0FFFFFFFFh  +
push [ebp+var_80C]  +
push [ebp+var_810]  +
call sub_1021D0C  +
mov esi eax +
cmp esi ebx +
jz loc_102A615  +
mov byte_1057926 1 +
cmp byte ptr [edi+2Dh] 23h +
jnz loc_102A576  +
mov byte ptr [esi+44h] 1 +
cmp [esi+24h] ebx +
mov ebx ds:HeapAlloc +
mov edi ds:lstrlenW +
jnz loc_102A5BA  +
lea eax [ebp+String] +
push eax  +
call edi  +
lea eax [eax+eax+2] +
push eax  +
push 8  +
push hHeap  +
call ebx  +
mov [esi+24h] eax +
test eax eax +
jz loc_102A5BA  +
lea eax [ebp+String] +
push eax  +
push eax  +
call edi  +
inc eax  +
push eax  +
push dword ptr [esi+24h]  +
call sub_101F55E  +
push dword ptr [esi+28h]  +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+18h]  +
call sub_1021C8C  +
mov [ebp+var_814] eax +
test eax eax +
jz loc_102A615  +
cmp dword ptr [esi+20h] 0 +
jnz loc_102A615  +
mov ecx [eax+18h] +
mov [esi+28h] ecx +
mov eax [eax+24h] +
test eax eax +
jz loc_102A615  +
push eax  +
call edi  +
lea eax [eax+eax+2] +
push eax  +
push 8  +
push hHeap  +
call ebx  +
mov [esi+20h] eax +
test eax eax +
jz loc_102A615  +
mov eax [ebp+var_814] +
mov eax [eax+24h] +
push eax  +
push eax  +
call edi  +
inc eax  +
push eax  +
push dword ptr [esi+20h]  +
call sub_101F55E  +
pop esi  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 228h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi dword_1079AE8 +
push edi  +
xor edi edi +
mov eax 200h +
push eax  +
mov [ebp+var_214] eax +
lea eax [ebp+var_204] +
push edi  +
push eax  +
mov [ebp+var_228] ebx +
mov [ebp+var_21C] edi +
mov [ebp+var_218] edi +
mov [ebp+var_224] edi +
mov [ebp+var_220] edi +
mov [ebp+var_208] edi +
mov [ebp+lpMem] edi +
call memset  +
add esp 0Ch +
lea eax [ebp+var_214] +
push eax  +
lea eax [ebp+var_204] +
push eax  +
push offset aFilename  +
push ebx  +
call sub_1026EA2  +
test eax eax +
jnz loc_102A8DE  +
lea eax [ebp+var_214] +
push eax  +
lea eax [ebp+var_21C] +
push eax  +
push offset aImagebase  +
push ebx  +
mov [ebp+var_214] 8 +
call sub_1026EA2  +
test eax eax +
jnz loc_102A8DE  +
lea eax [ebp+var_214] +
push eax  +
lea eax [ebp+var_224] +
push eax  +
push offset aImagesize  +
push ebx  +
mov [ebp+var_214] 8 +
call sub_1026EA2  +
test eax eax +
jnz loc_102A8DE  +
lea eax [ebp+var_204] +
push 5Ch  +
push eax  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
mov [ebp+lpString] eax +
cmp eax edi +
jnz loc_102A734  +
lea eax [ebp+var_204] +
mov [ebp+lpString] eax +
jmp loc_102A768  +
add [ebp+lpString] 2 +
jmp loc_102A768  +
cmp esi offset dword_1079AE8 +
jz loc_102A770  +
mov [ebp+var_208] esi +
push dword ptr [esi+40h]  +
push [ebp+lpString]  +
call ds:__imp__wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102A768  +
mov [ebp+var_208] edi +
mov esi [esi] +
cmp [ebp+var_208] edi +
jz loc_102A73D  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov ebx eax +
inc ebx  +
mov esi offset unk_1079A00 +
cmp [ebp+var_208] edi +
jnz loc_102A811  +
push ebx  +
push [ebp+lpString]  +
lea eax [ebp+var_208] +
push [ebp+var_220]  +
push [ebp+var_224]  +
push [ebp+var_218]  +
push [ebp+var_21C]  +
push eax  +
call sub_1022DFA  +
test al al +
jz loc_102A8DE  +
push esi  +
call ds:RtlEnterCriticalSection  +
mov eax dword_1079AE8 +
mov ecx [ebp+var_208] +
mov [ecx] eax +
mov ecx [ebp+var_208] +
mov dword ptr [ecx+4] offset dword_1079AE8 +
mov ecx [ebp+var_208] +
mov [eax+4] ecx +
mov eax [ebp+var_208] +
push esi  +
mov dword_1079AE8 eax +
call ds:RtlLeaveCriticalSection  +
mov eax [ebp+var_208] +
mov [eax+8] edi +
mov eax [ebp+var_208] +
mov [eax+44h] edi +
push ebx  +
push [ebp+lpString]  +
lea eax [ebp+lpMem] +
push [ebp+var_220]  +
push [ebp+var_224]  +
push [ebp+var_218]  +
push [ebp+var_21C]  +
push eax  +
call sub_1022DFA  +
test al al +
jz loc_102A8DE  +
mov eax [ebp+var_208] +
mov ecx [ebp+lpMem] +
mov [ecx+44h] eax +
mov eax [ebp+var_228] +
push eax  +
push dword ptr [eax+8]  +
call sub_10218E4  +
cmp eax edi +
jnz loc_102A899  +
mov eax [ebp+lpMem] +
mov esi ds:HeapFree +
cmp [eax+40h] edi +
jz loc_102A889  +
push dword ptr [eax+40h]  +
push edi  +
push hHeap  +
call esi  +
mov eax [ebp+lpMem] +
cmp eax edi +
jz loc_102A8DE  +
push eax  +
push edi  +
push hHeap  +
call esi  +
jmp loc_102A8DE  +
mov ebx [eax+2Ch] +
cmp ebx edi +
jz loc_102A866  +
push esi  +
call ds:RtlEnterCriticalSection  +
mov eax [ebp+lpMem] +
mov [eax+8] ebx +
mov edx [ebp+lpMem] +
lea eax [ebx+20h] +
mov ecx [eax] +
mov [edx] ecx +
mov edx [ebp+lpMem] +
mov [edx+4] eax +
mov edx [ebp+lpMem] +
mov [ecx+4] edx +
mov ecx [ebp+lpMem] +
push esi  +
mov [eax] ecx +
call ds:RtlLeaveCriticalSection  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_102A921  +
mov al [ecx+2Dh] +
cmp al 1 +
jz loc_102A91B  +
cmp al 3 +
jz loc_102A91B  +
cmp al 2 +
jz loc_102A913  +
cmp al 4 +
jnz loc_102A921  +
push ecx  +
call sub_102971F  +
jmp loc_102A921  +
push ecx  +
call sub_10292A2  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 840h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
xor edi edi +
mov [ebp+var_80C] eax +
mov [ebp+var_828] edi +
mov [ebp+var_824] edi +
mov [ebp+var_820] edi +
mov [ebp+var_81C] edi +
mov [ebp+var_830] edi +
mov [ebp+var_82C] edi +
mov [ebp+var_834] edi +
mov [ebp+var_83C] edi +
mov [ebp+var_838] edi +
mov [ebp+var_805] 0 +
cmp ebx edi +
jz loc_102AE75  +
push esi  +
push 8  +
pop esi  +
lea eax [ebp+var_810] +
push eax  +
lea eax [ebp+var_828] +
push eax  +
push offset aVirtualaddress  +
push ebx  +
mov [ebp+var_810] esi +
call sub_1026EA2  +
test eax eax +
jnz loc_102AE74  +
lea eax [ebp+var_810] +
push eax  +
lea eax [ebp+var_820] +
push eax  +
push offset aProgramcounter  +
push ebx  +
mov [ebp+var_810] esi +
call sub_1026EA2  +
test eax eax +
jnz loc_102AE74  +
cmp byte ptr [ebx+2Dh] 0Eh +
jnz loc_102AAA5  +
cmp [ebx+56h] si +
jbe loc_102AAA5  +
lea eax [ebp+var_810] +
push eax  +
lea eax [ebp+var_830] +
push eax  +
push offset aFileobject  +
push ebx  +
mov [ebp+var_805] 1 +
mov [ebp+var_810] esi +
call sub_1026EA2  +
test eax eax +
jnz loc_102AE74  +
lea eax [ebp+var_810] +
push eax  +
lea eax [ebp+var_834] +
push eax  +
push offset aBytecount  +
push ebx  +
mov [ebp+var_810] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_102AE74  +
lea eax [ebp+var_810] +
push eax  +
lea eax [ebp+var_83C] +
push eax  +
push offset aByteoffset  +
push ebx  +
mov [ebp+var_810] esi +
call sub_1026EA2  +
test eax eax +
jnz loc_102AE74  +
lea eax [ebp+var_810] +
push eax  +
lea eax [ebp+var_804] +
push eax  +
push offset aFilename  +
push ebx  +
mov [ebp+var_810] 800h +
call sub_1026EA2  +
test eax eax +
jnz loc_102AE74  +
mov eax [ebp+var_80C] +
cmp eax edi +
jnz loc_102AB2A  +
lea eax [ebp+var_80C] +
push eax  +
push ebx  +
push dword ptr [ebx+8]  +
call sub_10215E2  +
test al al +
jz loc_102AE74  +
push 1  +
push edi  +
call sub_10217BE  +
mov ecx [ebp+var_80C] +
mov [ecx+2Ch] eax +
mov eax [ebx+10h] +
mov ecx [ebp+var_80C] +
mov [ecx+70h] eax +
mov eax [ebx+14h] +
mov ecx [ebp+var_80C] +
mov [ecx+74h] eax +
mov eax [ebp+var_80C] +
mov byte ptr [eax+34h] 1 +
mov eax [ebx+38h] +
mov ecx [ebp+var_80C] +
mov [ecx+80h] eax +
mov eax [ebx+3Ch] +
mov ecx [ebp+var_80C] +
mov [ecx+88h] eax +
push [ebp+var_80C]  +
push ebx  +
call sub_1028A03  +
mov eax [ebp+var_80C] +
inc dword ptr [eax+60h]  +
mov eax [ebp+var_80C] +
mov eax [eax+0A8h] +
cmp eax edi +
jz loc_102AB6A  +
cmp [ebp+var_805] 0 +
jnz loc_102AB6A  +
movzx ecx byte ptr [ebx+2Dh] +
sub ecx 0Ah +
jz loc_102AB67  +
dec ecx  +
jz loc_102AB62  +
dec ecx  +
jz loc_102AB5D  +
dec ecx  +
jnz loc_102AB6A  +
inc dword ptr [eax+3Ch]  +
jmp loc_102AB6A  +
inc dword ptr [eax+38h]  +
jmp loc_102AB6A  +
inc dword ptr [eax+34h]  +
jmp loc_102AB6A  +
inc dword ptr [eax+30h]  +
mov eax [ebp+var_80C] +
mov esi [eax+2Ch] +
mov [ebp+var_840] esi +
cmp esi edi +
jz loc_102AE74  +
push [ebp+var_81C]  +
lea eax [esi+20h] +
push [ebp+var_820]  +
mov [ebp+var_818] eax +
push eax  +
call sub_1025BE3  +
cmp [ebp+var_805] 0 +
mov [ebp+var_814] eax +
jz loc_102AD02  +
push [ebp+var_838]  +
inc dword_105790C  +
push [ebp+var_83C]  +
lea eax [ebp+var_814] +
push [ebp+var_834]  +
mov [ebp+var_814] edi +
push [ebp+var_82C]  +
push [ebp+var_830]  +
push [ebp+var_824]  +
push [ebp+var_828]  +
push eax  +
call sub_1021438  +
test al al +
jz loc_102AE74  +
mov edi [ebp+var_80C] +
add edi 18h +
mov ebx [edi] +
push offset unk_1079A00  +
call ds:RtlEnterCriticalSection  +
mov ecx dword_105790C +
mov eax [ebp+var_814] +
mov [eax+8] ecx +
mov edx [ebp+var_814] +
lea eax [esi+28h] +
mov ecx [eax] +
mov [edx] ecx +
mov edx [ebp+var_814] +
mov [edx+4] eax +
mov edx [ebp+var_814] +
mov [ecx+4] edx +
mov ecx [ebp+var_814] +
mov [eax] ecx +
cmp ebx edi +
jz loc_102ACF2  +
mov esi ebx +
mov ecx [esi+0Ch] +
mov ebx [ebx] +
mov eax ecx +
shr eax 3 +
and al 1 +
mov [ebp+var_805] al +
jnz loc_102AC79  +
mov eax [ebp+var_830] +
cmp eax [esi+20h] +
jnz loc_102AC45  +
mov eax [ebp+var_82C] +
cmp eax [esi+24h] +
jnz loc_102AC45  +
push dword ptr [esi+24h]  +
lea eax [ebp+var_818] +
push dword ptr [esi+20h]  +
push dword ptr [esi+14h]  +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+18h]  +
push dword ptr [esi+10h]  +
push ecx  +
push dword ptr [esi+8]  +
push eax  +
call sub_10213DC  +
test al al +
jz loc_102ACCC  +
mov eax [ebp+var_814] +
mov edx [ebp+var_818] +
add eax 38h +
mov ecx [eax] +
mov [edx] ecx +
mov edx [ebp+var_818] +
mov [edx+4] eax +
mov edx [ebp+var_818] +
mov [ecx+4] edx +
mov ecx [ebp+var_818] +
mov [eax] ecx +
mov eax [esi] +
mov ecx [esi+4] +
push esi  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call ds:HeapFree  +
cmp [ebp+var_805] 0 +
jnz loc_102AC45  +
push offset unk_1079A00  +
call ds:RtlLeaveCriticalSection  +
jmp loc_102AE74  +
cmp byte ptr [ebx+2Dh] 0Eh +
jnz loc_102AD45  +
lea eax [esi+28h] +
mov edx [eax] +
cmp edx eax +
jz loc_102AD45  +
mov ecx edx +
mov edi [ecx+18h] +
mov edx [edx] +
cmp edi [ebp+var_828] +
jnz loc_102AD2B  +
mov edi [ecx+1Ch] +
cmp edi [ebp+var_824] +
jz loc_102AD31  +
cmp edx eax +
jnz loc_102AD11  +
jmp loc_102AD43  +
mov eax [ebp+var_820] +
mov [ecx+10h] eax +
mov eax [ebp+var_81C] +
mov [ecx+14h] eax +
xor edi edi +
cmp [ebp+var_814] edi +
jz loc_102AD6A  +
movzx eax byte ptr [ebx+2Dh] +
push eax  +
push [ebp+var_824]  +
push [ebp+var_828]  +
push [ebp+var_814]  +
push esi  +
jmp loc_102AE6F  +
cmp [esi+3Ch] edi +
jz loc_102AD9B  +
push 1  +
push [ebp+var_81C]  +
push [ebp+var_820]  +
push esi  +
call sub_1025D62  +
cmp eax edi +
jz loc_102AD9B  +
movzx ecx byte ptr [ebx+2Dh] +
push ecx  +
push [ebp+var_824]  +
push [ebp+var_828]  +
push eax  +
jmp loc_102AD64  +
mov eax [ebp+var_818] +
mov edi [eax] +
cmp edi eax +
jz loc_102AE74  +
mov esi edi +
mov edi [edi] +
push offset String  +
push dword ptr [esi+40h]  +
call ds:__imp__wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102ADD0  +
cmp edi [ebp+var_818] +
jnz loc_102ADAB  +
jmp loc_102AE74  +
mov edi [esi+10h] +
mov edx [esi+14h] +
mov eax edi +
or eax edx +
jnz loc_102AE03  +
mov eax [esi+18h] +
or eax [esi+1Ch] +
jnz loc_102AE03  +
mov eax [ebp+var_820] +
mov [esi+10h] eax +
mov eax [ebp+var_81C] +
and dword ptr [esi+1Ch] 0 +
mov [esi+14h] eax +
mov dword ptr [esi+18h] 1 +
jmp loc_102AE57  +
mov eax [ebp+var_81C] +
mov ecx [ebp+var_820] +
cmp edx eax +
jb loc_102AE37  +
ja loc_102AE19  +
cmp edi ecx +
jbe loc_102AE37  +
sub edi ecx +
sbb edx eax +
add [esi+18h] edi +
adc [esi+1Ch] edx +
mov eax [ebp+var_820] +
mov [esi+10h] eax +
mov eax [ebp+var_81C] +
mov [esi+14h] eax +
jmp loc_102AE57  +
sub ecx edi +
sbb eax edx +
mov edx [esi+1Ch] +
add ecx 1 +
adc eax 0 +
cmp edx eax +
ja loc_102AE57  +
jb loc_102AE51  +
mov edx [esi+18h] +
cmp edx ecx +
jnb loc_102AE57  +
mov [esi+18h] ecx +
mov [esi+1Ch] eax +
movzx eax byte ptr [ebx+2Dh] +
push eax  +
push [ebp+var_824]  +
push [ebp+var_828]  +
push esi  +
push [ebp+var_840]  +
call sub_1025C3C  +
pop esi  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_102AEAC  +
cmp byte ptr [eax+2Dh] 0Ah +
push [ebp+arg_4]  +
push eax  +
jnz loc_102AEA7  +
call sub_1029E22  +
jmp loc_102AEAC  +
call sub_1028F15  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
cmp esi edi +
jz loc_102AFC0  +
cmp [ebp+arg_4] edi +
jnz loc_102AF2F  +
lea eax [ebp+arg_4] +
push eax  +
push esi  +
push dword ptr [esi+8]  +
call sub_10215E2  +
test al al +
jz loc_102AFC0  +
push 1  +
push edi  +
call sub_10217BE  +
mov ecx [ebp+arg_4] +
mov [ecx+2Ch] eax +
mov eax [esi+10h] +
mov ecx [ebp+arg_4] +
mov [ecx+70h] eax +
mov eax [esi+14h] +
mov ecx [ebp+arg_4] +
mov [ecx+74h] eax +
mov eax [ebp+arg_4] +
mov byte ptr [eax+34h] 1 +
mov eax [esi+38h] +
mov ecx [ebp+arg_4] +
mov [ecx+80h] eax +
mov eax [esi+3Ch] +
mov ecx [ebp+arg_4] +
mov [ecx+88h] eax +
push [ebp+arg_4]  +
push esi  +
call sub_1028A03  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push offset aSize  +
push esi  +
mov [ebp+arg_0] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_102AFC0  +
mov al [esi+2Dh] +
cmp al 0Ah +
jnz loc_102AF89  +
mov eax [ebp+arg_4] +
inc dword ptr [eax+4Ch]  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_4] +
add [eax+54h] ecx +
mov eax [ebp+arg_4] +
add eax 0A8h +
cmp [eax] edi +
jz loc_102AF74  +
mov eax [eax] +
inc dword ptr [eax+54h]  +
mov eax [ebp+arg_4] +
mov eax [eax+2Ch] +
cmp eax edi +
jz loc_102AFC0  +
inc dword ptr [eax+4Ch]  +
mov ecx [ebp+var_4] +
add [eax+54h] ecx +
jmp loc_102AFC0  +
cmp al 0Bh +
jnz loc_102AFC0  +
mov eax [ebp+arg_4] +
inc dword ptr [eax+50h]  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_4] +
add [eax+58h] ecx +
mov eax [ebp+arg_4] +
add eax 0A8h +
cmp [eax] edi +
jz loc_102AFAD  +
mov eax [eax] +
inc dword ptr [eax+58h]  +
mov eax [ebp+arg_4] +
mov eax [eax+2Ch] +
cmp eax edi +
jz loc_102AFC0  +
inc dword ptr [eax+50h]  +
mov ecx [ebp+var_4] +
add [eax+58h] ecx +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
and [ebp+var_8] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_102B66C  +
lea eax [ebx+18h] +
push eax  +
call sub_102534C  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_102B66C  +
cmp dword ptr [eax+0C48h] 0 +
jnz loc_102B66C  +
push esi  +
push edi  +
mov esi eax +
add esi 1Ch +
push 4  +
pop ecx  +
mov edi offset dword_10016EC +
xor eax eax +
mov [ebp+var_10] esi +
cmps   +
jz loc_102B66A  +
cmp byte ptr [ebx+2Dh] 0Ah +
jz loc_102B66A  +
cmp [ebp+arg_4] eax +
jnz loc_102B08D  +
lea eax [ebp+arg_4] +
push eax  +
push ebx  +
push dword ptr [ebx+8]  +
call sub_10215E2  +
test al al +
jz loc_102B66A  +
push 1  +
push 0  +
call sub_10217BE  +
mov ecx [ebp+arg_4] +
mov [ecx+2Ch] eax +
mov eax [ebx+10h] +
mov ecx [ebp+arg_4] +
mov [ecx+70h] eax +
mov eax [ebx+14h] +
mov ecx [ebp+arg_4] +
mov [ecx+74h] eax +
mov eax [ebx+38h] +
mov ecx [ebp+arg_4] +
mov [ecx+80h] eax +
mov eax [ebx+3Ch] +
mov ecx [ebp+arg_4] +
mov [ecx+88h] eax +
mov eax [ebp+arg_4] +
mov byte ptr [eax+34h] 1 +
push [ebp+arg_4]  +
push ebx  +
call sub_1028A03  +
movzx eax word ptr [ebx+2Eh] +
push eax  +
push [ebp+arg_0]  +
call sub_10252EA  +
mov esi eax +
mov al [ebx+2Dh] +
mov [ebp+var_C] esi +
cmp al 1 +
jz loc_102B164  +
cmp al 3 +
jz loc_102B164  +
cmp al 7 +
jz loc_102B164  +
mov ecx [ebp+arg_4] +
mov eax [ecx+0C4h] +
dec eax  +
js loc_102B117  +
lea ecx [ecx+eax*4+0D8h] +
mov [ebp+arg_0] ecx +
mov edx [ecx] +
mov edi [edx+10h] +
push 4  +
pop ecx  +
lea esi [ebx+18h] +
xor edx edx +
cmps   +
jnz loc_102B0F0  +
mov ecx [ebp+arg_0] +
mov dx [ebx+2Eh] +
mov ecx [ecx] +
cmp dx [ecx+14h] +
jz loc_102B103  +
mov ecx [ebp+arg_0] +
dec eax  +
sub ecx 4 +
mov [ebp+arg_0] ecx +
test eax eax +
jge loc_102B0D0  +
mov ecx [ebp+arg_4] +
jmp loc_102B110  +
mov ecx [ebp+arg_4] +
mov edx [ecx+eax*4+0D8h] +
mov [ebp+var_8] edx +
mov esi [ebp+var_C] +
test eax eax +
jge loc_102B181  +
mov eax [ecx+0C4h] +
test eax eax +
jge loc_102B123  +
xor eax eax +
push eax  +
movzx eax word ptr [ebx+2Eh] +
push eax  +
push [ebp+var_10]  +
add ecx 10h +
push ecx  +
call sub_102165E  +
mov ecx [ebp+arg_4] +
add ecx 0C4h +
cmp dword ptr [ecx] 0 +
mov [ebp+var_8] eax +
jge loc_102B181  +
and dword ptr [ecx] 0 +
mov ecx [ebp+arg_4] +
mov edx [ecx+0C4h] +
mov [ecx+edx*4+0D8h] eax +
mov eax [ebp+arg_4] +
inc dword ptr [eax+0C4h]  +
jmp loc_102B181  +
mov eax [ebp+arg_4] +
push dword ptr [eax+0C4h]  +
movzx ecx word ptr [ebx+2Eh] +
push ecx  +
push [ebp+var_10]  +
add eax 10h +
push eax  +
call sub_102165E  +
mov [ebp+var_8] eax +
test esi esi +
jz loc_102B66A  +
mov eax [esi+28h] +
or eax [esi+2Ch] +
jnz loc_102B19D  +
mov eax [ebx+10h] +
mov [esi+28h] eax +
mov eax [ebx+14h] +
mov [esi+2Ch] eax +
mov eax [esi+10h] +
mov ecx [ebx+10h] +
sub ecx [esi+28h] +
mov edi [ebx+14h] +
sbb edi [esi+2Ch] +
cdq   +
push edx  +
push eax  +
push edi  +
push ecx  +
call __allmul  +
xor edi edi +
push edi  +
push 2710h  +
push edx  +
push eax  +
call __aulldiv  +
add [esi+20h] eax +
adc [esi+24h] edx +
mov eax [ebx+10h] +
mov [esi+28h] eax +
mov eax [ebx+14h] +
mov [esi+2Ch] eax +
mov al [ebx+2Dh] +
cmp al 1 +
jz loc_102B4A1  +
cmp al 3 +
jz loc_102B4A1  +
cmp al 7 +
jz loc_102B4A1  +
cmp al 2 +
jz loc_102B202  +
cmp al 4 +
jz loc_102B202  +
cmp al 8 +
jnz loc_102B66A  +
mov ecx [ebp+var_8] +
mov [ebp+var_1] 1 +
cmp ecx edi +
jz loc_102B3EE  +
cmp [ecx+18h] edi +
jz loc_102B382  +
mov eax [ebp+arg_4] +
add eax 0C4h +
cmp [eax] edi +
mov byte ptr [ebp+arg_0+3] 0 +
jg loc_102B234  +
mov [eax] edi +
mov [ecx+18h] edi +
jmp loc_102B350  +
dec dword ptr [eax]  +
mov eax [ebp+arg_4] +
mov ecx [eax+0C4h] +
mov esi [eax+ecx*4+0D8h] +
xor edi edi +
mov [ebp+var_10] esi +
cmp [esi+18h] edi +
jz loc_102B253  +
mov [esi+18h] edi +
push dword ptr [esi+10h]  +
call sub_102534C  +
cmp eax edi +
jz loc_102B318  +
movzx ecx word ptr [esi+14h] +
push ecx  +
push eax  +
call sub_10252EA  +
mov ecx eax +
cmp ecx edi +
jz loc_102B318  +
dec dword ptr [ecx+10h]  +
jns loc_102B280  +
mov [ecx+10h] edi +
inc dword ptr [ecx+0Ch]  +
mov edi [ecx+0Ch] +
jz loc_102B291  +
mov eax [ecx+20h] +
xor edx edx +
div  edi +
jmp loc_102B293  +
xor eax eax +
and dword ptr [ecx+1Ch] 0 +
cmp byte ptr [ebp+arg_0+3] 0 +
mov [ecx+18h] eax +
jnz loc_102B318  +
mov eax [ebx+38h] +
mov edx [ebp+arg_4] +
mov edx [edx+0C8h] +
mov edi eax +
sub edi edx +
cmp edx eax +
sbb eax eax +
and eax edi +
imul eax dword_1079A80 +
add [esi+20h] eax +
add [ecx+44h] eax +
lea edx [ecx+60h] +
cmp dword ptr [edx] 0 +
jge loc_102B2D0  +
mov [edx] eax +
mov [ecx+5Ch] eax +
cmp eax [edx] +
jbe loc_102B2D6  +
mov [edx] eax +
cmp eax [ecx+5Ch] +
jnb loc_102B2DE  +
mov [ecx+5Ch] eax +
mov eax [ebx+3Ch] +
mov edx [ebp+arg_4] +
mov edx [edx+0CCh] +
mov edi eax +
sub edi edx +
cmp edx eax +
sbb eax eax +
and eax edi +
imul eax dword_1079A80 +
add [esi+1Ch] eax +
add [ecx+40h] eax +
lea edx [ecx+68h] +
cmp dword ptr [edx] 0 +
jge loc_102B30E  +
mov [edx] eax +
mov [ecx+64h] eax +
cmp eax [edx] +
jbe loc_102B314  +
mov [edx] eax +
mov byte ptr [ebp+arg_0+3] 1 +
mov eax [ebp+arg_4] +
add eax 0C4h +
cmp dword ptr [eax] 0 +
jle loc_102B34B  +
mov edx esi +
mov edi [edx+10h] +
push 4  +
pop ecx  +
lea esi [ebx+18h] +
xor edx edx +
cmps   +
jnz loc_102B234  +
mov cx [ebx+2Eh] +
mov edx [ebp+var_10] +
cmp cx [edx+14h] +
jnz loc_102B234  +
mov esi [ebp+var_C] +
xor edi edi +
mov eax [ebx+10h] +
mov ecx [ebp+arg_4] +
mov [ecx+0D0h] eax +
mov eax [ebx+14h] +
mov ecx [ebp+arg_4] +
mov [ecx+0D4h] eax +
mov eax [ebx+38h] +
mov ecx [ebp+arg_4] +
mov [ecx+0C8h] eax +
mov eax [ebx+3Ch] +
mov ecx [ebp+arg_4] +
mov [ecx+0CCh] eax +
jmp loc_102B3EE  +
mov eax [ebx+38h] +
mov edx eax +
sub edx eax +
cmp eax eax +
sbb eax eax +
and eax edx +
imul eax dword_1079A80 +
add [ecx+20h] eax +
add [esi+44h] eax +
lea edx [esi+60h] +
cmp [edx] edi +
jge loc_102B3A8  +
mov [edx] eax +
mov [esi+5Ch] eax +
cmp eax [edx] +
jbe loc_102B3AE  +
mov [edx] eax +
cmp eax [esi+5Ch] +
jnb loc_102B3B6  +
mov [esi+5Ch] eax +
mov eax [ebx+3Ch] +
mov edx eax +
sub edx eax +
cmp eax eax +
sbb eax eax +
and eax edx +
imul eax dword_1079A80 +
add [ecx+1Ch] eax +
add [esi+40h] eax +
lea ecx [esi+68h] +
cmp [ecx] edi +
jge loc_102B3DC  +
mov [ecx] eax +
mov [esi+64h] eax +
cmp eax [ecx] +
jbe loc_102B3E2  +
mov [ecx] eax +
cmp eax [esi+64h] +
jnb loc_102B3EA  +
mov [esi+64h] eax +
mov [ebp+var_1] 0 +
mov eax [ebp+arg_4] +
mov ecx [eax+44h] +
sub ecx [eax+90h] +
add [esi+4Ch] ecx +
mov eax [ebp+arg_4] +
mov ecx [eax+48h] +
sub ecx [eax+94h] +
add [esi+50h] ecx +
mov eax [ebp+arg_4] +
mov ecx [eax+4Ch] +
sub ecx [eax+98h] +
add [esi+54h] ecx +
mov eax [ebp+arg_4] +
mov ecx [eax+50h] +
sub ecx [eax+9Ch] +
add [esi+58h] ecx +
cmp [ebp+var_1] 0 +
mov eax [ebp+arg_4] +
mov [eax+0A8h] edi +
jz loc_102B66A  +
mov eax [ebp+arg_4] +
lea ecx [eax+0C4h] +
mov edx [ecx] +
cmp edx edi +
jg loc_102B66A  +
jge loc_102B457  +
mov [ecx] edi +
mov eax [ebp+arg_4] +
mov ecx [ebx+38h] +
sub ecx [eax+0BCh] +
cmp ecx edi +
jle loc_102B479  +
add [eax+0ACh] ecx +
mov eax [ebx+38h] +
mov ecx [ebp+arg_4] +
mov [ecx+0BCh] eax +
mov eax [ebp+arg_4] +
mov ecx [ebx+3Ch] +
sub ecx [eax+0C0h] +
cmp ecx edi +
jle loc_102B66A  +
add [eax+0B0h] ecx +
mov eax [ebx+3Ch] +
mov ecx [ebp+arg_4] +
mov [ecx+0C0h] eax +
jmp loc_102B66A  +
mov eax [ebp+arg_4] +
lea ecx [eax+0C4h] +
cmp [ecx] edi +
jge loc_102B4B3  +
mov [ecx] edi +
mov eax [ebp+arg_4] +
mov ecx [eax+0C4h] +
cmp ecx edi +
jnz loc_102B507  +
mov ecx [ebx+38h] +
sub ecx [eax+0BCh] +
cmp ecx edi +
jle loc_102B4DF  +
add [eax+0B4h] ecx +
mov eax [ebx+38h] +
mov ecx [ebp+arg_4] +
mov [ecx+0BCh] eax +
mov eax [ebp+arg_4] +
mov ecx [ebx+3Ch] +
sub ecx [eax+0C0h] +
cmp ecx edi +
jle loc_102B5BB  +
add [eax+0B8h] ecx +
mov eax [ebx+3Ch] +
mov ecx [ebp+arg_4] +
mov [ecx+0C0h] eax +
jmp loc_102B5B8  +
mov edi [eax+ecx*4+0D4h] +
push dword ptr [edi+10h]  +
mov [ebp+arg_0] edi +
call sub_102534C  +
test eax eax +
jz loc_102B5B6  +
movzx ecx word ptr [edi+14h] +
push ecx  +
push eax  +
call sub_10252EA  +
test eax eax +
jz loc_102B5B6  +
mov ecx [ebx+38h] +
mov edx [ebp+arg_4] +
mov edx [edx+0C8h] +
mov edi ecx +
sub edi edx +
cmp edx ecx +
mov edx [ebp+arg_0] +
sbb ecx ecx +
and ecx edi +
imul ecx dword_1079A80 +
add [edx+20h] ecx +
add [eax+44h] ecx +
lea edx [eax+60h] +
cmp dword ptr [edx] 0 +
jge loc_102B567  +
mov [edx] ecx +
mov [eax+5Ch] ecx +
cmp ecx [edx] +
jbe loc_102B56D  +
mov [edx] ecx +
cmp ecx [eax+5Ch] +
jnb loc_102B575  +
mov [eax+5Ch] ecx +
mov ecx [ebx+3Ch] +
mov edx [ebp+arg_4] +
mov edx [edx+0CCh] +
mov edi ecx +
sub edi edx +
cmp edx ecx +
mov edx [ebp+arg_0] +
sbb ecx ecx +
and ecx edi +
imul ecx dword_1079A80 +
add [edx+1Ch] ecx +
add [eax+40h] ecx +
lea edx [eax+68h] +
cmp dword ptr [edx] 0 +
jge loc_102B5A8  +
mov [edx] ecx +
mov [eax+64h] ecx +
cmp ecx [edx] +
jbe loc_102B5AE  +
mov [edx] ecx +
cmp ecx [eax+64h] +
jnb loc_102B5B6  +
mov [eax+64h] ecx +
xor edi edi +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_8] +
cmp ecx edi +
jz loc_102B60D  +
cmp [ecx+18h] edi +
jnz loc_102B60D  +
mov dword ptr [ecx+18h] 1 +
inc dword ptr [esi+10h]  +
cmp byte ptr [ebx+2Dh] 1 +
jnz loc_102B5E5  +
mov eax [ebp+arg_4] +
inc dword ptr [eax+0A0h]  +
inc dword ptr [ecx+2Ch]  +
jmp loc_102B5E8  +
inc dword ptr [ecx+30h]  +
mov eax [ebp+arg_4] +
mov [eax+0A8h] esi +
mov eax [ebp+arg_4] +
mov edx [eax+0C4h] +
mov [eax+edx*4+0D8h] ecx +
mov eax [ebp+arg_4] +
inc dword ptr [eax+0C4h]  +
mov eax [ebp+arg_4] +
mov ecx [ebx+10h] +
mov [eax+0D0h] ecx +
mov eax [ebx+14h] +
mov ecx [ebp+arg_4] +
mov [ecx+0D4h] eax +
mov eax [ebx+38h] +
mov ecx [ebp+arg_4] +
mov [ecx+0C8h] eax +
mov eax [ebx+3Ch] +
mov ecx [ebp+arg_4] +
mov [ecx+0CCh] eax +
mov eax [ebp+arg_4] +
mov ecx [eax+44h] +
mov [eax+90h] ecx +
mov eax [ebp+arg_4] +
mov ecx [eax+48h] +
mov [eax+94h] ecx +
mov eax [ebp+arg_4] +
mov ecx [eax+4Ch] +
mov [eax+98h] ecx +
mov eax [ebp+arg_4] +
mov ecx [eax+50h] +
mov [eax+9Ch] ecx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [eax] +
push edi  +
cmp [ebp+arg_0] esi +
jz loc_102B6C4  +
push [ebp+arg_8]  +
mov edi [ebp+arg_4] +
mov ebx esi +
mov esi [esi] +
push edi  +
lea eax [ebx+8] +
push eax  +
call sub_102B676  +
test eax eax +
jz loc_102B6C0  +
cmp dword ptr [ebx+18h] 0 +
jz loc_102B683  +
mov esi [ebx+10h] +
mov eax [ebp+arg_4] +
push [ebp+arg_8]  +
add edi 18h +
movs   +
movs   +
movs   +
movs   +
push eax  +
mov byte ptr [eax+2Dh] 2 +
call sub_102AFCB  +
xor eax eax +
jmp loc_102B6C7  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov edx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
mov [ebp+var_4] edx +
cmp esi edi +
jz loc_102B91E  +
push ebx  +
mov ebx [esi+8] +
cmp ebx edi +
jnz loc_102B70E  +
mov al byte_1079A7A +
add al byte ptr dword_1079A94 +
push esi  +
mov [esi+50h] al +
inc byte_1079A7A  +
push edi  +
jmp loc_102B714  +
cmp edx edi +
jnz loc_102B726  +
push esi  +
push ebx  +
call sub_10218E4  +
mov edx eax +
mov [ebp+var_4] edx +
cmp edx edi +
jz loc_102B88F  +
cmp [edx+38h] edi +
jnz loc_102B91D  +
xor ebx ebx +
inc ebx  +
cmp byte ptr [edx+34h] 0 +
jz loc_102B77A  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+arg_4] +
push eax  +
push offset aProcessid  +
push esi  +
mov [ebp+arg_4] edi +
mov [ebp+arg_0] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_102B91D  +
push ebx  +
push [ebp+arg_4]  +
call sub_10217BE  +
cmp eax edi +
jz loc_102B777  +
mov ecx [ebp+var_4] +
mov byte ptr [ecx+34h] 0 +
mov ecx [ebp+var_4] +
mov [ecx+2Ch] eax +
mov edx [ebp+var_4] +
cmp edx edi +
jz loc_102B7D8  +
cmp byte ptr [esi+2Dh] 4 +
jnz loc_102B7D8  +
mov eax dword_10566D8 +
cmp byte ptr [eax+5D1h] 0 +
jz loc_102B7CA  +
cmp byte_1079A59 0 +
jnz loc_102B7CA  +
mov eax [esi+14h] +
mov edi stru_1079A28.dwHighDateTime +
mov ecx [esi+10h] +
cmp edi eax +
jb loc_102B7C2  +
ja loc_102B7B7  +
mov edi stru_1079A28.dwLowDateTime +
cmp edi ecx +
jbe loc_102B7C2  +
mov stru_1079A28.dwLowDateTime ecx +
mov stru_1079A28.dwHighDateTime eax +
mov byte_1079A59 bl +
xor edi edi +
push edx  +
push esi  +
add edx 10h +
push edx  +
call sub_102B676  +
mov edx [ebp+var_4] +
mov [edx+38h] ebx +
mov eax [ebp+var_4] +
mov ecx [esi+3Ch] +
add eax 8Ch +
cmp [eax] ecx +
jnb loc_102B7EC  +
mov [eax] ecx +
mov eax [ebp+var_4] +
mov ecx [esi+38h] +
add eax 84h +
cmp [eax] ecx +
jnb loc_102B7FD  +
mov [eax] ecx +
mov eax [esi+10h] +
mov ecx [ebp+var_4] +
mov [ecx+78h] eax +
mov eax [esi+14h] +
mov ecx [ebp+var_4] +
mov [ecx+7Ch] eax +
mov eax [ebp+var_4] +
lea ecx [eax+78h] +
mov edx [ecx+4] +
cmp edx stru_1079A28.dwHighDateTime +
jb loc_102B83B  +
mov edx stru_1079A28.dwLowDateTime +
ja loc_102B82E  +
mov esi [ecx] +
cmp esi edx +
jbe loc_102B83B  +
mov [ecx] edx +
mov eax stru_1079A28.dwHighDateTime +
mov [ecx+4] eax +
mov eax [ebp+var_4] +
mov ecx [eax+84h] +
sub ecx [eax+0BCh] +
cmp [eax+0C4h] edi +
jg loc_102B86F  +
add [eax+0B4h] ecx +
mov eax [ebp+var_4] +
mov ecx [eax+8Ch] +
sub ecx [eax+0C0h] +
add [eax+0B8h] ecx +
jmp loc_102B91D  +
add [eax+0ACh] ecx +
mov eax [ebp+var_4] +
mov ecx [eax+8Ch] +
sub ecx [eax+0C0h] +
add [eax+0B0h] ecx +
jmp loc_102B91D  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push ebx  +
call sub_10215E2  +
test al al +
jz loc_102B91D  +
push edi  +
push edi  +
call sub_10217BE  +
mov ecx [ebp+var_4] +
mov [ecx+2Ch] eax +
mov eax [ebp+var_4] +
xor ebx ebx +
inc ebx  +
mov [eax+38h] ebx +
mov eax [ebp+var_4] +
mov [eax+34h] bl +
mov eax [esi+10h] +
mov ecx [ebp+var_4] +
mov [ecx+78h] eax +
mov eax [esi+14h] +
mov ecx [ebp+var_4] +
mov [ecx+7Ch] eax +
mov eax [ebp+var_4] +
mov ecx [eax+78h] +
mov [eax+70h] ecx +
mov eax [eax+7Ch] +
mov ecx [ebp+var_4] +
mov [ecx+74h] eax +
mov eax [esi+38h] +
mov ecx [ebp+var_4] +
mov [ecx+84h] eax +
mov eax [ebp+var_4] +
mov ecx [eax+84h] +
mov [eax+80h] ecx +
mov eax [esi+3Ch] +
mov ecx [ebp+var_4] +
mov [ecx+8Ch] eax +
mov eax [ebp+var_4] +
mov ecx [eax+8Ch] +
mov [eax+88h] ecx +
push [ebp+var_4]  +
push esi  +
call sub_1028A03  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 88h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_71] bl +
mov [ebp+var_7C] ebx +
cmp esi ebx +
jz loc_102BBC2  +
lea eax [ebp+var_78] +
push eax  +
lea eax [ebp+var_7C] +
push eax  +
push offset aTthreadid  +
push esi  +
mov [ebp+var_78] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_102BBC2  +
push edi  +
mov edi [ebp+var_7C] +
lea eax [ebp+var_78] +
push eax  +
lea eax [ebp+var_7C] +
push eax  +
push offset aProcessid  +
push esi  +
call sub_1026EA2  +
test eax eax +
jnz loc_102BBC1  +
mov eax [ebp+var_7C] +
push 1  +
push eax  +
mov [ebp+var_80] eax +
call sub_10217BE  +
mov [ebp+var_88] eax +
cmp eax ebx +
jnz loc_102B9C3  +
lea eax [ebp+var_88] +
push eax  +
push [ebp+var_80]  +
call sub_1022EBD  +
test al al +
jz loc_102BBC1  +
cmp edi ebx +
jnz loc_102B9DB  +
mov al byte_1079A79 +
add al byte ptr dword_1079A94 +
mov [esi+50h] al +
inc byte_1079A79  +
push esi  +
push edi  +
call sub_10218E4  +
mov [ebp+var_70] eax +
cmp edi ebx +
jz loc_102BA55  +
cmp eax ebx +
jz loc_102BA55  +
cmp [eax+38h] ebx +
jnz loc_102BA55  +
cmp [eax+34h] bl +
jz loc_102BA00  +
mov [eax+34h] bl +
mov [ebp+var_71] 1 +
jmp loc_102BA68  +
mov ecx [esi+10h] +
mov [ebp+var_5C] ecx +
mov ecx [esi+14h] +
mov [ebp+var_58] ecx +
mov [ebp+var_3F] 2 +
mov [ebp+var_64] edi +
mov ecx [eax+8Ch] +
mov [ebp+var_30] ecx +
lea ecx [eax+84h] +
mov edx [ecx] +
mov [ebp+var_34] edx +
mov edx [eax+80h] +
cmp [ecx] edx +
jnb loc_102BA36  +
mov [ecx] edx +
mov eax [ebp+var_70] +
mov edx [eax+88h] +
lea ecx [eax+8Ch] +
cmp [ecx] edx +
jnb loc_102BA4B  +
mov [ecx] edx +
mov eax [ebp+var_70] +
push eax  +
lea eax [ebp+var_6C] +
push eax  +
call sub_102B6D3  +
lea eax [ebp+var_70] +
push eax  +
push esi  +
push edi  +
call sub_10215E2  +
test al al +
jz loc_102BBC1  +
mov eax [ebp+var_70] +
mov ecx [ebp+var_88] +
mov [eax+2Ch] ecx +
mov ecx [ebp+var_70] +
lea edi [esi+10h] +
mov eax [edi] +
mov [ecx+70h] eax +
mov eax [edi+4] +
mov ecx [ebp+var_70] +
mov [ecx+74h] eax +
lea eax [ebp+var_78] +
push eax  +
lea eax [ebp+var_84] +
push eax  +
push offset aSubprocesstag  +
push esi  +
mov [ebp+var_78] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_102BBC1  +
cmp [ebp+var_84] ebx +
jz loc_102BACF  +
mov eax [ebp+var_80] +
cmp eax [esi+0Ch] +
jnz loc_102BACF  +
push eax  +
push [ebp+var_84]  +
call sub_1021817  +
mov ecx [ebp+var_70] +
mov [ecx+30h] eax +
cmp byte ptr [esi+2Dh] 3 +
jnz loc_102BB4D  +
mov edx dword_10566D8 +
cmp [edx+5D1h] bl +
jz loc_102BB33  +
cmp byte_1079A58 bl +
jnz loc_102BB33  +
mov eax [edi+4] +
mov ebx SystemTimeAsFileTime.dwHighDateTime +
mov ecx [edi] +
cmp ebx eax +
ja loc_102BB2A  +
jb loc_102BB06  +
mov ebx SystemTimeAsFileTime.dwLowDateTime +
cmp ebx ecx +
jnb loc_102BB2A  +
test dword ptr [edx+3B0h] 1000h +
jz loc_102BB1F  +
push edi  +
push offset SystemTimeAsFileTime  +
call sub_101D67A  +
jmp loc_102BB2A  +
mov SystemTimeAsFileTime.dwLowDateTime ecx +
mov SystemTimeAsFileTime.dwHighDateTime eax +
mov byte_1079A58 1 +
xor ebx ebx +
mov eax [esi+38h] +
mov ecx [ebp+var_70] +
mov [ecx+80h] eax +
mov eax [esi+3Ch] +
mov ecx [ebp+var_70] +
mov [ecx+88h] eax +
jmp loc_102BB5F  +
mov eax [ebp+var_70] +
mov [eax+80h] ebx +
mov eax [ebp+var_70] +
mov [eax+88h] ebx +
cmp byte ptr [esi+2Dh] 3 +
jnz loc_102BB6A  +
push [ebp+var_70]  +
jmp loc_102BB6B  +
push ebx  +
push esi  +
call sub_1028A03  +
cmp [ebp+var_71] bl +
jnz loc_102BBC1  +
mov eax [ebp+var_70] +
mov [eax+0ACh] ebx +
mov eax [ebp+var_70] +
mov [eax+0B4h] ebx +
mov eax [ebp+var_70] +
mov [eax+0B0h] ebx +
mov eax [ebp+var_70] +
mov [eax+0B8h] ebx +
mov eax [ebp+var_70] +
mov [eax+0C4h] ebx +
mov eax [ebp+var_70] +
mov ecx [eax+80h] +
mov [eax+0BCh] ecx +
mov eax [ebp+var_70] +
mov ecx [eax+88h] +
mov [eax+0C0h] ecx +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
push 68h  +
xor ebx ebx +
lea eax [ebp+var_6C] +
push ebx  +
push eax  +
call memset  +
mov eax stru_1079A28.dwHighDateTime +
mov ecx dword_1079A44 +
mov esi dword_1079A40 +
add esp 0Ch +
cmp eax ecx +
jb loc_102BC26  +
mov edx stru_1079A28.dwLowDateTime +
ja loc_102BC1E  +
cmp edx esi +
jbe loc_102BC26  +
mov [ebp+var_5C] edx +
mov [ebp+var_58] eax +
jmp loc_102BC2C  +
mov [ebp+var_5C] esi +
mov [ebp+var_58] ecx +
mov eax dword_1079AAC +
lea edi [ebx+eax] +
mov esi [edi] +
jmp loc_102BC68  +
mov eax esi +
cmp dword ptr [eax+38h] 0 +
mov esi [esi] +
jnz loc_102BC68  +
mov [ebp+var_3F] 4 +
mov ecx [eax+28h] +
mov [ebp+var_64] ecx +
mov ecx [eax+8Ch] +
mov [ebp+var_30] ecx +
mov ecx [eax+84h] +
push eax  +
lea eax [ebp+var_6C] +
push eax  +
mov [ebp+var_34] ecx +
call sub_102B6D3  +
cmp esi edi +
jnz loc_102BC38  +
add ebx 8 +
cmp ebx 0E8h +
jl loc_102BC2C  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_102BCBB  +
mov al [ecx+2Dh] +
cmp al 1 +
jz loc_102BCB5  +
cmp al 3 +
jz loc_102BCB5  +
cmp al 2 +
jz loc_102BCAA  +
cmp al 4 +
jnz loc_102BCBB  +
push [ebp+arg_4]  +
push ecx  +
call sub_102B6D3  +
jmp loc_102BCBB  +
push ecx  +
call sub_102B929  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+8] +
push esi  +
xor esi esi +
mov [ebp-4] esi +
cmp ebx esi +
jz loc_102C47D  +
mov eax dword_10566D8 +
cmp eax esi +
jz loc_102C47D  +
cmp byte ptr [eax+5D1h] 0 +
mov [ebp+8] esi +
jz loc_102BD1A  +
test byte ptr [eax+3B0h] 8 +
jz loc_102BD1A  +
lea eax [ebp-8] +
push eax  +
lea eax [ebp+8] +
push eax  +
push ebx  +
call sub_1028844  +
cmp [ebp+8] esi +
jz loc_102BD1A  +
inc dword_1057920  +
jmp loc_102BD20  +
inc dword_105791C  +
cmp byte_10566DC 0 +
mov eax [ebx+10h] +
mov dword_1079A40 eax +
mov eax [ebx+14h] +
push edi  +
mov dword_1079A44 eax +
jz loc_102BE39  +
push 4  +
lea esi [ebx+18h] +
pop ecx  +
mov edi offset loc_100176C +
xor eax eax +
cmps   +
jz loc_102BE39  +
cmp dword ptr [ebx+8] 0FFFFFFFFh +
jz loc_102BD63  +
test byte ptr [ebx+4] 10h +
jz loc_102BE39  +
mov eax dword_10566D8 +
mov eax [eax+3B0h] +
test eax 480h +
jz loc_102BD80  +
push dword ptr [ebp+8]  +
push ebx  +
call sub_101DB39  +
jmp loc_102BDEA  +
test al 8 +
jz loc_102BDEA  +
cmp dword ptr [ebp+8] 0 +
jnz loc_102BDEA  +
lea eax [ebx+18h] +
push eax  +
call sub_102534C  +
mov esi eax +
test esi esi +
jz loc_102C47C  +
inc dword ptr [esi+18h]  +
push 0  +
push esi  +
push ebx  +
call sub_10259D2  +
mov edi eax +
test edi edi +
jz loc_102C47C  +
mov ax [ebx+4] +
mov [esi+0C40h] ax +
mov eax dword_10566D8 +
test dword ptr [eax+3B0h] 4000000h +
jz loc_102BDD7  +
push edi  +
push esi  +
push ebx  +
call sub_103061A  +
push edi  +
push esi  +
push ebx  +
call sub_1025AB7  +
test eax eax +
jz loc_102C47C  +
inc dword ptr [eax+0Ch]  +
mov eax dword_10566D8 +
test byte ptr [eax+3B0h] 8 +
jz loc_102C47C  +
cmp dword ptr [ebp+8] 0 +
jnz loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset dword_100170C +
lea esi [ebx+18h] +
xor eax eax +
cmps   +
jnz loc_102C47C  +
mov al [ebx+2Dh] +
cmp al 45h +
jz loc_102BE2E  +
cmp al 44h +
jz loc_102BE2E  +
cmp al 43h +
jnz loc_102C47C  +
push ebx  +
call sub_104166C  +
jmp loc_102C47C  +
push 4  +
lea esi [ebx+18h] +
pop ecx  +
mov edi offset dword_10016EC +
xor eax eax +
cmps   +
jnz loc_102BE50  +
push ebx  +
call sub_1028B26  +
cmp byte ptr [ebx+2Dh] 3 +
jnz loc_102BEC4  +
cmp byte_1055AB0 0 +
jz loc_102BF0B  +
push 4  +
pop ecx  +
mov edi offset dword_100173C +
lea esi [ebx+18h] +
xor eax eax +
cmps   +
jnz loc_102BEA8  +
mov ecx [ebx+8] +
xor edx edx +
cmp ecx edx +
jz loc_102BEA8  +
mov eax dword_1057930 +
mov dword_1057708[eax*8] ecx +
mov dword_105770C[eax*8] edx +
inc eax  +
mov dword_1057930 eax +
cmp word ptr [ebx+56h] 8 +
mov [ebx+8] edx +
jb loc_102BEA8  +
mov eax [ebx+5Ch] +
mov [eax] edx +
mov [eax+4] edx +
mov eax dword_1057934 +
inc dword_1057934  +
cmp eax dword_105792C +
jnz loc_102BF0B  +
mov byte_1055AB0 0 +
jmp loc_102BF0B  +
mov eax dword_1057930 +
xor edx edx +
cmp eax edx +
jbe loc_102BF0B  +
xor ecx ecx +
cmp eax edx +
jbe loc_102BF0B  +
mov eax [ebx+8] +
cmp eax dword_1057708[ecx*8] +
jnz loc_102BF02  +
cmp edx dword_105770C[ecx*8] +
jnz loc_102BF02  +
cmp byte ptr [ebx+2Dh] 4 +
mov [ebx+8] edx +
jnz loc_102BF02  +
cmp word ptr [ebx+56h] 8 +
jb loc_102BF02  +
mov eax [ebx+5Ch] +
mov [eax] edx +
mov [eax+4] edx +
inc ecx  +
cmp ecx dword_1057930 +
jb loc_102BED5  +
cmp byte_1079A78 0 +
jz loc_102BF3B  +
mov eax [ebx+14h] +
mov edx stru_1079A28.dwHighDateTime +
mov ecx [ebx+10h] +
cmp edx eax +
ja loc_102BF3B  +
jb loc_102BF30  +
mov edx stru_1079A28.dwLowDateTime +
cmp edx ecx +
jnb loc_102BF3B  +
mov stru_1079A28.dwLowDateTime ecx +
mov stru_1079A28.dwHighDateTime eax +
mov eax dword_10566D8 +
mov eax [eax+3B0h] +
test eax 20000480h +
jz loc_102BF58  +
push dword ptr [ebp+8]  +
push ebx  +
call sub_101DB39  +
jmp loc_102BFC2  +
test al 8 +
jz loc_102BFC2  +
cmp dword ptr [ebp+8] 0 +
jnz loc_102BFC2  +
lea eax [ebx+18h] +
push eax  +
call sub_102534C  +
mov esi eax +
test esi esi +
jz loc_102C47C  +
inc dword ptr [esi+18h]  +
push 0  +
push esi  +
push ebx  +
call sub_10259D2  +
mov edi eax +
test edi edi +
jz loc_102C47C  +
mov ax [ebx+4] +
mov [esi+0C40h] ax +
mov eax dword_10566D8 +
test dword ptr [eax+3B0h] 4000000h +
jz loc_102BFAF  +
push edi  +
push esi  +
push ebx  +
call sub_103061A  +
push edi  +
push esi  +
push ebx  +
call sub_1025AB7  +
test eax eax +
jz loc_102C47C  +
inc dword ptr [eax+0Ch]  +
mov eax dword_10566D8 +
test byte ptr [eax+3B0h] 8 +
jz loc_102C47C  +
push 4  +
lea edx [ebx+18h] +
pop ecx  +
mov edi offset dword_100179C +
mov esi edx +
xor eax eax +
cmps   +
jnz loc_102BFF2  +
push ebx  +
call sub_102A62B  +
jmp loc_102C47C  +
cmp [ebx+8] eax +
jnz loc_102C016  +
mov al [ebx+2Dh] +
cmp al 1 +
jz loc_102C016  +
cmp al 3 +
jz loc_102C016  +
cmp al 2 +
jz loc_102C016  +
cmp al 4 +
jz loc_102C016  +
cmp al 7 +
jz loc_102C016  +
cmp al 8 +
jnz loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset loc_100176C +
mov esi edx +
xor eax eax +
cmps   +
jz loc_102C052  +
push 4  +
pop ecx  +
mov edi offset dword_100177C +
mov esi edx +
xor eax eax +
cmps   +
jz loc_102C052  +
push 4  +
pop ecx  +
mov edi offset dword_100178C +
mov esi edx +
xor eax eax +
cmps   +
jz loc_102C052  +
push ebx  +
push dword ptr [ebx+8]  +
call sub_10218E4  +
mov [ebp-4] eax +
push 4  +
lea eax [ebx+18h] +
pop ecx  +
mov edi offset dword_100172C +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_102C083  +
push dword ptr [ebp-4]  +
push ebx  +
call sub_1028A03  +
cmp dword ptr [ebp+8] 0 +
jnz loc_102C47C  +
push ebx  +
call sub_102A8F4  +
jmp loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset dword_100173C +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_102C0BA  +
cmp byte ptr [ebx+2Dh] 1 +
jnz loc_102C0A2  +
push dword ptr [ebp-4]  +
push ebx  +
call sub_1028A03  +
cmp dword ptr [ebp+8] 0 +
jnz loc_102C47C  +
push dword ptr [ebp-4]  +
push ebx  +
call sub_102BC8B  +
jmp loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset dword_100171C +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_102C113  +
mov eax [ebp-4] +
xor ecx ecx +
cmp eax ecx +
jz loc_102C47C  +
cmp [eax+28h] ecx +
jz loc_102C47C  +
cmp [eax+30h] ecx +
jz loc_102C0E8  +
mov [eax+30h] ecx +
mov al [ebx+2Dh] +
cmp al 34h +
jnz loc_102C0FD  +
push dword ptr [ebp-4]  +
push ebx  +
call sub_1029B89  +
jmp loc_102C47C  +
cmp al 35h +
jnz loc_102C47C  +
push dword ptr [ebp-4]  +
push ebx  +
call sub_1029C1E  +
jmp loc_102C47C  +
cmp [ebx+8] edx +
jz loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset loc_100176C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C155  +
push 4  +
pop ecx  +
mov edi offset dword_100177C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C155  +
push 4  +
mov esi eax +
pop ecx  +
mov edi offset dword_100178C +
xor eax eax +
cmps   +
jz loc_102C155  +
push dword ptr [ebp-4]  +
push ebx  +
call sub_1028A03  +
cmp dword ptr [ebp+8] 1 +
jz loc_102C47C  +
push 4  +
lea eax [ebx+18h] +
pop ecx  +
mov edi offset dword_100175C +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_102C180  +
push dword ptr [ebp-4]  +
push ebx  +
call sub_102AE8A  +
jmp loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset loc_100176C +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_102C1B2  +
mov al [ebx+2Dh] +
test al al +
jz loc_102C1A7  +
cmp al 20h +
jz loc_102C1A7  +
cmp al 23h +
jz loc_102C1A7  +
cmp al 24h +
jnz loc_102C47C  +
push ebx  +
call sub_102A498  +
jmp loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset dword_100177C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C1D2  +
push 4  +
pop ecx  +
mov edi offset dword_100178C +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_102C1E0  +
push dword ptr [ebp-4]  +
push ebx  +
call sub_102AEB5  +
jmp loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset dword_100174C +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_102C1FE  +
push dword ptr [ebp-4]  +
push ebx  +
call sub_102A92A  +
jmp loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset dword_10016FC +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_102C242  +
mov al [ebx+2Dh] +
cmp al 0Ch +
jnz loc_102C220  +
push ebx  +
call sub_102A1FF  +
jmp loc_102C47C  +
cmp al 0Ah +
jnz loc_102C22F  +
push ebx  +
call sub_102A3BC  +
jmp loc_102C47C  +
cmp al 0Fh +
jnz loc_102C47C  +
push ebx  +
call sub_1029C98  +
jmp loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset unk_105595C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C446  +
push 4  +
pop ecx  +
mov edi offset unk_105596C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C446  +
push 4  +
pop ecx  +
mov edi offset unk_105597C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C446  +
push 4  +
pop ecx  +
mov edi offset unk_105598C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C446  +
push 4  +
pop ecx  +
mov edi offset unk_105599C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C446  +
push 4  +
pop ecx  +
mov edi offset unk_10559AC +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C446  +
push 4  +
pop ecx  +
mov edi offset unk_10559BC +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C446  +
push 4  +
pop ecx  +
mov edi offset unk_10559EC +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C446  +
push 4  +
pop ecx  +
mov edi offset unk_10559FC +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C446  +
push 4  +
pop ecx  +
mov edi offset unk_1055A0C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C446  +
push 4  +
pop ecx  +
mov edi offset unk_10559CC +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset unk_10559DC +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset unk_1055A1C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset unk_1055A2C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset unk_1055A3C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset aPSa@bc +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset unk_1055A5C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset unk_1055A6C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset unk_1055A7C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset unk_1055A8C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset unk_1055A9C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset dword_10017AC +
mov esi eax +
xor edx edx +
cmps   +
jnz loc_102C405  +
mov eax [ebp-4] +
test eax eax +
jz loc_102C47C  +
inc dword ptr [eax+174h]  +
jmp loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset unk_105592C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C435  +
push 4  +
pop ecx  +
mov edi offset unk_105593C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C435  +
push 4  +
mov esi eax +
pop ecx  +
mov edi offset unk_105594C +
xor eax eax +
cmps   +
jnz loc_102C43B  +
push ebx  +
call sub_1026F00  +
push dword ptr [ebp-4]  +
push ebx  +
call sub_102AFCB  +
jmp loc_102C47C  +
push 4  +
pop ecx  +
mov edi offset unk_105595C +
mov esi eax +
xor edx edx +
cmps   +
jz loc_102C466  +
push 4  +
mov esi eax +
pop ecx  +
mov edi offset unk_105596C +
xor eax eax +
cmps   +
jnz loc_102C46D  +
mov byte_1057927 1 +
cmp byte_1057927 0 +
jz loc_102C47C  +
push ebx  +
call sub_1027C70  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax ecx +
imul ecx ecx +
imul eax eax +
add eax 3039h +
shr eax 10h +
inc ecx  +
and ecx 0FFFF0000h +
or eax ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push edi  +
xor eax eax +
mov dword ptr [ecx+0Ch] 1E3603Bh +
mov [ecx+1Ch] eax +
mov [ecx+8] eax +
mov [ecx+10h] eax +
lea edi [ecx+14h] +
stos   +
stos   +
mov [ecx+4] ecx +
mov [ecx] ecx +
pop edi  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov edi ecx +
mov esi [edi] +
jmp loc_102C505  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call ds:HeapFree  +
cmp edi esi +
jnz loc_102C4E8  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax ecx +
lea ecx [eax+10h] +
push 4  +
mov [ecx] edx +
pop edx  +
mov [eax+14h] dx +
mov [eax+16h] dx +
mov [eax+18h] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_102C569  +
mov eax [edi+5Ch] +
push esi  +
mov esi ds:HeapFree +
test eax eax +
jz loc_102C55D  +
push eax  +
push 0  +
push hHeap  +
call esi  +
push edi  +
push 0  +
push hHeap  +
call esi  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push 60h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_102C593  +
xor eax eax +
jmp loc_102C5E3  +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
push 14h  +
pop ecx  +
mov esi eax +
lea edi [ebx+8] +
movs   +
movzx eax word ptr [eax+56h] +
mov [ebx+58h] ax +
movzx eax ax +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
pop edi  +
mov [ebx+5Ch] eax +
pop esi  +
test eax eax +
jnz loc_102C5CD  +
push ebx  +
call sub_102C537  +
jmp loc_102C58F  +
mov ecx [ebp+arg_0] +
movzx edx word ptr [ecx+56h] +
push edx  +
push dword ptr [ecx+5Ch]  +
push eax  +
call memcpy  +
add esp 0Ch +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
push dword ptr [esi+10h]  +
mov ecx edi +
call sub_102C511  +
push 38h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jnz loc_102C61D  +
push 8  +
pop eax  +
jmp loc_102C64D  +
mov ecx [esi+18h] +
mov [eax+8] ecx +
mov ecx [esi+1Ch] +
mov [eax+0Ch] ecx +
mov ecx [esi+40h] +
mov [eax+10h] ecx +
mov ecx [esi+44h] +
mov [eax+14h] ecx +
mov ecx [ebp+arg_4] +
mov [eax+18h] esi +
mov [eax+1Ch] ecx +
mov ecx [edi+4] +
mov [eax] edi +
mov [eax+4] ecx +
mov [ecx] eax +
mov [edi+4] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov edi [ebp+arg_0] +
mov ecx [edi+4] +
jmp loc_102C67B  +
mov eax ecx +
cmp dword ptr [eax+24h] 0 +
mov ecx [ecx+4] +
ja loc_102C67B  +
cmp dword ptr [eax+20h] 0 +
jbe loc_102C6A5  +
cmp edi ecx +
jnz loc_102C66A  +
cmp [ebp+arg_4] 0 +
jnz loc_102C725  +
push 38h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jnz loc_102C6F7  +
push 8  +
pop eax  +
jmp loc_102C727  +
cmp [ebp+arg_4] 0 +
mov ecx [esi+18h] +
jnz loc_102C6CE  +
mov [eax+8] ecx +
mov ecx [esi+1Ch] +
mov [eax+0Ch] ecx +
mov ecx [esi+40h] +
mov [eax+10h] ecx +
mov ecx [esi+44h] +
mov [eax+14h] ecx +
mov ecx [ebp+arg_C] +
mov [eax+18h] esi +
mov [eax+1Ch] ecx +
jmp loc_102C725  +
mov [eax+20h] ecx +
mov ecx [esi+1Ch] +
mov [eax+24h] ecx +
mov ecx [esi+40h] +
mov [eax+28h] ecx +
mov ecx [esi+44h] +
mov [eax+2Ch] ecx +
mov ecx [ebp+arg_C] +
mov [eax+30h] esi +
mov [eax+34h] ecx +
mov eax [ebp+arg_10] +
inc dword ptr [edi+8]  +
inc dword ptr [eax+10h]  +
jmp loc_102C725  +
mov ecx [esi+18h] +
mov [eax+8] ecx +
mov ecx [esi+1Ch] +
mov [eax+0Ch] ecx +
mov ecx [esi+40h] +
mov [eax+10h] ecx +
mov ecx [esi+44h] +
mov [eax+14h] ecx +
mov ecx [ebp+arg_C] +
mov [eax+18h] esi +
mov [eax+1Ch] ecx +
mov ecx [edi+4] +
mov [eax] edi +
mov [eax+4] ecx +
mov [ecx] eax +
mov [edi+4] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_102C4DE  +
test [ebp+arg_0] 1 +
jz loc_102C74C  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_102C76B  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+0Ch]  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
cmp edi ebx +
jz loc_102C872  +
cmp [edi+4] ebx +
jz loc_102C872  +
mov [ebp+var_C] ebx +
cmp [edi] ebx +
jbe loc_102C858  +
mov [ebp+var_8] ebx +
push esi  +
mov esi [edi+4] +
add esi [ebp+var_8] +
mov [ebp+arg_0] ebx +
cmp [esi] ebx +
jbe loc_102C7E1  +
mov [ebp+var_4] ebx +
mov eax [esi+4] +
add eax [ebp+var_4] +
cmp [eax+18h] bl +
jz loc_102C7D3  +
mov eax [eax+8] +
cmp eax ebx +
jz loc_102C7D3  +
push eax  +
push ebx  +
push hHeap  +
call ds:HeapFree  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
add [ebp+var_4] 20h +
cmp eax [esi] +
jb loc_102C7B3  +
mov eax [esi+4] +
cmp eax ebx +
jz loc_102C7F6  +
push eax  +
push ebx  +
push hHeap  +
call ds:HeapFree  +
mov [ebp+arg_0] ebx +
cmp [esi+8] ebx +
jbe loc_102C830  +
mov [ebp+var_4] ebx +
mov eax [esi+0Ch] +
add eax [ebp+var_4] +
cmp [eax+18h] bl +
jz loc_102C821  +
mov eax [eax+8] +
cmp eax ebx +
jz loc_102C821  +
push eax  +
push ebx  +
push hHeap  +
call ds:HeapFree  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
add [ebp+var_4] 20h +
cmp eax [esi+8] +
jb loc_102C801  +
mov esi [esi+0Ch] +
cmp esi ebx +
jz loc_102C845  +
push esi  +
push ebx  +
push hHeap  +
call ds:HeapFree  +
inc [ebp+var_C]  +
mov eax [ebp+var_C] +
add [ebp+var_8] 10h +
cmp eax [edi] +
jb loc_102C7A3  +
pop esi  +
mov eax [edi+4] +
cmp eax ebx +
jz loc_102C86D  +
push eax  +
push ebx  +
push hHeap  +
call ds:HeapFree  +
mov [edi] ebx +
mov [edi+4] ebx +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
and [ebp+arg_0] 0 +
push ebx  +
push esi  +
mov esi [eax+8] +
cmp dword ptr [esi+68h] 0 +
push edi  +
jbe loc_102C8C7  +
lea edi [esi+74h] +
mov eax [edi] +
lea ebx [edi-4] +
test eax eax +
jz loc_102C8B9  +
add eax esi +
jz loc_102C8B9  +
push 0  +
push eax  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_104B901  +
test al al +
jnz loc_102C8D0  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
add edi 18h +
cmp eax [esi+68h] +
jb loc_102C898  +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
mov eax [ebp+arg_8] +
mov [eax] ebx +
mov al 1 +
jmp loc_102C8C9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov edx [eax+24h] +
mov ecx [eax+20h] +
sub esp 10h +
test edx edx +
ja loc_102C8FB  +
test ecx ecx +
jbe locret_102C9AF  +
sub ecx [eax+8] +
sbb edx [eax+0Ch] +
and dword ptr [ebp+var_8] 0 +
mov dword ptr [ebp+var_8+4] edx +
and dword ptr [ebp+var_8+4] 80000000h +
and edx 7FFFFFFFh +
mov dword ptr [ebp+var_10] ecx +
mov dword ptr [ebp+var_10+4] edx +
fild  [ebp+var_10] +
mov edx [ebp+arg_4] +
fild  [ebp+var_8] +
fchs   +
faddp st(1) st +
fdiv  ds:dbl_1002998 +
fstp  qword ptr [edx+8] +
mov ecx dword_1079A94 +
test ecx ecx +
jnz loc_102C93C  +
inc ecx  +
push esi  +
mov esi [eax+2Ch] +
sub esi [eax+14h] +
sub esi [eax+10h] +
add esi [eax+28h] +
imul esi dword_1079A80 +
mov [ebp+arg_0] esi +
fild  [ebp+arg_0] +
test esi esi +
jge loc_102C960  +
fadd  ds:dbl_10018C0 +
mov eax stru_1079A28.dwLowDateTime +
fadd  ds:dbl_1001660 +
sub eax SystemTimeAsFileTime.dwLowDateTime +
mov esi stru_1079A28.dwHighDateTime +
sbb esi SystemTimeAsFileTime.dwHighDateTime +
mov dword ptr [ebp+var_10] eax +
mov dword ptr [ebp+var_10+4] esi +
fild  [ebp+var_10] +
mov [ebp+arg_0] ecx +
fdiv  ds:dbl_10018C8 +
fdivp st(1) st +
fdiv  ds:dbl_1002990 +
fmul  ds:dbl_1001648 +
fild  [ebp+arg_0] +
test ecx ecx +
jge loc_102C9AA  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
pop esi  +
fstp  qword ptr [edx] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 828h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
and [ebp+var_828] 0 +
and [ebp+var_824] 0 +
push ebx  +
mov ebx [ebp+arg_8] +
mov [ebp+var_814] eax +
mov eax [ebp+arg_10] +
push esi  +
movzx esi word ptr [ebx] +
push edi  +
mov [ebp+var_818] eax +
xor eax eax +
lea edi [ebp+var_820] +
stos   +
stos   +
lea eax [esi+2] +
mov [ebp+var_805] 1 +
cmp eax 800h +
ja loc_102CA38  +
push esi  +
push dword ptr [ebx+4]  +
lea eax [ebp+var_804] +
push eax  +
call memcpy  +
shr esi 1 +
add esp 0Ch +
xor eax eax +
mov word ptr [ebp+esi*2+var_804] ax +
lea edi [ebp+var_804] +
jmp loc_102CA6F  +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jnz loc_102CA54  +
xor al al +
jmp loc_102CB52  +
movzx eax word ptr [ebx] +
push eax  +
push dword ptr [ebx+4]  +
push edi  +
call memcpy  +
movzx eax word ptr [ebx] +
shr eax 1 +
add esp 0Ch +
xor ecx ecx +
mov [edi+eax*2] cx +
mov esi [ebp+var_814] +
movzx ecx word ptr [esi+4] +
or [ebp+var_820] 0FFFFFFFFh +
mov eax edi +
cdq   +
mov [ebp+var_828] eax +
mov eax dword_10566D8 +
mov [ebp+var_824] edx +
mov eax [eax+680h] +
test cl 40h +
jz loc_102CAA3  +
push 40h  +
jmp loc_102CAAE  +
test cl 20h +
jnz loc_102CAAC  +
test eax eax +
ja loc_102CAAF  +
push 20h  +
pop eax  +
lea ecx [ebp+var_80C] +
push ecx  +
lea ecx [ebp+var_810] +
push ecx  +
lea ecx [ebp+var_828] +
push ecx  +
push 1  +
shr eax 3 +
push eax  +
push esi  +
call TdhGetPropertyOffsetAndSize  +
test eax eax +
jz loc_102CADD  +
mov [ebp+var_805] 0 +
jmp loc_102CB2F  +
movzx eax word ptr [esi+56h] +
mov edx [ebp+var_810] +
mov ecx [ebp+var_80C] +
add ecx edx +
cmp ecx eax +
jbe loc_102CAFB  +
sub eax edx +
mov [ebp+var_80C] eax +
mov ecx [ebp+arg_C] +
mov si [ecx+8] +
mov eax [ebp+var_818] +
mov [eax] si +
mov cx [ecx+0Ah] +
mov [eax+2] cx +
mov ecx [ebp+arg_4] +
mov esi [ecx+5Ch] +
add esi edx +
movzx edx word ptr [ebp+var_80C] +
mov [eax+8] esi +
mov [eax+10h] edx +
movzx ecx word ptr [ecx+0Ch] +
mov [eax+1Ch] ecx +
test edi edi +
jz loc_102CB4C  +
lea eax [ebp+var_804] +
cmp edi eax +
jz loc_102CB4C  +
push edi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
mov al [ebp+var_805] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 88h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
and [ebp+lpMem] 0 +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_8] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov [ebp+var_74] eax +
mov eax [ebp+arg_10] +
mov [ebp+var_70] eax +
xor eax eax +
lea edi [ebp+var_84] +
stos   +
lea edi [ebp+var_80] +
stos   +
stos   +
mov eax [ecx+8] +
push 14h  +
pop ecx  +
push [ebp+var_70]  +
mov [ebp+var_78] eax +
mov eax [ebx+5Ch] +
push [ebp+var_74]  +
lea esi [ebx+8] +
lea edi [ebp+var_6C] +
movs   +
mov [ebp+var_10] eax +
mov ax [ebx+58h] +
push edx  +
mov [ebp+var_16] ax +
push ebx  +
lea eax [ebp+var_6C] +
push eax  +
call sub_102C9B8  +
test al al +
jnz loc_102CBE5  +
xor al al +
jmp loc_102CC6A  +
mov esi [ebp+var_74] +
xor edi edi +
cmp esi edi +
jz loc_102CC68  +
test byte ptr [esi] 1 +
jnz loc_102CC68  +
mov eax [esi+0Ch] +
cmp eax edi +
jz loc_102CC68  +
mov ecx [ebp+var_78] +
add eax ecx +
push eax  +
lea eax [ebp+var_6C] +
push eax  +
call sub_1025190  +
cmp eax edi +
jz loc_102CC2E  +
push edi  +
push eax  +
movzx eax word ptr [ebx+0Ch] +
push esi  +
mov esi [ebp+var_70] +
push eax  +
push dword ptr [esi+10h]  +
lea eax [ebp+lpMem] +
push dword ptr [esi+8]  +
push eax  +
call sub_101F07B  +
test eax eax +
jz loc_102CC4B  +
cmp [ebp+lpMem] edi +
jz loc_102CBDE  +
push [ebp+lpMem]  +
push edi  +
push hHeap  +
call ds:HeapFree  +
jmp loc_102CBDE  +
xor eax eax +
inc eax  +
mov [esi] ax +
mov [esi+2] ax +
mov eax [ebp+lpMem] +
mov [esi+8] eax +
mov eax [ebp+var_80] +
mov [esi+10h] eax +
mov byte ptr [esi+18h] 1 +
mov al 1 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
push 4  +
pop ecx  +
xor ebx ebx +
lea edi [edx+18h] +
lea esi [eax+18h] +
cmps   +
pop edi  +
pop esi  +
pop ebx  +
jz loc_102CCA4  +
xor al al +
jmp loc_102CCB9  +
mov ecx 100h +
test [eax+4] cx +
jz loc_102CCBD  +
mov al [eax+2Dh] +
cmp al [edx+2Dh] +
jnz loc_102CCA0  +
mov al 1 +
pop ebp  +
retn 8  +
mov ax [eax+28h] +
cmp ax [edx+28h] +
jmp loc_102CCB5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
xor bl bl +
cmp [eax+20h] bl +
jz loc_102CD0F  +
cmp [ebp+arg_8] bl +
jz loc_102CCFA  +
mov dl [eax+15h] +
mov ecx [ebp+arg_4] +
cmp dl [ecx+5] +
jnz loc_102CD0F  +
mov cl [ecx+2] +
test cl cl +
jz loc_102CD0D  +
cmp [eax+12h] cl +
jnz loc_102CD0F  +
jmp loc_102CD0D  +
push [ebp+arg_C]  +
add eax 10h +
push [ebp+arg_4]  +
push eax  +
call sub_10254FF  +
test al al +
jz loc_102CD0F  +
mov bl 1 +
mov al bl +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movzx eax word ptr [ebp+arg_4] +
push ebx  +
push esi  +
movzx esi word ptr [ebp+arg_C] +
xor edx edx +
cmp [ebp+arg_10] dl +
push edi  +
mov dword ptr [ebp+arg_10] eax +
jz loc_102CD50  +
cmp eax esi +
mov ecx [ebp+arg_0] +
lea edi [eax+ecx-1] +
mov ecx [ebp+arg_8] +
lea ecx [esi+ecx-1] +
jle loc_102CD4A  +
mov dword ptr [ebp+arg_10] esi +
or [ebp+arg_4] 0FFFFFFFFh +
jmp loc_102CD64  +
cmp eax esi +
mov edi [ebp+arg_0] +
mov ecx [ebp+arg_8] +
jle loc_102CD5D  +
mov dword ptr [ebp+arg_10] esi +
mov [ebp+arg_4] 1 +
cmp dword ptr [ebp+arg_10] edx +
mov [ebp+arg_C] edx +
jle loc_102CD85  +
mov dl [edi] +
mov bl [ecx] +
cmp dl bl +
jnz loc_102CD8E  +
add edi [ebp+arg_4] +
add ecx [ebp+arg_4] +
inc [ebp+arg_C]  +
mov edx [ebp+arg_C] +
cmp edx dword ptr [ebp+arg_10] +
jl loc_102CD6C  +
sub eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
movzx ecx bl +
movzx eax dl +
sub eax ecx +
jmp loc_102CD87  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp byte ptr [esi+20h] 0 +
jnz loc_102CDB0  +
xor al al +
jmp loc_102CE24  +
mov al [esi+15h] +
cmp al 2 +
jz loc_102CDBF  +
cmp al 4 +
jz loc_102CDBF  +
cmp al 8 +
jnz loc_102CDAC  +
cmp byte ptr [ebp+arg_8] 0 +
jz loc_102CDC9  +
mov al 1 +
jmp loc_102CE24  +
mov eax [ebp+arg_4] +
movzx ecx byte ptr [eax+205h] +
and [ebp+arg_8] 0 +
shr ecx 4 +
and ecx 3 +
push ebx  +
push edi  +
jbe loc_102CE20  +
movzx edi word ptr [esi+10h] +
add eax 1E6h +
cmp [eax-2] di +
jnz loc_102CE15  +
mov dl [eax] +
cmp dl [esi+12h] +
jnz loc_102CE15  +
cmp [ebp+arg_C] 0 +
jz loc_102CE0E  +
mov dx [eax+2] +
xor ebx ebx +
cmp dx [esi+16h] +
setz bl  +
mov edx ebx +
jmp loc_102CE11  +
xor edx edx +
inc edx  +
test edx edx +
jnz loc_102CE29  +
inc [ebp+arg_8]  +
add eax 18h +
cmp [ebp+arg_8] ecx +
jb loc_102CDEA  +
xor al al +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 10h  +
mov al 1 +
jmp loc_102CE22  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
sub esp 10h +
cmp byte ptr [ecx+19h] 0 +
jz loc_102CE70  +
mov edx [ebp+arg_4] +
fld  qword ptr [edx+8] +
fcomp  qword ptr [ecx+8] +
fnstsw  ax +
test ah 5 +
jp loc_102CE58  +
xor eax eax +
inc eax  +
jmp locret_102CEA7  +
fld  qword ptr [edx+8] +
fcomp  qword ptr [ecx+8] +
fnstsw  ax +
test ah 41h +
jnz loc_102CE6C  +
mov eax 0FFFFFFFFh +
jmp locret_102CEA7  +
xor eax eax +
jmp locret_102CEA7  +
mov eax [ecx+8] +
mov cx [ecx+10h] +
mov [ebp+var_C] eax +
mov eax [ebp+arg_4] +
mov word ptr [ebp+var_10] cx +
mov word ptr [ebp+var_10+2] cx +
mov ecx [eax+8] +
mov ax [eax+10h] +
mov word ptr [ebp+var_8] ax +
mov word ptr [ebp+var_8+2] ax +
push 0  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_10] +
push eax  +
mov [ebp+var_4] ecx +
call ds:RtlCompareString  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_8] +
sub esp 10h +
push esi  +
push edi  +
shl ecx 4 +
add ecx eax +
mov esi ecx +
lea edi [ebp+var_10] +
movs   +
movs   +
movs   +
movs   +
shl edx 4 +
add eax edx +
mov esi eax +
mov edi ecx +
movs   +
movs   +
movs   +
movs   +
lea esi [ebp+var_10] +
mov edi eax +
movs   +
movs   +
movs   +
movs   +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_C] +
shl eax 4 +
mov eax [eax+ecx+4] +
shl esi 4 +
mov ecx [esi+ecx+4] +
shl edx 5 +
add ecx edx +
add eax edx +
push ecx  +
push eax  +
call sub_102CE32  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jz loc_102CF5E  +
push esi  +
mov esi edi +
shr esi 1 +
push esi  +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102CEF2  +
test eax eax +
jle loc_102CF5D  +
push edi  +
push esi  +
push [ebp+arg_4]  +
call sub_102CEB0  +
mov edi esi +
test esi esi +
jnz loc_102CF38  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
xor esi esi +
lea edi [esi+1] +
cmp edi [ebp+arg_8] +
ja loc_102CF8F  +
push esi  +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102CEF2  +
test eax eax +
jle loc_102CF8F  +
mov esi edi +
push esi  +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102CEF2  +
test eax eax +
jge loc_102CFB3  +
push esi  +
push ebx  +
push [ebp+arg_4]  +
call sub_102CEB0  +
mov ebx esi +
add esi esi +
cmp esi [ebp+arg_8] +
jbe loc_102CF74  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
xor edi edi +
inc edi  +
cmp esi edi +
jbe loc_102D000  +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102CF2A  +
inc edi  +
cmp edi esi +
jb loc_102CFD0  +
dec esi  +
jz loc_102D000  +
push esi  +
push 0  +
push [ebp+arg_4]  +
call sub_102CEB0  +
dec esi  +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102CF68  +
test esi esi +
ja loc_102CFE4  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
push dword ptr [eax+4]  +
push [ebp+arg_0]  +
call sub_102CFBF  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
mov eax [ecx] +
push esi  +
xor esi esi +
cmp ecx eax +
jz loc_102D092  +
test eax eax +
jz loc_102D092  +
mov edx eax +
cmp esi [ebp+arg_C] +
jz loc_102D04C  +
mov eax [eax] +
inc esi  +
cmp ecx eax +
jnz loc_102D03A  +
test edx edx +
jz loc_102D092  +
mov eax [edx+8] +
mov ecx [ebp+arg_0] +
shl eax 4 +
add eax [ecx+4] +
mov ecx [ebp+arg_10] +
mov eax [eax+4] +
shl ecx 5 +
add eax ecx +
cmp dword ptr [eax+10h] 0 +
jbe loc_102D078  +
cmp [ebp+arg_10] 0 +
jge loc_102D094  +
lea eax [edx+10h] +
jmp loc_102D094  +
cmp [ebp+arg_10] 0 +
jl loc_102D073  +
mov eax [edx+0Ch] +
mov edx [ebp+arg_4] +
mov edx [edx+4] +
shl eax 4 +
mov eax [eax+edx+4] +
add eax ecx +
jmp loc_102D094  +
xor eax eax +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_102D029  +
mov esi eax +
test esi esi +
jnz loc_102D0C2  +
xor eax eax +
jmp loc_102D0E1  +
push [ebp+arg_0]  +
push [ebp+arg_14]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_102D029  +
test eax eax +
jz loc_102D0BE  +
push eax  +
push esi  +
call sub_102CE32  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_10] +
test edi edi +
jz loc_102D125  +
push esi  +
mov esi edi +
shr esi 1 +
push esi  +
push edi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102D09E  +
test eax eax +
jle loc_102D124  +
push edi  +
push esi  +
push [ebp+arg_C]  +
call sub_1033EFA  +
mov edi esi +
test esi esi +
jnz loc_102D0F9  +
pop esi  +
pop edi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
xor esi esi +
lea edi [esi+1] +
cmp edi [ebp+arg_10] +
ja loc_102D15C  +
push esi  +
push edi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102D09E  +
test eax eax +
jle loc_102D15C  +
mov esi edi +
push esi  +
push ebx  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102D09E  +
test eax eax +
jge loc_102D186  +
push esi  +
push ebx  +
push [ebp+arg_C]  +
call sub_1033EFA  +
mov ebx esi +
add esi esi +
cmp esi [ebp+arg_10] +
jbe loc_102D13B  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+arg_10] +
inc esi  +
cmp edi esi +
jbe loc_102D1E1  +
push esi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102D0EB  +
inc esi  +
cmp esi edi +
jb loc_102D1A3  +
lea esi [edi-1] +
jmp loc_102D1DD  +
push esi  +
push 0  +
push [ebp+arg_C]  +
call sub_1033EFA  +
dec esi  +
push esi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102D12F  +
test esi esi +
ja loc_102D1BF  +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_C] +
mov eax [edx+8] +
mov ecx [ebp+arg_4] +
shl eax 4 +
add eax [ecx+4] +
mov ecx [ebp+arg_0] +
mov eax [eax+4] +
shl ecx 5 +
add eax ecx +
cmp dword ptr [eax+10h] 0 +
ja loc_102D223  +
mov eax [edx+0Ch] +
mov edx [ebp+arg_8] +
mov edx [edx+4] +
shl eax 4 +
mov eax [eax+edx+4] +
add eax ecx +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 30h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jz loc_102D251  +
mov ecx [ebp+arg_0] +
mov [eax+8] ecx +
mov ecx [ebp+arg_4] +
mov [eax+0Ch] ecx +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10566D8 +
mov ecx [ebp+arg_0] +
mov edx [eax+680h] +
mov eax [ecx+1Ch] +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
push 20h  +
pop ebx  +
test al 40h +
jz loc_102D282  +
push 40h  +
pop edx  +
jmp loc_102D28C  +
test al bl +
jnz loc_102D28A  +
test edx edx +
ja loc_102D28C  +
mov edx ebx +
mov esi [ebp+arg_4] +
movzx eax word ptr [esi] +
cmp eax 10h +
jg loc_102D483  +
jz loc_102D499  +
sub eax 3 +
cmp eax 9 +
ja loc_102D492  +
jmp ds:off_102D522[eax*4]  +
cmp byte ptr [ecx+19h] 0 +
jz loc_102D2C2  +
mov edi [ecx+8] +
mov ebx [ecx+0Ch] +
jmp loc_102D2CD  +
mov eax [ecx+8] +
movzx eax byte ptr [eax] +
cdq   +
mov edi eax +
mov ebx edx +
cmp byte ptr [esi+19h] 0 +
jz loc_102D2D8  +
mov al [esi+8] +
jmp loc_102D2DD  +
mov eax [esi+8] +
mov al [eax] +
movzx eax al +
push 0Ah  +
pop edx  +
push edx  +
mov [ecx] dx +
pop edx  +
mov [ecx+2] dx +
cdq   +
add eax edi +
adc edx ebx +
mov [ecx+8] eax +
mov [ecx+0Ch] edx +
jmp loc_102D514  +
cmp byte ptr [ecx+19h] 0 +
jz loc_102D30A  +
mov edi [ecx+8] +
mov ebx [ecx+0Ch] +
jmp loc_102D315  +
mov eax [ecx+8] +
movsx eax byte ptr [eax] +
cdq   +
mov edi eax +
mov ebx edx +
cmp byte ptr [esi+19h] 0 +
jz loc_102D320  +
mov al [ecx+8] +
jmp loc_102D325  +
mov eax [esi+8] +
mov al [eax] +
push 9  +
pop edx  +
push edx  +
movsx eax al +
jmp loc_102D2E4  +
cmp byte ptr [ecx+19h] 0 +
jz loc_102D33C  +
mov edi [ecx+8] +
mov ebx [ecx+0Ch] +
jmp loc_102D347  +
mov eax [ecx+8] +
movzx eax word ptr [eax] +
cdq   +
mov edi eax +
mov ebx edx +
cmp byte ptr [esi+19h] 0 +
jz loc_102D353  +
movzx eax word ptr [esi+8] +
jmp loc_102D359  +
mov eax [esi+8] +
movzx eax word ptr [eax] +
movzx eax ax +
jmp loc_102D2E0  +
cmp byte ptr [ecx+19h] 0 +
jz loc_102D36C  +
mov edi [ecx+8] +
mov ebx [ecx+0Ch] +
jmp loc_102D378  +
mov eax [ecx+8] +
movzx eax word ptr [eax] +
cwde   +
cdq   +
mov edi eax +
mov ebx edx +
cmp byte ptr [esi+19h] 0 +
jz loc_102D384  +
movzx eax word ptr [esi+8] +
jmp loc_102D38A  +
mov eax [esi+8] +
movzx eax word ptr [eax] +
push 9  +
pop edx  +
push edx  +
cwde   +
jmp loc_102D2E4  +
cmp byte ptr [ecx+19h] 0 +
jz loc_102D3A2  +
mov edi [ecx+8] +
mov ebx [ecx+0Ch] +
jmp loc_102D3AC  +
mov eax [ecx+8] +
mov eax [eax] +
cdq   +
mov edi eax +
mov ebx edx +
cmp byte ptr [esi+19h] 0 +
jz loc_102D3B7  +
mov esi [esi+8] +
jmp loc_102D3BC  +
mov eax [esi+8] +
mov esi [eax] +
push 9  +
pop eax  +
mov [ecx] ax +
mov [ecx+2] ax +
mov eax esi +
jmp loc_102D2EC  +
cmp byte ptr [ecx+19h] 0 +
jz loc_102D3DB  +
mov edx [ecx+8] +
mov edi [ecx+0Ch] +
jmp loc_102D3E3  +
mov eax [ecx+8] +
mov edx [eax] +
mov edi [eax+4] +
cmp byte ptr [esi+19h] 0 +
jz loc_102D3F1  +
mov eax [esi+8] +
mov esi [esi+0Ch] +
jmp loc_102D3F9  +
mov esi [esi+8] +
mov eax [esi] +
mov esi [esi+4] +
push 9  +
pop ebx  +
push ebx  +
jmp loc_102D4CD  +
cmp byte ptr [ecx+19h] 0 +
jz loc_102D40D  +
fld  qword ptr [ecx+8] +
jmp loc_102D418  +
mov eax [ecx+8] +
mov eax [eax] +
mov [ebp+arg_0] eax +
fld  [ebp+arg_0] +
cmp byte ptr [esi+19h] 0 +
jz loc_102D426  +
fld  dword ptr [esi+8] +
fstp  [ebp+arg_0] +
jmp loc_102D42E  +
mov eax [esi+8] +
mov eax [eax] +
mov [ebp+arg_0] eax +
fadd  [ebp+arg_0] +
push 0Ch  +
fstp  qword ptr [ecx+8] +
pop eax  +
mov [ecx] ax +
mov [ecx+2] ax +
jmp loc_102D514  +
cmp byte ptr [ecx+19h] 0 +
jz loc_102D451  +
fld  qword ptr [ecx+8] +
fstp  [ebp+var_10] +
jmp loc_102D45F  +
mov eax [ecx+8] +
mov edx [eax] +
mov eax [eax+4] +
mov dword ptr [ebp+var_10] edx +
mov dword ptr [ebp+var_10+4] eax +
cmp byte ptr [esi+19h] 0 +
jz loc_102D46D  +
fld  qword ptr [esi+8] +
fstp  [ebp+var_8] +
jmp loc_102D47B  +
mov esi [esi+8] +
mov eax [esi] +
mov dword ptr [ebp+var_8] eax +
mov eax [esi+4] +
mov dword ptr [ebp+var_8+4] eax +
fld  [ebp+var_8] +
fadd  [ebp+var_10] +
jmp loc_102D431  +
sub eax 14h +
jz loc_102D4E1  +
dec eax  +
jz loc_102D49D  +
sub eax 11Fh +
jz loc_102D499  +
xor al al +
jmp loc_102D51A  +
cmp edx ebx +
jz loc_102D4E1  +
cmp byte ptr [ecx+19h] 0 +
jz loc_102D4AB  +
mov edx [ecx+8] +
mov edi [ecx+0Ch] +
jmp loc_102D4B3  +
mov eax [ecx+8] +
mov edx [eax] +
mov edi [eax+4] +
cmp byte ptr [esi+19h] 0 +
jz loc_102D4C1  +
mov eax [esi+8] +
mov esi [esi+0Ch] +
jmp loc_102D4C9  +
mov esi [esi+8] +
mov eax [esi] +
mov esi [esi+4] +
push 0Ah  +
pop ebx  +
push ebx  +
add eax edx +
mov [ecx] bx +
pop ebx  +
adc esi edi +
mov [ecx+2] bx +
mov [ecx+8] eax +
mov [ecx+0Ch] esi +
jmp loc_102D514  +
cmp byte ptr [ecx+19h] 0 +
mov eax [ecx+8] +
jz loc_102D4EF  +
mov edx [ecx+0Ch] +
jmp loc_102D4F3  +
mov eax [eax] +
xor edx edx +
cmp byte ptr [esi+19h] 0 +
mov esi [esi+8] +
jnz loc_102D4FE  +
mov esi [esi] +
push 0Ah  +
pop edi  +
mov [ecx] di +
mov [ecx+2] di +
xor edi edi +
add esi eax +
adc edi edx +
mov [ecx+0Ch] edi +
mov [ecx+8] esi +
mov byte ptr [ecx+19h] 1 +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax stru_1079A28.dwLowDateTime +
sub eax SystemTimeAsFileTime.dwLowDateTime +
mov ecx stru_1079A28.dwHighDateTime +
sbb ecx SystemTimeAsFileTime.dwHighDateTime +
mov dword ptr [ebp+var_8] eax +
mov eax dword_10566D8 +
mov edx [eax+680h] +
mov dword ptr [ebp+var_8+4] ecx +
fild  [ebp+var_8] +
mov ecx [ebp+arg_0] +
mov eax [ecx+1Ch] +
fdiv  ds:dbl_10018C8 +
push esi  +
movzx esi word ptr [ecx] +
fldz   +
fld  st +
fst  [ebp+var_8] +
test al 40h +
jz loc_102D5A1  +
push 40h  +
jmp loc_102D5AB  +
test al 20h +
jnz loc_102D5A9  +
test edx edx +
ja loc_102D5AC  +
push 20h  +
pop edx  +
mov eax [ebp+arg_8] +
mov al [eax+0F0h] +
and al 3 +
mov byte ptr [ebp+arg_0+3] al +
jz loc_102D7AC  +
movzx eax si +
cmp eax 10h +
jg loc_102D6A0  +
jz loc_102D6AF  +
sub eax 3 +
cmp eax 9 +
ja loc_102D663  +
jmp ds:off_102D7B7[eax*4]  +
mov eax [ecx+8] +
movzx eax byte ptr [eax] +
jmp loc_102D5FB  +
mov eax [ecx+8] +
movsx eax byte ptr [eax] +
jmp loc_102D60A  +
mov eax [ecx+8] +
movzx eax word ptr [eax] +
cdq   +
mov esi eax +
jmp loc_102D6D1  +
mov eax [ecx+8] +
movzx eax word ptr [eax] +
cwde   +
cdq   +
mov dword ptr [ebp+var_8] eax +
or eax edx +
mov dword ptr [ebp+var_8+4] edx +
jz loc_102D663  +
cmp byte ptr [ebp+arg_0+3] 1 +
jnz loc_102D760  +
cmp [ebp+arg_4] 0 +
fstp  st +
fstp  st(1) +
jbe loc_102D799  +
fstp  st +
fild  [ebp+var_8] +
jmp loc_102D711  +
mov eax [ecx+8] +
mov eax [eax] +
jmp loc_102D60A  +
cmp byte ptr [ecx+19h] 0 +
jz loc_102D64C  +
mov eax [ecx+8] +
mov edx [ecx+0Ch] +
jmp loc_102D60B  +
mov edx [ecx+8] +
mov eax [edx] +
mov edx [edx+4] +
jmp loc_102D60B  +
mov eax [ecx+8] +
fstp  st +
mov eax [eax] +
mov [ebp+arg_8] eax +
fld  [ebp+arg_8] +
cmp byte ptr [ebp+arg_0+3] 1 +
jnz loc_102D77C  +
cmp [ebp+arg_4] 0 +
fstp  st(2) +
jbe loc_102D797  +
fstp  st +
jmp loc_102D711  +
cmp byte ptr [ecx+19h] 0 +
fstp  st +
jz loc_102D68D  +
fld  qword ptr [ecx+8] +
jmp loc_102D663  +
mov eax [ecx+8] +
mov edx [eax] +
mov eax [eax+4] +
mov dword ptr [ebp+var_8] edx +
mov dword ptr [ebp+var_8+4] eax +
fld  [ebp+var_8] +
jmp loc_102D663  +
sub eax 14h +
jz loc_102D6CA  +
dec eax  +
jz loc_102D6B4  +
sub eax 11Fh +
jnz loc_102D663  +
cmp edx 20h +
jz loc_102D6CA  +
cmp byte ptr [ecx+19h] 0 +
jz loc_102D6C2  +
mov esi [ecx+8] +
mov edx [ecx+0Ch] +
jmp loc_102D6D1  +
mov eax [ecx+8] +
mov edx [eax+4] +
jmp loc_102D6CF  +
mov eax [ecx+8] +
xor edx edx +
mov esi [eax] +
mov eax esi +
or eax edx +
jz loc_102D663  +
cmp byte ptr [ebp+arg_0+3] 1 +
jnz loc_102D725  +
cmp [ebp+arg_4] 0 +
fstp  st +
fstp  st(1) +
jbe loc_102D799  +
mov dword ptr [ebp+var_8+4] edx +
fstp  st +
and dword ptr [ebp+var_8+4] 80000000h +
and edx 7FFFFFFFh +
and dword ptr [ebp+var_8] 0 +
mov dword ptr [ebp+var_10] esi +
mov dword ptr [ebp+var_10+4] edx +
fild  [ebp+var_10] +
fild  [ebp+var_8] +
fchs   +
faddp st(1) st +
mov eax [ebp+arg_4] +
fild  [ebp+arg_4] +
test eax eax +
jge loc_102D721  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
jmp loc_102D799  +
cmp byte ptr [ebp+arg_0+3] 2 +
jnz loc_102D795  +
fstp  st +
fld  st +
fucomp  st(2) +
fnstsw  ax +
test ah 44h +
jnp loc_102D797  +
mov dword ptr [ebp+var_8+4] edx +
fstp  st +
and dword ptr [ebp+var_8+4] 80000000h +
and edx 7FFFFFFFh +
and dword ptr [ebp+var_8] 0 +
mov dword ptr [ebp+var_10] esi +
mov dword ptr [ebp+var_10+4] edx +
fild  [ebp+var_10] +
fild  [ebp+var_8] +
fchs   +
faddp st(1) st +
jmp loc_102D778  +
cmp byte ptr [ebp+arg_0+3] 2 +
jnz loc_102D795  +
fstp  st +
fld  st +
fucomp  st(2) +
fnstsw  ax +
test ah 44h +
jnp loc_102D797  +
fstp  st +
fild  [ebp+var_8] +
fdivrp st(1) st +
jmp loc_102D799  +
cmp byte ptr [ebp+arg_0+3] 2 +
jnz loc_102D795  +
fld  st(1) +
fucomp  st(3) +
fnstsw  ax +
test ah 44h +
jp loc_102D791  +
fstp  st +
jmp loc_102D797  +
fstp  st(1) +
jmp loc_102D778  +
fstp  st(1) +
fstp  st(1) +
push 0Ch  +
fstp  qword ptr [ecx+8] +
pop eax  +
mov [ecx] ax +
mov [ecx+2] ax +
mov byte ptr [ecx+19h] 1 +
jmp loc_102D7B2  +
fstp  st(1) +
fstp  st +
fstp  st +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_8] +
mov eax [ecx+8] +
mov edx [ebp+arg_0] +
shl eax 4 +
add eax [edx+4] +
mov edx [ebp+arg_C] +
mov eax [eax+4] +
shl edx 5 +
push esi  +
lea esi [eax+edx] +
cmp dword ptr [esi+10h] 0 +
push edi  +
ja loc_102D81E  +
mov eax [ecx+0Ch] +
mov esi [ebp+arg_4] +
mov esi [esi+4] +
shl eax 4 +
mov esi [eax+esi+4] +
add esi edx +
cmp byte ptr [esi+19h] 0 +
push dword ptr [esi+10h]  +
mov edi [ebp+arg_10] +
jz loc_102D830  +
lea eax [esi+8] +
push eax  +
jmp loc_102D833  +
push dword ptr [esi+8]  +
mov eax [ecx+18h] +
add eax [edi] +
push eax  +
call memcpy  +
mov eax [esi+10h] +
add esp 0Ch +
add [edi] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [eax] +
push edi  +
cmp eax esi +
jz loc_102D935  +
mov edi [ebp+dwBytes] +
jmp loc_102D871  +
mov esi [ebp+var_8] +
mov eax [esi] +
mov [ebp+var_8] eax +
xor eax eax +
mov [ebp+dwBytes] eax +
mov [ebp+var_4] eax +
cmp [edi+14h] eax +
jbe loc_102D8E1  +
mov eax [esi+8] +
mov ecx [ebp+arg_4] +
mov ebx [edi+18h] +
shl eax 4 +
add eax [ecx+4] +
mov eax [eax+4] +
mov [ebp+var_C] eax +
mov eax [ebx] +
mov ecx [ebp+var_C] +
shl eax 5 +
mov ecx [ecx+eax+30h] +
test ecx ecx +
jbe loc_102D8AF  +
lea eax [ebp+dwBytes] +
push eax  +
push ecx  +
jmp loc_102D8C7  +
mov edx [ebp+arg_8] +
mov edx [edx+4] +
lea ecx [ebp+dwBytes] +
push ecx  +
mov ecx [esi+0Ch] +
shl ecx 4 +
mov ecx [ecx+edx+4] +
push dword ptr [ecx+eax+30h]  +
push [ebp+dwBytes]  +
call sub_104C08B  +
test eax eax +
jl loc_102D93E  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
add ebx 4 +
cmp eax [edi+14h] +
jb loc_102D898  +
mov eax [ebp+dwBytes] +
push eax  +
push 8  +
mov [esi+20h] eax +
push hHeap  +
call ds:HeapAlloc  +
xor ebx ebx +
mov [esi+18h] eax +
cmp eax ebx +
jz loc_102D93E  +
mov byte ptr [esi+28h] 1 +
mov [ebp+dwBytes] ebx +
cmp [edi+14h] ebx +
jbe loc_102D929  +
lea eax [ebp+dwBytes] +
push eax  +
mov eax [edi+18h] +
mov eax [eax+ebx*4] +
inc eax  +
push eax  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_102D7E4  +
inc ebx  +
cmp ebx [edi+14h] +
jb loc_102D90B  +
mov eax [ebp+var_8] +
cmp [ebp+arg_C] eax +
jnz loc_102D86E  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
xor al al +
jmp loc_102D937  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_8] +
mov eax [edx+8] +
mov ecx [ebp+arg_0] +
shl eax 4 +
add eax [ecx+4] +
mov ecx [ebp+arg_C] +
test ecx ecx +
jge loc_102D967  +
lea eax [edx+10h] +
jmp loc_102D987  +
mov eax [eax+4] +
shl ecx 5 +
add eax ecx +
cmp dword ptr [eax+10h] 0 +
ja loc_102D987  +
mov eax [edx+0Ch] +
mov edx [ebp+arg_4] +
mov edx [edx+4] +
shl eax 4 +
mov eax [eax+edx+4] +
add eax ecx +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_8] +
mov ecx [ebx] +
and [ebp+arg_8] 0 +
cmp dword ptr [ebx+4] 0 +
mov [ebp+var_4] ecx +
jbe loc_102DA0F  +
mov edx [ebp+arg_C] +
shl edx 5 +
push esi  +
mov [ebp+arg_C] edx +
push edi  +
mov eax [ecx+8] +
mov esi [ebp+arg_0] +
shl eax 4 +
add eax [esi+4] +
mov eax [eax+4] +
lea esi [eax+edx] +
cmp dword ptr [esi+10h] 0 +
ja loc_102D9DE  +
mov eax [ecx+0Ch] +
mov ecx [ebp+arg_4] +
mov ecx [ecx+4] +
shl eax 4 +
mov esi [eax+ecx+4] +
add esi edx +
cmp [ebp+arg_8] 0 +
jnz loc_102D9EE  +
mov edi [ebp+arg_14] +
push 8  +
pop ecx  +
movs   +
jmp loc_102D9FA  +
push esi  +
push [ebp+arg_14]  +
call sub_102D25A  +
mov edx [ebp+arg_C] +
mov eax [ebp+var_4] +
inc [ebp+arg_8]  +
mov ecx [eax] +
mov eax [ebp+arg_8] +
mov [ebp+var_4] ecx +
cmp eax [ebx+4] +
jb loc_102D9B4  +
pop edi  +
pop esi  +
push [ebp+arg_10]  +
push dword ptr [ebx+4]  +
push [ebp+arg_14]  +
call sub_102D54F  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
push ebx  +
push esi  +
push edi  +
xor eax eax +
mov word ptr [ebp+var_44] ax +
push 7  +
pop ecx  +
lea edi [ebp+var_44+2] +
stos   +
mov ecx [ebp+arg_8] +
stos   +
mov eax [ebp+arg_10] +
mov eax [eax] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
mov eax [ebp+arg_C] +
shl ebx 4 +
add ebx [ecx+4] +
shl esi 4 +
add esi [eax+4] +
push 6  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_24] +
stos   +
mov eax [ebp+arg_4] +
mov edi [eax] +
mov [ebp+var_8] 1 +
mov [ebp+var_C] esi +
cmp eax edi +
jz loc_102DB7D  +
mov [ebp+var_4] 20h +
jmp loc_102DA8C  +
mov esi [ebp+var_C] +
lea eax [edi+0Ch] +
push eax  +
push offset aDataNameWz  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [edi+100h] 8 +
jnz loc_102DAB6  +
push [ebp+lpBuffer]  +
push offset aVisibleFalse  +
call sub_1023CCF  +
push [ebp+lpBuffer]  +
push offset asc_10029C8  +
call sub_1023CCF  +
test byte ptr [edi+101h] 10h +
jz loc_102DAE6  +
mov eax [ebx+4] +
mov ecx [ebp+var_4] +
add eax ecx +
cmp dword ptr [eax+10h] 0 +
jbe loc_102DADE  +
mov esi eax +
jmp loc_102DAFF  +
mov esi [esi+4] +
add esi [ebp+var_4] +
jmp loc_102DAFF  +
lea eax [ebp+var_44] +
push eax  +
push edi  +
push [ebp+var_8]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
call sub_102D990  +
lea esi [ebp+var_44] +
push 0  +
push offset aSysAggregateco  +
push dword ptr [edi+64h]  +
push dword ptr [edi+60h]  +
call sub_104B901  +
test al al +
jz loc_102DB1E  +
mov eax [ebp+arg_10] +
mov eax [eax+4] +
mov [esi+8] eax +
cmp byte ptr [esi+19h] 0 +
lea eax [esi+8] +
jnz loc_102DB2A  +
mov eax [esi+8] +
mov cx [esi] +
mov [ebp+var_1C] cx +
movzx ecx word ptr [edi+0FCh] +
xor edx edx +
cmp dx cx +
jnz loc_102DB43  +
mov cx [esi+2] +
push 0  +
mov [ebp+var_1A] cx +
lea ecx [ebp+var_24] +
push ecx  +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+10h]  +
push eax  +
push 1  +
push [ebp+lpBuffer]  +
call sub_101F051  +
push [ebp+lpBuffer]  +
push offset aData  +
call sub_1023CCF  +
mov edi [edi] +
inc [ebp+var_8]  +
add [ebp+var_4] 20h +
cmp [ebp+arg_4] edi +
jnz loc_102DA89  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push esi  +
mov esi [ebp+arg_10] +
mov edx [esi] +
push edi  +
xor eax eax +
and [ebp+var_8] eax +
push 6  +
pop ecx  +
lea edi [ebp+var_28] +
mov [ebp+var_10] edx +
stos   +
cmp [esi+4] eax +
jbe loc_102DCBB  +
push ebx  +
mov edi [edx+8] +
mov eax [ebp+arg_8] +
mov ebx [edx+0Ch] +
push [ebp+lpBuffer]  +
shl edi 4 +
add edi [eax+4] +
mov eax [ebp+arg_C] +
shl ebx 4 +
add ebx [eax+4] +
push offset aItem  +
call sub_1023CCF  +
mov eax [ebp+arg_4] +
mov esi [eax] +
cmp eax esi +
jz loc_102DC93  +
and [ebp+var_4] 0 +
lea eax [esi+0Ch] +
push eax  +
push offset aDataNameWz  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+100h] 8 +
jnz loc_102DC12  +
push [ebp+lpBuffer]  +
push offset aVisibleFalse  +
call sub_1023CCF  +
push [ebp+lpBuffer]  +
push offset asc_10029C8  +
call sub_1023CCF  +
mov eax [edi+0Ch] +
mov ecx [ebp+var_4] +
add eax ecx +
cmp dword ptr [eax+10h] 0 +
ja loc_102DC32  +
mov eax [ebx+0Ch] +
add eax ecx +
cmp byte ptr [eax+19h] 0 +
lea ecx [eax+8] +
jnz loc_102DC3E  +
mov ecx [eax+8] +
mov [ebp+var_C] ecx +
mov cx [eax] +
mov [ebp+var_20] cx +
movzx ecx word ptr [esi+0FCh] +
xor edx edx +
cmp dx cx +
jnz loc_102DC5A  +
mov cx [eax+2] +
push 0  +
mov [ebp+var_1E] cx +
lea ecx [ebp+var_28] +
push ecx  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+10h]  +
push [ebp+var_C]  +
push 1  +
push [ebp+lpBuffer]  +
call sub_101F051  +
push [ebp+lpBuffer]  +
push offset aData  +
call sub_1023CCF  +
mov esi [esi] +
add [ebp+var_4] 20h +
cmp [ebp+arg_4] esi +
jnz loc_102DBE8  +
push [ebp+lpBuffer]  +
push offset aItem_0  +
call sub_1023CCF  +
mov eax [ebp+var_10] +
inc [ebp+var_8]  +
mov edx [eax] +
mov eax [ebp+arg_10] +
mov ecx [ebp+var_8] +
mov [ebp+var_10] edx +
cmp ecx [eax+4] +
jb loc_102DBB2  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+lpBuffer] +
push edi  +
push offset aItem  +
call sub_1023CCF  +
push [ebp+arg_10]  +
mov esi [ebp+arg_4] +
push [ebp+arg_C]  +
lea eax [esi+8] +
push [ebp+arg_8]  +
push eax  +
push edi  +
call sub_102DA27  +
test byte ptr [esi+205h] 4 +
jz loc_102DD10  +
push [ebp+arg_10]  +
add esi 1B8h +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push esi  +
push edi  +
call sub_102DB89  +
push edi  +
push offset aItem_0  +
call sub_1023CCF  +
pop edi  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+dwBytes] +
push esi  +
xor esi esi +
cmp dword ptr [ebx+14h] 1 +
push edi  +
mov edi [ebp+arg_10] +
mov [ebp+var_4] esi +
jbe loc_102DD66  +
push edi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push ebx  +
call sub_102D851  +
test al al +
jnz loc_102DD60  +
push edi  +
call sub_10245E8  +
xor al al +
jmp loc_102DE29  +
or [ebp+dwBytes] 0FFFFFFFFh +
jmp loc_102DD6D  +
mov eax [ebx+1Ch] +
inc eax  +
mov [ebp+dwBytes] eax +
push [ebp+arg_14]  +
push edi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+dwBytes]  +
call sub_102D192  +
mov eax [edi] +
and [ebp+arg_14] esi +
cmp edi eax +
jz loc_102DE27  +
jmp loc_102DD91  +
mov eax [ebp+var_8] +
push [ebp+dwBytes]  +
mov edi eax +
mov eax [eax] +
push edi  +
push [ebp+arg_C]  +
mov [ebp+var_8] eax +
push [ebp+arg_8]  +
test esi esi +
jnz loc_102DDB5  +
lea esi [ebp+var_10] +
mov [ebp+var_10] edi +
mov [ebp+var_C] 1 +
jmp loc_102DE03  +
call sub_102D947  +
push eax  +
push [ebp+var_4]  +
call sub_102CE32  +
test eax eax +
jnz loc_102DDCC  +
inc dword ptr [esi+4]  +
jmp loc_102DE0B  +
push esi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push ebx  +
push [ebp+lpBuffer]  +
call sub_102DCC6  +
inc [ebp+arg_14]  +
test byte ptr [ebx+205h] 8 +
jz loc_102DDF0  +
mov eax [ebp+arg_14] +
cmp eax [ebx+70h] +
jnb loc_102DE27  +
push [ebp+dwBytes]  +
mov [esi] edi +
push edi  +
push [ebp+arg_C]  +
mov dword ptr [esi+4] 1 +
push [ebp+arg_8]  +
call sub_102D947  +
mov [ebp+var_4] eax +
mov eax [ebp+var_8] +
cmp [ebp+arg_10] eax +
jnz loc_102DD8E  +
push esi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push ebx  +
push [ebp+lpBuffer]  +
call sub_102DCC6  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
mov edx [ebp+arg_4] +
push ebx  +
push edi  +
xor eax eax +
mov word ptr [ebp+var_30] ax +
push 7  +
pop ecx  +
lea edi [ebp+var_30+2] +
stos   +
stos   +
mov eax [ebp+arg_C] +
mov ecx [eax] +
mov eax [ecx+8] +
mov ecx [ecx+0Ch] +
shl eax 4 +
add eax [edx+4] +
mov edx [ebp+arg_8] +
shl ecx 4 +
add ecx [edx+4] +
mov edx [ebp+arg_0] +
mov ebx [edx] +
mov [ebp+var_4] 1 +
mov [ebp+var_C] eax +
mov [ebp+var_10] ecx +
cmp edx ebx +
jz loc_102DEEF  +
push esi  +
push 20h  +
pop edi  +
mov [ebp+var_8] edi +
jmp loc_102DE94  +
mov eax [ebp+var_C] +
mov ecx [ebp+var_10] +
mov edi [ebp+var_8] +
mov edx [ebp+var_4] +
mov esi [ebp+arg_10] +
cmp edx [esi] +
jnb loc_102DEEE  +
test byte ptr [ebx+101h] 10h +
jz loc_102DEBA  +
mov eax [eax+4] +
lea esi [eax+edi] +
cmp dword ptr [esi+10h] 0 +
ja loc_102DED1  +
mov esi [ecx+4] +
add esi edi +
jmp loc_102DED1  +
lea eax [ebp+var_30] +
push eax  +
push ebx  +
push edx  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_102D990  +
lea esi [ebp+var_30] +
mov eax [ebp+arg_10] +
mov eax [eax+4] +
inc [ebp+var_4]  +
add [ebp+var_8] 20h +
push 8  +
lea edi [eax+edi-20h] +
pop ecx  +
movs   +
mov ebx [ebx] +
cmp [ebp+arg_0] ebx +
jnz loc_102DE8B  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_14] +
push esi  +
push edi  +
mov edi [ebp+arg_10] +
mov eax [edi+4] +
imul eax [ebp+arg_4] +
mov esi [edi] +
lea ecx [ebp+dwBytes] +
push ecx  +
push 20h  +
pop ecx  +
mov [ebx+8] eax +
mul  ecx +
push edx  +
push eax  +
mov [ebp+var_10] esi +
call sub_101B8F5  +
test eax eax +
jl loc_102DF48  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
xor ecx ecx +
mov [ebx+0Ch] eax +
cmp eax ecx +
jnz loc_102DF4F  +
xor al al +
jmp loc_102DFE0  +
mov [ebp+dwBytes] ecx +
cmp [edi+4] ecx +
jbe loc_102DFDE  +
mov eax [ebp+arg_4] +
shl eax 5 +
mov [ebp+var_8] ecx +
mov [ebp+var_14] eax +
mov edx [esi+8] +
mov eax [ebp+arg_8] +
mov ebx [esi+0Ch] +
mov ecx [ebp+arg_0] +
shl edx 4 +
add edx [eax+4] +
mov eax [ebp+arg_C] +
shl ebx 4 +
add ebx [eax+4] +
mov eax [ecx] +
cmp ecx eax +
jz loc_102DFC5  +
mov ecx [ebp+var_8] +
and [ebp+arg_4] 0 +
mov [ebp+var_4] ecx +
mov esi [edx+0Ch] +
mov ecx [ebp+arg_4] +
add esi ecx +
cmp dword ptr [esi+10h] 0 +
ja loc_102DFA5  +
mov esi [ebx+0Ch] +
add esi ecx +
mov ecx [ebp+arg_14] +
mov edi [ecx+0Ch] +
add edi [ebp+var_4] +
add [ebp+arg_4] 20h +
add [ebp+var_4] 20h +
push 8  +
pop ecx  +
movs   +
mov eax [eax] +
cmp [ebp+arg_0] eax +
jnz loc_102DF92  +
mov edi [ebp+arg_10] +
mov eax [ebp+var_10] +
mov esi [eax] +
mov eax [ebp+var_14] +
inc [ebp+dwBytes]  +
add [ebp+var_8] eax +
mov eax [ebp+dwBytes] +
mov [ebp+var_10] esi +
cmp eax [edi+4] +
jb loc_102DF67  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_8] +
shl esi 5 +
add esi ecx +
cmp eax 1 +
jb loc_102E036  +
shl eax 5 +
lea eax [eax+ecx-20h] +
mov eax [eax+8] +
push edi  +
mov edi [ebp+arg_C] +
add eax [edi] +
cmp byte ptr [esi+19h] 0 +
push dword ptr [esi+10h]  +
jz loc_102E024  +
lea ecx [esi+8] +
push ecx  +
jmp loc_102E027  +
push dword ptr [esi+8]  +
push eax  +
call memcpy  +
mov eax [esi+10h] +
add esp 0Ch +
add [edi] eax +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_4] +
push ebx  +
xor ecx ecx +
push esi  +
push edi  +
mov [ebp+var_C] ecx +
cmp [eax] ecx +
jbe loc_102E128  +
mov ebx [ebp+arg_0] +
mov [ebp+var_8] ecx +
jmp loc_102E065  +
xor ecx ecx +
mov eax [ebp+arg_4] +
mov esi [eax+4] +
add esi [ebp+var_8] +
mov eax [esi] +
mov [ebp+var_10] eax +
cmp eax 1 +
jb loc_102E131  +
mov [ebp+dwBytes] ecx +
mov [ebp+arg_0] ecx +
cmp [ebx+14h] ecx +
jbe loc_102E0B8  +
mov edi [ebx+18h] +
mov ecx [edi] +
lea eax [ebp+dwBytes] +
push eax  +
mov eax [esi+4] +
shl ecx 5 +
push dword ptr [ecx+eax+10h]  +
push [ebp+dwBytes]  +
call sub_104C08B  +
test eax eax +
jl loc_102E131  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
add edi 4 +
cmp eax [ebx+14h] +
jb loc_102E08A  +
mov eax [ebp+dwBytes] +
mov edi [ebp+var_10] +
mov ecx [esi+4] +
push eax  +
shl edi 5 +
push 8  +
mov [ecx+edi-10h] eax +
push hHeap  +
call ds:HeapAlloc  +
mov ecx [esi+4] +
mov [ecx+edi-18h] eax +
mov ecx [esi+4] +
xor eax eax +
cmp [ecx+edi-18h] eax +
jz loc_102E131  +
mov byte ptr [ecx+edi-8] 1 +
xor edi edi +
mov [ebp+arg_0] eax +
cmp [ebx+14h] eax +
jbe loc_102E113  +
lea eax [ebp+arg_0] +
push eax  +
mov eax [ebx+18h] +
push dword ptr [eax+edi*4]  +
push [ebp+var_10]  +
push dword ptr [esi+4]  +
call sub_102DFEC  +
inc edi  +
cmp edi [ebx+14h] +
jb loc_102E0F8  +
inc [ebp+var_C]  +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_C] +
add [ebp+var_8] 10h +
cmp ecx [eax] +
jb loc_102E063  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
xor al al +
jmp loc_102E12A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
cmp dword ptr [ebx+4] 0 +
jbe loc_102E194  +
mov eax [ebp+arg_8] +
shl eax 5 +
push esi  +
mov [ebp+arg_4] eax +
push edi  +
mov eax [ebx] +
add eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov ecx [ecx+4] +
shl eax 4 +
mov esi [eax+ecx+4] +
add esi [ebp+arg_4] +
cmp [ebp+var_4] 0 +
jnz loc_102E17E  +
mov edi [ebp+arg_10] +
push 8  +
pop ecx  +
movs   +
jmp loc_102E187  +
push esi  +
push [ebp+arg_10]  +
call sub_102D25A  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebx+4] +
jb loc_102E159  +
pop edi  +
pop esi  +
push [ebp+arg_C]  +
push dword ptr [ebx+4]  +
push [ebp+arg_10]  +
call sub_102D54F  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
and [ebp+var_4] 0 +
push edi  +
xor eax eax +
push 7  +
mov word ptr [ebp+var_40] ax +
pop ecx  +
lea edi [ebp+var_40+2] +
stos   +
stos   +
push 6  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_20] +
stos   +
mov eax [ebp+arg_4] +
mov edi [eax] +
cmp eax edi +
jz loc_102E2CE  +
and [ebp+var_8] 0 +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
lea eax [edi+0Ch] +
push eax  +
push offset aDataNameWz  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [edi+100h] 8 +
jnz loc_102E213  +
push [ebp+lpBuffer]  +
push offset aVisibleFalse  +
call sub_1023CCF  +
push [ebp+lpBuffer]  +
push offset asc_10029C8  +
call sub_1023CCF  +
test byte ptr [edi+101h] 10h +
jz loc_102E23D  +
mov eax [ebx] +
mov ecx [ebp+arg_8] +
mov ecx [ecx+4] +
shl eax 4 +
mov esi [eax+ecx+4] +
add esi [ebp+var_8] +
jmp loc_102E251  +
lea eax [ebp+var_40] +
push eax  +
push edi  +
push [ebp+var_4]  +
push ebx  +
push [ebp+arg_8]  +
call sub_102E13A  +
lea esi [ebp+var_40] +
push 0  +
push offset aSysAggregateco  +
push dword ptr [edi+64h]  +
push dword ptr [edi+60h]  +
call sub_104B901  +
test al al +
jz loc_102E26D  +
mov eax [ebx+4] +
mov [esi+8] eax +
cmp byte ptr [esi+19h] 0 +
lea ecx [esi+8] +
jnz loc_102E279  +
mov ecx [esi+8] +
mov ax [esi] +
mov [ebp+var_18] ax +
movzx eax word ptr [edi+0FCh] +
xor edx edx +
cmp dx ax +
jnz loc_102E292  +
mov ax [esi+2] +
push 0  +
mov [ebp+var_16] ax +
lea eax [ebp+var_20] +
push eax  +
push dword ptr [esi+1Ch]  +
push dword ptr [esi+10h]  +
push ecx  +
push 1  +
push [ebp+lpBuffer]  +
call sub_101F051  +
push [ebp+lpBuffer]  +
push offset aData  +
call sub_1023CCF  +
mov edi [edi] +
inc [ebp+var_4]  +
add [ebp+var_8] 20h +
cmp [ebp+arg_4] edi +
jnz loc_102E1E9  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push edi  +
push 6  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_1C] +
stos   +
mov eax [ebp+arg_C] +
xor ebx ebx +
mov [ebp+var_4] ebx +
cmp [eax+4] ebx +
jbe loc_102E3DB  +
mov edi [ebp+lpBuffer] +
push esi  +
push edi  +
push offset aItem  +
call sub_1023CCF  +
mov eax [ebp+arg_4] +
mov esi [eax] +
cmp eax esi +
jz loc_102E3BD  +
mov [ebp+lpBuffer] ebx +
lea eax [esi+0Ch] +
push eax  +
push offset aDataNameWz  +
push edi  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+100h] 8 +
jnz loc_102E342  +
push edi  +
push offset aVisibleFalse  +
call sub_1023CCF  +
push edi  +
push offset asc_10029C8  +
call sub_1023CCF  +
mov eax [ebp+arg_C] +
mov eax [eax] +
add eax [ebp+var_4] +
mov ecx [ebp+arg_8] +
mov ecx [ecx+4] +
shl eax 4 +
mov eax [eax+ecx+0Ch] +
add eax [ebp+lpBuffer] +
lea edx [eax+8] +
cmp [eax+19h] bl +
jnz loc_102E370  +
mov edx [eax+8] +
mov cx [eax] +
mov [ebp+var_14] cx +
movzx ecx word ptr [esi+0FCh] +
xor ebx ebx +
cmp bx cx +
jnz loc_102E389  +
mov cx [eax+2] +
mov [ebp+var_12] cx +
xor ebx ebx +
push ebx  +
lea ecx [ebp+var_1C] +
push ecx  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+10h]  +
push edx  +
push 1  +
push edi  +
call sub_101F051  +
push edi  +
push offset aData  +
call sub_1023CCF  +
mov esi [esi] +
add [ebp+lpBuffer] 20h +
cmp [ebp+arg_4] esi +
jnz loc_102E31C  +
push edi  +
push offset aItem_0  +
call sub_1023CCF  +
inc [ebp+var_4]  +
mov eax [ebp+arg_C] +
mov ecx [ebp+var_4] +
cmp ecx [eax+4] +
jb loc_102E301  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+lpBuffer] +
push edi  +
push offset aItem  +
call sub_1023CCF  +
push [ebp+arg_C]  +
mov esi [ebp+arg_4] +
push [ebp+arg_8]  +
lea eax [esi+8] +
push eax  +
push edi  +
call sub_102E1AC  +
test byte ptr [esi+205h] 4 +
jz loc_102E42A  +
push [ebp+arg_C]  +
add esi 1B8h +
push [ebp+arg_8]  +
push esi  +
push edi  +
call sub_102E2D8  +
push edi  +
push offset aItem_0  +
call sub_1023CCF  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
xor esi esi +
cmp dword ptr [edi+14h] 1 +
jbe loc_102E46E  +
push [ebp+arg_8]  +
push edi  +
call sub_102E040  +
test al al +
jz loc_102E530  +
mov eax [edi+10h] +
jmp loc_102E471  +
mov eax [edi+1Ch] +
mov edi [ebp+arg_8] +
push edi  +
push eax  +
mov [ebp+var_8] eax +
call sub_102D00B  +
xor eax eax +
mov [ebp+var_C] eax +
mov [ebp+var_4] eax +
cmp [edi] eax +
jbe loc_102E530  +
mov [ebp+var_10] eax +
jmp loc_102E495  +
mov edi eax +
mov edi [edi+4] +
add edi [ebp+var_10] +
test ebx ebx +
jnz loc_102E4BA  +
mov esi [ebp+var_8] +
mov eax [ebp+var_4] +
shl esi 5 +
add esi [edi+4] +
lea ebx [ebp+var_1C] +
mov [ebp+var_1C] eax +
mov [ebp+var_18] 1 +
jmp loc_102E50E  +
mov ecx [ebp+var_8] +
mov eax [edi+4] +
shl ecx 5 +
add eax ecx +
push eax  +
push esi  +
mov [ebp+var_14] ecx +
call sub_102CE32  +
test eax eax +
jnz loc_102E4D8  +
inc dword ptr [ebx+4]  +
jmp loc_102E50E  +
mov esi [ebp+arg_4] +
push ebx  +
push [ebp+arg_8]  +
push esi  +
push [ebp+lpBuffer]  +
call sub_102E3E6  +
inc [ebp+var_C]  +
test byte ptr [esi+205h] 8 +
jz loc_102E4FC  +
mov eax [ebp+var_C] +
cmp eax [esi+70h] +
jnb loc_102E530  +
mov eax [ebp+var_4] +
mov esi [edi+4] +
add esi [ebp+var_14] +
mov [ebx] eax +
mov dword ptr [ebx+4] 1 +
inc [ebp+var_4]  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_4] +
add [ebp+var_10] 10h +
cmp ecx [eax] +
jb loc_102E493  +
push ebx  +
push eax  +
push [ebp+arg_4]  +
push [ebp+lpBuffer]  +
call sub_102E3E6  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
and [ebp+var_4] 0 +
push ebx  +
push edi  +
xor eax eax +
push 7  +
mov word ptr [ebp+var_28] ax +
pop ecx  +
lea edi [ebp+var_28+2] +
stos   +
stos   +
mov eax [ebp+arg_0] +
mov ebx [eax] +
cmp eax ebx +
jz loc_102E5C2  +
and [ebp+var_8] 0 +
push esi  +
mov edi [ebp+arg_C] +
mov eax [ebp+var_4] +
cmp eax [edi] +
jnb loc_102E5C1  +
test byte ptr [ebx+101h] 10h +
jz loc_102E592  +
mov eax [ebp+arg_8] +
mov eax [eax] +
mov ecx [ebp+arg_4] +
mov ecx [ecx+4] +
shl eax 4 +
mov esi [eax+ecx+4] +
add esi [ebp+var_8] +
jmp loc_102E5A8  +
lea eax [ebp+var_28] +
push eax  +
push ebx  +
push [ebp+var_4]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_102E13A  +
lea esi [ebp+var_28] +
mov edi [edi+4] +
add edi [ebp+var_8] +
inc [ebp+var_4]  +
add [ebp+var_8] 20h +
push 8  +
pop ecx  +
movs   +
mov ebx [ebx] +
cmp [ebp+arg_0] ebx +
jnz loc_102E568  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+dwBytes] +
mov eax [ebx+4] +
push esi  +
mov esi [ebp+arg_10] +
push edi  +
mov edi [ebp+arg_4] +
imul eax edi +
lea ecx [ebp+dwBytes] +
push ecx  +
push 20h  +
pop ecx  +
mov [esi+8] eax +
mul  ecx +
push edx  +
push eax  +
call sub_101B8F5  +
test eax eax +
jl loc_102E617  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [esi+0Ch] eax +
xor esi esi +
cmp eax esi +
jnz loc_102E61B  +
xor al al +
jmp loc_102E681  +
mov [ebp+dwBytes] esi +
cmp [ebx+4] esi +
jbe loc_102E67F  +
mov [ebp+var_4] edi +
shl [ebp+var_4] 5 +
mov [ebp+var_8] esi +
mov ecx [ebp+arg_0] +
mov eax [ecx] +
cmp ecx eax +
jz loc_102E66B  +
xor edx edx +
mov [ebp+arg_4] esi +
mov ecx [ebx] +
add ecx [ebp+dwBytes] +
mov esi [ebp+arg_8] +
mov esi [esi+4] +
shl ecx 4 +
mov esi [ecx+esi+0Ch] +
mov ecx [ebp+arg_10] +
mov edi [ecx+0Ch] +
add edi [ebp+arg_4] +
add [ebp+arg_4] 20h +
add esi edx +
push 8  +
pop ecx  +
movs   +
mov eax [eax] +
add edx 20h +
cmp [ebp+arg_0] eax +
jnz loc_102E63B  +
mov esi [ebp+var_8] +
inc [ebp+dwBytes]  +
add esi [ebp+var_4] +
mov eax [ebp+dwBytes] +
mov [ebp+var_8] esi +
cmp eax [ebx+4] +
jb loc_102E62D  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
push 6  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_18] +
stos   +
mov eax [ebp+arg_4] +
mov esi [eax] +
cmp eax esi +
jz loc_102E75B  +
mov edi [ebp+arg_8] +
push ebx  +
mov ebx [ebp+NumberOfBytesWritten] +
add edi 8 +
lea eax [esi+0Ch] +
push eax  +
push offset aDataNameWz  +
push ebx  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+100h] 8 +
jnz loc_102E6DE  +
push ebx  +
push offset aVisibleFalse  +
call sub_1023CCF  +
push ebx  +
push offset asc_10029C8  +
call sub_1023CCF  +
push 0  +
push offset aSysAggregateco  +
push dword ptr [esi+64h]  +
push dword ptr [esi+60h]  +
call sub_104B901  +
test al al +
jz loc_102E704  +
mov eax [ebp+arg_C] +
mov [edi] eax +
cmp byte ptr [edi+11h] 0 +
mov ecx edi +
jnz loc_102E70E  +
mov ecx [edi] +
mov ax [edi-8] +
mov [ebp+var_10] ax +
movzx eax word ptr [esi+0FCh] +
xor edx edx +
cmp dx ax +
jnz loc_102E728  +
mov ax [edi-6] +
push 0  +
mov [ebp+var_E] ax +
lea eax [ebp+var_18] +
push eax  +
push dword ptr [edi+14h]  +
push dword ptr [edi+8]  +
push ecx  +
push 1  +
push ebx  +
call sub_101F051  +
push ebx  +
push offset aData  +
call sub_1023CCF  +
mov esi [esi] +
add edi 20h +
cmp [ebp+arg_4] esi +
jnz loc_102E6B8  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax [ebp+arg_10] +
mov ecx [ebp+arg_8] +
push ebx  +
mov ebx [eax+8] +
mov eax [eax+0Ch] +
shl ebx 4 +
add ebx [ecx+4] +
mov ecx [ebp+arg_C] +
push esi  +
shl eax 4 +
add eax [ecx+4] +
push edi  +
mov [ebp+arg_8] eax +
push 6  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_18] +
stos   +
mov eax [ebp+arg_4] +
mov esi [eax] +
cmp eax esi +
jz loc_102E856  +
mov [ebp+arg_10] 20h +
lea eax [esi+0Ch] +
push eax  +
push offset aDataNameWz  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+100h] 8 +
jnz loc_102E7D7  +
push [ebp+lpBuffer]  +
push offset aVisibleFalse  +
call sub_1023CCF  +
push [ebp+lpBuffer]  +
push offset asc_10029C8  +
call sub_1023CCF  +
mov eax [ebx+4] +
mov ecx [ebp+arg_10] +
add eax ecx +
cmp dword ptr [eax+10h] 0 +
ja loc_102E7FA  +
mov eax [ebp+arg_8] +
mov eax [eax+4] +
add eax ecx +
cmp byte ptr [eax+19h] 0 +
lea edx [eax+8] +
jnz loc_102E806  +
mov edx [eax+8] +
mov cx [eax] +
mov [ebp+var_10] cx +
movzx ecx word ptr [esi+0FCh] +
xor edi edi +
cmp di cx +
jnz loc_102E81F  +
mov cx [eax+2] +
push 0  +
mov [ebp+var_E] cx +
lea ecx [ebp+var_18] +
push ecx  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+10h]  +
push edx  +
push 1  +
push [ebp+lpBuffer]  +
call sub_101F051  +
push [ebp+lpBuffer]  +
push offset aData  +
call sub_1023CCF  +
mov esi [esi] +
add [ebp+arg_10] 20h +
cmp [ebp+arg_4] esi +
jnz loc_102E7AD  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
push 6  +
pop ecx  +
push [ebp+lpBuffer]  +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
mov eax [ebp+arg_10] +
mov edi [eax+8] +
mov ebx [eax+0Ch] +
mov ecx [ebp+arg_8] +
mov eax [ebp+arg_C] +
shl edi 4 +
add edi [ecx+4] +
shl ebx 4 +
add ebx [eax+4] +
push offset aItem  +
call sub_1023CCF  +
mov eax [ebp+arg_4] +
mov esi [eax] +
cmp eax esi +
jz loc_102E95B  +
and [ebp+arg_10] 0 +
lea eax [esi+0Ch] +
push eax  +
push offset aDataNameWz  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+100h] 8 +
jnz loc_102E8DA  +
push [ebp+lpBuffer]  +
push offset aVisibleFalse  +
call sub_1023CCF  +
push [ebp+lpBuffer]  +
push offset asc_10029C8  +
call sub_1023CCF  +
mov eax [edi+0Ch] +
mov ecx [ebp+arg_10] +
add eax ecx +
cmp dword ptr [eax+10h] 0 +
ja loc_102E8FA  +
mov eax [ebx+0Ch] +
add eax ecx +
cmp byte ptr [eax+19h] 0 +
lea ecx [eax+8] +
jnz loc_102E906  +
mov ecx [eax+8] +
mov [ebp+arg_8] ecx +
mov cx [eax] +
mov [ebp+var_10] cx +
movzx ecx word ptr [esi+0FCh] +
xor edx edx +
cmp dx cx +
jnz loc_102E922  +
mov cx [eax+2] +
push 0  +
mov [ebp+var_E] cx +
lea ecx [ebp+var_18] +
push ecx  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+10h]  +
push [ebp+arg_8]  +
push 1  +
push [ebp+lpBuffer]  +
call sub_101F051  +
push [ebp+lpBuffer]  +
push offset aData  +
call sub_1023CCF  +
mov esi [esi] +
add [ebp+arg_10] 20h +
cmp [ebp+arg_4] esi +
jnz loc_102E8B0  +
push [ebp+lpBuffer]  +
push offset aItem_0  +
call sub_1023CCF  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_10] +
and [ebp+var_4] 0 +
push edi  +
mov edi [eax] +
cmp eax edi +
jz loc_102E9F8  +
push esi  +
mov esi [ebp+arg_4] +
push ebx  +
push [ebp+lpBuffer]  +
mov ebx edi +
mov edi [edi] +
push offset aItem  +
call sub_1023CCF  +
push ebx  +
push [ebp+arg_C]  +
lea eax [esi+8] +
push [ebp+arg_8]  +
push eax  +
push [ebp+lpBuffer]  +
call sub_102E766  +
test byte ptr [esi+205h] 4 +
jz loc_102E9D0  +
push ebx  +
push [ebp+arg_C]  +
lea eax [esi+1B8h] +
push [ebp+arg_8]  +
push eax  +
push [ebp+lpBuffer]  +
call sub_102E862  +
push [ebp+lpBuffer]  +
push offset aItem_0  +
call sub_1023CCF  +
inc [ebp+var_4]  +
test byte ptr [esi+205h] 8 +
jz loc_102E9F1  +
mov eax [ebp+var_4] +
cmp eax [esi+70h] +
jnb loc_102E9F6  +
cmp [ebp+arg_10] edi +
jnz loc_102E98D  +
pop ebx  +
pop esi  +
pop edi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [ebp+lpBuffer] +
push esi  +
push edi  +
push 6  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_1C] +
stos   +
push ebx  +
push offset aItem  +
call sub_1023CCF  +
mov eax [ebp+arg_4] +
mov esi [eax] +
cmp eax esi +
jz loc_102EADB  +
mov edi [ebp+var_4] +
shl edi 5 +
add edi [ebp+arg_8] +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_C] +
jnb loc_102EADB  +
lea eax [esi+0Ch] +
push eax  +
push offset aDataNameWz  +
push ebx  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+100h] 8 +
jnz loc_102EA71  +
push ebx  +
push offset aVisibleFalse  +
call sub_1023CCF  +
push ebx  +
push offset asc_10029C8  +
call sub_1023CCF  +
inc [ebp+var_4]  +
mov eax edi +
add edi 20h +
cmp byte ptr [eax+19h] 0 +
lea edx [eax+8] +
jnz loc_102EA90  +
mov edx [eax+8] +
mov cx [eax] +
mov [ebp+var_14] cx +
movzx ecx word ptr [esi+0FCh] +
xor ebx ebx +
cmp bx cx +
jnz loc_102EAA9  +
mov cx [eax+2] +
mov ebx [ebp+lpBuffer] +
push 0  +
mov [ebp+var_12] cx +
lea ecx [ebp+var_1C] +
push ecx  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+10h]  +
push edx  +
push 1  +
push ebx  +
call sub_101F051  +
push ebx  +
push offset aData  +
call sub_1023CCF  +
mov esi [esi] +
cmp [ebp+arg_4] esi +
jnz loc_102EA3F  +
push ebx  +
push offset aItem_0  +
call sub_1023CCF  +
mov eax [ebp+arg_C] +
cmp [ebp+var_4] eax +
jb loc_102EA1E  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_8] +
xor eax eax +
mov [ebp+var_4] eax +
cmp [ebx] eax +
jbe loc_102EB79  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+arg_8] eax +
push [ebp+lpBuffer]  +
mov esi [ebx+4] +
add esi [ebp+arg_8] +
push offset aItem  +
call sub_1023CCF  +
push dword ptr [esi+8]  +
lea eax [edi+8] +
push dword ptr [esi+4]  +
push eax  +
push [ebp+lpBuffer]  +
call sub_102E68D  +
test byte ptr [edi+205h] 4 +
jz loc_102EB5C  +
push dword ptr [esi+8]  +
lea eax [edi+1B8h] +
push dword ptr [esi+0Ch]  +
push eax  +
push [ebp+lpBuffer]  +
call sub_102EA02  +
push [ebp+lpBuffer]  +
push offset aItem_0  +
call sub_1023CCF  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
add [ebp+arg_8] 10h +
cmp eax [ebx] +
jb loc_102EB19  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
mov eax [ebp+arg_4] +
mov eax [eax+esi*4] +
test eax eax +
jz loc_102EBD1  +
test byte ptr [eax+100h] 40h +
mov edx offset aAscending +
jz loc_102EBA8  +
mov edx offset aDescending +
test byte ptr [eax+0F1h] 2 +
mov ecx offset aNumber +
jnz loc_102EBBB  +
mov ecx offset aText +
push edx  +
push ecx  +
add eax 0Ch +
push eax  +
push offset aSortFieldWzTyp  +
push [ebp+NumberOfBytesWritten]  +
call sub_1024264  +
add esp 14h +
inc esi  +
cmp esi 2 +
jb loc_102EB8B  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+NumberOfBytesWritten] +
lea eax [esi+0Ch] +
push eax  +
push offset aDataNameWz  +
push edi  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+101h] 1 +
jz loc_102EC1E  +
test byte ptr [esi+100h] 1 +
mov eax offset aString +
jz loc_102EC31  +
mov eax offset aNumber +
jmp loc_102EC31  +
test byte ptr [esi+0F1h] 2 +
mov eax offset aNumber +
jnz loc_102EC31  +
mov eax offset aString +
push eax  +
push offset aClassWs  +
push edi  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+101h] 2 +
jz loc_102EC5B  +
lea eax [esi+20h] +
push eax  +
push offset aFormatWz  +
push edi  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+101h] 4 +
jz loc_102EC86  +
test byte ptr [esi+100h] 8 +
mov eax offset aTrue +
jnz loc_102EC77  +
mov eax offset aFalse +
push eax  +
push offset aVisibleWs  +
push edi  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+101h] 8 +
jz loc_102ECB1  +
test byte ptr [esi+100h] 6 +
mov eax offset aTotal +
jz loc_102ECA2  +
mov eax offset aAverage +
push eax  +
push offset aSummaryWs  +
push edi  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+101h] 80h +
jz loc_102ECCC  +
add esi 34h +
push esi  +
push offset aNoteWz  +
push edi  +
call sub_1024264  +
add esp 0Ch +
push edi  +
push offset asc_1002AE8  +
call sub_1023CCF  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi [edi] +
cmp esi edi +
jz loc_102ED2B  +
push ebx  +
mov ebx [ebp+lpBuffer] +
push ebx  +
push offset aHeader  +
call sub_1023CCF  +
lea eax [edi+10h] +
cmp dword ptr [eax] 0 +
jz loc_102ED10  +
push eax  +
push ebx  +
call sub_102EB83  +
mov eax esi +
mov esi [esi] +
push eax  +
push ebx  +
call sub_102EBE1  +
cmp edi esi +
jnz loc_102ED10  +
push ebx  +
push offset aHeader_0  +
call sub_1023CCF  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [ebp+lpBuffer] +
push esi  +
mov esi [eax+0Ch] +
push edi  +
push ebx  +
push offset aHeader_1  +
call sub_1023CCF  +
cmp dword ptr [esi+8] 0 +
mov edi [ebp+arg_4] +
jnz loc_102ED69  +
test byte ptr [edi+76h] 1 +
jz loc_102ED69  +
push ebx  +
push offset aSortFieldCount  +
jmp loc_102ED9E  +
mov al [edi+76h] +
test al 2 +
jz loc_102ED7C  +
test al 1 +
jz loc_102ED7C  +
push ebx  +
push offset aSortFieldInsta  +
jmp loc_102ED9E  +
test al 8 +
jz loc_102ED88  +
push ebx  +
push offset aSortFieldMeanT  +
jmp loc_102ED9E  +
test al 20h +
jz loc_102ED94  +
push ebx  +
push offset aSortFieldMaxTy  +
jmp loc_102ED9E  +
test al 10h +
jz loc_102EDA3  +
push ebx  +
push offset aSortFieldMinTy  +
call sub_1023CCF  +
test byte ptr [edi+74h] 40h +
jz loc_102EDBA  +
push dword ptr [edi+70h]  +
push offset aThresholdTypeT  +
push ebx  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [edi+76h] 1 +
jz loc_102EDCB  +
push ebx  +
push offset aDataNameCounte  +
call sub_1023CCF  +
cmp dword ptr [esi+8] 0 +
jz loc_102EDE2  +
test byte ptr [edi+76h] 2 +
jz loc_102EDE2  +
push ebx  +
push offset aDataNameInstan  +
call sub_1023CCF  +
cmp dword ptr [esi] 0 +
jz loc_102EDF8  +
test byte ptr [edi+76h] 4 +
jz loc_102EDF8  +
push ebx  +
push offset aDataNameMachin  +
call sub_1023CCF  +
test byte ptr [edi+76h] 8 +
jz loc_102EE09  +
push ebx  +
push offset aDataNameMeanCl  +
call sub_1023CCF  +
test byte ptr [edi+76h] 10h +
jz loc_102EE1A  +
push ebx  +
push offset aDataNameMinCla  +
call sub_1023CCF  +
test byte ptr [edi+76h] 20h +
jz loc_102EE2B  +
push ebx  +
push offset aDataNameMaxCla  +
call sub_1023CCF  +
push ebx  +
push offset aHeader_2  +
call sub_1023CCF  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
add edi 8 +
mov esi [edi] +
jmp loc_102EE70  +
push dword ptr [ebp+arg_4]  +
mov ecx esi +
movzx eax byte ptr [ecx+1Ch] +
mov esi [esi] +
shr eax 1 +
and eax 1 +
push eax  +
push dword ptr [ecx+10h]  +
call sub_102483D  +
test eax eax +
jz loc_102EE7C  +
cmp edi esi +
jnz loc_102EE53  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
xor eax eax +
inc eax  +
jmp loc_102EE76  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+arg_4] 0 +
jnz loc_102EE96  +
xor eax eax +
inc eax  +
jmp loc_102EEC9  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
add edi 10h +
mov esi [edi] +
cmp edi esi +
jz loc_102EECD  +
push dword ptr [ebp+arg_4]  +
mov ecx esi +
movzx eax byte ptr [ecx+1Ch] +
mov esi [esi] +
shr eax 1 +
and eax 1 +
push eax  +
push dword ptr [ecx+10h]  +
call sub_102483D  +
test eax eax +
jz loc_102EECD  +
cmp edi esi +
jnz loc_102EEA4  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
xor eax eax +
inc eax  +
jmp loc_102EEC7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax dword_10566D8 +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_1] 0 +
test eax eax +
jz loc_102EFD7  +
add eax 684h +
cmp dword ptr [eax] 0 +
jz loc_102EFD7  +
mov eax [eax] +
mov ebx [eax] +
mov [ebp+var_C] eax +
cmp eax ebx +
jz loc_102EFD7  +
jmp loc_102EF15  +
mov ebx [ebp+var_8] +
mov eax [ebx] +
mov esi [ebp+arg_4] +
xor edi edi +
mov [ebp+var_8] eax +
mov eax [ebx+0Ch] +
inc edi  +
push edi  +
push dword ptr [eax+4]  +
push dword ptr [esi+48h]  +
push dword ptr [esi+44h]  +
call sub_104B901  +
mov [ebp+var_2] al +
test al al +
jz loc_102EFBF  +
mov eax [ebx+0Ch] +
push dword ptr [eax+14h]  +
push esi  +
call sub_102EE42  +
test eax eax +
jnz loc_102EFBF  +
mov eax [ebx+0Ch] +
push dword ptr [eax+8]  +
push esi  +
call sub_102EE86  +
test eax eax +
jz loc_102EFBF  +
cmp [ebp+var_1] 0 +
jnz loc_102EF71  +
push ebx  +
push esi  +
push [ebp+lpBuffer]  +
call sub_102ED36  +
mov [ebp+var_1] 1 +
movzx eax byte ptr [esi+76h] +
mov ecx eax +
shr ecx 5 +
and ecx edi +
push ecx  +
mov ecx eax +
shr ecx 4 +
and ecx edi +
push ecx  +
mov ecx eax +
shr ecx 3 +
and ecx edi +
push ecx  +
mov ecx eax +
shr ecx 2 +
and ecx edi +
push ecx  +
mov ecx eax +
shr ecx 1 +
and ecx edi +
push ecx  +
and eax edi +
push eax  +
push dword ptr [ebx+18h]  +
lea esi [ebx+20h] +
sub esp 38h +
push 0Eh  +
pop ecx  +
mov edi esp +
push dword ptr [ebx+58h]  +
movs   +
push dword ptr [ebx+0Ch]  +
push [ebp+lpBuffer]  +
call sub_10346D8  +
jmp loc_102EFCB  +
cmp [ebp+var_1] 0 +
jz loc_102EFCB  +
cmp [ebp+var_2] 0 +
jz loc_102EFD7  +
mov eax [ebp+var_8] +
cmp [ebp+var_C] eax +
jnz loc_102EF12  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+NumberOfBytesWritten] +
lea eax [esi+1Ch] +
push eax  +
push offset aTableNameWz  +
push edi  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+74h] 2 +
jz loc_102F01A  +
lea eax [esi+30h] +
push eax  +
push offset aTopicWz  +
push edi  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+74h] 10h +
jz loc_102F031  +
push dword ptr [esi+68h]  +
push offset aLevelD  +
push edi  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+74h] 20h +
jz loc_102F048  +
push dword ptr [esi+6Ch]  +
push offset aKeyD  +
push edi  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+74h] 8 +
jz loc_102F060  +
lea eax [esi+58h] +
push eax  +
push offset aNoteWz  +
push edi  +
call sub_1024264  +
add esp 0Ch +
push edi  +
push offset asc_10031B4  +
call sub_1023CCF  +
push esi  +
push edi  +
call sub_102EED7  +
push edi  +
push offset aTable  +
call sub_1023CCF  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_1079B5C +
test eax eax +
jz loc_102F0C5  +
mov eax [eax+24h] +
test eax eax +
jz loc_102F0C5  +
push dword ptr [eax+68h]  +
mov ecx dword_10566D8 +
push dword ptr [eax+6Ch]  +
add eax 74h +
push dword ptr [ecx+688h]  +
push eax  +
push offset aReportNameWzLe  +
push [ebp+NumberOfBytesWritten]  +
call sub_1024264  +
add esp 18h +
jmp loc_102F0E4  +
mov eax dword_10566D8 +
push 1  +
push 6  +
push dword ptr [eax+688h]  +
push offset aReportNameTrac  +
push [ebp+NumberOfBytesWritten]  +
call sub_1024264  +
add esp 14h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push 50h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ebx eax +
mov [ebp+var_4] ebx +
test ebx ebx +
jnz loc_102F115  +
push 8  +
pop eax  +
jmp loc_102F1A8  +
push esi  +
push edi  +
push ebx  +
push [ebp+lpSrc]  +
lea esi [ebx+44h] +
mov [ebx+48h] esi +
mov [esi] esi +
mov byte ptr [ebx+4Ch] 1 +
call sub_1042888  +
mov edi eax +
test edi edi +
jnz loc_102F19E  +
push ebx  +
call sub_1047AEA  +
mov edi eax +
test edi edi +
jnz loc_102F19E  +
push [ebp+lpBuffer]  +
push offset aStringtable  +
call sub_1023CCF  +
mov edi [esi] +
cmp esi edi +
jz loc_102F18F  +
mov ebx edi +
mov edi [edi] +
lea eax [ebx+0Ch] +
push eax  +
push offset aStringIdWz  +
push [ebp+lpBuffer]  +
call sub_1024264  +
movzx eax word ptr [ebx+20h] +
add esp 0Ch +
push eax  +
push dword ptr [ebx+24h]  +
push 1  +
push [ebp+lpBuffer]  +
call sub_101D25E  +
push [ebp+lpBuffer]  +
push offset aString_0  +
call sub_1023CCF  +
cmp esi edi +
jnz loc_102F151  +
mov ebx [ebp+var_4] +
push [ebp+lpBuffer]  +
push offset aStringtable_0  +
call sub_1023CCF  +
xor edi edi +
push ebx  +
call sub_1047BA6  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 101Ch +
call __alloca_probe  +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov esi 400h +
push esi  +
lea ecx [ebp+Dst] +
mov [ebp+NumberOfBytesWritten] eax +
mov eax [ebp+lpSrc] +
push ecx  +
push eax  +
xor edi edi +
xor ebx ebx +
call ds:ExpandEnvironmentStringsW  +
cmp eax edi +
jz loc_102F314  +
cmp eax esi +
jnb loc_102F314  +
lea eax [ebp+var_1014] +
push eax  +
lea eax [ebp+var_1008] +
push eax  +
lea ebx [ebp+var_804] +
mov eax ebx +
push eax  +
lea eax [ebp+var_100C] +
push eax  +
push edi  +
lea eax [ebp+Dst] +
push eax  +
mov [ebp+var_1008] esi +
mov esi ds:GetFileMUIPath +
push edi  +
mov [ebp+var_100C] edi +
mov [ebp+var_1014] edi +
mov [ebp+var_1010] edi +
call esi  +
test eax eax +
jnz loc_102F255  +
call ds:GetLastError  +
jmp loc_102F257  +
xor eax eax +
cmp eax 7Ah +
jnz loc_102F2E0  +
lea eax [ebp+dwBytes] +
push eax  +
mov eax [ebp+var_1008] +
push 2  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_101B8F5  +
test eax eax +
jl loc_102F336  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ebx eax +
cmp ebx edi +
jz loc_102F336  +
lea eax [ebp+var_1014] +
push eax  +
lea eax [ebp+var_1008] +
push eax  +
push ebx  +
lea eax [ebp+var_100C] +
push eax  +
push edi  +
lea eax [ebp+Dst] +
push eax  +
push edi  +
mov [ebp+var_100C] edi +
mov [ebp+var_1014] edi +
mov [ebp+var_1010] edi +
call esi  +
test eax eax +
jnz loc_102F2DE  +
call ds:GetLastError  +
jmp loc_102F2E0  +
xor eax eax +
cmp eax edi +
jnz loc_102F31A  +
push ebx  +
push [ebp+NumberOfBytesWritten]  +
call sub_102F0ED  +
test eax eax +
jnz loc_102F31A  +
cmp ebx edi +
jz loc_102F310  +
lea eax [ebp+var_804] +
cmp ebx eax +
jz loc_102F310  +
push ebx  +
push edi  +
push hHeap  +
call ds:HeapFree  +
mov al 1 +
jmp loc_102F338  +
call ds:GetLastError  +
cmp ebx edi +
jz loc_102F336  +
lea eax [ebp+var_804] +
cmp ebx eax +
jz loc_102F336  +
push ebx  +
push edi  +
push hHeap  +
call ds:HeapFree  +
xor al al +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
lea edi [ebx+10h] +
mov esi [edi] +
mov [ebp+var_1] 1 +
cmp edi esi +
jz loc_102F3E4  +
mov eax esi +
mov esi [esi] +
add eax 8 +
push eax  +
push [ebp+lpBuffer]  +
call sub_102F1B2  +
test al al +
jnz loc_102F37E  +
mov [ebp+var_1] al +
cmp edi esi +
jnz loc_102F367  +
cmp [ebp+var_1] 0 +
jnz loc_102F3E4  +
push [ebp+lpBuffer]  +
push offset aStringtable  +
call sub_1023CCF  +
add ebx 8 +
mov esi [ebx] +
jmp loc_102F3D3  +
mov edi esi +
mov esi [esi] +
lea eax [edi+0Ch] +
push eax  +
push offset aStringIdWz  +
push [ebp+lpBuffer]  +
call sub_1024264  +
movzx eax word ptr [edi+20h] +
add esp 0Ch +
push eax  +
push dword ptr [edi+24h]  +
push 1  +
push [ebp+lpBuffer]  +
call sub_101D25E  +
push [ebp+lpBuffer]  +
push offset aString_0  +
call sub_1023CCF  +
cmp ebx esi +
jnz loc_102F39C  +
push [ebp+lpBuffer]  +
push offset aStringtable_0  +
call sub_1023CCF  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_C] 0 +
mov eax offset asc_1002AE8 +
jnz loc_102F405  +
mov eax offset asc_10031B4 +
push eax  +
push [ebp+arg_8]  +
push dword ptr [ebp+arg_4]  +
push offset aSectionNameSKe  +
push [ebp+NumberOfBytesWritten]  +
call sub_1024264  +
add esp 14h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_1079B5C +
mov ecx [eax+24h] +
mov [ebp+var_8] ecx +
test ecx ecx +
jnz loc_102F440  +
xor eax eax +
inc eax  +
jmp locret_102F4A3  +
push ebx  +
mov ebx [ecx] +
push esi  +
push edi  +
jmp loc_102F49A  +
mov eax ebx +
mov ebx [ebx] +
add eax 10h +
mov esi [eax] +
mov [ebp+var_4] eax +
cmp eax esi +
jz loc_102F49A  +
mov eax [ebp+arg_0] +
push 1  +
push dword ptr [eax+4]  +
mov edi esi +
push dword ptr [edi+48h]  +
mov esi [esi] +
push dword ptr [edi+44h]  +
call sub_104B901  +
test al al +
jz loc_102F492  +
mov eax [ebp+arg_0] +
push dword ptr [eax+14h]  +
push edi  +
call sub_102EE42  +
test eax eax +
jnz loc_102F492  +
mov eax [ebp+arg_0] +
push dword ptr [eax+8]  +
push edi  +
call sub_102EE86  +
test eax eax +
jnz loc_102F4A7  +
cmp [ebp+var_4] esi +
jnz loc_102F457  +
mov ecx [ebp+var_8] +
cmp ecx ebx +
jnz loc_102F447  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
xor eax eax +
inc eax  +
jmp loc_102F4A0  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov eax ecx +
mov dword ptr [eax] offset off_10033D4 +
xor ecx ecx +
jmp loc_102F4C8  +
shr edx 1 +
inc ecx  +
test edx edx +
jnz loc_102F4C5  +
and [eax+24h] edx +
and [eax+20h] edx +
mov [eax+4] ecx +
pop ebp  +
retn 4  +
***
cmp dword ptr [ecx+20h] 0 +
jz loc_102F4ED  +
cmp dword ptr [ecx+24h] 0 +
jz loc_102F4ED  +
mov al 1 +
retn   +
xor al al +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
xor ebx ebx +
cmp [edi+18h] ebx +
jbe loc_102F536  +
cmp dword ptr [esi+ebx*8+0Ch] 1E3603Bh +
jz loc_102F53C  +
mov ecx [esi+ebx*8+8] +
test ecx ecx +
jz loc_102F522  +
push 1  +
call sub_102C732  +
inc ebx  +
cmp ebx [edi+18h] +
jb loc_102F509  +
jmp loc_102F536  +
mov eax [ecx+1Ch] +
push 1  +
mov [esi] eax +
call sub_102C732  +
mov ecx [esi] +
test ecx ecx +
jnz loc_102F52A  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov edx [ecx+4] +
movzx ecx word ptr [ecx] +
xor eax eax +
test ecx ecx +
jle loc_102F570  +
push esi  +
movzx esi byte ptr [edx] +
imul eax eax +
and esi 0DFh +
add eax esi +
inc edx  +
dec ecx  +
jnz loc_102F55D  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1010h +
call __alloca_probe  +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+Sid] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov eax 400h +
mov [ebp+cbName] eax +
mov [ebp+cbReferencedDomainName] eax +
lea eax [ebp+peUse] +
push eax  +
lea eax [ebp+cbReferencedDomainName] +
push eax  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
lea eax [ebp+cbName] +
push eax  +
lea eax [ebp+Name] +
push eax  +
push ecx  +
push 0  +
call ds:LookupAccountSidW  +
mov esi offset aSS +
test eax eax +
jz loc_102F5FF  +
lea eax [ebp+Name] +
push eax  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
push esi  +
push [ebp+arg_8]  +
push edi  +
call sub_101BCA7  +
add esp 14h +
test eax eax +
jge loc_102F625  +
lea eax [ebp+Name] +
push eax  +
lea eax [ebp+ReferencedDomainName] +
push eax  +
push esi  +
push [ebp+arg_8]  +
push edi  +
call sub_101BCA7  +
add esp 14h +
test eax eax +
jge loc_102F625  +
mov eax 54Fh +
jmp loc_102F627  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test [ebp+arg_C] 40h +
mov eax dword_10566D8 +
mov eax [eax+680h] +
jz loc_102F656  +
push 40h  +
jmp loc_102F662  +
test [ebp+arg_C] 20h +
jnz loc_102F660  +
test eax eax +
ja loc_102F663  +
push 20h  +
pop eax  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 0 +
jnz loc_102F68D  +
push offset a0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_101BCA7  +
add esp 0Ch +
test eax eax +
jge loc_102F689  +
mov eax 54Fh +
jmp loc_102F6A6  +
xor eax eax +
jmp loc_102F6A6  +
cmp eax 40h +
jnz loc_102F697  +
add ecx 10h +
jmp loc_102F69A  +
add ecx 8 +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push ecx  +
call sub_102F579  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 2014h +
call __alloca_probe  +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
cmp byte ptr [ecx+19h] 0 +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
jz loc_102F709  +
fld  qword ptr [esi+8] +
fcomp  qword ptr [ecx+8] +
fnstsw  ax +
test ah 5 +
jp loc_102F6EB  +
xor eax eax +
inc eax  +
jmp loc_102F8CB  +
fld  qword ptr [esi+8] +
fcomp  qword ptr [ecx+8] +
fnstsw  ax +
test ah 41h +
jnz loc_102F702  +
mov eax 0FFFFFFFFh +
jmp loc_102F8CB  +
xor eax eax +
jmp loc_102F8CB  +
movzx eax word ptr [ecx] +
xor edx edx +
inc edx  +
cmp dx ax +
jz loc_102F8B9  +
mov edx 12Ch +
cmp dx ax +
jz loc_102F8B9  +
add edx 2 +
cmp dx ax +
jz loc_102F8B9  +
mov edx 130h +
cmp dx ax +
jz loc_102F8B9  +
add edx 2 +
cmp dx ax +
jz loc_102F8B9  +
push 2  +
pop edx  +
cmp dx ax +
jz loc_102F8A8  +
mov edx 12Dh +
cmp dx ax +
jz loc_102F8A8  +
add edx 2 +
cmp dx ax +
jz loc_102F8A8  +
mov edx 131h +
cmp dx ax +
jz loc_102F8A8  +
add edx 2 +
cmp dx ax +
jz loc_102F8A8  +
push 0Fh  +
pop edx  +
cmp dx ax +
jnz loc_102F7D4  +
push dword ptr [ecx+8]  +
mov edi 800h +
push edi  +
lea eax [ebp+var_1004] +
push eax  +
call sub_1042D55  +
push dword ptr [esi+8]  +
lea eax [ebp+var_2004] +
push edi  +
push eax  +
call sub_1042D55  +
lea eax [ebp+var_2004] +
push eax  +
lea eax [ebp+var_1004] +
push eax  +
call ds:__imp__wcsicmp  +
pop ecx  +
pop ecx  +
jmp loc_102F8CB  +
push 11h  +
pop edx  +
cmp dx ax +
jnz loc_102F7F8  +
push 1  +
movzx eax word ptr [esi+10h] +
push eax  +
push dword ptr [esi+8]  +
movzx eax word ptr [ecx+10h] +
push eax  +
push dword ptr [ecx+8]  +
call sub_102CD1B  +
jmp loc_102F8CB  +
push 12h  +
pop edx  +
cmp dx ax +
jnz loc_102F834  +
mov edi ds:SystemTimeToFileTime +
lea eax [ebp+FileTime] +
push eax  +
push dword ptr [ecx+8]  +
call edi  +
lea eax [ebp+var_2014] +
push eax  +
push dword ptr [esi+8]  +
call edi  +
push 1  +
push 8  +
lea eax [ebp+var_2014] +
push eax  +
push 8  +
lea eax [ebp+FileTime] +
push eax  +
jmp loc_102F7EE  +
push 13h  +
pop edx  +
cmp dx ax +
jnz loc_102F866  +
mov edi 800h +
push edi  +
lea eax [ebp+var_1004] +
push eax  +
push dword ptr [ecx+8]  +
call sub_102F579  +
push edi  +
lea eax [ebp+var_2004] +
push eax  +
push dword ptr [esi+8]  +
call sub_102F579  +
jmp loc_102F7B9  +
mov edx 136h +
cmp dx ax +
jnz loc_102F8A0  +
push dword ptr [ecx+1Ch]  +
mov edi 800h +
push edi  +
lea eax [ebp+var_1004] +
push eax  +
push dword ptr [ecx+8]  +
call sub_102F63C  +
push dword ptr [esi+1Ch]  +
lea eax [ebp+var_2004] +
push edi  +
push eax  +
push dword ptr [esi+8]  +
call sub_102F63C  +
jmp loc_102F7B9  +
push [ebp+arg_8]  +
jmp loc_102F7DE  +
push dword ptr [ecx+10h]  +
push dword ptr [esi+8]  +
push dword ptr [ecx+8]  +
call ds:_strnicmp  +
jmp loc_102F8C8  +
push dword ptr [ecx+10h]  +
push dword ptr [esi+8]  +
push dword ptr [ecx+8]  +
call ds:__imp__wcsnicmp  +
add esp 0Ch +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [eax+20h] +
push ebx  +
mov ebx [eax+24h] +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
mov esi edi +
shl esi 4 +
add esi [ecx+4] +
mov [ebp+var_C] edx +
mov [ebp+var_4] esi +
mov [ebp+var_10] ebx +
cmp edi [eax+70h] +
jnb loc_102F918  +
xor eax eax +
inc eax  +
jmp loc_102F9F1  +
and [ebp+arg_0] 0 +
test edi edi +
jbe loc_102F9EF  +
and [ebp+var_8] 0 +
jmp loc_102F930  +
mov edx [ebp+var_C] +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
cmp eax [ecx] +
jnb loc_102F9EF  +
mov ebx [ecx+4] +
add ebx [ebp+var_8] +
mov ecx [edx+0F8h] +
mov eax [esi+4] +
mov edi [ebx+4] +
shl ecx 5 +
add eax ecx +
add edi ecx +
mov cl [edx+0F1h] +
shr cl 1 +
and cl 1 +
movzx ecx cl +
push ecx  +
push edi  +
push eax  +
call sub_102F6AF  +
mov ecx [ebp+var_C] +
test byte ptr [ecx+100h] 40h +
jnz loc_102F978  +
neg eax  +
test eax eax +
jg loc_102F9C0  +
jl loc_102F9DC  +
mov edx [ebp+var_10] +
test edx edx +
jz loc_102F9DC  +
mov ecx [edx+0F8h] +
mov eax [esi+4] +
mov edi [ebx+4] +
shl ecx 5 +
add eax ecx +
add edi ecx +
mov cl [edx+0F1h] +
shr cl 1 +
and cl 1 +
movzx ecx cl +
push ecx  +
push edi  +
push eax  +
call sub_102F6AF  +
mov ecx [ebp+var_10] +
test byte ptr [ecx+100h] 40h +
jnz loc_102F9BC  +
neg eax  +
test eax eax +
jle loc_102F9DC  +
lea edi [ebp+var_20] +
movs   +
movs   +
movs   +
movs   +
mov edi [ebp+var_4] +
mov esi ebx +
movs   +
movs   +
movs   +
movs   +
mov edi ebx +
lea esi [ebp+var_20] +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp+var_4] +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
add [ebp+var_8] 10h +
cmp eax [ebp+arg_8] +
jb loc_102F92A  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
mov esi [edi+0F8h] +
push [ebp+arg_4]  +
inc esi  +
push esi  +
call sub_102D1EC  +
push [ebp+arg_10]  +
mov ebx eax +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_102D1EC  +
mov cl [edi+0F1h] +
shr cl 1 +
and cl 1 +
movzx ecx cl +
push ecx  +
push eax  +
push ebx  +
call sub_102F6AF  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_10] +
mov ecx [eax+20h] +
mov eax [eax+24h] +
push ebx  +
mov ebx [ebp+arg_8] +
push edi  +
mov edi [ebx] +
mov [ebp+var_8] ecx +
mov [ebp+var_4] eax +
cmp ebx edi +
jnz loc_102FA87  +
mov eax [ebp+arg_C] +
mov [eax] edi +
mov [eax+4] ebx +
mov [edi+4] eax +
mov [ebx] eax +
xor eax eax +
inc eax  +
jmp loc_102FB49  +
push esi  +
mov esi [ebp+arg_C] +
mov [ebp+arg_C] edi +
push [ebp+arg_C]  +
mov edi [edi] +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push [ebp+var_8]  +
call sub_102F9FD  +
mov ecx [ebp+var_8] +
test byte ptr [ecx+100h] 40h +
jnz loc_102FAB0  +
neg eax  +
test eax eax +
jg loc_102FB06  +
jl loc_102FAE0  +
cmp [ebp+var_4] 0 +
jz loc_102FB06  +
push [ebp+arg_C]  +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push [ebp+var_4]  +
call sub_102F9FD  +
mov ecx [ebp+var_4] +
test byte ptr [ecx+100h] 40h +
jnz loc_102FADC  +
neg eax  +
test eax eax +
jge loc_102FB06  +
cmp ebx edi +
jnz loc_102FA8B  +
mov eax [ebp+arg_14] +
mov ecx [ebp+arg_10] +
cmp eax [ecx+70h] +
jnz loc_102FB38  +
test esi esi +
jz loc_102FB02  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
xor eax eax +
jmp loc_102FB48  +
mov eax [ebp+arg_C] +
mov ecx [eax+4] +
mov [esi+4] ecx +
mov ecx [ebp+arg_10] +
mov [esi] eax +
mov [eax+4] esi +
mov eax [esi+4] +
mov [eax] esi +
mov eax [ebp+arg_14] +
cmp eax [ecx+70h] +
jnz loc_102FB45  +
mov eax [ebx+4] +
mov ecx [eax] +
mov edx [eax+4] +
mov [edx] ecx +
mov [ecx+4] edx +
test eax eax +
jz loc_102FB02  +
push eax  +
jmp loc_102FAF4  +
mov eax [ebx+4] +
mov [esi] ebx +
mov [esi+4] eax +
mov [eax] esi +
mov [ebx+4] esi +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor ebx ebx +
push esi  +
push ebx  +
mov [ebp+var_8] ebx +
call sub_102D00B  +
mov edi [ebp+arg_8] +
push edi  +
push ebx  +
call sub_102D00B  +
mov eax [esi] +
cmp eax [edi] +
jnb loc_102FB8C  +
mov eax esi +
mov [ebp+var_18] eax +
mov [ebp+var_10] edi +
mov [ebp+var_1] 1 +
jmp loc_102FB97  +
mov [ebp+var_18] edi +
mov [ebp+var_10] esi +
mov [ebp+var_1] bl +
mov eax edi +
xor ecx ecx +
mov [ebp+var_20] ecx +
mov [ebp+var_C] ebx +
cmp [eax] ebx +
jbe loc_102FCB1  +
mov esi [ebp+arg_C] +
mov [ebp+var_1C] ebx +
mov ebx [ebp+arg_0] +
mov edi [eax+4] +
mov edx [ebp+var_10] +
add edi [ebp+var_1C] +
mov byte ptr [ebp+arg_C+3] 0 +
mov [ebp+arg_0] ecx +
cmp ecx [edx] +
jnb loc_102FC9F  +
shl ecx 4 +
mov [ebp+var_14] ecx +
jmp loc_102FBD3  +
mov ecx [ebp+var_14] +
mov eax [ebp+var_10] +
mov eax [eax+4] +
add eax ecx +
push dword ptr [eax+4]  +
push dword ptr [edi+4]  +
call sub_102CE32  +
test eax eax +
jnz loc_102FC7E  +
mov ecx [ebp+arg_0] +
cmp [ebp+var_1] al +
jnz loc_102FC38  +
mov ecx [ebp+var_C] +
mov eax [ebp+arg_0] +
push ecx  +
push eax  +
call sub_102D22C  +
xor edx edx +
cmp eax edx +
jz loc_102FCC2  +
cmp [ebx+14h] edx +
ja loc_102FC5C  +
mov ecx [ebx+20h] +
cmp ecx edx +
jnz loc_102FC41  +
cmp [ebx+70h] edx +
jbe loc_102FC3D  +
mov ecx [esi+4] +
inc [ebp+var_8]  +
mov [eax] esi +
mov [eax+4] ecx +
mov [ecx] eax +
mov [esi+4] eax +
mov eax [ebp+var_8] +
cmp eax [ebx+70h] +
jnb loc_102FC99  +
jmp loc_102FC6C  +
mov eax [ebp+var_C] +
jmp loc_102FBFC  +
cmp ecx edx +
jz loc_102FC5C  +
cmp [ebx+70h] edx +
jbe loc_102FC5C  +
push [ebp+var_8]  +
push ebx  +
push eax  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_102FA51  +
add [ebp+var_8] eax +
jmp loc_102FC6C  +
mov ecx [esi+4] +
inc [ebp+var_8]  +
mov [eax] esi +
mov [eax+4] ecx +
mov [ecx] eax +
mov [esi+4] eax +
cmp byte ptr [ebp+arg_C+3] 0 +
jnz loc_102FC84  +
mov eax [ebp+arg_0] +
mov [ebp+var_20] eax +
mov byte ptr [ebp+arg_C+3] 1 +
jmp loc_102FC84  +
cmp byte ptr [ebp+arg_C+3] 0 +
jnz loc_102FC99  +
inc [ebp+arg_0]  +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
add [ebp+var_14] 10h +
cmp ecx [eax] +
jb loc_102FBD0  +
mov eax [ebp+var_18] +
mov ecx [ebp+var_20] +
inc [ebp+var_C]  +
mov edx [ebp+var_C] +
add [ebp+var_1C] 10h +
cmp edx [eax] +
jb loc_102FBB0  +
mov eax [ebp+arg_10] +
mov ecx [ebp+var_8] +
mov [eax] ecx +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
push esi  +
call sub_10245E8  +
xor al al +
jmp loc_102FCBB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_10] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_14] +
shl edi 4 +
add edi [ebx+4] +
lea eax [esi+8] +
push edi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call sub_102DE35  +
test byte ptr [esi+205h] 4 +
jz loc_102FD28  +
push edi  +
push [ebp+arg_C]  +
lea eax [esi+1B8h] +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push dword ptr [esi+1C0h]  +
push eax  +
call sub_102DEFA  +
test al al +
jnz loc_102FD28  +
xor eax eax +
jmp loc_102FD32  +
push [ebp+arg_14]  +
push ebx  +
push esi  +
call sub_102F8E0  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
mov ebx [ebp+arg_14] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp dword ptr [esi+14h] 1 +
mov [ebp+var_8] edi +
jbe loc_102FD77  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_102D851  +
test al al +
jz loc_102FE34  +
or [ebp+var_4] 0FFFFFFFFh +
jmp loc_102FD7E  +
mov eax [esi+1Ch] +
inc eax  +
mov [ebp+var_4] eax +
push [ebp+dwBytes]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+var_4]  +
call sub_102D192  +
mov esi [esi+70h] +
lea eax [ebp+dwBytes] +
push eax  +
push 10h  +
pop ecx  +
inc esi  +
mov eax esi +
mul  ecx +
push edx  +
push eax  +
call sub_101B8F5  +
test eax eax +
jl loc_102FE34  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [ebx+4] eax +
test eax eax +
jz loc_102FE34  +
mov eax [ebp+arg_0] +
lea ecx [ebp+dwBytes] +
push ecx  +
push 20h  +
pop ecx  +
mov [ebx] esi +
mov eax [eax+10h] +
mov [ebp+var_C] eax +
mul  ecx +
push edx  +
push eax  +
call sub_101B8F5  +
test eax eax +
jl loc_102FE34  +
and [ebp+arg_14] edi +
test esi esi +
jbe loc_102FE22  +
xor esi esi +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jz loc_102FE34  +
mov ecx [ebx+4] +
mov edx [ebp+var_C] +
inc [ebp+arg_14]  +
mov [esi+ecx] edx +
mov ecx [ebx+4] +
mov [esi+ecx+4] eax +
mov eax [ebp+arg_14] +
add esi 10h +
cmp eax [ebx] +
jb loc_102FDF0  +
mov eax [ebp+arg_C] +
mov esi [eax] +
and [ebp+arg_14] edi +
cmp eax esi +
jz loc_102FED5  +
jmp loc_102FE4D  +
push [ebp+arg_C]  +
call sub_10245E8  +
push ebx  +
call sub_102C774  +
or eax 0FFFFFFFFh +
jmp loc_102FED8  +
mov esi [ebp+dwBytes] +
push [ebp+var_4]  +
mov eax [esi] +
push esi  +
push [ebp+arg_8]  +
mov [ebp+dwBytes] eax +
push [ebp+arg_4]  +
test edi edi +
jnz loc_102FE6F  +
lea edi [ebp+var_10] +
mov [ebp+var_10] esi +
mov [ebp+var_C] 1 +
jmp loc_102FEAF  +
call sub_102D947  +
push eax  +
push [ebp+var_8]  +
call sub_102CE32  +
test eax eax +
jnz loc_102FE86  +
inc dword ptr [edi+4]  +
jmp loc_102FEB7  +
push [ebp+arg_14]  +
push ebx  +
push edi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102FCD1  +
push [ebp+var_4]  +
add [ebp+arg_14] eax +
push esi  +
push [ebp+arg_8]  +
mov [edi] esi +
push [ebp+arg_4]  +
mov dword ptr [edi+4] 1 +
call sub_102D947  +
mov [ebp+var_8] eax +
mov eax [ebp+dwBytes] +
cmp [ebp+arg_C] eax +
jnz loc_102FE4A  +
push [ebp+arg_14]  +
push ebx  +
push edi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102FCD1  +
add [ebp+arg_14] eax +
mov eax [ebp+arg_14] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_10] +
shl edi 4 +
add edi [ebx+4] +
lea eax [esi+8] +
push edi  +
push [ebp+dwBytes]  +
push [ebp+arg_4]  +
push eax  +
call sub_102E53C  +
test byte ptr [esi+205h] 4 +
jz loc_102FF35  +
push edi  +
push [ebp+dwBytes]  +
lea eax [esi+1B8h] +
push [ebp+arg_4]  +
push dword ptr [esi+1C0h]  +
push eax  +
call sub_102E5CD  +
test al al +
jnz loc_102FF35  +
xor eax eax +
jmp loc_102FF3F  +
push [ebp+arg_10]  +
push ebx  +
push esi  +
call sub_102F8E0  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor ebx ebx +
xor edi edi +
cmp dword ptr [esi+14h] 1 +
jbe loc_102FF79  +
push [ebp+arg_4]  +
push esi  +
call sub_102E040  +
test al al +
jz loc_1030063  +
mov eax [esi+10h] +
jmp loc_102FF7C  +
mov eax [esi+1Ch] +
push [ebp+arg_4]  +
mov [ebp+var_C] eax +
push eax  +
call sub_102D00B  +
mov esi [esi+70h] +
lea eax [ebp+dwBytes] +
push eax  +
push 10h  +
pop ecx  +
inc esi  +
mov eax esi +
mul  ecx +
push edx  +
push eax  +
call sub_101B8F5  +
test eax eax +
jl loc_1030063  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ecx [ebp+arg_8] +
mov [ecx+4] eax +
test eax eax +
jz loc_1030066  +
mov eax [ebp+arg_0] +
mov [ecx] esi +
mov eax [eax+10h] +
lea ecx [ebp+dwBytes] +
push ecx  +
push 20h  +
pop ecx  +
mov [ebp+var_10] eax +
mul  ecx +
push edx  +
push eax  +
call sub_101B8F5  +
test eax eax +
jl loc_1030063  +
and [ebp+var_4] ebx +
test esi esi +
jbe loc_1030028  +
xor esi esi +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [ebp+var_14] eax +
test eax eax +
jz loc_1030063  +
mov ecx [ebp+arg_8] +
mov eax [ecx+4] +
mov edx [ebp+var_10] +
inc [ebp+var_4]  +
mov [esi+eax] edx +
mov eax [ecx+4] +
mov edx [ebp+var_14] +
mov [eax+esi+4] edx +
mov eax [ebp+var_4] +
add esi 10h +
cmp eax [ecx] +
jb loc_102FFED  +
mov eax [ebp+arg_4] +
xor edx edx +
mov [ebp+var_4] edx +
mov [ebp+dwBytes] edx +
cmp [eax] edx +
jbe loc_10300D5  +
mov ecx [ebp+var_C] +
shl ecx 5 +
mov [ebp+var_C] ecx +
mov [ebp+var_10] edx +
mov esi [eax+4] +
add esi [ebp+var_10] +
test ebx ebx +
jnz loc_1030071  +
mov ecx [ebp+dwBytes] +
lea ebx [ebp+var_18] +
mov [ebp+var_18] ecx +
mov [ebp+var_14] 1 +
jmp loc_10300AE  +
mov ecx [ebp+arg_8] +
push ecx  +
call sub_102C774  +
or eax 0FFFFFFFFh +
jmp loc_10300D8  +
mov eax [esi+4] +
add eax [ebp+var_C] +
push eax  +
push edi  +
call sub_102CE32  +
test eax eax +
jnz loc_103008A  +
inc dword ptr [ebx+4]  +
mov eax [ebp+arg_4] +
jmp loc_10300B4  +
push [ebp+var_4]  +
push [ebp+arg_8]  +
push ebx  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_102FEE4  +
add [ebp+var_4] eax +
mov eax [ebp+dwBytes] +
mov [ebx] eax +
mov eax [ebp+arg_4] +
mov dword ptr [ebx+4] 1 +
mov edi [esi+4] +
add edi [ebp+var_C] +
inc [ebp+dwBytes]  +
mov ecx [ebp+dwBytes] +
add [ebp+var_10] 10h +
cmp ecx [eax] +
jb loc_1030047  +
push [ebp+var_4]  +
push [ebp+arg_8]  +
push ebx  +
push eax  +
push [ebp+arg_0]  +
call sub_102FEE4  +
add [ebp+var_4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi+4] +
xor eax eax +
inc eax  +
shl eax cl +
push edi  +
xor edi edi +
mov dword ptr [esi+14h] 20h +
lea ecx [eax-1] +
mov [esi+8] eax +
mov [esi+0Ch] ecx +
mov [esi+10h] edi +
inc dword ptr [esi+10h]  +
mov ecx [esi+10h] +
xor edx edx +
inc edx  +
shl edx cl +
cmp edx [esi+14h] +
jb loc_1030107  +
shl eax 5 +
mov [esi+1Ch] eax +
add eax 1Fh +
push eax  +
push 8  +
mov dword ptr [esi+18h] 3 +
mov [esi+24h] edi +
push hHeap  +
call ds:HeapAlloc  +
mov [esi+20h] eax +
cmp eax edi +
jnz loc_1030145  +
push 8  +
pop eax  +
jmp loc_1030199  +
mov ecx [esi+1Ch] +
add ecx 1Fh +
push ecx  +
push edi  +
push eax  +
call memset  +
mov eax [esi+20h] +
add eax 1Fh +
and eax 0FFFFFFE0h +
add esp 0Ch +
xor edx edx +
mov [esi+24h] eax +
cmp [esi+8] edi +
jbe loc_1030197  +
mov ecx [esi+10h] +
mov eax edx +
shl eax cl +
xor ecx ecx +
add eax [esi+24h] +
mov [eax] edi +
mov [eax+4] edi +
cmp [esi+18h] edi +
jbe loc_1030191  +
mov dword ptr [eax+ecx*8+0Ch] 1E3603Bh +
mov [eax+ecx*8+8] edi +
inc ecx  +
cmp ecx [esi+18h] +
jb loc_103017F  +
inc edx  +
cmp edx [esi+8] +
jb loc_1030169  +
xor eax eax +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebx  +
push edi  +
mov edi ecx +
xor ebx ebx +
cmp [edi+8] ebx +
jbe loc_10301CF  +
push esi  +
mov ecx [edi+10h] +
mov esi ebx +
shl esi cl +
mov ecx edi +
add esi [edi+24h] +
push esi  +
call sub_102F4F5  +
and dword ptr [esi] 0 +
and dword ptr [esi+4] 0 +
inc ebx  +
cmp ebx [edi+8] +
jb loc_10301AF  +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+20h] 0 +
mov dword ptr [esi] offset off_10033D4 +
jz loc_103020B  +
call sub_10301A1  +
mov eax [esi+20h] +
test eax eax +
jz loc_1030203  +
push eax  +
push 0  +
push hHeap  +
call ds:HeapFree  +
and dword ptr [esi+24h] 0 +
and dword ptr [esi+20h] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
xor eax eax +
push esi  +
mov esi ecx +
mov [ebp+var_8] eax +
cmp [ebp+arg_4] eax +
jnz loc_103022F  +
push 57h  +
pop eax  +
jmp loc_10302F8  +
push edi  +
mov edi [ebp+arg_0] +
cmp edi eax +
jz loc_10302F4  +
cmp [edi+4] eax +
jz loc_10302F4  +
call sub_102F4DE  +
test al al +
jnz loc_1030257  +
mov eax 65Ch +
jmp loc_10302F7  +
push ebx  +
push 1  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
mov ecx esi +
call sub_1045FFD  +
and [ebp+var_4] 0 +
cmp dword ptr [esi+18h] 0 +
mov ebx eax +
jbe loc_10302AF  +
mov eax [ebp+var_4] +
shl eax 3 +
mov ecx [eax+ebx+0Ch] +
cmp ecx 1E3603Bh +
jz loc_10302B3  +
cmp ecx [ebp+var_C] +
jnz loc_10302A4  +
mov edi [eax+ebx+8] +
mov eax [esi] +
push 0  +
push [ebp+arg_0]  +
mov ecx esi +
push edi  +
call dword ptr [eax]  +
push eax  +
call ds:RtlEqualUnicodeString  +
test al al +
jnz loc_10302E9  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [esi+18h] +
jb loc_1030272  +
mov edi [ebx] +
jmp loc_10302DE  +
xor edi edi +
jmp loc_10302E2  +
mov eax [esi] +
push edi  +
mov ecx esi +
call dword ptr [eax+4]  +
cmp eax [ebp+var_C] +
jnz loc_10302DB  +
mov eax [esi] +
push 0  +
push [ebp+arg_0]  +
mov ecx esi +
push edi  +
call dword ptr [eax]  +
push eax  +
call ds:RtlEqualUnicodeString  +
test al al +
jnz loc_10302E9  +
mov edi [edi+1Ch] +
test edi edi +
jnz loc_10302B7  +
mov [ebp+var_8] 490h +
mov eax [ebp+arg_4] +
mov [eax] edi +
mov eax [ebp+var_8] +
pop ebx  +
jmp loc_10302F7  +
push 57h  +
pop eax  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
test ebx ebx +
jnz loc_103031C  +
push 57h  +
pop eax  +
jmp loc_10303F3  +
mov eax [esi] +
push ebx  +
call dword ptr [eax]  +
mov ecx esi +
mov [ebp+var_8] eax +
call sub_102F4DE  +
test al al +
jnz loc_1030333  +
push 0Dh  +
jmp loc_1030316  +
mov eax [esi] +
push edi  +
push ebx  +
mov ecx esi +
call dword ptr [eax+4]  +
mov ecx esi +
cmp eax 1E3603Bh +
jnz loc_1030362  +
push 1  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_8]  +
call sub_1045FFD  +
push [ebp+var_4]  +
mov edi eax +
mov eax [esi] +
push ebx  +
mov ecx esi +
call dword ptr [eax+8]  +
jmp loc_103037C  +
mov eax [esi] +
push ebx  +
call dword ptr [eax+4]  +
mov [ebp+var_4] eax +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push 0  +
mov ecx esi +
call sub_1045FFD  +
mov edi eax +
xor ebx ebx +
cmp [esi+18h] ebx +
jbe loc_10303B4  +
mov eax [edi+ebx*8+0Ch] +
cmp eax 1E3603Bh +
jz loc_1030400  +
cmp eax [ebp+var_4] +
jnz loc_10303AE  +
mov eax [edi+ebx*8+8] +
mov edx [esi] +
push 0  +
push [ebp+var_8]  +
mov ecx esi +
push eax  +
call dword ptr [edx]  +
push eax  +
call ds:RtlEqualUnicodeString  +
test al al +
jnz loc_10303F9  +
inc ebx  +
cmp ebx [esi+18h] +
jb loc_1030383  +
mov ebx [edi] +
jmp loc_10303DF  +
mov eax [esi] +
push ebx  +
mov ecx esi +
call dword ptr [eax+4]  +
cmp eax [ebp+var_4] +
jnz loc_10303DC  +
mov eax [esi] +
push 0  +
push [ebp+var_8]  +
mov ecx esi +
push ebx  +
call dword ptr [eax]  +
push eax  +
call ds:RtlEqualUnicodeString  +
test al al +
jnz loc_10303F9  +
mov ebx [ebx+1Ch] +
test ebx ebx +
jnz loc_10303B8  +
mov ecx [edi] +
mov eax [ebp+arg_0] +
mov [eax+1Ch] ecx +
mov [edi] eax +
inc dword ptr [edi+4]  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
mov eax 0B7h +
jmp loc_10303F2  +
cmp ebx 0FFFFFFFFh +
jz loc_10303E3  +
mov ecx [ebp+var_4] +
lea eax [edi+ebx*8+8] +
mov [eax+4] ecx +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
jmp loc_10303ED  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
call sub_102F4B1  +
mov dword ptr [esi] offset off_10033E0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 14h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+0Ch] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
mov ecx [ebp+8] +
mov [ecx+0Ch] eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_10033E0 +
call sub_10301D7  +
test byte ptr [ebp+8] 1 +
jz loc_103049C  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov bx [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
add edi 0C38h +
mov ecx [edi] +
jmp loc_10304CB  +
mov eax ecx +
mov ecx [ecx] +
cmp [eax+8] bx +
jz loc_103052B  +
cmp edi ecx +
jnz loc_10304C1  +
cmp [ebp+arg_8] 0 +
jz loc_1030529  +
push 14h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_1030529  +
mov eax [edi+4] +
mov [esi] edi +
mov [esi+4] eax +
mov [eax] esi +
push 28h  +
mov [edi+4] esi +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jz loc_1030511  +
push 40h  +
mov ecx eax +
call sub_103041B  +
mov edi eax +
jmp loc_1030513  +
xor edi edi +
test edi edi +
jz loc_1030529  +
mov ecx edi +
call sub_10300E4  +
mov [esi+0Ch] edi +
mov [esi+8] bx +
mov eax esi +
jmp loc_103052B  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
movzx eax byte ptr [esi+35h] +
push edi  +
push eax  +
call sub_10429BF  +
mov byte ptr [ebp+arg_0] al +
test al al +
jz loc_103055D  +
cmp al 1 +
jnz loc_103060C  +
movzx eax word ptr [esi+36h] +
push 1  +
push [ebp+arg_4]  +
push eax  +
call sub_10304A8  +
mov edi eax +
test edi edi +
jnz loc_103057A  +
push 8  +
pop eax  +
jmp loc_103060E  +
mov ebx [edi+0Ch] +
push 4  +
pop eax  +
mov word ptr [ebp+var_8] ax +
mov word ptr [ebp+var_8+2] ax +
lea eax [esi+10h] +
mov [ebp+var_4] eax +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
mov ecx ebx +
call sub_1030212  +
test eax eax +
jz loc_10305F8  +
cmp eax 490h +
jnz loc_103060E  +
cmp byte ptr [ebp+arg_0] 0 +
jnz loc_103060C  +
push 20h  +
call ??2@YAPAXI@Z  +
mov edi eax +
pop ecx  +
test edi edi +
jz loc_10305C5  +
mov ecx edi +
call sub_102C4B8  +
jmp loc_10305C7  +
xor edi edi +
test edi edi +
jz loc_1030572  +
push edi  +
push [ebp+arg_8]  +
push esi  +
call sub_102C5ED  +
mov esi eax +
test esi esi +
jz loc_10305E8  +
push 1  +
mov ecx edi +
call sub_102C732  +
mov eax esi +
jmp loc_103060E  +
push edi  +
mov ecx ebx +
call sub_1030302  +
mov esi eax +
test esi esi +
jz loc_103060C  +
jmp loc_10305DB  +
push edi  +
push [ebp+arg_8]  +
push esi  +
push [ebp+arg_0]  +
push [ebp+arg_4]  +
call sub_102C658  +
test eax eax +
jnz loc_103060E  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_103066D  +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_103066C  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_103066B  +
cmp byte ptr [esi+20h] 0 +
jz loc_103066B  +
push [ebp+arg_0]  +
call sub_102C573  +
test eax eax +
jz loc_103066B  +
lea ecx [esi+28h] +
mov edx [ecx+4] +
mov [eax] ecx +
mov [eax+4] edx +
mov [edx] eax +
mov [ecx+4] eax +
inc dword ptr [esi+24h]  +
cmp dword ptr [edi+0C44h] 0 +
jz loc_103066B  +
push esi  +
push edi  +
push eax  +
call sub_1030537  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
movzx eax byte ptr [esi+35h] +
push eax  +
call sub_10429BF  +
push 0  +
push [ebp+arg_0]  +
mov bl al +
movzx eax word ptr [esi+36h] +
push eax  +
call sub_10304A8  +
test eax eax +
jnz loc_10306A5  +
xor eax eax +
jmp loc_103070B  +
mov eax [eax+0Ch] +
mov ecx [esi+10h] +
mov [ebp+arg_4] ecx +
push 4  +
pop ecx  +
mov word ptr [ebp+var_8] cx +
mov word ptr [ebp+var_8+2] cx +
lea ecx [ebp+arg_4] +
mov [ebp+var_4] ecx +
lea ecx [ebp+arg_0] +
push ecx  +
lea ecx [ebp+var_8] +
push ecx  +
mov ecx eax +
call sub_1030212  +
test eax eax +
jnz loc_10306A1  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi] +
jmp loc_1030704  +
mov ecx eax +
mov eax [eax] +
test bl bl +
jnz loc_10306EF  +
mov edx [ecx+8] +
cmp edx [esi+18h] +
jnz loc_1030704  +
mov edx [ecx+0Ch] +
jmp loc_10306FF  +
cmp bl 1 +
jnz loc_1030704  +
mov edx [ecx+20h] +
cmp edx [esi+18h] +
jnz loc_1030704  +
mov edx [ecx+24h] +
cmp edx [esi+1Ch] +
jz loc_1030711  +
cmp edi eax +
jnz loc_10306DA  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
mov eax [ecx+30h] +
neg eax  +
sbb eax eax +
and eax ecx +
jmp loc_103070A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1030676  +
test eax eax +
jz loc_103073E  +
push [ebp+arg_8]  +
push eax  +
call sub_102C8DE  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
fldz   +
push ebx  +
push esi  +
fst  [ebp+var_10] +
push edi  +
fstp  [ebp+var_8] +
mov edi [ebp+arg_C] +
xor ebx ebx +
push ebx  +
push offset aSysOpcode  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
mov esi [ebp+arg_10] +
test al al +
jz loc_1030797  +
push 4  +
pop eax  +
mov [esi] ax +
mov [esi+2] ax +
mov eax [ebp+arg_4] +
add eax 35h +
mov [esi+8] eax +
mov dword ptr [esi+10h] 1 +
jmp loc_1030A10  +
push ebx  +
push offset aSysTask  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jz loc_10307CA  +
push 6  +
pop eax  +
mov [esi] ax +
mov [esi+2] ax +
mov eax [ebp+arg_4] +
add eax 36h +
mov [esi+8] eax +
mov dword ptr [esi+10h] 2 +
jmp loc_1030A10  +
push ebx  +
push offset aSysProvidernam  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jz loc_1030811  +
xor eax eax +
inc eax  +
mov [esi] ax +
mov [esi+2] ax +
mov eax [ebp+arg_0] +
mov ecx [eax+10h] +
mov [esi+8] ecx +
mov eax [eax+10h] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_10307F7  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
mov [esi+10h] eax +
jmp loc_1030A10  +
push ebx  +
push offset aSysTid  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jz loc_103083D  +
push 8  +
pop eax  +
mov [esi] ax +
mov [esi+2] ax +
mov eax [ebp+arg_4] +
add eax 10h +
mov [esi+8] eax +
jmp loc_1030A09  +
push ebx  +
push offset aSysPid  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jz loc_1030863  +
push 8  +
pop eax  +
mov [esi] ax +
mov [esi+2] ax +
mov eax [ebp+arg_4] +
add eax 14h +
jmp loc_1030835  +
push ebx  +
push offset aSysActivityid  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jz loc_1030899  +
push 0Fh  +
pop eax  +
mov [esi] ax +
push 0Eh  +
pop eax  +
mov [esi+2] ax +
mov eax [ebp+arg_4] +
add eax 48h +
mov [esi+8] eax +
mov dword ptr [esi+10h] 10h +
jmp loc_1030A10  +
push ebx  +
push offset aSysTimestamp  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jz loc_10308CC  +
push 0Ah  +
pop eax  +
mov [esi] ax +
mov [esi+2] ax +
mov eax [ebp+arg_4] +
add eax 18h +
mov [esi+8] eax +
mov dword ptr [esi+10h] 8 +
jmp loc_1030A10  +
push ebx  +
push offset aSysKcpu  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jz loc_10308F5  +
push 8  +
pop eax  +
mov [esi] ax +
mov [esi+2] ax +
mov eax [ebp+arg_4] +
add eax 40h +
jmp loc_1030835  +
push ebx  +
push offset aSysUcpu  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jz loc_103091E  +
push 8  +
pop eax  +
mov [esi] ax +
mov [esi+2] ax +
mov eax [ebp+arg_4] +
add eax 44h +
jmp loc_1030835  +
push ebx  +
push offset aSysCpupercent  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jz loc_1030955  +
lea eax [ebp+var_10] +
push eax  +
cmp [ebp+arg_8] ebx +
jnz loc_1030948  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1030721  +
jmp loc_1030950  +
push [ebp+arg_8]  +
call sub_102C8DE  +
fld  [ebp+var_10] +
jmp loc_10309CA  +
push ebx  +
push offset aSysResponsetim  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jz loc_103098C  +
lea eax [ebp+var_10] +
push eax  +
cmp [ebp+arg_8] ebx +
jnz loc_103097F  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1030721  +
jmp loc_1030987  +
push [ebp+arg_8]  +
call sub_102C8DE  +
fld  [ebp+var_8] +
jmp loc_10309CA  +
push ebx  +
push offset aSysRequestrate  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jz loc_10309E4  +
mov eax stru_1079A28.dwLowDateTime +
sub eax SystemTimeAsFileTime.dwLowDateTime +
mov ecx stru_1079A28.dwHighDateTime +
sbb ecx SystemTimeAsFileTime.dwHighDateTime +
mov dword ptr [ebp+var_8] eax +
mov dword ptr [ebp+var_8+4] ecx +
fild  [ebp+var_8] +
fdiv  ds:dbl_10018C8 +
fld1   +
fdivrp st(1) st +
push 0Ch  +
fstp  qword ptr [esi+8] +
pop eax  +
mov [esi] ax +
mov [esi+2] ax +
mov dword ptr [esi+10h] 8 +
mov byte ptr [esi+19h] 1 +
jmp loc_1030A10  +
push ebx  +
push offset aSysAggregateco  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jz loc_1030A10  +
push 8  +
pop eax  +
mov [esi] ax +
mov [esi+2] ax +
mov [esi+8] ebx +
mov byte ptr [esi+19h] 1 +
mov dword ptr [esi+10h] 4 +
mov eax [ebp+arg_4] +
movzx eax word ptr [eax+0Ch] +
pop edi  +
mov [esi+1Ch] eax +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_18] +
xor ecx ecx +
push edi  +
cmp eax ecx +
jz loc_1030A8E  +
test byte ptr [eax+98h] 10h +
jz loc_1030A5C  +
push dword ptr [esi+4]  +
add eax 4 +
push eax  +
push ecx  +
push ebx  +
push [ebp+arg_0]  +
call sub_1030749  +
xor ecx ecx +
inc ecx  +
jmp loc_1030A8E  +
lea edi [eax+4] +
lea eax [ebp+arg_18] +
push eax  +
push edi  +
push [ebp+arg_4]  +
call sub_102C87D  +
test al al +
jnz loc_1030A77  +
xor al al +
jmp loc_1030BCA  +
push dword ptr [esi+4]  +
push [ebp+arg_18]  +
push edi  +
push ebx  +
push [ebp+arg_4]  +
call sub_102CB68  +
xor ecx ecx +
inc ecx  +
test al al +
jz loc_1030A70  +
mov edx [ebp+arg_10] +
mov eax [edx] +
cmp edx eax +
jz loc_1030B28  +
shl ecx 5 +
mov [ebp+arg_C] ecx +
jmp loc_1030AA6  +
mov eax [ebp+arg_8] +
lea edi [eax+48h] +
mov eax [eax] +
mov [ebp+arg_8] eax +
lea eax [edi+40h] +
push eax  +
lea eax [ebx+8] +
push eax  +
call sub_102CC80  +
test al al +
jz loc_1030ADE  +
test byte ptr [edi+0A9h] 1 +
jz loc_1030AE4  +
mov eax [esi+4] +
add eax [ebp+arg_C] +
add edi 18h +
push eax  +
push edi  +
push 0  +
push ebx  +
push [ebp+arg_0]  +
call sub_1030749  +
add [ebp+arg_C] 20h +
jmp loc_1030B1C  +
lea eax [ebp+arg_18] +
push eax  +
add edi 18h +
push edi  +
push [ebp+arg_4]  +
call sub_102C87D  +
test al al +
jz loc_1030A70  +
mov eax [esi+4] +
add eax [ebp+arg_C] +
push eax  +
push [ebp+arg_18]  +
push edi  +
push ebx  +
push [ebp+arg_4]  +
call sub_102CB68  +
add [ebp+arg_C] 20h +
test al al +
jz loc_1030A70  +
mov eax [ebp+arg_8] +
cmp [ebp+arg_10] eax +
jnz loc_1030AA3  +
mov ecx [ebp+arg_14] +
test ecx ecx +
jz loc_1030BC8  +
mov eax [ecx] +
cmp ecx eax +
jz loc_1030BC8  +
and [ebp+arg_10] 0 +
jmp loc_1030B46  +
mov eax [ebp+arg_8] +
lea edi [eax+48h] +
mov eax [eax] +
mov [ebp+arg_8] eax +
lea eax [edi+40h] +
push eax  +
lea eax [ebx+8] +
push eax  +
call sub_102CC80  +
test al al +
jz loc_1030B7E  +
test byte ptr [edi+0A9h] 1 +
jz loc_1030B84  +
mov eax [esi+0Ch] +
add eax [ebp+arg_10] +
add edi 18h +
push eax  +
push edi  +
push 0  +
push ebx  +
push [ebp+arg_0]  +
call sub_1030749  +
add [ebp+arg_10] 20h +
jmp loc_1030BBC  +
lea eax [ebp+arg_18] +
push eax  +
add edi 18h +
push edi  +
push [ebp+arg_4]  +
call sub_102C87D  +
test al al +
jz loc_1030A70  +
mov eax [esi+0Ch] +
add eax [ebp+arg_10] +
push eax  +
push [ebp+arg_18]  +
push edi  +
push ebx  +
push [ebp+arg_4]  +
call sub_102CB68  +
add [ebp+arg_10] 20h +
test al al +
jz loc_1030A70  +
mov eax [ebp+arg_8] +
cmp [ebp+arg_14] eax +
jnz loc_1030B43  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
xor ebx ebx +
add eax 28h +
mov esi [eax] +
push edi  +
jmp loc_1030C41  +
mov eax [ebp+arg_1C] +
mov edx [ebp+arg_18] +
lea edi [ebx+eax] +
mov eax edi +
shl eax 4 +
add eax [edx+4] +
mov ecx esi +
mov esi [esi] +
push eax  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_1030A26  +
test al al +
jz loc_1030C66  +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+14h] 0 +
ja loc_1030C3A  +
cmp [ebp+arg_C] 0 +
jnz loc_1030C3A  +
mov edx [eax+20h] +
test edx edx +
jnz loc_1030C52  +
mov ecx [eax+70h] +
test ecx ecx +
jbe loc_1030C4E  +
cmp edi ecx +
jnb loc_1030C45  +
inc ebx  +
mov eax [ebp+arg_8] +
add eax 28h +
cmp eax esi +
jnz loc_1030BEA  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 20h  +
test edx edx +
jz loc_1030C3A  +
cmp dword ptr [eax+70h] 0 +
jbe loc_1030C3A  +
push edi  +
push [ebp+arg_18]  +
push eax  +
call sub_102F8E0  +
add ebx eax +
jmp loc_1030C3B  +
or eax 0FFFFFFFFh +
jmp loc_1030C47  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx+14h] +
mov ecx [ebx+10h] +
mov [ebp+dwBytes] eax +
mov al [ebx+205h] +
shr al 2 +
and al 1 +
push esi  +
push edi  +
mov [ebp+arg_0] ecx +
jz loc_1030CA2  +
mov edx [ebx+1C0h] +
mov [ebp+var_C] edx +
jmp loc_1030CA6  +
and [ebp+var_C] 0 +
mov esi [ebp+arg_4] +
movzx eax al +
neg eax  +
sbb eax eax +
and [ebp+var_4] 0 +
lea edx [ebx+1B8h] +
and eax edx +
mov [ebp+var_20] eax +
test esi esi +
jz loc_1030CD1  +
lea eax [esi+58h] +
mov [ebp+var_8] eax +
mov al [esi+35h] +
lea ecx [esi+48h] +
jmp loc_1030CF1  +
test ecx ecx +
jbe loc_1030E82  +
mov eax [ebx+8] +
lea ecx [eax+0B0h] +
mov [ebp+var_8] ecx +
lea ecx [eax+0A0h] +
mov al [eax+8Dh] +
and al 1 +
push ecx  +
mov byte ptr [ebp+var_10] al +
call sub_102534C  +
mov edi [ebp+arg_8] +
mov [ebp+var_18] eax +
test eax eax +
jz loc_1030E7C  +
test esi esi +
jnz loc_1030D22  +
cmp [ebx+14h] esi +
jnz loc_1030D22  +
mov ecx [ebx+70h] +
test ecx ecx +
jbe loc_1030D22  +
lea esi [ecx+1] +
mov [ebp+var_4] esi +
jmp loc_1030D64  +
mov ecx [ebp+var_8] +
movzx ecx byte ptr [ecx+2] +
lea eax [eax+ecx*8+2Ch] +
mov esi [eax] +
mov [ebp+var_14] eax +
cmp eax esi +
jz loc_1030E7C  +
push 0  +
push [ebp+var_10]  +
mov [ebp+arg_8] esi +
push [ebp+var_8]  +
mov esi [esi] +
push [ebp+arg_8]  +
call sub_102CCCC  +
test al al +
jz loc_1030D5C  +
mov eax [ebp+arg_8] +
mov eax [eax+24h] +
add [ebp+var_4] eax +
cmp [ebp+var_14] esi +
jnz loc_1030D3A  +
mov esi [ebp+var_4] +
test esi esi +
jbe loc_1030E7C  +
mov eax esi +
shl eax 4 +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [edi+4] eax +
test eax eax +
jz loc_1030E7C  +
cmp [ebp+arg_4] 0 +
mov eax [ebp+arg_0] +
mov [edi] esi +
mov [ebp+arg_8] eax +
jnz loc_1030D9F  +
cmp [ebp+dwBytes] 1 +
jbe loc_1030DA3  +
inc eax  +
mov [ebp+arg_8] eax +
and [ebp+arg_0] 0 +
test esi esi +
jbe loc_1030E1D  +
mov eax [ebp+arg_8] +
shl eax 5 +
mov [ebp+dwBytes] eax +
xor esi esi +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jz loc_1030E7C  +
cmp [ebp+var_C] 0 +
mov ecx [edi+4] +
mov edx [ebp+arg_8] +
mov [esi+ecx] edx +
mov ecx [edi+4] +
mov [esi+ecx+4] eax +
jbe loc_1030E0F  +
mov eax [ebp+var_C] +
shl eax 5 +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jz loc_1030E7C  +
mov ecx [edi+4] +
mov edx [ebp+var_C] +
mov [esi+ecx+8] edx +
mov ecx [edi+4] +
mov [esi+ecx+0Ch] eax +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
add esi 10h +
cmp eax [ebp+var_4] +
jb loc_1030DB6  +
mov eax [ebp+var_8] +
movzx eax byte ptr [eax+2] +
mov ecx [ebp+var_18] +
and [ebp+arg_0] 0 +
lea eax [ecx+eax*8+2Ch] +
mov esi [eax] +
mov [ebp+var_14] eax +
cmp eax esi +
jz loc_1030E77  +
push 0  +
push [ebp+var_10]  +
mov [ebp+arg_8] esi +
push [ebp+var_8]  +
mov esi [esi] +
push [ebp+arg_8]  +
call sub_102CCCC  +
test al al +
jz loc_1030E72  +
push [ebp+arg_0]  +
lea eax [ebx+8] +
push edi  +
push [ebp+var_20]  +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+var_18]  +
push ebx  +
call sub_1030BD6  +
test eax eax +
jl loc_1030E7C  +
add [ebp+arg_0] eax +
cmp [ebp+var_14] esi +
jnz loc_1030E38  +
mov eax [ebp+arg_0] +
jmp loc_1030E84  +
push edi  +
call sub_102C774  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1030676  +
mov esi eax +
test esi esi +
jnz loc_1030EB4  +
mov eax 490h +
jmp loc_1031055  +
mov eax [esi+18h] +
mov [ebp+var_8] eax +
mov eax [esi+30h] +
mov [ebp+var_10] eax +
mov eax [ebp+arg_8] +
push ebx  +
mov ebx [eax] +
push edi  +
cmp eax ebx +
jz loc_1030F8A  +
and [ebp+var_4] 0 +
lea edi [ebx+48h] +
mov ebx [ebx] +
lea eax [edi+40h] +
push eax  +
mov eax [ebp+var_8] +
add eax 8 +
push eax  +
call sub_102CC80  +
test al al +
jz loc_1030EF7  +
mov eax [ebp+var_8] +
mov [ebp+arg_4] eax +
mov eax [esi+1Ch] +
jmp loc_1030F18  +
lea eax [edi+40h] +
push eax  +
mov eax [ebp+var_10] +
add eax 8 +
push eax  +
call sub_102CC80  +
test al al +
jz loc_1031061  +
mov eax [ebp+var_10] +
mov [ebp+arg_4] eax +
mov eax [esi+34h] +
test byte ptr [edi+0A9h] 1 +
mov [ebp+var_C] eax +
jz loc_1030F44  +
mov eax [ebp+arg_10] +
mov eax [eax+4] +
add eax [ebp+var_4] +
add edi 18h +
push eax  +
push edi  +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1030749  +
add [ebp+var_4] 20h +
jmp loc_1030F81  +
lea eax [ebp+var_14] +
push eax  +
add edi 18h +
push edi  +
push [ebp+var_C]  +
call sub_102C87D  +
test al al +
jz loc_103105A  +
mov eax [ebp+arg_10] +
mov eax [eax+4] +
add eax [ebp+var_4] +
add [ebp+var_4] 20h +
push eax  +
push [ebp+var_14]  +
push edi  +
push [ebp+arg_4]  +
push [ebp+var_C]  +
call sub_102CB68  +
test al al +
jz loc_103105A  +
cmp [ebp+arg_8] ebx +
jnz loc_1030ED3  +
mov ecx [ebp+arg_C] +
test ecx ecx +
jz loc_1031051  +
mov eax [ecx] +
cmp ecx eax +
jz loc_1031051  +
mov ecx [ebp+var_8] +
add ecx 8 +
and [ebp+arg_8] 0 +
mov [ebp+var_4] ecx +
jmp loc_1030FB1  +
mov eax [ebp+var_C] +
lea edi [eax+48h] +
mov eax [eax] +
lea ebx [edi+40h] +
push ebx  +
push [ebp+var_4]  +
mov [ebp+var_C] eax +
call sub_102CC80  +
test al al +
jz loc_1030FD4  +
mov eax [ebp+var_8] +
mov ebx [esi+1Ch] +
mov [ebp+arg_4] eax +
jmp loc_1030FEB  +
push ebx  +
mov ebx [ebp+var_10] +
lea eax [ebx+8] +
push eax  +
call sub_102CC80  +
test al al +
jz loc_1031061  +
mov [ebp+arg_4] ebx +
mov ebx [esi+34h] +
test byte ptr [edi+0A9h] 1 +
jz loc_1031014  +
mov eax [ebp+arg_10] +
mov eax [eax+0Ch] +
add eax [ebp+arg_8] +
add edi 18h +
push eax  +
push edi  +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1030749  +
add [ebp+arg_8] 20h +
jmp loc_1031045  +
lea eax [ebp+var_14] +
push eax  +
add edi 18h +
push edi  +
push ebx  +
call sub_102C87D  +
test al al +
jz loc_103105A  +
mov eax [ebp+arg_10] +
mov eax [eax+0Ch] +
add eax [ebp+arg_8] +
add [ebp+arg_8] 20h +
push eax  +
push [ebp+var_14]  +
push edi  +
push [ebp+arg_4]  +
push ebx  +
call sub_102CB68  +
test al al +
jz loc_103105A  +
mov eax [ebp+var_C] +
cmp [ebp+arg_C] eax +
jnz loc_1030FAE  +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 14h  +
mov eax 54Fh +
jmp loc_1031053  +
mov eax 490h +
jmp loc_1031053  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
push ebx  +
add eax 28h +
push esi  +
mov esi [eax] +
xor ebx ebx +
push edi  +
mov [ebp+arg_8] eax +
cmp eax esi +
jz loc_10310CA  +
mov eax [ebp+arg_18] +
mov edx [ebp+arg_14] +
lea edi [ebx+eax] +
mov eax edi +
shl eax 4 +
add eax [edx+4] +
mov ecx esi +
mov esi [esi] +
push eax  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push ecx  +
push [ebp+arg_4]  +
call sub_1030E90  +
test eax eax +
jnz loc_10310EE  +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+14h] 0 +
ja loc_10310EB  +
mov edx [eax+20h] +
test edx edx +
jnz loc_10310D7  +
mov ecx [eax+70h] +
test ecx ecx +
jbe loc_10310D3  +
cmp edi ecx +
jb loc_10310F5  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 1Ch  +
test edx edx +
jz loc_10310EB  +
cmp dword ptr [eax+70h] 0 +
jbe loc_10310EB  +
push edi  +
push [ebp+arg_14]  +
push eax  +
call sub_102F8E0  +
add ebx eax +
jmp loc_10310F5  +
inc ebx  +
jmp loc_10310F5  +
cmp eax 490h +
jnz loc_10310FC  +
cmp [ebp+arg_8] esi +
jnz loc_1031086  +
jmp loc_10310CA  +
or eax 0FFFFFFFFh +
jmp loc_10310CC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
and [ebp+var_C] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+14h] +
mov [ebp+dwBytes] eax +
mov eax [esi+10h] +
mov [ebp+arg_0] eax +
mov al [esi+205h] +
shr al 2 +
and al 1 +
push edi  +
jz loc_103113C  +
mov ecx [esi+1C0h] +
mov [ebp+var_8] ecx +
jmp loc_1031140  +
and [ebp+var_8] 0 +
mov edi [esi+8] +
movzx ebx al +
neg ebx  +
lea eax [esi+1D4h] +
lea ecx [esi+1B8h] +
sbb ebx ebx +
push eax  +
and ebx ecx +
mov [ebp+var_24] edi +
call sub_102534C  +
mov [ebp+var_1C] eax +
test eax eax +
jz loc_103132C  +
mov cl [edi+8Dh] +
and cl 1 +
mov byte ptr [ebp+var_18] cl +
mov cl [esi+204h] +
shr cl 7 +
mov byte ptr [ebp+var_14] cl +
movzx ecx byte ptr [edi+0B2h] +
lea eax [eax+ecx*8+2Ch] +
mov edi [eax] +
mov [ebp+var_10] eax +
cmp eax edi +
jz loc_103132C  +
push [ebp+var_14]  +
mov [ebp+var_4] edi +
push [ebp+var_18]  +
mov edi [edi] +
push esi  +
push [ebp+var_4]  +
call sub_102CD9D  +
test al al +
jz loc_10311C1  +
mov eax [ebp+var_4] +
mov eax [eax+24h] +
test eax eax +
jbe loc_10311C1  +
add [ebp+var_C] eax +
cmp [ebp+var_10] edi +
jnz loc_103119C  +
mov edi [ebp+var_C] +
test edi edi +
jbe loc_103132C  +
mov eax edi +
shl eax 4 +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ecx [ebp+arg_4] +
mov [ecx+4] eax +
test eax eax +
jz loc_103132C  +
cmp [ebp+dwBytes] 1 +
mov eax [ebp+arg_0] +
mov [ecx] edi +
jbe loc_10311FF  +
inc eax  +
and [ebp+arg_0] 0 +
mov [ebp+var_4] eax +
test edi edi +
jbe loc_10312B0  +
push 20h  +
pop ecx  +
mul  ecx +
mov [ebp+var_2C] eax +
mov [ebp+var_28] edx +
xor edi edi +
lea eax [ebp+dwBytes] +
push eax  +
push [ebp+var_28]  +
push [ebp+var_2C]  +
call sub_101B8F5  +
test eax eax +
jl loc_103132C  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [ebp+var_10] eax +
test eax eax +
jz loc_103132C  +
cmp [ebp+var_8] 0 +
mov ecx [ebp+arg_4] +
mov eax [ecx+4] +
mov edx [ebp+var_4] +
mov [edi+eax] edx +
mov eax [ecx+4] +
mov ecx [ebp+var_10] +
mov [edi+eax+4] ecx +
jbe loc_103129E  +
mov eax [ebp+var_8] +
shl eax 5 +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jz loc_103132C  +
mov ecx [ebp+arg_4] +
mov ecx [ecx+4] +
mov edx [ebp+var_8] +
mov [edi+ecx+8] edx +
mov ecx [ebp+arg_4] +
mov ecx [ecx+4] +
mov [edi+ecx+0Ch] eax +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
add edi 10h +
cmp eax [ebp+var_C] +
jb loc_103121B  +
mov eax [ebp+var_24] +
movzx eax byte ptr [eax+0B2h] +
mov ecx [ebp+var_1C] +
and [ebp+arg_0] 0 +
lea eax [ecx+eax*8+2Ch] +
mov edi [eax] +
mov [ebp+var_10] eax +
cmp eax edi +
jz loc_1031322  +
push [ebp+var_14]  +
mov [ebp+var_4] edi +
push [ebp+var_18]  +
mov edi [edi] +
push esi  +
push [ebp+var_4]  +
call sub_102CD9D  +
test al al +
jz loc_103131D  +
mov ecx [ebp+var_4] +
cmp dword ptr [ecx+24h] 0 +
jbe loc_103131D  +
push [ebp+arg_0]  +
lea eax [esi+8] +
push [ebp+arg_4]  +
push ebx  +
push eax  +
push ecx  +
push [ebp+var_1C]  +
push esi  +
call sub_103106D  +
test eax eax +
jl loc_103132C  +
add [ebp+arg_0] eax +
cmp dword ptr [esi+20h] 0 +
jnz loc_103131D  +
mov eax [esi+70h] +
test eax eax +
jbe loc_103131D  +
cmp [ebp+arg_0] eax +
jnb loc_1031322  +
cmp [ebp+var_10] edi +
jnz loc_10312CE  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
push [ebp+arg_4]  +
call sub_102C774  +
or eax 0FFFFFFFFh +
jmp loc_1031325  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
xor eax eax +
push ebx  +
push esi  +
push edi  +
mov esi [ebp+dwBytes] +
lea edi [ebp+var_8] +
stos   +
stos   +
xor eax eax +
lea edi [ebp+var_20] +
stos   +
stos   +
xor eax eax +
lea edi [ebp+var_28] +
stos   +
stos   +
xor eax eax +
test byte ptr [esi+205h] 2 +
lea edi [ebp+var_10] +
stos   +
stos   +
lea eax [ebp+var_18] +
mov [ebp+var_14] eax +
mov [ebp+var_18] eax +
jz loc_103146D  +
lea eax [ebp+var_20] +
push eax  +
lea eax [esi+78h] +
push eax  +
push esi  +
call sub_1030C70  +
test eax eax +
jz loc_103145C  +
lea eax [ebp+var_28] +
push eax  +
lea eax [esi+118h] +
push eax  +
push esi  +
call sub_1030C70  +
test eax eax +
jz loc_103145C  +
lea eax [ebp+dwBytes] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
push esi  +
call sub_102FB54  +
test al al +
jz loc_103145C  +
xor ebx ebx +
cmp [esi+14h] ebx +
jbe loc_103143E  +
cmp [esi+70h] ebx +
jbe loc_1031424  +
cmp [esi+20h] ebx +
jz loc_1031424  +
lea eax [ebp+var_10] +
push eax  +
push [ebp+dwBytes]  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
push esi  +
call sub_102FD3E  +
cmp eax ebx +
jl loc_103145C  +
mov [ebp+var_10] eax +
lea eax [ebp+var_10] +
push eax  +
push esi  +
push [ebp+lpBuffer]  +
call sub_102EAFE  +
mov eax [esi+70h] +
inc eax  +
mov [ebp+var_10] eax +
lea eax [ebp+var_18] +
push eax  +
call sub_10245E8  +
lea eax [ebp+var_10] +
push eax  +
call sub_102C774  +
jmp loc_103145C  +
push [ebp+dwBytes]  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
push esi  +
push [ebp+lpBuffer]  +
call sub_102DD26  +
jmp loc_1031453  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_20] +
push eax  +
push esi  +
push [ebp+lpBuffer]  +
call sub_102E974  +
lea eax [ebp+var_18] +
push eax  +
call sub_10245E8  +
lea eax [ebp+var_20] +
push eax  +
call sub_102C774  +
lea eax [ebp+var_28] +
jmp loc_10314FA  +
xor ebx ebx +
lea eax [ebp+var_8] +
push eax  +
cmp [esi+74h] bl +
jz loc_1031484  +
push esi  +
call sub_1031106  +
cmp eax ebx +
jl loc_1031500  +
jmp loc_103148F  +
push ebx  +
push esi  +
call sub_1030C70  +
cmp eax ebx +
jz loc_1031500  +
mov edi [ebp+var_8] +
mov [ebp+var_8] eax +
cmp [esi+14h] ebx +
jbe loc_10314E7  +
cmp [esi+70h] ebx +
jbe loc_10314D8  +
cmp [esi+20h] ebx +
jz loc_10314D8  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push esi  +
call sub_102FF4B  +
cmp eax ebx +
jle loc_10314F4  +
mov [ebp+var_10] eax +
lea eax [ebp+var_10] +
push eax  +
push esi  +
push [ebp+lpBuffer]  +
call sub_102EAFE  +
mov eax [esi+70h] +
inc eax  +
mov [ebp+var_10] eax +
lea eax [ebp+var_10] +
push eax  +
call sub_102C774  +
jmp loc_10314F4  +
lea eax [ebp+var_8] +
push eax  +
push esi  +
push [ebp+lpBuffer]  +
call sub_102E440  +
jmp loc_10314F4  +
lea eax [ebp+var_8] +
push eax  +
push esi  +
push [ebp+lpBuffer]  +
call sub_102EAFE  +
lea eax [ebp+var_8] +
mov [ebp+var_8] edi +
push eax  +
call sub_102C774  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+lpBuffer]  +
push offset aHeader  +
call sub_1023CCF  +
mov edi [ebp+arg_4] +
test byte ptr [edi+204h] 20h +
jz loc_1031540  +
push dword ptr [edi+6Ch]  +
push offset aThresholdTyp_0  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 0Ch +
lea eax [edi+20h] +
cmp dword ptr [eax] 0 +
jz loc_1031551  +
push eax  +
push [ebp+lpBuffer]  +
call sub_102EB83  +
lea ebx [edi+8] +
mov esi [ebx] +
jmp loc_1031565  +
mov eax esi +
mov esi [esi] +
push eax  +
push [ebp+lpBuffer]  +
call sub_102EBE1  +
cmp ebx esi +
jnz loc_1031558  +
lea eax [edi+1B8h] +
push eax  +
push [ebp+lpBuffer]  +
call sub_102ECE2  +
push [ebp+lpBuffer]  +
push offset aHeader_0  +
call sub_1023CCF  +
push edi  +
push [ebp+lpBuffer]  +
call sub_103133E  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+NumberOfBytesWritten] +
lea eax [esi+2Ch] +
push eax  +
push offset aTableNameWz  +
push edi  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+204h] 2 +
jz loc_10315D4  +
lea eax [esi+40h] +
push eax  +
push offset aTopicWz  +
push edi  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+204h] 8 +
jz loc_10315EE  +
push dword ptr [esi+64h]  +
push offset aLevelD  +
push edi  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+204h] 10h +
jz loc_1031608  +
push dword ptr [esi+68h]  +
push offset aKeyD  +
push edi  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+204h] 4 +
jz loc_1031623  +
lea eax [esi+54h] +
push eax  +
push offset aNoteWz  +
push edi  +
call sub_1024264  +
add esp 0Ch +
push edi  +
push offset asc_10031B4  +
call sub_1023CCF  +
push esi  +
push edi  +
call sub_103150C  +
push edi  +
push offset aTable  +
call sub_1023CCF  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
test byte ptr [edi+6Ch] 8 +
jnz loc_1031699  +
push dword ptr [edi+54h]  +
lea eax [edi+44h] +
push eax  +
push offset aSectionNameWzK  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 10h +
test byte ptr [edi+6Ch] 4 +
jz loc_103168F  +
lea eax [edi+5Ch] +
push eax  +
push offset aNoteWz_0  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 0Ch +
jmp loc_10316A6  +
push [ebp+lpBuffer]  +
push offset asc_10031B4  +
jmp loc_10316A1  +
push [ebp+lpBuffer]  +
push offset aSection  +
call sub_1023CCF  +
lea ebx [edi+8] +
mov esi [ebx] +
jmp loc_10316BA  +
mov eax esi +
mov esi [esi] +
push eax  +
push [ebp+lpBuffer]  +
call sub_103159A  +
cmp ebx esi +
jnz loc_10316AD  +
add edi 10h +
mov esi [edi] +
jmp loc_10316D2  +
mov eax esi +
mov esi [esi] +
push eax  +
push [ebp+lpBuffer]  +
call sub_102EFE3  +
cmp edi esi +
jnz loc_10316C5  +
push [ebp+lpBuffer]  +
push offset aSection_0  +
call sub_1023CCF  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_1079B5C +
test eax eax +
jz loc_103172E  +
push edi  +
mov edi [eax+24h] +
test edi edi +
jz loc_103172D  +
push esi  +
mov esi [edi] +
jmp loc_1031717  +
mov eax esi +
mov esi [esi] +
push eax  +
push [ebp+NumberOfBytesWritten]  +
call sub_103164B  +
cmp edi esi +
jnz loc_103170A  +
push [ebp+NumberOfBytesWritten]  +
call sub_10319B9  +
push edi  +
push [ebp+NumberOfBytesWritten]  +
call sub_102F34E  +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_1031750  +
cmp [esi] al +
jz loc_103174C  +
inc esi  +
dec edx  +
jnz loc_1031744  +
test edx edx +
jnz loc_1031755  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_1031766  +
test eax eax +
jl loc_1031763  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_103179C  +
cmp [ebp+arg_4] eax +
jz loc_1031798  +
mov dl [ebx] +
test dl dl +
jz loc_1031798  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1031780  +
test esi esi +
jnz loc_10317A3  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10317AF  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
xor esi esi +
mov al [esi+edi] +
test al al +
jz loc_10317FE  +
movzx eax al +
push eax  +
call ds:isprint  +
pop ecx  +
test eax eax +
jz loc_10317F4  +
mov al [esi+edi] +
cmp al 9 +
jz loc_10317F4  +
cmp al 8 +
jz loc_10317F4  +
cmp al 0Ah +
jz loc_10317F4  +
cmp al 27h +
jz loc_10317F4  +
cmp al 22h +
jnz loc_10317F8  +
mov byte ptr [esi+edi] 3Fh +
inc esi  +
cmp esi [ebp+arg_4] +
jbe loc_10317C7  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
mov edi [eax] +
cmp edi eax +
jz loc_103186F  +
push esi  +
mov esi edi +
movzx eax word ptr [esi+14h] +
mov edi [edi] +
push 0  +
push eax  +
push dword ptr [esi+10h]  +
push [ebp+arg_4]  +
call sub_102165E  +
test eax eax +
jz loc_1031869  +
mov ecx [esi+20h] +
add [eax+20h] ecx +
mov ecx [esi+1Ch] +
add [eax+1Ch] ecx +
mov ecx [esi+2Ch] +
add [eax+2Ch] ecx +
mov ecx [esi+30h] +
add [eax+30h] ecx +
add esi 8 +
cmp [ebp+arg_8] 0 +
jz loc_103185D  +
push 1  +
push [ebp+arg_4]  +
jmp loc_1031863  +
push 0  +
add eax 8 +
push eax  +
push esi  +
call sub_103180B  +
cmp edi [ebp+arg_0] +
jnz loc_103181B  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax [ebp+FileTime.dwLowDateTime] +
mov ecx [ebp+FileTime.dwHighDateTime] +
push esi  +
push edi  +
mov [ebp+var_8] eax +
mov [ebp+FileTime.dwLowDateTime] eax +
lea eax [ebp+SystemTime] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
xor esi esi +
xor edi edi +
mov [ebp+var_4] ecx +
mov [ebp+FileTime.dwHighDateTime] ecx +
call ds:FileTimeToSystemTime  +
cmp eax 1 +
jnz loc_10318E5  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+SystemTime] +
push eax  +
mov eax dword_10566D8 +
add eax 5D4h +
push eax  +
call ds:TzSpecificLocalTimeToSystemTime  +
cmp eax 1 +
jnz loc_10318E5  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
call ds:SystemTimeToFileTime  +
cmp eax 1 +
jnz loc_10318E5  +
mov eax [ebp+var_4] +
mov esi [ebp+var_8] +
mov edi eax +
mov edx edi +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push dword ptr [esi+4]  +
mov edi [ebp+NumberOfBytesWritten] +
push offset aTableNameWs  +
push edi  +
call sub_1024264  +
add esp 0Ch +
push edi  +
push offset aHeader_1  +
call sub_1023CCF  +
cmp dword ptr [esi+8] 0 +
push edi  +
jnz loc_1031936  +
push offset aSortFieldDispl  +
call sub_1023CCF  +
push edi  +
push offset aThresholdTyp_1  +
jmp loc_1031951  +
push offset aSortFieldIns_0  +
call sub_1023CCF  +
push edi  +
push offset aSortFieldDispl  +
call sub_1023CCF  +
push edi  +
push offset aThresholdTyp_2  +
call sub_1023CCF  +
push edi  +
push offset aDataNameDispla  +
call sub_1023CCF  +
cmp dword ptr [esi+8] 0 +
jz loc_1031972  +
push edi  +
push offset aDataNameInstan  +
call sub_1023CCF  +
cmp dword ptr [esi] 0 +
jz loc_1031982  +
push edi  +
push offset aDataNameMachin  +
call sub_1023CCF  +
push edi  +
push offset aDataNameMean_0  +
call sub_1023CCF  +
push edi  +
push offset aDataNameMinCla  +
call sub_1023CCF  +
push edi  +
push offset aDataNameMaxCla  +
call sub_1023CCF  +
push edi  +
push offset aHeader_2  +
call sub_1023CCF  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi dword_1079B4C +
cmp esi offset dword_1079B4C +
jz loc_1031AB6  +
push ebx  +
push edi  +
push [ebp+lpBuffer]  +
push offset aStringtable  +
call sub_1023CCF  +
mov ebx offset aString_0 +
jmp loc_10319ED  +
mov esi [ebp+var_4] +
mov eax [esi] +
mov [ebp+var_4] eax +
mov eax [esi+8] +
push dword ptr [eax+4]  +
push offset aStringIdWs  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov eax [esi+0Ch] +
add esp 0Ch +
push dword ptr [eax+4]  +
push 0  +
push 1  +
push [ebp+lpBuffer]  +
call sub_101D200  +
push [ebp+lpBuffer]  +
push ebx  +
call sub_1023CCF  +
lea eax [esi+10h] +
mov edi [eax] +
jmp loc_1031AA3  +
mov eax edi +
mov edi [edi] +
mov [ebp+var_C] eax +
mov eax [eax+8] +
mov ecx [eax+4] +
mov eax [esi+8] +
mov eax [eax+4] +
mov dword ptr [ebp+var_8] ecx +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1031A66  +
test dx dx +
jz loc_1031A62  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1031A66  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_1031A40  +
xor eax eax +
jmp loc_1031A6B  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_1031AA0  +
push dword ptr [ebp+var_8]  +
push offset aStringIdWs  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov eax [ebp+var_C] +
mov eax [eax+0Ch] +
add esp 0Ch +
push dword ptr [eax+4]  +
push 0  +
push 1  +
push [ebp+lpBuffer]  +
call sub_101D200  +
push [ebp+lpBuffer]  +
push ebx  +
call sub_1023CCF  +
lea eax [esi+10h] +
cmp eax edi +
jnz loc_1031A2A  +
cmp [ebp+var_4] offset dword_1079B4C +
jnz loc_10319EA  +
pop edi  +
pop ebx  +
cmp dword_1079B4C offset dword_1079B4C +
pop esi  +
jz locret_1031AD0  +
push [ebp+lpBuffer]  +
push offset aStringtable_0  +
call sub_1023CCF  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push edi  +
cmp [ebp+lpLibFileName] esi +
jz loc_1031AFB  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryW  +
mov esi eax +
mov eax 0A00h +
test esi esi +
jnz loc_1031B00  +
mov eax 1200h +
xor edi edi +
push edi  +
push [ebp+nSize]  +
push [ebp+lpBuffer]  +
push 400h  +
push [ebp+dwMessageId]  +
push esi  +
push eax  +
call ds:FormatMessageW  +
test eax eax +
jnz loc_1031B33  +
call ds:GetLastError  +
test eax eax +
jle loc_1031B31  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test esi esi +
jz loc_1031B3E  +
push esi  +
call ds:FreeLibrary  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 808h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpFileName] +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_808] eax +
test eax eax +
jz loc_1031CA3  +
push esi  +
push 0  +
push 1  +
push eax  +
call sub_1024012  +
mov esi eax +
test esi esi +
jz loc_1031CA2  +
push esi  +
push 0FEFFh  +
call sub_1023ECA  +
push esi  +
push offset a?xmlVersion1_0  +
call sub_1023CCF  +
test dword ptr [edi+78h] 40000h +
jnz loc_1031BBF  +
mov eax [edi+3Ch] +
test eax eax +
jz loc_1031BBF  +
push eax  +
push offset a?xmlStylesheet  +
push esi  +
call sub_1024264  +
add esp 0Ch +
push ebx  +
push 1  +
push 6  +
push dword ptr [edi+84h]  +
push offset aReportNameTrac  +
push esi  +
call sub_1024264  +
add esp 14h +
push esi  +
push offset aSectionKey9000  +
call sub_1023CCF  +
mov ebx dword ptr [ebp+arg_4] +
push ebx  +
push offset aDataNameErrorc  +
push esi  +
call sub_1024264  +
add esp 0Ch +
mov edi 400h +
cmp ebx 6 +
jnz loc_1031C20  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push 0  +
call ds:LoadStringW  +
test eax eax +
jle loc_1031C20  +
lea eax [ebp+Buffer] +
test eax eax +
jnz loc_1031C53  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push 0  +
push ebx  +
call sub_1031AD9  +
test eax eax +
jge loc_1031C53  +
push edi  +
lea eax [ebp+Buffer] +
push eax  +
push offset aPdh_dll  +
push ebx  +
call sub_1031AD9  +
test eax eax +
jge loc_1031C53  +
push esi  +
push offset aDataNameErrorm  +
jmp loc_1031C75  +
push esi  +
push offset aDataNameErro_0  +
call sub_1023CCF  +
lea eax [ebp+Buffer] +
push eax  +
push 0  +
push 1  +
push esi  +
call sub_101D200  +
push esi  +
push offset aData  +
call sub_1023CCF  +
push esi  +
push offset aItemTableSecti  +
call sub_1023CCF  +
push esi  +
push offset aReport  +
call sub_1023CCF  +
push esi  +
call sub_1023FB3  +
push [ebp+var_808]  +
call sub_103C41A  +
pop ebx  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_101CA75  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax stru_1079A28.dwLowDateTime +
and [ebp+var_4] 0 +
sub eax SystemTimeAsFileTime.dwLowDateTime +
mov ecx stru_1079A28.dwHighDateTime +
sbb ecx SystemTimeAsFileTime.dwHighDateTime +
push 0  +
push 989680h  +
push ecx  +
push eax  +
call __aulldiv  +
mov [ebp+var_2C] eax +
or eax edx +
mov [ebp+var_28] edx +
jz locret_1031EB3  +
push esi  +
push edi  +
mov edi dword_1079AB8 +
mov esi edi +
mov eax offset dword_1079AB8 +
cmp esi eax +
jz loc_1031EB1  +
push ebx  +
mov ebx offset dword_1079AB0 +
cmp [ebp+var_4] 0 +
jnz loc_1031D72  +
mov ecx [esi+8] +
mov [ebp+var_8] ecx +
mov ecx dword_1079AB0 +
cmp ecx ebx +
jz loc_1031D62  +
lea edx [ecx+18h] +
mov eax [edx] +
jmp loc_1031D45  +
cmp [ebp+var_4] 0 +
jnz loc_1031D52  +
mov ebx [ebp+var_8] +
cmp ebx [eax+8] +
jnz loc_1031D43  +
cmp ebx [ebp+arg_4] +
jz loc_1031D4B  +
mov eax [eax] +
cmp eax edx +
jnz loc_1031D30  +
jmp loc_1031D52  +
mov [ebp+var_4] 1 +
mov ecx [ecx] +
mov ebx offset dword_1079AB0 +
cmp ecx ebx +
jnz loc_1031D29  +
mov eax offset dword_1079AB8 +
mov esi [esi] +
cmp esi eax +
jnz loc_1031D13  +
cmp [ebp+var_4] 0 +
jz loc_1031EB0  +
mov ecx edi +
mov [ebp+var_14] edi +
jmp loc_1031EA8  +
mov edi dword_1079AB0 +
mov edx [ecx+8] +
mov [ebp+var_8] edx +
cmp edi ebx +
jz loc_1031EA3  +
lea eax [edi+18h] +
mov esi [eax] +
cmp esi eax +
jz loc_1031E94  +
cmp edx [ebp+arg_4] +
jnz loc_1031E82  +
cmp edx [esi+8] +
jnz loc_1031E82  +
mov ecx [esi+20h] +
mov eax [esi+14h] +
add ecx [esi+10h] +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_1031DC4  +
and [ebp+var_C] eax +
jmp loc_1031DCF  +
mov eax [esi+1Ch] +
xor edx edx +
div  [ebp+var_4] +
mov [ebp+var_C] eax +
test ecx ecx +
jnz loc_1031DD8  +
and [ebp+var_10] ecx +
jmp loc_1031DE5  +
mov eax [esi+24h] +
add eax [esi+18h] +
xor edx edx +
div  ecx +
mov [ebp+var_10] eax +
mov edx [edi+30h] +
mov eax edx +
test edx edx +
jnz loc_1031DF3  +
mov eax offset asc_1003E24 +
mov edx [edi+34h] +
test edx edx +
jnz loc_1031DFF  +
mov edx offset asc_1003E24 +
mov ebx [ebp+var_2C] +
and dword ptr [ebp+var_24] 0 +
mov dword ptr [ebp+var_1C] ebx +
mov ebx [ebp+var_28] +
mov dword ptr [ebp+var_1C+4] ebx +
and dword ptr [ebp+var_1C+4] 7FFFFFFFh +
fild  [ebp+var_1C] +
mov dword ptr [ebp+var_24+4] ebx +
and dword ptr [ebp+var_24+4] 80000000h +
fild  [ebp+var_24] +
mov ebx [ebp+var_4] +
fchs   +
faddp st(1) st +
fild  [ebp+var_4] +
test ebx ebx +
jge loc_1031E3A  +
fadd  ds:dbl_10018C0 +
mov [ebp+var_4] ecx +
fdiv st st(1) +
fild  [ebp+var_4] +
test ecx ecx +
jge loc_1031E4C  +
fadd  ds:dbl_10018C0 +
push [ebp+var_C]  +
fdivrp st(2) st +
push ecx  +
push ecx  +
fst  [esp+44h+var_44] +
fxch  st(1) +
push [ebp+var_10]  +
sub esp 10h +
fst  [esp+58h+var_50] +
faddp st(1) st +
fstp  [esp+58h+var_58] +
push eax  +
push dword ptr [edi+3Ch]  +
push edx  +
push offset aItemDataNameIm  +
push [ebp+NumberOfBytesWritten]  +
call sub_1024264  +
mov edx [ebp+var_8] +
mov ecx [ebp+var_14] +
add esp 34h +
mov esi [esi] +
lea eax [edi+18h] +
cmp esi eax +
jnz loc_1031D9D  +
mov ebx offset dword_1079AB0 +
mov edi [edi] +
cmp edi ebx +
jnz loc_1031D90  +
mov eax offset dword_1079AB8 +
mov ecx [ecx] +
mov [ebp+var_14] ecx +
cmp ecx eax +
jnz loc_1031D7C  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax stru_1079A28.dwLowDateTime +
sub eax SystemTimeAsFileTime.dwLowDateTime +
mov ecx stru_1079A28.dwHighDateTime +
sbb ecx SystemTimeAsFileTime.dwHighDateTime +
push ebx  +
push 0  +
push 989680h  +
push ecx  +
push eax  +
call __aulldiv  +
mov ebx eax +
or eax edx +
mov dword ptr [ebp+var_8+4] edx +
jz loc_1032019  +
push edi  +
mov edi offset dword_1079AB8 +
cmp dword_1079AB8 edi +
jz loc_1032018  +
push esi  +
push [ebp+lpBuffer]  +
push offset aTableLevel1Nam  +
call sub_1023CCF  +
push [ebp+lpBuffer]  +
push offset aHeaderSortFiel  +
call sub_1023CCF  +
push [ebp+lpBuffer]  +
push offset aHeader_2  +
call sub_1023CCF  +
mov esi dword_1079AB8 +
cmp esi edi +
jz loc_103200A  +
mov eax dword ptr [ebp+var_8+4] +
mov dword ptr [ebp+var_8+4] eax +
and dword ptr [ebp+var_8+4] 80000000h +
and eax 7FFFFFFFh +
and dword ptr [ebp+var_8] 0 +
mov dword ptr [ebp+var_10] ebx +
mov dword ptr [ebp+var_10+4] eax +
fild  [ebp+var_10] +
fild  [ebp+var_8] +
fchs   +
faddp st(1) st +
fstp  [ebp+var_10] +
mov ecx [esi+20h] +
mov eax [esi+14h] +
add ecx [esi+10h] +
mov dword ptr [ebp+var_8+4] eax +
test eax eax +
jnz loc_1031F7C  +
xor ebx ebx +
jmp loc_1031F86  +
mov eax [esi+1Ch] +
xor edx edx +
div  dword ptr [ebp+var_8+4] +
mov ebx eax +
test ecx ecx +
jnz loc_1031F8E  +
xor eax eax +
jmp loc_1031F98  +
mov eax [esi+24h] +
add eax [esi+18h] +
xor edx edx +
div  ecx +
mov edx dword ptr [ebp+var_8+4] +
fild  dword ptr [ebp+var_8+4] +
test edx edx +
jge loc_1031FA8  +
fadd  ds:dbl_10018C0 +
fdiv  [ebp+var_10] +
mov dword ptr [ebp+var_8+4] ecx +
fild  dword ptr [ebp+var_8+4] +
test ecx ecx +
jge loc_1031FBB  +
fadd  ds:dbl_10018C0 +
fdiv  [ebp+var_10] +
push ebx  +
push ecx  +
push ecx  +
fxch  st(1) +
fst  [esp+28h+var_28] +
fxch  st(1) +
push eax  +
sub esp 10h +
fst  [esp+3Ch+var_34] +
faddp st(1) st +
fstp  [esp+3Ch+var_3C] +
push dword ptr [esi+8]  +
push offset aItemDataNameDi  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 2Ch +
push dword ptr [esi+8]  +
push [ebp+lpBuffer]  +
call sub_1031CB7  +
push [ebp+lpBuffer]  +
push offset aItem_1  +
call sub_1023CCF  +
mov esi [esi] +
cmp esi edi +
jnz loc_1031F68  +
push [ebp+lpBuffer]  +
push offset aTable_0  +
call sub_1023CCF  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
mov edi [eax] +
cmp edi eax +
jz loc_1032066  +
mov eax [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_8] +
inc eax  +
push esi  +
mov [ebp+arg_C] eax +
push [ebp+arg_C]  +
mov esi edi +
mov edi [edi] +
push ebx  +
push [ebp+arg_4]  +
lea eax [esi+8] +
push eax  +
call sub_1032023  +
mov ecx [esi+20h] +
mov eax [ebp+arg_4] +
add [eax] ecx +
mov eax [esi+1Ch] +
add [ebx] eax +
cmp edi [ebp+arg_0] +
jnz loc_103203E  +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1032081  +
xor eax eax +
jmp loc_10320EB  +
cmp [ebp+arg_8] 0 +
jz loc_103207D  +
push ebx  +
push edi  +
mov edi [esi] +
jmp loc_10320B4  +
cmp [ebp+arg_4] 0 +
mov ebx edi +
mov edi [edi] +
jz loc_10320AE  +
mov eax [ebx+8] +
test eax eax +
jz loc_10320B4  +
push [ebp+arg_4]  +
push eax  +
call ds:__imp__wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jmp loc_10320B2  +
cmp dword ptr [ebx+8] 0 +
jz loc_10320CE  +
cmp esi edi +
jnz loc_103208D  +
push 18h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jnz loc_10320D2  +
jmp loc_10320E9  +
mov eax ebx +
jmp loc_10320E9  +
mov ecx [ebp+arg_4] +
fldz   +
fstp  qword ptr [eax+10h] +
mov [eax+8] ecx +
mov ecx [esi] +
mov [eax] ecx +
mov [eax+4] esi +
mov [ecx+4] eax +
mov [esi] eax +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push esi  +
push edi  +
lea edi [eax+10h] +
mov esi [edi] +
cmp esi edi +
jz loc_1032144  +
cmp dword ptr [eax+3Ch] 0 +
jz loc_1032144  +
fld  qword ptr [esi+38h] +
sub esp 18h +
fstp  [esp+20h+var_10] +
fld  qword ptr [esi+48h] +
fstp  [esp+20h+var_18] +
fld  qword ptr [esi+40h] +
fstp  [esp+20h+var_20] +
push dword ptr [esi+54h]  +
push dword ptr [esi+50h]  +
push dword ptr [esi+20h]  +
push offset aItemDataNameSe  +
push [ebp+NumberOfBytesWritten]  +
call sub_1024264  +
mov esi [esi] +
add esp 2Ch +
cmp esi edi +
jnz loc_103210E  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
lea eax [edi+10h] +
mov esi [eax] +
cmp esi eax +
jz loc_103223B  +
push ebx  +
mov ebx [ebp+NumberOfBytesWritten] +
push dword ptr [esi+20h]  +
push offset aItemDataName_0  +
push ebx  +
call sub_1024264  +
mov eax [edi+3Ch] +
add esp 0Ch +
test eax eax +
jz loc_1032193  +
push eax  +
push offset aDataNamePidDDa  +
push ebx  +
call sub_1024264  +
add esp 0Ch +
jmp loc_10321A0  +
push offset aDataNamePidDat  +
push ebx  +
call sub_1024264  +
pop ecx  +
pop ecx  +
push offset aDataNameDescri  +
push ebx  +
call sub_1024264  +
pop ecx  +
pop ecx  +
push dword ptr [esi+24h]  +
push 0  +
push 1  +
push ebx  +
call sub_101D200  +
push offset aData  +
push ebx  +
call sub_1024264  +
mov eax [edi+38h] +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10321D3  +
mov eax offset asc_1003E24 +
cmp dword ptr [edi+3Ch] 0 +
mov ecx offset aStopped +
jz loc_10321E3  +
mov ecx offset aRunning +
fld  qword ptr [esi+10h] +
sub esp 30h +
fstp  [esp+3Ch+var_14] +
fld  qword ptr [esi+80h] +
fstp  [esp+3Ch+var_1C] +
fld  qword ptr [esi+78h] +
fstp  [esp+3Ch+var_24] +
fld  qword ptr [esi+70h] +
fstp  [esp+3Ch+var_2C] +
fld  qword ptr [esi+48h] +
fstp  [esp+3Ch+var_34] +
fld  qword ptr [esi+40h] +
fstp  [esp+3Ch+var_3C] +
push dword ptr [esi+50h]  +
fld  qword ptr [esi+38h] +
push ecx  +
push ecx  +
fstp  [esp+48h+var_48] +
push eax  +
push ecx  +
push offset aDataNameStatus  +
push ebx  +
call sub_1024264  +
mov esi [esi] +
lea eax [edi+10h] +
add esp 4Ch +
cmp esi eax +
jnz loc_103216A  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi offset dword_1079AB0 +
cmp dword_1079AB0 edi +
jz loc_10322A1  +
push ebx  +
mov ebx [ebp+lpBuffer] +
push esi  +
push ebx  +
push offset aTableNameServi  +
call sub_1023CCF  +
push ebx  +
push offset aSummaryKey1Fin  +
call sub_1023CCF  +
push ebx  +
push offset aHeaderSortFi_0  +
call sub_1023CCF  +
mov esi dword_1079AB0 +
jmp loc_1032290  +
push esi  +
push ebx  +
call sub_103214F  +
mov esi [esi] +
cmp esi edi +
jnz loc_1032287  +
push ebx  +
push offset aTable  +
call sub_1023CCF  +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx dword_1079AB0 +
sub esp 0Ch +
push ebx  +
mov ebx offset dword_1079AB0 +
cmp ecx ebx +
jz loc_10324CB  +
mov eax dword_1079A94 +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_10322DA  +
mov [ebp+var_4] 1 +
mov eax stru_1079A28.dwLowDateTime +
sub eax SystemTimeAsFileTime.dwLowDateTime +
mov edx stru_1079A28.dwHighDateTime +
sbb edx SystemTimeAsFileTime.dwHighDateTime +
mov dword ptr [ebp+var_C] eax +
mov dword ptr [ebp+var_C+4] edx +
fild  [ebp+var_C] +
push edi  +
mov edi ecx +
fdiv  ds:dbl_10018C8 +
cmp edi ebx +
jz loc_10324C8  +
fldz   +
push esi  +
fld  ds:dbl_1002990 +
fld  ds:dbl_1001648 +
lea edx [edi+8] +
mov eax [edx] +
jmp loc_10323CA  +
mov ecx [eax+30h] +
test ecx ecx +
jz loc_10323C8  +
mov esi [eax+8Ch] +
sub esi [eax+88h] +
imul esi dword_1079A80 +
add [ecx+34h] esi +
mov esi [eax+84h] +
sub esi [eax+80h] +
imul esi dword_1079A80 +
add [ecx+30h] esi +
cmp dword ptr [eax+44h] 0 +
jnz loc_1032395  +
cmp dword ptr [eax+48h] 0 +
jnz loc_1032395  +
mov esi [eax+84h] +
cmp esi [eax+80h] +
ja loc_1032395  +
mov esi [eax+8Ch] +
cmp esi [eax+88h] +
ja loc_1032395  +
cmp dword ptr [eax+4Ch] 0 +
jnz loc_1032395  +
cmp dword ptr [eax+50h] 0 +
jnz loc_1032395  +
cmp dword ptr [eax+5Ch] 0 +
jz loc_1032398  +
inc dword ptr [ecx+54h]  +
inc dword ptr [ecx+50h]  +
mov esi [eax+5Ch] +
add esi [eax+44h] +
add [ecx+58h] esi +
mov esi [eax+6Ch] +
add esi [eax+64h] +
add [ecx+60h] esi +
mov esi [eax+48h] +
add [ecx+5Ch] esi +
mov esi [eax+68h] +
add [ecx+64h] esi +
mov esi [eax+60h] +
add [ecx+68h] esi +
mov esi [eax+174h] +
add [ecx+8] esi +
mov eax [eax] +
cmp eax edx +
jnz loc_1032324  +
lea esi [edi+10h] +
mov eax [esi] +
cmp eax esi +
jz loc_10324B7  +
mov ecx [ebp+var_4] +
fild  [ebp+var_4] +
test ecx ecx +
jge loc_10323EF  +
fadd  ds:dbl_10018C0 +
mov ecx [eax+34h] +
mov edx [eax+30h] +
lea ebx [edx+ecx] +
mov dword ptr [ebp+var_C+4] ebx +
fild  dword ptr [ebp+var_C+4] +
test ebx ebx +
jge loc_1032408  +
fadd  ds:dbl_10018C0 +
fadd st st(4) +
mov dword ptr [ebp+var_C+4] edx +
fdiv st st(5) +
fdiv st st(3) +
fmul st st(2) +
fdiv st st(1) +
fstp  qword ptr [eax+38h] +
fild  dword ptr [ebp+var_C+4] +
test edx edx +
jge loc_1032425  +
fadd  ds:dbl_10018C0 +
fadd st st(4) +
mov dword ptr [ebp+var_C+4] ecx +
fdiv st st(5) +
fdiv st st(3) +
fmul st st(2) +
fdiv st st(1) +
fstp  qword ptr [eax+40h] +
fild  dword ptr [ebp+var_C+4] +
test ecx ecx +
jge loc_1032442  +
fadd  ds:dbl_10018C0 +
fadd st st(4) +
mov ecx [eax+58h] +
fdiv st st(5) +
fdiv st st(3) +
fmul st st(2) +
fdiv st st(1) +
fstp  qword ptr [eax+48h] +
fild  dword ptr [eax+58h] +
test ecx ecx +
jge loc_103245F  +
fadd  ds:dbl_10018C0 +
fdiv st st(5) +
mov ecx [eax+5Ch] +
fstp  qword ptr [eax+70h] +
fild  dword ptr [eax+5Ch] +
test ecx ecx +
jge loc_1032474  +
fadd  ds:dbl_10018C0 +
fdiv st st(5) +
mov ecx [eax+68h] +
fstp  qword ptr [eax+78h] +
fild  dword ptr [eax+68h] +
test ecx ecx +
jge loc_1032489  +
fadd  ds:dbl_10018C0 +
fdiv st st(5) +
mov ecx [eax+8] +
fstp  qword ptr [eax+80h] +
fild  dword ptr [eax+8] +
test ecx ecx +
jge loc_10324A1  +
fadd  ds:dbl_10018C0 +
fdiv st st(5) +
fstp  qword ptr [eax+10h] +
mov eax [eax] +
cmp eax esi +
jnz loc_10323EF  +
fstp  st +
mov ebx offset dword_1079AB0 +
mov edi [edi] +
cmp edi ebx +
jnz loc_103231A  +
fstp  st(2) +
pop esi  +
fstp  st +
fstp  st +
fstp  st +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
and [ebp+var_8] 0 +
cmp dword_1079AB0 offset dword_1079AB0 +
lea eax [ebp+lpMem] +
mov [ebp+var_30] eax +
mov [ebp+lpMem] eax +
jz locret_1032889  +
mov eax dword_1079A94 +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_103250B  +
mov [ebp+var_4] 1 +
mov eax stru_1079A28.dwLowDateTime +
sub eax SystemTimeAsFileTime.dwLowDateTime +
mov ecx stru_1079A28.dwHighDateTime +
sbb ecx SystemTimeAsFileTime.dwHighDateTime +
mov dword ptr [ebp+var_4C] eax +
mov dword ptr [ebp+var_4C+4] ecx +
fild  [ebp+var_4C] +
push ebx  +
push esi  +
mov esi [ebp+lpBuffer] +
fdiv  ds:dbl_10018C8 +
push edi  +
push esi  +
push offset aTableNameImage  +
fstp  [ebp+var_3C] +
call sub_1023CCF  +
push esi  +
push offset aSummaryKey1F_0  +
call sub_1023CCF  +
push esi  +
push offset aHeaderDataSpan  +
call sub_1023CCF  +
push esi  +
push offset aHeaderSortFi_1  +
call sub_1023CCF  +
push esi  +
push offset aHeaderSortFi_2  +
call sub_1023CCF  +
push esi  +
push offset aHeader_2  +
call sub_1023CCF  +
fldz   +
fld  ds:dbl_1001648 +
jmp loc_1032588  +
fxch  st(1) +
mov edi dword_1079AB0 +
fxch  st(1) +
fst  [ebp+var_44] +
fst  [ebp+var_4C] +
cmp edi offset dword_1079AB0 +
jz loc_1032811  +
fstp  st(1) +
jmp loc_10325A8  +
fstp  st +
push [ebp+var_8]  +
fstp  st +
lea eax [ebp+lpMem] +
push dword ptr [edi+34h]  +
push eax  +
call sub_1032070  +
lea ebx [edi+8] +
mov esi [ebx] +
xor edx edx +
mov [ebp+var_24] eax +
mov [ebp+var_1C] edx +
mov [ebp+var_20] edx +
mov [ebp+var_14] edx +
mov [ebp+var_C] edx +
cmp esi ebx +
jz loc_1032677  +
cmp [esi+44h] edx +
jnz loc_103260C  +
cmp [esi+48h] edx +
jnz loc_103260C  +
mov eax [esi+84h] +
cmp eax [esi+80h] +
ja loc_103260C  +
mov eax [esi+8Ch] +
cmp eax [esi+88h] +
ja loc_103260C  +
cmp [esi+4Ch] edx +
jnz loc_103260C  +
cmp [esi+50h] edx +
jnz loc_103260C  +
cmp [esi+5Ch] edx +
jz loc_103260F  +
inc [ebp+var_1C]  +
mov ecx [esi+8Ch] +
sub ecx [esi+88h] +
mov eax dword_1079A80 +
imul ecx eax +
add [ebp+var_14] ecx +
mov ecx [esi+84h] +
sub ecx [esi+80h] +
inc [ebp+var_20]  +
imul ecx eax +
add [ebp+var_C] ecx +
lea eax [ebp+var_2C] +
push 1  +
push eax  +
mov [ebp+var_28] eax +
mov [ebp+var_2C] eax +
lea eax [esi+10h] +
push eax  +
call sub_103180B  +
mov eax [ebp+var_2C] +
jmp loc_1032657  +
mov eax [eax] +
lea ecx [ebp+var_2C] +
cmp eax ecx +
jnz loc_1032655  +
push 0  +
mov eax ecx +
push eax  +
call sub_1021773  +
mov esi [esi] +
xor edx edx +
cmp esi ebx +
jnz loc_10325D7  +
mov eax [ebp+var_24] +
mov ecx [ebp+var_14] +
mov esi [ebp+var_C] +
lea ebx [esi+ecx] +
mov [ebp+var_14] ebx +
fild  [ebp+var_14] +
test ebx ebx +
jge loc_1032690  +
fadd  ds:dbl_10018C0 +
fldz   +
mov [ebp+var_14] esi +
fadd st(1) st +
fxch  st(1) +
fdiv  [ebp+var_3C] +
fld  ds:dbl_1002990 +
fdiv st(1) st +
fld  ds:dbl_1001648 +
fmul st(2) st +
fxch  st(2) +
fstp  qword ptr [ebp-10h] +
fild  [ebp+var_14] +
test esi esi +
jge loc_10326BE  +
fadd  ds:dbl_10018C0 +
fadd st st(3) +
mov [ebp+var_14] ecx +
fdiv  [ebp+var_3C] +
fdiv st st(1) +
fmul st st(2) +
fstp  [ebp+var_54] +
fild  [ebp+var_14] +
test ecx ecx +
jge loc_10326DA  +
fadd  ds:dbl_10018C0 +
fadd st st(3) +
fdiv  [ebp+var_3C] +
fdivrp st(1) st +
fmul st st(1) +
fstp  qword ptr [ebp-18h] +
cmp [edi+3Ch] edx +
jz loc_10326F4  +
fld  qword ptr [ebp-10h] +
fadd  [ebp+var_44] +
fstp  [ebp+var_44] +
cmp eax edx +
jz loc_1032701  +
fld  qword ptr [eax+10h] +
fadd  qword ptr [ebp-10h] +
fstp  qword ptr [eax+10h] +
cmp [ebp+var_8] edx +
jz loc_10327E0  +
mov esi [ebp+lpBuffer] +
fstp  st +
push offset aItem_2  +
fstp  st +
push esi  +
call sub_1024264  +
mov eax [edi+34h] +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_103272A  +
mov eax offset aIdle +
push eax  +
push offset aDataNameImageS  +
push esi  +
call sub_1024264  +
mov eax [edi+38h] +
add esp 0Ch +
test eax eax +
jz loc_103274F  +
push eax  +
push offset aS_1  +
push esi  +
call sub_1024264  +
add esp 0Ch +
push offset aData  +
push esi  +
call sub_1024264  +
mov eax [ebp+var_24] +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1032767  +
fldz   +
jmp loc_103277A  +
mov ecx [ebp+var_4] +
fild  [ebp+var_4] +
test ecx ecx +
jge loc_1032777  +
fadd  ds:dbl_10018C0 +
fdivr  qword ptr [eax+10h] +
mov eax [ebp+var_4] +
fild  [ebp+var_4] +
test eax eax +
jge loc_103278A  +
fadd  ds:dbl_10018C0 +
sub esp 20h +
fxch  st(1) +
fstp  [esp+80h+var_68] +
fld  qword ptr [ebp-10h] +
fdiv st st(1) +
fstp  [esp+80h+var_70] +
fld  qword ptr [ebp-18h] +
fdiv st st(1) +
fstp  [esp+80h+var_78] +
fdivr  [ebp+var_54] +
fstp  [esp+80h+var_80] +
push [ebp+var_1C]  +
push [ebp+var_20]  +
push dword ptr [edi+3Ch]  +
push offset aDataNamePidD_0  +
push esi  +
call sub_1024264  +
add esp 34h +
push edi  +
push esi  +
call sub_10320F5  +
push offset aItem_1  +
push esi  +
call sub_1024264  +
fldz   +
fld  ds:dbl_1001648 +
pop ecx  +
pop ecx  +
xor edx edx +
cmp [edi+3Ch] edx +
jnz loc_10327FE  +
mov eax [ebp+var_4] +
fild  [ebp+var_4] +
test eax eax +
jge loc_10327F5  +
fadd  ds:dbl_10018C0 +
fdivr  qword ptr [ebp-10h] +
fadd  [ebp+var_4C] +
fstp  [ebp+var_4C] +
mov edi [edi] +
cmp edi offset dword_1079AB0 +
jnz loc_10325A6  +
mov esi [ebp+lpBuffer] +
fxch  st(1) +
cmp [ebp+var_8] 0 +
jnz loc_103284E  +
mov eax [ebp+var_4] +
fild  [ebp+var_4] +
test eax eax +
jge loc_1032827  +
fadd  ds:dbl_10018C0 +
fdivr  [ebp+var_44] +
fadd  [ebp+var_4C] +
fcom  st(2) +
fnstsw  ax +
test ah 41h +
jnz loc_1032840  +
fdiv st st(2) +
fmul  [ebp+var_3C] +
fstp  [ebp+var_3C] +
jmp loc_1032842  +
fstp  st +
mov [ebp+var_8] 1 +
jmp loc_1032586  +
push esi  +
fstp  st(1) +
push offset aTable  +
fstp  st +
call sub_1023CCF  +
mov esi [ebp+lpMem] +
jmp loc_103287F  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call ds:HeapFree  +
lea eax [ebp+lpMem] +
cmp eax esi +
jnz loc_1032862  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mov edx [ebp+arg_0] +
mov ecx [edx] +
push esi  +
mov esi [eax] +
mov eax [eax+4] +
sub eax [edx+4] +
jnz loc_10328ED  +
mov eax [ecx+28h] +
sub eax [esi+28h] +
jnz loc_10328ED  +
mov ecx [ecx+24h] +
test ecx ecx +
jz loc_10328ED  +
mov edx [esi+24h] +
test edx edx +
jz loc_10328ED  +
mov eax ecx +
mov cx [eax] +
cmp cx [edx] +
jnz loc_10328E8  +
test cx cx +
jz loc_10328E4  +
mov cx [eax+2] +
cmp cx [edx+2] +
jnz loc_10328E8  +
add eax 4 +
add edx 4 +
test cx cx +
jnz loc_10328C2  +
xor eax eax +
jmp loc_10328ED  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 61Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
and [ebp+var_40C] 0 +
mov [ebp+lpBuffer] eax +
mov eax lpFileName +
test eax eax +
jz loc_1032CAB  +
push eax  +
call ds:rewind  +
push lpFileName  +
lea eax [ebp+var_404] +
push 400h  +
push eax  +
call ds:fgets  +
add esp 10h +
test eax eax +
jz loc_1032CAB  +
push ebx  +
mov ebx ds:atol +
push esi  +
mov esi ds:strtok +
push edi  +
mov edi offset asc_1007118 +
lea eax [ebp+var_404] +
push edi  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_103297F  +
push eax  +
call ebx  +
inc [ebp+var_40C]  +
pop ecx  +
push lpFileName  +
lea eax [ebp+var_404] +
push 400h  +
push eax  +
call ds:fgets  +
add esp 0Ch +
test eax eax +
jnz loc_1032965  +
cmp [ebp+var_40C] eax +
jz loc_1032CA8  +
push [ebp+lpBuffer]  +
push offset aTableNameSpool  +
call sub_1023CCF  +
push 400h  +
lea eax [ebp+var_404] +
push 0  +
push eax  +
call memset  +
push lpFileName  +
call ds:rewind  +
push lpFileName  +
lea eax [ebp+var_404] +
push 400h  +
push eax  +
call ds:fgets  +
add esp 1Ch +
jmp loc_1032C90  +
lea eax [ebp+var_404] +
push edi  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
push edi  +
push 0  +
mov dword ptr [ebp+var_614] eax +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ds:_atoi64  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ds:_atoi64  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ds:_atoi64  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ds:_atoi64  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
push edi  +
push 0  +
mov [ebp+var_600] eax +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
push edi  +
push 0  +
mov [ebp+var_5FC] eax +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
push edi  +
push 0  +
mov [ebp+var_5F8] eax +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
push edi  +
push 0  +
mov [ebp+var_5F4] eax +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
push edi  +
push 0  +
mov [ebp+var_5B4] ax +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
cwde   +
push edi  +
push 0  +
mov [ebp+var_5EC] eax +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
push edi  +
push 0  +
mov [ebp+var_5B2] ax +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
push edi  +
push 0  +
mov [ebp+var_5B0] ax +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
push edi  +
push 0  +
mov [ebp+var_5AE] ax +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
push edi  +
push 0  +
mov [ebp+var_5AC] ax +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
push edi  +
push 0  +
mov [ebp+var_5AA] ax +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
push edi  +
push 0  +
mov [ebp+var_5A8] ax +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_1032C75  +
push eax  +
call ebx  +
push eax  +
movsx eax [ebp+var_5A8] +
push eax  +
movsx eax [ebp+var_5AA] +
push eax  +
movsx eax [ebp+var_5AC] +
push eax  +
movsx eax [ebp+var_5AE] +
push eax  +
movsx eax [ebp+var_5B0] +
push eax  +
movsx eax [ebp+var_5B2] +
push eax  +
push [ebp+var_5EC]  +
movsx eax [ebp+var_5B4] +
push eax  +
push [ebp+var_5F4]  +
mov eax [ebp+var_5FC] +
push [ebp+var_5F8]  +
shr eax 0Ah +
push eax  +
push [ebp+var_600]  +
push dword ptr [ebp+var_614]  +
push offset aItemDataNameJo  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 44h +
push lpFileName  +
lea eax [ebp+var_404] +
push 400h  +
push eax  +
call ds:fgets  +
add esp 0Ch +
test eax eax +
jnz loc_10329F9  +
push [ebp+lpBuffer]  +
push offset aTable  +
call sub_1023CCF  +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 688h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
xor esi esi +
push offset unk_105594C  +
mov [ebp+lpBuffer] eax +
mov [ebp+var_414] esi +
call sub_102534C  +
cmp eax esi +
jz loc_1032CF8  +
cmp [eax+18h] esi +
ja loc_1032D13  +
push offset unk_105592C  +
call sub_102534C  +
cmp eax esi +
jz loc_10331DC  +
cmp [eax+18h] esi +
jbe loc_10331DC  +
mov eax stru_1079A28.dwLowDateTime +
sub eax SystemTimeAsFileTime.dwLowDateTime +
mov ecx stru_1079A28.dwHighDateTime +
sbb ecx SystemTimeAsFileTime.dwHighDateTime +
push esi  +
push 989680h  +
push ecx  +
push eax  +
call __aulldiv  +
mov [ebp+var_418] eax +
mov eax lpFileName +
cmp eax esi +
jz loc_10331DC  +
push eax  +
call ds:rewind  +
push lpFileName  +
lea eax [ebp+var_404] +
push 400h  +
push eax  +
call ds:fgets  +
add esp 10h +
test eax eax +
jz loc_10331DC  +
mov esi ds:strtok +
push ebx  +
mov ebx ds:atol +
push edi  +
mov edi offset asc_1007118 +
lea eax [ebp+var_404] +
push edi  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1032DA1  +
push eax  +
call ebx  +
inc [ebp+var_414]  +
pop ecx  +
push lpFileName  +
lea eax [ebp+var_404] +
push 400h  +
push eax  +
call ds:fgets  +
add esp 0Ch +
test eax eax +
jnz loc_1032D87  +
cmp [ebp+var_414] eax +
jz loc_10331DA  +
push eax  +
push 3E8h  +
push offset aTracerptprints  +
push [ebp+lpBuffer]  +
call sub_102F3F0  +
push [ebp+lpBuffer]  +
push offset aTableNameSpo_0  +
call sub_1023CCF  +
push 400h  +
lea eax [ebp+var_404] +
push 0  +
push eax  +
call memset  +
push lpFileName  +
call ds:rewind  +
push lpFileName  +
lea eax [ebp+var_404] +
push 400h  +
push eax  +
call ds:fgets  +
add esp 1Ch +
jmp loc_10331A7  +
lea eax [ebp+var_404] +
push edi  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
push edi  +
push 0  +
mov dword ptr [ebp+var_680] eax +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
push edi  +
push 0  +
mov [ebp+var_67C] eax +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
push edi  +
push 0  +
mov [ebp+var_678] eax +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ds:_atoi64  +
push edi  +
push 0  +
mov [ebp+var_650] eax +
mov [ebp+var_64C] edx +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ds:_atoi64  +
push edi  +
push 0  +
mov [ebp+var_648] eax +
mov [ebp+var_644] edx +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ds:_atoi64  +
push edi  +
push 0  +
mov [ebp+var_640] eax +
mov [ebp+var_63C] edx +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ds:_atoi64  +
push edi  +
push 0  +
mov [ebp+var_628] eax +
mov [ebp+var_624] edx +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
push edi  +
push 0  +
call esi  +
add esp 0Ch +
test eax eax +
jz loc_103318C  +
push eax  +
call ebx  +
mov eax [ebp+var_64C] +
mov [ebp+FileTime.dwHighDateTime] eax +
mov eax [ebp+var_650] +
mov [ebp+FileTime.dwLowDateTime] eax +
pop ecx  +
lea eax [ebp+UniversalTime] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
lea eax [ebp+LocalTime] +
push eax  +
lea eax [ebp+UniversalTime] +
push eax  +
push 0  +
call ds:SystemTimeToTzSpecificLocalTime  +
mov eax [ebp+var_644] +
mov [ebp+FileTime.dwHighDateTime] eax +
mov eax [ebp+var_648] +
mov [ebp+FileTime.dwLowDateTime] eax +
lea eax [ebp+SystemTime] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
lea eax [ebp+var_438] +
push eax  +
lea eax [ebp+SystemTime] +
push eax  +
push 0  +
call ds:SystemTimeToTzSpecificLocalTime  +
mov eax [ebp+var_624] +
mov [ebp+FileTime.dwHighDateTime] eax +
mov eax [ebp+var_628] +
mov [ebp+FileTime.dwLowDateTime] eax +
lea eax [ebp+var_478] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
lea eax [ebp+var_428] +
push eax  +
lea eax [ebp+var_478] +
push eax  +
push 0  +
call ds:SystemTimeToTzSpecificLocalTime  +
mov eax [ebp+var_678] +
mov ecx [ebp+var_67C] +
add eax ecx +
xor edx edx +
div  [ebp+var_418] +
push eax  +
push [ebp+var_63C]  +
movzx eax [ebp+var_42A] +
push [ebp+var_640]  +
push eax  +
movzx eax [ebp+var_42C] +
push eax  +
movzx eax [ebp+var_42E] +
push eax  +
movzx eax [ebp+var_430] +
push eax  +
movzx eax [ebp+var_41A] +
push eax  +
movzx eax [ebp+var_41C] +
push eax  +
movzx eax [ebp+var_41E] +
push eax  +
movzx eax [ebp+var_420] +
push eax  +
movzx eax [ebp+LocalTime.wMilliseconds] +
push eax  +
movzx eax [ebp+LocalTime.wSecond] +
push eax  +
movzx eax [ebp+LocalTime.wMinute] +
push eax  +
movzx eax [ebp+LocalTime.wHour] +
push eax  +
push dword ptr [ebp+var_680]  +
push offset aItemDataName_1  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 48h +
push lpFileName  +
lea eax [ebp+var_404] +
push 400h  +
push eax  +
call ds:fgets  +
add esp 0Ch +
test eax eax +
jnz loc_1032E31  +
push [ebp+lpBuffer]  +
push offset aTable_0  +
call sub_1023CCF  +
push [ebp+lpBuffer]  +
call sub_10328F5  +
push [ebp+lpBuffer]  +
push offset aSection_0  +
call sub_1023CCF  +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_10331FF  +
xor eax eax +
jmp loc_1033235  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
lea eax [edi+1] +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_1033231  +
push edi  +
push [ebp+arg_0]  +
push esi  +
call memcpy  +
add esp 0Ch +
mov byte ptr [esi+edi] 0 +
mov eax esi +
jmp loc_1033233  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push dword ptr [esi+2BCh]  +
call ds:lstrlenA  +
push eax  +
push dword ptr [esi+2BCh]  +
call sub_102354E  +
mov edi eax +
test edi edi +
jz loc_10332A7  +
mov eax [esi+20h] +
inc dword ptr [edi+20h]  +
mov [edi+8] eax +
mov eax [esi+60h] +
add [edi+30h] eax +
mov eax [esi+64h] +
adc [edi+34h] eax +
mov eax [esi+28h] +
add [edi+0Ch] eax +
mov eax [esi+2Ch] +
add [edi+10h] eax +
mov eax [esi+48h] +
add [edi+14h] eax +
mov eax [esi+4Ch] +
add [edi+18h] eax +
mov eax [esi+24h] +
add [edi+28h] eax +
movsx eax word ptr [esi+0B4h] +
mov [edi+24h] eax +
lea eax [esi+2ACh] +
push eax  +
movzx eax word ptr [esi+2A4h] +
push dword ptr [esi+2A8h]  +
push eax  +
call sub_10224C4  +
mov ebx eax +
test ebx ebx +
jz loc_10332DC  +
inc dword ptr [ebx+0Ch]  +
mov eax [esi+60h] +
add [ebx+18h] eax +
mov eax [esi+64h] +
adc [ebx+1Ch] eax +
mov eax [esi+24h] +
add [ebx+10h] eax +
push dword ptr [esi+20h]  +
call sub_102255D  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1033318  +
inc dword ptr [eax+20h]  +
mov ecx [esi+60h] +
add [eax+28h] ecx +
mov ecx [esi+64h] +
adc [eax+2Ch] ecx +
mov ecx [esi+28h] +
add [eax+0Ch] ecx +
mov ecx [esi+2Ch] +
add [eax+10h] ecx +
mov ecx [esi+48h] +
add [eax+14h] ecx +
mov ecx [esi+4Ch] +
add [eax+18h] ecx +
mov ecx [esi+24h] +
add [eax+24h] ecx +
mov ecx [esi+10h] +
test ecx ecx +
jnz loc_1033332  +
movzx edx word ptr [esi+82h] +
cmp dx 0Eh +
jz loc_103334A  +
cmp dx 14h +
jz loc_103334A  +
cmp ecx 1 +
jnz loc_1033397  +
movzx ecx word ptr [esi+82h] +
cmp cx 19h +
jz loc_103334A  +
cmp cx 1Ah +
jnz loc_1033397  +
mov ecx dword_1057944 +
inc dword ptr [ecx+4]  +
mov ecx dword_1057944 +
mov edx [esi+60h] +
add ecx 8 +
add [ecx] edx +
mov edx [esi+64h] +
adc [ecx+4] edx +
mov edx [esi+2Ch] +
add edx [esi+28h] +
mov ecx dword_1057944 +
add [ecx+13Ch] edx +
test edi edi +
jz loc_1033380  +
inc dword ptr [edi+1Ch]  +
test ebx ebx +
jz loc_1033387  +
inc dword ptr [ebx+8]  +
test eax eax +
jz loc_1033ED8  +
inc dword ptr [eax+1Ch]  +
jmp loc_1033ED8  +
mov eax [esi+0DCh] +
mov ecx [esi+0D8h] +
mov edx [esi+0C8h] +
mov edi [esi+0CCh] +
mov [ebp+var_C] eax +
mov eax [esi+0F4h] +
mov [ebp+var_10] ecx +
mov ecx [esi+0F0h] +
mov [ebp+var_4] eax +
mov eax [esi+88h] +
mov [ebp+var_8] ecx +
mov ecx [esi+8Ch] +
mov ebx eax +
or ebx ecx +
mov [ebp+var_18] edx +
mov [ebp+var_14] edi +
jz loc_10336CF  +
mov ecx [esi+90h] +
mov ebx [esi+94h] +
or ecx ebx +
jz loc_103340D  +
cmp ebx [esi+8Ch] +
jb loc_10336CF  +
ja loc_103340D  +
cmp [esi+90h] eax +
jb loc_10336CF  +
mov ecx [esi+90h] +
or ecx ebx +
jz loc_1033429  +
cmp ebx [esi+7Ch] +
jb loc_1033469  +
ja loc_1033429  +
mov ecx [esi+90h] +
cmp ecx [esi+78h] +
jbe loc_1033469  +
mov ecx [esi+78h] +
mov [esi+90h] ecx +
mov ecx [esi+7Ch] +
mov [esi+94h] ecx +
mov ecx [esi+90h] +
mov ebx [esi+94h] +
or ecx ebx +
jz loc_10336CF  +
cmp ebx [esi+8Ch] +
jb loc_10336CF  +
ja loc_1033469  +
cmp [esi+90h] eax +
jb loc_10336CF  +
mov ecx [esi+90h] +
sub ecx eax +
mov eax ebx +
sbb eax [esi+8Ch] +
mov [ebp+var_28] ecx +
mov ebx eax +
mov [ebp+var_20] ecx +
mov [ebp+var_1C] ebx +
cmp ebx [esi+9Ch] +
ja loc_10334A2  +
jb loc_1033496  +
cmp ecx [esi+98h] +
jnb loc_10334A2  +
mov [esi+98h] ecx +
mov [esi+9Ch] ebx +
movzx ebx word ptr [esi+0B4h] +
cmp bx 0Bh +
jnz loc_1033599  +
mov ebx [esi+0C0h] +
mov ecx [esi+0C4h] +
mov eax ebx +
or eax ecx +
jz loc_10336CF  +
mov eax edx +
or eax edi +
jz loc_10334E9  +
cmp edi [esi+94h] +
ja loc_10334E9  +
jb loc_10334E1  +
cmp edx [esi+90h] +
ja loc_10334E9  +
mov [ebp+var_18] edx +
mov [ebp+var_14] edi +
jmp loc_103350E  +
mov eax [esi+90h] +
mov [ebp+var_18] eax +
mov eax [esi+94h] +
mov [ebp+var_14] eax +
cmp ecx eax +
jb loc_103350E  +
ja loc_10336CF  +
cmp ebx [ebp+var_18] +
ja loc_10336CF  +
mov eax [esi+8Ch] +
cmp ecx eax +
ja loc_1033534  +
jb loc_1033522  +
cmp ebx [esi+88h] +
jnb loc_1033534  +
mov ecx [esi+88h] +
mov [esi+0C0h] ecx +
mov [esi+0C4h] eax +
mov edx [esi+0C4h] +
mov ecx [esi+0C0h] +
cmp [ebp+var_14] edx +
ja loc_1033552  +
jb loc_103354C  +
cmp [ebp+var_18] ecx +
jnb loc_1033552  +
mov [ebp+var_18] ecx +
mov [ebp+var_14] edx +
mov eax [esi+98h] +
mov edi [esi+9Ch] +
sub eax ecx +
sbb edi edx +
add eax [ebp+var_18] +
adc edi [ebp+var_14] +
cmp edi [ebp+var_1C] +
jb loc_103388C  +
ja loc_103357C  +
cmp eax [ebp+var_20] +
jbe loc_103388C  +
sub ecx [ebp+var_18] +
sbb edx [ebp+var_14] +
add ecx [ebp+var_20] +
adc edx [ebp+var_1C] +
mov [esi+98h] ecx +
mov [esi+9Ch] edx +
jmp loc_103388C  +
cmp bx 0Ch +
jnz loc_1033772  +
mov edi [esi+0D0h] +
mov edx [esi+0D4h] +
mov eax edi +
or eax edx +
jz loc_10336CF  +
mov eax [esi+0D8h] +
mov ecx [esi+0DCh] +
mov ebx eax +
or ebx ecx +
jz loc_10335E5  +
cmp ecx [esi+94h] +
ja loc_10335E5  +
jb loc_10335DD  +
cmp eax [esi+90h] +
ja loc_10335E5  +
mov [ebp+var_10] eax +
mov [ebp+var_C] ecx +
jmp loc_1033609  +
mov eax [esi+94h] +
mov ecx [esi+90h] +
mov [ebp+var_10] ecx +
mov [ebp+var_C] eax +
cmp edx eax +
jb loc_1033609  +
ja loc_10336CF  +
cmp edi ecx +
ja loc_10336CF  +
mov eax [esi+8Ch] +
cmp edx eax +
ja loc_103362F  +
jb loc_103361D  +
cmp edi [esi+88h] +
jnb loc_103362F  +
mov ecx [esi+88h] +
mov [esi+0D0h] ecx +
mov [esi+0D4h] eax +
mov edi [esi+0D4h] +
mov ebx [esi+0D0h] +
cmp [ebp+var_C] edi +
ja loc_103364D  +
jb loc_1033647  +
cmp [ebp+var_10] ebx +
jnb loc_103364D  +
mov [ebp+var_10] ebx +
mov [ebp+var_C] edi +
mov edx [esi+98h] +
mov ecx [esi+9Ch] +
sub edx ebx +
sbb ecx edi +
add edx [ebp+var_10] +
adc ecx [ebp+var_C] +
cmp ecx [ebp+var_1C] +
jb loc_103368B  +
ja loc_103366F  +
cmp edx [ebp+var_20] +
jbe loc_103368B  +
mov eax ebx +
sub eax [ebp+var_10] +
mov ecx edi +
sbb ecx [ebp+var_C] +
add eax [ebp+var_20] +
adc ecx [ebp+var_1C] +
mov [esi+98h] eax +
mov [esi+9Ch] ecx +
mov eax [esi+0E8h] +
mov ecx [esi+0ECh] +
or eax ecx +
jz loc_103388C  +
mov eax [esi+0F0h] +
mov ecx [esi+0F4h] +
mov edx eax +
or edx ecx +
jnz loc_10336F5  +
mov ecx [ebp+var_C] +
mov eax [ebp+var_10] +
mov [ebp+var_8] eax +
mov [ebp+var_4] ecx +
cmp [esi+0ECh] ecx +
jb loc_10336FB  +
ja loc_10336CF  +
cmp [esi+0E8h] eax +
jbe loc_10336FB  +
inc dword_1057948  +
mov esi [esi+2BCh] +
test esi esi +
jz loc_10336EE  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
mov [ebp+var_8] eax +
mov [ebp+var_4] ecx +
cmp [esi+0ECh] edi +
ja loc_1033719  +
jb loc_103370D  +
cmp [esi+0E8h] ebx +
jnb loc_1033719  +
mov [esi+0E8h] ebx +
mov [esi+0ECh] edi +
mov edi [esi+0ECh] +
mov ecx [esi+0E8h] +
cmp [ebp+var_4] edi +
ja loc_1033737  +
jb loc_1033731  +
cmp [ebp+var_8] ecx +
jnb loc_1033737  +
mov [ebp+var_8] ecx +
mov [ebp+var_4] edi +
mov eax [ebp+var_8] +
mov edx [ebp+var_4] +
sub eax ecx +
mov ecx [ebp+var_C] +
sbb edx edi +
mov edi [ebp+var_10] +
sub edi ebx +
sbb ecx [esi+0D4h] +
cmp ecx edx +
ja loc_103388C  +
jb loc_1033761  +
cmp edi eax +
jnb loc_103388C  +
mov eax [ebp+var_10] +
mov [ebp+var_8] eax +
mov eax [ebp+var_C] +
mov [ebp+var_4] eax +
jmp loc_103388C  +
cmp bx 1 +
jnz loc_103388C  +
mov edi [esi+9Ch] +
mov edx [ebp+var_1C] +
cmp edi edx +
jb loc_10337A1  +
ja loc_1033795  +
mov edi [esi+98h] +
cmp edi ecx +
jbe loc_10337A1  +
mov [esi+98h] ecx +
mov [esi+9Ch] edx +
mov ecx [esi+0E8h] +
mov edi [esi+0ECh] +
or ecx edi +
jz loc_103388C  +
mov ecx [esi+0F0h] +
mov edx [esi+0F4h] +
mov ebx ecx +
or ebx edx +
jz loc_10337E1  +
cmp edx [esi+94h] +
ja loc_10337E1  +
jb loc_10337D9  +
cmp ecx [esi+90h] +
ja loc_10337E1  +
mov [ebp+var_8] ecx +
mov [ebp+var_4] edx +
jmp loc_1033809  +
mov ecx [esi+94h] +
mov edx [esi+90h] +
mov [ebp+var_8] edx +
mov [ebp+var_4] ecx +
cmp edi ecx +
jb loc_1033809  +
ja loc_10336CF  +
cmp [esi+0E8h] edx +
ja loc_10336CF  +
mov ecx [esi+8Ch] +
cmp edi ecx +
ja loc_1033835  +
jb loc_1033823  +
mov edx [esi+0E8h] +
cmp edx [esi+88h] +
jnb loc_1033835  +
mov edx [esi+88h] +
mov [esi+0E8h] edx +
mov [esi+0ECh] ecx +
mov ebx [esi+0ECh] +
mov edi [esi+0E8h] +
cmp [ebp+var_4] ebx +
ja loc_1033853  +
jb loc_103384D  +
cmp [ebp+var_8] edi +
jnb loc_1033853  +
mov [ebp+var_8] edi +
mov [ebp+var_4] ebx +
mov edx [ebp+var_8] +
mov ecx [ebp+var_4] +
sub edx edi +
sbb ecx ebx +
cmp eax ecx +
ja loc_103387A  +
jb loc_1033868  +
cmp [ebp+var_28] edx +
jnb loc_103387A  +
mov eax [esi+90h] +
mov [ebp+var_8] eax +
mov eax [esi+94h] +
mov [ebp+var_4] eax +
mov [esi+0D0h] edi +
mov [esi+0D4h] ebx +
mov [ebp+var_10] edi +
mov [ebp+var_C] ebx +
mov ecx dword_1057944 +
mov edx [esi+60h] +
mov eax [ebp+arg_0] +
add ecx 10h +
add [ecx] edx +
mov edx [esi+64h] +
adc [ecx+4] edx +
mov edx [esi+2Ch] +
add edx [esi+28h] +
mov ecx dword_1057944 +
add [ecx+140h] edx +
mov ecx [esi+98h] +
or ecx [esi+9Ch] +
jz loc_10338F8  +
mov ecx dword_1057944 +
mov edx [esi+0B0h] +
add [ecx+2Ch] edx +
mov ecx dword_1057944 +
mov edx [esi+98h] +
add ecx 38h +
add [ecx] edx +
mov edx [esi+9Ch] +
adc [ecx+4] edx +
mov ecx dword_1057944 +
mov edx [esi+38h] +
add [ecx+40h] edx +
mov ecx [esi+0D0h] +
or ecx [esi+0D4h] +
jnz loc_103392C  +
mov ecx [esi+10h] +
test ecx ecx +
jnz loc_1033917  +
cmp word ptr [esi+82h] 13h +
jz loc_1033926  +
cmp ecx 1 +
jnz loc_103392C  +
cmp word ptr [esi+82h] 17h +
jnz loc_103392C  +
inc dword_105794C  +
movzx ecx word ptr [esi+108h] +
xor edx edx +
cmp cx dx +
jz loc_1033A5B  +
mov edi 190h +
cmp cx di +
jb loc_1033A5B  +
mov eax dword_1057944 +
inc dword ptr [eax+30h]  +
mov eax dword_1057944 +
mov ecx [esi+60h] +
add eax 110h +
add [eax] ecx +
mov ecx [esi+64h] +
adc [eax+4] ecx +
mov ecx [esi+2Ch] +
add ecx [esi+28h] +
mov eax dword_1057944 +
add [eax+154h] ecx +
mov eax dword_1057944 +
mov ecx [esi+30h] +
add [eax+0F8h] ecx +
mov eax dword_1057944 +
mov ecx [esi+34h] +
add [eax+0FCh] ecx +
mov eax dword_1057944 +
mov ecx [esi+38h] +
add [eax+100h] ecx +
mov eax dword_1057944 +
mov ecx [esi+44h] +
add [eax+104h] ecx +
mov eax dword_1057944 +
mov ecx [esi+3Ch] +
add [eax+108h] ecx +
mov eax dword_1057944 +
mov ecx [esi+40h] +
add [eax+10Ch] ecx +
mov eax dword_1057944 +
mov ecx [esi+90h] +
mov edx [esi+94h] +
add eax 120h +
sub ecx [esi+98h] +
sbb edx [esi+9Ch] +
sub ecx [esi+88h] +
sbb edx [esi+8Ch] +
add [eax] ecx +
adc [eax+4] edx +
mov eax [esi+50h] +
or eax [esi+54h] +
jz loc_1033A1F  +
mov eax [esi+58h] +
or eax [esi+5Ch] +
jz loc_1033A1F  +
mov eax [esi+70h] +
or eax [esi+74h] +
jz loc_1033A1F  +
mov eax [esi+78h] +
or eax [esi+7Ch] +
mov eax dword_1057944 +
mov ecx [esi+60h] +
mov edx [esi+64h] +
add eax 118h +
sub ecx [esi+90h] +
sbb edx [esi+94h] +
add ecx [esi+88h] +
adc edx [esi+8Ch] +
add [eax] ecx +
adc [eax+4] edx +
mov eax dword_1057944 +
add eax 128h +
jmp loc_1033E86  +
movzx ecx word ptr [esi+0B4h] +
cmp cx 0Ah +
jnz loc_1033B4D  +
mov ecx dword_1057944 +
inc dword ptr [ecx+18h]  +
mov ecx dword_1057944 +
mov edi [esi+60h] +
add ecx 50h +
add [ecx] edi +
mov edi [esi+64h] +
adc [ecx+4] edi +
mov edi [esi+2Ch] +
add edi [esi+28h] +
mov ecx dword_1057944 +
add [ecx+144h] edi +
mov ecx dword_1057944 +
mov edi [esi+30h] +
add [ecx+44h] edi +
mov ecx dword_1057944 +
mov edi [esi+34h] +
add [ecx+48h] edi +
mov ecx dword_1057944 +
mov edi [esi+38h] +
add [ecx+4Ch] edi +
cmp eax edx +
jz loc_1033AC6  +
inc dword ptr [eax+30h]  +
mov eax dword_1057944 +
mov ecx [esi+90h] +
mov edx [esi+94h] +
add eax 60h +
sub ecx [esi+98h] +
sbb edx [esi+9Ch] +
sub ecx [esi+88h] +
sbb edx [esi+8Ch] +
add [eax] ecx +
adc [eax+4] edx +
mov eax [esi+50h] +
or eax [esi+54h] +
jz loc_1033B15  +
mov eax [esi+58h] +
or eax [esi+5Ch] +
jz loc_1033B15  +
mov eax [esi+70h] +
or eax [esi+74h] +
jz loc_1033B15  +
mov eax [esi+78h] +
or eax [esi+7Ch] +
mov eax dword_1057944 +
mov ecx [esi+60h] +
mov edx [esi+64h] +
add eax 58h +
sub ecx [esi+90h] +
sbb edx [esi+94h] +
add ecx [esi+88h] +
adc edx [esi+8Ch] +
add [eax] ecx +
adc [eax+4] edx +
mov eax dword_1057944 +
add eax 68h +
jmp loc_1033E86  +
cmp cx 0Bh +
jnz loc_1033C7F  +
mov ecx dword_1057944 +
inc dword ptr [ecx+1Ch]  +
mov ecx dword_1057944 +
mov edi [esi+60h] +
mov ebx [ebp+var_14] +
sub ecx 0FFFFFF80h +
add [ecx] edi +
mov edi [esi+64h] +
adc [ecx+4] edi +
mov ecx dword_1057944 +
mov edi [ebp+var_18] +
add ecx 88h +
sub edi [esi+0C0h] +
sbb ebx [esi+0C4h] +
add [ecx] edi +
adc [ecx+4] ebx +
mov edi [esi+2Ch] +
add edi [esi+28h] +
mov ecx dword_1057944 +
add [ecx+148h] edi +
mov ecx dword_1057944 +
mov edi [esi+44h] +
add [ecx+70h] edi +
mov ecx dword_1057944 +
mov edi [esi+30h] +
add [ecx+74h] edi +
mov ecx dword_1057944 +
mov edi [esi+34h] +
add [ecx+78h] edi +
mov ecx dword_1057944 +
mov edi [esi+38h] +
add [ecx+7Ch] edi +
cmp eax edx +
jz loc_1033BE0  +
inc dword ptr [eax+34h]  +
mov eax dword_1057944 +
mov ecx [esi+0C0h] +
mov edx [esi+0C4h] +
add eax 98h +
sub ecx [esi+98h] +
sbb edx [esi+9Ch] +
sub ecx [ebp+var_18] +
sbb edx [ebp+var_14] +
sub ecx [esi+88h] +
sbb edx [esi+8Ch] +
add ecx [esi+90h] +
adc edx [esi+94h] +
add [eax] ecx +
adc [eax+4] edx +
mov eax [esi+50h] +
or eax [esi+54h] +
jz loc_1033C43  +
mov eax [esi+58h] +
or eax [esi+5Ch] +
jz loc_1033C43  +
mov eax [esi+70h] +
or eax [esi+74h] +
jz loc_1033C43  +
mov eax [esi+78h] +
or eax [esi+7Ch] +
mov eax dword_1057944 +
mov ecx [esi+60h] +
mov edx [esi+64h] +
add eax 90h +
sub ecx [esi+90h] +
sbb edx [esi+94h] +
add ecx [esi+88h] +
adc edx [esi+8Ch] +
add [eax] ecx +
adc [eax+4] edx +
mov eax dword_1057944 +
add eax 0A0h +
jmp loc_1033E86  +
cmp dword ptr [esi+10h] 1 +
jnz loc_1033C8B  +
cmp cx 1 +
jz loc_1033C95  +
cmp cx 0Ch +
jnz loc_1033E99  +
mov ecx [esi+0E8h] +
mov edi [esi+0ECh] +
mov ebx ecx +
or ebx edi +
mov [ebp+var_18] edx +
mov [ebp+var_20] edx +
mov [ebp+var_1C] edx +
jz loc_1033CC5  +
mov ebx [ebp+var_8] +
or ebx [ebp+var_4] +
jz loc_1033CC5  +
mov ebx [ebp+var_8] +
mov edx [ebp+var_4] +
sub ebx ecx +
sbb edx edi +
mov [ebp+var_18] ebx +
mov ecx [esi+0D0h] +
mov edi [esi+0D4h] +
mov ebx ecx +
or ebx edi +
jz loc_1033D09  +
mov ebx [ebp+var_10] +
or ebx [ebp+var_C] +
jz loc_1033D09  +
mov ebx [ebp+var_10] +
sub ebx ecx +
mov ecx [ebp+var_C] +
sbb ecx edi +
cmp edx ecx +
jb loc_1033CFE  +
ja loc_1033CF4  +
cmp [ebp+var_18] ebx +
jbe loc_1033CFE  +
and [ebp+var_20] 0 +
and [ebp+var_1C] 0 +
jmp loc_1033D09  +
sub ebx [ebp+var_18] +
sbb ecx edx +
mov [ebp+var_20] ebx +
mov [ebp+var_1C] ecx +
mov ecx dword_1057944 +
inc dword ptr [ecx+20h]  +
mov ecx dword_1057944 +
mov edi [esi+60h] +
add ecx 0C0h +
add [ecx] edi +
mov edi [esi+64h] +
adc [ecx+4] edi +
mov edi [esi+2Ch] +
add edi [esi+28h] +
mov ecx dword_1057944 +
add [ecx+14Ch] edi +
test eax eax +
jz loc_1033D42  +
inc dword ptr [eax+38h]  +
mov ecx dword_1057944 +
mov edi [esi+90h] +
mov ebx [esi+94h] +
mov eax [ebp+var_18] +
add ecx 0E0h +
sub edi [esi+98h] +
sbb ebx [esi+9Ch] +
sub edi [ebp+var_20] +
sbb ebx [ebp+var_1C] +
sub edi eax +
sbb ebx edx +
sub edi [esi+88h] +
sbb ebx [esi+8Ch] +
add [ecx] edi +
adc [ecx+4] ebx +
mov ecx dword_1057944 +
inc dword ptr [ecx+24h]  +
mov ecx dword_1057944 +
mov edi [esi+60h] +
add ecx 0C8h +
add [ecx] edi +
mov edi [esi+64h] +
adc [ecx+4] edi +
mov ecx dword_1057944 +
add ecx 0D0h +
add [ecx] eax +
adc [ecx+4] edx +
mov eax [esi+2Ch] +
add eax [esi+28h] +
mov ecx dword_1057944 +
add [ecx+150h] eax +
mov ecx dword_1057944 +
mov eax [esi+40h] +
add [ecx+0A8h] eax +
mov ecx dword_1057944 +
mov eax [esi+30h] +
add [ecx+0ACh] eax +
mov ecx dword_1057944 +
mov eax [esi+34h] +
add [ecx+0B0h] eax +
mov ecx dword_1057944 +
mov eax [esi+38h] +
add [ecx+0B8h] eax +
mov eax [esi+3Ch] +
mov ecx dword_1057944 +
add [ecx+0B4h] eax +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1033E1C  +
inc dword ptr [eax+40h]  +
mov eax dword_1057944 +
mov ecx [ebp+var_20] +
add eax 0E8h +
add [eax] ecx +
mov ecx [ebp+var_1C] +
adc [eax+4] ecx +
mov eax [esi+50h] +
or eax [esi+54h] +
jz loc_1033E4F  +
mov eax [esi+58h] +
or eax [esi+5Ch] +
jz loc_1033E4F  +
mov eax [esi+70h] +
or eax [esi+74h] +
jz loc_1033E4F  +
mov eax [esi+78h] +
or eax [esi+7Ch] +
mov eax dword_1057944 +
mov ecx [esi+60h] +
mov edx [esi+64h] +
add eax 0D8h +
sub ecx [esi+90h] +
sbb edx [esi+94h] +
add ecx [esi+88h] +
adc edx [esi+8Ch] +
add [eax] ecx +
adc [eax+4] edx +
mov eax dword_1057944 +
add eax 0F0h +
mov ecx [esi+98h] +
add [eax] ecx +
mov ecx [esi+9Ch] +
adc [eax+4] ecx +
jmp loc_1033ED8  +
cmp cx 0Dh +
jnz loc_1033ED8  +
mov ecx dword_1057944 +
inc dword ptr [ecx+28h]  +
mov ecx dword_1057944 +
mov edi [esi+60h] +
add ecx 130h +
add [ecx] edi +
mov edi [esi+64h] +
adc [ecx+4] edi +
mov edi [esi+2Ch] +
add edi [esi+28h] +
mov ecx dword_1057944 +
add [ecx+158h] edi +
cmp eax edx +
jz loc_1033ED8  +
inc dword ptr [eax+3Ch]  +
mov eax dword_1057944 +
inc dword ptr [eax]  +
mov ecx [esi+2Ch] +
add ecx [esi+28h] +
mov eax dword_1057944 +
add [eax+138h] ecx +
jmp loc_10336D5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
cmp eax [ebp+arg_8] +
jz locret_1033F8D  +
push esi  +
mov esi [ebp+arg_0] +
mov edx [esi] +
push edi  +
xor ecx ecx +
xor eax eax +
xor edi edi +
cmp esi edx +
jz loc_1033F8B  +
push ebx  +
cmp edi [ebp+arg_4] +
jnz loc_1033F26  +
mov eax edx +
mov ebx [ebp+arg_8] +
cmp edi ebx +
jnz loc_1033F2F  +
mov ecx edx +
test eax eax +
jz loc_1033F37  +
test ecx ecx +
jnz loc_1033F3E  +
mov edx [edx] +
inc edi  +
cmp esi edx +
jnz loc_1033F1F  +
test eax eax +
jz loc_1033F8A  +
test ecx ecx +
jz loc_1033F8A  +
mov edi [eax+4] +
mov edx [eax] +
mov esi edi +
mov [esi] edx +
mov [edx+4] esi +
mov [ebp+var_8] edx +
mov edx [ecx] +
mov [eax] edx +
mov [eax+4] ecx +
mov [ecx] eax +
mov edx [eax] +
mov [edx+4] eax +
mov eax [ebp+arg_4] +
lea edx [ebx+1] +
cmp eax edx +
jz loc_1033F8A  +
inc eax  +
cmp ebx eax +
jz loc_1033F8A  +
mov eax [ecx] +
mov edx [ecx+4] +
mov [edx] eax +
mov [eax+4] edx +
mov eax [edi] +
mov [ecx] eax +
mov [ecx+4] edi +
mov [edi] ecx +
mov eax [ecx] +
mov [eax+4] ecx +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov ecx [edx] +
push edi  +
xor eax eax +
xor edi edi +
cmp edx ecx +
jz loc_1033FCA  +
push esi  +
mov esi ecx +
cmp edi [ebp+arg_4] +
jz loc_1033FB8  +
mov ecx [ecx] +
inc edi  +
cmp edx ecx +
jnz loc_1033FAA  +
test esi esi +
jz loc_1033FC9  +
movzx eax word ptr [esi+10h] +
movzx ecx byte ptr [esi+12h] +
shl eax 8 +
add eax ecx +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_1033F96  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_0]  +
call sub_1033F96  +
cmp esi eax +
jbe loc_1033FFB  +
xor eax eax +
inc eax  +
jmp loc_1033FFD  +
sbb eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_1034038  +
push esi  +
mov esi edi +
shr esi 1 +
push esi  +
push edi  +
push [ebp+arg_0]  +
call sub_1033FD4  +
test eax eax +
jle loc_1034037  +
push edi  +
push esi  +
push [ebp+arg_0]  +
call sub_1033EFA  +
mov edi esi +
test esi esi +
jnz loc_1034015  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
xor esi esi +
lea edi [esi+1] +
cmp edi [ebp+arg_4] +
ja loc_1034066  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call sub_1033FD4  +
test eax eax +
jle loc_1034066  +
mov esi edi +
push esi  +
push ebx  +
push [ebp+arg_0]  +
call sub_1033FD4  +
test eax eax +
jge loc_1034087  +
push esi  +
push ebx  +
push [ebp+arg_0]  +
call sub_1033EFA  +
mov ebx esi +
add esi esi +
cmp esi [ebp+arg_4] +
jbe loc_103404E  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
inc edi  +
cmp esi edi +
jbe loc_10340CE  +
push edi  +
push [ebp+arg_0]  +
call sub_1034007  +
inc edi  +
cmp edi esi +
jb loc_10340A4  +
dec esi  +
jz loc_10340CE  +
push esi  +
push 0  +
push [ebp+arg_0]  +
call sub_1033EFA  +
dec esi  +
push esi  +
push [ebp+arg_0]  +
call sub_1034042  +
test esi esi +
ja loc_10340B5  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ds:fwprintf +
push edi  +
mov edi [ebp+arg_4] +
movzx eax word ptr [edi+16h] +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_10]  +
push offset a10d20s15d  +
push ebx  +
call esi  +
mov eax [edi+20h] +
add esp 14h +
test eax eax +
jz loc_1034118  +
cmp [ebp+arg_14] 0 +
jnz loc_1034118  +
push eax  +
push offset a15s  +
jmp loc_1034122  +
movzx eax byte ptr [edi+15h] +
push eax  +
push offset a15d  +
push ebx  +
call esi  +
movzx eax byte ptr [edi+12h] +
add esp 0Ch +
push [ebp+arg_C]  +
push eax  +
push offset a15d38s  +
push ebx  +
call esi  +
add esp 10h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
mov eax [ebp+arg_4] +
movzx ecx byte ptr [eax+12h] +
movzx eax word ptr [eax+10h] +
push ecx  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_10]  +
push offset a10d20s15d15d38  +
push [ebp+arg_0]  +
call ds:fwprintf  +
add esp 1Ch +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1034192  +
cmp edx 7FFFFFFFh +
jbe loc_1034197  +
mov eax 80070057h +
test eax eax +
jl loc_10341AD  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_103176C  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push esi  +
mov esi 7FFFFFFFh +
test edx edx +
jz loc_10341CF  +
cmp edx esi +
jbe loc_10341D4  +
mov eax 80070057h +
mov ebx [ebp+arg_0] +
test eax eax +
jl loc_10341EC  +
push edi  +
lea edi [ebp+arg_0] +
mov eax ebx +
call sub_1031737  +
mov ecx [ebp+arg_0] +
pop edi  +
jmp loc_10341EE  +
xor ecx ecx +
test eax eax +
jl loc_1034204  +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_8] +
push esi  +
sub edx ecx +
push 0  +
add ecx ebx +
call sub_103176C  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1034225  +
cmp ecx 7FFFFFFFh +
jbe loc_103422A  +
mov eax 80070057h +
test eax eax +
jl loc_1034267  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnprintf  +
add esp 10h +
test eax eax +
jl loc_103425A  +
cmp eax esi +
ja loc_103425A  +
jnz loc_1034262  +
mov [esi+edi] bl +
jmp loc_1034262  +
mov [esi+edi] bl +
mov ebx 8007007Ah +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_0] 2 +
jnz loc_10342AD  +
push dword_10576E8  +
call ds:DecodePointer  +
cmp byte_10566DC 0 +
jz loc_10342A6  +
test eax eax +
jz loc_10342A6  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
call eax  +
xor esi esi +
mov byte ptr [eax] 0 +
inc esi  +
jmp loc_10342E5  +
push offset aUndecodableIpA  +
jmp loc_10342DA  +
cmp [ebp+arg_0] 17h +
jnz loc_10342D5  +
push dword_10576F0  +
call ds:DecodePointer  +
cmp byte_10566DC 0 +
jz loc_10342A6  +
test eax eax +
jz loc_10342A6  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
jmp loc_103429C  +
push offset aUnknownIpAddre  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
call sub_103417C  +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_0] 2 +
jnz loc_1034332  +
push dword_10576EC  +
call ds:DecodePointer  +
cmp byte_10566DC 0 +
jz loc_103432B  +
test eax eax +
jz loc_103432B  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
call eax  +
xor ecx ecx +
xor esi esi +
mov [eax] cx +
inc esi  +
jmp loc_103436A  +
push offset aUndecodableI_0  +
jmp loc_103435F  +
cmp [ebp+arg_0] 17h +
jnz loc_103435A  +
push dword_10576F4  +
call ds:DecodePointer  +
cmp byte_10566DC 0 +
jz loc_103432B  +
test eax eax +
jz loc_103432B  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
jmp loc_103431F  +
push offset aUnknownIpAdd_0  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
call sub_101F55E  +
mov eax esi +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jnz loc_103438A  +
xor eax eax +
jmp loc_1034437  +
mov eax edi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_103438F  +
sub eax edx +
cmp [ebp+arg_0] 0 +
push esi  +
mov esi eax +
mov [ebp+arg_8] esi +
jnz loc_10343AB  +
xor eax eax +
jmp loc_1034436  +
push ebx  +
mov ebx [ebp+arg_4] +
push ebx  +
push 0  +
push [ebp+arg_0]  +
call memset  +
lea eax [ebx-1] +
add esp 0Ch +
cmp esi eax +
ja loc_10343D8  +
push edi  +
push ebx  +
push [ebp+arg_0]  +
call sub_103417C  +
jmp loc_1034432  +
cmp al 2Fh +
jz loc_10343E0  +
test esi esi +
jbe loc_10343E2  +
dec esi  +
mov al [esi+edi] +
cmp al 5Ch +
jnz loc_10343D0  +
test esi esi +
jz loc_10343C4  +
mov eax [ebp+arg_8] +
sub eax esi +
lea ecx [ebx-3] +
cmp eax ecx +
jb loc_1034405  +
inc edi  +
push edi  +
push offset a__S  +
push ebx  +
push [ebp+arg_0]  +
call sub_103420F  +
add esp 10h +
jmp loc_1034432  +
mov eax esi +
sub eax [ebp+arg_8] +
push edi  +
lea eax [eax+ebx-2] +
push eax  +
push [ebp+arg_0]  +
call sub_103417C  +
push offset a___0  +
push ebx  +
push [ebp+arg_0]  +
call sub_10341B6  +
add esi edi +
push esi  +
push ebx  +
push [ebp+arg_0]  +
call sub_10341B6  +
mov eax [ebp+arg_0] +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_8] +
test ebx ebx +
jnz loc_1034455  +
xor eax eax +
jmp loc_1034512  +
mov eax ebx +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_103445A  +
sub eax edx +
sar eax 1 +
cmp [ebp+arg_0] 0 +
push esi  +
mov esi eax +
mov [ebp+arg_8] esi +
jnz loc_103447B  +
xor eax eax +
jmp loc_1034511  +
push edi  +
mov edi [ebp+arg_4] +
lea eax [edi+edi] +
push eax  +
push 0  +
push [ebp+arg_0]  +
call memset  +
lea eax [edi-1] +
add esp 0Ch +
cmp esi eax +
ja loc_10344AD  +
push ebx  +
push edi  +
push [ebp+arg_0]  +
call sub_101F55E  +
jmp loc_103450D  +
cmp ax 2Fh +
jz loc_10344B8  +
test esi esi +
jbe loc_10344BA  +
dec esi  +
movzx eax word ptr [ebx+esi*2] +
cmp ax 5Ch +
jnz loc_10344A3  +
test esi esi +
jz loc_1034497  +
mov eax [ebp+arg_8] +
sub eax esi +
lea ecx [edi-3] +
cmp eax ecx +
jb loc_10344DF  +
add ebx 2 +
push ebx  +
push offset a__Ws  +
push edi  +
push [ebp+arg_0]  +
call sub_101BCA7  +
add esp 10h +
jmp loc_103450D  +
mov eax esi +
sub eax [ebp+arg_8] +
push ebx  +
lea eax [eax+edi-2] +
push eax  +
push [ebp+arg_0]  +
call sub_101F55E  +
push offset a__  +
push edi  +
push [ebp+arg_0]  +
call sub_101BC4D  +
lea eax [ebx+esi*2] +
push eax  +
push edi  +
push [ebp+arg_0]  +
call sub_101BC4D  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 238h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
and [ebp+var_218] 0 +
mov dword ptr [ebp+var_21C] eax +
mov eax [ebp+arg_C] +
mov [ebp+var_220] eax +
mov eax [ebp+arg_14] +
mov [ebp+FileTime.dwHighDateTime] eax +
mov eax [ebp+arg_10] +
push ebx  +
mov ebx [ebp+arg_0] +
mov [ebp+FileTime.dwLowDateTime] eax +
lea eax [ebp+UniversalTime] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
test eax eax +
jz loc_10346BE  +
cmp [ebp+UniversalTime.wMonth] 0Ch +
ja loc_10346BE  +
cmp [ebp+arg_18] 0 +
push esi  +
push edi  +
jz loc_10345AA  +
lea eax [ebp+Time] +
push eax  +
lea eax [ebp+UniversalTime] +
push eax  +
push 0  +
call ds:SystemTimeToTzSpecificLocalTime  +
jmp loc_10345BA  +
lea esi [ebp+UniversalTime] +
lea edi [ebp+Time] +
movs   +
movs   +
movs   +
movs   +
test eax eax +
jz loc_10346AF  +
mov eax dword ptr [ebp+Time.wYear] +
shr eax 10h +
cmp ax 0Ch +
ja loc_10346AF  +
xor eax eax +
mov [ebp+DateStr] ax +
mov [ebp+TimeStr] ax +
mov edi 80h +
push edi  +
lea eax [ebp+DateStr] +
push eax  +
push 0  +
lea eax [ebp+Time] +
push eax  +
push 2  +
mov esi 400h +
push esi  +
call ds:GetDateFormatW  +
push edi  +
lea eax [ebp+TimeStr] +
push eax  +
xor edi edi +
push edi  +
lea eax [ebp+Time] +
push eax  +
push edi  +
push esi  +
call ds:GetTimeFormatW  +
lea eax [ebp+TimeStr] +
push eax  +
lea eax [ebp+DateStr] +
push eax  +
movzx eax [ebp+Time.wSecond] +
push eax  +
movzx eax [ebp+Time.wMinute] +
push eax  +
movzx eax [ebp+Time.wHour] +
push eax  +
movzx eax [ebp+Time.wDayOfWeek] +
push eax  +
movzx eax [ebp+Time.wDay] +
push eax  +
movzx eax [ebp+Time.wMonth] +
push eax  +
movzx eax [ebp+Time.wYear] +
push eax  +
cmp [ebp+var_220] edi +
jz loc_1034696  +
push [ebp+var_220]  +
push dword ptr [ebp+var_21C]  +
push offset aDataNameSSYear  +
push [ebp+arg_4]  +
push ebx  +
call sub_101BCA7  +
add esp 38h +
mov [ebp+var_218] eax +
jmp loc_10346B4  +
push dword ptr [ebp+var_21C]  +
push offset aDataNameSYearD  +
push [ebp+arg_4]  +
push ebx  +
call sub_101BCA7  +
add esp 34h +
jmp loc_103468E  +
xor eax eax +
mov [ebx] ax +
mov eax [ebp+var_218] +
pop edi  +
pop esi  +
jmp loc_10346C4  +
xor eax eax +
mov [ebx] ax +
inc eax  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 64h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
fldz   +
push esi  +
mov esi [ebp+arg_4] +
xor ecx ecx +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_64] eax +
mov [ebp+var_48] ecx +
cmp [ebp+arg_24] ecx +
jnz loc_103470C  +
fld  [ebp+arg_2C] +
fstp  [ebp+var_58] +
jmp loc_103470F  +
fst  [ebp+var_58] +
cmp [ebp+arg_34] ecx +
jnz loc_103471C  +
fld  [ebp+arg_3C] +
fstp  [ebp+var_50] +
jmp loc_103471F  +
fst  [ebp+var_50] +
cmp [ebp+arg_14] ecx +
jnz loc_1034729  +
fstp  st +
fld  [ebp+arg_1C] +
mov eax [esi+10h] +
fstp  [ebp+var_60] +
cmp eax ecx +
jbe loc_103475A  +
cmp eax 0FFFFFFFFh +
jnb loc_103475A  +
push eax  +
push offset aD_1  +
lea eax [ebp+var_44] +
push 20h  +
push eax  +
call sub_101BCA7  +
add esp 10h +
test eax eax +
jl loc_1034959  +
lea eax [ebp+var_44] +
mov [ebp+var_48] eax +
push ebx  +
push edi  +
push offset aItem_2  +
call sub_1023CCF  +
cmp [ebp+arg_48] 0 +
mov ebx offset aData +
jz loc_10347AF  +
push edi  +
push offset aDataNameDisp_0  +
call sub_1023CCF  +
push [ebp+var_64]  +
push 0  +
push 1  +
push edi  +
call sub_101D200  +
push edi  +
push ebx  +
call sub_1023CCF  +
push edi  +
push offset aDataNameCoun_0  +
call sub_1023CCF  +
push dword ptr [esi+14h]  +
push 0  +
push 1  +
push edi  +
call sub_101D200  +
push edi  +
push ebx  +
call sub_1023CCF  +
cmp [ebp+arg_4C] 0 +
jz loc_1034815  +
cmp dword ptr [esi+8] 0 +
jz loc_1034815  +
push edi  +
push offset aDataNameInst_0  +
call sub_1023CCF  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_10347E3  +
push eax  +
push 0  +
push 1  +
push edi  +
call sub_101D200  +
push edi  +
push offset asc_1001598  +
call sub_1023CCF  +
push dword ptr [esi+8]  +
push 0  +
push 1  +
push edi  +
call sub_101D200  +
cmp [ebp+var_48] 0 +
jz loc_103480E  +
push edi  +
push offset asc_1007CC8  +
call sub_1023CCF  +
push [ebp+var_48]  +
push 0  +
push 1  +
push edi  +
call sub_101D200  +
push edi  +
push ebx  +
call sub_1023CCF  +
cmp [ebp+arg_50] 0 +
jz loc_103483E  +
cmp dword ptr [esi] 0 +
jz loc_103483E  +
push edi  +
push offset aDataNameMach_0  +
call sub_1023CCF  +
push dword ptr [esi]  +
push 0  +
push 1  +
push edi  +
call sub_101D200  +
push edi  +
push ebx  +
call sub_1023CCF  +
xor ecx ecx +
pop ebx  +
cmp [ebp+arg_44] ecx +
jz loc_10348F8  +
cmp [ebp+arg_44] 100h +
jz loc_10348F8  +
cmp [ebp+arg_54] ecx +
jz loc_103488A  +
fld  ds:dbl_1007C90 +
fcomp  [ebp+var_50] +
fnstsw  ax +
test ah 41h +
jnz loc_1034871  +
push 3  +
pop eax  +
jmp loc_1034873  +
xor eax eax +
fld  [ebp+var_50] +
push ecx  +
push ecx  +
fstp  [esp+74h+var_74] +
push eax  +
push offset aDataNameMean1_  +
push edi  +
call sub_1024264  +
add esp 14h +
cmp [ebp+arg_58] 0 +
jz loc_10348BE  +
fld  ds:dbl_1007C90 +
fcomp  [ebp+var_60] +
fnstsw  ax +
test ah 41h +
jnz loc_10348A5  +
push 3  +
pop eax  +
jmp loc_10348A7  +
xor eax eax +
fld  [ebp+var_60] +
push ecx  +
push ecx  +
fstp  [esp+74h+var_74] +
push eax  +
push offset aDataNameMin1_F  +
push edi  +
call sub_1024264  +
add esp 14h +
cmp [ebp+arg_5C] 0 +
jz loc_103494E  +
fld  ds:dbl_1007C90 +
fcomp  [ebp+var_58] +
fnstsw  ax +
test ah 41h +
jnz loc_10348DD  +
push 3  +
pop eax  +
jmp loc_10348DF  +
xor eax eax +
fld  [ebp+var_58] +
push ecx  +
push ecx  +
fstp  [esp+74h+var_74] +
push eax  +
push offset aDataNameMax1_F  +
push edi  +
call sub_1024264  +
add esp 14h +
jmp loc_103494E  +
cmp [ebp+arg_54] ecx +
jz loc_1034914  +
fld  [ebp+var_50] +
call _ftol2_sse  +
push eax  +
push offset aDataNameMeanXD  +
push edi  +
call sub_1024264  +
add esp 0Ch +
cmp [ebp+arg_58] 0 +
jz loc_1034931  +
fld  [ebp+var_60] +
call _ftol2_sse  +
push eax  +
push offset aDataNameMinXDa  +
push edi  +
call sub_1024264  +
add esp 0Ch +
cmp [ebp+arg_5C] 0 +
jz loc_103494E  +
fld  [ebp+var_58] +
call _ftol2_sse  +
push eax  +
push offset aDataNameMaxXDa  +
push edi  +
call sub_1024264  +
add esp 0Ch +
push edi  +
push offset aItem_0  +
call sub_1023CCF  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn 60h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax dword_10566D8 +
mov eax [eax+684h] +
and [ebp+var_4] 0 +
push ebx  +
mov ebx [eax] +
push esi  +
push edi  +
mov [ebp+var_C] eax +
cmp eax ebx +
jz loc_1034A42  +
jmp loc_103499A  +
mov ebx [ebp+var_8] +
mov edx [ebp+var_4] +
mov eax [ebx] +
mov [ebp+var_8] eax +
test edx edx +
jnz loc_10349BB  +
push edx  +
push 1388h  +
push offset aTracerptuserpd  +
push [ebp+NumberOfBytesWritten]  +
call sub_102F3F0  +
jmp loc_10349FD  +
mov eax [ebx+0Ch] +
mov ecx [eax+4] +
mov si [edx] +
cmp si [ecx] +
jnz loc_10349E7  +
test si si +
jz loc_10349E3  +
mov si [edx+2] +
cmp si [ecx+2] +
jnz loc_10349E7  +
add edx 4 +
add ecx 4 +
test si si +
jnz loc_10349C1  +
xor ecx ecx +
jmp loc_10349EC  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jz loc_1034A11  +
push [ebp+NumberOfBytesWritten]  +
push offset aTable  +
call sub_1023CCF  +
push dword ptr [ebx+0Ch]  +
push [ebp+NumberOfBytesWritten]  +
call sub_10318F4  +
mov eax [ebx+0Ch] +
mov ecx [eax+4] +
mov [ebp+var_4] ecx +
xor ecx ecx +
inc ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push dword ptr [ebx+18h]  +
lea esi [ebx+20h] +
sub esp 38h +
push 0Eh  +
pop ecx  +
mov edi esp +
push dword ptr [ebx+58h]  +
movs   +
push eax  +
push [ebp+NumberOfBytesWritten]  +
call sub_10346D8  +
mov eax [ebp+var_8] +
cmp [ebp+var_C] eax +
jnz loc_1034997  +
push [ebp+NumberOfBytesWritten]  +
push offset aTable  +
call sub_1023CCF  +
push [ebp+NumberOfBytesWritten]  +
push offset aSection_0  +
call sub_1023CCF  +
push [ebp+NumberOfBytesWritten]  +
call sub_10319B9  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
movzx ecx byte ptr [eax+0Fh] +
push ecx  +
movzx ecx byte ptr [eax+0Eh] +
push ecx  +
movzx ecx byte ptr [eax+0Dh] +
push ecx  +
movzx ecx byte ptr [eax+0Ch] +
push ecx  +
movzx ecx byte ptr [eax+0Bh] +
push ecx  +
movzx ecx byte ptr [eax+0Ah] +
push ecx  +
movzx ecx byte ptr [eax+9] +
push ecx  +
movzx ecx byte ptr [eax+8] +
push ecx  +
movzx ecx word ptr [eax+6] +
push ecx  +
movzx ecx word ptr [eax+4] +
push ecx  +
push dword ptr [eax]  +
push offset a08x04x04x02x02  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101BCA7  +
mov eax [ebp+arg_0] +
add esp 38h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C8h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx stru_1079A28.dwLowDateTime +
sub ecx SystemTimeAsFileTime.dwLowDateTime +
mov [ebp+lpBuffer] eax +
mov eax stru_1079A28.dwHighDateTime +
sbb eax SystemTimeAsFileTime.dwHighDateTime +
and dword ptr [ebp+var_C0] 0 +
mov dword ptr [ebp+var_C0+4] eax +
and dword ptr [ebp+var_C0+4] 80000000h +
and eax 7FFFFFFFh +
cmp byte_1057926 0 +
mov dword ptr [ebp+var_B8] ecx +
mov dword ptr [ebp+var_B8+4] eax +
fild  [ebp+var_B8] +
push esi  +
fild  [ebp+var_C0] +
mov esi dword_1079AC0 +
fchs   +
faddp st(1) st +
fdiv  ds:dbl_10018C8 +
fstp  [ebp+var_C8] +
jz loc_103501C  +
cmp dword_1079AB8 offset dword_1079AB8 +
jz loc_103501C  +
cmp dword_1079AB0 offset dword_1079AB0 +
jz loc_103501C  +
lea eax [ebp+var_AC] +
push eax  +
mov eax dword_1055AB4 +
push 8  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_101B8F5  +
test eax eax +
jl loc_103501C  +
push ebx  +
push edi  +
mov edi ds:VirtualAlloc +
mov ebx 1000h +
jmp loc_1034D02  +
xor ecx ecx +
mov dword_1057958 ecx +
cmp esi offset dword_1079AC0 +
jz loc_103501A  +
cmp ecx dword_1055AB4 +
jz loc_1034CCA  +
mov edx [esi+34h] +
add edx [esi+2Ch] +
jz loc_1034BE6  +
mov [eax+ecx*8] esi +
mov edx [esi+34h] +
add edx [esi+2Ch] +
inc ecx  +
mov [eax+ecx*8-4] edx +
mov dword_1057958 ecx +
mov esi [esi] +
cmp esi offset dword_1079AC0 +
jnz loc_1034BBE  +
cmp ecx 1 +
jbe loc_103501A  +
push offset sub_1032892  +
push 8  +
push ecx  +
push eax  +
call ds:qsort  +
add esp 10h +
push 14h  +
pop eax  +
cmp dword_1057958 eax +
jbe loc_1034C1B  +
mov dword_1057958 eax +
push 0Ah  +
push offset aTableNameHotfi  +
push [ebp+lpBuffer]  +
call sub_1024264  +
xor eax eax +
add esp 0Ch +
mov dword_1057940 eax +
cmp dword_1057958 eax +
jbe loc_1034FF3  +
mov ecx lpAddress +
mov esi [ecx+eax*8] +
mov [ebp+var_AC] offset dword_1008298 +
test esi esi +
jz loc_103501A  +
mov eax [esi+20h] +
test eax eax +
jz loc_1034C6B  +
mov [ebp+var_AC] eax +
cmp dword ptr [esi+24h] 0 +
jnz loc_1034CAB  +
mov ebx ds:lstrlenW +
mov edi offset aUnknown_3 +
push edi  +
call ebx  +
lea eax [eax+eax+2] +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [esi+24h] eax +
test eax eax +
jz loc_1034FDC  +
push edi  +
push edi  +
call ebx  +
inc eax  +
push eax  +
push dword ptr [esi+24h]  +
call sub_101F55E  +
push 8  +
push offset aDevice  +
push dword ptr [esi+24h]  +
call ds:__imp__wcsnicmp  +
add esp 0Ch +
test eax eax +
mov eax [esi+24h] +
jnz loc_1034D31  +
add eax 10h +
jmp loc_1034D28  +
push 8000h  +
push 0  +
push eax  +
call ds:VirtualFree  +
add dword_1055AB4 100000h +
lea eax [ebp+var_AC] +
push eax  +
mov eax dword_1055AB4 +
push 8  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_101B8F5  +
test eax eax +
jl loc_103501A  +
push 4  +
push ebx  +
push [ebp+var_AC]  +
push 0  +
call edi  +
mov lpAddress eax +
test eax eax +
jnz loc_1034BAA  +
jmp loc_103501A  +
test cx cx +
jz loc_1034D31  +
inc eax  +
inc eax  +
movzx ecx word ptr [eax] +
cmp cx 5Ch +
jnz loc_1034D21  +
mov ecx eax +
lea edi [ecx+2] +
mov dx [ecx] +
inc ecx  +
inc ecx  +
test dx dx +
jnz loc_1034D36  +
sub ecx edi +
sar ecx 1 +
cmp ecx 50h +
jbe loc_1034D60  +
push eax  +
push 51h  +
lea eax [ebp+var_A8] +
push eax  +
call sub_1034441  +
lea edi [ebp+var_A8] +
jmp loc_1034D62  +
mov edi eax +
push dword ptr [esi+28h]  +
mov ebx [ebp+lpBuffer] +
push offset aItemDataName_2  +
push ebx  +
call sub_1024264  +
add esp 0Ch +
push ebx  +
push offset aDataNameFile  +
call sub_1023CCF  +
push [ebp+var_AC]  +
push 0  +
push 1  +
push ebx  +
call sub_101D200  +
push edi  +
push 0  +
push 1  +
push ebx  +
call sub_101D200  +
push ebx  +
push offset aData  +
call sub_1023CCF  +
mov ecx [esi+34h] +
test ecx ecx +
jz loc_1034DBC  +
mov eax [esi+3Ch] +
xor edx edx +
div  ecx +
mov ebx eax +
jmp loc_1034DBE  +
xor ebx ebx +
fldz   +
fld  st +
fld  [ebp+var_C8] +
fucom  st(1) +
fnstsw  ax +
fstp  st(1) +
test ah 44h +
jnp loc_1034DEF  +
mov eax ecx +
mov dword ptr [ebp+var_B8+4] eax +
fild  dword ptr [ebp+var_B8+4] +
test eax eax +
jge loc_1034DEB  +
fadd  ds:dbl_10018C0 +
fdiv st st(1) +
jmp loc_1034DF1  +
fld  st(1) +
mov edi [esi+2Ch] +
xor edx edx +
test edi edi +
jz loc_1034E01  +
mov eax [esi+38h] +
div  edi +
mov edx eax +
fld  st(2) +
fucomp  st(2) +
fnstsw  ax +
test ah 44h +
jnp loc_1034E28  +
mov eax edi +
mov dword ptr [ebp+var_B8+4] eax +
fild  dword ptr [ebp+var_B8+4] +
test eax eax +
jge loc_1034E24  +
fadd  ds:dbl_10018C0 +
fdiv st st(2) +
jmp loc_1034E2A  +
fld  st(2) +
fld  st(3) +
fucomp  st(3) +
fnstsw  ax +
test ah 44h +
jnp loc_1034E6B  +
mov dword ptr [ebp+var_B8+4] edi +
fstp  st(3) +
fild  dword ptr [ebp+var_B8+4] +
test edi edi +
jge loc_1034E4D  +
fadd  ds:dbl_10018C0 +
mov dword ptr [ebp+var_B8+4] ecx +
fdiv st st(2) +
fild  dword ptr [ebp+var_B8+4] +
test ecx ecx +
jge loc_1034E65  +
fadd  ds:dbl_10018C0 +
fdivrp st(3) st +
faddp st(2) st +
jmp loc_1034E73  +
fstp  st(2) +
fxch  st(1) +
fxch  st(2) +
fxch  st(1) +
push ebx  +
push ecx  +
push ecx  +
fstp  [esp+0F0h+var_F0] +
push edx  +
sub esp 10h +
fxch  st(1) +
fstp  [esp+104h+var_FC] +
fstp  [esp+104h+var_104] +
push offset aDataNameIorate  +
push [ebp+lpBuffer]  +
call sub_1024264  +
lea eax [esi+8] +
mov esi [eax] +
add esp 28h +
mov dword ptr [ebp+var_B8+4] eax +
jmp loc_1034FC4  +
mov ecx esi +
mov edi [ecx+10h] +
mov ebx [ecx+0Ch] +
mov esi [esi] +
lea edx [ebx+edi] +
test edx edx +
jbe loc_1034FC4  +
test edi edi +
jz loc_1034ED1  +
mov eax [ecx+1Ch] +
xor edx edx +
div  edi +
mov [ebp+var_AC] eax +
jmp loc_1034ED8  +
and [ebp+var_AC] 0 +
fldz   +
fld  st +
fld  [ebp+var_C8] +
fucom  st(1) +
fnstsw  ax +
fstp  st(1) +
test ah 44h +
jnp loc_1034F09  +
mov eax edi +
mov dword ptr [ebp+var_C0+4] eax +
fild  dword ptr [ebp+var_C0+4] +
test eax eax +
jge loc_1034F05  +
fadd  ds:dbl_10018C0 +
fdiv st st(1) +
jmp loc_1034F0B  +
fld  st(1) +
xor edx edx +
test ebx ebx +
jz loc_1034F18  +
mov eax [ecx+18h] +
div  ebx +
mov edx eax +
fld  st(2) +
fucomp  st(2) +
fnstsw  ax +
test ah 44h +
jnp loc_1034F3F  +
mov eax ebx +
mov dword ptr [ebp+var_C0+4] eax +
fild  dword ptr [ebp+var_C0+4] +
test eax eax +
jge loc_1034F3B  +
fadd  ds:dbl_10018C0 +
fdiv st st(2) +
jmp loc_1034F41  +
fld  st(2) +
fld  st(3) +
fucomp  st(3) +
fnstsw  ax +
test ah 44h +
jnp loc_1034F82  +
mov dword ptr [ebp+var_C0+4] ebx +
fstp  st(3) +
fild  dword ptr [ebp+var_C0+4] +
test ebx ebx +
jge loc_1034F64  +
fadd  ds:dbl_10018C0 +
mov dword ptr [ebp+var_C0+4] edi +
fdiv st st(2) +
fild  dword ptr [ebp+var_C0+4] +
test edi edi +
jge loc_1034F7C  +
fadd  ds:dbl_10018C0 +
fdivrp st(3) st +
faddp st(2) st +
jmp loc_1034F8A  +
fstp  st(2) +
fxch  st(1) +
fxch  st(2) +
fxch  st(1) +
push [ebp+var_AC]  +
mov ecx [ecx+8] +
push ecx  +
push ecx  +
fstp  [esp+0F0h+var_F0] +
push edx  +
sub esp 10h +
fxch  st(1) +
fstp  [esp+104h+var_FC] +
fstp  [esp+104h+var_104] +
push dword ptr [ecx+3Ch]  +
push dword ptr [ecx+34h]  +
push offset aItemDataName_3  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov eax dword ptr [ebp+var_B8+4] +
add esp 30h +
cmp esi eax +
jnz loc_1034EA9  +
push [ebp+lpBuffer]  +
push offset aItem_1  +
call sub_1023CCF  +
mov eax dword_1057940 +
inc eax  +
mov dword_1057940 eax +
cmp eax dword_1057958 +
jb loc_1034C43  +
push [ebp+lpBuffer]  +
push offset aTable_0  +
call sub_1023CCF  +
mov eax lpAddress +
test eax eax +
jz loc_103501A  +
push 8000h  +
push 0  +
push eax  +
call ds:VirtualFree  +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 288Ch +
call __alloca_probe  +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx dword_1079A6C +
push esi  +
mov esi dword_1079A68 +
sub esi dword_1079A60 +
push edi  +
sbb ebx dword_1079A64 +
xor edi edi +
push edi  +
push 989680h  +
push ebx  +
push esi  +
mov [ebp+lpBuffer] eax +
call __aulldiv  +
push ebx  +
push esi  +
push edi  +
push dword_1079A94  +
mov [ebp+var_11E4] eax +
call __allmul  +
push edi  +
push 2710h  +
push edx  +
push eax  +
call __aulldiv  +
mov [ebp+var_1208] eax +
mov [ebp+var_120C] 1 +
cmp dword_1079A74 edi +
jz loc_10396CE  +
mov esi 160h +
push esi  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov dword_1057944 eax +
cmp eax edi +
jz loc_10396CE  +
push esi  +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
cmp dword_1079AB0 offset dword_1079AB0 +
jnz loc_10350F7  +
mov [ebp+var_120C] edi +
push 2C8h  +
lea eax [ebp+var_864] +
push edi  +
push eax  +
call memset  +
mov esi 400h +
push esi  +
lea eax [ebp+var_554] +
push edi  +
push eax  +
call memset  +
push dword_1079A74  +
call ds:rewind  +
push dword_1079A74  +
lea eax [ebp+var_554] +
push esi  +
push eax  +
call ds:fgets  +
add esp 28h +
test eax eax +
jz loc_10357DD  +
mov esi ds:strtok +
mov ebx offset asc_1007118 +
lea eax [ebp+var_554] +
push ebx  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_85C] eax +
mov [ebp+var_858] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_854] eax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_844] eax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_83C] eax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_838] eax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_81C] eax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_818] eax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_814] eax +
mov [ebp+var_810] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_80C] eax +
mov [ebp+var_808] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_804] eax +
mov [ebp+var_800] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_7FC] eax +
mov [ebp+var_7F8] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_7F4] eax +
mov [ebp+var_7F0] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_7EC] eax +
mov [ebp+var_7E8] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_7E4] ax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_7E2] ax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_7DC] eax +
mov [ebp+var_7D8] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_7D4] eax +
mov [ebp+var_7D0] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_7CC] eax +
mov [ebp+var_7C8] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_7B0] ax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_7AE] ax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_7AC] eax +
mov [ebp+var_7A8] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_7A4] eax +
mov [ebp+var_7A0] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_79C] eax +
mov [ebp+var_798] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_794] eax +
mov [ebp+var_790] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_78C] eax +
mov [ebp+var_788] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_77C] eax +
mov [ebp+var_778] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_774] eax +
mov [ebp+var_770] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_76C] eax +
mov [ebp+var_768] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:_atoi64  +
push ebx  +
push edi  +
mov [ebp+var_764] eax +
mov [ebp+var_760] edx +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_75C] ax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_75A] ax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_5C0] ax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_5BC] eax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_5B8] ax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_5B6] ax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_5B4] ax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_5B2] ax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_5B0] ax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_5AE] ax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_5AC] ax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_5AA] ax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_758] eax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_840] eax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_834] eax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_830] eax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_82C] eax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_828] eax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_824] eax +
call esi  +
add esp 0Ch +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:atol  +
push ebx  +
push edi  +
mov [ebp+var_820] eax +
call esi  +
add esp 0Ch +
mov [ebp-11F8h] eax +
cmp eax edi +
jz loc_10357BA  +
push eax  +
call ds:lstrlenA  +
mov [ebp-11D0h] eax +
cmp eax edi +
jbe loc_10357BA  +
inc eax  +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov dword ptr [ebp+var_11DC+4] eax +
cmp eax edi +
jz loc_10357BA  +
push dword ptr [ebp-11D0h]  +
push dword ptr [ebp-11F8h]  +
push eax  +
call memcpy  +
mov eax dword ptr [ebp+var_11DC+4] +
mov ecx [ebp-11D0h] +
add eax ecx +
add esp 0Ch +
cmp byte ptr [eax-1] 0Ah +
jnz loc_103579F  +
mov byte ptr [eax-1] 0 +
jmp loc_10357A2  +
mov byte ptr [eax] 0 +
mov eax dword ptr [ebp+var_11DC+4] +
mov [ebp+var_5A8] eax +
lea eax [ebp+var_864] +
push eax  +
call sub_103323E  +
push dword_1079A74  +
lea eax [ebp+var_554] +
push 400h  +
push eax  +
call ds:fgets  +
add esp 0Ch +
test eax eax +
jnz loc_1035152  +
mov eax dword_1057944 +
cmp [eax] edi +
jz loc_10396C0  +
push edi  +
push 7D0h  +
push offset aTracerptiis  +
push [ebp+lpBuffer]  +
call sub_102F3F0  +
mov eax offset a0_000 +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push offset aTableNameHttpr  +
push [ebp+lpBuffer]  +
call sub_1024264  +
fldz   +
mov eax dword_1057944 +
fld  ds:dbl_1001648 +
mov edx [eax+10h] +
mov ecx [eax+14h] +
add esp 24h +
mov dword ptr [ebp+var_11DC] edx +
or edx ecx +
mov esi 7FFFFFFFh +
mov ebx 80000000h +
jz loc_10358D1  +
mov ecx [eax+8Ch] +
mov edx [eax+88h] +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11EC+4] ecx +
mov ecx dword ptr [ebp+var_11DC] +
mov dword ptr [ebp+var_11EC] edx +
fild  [ebp+var_11EC] +
mov [ebp+var_11CC] edi +
fild  qword ptr [ebp+var_11CC] +
mov [ebp+var_11CC] ecx +
mov ecx [eax+14h] +
mov edx ecx +
fchs   +
mov [ebp-11C8h] edx +
and [ebp-11C8h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11CC] +
mov [ebp-11D0h] edx +
and [ebp-11D0h] ebx +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul st st(1) +
fstp  qword ptr [ebp-11FCh] +
jmp loc_10358DB  +
fxch  st(1) +
fst  qword ptr [ebp-11FCh] +
fxch  st(1) +
mov edx dword ptr [ebp+var_11DC] +
or edx ecx +
jz loc_1035970  +
mov ecx [eax+0D4h] +
mov edx [eax+0D0h] +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11EC+4] ecx +
mov ecx dword ptr [ebp+var_11DC] +
mov dword ptr [ebp+var_11EC] edx +
fild  [ebp+var_11EC] +
mov [ebp+var_11CC] edi +
fild  qword ptr [ebp+var_11CC] +
mov [ebp+var_11CC] ecx +
mov ecx [eax+14h] +
mov edx ecx +
fchs   +
mov [ebp-11C8h] edx +
and [ebp-11C8h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11CC] +
mov [ebp-11D0h] edx +
and [ebp-11D0h] ebx +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul st st(1) +
fstp  [ebp+var_1204] +
jmp loc_103597A  +
fxch  st(1) +
fst  [ebp+var_1204] +
fxch  st(1) +
mov edx dword ptr [ebp+var_11DC] +
or edx ecx +
jz loc_1035A09  +
mov ecx [eax+0ECh] +
mov edx [eax+0E8h] +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11EC+4] ecx +
mov ecx dword ptr [ebp+var_11DC] +
mov dword ptr [ebp+var_11EC] edx +
fild  [ebp+var_11EC] +
mov [ebp+var_11CC] edi +
fild  qword ptr [ebp+var_11CC] +
mov [ebp+var_11CC] ecx +
mov ecx [eax+14h] +
mov edx ecx +
fchs   +
mov [ebp-11C8h] edx +
and [ebp-11C8h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11CC] +
mov [ebp-11D0h] edx +
and [ebp-11D0h] ebx +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul st st(1) +
jmp loc_1035A0B  +
fld  st(1) +
mov edx dword ptr [ebp+var_11DC] +
or edx ecx +
jz loc_1035A90  +
mov ecx [eax+3Ch] +
mov edx [eax+38h] +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11EC+4] ecx +
mov ecx dword ptr [ebp+var_11DC] +
mov dword ptr [ebp+var_11EC] edx +
fild  [ebp+var_11EC] +
mov [ebp+var_11CC] edi +
fild  qword ptr [ebp+var_11CC] +
mov [ebp+var_11CC] ecx +
mov ecx [eax+14h] +
mov edx ecx +
fchs   +
mov [ebp-11C8h] edx +
and [ebp-11C8h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11CC] +
mov [ebp-11D0h] edx +
and [ebp-11D0h] ebx +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul st st(2) +
jmp loc_1035A92  +
fld  st(2) +
mov edx dword ptr [ebp+var_11DC] +
or edx ecx +
jz loc_1035B3F  +
mov edx [eax+120h] +
add edx [eax+0E0h] +
mov ecx [eax+124h] +
adc ecx [eax+0E4h] +
add edx [eax+98h] +
mov [ebp+var_11CC] edi +
adc ecx [eax+9Ch] +
add edx [eax+60h] +
mov [ebp+var_11D4] edi +
adc ecx [eax+64h] +
mov dword ptr [ebp+var_11EC] edx +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11EC+4] ecx +
fild  [ebp+var_11EC] +
mov ecx dword ptr [ebp+var_11DC] +
fild  qword ptr [ebp+var_11CC] +
mov [ebp+var_11CC] ecx +
mov ecx [eax+14h] +
mov edx ecx +
fchs   +
mov [ebp-11C8h] edx +
and [ebp-11C8h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11CC] +
mov [ebp-11D0h] edx +
and [ebp-11D0h] ebx +
fild  qword ptr [ebp+var_11D4] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul st st(3) +
jmp loc_1035B41  +
fld  st(3) +
mov edx dword ptr [ebp+var_11DC] +
or edx ecx +
jz loc_1035BEE  +
mov edx [eax+118h] +
add edx [eax+0D8h] +
mov ecx [eax+11Ch] +
adc ecx [eax+0DCh] +
add edx [eax+90h] +
mov [ebp+var_11CC] edi +
adc ecx [eax+94h] +
add edx [eax+58h] +
mov [ebp+var_11D4] edi +
adc ecx [eax+5Ch] +
mov dword ptr [ebp+var_11EC] edx +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11EC+4] ecx +
fild  [ebp+var_11EC] +
mov ecx dword ptr [ebp+var_11DC] +
fild  qword ptr [ebp+var_11CC] +
mov [ebp+var_11CC] ecx +
mov ecx [eax+14h] +
mov edx ecx +
fchs   +
mov [ebp-11C8h] edx +
and [ebp-11C8h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11CC] +
mov [ebp-11D0h] edx +
and [ebp-11D0h] ebx +
fild  qword ptr [ebp+var_11D4] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmulp st(4) st +
jmp loc_1035BF4  +
fstp  st(3) +
fld  st(3) +
fxch  st(3) +
mov edx [eax] +
sub edx [eax+4] +
jz loc_1035C53  +
mov eax dword ptr [ebp+var_11DC] +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11EC] eax +
mov dword ptr [ebp+var_11EC+4] ecx +
fild  [ebp+var_11EC] +
mov [ebp+var_11CC] edi +
fild  qword ptr [ebp+var_11CC] +
mov eax edx +
mov [ebp-11C8h] eax +
fchs   +
faddp st(1) st +
fild  dword ptr [ebp-11C8h] +
test eax eax +
jge loc_1035C49  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fdiv  ds:dbl_1002998 +
jmp loc_1035C55  +
fld  st(4) +
cmp [ebp+var_11E4] edi +
jz loc_1035C8F  +
mov [ebp-11C8h] edx +
fstp  st(5) +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_1035C75  +
fadd  ds:dbl_10018C0 +
mov eax [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test eax eax +
jge loc_1035C8B  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
jmp loc_1035C91  +
fxch  st(5) +
fld  qword ptr [ebp-11FCh] +
sub esp 40h +
fstp  [esp+28D8h+var_28A0] +
fld  [ebp+var_1204] +
fstp  [esp+28D8h+var_28A8] +
fxch  st(3) +
fstp  [esp+28D8h+var_28B0] +
fxch  st(1) +
fstp  [esp+28D8h+var_28B8] +
fstp  [esp+28D8h+var_28C0] +
fxch  st(1) +
fstp  [esp+28D8h+var_28C8] +
fxch  st(1) +
fstp  [esp+28D8h+var_28D0] +
fstp  [esp+28D8h+var_28D8] +
push offset aItemVisibleFal  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov eax dword_1057944 +
mov ecx [eax+10h] +
mov edx [eax+14h] +
add esp 48h +
mov dword ptr [ebp+var_11DC] ecx +
add ecx [eax+8] +
mov dword ptr [ebp+var_11DC+4] edx +
adc edx [eax+0Ch] +
mov [ebp+var_11D4] ecx +
or ecx edx +
mov [ebp-11D0h] edx +
jz loc_1035D9F  +
mov ecx [eax+8Ch] +
mov edx [eax+88h] +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11EC+4] ecx +
mov ecx [ebp+var_11D4] +
mov dword ptr [ebp+var_11EC] edx +
fild  [ebp+var_11EC] +
mov edx [ebp-11D0h] +
mov [ebp+var_11CC] edi +
fild  qword ptr [ebp+var_11CC] +
mov [ebp+var_11CC] ecx +
mov ecx edx +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] esi +
fchs   +
faddp st(1) st +
mov [ebp-11F8h] ecx +
fild  qword ptr [ebp+var_11CC] +
and [ebp-11F8h] ebx +
mov [ebp+var_11FC] edi +
fild  qword ptr [ebp+var_11FC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fld  ds:dbl_1001648 +
fmul st(1) st +
fxch  st(1) +
fstp  [ebp+var_1204] +
fldz   +
jmp loc_1035DAF  +
fldz   +
fst  [ebp+var_1204] +
fld  ds:dbl_1001648 +
fxch  st(1) +
mov ecx [ebp+var_11D4] +
or ecx edx +
jz loc_1035E47  +
mov ecx [eax+0D4h] +
mov edx [eax+0D0h] +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11EC+4] ecx +
mov ecx [ebp+var_11D4] +
mov dword ptr [ebp+var_11EC] edx +
fild  [ebp+var_11EC] +
mov edx [ebp-11D0h] +
mov [ebp+var_11CC] edi +
fild  qword ptr [ebp+var_11CC] +
mov [ebp+var_11CC] ecx +
mov ecx edx +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] esi +
fchs   +
faddp st(1) st +
mov [ebp-11F8h] ecx +
fild  qword ptr [ebp+var_11CC] +
and [ebp-11F8h] ebx +
mov [ebp+var_11FC] edi +
fild  qword ptr [ebp+var_11FC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul st st(2) +
fstp  [ebp+var_11F4] +
jmp loc_1035E4D  +
fst  [ebp+var_11F4] +
mov ecx [ebp+var_11D4] +
or ecx edx +
jz loc_1035EDF  +
mov ecx [eax+0ECh] +
mov edx [eax+0E8h] +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11EC+4] ecx +
mov ecx [ebp+var_11D4] +
mov dword ptr [ebp+var_11EC] edx +
fild  [ebp+var_11EC] +
mov edx [ebp-11D0h] +
mov [ebp+var_11CC] edi +
fild  qword ptr [ebp+var_11CC] +
mov [ebp+var_11CC] ecx +
mov ecx edx +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] esi +
fchs   +
faddp st(1) st +
mov [ebp-11F8h] ecx +
fild  qword ptr [ebp+var_11CC] +
and [ebp-11F8h] ebx +
mov [ebp+var_11FC] edi +
fild  qword ptr [ebp+var_11FC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul st st(2) +
jmp loc_1035EE1  +
fld  st +
mov ecx [ebp+var_11D4] +
or ecx edx +
jz loc_1035F69  +
mov ecx [eax+3Ch] +
mov edx [eax+38h] +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11EC+4] ecx +
mov ecx [ebp+var_11D4] +
mov dword ptr [ebp+var_11EC] edx +
fild  [ebp+var_11EC] +
mov edx [ebp-11D0h] +
mov [ebp+var_11CC] edi +
fild  qword ptr [ebp+var_11CC] +
mov [ebp+var_11CC] ecx +
mov ecx edx +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] esi +
fchs   +
faddp st(1) st +
mov [ebp-11F8h] ecx +
fild  qword ptr [ebp+var_11CC] +
and [ebp-11F8h] ebx +
mov [ebp+var_11FC] edi +
fild  qword ptr [ebp+var_11FC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul st st(3) +
jmp loc_1035F6B  +
fld  st(1) +
mov ecx [ebp+var_11D4] +
or ecx edx +
jz loc_103601B  +
mov edx [eax+120h] +
add edx [eax+0E0h] +
mov ecx [eax+124h] +
adc ecx [eax+0E4h] +
add edx [eax+98h] +
mov [ebp+var_11CC] edi +
adc ecx [eax+9Ch] +
add edx [eax+60h] +
mov [ebp+var_11FC] edi +
adc ecx [eax+64h] +
mov dword ptr [ebp+var_11EC] edx +
mov edx [ebp-11D0h] +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11EC+4] ecx +
fild  [ebp+var_11EC] +
mov ecx [ebp+var_11D4] +
fild  qword ptr [ebp+var_11CC] +
mov [ebp+var_11CC] ecx +
mov ecx edx +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] esi +
fchs   +
faddp st(1) st +
mov [ebp-11F8h] ecx +
fild  qword ptr [ebp+var_11CC] +
and [ebp-11F8h] ebx +
fild  qword ptr [ebp+var_11FC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul st st(4) +
jmp loc_103601D  +
fld  st(2) +
mov ecx [ebp+var_11D4] +
or ecx edx +
jz loc_10360DE  +
mov edi [eax+118h] +
add edi [eax+0D8h] +
mov ecx [eax+11Ch] +
adc ecx [eax+0DCh] +
add edi [eax+90h] +
mov edx [eax+8] +
adc ecx [eax+94h] +
add edi [eax+58h] +
adc ecx [eax+5Ch] +
add edi edx +
adc ecx [eax+0Ch] +
mov dword ptr [ebp+var_11EC] edi +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11EC+4] ecx +
fild  [ebp+var_11EC] +
mov ecx edx +
mov edx dword ptr [ebp+var_11DC] +
xor edi edi +
add edx ecx +
mov ecx dword ptr [ebp+var_11DC+4] +
adc ecx [eax+0Ch] +
mov [ebp+var_11CC] edi +
fild  qword ptr [ebp+var_11CC] +
mov [ebp-11C8h] ecx +
and ecx esi +
and [ebp-11C8h] ebx +
fchs   +
mov dword ptr [ebp+var_11EC] edx +
faddp st(1) st +
mov dword ptr [ebp+var_11EC] edx +
mov dword ptr [ebp+var_11EC+4] ecx +
fild  [ebp+var_11EC] +
mov [ebp+var_11CC] edi +
fild  qword ptr [ebp+var_11CC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmulp st(5) st +
jmp loc_10360E4  +
fstp  st(4) +
fld  st(2) +
fxch  st(4) +
cmp [ebp+var_11E4] edi +
jz loc_1036116  +
mov ecx [eax] +
fstp  st(3) +
fild  dword ptr [eax] +
test ecx ecx +
jge loc_10360FC  +
fadd  ds:dbl_10018C0 +
mov ecx [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test ecx ecx +
jge loc_1036112  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
jmp loc_1036118  +
fxch  st(3) +
fld  [ebp+var_1204] +
mov ecx [ebp+var_11D4] +
mov eax [eax] +
sub esp 40h +
fstp  [esp+28D8h+var_28A0] +
mov [ebp+var_11CC] edi +
fld  [ebp+var_11F4] +
mov dword ptr [ebp+var_11F4] ecx +
mov ecx [ebp-11D0h] +
fstp  [esp+28D8h+var_28A8] +
fxch  st(2) +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
fstp  [esp+28D8h+var_28B0] +
and ecx esi +
fstp  [esp+28D8h+var_28B8] +
mov dword ptr [ebp+var_11F4+4] ecx +
fxch  st(1) +
fstp  [esp+28D8h+var_28C0] +
fxch  st(1) +
fstp  [esp+28D8h+var_28C8] +
fild  [ebp+var_11F4] +
fild  qword ptr [ebp+var_11CC] +
mov [ebp-11C8h] eax +
fchs   +
faddp st(1) st +
fild  dword ptr [ebp-11C8h] +
test eax eax +
jge loc_1036199  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fdiv  ds:dbl_1002998 +
fstp  [esp+28D8h+var_28D0] +
fstp  [esp+28D8h+var_28D8] +
push offset aItemDataNameRe  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov eax dword_1057944 +
mov ecx [eax+4] +
add esp 48h +
mov [ebp-11D0h] ecx +
cmp ecx edi +
jz loc_1036212  +
push edi  +
push ecx  +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+8]  +
call __aulldiv  +
mov [ebp-11C8h] edx +
and edx esi +
and [ebp-11C8h] ebx +
mov dword ptr [ebp+var_11F4] eax +
mov dword ptr [ebp+var_11F4+4] edx +
fild  [ebp+var_11F4] +
mov [ebp+var_11CC] edi +
fild  qword ptr [ebp+var_11CC] +
fchs   +
faddp st(1) st +
fdiv  ds:dbl_1002998 +
jmp loc_1036214  +
fldz   +
cmp [ebp+var_11E4] edi +
jz loc_103624C  +
mov eax [ebp-11D0h] +
fild  dword ptr [ebp-11D0h] +
test eax eax +
jge loc_1036232  +
fadd  ds:dbl_10018C0 +
mov eax [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test eax eax +
jge loc_1036248  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
jmp loc_103624E  +
fldz   +
mov eax [ebp-11D0h] +
fxch  st(1) +
neg eax  +
sbb eax eax +
and eax 64h +
push eax  +
sub esp 10h +
fstp  [esp+28ACh+var_28A8+4] +
fstp  [esp+28ACh+var_28B0+4] +
push offset aItemDataName_4  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov eax dword_1057944 +
mov edx [eax+0C8h] +
mov ecx [eax+0CCh] +
add esp 1Ch +
mov [ebp+var_11CC] edx +
or edx ecx +
jz loc_103632E  +
mov ecx [eax+0D4h] +
mov edx [eax+0D0h] +
mov [ebp-11D0h] ecx +
and [ebp-11D0h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4+4] ecx +
mov ecx [ebp+var_11CC] +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
mov [ebp+var_11D4] ecx +
mov ecx [eax+0CCh] +
mov edx ecx +
fchs   +
mov [ebp-11D0h] edx +
and [ebp-11D0h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11D4] +
mov dword ptr [ebp+var_11DC+4] edx +
and dword ptr [ebp+var_11DC+4] ebx +
mov dword ptr [ebp+var_11DC] edi +
fild  [ebp+var_11DC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fld  ds:dbl_1001648 +
fmul st(1) st +
fxch  st(1) +
fstp  [ebp+var_11EC] +
fldz   +
jmp loc_103633E  +
fldz   +
fst  [ebp+var_11EC] +
fld  ds:dbl_1001648 +
fxch  st(1) +
mov edx [ebp+var_11CC] +
or edx ecx +
jz loc_10363D0  +
mov ecx [eax+0ECh] +
mov edx [eax+0E8h] +
mov [ebp-11D0h] ecx +
and [ebp-11D0h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4+4] ecx +
mov ecx [ebp+var_11CC] +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
mov [ebp+var_11D4] ecx +
mov ecx [eax+0CCh] +
mov edx ecx +
fchs   +
mov [ebp-11D0h] edx +
and [ebp-11D0h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11D4] +
mov dword ptr [ebp+var_11DC+4] edx +
and dword ptr [ebp+var_11DC+4] ebx +
mov dword ptr [ebp+var_11DC] edi +
fild  [ebp+var_11DC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul st st(2) +
jmp loc_10363D2  +
fld  st +
mov edx [ebp+var_11CC] +
or edx ecx +
jz loc_1036464  +
mov ecx [eax+0F4h] +
mov edx [eax+0F0h] +
mov [ebp-11D0h] ecx +
and [ebp-11D0h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4+4] ecx +
mov ecx [ebp+var_11CC] +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
mov [ebp+var_11D4] ecx +
mov ecx [eax+0CCh] +
mov edx ecx +
fchs   +
mov [ebp-11D0h] edx +
and [ebp-11D0h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11D4] +
mov dword ptr [ebp+var_11DC+4] edx +
and dword ptr [ebp+var_11DC+4] ebx +
mov dword ptr [ebp+var_11DC] edi +
fild  [ebp+var_11DC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul st st(3) +
jmp loc_1036466  +
fld  st(1) +
mov edx [ebp+var_11CC] +
or edx ecx +
jz loc_10364F8  +
mov ecx [eax+0E4h] +
mov edx [eax+0E0h] +
mov [ebp-11D0h] ecx +
and [ebp-11D0h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4+4] ecx +
mov ecx [ebp+var_11CC] +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
mov [ebp+var_11D4] ecx +
mov ecx [eax+0CCh] +
mov edx ecx +
fchs   +
mov [ebp-11D0h] edx +
and [ebp-11D0h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11D4] +
mov dword ptr [ebp+var_11DC+4] edx +
and dword ptr [ebp+var_11DC+4] ebx +
mov dword ptr [ebp+var_11DC] edi +
fild  [ebp+var_11DC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul st st(4) +
jmp loc_10364FA  +
fld  st(2) +
mov edx [ebp+var_11CC] +
or edx ecx +
jz loc_103658C  +
mov ecx [eax+0DCh] +
mov edx [eax+0D8h] +
mov [ebp-11D0h] ecx +
and [ebp-11D0h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4+4] ecx +
mov ecx [ebp+var_11CC] +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
mov [ebp+var_11D4] ecx +
mov ecx [eax+0CCh] +
mov edx ecx +
fchs   +
mov [ebp-11D0h] edx +
and [ebp-11D0h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11D4] +
mov dword ptr [ebp+var_11DC+4] edx +
and dword ptr [ebp+var_11DC+4] ebx +
mov dword ptr [ebp+var_11DC] edi +
fild  [ebp+var_11DC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmulp st(5) st +
jmp loc_1036592  +
fstp  st(4) +
fld  st(2) +
fxch  st(4) +
mov eax [eax+24h] +
cmp eax edi +
jz loc_10365F1  +
mov edx [ebp+var_11CC] +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4+4] ecx +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov [ebp+var_11CC] edi +
fild  qword ptr [ebp+var_11CC] +
mov ecx eax +
mov [ebp-11C8h] ecx +
fchs   +
faddp st(1) st +
fild  dword ptr [ebp-11C8h] +
test ecx ecx +
jge loc_10365E7  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fdiv  ds:dbl_1002998 +
jmp loc_10365F3  +
fld  st(3) +
cmp [ebp+var_11E4] edi +
jz loc_103662B  +
mov [ebp-11C8h] eax +
fild  dword ptr [ebp-11C8h] +
test eax eax +
jge loc_1036611  +
fadd  ds:dbl_10018C0 +
mov eax [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test eax eax +
jge loc_1036627  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
jmp loc_103662D  +
fld  st(4) +
sub esp 40h +
fxch  st(5) +
fstp  [esp+28D8h+var_28A0] +
fld  [ebp+var_11EC] +
fstp  [esp+28D8h+var_28A8] +
fxch  st(3) +
fstp  [esp+28D8h+var_28B0] +
fxch  st(1) +
fstp  [esp+28D8h+var_28B8] +
fstp  [esp+28D8h+var_28C0] +
fxch  st(2) +
fstp  [esp+28D8h+var_28C8] +
fxch  st(1) +
fstp  [esp+28D8h+var_28D0] +
fstp  [esp+28D8h+var_28D8] +
push offset aItemDataName_5  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov eax dword_1057944 +
mov edx [eax+50h] +
mov ecx [eax+54h] +
add esp 48h +
mov [ebp+var_11CC] edx +
or edx ecx +
jz loc_103670C  +
mov ecx [eax+6Ch] +
mov edx [eax+68h] +
mov [ebp-11D0h] ecx +
and [ebp-11D0h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4+4] ecx +
mov ecx [ebp+var_11CC] +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
mov [ebp+var_11D4] ecx +
mov ecx [eax+54h] +
mov edx ecx +
fchs   +
mov [ebp-11D0h] edx +
and [ebp-11D0h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11D4] +
mov dword ptr [ebp+var_11DC+4] edx +
and dword ptr [ebp+var_11DC+4] ebx +
mov dword ptr [ebp+var_11DC] edi +
fild  [ebp+var_11DC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul  ds:dbl_1001648 +
fldz   +
jmp loc_1036712  +
fldz   +
fld  st +
fxch  st(1) +
mov edx [ebp+var_11CC] +
or edx ecx +
jz loc_103679B  +
mov ecx [eax+64h] +
mov edx [eax+60h] +
mov [ebp-11D0h] ecx +
and [ebp-11D0h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4+4] ecx +
mov ecx [ebp+var_11CC] +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
mov [ebp+var_11D4] ecx +
mov ecx [eax+54h] +
mov edx ecx +
fchs   +
mov [ebp-11D0h] edx +
and [ebp-11D0h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11D4] +
mov dword ptr [ebp+var_11DC+4] edx +
and dword ptr [ebp+var_11DC+4] ebx +
mov dword ptr [ebp+var_11DC] edi +
fild  [ebp+var_11DC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul  ds:dbl_1001648 +
jmp loc_103679D  +
fld  st +
mov edx [ebp+var_11CC] +
or edx ecx +
jz loc_1036826  +
mov ecx [eax+5Ch] +
mov edx [eax+58h] +
mov [ebp-11D0h] ecx +
and [ebp-11D0h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4+4] ecx +
mov ecx [ebp+var_11CC] +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
mov [ebp+var_11D4] ecx +
mov ecx [eax+54h] +
mov edx ecx +
fchs   +
mov [ebp-11D0h] edx +
and [ebp-11D0h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11D4] +
mov dword ptr [ebp+var_11DC+4] edx +
and dword ptr [ebp+var_11DC+4] ebx +
mov dword ptr [ebp+var_11DC] edi +
fild  [ebp+var_11DC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul  ds:dbl_1001648 +
jmp loc_1036828  +
fld  st(1) +
mov eax [eax+18h] +
cmp eax edi +
jz loc_1036887  +
mov edx [ebp+var_11CC] +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4+4] ecx +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov [ebp+var_11CC] edi +
fild  qword ptr [ebp+var_11CC] +
mov ecx eax +
mov [ebp-11C8h] ecx +
fchs   +
faddp st(1) st +
fild  dword ptr [ebp-11C8h] +
test ecx ecx +
jge loc_103687D  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fdiv  ds:dbl_1002998 +
jmp loc_1036889  +
fld  st(2) +
cmp [ebp+var_11E4] edi +
jz loc_10368C1  +
mov [ebp-11C8h] eax +
fild  dword ptr [ebp-11C8h] +
test eax eax +
jge loc_10368A7  +
fadd  ds:dbl_10018C0 +
mov eax [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test eax eax +
jge loc_10368BD  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
jmp loc_10368C3  +
fld  st(3) +
sub esp 40h +
fxch  st(4) +
fst  [esp+28D8h+var_28A0] +
fst  [esp+28D8h+var_28A8] +
fstp  [esp+28D8h+var_28B0] +
fxch  st(4) +
fstp  [esp+28D8h+var_28B8] +
fxch  st(1) +
fstp  [esp+28D8h+var_28C0] +
fstp  [esp+28D8h+var_28C8] +
fxch  st(1) +
fstp  [esp+28D8h+var_28D0] +
fstp  [esp+28D8h+var_28D8] +
push offset aItemDataName_6  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov eax dword_1057944 +
mov edx [eax+80h] +
mov ecx [eax+84h] +
add esp 48h +
mov [ebp+var_11CC] edx +
or edx ecx +
jz loc_10369AB  +
mov ecx [eax+8Ch] +
mov edx [eax+88h] +
mov [ebp-11D0h] ecx +
and [ebp-11D0h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4+4] ecx +
mov ecx [ebp+var_11CC] +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
mov [ebp+var_11D4] ecx +
mov ecx [eax+84h] +
mov edx ecx +
fchs   +
mov [ebp-11D0h] edx +
and [ebp-11D0h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11D4] +
mov dword ptr [ebp+var_11DC+4] edx +
and dword ptr [ebp+var_11DC+4] ebx +
mov dword ptr [ebp+var_11DC] edi +
fild  [ebp+var_11DC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fld  ds:dbl_1001648 +
fmul st(1) st +
fldz   +
jmp loc_10369B9  +
fldz   +
fld  st +
fld  ds:dbl_1001648 +
fxch  st(1) +
fxch  st(2) +
mov edx [ebp+var_11CC] +
or edx ecx +
jz loc_1036A4B  +
mov ecx [eax+0A4h] +
mov edx [eax+0A0h] +
mov [ebp-11D0h] ecx +
and [ebp-11D0h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4+4] ecx +
mov ecx [ebp+var_11CC] +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
mov [ebp+var_11D4] ecx +
mov ecx [eax+84h] +
mov edx ecx +
fchs   +
mov [ebp-11D0h] edx +
and [ebp-11D0h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11D4] +
mov dword ptr [ebp+var_11DC+4] edx +
and dword ptr [ebp+var_11DC+4] ebx +
mov dword ptr [ebp+var_11DC] edi +
fild  [ebp+var_11DC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul st st(2) +
jmp loc_1036A4D  +
fld  st +
mov edx [ebp+var_11CC] +
or edx ecx +
jz loc_1036ADF  +
mov ecx [eax+9Ch] +
mov edx [eax+98h] +
mov [ebp-11D0h] ecx +
and [ebp-11D0h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4+4] ecx +
mov ecx [ebp+var_11CC] +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
mov [ebp+var_11D4] ecx +
mov ecx [eax+84h] +
mov edx ecx +
fchs   +
mov [ebp-11D0h] edx +
and [ebp-11D0h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11D4] +
mov dword ptr [ebp+var_11DC+4] edx +
and dword ptr [ebp+var_11DC+4] ebx +
mov dword ptr [ebp+var_11DC] edi +
fild  [ebp+var_11DC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul st st(3) +
jmp loc_1036AE1  +
fld  st(1) +
mov edx [ebp+var_11CC] +
or edx ecx +
jz loc_1036B73  +
mov ecx [eax+94h] +
mov edx [eax+90h] +
mov [ebp-11D0h] ecx +
and [ebp-11D0h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4+4] ecx +
mov ecx [ebp+var_11CC] +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
mov [ebp+var_11D4] ecx +
mov ecx [eax+84h] +
mov edx ecx +
fchs   +
mov [ebp-11D0h] edx +
and [ebp-11D0h] esi +
faddp st(1) st +
fild  qword ptr [ebp+var_11D4] +
mov dword ptr [ebp+var_11DC+4] edx +
and dword ptr [ebp+var_11DC+4] ebx +
mov dword ptr [ebp+var_11DC] edi +
fild  [ebp+var_11DC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmulp st(4) st +
jmp loc_1036B79  +
fstp  st(3) +
fld  st(1) +
fxch  st(3) +
mov eax [eax+1Ch] +
cmp eax edi +
jz loc_1036BD8  +
mov edx [ebp+var_11CC] +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4+4] ecx +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov [ebp+var_11CC] edi +
fild  qword ptr [ebp+var_11CC] +
mov ecx eax +
mov [ebp-11C8h] ecx +
fchs   +
faddp st(1) st +
fild  dword ptr [ebp-11C8h] +
test ecx ecx +
jge loc_1036BCE  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fdiv  ds:dbl_1002998 +
jmp loc_1036BDA  +
fld  st(2) +
cmp [ebp+var_11E4] edi +
jz loc_1036C12  +
mov [ebp-11C8h] eax +
fild  dword ptr [ebp-11C8h] +
test eax eax +
jge loc_1036BF8  +
fadd  ds:dbl_10018C0 +
mov eax [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test eax eax +
jge loc_1036C0E  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
jmp loc_1036C14  +
fld  st(3) +
sub esp 40h +
fxch  st(6) +
fstp  [esp+28D8h+var_28A0] +
fxch  st(3) +
fst  [esp+28D8h+var_28A8] +
fstp  [esp+28D8h+var_28B0] +
fxch  st(1) +
fstp  [esp+28D8h+var_28B8] +
fstp  [esp+28D8h+var_28C0] +
fxch  st(1) +
fstp  [esp+28D8h+var_28C8] +
fstp  [esp+28D8h+var_28D0] +
fstp  [esp+28D8h+var_28D8] +
push offset aItemDataName_7  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov eax dword_1057944 +
mov ecx [eax+30h] +
add esp 48h +
mov [ebp-11C8h] ecx +
cmp ecx edi +
jz loc_1036EEA  +
mov edx [eax+110h] +
mov ecx [eax+114h] +
mov [ebp+var_11D4] edx +
or edx ecx +
jz loc_1036D0B  +
mov ecx [eax+12Ch] +
mov edx [eax+128h] +
mov dword ptr [ebp+var_11DC+4] ecx +
and dword ptr [ebp+var_11DC+4] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4+4] ecx +
mov ecx [ebp+var_11D4] +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov dword ptr [ebp+var_11DC] edi +
fild  [ebp+var_11DC] +
mov dword ptr [ebp+var_11DC] ecx +
mov ecx [eax+114h] +
mov edx ecx +
fchs   +
mov dword ptr [ebp+var_11DC+4] edx +
and dword ptr [ebp+var_11DC+4] esi +
faddp st(1) st +
fild  [ebp+var_11DC] +
mov [ebp-11F8h] edx +
and [ebp-11F8h] ebx +
mov [ebp+var_11FC] edi +
fild  qword ptr [ebp+var_11FC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul  ds:dbl_1001648 +
fldz   +
jmp loc_1036D11  +
fldz   +
fld  st +
fxch  st(1) +
mov edx [ebp+var_11D4] +
or edx ecx +
jz loc_1036DA7  +
mov ecx [eax+124h] +
mov edx [eax+120h] +
mov dword ptr [ebp+var_11DC+4] ecx +
and dword ptr [ebp+var_11DC+4] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4+4] ecx +
mov ecx [ebp+var_11D4] +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov dword ptr [ebp+var_11DC] edi +
fild  [ebp+var_11DC] +
mov dword ptr [ebp+var_11DC] ecx +
mov ecx [eax+114h] +
mov edx ecx +
fchs   +
mov dword ptr [ebp+var_11DC+4] edx +
and dword ptr [ebp+var_11DC+4] esi +
faddp st(1) st +
fild  [ebp+var_11DC] +
mov [ebp-11F8h] edx +
and [ebp-11F8h] ebx +
mov [ebp+var_11FC] edi +
fild  qword ptr [ebp+var_11FC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul  ds:dbl_1001648 +
jmp loc_1036DA9  +
fld  st +
mov edx [ebp+var_11D4] +
or edx ecx +
jz loc_1036E31  +
mov edx [eax+118h] +
mov eax [eax+11Ch] +
mov dword ptr [ebp+var_11DC+4] eax +
and dword ptr [ebp+var_11DC+4] ebx +
and eax esi +
mov dword ptr [ebp+var_11F4+4] eax +
mov eax [ebp+var_11D4] +
mov dword ptr [ebp+var_11F4] edx +
fild  [ebp+var_11F4] +
mov dword ptr [ebp+var_11DC] edi +
fild  [ebp+var_11DC] +
mov dword ptr [ebp+var_11F4] eax +
mov eax ecx +
mov dword ptr [ebp+var_11DC+4] eax +
fchs   +
and eax esi +
and dword ptr [ebp+var_11DC+4] ebx +
faddp st(1) st +
mov dword ptr [ebp+var_11F4+4] eax +
fild  [ebp+var_11F4] +
mov dword ptr [ebp+var_11DC] edi +
fild  [ebp+var_11DC] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul  ds:dbl_1001648 +
jmp loc_1036E33  +
fld  st(1) +
mov eax [ebp-11C8h] +
fild  dword ptr [ebp-11C8h] +
test eax eax +
jge loc_1036E49  +
fadd  ds:dbl_10018C0 +
mov eax [ebp+var_11D4] +
mov [ebp-11C8h] ecx +
and [ebp-11C8h] ebx +
and ecx esi +
mov dword ptr [ebp+var_11F4] eax +
mov dword ptr [ebp+var_11F4+4] ecx +
fild  [ebp+var_11F4] +
mov [ebp+var_11CC] edi +
fild  qword ptr [ebp+var_11CC] +
fchs   +
faddp st(1) st +
fdiv st st(1) +
fdiv  ds:dbl_1002998 +
cmp [ebp+var_11E4] edi +
jz loc_1036EA9  +
mov eax [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test eax eax +
jge loc_1036EA5  +
fadd  ds:dbl_10018C0 +
fdivp st(2) st +
jmp loc_1036EAF  +
fstp  st(1) +
fld  st(3) +
fxch  st(1) +
sub esp 40h +
fxch  st(4) +
fst  [esp+28D8h+var_28A0] +
fst  [esp+28D8h+var_28A8] +
fstp  [esp+28D8h+var_28B0] +
fxch  st(4) +
fstp  [esp+28D8h+var_28B8] +
fxch  st(1) +
fstp  [esp+28D8h+var_28C0] +
fstp  [esp+28D8h+var_28C8] +
fstp  [esp+28D8h+var_28D0] +
fstp  [esp+28D8h+var_28D8] +
push offset aItemDataName_8  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 48h +
push [ebp+lpBuffer]  +
push offset aTable_0  +
call sub_1023CCF  +
cmp [ebp+var_120C] edi +
jz loc_1037919  +
push [ebp+lpBuffer]  +
push offset aTableNameHttpc  +
call sub_1023CCF  +
mov eax offset a0_000 +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push offset aHeaderThreshol  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov eax dword_1057944 +
mov ecx [eax+138h] +
add esp 28h +
cmp ecx edi +
jz loc_1036F83  +
mov edx [eax+70h] +
fild  dword ptr [eax+70h] +
test edx edx +
jge loc_1036F55  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_1036F6D  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fld  ds:dbl_1001648 +
fmul st(1) st +
fxch  st(1) +
fstp  [ebp+var_11F4] +
fldz   +
jmp loc_1036F93  +
fldz   +
fst  [ebp+var_11F4] +
fld  ds:dbl_1001648 +
fxch  st(1) +
cmp ecx edi +
jz loc_1036FD1  +
mov edx [eax+0A8h] +
fild  dword ptr [eax+0A8h] +
test edx edx +
jge loc_1036FAD  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_1036FC5  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul st st(2) +
fstp  [ebp+var_11EC] +
jmp loc_1036FD7  +
fst  [ebp+var_11EC] +
cmp ecx edi +
jz loc_103700F  +
mov edx [eax+0B4h] +
fild  dword ptr [eax+0B4h] +
test edx edx +
jge loc_1036FF1  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_1037009  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul st st(2) +
jmp loc_1037011  +
fld  st +
cmp ecx edi +
jz loc_1037043  +
mov edx [eax+40h] +
fild  dword ptr [eax+40h] +
test edx edx +
jge loc_1037025  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_103703D  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul st st(3) +
jmp loc_1037045  +
fld  st(1) +
cmp ecx edi +
jz loc_103708F  +
mov edx [eax+0FCh] +
add edx [eax+0B0h] +
add edx [eax+78h] +
add edx [eax+48h] +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_1037071  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_1037089  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul st st(4) +
jmp loc_1037091  +
fld  st(2) +
cmp ecx edi +
jz loc_10370E1  +
mov edx [eax+13Ch] +
add edx [eax+0F8h] +
add edx [eax+0ACh] +
add edx [eax+74h] +
add edx [eax+44h] +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_10370C3  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_10370DB  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul st st(5) +
jmp loc_10370E3  +
fld  st(3) +
mov esi [ebp+var_1208] +
cmp esi edi +
jz loc_1037121  +
mov [ebp-11C8h] ecx +
fild  dword ptr [ebp-11C8h] +
test ecx ecx +
jge loc_1037103  +
fadd  ds:dbl_10018C0 +
mov ecx esi +
mov [ebp-11C8h] ecx +
fild  dword ptr [ebp-11C8h] +
test ecx ecx +
jge loc_103711B  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmulp st(6) st +
jmp loc_1037127  +
fstp  st(5) +
fld  st(3) +
fxch  st(5) +
cmp [ebp+var_11E4] edi +
jz loc_1037163  +
mov eax [eax] +
fstp  st(4) +
mov [ebp-11C8h] eax +
fild  dword ptr [ebp-11C8h] +
test eax eax +
jge loc_1037149  +
fadd  ds:dbl_10018C0 +
mov eax [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test eax eax +
jge loc_103715F  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
jmp loc_1037165  +
fxch  st(4) +
fld  [ebp+var_11F4] +
sub esp 40h +
fstp  [esp+28D8h+var_28A0] +
fld  [ebp+var_11EC] +
fstp  [esp+28D8h+var_28A8] +
fxch  st(3) +
fstp  [esp+28D8h+var_28B0] +
fxch  st(1) +
fstp  [esp+28D8h+var_28B8] +
fstp  [esp+28D8h+var_28C0] +
fxch  st(1) +
fstp  [esp+28D8h+var_28C8] +
fxch  st(1) +
fstp  [esp+28D8h+var_28D0] +
fstp  [esp+28D8h+var_28D8] +
push offset aItemDataName_9  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov eax dword_1057944 +
add esp 48h +
cmp esi edi +
jz loc_10371EF  +
mov ecx [eax+13Ch] +
fild  dword ptr [eax+13Ch] +
test ecx ecx +
jge loc_10371CD  +
fadd  ds:dbl_10018C0 +
mov ecx esi +
mov [ebp-11C8h] ecx +
fild  dword ptr [ebp-11C8h] +
test ecx ecx +
jge loc_10371E5  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul  ds:dbl_1001648 +
jmp loc_10371F1  +
fldz   +
cmp [ebp+var_11E4] edi +
jz loc_1037223  +
mov ecx [eax+4] +
fild  dword ptr [eax+4] +
test ecx ecx +
jge loc_1037209  +
fadd  ds:dbl_10018C0 +
mov ecx [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test ecx ecx +
jge loc_103721F  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
jmp loc_1037225  +
fldz   +
mov eax [eax+4] +
fxch  st(1) +
neg eax  +
sbb eax eax +
and eax 64h +
push eax  +
sub esp 10h +
fstp  [esp+28ACh+var_28A8+4] +
fstp  [esp+28ACh+var_28B0+4] +
push offset aItemDataNam_10  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov eax dword_1057944 +
mov ecx [eax+150h] +
add esp 1Ch +
cmp ecx edi +
jz loc_10372A2  +
mov edx [eax+0A8h] +
fild  dword ptr [eax+0A8h] +
test edx edx +
jge loc_1037274  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_103728C  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fld  ds:dbl_1001648 +
fmul st(1) st +
fxch  st(1) +
fstp  [ebp+var_11F4] +
fldz   +
jmp loc_10372B2  +
fldz   +
fst  [ebp+var_11F4] +
fld  ds:dbl_1001648 +
fxch  st(1) +
cmp ecx edi +
jz loc_10372EA  +
mov edx [eax+0B4h] +
fild  dword ptr [eax+0B4h] +
test edx edx +
jge loc_10372CC  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_10372E4  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul st st(2) +
jmp loc_10372EC  +
fld  st +
cmp ecx edi +
jz loc_1037324  +
mov edx [eax+0B8h] +
fild  dword ptr [eax+0B8h] +
test edx edx +
jge loc_1037306  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_103731E  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul st st(3) +
jmp loc_1037326  +
fld  st(1) +
cmp ecx edi +
jz loc_103735E  +
mov edx [eax+0B0h] +
fild  dword ptr [eax+0B0h] +
test edx edx +
jge loc_1037340  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_1037358  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul st st(4) +
jmp loc_1037360  +
fld  st(2) +
cmp ecx edi +
jz loc_1037398  +
mov edx [eax+0ACh] +
fild  dword ptr [eax+0ACh] +
test edx edx +
jge loc_103737A  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_1037392  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul st st(5) +
jmp loc_103739A  +
fld  st(3) +
cmp esi edi +
jz loc_10373D2  +
mov [ebp-11C8h] ecx +
fild  dword ptr [ebp-11C8h] +
test ecx ecx +
jge loc_10373B4  +
fadd  ds:dbl_10018C0 +
mov ecx esi +
mov [ebp-11C8h] ecx +
fild  dword ptr [ebp-11C8h] +
test ecx ecx +
jge loc_10373CC  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmulp st(6) st +
jmp loc_10373D8  +
fstp  st(5) +
fld  st(3) +
fxch  st(5) +
cmp [ebp+var_11E4] edi +
jz loc_1037413  +
mov eax [eax+24h] +
mov [ebp-11C8h] eax +
fild  dword ptr [ebp-11C8h] +
test eax eax +
jge loc_10373F9  +
fadd  ds:dbl_10018C0 +
mov eax [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test eax eax +
jge loc_103740F  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
jmp loc_1037415  +
fld  st(4) +
sub esp 40h +
fxch  st(5) +
fstp  [esp+28D8h+var_28A0] +
fld  [ebp+var_11F4] +
fstp  [esp+28D8h+var_28A8] +
fxch  st(3) +
fstp  [esp+28D8h+var_28B0] +
fxch  st(1) +
fstp  [esp+28D8h+var_28B8] +
fstp  [esp+28D8h+var_28C0] +
fstp  [esp+28D8h+var_28C8] +
fxch  st(1) +
fstp  [esp+28D8h+var_28D0] +
fstp  [esp+28D8h+var_28D8] +
push offset aItemDataNam_11  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov eax dword_1057944 +
mov ecx [eax+144h] +
add esp 48h +
cmp ecx edi +
jz loc_103749D  +
mov edx [eax+4Ch] +
fild  dword ptr [eax+4Ch] +
test edx edx +
jge loc_1037477  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_103748F  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fld  ds:dbl_1001648 +
fmul st(1) st +
fldz   +
jmp loc_10374AB  +
fldz   +
fld  st +
fld  ds:dbl_1001648 +
fxch  st(1) +
fxch  st(2) +
cmp ecx edi +
jz loc_10374DD  +
mov edx [eax+48h] +
fild  dword ptr [eax+48h] +
test edx edx +
jge loc_10374BF  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_10374D7  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul st st(2) +
jmp loc_10374DF  +
fld  st +
cmp ecx edi +
jz loc_1037511  +
mov edx [eax+44h] +
fild  dword ptr [eax+44h] +
test edx edx +
jge loc_10374F3  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_103750B  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul st st(3) +
jmp loc_1037513  +
fld  st(1) +
cmp esi edi +
jz loc_103754B  +
mov [ebp-11C8h] ecx +
fild  dword ptr [ebp-11C8h] +
test ecx ecx +
jge loc_103752D  +
fadd  ds:dbl_10018C0 +
mov ecx esi +
mov [ebp-11C8h] ecx +
fild  dword ptr [ebp-11C8h] +
test ecx ecx +
jge loc_1037545  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmulp st(4) st +
jmp loc_1037551  +
fstp  st(3) +
fld  st(1) +
fxch  st(3) +
cmp [ebp+var_11E4] edi +
jz loc_103758C  +
mov eax [eax+18h] +
mov [ebp-11C8h] eax +
fild  dword ptr [ebp-11C8h] +
test eax eax +
jge loc_1037572  +
fadd  ds:dbl_10018C0 +
mov eax [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test eax eax +
jge loc_1037588  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
jmp loc_103758E  +
fld  st(2) +
sub esp 40h +
fxch  st(3) +
fst  [esp+28D8h+var_28A0] +
fst  [esp+28D8h+var_28A8] +
fstp  [esp+28D8h+var_28B0] +
fxch  st(4) +
fstp  [esp+28D8h+var_28B8] +
fstp  [esp+28D8h+var_28C0] +
fxch  st(2) +
fstp  [esp+28D8h+var_28C8] +
fstp  [esp+28D8h+var_28D0] +
fstp  [esp+28D8h+var_28D8] +
push offset aItemDataNam_12  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov eax dword_1057944 +
mov ecx [eax+148h] +
add esp 48h +
cmp ecx edi +
jz loc_103760E  +
mov edx [eax+70h] +
fild  dword ptr [eax+70h] +
test edx edx +
jge loc_10375E8  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_1037600  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fld  ds:dbl_1001648 +
fmul st(1) st +
fldz   +
jmp loc_103761C  +
fldz   +
fld  st +
fld  ds:dbl_1001648 +
fxch  st(1) +
fxch  st(2) +
cmp ecx edi +
jz loc_103764E  +
mov edx [eax+7Ch] +
fild  dword ptr [eax+7Ch] +
test edx edx +
jge loc_1037630  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_1037648  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul st st(2) +
jmp loc_1037650  +
fld  st +
cmp ecx edi +
jz loc_1037682  +
mov edx [eax+78h] +
fild  dword ptr [eax+78h] +
test edx edx +
jge loc_1037664  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_103767C  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul st st(3) +
jmp loc_1037684  +
fld  st(1) +
cmp ecx edi +
jz loc_10376B6  +
mov edx [eax+74h] +
fild  dword ptr [eax+74h] +
test edx edx +
jge loc_1037698  +
fadd  ds:dbl_10018C0 +
mov edx ecx +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_10376B0  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul st st(4) +
jmp loc_10376B8  +
fld  st(2) +
cmp esi edi +
jz loc_10376F0  +
mov [ebp-11C8h] ecx +
fild  dword ptr [ebp-11C8h] +
test ecx ecx +
jge loc_10376D2  +
fadd  ds:dbl_10018C0 +
mov ecx esi +
mov [ebp-11C8h] ecx +
fild  dword ptr [ebp-11C8h] +
test ecx ecx +
jge loc_10376EA  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmulp st(5) st +
jmp loc_10376F6  +
fstp  st(4) +
fld  st(2) +
fxch  st(4) +
cmp [ebp+var_11E4] edi +
jz loc_1037731  +
mov eax [eax+1Ch] +
mov [ebp-11C8h] eax +
fild  dword ptr [ebp-11C8h] +
test eax eax +
jge loc_1037717  +
fadd  ds:dbl_10018C0 +
mov eax [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test eax eax +
jge loc_103772D  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
jmp loc_1037733  +
fld  st(3) +
sub esp 40h +
fxch  st(6) +
fstp  [esp+28D8h+var_28A0] +
fxch  st(3) +
fst  [esp+28D8h+var_28A8] +
fstp  [esp+28D8h+var_28B0] +
fxch  st(1) +
fstp  [esp+28D8h+var_28B8] +
fstp  [esp+28D8h+var_28C0] +
fstp  [esp+28D8h+var_28C8] +
fstp  [esp+28D8h+var_28D0] +
fstp  [esp+28D8h+var_28D8] +
push offset aItemDataNam_13  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov eax dword_1057944 +
mov edx [eax+30h] +
add esp 48h +
cmp edx edi +
jz loc_1037909  +
mov ecx [eax+154h] +
cmp ecx edi +
jz loc_10377CA  +
mov esi [eax+100h] +
fild  dword ptr [eax+100h] +
test esi esi +
jge loc_103779E  +
fadd  ds:dbl_10018C0 +
mov esi ecx +
mov [ebp-11C8h] esi +
fild  dword ptr [ebp-11C8h] +
test esi esi +
jge loc_10377B6  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
mov esi [ebp+var_1208] +
fld  ds:dbl_1001648 +
fmul st(1) st +
fldz   +
jmp loc_10377D8  +
fldz   +
fld  st +
fld  ds:dbl_1001648 +
fxch  st(1) +
fxch  st(2) +
cmp ecx edi +
jz loc_1037816  +
mov esi [eax+0FCh] +
fild  dword ptr [eax+0FCh] +
test esi esi +
jge loc_10377F2  +
fadd  ds:dbl_10018C0 +
mov esi ecx +
mov [ebp-11C8h] esi +
fild  dword ptr [ebp-11C8h] +
test esi esi +
jge loc_103780A  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
mov esi [ebp+var_1208] +
fmul st st(2) +
jmp loc_1037818  +
fld  st +
cmp ecx edi +
jz loc_1037856  +
mov eax [eax+0F8h] +
mov [ebp-11C8h] eax +
fild  dword ptr [ebp-11C8h] +
test eax eax +
jge loc_1037838  +
fadd  ds:dbl_10018C0 +
mov eax ecx +
mov [ebp-11C8h] eax +
fild  dword ptr [ebp-11C8h] +
test eax eax +
jge loc_1037850  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul st st(3) +
jmp loc_1037858  +
fld  st(1) +
cmp esi edi +
jz loc_103788E  +
mov [ebp-11C8h] ecx +
fild  dword ptr [ebp-11C8h] +
test ecx ecx +
jge loc_1037872  +
fadd  ds:dbl_10018C0 +
mov [ebp-11C8h] esi +
fild  dword ptr [ebp-11C8h] +
test esi esi +
jge loc_1037888  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmulp st(4) st +
jmp loc_1037894  +
fstp  st(3) +
fld  st(1) +
fxch  st(3) +
cmp [ebp+var_11E4] edi +
jz loc_10378CC  +
mov [ebp-11C8h] edx +
fild  dword ptr [ebp-11C8h] +
test edx edx +
jge loc_10378B2  +
fadd  ds:dbl_10018C0 +
mov eax [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test eax eax +
jge loc_10378C8  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
jmp loc_10378CE  +
fld  st(2) +
sub esp 40h +
fxch  st(3) +
fst  [esp+28D8h+var_28A0] +
fst  [esp+28D8h+var_28A8] +
fstp  [esp+28D8h+var_28B0] +
fxch  st(4) +
fstp  [esp+28D8h+var_28B8] +
fstp  [esp+28D8h+var_28C0] +
fxch  st(2) +
fstp  [esp+28D8h+var_28C8] +
fstp  [esp+28D8h+var_28D0] +
fstp  [esp+28D8h+var_28D8] +
push offset aItemDataNam_14  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 48h +
push [ebp+lpBuffer]  +
push offset aTable_0  +
call sub_1023CCF  +
mov esi 500h +
push esi  +
lea eax [ebp+var_D64] +
push edi  +
push eax  +
call memset  +
push esi  +
lea eax [ebp+var_224C] +
push edi  +
push eax  +
call memset  +
push esi  +
lea eax [ebp+var_170C] +
push edi  +
push eax  +
call memset  +
push esi  +
lea eax [ebp+var_1CAC] +
push edi  +
push eax  +
call memset  +
push esi  +
lea eax [ebp+var_27EC] +
push edi  +
push eax  +
call memset  +
add esp 3Ch +
mov [ebp-11D0h] edi +
jmp loc_1038115  +
mov eax dword ptr [ebp+var_1204+4] +
cmp dword ptr [eax+20h] 0 +
jz loc_10380EA  +
push 40h  +
lea eax [ebp+var_44] +
push 0  +
push eax  +
call memset  +
lea eax [ebp+var_D64] +
add esp 0Ch +
and dword ptr [ebp-11F8h] 0 +
mov dword ptr [ebp+var_11DC+4] eax +
mov dword ptr [ebp-11C8h] 14h +
cmp dword ptr [ebp-11F8h] 0 +
jz loc_10379F4  +
cmp [ebp+var_24] 0 +
jz loc_1037ABA  +
mov esi dword ptr [ebp+var_11DC+4] +
push 10h  +
pop ecx  +
push 10h  +
lea edi [ebp+var_594] +
movs   +
mov edi dword ptr [ebp+var_11DC+4] +
pop ecx  +
lea esi [ebp+var_44] +
movs   +
push 10h  +
pop ecx  +
lea esi [ebp+var_594] +
lea edi [ebp+var_44] +
movs   +
jmp loc_1037ABA  +
mov eax dword ptr [ebp+var_11DC+4] +
mov eax [eax+20h] +
test eax eax +
jnz loc_1037A3F  +
mov eax dword ptr [ebp+var_1204+4] +
mov edi dword ptr [ebp+var_11DC+4] +
push 10h  +
pop ecx  +
push dword ptr [eax+38h]  +
mov esi eax +
movs   +
call ds:lstrlenA  +
push eax  +
mov eax dword ptr [ebp+var_1204+4] +
push dword ptr [eax+38h]  +
call sub_10331F0  +
mov ecx dword ptr [ebp+var_11DC+4] +
mov [ecx+38h] eax +
test eax eax +
jnz loc_1037A90  +
push 40h  +
push eax  +
push ecx  +
jmp loc_1037AB2  +
mov ecx dword ptr [ebp+var_1204+4] +
cmp [ecx+20h] eax +
jbe loc_1037ABA  +
mov esi dword ptr [ebp+var_11DC+4] +
mov eax dword ptr [ebp+var_1204+4] +
push 10h  +
pop ecx  +
push 10h  +
lea edi [ebp+var_44] +
movs   +
mov edi dword ptr [ebp+var_11DC+4] +
pop ecx  +
push dword ptr [eax+38h]  +
mov esi eax +
movs   +
call ds:lstrlenA  +
push eax  +
mov eax dword ptr [ebp+var_1204+4] +
push dword ptr [eax+38h]  +
call sub_10331F0  +
mov ecx dword ptr [ebp+var_11DC+4] +
mov [ecx+38h] eax +
test eax eax +
jz loc_1037A9C  +
mov dword ptr [ebp-11F8h] 1 +
jmp loc_1037ABA  +
mov edi dword ptr [ebp+var_11DC+4] +
push 10h  +
pop ecx  +
push 40h  +
lea esi [ebp+var_44] +
push 0  +
lea eax [ebp+var_44] +
movs   +
push eax  +
call memset  +
add esp 0Ch +
add dword ptr [ebp+var_11DC+4] 40h +
dec dword ptr [ebp-11C8h]  +
jnz loc_10379AF  +
xor esi esi +
cmp [ebp+var_24] esi +
jz loc_1037AE9  +
cmp [ebp+lpMem] esi +
jz loc_1037AE9  +
push [ebp+lpMem]  +
push esi  +
push hHeap  +
call ds:HeapFree  +
push 40h  +
lea eax [ebp+var_44] +
push esi  +
push eax  +
call memset  +
lea eax [ebp+var_224C] +
add esp 0Ch +
mov [ebp-11F8h] esi +
mov dword ptr [ebp+var_11DC+4] eax +
mov dword ptr [ebp-11C8h] 14h +
xor edx edx +
cmp [ebp-11F8h] edx +
jz loc_1037B59  +
cmp [ebp+var_24] edx +
jz loc_1037C4A  +
mov esi dword ptr [ebp+var_11DC+4] +
push 10h  +
pop ecx  +
push 10h  +
lea edi [ebp+var_594] +
movs   +
mov edi dword ptr [ebp+var_11DC+4] +
pop ecx  +
lea esi [ebp+var_44] +
movs   +
push 10h  +
pop ecx  +
lea esi [ebp+var_594] +
lea edi [ebp+var_44] +
movs   +
jmp loc_1037C4A  +
mov eax dword ptr [ebp+var_1204+4] +
mov ecx [eax+24h] +
cmp ecx 0Ah +
jz loc_1037B6C  +
cmp [eax+1Ch] edx +
jbe loc_1037BB8  +
mov esi dword ptr [ebp+var_11DC+4] +
cmp [esi+20h] edx +
jnz loc_1037BB8  +
mov eax dword ptr [ebp+var_1204+4] +
mov edi dword ptr [ebp+var_11DC+4] +
push 10h  +
pop ecx  +
push dword ptr [eax+38h]  +
mov esi eax +
movs   +
call ds:lstrlenA  +
push eax  +
mov eax dword ptr [ebp+var_1204+4] +
push dword ptr [eax+38h]  +
call sub_10331F0  +
mov ecx dword ptr [ebp+var_11DC+4] +
mov [ecx+38h] eax +
test eax eax +
jnz loc_1037C20  +
push 40h  +
push eax  +
push ecx  +
jmp loc_1037C42  +
cmp ecx 0Ah +
jz loc_1037BCC  +
cmp [eax+1Ch] edx +
jbe loc_1037C4A  +
mov eax dword ptr [ebp+var_1204+4] +
mov eax [eax+20h] +
mov ecx dword ptr [ebp+var_11DC+4] +
cmp eax [ecx+20h] +
jbe loc_1037C4A  +
mov esi dword ptr [ebp+var_11DC+4] +
mov eax dword ptr [ebp+var_1204+4] +
push 10h  +
pop ecx  +
push 10h  +
lea edi [ebp+var_44] +
movs   +
mov edi dword ptr [ebp+var_11DC+4] +
pop ecx  +
push dword ptr [eax+38h]  +
mov esi eax +
movs   +
call ds:lstrlenA  +
push eax  +
mov eax dword ptr [ebp+var_1204+4] +
push dword ptr [eax+38h]  +
call sub_10331F0  +
mov ecx dword ptr [ebp+var_11DC+4] +
mov [ecx+38h] eax +
test eax eax +
jz loc_1037C2C  +
mov dword ptr [ebp-11F8h] 1 +
jmp loc_1037C4A  +
mov edi dword ptr [ebp+var_11DC+4] +
push 10h  +
pop ecx  +
push 40h  +
lea esi [ebp+var_44] +
push 0  +
lea eax [ebp+var_44] +
movs   +
push eax  +
call memset  +
add esp 0Ch +
add dword ptr [ebp+var_11DC+4] 40h +
dec dword ptr [ebp-11C8h]  +
jnz loc_1037B14  +
xor esi esi +
cmp [ebp+var_24] esi +
jz loc_1037C79  +
cmp [ebp+lpMem] esi +
jz loc_1037C79  +
push [ebp+lpMem]  +
push esi  +
push hHeap  +
call ds:HeapFree  +
mov eax dword ptr [ebp+var_1204+4] +
push esi  +
push dword ptr [eax+20h]  +
push dword ptr [eax+34h]  +
push dword ptr [eax+30h]  +
call __aulldiv  +
push 40h  +
mov dword ptr [ebp+var_11EC] eax +
lea eax [ebp+var_44] +
push esi  +
push eax  +
mov dword ptr [ebp+var_11EC+4] edx +
call memset  +
lea eax [ebp+var_170C] +
add esp 0Ch +
mov [ebp-11F8h] esi +
mov dword ptr [ebp+var_11DC+4] eax +
mov dword ptr [ebp-11C8h] 14h +
xor edx edx +
cmp [ebp-11F8h] edx +
jz loc_1037D0A  +
cmp [ebp+var_24] edx +
jz loc_1037DE7  +
mov esi dword ptr [ebp+var_11DC+4] +
push 10h  +
pop ecx  +
push 10h  +
lea edi [ebp+var_594] +
movs   +
mov edi dword ptr [ebp+var_11DC+4] +
pop ecx  +
lea esi [ebp+var_44] +
movs   +
push 10h  +
pop ecx  +
lea esi [ebp+var_594] +
lea edi [ebp+var_44] +
movs   +
jmp loc_1037DE7  +
mov eax dword ptr [ebp+var_11DC+4] +
mov ecx [eax+20h] +
cmp ecx edx +
jnz loc_1037D58  +
mov eax dword ptr [ebp+var_1204+4] +
mov edi dword ptr [ebp+var_11DC+4] +
push 10h  +
pop ecx  +
push dword ptr [eax+38h]  +
mov esi eax +
movs   +
call ds:lstrlenA  +
push eax  +
mov eax dword ptr [ebp+var_1204+4] +
push dword ptr [eax+38h]  +
call sub_10331F0  +
mov ecx dword ptr [ebp+var_11DC+4] +
mov [ecx+38h] eax +
test eax eax +
jnz loc_1037DBD  +
push 40h  +
push eax  +
push ecx  +
jmp loc_1037DDF  +
push edx  +
push ecx  +
push dword ptr [eax+34h]  +
push dword ptr [eax+30h]  +
call __aulldiv  +
cmp dword ptr [ebp+var_11EC+4] edx +
jb loc_1037DE7  +
ja loc_1037D77  +
cmp dword ptr [ebp+var_11EC] eax +
jbe loc_1037DE7  +
mov esi dword ptr [ebp+var_11DC+4] +
mov eax dword ptr [ebp+var_1204+4] +
push 10h  +
pop ecx  +
push 10h  +
lea edi [ebp+var_44] +
movs   +
mov edi dword ptr [ebp+var_11DC+4] +
pop ecx  +
push dword ptr [eax+38h]  +
mov esi eax +
movs   +
call ds:lstrlenA  +
push eax  +
mov eax dword ptr [ebp+var_1204+4] +
push dword ptr [eax+38h]  +
call sub_10331F0  +
mov ecx dword ptr [ebp+var_11DC+4] +
mov [ecx+38h] eax +
test eax eax +
jz loc_1037DC9  +
mov dword ptr [ebp-11F8h] 1 +
jmp loc_1037DE7  +
mov edi dword ptr [ebp+var_11DC+4] +
push 10h  +
pop ecx  +
push 40h  +
lea esi [ebp+var_44] +
push 0  +
lea eax [ebp+var_44] +
movs   +
push eax  +
call memset  +
add esp 0Ch +
add dword ptr [ebp+var_11DC+4] 40h +
dec dword ptr [ebp-11C8h]  +
jnz loc_1037CC5  +
xor esi esi +
cmp [ebp+var_24] esi +
jz loc_1037E16  +
cmp [ebp+lpMem] esi +
jz loc_1037E16  +
push [ebp+lpMem]  +
push esi  +
push hHeap  +
call ds:HeapFree  +
push 40h  +
lea eax [ebp+var_44] +
push esi  +
push eax  +
call memset  +
lea eax [ebp+var_1CAC] +
add esp 0Ch +
mov [ebp-11F8h] esi +
mov dword ptr [ebp+var_11DC+4] eax +
mov dword ptr [ebp-11C8h] 14h +
xor ecx ecx +
cmp [ebp-11F8h] ecx +
jz loc_1037E86  +
cmp [ebp+var_24] ecx +
jz loc_1037F55  +
mov esi dword ptr [ebp+var_11DC+4] +
push 10h  +
pop ecx  +
push 10h  +
lea edi [ebp+var_594] +
movs   +
mov edi dword ptr [ebp+var_11DC+4] +
pop ecx  +
lea esi [ebp+var_44] +
movs   +
push 10h  +
pop ecx  +
lea esi [ebp+var_594] +
lea edi [ebp+var_44] +
movs   +
jmp loc_1037F55  +
mov eax dword ptr [ebp+var_11DC+4] +
cmp [eax+20h] ecx +
jnz loc_1037ECF  +
mov eax dword ptr [ebp+var_1204+4] +
mov edi dword ptr [ebp+var_11DC+4] +
push 10h  +
pop ecx  +
push dword ptr [eax+38h]  +
mov esi eax +
movs   +
call ds:lstrlenA  +
push eax  +
mov eax dword ptr [ebp+var_1204+4] +
push dword ptr [eax+38h]  +
call sub_10331F0  +
mov ecx dword ptr [ebp+var_11DC+4] +
mov [ecx+38h] eax +
test eax eax +
jnz loc_1037F2B  +
push 40h  +
push eax  +
push ecx  +
jmp loc_1037F4D  +
mov ecx dword ptr [ebp+var_1204+4] +
mov edx [ecx+10h] +
add edx [ecx+0Ch] +
mov ecx [eax+0Ch] +
add ecx [eax+10h] +
cmp edx ecx +
jbe loc_1037F55  +
mov esi dword ptr [ebp+var_11DC+4] +
mov eax dword ptr [ebp+var_1204+4] +
push 10h  +
pop ecx  +
push 10h  +
lea edi [ebp+var_44] +
movs   +
mov edi dword ptr [ebp+var_11DC+4] +
pop ecx  +
push dword ptr [eax+38h]  +
mov esi eax +
movs   +
call ds:lstrlenA  +
push eax  +
mov eax dword ptr [ebp+var_1204+4] +
push dword ptr [eax+38h]  +
call sub_10331F0  +
mov ecx dword ptr [ebp+var_11DC+4] +
mov [ecx+38h] eax +
test eax eax +
jz loc_1037F37  +
mov dword ptr [ebp-11F8h] 1 +
jmp loc_1037F55  +
mov edi dword ptr [ebp+var_11DC+4] +
push 10h  +
pop ecx  +
push 40h  +
lea esi [ebp+var_44] +
push 0  +
lea eax [ebp+var_44] +
movs   +
push eax  +
call memset  +
add esp 0Ch +
add dword ptr [ebp+var_11DC+4] 40h +
dec dword ptr [ebp-11C8h]  +
jnz loc_1037E41  +
xor esi esi +
cmp [ebp+var_24] esi +
jz loc_1037F84  +
cmp [ebp+lpMem] esi +
jz loc_1037F84  +
push [ebp+lpMem]  +
push esi  +
push hHeap  +
call ds:HeapFree  +
push 40h  +
lea eax [ebp+var_44] +
push esi  +
push eax  +
call memset  +
lea eax [ebp+var_27EC] +
add esp 0Ch +
mov [ebp-11F8h] esi +
mov dword ptr [ebp+var_11DC+4] eax +
mov dword ptr [ebp-11C8h] 14h +
xor ecx ecx +
cmp [ebp-11F8h] ecx +
jz loc_1037FF4  +
cmp [ebp+var_24] ecx +
jz loc_10380BB  +
mov esi dword ptr [ebp+var_11DC+4] +
push 10h  +
pop ecx  +
push 10h  +
lea edi [ebp+var_594] +
movs   +
mov edi dword ptr [ebp+var_11DC+4] +
pop ecx  +
lea esi [ebp+var_44] +
movs   +
push 10h  +
pop ecx  +
lea esi [ebp+var_594] +
lea edi [ebp+var_44] +
movs   +
jmp loc_10380BB  +
mov eax dword ptr [ebp+var_11DC+4] +
cmp [eax+20h] ecx +
jnz loc_103803D  +
mov eax dword ptr [ebp+var_1204+4] +
mov edi dword ptr [ebp+var_11DC+4] +
push 10h  +
pop ecx  +
push dword ptr [eax+38h]  +
mov esi eax +
movs   +
call ds:lstrlenA  +
push eax  +
mov eax dword ptr [ebp+var_1204+4] +
push dword ptr [eax+38h]  +
call sub_10331F0  +
mov ecx dword ptr [ebp+var_11DC+4] +
mov [ecx+38h] eax +
test eax eax +
jnz loc_1038091  +
push 40h  +
push eax  +
push ecx  +
jmp loc_10380B3  +
mov ecx dword ptr [ebp+var_1204+4] +
mov ecx [ecx+28h] +
cmp ecx [eax+28h] +
jbe loc_10380BB  +
mov esi dword ptr [ebp+var_11DC+4] +
mov eax dword ptr [ebp+var_1204+4] +
push 10h  +
pop ecx  +
push 10h  +
lea edi [ebp+var_44] +
movs   +
mov edi dword ptr [ebp+var_11DC+4] +
pop ecx  +
push dword ptr [eax+38h]  +
mov esi eax +
movs   +
call ds:lstrlenA  +
push eax  +
mov eax dword ptr [ebp+var_1204+4] +
push dword ptr [eax+38h]  +
call sub_10331F0  +
mov ecx dword ptr [ebp+var_11DC+4] +
mov [ecx+38h] eax +
test eax eax +
jz loc_103809D  +
mov dword ptr [ebp-11F8h] 1 +
jmp loc_10380BB  +
mov edi dword ptr [ebp+var_11DC+4] +
push 10h  +
pop ecx  +
push 40h  +
lea esi [ebp+var_44] +
push 0  +
lea eax [ebp+var_44] +
movs   +
push eax  +
call memset  +
add esp 0Ch +
add dword ptr [ebp+var_11DC+4] 40h +
dec dword ptr [ebp-11C8h]  +
jnz loc_1037FAF  +
xor eax eax +
cmp [ebp+var_24] eax +
jz loc_10380EA  +
cmp [ebp+lpMem] eax +
jz loc_10380EA  +
push [ebp+lpMem]  +
push eax  +
push hHeap  +
call ds:HeapFree  +
mov esi dword ptr [ebp+var_1204+4] +
mov eax [esi+38h] +
test eax eax +
jz loc_1038106  +
push eax  +
push 0  +
push hHeap  +
call ds:HeapFree  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
push dword ptr [ebp-11D0h]  +
call sub_102257D  +
mov dword ptr [ebp+var_1204+4] eax +
test eax eax +
jnz loc_1037972  +
inc dword ptr [ebp-11D0h]  +
cmp dword ptr [ebp-11D0h] 20h +
jb loc_1038115  +
mov eax offset a0_000 +
push eax  +
push eax  +
push eax  +
push offset aTableNameTopur  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 14h +
xor edi edi +
mov dword ptr [ebp+var_1204+4] edi +
lea esi [ebp+var_D2C] +
cmp [esi-18h] edi +
jz loc_103833E  +
push edi  +
push dword ptr [esi-18h]  +
push dword ptr [esi-4]  +
push dword ptr [esi-8]  +
call __aulldiv  +
mov dword ptr [ebp+var_11EC] eax +
mov eax [esi] +
mov dword ptr [ebp+var_11EC+4] edx +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_103818F  +
sub eax ecx +
push eax  +
push dword ptr [esi]  +
call sub_10317BB  +
mov eax [esi] +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_10381A5  +
sub eax ecx +
cmp eax 4Fh +
jbe loc_10381C5  +
push dword ptr [esi]  +
lea eax [ebp+var_54] +
push 50h  +
push eax  +
call sub_1034376  +
lea eax [ebp+var_54] +
jmp loc_10381C7  +
mov eax [esi] +
push [ebp+lpBuffer]  +
mov [ebp-11C8h] eax +
push offset aItemDataNameUr  +
call sub_1023CCF  +
push dword ptr [ebp-11C8h]  +
push edi  +
push 1  +
push [ebp+lpBuffer]  +
call sub_101D093  +
push [ebp+lpBuffer]  +
push offset aData_0  +
call sub_1023CCF  +
cmp [ebp+var_11E4] edi +
jz loc_1038216  +
mov eax [esi-10h] +
xor edx edx +
div  [ebp+var_11E4] +
jmp loc_1038218  +
xor eax eax +
cmp [ebp+var_1208] edi +
jz loc_1038262  +
mov ecx [esi-2Ch] +
fild  dword ptr [esi-2Ch] +
test ecx ecx +
jge loc_1038230  +
fadd  ds:dbl_10018C0 +
mov ecx [esi-28h] +
fild  dword ptr [esi-28h] +
test ecx ecx +
jge loc_1038240  +
fadd  ds:dbl_10018C0 +
mov ecx [ebp+var_1208] +
faddp st(1) st +
fild  [ebp+var_1208] +
test ecx ecx +
jge loc_1038258  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul  ds:dbl_1001648 +
jmp loc_1038264  +
fldz   +
mov ecx [esi-1Ch] +
fild  dword ptr [esi-1Ch] +
test ecx ecx +
jge loc_1038274  +
fadd  ds:dbl_10018C0 +
mov ecx [esi-18h] +
fild  dword ptr [esi-18h] +
test ecx ecx +
jge loc_1038284  +
fadd  ds:dbl_10018C0 +
fdiv st(1) st +
fxch  st(1) +
fmul  ds:dbl_1001648 +
cmp [ebp+var_11E4] edi +
jz loc_10382B0  +
mov ecx [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test ecx ecx +
jge loc_10382AC  +
fadd  ds:dbl_10018C0 +
fdivp st(2) st +
jmp loc_10382B6  +
fstp  st(1) +
fldz   +
fxch  st(1) +
push eax  +
fxch  st(2) +
mov eax dword ptr [ebp+var_11EC] +
mov dword ptr [ebp+var_11F4] eax +
mov eax dword ptr [ebp+var_11EC+4] +
sub esp 20h +
fstp  [esp+28BCh+var_28A8+4] +
mov [ebp-11D0h] eax +
and [ebp-11D0h] ebx +
and eax 7FFFFFFFh +
mov dword ptr [ebp+var_11F4+4] eax +
fild  [ebp+var_11F4] +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
fchs   +
faddp st(1) st +
fdiv  ds:dbl_1002998 +
fstp  [esp+28BCh+var_28B0+4] +
fxch  st(1) +
fstp  [esp+28BCh+var_28B8+4] +
fstp  [esp+28BCh+var_28C0+4] +
push dword ptr [esi-30h]  +
push offset aDataNameSiteid  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 30h +
inc dword ptr [ebp+var_1204+4]  +
add esi 40h +
cmp dword ptr [ebp+var_1204+4] 14h +
jb loc_1038166  +
push [ebp+lpBuffer]  +
push offset aTable_0  +
call sub_1023CCF  +
mov eax offset a0_000 +
push eax  +
push eax  +
push offset aTableNameTopst  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 10h +
mov dword ptr [ebp+var_1204+4] edi +
lea esi [ebp+var_2214] +
cmp [esi-18h] edi +
jz loc_10384F8  +
push edi  +
push dword ptr [esi-18h]  +
push dword ptr [esi-4]  +
push dword ptr [esi-8]  +
call __aulldiv  +
mov dword ptr [ebp+var_11EC] eax +
mov eax [esi] +
mov dword ptr [ebp+var_11EC+4] edx +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_103839D  +
sub eax ecx +
push eax  +
push dword ptr [esi]  +
call sub_10317BB  +
mov eax [esi] +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_10383B3  +
sub eax ecx +
cmp eax 4Fh +
jbe loc_10383D3  +
push dword ptr [esi]  +
lea eax [ebp+var_54] +
push 50h  +
push eax  +
call sub_1034376  +
lea eax [ebp+var_54] +
jmp loc_10383D5  +
mov eax [esi] +
push [ebp+lpBuffer]  +
mov [ebp-11C8h] eax +
push offset aItemDataNameUr  +
call sub_1023CCF  +
push dword ptr [ebp-11C8h]  +
push edi  +
push 1  +
push [ebp+lpBuffer]  +
call sub_101D093  +
push [ebp+lpBuffer]  +
push offset aData_0  +
call sub_1023CCF  +
cmp [ebp+var_11E4] edi +
jz loc_1038424  +
mov eax [esi-10h] +
xor edx edx +
div  [ebp+var_11E4] +
jmp loc_1038426  +
xor eax eax +
mov ecx [esi-1Ch] +
fild  dword ptr [esi-1Ch] +
test ecx ecx +
jge loc_1038436  +
fadd  ds:dbl_10018C0 +
mov ecx [esi-18h] +
fild  dword ptr [esi-18h] +
test ecx ecx +
jge loc_1038446  +
fadd  ds:dbl_10018C0 +
fdiv st(1) st +
fxch  st(1) +
fmul  ds:dbl_1001648 +
cmp [ebp+var_11E4] edi +
jz loc_1038472  +
mov ecx [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test ecx ecx +
jge loc_103846E  +
fadd  ds:dbl_10018C0 +
fdivp st(2) st +
jmp loc_1038478  +
fstp  st(1) +
fldz   +
fxch  st(1) +
push eax  +
mov eax dword ptr [ebp+var_11EC] +
mov dword ptr [ebp+var_11F4] eax +
mov eax dword ptr [ebp+var_11EC+4] +
mov [ebp-11D0h] eax +
and [ebp-11D0h] ebx +
and eax 7FFFFFFFh +
mov dword ptr [ebp+var_11F4+4] eax +
fild  [ebp+var_11F4] +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
sub esp 18h +
fchs   +
faddp st(1) st +
fdiv  ds:dbl_1002998 +
fstp  [esp+28B4h+var_28A8+4] +
fstp  [esp+28B4h+var_28B0+4] +
fstp  [esp+28B4h+var_28B8+4] +
push dword ptr [esi-30h]  +
push offset aDataNameSite_0  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 28h +
inc dword ptr [ebp+var_1204+4]  +
add esi 40h +
cmp dword ptr [ebp+var_1204+4] 14h +
jb loc_1038374  +
push [ebp+lpBuffer]  +
push offset aTable_0  +
call sub_1023CCF  +
mov eax offset a0_000 +
push eax  +
push eax  +
push offset aTableNameSlowe  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 10h +
mov dword ptr [ebp+var_1204+4] edi +
lea esi [ebp+var_16D4] +
cmp [esi-18h] edi +
jz loc_10386B2  +
push edi  +
push dword ptr [esi-18h]  +
push dword ptr [esi-4]  +
push dword ptr [esi-8]  +
call __aulldiv  +
mov dword ptr [ebp+var_11EC] eax +
mov eax [esi] +
mov dword ptr [ebp+var_11EC+4] edx +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_1038557  +
sub eax ecx +
push eax  +
push dword ptr [esi]  +
call sub_10317BB  +
mov eax [esi] +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_103856D  +
sub eax ecx +
cmp eax 4Fh +
jbe loc_103858D  +
push dword ptr [esi]  +
lea eax [ebp+var_54] +
push 50h  +
push eax  +
call sub_1034376  +
lea eax [ebp+var_54] +
jmp loc_103858F  +
mov eax [esi] +
push [ebp+lpBuffer]  +
mov [ebp-11C8h] eax +
push offset aItemDataNameUr  +
call sub_1023CCF  +
push dword ptr [ebp-11C8h]  +
push edi  +
push 1  +
push [ebp+lpBuffer]  +
call sub_101D093  +
push [ebp+lpBuffer]  +
push offset aData_0  +
call sub_1023CCF  +
cmp [ebp+var_11E4] edi +
jz loc_10385DE  +
mov eax [esi-10h] +
xor edx edx +
div  [ebp+var_11E4] +
jmp loc_10385E0  +
xor eax eax +
mov ecx [esi-1Ch] +
fild  dword ptr [esi-1Ch] +
test ecx ecx +
jge loc_10385F0  +
fadd  ds:dbl_10018C0 +
mov ecx [esi-18h] +
fild  dword ptr [esi-18h] +
test ecx ecx +
jge loc_1038600  +
fadd  ds:dbl_10018C0 +
fdiv st(1) st +
fxch  st(1) +
fmul  ds:dbl_1001648 +
cmp [ebp+var_11E4] edi +
jz loc_103862C  +
mov ecx [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test ecx ecx +
jge loc_1038628  +
fadd  ds:dbl_10018C0 +
fdivp st(2) st +
jmp loc_1038632  +
fstp  st(1) +
fldz   +
fxch  st(1) +
push eax  +
mov eax dword ptr [ebp+var_11EC] +
mov dword ptr [ebp+var_11F4] eax +
mov eax dword ptr [ebp+var_11EC+4] +
mov [ebp-11D0h] eax +
and [ebp-11D0h] ebx +
and eax 7FFFFFFFh +
mov dword ptr [ebp+var_11F4+4] eax +
fild  [ebp+var_11F4] +
mov [ebp+var_11D4] edi +
fild  qword ptr [ebp+var_11D4] +
sub esp 18h +
fchs   +
faddp st(1) st +
fdiv  ds:dbl_1002998 +
fstp  [esp+28B4h+var_28A8+4] +
fstp  [esp+28B4h+var_28B0+4] +
fstp  [esp+28B4h+var_28B8+4] +
push dword ptr [esi-30h]  +
push offset aDataNameSite_0  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 28h +
inc dword ptr [ebp+var_1204+4]  +
add esi 40h +
cmp dword ptr [ebp+var_1204+4] 14h +
jb loc_103852E  +
push [ebp+lpBuffer]  +
push offset aTable_0  +
call sub_1023CCF  +
mov ebx offset a0_000 +
cmp [ebp+var_120C] edi +
jz loc_103883C  +
push ebx  +
push ebx  +
push offset aTableNameUrlti  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 10h +
mov dword ptr [ebp+var_1204+4] edi +
lea esi [ebp+var_1C74] +
cmp [esi-18h] edi +
jz loc_103882C  +
mov eax [esi] +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_1038702  +
sub eax ecx +
push eax  +
push dword ptr [esi]  +
call sub_10317BB  +
mov eax [esi] +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_1038718  +
sub eax ecx +
cmp eax 4Fh +
jbe loc_1038738  +
push dword ptr [esi]  +
lea eax [ebp+var_54] +
push 50h  +
push eax  +
call sub_1034376  +
lea eax [ebp+var_54] +
jmp loc_103873A  +
mov eax [esi] +
push [ebp+lpBuffer]  +
mov [ebp-11C8h] eax +
push offset aItemDataNameUr  +
call sub_1023CCF  +
push dword ptr [ebp-11C8h]  +
push edi  +
push 1  +
push [ebp+lpBuffer]  +
call sub_101D093  +
push [ebp+lpBuffer]  +
push offset aData_0  +
call sub_1023CCF  +
cmp [ebp+var_1208] edi +
jz loc_10387BE  +
mov eax [esi-2Ch] +
fild  dword ptr [esi-2Ch] +
test eax eax +
jge loc_103878C  +
fadd  ds:dbl_10018C0 +
mov eax [esi-28h] +
fild  dword ptr [esi-28h] +
test eax eax +
jge loc_103879C  +
fadd  ds:dbl_10018C0 +
mov eax [ebp+var_1208] +
faddp st(1) st +
fild  [ebp+var_1208] +
test eax eax +
jge loc_10387B4  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul  ds:dbl_1001648 +
jmp loc_10387C0  +
fldz   +
cmp [ebp+var_11E4] edi +
jz loc_10387F2  +
mov eax [esi-18h] +
fild  dword ptr [esi-18h] +
test eax eax +
jge loc_10387D8  +
fadd  ds:dbl_10018C0 +
mov eax [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test eax eax +
jge loc_10387EE  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
jmp loc_10387F4  +
fldz   +
sub esp 10h +
fxch  st(1) +
fstp  [esp+28A8h+var_28A0] +
fstp  [esp+28A8h+var_28A8] +
push dword ptr [esi-30h]  +
push offset aDataNameSite_1  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 1Ch +
inc dword ptr [ebp+var_1204+4]  +
add esi 40h +
cmp dword ptr [ebp+var_1204+4] 14h +
jb loc_10386F4  +
push [ebp+lpBuffer]  +
push offset aTable_0  +
call sub_1023CCF  +
push ebx  +
push ebx  +
push offset aTableNameTopby  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 10h +
mov dword ptr [ebp+var_1204+4] edi +
lea esi [ebp+var_27B4] +
cmp [esi-18h] edi +
jz loc_103897D  +
mov eax [esi] +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_103886B  +
sub eax ecx +
push eax  +
push dword ptr [esi]  +
call sub_10317BB  +
mov eax [esi] +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_1038881  +
sub eax ecx +
cmp eax 4Fh +
jbe loc_10388A1  +
push dword ptr [esi]  +
lea eax [ebp+var_54] +
push 50h  +
push eax  +
call sub_1034376  +
lea eax [ebp+var_54] +
jmp loc_10388A3  +
mov eax [esi] +
push [ebp+lpBuffer]  +
mov [ebp-11C8h] eax +
push offset aItemDataNameUr  +
call sub_1023CCF  +
push dword ptr [ebp-11C8h]  +
push edi  +
push 1  +
push [ebp+lpBuffer]  +
call sub_101D093  +
push [ebp+lpBuffer]  +
push offset aData_0  +
call sub_1023CCF  +
cmp [ebp+var_11E4] edi +
jz loc_10388F2  +
mov eax [esi-10h] +
xor edx edx +
div  [ebp+var_11E4] +
jmp loc_10388F4  +
xor eax eax +
mov ecx [esi-1Ch] +
fild  dword ptr [esi-1Ch] +
test ecx ecx +
jge loc_1038904  +
fadd  ds:dbl_10018C0 +
mov ecx [esi-18h] +
fild  dword ptr [esi-18h] +
test ecx ecx +
jge loc_1038914  +
fadd  ds:dbl_10018C0 +
fdiv st(1) st +
fxch  st(1) +
fmul  ds:dbl_1001648 +
cmp [ebp+var_11E4] edi +
jz loc_1038940  +
mov ecx [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test ecx ecx +
jge loc_103893C  +
fadd  ds:dbl_10018C0 +
fdivp st(2) st +
jmp loc_1038946  +
fstp  st(1) +
fldz   +
fxch  st(1) +
push eax  +
sub esp 10h +
fstp  [esp+28ACh+var_28A8+4] +
fstp  [esp+28ACh+var_28B0+4] +
push dword ptr [esi-30h]  +
push offset aDataNameSite_2  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 20h +
inc dword ptr [ebp+var_1204+4]  +
add esi 40h +
cmp dword ptr [ebp+var_1204+4] 14h +
jb loc_103885D  +
push [ebp+lpBuffer]  +
push offset aTable_0  +
call sub_1023CCF  +
xor esi esi +
cmp [ebp+esi+var_D44] edi +
jz loc_10389B1  +
mov eax [ebp+esi+var_D2C] +
cmp eax edi +
jz loc_10389B1  +
push eax  +
push edi  +
push hHeap  +
call ds:HeapFree  +
cmp [ebp+esi+var_222C] edi +
jz loc_10389D3  +
mov eax [ebp+esi+var_2214] +
cmp eax edi +
jz loc_10389D3  +
push eax  +
push edi  +
push hHeap  +
call ds:HeapFree  +
cmp [ebp+esi+var_16EC] edi +
jz loc_10389F5  +
mov eax [ebp+esi+var_16D4] +
cmp eax edi +
jz loc_10389F5  +
push eax  +
push edi  +
push hHeap  +
call ds:HeapFree  +
cmp [ebp+esi+var_1C8C] edi +
jz loc_1038A17  +
mov eax [ebp+esi+var_1C74] +
cmp eax edi +
jz loc_1038A17  +
push eax  +
push edi  +
push hHeap  +
call ds:HeapFree  +
cmp [ebp+esi+var_27CC] edi +
jz loc_1038A39  +
mov eax [ebp+esi+var_27B4] +
cmp eax edi +
jz loc_1038A39  +
push eax  +
push edi  +
push hHeap  +
call ds:HeapFree  +
add esi 40h +
cmp esi 500h +
jb loc_103898F  +
mov esi 460h +
push esi  +
lea eax [ebp+var_11C4] +
push edi  +
push eax  +
call memset  +
push esi  +
lea eax [ebp+var_CC4] +
push edi  +
push eax  +
call memset  +
add esp 18h +
jmp loc_1038C21  +
cmp [eax+0Ch] edi +
jz loc_1038C0E  +
push 38h  +
lea eax [ebp+var_58C] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
xor edx edx +
lea eax [ebp+var_11C4] +
mov dword ptr [ebp-11C8h] 14h +
cmp edx edi +
jz loc_1038ACC  +
cmp [ebp+var_580] edi +
jz loc_1038B02  +
push 0Eh  +
pop ecx  +
mov esi eax +
lea edi [ebp+var_3C] +
movs   +
push 0Eh  +
pop ecx  +
lea esi [ebp+var_58C] +
mov edi eax +
movs   +
lea esi [ebp+var_3C] +
lea edi [ebp+var_58C] +
jmp loc_1038AF6  +
mov ecx [eax+0Ch] +
mov esi dword ptr [ebp+var_11DC+4] +
cmp ecx edi +
jz loc_1038AF1  +
cmp [esi+0Ch] ecx +
jbe loc_1038B02  +
push 0Eh  +
pop ecx  +
mov esi eax +
lea edi [ebp+var_58C] +
movs   +
mov esi dword ptr [ebp+var_11DC+4] +
xor edx edx +
inc edx  +
mov edi eax +
push 0Eh  +
pop ecx  +
movs   +
xor edi edi +
mov ebx offset a0_000 +
add eax 38h +
dec dword ptr [ebp-11C8h]  +
jnz loc_1038A9E  +
mov eax dword ptr [ebp+var_11DC+4] +
push edi  +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+1Ch]  +
push dword ptr [eax+18h]  +
call __aulldiv  +
push 38h  +
mov dword ptr [ebp+var_11EC] eax +
lea eax [ebp+var_58C] +
push edi  +
push eax  +
mov dword ptr [ebp+var_11EC+4] edx +
call memset  +
lea ecx [ebp+var_CC4] +
add esp 0Ch +
mov [ebp-11D0h] edi +
mov [ebp-11F8h] ecx +
mov dword ptr [ebp-11C8h] 14h +
cmp [ebp-11D0h] edi +
jz loc_1038B9A  +
cmp [ebp+var_580] edi +
jz loc_1038BF3  +
mov esi [ebp-11F8h] +
push 0Eh  +
pop ecx  +
lea edi [ebp+var_3C] +
movs   +
mov edi [ebp-11F8h] +
push 0Eh  +
pop ecx  +
lea esi [ebp+var_58C] +
movs   +
lea esi [ebp+var_3C] +
lea edi [ebp+var_58C] +
jmp loc_1038BE7  +
mov eax [ecx+0Ch] +
cmp eax edi +
jz loc_1038BD1  +
push edi  +
push eax  +
push dword ptr [ecx+1Ch]  +
push dword ptr [ecx+18h]  +
call __aulldiv  +
cmp dword ptr [ebp+var_11EC+4] edx +
jb loc_1038BF3  +
ja loc_1038BC0  +
cmp dword ptr [ebp+var_11EC] eax +
jbe loc_1038BF3  +
mov esi [ebp-11F8h] +
push 0Eh  +
pop ecx  +
lea edi [ebp+var_58C] +
movs   +
mov edi [ebp-11F8h] +
mov esi dword ptr [ebp+var_11DC+4] +
mov dword ptr [ebp-11D0h] 1 +
push 0Eh  +
pop ecx  +
movs   +
xor edi edi +
mov ebx offset a0_000 +
mov ecx [ebp-11F8h] +
add ecx 38h +
dec dword ptr [ebp-11C8h]  +
mov [ebp-11F8h] ecx +
jnz loc_1038B5C  +
push dword ptr [ebp+var_11DC+4]  +
push edi  +
push hHeap  +
call ds:HeapFree  +
call sub_10225C4  +
mov dword ptr [ebp+var_11DC+4] eax +
cmp eax edi +
jnz loc_1038A71  +
push ebx  +
push ebx  +
push offset aTableNameClien  +
push [ebp+lpBuffer]  +
call sub_1024264  +
lea eax [ebp+var_11B8] +
add esp 10h +
mov dword ptr [ebp+var_1204+4] edi +
mov [ebp-11D0h] eax +
mov eax [ebp-11D0h] +
mov eax [eax] +
cmp eax edi +
jz loc_1038D7B  +
mov esi [ebp-11D0h] +
push edi  +
push eax  +
push dword ptr [esi+10h]  +
add esi 1Ch +
push dword ptr [esi-10h]  +
call __aulldiv  +
mov dword ptr [ebp+var_11EC] eax +
push 100h  +
lea eax [ebp+var_154] +
push eax  +
push esi  +
lea eax [esi-4] +
push eax  +
movzx eax word ptr [esi-8] +
push eax  +
mov dword ptr [ebp+var_11EC+4] edx +
call sub_103426E  +
mov eax [ebp-11D0h] +
mov eax [eax] +
cmp eax edi +
jz loc_1038CE6  +
mov ecx [esi-20h] +
fild  dword ptr [esi-20h] +
test ecx ecx +
jge loc_1038CC4  +
fadd  ds:dbl_10018C0 +
mov ecx eax +
mov [ebp-11C8h] ecx +
fild  dword ptr [ebp-11C8h] +
test ecx ecx +
jge loc_1038CDC  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul  ds:dbl_1001648 +
jmp loc_1038CE8  +
fldz   +
cmp [ebp+var_11E4] edi +
jz loc_1038D20  +
mov [ebp-11C8h] eax +
fild  dword ptr [ebp-11C8h] +
test eax eax +
jge loc_1038D06  +
fadd  ds:dbl_10018C0 +
mov eax [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test eax eax +
jge loc_1038D1C  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
jmp loc_1038D22  +
fldz   +
push edi  +
push 2710h  +
push dword ptr [ebp+var_11EC+4]  +
push dword ptr [ebp+var_11EC]  +
call __aulldiv  +
fxch  st(1) +
push edx  +
push eax  +
sub esp 10h +
fstp  [esp+28B0h+var_28A8] +
lea eax [ebp+var_154] +
fstp  [esp+28B0h+var_28B0] +
push eax  +
push offset aItemDataNameIp  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add dword ptr [ebp-11D0h] 38h +
add esp 24h +
inc dword ptr [ebp+var_1204+4]  +
cmp dword ptr [ebp+var_1204+4] 14h +
jb loc_1038C5B  +
push [ebp+lpBuffer]  +
push offset aTable_0  +
call sub_1023CCF  +
push ebx  +
push ebx  +
push offset aTableNameCli_0  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 10h +
xor esi esi +
cmp [ebp+esi+var_CB8] edi +
jz loc_1038EAE  +
push edi  +
push [ebp+esi+var_CB8]  +
push [ebp+esi+var_CA8]  +
push [ebp+esi+var_CAC]  +
call __aulldiv  +
mov dword ptr [ebp+var_11EC] eax +
push 100h  +
lea eax [ebp+var_154] +
push eax  +
lea eax [ebp+esi+var_119C] +
push eax  +
lea eax [ebp+esi+var_11A0] +
push eax  +
movzx eax [ebp+esi+var_11A4] +
push eax  +
mov dword ptr [ebp+var_11EC+4] edx +
call sub_103426E  +
mov eax [ebp+esi+var_CBC] +
fild  [ebp+esi+var_CBC] +
test eax eax +
jge loc_1038E18  +
fadd  ds:dbl_10018C0 +
mov eax [ebp+esi+var_CB8] +
fild  [ebp+esi+var_CB8] +
test eax eax +
jge loc_1038E30  +
fadd  ds:dbl_10018C0 +
fdiv st(1) st +
fxch  st(1) +
fmul  ds:dbl_1001648 +
cmp [ebp+var_11E4] edi +
jz loc_1038E5C  +
mov eax [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test eax eax +
jge loc_1038E58  +
fadd  ds:dbl_10018C0 +
fdivp st(2) st +
jmp loc_1038E62  +
fstp  st(1) +
fldz   +
fxch  st(1) +
push edi  +
push 2710h  +
push dword ptr [ebp+var_11EC+4]  +
push dword ptr [ebp+var_11EC]  +
call __aulldiv  +
push edx  +
push eax  +
sub esp 10h +
fstp  [esp+28B0h+var_28A8] +
lea eax [ebp+var_154] +
fstp  [esp+28B0h+var_28B0] +
push eax  +
push offset aItemDataNameIp  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esi 38h +
add esp 24h +
cmp esi 460h +
jb loc_1038DA2  +
push [ebp+lpBuffer]  +
push offset aTable_0  +
call sub_1023CCF  +
mov esi 5A0h +
push esi  +
lea eax [ebp+var_288C] +
push edi  +
push eax  +
call memset  +
push esi  +
lea eax [ebp+var_1D4C] +
push edi  +
push eax  +
call memset  +
push esi  +
lea eax [ebp+var_17AC] +
push edi  +
push eax  +
call memset  +
push esi  +
lea eax [ebp+var_22EC] +
push edi  +
push eax  +
call memset  +
add esp 30h +
jmp loc_10391BF  +
cmp [eax+20h] edi +
jz loc_10391AC  +
push 48h  +
lea eax [ebp+var_4C] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
xor edx edx +
lea eax [ebp+var_288C] +
mov dword ptr [ebp-11C8h] 14h +
cmp edx edi +
jz loc_1038F58  +
cmp [ebp+var_2C] edi +
jz loc_1038F8B  +
push 12h  +
pop ecx  +
mov esi eax +
lea edi [ebp+var_59C] +
movs   +
push 12h  +
pop ecx  +
lea esi [ebp+var_4C] +
mov edi eax +
movs   +
lea esi [ebp+var_59C] +
lea edi [ebp+var_4C] +
jmp loc_1038F7F  +
mov ecx [eax+20h] +
mov esi [ebp-11F8h] +
cmp ecx edi +
jz loc_1038F7A  +
cmp [esi+20h] ecx +
jbe loc_1038F8B  +
push 12h  +
pop ecx  +
mov esi eax +
lea edi [ebp+var_4C] +
movs   +
mov esi [ebp-11F8h] +
xor edx edx +
inc edx  +
mov edi eax +
push 12h  +
pop ecx  +
movs   +
xor edi edi +
mov ebx offset a0_000 +
add eax 48h +
dec dword ptr [ebp-11C8h]  +
jnz loc_1038F2D  +
mov eax [ebp-11F8h] +
push edi  +
push dword ptr [eax+20h]  +
push dword ptr [eax+2Ch]  +
push dword ptr [eax+28h]  +
call __aulldiv  +
push 48h  +
mov dword ptr [ebp+var_11EC] eax +
lea eax [ebp+var_4C] +
push edi  +
push eax  +
mov dword ptr [ebp+var_11EC+4] edx +
call memset  +
lea ecx [ebp+var_1D4C] +
add esp 0Ch +
mov [ebp-11D0h] edi +
mov dword ptr [ebp+var_11DC+4] ecx +
mov dword ptr [ebp-11C8h] 14h +
cmp [ebp-11D0h] edi +
jz loc_103901D  +
cmp [ebp+var_2C] edi +
jz loc_1039073  +
mov esi dword ptr [ebp+var_11DC+4] +
push 12h  +
pop ecx  +
lea edi [ebp+var_59C] +
movs   +
mov edi dword ptr [ebp+var_11DC+4] +
push 12h  +
pop ecx  +
lea esi [ebp+var_4C] +
movs   +
lea esi [ebp+var_59C] +
lea edi [ebp+var_4C] +
jmp loc_1039067  +
mov eax [ecx+20h] +
cmp eax edi +
jz loc_1039051  +
push edi  +
push eax  +
push dword ptr [ecx+2Ch]  +
push dword ptr [ecx+28h]  +
call __aulldiv  +
cmp dword ptr [ebp+var_11EC+4] edx +
jb loc_1039073  +
ja loc_1039043  +
cmp dword ptr [ebp+var_11EC] eax +
jbe loc_1039073  +
mov esi dword ptr [ebp+var_11DC+4] +
push 12h  +
pop ecx  +
lea edi [ebp+var_4C] +
movs   +
mov edi dword ptr [ebp+var_11DC+4] +
mov esi [ebp-11F8h] +
mov dword ptr [ebp-11D0h] 1 +
push 12h  +
pop ecx  +
movs   +
xor edi edi +
mov ebx offset a0_000 +
mov ecx dword ptr [ebp+var_11DC+4] +
add ecx 48h +
dec dword ptr [ebp-11C8h]  +
mov dword ptr [ebp+var_11DC+4] ecx +
jnz loc_1038FE2  +
push 48h  +
lea eax [ebp+var_4C] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
xor edx edx +
lea eax [ebp+var_17AC] +
mov dword ptr [ebp-11C8h] 14h +
cmp edx edi +
jz loc_10390DA  +
cmp [ebp+var_2C] edi +
jz loc_1039116  +
push 12h  +
pop ecx  +
mov esi eax +
lea edi [ebp+var_59C] +
movs   +
push 12h  +
pop ecx  +
lea esi [ebp+var_4C] +
mov edi eax +
movs   +
lea esi [ebp+var_59C] +
lea edi [ebp+var_4C] +
jmp loc_103910A  +
cmp [eax+20h] edi +
jz loc_10390FF  +
mov ecx [ebp-11F8h] +
mov esi [ecx+10h] +
add esi [ecx+0Ch] +
mov ecx [eax+0Ch] +
add ecx [eax+10h] +
cmp esi ecx +
jbe loc_1039116  +
push 12h  +
pop ecx  +
mov esi eax +
lea edi [ebp+var_4C] +
movs   +
mov esi [ebp-11F8h] +
xor edx edx +
inc edx  +
mov edi eax +
push 12h  +
pop ecx  +
movs   +
xor edi edi +
mov ebx offset a0_000 +
add eax 48h +
dec dword ptr [ebp-11C8h]  +
jnz loc_10390AF  +
push 48h  +
lea eax [ebp+var_4C] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
xor edx edx +
lea eax [ebp+var_22EC] +
mov dword ptr [ebp-11C8h] 14h +
cmp edx edi +
jz loc_103916D  +
cmp [ebp+var_2C] edi +
jz loc_10391A1  +
push 12h  +
pop ecx  +
mov esi eax +
lea edi [ebp+var_59C] +
movs   +
push 12h  +
pop ecx  +
lea esi [ebp+var_4C] +
mov edi eax +
movs   +
lea esi [ebp+var_59C] +
lea edi [ebp+var_4C] +
jmp loc_1039195  +
cmp [eax+20h] edi +
jz loc_103918A  +
mov ecx [ebp-11F8h] +
mov ecx [ecx+24h] +
cmp ecx [eax+24h] +
jbe loc_10391A1  +
push 12h  +
pop ecx  +
mov esi eax +
lea edi [ebp+var_4C] +
movs   +
mov esi [ebp-11F8h] +
xor edx edx +
inc edx  +
mov edi eax +
push 12h  +
pop ecx  +
movs   +
xor edi edi +
mov ebx offset a0_000 +
add eax 48h +
dec dword ptr [ebp-11C8h]  +
jnz loc_1039142  +
push dword ptr [ebp-11F8h]  +
push edi  +
push hHeap  +
call ds:HeapFree  +
call sub_10225FF  +
mov [ebp-11F8h] eax +
cmp eax edi +
jnz loc_1038F03  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aTableNameSiter  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 1Ch +
mov dword ptr [ebp+var_1204+4] edi +
lea esi [ebp+var_286C] +
cmp [esi] edi +
jz loc_10392F0  +
push edi  +
push dword ptr [esi]  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
call __aulldiv  +
fild  dword ptr [esi+18h] +
mov ecx [esi+18h] +
test ecx ecx +
jge loc_103921C  +
fadd  ds:dbl_10018C0 +
mov ecx [esi] +
fild  dword ptr [esi] +
test ecx ecx +
jge loc_103922A  +
fadd  ds:dbl_10018C0 +
fdiv st(1) st +
mov ecx [esi+14h] +
fld  ds:dbl_1001648 +
fmul st(2) st +
fild  dword ptr [esi+14h] +
test ecx ecx +
jge loc_1039244  +
fadd  ds:dbl_10018C0 +
fdiv st st(2) +
mov ecx [esi+10h] +
fmul st st(1) +
fild  dword ptr [esi+10h] +
test ecx ecx +
jge loc_1039258  +
fadd  ds:dbl_10018C0 +
fdiv st st(3) +
mov ecx [esi-4] +
fmul st st(2) +
fild  dword ptr [esi-4] +
test ecx ecx +
jge loc_103926C  +
fadd  ds:dbl_10018C0 +
fdiv st st(4) +
fmulp st(3) st +
cmp [ebp+var_11E4] edi +
jz loc_1039292  +
mov ecx [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test ecx ecx +
jge loc_103928E  +
fadd  ds:dbl_10018C0 +
fdivp st(4) st +
jmp loc_1039298  +
fstp  st(3) +
fldz   +
fxch  st(3) +
sub esp 20h +
fxch  st(4) +
fstp  [esp+28B8h+var_28A0] +
fstp  [esp+28B8h+var_28A8] +
fxch  st(2) +
fstp  [esp+28B8h+var_28B0] +
fxch  st(1) +
fstp  [esp+28B8h+var_28B8] +
push edi  +
push 2710h  +
push edx  +
push eax  +
call __aulldiv  +
push edx  +
push eax  +
push ecx  +
push ecx  +
fstp  [esp+28C8h+var_28C8] +
push dword ptr [esi-18h]  +
push offset aItemDataNameSi  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 3Ch +
inc dword ptr [ebp+var_1204+4]  +
add esi 48h +
cmp dword ptr [ebp+var_1204+4] 14h +
jb loc_10391F6  +
push [ebp+lpBuffer]  +
push offset aTable_0  +
call sub_1023CCF  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aTableNameSit_0  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 1Ch +
mov dword ptr [ebp+var_1204+4] edi +
lea esi [ebp+var_1D2C] +
cmp [esi] edi +
jz loc_103941E  +
push edi  +
push dword ptr [esi]  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
call __aulldiv  +
fild  dword ptr [esi+18h] +
mov ecx [esi+18h] +
test ecx ecx +
jge loc_103934A  +
fadd  ds:dbl_10018C0 +
mov ecx [esi] +
fild  dword ptr [esi] +
test ecx ecx +
jge loc_1039358  +
fadd  ds:dbl_10018C0 +
fdiv st(1) st +
mov ecx [esi+14h] +
fld  ds:dbl_1001648 +
fmul st(2) st +
fild  dword ptr [esi+14h] +
test ecx ecx +
jge loc_1039372  +
fadd  ds:dbl_10018C0 +
fdiv st st(2) +
mov ecx [esi+10h] +
fmul st st(1) +
fild  dword ptr [esi+10h] +
test ecx ecx +
jge loc_1039386  +
fadd  ds:dbl_10018C0 +
fdiv st st(3) +
mov ecx [esi-4] +
fmul st st(2) +
fild  dword ptr [esi-4] +
test ecx ecx +
jge loc_103939A  +
fadd  ds:dbl_10018C0 +
fdiv st st(4) +
fmulp st(3) st +
cmp [ebp+var_11E4] edi +
jz loc_10393C0  +
mov ecx [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test ecx ecx +
jge loc_10393BC  +
fadd  ds:dbl_10018C0 +
fdivp st(4) st +
jmp loc_10393C6  +
fstp  st(3) +
fldz   +
fxch  st(3) +
sub esp 20h +
fxch  st(4) +
fstp  [esp+28B8h+var_28A0] +
fstp  [esp+28B8h+var_28A8] +
fxch  st(2) +
fstp  [esp+28B8h+var_28B0] +
fxch  st(1) +
fstp  [esp+28B8h+var_28B8] +
push edi  +
push 2710h  +
push edx  +
push eax  +
call __aulldiv  +
push edx  +
push eax  +
push ecx  +
push ecx  +
fstp  [esp+28C8h+var_28C8] +
push dword ptr [esi-18h]  +
push offset aItemDataNameSi  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 3Ch +
inc dword ptr [ebp+var_1204+4]  +
add esi 48h +
cmp dword ptr [ebp+var_1204+4] 14h +
jb loc_1039324  +
push [ebp+lpBuffer]  +
push offset aTable_0  +
call sub_1023CCF  +
cmp [ebp+var_120C] edi +
jz loc_1039597  +
push ebx  +
push ebx  +
push ebx  +
push offset aTableNameSitec  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 14h +
mov dword ptr [ebp+var_1204+4] edi +
lea esi [ebp+var_178C] +
cmp [esi] edi +
jz loc_1039587  +
push edi  +
push dword ptr [esi]  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
call __aulldiv  +
mov dword ptr [ebp+var_11EC] eax +
mov dword ptr [ebp+var_11EC+4] edx +
cmp [ebp+var_1208] edi +
jz loc_10394C8  +
mov eax [esi-14h] +
fild  dword ptr [esi-14h] +
test eax eax +
jge loc_1039496  +
fadd  ds:dbl_10018C0 +
mov eax [esi-10h] +
fild  dword ptr [esi-10h] +
test eax eax +
jge loc_10394A6  +
fadd  ds:dbl_10018C0 +
mov eax [ebp+var_1208] +
faddp st(1) st +
fild  [ebp+var_1208] +
test eax eax +
jge loc_10394BE  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fmul  ds:dbl_1001648 +
jmp loc_10394CA  +
fldz   +
mov eax [esi-14h] +
fild  dword ptr [esi-4] +
add eax [esi-10h] +
mov ecx [esi] +
xor edx edx +
div  ecx +
mov edx [esi-4] +
test edx edx +
jge loc_10394E6  +
fadd  ds:dbl_10018C0 +
mov [ebp-11C8h] ecx +
fild  dword ptr [ebp-11C8h] +
test ecx ecx +
jge loc_10394FC  +
fadd  ds:dbl_10018C0 +
fdiv st(1) st +
fxch  st(1) +
fmul  ds:dbl_1001648 +
cmp [ebp+var_11E4] edi +
jz loc_1039528  +
mov ecx [ebp+var_11E4] +
fild  [ebp+var_11E4] +
test ecx ecx +
jge loc_1039524  +
fadd  ds:dbl_10018C0 +
fdivp st(2) st +
jmp loc_103952E  +
fstp  st(1) +
fldz   +
fxch  st(1) +
push ecx  +
fxch  st(2) +
push ecx  +
fstp  [esp+28A0h+var_28A0] +
push eax  +
push edi  +
push 2710h  +
push dword ptr [ebp+var_11EC+4]  +
push dword ptr [ebp+var_11EC]  +
call __aulldiv  +
fxch  st(1) +
push edx  +
push eax  +
sub esp 10h +
fstp  [esp+28BCh+var_28B8+4] +
fstp  [esp+28BCh+var_28C0+4] +
push dword ptr [esi-18h]  +
push offset aItemDataNam_15  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 30h +
inc dword ptr [ebp+var_1204+4]  +
add esi 48h +
cmp dword ptr [ebp+var_1204+4] 14h +
jb loc_103945C  +
push [ebp+lpBuffer]  +
push offset aTable_0  +
call sub_1023CCF  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push offset aTableNameSiteb  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 1Ch +
xor ebx ebx +
lea esi [ebp+var_22CC] +
mov eax [esi] +
cmp eax edi +
jz loc_10396A7  +
mov ecx [esi+18h] +
fild  dword ptr [esi+18h] +
test ecx ecx +
jge loc_10395D1  +
fadd  ds:dbl_10018C0 +
mov [ebp-11C8h] eax +
fild  dword ptr [ebp-11C8h] +
test eax eax +
jge loc_10395E7  +
fadd  ds:dbl_10018C0 +
fdiv st(1) st +
mov eax [esi+14h] +
fld  ds:dbl_1001648 +
fmul st(2) st +
fild  dword ptr [esi+14h] +
test eax eax +
jge loc_1039601  +
fadd  ds:dbl_10018C0 +
fdiv st st(2) +
mov eax [esi+10h] +
fmul st st(1) +
fild  dword ptr [esi+10h] +
test eax eax +
jge loc_1039615  +
fadd  ds:dbl_10018C0 +
fdiv st st(3) +
mov eax [esi-4] +
fmul st st(2) +
fild  dword ptr [esi-4] +
test eax eax +
jge loc_1039629  +
fadd  ds:dbl_10018C0 +
fdiv st st(4) +
mov ecx [ebp+var_11E4] +
fmulp st(3) st +
cmp ecx edi +
jz loc_1039640  +
mov eax [esi+4] +
xor edx edx +
div  ecx +
jmp loc_1039642  +
xor eax eax +
cmp ecx edi +
jz loc_1039660  +
mov [ebp-11C8h] ecx +
fild  dword ptr [ebp-11C8h] +
test ecx ecx +
jge loc_103965C  +
fadd  ds:dbl_10018C0 +
fdivp st(4) st +
jmp loc_1039666  +
fstp  st(3) +
fldz   +
fxch  st(3) +
sub esp 20h +
fxch  st(4) +
fstp  [esp+28B8h+var_28A0] +
fstp  [esp+28B8h+var_28A8] +
fxch  st(2) +
fstp  [esp+28B8h+var_28B0] +
fxch  st(1) +
fstp  [esp+28B8h+var_28B8] +
push eax  +
push ecx  +
push ecx  +
fstp  [esp+28C4h+var_28C8+4] +
push dword ptr [esi-18h]  +
push offset aItemDataNam_16  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 38h +
inc ebx  +
add esi 48h +
cmp ebx 14h +
jb loc_10395B7  +
push [ebp+lpBuffer]  +
push offset aTableSection  +
call sub_1023CCF  +
mov eax dword_1057944 +
cmp eax edi +
jz loc_10396CE  +
push eax  +
push edi  +
push hHeap  +
call ds:HeapFree  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 10E0h +
call __alloca_probe  +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax dword_10566D8 +
push ebx  +
add eax 330h +
xor ebx ebx +
cmp [eax] ebx +
jz loc_1039BFD  +
cmp dword_105791C ebx +
jz loc_1039BFD  +
push offset aW_0  +
push dword ptr [eax]  +
call ds:_wfopen  +
pop ecx  +
pop ecx  +
mov [ebp+var_1088] eax +
cmp eax ebx +
jz loc_1039BFD  +
push esi  +
mov esi ds:fwprintf +
push edi  +
push offset aFilesProcessed  +
push eax  +
call esi  +
mov eax dword_10566D8 +
pop ecx  +
pop ecx  +
cmp [eax+4] ebx +
jbe loc_103977B  +
push 10h  +
pop edi  +
push dword ptr [edi+eax]  +
push offset aS_2  +
push [ebp+var_1088]  +
call esi  +
mov eax dword_10566D8 +
add esp 0Ch +
inc ebx  +
add edi 4 +
cmp ebx [eax+4] +
jb loc_103975A  +
mov eax SystemTimeAsFileTime.dwLowDateTime +
mov ecx SystemTimeAsFileTime.dwHighDateTime +
mov ebx ds:FileTimeToSystemTime +
mov [ebp+FileTime.dwLowDateTime] eax +
lea eax [ebp+UniversalTime] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
mov [ebp+FileTime.dwHighDateTime] ecx +
call ebx  +
test eax eax +
jz loc_1039803  +
cmp [ebp+UniversalTime.wMonth] 0Ch +
ja loc_1039803  +
lea eax [ebp+Date] +
push eax  +
lea eax [ebp+UniversalTime] +
push eax  +
push 0  +
call ds:SystemTimeToTzSpecificLocalTime  +
test eax eax +
jz loc_10397FB  +
cmp [ebp+Date.wMonth] 0Ch +
ja loc_10397FB  +
mov edi 400h +
push edi  +
lea eax [ebp+DateStr] +
push eax  +
push 0  +
lea eax [ebp+Date] +
push eax  +
push 2  +
push edi  +
call ds:GetDateFormatW  +
jmp loc_103981D  +
lea edi [ebp+Date] +
jmp loc_1039809  +
lea edi [ebp+UniversalTime] +
xor eax eax +
stos   +
stos   +
stos   +
stos   +
xor eax eax +
mov edi 400h +
mov [ebp+DateStr] ax +
push dword_1057918  +
mov eax dword_105791C +
mov ecx dword_1057920 +
add ecx eax +
push ecx  +
push dword_10566E0  +
push offset aTotalBuffersPr  +
push [ebp+var_1088]  +
call esi  +
lea eax [ebp+DateStr] +
push eax  +
push offset aStartTimeWs  +
push [ebp+var_1088]  +
call esi  +
mov eax stru_1079A28.dwLowDateTime +
mov ecx stru_1079A28.dwHighDateTime +
mov [ebp+FileTime.dwLowDateTime] eax +
add esp 20h +
lea eax [ebp+SystemTime] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
mov [ebp+FileTime.dwHighDateTime] ecx +
call ebx  +
test eax eax +
jz loc_10398D8  +
cmp [ebp+UniversalTime.wMonth] 0Ch +
ja loc_10398D8  +
lea eax [ebp+LocalTime] +
push eax  +
lea eax [ebp+SystemTime] +
push eax  +
push 0  +
call ds:SystemTimeToTzSpecificLocalTime  +
test eax eax +
jz loc_10398D0  +
cmp [ebp+LocalTime.wMonth] 0Ch +
ja loc_10398D0  +
push edi  +
lea eax [ebp+DateStr] +
push eax  +
push 0  +
lea eax [ebp+LocalTime] +
push eax  +
push 2  +
push edi  +
call ds:GetDateFormatW  +
jmp loc_10398ED  +
lea edi [ebp+LocalTime] +
jmp loc_10398DE  +
lea edi [ebp+SystemTime] +
xor eax eax +
stos   +
stos   +
stos   +
stos   +
xor eax eax +
mov [ebp+DateStr] ax +
mov eax stru_1079A28.dwLowDateTime +
sub eax SystemTimeAsFileTime.dwLowDateTime +
mov ecx stru_1079A28.dwHighDateTime +
sbb ecx SystemTimeAsFileTime.dwHighDateTime +
push 0  +
push 989680h  +
push ecx  +
push eax  +
mov dword_1057700 eax +
mov dword_1057704 ecx +
call __alldiv  +
push edx  +
push eax  +
lea eax [ebp+DateStr] +
push eax  +
push offset aEndTimeWsElaps  +
push [ebp+var_1088]  +
call esi  +
push offset aGuid  +
push offset aVersion_0  +
push offset aOpcode_0  +
push offset aTask_0  +
push offset aEventName_0  +
push offset aEventCount  +
push offset asc_100FDB8  +
push [ebp+var_1088]  +
call esi  +
mov ebx dword_1079AD8 +
add esp 34h +
jmp loc_1039A70  +
push 800h  +
lea eax [ebp+var_1084] +
push 0  +
push eax  +
call memset  +
mov edi ebx +
mov ebx [ebx] +
add esp 0Ch +
cmp dword ptr [edi+14h] 0 +
jbe loc_1039A70  +
and [ebp+var_108C] 0 +
lea eax [edi+1Ch] +
push eax  +
push 40h  +
lea eax [ebp+var_84] +
push eax  +
call sub_1034A70  +
mov [ebp+var_1094] eax +
mov eax [edi+10h] +
test eax eax +
jz loc_10399C8  +
push eax  +
push 400h  +
lea eax [ebp+var_1084] +
push eax  +
call sub_101F55E  +
lea ecx [edi+82Ch] +
mov edi [ecx] +
xor eax eax +
mov [ebp+var_1098] ecx +
cmp ecx edi +
jz loc_1039A70  +
jmp loc_10399E8  +
mov edi [ebp+var_1090] +
mov ecx [edi] +
mov [ebp+var_1090] ecx +
mov ecx [ebp+var_108C] +
test ecx ecx +
jz loc_1039A36  +
mov dx [ecx+16h] +
cmp dx [edi+16h] +
jnz loc_1039A19  +
mov dl [ecx+15h] +
cmp dl [edi+15h] +
jnz loc_1039A19  +
mov dl [ecx+12h] +
cmp dl [edi+12h] +
jnz loc_1039A19  +
add eax [edi+8] +
jmp loc_1039A41  +
push dword ptr [edi+24h]  +
push eax  +
push [ebp+var_1094]  +
lea eax [ebp+var_1084] +
push eax  +
push ecx  +
push [ebp+var_1088]  +
call sub_10340D9  +
mov eax [edi+8] +
mov [ebp+var_108C] edi +
mov ecx edi +
mov edx [ebp+var_1090] +
cmp [ebp+var_1098] edx +
jnz loc_10399E2  +
test ecx ecx +
jz loc_1039A70  +
push dword ptr [edi+24h]  +
push eax  +
push [ebp+var_1094]  +
lea eax [ebp+var_1084] +
push eax  +
push ecx  +
push [ebp+var_1088]  +
call sub_10340D9  +
cmp ebx offset dword_1079AD8 +
jnz loc_103996C  +
push offset asc_100FCB8  +
push [ebp+var_1088]  +
call esi  +
cmp byte_1079A5B 0 +
pop ecx  +
pop ecx  +
jz loc_1039BEE  +
push offset aGuid  +
push offset aVersion_0  +
push offset aEventId  +
push offset aEventName_0  +
push offset aEventCount  +
push offset asc_100FAB0  +
push [ebp+var_1088]  +
call esi  +
mov edi dword_1079AD8 +
add esp 1Ch +
cmp edi offset dword_1079AD8 +
jz loc_1039BDF  +
jmp loc_1039ADB  +
mov edi [ebp+var_1098] +
push 800h  +
lea eax [ebp+var_1084] +
push 0  +
push eax  +
call memset  +
mov eax [edi] +
add esp 0Ch +
cmp dword ptr [edi+14h] 0 +
mov [ebp+var_1098] eax +
jbe loc_1039BCF  +
and [ebp+var_108C] 0 +
lea eax [edi+1Ch] +
push eax  +
push 40h  +
lea eax [ebp+var_84] +
push eax  +
call sub_1034A70  +
mov [ebp+var_1094] eax +
mov eax [edi+10h] +
test eax eax +
jz loc_1039B3B  +
push eax  +
push 400h  +
lea eax [ebp+var_1084] +
push eax  +
call sub_101F55E  +
push dword ptr [edi+834h]  +
lea ebx [edi+82Ch] +
push ebx  +
mov [ebp+var_1090] ebx +
call sub_1034093  +
mov ebx [ebx] +
xor eax eax +
cmp [ebp+var_1090] ebx +
jz loc_1039BCF  +
mov ecx [ebp+var_108C] +
mov edi ebx +
mov ebx [ebx] +
test ecx ecx +
jz loc_1039B9E  +
mov dx [ecx+10h] +
cmp dx [edi+10h] +
jnz loc_1039B84  +
mov dl [ecx+12h] +
cmp dl [edi+12h] +
jnz loc_1039B84  +
add eax [edi+8] +
jmp loc_1039BA9  +
push eax  +
push [ebp+var_1094]  +
lea eax [ebp+var_1084] +
push eax  +
push ecx  +
push [ebp+var_1088]  +
call sub_1034147  +
mov eax [edi+8] +
mov [ebp+var_108C] edi +
mov ecx edi +
cmp [ebp+var_1090] ebx +
jnz loc_1039B5F  +
test ecx ecx +
jz loc_1039BCF  +
push eax  +
push [ebp+var_1094]  +
lea eax [ebp+var_1084] +
push eax  +
push ecx  +
push [ebp+var_1088]  +
call sub_1034147  +
cmp [ebp+var_1098] offset dword_1079AD8 +
jnz loc_1039AD5  +
push offset asc_100F9D0  +
push [ebp+var_1088]  +
call esi  +
pop ecx  +
pop ecx  +
push [ebp+var_1088]  +
call ds:fclose  +
pop ecx  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 8B4h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
mov edi [ebp+arg_0] +
push 800h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
test eax eax +
jz loc_103A443  +
push ebx  +
push esi  +
push edi  +
push offset aSectionKey90_0  +
call sub_1023CCF  +
push edi  +
push offset aTableNameCli_1  +
call sub_1023CCF  +
push edi  +
mov ebx offset aItem_2 +
push ebx  +
call sub_1023CCF  +
mov eax lpMem +
test eax eax +
jz loc_1039C87  +
push eax  +
push offset aDataNameComput  +
push edi  +
call sub_1024264  +
add esp 0Ch +
jmp loc_1039C92  +
push edi  +
push offset aDataNameComp_0  +
call sub_1023CCF  +
mov eax dword_1079AA8 +
push eax  +
test eax eax +
jbe loc_1039CA3  +
push offset aDataNameBuildD  +
jmp loc_1039CA8  +
push offset aDataNameBuildV  +
push edi  +
call sub_1024264  +
mov eax dword_1079A94 +
add esp 0Ch +
push eax  +
test eax eax +
jbe loc_1039CC2  +
push offset aDataNameProces  +
jmp loc_1039CC7  +
push offset aDataNameProc_0  +
push edi  +
call sub_1024264  +
mov eax dword_1079A98 +
add esp 0Ch +
push eax  +
test eax eax +
jbe loc_1039CE1  +
push offset aDataNameClockU  +
jmp loc_1039CE6  +
push offset aDataNameCloc_0  +
push edi  +
call sub_1024264  +
mov eax dword_1079A9C +
add esp 0Ch +
push eax  +
test eax eax +
jbe loc_1039D00  +
push offset aDataNameMemory  +
jmp loc_1039D05  +
push offset aDataNameMemo_0  +
push edi  +
call sub_1024264  +
mov eax dword_10566D8 +
mov eax [eax+680h] +
add esp 0Ch +
push eax  +
test eax eax +
jbe loc_1039D25  +
push offset aDataNameArchit  +
jmp loc_1039D2A  +
push offset aDataNameArch_0  +
push edi  +
call sub_1024264  +
add esp 0Ch +
push edi  +
mov esi offset aItem_1 +
push esi  +
call sub_1023CCF  +
push edi  +
push offset aTable  +
call sub_1023CCF  +
push edi  +
push offset aTableNameColle  +
call sub_1023CCF  +
push edi  +
push ebx  +
call sub_1023CCF  +
cmp dword_10566D8 0 +
mov ebx 400h +
jz loc_1039E93  +
cmp byte_1079A5A 0 +
setz al  +
mov byte ptr [ebp+var_894] al +
push [ebp+var_894]  +
push SystemTimeAsFileTime.dwHighDateTime  +
push SystemTimeAsFileTime.dwLowDateTime  +
push offset aHeaderCollecte  +
push offset aStart  +
push ebx  +
push [ebp+lpMem]  +
call sub_103451C  +
push [ebp+lpMem]  +
push edi  +
call sub_1024264  +
pop ecx  +
pop ecx  +
push [ebp+var_894]  +
push stru_1079A28.dwHighDateTime  +
push stru_1079A28.dwLowDateTime  +
push 0  +
push offset aEnd  +
push ebx  +
push [ebp+lpMem]  +
call sub_103451C  +
push [ebp+lpMem]  +
push edi  +
call sub_1024264  +
mov eax stru_1079A28.dwLowDateTime +
sub eax SystemTimeAsFileTime.dwLowDateTime +
pop ecx  +
pop ecx  +
mov ecx stru_1079A28.dwHighDateTime +
sbb ecx SystemTimeAsFileTime.dwHighDateTime +
push 0  +
push 989680h  +
push ecx  +
push eax  +
call __aulldiv  +
push edx  +
push eax  +
push offset aDataNameDurati  +
push edi  +
call sub_1024264  +
mov eax dword_10566D8 +
add esp 10h +
cmp dword ptr [eax+4] 0 +
ja loc_1039E2D  +
cmp dword ptr [eax+8] 0 +
jbe loc_1039E93  +
push dword_1057918  +
push dword_105791C  +
push dword_10566E0  +
push offset aDataNameBuffer  +
push edi  +
call sub_1024264  +
mov eax dword_1057920 +
add esp 14h +
push eax  +
test eax eax +
jbe loc_1039E5E  +
push offset aDataNameSkippe  +
jmp loc_1039E63  +
push offset aDataNameSkip_0  +
push edi  +
call sub_1024264  +
mov eax dword_10566D8 +
add esp 0Ch +
cmp byte ptr [eax+5D1h] 0 +
mov eax offset aYes +
jnz loc_1039E84  +
mov eax offset aNo +
push eax  +
push offset aDataNameUsetim  +
push edi  +
call sub_1024264  +
add esp 0Ch +
push edi  +
push esi  +
call sub_1023CCF  +
push edi  +
push offset aTable  +
call sub_1023CCF  +
cmp dword_10566D8 0 +
mov [ebp+var_890] 1 +
jz loc_103A042  +
mov esi dword_1079AF0 +
cmp esi offset dword_1079AF0 +
jz loc_103A042  +
jmp loc_1039ED6  +
mov esi [ebp+var_888] +
cmp [ebp+var_890] 0 +
mov eax [esi] +
mov [ebp+var_888] eax +
jz loc_1039EF9  +
push edi  +
push offset aTableNameFiles  +
call sub_1023CCF  +
and [ebp+var_890] 0 +
push edi  +
push offset aItem_2  +
call sub_1023CCF  +
push edi  +
push offset aDataNameFile  +
call sub_1023CCF  +
mov eax [esi+18h] +
test eax eax +
jnz loc_1039F1B  +
mov eax offset asc_1003E24 +
push eax  +
push 0  +
push 1  +
push edi  +
call sub_101D200  +
push edi  +
push offset aData  +
call sub_1023CCF  +
push edi  +
push offset aDataNameLogger  +
call sub_1023CCF  +
mov eax [esi+1Ch] +
test eax eax +
jnz loc_1039F48  +
mov eax offset asc_1003E24 +
push eax  +
push 0  +
push 1  +
push edi  +
call sub_101D200  +
push edi  +
push offset aData  +
call sub_1023CCF  +
mov eax [esi+8] +
or eax [esi+0Ch] +
jnz loc_1039F76  +
mov eax SystemTimeAsFileTime.dwLowDateTime +
mov [esi+8] eax +
mov eax SystemTimeAsFileTime.dwHighDateTime +
mov [esi+0Ch] eax +
mov eax [esi+10h] +
or eax [esi+14h] +
jnz loc_1039F8E  +
mov eax stru_1079A28.dwLowDateTime +
mov [esi+10h] eax +
mov eax stru_1079A28.dwHighDateTime +
mov [esi+14h] eax +
push 1  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push 0  +
push offset aStart  +
push ebx  +
push [ebp+lpMem]  +
call sub_103451C  +
push [ebp+lpMem]  +
push edi  +
call sub_1024264  +
mov eax [esi+10h] +
pop ecx  +
pop ecx  +
mov ecx [esi+14h] +
mov [ebp+var_8A4] eax +
sub eax [esi+8] +
push 0  +
mov [ebp+var_8A0] ecx +
sbb ecx [esi+0Ch] +
push 989680h  +
push ecx  +
push eax  +
call __aulldiv  +
push 1  +
push [ebp+var_8A0]  +
mov esi eax +
push [ebp+var_8A4]  +
mov [ebp+var_8A8] edx +
push 0  +
push offset aEnd  +
push ebx  +
push [ebp+lpMem]  +
call sub_103451C  +
push [ebp+lpMem]  +
push edi  +
call sub_1024264  +
push [ebp+var_8A8]  +
push esi  +
push offset aDataNameFiledu  +
push edi  +
call sub_1024264  +
add esp 18h +
push edi  +
push offset aItem_1  +
call sub_1023CCF  +
cmp [ebp+var_888] offset dword_1079AF0 +
jnz loc_1039ED0  +
mov eax dword_10566D8 +
add eax 684h +
xor ecx ecx +
cmp [eax] ecx +
jz loc_103A258  +
mov eax [eax] +
mov edx [eax+24h] +
mov [ebp+var_888] edx +
mov [ebp+var_898] ecx +
cmp [eax+18h] ecx +
jbe loc_103A258  +
cmp [ebp+var_890] 0 +
jz loc_103A08B  +
push edi  +
push offset aTableNameFiles  +
call sub_1023CCF  +
and [ebp+var_890] 0 +
push edi  +
push offset aItem_2  +
call sub_1023CCF  +
push edi  +
push offset aDataNameFile  +
call sub_1023CCF  +
push [ebp+var_888]  +
push 0  +
push 1  +
push edi  +
call sub_101D200  +
push edi  +
push offset aData  +
call sub_1023CCF  +
mov esi dword_10566D8 +
mov eax [esi+684h] +
cmp dword ptr [eax+14h] 0 +
jnz loc_103A1E7  +
mov eax stru_1079A38.dwLowDateTime +
sub eax FileTime.dwLowDateTime +
mov ecx stru_1079A38.dwHighDateTime +
sbb ecx FileTime.dwHighDateTime +
push 0  +
push 989680h  +
push ecx  +
push eax  +
call __aulldiv  +
cmp byte ptr [esi+5D1h] 0 +
mov dword ptr [ebp+var_8AC] eax +
mov [ebp+var_8A8] edx +
jz loc_103A151  +
push FileTime.dwHighDateTime  +
push FileTime.dwLowDateTime  +
call sub_1031879  +
push stru_1079A38.dwHighDateTime  +
mov esi eax +
push stru_1079A38.dwLowDateTime  +
mov [ebp+var_8B0] edx +
call sub_1031879  +
mov [ebp+var_8A4] eax +
mov eax [ebp+var_8B0] +
mov [ebp+var_8A0] edx +
mov byte ptr [ebp+var_894] 1 +
jmp loc_103A17B  +
mov ecx stru_1079A38.dwLowDateTime +
mov esi FileTime.dwLowDateTime +
mov eax FileTime.dwHighDateTime +
mov [ebp+var_8A4] ecx +
mov ecx stru_1079A38.dwHighDateTime +
mov [ebp+var_8A0] ecx +
mov byte ptr [ebp+var_894] 0 +
push [ebp+var_894]  +
push eax  +
push esi  +
mov esi [ebp+lpMem] +
push 0  +
push offset aStart  +
push ebx  +
push esi  +
call sub_103451C  +
push esi  +
push edi  +
call sub_1024264  +
pop ecx  +
pop ecx  +
push [ebp+var_894]  +
push [ebp+var_8A0]  +
push [ebp+var_8A4]  +
push 0  +
push offset aEnd  +
push ebx  +
push esi  +
call sub_103451C  +
push esi  +
push edi  +
call sub_1024264  +
push [ebp+var_8A8]  +
push dword ptr [ebp+var_8AC]  +
push offset aDataNameFiledu  +
push edi  +
call sub_1024264  +
mov esi dword_10566D8 +
add esp 18h +
mov ecx [ebp+var_888] +
mov eax ecx +
lea edx [eax+2] +
mov [ebp+var_89C] edx +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_103A1F8  +
sub eax [ebp+var_89C] +
sar eax 1 +
lea eax [ecx+eax*2+2] +
mov [ebp+var_888] eax +
mov eax [esi+684h] +
mov eax [eax+18h] +
dec eax  +
cmp [ebp+var_898] eax +
jnz loc_103A22D  +
and [ebp+var_888] 0 +
push edi  +
push offset aItem_1  +
call sub_1023CCF  +
inc [ebp+var_898]  +
mov eax dword_10566D8 +
mov eax [eax+684h] +
mov ecx [ebp+var_898] +
cmp ecx [eax+18h] +
jb loc_103A070  +
cmp [ebp+var_890] 0 +
jnz loc_103A26C  +
push edi  +
push offset aTable  +
call sub_1023CCF  +
cmp dword_10566D8 0 +
mov [ebp+var_890] 1 +
jz loc_103A422  +
mov esi dword_1079AD8 +
cmp esi offset dword_1079AD8 +
jz loc_103A422  +
jmp loc_103A29D  +
mov esi [ebp+var_888] +
push 800h  +
lea eax [ebp+var_884] +
push 0  +
push eax  +
call memset  +
mov eax [esi] +
add esp 0Ch +
cmp dword ptr [esi+18h] 0 +
mov [ebp+var_894] esi +
mov [ebp+var_888] eax +
jbe loc_103A3FE  +
lea eax [esi+1Ch] +
push eax  +
push 40h  +
lea eax [ebp+var_84] +
push eax  +
call sub_1034A70  +
mov [ebp+var_898] eax +
mov eax [esi+10h] +
test eax eax +
jz loc_103A2FA  +
push eax  +
push ebx  +
lea eax [ebp+var_884] +
push eax  +
call sub_101F55E  +
jmp loc_103A303  +
xor eax eax +
mov word ptr [ebp+var_884] ax +
lea eax [esi+82Ch] +
mov esi [eax] +
cmp eax esi +
jz loc_103A3FE  +
jmp loc_103A31B  +
mov esi [ebp+var_89C] +
cmp [ebp+var_890] 0 +
mov eax [esi] +
mov [ebp+var_89C] eax +
jz loc_103A34B  +
push edi  +
push offset aTableNameEvent  +
call sub_1023CCF  +
push offset aHeaderSortFi_3  +
push edi  +
call sub_1024264  +
and [ebp+var_890] 0 +
pop ecx  +
pop ecx  +
mov edx [esi+0Ch] +
test edx edx +
jz loc_103A3E7  +
mov eax [ebp+var_894] +
movzx eax word ptr [eax+0C40h] +
test al 8 +
jnz loc_103A378  +
test eax 100h +
jz loc_103A378  +
movzx ax byte ptr [esi+15h] +
movzx eax ax +
jmp loc_103A37C  +
movzx eax word ptr [esi+10h] +
cmp word ptr [ebp+var_884] 0 +
jz loc_103A3BF  +
mov ecx [esi+20h] +
test ecx ecx +
jnz loc_103A392  +
mov ecx offset aDefault +
push edx  +
movzx edx byte ptr [esi+12h] +
push edx  +
movzx eax ax +
push eax  +
push [ebp+var_898]  +
movzx eax word ptr [esi+16h] +
push eax  +
push ecx  +
lea eax [ebp+var_884] +
push eax  +
push offset aItemDataNameEv  +
push edi  +
call sub_1024264  +
add esp 24h +
jmp loc_103A3E7  +
movzx ecx byte ptr [esi+12h] +
push edx  +
push ecx  +
movzx eax ax +
push eax  +
push [ebp+var_898]  +
movzx eax word ptr [esi+16h] +
push eax  +
movzx eax byte ptr [esi+15h] +
push eax  +
push offset aItemDataNam_17  +
push edi  +
call sub_1024264  +
add esp 20h +
mov eax [ebp+var_894] +
add eax 82Ch +
cmp eax [ebp+var_89C] +
jnz loc_103A315  +
cmp [ebp+var_888] offset dword_1079AD8 +
jnz loc_103A297  +
cmp [ebp+var_890] 0 +
jnz loc_103A422  +
push edi  +
push offset aTable  +
call sub_1023CCF  +
push edi  +
push offset aSection_0  +
call sub_1023CCF  +
push [ebp+lpMem]  +
push 0  +
push hHeap  +
call ds:HeapFree  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1028h +
call __alloca_probe  +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_8] +
push edi  +
mov edi [eax] +
mov [ebp+var_101C] eax +
mov [ebp+lpBuffer] ecx +
cmp edi eax +
jz loc_103A5BE  +
push ebx  +
mov ebx 400h +
push esi  +
mov esi edi +
push dword ptr [esi+10h]  +
mov edi [edi] +
call sub_102534C  +
mov edx eax +
test edx edx +
jz loc_103A5BC  +
mov eax [esi+20h] +
push 0  +
mov [ebp+var_1010] eax +
mov eax [esi+1Ch] +
lea ecx [ebp+var_100C] +
push ecx  +
lea ecx [ebp+var_1010] +
mov [ebp+var_100C] eax +
lea eax [esi+8] +
push ecx  +
push eax  +
mov [ebp+var_1020] eax +
call sub_1032023  +
fldz   +
mov eax [ebp+var_1010] +
fst  [ebp+var_1028] +
mov ecx [ebp+var_100C] +
fstp  [ebp+var_1018] +
add ecx eax +
jz loc_103A531  +
mov dword ptr [ebp+var_1018+4] eax +
fild  dword ptr [ebp+var_1018+4] +
test eax eax +
jge loc_103A50F  +
fadd  ds:dbl_10018C0 +
mov eax [ebp+var_100C] +
fstp  [ebp+var_1028] +
fild  [ebp+var_100C] +
test eax eax +
jge loc_103A52B  +
fadd  ds:dbl_10018C0 +
fstp  [ebp+var_1018] +
mov eax [edx+10h] +
test eax eax +
jnz loc_103A549  +
add edx 1Ch +
push edx  +
push ebx  +
lea eax [ebp+var_804] +
push eax  +
call sub_1034A70  +
push eax  +
push ebx  +
lea eax [ebp+var_1004] +
push eax  +
call sub_101F55E  +
fld  [ebp+var_1018] +
sub esp 10h +
fstp  [esp+1044h+var_103C] +
lea eax [ebp+var_1004] +
fld  [ebp+var_1028] +
fstp  [esp+1044h+var_1044] +
push dword ptr [esi+2Ch]  +
push eax  +
push offset aItemDataNameTr  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov eax [ebp+arg_4] +
add esp 20h +
push [ebp+lpBuffer]  +
inc eax  +
push eax  +
push [ebp+var_1020]  +
call sub_103A457  +
push [ebp+lpBuffer]  +
push offset aItem_0  +
call sub_1023CCF  +
cmp edi [ebp+var_101C] +
jnz loc_103A494  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_101CA75  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+var_4] 0 +
push esi  +
push edi  +
mov edi dword_1079AB0 +
mov esi offset dword_1079AB0 +
cmp edi esi +
jz loc_103A728  +
push ebx  +
cmp [ebp+var_4] 0 +
jnz loc_103A65A  +
mov eax edi +
cmp dword ptr [eax+3Ch] 0 +
mov edi [edi] +
jz loc_103A64C  +
lea ecx [ebp+var_C] +
lea ebx [eax+8] +
mov [ebp+var_8] ecx +
mov [ebp+var_C] ecx +
mov esi [ebx] +
cmp esi ebx +
jz loc_103A63C  +
push 0  +
mov eax esi +
mov esi [esi] +
lea ecx [ebp+var_C] +
push ecx  +
add eax 10h +
push eax  +
call sub_103180B  +
cmp esi ebx +
jnz loc_103A616  +
lea eax [ebp+var_C] +
cmp [ebp+var_C] eax +
jz loc_103A63C  +
mov [ebp+var_4] 1 +
push 0  +
lea eax [ebp+var_C] +
push eax  +
call sub_1021773  +
mov esi offset dword_1079AB0 +
cmp edi esi +
jnz loc_103A5F4  +
cmp [ebp+var_4] 0 +
jz loc_103A727  +
mov eax dword_10566D8 +
mov eax [eax+688h] +
inc eax  +
push eax  +
push offset aTableNameInclu  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov edi dword_1079AB0 +
add esp 0Ch +
cmp edi esi +
jz loc_103A71A  +
jmp loc_103A68A  +
mov edi [ebp+var_4] +
cmp dword ptr [edi+3Ch] 0 +
mov eax [edi] +
mov [ebp+var_4] eax +
jz loc_103A711  +
lea eax [ebp+var_C] +
lea ebx [edi+8] +
mov [ebp+var_8] eax +
mov [ebp+var_C] eax +
mov esi [ebx] +
cmp esi ebx +
jz loc_103A701  +
push 0  +
mov eax esi +
mov esi [esi] +
lea ecx [ebp+var_C] +
push ecx  +
add eax 10h +
push eax  +
call sub_103180B  +
cmp esi ebx +
jnz loc_103A6A7  +
lea eax [ebp+var_C] +
cmp [ebp+var_C] eax +
jz loc_103A701  +
mov eax [edi+34h] +
test eax eax +
jnz loc_103A6D2  +
mov eax offset aIdle +
push dword ptr [edi+3Ch]  +
push eax  +
push offset aItemDataNamePr  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 10h +
push [ebp+lpBuffer]  +
lea eax [ebp+var_C] +
push 0  +
push eax  +
call sub_103A457  +
push [ebp+lpBuffer]  +
push offset aItem_0  +
call sub_1023CCF  +
push 0  +
lea eax [ebp+var_C] +
push eax  +
call sub_1021773  +
mov esi offset dword_1079AB0 +
cmp [ebp+var_4] esi +
jnz loc_103A687  +
push [ebp+lpBuffer]  +
push offset aTable  +
call sub_1023CCF  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 850h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx stru_1079A28.dwHighDateTime +
mov [ebp+lpBuffer] eax +
mov eax stru_1079A28.dwLowDateTime +
sub eax SystemTimeAsFileTime.dwLowDateTime +
push esi  +
sbb ecx SystemTimeAsFileTime.dwHighDateTime +
mov dword ptr [ebp+var_824] eax +
mov dword ptr [ebp+var_824+4] ecx +
fild  [ebp+var_824] +
and [ebp+var_810] 0 +
push edi  +
mov edi dword_1079AB0 +
fdiv  ds:dbl_10018C8 +
mov esi offset dword_1079AB0 +
fstp  [ebp+var_848] +
cmp edi esi +
jz loc_103AB14  +
push ebx  +
cmp [ebp+var_810] 0 +
jnz loc_103A827  +
mov eax edi +
cmp dword ptr [eax+3Ch] 0 +
mov edi [edi] +
jz loc_103A816  +
lea ecx [ebp+var_80C] +
lea ebx [eax+8] +
mov [ebp+var_808] ecx +
mov [ebp+var_80C] ecx +
mov esi [ebx] +
cmp esi ebx +
jz loc_103A803  +
push 1  +
mov eax esi +
mov esi [esi] +
lea ecx [ebp+var_80C] +
push ecx  +
add eax 10h +
push eax  +
call sub_103180B  +
cmp esi ebx +
jnz loc_103A7D1  +
lea eax [ebp+var_80C] +
cmp [ebp+var_80C] eax +
jz loc_103A803  +
mov [ebp+var_810] 1 +
push 0  +
lea eax [ebp+var_80C] +
push eax  +
call sub_1021773  +
mov esi offset dword_1079AB0 +
cmp edi esi +
jnz loc_103A7A3  +
cmp [ebp+var_810] 0 +
jz loc_103AB13  +
mov eax dword_10566D8 +
mov eax [eax+688h] +
inc eax  +
push eax  +
push offset aTableNameExclu  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov ebx dword_1079AB0 +
add esp 0Ch +
cmp ebx esi +
jz loc_103AB03  +
jmp loc_103A85D  +
mov ebx [ebp+var_828] +
and [ebp+var_810] 0 +
cmp dword ptr [ebx+3Ch] 0 +
mov eax [ebx] +
mov [ebp+var_828] eax +
jz loc_103AAF7  +
lea eax [ebp+var_80C] +
lea edi [ebx+8] +
mov [ebp+var_808] eax +
mov [ebp+var_80C] eax +
mov esi [edi] +
jmp loc_103A8A5  +
push 1  +
mov eax esi +
mov esi [esi] +
lea ecx [ebp+var_80C] +
push ecx  +
add eax 10h +
push eax  +
call sub_103180B  +
cmp esi edi +
jnz loc_103A88F  +
mov esi [ebp+var_80C] +
lea eax [ebp+var_80C] +
cmp esi eax +
jz loc_103AAE4  +
cmp [ebp+var_810] 0 +
jnz loc_103A8F3  +
mov eax [ebx+34h] +
test eax eax +
jnz loc_103A8D2  +
mov eax offset aIdle +
push dword ptr [ebx+3Ch]  +
push eax  +
push offset aItemDataNamePr  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 10h +
mov [ebp+var_810] 1 +
mov eax [esi] +
push dword ptr [esi+10h]  +
mov [ebp+var_83C] eax +
call sub_102534C  +
mov [ebp+var_840] eax +
test eax eax +
jz loc_103AB13  +
mov eax [esi+1Ch] +
add eax [esi+20h] +
mov [ebp+var_818] eax +
fild  [ebp+var_818] +
test eax eax +
jge loc_103A92D  +
fadd  ds:dbl_10018C0 +
push ebx  +
fstp  [ebp+var_838] +
call sub_1021E7E  +
push ebx  +
mov edi eax +
call sub_1021ED5  +
add edi eax +
mov [ebp+var_818] edi +
fild  [ebp+var_818] +
test edi edi +
jge loc_103A959  +
fadd  ds:dbl_10018C0 +
mov eax [esi+20h] +
fild  dword ptr [esi+20h] +
test eax eax +
jge loc_103A969  +
fadd  ds:dbl_10018C0 +
mov eax [esi+1Ch] +
fild  dword ptr [esi+1Ch] +
test eax eax +
jge loc_103A979  +
fadd  ds:dbl_10018C0 +
fld  st +
mov eax dword_1079A94 +
fadd st st(2) +
fdiv  ds:dbl_10018B8 +
fdiv  [ebp+var_848] +
fild  dword_1079A94 +
test eax eax +
jge loc_103A99E  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
fstp  [ebp+var_850] +
fldz   +
fld  st +
fucomp  st(4) +
fnstsw  ax +
test ah 44h +
jnp loc_103A9CB  +
fld  [ebp+var_838] +
fdivrp st(4) st +
fxch  st(3) +
fmul  ds:dbl_1001648 +
fstp  [ebp+var_838] +
jmp loc_103A9D7  +
fstp  st(3) +
fxch  st(2) +
fst  [ebp+var_838] +
fxch  st(2) +
test dword_1057950 10000h +
jnz loc_103AA20  +
mov eax [esi+2Ch] +
test eax eax +
jnz loc_103AA01  +
cmp [esi+30h] eax +
jnz loc_103AA01  +
fstp  st(1) +
fstp  st +
fst  [ebp+var_830] +
fstp  [ebp+var_824] +
jmp loc_103AA2E  +
fstp  st(2) +
test eax eax +
jz loc_103AA22  +
fild  dword ptr [esi+2Ch] +
jge loc_103AA12  +
fadd  ds:dbl_10018C0 +
fdiv st(1) st +
fxch  st(1) +
fstp  [ebp+var_824] +
fdivp st(1) st +
jmp loc_103AA28  +
fstp  st(2) +
fstp  [ebp+var_824] +
fstp  [ebp+var_830] +
add esi 2Ch +
mov eax [esi] +
fild  dword ptr [esi] +
test eax eax +
jge loc_103AA3F  +
fadd  ds:dbl_10018C0 +
fdiv  [ebp+var_848] +
mov ecx [ebp+var_840] +
mov eax [ecx+10h] +
fstp  qword ptr [ebp-81Ch] +
test eax eax +
jnz loc_103AA6D  +
add ecx 1Ch +
push ecx  +
push 400h  +
lea eax [ebp+var_804] +
push eax  +
call sub_1034A70  +
fld  [ebp+var_850] +
sub esp 28h +
fstp  [esp+884h+var_864] +
fld  [ebp+var_838] +
fstp  [esp+884h+var_86C] +
fld  [ebp+var_830] +
fstp  [esp+884h+var_874] +
fld  [ebp+var_824] +
fstp  [esp+884h+var_87C] +
fld  qword ptr [ebp-81Ch] +
fstp  [esp+884h+var_884] +
push dword ptr [esi]  +
push eax  +
push offset aItemDataNam_18  +
push [ebp+lpBuffer]  +
call sub_1024264  +
mov esi [ebp+var_83C] +
lea eax [ebp+var_80C] +
add esp 38h +
cmp esi eax +
jnz loc_103A8BD  +
cmp [ebp+var_810] 0 +
jz loc_103AAE4  +
push [ebp+lpBuffer]  +
push offset aItem_0  +
call sub_1023CCF  +
push 0  +
lea eax [ebp+var_80C] +
push eax  +
call sub_1021773  +
mov esi offset dword_1079AB0 +
cmp [ebp+var_828] esi +
jnz loc_103A857  +
push [ebp+lpBuffer]  +
push offset aTable  +
call sub_1023CCF  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 840h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx stru_1079A28.dwHighDateTime +
mov [ebp+lpBuffer] eax +
mov eax stru_1079A28.dwLowDateTime +
sub eax SystemTimeAsFileTime.dwLowDateTime +
push edi  +
sbb ecx SystemTimeAsFileTime.dwHighDateTime +
mov dword ptr [ebp+var_814] eax +
mov dword ptr [ebp+var_814+4] ecx +
fild  [ebp+var_814] +
mov edi dword_1079AD8 +
and [ebp+var_808] 0 +
fdiv  ds:dbl_10018C8 +
fstp  [ebp+var_840] +
cmp edi offset dword_1079AD8 +
jz loc_103AD5E  +
push ebx  +
push esi  +
lea eax [edi+8] +
mov ebx [eax] +
jmp loc_103AD2D  +
mov esi ebx +
mov eax [esi+0Ch] +
mov ebx [ebx] +
mov [ebp+var_820] eax +
test eax eax +
jbe loc_103AD2A  +
cmp [ebp+var_808] 0 +
jnz loc_103ABDA  +
push [ebp+lpBuffer]  +
push offset aTableNameTrans  +
call sub_1023CCF  +
mov [ebp+var_808] 1 +
mov eax [esi+40h] +
fild  dword ptr [esi+40h] +
test eax eax +
jge loc_103ABEA  +
fadd  ds:dbl_10018C0 +
mov eax [esi+44h] +
fild  dword ptr [esi+44h] +
test eax eax +
jge loc_103ABFA  +
fadd  ds:dbl_10018C0 +
fld  st +
mov eax dword_1079A94 +
fadd st st(2) +
fld  ds:dbl_1002990 +
fdiv st(1) st +
fld  [ebp+var_840] +
fdiv st(2) st +
fld  ds:dbl_1001648 +
fmul st(3) st +
fxch  st(3) +
fstp  [ebp+var_828] +
fxch  st(4) +
fdiv st st(1) +
fdiv st st(4) +
fmul st st(2) +
fstp  [ebp+var_830] +
fdivp st(2) st +
fxch  st(1) +
fdiv st st(2) +
fmulp st(1) st +
fstp  [ebp+var_814] +
test eax eax +
jz loc_103AC7F  +
mov [ebp+var_818] eax +
fild  [ebp+var_818] +
jge loc_103AC57  +
fadd  ds:dbl_10018C0 +
fld  [ebp+var_828] +
fdiv st st(1) +
fstp  [ebp+var_828] +
fld  [ebp+var_830] +
fdiv st st(1) +
fstp  [ebp+var_830] +
fdivr  [ebp+var_814] +
fstp  [ebp+var_814] +
mov eax [ebp+var_820] +
fild  qword ptr [esi+20h] +
fild  [ebp+var_820] +
test eax eax +
jge loc_103AC98  +
fadd  ds:dbl_10018C0 +
fdivp st(1) st +
mov eax [ebp+var_820] +
fstp  [ebp+var_838] +
fild  [ebp+var_820] +
test eax eax +
jge loc_103ACB6  +
fadd  ds:flt_10124E4 +
fdivrp st(1) st +
mov eax [edi+10h] +
fstp  qword ptr [ebp-81Ch] +
test eax eax +
jnz loc_103ACDA  +
lea eax [edi+1Ch] +
push eax  +
push 400h  +
lea eax [ebp+var_804] +
push eax  +
call sub_1034A70  +
fld  [ebp+var_828] +
movzx ecx word ptr [esi+8] +
sub esp 28h +
fstp  [esp+874h+var_854] +
fld  [ebp+var_830] +
fstp  [esp+874h+var_85C] +
fld  [ebp+var_814] +
fstp  [esp+874h+var_864] +
fld  qword ptr [ebp-81Ch] +
fstp  [esp+874h+var_86C] +
fld  [ebp+var_838] +
fstp  [esp+874h+var_874] +
push dword ptr [esi+0Ch]  +
push ecx  +
push eax  +
push offset aItemDataNam_19  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 3Ch +
lea eax [edi+8] +
cmp ebx eax +
jnz loc_103ABA2  +
mov edi [edi] +
cmp edi offset dword_1079AD8 +
jnz loc_103AB98  +
cmp [ebp+var_808] 0 +
pop esi  +
pop ebx  +
jz loc_103AD5E  +
push [ebp+lpBuffer]  +
push offset aTable  +
call sub_1023CCF  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
xor ebx ebx +
cmp [ebp+lpFileName] ebx +
jz loc_103AEDD  +
mov eax [ebp+arg_4] +
push esi  +
push ebx  +
push 1  +
push [ebp+lpFileName]  +
mov dword_1057950 eax +
call sub_1024012  +
mov esi eax +
cmp esi ebx +
jz loc_103AEDC  +
push esi  +
push 0FEFFh  +
call sub_1023ECA  +
push esi  +
push offset a?xmlVersion1_0  +
call sub_1023CCF  +
mov eax dword_10566D8 +
test dword ptr [eax+3B0h] 40000h +
jnz loc_103ADE1  +
add eax 320h +
cmp [eax] ebx +
jz loc_103ADE1  +
push dword ptr [eax]  +
push offset a?xmlStylesheet  +
push esi  +
call sub_1024264  +
add esp 0Ch +
push esi  +
call sub_102F088  +
push esi  +
call sub_1039C0F  +
mov eax dword_10566D8 +
cmp eax ebx +
jz loc_103AEAD  +
push esi  +
call sub_1032CBE  +
mov eax dword_10566D8 +
cmp eax ebx +
jz loc_103AEAD  +
push esi  +
call sub_1035030  +
mov eax dword_10566D8 +
cmp eax ebx +
jz loc_103AEAD  +
cmp [eax+5D0h] bl +
jz loc_103AE99  +
push edi  +
push ebx  +
push 1770h  +
push offset aTracerptcpusec  +
push esi  +
call sub_102F3F0  +
push esi  +
call sub_103AB29  +
call sub_10322AB  +
push esi  +
call sub_10324D3  +
push esi  +
call sub_1032246  +
push esi  +
call sub_103A733  +
push esi  +
call sub_103A5D2  +
push esi  +
mov edi offset aSection_0 +
push edi  +
call sub_1023CCF  +
push ebx  +
push 1F40h  +
push offset aTracerptdisk  +
push esi  +
call sub_102F3F0  +
push esi  +
call sub_1034ACB  +
push esi  +
call sub_1031EBC  +
push esi  +
push edi  +
call sub_1023CCF  +
push esi  +
call sub_104187B  +
mov eax dword_10566D8 +
pop edi  +
cmp eax ebx +
jz loc_103AEAD  +
cmp dword_1079B5C ebx +
jz loc_103AEAD  +
push esi  +
call sub_10316EF  +
jmp loc_103AEC3  +
add eax 684h +
cmp [eax] ebx +
jz loc_103AEC3  +
mov eax [eax] +
cmp [eax+14h] ebx +
jnz loc_103AEC3  +
push esi  +
call sub_103496E  +
push esi  +
push offset aReport  +
call sub_1023CCF  +
push esi  +
call sub_1023FB3  +
push [ebp+lpFileName]  +
call sub_103C41A  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
xor eax eax +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
and dword ptr [ebp-4] 0 +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
push 4  +
pop eax  +
mov ecx eax +
mov edi offset dword_10016EC +
lea esi [ebx+18h] +
xor edx edx +
cmps   +
jnz loc_103B00F  +
cmp [ebx+2Dh] dl +
jnz loc_103B00F  +
mov [ebp+8] eax +
lea eax [ebp+8] +
push eax  +
lea eax [ebp-4] +
push eax  +
push offset aPointersize  +
push ebx  +
call sub_1026EA2  +
test eax eax +
jnz loc_103B00F  +
mov eax [ebp-4] +
mov ecx dword_10566D8 +
shl eax 3 +
push 8  +
pop esi  +
mov [ebp-4] eax +
mov [ecx+680h] eax +
lea eax [ebp+8] +
push eax  +
push offset dword_1057960  +
push offset aStarttime  +
push ebx  +
mov [ebp+8] esi +
call sub_1026EA2  +
test eax eax +
jnz loc_103B00F  +
mov eax [ebx+10h] +
mov dword_1057968 eax +
mov eax [ebx+14h] +
mov dword_105796C eax +
lea eax [ebp+8] +
push eax  +
push offset dword_1057978  +
push offset aReservedflags  +
push ebx  +
mov dword ptr [ebp+8] 4 +
call sub_1026EA2  +
test eax eax +
jnz loc_103B00F  +
lea eax [ebp+8] +
push eax  +
lea eax [ebp-10h] +
push eax  +
push offset aPerffreq  +
push ebx  +
mov [ebp+8] esi +
call sub_1026EA2  +
test eax eax +
jnz loc_103B00F  +
cmp dword_1057978 1 +
jnz loc_103B008  +
mov eax [ebp-10h] +
mov ecx eax +
or ecx [ebp-0Ch] +
jz loc_103B008  +
mov [ebp-18h] eax +
mov eax [ebp-0Ch] +
mov [ebp-4] eax +
and dword ptr [ebp-4] 80000000h +
and eax 7FFFFFFFh +
and dword ptr [ebp-8] 0 +
mov [ebp-14h] eax +
fild  qword ptr [ebp-18h] +
fild  qword ptr [ebp-8] +
fchs   +
faddp st(1) st +
fdivr  ds:dbl_10018C8 +
fstp  dbl_1057970 +
jmp loc_103B00F  +
and dword_1057978 0 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1ACh +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 19Ch  +
xor edi edi +
lea eax [ebp+var_1A0] +
push edi  +
push eax  +
call memset  +
or [ebp+var_190] 10001000h +
add esp 0Ch +
lea eax [ebp+var_1A4] +
push eax  +
mov [ebp+var_1A4] esi +
mov [ebp+var_2C] edi +
mov [ebp+var_14] offset loc_103AEF1 +
mov [ebp+var_24] offset loc_103AEE7 +
call ds:OpenTraceW  +
mov [ebp+var_1AC] eax +
mov [ebp+var_1A8] edx +
cmp eax 0FFFFFFFFh +
jnz loc_103B08F  +
cmp edx edi +
jz loc_103B0B8  +
push edi  +
push edi  +
push 1  +
lea eax [ebp+var_1AC] +
push eax  +
mov dword_1057978 edi +
call ds:ProcessTrace  +
push [ebp+var_1A8]  +
push [ebp+var_1AC]  +
call ds:CloseTrace  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
cmp dword_1057978 1 +
jz loc_103B0F0  +
mov ecx dword ptr [ebp+arg_4] +
mov eax [ebp+arg_0] +
mov [eax] ecx +
mov ecx dword ptr [ebp+arg_4+4] +
mov [eax+4] ecx +
jmp locret_103B1D3  +
mov eax dword_105796C +
mov edx dword ptr [ebp+arg_4+4] +
push esi  +
mov esi eax +
xor esi edx +
push edi  +
mov edi 80000000h +
and esi edi +
xor ecx ecx +
or ecx esi +
mov esi dword ptr [ebp+arg_4] +
mov ecx dword_1057968 +
jz loc_103B188  +
cmp edx eax +
jb loc_103B163  +
ja loc_103B11E  +
cmp esi ecx +
jbe loc_103B163  +
sub esi ecx +
sbb edx eax +
mov dword ptr [ebp+arg_4+4] edx +
and dword ptr [ebp+arg_4+4] edi +
and edx 7FFFFFFFh +
and dword ptr [ebp+arg_4] 0 +
mov dword ptr [ebp+var_8] esi +
mov dword ptr [ebp+var_8+4] edx +
fild  [ebp+var_8] +
fild  [ebp+arg_4] +
fchs   +
faddp st(1) st +
fmul  dbl_1057970 +
call _ftol2  +
mov ecx eax +
add ecx dword_1057960 +
mov eax [ebp+arg_0] +
adc edx dword_1057964 +
mov [eax+4] edx +
jmp loc_103B1CF  +
sub ecx esi +
sbb eax edx +
mov dword ptr [ebp+arg_4+4] eax +
and dword ptr [ebp+arg_4+4] edi +
and eax 7FFFFFFFh +
and dword ptr [ebp+arg_4] 0 +
mov dword ptr [ebp+var_8] ecx +
mov dword ptr [ebp+var_8+4] eax +
fild  [ebp+var_8] +
fild  [ebp+arg_4] +
fchs   +
faddp st(1) st +
jmp loc_103B1AE  +
cmp edx eax +
jb loc_103B1A1  +
ja loc_103B192  +
cmp esi ecx +
jbe loc_103B1A1  +
sub esi ecx +
sbb edx eax +
mov dword ptr [ebp+arg_4] esi +
mov dword ptr [ebp+arg_4+4] edx +
fild  [ebp+arg_4] +
jmp loc_103B142  +
sub ecx esi +
sbb eax edx +
mov dword ptr [ebp+arg_4] ecx +
mov dword ptr [ebp+arg_4+4] eax +
fild  [ebp+arg_4] +
fmul  dbl_1057970 +
call _ftol2  +
mov ecx dword_1057960 +
mov esi dword_1057964 +
sub ecx eax +
mov eax [ebp+arg_0] +
sbb esi edx +
mov [eax+4] esi +
pop edi  +
mov [eax] ecx +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
xor esi esi +
push esi  +
lea eax [ebp+dwBytes] +
push eax  +
push esi  +
push [ebp+arg_0]  +
xor edi edi +
mov [ebp+dwBytes] esi +
call PdhParseCounterPathW  +
cmp eax 800007D2h +
jnz loc_103B23D  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov edi eax +
cmp edi esi +
jnz loc_103B21B  +
xor eax eax +
jmp loc_103B23F  +
push esi  +
lea eax [ebp+dwBytes] +
push eax  +
push edi  +
push [ebp+arg_0]  +
call PdhParseCounterPathW  +
test eax eax +
jz loc_103B23D  +
push edi  +
push esi  +
push hHeap  +
call ds:HeapFree  +
jmp loc_103B217  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
mov [esi+8] eax +
mov eax [ebp+arg_8] +
push 1400h  +
push 8  +
mov [esi+0Ch] eax +
mov dword ptr [esi+14h] 80h +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jnz loc_103B282  +
push 8  +
pop eax  +
jmp loc_103B28D  +
mov [esi+10h] eax +
mov eax [ebp+arg_C] +
mov [esi+58h] eax +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:HeapFree +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+0Ch] +
test eax eax +
jz loc_103B2B9  +
push eax  +
push 0  +
push hHeap  +
call esi  +
mov eax [edi+10h] +
test eax eax +
jz loc_103B2CB  +
push eax  +
push 0  +
push hHeap  +
call esi  +
push edi  +
push 0  +
push hHeap  +
call esi  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi [edi] +
jmp loc_103B303  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
mov [ecx] eax +
push edx  +
mov [eax+4] ecx +
call sub_103B297  +
cmp edi esi +
jnz loc_103B2EF  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_103B35D  +
push esi  +
mov esi ds:HeapFree +
push edi  +
lea edi [ebx+1Ch] +
mov [ebp+arg_0] 2 +
mov eax [edi] +
test eax eax +
jz loc_103B342  +
push eax  +
push 0  +
push hHeap  +
call esi  +
add edi 4 +
dec [ebp+arg_0]  +
jnz loc_103B331  +
push ebx  +
call sub_103B2E1  +
push ebx  +
push 0  +
push hHeap  +
call esi  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov eax SystemTimeAsFileTime.dwLowDateTime +
or eax SystemTimeAsFileTime.dwHighDateTime +
jnz locret_103B3A3  +
mov eax FileTime.dwLowDateTime +
mov SystemTimeAsFileTime.dwLowDateTime eax +
mov eax FileTime.dwHighDateTime +
mov SystemTimeAsFileTime.dwHighDateTime eax +
mov eax stru_1079A38.dwLowDateTime +
mov stru_1079A28.dwLowDateTime eax +
mov eax stru_1079A38.dwHighDateTime +
mov stru_1079A28.dwHighDateTime eax +
mov byte_1079A5A 1 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
xor esi esi +
and [ebp+var_4] esi +
push edi  +
mov edi ds:HeapFree +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call PdhExpandWildCardPathHW  +
mov [ebp+var_8] eax +
cmp eax 800007D2h +
jnz loc_103B409  +
test esi esi +
jz loc_103B3E8  +
push esi  +
push 0  +
push hHeap  +
call edi  +
mov eax [ebp+var_4] +
lea eax [eax+eax+2] +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_103B3BD  +
push 8  +
pop eax  +
jmp loc_103B42E  +
test eax eax +
jnz loc_103B41C  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_4] +
mov [eax] esi +
mov eax [ebp+arg_C] +
mov [eax] ecx +
jmp loc_103B42B  +
test esi esi +
jz loc_103B42B  +
push esi  +
push 0  +
push hHeap  +
call edi  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
cmp byte_1079B54 0 +
mov [ebp+var_4] 104h +
jnz locret_103B6B8  +
mov ecx dword_1079B4C +
push ebx  +
push esi  +
push edi  +
xor edi edi +
cmp ecx offset dword_1079B4C +
jz loc_103B4BC  +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
mov [ebp+var_C] eax +
mov edx [ebp+var_C] +
mov esi ecx +
mov eax [esi+0Ch] +
mov ecx [ecx] +
mov eax [eax+4] +
mov [ebp+var_8] esi +
mov bx [eax] +
cmp bx [edx] +
jnz loc_103B4A7  +
test bx bx +
jz loc_103B4A3  +
mov bx [eax+2] +
cmp bx [edx+2] +
jnz loc_103B4A7  +
add eax 4 +
add edx 4 +
test bx bx +
jnz loc_103B481  +
xor eax eax +
jmp loc_103B4AC  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_103B54A  +
cmp ecx offset dword_1079B4C +
jnz loc_103B471  +
push 208h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_103B6B5  +
mov esi [ebp+arg_4] +
push offset asc_1002748  +
push esi  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_103B505  +
add eax 4 +
push 5Ch  +
push eax  +
call ds:wcschr  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jnz loc_103B505  +
mov esi [ebp+arg_4] +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push esi  +
call PdhTranslate009CounterW  +
cmp eax 800007D2h +
jnz loc_103B5CB  +
mov eax [ebp+var_4] +
add eax eax +
push eax  +
push ebx  +
push 8  +
push hHeap  +
call ds:HeapReAlloc  +
test eax eax +
jz loc_103B5C6  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push esi  +
mov ebx eax +
call PdhTranslate009CounterW  +
jmp loc_103B5CB  +
lea eax [esi+10h] +
mov ecx [eax] +
mov edi esi +
jmp loc_103B598  +
mov eax [ebp+arg_0] +
mov edx [eax+14h] +
mov esi ecx +
mov eax [esi+0Ch] +
mov ecx [ecx] +
mov eax [eax+14h] +
mov bx [eax] +
cmp bx [edx] +
jnz loc_103B589  +
test bx bx +
jz loc_103B585  +
mov bx [eax+2] +
cmp bx [edx+2] +
jnz loc_103B589  +
add eax 4 +
add edx 4 +
test bx bx +
jnz loc_103B563  +
xor eax eax +
jmp loc_103B58E  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_103B5A1  +
mov eax [ebp+var_8] +
add eax 10h +
cmp eax ecx +
jnz loc_103B553  +
jmp loc_103B4BC  +
test esi esi +
jz loc_103B4BC  +
mov eax [ebp+var_8] +
mov eax [eax+8] +
mov ecx [eax+4] +
mov eax [ebp+arg_0] +
mov [eax+4] ecx +
mov ecx [esi+8] +
mov ecx [ecx+14h] +
mov [eax+14h] ecx +
jmp loc_103B6B5  +
mov eax 0C0000BBBh +
test eax eax +
jz loc_103B5E6  +
cmp eax 800007D0h +
jnz loc_103B6A2  +
mov byte_1079B54 1 +
jmp loc_103B6A2  +
test edi edi +
jnz loc_103B64C  +
push 18h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov edi eax +
xor esi esi +
cmp edi esi +
jnz loc_103B611  +
cmp ebx esi +
jz loc_103B6B5  +
push ebx  +
push esi  +
jmp loc_103B6A9  +
mov eax dword_1079B4C +
mov [edi] eax +
mov dword ptr [edi+4] offset dword_1079B4C +
mov [eax+4] edi +
lea eax [edi+10h] +
mov dword_1079B4C edi +
push ebx  +
mov [edi+14h] eax +
mov [eax] eax +
call sub_103B1DC  +
mov [edi+8] eax +
cmp eax esi +
jz loc_103B602  +
push [ebp+arg_4]  +
call sub_103B1DC  +
mov [edi+0Ch] eax +
cmp eax esi +
jz loc_103B602  +
push 10h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_103B6A2  +
lea eax [edi+10h] +
mov ecx [eax] +
mov [esi] ecx +
mov [esi+4] eax +
mov [ecx+4] esi +
push ebx  +
mov [eax] esi +
call sub_103B1DC  +
mov [esi+8] eax +
test eax eax +
jz loc_103B6A2  +
push [ebp+arg_4]  +
call sub_103B1DC  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_103B6A2  +
mov eax [edi+8] +
mov ecx [eax+4] +
mov eax [ebp+arg_0] +
mov [eax+4] ecx +
mov ecx [esi+8] +
mov ecx [ecx+14h] +
mov [eax+14h] ecx +
test ebx ebx +
jz loc_103B6B5  +
push ebx  +
push 0  +
push hHeap  +
call ds:HeapFree  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi [ecx] +
mov [ebp+var_4] edi +
cmp ecx edi +
jz loc_103B729  +
mov ecx [eax+0Ch] +
mov ecx [ecx+4] +
mov [ebp+arg_4] ecx +
mov edx [ebp+arg_4] +
mov ebx edi +
mov ecx [ebx+0Ch] +
mov edi [edi] +
mov ecx [ecx+4] +
mov si [ecx] +
cmp si [edx] +
jnz loc_103B715  +
test si si +
jz loc_103B711  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_103B715  +
add ecx 4 +
add edx 4 +
test si si +
jnz loc_103B6EF  +
xor ecx ecx +
jmp loc_103B71A  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jz loc_103B73A  +
cmp [ebp+arg_0] edi +
jnz loc_103B6E2  +
mov ecx [ebp+arg_0] +
mov edi [ebp+var_4] +
mov [eax] edi +
mov [eax+4] ecx +
mov [edi+4] eax +
mov [ecx] eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
mov ecx [ebx] +
mov [eax] ecx +
mov [eax+4] ebx +
mov [ebx] eax +
mov ecx [eax] +
mov [ecx+4] eax +
jmp loc_103B733  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10566D8 +
mov eax [eax+684h] +
test eax eax +
jz loc_103B799  +
fld  [ebp+arg_0] +
fstp  qword ptr [eax+8] +
mov ecx dword_10566D8 +
cmp dword ptr [ecx+3B4h] 0 +
jz loc_103B799  +
cmp dword ptr [eax+10h] 0 +
jbe loc_103B799  +
fld  [ebp+arg_0] +
call _ftol2_sse  +
and eax 80000001h +
jns loc_103B792  +
dec eax  +
or eax 0FFFFFFFEh +
inc eax  +
jnz loc_103B799  +
call sub_101F41A  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call PdhCollectQueryData  +
mov ebx 0C0000BCCh +
jmp loc_103B84F  +
test eax eax +
jnz loc_103B82A  +
mov eax [ebp+arg_4] +
mov edi [eax] +
cmp eax edi +
jz loc_103B82A  +
mov esi edi +
mov eax [esi+1Ch] +
mov ecx [esi+14h] +
mov edi [edi] +
cmp eax ecx +
jnb loc_103B7E5  +
imul eax eax +
add eax [esi+10h] +
jmp loc_103B811  +
lea eax [ecx+ecx] +
mov [esi+14h] eax +
imul eax eax +
push eax  +
push dword ptr [esi+10h]  +
push 8  +
push hHeap  +
call ds:HeapReAlloc  +
mov ecx eax +
test ecx ecx +
jz loc_103B860  +
mov eax [esi+1Ch] +
imul eax eax +
mov [esi+10h] ecx +
add eax ecx +
push eax  +
lea eax [esi+18h] +
push eax  +
push dword ptr [esi+8]  +
call PdhGetRawCounterValue  +
test eax eax +
jnz loc_103B859  +
inc dword ptr [esi+1Ch]  +
cmp [ebp+arg_4] edi +
jnz loc_103B7CF  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
fild  [ebp+var_4] +
test eax eax +
jge loc_103B83D  +
fadd  ds:dbl_10018C0 +
push ecx  +
push ecx  +
fstp  [esp+2Ch+var_2C] +
call sub_103B74F  +
push [ebp+arg_0]  +
call PdhCollectQueryData  +
cmp eax ebx +
jnz loc_103B7C2  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
push 8  +
pop eax  +
jmp loc_103B859  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi [edi] +
jmp loc_103B899  +
mov eax esi +
mov esi [esi] +
lea ecx [eax+20h] +
push ecx  +
push dword ptr [eax+10h]  +
push dword ptr [eax+1Ch]  +
push 0  +
push 8200h  +
push dword ptr [eax+8]  +
call PdhComputeCounterStatistics  +
test eax eax +
jnz loc_103B89F  +
cmp edi esi +
jnz loc_103B878  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax [ebp+FileTime.dwLowDateTime] +
mov ecx [ebp+FileTime.dwHighDateTime] +
push esi  +
push edi  +
mov [ebp+var_8] eax +
mov [ebp+FileTime.dwLowDateTime] eax +
lea eax [ebp+UniversalTime] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
xor esi esi +
xor edi edi +
mov [ebp+var_4] ecx +
mov [ebp+FileTime.dwHighDateTime] ecx +
call ds:FileTimeToSystemTime  +
test eax eax +
jz loc_103B915  +
lea eax [ebp+SystemTime] +
push eax  +
lea eax [ebp+UniversalTime] +
push eax  +
mov eax dword_10566D8 +
add eax 5D4h +
push eax  +
call ds:SystemTimeToTzSpecificLocalTime  +
test eax eax +
jz loc_103B915  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+SystemTime] +
push eax  +
call ds:SystemTimeToFileTime  +
test eax eax +
jz loc_103B915  +
mov eax [ebp+var_8] +
mov ecx [ebp+var_4] +
mov esi eax +
mov edi ecx +
mov edx edi +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [eax+4] +
push ebx  +
mov ebx [ecx] +
push esi  +
mov esi [ecx+4] +
cmp edx esi +
push edi  +
mov edi [eax] +
mov [ebp+var_10] edi +
mov [ebp+var_C] edx +
jg loc_103B954  +
jl loc_103B94F  +
cmp edi ebx +
jnb loc_103B954  +
mov [ebp+var_4] esi +
jmp loc_103B959  +
mov ebx edi +
mov [ebp+var_4] edx +
mov edx [eax+8] +
mov eax [eax+0Ch] +
mov edi [ecx+0Ch] +
cmp eax edi +
mov esi [ecx+8] +
mov [ebp+var_8] ebx +
jg loc_103B976  +
jl loc_103B972  +
cmp edx esi +
jnb loc_103B976  +
mov esi edx +
mov edi eax +
cmp [ebp+var_4] edi +
mov [ebp+var_14] edi +
jl loc_103B988  +
jg loc_103B984  +
cmp ebx esi +
jb loc_103B988  +
xor al al +
jmp loc_103B9D3  +
mov edi esi +
sub edi ebx +
mov ebx [ebp+var_14] +
sbb ebx [ebp+var_4] +
sub edx [ebp+var_10] +
mov dword ptr [ebp+var_20] edi +
sbb eax [ebp+var_C] +
mov dword ptr [ebp+var_20+4] ebx +
fild  [ebp+var_20] +
mov dword ptr [ebp+var_20+4] eax +
mov dword ptr [ebp+var_20] edx +
fild  [ebp+var_20] +
fmul  ds:dbl_1012A20 +
fcompp st(1) st +
fnstsw  ax +
test ah 41h +
jz loc_103B984  +
mov eax [ebp+var_8] +
and dword ptr [ecx+10h] 0 +
mov [ecx] eax +
mov eax [ebp+var_4] +
mov [ecx+4] eax +
mov eax [ebp+var_14] +
mov [ecx+0Ch] eax +
mov [ecx+8] esi +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ecx ecx +
push esi  +
xor edx edx +
push edi  +
cmp [ebp+arg_4] ecx +
jbe loc_103BA13  +
mov eax [ebp+arg_0] +
mov eax [eax+edx*4] +
lea edi [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_103B9FB  +
sub eax edi +
sar eax 1 +
inc edx  +
lea ecx [ecx+eax*2+2] +
cmp edx [ebp+arg_4] +
jb loc_103B9F2  +
lea edi [ecx+0Bh] +
and edi 0FFFFFFF8h +
lea ebx [edi+28h] +
push ebx  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_103BA36  +
push 0Eh  +
pop eax  +
jmp loc_103BAAB  +
push ebx  +
push 0  +
push esi  +
call memset  +
mov [ebp+var_8] edi +
lea eax [esi+28h] +
xor edi edi +
add esp 0Ch +
mov [esi+24h] eax +
mov [ebp+var_4] eax +
cmp [ebp+arg_4] edi +
jbe loc_103BA93  +
mov eax [ebp+arg_0] +
mov ecx [eax+edi*4] +
mov eax ecx +
lea edx [eax+2] +
mov bx [eax] +
inc eax  +
inc eax  +
test bx bx +
jnz loc_103BA60  +
sub eax edx +
sar eax 1 +
mov ebx eax +
mov eax [ebp+var_8] +
push ecx  +
shr eax 1 +
push eax  +
push [ebp+var_4]  +
call sub_101F55E  +
test eax eax +
jl loc_103BAB2  +
lea eax [ebx+ebx+2] +
add [ebp+var_4] eax +
sub [ebp+var_8] eax +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_103BA55  +
mov eax [ebp+arg_4] +
mov [esi+18h] eax +
mov [esi+4] esi +
mov [esi] esi +
mov eax dword_10566D8 +
mov [eax+684h] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
mov eax 54Fh +
jmp loc_103BAAB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
movzx eax [ebp+arg_4] +
jz loc_103BAE3  +
push offset asc_1012A38  +
jmp loc_103BAE8  +
push offset asc_1012A28  +
push eax  +
push [ebp+arg_8]  +
call sub_101BCA7  +
add esp 0Ch +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1024h +
call __alloca_probe  +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_1018] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_1024] eax +
mov eax [ebp+arg_8] +
push ebx  +
mov [ebp+var_1014] eax +
mov eax dword_10566D8 +
mov eax [eax+684h] +
push esi  +
push edi  +
mov [ebp+var_1008] 0 +
lea edi [eax+1Ch] +
lea eax [ebp+var_1004] +
push eax  +
push 800h  +
push dword ptr [ebp+var_1008]  +
call sub_103BACD  +
lea eax [ebp+var_100C] +
push eax  +
lea eax [ebp+var_101C] +
push eax  +
lea eax [ebp+var_1004] +
push eax  +
push [ebp+var_1018]  +
call sub_103B3A9  +
test eax eax +
jz loc_103BBAB  +
cmp [ebp+var_1008] 0 +
jz loc_103BCBD  +
cmp eax 0C0000BC4h +
jnz loc_103BB9A  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 0Ch  +
mov esi [ebp+var_101C] +
mov [edi] esi +
add edi 4 +
mov [ebp+var_100C] edi +
jmp loc_103BCA8  +
cmp word ptr [esi] 0 +
jz loc_103BCB0  +
push esi  +
call sub_103B1DC  +
mov ebx eax +
test ebx ebx +
jz loc_103BCC9  +
mov eax [ebx+14h] +
push esi  +
push ebx  +
mov [ebp+var_1010] eax +
call sub_103B439  +
cmp dword_10566D8 0 +
jz loc_103BC2F  +
cmp dword_1079B5C 0 +
jz loc_103BC2F  +
push ebx  +
call sub_102F425  +
test eax eax +
jnz loc_103BC2F  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_103BC0C  +
push ebx  +
sub eax edx +
push 0  +
push hHeap  +
sar eax 1 +
lea esi [esi+eax*2+2] +
call ds:HeapFree  +
jmp loc_103BCA8  +
lea eax [ebp+var_1020] +
push eax  +
push 0  +
push esi  +
push [ebp+var_1024]  +
call PdhAddCounterW  +
test eax eax +
jnz loc_103BCD1  +
push 60h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_103BCE9  +
push [ebp+var_1010]  +
push ebx  +
push [ebp+var_1020]  +
push edi  +
call sub_103B24A  +
mov ebx eax +
push edi  +
test ebx ebx +
jnz loc_103BCEE  +
push [ebp+var_1014]  +
call sub_103B6C1  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_103BC90  +
mov edi [ebp+var_100C] +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+2] +
test esi esi +
jnz loc_103BBC1  +
cmp [ebp+var_1008] 0 +
jnz loc_103BB98  +
mov [ebp+var_1008] 1 +
jmp loc_103BB49  +
push 8  +
pop eax  +
jmp loc_103BB9A  +
mov esi eax +
push ebx  +
push 0  +
push hHeap  +
call ds:HeapFree  +
mov eax esi +
jmp loc_103BB9A  +
push 8  +
pop esi  +
jmp loc_103BCD3  +
call sub_103B297  +
mov eax ebx +
jmp loc_103BB9A  +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_28] 1 +
mov [ebp+var_24] 18h +
mov eax dword_10566D8 +
mov esi [eax+684h] +
mov [esi+14h] ebx +
mov [ebp+ms_exc.disabled] ebx +
cmp [esi+18h] ebx +
jbe loc_103BE72  +
push dword ptr [esi+24h]  +
lea eax [ebp+var_1C] +
push eax  +
call PdhBindInputDataSourceW  +
mov [esi+14h] eax +
cmp eax ebx +
jnz loc_103BE72  +
lea eax [ebp+var_20] +
push eax  +
push ebx  +
push [ebp+var_1C]  +
call PdhOpenQueryH  +
mov [esi+14h] eax +
cmp eax ebx +
jnz loc_103BE72  +
lea eax [ebp+var_24] +
push eax  +
lea eax [ebp+var_5C] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
push [ebp+var_1C]  +
call PdhGetDataSourceTimeRangeH  +
mov [esi+14h] eax +
cmp eax ebx +
jnz loc_103BE72  +
mov eax [ebp+var_4C] +
mov [esi+10h] eax +
mov eax dword_10566D8 +
cmp [eax+5D1h] bl +
jz loc_103BE26  +
push stru_1079A48.dwHighDateTime  +
push stru_1079A48.dwLowDateTime  +
call sub_103B8AA  +
mov [ebp+var_44] eax +
mov [ebp+var_40] edx +
push stru_1079A50.dwHighDateTime  +
push stru_1079A50.dwLowDateTime  +
call sub_103B8AA  +
mov [ebp+var_3C] eax +
mov [ebp+var_38] edx +
mov [ebp+var_34] ebx +
lea eax [ebp+var_44] +
push eax  +
lea eax [ebp+var_5C] +
push eax  +
call sub_103B924  +
test al al +
jnz loc_103BDF6  +
mov eax 0C0000BF8h +
mov [esi+14h] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_103BEB4  +
lea eax [ebp+var_44] +
push eax  +
push [ebp+var_20]  +
call PdhSetQueryTimeRange  +
mov [esi+14h] eax +
cmp eax ebx +
jnz loc_103BE72  +
mov eax [ebp+var_44] +
mov FileTime.dwLowDateTime eax +
mov eax [ebp+var_40] +
mov FileTime.dwHighDateTime eax +
mov eax [ebp+var_3C] +
mov stru_1079A38.dwLowDateTime eax +
mov eax [ebp+var_38] +
jmp loc_103BE41  +
mov eax [ebp+var_5C] +
mov FileTime.dwLowDateTime eax +
mov eax [ebp+var_58] +
mov FileTime.dwHighDateTime eax +
mov eax [ebp+var_54] +
mov stru_1079A38.dwLowDateTime eax +
mov eax [ebp+var_50] +
mov stru_1079A38.dwHighDateTime eax +
push esi  +
push [ebp+var_20]  +
push [ebp+var_1C]  +
call sub_103BAFD  +
mov [esi+14h] eax +
cmp eax ebx +
jnz loc_103BE72  +
push esi  +
push [ebp+var_20]  +
call sub_103B7A2  +
mov [esi+14h] eax +
cmp eax ebx +
jnz loc_103BE72  +
push esi  +
call sub_103B86A  +
mov [esi+14h] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
cmp [ebp+var_1C] ebx +
jz loc_103BE87  +
push ebx  +
push [ebp+var_1C]  +
call PdhCloseLog  +
cmp [ebp+var_20] ebx +
jz loc_103BE94  +
push [ebp+var_20]  +
call PdhCloseQuery  +
mov eax [esi+14h] +
jmp loc_103BEB4  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-2Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-2Ch] +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp byte ptr [esi+8] 0 +
jz loc_103BEDF  +
mov eax [esi+4] +
cmp eax 0FFFFFFFFh +
jz loc_103BEDF  +
push eax  +
call ds:CloseHandle  +
mov byte ptr [esi+8] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push 80h  +
push 2  +
push edi  +
push edi  +
push 40000000h  +
push [ebp+lpFileName]  +
mov esi ecx +
call ds:CreateFileW  +
mov [esi+4] eax +
cmp eax 0FFFFFFFFh +
jz loc_103BF27  +
call ds:GetLastError  +
cmp eax edi +
jle loc_103BF25  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
mov eax edi +
pop edi  +
mov byte ptr [esi+8] 1 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
xor esi esi +
push esi  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [eax+4]  +
call ds:WriteFile  +
test eax eax +
jnz loc_103BF70  +
call ds:GetLastError  +
cmp eax esi +
jle loc_103BF6E  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+hResData]  +
xor ebx ebx +
push [ebp+lpName]  +
push [ebp+hModule]  +
call ds:FindResourceW  +
mov esi eax +
test esi esi +
jnz loc_103BFB7  +
call ds:GetLastError  +
test eax eax +
jg loc_103BFAB  +
mov esi eax +
jmp loc_103C065  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_103BFA4  +
push esi  +
push [ebp+hModule]  +
call ds:LoadResource  +
mov [ebp+hResData] eax +
test eax eax +
jnz loc_103BFE0  +
call ds:GetLastError  +
test eax eax +
jle loc_103BFDC  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_103C056  +
push edi  +
push eax  +
call ds:LockResource  +
mov edi eax +
test edi edi +
jnz loc_103BFF5  +
mov esi 80004005h +
jmp loc_103C055  +
push esi  +
push [ebp+hModule]  +
call ds:SizeofResource  +
mov esi eax +
test esi esi +
jnz loc_103C01B  +
call ds:GetLastError  +
test eax eax +
jle loc_103C053  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_103C053  +
push esi  +
push 2  +
call ds:GlobalAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_103C005  +
push ebx  +
call ds:GlobalLock  +
test eax eax +
jz loc_103C005  +
push esi  +
push edi  +
push eax  +
call memcpy  +
add esp 0Ch +
push ebx  +
call ds:GlobalUnlock  +
push [ebp+ppstm]  +
push 1  +
push ebx  +
call ds:CreateStreamOnHGlobal  +
mov esi eax +
pop edi  +
cmp [ebp+hResData] 0 +
jz loc_103C065  +
push [ebp+hResData]  +
call ds:FreeResource  +
test esi esi +
jge loc_103C074  +
test ebx ebx +
jz loc_103C074  +
push ebx  +
call ds:GlobalFree  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+pvarg] +
xor ebx ebx +
push eax  +
mov [ebp+ppv] ebx +
call ds:VariantInit  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_10176B0  +
push 15h  +
push ebx  +
push offset stru_10178D0  +
call ds:CoCreateInstance  +
mov esi eax +
cmp esi ebx +
jl loc_103C17A  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+120h]  +
mov esi eax +
cmp esi ebx +
jl loc_103C17A  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+0FCh]  +
mov esi eax +
cmp esi ebx +
jl loc_103C17A  +
cmp [ebp+arg_C] ebx +
jz loc_103C104  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push [ebp+arg_C]  +
push eax  +
call dword ptr [ecx+104h]  +
jmp loc_103C14C  +
cmp [ebp+arg_8] ebx +
jz loc_103C12C  +
push [ebp+arg_8]  +
call ds:SysAllocString  +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
cmp eax ebx +
jnz loc_103C120  +
mov esi 8007000Eh +
jmp loc_103C17A  +
push 8  +
pop eax  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
lea esi [ebp+pvarg] +
jmp loc_103C133  +
mov esi [ebp+arg_4] +
cmp esi ebx +
jz loc_103C175  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
sub esp 10h +
mov edi esp +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+0E8h]  +
mov esi eax +
cmp esi ebx +
jl loc_103C17A  +
xor eax eax +
cmp ax word ptr [ebp+var_4] +
jnz loc_103C161  +
mov esi 80004005h +
jmp loc_103C17A  +
push [ebp+arg_0]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push offset stru_10176B0  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
jmp loc_103C17A  +
mov esi 80070057h +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+ppv] +
cmp eax ebx +
jz loc_103C191  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_10] ebx +
call ds:VariantInit  +
lea eax [ebp+var_10] +
push eax  +
push ebx  +
push 1  +
push 80h  +
push 1022h  +
push [ebp+arg_4]  +
call ds:SHCreateStreamOnFileEx  +
mov esi eax +
cmp esi ebx +
jl loc_103C292  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+pvarg.anonymous_0+8] +
push edx  +
push offset dword_10176D0  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_103C292  +
push 0Dh  +
pop eax  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
cmp [ebp+arg_8] ebx +
jz loc_103C278  +
push off_1055AB8  +
call ds:SysAllocString  +
mov [ebp+var_4] eax +
cmp eax ebx +
jnz loc_103C227  +
mov esi 8007000Eh +
jmp loc_103C292  +
push eax  +
push ebx  +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
call sub_103C081  +
mov esi eax +
cmp esi ebx +
jl loc_103C292  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+0B4h]  +
mov esi eax +
cmp esi ebx +
jl loc_103C292  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov eax [ebp+var_8] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
push [ebp+var_C]  +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push eax  +
mov [ebp+var_4] ebx +
movs   +
call dword ptr [ecx+0A8h]  +
jmp loc_103C290  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+108h]  +
mov esi eax +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
cmp [ebp+var_4] ebx +
jz loc_103C2AA  +
push [ebp+var_4]  +
call ds:SysFreeString  +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_103C2BA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] ebx +
mov eax [ebp+var_C] +
cmp eax ebx +
jz loc_103C2CA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] ebx +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_103C2D7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
push edi  +
xor esi esi +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+ppstm] esi +
mov [ebp+var_8] esi +
mov [ebp+var_C] esi +
call ds:VariantInit  +
lea eax [ebp+ppstm] +
push eax  +
push 17h  +
push offset aTitles_xml  +
push esi  +
call sub_103BF7C  +
mov edi eax +
cmp edi esi +
jl loc_103C373  +
mov eax [ebp+ppstm] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push offset dword_10176D0  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
cmp edi esi +
jl loc_103C373  +
push 0Dh  +
pop eax  +
push esi  +
mov word ptr [ebp+pvarg] ax +
push esi  +
lea eax [ebp+pvarg] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
call sub_103C081  +
mov edi eax +
cmp edi esi +
jl loc_103C373  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+0B4h]  +
mov edi eax +
cmp edi esi +
jl loc_103C373  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
push esi  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+54h]  +
mov edi eax +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+ppstm] +
cmp eax esi +
jz loc_103C38D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+ppstm] esi +
mov eax [ebp+var_8] +
cmp eax esi +
jz loc_103C39D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] esi +
mov eax [ebp+var_C] +
cmp eax esi +
jz loc_103C3AA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov eax 80004001h +
retn 10h  +
***
xor eax eax +
inc eax  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_1012D30 +
xor eax eax +
cmps   +
jz loc_103C405  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_1012D20 +
xor eax eax +
cmps   +
jz loc_103C405  +
mov eax [ebp+10h] +
and dword ptr [eax] 0 +
mov eax 80004002h +
jmp loc_103C40F  +
mov eax [ebp+8] +
mov ecx [ebp+10h] +
mov [ecx] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
push esi  +
xor esi esi +
push edi  +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+var_14] esi +
mov [ebp+var_30] esi +
mov [ebp+var_20] esi +
mov [ebp+var_18] esi +
mov [ebp+var_28] esi +
mov [ebp+var_24] esi +
mov [ebp+var_10] esi +
mov [ebp+var_1C] esi +
mov [ebp+var_8] esi +
mov [ebp+var_4] esi +
mov [ebp+var_C] esi +
call ds:VariantInit  +
push 800h  +
push 8  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax esi +
jnz loc_103C476  +
mov edi 8007000Eh +
jmp loc_103C6A2  +
push ebx  +
mov ebx ds:SysAllocString +
push offset aName  +
call ebx  +
mov [ebp+var_30] eax +
cmp eax esi +
jz loc_103C773  +
push esi  +
push [ebp+arg_0]  +
lea eax [ebp+var_20] +
push esi  +
push eax  +
call sub_103C081  +
mov edi eax +
cmp edi esi +
jl loc_103C6A1  +
mov eax [ebp+var_20] +
mov ecx [eax] +
lea edx [ebp+var_18] +
push edx  +
push eax  +
call dword ptr [ecx+0B4h]  +
mov edi eax +
cmp edi esi +
jl loc_103C6A1  +
push esi  +
call ds:SysFreeString  +
push offset aSection@name  +
call ebx  +
mov [ebp+var_14] eax +
cmp eax esi +
jz loc_103C773  +
mov eax [ebp+var_18] +
mov ecx [eax] +
lea edx [ebp+var_24] +
push edx  +
push [ebp+var_14]  +
push eax  +
call dword ptr [ecx+90h]  +
mov edi eax +
cmp edi esi +
jl loc_103C6A1  +
jmp loc_103C670  +
mov eax [ebp+var_28] +
cmp eax esi +
jz loc_103C50C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_28] esi +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_28] +
push edx  +
push offset dword_10176C0  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
cmp edi esi +
jl loc_103C6A1  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+var_28] +
mov ecx [eax] +
lea edx [ebp+pvarg] +
push edx  +
push [ebp+var_30]  +
push eax  +
call dword ptr [ecx+0B0h]  +
mov edi eax +
cmp edi esi +
jl loc_103C6A1  +
push 8  +
pop eax  +
cmp ax word ptr [ebp+pvarg] +
jnz loc_103C660  +
push dword ptr [ebp-38h]  +
push offset aSection@nameS  +
push 400h  +
push [ebp+lpMem]  +
call sub_101BCA7  +
mov edi eax +
add esp 10h +
cmp edi esi +
jl loc_103C6A1  +
push [ebp+var_14]  +
call ds:SysFreeString  +
push [ebp+lpMem]  +
call ebx  +
mov [ebp+var_14] eax +
cmp eax esi +
jz loc_103C773  +
mov eax [ebp+var_10] +
cmp eax esi +
jz loc_103C5A6  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] esi +
mov eax [ebp+var_18] +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push [ebp+var_14]  +
push eax  +
call dword ptr [ecx+90h]  +
mov edi eax +
cmp edi esi +
jl loc_103C6A1  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
jmp loc_103C635  +
mov eax [ebp+var_1C] +
cmp eax esi +
jz loc_103C5E2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1C] esi +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_1C] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
jmp loc_103C5FD  +
mov eax [ebp+var_8] +
push [ebp+var_C]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
mov edi eax +
cmp edi esi +
jl loc_103C6A1  +
mov eax [ebp+var_C] +
cmp eax esi +
jz loc_103C617  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] esi +
mov eax [ebp+var_1C] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
push esi  +
test eax eax +
jz loc_103C5F1  +
mov eax [ebp+var_18] +
push [ebp+var_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+50h]  +
mov edi eax +
cmp edi esi +
jl loc_103C6A1  +
mov eax [ebp+var_4] +
cmp eax esi +
jz loc_103C64B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] esi +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_103C5D2  +
mov eax [ebp+var_8] +
cmp eax esi +
jz loc_103C670  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] esi +
mov eax [ebp+var_24] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
test eax eax +
jz loc_103C4FC  +
push [ebp+var_18]  +
call sub_103C2E5  +
mov edi eax +
cmp edi esi +
jl loc_103C6A1  +
push esi  +
push [ebp+arg_0]  +
push [ebp+var_20]  +
call sub_103C19F  +
mov edi eax +
pop ebx  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
cmp [ebp+lpMem] esi +
jz loc_103C6C2  +
push [ebp+lpMem]  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+var_14] esi +
jz loc_103C6D0  +
push [ebp+var_14]  +
call ds:SysFreeString  +
cmp [ebp+var_30] esi +
jz loc_103C6DE  +
push [ebp+var_30]  +
call ds:SysFreeString  +
mov eax [ebp+var_20] +
cmp eax esi +
jz loc_103C6EE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_20] esi +
mov eax [ebp+var_18] +
cmp eax esi +
jz loc_103C6FE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_18] esi +
mov eax [ebp+var_8] +
cmp eax esi +
jz loc_103C70E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_8] esi +
mov eax [ebp+var_24] +
cmp eax esi +
jz loc_103C71E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_24] esi +
mov eax [ebp+var_4] +
cmp eax esi +
jz loc_103C72E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_4] esi +
mov eax [ebp+var_10] +
cmp eax esi +
jz loc_103C73E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_10] esi +
mov eax [ebp+var_1C] +
cmp eax esi +
jz loc_103C74E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_1C] esi +
mov eax [ebp+var_C] +
cmp eax esi +
jz loc_103C75E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_C] esi +
mov eax [ebp+var_28] +
cmp eax esi +
jz loc_103C76B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
mov edi 8007000Eh +
jmp loc_103C6A1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
or [ebp+var_1C] 0FFFFFFFFh +
push ebx  +
push esi  +
mov esi ds:VariantInit +
xor ebx ebx +
push edi  +
lea eax [ebp+pvarg] +
push eax  +
mov [ebp+ppv] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_20] offset off_1012D0C +
mov [ebp+var_18] bl +
call esi  +
lea eax [ebp+var_50] +
push eax  +
call esi  +
push [ebp+lpFileName]  +
lea ecx [ebp+var_20] +
call sub_103BEE6  +
mov edi eax +
cmp edi ebx +
jl loc_103C951  +
mov esi ds:SysAllocString +
push 8  +
pop eax  +
push [ebp+arg_0]  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
call esi  +
push 8  +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
pop eax  +
push [ebp+arg_4]  +
mov word ptr [ebp+var_50] ax +
call esi  +
mov esi ds:CoCreateInstance +
mov [ebp+var_48] eax +
lea eax [ebp+ppv] +
push eax  +
push offset stru_10176B0  +
push 15h  +
push ebx  +
mov ebx offset stru_10178D0 +
push ebx  +
call esi  +
mov edi eax +
test edi edi +
jl loc_103C951  +
lea eax [ebp+var_C] +
push eax  +
push offset stru_10176B0  +
push 15h  +
push 0  +
push ebx  +
call esi  +
mov edi eax +
test edi edi +
jl loc_103C951  +
lea eax [ebp+var_14] +
push eax  +
push offset stru_10178C0  +
push 15h  +
push 0  +
push offset stru_10178E0  +
call esi  +
mov edi eax +
test edi edi +
jl loc_103C951  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+120h]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+0FCh]  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
sub esp 10h +
mov edi esp +
lea esi [ebp+pvarg] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+0E8h]  +
mov edi eax +
test edi edi +
jl loc_103C951  +
cmp word ptr [ebp+var_4] 0 +
jz loc_103C951  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+120h]  +
mov eax [ebp+var_C] +
mov ecx [eax] +
push 0  +
push eax  +
call dword ptr [ecx+0FCh]  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_50] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+0E8h]  +
mov edi eax +
test edi edi +
jl loc_103C951  +
cmp word ptr [ebp+var_4] 0 +
jz loc_103C951  +
mov eax [ebp+var_14] +
push [ebp+var_C]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
push 0Dh  +
pop eax  +
mov word ptr [ebp+var_30] ax +
mov eax [ebp+ppv] +
lea edx [ebp+var_10] +
mov [ebp+var_28] eax +
mov eax [ebp+var_14] +
mov ecx [eax] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
mov edi eax +
test edi edi +
jl loc_103C951  +
mov eax [ebp+var_10] +
test eax eax +
jz loc_103C951  +
mov ecx [eax] +
sub esp 10h +
mov edi esp +
lea esi [ebp+var_30] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+1Ch]  +
sub esp 10h +
lea eax [ebp+var_20] +
mov [ebp+var_28] eax +
mov eax [ebp+var_10] +
mov ecx [eax] +
mov edi esp +
lea esi [ebp+var_30] +
movs   +
movs   +
movs   +
push eax  +
movs   +
call dword ptr [ecx+34h]  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+3Ch]  +
mov edi eax +
mov eax [ebp+var_14] +
test eax eax +
jz loc_103C95E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_10] +
test eax eax +
jz loc_103C96B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppv] +
test eax eax +
jz loc_103C978  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_C] +
test eax eax +
jz loc_103C985  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov esi ds:VariantClear +
lea eax [ebp+pvarg] +
push eax  +
call esi  +
lea eax [ebp+var_50] +
push eax  +
call esi  +
lea ecx [ebp+var_20] +
mov [ebp+var_20] offset off_1012D0C +
call sub_103BEC1  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
push 50h  +
lea eax [ebp+var_50] +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+var_50] +
push eax  +
mov [ebp+var_50] 0C0000017h +
call ds:RtlRaiseException  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
mov ecx dword_1055AC4[eax*8] +
cmp ecx [ebp+arg_0] +
jz loc_103CA06  +
inc eax  +
cmp eax 21h +
jb loc_103C9EB  +
mov eax off_1055AC0 +
pop ebp  +
retn 4  +
mov eax off_1055AC0[eax*8] +
jmp loc_103CA02  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
mov ecx dword_1055BCC[eax*8] +
cmp ecx [ebp+arg_0] +
jz loc_103CA36  +
inc eax  +
cmp eax 24h +
jb loc_103CA1B  +
mov eax off_1055BC8 +
pop ebp  +
retn 4  +
mov eax off_1055BC8[eax*8] +
jmp loc_103CA32  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
push esi  +
cmp [ebp+arg_4] eax +
jbe loc_103CA6F  +
mov edx [ebp+arg_0] +
lea ecx [edx+8] +
mov esi [ecx] +
cmp esi [ebp+arg_8] +
jnz loc_103CA66  +
mov esi [ecx+4] +
cmp esi [ebp+arg_C] +
jz loc_103CA76  +
inc eax  +
add ecx 10h +
cmp eax [ebp+arg_4] +
jb loc_103CA57  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
shl eax 4 +
mov eax [eax+edx] +
jmp loc_103CA71  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_103CA91  +
sub eax edx +
sar eax 1 +
jz loc_103CAB7  +
lea ecx [esi+eax*2-2] +
cmp word ptr [ecx] 20h +
jnz loc_103CAB7  +
xor edx edx +
mov [ecx] dx +
dec eax  +
dec ecx  +
dec ecx  +
test eax eax +
ja loc_103CAA5  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
mov [eax+1Ch] ecx +
mov [eax+34h] ecx +
mov [eax+40h] ecx +
mov [eax+28h] ecx +
mov [eax+4Ch] ecx +
mov [eax+70h] ecx +
lea ecx [eax+14h] +
mov [eax+18h] ecx +
mov [ecx] ecx +
lea ecx [eax+4] +
mov [eax+8] ecx +
mov [ecx] ecx +
lea ecx [eax+20h] +
mov [eax+24h] ecx +
mov [ecx] ecx +
lea ecx [eax+38h] +
mov [eax+3Ch] ecx +
mov [ecx] ecx +
lea ecx [eax+44h] +
mov [eax+48h] ecx +
mov [ecx] ecx +
lea ecx [eax+2Ch] +
mov [eax+30h] ecx +
mov [ecx] ecx +
lea ecx [eax+50h] +
mov [eax+54h] ecx +
mov [ecx] ecx +
lea ecx [eax+5Ch] +
mov [eax+60h] ecx +
mov [ecx] ecx +
lea ecx [eax+68h] +
mov [eax+6Ch] ecx +
mov [ecx] ecx +
lea ecx [eax+74h] +
mov dword ptr [eax+58h] 1 +
mov dword ptr [eax+64h] 0Ah +
mov [eax+78h] ecx +
mov [ecx] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
add ecx 20h +
mov eax [ecx] +
jmp loc_103CB6B  +
mov edx [eax+10h] +
cmp edx [ebp+arg_4] +
jnz loc_103CB69  +
mov edx [eax+14h] +
cmp edx [ebp+arg_8] +
jz loc_103CB71  +
mov eax [eax] +
cmp eax ecx +
jnz loc_103CB59  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_C] +
push edi  +
push ebx  +
push esi  +
call sub_103CB4A  +
test eax eax +
jnz loc_103CBD7  +
push 20h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jz loc_103CBD2  +
mov ecx [ebp+arg_4] +
mov [eax+8] ecx +
mov [eax+10h] ebx +
mov [eax+14h] edi +
mov ecx [esi+1Ch] +
mov [eax+18h] ecx +
inc dword ptr [esi+1Ch]  +
lea ecx [esi+20h] +
mov edx [ecx+4] +
mov [eax] ecx +
mov [eax+4] edx +
mov [edx] eax +
mov [ecx+4] eax +
jmp loc_103CBD7  +
call sub_103C9B4  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
push dword ptr [ebx]  +
push offset aKeywords  +
call sub_1023CCF  +
lea edi [ebx+20h] +
cmp [edi] edi +
jz loc_103CC3C  +
push esi  +
mov esi [edi] +
mov eax [esi] +
mov ecx [esi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
push dword ptr [esi+8]  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
push dword ptr [esi+18h]  +
push offset aKeywordNameKey  +
push dword ptr [ebx]  +
call sub_1024264  +
add esp 18h +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
cmp [edi] edi +
jnz loc_103CC01  +
pop esi  +
push dword ptr [ebx]  +
push offset aKeywords_0  +
call sub_1023CCF  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
add edx 5Ch +
mov eax [edx] +
push edi  +
jmp loc_103CC76  +
mov edi [ebp+arg_4] +
push 4  +
pop ecx  +
lea esi [eax+8] +
xor ebx ebx +
cmps   +
jz loc_103CC7C  +
mov eax [eax] +
cmp eax edx +
jnz loc_103CC65  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push esi  +
push [ebp+arg_0]  +
call sub_103CC53  +
mov ebx eax +
test ebx ebx +
jnz loc_103CCE9  +
push 20h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_103CCE4  +
mov eax [ebp+arg_0] +
push edi  +
lea edi [ebx+8] +
movs   +
movs   +
movs   +
movs   +
mov ecx [eax+58h] +
mov [ebx+1Ch] ecx +
inc dword ptr [eax+58h]  +
mov ecx [ebp+arg_8] +
add eax 5Ch +
mov [ebx+18h] ecx +
mov ecx [eax+4] +
mov [ebx] eax +
mov [ebx+4] ecx +
mov [ecx] ebx +
mov [eax+4] ebx +
pop edi  +
jmp loc_103CCE9  +
call sub_103C9B4  +
mov eax [ebx+1Ch] +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 104h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
push dword ptr [ebx]  +
push offset aTasks  +
call sub_1023CCF  +
lea edi [ebx+5Ch] +
cmp [edi] edi +
jz loc_103CD78  +
push esi  +
mov esi [edi] +
mov eax [esi] +
mov ecx [esi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
lea eax [esi+8] +
push eax  +
push 80h  +
lea eax [ebp+var_104] +
push eax  +
call sub_1034A70  +
push dword ptr [esi+18h]  +
mov eax [esi+1Ch] +
push eax  +
lea ecx [ebp+var_104] +
push ecx  +
push eax  +
push offset aTaskValueDEven  +
push dword ptr [ebx]  +
call sub_1024264  +
add esp 18h +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
cmp [edi] edi +
jnz loc_103CD25  +
pop esi  +
push dword ptr [ebx]  +
push offset aTasks_0  +
call sub_1023CCF  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
add edi 4 +
mov eax [edi] +
jmp loc_103CDE1  +
mov edx [ebp+arg_4] +
mov ecx [eax+8] +
mov si [ecx] +
cmp si [edx] +
jnz loc_103CDD6  +
test si si +
jz loc_103CDD2  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_103CDD6  +
add ecx 4 +
add edx 4 +
test si si +
jnz loc_103CDB0  +
xor ecx ecx +
jmp loc_103CDDB  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jz loc_103CDE7  +
mov eax [eax] +
cmp eax edi +
jnz loc_103CDAA  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 78h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_4] +
mov eax [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
push ecx  +
push eax  +
mov [ebp+var_74] eax +
mov [ebp+var_70] ecx +
mov [ebp+var_78] esi +
call sub_103CD99  +
test eax eax +
jnz loc_103CE92  +
push ebx  +
push 10h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_103CE8C  +
push edi  +
push 68h  +
lea eax [ebp+var_6C] +
push 0  +
push eax  +
call memset  +
mov eax [ebp+var_78] +
lea edi [ebp+var_54] +
movs   +
movs   +
movs   +
add esp 0Ch +
cmp dword ptr [eax+30h] 1 +
movs   +
pop edi  +
jnz loc_103CE64  +
mov eax 100h +
mov [ebp+var_68] ax +
mov eax [ebp+var_70] +
push eax  +
mov [ebx+8] eax +
lea eax [ebp+var_6C] +
push eax  +
call sub_1025190  +
mov [ebx+0Ch] eax +
mov eax [ebp+var_74] +
mov ecx [eax+8] +
add eax 4 +
mov [ebx] eax +
mov [ebx+4] ecx +
mov [ecx] ebx +
mov [eax+4] ebx +
jmp loc_103CE91  +
call sub_103C9B4  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test [ebp+arg_0] 9 +
jnz loc_103CEC5  +
test [ebp+arg_0] 12h +
jnz loc_103CEBE  +
mov eax offset aUnknown +
jmp loc_103CECA  +
mov eax offset aBitmap +
jmp loc_103CECA  +
mov eax offset aValuemap +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
add ecx 44h +
mov eax [ecx] +
jmp loc_103CEEC  +
mov edx [eax+8] +
cmp edx [ebp+arg_4] +
jz loc_103CEF2  +
mov eax [eax] +
cmp eax ecx +
jnz loc_103CEE2  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push ebx  +
push edi  +
call sub_103CED3  +
mov esi eax +
test esi esi +
jnz loc_103CF55  +
push 14h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_103CF50  +
mov al [ebp+arg_8] +
mov [esi+0Ch] al +
mov [esi+8] ebx +
mov eax [edi+40h] +
mov [esi+10h] eax +
inc dword ptr [edi+40h]  +
lea eax [edi+44h] +
mov ecx [eax+4] +
mov [esi] eax +
mov [esi+4] ecx +
mov [ecx] esi +
mov [eax+4] esi +
jmp loc_103CF55  +
call sub_103C9B4  +
mov eax [esi+10h] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
push dword ptr [ebx]  +
push offset aOpcodes  +
call sub_1023CCF  +
lea edi [ebx+44h] +
cmp [edi] edi +
jz loc_103CFBC  +
push esi  +
mov esi [edi] +
mov eax [esi] +
mov ecx [esi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
push dword ptr [esi+8]  +
movzx eax byte ptr [esi+0Ch] +
push dword ptr [esi+10h]  +
push eax  +
push offset aOpcodeValueDNa  +
push dword ptr [ebx]  +
call sub_1024264  +
add esp 14h +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
cmp [edi] edi +
jnz loc_103CF82  +
pop esi  +
push dword ptr [ebx]  +
push offset aOpcodes_0  +
call sub_1023CCF  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
add edx 68h +
mov eax [edx] +
push edi  +
jmp loc_103CFFE  +
mov edi [ebp+arg_8] +
push 4  +
pop ecx  +
lea esi [eax+8] +
xor ebx ebx +
cmps   +
jnz loc_103CFFC  +
mov ecx [eax+18h] +
cmp ecx [ebp+arg_4] +
jz loc_103D004  +
mov eax [eax] +
cmp eax edx +
jnz loc_103CFE5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push [ebp+arg_8]  +
mov edi [ebp+arg_4] +
push edi  +
push esi  +
call sub_103CFD3  +
mov ebx eax +
test ebx ebx +
jnz loc_103D07A  +
push 24h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_103D075  +
mov eax [ebp+arg_C] +
mov [ebx+20h] eax +
mov [ebx+18h] edi +
mov eax [esi+64h] +
mov [ebx+1Ch] eax +
inc dword ptr [esi+64h]  +
mov esi [ebp+arg_8] +
mov eax [ebp+arg_0] +
lea edi [ebx+8] +
movs   +
movs   +
movs   +
movs   +
mov ecx [eax+6Ch] +
add eax 68h +
mov [ebx] eax +
mov [ebx+4] ecx +
mov [ecx] ebx +
mov [eax+4] ebx +
jmp loc_103D07A  +
call sub_103C9B4  +
mov eax [ebx+1Ch] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
push dword ptr [ebx]  +
push offset aOpcodes  +
call sub_1023CCF  +
lea edi [ebx+68h] +
cmp [edi] edi +
jz loc_103D0E1  +
push esi  +
mov esi [edi] +
mov eax [esi] +
mov ecx [esi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
push dword ptr [esi+20h]  +
mov eax [esi+1Ch] +
push dword ptr [esi+18h]  +
push eax  +
push eax  +
push offset aOpcodeValueD_0  +
push dword ptr [ebx]  +
call sub_1024264  +
add esp 18h +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
cmp [edi] edi +
jnz loc_103D0A7  +
pop esi  +
push dword ptr [ebx]  +
push offset aOpcodes_0  +
call sub_1023CCF  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
add ecx 38h +
mov eax [ecx] +
jmp loc_103D111  +
mov edx [eax+8] +
cmp edx [ebp+arg_4] +
jz loc_103D117  +
mov eax [eax] +
cmp eax ecx +
jnz loc_103D107  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push ebx  +
push edi  +
call sub_103D0F8  +
mov esi eax +
test esi esi +
jnz loc_103D17C  +
push 14h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_103D177  +
mov ax [ebp+arg_8] +
mov [esi+0Ch] ax +
mov [esi+8] ebx +
mov eax [edi+34h] +
mov [esi+10h] eax +
inc dword ptr [edi+34h]  +
lea eax [edi+38h] +
mov ecx [eax+4] +
mov [esi] eax +
mov [esi+4] ecx +
mov [ecx] esi +
mov [eax+4] esi +
jmp loc_103D17C  +
call sub_103C9B4  +
mov eax [esi+10h] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
push dword ptr [ebx]  +
push offset aTasks  +
call sub_1023CCF  +
lea edi [ebx+38h] +
cmp [edi] edi +
jz loc_103D1E3  +
push esi  +
mov esi [edi] +
mov eax [esi] +
mov ecx [esi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
push dword ptr [esi+8]  +
movzx eax word ptr [esi+0Ch] +
push dword ptr [esi+10h]  +
push eax  +
push offset aTaskValueDName  +
push dword ptr [ebx]  +
call sub_1024264  +
add esp 14h +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
cmp [edi] edi +
jnz loc_103D1A9  +
pop esi  +
push dword ptr [ebx]  +
push offset aTasks_0  +
call sub_1023CCF  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
add ecx 2Ch +
mov eax [ecx] +
jmp loc_103D213  +
mov edx [eax+8] +
cmp edx [ebp+arg_4] +
jz loc_103D219  +
mov eax [eax] +
cmp eax ecx +
jnz loc_103D209  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push ebx  +
push edi  +
call sub_103D1FA  +
mov esi eax +
test esi esi +
jnz loc_103D27C  +
push 14h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_103D277  +
mov al [ebp+arg_8] +
mov [esi+0Ch] al +
mov [esi+8] ebx +
mov eax [edi+28h] +
mov [esi+10h] eax +
inc dword ptr [edi+28h]  +
lea eax [edi+2Ch] +
mov ecx [eax+4] +
mov [esi] eax +
mov [esi+4] ecx +
mov [ecx] esi +
mov [eax+4] esi +
jmp loc_103D27C  +
call sub_103C9B4  +
mov eax [esi+10h] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
push dword ptr [ebx]  +
push offset aLevels  +
call sub_1023CCF  +
lea edi [ebx+2Ch] +
cmp [edi] edi +
jz loc_103D2E3  +
push esi  +
mov esi [edi] +
mov eax [esi] +
mov ecx [esi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
push dword ptr [esi+8]  +
movzx eax byte ptr [esi+0Ch] +
push dword ptr [esi+10h]  +
push eax  +
push offset aLevelValueDNam  +
push dword ptr [ebx]  +
call sub_1024264  +
add esp 14h +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
cmp [edi] edi +
jnz loc_103D2A9  +
pop esi  +
push dword ptr [ebx]  +
push offset aLevels_0  +
call sub_1023CCF  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
add ecx 14h +
mov eax [ecx] +
jmp loc_103D313  +
mov dl [eax+10h] +
cmp dl [ebp+arg_4] +
jz loc_103D319  +
mov eax [eax] +
cmp eax ecx +
jnz loc_103D309  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
push dword ptr [edi]  +
push offset aChannels  +
call sub_1023CCF  +
lea ebx [edi+14h] +
cmp [ebx] ebx +
jz loc_103D3EE  +
push esi  +
mov esi [ebx] +
mov eax [esi] +
mov ecx [esi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
movzx eax byte ptr [esi+10h] +
cdq   +
push edx  +
push eax  +
push 4  +
push offset off_1056088  +
call sub_103CA44  +
push dword ptr [esi+14h]  +
test eax eax +
jz loc_103D37C  +
push eax  +
push offset aImportchannelN  +
push dword ptr [edi]  +
call sub_1024264  +
add esp 10h +
jmp loc_103D3D6  +
movzx eax byte ptr [esi+10h] +
push eax  +
push offset aChannelValueDC  +
push dword ptr [edi]  +
call sub_1024264  +
mov eax [esi+8] +
add esp 10h +
test eax eax +
jz loc_103D39F  +
push eax  +
push offset aNameWsTypeDebu  +
jmp loc_103D3A9  +
movzx eax byte ptr [esi+10h] +
push eax  +
push offset aNameDummychann  +
push dword ptr [edi]  +
call sub_1024264  +
mov eax [esi+0Ch] +
add esp 0Ch +
test eax eax +
jbe loc_103D3CA  +
push eax  +
push offset aMessageString_  +
push dword ptr [edi]  +
call sub_1024264  +
add esp 0Ch +
push dword ptr [edi]  +
push offset asc_1014220  +
call sub_1023CCF  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
cmp [ebx] ebx +
jnz loc_103D344  +
pop esi  +
push dword ptr [edi]  +
push offset aChannels_0  +
call sub_1023CCF  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx+64h] +
cmp eax [edx+64h] +
jz loc_103D421  +
xor al al +
jmp loc_103D552  +
mov ecx [ebx+68h] +
cmp ecx [edx+68h] +
jnz loc_103D41A  +
and [ebp+var_4] 0 +
push esi  +
push edi  +
test eax eax +
jbe loc_103D52D  +
mov [ebp+arg_0] edx +
sub [ebp+arg_0] ebx +
lea edi [edx+7Ah] +
lea eax [ebx+78h] +
mov ecx [eax-8] +
cmp ecx [edi-0Ah] +
jnz loc_103D54A  +
mov ecx [ebp+arg_0] +
mov edx [eax+ecx-4] +
mov ecx [eax-4] +
add edx [ebp+arg_4] +
add ecx ebx +
mov si [ecx] +
cmp si [edx] +
jnz loc_103D484  +
test si si +
jz loc_103D480  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_103D484  +
add ecx 4 +
add edx 4 +
test si si +
jnz loc_103D45E  +
xor ecx ecx +
jmp loc_103D489  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_103D54A  +
test byte ptr [eax-8] 1 +
mov cx [eax] +
mov edx [ebp+arg_0] +
jz loc_103D4B0  +
cmp cx [edx+eax] +
jnz loc_103D54A  +
mov cx [eax+2] +
cmp cx [edi] +
jmp loc_103D4FF  +
cmp cx [edx+eax] +
jnz loc_103D54A  +
mov cx [eax+2] +
cmp cx [edi] +
jnz loc_103D54A  +
mov edx [edi+2] +
mov ecx [eax+4] +
add edx [ebp+arg_4] +
add ecx ebx +
mov si [ecx] +
cmp si [edx] +
jnz loc_103D4F8  +
test si si +
jz loc_103D4F4  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_103D4F8  +
add ecx 4 +
add edx 4 +
test si si +
jnz loc_103D4D2  +
xor ecx ecx +
jmp loc_103D4FD  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jnz loc_103D54A  +
mov cx [eax+8] +
cmp cx [edi+6] +
jnz loc_103D54A  +
mov cx [eax+0Ah] +
cmp cx [edi+8] +
jnz loc_103D54A  +
inc [ebp+var_4]  +
mov ecx [ebp+var_4] +
add eax 18h +
add edi 18h +
cmp ecx [ebx+64h] +
jb loc_103D443  +
mov edx [ebp+arg_4] +
mov eax [ebx+54h] +
test eax eax +
jz loc_103D54E  +
mov ecx [ebx+58h] +
cmp ecx [edx+58h] +
jnz loc_103D54A  +
mov edi [edx+54h] +
add edi edx +
lea esi [eax+ebx] +
xor eax eax +
cmps   +
jz loc_103D54E  +
xor al al +
jmp loc_103D550  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
add edi 50h +
mov esi [edi] +
jmp loc_103D57E  +
push [ebp+arg_4]  +
push dword ptr [esi+10h]  +
call sub_103D405  +
test al al +
jnz loc_103D58A  +
mov esi [esi] +
cmp esi edi +
jnz loc_103D56D  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
mov eax esi +
jmp loc_103D584  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
push ebx  +
push edi  +
call sub_103D55C  +
mov esi eax +
test esi esi +
jnz loc_103D5ED  +
push 14h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_103D5E8  +
mov eax [edi+4Ch] +
mov [esi+8] eax +
inc dword ptr [edi+4Ch]  +
mov eax [ebx+64h] +
mov [esi+0Ch] eax +
lea eax [edi+50h] +
mov [esi+10h] ebx +
mov ecx [eax+4] +
mov [esi] eax +
mov [esi+4] ecx +
mov [ecx] esi +
mov [eax+4] esi +
jmp loc_103D5ED  +
call sub_103C9B4  +
mov eax [esi+8] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_8] +
imul eax eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
lea esi [eax+ebx+70h] +
mov eax [esi+4] +
test eax eax +
jbe loc_103D72E  +
add eax ebx +
cmp [ebp+arg_C] 0 +
push edi  +
mov edi [ebp+arg_0] +
mov dword ptr [ebp+arg_8] eax +
jz loc_103D636  +
push dword ptr [edi]  +
push offset asc_100182C  +
call sub_1023CCF  +
push dword ptr [ebp+arg_8]  +
push offset aDataNameWs  +
push dword ptr [edi]  +
call sub_1024264  +
movzx eax word ptr [esi+8] +
add esp 0Ch +
test ax ax +
jz loc_103D66A  +
movzx eax ax +
push eax  +
call sub_103C9E4  +
push eax  +
push offset aIntypeWs  +
push dword ptr [edi]  +
call sub_1024264  +
add esp 0Ch +
movzx eax word ptr [esi+0Ah] +
test ax ax +
jz loc_103D68C  +
movzx eax ax +
push eax  +
call sub_103CA14  +
push eax  +
push offset aOuttypeWs  +
push dword ptr [edi]  +
call sub_1024264  +
add esp 0Ch +
mov eax [esi+0Ch] +
test eax eax +
jbe loc_103D6B2  +
add eax ebx +
push ebx  +
push eax  +
push edi  +
mov dword ptr [ebp+arg_C] eax +
call sub_103CDF2  +
push dword ptr [ebp+arg_C]  +
push offset aMapWs  +
push dword ptr [edi]  +
call sub_1024264  +
add esp 0Ch +
mov eax [esi] +
test al 2 +
jz loc_103D6CD  +
movzx eax word ptr [esi+12h] +
imul eax eax +
mov eax [eax+ebx+74h] +
add eax ebx +
push eax  +
push offset aLengthWs  +
jmp loc_103D6E4  +
test al 10h +
jz loc_103D6EE  +
movzx eax word ptr [esi+12h] +
cmp ax 1 +
jbe loc_103D6EE  +
movzx eax ax +
push eax  +
push offset aLengthD  +
push dword ptr [edi]  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi] 4 +
movzx eax word ptr [esi+10h] +
jz loc_103D708  +
imul eax eax +
mov eax [eax+ebx+74h] +
add eax ebx +
push eax  +
push offset aCountWs  +
jmp loc_103D717  +
cmp ax 1 +
jbe loc_103D721  +
movzx eax ax +
push eax  +
push offset aCountD  +
push dword ptr [edi]  +
call sub_1024264  +
add esp 0Ch +
push dword ptr [edi]  +
push offset aData_1  +
call sub_1023CCF  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
add edi 74h +
mov eax [edi] +
jmp loc_103D781  +
mov edx [ebp+arg_4] +
mov ecx [eax+8] +
mov si [ecx] +
cmp si [edx] +
jnz loc_103D776  +
test si si +
jz loc_103D772  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_103D776  +
add ecx 4 +
add edx 4 +
test si si +
jnz loc_103D750  +
xor ecx ecx +
jmp loc_103D77B  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jz loc_103D787  +
mov eax [eax] +
cmp eax edi +
jnz loc_103D74A  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0B0h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
push dword ptr [ebx]  +
lea esi [ebp+var_B0] +
push offset aLocalization  +
call sub_1023CCF  +
push 55h  +
mov eax esi +
push eax  +
call ds:GetUserDefaultLocaleName  +
test eax eax +
jnz loc_103D7D3  +
mov esi offset aEnUs +
push esi  +
push offset aResourcesCultu  +
push dword ptr [ebx]  +
call sub_1024264  +
add esp 0Ch +
push dword ptr [ebx]  +
push offset aStringtable_1  +
call sub_1023CCF  +
lea edi [ebx+74h] +
jmp loc_103D824  +
mov esi [edi] +
mov eax [esi] +
mov ecx [esi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
push dword ptr [esi+8]  +
push dword ptr [esi+0Ch]  +
push offset aStringIdString  +
push dword ptr [ebx]  +
call sub_1024264  +
add esp 10h +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
cmp [edi] edi +
jnz loc_103D7F4  +
push dword ptr [ebx]  +
push offset aStringtable_2  +
call sub_1023CCF  +
push dword ptr [ebx]  +
push offset aResources  +
call sub_1023CCF  +
push dword ptr [ebx]  +
push offset aLocalization_0  +
call sub_1023CCF  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
mov eax [edx] +
push ebx  +
push esi  +
push edi  +
jmp loc_103D882  +
mov edi [ebp+arg_0] +
push 4  +
pop ecx  +
lea esi [eax+8] +
xor ebx ebx +
cmps   +
jz loc_103D888  +
mov eax [eax] +
cmp eax edx +
jnz loc_103D871  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov edx [ebp+arg_0] +
mov eax [edx+30h] +
push ebx  +
push esi  +
push edi  +
cmp eax 1 +
jnz loc_103D8BD  +
push 4  +
pop ecx  +
mov edi offset dword_10016EC +
lea esi [edx+10h] +
xor ebx ebx +
cmps   +
jz loc_103D979  +
test eax eax +
jnz loc_103D8CA  +
mov [ebp+var_4] offset dword_1057988 +
jmp loc_103D8DA  +
cmp eax 1 +
jnz loc_103D979  +
mov [ebp+var_4] offset dword_1057980 +
push [ebp+var_4]  +
push edx  +
call sub_103D862  +
mov ebx eax +
test ebx ebx +
jnz loc_103D948  +
push 2Ch  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_103D943  +
lea eax [ebx+24h] +
mov [ebx+28h] eax +
mov [eax] eax +
mov eax [ebp+arg_0] +
lea edi [ebx+8] +
mov esi eax +
movs   +
movs   +
movs   +
movs   +
mov ecx [eax+34h] +
test ecx ecx +
jz loc_103D91C  +
add ecx eax +
mov [ebx+18h] ecx +
mov ecx [eax+50h] +
test ecx ecx +
jz loc_103D928  +
add ecx eax +
mov [ebx+1Ch] ecx +
mov eax [eax+30h] +
mov [ebx+20h] eax +
mov eax [ebp+var_4] +
mov ecx [eax+4] +
mov [ebx] eax +
mov [ebx+4] ecx +
mov [ecx] ebx +
mov [eax+4] ebx +
jmp loc_103D948  +
call sub_103C9B4  +
push 0Ch  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jz loc_103D974  +
mov ecx [ebp+arg_0] +
mov [eax+8] ecx +
lea ecx [ebx+24h] +
mov edx [ecx+4] +
mov [eax] ecx +
mov [eax+4] edx +
mov [edx] eax +
mov [ecx+4] eax +
jmp loc_103D979  +
call sub_103C9B4  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi [edi] +
jmp loc_103D9A2  +
mov eax [esi+8] +
test eax eax +
jz loc_103D9A0  +
push eax  +
call sub_103D894  +
mov esi [esi] +
cmp esi edi +
jnz loc_103D993  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi dword_1079AD8 +
mov ebx offset dword_1079AD8 +
cmp esi ebx +
jz loc_103D9EC  +
push edi  +
lea edi [esi+2Ch] +
mov [ebp+var_4] 100h +
cmp [edi] edi +
jz loc_103D9DD  +
push edi  +
call sub_103D985  +
add edi 8 +
dec [ebp+var_4]  +
jnz loc_103D9D3  +
mov esi [esi] +
cmp esi ebx +
jnz loc_103D9C9  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push [ebp+arg_C]  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_103D2FA  +
test eax eax +
jnz loc_103DA95  +
mov eax [ebp+arg_4] +
push edi  +
test eax eax +
jz loc_103DA2E  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_103DA1A  +
sub eax edx +
sar eax 1 +
lea edi [eax+eax+2] +
jmp loc_103DA30  +
xor edi edi +
push esi  +
lea eax [edi+18h] +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_103DA8E  +
cmp [ebp+arg_4] 0 +
jz loc_103DA63  +
push [ebp+arg_4]  +
shr edi 1 +
lea eax [esi+18h] +
push edi  +
push eax  +
mov [esi+8] eax +
call sub_101F55E  +
jmp loc_103DA67  +
and dword ptr [esi+8] 0 +
mov eax [ebp+arg_8] +
mov [esi+0Ch] eax +
mov al byte ptr [ebp+arg_C] +
mov [esi+10h] al +
mov eax [ebx+10h] +
mov [esi+14h] eax +
inc dword ptr [ebx+10h]  +
lea eax [ebx+14h] +
mov ecx [eax+4] +
mov [esi] eax +
mov [esi+4] ecx +
mov [ecx] esi +
mov [eax+4] esi +
jmp loc_103DA93  +
call sub_103C9B4  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov eax [esi+68h] +
xor ebx ebx +
mov dword ptr [ebp+var_8] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_10] eax +
cmp eax 1 +
jb loc_103DC3B  +
imul eax eax +
push edi  +
mov edi ds:HeapAlloc +
push eax  +
push 8  +
push hHeap  +
call edi  +
mov [ebp+lpMem] eax +
cmp eax ebx +
jnz loc_103DAE4  +
call sub_103C9B4  +
mov eax [ebp+var_10] +
shl eax 4 +
push eax  +
push 8  +
push hHeap  +
call edi  +
mov edi ds:HeapFree +
mov [ebp+var_C] eax +
cmp eax ebx +
jnz loc_103DB18  +
cmp [ebp+lpMem] ebx +
jz loc_103DB13  +
push [ebp+lpMem]  +
push ebx  +
push hHeap  +
call edi  +
call sub_103C9B4  +
xor eax eax +
cmp [ebp+var_10] ebx +
jbe loc_103DB5B  +
mov esi [ebp+var_C] +
mov ebx [ebp+lpMem] +
add esi 0Ch +
inc eax  +
push eax  +
push offset aD_2  +
push 0Ah  +
push ebx  +
mov [ebp+var_18] eax +
call sub_101BCA7  +
xor eax eax +
inc eax  +
mov [esi-4] eax +
mov [esi] eax +
mov eax [ebp+var_18] +
mov [esi-0Ch] ebx +
add esp 10h +
add ebx 14h +
add esi 10h +
cmp eax [ebp+var_10] +
jb loc_103DB28  +
mov esi [ebp+arg_4] +
xor ebx ebx +
cmp dword ptr [ebp+var_8] ebx +
jz loc_103DB6C  +
push dword ptr [ebp+var_8]  +
push ebx  +
push hHeap  +
call edi  +
mov eax [ebp+var_14] +
add eax eax +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov dword ptr [ebp+var_8] eax +
cmp eax ebx +
jnz loc_103DBAE  +
cmp [ebp+lpMem] ebx +
jz loc_103DB98  +
push [ebp+lpMem]  +
push ebx  +
push hHeap  +
call edi  +
cmp [ebp+var_C] ebx +
jz loc_103DBA9  +
push [ebp+var_C]  +
push ebx  +
push hHeap  +
call edi  +
call sub_103C9B4  +
mov eax [esi+54h] +
cmp eax ebx +
jnz loc_103DBB9  +
xor eax eax +
jmp loc_103DBBB  +
add eax esi +
lea ecx [ebp+var_14] +
push ecx  +
push dword ptr [ebp+var_8]  +
push [ebp+var_14]  +
push ebx  +
push [ebp+var_10]  +
push [ebp+var_C]  +
push dword ptr [esi+58h]  +
push eax  +
call EvtIntRenderResourceEventTemplate  +
cmp eax 7Ah +
jz loc_103DB5B  +
mov esi [ebp+arg_0] +
push dword ptr [esi]  +
push offset aUserdata  +
call sub_1023CCF  +
push dword ptr [ebp+var_8]  +
push offset aWs_1  +
push dword ptr [esi]  +
call sub_1024264  +
add esp 0Ch +
push dword ptr [esi]  +
push offset aUserdata_0  +
call sub_1023CCF  +
cmp [ebp+lpMem] ebx +
jz loc_103DC18  +
push [ebp+lpMem]  +
push ebx  +
push hHeap  +
call edi  +
cmp dword ptr [ebp+var_8] ebx +
jz loc_103DC29  +
push dword ptr [ebp+var_8]  +
push ebx  +
push hHeap  +
call edi  +
cmp [ebp+var_C] ebx +
jz loc_103DC3A  +
push [ebp+var_C]  +
push ebx  +
push hHeap  +
call edi  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_0] +
push dword ptr [ebx]  +
push offset aTemplates  +
call sub_1023CCF  +
lea eax [ebx+50h] +
cmp [eax] eax +
jz loc_103DDAC  +
push esi  +
push edi  +
mov esi [eax] +
mov eax [esi] +
mov ecx [esi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
push dword ptr [esi+8]  +
push offset aTemplateTidTid  +
push dword ptr [ebx]  +
call sub_1024264  +
mov eax [esi+10h] +
mov eax [eax+68h] +
add esp 0Ch +
mov [ebp+var_C] eax +
test eax eax +
jbe loc_103DD74  +
and [ebp+var_4] 0 +
test eax eax +
jbe loc_103DD74  +
and [ebp+var_8] 0 +
mov ecx [ebp+var_8] +
mov eax [esi+10h] +
lea edi [ecx+eax+70h] +
mov ecx [edi+4] +
test ecx ecx +
jbe loc_103DD61  +
add ecx eax +
test byte ptr [edi] 1 +
jnz loc_103DCD7  +
push 0  +
push [ebp+var_4]  +
push eax  +
push ebx  +
call sub_103D5FC  +
jmp loc_103DD61  +
push ecx  +
push offset aStructNameWs  +
push dword ptr [ebx]  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [edi] 4 +
jz loc_103DD04  +
movzx ecx word ptr [edi+10h] +
mov eax [esi+10h] +
imul ecx ecx +
mov ecx [ecx+eax+74h] +
add ecx eax +
push ecx  +
push offset aCountWs  +
jmp loc_103DD17  +
movzx eax word ptr [edi+10h] +
cmp ax 1 +
jbe loc_103DD21  +
movzx eax ax +
push eax  +
push offset aCountD  +
push dword ptr [ebx]  +
call sub_1024264  +
add esp 0Ch +
push dword ptr [ebx]  +
push offset asc_10031B4  +
call sub_1023CCF  +
movzx eax word ptr [edi+8] +
movzx ecx word ptr [edi+0Ah] +
lea edi [ecx+eax] +
mov [ebp+arg_0] eax +
cmp eax edi +
jnb loc_103DD55  +
push 1  +
push [ebp+arg_0]  +
push dword ptr [esi+10h]  +
push ebx  +
call sub_103D5FC  +
inc [ebp+arg_0]  +
cmp [ebp+arg_0] edi +
jb loc_103DD3F  +
push dword ptr [ebx]  +
push offset aStruct  +
call sub_1023CCF  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
add [ebp+var_8] 18h +
cmp eax [ebp+var_C] +
jb loc_103DCAA  +
mov eax [esi+10h] +
test byte ptr [eax+6Ch] 2 +
jz loc_103DD84  +
push eax  +
push ebx  +
call sub_103DA9F  +
push dword ptr [ebx]  +
push offset aTemplate  +
call sub_1023CCF  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
lea eax [ebx+50h] +
cmp [eax] eax +
jnz loc_103DC6B  +
pop edi  +
pop esi  +
push dword ptr [ebx]  +
push offset aTemplates_0  +
call sub_1023CCF  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_4]  +
call sub_103CA83  +
push [ebp+arg_4]  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_103D739  +
mov esi eax +
test esi esi +
jnz loc_103DE47  +
mov eax [ebp+arg_4] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_103DDE9  +
sub eax edx +
push edi  +
sar eax 1 +
lea edi [eax+eax+2] +
lea eax [edi+10h] +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_103DE41  +
push [ebp+arg_4]  +
lea eax [esi+10h] +
shr edi 1 +
push edi  +
push eax  +
mov [esi+8] eax +
call sub_101F55E  +
mov eax [ebx+70h] +
mov [esi+0Ch] eax +
inc dword ptr [ebx+70h]  +
lea eax [ebx+74h] +
mov ecx [eax+4] +
mov [esi] eax +
mov [esi+4] ecx +
mov [ecx] esi +
mov [eax+4] esi +
jmp loc_103DE46  +
call sub_103C9B4  +
pop edi  +
mov eax [esi+0Ch] +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_103E0D6  +
mov eax [esi+30h] +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+arg_0] eax +
cmp eax 1 +
jnz loc_103DE83  +
mov eax [edi+0Ch] +
lea ecx [eax+1] +
mov [edi+0Ch] ecx +
jmp loc_103DE87  +
movzx eax word ptr [esi+20h] +
push eax  +
push offset aEventValueD  +
push dword ptr [edi]  +
call sub_1024264  +
movzx eax byte ptr [esi+22h] +
push eax  +
push offset aVersionD  +
push dword ptr [edi]  +
call sub_1024264  +
add esp 18h +
cmp dword ptr [esi+64h] 0 +
jz loc_103DEC5  +
push esi  +
push edi  +
call sub_103D593  +
push eax  +
push offset aTemplateTid_D  +
push dword ptr [edi]  +
call sub_1024264  +
add esp 0Ch +
mov eax [esi+48h] +
push ebx  +
test eax eax +
jz loc_103DF31  +
cmp [ebp+arg_0] 1 +
lea ebx [eax+esi] +
jnz loc_103DEEF  +
push ebx  +
push edi  +
call sub_103DDC2  +
push eax  +
lea eax [esi+10h] +
push eax  +
movzx eax byte ptr [esi+25h] +
push eax  +
push edi  +
call sub_103D010  +
jmp loc_103DF21  +
movzx eax byte ptr [esi+25h] +
cdq   +
push edx  +
push eax  +
push 1Ah  +
push offset off_1055DE8  +
call sub_103CA44  +
test eax eax +
jz loc_103DF0E  +
push eax  +
push offset aOpcodeWs  +
jmp loc_103DF27  +
push ebx  +
push edi  +
call sub_103DDC2  +
movzx ecx byte ptr [esi+25h] +
push ecx  +
push eax  +
push edi  +
call sub_103CEFB  +
push eax  +
push offset aOpcodeOpcodeD  +
push dword ptr [edi]  +
call sub_1024264  +
add esp 0Ch +
cmp dword ptr [esi+3Ch] 0 +
jz loc_103DF58  +
movzx eax byte ptr [esi+23h] +
push eax  +
push edi  +
call sub_103D2FA  +
test eax eax +
jz loc_103DF58  +
push dword ptr [eax+14h]  +
push offset aChannelChannel  +
push dword ptr [edi]  +
call sub_1024264  +
add esp 0Ch +
mov ebx [esi+38h] +
test ebx ebx +
jz loc_103DFA3  +
movzx eax byte ptr [esi+24h] +
cdq   +
push edx  +
push eax  +
push 10h  +
push offset off_1055CE8  +
call sub_103CA44  +
test eax eax +
jz loc_103DF7E  +
push eax  +
push offset aLevelWs  +
jmp loc_103DF99  +
add ebx esi +
push ebx  +
push edi  +
call sub_103DDC2  +
movzx ecx byte ptr [esi+24h] +
push ecx  +
push eax  +
push edi  +
call sub_103D222  +
push eax  +
push offset aLevelLevelD  +
push dword ptr [edi]  +
call sub_1024264  +
add esp 0Ch +
cmp [ebp+arg_0] 1 +
mov eax [esi+44h] +
jnz loc_103DFCC  +
mov ecx offset aNone +
test eax eax +
jz loc_103DFB8  +
lea ecx [eax+esi] +
push ecx  +
push edi  +
call sub_103DDC2  +
push eax  +
lea eax [esi+10h] +
push eax  +
push edi  +
call sub_103CC88  +
jmp loc_103DFE5  +
test eax eax +
jz loc_103DFF5  +
add eax esi +
push eax  +
push edi  +
call sub_103DDC2  +
movzx ecx word ptr [esi+26h] +
push ecx  +
push eax  +
push edi  +
call sub_103D120  +
push eax  +
push offset aTaskTaskD  +
push dword ptr [edi]  +
call sub_1024264  +
add esp 0Ch +
cmp dword ptr [esi+40h] 0 +
jz loc_103E0A8  +
push dword ptr [edi]  +
mov eax [esi+28h] +
mov ebx [esi+2Ch] +
push offset aKeywords_1  +
mov [ebp+var_8] eax +
call sub_1023CCF  +
mov eax [ebp+var_8] +
and ebx 0FFFFFFh +
mov [ebp+var_8] eax +
or eax ebx +
mov [ebp+var_4] ebx +
jz loc_103E09C  +
jmp loc_103E02C  +
mov ebx [ebp+var_4] +
mov eax [ebp+var_8] +
add eax 0FFFFFFFFh +
mov ecx ebx +
adc ecx 0FFFFFFFFh +
xor eax [ebp+var_8] +
xor ecx ebx +
add eax 1 +
adc ecx 0 +
mov ebx ecx +
shrd eax ebx +
shr ebx 1 +
push ebx  +
push eax  +
push 10h  +
push offset off_1055F88  +
mov [ebp+var_10] eax +
call sub_103CA44  +
test eax eax +
jz loc_103E067  +
push eax  +
push offset aWs_2  +
jmp loc_103E07D  +
push ebx  +
push [ebp+var_10]  +
push edi  +
call sub_103CB4A  +
test eax eax +
jz loc_103E087  +
push dword ptr [eax+18h]  +
push offset aKeywordD  +
push dword ptr [edi]  +
call sub_1024264  +
add esp 0Ch +
mov eax [ebp+var_10] +
not eax  +
and [ebp+var_8] eax +
mov eax [ebp+var_8] +
not ebx  +
and [ebp+var_4] ebx +
or eax [ebp+var_4] +
jnz loc_103E029  +
push dword ptr [edi]  +
push offset asc_10147B0  +
call sub_1023CCF  +
mov eax [esi+4Ch] +
pop ebx  +
test eax eax +
jz loc_103E0C9  +
add eax esi +
push eax  +
push edi  +
call sub_103DDC2  +
push eax  +
push offset aMessageStrin_0  +
push dword ptr [edi]  +
call sub_1024264  +
add esp 0Ch +
push dword ptr [edi]  +
push offset asc_1002AE8  +
call sub_1023CCF  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
add edi 24h +
mov esi [edi] +
jmp loc_103E0FE  +
push [ebp+arg_0]  +
push dword ptr [esi+8]  +
call sub_103DE55  +
mov esi [esi] +
cmp esi edi +
jnz loc_103E0F1  +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+dwBytes] +
lea eax [ebp+dwBytes] +
push eax  +
xor esi esi +
push esi  +
push 2  +
add edi 8 +
push edi  +
mov [ebp+dwBytes] esi +
call TdhEnumerateProviderFieldInformation  +
mov ebx eax +
cmp ebx 7Ah +
jnz loc_103E163  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_103E15E  +
lea eax [ebp+dwBytes] +
push eax  +
push esi  +
push 2  +
push edi  +
call TdhEnumerateProviderFieldInformation  +
mov ebx eax +
jmp loc_103E163  +
call sub_103C9B4  +
test ebx ebx +
jnz loc_103E1B4  +
and [ebp+var_4] ebx +
cmp [esi] ebx +
jbe loc_103E1B4  +
lea edi [esi+0Ch] +
mov al [edi+4] +
mov byte ptr [ebp+var_8] al +
mov eax [edi-4] +
test eax eax +
jbe loc_103E183  +
lea ebx [eax+esi] +
jmp loc_103E185  +
xor ebx ebx +
mov eax [edi] +
test eax eax +
jbe loc_103E198  +
add eax esi +
push eax  +
push [ebp+arg_0]  +
call sub_103DDC2  +
jmp loc_103E19A  +
xor eax eax +
push [ebp+var_8]  +
push eax  +
push ebx  +
push [ebp+arg_0]  +
call sub_103D9F5  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
add edi 10h +
cmp eax [esi] +
jb loc_103E171  +
test esi esi +
jz loc_103E1C7  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
lea eax [ebp+dwBytes] +
push eax  +
xor ebx ebx +
push ebx  +
push ebx  +
add esi 8 +
push esi  +
xor edi edi +
mov [ebp+dwBytes] ebx +
call TdhEnumerateProviderFieldInformation  +
mov [ebp+arg_4] eax +
cmp eax 7Ah +
jnz loc_103E22C  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov edi eax +
cmp edi ebx +
jz loc_103E227  +
lea eax [ebp+dwBytes] +
push eax  +
push edi  +
push ebx  +
push esi  +
call TdhEnumerateProviderFieldInformation  +
mov [ebp+arg_4] eax +
jmp loc_103E22C  +
call sub_103C9B4  +
cmp [ebp+arg_4] ebx +
jnz loc_103E294  +
mov [ebp+arg_4] ebx +
cmp [edi] ebx +
jbe loc_103E294  +
lea esi [edi+0Ch] +
mov ebx [esi+8] +
mov edx [esi+4] +
mov ecx ebx +
and ecx 0FF000000h +
xor eax eax +
or eax ecx +
mov [ebp+var_C] edx +
jnz loc_103E285  +
push ebx  +
push edx  +
push 10h  +
push offset off_1055F88  +
call sub_103CA44  +
test eax eax +
jnz loc_103E285  +
mov eax [esi] +
test eax eax +
jnz loc_103E26D  +
mov eax [esi-4] +
add eax edi +
push eax  +
push [ebp+arg_0]  +
call sub_103DDC2  +
push ebx  +
push [ebp+var_C]  +
push eax  +
push [ebp+arg_0]  +
call sub_103CB7A  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
add esi 10h +
cmp eax [edi] +
jb loc_103E23B  +
xor ebx ebx +
cmp edi ebx +
jz loc_103E2A6  +
push edi  +
push ebx  +
push hHeap  +
call ds:HeapFree  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
lea eax [ebp+var_10] +
push ebx  +
mov ebx [ebp+arg_0] +
mov [ebp+var_C] eax +
mov [ebp+var_10] eax +
lea eax [ebx+4] +
mov [ebp+var_1] 0 +
cmp [eax] eax +
jz loc_103E4CD  +
push esi  +
push edi  +
mov edi [eax] +
mov eax [edi] +
mov ecx [edi+4] +
mov [ecx] eax +
mov [eax+4] ecx +
mov esi [edi+0Ch] +
test esi esi +
jz loc_103E3CE  +
test byte ptr [esi+4] 4 +
jz loc_103E30B  +
mov eax [ebp+var_10] +
lea ecx [ebp+var_10] +
mov [edi] eax +
mov [edi+4] ecx +
mov [eax+4] edi +
mov [ebp+var_10] edi +
jmp loc_103E3DD  +
cmp [ebp+var_1] 0 +
jnz loc_103E321  +
push dword ptr [ebx]  +
push offset aMaps  +
call sub_1023CCF  +
mov [ebp+var_1] 1 +
push dword ptr [edi+8]  +
push dword ptr [esi+4]  +
call sub_103CEA6  +
push eax  +
push offset aWsNameWs  +
push dword ptr [ebx]  +
call sub_1024264  +
and [ebp+arg_0] 0 +
add esp 10h +
cmp dword ptr [esi+8] 0 +
jbe loc_103E3B6  +
lea eax [esi+14h] +
mov [ebp+lpMem] eax +
mov eax [ebp+lpMem] +
mov eax [eax-4] +
add eax esi +
push eax  +
push ebx  +
call sub_103DDC2  +
push eax  +
push offset aMapMessageStri  +
push dword ptr [ebx]  +
call sub_1024264  +
mov eax [esi+0Ch] +
add esp 0Ch +
test eax eax +
jnz loc_103E38B  +
test byte ptr [esi+4] 12h +
mov eax [ebp+lpMem] +
push dword ptr [eax]  +
jnz loc_103E384  +
push offset aD_3  +
jmp loc_103E39D  +
push offset a0xX_0  +
jmp loc_103E39D  +
cmp eax 1 +
jnz loc_103E3A7  +
mov eax [ebp+lpMem] +
mov eax [eax] +
add eax esi +
push eax  +
push offset aWs_3  +
push dword ptr [ebx]  +
call sub_1024264  +
add esp 0Ch +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
add [ebp+lpMem] 8 +
cmp eax [esi+8] +
jb loc_103E34C  +
push dword ptr [esi+4]  +
call sub_103CEA6  +
push eax  +
push offset aWs_4  +
push dword ptr [ebx]  +
call sub_1024264  +
add esp 0Ch +
push edi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
lea eax [ebx+4] +
cmp [eax] eax +
jnz loc_103E2D8  +
cmp [ebp+var_1] 1 +
jnz loc_103E3FA  +
push dword ptr [ebx]  +
push offset aMaps_0  +
call sub_1023CCF  +
lea eax [ebp+var_10] +
cmp [ebp+var_10] eax +
jz loc_103E4CB  +
push dword ptr [ebx]  +
push offset aNamedqueries  +
call sub_1023CCF  +
push dword ptr [ebx]  +
push offset aPatternmaps  +
call sub_1023CCF  +
jmp loc_103E4A5  +
mov eax [ecx] +
mov edx ecx +
mov ecx [ecx+4] +
mov [ecx] eax +
mov [eax+4] ecx +
mov esi [edx+0Ch] +
mov [ebp+lpMem] edx +
test esi esi +
jz loc_103E494  +
mov eax [esi] +
add eax esi +
push eax  +
mov eax [esi+0Ch] +
add eax esi +
push eax  +
push offset aPatternmapForm  +
push dword ptr [ebx]  +
call sub_1024264  +
and [ebp+arg_0] 0 +
add esp 10h +
cmp dword ptr [esi+8] 0 +
jbe loc_103E488  +
lea edi [esi+10h] +
mov eax [edi+4] +
add eax esi +
push eax  +
mov eax [edi] +
add eax esi +
push eax  +
push offset aMapNameWsValue  +
push dword ptr [ebx]  +
call sub_1024264  +
add esp 10h +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
add edi 8 +
cmp eax [esi+8] +
jb loc_103E460  +
push dword ptr [ebx]  +
push offset aPatternmap  +
call sub_1023CCF  +
push [ebp+lpMem]  +
push 0  +
push hHeap  +
call ds:HeapFree  +
mov ecx [ebp+var_10] +
lea eax [ebp+var_10] +
cmp ecx eax +
jnz loc_103E423  +
push dword ptr [ebx]  +
push offset aPatternmaps_0  +
call sub_1023CCF  +
push dword ptr [ebx]  +
push offset aNamedqueries_0  +
call sub_1023CCF  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea eax [esi+14h] +
xor edi edi +
cmp [eax] eax +
jz loc_103E4F3  +
push esi  +
call sub_103D322  +
mov [esi+10h] edi +
lea eax [esi+20h] +
cmp [eax] eax +
jz loc_103E503  +
push esi  +
call sub_103CBE3  +
mov [esi+1Ch] edi +
lea eax [esi+38h] +
cmp [eax] eax +
jz loc_103E513  +
push esi  +
call sub_103D18B  +
mov [esi+34h] edi +
lea eax [esi+5Ch] +
cmp [eax] eax +
jz loc_103E527  +
push esi  +
call sub_103CCF7  +
mov dword ptr [esi+58h] 1 +
lea eax [esi+2Ch] +
cmp [eax] eax +
jz loc_103E537  +
push esi  +
call sub_103D28B  +
mov [esi+28h] edi +
lea eax [esi+44h] +
cmp [eax] eax +
jz loc_103E547  +
push esi  +
call sub_103CF64  +
mov [esi+40h] edi +
lea eax [esi+68h] +
cmp [eax] eax +
jz loc_103E55B  +
push esi  +
call sub_103D089  +
mov dword ptr [esi+64h] 0Ah +
lea eax [esi+50h] +
cmp [eax] eax +
jz loc_103E56B  +
push esi  +
call sub_103DC46  +
mov [esi+4Ch] edi +
lea eax [esi+4] +
cmp [eax] eax +
jz loc_103E578  +
push esi  +
call sub_103E2B2  +
mov [esi+0Ch] edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 110h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
and [ebp+var_108] 0 +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [eax] +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_110] eax +
cmp esi eax +
jz loc_103E6A3  +
mov eax [esi+18h] +
mov dword ptr [ebp+var_10C] eax +
lea eax [esi+8] +
push eax  +
push 80h  +
lea eax [ebp+var_104] +
push eax  +
call sub_1034A70  +
mov eax [esi+20h] +
test eax eax +
jnz loc_103E5EF  +
mov [ebp+var_108] offset aXml_0 +
jmp loc_103E5FE  +
cmp eax 1 +
jnz loc_103E5FE  +
mov [ebp+var_108] offset aWbem +
push [ebp+var_108]  +
lea eax [ebp+var_104] +
push eax  +
push dword ptr [ebx]  +
push dword ptr [ebp+var_10C]  +
push offset aProviderNameWs  +
push dword ptr [edi]  +
call sub_1024264  +
mov eax [esi+1Ch] +
add esp 18h +
test eax eax +
jz loc_103E640  +
push eax  +
push edi  +
call sub_103DDC2  +
push eax  +
push offset aMessageString_  +
push dword ptr [edi]  +
call sub_1024264  +
add esp 0Ch +
push offset asc_10031B4  +
push dword ptr [edi]  +
call sub_1024264  +
pop ecx  +
pop ecx  +
push dword ptr [edi]  +
push offset aEvents_1  +
call sub_1023CCF  +
cmp dword ptr [esi+20h] 0 +
jnz loc_103E66E  +
push esi  +
push edi  +
call sub_103E1D3  +
push esi  +
push edi  +
call sub_103E10D  +
push esi  +
push edi  +
call sub_103E0E0  +
push dword ptr [edi]  +
push offset aEvents_2  +
call sub_1023CCF  +
push edi  +
call sub_103E4D7  +
push dword ptr [edi]  +
push offset aProvider  +
call sub_1023CCF  +
inc dword ptr [ebx]  +
mov esi [esi] +
cmp esi [ebp+var_110] +
jnz loc_103E5BE  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 0Ch  +
***
call __SEH_prolog4  +
xor esi esi +
mov [ebp+var_1C] esi +
xor ebx ebx +
push esi  +
push esi  +
push [ebp+lpFileName]  +
call sub_1024012  +
mov edx eax +
cmp edx esi +
jnz loc_103E6EA  +
call ds:GetLastError  +
jmp loc_103E7F4  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
call sub_103CAC1  +
mov [ebp+NumberOfBytesWritten] edx +
mov [ebp+ms_exc.disabled] esi +
mov edi offset dword_1057980 +
mov dword_1057984 edi +
mov dword_1057980 edi +
mov esi offset dword_1057988 +
mov dword_105798C esi +
mov dword_1057988 esi +
call sub_103D9B1  +
push [ebp+NumberOfBytesWritten]  +
push offset a?xmlVersion1_1  +
call sub_1023CCF  +
push [ebp+NumberOfBytesWritten]  +
push offset aInstrumentatio  +
call sub_1023CCF  +
push [ebp+NumberOfBytesWritten]  +
push offset aInstrumentat_0  +
call sub_1023CCF  +
push [ebp+NumberOfBytesWritten]  +
push offset aEvents_3  +
call sub_1023CCF  +
lea eax [ebp+var_1C] +
push eax  +
push edi  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
call sub_103E586  +
lea eax [ebp+var_1C] +
push eax  +
push esi  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
call sub_103E586  +
push [ebp+NumberOfBytesWritten]  +
push offset aEvents_4  +
call sub_1023CCF  +
push [ebp+NumberOfBytesWritten]  +
push offset aInstrumentat_1  +
call sub_1023CCF  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
call sub_103D792  +
push [ebp+NumberOfBytesWritten]  +
push offset aInstrumentat_2  +
call sub_1023CCF  +
jmp loc_103E7E0  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000017h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
push 8  +
pop ebx  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
push [ebp+NumberOfBytesWritten]  +
call sub_1023FB3  +
mov eax ebx +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
fldz   +
mov edx dword_1079A94 +
fst  [ebp+var_4] +
fstp  [ebp+var_8] +
test edx edx +
jbe loc_103E83E  +
mov ecx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
lea eax [esi+0Ch] +
sub ecx esi +
pop esi  +
fld  dword ptr [ecx+eax] +
fadd  [ebp+var_4] +
fstp  [ebp+var_4] +
fld  dword ptr [eax] +
add eax 10h +
dec edx  +
fadd  [ebp+var_8] +
fstp  [ebp+var_8] +
jnz loc_103E827  +
fld  [ebp+var_4] +
fld  [ebp+var_8] +
fcompp st(1) st +
fnstsw  ax +
test ah 5 +
jp loc_103E854  +
mov eax 0FFFFFFFFh +
leave   +
retn   +
fld  [ebp+var_4] +
fld  [ebp+var_8] +
fcompp st(1) st +
fnstsw  ax +
test ah 41h +
jnz loc_103E868  +
xor eax eax +
inc eax  +
leave   +
retn   +
xor eax eax +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov eax [eax] +
mov ecx [ecx] +
mov eax [eax+0Ch] +
mov ecx [ecx+0Ch] +
cmp eax ecx +
jbe loc_103E88F  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
sbb eax eax +
neg eax  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx dword ptr [ebp+arg_8] +
sub ecx dword ptr [ebp+arg_0] +
mov eax dword ptr [ebp+arg_8+4] +
sbb eax dword ptr [ebp+arg_0+4] +
and dword ptr [ebp+arg_8] 0 +
mov edx [ebp+arg_14] +
mov dword ptr [ebp+arg_0] ecx +
mov dword ptr [ebp+arg_8+4] eax +
mov ecx 7FFFFFFFh +
and eax ecx +
mov dword ptr [ebp+arg_0+4] eax +
fild  [ebp+arg_0] +
mov eax 80000000h +
and dword ptr [ebp+arg_8+4] eax +
fild  [ebp+arg_8] +
and dword ptr [ebp+arg_8] 0 +
mov dword ptr [ebp+arg_8+4] edx +
and dword ptr [ebp+arg_8+4] eax +
fchs   +
push esi  +
mov esi [ebp+arg_10] +
faddp st(1) st +
and edx ecx +
mov dword ptr [ebp+arg_0+4] edx +
mov dword ptr [ebp+arg_0] esi +
fild  [ebp+arg_0] +
push ecx  +
fild  [ebp+arg_8] +
push ecx  +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fstp  [esp+0Ch+var_C] +
call ds:ceil  +
pop ecx  +
pop ecx  +
call _ftol2  +
imul eax dword_1079A94 +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 208h +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
cmp [ebp+arg_0] 0 +
jz loc_103E949  +
mov eax [ebp+arg_C] +
sub eax dword ptr [ebp+arg_4] +
mov [ebp+var_8] eax +
mov eax [ebp+arg_10] +
sbb eax dword ptr [ebp+arg_4+4] +
mov [ebp+var_4] eax +
jmp loc_103E9CB  +
push edi  +
mov edi [ebp+arg_10] +
cmp edi dword ptr [ebp+arg_4+4] +
jb loc_103E9CA  +
push esi  +
mov esi [ebp+arg_C] +
ja loc_103E95D  +
cmp esi dword ptr [ebp+arg_4] +
jbe loc_103E9C9  +
push ebx  +
push dword_1079A94  +
mov eax esi +
sub eax dword ptr [ebp+arg_4] +
mov ebx edi +
sbb ebx dword ptr [ebp+arg_4+4] +
lea edx [ebp+var_208] +
push edx  +
push ebx  +
push eax  +
push 0  +
push edi  +
push esi  +
push dword ptr [ebp+arg_4+4]  +
mov [ebp+arg_C] eax +
push dword ptr [ebp+arg_4]  +
push 1  +
call sub_103F0BF  +
xor ecx ecx +
sub eax ecx +
jz loc_103E9AB  +
dec eax  +
dec eax  +
jnz loc_103E9AB  +
mov eax [ebp+arg_1C] +
shl eax 4 +
mov ecx [ebp+eax+var_200] +
mov eax [ebp+eax+var_1FC] +
jmp loc_103E9AD  +
xor eax eax +
cmp ebx eax +
pop ebx  +
jb loc_103E9C9  +
ja loc_103E9B9  +
cmp [ebp+arg_C] ecx +
jbe loc_103E9C9  +
sub esi ecx +
sbb edi eax +
sub esi dword ptr [ebp+arg_4] +
sbb edi dword ptr [ebp+arg_4+4] +
mov [ebp+var_8] esi +
mov [ebp+var_4] edi +
pop esi  +
pop edi  +
mov eax [ebp+arg_1C] +
mov ecx [ebp+arg_20] +
shl eax 4 +
lea eax [eax+ecx+8] +
mov ecx [ebp+var_8] +
add [eax] ecx +
mov ecx [ebp+var_4] +
adc [eax+4] ecx +
leave   +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
dec [ebp+arg_8]  +
js loc_103EA08  +
push esi  +
mov esi [ebp+arg_0] +
mov ecx esi +
call [ebp+arg_C]  +
add esi [ebp+arg_4] +
dec [ebp+arg_8]  +
jns loc_103E9FA  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov dword_1057990 1 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
cmp edx dword_10560CC +
jb loc_103EA66  +
push esi  +
mov esi [ebp+arg_0] +
ja loc_103EA3F  +
cmp esi dword_10560C8 +
jb loc_103EA65  +
xor eax eax +
inc eax  +
cmp edx dword_10560CC[eax*8] +
jb loc_103EA5E  +
ja loc_103EA56  +
cmp esi dword_10560C8[eax*8] +
jbe loc_103EA5E  +
inc eax  +
cmp eax 1Dh +
jb loc_103EA42  +
jmp loc_103EA65  +
lea eax [ecx+eax*4] +
inc dword ptr [eax]  +
inc dword ptr [ecx]  +
pop esi  +
pop ebp  +
retn 8  +
***
lea eax [ecx+74h] +
sub eax 4 +
dec edx  +
cmp dword ptr [eax] 0 +
jnz loc_103EA85  +
test edx edx +
jnz loc_103EA75  +
xor eax eax +
retn   +
lea eax [edx+1] +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 1Ch +
jnb loc_103EAA1  +
mov eax [ecx+eax*4+4] +
jmp loc_103EAA3  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
cmp ecx 1Dh +
jnb loc_103EAC9  +
mov eax dword_10560C8[ecx*8] +
mov ecx dword_10560CC[ecx*8] +
jmp loc_103EAD4  +
mov eax dword_10561A8 +
mov ecx dword_10561AC +
mov edx ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
cmp ecx 1Ch +
jnb loc_103EAFC  +
mov eax dword_10560D0[ecx*8] +
mov ecx dword_10560D4[ecx*8] +
jmp loc_103EB07  +
mov eax dword_10561A8 +
mov ecx dword_10561AC +
mov edx ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
fld  [ebp+arg_0] +
fld  flt_10561B0 +
fcompp st(1) st +
fnstsw  ax +
test ah 41h +
jp loc_103EB4E  +
xor edx edx +
inc edx  +
fld  [ebp+arg_0] +
fld  flt_10561B0[edx*4] +
fcompp st(1) st +
fnstsw  ax +
test ah 1 +
jz loc_103EB47  +
inc edx  +
cmp edx 9 +
jb loc_103EB2C  +
jmp loc_103EB4E  +
lea eax [ecx+edx*4] +
inc dword ptr [eax]  +
inc dword ptr [ecx]  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 8 +
jnb loc_103EB6A  +
mov eax [ecx+eax*4+4] +
jmp loc_103EB6C  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 9 +
jnb loc_103EB8B  +
fld  flt_10561B0[eax*4] +
jmp loc_103EB91  +
fld  flt_10561D0 +
fstp  [ebp+arg_0] +
fld  [ebp+arg_0] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 8 +
jnb loc_103EBB6  +
fld  flt_10561B4[eax*4] +
jmp loc_103EBBC  +
fld  flt_10561D0 +
fstp  [ebp+arg_0] +
fld  [ebp+arg_0] +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push 8000h  +
mov esi ecx +
and dword ptr [esi] 0 +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [esi+8] eax +
neg eax  +
sbb eax eax +
and eax 400h +
mov [esi+4] eax +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov ebx ecx +
mov edx [ebx+8] +
push edi  +
xor edi edi +
cmp edx edi +
jz loc_103EC45  +
mov ecx [ebx] +
mov eax [ebx+4] +
cmp ecx eax +
jb loc_103EC6A  +
mov esi eax +
shr esi 4 +
lea eax [esi+eax+100h] +
mov [ebx+4] eax +
cmp eax ecx +
ja loc_103EC4E  +
push edx  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebx] edi +
mov [ebx+4] edi +
mov [ebx+8] edi +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
mov esi ds:GetProcessHeap +
shl eax 5 +
push eax  +
push edx  +
push edi  +
call esi  +
push eax  +
call ds:HeapReAlloc  +
cmp eax edi +
jz loc_103EC80  +
mov [ebx+8] eax +
mov edi [ebx] +
mov esi [ebp+arg_0] +
shl edi 5 +
add edi [ebx+8] +
push 8  +
pop ecx  +
movs   +
inc dword ptr [ebx]  +
mov al 1 +
jmp loc_103EC47  +
push dword ptr [ebx+8]  +
push edi  +
call esi  +
jmp loc_103EC36  +
***
mov edi edi +
push esi  +
push 0  +
mov esi ecx +
and dword ptr [esi] 0 +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
and dword ptr [esi+4] 0 +
mov [esi+8] eax +
mov eax esi +
pop esi  +
retn   +
***
mov eax [ecx+8] +
test eax eax +
jz locret_103ECCD  +
push eax  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov ebx ecx +
mov edx [ebx+8] +
push edi  +
xor edi edi +
cmp edx edi +
jz loc_103ED16  +
mov ecx [ebx] +
mov eax [ebx+4] +
cmp ecx eax +
jb loc_103ED3B  +
mov esi eax +
shr esi 4 +
lea eax [esi+eax+4] +
mov [ebx+4] eax +
cmp eax ecx +
ja loc_103ED1F  +
push edx  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebx] edi +
mov [ebx+4] edi +
mov [ebx+8] edi +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
mov esi ds:GetProcessHeap +
shl eax 4 +
push eax  +
push edx  +
push edi  +
call esi  +
push eax  +
call ds:HeapReAlloc  +
cmp eax edi +
jz loc_103ED50  +
mov [ebx+8] eax +
mov edi [ebx] +
mov esi [ebp+arg_0] +
shl edi 4 +
add edi [ebx+8] +
mov al 1 +
movs   +
movs   +
movs   +
movs   +
inc dword ptr [ebx]  +
jmp loc_103ED18  +
push dword ptr [ebx+8]  +
push edi  +
call esi  +
jmp loc_103ED07  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov edi [ebp+arg_10] +
lea ecx [eax+1] +
cmp edi ecx +
jbe loc_103EDA4  +
push ebx  +
mov ebx [ebp+arg_4] +
mov edx edi +
sub edx eax +
shr edx 1 +
add edx eax +
mov ecx edx +
shl ecx 5 +
cmp ebx [ecx+esi+14h] +
jb loc_103ED9A  +
ja loc_103ED96  +
mov ebx [ebp+arg_0] +
cmp ebx [ecx+esi+10h] +
jbe loc_103ED9A  +
mov eax edx +
jmp loc_103ED9C  +
mov edi edx +
lea ecx [eax+1] +
cmp edi ecx +
ja loc_103ED75  +
pop ebx  +
mov ecx edi +
shl ecx 5 +
mov edx [ecx+esi+10h] +
cmp edx [ebp+arg_0] +
jnz loc_103EDBD  +
mov ecx [ecx+esi+14h] +
cmp ecx [ebp+arg_4] +
jnz loc_103EDBD  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
sub esp 20h +
test ecx ecx +
jz locret_103EE4B  +
push ebx  +
lea eax [ecx-1] +
xor ebx ebx +
test eax eax +
jbe loc_103EE4A  +
push esi  +
push edi  +
mov edx [ebp+arg_0] +
mov eax ebx +
shl eax 5 +
add eax edx +
mov edx [eax+14h] +
cmp edx [eax+34h] +
jb loc_103EE40  +
ja loc_103EDFF  +
mov edx [eax+10h] +
cmp edx [eax+30h] +
jbe loc_103EE40  +
add eax 20h +
push 8  +
pop ecx  +
mov esi eax +
push 8  +
lea edi [ebp+var_20] +
movs   +
lea edx [eax-20h] +
pop ecx  +
mov edi eax +
mov esi edx +
movs   +
push 8  +
dec ebx  +
pop ecx  +
lea esi [ebp+var_20] +
mov edi edx +
sub eax 20h +
movs   +
cmp ebx [ebp+arg_4] +
jnb loc_103EE3D  +
mov ecx [eax-0Ch] +
cmp ecx [eax+14h] +
ja loc_103EE02  +
jb loc_103EE3D  +
mov ecx [eax-10h] +
cmp ecx [eax+10h] +
ja loc_103EE02  +
mov ecx [ebp+arg_4] +
inc ebx  +
lea eax [ecx-1] +
cmp ebx eax +
jb loc_103EDE3  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov ecx edi +
call sub_103EA6F  +
push [ebp+arg_14]  +
mov ebx eax +
push [ebp+arg_10]  +
push dword ptr [ebp+arg_C]  +
push offset aItemDataNameMo  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 14h +
xor esi esi +
test ebx ebx +
jbe loc_103EF05  +
mov eax [ebp+arg_8] +
fild  [ebp+arg_8] +
test eax eax +
jge loc_103EE97  +
fadd  ds:flt_10124E4 +
fstp  [ebp+arg_4] +
push esi  +
mov ecx edi +
call sub_103EA8E  +
imul eax eax +
mov dword ptr [ebp+arg_C] eax +
fild  dword ptr [ebp+arg_C] +
test eax eax +
jge loc_103EEB5  +
fadd  ds:flt_10124E4 +
fdiv  [ebp+arg_4] +
push ecx  +
push ecx  +
mov ecx edi +
fstp  [esp+14h+var_14] +
push esi  +
call sub_103EA8E  +
push eax  +
push esi  +
mov ecx edi +
call sub_103EADF  +
push 0  +
push 0Ah  +
push edx  +
push eax  +
call __aulldiv  +
push edx  +
push eax  +
push esi  +
mov ecx edi +
call sub_103EAAC  +
push 0  +
push 0Ah  +
push edx  +
push eax  +
call __aulldiv  +
push edx  +
push eax  +
push offset aItemDataNameLo  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 24h +
inc esi  +
cmp esi ebx +
jb loc_103EE9A  +
push [ebp+lpBuffer]  +
push offset aItem_1  +
call sub_1023CCF  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_14] +
push esi  +
mov esi [ebp+arg_10] +
mov ecx eax +
shl ecx 5 +
push edi  +
lea edi [ecx+esi-10h] +
mov ecx [edi+4] +
cmp ecx [ebp+arg_4] +
ja loc_103EF4C  +
jb loc_103EF45  +
mov ecx [edi] +
cmp ecx [ebp+arg_0] +
ja loc_103EF4C  +
xor al al +
jmp loc_103F0B4  +
mov ecx [esi+0Ch] +
push ebx  +
cmp ecx [ebp+arg_C] +
jb loc_103EF70  +
ja loc_103EF5F  +
mov ecx [esi+8] +
cmp ecx [ebp+arg_8] +
jb loc_103EF70  +
mov ebx [ebp+arg_18] +
mov ecx [ebp+arg_1C] +
and dword ptr [ebx] 0 +
and dword ptr [ecx] 0 +
jmp loc_103EFF7  +
mov ecx [esi+14h] +
cmp ecx [ebp+arg_4] +
ja loc_103EF9D  +
jb loc_103EF82  +
mov ecx [esi+10h] +
cmp ecx [ebp+arg_0] +
jnb loc_103EF9D  +
lea ecx [ebp+arg_1C+3] +
push ecx  +
dec eax  +
push eax  +
push 0  +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_103ED5D  +
mov ebx [ebp+arg_18] +
mov [ebx] eax +
jmp loc_103EFA3  +
mov ebx [ebp+arg_18] +
and dword ptr [ebx] 0 +
mov edx [ebx] +
mov eax edx +
shl eax 5 +
mov ecx [eax+esi+14h] +
cmp ecx [ebp+arg_C] +
ja loc_103EFF2  +
jb loc_103EFBE  +
mov eax [eax+esi+10h] +
cmp eax [ebp+arg_8] +
jnb loc_103EFF2  +
mov eax [edi+4] +
cmp eax [ebp+arg_C] +
jb loc_103EFE7  +
ja loc_103EFCF  +
mov eax [edi] +
cmp eax [ebp+arg_8] +
jb loc_103EFE7  +
lea eax [ebp+arg_1C+3] +
push eax  +
mov eax [ebp+arg_14] +
dec eax  +
push eax  +
push edx  +
push esi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
call sub_103ED5D  +
jmp loc_103EFEB  +
mov eax [ebp+arg_14] +
dec eax  +
mov ecx [ebp+arg_1C] +
mov [ecx] eax +
jmp loc_103EFF7  +
mov ecx [ebp+arg_1C] +
mov [ecx] edx +
mov edx [ebx] +
mov eax edx +
shl eax 5 +
mov edi [eax+esi+14h] +
cmp edi [ebp+arg_4] +
ja loc_103F020  +
jb loc_103F012  +
mov eax [eax+esi+10h] +
cmp eax [ebp+arg_0] +
ja loc_103F020  +
lea eax [edx+1] +
lea edx [eax-1] +
mov [ebx] eax +
cmp [ecx] edx +
jnz loc_103F020  +
mov [ecx] eax +
mov eax [ecx] +
mov edi [ebp+arg_14] +
lea edx [eax+64h] +
mov [ebp+arg_14] edx +
cmp edx edi +
jb loc_103F032  +
mov [ebp+arg_14] edi +
mov [ebp+arg_1C] eax +
cmp eax [ebp+arg_14] +
jnb loc_103F065  +
shl eax 5 +
lea edx [eax+esi+8] +
mov eax [edx+4] +
cmp eax [ebp+arg_C] +
ja loc_103F057  +
jb loc_103F052  +
mov eax [edx] +
cmp eax [ebp+arg_8] +
jnb loc_103F057  +
mov eax [ebp+arg_1C] +
mov [ecx] eax +
inc [ebp+arg_1C]  +
mov eax [ebp+arg_1C] +
add edx 20h +
cmp eax [ebp+arg_14] +
jb loc_103F041  +
mov eax [esi+0Ch] +
cmp eax [ebp+arg_C] +
jb loc_103F090  +
ja loc_103F077  +
mov eax [esi+8] +
cmp eax [ebp+arg_8] +
jb loc_103F090  +
mov eax [ecx] +
shl eax 5 +
mov edx [eax+esi+0Ch] +
cmp edx [ebp+arg_C] +
jb loc_103F090  +
ja loc_103F0AD  +
mov eax [eax+esi+8] +
cmp eax [ebp+arg_8] +
jnb loc_103F0AD  +
mov ecx [ecx] +
cmp [ebx] ecx +
jnz loc_103F0B1  +
shl ecx 5 +
mov eax [ecx+esi+0Ch] +
cmp eax [ebp+arg_C] +
jb loc_103F0B1  +
ja loc_103F0AD  +
mov eax [ecx+esi+8] +
cmp eax [ebp+arg_8] +
jb loc_103F0B1  +
xor al al +
jmp loc_103F0B3  +
mov al 1 +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 230h +
cmp dword ptr [ebp+arg_18] 0 +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov [ebp+var_28] esi +
jnz loc_103F0E2  +
cmp dword ptr [ebp+arg_18+4] 0 +
jz loc_103F560  +
mov ebx [ebp+arg_10] +
cmp dword ptr [ebp+arg_4+4] ebx +
ja loc_103F560  +
mov edi [ebp+arg_C] +
jb loc_103F0FC  +
cmp dword ptr [ebp+arg_4] edi +
ja loc_103F560  +
push dword ptr [ebp+arg_18+4]  +
push dword ptr [ebp+arg_18]  +
push ebx  +
push edi  +
push dword ptr [ebp+arg_4+4]  +
push dword ptr [ebp+arg_4]  +
call sub_103E89A  +
cmp eax [ebp+arg_24] +
jz loc_103F11C  +
push 3  +
pop eax  +
jmp loc_103F563  +
cmp byte ptr [ebp+arg_0] 0 +
lea eax [esi+0Ch] +
jnz loc_103F127  +
mov eax esi +
cmp byte ptr [ebp+arg_0] 0 +
mov ecx [eax+8] +
mov [ebp+var_14] ecx +
lea eax [esi+0Ch] +
jnz loc_103F138  +
mov eax esi +
mov eax [eax] +
test eax eax +
jz loc_103F563  +
lea edx [ebp+arg_4+4] +
push edx  +
lea edx [ebp+var_30] +
push edx  +
push eax  +
push ecx  +
push ebx  +
push edi  +
push dword ptr [ebp+arg_4+4]  +
mov ecx esi +
push dword ptr [ebp+arg_4]  +
call sub_103EF1E  +
mov esi dword_1079A94 +
mov bl al +
mov [ebp+var_4] esi +
cmp esi 20h +
ja loc_103F560  +
mov eax [ebp+arg_24] +
shl eax 4 +
push eax  +
push 0  +
push [ebp+arg_20]  +
call memset  +
add esp 0Ch +
test bl bl +
jz loc_103F4DE  +
mov eax [ebp+arg_24] +
mov ecx [ebp+arg_10] +
sub eax esi +
mov [ebp+var_10] eax +
mov eax edi +
sub eax dword ptr [ebp+arg_18] +
mov ebx ecx +
sbb ebx dword ptr [ebp+arg_18+4] +
mov [ebp+var_1C] edi +
mov [ebp+var_18] ecx +
mov [ebp+var_C] eax +
test esi esi +
jbe loc_103F1C4  +
lea eax [ebp+var_228] +
mov [eax-8] edi +
mov [eax-4] ecx +
mov [eax] edi +
mov [eax+4] ecx +
add eax 10h +
dec esi  +
jnz loc_103F1B3  +
mov esi dword ptr [ebp+arg_4+4] +
inc esi  +
mov [ebp+var_2C] esi +
shl esi 5 +
add esi [ebp+var_14] +
mov eax [ebp+arg_14] +
dec [ebp+var_2C]  +
sub esi 20h +
test eax eax +
jz loc_103F1F8  +
mov eax [eax] +
cmp eax [esi+18h] +
jnz loc_103F3D9  +
mov eax [ebp+arg_14] +
mov eax [eax+4] +
cmp eax [esi+1Ch] +
jnz loc_103F3D9  +
mov eax [esi+14h] +
cmp eax ebx +
ja loc_103F2F9  +
jb loc_103F211  +
mov eax [esi+10h] +
cmp eax [ebp+var_C] +
ja loc_103F2F9  +
mov eax [ebp+var_4] +
shl eax 4 +
mov [ebp+var_14] eax +
mov eax [ebp+var_10] +
shl eax 4 +
add eax [ebp+arg_20] +
mov [ebp+arg_10] eax +
and dword ptr [ebp+arg_4+4] 0 +
cmp [ebp+var_4] 0 +
jbe loc_103F2C2  +
lea edi [ebp+var_230] +
mov eax [edi+4] +
mov ecx [edi] +
cmp eax [ebp+var_18] +
ja loc_103F2A2  +
jb loc_103F24B  +
cmp ecx [ebp+var_1C] +
jnb loc_103F2A2  +
cmp eax ebx +
jb loc_103F256  +
ja loc_103F25B  +
cmp ecx [ebp+var_C] +
ja loc_103F25B  +
mov ecx [ebp+var_C] +
mov eax ebx +
push [ebp+arg_10]  +
push dword ptr [ebp+arg_4+4]  +
push dword ptr [ebp+arg_18+4]  +
push dword ptr [ebp+arg_18]  +
push dword ptr [edi+0Ch]  +
push dword ptr [edi+8]  +
push eax  +
push ecx  +
push [ebp+arg_0]  +
mov ecx [ebp+var_28] +
call sub_103E919  +
mov eax [ebp+var_C] +
mov [edi+8] eax +
mov [edi+0Ch] ebx +
cmp [edi+4] ebx +
ja loc_103F298  +
jb loc_103F291  +
mov eax [edi] +
cmp eax [ebp+var_C] +
jnb loc_103F298  +
mov eax [edi] +
mov ecx [edi+4] +
jmp loc_103F29D  +
mov eax [ebp+var_C] +
mov ecx ebx +
mov [edi+4] ecx +
jmp loc_103F2AE  +
mov eax [ebp+var_C] +
mov [edi+4] ebx +
mov [edi+8] eax +
mov [edi+0Ch] ebx +
inc dword ptr [ebp+arg_4+4]  +
mov [edi] eax +
mov eax dword ptr [ebp+arg_4+4] +
add edi 10h +
cmp eax [ebp+var_4] +
jb loc_103F23A  +
mov eax [ebp+var_4] +
sub [ebp+var_10] eax +
mov eax [ebp+var_14] +
sub [ebp+arg_10] eax +
mov eax [ebp+var_C] +
mov [ebp+var_1C] eax +
sub eax dword ptr [ebp+arg_18] +
mov [ebp+var_18] ebx +
sbb ebx dword ptr [ebp+arg_18+4] +
mov [ebp+var_C] eax +
mov eax [esi+14h] +
cmp eax ebx +
jb loc_103F226  +
ja loc_103F2F9  +
mov eax [esi+10h] +
cmp eax [ebp+var_C] +
jbe loc_103F226  +
mov eax [esi+0Ch] +
mov ecx [esi+8] +
cmp eax [ebp+var_18] +
ja loc_103F3D9  +
jb loc_103F313  +
cmp ecx [ebp+var_1C] +
jnb loc_103F3D9  +
mov al [esi] +
mov cl al +
and cl 3Fh +
cmp cl 20h +
jnb loc_103F560  +
mov edi [esi+14h] +
movzx eax al +
and eax 3Fh +
mov dword ptr [ebp+arg_4+4] eax +
shl eax 4 +
lea ecx [ebp+eax+var_230] +
mov edx [ecx] +
mov [ebp+var_24] edx +
mov edx [ecx+4] +
mov [ebp+var_20] edx +
cmp edi edx +
jb loc_103F376  +
ja loc_103F352  +
mov edx [esi+10h] +
cmp edx [ebp+var_24] +
jb loc_103F376  +
mov edx [esi+0Ch] +
cmp [ebp+var_20] edx +
ja loc_103F36C  +
jb loc_103F364  +
mov eax [ebp+var_24] +
cmp eax [esi+8] +
jnb loc_103F36C  +
mov eax [ebp+var_24] +
mov edx [ebp+var_20] +
jmp loc_103F36F  +
mov eax [esi+8] +
mov [ecx] eax +
mov [ecx+4] edx +
jmp loc_103F3D9  +
mov ecx [ebp+var_10] +
shl ecx 4 +
add ecx [ebp+arg_20] +
push ecx  +
push dword ptr [ebp+arg_4+4]  +
mov ecx [ebp+var_28] +
push dword ptr [ebp+arg_18+4]  +
push dword ptr [ebp+arg_18]  +
push [ebp+eax+var_224]  +
push [ebp+eax+var_228]  +
push [ebp+var_20]  +
push [ebp+var_24]  +
push [ebp+arg_0]  +
call sub_103E919  +
movzx eax byte ptr [esi] +
mov ecx [esi+8] +
and eax 3Fh +
shl eax 4 +
mov [ebp+eax+var_230] ecx +
mov ecx [esi+0Ch] +
mov [ebp+eax+var_22C] ecx +
mov ecx [esi+10h] +
mov [ebp+eax+var_228] ecx +
mov ecx [esi+14h] +
mov [ebp+eax+var_224] ecx +
mov eax [ebp+var_2C] +
cmp eax [ebp+var_30] +
ja loc_103F1D1  +
mov eax [ebp+var_4] +
shl eax 4 +
mov [ebp+var_14] eax +
mov eax [ebp+var_10] +
shl eax 4 +
add eax [ebp+arg_20] +
mov [ebp+arg_10] eax +
and dword ptr [ebp+arg_4+4] 0 +
cmp [ebp+var_4] 0 +
mov byte ptr [ebp+arg_14+3] 0 +
jbe loc_103F4DE  +
lea esi [ebp+var_230] +
mov edi [esi+4] +
mov eax [esi] +
cmp edi [ebp+var_18] +
ja loc_103F483  +
jb loc_103F423  +
cmp eax [ebp+var_1C] +
jnb loc_103F483  +
cmp edi ebx +
ja loc_103F43D  +
jb loc_103F42E  +
cmp eax [ebp+var_C] +
jnb loc_103F432  +
mov byte ptr [ebp+arg_14+3] 1 +
cmp edi ebx +
jb loc_103F441  +
ja loc_103F43D  +
cmp eax [ebp+var_C] +
jbe loc_103F441  +
mov ecx edi +
jmp loc_103F446  +
mov eax [ebp+var_C] +
mov ecx ebx +
push [ebp+arg_10]  +
push dword ptr [ebp+arg_4+4]  +
push dword ptr [ebp+arg_18+4]  +
push dword ptr [ebp+arg_18]  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push ecx  +
mov ecx [ebp+var_28] +
push eax  +
push [ebp+arg_0]  +
call sub_103E919  +
mov eax [ebp+var_C] +
mov [esi+8] eax +
mov [esi+0Ch] ebx +
cmp edi ebx +
ja loc_103F47C  +
jb loc_103F478  +
cmp [esi] eax +
jnb loc_103F47C  +
mov eax [esi] +
jmp loc_103F47E  +
mov edi ebx +
mov [esi+4] edi +
jmp loc_103F48F  +
mov eax [ebp+var_C] +
mov [esi+4] ebx +
mov [esi+8] eax +
mov [esi+0Ch] ebx +
inc dword ptr [ebp+arg_4+4]  +
mov [esi] eax +
mov eax dword ptr [ebp+arg_4+4] +
add esi 10h +
cmp eax [ebp+var_4] +
jb loc_103F412  +
cmp byte ptr [ebp+arg_14+3] 0 +
jz loc_103F4DE  +
mov eax [ebp+var_10] +
test eax eax +
jbe loc_103F4D0  +
sub eax [ebp+var_4] +
mov [ebp+var_18] ebx +
mov [ebp+var_10] eax +
mov eax [ebp+var_14] +
sub [ebp+arg_10] eax +
mov eax [ebp+var_C] +
mov [ebp+var_1C] eax +
sub eax dword ptr [ebp+arg_18] +
sbb ebx dword ptr [ebp+arg_18+4] +
mov [ebp+var_C] eax +
jmp loc_103F4D4  +
mov byte ptr [ebp+arg_14+3] 0 +
cmp byte ptr [ebp+arg_14+3] 0 +
jnz loc_103F3FA  +
xor ebx ebx +
cmp [ebp+arg_24] ebx +
jbe loc_103F559  +
mov eax dword ptr [ebp+arg_18] +
mov ecx [ebp+arg_20] +
mov dword ptr [ebp+arg_4] eax +
mov eax dword ptr [ebp+arg_18+4] +
mov dword ptr [ebp+arg_18+4] eax +
mov edi 7FFFFFFFh +
and eax edi +
mov esi 80000000h +
and dword ptr [ebp+arg_18+4] esi +
mov dword ptr [ebp+arg_4+4] eax +
fild  [ebp+arg_4] +
mov dword ptr [ebp+arg_18] ebx +
fild  [ebp+arg_18] +
add ecx 4 +
fchs   +
faddp st(1) st +
fstp  [ebp+arg_0] +
mov eax [ecx+8] +
mov edx [ecx+4] +
and dword ptr [ebp+arg_18] 0 +
mov dword ptr [ebp+arg_18+4] eax +
and dword ptr [ebp+arg_18+4] esi +
and eax edi +
mov dword ptr [ebp+arg_4] edx +
mov dword ptr [ebp+arg_4+4] eax +
fild  [ebp+arg_4] +
fild  [ebp+arg_18] +
xor edx edx +
mov eax ebx +
div  [ebp+var_4] +
fchs   +
faddp st(1) st +
fmul  ds:dbl_1001648 +
fdiv  [ebp+arg_0] +
inc ebx  +
mov [ecx-4] dl +
fstp  dword ptr [ecx] +
add ecx 10h +
cmp ebx [ebp+arg_24] +
jb loc_103F519  +
push 2  +
jmp loc_103F116  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 28h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_1C] +
push ebx  +
mov ebx [ebp+arg_20] +
push esi  +
xor esi esi +
push edi  +
mov edi ecx +
mov [eax] esi +
cmp ebx esi +
jz loc_103F598  +
push 70h  +
lea eax [ebx+4] +
push esi  +
push eax  +
mov [ebx] esi +
call memset  +
add esp 0Ch +
mov ecx [ebp+arg_C] +
mov eax [ebp+arg_10] +
cmp ecx [ebp+arg_14] +
jb loc_103F5B2  +
ja loc_103F5AA  +
cmp [ebp+arg_8] eax +
jbe loc_103F5B2  +
xor eax eax +
inc eax  +
jmp loc_103F679  +
cmp [ebp+arg_4] esi +
jnz loc_103F5BE  +
xor eax eax +
jmp loc_103F679  +
mov esi [ebp+arg_0] +
lea edx [ebp+arg_0] +
push edx  +
lea edx [ebp+arg_4] +
push edx  +
push [ebp+arg_4]  +
push esi  +
push [ebp+arg_14]  +
push eax  +
push ecx  +
push [ebp+arg_8]  +
mov ecx edi +
call sub_103EF1E  +
test al al +
jz loc_103F676  +
mov eax [ebp+arg_0] +
test ebx ebx +
jnz loc_103F62B  +
mov edx [ebp+arg_18] +
test edx edx +
jnz loc_103F5FD  +
sub eax [ebp+arg_4] +
mov ecx [ebp+arg_1C] +
inc eax  +
mov [ecx] eax +
jmp loc_103F676  +
cmp [ebp+arg_4] eax +
ja loc_103F676  +
mov ecx [ebp+arg_4] +
sub eax [ebp+arg_4] +
shl ecx 5 +
lea ecx [ecx+esi+18h] +
inc eax  +
mov esi [edx] +
cmp esi [ecx] +
jnz loc_103F623  +
mov esi [edx+4] +
cmp esi [ecx+4] +
jnz loc_103F623  +
mov esi [ebp+arg_1C] +
inc dword ptr [esi]  +
add ecx 20h +
dec eax  +
jnz loc_103F610  +
jmp loc_103F676  +
cmp [ebp+arg_4] eax +
ja loc_103F676  +
mov ecx [ebp+arg_4] +
sub eax [ebp+arg_4] +
mov edi [ebp+arg_18] +
shl ecx 5 +
inc eax  +
lea esi [ecx+esi+10h] +
mov ebx eax +
test edi edi +
jz loc_103F656  +
mov eax [edi] +
cmp eax [esi+8] +
jnz loc_103F670  +
mov eax [edi+4] +
cmp eax [esi+0Ch] +
jnz loc_103F670  +
mov eax [esi] +
sub eax [esi-8] +
mov ecx [esi+4] +
sbb ecx [esi-4] +
push ecx  +
mov ecx [ebp+arg_20] +
push eax  +
call sub_103EA21  +
mov eax [ebp+arg_1C] +
inc dword ptr [eax]  +
add esi 20h +
dec ebx  +
jnz loc_103F643  +
push 2  +
pop eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_18] +
and dword ptr [eax] 0 +
push esi  +
push 70h  +
add eax 4 +
push 0  +
push eax  +
mov esi ecx +
call memset  +
mov eax [ebp+arg_4] +
add esp 0Ch +
cmp eax [ebp+arg_C] +
jb loc_103F6BF  +
ja loc_103F6B7  +
mov ecx [ebp+arg_0] +
cmp ecx [ebp+arg_8] +
jbe loc_103F6BF  +
xor eax eax +
inc eax  +
jmp loc_103F743  +
push ebx  +
mov ebx [esi+14h] +
push edi  +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+var_8] +
push ecx  +
push dword ptr [esi+0Ch]  +
mov ecx esi +
push ebx  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push eax  +
push [ebp+arg_0]  +
call sub_103EF1E  +
test al al +
jz loc_103F73F  +
mov edi [esi+8] +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+arg_C] +
push eax  +
push dword ptr [esi]  +
mov ecx esi +
push edi  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_103EF1E  +
test al al +
jz loc_103F73F  +
mov eax [ebp+arg_C] +
mov ecx [ebp+arg_14] +
mov ecx [ecx] +
mov [ebp+arg_C] eax +
shl eax 5 +
add eax edi +
mov edx [eax+18h] +
cmp edx ecx +
jnz loc_103F731  +
mov edx [eax+1Ch] +
mov esi [ebp+arg_14] +
cmp edx [esi+4] +
jnz loc_103F731  +
test byte ptr [eax] 80h +
jz loc_103F748  +
inc [ebp+arg_C]  +
mov edx [ebp+arg_C] +
add eax 20h +
cmp edx [ebp+arg_4] +
jbe loc_103F71A  +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 1Ch  +
mov eax [ebp+var_8] +
mov esi eax +
shl eax 5 +
lea eax [eax+ebx+8] +
mov ecx [eax+10h] +
mov edx [ebp+arg_10] +
cmp ecx [edx] +
jnz loc_103F78D  +
mov ecx [eax+14h] +
cmp ecx [edx+4] +
jnz loc_103F78D  +
test byte ptr [eax-8] 40h +
jz loc_103F78D  +
mov ecx [ebp+arg_C] +
shl ecx 5 +
mov edx [ecx+edi+0Ch] +
cmp edx [eax+4] +
jb loc_103F872  +
ja loc_103F78D  +
mov ecx [ecx+edi+8] +
cmp ecx [eax] +
jbe loc_103F872  +
inc esi  +
add eax 20h +
cmp esi [ebp+var_4] +
jbe loc_103F754  +
jmp loc_103F73F  +
mov eax [ebp+arg_4] +
cmp [ebp+arg_C] eax +
ja loc_103F87E  +
inc [ebp+arg_C]  +
cmp [ebp+arg_C] eax +
ja loc_103F87E  +
mov eax [ebp+arg_C] +
shl eax 5 +
lea eax [eax+edi+8] +
mov ecx [eax+10h] +
mov edx [ebp+arg_14] +
cmp ecx [edx] +
jnz loc_103F7EA  +
mov ecx [eax+14h] +
cmp ecx [edx+4] +
jnz loc_103F7EA  +
test byte ptr [eax-8] 80h +
jnz loc_103F7EA  +
mov edx esi +
shl edx 5 +
mov ecx [edx+ebx+14h] +
cmp ecx [eax+4] +
jb loc_103F7F8  +
ja loc_103F7EA  +
mov ecx [edx+ebx+10h] +
cmp ecx [eax] +
jbe loc_103F7F8  +
inc [ebp+arg_C]  +
mov ecx [ebp+arg_C] +
add eax 20h +
cmp ecx [ebp+arg_4] +
jbe loc_103F7BA  +
mov eax [ebp+arg_C] +
cmp eax [ebp+arg_4] +
ja loc_103F87E  +
inc esi  +
cmp esi [ebp+var_4] +
ja loc_103F84C  +
mov eax esi +
shl eax 5 +
lea eax [eax+ebx+8] +
mov ecx [eax+10h] +
mov edx [ebp+arg_10] +
cmp ecx [edx] +
jnz loc_103F843  +
mov ecx [eax+14h] +
cmp ecx [edx+4] +
jnz loc_103F843  +
test byte ptr [eax-8] 40h +
jz loc_103F843  +
mov edx [ebp+arg_C] +
mov ecx [eax+4] +
shl edx 5 +
cmp ecx [edx+edi+0Ch] +
ja loc_103F84C  +
jb loc_103F840  +
mov ecx [eax] +
cmp ecx [edx+edi+8] +
jnb loc_103F84C  +
mov [ebp+var_8] esi +
inc esi  +
add eax 20h +
cmp esi [ebp+var_4] +
jbe loc_103F80F  +
mov eax [ebp+arg_C] +
mov ecx [ebp+var_8] +
shl eax 5 +
mov edx [eax+edi+8] +
mov eax [eax+edi+0Ch] +
shl ecx 5 +
sub edx [ecx+ebx+10h] +
sbb eax [ecx+ebx+14h] +
mov ecx [ebp+arg_18] +
push eax  +
push edx  +
call sub_103EA21  +
mov [ebp+var_8] esi +
cmp esi [ebp+var_4] +
jbe loc_103F798  +
push 2  +
pop eax  +
jmp loc_103F741  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp-1] +
mov esi ecx +
push eax  +
push dword ptr [esi]  +
push dword ptr [esi+8]  +
call sub_103EDC8  +
lea eax [ebp-1] +
push eax  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+14h]  +
call sub_103EDC8  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_103EBCB  +
lea ecx [esi+0Ch] +
call sub_103EBCB  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push edi  +
mov edx ecx +
and dword ptr [edx] 0 +
push 8  +
pop ecx  +
xor eax eax +
lea edi [edx+4] +
stos   +
mov eax edx +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_C] +
mov eax [ebp+arg_10] +
sub esp 10h +
cmp edx [ebp+arg_14] +
jb loc_103F911  +
ja loc_103F909  +
cmp [ebp+arg_8] eax +
jbe loc_103F911  +
xor eax eax +
inc eax  +
jmp locret_103F9FD  +
push esi  +
lea esi [ebp+arg_14] +
push esi  +
lea esi [ebp+arg_4] +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push [ebp+arg_14]  +
push eax  +
push edx  +
push [ebp+arg_8]  +
call sub_103EF1E  +
test al al +
jnz loc_103F938  +
xor eax eax +
jmp loc_103F9FC  +
mov ecx [ebp+arg_4] +
mov esi [ebp+arg_18] +
mov eax ecx +
shl eax 5 +
add eax [ebp+arg_0] +
push ebx  +
push edi  +
mov [ebp+arg_4] ecx +
cmp ecx [ebp+arg_14] +
ja loc_103F9BA  +
lea ecx [eax+18h] +
mov [ebp+arg_0] ecx +
xor ebx ebx +
cmp ebx [esi] +
jnb loc_103F979  +
mov eax [esi+8] +
mov edx [eax] +
cmp edx [ecx] +
jnz loc_103F96D  +
mov edx [eax+4] +
cmp edx [ecx+4] +
jz loc_103F975  +
inc ebx  +
add eax 10h +
cmp ebx [esi] +
jb loc_103F95F  +
cmp ebx [esi] +
jb loc_103F99D  +
xor eax eax +
lea edi [ebp+var_8] +
stos   +
stos   +
mov eax [ecx] +
mov [ebp+var_10] eax +
mov eax [ecx+4] +
mov [ebp+var_C] eax +
lea eax [ebp+var_10] +
push eax  +
mov ecx esi +
call sub_103ECD3  +
test al al +
jz loc_103F9DF  +
mov ecx [ebp+arg_0] +
mov eax [esi+8] +
shl ebx 4 +
lea ebx [ebx+eax+0Ch] +
inc dword ptr [ebx]  +
add ecx 20h +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
mov [ebp+arg_0] ecx +
cmp eax [ebp+arg_14] +
jbe loc_103F956  +
xor edi edi +
xor ebx ebx +
cmp [esi] edi +
jbe loc_103F9F7  +
mov eax [esi+8] +
add eax edi +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
push offset dword_1079AE8  +
call sub_1025BE3  +
test eax eax +
jz loc_103F9E3  +
mov eax [eax+40h] +
jmp loc_103F9E8  +
push 3  +
jmp loc_103F9F9  +
mov eax offset aUnknown_0 +
mov ecx [esi+8] +
mov [edi+ecx+8] eax +
inc ebx  +
add edi 10h +
cmp ebx [esi] +
jb loc_103F9C2  +
push 2  +
pop eax  +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
cmp [ebp+arg_1C] 0 +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_8] ecx +
jbe loc_103FA77  +
mov esi [ebp+arg_C] +
sub esi dword ptr [ebp+arg_4] +
mov edi [ebp+arg_10] +
mov eax [ebp+arg_14] +
sbb edi dword ptr [ebp+arg_4+4] +
mov ebx [ebp+arg_18] +
mov [ebp+arg_14] eax +
push dword_1079A94  +
mov ecx [ebp+var_8] +
lea eax [ebx+8] +
push eax  +
push edi  +
push esi  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push dword ptr [ebp+arg_4+4]  +
push dword ptr [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_103F0BF  +
cmp eax 2 +
jnz loc_103FA9A  +
mov eax [ebp+arg_14] +
inc [ebp+var_4]  +
add [ebp+arg_14] 10h +
mov [ebx] eax +
mov eax [ebp+var_4] +
add ebx 208h +
cmp eax [ebp+arg_1C] +
jb loc_103FA32  +
push offset sub_103E801  +
push 208h  +
push [ebp+arg_1C]  +
push [ebp+arg_18]  +
call ds:qsort  +
add esp 10h +
push 2  +
pop eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
xor eax eax +
inc eax  +
jmp loc_103FA93  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 84h +
cmp [ebp+arg_1C] offset aIsr +
mov eax ecx +
setz cl  +
mov [ebp+var_4] eax +
mov byte ptr [ebp+arg_1C+3] cl +
lea edx [eax+0Ch] +
test cl cl +
jnz loc_103FACA  +
mov edx eax +
mov edx [edx+8] +
mov [ebp+var_C] edx +
test cl cl +
jz loc_103FAD7  +
add eax 0Ch +
mov eax [eax] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpBuffer] +
mov [ebp+var_8] eax +
push edi  +
test cl cl +
jz loc_103FAEE  +
push offset aTableLevel1N_0  +
jmp loc_103FAF3  +
push offset aTableLevel1N_1  +
call sub_1023CCF  +
push edi  +
push offset aHeaderSortFi_4  +
call sub_1023CCF  +
mov eax [ebp+arg_18] +
xor esi esi +
cmp eax esi +
jbe loc_103FB6B  +
mov ebx [ebp+arg_14] +
mov [ebp+var_10] eax +
mov [ebp+lpBuffer] esi +
cmp dword_1079A94 esi +
jbe loc_103FB60  +
lea esi [ebx+0Ch] +
mov eax [ebx] +
fld  dword ptr [esi] +
push ecx  +
push ecx  +
fstp  [esp+98h+var_98] +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
push [ebp+lpBuffer]  +
push dword ptr [eax+8]  +
push offset aItemDataNam_20  +
push edi  +
call sub_1024264  +
add esp 20h +
push edi  +
push offset aItem_1  +
call sub_1023CCF  +
inc [ebp+lpBuffer]  +
mov eax [ebp+lpBuffer] +
add esi 10h +
cmp eax dword_1079A94 +
jb loc_103FB20  +
xor esi esi +
add ebx 208h +
dec [ebp+var_10]  +
jnz loc_103FB12  +
push edi  +
mov ebx offset aTable_0 +
push ebx  +
call sub_1023CCF  +
push 70h  +
lea eax [ebp+var_80] +
push esi  +
push eax  +
mov [ebp+var_84] esi +
call memset  +
add esp 0Ch +
mov ecx [ebp+var_4] +
lea eax [ebp+var_84] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push esi  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+var_8]  +
push [ebp+var_C]  +
call sub_103F56F  +
cmp eax 2 +
jz loc_103FBBE  +
xor al al +
jmp loc_103FC8C  +
cmp [ebp+lpBuffer] esi +
jbe loc_103FC8A  +
cmp byte ptr [ebp+arg_1C+3] 0 +
push edi  +
jz loc_103FBD5  +
push offset aTableLevel1N_2  +
jmp loc_103FBDA  +
push offset aTableLevel1N_3  +
call sub_1023CCF  +
push edi  +
push offset aHeaderDataName  +
call sub_1023CCF  +
push edi  +
push offset aHeaderSortFi_5  +
call sub_1023CCF  +
push edi  +
push offset aHeader_2  +
call sub_1023CCF  +
mov ecx [ebp+var_4] +
push esi  +
push esi  +
push offset aAllModules  +
push [ebp+lpBuffer]  +
lea eax [ebp+var_84] +
push eax  +
push edi  +
call sub_103EE54  +
mov [ebp+lpBuffer] esi +
cmp [ebp+arg_18] esi +
jbe loc_103FC83  +
mov esi [ebp+arg_14] +
mov ecx [ebp+var_4] +
lea eax [ebp+var_84] +
push eax  +
lea eax [ebp+arg_14] +
push eax  +
push dword ptr [esi]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+var_8]  +
push [ebp+var_C]  +
call sub_103F56F  +
cmp eax 2 +
jnz loc_103FBB7  +
mov eax [esi] +
push dword ptr [eax+4]  +
mov ecx [ebp+var_4] +
push dword ptr [eax]  +
push dword ptr [eax+8]  +
lea eax [ebp+var_84] +
push [ebp+arg_14]  +
push eax  +
push edi  +
call sub_103EE54  +
inc [ebp+lpBuffer]  +
mov eax [ebp+lpBuffer] +
add esi 208h +
cmp eax [ebp+arg_18] +
jb loc_103FC25  +
push edi  +
push ebx  +
call sub_1023CCF  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 80h +
push [ebp+lpBuffer]  +
mov [ebp+var_4] ecx +
push offset aTableLevel1N_4  +
call sub_1023CCF  +
push [ebp+lpBuffer]  +
push offset aHeaderSortFi_5  +
call sub_1023CCF  +
push [ebp+lpBuffer]  +
push offset aHeader_2  +
call sub_1023CCF  +
mov eax [ebp+arg_18] +
test eax eax +
jbe loc_103FE3F  +
mov ecx [ebp+arg_14] +
push ebx  +
push esi  +
mov [ebp+arg_18] ecx +
mov [ebp+arg_14] eax +
push edi  +
mov eax [ebp+arg_18] +
mov edi [eax] +
mov ebx [edi+8] +
cmp ebx offset aUnknown_0 +
jz loc_103FE2C  +
xor esi esi +
cmp [ebp+arg_20] esi +
jbe loc_103FE2C  +
mov edx [edi+0Ch] +
mov ecx [ebp+arg_1C] +
mov eax [ecx] +
cmp edx [eax+0Ch] +
jb loc_103FD15  +
cmp ebx [eax+8] +
jz loc_103FD21  +
inc esi  +
add ecx 208h +
cmp esi [ebp+arg_20] +
jb loc_103FD09  +
cmp esi [ebp+arg_20] +
jnb loc_103FE2C  +
and [ebp+var_80] 0 +
push 70h  +
lea eax [ebp+var_7C] +
push 0  +
push eax  +
call memset  +
imul esi esi +
mov eax [ebp+arg_1C] +
mov ecx [ebp+var_4] +
add esp 0Ch +
add esi eax +
lea eax [ebp+var_80] +
push eax  +
push dword ptr [esi]  +
push edi  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_103F685  +
cmp eax 2 +
jnz loc_103FE2C  +
lea ecx [ebp+var_80] +
call sub_103EA6F  +
mov ecx [ebp+arg_18] +
mov ecx [ecx] +
mov edi eax +
mov eax [esi] +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
push dword ptr [eax+8]  +
push dword ptr [ecx+4]  +
push dword ptr [ecx]  +
push dword ptr [ecx+8]  +
push offset aItemDataNameIs  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 20h +
xor esi esi +
test edi edi +
jbe loc_103FE1F  +
mov eax [ebp+var_80] +
fild  [ebp+var_80] +
test eax eax +
jge loc_103FDB4  +
fadd  ds:flt_10124E4 +
fstp  [ebp+var_8] +
push esi  +
lea ecx [ebp+var_80] +
call sub_103EA8E  +
mov ecx eax +
imul ecx ecx +
mov [ebp+var_C] ecx +
fild  [ebp+var_C] +
test ecx ecx +
jge loc_103FDD5  +
fadd  ds:flt_10124E4 +
fdiv  [ebp+var_8] +
push ecx  +
push ecx  +
lea ecx [ebp+var_80] +
fstp  [esp+94h+var_94] +
push eax  +
push esi  +
call sub_103EADF  +
push 0  +
push 0Ah  +
push edx  +
push eax  +
call __aulldiv  +
push edx  +
push eax  +
push esi  +
lea ecx [ebp+var_80] +
call sub_103EAAC  +
push 0  +
push 0Ah  +
push edx  +
push eax  +
call __aulldiv  +
push edx  +
push eax  +
push offset aItemDataNameLo  +
push [ebp+lpBuffer]  +
call sub_1024264  +
add esp 24h +
inc esi  +
cmp esi edi +
jb loc_103FDB7  +
push [ebp+lpBuffer]  +
push offset aItem_1  +
call sub_1023CCF  +
add [ebp+arg_18] 208h +
dec [ebp+arg_14]  +
jnz loc_103FCE4  +
pop edi  +
pop esi  +
pop ebx  +
push [ebp+lpBuffer]  +
push offset aTable_0  +
call sub_1023CCF  +
leave   +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2FCh +
mov eax SystemTimeAsFileTime.dwHighDateTime +
push ebx  +
mov ebx stru_1079A28.dwLowDateTime +
push esi  +
push edi  +
mov edi SystemTimeAsFileTime.dwLowDateTime +
mov esi ecx +
mov [ebp+var_7C] eax +
mov eax stru_1079A28.dwHighDateTime +
lea ecx [ebp+var_D0] +
mov [ebp+var_2C] esi +
mov [ebp+var_80] edi +
mov [ebp+var_5C] ebx +
mov [ebp+var_58] eax +
call sub_103EC8D  +
lea ecx [ebp+var_C4] +
call sub_103EC8D  +
mov eax [esi+0Ch] +
and [ebp+var_78] 0 +
and [ebp+var_84] 0 +
test eax eax +
jz loc_103FF36  +
mov ecx [esi+14h] +
lea edx [ebp+var_D0] +
push edx  +
push [ebp+var_58]  +
push ebx  +
push [ebp+var_7C]  +
push edi  +
push eax  +
push ecx  +
mov ecx esi +
call sub_103F8EF  +
cmp eax 2 +
jnz loc_104164A  +
cmp [ebp+var_D0] 0 +
jz loc_104164A  +
mov eax [ebp+var_D0] +
xor ecx ecx +
mov edx 208h +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+var_78] eax +
test eax eax +
jz loc_104164A  +
push [ebp+var_D0]  +
mov ecx esi +
push eax  +
push [ebp+var_C8]  +
push [ebp+var_58]  +
push ebx  +
push [ebp+var_7C]  +
push edi  +
push 1  +
call sub_103FA06  +
cmp eax 2 +
jnz loc_1041626  +
mov ecx [esi] +
test ecx ecx +
jz loc_103FFEB  +
mov eax [esi+8] +
lea edx [ebp+var_C4] +
push edx  +
push [ebp+var_58]  +
push ebx  +
push [ebp+var_7C]  +
push edi  +
push ecx  +
push eax  +
mov ecx esi +
call sub_103F8EF  +
cmp eax 2 +
jnz loc_1041626  +
cmp [ebp+var_C4] 0 +
jz loc_1041626  +
mov eax [ebp+var_C4] +
xor ecx ecx +
mov edx 208h +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+var_84] eax +
test eax eax +
jz loc_1041626  +
push [ebp+var_C4]  +
mov ecx esi +
push eax  +
push [ebp+var_BC]  +
push [ebp+var_58]  +
push ebx  +
push [ebp+var_7C]  +
push edi  +
push 0  +
call sub_103FA06  +
cmp eax 2 +
jnz loc_1041626  +
cmp dword ptr [esi] 0 +
jz loc_103FFEB  +
push offset aDpc  +
push [ebp+var_C4]  +
mov ecx esi +
push [ebp+var_84]  +
push [ebp+var_58]  +
push ebx  +
push [ebp+var_7C]  +
push edi  +
push [ebp+NumberOfBytesWritten]  +
call sub_103FAA4  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_1041626  +
push offset aIsr  +
push [ebp+var_D0]  +
mov ecx esi +
push [ebp+var_78]  +
push [ebp+var_58]  +
push ebx  +
push [ebp+var_7C]  +
push edi  +
push [ebp+NumberOfBytesWritten]  +
call sub_103FAA4  +
cmp dword ptr [esi+0Ch] 0 +
jz loc_1041626  +
cmp dword ptr [esi] 0 +
jz loc_1041626  +
mov eax [ebp+var_58] +
cmp [ebp+var_7C] eax +
ja loc_10415C8  +
jb loc_1040042  +
mov eax [ebp+var_5C] +
cmp [ebp+var_80] eax +
ja loc_10415C8  +
mov ecx dword_1079A94 +
xor eax eax +
mov [ebp+var_6C] eax +
mov [ebp+var_3C] eax +
mov [ebp+var_44] eax +
xor edx edx +
mov ebx 200h +
mov eax ebx +
div  ecx +
mov edi [ebp+var_7C] +
mov [ebp+var_68] ecx +
mov ecx 4E20h +
mov edx ecx +
push 0  +
push ecx  +
push [ebp+var_58]  +
mov [ebp+var_60] edi +
push [ebp+var_5C]  +
mov ecx esi +
push [ebp+var_7C]  +
mul  edx +
mov dword ptr [ebp+var_54+4] edx +
mov edx [ebp+var_80] +
mov edi eax +
mov dword ptr [ebp+var_54] eax +
mov eax dword ptr [ebp+var_54+4] +
add edi edx +
adc eax [ebp+var_7C] +
push edx  +
mov [ebp+var_64] edx +
mov [ebp+var_94] edi +
mov [ebp+var_90] eax +
call sub_103E89A  +
mov [ebp+var_38] eax +
mov eax [ebp+var_68] +
xor ecx ecx +
push 24h  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+var_C] eax +
test eax eax +
jz loc_10400E3  +
push offset loc_103F8D4  +
push [ebp+var_68]  +
push 24h  +
push eax  +
call sub_103E9EC  +
mov eax [ebp+var_C] +
mov [ebp+var_98] eax +
jmp loc_10400EA  +
and [ebp+var_98] 0 +
cmp [ebp+var_98] 0 +
jz loc_10415C8  +
mov eax [ebp+var_68] +
xor ecx ecx +
push 24h  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+var_C] eax +
test eax eax +
jz loc_104012E  +
push offset loc_103F8D4  +
push [ebp+var_68]  +
push 24h  +
push eax  +
call sub_103E9EC  +
mov eax [ebp+var_C] +
mov [ebp+var_74] eax +
jmp loc_1040132  +
and [ebp+var_74] 0 +
cmp [ebp+var_74] 0 +
jz loc_104157F  +
mov eax [ebp+var_68] +
xor ecx ecx +
push 24h  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+var_C] eax +
test eax eax +
jz loc_1040173  +
push offset loc_103F8D4  +
push [ebp+var_68]  +
push 24h  +
push eax  +
call sub_103E9EC  +
mov eax [ebp+var_C] +
mov [ebp+var_6C] eax +
jmp loc_1040177  +
and [ebp+var_6C] 0 +
cmp [ebp+var_6C] 0 +
jz loc_104157F  +
push 2000h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+var_3C] eax +
test eax eax +
jz loc_104157F  +
push 2000h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+var_44] eax +
test eax eax +
jz loc_104157F  +
jmp loc_1040B64  +
mov eax [ebp+var_60] +
cmp eax [ebp+var_90] +
ja loc_104157F  +
jb loc_10401CC  +
cmp [ebp+var_64] edi +
ja loc_104157F  +
push 0  +
push 4E20h  +
push [ebp+var_90]  +
mov ecx esi +
push edi  +
push [ebp+var_60]  +
push [ebp+var_64]  +
call sub_103E89A  +
cmp eax ebx +
jnz loc_104157F  +
mov eax [esi+14h] +
mov [ebp+var_C] eax +
mov eax [esi+0Ch] +
test eax eax +
jz loc_104157F  +
lea ecx [ebp+var_EC] +
push ecx  +
lea ecx [ebp+var_B8] +
push ecx  +
push eax  +
push [ebp+var_C]  +
mov ecx esi +
push [ebp+var_90]  +
push edi  +
push [ebp+var_60]  +
push [ebp+var_64]  +
call sub_103EF1E  +
mov esi dword_1079A94 +
mov [ebp+var_1] al +
mov [ebp+var_10] esi +
cmp esi 20h +
ja loc_104157F  +
push 2000h  +
push 0  +
push [ebp+var_3C]  +
call memset  +
add esp 0Ch +
cmp [ebp+var_1] 0 +
jz loc_10405D2  +
mov ecx [ebp+var_90] +
sub ebx esi +
mov [ebp+var_8] ebx +
mov eax edi +
add eax 0FFFFB1E0h +
mov ebx ecx +
adc ebx 0FFFFFFFFh +
mov [ebp+var_A8] edi +
mov [ebp+var_A4] ecx +
mov [ebp+var_1C] eax +
test esi esi +
jbe loc_1040298  +
lea eax [ebp+var_2F4] +
mov [eax-8] edi +
mov [eax-4] ecx +
mov [eax] edi +
mov [eax+4] ecx +
add eax 10h +
dec esi  +
jnz loc_1040287  +
mov esi [ebp+var_EC] +
inc esi  +
mov [ebp+var_28] esi +
shl esi 5 +
add esi [ebp+var_C] +
mov eax [esi-0Ch] +
dec [ebp+var_28]  +
sub esi 20h +
cmp eax ebx +
ja loc_10403BC  +
jb loc_10402C7  +
mov eax [esi+10h] +
cmp eax [ebp+var_1C] +
ja loc_10403BC  +
mov eax [ebp+var_10] +
shl eax 4 +
mov [ebp+var_24] eax +
mov eax [ebp+var_8] +
shl eax 4 +
add eax [ebp+var_3C] +
mov dword ptr [ebp+var_20] eax +
and [ebp+var_14] 0 +
cmp [ebp+var_10] 0 +
jbe loc_104037E  +
lea edi [ebp+var_2FC] +
mov eax [edi+4] +
mov ecx [edi] +
cmp eax [ebp+var_A4] +
ja loc_104035E  +
jb loc_1040307  +
cmp ecx [ebp+var_A8] +
jnb loc_104035E  +
cmp eax ebx +
jb loc_1040312  +
ja loc_1040317  +
cmp ecx [ebp+var_1C] +
ja loc_1040317  +
mov ecx [ebp+var_1C] +
mov eax ebx +
push dword ptr [ebp+var_20]  +
push [ebp+var_14]  +
push 0  +
push 4E20h  +
push dword ptr [edi+0Ch]  +
push dword ptr [edi+8]  +
push eax  +
push ecx  +
mov ecx [ebp+var_2C] +
push 1  +
call sub_103E919  +
mov eax [ebp+var_1C] +
mov [edi+8] eax +
mov [edi+0Ch] ebx +
cmp [edi+4] ebx +
ja loc_1040354  +
jb loc_104034D  +
mov eax [edi] +
cmp eax [ebp+var_1C] +
jnb loc_1040354  +
mov eax [edi] +
mov ecx [edi+4] +
jmp loc_1040359  +
mov eax [ebp+var_1C] +
mov ecx ebx +
mov [edi+4] ecx +
jmp loc_104036A  +
mov eax [ebp+var_1C] +
mov [edi+4] ebx +
mov [edi+8] eax +
mov [edi+0Ch] ebx +
inc [ebp+var_14]  +
mov [edi] eax +
mov eax [ebp+var_14] +
add edi 10h +
cmp eax [ebp+var_10] +
jb loc_10402F0  +
mov eax [ebp+var_10] +
sub [ebp+var_8] eax +
mov eax [ebp+var_24] +
sub dword ptr [ebp+var_20] eax +
mov eax [ebp+var_1C] +
add [ebp+var_1C] 0FFFFB1E0h +
mov [ebp+var_A8] eax +
mov eax [esi+14h] +
mov [ebp+var_A4] ebx +
adc ebx 0FFFFFFFFh +
cmp eax ebx +
jb loc_10402DC  +
ja loc_10403BC  +
mov eax [esi+10h] +
cmp eax [ebp+var_1C] +
jbe loc_10402DC  +
mov eax [esi+0Ch] +
mov ecx [esi+8] +
cmp eax [ebp+var_A4] +
ja loc_10404BD  +
jb loc_10403DC  +
cmp ecx [ebp+var_A8] +
jnb loc_10404BD  +
mov al [esi] +
mov cl al +
and cl 3Fh +
cmp cl 20h +
jnb loc_104157F  +
mov edi [esi+14h] +
movzx eax al +
and eax 3Fh +
mov [ebp+var_C] eax +
shl eax 4 +
lea ecx [ebp+eax+var_2FC] +
mov edx [ecx] +
mov [ebp+var_B0] edx +
mov edx [ecx+4] +
mov [ebp+var_AC] edx +
cmp edi edx +
jb loc_1040454  +
ja loc_1040424  +
mov edx [esi+10h] +
cmp edx [ebp+var_B0] +
jb loc_1040454  +
mov edx [esi+0Ch] +
cmp [ebp+var_AC] edx +
ja loc_104044A  +
jb loc_104043C  +
mov eax [ebp+var_B0] +
cmp eax [esi+8] +
jnb loc_104044A  +
mov eax [ebp+var_B0] +
mov edx [ebp+var_AC] +
jmp loc_104044D  +
mov eax [esi+8] +
mov [ecx] eax +
mov [ecx+4] edx +
jmp loc_10404BD  +
mov ecx [ebp+var_8] +
shl ecx 4 +
add ecx [ebp+var_3C] +
push ecx  +
push [ebp+var_C]  +
mov ecx [ebp+var_2C] +
push 0  +
push 4E20h  +
push [ebp+eax+var_2F0]  +
push [ebp+eax+var_2F4]  +
push [ebp+var_AC]  +
push [ebp+var_B0]  +
push 1  +
call sub_103E919  +
movzx eax byte ptr [esi] +
mov ecx [esi+8] +
and eax 3Fh +
shl eax 4 +
mov [ebp+eax+var_2FC] ecx +
mov ecx [esi+0Ch] +
mov [ebp+eax+var_2F8] ecx +
mov ecx [esi+10h] +
mov [ebp+eax+var_2F4] ecx +
mov ecx [esi+14h] +
mov [ebp+eax+var_2F0] ecx +
mov eax [ebp+var_28] +
cmp eax [ebp+var_B8] +
ja loc_10402A8  +
mov eax [ebp+var_10] +
shl eax 4 +
mov [ebp+var_24] eax +
mov eax [ebp+var_8] +
shl eax 4 +
add eax [ebp+var_3C] +
mov [ebp+var_28] eax +
and [ebp+var_14] 0 +
cmp [ebp+var_10] 0 +
mov [ebp+var_1] 0 +
jbe loc_10405D2  +
lea esi [ebp+var_2FC] +
mov edi [esi+4] +
mov eax [esi] +
cmp edi [ebp+var_A4] +
ja loc_1040570  +
jb loc_1040510  +
cmp eax [ebp+var_A8] +
jnb loc_1040570  +
cmp edi ebx +
ja loc_104052A  +
jb loc_104051B  +
cmp eax [ebp+var_1C] +
jnb loc_104051F  +
mov [ebp+var_1] 1 +
cmp edi ebx +
jb loc_104052E  +
ja loc_104052A  +
cmp eax [ebp+var_1C] +
jbe loc_104052E  +
mov ecx edi +
jmp loc_1040533  +
mov eax [ebp+var_1C] +
mov ecx ebx +
push [ebp+var_28]  +
push [ebp+var_14]  +
push 0  +
push 4E20h  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push ecx  +
mov ecx [ebp+var_2C] +
push eax  +
push 1  +
call sub_103E919  +
mov eax [ebp+var_1C] +
mov [esi+8] eax +
mov [esi+0Ch] ebx +
cmp edi ebx +
ja loc_1040569  +
jb loc_1040565  +
cmp [esi] eax +
jnb loc_1040569  +
mov eax [esi] +
jmp loc_104056B  +
mov edi ebx +
mov [esi+4] edi +
jmp loc_104057C  +
mov eax [ebp+var_1C] +
mov [esi+4] ebx +
mov [esi+8] eax +
mov [esi+0Ch] ebx +
inc [ebp+var_14]  +
mov [esi] eax +
mov eax [ebp+var_14] +
add esi 10h +
cmp eax [ebp+var_10] +
jb loc_10404F9  +
cmp [ebp+var_1] 0 +
jz loc_10405D2  +
mov eax [ebp+var_8] +
test eax eax +
jbe loc_10405C4  +
sub eax [ebp+var_10] +
mov [ebp+var_A4] ebx +
mov [ebp+var_8] eax +
mov eax [ebp+var_24] +
sub [ebp+var_28] eax +
mov eax [ebp+var_1C] +
add [ebp+var_1C] 0FFFFB1E0h +
mov [ebp+var_A8] eax +
adc ebx 0FFFFFFFFh +
jmp loc_10405C8  +
mov [ebp+var_1] 0 +
cmp [ebp+var_1] 0 +
jnz loc_10404E1  +
xor ecx ecx +
mov eax 4E20h +
mov dword ptr [ebp+var_F4] eax +
mov eax ecx +
mov dword ptr [ebp+var_E0+4] eax +
mov edi 7FFFFFFFh +
and eax edi +
mov ebx 80000000h +
and dword ptr [ebp+var_E0+4] ebx +
mov dword ptr [ebp+var_E0] ecx +
mov dword ptr [ebp+var_F4+4] eax +
fild  [ebp+var_F4] +
mov [ebp+var_8] ecx +
fild  [ebp+var_E0] +
mov ecx [ebp+var_3C] +
add ecx 4 +
mov [ebp+var_40] ecx +
fchs   +
mov esi 200h +
faddp st(1) st +
fstp  dword ptr [ebp+var_20] +
mov eax [ecx+8] +
mov edx [ecx+4] +
and dword ptr [ebp+var_E8] 0 +
mov dword ptr [ebp+var_E8+4] eax +
and dword ptr [ebp+var_E8+4] ebx +
and eax edi +
mov dword ptr [ebp+var_FC] edx +
mov dword ptr [ebp+var_FC+4] eax +
fild  [ebp+var_FC] +
mov eax [ebp+var_8] +
fild  [ebp+var_E8] +
xor edx edx +
div  [ebp+var_10] +
fchs   +
faddp st(1) st +
fmul  ds:dbl_1001648 +
fdiv  dword ptr [ebp+var_20] +
inc [ebp+var_8]  +
mov [ecx-4] dl +
fstp  dword ptr [ecx] +
add ecx 10h +
cmp [ebp+var_8] esi +
jb loc_1040629  +
mov edi [ebp+var_94] +
mov ebx [ebp+var_2C] +
push 0  +
push 4E20h  +
push [ebp+var_90]  +
mov ecx ebx +
push edi  +
push [ebp+var_60]  +
push [ebp+var_64]  +
call sub_103E89A  +
cmp eax esi +
jnz loc_104157F  +
mov eax [ebx] +
mov ecx [ebx+8] +
mov [ebp+var_C] ecx +
test eax eax +
jz loc_104157F  +
lea edx [ebp+var_B4] +
push edx  +
lea edx [ebp+var_70] +
push edx  +
push eax  +
push ecx  +
push [ebp+var_90]  +
mov ecx ebx +
push edi  +
push [ebp+var_60]  +
push [ebp+var_64]  +
call sub_103EF1E  +
mov bl al +
mov eax dword_1079A94 +
mov [ebp+var_8] eax +
cmp eax 20h +
ja loc_104157F  +
push 2000h  +
push 0  +
push [ebp+var_44]  +
call memset  +
add esp 0Ch +
test bl bl +
jz loc_1040A65  +
mov edx [ebp+var_8] +
mov ecx [ebp+var_90] +
sub esi edx +
mov eax edi +
add eax 0FFFFB1E0h +
mov ebx ecx +
adc ebx 0FFFFFFFFh +
mov [ebp+var_14] esi +
mov [ebp+var_34] edi +
mov [ebp+var_30] ecx +
mov [ebp+var_A0] eax +
test edx edx +
jbe loc_104074C  +
lea eax [ebp+var_2F4] +
mov [eax-8] edi +
mov [eax-4] ecx +
mov [eax] edi +
mov [eax+4] ecx +
add eax 10h +
dec edx  +
jnz loc_104073B  +
mov esi [ebp+var_B4] +
inc esi  +
mov [ebp+var_28] esi +
shl esi 5 +
add esi [ebp+var_C] +
mov eax [esi-0Ch] +
dec [ebp+var_28]  +
sub esi 20h +
cmp eax ebx +
ja loc_1040882  +
jb loc_104077E  +
mov eax [esi+10h] +
cmp eax [ebp+var_A0] +
ja loc_1040882  +
mov eax [ebp+var_8] +
shl eax 4 +
mov [ebp+var_C] eax +
mov eax [ebp+var_14] +
shl eax 4 +
add eax [ebp+var_44] +
mov [ebp+var_24] eax +
and [ebp+var_10] 0 +
cmp [ebp+var_8] 0 +
jbe loc_1040841  +
lea edi [ebp+var_2FC] +
mov eax [edi+4] +
mov ecx [edi] +
cmp eax [ebp+var_30] +
ja loc_104081E  +
jb loc_10407B8  +
cmp ecx [ebp+var_34] +
jnb loc_104081E  +
cmp eax ebx +
jb loc_10407C6  +
ja loc_10407CE  +
cmp ecx [ebp+var_A0] +
ja loc_10407CE  +
mov ecx [ebp+var_A0] +
mov eax ebx +
push [ebp+var_24]  +
push [ebp+var_10]  +
push 0  +
push 4E20h  +
push dword ptr [edi+0Ch]  +
push dword ptr [edi+8]  +
push eax  +
push ecx  +
mov ecx [ebp+var_2C] +
push 0  +
call sub_103E919  +
mov eax [ebp+var_A0] +
mov [edi+8] eax +
mov [edi+0Ch] ebx +
cmp [edi+4] ebx +
ja loc_1040811  +
jb loc_104080A  +
mov eax [edi] +
cmp eax [ebp+var_A0] +
jnb loc_1040811  +
mov eax [edi] +
mov ecx [edi+4] +
jmp loc_1040819  +
mov eax [ebp+var_A0] +
mov ecx ebx +
mov [edi+4] ecx +
jmp loc_104082D  +
mov eax [ebp+var_A0] +
mov [edi+4] ebx +
mov [edi+8] eax +
mov [edi+0Ch] ebx +
inc [ebp+var_10]  +
mov [edi] eax +
mov eax [ebp+var_10] +
add edi 10h +
cmp eax [ebp+var_8] +
jb loc_10407A7  +
mov eax [ebp+var_8] +
sub [ebp+var_14] eax +
mov eax [ebp+var_C] +
sub [ebp+var_24] eax +
mov eax [ebp+var_A0] +
add [ebp+var_A0] 0FFFFB1E0h +
mov [ebp+var_34] eax +
mov eax [esi+14h] +
mov [ebp+var_30] ebx +
adc ebx 0FFFFFFFFh +
cmp eax ebx +
jb loc_1040793  +
ja loc_1040882  +
mov eax [esi+10h] +
cmp eax [ebp+var_A0] +
jbe loc_1040793  +
mov eax [esi+0Ch] +
mov ecx [esi+8] +
cmp eax [ebp+var_30] +
ja loc_1040962  +
jb loc_104089C  +
cmp ecx [ebp+var_34] +
jnb loc_1040962  +
mov al [esi] +
mov cl al +
and cl 3Fh +
cmp cl 20h +
jnb loc_104157F  +
mov edi [esi+14h] +
movzx eax al +
and eax 3Fh +
mov [ebp+var_C] eax +
shl eax 4 +
lea ecx [ebp+eax+var_2FC] +
mov edx [ecx] +
mov [ebp+var_4C] edx +
mov edx [ecx+4] +
mov [ebp+var_48] edx +
cmp edi edx +
jb loc_10408FF  +
ja loc_10408DB  +
mov edx [esi+10h] +
cmp edx [ebp+var_4C] +
jb loc_10408FF  +
mov edx [esi+0Ch] +
cmp [ebp+var_48] edx +
ja loc_10408F5  +
jb loc_10408ED  +
mov eax [ebp+var_4C] +
cmp eax [esi+8] +
jnb loc_10408F5  +
mov eax [ebp+var_4C] +
mov edx [ebp+var_48] +
jmp loc_10408F8  +
mov eax [esi+8] +
mov [ecx] eax +
mov [ecx+4] edx +
jmp loc_1040962  +
mov ecx [ebp+var_14] +
shl ecx 4 +
add ecx [ebp+var_44] +
push ecx  +
push [ebp+var_C]  +
mov ecx [ebp+var_2C] +
push 0  +
push 4E20h  +
push [ebp+eax+var_2F0]  +
push [ebp+eax+var_2F4]  +
push [ebp+var_48]  +
push [ebp+var_4C]  +
push 0  +
call sub_103E919  +
movzx eax byte ptr [esi] +
mov ecx [esi+8] +
and eax 3Fh +
shl eax 4 +
mov [ebp+eax+var_2FC] ecx +
mov ecx [esi+0Ch] +
mov [ebp+eax+var_2F8] ecx +
mov ecx [esi+10h] +
mov [ebp+eax+var_2F4] ecx +
mov ecx [esi+14h] +
mov [ebp+eax+var_2F0] ecx +
mov eax [ebp+var_28] +
cmp eax [ebp+var_70] +
ja loc_104075C  +
mov eax [ebp+var_8] +
mov edi [ebp+var_A0] +
shl eax 4 +
mov [ebp+var_C] eax +
mov eax [ebp+var_14] +
shl eax 4 +
add eax [ebp+var_44] +
mov [ebp+var_24] eax +
and [ebp+var_10] 0 +
cmp [ebp+var_8] 0 +
mov [ebp+var_1] 0 +
jbe loc_1040A65  +
lea esi [ebp+var_2FC] +
mov eax [esi+4] +
mov ecx [esi] +
cmp eax [ebp+var_30] +
ja loc_1040A10  +
jb loc_10409B2  +
cmp ecx [ebp+var_34] +
jnb loc_1040A10  +
cmp eax ebx +
ja loc_10409CE  +
jb loc_10409BC  +
cmp ecx edi +
jnb loc_10409C0  +
mov [ebp+var_1] 1 +
cmp eax ebx +
jb loc_10409CA  +
ja loc_10409CE  +
cmp ecx edi +
ja loc_10409CE  +
mov ecx edi +
mov eax ebx +
push [ebp+var_24]  +
push [ebp+var_10]  +
push 0  +
push 4E20h  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push eax  +
push ecx  +
mov ecx [ebp+var_2C] +
push 0  +
call sub_103E919  +
mov [esi+8] edi +
mov [esi+0Ch] ebx +
cmp [esi+4] ebx +
ja loc_1040A05  +
jb loc_10409FE  +
cmp [esi] edi +
jnb loc_1040A05  +
mov eax [esi] +
mov ecx [esi+4] +
jmp loc_1040A09  +
mov eax edi +
mov ecx ebx +
mov [esi] eax +
mov [esi+4] ecx +
jmp loc_1040A1B  +
mov [esi] edi +
mov [esi+4] ebx +
mov [esi+8] edi +
mov [esi+0Ch] ebx +
inc [ebp+var_10]  +
mov eax [ebp+var_10] +
add esi 10h +
cmp eax [ebp+var_8] +
jb loc_10409A1  +
cmp [ebp+var_1] 0 +
jz loc_1040A65  +
mov eax [ebp+var_14] +
test eax eax +
jbe loc_1040A57  +
sub eax [ebp+var_8] +
mov [ebp+var_34] edi +
mov [ebp+var_14] eax +
mov eax [ebp+var_C] +
sub [ebp+var_24] eax +
add edi 0FFFFB1E0h +
mov [ebp+var_30] ebx +
adc ebx 0FFFFFFFFh +
jmp loc_1040A5B  +
mov [ebp+var_1] 0 +
cmp [ebp+var_1] 0 +
jnz loc_1040989  +
mov esi [ebp+var_44] +
xor edi edi +
lea ecx [esi+4] +
mov ebx 200h +
mov eax [ecx+8] +
mov edx [ecx+4] +
and dword ptr [ebp+var_D8] 0 +
mov dword ptr [ebp+var_D8+4] eax +
and dword ptr [ebp+var_D8+4] 80000000h +
and eax 7FFFFFFFh +
mov dword ptr [ebp+var_8C] edx +
mov dword ptr [ebp+var_8C+4] eax +
fild  [ebp+var_8C] +
xor edx edx +
fild  [ebp+var_D8] +
mov eax edi +
div  [ebp+var_8] +
fchs   +
faddp st(1) st +
fmul  ds:dbl_1001648 +
fdiv  dword ptr [ebp+var_20] +
inc edi  +
mov [ecx-4] dl +
fstp  dword ptr [ecx] +
add ecx 10h +
cmp edi ebx +
jb loc_1040A72  +
and dword ptr [ebp+var_20] 0 +
mov edi [ebp+var_40] +
mov eax esi +
sub eax [ebp+var_3C] +
mov [ebp+var_C] eax +
mov eax dword ptr [ebp+var_20] +
fld  dword ptr [edi] +
xor edx edx +
div  [ebp+var_68] +
mov eax [ebp+var_98] +
push ecx  +
fstp  [esp+30Ch+var_30C] +
mov esi edx +
imul esi esi +
lea ecx [esi+eax] +
call sub_103EB12  +
mov eax [ebp+var_C] +
push ecx  +
fld  dword ptr [eax+edi] +
mov eax [ebp+var_74] +
lea ecx [esi+eax] +
fstp  [esp+30Ch+var_30C] +
call sub_103EB12  +
fld  dword ptr [edi] +
mov eax [ebp+var_C] +
fadd  dword ptr [eax+edi] +
mov eax [ebp+var_6C] +
push ecx  +
lea ecx [esi+eax] +
fstp  [ebp+var_40] +
fld  [ebp+var_40] +
fstp  [esp+30Ch+var_30C] +
call sub_103EB12  +
inc dword ptr [ebp+var_20]  +
add edi 10h +
cmp dword ptr [ebp+var_20] ebx +
jb loc_1040ADC  +
mov edi [ebp+var_94] +
mov eax [ebp+var_90] +
mov esi [ebp+var_2C] +
mov [ebp+var_64] edi +
add edi dword ptr [ebp+var_54] +
mov [ebp+var_60] eax +
adc eax dword ptr [ebp+var_54+4] +
sub [ebp+var_38] ebx +
mov [ebp+var_94] edi +
mov [ebp+var_90] eax +
cmp [ebp+var_38] ebx +
jnb loc_10401B2  +
cmp [ebp+var_38] 0 +
jbe loc_10414A0  +
mov eax [ebp+var_58] +
cmp [ebp+var_60] eax +
ja loc_104157F  +
jb loc_1040B91  +
mov eax [ebp+var_5C] +
cmp [ebp+var_64] eax +
ja loc_104157F  +
push 0  +
push 4E20h  +
push [ebp+var_58]  +
mov ecx esi +
push [ebp+var_5C]  +
push [ebp+var_60]  +
push [ebp+var_64]  +
call sub_103E89A  +
cmp eax [ebp+var_38] +
jnz loc_104157F  +
mov eax [esi+0Ch] +
mov edi [esi+14h] +
test eax eax +
jz loc_104157F  +
lea ecx [ebp+var_40] +
push ecx  +
lea ecx [ebp+var_70] +
push ecx  +
push eax  +
push edi  +
push [ebp+var_58]  +
mov ecx esi +
push [ebp+var_5C]  +
push [ebp+var_60]  +
push [ebp+var_64]  +
call sub_103EF1E  +
mov bl al +
mov eax dword_1079A94 +
mov [ebp+var_8] eax +
cmp eax 20h +
ja loc_104157F  +
mov eax [ebp+var_38] +
shl eax 4 +
push eax  +
push 0  +
push [ebp+var_3C]  +
mov [ebp+var_B4] eax +
call memset  +
add esp 0Ch +
test bl bl +
jz loc_1040F4F  +
mov esi [ebp+var_8] +
mov eax [ebp+var_38] +
mov ecx [ebp+var_5C] +
mov edx [ebp+var_58] +
sub eax esi +
mov [ebp+var_14] eax +
mov eax ecx +
add eax 0FFFFB1E0h +
mov ebx edx +
adc ebx 0FFFFFFFFh +
mov [ebp+var_34] ecx +
mov [ebp+var_30] edx +
mov [ebp+var_1C] eax +
test esi esi +
jbe loc_1040C55  +
lea eax [ebp+var_2F4] +
mov [eax-8] ecx +
mov [eax-4] edx +
mov [eax] ecx +
mov [eax+4] edx +
add eax 10h +
dec esi  +
jnz loc_1040C44  +
mov esi [ebp+var_40] +
inc esi  +
mov [ebp+var_24] esi +
shl esi 5 +
add esi edi +
mov eax [esi-0Ch] +
dec [ebp+var_24]  +
sub esi 20h +
cmp eax ebx +
ja loc_1040D69  +
jb loc_1040C80  +
mov eax [esi+10h] +
cmp eax [ebp+var_1C] +
ja loc_1040D69  +
mov eax [ebp+var_8] +
shl eax 4 +
mov [ebp+var_28] eax +
mov eax [ebp+var_14] +
shl eax 4 +
add eax [ebp+var_3C] +
mov [ebp+var_C] eax +
and [ebp+var_10] 0 +
cmp [ebp+var_8] 0 +
jbe loc_1040D31  +
lea edi [ebp+var_2FC] +
mov eax [edi+4] +
mov ecx [edi] +
cmp eax [ebp+var_30] +
ja loc_1040D11  +
jb loc_1040CBA  +
cmp ecx [ebp+var_34] +
jnb loc_1040D11  +
cmp eax ebx +
jb loc_1040CC5  +
ja loc_1040CCA  +
cmp ecx [ebp+var_1C] +
ja loc_1040CCA  +
mov ecx [ebp+var_1C] +
mov eax ebx +
push [ebp+var_C]  +
push [ebp+var_10]  +
push 0  +
push 4E20h  +
push dword ptr [edi+0Ch]  +
push dword ptr [edi+8]  +
push eax  +
push ecx  +
mov ecx [ebp+var_2C] +
push 1  +
call sub_103E919  +
mov eax [ebp+var_1C] +
mov [edi+8] eax +
mov [edi+0Ch] ebx +
cmp [edi+4] ebx +
ja loc_1040D07  +
jb loc_1040D00  +
mov eax [edi] +
cmp eax [ebp+var_1C] +
jnb loc_1040D07  +
mov eax [edi] +
mov ecx [edi+4] +
jmp loc_1040D0C  +
mov eax [ebp+var_1C] +
mov ecx ebx +
mov [edi+4] ecx +
jmp loc_1040D1D  +
mov eax [ebp+var_1C] +
mov [edi+4] ebx +
mov [edi+8] eax +
mov [edi+0Ch] ebx +
inc [ebp+var_10]  +
mov [edi] eax +
mov eax [ebp+var_10] +
add edi 10h +
cmp eax [ebp+var_8] +
jb loc_1040CA9  +
mov eax [ebp+var_8] +
sub [ebp+var_14] eax +
mov eax [ebp+var_28] +
sub [ebp+var_C] eax +
mov eax [ebp+var_1C] +
add [ebp+var_1C] 0FFFFB1E0h +
mov [ebp+var_34] eax +
mov eax [esi+14h] +
mov [ebp+var_30] ebx +
adc ebx 0FFFFFFFFh +
cmp eax ebx +
jb loc_1040C95  +
ja loc_1040D69  +
mov eax [esi+10h] +
cmp eax [ebp+var_1C] +
jbe loc_1040C95  +
mov eax [esi+0Ch] +
mov ecx [esi+8] +
cmp eax [ebp+var_30] +
ja loc_1040E49  +
jb loc_1040D83  +
cmp ecx [ebp+var_34] +
jnb loc_1040E49  +
mov al [esi] +
mov cl al +
and cl 3Fh +
cmp cl 20h +
jnb loc_104157F  +
mov edi [esi+14h] +
movzx eax al +
and eax 3Fh +
mov [ebp+var_40] eax +
shl eax 4 +
lea ecx [ebp+eax+var_2FC] +
mov edx [ecx] +
mov [ebp+var_4C] edx +
mov edx [ecx+4] +
mov [ebp+var_48] edx +
cmp edi edx +
jb loc_1040DE6  +
ja loc_1040DC2  +
mov edx [esi+10h] +
cmp edx [ebp+var_4C] +
jb loc_1040DE6  +
mov edx [esi+0Ch] +
cmp [ebp+var_48] edx +
ja loc_1040DDC  +
jb loc_1040DD4  +
mov eax [ebp+var_4C] +
cmp eax [esi+8] +
jnb loc_1040DDC  +
mov eax [ebp+var_4C] +
mov edx [ebp+var_48] +
jmp loc_1040DDF  +
mov eax [esi+8] +
mov [ecx] eax +
mov [ecx+4] edx +
jmp loc_1040E49  +
mov ecx [ebp+var_14] +
shl ecx 4 +
add ecx [ebp+var_3C] +
push ecx  +
push [ebp+var_40]  +
mov ecx [ebp+var_2C] +
push 0  +
push 4E20h  +
push [ebp+eax+var_2F0]  +
push [ebp+eax+var_2F4]  +
push [ebp+var_48]  +
push [ebp+var_4C]  +
push 1  +
call sub_103E919  +
movzx eax byte ptr [esi] +
mov ecx [esi+8] +
and eax 3Fh +
shl eax 4 +
mov [ebp+eax+var_2FC] ecx +
mov ecx [esi+0Ch] +
mov [ebp+eax+var_2F8] ecx +
mov ecx [esi+10h] +
mov [ebp+eax+var_2F4] ecx +
mov ecx [esi+14h] +
mov [ebp+eax+var_2F0] ecx +
mov eax [ebp+var_24] +
cmp eax [ebp+var_70] +
ja loc_1040C61  +
mov eax [ebp+var_8] +
shl eax 4 +
mov [ebp+var_28] eax +
mov eax [ebp+var_14] +
shl eax 4 +
add eax [ebp+var_3C] +
mov [ebp+var_C] eax +
and [ebp+var_10] 0 +
cmp [ebp+var_8] 0 +
mov [ebp+var_1] 0 +
jbe loc_1040F4F  +
lea esi [ebp+var_2FC] +
mov edi [esi+4] +
mov eax [esi] +
cmp edi [ebp+var_30] +
ja loc_1040EF3  +
jb loc_1040E93  +
cmp eax [ebp+var_34] +
jnb loc_1040EF3  +
cmp edi ebx +
ja loc_1040EAD  +
jb loc_1040E9E  +
cmp eax [ebp+var_1C] +
jnb loc_1040EA2  +
mov [ebp+var_1] 1 +
cmp edi ebx +
jb loc_1040EB1  +
ja loc_1040EAD  +
cmp eax [ebp+var_1C] +
jbe loc_1040EB1  +
mov ecx edi +
jmp loc_1040EB6  +
mov eax [ebp+var_1C] +
mov ecx ebx +
push [ebp+var_C]  +
push [ebp+var_10]  +
push 0  +
push 4E20h  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push ecx  +
mov ecx [ebp+var_2C] +
push eax  +
push 1  +
call sub_103E919  +
mov eax [ebp+var_1C] +
mov [esi+8] eax +
mov [esi+0Ch] ebx +
cmp edi ebx +
ja loc_1040EEC  +
jb loc_1040EE8  +
cmp [esi] eax +
jnb loc_1040EEC  +
mov eax [esi] +
jmp loc_1040EEE  +
mov edi ebx +
mov [esi+4] edi +
jmp loc_1040EFF  +
mov eax [ebp+var_1C] +
mov [esi+4] ebx +
mov [esi+8] eax +
mov [esi+0Ch] ebx +
inc [ebp+var_10]  +
mov [esi] eax +
mov eax [ebp+var_10] +
add esi 10h +
cmp eax [ebp+var_8] +
jb loc_1040E82  +
cmp [ebp+var_1] 0 +
jz loc_1040F4F  +
mov eax [ebp+var_14] +
test eax eax +
jbe loc_1040F41  +
sub eax [ebp+var_8] +
mov [ebp+var_30] ebx +
mov [ebp+var_14] eax +
mov eax [ebp+var_28] +
sub [ebp+var_C] eax +
mov eax [ebp+var_1C] +
add [ebp+var_1C] 0FFFFB1E0h +
mov [ebp+var_34] eax +
adc ebx 0FFFFFFFFh +
jmp loc_1040F45  +
mov [ebp+var_1] 0 +
cmp [ebp+var_1] 0 +
jnz loc_1040E6A  +
xor ecx ecx +
xor edi edi +
cmp [ebp+var_38] ecx +
jbe loc_1040FE3  +
mov eax 4E20h +
mov dword ptr [ebp+var_8C] eax +
mov eax ecx +
mov dword ptr [ebp+var_54+4] eax +
mov ebx 7FFFFFFFh +
and eax ebx +
mov esi 80000000h +
and dword ptr [ebp+var_54+4] esi +
mov dword ptr [ebp+var_54] ecx +
mov ecx [ebp+var_3C] +
mov dword ptr [ebp+var_8C+4] eax +
fild  [ebp+var_8C] +
add ecx 4 +
fild  [ebp+var_54] +
fchs   +
faddp st(1) st +
fstp  dword ptr [ebp+var_20] +
mov eax [ecx+8] +
mov edx [ecx+4] +
and dword ptr [ebp+var_54] 0 +
mov dword ptr [ebp+var_54+4] eax +
and dword ptr [ebp+var_54+4] esi +
and eax ebx +
mov dword ptr [ebp+var_8C] edx +
mov dword ptr [ebp+var_8C+4] eax +
fild  [ebp+var_8C] +
xor edx edx +
fild  [ebp+var_54] +
mov eax edi +
div  [ebp+var_8] +
fchs   +
faddp st(1) st +
fmul  ds:dbl_1001648 +
fdiv  dword ptr [ebp+var_20] +
inc edi  +
mov [ecx-4] dl +
fstp  dword ptr [ecx] +
add ecx 10h +
cmp edi [ebp+var_38] +
jb loc_1040F9A  +
mov edi [ebp+var_58] +
mov esi [ebp+var_5C] +
mov ebx [ebp+var_2C] +
push 0  +
push 4E20h  +
push edi  +
push esi  +
push [ebp+var_60]  +
mov ecx ebx +
push [ebp+var_64]  +
call sub_103E89A  +
cmp eax [ebp+var_38] +
jnz loc_104157F  +
mov eax [ebx] +
mov ecx [ebx+8] +
mov [ebp+var_70] ecx +
test eax eax +
jz loc_104157F  +
lea edx [ebp+var_40] +
push edx  +
lea edx [ebp+var_B8] +
push edx  +
push eax  +
push ecx  +
push edi  +
push esi  +
push [ebp+var_60]  +
mov ecx ebx +
push [ebp+var_64]  +
call sub_103EF1E  +
mov bl al +
mov eax dword_1079A94 +
mov [ebp+var_8] eax +
cmp eax 20h +
ja loc_104157F  +
push [ebp+var_B4]  +
push 0  +
push [ebp+var_44]  +
call memset  +
add esp 0Ch +
test bl bl +
jz loc_104139E  +
mov ecx [ebp+var_8] +
mov eax [ebp+var_38] +
sub eax ecx +
mov [ebp+var_14] eax +
mov eax esi +
add eax 0FFFFB1E0h +
mov ebx edi +
adc ebx 0FFFFFFFFh +
mov [ebp+var_34] esi +
mov [ebp+var_30] edi +
mov [ebp+var_1C] eax +
test ecx ecx +
jbe loc_10410A0  +
lea eax [ebp+var_2F4] +
mov [eax-8] esi +
mov [eax-4] edi +
mov [eax] esi +
mov [eax+4] edi +
add eax 10h +
dec ecx  +
jnz loc_104108F  +
mov esi [ebp+var_40] +
inc esi  +
mov [ebp+var_24] esi +
shl esi 5 +
add esi [ebp+var_70] +
mov eax [esi-0Ch] +
dec [ebp+var_24]  +
sub esi 20h +
cmp eax ebx +
ja loc_10411B5  +
jb loc_10410CC  +
mov eax [esi+10h] +
cmp eax [ebp+var_1C] +
ja loc_10411B5  +
mov eax [ebp+var_8] +
shl eax 4 +
mov [ebp+var_28] eax +
mov eax [ebp+var_14] +
shl eax 4 +
add eax [ebp+var_44] +
mov [ebp+var_C] eax +
and [ebp+var_10] 0 +
cmp [ebp+var_8] 0 +
jbe loc_104117D  +
lea edi [ebp+var_2FC] +
mov eax [edi+4] +
mov ecx [edi] +
cmp eax [ebp+var_30] +
ja loc_104115D  +
jb loc_1041106  +
cmp ecx [ebp+var_34] +
jnb loc_104115D  +
cmp eax ebx +
jb loc_1041111  +
ja loc_1041116  +
cmp ecx [ebp+var_1C] +
ja loc_1041116  +
mov ecx [ebp+var_1C] +
mov eax ebx +
push [ebp+var_C]  +
push [ebp+var_10]  +
push 0  +
push 4E20h  +
push dword ptr [edi+0Ch]  +
push dword ptr [edi+8]  +
push eax  +
push ecx  +
mov ecx [ebp+var_2C] +
push 0  +
call sub_103E919  +
mov eax [ebp+var_1C] +
mov [edi+8] eax +
mov [edi+0Ch] ebx +
cmp [edi+4] ebx +
ja loc_1041153  +
jb loc_104114C  +
mov eax [edi] +
cmp eax [ebp+var_1C] +
jnb loc_1041153  +
mov eax [edi] +
mov ecx [edi+4] +
jmp loc_1041158  +
mov eax [ebp+var_1C] +
mov ecx ebx +
mov [edi+4] ecx +
jmp loc_1041169  +
mov eax [ebp+var_1C] +
mov [edi+4] ebx +
mov [edi+8] eax +
mov [edi+0Ch] ebx +
inc [ebp+var_10]  +
mov [edi] eax +
mov eax [ebp+var_10] +
add edi 10h +
cmp eax [ebp+var_8] +
jb loc_10410F5  +
mov eax [ebp+var_8] +
sub [ebp+var_14] eax +
mov eax [ebp+var_28] +
sub [ebp+var_C] eax +
mov eax [ebp+var_1C] +
add [ebp+var_1C] 0FFFFB1E0h +
mov [ebp+var_34] eax +
mov eax [esi+14h] +
mov [ebp+var_30] ebx +
adc ebx 0FFFFFFFFh +
cmp eax ebx +
jb loc_10410E1  +
ja loc_10411B5  +
mov eax [esi+10h] +
cmp eax [ebp+var_1C] +
jbe loc_10410E1  +
mov eax [esi+0Ch] +
mov ecx [esi+8] +
cmp eax [ebp+var_30] +
ja loc_1041295  +
jb loc_10411CF  +
cmp ecx [ebp+var_34] +
jnb loc_1041295  +
mov al [esi] +
mov cl al +
and cl 3Fh +
cmp cl 20h +
jnb loc_104157F  +
mov edi [esi+14h] +
movzx eax al +
and eax 3Fh +
mov [ebp+var_40] eax +
shl eax 4 +
lea ecx [ebp+eax+var_2FC] +
mov edx [ecx] +
mov [ebp+var_4C] edx +
mov edx [ecx+4] +
mov [ebp+var_48] edx +
cmp edi edx +
jb loc_1041232  +
ja loc_104120E  +
mov edx [esi+10h] +
cmp edx [ebp+var_4C] +
jb loc_1041232  +
mov edx [esi+0Ch] +
cmp [ebp+var_48] edx +
ja loc_1041228  +
jb loc_1041220  +
mov eax [ebp+var_4C] +
cmp eax [esi+8] +
jnb loc_1041228  +
mov eax [ebp+var_4C] +
mov edx [ebp+var_48] +
jmp loc_104122B  +
mov eax [esi+8] +
mov [ecx] eax +
mov [ecx+4] edx +
jmp loc_1041295  +
mov ecx [ebp+var_14] +
shl ecx 4 +
add ecx [ebp+var_44] +
push ecx  +
push [ebp+var_40]  +
mov ecx [ebp+var_2C] +
push 0  +
push 4E20h  +
push [ebp+eax+var_2F0]  +
push [ebp+eax+var_2F4]  +
push [ebp+var_48]  +
push [ebp+var_4C]  +
push 0  +
call sub_103E919  +
movzx eax byte ptr [esi] +
mov ecx [esi+8] +
and eax 3Fh +
shl eax 4 +
mov [ebp+eax+var_2FC] ecx +
mov ecx [esi+0Ch] +
mov [ebp+eax+var_2F8] ecx +
mov ecx [esi+10h] +
mov [ebp+eax+var_2F4] ecx +
mov ecx [esi+14h] +
mov [ebp+eax+var_2F0] ecx +
mov eax [ebp+var_24] +
cmp eax [ebp+var_B8] +
ja loc_10410AD  +
mov eax [ebp+var_8] +
shl eax 4 +
mov [ebp+var_28] eax +
mov eax [ebp+var_14] +
shl eax 4 +
add eax [ebp+var_44] +
mov [ebp+var_C] eax +
and [ebp+var_10] 0 +
cmp [ebp+var_8] 0 +
mov [ebp+var_1] 0 +
jbe loc_104139E  +
lea esi [ebp+var_2FC] +
mov edi [esi+4] +
mov eax [esi] +
cmp edi [ebp+var_30] +
ja loc_1041342  +
jb loc_10412E2  +
cmp eax [ebp+var_34] +
jnb loc_1041342  +
cmp edi ebx +
ja loc_10412FC  +
jb loc_10412ED  +
cmp eax [ebp+var_1C] +
jnb loc_10412F1  +
mov [ebp+var_1] 1 +
cmp edi ebx +
jb loc_1041300  +
ja loc_10412FC  +
cmp eax [ebp+var_1C] +
jbe loc_1041300  +
mov ecx edi +
jmp loc_1041305  +
mov eax [ebp+var_1C] +
mov ecx ebx +
push [ebp+var_C]  +
push [ebp+var_10]  +
push 0  +
push 4E20h  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+8]  +
push ecx  +
mov ecx [ebp+var_2C] +
push eax  +
push 0  +
call sub_103E919  +
mov eax [ebp+var_1C] +
mov [esi+8] eax +
mov [esi+0Ch] ebx +
cmp edi ebx +
ja loc_104133B  +
jb loc_1041337  +
cmp [esi] eax +
jnb loc_104133B  +
mov eax [esi] +
jmp loc_104133D  +
mov edi ebx +
mov [esi+4] edi +
jmp loc_104134E  +
mov eax [ebp+var_1C] +
mov [esi+4] ebx +
mov [esi+8] eax +
mov [esi+0Ch] ebx +
inc [ebp+var_10]  +
mov [esi] eax +
mov eax [ebp+var_10] +
add esi 10h +
cmp eax [ebp+var_8] +
jb loc_10412D1  +
cmp [ebp+var_1] 0 +
jz loc_104139E  +
mov eax [ebp+var_14] +
test eax eax +
jbe loc_1041390  +
sub eax [ebp+var_8] +
mov [ebp+var_30] ebx +
mov [ebp+var_14] eax +
mov eax [ebp+var_28] +
sub [ebp+var_C] eax +
mov eax [ebp+var_1C] +
add [ebp+var_1C] 0FFFFB1E0h +
mov [ebp+var_34] eax +
adc ebx 0FFFFFFFFh +
jmp loc_1041394  +
mov [ebp+var_1] 0 +
cmp [ebp+var_1] 0 +
jnz loc_10412B9  +
xor ebx ebx +
cmp [ebp+var_38] ebx +
jbe loc_1041430  +
xor ecx ecx +
mov dword ptr [ebp+var_54+4] ecx +
mov edi 7FFFFFFFh +
and ecx edi +
mov eax 4E20h +
mov dword ptr [ebp+var_8C+4] ecx +
mov ecx [ebp+var_44] +
mov esi 80000000h +
and dword ptr [ebp+var_54+4] esi +
mov dword ptr [ebp+var_8C] eax +
fild  [ebp+var_8C] +
mov dword ptr [ebp+var_54] ebx +
fild  [ebp+var_54] +
add ecx 4 +
fchs   +
faddp st(1) st +
fstp  dword ptr [ebp+var_20] +
mov eax [ecx+8] +
mov edx [ecx+4] +
and dword ptr [ebp+var_54] 0 +
mov dword ptr [ebp+var_54+4] eax +
and dword ptr [ebp+var_54+4] esi +
and eax edi +
mov dword ptr [ebp+var_8C] edx +
mov dword ptr [ebp+var_8C+4] eax +
fild  [ebp+var_8C] +
xor edx edx +
fild  [ebp+var_54] +
mov eax ebx +
div  [ebp+var_8] +
fchs   +
faddp st(1) st +
fmul  ds:dbl_1001648 +
fdiv  dword ptr [ebp+var_20] +
inc ebx  +
mov [ecx-4] dl +
fstp  dword ptr [ecx] +
add ecx 10h +
cmp ebx [ebp+var_38] +
jb loc_10413E7  +
and dword ptr [ebp+var_20] 0 +
cmp [ebp+var_38] 0 +
jbe loc_10414A0  +
mov eax [ebp+var_3C] +
mov ebx [ebp+var_44] +
lea edi [eax+4] +
sub ebx eax +
mov eax dword ptr [ebp+var_20] +
fld  dword ptr [edi] +
xor edx edx +
div  [ebp+var_68] +
mov eax [ebp+var_98] +
push ecx  +
fstp  [esp+30Ch+var_30C] +
mov esi edx +
imul esi esi +
lea ecx [esi+eax] +
call sub_103EB12  +
mov eax [ebp+var_74] +
fld  dword ptr [ebx+edi] +
push ecx  +
lea ecx [esi+eax] +
fstp  [esp+30Ch+var_30C] +
call sub_103EB12  +
fld  dword ptr [edi] +
mov eax [ebp+var_6C] +
fadd  dword ptr [ebx+edi] +
push ecx  +
lea ecx [esi+eax] +
fstp  [ebp+var_40] +
fld  [ebp+var_40] +
fstp  [esp+30Ch+var_30C] +
call sub_103EB12  +
inc dword ptr [ebp+var_20]  +
mov eax dword ptr [ebp+var_20] +
add edi 10h +
cmp eax [ebp+var_38] +
jb loc_1041445  +
push [ebp+NumberOfBytesWritten]  +
push offset aTableLevel1N_5  +
call sub_1023CCF  +
push [ebp+NumberOfBytesWritten]  +
push offset aHeaderDataNa_0  +
call sub_1023CCF  +
push [ebp+NumberOfBytesWritten]  +
push offset aHeader_2  +
call sub_1023CCF  +
and dword ptr [ebp+var_20] 0 +
cmp [ebp+var_68] 0 +
jbe loc_1041572  +
mov esi [ebp+var_74] +
mov eax [ebp+var_6C] +
sub eax esi +
mov [ebp+var_70] eax +
mov eax [ebp+var_98] +
sub eax esi +
mov [ebp+var_40] eax +
push dword ptr [ebp+var_20]  +
push offset aItemDataNam_21  +
push [ebp+NumberOfBytesWritten]  +
call sub_1024264  +
mov eax [ebp+var_40] +
add esp 0Ch +
push 7  +
pop ebx  +
lea edi [eax+esi] +
mov eax [ebp+var_70] +
push ebx  +
lea ecx [eax+esi] +
call sub_103EB57  +
push eax  +
push ebx  +
mov ecx esi +
call sub_103EB57  +
push eax  +
push ebx  +
mov ecx edi +
call sub_103EB57  +
push eax  +
push ebx  +
mov ecx edi +
call sub_103EBA0  +
push ecx  +
push ecx  +
fstp  [esp+31Ch+var_31C] +
push ebx  +
mov ecx edi +
call sub_103EB75  +
push ecx  +
push ecx  +
fstp  [esp+324h+var_324] +
push offset aItemDataNam_22  +
push [ebp+NumberOfBytesWritten]  +
call sub_1024264  +
add esp 24h +
dec ebx  +
jns loc_1041507  +
push [ebp+NumberOfBytesWritten]  +
push offset aItem_1  +
call sub_1023CCF  +
inc dword ptr [ebp+var_20]  +
mov eax dword ptr [ebp+var_20] +
add esi 24h +
cmp eax [ebp+var_68] +
jb loc_10414EB  +
push [ebp+NumberOfBytesWritten]  +
push offset aTable_0  +
call sub_1023CCF  +
push [ebp+var_98]  +
call ??3@YAXPAX@Z  +
xor esi esi +
pop ecx  +
cmp [ebp+var_74] esi +
jz loc_104159B  +
push [ebp+var_74]  +
call ??3@YAXPAX@Z  +
pop ecx  +
cmp [ebp+var_6C] esi +
jz loc_10415A9  +
push [ebp+var_6C]  +
call ??3@YAXPAX@Z  +
pop ecx  +
cmp [ebp+var_3C] esi +
jz loc_10415B7  +
push [ebp+var_3C]  +
call ??3@YAXPAX@Z  +
pop ecx  +
cmp [ebp+var_44] esi +
jz loc_10415C5  +
push [ebp+var_44]  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov esi [ebp+var_2C] +
mov edi ds:qsort +
mov ebx offset sub_103E871 +
push ebx  +
push 208h  +
push [ebp+var_D0]  +
push [ebp+var_78]  +
call edi  +
push ebx  +
push 208h  +
push [ebp+var_C4]  +
push [ebp+var_84]  +
call edi  +
add esp 20h +
push [ebp+var_C4]  +
mov ecx esi +
push [ebp+var_84]  +
push [ebp+var_D0]  +
push [ebp+var_78]  +
push [ebp+var_58]  +
push [ebp+var_5C]  +
push [ebp+var_7C]  +
push [ebp+var_80]  +
push [ebp+NumberOfBytesWritten]  +
call sub_103FC98  +
cmp [ebp+var_78] 0 +
jz loc_1041635  +
push [ebp+var_78]  +
call ??3@YAXPAX@Z  +
pop ecx  +
cmp [ebp+var_84] 0 +
jz loc_104164A  +
push [ebp+var_84]  +
call ??3@YAXPAX@Z  +
pop ecx  +
lea ecx [ebp+var_C4] +
call sub_103ECB6  +
lea ecx [ebp+var_D0] +
call sub_103ECB6  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10566D8 +
mov ecx [eax+680h] +
sub esp 20h +
push esi  +
mov esi [ebp+arg_0] +
movzx eax word ptr [esi+4] +
push edi  +
test al 40h +
jz loc_1041690  +
push 40h  +
jmp loc_104169E  +
test al 20h +
jnz loc_104169C  +
test ecx ecx +
jbe loc_104169C  +
mov edi ecx +
jmp loc_104169F  +
push 20h  +
pop edi  +
mov eax dword_1057990 +
sub eax 0 +
jz loc_10416B2  +
dec eax  +
dec eax  +
jz loc_104171D  +
jmp loc_1041870  +
xor eax eax +
inc eax  +
cmp dword_1079A84 eax +
jnz loc_104170B  +
mov ecx dword_1079A88 +
or ecx dword_1079A8C +
jz loc_104170B  +
cmp edi 20h +
jz loc_10416DF  +
cmp edi 40h +
jz loc_10416DF  +
mov dword_1057990 eax +
jmp loc_1041870  +
push 18h  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jz loc_10416F4  +
mov ecx eax +
call sub_103F8B9  +
jmp loc_10416F6  +
xor eax eax +
xor ecx ecx +
test eax eax +
setnz cl  +
mov dword_1057994 eax +
inc ecx  +
mov dword_1057990 ecx +
jmp loc_1041710  +
mov dword_1057990 eax +
cmp dword_1057990 1 +
jz loc_1041870  +
mov al [esi+50h] +
xor al byte ptr [ebp+var_20] +
and al 3Fh +
xor byte ptr [ebp+var_20] al +
mov eax [esi+10h] +
and byte ptr [ebp+var_20] 3Fh +
mov [ebp+var_10] eax +
mov eax [esi+14h] +
mov [ebp+var_C] eax +
movzx eax byte ptr [esi+2Dh] +
or eax 0F00h +
sub eax 0F43h +
jz loc_10417D6  +
dec eax  +
jz loc_104175A  +
dec eax  +
jnz loc_1041866  +
or byte ptr [ebp+var_20] 80h +
mov eax [esi+5Ch] +
cmp edi 20h +
jnz loc_1041784  +
cmp word ptr [esi+56h] 0Ch +
jb loc_1041866  +
mov ecx [eax] +
mov [ebp+var_18] ecx +
mov edx [eax+4] +
mov [ebp+var_14] edx +
mov eax [eax+8] +
and [ebp+var_4] 0 +
mov [ebp+var_8] eax +
jmp loc_10417A6  +
cmp word ptr [esi+56h] 10h +
jb loc_1041866  +
mov ecx [eax] +
mov [ebp+var_18] ecx +
mov edx [eax+4] +
mov [ebp+var_14] edx +
mov esi [eax+8] +
mov [ebp+var_8] esi +
mov eax [eax+0Ch] +
mov [ebp+var_4] eax +
push edx  +
push ecx  +
lea eax [ebp+var_18] +
push eax  +
call sub_103B0CD  +
mov eax [ebp+var_C] +
cmp eax [ebp+var_14] +
jb loc_1041866  +
ja loc_10417CB  +
mov eax [ebp+var_10] +
cmp eax [ebp+var_18] +
jb loc_1041866  +
mov ecx dword_1057994 +
jmp loc_1041859  +
mov eax [esi+5Ch] +
test eax eax +
jz loc_1041866  +
cmp edi 20h +
jnz loc_1041807  +
cmp word ptr [esi+56h] 0Dh +
jb loc_1041866  +
mov ecx [eax] +
mov [ebp+var_18] ecx +
mov esi [eax+4] +
mov [ebp+var_14] esi +
mov edx [eax+8] +
and [ebp+var_4] 0 +
mov [ebp+var_8] edx +
mov al [eax+0Ch] +
jmp loc_1041828  +
cmp word ptr [esi+56h] 11h +
jb loc_1041866  +
mov ecx [eax] +
mov [ebp+var_18] ecx +
mov esi [eax+4] +
mov [ebp+var_14] esi +
mov edx [eax+8] +
mov [ebp+var_8] edx +
mov edx [eax+0Ch] +
mov [ebp+var_4] edx +
mov al [eax+10h] +
shl al 6 +
xor al byte ptr [ebp+var_20] +
push esi  +
and al 40h +
xor byte ptr [ebp+var_20] al +
push ecx  +
lea eax [ebp+var_18] +
push eax  +
call sub_103B0CD  +
mov eax [ebp+var_C] +
cmp eax [ebp+var_14] +
jb loc_1041866  +
ja loc_1041850  +
mov eax [ebp+var_10] +
cmp eax [ebp+var_18] +
jb loc_1041866  +
mov ecx dword_1057994 +
add ecx 0Ch +
lea eax [ebp+var_20] +
push eax  +
call sub_103EBFF  +
test al al +
jnz loc_1041870  +
mov dword_1057990 1 +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_1057990 1 +
jz loc_10418C7  +
mov ecx dword_1057994 +
test ecx ecx +
jz loc_10418C7  +
call sub_103F88B  +
push 0  +
push 2710h  +
push offset aTracerptdpcisr  +
push [ebp+lpBuffer]  +
call sub_102F3F0  +
push [ebp+lpBuffer]  +
mov ecx dword_1057994 +
call sub_103FE55  +
push [ebp+lpBuffer]  +
push offset aSection_0  +
call sub_1023CCF  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:__imp__vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_10418F9  +
cmp eax esi +
ja loc_10418F9  +
jz loc_10418FE  +
jmp loc_1041906  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_104190F  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov eax [ecx+8] +
test eax eax +
jz locret_1041932  +
push eax  +
push 0  +
push hHeap  +
call ds:HeapFree  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
movzx eax word ptr [esi] +
push edi  +
push eax  +
push 8  +
push hHeap  +
mov edi ecx +
call ds:HeapAlloc  +
mov [edi+8] eax +
test eax eax +
jz loc_104197E  +
mov cx [esi] +
mov [edi+4] cx +
mov cx [esi+2] +
mov [edi+6] cx +
movzx ecx word ptr [esi] +
push ecx  +
push dword ptr [esi+4]  +
push eax  +
call memcpy  +
add esp 0Ch +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+4] +
movzx eax word ptr [eax] +
push esi  +
push edi  +
shr eax 1 +
xor esi esi +
xor edi edi +
jmp loc_10419B8  +
cmp dx 39h +
ja loc_10419C1  +
cmp edi eax +
jnb loc_10419C3  +
imul esi esi +
movzx edx dx +
inc ecx  +
inc ecx  +
lea esi [esi+edx-30h] +
inc edi  +
movzx edx word ptr [ecx] +
cmp dx 30h +
jnb loc_10419A1  +
cmp edi eax +
jz loc_10419CC  +
mov eax 0C007EE20h +
jmp loc_10419D3  +
mov eax [ebp+arg_4] +
mov [eax] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ecx+4] +
mov cx [ecx] +
mov edx 0FFFEh +
xor ebx ebx +
push edi  +
and cx dx +
xor edi edi +
xor eax eax +
mov [ebp+var_4] ebx +
mov byte ptr [ebp+arg_0+3] bl +
cmp cx 4Ch +
jz loc_1041A12  +
push 0Dh  +
pop eax  +
jmp loc_1041AFD  +
mov edx [ebp+arg_4] +
mov [ebp+var_C] offset aXxxxxxxxXxxxXx +
sub [ebp+var_C] esi +
mov [ebp+var_10] ebx +
mov [ebp+var_8] esi +
mov ecx [ebp+var_8] +
movzx ecx word ptr [ecx] +
cmp cx bx +
jz loc_1041AFB  +
mov ebx [ebp+var_8] +
mov esi [ebp+var_C] +
movzx esi word ptr [esi+ebx] +
push 78h  +
pop ebx  +
movzx ecx cx +
cmp bx si +
jnz loc_1041A91  +
lea ebx [ecx-30h] +
cmp bx 9 +
ja loc_1041A5E  +
movzx ecx cx +
shl eax 4 +
lea eax [eax+ecx-30h] +
jmp loc_1041A8C  +
lea ebx [ecx-61h] +
cmp bx 5 +
ja loc_1041A73  +
movzx ecx cx +
shl eax 4 +
lea eax [eax+ecx-57h] +
jmp loc_1041A8C  +
lea ebx [ecx-41h] +
cmp bx 5 +
ja loc_1041A88  +
movzx ecx cx +
shl eax 4 +
lea eax [eax+ecx-37h] +
jmp loc_1041A8C  +
mov byte ptr [ebp+arg_0+3] 0 +
inc [ebp+var_4]  +
jmp loc_1041A98  +
cmp cx si +
setz byte ptr [ebp+arg_0+3]  +
xor ebx ebx +
cmp byte ptr [ebp+arg_0+3] bl +
jz loc_1041A0A  +
push 2Dh  +
pop ecx  +
cmp cx si +
jnz loc_1041AD5  +
cmp edi ebx +
jnz loc_1041AB8  +
mov [edx] eax +
xor edi edi +
xor eax eax +
inc edi  +
jmp loc_1041AE7  +
cmp edi 1 +
jnz loc_1041AC8  +
mov [edx+4] ax +
push 2  +
xor eax eax +
pop edi  +
jmp loc_1041AE7  +
cmp edi 2 +
jnz loc_1041AD5  +
mov [edx+6] ax +
push 3  +
jmp loc_1041AC3  +
cmp edi 3 +
jb loc_1041AEA  +
cmp [ebp+var_4] 2 +
jnz loc_1041AEA  +
mov [edi+edx+5] al +
xor eax eax +
inc edi  +
mov [ebp+var_4] ebx +
inc [ebp+var_10]  +
add [ebp+var_8] 2 +
cmp [ebp+var_10] 26h +
jb loc_1041A25  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
xor eax eax +
cmp ecx eax +
jz loc_1041B2A  +
push edi  +
mov [ecx+0Ch] eax +
mov [ecx+8] eax +
mov [ecx+18h] al +
lea edi [ecx+10h] +
stos   +
stos   +
mov [ecx+4] ecx +
mov [ecx] ecx +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1041B64  +
push edi  +
push 6  +
pop ecx  +
xor eax eax +
push 68h  +
lea edi [esi+14h] +
push eax  +
stos   +
lea eax [esi+30h] +
push eax  +
call memset  +
add esp 0Ch +
xor eax eax +
mov [esi+98h] ax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1041B8D  +
push esi  +
call sub_1041B33  +
add esi 0A0h +
push esi  +
call sub_1041B33  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jz loc_1041C02  +
push edi  +
xor eax eax +
mov [esi+76h] ax +
mov [esi+204h] ax +
mov [esi+70h] ebx +
mov [esi+6Ch] ebx +
mov [esi+68h] ebx +
mov [esi+64h] ebx +
mov [esi+14h] ebx +
mov [esi+10h] ebx +
mov [esi+74h] bl +
lea edi [esi+20h] +
stos   +
push 30h  +
stos   +
lea eax [esi+1D4h] +
push ebx  +
push eax  +
call memset  +
lea eax [esi+8] +
mov [esi+0Ch] eax +
mov [eax] eax +
add esp 0Ch +
lea eax [esi+1B8h] +
push eax  +
mov [esi+18h] ebx +
call sub_1041B07  +
add esi 78h +
push esi  +
call sub_1041B6E  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
cmp eax ecx +
jz loc_1041C3C  +
or byte ptr [eax+76h] 3Fh +
mov [eax+70h] ecx +
mov [eax+6Ch] ecx +
mov [eax+68h] ecx +
mov [eax+74h] cx +
lea ecx [eax+8] +
mov [eax+0Ch] ecx +
mov [ecx] ecx +
lea ecx [eax+10h] +
mov [eax+14h] ecx +
mov [ecx] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1041C57  +
xor ecx ecx +
mov [eax+1Ch] cx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1041C8F  +
push edi  +
push 6  +
pop ecx  +
xor eax eax +
push 68h  +
lea edi [esi+28h] +
push eax  +
stos   +
lea eax [esi+40h] +
push eax  +
call memset  +
add esp 0Ch +
and dword ptr [esi+0A8h] 0 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1041CDC  +
mov dl [ebp+arg_4] +
and dword ptr [eax+0F8h] 0 +
lea ecx [eax+100h] +
and dword ptr [ecx] 0 +
or byte ptr [ecx] 48h +
lea ecx [eax+102h] +
add dl dl +
xor dl [ecx] +
add eax 48h +
and dl 2 +
xor [ecx] dl +
xor ecx ecx +
mov [eax+0B4h] cx +
push eax  +
call sub_1041C60  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1041CF5  +
mov byte ptr [eax+30h] 0 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push esi  +
mov esi [ecx+24h] +
test esi esi +
jz loc_1041D38  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_1041D38  +
cmp dword ptr [ecx+1Ch] 2 +
jnz loc_1041D38  +
push 0  +
push offset aReport_0  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
call sub_104B901  +
test al al +
jz loc_1041D38  +
or byte ptr [esi+84h] 10h +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
xor eax eax +
push ebx  +
push edi  +
xor ebx ebx +
mov [ecx+24h] ebx +
mov [ecx+28h] bl +
mov edx 1E3603Bh +
mov [ecx+18h] edx +
lea edi [ecx+1Ch] +
stos   +
stos   +
mov [ecx+38h] ebx +
mov [ecx+3Ch] bl +
mov [ecx+2Ch] edx +
xor eax eax +
lea edi [ecx+30h] +
stos   +
stos   +
mov [ecx+4Ch] ebx +
mov [ecx+50h] bl +
mov [ecx+40h] edx +
xor eax eax +
lea edi [ecx+44h] +
stos   +
stos   +
mov [ecx+60h] ebx +
mov [ecx+64h] bl +
xor eax eax +
mov [ecx+54h] edx +
lea edi [ecx+58h] +
stos   +
stos   +
pop edi  +
mov eax ecx +
pop ebx  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+54h] +
call sub_104191C  +
lea ecx [esi+40h] +
call sub_104191C  +
lea ecx [esi+2Ch] +
call sub_104191C  +
lea ecx [esi+18h] +
pop esi  +
jmp sub_104191C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
push edi  +
push offset aCounter  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1041DEE  +
mov eax [ebp+arg_4] +
and byte ptr [eax+76h] 0FEh +
jmp loc_1041E7D  +
push edi  +
push offset aInstance  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1041E0B  +
mov eax [ebp+arg_4] +
and byte ptr [eax+76h] 0FDh +
jmp loc_1041E7D  +
push edi  +
push offset aMachine  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1041E28  +
mov eax [ebp+arg_4] +
and byte ptr [eax+76h] 0FBh +
jmp loc_1041E7D  +
push edi  +
push offset aMean  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1041E45  +
mov eax [ebp+arg_4] +
and byte ptr [eax+76h] 0F7h +
jmp loc_1041E7D  +
push edi  +
push offset aMax  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1041E62  +
mov eax [ebp+arg_4] +
and byte ptr [eax+76h] 0DFh +
jmp loc_1041E7D  +
push edi  +
push offset aMin  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1041E81  +
mov eax [ebp+arg_4] +
and byte ptr [eax+76h] 0EFh +
xor eax eax +
jmp loc_1041E86  +
mov eax 0C007EE20h +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
xor edi edi +
push edi  +
push offset aXsString  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1041EBA  +
xor eax eax +
inc eax  +
jmp loc_104219B  +
push edi  +
push offset aXsDatetime  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1041ED5  +
push 2  +
jmp loc_104219A  +
push edi  +
push offset aXsByte  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1041EF0  +
push 3  +
jmp loc_104219A  +
push edi  +
push offset aXsUnsignedbyte  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1041F0B  +
push 4  +
jmp loc_104219A  +
push edi  +
push offset aXsShort  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1041F26  +
push 5  +
jmp loc_104219A  +
push edi  +
push offset aXsUnsignedshor  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1041F41  +
push 6  +
jmp loc_104219A  +
push edi  +
push offset aXsInt  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1041F5C  +
push 7  +
jmp loc_104219A  +
push edi  +
push offset aXsUnsignedint  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1041F77  +
push 8  +
jmp loc_104219A  +
push edi  +
push offset aXsLong  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1041F92  +
push 9  +
jmp loc_104219A  +
push edi  +
push offset aXsUnsignedlong  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1041FAD  +
push 0Ah  +
jmp loc_104219A  +
push edi  +
push offset aXsFloat  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1041FC8  +
push 0Bh  +
jmp loc_104219A  +
push edi  +
push offset aXsDouble  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1041FE3  +
push 0Ch  +
jmp loc_104219A  +
push edi  +
push offset aXsBoolean  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1041FFE  +
push 0Dh  +
jmp loc_104219A  +
push edi  +
push offset aXsGuid  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1042019  +
push 0Eh  +
jmp loc_104219A  +
push edi  +
push offset aXsHexbinary  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1042034  +
push 0Fh  +
jmp loc_104219A  +
push edi  +
push offset aWinHexint8  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_104204F  +
push 10h  +
jmp loc_104219A  +
push edi  +
push offset aWinHexint16  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_104206A  +
push 11h  +
jmp loc_104219A  +
push edi  +
push offset aWinHexint32  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1042085  +
push 12h  +
jmp loc_104219A  +
push edi  +
push offset aWinHexint64  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_10420A0  +
push 13h  +
jmp loc_104219A  +
push edi  +
push offset aWinPid  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_10420BB  +
push 14h  +
jmp loc_104219A  +
push edi  +
push offset aWinTid  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_10420D6  +
push 15h  +
jmp loc_104219A  +
push edi  +
push offset aWinPort  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_10420F1  +
push 16h  +
jmp loc_104219A  +
push edi  +
push offset aWinIpv4  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_104210C  +
push 17h  +
jmp loc_104219A  +
push edi  +
push offset aWinIpv6  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1042124  +
push 18h  +
jmp loc_104219A  +
push edi  +
push offset aWinSocketaddre  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_104213C  +
push 19h  +
jmp loc_104219A  +
push edi  +
push offset aWinCimdatetime  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1042154  +
push 1Ah  +
jmp loc_104219A  +
push edi  +
push offset aWinEtwtime  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_104216C  +
push 1Bh  +
jmp loc_104219A  +
push edi  +
push offset aWinXml  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_1042184  +
push 1Ch  +
jmp loc_104219A  +
push edi  +
push offset aWinErrorcode  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jnz loc_10421A9  +
push 1Dh  +
pop eax  +
mov ecx [ebp+arg_8] +
mov [ecx+0FCh] ax +
xor eax eax +
jmp loc_10421AE  +
mov eax 0C007EE20h +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
and dword ptr [ecx+0Ch] 0 +
push edi  +
mov byte ptr [ecx+10h] 0 +
xor eax eax +
mov edx 1E3603Bh +
mov [ecx] edx +
lea edi [ecx+4] +
stos   +
stos   +
and dword ptr [ecx+20h] 0 +
xor eax eax +
mov [ecx+14h] edx +
mov byte ptr [ecx+24h] 0 +
lea edi [ecx+18h] +
stos   +
stos   +
mov eax ecx +
pop edi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+14h] +
call sub_104191C  +
mov ecx esi +
pop esi  +
jmp sub_104191C  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+48h] +
call sub_10421EB  +
lea ecx [esi+30h] +
call sub_104191C  +
lea ecx [esi+1Ch] +
call sub_104191C  +
lea ecx [esi+8] +
pop esi  +
jmp sub_104191C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp byte ptr [eax+4Ch] 0 +
mov ecx [eax+1Ch] +
push esi  +
mov esi [eax+24h] +
jnz loc_1042272  +
test esi esi +
jz loc_1042272  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_1042272  +
cmp ecx 2 +
jnz loc_1042272  +
push 0  +
push offset aReport_0  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
call sub_104B901  +
test al al +
jz loc_1042272  +
or byte ptr [esi+84h] 20h +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
and dword ptr [ecx+14h] 0 +
push edi  +
mov byte ptr [ecx+18h] 0 +
xor eax eax +
mov edx 1E3603Bh +
mov [ecx+8] edx +
lea edi [ecx+0Ch] +
stos   +
stos   +
and dword ptr [ecx+28h] 0 +
xor eax eax +
mov [ecx+1Ch] edx +
mov byte ptr [ecx+2Ch] 0 +
lea edi [ecx+20h] +
stos   +
stos   +
mov eax ecx +
pop edi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+1Ch] +
call sub_104191C  +
lea ecx [esi+8] +
pop esi  +
jmp sub_104191C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+14h] +
push edi  +
shl eax 2 +
push eax  +
push 8  +
push hHeap  +
xor edi edi +
xor ebx ebx +
call ds:HeapAlloc  +
mov [esi+18h] eax +
test eax eax +
jnz loc_10422FB  +
xor al al +
jmp loc_1042332  +
lea ecx [esi+8] +
mov eax [ecx] +
jmp loc_104232C  +
test byte ptr [eax+0F0h] 40h +
jnz loc_1042314  +
test byte ptr [eax+100h] 10h +
jz loc_10422F7  +
test byte ptr [eax+100h] 10h +
jz loc_1042329  +
cmp edi [esi+14h] +
jnb loc_1042329  +
mov edx [esi+18h] +
mov [edx+edi*4] ebx +
inc edi  +
mov eax [eax] +
inc ebx  +
cmp ecx eax +
jnz loc_1042302  +
mov al 1 +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
add edi 8 +
mov esi [edi] +
jmp loc_1042372  +
mov eax esi +
test byte ptr [eax+0F0h] 40h +
mov esi [esi] +
jz loc_1042372  +
push 0  +
push offset aSysRequestrate  +
push dword ptr [eax+64h]  +
push dword ptr [eax+60h]  +
call sub_104B901  +
test al al +
jz loc_104237E  +
cmp edi esi +
jnz loc_104234F  +
mov al 1 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
xor al al +
jmp loc_1042378  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov cl [eax+205h] +
and cl 30h +
push esi  +
cmp cl 10h +
jbe loc_10423B9  +
push edi  +
push 4  +
pop ecx  +
lea edi [eax+1ECh] +
lea esi [eax+1D4h] +
xor edx edx +
cmps   +
pop edi  +
jz loc_10423B9  +
xor al al +
jmp loc_10423FA  +
lea edx [eax+8] +
mov eax [edx] +
jmp loc_10423F4  +
lea ecx [eax+88h] +
mov eax [eax] +
mov esi 100h +
test [ecx+4] si +
jz loc_10423F4  +
mov cl [ecx+2Dh] +
cmp cl 1 +
jz loc_10423F4  +
cmp cl 3 +
jz loc_10423F4  +
cmp cl 7 +
jz loc_10423F4  +
cmp cl 2 +
jz loc_10423F4  +
cmp cl 4 +
jz loc_10423F4  +
cmp cl 8 +
jnz loc_10423B5  +
cmp edx eax +
jnz loc_10423C0  +
mov al 1 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_14] +
push 68h  +
push 0  +
push ebx  +
call memset  +
add esp 0Ch +
cmp [ebp+arg_10] 0 +
jz loc_1042428  +
mov al byte ptr [ebp+arg_4] +
mov [ebx+2Dh] al +
jmp loc_1042430  +
mov ax [ebp+arg_4] +
mov [ebx+28h] ax +
cmp [ebp+arg_10] 0 +
mov al [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea edi [ebx+18h] +
movs   +
movs   +
movs   +
movs   +
mov [ebx+2Ah] al +
mov ax [ebp+arg_C] +
pop edi  +
mov [ebx+2Eh] ax +
pop esi  +
jz loc_104245B  +
mov eax 100h +
or [ebx+4] ax +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
cmp dword ptr [edi+68h] 0 +
jbe loc_10424AD  +
lea ebx [edi+74h] +
mov eax [ebx] +
lea esi [ebx-4] +
test eax eax +
jz loc_104249F  +
add eax edi +
jz loc_104249F  +
push 0  +
push eax  +
mov eax [ebp+arg_4] +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_104B901  +
test al al +
jnz loc_10424B6  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
add ebx 18h +
cmp eax [edi+68h] +
jb loc_104247E  +
xor al al +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
mov eax [esi] +
test al 1 +
jnz loc_10424AD  +
test al 4 +
jnz loc_10424C7  +
cmp word ptr [esi+10h] 1 +
jbe loc_10424CD  +
cmp dword ptr [edi+30h] 1 +
jnz loc_10424AD  +
mov edi [ebp+arg_8] +
test edi edi +
jz loc_10424D9  +
push 6  +
pop ecx  +
movs   +
mov al 1 +
jmp loc_10424AF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
test eax eax +
jz locret_104251C  +
mov ecx [eax+4] +
mov eax [eax+8] +
push [ebp+arg_8]  +
mov [ebp+var_4] eax +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
mov [ebp+var_8] ecx +
call sub_1042465  +
movzx eax al +
neg eax  +
sbb eax eax +
and eax 3FF811DCh +
add eax 0C007EE24h +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 102Ch +
call __alloca_probe  +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_1020] eax +
mov eax [ebp+arg_8] +
push ebx  +
mov [ebp+var_101C] eax +
mov eax [ebp+arg_C] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_100C] eax +
movzx eax word ptr [edi+10h] +
mov dword ptr [ebp+var_1028] eax +
mov al [edi+12h] +
mov [ebp+var_1024] al +
movzx eax word ptr [edi+14h] +
mov [ebp+var_1010] 0 +
lea esi [ebp+var_1004] +
mov dword ptr [ebp+var_102C] eax +
push [ebp+var_100C]  +
push dword ptr [ebp+var_1010]  +
push dword ptr [ebp+var_102C]  +
push dword ptr [ebp+var_1024]  +
push dword ptr [ebp+var_1028]  +
push edi  +
call sub_1042404  +
lea eax [ebp+dwBytes] +
push eax  +
push esi  +
lea eax [ebp+var_1008] +
push eax  +
lea eax [ebp+var_1014] +
push eax  +
mov eax dword_10566D8 +
mov [ebp+dwBytes] 1000h +
push dword ptr [eax+690h]  +
push [ebp+var_100C]  +
call TdhGetAllEventsInformation  +
mov ebx eax +
mov eax [ebp+var_1014] +
test ebx ebx +
jnz loc_10425FB  +
cmp eax [ebp+var_1008] +
jb loc_1042691  +
cmp ebx 7Ah +
jnz loc_1042677  +
test esi esi +
jz loc_104261D  +
lea eax [ebp+var_1004] +
cmp esi eax +
jz loc_104261D  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_104268C  +
lea eax [ebp+dwBytes] +
push eax  +
push esi  +
lea eax [ebp+var_1008] +
push eax  +
lea eax [ebp+var_1014] +
push eax  +
mov eax dword_10566D8 +
push dword ptr [eax+690h]  +
push [ebp+var_100C]  +
call TdhGetAllEventsInformation  +
mov ebx eax +
test ebx ebx +
jnz loc_10426A7  +
mov eax [ebp+var_1014] +
cmp eax [ebp+var_1008] +
jb loc_1042691  +
cmp [ebp+var_1010] 0 +
jnz loc_10426C6  +
mov [ebp+var_1010] 1 +
jmp loc_1042589  +
push 8  +
pop eax  +
jmp loc_10426D9  +
push [ebp+var_101C]  +
push [ebp+var_1020]  +
push dword ptr [esi+eax*4]  +
call sub_10424E2  +
mov ebx eax +
test esi esi +
jz loc_10426D7  +
lea eax [ebp+var_1004] +
cmp esi eax +
jz loc_10426D7  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
jmp loc_10426D7  +
test ebx ebx +
jnz loc_10426D7  +
cmp eax [ebp+var_1008] +
jb loc_10426D7  +
mov ebx 490h +
mov eax ebx +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+20h] +
mov edx [eax+24h] +
push ebx  +
mov ebx [eax+1Ch] +
push esi  +
push edi  +
xor edi edi +
test ecx ecx +
jz loc_104270B  +
mov edi ecx +
cmp byte ptr [eax+4Ch] 0 +
jnz loc_104271C  +
test edx edx +
jz loc_104275A  +
lea esi [edx+8] +
push 3  +
jmp loc_1042721  +
lea esi [eax+44h] +
push 2  +
pop eax  +
test edi edi +
jz loc_104275A  +
cmp eax ebx +
jnz loc_104275A  +
push 0  +
push offset aString_1  +
push dword ptr [edi+8]  +
push dword ptr [edi+4]  +
call sub_104B901  +
test al al +
jz loc_104275A  +
mov eax [esi+4] +
test eax eax +
jz loc_1042763  +
push [ebp+arg_4]  +
or byte ptr [eax+30h] 2 +
lea ecx [eax+1Ch] +
mov byte ptr [eax+2Ch] 0 +
call sub_1041938  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
mov eax 0C007EE12h +
jmp loc_104275C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push ebx  +
push ebx  +
push 3  +
push ebx  +
push ebx  +
push 80000000h  +
push [ebp+lpFileName]  +
mov [ebp+var_1] bl +
mov [ebp+hObject] ebx +
call ds:CreateFileW  +
mov esi [ebp+arg_4] +
mov [ebp+hFile] eax +
cmp eax 0FFFFFFFFh +
jnz loc_10427AC  +
call ds:GetLastError  +
jmp loc_1042832  +
lea ecx [ebp+FileSizeHigh] +
push ecx  +
push eax  +
mov [ebp+var_1] 1 +
call ds:GetFileSize  +
mov edi ds:GetLastError +
mov [ebp+lpFileName] eax +
cmp eax 0FFFFFFFFh +
jnz loc_10427CF  +
call edi  +
test eax eax +
jnz loc_1042806  +
cmp [ebp+FileSizeHigh] ebx +
jz loc_10427D8  +
push 18h  +
jmp loc_104281E  +
mov eax [ebp+lpFileName] +
push ebx  +
push ebx  +
push ebx  +
push 8  +
push ebx  +
push [ebp+hFile]  +
mov [esi+4] eax +
call ds:CreateFileMappingW  +
mov [ebp+hObject] eax +
cmp eax ebx +
jz loc_1042806  +
push ebx  +
push ebx  +
push ebx  +
push 1  +
push eax  +
call ds:MapViewOfFile  +
mov [esi] eax +
cmp eax ebx +
jnz loc_104280A  +
call edi  +
jmp loc_1042832  +
push dword ptr [esi+4]  +
push 2  +
call ds:GlobalAlloc  +
mov [esi+8] eax +
cmp eax ebx +
jnz loc_1042821  +
push 8  +
pop edi  +
jmp loc_1042851  +
push eax  +
call ds:GlobalLock  +
mov [ebp+lpFileName] eax +
call edi  +
cmp [ebp+lpFileName] ebx +
jnz loc_1042836  +
mov edi eax +
jmp loc_1042851  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
push [ebp+lpFileName]  +
call memcpy  +
add esp 0Ch +
push dword ptr [esi+8]  +
call ds:GlobalUnlock  +
xor edi edi +
mov eax [esi] +
cmp eax ebx +
jz loc_1042860  +
push eax  +
call ds:UnmapViewOfFile  +
mov [esi] ebx +
mov esi ds:CloseHandle +
cmp [ebp+hObject] ebx +
jz loc_1042870  +
push [ebp+hObject]  +
call esi  +
cmp [ebp+var_1] bl +
jz loc_104287A  +
push [ebp+hFile]  +
call esi  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push edi  +
push 800h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_10428B2  +
push 0Eh  +
pop edi  +
jmp loc_1042945  +
push esi  +
mov esi 400h +
push esi  +
push ebx  +
push [ebp+lpSrc]  +
call ds:ExpandEnvironmentStringsW  +
test eax eax +
jz loc_104292D  +
cmp eax esi +
jnb loc_104292D  +
mov esi [ebp+arg_4] +
push esi  +
push ebx  +
call sub_104276F  +
mov edi eax +
test edi edi +
jnz loc_1042935  +
lea edi [esi+10h] +
push edi  +
push eax  +
push dword ptr [esi+8]  +
call ds:CreateStreamOnHGlobal  +
test eax eax +
jz loc_10428F1  +
push 6Eh  +
jmp loc_104290A  +
and [ebp+var_4] 0 +
push [ebp+var_4]  +
mov ecx [esi+4] +
mov eax [edi] +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+18h]  +
test eax eax +
jz loc_104290D  +
push 19h  +
pop edi  +
jmp loc_1042935  +
push 0  +
add esi 0Ch +
push esi  +
push offset dword_1016668  +
call CreateXmlReader  +
test eax eax +
jnz loc_1042933  +
mov eax [esi] +
push dword ptr [edi]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
jmp loc_1042933  +
call ds:GetLastError  +
mov edi eax +
push ebx  +
push 0  +
push hHeap  +
call ds:HeapFree  +
pop esi  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+0Ch] 0 +
jz loc_104296A  +
mov eax [esi+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
cmp dword ptr [esi+10h] 0 +
jz loc_1042979  +
mov eax [esi+10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov esi [esi+8] +
test esi esi +
jz loc_1042987  +
push esi  +
call ds:GlobalFree  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+20h] +
test eax eax +
jz loc_10429B5  +
mov ecx [eax] +
push eax  +
push 0  +
mov [esi+20h] ecx +
push hHeap  +
call ds:HeapFree  +
jmp loc_1042998  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov al [ebp+arg_0] +
cmp al 1 +
jz loc_10429E3  +
cmp al 3 +
jz loc_10429E3  +
cmp al 7 +
jz loc_10429E3  +
cmp al 2 +
jz loc_10429DF  +
cmp al 4 +
jz loc_10429DF  +
cmp al 8 +
jnz loc_10429E3  +
mov al 1 +
jmp loc_10429E5  +
xor al al +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov esi eax +
mov al [eax+2Dh] +
push 1Ah  +
pop ecx  +
lea edi [ebp+var_6C] +
movs   +
cmp al 1 +
jz loc_1042A2E  +
cmp al 3 +
jz loc_1042A2E  +
cmp al 7 +
jz loc_1042A2E  +
cmp al 2 +
jz loc_1042A99  +
cmp al 4 +
jz loc_1042A99  +
cmp al 8 +
jz loc_1042A99  +
push 1  +
push ebx  +
lea eax [ebp+var_6C] +
push eax  +
mov [ebp+var_3F] 2 +
call sub_10259D2  +
test eax eax +
jnz loc_1042A4A  +
push 8  +
pop eax  +
jmp loc_1042B2A  +
mov esi 0FFFFh +
mov ecx esi +
cmp cx [eax+10h] +
jnz loc_1042A63  +
cmp byte ptr [eax+15h] 0FFh +
jnz loc_1042A63  +
cmp byte ptr [eax+12h] 0FFh +
jz loc_1042A67  +
mov byte ptr [eax+20h] 1 +
push 1  +
push ebx  +
lea eax [ebp+var_6C] +
push eax  +
mov [ebp+var_3F] 4 +
call sub_10259D2  +
test eax eax +
jz loc_1042A42  +
mov ecx esi +
cmp cx [eax+10h] +
jnz loc_1042A8F  +
cmp byte ptr [eax+15h] 0FFh +
jnz loc_1042A8F  +
cmp byte ptr [eax+12h] 0FFh +
jz loc_1042A93  +
mov byte ptr [eax+20h] 1 +
mov [ebp+var_3F] 8 +
jmp loc_1042AFE  +
push 1  +
push ebx  +
lea eax [ebp+var_6C] +
push eax  +
mov [ebp+var_3F] 1 +
call sub_10259D2  +
test eax eax +
jz loc_1042A42  +
mov esi 0FFFFh +
mov ecx esi +
cmp cx [eax+10h] +
jnz loc_1042AC6  +
cmp byte ptr [eax+15h] 0FFh +
jnz loc_1042AC6  +
cmp byte ptr [eax+12h] 0FFh +
jz loc_1042ACA  +
mov byte ptr [eax+20h] 1 +
push 1  +
push ebx  +
lea eax [ebp+var_6C] +
push eax  +
mov [ebp+var_3F] 3 +
call sub_10259D2  +
test eax eax +
jz loc_1042A42  +
mov ecx esi +
cmp cx [eax+10h] +
jnz loc_1042AF6  +
cmp byte ptr [eax+15h] 0FFh +
jnz loc_1042AF6  +
cmp byte ptr [eax+12h] 0FFh +
jz loc_1042AFA  +
mov byte ptr [eax+20h] 1 +
mov [ebp+var_3F] 7 +
push 1  +
push ebx  +
lea eax [ebp+var_6C] +
push eax  +
call sub_10259D2  +
test eax eax +
jz loc_1042A42  +
cmp si [eax+10h] +
jnz loc_1042B24  +
cmp byte ptr [eax+15h] 0FFh +
jnz loc_1042B24  +
cmp byte ptr [eax+12h] 0FFh +
jz loc_1042B28  +
mov byte ptr [eax+20h] 1 +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [edi+18h] +
push eax  +
call sub_102534C  +
mov esi eax +
test esi esi +
jnz loc_1042B5E  +
push 8  +
pop eax  +
jmp loc_1042B8C  +
push 1  +
push esi  +
push edi  +
call sub_10259D2  +
test eax eax +
jz loc_1042B59  +
cmp [ebp+arg_4] 0 +
mov byte ptr [eax+20h] 1 +
jz loc_1042B8A  +
push esi  +
push edi  +
mov dword ptr [esi+0C44h] 1 +
call sub_10429EE  +
test eax eax +
jnz loc_1042B8C  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
shr edx 1 +
push 0  +
pop eax  +
jz loc_1042BAE  +
cmp edx 7FFFFFFFh +
jbe loc_1042BB3  +
mov eax 80070057h +
test eax eax +
jl loc_1042BC9  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1024F9F  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
shr edx 1 +
push 0  +
pop eax  +
mov ecx 80070057h +
jz loc_1042BEE  +
cmp edx 7FFFFFFFh +
jbe loc_1042BF0  +
mov eax ecx +
test eax eax +
jl loc_1042C1A  +
mov eax [ebp+arg_C] +
shr eax 1 +
cmp eax 7FFFFFFEh +
jbe loc_1042C0C  +
mov edx [ebp+arg_0] +
mov eax ecx +
xor ecx ecx +
mov [edx] cx +
jmp loc_1042C1A  +
mov ecx [ebp+arg_0] +
push eax  +
mov eax [ebp+arg_8] +
push 0  +
call sub_1024F9F  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_1042C38  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_1042C3D  +
mov eax 80070057h +
test eax eax +
jl loc_1042C56  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_10418D0  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1008h +
call __alloca_probe  +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 400h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push 0  +
call ds:LoadStringW  +
mov [ebp+NumberOfCharsWritten] eax +
test eax eax +
jz loc_1042D12  +
push edi  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
mov edi eax +
test edi edi +
jz loc_1042D11  +
cmp edi 0FFFFFFFFh +
jz loc_1042D11  +
push edi  +
call ds:GetFileType  +
and eax 0FFFF7FFFh +
cmp eax 2 +
jnz loc_1042D11  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
lea eax [ebp+var_804] +
push eax  +
call sub_1042C23  +
test eax eax +
jl loc_1042D11  +
lea eax [ebp+var_804] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1042CE5  +
push 0  +
sub eax edx +
sar eax 1 +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push eax  +
mov [ebp+NumberOfCharsWritten] eax +
lea eax [ebp+var_804] +
push eax  +
push edi  +
call ds:WriteConsoleW  +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
mov eax [eax+0Ch] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 3E9h  +
call sub_1042C5F  +
add esp 0Ch +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
movzx ecx byte ptr [eax+0Fh] +
push ecx  +
movzx ecx byte ptr [eax+0Eh] +
push ecx  +
movzx ecx byte ptr [eax+0Dh] +
push ecx  +
movzx ecx byte ptr [eax+0Ch] +
push ecx  +
movzx ecx byte ptr [eax+0Bh] +
push ecx  +
movzx ecx byte ptr [eax+0Ah] +
push ecx  +
movzx ecx byte ptr [eax+9] +
push ecx  +
movzx ecx byte ptr [eax+8] +
push ecx  +
movzx ecx word ptr [eax+6] +
push ecx  +
movzx ecx word ptr [eax+4] +
push ecx  +
push dword ptr [eax]  +
push offset a08x04x04x02x02  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_101BCA7  +
add esp 38h +
test eax eax +
jge loc_1042DAC  +
xor eax eax +
jmp loc_1042DAF  +
mov eax [ebp+arg_0] +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov edx [eax+0Ch] +
mov al [ecx+84h] +
test al 4 +
jz loc_1042DF0  +
mov eax [edx] +
lea ecx [ebp+arg_0] +
push ecx  +
push edx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 3EBh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1042E0C  +
push [ebp+arg_4]  +
or al 4 +
mov [ecx+84h] al +
mov byte ptr [ecx+80h] 1 +
add ecx 70h +
call sub_1041938  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+84h] 1 +
push edi  +
mov edi [eax+0Ch] +
jz loc_1042E4E  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 3EEh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1042E9C  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call sub_1041989  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0C007EE20h +
jnz loc_1042E84  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 3EFh  +
call sub_1042C5F  +
add esp 0Ch +
test ebx ebx +
jz loc_1042E8C  +
mov eax ebx +
jmp loc_1042E9B  +
mov eax [ebp+arg_8] +
or byte ptr [esi+84h] 1 +
mov [esi+68h] eax +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+84h] 2 +
push edi  +
mov edi [eax+0Ch] +
jz loc_1042EE0  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 3F0h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1042F2E  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call sub_1041989  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0C007EE20h +
jnz loc_1042F16  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 3F1h  +
call sub_1042C5F  +
add esp 0Ch +
test ebx ebx +
jz loc_1042F1E  +
mov eax ebx +
jmp loc_1042F2D  +
mov eax [ebp+arg_8] +
or byte ptr [esi+84h] 2 +
mov [esi+6Ch] eax +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+0Ch] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
mov eax [ebp+arg_0] +
mov esi [ebp+arg_4] +
push 0  +
push offset aName  +
push dword ptr [esi+4]  +
mov [ebp+var_8] eax +
mov eax [ebp+var_4] +
push dword ptr [esi]  +
add eax eax +
mov word ptr [ebp+var_C+2] ax +
mov word ptr [ebp+var_C] ax +
call sub_104B901  +
test al al +
jz loc_1042F91  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1042DB8  +
jmp loc_1042FDB  +
push 0  +
push offset aVersion_1  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1042FB5  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1042E15  +
jmp loc_1042FDB  +
push 0  +
push offset aThreshold  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1042FD9  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1042EA7  +
jmp loc_1042FDB  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword ptr [ebp+arg_0] +
push ebx  +
mov ebx [eax+0Ch] +
push edi  +
mov edi [eax+24h] +
test edi edi +
jnz loc_1043002  +
xor eax eax +
jmp loc_10430EF  +
mov eax [ebp+arg_8] +
cmp dword ptr [eax+8] 0 +
jz loc_104302E  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 409h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_10430EF  +
push esi  +
push 210h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_1043050  +
push 8  +
pop eax  +
jmp loc_10430EE  +
mov eax [ebp+arg_4] +
movzx edx word ptr [eax] +
push edx  +
push dword ptr [eax+4]  +
lea ecx [esi+8] +
push 208h  +
push ecx  +
mov [ebp+lpSrc] ecx +
call sub_1042BD2  +
test eax eax +
jge loc_1043085  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
mov eax 54Fh +
jmp loc_10430EE  +
push [ebp+arg_8]  +
lea eax [edi+10h] +
mov ecx [eax+4] +
push [ebp+lpSrc]  +
mov [esi] eax +
mov [esi+4] ecx +
mov [ecx] esi +
mov [eax+4] esi +
call sub_1042888  +
mov esi eax +
test esi esi +
jz loc_10430BD  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 40Ah  +
jmp loc_10430E0  +
push [ebp+arg_8]  +
call sub_1047AEA  +
mov esi eax +
test esi esi +
jz loc_10430EC  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 40Ch  +
call sub_1042C5F  +
add esp 0Ch +
mov eax esi +
jmp loc_10430EE  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+0Ch] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
mov eax [ebp+arg_0] +
mov [ebp+var_8] eax +
mov eax [ebp+var_4] +
add eax eax +
push 0  +
mov word ptr [ebp+var_C+2] ax +
mov word ptr [ebp+var_C] ax +
mov eax [ebp+arg_4] +
push offset aFile  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_104B901  +
test al al +
jz loc_1043151  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
call sub_1042FE6  +
jmp loc_1043153  +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+24h] +
push edi  +
mov edi [esi+0Ch] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_104324B  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_104324B  +
cmp byte ptr [esi+40h] 0 +
jnz loc_104324B  +
cmp dword ptr [esi+1Ch] 2 +
jnz loc_104324B  +
push 0  +
push offset aReport_0  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
call sub_104B901  +
test al al +
jz loc_104324B  +
mov ebx [esi+3Ch] +
test ebx ebx +
jnz loc_10431DA  +
push 50h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_10431D7  +
push 8  +
pop eax  +
jmp loc_104324D  +
mov [esi+3Ch] ebx +
mov eax [ebp+arg_0] +
mov [ebx+24h] eax +
mov byte ptr [ebx+40h] 1 +
jmp loc_1043219  +
inc dword ptr [esi+18h]  +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+arg_4] +
push ecx  +
push edi  +
call dword ptr [eax+38h]  +
mov eax [ebp+arg_4] +
mov [ebp+var_C] eax +
mov eax [ebp+var_4] +
add eax eax +
mov word ptr [ebp+var_10+2] ax +
mov word ptr [ebp+var_10] ax +
push ebx  +
lea eax [ebp+var_10] +
push eax  +
push esi  +
call sub_10430FA  +
test eax eax +
jnz loc_104324D  +
mov eax [edi] +
push edi  +
call dword ptr [eax+24h]  +
test eax eax +
jz loc_10431E6  +
jl loc_104324D  +
cmp dword ptr [ebx+8] 0 +
jnz loc_104324B  +
mov eax [edi] +
lea ecx [ebp+var_8] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+var_8]  +
push 3F6h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE11h +
jmp loc_104324D  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+6Ch] 2 +
push edi  +
mov edi [eax+0Ch] +
jz loc_104328F  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 40Dh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_10432DA  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call sub_1041989  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0C007EE20h +
jnz loc_10432C5  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 40Eh  +
call sub_1042C5F  +
add esp 0Ch +
test ebx ebx +
jz loc_10432CD  +
mov eax ebx +
jmp loc_10432D9  +
mov eax [ebp+arg_8] +
or byte ptr [esi+6Ch] 2 +
mov [esi+54h] eax +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov edx [eax+0Ch] +
mov al [ecx+6Ch] +
test al 4 +
jz loc_104331A  +
mov eax [edx] +
lea ecx [ebp+arg_0] +
push ecx  +
push edx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 40Fh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1043330  +
push [ebp+arg_4]  +
or al 4 +
mov [ecx+6Ch] al +
mov byte ptr [ecx+68h] 1 +
add ecx 58h +
call sub_1041938  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov edx [eax+0Ch] +
mov al [ecx+204h] +
test al 2 +
jz loc_1043371  +
mov eax [edx] +
lea ecx [ebp+arg_0] +
push ecx  +
push edx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 410h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_104338A  +
push [ebp+arg_4]  +
or al 2 +
mov [ecx+204h] al +
mov byte ptr [ecx+4Ch] 1 +
add ecx 3Ch +
call sub_1041938  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+204h] 8 +
push edi  +
mov edi [eax+0Ch] +
jz loc_10433CC  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 413h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_104341A  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call sub_1041989  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0C007EE20h +
jnz loc_1043402  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 414h  +
call sub_1042C5F  +
add esp 0Ch +
test ebx ebx +
jz loc_104340A  +
mov eax ebx +
jmp loc_1043419  +
mov eax [ebp+arg_8] +
or byte ptr [esi+204h] 8 +
mov [esi+64h] eax +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+204h] 10h +
push edi  +
mov edi [eax+0Ch] +
jz loc_104345E  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 41Dh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_10434AC  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call sub_1041989  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0C007EE20h +
jnz loc_1043494  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 41Eh  +
call sub_1042C5F  +
add esp 0Ch +
test ebx ebx +
jz loc_104349C  +
mov eax ebx +
jmp loc_10434AB  +
mov eax [ebp+arg_8] +
or byte ptr [esi+204h] 10h +
mov [esi+68h] eax +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov edx [eax+0Ch] +
mov al [ecx+204h] +
test al 4 +
jz loc_10434EF  +
mov eax [edx] +
lea ecx [ebp+arg_0] +
push ecx  +
push edx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 41Fh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1043508  +
push [ebp+arg_4]  +
or al 4 +
mov [ecx+204h] al +
mov byte ptr [ecx+60h] 1 +
add ecx 50h +
call sub_1041938  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+204h] 20h +
push edi  +
mov edi [eax+0Ch] +
jz loc_104354A  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 415h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_104359E  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call sub_1041989  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0C007EE20h +
jz loc_1043569  +
cmp [ebp+arg_8] 0 +
jnz loc_1043586  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 416h  +
call sub_1042C5F  +
add esp 0Ch +
test ebx ebx +
jz loc_104358E  +
mov eax ebx +
jmp loc_104359D  +
mov eax [ebp+arg_8] +
or byte ptr [esi+204h] 20h +
mov [esi+6Ch] eax +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push ebx  +
mov ebx [eax+0Ch] +
push edi  +
mov edi [ebp+arg_8] +
mov al [edi+204h] +
test al 40h +
jz loc_10435E3  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 417h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1043648  +
push esi  +
mov esi [ebp+arg_4] +
push 0  +
or al 40h +
push offset aTrue  +
mov [edi+204h] al +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_104360A  +
mov byte ptr [edi+74h] 1 +
jmp loc_1043623  +
push 0  +
push offset aFalse  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1043627  +
mov byte ptr [edi+74h] 0 +
xor eax eax +
jmp loc_1043647  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push esi  +
push dword ptr [ebp+arg_0]  +
push 418h  +
call sub_1042C5F  +
add esp 0Ch +
mov eax 0C007EE20h +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+204h] 80h +
push edi  +
mov edi [eax+0Ch] +
jz loc_104368C  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 419h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_10436DC  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call sub_1041989  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0C007EE20h +
jnz loc_10436C2  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 41Ah  +
call sub_1042C5F  +
add esp 0Ch +
test ebx ebx +
jz loc_10436CA  +
mov eax ebx +
jmp loc_10436DB  +
mov ax word ptr [ebp+arg_8] +
or byte ptr [esi+204h] 80h +
mov [esi+76h] ax +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+205h] 8 +
push edi  +
mov edi [eax+0Ch] +
jz loc_1043720  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 41Bh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1043774  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call sub_1041989  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0C007EE20h +
jz loc_104373F  +
cmp [ebp+arg_8] 0 +
ja loc_104375C  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 41Ch  +
call sub_1042C5F  +
add esp 0Ch +
test ebx ebx +
jz loc_1043764  +
mov eax ebx +
jmp loc_1043773  +
mov eax [ebp+arg_8] +
or byte ptr [esi+205h] 8 +
mov [esi+70h] eax +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
and dword ptr [ecx+0Ch] 0 +
push edi  +
mov dword ptr [ecx] 1E3603Bh +
mov byte ptr [ecx+10h] 0 +
xor eax eax +
lea edi [ecx+4] +
stos   +
stos   +
lea edx [ecx+0A0h] +
and dword ptr [edx+0Ch] 0 +
xor eax eax +
mov dword ptr [edx] 1E3603Bh +
mov byte ptr [edx+10h] 0 +
lea edi [edx+4] +
stos   +
stos   +
mov eax ecx +
pop edi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+0A0h] +
call sub_104191C  +
mov ecx esi +
pop esi  +
jmp sub_104191C  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+78h] +
call sub_10437B9  +
lea ecx [esi+50h] +
call sub_104191C  +
lea ecx [esi+3Ch] +
call sub_104191C  +
lea ecx [esi+28h] +
pop esi  +
jmp sub_104191C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov edx [eax+0Ch] +
mov al [ecx+74h] +
test al 2 +
jz loc_1043836  +
mov eax [edx] +
lea ecx [ebp+arg_0] +
push ecx  +
push edx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 422h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_104384C  +
push [ebp+arg_4]  +
or al 2 +
mov [ecx+74h] al +
mov byte ptr [ecx+3Ch] 1 +
add ecx 2Ch +
call sub_1041938  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov edx [eax+0Ch] +
mov al [ecx+74h] +
test al 4 +
jz loc_104388A  +
mov eax [edx] +
lea ecx [ebp+arg_0] +
push ecx  +
push edx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 423h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_10438A0  +
push [ebp+arg_4]  +
or al 4 +
mov [ecx+74h] al +
mov byte ptr [ecx+50h] 0 +
add ecx 40h +
call sub_1041938  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+74h] 10h +
push edi  +
mov edi [eax+0Ch] +
jz loc_10438DF  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 426h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_104392A  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call sub_1041989  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0C007EE20h +
jnz loc_1043915  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 427h  +
call sub_1042C5F  +
add esp 0Ch +
test ebx ebx +
jz loc_104391D  +
mov eax ebx +
jmp loc_1043929  +
mov eax [ebp+arg_8] +
or byte ptr [esi+74h] 10h +
mov [esi+68h] eax +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+74h] 20h +
push edi  +
mov edi [eax+0Ch] +
jz loc_104396B  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 424h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_10439B6  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call sub_1041989  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0C007EE20h +
jnz loc_10439A1  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 425h  +
call sub_1042C5F  +
add esp 0Ch +
test ebx ebx +
jz loc_10439A9  +
mov eax ebx +
jmp loc_10439B5  +
mov eax [ebp+arg_8] +
or byte ptr [esi+74h] 20h +
mov [esi+6Ch] eax +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov edx [eax+0Ch] +
mov al [ecx+74h] +
test al 8 +
jz loc_10439F6  +
mov eax [edx] +
lea ecx [ebp+arg_0] +
push ecx  +
push edx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 428h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1043A0C  +
push [ebp+arg_4]  +
or al 8 +
mov [ecx+74h] al +
mov byte ptr [ecx+64h] 1 +
add ecx 54h +
call sub_1041938  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+74h] 40h +
push edi  +
mov edi [eax+0Ch] +
jz loc_1043A4B  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 429h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1043A9C  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call sub_1041989  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0C007EE20h +
jz loc_1043A6A  +
cmp [ebp+arg_8] 0 +
jnz loc_1043A87  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 42Ah  +
call sub_1042C5F  +
add esp 0Ch +
test ebx ebx +
jz loc_1043A8F  +
mov eax ebx +
jmp loc_1043A9B  +
mov eax [ebp+arg_8] +
or byte ptr [esi+74h] 40h +
mov [esi+70h] eax +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1041D97  +
test [ebp+arg_0] 1 +
jz loc_1043AC1  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
push esi  +
mov esi dword ptr [ebp+arg_8] +
test byte ptr [esi+1Ch] 1 +
mov [ebp+var_8] eax +
jz loc_1043B0B  +
mov ecx [eax] +
lea edx [ebp+arg_8] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push dword ptr [ebp+arg_8]  +
push 42Bh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1043BB6  +
mov eax [ebp+arg_4] +
push ebx  +
push edi  +
mov edi [eax+4] +
mov ax [eax] +
shr ax 1 +
movzx eax ax +
mov [ebp+arg_0] eax +
movzx eax ax +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push edi  +
lea ebx [edi+eax*2-2] +
call sub_10244FF  +
xor ecx ecx +
cmp eax ecx +
jz loc_1043B63  +
cmp eax 0Dh +
jnz loc_1043BB4  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+arg_8] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_8]  +
push 42Ch  +
call sub_1042C5F  +
add esp 0Ch +
mov eax 0C007EE20h +
jmp loc_1043BB4  +
cmp [ebp+var_4] ecx +
jz loc_1043B6D  +
add edi 4 +
jmp loc_1043B6F  +
inc edi  +
inc edi  +
xor eax eax +
cmp [ebp+var_4] ecx +
mov [ebp+var_8] edi +
setnz al  +
inc eax  +
sub word ptr [ebp+arg_0] ax +
xor eax eax +
mov [ebx] ax +
mov eax [ebp+arg_0] +
add eax eax +
mov word ptr [ebp+var_C] ax +
mov word ptr [ebp+var_C+2] ax +
mov al byte ptr [ebp+var_4] +
add al al +
xor al [esi+1Ch] +
mov [esi+18h] cl +
and al 2 +
xor al [esi+1Ch] +
lea ecx [esi+8] +
or al 1 +
mov [esi+1Ch] al +
lea eax [ebp+var_C] +
push eax  +
call sub_1041938  +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+0Ch] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
mov eax [ebp+arg_0] +
mov esi [ebp+arg_4] +
push 0  +
push offset aCounter  +
push dword ptr [esi+4]  +
mov [ebp+var_8] eax +
mov eax [ebp+var_4] +
push dword ptr [esi]  +
add eax eax +
mov word ptr [ebp+var_C+2] ax +
mov word ptr [ebp+var_C] ax +
call sub_104B901  +
test al al +
jz loc_1043C18  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1043ACD  +
jmp loc_1043C3D  +
push 0  +
push offset aColumn  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1043C3B  +
push [ebp+arg_C]  +
lea eax [ebp+var_C] +
push eax  +
call sub_1041DC2  +
jmp loc_1043C3D  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_0] +
mov eax [eax+0Ch] +
push esi  +
mov esi dword ptr [ebp+arg_8] +
test byte ptr [esi+1Ch] 1 +
mov [ebp+var_8] eax +
jz loc_1043C86  +
mov ecx [eax] +
lea edx [ebp+arg_8] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push dword ptr [ebp+arg_8]  +
push 42Dh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1043D31  +
mov eax [ebp+arg_4] +
push ebx  +
push edi  +
mov edi [eax+4] +
mov ax [eax] +
shr ax 1 +
movzx eax ax +
mov [ebp+arg_0] eax +
movzx eax ax +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push edi  +
lea ebx [edi+eax*2-2] +
call sub_10244FF  +
xor ecx ecx +
cmp eax ecx +
jz loc_1043CDE  +
cmp eax 0Dh +
jnz loc_1043D2F  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+arg_8] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_8]  +
push 42Eh  +
call sub_1042C5F  +
add esp 0Ch +
mov eax 0C007EE20h +
jmp loc_1043D2F  +
cmp [ebp+var_4] ecx +
jz loc_1043CE8  +
add edi 4 +
jmp loc_1043CEA  +
inc edi  +
inc edi  +
xor eax eax +
cmp [ebp+var_4] ecx +
mov [ebp+var_8] edi +
setnz al  +
inc eax  +
sub word ptr [ebp+arg_0] ax +
xor eax eax +
mov [ebx] ax +
mov eax [ebp+arg_0] +
add eax eax +
mov word ptr [ebp+var_C] ax +
mov word ptr [ebp+var_C+2] ax +
mov al byte ptr [ebp+var_4] +
add al al +
xor al [esi+1Ch] +
mov [esi+18h] cl +
and al 2 +
xor al [esi+1Ch] +
lea ecx [esi+8] +
or al 1 +
mov [esi+1Ch] al +
lea eax [ebp+var_C] +
push eax  +
call sub_1041938  +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+0Ch] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
mov eax [ebp+arg_0] +
mov [ebp+var_8] eax +
mov eax [ebp+var_4] +
add eax eax +
push 0  +
mov word ptr [ebp+var_C+2] ax +
mov word ptr [ebp+var_C] ax +
mov eax [ebp+arg_4] +
push offset aInstance  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_104B901  +
test al al +
jz loc_1043D92  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
call sub_1043C48  +
jmp loc_1043D94  +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
lea ecx [esi+8] +
call sub_104191C  +
test [ebp+arg_0] 1 +
jz loc_1043DBB  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov edx [eax+0Ch] +
mov al [ecx+100h] +
test al al +
jns loc_1043DFF  +
mov eax [edx] +
lea ecx [ebp+arg_0] +
push ecx  +
push edx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 42Fh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1043E18  +
push [ebp+arg_4]  +
or al 80h +
mov [ecx+100h] al +
mov byte ptr [ecx+18h] 1 +
add ecx 8 +
call sub_1041938  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push ebx  +
mov ebx [eax+0Ch] +
push edi  +
mov edi [ebp+arg_8] +
mov al [edi+101h] +
test al 1 +
jz loc_1043E5B  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 430h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1043EC6  +
push esi  +
mov esi [ebp+arg_4] +
push 0  +
or al 1 +
push offset aLeft  +
mov [edi+101h] al +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1043E85  +
and byte ptr [edi+100h] 0FEh +
jmp loc_1043EA1  +
push 0  +
push offset aRight  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1043EA5  +
or byte ptr [edi+100h] 1 +
xor eax eax +
jmp loc_1043EC5  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push esi  +
push dword ptr [ebp+arg_0]  +
push 431h  +
call sub_1042C5F  +
add esp 0Ch +
mov eax 0C007EE20h +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov edx [eax+0Ch] +
mov al [ecx+101h] +
test al 2 +
jz loc_1043F09  +
mov eax [edx] +
lea ecx [ebp+arg_0] +
push ecx  +
push edx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 432h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1043F22  +
push [ebp+arg_4]  +
or al 2 +
mov [ecx+101h] al +
mov byte ptr [ecx+2Ch] 0 +
add ecx 1Ch +
call sub_1041938  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push ebx  +
mov ebx [eax+0Ch] +
push edi  +
mov edi [ebp+arg_8] +
mov al [edi+101h] +
test al 4 +
jz loc_1043F65  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 433h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1043FD0  +
push esi  +
mov esi [ebp+arg_4] +
push 0  +
or al 4 +
push offset aTrue  +
mov [edi+101h] al +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1043F8F  +
or byte ptr [edi+100h] 8 +
jmp loc_1043FAB  +
push 0  +
push offset aFalse  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1043FAF  +
and byte ptr [edi+100h] 0F7h +
xor eax eax +
jmp loc_1043FCF  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push esi  +
push dword ptr [ebp+arg_0]  +
push 434h  +
call sub_1042C5F  +
add esp 0Ch +
mov eax 0C007EE20h +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push ebx  +
mov ebx [eax+0Ch] +
push edi  +
mov edi [ebp+arg_8] +
mov al [edi+101h] +
test al 8 +
jz loc_1044015  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 435h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1044089  +
push esi  +
mov esi [ebp+arg_4] +
push 0  +
or al 8 +
push offset aTotal  +
mov [edi+101h] al +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_104403F  +
and byte ptr [edi+100h] 0F9h +
jmp loc_1044064  +
push 0  +
push offset aAverage  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1044068  +
lea eax [edi+100h] +
mov cl [eax] +
and cl 0FBh +
or cl 2 +
mov [eax] cl +
xor eax eax +
jmp loc_1044088  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push esi  +
push dword ptr [ebp+arg_0]  +
push 436h  +
call sub_1042C5F  +
add esp 0Ch +
mov eax 0C007EE20h +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push ebx  +
mov ebx [eax+0Ch] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+102h] 2 +
jz loc_10440D0  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 437h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE2Bh +
jmp loc_1044165  +
mov al [esi+101h] +
test al 10h +
jz loc_10440FA  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 438h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1044165  +
push edi  +
mov edi [ebp+arg_4] +
push 0  +
or al 10h +
push offset aTrue  +
mov [esi+101h] al +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jz loc_1044124  +
or byte ptr [esi+100h] 10h +
jmp loc_1044140  +
push 0  +
push offset aFalse  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jz loc_1044144  +
and byte ptr [esi+100h] 0EFh +
xor eax eax +
jmp loc_1044164  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push edi  +
push dword ptr [ebp+arg_0]  +
push 439h  +
call sub_1042C5F  +
add esp 0Ch +
mov eax 0C007EE20h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
mov edi [eax+2Ch] +
test edi edi +
jnz loc_1044187  +
xor eax eax +
jmp loc_1044294  +
mov ecx [eax+0Ch] +
push esi  +
mov esi [ebp+arg_8] +
mov al [esi+101h] +
mov [ebp+arg_0] ecx +
test al 20h +
jz loc_10441BE  +
mov eax [ecx] +
lea edx [ebp+arg_C] +
push edx  +
push ecx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_C]  +
push 43Ah  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1044293  +
or al 20h +
cmp [ebp+arg_C] 0 +
mov [esi+101h] al +
jz loc_10441D4  +
add edi 1C8h +
jmp loc_10441D7  +
add edi 20h +
push ebx  +
mov ebx [ebp+arg_4] +
push 0  +
push offset aPrimary  +
push dword ptr [ebx+4]  +
push dword ptr [ebx]  +
call sub_104B901  +
test al al +
jz loc_1044223  +
and byte ptr [esi+100h] 0DFh +
cmp dword ptr [edi] 0 +
jz loc_104421F  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+arg_C] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push dword ptr [ebp+arg_C]  +
push 43Bh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE05h +
jmp loc_1044292  +
mov [edi] esi +
jmp loc_104426B  +
push 0  +
push offset aSecondary  +
push dword ptr [ebx+4]  +
push dword ptr [ebx]  +
call sub_104B901  +
test al al +
jz loc_104426F  +
or byte ptr [esi+100h] 20h +
cmp dword ptr [edi+4] 0 +
jz loc_1044268  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+arg_C] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push dword ptr [ebp+arg_C]  +
push 43Ch  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE06h +
jmp loc_1044292  +
mov [edi+4] esi +
xor eax eax +
jmp loc_1044292  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+arg_C] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push ebx  +
push dword ptr [ebp+arg_C]  +
push 43Dh  +
call sub_1042C5F  +
add esp 0Ch +
mov eax 0C007EE20h +
pop ebx  +
pop esi  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push ebx  +
mov ebx [eax+0Ch] +
push edi  +
mov edi [ebp+arg_8] +
mov al [edi+101h] +
test al 40h +
jz loc_10442D8  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 43Eh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1044343  +
push esi  +
mov esi [ebp+arg_4] +
push 0  +
or al 40h +
push offset aAscending  +
mov [edi+101h] al +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1044302  +
and byte ptr [edi+100h] 0BFh +
jmp loc_104431E  +
push 0  +
push offset aDescending  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1044322  +
or byte ptr [edi+100h] 40h +
xor eax eax +
jmp loc_1044342  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push esi  +
push dword ptr [ebp+arg_0]  +
push 43Fh  +
call sub_1042C5F  +
add esp 0Ch +
mov eax 0C007EE20h +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov edx [eax+0Ch] +
mov al [ecx+101h] +
test al al +
jns loc_1044386  +
mov eax [edx] +
lea ecx [ebp+arg_0] +
push ecx  +
push edx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 440h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_104439F  +
push [ebp+arg_4]  +
or al 80h +
mov [ecx+101h] al +
mov byte ptr [ecx+40h] 1 +
add ecx 30h +
call sub_1041938  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx+0Ch] +
mov ecx [eax] +
push esi  +
push edi  +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
mov eax [ebp+arg_0] +
mov esi [ebp+arg_4] +
xor edi edi +
push edi  +
push offset aName  +
push dword ptr [esi+4]  +
mov [ebp+var_8] eax +
mov eax [ebp+var_4] +
push dword ptr [esi]  +
add eax eax +
mov word ptr [ebp+var_C+2] ax +
mov word ptr [ebp+var_C] ax +
call sub_104B901  +
test al al +
jz loc_1044405  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_1043DC7  +
jmp loc_1044554  +
push edi  +
push offset aAlign  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_104442B  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_1043E21  +
jmp loc_1044554  +
push edi  +
push offset aFormat  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1044451  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_1043ED1  +
jmp loc_1044554  +
push edi  +
push offset aVisible  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1044477  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_1043F2B  +
jmp loc_1044554  +
push edi  +
push offset aSummary  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_104449D  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_1043FDB  +
jmp loc_1044554  +
push edi  +
push offset aGroupby  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_10444C3  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_1044094  +
jmp loc_1044554  +
push edi  +
push offset aSort  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_10444E9  +
push [ebp+arg_C]  +
lea eax [ebp+var_C] +
push [ebp+arg_8]  +
push eax  +
push ebx  +
call sub_1044170  +
jmp loc_1044554  +
push edi  +
push offset aOrder  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_104450C  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_104429E  +
jmp loc_1044554  +
push edi  +
push offset aNote  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_104452F  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_104434E  +
jmp loc_1044554  +
push edi  +
push offset aOuttype  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1044552  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_1041E92  +
jmp loc_1044554  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
xor edx edx +
push esi  +
mov esi ecx +
mov [esi+14h] edx +
mov [esi+18h] dl +
push edi  +
xor eax eax +
mov ecx 1E3603Bh +
mov [esi+8] ecx +
lea edi [esi+0Ch] +
stos   +
stos   +
mov [esi+1Ch] ecx +
mov [esi+28h] edx +
mov [esi+2Ch] dl +
xor eax eax +
lea edi [esi+20h] +
stos   +
stos   +
mov [esi+30h] ecx +
mov [esi+3Ch] edx +
mov [esi+40h] dl +
xor eax eax +
lea edi [esi+34h] +
stos   +
lea ecx [esi+48h] +
stos   +
call sub_10421B9  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1042205  +
test [ebp+arg_0] 1 +
jz loc_10445C7  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword ptr [ebp+arg_0] +
mov ecx [eax+2Ch] +
push esi  +
mov esi [ebp+arg_8] +
mov [ebp+var_4] ecx +
mov ecx [eax+0Ch] +
mov al [esi+0A8h] +
mov [ebp+var_8] ecx +
test al 20h +
jz loc_104461A  +
mov eax [ecx] +
lea edx [ebp+arg_0] +
push edx  +
push ecx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 442h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_104470D  +
push ebx  +
push edi  +
mov edi [ebp+arg_4] +
or al 20h +
push edi  +
lea ecx [esi+14h] +
mov [esi+0A8h] al +
mov byte ptr [esi+24h] 0 +
call sub_1041938  +
xor ebx ebx +
push 0  +
push off_10561D8[ebx]  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jz loc_1044668  +
lea eax [esi+0A9h] +
or byte ptr [eax] 1 +
mov dl byte_10561DC[ebx] +
mov cl [eax] +
add dl dl +
xor dl cl +
and dl 2 +
xor dl cl +
mov [eax] dl +
add ebx 8 +
cmp ebx 68h +
jb loc_1044636  +
xor ebx ebx +
push ebx  +
push offset aSysRequestrate  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jnz loc_104469A  +
push ebx  +
push offset aSysAggregateco  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jz loc_10446AA  +
mov al [esi+0A8h] +
and al 0FCh +
or al 40h +
mov [esi+0A8h] al +
push ebx  +
push offset aSysCpupercent  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jnz loc_10446D2  +
push ebx  +
push offset aSysResponsetim  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
call sub_104B901  +
test al al +
jz loc_10446E4  +
mov eax [ebp+var_4] +
test byte ptr [eax+204h] 40h +
jz loc_10446E8  +
cmp byte ptr [eax+74h] 0 +
jz loc_10446E8  +
xor eax eax +
jmp loc_104470B  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push edi  +
push dword ptr [ebp+arg_0]  +
push 444h  +
call sub_1042C5F  +
add esp 0Ch +
mov eax 0C007EE22h +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+0A8h] 4 +
push edi  +
mov edi [eax+0Ch] +
jz loc_1044761  +
mov eax [edi] +
lea ecx [ebp+var_18] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+var_18]  +
push 443h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_10447AA  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
call sub_10419DC  +
pop ecx  +
pop ecx  +
mov [ebp+var_1C] eax +
cmp eax 0C007EE20h +
jnz loc_1044792  +
mov eax [edi] +
lea ecx [ebp+var_18] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push ebx  +
push dword ptr [ebp+var_18]  +
push 445h  +
call sub_1042C5F  +
add esp 0Ch +
mov eax [ebp+var_1C] +
test eax eax +
jnz loc_10447AA  +
or byte ptr [esi+0A8h] 4 +
lea edi [esi+28h] +
lea esi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+0A8h] 8 +
push edi  +
mov edi [eax+0Ch] +
jz loc_10447F9  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 446h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1044849  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call sub_1041989  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0C007EE20h +
jnz loc_104482F  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 447h  +
call sub_1042C5F  +
add esp 0Ch +
test ebx ebx +
jz loc_1044837  +
mov eax ebx +
jmp loc_1044848  +
mov ax word ptr [ebp+arg_8] +
or byte ptr [esi+0A8h] 8 +
mov [esi+38h] ax +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+0A8h] 10h +
push edi  +
mov edi [eax+0Ch] +
jz loc_104488D  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 448h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_10448DB  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call sub_1041989  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0C007EE20h +
jnz loc_10448C3  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 449h  +
call sub_1042C5F  +
add esp 0Ch +
test ebx ebx +
jz loc_10448CB  +
mov eax ebx +
jmp loc_10448DA  +
mov al byte ptr [ebp+arg_8] +
or byte ptr [esi+0A8h] 10h +
mov [esi+3Ah] al +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
mov ecx [eax+34h] +
push ebx  +
mov ebx [eax+0Ch] +
test ecx ecx +
jnz loc_1044900  +
xor eax eax +
jmp loc_10449F3  +
test byte ptr [ecx+102h] 2 +
jz loc_104492C  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 44Ah  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE20h +
jmp loc_10449F3  +
push edi  +
mov edi [ebp+arg_8] +
mov al [edi+0A8h] +
test al 40h +
jz loc_104495D  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 44Bh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_10449F2  +
push esi  +
mov esi [ebp+arg_4] +
push 0  +
or al 40h +
push offset aTotal  +
mov [edi+0A8h] al +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1044987  +
and byte ptr [edi+0A8h] 0FCh +
jmp loc_10449CD  +
push 0  +
push offset aAverage  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_10449A8  +
mov al [edi+0A8h] +
and al 0FDh +
or al 1 +
jmp loc_10449C7  +
push 0  +
push offset aRate  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_10449D1  +
mov al [edi+0A8h] +
and al 0FEh +
or al 2 +
mov [edi+0A8h] al +
xor eax eax +
jmp loc_10449F1  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push esi  +
push dword ptr [ebp+arg_0]  +
push 44Ch  +
call sub_1042C5F  +
add esp 0Ch +
mov eax 0C007EE20h +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov edx [eax+0Ch] +
mov al [ecx+0A8h] +
test al al +
jns loc_1044A35  +
mov eax [edx] +
lea ecx [ebp+arg_0] +
push ecx  +
push edx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 44Dh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1044A4B  +
push [ebp+arg_4]  +
or al 80h +
mov [ecx+0A8h] al +
mov byte ptr [ecx+10h] 1 +
call sub_1041938  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+0Ch] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
mov eax [ebp+arg_0] +
mov esi [ebp+arg_4] +
xor ebx ebx +
push ebx  +
push offset aField  +
push dword ptr [esi+4]  +
mov [ebp+var_8] eax +
mov eax [ebp+var_4] +
push dword ptr [esi]  +
add eax eax +
mov word ptr [ebp+var_C+2] ax +
mov word ptr [ebp+var_C] ax +
call sub_104B901  +
test al al +
jz loc_1044AB1  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_10445D3  +
jmp loc_1044B65  +
push ebx  +
push offset aPayloadguid  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1044AD7  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1044717  +
jmp loc_1044B65  +
push ebx  +
push offset aPayloadid  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1044AFA  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_10447C0  +
jmp loc_1044B65  +
push ebx  +
push offset aVersion_1  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1044B1D  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1044854  +
jmp loc_1044B65  +
push ebx  +
push offset aAggregate  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1044B40  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_10448E6  +
jmp loc_1044B65  +
push ebx  +
push offset aNote  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1044B63  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_10449FD  +
jmp loc_1044B65  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov edi dword ptr [ebp+arg_0] +
mov ebx [edi+34h] +
mov eax [edi+1Ch] +
mov esi [edi+0Ch] +
test ebx ebx +
jnz loc_1044B93  +
xor eax eax +
jmp loc_1044CA6  +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_1044B8C  +
cmp eax 6 +
jz loc_1044BA4  +
cmp eax 7 +
jnz loc_1044B8C  +
push 0  +
push offset aColumn_0  +
push dword ptr [ecx+8]  +
push dword ptr [ecx+4]  +
call sub_104B901  +
test al al +
jz loc_1044B8C  +
mov al [ebx+102h] +
test al 1 +
jz loc_1044BE7  +
mov eax [esi] +
lea ecx [ebp+arg_0] +
push ecx  +
push esi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 44Eh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE47h +
jmp loc_1044CA6  +
or al 1 +
mov [ebx+102h] al +
mov eax [esi] +
push esi  +
add ebx 48h +
call dword ptr [eax+20h]  +
jmp loc_1044C33  +
inc dword ptr [edi+18h]  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+arg_4] +
push ecx  +
push esi  +
call dword ptr [eax+38h]  +
mov eax [ebp+arg_4] +
mov [ebp+var_8] eax +
mov eax [ebp+var_4] +
add eax eax +
mov word ptr [ebp+var_C+2] ax +
mov word ptr [ebp+var_C] ax +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1044A54  +
test eax eax +
jnz loc_1044CA6  +
mov eax [esi] +
push esi  +
call dword ptr [eax+24h]  +
test eax eax +
jz loc_1044BFA  +
jl loc_1044CA6  +
mov al [ebx+0A8h] +
test al 20h +
jz loc_1044C4F  +
test al 4 +
jz loc_1044C4F  +
test al 8 +
jnz loc_1044B8C  +
mov eax [esi] +
lea ecx [ebp+arg_0] +
push ecx  +
push esi  +
call dword ptr [eax+54h]  +
test byte ptr [ebx+0A8h] 20h +
jnz loc_1044C71  +
push dword ptr [ebp+arg_0]  +
push 3FDh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
test byte ptr [ebx+0A8h] 4 +
jnz loc_1044C89  +
push dword ptr [ebp+arg_0]  +
push 403h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
test byte ptr [ebx+0A8h] 8 +
jnz loc_1044CA1  +
push dword ptr [ebp+arg_0]  +
push 404h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE11h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [eax+2Ch] +
test esi esi +
jnz loc_1044CC6  +
xor eax eax +
jmp loc_1044D04  +
mov ecx [ebp+arg_4] +
push edi  +
mov edi [eax+0Ch] +
test ecx ecx +
jz loc_1044D01  +
cmp dword ptr [eax+1Ch] 5 +
jnz loc_1044D01  +
push 0  +
push offset aEventtable  +
push dword ptr [ecx+8]  +
push dword ptr [ecx+4]  +
call sub_104B901  +
test al al +
jz loc_1044D01  +
lea ecx [esi+205h] +
mov al [ecx] +
test al 1 +
jz loc_1044D09  +
test al 6 +
jnz loc_1044D09  +
or al 2 +
mov [ecx] al +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 44Fh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE44h +
jmp loc_1044D03  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword ptr [ebp+arg_0] +
mov ecx [eax+0Ch] +
push esi  +
mov esi [ebp+arg_8] +
mov al [esi+98h] +
mov [ebp+var_4] ecx +
test al 8 +
jz loc_1044D6B  +
mov eax [ecx] +
lea edx [ebp+arg_0] +
push edx  +
push ecx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 450h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1044DB8  +
push ebx  +
mov ebx [ebp+arg_4] +
push edi  +
or al 8 +
push ebx  +
mov ecx esi +
mov [esi+98h] al +
mov byte ptr [esi+10h] 0 +
call sub_1041938  +
xor edi edi +
push 0  +
push off_10561D8[edi]  +
push dword ptr [ebx+4]  +
push dword ptr [ebx]  +
call sub_104B901  +
test al al +
jz loc_1044DAC  +
cmp byte_10561DD[edi] 0 +
jz loc_1044DBD  +
or byte ptr [esi+98h] 10h +
add edi 8 +
cmp edi 68h +
jb loc_1044D86  +
xor eax eax +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn 0Ch  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push dword ptr [ebp+arg_0]  +
push 451h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE24h +
jmp loc_1044DB6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+98h] 1 +
push edi  +
mov edi [eax+0Ch] +
jz loc_1044E2F  +
mov eax [edi] +
lea ecx [ebp+var_18] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+var_18]  +
push 452h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1044E78  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
call sub_10419DC  +
pop ecx  +
pop ecx  +
mov [ebp+var_1C] eax +
cmp eax 0C007EE20h +
jnz loc_1044E60  +
mov eax [edi] +
lea ecx [ebp+var_18] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push ebx  +
push dword ptr [ebp+var_18]  +
push 453h  +
call sub_1042C5F  +
add esp 0Ch +
mov eax [ebp+var_1C] +
test eax eax +
jnz loc_1044E78  +
or byte ptr [esi+98h] 1 +
lea edi [esi+14h] +
lea esi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+98h] 2 +
push edi  +
mov edi [eax+0Ch] +
jz loc_1044EC7  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 454h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1044F17  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call sub_1041989  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0C007EE20h +
jnz loc_1044EFD  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 455h  +
call sub_1042C5F  +
add esp 0Ch +
test ebx ebx +
jz loc_1044F05  +
mov eax ebx +
jmp loc_1044F16  +
mov ax word ptr [ebp+arg_8] +
or byte ptr [esi+98h] 2 +
mov [esi+24h] ax +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+98h] 4 +
push edi  +
mov edi [eax+0Ch] +
jz loc_1044F5B  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 457h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1044FA9  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call sub_1041989  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0C007EE20h +
jnz loc_1044F91  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 458h  +
call sub_1042C5F  +
add esp 0Ch +
test ebx ebx +
jz loc_1044F99  +
mov eax ebx +
jmp loc_1044FA8  +
mov al byte ptr [ebp+arg_8] +
or byte ptr [esi+98h] 4 +
mov [esi+26h] al +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+0Ch] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
mov eax [ebp+arg_0] +
mov esi [ebp+arg_4] +
push 0  +
push offset aField  +
push dword ptr [esi+4]  +
mov [ebp+var_8] eax +
mov eax [ebp+var_4] +
push dword ptr [esi]  +
add eax eax +
mov word ptr [ebp+var_C+2] ax +
mov word ptr [ebp+var_C] ax +
call sub_104B901  +
test al al +
jz loc_104500C  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1044D2E  +
jmp loc_104507A  +
push 0  +
push offset aPayloadguid  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1045030  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1044DE5  +
jmp loc_104507A  +
push 0  +
push offset aPayloadid  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1045054  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1044E8E  +
jmp loc_104507A  +
push 0  +
push offset aVersion_1  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1045078  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1044F22  +
jmp loc_104507A  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi dword ptr [ebp+arg_0] +
mov ebx [esi+2Ch] +
push edi  +
mov edi [esi+0Ch] +
test ebx ebx +
jnz loc_10450A4  +
xor eax eax +
jmp loc_10451C8  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_104509D  +
cmp dword ptr [esi+1Ch] 6 +
jz loc_10450C7  +
push 0  +
push offset aEqualjoin  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
call sub_104B901  +
test al al +
jnz loc_104509D  +
test byte ptr [ebx+110h] 8 +
jnz loc_10450D5  +
add ebx 78h +
jmp loc_10450E8  +
test byte ptr [ebx+1B0h] 8 +
jnz loc_10451AA  +
add ebx 118h +
mov eax [edi] +
push edi  +
call dword ptr [eax+20h]  +
jmp loc_104512D  +
inc dword ptr [esi+18h]  +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+arg_4] +
push ecx  +
push edi  +
call dword ptr [eax+38h]  +
mov eax [ebp+arg_4] +
mov [ebp+var_8] eax +
mov eax [ebp+var_4] +
add eax eax +
mov word ptr [ebp+var_C+2] ax +
mov word ptr [ebp+var_C] ax +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
call sub_1044FB4  +
test eax eax +
jnz loc_10451C8  +
mov eax [edi] +
push edi  +
call dword ptr [eax+24h]  +
test eax eax +
jz loc_10450F0  +
jl loc_10451C8  +
mov al [ebx+98h] +
test al 8 +
jz loc_1045151  +
test al 1 +
jz loc_1045151  +
test al 2 +
jz loc_1045151  +
mov [esi+38h] ebx +
jmp loc_104509D  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
test byte ptr [ebx+98h] 8 +
jnz loc_1045173  +
push dword ptr [ebp+arg_0]  +
push 45Ah  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
test byte ptr [ebx+98h] 1 +
jnz loc_104518B  +
push dword ptr [ebp+arg_0]  +
push 405h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
test byte ptr [ebx+98h] 2 +
jnz loc_10451A3  +
push dword ptr [ebp+arg_0]  +
push 406h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE11h +
jmp loc_10451C8  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 459h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE31h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test byte ptr [esi+1D0h] 1 +
push edi  +
mov edi [eax+0Ch] +
jz loc_104520D  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 45Bh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1045264  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
call sub_1041989  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0C007EE20h +
jz loc_104522C  +
cmp [ebp+arg_8] 0 +
ja loc_1045249  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 45Ch  +
call sub_1042C5F  +
add esp 0Ch +
test ebx ebx +
jz loc_1045251  +
mov eax ebx +
jmp loc_1045263  +
mov eax [ebp+arg_8] +
or byte ptr [esi+1D0h] 1 +
mov [esi+1C4h] eax +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+0Ch] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
mov eax [ebp+arg_0] +
mov [ebp+var_8] eax +
mov eax [ebp+var_4] +
add eax eax +
push 0  +
mov word ptr [ebp+var_C+2] ax +
mov word ptr [ebp+var_C] ax +
mov eax [ebp+arg_4] +
push offset aRowcount  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_104B901  +
test al al +
jz loc_10452C6  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
call sub_10451D4  +
jmp loc_10452C8  +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov ebx [esi+2Ch] +
push edi  +
mov edi [esi+0Ch] +
test ebx ebx +
jz loc_104530D  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_104530D  +
cmp dword ptr [esi+1Ch] 5 +
jnz loc_104530D  +
push 0  +
push offset aEventtable  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
call sub_104B901  +
test al al +
jnz loc_1045349  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
inc dword ptr [esi+18h]  +
mov eax [edi] +
lea ecx [ebp+arg_4] +
push ecx  +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+38h]  +
mov eax [ebp+arg_0] +
mov [ebp+var_8] eax +
mov eax [ebp+arg_4] +
add eax eax +
mov word ptr [ebp+var_C+2] ax +
mov word ptr [ebp+var_C] ax +
push ebx  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
call sub_104526F  +
test eax eax +
jnz loc_104530F  +
mov eax [edi] +
push edi  +
call dword ptr [eax+24h]  +
test eax eax +
jz loc_1045316  +
jl loc_104530F  +
lea ecx [ebx+205h] +
mov al [ecx] +
test al 1 +
jz loc_104536B  +
test al 4 +
jnz loc_104536B  +
or al 4 +
mov [ecx] al +
jmp loc_104530D  +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+var_4]  +
push 45Dh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE45h +
jmp loc_104530F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10422B1  +
test [ebp+arg_0] 1 +
jz loc_10453AA  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
mov edi [eax+24h] +
test edi edi +
jnz loc_10453CA  +
xor eax eax +
jmp loc_1045426  +
cmp byte ptr [eax+40h] 0 +
push esi  +
jnz loc_1045423  +
push 210h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_10453EF  +
push 8  +
pop eax  +
jmp loc_1045425  +
mov eax dword_10566D8 +
push dword ptr [eax+31Ch]  +
lea eax [esi+8] +
push 208h  +
push eax  +
call sub_1042B97  +
test eax eax +
jge loc_1045413  +
mov eax 54Fh +
jmp loc_1045425  +
lea eax [edi+10h] +
mov ecx [eax+4] +
mov [esi] eax +
mov [esi+4] ecx +
mov [ecx] esi +
mov [eax+4] esi +
xor eax eax +
pop esi  +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+24h] 0 +
jz loc_1045463  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_1045463  +
push eax  +
call sub_104298F  +
push dword ptr [esi+3Ch]  +
call sub_1042952  +
push 50h  +
push 0  +
push dword ptr [esi+3Ch]  +
call memset  +
add esp 10h +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
mov ecx [eax+24h] +
mov eax [eax+0Ch] +
test ecx ecx +
jz loc_10454A5  +
cmp [ecx] ecx +
jnz loc_10454A5  +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push dword ptr [ebp+arg_0]  +
push 462h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE10h +
jmp loc_10454A7  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx dword ptr [ebp+arg_0] +
mov eax [ecx+28h] +
mov edx [ecx+0Ch] +
test eax eax +
jz loc_10454F0  +
lea ecx [eax+8] +
cmp [ecx] ecx +
jnz loc_10454F0  +
add eax 10h +
cmp [eax] eax +
jnz loc_10454F0  +
mov eax [edx] +
lea ecx [ebp+arg_0] +
push ecx  +
push edx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 463h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE10h +
jmp loc_10454F2  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
push esi  +
mov esi [eax+2Ch] +
push edi  +
mov edi [eax+0Ch] +
test esi esi +
jnz loc_1045516  +
xor eax eax +
jmp loc_104562D  +
lea eax [esi+8] +
cmp [eax] eax +
jnz loc_1045540  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 464h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE10h +
jmp loc_104562D  +
cmp dword ptr [esi+14h] 0 +
push esi  +
jbe loc_1045573  +
call sub_10422CC  +
test al al +
jnz loc_104559F  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 465h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE2Ch +
jmp loc_104562D  +
call sub_104233E  +
test al al +
jnz loc_104559F  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 466h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE2Eh +
jmp loc_104562D  +
push ebx  +
mov bl [esi+74h] +
test bl bl +
jz loc_10455F2  +
test byte ptr [esi+205h] 2 +
jz loc_10455C4  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 467h  +
jmp loc_10455E4  +
test bl bl +
jz loc_10455F2  +
push esi  +
call sub_1042387  +
test al al +
jnz loc_10455F2  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 468h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE2Fh +
jmp loc_104562C  +
mov al [esi+205h] +
mov cl al +
and cl 30h +
cmp cl 20h +
jnz loc_104562A  +
test al 2 +
jnz loc_104562A  +
test bl bl +
jnz loc_104562A  +
mov eax [edi] +
lea ecx [ebp+arg_0] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 469h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE30h +
jmp loc_104562C  +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx dword ptr [ebp+arg_0] +
mov eax [ecx+34h] +
mov ecx [ecx+0Ch] +
test eax eax +
jz loc_10456A5  +
test byte ptr [eax+102h] 1 +
jnz loc_1045673  +
mov eax [ecx] +
lea edx [ebp+arg_0] +
push edx  +
push ecx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 46Bh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE10h +
jmp loc_10456A7  +
test byte ptr [eax+0F1h] 2 +
jnz loc_10456A5  +
test byte ptr [eax+101h] 8 +
jz loc_10456A5  +
mov eax [ecx] +
lea edx [ebp+arg_0] +
push edx  +
push ecx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 46Ch  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE2Ah +
jmp loc_10456A7  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 9Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [eax+34h] +
push esi  +
mov esi [eax+2Ch] +
mov eax [eax+0Ch] +
mov [ebp+var_78] esi +
mov [ebp+var_84] ebx +
mov [ebp+var_80] eax +
test esi esi +
jnz loc_10456EA  +
xor eax eax +
jmp loc_10459F4  +
test ebx ebx +
jz loc_10456E3  +
test byte ptr [esi+204h] 80h +
jz loc_1045702  +
mov ax [esi+76h] +
mov [ebx+84h] ax +
push edi  +
lea ecx [ebp+var_6C] +
push ecx  +
lea ecx [ebp+var_9C] +
push ecx  +
mov cl [ebx+0F1h] +
and cl 1 +
movzx ecx cl +
neg ecx  +
sbb ecx ecx +
lea edx [ebx+5Ch] +
not ecx  +
and ecx edx +
lea eax [ebx+70h] +
push ecx  +
push eax  +
call sub_1042525  +
mov edi eax +
test edi edi +
jz loc_1045765  +
mov eax [ebp+var_80] +
mov ecx [eax] +
lea edx [ebp+var_74] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push dword ptr [ebp+var_74]  +
cmp edi 0C007EE22h +
jnz loc_1045754  +
push 46Dh  +
jmp loc_1045759  +
push 46Eh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
jmp loc_10459F1  +
mov cl [esi+205h] +
movzx edx cl +
shr edx 4 +
xor eax eax +
and edx 3 +
mov [ebp+var_6D] cl +
jbe loc_10457C8  +
add esi 1D4h +
mov [ebp+var_7C] esi +
mov esi [ebp+var_7C] +
lea edi [ebx+70h] +
push 4  +
xor ebx ebx +
mov ebx [ebp+var_84] +
pop ecx  +
cmps   +
jnz loc_10457A9  +
mov ecx [ebp+var_7C] +
mov cx [ecx+10h] +
cmp cx [ebx+80h] +
jz loc_10457C2  +
mov ecx [ebp+var_78] +
movzx ecx byte ptr [ecx+205h] +
add [ebp+var_7C] 18h +
shr ecx 4 +
inc eax  +
and ecx 3 +
cmp eax ecx +
jb loc_1045784  +
mov esi [ebp+var_78] +
mov cl [ebp+var_6D] +
cmp eax edx +
jnz loc_1045824  +
test byte ptr [ebx+102h] 2 +
jz loc_10457EC  +
mov eax [ebp+var_80] +
mov ecx [eax] +
lea edx [ebp+var_74] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push dword ptr [ebp+var_74]  +
push 46Fh  +
jmp loc_1045866  +
and cl 30h +
cmp cl 20h +
jnb loc_1045851  +
imul eax eax +
lea edi [eax+esi+1D4h] +
push 6  +
pop ecx  +
lea esi [ebx+70h] +
movs   +
mov esi [ebp+var_78] +
mov al [esi+205h] +
mov cl al +
and cl 0F0h +
add cl 10h +
xor cl al +
and cl 30h +
xor cl al +
mov [esi+205h] cl +
test byte ptr [ebx+0F0h] 3 +
jz loc_1045935  +
test byte ptr [ebx+100h] 10h +
jnz loc_104590F  +
mov al [ebx+0F1h] +
test al 1 +
jz loc_1045877  +
shr al 1 +
and al 1 +
jmp loc_1045907  +
mov eax [ebp+var_80] +
mov ecx [eax] +
lea edx [ebp+var_74] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push dword ptr [ebp+var_74]  +
push 470h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE30h +
jmp loc_10459F3  +
mov cx [ebp+var_94] +
push 3  +
pop edx  +
cmp dx cx +
jz loc_10458F0  +
push 4  +
pop edx  +
cmp dx cx +
jz loc_10458F0  +
push 5  +
pop edx  +
cmp dx cx +
jz loc_10458F0  +
push 6  +
pop edx  +
cmp dx cx +
jz loc_10458F0  +
push 7  +
pop edx  +
cmp dx cx +
jz loc_10458F0  +
push 8  +
pop edx  +
cmp dx cx +
jz loc_10458F0  +
push 14h  +
pop edx  +
cmp dx cx +
jz loc_10458F0  +
push 9  +
pop edx  +
cmp dx cx +
jz loc_10458F0  +
push 0Ah  +
pop edx  +
cmp dx cx +
jz loc_10458F0  +
push 15h  +
pop edx  +
cmp dx cx +
jz loc_10458F0  +
push 0Bh  +
pop edx  +
cmp dx cx +
jz loc_10458F0  +
push 0Ch  +
pop edx  +
cmp dx cx +
jz loc_10458F0  +
mov edx 134h +
cmp dx cx +
jz loc_10458F0  +
push 10h  +
pop edx  +
cmp dx cx +
jnz loc_10458FD  +
cmp [ebp+var_90] 0 +
jz loc_10459C5  +
and al 0FDh +
mov [ebx+0F1h] al +
xor al al +
test al al +
jnz loc_10459D1  +
mov eax [ebp+var_80] +
mov ecx [eax] +
lea edx [ebp+var_74] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push dword ptr [ebp+var_74]  +
push 471h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE29h +
jmp loc_10459F3  +
mov al [ebx+0F1h] +
test al 1 +
jnz loc_10459D1  +
mov cx [ebp+var_94] +
push 3  +
pop edx  +
cmp dx cx +
jz loc_10459BC  +
push 4  +
pop edx  +
cmp dx cx +
jz loc_10459BC  +
push 5  +
pop edx  +
cmp dx cx +
jz loc_10459BC  +
push 6  +
pop edx  +
cmp dx cx +
jz loc_10459BC  +
push 7  +
pop edx  +
cmp dx cx +
jz loc_10459BC  +
push 8  +
pop edx  +
cmp dx cx +
jz loc_10459BC  +
push 14h  +
pop edx  +
cmp dx cx +
jz loc_10459BC  +
push 9  +
pop edx  +
cmp dx cx +
jz loc_10459BC  +
push 0Ah  +
pop edx  +
cmp dx cx +
jz loc_10459BC  +
push 15h  +
pop edx  +
cmp dx cx +
jz loc_10459BC  +
push 0Bh  +
pop edx  +
cmp dx cx +
jz loc_10459BC  +
push 0Ch  +
pop edx  +
cmp dx cx +
jz loc_10459BC  +
mov edx 134h +
cmp dx cx +
jz loc_10459BC  +
push 10h  +
pop edx  +
cmp dx cx +
jnz loc_10459C9  +
cmp [ebp+var_90] 0 +
jnz loc_10459C9  +
or al 2 +
jmp loc_10459CB  +
and al 0FDh +
mov [ebx+0F1h] al +
movzx eax byte ptr [esi+74h] +
push eax  +
lea eax [ebp+var_6C] +
push eax  +
call sub_1042B40  +
test eax eax +
jnz loc_10459F3  +
push 1Ah  +
lea edi [ebx+88h] +
pop ecx  +
lea esi [ebp+var_6C] +
movs   +
xor eax eax +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
mov eax [ecx+2Ch] +
mov ecx [ecx+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_3C] ecx +
test eax eax +
jnz loc_1045A35  +
xor eax eax +
jmp loc_1045B5E  +
test byte ptr [eax+110h] 8 +
jz loc_1045B40  +
test byte ptr [eax+1B0h] 8 +
jz loc_1045B40  +
mov cl [eax+9Eh] +
lea esi [eax+8Ch] +
lea edi [ebp+var_34] +
movs   +
movs   +
movs   +
movs   +
mov dx [eax+9Ch] +
mov [ebp+var_22] cl +
lea ecx [eax+118h] +
lea esi [ecx+14h] +
lea edi [ebp+var_1C] +
movs   +
movs   +
movs   +
movs   +
mov si [ecx+24h] +
mov cl [ecx+26h] +
mov [ebp+var_C] si +
mov [ebp+var_A] cl +
push 4  +
pop ecx  +
lea edi [ebp+var_1C] +
lea esi [ebp+var_34] +
xor ebx ebx +
mov [ebp+var_24] dx +
cmps   +
jnz loc_1045AA3  +
cmp dx [ebp+var_C] +
jz loc_1045B1F  +
lea edi [eax+1D4h] +
push 4  +
pop ecx  +
lea esi [ebp+var_34] +
xor ebx ebx +
mov dword ptr [ebp+var_38] edi +
cmps   +
jnz loc_1045AE7  +
mov ecx dword ptr [ebp+var_38] +
cmp dx [ecx+10h] +
jnz loc_1045AE7  +
lea edx [eax+1ECh] +
push 4  +
pop ecx  +
mov edi edx +
lea esi [ebp+var_1C] +
xor ebx ebx +
cmps   +
jnz loc_1045AE3  +
mov cx [ebp+var_C] +
cmp cx [edx+10h] +
jz loc_1045A2E  +
mov dx [ebp+var_24] +
add eax 1ECh +
push 4  +
pop ecx  +
mov edi eax +
lea esi [ebp+var_34] +
xor ebx ebx +
cmps   +
jnz loc_1045B1F  +
cmp dx [eax+10h] +
jnz loc_1045B1F  +
mov eax dword ptr [ebp+var_38] +
push 4  +
pop ecx  +
mov edi eax +
lea esi [ebp+var_1C] +
xor edx edx +
cmps   +
jnz loc_1045B1F  +
mov cx [ebp+var_C] +
cmp cx [eax+10h] +
jz loc_1045A2E  +
mov eax [ebp+var_3C] +
mov ecx [eax] +
lea edx [ebp+var_38] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push dword ptr [ebp+var_38]  +
push 473h  +
call sub_1042C5F  +
mov eax 0C007EE2Dh +
jmp loc_1045B5C  +
mov eax [ecx] +
lea edx [ebp+var_38] +
push edx  +
push ecx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+var_38]  +
push 472h  +
call sub_1042C5F  +
mov eax 0C007EE13h +
pop ecx  +
pop ecx  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 70h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
mov esi [eax+38h] +
push edi  +
mov edi [eax+0Ch] +
test esi esi +
jnz loc_1045B99  +
xor eax eax +
jmp loc_1045C0A  +
push ebx  +
lea eax [ebp+var_6C] +
push eax  +
mov al [esi+98h] +
and al 10h +
movzx eax al +
neg eax  +
sbb eax eax +
not eax  +
push 0  +
and eax esi +
push eax  +
lea eax [esi+14h] +
push eax  +
call sub_1042525  +
mov ebx eax +
test ebx ebx +
jz loc_1045BED  +
mov eax [edi] +
lea ecx [ebp+var_70] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+var_70]  +
cmp ebx 0C007EE24h +
jnz loc_1045BDF  +
push 475h  +
jmp loc_1045BE4  +
push 476h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
jmp loc_1045C07  +
push 0  +
lea eax [ebp+var_6C] +
push eax  +
call sub_1042B40  +
test eax eax +
jnz loc_1045C09  +
lea edi [esi+30h] +
push 1Ah  +
pop ecx  +
lea esi [ebp+var_6C] +
movs   +
xor eax eax +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
mov ecx [eax+0Ch] +
mov eax [eax+2Ch] +
test eax eax +
jz loc_1045C5A  +
add eax 1B8h +
cmp [eax] eax +
jnz loc_1045C5A  +
mov eax [ecx] +
lea edx [ebp+arg_0] +
push edx  +
push ecx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 477h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE10h +
jmp loc_1045C5C  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
cmp byte ptr [eax+4Ch] 0 +
mov ecx [eax+24h] +
mov edx [eax+0Ch] +
jnz loc_1045C82  +
test ecx ecx +
jz loc_1045CA9  +
lea eax [ecx+8] +
jmp loc_1045C85  +
add eax 44h +
cmp [eax] eax +
jnz loc_1045CA9  +
mov eax [edx] +
lea ecx [ebp+arg_0] +
push ecx  +
push edx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 478h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE10h +
jmp loc_1045CAB  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
cmp byte ptr [eax+4Ch] 0 +
mov ecx [eax+24h] +
mov edx [eax+0Ch] +
jnz loc_1045CD5  +
test ecx ecx +
jnz loc_1045CD0  +
xor eax eax +
jmp loc_1045D03  +
lea eax [ecx+8] +
jmp loc_1045CD8  +
add eax 44h +
mov eax [eax+4] +
test eax eax +
jz loc_1045CE5  +
test byte ptr [eax+30h] 2 +
jnz loc_1045CCC  +
mov eax [edx] +
lea ecx [ebp+arg_0] +
push ecx  +
push edx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 479h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE12h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
push ebx  +
push esi  +
push edi  +
mov edi [eax+4] +
xor ebx ebx +
push ebx  +
push offset aReport_0  +
push ecx  +
push edi  +
mov [ebp+var_4] ecx +
call sub_104B901  +
mov esi [ebp+arg_0] +
test al al +
jz loc_1045D48  +
cmp [esi+4Ch] bl +
jnz loc_1045D48  +
push esi  +
call sub_10453B6  +
jmp loc_1045EEA  +
push ebx  +
push offset aImport  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1045D6B  +
cmp [esi+4Ch] bl +
jnz loc_1045D6B  +
push esi  +
call sub_1045430  +
jmp loc_1045EEA  +
push ebx  +
push offset aSections  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1045D8E  +
cmp [esi+4Ch] bl +
jnz loc_1045D8E  +
push esi  +
call sub_104546F  +
jmp loc_1045EEA  +
push ebx  +
push offset aSection_1  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1045DB1  +
cmp [esi+4Ch] bl +
jnz loc_1045DB1  +
push esi  +
call sub_10454B0  +
jmp loc_1045EEA  +
push ebx  +
push offset aEventtable  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1045DD4  +
cmp [esi+4Ch] bl +
jnz loc_1045DD4  +
push esi  +
call sub_10454FB  +
jmp loc_1045EEA  +
push ebx  +
push offset aCountertable  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1045DF0  +
cmp [esi+4Ch] bl +
jz loc_1045EE8  +
push ebx  +
push offset aExclude  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1045E0C  +
cmp [esi+4Ch] bl +
jz loc_1045EE8  +
push ebx  +
push offset aColumn_0  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1045E2F  +
cmp [esi+4Ch] bl +
jnz loc_1045E2F  +
push esi  +
call sub_1045638  +
jmp loc_1045EEA  +
push ebx  +
push offset aEventfield  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1045E52  +
cmp [esi+4Ch] bl +
jnz loc_1045E52  +
push esi  +
call sub_10456B0  +
jmp loc_1045EEA  +
push ebx  +
push offset aEqualjoin  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1045E72  +
cmp [esi+4Ch] bl +
jnz loc_1045E72  +
push esi  +
call sub_1045A09  +
jmp loc_1045EEA  +
push ebx  +
push offset aEventjoinfield  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1045E92  +
cmp [esi+4Ch] bl +
jnz loc_1045E92  +
push esi  +
call sub_1045B74  +
jmp loc_1045EEA  +
push ebx  +
push offset aSubtable  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1045EB2  +
cmp [esi+4Ch] bl +
jnz loc_1045EB2  +
push esi  +
call sub_1045C1F  +
jmp loc_1045EEA  +
push ebx  +
push offset aStringtable_3  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1045ECD  +
push esi  +
call sub_1045C65  +
jmp loc_1045EEA  +
push ebx  +
push offset aString_1  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1045EE8  +
push esi  +
call sub_1045CB4  +
jmp loc_1045EEA  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1045F09  +
push 1  +
call sub_10445AD  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi [edi] +
jmp loc_1045F34  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
mov [ecx] eax +
push edx  +
mov [eax+4] ecx +
call sub_1045EF6  +
cmp edi esi +
jnz loc_1045F20  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
lea edi [ebx+8] +
mov esi [edi] +
jmp loc_1045F6A  +
mov ecx esi +
mov eax [ecx] +
mov edx [ecx+4] +
mov esi [esi] +
mov [edx] eax +
push 1  +
mov [eax+4] edx +
call sub_1043D9E  +
cmp edi esi +
jnz loc_1045F55  +
lea edi [ebx+10h] +
mov esi [edi] +
jmp loc_1045F8A  +
mov ecx esi +
mov eax [ecx] +
mov edx [ecx+4] +
mov esi [esi] +
mov [edx] eax +
push 1  +
mov [eax+4] edx +
call sub_1043D9E  +
cmp edi esi +
jnz loc_1045F75  +
test ebx ebx +
jz loc_1045F9B  +
push 1  +
mov ecx ebx +
call sub_1043AA7  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1045FBA  +
push 1  +
call sub_1045390  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp byte ptr [eax+4Ch] 0 +
jz loc_1045FF4  +
push esi  +
push edi  +
lea edi [eax+44h] +
mov esi [edi] +
jmp loc_1045FEE  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
mov [ecx] eax +
push edx  +
mov [eax+4] ecx +
call sub_1045FA7  +
cmp edi esi +
jnz loc_1045FDA  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi ecx +
test edi edi +
jnz loc_1046011  +
xor eax eax +
jmp loc_104603A  +
cmp [ebp+arg_8] 0 +
jz loc_104602B  +
push [ebp+arg_0]  +
call sub_102F548  +
push eax  +
call sub_102C488  +
mov ecx eax +
mov [edi] ecx +
jmp loc_104602D  +
mov ecx [edi] +
mov eax [esi+0Ch] +
and eax ecx +
mov ecx [esi+10h] +
shl eax cl +
add eax [esi+24h] +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1046089  +
and dword ptr [esi+68h] 0 +
lea eax [esi+8] +
mov [esi+0Ch] eax +
mov [eax] eax +
lea eax [esi+10h] +
lea ecx [esi+18h] +
mov dword ptr [esi+6Ch] 19h +
mov byte ptr [esi+84h] 0 +
mov [esi+4] esi +
mov [esi] esi +
mov [esi+14h] eax +
mov [eax] eax +
call sub_10300E4  +
lea ecx [esi+40h] +
call sub_10300E4  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_10460BF  +
and dword ptr [eax+54h] 0 +
lea ecx [eax+8] +
mov [eax+0Ch] ecx +
mov [ecx] ecx +
lea ecx [eax+10h] +
mov [eax+14h] ecx +
mov [ecx] ecx +
lea ecx [eax+18h] +
mov byte ptr [eax+6Ch] 0 +
call sub_10300E4  +
pop ebp  +
retn 4  +
***
xor edx edx +
push esi  +
mov esi ecx +
mov [esi+34h] edx +
mov [esi+38h] dl +
push edi  +
xor eax eax +
mov ecx 1E3603Bh +
mov [esi+28h] ecx +
lea edi [esi+2Ch] +
stos   +
stos   +
mov [esi+3Ch] ecx +
mov [esi+48h] edx +
mov [esi+4Ch] dl +
xor eax eax +
lea edi [esi+40h] +
stos   +
stos   +
mov [esi+50h] ecx +
mov [esi+5Ch] edx +
mov [esi+60h] dl +
xor eax eax +
lea edi [esi+54h] +
stos   +
lea ecx [esi+78h] +
stos   +
call sub_104377F  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10437D6  +
test [ebp+arg_0] 1 +
jz loc_104612F  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx+30h] +
push esi  +
push edi  +
mov edi [ebx+0Ch] +
mov [ebp+arg_0] eax +
mov [ebp+var_4] edi +
test eax eax +
jz loc_1046225  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_1046225  +
cmp dword ptr [ebx+1Ch] 5 +
jnz loc_1046225  +
push 0  +
push offset aCountertable  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
call sub_104B901  +
test al al +
jz loc_1046225  +
push 20h  +
call ??2@YAPAXI@Z  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_10461B5  +
and dword ptr [esi+14h] 0 +
mov dword ptr [esi+8] 1E3603Bh +
mov byte ptr [esi+18h] 0 +
xor eax eax +
lea edi [esi+0Ch] +
stos   +
stos   +
mov edi [ebp+var_4] +
jmp loc_10461B7  +
xor esi esi +
test esi esi +
jnz loc_10461C0  +
push 8  +
pop eax  +
jmp loc_1046227  +
push esi  +
call sub_1041C45  +
jmp loc_10461FE  +
inc dword ptr [ebx+18h]  +
mov eax [edi] +
lea ecx [ebp+var_C] +
push ecx  +
lea ecx [ebp+arg_4] +
push ecx  +
push edi  +
call dword ptr [eax+38h]  +
mov eax [ebp+arg_4] +
push [ebp+arg_0]  +
mov [ebp+var_4] eax +
mov eax [ebp+var_C] +
add eax eax +
mov word ptr [ebp+var_8+2] ax +
mov word ptr [ebp+var_8] ax +
push esi  +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
call sub_1043BC0  +
test eax eax +
jnz loc_104622E  +
mov eax [edi] +
push edi  +
call dword ptr [eax+24h]  +
test eax eax +
jz loc_10461C8  +
test eax eax +
jl loc_104622E  +
test byte ptr [esi+1Ch] 1 +
jz loc_1046225  +
mov eax [ebp+arg_0] +
mov ecx [eax+0Ch] +
add eax 8 +
mov [esi] eax +
mov [esi+4] ecx +
mov [ecx] esi +
mov [eax+4] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
push 1  +
mov ecx esi +
mov edi eax +
call sub_1043D9E  +
mov eax edi +
jmp loc_1046227  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+30h] +
mov ebx [edi+0Ch] +
mov [ebp+var_C] eax +
test eax eax +
jz loc_1046367  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_1046367  +
cmp dword ptr [edi+1Ch] 5 +
jnz loc_1046367  +
push 0  +
push offset aCountertable  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
call sub_104B901  +
test al al +
jz loc_1046367  +
push 20h  +
call ??2@YAPAXI@Z  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_10462B9  +
and dword ptr [esi+14h] 0 +
mov dword ptr [esi+8] 1E3603Bh +
mov byte ptr [esi+18h] 0 +
xor eax eax +
lea edi [esi+0Ch] +
stos   +
stos   +
mov edi [ebp+arg_0] +
jmp loc_10462BB  +
xor esi esi +
test esi esi +
jnz loc_10462C7  +
push 8  +
pop eax  +
jmp loc_1046369  +
push esi  +
call sub_1041C45  +
jmp loc_1046302  +
inc dword ptr [edi+18h]  +
mov eax [ebx] +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+arg_4] +
push ecx  +
push ebx  +
call dword ptr [eax+38h]  +
mov eax [ebp+arg_4] +
mov [ebp+var_10] eax +
mov eax [ebp+var_4] +
add eax eax +
mov word ptr [ebp+var_14+2] ax +
mov word ptr [ebp+var_14] ax +
push esi  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
call sub_1043D3B  +
test eax eax +
jnz loc_1046345  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+24h]  +
test eax eax +
jz loc_10462CF  +
test eax eax +
jl loc_1046345  +
test byte ptr [esi+1Ch] 1 +
jnz loc_1046354  +
mov eax [ebx] +
lea ecx [ebp+var_8] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
test byte ptr [esi+1Ch] 1 +
jnz loc_1046335  +
push dword ptr [ebp+var_8]  +
push 3FBh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
push 1  +
mov ecx esi +
call sub_1043D9E  +
mov eax 0C007EE11h +
jmp loc_1046369  +
push 1  +
mov ecx esi +
mov edi eax +
call sub_1043D9E  +
mov eax edi +
jmp loc_1046369  +
mov eax [ebp+var_C] +
mov ecx [eax+14h] +
add eax 10h +
mov [esi] eax +
mov [esi+4] ecx +
mov [ecx] esi +
mov [eax+4] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax [ebp+arg_0] +
mov ecx [eax+1Ch] +
push ebx  +
mov ebx [eax+0Ch] +
push edi  +
mov edi [eax+2Ch] +
mov [ebp+var_8] ecx +
test edi edi +
jnz loc_1046399  +
xor eax eax +
jmp loc_104655D  +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_104655A  +
cmp ecx 5 +
jnz loc_10463C0  +
push 0  +
push offset aEventtable  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
call sub_104B901  +
test al al +
jnz loc_1046418  +
cmp [ebp+var_8] 6 +
jnz loc_104655A  +
push 0  +
push offset aSubtable  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
call sub_104B901  +
test al al +
jz loc_104655A  +
push 0  +
push offset aSubtable  +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
call sub_104B901  +
test al al +
jz loc_1046418  +
mov byte ptr [ebp+arg_4] 1 +
push 108h  +
call ??2@YAPAXI@Z  +
pop ecx  +
test eax eax +
jz loc_1046451  +
mov ecx eax +
call sub_1044560  +
mov esi eax +
jmp loc_1046453  +
lea ecx [edi+205h] +
mov al [ecx] +
mov byte ptr [ebp+arg_4] 0 +
test al 6 +
jnz loc_104642E  +
or al 1 +
mov [ecx] al +
jmp loc_10463FE  +
mov eax [ebx] +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+var_4]  +
push 441h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE43h +
jmp loc_104655C  +
xor esi esi +
test esi esi +
jnz loc_104645F  +
push 8  +
pop eax  +
jmp loc_104655C  +
push [ebp+arg_4]  +
push esi  +
call sub_1041C99  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+20h]  +
jmp loc_10464B1  +
mov eax [ebp+arg_0] +
inc dword ptr [eax+18h]  +
mov eax [ebx] +
lea ecx [ebp+var_14] +
push ecx  +
lea ecx [ebp+var_10] +
push ecx  +
push ebx  +
call dword ptr [eax+38h]  +
mov eax [ebp+var_10] +
push [ebp+arg_4]  +
mov [ebp+var_8] eax +
mov eax [ebp+var_14] +
add eax eax +
mov word ptr [ebp+var_C+2] ax +
mov word ptr [ebp+var_C] ax +
push esi  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_0]  +
call sub_10443A8  +
test eax eax +
jnz loc_10464EB  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+24h]  +
test eax eax +
jz loc_1046470  +
test eax eax +
jl loc_10464EB  +
test byte ptr [esi+100h] 80h +
jnz loc_10464FA  +
mov eax [ebx] +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+var_4]  +
push 3FCh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
push 1  +
mov ecx esi +
call sub_10445AD  +
mov eax 0C007EE11h +
jmp loc_104655C  +
push 1  +
mov ecx esi +
mov edi eax +
call sub_10445AD  +
mov eax edi +
jmp loc_104655C  +
cmp byte ptr [ebp+arg_4] 0 +
jz loc_1046525  +
lea eax [edi+1B8h] +
mov ecx [eax+4] +
mov [esi] eax +
mov [esi+4] ecx +
mov [ecx] esi +
mov [eax+4] esi +
add edi 1C0h +
mov eax [edi] +
mov [esi+0F8h] eax +
inc dword ptr [edi]  +
jmp loc_1046554  +
lea eax [edi+8] +
mov ecx [eax+4] +
mov [esi] eax +
mov [esi+4] ecx +
mov [ecx] esi +
mov [eax+4] esi +
mov eax [edi+10h] +
mov [esi+0F8h] eax +
inc dword ptr [edi+10h]  +
test byte ptr [esi+100h] 10h +
mov eax [edi+10h] +
jz loc_1046554  +
inc dword ptr [edi+14h]  +
dec eax  +
mov [edi+1Ch] eax +
mov eax [ebp+arg_0] +
mov [eax+34h] esi +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
lea edi [ebx+8] +
mov esi [edi] +
jmp loc_104658E  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
mov [ecx] eax +
push edx  +
mov [eax+4] ecx +
call sub_1045EF6  +
cmp edi esi +
jnz loc_104657A  +
lea eax [ebx+1B8h] +
push eax  +
call sub_1045F12  +
mov eax [ebx+18h] +
test eax eax +
jz loc_10465B4  +
push eax  +
push 0  +
push hHeap  +
call ds:HeapFree  +
push 1  +
mov ecx ebx +
call sub_1046115  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
xor eax eax +
push esi  +
mov esi ecx +
mov [ebp+var_8] eax +
cmp [ebp+arg_4] eax +
jnz loc_10465E6  +
push 57h  +
pop eax  +
jmp loc_10466AF  +
push edi  +
mov edi [ebp+arg_0] +
cmp edi eax +
jz loc_10466AB  +
cmp [edi+4] eax +
jz loc_10466AB  +
call sub_102F4DE  +
test al al +
jnz loc_104660E  +
mov eax 65Ch +
jmp loc_10466AE  +
push ebx  +
push 1  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
mov ecx esi +
call sub_1045FFD  +
and [ebp+var_4] 0 +
cmp dword ptr [esi+18h] 0 +
mov ebx eax +
jbe loc_1046666  +
mov eax [ebp+var_4] +
shl eax 3 +
mov ecx [eax+ebx+0Ch] +
cmp ecx 1E3603Bh +
jz loc_104666A  +
cmp ecx [ebp+var_C] +
jnz loc_104665B  +
mov edi [eax+ebx+8] +
mov eax [esi] +
push 0  +
push [ebp+arg_0]  +
mov ecx esi +
push edi  +
call dword ptr [eax]  +
push eax  +
call ds:RtlEqualUnicodeString  +
test al al +
jnz loc_10466A0  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [esi+18h] +
jb loc_1046629  +
mov edi [ebx] +
jmp loc_1046695  +
xor edi edi +
jmp loc_1046699  +
mov eax [esi] +
push edi  +
mov ecx esi +
call dword ptr [eax+4]  +
cmp eax [ebp+var_C] +
jnz loc_1046692  +
mov eax [esi] +
push 0  +
push [ebp+arg_0]  +
mov ecx esi +
push edi  +
call dword ptr [eax]  +
push eax  +
call ds:RtlEqualUnicodeString  +
test al al +
jnz loc_10466A0  +
mov edi [edi+0Ch] +
test edi edi +
jnz loc_104666E  +
mov [ebp+var_8] 490h +
mov eax [ebp+arg_4] +
mov [eax] edi +
mov eax [ebp+var_8] +
pop ebx  +
jmp loc_10466AE  +
push 57h  +
pop eax  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ecx +
test ebx ebx +
jnz loc_10466D3  +
push 57h  +
pop eax  +
jmp loc_10467AA  +
mov eax [esi] +
push ebx  +
call dword ptr [eax]  +
mov ecx esi +
mov [ebp+var_8] eax +
call sub_102F4DE  +
test al al +
jnz loc_10466EA  +
push 0Dh  +
jmp loc_10466CD  +
mov eax [esi] +
push edi  +
push ebx  +
mov ecx esi +
call dword ptr [eax+4]  +
mov ecx esi +
cmp eax 1E3603Bh +
jnz loc_1046719  +
push 1  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+var_8]  +
call sub_1045FFD  +
push [ebp+var_4]  +
mov edi eax +
mov eax [esi] +
push ebx  +
mov ecx esi +
call dword ptr [eax+8]  +
jmp loc_1046733  +
mov eax [esi] +
push ebx  +
call dword ptr [eax+4]  +
mov [ebp+var_4] eax +
push 0  +
lea eax [ebp+var_4] +
push eax  +
push 0  +
mov ecx esi +
call sub_1045FFD  +
mov edi eax +
xor ebx ebx +
cmp [esi+18h] ebx +
jbe loc_104676B  +
mov eax [edi+ebx*8+0Ch] +
cmp eax 1E3603Bh +
jz loc_10467B7  +
cmp eax [ebp+var_4] +
jnz loc_1046765  +
mov eax [edi+ebx*8+8] +
mov edx [esi] +
push 0  +
push [ebp+var_8]  +
mov ecx esi +
push eax  +
call dword ptr [edx]  +
push eax  +
call ds:RtlEqualUnicodeString  +
test al al +
jnz loc_10467B0  +
inc ebx  +
cmp ebx [esi+18h] +
jb loc_104673A  +
mov ebx [edi] +
jmp loc_1046796  +
mov eax [esi] +
push ebx  +
mov ecx esi +
call dword ptr [eax+4]  +
cmp eax [ebp+var_4] +
jnz loc_1046793  +
mov eax [esi] +
push 0  +
push [ebp+var_8]  +
mov ecx esi +
push ebx  +
call dword ptr [eax]  +
push eax  +
call ds:RtlEqualUnicodeString  +
test al al +
jnz loc_10467B0  +
mov ebx [ebx+0Ch] +
test ebx ebx +
jnz loc_104676F  +
mov ecx [edi] +
mov eax [ebp+arg_0] +
mov [eax+0Ch] ecx +
mov [edi] eax +
inc dword ptr [edi+4]  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
mov eax 0B7h +
jmp loc_10467A9  +
cmp ebx 0FFFFFFFFh +
jz loc_104679A  +
mov ecx [ebp+var_4] +
lea eax [edi+ebx*8+8] +
mov [eax+4] ecx +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
jmp loc_10467A4  +
***
mov edi edi +
push esi  +
mov edx ecx +
xor esi esi +
cmp [edx+8] esi +
jbe loc_10467F5  +
mov ecx [edx+10h] +
mov eax esi +
shl eax cl +
add eax [edx+24h] +
and dword ptr [eax] 0 +
and dword ptr [eax+4] 0 +
inc esi  +
cmp esi [edx+8] +
jb loc_10467DE  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword ptr [ebp+arg_0] +
mov ecx [eax+0Ch] +
push edi  +
mov edi [eax+24h] +
mov [ebp+var_4] ecx +
test edi edi +
jnz loc_104681A  +
xor eax eax +
jmp loc_10468AA  +
push esi  +
mov esi [ebp+arg_8] +
mov al [esi+6Ch] +
test al 1 +
jz loc_1046845  +
mov eax [ecx] +
lea edx [ebp+arg_0] +
push edx  +
push ecx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 3ECh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_10468A9  +
push ebx  +
push [ebp+arg_4]  +
or al 1 +
lea ebx [esi+40h] +
mov ecx ebx +
mov [esi+6Ch] al +
mov byte ptr [esi+50h] 1 +
call sub_1041938  +
lea eax [ebp+arg_8] +
push eax  +
add edi 18h +
add esi 44h +
push esi  +
mov ecx edi +
call sub_10465C9  +
test eax eax +
jz loc_1046883  +
cmp eax 490h +
jnz loc_10468A8  +
push ebx  +
mov ecx edi +
call sub_10466B9  +
jmp loc_10468A8  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 3EDh  +
call sub_1042C5F  +
add esp 0Ch +
mov eax 0C007EE02h +
pop ebx  +
pop esi  +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+0Ch] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
mov eax [ebp+arg_0] +
mov esi [ebp+arg_4] +
push 0  +
push offset aName  +
push dword ptr [esi+4]  +
mov [ebp+var_8] eax +
mov eax [ebp+var_4] +
push dword ptr [esi]  +
add eax eax +
mov word ptr [ebp+var_C+2] ax +
mov word ptr [ebp+var_C] ax +
call sub_104B901  +
test al al +
jz loc_104690C  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_10467FC  +
jmp loc_1046956  +
push 0  +
push offset aKey  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1046930  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1043259  +
jmp loc_1046956  +
push 0  +
push offset aNote  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1046954  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_10432E5  +
jmp loc_1046956  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword ptr [ebp+arg_0] +
mov ecx [eax+0Ch] +
push edi  +
mov edi [eax+28h] +
mov [ebp+var_4] ecx +
test edi edi +
jnz loc_104697F  +
xor eax eax +
jmp loc_1046A15  +
push esi  +
mov esi [ebp+arg_8] +
mov al [esi+204h] +
test al 1 +
jz loc_10469AD  +
mov eax [ecx] +
lea edx [ebp+arg_0] +
push edx  +
push ecx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 412h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1046A14  +
push ebx  +
push [ebp+arg_4]  +
or al 1 +
lea ebx [esi+28h] +
mov ecx ebx +
mov [esi+204h] al +
mov byte ptr [esi+38h] 1 +
call sub_1041938  +
lea eax [ebp+arg_8] +
push eax  +
add edi 18h +
add esi 2Ch +
push esi  +
mov ecx edi +
call sub_10465C9  +
test eax eax +
jz loc_10469EE  +
cmp eax 490h +
jnz loc_1046A13  +
push ebx  +
mov ecx edi +
call sub_10466B9  +
jmp loc_1046A13  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 411h  +
call sub_1042C5F  +
add esp 0Ch +
mov eax 0C007EE03h +
pop ebx  +
pop esi  +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_0] +
mov eax [ebx+0Ch] +
mov ecx [eax] +
push esi  +
push edi  +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
mov eax [ebp+arg_0] +
mov esi [ebp+arg_4] +
xor edi edi +
push edi  +
push offset aName  +
push dword ptr [esi+4]  +
mov [ebp+var_8] eax +
mov eax [ebp+var_4] +
push dword ptr [esi]  +
add eax eax +
mov word ptr [ebp+var_C+2] ax +
mov word ptr [ebp+var_C] ax +
call sub_104B901  +
test al al +
jz loc_1046A7C  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_1046961  +
jmp loc_1046BA2  +
push edi  +
push offset aTopic  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1046AA2  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_1043339  +
jmp loc_1046BA2  +
push edi  +
push offset aLevel_0  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1046AC8  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_1043393  +
jmp loc_1046BA2  +
push edi  +
push offset aKey  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1046AEE  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_1043425  +
jmp loc_1046BA2  +
push edi  +
push offset aNote  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1046B14  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_10434B7  +
jmp loc_1046BA2  +
push edi  +
push offset aThreshold  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1046B37  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_1043511  +
jmp loc_1046BA2  +
push edi  +
push offset aTransaction  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1046B5A  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_10435A9  +
jmp loc_1046BA2  +
push edi  +
push offset aTask_1  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1046B7D  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_1043653  +
jmp loc_1046BA2  +
push edi  +
push offset aRowcount  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1046BA0  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_10436E7  +
jmp loc_1046BA2  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+28h] +
mov ebx [edi+0Ch] +
xor esi esi +
mov [ebp+var_8] eax +
cmp eax esi +
jz loc_1046CD0  +
mov eax [ebp+arg_4] +
cmp eax esi +
jz loc_1046CD0  +
cmp dword ptr [edi+1Ch] 4 +
jnz loc_1046CD0  +
push esi  +
push offset aSection_1  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
call sub_104B901  +
test al al +
jz loc_1046CD0  +
push 208h  +
call ??2@YAPAXI@Z  +
pop ecx  +
cmp eax esi +
jz loc_1046C15  +
mov ecx eax +
call sub_10460C8  +
mov esi eax +
test esi esi +
jnz loc_1046C21  +
push 8  +
pop eax  +
jmp loc_1046CD2  +
push esi  +
call sub_1041B97  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+20h]  +
jmp loc_1046C68  +
inc dword ptr [edi+18h]  +
mov eax [ebx] +
lea ecx [ebp+arg_4] +
push ecx  +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+38h]  +
mov eax [ebp+arg_0] +
mov [ebp+var_C] eax +
mov eax [ebp+arg_4] +
add eax eax +
mov word ptr [ebp+var_10+2] ax +
mov word ptr [ebp+var_10] ax +
push esi  +
lea eax [ebp+var_10] +
push eax  +
push edi  +
call sub_1046A1F  +
test eax eax +
jnz loc_1046CAB  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+24h]  +
test eax eax +
jz loc_1046C2F  +
test eax eax +
jl loc_1046CAB  +
test byte ptr [esi+204h] 1 +
jnz loc_1046CBA  +
mov eax [ebx] +
lea ecx [ebp+var_4] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
test byte ptr [esi+204h] 1 +
jnz loc_1046C9B  +
push dword ptr [ebp+var_4]  +
push 3F8h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
push 1  +
mov ecx esi +
call sub_1046115  +
mov eax 0C007EE11h +
jmp loc_1046CD2  +
push 1  +
mov ecx esi +
mov edi eax +
call sub_1046115  +
mov eax edi +
jmp loc_1046CD2  +
mov eax [ebp+var_8] +
mov ecx [eax+0Ch] +
add eax 8 +
mov [esi] eax +
mov [esi+4] ecx +
mov [ecx] esi +
mov [eax+4] esi +
mov [edi+2Ch] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword ptr [ebp+arg_0] +
mov ecx [eax+0Ch] +
push edi  +
mov edi [eax+28h] +
mov [ebp+var_4] ecx +
test edi edi +
jnz loc_1046CFC  +
xor eax eax +
jmp loc_1046D8C  +
push esi  +
mov esi [ebp+arg_8] +
mov al [esi+74h] +
test al 1 +
jz loc_1046D27  +
mov eax [ecx] +
lea edx [ebp+arg_0] +
push edx  +
push ecx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 420h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_1046D8B  +
push ebx  +
push [ebp+arg_4]  +
or al 1 +
lea ebx [esi+18h] +
mov ecx ebx +
mov [esi+74h] al +
mov byte ptr [esi+28h] 1 +
call sub_1041938  +
lea eax [ebp+arg_8] +
push eax  +
add edi 18h +
add esi 1Ch +
push esi  +
mov ecx edi +
call sub_10465C9  +
test eax eax +
jz loc_1046D65  +
cmp eax 490h +
jnz loc_1046D8A  +
push ebx  +
mov ecx edi +
call sub_10466B9  +
jmp loc_1046D8A  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+54h]  +
push [ebp+arg_4]  +
push dword ptr [ebp+arg_0]  +
push 421h  +
call sub_1042C5F  +
add esp 0Ch +
mov eax 0C007EE03h +
pop ebx  +
pop esi  +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+0Ch] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
mov eax [ebp+arg_0] +
mov esi [ebp+arg_4] +
xor ebx ebx +
push ebx  +
push offset aName  +
push dword ptr [esi+4]  +
mov [ebp+var_8] eax +
mov eax [ebp+var_4] +
push dword ptr [esi]  +
add eax eax +
mov word ptr [ebp+var_C+2] ax +
mov word ptr [ebp+var_C] ax +
call sub_104B901  +
test al al +
jz loc_1046DF3  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1046CDE  +
jmp loc_1046ECD  +
push ebx  +
push offset aTopic  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1046E19  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1043801  +
jmp loc_1046ECD  +
push ebx  +
push offset aObject  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1046E3F  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1043855  +
jmp loc_1046ECD  +
push ebx  +
push offset aLevel_0  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1046E62  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_10438A9  +
jmp loc_1046ECD  +
push ebx  +
push offset aKey  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1046E85  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1043935  +
jmp loc_1046ECD  +
push ebx  +
push offset aNote  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1046EA8  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_10439C1  +
jmp loc_1046ECD  +
push ebx  +
push offset aThreshold  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_104B901  +
test al al +
jz loc_1046ECB  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push edi  +
call sub_1043A15  +
jmp loc_1046ECD  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov edi dword ptr [ebp+arg_0] +
mov eax [edi+28h] +
mov ebx [edi+0Ch] +
xor esi esi +
mov [ebp+var_8] eax +
cmp eax esi +
jz loc_1046FB6  +
mov eax [ebp+arg_4] +
cmp eax esi +
jz loc_1046FB6  +
cmp dword ptr [edi+1Ch] 4 +
jnz loc_1046FB6  +
push esi  +
push offset aSection_1  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
call sub_104B901  +
test al al +
jz loc_1046FB6  +
push 78h  +
call ??2@YAPAXI@Z  +
pop ecx  +
cmp eax esi +
jz loc_1046F3D  +
mov ecx eax +
call sub_1041D44  +
mov esi eax +
test esi esi +
jnz loc_1046F46  +
push 8  +
pop eax  +
jmp loc_1046FB8  +
push esi  +
call sub_1041C0D  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+20h]  +
jmp loc_1046F8D  +
inc dword ptr [edi+18h]  +
mov eax [ebx] +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+arg_4] +
push ecx  +
push ebx  +
call dword ptr [eax+38h]  +
mov eax [ebp+arg_4] +
mov [ebp+var_C] eax +
mov eax [ebp+var_4] +
add eax eax +
mov word ptr [ebp+var_10+2] ax +
mov word ptr [ebp+var_10] ax +
push esi  +
lea eax [ebp+var_10] +
push eax  +
push edi  +
call sub_1046D96  +
test eax eax +
jnz loc_1046FBF  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+24h]  +
test eax eax +
jz loc_1046F54  +
test eax eax +
jl loc_1046FBF  +
mov al [esi+74h] +
test al 1 +
jz loc_1046FCE  +
test al 4 +
jz loc_1046FCE  +
mov eax [ebp+var_8] +
mov ecx [eax+14h] +
add eax 10h +
mov [esi] eax +
mov [esi+4] ecx +
mov [ecx] esi +
mov [eax+4] esi +
mov [edi+30h] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
push 1  +
mov ecx esi +
mov edi eax +
call sub_1043AA7  +
mov eax edi +
jmp loc_1046FB8  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
test byte ptr [esi+74h] 1 +
jnz loc_1046FED  +
push dword ptr [ebp+arg_0]  +
push 3F9h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
test byte ptr [esi+74h] 4 +
jnz loc_1047002  +
push dword ptr [ebp+arg_0]  +
push 402h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
push 1  +
mov ecx esi +
call sub_1043AA7  +
mov eax 0C007EE11h +
jmp loc_1046FB8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
mov edi dword ptr [ebp+arg_0] +
cmp byte ptr [edi+4Ch] 0 +
mov eax [edi+24h] +
mov ecx [edi+0Ch] +
mov [ebp+var_4] eax +
jnz loc_1047034  +
test eax eax +
jz loc_10470A8  +
push esi  +
mov esi [ebp+arg_8] +
mov al [esi+30h] +
test al 1 +
jz loc_104705F  +
mov eax [ecx] +
lea edx [ebp+arg_0] +
push edx  +
push ecx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+arg_0]  +
push 45Eh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE01h +
jmp loc_10470A7  +
push ebx  +
push [ebp+arg_4]  +
or al 1 +
lea ebx [esi+8] +
mov ecx ebx +
mov [esi+30h] al +
mov byte ptr [esi+18h] 0 +
call sub_1041938  +
cmp byte ptr [edi+4Ch] 0 +
jnz loc_10470A4  +
mov edi [ebp+var_4] +
lea eax [ebp+arg_8] +
push eax  +
add edi 40h +
add esi 0Ch +
push esi  +
mov ecx edi +
call sub_10465C9  +
test eax eax +
jz loc_10470A4  +
cmp eax 490h +
jnz loc_10470A6  +
push ebx  +
mov ecx edi +
call sub_10466B9  +
xor eax eax +
pop ebx  +
pop esi  +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+0Ch] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
lea edx [ebp+arg_0] +
push edx  +
push eax  +
call dword ptr [ecx+40h]  +
mov eax [ebp+arg_0] +
mov [ebp+var_8] eax +
mov eax [ebp+var_4] +
add eax eax +
push 0  +
mov word ptr [ebp+var_C+2] ax +
mov word ptr [ebp+var_C] ax +
mov eax [ebp+arg_4] +
push offset aId  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_104B901  +
test al al +
jz loc_1047109  +
push [ebp+arg_8]  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
call sub_1047017  +
jmp loc_104710B  +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
cmp byte ptr [esi+4Ch] 0 +
mov eax [esi+24h] +
mov ecx [esi+1Ch] +
mov ebx [esi+0Ch] +
jnz loc_1047140  +
test eax eax +
jz loc_1047239  +
add eax 8 +
push 3  +
jmp loc_1047145  +
lea eax [esi+44h] +
push 2  +
pop edx  +
mov [ebp+arg_0] eax +
mov eax [ebp+arg_4] +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_1047236  +
cmp ecx edx +
jnz loc_1047236  +
push edi  +
push offset aStringtable_3  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
call sub_104B901  +
test al al +
jz loc_1047236  +
push 34h  +
call ??2@YAPAXI@Z  +
pop ecx  +
cmp eax edi +
jz loc_104718D  +
mov ecx eax +
call sub_104227E  +
mov edi eax +
test edi edi +
jnz loc_1047199  +
push 8  +
pop eax  +
jmp loc_1047238  +
push edi  +
call sub_1041CE5  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+20h]  +
jmp loc_10471E0  +
inc dword ptr [esi+18h]  +
mov eax [ebx] +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+arg_4] +
push ecx  +
push ebx  +
call dword ptr [eax+38h]  +
mov eax [ebp+arg_4] +
mov [ebp+var_C] eax +
mov eax [ebp+var_4] +
add eax eax +
mov word ptr [ebp+var_10+2] ax +
mov word ptr [ebp+var_10] ax +
push edi  +
lea eax [ebp+var_10] +
push eax  +
push esi  +
call sub_10470B2  +
test eax eax +
jnz loc_1047217  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+24h]  +
test eax eax +
jz loc_10471A7  +
test eax eax +
jl loc_1047217  +
test byte ptr [edi+30h] 1 +
jnz loc_1047226  +
mov eax [ebx] +
lea ecx [ebp+var_8] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+var_8]  +
push 460h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
push 1  +
mov ecx edi +
call sub_1045390  +
mov eax 0C007EE11h +
jmp loc_1047238  +
push 1  +
mov ecx edi +
mov esi eax +
call sub_1045390  +
mov eax esi +
jmp loc_1047238  +
mov ecx [ebp+arg_0] +
mov eax [ecx+4] +
mov [edi] ecx +
mov [edi+4] eax +
mov [eax] edi +
mov [ecx+4] edi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
cmp dword ptr [esi+20h] 0 +
mov dword ptr [esi] offset off_10033D4 +
jz loc_1047278  +
call sub_10467D2  +
mov eax [esi+20h] +
test eax eax +
jz loc_1047270  +
push eax  +
push 0  +
push hHeap  +
call ds:HeapFree  +
and dword ptr [esi+24h] 0 +
and dword ptr [esi+20h] 0 +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push 10h  +
mov esi ecx +
call sub_102F4B1  +
mov dword ptr [esi] offset off_101693C +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 4 +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push 100h  +
mov esi ecx +
call sub_102F4B1  +
mov dword ptr [esi] offset off_101693C +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
push 40h  +
mov esi ecx +
call sub_102F4B1  +
mov dword ptr [esi] offset off_101693C +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_101693C +
call sub_1047244  +
test [ebp+arg_0] 1 +
jz loc_1047330  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea ecx [esi+18h] +
call sub_104727F  +
lea ecx [esi+40h] +
call sub_10472AE  +
lea ecx [esi+70h] +
and dword ptr [ecx+0Ch] 0 +
xor eax eax +
mov dword ptr [ecx] 1E3603Bh +
mov byte ptr [ecx+10h] 0 +
lea edi [ecx+4] +
stos   +
stos   +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea ecx [esi+18h] +
call sub_10472E2  +
xor edx edx +
mov [esi+4Ch] edx +
mov [esi+50h] dl +
xor eax eax +
mov ecx 1E3603Bh +
mov [esi+40h] ecx +
lea edi [esi+44h] +
stos   +
stos   +
mov [esi+58h] ecx +
mov [esi+64h] edx +
mov [esi+68h] dl +
xor eax eax +
lea edi [esi+5Ch] +
stos   +
stos   +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+58h] +
call sub_104191C  +
lea ecx [esi+40h] +
call sub_104191C  +
lea ecx [esi+18h] +
mov dword ptr [ecx] offset off_101693C +
pop esi  +
jmp sub_1047244  +
***
mov edi edi +
push esi  +
mov esi ecx +
lea ecx [esi+70h] +
call sub_104191C  +
lea ecx [esi+40h] +
mov dword ptr [ecx] offset off_101693C +
call sub_1047244  +
lea ecx [esi+18h] +
mov dword ptr [ecx] offset off_101693C +
pop esi  +
jmp sub_1047244  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+1Ch] 1 +
push edi  +
mov edi [esi+0Ch] +
jz loc_1047428  +
xor eax eax +
jmp loc_1047534  +
push ebx  +
xor ebx ebx +
cmp [esi+24h] ebx +
jnz loc_104750C  +
push 88h  +
call ??2@YAPAXI@Z  +
pop ecx  +
cmp eax ebx +
jz loc_104744C  +
mov ecx eax +
call sub_104733C  +
mov ebx eax +
test ebx ebx +
jnz loc_1047458  +
push 8  +
pop eax  +
jmp loc_1047533  +
push ebx  +
call sub_1046045  +
mov [esi+24h] ebx +
mov eax [edi] +
push edi  +
call dword ptr [eax+20h]  +
jmp loc_10474A6  +
inc dword ptr [esi+18h]  +
mov eax [edi] +
lea ecx [ebp+var_C] +
push ecx  +
lea ecx [ebp+var_8] +
push ecx  +
push edi  +
call dword ptr [eax+38h]  +
mov eax [ebp+var_8] +
mov [ebp+var_10] eax +
mov eax [ebp+var_C] +
add eax eax +
mov word ptr [ebp+var_14+2] ax +
mov word ptr [ebp+var_14] ax +
push ebx  +
lea eax [ebp+var_14] +
push eax  +
push esi  +
call sub_1042F39  +
test eax eax +
jnz loc_1047533  +
mov eax [edi] +
push edi  +
call dword ptr [eax+24h]  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_1047469  +
test eax eax +
jge loc_10474BD  +
push eax  +
push esi  +
call sub_1042D24  +
mov eax [ebp+arg_0] +
jmp loc_1047533  +
mov al [ebx+84h] +
test al 4 +
jz loc_10474CB  +
test al 1 +
jnz loc_1047511  +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
test byte ptr [ebx+84h] 4 +
jnz loc_10474ED  +
push dword ptr [ebp+var_4]  +
push 3F5h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
test byte ptr [ebx+84h] 1 +
jnz loc_1047505  +
push dword ptr [ebp+var_4]  +
push 3FEh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE11h +
jmp loc_1047533  +
cmp [esi+40h] bl +
jz loc_1047515  +
xor eax eax +
jmp loc_1047533  +
mov eax [edi] +
lea ecx [ebp+var_4] +
push ecx  +
push edi  +
call dword ptr [eax+54h]  +
push dword ptr [ebp+var_4]  +
push 3F3h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
mov eax 0C007EE00h +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10473B3  +
test [ebp+arg_0] 1 +
jz loc_1047559  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
lea edi [ebx+8] +
mov esi [edi] +
jmp loc_104758B  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
mov [ecx] eax +
push edx  +
mov [eax+4] ecx +
call sub_1046568  +
cmp edi esi +
jnz loc_1047577  +
lea edi [ebx+10h] +
mov esi [edi] +
jmp loc_10475AA  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
mov [ecx] eax +
push edx  +
mov [eax+4] ecx +
call sub_1045F43  +
cmp edi esi +
jnz loc_1047596  +
test ebx ebx +
jz loc_10475BB  +
push 1  +
mov ecx ebx +
call sub_104753F  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_10473DC  +
test [ebp+arg_0] 1 +
jz loc_10475E1  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
mov edi dword ptr [ebp+arg_0] +
mov eax [edi+24h] +
mov ebx [edi+0Ch] +
xor esi esi +
mov [ebp+var_8] eax +
cmp eax esi +
jz loc_10476C7  +
mov eax [ebp+arg_4] +
cmp eax esi +
jz loc_10476C7  +
cmp dword ptr [edi+1Ch] 3 +
jnz loc_10476C7  +
push esi  +
push offset aSections  +
push dword ptr [eax+8]  +
push dword ptr [eax+4]  +
call sub_104B901  +
test al al +
jz loc_10476C7  +
push 70h  +
call ??2@YAPAXI@Z  +
pop ecx  +
cmp eax esi +
jz loc_1047651  +
mov ecx eax +
call sub_1047374  +
mov esi eax +
test esi esi +
jnz loc_104765A  +
push 8  +
pop eax  +
jmp loc_10476C9  +
push esi  +
call sub_1046093  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+20h]  +
jmp loc_10476A1  +
inc dword ptr [edi+18h]  +
mov eax [ebx] +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+arg_4] +
push ecx  +
push ebx  +
call dword ptr [eax+38h]  +
mov eax [ebp+arg_4] +
mov [ebp+var_C] eax +
mov eax [ebp+var_4] +
add eax eax +
mov word ptr [ebp+var_10+2] ax +
mov word ptr [ebp+var_10] ax +
push esi  +
lea eax [ebp+var_10] +
push eax  +
push edi  +
call sub_10468B4  +
test eax eax +
jnz loc_10476D0  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+24h]  +
test eax eax +
jz loc_1047668  +
test eax eax +
jl loc_10476D0  +
mov al [esi+6Ch] +
test al 1 +
jz loc_10476DF  +
test al 2 +
jz loc_10476DF  +
mov ecx [ebp+var_8] +
mov eax [ecx+4] +
mov [esi] ecx +
mov [esi+4] eax +
mov [eax] esi +
mov [ecx+4] esi +
mov [edi+28h] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
push 1  +
mov ecx esi +
mov edi eax +
call sub_104753F  +
mov eax edi +
jmp loc_10476C9  +
mov eax [ebx] +
lea ecx [ebp+arg_0] +
push ecx  +
push ebx  +
call dword ptr [eax+54h]  +
test byte ptr [esi+6Ch] 1 +
jnz loc_10476FE  +
push dword ptr [ebp+arg_0]  +
push 3F7h  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
test byte ptr [esi+6Ch] 2 +
jnz loc_1047713  +
push dword ptr [ebp+arg_0]  +
push 3FFh  +
call sub_1042C5F  +
pop ecx  +
pop ecx  +
push 1  +
mov ecx esi +
call sub_104753F  +
mov eax 0C007EE11h +
jmp loc_10476C9  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
mov ecx [eax+8] +
push ebx  +
push esi  +
push edi  +
mov edi [eax+4] +
xor ebx ebx +
push ebx  +
push offset aReport_0  +
push ecx  +
push edi  +
mov [ebp+var_4] ecx +
call sub_104B901  +
mov esi [ebp+arg_0] +
test al al +
jz loc_1047769  +
cmp [ebp+arg_8] ebx +
jnz loc_1047769  +
cmp [esi+4Ch] bl +
jnz loc_1047769  +
push esi  +
call sub_104740B  +
jmp loc_10479AA  +
push ebx  +
push offset aImport  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1047794  +
cmp [ebp+arg_8] ebx +
jz loc_1047794  +
cmp [esi+4Ch] bl +
jnz loc_1047794  +
push [ebp+arg_8]  +
push esi  +
call sub_104315D  +
jmp loc_10479AA  +
push ebx  +
push offset aSections  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_10477BF  +
cmp [ebp+arg_8] ebx +
jz loc_10477BF  +
cmp [esi+4Ch] bl +
jnz loc_10477BF  +
push [ebp+arg_8]  +
push esi  +
call sub_1041CFE  +
jmp loc_10479AA  +
push ebx  +
push offset aSection_1  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_10477EA  +
cmp [ebp+arg_8] ebx +
jz loc_10477EA  +
cmp [esi+4Ch] bl +
jnz loc_10477EA  +
push [ebp+arg_8]  +
push esi  +
call sub_10475ED  +
jmp loc_10479AA  +
push ebx  +
push offset aEventtable  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1047815  +
cmp [ebp+arg_8] ebx +
jz loc_1047815  +
cmp [esi+4Ch] bl +
jnz loc_1047815  +
push [ebp+arg_8]  +
push esi  +
call sub_1046BAE  +
jmp loc_10479AA  +
push ebx  +
push offset aCountertable  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1047840  +
cmp [ebp+arg_8] ebx +
jz loc_1047840  +
cmp [esi+4Ch] bl +
jnz loc_1047840  +
push [ebp+arg_8]  +
push esi  +
call sub_1046ED9  +
jmp loc_10479AA  +
push ebx  +
push offset aExclude  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_104786B  +
cmp [ebp+arg_8] ebx +
jz loc_104786B  +
cmp [esi+4Ch] bl +
jnz loc_104786B  +
push [ebp+arg_8]  +
push esi  +
call sub_104613B  +
jmp loc_10479AA  +
push ebx  +
push offset aInclude  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1047896  +
cmp [ebp+arg_8] ebx +
jz loc_1047896  +
cmp [esi+4Ch] bl +
jnz loc_1047896  +
push [ebp+arg_8]  +
push esi  +
call sub_1046242  +
jmp loc_10479AA  +
push ebx  +
push offset aColumn_0  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_10478C1  +
cmp [ebp+arg_8] ebx +
jz loc_10478C1  +
cmp [esi+4Ch] bl +
jnz loc_10478C1  +
push [ebp+arg_8]  +
push esi  +
call sub_1046375  +
jmp loc_10479AA  +
push ebx  +
push offset aEventfield  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_10478EC  +
cmp [ebp+arg_8] ebx +
jz loc_10478EC  +
cmp [esi+4Ch] bl +
jnz loc_10478EC  +
push [ebp+arg_8]  +
push esi  +
call sub_1044B71  +
jmp loc_10479AA  +
push ebx  +
push offset aEqualjoin  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1047917  +
cmp [ebp+arg_8] ebx +
jz loc_1047917  +
cmp [esi+4Ch] bl +
jnz loc_1047917  +
push [ebp+arg_8]  +
push esi  +
call sub_1044CB2  +
jmp loc_10479AA  +
push ebx  +
push offset aEventjoinfield  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_104793F  +
cmp [ebp+arg_8] ebx +
jz loc_104793F  +
cmp [esi+4Ch] bl +
jnz loc_104793F  +
push [ebp+arg_8]  +
push esi  +
call sub_1045085  +
jmp loc_10479AA  +
push ebx  +
push offset aSubtable  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1047967  +
cmp [ebp+arg_8] ebx +
jz loc_1047967  +
cmp [esi+4Ch] bl +
jnz loc_1047967  +
push [ebp+arg_8]  +
push esi  +
call sub_10452D2  +
jmp loc_10479AA  +
push ebx  +
push offset aStringtable_3  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_1047985  +
push [ebp+arg_8]  +
push esi  +
call sub_1042230  +
jmp loc_10479AA  +
push ebx  +
push offset aString_1  +
push [ebp+var_4]  +
push edi  +
call sub_104B901  +
test al al +
jz loc_10479A8  +
cmp [ebp+arg_8] ebx +
jz loc_10479A8  +
push [ebp+arg_8]  +
push esi  +
call sub_1047115  +
jmp loc_10479AA  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
xor ecx ecx +
cmp [ebp+arg_4] 1 +
push esi  +
jnz loc_10479F5  +
mov ebx [ebp+arg_0] +
mov eax [ebx+20h] +
inc dword ptr [ebx+1Ch]  +
test eax eax +
jz loc_10479D4  +
mov ecx eax +
mov esi [ebp+arg_C] +
push ecx  +
push esi  +
push ebx  +
call sub_1047728  +
test eax eax +
jnz loc_1047A2B  +
cmp [ebp+arg_8] eax +
jz loc_1047A31  +
push esi  +
push ebx  +
call sub_1045D0C  +
test eax eax +
jz loc_1047A26  +
jmp loc_1047A2B  +
cmp [ebp+arg_4] 0Fh +
jnz loc_1047A29  +
push [ebp+arg_C]  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_1045D0C  +
test eax eax +
jnz loc_1047A2B  +
mov eax [ebx+20h] +
test eax eax +
jz loc_1047A26  +
mov ecx [eax] +
push eax  +
push 0  +
mov [ebx+20h] ecx +
push hHeap  +
call ds:HeapFree  +
dec dword ptr [ebx+1Ch]  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
push 0Ch  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jnz loc_1047A4A  +
push 8  +
pop eax  +
jmp loc_1047A2B  +
push edi  +
mov edi eax +
movs   +
movs   +
movs   +
mov ecx [ebx+20h] +
mov [eax] ecx +
mov [ebx+20h] eax +
pop edi  +
jmp loc_1047A29  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [eax+24h] +
test ebx ebx +
jz loc_1047AE0  +
push esi  +
mov esi [ebx] +
push edi  +
jmp loc_1047A8A  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
mov [ecx] eax +
push edx  +
mov [eax+4] ecx +
call sub_1047565  +
cmp ebx esi +
jnz loc_1047A76  +
lea edi [ebx+8] +
mov esi [edi] +
jmp loc_1047AA9  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
mov [ecx] eax +
push edx  +
mov [eax+4] ecx +
call sub_1045FA7  +
cmp edi esi +
jnz loc_1047A95  +
lea edi [ebx+10h] +
mov esi [edi] +
jmp loc_1047AD1  +
mov edx esi +
mov eax [edx] +
mov ecx [edx+4] +
mov esi [esi] +
push edx  +
mov [ecx] eax +
push 0  +
mov [eax+4] ecx +
push hHeap  +
call ds:HeapFree  +
cmp edi esi +
jnz loc_1047AB4  +
push 1  +
mov ecx ebx +
call sub_10475C7  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi [edi+0Ch] +
jmp loc_1047B74  +
mov eax [ebp+var_8] +
cmp eax 1 +
jz loc_1047B0F  +
cmp eax 0Fh +
jz loc_1047B0F  +
cmp eax 3 +
jnz loc_1047B74  +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [ebp+arg_0] +
push ecx  +
push esi  +
cmp eax 3 +
jnz loc_1047B41  +
mov eax [esi] +
call dword ptr [eax+40h]  +
mov eax [ebp+arg_0] +
mov [ebp+var_C] eax +
mov eax [ebp+var_4] +
add eax eax +
mov word ptr [ebp+var_10+2] ax +
mov word ptr [ebp+var_10] ax +
lea eax [ebp+var_10] +
push eax  +
push edi  +
call sub_10426EF  +
jmp loc_1047B70  +
inc dword ptr [edi+14h]  +
mov eax [esi] +
call dword ptr [eax+38h]  +
mov eax [ebp+arg_0] +
mov [ebp+var_14] eax +
mov eax [ebp+var_4] +
add eax eax +
mov [ebp+var_16] ax +
mov [ebp+var_18] ax +
lea eax [ebp+var_1C] +
push eax  +
mov eax [esi] +
push esi  +
call dword ptr [eax+50h]  +
push eax  +
push [ebp+var_8]  +
push edi  +
call sub_10479B6  +
test eax eax +
jnz loc_1047B9A  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
push esi  +
call dword ptr [eax+18h]  +
mov ebx eax +
test ebx ebx +
jz loc_1047AFD  +
cmp ebx 1 +
jnz loc_1047B91  +
xor eax eax +
jmp loc_1047B9A  +
push ebx  +
push edi  +
call sub_1042D24  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_1047BF0  +
push esi  +
call sub_1047A60  +
push esi  +
call sub_104298F  +
push esi  +
call sub_1045FC3  +
cmp dword ptr [esi+3Ch] 0 +
jz loc_1047BDA  +
mov eax [esi+3Ch] +
and dword ptr [eax+24h] 0 +
push dword ptr [esi+3Ch]  +
call sub_1047BA6  +
push esi  +
call sub_1042952  +
pop ecx  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpSrc] 0 +
jnz loc_1047C09  +
xor eax eax +
jmp loc_1047C44  +
push esi  +
push 50h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_1047C3D  +
push esi  +
push [ebp+lpSrc]  +
call sub_1042888  +
test eax eax +
jnz loc_1047C37  +
push esi  +
call sub_1047AEA  +
test eax eax +
jz loc_1047C41  +
push esi  +
call sub_1047BA6  +
xor eax eax +
jmp loc_1047C43  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test [ebp+arg_8] 100h +
jz loc_1047C68  +
cmp [ebp+arg_0] eax +
jnz loc_1047C6C  +
cmp ecx eax +
jnz loc_1047C71  +
jmp loc_1047C6C  +
cmp ecx eax +
jz loc_1047C71  +
cmp ecx [ebp+arg_4] +
jbe loc_1047C76  +
mov eax 80070057h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp ecx 2 +
jbe loc_1047CA2  +
add ecx 0FFFFFFFEh +
and eax 0FFh +
push ecx  +
push eax  +
mov eax [ebp+arg_0] +
add eax 2 +
push eax  +
call memset  +
add esp 0Ch +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
shr esi 1 +
jz loc_1047CD7  +
test [ebp+arg_8] 1000h +
jz loc_1047CD7  +
mov edx [ebp+arg_4] +
lea eax [edi+ecx*2] +
mov [edx] eax +
mov edx esi +
sub edx ecx +
xor ecx ecx +
mov [ebx] edx +
mov [eax] cx +
test [ebp+arg_8] 400h +
jz loc_1047D1F  +
mov eax [ebp+arg_8] +
push [ebp+arg_0]  +
and eax 0FFh +
push eax  +
push edi  +
mov [ebp+var_4] eax +
call memset  +
add esp 0Ch +
cmp [ebp+var_4] 0 +
jnz loc_1047D07  +
mov eax [ebp+arg_4] +
mov [eax] edi +
mov [ebx] esi +
jmp loc_1047D1F  +
test esi esi +
jbe loc_1047D38  +
mov ecx [ebp+arg_4] +
lea eax [edi+esi*2-2] +
mov [ecx] eax +
xor ecx ecx +
mov dword ptr [ebx] 1 +
mov [eax] cx +
test esi esi +
jbe loc_1047D38  +
test [ebp+arg_8] 800h +
jz loc_1047D38  +
mov eax [ebp+arg_4] +
mov [eax] edi +
xor eax eax +
mov [ebx] esi +
mov [edi] ax +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov dword ptr [ecx] offset off_101699C +
mov dword ptr [ecx+4] offset off_1016998 +
mov ecx [ecx+3ACh] +
test ecx ecx +
jz locret_1047D6A  +
push ecx  +
push 0  +
push hHeap  +
call ds:HeapFree  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
mov esi [edi] +
xor eax eax +
mov ebx ecx +
xor ecx ecx +
mov [ebp-4] eax +
mov [ebp-10h] esi +
mov [ebp-0Ch] eax +
cmp cx [esi+54h] +
jnb loc_1047EA3  +
mov ecx [esi+58h] +
add ecx eax +
movzx edx word ptr [ecx+2] +
xor edi edi +
inc edi  +
cmp di dx +
jnz loc_1047DB5  +
mov ecx [ecx+8] +
mov [ebp-0Ch] ecx +
jmp loc_1047E8D  +
push 2  +
pop edi  +
cmp di dx +
jnz loc_1047DCB  +
mov ecx [ecx+8] +
mov [ebx+3B0h] ecx +
jmp loc_1047E8D  +
push 3  +
pop edi  +
cmp di dx +
jnz loc_1047DE1  +
mov ecx [ecx+8] +
mov [ebx+3A4h] ecx +
jmp loc_1047E8D  +
push 4  +
pop edi  +
cmp di dx +
jnz loc_1047DF7  +
mov ecx [ecx+8] +
mov [ebx+3C8h] ecx +
jmp loc_1047E8D  +
push 5  +
pop edi  +
cmp di dx +
jnz loc_1047E42  +
cmp word ptr [ecx+6] 8 +
jb loc_1047E8D  +
mov ecx [esi+58h] +
mov ecx [eax+ecx+8] +
mov edx [ecx] +
mov [ebx+3C0h] edx +
mov ecx [ecx+4] +
mov [ebx+3C4h] ecx +
mov ecx [esi+58h] +
mov ecx [eax+ecx+8] +
add ecx 8 +
mov [ebx+3B4h] ecx +
mov ecx [esi+58h] +
movzx ecx word ptr [eax+ecx+6] +
sub ecx 8 +
shr ecx 2 +
jmp loc_1047E87  +
push 6  +
pop edi  +
cmp di dx +
jnz loc_1047E8D  +
cmp word ptr [ecx+6] 8 +
jb loc_1047E8D  +
mov ecx [esi+58h] +
mov ecx [eax+ecx+8] +
mov edx [ecx] +
mov [ebx+3C0h] edx +
mov ecx [ecx+4] +
mov [ebx+3C4h] ecx +
mov ecx [esi+58h] +
mov ecx [eax+ecx+8] +
add ecx 8 +
mov [ebx+3B8h] ecx +
mov ecx [esi+58h] +
movzx ecx word ptr [eax+ecx+6] +
sub ecx 8 +
shr ecx 3 +
mov [ebx+3BCh] ecx +
inc dword ptr [ebp-4]  +
movzx ecx word ptr [esi+54h] +
add eax 10h +
cmp [ebp-4] ecx +
jb loc_1047D99  +
mov edi [ebp+8] +
mov eax [edi+4] +
test eax eax +
jz loc_1047EC4  +
cmp dword ptr [eax+30h] 1 +
jz loc_1047EC4  +
cmp dword ptr [eax+34h] 0 +
jnz loc_1047EBA  +
xor eax eax +
jmp loc_1047EC1  +
mov ecx eax +
mov eax [ecx+34h] +
add eax ecx +
mov [ebx+8] eax +
movzx eax word ptr [esi+4] +
test al 8 +
jnz loc_1047EFB  +
test al 4 +
jnz loc_1047EDC  +
test eax 100h +
jz loc_1047EDC  +
mov eax [edi+4] +
jmp loc_1047EDF  +
lea eax [esi+18h] +
test eax eax +
jz loc_1047EFB  +
push eax  +
lea ecx [ebx+0Ch] +
push 80h  +
push ecx  +
call sub_1042D55  +
lea eax [ebx+0Ch] +
mov [ebx+10Ch] eax +
mov eax dword_10566D8 +
test dword ptr [eax+3B0h] 1000h +
jz loc_1047F1B  +
lea eax [esi+10h] +
push eax  +
lea eax [ebp-8] +
push eax  +
call sub_101D67A  +
jmp loc_1047F9A  +
mov eax [esi+10h] +
mov [ebp-8] eax +
mov eax [esi+14h] +
mov [ebp-4] eax +
lea eax [ebp-20h] +
push eax  +
lea eax [ebp-8] +
push eax  +
call ds:FileTimeToSystemTime  +
test eax eax +
jz loc_1047F9A  +
mov ecx dword_10566D8 +
test dword ptr [ecx+3B0h] 12000000h +
jnz loc_1047F5D  +
lea eax [ebp-30h] +
push eax  +
lea eax [ebp-20h] +
push eax  +
push 0  +
call ds:SystemTimeToTzSpecificLocalTime  +
jmp loc_1047F6D  +
lea esi [ebp-20h] +
lea edi [ebp-30h] +
movs   +
movs   +
movs   +
movs   +
mov esi [ebp-10h] +
mov edi [ebp+8] +
test eax eax +
jz loc_1047F9A  +
cmp word ptr [ebp-1Eh] 0Ch +
ja loc_1047F9A  +
push 1  +
push 40h  +
lea eax [ebx+110h] +
push eax  +
lea eax [ebp-8] +
push eax  +
lea eax [ebp-30h] +
push eax  +
call sub_101DDBC  +
mov dword ptr [ebx+190h] 1 +
mov eax [edi+4] +
test eax eax +
jz loc_1047FBE  +
cmp dword ptr [eax+5Ch] 0 +
jbe loc_1047FBE  +
mov ecx [eax+5Ch] +
add eax ecx +
lea ecx [ebx+4] +
push ecx  +
push eax  +
mov ecx edi +
mov [ebx+194h] eax +
call sub_104A532  +
lea eax [esi+40h] +
push eax  +
lea ecx [ebx+19Ch] +
push 80h  +
push ecx  +
call sub_1042D55  +
lea eax [ebx+19Ch] +
mov [ebx+198h] eax +
mov eax [edi+4] +
xor ecx ecx +
cmp eax ecx +
jz loc_104800D  +
cmp [eax+60h] ecx +
jbe loc_104800D  +
mov ecx [eax+60h] +
add eax ecx +
lea ecx [ebx+4] +
push ecx  +
push eax  +
mov ecx edi +
mov [ebx+29Ch] eax +
call sub_104A532  +
and dword ptr [ebx+2A0h] 0 +
jmp loc_104803A  +
cmp [ebp-0Ch] ecx +
jz loc_1048034  +
push dword ptr [ebp-0Ch]  +
lea eax [ebx+2A4h] +
push 80h  +
push eax  +
call sub_1042D55  +
lea eax [ebx+2A4h] +
mov [ebx+2A0h] eax +
jmp loc_104803A  +
mov [ebx+2A0h] ecx +
mov eax [edi+4] +
test eax eax +
jz loc_1048075  +
cmp dword ptr [eax+3Ch] 0 +
jz loc_1048075  +
mov ecx [eax+3Ch] +
add ecx eax +
jz loc_1048075  +
lea eax [ebx+3A8h] +
add ebx 3ACh +
push ebx  +
lea ecx [ebp-10h] +
push ecx  +
push eax  +
push esi  +
mov ecx edi +
mov [ebp+8] eax +
call sub_1049DDD  +
test eax eax +
jz loc_1048075  +
mov eax [ebp+8] +
and dword ptr [eax] 0 +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi ecx +
mov eax [edi+190h] +
test eax eax +
jz loc_1048101  +
mov ecx eax +
mov eax [esi] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_10480C3  +
test dx dx +
jz loc_10480BF  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_10480C3  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_104809D  +
xor eax eax +
jmp loc_10480C8  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1048101  +
cmp word ptr [ebp+14h] 10h +
jz loc_10480DB  +
push 0Dh  +
pop eax  +
jmp loc_1048169  +
mov eax [ebp+8] +
movzx ecx word ptr [ebp+10h] +
mov eax [eax] +
add ecx [eax+5Ch] +
lea esi [edi+198h] +
push ecx  +
push 80h  +
push esi  +
call sub_1042D55  +
mov [edi+194h] esi +
jmp loc_1048167  +
mov ecx [edi+298h] +
test ecx ecx +
jz loc_1048167  +
mov eax [esi] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_1048133  +
test dx dx +
jz loc_104812F  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_1048133  +
add eax 4 +
add ecx 4 +
test dx dx +
jnz loc_104810D  +
xor eax eax +
jmp loc_1048138  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1048167  +
cmp word ptr [ebp+14h] 10h +
jnz loc_10480D3  +
mov eax [ebp+8] +
movzx ecx word ptr [ebp+10h] +
mov eax [eax] +
add ecx [eax+5Ch] +
lea esi [edi+2A0h] +
push ecx  +
push 80h  +
push esi  +
call sub_1042D55  +
mov [edi+29Ch] esi +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+NumberOfBytesWritten] +
push esi  +
mov esi [eax] +
push edi  +
push ebx  +
push offset aSystem_2  +
mov edi ecx +
call sub_1023E04  +
push ebx  +
push offset aProvider_1  +
call sub_1023E04  +
cmp dword ptr [edi+8] 0 +
jz loc_10481C5  +
push ebx  +
push offset aName_0  +
call sub_1023E04  +
push dword ptr [edi+8]  +
push 0  +
push 1  +
push ebx  +
call sub_101D200  +
push ebx  +
push offset asc_1001838  +
call sub_1023E04  +
mov eax [edi+10Ch] +
test eax eax +
jz loc_10481DE  +
push eax  +
push offset aGuidWs  +
push ebx  +
call sub_10243C0  +
add esp 0Ch +
push ebx  +
push offset asc_1016C54  +
call sub_1023E04  +
movzx eax word ptr [esi+28h] +
push eax  +
push offset aEventidUEventi  +
push ebx  +
call sub_10243C0  +
movzx eax byte ptr [esi+2Ah] +
push eax  +
push offset aVersionUVersio  +
push ebx  +
call sub_10243C0  +
movzx eax byte ptr [esi+2Ch] +
push eax  +
push offset aLevelULevel  +
push ebx  +
call sub_10243C0  +
movzx eax word ptr [esi+2Eh] +
push eax  +
push offset aTaskUTask  +
push ebx  +
call sub_10243C0  +
movzx eax byte ptr [esi+2Dh] +
push eax  +
push offset aOpcodeUOpcode  +
push ebx  +
call sub_10243C0  +
push dword ptr [esi+34h]  +
push dword ptr [esi+30h]  +
push offset aKeywords0xI64x  +
push ebx  +
call sub_10243C0  +
mov eax dword_10566D8 +
add esp 4Ch +
test dword ptr [eax+3B0h] 1000h +
jz loc_1048274  +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
push offset aTimecreatedRaw  +
push ebx  +
call sub_10243C0  +
add esp 10h +
jmp loc_10482A4  +
cmp dword ptr [edi+190h] 0 +
jz loc_10482A4  +
push ebx  +
push offset aTimecreatedSys  +
call sub_1023E04  +
lea eax [edi+110h] +
push eax  +
push 0  +
push 1  +
push ebx  +
call sub_101D200  +
push ebx  +
push offset asc_1016B6C  +
call sub_1023E04  +
push offset aCorrelation  +
push ebx  +
call sub_10243C0  +
push dword ptr [edi+198h]  +
push offset aActivityidWs  +
push ebx  +
call sub_10243C0  +
mov eax [edi+2A0h] +
add esp 14h +
test eax eax +
jz loc_10482DC  +
push eax  +
push offset aRelatedactivit  +
push ebx  +
call sub_10243C0  +
add esp 0Ch +
push ebx  +
push offset asc_1016C54  +
call sub_1023E04  +
movzx eax byte ptr [esi+50h] +
push eax  +
push dword ptr [esi+8]  +
push dword ptr [esi+0Ch]  +
push offset aExecutionProce  +
push ebx  +
call sub_10243C0  +
mov eax [edi+3A4h] +
add esp 14h +
test eax eax +
jz loc_104831A  +
push dword ptr [eax]  +
push offset aSessionidLu  +
push ebx  +
call sub_10243C0  +
add esp 0Ch +
cmp dword_1057928 0 +
jnz loc_104833D  +
mov eax dword_1079A80 +
mov ecx [esi+3Ch] +
imul ecx eax +
push ecx  +
mov ecx [esi+38h] +
imul ecx eax +
push ecx  +
push offset aKerneltimeLuUs  +
jmp loc_1048348  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+38h]  +
push offset aKerneltimeI64u  +
push ebx  +
call sub_10243C0  +
add esp 10h +
lea esi [edi+3A8h] +
cmp dword ptr [esi] 0 +
push ebx  +
jz loc_104837B  +
push offset aChannel_2  +
call sub_1023E04  +
push dword ptr [esi]  +
push 0  +
push 1  +
push ebx  +
call sub_101D200  +
push ebx  +
push offset aChannel_1  +
jmp loc_1048380  +
push offset aChannel_0  +
call sub_1023E04  +
cmp lpMem 0 +
jz loc_10483B6  +
push ebx  +
push offset aComputer_1  +
call sub_1023E04  +
push lpMem  +
push 0  +
push 1  +
push ebx  +
call sub_101D200  +
push ebx  +
push offset aComputer_0  +
call sub_1023E04  +
jmp loc_10483C3  +
push offset aComputer  +
push ebx  +
call sub_10243C0  +
pop ecx  +
pop ecx  +
lea esi [edi+3B0h] +
cmp dword ptr [esi] 0 +
jz loc_10483EE  +
push ebx  +
push offset aSecurityUserid  +
call sub_1023E04  +
push dword ptr [esi]  +
push 1  +
push ebx  +
call sub_101D4FC  +
push ebx  +
push offset asc_1016B6C  +
call sub_1023E04  +
cmp dword ptr [edi+3B4h] 0 +
jnz loc_1048404  +
cmp dword ptr [edi+3B8h] 0 +
jz loc_1048495  +
push ebx  +
push offset aStack  +
call sub_1023E04  +
push dword ptr [edi+3C4h]  +
push dword ptr [edi+3C0h]  +
push offset aMatchid0x016i6  +
push ebx  +
call sub_10243C0  +
xor esi esi +
add esp 10h +
cmp [edi+3BCh] esi +
jbe loc_104848A  +
push ebx  +
push offset dword_10169E4  +
call sub_1023E04  +
mov eax [edi+3B4h] +
test eax eax +
jz loc_104845B  +
push dword ptr [eax+esi*4]  +
push offset dword_10169DC  +
push ebx  +
call sub_10243C0  +
add esp 0Ch +
jmp loc_1048476  +
mov eax [edi+3B8h] +
push dword ptr [eax+esi*8+4]  +
push dword ptr [eax+esi*8]  +
push offset dword_10169D0  +
push ebx  +
call sub_10243C0  +
add esp 10h +
push ebx  +
push offset dword_10169C0  +
call sub_1023E04  +
inc esi  +
cmp esi [edi+3BCh] +
jb loc_1048433  +
push ebx  +
push offset dword_10169B0  +
call sub_1023E04  +
push ebx  +
push offset dword_10169A0  +
call sub_1023E04  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_4] +
test edi edi +
jbe loc_10484E2  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
test eax eax +
jz loc_10484DB  +
cmp eax offset dword_1008298 +
jz loc_10484DB  +
push eax  +
push 0  +
push hHeap  +
call ds:HeapFree  +
add esi 10h +
dec edi  +
jnz loc_10484BF  +
pop esi  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push ebx  +
push esi  +
mov esi [ebp+lpBuffer] +
push edi  +
push esi  +
push offset aEventdata  +
call sub_1023CCF  +
push [ebp+arg_4]  +
lea ecx [ebp+var_34] +
call sub_1049F5B  +
and [ebp+var_4] 0 +
lea ecx [ebp+var_34] +
call sub_104A076  +
mov ebx offset aDataName_1 +
jmp loc_1048699  +
mov eax [edi+20h] +
test al 4 +
jz loc_104857D  +
push esi  +
test al 8 +
jz loc_104855B  +
push offset aComplexdataNam  +
call sub_1023E04  +
push dword ptr [edi]  +
push 0  +
push 1  +
push esi  +
call sub_101D200  +
push esi  +
push offset asc_1016D48  +
call sub_1023E04  +
push esi  +
push offset aComplexdata  +
jmp loc_1048573  +
push ebx  +
call sub_1023E04  +
push dword ptr [edi]  +
push 0  +
push 1  +
push esi  +
call sub_101D200  +
push esi  +
push offset aData_4  +
call sub_1023E04  +
jmp loc_1048684  +
test al 18h +
jnz loc_1048691  +
test al 1 +
jz loc_10485BA  +
push esi  +
push offset aComplexdataNam  +
call sub_1023E04  +
lea ecx [ebp+var_34] +
call sub_104A04C  +
push dword ptr [eax]  +
push 0  +
push 1  +
push esi  +
call sub_101D200  +
push esi  +
push offset asc_1016D48  +
call sub_1023E04  +
mov [ebp+var_4] 1 +
cmp [ebp+var_4] 0 +
jz loc_10485CB  +
push esi  +
push offset asc_1001850  +
call sub_1023E04  +
xor eax eax +
cmp [ebp+arg_8] eax +
jz loc_10485DC  +
test byte ptr [edi+20h] 80h +
jnz loc_10486A8  +
cmp word ptr [edi+1Ch] 1Ch +
jz loc_1048601  +
push esi  +
push ebx  +
call sub_1023E04  +
push dword ptr [edi]  +
push 0  +
push 1  +
push esi  +
call sub_101D200  +
push esi  +
push offset asc_1001828  +
call sub_1023E04  +
mov eax [edi+18h] +
cmp word ptr [eax+8] 8 +
jnz loc_1048646  +
movzx eax word ptr [edi+1Ch] +
cmp ax 12h +
jz loc_1048646  +
cmp ax 1Bh +
jz loc_1048646  +
cmp ax 17h +
jz loc_1048646  +
cmp ax 1Eh +
jz loc_1048646  +
cmp ax 1Fh +
jz loc_1048646  +
cmp ax 1Dh +
jz loc_1048646  +
push dword ptr [edi+4]  +
push offset a8ws  +
push esi  +
call sub_10243C0  +
add esp 0Ch +
jmp loc_104865D  +
cmp word ptr [edi+1Ch] 1Ch +
push dword ptr [edi+4]  +
setz al  +
movzx eax al +
push eax  +
push 1  +
push esi  +
call sub_101D200  +
cmp word ptr [edi+1Ch] 1Ch +
jz loc_104866F  +
push esi  +
push offset aData_2  +
call sub_1023E04  +
test byte ptr [edi+20h] 2 +
jz loc_1048684  +
push esi  +
push offset aComplexdata  +
call sub_1023E04  +
and [ebp+var_4] 0 +
test dword ptr [edi+20h] 200h +
jnz loc_10487EA  +
lea ecx [ebp+var_34] +
call sub_104A076  +
mov edi eax +
test edi edi +
jnz loc_1048526  +
jmp loc_10487EA  +
mov ecx [edi] +
mov [ebp+lpBuffer] eax +
mov [ebp+var_8] eax +
lea eax [ebp+var_34] +
mov [ebp+var_C] ecx +
push eax  +
lea ecx [ebp+var_20] +
call sub_1049F7C  +
lea ecx [ebp+var_20] +
call sub_104A04C  +
test byte ptr [eax+20h] 8 +
jz loc_10486FA  +
lea ecx [ebp+var_20] +
call sub_104A207  +
cmp eax 3 +
jnz loc_10486E3  +
mov [ebp+lpBuffer] 1 +
jmp loc_1048716  +
cmp eax 2 +
jnz loc_1048716  +
cmp word ptr [edi+24h] 0 +
jbe loc_1048716  +
xor eax eax +
inc eax  +
mov [ebp+lpBuffer] eax +
mov [ebp+var_8] eax +
jmp loc_1048716  +
cmp word ptr [eax+24h] 0 +
jbe loc_1048716  +
cmp word ptr [edi+24h] 0 +
mov [ebp+lpBuffer] 1 +
jbe loc_1048716  +
mov [ebp+var_8] 1 +
push esi  +
push ebx  +
call sub_1023E04  +
push [ebp+var_C]  +
push 0  +
push 1  +
push esi  +
call sub_101D200  +
push esi  +
push offset aType_0  +
call sub_1023E04  +
mov edi offset aWinErrorlessda +
push edi  +
push 0  +
push 1  +
push esi  +
call sub_101D200  +
push esi  +
push offset asc_1001828  +
call sub_1023E04  +
mov eax [ebp+arg_4] +
mov eax [eax+0A8h] +
test eax eax +
jz loc_104876C  +
push eax  +
push offset a0xWs  +
push esi  +
call sub_10243C0  +
add esp 0Ch +
push esi  +
push offset aData_2  +
call sub_1023E04  +
cmp [ebp+lpBuffer] 0 +
jz loc_10487EA  +
cmp [ebp+var_8] 0 +
lea ecx [ebp+var_20] +
jz loc_10487E1  +
call sub_104A076  +
jmp loc_10487E6  +
cmp [ebp+var_4] 0 +
jz loc_104879E  +
push esi  +
push offset asc_1001850  +
call sub_1023E04  +
push esi  +
push ebx  +
call sub_1023E04  +
push [ebp+var_C]  +
push 0  +
push 1  +
push esi  +
call sub_101D200  +
push esi  +
push offset aType_0  +
call sub_1023E04  +
push edi  +
push 0  +
push 1  +
push esi  +
call sub_101D200  +
push esi  +
push offset asc_1001828  +
call sub_1023E04  +
push esi  +
push offset aData_2  +
call sub_1023E04  +
lea ecx [ebp+var_20] +
call sub_104A18D  +
test eax eax +
jnz loc_104878D  +
cmp [ebp+arg_8] 0 +
jz loc_1048856  +
mov edi [ebp+arg_4] +
cmp dword ptr [edi+0ACh] 0 +
jz loc_1048856  +
push esi  +
push ebx  +
call sub_1023E04  +
push offset aWinExtrapayloa  +
push 0  +
push 1  +
push esi  +
call sub_101D200  +
push esi  +
push offset aType_0  +
call sub_1023E04  +
push offset aWinErrormoreda  +
push 0  +
push 1  +
push esi  +
call sub_101D200  +
push esi  +
push offset asc_1001828  +
call sub_1023E04  +
push dword ptr [edi+0ACh]  +
push offset a0xWs  +
push esi  +
call sub_10243C0  +
add esp 0Ch +
push esi  +
push offset aData_2  +
call sub_1023E04  +
push esi  +
push offset aEventdata_0  +
call sub_1023CCF  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0D0h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [eax+4] +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_B4] edi +
mov [ebp+var_BC] eax +
cmp esi ebx +
jz loc_1048CE3  +
push 55h  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
call ds:GetUserDefaultLocaleName  +
test eax eax +
jz loc_1048CE3  +
push edi  +
push offset aRenderinginfo  +
call sub_1023E04  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push offset aCultureWs  +
push edi  +
call sub_10243C0  +
add esp 0Ch +
push edi  +
push offset asc_1016E98  +
call sub_1023E04  +
mov eax [esi+38h] +
cmp eax ebx +
jz loc_1048922  +
add eax esi +
cmp eax ebx +
jz loc_1048922  +
push edi  +
push offset aLevel_3  +
call sub_1023E04  +
mov eax [esi+38h] +
cmp eax ebx +
jnz loc_104890B  +
xor eax eax +
jmp loc_104890D  +
add eax esi +
push eax  +
push ebx  +
push 1  +
push edi  +
call sub_101D200  +
push edi  +
push offset aLevel_2  +
call sub_1023E04  +
mov eax [esi+48h] +
cmp eax ebx +
jz loc_104895C  +
add eax esi +
cmp eax ebx +
jz loc_104895C  +
push edi  +
push offset aOpcode_2  +
call sub_1023E04  +
mov eax [esi+48h] +
cmp eax ebx +
jnz loc_1048945  +
xor eax eax +
jmp loc_1048947  +
add eax esi +
push eax  +
push ebx  +
push 1  +
push edi  +
call sub_101D200  +
push edi  +
push offset aOpcode_1  +
call sub_1023E04  +
mov eax [esi+40h] +
cmp eax ebx +
jz loc_10489D9  +
add eax esi +
cmp eax ebx +
jz loc_10489D9  +
push edi  +
push offset aKeywords_3  +
call sub_1023E04  +
mov eax [esi+40h] +
cmp eax ebx +
jnz loc_104897F  +
xor edi edi +
jmp loc_10489C4  +
lea edi [eax+esi] +
jmp loc_10489C4  +
push offset aKeyword_1  +
call sub_1023E04  +
push edi  +
push ebx  +
push 1  +
push [ebp+var_B4]  +
call sub_101D200  +
push [ebp+var_B4]  +
push offset aKeyword_0  +
call sub_1023E04  +
mov eax edi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_10489B2  +
sub eax ecx +
sar eax 1 +
lea edi [edi+eax*2+2] +
push [ebp+var_B4]  +
cmp [edi] bx +
jnz loc_1048984  +
push offset aKeywords_2  +
call sub_1023E04  +
cmp dword ptr [esi+30h] 1 +
jz loc_1048A28  +
mov eax [esi+44h] +
cmp eax ebx +
jz loc_1048A28  +
add eax esi +
cmp eax ebx +
jz loc_1048A28  +
push [ebp+var_B4]  +
push offset aTask_3  +
call sub_1023E04  +
mov eax [esi+44h] +
cmp eax ebx +
jnz loc_1048A07  +
xor eax eax +
jmp loc_1048A09  +
add eax esi +
push eax  +
push ebx  +
push 1  +
push [ebp+var_B4]  +
call sub_101D200  +
push [ebp+var_B4]  +
push offset aTask_2  +
call sub_1023E04  +
mov eax [esi+4Ch] +
cmp eax ebx +
jz loc_1048AC5  +
add eax esi +
cmp eax ebx +
jz loc_1048AC5  +
mov ecx [ebp+var_BC] +
mov ecx [ecx+0Ch] +
cmp ecx ebx +
jz loc_1048AC5  +
push ecx  +
push ebx  +
lea ecx [ebp+hMem] +
push ecx  +
push ebx  +
push 0FFFFFFFFh  +
push eax  +
push 2500h  +
mov [ebp+hMem] ebx +
call ds:FormatMessageW  +
test eax eax +
jnz loc_1048A78  +
mov eax [esi+4Ch] +
cmp eax ebx +
jz loc_1048AB1  +
lea edi [eax+esi] +
jmp loc_1048A7E  +
mov edi [ebp+hMem] +
cmp edi ebx +
jz loc_1048AB1  +
push [ebp+var_B4]  +
push offset aMessage_2  +
call sub_1023E04  +
push edi  +
push ebx  +
push 1  +
push [ebp+var_B4]  +
call sub_101D200  +
push [ebp+var_B4]  +
push offset aMessage_1  +
call sub_1023E04  +
cmp [ebp+hMem] ebx +
jz loc_1048AC5  +
push [ebp+hMem]  +
call ds:LocalFree  +
cmp [esi+30h] ebx +
jnz loc_1048B13  +
mov eax [esi+3Ch] +
cmp eax ebx +
jz loc_1048B13  +
add eax esi +
cmp eax ebx +
jz loc_1048B13  +
push [ebp+var_B4]  +
push offset aChannel_2  +
call sub_1023E04  +
mov eax [esi+3Ch] +
cmp eax ebx +
jnz loc_1048AF2  +
xor eax eax +
jmp loc_1048AF4  +
add eax esi +
push eax  +
push ebx  +
push 1  +
push [ebp+var_B4]  +
call sub_101D200  +
push [ebp+var_B4]  +
push offset aChannel_1  +
call sub_1023E04  +
mov ecx [esi+30h] +
cmp ecx ebx +
jnz loc_1048B2B  +
mov eax [esi+50h] +
cmp eax ebx +
jz loc_1048B2B  +
add eax esi +
cmp eax ebx +
jz loc_1048B2B  +
mov edi eax +
jmp loc_1048B3A  +
cmp ecx 1 +
jnz loc_1048B6D  +
mov eax [esi+34h] +
cmp eax ebx +
jz loc_1048B6D  +
lea edi [eax+esi] +
cmp edi ebx +
jz loc_1048B6D  +
push [ebp+var_B4]  +
push offset aProvider_2  +
call sub_1023E04  +
push edi  +
push ebx  +
push 1  +
push [ebp+var_B4]  +
call sub_101D200  +
push [ebp+var_B4]  +
push offset aProvider_0  +
call sub_1023E04  +
cmp dword ptr [esi+30h] 1 +
jnz loc_1048CD3  +
mov eax [esi+44h] +
cmp eax ebx +
jz loc_1048BBC  +
lea edi [eax+esi] +
cmp edi ebx +
jz loc_1048BBC  +
push offset aXmlnsHttpSchem  +
push offset aEventnameWs  +
push [ebp+var_B4]  +
call sub_10243C0  +
add esp 0Ch +
push edi  +
push ebx  +
push 1  +
push [ebp+var_B4]  +
call sub_101D200  +
push [ebp+var_B4]  +
push offset aEventname  +
call sub_1023E04  +
cmp dword ptr [esi+30h] 1 +
jnz loc_1048CD3  +
mov eax [ebp+var_BC] +
cmp [eax+14h] ebx +
jz loc_1048CD3  +
push eax  +
lea ecx [ebp+var_D0] +
call sub_1049F5B  +
lea ecx [ebp+var_D0] +
xor edi edi +
call sub_104A147  +
mov esi eax +
cmp esi ebx +
jz loc_1048CD3  +
test byte ptr [esi+20h] 40h +
jz loc_1048CAA  +
cmp [esi+10h] ebx +
jz loc_1048CAA  +
cmp [esi+14h] ebx +
jz loc_1048CAA  +
cmp edi ebx +
jnz loc_1048C33  +
push offset aXmlnsHttpSchem  +
push offset aMapWs_0  +
push [ebp+var_B4]  +
call sub_10243C0  +
xor edi edi +
add esp 0Ch +
inc edi  +
push [ebp+var_B4]  +
push offset aDataName  +
call sub_1023E04  +
push dword ptr [esi]  +
push ebx  +
push 1  +
push [ebp+var_B4]  +
call sub_101D200  +
push [ebp+var_B4]  +
push offset aValue  +
call sub_1023E04  +
push dword ptr [esi+14h]  +
push offset aWs_5  +
push [ebp+var_B4]  +
call sub_10243C0  +
add esp 0Ch +
push [ebp+var_B4]  +
push offset asc_1001828  +
call sub_1023E04  +
push dword ptr [esi+10h]  +
push ebx  +
push 1  +
push [ebp+var_B4]  +
call sub_101D200  +
push [ebp+var_B4]  +
push offset aData_2  +
call sub_1023E04  +
lea ecx [ebp+var_D0] +
call sub_104A147  +
mov esi eax +
cmp esi ebx +
jnz loc_1048BF8  +
cmp edi ebx +
jz loc_1048CD3  +
push [ebp+var_B4]  +
push offset aMap  +
call sub_1023E04  +
push [ebp+var_B4]  +
push offset aRenderinginf_0  +
call sub_1023E04  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 104h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
mov ebx ecx +
cmp dword ptr [ebx+3C8h] 0 +
push edi  +
mov edi [ebp+NumberOfBytesWritten] +
jnz loc_1048D33  +
mov eax [esi] +
mov ecx 100h +
test [eax+4] cx +
jz loc_1048DC4  +
push offset aXmlnsHttpSchem  +
push offset aExtendedtracin  +
push edi  +
call sub_10243C0  +
mov eax [esi] +
mov ecx 100h +
add esp 0Ch +
test [eax+4] cx +
jz loc_1048D8B  +
push edi  +
push offset aEventguid_0  +
call sub_1023E04  +
mov esi [esi] +
add esi 18h +
push esi  +
push 80h  +
lea eax [ebp+var_104] +
push eax  +
call sub_1042D55  +
push eax  +
push 0  +
push 1  +
push edi  +
call sub_101D200  +
push edi  +
push offset aEventguid  +
call sub_1023E04  +
mov eax [ebx+3C8h] +
test eax eax +
jz loc_1048DB9  +
push dword ptr [eax]  +
push offset aInstanceidLuIn  +
push edi  +
call sub_10243C0  +
mov eax [ebx+3C8h] +
push dword ptr [eax+4]  +
push offset aParentinstance  +
push edi  +
call sub_10243C0  +
add esp 18h +
push edi  +
push offset aExtendedtrac_0  +
call sub_1023E04  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+NumberOfBytesWritten] +
push esi  +
push offset aProcessingerro  +
call sub_1023E04  +
push dword ptr [ebp+arg_8]  +
push offset aErrorcodeDErro  +
push esi  +
call sub_10243C0  +
add esp 0Ch +
push esi  +
push offset aDataitemname  +
call sub_1023E04  +
push esi  +
push offset aEventpayload  +
call sub_1023E04  +
mov eax [ebp+arg_4] +
mov eax [eax] +
push 0  +
push dword ptr [eax+5Ch]  +
movzx eax word ptr [eax+56h] +
push eax  +
push esi  +
call sub_101D5DC  +
push esi  +
push offset aEventpayload_0  +
call sub_1023E04  +
push esi  +
push offset aProcessinger_0  +
call sub_1023E04  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
mov ecx 100h +
test [eax+4] cx +
jnz loc_1048E7C  +
mov eax dword_10566D8 +
test dword ptr [eax+3B0h] 12000000h +
jz loc_1048E7C  +
mov ecx [ebp+10h] +
xor eax eax +
mov [ecx] ax +
jmp loc_1048E7F  +
xor eax eax +
inc eax  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
mov ecx 100h +
test [eax+4] cx +
jnz loc_1048EB2  +
mov eax dword_10566D8 +
test dword ptr [eax+3B0h] 12000000h +
jz loc_1048EB2  +
xor eax eax +
jmp loc_1048EE7  +
mov eax [ebp+0Ch] +
movzx ecx word ptr [eax+0Ah] +
cmp cx 1Eh +
jz loc_1048EE4  +
cmp cx 1Fh +
jz loc_1048EE4  +
cmp cx 20h +
jz loc_1048EE4  +
movzx eax word ptr [eax+8] +
cmp ax 11h +
jz loc_1048EE0  +
cmp ax 12h +
jz loc_1048EE0  +
xor eax eax +
inc eax  +
jmp loc_1048EEF  +
push 21h  +
jmp loc_1048EE6  +
push 12h  +
pop eax  +
mov ecx [ebp+10h] +
mov [ecx] ax +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
push [ebp+arg_14]  +
mov edi [ebp+arg_0] +
push 7FFFFFFFh  +
shr ebx 1 +
push edi  +
mov ecx ebx +
call sub_1047C4D  +
mov esi eax +
xor eax eax +
cmp esi eax +
jl loc_1048FA9  +
test [ebp+arg_14] 100h +
mov [ebp+arg_0] edi +
mov [ebp+var_4] ebx +
jz loc_1048F40  +
cmp [ebp+arg_8] eax +
jnz loc_1048F40  +
mov [ebp+arg_8] offset dword_1008298 +
xor esi esi +
test [ebp+arg_14] 0FFFFE000h +
jz loc_1048FB2  +
mov esi 80070057h +
cmp ebx eax +
jz loc_1048F59  +
xor eax eax +
mov [edi] ax +
test [ebp+arg_14] 1C00h +
jz loc_1048F7C  +
cmp [ebp+arg_4] 0 +
jz loc_1048F7C  +
push [ebp+arg_14]  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_4]  +
lea ebx [ebp+var_4] +
xor ecx ecx +
call sub_1047CAD  +
test esi esi +
jge loc_1048F88  +
cmp esi 8007007Ah +
jnz loc_1048FA9  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_1048F94  +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_1048FA9  +
mov ecx [ebp+arg_4] +
mov edx [ebp+var_4] +
and ecx 1 +
lea ecx [ecx+edx*2] +
mov [eax] ecx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
cmp ebx eax +
jnz loc_1048FCF  +
mov ecx [ebp+arg_8] +
cmp [ecx] ax +
jz loc_1048F88  +
mov esi edi +
neg esi  +
sbb esi esi +
and esi 23h +
add esi 80070057h +
jmp loc_1048F59  +
mov [ebp+arg_0] eax +
push 7FFFFFFEh  +
lea eax [ebp+arg_0] +
push eax  +
mov eax [ebp+arg_8] +
mov edx ebx +
mov ecx edi +
call sub_1024F9F  +
mov esi eax +
mov eax [ebp+arg_0] +
sub ebx eax +
lea ecx [edi+eax*2] +
mov [ebp+arg_0] ecx +
mov [ebp+var_4] ebx +
test esi esi +
jl loc_1048F59  +
mov eax [ebp+arg_14] +
test eax 200h +
jz loc_1048F88  +
mov ecx [ebp+arg_4] +
push [ebp+arg_0]  +
and ecx 1 +
lea ecx [ecx+ebx*2] +
call sub_1047C7F  +
jmp loc_1048F88  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_14] +
push ebx  +
mov ebx [ebp+arg_4] +
mov [ebp+var_8] eax +
push esi  +
shr ebx 1 +
and [ebp+var_8] 100h +
push edi  +
jz loc_104910A  +
push eax  +
push 7FFFFFFFh  +
push [ebp+arg_0]  +
mov ecx ebx +
call sub_1047C4D  +
test eax eax +
jl loc_1049067  +
test ebx ebx +
jnz loc_1049125  +
and [ebp+var_4] 0 +
xor edx edx +
cmp eax edx +
mov esi eax +
jl loc_1049101  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
sub ebx eax +
lea edi [ecx+eax*2] +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
cmp [ebp+var_8] edx +
jz loc_1049099  +
cmp [ebp+arg_8] edx +
jnz loc_1049099  +
mov [ebp+arg_8] offset dword_1008298 +
xor esi esi +
test [ebp+arg_14] 0FFFFE000h +
jz loc_1049137  +
mov esi 80070057h +
test [ebp+arg_14] 1C00h +
jz loc_10490DA  +
cmp [ebp+arg_4] 0 +
jz loc_10490DA  +
push [ebp+arg_14]  +
mov ecx [ebp+var_4] +
mov edi [ebp+arg_0] +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_4]  +
lea ebx [ebp+var_10] +
call sub_1047CAD  +
mov edi [ebp+var_C] +
mov ebx [ebp+var_10] +
test esi esi +
jge loc_10490E6  +
cmp esi 8007007Ah +
jnz loc_1049101  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_10490EF  +
mov [eax] edi +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_1049101  +
mov ecx [ebp+arg_4] +
and ecx 1 +
lea ecx [ecx+ebx*2] +
mov [eax] ecx +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
xor eax eax +
test ebx ebx +
jz loc_1049118  +
cmp ebx 7FFFFFFFh +
jbe loc_104911D  +
mov eax 80070057h +
test eax eax +
jl loc_1049067  +
mov eax [ebp+arg_0] +
lea edi [ebp+var_4] +
mov edx ebx +
call sub_101F0EA  +
jmp loc_104906B  +
cmp ebx 1 +
ja loc_1049158  +
mov eax [ebp+arg_8] +
cmp [eax] dx +
jz loc_10490E6  +
mov esi ecx +
neg esi  +
sbb esi esi +
and esi 23h +
add esi 80070057h +
jmp loc_10490AD  +
push 7FFFFFFEh  +
lea eax [ebp+var_10] +
mov [ebp+var_10] edx +
push eax  +
mov eax [ebp+arg_8] +
mov edx ebx +
mov ecx edi +
call sub_1024F9F  +
mov esi eax +
mov eax [ebp+var_10] +
sub ebx eax +
lea edi [edi+eax*2] +
mov [ebp+var_C] edi +
mov [ebp+var_10] ebx +
test esi esi +
jl loc_10490AD  +
mov eax [ebp+arg_14] +
test eax 200h +
jz loc_10490E6  +
mov ecx [ebp+arg_4] +
and ecx 1 +
lea ecx [ecx+ebx*2] +
push edi  +
call sub_1047C7F  +
jmp loc_10490E6  +
***
mov eax ecx +
mov dword ptr [eax+4] offset off_1016994 +
xor ecx ecx +
mov dword ptr [eax] offset off_101699C +
mov dword ptr [eax+4] offset off_1016998 +
mov [eax+8] ecx +
mov [eax+10Ch] ecx +
mov [eax+190h] ecx +
mov [eax+198h] ecx +
mov [eax+2A0h] ecx +
mov [eax+3A4h] ecx +
mov [eax+3A8h] ecx +
mov [eax+3ACh] ecx +
mov [eax+3B0h] ecx +
mov [eax+3B4h] ecx +
mov [eax+3B8h] ecx +
mov [eax+3BCh] ecx +
mov [eax+3C0h] ecx +
mov [eax+3C4h] ecx +
mov [eax+3C8h] ecx +
mov [eax+194h] ecx +
mov [eax+29Ch] ecx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
xor ebx ebx +
xor ecx ecx +
cmp dword ptr [edi] 2 +
mov [ebp+var_3C] edx +
mov [ebp+var_38] ecx +
mov [ebp+var_2C] ebx +
mov [ebp+var_28] ebx +
jnb loc_104926A  +
mov [ebp+var_2C] 1 +
movzx eax word ptr [esi] +
test ax ax +
jz loc_1049384  +
mov [ebp+var_34] 2 +
sub [ebp+var_34] edx +
mov [ebp+var_30] edx +
cmp [ebp+var_2C] 0 +
jnz loc_104929D  +
mov ecx [ebp+var_30] +
mov edx [ebp+var_34] +
add edx ecx +
xor ecx ecx +
inc ecx  +
cmp edx [edi] +
jbe loc_10492A0  +
mov [ebp+var_2C] ecx +
jmp loc_10492A0  +
xor ecx ecx +
inc ecx  +
cmp [ebp+var_28] 0 +
jz loc_10492C1  +
movzx eax word ptr [ebx] +
test ax ax +
jnz loc_10492BA  +
xor ebx ebx +
inc esi  +
inc esi  +
and [ebp+var_28] ebx +
jmp loc_1049372  +
inc ebx  +
inc ebx  +
jmp loc_104935C  +
cmp ax 22h +
jnz loc_10492D4  +
mov [ebp+var_28] ecx +
mov ebx offset aQuot +
jmp loc_1049372  +
cmp ax 26h +
jnz loc_10492E7  +
mov [ebp+var_28] ecx +
mov ebx offset aAmp +
jmp loc_1049372  +
cmp ax 3Ch +
jnz loc_10492F7  +
mov [ebp+var_28] ecx +
mov ebx offset aLt +
jmp loc_1049372  +
cmp ax 3Eh +
jnz loc_1049307  +
mov [ebp+var_28] ecx +
mov ebx offset aGt +
jmp loc_1049372  +
cmp ax 27h +
jnz loc_1049317  +
mov [ebp+var_28] ecx +
mov ebx offset aApos +
jmp loc_1049372  +
push eax  +
call sub_101CF29  +
test al al +
jnz loc_104932A  +
inc esi  +
mov eax 0BFh +
inc esi  +
jmp loc_104935F  +
movzx eax word ptr [esi] +
cmp ax 7Fh +
jbe loc_104935A  +
movzx eax ax +
push eax  +
push offset aHu  +
lea eax [ebp+var_24] +
push 10h  +
push eax  +
call sub_101BCA7  +
add esp 10h +
test eax eax +
jl loc_104939B  +
mov [ebp+var_28] 1 +
lea ebx [ebp+var_24] +
jmp loc_1049372  +
inc esi  +
inc esi  +
movzx eax ax +
cmp [ebp+var_2C] 0 +
jnz loc_104936B  +
mov ecx [ebp+var_30] +
mov [ecx] ax +
inc [ebp+var_38]  +
add [ebp+var_30] 2 +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_1049283  +
mov ecx [ebp+var_38] +
mov edx [ebp+var_3C] +
cmp [ebp+var_2C] 0 +
jnz loc_10493A6  +
lea eax [ecx+ecx+2] +
cmp eax [edi] +
jbe loc_10493A0  +
mov [ebp+var_2C] 1 +
jmp loc_10493A6  +
push 0Dh  +
pop eax  +
jmp loc_10493B6  +
xor eax eax +
mov [edx+ecx*2] ax +
lea eax [ecx+ecx+2] +
mov [edi] eax +
mov eax [ebp+var_2C] +
neg eax  +
sbb eax eax +
and eax 7Ah +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
xor edi edi +
push edi  +
push [ebp+arg_0]  +
mov ebx ecx +
mov [ebp+var_4] edi +
call sub_1049230  +
mov esi [ebp+var_4] +
shr esi 1 +
add esi 15h +
cmp [ebp+arg_4] edi +
jz loc_1049413  +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push [ebp+arg_4]  +
mov ecx ebx +
mov [ebp+var_4] edi +
call sub_1049230  +
mov eax [ebp+var_4] +
shr eax 1 +
lea esi [esi+eax-1] +
mov eax [ebp+arg_C] +
mov eax [eax] +
add esi esi +
mov [ebp+var_C] esi +
cmp eax esi +
jnb loc_1049432  +
push 7Ah  +
pop edi  +
mov eax [ebp+arg_C] +
mov [eax] esi +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
push edi  +
lea ecx [ebp+arg_8] +
push ecx  +
lea ecx [ebp+var_8] +
push ecx  +
push offset aDataName_0  +
push eax  +
push [ebp+arg_8]  +
call sub_1048EF8  +
test eax eax +
jge loc_1049452  +
push 0Dh  +
pop eax  +
jmp loc_104942B  +
mov eax [ebp+arg_8] +
mov esi [ebp+var_8] +
mov [ebp+var_4] eax +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push [ebp+arg_0]  +
mov ecx ebx +
call sub_1049230  +
cmp eax edi +
jnz loc_104942B  +
mov eax [ebp+var_4] +
push 2  +
pop ecx  +
sub ecx eax +
add [ebp+arg_8] ecx +
push edi  +
lea ecx [ebp+arg_8] +
push ecx  +
lea ecx [ebp+var_8] +
push ecx  +
add eax 0FFFFFFFEh +
push offset asc_101697C  +
push [ebp+arg_8]  +
shr eax 1 +
lea eax [esi+eax*2] +
push eax  +
mov [ebp+var_8] eax +
call sub_1049028  +
test eax eax +
jl loc_104944D  +
cmp [ebp+arg_4] edi +
jz loc_10494D9  +
mov eax [ebp+arg_8] +
mov esi [ebp+var_8] +
mov [ebp+var_4] eax +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push [ebp+arg_4]  +
mov ecx ebx +
call sub_1049230  +
cmp eax edi +
jnz loc_104942B  +
mov eax [ebp+var_4] +
push 2  +
pop ecx  +
sub ecx eax +
add [ebp+arg_8] ecx +
add eax 0FFFFFFFEh +
shr eax 1 +
lea eax [esi+eax*2] +
jmp loc_10494DC  +
mov eax [ebp+var_8] +
push edi  +
push edi  +
push edi  +
push offset aData_3  +
push [ebp+arg_8]  +
push eax  +
call sub_1049028  +
test eax eax +
jl loc_104944D  +
mov esi [ebp+var_C] +
jmp loc_1049424  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 50h +
push ebx  +
push esi  +
push edi  +
push [ebp+dwBytes]  +
mov [ebp+var_4] ecx +
lea ecx [ebp+var_28] +
call sub_1049F5B  +
lea ecx [ebp+var_28] +
call sub_104A147  +
mov esi eax +
xor ebx ebx +
cmp esi ebx +
jz loc_10498B2  +
mov edi [ebp+arg_4] +
xor eax eax +
inc eax  +
cmp ax [esi+24h] +
mov [edi+8] ebx +
sbb eax eax +
and eax 80h +
add eax 23h +
mov [edi+0Ch] eax +
movzx eax word ptr [esi+24h] +
cmp ax bx +
jnz loc_10495C9  +
test byte ptr [esi+20h] 8 +
jz loc_10495B7  +
mov ecx [ebp+var_4] +
lea eax [ebp+dwBytes] +
push eax  +
push ebx  +
mov [ebp+dwBytes] ebx +
mov ebx offset dword_1008298 +
push ebx  +
push dword ptr [esi]  +
call sub_10493CC  +
cmp eax 7Ah +
jnz loc_10498B4  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jz loc_10498BB  +
mov ecx [ebp+dwBytes] +
mov [edi+8] ecx +
lea ecx [ebp+dwBytes] +
push ecx  +
mov ecx [ebp+var_4] +
push eax  +
push ebx  +
mov [edi] eax +
push dword ptr [esi]  +
call sub_10493CC  +
test eax eax +
jnz loc_10498B4  +
jmp loc_104989B  +
mov dword ptr [edi] offset dword_1008298 +
mov dword ptr [edi+8] 4 +
jmp loc_104989B  +
cmp ax 1 +
jnz loc_10496ED  +
test byte ptr [esi+20h] 8 +
jz loc_1049693  +
lea eax [ebp+var_28] +
push eax  +
lea ecx [ebp+var_3C] +
call sub_1049F7C  +
mov [ebp+arg_4] ebx +
jmp loc_1049619  +
lea ecx [ebp+dwBytes] +
push ecx  +
mov ecx [ebp+var_4] +
push ebx  +
push dword ptr [eax+4]  +
mov [ebp+dwBytes] ebx +
push dword ptr [eax]  +
call sub_10493CC  +
cmp eax 7Ah +
jnz loc_10498B4  +
mov ecx [ebp+arg_4] +
mov eax [ebp+dwBytes] +
lea eax [ecx+eax-2] +
mov [ebp+arg_4] eax +
lea ecx [ebp+var_3C] +
call sub_1049FA5  +
cmp eax ebx +
jnz loc_10495EE  +
add [ebp+arg_4] 2 +
push [ebp+arg_4]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jz loc_10498BB  +
lea eax [ebp+var_28] +
push eax  +
lea ecx [ebp+var_50] +
mov [edi] ebx +
call sub_1049F7C  +
xor esi esi +
jmp loc_1049682  +
mov ecx [ebp+arg_4] +
sub ecx esi +
mov [ebp+dwBytes] ecx +
lea ecx [ebp+dwBytes] +
push ecx  +
lea ecx [esi+ebx] +
push ecx  +
push dword ptr [eax+4]  +
mov ecx [ebp+var_4] +
push dword ptr [eax]  +
call sub_10493CC  +
test eax eax +
jnz loc_10498B4  +
mov eax [ebp+dwBytes] +
lea esi [esi+eax-2] +
lea ecx [ebp+var_50] +
call sub_1049FA5  +
test eax eax +
jnz loc_1049656  +
mov eax [ebp+arg_4] +
jmp loc_10496E5  +
mov ecx [ebp+var_4] +
lea eax [ebp+dwBytes] +
push eax  +
push ebx  +
push dword ptr [esi+4]  +
mov [ebp+dwBytes] ebx +
call sub_1049230  +
cmp eax 7Ah +
jnz loc_10498B4  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
cmp eax ebx +
jz loc_10498BB  +
lea ecx [ebp+dwBytes] +
push ecx  +
mov ecx [ebp+var_4] +
push eax  +
mov [edi] eax +
push dword ptr [esi+4]  +
call sub_1049230  +
cmp eax ebx +
jnz loc_10498B4  +
mov eax [ebp+dwBytes] +
mov [edi+8] eax +
jmp loc_104989B  +
movzx eax ax +
shl eax 2 +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [edi] eax +
cmp eax ebx +
jz loc_10498BB  +
movzx eax word ptr [esi+24h] +
mov [edi+8] eax +
test byte ptr [esi+20h] 8 +
jz loc_1049822  +
lea eax [ebp+var_28] +
mov [ebp+var_C] eax +
xor eax eax +
mov [ebp+arg_4] ebx +
cmp ax [esi+24h] +
jnb loc_104989B  +
push [ebp+var_C]  +
lea ecx [ebp+var_50] +
call sub_1049F7C  +
and [ebp+dwBytes] 0 +
jmp loc_1049776  +
mov ecx [ebp+var_4] +
and [ebp+var_8] 0 +
lea eax [ebp+var_8] +
push eax  +
push 0  +
push dword ptr [ebx+4]  +
push dword ptr [ebx]  +
call sub_10493CC  +
cmp eax 7Ah +
jnz loc_10498B4  +
test byte ptr [ebx+20h] 2 +
mov ecx [ebp+dwBytes] +
mov eax [ebp+var_8] +
lea eax [ecx+eax-2] +
mov [ebp+dwBytes] eax +
jnz loc_1049784  +
lea ecx [ebp+var_50] +
call sub_1049FA5  +
mov ebx eax +
test ebx ebx +
jnz loc_1049743  +
add [ebp+dwBytes] 2 +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [ebp+var_14] eax +
test eax eax +
jz loc_10498BB  +
mov ecx [edi] +
mov edx [ebp+arg_4] +
push [ebp+var_C]  +
mov [ecx+edx*4] eax +
lea ecx [ebp+var_3C] +
call sub_1049F7C  +
and [ebp+var_8] 0 +
jmp loc_10497FA  +
mov eax [ebp+var_8] +
mov ecx [ebp+dwBytes] +
sub ecx eax +
mov [ebp+var_10] ecx +
lea ecx [ebp+var_10] +
push ecx  +
mov ecx [ebp+var_14] +
add eax ecx +
mov ecx [ebp+var_4] +
push eax  +
push dword ptr [ebx+4]  +
push dword ptr [ebx]  +
call sub_10493CC  +
test eax eax +
jnz loc_10498B4  +
test byte ptr [ebx+20h] 2 +
mov ecx [ebp+var_8] +
mov eax [ebp+var_10] +
lea eax [ecx+eax-2] +
mov [ebp+var_8] eax +
jnz loc_104980A  +
lea ecx [ebp+var_3C] +
call sub_1049FA5  +
mov ebx eax +
test ebx ebx +
jnz loc_10497BD  +
jmp loc_1049810  +
lea eax [ebp+var_3C] +
mov [ebp+var_C] eax +
movzx eax word ptr [esi+24h] +
inc [ebp+arg_4]  +
cmp [ebp+arg_4] eax +
jb loc_1049732  +
jmp loc_104989B  +
xor eax eax +
mov [ebp+dwBytes] ebx +
cmp ax [esi+24h] +
jnb loc_104989B  +
and [ebp+arg_4] 0 +
cmp [ebp+dwBytes] 0 +
jnz loc_104983B  +
mov ebx esi +
jmp loc_1049848  +
mov eax [ebp+dwBytes] +
mov ecx [esi+2Ch] +
imul eax eax +
lea ebx [eax+ecx-30h] +
mov ecx [ebp+var_4] +
lea eax [ebp+arg_4] +
push eax  +
push 0  +
push dword ptr [ebx+4]  +
call sub_1049230  +
cmp eax 7Ah +
jnz loc_10498B4  +
push [ebp+arg_4]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jz loc_10498BB  +
mov ecx [edi] +
mov edx [ebp+dwBytes] +
mov [ecx+edx*4] eax +
lea ecx [ebp+arg_4] +
push ecx  +
mov ecx [ebp+var_4] +
push eax  +
push dword ptr [ebx+4]  +
call sub_1049230  +
test eax eax +
jnz loc_10498B4  +
movzx eax word ptr [esi+24h] +
inc [ebp+dwBytes]  +
cmp [ebp+dwBytes] eax +
jb loc_104982D  +
lea ecx [ebp+var_28] +
add edi 10h +
call sub_104A147  +
mov esi eax +
xor ebx ebx +
cmp esi ebx +
jnz loc_1049532  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
push 8  +
pop eax  +
jmp loc_10498B4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 818h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+NumberOfBytesWritten] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov [ebp+var_814] ecx +
push eax  +
lea ecx [ebp+var_804] +
xor ebx ebx +
push offset aUserdata_2  +
mov [ebp+var_818] eax +
mov [ebp+lpMem] ebx +
mov dword ptr [ebp+var_80C] ecx +
call sub_1023E04  +
mov eax [esi+4] +
cmp [eax+68h] ebx +
jbe loc_1049A18  +
mov eax [eax+68h] +
mov edi ds:HeapAlloc +
shl eax 4 +
push eax  +
push 8  +
push hHeap  +
call edi  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_1049943  +
push 8  +
pop eax  +
jmp loc_1049A87  +
mov ecx [ebp+var_814] +
push eax  +
push esi  +
call sub_1049502  +
mov ebx eax +
test ebx ebx +
jnz loc_1049A28  +
mov eax [esi+4] +
cmp [eax+54h] ebx +
jnz loc_1049966  +
xor ecx ecx +
jmp loc_104996B  +
mov ecx [eax+54h] +
add ecx eax +
mov eax [esi+4] +
lea edx [ebp+var_810] +
push edx  +
lea edx [ebp+var_804] +
push edx  +
push 400h  +
push 0  +
push dword ptr [eax+68h]  +
push [ebp+lpMem]  +
push dword ptr [eax+58h]  +
push ecx  +
call EvtIntRenderResourceEventTemplate  +
mov ebx eax +
cmp ebx 7Ah +
jnz loc_10499FB  +
mov eax [ebp+var_810] +
add eax eax +
push eax  +
push 8  +
pop ebx  +
push ebx  +
push hHeap  +
call edi  +
mov edx eax +
mov dword ptr [ebp+var_80C] edx +
test edx edx +
jz loc_1049A28  +
xor eax eax +
mov [edx] ax +
mov eax [esi+4] +
cmp dword ptr [eax+54h] 0 +
jnz loc_10499CF  +
xor ecx ecx +
jmp loc_10499D4  +
mov ecx [eax+54h] +
add ecx eax +
mov eax [esi+4] +
lea edi [ebp+var_810] +
push edi  +
push edx  +
push [ebp+var_810]  +
push 0  +
push dword ptr [eax+68h]  +
push [ebp+lpMem]  +
push dword ptr [eax+58h]  +
push ecx  +
call EvtIntRenderResourceEventTemplate  +
mov ebx eax +
test ebx ebx +
jnz loc_1049A28  +
push dword ptr [ebp+var_80C]  +
push offset aWs_6  +
push [ebp+var_818]  +
call sub_10243C0  +
add esp 0Ch +
push [ebp+var_818]  +
push offset aUserdata_1  +
call sub_1023E04  +
cmp [ebp+lpMem] 0 +
mov edi ds:HeapFree +
jz loc_1049A5E  +
mov eax [esi+4] +
push dword ptr [eax+68h]  +
mov ecx [ebp+var_814] +
push [ebp+lpMem]  +
call sub_10484AE  +
push [ebp+lpMem]  +
push 0  +
push hHeap  +
call edi  +
lea eax [ebp+var_804] +
cmp dword ptr [ebp+var_80C] eax +
jz loc_1049A85  +
cmp dword ptr [ebp+var_80C] 0 +
jz loc_1049A85  +
push dword ptr [ebp+var_80C]  +
push 0  +
push hHeap  +
call edi  +
mov eax ebx +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+NumberOfBytesWritten] +
push offset aXmlnsHttpSch_0  +
push offset aEventWs  +
push edi  +
mov [ebp+var_4] ecx +
call sub_10243C0  +
mov esi [ebp+arg_4] +
mov ecx [ebp+var_4] +
add esp 0Ch +
push esi  +
push edi  +
call sub_1048174  +
mov eax [esi+4] +
xor edx edx +
test eax eax +
jz loc_1049ADB  +
cmp dword ptr [eax+6Ch] 2 +
jnz loc_1049ADB  +
inc edx  +
push ebx  +
test eax eax +
jz loc_1049AF9  +
cmp dword ptr [eax+30h] 2 +
jnz loc_1049AF9  +
push edi  +
call sub_102409A  +
push dword ptr [esi]  +
mov [ebp+lDistanceToMove] eax +
push edi  +
call sub_101E223  +
jmp loc_1049B3D  +
mov ecx [esi+18h] +
test ecx ecx +
jz loc_1049B22  +
cmp [ebp+lDistanceToMove] 0 +
jz loc_1049B1F  +
test edx edx +
jnz loc_1049B1F  +
cmp ecx 6Fh +
jz loc_1049B22  +
cmp ecx 3A9Dh +
jnz loc_1049B1F  +
cmp [esi+0ACh] edx +
jnz loc_1049B22  +
push ecx  +
jmp loc_1049B51  +
test eax eax +
jz loc_1049B6C  +
test edx edx +
jz loc_1049B5D  +
push edi  +
call sub_102409A  +
mov ecx [ebp+var_4] +
push esi  +
push edi  +
mov [ebp+lDistanceToMove] eax +
call sub_10498C5  +
mov ebx eax +
test ebx ebx +
jz loc_1049BA2  +
push [ebp+lDistanceToMove]  +
push edi  +
call sub_10240B7  +
test eax eax +
jnz loc_1049BA2  +
push ebx  +
mov ecx [ebp+var_4] +
push esi  +
push edi  +
call sub_1048DDA  +
jmp loc_1049BA2  +
push [ebp+lDistanceToMove]  +
mov ecx [ebp+var_4] +
push esi  +
push edi  +
call sub_10484EC  +
jmp loc_1049BA2  +
mov eax [esi] +
test byte ptr [eax+4] 4 +
jz loc_1049B9B  +
push edi  +
push offset aData_5  +
call sub_1023E04  +
mov eax [esi] +
push dword ptr [eax+5Ch]  +
push 0  +
push 1  +
push edi  +
call sub_101D200  +
push edi  +
push offset aData_2  +
call sub_1023E04  +
jmp loc_1049BA2  +
push eax  +
push edi  +
call sub_101D630  +
mov ecx [ebp+var_4] +
push esi  +
push edi  +
call sub_104886F  +
mov ecx [ebp+var_4] +
push esi  +
push edi  +
call sub_1048CF9  +
push edi  +
push offset aEvent  +
call sub_1023E04  +
push 6Fh  +
pop eax  +
pop ebx  +
cmp [esi+18h] eax +
jz loc_1049BD9  +
mov eax [esi+0ACh] +
neg eax  +
sbb eax eax +
and eax 3A9Dh +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov eax ecx +
xor ecx ecx +
push esi  +
push 10h  +
mov [eax+4] ecx +
mov [eax+10h] ecx +
mov [eax+1Ch] ecx +
mov [eax+0Ch] ecx +
mov [eax+8] ecx +
mov [eax+14h] ecx +
lea edx [eax+20h] +
pop esi  +
mov [edx+4] ecx +
mov [edx] ecx +
add edx 8 +
dec esi  +
jnz loc_1049C01  +
mov [eax+0A0h] ecx +
mov [eax+0A4h] ecx +
mov [eax+18h] ecx +
mov [eax+0A8h] ecx +
mov [eax+0ACh] ecx +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
cmp dword ptr [edi] 0 +
mov ebx ecx +
jz loc_1049CA1  +
push esi  +
lea esi [ebx+20h] +
mov [ebp+arg_0] 10h +
test esi esi +
jz loc_1049C98  +
mov ecx [esi+4] +
test ecx ecx +
jz loc_1049C98  +
mov eax [edi] +
mov dx [ecx] +
cmp dx [eax] +
jnz loc_1049C7D  +
test dx dx +
jz loc_1049C79  +
mov dx [ecx+2] +
cmp dx [eax+2] +
jnz loc_1049C7D  +
add ecx 4 +
add eax 4 +
test dx dx +
jnz loc_1049C57  +
xor eax eax +
jmp loc_1049C82  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_1049C98  +
cmp [esi] eax +
jz loc_1049C98  +
push [ebp+arg_8]  +
mov ecx [esi] +
push [ebp+arg_4]  +
mov eax [ecx] +
push edi  +
push ebx  +
call dword ptr [eax]  +
add esi 8 +
dec [ebp+arg_0]  +
jnz loc_1049C4A  +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax+4] +
test eax eax +
jz loc_1049CCA  +
push eax  +
push 0  +
push hHeap  +
call ds:HeapFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_10566D8 +
and [ebp+dwBytes] 0 +
push esi  +
mov esi ecx +
mov ecx [eax+350h] +
lea edx [ebp+dwBytes] +
push edx  +
push dword ptr [esi+4]  +
mov edx ecx +
add eax 358h +
neg edx  +
sbb edx edx +
and edx eax +
push edx  +
push ecx  +
push dword ptr [esi]  +
call TdhGetEventInformation  +
cmp eax 7Ah +
jnz loc_1049D54  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [esi+4] eax +
test eax eax +
jnz loc_1049D2A  +
push 8  +
pop eax  +
jmp loc_1049D54  +
mov ecx dword_10566D8 +
mov edx [ecx+350h] +
push edi  +
lea edi [ebp+dwBytes] +
push edi  +
push eax  +
mov eax edx +
add ecx 358h +
neg eax  +
sbb eax eax +
and eax ecx +
push eax  +
push edx  +
push dword ptr [esi]  +
call TdhGetEventInformation  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+dwBytes] 0 +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+dwBytes] +
push eax  +
push 0  +
push [ebp+arg_0]  +
mov esi ecx +
push dword ptr [esi]  +
call TdhGetEventMapInformation  +
mov edi eax +
cmp edi 7Ah +
jnz loc_1049DCF  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_1049D9E  +
push 8  +
pop eax  +
jmp loc_1049DD1  +
lea eax [ebp+dwBytes] +
push eax  +
push ebx  +
push [ebp+arg_0]  +
push dword ptr [esi]  +
call TdhGetEventMapInformation  +
mov edi eax +
test edi edi +
jz loc_1049DCA  +
push ebx  +
push 0  +
push hHeap  +
call ds:HeapFree  +
mov eax [ebp+arg_4] +
and dword ptr [eax] 0 +
jmp loc_1049DCF  +
mov eax [ebp+arg_4] +
mov [eax] ebx +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+dwBytes] +
push eax  +
movzx eax byte ptr [edi+2Bh] +
xor esi esi +
push esi  +
push 2  +
cdq   +
push edx  +
push eax  +
lea ebx [edi+18h] +
push ebx  +
mov [ebp+dwBytes] esi +
call TdhQueryProviderFieldInformation  +
mov [ebp+arg_0] eax +
cmp eax 7Ah +
jnz loc_1049E3F  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_1049E28  +
push 8  +
jmp loc_1049EA0  +
lea eax [ebp+dwBytes] +
push eax  +
movzx eax byte ptr [edi+2Bh] +
push esi  +
push 2  +
cdq   +
push edx  +
push eax  +
push ebx  +
call TdhQueryProviderFieldInformation  +
mov [ebp+arg_0] eax +
xor ecx ecx +
cmp [ebp+arg_0] ecx +
jz loc_1049E5D  +
cmp esi ecx +
jz loc_1049E58  +
push esi  +
push ecx  +
push hHeap  +
call ds:HeapFree  +
mov eax [ebp+arg_0] +
jmp loc_1049EA1  +
cmp [esi] ecx +
jz loc_1049E90  +
cmp [esi+8] ecx +
jnz loc_1049E6B  +
cmp [esi+0Ch] ecx +
jz loc_1049E90  +
mov eax [ebp+arg_C] +
mov [eax] esi +
mov eax [esi+8] +
cmp eax ecx +
jz loc_1049E7E  +
mov edx [ebp+arg_4] +
add eax esi +
mov [edx] eax +
mov eax [esi+0Ch] +
cmp eax ecx +
jz loc_1049E8C  +
mov ecx [ebp+dwFlags] +
add eax esi +
mov [ecx] eax +
xor eax eax +
jmp loc_1049EA1  +
push esi  +
push ecx  +
push hHeap  +
call ds:HeapFree  +
push 0Dh  +
pop eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
movzx esi [ebp+arg_8] +
push edi  +
movzx edi word ptr [ebp+arg_4] +
sub esi edi +
lea eax ds:2[esi*4] +
push eax  +
push 8  +
push hHeap  +
mov [ebp+var_4] ecx +
call ds:HeapAlloc  +
xor ebx ebx +
cmp eax ebx +
jnz loc_1049EE4  +
push 8  +
pop eax  +
jmp loc_1049F4F  +
xor ecx ecx +
cmp esi ebx +
mov [eax] cx +
mov edx eax +
mov [ebp+arg_4] ebx +
jle loc_1049F43  +
mov ecx [ebp+var_4] +
mov ecx [ecx] +
mov ecx [ecx+5Ch] +
add ecx ebx +
add ecx edi +
mov bl [ecx] +
shr bl 4 +
cmp bl 9 +
movzx bx bl +
jbe loc_1049F12  +
add bx 37h +
jmp loc_1049F16  +
add bx 30h +
mov [edx] bx +
mov cl [ecx] +
and cl 0Fh +
cmp cl 9 +
movzx cx cl +
jbe loc_1049F2D  +
add cx 37h +
jmp loc_1049F31  +
add cx 30h +
mov [edx+2] cx +
add edx 4 +
inc [ebp+arg_4]  +
movzx ebx word ptr [ebp+arg_4] +
cmp ebx esi +
jl loc_1049EF2  +
xor ecx ecx +
mov [edx] cx +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
or dword ptr [eax+4] 0FFFFFFFFh +
or dword ptr [eax+8] 0FFFFFFFFh +
or dword ptr [eax+0Ch] 0FFFFFFFFh +
mov [eax] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov edx [ecx] +
mov [eax] edx +
mov edx [ecx+4] +
mov [eax+4] edx +
mov edx [ecx+8] +
mov [eax+8] edx +
mov ecx [ecx+0Ch] +
mov [eax+0Ch] ecx +
pop ebp  +
retn 4  +
***
mov edx [ecx+4] +
push esi  +
cmp edx 0FFFFFFFFh +
jz loc_104A043  +
mov eax [ecx] +
mov esi [eax+10h] +
test esi esi +
jz loc_104A043  +
mov eax [eax+8] +
test eax eax +
jz loc_104A043  +
cmp edx esi +
jnb loc_104A043  +
imul edx edx +
add edx eax +
mov eax [ecx+8] +
push ebx  +
xor ebx ebx +
push edi  +
mov edi edx +
cmp eax 0FFFFFFFFh +
jnz loc_1049FEB  +
cmp [edi+28h] ebx +
jbe loc_104A03D  +
mov ebx [edi+2Ch] +
and dword ptr [ecx+8] 0 +
jmp loc_104A03D  +
mov esi [ecx+0Ch] +
mov edx eax +
imul edx edx +
add edx [edi+2Ch] +
cmp esi 0FFFFFFFFh +
jnz loc_104A009  +
cmp [edx+28h] ebx +
jbe loc_104A024  +
mov ebx [edx+2Ch] +
and dword ptr [ecx+0Ch] 0 +
jmp loc_104A020  +
inc esi  +
cmp esi [edx+28h] +
jnb loc_104A01C  +
mov [ecx+0Ch] esi +
imul esi esi +
add esi [edx+2Ch] +
mov ebx esi +
jmp loc_104A020  +
or dword ptr [ecx+0Ch] 0FFFFFFFFh +
test ebx ebx +
jnz loc_104A03D  +
lea edx [eax+1] +
cmp edx [edi+28h] +
jnb loc_104A039  +
mov [ecx+8] edx +
imul edx edx +
add edx [edi+2Ch] +
mov ebx edx +
jmp loc_104A03D  +
or dword ptr [ecx+8] 0FFFFFFFFh +
pop edi  +
mov eax ebx +
pop ebx  +
pop esi  +
retn   +
xor eax eax +
pop esi  +
retn   +
***
mov eax [ecx+4] +
cmp eax 0FFFFFFFFh +
jz loc_104A06E  +
mov ecx [ecx] +
mov edx [ecx+10h] +
test edx edx +
jz loc_104A06E  +
mov ecx [ecx+8] +
test ecx ecx +
jz loc_104A06E  +
cmp eax edx +
jnb loc_104A06E  +
imul eax eax +
add eax ecx +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ecx+4] +
xor eax eax +
cmp esi 0FFFFFFFFh +
jnz loc_104A09A  +
mov edx [ecx] +
cmp [edx+10h] eax +
jz loc_104A093  +
cmp [edx+8] eax +
jnz loc_104A09A  +
xor eax eax +
jmp loc_104A13F  +
mov edx [ecx] +
push edi  +
mov edi [edx+8] +
mov [ebp+var_4] edi +
cmp esi 0FFFFFFFFh +
jnz loc_104A0B3  +
mov [ecx+4] eax +
mov eax [edx+8] +
jmp loc_104A13E  +
mov edx esi +
imul edx edx +
push ebx  +
mov ebx [ecx+8] +
add edx edi +
cmp ebx 0FFFFFFFFh +
jnz loc_104A0D1  +
cmp [edx+28h] eax +
jbe loc_104A127  +
mov eax [edx+2Ch] +
and dword ptr [ecx+8] 0 +
jmp loc_104A123  +
mov edi [ecx+0Ch] +
mov esi ebx +
imul esi esi +
add esi [edx+2Ch] +
cmp edi 0FFFFFFFFh +
jnz loc_104A0EF  +
cmp [esi+28h] eax +
jbe loc_104A10A  +
mov eax [esi+2Ch] +
and dword ptr [ecx+0Ch] 0 +
jmp loc_104A106  +
inc edi  +
cmp edi [esi+28h] +
jnb loc_104A102  +
mov [ecx+0Ch] edi +
imul edi edi +
add edi [esi+2Ch] +
mov eax edi +
jmp loc_104A106  +
or dword ptr [ecx+0Ch] 0FFFFFFFFh +
test eax eax +
jnz loc_104A13D  +
lea esi [ebx+1] +
cmp esi [edx+28h] +
jnb loc_104A11F  +
mov [ecx+8] esi +
imul esi esi +
add esi [edx+2Ch] +
mov eax esi +
jmp loc_104A123  +
or dword ptr [ecx+8] 0FFFFFFFFh +
test eax eax +
jnz loc_104A13D  +
mov edx [ecx+4] +
mov esi [ecx] +
inc edx  +
cmp edx [esi+10h] +
jnb loc_104A13D  +
mov [ecx+4] edx +
imul edx edx +
add edx [ebp+var_4] +
mov eax edx +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edx [ecx+4] +
xor eax eax +
push esi  +
cmp edx 0FFFFFFFFh +
jnz loc_104A162  +
mov esi [ecx] +
cmp [esi+10h] eax +
jz loc_104A15E  +
cmp [esi+8] eax +
jnz loc_104A162  +
xor eax eax +
pop esi  +
retn   +
mov esi [ecx] +
push edi  +
mov edi [esi+8] +
cmp edx 0FFFFFFFFh +
jnz loc_104A175  +
mov [ecx+4] eax +
mov eax [esi+8] +
jmp loc_104A185  +
inc edx  +
cmp edx [esi+10h] +
jnb loc_104A185  +
mov [ecx+4] edx +
imul edx edx +
add edx edi +
mov eax edx +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi [ecx+4] +
xor eax eax +
cmp esi 0FFFFFFFFh +
jnz loc_104A1AA  +
mov edx [ecx] +
cmp [edx+10h] eax +
jz loc_104A1A6  +
cmp [edx+8] eax +
jnz loc_104A1AA  +
xor eax eax +
pop esi  +
retn   +
mov edx [ecx] +
push ebx  +
mov ebx [edx+8] +
mov edx [ecx+8] +
push edi  +
mov edi [ecx+0Ch] +
cmp edi 0FFFFFFFFh +
jz loc_104A1DD  +
imul esi esi +
imul edx edx +
add edx [esi+ebx+2Ch] +
lea esi [edi+1] +
cmp esi [edx+28h] +
jnb loc_104A1D9  +
mov [ecx+0Ch] esi +
imul esi esi +
add esi [edx+2Ch] +
mov eax esi +
pop edi  +
pop ebx  +
pop esi  +
retn   +
cmp edx 0FFFFFFFFh +
jz loc_104A1FA  +
imul esi esi +
add esi ebx +
inc edx  +
cmp edx [esi+28h] +
jnb loc_104A1D9  +
mov [ecx+8] edx +
imul edx edx +
add edx [esi+2Ch] +
mov eax edx +
jmp loc_104A1D9  +
pop edi  +
pop ebx  +
pop esi  +
jmp sub_104A147  +
***
cmp dword ptr [ecx+0Ch] 0FFFFFFFFh +
jz loc_104A211  +
push 3  +
pop eax  +
retn   +
xor eax eax +
cmp dword ptr [ecx+8] 0FFFFFFFFh +
setnz al  +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
push 7FFFFFFFh  +
push [ebp+arg_0]  +
call sub_101F5CD  +
test eax eax +
jge loc_104A245  +
push 0Dh  +
pop eax  +
jmp locret_104A293  +
push esi  +
mov esi [ebp+var_4] +
push edi  +
lea eax [esi+esi+2] +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jnz loc_104A267  +
push 8  +
jmp loc_104A287  +
push [ebp+arg_0]  +
inc esi  +
push esi  +
push edi  +
call sub_101F55E  +
test eax eax +
jge loc_104A28A  +
push edi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
push 0Dh  +
pop eax  +
jmp loc_104A291  +
mov eax [ebp+arg_4] +
mov [eax] edi +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
push 10h  +
mov [ebp+var_18] ebx +
lea esi [ebx+20h] +
pop edi  +
push esi  +
mov ecx ebx +
call sub_1049CAC  +
add esi 8 +
dec edi  +
jnz loc_104A2B2  +
mov eax [ebx+4] +
mov edi ds:HeapFree +
xor esi esi +
cmp eax esi +
jz loc_104A4CD  +
cmp [ebx+8] esi +
jz loc_104A4CD  +
mov [ebp+var_14] esi +
cmp [eax+68h] esi +
jbe loc_104A4CD  +
mov [ebp+var_10] esi +
mov esi [ebx+8] +
add esi [ebp+var_10] +
mov eax [esi+4] +
test eax eax +
jz loc_104A303  +
push eax  +
push 0  +
push hHeap  +
call edi  +
mov eax [esi+8] +
test eax eax +
jz loc_104A315  +
push eax  +
push 0  +
push hHeap  +
call edi  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_104A327  +
push eax  +
push 0  +
push hHeap  +
call edi  +
mov eax [esi+10h] +
test eax eax +
jz loc_104A339  +
push eax  +
push 0  +
push hHeap  +
call edi  +
mov eax [esi+14h] +
test eax eax +
jz loc_104A34B  +
push eax  +
push 0  +
push hHeap  +
call edi  +
mov eax [esi+28h] +
test eax eax +
jbe loc_104A4B5  +
cmp dword ptr [esi+2Ch] 0 +
jz loc_104A4B5  +
and [ebp+var_C] 0 +
test eax eax +
jbe loc_104A4A3  +
xor ebx ebx +
mov eax [esi+2Ch] +
mov eax [ebx+eax+4] +
test eax eax +
jz loc_104A384  +
push eax  +
push 0  +
push hHeap  +
call edi  +
mov eax [esi+2Ch] +
mov eax [ebx+eax+8] +
test eax eax +
jz loc_104A39A  +
push eax  +
push 0  +
push hHeap  +
call edi  +
mov eax [esi+2Ch] +
mov eax [ebx+eax+10h] +
test eax eax +
jz loc_104A3B0  +
push eax  +
push 0  +
push hHeap  +
call edi  +
mov eax [esi+2Ch] +
mov eax [ebx+eax+14h] +
test eax eax +
jz loc_104A3C6  +
push eax  +
push 0  +
push hHeap  +
call edi  +
mov eax [esi+2Ch] +
add eax ebx +
mov ecx [eax+28h] +
test ecx ecx +
jbe loc_104A48E  +
cmp dword ptr [eax+2Ch] 0 +
jz loc_104A48E  +
and [ebp+var_8] 0 +
test ecx ecx +
jbe loc_104A478  +
and [ebp+var_4] 0 +
mov eax [eax+2Ch] +
mov ecx [ebp+var_4] +
mov eax [eax+ecx+4] +
test eax eax +
jz loc_104A409  +
push eax  +
push 0  +
push hHeap  +
call edi  +
mov eax [esi+2Ch] +
mov eax [ebx+eax+2Ch] +
mov ecx [ebp+var_4] +
mov eax [eax+ecx+8] +
test eax eax +
jz loc_104A426  +
push eax  +
push 0  +
push hHeap  +
call edi  +
mov eax [esi+2Ch] +
mov eax [ebx+eax+2Ch] +
mov ecx [ebp+var_4] +
mov eax [eax+ecx+10h] +
test eax eax +
jz loc_104A443  +
push eax  +
push 0  +
push hHeap  +
call edi  +
mov eax [esi+2Ch] +
mov eax [ebx+eax+2Ch] +
mov ecx [ebp+var_4] +
mov eax [eax+ecx+14h] +
test eax eax +
jz loc_104A460  +
push eax  +
push 0  +
push hHeap  +
call edi  +
inc [ebp+var_8]  +
mov eax [esi+2Ch] +
mov ecx [ebp+var_8] +
add [ebp+var_4] 30h +
add eax ebx +
cmp ecx [eax+28h] +
jb loc_104A3F0  +
mov eax [esi+2Ch] +
mov eax [ebx+eax+2Ch] +
test eax eax +
jz loc_104A48E  +
push eax  +
push 0  +
push hHeap  +
call edi  +
inc [ebp+var_C]  +
mov eax [ebp+var_C] +
add ebx 30h +
cmp eax [esi+28h] +
jb loc_104A36E  +
mov ebx [ebp+var_18] +
mov esi [esi+2Ch] +
test esi esi +
jz loc_104A4B5  +
push esi  +
push 0  +
push hHeap  +
call edi  +
inc [ebp+var_14]  +
mov eax [ebx+4] +
mov ecx [ebp+var_14] +
add [ebp+var_10] 30h +
cmp ecx [eax+68h] +
jb loc_104A2EB  +
xor esi esi +
mov eax [ebx+8] +
cmp eax esi +
jz loc_104A4DE  +
push eax  +
push esi  +
push hHeap  +
call edi  +
mov eax [ebx+4] +
cmp eax esi +
jz loc_104A4EF  +
push eax  +
push esi  +
push hHeap  +
call edi  +
mov eax [ebx+0Ch] +
cmp eax esi +
jz loc_104A500  +
push eax  +
push esi  +
push hHeap  +
call edi  +
mov eax [ebx+0A8h] +
cmp eax esi +
jz loc_104A514  +
push eax  +
push esi  +
push hHeap  +
call edi  +
mov ebx [ebx+0ACh] +
cmp ebx esi +
jz loc_104A528  +
push ebx  +
push esi  +
push hHeap  +
call edi  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor edx edx +
lea eax [ecx+20h] +
push edi  +
test eax eax +
jz loc_104A55C  +
cmp dword ptr [eax+4] 0 +
jz loc_104A55C  +
inc edx  +
add eax 8 +
cmp edx 10h +
jb loc_104A53E  +
mov eax 490h +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
lea edi [ecx+edx*8+20h] +
test edi edi +
jz loc_104A551  +
mov eax [ebp+arg_0] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_104A56A  +
sub eax ecx +
sar eax 1 +
lea esi [eax+eax+2] +
push esi  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [edi+4] eax +
test eax eax +
jnz loc_104A597  +
push 8  +
pop eax  +
jmp loc_104A556  +
push [ebp+arg_0]  +
push esi  +
push eax  +
call sub_1042B97  +
test eax eax +
jge loc_104A5A9  +
push 0Dh  +
jmp loc_104A594  +
mov eax [ebp+arg_4] +
mov [edi] eax +
xor eax eax +
jmp loc_104A556  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+dwBytes] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov esi ecx +
cmp bx 0Ah +
jz loc_104A5DB  +
cmp bx 15h +
jnz loc_104A67D  +
cmp word ptr [ebp+arg_8] 1Bh +
jnz loc_104A67D  +
mov eax [esi] +
mov ecx [eax+5Ch] +
movzx edi word ptr [ebp+arg_14] +
movzx eax word ptr [eax+56h] +
push 8  +
pop ebx  +
push ebx  +
lea edx [ecx+edi] +
push edx  +
push eax  +
push ecx  +
call sub_1025E0C  +
test eax eax +
jnz loc_104A877  +
mov eax [esi] +
mov eax [eax+5Ch] +
push dword ptr [eax+edi+4]  +
mov ecx [eax+edi] +
push ecx  +
lea eax [ebp+var_C] +
push eax  +
call sub_103B0CD  +
push 40h  +
push ebx  +
push hHeap  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_104A63C  +
mov eax ebx +
jmp loc_104A877  +
push [ebp+var_8]  +
push dword ptr [ebp+var_C]  +
push offset aI64u  +
push 20h  +
push esi  +
call sub_101BCA7  +
add esp 14h +
test eax eax +
jge loc_104A66D  +
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
push 0Dh  +
pop eax  +
jmp loc_104A877  +
mov eax [ebp+arg_1C] +
mov [eax] esi +
mov eax [ebp+arg_18] +
mov [eax] bx +
jmp loc_104A875  +
mov ecx [esi] +
movzx eax word ptr [ecx+56h] +
movzx edx word ptr [ebp+arg_14] +
movzx edi ax +
sub edi edx +
jnz loc_104A6D4  +
cmp word ptr [ebp+arg_10] di +
jnz loc_104A6D4  +
cmp bx 1 +
jz loc_104A6D4  +
cmp bx 2 +
jz loc_104A6D4  +
mov edx 130h +
cmp bx dx +
jz loc_104A6D4  +
inc edx  +
cmp bx dx +
jz loc_104A6D4  +
mov edx 12Eh +
cmp bx dx +
jz loc_104A6D4  +
inc edx  +
cmp bx dx +
jz loc_104A6D4  +
mov edx 12Ch +
cmp bx dx +
jz loc_104A6D4  +
inc edx  +
cmp bx dx +
jnz loc_104A848  +
cmp byte ptr [ebp+lpMem] 0 +
jz loc_104A70D  +
cmp word ptr [ebp+arg_10] 0 +
jnz loc_104A70D  +
cmp bx 1 +
jz loc_104A848  +
cmp bx 2 +
jz loc_104A848  +
mov edx 130h +
cmp bx dx +
jz loc_104A848  +
inc edx  +
cmp bx dx +
jz loc_104A848  +
cmp bx 0Eh +
jnz loc_104A7E7  +
cmp word ptr [ebp+arg_8] 18h +
jnz loc_104A7E7  +
cmp word ptr [ebp+arg_10] 0 +
jnz loc_104A7E7  +
cmp byte ptr [ebp+lpMem] 0 +
jnz loc_104A7E7  +
mov [ebp+arg_10] 10h +
push [ebp+arg_18]  +
sub eax [ebp+arg_14] +
push 0  +
lea edx [ebp+dwBytes] +
push edx  +
mov edx [ecx+5Ch] +
movzx ecx word ptr [ebp+arg_14] +
add edx ecx +
push edx  +
push eax  +
push [ebp+arg_10]  +
push [ebp+arg_8]  +
push ebx  +
push [ebp+arg_C]  +
push [ebp+arg_0]  +
push dword ptr [esi+4]  +
call TdhFormatProperty  +
mov edi eax +
cmp edi 7Ah +
jnz loc_104A844  +
push [ebp+dwBytes]  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
test eax eax +
jz loc_104A85C  +
push [ebp+arg_18]  +
mov eax [esi] +
push [ebp+lpMem]  +
mov edx [eax+5Ch] +
mov ax [eax+56h] +
sub ax word ptr [ebp+arg_14] +
lea ecx [ebp+dwBytes] +
push ecx  +
movzx ecx word ptr [ebp+arg_14] +
add edx ecx +
push edx  +
movzx eax ax +
push eax  +
push [ebp+arg_10]  +
push [ebp+arg_8]  +
push ebx  +
push [ebp+arg_C]  +
push [ebp+arg_0]  +
push dword ptr [esi+4]  +
call TdhFormatProperty  +
mov edi eax +
test edi edi +
jz loc_104A83C  +
push [ebp+lpMem]  +
push 0  +
push hHeap  +
call ds:HeapFree  +
mov eax [ebp+arg_1C] +
and dword ptr [eax] 0 +
jmp loc_104A844  +
test edi edi +
jnz loc_104A73E  +
cmp word ptr [ebp+arg_10] di +
jnz loc_104A835  +
cmp bx 1 +
jz loc_104A835  +
cmp bx 2 +
jz loc_104A835  +
mov edx 130h +
cmp bx dx +
jz loc_104A835  +
inc edx  +
cmp bx dx +
jz loc_104A835  +
mov edx 12Eh +
cmp bx dx +
jz loc_104A835  +
inc edx  +
cmp bx dx +
jz loc_104A835  +
mov edx 12Ch +
cmp bx dx +
jz loc_104A835  +
inc edx  +
cmp bx dx +
jnz loc_104A73E  +
push 6Fh  +
jmp loc_104A667  +
mov eax [ebp+arg_1C] +
mov ecx [ebp+lpMem] +
mov [eax] ecx +
mov eax edi +
jmp loc_104A877  +
push 2  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
test eax eax +
jnz loc_104A863  +
push 8  +
jmp loc_104A667  +
xor ecx ecx +
mov [eax] cx +
mov ecx [ebp+arg_1C] +
mov [ecx] eax +
mov ecx [ebp+arg_18] +
xor eax eax +
mov [ecx] ax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 24h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax [ebp+arg_10] +
movzx eax word ptr [eax] +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
movzx edx word ptr [esi+10h] +
mov [ebp+var_38] eax +
movzx eax word ptr [esi+0Ah] +
mov ebx ecx +
movzx ecx ax +
movzx eax ax +
mov [ebp+var_24] eax +
mov eax [esi] +
mov [ebp+var_4] ecx +
mov ecx [ebp+arg_C] +
push edi  +
mov [ebp+var_10] ebx +
mov byte ptr [ebp+var_14] 0 +
test al 4 +
jz loc_104A8C4  +
movzx edx word ptr [ecx+edx*4] +
and eax 2 +
mov [ebp+arg_4] edx +
jz loc_104A8D6  +
movzx edx word ptr [esi+12h] +
movzx ecx word ptr [ecx+edx*4] +
jmp loc_104A8DA  +
movzx ecx word ptr [esi+12h] +
mov [ebp+var_C] ecx +
test eax eax +
jz loc_104A8E5  +
mov byte ptr [ebp+var_14] 1 +
mov ecx [ebx+0A0h] +
test ecx ecx +
jz loc_104A8F9  +
mov eax [ecx] +
lea edx [ebp+var_4] +
push edx  +
push esi  +
push ebx  +
call dword ptr [eax]  +
mov ecx [ebx+0A4h] +
test ecx ecx +
jz loc_104A90D  +
mov eax [ecx] +
lea edx [ebp+var_24] +
push edx  +
push esi  +
push ebx  +
call dword ptr [eax]  +
mov edi [ebp+arg_0] +
mov ax word ptr [ebp+var_24] +
mov ecx [ebp+var_4] +
mov [edi+1Ch] cx +
mov [edi+1Eh] ax +
movzx eax word ptr [esi+8] +
mov edx 132h +
cmp ax dx +
jnz loc_104A933  +
cmp cx 1 +
jz loc_104A943  +
mov edx 133h +
cmp ax dx +
jnz loc_104A951  +
cmp cx 1 +
jnz loc_104A951  +
movzx eax word ptr [ebp+arg_4] +
mov [ebp+var_C] eax +
mov [ebp+arg_4] 1 +
xor edx edx +
cmp word ptr [ebp+arg_4] dx +
jnz loc_104A987  +
mov dword ptr [edi+20h] 4 +
mov ecx [esi+4] +
cmp ecx edx +
jnz loc_104A96B  +
xor eax eax +
jmp loc_104A970  +
mov eax [ebx+4] +
add eax ecx +
mov ecx [ebp+arg_8] +
mov [edi] eax +
mov [edi+18h] esi +
mov eax [ebx+0Ch] +
mov dword ptr [eax+ecx*4] offset dword_1008298 +
jmp loc_104ADE6  +
mov eax [esi+0Ch] +
mov [ebp+lpMem] edx +
mov [ebp+var_8] edx +
cmp eax edx +
jz loc_104A9B2  +
mov ecx [ebx+4] +
add eax ecx +
jz loc_104A9B2  +
lea ecx [ebp+lpMem] +
push ecx  +
push eax  +
mov ecx ebx +
call sub_1049D5C  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_104ADE8  +
mov eax [ebp+arg_10] +
movzx eax word ptr [eax] +
mov [ebp+var_3C] eax +
mov eax dword_10566D8 +
mov ecx [eax+680h] +
mov eax [ebx] +
movzx eax word ptr [eax+4] +
test al 40h +
jz loc_104A9D4  +
push 40h  +
jmp loc_104A9DE  +
test al 20h +
jnz loc_104A9DC  +
test ecx ecx +
ja loc_104A9DF  +
push 20h  +
pop ecx  +
mov eax [ebp+arg_4] +
shr ecx 3 +
mov [ebp+var_18] ecx +
mov [edi+24h] ax +
cmp ax 1 +
jbe loc_104AA4A  +
movzx eax ax +
dec eax  +
mov [edi+28h] eax +
imul eax eax +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [edi+2Ch] eax +
test eax eax +
jnz loc_104AA1D  +
and [edi+28h] eax +
push 8  +
pop eax  +
jmp loc_104ADE8  +
movzx eax word ptr [esi+8] +
mov ecx 132h +
cmp ax cx +
jnz loc_104AA32  +
cmp word ptr [ebp+var_4] 1 +
jnz loc_104AA43  +
mov ecx 133h +
cmp ax cx +
jnz loc_104AA4A  +
cmp word ptr [ebp+var_4] 1 +
jz loc_104AA4A  +
or dword ptr [edi+20h] 400h +
and [ebp+var_1C] 0 +
xor eax eax +
cmp ax word ptr [ebp+arg_4] +
jnb loc_104AD09  +
xor edx edx +
mov [ebp+var_28] edx +
cmp word ptr [ebp+var_1C] dx +
jz loc_104AAAB  +
movzx eax word ptr [ebp+var_1C] +
mov edi [edi+2Ch] +
mov ecx eax +
imul ecx ecx +
lea edi [ecx+edi-30h] +
movzx ecx word ptr [ebp+arg_4] +
dec ecx  +
cmp eax ecx +
jnz loc_104AAAB  +
movzx eax word ptr [esi+8] +
mov ecx 132h +
cmp ax cx +
jnz loc_104AA93  +
cmp word ptr [ebp+var_4] 1 +
jnz loc_104AAA4  +
mov ecx 133h +
cmp ax cx +
jnz loc_104AAAB  +
cmp word ptr [ebp+var_4] 1 +
jz loc_104AAAB  +
or dword ptr [edi+20h] 800h +
mov ecx [esi+4] +
mov [ebp+var_2C] edx +
cmp ecx edx +
jnz loc_104AAB9  +
xor eax eax +
jmp loc_104AABE  +
mov eax [ebx+4] +
add eax ecx +
mov [edi] eax +
mov eax 12Dh +
mov [edi+18h] esi +
cmp word ptr [ebp+var_4] ax +
jnz loc_104AAD2  +
or dword ptr [edi+20h] 10h +
push [ebp+var_14]  +
and [ebp+var_30] 0 +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
mov eax [ebp+arg_10] +
movzx eax word ptr [eax] +
push eax  +
push [ebp+var_C]  +
movzx eax word ptr [esi+8] +
push [ebp+var_18]  +
mov ecx ebx +
push [ebp+var_4]  +
push eax  +
push 0  +
call sub_104A5B7  +
mov [ebp+var_8] eax +
test eax eax +
jz loc_104AB78  +
cmp eax 6Fh +
jz loc_104AD02  +
cmp eax 3A9Dh +
jnz loc_104AD09  +
movzx eax word ptr [esi+8] +
cmp ax 1 +
jz loc_104AB2E  +
cmp ax 2 +
jnz loc_104AD09  +
mov ecx 130h +
cmp ax 2 +
jnz loc_104AB3A  +
inc ecx  +
push [ebp+var_14]  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_2C] +
push eax  +
mov eax [ebp+arg_10] +
movzx eax word ptr [eax] +
push eax  +
push [ebp+var_C]  +
push [ebp+var_18]  +
push [ebp+var_4]  +
push ecx  +
push 0  +
mov ecx ebx +
call sub_104A5B7  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_104AD09  +
or dword ptr [edi+20h] 200h +
mov [ebp+var_30] 1 +
cmp [ebp+var_30] 0 +
mov eax [ebp+var_28] +
mov [edi+4] eax +
jnz loc_104ACA2  +
and [ebp+var_28] 0 +
mov eax 12Dh +
cmp word ptr [ebp+var_24] ax +
jnz loc_104AB9B  +
or dword ptr [edi+20h] 20h +
push [ebp+var_14]  +
mov ecx [ebp+var_10] +
lea ebx [edi+8] +
push ebx  +
lea eax [ebp+var_28] +
push eax  +
mov eax [ebp+arg_10] +
movzx eax word ptr [eax] +
push eax  +
push [ebp+var_C]  +
movzx eax word ptr [esi+8] +
push [ebp+var_18]  +
push [ebp+var_24]  +
push eax  +
push [ebp+lpMem]  +
call sub_104A5B7  +
mov [ebp+var_8] eax +
mov [ebp+var_34] 1 +
test eax eax +
jz loc_104AC13  +
cmp eax 3A9Dh +
jnz loc_104AC05  +
push [ebp+var_14]  +
mov ecx [ebp+var_10] +
push ebx  +
lea eax [ebp+var_28] +
push eax  +
mov eax [ebp+arg_10] +
movzx eax word ptr [eax] +
push eax  +
push [ebp+var_C]  +
movzx eax word ptr [esi+8] +
push [ebp+var_18]  +
push [ebp+var_4]  +
push eax  +
push 0  +
call sub_104A5B7  +
mov [ebp+var_8] eax +
cmp [ebp+var_8] 0 +
jnz loc_104AD09  +
and [ebp+var_34] 0 +
cmp [ebp+lpMem] 0 +
jz loc_104ACB3  +
mov eax [ebp+var_10] +
mov dword ptr [eax+14h] 1 +
or dword ptr [edi+20h] 40h +
cmp [ebp+arg_18] 0 +
jz loc_104AC5D  +
push [ebp+var_14]  +
mov ecx [ebp+var_10] +
lea eax [edi+14h] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
mov eax [ebp+arg_10] +
movzx eax word ptr [eax] +
push eax  +
push [ebp+var_C]  +
movzx eax word ptr [esi+0Ah] +
push [ebp+var_18]  +
push eax  +
movzx eax word ptr [esi+8] +
push eax  +
push 0  +
call sub_104A5B7  +
cmp [ebp+var_34] 0 +
mov eax [ebp+lpMem] +
jnz loc_104AC6F  +
xor eax eax +
or dword ptr [edi+20h] 100h +
cmp [ebp+arg_18] 0 +
jz loc_104ACB3  +
push [ebp+var_14]  +
add edi 10h +
push edi  +
lea ecx [ebp+var_28] +
push ecx  +
mov ecx [ebp+arg_10] +
movzx ecx word ptr [ecx] +
push ecx  +
push [ebp+var_C]  +
movzx ecx word ptr [esi+0Ah] +
push [ebp+var_18]  +
push ecx  +
movzx ecx word ptr [esi+8] +
push ecx  +
mov ecx [ebp+var_10] +
push eax  +
call sub_104A5B7  +
jmp loc_104ACB3  +
add edi 8 +
push edi  +
push eax  +
call sub_104A221  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_104AD09  +
mov eax [ebp+arg_0] +
xor edi edi +
cmp [eax] edi +
jz loc_104ACDB  +
cmp [ebp+arg_14] 0 +
jnz loc_104ACDB  +
cmp word ptr [ebp+var_1C] di +
jnz loc_104ACDB  +
mov ecx [ebp+arg_10] +
movzx ecx word ptr [ecx] +
push [ebp+var_2C]  +
push ecx  +
mov ecx [ebp+var_10] +
push eax  +
call sub_1049C2E  +
mov cx word ptr [ebp+var_2C] +
mov eax [ebp+arg_10] +
add [eax] cx +
cmp [ebp+var_30] edi +
jnz loc_104AD09  +
inc [ebp+var_1C]  +
mov ax word ptr [ebp+var_1C] +
cmp ax word ptr [ebp+arg_4] +
jnb loc_104AD09  +
mov ebx [ebp+var_10] +
mov edi [ebp+arg_0] +
jmp loc_104AA5A  +
or dword ptr [edi+20h] 80h +
xor edi edi +
cmp [ebp+lpMem] edi +
jz loc_104AD20  +
push [ebp+lpMem]  +
push edi  +
push hHeap  +
call ds:HeapFree  +
mov eax [ebp+var_8] +
cmp eax edi +
jz loc_104AD43  +
cmp eax 3A9Dh +
jnz loc_104ADE8  +
cmp [esi+8] di +
jnz loc_104ADE8  +
push 32h  +
jmp loc_104AA17  +
mov edi [ebp+var_10] +
mov eax [edi+4] +
cmp dword ptr [eax+30h] 0 +
mov ebx [ebp+arg_8] +
jnz loc_104ADAD  +
cmp word ptr [ebp+arg_4] 1 +
jnz loc_104ADAD  +
mov ecx [edi] +
mov ax [ecx+56h] +
sub ax word ptr [ebp+var_38] +
movzx edx word ptr [esi+8] +
movzx esi ax +
movzx eax word ptr [ebp+var_38] +
add eax [ecx+5Ch] +
cmp dx 4 +
jnz loc_104AD82  +
cmp si 1 +
jb loc_104ADAD  +
movzx eax byte ptr [eax] +
jmp loc_104ADA7  +
cmp dx 6 +
jnz loc_104AD93  +
cmp si 2 +
jb loc_104ADAD  +
movzx eax word ptr [eax] +
jmp loc_104ADA7  +
cmp dx 8 +
jz loc_104AD9F  +
cmp dx 14h +
jnz loc_104ADAD  +
cmp si 4 +
jb loc_104ADAD  +
mov eax [eax] +
mov ecx [ebp+arg_C] +
mov [ecx+ebx*4] eax +
cmp [ebp+arg_14] 0 +
jnz loc_104ADE6  +
cmp word ptr [ebp+arg_4] 1 +
jbe loc_104ADDA  +
mov eax [ebp+arg_10] +
movzx eax word ptr [eax] +
mov esi [ebp+arg_0] +
push eax  +
push [ebp+var_3C]  +
add esi 0Ch +
push esi  +
mov ecx edi +
call sub_1049EAD  +
test eax eax +
jnz loc_104ADE8  +
mov ecx [esi] +
jmp loc_104ADE0  +
mov ecx [ebp+arg_0] +
mov ecx [ecx+8] +
mov eax [edi+0Ch] +
mov [eax+ebx*4] ecx +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_4] +
test byte ptr [ebx] 4 +
movzx eax word ptr [ebx+10h] +
push esi  +
push edi  +
mov esi ecx +
jz loc_104AE19  +
mov ecx [ebp+arg_8] +
movzx ecx word ptr [ecx+eax*4] +
mov [ebp+var_8] ecx +
jmp loc_104AE1E  +
mov [ebp+var_8] eax +
mov ecx eax +
mov edx [ebx+4] +
test edx edx +
jnz loc_104AE29  +
xor eax eax +
jmp loc_104AE2E  +
mov eax [esi+4] +
add eax edx +
mov edi [ebp+arg_0] +
mov edx [esi+8] +
imul edi edi +
mov [edi+edx] eax +
mov eax [esi+8] +
mov [edi+eax+18h] ebx +
test cx cx +
jnz loc_104AE63  +
mov eax [esi+8] +
mov ecx [ebp+arg_0] +
mov dword ptr [edi+eax+20h] 0Fh +
mov eax [esi+0Ch] +
mov dword ptr [eax+ecx*4] offset dword_1008298 +
jmp loc_104AFDC  +
mov eax [ebp+arg_C] +
movzx eax word ptr [eax] +
mov [ebp+var_14] eax +
mov eax [esi+8] +
mov dword ptr [edi+eax+20h] 8 +
mov eax [esi+8] +
mov [edi+eax+24h] cx +
mov eax [esi+8] +
mov cx [ebx+0Ah] +
mov [edi+eax+26h] cx +
mov eax [esi+8] +
add eax edi +
movzx ecx word ptr [eax+26h] +
movzx edx word ptr [eax+24h] +
imul ecx edx +
mov [eax+28h] ecx +
mov eax [esi+8] +
cmp dword ptr [edi+eax+28h] 0 +
jbe loc_104AFDC  +
mov eax [edi+eax+28h] +
imul eax eax +
push eax  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov ecx [esi+8] +
mov [edi+ecx+2Ch] eax +
mov eax [esi+8] +
xor edx edx +
cmp [edi+eax+2Ch] edx +
jnz loc_104AEE0  +
push 8  +
mov [edi+eax+28h] edx +
pop eax  +
jmp loc_104AFDE  +
mov [ebp+arg_4] edx +
mov [ebp+var_10] edx +
xor eax eax +
jmp loc_104AFA5  +
movzx eax word ptr [ebx+8] +
mov ecx [esi+4] +
imul eax eax +
lea eax [eax+ecx+70h] +
movzx ecx word ptr [ebp+arg_4] +
imul ecx ecx +
mov [ebp+var_C] eax +
mov eax [esi+8] +
mov eax [edi+eax+2Ch] +
mov dword ptr [eax+ecx+20h] 1 +
mov eax [esi+8] +
add eax edi +
xor ecx ecx +
mov [ebp+var_4] edx +
cmp cx [eax+26h] +
jnb loc_104AF72  +
push [ebp+arg_10]  +
movzx ecx word ptr [ebx+8] +
movzx edx word ptr [ebp+var_4] +
push 1  +
push [ebp+arg_C]  +
add ecx edx +
push [ebp+arg_8]  +
push ecx  +
movzx ecx word ptr [ebp+arg_4] +
push [ebp+var_C]  +
imul ecx ecx +
add ecx [eax+2Ch] +
push ecx  +
mov ecx esi +
call sub_104A883  +
test eax eax +
jnz loc_104AFDE  +
add [ebp+var_C] 18h +
inc [ebp+arg_4]  +
inc [ebp+var_4]  +
mov eax [esi+8] +
mov cx word ptr [ebp+var_4] +
add eax edi +
cmp cx [eax+26h] +
jb loc_104AF24  +
xor edx edx +
movzx ecx word ptr [ebp+arg_4] +
mov eax [esi+8] +
imul ecx ecx +
mov eax [edi+eax+2Ch] +
lea eax [eax+ecx-30h] +
mov ecx [eax+28h] +
cmp ecx edx +
jbe loc_104AF9A  +
mov eax [eax+2Ch] +
imul ecx ecx +
lea eax [ecx+eax-10h] +
or dword ptr [eax] 2 +
jmp loc_104AF9E  +
or dword ptr [eax+20h] 2 +
inc [ebp+var_10]  +
mov ax word ptr [ebp+var_10] +
cmp ax word ptr [ebp+var_8] +
jb loc_104AEED  +
mov eax [ebp+arg_C] +
movzx eax word ptr [eax] +
push eax  +
mov eax [esi+8] +
push [ebp+var_14]  +
lea eax [edi+eax+0Ch] +
push eax  +
mov ecx esi +
call sub_1049EAD  +
test eax eax +
jnz loc_104AFDE  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
mov eax [edi+eax+0Ch] +
mov edx [ebp+arg_0] +
mov [ecx+edx*4] eax +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
mov [ebp+lpMem] edi +
mov [esi] eax +
call sub_1049CD3  +
mov ecx [esi+1Ch] +
mov [ebp+arg_0] eax +
cmp ecx edi +
jz loc_104B014  +
mov eax [ecx] +
push esi  +
call dword ptr [eax]  +
cmp [ebp+arg_0] edi +
jz loc_104B021  +
mov eax [ebp+arg_0] +
jmp loc_104B1D3  +
mov eax [esi] +
cmp [eax+5Ch] edi +
jnz loc_104B03B  +
mov eax [esi+4] +
cmp [eax+68h] edi +
jbe loc_104B03B  +
push 0Dh  +
pop eax  +
mov [esi+18h] eax +
jmp loc_104B1D3  +
lea eax [ebp+dwBytes] +
push eax  +
mov eax [esi+4] +
mov eax [eax+68h] +
push 30h  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_101B8F5  +
test eax eax +
jl loc_104B030  +
mov edi ds:HeapAlloc +
push ebx  +
push [ebp+dwBytes]  +
push 8  +
pop ebx  +
push ebx  +
push hHeap  +
call edi  +
mov [esi+8] eax +
test eax eax +
jz loc_104B0C7  +
mov eax [esi+4] +
mov eax [eax+68h] +
shl eax 2 +
push eax  +
push ebx  +
push hHeap  +
call edi  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_104B0C7  +
mov eax [esi+4] +
cmp dword ptr [eax+30h] 0 +
jnz loc_104B0D1  +
mov eax [eax+64h] +
lea ecx [ebp+dwBytes] +
push ecx  +
push 4  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_101B8F5  +
test eax eax +
jge loc_104B0B4  +
push 0Dh  +
pop eax  +
jmp loc_104B1CF  +
push [ebp+dwBytes]  +
push ebx  +
push hHeap  +
call edi  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_104B0D1  +
mov [esi+18h] ebx +
mov eax ebx +
jmp loc_104B1D2  +
mov eax [ebp+arg_4] +
shr eax 1 +
and al 1 +
mov byte ptr [ebp+dwBytes] al +
mov eax [esi+4] +
xor edi edi +
xor ebx ebx +
mov [ebp+var_4] edi +
cmp [eax+68h] edi +
jbe loc_104B183  +
mov [ebp+var_C] edi +
mov eax [esi+4] +
push [ebp+dwBytes]  +
lea eax [eax+edi+70h] +
test byte ptr [eax] 1 +
lea ecx [ebp+var_4] +
jz loc_104B112  +
push ecx  +
push [ebp+lpMem]  +
mov ecx esi +
push eax  +
push ebx  +
call sub_104ADF4  +
jmp loc_104B128  +
push 0  +
push ecx  +
push [ebp+lpMem]  +
mov ecx esi +
push ebx  +
push eax  +
mov eax [esi+8] +
add eax [ebp+var_C] +
push eax  +
call sub_104A883  +
mov [ebp+arg_0] eax +
test eax eax +
jnz loc_104B144  +
inc dword ptr [esi+10h]  +
mov eax [esi+4] +
add [ebp+var_C] 30h +
inc ebx  +
add edi 18h +
cmp ebx [eax+68h] +
jb loc_104B0F1  +
jmp loc_104B183  +
cmp [ebp+arg_0] 6Fh +
jnz loc_104B183  +
test byte ptr [ebp+arg_4] 1 +
jz loc_104B183  +
mov eax [esi] +
movzx eax word ptr [eax+56h] +
cmp word ptr [ebp+var_4] ax +
jnb loc_104B180  +
push eax  +
push [ebp+var_4]  +
lea eax [esi+0A8h] +
push eax  +
mov ecx esi +
call sub_1049EAD  +
test eax eax +
jz loc_104B177  +
mov [ebp+arg_0] eax +
jmp loc_104B183  +
mov eax [esi] +
movzx eax word ptr [eax+56h] +
mov [ebp+var_4] eax +
inc dword ptr [esi+10h]  +
mov eax [esi] +
movzx eax word ptr [eax+56h] +
cmp word ptr [ebp+var_4] ax +
jnb loc_104B1B5  +
push eax  +
push [ebp+var_4]  +
lea eax [esi+0ACh] +
push eax  +
mov ecx esi +
call sub_1049EAD  +
test eax eax +
jz loc_104B1A8  +
mov [ebp+arg_0] eax +
cmp [ebp+arg_0] 0 +
jnz loc_104B1B5  +
mov [ebp+arg_0] 3A9Dh +
cmp [ebp+lpMem] 0 +
jz loc_104B1CC  +
push [ebp+lpMem]  +
push 0  +
push hHeap  +
call ds:HeapFree  +
mov eax [ebp+arg_0] +
mov [esi+18h] eax +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 114h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_108] 0 +
and [ebp+var_10C] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
mov esi [edi] +
movzx edx word ptr [esi+54h] +
mov eax [edi+4] +
mov [ebp+var_114] ebx +
test edx edx +
jbe loc_104B26E  +
mov ecx [esi+58h] +
add ecx 8 +
mov [ebp+var_110] edx +
movzx edx word ptr [ecx-6] +
xor ebx ebx +
inc ebx  +
cmp bx dx +
jnz loc_104B24D  +
mov edx [ecx] +
mov [ebp+var_108] edx +
jmp loc_104B25D  +
push 4  +
pop ebx  +
cmp bx dx +
jnz loc_104B25D  +
mov edx [ecx] +
mov [ebp+var_10C] edx +
add ecx 10h +
dec [ebp+var_110]  +
jnz loc_104B237  +
mov ebx [ebp+var_114] +
test eax eax +
jz loc_104B2A3  +
mov ecx [eax+30h] +
cmp ecx 1 +
jnz loc_104B27F  +
mov ecx [eax+44h] +
jmp loc_104B296  +
cmp ecx 2 +
jz loc_104B293  +
test ecx ecx +
jnz loc_104B2A3  +
mov ecx [eax+50h] +
test ecx ecx +
jz loc_104B293  +
add ecx eax +
jnz loc_104B2A0  +
mov ecx [eax+34h] +
test ecx ecx +
jz loc_104B2A3  +
add ecx eax +
test ecx ecx +
jz loc_104B2A3  +
push ecx  +
jmp loc_104B2B9  +
lea eax [esi+18h] +
push eax  +
push 80h  +
lea eax [ebp+var_104] +
push eax  +
call sub_1042D55  +
push eax  +
push offset a12ws  +
push ebx  +
call sub_1024264  +
add esp 0Ch +
test byte ptr [esi+4] 8 +
jz loc_104B2D3  +
movzx ecx word ptr [esi+28h] +
jmp loc_104B2DB  +
movzx ax byte ptr [esi+2Dh] +
movzx ecx ax +
mov eax [edi+4] +
test eax eax +
jz loc_104B2F1  +
cmp dword ptr [eax+48h] 0 +
jz loc_104B2FF  +
mov edi eax +
mov eax [edi+48h] +
add eax edi +
jmp loc_104B2F3  +
xor eax eax +
test eax eax +
jz loc_104B2FF  +
push eax  +
push offset a10ws  +
jmp loc_104B308  +
movzx eax cx +
push eax  +
push offset a10d  +
push ebx  +
call sub_1024264  +
mov eax dword_10566D8 +
add esp 0Ch +
test dword ptr [eax+3B0h] 200h +
jz loc_104B3EF  +
push dword ptr [esi+34h]  +
movzx eax word ptr [esi+2Eh] +
push dword ptr [esi+30h]  +
push eax  +
movzx eax byte ptr [esi+2Dh] +
push eax  +
movzx eax byte ptr [esi+2Ch] +
push eax  +
movzx eax byte ptr [esi+2Bh] +
push eax  +
movzx eax byte ptr [esi+2Ah] +
push eax  +
movzx eax word ptr [esi+28h] +
push eax  +
push offset a12d10d10d10d10  +
push ebx  +
call sub_1024264  +
movzx eax byte ptr [esi+50h] +
push eax  +
push dword ptr [esi+8]  +
push dword ptr [esi+0Ch]  +
push offset a0x08x0x08x20u  +
push ebx  +
call sub_1024264  +
mov eax [ebp+var_10C] +
add esp 3Ch +
test eax eax +
jz loc_104B38D  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
push offset a12d20d  +
push ebx  +
call sub_1024264  +
add esp 10h +
jmp loc_104B398  +
push ebx  +
push offset asc_10171C0  +
call sub_1023CCF  +
lea eax [esi+40h] +
push eax  +
push 80h  +
lea eax [ebp+var_104] +
push eax  +
call sub_1042D55  +
cmp [ebp+var_108] 0 +
push eax  +
jz loc_104B3E1  +
mov edi offset a40ws +
push edi  +
push ebx  +
call sub_1024264  +
add esp 0Ch +
push [ebp+var_108]  +
lea eax [ebp+var_104] +
push 80h  +
push eax  +
call sub_1042D55  +
push eax  +
push edi  +
jmp loc_104B3E6  +
push offset a40ws_0  +
push ebx  +
call sub_1024264  +
add esp 0Ch +
push dword ptr [esi+14h]  +
push dword ptr [esi+10h]  +
push offset a20i64u  +
push ebx  +
call sub_1024264  +
add esp 10h +
cmp dword_1057928 0 +
jnz loc_104B43A  +
mov eax [esi+38h] +
imul eax dword_1079A80 +
push eax  +
mov edi offset a10lu +
push edi  +
push ebx  +
call sub_1024264  +
mov eax [esi+3Ch] +
imul eax dword_1079A80 +
push eax  +
push edi  +
push ebx  +
call sub_1024264  +
add esp 18h +
jmp loc_104B44E  +
push dword ptr [esi+3Ch]  +
push dword ptr [esi+38h]  +
push offset aI64u_0  +
push ebx  +
call sub_1024264  +
add esp 10h +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_101CA75  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push edi  +
mov edi [ebp+arg_4] +
mov eax [edi+4] +
cmp dword ptr [eax+68h] 0 +
jz loc_104B71C  +
mov eax [edi+18h] +
test eax eax +
jz loc_104B496  +
cmp eax 6Fh +
jz loc_104B496  +
cmp eax 3A9Dh +
jnz loc_104B71C  +
push ebx  +
push esi  +
xor ebx ebx +
inc ebx  +
push edi  +
lea ecx [ebp+var_1C] +
mov [ebp+var_8] ebx +
call sub_1049F5B  +
and [ebp+var_4] 0 +
jmp loc_104B6D4  +
test byte ptr [esi+20h] 18h +
jnz loc_104B6D4  +
xor eax eax +
cmp [ebp+var_8] eax +
jz loc_104B4C6  +
mov [ebp+var_8] eax +
jmp loc_104B4D8  +
cmp [ebp+var_4] eax +
jnz loc_104B4D8  +
push [ebp+NumberOfBytesWritten]  +
push offset asc_101730C  +
call sub_1023CCF  +
mov edx [esi+18h] +
test edx edx +
jz loc_104B536  +
movzx eax word ptr [edx+8] +
cmp ax bx +
jz loc_104B522  +
cmp ax 2 +
jz loc_104B522  +
mov ecx 12Dh +
cmp ax cx +
jz loc_104B522  +
add ecx 2 +
cmp ax cx +
jz loc_104B522  +
mov ecx 12Ch +
cmp ax cx +
jz loc_104B522  +
add ecx 2 +
cmp ax cx +
jz loc_104B522  +
mov ecx 131h +
cmp ax cx +
jz loc_104B522  +
dec ecx  +
cmp ax cx +
jnz loc_104B536  +
push dword ptr [esi+8]  +
push 0  +
push 0  +
push [ebp+NumberOfBytesWritten]  +
call sub_101D200  +
jmp loc_104B6B0  +
mov edi off_1056240 +
test edx edx +
jz loc_104B5B7  +
movzx ecx word ptr [edx+8] +
cmp cx 11h +
jz loc_104B5C5  +
cmp cx 12h +
jz loc_104B5C5  +
cmp cx 13h +
jz loc_104B5C5  +
mov eax 132h +
cmp cx ax +
jnz loc_104B566  +
cmp [esi+1Eh] bx +
jz loc_104B5C5  +
mov eax 133h +
cmp cx ax +
jnz loc_104B576  +
cmp [esi+1Eh] bx +
jz loc_104B5C5  +
mov eax 136h +
cmp cx ax +
jnz loc_104B58D  +
mov eax [esi+8] +
test eax eax +
jz loc_104B58D  +
cmp word ptr [eax] 30h +
jnz loc_104B5C5  +
cmp cx 0Eh +
jnz loc_104B5B7  +
movzx eax word ptr [esi+1Eh] +
cmp ax 18h +
jz loc_104B5A3  +
cmp ax 19h +
jnz loc_104B5B7  +
mov eax [esi+8] +
test eax eax +
jz loc_104B5B7  +
cmp word ptr [eax] 30h +
jnz loc_104B5C5  +
cmp word ptr [eax+2] 78h +
jnz loc_104B5C5  +
mov eax [esi+20h] +
test al 40h +
jz loc_104B5D0  +
test eax 100h +
jnz loc_104B5D0  +
mov edi off_1056244 +
jmp loc_104B69B  +
movzx ecx word ptr [edx+8] +
mov ebx 132h +
cmp cx bx +
jz loc_104B5EB  +
inc ebx  +
cmp cx bx +
jnz loc_104B60D  +
test eax 400h +
jz loc_104B5F6  +
mov edi off_1056254 +
jmp loc_104B69B  +
cmp cx bx +
jnz loc_104B60D  +
test eax 800h +
jz loc_104B60D  +
mov edi off_1056258 +
jmp loc_104B69B  +
test edx edx +
jz loc_104B69B  +
cmp cx 5 +
jz loc_104B628  +
cmp cx 6 +
jnz loc_104B630  +
cmp word ptr [esi+1Eh] 11h +
jz loc_104B630  +
mov edi off_1056248 +
jmp loc_104B69B  +
test edx edx +
jz loc_104B69B  +
cmp cx 7 +
jz loc_104B663  +
cmp cx 8 +
jz loc_104B646  +
cmp cx 14h +
jnz loc_104B64D  +
cmp word ptr [esi+1Eh] 1Bh +
jz loc_104B663  +
cmp cx 8 +
jnz loc_104B66B  +
movzx eax word ptr [esi+1Eh] +
cmp ax 12h +
jz loc_104B66B  +
cmp ax 1Dh +
jz loc_104B66B  +
mov edi off_105624C +
jmp loc_104B69B  +
test edx edx +
jz loc_104B69B  +
cmp cx 9 +
jz loc_104B695  +
cmp cx 0Ah +
jz loc_104B681  +
cmp cx 15h +
jnz loc_104B688  +
cmp word ptr [esi+1Eh] 1Bh +
jz loc_104B695  +
cmp cx 0Ah +
jnz loc_104B69B  +
cmp word ptr [esi+1Eh] 13h +
jz loc_104B69B  +
mov edi off_1056250 +
push dword ptr [esi+8]  +
push edi  +
push [ebp+NumberOfBytesWritten]  +
call sub_1024264  +
mov edi [ebp+arg_4] +
xor ebx ebx +
add esp 0Ch +
inc ebx  +
mov esi [esi+20h] +
test esi 400h +
jz loc_104B6C0  +
mov [ebp+var_4] ebx +
jmp loc_104B6CC  +
test esi 800h +
jz loc_104B6CC  +
and [ebp+var_4] 0 +
test esi 200h +
jnz loc_104B6E6  +
lea ecx [ebp+var_1C] +
call sub_104A076  +
mov esi eax +
test esi esi +
jnz loc_104B4B0  +
mov eax [edi+0ACh] +
pop esi  +
pop ebx  +
test eax eax +
jnz loc_104B6FC  +
mov eax [edi+0A8h] +
test eax eax +
jz loc_104B733  +
cmp [ebp+var_8] 0 +
jnz loc_104B70F  +
push [ebp+NumberOfBytesWritten]  +
push offset asc_101730C  +
call sub_1023CCF  +
push dword ptr [edi+0ACh]  +
push offset a0xWs_0  +
jmp loc_104B728  +
mov eax [edi] +
movzx eax word ptr [eax+56h] +
push eax  +
push offset aDatasizeD  +
push [ebp+NumberOfBytesWritten]  +
call sub_1024264  +
add esp 0Ch +
xor eax eax +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
push esi  +
push edi  +
mov ebx ecx +
call sub_104B1EC  +
mov eax [esi+4] +
test eax eax +
jz loc_104B778  +
cmp dword ptr [eax+30h] 2 +
jnz loc_104B76D  +
push dword ptr [esi]  +
push edi  +
call sub_101E090  +
jmp loc_104B7A2  +
push esi  +
push edi  +
mov ecx ebx +
call sub_104B466  +
jmp loc_104B7A2  +
mov esi [esi] +
test byte ptr [esi+4] 4 +
jz loc_104B78F  +
push dword ptr [esi+5Ch]  +
push 0  +
push 0  +
push edi  +
call sub_101D200  +
jmp loc_104B7A2  +
movzx eax word ptr [esi+56h] +
push eax  +
push offset aDatasizeD  +
push edi  +
call sub_1024264  +
add esp 0Ch +
push edi  +
push offset asc_1017314  +
call sub_1023CCF  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_10566D8 +
test byte ptr [eax+3B0h] 20h +
jnz loc_104B7EE  +
mov eax [ebp+0Ch] +
movzx eax word ptr [eax+8] +
cmp ax 11h +
jz loc_104B7E1  +
cmp ax 12h +
jnz loc_104B7EE  +
mov ecx [ebp+10h] +
push 21h  +
pop eax  +
mov [ecx] ax +
xor eax eax +
jmp loc_104B7F1  +
xor eax eax +
inc eax  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
mov ecx [edx+4] +
mov dx [edx] +
shr dx 1 +
push esi  +
mov esi [ebp+arg_4] +
mov eax [esi+4] +
push edi  +
movzx edi dx +
mov dx [esi] +
shr dx 1 +
cmp di dx +
jz loc_104B828  +
xor al al +
jmp loc_104B8A8  +
cmp [ebp+arg_8] 0 +
jz loc_104B886  +
test di di +
jz loc_104B8A6  +
sub eax ecx +
lea edx [eax+ecx-2] +
mov ax [ecx] +
mov si [edx+2] +
inc ecx  +
inc ecx  +
inc edx  +
inc edx  +
cmp ax si +
jz loc_104B879  +
movzx eax word ptr [ecx-2] +
cmp ax 61h +
jb loc_104B85C  +
cmp ax 7Ah +
ja loc_104B85C  +
add eax 0FFFFFFE0h +
movzx esi ax +
movzx eax word ptr [edx] +
cmp ax 61h +
jb loc_104B871  +
cmp ax 7Ah +
ja loc_104B871  +
add eax 0FFFFFFE0h +
movzx eax ax +
cmp si ax +
jnz loc_104B821  +
add edi 0FFFFh +
test di di +
jnz loc_104B839  +
jmp loc_104B8A6  +
test di di +
jz loc_104B8A6  +
sub eax ecx +
mov dx [ecx] +
mov si [eax+ecx] +
inc ecx  +
inc ecx  +
cmp dx si +
jnz loc_104B821  +
add edi 0FFFFh +
test di di +
jnz loc_104B88D  +
mov al 1 +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
mov eax [ebp+arg_0] +
and [ebp+arg_4] 0 +
shr edx 1 +
test eax eax +
jz loc_104B8DC  +
cmp edx 7FFFFFFFh +
ja loc_104B8DC  +
push edi  +
lea edi [ebp+arg_4] +
call sub_101F0EA  +
pop edi  +
jmp loc_104B8E1  +
mov eax 80070057h +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_104B8F8  +
test eax eax +
jl loc_104B8F5  +
mov edx [ebp+arg_4] +
add edx edx +
mov [ecx] edx +
jmp loc_104B8F8  +
and dword ptr [ecx] 0 +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
mov esi [ebp+arg_8] +
lea eax [ebp+arg_8] +
push eax  +
push 0FFFFFFFEh  +
push esi  +
call sub_104B8B3  +
test eax eax +
jge loc_104B920  +
xor al al +
jmp loc_104B941  +
mov eax [ebp+arg_8] +
push [ebp+arg_C]  +
mov word ptr [ebp+var_8] ax +
add eax 2 +
mov word ptr [ebp+var_8+2] ax +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
mov [ebp+var_4] esi +
call sub_104B7FA  +
pop esi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_C] +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [ebp+arg_10] +
xor edx edx +
push edi  +
mov [eax] edx +
push 2Dh  +
xor ebx ebx +
pop eax  +
cmp ax [ecx] +
mov [ebp+var_4] edx +
setz bl  +
mov eax ebx +
mov [esi] eax +
cmp eax edx +
jz loc_104B97A  +
add ecx 2 +
mov esi dword_10579A0 +
mov [ebp+arg_0] ecx +
mov edi offset dword_10579A0 +
jmp loc_104B9E3  +
mov ecx [esi+24h] +
cmp ecx edx +
jz loc_104B9A0  +
cmp [ebp+arg_4] edx +
jnz loc_104B99B  +
cmp [esi+14h] edx +
jnz loc_104B9A0  +
xor eax eax +
inc eax  +
jmp loc_104B9A2  +
xor eax eax +
cmp [esi+28h] edx +
jz loc_104B9B1  +
cmp [ebp+arg_4] edx +
jz loc_104B9B1  +
xor ebx ebx +
inc ebx  +
jmp loc_104B9B3  +
xor ebx ebx +
cmp eax edx +
jz loc_104B9C9  +
push ecx  +
push [ebp+arg_0]  +
call ds:__imp__wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_104B9F3  +
xor edx edx +
cmp ebx edx +
jz loc_104B9E1  +
push dword ptr [esi+28h]  +
push [ebp+arg_0]  +
call ds:__imp__wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_104B9F9  +
xor edx edx +
mov esi [esi] +
cmp esi edi +
jnz loc_104B98A  +
cmp [ebp+arg_4] edx +
jnz loc_104BA1A  +
mov eax dword_10579A0 +
jmp loc_104BA16  +
and dword ptr [esi+18h] 0 +
jmp loc_104BA00  +
mov dword ptr [esi+18h] 1 +
mov eax [ebp+arg_8] +
mov [eax] esi +
jmp loc_104BA26  +
cmp [eax+48h] edx +
jnz loc_104BA14  +
xor ecx ecx +
inc ecx  +
test [eax+20h] ecx +
jnz loc_104BA30  +
mov eax [eax] +
cmp eax edi +
jnz loc_104BA07  +
mov eax [ebp+arg_8] +
mov [ebp+var_4] 1 +
mov [eax] edx +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
mov esi [ebp+arg_8] +
mov [esi] eax +
mov eax [ebp+arg_C] +
mov [eax] ecx +
mov eax [ebp+arg_10] +
jmp loc_104BA24  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
and dword ptr [ecx] 0 +
mov eax dword_10579A0 +
mov edx offset dword_10579A0 +
push edi  +
cmp eax edx +
jz loc_104BA89  +
cmp dword ptr [eax+48h] 0 +
jz loc_104BA73  +
mov edi [ebp+arg_0] +
cmp edi [eax+44h] +
jnz loc_104BA73  +
cmp dword ptr [ecx] 0 +
jnz loc_104BA82  +
mov [ecx] eax +
mov eax [eax] +
cmp eax edx +
jnz loc_104BA5E  +
cmp dword ptr [ecx] 0 +
jz loc_104BA89  +
xor eax eax +
jmp loc_104BA8C  +
mov eax 80070057h +
jmp loc_104BA8C  +
xor eax eax +
inc eax  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi dword_10579A0 +
cmp esi offset dword_10579A0 +
jz loc_104BB46  +
push ebx  +
push edi  +
xor ebx ebx +
cmp [esi+48h] ebx +
jz loc_104BB36  +
cmp [esi+38h] ebx +
jnz loc_104BAE1  +
cmp dword ptr [esi+18h] 1 +
jnz loc_104BACA  +
mov eax [esi+28h] +
jmp loc_104BACD  +
mov eax [esi+24h] +
push eax  +
push 3C2Bh  +
push ebx  +
call sub_104D8EC  +
add esp 0Ch +
mov eax 80070057h +
cmp [esi+58h] ebx +
jz loc_104BB36  +
xor edi edi +
cmp dword_10579BC ebx +
jbe loc_104BB36  +
mov ecx [esi+58h] +
lea ecx [ecx+edi*4] +
cmp [ecx] ebx +
jz loc_104BB2D  +
mov ecx [ecx] +
cmp dword ptr [ecx+18h] 1 +
jnz loc_104BB07  +
mov ecx [ecx+28h] +
jmp loc_104BB0A  +
mov ecx [ecx+24h] +
cmp dword ptr [esi+18h] 1 +
jnz loc_104BB15  +
mov eax [esi+28h] +
jmp loc_104BB18  +
mov eax [esi+24h] +
push ecx  +
push eax  +
push 3C28h  +
push ebx  +
call sub_104D8EC  +
add esp 10h +
mov eax 80070057h +
inc edi  +
cmp edi dword_10579BC +
jb loc_104BAF0  +
mov esi [esi] +
cmp esi offset dword_10579A0 +
jnz loc_104BAB5  +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test dword ptr [eax+20h] 400h +
jz loc_104BB66  +
mov eax [eax+48h] +
jmp loc_104BB69  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+dwBytes] +
mov ecx [esi+20h] +
mov [ebp+dwBytes] ecx +
and [ebp+dwBytes] 1 +
push edi  +
mov eax offset dword_1008298 +
mov [ebp+var_4] offset asc_1017394 +
jnz loc_104BB98  +
mov [ebp+var_4] eax +
mov edi [esi+14h] +
cmp edi 1 +
jnz loc_104BBA5  +
mov edx [esi+28h] +
jmp loc_104BBA8  +
mov edx [esi+24h] +
push ebx  +
mov ebx offset asc_101738C +
test cl 4 +
jnz loc_104BBB5  +
mov ebx eax +
mov ecx offset asc_1003E24 +
cmp edi 1 +
jz loc_104BBC1  +
mov ecx eax +
cmp [ebp+dwBytes] 0 +
jz loc_104BBCC  +
mov eax offset asc_1017388 +
push [ebp+var_4]  +
push edx  +
push ebx  +
push ecx  +
push eax  +
lea eax [ebp+dwBytes] +
push offset Source  +
push eax  +
call sub_104D8B7  +
mov edi [ebp+dwBytes] +
add esp 1Ch +
add edi 2 +
cmp dword ptr [esi+1Ch] 0 +
pop ebx  +
jz loc_104BC52  +
test byte ptr [esi+20h] 2 +
mov eax offset asc_101734C +
jnz loc_104BC01  +
mov eax offset asc_1017344 +
push eax  +
call sub_104D940  +
cmp dword ptr [esi+1Ch] 2 +
jnz loc_104BC29  +
test byte ptr [esi+20h] 8 +
jnz loc_104BC29  +
push dword ptr [esi+2Ch]  +
lea eax [ebp+dwBytes] +
push offset a1S1S___  +
push eax  +
call sub_104D8B7  +
add esp 0Ch +
jmp loc_104BC35  +
push dword ptr [esi+2Ch]  +
lea eax [ebp+dwBytes] +
push eax  +
call sub_104D6AE  +
test byte ptr [esi+20h] 2 +
mov eax offset asc_1017394 +
jnz loc_104BC45  +
mov eax offset asc_10029C8 +
push eax  +
call sub_104D940  +
mov eax [ebp+dwBytes] +
lea edi [edi+eax+3] +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_104BC5B  +
mov [eax] edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push edi  +
mov edi dword_1057998 +
xor edx edx +
mov [ebp+var_4] edx +
cmp edi offset dword_1057998 +
jz loc_104BDA0  +
push ebx  +
push esi  +
mov eax [ebp+arg_0] +
cmp eax [edi-4] +
jnz loc_104BD90  +
cmp eax 3 +
jnz loc_104BCB5  +
mov eax [edi-0Ch] +
mov eax [eax] +
cmp [eax+38h] edx +
jz loc_104BD90  +
push eax  +
call sub_104BB50  +
test eax eax +
jnz loc_104BCBE  +
jmp loc_104BD90  +
cmp eax edx +
jle loc_104BCBE  +
cmp eax 2 +
jle loc_104BCC1  +
mov [ebp+var_4] edx +
xor ebx ebx +
cmp [edi-8] edx +
jbe loc_104BD90  +
mov ecx [edi-0Ch] +
mov esi [ecx+ebx*4] +
push esi  +
call sub_104BB50  +
test eax eax +
jz loc_104BD86  +
cmp [esi+38h] edx +
jnz loc_104BCF3  +
cmp [esi+3Ch] edx +
jnz loc_104BCF3  +
cmp [esi+48h] edx +
jz loc_104BD86  +
cmp [ebp+arg_0] 3 +
jnz loc_104BD01  +
cmp ebx edx +
jz loc_104BD86  +
cmp [ebp+var_4] edx +
jnz loc_104BD42  +
mov eax [ebp+arg_0] +
dec eax  +
jz loc_104BD2E  +
dec eax  +
jz loc_104BD27  +
dec eax  +
jnz loc_104BD3B  +
mov eax [ecx] +
push dword ptr [eax+24h]  +
push 3C37h  +
push edx  +
call sub_104D8EC  +
add esp 0Ch +
jmp loc_104BD3B  +
push 3C2Dh  +
jmp loc_104BD33  +
push 3C2Ch  +
push edx  +
call sub_104D8EC  +
pop ecx  +
pop ecx  +
mov [ebp+var_4] 1 +
push offset asc_1017398  +
mov dword ptr [esi+34h] 1 +
call sub_104D940  +
lea eax [ebp+var_8] +
push eax  +
push esi  +
call sub_104BB72  +
movzx eax word_10579B0 +
push eax  +
push 20h  +
push [ebp+var_8]  +
push dword ptr [esi+30h]  +
call sub_104DA80  +
test byte ptr [esi+20h] 4 +
jz loc_104BD84  +
mov eax [ebp+arg_4] +
test eax eax +
jnz loc_104BD84  +
mov ecx [esi+28h] +
mov [eax] ecx +
xor edx edx +
inc ebx  +
cmp ebx [edi-8] +
jb loc_104BCCC  +
mov edi [edi] +
cmp edi offset dword_1057998 +
jnz loc_104BC87  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea eax [ebp+dwBytes] +
push eax  +
push esi  +
call sub_104BA44  +
xor ebx ebx +
cmp eax ebx +
jnz loc_104BDF8  +
push ebx  +
push [ebp+dwBytes]  +
call sub_104BB72  +
mov eax dword_10579A0 +
mov edi offset dword_10579A0 +
jmp loc_104BDEA  +
cmp esi [eax+44h] +
jnz loc_104BDE8  +
cmp eax [ebp+dwBytes] +
jz loc_104BDE8  +
mov [eax+38h] ebx +
mov eax [eax] +
cmp eax edi +
jnz loc_104BDDB  +
push offset asc_10173B4  +
jmp loc_104BEC5  +
mov esi dword_10579A0 +
xor ecx ecx +
inc ecx  +
mov [ebp+dwBytes] ecx +
mov edi offset dword_10579A0 +
cmp eax ecx +
jnz loc_104BE64  +
cmp esi edi +
jz loc_104BECA  +
push esi  +
call sub_104BB50  +
test eax eax +
jz loc_104BE5C  +
xor eax eax +
cmp [esi+38h] eax +
jz loc_104BE5C  +
mov ecx [ebp+arg_0] +
cmp ecx [esi+44h] +
jnz loc_104BE5C  +
cmp [ebp+dwBytes] eax +
jz loc_104BE4A  +
mov ebx [esi+40h] +
mov [ebp+dwBytes] eax +
cmp ebx eax +
mov eax offset asc_10173B0 +
jnz loc_104BE47  +
mov eax offset asc_1017388 +
push eax  +
jmp loc_104BE4F  +
push offset asc_1001810  +
call sub_104D940  +
push 0  +
push esi  +
call sub_104BB72  +
mov esi [esi] +
cmp esi edi +
jnz loc_104BE15  +
jmp loc_104BEB0  +
cmp esi edi +
jz loc_104BECA  +
mov eax [ebp+arg_0] +
cmp eax [esi+44h] +
jnz loc_104BEAA  +
xor eax eax +
cmp [esi+48h] eax +
jnz loc_104BE7C  +
mov [esi+38h] eax +
jmp loc_104BEAA  +
cmp [ebp+dwBytes] eax +
jz loc_104BE98  +
mov ebx [esi+40h] +
mov [ebp+dwBytes] eax +
cmp ebx eax +
mov eax offset asc_10173B0 +
jnz loc_104BE95  +
mov eax offset asc_1017388 +
push eax  +
jmp loc_104BE9D  +
push offset asc_1001810  +
call sub_104D940  +
push 0  +
push esi  +
call sub_104BB72  +
mov esi [esi] +
cmp esi edi +
jnz loc_104BE68  +
cmp [ebp+dwBytes] 0 +
jnz loc_104BECA  +
mov eax offset asc_10173A8 +
test ebx ebx +
jnz loc_104BEC4  +
mov eax offset asc_10173A0 +
push eax  +
call sub_104D940  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
and dword ptr [esi] 0 +
mov edx dword_10579A0 +
mov ecx edx +
mov eax offset dword_10579A0 +
jmp loc_104BF02  +
cmp dword ptr [ecx+48h] 0 +
jz loc_104BF00  +
test dword ptr [ecx+20h] 200h +
jz loc_104BF0A  +
mov ecx [ecx] +
cmp ecx eax +
jnz loc_104BEF1  +
mov ecx edx +
jmp loc_104BF24  +
mov dword ptr [esi] 1 +
jmp loc_104BF28  +
test dword ptr [ecx+20h] 10h +
jnz loc_104BF22  +
mov dword ptr [ecx+38h] 1 +
mov ecx [ecx] +
cmp ecx eax +
jnz loc_104BF12  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
jmp loc_104C00E  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+arg_0]  +
push dword ptr [ebp+Arguments]  +
call sub_104B94B  +
mov esi eax +
cmp esi edi +
jl loc_104C02D  +
mov esi [ebp+var_C] +
cmp esi edi +
jnz loc_104BF7C  +
push dword ptr [ebp+Arguments]  +
push 3C31h  +
jmp loc_104BFD5  +
mov eax [ebp+var_10] +
mov [esi+4Ch] eax +
cmp eax edi +
jz loc_104BFA7  +
test dword ptr [esi+20h] 4 +
jnz loc_104BFA7  +
push dword ptr [ebp+Arguments]  +
push 3C32h  +
push edi  +
call sub_104D8EC  +
add esp 0Ch +
mov [ebp+var_8] 80070057h +
push [ebp+var_14]  +
push dword ptr [ebp+Arguments]  +
push dword ptr [esi+10h]  +
push esi  +
push ebx  +
call sub_104EB89  +
cmp eax edi +
jge loc_104BFBE  +
mov [ebp+var_8] eax +
mov eax [esi+48h] +
cmp eax edi +
jz loc_104BFEB  +
mov ecx [esi+50h] +
cmp ecx [ebp+arg_4] +
jnz loc_104BFE7  +
push dword ptr [ebp+Arguments]  +
push 3C33h  +
push edi  +
call sub_104D8EC  +
add esp 0Ch +
mov [ebp+var_8] 80070057h +
jmp loc_104BFF8  +
cmp eax edi +
jnz loc_104BFF8  +
mov eax [ebp+arg_4] +
mov [esi+50h] eax +
mov dword ptr [esi+48h] 1 +
cmp dword ptr [ebp+Arguments] edi +
jz loc_104C011  +
push dword ptr [ebp+Arguments]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov dword ptr [ebp+Arguments] edi +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ebp+Arguments] +
push eax  +
push ebx  +
call dword ptr [ebx]  +
mov esi eax +
cmp esi edi +
jl loc_104C02D  +
cmp esi 1 +
jnz loc_104BF4A  +
xor esi esi +
cmp dword ptr [ebp+Arguments] edi +
jz loc_104C046  +
push dword ptr [ebp+Arguments]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov dword ptr [ebp+Arguments] edi +
push ebx  +
call dword ptr [ebx+8]  +
cmp esi edi +
mov eax esi +
jl loc_104C053  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 7FFFFFFFh +
ja loc_104C077  +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
jmp loc_104C082  +
mov eax [ebp+arg_4] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp eax ecx +
jb loc_104C0A5  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_104C0B0  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+nBufferLength] +
add eax eax +
push eax  +
push 0  +
push [ebp+lpBuffer]  +
call memset  +
add esp 0Ch +
push 208h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_104C0F9  +
mov [ebp+lpSrc] 8007000Eh +
jmp loc_104C18B  +
push ebx  +
push esi  +
push edi  +
mov esi 104h +
push esi  +
push eax  +
push [ebp+lpSrc]  +
xor ecx ecx +
mov [eax] cx +
call ds:ExpandEnvironmentStringsW  +
cmp eax esi +
jbe loc_104C117  +
xor eax eax +
mov ebx ds:GetLastError +
mov edi 0FFFFh +
mov esi 80070000h +
test eax eax +
ja loc_104C145  +
call ebx  +
test eax eax +
jz loc_104C139  +
jle loc_104C13E  +
and eax edi +
or eax esi +
jmp loc_104C13E  +
mov eax 80004005h +
mov [ebp+lpSrc] eax +
test eax eax +
jl loc_104C176  +
push 0  +
push [ebp+lpBuffer]  +
push [ebp+nBufferLength]  +
push [ebp+lpMem]  +
call ds:GetFullPathNameW  +
test eax eax +
jbe loc_104C160  +
and [ebp+lpSrc] 0 +
jmp loc_104C176  +
call ebx  +
test eax eax +
jz loc_104C16E  +
jle loc_104C173  +
and eax edi +
or eax esi +
jmp loc_104C173  +
mov eax 80004005h +
mov [ebp+lpSrc] eax +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp+lpSrc] +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
xor edi edi +
mov [ebp+var_4] ebx +
cmp dword_10579B4 ebx +
jnz loc_104C23B  +
push 208h  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
cmp edi ebx +
jnz loc_104C1D5  +
mov [ebp+var_4] 8007000Eh +
jmp loc_104C246  +
push 104h  +
push edi  +
xor eax eax +
push ebx  +
mov [edi] ax +
call ds:GetModuleFileNameW  +
test eax eax +
jnz loc_104C1FC  +
call ds:GetLastError  +
cmp eax ebx +
jnz loc_104C213  +
mov eax 80004005h +
jmp loc_104C21F  +
push ebx  +
push 8  +
push edi  +
call sub_1051BEB  +
mov esi eax +
cmp esi ebx +
jnz loc_104C224  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_104C21F  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_4] eax +
jmp loc_104C246  +
push ebx  +
push esi  +
push offset dword_10579B4  +
call ds:InterlockedCompareExchange  +
test eax eax +
jz loc_104C23B  +
push esi  +
call sub_1051A9A  +
mov eax [ebp+arg_0] +
mov ecx dword_10579B4 +
mov [eax] ecx +
cmp edi ebx +
jz loc_104C259  +
push edi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor eax eax +
push edi  +
mov edi offset dword_10579A0 +
cmp dword_105625C eax +
jz loc_104C28F  +
mov dword_10579A4 edi +
mov dword_10579A0 edi +
mov dword_105625C eax +
mov esi [ebp+arg_0] +
cmp esi eax +
jz loc_104C2C5  +
push 38h  +
push eax  +
lea eax [esi+24h] +
push eax  +
call memset  +
mov eax dword_10579A4 +
mov [esi] edi +
mov [esi+4] eax +
mov [eax] esi +
mov eax dword_10579BC +
mov dword_10579A4 esi +
add esp 0Ch +
mov [esi+54h] eax +
inc dword_10579BC  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_1056260 0 +
mov ecx offset dword_1057998 +
jz loc_104C2F6  +
and dword_1056260 0 +
mov dword_105799C ecx +
mov dword_1057998 ecx +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_104C312  +
mov edx dword_105799C +
add eax 0Ch +
mov [eax] ecx +
mov [eax+4] edx +
mov [edx] eax +
mov dword_105799C eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
push esi  +
xor esi esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_104C32A  +
lea ecx [ebp+dwBytes] +
push ecx  +
push 2  +
sub eax edx +
pop ecx  +
sar eax 1 +
mul  ecx +
push edx  +
push eax  +
call sub_101B8F5  +
test eax eax +
jl loc_104C385  +
lea eax [ebp+dwBytes] +
push eax  +
push 2  +
push [ebp+dwBytes]  +
call sub_104C08B  +
test eax eax +
jl loc_104C385  +
push [ebp+dwBytes]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_104C385  +
push [ebp+dwBytes]  +
push [ebp+arg_0]  +
push esi  +
call memcpy  +
add esp 0Ch +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+hInstance] 0 +
push esi  +
push edi  +
mov edi [ebp+nBufferMax] +
lea eax [ebp+nBufferMax] +
push eax  +
push edi  +
call sub_104C05F  +
mov esi eax +
test esi esi +
jl loc_104C400  +
cmp [ebp+nBufferMax] edi +
jbe loc_104C3BC  +
mov esi 80004005h +
jmp loc_104C400  +
lea eax [ebp+hInstance] +
push eax  +
call sub_104C197  +
mov esi eax +
test esi esi +
jl loc_104C400  +
push [ebp+nBufferMax]  +
push [ebp+lpBuffer]  +
push [ebp+uID]  +
push [ebp+hInstance]  +
call ds:LoadStringW  +
test eax eax +
jnz loc_104C400  +
call ds:GetLastError  +
test eax eax +
jz loc_104C3F9  +
jle loc_104C3FE  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_104C3FE  +
mov eax 80004005h +
mov esi eax +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push 800h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
mov [ebp+lpMem] esi +
test esi esi +
jnz loc_104C43A  +
mov [ebp+uID] 8007000Eh +
jmp loc_104C4A0  +
push 400h  +
push esi  +
push [ebp+uID]  +
xor eax eax +
mov [esi] ax +
call sub_104C391  +
mov [ebp+uID] eax +
test eax eax +
jl loc_104C48E  +
push ebx  +
push edi  +
mov edi offset dword_10173B8 +
push edi  +
push esi  +
mov esi ds:wcstok +
jmp loc_104C482  +
push offset asc_1017398  +
call sub_104D940  +
push ebx  +
call sub_104D940  +
push offset asc_100168C  +
call sub_104D940  +
push edi  +
push 0  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_104C465  +
pop edi  +
pop ebx  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+uID] +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
lea eax [ebp+Arguments] +
push eax  +
xor edi edi +
push 1  +
mov dword ptr [ebp+Arguments] edi +
call sub_104BC66  +
lea eax [ebp+Arguments] +
push eax  +
push 2  +
call sub_104BC66  +
lea eax [ebp+Arguments] +
push eax  +
push 3  +
call sub_104BC66  +
push 3C2Eh  +
push edi  +
call sub_104D8EC  +
mov esi dword_10579A0 +
pop ecx  +
pop ecx  +
mov ebx offset dword_10579A0 +
jmp loc_104C558  +
cmp [esi+34h] edi +
jnz loc_104C556  +
push esi  +
call sub_104BB50  +
test eax eax +
jz loc_104C556  +
cmp [esi+3Ch] edi +
jnz loc_104C515  +
cmp [esi+48h] edi +
jnz loc_104C515  +
cmp [esi+38h] edi +
jz loc_104C556  +
push offset asc_1017398  +
mov dword ptr [esi+34h] 1 +
call sub_104D940  +
lea eax [ebp+var_8] +
push eax  +
push esi  +
call sub_104BB72  +
movzx eax word_10579B0 +
push eax  +
push 20h  +
push [ebp+var_8]  +
push dword ptr [esi+30h]  +
call sub_104DA80  +
test byte ptr [esi+20h] 4 +
jz loc_104C556  +
cmp dword ptr [ebp+Arguments] edi +
jnz loc_104C556  +
mov eax [esi+28h] +
mov dword ptr [ebp+Arguments] eax +
mov esi [esi] +
cmp esi ebx +
jnz loc_104C4F7  +
cmp dword ptr [ebp+Arguments] edi +
jz loc_104C572  +
push dword ptr [ebp+Arguments]  +
push 3C35h  +
push edi  +
call sub_104D8EC  +
add esp 0Ch +
cmp uID edi +
jz loc_104C5A9  +
push 3C38h  +
push edi  +
call sub_104D8EC  +
pop ecx  +
pop ecx  +
push offset asc_1017398  +
call sub_104D940  +
push uID  +
push edi  +
call sub_104D8EC  +
pop ecx  +
pop ecx  +
push offset asc_100168C  +
call sub_104D940  +
mov esi dword_10579A0 +
mov dword ptr [ebp+Arguments] edi +
jmp loc_104C5EB  +
cmp [esi+34h] edi +
jz loc_104C5E9  +
cmp [esi+0Ch] edi +
jz loc_104C5E9  +
cmp [ebp+arg_0] edi +
jz loc_104C5C8  +
cmp [esi+48h] edi +
jz loc_104C5E9  +
cmp dword ptr [ebp+Arguments] edi +
jnz loc_104C5E1  +
push 3C36h  +
push edi  +
call sub_104D8EC  +
pop ecx  +
pop ecx  +
mov dword ptr [ebp+Arguments] 1 +
push dword ptr [esi+0Ch]  +
call sub_104C40D  +
mov esi [esi] +
cmp esi ebx +
jnz loc_104C5B4  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov edi offset asc_100168C +
push edi  +
mov [ebp+pbstrOut] ebx +
call sub_104D940  +
mov esi dword_10579A0 +
jmp loc_104C75E  +
cmp [esi+48h] ebx +
jz loc_104C75C  +
mov eax [esi+28h] +
cmp eax ebx +
jnz loc_104C636  +
mov eax offset dword_1008298 +
push eax  +
push dword ptr [esi+24h]  +
push offset a116s26s  +
call sub_104D8D2  +
mov eax [esi+1Ch] +
add esp 0Ch +
sub eax ebx +
jz loc_104C730  +
dec eax  +
jz loc_104C72B  +
dec eax  +
jz loc_104C6CD  +
dec eax  +
jz loc_104C6AC  +
dec eax  +
jz loc_104C676  +
dec eax  +
jnz loc_104C751  +
push dword ptr [esi+5Ch]  +
push offset a1D  +
jmp loc_104C74A  +
lea eax [ebp+pvtime] +
push eax  +
lea eax [esi+5Ch] +
push eax  +
call ds:SystemTimeToVariantTime  +
fld  [ebp+pvtime] +
lea eax [ebp+pbstrOut] +
push eax  +
push ebx  +
push 400h  +
push ecx  +
push ecx  +
fstp  [esp+2Ch+var_2C] +
call ds:VarBstrFromDate  +
test eax eax +
jl loc_104C770  +
push [ebp+pbstrOut]  +
jmp loc_104C745  +
movzx eax word ptr [esi+68h] +
push eax  +
movzx eax word ptr [esi+66h] +
push eax  +
movzx eax word ptr [esi+64h] +
push eax  +
push offset a102d202d302d  +
call sub_104D8D2  +
add esp 10h +
jmp loc_104C751  +
mov edi [esi+5Ch] +
cmp edi ebx +
jz loc_104C6DB  +
xor eax eax +
cmp ax [edi] +
jnz loc_104C6E7  +
push offset asc_1003E24  +
call sub_104D8D2  +
jmp loc_104C750  +
push edi  +
cmp edi [esi+5Ch] +
jnz loc_104C6FB  +
push offset a120s  +
call sub_104D8D2  +
pop ecx  +
pop ecx  +
jmp loc_104C70D  +
push offset asc_10173B4  +
push offset a126s220s  +
call sub_104D8D2  +
add esp 0Ch +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_104C712  +
sub eax edx +
sar eax 1 +
lea edi [edi+eax*2+2] +
cmp [edi] bx +
jnz loc_104C6E7  +
jmp loc_104C751  +
push dword ptr [esi+5Ch]  +
jmp loc_104C745  +
cmp [esi+48h] ebx +
jz loc_104C73F  +
mov eax offset aTrue_0 +
cmp [esi+4Ch] ebx +
jz loc_104C744  +
mov eax offset aFalse_0 +
push eax  +
push offset a1S  +
call sub_104D8D2  +
pop ecx  +
pop ecx  +
mov edi offset asc_100168C +
push edi  +
call sub_104D940  +
mov esi [esi] +
cmp esi offset dword_10579A0 +
jnz loc_104C621  +
push edi  +
call sub_104D940  +
push [ebp+pbstrOut]  +
call ds:SysFreeString  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 160h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
push edi  +
mov edi 800h +
push edi  +
push 0  +
call ebx  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov [ebp+lpBuffer] eax +
test eax eax +
jnz loc_104C7C8  +
mov esi 8007000Eh +
jmp loc_104CAB9  +
xor ecx ecx +
push edi  +
push ecx  +
mov [eax] cx +
call ebx  +
push eax  +
call esi  +
mov [ebp+lpMem] eax +
test eax eax +
jz loc_104CAD1  +
xor ecx ecx +
mov [eax] cx +
mov edi dword_10579A0 +
cmp edi offset dword_10579A0 +
jz loc_104CA87  +
mov ebx 400h +
push ebx  +
push [ebp+lpBuffer]  +
push dword ptr [edi+8]  +
call sub_104C391  +
mov esi eax +
test esi esi +
jl loc_104CA89  +
mov esi ds:wcstok +
push offset asc_101749C  +
push [ebp+lpBuffer]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_104CACA  +
push eax  +
call sub_104C31B  +
mov [edi+24h] eax +
test eax eax +
jz loc_104CAD1  +
and dword ptr [edi+18h] 0 +
push offset asc_101749C  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
mov [ebp+var_160] eax +
test eax eax +
jz loc_104CACA  +
xor ecx ecx +
cmp cx [eax] +
jz loc_104C8A1  +
push offset asc_1017498  +
push eax  +
call ds:__imp__wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_104C8A1  +
push [ebp+var_160]  +
call sub_104C31B  +
mov [edi+28h] eax +
test eax eax +
jz loc_104CAD1  +
test dword ptr [edi+20h] 40h +
jnz loc_104C8A1  +
mov dword ptr [edi+18h] 1 +
push offset asc_101749C  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_104CACA  +
mov edx offset asc_1017498 +
mov ecx eax +
mov si [ecx] +
cmp si [edx] +
jnz loc_104C8E1  +
test si si +
jz loc_104C8DD  +
mov si [ecx+2] +
cmp si [edx+2] +
jnz loc_104C8E1  +
add ecx 4 +
add edx 4 +
test si si +
jnz loc_104C8BB  +
xor ecx ecx +
jmp loc_104C8E6  +
sbb ecx ecx +
sbb ecx 0FFFFFFFFh +
test ecx ecx +
jz loc_104C8F0  +
push eax  +
jmp loc_104CA4D  +
mov eax [edi+1Ch] +
test eax eax +
jle loc_104CA59  +
cmp eax 2 +
jle loc_104C917  +
cmp eax 3 +
jz loc_104CA29  +
cmp eax 4 +
jz loc_104C932  +
cmp eax 5 +
jnz loc_104CA59  +
test byte ptr [edi+20h] 80h +
push ebx  +
push [ebp+lpMem]  +
jz loc_104CA37  +
push 3BC5h  +
jmp loc_104CA3C  +
mov esi ds:GetLocaleInfoW +
push 50h  +
lea eax [ebp+LCData] +
push eax  +
push 1Fh  +
push ebx  +
call esi  +
test eax eax +
jnz loc_104C951  +
mov word ptr [ebp+LCData] ax +
push 50h  +
lea eax [ebp+var_B4] +
push eax  +
push 1003h  +
push ebx  +
call esi  +
test eax eax +
jnz loc_104C96D  +
mov [ebp+var_B4] ax +
push 4  +
lea eax [ebp+var_14] +
push eax  +
push 28h  +
push ebx  +
call esi  +
test eax eax +
jnz loc_104C980  +
mov word ptr [ebp+var_14] ax +
push 4  +
lea eax [ebp+var_C] +
push eax  +
push 29h  +
push ebx  +
call esi  +
test eax eax +
jnz loc_104C993  +
mov word ptr [ebp+var_C] ax +
lea eax [ebp+var_B4] +
push 20h  +
push eax  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_104C9AD  +
xor ecx ecx +
mov [eax] cx +
lea eax [ebp+var_14] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_104C9B3  +
sub eax edx +
sar eax 1 +
jz loc_104CA05  +
lea eax [ebp+var_C] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_104C9C9  +
sub eax edx +
sar eax 1 +
jz loc_104CA05  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_B4] +
push eax  +
lea eax [ebp+LCData] +
push eax  +
push offset aSSSS  +
push ebx  +
push [ebp+lpMem]  +
call sub_101BCA7  +
add esp 1Ch +
jmp loc_104CA41  +
lea eax [ebp+var_B4] +
push eax  +
lea eax [ebp+LCData] +
push eax  +
push offset aSS_0  +
push ebx  +
push [ebp+lpMem]  +
call sub_101BCA7  +
add esp 14h +
jmp loc_104CA41  +
push ebx  +
push [ebp+lpMem]  +
push 3BC6h  +
jmp loc_104CA3C  +
push 3BC4h  +
call sub_104C391  +
mov esi eax +
test esi esi +
jl loc_104CA89  +
push [ebp+lpMem]  +
call sub_104C31B  +
mov [edi+2Ch] eax +
test eax eax +
jz loc_104CAD1  +
push offset asc_101749C  +
push 0  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_104CACA  +
push eax  +
call sub_104C31B  +
mov [edi+30h] eax +
test eax eax +
jz loc_104CAD1  +
mov edi [edi] +
cmp edi offset dword_10579A0 +
jnz loc_104C7FE  +
xor esi esi +
mov edi ds:HeapFree +
xor ebx ebx +
cmp [ebp+lpMem] ebx +
jz loc_104CAA9  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
push [ebp+lpBuffer]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call edi  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn   +
mov esi 8000FFFFh +
jmp loc_104CA89  +
mov esi 8007000Eh +
jmp loc_104CA89  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
xor esi esi +
push edi  +
push 400h  +
push esi  +
mov [ebp+puLen] esi +
mov [ebp+lpBuffer] esi +
mov [ebp+pBlock] esi +
mov [ebp+var_3C] esi +
mov [ebp+var_40] esi +
call ebx  +
mov edi ds:HeapAlloc +
push eax  +
call edi  +
mov [ebp+lpMem] eax +
cmp eax esi +
jnz loc_104CB33  +
mov edi ds:HeapFree +
mov [ebp+hModule] 8007000Eh +
jmp loc_104CDB7  +
push 800h  +
xor ecx ecx +
push esi  +
mov [eax] cx +
call ebx  +
push eax  +
call edi  +
mov [ebp+lptstrFilename] eax +
cmp eax esi +
jz loc_104CC62  +
xor ecx ecx +
mov [eax] cx +
cmp dword_10579CC esi +
jnz loc_104CBE6  +
push 208h  +
push esi  +
mov dword_10579CC 1 +
call ebx  +
push eax  +
call edi  +
mov lpModuleName eax +
cmp eax esi +
jz loc_104CC62  +
push eax  +
push 104h  +
xor ecx ecx +
push offset Src  +
mov [eax] cx +
call sub_104C0B9  +
cmp eax esi +
mov [ebp+hModule] eax +
jl loc_104CD8C  +
push lpModuleName  +
call ds:GetModuleHandleW  +
mov [ebp+hModule] eax +
cmp eax esi +
jz loc_104CBE6  +
push offset aGetfileversion  +
push eax  +
call ds:GetProcAddress  +
push eax  +
call ds:EncodePointer  +
push offset aGetfileversi_0  +
push [ebp+hModule]  +
mov dword_10579C4 eax +
call ds:GetProcAddress  +
push eax  +
call ds:EncodePointer  +
mov dword_10579C0 eax +
push 400h  +
push [ebp+lptstrFilename]  +
push esi  +
call ds:GetModuleFileNameW  +
test eax eax +
jnz loc_104CC17  +
call ds:GetLastError  +
cmp eax esi +
jz loc_104CC75  +
jle loc_104CC0F  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+hModule] eax +
jmp loc_104CD8C  +
push offset aMicrosoftO  +
push 10h  +
lea eax [ebp+Arguments] +
push eax  +
call sub_101BC13  +
cmp eax esi +
mov [ebp+hModule] eax +
jl loc_104CD8C  +
push dword_10579C4  +
call ds:DecodePointer  +
push esi  +
push [ebp+lptstrFilename]  +
cmp eax esi +
jz loc_104CC6E  +
push 2  +
call eax  +
mov [ebp+puLen] eax +
cmp eax esi +
jz loc_104CBF9  +
push eax  +
push 8  +
call ebx  +
push eax  +
call edi  +
mov edi eax +
mov [ebp+pBlock] edi +
cmp edi esi +
jnz loc_104CC7C  +
mov [ebp+hModule] 8007000Eh +
jmp loc_104CD8C  +
call GetFileVersionInfoSizeW  +
jmp loc_104CC4A  +
mov eax 80004005h +
jmp loc_104CC0F  +
push dword_10579C0  +
call ds:DecodePointer  +
push edi  +
push [ebp+puLen]  +
push esi  +
push [ebp+lptstrFilename]  +
cmp eax esi +
jz loc_104CCAF  +
push 2  +
call eax  +
test eax eax +
jnz loc_104CCB6  +
call ds:GetLastError  +
cmp eax esi +
jg loc_104CC05  +
jmp loc_104CC0F  +
call GetFileVersionInfoW  +
jmp loc_104CC98  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push edi  +
mov [ebp+puLen] esi +
call VerQueryValueW  +
mov eax [ebp+lpBuffer] +
cmp eax esi +
jnz loc_104CCDF  +
mov [ebp+hModule] 80004004h +
jmp loc_104CD8C  +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push offset aProductversion  +
push ecx  +
push eax  +
mov ebx offset aStringfileinfo +
push ebx  +
mov edi 200h +
push edi  +
push [ebp+lpMem]  +
call sub_101BCA7  +
add esp 18h +
cmp eax esi +
mov [ebp+hModule] eax +
jl loc_104CD86  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+var_3C] +
push eax  +
push [ebp+lpMem]  +
mov [ebp+puLen] esi +
push [ebp+pBlock]  +
call VerQueryValueW  +
cmp [ebp+var_3C] esi +
jnz loc_104CD2F  +
mov [ebp+hModule] 80004004h +
jmp loc_104CD86  +
mov eax [ebp+lpBuffer] +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push offset aOriginalfilena  +
push ecx  +
push eax  +
push ebx  +
push edi  +
push [ebp+lpMem]  +
call sub_101BCA7  +
add esp 18h +
cmp eax esi +
mov [ebp+hModule] eax +
jl loc_104CD86  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+var_40] +
push eax  +
push [ebp+lpMem]  +
mov [ebp+puLen] esi +
push [ebp+pBlock]  +
call VerQueryValueW  +
cmp [ebp+var_40] esi +
jz loc_104CD26  +
push [ebp+var_3C]  +
lea eax [ebp+Arguments] +
push [ebp+var_40]  +
push eax  +
push offset a1S2S3S  +
call sub_104D8D2  +
add esp 10h +
mov ebx ds:GetProcessHeap +
push [ebp+lpMem]  +
push esi  +
call ebx  +
mov edi ds:HeapFree +
push eax  +
call edi  +
cmp [ebp+lptstrFilename] esi +
jz loc_104CDA9  +
push [ebp+lptstrFilename]  +
push esi  +
call ebx  +
push eax  +
call edi  +
cmp [ebp+pBlock] esi +
jz loc_104CDB7  +
push [ebp+pBlock]  +
push esi  +
call ebx  +
push eax  +
call edi  +
mov eax lpModuleName +
cmp eax esi +
jz loc_104CDCD  +
push eax  +
push esi  +
call ebx  +
push eax  +
call edi  +
mov lpModuleName esi +
mov ecx [ebp+var_4] +
mov eax [ebp+hModule] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
call sub_104CADD  +
push dword ptr [ebp+Arguments]  +
push 3C2Fh  +
push 0  +
call sub_104D8EC  +
xor esi esi +
inc esi  +
add esp 0Ch +
cmp dword_10579A8 esi +
jb loc_104CE1C  +
push esi  +
call sub_104BDAA  +
inc esi  +
cmp esi dword_10579A8 +
jbe loc_104CE0D  +
mov esi dword_10579A0 +
mov edi offset dword_10579A0 +
jmp loc_104CE57  +
cmp dword ptr [esi+3Ch] 0 +
jz loc_104CE55  +
push esi  +
call sub_104BB50  +
test eax eax +
jz loc_104CE55  +
push offset asc_10173B0  +
call sub_104D940  +
push 0  +
push esi  +
call sub_104BB72  +
push offset asc_10173A8  +
call sub_104D940  +
mov esi [esi] +
cmp esi edi +
jnz loc_104CE29  +
push 3C30h  +
push 0  +
call sub_104D8EC  +
pop ecx  +
pop ecx  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
call sub_104BED6  +
push 1  +
call sub_101B927  +
push eax  +
call sub_104BA96  +
test eax eax +
jl locret_104CEAB  +
push dword ptr [ebp+Arguments]  +
call sub_104CDE4  +
push [ebp+var_4]  +
call sub_104C4AD  +
xor eax eax +
inc eax  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push 208h  +
push edi  +
mov [ebp+var_8] edi +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
mov [ebp+lpMem] ebx +
cmp ebx edi +
jnz loc_104CEEA  +
mov esi 8007000Eh +
jmp loc_104D074  +
push ebx  +
push 104h  +
xor eax eax +
push offset aWindirSystem_0  +
mov [ebx] ax +
call sub_104C0B9  +
mov esi eax +
cmp esi edi +
jl loc_104D057  +
push ebx  +
call ds:GetModuleHandleW  +
cmp eax edi +
jz loc_104CF2F  +
push offset aSetthreadprefe  +
push eax  +
call ds:GetProcAddress  +
cmp eax edi +
jz loc_104CF2F  +
push edi  +
push edi  +
push 100h  +
call eax  +
jmp loc_104CF36  +
push edi  +
call ds:SetThreadUILanguage  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_104D052  +
cmp esi edi +
jz loc_104D052  +
xor eax eax +
push esi  +
mov word_10579B0 ax +
call sub_104DBC4  +
test eax eax +
jz loc_104CF9F  +
lea eax [ebp+ConsoleScreenBufferInfo] +
push eax  +
push esi  +
call ds:GetConsoleScreenBufferInfo  +
test eax eax +
jnz loc_104CF93  +
call ds:GetLastError  +
cmp eax edi +
jz loc_104CF8A  +
jle loc_104CF8F  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_104CF8F  +
mov eax 80004005h +
cmp eax edi +
jl loc_104CF9F  +
mov eax dword ptr [ebp+ConsoleScreenBufferInfo.srWindow.Right] +
sub eax dword ptr [ebp+ConsoleScreenBufferInfo.srWindow.Left] +
mov word_10579B0 ax +
push edi  +
call sub_104C268  +
push edi  +
call sub_104C2D0  +
call sub_104C783  +
mov esi eax +
cmp esi edi +
jl loc_104D057  +
mov ebx [ebp+arg_4] +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push [ebp+arg_0]  +
call sub_104EDDE  +
mov esi eax +
cmp esi edi +
jl loc_104D057  +
push 1  +
push [ebp+var_4]  +
call sub_104BF32  +
cmp eax edi +
jge loc_104CFE5  +
mov [ebp+var_8] eax +
mov eax [ebp+arg_C] +
cmp eax edi +
jz loc_104D019  +
cmp [eax+48h] edi +
jz loc_104D019  +
mov eax [eax+5Ch] +
cmp eax edi +
jz loc_104D019  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
call sub_104F073  +
mov esi eax +
cmp esi edi +
jl loc_104D057  +
push 2  +
push [ebp+var_4]  +
call sub_104BF32  +
cmp eax edi +
jge loc_104D019  +
mov [ebp+var_8] eax +
cmp dword_10579AC edi +
jz loc_104D026  +
call sub_104C5FB  +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_104D042  +
cmp [eax+48h] edi +
jz loc_104D042  +
or dword ptr [eax+20h] 200h +
push dword ptr [ebx]  +
call sub_104CE74  +
jmp loc_104D04E  +
push edi  +
call sub_101B927  +
push eax  +
call sub_104BA96  +
mov esi eax +
jmp loc_104D057  +
mov esi 80070057h +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp esi edi +
jl loc_104D074  +
mov eax [ebp+var_8] +
cmp esi 1 +
jnz loc_104D076  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi+58h] 0 +
push edi  +
jnz loc_104D0CC  +
mov edi dword_10579BC +
shl edi 2 +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [esi+58h] eax +
test eax eax +
jnz loc_104D0C0  +
mov [ebp+var_4] 8007000Eh +
jmp loc_104D0D8  +
push edi  +
push 0  +
push eax  +
call memset  +
add esp 0Ch +
mov eax [ebp+arg_4] +
mov ecx [eax+54h] +
mov edx [esi+58h] +
mov [edx+ecx*4] eax +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_8] +
xor edx edx +
push ebx  +
lea ecx [eax-1] +
push esi  +
push edi  +
mov [ebp+var_8] edx +
mov [ebp+var_C] edx +
mov [ebp+var_4] edx +
cmp ecx edx +
jbe loc_104D16A  +
mov ebx [ebp+arg_4] +
mov ecx [ebx] +
cmp [ecx+48h] edx +
jz loc_104D157  +
mov edi [ebp+var_4] +
inc edi  +
cmp edi eax +
jnb loc_104D157  +
mov esi [ebx] +
mov ecx [ebp+arg_4] +
mov ecx [ecx+edi*4] +
mov edx esi +
cmp edx ecx +
jz loc_104D150  +
cmp dword ptr [ecx+48h] 0 +
jz loc_104D150  +
mov eax [edx+54h] +
cmp eax [ecx+54h] +
jbe loc_104D138  +
mov edx ecx +
mov ecx esi +
push ecx  +
push edx  +
call sub_104D082  +
mov [ebp+var_8] eax +
test eax eax +
jl loc_104D16F  +
mov eax [ebp+arg_8] +
mov [ebp+var_C] 80070057h +
inc edi  +
cmp edi eax +
jb loc_104D118  +
xor edx edx +
inc [ebp+var_4]  +
lea ecx [eax-1] +
add ebx 4 +
cmp [ebp+var_4] ecx +
jb loc_104D109  +
cmp [ebp+var_8] edx +
jl loc_104D16F  +
mov eax [ebp+var_C] +
jmp loc_104D172  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_8] eax +
jbe loc_104D19D  +
mov ecx [ebp+arg_4] +
mov ecx [ecx+eax*4] +
inc eax  +
mov dword ptr [ecx+38h] 1 +
cmp eax [ebp+arg_8] +
jb loc_104D18A  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
push edi  +
push ebx  +
push [ebp+arg_0]  +
call sub_104D17E  +
xor esi esi +
cmp eax esi +
jl loc_104D224  +
xor ecx ecx +
cmp edi esi +
jbe loc_104D1D9  +
mov edx [ebx+ecx*4] +
cmp [edx+48h] esi +
jnz loc_104D1D9  +
inc ecx  +
cmp ecx edi +
jb loc_104D1CC  +
cmp ecx edi +
jnz loc_104D224  +
cmp [ebp+arg_0] esi +
jnz loc_104D224  +
push 3C2Ah  +
push esi  +
call sub_104D8EC  +
pop ecx  +
pop ecx  +
cmp edi esi +
jbe loc_104D21F  +
mov eax [ebx+esi*4] +
test dword ptr [eax+20h] 400h +
jnz loc_104D21A  +
cmp dword ptr [eax+18h] 1 +
jnz loc_104D20A  +
mov eax [eax+28h] +
jmp loc_104D20D  +
mov eax [eax+24h] +
push eax  +
push offset a1S_1  +
call sub_104D8D2  +
pop ecx  +
pop ecx  +
inc esi  +
cmp esi edi +
jb loc_104D1F3  +
mov eax 80070057h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor ecx ecx +
cmp [ebp+arg_0] ecx +
jz loc_104D268  +
inc dword_10579A8  +
cmp [ebp+arg_8] ecx +
jbe loc_104D268  +
push esi  +
mov eax [ebp+arg_4] +
mov esi [ebp+arg_C] +
lea eax [eax+ecx*4] +
mov edx [eax] +
mov [edx+40h] esi +
mov eax [eax] +
mov edx dword_10579A8 +
inc ecx  +
mov [eax+44h] edx +
cmp ecx [ebp+arg_8] +
jb loc_104D248  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 1  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_104D230  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_104D0E6  +
push [ebp+arg_8]  +
mov edi eax +
push [ebp+arg_4]  +
push esi  +
call sub_104D1A8  +
test edi edi +
jge loc_104D2AB  +
mov eax edi +
jmp loc_104D2B1  +
test esi esi +
jz loc_104D2B1  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
lea ecx [eax-20h] +
cmp cx 5Eh +
ja loc_104D2D4  +
xor eax eax +
jmp loc_104D419  +
lea ecx [eax-3000h] +
cmp cx 36h +
ja loc_104D2E8  +
xor eax eax +
inc eax  +
jmp loc_104D419  +
lea ecx [eax-3041h] +
cmp cx 53h +
jbe loc_104D2E0  +
lea ecx [eax-30A1h] +
cmp cx 5Dh +
jbe loc_104D2E0  +
lea ecx [eax-3105h] +
cmp cx 27h +
jbe loc_104D2E0  +
lea ecx [eax-3131h] +
cmp cx 5Dh +
jbe loc_104D2E0  +
lea ecx [eax-3200h] +
mov edx 0FFh +
cmp cx dx +
jbe loc_104D2E0  +
lea ecx [eax-3300h] +
dec edx  +
cmp cx dx +
jbe loc_104D2E0  +
lea ecx [eax+5400h] +
mov edx 2BA3h +
cmp cx dx +
jbe loc_104D2E0  +
lea ecx [eax+2000h] +
mov edx 18FFh +
cmp cx dx +
jbe loc_104D2E0  +
lea ecx [eax+0FFh] +
cmp cx 5Dh +
jbe loc_104D2E0  +
lea ecx [eax+9Fh] +
cmp cx 3Eh +
jbe loc_104D2CD  +
mov ecx 0FFA0h +
cmp cx ax +
ja loc_104D386  +
add ecx 1Eh +
cmp ax cx +
jbe loc_104D2CD  +
mov ecx 0FFC2h +
cmp cx ax +
ja loc_104D39C  +
add ecx 5 +
cmp ax cx +
jbe loc_104D2CD  +
mov ecx 0FFCAh +
cmp cx ax +
ja loc_104D3B2  +
add ecx 5 +
cmp ax cx +
jbe loc_104D2CD  +
mov ecx 0FFD2h +
cmp cx ax +
ja loc_104D3C8  +
add ecx 5 +
cmp ax cx +
jbe loc_104D2CD  +
lea ecx [eax+26h] +
cmp cx 2 +
jbe loc_104D2CD  +
lea ecx [eax+20h] +
cmp cx 6 +
jbe loc_104D2E0  +
lea ecx [eax-4E00h] +
mov edx 51A5h +
cmp cx dx +
jbe loc_104D2E0  +
lea ecx [eax+700h] +
mov edx 12Dh +
cmp cx dx +
jbe loc_104D2E0  +
add eax 1D0h +
mov cx 1Fh +
cmp cx ax +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
call ds:GetConsoleOutputCP  +
cmp eax 3A4h +
jz loc_104D447  +
cmp eax 3A8h +
jz loc_104D447  +
cmp eax 3B4h +
jbe loc_104D444  +
cmp eax 3B6h +
jbe loc_104D447  +
xor eax eax +
retn   +
xor eax eax +
inc eax  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_0] +
mov [eax] ebx +
movzx esi word ptr [edi] +
mov [ebp+var_4] ebx +
mov [ebp+var_8] ebx +
cmp si bx +
jz loc_104D4DE  +
inc [ebp+var_8]  +
push esi  +
call sub_104D2BC  +
test eax eax +
jz loc_104D490  +
add [ebp+var_4] 2 +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_4] +
jnb loc_104D4BC  +
mov ebx [ebp+var_8] +
jmp loc_104D4BC  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_4] +
jnb loc_104D4BC  +
movzx eax si +
cmp eax 9 +
jl loc_104D4BC  +
cmp eax 0Ah +
jle loc_104D4B2  +
cmp eax 0Dh +
jz loc_104D4B2  +
cmp eax 20h +
jnz loc_104D4BC  +
mov ebx [ebp+var_8] +
dec ebx  +
cmp si 0Ah +
jz loc_104D4D0  +
mov eax [ebp+arg_4] +
cmp [ebp+var_4] eax +
ja loc_104D4DA  +
inc edi  +
inc edi  +
movzx esi word ptr [edi] +
test si si +
jnz loc_104D472  +
jmp loc_104D4DE  +
mov eax [ebp+arg_8] +
mov [eax] ebx +
xor eax eax +
inc eax  +
jmp loc_104D4E0  +
test ebx ebx +
jnz loc_104D4D0  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+NumberOfCharsWritten] +
push edi  +
mov edi [ebp+arg_8] +
mov eax edi +
cmp edi 2000h +
jb loc_104D508  +
mov eax 2000h +
push 0  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push eax  +
push esi  +
push [ebp+hConsoleOutput]  +
call ds:WriteConsoleW  +
test eax eax +
jz loc_104D521  +
xor eax eax +
jmp loc_104D542  +
call ds:GetLastError  +
test eax eax +
jz loc_104D539  +
jle loc_104D53E  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_104D53E  +
mov eax 80004005h +
test eax eax +
jl loc_104D550  +
mov ecx [ebp+NumberOfCharsWritten] +
cmp ecx edi +
ja loc_104D550  +
sub edi ecx +
lea esi [esi+ecx*2] +
jnz loc_104D4F9  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test ecx ecx +
jz loc_104D5A6  +
mov eax [ebp+arg_4] +
cmp eax 7FFFFFFFh +
ja loc_104D5A6  +
push edi  +
xor edi edi +
mov edx eax +
test eax eax +
jz loc_104D58B  +
cmp byte ptr [ecx] 0 +
jz loc_104D587  +
inc ecx  +
dec edx  +
jnz loc_104D57E  +
test edx edx +
jnz loc_104D590  +
mov edi 80070057h +
test esi esi +
jz loc_104D5A1  +
test edi edi +
jl loc_104D59E  +
sub eax edx +
mov [esi] eax +
jmp loc_104D5A1  +
and dword ptr [esi] 0 +
mov eax edi +
pop edi  +
jmp loc_104D5AB  +
mov eax 80070057h +
test eax eax +
jge loc_104D5B6  +
test esi esi +
jz loc_104D5B6  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
test ecx ecx +
jz loc_104D60C  +
mov eax [ebp+arg_4] +
cmp eax 7FFFFFFFh +
ja loc_104D60C  +
push edi  +
xor edi edi +
mov edx eax +
test eax eax +
jz loc_104D5F1  +
cmp [ecx] di +
jz loc_104D5ED  +
inc ecx  +
inc ecx  +
dec edx  +
jnz loc_104D5E3  +
test edx edx +
jnz loc_104D5F6  +
mov edi 80070057h +
test esi esi +
jz loc_104D607  +
test edi edi +
jl loc_104D604  +
sub eax edx +
mov [esi] eax +
jmp loc_104D607  +
and dword ptr [esi] 0 +
mov eax edi +
pop edi  +
jmp loc_104D611  +
mov eax 80070057h +
test eax eax +
jge loc_104D61C  +
test esi esi +
jz loc_104D61C  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
mov [ebp+var_4] edi +
cmp esi edi +
jnz loc_104D643  +
mov [ebp+arg_0] 1 +
jmp loc_104D688  +
lea eax [ebp+var_4] +
push eax  +
push 7FFFFFFFh  +
push esi  +
call sub_104D5C0  +
cmp eax edi +
mov [ebp+arg_0] eax +
jl loc_104D688  +
push ebx  +
mov ebx [ebp+var_4] +
cmp [ebp+arg_4] edi +
jz loc_104D66B  +
call sub_104D422  +
test eax eax +
jnz loc_104D69F  +
and [ebp+arg_0] 0 +
mov edi ebx +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_104D67A  +
mov [eax] edi +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_104D687  +
and [ebp+arg_0] 0 +
mov [eax] ebx +
pop ebx  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
push eax  +
call sub_104D2BC  +
inc edi  +
test eax eax +
jz loc_104D69D  +
inc edi  +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_104D691  +
jmp loc_104D671  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push 0FFFFFFF5h  +
mov [ebp+var_4] edi +
call ds:GetStdHandle  +
mov ebx eax +
mov [ebp+hFile] ebx +
cmp ebx 0FFFFFFFFh +
jz loc_104D7F7  +
cmp ebx edi +
jz loc_104D7F7  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+dwBytes]  +
push [ebp+NumberOfCharsWritten]  +
call sub_104D626  +
mov esi eax +
test esi esi +
jl loc_104D825  +
push ebx  +
call sub_104DBC4  +
test eax eax +
jz loc_104D73A  +
push [ebp+var_4]  +
push [ebp+NumberOfCharsWritten]  +
push ebx  +
call sub_104D4EC  +
test eax eax +
jz loc_104D716  +
xor esi esi +
jmp loc_104D825  +
call ds:GetLastError  +
test eax eax +
jz loc_104D72E  +
jle loc_104D733  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_104D733  +
mov eax 80004005h +
mov esi eax +
jmp loc_104D825  +
lea eax [ebp+dwBytes] +
push eax  +
mov eax [ebp+var_4] +
push 2  +
pop ecx  +
inc eax  +
mul  ecx +
push edx  +
push eax  +
call sub_101B8F5  +
mov esi eax +
test esi esi +
jl loc_104D825  +
push [ebp+dwBytes]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jnz loc_104D77A  +
mov esi 8007000Eh +
jmp loc_104D811  +
push edi  +
push [ebp+NumberOfCharsWritten]  +
mov byte ptr [edi] 0 +
call ds:CharToOemW  +
mov ebx 80070000h +
test eax eax +
jnz loc_104D7B0  +
call ds:GetLastError  +
test eax eax +
jz loc_104D7A5  +
jle loc_104D7AA  +
and eax 0FFFFh +
or eax ebx +
jmp loc_104D7AA  +
mov eax 80004005h +
mov esi eax +
test eax eax +
jl loc_104D811  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+dwBytes]  +
push edi  +
call sub_104D55B  +
mov esi eax +
test esi esi +
jl loc_104D811  +
xor esi esi +
push esi  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push [ebp+NumberOfCharsWritten]  +
push edi  +
push [ebp+hFile]  +
call ds:WriteFile  +
test eax eax +
jnz loc_104D811  +
call ds:GetLastError  +
cmp eax esi +
jz loc_104D7F0  +
jle loc_104D80F  +
and eax 0FFFFh +
or eax ebx +
jmp loc_104D80F  +
mov eax 80004005h +
jmp loc_104D80F  +
call ds:GetLastError  +
cmp eax edi +
jle loc_104D733  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test edi edi +
jz loc_104D825  +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+NumberOfCharsWritten] 0 +
push esi  +
push edi  +
lea eax [ebp+Arguments] +
push eax  +
push 400h  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 0  +
push 0  +
push [ebp+lpSource]  +
push 500h  +
call ds:FormatMessageW  +
mov esi [ebp+arg_8] +
mov [ebp+lpSource] eax +
test eax eax +
jnz loc_104D887  +
call ds:GetLastError  +
test eax eax +
jz loc_104D880  +
jle loc_104D890  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_104D890  +
mov eax 80004005h +
jmp loc_104D890  +
push [ebp+NumberOfCharsWritten]  +
push esi  +
call sub_104D6AE  +
mov edi eax +
test esi esi +
jz loc_104D89B  +
mov eax [ebp+lpSource] +
mov [esi] eax +
cmp [ebp+NumberOfCharsWritten] 0 +
jz loc_104D8AA  +
push [ebp+NumberOfCharsWritten]  +
call ds:LocalFree  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
lea eax [ebp+Arguments] +
push eax  +
push [ebp+lpSource]  +
call sub_104D833  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
lea eax [ebp+Arguments] +
push eax  +
push [ebp+lpSource]  +
call sub_104D833  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 804h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push 400h  +
lea eax [ebp+Source] +
push eax  +
push [ebp+uID]  +
call sub_104C391  +
test eax eax +
jl loc_104D92E  +
push esi  +
lea eax [ebp+Arguments] +
push eax  +
lea eax [ebp+Source] +
push eax  +
call sub_104D833  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+NumberOfCharsWritten]  +
push 0  +
call sub_104D6AE  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
mov [ebp+NumberOfCharsWritten] ebx +
mov [ebp+hLibModule] ebx +
cmp [ebp+lpLibFileName] ebx +
jnz loc_104D98F  +
mov esi 1000h +
cmp dword_10579AC ebx +
jz loc_104D9BF  +
push dword ptr [ebp+Arguments]  +
push 3B64h  +
push ebx  +
call sub_104D8EC  +
add esp 0Ch +
jmp loc_104D9CC  +
push [ebp+lpLibFileName]  +
mov esi 800h +
call ds:LoadLibraryW  +
mov [ebp+hLibModule] eax +
cmp eax ebx +
jnz loc_104D974  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_104D9B8  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_104DA57  +
push 3B61h  +
push ebx  +
call sub_104D8EC  +
pop ecx  +
pop ecx  +
push edi  +
push ebx  +
mov edi 400h +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push ebx  +
push dword ptr [ebp+Arguments]  +
or esi 300h +
push [ebp+hLibModule]  +
push esi  +
mov esi ds:FormatMessageW +
call esi  +
cmp [ebp+NumberOfCharsWritten] ebx +
jnz loc_104DA0F  +
cmp [ebp+lpLibFileName] ebx +
jz loc_104DA19  +
push ebx  +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push ebx  +
push dword ptr [ebp+Arguments]  +
push ebx  +
push 1300h  +
call esi  +
cmp [ebp+NumberOfCharsWritten] ebx +
jz loc_104DA19  +
push [ebp+NumberOfCharsWritten]  +
call sub_104D940  +
jmp loc_104DA26  +
push 3B63h  +
push ebx  +
call sub_104D8EC  +
pop ecx  +
pop ecx  +
mov eax dword ptr [ebp+Arguments] +
and eax 0FFFFh +
pop edi  +
cmp eax 5 +
jnz loc_104DA55  +
lea eax [ebp+var_C] +
push eax  +
push ebx  +
call sub_10514ED  +
test eax eax +
jnz loc_104DA55  +
cmp [ebp+var_C] 1 +
jnz loc_104DA55  +
push 3B62h  +
push ebx  +
call sub_104D8EC  +
pop ecx  +
pop ecx  +
xor esi esi +
cmp [ebp+hLibModule] ebx +
jz loc_104DA65  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
cmp [ebp+NumberOfCharsWritten] ebx +
jz loc_104DA73  +
push [ebp+NumberOfCharsWritten]  +
call ds:LocalFree  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_C] +
and eax 80000001h +
push ebx  +
push edi  +
jns loc_104DA97  +
dec eax  +
or eax 0FFFFFFFEh +
inc eax  +
sub [ebp+arg_C] eax +
mov edi [ebp+arg_8] +
cmp [ebp+arg_C] edi +
jg loc_104DAA9  +
mov [ebp+arg_C] 4Fh +
push 800h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
mov [ebp+var_4] ebx +
test ebx ebx +
jnz loc_104DAD2  +
mov [ebp+arg_0] 8007000Eh +
jmp loc_104DBB6  +
push [ebp+arg_0]  +
xor eax eax +
push 400h  +
push ebx  +
mov [ebx] ax +
call sub_101BC13  +
mov [ebp+arg_0] eax +
test eax eax +
jl loc_104DBA6  +
cmp [ebp+arg_4] edi +
push esi  +
jge loc_104DB0F  +
mov esi edi +
sub esi [ebp+arg_4] +
push offset asc_10173B4  +
call sub_104D940  +
dec esi  +
jnz loc_104DAFB  +
mov eax [ebp+arg_C] +
sub eax edi +
jmp loc_104DB1F  +
push offset asc_10173B4  +
call sub_104D940  +
mov eax [ebp+arg_C] +
sub eax [ebp+arg_4] +
cmp word ptr [ebx] 0 +
mov edi ebx +
jz loc_104DBA5  +
lea ecx [ebp+arg_4] +
push ecx  +
push eax  +
push edi  +
call sub_104D450  +
push edi  +
test eax eax +
jz loc_104DB99  +
mov eax [ebp+arg_4] +
lea esi [edi+eax*2] +
movzx ebx word ptr [esi] +
xor eax eax +
mov [esi] ax +
call sub_104D940  +
mov edi esi +
mov [esi] bx +
movzx eax word ptr [edi] +
cmp eax 9 +
jl loc_104DB68  +
cmp eax 0Ah +
jle loc_104DB66  +
cmp eax 0Dh +
jz loc_104DB66  +
cmp eax 20h +
jnz loc_104DB68  +
inc edi  +
inc edi  +
push offset asc_100168C  +
call sub_104D940  +
cmp [ebp+arg_8] 0 +
jle loc_104DB88  +
mov esi [ebp+arg_8] +
push offset asc_10173B4  +
call sub_104D940  +
dec esi  +
jnz loc_104DB7B  +
mov eax [ebp+arg_C] +
sub eax [ebp+arg_8] +
cmp word ptr [edi] 0 +
mov ebx [ebp+var_4] +
jnz loc_104DB27  +
jmp loc_104DBA5  +
push offset a1S_2  +
call sub_104D8D2  +
pop ecx  +
pop ecx  +
pop esi  +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+arg_0] +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+hConsoleHandle]  +
call ds:GetFileType  +
and eax 0FFFF7FFFh +
mov [ebp+Mode] eax +
cmp eax 2 +
jz loc_104DBE4  +
xor eax eax +
jmp locret_104DC1F  +
lea eax [ebp+Mode] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:GetConsoleMode  +
test eax eax +
jz loc_104DBF9  +
xor eax eax +
jmp loc_104DC16  +
call ds:GetLastError  +
test eax eax +
jz loc_104DC11  +
jle loc_104DC16  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_104DC16  +
mov eax 80004005h +
xor ecx ecx +
test eax eax +
setnl cl  +
mov eax ecx +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_14] +
push esi  +
xor esi esi +
and ecx 100h +
push edi  +
mov edi [ebp+arg_4] +
mov eax 80070057h +
jz loc_104DC50  +
cmp [ebp+arg_0] esi +
jnz loc_104DC56  +
test edi edi +
jnz loc_104DC5E  +
jmp loc_104DC56  +
xor esi esi +
test edi edi +
jz loc_104DC5E  +
cmp edi 7FFFFFFFh +
jbe loc_104DC60  +
mov esi eax +
test esi esi +
jl loc_104DCE0  +
mov edx [ebp+arg_0] +
push ebx  +
xor esi esi +
mov ebx edi +
mov [ebp+arg_4] edx +
mov [ebp+var_4] ebx +
cmp ecx esi +
jz loc_104DC82  +
cmp [ebp+arg_8] esi +
jnz loc_104DC82  +
mov [ebp+arg_8] offset dword_1008298 +
test [ebp+arg_14] 0FFFFE000h +
jz loc_104DCE8  +
mov esi eax +
test edi edi +
jz loc_104DC96  +
xor eax eax +
mov [edx] ax +
test [ebp+arg_14] 1C00h +
jz loc_104DCBE  +
test edi edi +
jz loc_104DCBE  +
push [ebp+arg_14]  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [edi+edi] +
mov edi [ebp+arg_0] +
push eax  +
lea ebx [ebp+var_4] +
xor ecx ecx +
call sub_1047CAD  +
mov ebx [ebp+var_4] +
test esi esi +
jge loc_104DCCA  +
cmp esi 8007007Ah +
jnz loc_104DCDF  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_104DCD6  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_104DCDF  +
mov [eax] ebx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 18h  +
xor ecx ecx +
cmp edi ecx +
jnz loc_104DD04  +
mov ecx [ebp+arg_8] +
cmp word ptr [ecx] 0 +
jz loc_104DCCA  +
mov esi edx +
neg esi  +
sbb esi esi +
and esi 23h +
add esi eax +
jmp loc_104DC96  +
mov esi [ebp+arg_8] +
mov [ebp+arg_4] 7FFFFFFEh +
sub [ebp+arg_4] edi +
mov ebx edi +
mov eax edx +
mov [ebp+var_4] ecx +
sub esi edx +
mov edx [ebp+arg_4] +
add edx ebx +
jz loc_104DD35  +
movzx edx word ptr [esi+eax] +
test dx dx +
jz loc_104DD35  +
mov [eax] dx +
inc eax  +
inc eax  +
dec ebx  +
inc ecx  +
test ebx ebx +
jnz loc_104DD1A  +
test ebx ebx +
jnz loc_104DD43  +
dec eax  +
dec eax  +
dec ecx  +
mov [ebp+var_4] 8007007Ah +
mov esi [ebp+var_4] +
xor edx edx +
mov [eax] dx +
mov eax [ebp+arg_0] +
mov ebx edi +
sub ebx ecx +
lea eax [eax+ecx*2] +
mov [ebp+arg_4] eax +
mov [ebp+var_4] ebx +
test esi esi +
jl loc_104DC96  +
mov ecx [ebp+arg_14] +
test ecx 200h +
jz loc_104DCCA  +
cmp ebx 1 +
jbe loc_104DCCA  +
lea eax [ebx+ebx] +
cmp eax 2 +
jbe loc_104DCCA  +
add eax 0FFFFFFFEh +
push eax  +
mov eax [ebp+arg_4] +
and ecx 0FFh +
push ecx  +
add eax 2 +
push eax  +
call memset  +
add esp 0Ch +
jmp loc_104DCCA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A7Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
or [ebp+hFindFile] 0FFFFFFFFh +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
xor edi edi +
push 800h  +
push edi  +
mov [ebp+var_A70] 1 +
mov [ebp+var_A6C] 400h +
mov [ebp+var_A74] edi +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax edi +
jnz loc_104DE14  +
mov [ebp+var_A70] 8007000Eh +
jmp loc_104E0C0  +
xor ecx ecx +
push esi  +
mov [eax] cx +
mov esi [ebx] +
mov [ebp+var_A68] eax +
jmp loc_104E034  +
mov eax 100h +
push eax  +
lea ecx [ebp+var_814] +
push ecx  +
push eax  +
lea ecx [ebp+var_614] +
push ecx  +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
push 3  +
lea eax [ebp+var_C] +
push eax  +
push esi  +
call _wsplitpath_s  +
add esp 24h +
lea eax [ebp+FindFileData] +
push eax  +
push esi  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jz loc_104DF9C  +
mov ecx offset a_ +
lea eax [ebp+FindFileData.cFileName] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_104DEA1  +
cmp dx di +
jz loc_104DE9D  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_104DEA1  +
add eax 4 +
add ecx 4 +
cmp dx di +
jnz loc_104DE7B  +
xor eax eax +
jmp loc_104DEA6  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax edi +
jz loc_104DF7F  +
mov ecx offset a__ +
lea eax [ebp+FindFileData.cFileName] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_104DEDF  +
cmp dx di +
jz loc_104DEDB  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_104DEDF  +
add eax 4 +
add ecx 4 +
cmp dx di +
jnz loc_104DEB9  +
xor eax eax +
jmp loc_104DEE4  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax edi +
jz loc_104DF7F  +
push offset dword_1008298  +
lea eax [ebp+FindFileData.cFileName] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_414] +
push 104h  +
push eax  +
call _wmakepath_s  +
add esp 18h +
push edi  +
lea eax [ebp+var_A6C] +
push eax  +
lea eax [ebp+var_A68] +
push eax  +
lea eax [ebp+var_414] +
push eax  +
push [ebp+var_A6C]  +
push [ebp+var_A68]  +
call sub_104DC28  +
cmp eax edi +
mov [ebp+var_A70] eax +
jl loc_104E08E  +
cmp [ebp+var_A6C] edi +
jz loc_104E06C  +
inc [ebp+var_A74]  +
cmp [ebp+arg_4] edi +
jz loc_104E03D  +
add [ebp+var_A68] 2 +
mov ecx [ebp+var_A68] +
xor eax eax +
dec [ebp+var_A6C]  +
mov [ecx] ax +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+hFindFile]  +
call ds:FindNextFileW  +
test eax eax +
jnz loc_104DE70  +
jmp loc_104E018  +
push 2Ah  +
push esi  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_104E018  +
push 3Fh  +
push esi  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_104E018  +
push edi  +
lea eax [ebp+var_A6C] +
push eax  +
lea eax [ebp+var_A68] +
push eax  +
push esi  +
push [ebp+var_A6C]  +
push [ebp+var_A68]  +
call sub_104DC28  +
cmp eax edi +
mov [ebp+var_A70] eax +
jl loc_104E0A3  +
cmp [ebp+var_A6C] edi +
jz loc_104E078  +
inc [ebp+var_A74]  +
cmp [ebp+arg_4] edi +
jz loc_104E03D  +
add [ebp+var_A68] 2 +
mov ecx [ebp+var_A68] +
xor eax eax +
dec [ebp+var_A6C]  +
mov [ecx] ax +
cmp [ebp+arg_4] edi +
jz loc_104E03D  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx di +
jnz loc_104E022  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+2] +
cmp [esi] di +
jnz loc_104DE27  +
mov eax [ebx] +
cmp eax edi +
jz loc_104E054  +
push eax  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [ebx] edi +
cmp [ebp+var_A74] edi +
jz loc_104E084  +
mov eax [ebp+lpMem] +
mov [ebx] eax +
mov [ebp+lpMem] edi +
jmp loc_104E08E  +
mov [ebp+var_A70] 8007007Ah +
jmp loc_104E08E  +
mov [ebp+var_A70] 8007007Ah +
jmp loc_104E0A3  +
mov [ebp+var_A70] 80070002h +
cmp [ebp+hFindFile] 0FFFFFFFFh +
jz loc_104E0A3  +
push [ebp+hFindFile]  +
call ds:FindClose  +
pop esi  +
cmp [ebp+lpMem] edi +
jz loc_104E0C0  +
push [ebp+lpMem]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_A70] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push edi  +
xor edi edi +
cmp [ebp+arg_4] 2 +
mov dword ptr [ebp+WideCharStr] edi +
mov [ebp+var_8] edi +
mov [ebp+var_1C] edi +
mov [ebp+dwMode] edi +
jnb loc_104E104  +
mov [ebp+var_C] 80070057h +
jmp loc_104E39B  +
push esi  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
mov esi eax +
mov [ebp+hConsoleHandle] esi +
cmp esi 0FFFFFFFFh +
jz loc_104E11B  +
cmp esi edi +
jnz loc_104E143  +
call ds:GetLastError  +
cmp eax edi +
jz loc_104E133  +
jle loc_104E138  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_104E138  +
mov eax 80004005h +
cmp eax edi +
mov [ebp+var_C] eax +
jl loc_104E387  +
lea eax [ebp+dwMode] +
push eax  +
push esi  +
call ds:GetConsoleMode  +
test eax eax +
jnz loc_104E17A  +
call ds:GetLastError  +
cmp eax edi +
jz loc_104E16A  +
jle loc_104E16F  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_104E16F  +
mov eax 80004005h +
cmp eax edi +
mov [ebp+var_C] eax +
jl loc_104E387  +
mov eax [ebp+dwMode] +
and eax 0FFFFFFF9h +
push eax  +
push esi  +
call ds:SetConsoleMode  +
test eax eax +
jz loc_104E191  +
mov [ebp+var_C] edi +
jmp loc_104E1B9  +
call ds:GetLastError  +
cmp eax edi +
jz loc_104E1A9  +
jle loc_104E1AE  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_104E1AE  +
mov eax 80004005h +
cmp eax edi +
mov [ebp+var_C] eax +
jl loc_104E387  +
cmp [ebp+arg_C] edi +
jz loc_104E1F3  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push dword ptr [ebp+Arguments]  +
call sub_104D5C0  +
mov [ebp+var_C] eax +
cmp [ebp+var_8] edi +
jz loc_104E1E4  +
push dword ptr [ebp+Arguments]  +
push offset a1S  +
call sub_104D8D2  +
pop ecx  +
pop ecx  +
lea eax [ebp+Buffer.Event] +
mov [ebp+var_1C] eax +
mov eax [ebp+arg_10] +
cmp eax edi +
jz loc_104E1F3  +
mov [eax] edi +
mov esi ds:wprintf +
push ebx  +
mov ebx offset aCC +
push [ebp+hConsoleHandle]  +
call sub_104DBC4  +
test eax eax +
jnz loc_104E2DA  +
mov edi ds:ReadFile +
push eax  +
lea eax [ebp+NumberOfCharsRead] +
push eax  +
push 1  +
lea eax [ebp-1] +
push eax  +
push [ebp+hConsoleHandle]  +
call edi  +
test eax eax +
jnz loc_104E256  +
call ds:GetLastError  +
test eax eax +
jz loc_104E241  +
jle loc_104E246  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_104E246  +
mov eax 80004005h +
mov [ebp+var_C] eax +
test eax eax +
jl loc_104E386  +
jmp loc_104E3D1  +
cmp [ebp+NumberOfCharsRead] 0 +
jnz loc_104E268  +
mov dword ptr [ebp+WideCharStr] 0Ah +
jmp loc_104E3D1  +
push 1  +
lea eax [ebp+WideCharStr] +
push eax  +
push 1  +
lea eax [ebp-1] +
push eax  +
push 0  +
call ds:_getmbcp  +
push eax  +
call ds:MultiByteToWideChar  +
test eax eax +
jnz loc_104E28A  +
and dword ptr [ebp+WideCharStr] eax +
push 0Dh  +
pop eax  +
cmp ax [ebp+WideCharStr] +
jnz loc_104E3D1  +
push 0  +
lea eax [ebp+NumberOfCharsRead] +
push eax  +
push 1  +
lea eax [ebp-1] +
push eax  +
push [ebp+hConsoleHandle]  +
call edi  +
test eax eax +
jz loc_104E2B5  +
and [ebp+var_C] 0 +
jmp loc_104E3D1  +
call ds:GetLastError  +
test eax eax +
jz loc_104E2CD  +
jle loc_104E2D2  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_104E2D2  +
mov eax 80004005h +
mov [ebp+var_C] eax +
jmp loc_104E3D1  +
cmp [ebp+arg_C] 0 +
jz loc_104E3BC  +
xor eax eax +
lea edi [ebp+Buffer] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+NumberOfCharsRead] +
push eax  +
push 1  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadConsoleInputW  +
xor eax eax +
inc eax  +
cmp ax [ebp+Buffer.EventType] +
jnz loc_104E1FF  +
mov eax [ebp+var_1C] +
cmp dword ptr [eax] 1 +
jnz loc_104E1FF  +
mov ecx eax +
mov al [ecx+0Ah] +
test al al +
jz loc_104E330  +
cbw   +
movzx eax ax +
mov dword ptr [ebp+WideCharStr] eax +
jmp loc_104E3D1  +
movzx eax word ptr [ecx+6] +
xor ecx ecx +
cmp cx ax +
jz loc_104E1FF  +
movzx eax ax +
cmp eax 10h +
jl loc_104E350  +
cmp eax 11h +
jle loc_104E1FF  +
cmp [ebp+var_8] 0 +
jbe loc_104E365  +
push 8  +
push 8  +
push ebx  +
call esi  +
add esp 0Ch +
dec [ebp+var_8]  +
jnz loc_104E356  +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_104E372  +
mov dword ptr [eax] 1 +
mov eax [ebp+var_1C] +
mov edx [ebp+var_8] +
mov ax [eax+6] +
mov ecx dword ptr [ebp+Arguments] +
inc [ebp+var_8]  +
mov [ecx+edx*2] ax +
pop ebx  +
xor edi edi +
pop esi  +
cmp [ebp+dwMode] edi +
jz loc_104E39B  +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
mov eax [ebp+var_8] +
cmp eax [ebp+arg_4] +
jb loc_104E49F  +
cmp [ebp+var_C] edi +
jl loc_104E4A8  +
mov [ebp+var_C] 8007007Ah +
jmp loc_104E4A8  +
push 0  +
lea eax [ebp+NumberOfCharsRead] +
push eax  +
push 1  +
lea eax [ebp+WideCharStr] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadConsoleW  +
mov ecx dword ptr [ebp+WideCharStr] +
movzx eax cx +
sub eax 3 +
jz loc_104E493  +
sub eax 5 +
jz loc_104E453  +
dec eax  +
dec eax  +
jz loc_104E484  +
sub eax 3 +
jz loc_104E484  +
sub eax 0Eh +
jz loc_104E435  +
mov eax [ebp+arg_4] +
dec eax  +
cmp [ebp+var_8] eax +
jnb loc_104E1FF  +
mov edx [ebp+var_8] +
mov eax dword ptr [ebp+Arguments] +
inc [ebp+var_8]  +
cmp [ebp+arg_8] 0 +
mov [eax+edx*2] cx +
jz loc_104E1FF  +
movzx eax [ebp+WideCharStr] +
push eax  +
push offset a1C  +
call sub_104D8D2  +
pop ecx  +
pop ecx  +
jmp loc_104E1FF  +
cmp [ebp+var_8] 0 +
jbe loc_104E1FF  +
push 8  +
push 8  +
push ebx  +
call esi  +
add esp 0Ch +
dec [ebp+var_8]  +
jnz loc_104E43F  +
jmp loc_104E1FF  +
cmp [ebp+var_8] 0 +
jbe loc_104E1FF  +
mov edx [ebp+var_8] +
mov ecx dword ptr [ebp+Arguments] +
xor eax eax +
dec [ebp+var_8]  +
mov [ecx+edx*2] ax +
cmp [ebp+arg_8] eax +
jz loc_104E1FF  +
push 8  +
push 8  +
push ebx  +
call esi  +
add esp 0Ch +
jmp loc_104E1FF  +
push offset asc_100168C  +
call sub_104D940  +
jmp loc_104E386  +
mov [ebp+var_C] 800704C7h +
jmp loc_104E386  +
mov edx dword ptr [ebp+Arguments] +
xor ecx ecx +
mov [edx+eax*2] cx +
mov eax [ebp+var_C] +
pop edi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
push 80h  +
push 3  +
push edi  +
push 3  +
push 80000000h  +
push dword ptr [ebp+Arguments]  +
xor esi esi +
mov [ebp+lpBuffer] edi +
call ds:CreateFileW  +
mov [ebp+hObject] eax +
cmp eax 0FFFFFFFFh +
jnz loc_104E54E  +
test [ebp+arg_4] 2 +
jz loc_104E510  +
call ds:GetLastError  +
cmp eax edi +
jz loc_104E504  +
jle loc_104E509  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_104E509  +
mov eax 80004005h +
mov esi eax +
jmp loc_104E651  +
test [ebp+arg_4] 1 +
jnz loc_104E51F  +
cmp dword ptr [ebp+arg_4] edi +
jnz loc_104E651  +
call ds:GetLastError  +
mov ecx 0FFFFh +
cmp eax edi +
jz loc_104E539  +
jle loc_104E53B  +
and eax ecx +
or eax 80070000h +
jmp loc_104E53B  +
xor eax eax +
mov esi eax +
and eax ecx +
dec eax  +
dec eax  +
jnz loc_104E642  +
xor esi esi +
jmp loc_104E651  +
mov eax dword ptr [ebp+arg_4] +
test al 2 +
jnz loc_104E642  +
cmp eax edi +
jz loc_104E642  +
test al 1 +
jz loc_104E56A  +
mov esi 800700B7h +
test eax 1000h +
jz loc_104E642  +
push ebx  +
push 800h  +
push edi  +
mov edi ds:GetProcessHeap +
call edi  +
mov esi ds:HeapAlloc +
push eax  +
call esi  +
mov ebx eax +
test ebx ebx +
jz loc_104E5A7  +
xor eax eax +
push 20h  +
push eax  +
mov [ebx] ax +
call edi  +
push eax  +
call esi  +
mov [ebp+lpBuffer] eax +
test eax eax +
jnz loc_104E5AE  +
mov esi 8007000Eh +
jmp loc_104E61D  +
push dword ptr [ebp+Arguments]  +
xor ecx ecx +
push 3C8Ch  +
push ecx  +
mov [eax] cx +
call sub_104D8EC  +
add esp 0Ch +
push 0  +
push 0  +
push 1  +
push 400h  +
push ebx  +
call sub_104E0DB  +
mov esi eax +
test esi esi +
jl loc_104E61D  +
push 10h  +
push [ebp+lpBuffer]  +
push 3BC7h  +
call sub_104C391  +
mov esi eax +
test esi esi +
jl loc_104E61D  +
mov esi ds:_wcslwr +
push ebx  +
call esi  +
push [ebp+lpBuffer]  +
call esi  +
push [ebp+lpBuffer]  +
push ebx  +
call ds:wcsstr  +
add esp 10h +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 7FF8FF49h +
add esi 800700B7h +
test ebx ebx +
jz loc_104E62D  +
push ebx  +
push 0  +
call edi  +
push eax  +
call ds:HeapFree  +
cmp [ebp+lpBuffer] 0 +
pop ebx  +
jz loc_104E642  +
push [ebp+lpBuffer]  +
push 0  +
call edi  +
push eax  +
call ds:HeapFree  +
cmp [ebp+hObject] 0FFFFFFFFh +
jz loc_104E651  +
push [ebp+hObject]  +
call ds:CloseHandle  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_8] +
and dword ptr [edx] 0 +
mov ecx [ebp+arg_0] +
jmp loc_104E678  +
cmp ax [ebp+arg_4] +
jnz loc_104E676  +
inc dword ptr [edx]  +
inc ecx  +
inc ecx  +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_104E66E  +
xor eax eax +
cmp eax [edx] +
sbb eax eax +
inc eax  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push esi  +
lea eax [ebp+pvarg] +
push eax  +
xor esi esi +
call ds:VariantInit  +
cmp [ebp+arg_0] esi +
jnz loc_104E6B1  +
mov eax [ebp+arg_4] +
and [eax] esi +
jmp loc_104E6EC  +
push [ebp+arg_0]  +
call ds:SysAllocString  +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
test eax eax +
jnz loc_104E6C8  +
mov esi 8007000Eh +
jmp loc_104E6EC  +
push 8  +
pop eax  +
push 13h  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
push 0  +
lea eax [ebp+pvarg] +
push eax  +
push eax  +
call ds:VariantChangeType  +
mov esi eax +
test esi esi +
jl loc_104E6EC  +
mov eax [ebp+arg_4] +
mov ecx dword ptr [ebp+pvarg.anonymous_0+8] +
mov [eax] ecx +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_18] eax +
mov eax [ebp+arg_4] +
push ebx  +
push edi  +
mov [ebp+var_20] eax +
mov dword ptr [ebp+var_14] 3Ah +
xor eax eax +
lea edi [ebp+var_10] +
stos   +
stos   +
push 800h  +
push 0  +
stos   +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_104E757  +
mov [ebp+var_1C] 8007000Eh +
jmp loc_104E83C  +
push esi  +
push 8  +
push ebx  +
push 1Eh  +
xor eax eax +
mov esi 400h +
push esi  +
mov [ebx] ax +
call ds:GetLocaleInfoW  +
cmp eax 1 +
jle loc_104E78A  +
push ebx  +
push 8  +
lea eax [ebp+var_14] +
push eax  +
call sub_101BC13  +
mov [ebp+var_1C] eax +
test eax eax +
jl loc_104E82B  +
push [ebp+var_18]  +
push esi  +
push ebx  +
call sub_101BC13  +
mov [ebp+var_1C] eax +
test eax eax +
jl loc_104E82B  +
mov esi ds:wcstok +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
call esi  +
and [ebp+var_18] 0 +
pop ecx  +
pop ecx  +
lea edi [ebp+var_2C] +
test eax eax +
jz loc_104E7DD  +
push edi  +
push eax  +
call sub_104E690  +
inc [ebp+var_18]  +
add edi 4 +
mov [ebp+var_1C] eax +
test eax eax +
jl loc_104E82B  +
lea eax [ebp+var_14] +
push eax  +
push 0  +
call esi  +
cmp [ebp+var_18] 3 +
pop ecx  +
pop ecx  +
jb loc_104E7B5  +
mov eax [ebp+var_18] +
dec eax  +
jz loc_104E820  +
dec eax  +
jz loc_104E80B  +
dec eax  +
jz loc_104E7F2  +
mov [ebp+var_1C] 80070057h +
jmp loc_104E82B  +
mov cx word ptr [ebp+var_2C] +
mov eax [ebp+var_20] +
mov [eax+64h] cx +
mov cx [ebp+var_28] +
mov [eax+66h] cx +
mov cx [ebp+var_24] +
jmp loc_104E81A  +
mov cx word ptr [ebp+var_2C] +
mov eax [ebp+var_20] +
mov [eax+66h] cx +
mov cx [ebp+var_28] +
mov [eax+68h] cx +
jmp loc_104E82B  +
mov ax word ptr [ebp+var_2C] +
mov ecx [ebp+var_20] +
mov [ecx+68h] ax +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop esi  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_1C] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+lpMem] 0 +
push ebx  +
push edi  +
push 800h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ebx eax +
test ebx ebx +
jnz loc_104E886  +
mov edi 8007000Eh +
jmp loc_104E912  +
push esi  +
push [ebp+arg_4]  +
mov esi 400h +
push esi  +
xor eax eax +
push ebx  +
mov [ebx] ax +
call sub_101BC13  +
mov edi eax +
test edi edi +
jl loc_104E901  +
lea eax [ebp+lpMem] +
push eax  +
mov eax [ebp+arg_0] +
push eax  +
call dword ptr [eax+4]  +
mov edi eax +
test edi edi +
jl loc_104E901  +
jnz loc_104E8D6  +
push offset asc_10173B4  +
push esi  +
push ebx  +
call sub_101BC4D  +
mov edi eax +
test edi edi +
jl loc_104E901  +
push [ebp+lpMem]  +
push esi  +
push ebx  +
call sub_101BC4D  +
mov edi eax +
test edi edi +
jl loc_104E901  +
lea eax [ebp+pdateOut] +
push eax  +
push 0  +
push esi  +
push ebx  +
call ds:VarDateFromStr  +
mov edi eax +
test edi edi +
jl loc_104E901  +
mov eax [ebp+arg_8] +
fld  [ebp+pdateOut] +
add eax 5Ch +
push eax  +
push ecx  +
push ecx  +
fstp  [esp+2Ch+var_2C] +
call ds:VariantTimeToSystemTime  +
mov edi eax +
push ebx  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop esi  +
cmp [ebp+lpMem] 0 +
jz loc_104E92A  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
xor edi edi +
mov [ebp+var_4] edi +
mov [ebp+lpMem] edi +
call sub_104C31B  +
mov esi [ebp+arg_4] +
lea ebx [esi+5Ch] +
mov [ebx] eax +
cmp eax edi +
jnz loc_104E969  +
mov [ebp+var_4] 8007000Eh +
jmp loc_104EA07  +
mov eax [esi+20h] +
test al 20h +
jz loc_104E9E1  +
push 800h  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
cmp eax edi +
jnz loc_104E993  +
mov [ebp+var_4] 8007000Eh +
jmp loc_104E9EF  +
xor ecx ecx +
mov [eax] cx +
push dword ptr [esi+2Ch]  +
push 400h  +
push eax  +
call sub_101BC13  +
cmp eax edi +
mov [ebp+var_4] eax +
jl loc_104E9EF  +
mov esi ds:wcstok +
mov edi offset asc_1001810 +
push edi  +
push [ebp+lpMem]  +
jmp loc_104E9D0  +
push eax  +
push dword ptr [ebx]  +
call ds:__imp__wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_104E9EF  +
push edi  +
push 0  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_104E9BE  +
mov [ebp+var_4] 80070057h +
jmp loc_104E9EF  +
test al al +
jns loc_104EA07  +
push edi  +
push ebx  +
call sub_104DDAB  +
mov [ebp+var_4] eax +
cmp [ebp+lpMem] 0 +
jz loc_104EA07  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
and [ebp+lpMem] 0 +
and [ebp+var_C] 0 +
push ebx  +
push esi  +
push [ebp+arg_4]  +
call sub_104C31B  +
mov esi ds:GetProcessHeap +
mov [ebp+lpMem] eax +
test eax eax +
jnz loc_104EA47  +
mov ebx 8007000Eh +
jmp loc_104EB68  +
push edi  +
mov edi [ebp+arg_8] +
test dword ptr [edi+20h] 8 +
jnz loc_104EA75  +
push 1000h  +
xor ebx ebx +
push ebx  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+arg_8] eax +
cmp eax ebx +
jz loc_104EA8C  +
mov [ebp+arg_4] 800h +
jmp loc_104EAB0  +
push 800h  +
push 0  +
call esi  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+arg_8] eax +
test eax eax +
jnz loc_104EA96  +
mov ebx 8007000Eh +
jmp loc_104EB53  +
lea eax [ebp+var_C] +
push eax  +
push 20h  +
push dword ptr [edi+2Ch]  +
mov [ebp+arg_4] 400h +
call sub_104E65E  +
inc [ebp+var_C]  +
xor ebx ebx +
mov eax [ebp+arg_8] +
mov [ebp+var_8] eax +
mov [ebp+var_10] ebx +
jmp loc_104EABD  +
xor ebx ebx +
push ebx  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+lpMem]  +
push [ebp+arg_4]  +
push [ebp+var_8]  +
call sub_104DC28  +
cmp eax ebx +
jge loc_104EADB  +
mov [ebp+var_10] eax +
cmp [ebp+arg_4] ebx +
jnz loc_104EAE9  +
mov [ebp+var_10] 8007007Ah +
jmp loc_104EAF8  +
add [ebp+var_8] 2 +
mov ecx [ebp+var_8] +
xor eax eax +
dec [ebp+arg_4]  +
mov [ecx] ax +
test byte ptr [edi+20h] 8 +
jz loc_104EB03  +
dec [ebp+var_C]  +
jz loc_104EB2E  +
cmp [ebp+lpMem] ebx +
jz loc_104EB18  +
push [ebp+lpMem]  +
push ebx  +
call esi  +
push eax  +
call ds:HeapFree  +
mov [ebp+lpMem] ebx +
lea eax [ebp+lpMem] +
push eax  +
mov eax [ebp+arg_0] +
push eax  +
call dword ptr [eax+4]  +
mov ebx eax +
test ebx ebx +
jl loc_104EB53  +
cmp ebx 1 +
jnz loc_104EABB  +
mov ebx [ebp+var_10] +
test ebx ebx +
jl loc_104EB53  +
mov ecx [ebp+arg_8] +
and [ebp+arg_8] 0 +
lea eax [edi+5Ch] +
xor ebx ebx +
test byte ptr [edi+20h] 80h +
mov [eax] ecx +
jz loc_104EB67  +
push 1  +
push eax  +
call sub_104DDAB  +
mov ebx eax +
cmp [ebp+arg_8] 0 +
jz loc_104EB67  +
push [ebp+arg_8]  +
push 0  +
call esi  +
push eax  +
call ds:HeapFree  +
pop edi  +
cmp [ebp+lpMem] 0 +
jz loc_104EB7C  +
push [ebp+lpMem]  +
push 0  +
call esi  +
push eax  +
call ds:HeapFree  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
cmp [ebp+arg_8] 5Ch +
mov [ebp+lpMem] esi +
jnb loc_104EBA5  +
mov eax 80070057h +
jmp loc_104ECE4  +
push edi  +
mov edi [ebp+arg_4] +
test byte ptr [edi+20h] 10h +
jz loc_104EBBA  +
xor eax eax +
inc eax  +
mov [edi+38h] eax +
mov dword_10579AC eax +
cmp [edi+1Ch] esi +
jz loc_104ECE1  +
cmp [edi+4Ch] esi +
jz loc_104EBD5  +
test dword ptr [edi+20h] 100h +
jnz loc_104ECE1  +
push ebx  +
mov ebx [ebp+arg_0] +
cmp [ebp+arg_10] esi +
jz loc_104EBF7  +
push [ebp+arg_C]  +
call sub_104C31B  +
mov [ebp+lpMem] eax +
cmp eax esi +
jnz loc_104EC3F  +
mov esi 8007000Eh +
jmp loc_104ECC4  +
lea eax [ebp+lpMem] +
push eax  +
push ebx  +
call dword ptr [ebx+4]  +
mov esi eax +
test esi esi +
jl loc_104ECC4  +
cmp esi 1 +
jnz loc_104EC3F  +
test byte ptr [edi+20h] 2 +
jnz loc_104ECC2  +
cmp [edi+18h] eax +
jnz loc_104EC22  +
mov edi [edi+28h] +
jmp loc_104EC25  +
mov edi [edi+24h] +
push edi  +
push 3C34h  +
push 0  +
call sub_104D8EC  +
add esp 0Ch +
mov esi 80070057h +
jmp loc_104ECC4  +
mov eax [edi+1Ch] +
dec eax  +
jz loc_104ECAD  +
dec eax  +
jz loc_104EC9B  +
dec eax  +
jz loc_104EC8A  +
dec eax  +
jz loc_104EC78  +
dec eax  +
jnz loc_104ECC2  +
cmp [ebp+arg_8] 60h +
jz loc_104EC5E  +
mov esi 80004005h +
jmp loc_104ECC4  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+lpMem]  +
call sub_104E690  +
mov esi eax +
test esi esi +
jl loc_104ECC4  +
mov eax [ebp+arg_8] +
mov [edi+5Ch] eax +
jmp loc_104ECC2  +
cmp [ebp+arg_8] 6Ch +
jnz loc_104EC57  +
push edi  +
push [ebp+lpMem]  +
push ebx  +
call sub_104E854  +
jmp loc_104ECBC  +
cmp [ebp+arg_8] 6Ch +
jnz loc_104EC57  +
push edi  +
push [ebp+lpMem]  +
call sub_104E702  +
jmp loc_104ECBC  +
cmp [ebp+arg_8] 60h +
jnz loc_104EC57  +
push edi  +
push [ebp+lpMem]  +
push ebx  +
call sub_104EA16  +
jmp loc_104ECBC  +
cmp [ebp+arg_8] 60h +
jnz loc_104EC57  +
push edi  +
push [ebp+lpMem]  +
call sub_104E937  +
mov esi eax +
test esi esi +
jl loc_104ECC4  +
xor esi esi +
cmp [ebp+lpMem] 0 +
pop ebx  +
jz loc_104ECDD  +
push [ebp+lpMem]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax esi +
jmp loc_104ECE3  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+8] +
mov eax [edi+0Ch] +
cmp eax [edi+10h] +
jge loc_104ED4D  +
test eax eax +
jl loc_104ED4D  +
mov ecx [edi+14h] +
push esi  +
mov esi [ecx+eax*4] +
movzx eax word ptr [esi] +
push eax  +
push offset asc_10176A8  +
call ds:wcschr  +
neg eax  +
pop ecx  +
sbb eax eax +
pop ecx  +
mov ecx [ebp+10h] +
neg eax  +
mov [ecx] eax +
push 0  +
pop eax  +
setnz al  +
lea eax [esi+eax*2] +
push eax  +
call sub_104C31B  +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
pop esi  +
test eax eax +
jnz loc_104ED46  +
mov eax 8007000Eh +
jmp loc_104ED50  +
inc dword ptr [edi+0Ch]  +
xor eax eax +
jmp loc_104ED50  +
xor eax eax +
inc eax  +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi+0Ch] +
cmp eax [esi+10h] +
jge loc_104EDAB  +
mov ecx [esi+14h] +
mov eax [ecx+eax*4] +
movzx eax word ptr [eax] +
push eax  +
push offset asc_10176A8  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_104EDAB  +
mov eax [esi+0Ch] +
mov ecx [esi+14h] +
push dword ptr [ecx+eax*4]  +
call sub_104C31B  +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
test eax eax +
jnz loc_104EDA4  +
mov eax 8007000Eh +
jmp loc_104EDAE  +
inc dword ptr [esi+0Ch]  +
xor eax eax +
jmp loc_104EDAE  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
jz loc_104EDD5  +
push dword ptr [ebp+8]  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 18h  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edx eax +
test edx edx +
jnz loc_104EE01  +
mov eax 8007000Eh +
jmp loc_104EE3A  +
push edi  +
xor eax eax +
push 6  +
pop ecx  +
mov edi edx +
stos   +
mov eax [ebp+arg_0] +
mov [edx+10h] eax +
mov eax [ebp+arg_4] +
mov [edx+14h] eax +
mov eax [ebp+arg_8] +
mov dword ptr [edx] offset loc_104ECEE +
mov dword ptr [edx+4] offset loc_104ED5A +
mov dword ptr [edx+8] offset loc_104EDB8 +
mov dword ptr [edx+0Ch] 1 +
mov [eax] edx +
xor eax eax +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_104EE8A  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_104EE5F  +
push eax  +
call ds:fclose  +
pop ecx  +
mov eax [esi+14h] +
push ebx  +
mov ebx ds:GetProcessHeap +
push edi  +
mov edi ds:HeapFree +
test eax eax +
jz loc_104EE80  +
push eax  +
push 0  +
call ebx  +
push eax  +
call edi  +
and dword ptr [esi+14h] 0 +
push esi  +
push 0  +
call ebx  +
push eax  +
call edi  +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebx+14h] +
push edi  +
jmp loc_104EEE8  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_104EEA9  +
sub eax edx +
sar eax 1 +
lea edi [esi+eax*2-2] +
jmp loc_104EED3  +
movzx eax word ptr [edi] +
push eax  +
call ds:iswspace  +
pop ecx  +
test eax eax +
jz loc_104EED7  +
xor eax eax +
mov [edi] ax +
dec edi  +
dec edi  +
cmp edi esi +
jnb loc_104EEBD  +
movzx eax word ptr [esi] +
test eax eax +
jz loc_104EEE8  +
cmp eax 23h +
jz loc_104EEE8  +
cmp eax 3Bh +
jnz loc_104EF1A  +
push dword ptr [ebx+0Ch]  +
push 400h  +
push esi  +
call ds:fgetws  +
add esp 0Ch +
test eax eax +
jnz loc_104EEA4  +
push dword ptr [ebx+0Ch]  +
call ds:ferror  +
pop ecx  +
test eax eax +
jz loc_104EF22  +
jle loc_104EF25  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_104EF25  +
and dword ptr [ebx+18h] 0 +
xor eax eax +
jmp loc_104EF25  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi+14h] +
xor ecx ecx +
cmp cx [eax] +
jz loc_104EF49  +
cmp [esi+18h] ecx +
jz loc_104EF60  +
push esi  +
call sub_104EE94  +
test eax eax +
jl loc_104EFEF  +
cmp eax 1 +
jz loc_104EFEF  +
mov ecx [esi+14h] +
push 5Bh  +
pop eax  +
cmp ax [ecx] +
jnz loc_104EF9C  +
mov eax ecx +
push edi  +
lea edi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_104EF71  +
sub eax edi +
sar eax 1 +
push 5Dh  +
lea eax [ecx+eax*2-2] +
pop ecx  +
pop edi  +
cmp cx [eax] +
jnz loc_104EF91  +
xor ecx ecx +
mov [eax] cx +
mov eax [esi+14h] +
inc eax  +
inc eax  +
and dword ptr [esi+10h] 0 +
jmp loc_104EFC6  +
push 3Dh  +
push ecx  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
mov [esi+18h] eax +
test eax eax +
jz loc_104EFBC  +
xor ecx ecx +
mov [eax] cx +
add dword ptr [esi+18h] 2 +
and [esi+10h] ecx +
jmp loc_104EFC3  +
mov dword ptr [esi+10h] 1 +
mov eax [esi+14h] +
mov ecx [ebp+10h] +
push eax  +
mov dword ptr [ecx] 1 +
call sub_104C31B  +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
test eax eax +
jnz loc_104EFE5  +
mov eax 8007000Eh +
jmp loc_104EFEF  +
mov eax [esi+14h] +
xor ecx ecx +
mov [eax] cx +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
cmp dword ptr [esi+10h] 0 +
jnz loc_104F057  +
mov eax [esi+18h] +
test eax eax +
jz loc_104F02C  +
mov dword ptr [esi+10h] 1 +
push eax  +
call sub_104C31B  +
mov ecx [ebp+0Ch] +
mov [ecx] eax +
test eax eax +
jnz loc_104F05C  +
mov eax 8007000Eh +
jmp loc_104F069  +
mov eax [esi+14h] +
xor ecx ecx +
cmp cx [eax] +
jnz loc_104F045  +
push esi  +
call sub_104EE94  +
test eax eax +
jl loc_104F069  +
cmp eax 1 +
jz loc_104F069  +
mov eax [esi+14h] +
push 5Bh  +
pop ecx  +
cmp cx [eax] +
jnz loc_104F016  +
mov dword ptr [esi+10h] 1 +
xor eax eax +
inc eax  +
jmp loc_104F069  +
mov eax [esi+14h] +
xor ecx ecx +
mov [eax] cx +
and [esi+18h] ecx +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:GetProcessHeap +
push esi  +
push edi  +
push 1Ch  +
push 0  +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jnz loc_104F09B  +
mov ebx 8007000Eh +
jmp loc_104F117  +
push 7  +
pop ecx  +
xor eax eax +
mov edi esi +
stos   +
push 800h  +
xor edi edi +
push edi  +
mov dword ptr [esi] offset loc_104EF31 +
mov dword ptr [esi+4] offset loc_104EFF9 +
mov dword ptr [esi+8] offset sub_104EE43 +
call ebx  +
push eax  +
call ds:HeapAlloc  +
mov [esi+14h] eax +
cmp eax edi +
jz loc_104F094  +
xor ecx ecx +
push offset aR  +
push [ebp+arg_0]  +
mov [eax] cx +
mov [esi+18h] edi +
mov [esi+10h] edi +
call ds:_wfopen  +
pop ecx  +
pop ecx  +
mov [esi+0Ch] eax +
cmp eax edi +
jnz loc_104F10C  +
call ds:_errno  +
mov eax [eax] +
cmp eax edi +
jle loc_104F108  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
jmp loc_104F113  +
mov eax [ebp+arg_4] +
mov [eax] esi +
xor ebx ebx +
cmp ebx edi +
jge loc_104F11D  +
push esi  +
call sub_104EE43  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_104F169  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
or eax eax +
jnz loc_104F1B1  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov eax [esp+arg_0] +
div  ecx +
mov eax edx +
xor edx edx +
jmp loc_104F201  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_104F1BF  +
div  ebx +
mov ecx eax +
mul  [esp+arg_C] +
xchg eax ecx +
mul  [esp+arg_8] +
add edx ecx +
jb loc_104F1EA  +
cmp edx [esp+arg_4] +
ja loc_104F1EA  +
jb loc_104F1F2  +
cmp eax [esp+arg_0] +
jbe loc_104F1F2  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
retn 10h  +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-1Ch] +
xor ecx ebp +
call sub_101CA75  +
jmp __SEH_epilog4  +
***
jmp ds:_purecall  +
***
mov eax [esp+arg_C] +
or eax eax +
jnz loc_104F2B2  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_104F2F3  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_104F2C0  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_104F2EE  +
cmp edx [esp+arg_4] +
ja loc_104F2EE  +
jb loc_104F2EF  +
cmp eax [esp+arg_0] +
jbe loc_104F2EF  +
dec esi  +
xor edx edx +
mov eax esi +
pop esi  +
pop ebx  +
retn 10h  +
***
push ebx  +
xor edi edi +
mov eax [esp+arg_4] +
or eax eax +
jge loc_104F351  +
inc edi  +
mov edx [esp+arg_0] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_4] eax +
mov [esp+arg_0] edx +
mov eax [esp+arg_C] +
or eax eax +
jge loc_104F36D  +
inc edi  +
mov edx [esp+arg_8] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+arg_C] eax +
mov [esp+arg_8] edx +
or eax eax +
jnz loc_104F389  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov edx ebx +
jmp loc_104F3CA  +
mov ebx eax +
mov ecx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_104F397  +
div  ecx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_104F3C5  +
cmp edx [esp+arg_4] +
ja loc_104F3C5  +
jb loc_104F3C6  +
cmp eax [esp+arg_0] +
jbe loc_104F3C6  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_104F3D4  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0C50h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov [ebp+lpWideCharStr] eax +
mov eax [ebp+arg_4] +
push edi  +
mov [ebp+var_C40] eax +
mov eax [ebp+arg_8] +
mov edi 103h +
xor ebx ebx +
push edi  +
mov dword ptr [ebp+var_C38] eax +
lea eax [ebp-107h] +
push ebx  +
push eax  +
mov [ebp+var_108] bl +
call memset  +
add esp 0Ch +
push offset aDbghelp_dll  +
mov [ebp+var_C3C] 1 +
call ds:LoadLibraryW  +
mov [ebp+hLibModule] eax +
cmp eax ebx +
jz loc_104F7DB  +
push esi  +
mov esi ds:GetProcAddress +
push offset aSymgetsymbolfi  +
push eax  +
call esi  +
push offset aSyminitializew  +
push [ebp+hLibModule]  +
mov [ebp+var_C44] eax +
call esi  +
mov [ebp+var_C50] eax +
cmp [ebp+var_C44] ebx +
jz loc_104F7CE  +
cmp eax ebx +
jz loc_104F7CE  +
lea esi [edi+1] +
cmp dword ptr [ebp+var_C38] ebx +
jnz loc_104F593  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push offset Name  +
call ds:GetEnvironmentVariableW  +
cmp eax 1 +
jl loc_104F575  +
cmp eax edi +
jle loc_104F587  +
push offset aSrvSymbolsSymb  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
call sub_101BC13  +
lea eax [ebp+Buffer] +
mov dword ptr [ebp+var_C38] eax +
call ds:GetCurrentProcess  +
push ebx  +
push dword ptr [ebp+var_C38]  +
mov [ebp+var_C4C] eax +
push eax  +
call [ebp+var_C50]  +
push 680h  +
call ds:SymSetOptions  +
lea eax [ebp+var_108] +
cmp [ebp+lpWideCharStr] ebx +
jnz loc_104F606  +
push esi  +
push eax  +
push offset aTrace_format_s  +
call ds:GetEnvironmentVariableA  +
cmp eax 1 +
jl loc_104F5DC  +
cmp eax edi +
jle loc_104F64A  +
lea eax [ebp+var_108] +
push eax  +
push esi  +
call ds:GetCurrentDirectoryA  +
cmp eax ebx +
jz loc_104F5F2  +
cmp eax edi +
jbe loc_104F64A  +
push offset aCouldNotGetTmf  +
call ds:wprintf  +
pop ecx  +
mov [ebp+var_108] bl +
jmp loc_104F64A  +
push ebx  +
push ebx  +
push esi  +
push eax  +
push 0FFFFFFFFh  +
push [ebp+lpWideCharStr]  +
push 220h  +
push ebx  +
call ds:WideCharToMultiByte  +
test eax eax +
jnz loc_104F633  +
push offset aFailedToGetTmf  +
call ds:wprintf  +
pop ecx  +
jmp loc_104F7CE  +
lea eax [ebp+var_108] +
push 3Bh  +
push eax  +
call ds:strchr  +
pop ecx  +
pop ecx  +
cmp eax ebx +
jz loc_104F64A  +
mov [eax] bl +
mov edi [ebp+var_C40] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_104F655  +
sub eax edx +
sar eax 1 +
mov ecx ebx +
jz loc_104F679  +
cmp word ptr [edi+ecx*2] 3Bh +
jnz loc_104F674  +
inc [ebp+var_C3C]  +
inc ecx  +
cmp ecx eax +
jb loc_104F667  +
mov [ebp+lpWideCharStr] ebx +
cmp [ebp+var_C3C] ebx +
jbe loc_104F7CE  +
push 3Bh  +
push edi  +
mov [ebp+var_C2D] bl +
call ds:wcschr  +
pop ecx  +
pop ecx  +
mov [ebp+var_C40] eax +
cmp eax ebx +
jz loc_104F6B2  +
xor ecx ecx +
mov [eax] cx +
mov [ebp+var_C2D] 1 +
push esi  +
lea eax [ebp+var_C2C] +
push eax  +
push esi  +
lea eax [ebp+WideCharStr] +
push eax  +
push 2  +
push edi  +
push ebx  +
push [ebp+var_C4C]  +
call [ebp+var_C44]  +
test eax eax +
jnz loc_104F753  +
call ds:GetLastError  +
cmp eax 2 +
jnz loc_104F78B  +
push 100h  +
lea eax [ebp+var_40C] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push edi  +
call _wsplitpath_s  +
push 5Ch  +
pop eax  +
mov word ptr [ebp+var_40C] ax +
lea eax [ebp+var_40C] +
push eax  +
push dword ptr [ebp+var_C38]  +
lea eax [ebp+var_A24] +
push offset aSS_1  +
push esi  +
push eax  +
call sub_101BCA7  +
add esp 38h +
push esi  +
lea eax [ebp+var_C2C] +
push eax  +
push esi  +
lea eax [ebp+WideCharStr] +
push eax  +
push 2  +
push edi  +
lea eax [ebp+var_A24] +
push eax  +
push [ebp+var_C4C]  +
call [ebp+var_C44]  +
test eax eax +
jz loc_104F78B  +
push ebx  +
push ebx  +
push esi  +
lea eax [ebp+MultiByteStr] +
push eax  +
push 0FFFFFFFFh  +
lea eax [ebp+WideCharStr] +
push eax  +
push 220h  +
push ebx  +
call ds:WideCharToMultiByte  +
test eax eax +
jz loc_104F7CE  +
push ebx  +
push ebx  +
lea eax [ebp+var_108] +
push eax  +
lea eax [ebp+MultiByteStr] +
push eax  +
call sub_1050F48  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_104F790  +
sub eax edx +
sar eax 1 +
lea edi [edi+eax*2+2] +
cmp [ebp+var_C2D] bl +
jz loc_104F7B6  +
mov ecx [ebp+var_C40] +
push 3Bh  +
pop eax  +
mov [ecx] ax +
inc [ebp+lpWideCharStr]  +
mov eax [ebp+lpWideCharStr] +
cmp eax [ebp+var_C3C] +
jb loc_104F68B  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
pop esi  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ds:malloc +
push 40h  +
pop eax  +
mov word ptr dword_10579D8 ax +
mov word ptr dword_1057E04 ax +
xor eax eax +
and dword_105800C eax +
push 0C00h  +
mov word_10579E8 ax +
mov word_10579EC ax +
call esi  +
pop ecx  +
mov dword_10579F4 eax +
test eax eax +
jz loc_104F890  +
movzx eax word ptr dword_10579D8 +
imul eax eax +
push eax  +
call esi  +
pop ecx  +
mov dword_105811C eax +
test eax eax +
jnz loc_104F853  +
push dword_10579F4  +
call ds:free  +
pop ecx  +
pop esi  +
retn   +
movzx eax word ptr dword_1057E04 +
imul eax eax +
push eax  +
push 0  +
push dword_10579F4  +
call memset  +
movzx eax word ptr dword_10579D8 +
imul eax eax +
push eax  +
push 0  +
push dword_105811C  +
call memset  +
add esp 18h +
mov dword_105800C 1 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
cmp dword_105800C ebx +
jz loc_104F95B  +
push esi  +
xor eax eax +
xor esi esi +
push edi  +
mov edi ds:free +
cmp ax word_10579EC +
jnb loc_104F8DE  +
mov ecx dword_10579F4 +
movzx eax si +
imul eax eax +
push dword ptr [eax+ecx]  +
call edi  +
inc esi  +
pop ecx  +
cmp si word_10579EC +
jb loc_104F8C2  +
push dword_10579F4  +
call edi  +
mov dword_10579F4 ebx +
mov [ebp+var_4] ebx +
xor eax eax +
jmp loc_104F93A  +
movzx esi word ptr [ebp+var_4] +
imul esi esi +
add esi dword_105811C +
mov [ebp+var_8] ebx +
cmp [esi+8] ebx +
jbe loc_104F929  +
mov eax [esi+4] +
mov eax [ebx+eax] +
test eax eax +
jz loc_104F919  +
push eax  +
call ds:LocalFree  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
add ebx 10h +
cmp eax [esi+8] +
jb loc_104F908  +
xor ebx ebx +
push dword ptr [esi+4]  +
call edi  +
push dword ptr [esi]  +
call edi  +
inc [ebp+var_4]  +
mov ax word ptr [ebp+var_4] +
pop ecx  +
pop ecx  +
cmp ax word_10579E8 +
jb loc_104F8F3  +
push dword_105811C  +
call edi  +
pop ecx  +
pop edi  +
mov dword_105811C ebx +
mov dword_105800C ebx +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push esi  +
xor eax eax +
xor esi esi +
cmp ax word_10579EC +
jnb loc_104F9A2  +
mov ecx dword_10579F4 +
movzx eax si +
imul eax eax +
push 24h  +
lea eax [eax+ecx+8] +
push eax  +
push offset byte_1058558  +
call ds:strncmp  +
add esp 0Ch +
test eax eax +
jz loc_104F9A6  +
inc esi  +
cmp si word_10579EC +
jb loc_104F973  +
xor eax eax +
pop esi  +
retn   +
movzx eax si +
imul eax eax +
add eax dword_10579F4 +
pop esi  +
retn   +
***
mov ax word_10579EC +
push ebx  +
push esi  +
mov esi ds:malloc +
push edi  +
cmp ax word ptr dword_1057E04 +
jnz loc_104FA4B  +
mov eax dword_1057E04 +
add eax 10h +
movzx edi ax +
movzx eax di +
imul eax eax +
push eax  +
call esi  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jnz loc_104F9FF  +
push offset aFailedToAddE_2  +
call ds:printf  +
pop ecx  +
xor eax eax +
jmp loc_104FA93  +
movzx eax word_10579EC +
imul eax eax +
push 300h  +
add eax ebx +
push 0  +
push eax  +
call memset  +
movzx eax word ptr dword_1057E04 +
imul eax eax +
push eax  +
push dword_10579F4  +
push ebx  +
call memcpy  +
push dword_10579F4  +
call ds:free  +
add esp 1Ch +
mov word ptr dword_1057E04 di +
mov dword_10579F4 ebx +
movzx ebx word_10579EC +
imul ebx ebx +
add ebx dword_10579F4 +
push 100h  +
call esi  +
pop ecx  +
mov [ebx] eax +
test eax eax +
jnz loc_104FA70  +
push offset aFailedToAddE_3  +
jmp loc_104F9F1  +
push 9  +
pop ecx  +
push 40h  +
lea edi [ebx+8] +
mov esi offset byte_1058558 +
movs   +
pop eax  +
mov [ebx+4] ax +
xor eax eax +
mov [ebx+6] ax +
inc word_10579EC  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
xor eax eax +
test edi edi +
jz loc_104FAE6  +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [edi] +
cmp ax [edi+6] +
jnb loc_104FAE2  +
push [ebp+arg_8]  +
movzx eax bx +
mov eax [esi+eax*4] +
imul eax eax +
add eax dword_105811C +
push dword ptr [eax]  +
push [ebp+arg_4]  +
call ds:strncmp  +
add esp 0Ch +
test eax eax +
jz loc_104FAEB  +
inc ebx  +
cmp bx [edi+6] +
jb loc_104FAB7  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_104FAE4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_104FCA7  +
cmp [ebp+arg_8] 408h +
ja loc_104FCA7  +
push ebx  +
mov ebx ds:malloc +
push esi  +
xor eax eax +
xor esi esi +
cmp ax word_10579E8 +
jnb loc_104FB6E  +
push [ebp+arg_8]  +
mov ecx dword_105811C +
push [ebp+arg_4]  +
movzx eax si +
imul eax eax +
push dword ptr [eax+ecx]  +
call ds:strncmp  +
add esp 0Ch +
test eax eax +
jz loc_104FB57  +
inc esi  +
cmp si word_10579E8 +
jb loc_104FB29  +
jmp loc_104FB6E  +
movzx eax si +
mov ecx eax +
imul ecx ecx +
add ecx dword_105811C +
mov [ebp+arg_0] eax +
jnz loc_104FC35  +
mov ax word_10579E8 +
cmp ax word ptr dword_10579D8 +
jnz loc_104FBEE  +
mov eax dword_10579D8 +
add eax 10h +
movzx eax ax +
movzx esi ax +
imul esi esi +
push esi  +
mov [ebp+var_4] eax +
call ebx  +
pop ecx  +
mov [ebp+arg_0] eax +
test eax eax +
jnz loc_104FBA6  +
push offset aFailedToAddEnu  +
jmp loc_104FC5A  +
movzx ecx word_10579E8 +
imul ecx ecx +
push 0C0h  +
add ecx eax +
push 0  +
push ecx  +
call memset  +
push esi  +
push dword_105811C  +
mov esi [ebp+arg_0] +
push esi  +
call memcpy  +
push dword_105811C  +
call ds:free  +
mov ax word ptr [ebp+var_4] +
add esp 1Ch +
mov word ptr dword_10579D8 ax +
mov dword_105811C esi +
movzx esi word_10579E8 +
mov eax [ebp+arg_8] +
mov [ebp+arg_0] esi +
imul esi esi +
add esi dword_105811C +
inc eax  +
push eax  +
call ebx  +
pop ecx  +
mov [esi] eax +
test eax eax +
jnz loc_104FC16  +
push offset aFailedToAddE_0  +
jmp loc_104FC5A  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call memcpy  +
mov eax [esi] +
mov ecx [ebp+arg_8] +
add esp 0Ch +
mov byte ptr [ecx+eax] 0 +
inc word_10579E8  +
movzx eax word ptr [edi+4] +
cmp [edi+6] ax +
jnz loc_104FC95  +
add eax 10h +
movzx esi ax +
movzx eax si +
shl eax 2 +
push eax  +
call ebx  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jnz loc_104FC63  +
push offset aFailedToAddE_1  +
call ds:printf  +
pop ecx  +
jmp loc_104FCA5  +
movzx eax word ptr [edi+6] +
push 40h  +
lea eax [ebx+eax*4] +
push 0  +
push eax  +
call memset  +
movzx eax word ptr [edi+4] +
shl eax 2 +
push eax  +
push dword ptr [edi]  +
push ebx  +
call memcpy  +
push dword ptr [edi]  +
call ds:free  +
add esp 1Ch +
mov [edi] ebx +
mov [edi+4] si +
movzx eax word ptr [edi+6] +
mov ecx [edi] +
mov edx [ebp+arg_0] +
mov [ecx+eax*4] edx +
inc word ptr [edi+6]  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_105800C 0 +
jz loc_104FCFA  +
push esi  +
call sub_104F963  +
mov esi eax +
test esi esi +
jz loc_104FCE4  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push esi  +
call sub_104FA9C  +
test eax eax +
jnz loc_104FCF9  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push esi  +
jmp loc_104FCF4  +
call sub_104F9B9  +
test eax eax +
jz loc_104FCF9  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push eax  +
call sub_104FAF5  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
cmp dword_105800C 0 +
push esi  +
mov esi offset unk_1058018 +
mov [ebp+var_14] esi +
jz loc_104FED9  +
mov eax dword_1058B64 +
test eax eax +
jz loc_104FD39  +
push eax  +
call ds:fclose  +
xor eax eax +
pop ecx  +
mov dword_1058B64 eax +
and [ebp+var_8] 0 +
xor ecx ecx +
cmp cx word_10579EC +
jnb loc_104FEC6  +
push ebx  +
mov ebx ds:fprintf +
push edi  +
movzx edi word ptr [ebp+var_8] +
imul edi edi +
add edi dword_10579F4 +
cmp dword_1058B74 0 +
jz loc_104FD74  +
mov eax dword_1058B78 +
mov [ebp+var_14] eax +
jmp loc_104FDA9  +
lea eax [edi+8] +
push eax  +
push dword_10579F0  +
push offset aSS_tmf  +
push 104h  +
push esi  +
call sprintf_s  +
add esp 14h +
test eax eax +
jnz loc_104FDA9  +
mov eax ds:_iob +
push esi  +
add eax 40h +
push offset aDumpenumstotmf  +
push eax  +
call ebx  +
add esp 0Ch +
mov eax dword_1058B64 +
test eax eax +
jnz loc_104FDCF  +
push offset aA  +
push [ebp+var_14]  +
call ds:fopen  +
pop ecx  +
pop ecx  +
mov dword_1058B64 eax +
test eax eax +
jz loc_104FEB0  +
cmp dword_1058B74 0 +
jz loc_104FDED  +
push dword_10579DC  +
lea ecx [edi+8] +
push ecx  +
push offset aSS_3  +
push eax  +
call ebx  +
add esp 10h +
mov eax [edi] +
and [ebp+var_4] 0 +
mov [ebp+var_18] eax +
xor eax eax +
cmp ax [edi+6] +
jnb loc_104FE8C  +
movzx eax word ptr [ebp+var_4] +
mov ecx [ebp+var_18] +
mov esi [ecx+eax*4] +
imul esi esi +
add esi dword_105811C +
push dword ptr [esi]  +
push offset aEnumvS  +
push dword_1058B64  +
call ebx  +
xor eax eax +
add esp 0Ch +
mov [ebp+var_10] eax +
cmp [esi+8] eax +
jbe loc_104FE67  +
mov [ebp+var_C] eax +
mov eax [esi+4] +
mov ecx [ebp+var_C] +
add eax ecx +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+8]  +
push dword ptr [eax]  +
push offset aS0xX  +
push dword_1058B64  +
call ds:fwprintf  +
add [ebp+var_C] 10h +
add esp 14h +
inc [ebp+var_10]  +
mov eax [ebp+var_10] +
cmp eax [esi+8] +
jb loc_104FE34  +
push offset asc_1017BF0  +
push dword_1058B64  +
call ebx  +
inc [ebp+var_4]  +
mov ax word ptr [ebp+var_4] +
pop ecx  +
pop ecx  +
cmp ax [edi+6] +
jb loc_104FE02  +
mov esi offset unk_1058018 +
cmp dword_1058B74 0 +
jnz loc_104FEAB  +
push dword_1058B64  +
call ds:fclose  +
xor eax eax +
pop ecx  +
mov dword_1058B64 eax +
jmp loc_104FEB0  +
mov eax dword_1058B64 +
inc [ebp+var_8]  +
mov cx word ptr [ebp+var_8] +
cmp cx word_10579EC +
jb loc_104FD54  +
pop edi  +
pop ebx  +
test eax eax +
jz loc_104FED9  +
push eax  +
call ds:fclose  +
and dword_1058B64 0 +
pop ecx  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
and [ebp+var_4] 0 +
push ebx  +
mov ebx ds:SymGetTypeInfo +
lea eax [ebp+var_4] +
push eax  +
push 0Dh  +
push [ebp+arg_4]  +
push dword_10579E4  +
push dword_10579E0  +
push dword_105832C  +
call ebx  +
test eax eax +
jz loc_10500AA  +
cmp [ebp+var_4] 0 +
jz loc_10500AA  +
cmp [ebp+var_4] 1000h +
jbe loc_104FF36  +
mov [ebp+var_4] 0FFFh +
mov eax [ebp+var_4] +
push esi  +
mov esi ds:malloc +
lea eax ds:0Ch[eax*4] +
push edi  +
push eax  +
call esi  +
mov edi eax +
pop ecx  +
mov [ebp+var_8] edi +
test edi edi +
jz loc_10500A8  +
mov eax [ebp+var_4] +
and dword ptr [edi+4] 0 +
push edi  +
push 7  +
push [ebp+arg_4]  +
mov [edi] eax +
push dword_10579E4  +
push dword_10579E0  +
push dword_105832C  +
call ebx  +
test eax eax +
jz loc_10500A0  +
mov eax [ebp+var_4] +
shl eax 4 +
push eax  +
call esi  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_10500A0  +
mov eax [ebp+var_4] +
shl eax 4 +
push eax  +
push 0  +
push esi  +
call memset  +
mov ecx [ebp+var_4] +
mov eax [ebp+arg_0] +
and [ebp+arg_4] 0 +
add esp 0Ch +
mov [eax+4] esi +
mov [eax+8] ecx +
test ecx ecx +
jbe loc_10500A0  +
add esi 8 +
add edi 8 +
xor eax eax +
mov word ptr [ebp+var_18] ax +
lea eax [esi-8] +
push eax  +
push 1  +
push dword ptr [edi]  +
push dword_10579E4  +
push dword_10579E0  +
push dword_105832C  +
call ebx  +
lea eax [ebp+var_18] +
push eax  +
push 0Bh  +
push dword ptr [edi]  +
push dword_10579E4  +
push dword_10579E0  +
push dword_105832C  +
call ebx  +
movzx eax word ptr [ebp+var_18] +
cmp eax 11h +
jg loc_1050048  +
jz loc_1050028  +
dec eax  +
dec eax  +
jz loc_105002E  +
dec eax  +
jz loc_1050068  +
dec eax  +
jz loc_105003E  +
dec eax  +
jz loc_1050034  +
sub eax 6 +
jz loc_105002E  +
sub eax 5 +
jnz loc_1050088  +
movzx eax byte ptr [ebp+var_10] +
jmp loc_1050082  +
movsx eax word ptr [ebp+var_10] +
jmp loc_1050082  +
fld  [ebp+var_10] +
call _ftol2  +
jmp loc_1050083  +
fld  dword ptr [ebp+var_10] +
call _ftol2  +
jmp loc_1050083  +
cmp eax 12h +
jz loc_105007E  +
cmp eax 13h +
jz loc_1050068  +
jle loc_1050088  +
cmp eax 15h +
jle loc_1050071  +
cmp eax 16h +
jz loc_1050068  +
cmp eax 17h +
jz loc_1050068  +
cmp eax 19h +
jnz loc_1050088  +
mov eax dword ptr [ebp+var_10] +
and dword ptr [esi+4] 0 +
jmp loc_1050086  +
mov eax dword ptr [ebp+var_10] +
mov [esi] eax +
mov eax dword ptr [ebp+var_10+4] +
mov [esi+4] eax +
jmp loc_1050088  +
movzx eax word ptr [ebp+var_10] +
cdq   +
mov [esi+4] edx +
mov [esi] eax +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
add edi 4 +
add esi 10h +
cmp eax [ebp+var_4] +
jb loc_104FFC8  +
mov edi [ebp+var_8] +
push edi  +
call ds:free  +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
cmp dword ptr [eax+48h] 0Ch +
jnz loc_1050130  +
push ebx  +
mov bx word_10579E8 +
push esi  +
push edi  +
xor eax eax +
xor edi edi +
cmp ax bx +
jnb loc_105012D  +
mov esi dword_105811C +
mov ecx [ebp+8] +
movzx eax di +
add ecx 54h +
imul eax eax +
mov eax [eax+esi] +
mov dl [eax] +
cmp dl [ecx] +
jnz loc_1050108  +
test dl dl +
jz loc_1050104  +
mov dl [eax+1] +
cmp dl [ecx+1] +
jnz loc_1050108  +
inc eax  +
inc eax  +
inc ecx  +
inc ecx  +
test dl dl +
jnz loc_10500EA  +
xor eax eax +
jmp loc_105010D  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_1050119  +
inc edi  +
cmp di bx +
jb loc_10500DB  +
jmp loc_105012D  +
mov eax [ebp+8] +
push dword ptr [eax+4]  +
movzx eax di +
imul eax eax +
add eax esi +
push eax  +
call sub_104FEE4  +
pop edi  +
pop esi  +
pop ebx  +
xor eax eax +
inc eax  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
xor ecx ecx +
mov edx eax +
or edx ecx +
jz loc_1050166  +
push [ebp+arg_0]  +
push eax  +
push offset a8x08x  +
push 14h  +
push offset unk_105959C  +
call sprintf_s  +
add esp 14h +
jmp loc_1050188  +
mov eax offset a8x_0 +
cmp [ebp+arg_8] ecx +
jnz loc_1050175  +
mov eax offset a8x +
push [ebp+arg_0]  +
push eax  +
push 14h  +
push offset unk_105959C  +
call sprintf_s  +
add esp 10h +
mov eax offset unk_105959C +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test dword_1057BFC 80000000h +
jz loc_10501D3  +
push esi  +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
mov esi offset unk_10595B0 +
push 3E8h  +
push esi  +
call vsprintf_s  +
mov eax ds:_iob +
add eax 20h +
push eax  +
push esi  +
call ds:fputs  +
add esp 18h +
pop esi  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 10000000h +
jnz loc_10501FB  +
push dword ptr [ebp+10h]  +
push offset aS_7  +
call ds:printf  +
pop ecx  +
pop ecx  +
xor eax eax +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
push 6  +
xor ebx ebx +
pop ecx  +
mov eax 1000000h +
push 104h  +
mov dword_1058010 eax +
mov dword_1058538 eax +
xor eax eax +
push ebx  +
mov edi offset unk_1058540 +
push offset byte_1058558  +
mov byte_1058B88 bl +
mov dword_10579E0 ebx +
mov dword_10579E4 ebx +
mov dword_1058014 ebx +
mov dword_105853C ebx +
stos   +
call memset  +
push offset aDbhInitializin  +
call sub_1050196  +
add esp 10h +
push 400h  +
mov esi offset Buffer +
push esi  +
push offset a_nt_symbol_p_0  +
call ds:GetEnvironmentVariableA  +
cmp eax 1 +
jge loc_1050284  +
mov Buffer bl +
push esi  +
push offset aSymbolPathS  +
call sub_1050196  +
pop ecx  +
pop ecx  +
call ds:GetCurrentThreadId  +
mov dword_105832C eax +
cmp eax ebx +
jnz loc_10502B8  +
call ds:GetLastError  +
push eax  +
push offset aError0xXFromGe  +
call ds:printf  +
pop ecx  +
pop ecx  +
xor eax eax +
jmp loc_1050332  +
push ebx  +
push esi  +
push eax  +
call ds:SymInitialize  +
cmp eax ebx +
jnz loc_10502D3  +
call ds:GetLastError  +
push eax  +
push offset aError0xXFromSy  +
jmp loc_10502AC  +
push 10813h  +
call ds:SymSetOptions  +
push eax  +
push offset aSymopts0xX  +
mov dword_1057BFC eax +
call sub_1050196  +
pop ecx  +
pop ecx  +
push ebx  +
push ebx  +
push offset loc_10501DD  +
push dword_105832C  +
call ds:SymRegisterCallback64  +
mov esi eax +
cmp esi ebx +
jnz loc_1050317  +
call ds:GetLastError  +
push eax  +
push offset aError0xXFrom_0  +
jmp loc_10502AC  +
call sub_104F7F0  +
cmp dword_105800C ebx +
jnz loc_1050330  +
push offset aWarningEnumsWi  +
call ds:printf  +
pop ecx  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov eax dword_10579E0 +
mov ecx dword_10579E4 +
mov edx eax +
or edx ecx +
jz loc_1050399  +
push ecx  +
push eax  +
push dword_105832C  +
call ds:SymUnloadModule64  +
test eax eax +
jnz loc_1050384  +
push eax  +
push dword_10579E4  +
push dword_10579E0  +
call sub_105013C  +
push eax  +
push offset byte_1058B88  +
push offset aErrorUnloading  +
call ds:printf  +
add esp 0Ch +
and dword_10579E0 0 +
and dword_10579E4 0 +
mov byte_1058B88 0 +
xor eax eax +
inc eax  +
retn 4  +
***
cmp dword_1058B80 0 +
push esi  +
mov esi ds:fprintf +
jz loc_10503C3  +
push offset aDescriptionLev  +
push dword_1058B7C  +
call esi  +
pop ecx  +
pop ecx  +
push offset asc_1017DC0  +
push dword_1058B7C  +
call esi  +
pop ecx  +
pop ecx  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 81Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_814] ebx +
mov [ebp+var_810] 1000000h +
mov [ebp+var_818] ebx +
cmp [esi] bl +
jnz loc_1050420  +
push offset aLoadModnameYou  +
call ds:printf  +
pop ecx  +
jmp loc_1050564  +
push edi  +
mov edi 400h +
push edi  +
lea eax [ebp+var_804] +
push eax  +
push edi  +
lea eax [ebp+var_404] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push esi  +
call _splitpath_s  +
add esp 24h +
cmp [ebp+var_804] bl +
jnz loc_1050467  +
mov eax dword_1058010 +
mov [ebp+var_80C] eax +
mov eax dword_1058014 +
mov [ebp+var_814] 1 +
jmp loc_10504AB  +
lea eax [ebp+var_804] +
push offset a_pdb  +
push eax  +
call ds:_strcmpi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_105049B  +
mov eax dword_1058010 +
mov [ebp+var_80C] eax +
mov eax dword_1058014 +
mov [ebp+var_818] 1 +
jmp loc_10504AB  +
mov eax dword_1058538 +
mov [ebp+var_80C] eax +
mov eax dword_105853C +
push ebx  +
mov [ebp+var_808] eax +
call sub_105033B  +
lea eax [ebp+var_404] +
push eax  +
push edi  +
push offset byte_1058B88  +
call strcpy_s  +
add esp 0Ch +
cmp [ebp+var_818] ebx +
jnz loc_10504F8  +
push ebx  +
push ebx  +
push 3  +
push ebx  +
push ebx  +
push 80000000h  +
push esi  +
call ds:CreateFileA  +
mov edi eax +
push ebx  +
push edi  +
call ds:GetFileSize  +
mov [ebp+var_810] eax +
jmp loc_10504FA  +
mov edi ebx +
push [ebp+var_814]  +
lea eax [ebp+var_404] +
push ebx  +
push [ebp+var_810]  +
push [ebp+var_808]  +
push [ebp+var_80C]  +
push eax  +
push esi  +
push edi  +
push dword_105832C  +
call ds:SymLoadModuleEx  +
mov ecx eax +
or ecx edx +
jnz loc_105054C  +
push esi  +
mov byte_1058B88 bl +
call ds:GetLastError  +
push eax  +
push offset aError0xXLoadin  +
call ds:printf  +
add esp 0Ch +
jmp loc_1050563  +
mov dword_10579E0 eax +
mov dword_10579E4 edx +
cmp edi 0FFFFFFFFh +
jz loc_1050563  +
push edi  +
call ds:CloseHandle  +
pop edi  +
mov ecx [ebp+var_4] +
xor eax eax +
pop esi  +
xor ecx ebp +
inc eax  +
pop ebx  +
call sub_101CA75  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
cmp dword_1058224 0 +
jz loc_1050591  +
call sub_10503A4  +
cmp dword_1058B70 0 +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi ds:fprintf +
push edi  +
mov dword_1058224 1 +
jz loc_1050648  +
mov eax ebx +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_10505B9  +
sub eax edi +
push offset aUnknown_1  +
lea edi [eax+ebx+1] +
push edi  +
push offset aModulenameSIni  +
push dword_1058B64  +
call esi  +
push offset aFlagname  +
push offset a32sValue  +
push dword_1058B64  +
call esi  +
mov eax edi +
add esp 1Ch +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_10505F3  +
and [ebp+var_8] 0 +
sub eax ecx +
lea edi [edi+eax+1] +
cmp [edi] dl +
jz loc_1050648  +
mov eax [ebp+arg_4] +
add eax ebx +
mov [ebp+var_4] eax +
cmp edi [ebp+var_4] +
jnb loc_1050648  +
mov ecx [ebp+var_8] +
xor eax eax +
inc eax  +
shl eax cl +
push eax  +
push edi  +
push offset a32s0x08x  +
push dword_1058B64  +
call esi  +
mov eax edi +
add esp 10h +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_1050634  +
sub eax ecx +
inc [ebp+var_8]  +
lea edi [edi+eax+1] +
cmp [edi] dl +
jnz loc_1050610  +
mov eax ebx +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_105064D  +
sub eax edi +
push offset aUnknown_1  +
lea ebx [eax+ebx+1] +
push ebx  +
mov edi offset unk_1058120 +
push edi  +
push offset aModulenameSSIn  +
push dword_1058B7C  +
call esi  +
push ebx  +
push edi  +
push offset aDynamicDescrip  +
push dword_1058B7C  +
call esi  +
push [ebp+arg_0]  +
push offset aGuidS  +
push dword_1058B7C  +
call esi  +
push offset aLocaleMs0x409  +
push dword_1058B7C  +
call esi  +
push ebx  +
push edi  +
push offset aClassSSEventtr  +
push dword_1058B7C  +
call esi  +
add esp 48h +
push offset aDescriptionEna  +
push dword_1058B7C  +
call esi  +
pop ecx  +
mov eax ebx +
pop ecx  +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_10506C5  +
sub eax edi +
lea ebx [ebx+eax+1] +
push ebx  +
push offset aSFlag  +
push dword_1058B7C  +
call esi  +
mov eax ebx +
add esp 0Ch +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_10506E8  +
sub eax edi +
lea edi [eax+ebx+1] +
cmp [edi] cl +
jz loc_1050730  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
add eax ecx +
mov [ebp+var_4] eax +
cmp edi [ebp+var_4] +
jnb loc_1050730  +
push edi  +
push offset aSFlag_0  +
push dword_1058B7C  +
call esi  +
mov eax edi +
add esp 0Ch +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_105071F  +
sub eax ecx +
lea edi [edi+eax+1] +
cmp [edi] dl +
jnz loc_1050704  +
push offset aDefinevalues  +
push dword_1058B7C  +
call esi  +
push ebx  +
push offset aS_3  +
push dword_1058B7C  +
call esi  +
mov eax ebx +
add esp 14h +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1050753  +
sub eax edi +
lea edi [eax+ebx+1] +
cmp [edi] cl +
jz loc_105079B  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
add eax ecx +
mov [ebp+var_4] eax +
cmp edi [ebp+var_4] +
jnb loc_105079B  +
push edi  +
push offset aS_4  +
push dword_1058B7C  +
call esi  +
mov eax edi +
add esp 0Ch +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_105078A  +
sub eax ecx +
lea edi [edi+eax+1] +
cmp [edi] dl +
jnz loc_105076F  +
push offset aValues  +
push dword_1058B7C  +
call esi  +
push ebx  +
push offset aS_3  +
push dword_1058B7C  +
call esi  +
mov eax ebx +
add esp 14h +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_10507BE  +
sub eax edi +
lea edi [eax+ebx+1] +
xor ebx ebx +
inc ebx  +
cmp [edi] cl +
jz loc_105080A  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
add eax ecx +
mov [ebp+var_4] eax +
cmp edi [ebp+var_4] +
jnb loc_105080A  +
push edi  +
push offset aS_4  +
push dword_1058B7C  +
call esi  +
mov eax edi +
add esp 0Ch +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_10507F8  +
sub eax ecx +
lea edi [edi+eax+1] +
inc ebx  +
cmp [edi] dl +
jnz loc_10507DD  +
push offset aValuemap_0  +
push dword_1058B7C  +
call esi  +
push offset a0x00000001  +
push dword_1058B7C  +
call esi  +
xor edi edi +
inc edi  +
add esp 10h +
cmp ebx edi +
jle loc_105084B  +
xor eax eax +
inc eax  +
mov ecx edi +
shl eax cl +
push eax  +
push offset a0x_8x  +
push dword_1058B7C  +
call esi  +
add esp 0Ch +
inc edi  +
cmp edi ebx +
jl loc_105082E  +
push offset aAmendedUint32F  +
push dword_1058B7C  +
call esi  +
pop ecx  +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp-4] eax +
mov eax dword_1059598 +
and dword ptr [ebp-110h] 0 +
push ebx  +
mov ebx [ebp+8] +
mov [ebp-11Ch] ebx +
mov dword ptr [ebp-114h] offset unk_1058018 +
test eax eax +
jz loc_10508C2  +
mov ecx [ebx+18h] +
cmp byte ptr [ecx+eax] 0 +
jz loc_10508BB  +
push ecx  +
push offset aIndexDAlreadyI  +
call ds:printf  +
mov eax dword_1059598 +
pop ecx  +
pop ecx  +
mov ecx [ebx+18h] +
mov byte ptr [eax+ecx] 1 +
mov eax [ebx+48h] +
push 5  +
pop ecx  +
cmp eax 8 +
jz loc_10508D9  +
cmp eax ecx +
jz loc_10508D9  +
xor eax eax +
inc eax  +
jmp loc_1050F34  +
push edi  +
cmp eax ecx +
jnz loc_105091A  +
mov eax [ebx+4Ch] +
mov edi 104h +
cmp eax edi +
jnb loc_10508FF  +
push eax  +
add ebx 54h +
push ebx  +
push edi  +
push offset aUnknown_1  +
call strncpy_s  +
add esp 10h +
jmp loc_1050912  +
push offset aUnknown_4  +
push edi  +
push offset aUnknown_1  +
call strcpy_s  +
add esp 0Ch +
xor eax eax +
inc eax  +
jmp loc_1050F33  +
push esi  +
lea edx [ebx+54h] +
mov edi offset aTmf +
mov esi edx +
xor eax eax +
cmps   +
jnz loc_1050937  +
mov dword ptr [ebp-120h] offset a_tmf +
jmp loc_105095F  +
push 5  +
mov edi offset aTmc +
mov esi edx +
pop ecx  +
xor eax eax +
cmps   +
jnz loc_1050F2F  +
mov dword ptr [ebp-120h] offset a_tmc +
mov dword ptr [ebp-110h] 1 +
mov eax edx +
mov dword_1058B6C 1 +
lea esi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_105096E  +
sub eax esi +
cmp dword ptr [ebp-110h] 0 +
lea edi [edx+eax+1] +
mov [ebp-10Ch] edi +
jnz loc_10509DC  +
mov eax [ebx+4Ch] +
cmp eax [ebx+50h] +
jnz loc_10509DC  +
mov eax ds:_iob +
mov esi ds:fprintf +
push edi  +
push offset unk_1058A60  +
add eax 20h +
push offset aSWarningLargeE  +
push eax  +
call esi  +
mov eax edi +
add esp 10h +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_10509B6  +
sub eax ecx +
lea eax [eax+edi+1] +
push eax  +
mov eax ds:_iob +
add eax 20h +
push offset aS_8  +
push eax  +
call esi  +
add esp 0Ch +
jmp loc_1050F2F  +
mov ebx ds:fprintf +
xor esi esi +
mov edi 104h +
cmp dword_1058B7C esi +
jnz loc_1050B01  +
cmp [ebp-110h] esi +
jz loc_1050B01  +
push esi  +
push esi  +
push edi  +
push offset unk_1058120  +
push esi  +
push esi  +
push esi  +
push esi  +
push dword_10579DC  +
call _splitpath_s  +
push offset unk_1058120  +
push dword_10579F0  +
lea eax [ebp-108h] +
push offset aSS_mof  +
push edi  +
push eax  +
call sprintf_s  +
add esp 38h +
cmp dword_1058B68 esi +
jnz loc_1050A7A  +
lea eax [ebp-108h] +
push eax  +
call ds:MakeSureDirectoryPathExists  +
test eax eax +
jnz loc_1050A70  +
mov eax ds:_iob +
push offset unk_1058018  +
push offset unk_1058A60  +
add eax 40h +
push offset aSErrorBnp0000W  +
push eax  +
call ebx  +
jmp loc_1050C26  +
mov dword_1058B68 1 +
lea eax [ebp-108h] +
push offset aW_1  +
push eax  +
call ds:fopen  +
pop ecx  +
pop ecx  +
mov dword_1058B7C eax +
cmp eax esi +
jnz loc_1050AD2  +
cmp dword_1058B84 esi +
mov esi ds:GetLastError +
jz loc_1050ACB  +
call esi  +
push eax  +
lea eax [ebp-108h] +
push eax  +
mov eax ds:_iob +
push offset unk_1058A60  +
add eax 40h +
push offset aSWarningBnp000  +
push eax  +
call ds:fprintf  +
add esp 14h +
call esi  +
jmp loc_1050F32  +
push offset aPragmaAutoreco  +
push eax  +
call ebx  +
push offset unk_1057C00  +
push offset aS_7  +
push dword_1058B7C  +
call ebx  +
push offset unk_10579F8  +
push offset aS_5  +
push dword_1058B7C  +
call ebx  +
add esp 20h +
push 24h  +
mov esi offset byte_1058558 +
push esi  +
push dword ptr [ebp-10Ch]  +
call ds:strncmp  +
add esp 0Ch +
test eax eax +
jz loc_1050E29  +
cmp dword_1058B64 0 +
jz loc_1050B46  +
cmp dword_1058B74 0 +
jnz loc_1050B46  +
push dword_1058B64  +
call ds:fclose  +
and dword_1058B64 0 +
pop ecx  +
mov eax [ebp-10Ch] +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1050B4F  +
sub eax edx +
cmp eax 24h +
jb loc_1050B71  +
push 24h  +
push dword ptr [ebp-10Ch]  +
push edi  +
push esi  +
call strncpy_s  +
add esp 10h +
jmp loc_1050BDA  +
cmp dword ptr [ebp-110h] 0 +
jnz loc_1050B97  +
mov eax ds:_iob +
push offset unk_1058A60  +
add eax 40h +
push offset aSErrorBnp000_0  +
push eax  +
call ebx  +
add esp 0Ch +
jmp loc_1050D97  +
mov eax [ebp-10Ch] +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1050BA0  +
push 24h  +
sub eax edx +
pop ecx  +
mov [ebp-118h] eax +
cmp eax ecx +
jbe loc_1050BBC  +
mov [ebp-118h] ecx +
push edi  +
push 0  +
push esi  +
call memset  +
push dword ptr [ebp-118h]  +
push dword ptr [ebp-10Ch]  +
push esi  +
call memcpy  +
add esp 18h +
cmp dword_1058B74 0 +
jz loc_1050C2E  +
mov eax dword_1058B78 +
mov [ebp-114h] eax +
mov esi offset unk_1058018 +
xor edi edi +
cmp dword_1058B74 edi +
jnz loc_1050C6A  +
cmp dword_1058B68 edi +
jnz loc_1050C6A  +
push esi  +
call ds:MakeSureDirectoryPathExists  +
test eax eax +
jnz loc_1050C60  +
push esi  +
push offset unk_1058A60  +
push offset aSErrorBnp0000W  +
mov eax ds:_iob +
add eax 40h +
push eax  +
call ebx  +
add esp 10h +
jmp loc_1050D97  +
push dword ptr [ebp-120h]  +
push esi  +
push dword_10579F0  +
mov esi offset unk_1058018 +
push offset aSSS  +
push edi  +
push esi  +
call sprintf_s  +
add esp 18h +
test eax eax +
jg loc_1050BF3  +
push esi  +
push offset unk_1058A60  +
push offset aSErrorBnp000_1  +
jmp loc_1050C1B  +
***
mov dword_1058B68 1 +
cmp [ebp-110h] edi +
jz loc_1050C80  +
cmp dword_1058B70 edi +
jz loc_1050E29  +
xor edi edi +
push offset aW_1  +
push 7  +
push offset aW_2  +
call sprintf_s  +
add esp 0Ch +
cmp dword_1058B74 edi +
jnz loc_1050D46  +
push offset aR_0  +
push dword ptr [ebp-114h]  +
call ds:fopen  +
pop ecx  +
pop ecx  +
mov dword_1058B64 eax +
cmp eax edi +
jz loc_1050D4E  +
push eax  +
mov esi 204h +
push esi  +
mov edi offset unk_1057E08 +
push edi  +
call ds:fgets  +
add esp 0Ch +
test eax eax +
jz loc_1050D30  +
push esi  +
push offset unk_1057C00  +
push edi  +
call ds:strncmp  +
add esp 0Ch +
test eax eax +
jnz loc_1050D1C  +
push dword_1058B64  +
mov edi offset unk_1058330 +
push esi  +
push edi  +
call ds:fgets  +
add esp 0Ch +
test eax eax +
jz loc_1050D30  +
push esi  +
push offset unk_10579F8  +
push edi  +
call ds:strncmp  +
add esp 0Ch +
test eax eax +
jnz loc_1050D30  +
push offset aA  +
push 7  +
push offset aW_2  +
call sprintf_s  +
add esp 0Ch +
push dword_1058B64  +
call ds:fclose  +
and dword_1058B64 0 +
pop ecx  +
xor edi edi +
cmp dword_1058B64 edi +
jnz loc_1050D9E  +
push offset aW_2  +
push dword ptr [ebp-114h]  +
call ds:fopen  +
pop ecx  +
pop ecx  +
mov dword_1058B64 eax +
cmp eax edi +
jnz loc_1050D9E  +
cmp dword_1058B84 edi +
jz loc_1050D97  +
call ds:GetLastError  +
push eax  +
push dword ptr [ebp-114h]  +
mov eax ds:_iob +
push offset unk_1058A60  +
add eax 40h +
push offset aSWarningBnp0_0  +
push eax  +
call ebx  +
add esp 14h +
xor eax eax +
jmp loc_1050F32  +
cmp dword_1058B84 edi +
jz loc_1050DCA  +
push dword_10579DC  +
mov eax ds:_iob +
push dword ptr [ebp-114h]  +
add eax 20h +
push offset unk_1058A60  +
push offset aSInfoBnp0000Wp  +
push eax  +
call ebx  +
add esp 14h +
push 2  +
pop ecx  +
mov edi offset aW_1 +
mov esi offset aW_2 +
xor eax eax +
cmps   +
push offset unk_1057C00  +
mov esi offset aS_7 +
push esi  +
push dword_1058B64  +
jnz loc_1050E16  +
call ebx  +
push offset unk_10579F8  +
push esi  +
push dword_1058B64  +
call ebx  +
push dword ptr [ebp-10Ch]  +
push offset aS_6  +
push dword_1058B64  +
call ebx  +
add esp 24h +
jmp loc_1050E29  +
call ebx  +
push offset unk_10579F8  +
push esi  +
push dword_1058B64  +
call ebx  +
add esp 18h +
cmp dword ptr [ebp-110h] 0 +
jz loc_1050E56  +
mov eax [ebp-11Ch] +
mov ecx [eax+4Ch] +
sub ecx [ebp-10Ch] +
lea eax [ecx+eax+54h] +
push eax  +
push dword ptr [ebp-10Ch]  +
call sub_105057C  +
jmp loc_1050F2F  +
mov esi [ebp-10Ch] +
mov eax esi +
lea edi [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1050E61  +
sub eax edi +
push offset aUnknown_1  +
lea esi [esi+eax+1] +
push esi  +
push offset aSFuncS  +
push dword_1058B64  +
call ebx  +
mov edi ds:strstr +
push offset aFlags  +
push esi  +
call edi  +
add esp 18h +
test eax eax +
jz loc_1050EAE  +
push offset aLevel_1  +
push esi  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1050EAE  +
mov dword_1058B80 1 +
mov eax esi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1050EB3  +
jmp loc_1050F24  +
mov eax [ebp-11Ch] +
mov ecx [eax+4Ch] +
lea eax [ecx+eax+54h] +
cmp esi eax +
jnb loc_1050F2F  +
push esi  +
push offset aS_6  +
push dword_1058B64  +
call ebx  +
push offset aItemenum  +
push esi  +
call ds:strstr  +
mov edi eax +
add esp 14h +
test edi edi +
jz loc_1050F18  +
cmp byte ptr [edi+8] 28h +
jnz loc_1050F18  +
add edi 9 +
mov al [edi] +
mov ecx edi +
jmp loc_1050F06  +
cmp al 29h +
jz loc_1050F0F  +
inc ecx  +
mov al [ecx] +
test al al +
jnz loc_1050EFF  +
cmp byte ptr [ecx] 29h +
jnz loc_1050F18  +
sub ecx edi +
push ecx  +
push edi  +
call sub_104FCB1  +
mov eax esi +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1050F1D  +
sub eax edx +
lea esi [esi+eax+1] +
cmp byte ptr [esi] 0 +
jnz loc_1050EBC  +
xor eax eax +
inc eax  +
pop esi  +
pop edi  +
mov ecx [ebp-4] +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 0Ch  +
***
call __SEH_prolog4_GS  +
mov eax [ebp+arg_0] +
mov [ebp+lpFileName] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_530] eax +
xor ebx ebx +
mov [ebp+var_53C] ebx +
mov eax [ebp+arg_C] +
mov dword_1058B84 eax +
mov dword_1058224 ebx +
push offset aDbghelp_dll  +
call ds:LoadLibraryW  +
mov esi eax +
mov [ebp+hLibModule] esi +
cmp esi ebx +
jz loc_1051342  +
push offset aSymsearch  +
push esi  +
mov edi ds:GetProcAddress +
call edi  +
mov [ebp+var_538] eax +
cmp eax ebx +
jnz loc_105105F  +
push esi  +
call ds:FreeLibrary  +
mov esi 104h +
push esi  +
lea eax [ebp+LibFileName] +
push eax  +
push ebx  +
call ds:GetModuleFileNameA  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push esi  +
lea eax [ebp+LibFileName] +
push eax  +
push 3  +
lea eax [ebp+var_540] +
push eax  +
lea eax [ebp+LibFileName] +
push eax  +
call _splitpath_s  +
push offset aDll  +
push offset aDbghelp  +
lea eax [ebp+LibFileName] +
push eax  +
lea eax [ebp+var_540] +
push eax  +
push esi  +
lea eax [ebp+LibFileName] +
push eax  +
call _makepath_s  +
add esp 3Ch +
lea eax [ebp+LibFileName] +
push eax  +
call ds:LoadLibraryA  +
mov [ebp+hLibModule] eax +
cmp eax ebx +
jz loc_1051064  +
push offset aSymsearch  +
push eax  +
call edi  +
mov [ebp+var_538] eax +
cmp eax ebx +
jnz loc_1051064  +
push offset aFunctionalityF  +
mov esi ds:printf +
call esi  +
mov [esp+55Ch+var_55C] offset aUpdateYourDebu +
call esi  +
pop ecx  +
jmp loc_10512FD  +
mov esi 104h +
push esi  +
mov edi offset Filename +
push edi  +
push ebx  +
call ds:GetModuleFileNameA  +
push ebx  +
push ebx  +
push esi  +
push offset unk_1058A60  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push edi  +
call _splitpath_s  +
add esp 24h +
call sub_1050206  +
test eax eax +
jnz loc_105109F  +
mov [ebp+var_53C] 1 +
jmp loc_10512FD  +
mov [ebp+ms_exc.disabled] ebx +
push ebx  +
push 80h  +
push 3  +
push ebx  +
push ebx  +
push 80000000h  +
push [ebp+lpFileName]  +
call ds:CreateFileA  +
mov edi eax +
cmp edi ebx +
jz loc_1051186  +
lea eax [ebp+FileTime] +
push eax  +
push ebx  +
push ebx  +
push edi  +
call ds:GetFileTime  +
test eax eax +
jz loc_105117F  +
lea eax [ebp+SystemTime] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
test eax eax +
jz loc_105117F  +
push [ebp+lpFileName]  +
push offset aPdbS  +
mov esi 204h +
push esi  +
push offset unk_1057C00  +
call sprintf_s  +
add esp 10h +
test eax eax +
jg loc_1051124  +
mov byte_1057E02 0Ah +
push offset unk_1058A60  +
movzx eax [ebp+SystemTime.wMilliseconds] +
push eax  +
movzx eax [ebp+SystemTime.wSecond] +
push eax  +
movzx eax [ebp+SystemTime.wMinute] +
push eax  +
movzx eax [ebp+SystemTime.wHour] +
push eax  +
movzx eax [ebp+SystemTime.wDay] +
push eax  +
movzx eax [ebp+SystemTime.wMonth] +
push eax  +
movzx eax [ebp+SystemTime.wYear] +
push eax  +
push offset aPdbLastUpdated  +
push esi  +
push offset unk_10579F8  +
call sprintf_s  +
add esp 2Ch +
test eax eax +
jg loc_105117F  +
mov byte_1057BFA 0Ah +
push edi  +
call ds:CloseHandle  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_105119F  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
xor ebx ebx +
mov dword_1058B6C ebx +
mov esi [ebp+lpFileName] +
push esi  +
call sub_10503D9  +
test eax eax +
jz loc_10512AE  +
mov dword_10579DC esi +
mov eax [ebp+arg_4] +
mov dword_10579F0 eax +
cmp [ebp+var_530] ebx +
jz loc_10511ED  +
mov edi offset aGen_tmc +
mov esi [ebp+var_530] +
push 8  +
pop ecx  +
xor eax eax +
cmps   +
jnz loc_10511ED  +
mov dword_1058B70 1 +
mov esi [ebp+var_530] +
cmp esi ebx +
jz loc_105121F  +
push 5  +
push offset aFile_0  +
push esi  +
call ds:strncmp  +
add esp 0Ch +
test eax eax +
jnz loc_105121F  +
mov dword_1058B74 1 +
add esi 5 +
mov dword_1058B78 esi +
push 2  +
lea eax [ebp+var_528] +
push eax  +
push offset loc_1050866  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push dword_10579E4  +
push dword_10579E0  +
push dword_105832C  +
call [ebp+var_538]  +
test eax eax +
jnz loc_1051262  +
call ds:GetLastError  +
push eax  +
push offset aError0xXCallin  +
call ds:printf  +
pop ecx  +
pop ecx  +
cmp dword_105800C ebx +
jz loc_10512AE  +
cmp word_10579EC bx +
jbe loc_10512AE  +
push ebx  +
push offset loc_10500B4  +
push dword_10579E4  +
push dword_10579E0  +
push dword_105832C  +
call ds:SymEnumTypes  +
test eax eax +
jnz loc_10512A9  +
call ds:GetLastError  +
push eax  +
push offset aError0xXCallin  +
call ds:printf  +
pop ecx  +
pop ecx  +
call sub_104FD03  +
mov eax dword_1058B64 +
cmp eax ebx +
jz loc_10512C5  +
push eax  +
call ds:fclose  +
pop ecx  +
mov dword_1058B64 ebx +
push ebx  +
call sub_105033B  +
cmp dword_1058B6C ebx +
jnz loc_10512FD  +
cmp dword_1058B84 ebx +
jz loc_10512FD  +
push [ebp+lpFileName]  +
push offset unk_1058A60  +
push offset aSInfoBnp0000_0  +
mov eax ds:_iob +
add eax 20h +
push eax  +
call ds:fprintf  +
add esp 10h +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
cmp dword_1058B7C ebx +
jz loc_105132F  +
call sub_10503A4  +
push dword_1058B7C  +
call ds:fclose  +
pop ecx  +
mov dword_1058B80 ebx +
mov dword_1058B7C ebx +
call sub_104F897  +
mov eax [ebp+var_53C] +
call __SEH_epilog4_GS  +
retn 10h  +
push offset aWppfmtFailedTo  +
call ds:printf  +
pop ecx  +
push 1  +
call ds:exit  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
mov edi ds:NtQueryInformationToken +
xor esi esi +
inc esi  +
mov [ebx] esi +
and dword ptr [eax] 0 +
lea eax [ebp+arg_8] +
push eax  +
push 4  +
lea eax [ebp+var_4] +
push eax  +
push 12h  +
push [ebp+arg_0]  +
mov [ebp+var_4] esi +
call edi  +
test eax eax +
jl loc_10514A3  +
cmp [ebp+var_4] 2 +
jz loc_105149E  +
cmp [ebp+var_4] esi +
jnz loc_10514A3  +
and dword ptr [ebx] 0 +
lea eax [ebp+arg_8] +
push eax  +
push 4  +
lea eax [ebp+var_8] +
push eax  +
push 14h  +
push [ebp+arg_0]  +
call edi  +
test eax eax +
jl loc_10514A3  +
cmp [ebp+var_8] 0 +
jz loc_10514A3  +
mov ecx [ebp+arg_4] +
mov [ecx] esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
and dword ptr [esi] 0 +
push 4  +
pop eax  +
lea ecx [ebp+arg_4] +
push ecx  +
push eax  +
mov [ebp+arg_4] eax +
lea eax [ebp+arg_0] +
push eax  +
push 1Ah  +
push [ebp+arg_0]  +
call ds:NtQueryInformationToken  +
test eax eax +
jl loc_10514E3  +
xor ecx ecx +
cmp [ebp+arg_0] ecx +
setnz cl  +
mov [esi] ecx +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1051534  +
lea eax [ebp+arg_0] +
push eax  +
push ebx  +
push 8  +
push 0FFFFFFFEh  +
call ds:NtOpenThreadToken  +
mov edi eax +
cmp edi 0C000007Ch +
jnz loc_105152A  +
lea eax [ebp+arg_0] +
push eax  +
push 8  +
push 0FFFFFFFFh  +
call ds:NtOpenProcessToken  +
mov edi eax +
cmp edi ebx +
jl loc_1051599  +
mov eax [ebp+arg_0] +
mov [ebp+var_4] eax +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_0]  +
call sub_105143F  +
mov edi eax +
cmp edi ebx +
jl loc_105158B  +
push esi  +
mov esi [ebp+arg_4] +
cmp [ebp+var_8] ebx +
jz loc_1051557  +
mov [esi] ebx +
jmp loc_1051562  +
xor eax eax +
cmp [ebp+var_C] ebx +
setz al  +
inc eax  +
mov [esi] eax +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
call sub_10514AF  +
mov edi eax +
cmp edi ebx +
jl loc_105158A  +
cmp [ebp+arg_4] ebx +
jz loc_105158A  +
mov eax [esi] +
cmp eax 10h +
jb loc_1051585  +
cmp eax 13h +
jb loc_1051588  +
add eax 10h +
mov [esi] eax +
pop esi  +
cmp [ebp+var_4] ebx +
jz loc_1051599  +
push [ebp+var_4]  +
call ds:NtClose  +
mov eax edi +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call _vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_10515CE  +
cmp eax esi +
ja loc_10515CE  +
jz loc_10515D3  +
jmp loc_10515DB  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10515E4  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+wLanguage]  +
push 1  +
push offset Type  +
push [ebp+hModule]  +
call ds:FindResourceExW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+hModule]  +
call sub_10515F1  +
test eax eax +
jz loc_105162F  +
push eax  +
push [ebp+hModule]  +
call ds:LoadResource  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+hModule] 0 +
push esi  +
jz loc_105168D  +
cmp [ebp+arg_4] 0 +
jz loc_105168D  +
push [ebp+hModule]  +
call sub_1051612  +
push [ebp+arg_4]  +
mov esi eax +
call sub_1051612  +
test esi esi +
jz loc_1051685  +
test eax eax +
jz loc_1051685  +
mov ecx 0FECDFECDh +
cmp [esi] ecx +
jnz loc_105168D  +
cmp [eax] ecx +
jnz loc_105168D  +
push edi  +
push 4  +
lea edi [eax+1Ch] +
add esi 1Ch +
pop ecx  +
xor eax eax +
cmps   +
pop edi  +
jnz loc_105168D  +
inc eax  +
jmp loc_105168F  +
push 0Dh  +
call ds:SetLastError  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor esi esi +
push edi  +
cmp [ebp+lpLibFileName] esi +
jnz loc_10516AC  +
xor eax eax +
jmp loc_105171A  +
cmp [ebp+arg_4] esi +
jz loc_1051707  +
push esi  +
push esi  +
push 3  +
push esi  +
push 5  +
push 80000000h  +
push [ebp+lpLibFileName]  +
call ds:CreateFileW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_10516A8  +
push esi  +
push esi  +
push esi  +
push 8  +
push esi  +
push edi  +
call ds:CreateFileMappingW  +
push edi  +
mov edi ds:CloseHandle +
mov ebx eax +
call edi  +
cmp ebx esi +
jz loc_10516A8  +
push esi  +
push esi  +
push esi  +
push 1  +
push ebx  +
call ds:MapViewOfFile  +
push ebx  +
mov [ebp+lpLibFileName] eax +
call edi  +
mov eax [ebp+lpLibFileName] +
cmp eax esi +
jz loc_10516A8  +
or eax 1 +
jmp loc_105171A  +
xor eax eax +
cmp [ebp+arg_8] esi +
setnz al  +
push eax  +
push esi  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryExW  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
xor edi edi +
cmp dword_1059998 edi +
jnz loc_1051842  +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+VersionInformation] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
mov [ebp+VersionInformation.dwOSVersionInfoSize] esi +
mov esi ds:GetVersionExW +
push eax  +
call esi  +
test eax eax +
jnz loc_105178D  +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 114h +
call esi  +
mov eax [ebp+VersionInformation.dwPlatformId] +
dec eax  +
mov dword_1059998 edi +
pop esi  +
jz loc_1051815  +
dec eax  +
jnz loc_1051842  +
cmp [ebp+VersionInformation.dwMajorVersion] 5 +
jnz loc_1051802  +
mov eax [ebp+VersionInformation.dwMinorVersion] +
sub eax edi +
jz loc_10517F6  +
dec eax  +
jz loc_10517E3  +
dec eax  +
jz loc_10517C9  +
mov dword_1059998 14h +
jmp loc_1051842  +
cmp [ebp+var_C] 1 +
jb loc_10517DA  +
mov dword_1059998 10h +
or dword_1059998 4 +
jmp loc_1051842  +
cmp [ebp+var_C] 2 +
jb loc_10517DA  +
mov dword_1059998 8 +
jmp loc_10517DA  +
mov dword_1059998 4 +
jmp loc_1051842  +
cmp [ebp+VersionInformation.dwMajorVersion] 4 +
ja loc_1051854  +
mov dword_1059998 2 +
cmp [ebp+VersionInformation.dwMajorVersion] 4 +
jnz loc_1051842  +
cmp [ebp+VersionInformation.dwMinorVersion] edi +
jz loc_1051838  +
cmp [ebp+VersionInformation.dwMinorVersion] 0Ah +
jz loc_1051838  +
cmp [ebp+VersionInformation.dwMinorVersion] 5Ah +
jnz loc_1051842  +
mov dword_1059998 1 +
mov ecx [ebp+var_4] +
mov eax dword_1059998 +
xor ecx ebp +
pop edi  +
call sub_101CA75  +
leave   +
retn   +
mov dword_1059998 20h +
jmp loc_1051842  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 20h  +
lea eax [ebp+LCData] +
push eax  +
push 8  +
push 404h  +
mov esi 0C04h +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_10518B9  +
push 3  +
lea eax [ebp+LCData] +
push offset word_1018C78  +
push eax  +
call wcsncmp  +
add esp 0Ch +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 0FFFFF800h +
add esi 0C04h +
mov ecx [ebp+var_4] +
mov ax si +
xor ecx ebp +
pop esi  +
call sub_101CA75  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
xor eax eax +
cmp ax word_105999C +
jnz loc_1051969  +
push esi  +
lea eax [ebp+hKey] +
push eax  +
push 1  +
xor esi esi +
push esi  +
push offset SubKey  +
push 80000002h  +
mov [ebp+cbData] 6 +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_1051968  +
push edi  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push esi  +
push esi  +
push offset ValueName  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
push [ebp+hKey]  +
mov edi eax +
call ds:RegCloseKey  +
cmp edi esi +
pop edi  +
jnz loc_1051968  +
push 3  +
push ds:off_10189F8[esi*8]  +
lea eax [ebp+Data] +
push eax  +
call _wcsnicmp  +
add esp 0Ch +
test eax eax +
jz loc_105195A  +
inc esi  +
cmp esi 1Ch +
jb loc_1051939  +
jmp loc_1051968  +
mov ax ds:word_10189FC[esi*8] +
mov word_105999C ax +
pop esi  +
mov ecx [ebp+var_4] +
mov ax word_105999C +
xor ecx ebp +
call sub_101CA75  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi eax +
xor ebx ebx +
cmp edi ebx +
jz loc_1051A3E  +
cmp [ebp+arg_0] ebx +
jz loc_1051A3E  +
cmp [ebp+arg_4] ebx +
jz loc_1051A3E  +
push esi  +
movzx eax word ptr [edi] +
lea ecx [eax-61h] +
cmp cx 19h +
ja loc_10519BA  +
movzx eax ax +
sub eax 61h +
jmp loc_10519C9  +
lea ecx [eax-41h] +
cmp cx 19h +
ja loc_10519F3  +
movzx eax ax +
sub eax 41h +
cmp eax 1Ah +
jnb loc_10519F3  +
mov esi ds:dword_1018B40[eax*4] +
test esi esi +
jz loc_10519F3  +
jmp loc_10519EB  +
push eax  +
push edi  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10519FE  +
add esi 8 +
mov eax [esi] +
cmp word ptr [eax] 0 +
jnz loc_10519DB  +
mov edi [ebp+arg_0] +
inc ebx  +
cmp ebx 2 +
jl loc_10519A6  +
jmp loc_1051A3D  +
mov esi [esi+4] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1051A06  +
sub eax edx +
sar eax 1 +
cmp eax 55h +
jnb loc_1051A3D  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1051A1E  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
push esi  +
push [ebp+arg_4]  +
call memcpy  +
add esp 0Ch +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test esi esi +
jz loc_1051A8F  +
cmp [ebp+arg_4] 0 +
jz loc_1051A8F  +
push 2  +
push 55h  +
push esi  +
push [ebp+arg_0]  +
call sub_10524DD  +
test eax eax +
jz loc_1051A8F  +
push 2  +
push 55h  +
push [ebp+arg_4]  +
push esi  +
call sub_1052583  +
test edi edi +
jz loc_1051A8A  +
xor eax eax +
push edi  +
push [ebp+arg_4]  +
mov [edi] ax +
mov eax esi +
call sub_1051980  +
xor eax eax +
inc eax  +
jmp loc_1051A91  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp ds:FreeLibrary  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_1051AC0  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_1051AC5  +
mov eax 80070057h +
test eax eax +
jl loc_1051ADE  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_10515A6  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_1051B08  +
xor eax eax +
jmp loc_1051B73  +
push ebx  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
lea eax [ebp+LibFileName] +
push 104h  +
push eax  +
xor ebx ebx +
call sub_1051AAB  +
test eax eax +
jl loc_1051B70  +
push esi  +
call sub_1051726  +
mov esi eax +
and esi 26h +
call sub_1051726  +
and eax 38h +
push esi  +
push eax  +
lea eax [ebp+LibFileName] +
push eax  +
call sub_1051699  +
mov ebx eax +
pop esi  +
test ebx ebx +
jz loc_1051B70  +
push ebx  +
push edi  +
call sub_1051638  +
test eax eax +
jnz loc_1051B70  +
push ebx  +
test bl 1 +
jz loc_1051B68  +
call ds:UnmapViewOfFile  +
jmp loc_1051B6E  +
call ds:FreeLibrary  +
xor ebx ebx +
mov eax ebx +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_101CA75  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test eax eax +
jz loc_1051BE0  +
test ecx ecx +
jz loc_1051BE0  +
cmp dword ptr [ebp+arg_0] 0 +
push eax  +
jz loc_1051BC4  +
test edx edx +
jz loc_1051BB1  +
push edx  +
push dword ptr [ebp+arg_0]  +
push offset aSSS_mui  +
push ecx  +
call sub_1051AE7  +
add esp 14h +
jmp loc_1051BE2  +
push dword ptr [ebp+arg_0]  +
push offset aSS_mui  +
push ecx  +
call sub_1051AE7  +
add esp 10h +
jmp loc_1051BE2  +
test edx edx +
jz loc_1051BD0  +
push edx  +
push offset a_SS_mui  +
jmp loc_1051BB9  +
push offset a_S_mui  +
push ecx  +
call sub_1051AE7  +
add esp 0Ch +
jmp loc_1051BE2  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 428h +
mov eax dword_1055908 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+lpLibFileName] esi +
mov [ebp+FilePart] ebx +
cmp esi ebx +
jnz loc_1051C1E  +
xor eax eax +
jmp loc_1052377  +
test [ebp+arg_4] 0FFFFFFE3h +
jnz loc_1051C17  +
push edi  +
mov edi dword ptr [ebp+wLanguage] +
cmp di bx +
jnz loc_1051C3A  +
test byte ptr [ebp+arg_4] 10h +
jnz loc_10522A4  +
call sub_1051726  +
mov dword_10599A0 eax +
movzx eax al +
and eax 20h +
or eax 2 +
push eax  +
push 0  +
push esi  +
call ds:LoadLibraryExW  +
mov [ebp+hModule] eax +
test eax eax +
jz loc_10522A4  +
test byte ptr dword_10599A0 20h +
jnz loc_1052376  +
lea eax [ebp+FilePart] +
push eax  +
lea eax [ebp+LibFileName] +
push eax  +
push 104h  +
push 0  +
push esi  +
push 0  +
call ds:SearchPathW  +
test eax eax +
jz loc_1052298  +
mov eax [ebp+FilePart] +
test eax eax +
jnz loc_1051CB6  +
and dword ptr [ebp+var_41C] ebx +
lea eax [ebp+LibFileName] +
mov [ebp+FilePart] eax +
jmp loc_1051CC8  +
lea ecx [ebp+LibFileName] +
mov dword ptr [ebp+var_41C] ecx +
xor ecx ecx +
mov [eax-2] cx +
push 0  +
push [ebp+hModule]  +
call sub_10515F1  +
test eax eax +
jz loc_1052280  +
test di di +
jnz loc_1052258  +
mov al byte ptr dword_10599A0 +
test al 4 +
jz loc_1052067  +
call ds:GetUserDefaultUILanguage  +
movzx eax ax +
mov ecx 404h +
mov [ebp+var_420] eax +
cmp ax cx +
jnz loc_1051D1A  +
call sub_1051865  +
movzx eax ax +
mov [ebp+var_420] eax +
mov eax [ebp+arg_4] +
and eax 8 +
mov [ebp+var_424] eax +
cmp [ebp+var_424] 0 +
jz loc_1051DF0  +
lea eax [ebp+var_15C] +
push eax  +
push [ebp+var_420]  +
lea edi [ebp+var_208] +
lea esi [ebp+var_B0] +
call sub_1051A49  +
test eax eax +
jz loc_10522E4  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx esi +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jnz loc_10522E8  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
lea edx [ebp+var_15C] +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jnz loc_10522E8  +
cmp word ptr [ebp+var_208] ax +
jz loc_1051DCF  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx edi +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jnz loc_10522E8  +
mov eax 0C04h +
cmp word ptr [ebp+var_420] ax +
jnz loc_1051F9B  +
mov [ebp+var_420] 404h +
jmp loc_1051D26  +
movzx eax word ptr [ebp+var_420] +
push eax  +
push offset aMui04hx  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_101BCA7  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
lea edx [ebp+var_B0] +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jnz loc_10522E8  +
lea eax [ebp+var_15C] +
push eax  +
push [ebp+var_420]  +
xor edi edi +
lea esi [ebp+var_B0] +
call sub_1051A49  +
test eax eax +
jz loc_1051EA2  +
push 2  +
lea eax [ebp+var_15C] +
push eax  +
call sub_10523F2  +
movzx eax ax +
test ax ax +
jz loc_1051EA2  +
movzx eax ax +
push eax  +
push offset aMui04hx  +
mov eax esi +
push 55h  +
push eax  +
call sub_101BCA7  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
mov edx esi +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jnz loc_10522E8  +
mov eax 0C04h +
cmp word ptr [ebp+var_420] ax +
jz loc_1051DE1  +
call ds:GetSystemDefaultUILanguage  +
movzx esi ax +
mov [ebp+var_424] esi +
cmp si word ptr [ebp+var_420] +
jz loc_1051F7F  +
movzx eax si +
push eax  +
push offset aMui04hx  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_101BCA7  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
lea edx [ebp+var_B0] +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jnz loc_10522E8  +
lea eax [ebp+var_15C] +
push eax  +
push esi  +
xor edi edi +
lea esi [ebp+var_B0] +
call sub_1051A49  +
test eax eax +
jz loc_1051F79  +
push 2  +
lea eax [ebp+var_15C] +
push eax  +
call sub_10523F2  +
movzx eax ax +
test ax ax +
jz loc_1051F79  +
movzx eax ax +
push eax  +
push offset aMui04hx  +
mov eax esi +
push 55h  +
push eax  +
call sub_101BCA7  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
mov edx esi +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jnz loc_10522E8  +
mov esi [ebp+var_424] +
mov eax 409h +
mov ecx eax +
cmp cx word ptr [ebp+var_420] +
jz loc_1052230  +
cmp ax si +
jmp loc_1052208  +
call ds:GetSystemDefaultUILanguage  +
movzx eax ax +
mov [ebp+var_424] eax +
cmp ax word ptr [ebp+var_420] +
jz loc_105204E  +
lea ecx [ebp+var_15C] +
push ecx  +
push eax  +
lea edi [ebp+var_208] +
lea esi [ebp+var_B0] +
call sub_1051A49  +
test eax eax +
jz loc_1052280  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx esi +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jnz loc_10522E8  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
lea edx [ebp+var_15C] +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jnz loc_10522E8  +
cmp word ptr [ebp+var_208] ax +
jz loc_105204E  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx edi +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jnz loc_10522E8  +
mov eax 409h +
mov ecx eax +
cmp cx word ptr [ebp+var_420] +
jz loc_1052230  +
jmp loc_1052125  +
test al 3 +
jz loc_1052280  +
call sub_10518CE  +
test byte ptr [ebp+arg_4] 8 +
movzx eax ax +
mov [ebp+var_424] eax +
jz loc_105214E  +
lea ecx [ebp+var_15C] +
push ecx  +
push eax  +
lea edi [ebp+var_208] +
lea esi [ebp+var_B0] +
call sub_1051A49  +
test eax eax +
jz loc_1052280  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx esi +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jnz loc_10522E8  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
lea edx [ebp+var_15C] +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jnz loc_10522E8  +
cmp word ptr [ebp+var_208] ax +
jz loc_105211E  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
mov edx edi +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jnz loc_10522E8  +
mov eax 409h +
mov ecx eax +
cmp cx word ptr [ebp+var_424] +
jz loc_1052230  +
lea ecx [ebp+var_15C] +
push ecx  +
push eax  +
xor edi edi +
lea esi [ebp+var_B0] +
call sub_1051A49  +
mov edx esi +
jmp loc_105220F  +
movzx eax ax +
push eax  +
push offset aMui04hx  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_101BCA7  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
lea edx [ebp+var_B0] +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jnz loc_10522E8  +
lea eax [ebp+var_15C] +
push eax  +
push [ebp+var_424]  +
xor edi edi +
lea esi [ebp+var_B0] +
call sub_1051A49  +
test eax eax +
jz loc_10521FC  +
push 2  +
lea eax [ebp+var_15C] +
push eax  +
call sub_10523F2  +
movzx eax ax +
test ax ax +
jz loc_10521FC  +
movzx eax ax +
push eax  +
push offset aMui04hx  +
mov eax esi +
push 55h  +
push eax  +
call sub_101BCA7  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
add esp 10h +
push dword ptr [ebp+var_41C]  +
mov edx esi +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jnz loc_10522E8  +
mov eax 409h +
cmp ax word ptr [ebp+var_424] +
jz loc_1052230  +
mov edx offset aMui0409 +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jnz loc_10522E8  +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
xor edx edx +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jnz loc_10522E8  +
jmp loc_10522E4  +
test byte ptr dword_10599A0 7 +
jz loc_1052280  +
test byte ptr [ebp+arg_4] 8 +
jz loc_10522AB  +
lea eax [ebp+var_15C] +
push eax  +
push edi  +
xor edi edi +
lea esi [ebp+var_B0] +
call sub_1051A49  +
test eax eax +
jnz loc_10522C5  +
test byte ptr [ebp+arg_4] 10h +
jz loc_10522F8  +
push dword ptr [ebp+wLanguage]  +
push [ebp+hModule]  +
call sub_10515F1  +
test eax eax +
jnz loc_10522F8  +
push [ebp+hModule]  +
call ds:FreeLibrary  +
xor eax eax +
jmp loc_1052376  +
movzx eax di +
push eax  +
push offset aMui04hx  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_101BCA7  +
add esp 10h +
push dword ptr [ebp+var_41C]  +
mov eax [ebp+FilePart] +
mov ecx [ebp+hModule] +
lea edx [ebp+var_B0] +
call sub_1051B85  +
mov ebx eax +
test ebx ebx +
jz loc_1052280  +
push [ebp+hModule]  +
call ds:FreeLibrary  +
mov eax ebx +
jmp loc_1052376  +
test byte ptr [ebp+hModule] 1 +
jz loc_1052370  +
push [ebp+hModule]  +
call ds:FreeLibrary  +
call sub_1051726  +
test al 38h +
jz loc_105234D  +
push [ebp+FilePart]  +
lea eax [ebp+LibFileName] +
push dword ptr [ebp+var_41C]  +
push offset aSS_2  +
push 104h  +
push eax  +
call sub_101BCA7  +
add esp 14h +
push 0  +
push 1  +
lea eax [ebp+LibFileName] +
push eax  +
call sub_1051699  +
jmp loc_105236A  +
call sub_1051726  +
push 0  +
and eax 26h +
pop eax  +
setnz al  +
push eax  +
push 0  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryExW  +
mov [ebp+hModule] eax +
mov eax [ebp+hModule] +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_101CA75  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
movzx eax word ptr [eax] +
movzx ecx word ptr [ecx] +
cmp cx ax +
jnz loc_10523A6  +
xor eax eax +
pop ebp  +
retn   +
sbb eax eax +
and eax 2 +
dec eax  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
push [ebp+arg_0]  +
call _wcsicmp  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 68h +
jnz loc_10523E7  +
cmp word ptr [eax] 7Fh +
jz loc_10523E7  +
xor eax eax +
inc eax  +
jmp loc_10523E9  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1052447  +
test [ebp+arg_4] 0FFFFFFFDh +
jnz loc_1052447  +
push offset sub_10523B3  +
push 8  +
push 163h  +
push offset off_101AD58  +
push [ebp+arg_0]  +
call bsearch  +
add esp 14h +
test eax eax +
jz loc_1052447  +
mov ecx [eax+4] +
imul ecx ecx +
add ecx offset dword_1019CA8 +
test byte ptr [ebp+arg_4] 2 +
jnz loc_1052442  +
push ecx  +
call sub_10523CE  +
test eax eax +
jnz loc_1052447  +
mov ax [ecx] +
jmp loc_1052451  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
mov edx 80070057h +
test ecx ecx +
jz loc_1052475  +
cmp ecx 7FFFFFFFh +
jbe loc_1052477  +
mov eax edx +
test eax eax +
jl loc_10524D4  +
push edi  +
mov edi [ebp+arg_C] +
cmp edi 7FFFFFFEh +
jbe loc_1052493  +
mov eax edx +
mov edx [ebp+arg_0] +
xor ecx ecx +
mov [edx] cx +
jmp loc_10524D3  +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
test ecx ecx +
jz loc_10524C3  +
mov edx [ebp+arg_8] +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_10524BF  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_10524BF  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_10524A7  +
test esi esi +
jnz loc_10524CA  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
pop esi  +
mov eax ebx +
pop ebx  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
push esi  +
push edi  +
jl loc_105256E  +
cmp [ebp+arg_4] 0 +
jnz loc_10524FA  +
cmp [ebp+arg_8] 0 +
jnz loc_105256E  +
test [ebp+arg_C] 0FFFFFFFDh +
jnz loc_105256E  +
push offset sub_105238C  +
push 0Ch  +
push 164h  +
lea eax [ebp+arg_0] +
push offset dword_1019CA8  +
push eax  +
call bsearch  +
mov ecx eax +
add esp 14h +
test ecx ecx +
jz loc_105256E  +
test byte ptr [ebp+arg_C] 2 +
jnz loc_1052536  +
push ecx  +
call sub_10523CE  +
test eax eax +
jnz loc_105256E  +
mov edi [ecx+4] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_105253E  +
sub eax edx +
sar eax 1 +
cmp [ebp+arg_4] 0 +
lea esi [eax+1] +
jz loc_105256A  +
push esi  +
push edi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_105245A  +
test eax eax +
jge loc_105256A  +
push 7Ah  +
jmp loc_1052570  +
mov eax esi +
jmp loc_1052578  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
cmp [ebp+arg_0] edi +
jz loc_1052631  +
cmp [ebp+arg_8] edi +
jle loc_10525A6  +
cmp [ebp+arg_4] edi +
jz loc_1052631  +
cmp [ebp+arg_8] edi +
jl loc_1052631  +
test [ebp+arg_C] 0FFFFFFFDh +
jnz loc_1052631  +
push offset sub_10523B3  +
push 8  +
push 163h  +
push offset off_101AD58  +
push [ebp+arg_0]  +
call bsearch  +
add esp 14h +
cmp eax edi +
jz loc_1052631  +
mov ecx [eax+4] +
imul ecx ecx +
mov edx offset dword_1019CA8 +
add ecx edx +
test byte ptr [ebp+arg_C] 2 +
jnz loc_10525F2  +
push ecx  +
call sub_10523CE  +
test eax eax +
jnz loc_1052631  +
mov eax [ecx+8] +
imul eax eax +
add eax edx +
mov eax [eax+4] +
mov ecx eax +
lea edx [ecx+2] +
mov si [ecx] +
inc ecx  +
inc ecx  +
cmp si di +
jnz loc_1052602  +
sub ecx edx +
sar ecx 1 +
lea esi [ecx+1] +
cmp [ebp+arg_4] edi +
jz loc_105262D  +
push esi  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_105245A  +
test eax eax +
jge loc_105262D  +
push 7Ah  +
jmp loc_1052633  +
mov eax esi +
jmp loc_105263B  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
push offset unk_1055008  +
call sub_104C268  +
retn   +
***
push offset unk_1055068  +
call sub_104C268  +
retn   +
***
push offset unk_10550C8  +
call sub_104C268  +
mov dword_10550D8 60h +
retn   +
***
push offset unk_1055128  +
call sub_104C268  +
retn   +
***
push offset unk_1055188  +
call sub_104C268  +
mov dword_1055198 60h +
retn   +
***
push offset unk_10551E8  +
call sub_104C268  +
mov dword_10551F8 60h +
retn   +
***
push offset unk_1055248  +
call sub_104C268  +
mov dword_1055258 60h +
retn   +
***
push offset unk_10552A8  +
call sub_104C268  +
mov dword_10552B8 60h +
retn   +
***
push offset unk_1055308  +
call sub_104C268  +
mov dword_1055318 60h +
retn   +
***
push offset unk_1055368  +
call sub_104C268  +
mov dword_1055378 60h +
retn   +
***
push offset unk_10553C8  +
call sub_104C268  +
retn   +
***
push offset unk_1055428  +
call sub_104C268  +
mov dword_1055438 60h +
retn   +
***
push offset unk_1055488  +
call sub_104C268  +
mov dword_1055498 60h +
retn   +
***
push offset unk_10554E8  +
call sub_104C268  +
mov dword_10554F8 60h +
retn   +
***
push offset unk_1055548  +
call sub_104C268  +
mov dword_1055558 60h +
retn   +
***
push offset unk_10555A8  +
call sub_104C268  +
retn   +
***
push offset unk_1055608  +
call sub_104C268  +
mov dword_1055618 60h +
retn   +
***
push offset unk_1055668  +
call sub_104C268  +
mov dword_1055678 60h +
retn   +
***
push offset unk_10556C8  +
call sub_104C268  +
mov dword_10556D8 60h +
retn   +
***
push offset unk_1055728  +
call sub_104C268  +
mov dword_1055738 60h +
retn   +
***
push offset unk_1055788  +
call sub_104C268  +
retn   +
***
push offset unk_10557E8  +
call sub_104C268  +
mov dword_10557F8 60h +
retn   +
***
push offset unk_1055848  +
call sub_104C268  +
mov dword_1055858 60h +
retn   +
***
push offset unk_10558A8  +
call sub_104C268  +
mov dword_10558B8 60h +
retn   +
***
retf 4400h  +
***
