call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
lea ecx [esi+24h] +
call ??0CHString@@QAE@XZ  +
xor edi edi +
mov [ebp-4] edi +
lea ecx [esi+28h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+2Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+30h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+5Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+64h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 5 +
lea ecx [esi+68h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 6 +
lea ecx [esi+74h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 7 +
lea ecx [esi+78h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 8 +
mov [esi] edi +
mov [esi+8] edi +
mov [esi+4] edi +
mov [esi+0Ch] edi +
mov [esi+10h] edi +
mov [esi+14h] edi +
mov [esi+18h] edi +
mov [esi+1Ch] edi +
mov [esi+20h] edi +
mov [esi+34h] edi +
mov [esi+3Ch] edi +
mov [esi+40h] edi +
mov [esi+48h] edi +
mov [esi+44h] edi +
mov [esi+4Ch] edi +
mov [esi+50h] edi +
mov [esi+54h] edi +
mov [esi+58h] edi +
mov [esi+60h] edi +
mov [esi+6Ch] edi +
mov [esi+70h] edi +
mov [esi+80h] edi +
mov [esi+84h] edi +
mov [esi+88h] edi +
mov [esi+8Ch] edi +
mov [esi+90h] edi +
mov [esi+7Ch] edi +
mov [esi+94h] edi +
mov [esi+98h] edi +
mov [esi+0A0h] edi +
mov [esi+9Ch] edi +
mov [esi+0A4h] edi +
mov [esi+0A8h] edi +
mov [esi+0ACh] edi +
mov [esi+0B0h] edi +
mov [esi+0B4h] edi +
mov [esi+0B8h] edi +
mov [esi+0BCh] edi +
mov [esi+0C0h] edi +
mov dword ptr [esi+0C4h] 1 +
mov [esi+38h] edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax esi +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_10020F9  +
mov al 1 +
pop ebp  +
retn 4  +
mov eax [ecx+0A4h] +
test eax eax +
jnz loc_1002107  +
xor al al +
jmp loc_10020F5  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jnz loc_1002120  +
mov al 1 +
pop ebp  +
retn 4  +
mov eax [ecx+0ACh] +
test eax eax +
jnz loc_100212E  +
xor al al +
jmp loc_100211C  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100214E  +
mov eax [ecx+0A8h] +
test eax eax +
jz loc_100214E  +
pop ebp  +
jmp eax  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jz loc_1002171  +
mov eax [ecx+0BCh] +
test eax eax +
jz loc_1002171  +
pop ebp  +
jmp eax  +
xor al al +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_100218D  +
mov al 1 +
pop ebp  +
retn 0Ch  +
mov eax [ecx+0B0h] +
test eax eax +
jnz loc_100219B  +
xor al al +
jmp loc_1002189  +
pop ebp  +
jmp eax  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
jz loc_10021C1  +
cmp [ebp+arg_C] 0 +
jz loc_10021C1  +
mov eax [ecx+0B4h] +
test eax eax +
jz loc_10021C1  +
pop ebp  +
jmp eax  +
xor al al +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
jz loc_10021E4  +
mov eax [ecx+0B8h] +
test eax eax +
jz loc_10021E4  +
pop ebp  +
jmp eax  +
xor al al +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [ebp-4] 8 +
lea edi [esi+6Ch] +
xor ebx ebx +
cmp [edi] ebx +
jz loc_1002218  +
push edi  +
call sub_100B823  +
mov [edi] ebx +
lea edi [esi+20h] +
cmp [edi] ebx +
jz loc_1002227  +
push edi  +
call sub_100B823  +
mov [edi] ebx +
lea edi [esi+50h] +
cmp [edi] ebx +
jz loc_1002236  +
push edi  +
call sub_100B823  +
mov [edi] ebx +
lea edi [esi+54h] +
cmp [edi] ebx +
jz loc_1002245  +
push edi  +
call sub_100B823  +
mov [edi] ebx +
lea edi [esi+4Ch] +
cmp [edi] ebx +
jz loc_1002254  +
push edi  +
call sub_1009FA7  +
mov [edi] ebx +
lea edi [esi+58h] +
cmp [edi] ebx +
jz loc_1002263  +
push edi  +
call sub_1009FA7  +
mov [edi] ebx +
mov eax [esi] +
cmp eax ebx +
jz loc_1002271  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] ebx +
mov eax [esi+4] +
cmp eax ebx +
jz loc_1002281  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+4] ebx +
mov eax [esi+8] +
cmp eax ebx +
jz loc_1002291  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+8] ebx +
lea eax [esi+0Ch] +
push eax  +
call sub_100671F  +
cmp dword ptr [esi+7Ch] 1 +
jnz loc_10022A8  +
push dword ptr [esi+78h]  +
call sub_1009429  +
lea eax [esi+98h] +
push eax  +
call sub_1009FA7  +
lea eax [esi+0A0h] +
push eax  +
call sub_1009FA7  +
mov ecx [esi+80h] +
cmp ecx ebx +
jnz loc_10022E7  +
lea edi [esi+8Ch] +
mov eax [edi] +
cmp eax ebx +
jz loc_10022E7  +
push dword ptr [esi+90h]  +
mov ecx esi +
push eax  +
push ebx  +
call sub_100217C  +
jmp loc_1002300  +
cmp ecx 1 +
jnz loc_1002302  +
lea edi [esi+8Ch] +
mov eax [edi] +
cmp eax ebx +
jz loc_1002302  +
push eax  +
mov ecx esi +
call sub_10020E8  +
mov [edi] ebx +
mov eax [esi+84h] +
cmp eax ebx +
jz loc_1002314  +
push eax  +
mov ecx esi +
call sub_100210F  +
lea edi [esi+88h] +
mov eax [edi] +
cmp eax ebx +
jz loc_100234D  +
push eax  +
call ds:FreeLibrary  +
mov [edi] ebx +
mov [esi+0A4h] ebx +
mov [esi+0A8h] ebx +
mov [esi+0ACh] ebx +
mov [esi+0B0h] ebx +
mov [esi+0B4h] ebx +
mov [esi+0BCh] ebx +
call ds:CoUninitialize  +
mov byte ptr [ebp-4] 7 +
lea ecx [esi+78h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 6 +
lea ecx [esi+74h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 5 +
lea ecx [esi+68h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 4 +
lea ecx [esi+64h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
lea ecx [esi+5Ch] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [esi+30h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [esi+2Ch] +
call ??1CHString@@QAE@XZ  +
mov [ebp-4] bl +
lea ecx [esi+28h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [esi+24h] +
call ??1CHString@@QAE@XZ  +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
xor ebx ebx +
push 8  +
mov [ebp+hObject] ebx +
pop ecx  +
lea eax [ebp+Luid] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10023DD  +
push 10h  +
pop ecx  +
lea eax [ebp+NewState] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10023E9  +
lea eax [ebp+hObject] +
push eax  +
push 28h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_100240F  +
call sub_10097DB  +
xor eax eax +
jmp loc_1002476  +
lea eax [ebp+Luid] +
push eax  +
push offset Name  +
push ebx  +
call ds:LookupPrivilegeValueW  +
test eax eax +
jnz loc_1002433  +
call sub_10097DB  +
push [ebp+hObject]  +
call ds:CloseHandle  +
jmp loc_100240B  +
mov eax [ebp+Luid.LowPart] +
push esi  +
push ebx  +
mov [ebp+NewState.Privileges.Luid.LowPart] eax +
mov eax [ebp+Luid.HighPart] +
push ebx  +
push 10h  +
mov [ebp+NewState.Privileges.Luid.HighPart] eax +
lea eax [ebp+NewState] +
push eax  +
push ebx  +
push [ebp+hObject]  +
xor esi esi +
inc esi  +
mov [ebp+NewState.PrivilegeCount] esi +
mov [ebp+NewState.Privileges.Attributes] 2 +
call ds:AdjustTokenPrivileges  +
test eax eax +
jnz loc_100246A  +
call sub_10097DB  +
xor esi esi +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call __EH_prolog3_catch  +
mov esi ecx +
lea ecx [ebp-18h] +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
mov [ebp-1Ch] ebx +
push 8007000Eh  +
call ds:SetLastError  +
call sub_10097DB  +
cmp [esi+20h] ebx +
jnz loc_10024C1  +
call sub_100B7AE  +
mov [esi+20h] eax +
cmp eax ebx +
jz loc_1002917  +
cmp [esi+50h] ebx +
jnz loc_10024D6  +
call sub_100B7AE  +
mov [esi+50h] eax +
cmp eax ebx +
jz loc_1002917  +
cmp [esi+4Ch] ebx +
jnz loc_10024F7  +
mov edi 1EF0h +
push edi  +
call sub_1009C0B  +
mov [esi+4Ch] eax +
cmp eax ebx +
jz loc_1002917  +
mov [eax] bl +
inc eax  +
dec edi  +
jnz loc_10024F1  +
cmp [esi+58h] ebx +
jnz loc_1002518  +
mov edi 3574h +
push edi  +
call sub_1009C0B  +
mov [esi+58h] eax +
cmp eax ebx +
jz loc_1002917  +
mov [eax] bl +
inc eax  +
dec edi  +
jnz loc_1002512  +
cmp [esi+54h] ebx +
jnz loc_100252D  +
call sub_100B7AE  +
mov [esi+54h] eax +
cmp eax ebx +
jz loc_1002917  +
cmp [esi+6Ch] ebx +
jnz loc_1002542  +
call sub_100B7AE  +
mov [esi+6Ch] eax +
cmp eax ebx +
jz loc_1002917  +
push esi  +
call sub_1007441  +
test eax eax +
jz loc_1002917  +
mov byte ptr [ebp-4] 1 +
push ebx  +
push ebx  +
push 1Eh  +
mov ebx 400h +
push ebx  +
mov edi ds:GetLocaleInfoW +
call edi  +
mov [ebp-1Ch] eax +
lea ecx [esi+64h] +
test eax eax +
jnz loc_10025A7  +
push 2  +
call ?GetBufferSetLength@CHString@@QAEPAGH@Z  +
mov [ebp-20h] eax +
mov dword ptr [ebp-2Ch] 4 +
mov [ebp-28h] eax +
cmp dword ptr [ebp-2Ch] 0 +
jz loc_1002598  +
mov ecx [ebp-28h] +
mov byte ptr [ecx] 0 +
inc dword ptr [ebp-28h]  +
dec dword ptr [ebp-2Ch]  +
jmp loc_1002584  +
push 2  +
push offset asc_100145C  +
push eax  +
call sub_100A37C  +
jmp loc_10025ED  +
add eax 2 +
push eax  +
call ?GetBufferSetLength@CHString@@QAEPAGH@Z  +
mov ecx eax +
mov [ebp-20h] ecx +
mov eax [ebp-1Ch] +
add eax 2 +
add eax eax +
mov [ebp-34h] eax +
mov [ebp-30h] ecx +
cmp dword ptr [ebp-34h] 0 +
jz loc_10025D7  +
mov eax [ebp-30h] +
mov byte ptr [eax] 0 +
inc dword ptr [ebp-30h]  +
dec dword ptr [ebp-34h]  +
jmp loc_10025C3  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-20h]  +
push 1Eh  +
push ebx  +
call edi  +
mov [ebp-1Ch] eax +
test eax eax +
jz loc_1002917  +
push 0  +
push 0  +
push 10h  +
push ebx  +
call edi  +
mov [ebp-1Ch] eax +
test eax eax +
jz loc_1002917  +
add eax 2 +
push eax  +
lea ecx [ebp-18h] +
call ?GetBufferSetLength@CHString@@QAEPAGH@Z  +
mov ecx eax +
mov [ebp-20h] ecx +
mov eax [ebp-1Ch] +
add eax 2 +
add eax eax +
mov [ebp-3Ch] eax +
mov [ebp-38h] ecx +
cmp dword ptr [ebp-3Ch] 0 +
jz loc_1002634  +
mov eax [ebp-38h] +
mov byte ptr [eax] 0 +
inc dword ptr [ebp-38h]  +
dec dword ptr [ebp-3Ch]  +
jmp loc_1002620  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-20h]  +
push 10h  +
push ebx  +
call edi  +
mov [ebp-1Ch] eax +
test eax eax +
jz loc_1002917  +
and dword ptr [ebp-1Ch] 0 +
and dword ptr [esi+60h] 0 +
lea ecx [ebp-18h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
mov eax [eax+4] +
mov [ebp-50h] eax +
cmp [ebp-1Ch] eax +
jge loc_10026EB  +
push 1  +
push dword ptr [ebp-1Ch]  +
lea eax [ebp-48h] +
push eax  +
lea ecx [ebp-18h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov [ebp-54h] eax +
mov byte ptr [ebp-4] 2 +
mov eax [eax] +
mov [ebp-58h] eax +
push 0Ah  +
push eax  +
call sub_100AFF8  +
test eax eax +
setnz byte ptr [ebp-11h]  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-48h] +
call ??1CHString@@QAE@XZ  +
cmp byte ptr [ebp-11h] 0 +
jz loc_10026E2  +
push 1  +
push dword ptr [ebp-1Ch]  +
lea eax [ebp-4Ch] +
push eax  +
lea ecx [ebp-18h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov [ebp-5Ch] eax +
mov byte ptr [ebp-4] 3 +
mov eax [eax] +
mov [ebp-60h] eax +
push 0Ah  +
push eax  +
call sub_100AFF8  +
mov ecx [esi+60h] +
imul ecx ecx +
add eax ecx +
mov [esi+60h] eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-4Ch] +
call ??1CHString@@QAE@XZ  +
add dword ptr [ebp-1Ch] 2 +
jmp loc_1002652  +
push 0  +
push 0  +
push 0Fh  +
push ebx  +
call edi  +
mov [ebp-1Ch] eax +
test eax eax +
jz loc_1002917  +
add eax 2 +
push eax  +
lea ecx [esi+68h] +
call ?GetBufferSetLength@CHString@@QAEPAGH@Z  +
mov ecx eax +
mov [ebp-20h] ecx +
mov eax [ebp-1Ch] +
add eax 2 +
add eax eax +
mov [ebp-44h] eax +
mov [ebp-40h] ecx +
cmp dword ptr [ebp-44h] 0 +
jz loc_1002732  +
mov eax [ebp-40h] +
mov byte ptr [eax] 0 +
inc dword ptr [ebp-40h]  +
dec dword ptr [ebp-44h]  +
jmp loc_100271E  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-20h]  +
push 0Fh  +
push ebx  +
call edi  +
mov [ebp-1Ch] eax +
xor ebx ebx +
cmp eax ebx +
jz loc_1002917  +
push 0FFFFFFFFh  +
lea ecx [ebp-18h] +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
push 0FFFFFFFFh  +
lea ecx [esi+64h] +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
push 0FFFFFFFFh  +
lea ecx [esi+68h] +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
mov [ebp-4] ebx +
mov [ebp-24h] ebx +
push ebx  +
push offset String  +
call sub_1009A0A  +
mov edi eax +
add edi 10Ah +
lea eax [edi+edi] +
push eax  +
call sub_1009C0B  +
mov [ebp-24h] eax +
cmp eax ebx +
jz loc_1002902  +
push 105h  +
push eax  +
call ds:GetSystemDirectoryW  +
push edi  +
push offset word_1001360  +
push dword ptr [ebp-24h]  +
call sub_100A3BF  +
push edi  +
push offset String  +
push dword ptr [ebp-24h]  +
call sub_100A3BF  +
push dword ptr [ebp-24h]  +
call ds:LoadLibraryW  +
mov [esi+88h] eax +
lea eax [ebp-24h] +
push eax  +
call sub_1009FA7  +
mov eax [esi+88h] +
cmp eax ebx +
jz loc_10028D9  +
push offset ProcName  +
push eax  +
mov edi ds:GetProcAddress +
call edi  +
mov [esi+0A4h] eax +
push offset aWinstationclos  +
push dword ptr [esi+88h]  +
call edi  +
mov [esi+0ACh] eax +
push offset aWinstationopen  +
push dword ptr [esi+88h]  +
call edi  +
mov [esi+0A8h] eax +
push offset aWinstationfr_0  +
push dword ptr [esi+88h]  +
call edi  +
mov [esi+0B0h] eax +
push offset aWinstationgeta  +
push dword ptr [esi+88h]  +
call edi  +
mov [esi+0B4h] eax +
push offset aWinstationname  +
push dword ptr [esi+88h]  +
call edi  +
mov [esi+0B8h] eax +
push offset aWinstationenum  +
push dword ptr [esi+88h]  +
call edi  +
mov [esi+0BCh] eax +
cmp [esi+0A4h] ebx +
jz loc_100289D  +
cmp [esi+0ACh] ebx +
jz loc_100289D  +
cmp [esi+0A8h] ebx +
jz loc_100289D  +
cmp [esi+0B0h] ebx +
jz loc_100289D  +
cmp [esi+0B4h] ebx +
jz loc_100289D  +
cmp eax ebx +
jz loc_100289D  +
cmp [esi+0B8h] ebx +
jnz loc_10028D9  +
push dword ptr [esi+88h]  +
call ds:FreeLibrary  +
mov [esi+88h] ebx +
mov [esi+0A4h] ebx +
mov [esi+0A8h] ebx +
mov [esi+0ACh] ebx +
mov [esi+0B0h] ebx +
mov [esi+0B4h] ebx +
mov [esi+0B8h] ebx +
mov [esi+0BCh] ebx +
mov ecx esi +
call sub_10023C9  +
push ebx  +
call ds:SetLastError  +
push offset dword_1001388  +
call sub_1009774  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_1002925  +
mov [esi+88h] ebx +
jmp loc_10027D5  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1002917 +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 98h +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
push 7Ch  +
mov [ebp+var_90] eax +
lea eax [ebp+var_80] +
push edi  +
push eax  +
mov [ebp+var_94] esi +
mov dword ptr [ebp+String] edi +
call memset  +
add esp 0Ch +
cmp esi edi +
jz loc_1002AE6  +
cmp [ebp+var_90] edi +
jz loc_1002AE6  +
mov [ebp+var_8C] edi +
mov [ebp+var_88] edi +
mov [ebx] edi +
push [ebp+var_8C]  +
push [ebp+var_90]  +
push esi  +
call sub_100A30C  +
mov [ebp+lpString] eax +
cmp eax edi +
jnz loc_10029EA  +
push edi  +
push esi  +
call sub_1009A0A  +
mov ecx [ebp+var_8C] +
cmp ecx eax +
jnb loc_1002AD8  +
push 40h  +
lea eax [esi+ecx*2] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_100A37C  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1009A0A  +
mov esi eax +
jmp loc_1002A48  +
push 80h  +
lea eax [ebp+String] +
push edi  +
push eax  +
call memset  +
add esp 0Ch +
push edi  +
push esi  +
call sub_1009A0A  +
push edi  +
push [ebp+lpString]  +
mov esi eax +
sub esi [ebp+var_8C] +
call sub_1009A0A  +
sub esi eax +
cmp esi 40h +
ja loc_1002AE6  +
mov ecx [ebp+var_8C] +
lea eax [esi+esi] +
push eax  +
mov eax [ebp+var_94] +
lea eax [eax+ecx*2] +
push eax  +
lea eax [ebp+String] +
push eax  +
call memcpy  +
add esp 0Ch +
inc [ebp+var_88]  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_1009A0A  +
test eax eax +
jz loc_1002AE6  +
push edi  +
push 0Ah  +
lea eax [ebp+String] +
push eax  +
call sub_100B1DE  +
test eax eax +
jz loc_1002AE6  +
push 0Ah  +
lea eax [ebp+String] +
push eax  +
call sub_100AFF8  +
cmp [ebp+var_88] 1 +
jbe loc_1002A92  +
cmp eax 32h +
ja loc_1002AE6  +
mov ecx [ebx] +
add ecx eax +
cmp [ebp+var_88] 3 +
push edi  +
push [ebp+var_90]  +
sbb eax eax +
and eax 3Bh +
inc eax  +
imul ecx eax +
mov [ebx] ecx +
call sub_1009A0A  +
add eax esi +
add [ebp+var_8C] eax +
cmp [ebp+lpString] edi +
jz loc_1002AD8  +
cmp [ebp+var_88] 3 +
jnb loc_1002AE6  +
mov esi [ebp+var_94] +
jmp loc_1002996  +
cmp [ebp+var_88] 3 +
jnz loc_1002AE6  +
xor eax eax +
inc eax  +
jmp loc_1002AE8  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008775  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and dword ptr [ebp-8] 0 +
and dword ptr [ebp-4] 0 +
cmp dword ptr [ebp+18h] 0 +
push esi  +
jnz loc_1002B56  +
mov esi [ebp+10h] +
test esi esi +
jz loc_1002B3F  +
push 0  +
push esi  +
call sub_1009A0A  +
cmp eax 1 +
jbe loc_1002B3F  +
movzx eax word ptr [esi] +
push 2Dh  +
pop ecx  +
cmp cx ax +
jz loc_1002B3B  +
push 2Bh  +
pop ecx  +
cmp cx ax +
jnz loc_1002B3F  +
xor eax eax +
jmp loc_1002B9D  +
lea eax [ebp-4] +
push eax  +
push offset asc_100145C  +
push esi  +
call sub_1002930  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1002B9D  +
lea eax [ebp-4] +
push eax  +
push offset asc_100145C  +
push dword ptr [ebp+10h]  +
call sub_1002930  +
push 8  +
push dword ptr [ebp+18h]  +
call sub_100C033  +
test eax eax +
jz loc_1002B3B  +
lea ecx [ebp-8] +
push ecx  +
push dword ptr [ebp+14h]  +
push eax  +
call sub_1002930  +
mov eax [ebp-8] +
cmp eax [ebp-4] +
jnz loc_1002B8F  +
push 2  +
pop eax  +
jmp loc_1002B9D  +
jnb loc_1002B95  +
push 4  +
jmp loc_1002B8C  +
***
cmp [ebp-4] eax +
sbb eax eax +
and eax 8 +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
cmp [ebp+8] edi +
jz loc_1002CAF  +
cmp [ebp+0Ch] edi +
jz loc_1002CAF  +
mov ebx [ebp+10h] +
cmp ebx edi +
jz loc_1002CAF  +
cmp [ebp+18h] edi +
jnz loc_1002C21  +
push edi  +
push ebx  +
call sub_1009A0A  +
test eax eax +
jz loc_1002CAF  +
push edi  +
push 1  +
push offset Buffer  +
push ebx  +
call sub_1009A2B  +
test eax eax +
jz loc_1002CAF  +
push 2Ah  +
push ebx  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
cmp eax edi +
jz loc_1002C19  +
push edi  +
add eax 2 +
push eax  +
call sub_1009A0A  +
test eax eax +
jnz loc_1002CAF  +
xor eax eax +
inc eax  +
jmp loc_1002CB1  +
mov esi ds:wcschr +
push 2Ah  +
push ebx  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1002C4E  +
push 0  +
push eax  +
call sub_1009A0A  +
push 0  +
push ebx  +
mov [ebp+8] eax +
call sub_1009A0A  +
mov edi eax +
mov eax [ebp+8] +
sub edi eax +
jz loc_1002CAF  +
and dword ptr [ebp+8] 0 +
push 5Ch  +
push ebx  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1002C64  +
mov dword ptr [ebp+8] 1 +
push 7  +
push dword ptr [ebp+18h]  +
call sub_100C033  +
test eax eax +
jz loc_1002CAF  +
cmp dword ptr [ebp+8] 1 +
mov ebx eax +
jnz loc_1002C88  +
push 5Ch  +
push eax  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1002C88  +
lea ebx [eax+2] +
test ebx ebx +
jz loc_1002CAF  +
push edi  +
push 1  +
push dword ptr [ebp+10h]  +
push ebx  +
call sub_1009A2B  +
test eax eax +
jnz loc_1002CA1  +
push 2  +
pop eax  +
jmp loc_1002CB1  +
jge loc_1002CA7  +
push 4  +
jmp loc_1002C9E  +
***
test eax eax +
jle loc_1002CAF  +
push 8  +
jmp loc_1002C9E  +
***
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push esi  +
mov esi ds:__iob_func +
push edi  +
push offset asc_1001464  +
call esi  +
add eax 20h +
push eax  +
call sub_100A402  +
mov edi 3E9h +
push edi  +
call sub_100B775  +
push eax  +
call esi  +
add eax 20h +
push eax  +
call sub_100A402  +
inc edi  +
cmp edi 426h +
jbe loc_1002CDC  +
pop edi  +
pop esi  +
retn   +
***
call __EH_prolog3_catch_GS  +
call sub_10097DB  +
lea eax [ebp-98h] +
push eax  +
call sub_1009FA7  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1002D6E +
retn   +
***
call __EH_prolog3_catch  +
call sub_10097DB  +
and dword ptr [ebp-34h] 0 +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1003B3C +
retn   +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_0 +
call __EH_prolog3_catch  +
cmp dword ptr [ebp+8] 0 +
jz loc_1003BF5  +
mov esi [ebp+18h] +
test esi esi +
jz loc_1003BF5  +
cmp dword ptr [esi] 9 +
jnz loc_1003BF5  +
mov ebx [esi+0Ch] +
test ebx ebx +
jz loc_1003BF5  +
and dword ptr [ebp-4] 0 +
push 5Ch  +
push dword ptr [ebp+8]  +
call ds:wcsrchr  +
pop ecx  +
pop ecx  +
mov edi eax +
test edi edi +
jnz loc_1003BB5  +
mov edi [ebp+8] +
jmp loc_1003BBD  +
inc edi  +
inc edi  +
cmp word ptr [edi] 0 +
jz loc_1003BF5  +
mov eax [esi+8] +
test eax eax +
jz loc_1003BD4  +
push dword ptr [esi+4]  +
push 1  +
push eax  +
push edi  +
call sub_1009A2B  +
test eax eax +
jnz loc_1003BE2  +
push 0  +
push edi  +
push ebx  +
call sub_100BC2D  +
cmp eax 0FFFFFFFFh +
jz loc_1003BF5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
xor eax eax +
inc eax  +
jmp loc_1003BF7  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1003BF5 +
retn   +
***
xor eax eax +
call __EH_epilog3  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
mov edi [esi+4Ch] +
push 0Ah  +
push 97h  +
mov [ebp+var_4] edi +
call sub_100B775  +
push eax  +
call sub_100AFF8  +
and dword ptr [edi+28Ch] 0 +
and dword ptr [edi+290h] 0 +
push 41h  +
mov [edi+200h] eax +
mov dword ptr [edi+204h] 1010h +
mov ebx offset dword_1001388 +
push ebx  +
add edi 208h +
push edi  +
call sub_100A37C  +
mov edi 100h +
push edi  +
push 65h  +
call sub_100B775  +
push eax  +
push [ebp+var_4]  +
call sub_100A37C  +
mov eax [esi+4Ch] +
push 0Ah  +
add eax 0F78h +
push 98h  +
mov [ebp+var_4] eax +
call sub_100B775  +
push eax  +
call sub_100AFF8  +
mov ecx [ebp+var_4] +
and dword ptr [ecx+28Ch] 0 +
and dword ptr [ecx+290h] 0 +
push 41h  +
mov [ecx+200h] eax +
mov dword ptr [ecx+204h] 101010h +
push ebx  +
add ecx 208h +
push ecx  +
call sub_100A37C  +
push edi  +
push 66h  +
call sub_100B775  +
push eax  +
push [ebp+var_4]  +
call sub_100A37C  +
mov eax [esi+4Ch] +
push 0Ah  +
add eax 294h +
push 99h  +
mov [ebp+var_4] eax +
call sub_100B775  +
push eax  +
call sub_100AFF8  +
mov ecx [ebp+var_4] +
and dword ptr [ecx+28Ch] 0 +
and dword ptr [ecx+290h] 0 +
push 41h  +
mov [ecx+200h] eax +
mov dword ptr [ecx+204h] 1010h +
push ebx  +
add ecx 208h +
push ecx  +
call sub_100A37C  +
push edi  +
push 67h  +
call sub_100B775  +
push eax  +
push [ebp+var_4]  +
call sub_100A37C  +
mov eax [esi+4Ch] +
add eax 528h +
push 0Ah  +
mov [ebp+var_4] eax +
push 9Ah  +
call sub_100B775  +
push eax  +
call sub_100AFF8  +
mov ecx [ebp+var_4] +
and dword ptr [ecx+28Ch] 0 +
and dword ptr [ecx+290h] 0 +
push 41h  +
mov [ecx+200h] eax +
mov dword ptr [ecx+204h] 1020h +
push ebx  +
add ecx 208h +
push ecx  +
call sub_100A37C  +
push edi  +
push 68h  +
call sub_100B775  +
push eax  +
push [ebp+var_4]  +
call sub_100A37C  +
mov eax [esi+4Ch] +
push 0Ah  +
add eax 7BCh +
push 0A2h  +
mov [ebp+var_4] eax +
call sub_100B775  +
push eax  +
call sub_100AFF8  +
mov ecx [ebp+var_4] +
and dword ptr [ecx+28Ch] 0 +
and dword ptr [ecx+290h] 0 +
push 41h  +
mov [ecx+200h] eax +
mov dword ptr [ecx+204h] 1010h +
push ebx  +
add ecx 208h +
push ecx  +
call sub_100A37C  +
push edi  +
push 6Fh  +
call sub_100B775  +
push eax  +
push [ebp+var_4]  +
call sub_100A37C  +
mov eax [esi+4Ch] +
and dword ptr [eax+0CDCh] 0 +
and dword ptr [eax+0CE0h] 0 +
add eax 0A50h +
push 41h  +
mov [ebp+var_4] eax +
mov dword ptr [eax+200h] 0Bh +
mov dword ptr [eax+204h] 11010h +
push ebx  +
add eax 208h +
push eax  +
call sub_100A37C  +
push edi  +
push 69h  +
call sub_100B775  +
push eax  +
push [ebp+var_4]  +
call sub_100A37C  +
mov eax [esi+4Ch] +
push 0Ah  +
add eax 1734h +
push 9Dh  +
mov [ebp+var_4] eax +
call sub_100B775  +
push eax  +
call sub_100AFF8  +
mov ecx [ebp+var_4] +
and dword ptr [ecx+28Ch] 0 +
and dword ptr [ecx+290h] 0 +
push 41h  +
mov [ecx+200h] eax +
mov dword ptr [ecx+204h] 101010h +
push ebx  +
add ecx 208h +
push ecx  +
call sub_100A37C  +
push edi  +
push 6Bh  +
call sub_100B775  +
push eax  +
push [ebp+var_4]  +
call sub_100A37C  +
mov eax [esi+4Ch] +
push 0Ah  +
add eax 120Ch +
push 9Ch  +
mov [ebp+var_4] eax +
call sub_100B775  +
push eax  +
call sub_100AFF8  +
mov ecx [ebp+var_4] +
and dword ptr [ecx+28Ch] 0 +
and dword ptr [ecx+290h] 0 +
push 41h  +
mov [ecx+200h] eax +
mov dword ptr [ecx+204h] 1010h +
push ebx  +
add ecx 208h +
push ecx  +
call sub_100A37C  +
push edi  +
push 6Ah  +
call sub_100B775  +
push eax  +
push [ebp+var_4]  +
call sub_100A37C  +
mov eax [esi+4Ch] +
push 0Ah  +
add eax 14A0h +
push 9Eh  +
mov [ebp+var_4] eax +
call sub_100B775  +
push eax  +
call sub_100AFF8  +
mov ecx [ebp+var_4] +
and dword ptr [ecx+28Ch] 0 +
and dword ptr [ecx+290h] 0 +
push 41h  +
mov [ecx+200h] eax +
mov dword ptr [ecx+204h] 11010h +
push ebx  +
add ecx 208h +
push ecx  +
call sub_100A37C  +
push edi  +
push 6Ch  +
call sub_100B775  +
push eax  +
push [ebp+var_4]  +
call sub_100A37C  +
mov eax [esi+4Ch] +
push 0Ah  +
add eax 0CE4h +
push 9Fh  +
mov [ebp+var_4] eax +
call sub_100B775  +
push eax  +
call sub_100AFF8  +
mov ecx [ebp+var_4] +
and dword ptr [ecx+28Ch] 0 +
and dword ptr [ecx+290h] 0 +
push 41h  +
mov [ecx+200h] eax +
mov dword ptr [ecx+204h] 11010h +
push ebx  +
add ecx 208h +
push ecx  +
call sub_100A37C  +
push edi  +
push 6Dh  +
call sub_100B775  +
push eax  +
push [ebp+var_4]  +
call sub_100A37C  +
mov eax [esi+4Ch] +
add eax 19C8h +
push 0Ah  +
mov [ebp+var_4] eax +
push 0A4h  +
call sub_100B775  +
push eax  +
call sub_100AFF8  +
mov ecx [ebp+var_4] +
and dword ptr [ecx+28Ch] 0 +
and dword ptr [ecx+290h] 0 +
push 41h  +
mov [ecx+200h] eax +
mov dword ptr [ecx+204h] 18D010h +
push ebx  +
add ecx 208h +
push ecx  +
call sub_100A37C  +
push edi  +
push 6Eh  +
call sub_100B775  +
push eax  +
push [ebp+var_4]  +
call sub_100A37C  +
mov eax [esi+4Ch] +
push 0Ah  +
add eax 1C5Ch +
push 0A4h  +
mov [ebp+var_4] eax +
call sub_100B775  +
push eax  +
call sub_100AFF8  +
mov ecx [ebp+var_4] +
and dword ptr [ecx+28Ch] 0 +
and dword ptr [ecx+290h] 0 +
push 41h  +
mov [ecx+200h] eax +
mov dword ptr [ecx+204h] 18D010h +
push ebx  +
add ecx 208h +
push ecx  +
call sub_100A37C  +
push edi  +
push 70h  +
call sub_100B775  +
push eax  +
push [ebp+var_4]  +
call sub_100A37C  +
cmp dword ptr [esi+14h] 1 +
mov ecx [esi+4Ch] +
mov eax 0FFFFEFFFh +
jnz loc_100408F  +
and [ecx+498h] eax +
mov ecx [esi+4Ch] +
and [ecx+72Ch] eax +
mov esi [esi+4Ch] +
and [esi+1BCCh] eax +
jmp loc_1004103  +
cmp dword ptr [esi+18h] 1 +
jnz loc_10040AF  +
and [ecx+498h] eax +
mov ecx [esi+4Ch] +
and [ecx+72Ch] eax +
mov esi [esi+4Ch] +
and [esi+1E60h] eax +
jmp loc_1004103  +
and [ecx+498h] eax +
mov ecx [esi+4Ch] +
and [ecx+72Ch] eax +
mov ecx [esi+4Ch] +
and [ecx+9C0h] eax +
mov ecx [esi+4Ch] +
and [ecx+0C54h] eax +
mov ecx [esi+4Ch] +
and [ecx+0EE8h] eax +
cmp dword ptr [esi+10h] 1 +
jnz loc_1004103  +
mov ecx [esi+4Ch] +
and [ecx+117Ch] eax +
mov ecx [esi+4Ch] +
and [ecx+1410h] eax +
mov ecx [esi+4Ch] +
and [ecx+16A4h] eax +
mov esi [esi+4Ch] +
and [esi+1938h] eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
mov esi ecx +
and dword ptr [esi+4] 0 +
mov dword ptr [esi+8] 1 +
call ds:SysAllocString  +
mov [esi] eax +
test eax eax +
jnz loc_100413E  +
cmp [ebp+arg_0] eax +
jz loc_100413E  +
push 8007000Eh  +
call sub_10083BE  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_100415C  +
push eax  +
call ds:SysFreeString  +
mov esi [esi+4] +
test esi esi +
jz loc_100416A  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
pop esi  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push dword ptr [eax+4]  +
call sub_1006F72  +
pop ebp  +
retn 4  +
***
call __EH_prolog3_catch  +
call sub_10097DB  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1004261 +
retn   +
***
call __EH_prolog3_catch  +
mov esi ecx +
lea ecx [ebp-18h] +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov byte ptr [ebp-4] 2 +
push 101h  +
call sub_100B775  +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push dword ptr [esi+70h]  +
push ebx  +
push dword ptr [esi+54h]  +
call sub_100C7ED  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_1004326  +
push 4  +
push edi  +
push dword ptr [esi+54h]  +
call sub_100C253  +
cmp eax ebx +
jz loc_10042FD  +
push eax  +
lea ecx [ebp-18h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push 5  +
push edi  +
push dword ptr [esi+54h]  +
call sub_100C2F9  +
cmp eax ebx +
jnz loc_1004313  +
push 0FBh  +
jmp loc_1004318  +
push 0FCh  +
call sub_100B775  +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push ebx  +
push dword ptr [ebp-14h]  +
push 6  +
push dword ptr [ebp+8]  +
push dword ptr [esi+6Ch]  +
call sub_100C5BB  +
push ebx  +
push dword ptr [ebp-18h]  +
push 9  +
push dword ptr [ebp+8]  +
push dword ptr [esi+6Ch]  +
call sub_100C5BB  +
mov dword ptr [ebp-4] 1 +
jmp loc_1004370  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_10097DB  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_100436E +
retn   +
xor ebx ebx +
mov [ebp-4] bl +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_catch  +
call sub_10097DB  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100447D +
retn   +
***
call __EH_prolog3_catch_GS  +
call sub_10097DB  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1004639 +
retn   +
***
call __EH_prolog3_catch  +
mov esi ecx +
xor ebx ebx +
mov [ebp-14h] ebx +
mov edi [ebp+8] +
cmp edi ebx +
jz loc_1004739  +
push dword ptr [esi+70h]  +
push ebx  +
push 410h  +
call ds:OpenProcess  +
mov [ebp+8] eax +
cmp eax ebx +
jz loc_1004739  +
push 10h  +
pop ecx  +
lea eax [ebp-24h] +
mov [eax] bl +
inc eax  +
dec ecx  +
jnz loc_10046AA  +
mov dword ptr [ebp-24h] 9 +
mov [ebp-20h] ebx +
mov [ebp-18h] edi +
mov [ebp-4] ebx +
add esi 30h +
mov ecx esi +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] ebx +
jz loc_10046D3  +
mov eax [esi] +
jmp loc_10046D5  +
xor eax eax +
mov [ebp-1Ch] eax +
push offset Buffer  +
mov ecx esi +
call ?Find@CHString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_10046F1  +
mov [ebp-20h] eax +
mov esi [esi] +
mov [ebp-1Ch] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-24h] +
push eax  +
push offset loc_1003B74  +
push dword ptr [ebp+8]  +
call ds:EnumerateLoadedModulesW64  +
mov esi eax +
push dword ptr [ebp+8]  +
call ds:CloseHandle  +
mov eax esi +
jmp loc_100473B  +
push dword ptr [ebp+8]  +
call ds:CloseHandle  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_10097DB  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1004739 +
retn   +
xor eax eax +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
and dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_1004775  +
push dword ptr [ebp+8]  +
call sub_100410D  +
jmp loc_1004777  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [esi] eax +
test eax eax +
jnz loc_100478B  +
push 8007000Eh  +
call sub_10083BE  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_100414A  +
test [ebp+arg_0] 1 +
jz loc_10047B4  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
lea eax [esi+8] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jnz loc_10047E3  +
test esi esi +
jz loc_10047E3  +
push 1  +
mov ecx esi +
call sub_100479A  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov ecx [esi] +
test ecx ecx +
jz loc_1004800  +
call sub_10047C0  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
call __EH_prolog3_catch  +
mov esi ecx +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-24h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-1Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-18h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
mov [ebp-20h] ebx +
push ebx  +
mov edi 138Dh +
push edi  +
call sub_100B775  +
push eax  +
push 7  +
push dword ptr [ebp+8]  +
push dword ptr [esi+6Ch]  +
call sub_100C5BB  +
cmp [esi+44h] ebx +
jz loc_1004A9C  +
mov byte ptr [ebp-4] 4 +
push edi  +
call sub_100B775  +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
mov ecx esi +
call sub_1005C2E  +
cmp eax 1 +
jz loc_10049A9  +
push edi  +
call sub_100B775  +
push eax  +
lea eax [ebp-24h] +
push eax  +
push offset a__path  +
push dword ptr [ebp+0Ch]  +
call sub_1007BFC  +
cmp eax ebx +
jz loc_1004A9C  +
lea ecx [ebp-24h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] ebx +
jz loc_1004A9C  +
push offset aGetowner  +
lea ecx [ebp-30h] +
call sub_1004748  +
mov [ebp+0Ch] eax +
mov byte ptr [ebp-4] 5 +
push dword ptr [ebp-24h]  +
lea ecx [ebp-2Ch] +
call sub_1004748  +
mov byte ptr [ebp-4] 6 +
mov ecx [ebp+0Ch] +
cmp [ecx] ebx +
jz loc_1004905  +
mov ecx [ecx] +
mov ecx [ecx] +
mov [ebp+0Ch] ecx +
jmp loc_1004908  +
mov [ebp+0Ch] ebx +
cmp [eax] ebx +
jz loc_1004915  +
mov eax [eax] +
mov eax [eax] +
mov [ebp-28h] eax +
jmp loc_1004918  +
mov [ebp-28h] ebx +
mov eax [esi+4] +
mov ecx [eax] +
push ebx  +
lea edx [ebp-20h] +
push edx  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-28h]  +
push eax  +
call dword ptr [ecx+60h]  +
mov [ebp+0Ch] eax +
mov byte ptr [ebp-4] 5 +
mov ecx [ebp-2Ch] +
cmp ecx ebx +
jz loc_1004945  +
call sub_10047C0  +
mov [ebp-2Ch] ebx +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp-30h] +
cmp ecx ebx +
jz loc_1004958  +
call sub_10047C0  +
mov [ebp-30h] ebx +
cmp [ebp+0Ch] ebx +
jl loc_1004A9C  +
push offset dword_10016DC  +
lea eax [ebp-1Ch] +
push eax  +
push offset aDomain  +
push dword ptr [ebp-20h]  +
call sub_1007BFC  +
push offset dword_10016DC  +
lea eax [ebp-18h] +
push eax  +
push offset aUser  +
push dword ptr [ebp-20h]  +
call sub_1007BFC  +
push edi  +
call sub_100B775  +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
lea ecx [ebp-1Ch] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] ebx +
jz loc_10049C2  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-1Ch]  +
push offset aSS  +
lea eax [ebp-14h] +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 10h +
jmp loc_10049DB  +
lea ecx [ebp-18h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] ebx +
jz loc_10049DB  +
lea eax [ebp-18h] +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov edi offset a@ +
push edi  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_1004A41  +
lea ecx [ebp+0Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 7 +
push edi  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHPBG@Z  +
push eax  +
lea eax [ebp-30h] +
push eax  +
lea ecx [ebp-14h] +
call ?Left@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 8 +
push eax  +
lea ecx [ebp+0Ch] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 7 +
lea ecx [ebp-30h] +
call ??1CHString@@QAE@XZ  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 4 +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
push ebx  +
push dword ptr [ebp-14h]  +
push 7  +
push dword ptr [ebp+8]  +
push dword ptr [esi+6Ch]  +
call sub_100C5BB  +
mov dword ptr [ebp-4] 3 +
jmp loc_1004A8C  +
mov eax [ebp-20h] +
xor ebx ebx +
cmp eax ebx +
jz loc_1004A6D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-20h] ebx +
push 8007000Eh  +
call ds:SetLastError  +
call sub_10097DB  +
mov dword ptr [ebp-4] 3 +
mov eax offset loc_1004A8A +
retn   +
xor ebx ebx +
mov eax [ebp-20h] +
cmp eax ebx +
jz loc_1004A9C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-20h] ebx +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-1Ch] +
call ??1CHString@@QAE@XZ  +
mov [ebp-4] bl +
lea ecx [ebp-24h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_catch  +
mov edi ecx +
mov [ebp-40h] edi +
lea ecx [ebp-1Ch] +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-18h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov [ebp-38h] ebx +
mov [ebp-3Ch] ebx +
mov [ebp-14h] ebx +
cmp [edi+40h] ebx +
jz loc_1004D51  +
call sub_100B7AE  +
mov [ebp-28h] eax +
cmp eax ebx +
jnz loc_1004B35  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_10097DB  +
jmp loc_1004D51  +
mov byte ptr [ebp-4] 2 +
cmp [edi+98h] ebx +
jz loc_1004B76  +
mov [ebp-20h] ebx +
mov eax [ebp-20h] +
cmp eax [edi+94h] +
jnb loc_1004D19  +
imul eax eax +
mov ecx [edi+98h] +
add eax ecx +
mov ecx [edi+70h] +
cmp ecx [eax+24h] +
jnz loc_1004B71  +
push ebx  +
push dword ptr [eax]  +
push dword ptr [ebp-28h]  +
call sub_100BC2D  +
inc dword ptr [ebp-20h]  +
jmp loc_1004B44  +
mov byte ptr [ebp-4] 3 +
mov [ebp-24h] ebx +
cmp dword ptr [ebp-24h] 0Ah +
jnb loc_1004B8F  +
mov eax [ebp-24h] +
mov [ebp+eax*4-70h] ebx +
inc dword ptr [ebp-24h]  +
jmp loc_1004B7D  +
push dword ptr [edi+70h]  +
push offset aSelectNameFrom  +
lea eax [ebp-1Ch] +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 0Ch +
push dword ptr [ebp-1Ch]  +
lea ecx [ebp-34h] +
call sub_1004748  +
mov esi eax +
mov byte ptr [ebp-4] 4 +
push offset aWql  +
lea ecx [ebp-30h] +
call sub_1004748  +
mov byte ptr [ebp-4] 5 +
cmp [esi] ebx +
jz loc_1004BD2  +
mov esi [esi] +
mov ecx [esi] +
mov [ebp-2Ch] ecx +
jmp loc_1004BD5  +
mov [ebp-2Ch] ebx +
cmp [eax] ebx +
jz loc_1004BDF  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_1004BE1  +
xor ecx ecx +
mov eax [edi+4] +
mov edx [eax] +
lea esi [ebp-14h] +
push esi  +
push ebx  +
push 30h  +
push dword ptr [ebp-2Ch]  +
push ecx  +
push eax  +
call dword ptr [edx+50h]  +
mov esi eax +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp-30h] +
cmp ecx ebx +
jz loc_1004C0A  +
call sub_10047C0  +
mov [ebp-30h] ebx +
mov byte ptr [ebp-4] 3 +
mov ecx [ebp-34h] +
cmp ecx ebx +
jz loc_1004C1D  +
call sub_10047C0  +
mov [ebp-34h] ebx +
cmp esi ebx +
jge loc_1004C27  +
push esi  +
call sub_10083BE  +
push dword ptr [edi+0Ch]  +
push dword ptr [ebp-14h]  +
call sub_100688A  +
cmp eax ebx +
jge loc_1004C3C  +
push eax  +
call sub_10083BE  +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-38h] +
push edx  +
lea edx [ebp-70h] +
push edx  +
push 0Ah  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_1004C5D  +
mov [ebp-3Ch] ecx +
jmp loc_1004C68  +
cmp eax 40004h +
jz loc_1004CB8  +
cmp eax ebx +
jl loc_1004CB8  +
xor edi edi +
mov [ebp-44h] edi +
cmp edi [ebp-38h] +
jnb loc_1004CB3  +
lea esi [ebp+edi*4-70h] +
push 138Dh  +
call sub_100B775  +
push eax  +
lea eax [ebp-18h] +
push eax  +
push offset aName  +
push dword ptr [esi]  +
call sub_1007BFC  +
cmp eax 1 +
jnz loc_1004CA2  +
push ebx  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-28h]  +
call sub_100BC2D  +
mov eax [esi] +
cmp eax ebx +
jz loc_1004CB0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] ebx +
inc edi  +
jmp loc_1004C6A  +
cmp [ebp-3Ch] ebx +
jz loc_1004C3C  +
mov dword ptr [ebp-4] 2 +
jmp loc_1004CEA  +
retn   +
xor ebx ebx +
xor edi edi +
cmp edi 0Ah +
jnb loc_1004D06  +
lea esi [ebp+edi*4-70h] +
mov eax [esi] +
cmp eax ebx +
jz loc_1004D03  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] ebx +
inc edi  +
jmp loc_1004CEC  +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_1004D16  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
mov edi [ebp-40h] +
push dword ptr [ebp-28h]  +
push 0Ah  +
push dword ptr [ebp+8]  +
push dword ptr [edi+6Ch]  +
call sub_100C891  +
mov dword ptr [ebp-4] 1 +
jmp loc_1004D51  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_10097DB  +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_1004D4F +
retn   +
xor ebx ebx +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call ??1CHString@@QAE@XZ  +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_catch  +
mov edi ecx +
mov [ebp-44h] edi +
lea ecx [ebp-24h] +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-18h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-20h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-1Ch] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 3 +
mov [ebp-30h] ebx +
mov [ebp-40h] ebx +
mov [ebp-14h] ebx +
cmp [ebp+0Ch] ebx +
jnz loc_1004DE5  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-1Ch] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-20h] +
call ??1CHString@@QAE@XZ  +
mov [ebp-4] bl +
jmp loc_10050ED  +
push 10h  +
push dword ptr [ebp+8]  +
push dword ptr [edi+6Ch]  +
call sub_100C253  +
mov esi eax +
cmp esi ebx +
jz loc_1004DC5  +
mov byte ptr [ebp-4] 4 +
mov [ebp-3Ch] ebx +
push offset Buffer  +
lea ecx [edi+30h] +
call ?Find@CHString@@QBEHPBG@Z  +
cmp eax 0FFFFFFFFh +
jz loc_1004E14  +
mov [ebp-3Ch] eax +
mov [ebp-28h] ebx +
cmp dword ptr [ebp-28h] 5 +
jnb loc_1004E29  +
mov eax [ebp-28h] +
mov [ebp+eax*4-60h] ebx +
inc dword ptr [ebp-28h]  +
jmp loc_1004E17  +
push esi  +
push offset aAssociatorsOfS  +
lea eax [ebp-24h] +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 0Ch +
push dword ptr [ebp-24h]  +
lea ecx [ebp-38h] +
call sub_1004748  +
mov esi eax +
mov byte ptr [ebp-4] 5 +
push offset aWql  +
lea ecx [ebp-34h] +
call sub_1004748  +
mov byte ptr [ebp-4] 6 +
cmp [esi] ebx +
jz loc_1004E6A  +
mov esi [esi] +
mov ecx [esi] +
mov [ebp+8] ecx +
jmp loc_1004E6D  +
mov [ebp+8] ebx +
cmp [eax] ebx +
jz loc_1004E77  +
mov eax [eax] +
mov ecx [eax] +
jmp loc_1004E79  +
xor ecx ecx +
mov eax [edi+4] +
mov edx [eax] +
lea esi [ebp-14h] +
push esi  +
push ebx  +
push 30h  +
push dword ptr [ebp+8]  +
push ecx  +
push eax  +
call dword ptr [edx+50h]  +
mov esi eax +
mov byte ptr [ebp-4] 5 +
mov ecx [ebp-34h] +
cmp ecx ebx +
jz loc_1004EA2  +
call sub_10047C0  +
mov [ebp-34h] ebx +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp-38h] +
cmp ecx ebx +
jz loc_1004EB5  +
call sub_10047C0  +
mov [ebp-38h] ebx +
cmp esi ebx +
jge loc_1004EBF  +
push esi  +
call sub_10083BE  +
push dword ptr [edi+0Ch]  +
push dword ptr [ebp-14h]  +
call sub_100688A  +
cmp eax ebx +
jge loc_1004ED4  +
push eax  +
call sub_10083BE  +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-30h] +
push edx  +
lea edx [ebp-60h] +
push edx  +
push 5  +
push 0FFFFFFFFh  +
push eax  +
call dword ptr [ecx+10h]  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_1004EF5  +
mov [ebp-40h] ecx +
jmp loc_1004F08  +
cmp eax 40004h +
jz loc_1005008  +
cmp eax ebx +
jl loc_1005008  +
xor eax eax +
mov [ebp-2Ch] eax +
cmp eax [ebp-30h] +
jnb loc_1004FFD  +
lea esi [ebp+eax*4-60h] +
mov edi 138Dh +
push edi  +
call sub_100B775  +
push eax  +
lea eax [ebp-20h] +
push eax  +
push offset aFilename  +
push dword ptr [esi]  +
call sub_1007BFC  +
cmp eax ebx +
jz loc_1004FF2  +
push edi  +
call sub_100B775  +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
push offset aExtension  +
push dword ptr [esi]  +
call sub_1007BFC  +
cmp eax ebx +
jz loc_1004FF2  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-20h]  +
push offset aS_S  +
lea eax [ebp-18h] +
push eax  +
call ?Format@CHString@@QAAXPBGZZ  +
add esp 10h +
mov edi [ebp-44h] +
add edi 30h +
mov ecx edi +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] ebx +
jz loc_1004F9A  +
mov edi [edi] +
push dword ptr [ebp-3Ch]  +
push 1  +
push edi  +
push dword ptr [ebp-18h]  +
call sub_1009A2B  +
test eax eax +
jnz loc_1004FE4  +
push ebx  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp+0Ch]  +
call sub_100BC2D  +
cmp eax 0FFFFFFFFh +
jnz loc_1004FE4  +
mov edi [ebp-2Ch] +
mov [ebp-48h] edi +
cmp edi [ebp-30h] +
jnb loc_1004FCB  +
lea esi [ebp+edi*4-60h] +
mov eax [esi] +
cmp eax ebx +
jz loc_1004FC8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] ebx +
inc edi  +
jmp loc_1004FAE  +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_1004DC5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
jmp loc_1004DC5  +
mov eax [esi] +
cmp eax ebx +
jz loc_1004FF2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] ebx +
inc dword ptr [ebp-2Ch]  +
mov eax [ebp-2Ch] +
jmp loc_1004F0D  +
cmp [ebp-40h] ebx +
jz loc_1004ED4  +
jmp loc_1005019  +
push eax  +
call sub_1006F72  +
push 800300FDh  +
call ds:SetLastError  +
mov dword ptr [ebp-4] 3 +
xor edi edi +
lea esi [ebp+edi*4-60h] +
mov eax [esi] +
cmp eax ebx +
jz loc_1005034  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] ebx +
inc edi  +
cmp edi 5 +
jb loc_1005022  +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_100504A  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-1Ch] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-20h] +
call ??1CHString@@QAE@XZ  +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-24h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_1005103  +
retn   +
mov eax [ebp-14h] +
xor ebx ebx +
cmp eax ebx +
jz loc_10050BA  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] ebx +
push 8007000Eh  +
call sub_1006F72  +
mov dword ptr [ebp-4] 3 +
mov eax offset loc_10050D1 +
retn   +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp-1Ch] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp-20h] +
call ??1CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 0 +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-24h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_catch  +
call sub_10097DB  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10051B5 +
retn   +
***
call __EH_prolog3_catch  +
call sub_10097DB  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1005347 +
retn   +
***
call __EH_prolog3_catch  +
mov esi ecx +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
mov byte ptr [ebp-4] 1 +
mov edi 138Dh +
push edi  +
call sub_100B775  +
push eax  +
lea eax [ebp-14h] +
push eax  +
push offset a__path  +
push dword ptr [ebp+0Ch]  +
call sub_1007BFC  +
push 0  +
push dword ptr [ebp-14h]  +
push 10h  +
mov ebx [ebp+8] +
push ebx  +
push dword ptr [esi+6Ch]  +
call sub_100C5BB  +
lea eax [esi+70h] +
push 0  +
push eax  +
push offset aProcessid  +
push dword ptr [ebp+0Ch]  +
call sub_1007CFE  +
push dword ptr [esi+70h]  +
push 2  +
push ebx  +
push dword ptr [esi+6Ch]  +
call sub_100C5F8  +
push edi  +
call sub_100B775  +
push eax  +
lea eax [ebp-14h] +
push eax  +
push offset aCsname  +
push dword ptr [ebp+0Ch]  +
call sub_1007BFC  +
push 0  +
push dword ptr [ebp-14h]  +
push 0  +
push ebx  +
push dword ptr [esi+6Ch]  +
call sub_100C5BB  +
push edi  +
call sub_100B775  +
push eax  +
lea edi [esi+74h] +
push edi  +
push offset aCaption  +
push dword ptr [ebp+0Ch]  +
call sub_1007BFC  +
mov edi [edi] +
push 0  +
push edi  +
push 1  +
push ebx  +
push dword ptr [esi+6Ch]  +
call sub_100C5BB  +
mov edi [ebp+0Ch] +
push edi  +
push ebx  +
mov ecx esi +
call sub_100418A  +
push edi  +
push ebx  +
mov ecx esi +
call sub_1004394  +
push edi  +
push ebx  +
mov ecx esi +
call sub_10044B0  +
push edi  +
push ebx  +
mov ecx esi +
call sub_1004811  +
push ebx  +
mov ecx esi +
call sub_1004294  +
push ebx  +
mov ecx esi +
call sub_1004AD8  +
push ebx  +
mov ecx esi +
call sub_1005312  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_1005508  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_10097DB  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_10054FA +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_catch  +
call sub_10097DB  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100564E +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
xor esi esi +
push edi  +
cmp [ebp+lpValueName] esi +
jz loc_100575D  +
mov ebx [ebp+dwBytes] +
cmp ebx esi +
jz loc_100575D  +
cmp [ebx] esi +
jnz loc_100575D  +
mov eax 8000h +
push eax  +
mov [ebp+dwBytes] eax +
call sub_1009C0B  +
mov [ebx] eax +
cmp eax esi +
jnz loc_1005766  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_10097DB  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
lea ecx [ebp+dwBytes] +
push ecx  +
push eax  +
push esi  +
push esi  +
push [ebp+lpValueName]  +
mov esi ds:RegQueryValueExW +
push [ebp+hKey]  +
call esi  +
mov edi 0EAh +
jmp loc_10057B1  +
add [ebp+dwBytes] 2000h +
push ebx  +
call sub_1009FA7  +
push [ebp+dwBytes]  +
and dword ptr [ebx] 0 +
call sub_1009C0B  +
mov [ebx] eax +
test eax eax +
jz loc_100574D  +
lea ecx [ebp+dwBytes] +
push ecx  +
push eax  +
push 0  +
push 0  +
push [ebp+lpValueName]  +
push [ebp+hKey]  +
call esi  +
mov [ebp+dwErrCode] eax +
cmp eax edi +
jz loc_1005782  +
xor esi esi +
xor edi edi +
inc esi  +
cmp eax edi +
jz loc_10057DD  +
cmp [ebx] edi +
jz loc_10057CD  +
push ebx  +
call sub_1009FA7  +
mov [ebx] edi +
push [ebp+dwErrCode]  +
xor esi esi +
call ds:SetLastError  +
call sub_10097DB  +
mov eax esi +
jmp loc_100575F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor esi esi +
xor edi edi +
cmp [ebp+arg_0] esi +
jz loc_1005822  +
cmp [ebp+arg_4] esi +
jz loc_1005822  +
push 0  +
push 0  +
push esi  +
push 0FFFFFFFDh  +
call ds:FindWindowExW  +
mov esi eax +
test esi esi +
jz loc_100581E  +
push [ebp+arg_4]  +
push esi  +
call [ebp+arg_0]  +
mov edi eax +
test edi edi +
jnz loc_10057FE  +
mov eax edi +
jmp loc_1005824  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 210h +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
push 1FCh  +
lea eax [ebp+var_200] +
push ebx  +
push eax  +
mov [ebp+hWnd] esi +
mov [ebp+dwProcessId] ebx +
mov dword ptr [ebp+String] ebx +
call memset  +
add esp 0Ch +
cmp esi ebx +
jz loc_1005992  +
cmp edi ebx +
jz loc_1005992  +
mov ebx [edi+0Ch] +
lea eax [ebp+dwProcessId] +
push eax  +
push esi  +
call ds:GetWindowThreadProcessId  +
test eax eax +
jnz loc_10058A3  +
xor eax eax +
inc eax  +
jmp loc_1005994  +
push 0FFFFFFF0h  +
push esi  +
call ds:GetWindowLongW  +
test eax 10000000h +
jnz loc_10058BF  +
xor eax eax +
inc eax  +
cmp [edi+8] eax +
jz loc_1005994  +
push 4  +
push esi  +
call ds:GetWindow  +
test eax eax +
jnz loc_100589B  +
push [ebp+dwProcessId]  +
push eax  +
push ebx  +
call sub_100C7ED  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_10058EC  +
push 6  +
push ebx  +
call sub_100BDF8  +
mov esi eax +
jmp loc_10058FC  +
push 3  +
push esi  +
push ebx  +
call sub_100C330  +
test eax eax +
jz loc_10058FC  +
or esi 0FFFFFFFFh +
cmp esi 0FFFFFFFFh +
jz loc_100589B  +
push [ebp+hWnd]  +
call ds:IsHungAppWindow  +
push [ebp+hWnd]  +
mov [ebp+var_210] eax +
push 3  +
push esi  +
push ebx  +
call sub_100C66C  +
push [ebp+var_210]  +
push 5  +
push esi  +
push ebx  +
call sub_100C632  +
push [ebp+dwProcessId]  +
push 0  +
push esi  +
push ebx  +
call sub_100C5F8  +
push 0  +
push dword ptr [edi+4]  +
push 1  +
push esi  +
push ebx  +
call sub_100C5BB  +
push 0  +
push dword ptr [edi]  +
push 2  +
push esi  +
push ebx  +
call sub_100C5BB  +
push 100h  +
lea eax [ebp+String] +
push eax  +
push [ebp+hWnd]  +
call ds:GetWindowTextW  +
test eax eax +
jz loc_100589B  +
push 0  +
lea eax [ebp+String] +
push eax  +
push 4  +
push esi  +
push ebx  +
call sub_100C5BB  +
jmp loc_100589B  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008775  +
leave   +
retn 8  +
***
call __EH_prolog3_catch  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1005AA0 +
retn   +
***
call __EH_prolog3_catch  +
cmp dword ptr [ebp-14h] 0 +
jz loc_1005C15  +
push dword ptr [ebp-14h]  +
call ds:RegCloseKey  +
push 8007000Eh  +
call sub_1006F72  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1005B5A +
retn   +
***
call __EH_prolog3_catch  +
mov esi ecx +
xor edi edi +
mov [ebp-1Ch] edi +
mov [ebp-28h] edi +
mov [ebp-14h] edi +
cmp [esi+8Ch] edi +
jz loc_1005DA7  +
mov [ebp-4] edi +
mov eax 80h +
mov [ebp-28h] eax +
mov [ebp-14h] eax +
push eax  +
mov ecx [ebp+0Ch] +
call ?GetBufferSetLength@CHString@@QAEPAGH@Z  +
mov ebx eax +
push dword ptr [ebp-14h]  +
mov ecx [ebp+8] +
call ?GetBufferSetLength@CHString@@QAEPAGH@Z  +
mov [ebp-2Ch] eax +
mov [ebp-18h] edi +
cmp [esi+80h] edi +
jnz loc_1005CAD  +
mov edx [esi+8Ch] +
mov [ebp-24h] edi +
mov eax [ebp-24h] +
cmp eax [esi+90h] +
jnb loc_1005CE8  +
imul eax eax +
add eax edx +
mov ecx [eax] +
mov ecx [ecx+44h] +
cmp ecx [esi+70h] +
jz loc_1005CE2  +
inc dword ptr [ebp-24h]  +
jmp loc_1005C8E  +
mov [ebp-20h] edi +
mov [ebp-20h] edi +
mov ecx [esi+8Ch] +
mov eax ecx +
mov edx [eax+44h] +
cmp edx [esi+70h] +
jz loc_1005CCD  +
mov edx [eax] +
cmp edx edi +
jnz loc_1005D86  +
mov ecx [eax+4] +
shl ecx 6 +
lea eax [ecx+eax+88h] +
cmp dword ptr [eax] 23495452h +
jnz loc_1005CE8  +
mov eax [eax+8] +
mov [ebp-18h] eax +
cmp [ebp-18h] edi +
jnz loc_1005D42  +
cmp [esi+70h] edi +
jnz loc_1005D29  +
mov dword ptr [ebp-1Ch] 1 +
push 0FFh  +
call sub_100B775  +
push eax  +
push dword ptr [ebp-28h]  +
push ebx  +
call wcscpy_s  +
add esp 0Ch +
push 0FEh  +
call sub_100B775  +
push eax  +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-2Ch]  +
call wcscpy_s  +
add esp 0Ch +
push 0FFFFFFFFh  +
mov ecx [ebp+8] +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
push 0FFFFFFFFh  +
mov ecx [ebp+0Ch] +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
mov eax [ebp-1Ch] +
jmp loc_1005DA9  +
xor eax eax +
cmp [esi+0C4h] edi +
jnz loc_1005D4F  +
mov eax [esi+78h] +
lea ecx [ebp-30h] +
push ecx  +
lea ecx [ebp-14h] +
push ecx  +
push dword ptr [ebp-2Ch]  +
lea ecx [ebp-28h] +
push ecx  +
push ebx  +
push dword ptr [ebp-18h]  +
push eax  +
call ds:LookupAccountSidW  +
mov [ebp-1Ch] eax +
push 0FFFFFFFFh  +
mov ecx [ebp+8] +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
push 0FFFFFFFFh  +
mov ecx [ebp+0Ch] +
call ?ReleaseBuffer@CHString@@QAEXH@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
jmp loc_1005D3D  +
add [ebp-20h] edx +
mov eax [ebp-20h] +
add eax ecx +
jmp loc_1005CBB  +
push 8007000Eh  +
call sub_1006F72  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1005DA7 +
retn   +
xor eax eax +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_catch  +
cmp dword ptr [ebp-18h] 0 +
jz loc_1005ED4  +
push dword ptr [ebp-18h]  +
call ds:CloseServiceHandle  +
push 8007000Eh  +
call sub_1006F72  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1005E0C +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp [ebp+lpszDesktop] ebx +
jz loc_1005F32  +
mov edi [ebp+hDesktop] +
cmp edi ebx +
jz loc_1005F32  +
call ds:GetCurrentThreadId  +
push eax  +
call ds:GetThreadDesktop  +
push 2000000h  +
push ebx  +
push ebx  +
push [ebp+lpszDesktop]  +
mov [ebp+hDesktop] eax +
call ds:OpenDesktopW  +
mov esi eax +
mov [ebp+var_4] esi +
cmp esi ebx +
jnz loc_1005F3B  +
call sub_10097DB  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
cmp esi [ebp+hDesktop] +
jz loc_1005F4B  +
push esi  +
call ds:SetThreadDesktop  +
test eax eax +
jz loc_1005F2D  +
mov eax [edi] +
cmp eax ebx +
jz loc_1005F5B  +
push eax  +
call ds:free  +
pop ecx  +
mov [edi] ebx +
push [ebp+lpszDesktop]  +
call ds:_wcsdup  +
pop ecx  +
mov [edi] eax +
cmp eax ebx +
jnz loc_1005F92  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_10097DB  +
cmp esi [ebp+hDesktop] +
jz loc_1005F32  +
push [ebp+hDesktop]  +
call ds:SetThreadDesktop  +
push esi  +
call ds:CloseDesktop  +
jmp loc_1005F32  +
mov ebx ds:EnumWindows +
push edi  +
mov esi offset sub_100582F +
push esi  +
mov dword ptr [edi+8] 1 +
call ebx  +
push edi  +
push esi  +
call sub_10057E9  +
and dword ptr [edi+8] 0 +
push edi  +
push esi  +
call ebx  +
push edi  +
push esi  +
call sub_10057E9  +
mov eax [ebp+hDesktop] +
cmp [ebp+var_4] eax +
jz loc_1005FD6  +
push eax  +
call ds:SetThreadDesktop  +
push [ebp+var_4]  +
call ds:CloseDesktop  +
xor eax eax +
inc eax  +
jmp loc_1005F34  +
***
call __EH_prolog3_catch  +
mov esi ecx +
xor ebx ebx +
mov [esi+7Ch] ebx +
mov [ebp-4] ebx +
cmp [esi+0C4h] ebx +
jnz loc_1006058  +
mov eax [esi+0Ch] +
cmp eax ebx +
jz loc_1006058  +
mov [ebp-18h] ebx +
mov ebx [eax+10h] +
lea edi [esi+28h] +
mov ecx edi +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp dword ptr [eax+4] 0 +
jz loc_1006022  +
mov edi [edi] +
jmp loc_1006025  +
mov edi [ebp-18h] +
mov dword ptr [esi+7Ch] 1 +
mov eax [esi+78h] +
push ebx  +
push edi  +
push eax  +
call sub_10095E0  +
test eax eax +
jz loc_100604A  +
and dword ptr [esi+7Ch] 0 +
cmp eax 4C3h +
jnz loc_1006143  +
test edi edi +
jz loc_1006052  +
test ebx ebx +
jnz loc_1006056  +
and dword ptr [esi+7Ch] 0 +
xor ebx ebx +
mov dword ptr [ebp-14h] 1 +
mov [esi+84h] ebx +
cmp [esi+0C4h] ebx +
jnz loc_1006096  +
lea edi [esi+78h] +
mov ecx edi +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
push dword ptr [eax+4]  +
mov ecx edi +
call ?GetBuffer@CHString@@QAEPAGH@Z  +
push eax  +
mov ecx esi +
call sub_1002136  +
mov [esi+84h] eax +
cmp eax ebx +
jnz loc_1006096  +
mov [ebp-14h] ebx +
cmp dword ptr [esi+44h] 1 +
jnz loc_10060FE  +
cmp dword ptr [ebp-14h] 1 +
jnz loc_10060FE  +
mov [esi+80h] ebx +
lea edi [esi+8Ch] +
push edi  +
lea eax [esi+90h] +
push eax  +
push ebx  +
push dword ptr [esi+84h]  +
mov ecx esi +
call sub_10021A3  +
movzx eax al +
mov [ebp-14h] eax +
cmp eax ebx +
jnz loc_10060FE  +
call ds:GetLastError  +
cmp eax 6D1h +
jnz loc_10060FC  +
push edi  +
push dword ptr [esi+84h]  +
mov ecx esi +
call sub_1002159  +
movzx eax al +
mov [ebp-14h] eax +
cmp eax 1 +
jnz loc_10060FE  +
mov [esi+80h] eax +
jmp loc_10060FE  +
mov [edi] ebx +
cmp dword ptr [esi+40h] 1 +
jnz loc_1006112  +
mov ecx esi +
call sub_1005DB6  +
mov [ebp-14h] eax +
cmp eax ebx +
jz loc_1006143  +
cmp dword ptr [esi+3Ch] 1 +
jnz loc_1006126  +
mov ecx esi +
call sub_1005B09  +
mov [ebp-14h] eax +
cmp eax ebx +
jz loc_1006143  +
or dword ptr [ebp-4] 0FFFFFFFFh +
xor eax eax +
inc eax  +
jmp loc_1006145  +
push 8007000Eh  +
call sub_1006F72  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_1006143 +
retn   +
xor eax eax +
call __EH_epilog3  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpszWinSta] 0 +
push ebx  +
push esi  +
push edi  +
jz loc_1006189  +
mov esi [ebp+hWinSta] +
test esi esi +
jz loc_1006189  +
call ds:GetProcessWindowStation  +
push 2000000h  +
push 0  +
push [ebp+lpszWinSta]  +
mov [ebp+hWinSta] eax +
call ds:OpenWindowStationW  +
mov ebx eax +
test ebx ebx +
jnz loc_1006192  +
call sub_10097DB  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
mov edi ds:SetProcessWindowStation +
cmp ebx [ebp+hWinSta] +
jz loc_10061A4  +
push ebx  +
call edi  +
test eax eax +
jz loc_1006184  +
mov eax [esi+4] +
test eax eax +
jz loc_10061B7  +
push eax  +
call ds:free  +
and dword ptr [esi+4] 0 +
pop ecx  +
push [ebp+lpszWinSta]  +
call ds:_wcsdup  +
pop ecx  +
mov [esi+4] eax +
test eax eax +
jnz loc_10061EB  +
push 8007000Eh  +
call ds:SetLastError  +
call sub_10097DB  +
cmp ebx [ebp+hWinSta] +
jz loc_1006189  +
push [ebp+hWinSta]  +
call edi  +
push ebx  +
call ds:CloseWindowStation  +
jmp loc_1006189  +
push esi  +
push offset sub_1005EED  +
push ebx  +
call ds:EnumDesktopsW  +
cmp ebx [ebp+hWinSta] +
jz loc_1006209  +
push [ebp+hWinSta]  +
call edi  +
push ebx  +
call ds:CloseWindowStation  +
xor eax eax +
inc eax  +
jmp loc_100618B  +
***
call __EH_prolog3_catch  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_100623E +
retn   +
***
call __EH_prolog3  +
lea ecx [ebp-0D4h] +
call sub_1001FA5  +
xor esi esi +
mov [ebp-4] esi +
push esi  +
push esi  +
xor edi edi +
inc edi  +
push edi  +
push esi  +
call ds:HeapSetInformation  +
lea ecx [ebp-0D4h] +
call sub_100247E  +
test eax eax +
jnz loc_100646A  +
call sub_1009748  +
push eax  +
push 1389h  +
call sub_100B775  +
push eax  +
push offset a12  +
push esi  +
push 2  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100B622  +
add esp 18h +
call sub_100A269  +
mov eax hLibModule +
cmp eax esi +
jz loc_1006453  +
push eax  +
call ds:FreeLibrary  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0D4h] +
call sub_10021EF  +
mov eax edi +
call __EH_epilog3  +
retn   +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-0D4h] +
push dword ptr [ebp+8]  +
call sub_1002CFF  +
test eax eax +
jnz loc_10064D4  +
call sub_1009748  +
push eax  +
push 1389h  +
call sub_100B775  +
push eax  +
push offset a12  +
push esi  +
push 2  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_100B622  +
add esp 18h +
call sub_100A269  +
mov eax hLibModule +
cmp eax esi +
jz loc_10064BF  +
push eax  +
call ds:FreeLibrary  +
mov esi edi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-0D4h] +
call sub_10021EF  +
mov eax esi +
jmp loc_1006464  +
lea ecx [ebp-0D4h] +
cmp [ebp-14h] edi +
jnz loc_10064FB  +
call sub_1002CBD  +
call sub_100A269  +
mov eax hLibModule +
cmp eax esi +
jz loc_10064C1  +
push eax  +
call ds:FreeLibrary  +
jmp loc_10064C1  +
call sub_10033D4  +
test eax eax +
jz loc_100647F  +
lea ecx [ebp-0D4h] +
call sub_10059AA  +
test eax eax +
jz loc_100647F  +
lea ecx [ebp-0D4h] +
call sub_1006216  +
test eax eax +
jz loc_100647F  +
lea ecx [ebp-0D4h] +
call sub_1005515  +
test eax eax +
jnz loc_10064E4  +
call ds:GetLastError  +
test eax eax +
jnz loc_100647F  +
push 1F7h  +
call sub_100B775  +
push eax  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100A402  +
jmp loc_10064E4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_8] esi +
mov [ebp+var_C] esi +
mov [ebp+var_4] esi +
cmp edi esi +
jnz loc_1006592  +
mov eax 80041008h +
jmp loc_10065E4  +
mov eax [edi] +
push ebx  +
lea ecx [ebp+var_4] +
push ecx  +
push offset dword_1001C74  +
push edi  +
call dword ptr [eax]  +
mov ebx eax +
cmp ebx esi +
jl loc_10065E1  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
lea edx [ebp+var_C] +
push edx  +
lea edx [ebp+var_8] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov ebx eax +
cmp ebx esi +
jl loc_10065D4  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_8] +
mov [eax] ecx +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_C] +
mov [eax] ecx +
mov eax [ebp+var_4] +
cmp eax esi +
jz loc_10065E1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax ebx +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_8] 0 +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test esi esi +
jz loc_100670E  +
test [ebp+arg_1C] 60h +
mov ebx [ebp+arg_18] +
jz loc_100661D  +
test ebx ebx +
jnz loc_100670E  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
push offset dword_1001C84  +
push esi  +
call dword ptr [eax]  +
test eax eax +
jl loc_1006713  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
mov edi offset dword_1001C74 +
push edi  +
push esi  +
call dword ptr [eax]  +
mov [ebp+arg_0] eax +
test eax eax +
jge loc_100665E  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_1006656  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+arg_0] +
jmp loc_1006713  +
push dword ptr [ebp+arg_1C]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ebx  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
test esi esi +
jge loc_10066A3  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_1006692  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_8] 0 +
mov eax [ebp+var_4] +
test eax eax +
jz loc_100669F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
jmp loc_1006713  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_10066B4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
test ebx ebx +
jz loc_1006709  +
mov eax [ebp+var_8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
test esi esi +
jl loc_10066FF  +
push dword ptr [ebp+arg_1C]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push ebx  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+var_8]  +
push eax  +
call dword ptr [ecx+10h]  +
mov esi eax +
mov eax [ebp+var_4] +
test eax eax +
jz loc_1006709  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+var_4] 0 +
jmp loc_1006709  +
cmp esi 80004002h +
jnz loc_1006709  +
xor esi esi +
mov eax [ebp+var_8] +
jmp loc_1006695  +
mov eax 80041008h +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
xor ebx ebx +
cmp eax ebx +
jz loc_100676D  +
push edi  +
mov edi ds:CoTaskMemFree +
cmp [eax] ebx +
jz loc_1006744  +
push dword ptr [eax]  +
call edi  +
mov eax [esi] +
mov [eax] ebx +
mov eax [esi] +
mov eax [eax+10h] +
cmp eax ebx +
jz loc_1006755  +
push eax  +
call edi  +
mov eax [esi] +
mov [eax+10h] ebx +
mov eax [esi] +
mov eax [eax+8] +
cmp eax ebx +
jz loc_1006766  +
push eax  +
call edi  +
mov eax [esi] +
mov [eax+8] ebx +
push dword ptr [esi]  +
call edi  +
mov [esi] ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_1006796  +
mov eax [ebp+arg_0] +
jb loc_100678D  +
cmp eax 0FFFFFFFFh +
ja loc_1006796  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_10067A1  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp eax ecx +
jb loc_10067C4  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_10067CF  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jge loc_10067E9  +
pop ebp  +
jmp sub_10083BE  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+pvargSrc]  +
mov esi ecx +
push esi  +
call ds:VariantCopy  +
push eax  +
call sub_10067D8  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
test edx edx +
jnz loc_1006824  +
mov edx ecx +
mov eax dword ptr [ebp+vt] +
cmp ecx edx +
jnz loc_1006830  +
cmp ax [ecx] +
jz loc_1006841  +
push eax  +
push 0  +
push edx  +
push ecx  +
call ds:VariantChangeType  +
push eax  +
call sub_10067D8  +
pop ebp  +
retn 8  +
***
push ecx  +
call ds:VariantClear  +
push eax  +
call sub_10067D8  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
lea ecx [eax+7FFBFE00h] +
cmp ecx 0FDFFh +
ja loc_100687F  +
add eax 0FFFFFE00h +
movzx eax ax +
jmp loc_1006881  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
cmp [ebp+arg_0] 0 +
mov [ebp+var_8] 0Ah +
jnz loc_10068A9  +
mov eax 80041008h +
jmp locret_10068D6  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_0]  +
call sub_100656F  +
test eax eax +
jl locret_10068D6  +
push 0  +
push [ebp+arg_4]  +
push 3  +
push 6  +
push 0  +
push [ebp+var_4]  +
push [ebp+var_8]  +
push [ebp+arg_0]  +
call sub_10065EF  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
xor edi edi +
cmp [ebp+arg_C] edi +
jnz loc_10068F9  +
mov eax 80041008h +
jmp loc_1006A16  +
push ebx  +
mov ebx ds:CoTaskMemAlloc +
push esi  +
push 1Ch  +
call ebx  +
mov esi eax +
mov [ebp+var_4] esi +
cmp esi edi +
jz loc_1006A24  +
push 1Ch  +
pop ecx  +
mov byte ptr [eax] 0 +
inc eax  +
dec ecx  +
jnz loc_1006915  +
cmp [ebp+lpString] edi +
jz loc_100694E  +
push edi  +
push [ebp+lpString]  +
call sub_1009A0A  +
mov edi eax +
lea eax [edi+edi+2] +
push eax  +
call ebx  +
mov [esi] eax +
test eax eax +
jz loc_1006A1B  +
mov [esi+4] edi +
inc edi  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_100A37C  +
xor edi edi +
cmp [ebp+arg_8] edi +
jz loc_10069AF  +
push edi  +
push [ebp+arg_8]  +
call sub_1009A0A  +
and [ebp+cb] 0 +
mov edi eax +
lea eax [ebp+cb] +
push eax  +
push 1  +
push edi  +
call sub_10067AA  +
test eax eax +
jl loc_1006A1B  +
mov eax [ebp+cb] +
push 2  +
pop ecx  +
mul  ecx +
lea ecx [ebp+cb] +
push ecx  +
push edx  +
push eax  +
call sub_1006778  +
test eax eax +
jl loc_1006A1B  +
push [ebp+cb]  +
call ebx  +
mov [esi+8] eax +
test eax eax +
jz loc_1006A1B  +
mov [esi+0Ch] edi +
inc edi  +
push edi  +
push [ebp+arg_8]  +
push dword ptr [esi+8]  +
call sub_100A37C  +
xor edi edi +
cmp [ebp+arg_4] edi +
jz loc_1006A06  +
push edi  +
push [ebp+arg_4]  +
call sub_1009A0A  +
and [ebp+var_C] 0 +
mov edi eax +
lea eax [ebp+var_C] +
push eax  +
push 1  +
push edi  +
call sub_10067AA  +
test eax eax +
jl loc_1006A1B  +
mov eax [ebp+var_C] +
push 2  +
pop ecx  +
mul  ecx +
lea ecx [ebp+var_C] +
push ecx  +
push edx  +
push eax  +
call sub_1006778  +
test eax eax +
jl loc_1006A1B  +
push [ebp+var_C]  +
call ebx  +
mov [esi+10h] eax +
test eax eax +
jz loc_1006A1B  +
mov [esi+14h] edi +
inc edi  +
push edi  +
push [ebp+arg_4]  +
push dword ptr [esi+10h]  +
call sub_100A37C  +
mov eax [ebp+arg_C] +
mov dword ptr [esi+18h] 2 +
mov [eax] esi +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 10h  +
lea eax [ebp+var_4] +
push eax  +
call sub_100671F  +
mov eax 80041006h +
jmp loc_1006A14  +
***
mov eax [ecx] +
test eax eax +
jz loc_1006A44  +
mov eax [eax] +
test eax eax +
jz loc_1006A44  +
push eax  +
call ds:SysStringLen  +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx [ebp+len] +
push esi  +
mov esi ecx +
and dword ptr [esi+4] 0 +
push edi  +
mov ecx ebx +
mov dword ptr [esi+8] 1 +
call sub_1006A30  +
mov ecx [ebp+arg_4] +
mov edi eax +
call sub_1006A30  +
lea ecx [ebp+len] +
push ecx  +
push eax  +
push edi  +
mov [ebp+var_4] eax +
call sub_10067AA  +
test eax eax +
jl loc_1006A9F  +
mov eax [ebp+len] +
push 2  +
pop ecx  +
mul  ecx +
lea ecx [ebp+len] +
push ecx  +
push edx  +
push eax  +
call sub_1006778  +
test eax eax +
jge loc_1006AA9  +
push 8007000Eh  +
call sub_10083BE  +
push [ebp+len]  +
push 0  +
call ds:SysAllocStringByteLen  +
mov [esi] eax +
test eax eax +
jnz loc_1006ACB  +
mov eax [ebp+var_4] +
add eax edi +
jz loc_1006B15  +
push 8007000Eh  +
call sub_10083BE  +
mov eax [ebx] +
test eax eax +
jz loc_1006AD5  +
mov eax [eax] +
jmp loc_1006AD7  +
xor eax eax +
test eax eax +
jz loc_1006AEB  +
lea ecx [edi+edi+2] +
push ecx  +
push eax  +
push dword ptr [esi]  +
call memcpy  +
add esp 0Ch +
mov eax [ebp+arg_4] +
mov eax [eax] +
test eax eax +
jz loc_1006AF8  +
mov eax [eax] +
jmp loc_1006AFA  +
xor eax eax +
test eax eax +
jz loc_1006B15  +
mov ecx [ebp+var_4] +
lea ecx [ecx+ecx+2] +
push ecx  +
push eax  +
mov eax [esi] +
lea eax [eax+edi*2] +
push eax  +
call memcpy  +
add esp 0Ch +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
lea esi [edi+0Ch] +
xor ebx ebx +
cmp [esi] ebx +
jnz loc_1006BC8  +
push ebx  +
push ebx  +
push esi  +
push 400h  +
push dword ptr [edi+4]  +
push ebx  +
push 1100h  +
call ds:FormatMessageW  +
mov eax [esi] +
cmp eax ebx +
jz loc_1006B88  +
push eax  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_1006BC8  +
mov ecx [esi] +
lea ecx [ecx+eax*2-2] +
cmp word ptr [ecx] 0Ah +
jnz loc_1006BC8  +
xor edx edx +
mov [ecx] dx +
mov ecx [esi] +
lea eax [ecx+eax*2-4] +
cmp word ptr [eax] 0Dh +
jnz loc_1006BC8  +
xor ecx ecx +
mov [eax] cx +
jmp loc_1006BC8  +
push 40h  +
push ebx  +
call ds:LocalAlloc  +
mov [ebp-4] eax +
mov [esi] eax +
cmp eax ebx +
jz loc_1006BC8  +
mov edi [edi+4] +
push edi  +
call sub_100685F  +
movzx eax ax +
cmp ax bx +
jz loc_1006BB6  +
movzx eax ax +
push eax  +
push offset aIdispatchError  +
jmp loc_1006BBC  +
push edi  +
push offset aUnknownError0x  +
push dword ptr [ebp-4]  +
call ds:wsprintfW  +
add esp 0Ch +
mov eax [esi] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call __EH_prolog3_catch  +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
xor ebx ebx +
mov [ebp-4] ebx +
lea ecx [ebp-18h] +
call ??0CHString@@QAE@XZ  +
mov byte ptr [ebp-4] 1 +
mov [ebp-24h] ebx +
mov [ebp-20h] ebx +
mov byte ptr [ebp-4] 2 +
cmp [ebp+8] ebx +
jnz loc_1006C29  +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov eax 80041008h +
jmp loc_1006D85  +
mov edi [ebp+14h] +
mov eax [edi] +
cmp eax ebx +
jz loc_1006C5B  +
push eax  +
push dword ptr [ebp+8]  +
call sub_100688A  +
mov esi eax +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov eax esi +
jmp loc_1006D85  +
cmp [ebp+0Ch] ebx +
jnz loc_1006C7F  +
cmp [ebp+10h] ebx +
jnz loc_1006C7F  +
push ebx  +
push ebx  +
push 3  +
push 6  +
push ebx  +
push ebx  +
push 0Ah  +
push dword ptr [ebp+8]  +
call sub_10065EF  +
mov [ebp-1Ch] eax +
jmp loc_1006D6B  +
push offset dword_10016DC  +
lea ecx [ebp-18h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push 5Ch  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHG@Z  +
mov esi eax +
lea ecx [ebp-14h] +
cmp esi 0FFFFFFFFh +
jz loc_1006CF7  +
push esi  +
lea eax [ebp+0Ch] +
push eax  +
call ?Left@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 3 +
push eax  +
lea ecx [ebp-18h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
inc esi  +
push esi  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 4 +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 2 +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
jmp loc_1006CFE  +
push 40h  +
call ?Find@CHString@@QBEHG@Z  +
lea ecx [ebp-18h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] ebx +
mov esi [ebp-18h] +
jnz loc_1006D11  +
mov esi [ebp-20h] +
lea ecx [ebp-14h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp [eax+4] ebx +
mov eax [ebp-14h] +
jnz loc_1006D24  +
mov eax [ebp-24h] +
push edi  +
push esi  +
push dword ptr [ebp+10h]  +
push eax  +
call sub_10068DF  +
mov [ebp-1Ch] eax +
cmp eax ebx +
jl loc_1006D6B  +
push ebx  +
push dword ptr [edi]  +
push 3  +
push 6  +
push ebx  +
push ebx  +
push 0Ah  +
push dword ptr [ebp+8]  +
call sub_10065EF  +
mov [ebp-1Ch] eax +
mov dword ptr [ebp-4] 1 +
jmp loc_1006D6B  +
mov dword ptr [ebp-1Ch] 80041006h +
mov dword ptr [ebp-4] 1 +
mov eax offset loc_1006D69 +
retn   +
xor ebx ebx +
mov [ebp-4] bl +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov eax [ebp-1Ch] +
call __EH_epilog3  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
push esi  +
mov esi ecx +
mov [esi] eax +
test eax eax +
jz loc_1006DAF  +
add eax 8 +
push eax  +
call ds:InterlockedIncrement  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi] +
push edi  +
mov edi ecx +
test eax eax +
jz loc_1006DD7  +
add eax 8 +
push eax  +
call ds:InterlockedIncrement  +
mov ecx edi +
call sub_10047ED  +
mov eax [esi] +
mov [edi] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
call sub_10047ED  +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
mov [ebp-4] eax +
cmp ecx eax +
jz loc_1006E20  +
push dword ptr [ebp+8]  +
call sub_100410D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [esi] eax +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
push 0Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor edi edi +
mov [ebp-4] edi +
cmp ecx edi +
jz loc_1006E64  +
push dword ptr [ebp+8]  +
push esi  +
call sub_1006A4C  +
mov edi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_10047ED  +
mov [esi] edi +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-10h] 0 +
push ecx  +
mov ecx [ebp+8] +
call sub_1006D92  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
mov dword ptr [ebp-10h] 1 +
call sub_1006E35  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-10h] 0 +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
call sub_1004748  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+10h]  +
mov ecx [ebp+8] +
mov dword ptr [ebp-10h] 1 +
call sub_1006E35  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3  +
mov esi ecx +
mov edi [ebp+8] +
and dword ptr [esi] 0 +
cmp word ptr [edi] 8 +
jnz loc_1006F2C  +
push dword ptr [edi+8]  +
call sub_1006DEF  +
jmp loc_1006F63  +
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantInit  +
and dword ptr [ebp-4] 0 +
push edi  +
push 8  +
lea ecx [ebp-1Ch] +
call sub_1006816  +
push dword ptr [ebp-14h]  +
mov ecx esi +
call sub_1006DEF  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-1Ch] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_10067D8  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_catch  +
xor edi edi +
mov [ebp-18h] edi +
mov [ebp-14h] edi +
mov [ebp-4] edi +
mov byte ptr [ebp-4] 1 +
mov ebx [ebp+8] +
cmp ebx 80070005h +
jnz loc_1006F9D  +
mov ebx 52Eh +
cmp ebx 80040154h +
jnz loc_1006FFE  +
push 1580h  +
call sub_100B775  +
push eax  +
lea ecx [ebp-20h] +
call sub_1004748  +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp-14h] +
call sub_1006DBB  +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-20h] +
cmp ecx edi +
jz loc_1006FD8  +
call sub_10047C0  +
mov [ebp-20h] edi +
mov esi [ebp-14h] +
cmp esi edi +
jz loc_1006FE3  +
mov eax [esi] +
jmp loc_1006FE5  +
xor eax eax +
push eax  +
call sub_1009774  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp esi edi +
jz loc_1007154  +
mov ecx esi +
jmp loc_100714C  +
lea eax [ebp-18h] +
push eax  +
push offset riid  +
push 1  +
push edi  +
push offset rclsid  +
call ds:CoCreateInstance  +
cmp eax edi +
jl loc_1007083  +
mov [ebp-1Ch] edi +
mov eax [ebp-18h] +
mov ecx [eax] +
lea edx [ebp-1Ch] +
push edx  +
push edi  +
push edi  +
push ebx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp [ebp-1Ch] edi +
jz loc_1007067  +
push dword ptr [ebp-1Ch]  +
lea ecx [ebp-24h] +
call sub_1004748  +
mov byte ptr [ebp-4] 3 +
push eax  +
lea ecx [ebp-14h] +
call sub_1006DBB  +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-24h] +
cmp ecx edi +
jz loc_100705E  +
call sub_10047C0  +
mov [ebp-24h] edi +
push dword ptr [ebp-1Ch]  +
call ds:SysFreeString  +
cmp esi edi +
jge loc_1007071  +
push ebx  +
call sub_10083BE  +
mov eax [ebp-18h] +
cmp eax edi +
jz loc_1007089  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] edi +
jmp loc_1007089  +
push ebx  +
call sub_10083BE  +
mov [ebp-4] edi +
jmp loc_1006FD8  +
push offset asc_1001464  +
push dword ptr [ebp+8]  +
call sub_100A3BF  +
push dword ptr [ebp+8]  +
call sub_1009774  +
lea eax [ebp+8] +
push eax  +
call sub_1009FA7  +
jmp loc_1007111  +
push 8  +
call ds:SetLastError  +
call sub_10097DB  +
mov dword ptr [ebp-4] 4 +
mov dword ptr [ebp-4] 4 +
mov eax offset loc_100713F +
retn   +
push 8  +
call ds:SetLastError  +
call sub_10097DB  +
mov dword ptr [ebp-4] 4 +
mov eax offset loc_1007118 +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-14h] +
xor edi edi +
cmp ecx edi +
jz loc_1007154  +
call sub_10047C0  +
mov [ebp-14h] edi +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_catch  +
mov esi [ebp+8] +
xor ebx ebx +
cmp esi ebx +
jz loc_1007207  +
cmp [ebp+0Ch] ebx +
jz loc_1007207  +
mov [ebp-4] ebx +
lea eax [ebp-28h] +
push eax  +
call ds:VariantInit  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp+0Ch] +
call sub_1004748  +
mov byte ptr [ebp-4] 1 +
cmp [eax] ebx +
jz loc_10071A9  +
mov eax [eax] +
mov eax [eax] +
jmp loc_10071AB  +
xor eax eax +
mov ecx [esi] +
push ebx  +
push ebx  +
lea edx [ebp-28h] +
push edx  +
push ebx  +
push eax  +
push esi  +
call dword ptr [ecx+10h]  +
mov [ebp-14h] eax +
mov [ebp-4] bl +
mov ecx [ebp+0Ch] +
cmp ecx ebx +
jz loc_10071CE  +
call sub_10047C0  +
mov [ebp+0Ch] ebx +
lea eax [ebp-28h] +
push eax  +
cmp [ebp-14h] ebx +
jge loc_10071E2  +
call ds:VariantClear  +
mov eax [ebp-14h] +
jmp loc_100720C  +
mov ecx [ebp+10h] +
call sub_10067F2  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-28h] +
push eax  +
jmp loc_10071D7  +
mov eax [ebp-18h] +
mov eax [eax+4] +
mov [ebp-14h] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax offset loc_10071EE +
retn   +
mov eax 80041008h +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3_catch  +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
xor eax eax +
mov [ebp-4] eax +
cmp [ebp+8] eax +
jz loc_10072F7  +
push eax  +
push dword ptr [ebp+8]  +
call sub_1009A0A  +
test eax eax +
jz loc_10072F7  +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp+8]  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push offset word_1001360  +
push dword ptr [ebp-14h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1007282  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
jmp loc_1007306  +
push offset a?  +
lea ecx [ebp-14h] +
call ?FindOneOf@CHString@@QBEHPBG@Z  +
or esi 0FFFFFFFFh +
cmp eax esi +
jz loc_100729B  +
mov [ebp-4] esi +
jmp loc_1007273  +
push 5Ch  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHG@Z  +
cmp eax esi +
jz loc_10072DE  +
inc eax  +
push eax  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
push 5Ch  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHG@Z  +
cmp eax esi +
jnz loc_1007296  +
mov [ebp-4] esi +
jmp loc_10072FB  +
push 80041006h  +
call sub_1006F72  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_100726F +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
inc eax  +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3_catch  +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
and dword ptr [ebp-4] 0 +
mov edi [ebp+8] +
test edi edi +
jz loc_100741E  +
push 0  +
push edi  +
call sub_1009A0A  +
test eax eax +
jz loc_100741E  +
xor ebx ebx +
inc ebx  +
mov [ebp-4] bl +
mov esi [ebp+0Ch] +
and dword ptr [esi] 0 +
push 0  +
push 0Ah  +
push edi  +
call sub_100B1DE  +
cmp eax ebx +
jnz loc_1007373  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
jmp loc_1007434  +
push edi  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@PBG@Z  +
push dword ptr [ebp-14h]  +
call sub_1008D9B  +
cmp eax ebx +
jnz loc_10073BC  +
push 2  +
lea eax [ebp+0Ch] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 2 +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov [ebp-4] bl +
lea ecx [ebp+0Ch] +
call ??1CHString@@QAE@XZ  +
lea ecx [ebp-14h] +
call ?GetData@CHString@@IBEPAUCHStringData@@XZ  +
cmp dword ptr [eax+4] 0 +
jz loc_1007360  +
push offset a@?  +
lea ecx [ebp-14h] +
call ?FindOneOf@CHString@@QBEHPBG@Z  +
or edi 0FFFFFFFFh +
cmp eax edi +
jz loc_10073D5  +
mov [ebp-4] edi +
jmp loc_1007364  +
push 5Ch  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHG@Z  +
cmp eax edi +
jnz loc_10073D0  +
push offset a_  +
push dword ptr [ebp-14h]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10073FB  +
mov [esi] ebx +
jmp loc_1007405  +
push dword ptr [ebp-14h]  +
call sub_100920D  +
mov [esi] eax +
mov [ebp-4] edi +
jmp loc_100742A  +
push 80041006h  +
call sub_1006F72  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1007360 +
retn   +
xor ebx ebx +
inc ebx  +
mov eax [ebp+0Ch] +
mov [eax] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov eax ebx +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_catch  +
xor esi esi +
mov [ebp-14h] esi +
mov [ebp-4] esi +
mov edi [ebp+8] +
cmp edi esi +
jz loc_1007460  +
cmp [edi] esi +
jz loc_100746A  +
push 80041008h  +
call sub_10083BE  +
push esi  +
push esi  +
call ds:CoInitializeEx  +
cmp eax esi +
jge loc_100747C  +
push eax  +
call sub_10083BE  +
push esi  +
push esi  +
push esi  +
push 3  +
xor ebx ebx +
inc ebx  +
push ebx  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push esi  +
call ds:CoInitializeSecurity  +
cmp eax esi +
jge loc_100749A  +
push eax  +
call sub_10083BE  +
push edi  +
push offset stru_1001CE4  +
push ebx  +
push esi  +
push offset stru_1001DB4  +
call ds:CoCreateInstance  +
cmp eax esi +
jge loc_10074B7  +
push eax  +
call sub_10083BE  +
mov [ebp-14h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov eax [ebp-14h] +
call __EH_epilog3  +
retn 4  +
***
mov eax offset loc_10074BE +
retn   +
***
call __EH_prolog3_catch  +
xor ebx ebx +
mov [ebp-24h] ebx +
mov [ebp-28h] ebx +
mov [ebp-4] ebx +
mov [ebp-18h] ebx +
mov byte ptr [ebp-4] 1 +
mov [ebp-1Ch] ebx +
mov byte ptr [ebp-4] 2 +
mov [ebp-14h] ebx +
mov byte ptr [ebp-4] 3 +
cmp [ebp+8] ebx +
jz loc_10079DF  +
mov eax [ebp+0Ch] +
cmp eax ebx +
jz loc_10079DF  +
cmp [eax] ebx +
jnz loc_10079DF  +
cmp [ebp+24h] ebx +
jz loc_10079DF  +
mov eax [ebp+2Ch] +
cmp eax ebx +
jz loc_100754D  +
mov [eax] ebx +
mov edi [ebp+28h] +
cmp edi ebx +
jz loc_1007556  +
mov [edi] ebx +
mov byte ptr [ebp-4] 4 +
mov [ebp-38h] ebx +
lea eax [ebp-24h] +
push eax  +
mov esi [ebp+10h] +
push esi  +
call sub_1007313  +
test eax eax +
jnz loc_1007578  +
push 800706BAh  +
call sub_10083BE  +
push dword ptr [ebp+14h]  +
call sub_1007219  +
test eax eax +
jnz loc_100758E  +
push 525h  +
call sub_10083BE  +
push dword ptr [ebp+24h]  +
lea ecx [ebp-18h] +
call sub_1006DEF  +
cmp esi ebx +
jz loc_100776D  +
cmp [ebp-24h] ebx +
jnz loc_100776D  +
push esi  +
lea ecx [ebp-28h] +
call sub_1006DEF  +
push esi  +
call sub_1008D9B  +
push dword ptr [ebp+24h]  +
cmp eax 1 +
jnz loc_1007667  +
lea ecx [ebp-2Ch] +
call sub_1004748  +
mov byte ptr [ebp-4] 5 +
push offset word_1001360  +
lea ecx [ebp+10h] +
call sub_1004748  +
mov byte ptr [ebp-4] 6 +
lea eax [ebp+10h] +
push eax  +
lea eax [ebp-40h] +
push eax  +
lea ecx [ebp-28h] +
call sub_1006E80  +
mov byte ptr [ebp-4] 7 +
lea ecx [ebp-2Ch] +
push ecx  +
lea ecx [ebp-3Ch] +
push ecx  +
mov ecx eax +
call sub_1006E80  +
mov byte ptr [ebp-4] 8 +
push eax  +
lea ecx [ebp-18h] +
call sub_1006DBB  +
mov byte ptr [ebp-4] 7 +
mov ecx [ebp-3Ch] +
cmp ecx ebx +
jz loc_1007625  +
call sub_10047C0  +
mov [ebp-3Ch] ebx +
mov byte ptr [ebp-4] 6 +
mov ecx [ebp-40h] +
cmp ecx ebx +
jz loc_1007638  +
call sub_10047C0  +
mov [ebp-40h] ebx +
mov byte ptr [ebp-4] 5 +
mov ecx [ebp+10h] +
cmp ecx ebx +
jz loc_100764B  +
call sub_10047C0  +
mov [ebp+10h] ebx +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp-2Ch] +
cmp ecx ebx +
jz loc_1007728  +
call sub_10047C0  +
mov [ebp-2Ch] ebx +
jmp loc_1007728  +
lea ecx [ebp-34h] +
call sub_1004748  +
mov byte ptr [ebp-4] 9 +
push offset word_1001360  +
lea ecx [ebp-30h] +
call sub_1004748  +
mov byte ptr [ebp-4] 0Ah +
lea eax [ebp-28h] +
push eax  +
push offset asc_1001980  +
lea eax [ebp-4Ch] +
push eax  +
call sub_1006EC3  +
mov byte ptr [ebp-4] 0Bh +
lea ecx [ebp-30h] +
push ecx  +
lea ecx [ebp-48h] +
push ecx  +
mov ecx eax +
call sub_1006E80  +
mov byte ptr [ebp-4] 0Ch +
lea ecx [ebp-34h] +
push ecx  +
lea ecx [ebp-44h] +
push ecx  +
mov ecx eax +
call sub_1006E80  +
mov byte ptr [ebp-4] 0Dh +
push eax  +
lea ecx [ebp-18h] +
call sub_1006DBB  +
mov byte ptr [ebp-4] 0Ch +
mov ecx [ebp-44h] +
cmp ecx ebx +
jz loc_10076DC  +
call sub_10047C0  +
mov [ebp-44h] ebx +
mov byte ptr [ebp-4] 0Bh +
mov ecx [ebp-48h] +
cmp ecx ebx +
jz loc_10076EF  +
call sub_10047C0  +
mov [ebp-48h] ebx +
mov byte ptr [ebp-4] 0Ah +
mov ecx [ebp-4Ch] +
cmp ecx ebx +
jz loc_1007702  +
call sub_10047C0  +
mov [ebp-4Ch] ebx +
mov byte ptr [ebp-4] 9 +
mov ecx [ebp-30h] +
cmp ecx ebx +
jz loc_1007715  +
call sub_10047C0  +
mov [ebp-30h] ebx +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp-34h] +
cmp ecx ebx +
jz loc_1007728  +
call sub_10047C0  +
mov [ebp-34h] ebx +
cmp [ebp+14h] ebx +
jz loc_100779B  +
push ebx  +
push dword ptr [ebp+14h]  +
call sub_1009A0A  +
test eax eax +
jz loc_100779B  +
push dword ptr [ebp+14h]  +
lea ecx [ebp-1Ch] +
call sub_1006DEF  +
push dword ptr [ebp+18h]  +
lea ecx [ebp-14h] +
call sub_1006DEF  +
cmp dword ptr [ebp+20h] 1 +
jnz loc_100778F  +
lea ecx [ebp-14h] +
call sub_1006A30  +
test eax eax +
jnz loc_100778F  +
push ebx  +
lea ecx [ebp-14h] +
call sub_1006DEF  +
jmp loc_100778F  +
cmp dword ptr [ebp-24h] 1 +
jnz loc_100779B  +
cmp [ebp+14h] ebx +
jz loc_100779B  +
push ebx  +
push dword ptr [ebp+14h]  +
call sub_1009A0A  +
test eax eax +
jz loc_100779B  +
cmp edi ebx +
jz loc_100779B  +
mov dword ptr [edi] 80041064h +
cmp [ebp-14h] ebx +
jz loc_100779B  +
mov eax [ebp-14h] +
mov edx [eax] +
jmp loc_100779D  +
xor edx edx +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_10077A8  +
mov ecx [eax] +
jmp loc_10077AA  +
xor ecx ecx +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_10077B5  +
mov eax [eax] +
jmp loc_10077B7  +
xor eax eax +
mov esi [ebp+8] +
mov esi [esi] +
mov edi [ebp+0Ch] +
push edi  +
push dword ptr [ebp+30h]  +
push ebx  +
push ebx  +
push ebx  +
push edx  +
push ecx  +
push eax  +
mov eax esi +
mov esi [ebp+8] +
push esi  +
call dword ptr [eax+0Ch]  +
mov [ebp-20h] eax +
cmp eax ebx +
jge loc_10078DD  +
cmp eax 80070005h +
jnz loc_1007873  +
cmp dword ptr [ebp+20h] 1 +
jnz loc_10078C6  +
lea ecx [ebp-1Ch] +
call sub_1006A30  +
test eax eax +
jz loc_10078C6  +
lea ecx [ebp-14h] +
call sub_1006A30  +
test eax eax +
jnz loc_10078C6  +
push offset dword_10016DC  +
lea ecx [ebp+14h] +
call sub_1004748  +
mov byte ptr [ebp-4] 0Eh +
cmp [eax] ebx +
jz loc_100782D  +
mov eax [eax] +
mov edx [eax] +
jmp loc_100782F  +
xor edx edx +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_100783A  +
mov ecx [eax] +
jmp loc_100783C  +
xor ecx ecx +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_1007847  +
mov eax [eax] +
jmp loc_1007849  +
xor eax eax +
mov esi [esi] +
push edi  +
push dword ptr [ebp+30h]  +
push ebx  +
push ebx  +
push ebx  +
push edx  +
push ecx  +
push eax  +
push dword ptr [ebp+8]  +
call dword ptr [esi+0Ch]  +
mov [ebp-20h] eax +
mov byte ptr [ebp-4] 4 +
mov ecx [ebp+14h] +
cmp ecx ebx +
jz loc_10078C1  +
call sub_10047C0  +
mov [ebp+14h] ebx +
jmp loc_10078C1  +
cmp dword ptr [ebp-20h] 80041064h +
jnz loc_10078C1  +
mov dword ptr [ebp-24h] 1 +
push ebx  +
lea ecx [ebp-1Ch] +
call sub_1006DEF  +
push ebx  +
lea ecx [ebp-14h] +
call sub_1006DEF  +
push dword ptr [ebp+24h]  +
lea ecx [ebp-18h] +
call sub_1006DEF  +
cmp [ebp-18h] ebx +
jz loc_10078AC  +
mov eax [ebp-18h] +
mov eax [eax] +
jmp loc_10078AE  +
xor eax eax +
mov ecx [esi] +
push edi  +
push dword ptr [ebp+30h]  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push eax  +
push esi  +
call dword ptr [ecx+0Ch]  +
mov [ebp-20h] eax +
cmp [ebp-20h] ebx +
jge loc_10078D0  +
push dword ptr [ebp-20h]  +
call sub_10083BE  +
jmp loc_10078DD  +
push offset dword_10016DC  +
lea ecx [ebp-14h] +
call sub_1006DEF  +
mov eax [ebp-14h] +
cmp eax ebx +
jz loc_10078E8  +
mov ecx [eax] +
jmp loc_10078EA  +
xor ecx ecx +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_10078F5  +
mov eax [eax] +
jmp loc_10078F7  +
xor eax eax +
push dword ptr [ebp+1Ch]  +
push ecx  +
push eax  +
push dword ptr [edi]  +
call sub_1006BD4  +
mov [ebp-20h] eax +
cmp eax ebx +
jge loc_1007910  +
push eax  +
call sub_10083BE  +
mov eax [ebp+2Ch] +
cmp eax ebx +
jz loc_100791C  +
mov ecx [ebp-24h] +
mov [eax] ecx +
mov dword ptr [ebp-38h] 1 +
mov dword ptr [ebp-4] 3 +
jmp loc_100798F  +
mov eax offset loc_100796A +
retn   +
xor ebx ebx +
mov esi [ebp+0Ch] +
mov eax [esi] +
cmp eax ebx +
jz loc_100797D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi] ebx +
mov [ebp-38h] ebx +
mov dword ptr [ebp-4] 0Fh +
mov eax offset loc_100798D +
retn   +
xor ebx ebx +
mov byte ptr [ebp-4] 2 +
mov ecx [ebp-14h] +
cmp ecx ebx +
jz loc_10079A2  +
call sub_10047C0  +
mov [ebp-14h] ebx +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp-1Ch] +
cmp ecx ebx +
jz loc_10079B5  +
call sub_10047C0  +
mov [ebp-1Ch] ebx +
mov [ebp-4] bl +
mov ecx [ebp-18h] +
cmp ecx ebx +
jz loc_10079C7  +
call sub_10047C0  +
mov [ebp-18h] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ebp-28h] +
cmp ecx ebx +
jz loc_10079DA  +
call sub_10047C0  +
mov [ebp-28h] ebx +
mov eax [ebp-38h] +
jmp loc_10079F2  +
mov eax [ebp+28h] +
cmp eax ebx +
jz loc_10079EC  +
mov dword ptr [eax] 80041008h +
or dword ptr [ebp-4] 0FFFFFFFFh +
xor eax eax +
call __EH_epilog3  +
retn 2Ch  +
***
call __EH_prolog3_catch  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1007AD6 +
retn   +
***
call __EH_prolog3_catch  +
lea eax [ebp-24h] +
push eax  +
call ds:VariantInit  +
xor esi esi +
mov [ebp-4] esi +
mov ecx [ebp+10h] +
call ?Empty@CHString@@QAEXXZ  +
mov byte ptr [ebp-4] 1 +
push dword ptr [ebp+14h]  +
mov ecx [ebp+10h] +
call ??4CHString@@QAEABV0@PBG@Z  +
cmp [ebp+8] esi +
jz loc_1007C38  +
cmp [ebp+0Ch] esi +
jnz loc_1007C42  +
push 80041008h  +
call sub_10083BE  +
lea eax [ebp-24h] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1007161  +
cmp eax esi +
jge loc_1007C5B  +
push eax  +
call sub_10083BE  +
push 8  +
pop eax  +
cmp ax [ebp-24h] +
jnz loc_1007C9C  +
lea eax [ebp-24h] +
push eax  +
lea ecx [ebp+0Ch] +
call sub_1006F08  +
mov byte ptr [ebp-4] 2 +
cmp [eax] esi +
jz loc_1007C7E  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1007C80  +
xor eax eax +
push eax  +
mov ecx [ebp+10h] +
call ??4CHString@@QAEABV0@PBG@Z  +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp+0Ch] +
cmp ecx esi +
jz loc_1007C9C  +
call sub_10047C0  +
mov [ebp+0Ch] esi +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-24h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_10067D8  +
xor eax eax +
inc eax  +
jmp loc_1007CF1  +
add ds:byte_1007CDB[eax] bh +
retn   +
push 80041006h  +
call sub_1006F72  +
and dword ptr [ebp-4] 0 +
mov eax offset byte_1007CDB +
retn   +
dec ebp  +
cld   +
dec dword ptr [ebp-0AF23BBh]  +
adc eax offset VariantClear +
push eax  +
call sub_10067D8  +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3_catch  +
lea eax [ebp-24h] +
push eax  +
call ds:VariantInit  +
xor edi edi +
mov [ebp-4] edi +
mov byte ptr [ebp-4] 1 +
mov esi [ebp+10h] +
mov eax [ebp+14h] +
mov [esi] eax +
cmp [ebp+8] edi +
jz loc_1007D2F  +
cmp [ebp+0Ch] edi +
jnz loc_1007D39  +
push 80041008h  +
call sub_10083BE  +
lea eax [ebp-24h] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1007161  +
cmp eax edi +
jge loc_1007D52  +
push eax  +
call sub_10083BE  +
movzx eax word ptr [ebp-24h] +
dec eax  +
dec eax  +
jz loc_1007D78  +
dec eax  +
jz loc_1007D6D  +
sub eax 0Fh +
jz loc_1007D72  +
dec eax  +
jz loc_1007D6D  +
sub eax 3 +
jz loc_1007D6D  +
dec eax  +
jnz loc_1007D7E  +
mov eax [ebp-1Ch] +
jmp loc_1007D7C  +
movzx eax word ptr [ebp-1Ch] +
jmp loc_1007D7C  +
movsx eax word ptr [ebp-1Ch] +
mov [esi] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-24h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_10067D8  +
xor eax eax +
inc eax  +
jmp loc_1007DBF  +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-24h] +
push eax  +
call ds:VariantClear  +
push eax  +
call sub_10067D8  +
xor eax eax +
call __EH_epilog3  +
retn 10h  +
***
call __EH_prolog3_catch  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_1007E43 +
retn   +
***
call __EH_prolog3_catch  +
xor esi esi +
mov [ebp-24h] esi +
lea ecx [ebp-14h] +
call ??0CHString@@QAE@XZ  +
mov [ebp-4] esi +
mov [ebp-1Ch] esi +
mov [ebp-18h] esi +
mov edi [ebp+8] +
cmp edi esi +
jnz loc_1007ECB  +
push 80041008h  +
call sub_1006F72  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
mov byte ptr [ebp-4] 1 +
push offset aWin32_operatin  +
lea ecx [ebp+8] +
call sub_1004748  +
mov byte ptr [ebp-4] 2 +
cmp [eax] esi +
jz loc_1007EEA  +
mov eax [eax] +
mov eax [eax] +
jmp loc_1007EEC  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-18h] +
push edx  +
push esi  +
push 30h  +
push eax  +
push edi  +
call dword ptr [ecx+48h]  +
mov edi eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp+8] +
cmp ecx esi +
jz loc_1007F0F  +
call sub_10047C0  +
mov [ebp+8] esi +
cmp edi esi +
jge loc_1007F19  +
push edi  +
call sub_10083BE  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-18h]  +
call sub_100688A  +
cmp eax esi +
jge loc_1007F2E  +
push eax  +
call sub_10083BE  +
mov eax [ebp-18h] +
mov ecx [eax] +
lea edx [ebp-24h] +
push edx  +
lea edx [ebp-1Ch] +
push edx  +
push 1  +
or ebx 0FFFFFFFFh +
push ebx  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax esi +
jge loc_1007F4F  +
push eax  +
call sub_10083BE  +
cmp [ebp-24h] esi +
jnz loc_1007F83  +
push 1  +
call sub_1006F72  +
mov eax [ebp-1Ch] +
cmp eax esi +
jz loc_1007F6B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] esi +
mov eax [ebp-18h] +
cmp eax esi +
jz loc_1007F7B  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] esi +
mov [ebp-4] ebx +
jmp loc_1007EB9  +
push 138Dh  +
call sub_100B775  +
push eax  +
lea eax [ebp-14h] +
push eax  +
push offset aVersion  +
push dword ptr [ebp-1Ch]  +
call sub_1007BFC  +
test eax eax +
mov eax [ebp-1Ch] +
jz loc_1007F5E  +
cmp eax esi +
jz loc_1007FB3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] esi +
mov eax [ebp-18h] +
cmp eax esi +
jz loc_1007FC3  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] esi +
mov [ebp-20h] esi +
push 2Eh  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHG@Z  +
mov edi eax +
cmp edi ebx +
jnz loc_1007FF7  +
push esi  +
push 0Ah  +
push dword ptr [ebp-14h]  +
call sub_100B1DE  +
test eax eax +
jz loc_1007F7B  +
push 0Ah  +
push dword ptr [ebp-14h]  +
call sub_100AFF8  +
mov [ebp-20h] eax +
jmp loc_1008116  +
push edi  +
push esi  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 3 +
mov eax [eax] +
push esi  +
push 0Ah  +
push eax  +
call sub_100B1DE  +
mov ebx eax +
neg ebx  +
sbb bl bl +
inc bl  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
test bl bl +
jnz loc_1007EB5  +
push edi  +
push esi  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 4 +
mov eax [eax] +
push 0Ah  +
pop ebx  +
push ebx  +
push eax  +
call sub_100AFF8  +
mov [ebp-20h] eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
inc edi  +
push edi  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@H@Z  +
mov byte ptr [ebp-4] 5 +
push eax  +
lea ecx [ebp-14h] +
call ??4CHString@@QAEABV0@ABV0@@Z  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
push 2Eh  +
lea ecx [ebp-14h] +
call ?Find@CHString@@QBEHG@Z  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jnz loc_10080B4  +
push esi  +
push ebx  +
push dword ptr [ebp-14h]  +
call sub_100B1DE  +
test eax eax +
jz loc_1007EB5  +
push ebx  +
push dword ptr [ebp-14h]  +
call sub_100AFF8  +
mov esi eax +
jmp loc_1008116  +
push edi  +
push esi  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 6 +
mov eax [eax] +
push esi  +
push ebx  +
push eax  +
call sub_100B1DE  +
mov ebx eax +
neg ebx  +
sbb bl bl +
inc bl  +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
test bl bl +
jnz loc_1007EB5  +
push edi  +
push esi  +
lea eax [ebp+8] +
push eax  +
lea ecx [ebp-14h] +
call ?Mid@CHString@@QBE?AV1@HH@Z  +
mov byte ptr [ebp-4] 7 +
mov eax [eax] +
push 0Ah  +
push eax  +
call sub_100AFF8  +
mov esi eax +
mov byte ptr [ebp-4] 1 +
lea ecx [ebp+8] +
call ??1CHString@@QAE@XZ  +
mov eax [ebp-20h] +
imul eax eax +
add eax esi +
mov [ebp-28h] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CHString@@QAE@XZ  +
mov eax [ebp-28h] +
jmp loc_1007EC3  +
***
cld   +
mov eax offset loc_1007EB5 +
retn   +
***
push 80041006h  +
call sub_1006F72  +
mov eax [ebp-1Ch] +
xor esi esi +
cmp eax esi +
jz loc_1008187  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] esi +
mov eax [ebp-18h] +
cmp eax esi +
jz loc_1008197  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-18h] esi +
mov [ebp-4] esi +
mov eax offset loc_1007EB5 +
retn   +
***
call __EH_prolog3_catch  +
lea ecx [ebp-18h] +
call ??0CHString@@QAE@XZ  +
xor esi esi +
mov [ebp-4] esi +
mov [ebp-20h] esi +
mov [ebp-1Ch] esi +
mov [ebp-14h] esi +
mov edi [ebp+8] +
cmp edi esi +
jnz loc_10081EE  +
push 80041008h  +
call sub_1006F72  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
call __EH_epilog3  +
retn 8  +
mov byte ptr [ebp-4] 1 +
push offset aWin32_computer  +
lea ecx [ebp+8] +
call sub_1004748  +
mov byte ptr [ebp-4] 2 +
cmp [eax] esi +
jz loc_100820D  +
mov eax [eax] +
mov eax [eax] +
jmp loc_100820F  +
xor eax eax +
mov ecx [edi] +
lea edx [ebp-14h] +
push edx  +
push esi  +
push esi  +
push eax  +
push edi  +
call dword ptr [ecx+48h]  +
mov edi eax +
mov byte ptr [ebp-4] 1 +
mov ecx [ebp+8] +
cmp ecx esi +
jz loc_1008231  +
call sub_10047C0  +
mov [ebp+8] esi +
cmp edi esi +
jge loc_100823B  +
push edi  +
call sub_10083BE  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp-14h]  +
call sub_100688A  +
cmp eax esi +
jge loc_1008250  +
push eax  +
call sub_10083BE  +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
lea edx [ebp-1Ch] +
push edx  +
push 1  +
or edi 0FFFFFFFFh +
push edi  +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax esi +
jge loc_1008271  +
push eax  +
call sub_10083BE  +
cmp [ebp-20h] esi +
jnz loc_10082A5  +
push 1  +
call sub_1006F72  +
mov eax [ebp-1Ch] +
cmp eax esi +
jz loc_100828D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] esi +
mov eax [ebp-14h] +
cmp eax esi +
jz loc_100829D  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] esi +
mov [ebp-4] edi +
jmp loc_10081DC  +
push 138Dh  +
call sub_100B775  +
push eax  +
lea eax [ebp-18h] +
push eax  +
push offset aSystemtype  +
push dword ptr [ebp-1Ch]  +
call sub_1007BFC  +
test eax eax +
mov eax [ebp-1Ch] +
jz loc_1008280  +
cmp eax esi +
jz loc_10082D5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] esi +
mov eax [ebp-14h] +
cmp eax esi +
jz loc_10082E5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] esi +
push offset aX86  +
lea ecx [ebp-18h] +
call ?Find@CHString@@QBEHPBG@Z  +
cmp eax edi +
jz loc_1008309  +
mov [ebp-4] edi +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
xor eax eax +
inc eax  +
jmp loc_10081E6  +
push offset aIa64  +
lea ecx [ebp-18h] +
call ?Find@CHString@@QBEHPBG@Z  +
cmp eax edi +
jz loc_100832D  +
mov [ebp-4] edi +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
push 2  +
pop eax  +
jmp loc_10081E6  +
push offset aAmd64  +
lea ecx [ebp-18h] +
call ?Find@CHString@@QBEHPBG@Z  +
cmp eax edi +
jz loc_100829D  +
mov [ebp-4] edi +
lea ecx [ebp-18h] +
call ??1CHString@@QAE@XZ  +
push 3  +
jmp loc_1008327  +
***
retn   +
***
push 80041006h  +
call sub_1006F72  +
mov eax [ebp-1Ch] +
xor esi esi +
cmp eax esi +
jz loc_10083A0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] esi +
mov eax [ebp-14h] +
cmp eax esi +
jz loc_10083B0  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-14h] esi +
mov [ebp-4] esi +
mov eax offset loc_10081D8 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_0]  +
call loc_100843D  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
and dword ptr [esi+0Ch] 0 +
mov [esi+4] eax +
mov eax [ebp+arg_4] +
mov dword ptr [esi] offset off_1001A2C +
mov [esi+8] eax +
test eax eax +
jz loc_1008404  +
cmp [ebp+arg_8] 0 +
jz loc_1008404  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+8] +
mov dword ptr [esi] offset off_1001A2C +
test eax eax +
jz loc_1008428  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov esi [esi+0Ch] +
test esi esi +
jz loc_1008436  +
push esi  +
call ds:LocalFree  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push 0  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-10h] +
push dword ptr [ebp+8]  +
call sub_10083D6  +
push offset dword_1011768  +
lea eax [ebp-10h] +
push eax  +
call _CxxThrowException  +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_1001A2C +
mov ecx [eax+4] +
mov [esi+4] ecx +
mov eax [eax+8] +
and dword ptr [esi+0Ch] 0 +
mov [esi+8] eax +
test eax eax +
jz loc_1008494  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_1008410  +
test byte ptr [ebp+8] 1 +
jz loc_10084BA  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_10084E2  +
test eax eax +
jnz loc_10084E7  +
mov ecx [esi] +
test ecx ecx +
jz loc_10084DF  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_10084D3  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_101309C +
push offset dword_101308C  +
push dword_1013098  +
mov dword_101308C eax +
push offset dword_101307C  +
push offset dword_1013080  +
push offset dword_1013078  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1013088 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_100856F  +
cmp eax esi +
jnz loc_1008562  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1008572  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1008549  +
xor esi esi +
inc esi  +
mov eax dword_10134E8 +
cmp eax esi +
jnz loc_1008585  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_10085C0  +
mov eax dword_10134E8 +
test eax eax +
jnz loc_10085BA  +
mov dword_10134E8 esi +
push offset dword_1001334  +
push offset dword_1001328  +
call sub_10084C6  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10085C0  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_100868A  +
mov dword_1013094 esi +
mov eax dword_10134E8 +
cmp eax esi +
jnz loc_10085E4  +
push offset dword_1001324  +
push offset dword_100131C  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_10134E8 2 +
cmp [ebp+var_1C] ebx +
jnz loc_10085F1  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_10134F0 ebx +
jz loc_1008612  +
push offset dword_10134F0  +
call sub_1008A09  +
pop ecx  +
test eax eax +
jz loc_1008612  +
push ebx  +
push 2  +
push ebx  +
call dword_10134F0  +
push dword_101307C  +
push dword_1013080  +
push dword_1013078  +
call sub_10063D8  +
add esp 0Ch +
mov dword_1013090 eax +
cmp dword_1013084 ebx +
jnz loc_1008670  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1013090 eax +
xor ebx ebx +
cmp dword_1013084 ebx +
jnz loc_1008670  +
push eax  +
call ds:_exit  +
cmp dword_1013094 ebx +
jnz loc_100867E  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1013090 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_10086A7  +
xor eax eax +
jmp loc_10086F4  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_10086A3  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_10086E1  +
cmp ecx 20Bh +
jnz loc_10086A3  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_10086A3  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_10086EF  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_10086A3  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1013084 eax +
call sub_1008BA2  +
push eax  +
call ds:__set_app_type  +
or dword_10134E0 0FFFFFFFFh +
or dword_10134E4 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_10130A4 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_10130A0 +
mov [eax] ecx +
call sub_1008B34  +
cmp dword_1013058 0 +
jnz loc_100874D  +
push offset sub_1008B34  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1008B1C  +
xor eax eax +
retn   +
***
call sub_1008BE1  +
jmp sub_1008527  +
***
cmp ecx dword_101303C +
jnz loc_1008780  +
retn 0  +
jmp loc_1008C77  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_101303C +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_101303C +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_101303C +
xor eax ebp +
push eax  +
mov [ebp-14h] eax +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_1008775  +
jmp __EH_epilog3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_1008883  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_100894A  +
cmp dword ptr [eax+10h] 3 +
jnz loc_100894A  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1008944  +
cmp eax 19930521h +
jz loc_1008944  +
cmp eax 19930522h +
jz loc_1008944  +
cmp eax 1994000h +
jnz loc_100894A  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_100890C+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1008996  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1008992  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_10089FD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_10089F5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_10089FF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_10089E5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1008980  +
pop ecx  +
test eax eax +
jz loc_1008A66  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_10089C0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1008A66  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1008A6F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1008775  +
push offset dword_101303C  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1008B95  +
cmp ecx 0FFFFFFFFh +
jz loc_1008B95  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1008B8E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1008B8E  +
cmp edx 10000000h +
jnb loc_1008B8E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1008B8E  +
jmp loc_1008B89  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1008BD7  +
push eax  +
call sub_1008B3C  +
test eax eax +
jz loc_1008BD7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1008BCC  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1008BD7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_101303C +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1008C13  +
test eax ebx +
jz loc_1008C13  +
not eax  +
mov dword_1013040 eax +
jmp loc_1008C6E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1008C5A  +
test dword_101303C ebx +
jnz loc_1008C5F  +
mov esi 0BB40E64Fh +
mov dword_101303C esi +
not esi  +
mov dword_1013040 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_10131A8 eax +
mov dword_10131A4 ecx +
mov dword_10131A0 edx +
mov dword_101319C ebx +
mov dword_1013198 esi +
mov dword_1013194 edi +
mov word_10131C0 ss +
mov word_10131B4 cs +
mov word_1013190 ds +
mov word_101318C es +
mov word_1013188 fs +
mov word_1013184 gs +
pushf   +
pop dword_10131B8  +
mov eax [ebp+0] +
mov dword_10131AC eax +
mov eax [ebp+4] +
mov dword_10131B0 eax +
lea eax [ebp+8] +
mov dword_10131BC eax +
mov eax [ebp-320h] +
mov dword_10130F8 10001h +
mov eax dword_10131B0 +
mov dword_10130B4 eax +
mov dword_10130A8 0C0000409h +
mov dword_10130AC 1 +
mov eax dword_101303C +
mov [ebp-328h] eax +
mov eax dword_1013040 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
push ecx  +
lea ecx [esp+4] +
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp] eax +
retn   +
***
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jnz loc_1008DBC  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008DB8  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_1008DE1  +
push 0  +
push [ebp+lpString1]  +
call sub_1009A0A  +
cmp eax 2 +
jbe loc_1008DB8  +
push 2  +
push 1  +
push offset asc_1001980  +
push [ebp+lpString1]  +
call sub_1009A2B  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_4] esi +
cmp [ebp+lpString] esi +
jz loc_1008E7B  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1008E7B  +
push esi  +
push esi  +
push [ebp+lpString]  +
push 10h  +
call sub_100A8D6  +
cmp eax esi +
jnz loc_1008E2A  +
call ds:GetLastError  +
test eax eax +
jnz loc_1008E86  +
push 8  +
jmp loc_1008E80  +
mov esi ds:wcstok +
mov edi offset a_ +
push edi  +
push eax  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_1008E7B  +
push 0  +
push 0Ah  +
push ebx  +
call sub_100B1DE  +
test eax eax +
jz loc_1008E86  +
push 0Ah  +
push ebx  +
call sub_100AFF8  +
cmp eax 0FFh +
ja loc_1008E86  +
cmp [ebp+var_4] 4 +
inc [ebp+var_4]  +
push edi  +
push 0  +
call esi  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_1008E41  +
cmp [ebp+var_4] 4 +
jnz loc_1008E7B  +
inc eax  +
jmp loc_1008E88  +
push 254Fh  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A08h +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
push edi  +
xor esi esi +
mov [ebp+var_9E4] eax +
push 7  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_A04] +
mov [ebp+var_A08] esi +
mov [ebp+var_9E8] edx +
mov [ebp+var_9E0] esi +
mov [ebp+var_9DC] esi +
stos   +
mov [ebp+var_46] ax +
cmp [ebp+var_9E4] esi +
jz loc_1009018  +
cmp ebx esi +
jz loc_1009018  +
mov eax [ebx] +
cmp eax esi +
jz loc_1008F11  +
cmp eax 2 +
jb loc_1009018  +
cmp edx esi +
jz loc_1009018  +
cmp dword_10133CC esi +
jnz loc_1008F45  +
lea eax [ebp+WSAData] +
push eax  +
push 202h  +
call ds:WSAStartup  +
test eax eax +
jz loc_1008F3B  +
call ds:WSAGetLastError  +
push eax  +
jmp loc_1009024  +
mov dword_10133CC 1 +
lea eax [ebp+var_9DC] +
push eax  +
lea eax [ebp+var_A08] +
push eax  +
push esi  +
push [ebp+var_9E4]  +
call ds:GetAddrInfoW  +
test eax eax +
jnz loc_100902A  +
mov esi [ebp+var_9DC] +
xor edi edi +
jmp loc_1008FB2  +
push 4  +
xor eax eax +
mov [ebp+var_848] ax +
push 20h  +
lea eax [ebp+var_44] +
push eax  +
push 401h  +
lea eax [ebp+var_848] +
push eax  +
push dword ptr [esi+10h]  +
push dword ptr [esi+18h]  +
call ds:GetNameInfoW  +
cmp eax edi +
jz loc_1008FB8  +
cmp eax 2AFCh +
jnz loc_1008FAF  +
cmp [ebp+var_848] di +
jnz loc_1008FB8  +
mov esi [esi+1Ch] +
cmp esi edi +
jnz loc_1008F72  +
jmp loc_1009004  +
lea esi [ebp+var_848] +
cmp [ebp+arg_C] edi +
jnz loc_1008FD5  +
mov eax esi +
push offset a_  +
push eax  +
call ds:wcstok  +
pop ecx  +
pop ecx  +
mov esi eax +
push edi  +
push esi  +
call sub_1009A0A  +
mov ecx [ebx] +
inc eax  +
cmp ecx eax +
jnb loc_1008FF1  +
mov [ebx] eax +
mov [ebp+var_9E0] 1 +
jmp loc_1009004  +
push ecx  +
push esi  +
push [ebp+var_9E8]  +
call sub_100A37C  +
mov [ebp+var_9E0] eax +
push [ebp+var_9DC]  +
call ds:FreeAddrInfoW  +
mov eax [ebp+var_9E0] +
jmp loc_100902C  +
call ds:GetLastError  +
test eax eax +
jnz loc_100902A  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008775  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
xor esi esi +
mov [ebp+Buffer] esi +
cmp edi esi +
jz loc_1009096  +
push esi  +
push edi  +
call sub_1009A0A  +
test eax eax +
jz loc_1009096  +
push edi  +
call sub_1008D9B  +
push edi  +
test eax eax +
jnz loc_100909E  +
push offset aS  +
push 1  +
call sub_100ABC7  +
add esp 0Ch +
test eax eax +
jnz loc_10090A5  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009091  +
push 8  +
call ds:SetLastError  +
call sub_10097DB  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 4  +
call sub_1009774  +
jmp loc_100907B  +
call sub_1009748  +
cmp eax esi +
jnz loc_10090B7  +
push 0Dh  +
call sub_10096D7  +
jmp loc_10090C1  +
push esi  +
push esi  +
push eax  +
push 0Dh  +
call sub_100A8D6  +
cmp eax esi +
jz loc_100907F  +
lea ecx [ebp+Buffer] +
push ecx  +
push 65h  +
push eax  +
call NetServerGetInfo  +
test eax eax +
jnz loc_1009096  +
mov eax [ebp+Buffer] +
test dword ptr [eax+10h] 1000h +
jz loc_10090F0  +
mov esi [eax+8] +
and esi 0Fh +
imul esi esi +
add esi [eax+0Ch] +
push eax  +
call NetApiBufferFree  +
mov eax esi +
jmp loc_1009098  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi [ebp+lpString] +
push edi  +
xor edi edi +
mov [ebp+fForce] edi +
cmp esi edi +
jz loc_10091FF  +
push esi  +
call ds:lstrlenW  +
test eax eax +
jz loc_10091FF  +
push esi  +
call sub_1008D9B  +
cmp eax 1 +
jnz loc_1009135  +
add esi 4 +
mov ebx [ebp+arg_8] +
test bl 10h +
jz loc_1009170  +
push offset aIpc  +
push esi  +
push offset aSS_0  +
push 2  +
call sub_100ABC7  +
add esp 10h +
test eax eax +
jnz loc_100919D  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009168  +
push 8  +
call ds:SetLastError  +
push 8  +
pop eax  +
jmp loc_1009201  +
test bl 20h +
jz loc_100917C  +
push offset aAdmin  +
jmp loc_1009142  +
test bl 40h +
jz loc_100918B  +
cmp [ebp+arg_4] edi +
jz loc_100918B  +
push [ebp+arg_4]  +
jmp loc_1009142  +
push esi  +
push offset aS  +
push 1  +
call sub_100ABC7  +
add esp 0Ch +
jmp loc_1009152  +
call sub_1009748  +
cmp eax edi +
jnz loc_10091AF  +
push 12h  +
call sub_10096D7  +
jmp loc_10091B9  +
push edi  +
push edi  +
push eax  +
push 12h  +
call sub_100A8D6  +
cmp eax edi +
jz loc_1009156  +
test ebx 10000000h +
jz loc_10091CC  +
mov [ebp+fForce] 1 +
push [ebp+fForce]  +
push edi  +
push eax  +
call WNetCancelConnection2W  +
mov esi eax +
cmp esi edi +
jz loc_10091F2  +
cmp esi 4B8h +
jz loc_10091EB  +
call sub_10097DB  +
jmp loc_10091FB  +
call sub_100AC59  +
jmp loc_10091FB  +
push edi  +
xor esi esi +
call ds:SetLastError  +
mov eax esi +
jmp loc_1009201  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call ds:SetLastError  +
cmp [ebp+lpString] edi +
jz loc_1009365  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_1009365  +
mov esi ds:GetComputerNameExW +
lea eax [ebp+var_4] +
push eax  +
push edi  +
push 4  +
call esi  +
mov ebx ds:GetLastError +
call ebx  +
cmp eax 0EAh +
jz loc_1009262  +
xor eax eax +
jmp loc_1009368  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_100A8D6  +
mov [ebp+lpString1] eax +
cmp eax edi +
jnz loc_1009286  +
call ebx  +
test eax eax +
jnz loc_100925B  +
push 8  +
call ds:SetLastError  +
jmp loc_100925B  +
lea ecx [ebp+var_4] +
push ecx  +
push eax  +
push 4  +
call esi  +
test eax eax +
jz loc_100925B  +
push edi  +
push 1  +
push [ebp+lpString]  +
push [ebp+lpString1]  +
call sub_1009A2B  +
test eax eax +
jz loc_1009365  +
push [ebp+lpString]  +
call sub_1008DEA  +
cmp eax 1 +
mov [ebp+var_4] edi +
lea eax [ebp+var_4] +
jnz loc_1009321  +
push edi  +
push eax  +
push edi  +
push [ebp+lpString]  +
call sub_1008E94  +
test eax eax +
jz loc_100925B  +
xor ebx ebx +
inc ebx  +
push ebx  +
push [ebp+var_4]  +
push edi  +
push 0Fh  +
call sub_100A8D6  +
mov esi eax +
cmp esi edi +
jz loc_100925B  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push [ebp+lpString]  +
call sub_1008E94  +
test eax eax +
jz loc_100925B  +
push edi  +
push ebx  +
push esi  +
push [ebp+lpString1]  +
call sub_1009A2B  +
test eax eax +
jnz loc_100930D  +
mov eax ebx +
jmp loc_1009368  +
push edi  +
push ebx  +
push offset aLocalhost  +
push esi  +
call sub_1009A2B  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_1009368  +
push eax  +
push edi  +
push 7  +
call esi  +
call ebx  +
cmp eax 0EAh +
jnz loc_100925B  +
push 1  +
push [ebp+var_4]  +
push edi  +
push 0Eh  +
call sub_100A8D6  +
mov ebx eax +
cmp ebx edi +
jz loc_100925B  +
lea eax [ebp+var_4] +
push eax  +
push ebx  +
push 7  +
call esi  +
test eax eax +
jz loc_100925B  +
push edi  +
push 1  +
push [ebp+lpString]  +
push ebx  +
jmp loc_1009315  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
push 0Eh  +
pop ecx  +
mov esi offset a?@ +
lea edi [ebp+String] +
movs   +
xor esi esi +
cmp ebx esi +
jz loc_1009410  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_1009410  +
push ebx  +
call sub_1008DEA  +
xor edi edi +
inc edi  +
push esi  +
cmp eax edi +
jnz loc_10093F2  +
lea eax [ebp+var_40] +
push eax  +
push esi  +
push ebx  +
mov [ebp+var_40] esi +
call sub_1008E94  +
test eax eax +
jnz loc_10093CE  +
xor eax eax +
jmp loc_1009413  +
push edi  +
push [ebp+var_40]  +
push esi  +
push 0Fh  +
call sub_100A8D6  +
cmp eax esi +
jz loc_10093CA  +
push esi  +
lea ecx [ebp+var_40] +
push ecx  +
push eax  +
push ebx  +
call sub_1008E94  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_1009413  +
push edi  +
lea eax [ebp+String] +
push eax  +
push ebx  +
call sub_1009E5E  +
cmp eax 0FFFFFFFFh +
jz loc_100940C  +
push 35h  +
call ds:SetLastError  +
jmp loc_10093CA  +
mov eax edi +
jmp loc_1009413  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008775  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 10000010h  +
push 0  +
push [ebp+lpString]  +
call sub_10090FF  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
push esi  +
mov esi dword ptr [ebp+arg_0] +
xor ebx ebx +
cmp esi ebx +
jz loc_10095A1  +
push esi  +
call sub_100920D  +
cmp eax 1 +
jz loc_10095A1  +
push esi  +
mov dword ptr [ebp+arg_0] esi +
call sub_1008D9B  +
cmp eax 1 +
jnz loc_1009480  +
add esi 4 +
mov dword ptr [ebp+arg_0] esi +
push dword ptr [ebp+arg_0]  +
call sub_1009374  +
test eax eax +
jnz loc_100949C  +
call sub_10097DB  +
call ds:GetLastError  +
jmp loc_10095D5  +
cmp [ebp+lpString] ebx +
jz loc_10094C5  +
push [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_10094C5  +
push [ebp+lpString]  +
push dword ptr [ebp+arg_0]  +
push offset aSS_0  +
push 2  +
call sub_100ABC7  +
add esp 10h +
jmp loc_10094D7  +
push dword ptr [ebp+arg_0]  +
push offset aS  +
push 1  +
call sub_100ABC7  +
add esp 0Ch +
test eax eax +
jnz loc_10094FA  +
call ds:GetLastError  +
test eax eax +
jnz loc_10094ED  +
push 8  +
call ds:SetLastError  +
call sub_10097DB  +
push 8  +
pop eax  +
jmp loc_10095D5  +
call sub_1009748  +
cmp eax ebx +
jnz loc_100950C  +
push 12h  +
call sub_10096D7  +
jmp loc_1009516  +
push ebx  +
push ebx  +
push eax  +
push 12h  +
call sub_100A8D6  +
mov edx eax +
cmp edx ebx +
jz loc_10094DB  +
push edi  +
push 8  +
pop ecx  +
push ebx  +
push [ebp+lpUserName]  +
xor eax eax +
push [ebp+lpPassword]  +
lea edi [ebp+NetResource] +
stos   +
lea eax [ebp+NetResource] +
push eax  +
mov [ebp+NetResource.dwType] ebx +
mov [ebp+NetResource.lpProvider] ebx +
mov [ebp+NetResource.lpLocalName] ebx +
mov [ebp+NetResource.lpRemoteName] edx +
call WNetAddConnection2W  +
mov esi eax +
pop edi  +
cmp esi ebx +
jz loc_1009567  +
cmp esi 4B8h +
jz loc_1009560  +
push esi  +
call ds:SetLastError  +
call sub_10097DB  +
jmp loc_10095CF  +
call sub_100AC59  +
jmp loc_10095CF  +
push ebx  +
xor esi esi +
call ds:SetLastError  +
push dword ptr [ebp+arg_0]  +
call sub_1009042  +
push eax  +
call sub_1009923  +
test eax eax +
jnz loc_10095CF  +
push dword ptr [ebp+arg_0]  +
call sub_1009429  +
push 1580h  +
call sub_100B775  +
push eax  +
call sub_1009774  +
mov esi 4B8h +
jmp loc_10095CF  +
cmp [ebp+lpUserName] ebx +
jz loc_10095D3  +
push [ebp+lpUserName]  +
call ds:lstrlenW  +
test eax eax +
jz loc_10095D3  +
push 157Eh  +
call sub_100B775  +
push eax  +
call sub_1009774  +
mov esi 0A0010001h +
push esi  +
call ds:SetLastError  +
mov eax esi +
jmp loc_10095D5  +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset aIpc  +
push [ebp+lpPassword]  +
push [ebp+lpUserName]  +
push [ebp+arg_0]  +
call sub_1009446  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push edi  +
xor edi edi +
inc edi  +
cmp dword_10133C8 edi +
jnz loc_100963A  +
push dword_10133D0  +
call sub_100B78D  +
test eax eax +
jnz loc_1009636  +
call ds:GetLastError  +
test eax eax +
jnz loc_10096CE  +
push 42Bh  +
jmp loc_10096C8  +
mov eax edi +
pop edi  +
retn   +
cmp dword_10133D0 0 +
jnz loc_100961E  +
call sub_100B7AE  +
push eax  +
mov dword_10133D0 eax +
call sub_100B78D  +
test eax eax +
jz loc_10096BC  +
push 0  +
push offset dword_1001AB8  +
push dword_10133D0  +
call sub_100BC2D  +
test eax eax +
jnz loc_10096BC  +
push 3  +
push dword_10133D0  +
call sub_100BDF8  +
cmp eax edi +
jnz loc_10096BC  +
push 3  +
push dword_10133D0  +
call sub_100BDF8  +
cmp eax 2 +
jnz loc_10096BC  +
push 3  +
push dword_10133D0  +
call sub_100BDF8  +
cmp eax 3 +
jnz loc_10096BC  +
push 0  +
mov dword_10133C8 edi +
call ds:SetThreadUILanguage  +
xor ecx ecx +
test ax ax +
setnz cl  +
pop edi  +
mov eax ecx +
retn   +
call ds:GetLastError  +
test eax eax +
jnz loc_10096CE  +
push 8  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_10133C8 0 +
push esi  +
jz loc_100973C  +
push 3  +
push dword_10133D0  +
call sub_100BFC6  +
cmp eax [ebp+arg_0] +
jbe loc_100973C  +
push [ebp+arg_0]  +
push 3  +
push dword_10133D0  +
call sub_100C6C8  +
test eax eax +
jz loc_100973C  +
push [ebp+arg_0]  +
push 3  +
push dword_10133D0  +
call sub_100C21C  +
mov esi eax +
test esi esi +
jz loc_100973C  +
push 7  +
push offset aBuffer  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100973C  +
mov eax [esi+0Ch] +
jmp loc_100973E  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax dword_10133D0 +
test eax eax +
jz loc_1009769  +
push eax  +
call sub_100B78D  +
test eax eax +
jz loc_1009769  +
push 0  +
push dword_10133D0  +
call sub_100C033  +
retn   +
mov eax offset dword_1001AB8 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:GetLastError +
push edi  +
call esi  +
cmp [ebp+lpString] 0 +
mov edi eax +
jnz loc_100979D  +
call esi  +
test eax eax +
jnz loc_1009799  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10097D0  +
call sub_1009601  +
test eax eax +
jz loc_1009799  +
push 0  +
push [ebp+lpString]  +
push 0  +
push dword_10133D0  +
call sub_100C3B2  +
test eax eax +
jnz loc_10097C6  +
call esi  +
test eax eax +
jnz loc_1009799  +
push 8  +
jmp loc_1009793  +
push edi  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor edi edi +
mov [ebp+hMem] edi +
call sub_1009601  +
test eax eax +
jz loc_100985A  +
push ebx  +
push esi  +
mov esi ds:GetLastError +
push edi  +
push edi  +
lea eax [ebp+hMem] +
push eax  +
push edi  +
call esi  +
push eax  +
push edi  +
push 1300h  +
call ds:FormatMessageW  +
mov ebx ds:SetLastError +
test eax eax +
jz loc_1009834  +
cmp [ebp+hMem] edi +
jz loc_100984C  +
push [ebp+hMem]  +
call sub_1009774  +
push [ebp+hMem]  +
mov esi eax +
call ds:LocalFree  +
mov eax esi +
jmp loc_1009858  +
cmp [ebp+hMem] edi +
jz loc_100984C  +
push [ebp+hMem]  +
call ds:LocalFree  +
call esi  +
test eax eax +
jnz loc_100984C  +
push 8  +
call ebx  +
call esi  +
test eax eax +
jnz loc_1009856  +
push 8  +
call ebx  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_10097DB  +
test eax eax +
jz loc_1009884  +
call sub_1009748  +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+var_120] +
push 0  +
push eax  +
call memset  +
mov eax dword_1013060 +
add esp 0Ch +
push 3  +
mov [ebp+var_11C] eax +
mov eax dword_1013064 +
push 2  +
mov [ebp+var_118] eax +
mov ax word_10133D4 +
push 0  +
mov [ebp+var_120] esi +
mov esi ds:VerSetConditionMask +
push 0  +
mov [ebp+var_C] ax +
call esi  +
push 3  +
push 1  +
push edx  +
push eax  +
call esi  +
push 3  +
push 20h  +
push edx  +
push eax  +
call esi  +
push edx  +
push eax  +
push 3  +
lea eax [ebp+var_120] +
push eax  +
call ds:VerifyVersionInfoW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1008775  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 1388h +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+Mode] ebx +
cmp [ebp+arg_0] ebx +
jnz loc_1009962  +
call ds:GetLastError  +
test eax eax +
jnz loc_100995E  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10099DF  +
push esi  +
push edi  +
push [ebp+arg_0]  +
call ds:_fileno  +
mov esi ds:_errno +
mov edi eax +
call esi  +
push edi  +
mov [eax] ebx +
call ds:_get_osfhandle  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 0FFFFFFFFh +
jz loc_10099D3  +
call esi  +
cmp dword ptr [eax] 9 +
jz loc_10099D3  +
push ebx  +
call ds:GetFileType  +
cmp eax 2 +
jnz loc_10099DB  +
sub edi 0 +
jz loc_10099AF  +
dec edi  +
jz loc_10099AB  +
dec edi  +
jnz loc_10099DB  +
push 0FFFFFFF4h  +
jmp loc_10099B1  +
push 0FFFFFFF5h  +
jmp loc_10099B1  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
test eax eax +
jz loc_10099DB  +
cmp eax 0FFFFFFFFh +
jz loc_10099DB  +
lea ecx [ebp+Mode] +
push ecx  +
push eax  +
call ds:GetConsoleMode  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_10099DD  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_10099F8  +
xor eax eax +
jmp loc_1009A01  +
push [ebp+lpString]  +
call ds:lstrlenA  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_1009A19  +
xor eax eax +
jmp loc_1009A22  +
push [ebp+lpString]  +
call ds:lstrlenW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1009A69  +
cmp [ebp+lpString2] 0 +
jz loc_1009A69  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1009A4F  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringW  +
dec eax  +
dec eax  +
jmp loc_1009A7D  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009A7B  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_1009AC4  +
cmp [ebp+lpString2] 0 +
jz loc_1009AC4  +
mov eax [ebp+arg_C] +
xor ecx ecx +
cmp [ebp+arg_8] 1 +
setz cl  +
test eax eax +
jnz loc_1009AAA  +
or eax 0FFFFFFFFh +
push eax  +
push [ebp+lpString2]  +
push eax  +
push [ebp+lpString1]  +
push ecx  +
call ds:GetThreadLocale  +
push eax  +
call ds:CompareStringA  +
dec eax  +
dec eax  +
jmp loc_1009AD8  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009AD6  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor esi esi +
cmp [ebp+lpString] edi +
jz loc_1009BA5  +
mov eax [ebp+arg_8] +
cmp eax edi +
jz loc_1009BA5  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
jnz loc_1009B10  +
cmp [eax] edi +
jnz loc_1009BA5  +
mov eax [eax] +
cmp eax edi +
jz loc_1009B1E  +
cmp eax 1 +
jbe loc_1009B8C  +
lea esi [eax-1] +
cmp ebx edi +
jz loc_1009B35  +
cmp esi edi +
jz loc_1009B35  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
or eax 0FFFFFFFFh +
cmp esi edi +
jz loc_1009B4B  +
push edi  +
push [ebp+lpString]  +
call sub_10099E9  +
cmp eax esi +
jle loc_1009B4B  +
mov eax esi +
push esi  +
push ebx  +
push eax  +
push [ebp+lpString]  +
push edi  +
push 1  +
call ds:MultiByteToWideChar  +
cmp eax edi +
jnz loc_1009B9E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009B73  +
push 42Bh  +
call ds:SetLastError  +
cmp ebx edi +
jz loc_1009BB7  +
cmp esi edi +
jz loc_1009BB7  +
lea eax [esi+esi+2] +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
jmp loc_1009BB7  +
add eax eax +
push eax  +
push edi  +
push ebx  +
call memset  +
add esp 0Ch +
xor eax eax +
inc eax  +
jmp loc_1009BB9  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
jmp loc_1009B99  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009BB7  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_1009BDE  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009C00  +
push 57h  +
jmp loc_1009BFA  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1009C00  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapValidate  +
test eax eax +
jnz loc_1009C02  +
push 6  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
cmp [ebp+dwBytes] 0 +
ja loc_1009C31  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009CA5  +
push 57h  +
call ds:SetLastError  +
jmp loc_1009CA5  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1009CA5  +
and [ebp+ms_exc.disabled] 0 +
push [ebp+dwBytes]  +
push 0Ch  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_20] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1009CA7  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_1009C8C  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_1009C8C  +
push 570h  +
call ds:SetLastError  +
call sub_10097DB  +
jmp loc_1009C9E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009C9E  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpMem] 0 +
jnz loc_1009CD6  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009CD1  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
jmp loc_1009CF8  +
push [ebp+lpMem]  +
call sub_1009BC5  +
test eax eax +
jz loc_1009CD1  +
call ds:GetProcessHeap  +
test eax eax +
jz loc_1009CD1  +
push [ebp+lpMem]  +
push 0  +
push eax  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1009D31  +
cmp [ebp+arg_4] eax +
jz loc_1009D2D  +
mov dl [ebx] +
test dl dl +
jz loc_1009D2D  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1009D15  +
test esi esi +
jnz loc_1009D38  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1009D44  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_1009D85  +
cmp [ebp+arg_4] eax +
jz loc_1009D81  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_1009D81  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_1009D64  +
test esi esi +
jnz loc_1009D8D  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1009D9B  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1009DD0  +
cmp eax esi +
ja loc_1009DD0  +
jz loc_1009DD5  +
jmp loc_1009DDD  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1009DE6  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1009E0E  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009E51  +
push 57h  +
jmp loc_1009E4B  +
push 0  +
push esi  +
call sub_1009A0A  +
test eax eax +
jz loc_1009E46  +
mov ecx [ebp+arg_C] +
cmp ecx eax +
jnb loc_1009E46  +
cmp [ebp+arg_8] 1 +
push dword ptr [ebp+wMatch]  +
lea eax [esi+ecx*2] +
push eax  +
jnz loc_1009E36  +
call ds:StrChrIW  +
jmp loc_1009E3C  +
call ds:StrChrW  +
test eax eax +
jz loc_1009E46  +
sub eax esi +
sar eax 1 +
jmp loc_1009E54  +
push 490h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
xor esi esi +
push edi  +
cmp ebx esi +
jz loc_1009EC3  +
mov edi [ebp+lpString] +
cmp edi esi +
jz loc_1009EC3  +
push esi  +
push edi  +
call sub_1009A0A  +
mov [ebp+arg_0] eax +
cmp eax esi +
jz loc_1009EBC  +
push esi  +
push ebx  +
call sub_1009A0A  +
test eax eax +
jz loc_1009EBC  +
push esi  +
push ebx  +
call sub_1009A0A  +
cmp [ebp+arg_C] eax +
jnb loc_1009EBC  +
cmp [ebp+arg_0] esi +
jbe loc_1009EBC  +
push [ebp+arg_C]  +
movzx eax word ptr [edi+esi*2] +
push [ebp+arg_8]  +
push eax  +
push ebx  +
call sub_1009DF3  +
cmp eax 0FFFFFFFFh +
jnz loc_1009ED8  +
inc esi  +
cmp esi [ebp+arg_0] +
jb loc_1009EA0  +
push 490h  +
jmp loc_1009ECF  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009ED5  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+lpString] +
test edi edi +
jz loc_1009F4B  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_1009F4B  +
push 0  +
push edi  +
call sub_1009A0A  +
push 0  +
push ebx  +
mov esi eax +
call sub_1009A0A  +
test eax eax +
jz loc_1009F3E  +
test esi esi +
jz loc_1009F3E  +
mov ecx [ebp+arg_C] +
cmp ecx esi +
jnb loc_1009F3E  +
sub esi ecx +
cmp esi eax +
jb loc_1009F3E  +
cmp [ebp+arg_8] 1 +
push ebx  +
lea eax [edi+ecx*2] +
push eax  +
jnz loc_1009F34  +
call ds:StrStrIW  +
jmp loc_1009F3A  +
call ds:StrStrW  +
test eax eax +
jnz loc_1009F45  +
push 490h  +
jmp loc_1009F57  +
sub eax edi +
sar eax 1 +
jmp loc_1009F60  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009F5D  +
push 57h  +
call ds:SetLastError  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+lpString] esi +
jz loc_1009F9B  +
push esi  +
push [ebp+lpString]  +
call sub_1009A0A  +
test eax eax +
jz loc_1009F9B  +
push esi  +
push esi  +
push esi  +
push esi  +
push 0FFFFFFFFh  +
push [ebp+lpString]  +
push esi  +
push 1  +
call ds:WideCharToMultiByte  +
dec eax  +
jmp loc_1009F9D  +
xor eax eax +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1009FCA  +
call ds:GetLastError  +
test eax eax +
jnz loc_1009FC6  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100A018  +
cmp dword ptr [esi] 0 +
jnz loc_1009FD4  +
xor eax eax +
inc eax  +
jmp loc_100A018  +
push ebx  +
call ds:GetProcessHeap  +
mov ebx eax +
test ebx ebx +
jz loc_1009FF8  +
push dword ptr [esi]  +
call sub_1009CB4  +
cmp eax 0FFFFFFFFh +
jnz loc_1009FFC  +
push 80004003h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100A017  +
push eax  +
push 0  +
push dword ptr [esi]  +
call memset  +
add esp 0Ch +
push dword ptr [esi]  +
push 0  +
push ebx  +
call ds:HeapFree  +
and dword ptr [esi] 0 +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
call __SEH_prolog4  +
mov esi [ebp+arg_0] +
xor edi edi +
cmp esi edi +
jz loc_100A0E7  +
mov eax [esi] +
cmp eax edi +
jz loc_100A0E7  +
cmp [ebp+dwBytes] edi +
jnz loc_100A055  +
push esi  +
call sub_1009FA7  +
jmp loc_100A0FB  +
push eax  +
call sub_1009BC5  +
test eax eax +
jnz loc_100A066  +
mov [esi] edi +
jmp loc_100A0F9  +
call ds:GetProcessHeap  +
cmp eax edi +
jz loc_100A0F9  +
mov [ebp+ms_exc.disabled] edi +
push [ebp+dwBytes]  +
push dword ptr [esi]  +
push 0Ch  +
push eax  +
call ds:HeapReAlloc  +
cmp eax edi +
jnz loc_100A0A4  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A09B  +
push 8  +
call ds:SetLastError  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100A0F9  +
mov [esi] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
inc eax  +
jmp loc_100A0FB  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-1Ch] eax +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-1Ch] 0C0000017h +
jz loc_100A089  +
cmp dword ptr [ebp-1Ch] 0C0000005h +
jnz loc_100A089  +
push 570h  +
call ds:SetLastError  +
call sub_10097DB  +
jmp loc_100A09B  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A0F9  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
call __SEH_epilog4  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_100A11E  +
cmp edx 7FFFFFFFh +
jbe loc_100A123  +
mov eax 80070057h +
test eax eax +
jl loc_100A139  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1009D01  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_100A158  +
cmp edx 7FFFFFFFh +
jbe loc_100A15D  +
mov eax 80070057h +
test eax eax +
jl loc_100A173  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1009D50  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push ebx  +
xor eax eax +
push edi  +
mov ebx 7FFFFFFFh +
test edx edx +
jz loc_100A195  +
cmp edx ebx +
jbe loc_100A19A  +
mov eax 80070057h +
mov edi [ebp+arg_0] +
test eax eax +
jl loc_100A1D1  +
and [ebp+arg_4] 0 +
xor ecx ecx +
push esi  +
mov esi edx +
mov eax edi +
cmp edx ecx +
jz loc_100A1BE  +
cmp [eax] cx +
jz loc_100A1BA  +
inc eax  +
inc eax  +
dec esi  +
jnz loc_100A1B0  +
cmp esi ecx +
jnz loc_100A1C7  +
mov [ebp+arg_4] 80070057h +
jmp loc_100A1CB  +
mov ecx edx +
sub ecx esi +
mov eax [ebp+arg_4] +
pop esi  +
jmp loc_100A1D3  +
xor ecx ecx +
test eax eax +
jl loc_100A1E7  +
mov eax [ebp+arg_8] +
push ebx  +
sub edx ecx +
push 0  +
lea ecx [edi+ecx*2] +
call sub_1009D50  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_100A207  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_100A20C  +
mov eax 80070057h +
test eax eax +
jl loc_100A225  +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
push 0  +
call sub_1009DA7  +
pop edi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_100A243  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_100A248  +
mov eax 80070057h +
test eax eax +
jl loc_100A262  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 0  +
call sub_1009DA7  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push dword_10133D0  +
call sub_100B78D  +
cmp eax 1 +
jnz loc_100A2F3  +
push edi  +
push 3  +
push dword_10133D0  +
call sub_100BFC6  +
mov edi eax +
test edi edi +
jz loc_100A2E8  +
push esi  +
lea esi [edi-1] +
push esi  +
push 3  +
push dword_10133D0  +
call sub_100C6C8  +
cmp eax 10000h +
jnz loc_100A2E1  +
push esi  +
push 3  +
push dword_10133D0  +
call sub_100C21C  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100A2E1  +
add eax 0Ch +
push eax  +
call sub_1009FA7  +
lea eax [ebp+var_4] +
push eax  +
call sub_1009FA7  +
push esi  +
push 3  +
push dword_10133D0  +
call sub_100BF8F  +
dec edi  +
dec esi  +
test edi edi +
jnz loc_100A297  +
pop esi  +
push offset dword_10133D0  +
call sub_100B823  +
pop edi  +
cmp dword_10133CC 1 +
jnz loc_100A302  +
call ds:WSACleanup  +
xor eax eax +
inc eax  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi [ebp+lpString] +
push 1  +
push [ebp+arg_4]  +
push esi  +
call sub_1009EE4  +
cmp eax 0FFFFFFFFh +
jnz loc_100A32C  +
xor eax eax +
jmp loc_100A32F  +
lea eax [esi+eax*2] +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100A36C  +
cmp [ebp+arg_4] 0 +
jz loc_100A36C  +
cmp [ebp+arg_8] 0 +
jle loc_100A36C  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_100A108  +
test eax eax +
jge loc_100A372  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_100A36E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100A3AF  +
cmp [ebp+arg_4] 0 +
jz loc_100A3AF  +
cmp [ebp+arg_8] 0 +
jle loc_100A3AF  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_100A142  +
test eax eax +
jge loc_100A3B5  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_100A3B1  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_100A3F2  +
cmp [ebp+arg_4] 0 +
jz loc_100A3F2  +
cmp [ebp+arg_8] 0 +
jle loc_100A3F2  +
push [ebp+arg_4]  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call sub_100A17C  +
test eax eax +
jge loc_100A3F8  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop ebp  +
retn 0Ch  +
xor eax eax +
inc eax  +
jmp loc_100A3F4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_100A647  +
mov ebx [ebp+lpString] +
cmp ebx edi +
jz loc_100A647  +
push [ebp+hConsoleOutput]  +
call sub_100993B  +
cmp eax 1 +
jnz loc_100A534  +
mov esi ds:__iob_func +
call esi  +
add eax 20h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_100A44B  +
push 0FFFFFFF5h  +
jmp loc_100A45B  +
call esi  +
add eax 40h +
cmp [ebp+hConsoleOutput] eax +
jnz loc_100A51C  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
push edi  +
push ebx  +
mov [ebp+hConsoleOutput] eax +
mov [ebp+NumberOfCharsWritten] edi +
call sub_1009A0A  +
push edi  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push eax  +
push ebx  +
push [ebp+hConsoleOutput]  +
mov ebx ds:WriteConsoleW +
mov [ebp+var_10] eax +
call ebx  +
test eax eax +
jz loc_100A48F  +
mov eax [ebp+var_10] +
cmp eax [ebp+NumberOfCharsWritten] +
jz loc_100A4F4  +
call ds:GetLastError  +
cmp eax 8 +
jnz loc_100A518  +
mov esi [ebp+lpString] +
push edi  +
push esi  +
call sub_1009A0A  +
mov [ebp+var_10] eax +
mov [ebp+var_C] edi +
cmp eax edi +
jbe loc_100A4F4  +
mov [ebp+cchWideChar] esi +
mov esi 400h +
mov eax [ebp+var_10] +
sub eax [ebp+var_C] +
mov [ebp+lpString] esi +
cmp eax esi +
ja loc_100A4C6  +
mov [ebp+lpString] eax +
push edi  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push [ebp+lpString]  +
push [ebp+cchWideChar]  +
push [ebp+hConsoleOutput]  +
call ebx  +
test eax eax +
jz loc_100A4FC  +
mov eax [ebp+lpString] +
cmp eax [ebp+NumberOfCharsWritten] +
jnz loc_100A4FC  +
add [ebp+var_C] esi +
mov eax [ebp+var_C] +
add [ebp+cchWideChar] 800h +
cmp eax [ebp+var_10] +
jb loc_100A4B6  +
xor eax eax +
inc eax  +
jmp loc_100A65B  +
call ds:__iob_func  +
add eax 40h +
push eax  +
call sub_1009862  +
call sub_100A269  +
push 1  +
call ds:ExitProcess  +
call esi  +
jmp loc_100A502  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A659  +
push 42Bh  +
jmp loc_100A653  +
push edi  +
push ebx  +
call sub_1009A0A  +
push 100h  +
push edi  +
mov esi offset unk_10133E0 +
push esi  +
mov [ebp+var_10] eax +
call memset  +
add esp 0Ch +
mov [ebp+var_C] edi +
cmp [ebp+var_10] edi +
jbe loc_100A4F4  +
mov ebx 0FFh +
mov eax [ebp+var_10] +
mov ecx [ebp+var_C] +
sub eax ecx +
mov [ebp+NumberOfCharsWritten] edi +
mov [ebp+cchWideChar] ebx +
cmp eax ebx +
ja loc_100A574  +
mov [ebp+cchWideChar] eax +
mov eax [ebp+lpString] +
lea eax [eax+ecx*2] +
mov [ebp+lpWideCharStr] eax +
push edi  +
push edi  +
push edi  +
push edi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_100A5D1  +
cmp eax ebx +
jbe loc_100A5DF  +
add eax 0FFFFFF01h +
cmp eax 3 +
jbe loc_100A5B1  +
shr eax 1 +
sub [ebp+cchWideChar] eax +
jmp loc_100A5B4  +
dec [ebp+cchWideChar]  +
mov [ebp+NumberOfCharsWritten] edi +
cmp [ebp+cchWideChar] edi +
jnz loc_100A57D  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A5D1  +
push 42Bh  +
call ds:SetLastError  +
call ds:__iob_func  +
add eax 20h +
jmp loc_100A505  +
cmp eax [ebp+cchWideChar] +
jnb loc_100A5E7  +
mov [ebp+cchWideChar] eax +
push 100h  +
push edi  +
push esi  +
call memset  +
add esp 0Ch +
push edi  +
push edi  +
push ebx  +
push esi  +
push [ebp+cchWideChar]  +
push [ebp+lpWideCharStr]  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov [ebp+NumberOfCharsWritten] eax +
cmp eax edi +
jz loc_100A5D1  +
mov eax [ebp+cchWideChar] +
add [ebp+var_C] eax +
push esi  +
push offset aS_0  +
push [ebp+hConsoleOutput]  +
call ds:fprintf  +
push [ebp+hConsoleOutput]  +
call ds:fflush  +
mov eax [ebp+var_C] +
add esp 10h +
cmp [ebp+var_10] eax +
ja loc_100A55F  +
jmp loc_100A4F4  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A659  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
xor eax eax +
push esi  +
push edi  +
mov word ptr [ebp+String] ax +
xor esi esi +
lea edi [ebp-22h] +
stos   +
stos   +
xor eax eax +
mov [ebp+var_18] esi +
lea edi [ebp+var_14] +
stos   +
stos   +
stos   +
mov [ebp+var_44] ecx +
mov [ebp+var_28] esi +
mov [ebp+NumberOfBytesRead] esi +
mov [ebp+NumberOfCharsWritten] esi +
mov [ebp+dwMode] esi +
stos   +
mov [ebp+var_40] esi +
cmp ecx esi +
jnz loc_100A6C6  +
call ds:GetLastError  +
test eax eax +
jnz loc_100A6BF  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100A8C1  +
push ebx  +
mov ebx ds:GetStdHandle +
push 0FFFFFFF6h  +
call ebx  +
mov edi eax +
mov [ebp+hConsoleHandle] edi +
cmp edi esi +
jz loc_100A87E  +
cmp edi 0Fh +
jz loc_100A6F6  +
cmp edi 3 +
jz loc_100A6F6  +
cmp edi 0FFFFFFFFh +
jz loc_100A6F6  +
mov [ebp+var_40] 1 +
jmp loc_100A712  +
lea eax [ebp+dwMode] +
push eax  +
push edi  +
call ds:GetConsoleMode  +
push 1  +
push edi  +
call ds:SetConsoleMode  +
test eax eax +
jz loc_100A87E  +
xor eax eax +
mov esi ds:WriteConsoleW +
lea edi [ebp+String] +
stos   +
stos   +
stos   +
xor eax eax +
lea edi [ebp+var_18] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov edi offset aC +
cmp [ebp+var_40] 1 +
push 0  +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
push 1  +
jnz loc_100A784  +
lea eax [ebp-29h] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadFile  +
test eax eax +
jz loc_100A87E  +
cmp [ebp+NumberOfBytesRead] 0 +
jz loc_100A882  +
mov al [ebp+var_29] +
mov [ebp+String] al +
lea eax [ebp+NumberOfBytesRead] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
lea eax [ebp+String] +
push eax  +
mov [ebp+NumberOfBytesRead] 0Ah +
call sub_1009AE1  +
movzx eax word ptr [ebp+var_18] +
mov [ebp+Buffer] eax +
jmp loc_100A79C  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+hConsoleHandle]  +
call ds:ReadConsoleW  +
test eax eax +
jz loc_100A872  +
mov eax [ebp+Buffer] +
cmp ax 0Dh +
jz loc_100A882  +
cmp ax 8 +
jnz loc_100A82A  +
cmp [ebp+var_28] 0 +
jz loc_100A730  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_100A22E  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 0  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_100A22E  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
push 8  +
push edi  +
lea eax [ebp+var_18] +
push 0Ah  +
push eax  +
call sub_100A22E  +
add esp 10h +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
dec [ebp+var_28]  +
jmp loc_100A730  +
mov ecx [ebp+arg_4] +
dec ecx  +
cmp [ebp+var_28] ecx +
jnz loc_100A842  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset asc_1001AD0  +
jmp loc_100A866  +
cmp ax 0Ah +
jz loc_100A730  +
mov edx [ebp+var_28] +
mov ecx [ebp+var_44] +
inc [ebp+var_28]  +
push 0  +
mov [ecx+edx*2] ax +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 1  +
push offset Buffer  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
jmp loc_100A730  +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
xor eax eax +
jmp loc_100A8C0  +
push [ebp+dwMode]  +
mov ecx [ebp+var_44] +
mov edx [ebp+var_28] +
push [ebp+hConsoleHandle]  +
xor eax eax +
mov [ecx+edx*2] ax +
call ds:SetConsoleMode  +
push 0Ah  +
push offset asc_1001AC8  +
lea eax [ebp+var_18] +
push eax  +
call sub_100A37C  +
push 0  +
lea eax [ebp+NumberOfCharsWritten] +
push eax  +
push 2  +
lea eax [ebp+var_18] +
push eax  +
push 0FFFFFFF5h  +
call ebx  +
push eax  +
call esi  +
xor eax eax +
inc eax  +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1008775  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_100A8EE  +
cmp [ebp+arg_8] 0 +
jnz loc_100A8EE  +
xor eax eax +
jmp loc_100AA42  +
call sub_1009601  +
test eax eax +
jz loc_100A8E7  +
push ebx  +
push esi  +
push edi  +
push 3  +
pop esi  +
push esi  +
push dword_10133D0  +
call sub_100BFC6  +
mov ebx [ebp+arg_0] +
mov edi eax +
cmp edi ebx +
ja loc_100A93B  +
push esi  +
push dword_10133D0  +
call sub_100BFFA  +
test eax eax +
jz loc_100AA06  +
mov ecx ebx +
sub ecx edi +
inc ecx  +
push ecx  +
push eax  +
call sub_100BE73  +
cmp eax 0FFFFFFFFh +
jz loc_100AA06  +
push ebx  +
push esi  +
push dword_10133D0  +
call sub_100C6C8  +
mov edi offset aBuffer +
test eax eax +
jz loc_100A989  +
push ebx  +
push esi  +
push dword_10133D0  +
call sub_100C21C  +
mov esi eax +
test esi esi +
jz loc_100AA06  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100AA06  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jnz loc_100A9C8  +
mov edi [ebp+arg_8] +
jmp loc_100A9D3  +
push 10h  +
call sub_1009C0B  +
mov esi eax +
mov [ebp+arg_0] esi +
test esi esi +
jz loc_100AA06  +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
push 7  +
push edi  +
push esi  +
call sub_100A339  +
push esi  +
push ebx  +
push 3  +
push dword_10133D0  +
call sub_100C581  +
test eax eax +
jnz loc_100A968  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1009FA7  +
jmp loc_100AA06  +
push 0  +
push ebx  +
call sub_1009A0A  +
mov edi eax +
inc edi  +
mov eax [esi+8] +
cmp edi eax +
ja loc_100A9E9  +
cmp edi 100h +
jbe loc_100AA00  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_100AA00  +
test eax eax +
lea eax [edi+edi] +
push eax  +
jnz loc_100AA0A  +
call sub_1009C0B  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100AA06  +
mov [esi+8] edi +
cmp dword ptr [esi+0Ch] 0 +
jnz loc_100AA15  +
xor eax eax +
jmp loc_100AA3F  +
lea eax [esi+0Ch] +
push eax  +
call sub_100A022  +
jmp loc_100A9F9  +
test ebx ebx +
jz loc_100AA25  +
push edi  +
push ebx  +
push dword ptr [esi+0Ch]  +
call sub_100A37C  +
jmp loc_100AA3C  +
cmp [ebp+arg_C] 1 +
jnz loc_100AA3C  +
lea eax [edi+edi] +
push eax  +
push 0  +
push dword ptr [esi+0Ch]  +
call memset  +
add esp 0Ch +
mov eax [esi+0Ch] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+lpString] +
push esi  +
push edi  +
mov esi offset asc_1001ADC +
lea edi [ebp+var_C] +
movs   +
mov [ebp+lpStart] eax +
xor eax eax +
mov [ebp+var_18] eax +
mov [ebp+var_14] eax +
movs   +
cmp ebx eax +
jz loc_100AB48  +
push eax  +
push ebx  +
call sub_1009A0A  +
test eax eax +
jz loc_100AB48  +
cmp [ebp+lpStart] 0 +
jz loc_100AAA7  +
push 0  +
push [ebp+lpStart]  +
call sub_1009A0A  +
test eax eax +
jnz loc_100AAAD  +
lea eax [ebp+var_C] +
mov [ebp+lpStart] eax +
mov edi [ebp+arg_8] +
mov esi ebx +
cmp edi 3 +
jz loc_100AABC  +
cmp edi 1 +
jnz loc_100AADE  +
cmp word ptr [ebx] 0 +
jz loc_100AADB  +
movzx eax word ptr [esi] +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_100AADB  +
inc esi  +
inc esi  +
cmp word ptr [esi] 0 +
jnz loc_100AAC2  +
mov [ebp+var_18] esi +
cmp edi 3 +
jz loc_100AAE8  +
cmp edi 2 +
jnz loc_100AB2A  +
cmp edi 2 +
jnz loc_100AAEF  +
mov esi ebx +
movzx eax word ptr [esi] +
test ax ax +
jz loc_100AB2A  +
push eax  +
push [ebp+lpStart]  +
call ds:StrChrW  +
test eax eax +
jz loc_100AB10  +
cmp [ebp+var_14] 0 +
jnz loc_100AB14  +
mov [ebp+var_14] esi +
jmp loc_100AB14  +
and [ebp+var_14] 0 +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_100AAF7  +
mov eax [ebp+var_14] +
test eax eax +
jz loc_100AB2A  +
xor ecx ecx +
mov [eax] cx +
cmp [ebp+var_18] ebx +
jbe loc_100AB44  +
push 0  +
push [ebp+var_18]  +
call sub_1009A0A  +
inc eax  +
push eax  +
push [ebp+var_18]  +
push ebx  +
call sub_100A37C  +
mov eax ebx +
jmp loc_100AB4D  +
mov eax offset dword_1001AB8 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008775  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
jz loc_100ABA5  +
cmp [ebp+arg_4] edi +
jz loc_100ABA5  +
push [ebp+arg_C]  +
push offset dword_1001AB8  +
push esi  +
call sub_100A37C  +
cmp [ebp+arg_8] edi +
jbe loc_100ABA1  +
push [ebp+arg_C]  +
push [ebp+arg_4]  +
push esi  +
call sub_100A3BF  +
test eax eax +
jz loc_100ABA1  +
inc edi  +
cmp edi [ebp+arg_8] +
jb loc_100AB8B  +
mov eax esi +
jmp loc_100ABBC  +
call ds:GetLastError  +
test eax eax +
jnz loc_100ABB7  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1001AB8 +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_4] esi +
jnz loc_100ABEA  +
call ds:GetLastError  +
test eax eax +
jnz loc_100ABE6  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100AC51  +
cmp [ebp+arg_0] esi +
jnz loc_100ABFC  +
push [ebp+arg_4]  +
call sub_1009774  +
xor eax eax +
inc eax  +
jmp loc_100AC51  +
push edi  +
push 1  +
add esi 100h +
push esi  +
push 0  +
push 5  +
call sub_100A8D6  +
mov edi eax +
test edi edi +
jz loc_100AC3C  +
lea eax [ebp+arg_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
push edi  +
call sub_100A1F2  +
cmp eax 8007007Ah +
jz loc_100ABFD  +
test eax eax +
jge loc_100AC4A  +
movzx eax ax +
push eax  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100AC50  +
call ds:GetLastError  +
test eax eax +
jnz loc_100AC38  +
push 8  +
jmp loc_100AC32  +
push edi  +
call sub_1009774  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+Error] 0 +
push ebx  +
push esi  +
push 1  +
mov esi 100h +
push esi  +
push 0  +
push 0  +
call sub_100A8D6  +
mov ebx eax +
test ebx ebx +
jnz loc_100AC81  +
push 8  +
pop eax  +
jmp loc_100ACC3  +
push 1  +
push esi  +
push 0  +
push 1  +
call sub_100A8D6  +
mov esi eax +
test esi esi +
jz loc_100AC7C  +
push esi  +
call sub_1009CB4  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
push ebx  +
call sub_1009CB4  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
lea eax [ebp+Error] +
push eax  +
call WNetGetLastErrorW  +
test eax eax +
jnz loc_100ACC3  +
push ebx  +
call sub_1009774  +
test eax eax +
jz loc_100AC7C  +
mov eax [ebp+Error] +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
xor ebx ebx +
mov [ebp+lpString] ebx +
cmp [ebp+dwMessageId] ebx +
jnz loc_100ACF9  +
call ds:GetLastError  +
test eax eax +
jnz loc_100ACEF  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1001AB8 +
jmp loc_100AE06  +
call sub_1009601  +
test eax eax +
jz loc_100ACEF  +
push esi  +
push 1  +
push dword_10133D0  +
call sub_100BFC6  +
mov esi eax +
cmp esi [ebp+arg_8] +
ja loc_100AD56  +
push 1  +
push dword_10133D0  +
call sub_100BFFA  +
cmp eax ebx +
jz loc_100AD3A  +
mov ecx [ebp+arg_8] +
sub ecx esi +
inc ecx  +
push ecx  +
push eax  +
call sub_100BE73  +
cmp eax 0FFFFFFFFh +
jnz loc_100AD56  +
call ds:GetLastError  +
test eax eax +
jnz loc_100AD4C  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001AB8 +
jmp loc_100AE05  +
mov esi 80h +
push edi  +
push 1  +
add esi esi +
push esi  +
push ebx  +
push 4  +
call sub_100A8D6  +
mov edi eax +
cmp edi ebx +
jz loc_100ADCA  +
push esi  +
push edi  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call ds:LoadStringW  +
cmp eax ebx +
jnz loc_100ADAD  +
call ds:GetLastError  +
cmp eax 716h +
jnz loc_100ADDC  +
push ebx  +
push ebx  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
push 0B00h  +
call ds:FormatMessageW  +
cmp eax ebx +
jz loc_100ADDC  +
mov edi [ebp+lpString] +
lea ecx [esi-1] +
cmp eax ecx +
jnb loc_100AD5C  +
push ebx  +
push edi  +
push [ebp+arg_8]  +
push 1  +
push dword_10133D0  +
call sub_100C5BB  +
test eax eax +
jnz loc_100ADE3  +
call ds:GetLastError  +
test eax eax +
jnz loc_100ADDC  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001AB8 +
jmp loc_100AE04  +
cmp [ebp+lpString] ebx +
jz loc_100ADF4  +
push [ebp+lpString]  +
call ds:LocalFree  +
mov [ebp+lpString] ebx +
push [ebp+arg_8]  +
push 1  +
push dword_10133D0  +
call sub_100C253  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp [ebp+lpString] ebx +
jz loc_100AFB5  +
push ebx  +
push [ebp+lpString]  +
call sub_1009A0A  +
test eax eax +
jz loc_100AFB5  +
call sub_1009601  +
test eax eax +
jz loc_100AFC7  +
call sub_1009601  +
test eax eax +
jz loc_100AF6F  +
push 3  +
pop esi  +
push esi  +
push dword_10133D0  +
call sub_100BFC6  +
mov edi eax +
cmp edi ebx +
ja loc_100AE92  +
push esi  +
push dword_10133D0  +
call sub_100BFFA  +
cmp eax ebx +
jz loc_100AF6F  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100BE73  +
cmp eax 0FFFFFFFFh +
jz loc_100AF6F  +
push ebx  +
push esi  +
push dword_10133D0  +
call sub_100C6C8  +
mov edi offset aBuffer +
test eax eax +
jz loc_100AF0A  +
push ebx  +
push esi  +
push dword_10133D0  +
call sub_100C21C  +
mov esi eax +
cmp esi ebx +
jz loc_100AF6F  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100AF6F  +
push ebx  +
push [ebp+lpString]  +
call sub_1009A0A  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_100AEF6  +
cmp edi 100h +
jbe loc_100AF57  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_100AF57  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_100AF47  +
call sub_1009C0B  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_100AF52  +
push 10h  +
call sub_1009C0B  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_100AF6F  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100A339  +
push esi  +
push ebx  +
push 3  +
push dword_10133D0  +
call sub_100C581  +
test eax eax +
jnz loc_100AEBF  +
lea eax [ebp+var_8] +
push eax  +
call sub_1009FA7  +
jmp loc_100AF6F  +
lea eax [esi+0Ch] +
push eax  +
call sub_100A022  +
test eax eax +
jz loc_100AF6F  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_100AF6F  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_100A37C  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_100AF7D  +
call ds:GetLastError  +
test eax eax +
jnz loc_100AFC7  +
push 8  +
jmp loc_100AFC1  +
mov edi ds:_errno +
call edi  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
call ds:wcstod  +
fstp  qword ptr [ebp-0Ch] +
pop ecx  +
pop ecx  +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_100AFB5  +
cmp [ebp+var_4] ebx +
jz loc_100AFB0  +
push ebx  +
push [ebp+var_4]  +
call sub_1009A0A  +
test eax eax +
jnz loc_100AFB5  +
fld  qword ptr [ebp-0Ch] +
jmp loc_100AFC9  +
call ds:GetLastError  +
test eax eax +
jnz loc_100AFC7  +
push 57h  +
call ds:SetLastError  +
fldz   +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString]  +
call sub_100AE10  +
fstp  st +
call ds:GetLastError  +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_100B1BE  +
cmp [ebp+lpString] ebx +
jz loc_100B1BE  +
call sub_1009601  +
test eax eax +
jz loc_100B1D0  +
call sub_1009601  +
test eax eax +
jz loc_100B154  +
push 3  +
pop esi  +
push esi  +
push dword_10133D0  +
call sub_100BFC6  +
mov edi eax +
cmp edi ebx +
ja loc_100B077  +
push esi  +
push dword_10133D0  +
call sub_100BFFA  +
cmp eax ebx +
jz loc_100B154  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100BE73  +
cmp eax 0FFFFFFFFh +
jz loc_100B154  +
push ebx  +
push esi  +
push dword_10133D0  +
call sub_100C6C8  +
mov edi offset aBuffer +
test eax eax +
jz loc_100B0EF  +
push ebx  +
push esi  +
push dword_10133D0  +
call sub_100C21C  +
mov esi eax +
cmp esi ebx +
jz loc_100B154  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100B154  +
push ebx  +
push [ebp+lpString]  +
call sub_1009A0A  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_100B0DB  +
cmp edi 100h +
jbe loc_100B13C  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_100B13C  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_100B12C  +
call sub_1009C0B  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_100B137  +
push 10h  +
call sub_1009C0B  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_100B154  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100A339  +
push esi  +
push ebx  +
push 3  +
push dword_10133D0  +
call sub_100C581  +
test eax eax +
jnz loc_100B0A4  +
lea eax [ebp+var_8] +
push eax  +
call sub_1009FA7  +
jmp loc_100B154  +
lea eax [esi+0Ch] +
push eax  +
call sub_100A022  +
test eax eax +
jz loc_100B154  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_100B154  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_100A37C  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_100B162  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B1D0  +
push 8  +
jmp loc_100B1CA  +
push 3  +
push ebx  +
push esi  +
call sub_100AA4B  +
push ebx  +
push esi  +
call sub_1009A0A  +
test eax eax +
jz loc_100B1BE  +
mov edi ds:_errno +
call edi  +
push [ebp+arg_4]  +
mov [eax] ebx +
cmp word ptr [esi] 2Dh +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_100B196  +
call ds:wcstol  +
jmp loc_100B19C  +
call ds:wcstoul  +
add esp 0Ch +
mov esi eax +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_100B1BE  +
cmp [ebp+var_4] ebx +
jz loc_100B1BA  +
push ebx  +
push [ebp+var_4]  +
call sub_1009A0A  +
test eax eax +
jnz loc_100B1BE  +
mov eax esi +
jmp loc_100B1D2  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B1D0  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
add eax 0FFFFFFFEh +
push esi  +
push edi  +
mov [ebp+var_4] ebx +
cmp eax 22h +
ja loc_100B3A1  +
cmp [ebp+lpString] ebx +
jz loc_100B3A1  +
call sub_1009601  +
test eax eax +
jz loc_100B32D  +
push 3  +
pop esi  +
push esi  +
push dword_10133D0  +
call sub_100BFC6  +
mov edi eax +
cmp edi ebx +
ja loc_100B250  +
push esi  +
push dword_10133D0  +
call sub_100BFFA  +
cmp eax ebx +
jz loc_100B32D  +
xor ecx ecx +
inc ecx  +
sub ecx edi +
push ecx  +
push eax  +
call sub_100BE73  +
cmp eax 0FFFFFFFFh +
jz loc_100B32D  +
push ebx  +
push esi  +
push dword_10133D0  +
call sub_100C6C8  +
mov edi offset aBuffer +
test eax eax +
jz loc_100B2C8  +
push ebx  +
push esi  +
push dword_10133D0  +
call sub_100C21C  +
mov esi eax +
cmp esi ebx +
jz loc_100B32D  +
push 7  +
push edi  +
push esi  +
call ds:_memicmp  +
add esp 0Ch +
test eax eax +
jnz loc_100B32D  +
push ebx  +
push [ebp+lpString]  +
call sub_1009A0A  +
mov edi eax +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
ja loc_100B2B4  +
cmp edi 100h +
jbe loc_100B315  +
lea ecx [edi+edi] +
cmp ecx eax +
jnb loc_100B315  +
cmp eax ebx +
lea eax [edi+edi] +
push eax  +
jnz loc_100B305  +
call sub_1009C0B  +
mov [esi+0Ch] eax +
cmp eax ebx +
jmp loc_100B310  +
push 10h  +
call sub_1009C0B  +
mov esi eax +
mov [ebp+var_8] esi +
cmp esi ebx +
jz loc_100B32D  +
push 7  +
push edi  +
mov [esi+8] ebx +
push esi  +
mov [esi+0Ch] ebx +
call sub_100A339  +
push esi  +
push ebx  +
push 3  +
push dword_10133D0  +
call sub_100C581  +
test eax eax +
jnz loc_100B27D  +
lea eax [ebp+var_8] +
push eax  +
call sub_1009FA7  +
jmp loc_100B32D  +
lea eax [esi+0Ch] +
push eax  +
call sub_100A022  +
test eax eax +
jz loc_100B32D  +
mov [esi+8] edi +
cmp [esi+0Ch] ebx +
jz loc_100B32D  +
push edi  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_100A37C  +
mov esi [esi+0Ch] +
cmp esi ebx +
jnz loc_100B33B  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B3B3  +
push 8  +
jmp loc_100B3AD  +
push 3  +
push ebx  +
push esi  +
call sub_100AA4B  +
push ebx  +
push esi  +
call sub_1009A0A  +
test eax eax +
jz loc_100B3B3  +
cmp [ebp+arg_8] ebx +
jnz loc_100B35A  +
cmp word ptr [esi] 2Dh +
jz loc_100B3B3  +
mov edi ds:_errno +
call edi  +
cmp [ebp+arg_8] 1 +
push [ebp+arg_4]  +
mov [eax] ebx +
lea eax [ebp+var_4] +
push eax  +
push esi  +
jnz loc_100B37A  +
call ds:wcstol  +
jmp loc_100B380  +
call ds:wcstoul  +
add esp 0Ch +
call edi  +
cmp dword ptr [eax] 22h +
jz loc_100B3B3  +
cmp [ebp+var_4] ebx +
jz loc_100B39C  +
push ebx  +
push [ebp+var_4]  +
call sub_1009A0A  +
test eax eax +
jnz loc_100B3B3  +
xor eax eax +
inc eax  +
jmp loc_100B3B5  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B3B3  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp dword ptr [ebp+arg_0] ebx +
jz loc_100B47F  +
cmp dword ptr [ebp+lpString] ebx +
jz loc_100B47F  +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_1009A0A  +
mov edi eax +
push 1  +
add edi 4 +
push edi  +
push ebx  +
push ebx  +
call sub_100A8D6  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_100B410  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B491  +
push 8  +
jmp loc_100B48B  +
push ebx  +
push dword ptr [ebp+arg_0]  +
call sub_1009A0A  +
mov esi eax +
push 1  +
add esi 4 +
push esi  +
push ebx  +
push 1  +
call sub_100A8D6  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_100B3FE  +
push dword ptr [ebp+lpString]  +
mov ebx offset aS_1 +
push ebx  +
push edi  +
push [ebp+var_8]  +
call sub_100A22E  +
add esp 10h +
test eax eax +
jge loc_100B44F  +
movzx eax ax +
push eax  +
jmp loc_100B48B  +
push dword ptr [ebp+arg_0]  +
push ebx  +
push esi  +
push [ebp+var_4]  +
call sub_100A22E  +
add esp 10h +
test eax eax +
jl loc_100B449  +
push 0  +
push [ebp+arg_8]  +
push [ebp+var_4]  +
push [ebp+var_8]  +
call sub_1009EE4  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov eax ecx +
jmp loc_100B493  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B491  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push 0  +
push [ebp+lpString]  +
call sub_100AA4B  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
mov ecx [ebp+arg_0] +
push esi  +
push edi  +
xor esi esi +
xor eax eax +
lea edi [ebp+var_8] +
mov dword ptr [ebp+String] esi +
mov [ebp+var_18] ecx +
stos   +
cmp ecx esi +
jnz loc_100B500  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B4F6  +
push 57h  +
call ds:SetLastError  +
mov eax offset dword_1001AB8 +
jmp loc_100B60D  +
push ecx  +
call sub_1009F6C  +
mov [ebp+var_14] eax +
cmp eax [ebp+arg_4] +
ja loc_100B511  +
mov eax [ebp+arg_4] +
push ebx  +
xor ebx ebx +
inc ebx  +
push ebx  +
lea edi [eax+0Ah] +
push edi  +
push esi  +
push esi  +
call sub_100A8D6  +
mov [ebp+var_10] eax +
cmp eax esi +
jz loc_100B53F  +
mov eax [ebp+arg_4] +
cmp [ebp+var_14] eax +
jnb loc_100B59A  +
push ebx  +
push edi  +
push esi  +
push ebx  +
call sub_100A8D6  +
mov esi eax +
test esi esi +
jnz loc_100B55B  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B551  +
push 8  +
call ds:SetLastError  +
mov eax offset dword_1001AB8 +
jmp loc_100B60C  +
mov eax [ebp+arg_4] +
sub eax [ebp+var_14] +
push edi  +
push eax  +
push offset asc_1001AF0  +
push esi  +
call sub_100AB63  +
push edi  +
cmp [ebp+arg_8] ebx +
jnz loc_100B583  +
push esi  +
push [ebp+var_10]  +
call sub_100A37C  +
push edi  +
push [ebp+var_18]  +
jmp loc_100B590  +
push [ebp+var_18]  +
push [ebp+var_10]  +
call sub_100A37C  +
push edi  +
push esi  +
push [ebp+var_10]  +
call sub_100A3BF  +
jmp loc_100B5F9  +
xor ebx ebx +
cmp eax esi +
jbe loc_100B5F9  +
mov eax [ebp+var_18] +
mov [ebp+var_14] eax +
push 2  +
push [ebp+var_14]  +
lea eax [ebp+String] +
push eax  +
call sub_100A37C  +
lea eax [ebp+String] +
push eax  +
call sub_1009F6C  +
mov esi eax +
add esi ebx +
cmp esi [ebp+arg_4] +
ja loc_100B5DE  +
push edi  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_10]  +
call sub_100A3BF  +
add [ebp+var_14] 2 +
mov ebx esi +
cmp esi [ebp+arg_4] +
jb loc_100B5A6  +
cmp ebx [ebp+arg_4] +
jnb loc_100B5F9  +
mov esi [ebp+arg_4] +
sub esi ebx +
push edi  +
push offset asc_1001AF0  +
push [ebp+var_10]  +
call sub_100A3BF  +
dec esi  +
jnz loc_100B5E8  +
mov eax [ebp+arg_4] +
inc eax  +
push eax  +
push [ebp+var_10]  +
push [ebp+var_18]  +
call sub_100A37C  +
mov eax [ebp+var_18] +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1008775  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
push edi  +
cmp [ebp+lpString] ebx +
jz loc_100B729  +
cmp [ebp+hConsoleOutput] ebx +
jz loc_100B729  +
cmp [ebp+arg_4] ebx +
jnz loc_100B654  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
jmp loc_100B73D  +
cmp [ebp+arg_8] ebx +
jnz loc_100B6E9  +
or [ebp+var_8] 0FFFFFFFFh +
lea eax [ebp+arg_10] +
mov [ebp+Arguments] eax +
xor eax eax +
cmp [ebp+var_8] 0FFFFFFFFh +
push 1  +
setnz al  +
dec eax  +
and eax 800h +
add eax 800h +
add ebx eax +
push ebx  +
push 0  +
push 3  +
call sub_100A8D6  +
mov edi eax +
test edi edi +
jz loc_100B6D6  +
lea eax [ebp+Arguments] +
push eax  +
lea eax [ebx-1] +
push eax  +
push edi  +
push 0  +
push 0  +
push [ebp+lpString]  +
push 400h  +
call ds:FormatMessageW  +
mov [ebp+var_8] eax +
test eax eax +
jnz loc_100B6C6  +
call ds:GetLastError  +
test eax eax +
jz loc_100B6E4  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_100B73B  +
and [ebp+Arguments] 0 +
cmp [ebp+var_8] 0 +
jz loc_100B661  +
push edi  +
jmp loc_100B647  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B73B  +
push 8  +
jmp loc_100B735  +
xor eax eax +
inc eax  +
jmp loc_100B73D  +
push 1  +
add ebx 800h +
push ebx  +
push 0  +
lea eax [ebp+arg_10] +
push 3  +
mov [ebp+Arguments] eax +
call sub_100A8D6  +
mov edi eax +
test edi edi +
jz loc_100B6D6  +
push [ebp+Arguments]  +
push [ebp+lpString]  +
push ebx  +
push edi  +
call sub_100A1F2  +
and [ebp+Arguments] 0 +
cmp eax 8007007Ah +
jz loc_100B6E9  +
test eax eax +
jge loc_100B6D0  +
movzx eax ax +
push eax  +
jmp loc_100B735  +
call ds:GetLastError  +
test eax eax +
jnz loc_100B73B  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
inc dword_10133DC  +
mov eax dword_10133DC +
push 0Ah  +
pop ecx  +
xor edx edx +
div  ecx +
add edx 4 +
push edx  +
push [ebp+dwMessageId]  +
push [ebp+lpSource]  +
call sub_100ACCC  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+dwMessageId]  +
push 0  +
call sub_100B746  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_100B7A3  +
cmp dword ptr [eax] 9 +
jnz loc_100B7A3  +
xor eax eax +
inc eax  +
jmp loc_100B7A5  +
xor eax eax +
pop ebp  +
retn 4  +
***
xor ecx ecx +
cmp eax ecx +
jnz loc_100B7BE  +
xor eax eax +
retn   +
mov [eax+4] ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 9 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_100B78D  +
test eax eax +
jz loc_100B819  +
mov eax [esi+8] +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_100B80D  +
push edi  +
mov edi [eax+10h] +
push eax  +
call sub_100B91A  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1009FA7  +
mov eax edi +
mov [ebp+arg_0] eax +
test edi edi +
jnz loc_100B7F1  +
pop edi  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
and dword ptr [esi+0Ch] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov ecx [esi] +
push ecx  +
call sub_100B78D  +
test eax eax +
jz loc_100B844  +
push ecx  +
call sub_100B7D3  +
push esi  +
call sub_1009FA7  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_100B78D  +
test eax eax +
jz loc_100B863  +
mov eax [ecx+4] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ecx  +
call sub_100B78D  +
test eax eax +
jnz loc_100B882  +
xor eax eax +
jmp loc_100B8A7  +
mov edx [ebp+arg_4] +
cmp [ecx+4] edx +
jbe loc_100B87E  +
mov eax [ecx+8] +
push esi  +
xor esi esi +
cmp edx 1 +
jb loc_100B89D  +
dec edx  +
mov esi eax +
mov eax [eax+10h] +
jnz loc_100B895  +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz loc_100B8A6  +
mov [ecx] esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_100B78D  +
test eax eax +
jnz loc_100B8C8  +
or eax 0FFFFFFFFh +
jmp loc_100B910  +
cmp dword ptr [esi+4] 0FFFFFFFFh +
jz loc_100B8C3  +
push 14h  +
call sub_1009C0B  +
test eax eax +
jz loc_100B8C3  +
mov ecx [ebp+arg_4] +
and dword ptr [eax+10h] 0 +
mov [eax+4] ecx +
mov ecx [ebp+arg_8] +
mov [eax+8] ecx +
mov ecx [ebp+arg_C] +
mov [eax+0Ch] ecx +
mov dword ptr [eax] 63h +
inc dword ptr [esi+4]  +
cmp dword ptr [esi+8] 0 +
jnz loc_100B903  +
mov [esi+8] eax +
jmp loc_100B909  +
mov ecx [esi+0Ch] +
mov [ecx+10h] eax +
mov [esi+0Ch] eax +
mov eax [esi+4] +
dec eax  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
test edx edx +
jz loc_100B98E  +
mov eax [edx+4] +
mov ecx 70000h +
cmp eax ecx +
ja loc_100B959  +
jz loc_100B975  +
cmp eax 20000h +
jz loc_100B975  +
cmp eax 30000h +
jz loc_100B975  +
cmp eax 40000h +
jz loc_100B975  +
cmp eax 50000h +
jz loc_100B975  +
cmp eax 60000h +
jz loc_100B975  +
jmp loc_100B98E  +
cmp eax 80000h +
jz loc_100B980  +
cmp eax 90000h +
jz loc_100B975  +
cmp eax 0A0000h +
jz loc_100B975  +
cmp eax 0B0000h +
jnz loc_100B98E  +
add edx 0Ch +
push edx  +
call sub_1009FA7  +
jmp loc_100B98E  +
push esi  +
lea esi [edx+0Ch] +
push esi  +
call sub_100B823  +
and dword ptr [esi] 0 +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_100B78D  +
test eax eax +
jnz loc_100B9B2  +
or eax 0FFFFFFFFh +
jmp loc_100BAC1  +
xor edx edx +
push esi  +
push edi  +
mov edi [ebx+8] +
mov [ebp+arg_0] edx +
cmp [ebx+4] edx +
jbe loc_100BABC  +
mov esi [ebp+lpString2] +
mov eax [ebp+arg_4] +
cmp [edi+4] eax +
jnz loc_100BAAC  +
mov ecx 70000h +
cmp eax ecx +
ja loc_100BA40  +
jz loc_100BA2E  +
cmp eax 20000h +
jz loc_100BA12  +
cmp eax 30000h +
jz loc_100BAA3  +
cmp eax 40000h +
jz loc_100BAA3  +
cmp eax 60000h +
jnz loc_100BAAC  +
mov eax [edi+0Ch] +
fld  dword ptr [eax] +
fld  dword ptr [esi] +
fucompp   +
jmp loc_100BA35  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push esi  +
push dword ptr [edi+0Ch]  +
call sub_1009A2B  +
test eax eax +
jz loc_100BAC6  +
mov edx [ebp+arg_0] +
jmp loc_100BAAC  +
mov eax [edi+0Ch] +
fld  qword ptr [esi] +
fcomp  qword ptr [eax] +
fnstsw  ax +
test ah 44h +
jp loc_100BAAC  +
mov eax edx +
jmp loc_100BABF  +
cmp eax 90000h +
jz loc_100BAA3  +
cmp eax 0A0000h +
jz loc_100BA66  +
cmp eax 0B0000h +
jnz loc_100BAAC  +
mov eax [edi+0Ch] +
mov ecx [esi+4] +
cmp ecx [eax+4] +
jnz loc_100BAAC  +
mov ecx [esi] +
cmp ecx [eax] +
jmp loc_100BAAA  +
mov eax [edi+0Ch] +
mov cx [esi+6] +
cmp cx [eax+6] +
jnz loc_100BAAC  +
mov cx [esi+0Eh] +
cmp cx [eax+0Eh] +
jnz loc_100BAAC  +
mov cx [esi+0Ah] +
cmp cx [eax+0Ah] +
jnz loc_100BAAC  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_100BAAC  +
mov cx [esi+0Ch] +
cmp cx [eax+0Ch] +
jnz loc_100BAAC  +
mov cx [esi] +
cmp cx [eax] +
jmp loc_100BAAA  +
mov eax [edi+0Ch] +
mov eax [eax] +
cmp eax [esi] +
jz loc_100BA3C  +
mov edi [edi+10h] +
inc edx  +
mov [ebp+arg_0] edx +
cmp edx [ebx+4] +
jb loc_100B9C8  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 14h  +
mov eax [ebp+arg_0] +
jmp loc_100BABF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push ebx  +
call sub_100B78D  +
test eax eax +
jnz loc_100BAEB  +
or eax 0FFFFFFFFh +
jmp loc_100BC23  +
and [ebp+arg_0] 0 +
cmp dword ptr [ebx+4] 0 +
push esi  +
push edi  +
mov edi [ebx+8] +
jbe loc_100BC1E  +
mov esi [ebp+arg_C] +
cmp dword ptr [edi+4] 80000h +
jnz loc_100BC0C  +
push 0  +
push [ebp+arg_4]  +
push dword ptr [edi+0Ch]  +
call sub_100B86C  +
test eax eax +
jz loc_100BC0C  +
mov ecx [ebp+arg_8] +
cmp [eax+4] ecx +
jnz loc_100BC0C  +
mov edx 70000h +
cmp ecx edx +
ja loc_100BB9D  +
jz loc_100BB87  +
cmp ecx 20000h +
jz loc_100BB71  +
cmp ecx 30000h +
jz loc_100BC03  +
cmp ecx 40000h +
jz loc_100BC03  +
cmp ecx 60000h +
jnz loc_100BC0C  +
mov eax [eax+0Ch] +
fld  dword ptr [eax] +
fld  dword ptr [esi] +
fucompp   +
jmp loc_100BB8E  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push esi  +
push dword ptr [eax+0Ch]  +
call sub_1009A2B  +
test eax eax +
jmp loc_100BC0A  +
mov eax [eax+0Ch] +
fld  qword ptr [esi] +
fcomp  qword ptr [eax] +
fnstsw  ax +
test ah 44h +
jp loc_100BC0C  +
mov eax [ebp+arg_0] +
jmp loc_100BC21  +
cmp ecx 90000h +
jz loc_100BC03  +
cmp ecx 0A0000h +
jz loc_100BBC6  +
cmp ecx 0B0000h +
jnz loc_100BC0C  +
mov eax [edi+0Ch] +
mov ecx [esi+4] +
cmp ecx [eax+4] +
jnz loc_100BC0C  +
mov ecx [esi] +
cmp ecx [eax] +
jmp loc_100BC0A  +
mov eax [edi+0Ch] +
mov cx [esi+6] +
cmp cx [eax+6] +
jnz loc_100BC0C  +
mov cx [esi+0Eh] +
cmp cx [eax+0Eh] +
jnz loc_100BC0C  +
mov cx [esi+0Ah] +
cmp cx [eax+0Ah] +
jnz loc_100BC0C  +
mov cx [esi+2] +
cmp cx [eax+2] +
jnz loc_100BC0C  +
mov cx [esi+0Ch] +
cmp cx [eax+0Ch] +
jnz loc_100BC0C  +
mov cx [esi] +
cmp cx [eax] +
jmp loc_100BC0A  +
mov eax [eax+0Ch] +
mov eax [eax] +
cmp eax [esi] +
jz loc_100BB95  +
inc [ebp+arg_0]  +
mov eax [ebp+arg_0] +
mov edi [edi+10h] +
cmp eax [ebx+4] +
jb loc_100BB01  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100B78D  +
test eax eax +
jnz loc_100BC48  +
or eax 0FFFFFFFFh +
jmp locret_100BC9B  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_100BC5B  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov esi eax +
push edi  +
inc esi  +
lea edi [esi+esi] +
push edi  +
call sub_1009C0B  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100BC96  +
push esi  +
push [ebp+lpString]  +
push eax  +
call sub_100A37C  +
push [ebp+var_4]  +
push edi  +
push 20000h  +
push [ebp+arg_0]  +
call sub_100B8B0  +
cmp eax 0FFFFFFFFh +
jnz loc_100BC99  +
lea eax [ebp+var_4] +
push eax  +
call sub_1009FA7  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100B78D  +
test eax eax +
jz loc_100BCED  +
push 4  +
call sub_1009C0B  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100BCED  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 30000h  +
push [ebp+arg_0]  +
call sub_100B8B0  +
cmp eax 0FFFFFFFFh +
jnz locret_100BCF0  +
lea eax [ebp+var_4] +
push eax  +
call sub_1009FA7  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100B78D  +
test eax eax +
jz loc_100BD42  +
push 4  +
call sub_1009C0B  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100BD42  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
push [ebp+var_4]  +
push 4  +
push 40000h  +
push [ebp+arg_0]  +
call sub_100B8B0  +
cmp eax 0FFFFFFFFh +
jnz locret_100BD45  +
lea eax [ebp+var_4] +
push eax  +
call sub_1009FA7  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100B78D  +
test eax eax +
jz loc_100BD97  +
push 4  +
call sub_1009C0B  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100BD97  +
fld  [ebp+arg_4] +
fstp  dword ptr [eax] +
push [ebp+var_4]  +
push 4  +
push 60000h  +
push [ebp+arg_0]  +
call sub_100B8B0  +
cmp eax 0FFFFFFFFh +
jnz locret_100BD9A  +
lea eax [ebp+var_4] +
push eax  +
call sub_1009FA7  +
or eax 0FFFFFFFFh +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+arg_0]  +
and [ebp+var_4] 0 +
call sub_100B78D  +
test eax eax +
jz loc_100BDEC  +
push 8  +
call sub_1009C0B  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100BDEC  +
fld  [ebp+arg_4] +
fstp  qword ptr [eax] +
push [ebp+var_4]  +
push 8  +
push 70000h  +
push [ebp+arg_0]  +
call sub_100B8B0  +
cmp eax 0FFFFFFFFh +
jnz locret_100BDEF  +
lea eax [ebp+var_4] +
push eax  +
call sub_1009FA7  +
or eax 0FFFFFFFFh +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
push [ebp+arg_0]  +
xor esi esi +
mov [ebp+var_4] esi +
call sub_100B78D  +
test eax eax +
jz loc_100BE66  +
call sub_100B7AE  +
push eax  +
mov [ebp+var_4] eax +
call sub_100B78D  +
test eax eax +
jz loc_100BE66  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] esi +
jbe loc_100BE40  +
push esi  +
push esi  +
push esi  +
push [ebp+var_4]  +
call sub_100B8B0  +
cmp eax 0FFFFFFFFh +
jz loc_100BE40  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_100BE2A  +
cmp edi [ebp+arg_4] +
pop edi  +
jnz loc_100BE5D  +
push [ebp+var_4]  +
push 4  +
push 80000h  +
push [ebp+arg_0]  +
call sub_100B8B0  +
cmp eax 0FFFFFFFFh +
jnz loc_100BE69  +
lea eax [ebp+var_4] +
push eax  +
call sub_100B823  +
or eax 0FFFFFFFFh +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_100B78D  +
test eax eax +
jnz loc_100BE89  +
or eax 0FFFFFFFFh +
jmp loc_100BEAD  +
push edi  +
xor edi edi +
cmp [ebp+arg_4] edi +
jbe loc_100BEAA  +
push 0  +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_100B8B0  +
cmp eax 0FFFFFFFFh +
jz loc_100BEAA  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_100BE91  +
mov eax edi +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100BEE5  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100BEE5  +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [eax+0Ch]  +
call sub_100BC2D  +
jmp loc_100BEE8  +
or eax 0FFFFFFFFh +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100BF1D  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100BF1D  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100BCA4  +
jmp loc_100BF20  +
or eax 0FFFFFFFFh +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
push esi  +
mov esi [ebp+arg_0] +
lea eax [ebp+var_8] +
push eax  +
push [ebp+arg_4]  +
push esi  +
call sub_100B86C  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_100BF85  +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_100BF62  +
mov eax [eax+10h] +
mov [ecx+10h] eax +
mov eax [ebp+var_4] +
jmp loc_100BF68  +
mov edx [eax+10h] +
mov [esi+8] edx +
cmp eax [esi+0Ch] +
jnz loc_100BF70  +
mov [esi+0Ch] ecx +
dec dword ptr [esi+4]  +
push eax  +
call sub_100B91A  +
lea eax [ebp+var_4] +
push eax  +
call sub_1009FA7  +
xor eax eax +
inc eax  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100BFBB  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100BFBB  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100BF29  +
jmp loc_100BFBD  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100BFEF  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100BFEF  +
push dword ptr [eax+0Ch]  +
call sub_100B84E  +
jmp loc_100BFF1  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jnz loc_100C014  +
xor eax eax +
jmp loc_100C02A  +
mov ecx [eax+4] +
cmp ecx 10000h +
jz loc_100C027  +
cmp ecx 80000h +
jnz loc_100C010  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jnz loc_100C04D  +
xor eax eax +
jmp loc_100C059  +
cmp dword ptr [eax+4] 20000h +
jnz loc_100C049  +
mov eax [eax+0Ch] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jnz loc_100C07D  +
or eax 0FFFFFFFFh +
jmp loc_100C095  +
mov ecx [eax+4] +
cmp ecx 40000h +
jz loc_100C090  +
cmp ecx 30000h +
jnz loc_100C078  +
mov eax [eax+0Ch] +
mov eax [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jnz loc_100C0B8  +
xor eax eax +
jmp loc_100C0D0  +
mov ecx [eax+4] +
cmp ecx 40000h +
jz loc_100C0CB  +
cmp ecx 30000h +
jnz loc_100C0B4  +
mov eax [eax+0Ch] +
mov eax [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jnz loc_100C0F3  +
xor eax eax +
jmp loc_100C101  +
cmp dword ptr [eax+4] 50000h +
jnz loc_100C0EF  +
mov eax [eax+0Ch] +
mov eax [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jnz loc_100C128  +
fld  ds:flt_1001AF4 +
jmp loc_100C136  +
cmp dword ptr [eax+4] 60000h +
jnz loc_100C120  +
mov eax [eax+0Ch] +
fld  dword ptr [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jnz loc_100C15D  +
fld  ds:dbl_1001AF8 +
jmp loc_100C16B  +
cmp dword ptr [eax+4] 70000h +
jnz loc_100C155  +
mov eax [eax+0Ch] +
fld  qword ptr [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jnz loc_100C18E  +
xor eax eax +
jmp loc_100C19C  +
cmp dword ptr [eax+4] 90000h +
jnz loc_100C18A  +
mov eax [eax+0Ch] +
mov eax [eax] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push edi  +
xor eax eax +
lea edi [ebp+FileTime] +
stos   +
stos   +
xor eax eax +
mov edi ebx +
stos   +
stos   +
push 0  +
push [ebp+arg_8]  +
stos   +
push [ebp+arg_4]  +
stos   +
call sub_100B86C  +
test eax eax +
jz loc_100C20F  +
mov edx [eax+4] +
mov ecx 0A0000h +
cmp edx ecx +
jz loc_100C1E9  +
cmp edx 0B0000h +
jnz loc_100C20F  +
cmp edx ecx +
jnz loc_100C1F6  +
push esi  +
mov esi [eax+0Ch] +
mov edi ebx +
movs   +
movs   +
movs   +
movs   +
pop esi  +
jmp loc_100C20F  +
mov eax [eax+0Ch] +
mov ecx [eax] +
mov [ebp+FileTime.dwLowDateTime] ecx +
mov eax [eax+4] +
mov [ebp+FileTime.dwHighDateTime] eax +
push ebx  +
lea eax [ebp+FileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100C248  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100C248  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100BFFA  +
jmp loc_100C24A  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100C27F  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100C27F  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100C033  +
jmp loc_100C281  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100C2B6  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100C2B6  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100C062  +
jmp loc_100C2B9  +
or eax 0FFFFFFFFh +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100C2EE  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100C2EE  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100C09E  +
jmp loc_100C2F0  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100C325  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100C325  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100C0D9  +
jmp loc_100C327  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100C35C  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100C35C  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100C174  +
jmp loc_100C35E  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_100C378  +
xor eax eax +
jmp loc_100C3A8  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100C374  +
mov ecx [eax+4] +
mov edx 10000h +
cmp ecx edx +
jz loc_100C39B  +
test ecx ecx +
jz loc_100C39F  +
jmp loc_100C374  +
test ecx ecx +
jnz loc_100C3A2  +
mov [eax+4] edx +
mov [eax+0Ch] esi +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
push edi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
mov esi eax +
cmp esi edi +
jnz loc_100C3D1  +
xor eax eax +
jmp loc_100C450  +
mov eax [esi+4] +
push ebx  +
mov ebx 20000h +
cmp eax ebx +
jz loc_100C3E2  +
cmp eax edi +
jnz loc_100C437  +
cmp [ebp+arg_C] edi +
jnz loc_100C3F3  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov [ebp+arg_C] eax +
mov eax [ebp+arg_C] +
inc eax  +
mov [ebp+arg_C] eax +
cmp [esi+4] edi +
jnz loc_100C417  +
lea edi [eax+eax] +
push edi  +
call sub_1009C0B  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100C437  +
mov [esi+4] ebx +
mov [esi+8] edi +
jmp loc_100C43E  +
lea ebx [eax+eax] +
cmp [esi+8] ebx +
jnb loc_100C43E  +
lea edi [esi+0Ch] +
push edi  +
call sub_1009FA7  +
and dword ptr [edi] 0 +
push ebx  +
call sub_1009C0B  +
mov [edi] eax +
test eax eax +
jnz loc_100C43B  +
xor eax eax +
jmp loc_100C44F  +
mov [esi+8] ebx +
push [ebp+arg_C]  +
push [ebp+lpString]  +
push dword ptr [esi+0Ch]  +
call sub_100A37C  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
mov esi eax +
test esi esi +
jnz loc_100C478  +
xor eax eax +
jmp loc_100C4B3  +
mov eax [esi+4] +
cmp eax 40000h +
jz loc_100C488  +
test eax eax +
jz loc_100C48C  +
jmp loc_100C474  +
test eax eax +
jnz loc_100C4A8  +
push 4  +
call sub_1009C0B  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100C474  +
mov dword ptr [esi+4] 40000h +
mov dword ptr [esi+8] 4 +
mov eax [esi+0Ch] +
mov ecx [ebp+arg_8] +
mov [eax] ecx +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
mov esi eax +
test esi esi +
jnz loc_100C4DA  +
xor eax eax +
jmp loc_100C515  +
mov eax [esi+4] +
cmp eax 50000h +
jz loc_100C4EA  +
test eax eax +
jz loc_100C4EE  +
jmp loc_100C4D6  +
test eax eax +
jnz loc_100C50A  +
push 4  +
call sub_1009C0B  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100C4D6  +
mov dword ptr [esi+4] 50000h +
mov dword ptr [esi+8] 4 +
mov eax [esi+0Ch] +
mov ecx [ebp+arg_8] +
mov [eax] ecx +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
mov esi eax +
test esi esi +
jnz loc_100C53C  +
xor eax eax +
jmp loc_100C577  +
mov eax [esi+4] +
cmp eax 90000h +
jz loc_100C54C  +
test eax eax +
jz loc_100C550  +
jmp loc_100C538  +
test eax eax +
jnz loc_100C56C  +
push 4  +
call sub_1009C0B  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_100C538  +
mov dword ptr [esi+4] 90000h +
mov dword ptr [esi+8] 4 +
mov eax [esi+0Ch] +
mov ecx [ebp+arg_8] +
mov [eax] ecx +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100C5B0  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100C5B0  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100C367  +
jmp loc_100C5B2  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100C5ED  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100C5ED  +
push [ebp+arg_10]  +
push [ebp+lpString]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100C3B2  +
jmp loc_100C5EF  +
xor eax eax +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100C627  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100C627  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100C45B  +
jmp loc_100C629  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100C661  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100C661  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100C4BD  +
jmp loc_100C663  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100C69B  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100C69B  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100C51F  +
jmp loc_100C69D  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100C6BF  +
mov eax [eax+4] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100C6F4  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100C6F4  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100C6A6  +
jmp loc_100C6F6  +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 30000h  +
push [ebp+arg_0]  +
call sub_100B997  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 40000h  +
push [ebp+arg_0]  +
call sub_100B997  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 60000h  +
push [ebp+arg_0]  +
call sub_100B997  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+String2] +
push eax  +
push 70000h  +
push [ebp+arg_0]  +
call sub_100B997  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+lpString2]  +
push 20000h  +
push [ebp+arg_0]  +
call sub_100B997  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100C7E1  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100C7E1  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+lpString2]  +
push dword ptr [eax+0Ch]  +
call sub_100C78B  +
jmp loc_100C7E4  +
or eax 0FFFFFFFFh +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
lea eax [ebp+arg_8] +
push eax  +
push 40000h  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100BAD0  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 20000h  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100BAD0  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
call sub_100B78D  +
test eax eax +
jz loc_100C885  +
mov esi [ebp+arg_8] +
push esi  +
call sub_100B78D  +
test eax eax +
jz loc_100C885  +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100C885  +
mov edx [eax+4] +
mov ecx 80000h +
cmp edx ecx +
jz loc_100C87A  +
test edx edx +
jnz loc_100C885  +
mov [eax+0Ch] esi +
mov [eax+4] ecx +
xor eax eax +
inc eax  +
jmp loc_100C887  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100B86C  +
test eax eax +
jz loc_100C8C0  +
cmp dword ptr [eax+4] 80000h +
jnz loc_100C8C0  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push dword ptr [eax+0Ch]  +
call sub_100C83A  +
jmp loc_100C8C3  +
or eax 0FFFFFFFFh +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 204h +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_204] 0 +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
push 1FAh  +
lea eax [ebp+var_200] +
push 0  +
push eax  +
call memset  +
mov ebx [ebp+arg_C] +
add esp 0Ch +
test ebx ebx +
jnz loc_100C915  +
xor eax eax +
jmp loc_100C9C9  +
push 0  +
push [ebp+arg_4]  +
push esi  +
call sub_100B86C  +
mov esi eax +
test esi esi +
jz loc_100C90E  +
push ebx  +
push offset dword_1001388  +
push edi  +
call sub_100A37C  +
mov eax [esi+4] +
cmp eax 20000h +
jz loc_100C9B8  +
cmp eax 30000h +
jz loc_100C9AC  +
cmp eax 40000h +
jz loc_100C98C  +
cmp eax 60000h +
jz loc_100C985  +
cmp eax 70000h +
jnz loc_100C9C2  +
mov eax [esi+0Ch] +
fld  qword ptr [eax] +
push ecx  +
push ecx  +
fstp  [esp+218h+var_218] +
push offset aF  +
lea eax [ebp+var_204] +
push 0FEh  +
push eax  +
call sub_100A22E  +
add esp 14h +
push ebx  +
lea eax [ebp+var_204] +
push eax  +
jmp loc_100C9BC  +
mov eax [esi+0Ch] +
fld  dword ptr [eax] +
jmp loc_100C95D  +
mov eax [esi+0Ch] +
push dword ptr [eax]  +
push offset aLu  +
lea eax [ebp+var_204] +
push 0FEh  +
push eax  +
call sub_100A22E  +
add esp 10h +
jmp loc_100C97B  +
mov eax [esi+0Ch] +
push dword ptr [eax]  +
push offset aLd  +
jmp loc_100C996  +
push ebx  +
push dword ptr [esi+0Ch]  +
push edi  +
call sub_100A37C  +
push edi  +
call ds:lstrlenW  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008775  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:SetLastError +
push edi  +
push 0  +
call esi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_100CA0D  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CA05  +
push 57h  +
call esi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
push edi  +
call ds:lstrlenW  +
cmp eax 1 +
jle loc_100CA05  +
movzx eax word ptr [edi] +
push 0  +
push 1  +
push eax  +
push offset asc_1001B18  +
call sub_1009DF3  +
cmp eax 0FFFFFFFFh +
jz loc_100CA05  +
xor eax eax +
inc eax  +
jmp loc_100CA07  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
dec eax  +
cmp eax 9 +
ja loc_100CA5B  +
movzx eax ds:byte_100CA6A[eax] +
jmp ds:off_100CA62[eax*4]  +
xor eax eax +
inc eax  +
jmp loc_100CA5D  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
call edi  +
cmp [ebp+lpString] ebx +
jz loc_100CAFE  +
cmp [ebp+arg_4] ebx +
jnz loc_100CAFE  +
push ebx  +
push 1  +
push 7Ch  +
push [ebp+lpString]  +
call sub_1009DF3  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_100CAB8  +
push ebx  +
call edi  +
push ebx  +
push [ebp+lpString]  +
call sub_1009A0A  +
mov esi eax +
push 1  +
lea eax [esi+5] +
push eax  +
push ebx  +
push 0Ch  +
call sub_100A8D6  +
mov [ebp+arg_4] eax +
cmp eax ebx +
jnz loc_100CADB  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CB0C  +
push 8  +
jmp loc_100CB0A  +
lea ecx [esi+1] +
push ecx  +
push offset dword_100135C  +
push eax  +
call sub_100A37C  +
add esi 2 +
push esi  +
push [ebp+lpString]  +
push [ebp+arg_4]  +
call sub_100A3BF  +
mov eax [ebp+arg_4] +
jmp loc_100CB0E  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CB0C  +
push 57h  +
call edi  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ds:SetLastError +
push edi  +
xor edi edi +
push edi  +
mov [ebp+var_4] edi +
call esi  +
mov ecx [ebp+arg_8] +
cmp [ebp+arg_4] edi +
jz loc_100CB53  +
cmp ecx edi +
jnz loc_100CB53  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CB4C  +
push 57h  +
call esi  +
xor eax eax +
jmp loc_100CDB6  +
mov eax [ebp+arg_0] +
cmp eax edi +
jz loc_100CB3E  +
or dword ptr [eax] 0FFFFFFFFh +
push ebx  +
mov [ebp+arg_8] edi +
cmp [ebp+arg_4] edi +
jbe loc_100CDB2  +
lea edi [ecx+3Ch] +
lea eax [edi-3Ch] +
test eax eax +
jz loc_100CDBC  +
xor ebx ebx +
push ebx  +
push 1  +
lea eax [edi-3Ch] +
push offset aParser2_0  +
push eax  +
call sub_1009A86  +
test eax eax +
jnz loc_100CC6E  +
mov eax [edi-28h] +
mov esi [edi-2Ch] +
mov [ebp+var_10] eax +
cmp [edi] ebx +
jnz loc_100CC6E  +
cmp [edi+4] ebx +
jnz loc_100CC6E  +
cmp [edi+8] ebx +
jnz loc_100CC6E  +
cmp [edi+0Ch] ebx +
jnz loc_100CC6E  +
mov ebx esi +
and ebx 40000h +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_100CBE9  +
mov eax [edi-1Ch] +
test eax eax +
jz loc_100CC6E  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jz loc_100CC6E  +
mov eax esi +
and eax 20000h +
xor ecx ecx +
mov edx eax +
or edx ecx +
jz loc_100CBFE  +
cmp dword ptr [edi-34h] 0Ah +
jnz loc_100CC6E  +
mov edx eax +
or edx ecx +
jz loc_100CC0F  +
xor ecx ecx +
inc ecx  +
cmp [ebp+var_4] ecx +
jz loc_100CC6E  +
mov [ebp+var_4] ecx +
mov edx ebx +
xor ecx ecx +
or edx ecx +
jz loc_100CC24  +
mov ecx [ebp+arg_0] +
cmp dword ptr [ecx] 0FFFFFFFFh +
jnz loc_100CC6E  +
mov edx [ebp+arg_8] +
mov [ecx] edx +
xor ecx ecx +
or eax ecx +
jz loc_100CC30  +
xor eax eax +
or ebx eax +
jnz loc_100CC6E  +
mov eax [edi-34h] +
dec eax  +
cmp eax 9 +
ja loc_100CC6E  +
jmp ds:off_100CDDE[eax*4]  +
mov eax esi +
and eax 10000h +
xor ecx ecx +
mov [ebp+var_C] eax +
or eax ecx +
jz loc_100CC87  +
mov ebx esi +
and ebx 1 +
xor eax eax +
mov ecx ebx +
or ecx eax +
jnz loc_100CC6E  +
cmp [edi-10h] ecx +
jnz loc_100CC6E  +
mov eax [edi-0Ch] +
test eax eax +
jz loc_100CCA6  +
cmp eax 2 +
jnb loc_100CCA6  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CC80  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100CDB5  +
mov eax [edi-10h] +
test eax eax +
jz loc_100CC6E  +
mov ebx esi +
and ebx 1 +
xor ecx ecx +
mov edx ebx +
or edx ecx +
jz loc_100CCA6  +
push dword ptr [eax]  +
call sub_100B78D  +
test eax eax +
jz loc_100CC6E  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_100CCB6  +
cmp [edi-14h] ecx +
jz loc_100CC6E  +
xor eax eax +
or ebx eax +
jnz loc_100CD9C  +
cmp dword ptr [edi-24h] 1 +
jnz loc_100CC6E  +
and esi 20h +
or esi eax +
jnz loc_100CC6E  +
mov eax [ebp+var_C] +
xor ecx ecx +
or eax ecx +
jnz loc_100CD9C  +
cmp dword ptr [edi-0Ch] 2 +
jb loc_100CC6E  +
jmp loc_100CD9C  +
mov eax esi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jnz loc_100CDD4  +
mov eax esi +
and eax 10000h +
or eax ecx +
jnz loc_100CC6E  +
mov eax esi +
and eax 40h +
or eax ecx +
jnz loc_100CC6E  +
mov eax esi +
and eax 80h +
or eax ecx +
jnz loc_100CC6E  +
mov edx [edi-10h] +
test edx edx +
jz loc_100CC6E  +
mov eax esi +
and eax 1 +
or eax ecx +
jz loc_100CD44  +
push dword ptr [edx]  +
call sub_100B78D  +
test eax eax +
jz loc_100CC6E  +
jmp loc_100CD9C  +
cmp dword ptr [edi-24h] 1 +
ja loc_100CC6E  +
and esi 20h +
xor eax eax +
jmp loc_100CD94  +
cmp dword ptr [edi-8] 0 +
jz loc_100CC6E  +
cmp dword ptr [edi-4] 0 +
jnz loc_100CD9C  +
lea eax [edi-3Ch] +
mov [edi-4] eax +
jmp loc_100CD9C  +
mov eax esi +
and eax 0Fh +
xor ecx ecx +
or eax ecx +
jnz loc_100CC6E  +
mov eax esi +
and eax 0FFF0h +
or eax ecx +
jnz loc_100CC6E  +
mov eax [ebp+var_10] +
and esi 0FFEDFFFFh +
or esi eax +
jnz loc_100CC6E  +
and dword ptr [edi-20h] 0 +
inc [ebp+arg_8]  +
mov eax [ebp+arg_8] +
add edi 50h +
cmp eax [ebp+arg_4] +
jb loc_100CB6D  +
xor eax eax +
inc eax  +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CC80  +
push 42Bh  +
jmp loc_100CC7A  +
push 78h  +
jmp loc_100CC7A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
fldz   +
push ebx  +
mov ebx ds:SetLastError +
fstp  [ebp+var_18] +
fldz   +
push edi  +
xor edi edi +
fstp  [ebp+var_28] +
push edi  +
mov dword ptr [ebp+String2] edi +
mov [ebp+var_14] edi +
call ebx  +
mov eax [ebp+arg_8] +
cmp eax edi +
jnz loc_100CE51  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CE45  +
push 57h  +
call ebx  +
call sub_10097DB  +
xor eax eax +
jmp loc_100D3B5  +
push esi  +
mov esi [eax+0Ch] +
mov eax [eax+8] +
mov dword ptr [ebp+var_8] eax +
cmp esi edi +
jz loc_100D39F  +
cmp eax edi +
jz loc_100D39F  +
mov eax [esi+2Ch] +
mov ecx [esi+8] +
mov edi [esi+10h] +
mov [ebp+var_4] eax +
mov eax [esi+14h] +
mov [ebp+var_1C] eax +
mov eax [esi+30h] +
mov [ebp+var_C] eax +
mov eax [esi+28h] +
mov [ebp+var_1C] eax +
cmp ecx 0Ah +
jz loc_100CEF0  +
cmp [ebp+lpString2] 0 +
jnz loc_100CEF0  +
mov eax edi +
and eax 10h +
xor edx edx +
or eax edx +
jnz loc_100CEF0  +
cmp dword ptr [ebp+lpString] edx +
jz loc_100CECE  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100CECE  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EBh  +
call sub_100B775  +
push eax  +
push 2  +
call sub_100ABC7  +
add esp 10h +
jmp loc_100CEE4  +
call ds:GetLastError  +
test eax eax +
jnz loc_100CEDF  +
push 42Bh  +
call ebx  +
call sub_10097DB  +
push 800401E4h  +
call ebx  +
jmp loc_100D3B2  +
cmp dword ptr [ebp+lpString] 0 +
jnz loc_100CF08  +
mov eax edi +
and eax 40000h +
xor edx edx +
or eax edx +
jnz loc_100CF13  +
jmp loc_100D39F  +
cmp dword ptr [esi+24h] 0 +
jz loc_100CF19  +
cmp ecx 9 +
jz loc_100CF19  +
mov eax [esi+24h] +
mov dword ptr [ebp+lpString] eax +
lea eax [ecx-1] +
cmp eax 9 +
ja loc_100D39F  +
jmp ds:off_100D3BB[eax*4]  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_100CF87  +
mov eax edi +
and eax 42h +
xor ecx ecx +
or eax ecx +
jz loc_100CF87  +
push ecx  +
push ecx  +
push ebx  +
push 0Ah  +
call sub_100A8D6  +
test eax eax +
jnz loc_100CF67  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D3AD  +
push 8  +
call ds:SetLastError  +
jmp loc_100D3AD  +
push 3  +
push offset asc_1001ADC  +
push eax  +
call sub_100AA4B  +
mov ebx eax +
mov [ebp+lpString2] ebx +
call ds:GetLastError  +
test eax eax +
jnz loc_100D3AD  +
mov eax edi +
and eax 2 +
xor ecx ecx +
or eax ecx +
jz loc_100D002  +
test ebx ebx +
jz loc_100D39A  +
push 1  +
push [ebp+var_1C]  +
push ebx  +
call sub_100B3C1  +
test eax eax +
jnz loc_100D002  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100CFD9  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100CFD9  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push ebx  +
push 15E1h  +
call sub_100B775  +
push eax  +
push 3  +
call sub_100ABC7  +
add esp 14h +
jmp loc_100CFF2  +
push dword ptr [ebp+var_8]  +
push ebx  +
push 15ECh  +
call sub_100B775  +
push eax  +
push 2  +
call sub_100ABC7  +
add esp 10h +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_100D3B2  +
test ebx ebx +
jz loc_100D39A  +
mov ebx ds:lstrlenW +
mov eax edi +
and eax 80h +
xor ecx ecx +
or eax ecx +
jz loc_100D05B  +
push [ebp+lpString2]  +
call ebx  +
test eax eax +
jnz loc_100D05B  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100D041  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_100D041  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15EEh  +
jmp loc_100CFE2  +
push dword ptr [ebp+var_8]  +
push 15EFh  +
call sub_100B775  +
push eax  +
push 1  +
call sub_100ABC7  +
add esp 0Ch +
jmp loc_100CFF2  +
mov eax edi +
and eax 1 +
xor ecx ecx +
or eax ecx +
jz loc_100D0AB  +
mov esi [esi+10h] +
and esi 4000h +
xor eax eax +
or esi eax +
jz loc_100D08E  +
push eax  +
mov eax [ebp+var_4] +
push 1  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_100C78B  +
cmp eax 0FFFFFFFFh +
jnz loc_100D39A  +
mov eax [ebp+var_4] +
push 0  +
push [ebp+lpString2]  +
push dword ptr [eax]  +
call sub_100BC2D  +
cmp eax 0FFFFFFFFh +
jnz loc_100D39A  +
jmp loc_100CF4C  +
cmp [ebp+var_C] ecx +
jz loc_100D0EA  +
push [ebp+lpString2]  +
call ebx  +
cmp eax [ebp+var_C] +
jl loc_100D0EA  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_100D0DB  +
push dword ptr [ebp+lpString]  +
call ebx  +
test eax eax +
jz loc_100D0DB  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push dword ptr [ebp+lpString]  +
push 15F4h  +
jmp loc_100CFE2  +
mov eax [ebp+var_C] +
dec eax  +
push eax  +
push 15F2h  +
jmp loc_100D049  +
and edi 10000h +
xor eax eax +
or edi eax +
jz loc_100D114  +
push [ebp+lpString2]  +
call ebx  +
mov edi eax +
inc edi  +
lea eax [edi+edi] +
push eax  +
call sub_1009C0B  +
test eax eax +
jz loc_100CF4C  +
mov [esi+2Ch] eax +
jmp loc_100D11A  +
mov eax [ebp+var_4] +
mov edi [ebp+var_C] +
push edi  +
push [ebp+lpString2]  +
push eax  +
call sub_100A37C  +
jmp loc_100D39A  +
mov ebx [ebp+lpString2] +
xor eax eax +
cmp ecx 2 +
setz al  +
mov [ebp+var_C] eax +
test ebx ebx +
jz loc_100D39A  +
push 0  +
push ebx  +
call sub_1009A0A  +
test eax eax +
jz loc_100D1F3  +
push [ebp+var_C]  +
push 0Ah  +
push ebx  +
call sub_100B1DE  +
test eax eax +
jz loc_100D1F3  +
push 0Ah  +
push ebx  +
call sub_100AFF8  +
cmp [ebp+var_C] 1 +
jnz loc_100D175  +
mov dword ptr [ebp+String2] eax +
jmp loc_100D178  +
mov [ebp+var_14] eax +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_100D1DD  +
mov esi [esi+10h] +
and esi 4000h +
or esi eax +
jz loc_100D1B6  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_100D1A3  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_100C6FF  +
jmp loc_100D1AD  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_100C722  +
cmp eax 0FFFFFFFFh +
jnz loc_100D39A  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
jnz loc_100D1CE  +
push dword ptr [ebp+String2]  +
push dword ptr [eax]  +
call sub_100BCA4  +
jmp loc_100D09D  +
push [ebp+var_14]  +
push dword ptr [eax]  +
call sub_100BCF9  +
jmp loc_100D09D  +
cmp [ebp+var_C] 1 +
mov eax [ebp+var_4] +
mov ecx dword ptr [ebp+String2] +
jz loc_100D1EC  +
mov ecx [ebp+var_14] +
mov [eax] ecx +
jmp loc_100D39A  +
and edi 10h +
xor eax eax +
or edi eax +
jz loc_100D205  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jnz loc_100D259  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100D227  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100D227  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E2h  +
jmp loc_100CFE2  +
push dword ptr [ebp+var_8]  +
push 15F0h  +
jmp loc_100D049  +
mov ebx [ebp+lpString2] +
test ebx ebx +
jz loc_100D39A  +
push ebx  +
call sub_100AFD5  +
test eax eax +
jnz loc_100D292  +
and edi 10h +
or edi eax +
jz loc_100D263  +
mov ecx [ebp+arg_8] +
cmp dword ptr [ecx+4] 0FFFFFFFFh +
jz loc_100D263  +
xor eax eax +
inc eax  +
mov [ecx] eax +
jmp loc_100D3B4  +
cmp dword ptr [ebp+lpString] eax +
jz loc_100D285  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100D285  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15E3h  +
jmp loc_100CFE2  +
push dword ptr [ebp+var_8]  +
push 15F1h  +
jmp loc_100D049  +
cmp dword ptr [esi+8] 7 +
push ebx  +
jnz loc_100D2A3  +
call sub_100AE10  +
fstp  [ebp+var_18] +
jmp loc_100D2AB  +
call sub_100AE10  +
fstp  [ebp+var_28] +
and edi 1 +
xor eax eax +
or edi eax +
jz loc_100D321  +
mov eax [esi+10h] +
and eax 4000h +
xor ecx ecx +
or eax ecx +
jz loc_100D2F2  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_100D2DB  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_100C745  +
jmp loc_100D2E9  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_100C768  +
cmp eax 0FFFFFFFFh +
jnz loc_100D39A  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
push ecx  +
jnz loc_100D30E  +
fld  [ebp+var_18] +
fstp  [esp+38h+var_38] +
push dword ptr [eax]  +
call sub_100BD4E  +
jmp loc_100D09D  +
fld  [ebp+var_28] +
push ecx  +
fstp  qword ptr [esp] +
push dword ptr [eax]  +
call sub_100BDA3  +
jmp loc_100D09D  +
cmp dword ptr [esi+8] 7 +
mov eax [ebp+var_4] +
jnz loc_100D331  +
fld  [ebp+var_18] +
fstp  dword ptr [eax] +
jmp loc_100D39A  +
fld  [ebp+var_28] +
fstp  qword ptr [eax] +
jmp loc_100D39A  +
push [ebp+arg_8]  +
push dword ptr [esi+38h]  +
push [ebp+lpString2]  +
push dword ptr [ebp+lpString]  +
call dword ptr [esi+34h]  +
jmp loc_100D3B4  +
cmp [ebp+lpString2] 0 +
jz loc_100D391  +
cmp dword ptr [ebp+lpString] 0 +
jz loc_100D372  +
push dword ptr [ebp+lpString]  +
call ds:lstrlenW  +
test eax eax +
jz loc_100D372  +
push dword ptr [ebp+var_8]  +
push dword ptr [ebp+lpString]  +
push 15F3h  +
jmp loc_100CFE2  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D387  +
push 42Bh  +
call ds:SetLastError  +
call sub_10097DB  +
jmp loc_100CFF2  +
mov eax [ebp+var_4] +
mov dword ptr [eax] 1 +
xor eax eax +
inc eax  +
jmp loc_100D3B4  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D3AD  +
push 57h  +
call ebx  +
call sub_10097DB  +
xor eax eax +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_100D4A9  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_100D4A9  +
cmp [ebp+arg_8] edi +
jz loc_100D4A9  +
push [ebp+arg_8]  +
call sub_100C9DF  +
test eax eax +
jnz loc_100D42E  +
push 490h  +
jmp loc_100D4B5  +
mov [ebp+arg_4] edi +
cmp [ebp+arg_0] edi +
jbe loc_100D424  +
add esi 20h +
jmp loc_100D43D  +
xor edi edi +
lea eax [esi-20h] +
test eax eax +
jz loc_100D48A  +
mov eax [esi-10h] +
and eax 100000h +
xor ecx ecx +
or eax ecx +
jnz loc_100D455  +
xor edi edi +
inc edi  +
mov eax [esi] +
test eax eax +
jz loc_100D47A  +
push eax  +
call ds:lstrlenW  +
test eax eax +
jle loc_100D47A  +
mov eax [ebp+arg_8] +
push edi  +
push dword ptr [esi]  +
add eax 2 +
push eax  +
call sub_100B3C1  +
cmp eax 1 +
jz loc_100D4A4  +
inc [ebp+arg_4]  +
mov eax [ebp+arg_4] +
add esi 50h +
cmp eax [ebp+arg_0] +
jb loc_100D43B  +
jmp loc_100D424  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D49B  +
push 42Bh  +
call ebx  +
call sub_10097DB  +
xor eax eax +
jmp loc_100D4BA  +
mov eax [ebp+arg_4] +
jmp loc_100D4BA  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D4B7  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx ds:SetLastError +
push esi  +
push edi  +
xor edi edi +
push edi  +
call ebx  +
cmp [ebp+arg_0] edi +
jz loc_100D59E  +
cmp [ebp+arg_4] edi +
jz loc_100D59E  +
cmp [ebp+lpString] edi +
jz loc_100D59E  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_100D59E  +
push edi  +
push 1  +
push 3Ah  +
push [ebp+lpString]  +
mov [esi] edi +
mov [esi+4] edi +
call sub_1009DF3  +
mov ebx eax +
or eax 0FFFFFFFFh +
cmp ebx eax +
jz loc_100D5AF  +
push [ebp+lpString]  +
call ds:lstrlenW  +
mov edi eax +
push 1  +
lea eax [ebx+5] +
push eax  +
push 0  +
sub edi ebx +
push 8  +
dec edi  +
call sub_100A8D6  +
mov [esi] eax +
test eax eax +
jnz loc_100D555  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D5AC  +
push 8  +
call ds:SetLastError  +
jmp loc_100D5AC  +
push 1  +
lea eax [edi+5] +
push eax  +
push 0  +
push 9  +
call sub_100A8D6  +
mov [esi+4] eax +
test eax eax +
jz loc_100D541  +
lea eax [ebx+1] +
push eax  +
push [ebp+lpString]  +
push dword ptr [esi]  +
call sub_100A37C  +
test edi edi +
jz loc_100D58F  +
mov eax [ebp+lpString] +
inc edi  +
push edi  +
lea eax [eax+ebx*2+2] +
push eax  +
push dword ptr [esi+4]  +
call sub_100A37C  +
push dword ptr [esi]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100D3E8  +
jmp loc_100D5AF  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D5AC  +
push 57h  +
call ebx  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
test ebx ebx +
jz loc_100D63A  +
mov esi [ebp+dwErrCode] +
test esi esi +
jz loc_100D63A  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
call sub_1009748  +
test eax eax +
jnz loc_100D5EB  +
push 7  +
call sub_10096D7  +
jmp loc_100D5F7  +
push 0  +
push 0  +
push eax  +
push 7  +
call sub_100A8D6  +
mov [ebp+arg_0] eax +
test eax eax +
jz loc_100D63A  +
test ebx ebx +
jbe loc_100D624  +
add esi 2Ch +
cmp dword ptr [esi] 0 +
jz loc_100D61E  +
mov eax [esi-1Ch] +
and eax 10000h +
xor ecx ecx +
or eax ecx +
jz loc_100D61E  +
push esi  +
call sub_1009FA7  +
add esi 50h +
dec ebx  +
jnz loc_100D605  +
push [ebp+arg_0]  +
call sub_1009774  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
jmp loc_100D63C  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
push edi  +
mov [ebp+dwLen] edi +
mov [ebp+puLen] edi +
mov dword ptr [ebp+lpString] edi +
mov [ebp+pBlock] edi +
mov [ebp+lpBuffer] edi +
call ds:SetLastError  +
mov esi 104h +
xor eax eax +
mov [ebp+dwLen] esi +
neg eax  +
sbb eax eax +
push 1  +
and eax esi +
add [ebp+dwLen] eax +
push [ebp+dwLen]  +
push edi  +
push 7  +
call sub_100A8D6  +
mov ebx eax +
cmp ebx edi +
jz loc_100D6CB  +
push [ebp+dwLen]  +
push ebx  +
push edi  +
call ds:GetModuleFileNameW  +
cmp eax edi +
jz loc_100D6DD  +
mov ecx [ebp+dwLen] +
dec ecx  +
cmp eax ecx +
jnb loc_100D674  +
push edi  +
push ebx  +
call GetFileVersionInfoSizeW  +
mov [ebp+dwLen] eax +
cmp eax edi +
jnz loc_100D6E4  +
mov esi ds:GetLastError +
call esi  +
test eax eax +
jnz loc_100D6DD  +
call esi  +
test eax eax +
jnz loc_100D6DD  +
push 57h  +
jmp loc_100D6D7  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D6DD  +
push 8  +
call ds:SetLastError  +
xor eax eax +
jmp loc_100D8AA  +
add eax 0Ah +
push eax  +
mov [ebp+dwLen] eax +
call sub_1009C0B  +
mov [ebp+pBlock] eax +
cmp eax edi +
jz loc_100D6DD  +
push eax  +
push [ebp+dwLen]  +
push edi  +
push ebx  +
call GetFileVersionInfoW  +
test eax eax +
jnz loc_100D711  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1009FA7  +
jmp loc_100D6DD  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jz loc_100D706  +
push 1  +
push 40h  +
push edi  +
push 7  +
call sub_100A8D6  +
xor esi esi +
test [ebp+puLen] 0FFFFFFFCh +
mov ebx eax +
mov dword ptr [ebp+lpString] edi +
jbe loc_100D706  +
mov eax [ebp+lpBuffer] +
lea eax [eax+esi*4] +
movzx ecx word ptr [eax+2] +
movzx eax word ptr [eax] +
push ecx  +
push eax  +
push offset aStringfileinfo  +
push 40h  +
push ebx  +
call sub_100A22E  +
add esp 14h +
lea eax [ebp+dwLen] +
push eax  +
lea eax [ebp+lpString] +
push eax  +
push ebx  +
push [ebp+pBlock]  +
call VerQueryValueW  +
test eax eax +
jnz loc_100D788  +
mov eax [ebp+puLen] +
inc esi  +
shr eax 2 +
mov dword ptr [ebp+lpString] edi +
cmp esi eax +
jb loc_100D746  +
cmp dword ptr [ebp+lpString] edi +
jz loc_100D706  +
push edi  +
push dword ptr [ebp+lpString]  +
call sub_1009A0A  +
cmp eax 4 +
ja loc_100D7C0  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1009FA7  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D6DD  +
push 42Bh  +
jmp loc_100D6D7  +
push edi  +
push 1  +
mov ebx offset a_exe +
push ebx  +
push dword ptr [ebp+lpString]  +
call sub_1009EE4  +
mov esi ds:lstrlenW +
cmp eax 0FFFFFFFFh +
jz loc_100D7FA  +
push dword ptr [ebp+lpString]  +
call esi  +
push ebx  +
mov [ebp+var_18] eax +
call esi  +
mov ecx [ebp+var_18] +
mov dx ds:word_1001AB4 +
sub ecx eax +
mov eax dword ptr [ebp+lpString] +
mov [eax+ecx*2] dx +
cmp [ebp+arg_0] edi +
jz loc_100D84A  +
push dword ptr [ebp+lpString]  +
call esi  +
push [ebp+arg_0]  +
mov ebx eax +
call esi  +
push 1  +
lea eax [ebx+eax+0Bh] +
push eax  +
push edi  +
push 7  +
mov [ebp+dwLen] eax +
call sub_100A8D6  +
mov esi eax +
cmp esi edi +
jnz loc_100D831  +
lea eax [ebp+pBlock] +
push eax  +
call sub_1009FA7  +
jmp loc_100D6CB  +
push [ebp+arg_0]  +
push dword ptr [ebp+lpString]  +
push offset aSS_1  +
push [ebp+dwLen]  +
push esi  +
call sub_100A22E  +
add esp 14h +
jmp loc_100D86A  +
cmp dword ptr [ebp+lpString] edi +
jnz loc_100D858  +
push 7  +
call sub_10096D7  +
jmp loc_100D864  +
push edi  +
push edi  +
push dword ptr [ebp+lpString]  +
push 7  +
call sub_100A8D6  +
mov esi eax +
cmp esi edi +
jz loc_100D823  +
push esi  +
mov dword ptr [ebp+lpString] esi +
call ds:CharUpperW  +
push 1  +
push 50h  +
push edi  +
push 0Bh  +
call sub_100A8D6  +
mov esi eax +
cmp esi edi +
jz loc_100D823  +
push dword ptr [ebp+lpString]  +
push 15EDh  +
call sub_100B775  +
push eax  +
push 50h  +
push esi  +
call sub_100A22E  +
add esp 10h +
lea eax [ebp+pBlock] +
push eax  +
call sub_1009FA7  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
push esi  +
push edi  +
mov edi ds:SetLastError +
xor ebx ebx +
push ebx  +
mov [ebp+var_8] ebx +
xor esi esi +
call edi  +
cmp [ebp+arg_0] ebx +
jz loc_100D92C  +
cmp [ebp+arg_4] ebx +
jz loc_100D92C  +
cmp [ebp+arg_C] ebx +
jz loc_100D92C  +
cmp [ebp+dwErrCode] ebx +
jz loc_100D92C  +
cmp dword ptr [ebp+arg_14] ebx +
jnz loc_100D92C  +
call sub_100988D  +
test eax eax +
jnz loc_100D90C  +
push 157Fh  +
call sub_100B775  +
push eax  +
call sub_1009774  +
push 47Eh  +
call edi  +
jmp loc_100D935  +
call sub_1009601  +
test eax eax +
jz loc_100D930  +
mov eax [ebp+arg_8] +
cmp eax 0FFFFFFFFh +
jz loc_100D954  +
cmp eax [ebp+arg_C] +
jl loc_100D93E  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D930  +
push 57h  +
call edi  +
call sub_10097DB  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 18h  +
mov ecx [ebp+dwErrCode] +
imul eax eax +
push ebx  +
push dword ptr [eax+ecx+20h]  +
call sub_100CA79  +
mov esi eax +
cmp esi ebx +
jz loc_100D930  +
push esi  +
call sub_100D647  +
mov dword ptr [ebp+arg_14] eax +
cmp eax ebx +
jz loc_100D930  +
push [ebp+dwErrCode]  +
lea eax [ebp+var_8] +
push [ebp+arg_C]  +
push eax  +
call sub_100CB1A  +
test eax eax +
jz loc_100D930  +
xor eax eax +
inc eax  +
mov [ebp+var_C] ebx +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] eax +
jbe loc_100DAB6  +
jmp loc_100D98B  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_4] +
lea ecx [ecx+eax*4] +
mov ebx [ecx] +
push 2  +
inc eax  +
pop esi  +
mov [ebp+arg_8] esi +
cmp eax [ebp+arg_0] +
jnb loc_100D9A4  +
mov edi [ecx+4] +
jmp loc_100D9A6  +
xor edi edi +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100D3E8  +
cmp eax 0FFFFFFFFh +
jnz loc_100D9EB  +
lea eax [ebp+var_14] +
push eax  +
push ebx  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100D4C6  +
cmp eax 0FFFFFFFFh +
jnz loc_100D9DE  +
mov eax [ebp+var_8] +
cmp eax 0FFFFFFFFh +
jz loc_100DAF3  +
mov edi ebx +
xor ebx ebx +
jmp loc_100D9E4  +
mov ebx [ebp+var_14] +
mov edi [ebp+var_10] +
mov [ebp+arg_8] 1 +
imul eax eax +
add eax [ebp+dwErrCode] +
mov esi eax +
jz loc_100DB26  +
test edi edi +
jz loc_100DA46  +
cmp [ebp+arg_8] 2 +
jnz loc_100DA46  +
push dword ptr [esi+8]  +
call sub_100CA3A  +
xor ecx ecx +
inc ecx  +
cmp eax ecx +
jnz loc_100DA41  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100D3E8  +
cmp eax 0FFFFFFFFh +
jnz loc_100DA38  +
lea eax [ebp+var_14] +
push eax  +
push edi  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100D4C6  +
cmp eax 0FFFFFFFFh +
jz loc_100DA46  +
mov [ebp+arg_8] 1 +
jmp loc_100DA44  +
mov [ebp+arg_8] ecx +
xor edi edi +
mov eax [ebp+arg_8] +
mov [ebp+var_24] eax +
mov eax [ebp+var_8] +
mov [ebp+var_20] eax +
mov eax dword ptr [ebp+arg_14] +
mov [ebp+var_1C] eax +
lea eax [ebp+var_24] +
push eax  +
push edi  +
push ebx  +
mov [ebp+var_18] esi +
call sub_100CE0B  +
mov ecx [ebp+var_24] +
test eax eax +
jz loc_100DB9F  +
mov eax [esi+18h] +
test eax eax +
jz loc_100DA81  +
cmp eax [esi+1Ch] +
jz loc_100DB44  +
inc dword ptr [esi+1Ch]  +
mov esi [esi+10h] +
and esi 20000h +
xor eax eax +
or esi eax +
jz loc_100DA9A  +
mov [ebp+var_C] 1 +
add [ebp+var_4] ecx +
mov eax [ebp+var_4] +
cmp eax [ebp+arg_0] +
jb loc_100D988  +
mov edi ds:SetLastError +
xor ebx ebx +
cmp [ebp+var_C] ebx +
jnz loc_100DAE8  +
xor esi esi +
cmp [ebp+arg_C] ebx +
jbe loc_100DAE8  +
mov ecx [ebp+dwErrCode] +
cmp ecx ebx +
jz loc_100DB89  +
mov eax [ecx+10h] +
and eax 80000h +
xor edx edx +
or eax edx +
jz loc_100DADF  +
cmp [ecx+1Ch] ebx +
jz loc_100DBAF  +
inc esi  +
add ecx 50h +
cmp esi [ebp+arg_C] +
jb loc_100DAC0  +
push ebx  +
call edi  +
xor eax eax +
inc eax  +
jmp loc_100D937  +
push dword ptr [ebp+arg_14]  +
push ebx  +
push 15E7h  +
call sub_100B775  +
push eax  +
push esi  +
call sub_100ABC7  +
add esp 10h +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100D5BB  +
push 800401E4h  +
call ds:SetLastError  +
jmp loc_100D935  +
call ds:GetLastError  +
test eax eax +
jnz loc_100D930  +
push 42Bh  +
call ds:SetLastError  +
jmp loc_100D930  +
test ebx ebx +
jz loc_100DB71  +
push ebx  +
call ds:lstrlenW  +
test eax eax +
jz loc_100DB71  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push ebx  +
push 15E5h  +
call sub_100B775  +
push eax  +
push 3  +
call sub_100ABC7  +
add esp 14h +
jmp loc_100DB0B  +
push dword ptr [ebp+arg_14]  +
push dword ptr [esi+18h]  +
push 15EAh  +
call sub_100B775  +
push eax  +
push 2  +
jmp loc_100DB03  +
call ds:GetLastError  +
test eax eax +
jnz loc_100DB9A  +
push 42Bh  +
call edi  +
call sub_10097DB  +
push [ebp+dwErrCode]  +
push [ebp+arg_C]  +
call sub_100D5BB  +
jmp loc_100D935  +
mov eax [ecx+20h] +
cmp eax ebx +
jnz loc_100DBC9  +
mov eax [ecx+10h] +
and eax 40000h +
xor edx edx +
or eax edx +
jz loc_100DB89  +
mov edi [ecx+24h] +
jmp loc_100DBE1  +
mov ecx [ecx+24h] +
cmp ecx ebx +
jnz loc_100DBDF  +
push ebx  +
push eax  +
call sub_100CA79  +
mov edi eax +
test edi edi +
jnz loc_100DBE5  +
jmp loc_100DB9A  +
mov edi ecx +
test edi edi +
jz loc_100DBFB  +
push edi  +
call ds:lstrlenW  +
test eax eax +
jz loc_100DBFB  +
push dword ptr [ebp+arg_14]  +
push edi  +
push 15E4h  +
jmp loc_100DB7C  +
push dword ptr [ebp+arg_14]  +
push 15E8h  +
call sub_100B775  +
push eax  +
push 1  +
call sub_100ABC7  +
add esp 0Ch +
jmp loc_100DB0B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
xor esi esi +
push edi  +
cmp ebx esi +
jz loc_100DC63  +
cmp dword ptr [ebp+arg_8] esi +
jz loc_100DC63  +
cmp [ebp+arg_0] esi +
jbe loc_100DC70  +
lea edi [ebx+4] +
push 1  +
push edi  +
push dword ptr [ebp+arg_8]  +
call sub_100B3C1  +
test eax eax +
jnz loc_100DC58  +
inc esi  +
add edi 0D0h +
cmp esi [ebp+arg_0] +
jb loc_100DC3B  +
jmp loc_100DC70  +
imul esi esi +
mov eax [esi+ebx] +
jmp loc_100DC72  +
push 57h  +
call ds:SetLastError  +
call sub_10097DB  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString1] 0 +
jz loc_100DCC4  +
cmp [ebp+lpString2] 0 +
jz loc_100DCC4  +
cmp [ebp+arg_C] 0FFFFFFFFh +
jnz loc_100DC9C  +
mov eax 0FFh +
jmp loc_100DCD3  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+lpString2]  +
push [ebp+lpString1]  +
call sub_1009A2B  +
test eax eax +
jnz loc_100DCB6  +
push 2  +
pop eax  +
jmp loc_100DCD3  +
jge loc_100DCBC  +
push 4  +
jmp loc_100DCB3  +
test eax eax +
jle loc_100DCD1  +
push 8  +
jmp loc_100DCB3  +
push 57h  +
call ds:SetLastError  +
call sub_10097DB  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_4] +
jnz loc_100DCEE  +
push 2  +
pop eax  +
jmp loc_100DCFF  +
jge loc_100DCF4  +
push 4  +
jmp loc_100DCEB  +
cmp eax [ebp+arg_4] +
jle loc_100DCFD  +
push 8  +
jmp loc_100DCEB  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_4] +
jnz loc_100DD1A  +
push 2  +
pop eax  +
jmp loc_100DD28  +
jnb loc_100DD20  +
push 4  +
jmp loc_100DD17  +
cmp [ebp+arg_4] eax +
sbb eax eax +
and eax 8 +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
fld  [ebp+arg_0] +
fld  [ebp+arg_4] +
fucompp   +
fnstsw  ax +
test ah 44h +
jp loc_100DD4A  +
push 2  +
pop eax  +
jmp loc_100DD72  +
fld  [ebp+arg_0] +
fld  [ebp+arg_4] +
fcompp st(1) st +
fnstsw  ax +
test ah 41h +
jnz loc_100DD5D  +
push 4  +
jmp loc_100DD47  +
fld  [ebp+arg_0] +
fld  [ebp+arg_4] +
fcompp st(1) st +
fnstsw  ax +
test ah 5 +
jp loc_100DD70  +
push 8  +
jmp loc_100DD47  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
fld  [ebp+arg_8] +
fcomp  [ebp+arg_0] +
fnstsw  ax +
test ah 44h +
jp loc_100DD92  +
push 2  +
pop eax  +
jmp loc_100DDB6  +
fld  [ebp+arg_8] +
fcomp  [ebp+arg_0] +
fnstsw  ax +
test ah 41h +
jnz loc_100DDA3  +
push 4  +
jmp loc_100DD8F  +
fld  [ebp+arg_8] +
fcomp  [ebp+arg_0] +
fnstsw  ax +
test ah 5 +
jp loc_100DDB4  +
push 8  +
jmp loc_100DD8F  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6ECh +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov ecx 137h +
lea esi [ebp+arg_8] +
lea edi [ebp+var_6E0] +
movs   +
xor esi esi +
push 1FAh  +
mov [ebp+var_6E4] eax +
lea eax [ebp+var_200] +
push esi  +
push eax  +
mov dword ptr [ebp+String] esi +
call memset  +
mov edi [ebp+var_6E4] +
add esp 0Ch +
cmp edi esi +
jz loc_100E01C  +
cmp ebx esi +
jz loc_100E01C  +
mov eax [ebp+var_410] +
and eax 0FFFh +
dec eax  +
cmp eax 8 +
ja loc_100E015  +
jmp ds:off_100E03F[eax*4]  +
push [ebp+var_6E0]  +
push edi  +
call sub_100C033  +
push 3  +
push ebx  +
mov edi eax +
call sub_100C033  +
mov ebx eax +
cmp edi esi +
jz loc_100E029  +
cmp ebx esi +
jz loc_100E029  +
test [ebp+var_410] 2000h +
jz loc_100DEC4  +
push 0FEh  +
push ebx  +
lea eax [ebp+String] +
push eax  +
call sub_100A37C  +
lea eax [ebp+String] +
push 2Ah  +
push eax  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100DEC4  +
mov esi ds:lstrlenW +
push eax  +
call esi  +
lea ecx [ebp+String] +
push ecx  +
mov [ebp+var_6E4] eax +
call esi  +
mov esi eax +
mov eax [ebp+var_6E4] +
sub esi eax +
jnz loc_100DEC4  +
or esi 0FFFFFFFFh +
push esi  +
push 1  +
push ebx  +
push edi  +
call sub_100DC7E  +
jmp loc_100E02B  +
push 3  +
push ebx  +
call sub_100C033  +
mov esi eax +
test esi esi +
jz loc_100E029  +
push [ebp+var_6E0]  +
push edi  +
call sub_100C062  +
push 0Ah  +
push esi  +
mov edi eax +
call sub_100AFF8  +
push eax  +
push edi  +
call sub_100DCDC  +
jmp loc_100E02B  +
push 3  +
push ebx  +
call sub_100C033  +
mov esi eax +
test esi esi +
jz loc_100E029  +
push [ebp+var_6E0]  +
push edi  +
call sub_100C062  +
push 0Ah  +
push esi  +
mov edi eax +
call sub_100AFF8  +
push eax  +
push edi  +
call sub_100DD08  +
jmp loc_100E02B  +
push 3  +
push ebx  +
call sub_100C033  +
mov esi eax +
test esi esi +
jz loc_100E029  +
push [ebp+var_6E0]  +
push edi  +
call sub_100C10A  +
fstp  [ebp+var_6E8] +
push esi  +
call sub_100AE10  +
fstp  [ebp+var_6E4] +
fld  [ebp+var_6E4] +
push ecx  +
push ecx  +
fstp  dword ptr [esp+700h+var_700+4] +
fld  [ebp+var_6E8] +
fstp  dword ptr [esp+700h+var_700] +
call sub_100DD31  +
jmp loc_100E02B  +
push 3  +
push ebx  +
call sub_100C033  +
mov esi eax +
test esi esi +
jz loc_100E029  +
push [ebp+var_6E0]  +
push edi  +
call sub_100C13F  +
fstp  qword ptr [ebp-6ECh] +
push esi  +
call sub_100AE10  +
sub esp 10h +
fstp  [esp+708h+var_700] +
fld  qword ptr [ebp-6ECh] +
fstp  [esp+708h+var_708] +
call sub_100DD7B  +
jmp loc_100E02B  +
push 1  +
push ebx  +
call sub_100C033  +
push 2  +
push ebx  +
mov esi eax +
call sub_100C033  +
push 3  +
push ebx  +
mov edi eax +
call sub_100C033  +
test esi esi +
jz loc_100E029  +
test edi edi +
jz loc_100E029  +
test eax eax +
jz loc_100E029  +
mov ecx [ebp+var_208] +
test ecx ecx +
jnz loc_100E003  +
lea ecx [ebp+var_6E0] +
push [ebp+var_6E4]  +
push ecx  +
push eax  +
push edi  +
push esi  +
call [ebp+var_20C]  +
jmp loc_100E02B  +
mov eax 0FFh +
jmp loc_100E02B  +
push 57h  +
call ds:SetLastError  +
call sub_10097DB  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008775  +
leave   +
retn 4E4h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6E4h +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov ecx 137h +
lea esi [ebp+arg_8] +
lea edi [ebp+var_6E0] +
movs   +
xor esi esi +
push 1FAh  +
mov [ebp+var_6E4] eax +
lea eax [ebp+var_200] +
push esi  +
push eax  +
mov dword ptr [ebp+String] esi +
call memset  +
add esp 0Ch +
cmp ebx esi +
jz loc_100E1A3  +
cmp [ebp+var_6E4] esi +
jz loc_100E1A3  +
push [ebp+var_6E0]  +
push ebx  +
call sub_100BFFA  +
mov ebx eax +
cmp ebx esi +
jz loc_100E1B0  +
mov eax [ebp+var_410] +
and eax 0FFFh +
dec eax  +
jnz loc_100E19F  +
push 3  +
push [ebp+var_6E4]  +
call sub_100C033  +
mov edi eax +
test edi edi +
jz loc_100E1B0  +
test [ebp+var_410] 2000h +
jz loc_100E172  +
push 0FEh  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_100A37C  +
lea eax [ebp+String] +
push 2Ah  +
push eax  +
call ds:wcschr  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100E172  +
mov esi ds:lstrlenW +
push eax  +
call esi  +
lea ecx [ebp+String] +
push ecx  +
mov [ebp+var_6E4] eax +
call esi  +
mov esi eax +
mov eax [ebp+var_6E4] +
sub esi eax +
jnz loc_100E166  +
or esi 0FFFFFFFFh +
cmp esi 0FFFFFFFFh +
jnz loc_100E172  +
mov esi 0FFh +
jmp loc_100E19F  +
push esi  +
push 1  +
push edi  +
push ebx  +
call sub_100C78B  +
cmp eax 0FFFFFFFFh +
jnz loc_100E188  +
mov esi 0FCh +
jmp loc_100E19F  +
push eax  +
push ebx  +
call sub_100C033  +
test eax eax +
jz loc_100E1B0  +
push esi  +
push 1  +
push edi  +
push eax  +
call sub_100DC7E  +
mov esi eax +
mov eax esi +
jmp loc_100E1B2  +
push 57h  +
call ds:SetLastError  +
call sub_10097DB  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008775  +
leave   +
retn 4E4h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_8] +
xor ebx ebx +
push 1FAh  +
lea eax [ebp+var_200] +
push ebx  +
push eax  +
mov [ebp+var_208] edi +
mov [ebp+var_204] ebx +
call memset  +
add esp 0Ch +
cmp esi ebx +
jz loc_100E30A  +
cmp edi ebx +
jz loc_100E30A  +
mov [ebp+var_20C] ebx +
cmp [ebp+arg_0] ebx +
jbe loc_100E317  +
mov edi ds:wcstok +
mov [ebp+var_210] esi +
mov ebx offset asc_1001BC0 +
mov eax [ebp+var_210] +
push 0FEh  +
add eax 204h +
push eax  +
lea eax [ebp+var_204] +
push eax  +
call sub_100A37C  +
push ebx  +
lea eax [ebp+var_204] +
push eax  +
jmp loc_100E2D7  +
push 0  +
push 1  +
push [ebp+lpString]  +
push 0  +
push [ebp+var_208]  +
call sub_100C813  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jnz loc_100E2AA  +
push 0  +
push [ebp+var_208]  +
call sub_100BDF8  +
mov esi eax +
cmp esi 0FFFFFFFFh +
jz loc_100E317  +
push 0  +
push [ebp+lpString]  +
push esi  +
push [ebp+var_208]  +
call sub_100BEB6  +
push [ebp+var_20C]  +
push esi  +
push [ebp+var_208]  +
call sub_100BEF1  +
mov eax [ebp+var_210] +
push 0  +
add eax 4 +
push eax  +
push esi  +
push [ebp+var_208]  +
call sub_100BEB6  +
push ebx  +
push 0  +
call edi  +
pop ecx  +
mov [ebp+lpString] eax +
pop ecx  +
test eax eax +
jnz loc_100E260  +
inc [ebp+var_20C]  +
mov eax [ebp+var_20C] +
add [ebp+var_210] 4DCh +
cmp eax [ebp+arg_0] +
jb loc_100E239  +
jmp loc_100E317  +
push 57h  +
call ds:SetLastError  +
call sub_10097DB  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008775  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 6E8h +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4E0] +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 1FAh  +
mov ecx 137h +
lea esi [ebp+arg_0] +
lea edi [ebp+var_6E0] +
movs   +
mov edi [ebp+arg_4DC] +
mov esi [ebp+arg_4E4] +
mov [ebp+var_6E4] eax +
lea eax [ebp+var_200] +
push ebx  +
push eax  +
mov [ebp+var_6E8] edi +
mov dword ptr [ebp+var_204] ebx +
call memset  +
add esp 0Ch +
cmp edi ebx +
jz loc_100E4B3  +
cmp [ebp+var_6E4] ebx +
jz loc_100E4B3  +
cmp esi ebx +
jz loc_100E4B3  +
mov edi ds:lstrlenW +
push esi  +
call edi  +
test eax eax +
jz loc_100E4C0  +
mov eax [ebp+var_410] +
and eax 0FFFh +
dec eax  +
cmp eax 8 +
ja loc_100E4C0  +
jmp ds:off_100E4D5[eax*4]  +
test [ebp+var_410] 2000h +
jz loc_100E428  +
push 0FEh  +
push esi  +
lea eax [ebp+var_204] +
push eax  +
call sub_100A37C  +
lea eax [ebp+var_204] +
push 2Ah  +
push eax  +
call ds:wcschr  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_100E428  +
push ebx  +
call edi  +
cmp eax 1 +
jnz loc_100E4C0  +
lea eax [ebp+var_204] +
cmp ebx eax +
jz loc_100E4C0  +
test [ebp+var_410] 1000h +
jnz loc_100E43C  +
xor eax eax +
inc eax  +
jmp loc_100E4C2  +
push 1  +
lea eax [ebp+lpString] +
push eax  +
push esi  +
call sub_100B3C1  +
jmp loc_100E4C2  +
push 1  +
push 0Ah  +
push esi  +
call sub_100B1DE  +
test eax eax +
jz loc_100E4C0  +
test [ebp+var_410] 1000h +
jz loc_100E434  +
push 1  +
push esi  +
lea eax [ebp+lpString] +
push eax  +
jmp loc_100E446  +
push ebx  +
jmp loc_100E44F  +
push esi  +
call sub_100AFD5  +
jmp loc_100E4C2  +
cmp [ebp+var_20C] ebx +
jz loc_100E4C0  +
mov eax [ebp+var_208] +
cmp eax ebx +
jnz loc_100E496  +
lea eax [ebp+var_6E0] +
push ebx  +
push eax  +
push esi  +
push [ebp+var_6E4]  +
push [ebp+var_6E8]  +
call [ebp+var_20C]  +
neg eax  +
sbb eax eax +
neg eax  +
jmp loc_100E4C2  +
push 57h  +
call ds:SetLastError  +
call sub_10097DB  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008775  +
leave   +
retn 4E8h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 624h +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_610] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_61C] eax +
mov eax [ebp+arg_C] +
push ebx  +
push esi  +
mov [ebp+var_614] eax +
mov eax [ebp+arg_10] +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+lpString] eax +
mov eax [ebp+arg_14] +
mov esi 1FAh +
xor ebx ebx +
push esi  +
mov [ebp+var_620] eax +
lea eax [ebp+var_200] +
push ebx  +
push eax  +
mov dword ptr [ebp+String] ebx +
call memset  +
push esi  +
lea eax [ebp+var_400] +
push ebx  +
push eax  +
mov dword ptr [ebp+sz] ebx +
call memset  +
push esi  +
lea eax [ebp+var_600] +
push ebx  +
push eax  +
mov dword ptr [ebp+var_604] ebx +
call memset  +
add esp 24h +
cmp edi ebx +
jz loc_100E7D2  +
cmp [ebp+var_610] ebx +
jz loc_100E7D2  +
cmp [ebp+var_61C] ebx +
jz loc_100E7D2  +
cmp [ebp+var_614] ebx +
jz loc_100E7D2  +
cmp [ebp+lpString] ebx +
jz loc_100E7D2  +
cmp [ebp+var_620] ebx +
jz loc_100E7D2  +
mov ebx 0FEh +
push ebx  +
push edi  +
lea eax [ebp+sz] +
push eax  +
call sub_100A37C  +
lea eax [ebp+sz] +
push eax  +
call ds:CharUpperW  +
push 203Eh  +
call ds:SetLastError  +
call sub_10097DB  +
push [ebp+var_610]  +
call sub_100B84E  +
and [ebp+var_608] 0 +
mov [ebp+var_624] eax +
test eax eax +
jbe loc_100E7DF  +
push 0  +
push [ebp+var_608]  +
push [ebp+var_610]  +
call sub_100C253  +
test eax eax +
jz loc_100E7A7  +
push ebx  +
push eax  +
push [ebp+lpString]  +
call sub_100A37C  +
push ebx  +
push [ebp+lpString]  +
lea eax [ebp+var_604] +
push eax  +
call sub_100A37C  +
lea eax [ebp+var_604] +
push eax  +
call ds:CharUpperW  +
push ebx  +
lea eax [ebp+sz] +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_100A37C  +
lea eax [ebp+var_604] +
push eax  +
lea eax [ebp+String] +
push eax  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
mov [ebp+var_618] eax +
test eax eax +
jz loc_100E78D  +
mov esi ds:lstrlenW +
push eax  +
call esi  +
mov edi eax +
lea eax [ebp+String] +
push eax  +
call esi  +
sub eax edi +
xor ecx ecx +
mov [ebp+eax*2+String] cx +
push ebx  +
lea eax [ebp+String] +
push eax  +
push [ebp+var_614]  +
call sub_100A37C  +
push [ebp+lpString]  +
call esi  +
mov edi [ebp+var_618] +
lea eax [edi+eax*2] +
test eax eax +
jz loc_100E78D  +
push ebx  +
push [ebp+lpString]  +
call esi  +
mov esi [ebp+var_620] +
lea eax [edi+eax*2] +
push eax  +
push esi  +
call sub_100A37C  +
push ebx  +
push 3  +
push esi  +
call sub_100B49F  +
push eax  +
push esi  +
call sub_100A37C  +
mov edi [ebp+var_614] +
push ebx  +
push 3  +
push edi  +
call sub_100B49F  +
push eax  +
push edi  +
call sub_100A37C  +
push 0  +
push 1  +
push edi  +
push [ebp+var_608]  +
push [ebp+var_610]  +
call sub_100C7AF  +
cmp eax 1 +
jle loc_100E78D  +
dec eax  +
push eax  +
push [ebp+var_608]  +
push [ebp+var_610]  +
call sub_100C28A  +
push esi  +
push [ebp+lpString]  +
mov esi eax +
imul esi esi +
add esi [ebp+var_61C] +
push edi  +
sub esp 4DCh +
mov edi esp +
mov ecx 137h +
mov [ebp+var_618] eax +
movs   +
call sub_100E32D  +
test eax eax +
jnz loc_100E7B8  +
inc [ebp+var_608]  +
mov eax [ebp+var_608] +
cmp eax [ebp+var_624] +
jb loc_100E620  +
jmp loc_100E7DF  +
call ds:GetLastError  +
test eax eax +
jnz loc_100E7DA  +
push 42Bh  +
jmp loc_100E7D4  +
push 0  +
call ds:SetLastError  +
push offset dword_1001388  +
call sub_1009774  +
mov eax [ebp+var_618] +
jmp loc_100E7E2  +
push 57h  +
call ds:SetLastError  +
call sub_10097DB  +
or eax 0FFFFFFFFh +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008775  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 624h +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov [ebp+var_614] eax +
mov eax [ebp+arg_8] +
mov edi 1FAh +
xor ebx ebx +
push edi  +
mov [ebp+var_610] eax +
lea eax [ebp+var_200] +
push ebx  +
push eax  +
mov [ebp+var_204] ebx +
call memset  +
push edi  +
lea eax [ebp+var_400] +
push ebx  +
push eax  +
mov [ebp+var_404] ebx +
call memset  +
push edi  +
lea eax [ebp+var_600] +
push ebx  +
push eax  +
mov dword ptr [ebp+String] ebx +
call memset  +
add esp 24h +
mov [ebp+var_618] ebx +
cmp [ebp+var_614] ebx +
jz loc_100EA24  +
cmp [ebp+var_610] ebx +
jz loc_100EA24  +
call sub_100B7AE  +
mov [ebp+var_618] eax +
cmp eax ebx +
jnz loc_100E8AD  +
call ds:GetLastError  +
test eax eax +
jnz loc_100EA36  +
push 8  +
jmp loc_100EA30  +
push eax  +
push [ebp+var_614]  +
push [ebp+arg_0]  +
call sub_100E1C8  +
cmp esi ebx +
jz loc_100E8CF  +
cmp [esi] ebx +
jnz loc_100E8CF  +
call sub_100B7AE  +
mov [esi] eax +
cmp eax ebx +
jz loc_100E898  +
push [ebp+var_610]  +
mov [ebp+var_60C] 1 +
call sub_100B84E  +
mov [ebp+var_620] eax +
mov [ebp+var_608] ebx +
cmp eax ebx +
jbe loc_100EA10  +
mov ebx 0FEh +
mov edi offset dword_1001388 +
push ebx  +
push edi  +
lea eax [ebp+var_204] +
push eax  +
call sub_100A37C  +
push ebx  +
push edi  +
lea eax [ebp+var_404] +
push eax  +
call sub_100A37C  +
push ebx  +
push edi  +
lea eax [ebp+String] +
push eax  +
call sub_100A37C  +
push [ebp+var_608]  +
push [ebp+var_610]  +
call sub_100C033  +
test eax eax +
jz loc_100EA09  +
lea ecx [ebp+var_204] +
push ecx  +
lea ecx [ebp+var_404] +
push ecx  +
lea ecx [ebp+String] +
push ecx  +
push [ebp+var_614]  +
push [ebp+var_618]  +
push eax  +
call sub_100E4FE  +
mov [ebp+var_624] eax +
cmp eax 0FFFFFFFFh +
jz loc_100EA09  +
test esi esi +
jz loc_100E9EF  +
push 4  +
push dword ptr [esi]  +
call sub_100BDF8  +
mov [ebp+var_61C] eax +
cmp eax 0FFFFFFFFh +
jz loc_100E898  +
push [ebp+var_624]  +
push 0  +
push eax  +
push dword ptr [esi]  +
call sub_100C5F8  +
push 0  +
lea eax [ebp+String] +
push eax  +
push 1  +
push [ebp+var_61C]  +
push dword ptr [esi]  +
call sub_100C5BB  +
push 0  +
lea eax [ebp+var_404] +
push eax  +
push 2  +
push [ebp+var_61C]  +
push dword ptr [esi]  +
call sub_100C5BB  +
push 0  +
lea eax [ebp+var_204] +
push eax  +
push 3  +
push [ebp+var_61C]  +
push dword ptr [esi]  +
call sub_100C5BB  +
inc [ebp+var_608]  +
mov eax [ebp+var_608] +
cmp eax [ebp+var_620] +
jb loc_100E902  +
jmp loc_100EA10  +
and [ebp+var_60C] 0 +
lea eax [ebp+var_618] +
push eax  +
call sub_100B823  +
mov eax [ebp+var_60C] +
jmp loc_100EA3D  +
call ds:GetLastError  +
test eax eax +
jnz loc_100EA36  +
push 57h  +
call ds:SetLastError  +
call sub_10097DB  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008775  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4FCh +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_4E4] 2 +
mov esi offset aEq +
lea edi [ebp+var_4E0] +
movs   +
mov [ebp+var_4F4] eax +
mov eax [ebp+arg_8] +
movs   +
mov [ebp+var_4F0] eax +
mov eax [ebp+arg_C] +
movs   +
push 0BCh  +
mov [ebp+var_4EC] eax +
lea eax [ebp+var_4D2] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_414] 0FCh +
mov esi offset aNe +
lea edi [ebp+var_410] +
movs   +
movs   +
mov ebx 0BAh +
movs   +
push ebx  +
lea eax [ebp+var_400] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_344] 8 +
mov esi offset aGt +
lea edi [ebp+var_340] +
movs   +
movs   +
movs   +
push 0BCh  +
lea eax [ebp+var_332] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_274] 4 +
mov esi offset aLt +
lea edi [ebp+var_270] +
movs   +
movs   +
movs   +
push 0BCh  +
lea eax [ebp+var_262] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_1A4] 0Ah +
mov esi offset aGe +
lea edi [ebp+var_1A0] +
movs   +
movs   +
movs   +
push ebx  +
lea eax [ebp+var_190] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_D4] 6 +
mov esi offset aLe +
lea edi [ebp+var_D0] +
movs   +
movs   +
movs   +
movs   +
push ebx  +
xor esi esi +
push esi  +
lea eax [ebp+var_C0] +
push eax  +
call memset  +
mov edi [ebp+var_4F4] +
add esp 48h +
cmp edi esi +
jz loc_100ECC2  +
cmp [ebp+var_4F0] esi +
jz loc_100ECC2  +
cmp [ebp+var_4EC] esi +
jz loc_100ECC2  +
push [ebp+var_4EC]  +
call sub_100B84E  +
mov [ebp+var_4F8] eax +
mov [ebp+var_4E8] esi +
cmp eax esi +
jbe loc_100ECAF  +
add ebx 7Dh +
jmp loc_100EBDA  +
xor esi esi +
push esi  +
push [ebp+var_4E8]  +
push [ebp+var_4EC]  +
call sub_100C2C2  +
push 2  +
push [ebp+var_4E8]  +
mov esi eax +
push [ebp+var_4EC]  +
call sub_100C253  +
test eax eax +
jz loc_100EC97  +
push eax  +
lea eax [ebp+var_4E4] +
push eax  +
push 6  +
call sub_100DC1D  +
mov [ebp+var_4FC] eax +
test eax eax +
jnz loc_100EC3F  +
mov eax esi +
imul eax eax +
mov eax [eax+edi+2D0h] +
and eax 0FFFh +
cmp eax 9 +
jnz loc_100ECCF  +
push [ebp+var_4E8]  +
push [ebp+var_4EC]  +
call sub_100BFFA  +
test eax eax +
jz loc_100ECCF  +
imul esi esi +
sub esp 4DCh +
add esi edi +
test dword ptr [esi+2D0h] 4000h +
mov edi esp +
mov ecx ebx +
push eax  +
push [ebp+var_4F0]  +
movs   +
jz loc_100EC82  +
call sub_100E068  +
jmp loc_100EC87  +
call sub_100DDBF  +
mov ecx [ebp+var_4FC] +
test eax ecx +
jz loc_100ECAF  +
mov edi [ebp+var_4F4] +
inc [ebp+var_4E8]  +
mov eax [ebp+var_4E8] +
cmp eax [ebp+var_4F8] +
jb loc_100EBD8  +
mov ecx [ebp+var_4F8] +
xor eax eax +
cmp [ebp+var_4E8] ecx +
setnz al  +
jmp loc_100ECD1  +
push 57h  +
call ds:SetLastError  +
call sub_10097DB  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008775  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_4] esi +
cmp [ebp+arg_4] esi +
jz loc_100ED46  +
mov ebx [ebp+arg_8] +
cmp ebx esi +
jz loc_100ED46  +
cmp [ebp+arg_C] esi +
jz loc_100ED46  +
push ebx  +
call sub_100B84E  +
mov edi eax +
test edi edi +
jbe loc_100ED41  +
push esi  +
push ebx  +
call sub_100BFFA  +
test eax eax +
jz loc_100ED46  +
push [ebp+arg_C]  +
push eax  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_100EA53  +
test eax eax +
jz loc_100ED3C  +
push esi  +
push ebx  +
call sub_100BF29  +
dec esi  +
dec edi  +
inc [ebp+var_4]  +
inc esi  +
cmp esi edi +
jb loc_100ED12  +
mov eax [ebp+var_4] +
jmp loc_100ED55  +
push 57h  +
call ds:SetLastError  +
call sub_10097DB  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 4E8h +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_4E4] 2 +
mov esi offset aEq +
lea edi [ebp+var_4E0] +
movs   +
movs   +
movs   +
push 0BCh  +
mov [ebp+var_4E8] eax +
lea eax [ebp+var_4D2] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_414] 0FCh +
mov esi offset aNe +
lea edi [ebp+var_410] +
movs   +
movs   +
mov ebx 0BAh +
movs   +
push ebx  +
lea eax [ebp+var_400] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_344] 8 +
mov esi offset aGt +
lea edi [ebp+var_340] +
movs   +
movs   +
movs   +
push 0BCh  +
lea eax [ebp+var_332] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_274] 4 +
mov esi offset aLt +
lea edi [ebp+var_270] +
movs   +
movs   +
movs   +
push 0BCh  +
lea eax [ebp+var_262] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_1A4] 0Ah +
mov esi offset aGe +
lea edi [ebp+var_1A0] +
movs   +
movs   +
movs   +
push ebx  +
lea eax [ebp+var_190] +
push 0  +
push eax  +
movs   +
call memset  +
mov [ebp+var_D4] 6 +
mov esi offset aLe +
lea edi [ebp+var_D0] +
movs   +
movs   +
movs   +
push ebx  +
lea eax [ebp+var_C0] +
push 0  +
push eax  +
movs   +
call memset  +
add esp 48h +
pop edi  +
pop esi  +
cmp [ebp+var_4E8] 0 +
pop ebx  +
jnz loc_100EEB5  +
push 57h  +
call ds:SetLastError  +
call sub_10097DB  +
mov eax offset asc_1001C44 +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1008775  +
leave   +
retn 4  +
push [ebp+var_4E8]  +
lea eax [ebp+var_4E4] +
push eax  +
push 6  +
call sub_100DC1D  +
push 2  +
pop ecx  +
sub eax ecx +
jz loc_100EEA2  +
sub eax ecx +
jz loc_100EF03  +
sub eax ecx +
jz loc_100EEFC  +
sub eax ecx +
jz loc_100EEF5  +
sub eax ecx +
jz loc_100EEEE  +
sub eax 0F2h +
jnz loc_100EEA2  +
mov eax offset asc_1001C3C +
jmp loc_100EEA7  +
mov eax offset asc_1001C34 +
jmp loc_100EEA7  +
mov eax offset asc_1001C30 +
jmp loc_100EEA7  +
mov eax offset asc_1001C28 +
jmp loc_100EEA7  +
mov eax offset asc_1001C24 +
jmp loc_100EEA7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+lpString] +
push edi  +
xor edi edi +
cmp ebx edi +
jz loc_100F06F  +
push esi  +
mov esi [ebp+arg_C] +
cmp esi edi +
jz loc_100F06E  +
cmp [ebp+hConsoleOutput] edi +
jz loc_100F06E  +
push ebx  +
call sub_1009F6C  +
mov [ebp+lpString] eax +
cmp eax esi +
jnb loc_100EF4A  +
mov [ebp+lpString] esi +
mov eax [ebp+lpString] +
push 1  +
add eax 5 +
push eax  +
push edi  +
push 15h  +
call sub_100A8D6  +
mov [ebp+var_8] eax +
cmp eax edi +
jnz loc_100EF8C  +
call ds:GetLastError  +
test eax eax +
jnz loc_100EF74  +
push 8  +
call ds:SetLastError  +
call sub_10097DB  +
push ebx  +
call sub_1009CB4  +
shr eax 1 +
push eax  +
push offset dword_1001388  +
jmp loc_100F068  +
mov [ebp+var_4] edi +
cmp [ebp+arg_8] edi +
jz loc_100EF9F  +
push [ebp+arg_8]  +
call sub_1009F6C  +
mov [ebp+var_4] eax +
xor esi esi +
cmp [ebp+arg_8] edi +
jz loc_100F035  +
push esi  +
push [ebp+arg_8]  +
push ebx  +
call sub_100A30C  +
cmp eax edi +
jz loc_100F035  +
push eax  +
call sub_1009F6C  +
mov edi [ebp+var_4] +
push ebx  +
sub edi eax +
call sub_1009F6C  +
add eax edi +
cmp eax [ebp+arg_C] +
jnb loc_100EFD6  +
mov esi eax +
xor edi edi +
jmp loc_100EFA1  +
test esi esi +
jz loc_100EFDF  +
cmp eax [ebp+arg_C] +
jnz loc_100EFE2  +
mov esi [ebp+arg_C] +
lea eax [esi+1] +
cmp [ebp+lpString] eax +
ja loc_100EFED  +
mov eax [ebp+lpString] +
mov edi [ebp+var_8] +
push eax  +
push ebx  +
push edi  +
call sub_100A37C  +
push 0  +
push [ebp+arg_C]  +
push edi  +
call sub_100B4BA  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
push edi  +
call sub_1009CB4  +
shr eax 1 +
push eax  +
push ebx  +
push edi  +
call sub_100A37C  +
push ebx  +
call sub_1009F6C  +
cmp eax esi +
push ebx  +
jle loc_100F05B  +
call sub_1009CB4  +
shr eax 1 +
push eax  +
lea eax [edi+esi*2] +
push eax  +
jmp loc_100F068  +
cmp esi edi +
jz loc_100EFDF  +
push ebx  +
call sub_1009F6C  +
sub eax esi +
cmp eax [ebp+arg_C] +
ja loc_100EFDF  +
push ebx  +
call sub_1009F6C  +
cmp eax [ebp+arg_C] +
jg loc_100EFE2  +
push ebx  +
call sub_1009F6C  +
mov esi eax +
jmp loc_100EFE2  +
call sub_1009CB4  +
shr eax 1 +
push eax  +
push offset dword_10016DC  +
push ebx  +
call sub_100A37C  +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push edi  +
push 16h  +
call sub_10096D7  +
mov edi eax +
test edi edi +
jz loc_100F160  +
cmp [ebp+arg_8] 0 +
jz loc_100F160  +
push ebx  +
push esi  +
push edi  +
call sub_1009CB4  +
shr eax 1 +
push eax  +
push offset dword_1001388  +
push edi  +
call sub_100A37C  +
push [ebp+arg_0]  +
call sub_100B84E  +
mov ebx [ebp+lpMem] +
push 1  +
lea esi [ebx+5] +
push esi  +
push 0  +
push 13h  +
mov [ebp+var_4] eax +
call sub_100A8D6  +
push 1  +
push esi  +
xor esi esi +
push esi  +
push 14h  +
mov [ebp+lpMem] eax +
call sub_100A8D6  +
mov dword ptr [ebp+var_8] eax +
cmp [ebp+lpMem] esi +
jz loc_100F15E  +
cmp eax esi +
jz loc_100F15E  +
push [ebp+lpString]  +
call sub_1009F6C  +
mov [ebp+var_C] eax +
cmp [ebp+var_4] esi +
jbe loc_100F15E  +
push ebx  +
push dword ptr [ebp+var_8]  +
push esi  +
push [ebp+arg_0]  +
call sub_100C8CC  +
push dword ptr [ebp+var_8]  +
push [ebp+arg_8]  +
push [ebp+lpMem]  +
call sub_1009CB4  +
shr eax 1 +
dec eax  +
push eax  +
push [ebp+lpMem]  +
call sub_100A22E  +
add esp 10h +
push edi  +
call sub_1009CB4  +
shr eax 1 +
push eax  +
push [ebp+lpMem]  +
push edi  +
call sub_100A3BF  +
inc esi  +
cmp esi [ebp+var_4] +
jnb loc_100F15E  +
cmp ebx [ebp+var_C] +
jb loc_100F15E  +
push edi  +
call sub_1009CB4  +
shr eax 1 +
push eax  +
push [ebp+lpString]  +
push edi  +
call sub_100A3BF  +
sub ebx [ebp+var_C] +
cmp esi [ebp+var_4] +
jb loc_100F0FD  +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
push esi  +
push edi  +
mov ebx [ebp+arg_0] +
mov esi offset aS_2 +
lea edi [ebp+var_1C] +
movs   +
movs   +
mov esi offset aD +
lea edi [ebp+var_14] +
movs   +
movs   +
mov esi offset aF +
lea edi [ebp+var_C] +
movs   +
mov [ebp+var_20] eax +
mov eax [ebp+arg_C] +
push 16h  +
mov [ebp+lpString] eax +
movs   +
call sub_10096D7  +
mov esi eax +
mov [ebp+lpMem] esi +
test ebx ebx +
jz loc_100F2EA  +
test esi esi +
jz loc_100F2EA  +
xor eax eax +
lea edi [ebp+Time] +
stos   +
stos   +
stos   +
push esi  +
stos   +
call sub_1009CB4  +
shr eax 1 +
push eax  +
mov edi offset dword_1001388 +
push edi  +
push esi  +
call sub_100A37C  +
mov ecx [ebx+204h] +
mov eax ecx +
push 10h  +
and eax 0FF0h +
pop edx  +
sub eax edx +
jz loc_100F3A9  +
sub eax edx +
jz loc_100F36B  +
sub eax edx +
jz loc_100F325  +
sub eax edx +
jz loc_100F2FB  +
sub eax 20h +
jz loc_100F25E  +
sub eax 20h +
jz loc_100F238  +
push esi  +
call sub_1009CB4  +
shr eax 1 +
push eax  +
push edi  +
push esi  +
call sub_100A37C  +
jmp loc_100F2B9  +
mov ecx [ebx+28Ch] +
test ecx ecx +
jz loc_100F2EA  +
mov eax [ebx+290h] +
test eax eax +
jnz loc_100F252  +
mov eax ebx +
push esi  +
push eax  +
push [ebp+var_20]  +
push [ebp+arg_4]  +
call ecx  +
jmp loc_100F2B9  +
push [ebp+arg_4]  +
lea eax [ebp+var_48] +
push [ebp+var_20]  +
push eax  +
call sub_100C1A5  +
mov esi eax +
lea edi [ebp+Time] +
movs   +
push 0FEh  +
push [ebp+lpMem]  +
movs   +
push 0  +
lea eax [ebp+Time] +
push eax  +
movs   +
push 80000000h  +
push 400h  +
movs   +
call ds:GetTimeFormatW  +
test eax eax +
jnz loc_100F2B6  +
call sub_10097DB  +
push [ebp+lpMem]  +
call sub_1009CB4  +
shr eax 1 +
push eax  +
call sub_1009748  +
push eax  +
push [ebp+lpMem]  +
call sub_100A37C  +
mov esi [ebp+lpMem] +
push esi  +
call ds:lstrlenW  +
test eax eax +
jnz loc_100F2EA  +
test dword ptr [ebx+204h] 100000h +
jz loc_100F2EA  +
push esi  +
call sub_1009CB4  +
shr eax 1 +
push eax  +
push 138Dh  +
call sub_100B775  +
push eax  +
push esi  +
call sub_100A37C  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008775  +
leave   +
retn 10h  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_100F30C  +
lea edi [ebp+var_C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_100F3C8  +
call sub_100C13F  +
jmp loc_100F34D  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_100F336  +
lea edi [ebp+var_C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_100F3C8  +
call sub_100C10A  +
push ecx  +
push ecx  +
fstp  [esp+5Ch+var_5C] +
push edi  +
push esi  +
call sub_1009CB4  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
call sub_100A22E  +
add esp 14h +
jmp loc_100F2B9  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_100F37C  +
lea edi [ebp+var_14] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jnz loc_100F3C8  +
call sub_100C09E  +
push eax  +
push edi  +
push esi  +
call sub_1009CB4  +
shr eax 1 +
dec eax  +
push eax  +
push esi  +
call sub_100A22E  +
add esp 10h +
jmp loc_100F2B9  +
lea edi [ebx+208h] +
test ecx 2000h +
jnz loc_100F3BA  +
lea edi [ebp+var_1C] +
push [ebp+arg_4]  +
push [ebp+var_20]  +
test ecx 4000h +
jz loc_100F3EA  +
call sub_100BFFA  +
test eax eax +
jz loc_100F2EA  +
push [ebp+lpString]  +
push edi  +
push dword ptr [ebx+200h]  +
push eax  +
call sub_100F07A  +
jmp loc_100F2B9  +
call sub_100C033  +
test eax eax +
jz loc_100F2EA  +
jmp loc_100F38F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_8] edi +
cmp [ebp+hConsoleOutput] edi +
jz loc_100F860  +
mov esi [ebp+arg_8] +
cmp esi edi +
jz loc_100F860  +
push 1  +
mov ebx 1000h +
push ebx  +
push edi  +
push 16h  +
call sub_100A8D6  +
mov [ebp+lpMem] eax +
call sub_100B7AE  +
mov [ebp+var_8] eax +
cmp eax edi +
jz loc_100F852  +
cmp [ebp+lpMem] edi +
jz loc_100F852  +
test [ebp+arg_C] ebx +
jnz loc_100F552  +
mov eax [ebp+arg_4] +
xor ecx ecx +
cmp eax edi +
jbe loc_100F4E4  +
add esi 204h +
mov [ebp+arg_C] eax +
mov eax [esi] +
test eax ebx +
jnz loc_100F4D9  +
xor edi edi +
test eax 10000h +
jnz loc_100F490  +
and eax 0FF0h +
cmp eax 20h +
jz loc_100F490  +
cmp eax 30h +
jz loc_100F490  +
cmp eax 40h +
jnz loc_100F493  +
xor edi edi +
inc edi  +
cmp ecx 1 +
jnz loc_100F4A5  +
push offset asc_1001AF0  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
push [ebp+lpMem]  +
call sub_1009CB4  +
shr eax 1 +
push eax  +
lea eax [esi-204h] +
push eax  +
push [ebp+lpMem]  +
call sub_100A37C  +
push edi  +
push dword ptr [esi-4]  +
push [ebp+lpMem]  +
call sub_100B4BA  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
xor ecx ecx +
inc ecx  +
add esi 294h +
dec [ebp+arg_C]  +
jnz loc_100F46D  +
push offset asc_1001464  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
mov edi [ebp+arg_4] +
xor eax eax +
test edi edi +
jbe loc_100F545  +
mov esi [ebp+arg_8] +
add esi 200h +
test [esi+4] ebx +
jnz loc_100F53C  +
cmp eax 1 +
jnz loc_100F51A  +
push offset asc_1001AF0  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
mov eax [esi] +
lea ecx [eax+1] +
push ecx  +
push eax  +
push offset asc_1001C44  +
push [ebp+lpMem]  +
call sub_100AB63  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
xor eax eax +
inc eax  +
add esi 294h +
dec edi  +
jnz loc_100F503  +
push offset asc_1001464  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
push [ebp+arg_10]  +
call sub_100B84E  +
and [ebp+var_14] 0 +
mov [ebp+var_1C] eax +
test eax eax +
jbe loc_100F847  +
push [ebp+lpMem]  +
call sub_1009CB4  +
shr eax 1 +
push eax  +
push offset dword_1001388  +
push [ebp+lpMem]  +
call sub_100A37C  +
push [ebp+var_14]  +
push [ebp+arg_10]  +
call sub_100BFFA  +
xor ecx ecx +
mov [ebp+var_18] eax +
cmp eax ecx +
jz loc_100F838  +
mov [ebp+var_C] ecx +
mov [ebp+arg_C] ecx +
cmp [ebp+arg_4] ecx +
jbe loc_100F6CD  +
mov esi [ebp+arg_8] +
add esi 200h +
mov eax [esi+4] +
xor ebx ebx +
mov [ebp+var_10] ebx +
test eax 1000h +
jnz loc_100F6B8  +
test eax 88000h +
jz loc_100F5DD  +
mov eax [esi] +
push [ebp+lpMem]  +
inc ebx  +
mov [ebp+var_10] eax +
call sub_1009CB4  +
shr eax 1 +
mov [esi] eax +
mov edi offset asc_1001C50 +
push edi  +
push [ebp+var_18]  +
lea eax [esi-200h] +
push [ebp+arg_C]  +
push eax  +
call sub_100F16A  +
xor ecx ecx +
test ebx ebx +
jnz loc_100F627  +
mov eax [esi+4] +
test eax 10000h +
jnz loc_100F619  +
and eax 0FF0h +
cmp eax 20h +
jz loc_100F619  +
cmp eax 30h +
jz loc_100F619  +
cmp eax 40h +
jnz loc_100F61C  +
xor ecx ecx +
inc ecx  +
push ecx  +
push dword ptr [esi]  +
push [ebp+lpMem]  +
call sub_100B4BA  +
cmp ebx 1 +
jnz loc_100F631  +
mov eax [ebp+var_10] +
mov [esi] eax +
cmp [ebp+var_C] 1 +
jnz loc_100F644  +
push offset asc_1001AF0  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
test dword ptr [esi+4] 8000h +
jz loc_100F6A6  +
push dword ptr [esi]  +
push edi  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_100EF0F  +
push [ebp+lpMem]  +
call sub_1009F6C  +
test eax eax +
jz loc_100F6B1  +
push 3  +
push [ebp+var_8]  +
call sub_100BDF8  +
mov ebx eax +
cmp ebx 0FFFFFFFFh +
jz loc_100F6B1  +
push [ebp+arg_C]  +
push 0  +
push ebx  +
push [ebp+var_8]  +
call sub_100C5F8  +
push 0  +
push [ebp+lpMem]  +
push 2  +
push ebx  +
push [ebp+var_8]  +
call sub_100C5BB  +
push 0  +
push edi  +
push 1  +
push ebx  +
push [ebp+var_8]  +
call sub_100C5BB  +
jmp loc_100F6B1  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
mov [ebp+var_C] 1 +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_100F5B1  +
push offset asc_1001464  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
push [ebp+var_8]  +
call sub_100B84E  +
mov [ebp+var_10] eax +
jmp loc_100F830  +
and [ebp+var_C] 0 +
and [ebp+arg_C] 0 +
or edi 0FFFFFFFFh +
test eax eax +
jbe loc_100F820  +
jmp loc_100F702  +
mov edi [ebp+var_18] +
push 0  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_100C2C2  +
mov esi eax +
lea eax [edi+1] +
cmp eax esi +
jnb loc_100F779  +
mov edx [ebp+arg_8] +
mov ecx eax +
imul ecx ecx +
mov ebx esi +
lea edi [ecx+edx+200h] +
sub ebx eax +
test dword ptr [edi+4] 1000h +
jnz loc_100F770  +
cmp [ebp+var_C] 1 +
jnz loc_100F74A  +
push offset asc_1001AF0  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
mov eax [edi] +
lea ecx [eax+1] +
push ecx  +
push eax  +
push offset asc_1001AF0  +
push [ebp+lpMem]  +
call sub_100AB63  +
push [ebp+lpMem]  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
mov [ebp+var_C] 1 +
add edi 294h +
dec ebx  +
jnz loc_100F72E  +
cmp [ebp+var_C] 1 +
mov [ebp+var_18] esi +
jnz loc_100F78F  +
push offset asc_1001AF0  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
push 2  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_100C253  +
push 1  +
push [ebp+arg_C]  +
mov edi eax +
push [ebp+var_8]  +
call sub_100C253  +
mov ebx eax +
test edi edi +
jz loc_100F811  +
test ebx ebx +
jz loc_100F811  +
push [ebp+lpMem]  +
call sub_1009CB4  +
shr eax 1 +
push eax  +
push edi  +
mov edi [ebp+lpMem] +
push edi  +
call sub_100A37C  +
imul esi esi +
mov eax [ebp+arg_8] +
push dword ptr [esi+eax+200h]  +
push ebx  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_100EF0F  +
push edi  +
call sub_1009F6C  +
test eax eax +
jnz loc_100F801  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_100BF29  +
dec [ebp+arg_C]  +
dec [ebp+var_10]  +
jmp loc_100F811  +
push 0  +
push edi  +
push 2  +
push [ebp+arg_C]  +
push [ebp+var_8]  +
call sub_100C5BB  +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
cmp eax [ebp+var_10] +
jb loc_100F6FF  +
push offset asc_1001464  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
mov eax [ebp+var_10] +
test eax eax +
jnz loc_100F6EA  +
inc [ebp+var_14]  +
mov eax [ebp+var_14] +
cmp eax [ebp+var_1C] +
jb loc_100F569  +
lea eax [ebp+var_8] +
push eax  +
call sub_100B823  +
jmp loc_100F877  +
call ds:GetLastError  +
test eax eax +
jnz loc_100F872  +
push 8  +
jmp loc_100F86C  +
call ds:GetLastError  +
test eax eax +
jnz loc_100F872  +
push 57h  +
call ds:SetLastError  +
call sub_10097DB  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0ACh +
mov eax dword_101303C +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_10] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
xor ebx ebx +
push 7Ch  +
mov [ebp+var_9C] eax +
lea eax [ebp+var_80] +
push ebx  +
push eax  +
mov [ebp+hConsoleOutput] esi +
mov [ebp+var_A8] edi +
mov dword ptr [ebp+String] ebx +
call memset  +
add esp 0Ch +
cmp esi ebx +
jz loc_100FB19  +
cmp edi ebx +
jz loc_100FB19  +
push 1  +
push 1000h  +
push ebx  +
push 16h  +
call sub_100A8D6  +
mov ebx eax +
mov [ebp+lpMem] ebx +
test ebx ebx +
jnz loc_100F90D  +
call ds:GetLastError  +
test eax eax +
jnz loc_100FB2B  +
push 8  +
jmp loc_100FB25  +
mov esi [ebp+arg_4] +
and [ebp+var_90] 0 +
test esi esi +
jbe loc_100F938  +
push edi  +
call sub_1009F6C  +
cmp [ebp+var_90] eax +
jnb loc_100F92F  +
mov [ebp+var_90] eax +
add edi 294h +
dec esi  +
jnz loc_100F91B  +
push [ebp+var_9C]  +
call sub_100B84E  +
and [ebp+var_8C] 0 +
mov [ebp+var_A4] eax +
test eax eax +
jbe loc_100FB30  +
mov edi offset asc_1001464 +
push [ebp+var_8C]  +
push [ebp+var_9C]  +
call sub_100BFFA  +
mov [ebp+var_AC] eax +
test eax eax +
jz loc_100FAFF  +
and [ebp+var_94] 0 +
cmp [ebp+arg_4] 0 +
jbe loc_100FAE4  +
mov esi [ebp+var_A8] +
add esi 200h +
push ebx  +
call sub_1009CB4  +
shr eax 1 +
push eax  +
push offset dword_1001388  +
push ebx  +
call sub_100A37C  +
test dword ptr [esi+4] 1000h +
jnz loc_100FAC9  +
lea eax [esi-200h] +
push eax  +
push offset aS_3  +
push ebx  +
call sub_1009CB4  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
call sub_100A22E  +
mov eax [ebp+var_90] +
add esp 10h +
push 0  +
add eax 2 +
push eax  +
push ebx  +
call sub_100B4BA  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
push [ebp+lpMem]  +
mov ebx [esi] +
call sub_1009CB4  +
push edi  +
push [ebp+var_AC]  +
shr eax 1 +
push [ebp+var_94]  +
mov [esi] eax +
lea eax [esi-200h] +
push eax  +
call sub_100F16A  +
push edi  +
push [ebp+lpMem]  +
mov [esi] ebx +
mov ebx ds:wcstok +
call ebx  +
pop ecx  +
pop ecx  +
mov [ebp+lpString] eax +
test eax eax +
jz loc_100FAB7  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
push edi  +
push 0  +
call ebx  +
pop ecx  +
pop ecx  +
mov [ebp+lpString] eax +
test eax eax +
jz loc_100FAB7  +
push [ebp+lpMem]  +
call sub_1009CB4  +
shr eax 1 +
push eax  +
push offset asc_1001AF0  +
lea eax [ebp+String] +
push eax  +
call sub_100A37C  +
mov eax [ebp+var_90] +
push 0  +
add eax 2 +
push eax  +
lea eax [ebp+String] +
push eax  +
call sub_100B4BA  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
lea eax [ebp+String] +
push eax  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
jmp loc_100FA3E  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
mov ebx [ebp+lpMem] +
inc [ebp+var_94]  +
mov eax [ebp+var_94] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_100F999  +
mov eax [ebp+var_8C] +
inc eax  +
cmp eax [ebp+var_A4] +
jnb loc_100FAFF  +
push edi  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
inc [ebp+var_8C]  +
mov eax [ebp+var_8C] +
cmp eax [ebp+var_A4] +
jb loc_100F95D  +
jmp loc_100FB30  +
call ds:GetLastError  +
test eax eax +
jnz loc_100FB2B  +
push 57h  +
call ds:SetLastError  +
call sub_10097DB  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1008775  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
cmp [ebp+hConsoleOutput] 0 +
push ebx  +
push esi  +
push edi  +
jz loc_100FCFA  +
mov esi [ebp+arg_8] +
test esi esi +
jz loc_100FCFA  +
push 1  +
mov edi 1000h +
push edi  +
push 0  +
push 16h  +
call sub_100A8D6  +
mov ebx eax +
mov [ebp+lpString] ebx +
test ebx ebx +
jnz loc_100FB95  +
call ds:GetLastError  +
test eax eax +
jnz loc_100FD0C  +
push 8  +
jmp loc_100FD06  +
test [ebp+arg_C] edi +
jnz loc_100FBFD  +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jbe loc_100FBF0  +
mov [ebp+arg_C] ecx +
test [esi+204h] edi +
jnz loc_100FBE5  +
cmp eax 1 +
jnz loc_100FBC0  +
push offset asc_1001C70  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
push esi  +
push offset aS_4  +
push ebx  +
call sub_1009CB4  +
shr eax 1 +
dec eax  +
push eax  +
push ebx  +
call sub_100A22E  +
add esp 10h +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
xor eax eax +
inc eax  +
add esi 294h +
dec [ebp+arg_C]  +
jnz loc_100FBA6  +
push offset asc_1001464  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
push [ebp+arg_10]  +
call sub_100B84E  +
and [ebp+var_8] 0 +
mov [ebp+var_14] eax +
test eax eax +
jbe loc_100FD11  +
mov ebx offset asc_1001C60 +
push [ebp+var_8]  +
push [ebp+arg_10]  +
call sub_100BFFA  +
xor ecx ecx +
mov [ebp+var_10] eax +
cmp eax ecx +
jz loc_100FCE9  +
mov [ebp+var_C] ecx +
mov [ebp+arg_C] ecx +
cmp [ebp+arg_4] ecx +
jbe loc_100FCDC  +
mov esi [ebp+arg_8] +
add esi 200h +
push [ebp+lpString]  +
call sub_1009CB4  +
shr eax 1 +
push eax  +
push offset dword_1001388  +
push [ebp+lpString]  +
call sub_100A37C  +
test [esi+4] edi +
jnz loc_100FCC7  +
push [ebp+lpString]  +
mov edi [esi] +
call sub_1009CB4  +
push offset asc_1001C70  +
push [ebp+var_10]  +
shr eax 1 +
push [ebp+arg_C]  +
mov [esi] eax +
lea eax [esi-200h] +
push eax  +
call sub_100F16A  +
mov [esi] edi +
xor edi edi +
inc edi  +
cmp [ebp+var_C] edi +
jnz loc_100FCA2  +
push offset asc_1001C70  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
push [ebp+lpString]  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
push ebx  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
mov [ebp+var_C] edi +
mov edi 1000h +
inc [ebp+arg_C]  +
mov eax [ebp+arg_C] +
add esi 294h +
cmp eax [ebp+arg_4] +
jb loc_100FC49  +
push offset asc_1001464  +
push [ebp+hConsoleOutput]  +
call sub_100A402  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
cmp eax [ebp+var_14] +
jb loc_100FC19  +
jmp loc_100FD11  +
call ds:GetLastError  +
test eax eax +
jnz loc_100FD0C  +
push 57h  +
call ds:SetLastError  +
call sub_10097DB  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+hConsoleOutput] +
test esi esi +
jz loc_100FD78  +
mov edx [ebp+arg_8] +
test edx edx +
jz loc_100FD78  +
mov ecx [ebp+arg_C] +
mov eax ecx +
and eax 0Fh +
dec eax  +
jz loc_100FD62  +
dec eax  +
jz loc_100FD52  +
dec eax  +
jnz loc_100FD70  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_100FB46  +
jmp loc_100FD70  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_100F3FE  +
jmp loc_100FD70  +
push [ebp+arg_10]  +
push ecx  +
push edx  +
push [ebp+arg_4]  +
push esi  +
call sub_100F883  +
push esi  +
call ds:fflush  +
pop ecx  +
pop esi  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ds:__iob_func  +
add eax 20h +
push eax  +
call sub_100FD1D  +
pop ebp  +
retn 10h  +
***
retn   +
***
push dword ptr [ebp-10h]  +
call ??3@YAXPAX@Z  +
pop ecx  +
retn   +
***
retf   +
***
