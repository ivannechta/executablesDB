and edi [ebp-477FE49h] +
ja loc_1016596  +
test [eax-1B2C6EA8h] dl +
cmp ah gs:[ebp-1Fh] +
push ecx  +
retf 0C365h  +
***
jmp far ptr 8D4Ah:0D4018697h  +
***
stc   +
lds esi [eax+51226BEDh] +
shr byte ptr [ecx] cl +
retf 0B4BBh  +
***
add [ebx-0E74A901h] cl +
push dword ptr [esi]  +
call sub_1017EDF  +
and dword ptr [esi] 0 +
pop ecx  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
ja loc_10167BA  +
mov eax [ebp+arg_0] +
jb loc_10167B1  +
cmp eax 0FFFFFFFFh +
ja loc_10167BA  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_10167C5  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax [ebp+arg_4] +
add eax ecx +
cmp eax ecx +
jb loc_10167E8  +
mov ecx [ebp+arg_8] +
mov [ecx] eax +
xor eax eax +
jmp loc_10167F3  +
mov eax [ebp+arg_8] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax 80070216h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_8] +
jz loc_101683B  +
mov esi [edi] +
jmp loc_1016826  +
push eax  +
push dword ptr [ebx]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1016857  +
add esi 8 +
mov eax [esi] +
test eax eax +
jnz loc_1016814  +
push offset aInvalidCommand  +
push offset hFile  +
call sub_1018F8F  +
push ebx  +
push [ebp+arg_0]  +
call dword ptr [edi+4]  +
push offset dword_1029268  +
lea eax [ebp+arg_0] +
push eax  +
mov [ebp+arg_0] 1 +
call _CxxThrowException  +
mov eax [ebp+arg_0] +
add ebx 4 +
push ebx  +
dec eax  +
push eax  +
call dword ptr [esi+4]  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ds:MultiByteToWideChar +
push edi  +
push 0  +
push 0  +
push 0FFFFFFFFh  +
push [ebp+lpMultiByteStr]  +
push 0  +
push 3  +
call esi  +
mov edi eax +
test edi edi +
jnz loc_1016896  +
xor eax eax +
jmp loc_10168CD  +
xor ecx ecx +
push 2  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_1019242  +
pop ecx  +
push edi  +
push eax  +
push 0FFFFFFFFh  +
push [ebp+lpMultiByteStr]  +
mov [ebp+var_4] eax +
push 0  +
push 3  +
call esi  +
test eax eax +
jnz loc_10168CA  +
push [ebp+var_4]  +
call sub_1017EF4  +
pop ecx  +
jmp loc_1016892  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor edi edi +
cmp [ebp+lpWideCharStr] edi +
jnz loc_10168EA  +
xor eax eax +
jmp loc_1016934  +
push ebx  +
push esi  +
mov esi ds:WideCharToMultiByte +
push edi  +
push edi  +
push edi  +
push edi  +
push 0FFFFFFFFh  +
push [ebp+lpWideCharStr]  +
push edi  +
push 3  +
call esi  +
mov ebx eax +
cmp ebx edi +
jz loc_101692B  +
push ebx  +
call sub_1019242  +
pop ecx  +
push edi  +
push edi  +
push ebx  +
push eax  +
push 0FFFFFFFFh  +
push [ebp+lpWideCharStr]  +
mov [ebp+var_4] eax +
push edi  +
push 3  +
call esi  +
test eax eax +
jnz loc_101692F  +
push [ebp+var_4]  +
call sub_1017EF4  +
pop ecx  +
xor eax eax +
jmp loc_1016932  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
pop edi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ds:getc +
xor bl bl +
jmp loc_101695B  +
cmp eax 20h +
jz loc_1016959  +
cmp eax 9 +
jnz loc_1016968  +
mov bl 1 +
push [ebp+arg_0]  +
call esi  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jnz loc_101694F  +
jmp loc_1016973  +
push [ebp+arg_0]  +
push eax  +
call ungetc  +
pop ecx  +
pop ecx  +
pop esi  +
mov al bl +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:getc +
push edi  +
mov edi [ebp+arg_0] +
push edi  +
call esi  +
pop ecx  +
push edi  +
cmp eax 0Dh +
jz loc_10169A6  +
push eax  +
call ungetc  +
pop ecx  +
pop ecx  +
xor al al +
jmp loc_10169B3  +
call esi  +
pop ecx  +
cmp eax 0Ah +
jz loc_10169B1  +
push edi  +
jmp loc_101699A  +
mov al 1 +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_0]  +
call ds:getc  +
mov esi eax +
pop ecx  +
cmp esi 0FFFFFFFFh +
jnz loc_10169D9  +
xor al al +
jmp loc_10169EA  +
push [ebp+arg_0]  +
push esi  +
call ungetc  +
pop ecx  +
cmp esi 23h +
pop ecx  +
setz al  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi ds:getc +
push edi  +
mov edi [ebp+arg_0] +
mov [ebp+var_1] 0 +
jmp loc_1016A2C  +
push edi  +
cmp eax 23h +
jnz loc_1016A37  +
mov [ebp+var_1] 1 +
jmp loc_1016A1D  +
cmp eax 0Ah +
jz loc_1016A27  +
push edi  +
call esi  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jnz loc_1016A17  +
jmp loc_1016A2C  +
mov eax [ebp+arg_4] +
inc dword ptr [eax]  +
push edi  +
call esi  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jnz loc_1016A0B  +
jmp loc_1016A3F  +
push eax  +
call ungetc  +
pop ecx  +
pop ecx  +
mov al [ebp+var_1] +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_8] +
mov eax [esi] +
push edi  +
mov edi [ebp+arg_0] +
cmp [ebx] eax +
jnz loc_1016AED  +
lea ecx [ebp+arg_8] +
push ecx  +
push 2  +
pop ecx  +
mul  ecx +
push edx  +
push eax  +
call sub_101679C  +
test eax eax +
jz loc_1016A91  +
mov [ebp+arg_C] 80070057h +
push offset dword_1029268  +
lea eax [ebp+arg_C] +
push eax  +
call _CxxThrowException  +
lea eax [ebp+arg_8] +
push eax  +
push 1  +
push [ebp+arg_8]  +
call sub_10167CE  +
test eax eax +
jnz loc_1016A7C  +
push [ebp+arg_8]  +
call sub_1019242  +
pop ecx  +
mov [ebp+arg_4] eax +
test eax eax +
jnz loc_1016ACB  +
push offset aOutOfMemory  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp+arg_C] 1 +
jmp loc_1016A83  +
push dword ptr [esi]  +
push dword ptr [edi]  +
push eax  +
call memcpy  +
mov eax [esi] +
mov [ebx] eax +
push dword ptr [edi]  +
call sub_1017EDF  +
mov eax [ebp+arg_4] +
mov [edi] eax +
mov eax [ebp+arg_8] +
add esp 10h +
mov [esi] eax +
mov eax [edi] +
mov ecx [ebx] +
mov dl byte ptr [ebp+arg_C] +
pop edi  +
mov [eax+ecx] dl +
inc dword ptr [ebx]  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push 64h  +
pop eax  +
push eax  +
mov [ebp+var_8] eax +
call sub_1019242  +
and [ebp+var_C] 0 +
pop ecx  +
mov [ebp+var_4] eax +
xor bl bl +
push [ebp+arg_0]  +
call ds:getc  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_1016BA2  +
cmp eax 9 +
jz loc_1016B4F  +
cmp eax 0Dh +
jz loc_1016B6D  +
cmp eax 20h +
jz loc_1016B4F  +
cmp eax 22h +
jnz loc_1016B53  +
test bl bl +
jnz loc_1016BA2  +
inc bl  +
jmp loc_1016B24  +
test bl bl +
jz loc_1016B67  +
push eax  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_1016A4D  +
jmp loc_1016B24  +
push [ebp+arg_0]  +
push eax  +
jmp loc_1016B9B  +
test bl bl +
jz loc_1016B96  +
push offset aHasNoClosingQu  +
push 0  +
push [ebp+arg_4]  +
push offset aWarningQuotedS  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push [ebp+arg_0]  +
push 0Dh  +
call ungetc  +
pop ecx  +
pop ecx  +
push 0  +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_4] +
push eax  +
call sub_1016A4D  +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_4] +
mov [eax] ecx +
mov al 1 +
pop ebx  +
leave   +
retn 0Ch  +
***
call __EH_prolog3_catch  +
push dword ptr [ebp-18h]  +
call sub_1017EDF  +
mov eax [ebp+14h] +
push dword ptr [eax]  +
call sub_1017EF4  +
mov eax [ebp+10h] +
push dword ptr [eax]  +
call sub_1017EF4  +
add esp 10h +
xor ebx ebx +
push ebx  +
push ebx  +
jmp loc_1016C5E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push esi  +
call sub_10169BE  +
test al al +
jz loc_1016E0C  +
push [ebp+arg_4]  +
push esi  +
call sub_10169F4  +
push esi  +
call ds:feof  +
pop ecx  +
test eax eax +
jz loc_1016E1C  +
xor al al +
jmp loc_1016E2B  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push esi  +
call sub_1016BC9  +
pop esi  +
pop ebp  +
retn 10h  +
***
call __EH_prolog3_catch  +
xor esi esi +
push offset aRb  +
push dword ptr [ebp+8]  +
xor edi edi +
mov [ebp-20h] esi +
mov dword ptr [ebp-24h] 1 +
mov [ebp-4] esi +
mov [ebp-14h] edi +
xor ebx ebx +
mov [ebp-1Ch] esi +
mov [ebp-18h] esi +
call ds:_wfopen  +
pop ecx  +
pop ecx  +
mov [ebp-2Ch] eax +
test eax eax +
jnz loc_1016E8D  +
call ds:__doserrno  +
mov eax [eax] +
mov [ebp-28h] eax +
push offset dword_1029268  +
lea eax [ebp-28h] +
push eax  +
call _CxxThrowException  +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
lea eax [ebp-24h] +
push eax  +
push dword ptr [ebp-2Ch]  +
call sub_1016DF0  +
test al al +
jz loc_1016F58  +
push offset aRemoteName  +
push offset hFile  +
call sub_1018F8F  +
push dword ptr [ebp-1Ch]  +
push eax  +
call sub_1018F8F  +
push offset aLocalName  +
push eax  +
call sub_1018F8F  +
push dword ptr [ebp-18h]  +
push eax  +
call sub_1018F8F  +
push offset a__0  +
push eax  +
call sub_1018F8F  +
cmp esi ebx +
jb loc_1016F42  +
xor ecx ecx +
push 8  +
lea esi [ebx+ebx+0Ah] +
pop edx  +
mov eax esi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_1019242  +
mov edi eax +
pop ecx  +
test edi edi +
jnz loc_1016F19  +
mov dword ptr [ebp-30h] 8 +
push offset dword_1029268  +
lea eax [ebp-30h] +
jmp loc_1016E87  +
***
cmp dword ptr [ebp-14h] 0 +
jz loc_1016F31  +
mov eax ebx +
shl eax 3 +
push eax  +
push dword ptr [ebp-14h]  +
push edi  +
call memcpy  +
add esp 0Ch +
push dword ptr [ebp-14h]  +
call sub_1017EDF  +
mov ebx esi +
mov esi [ebp-20h] +
pop ecx  +
mov [ebp-14h] edi +
mov eax [ebp-18h] +
mov [edi+esi*8+4] eax +
mov eax [ebp-1Ch] +
mov [edi+esi*8] eax +
inc esi  +
mov [ebp-20h] esi +
jmp loc_1016E8D  +
***
push 0  +
push esi  +
push offset hFile  +
call sub_1018FC7  +
push offset aFileSReadFrom  +
push eax  +
call sub_1018F8F  +
push dword ptr [ebp+8]  +
push eax  +
call sub_1018F8F  +
push offset a__0  +
push eax  +
call sub_1018F8F  +
mov eax [ebp+0Ch] +
mov [eax] edi +
mov eax [ebp+10h] +
mov [eax] esi +
call __EH_epilog3  +
retn 0Ch  +
***
mov eax [ebp-24h] +
push 0  +
inc eax  +
push eax  +
push offset aErrorNearLine  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
and dword ptr [ebp-34h] 0 +
push offset dword_1029268  +
lea eax [ebp-34h] +
jmp loc_1016E87  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
mov edx [ebp+arg_8] +
mov ecx [ebp+arg_4] +
push ebx  +
xor eax eax +
and [edx] eax +
and [ecx] eax +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_28] ecx +
movzx ecx word ptr [esi] +
mov [ebp+var_2C] edx +
push edi  +
mov edx esi +
test cx cx +
jz loc_1017010  +
movzx ecx cx +
cmp cx 2Ch +
jnz loc_1017006  +
inc eax  +
inc edx  +
inc edx  +
movzx ecx word ptr [edx] +
test cx cx +
jnz loc_1016FFF  +
inc eax  +
xor ecx ecx +
push 10h  +
pop edx  +
mov [ebp+var_1C] eax +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_1019242  +
mov edi offset asc_100240C +
push edi  +
push esi  +
mov esi ds:wcstok +
mov [ebp+var_10] eax +
call esi  +
and [ebp+var_14] 0 +
mov ebx eax +
add esp 0Ch +
test ebx ebx +
jz loc_1017137  +
mov eax [ebp+var_10] +
mov [ebp+var_18] eax +
mov eax [ebp+var_14] +
cmp eax [ebp+var_1C] +
jnb loc_1017133  +
lea eax [ebp+var_34] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
push offset aI64uI64u  +
push ebx  +
call ds:swscanf  +
add esp 10h +
cmp eax 2 +
jnz loc_1017095  +
mov eax [ebp+var_18] +
mov ecx [ebp+var_24] +
mov [eax] ecx +
mov ecx [ebp+var_20] +
mov [eax+4] ecx +
mov ecx [ebp+var_34] +
mov [eax+8] ecx +
mov ecx [ebp+var_30] +
mov [eax+0Ch] ecx +
jmp loc_10170DC  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_24] +
push eax  +
push offset aI64u3c  +
push ebx  +
call ds:swscanf  +
add esp 10h +
cmp eax 2 +
jnz loc_10170F6  +
cmp word ptr [ebp+var_C] 65h +
jnz loc_10170F6  +
cmp word ptr [ebp+var_C+2] 6Fh +
jnz loc_10170F6  +
cmp [ebp+var_8] 66h +
jnz loc_10170F6  +
mov eax [ebp+var_18] +
mov ecx [ebp+var_24] +
or dword ptr [eax+8] 0FFFFFFFFh +
or dword ptr [eax+0Ch] 0FFFFFFFFh +
mov [eax] ecx +
mov ecx [ebp+var_20] +
mov [eax+4] ecx +
push edi  +
push 0  +
call esi  +
inc [ebp+var_14]  +
add [ebp+var_18] 10h +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_1017051  +
jmp loc_1017137  +
push offset aIsNotAValidRan  +
push ebx  +
push offset asc_10023A8  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push [ebp+var_10]  +
call sub_1017EF4  +
xor al al +
pop ecx  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn 0Ch  +
test ebx ebx +
jnz loc_1017117  +
mov eax [ebp+var_1C] +
cmp [ebp+var_14] eax +
jb loc_1017117  +
mov ecx [ebp+var_28] +
mov [ecx] eax +
mov eax [ebp+var_2C] +
mov ecx [ebp+var_10] +
mov [eax] ecx +
mov al 1 +
jmp loc_1017122  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 20h +
jge loc_1017164  +
xor al al +
jmp loc_101716B  +
cmp [ebp+arg_0] 7Eh +
setle al  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 90h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor eax eax +
xor ebx ebx +
mov word ptr [ebp+var_90] ax +
mov [ebp+var_8] ax +
cmp [ebp+arg_4] ebx +
jbe loc_1017259  +
push esi  +
push edi  +
mov esi ebx +
and esi 0Fh +
jnz loc_10171EA  +
push offset asc_1002440  +
lea eax [ebp+var_90] +
push eax  +
push offset asc_1002434  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push 22h  +
pop ecx  +
push 20h  +
pop eax  +
movzx edx ax +
mov eax edx +
shl edx 10h +
lea edi [ebp+var_90] +
or eax edx +
stos   +
mov eax [ebp+arg_0] +
mov edi esi +
imul edi edi +
lea ecx [ebx+eax] +
movzx edx byte ptr [ecx] +
mov eax esi +
shr eax 2 +
add eax edi +
mov edi edx +
shr edi 4 +
mov di ds:word_1002410[edi*2] +
add eax eax +
and edx 8000000Fh +
mov word ptr [ebp+eax+var_90] di +
jns loc_1017223  +
dec edx  +
or edx 0FFFFFFF0h +
inc edx  +
movzx ecx byte ptr [ecx] +
mov dx ds:word_1002410[edx*2] +
push ecx  +
mov word ptr [ebp+eax+var_90+2] dx +
call sub_1017155  +
test al al +
jz loc_1017245  +
movzx eax cl +
jmp loc_1017248  +
push 2Eh  +
pop eax  +
inc ebx  +
mov [ebp+esi*2+var_28] ax +
cmp ebx [ebp+arg_4] +
jb loc_10171A4  +
pop edi  +
pop esi  +
push offset asc_1002440  +
lea eax [ebp+var_90] +
push eax  +
push offset asc_1002434  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp off_102C004 esi +
jz loc_101733C  +
mov eax offset off_102C004 +
push dword ptr [eax]  +
push dword ptr [ebp+8]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1017374  +
inc esi  +
lea eax off_102C004[esi*8] +
cmp dword ptr [eax] 0 +
jnz loc_101731E  +
push offset aIsNotAValidC_0  +
push dword ptr [ebp+8]  +
push offset asc_10023A8  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+8] +
push eax  +
mov dword ptr [ebp+8] 1 +
call _CxxThrowException  +
mov eax dword_102C008[esi*8] +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 28h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
push 1DB1h  +
push 5  +
push 7  +
push offset aU_U_U  +
lea eax [ebp+var_28] +
push 12h  +
push eax  +
call swprintf_s  +
add esp 18h +
mov eax offset asc_1002440 +
push eax  +
push offset aAdministrative  +
push offset aBitsadminIsDep  +
push eax  +
push offset aCCopyright2000  +
push offset aBitsAdministra  +
push offset asc_1002620  +
lea ecx [ebp+var_28] +
push ecx  +
push offset aBitsadminVersi  +
push eax  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1027CE5  +
leave   +
retn   +
***
mov edi edi +
push esi  +
push offset aUsageBitsadmin  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
push offset aTheFollowingCo  +
push esi  +
call sub_1018F8F  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset off_10020AC  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_10167FC  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset off_10020B8  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_10167FC  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset off_10020C4  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_10167FC  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset off_10020D0  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_10167FC  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
sub eax 0 +
jz loc_10174E9  +
dec eax  +
jz loc_10174E2  +
dec eax  +
jz loc_10174E9  +
xor eax eax +
jmp loc_10174F6  +
push 1F4h  +
jmp loc_10174EE  +
push 1388h  +
call sub_10186E3  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
shr ecx 1 +
push 0  +
pop eax  +
jz loc_1017516  +
cmp ecx 7FFFFFFFh +
jbe loc_101751B  +
mov eax 80070057h +
test eax eax +
jl loc_1017558  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1017548  +
cmp eax esi +
ja loc_1017548  +
jnz loc_1017553  +
jmp loc_101754D  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
call __EH_prolog3_GS  +
cmp dword ptr [ebp+0Ch] 0 +
mov esi [ebp+8] +
jge loc_1017660  +
call sub_1017F37  +
mov ebx offset asc_1002440 +
mov edi offset hFile +
test al al +
jz loc_101759C  +
call sub_101804E  +
test ax ax +
jz loc_101759C  +
push ebx  +
push edi  +
call sub_1018F8F  +
push dword ptr [ebp+0Ch]  +
lea eax [ebp-28h] +
push offset a0x8_8x  +
push 18h  +
push eax  +
call sub_10174FF  +
add esp 10h +
test eax eax +
jl loc_1017660  +
push ebx  +
lea eax [ebp-28h] +
push eax  +
push offset asc_1007DFC  +
push esi  +
push edi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
and dword ptr [ebp-2Ch] 0 +
and dword ptr [ebp-4] 0 +
mov esi 80070717h +
call ds:GetThreadLocale  +
and dword ptr [ebp-30h] 0 +
mov [ebp-38h] eax +
mov dword ptr [ebp-34h] 400h +
cmp esi 80070717h +
jz loc_101760E  +
cmp esi 8007013Dh +
jnz loc_1017657  +
cmp dword ptr [ebp-30h] 2 +
jnb loc_1017657  +
push dword ptr [ebp-2Ch]  +
mov esi dword_102C3B4 +
call sub_1017EDF  +
and dword ptr [ebp-2Ch] 0 +
mov eax [esi] +
pop ecx  +
lea ecx [ebp-2Ch] +
push ecx  +
mov ecx [ebp-30h] +
push dword ptr [ebp+ecx*4-38h]  +
push dword ptr [ebp+0Ch]  +
push esi  +
call dword ptr [eax+18h]  +
mov esi eax +
test esi esi +
jge loc_1017646  +
inc dword ptr [ebp-30h]  +
jmp loc_10175FE  +
push ebx  +
lea eax [ebp-2Ch] +
push eax  +
push edi  +
call sub_1019007  +
push eax  +
call sub_1018F8F  +
push dword ptr [ebp-2Ch]  +
call sub_1017EDF  +
pop ecx  +
call sub_1027DFF  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jge loc_1017694  +
push esi  +
push [ebp+arg_0]  +
call sub_101755F  +
push offset dword_1029268  +
lea eax [ebp+arg_4] +
push eax  +
mov [ebp+arg_4] esi +
call _CxxThrowException  +
pop esi  +
pop ebp  +
retn 8  +
***
call sub_101742E  +
retn 8  +
***
cmp dword_102C3B4 0 +
jnz locret_10176E2  +
push esi  +
mov esi offset dword_102C3B4 +
mov ecx esi +
call sub_101A0FE  +
push esi  +
push offset riid  +
push 4  +
push 0  +
push offset rclsid  +
call ds:CoCreateInstance  +
push eax  +
push offset aUnableToConnec  +
call sub_1018811  +
pop esi  +
retn   +
***
call __EH_prolog3_catch  +
mov edi [ebp-1Ch] +
cmp dword ptr [edi] 800700E8h +
jnz loc_10178A8  +
call sub_1017FEE  +
push dword ptr [edi]  +
call ds:exit  +
cmp byte_102C3AD 0 +
jnz loc_101789B  +
mov esi offset hFile +
push 0  +
mov ecx esi +
call loc_1018C57  +
cmp dword ptr [ebp-14h] 0 +
mov byte_102C3BC 0 +
jz loc_101789B  +
call sub_1017F37  +
test al al +
jz loc_101789B  +
call sub_101804E  +
test ax ax +
jz loc_101789B  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
jmp loc_101789B  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_1017905  +
mov ecx [ebp+arg_4] +
mov [eax] ecx +
add eax 8 +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_1017929  +
cmp [esi] ax +
jz loc_1017925  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_101791B  +
test edx edx +
jnz loc_101792E  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_101793F  +
test eax eax +
jl loc_101793C  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test ecx ecx +
jz loc_1017955  +
cmp ecx [ebp+arg_0] +
jbe loc_101795A  +
mov eax 80070057h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test [ebp+arg_8] 100h +
jz loc_1017988  +
cmp [ebp+arg_0] eax +
jnz loc_101797C  +
cmp ecx eax +
jnz loc_1017981  +
cmp ecx [ebp+arg_4] +
jbe loc_1017990  +
mov eax 80070057h +
jmp loc_1017990  +
push [ebp+arg_4]  +
call sub_1017945  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_10179CE  +
cmp [ebp+arg_4] eax +
jz loc_10179CA  +
movzx edx word ptr [ebx] +
test dx dx +
jz loc_10179CA  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
inc ebx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_10179AD  +
test esi esi +
jnz loc_10179D6  +
dec ecx  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10179E4  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push [ebp+arg_8]  +
mov esi eax +
push [ebp+arg_4]  +
xor ebx ebx +
dec esi  +
push esi  +
push edi  +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1017A19  +
cmp eax esi +
ja loc_1017A19  +
jz loc_1017A1E  +
jmp loc_1017A26  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
mov eax esi +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1017A2F  +
mov [ecx] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp ecx 2 +
jbe loc_1017A5F  +
add ecx 0FFFFFFFEh +
and eax 0FFh +
push ecx  +
push eax  +
mov eax [ebp+arg_0] +
add eax 2 +
push eax  +
call memset  +
add esp 0Ch +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
shr esi 1 +
jz loc_1017A94  +
test [ebp+arg_8] 1000h +
jz loc_1017A94  +
mov edx [ebp+arg_4] +
lea eax [edi+ecx*2] +
mov [edx] eax +
mov edx esi +
sub edx ecx +
xor ecx ecx +
mov [ebx] edx +
mov [eax] cx +
test [ebp+arg_8] 400h +
jz loc_1017ADC  +
mov eax [ebp+arg_8] +
push [ebp+arg_0]  +
and eax 0FFh +
push eax  +
push edi  +
mov [ebp+var_4] eax +
call memset  +
add esp 0Ch +
cmp [ebp+var_4] 0 +
jnz loc_1017AC4  +
mov eax [ebp+arg_4] +
mov [eax] edi +
mov [ebx] esi +
jmp loc_1017ADC  +
test esi esi +
jbe loc_1017AF5  +
mov ecx [ebp+arg_4] +
lea eax [edi+esi*2-2] +
mov [ecx] eax +
xor ecx ecx +
mov dword ptr [ebx] 1 +
mov [eax] cx +
test esi esi +
jbe loc_1017AF5  +
test [ebp+arg_8] 800h +
jz loc_1017AF5  +
mov eax [ebp+arg_4] +
mov [eax] edi +
xor eax eax +
mov [ebx] esi +
mov [edi] ax +
xor eax eax +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push offset ModuleName  +
xor esi esi +
call ds:GetModuleHandleW  +
push [ebp+lpProcName]  +
push eax  +
call ds:GetProcAddress  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
test eax eax +
jnz loc_1017B3D  +
call ds:GetLastError  +
test eax eax +
jle loc_1017B3B  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
mov edx [ebp+arg_8] +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_30] ecx +
mov [ebp+var_1C] edx +
mov [ebp+dwErrCode] esi +
mov [ebp+hMem] esi +
mov [ebp+var_2C] esi +
mov [ebp+var_24] 0Ah +
cmp eax esi +
jz loc_1017E36  +
cmp ecx esi +
jz loc_1017E36  +
cmp edx esi +
jz loc_1017E36  +
movzx ecx word ptr [eax] +
cmp cx 53h +
jz loc_1017BA6  +
cmp cx 73h +
jnz loc_1017BAF  +
push 2Dh  +
pop ebx  +
cmp [eax+2] bx +
jz loc_1017BB9  +
push 539h  +
jmp loc_1017E38  +
lea esi [eax+4] +
cmp word ptr [esi] 30h +
jnz loc_1017BD9  +
movzx eax word ptr [esi+2] +
cmp ax 78h +
jz loc_1017BD2  +
cmp ax 58h +
jnz loc_1017BD9  +
mov [ebp+var_24] 10h +
push [ebp+var_24]  +
lea eax [ebp+var_18] +
push eax  +
push esi  +
call ds:wcstol  +
mov edi [ebp+var_18] +
add esp 0Ch +
mov [ebp+var_11] al +
cmp edi esi +
jz loc_1017BAF  +
cmp [edi] bx +
jnz loc_1017BAF  +
add edi 2 +
cmp word ptr [edi] 0 +
jz loc_1017BAF  +
push ebx  +
push edi  +
call ds:wcschr  +
cmp word ptr [edi] 30h +
pop ecx  +
pop ecx  +
jnz loc_1017C27  +
movzx eax word ptr [edi+2] +
cmp ax 78h +
jz loc_1017C22  +
cmp ax 58h +
jnz loc_1017C27  +
push 10h  +
pop eax  +
jmp loc_1017C2A  +
mov eax [ebp+var_24] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push edi  +
call ds:wcstoul  +
mov esi [ebp+var_18] +
add esp 0Ch +
cmp esi edi +
jz loc_1017BAF  +
cmp [esi] bx +
jnz loc_1017BAF  +
cmp word ptr [esi+2] 0 +
jz loc_1017BAF  +
mov ecx eax +
shr ecx 8 +
mov [ebp+var_8] cl +
mov ecx eax +
mov [ebp+var_7] al +
shr ecx 10h +
shr eax 18h +
mov byte ptr [ebp-0Bh] 0 +
mov [ebp+var_C] 0 +
mov [ebp+var_9] cl +
mov [ebp+var_A] al +
mov [ebp+var_20] esi +
xor bl bl +
movzx eax word ptr [esi] +
mov edi 539h +
cmp ax 2Dh +
jnz loc_1017CB1  +
cmp [esi-2] ax +
jz loc_1017CB1  +
inc bl  +
cmp word ptr [esi+2] 30h +
jnz loc_1017CFA  +
lea eax [esi+4] +
movzx ecx word ptr [eax] +
cmp cx 78h +
jz loc_1017CAD  +
cmp cx 58h +
jnz loc_1017CFA  +
mov esi eax +
jmp loc_1017CFA  +
cmp ax 3Bh +
jz loc_1017D24  +
test ax ax +
jz loc_1017D24  +
cmp ax 29h +
jz loc_1017D24  +
cmp ax 20h +
jz loc_1017D24  +
cmp word ptr [esi+2] 3Ah +
jnz loc_1017CE1  +
cmp ax 47h +
jz loc_1017D24  +
cmp ax 4Fh +
jz loc_1017D24  +
cmp ax 53h +
jz loc_1017D24  +
push eax  +
call ds:iswxdigit  +
pop ecx  +
test eax eax +
jz loc_1017D00  +
cmp word ptr [esi] 44h +
jnz loc_1017CFA  +
cmp word ptr [esi+2] 3Ah +
jz loc_1017D0D  +
inc esi  +
inc esi  +
jnz loc_1017C7E  +
jmp loc_1017D45  +
mov eax [ebp+var_1C] +
mov [ebp+dwErrCode] edi +
mov [eax] esi +
jmp loc_1017E0C  +
movzx eax word ptr [esi] +
mov [ebp+var_34] eax +
xor eax eax +
mov [esi] ax +
mov eax [ebp+var_1C] +
mov [ebp+var_2C] esi +
mov [eax] esi +
inc bl  +
jmp loc_1017D45  +
lea eax [esi-2] +
cmp word ptr [eax] 2Dh +
jnz loc_1017D34  +
mov [ebp+dwErrCode] edi +
mov esi eax +
jmp loc_1017D36  +
inc bl  +
cmp [ebp+dwErrCode] 0 +
mov eax [ebp+var_1C] +
mov [eax] esi +
jnz loc_1017E0C  +
test bl bl +
jz loc_1017DE1  +
dec bl  +
mov [ebp+var_12] bl +
jz loc_1017DE1  +
mov edi ds:LocalAlloc +
add [ebp+var_20] 2 +
movzx esi bl +
mov eax esi +
shl eax 2 +
push eax  +
push 40h  +
mov [ebp+var_1C] eax +
call edi  +
mov [ebp+hMem] eax +
test eax eax +
jz loc_1017DD8  +
xor ebx ebx +
test esi esi +
jbe loc_1017DC3  +
mov ecx [ebp+var_20] +
cmp word ptr [ecx] 30h +
jnz loc_1017D9D  +
movzx eax word ptr [ecx+2] +
cmp ax 78h +
jz loc_1017D98  +
cmp ax 58h +
jnz loc_1017D9D  +
push 10h  +
pop eax  +
jmp loc_1017DA0  +
mov eax [ebp+var_24] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
push ecx  +
call ds:wcstoul  +
mov ecx [ebp+hMem] +
mov [ecx+ebx*4] eax +
mov eax [ebp+var_18] +
add eax 2 +
add esp 0Ch +
inc ebx  +
mov [ebp+var_20] eax +
cmp ebx esi +
jb loc_1017D7F  +
lea eax ds:0Ch[esi*4] +
push eax  +
push 40h  +
call edi  +
mov ecx [ebp+var_30] +
mov [ecx] eax +
test eax eax +
jnz loc_1017DE6  +
mov [ebp+dwErrCode] 8 +
jmp loc_1017E0C  +
mov [ebp+dwErrCode] edi +
jmp loc_1017E0C  +
mov cl [ebp+var_11] +
push [ebp+var_1C]  +
mov [eax] cl +
mov cl [ebp+var_12] +
push [ebp+hMem]  +
lea edi [eax+2] +
lea esi [ebp+var_C] +
movs   +
mov [eax+1] cl +
add eax 8 +
push eax  +
movs   +
call memcpy  +
add esp 0Ch +
push [ebp+hMem]  +
call ds:LocalFree  +
mov eax [ebp+var_2C] +
test eax eax +
jz loc_1017E23  +
mov cx word ptr [ebp+var_34] +
mov [eax] cx +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+dwErrCode] eax +
setz al  +
jmp loc_1017E40  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_1017EC9  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_1017EC9  +
lea eax [ebp+var_4] +
push eax  +
push esi  +
push edi  +
call sub_1017B49  +
mov ebx eax +
test ebx ebx +
jnz loc_1017E8E  +
push 57h  +
call ds:SetLastError  +
mov eax ebx +
jmp loc_1017ED3  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1017E93  +
mov ecx [ebp+var_4] +
sub eax edx +
sub ecx edi +
sar eax 1 +
sar ecx 1 +
cmp ecx eax +
jz loc_1017EC5  +
push 539h  +
call ds:SetLastError  +
push dword ptr [esi]  +
call ds:LocalFree  +
xor ebx ebx +
mov [esi] ebx +
jmp loc_1017E8A  +
push 0  +
jmp loc_1017E84  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_1017EDF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp byte_102C3AC 0 +
jz locret_1017F28  +
push offset dword_1029268  +
lea eax [ebp+var_4] +
push eax  +
mov [ebp+var_4] 0C000013Ah +
call _CxxThrowException  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp byte_10403D5 0 +
jz loc_1017F4D  +
mov al byte_10403D4 +
leave   +
retn   +
mov eax hFile +
push esi  +
push eax  +
mov esi eax +
call ds:GetFileType  +
cmp eax 2 +
jz loc_1017F74  +
mov byte_10403D4 0 +
mov byte_10403D5 1 +
xor al al +
pop esi  +
leave   +
retn   +
lea eax [ebp+Mode] +
push eax  +
push esi  +
call ds:GetConsoleMode  +
test eax eax +
jnz loc_1017F93  +
mov byte_10403D4 al +
xor al al +
mov byte_10403D5 1 +
jmp loc_1017F71  +
mov byte_10403D4 1 +
mov al 1 +
jmp loc_1017F8A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp byte_10403D7 0 +
jz loc_1017FB9  +
mov al byte_10403D6 +
leave   +
retn   +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
lea ecx [ebp+NumberOfEvents] +
push ecx  +
push eax  +
call ds:GetNumberOfConsoleInputEvents  +
test eax eax +
jz loc_1017FD9  +
mov al 1 +
mov byte_10403D7 al +
jmp loc_1017FE2  +
xor al al +
mov byte_10403D7 1 +
mov byte_10403D6 al +
leave   +
retn   +
***
mov edi edi +
push esi  +
call sub_1017FA3  +
mov esi ds:SetConsoleMode +
test al al +
jz loc_1018011  +
push dwMode  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
push eax  +
call esi  +
cmp byte_102C3AF 0 +
jz loc_1018047  +
push offset CriticalSection  +
call ds:EnterCriticalSection  +
movzx eax ConsoleScreenBufferInfo.wAttributes +
push eax  +
push hConsoleOutput  +
call ds:SetConsoleTextAttribute  +
push dword_102C38C  +
push hConsoleOutput  +
call esi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
mov esi offset CriticalSection +
push esi  +
call ds:EnterCriticalSection  +
lea eax [ebp+ConsoleScreenBufferInfo] +
push eax  +
push hConsoleOutput  +
call ds:GetConsoleScreenBufferInfo  +
test eax eax +
jnz loc_10180B8  +
push esi  +
call ds:LeaveCriticalSection  +
call ds:GetLastError  +
test eax eax +
jle loc_1018092  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
test esi esi +
jge loc_10180B4  +
push esi  +
push offset aUnableToGetCur  +
call sub_101872F  +
push offset dword_1029268  +
lea eax [ebp+var_4] +
push eax  +
mov [ebp+var_4] esi +
call _CxxThrowException  +
xor eax eax +
jmp loc_10180C8  +
push edi  +
movzx edi [ebp+ConsoleScreenBufferInfo.dwCursorPosition.X] +
push esi  +
call ds:LeaveCriticalSection  +
mov ax di +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov eax [ebp+SystemTimeAsFileTime.dwLowDateTime] +
mov edx [ebp+SystemTimeAsFileTime.dwHighDateTime] +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_1] 1 +
cmp [ebp+arg_0] edi +
jz loc_10181DA  +
mov esi [ebp+arg_4] +
cmp esi edi +
jz loc_10181DA  +
cmp [ebp+arg_8] edi +
jz loc_10181DA  +
lea eax ds:2[esi*4] +
push eax  +
call ds:malloc  +
mov ebx eax +
pop ecx  +
cmp ebx edi +
jz loc_10181DA  +
mov ecx ebx +
cmp esi edi +
jbe loc_10181CE  +
mov eax [ebp+arg_0] +
movzx esi byte ptr [edi+eax] +
mov eax esi +
cdq   +
and edx 0Fh +
add eax edx +
sar eax 4 +
mov [ebp+var_10] esi +
and esi 8000000Fh +
mov [ebp+var_C] eax +
jns loc_1018164  +
dec esi  +
or esi 0FFFFFFF0h +
inc esi  +
xor edx edx +
mov [ebp+var_8] esi +
inc edx  +
mov eax [ebp+edx*4+var_10] +
cmp eax 0Fh +
ja loc_10181BC  +
jmp ds:off_10181EA[eax*4]  +
push 30h  +
jmp loc_10181B8  +
push 31h  +
jmp loc_10181B8  +
push 32h  +
jmp loc_10181B8  +
push 33h  +
jmp loc_10181B8  +
push 34h  +
jmp loc_10181B8  +
push 35h  +
jmp loc_10181B8  +
push 36h  +
jmp loc_10181B8  +
push 37h  +
jmp loc_10181B8  +
push 38h  +
jmp loc_10181B8  +
push 39h  +
jmp loc_10181B8  +
push 41h  +
jmp loc_10181B8  +
push 42h  +
jmp loc_10181B8  +
push 43h  +
jmp loc_10181B8  +
push 44h  +
jmp loc_10181B8  +
push 45h  +
jmp loc_10181B8  +
push 46h  +
pop eax  +
mov [ecx] ax +
inc ecx  +
inc ecx  +
inc edx  +
cmp edx 2 +
jbe loc_101816A  +
inc edi  +
cmp edi [ebp+arg_4] +
jb loc_101813F  +
xor eax eax +
mov [ecx] ax +
mov eax [ebp+arg_8] +
mov [eax] ebx +
jmp loc_10181DE  +
mov [ebp+var_1] 0 +
mov al [ebp+var_1] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
mov ebx [ebp+10h] +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi [ebp+0Ch] +
mov eax esi +
mov [ebp-10h] edi +
mov [ebp-14h] ebx +
mov byte ptr [ebp-1] 1 +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_1018252  +
sub eax ecx +
sar eax 1 +
test edi edi +
jz loc_101836A  +
test ebx ebx +
jz loc_101836A  +
test eax eax +
jz loc_101836A  +
test al 1 +
jnz loc_101836A  +
shr eax 1 +
push eax  +
mov [ebp-8] eax +
call ds:malloc  +
xor ebx ebx +
pop ecx  +
cmp eax ebx +
jnz loc_101829B  +
mov [ebp-1] bl +
jmp loc_101836E  +
cmp [ebp-8] ebx +
jbe loc_101835E  +
mov ecx esi +
lea edx [ebx+eax] +
mov byte ptr [edx] 0 +
mov edi ecx +
mov dword ptr [ebp-0Ch] 2 +
mov cl [edx] +
shl cl 4 +
mov [edx] cl +
movzx esi word ptr [edi] +
cmp esi 61h +
jg loc_101832B  +
jz loc_1018326  +
cmp esi 38h +
jg loc_1018303  +
jz loc_10182FE  +
sub esi 30h +
cmp esi 7 +
ja loc_1018344  +
jmp ds:off_101837B[esi*4]  +
inc cl  +
jmp loc_1018342  +
add cl 2 +
jmp loc_1018342  +
add cl 3 +
jmp loc_1018342  +
add cl 4 +
jmp loc_1018342  +
add cl 5 +
jmp loc_1018342  +
add cl 6 +
jmp loc_1018342  +
add cl 7 +
jmp loc_1018342  +
add cl 8 +
jmp loc_1018342  +
sub esi 39h +
jz loc_1018321  +
sub esi 8 +
jz loc_1018326  +
dec esi  +
jz loc_101833F  +
dec esi  +
jz loc_101833A  +
dec esi  +
jz loc_1018335  +
dec esi  +
jz loc_1018330  +
dec esi  +
jnz loc_1018344  +
add cl 0Fh +
jmp loc_1018342  +
add cl 9 +
jmp loc_1018342  +
add cl 0Ah +
jmp loc_1018342  +
sub esi 62h +
jmp loc_101830E  +
***
add cl 0Eh +
jmp loc_1018342  +
add cl 0Dh +
jmp loc_1018342  +
add cl 0Ch +
jmp loc_1018342  +
add cl 0Bh +
mov [edx] cl +
inc edi  +
inc edi  +
dec dword ptr [ebp-0Ch]  +
jnz loc_10182B5  +
inc ebx  +
mov ecx edi +
cmp ebx [ebp-8] +
jb loc_10182A6  +
mov edi [ebp-10h] +
mov ecx [ebp-14h] +
mov edx [ebp-8] +
mov [ecx] edx +
mov [edi] eax +
jmp loc_101836E  +
mov byte ptr [ebp-1] 0 +
mov al [ebp-1] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
push dword ptr [ecx]  +
call sub_1017EDF  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_4] +
push esi  +
push edi  +
push [ebp+arg_14]  +
mov edi [ebp+arg_0] +
push 7FFFFFFFh  +
push edi  +
call sub_1017963  +
mov esi eax +
xor eax eax +
cmp esi eax +
jl loc_10184C2  +
test [ebp+arg_14] 100h +
push ebx  +
mov ebx ecx +
mov [ebp+arg_0] edi +
mov [ebp+var_4] ebx +
jz loc_10183F4  +
cmp [ebp+arg_8] eax +
jnz loc_10183F4  +
mov [ebp+arg_8] offset dword_1007F30 +
xor esi esi +
test [ebp+arg_14] 0FFFFE000h +
jz loc_101840F  +
mov esi 80070057h +
cmp ecx eax +
jz loc_101847B  +
xor eax eax +
mov [edi] ax +
jmp loc_101847B  +
cmp ecx eax +
jnz loc_1018430  +
mov edx [ebp+arg_8] +
cmp [edx] ax +
jz loc_10184AC  +
mov esi edi +
neg esi  +
sbb esi esi +
and esi 23h +
add esi 80070057h +
jmp loc_101847B  +
mov [ebp+arg_0] eax +
push 7FFFFFFEh  +
lea eax [ebp+arg_0] +
push eax  +
mov eax [ebp+arg_8] +
mov edx ecx +
mov ecx edi +
call sub_1017999  +
mov esi eax +
mov eax [ebp+arg_0] +
sub ebx eax +
lea ecx [edi+eax*2] +
mov [ebp+arg_0] ecx +
mov [ebp+var_4] ebx +
test esi esi +
jl loc_1018478  +
mov eax [ebp+arg_14] +
test eax 200h +
jz loc_10184AC  +
cmp ebx 1 +
jbe loc_10184AC  +
push [ebp+arg_0]  +
lea ecx [ebx+ebx] +
call sub_1017A3C  +
jmp loc_10184AC  +
mov ecx [ebp+arg_4] +
test [ebp+arg_14] 1C00h +
jz loc_10184A0  +
test ecx ecx +
jz loc_10184A0  +
push [ebp+arg_14]  +
lea eax [ebp+arg_0] +
push eax  +
lea eax [ecx+ecx] +
push eax  +
lea ebx [ebp+var_4] +
xor ecx ecx +
call sub_1017A6A  +
mov ebx [ebp+var_4] +
test esi esi +
jge loc_10184AC  +
cmp esi 8007007Ah +
jnz loc_10184C1  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_10184B8  +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_10184C1  +
mov [eax] ebx +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax [ebp+arg_14] +
mov edx [ebp+arg_4] +
mov [ebp+var_8] eax +
and [ebp+var_8] 100h +
push esi  +
push edi  +
jz loc_10185A8  +
push eax  +
push 7FFFFFFFh  +
push [ebp+arg_0]  +
mov ecx edx +
call sub_1017963  +
test eax eax +
jl loc_101850B  +
test edx edx +
jnz loc_10185C3  +
and [ebp+var_4] 0 +
mov esi eax +
test eax eax +
jl loc_10185A0  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
mov edi [ebp+arg_4] +
push ebx  +
sub edi eax +
xor esi esi +
lea ebx [ecx+eax*2] +
mov [ebp+var_C] ebx +
mov [ebp+var_10] edi +
cmp [ebp+var_8] esi +
jz loc_1018541  +
cmp [ebp+arg_8] esi +
jnz loc_1018541  +
mov [ebp+arg_8] offset dword_1007F30 +
test [ebp+arg_14] 0FFFFE000h +
jz loc_10185D3  +
mov esi 80070057h +
test [ebp+arg_14] 1C00h +
jz loc_1018581  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_1018581  +
push [ebp+arg_14]  +
mov edi [ebp+arg_0] +
lea ecx [ebp+var_C] +
push ecx  +
mov ecx [ebp+var_4] +
add eax eax +
push eax  +
lea ebx [ebp+var_10] +
call sub_1017A6A  +
mov ebx [ebp+var_C] +
mov edi [ebp+var_10] +
test esi esi +
jge loc_101858D  +
cmp esi 8007007Ah +
jnz loc_101859F  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_1018596  +
mov [eax] ebx +
mov eax [ebp+arg_10] +
test eax eax +
jz loc_101859F  +
mov [eax] edi +
pop ebx  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 18h  +
xor eax eax +
test edx edx +
jz loc_10185B6  +
cmp edx 7FFFFFFFh +
jbe loc_10185BB  +
mov eax 80070057h +
test eax eax +
jl loc_101850B  +
mov eax [ebp+arg_0] +
lea edi [ebp+var_4] +
call sub_101790E  +
jmp loc_101850F  +
cmp edi 1 +
ja loc_10185F4  +
mov eax [ebp+arg_8] +
cmp [eax] si +
jz loc_101858D  +
mov esi ecx +
neg esi  +
sbb esi esi +
and esi 23h +
add esi 80070057h +
jmp loc_1018553  +
push 7FFFFFFEh  +
lea eax [ebp+var_10] +
push eax  +
mov eax [ebp+arg_8] +
mov edx edi +
mov ecx ebx +
mov [ebp+var_10] esi +
call sub_1017999  +
mov esi eax +
mov eax [ebp+var_10] +
sub edi eax +
lea ebx [ebx+eax*2] +
mov [ebp+var_C] ebx +
mov [ebp+var_10] edi +
test esi esi +
jl loc_1018553  +
mov eax [ebp+arg_14] +
test eax 200h +
jz loc_101858D  +
cmp edi 1 +
jbe loc_101858D  +
lea ecx [edi+edi] +
push ebx  +
call sub_1017A3C  +
jmp loc_101858D  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_4] eax +
jz loc_1018663  +
cmp [ebp+arg_4] 7FFFFFFFh +
jbe loc_1018668  +
mov eax 80070057h +
test eax eax +
jl loc_1018682  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
mov eax [ebp+arg_4] +
push 0  +
call sub_10179F0  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push offset aSetthreaduilan  +
lea eax [ebp+var_4] +
push eax  +
call sub_1017B01  +
test eax eax +
jl locret_10186A6  +
push 0  +
call [ebp+var_4]  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dword ptr [ebp+arg_0]  +
mov esi offset word_10403D8 +
push offset a0x8_8x  +
push 18h  +
push esi  +
call sub_10174FF  +
add esp 10h +
test eax eax +
jge loc_10186D7  +
xor eax eax +
mov word_10403D8 ax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax TargetHandle +
mov byte_102C3AC 1 +
test eax eax +
jz loc_1018706  +
push 0  +
push eax  +
push offset pfnAPC  +
call ds:QueueUserAPC  +
push [ebp+dwMilliseconds]  +
call ds:Sleep  +
call sub_1017FEE  +
push 0C000013Ah  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
cmp dword ptr [ebp+dwMessageId] ebx +
mov [ebp+hMem] eax +
jge loc_10187FD  +
push esi  +
push edi  +
call sub_1017F37  +
mov edi offset asc_1002440 +
mov esi offset hFile +
test al al +
jz loc_101877A  +
call sub_101804E  +
test ax ax +
jz loc_101877A  +
push edi  +
mov ecx esi +
call sub_1018E4F  +
push dword ptr [ebp+dwMessageId]  +
lea eax [ebp+var_1C] +
push offset a0x8_8x  +
push 18h  +
push eax  +
call sub_10174FF  +
add esp 10h +
test eax eax +
jl loc_10187FB  +
push [ebp+hMem]  +
mov ecx esi +
call sub_1018E4F  +
push offset asc_1007DFC  +
mov ecx esi +
call sub_1018E4F  +
lea eax [ebp+var_1C] +
push eax  +
mov ecx esi +
call sub_1018E4F  +
push edi  +
mov ecx esi +
call sub_1018E4F  +
push ebx  +
push ebx  +
lea eax [ebp+hMem] +
push eax  +
mov [ebp+hMem] ebx +
call ds:GetThreadLocale  +
push eax  +
push dword ptr [ebp+dwMessageId]  +
push ebx  +
push 1100h  +
call ds:FormatMessageW  +
test eax eax +
jz loc_10187FB  +
push [ebp+hMem]  +
mov ecx esi +
call sub_1018E4F  +
push edi  +
mov ecx esi +
call sub_1018E4F  +
push [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi dword ptr [ebp+dwMessageId] +
test esi esi +
jge loc_1018838  +
push esi  +
push [ebp+arg_0]  +
call sub_101872F  +
push offset dword_1029268  +
lea eax [ebp+dwMessageId] +
push eax  +
mov dword ptr [ebp+dwMessageId] esi +
call _CxxThrowException  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
call sub_1017FA3  +
test al al +
jz locret_10188C4  +
push ebx  +
push esi  +
push edi  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
and [ebp+dwMode] 0 +
lea ecx [ebp+dwMode] +
push ecx  +
push eax  +
mov [ebp+hConsoleHandle] eax +
call ds:GetConsoleMode  +
mov ebx ds:GetLastError +
mov edi 0FFFFh +
mov esi 80070000h +
test eax eax +
jnz loc_1018898  +
call ebx  +
test eax eax +
jle loc_101888D  +
and eax edi +
or eax esi +
push eax  +
push offset aUnableToGetCon  +
call sub_1018811  +
and [ebp+dwMode] 0FFFFFFF9h +
push [ebp+dwMode]  +
push [ebp+hConsoleHandle]  +
call ds:SetConsoleMode  +
test eax eax +
jnz loc_10188C1  +
call ebx  +
test eax eax +
jle loc_10188B6  +
and eax edi +
or eax esi +
push eax  +
push offset aUnableToSetCon  +
call sub_1018811  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebx  +
push esi  +
push edi  +
call sub_1017FA3  +
mov ebx ds:GetLastError +
mov edi 0FFFFh +
mov esi 80070000h +
test al al +
jz loc_1018916  +
push offset dwMode  +
push 0FFFFFFF6h  +
call ds:GetStdHandle  +
push eax  +
call ds:GetConsoleMode  +
test eax eax +
jnz loc_1018916  +
call ebx  +
test eax eax +
jle loc_101890B  +
and eax edi +
or eax esi +
push eax  +
push offset aUnableToGetCon  +
call sub_1018811  +
call sub_1017F37  +
test al al +
jz loc_10189FF  +
mov eax hFile +
mov hConsoleOutput eax +
cmp eax 0FFFFFFFFh +
jnz loc_1018947  +
call ebx  +
test eax eax +
jle loc_101893C  +
and eax edi +
or eax esi +
push eax  +
push offset aUnableToGetC_0  +
call sub_1018811  +
push offset ConsoleScreenBufferInfo  +
push hConsoleOutput  +
call ds:GetConsoleScreenBufferInfo  +
test eax eax +
jnz loc_1018971  +
call ebx  +
test eax eax +
jle loc_1018966  +
and eax edi +
or eax esi +
push eax  +
push offset aUnableGetSetup  +
call sub_1018811  +
push offset dword_102C38C  +
push hConsoleOutput  +
call ds:GetConsoleMode  +
test eax eax +
jnz loc_101899B  +
call ebx  +
test eax eax +
jle loc_1018990  +
and eax edi +
or eax esi +
push eax  +
push offset aUnableGetSetup  +
call sub_1018811  +
push offset CriticalSection  +
call ds:InitializeCriticalSection  +
push offset CriticalSection  +
mov byte_102C3AF 1 +
call ds:EnterCriticalSection  +
cmp byte_102C058 0 +
mov eax dword_102C38C +
jz loc_10189CB  +
or eax 2 +
jmp loc_10189CE  +
and eax 0FFFFFFFDh +
push eax  +
push hConsoleOutput  +
call ds:SetConsoleMode  +
test eax eax +
jnz loc_10189F4  +
call ebx  +
test eax eax +
jle loc_10189E9  +
and eax edi +
or eax esi +
push eax  +
push offset aUnableSetConso  +
call sub_1018811  +
push offset CriticalSection  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push esi  +
mov esi offset CriticalSection +
push esi  +
call ds:EnterCriticalSection  +
cmp byte_102C058 0 +
mov eax dword_102C38C +
jz loc_1018A2A  +
or eax 2 +
jmp loc_1018A2D  +
and eax 0FFFFFFFDh +
push eax  +
push hConsoleOutput  +
call ds:SetConsoleMode  +
test eax eax +
jnz loc_1018A5D  +
call ds:GetLastError  +
test eax eax +
jle loc_1018A52  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push offset aUnableSetConso  +
call sub_1018811  +
push esi  +
call ds:LeaveCriticalSection  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push esi  +
push edi  +
mov edi offset CriticalSection +
push edi  +
call ds:EnterCriticalSection  +
xor eax eax +
mov [ebp+dwCursorPosition.X] ax +
mov [ebp+dwCursorPosition.Y] ax +
lea eax [ebp+wAttribute] +
push eax  +
push hConsoleOutput  +
call ds:GetConsoleScreenBufferInfo  +
test eax eax +
jz loc_1018AFD  +
mov ax [ebp+arg_0] +
movsx esi word ptr [ebp-1Eh] +
mov [ebp+dwCursorPosition.Y] ax +
cwde   +
sub esi eax +
movsx eax [ebp+wAttribute] +
imul esi eax +
lea eax [ebp+NumberOfAttrsWritten] +
push eax  +
push dword ptr [ebp+dwCursorPosition.X]  +
push esi  +
push 20h  +
push hConsoleOutput  +
call ds:FillConsoleOutputCharacterW  +
test eax eax +
jz loc_1018AFD  +
lea eax [ebp+NumberOfAttrsWritten] +
push eax  +
push dword ptr [ebp+dwCursorPosition.X]  +
push esi  +
push dword ptr [ebp-18h]  +
push hConsoleOutput  +
call ds:FillConsoleOutputAttribute  +
test eax eax +
jz loc_1018AFD  +
push dword ptr [ebp+dwCursorPosition.X]  +
push hConsoleOutput  +
call ds:SetConsoleCursorPosition  +
test eax eax +
jnz loc_1018B25  +
push edi  +
call ds:LeaveCriticalSection  +
call ds:GetLastError  +
test eax eax +
jle loc_1018B18  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push offset aUnableToMoveTo  +
call sub_1018811  +
jmp loc_1018B2C  +
push edi  +
call ds:LeaveCriticalSection  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 428h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov [ebp+var_424] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_420] eax +
mov esi 105h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
mov [ebp+var_428] 5Ch +
call ds:GetSystemDirectoryW  +
call ds:GetLastError  +
test eax eax +
jle loc_1018B9E  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
test ebx ebx +
jl loc_1018C40  +
push edi  +
mov edi 100h +
push edi  +
push 0  +
push 0  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
lea eax [ebp+LibFileName] +
push eax  +
call sub_10183AE  +
mov ebx eax +
test ebx ebx +
jl loc_1018C3F  +
push edi  +
push 0  +
push 0  +
lea eax [ebp+var_428] +
push eax  +
push esi  +
lea eax [ebp+LibFileName] +
push eax  +
call sub_10184CF  +
mov ebx eax +
test ebx ebx +
jl loc_1018C3F  +
push edi  +
push 0  +
push 0  +
push [ebp+var_424]  +
lea eax [ebp+LibFileName] +
push esi  +
push eax  +
call sub_10184CF  +
mov ebx eax +
test ebx ebx +
jl loc_1018C3F  +
push 0  +
push 0  +
lea eax [ebp+LibFileName] +
push eax  +
call ds:LoadLibraryExW  +
test eax eax +
jnz loc_1018C37  +
call ds:GetLastError  +
test eax eax +
jle loc_1018C33  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
jmp loc_1018C3F  +
mov ecx [ebp+var_420] +
mov [ecx] eax +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+8] edi +
jz loc_1018CD0  +
push ebx  +
call sub_1017F37  +
test al al +
jz loc_1018D08  +
cmp byte_102C058 0 +
jz loc_1018C8B  +
push edi  +
lea eax [ebp-4] +
push eax  +
push dword ptr [esi+8]  +
jmp loc_1018CBC  +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [esi]  +
call ds:GetConsoleScreenBufferInfo  +
mov eax [ebp-1Ch] +
sub eax [ebp-18h] +
dec eax  +
cmp byte ptr [ebp+8] 0 +
movzx ecx ax +
mov eax [esi+8] +
lea ebx [eax-2] +
jnz loc_1018CAF  +
mov ebx eax +
movsx ecx cx +
cmp ecx ebx +
push edi  +
jl loc_1018CD6  +
lea ecx [ebp-4] +
push ecx  +
push eax  +
lea eax [esi+800Ch] +
push eax  +
push dword ptr [esi]  +
call ds:WriteConsoleW  +
and dword ptr [esi+8] 0 +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi ds:WriteConsoleW +
lea eax [ebp-4] +
push eax  +
push ecx  +
lea eax [esi+800Ch] +
push eax  +
push dword ptr [esi]  +
call edi  +
cmp byte ptr [ebp+8] 0 +
jz loc_1018CCB  +
push 0  +
lea eax [ebp-4] +
push eax  +
push 2  +
lea eax [esi+ebx*2+800Ch] +
push eax  +
push dword ptr [esi]  +
call edi  +
jmp loc_1018CCB  +
***
push edi  +
push edi  +
push 8000h  +
lea eax [esi+0Ch] +
push eax  +
push dword ptr [esi+8]  +
lea eax [esi+800Ch] +
push eax  +
push edi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov ebx eax +
cmp ebx edi +
jz loc_1018CCB  +
cmp byte ptr [ebx+esi+0Bh] 0 +
jnz loc_1018D39  +
dec ebx  +
cmp ebx edi +
jz loc_1018CCB  +
mov edi 80070000h +
push 0  +
lea eax [ebp+8] +
push eax  +
push ebx  +
lea eax [esi+0Ch] +
push eax  +
push dword ptr [esi]  +
call ds:WriteFile  +
test eax eax +
jnz loc_1018D82  +
call ds:GetLastError  +
cmp eax 0E8h +
jz loc_1018D8C  +
call ds:GetLastError  +
test eax eax +
jle loc_1018D77  +
and eax 0FFFFh +
or eax edi +
push eax  +
push offset aUnableToWriteT  +
call sub_1018811  +
sub ebx [ebp+8] +
jnz loc_1018D42  +
jmp loc_1018CCB  +
***
call ds:GetLastError  +
test eax eax +
jle loc_1018D9D  +
and eax 0FFFFh +
or eax edi +
mov [ebp-4] eax +
push offset dword_1029268  +
lea eax [ebp-4] +
push eax  +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1017F37  +
test al al +
jz loc_1018DF6  +
mov ecx [ebp+arg_0] +
push esi  +
push 0  +
call loc_1018C57  +
mov esi offset CriticalSection +
push esi  +
call ds:EnterCriticalSection  +
mov eax dword ptr ConsoleScreenBufferInfo.wAttributes +
or eax 8 +
push eax  +
push hConsoleOutput  +
call ds:SetConsoleTextAttribute  +
push esi  +
call ds:LeaveCriticalSection  +
pop esi  +
mov eax [ebp+arg_0] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_1017F37  +
test al al +
jz loc_1018E43  +
mov ecx [ebp+arg_0] +
push esi  +
push 0  +
call loc_1018C57  +
mov esi offset CriticalSection +
push esi  +
call ds:EnterCriticalSection  +
movzx eax ConsoleScreenBufferInfo.wAttributes +
push eax  +
push hConsoleOutput  +
call ds:SetConsoleTextAttribute  +
push esi  +
call ds:LeaveCriticalSection  +
pop esi  +
mov eax [ebp+arg_0] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
push edi  +
cmp [esi+4] bl +
jz loc_1018E65  +
call sub_1017F04  +
mov edi [ebp+arg_0] +
cmp edi ebx +
jnz loc_1018EF1  +
mov edi offset aNull +
jmp loc_1018EF1  +
movzx eax word ptr [edi] +
push 0Ah  +
pop ecx  +
cmp cx ax +
jnz loc_1018EAA  +
mov eax [esi+8] +
push 0Dh  +
pop ecx  +
mov [esi+eax*2+800Ch] cx +
inc dword ptr [esi+8]  +
mov eax [esi+8] +
push 0Ah  +
pop ecx  +
mov [esi+eax*2+800Ch] cx +
inc dword ptr [esi+8]  +
inc edi  +
inc edi  +
push 1  +
jmp loc_1018EEA  +
push 9  +
pop ecx  +
cmp cx ax +
jnz loc_1018ECF  +
push ebx  +
mov ecx esi +
call loc_1018C57  +
mov cx [edi] +
mov eax [esi+8] +
mov [esi+eax*2+800Ch] cx +
inc dword ptr [esi+8]  +
inc edi  +
inc edi  +
jmp loc_1018EE9  +
mov ecx [esi+8] +
mov [esi+ecx*2+800Ch] ax +
inc dword ptr [esi+8]  +
mov eax [esi+8] +
inc edi  +
inc edi  +
cmp eax 0FF6h +
jb loc_1018EF1  +
push ebx  +
mov ecx esi +
call loc_1018C57  +
cmp [edi] bx +
jnz loc_1018E77  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpMultiByteStr] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov ebx ecx +
test eax eax +
jz loc_1018F6E  +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_1018F23  +
sub eax edx +
lea esi [eax+1] +
lea eax [esi+esi+8] +
cmp eax 400h +
ja loc_1018F48  +
call __alloca_probe_16  +
mov eax esp +
push 0CCCCh  +
jmp loc_1018F55  +
push 0DDDDh  +
push eax  +
call ds:malloc  +
pop ecx  +
push eax  +
call sub_10178F1  +
push esi  +
mov edi eax +
push edi  +
push 0FFFFFFFFh  +
push [ebp+lpMultiByteStr]  +
push 0  +
push 0  +
call ds:MultiByteToWideChar  +
push edi  +
mov ecx ebx +
call sub_1018E4F  +
lea esp [ebp-10h] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1027CE5  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
mov ecx [ebp+arg_0] +
call sub_1018E4F  +
mov eax [ebp+arg_0] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpMultiByteStr]  +
mov ecx [ebp+arg_0] +
call sub_1018F02  +
mov eax [ebp+arg_0] +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+arg_8]  +
mov esi offset word_10403F0 +
push dword ptr [ebp+arg_4]  +
push offset aI64u  +
push 200h  +
push esi  +
call sub_10174FF  +
add esp 14h +
test eax eax +
jge loc_1018FF4  +
mov eax [ebp+arg_0] +
jmp loc_1018FFD  +
push esi  +
push [ebp+arg_0]  +
call sub_1018F8F  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
push dword ptr [eax]  +
push [ebp+arg_0]  +
call sub_1018F8F  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+rguid] +
push esi  +
mov esi [ebp+arg_0] +
push 28h  +
lea ecx [ebp+sz] +
push ecx  +
push eax  +
call ds:StringFromGUID2  +
test eax eax +
jnz loc_1019070  +
push offset aInternalErrorC  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+var_58] +
push eax  +
mov [ebp+var_58] 1 +
call _CxxThrowException  +
lea eax [ebp+sz] +
push eax  +
push esi  +
call sub_1018F8F  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1027CE5  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax 0 +
jz loc_10190C0  +
dec eax  +
jz loc_10190B9  +
dec eax  +
jz loc_10190B2  +
dec eax  +
jz loc_10190AB  +
push offset aUnknown_1  +
jmp loc_10190C5  +
push offset aAutodetect  +
jmp loc_10190C5  +
push offset aOverride  +
jmp loc_10190C5  +
push offset aNo_proxy  +
jmp loc_10190C5  +
push offset aPreconfig  +
push [ebp+arg_0]  +
call sub_1018F8F  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:_wcsicmp +
push offset aTrue  +
push dword ptr [ebp+8]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10190F5  +
inc eax  +
jmp loc_1019105  +
push offset aFalse  +
push dword ptr [ebp+8]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101910A  +
pop esi  +
pop ebp  +
retn 4  +
***
push offset aMustBeTrueOrFa  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+8] +
push eax  +
mov dword ptr [ebp+8] 1 +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+var_4] +
push eax  +
push offset aU  +
push [ebp+arg_0]  +
call ds:swscanf  +
add esp 0Ch +
cmp eax 1 +
jz loc_1019178  +
push offset aInvalidNumber_  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+arg_0] +
push eax  +
mov [ebp+arg_0] 1 +
call _CxxThrowException  +
mov eax [ebp+var_4] +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+cb]  +
call ds:CoTaskMemAlloc  +
test eax eax +
jnz locret_10191D0  +
push offset aBytes_  +
push eax  +
push [ebp+cb]  +
push offset aOutOfMemoryWhi  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+var_4] +
push eax  +
mov [ebp+var_4] 8007000Eh +
call _CxxThrowException  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push [ebp+cb]  +
call ds:CoTaskMemAlloc  +
test eax eax +
jnz locret_101922B  +
push offset aBytes_  +
push eax  +
push [ebp+cb]  +
push offset aOutOfMemoryWhi  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
cmp [ebp+arg_4] 0 +
jz loc_1019229  +
push offset dword_1029268  +
lea eax [ebp+var_4] +
push eax  +
mov [ebp+var_4] 8007000Eh +
call _CxxThrowException  +
xor eax eax +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp loc_10191D7  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_1019184  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
mov [ebp+hMem] eax +
cmp dword ptr [ebp+dwMessageId] ebx +
jz loc_1019319  +
push esi  +
push edi  +
call sub_1017F37  +
mov edi offset asc_1002440 +
mov esi offset hFile +
test al al +
jz loc_101929C  +
call sub_101804E  +
test ax ax +
jz loc_101929C  +
push edi  +
push esi  +
call sub_1018F8F  +
push dword ptr [ebp+dwMessageId]  +
lea eax [ebp+var_1C] +
push offset a0x8_8x  +
push 18h  +
push eax  +
call sub_10174FF  +
add esp 10h +
test eax eax +
jl loc_1019317  +
push edi  +
lea eax [ebp+var_1C] +
push eax  +
push offset asc_1007DFC  +
push [ebp+hMem]  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push ebx  +
push ebx  +
lea eax [ebp+hMem] +
push eax  +
mov [ebp+hMem] ebx +
call ds:GetThreadLocale  +
push eax  +
push dword ptr [ebp+dwMessageId]  +
push ebx  +
push 1100h  +
call ds:FormatMessageW  +
test eax eax +
jz loc_1019317  +
push edi  +
push [ebp+hMem]  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 234h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
fld  ds:dbl_1008368 +
push esi  +
mov esi [ebp+arg_0] +
fst  [ebp+var_234] +
fld  ds:dbl_1008360 +
mov [ebp+var_214] offset a_2fGbS +
fstp  [ebp+var_22C] +
mov [ebp+var_210] offset a_2fMbS +
fld  ds:dbl_1008330 +
mov [ebp+var_20C] offset a_2fKbS +
fstp  [ebp+var_224] +
mov [ebp+var_208] offset a_2fBS +
fldz   +
xor ecx ecx +
fstp  [ebp+var_21C] +
jmp loc_10193A6  +
fld  [ebp+ecx*8+var_22C] +
inc ecx  +
fcomp  [ebp+arg_4] +
fnstsw  ax +
test ah 41h +
jp loc_101939E  +
fld1   +
lea edx [ebp+ecx*8+var_234] +
fcom  qword ptr [edx] +
fnstsw  ax +
test ah 41h +
jp loc_10193C6  +
fstp  st +
fld  qword ptr [edx] +
fdivr  [ebp+arg_4] +
push ecx  +
push ecx  +
lea eax [ebp+var_204] +
fstp  [esp+240h+var_240] +
push [ebp+ecx*4+var_214]  +
push 0FFh  +
push eax  +
call sub_101864E  +
add esp 14h +
lea eax [ebp+var_204] +
push eax  +
push esi  +
call sub_1018F8F  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1027CE5  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 234h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
fld  ds:dbl_10083F0 +
push esi  +
fst  [ebp+var_234] +
push edi  +
fld  ds:dbl_10083E8 +
mov edi [ebp+arg_0] +
fstp  [ebp+var_22C] +
mov [ebp+var_214] offset aI64uDays +
fld  ds:dbl_10083C8 +
mov [ebp+var_210] offset aI64uHours +
fstp  [ebp+var_224] +
mov [ebp+var_20C] offset aI64uMinutes +
fldz   +
mov [ebp+var_208] offset aI64uSeconds +
fstp  [ebp+var_21C] +
xor esi esi +
jmp loc_1019484  +
fld  [ebp+esi*8+var_22C] +
inc esi  +
fcomp  [ebp+arg_4] +
fnstsw  ax +
test ah 41h +
jp loc_101947C  +
fld1   +
lea ecx [ebp+esi*8+var_234] +
fcom  qword ptr [ecx] +
fnstsw  ax +
test ah 41h +
jp loc_10194A4  +
fstp  st +
fld  qword ptr [ecx] +
fdivr  [ebp+arg_4] +
push ecx  +
push ecx  +
fadd  ds:dbl_1008370 +
fstp  [esp+244h+var_244] +
call floor  +
call _ftol2  +
push edx  +
push eax  +
push [ebp+esi*4+var_214]  +
lea eax [ebp+var_204] +
push 0FFh  +
push eax  +
call sub_101864E  +
add esp 1Ch +
lea eax [ebp+var_204] +
push eax  +
push edi  +
call sub_1018F8F  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1027CE5  +
leave   +
retn 0Ch  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
inc edi  +
test eax eax +
jz loc_1019521  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1019510  +
sub eax edx +
sar eax 1 +
lea edi [eax+1] +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_101953B  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101952B  +
sub eax edx +
sar eax 1 +
add edi eax +
xor ecx ecx +
push 2  +
pop edx  +
mov eax edi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_1019184  +
pop ecx  +
mov esi 100h +
push esi  +
push 0  +
push 0  +
push dword ptr [ebp+8]  +
mov ebx eax +
mov eax [ebp+10h] +
and dword ptr [eax] 0 +
push edi  +
push ebx  +
call sub_10183AE  +
mov [ebp+8] eax +
test eax eax +
jl loc_1019592  +
push esi  +
push 0  +
push 0  +
push dword ptr [ebp+0Ch]  +
push edi  +
push ebx  +
call sub_10184CF  +
mov [ebp+8] eax +
test eax eax +
jl loc_1019592  +
mov eax [ebp+10h] +
mov [eax] ebx +
jmp loc_1019599  +
push ebx  +
call sub_1017EDF  +
pop ecx  +
mov eax [ebp+8] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3  +
mov eax [ebp+0Ch] +
xor edi edi +
cmp [eax] edi +
jnz loc_10195D7  +
cmp [eax+4] edi +
jnz loc_10195D7  +
push offset aUnknown_1  +
push dword ptr [ebp+8]  +
call sub_1018F8F  +
call __EH_epilog3  +
retn 8  +
lea ecx [ebp-1Ch] +
push ecx  +
push eax  +
call ds:FileTimeToLocalFileTime  +
lea eax [ebp-2Ch] +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
call ds:FileTimeToSystemTime  +
mov ebx ds:GetDateFormatW +
push edi  +
push edi  +
push edi  +
lea eax [ebp-2Ch] +
push eax  +
push edi  +
mov esi 400h +
push esi  +
call ebx  +
mov [ebp+0Ch] eax +
cmp eax edi +
jnz loc_1019614  +
push offset aError  +
jmp loc_10195C7  +
push 2  +
inc eax  +
xor ecx ecx +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or eax ecx +
push eax  +
call sub_1019184  +
pop ecx  +
mov [ebp-10h] eax +
push dword ptr [ebp+0Ch]  +
mov [ebp-4] edi +
push eax  +
push edi  +
lea eax [ebp-2Ch] +
push eax  +
push edi  +
push esi  +
call ebx  +
cmp eax edi +
jnz loc_1019660  +
push offset aError  +
push dword ptr [ebp+8]  +
call sub_1018F8F  +
mov esi eax +
push dword ptr [ebp-10h]  +
call sub_1017EDF  +
pop ecx  +
mov eax esi +
jmp loc_10195CF  +
mov ebx ds:GetTimeFormatW +
push edi  +
push edi  +
push edi  +
lea eax [ebp-2Ch] +
push eax  +
push edi  +
push esi  +
call ebx  +
mov [ebp-14h] eax +
cmp eax edi +
jz loc_1019641  +
push 2  +
inc eax  +
xor ecx ecx +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or eax ecx +
push eax  +
call sub_1019184  +
pop ecx  +
mov [ebp+0Ch] eax +
push dword ptr [ebp-14h]  +
mov byte ptr [ebp-4] 1 +
push eax  +
push edi  +
lea eax [ebp-2Ch] +
push eax  +
push edi  +
push esi  +
call ebx  +
test eax eax +
jnz loc_10196C0  +
push offset aError  +
push dword ptr [ebp+8]  +
call sub_1018F8F  +
push dword ptr [ebp+0Ch]  +
mov esi eax +
call sub_1017EDF  +
pop ecx  +
jmp loc_1019650  +
push dword ptr [ebp+0Ch]  +
push offset dword_10083F8  +
push dword ptr [ebp-10h]  +
push dword ptr [ebp+8]  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
jmp loc_10196AE  +
***
call __EH_prolog3  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp+0Ch]  +
xor edi edi +
mov [ebp-10h] edi +
call sub_1017E56  +
test eax eax +
jz loc_10197E7  +
mov esi ds:LookupAccountSidW +
lea eax [ebp-20h] +
push eax  +
lea eax [ebp-14h] +
push eax  +
push edi  +
lea eax [ebp-18h] +
push eax  +
push edi  +
push dword ptr [ebp-10h]  +
mov [ebp-18h] edi +
push edi  +
mov [ebp-14h] edi +
call esi  +
cmp eax edi +
jnz loc_10197DE  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_10197DE  +
mov eax [ebp-18h] +
push 2  +
xor ecx ecx +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or eax ecx +
push eax  +
call sub_1019184  +
mov ebx eax +
mov [ebp-24h] ebx +
mov eax [ebp-14h] +
push 2  +
xor ecx ecx +
pop edx  +
mul  edx +
seto cl  +
mov [ebp-4] edi +
neg ecx  +
or eax ecx +
push eax  +
call sub_1019184  +
pop ecx  +
pop ecx  +
mov [ebp-1Ch] eax +
lea ecx [ebp-20h] +
push ecx  +
lea ecx [ebp-14h] +
push ecx  +
push eax  +
lea eax [ebp-18h] +
push eax  +
push ebx  +
push dword ptr [ebp-10h]  +
mov byte ptr [ebp-4] 1 +
push edi  +
call esi  +
push dword ptr [ebp-10h]  +
test eax eax +
jnz loc_10197BE  +
call ds:LocalFree  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1018F8F  +
push dword ptr [ebp-1Ch]  +
mov esi eax +
call sub_1017EDF  +
push ebx  +
call sub_1017EDF  +
pop ecx  +
pop ecx  +
mov eax esi +
jmp loc_10197F2  +
call ds:LocalFree  +
push ebx  +
push offset SubBlock  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp+8]  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
jmp loc_10197A3  +
push dword ptr [ebp-10h]  +
call ds:LocalFree  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_1018F8F  +
call __EH_epilog3  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
push dword ptr [esi]  +
call sub_1017EDF  +
mov eax [ebp+8] +
mov [esi] eax +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
movzx eax [ebp+arg_0] +
cmp eax 10h +
jl loc_101984B  +
cmp eax 14h +
jle loc_1019847  +
cmp eax 5Ah +
jle loc_101984B  +
cmp eax 5Ch +
jle loc_1019847  +
add eax 0FFFFFF70h +
cmp eax 1 +
ja loc_101984B  +
mov al 1 +
jmp loc_101984D  +
xor al al +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test [ebp+arg_0] 0Ch +
jz loc_101986C  +
test [ebp+arg_0] 3 +
jnz loc_101986C  +
xor eax eax +
inc eax  +
jmp loc_101986E  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 1 +
jz loc_101988F  +
cmp [ebp+arg_0] 0 +
jz loc_1019896  +
mov eax offset aUnknown +
jmp loc_101989B  +
mov eax offset aTrue +
jmp loc_101989B  +
mov eax offset aFalse +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:_wcsicmp +
push edi  +
mov edi [ebp+8] +
push offset aForeground  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10198C8  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push offset aHigh  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10198D9  +
inc eax  +
jmp loc_10198C2  +
***
push offset aNormal  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10198EC  +
push 2  +
pop eax  +
jmp loc_10198C2  +
***
push offset aLow  +
push edi  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10198FE  +
push 3  +
jmp loc_10198E9  +
***
push offset aInvalidPriorit  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+8] +
push eax  +
mov dword ptr [ebp+8] 1 +
call _CxxThrowException  +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax [ebp+arg_8] +
jz loc_1019959  +
push offset aInvalidNumberO  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+arg_0] +
push eax  +
mov [ebp+arg_0] 1 +
call _CxxThrowException  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_1019994  +
cmp [ebp+arg_0] 100h +
jz loc_101998D  +
cmp [ebp+arg_0] 200h +
jz loc_1019986  +
mov eax offset aUnknown_0 +
jmp loc_1019999  +
mov eax offset aBitsWillFailTh +
jmp loc_1019999  +
mov eax offset aRedirectsWillU +
jmp loc_1019999  +
mov eax offset aRedirectsWillB +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push offset aHttpSecurityFl  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
mov edi offset asc_1002440 +
push edi  +
push esi  +
call sub_1018F8F  +
mov ebx [ebp+arg_0] +
mov eax ebx +
and eax 1 +
push eax  +
call sub_1019877  +
push eax  +
push offset aEnableCrlCheck  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push edi  +
push esi  +
call sub_1018F8F  +
mov eax ebx +
shr eax 1 +
and eax 1 +
push eax  +
call sub_1019877  +
push eax  +
push offset aIgnoreInvalidC  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push edi  +
push esi  +
call sub_1018F8F  +
mov eax ebx +
shr eax 2 +
and eax 1 +
push eax  +
call sub_1019877  +
push eax  +
push offset aIgnoreInvalidD  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push edi  +
push esi  +
call sub_1018F8F  +
mov eax ebx +
shr eax 3 +
and eax 1 +
push eax  +
call sub_1019877  +
push eax  +
push offset aIgnoreInvali_0  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push edi  +
push esi  +
call sub_1018F8F  +
mov eax ebx +
shr eax 4 +
and eax 1 +
push eax  +
call sub_1019877  +
push eax  +
push offset aIgnoreInvalidU  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push edi  +
push esi  +
call sub_1018F8F  +
mov eax ebx +
and eax 700h +
push eax  +
call sub_1019962  +
push eax  +
push offset aUrlRedirection  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push edi  +
push esi  +
call sub_1018F8F  +
shr ebx 0Bh +
and ebx 1 +
push ebx  +
call sub_1019877  +
push eax  +
push offset aRedirectionFro  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push edi  +
push esi  +
call sub_1018F8F  +
cmp byte_102C3AD 0 +
jnz loc_1019AE3  +
push edi  +
push esi  +
call sub_1018F8F  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor eax eax +
push offset aPeercachingFla  +
lea edi [ebp+var_4] +
stos   +
push [ebp+var_4]  +
mov esi offset hFile +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
mov ebx offset asc_1002440 +
push ebx  +
push esi  +
call sub_1018F8F  +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
lea edi [ebp+var_8] +
stos   +
mov eax [ebp+arg_0] +
and eax 1 +
push eax  +
call sub_1019877  +
push eax  +
push [ebp+var_4]  +
push offset aEnableDownload  +
push [ebp+var_8]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018F8F  +
push ebx  +
push esi  +
call sub_1018F8F  +
xor eax eax +
lea edi [ebp+var_8] +
stos   +
lea edi [ebp+var_4] +
stos   +
mov eax [ebp+arg_0] +
shr eax 1 +
and eax 1 +
push eax  +
call sub_1019877  +
push eax  +
push [ebp+var_8]  +
push offset aEnableServingT  +
push [ebp+var_4]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018F8F  +
push ebx  +
push esi  +
call sub_1018F8F  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+TokenHandle] 0 +
lea eax [ebp+TokenHandle] +
push eax  +
push 1  +
push 2000000h  +
call ds:GetCurrentThread  +
push eax  +
call ds:OpenThreadToken  +
test eax eax +
jz loc_1019BDF  +
mov eax [ebp+TokenHandle] +
leave   +
retn   +
push esi  +
mov esi ds:GetLastError +
call esi  +
cmp eax 3F0h +
jz loc_1019C0A  +
call esi  +
test eax eax +
jle loc_1019BFF  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push offset aUnableToGetThr  +
call sub_101766D  +
xor eax eax +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+pSourceSid]  +
call ds:GetLengthSid  +
mov esi eax +
push esi  +
call sub_1019242  +
pop ecx  +
push [ebp+pSourceSid]  +
mov edi eax +
push edi  +
push esi  +
call ds:CopySid  +
test eax eax +
jnz loc_1019C54  +
push edi  +
call sub_1017EF4  +
pop ecx  +
push 8007000Eh  +
push offset aOutOfMemory_0  +
call sub_101766D  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+TokenHandle] +
lea ecx [ebp+ReturnLength] +
push ecx  +
push 4Ch  +
lea ecx [ebp+pSourceSid] +
push ecx  +
push 19h  +
push eax  +
call ds:GetTokenInformation  +
test eax eax +
jnz loc_1019CAC  +
call ds:GetLastError  +
test eax eax +
jle loc_1019CA1  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push offset aUnableToGetTok  +
call sub_101766D  +
push [ebp+pSourceSid]  +
call sub_1019C14  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_1027CE5  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+pSid]  +
mov esi ds:GetSidSubAuthorityCount +
call esi  +
cmp byte ptr [eax] 0 +
jnz loc_1019CE1  +
xor eax eax +
jmp loc_1019CF6  +
push [ebp+pSid]  +
call esi  +
movzx eax byte ptr [eax] +
dec eax  +
push eax  +
push [ebp+pSid]  +
call ds:GetSidSubAuthority  +
mov eax [eax] +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push [ebp+TokenHandle]  +
call sub_1019C61  +
mov esi eax +
push esi  +
call sub_1019CC7  +
push esi  +
mov edi eax +
call sub_1017EF4  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push offset aHelperTokenUsa  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
mov edi offset asc_1002440 +
push edi  +
push esi  +
call sub_1018F8F  +
mov ebx [ebp+8] +
mov eax ebx +
and eax 1 +
push eax  +
call sub_1019877  +
push eax  +
push offset aLocalFileAcces  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push edi  +
push esi  +
call sub_1018F8F  +
shr ebx 1 +
and ebx 1 +
push ebx  +
call sub_1019877  +
push eax  +
push offset aNetworkServerA  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push edi  +
push esi  +
call sub_1018F8F  +
cmp byte_102C3AD 0 +
jnz loc_1019DAC  +
push edi  +
push esi  +
call sub_1018F8F  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
add eax 4 +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
test eax eax +
jnz loc_1019DE6  +
mov eax 80004003h +
jmp loc_1019E23  +
and dword ptr [eax] 0 +
push esi  +
push edi  +
mov edi [ebp+0Ch] +
push 4  +
pop ecx  +
mov esi offset dword_1008C34 +
xor edx edx +
cmps   +
jz loc_1019E0D  +
mov edi [ebp+0Ch] +
push 4  +
pop ecx  +
mov esi offset dword_1008C24 +
xor edx edx +
cmps   +
jnz loc_1019E1C  +
mov ecx [ebp+8] +
mov [eax] ecx +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
xor eax eax +
jmp loc_1019E21  +
mov eax 80004002h +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
mov esi ecx +
mov eax [esi+0Ch] +
test eax eax +
jz loc_1019E51  +
cmp eax 1 +
jz loc_1019E51  +
cmp eax 2 +
jz loc_1019E51  +
mov byte ptr [esi+40h] 0 +
jmp loc_1019FDF  +
cmp byte ptr [esi+40h] 0 +
jnz loc_1019E77  +
call sub_10180D0  +
fldz   +
mov [esi+28h] eax +
fstp  qword ptr [esi+38h] +
mov eax [esi+18h] +
mov [esi+30h] eax +
mov eax [esi+1Ch] +
mov [esi+2Ch] edx +
mov [esi+34h] eax +
mov byte ptr [esi+40h] 1 +
push ebx  +
push edi  +
call sub_10180D0  +
mov edi [esi+18h] +
mov ebx [esi+1Ch] +
mov [ebp+var_8] edx +
mov ecx edi +
sub ecx [esi+30h] +
mov edx ebx +
sbb edx [esi+34h] +
mov dword ptr [ebp+var_14] ecx +
mov ecx [ebp+var_8] +
mov [ebp+var_C] eax +
sub eax [esi+28h] +
mov dword ptr [ebp+var_14+4] edx +
fild  [ebp+var_14] +
sbb ecx [esi+2Ch] +
mov dword ptr [ebp+var_14] eax +
mov dword ptr [ebp+var_14+4] ecx +
fild  [ebp+var_14] +
push ecx  +
push ecx  +
fdivp st(1) st +
fld  qword ptr [esi+38h] +
fmul  ds:dbl_1008CA0 +
fld  st(1) +
fmul  ds:dbl_1008C98 +
faddp st(1) st +
fstp  [ebp+var_14] +
fstp  [esp+28h+var_28] +
call ds:_finite  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1019EEC  +
fld  [ebp+var_14] +
push ecx  +
push ecx  +
fstp  [esp+28h+var_28] +
call ds:_finite  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1019EF2  +
fld  qword ptr [esi+38h] +
fstp  [ebp+var_14] +
mov eax [ebp+var_C] +
fld  [ebp+var_14] +
mov [esi+34h] ebx +
fstp  qword ptr [esi+38h] +
mov [esi+28h] eax +
mov eax [ebp+var_8] +
push offset asc_1002440  +
mov ebx offset hFile +
push ebx  +
mov [esi+2Ch] eax +
mov [esi+30h] edi +
call sub_1018F8F  +
fld  [ebp+var_14] +
fmul  ds:dbl_1008C90 +
xor eax eax +
lea edi [ebp+var_4] +
stos   +
fstp  [ebp+var_14] +
push dword ptr [ebp+var_14+4]  +
lea edi [ebp+var_8] +
push dword ptr [ebp+var_14]  +
stos   +
push [ebp+var_4]  +
push offset aTransferRate  +
push [ebp+var_8]  +
push ebx  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_101932D  +
mov eax [esi+10h] +
mov ecx [esi+14h] +
mov edx eax +
or edx ecx +
jz loc_1019FDD  +
mov edx eax +
and edx ecx +
cmp edx 0FFFFFFFFh +
jz loc_1019FDD  +
sub eax [esi+30h] +
sbb ecx [esi+34h] +
mov dword ptr [ebp+var_14] eax +
mov dword ptr [ebp+var_14+4] ecx +
fild  [ebp+var_14] +
fdiv  qword ptr [esi+38h] +
fdiv  ds:dbl_1008C90 +
fstp  [ebp+var_14] +
fld  ds:dbl_1008C68 +
fcomp  [ebp+var_14] +
fnstsw  ax +
test ah 41h +
jnz loc_1019FDD  +
push offset dword_10083F8  +
push ebx  +
call sub_1018F8F  +
fld  [ebp+var_14] +
fstp  [ebp+var_14] +
push dword ptr [ebp+var_14+4]  +
xor eax eax +
push dword ptr [ebp+var_14]  +
lea edi [ebp+var_8] +
stos   +
push [ebp+var_8]  +
lea edi [ebp+var_4] +
push offset aTimeRemaining  +
stos   +
push [ebp+var_4]  +
push ebx  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_101940A  +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_1019FF9  +
push offset aDownload  +
jmp loc_101A018  +
cmp [ebp+arg_4] 1 +
jnz loc_101A006  +
push offset aUpload  +
jmp loc_101A018  +
cmp [ebp+arg_4] 2 +
jnz loc_101A013  +
push offset aUploadReply  +
jmp loc_101A018  +
push offset aUnknown_1  +
push [ebp+arg_0]  +
call sub_1018F8F  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
cmp eax 8 +
ja loc_101A07C  +
jmp ds:off_101A08D[eax*4]  +
push offset aQueued  +
jmp loc_101A081  +
push offset aConnecting  +
jmp loc_101A081  +
push offset aTransferring  +
jmp loc_101A081  +
push offset aSuspended  +
jmp loc_101A081  +
push offset aError  +
jmp loc_101A081  +
push offset aTransient_erro  +
jmp loc_101A081  +
push offset aTransferred  +
jmp loc_101A081  +
push offset aAcknowledged  +
jmp loc_101A081  +
push offset aCancelled  +
jmp loc_101A081  +
push offset aUnknown_1  +
push [ebp+arg_0]  +
call sub_1018F8F  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
sub eax 0 +
jz loc_101A0E8  +
dec eax  +
jz loc_101A0E1  +
dec eax  +
jz loc_101A0DA  +
dec eax  +
jz loc_101A0D3  +
push offset aUnknown_1  +
jmp loc_101A0ED  +
push offset aLow  +
jmp loc_101A0ED  +
push offset aNormal  +
jmp loc_101A0ED  +
push offset aHigh  +
jmp loc_101A0ED  +
push offset aForeground  +
push [ebp+arg_0]  +
call sub_1018F8F  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi] +
test eax eax +
jz loc_101A10F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword ptr [ebp+arg_0] +
test eax eax +
jz loc_101A187  +
cmp eax 1000h +
jz loc_101A180  +
cmp eax 2000h +
jz loc_101A179  +
cmp eax 3000h +
jz loc_101A172  +
cmp eax 4000h +
jz loc_101A16B  +
cmp eax 5000h +
jz loc_101A164  +
push esi  +
push eax  +
push offset a0xX  +
push 0Dh  +
mov esi offset unk_10405F0 +
push esi  +
call sub_101864E  +
add esp 10h +
mov eax esi +
pop esi  +
jmp loc_101A18C  +
mov eax offset aProtected_proc +
jmp loc_101A18C  +
mov eax offset aSystem +
jmp loc_101A18C  +
mov eax offset aHigh +
jmp loc_101A18C  +
mov eax offset aMedium +
jmp loc_101A18C  +
mov eax offset aLow +
jmp loc_101A18C  +
mov eax offset aUntrusted +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push esi  +
push 0FFFFFFF6h  +
mov esi ecx +
call ds:GetStdHandle  +
lea ecx [ebp+NumberOfEventsRead] +
push ecx  +
push 1  +
lea ecx [ebp+Buffer] +
push ecx  +
push eax  +
call ds:ReadConsoleInputW  +
test eax eax +
jnz loc_101A1DC  +
call ds:GetLastError  +
test eax eax +
jle loc_101A1D1  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push offset aUnableToReadCo  +
call sub_1018811  +
xor eax eax +
inc eax  +
cmp ax [ebp+Buffer.EventType] +
jnz loc_101A26C  +
cmp dword ptr [ebp+Buffer.Event] 0 +
jz loc_101A26C  +
mov eax [esi+8] +
mov ecx [eax] +
lea edx [ebp+var_4] +
push edx  +
push eax  +
call dword ptr [ecx+38h]  +
push eax  +
push offset aUnableToReadJo  +
call sub_101766D  +
mov eax [ebp+var_4] +
cmp eax 3 +
jnz loc_101A22C  +
push dword ptr [ebp+Buffer.Event+6]  +
call sub_1019820  +
test al al +
jnz loc_101A26C  +
mov eax [esi+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
push eax  +
push offset aUnableToResume  +
jmp loc_101A267  +
test eax eax +
jz loc_101A23A  +
cmp eax 1 +
jz loc_101A23A  +
cmp eax 2 +
jnz loc_101A26C  +
push 13h  +
pop eax  +
cmp ax word ptr [ebp+Buffer.Event+6] +
jz loc_101A258  +
push 53h  +
pop eax  +
cmp ax word ptr [ebp+Buffer.Event+6] +
jnz loc_101A26C  +
push dword ptr [ebp+Buffer.Event+0Ch]  +
call sub_1019856  +
test al al +
jz loc_101A26C  +
mov eax [esi+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
push eax  +
push offset aUnableToSuspen  +
call sub_101766D  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101A0FE  +
mov eax [ebp+arg_0] +
mov eax [eax] +
mov [esi] eax +
test eax eax +
jz loc_101A292  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
push esi  +
mov esi ecx +
mov [esi] eax +
test eax eax +
jz loc_101A2B7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
mov esi ecx +
mov [esi] eax +
test eax eax +
jz loc_101A2E4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push esi  +
mov esi [eax] +
call sub_101A0FE  +
push [ebp+arg_4]  +
mov eax [esi] +
push offset dword_1008ED4  +
push esi  +
call dword ptr [eax]  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push esi  +
mov esi [eax] +
call sub_101A0FE  +
push [ebp+arg_4]  +
mov eax [esi] +
push offset dword_1008EE4  +
push esi  +
call dword ptr [eax]  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push esi  +
mov esi [eax] +
call sub_101A0FE  +
push [ebp+arg_4]  +
mov eax [esi] +
push offset dword_1008EF4  +
push esi  +
call dword ptr [eax]  +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
push esi  +
mov esi [eax] +
call sub_101A0FE  +
push dword ptr [ebp+0Ch]  +
mov eax [esi] +
push offset nullsub_1  +
push esi  +
call dword ptr [eax]  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push esi  +
mov esi [eax] +
call sub_101A0FE  +
push [ebp+arg_4]  +
mov eax [esi] +
push offset dword_1008F14  +
push esi  +
call dword ptr [eax]  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push esi  +
mov esi [eax] +
call sub_101A0FE  +
push [ebp+arg_4]  +
mov eax [esi] +
push offset dword_1008F24  +
push esi  +
call dword ptr [eax]  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push esi  +
mov esi [eax] +
call sub_101A0FE  +
push [ebp+arg_4]  +
mov eax [esi] +
push offset dword_1008F34  +
push esi  +
call dword ptr [eax]  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax offset word_1028522 +
call __EH_prolog3  +
xor ebx ebx +
mov [ebp-18h] ebx +
mov eax [ebp+8] +
mov [eax] ebx +
xor esi esi +
inc esi  +
mov [ebp-18h] esi +
mov [ebp-10h] ebx +
mov eax [ebp+0Ch] +
mov edi [eax] +
lea ecx [ebp-10h] +
mov [ebp-4] esi +
mov [ebp-14h] ebx +
call sub_101A0FE  +
mov eax [edi] +
lea ecx [ebp-10h] +
push ecx  +
push edi  +
call dword ptr [eax+14h]  +
push eax  +
push offset aUnableToEnumer  +
call sub_101766D  +
mov eax [ebp-10h] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
push eax  +
push offset aUnableToGetThe  +
call sub_101766D  +
cmp [ebp-14h] ebx +
jnz loc_101A49A  +
push offset aTheJobHasNoFil  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+0Ch] +
push eax  +
mov [ebp+0Ch] esi +
call _CxxThrowException  +
mov eax [ebp-10h] +
push dword ptr [ebp+10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
push eax  +
push offset aUnableToLoca_0  +
call sub_101766D  +
mov ecx [ebp+8] +
mov edi [ebp-10h] +
call sub_101A0FE  +
mov eax [edi] +
push ebx  +
push dword ptr [ebp+8]  +
push esi  +
push edi  +
call dword ptr [eax+0Ch]  +
cmp eax esi +
jnz loc_101A500  +
push ebx  +
push dword ptr [ebp-14h]  +
mov edi offset hFile +
push offset aTheJobHasOnly  +
push edi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
cmp dword ptr [ebp-14h] 2 +
jb loc_101A4F3  +
push offset aFiles_  +
push edi  +
jmp loc_101A484  +
***
push offset aFile_  +
push edi  +
call sub_1018FAB  +
jmp loc_101A489  +
***
push eax  +
push offset aUnableToLocate  +
call sub_101766D  +
lea ecx [ebp-10h] +
mov [ebp-4] bl +
call sub_101A0FE  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 0Ch  +
***
call __EH_prolog3  +
xor ebx ebx +
mov [ebp-20h] ebx +
mov [ebp-18h] ebx +
mov esi dword_102C3B4 +
xor edi edi +
inc edi  +
lea ecx [ebp-18h] +
mov [ebp-4] edi +
call sub_101A0FE  +
mov eax [esi] +
lea ecx [ebp-18h] +
push ecx  +
push ebx  +
push esi  +
call dword ptr [eax+14h]  +
push eax  +
push offset aUnableToLookup  +
call sub_101766D  +
mov eax [ebp+8] +
mov [ebp-1Ch] ebx +
mov [eax] ebx +
mov [ebp-20h] edi +
mov [ebp-10h] ebx +
mov esi [ebp-18h] +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 2 +
call sub_101A0FE  +
mov eax [esi] +
push ebx  +
lea ecx [ebp-10h] +
push ecx  +
push edi  +
push esi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jnz loc_101A662  +
call sub_1017F04  +
mov [ebp-14h] ebx +
mov esi [ebp-10h] +
push ebx  +
mov byte ptr [ebp-4] 3 +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp-14h] +
push ecx  +
mov [ebp-14h] ebx +
mov eax [esi] +
push esi  +
call dword ptr [eax+48h]  +
push eax  +
push offset aUnableToLookup  +
call sub_101766D  +
mov ecx [ebp+0Ch] +
mov eax [ebp-14h] +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_101A5EF  +
cmp dx bx +
jz loc_101A5EB  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_101A5EF  +
add eax 4 +
add ecx 4 +
cmp dx bx +
jnz loc_101A5C9  +
xor eax eax +
jmp loc_101A5F4  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
cmp eax ebx +
jnz loc_101A607  +
mov ecx [ebp+8] +
inc dword ptr [ebp-1Ch]  +
lea eax [ebp-10h] +
push eax  +
call sub_101A274  +
push dword ptr [ebp-14h]  +
mov byte ptr [ebp-4] 2 +
call sub_1017EDF  +
mov esi [ebp-18h] +
pop ecx  +
lea ecx [ebp-10h] +
mov [ebp-14h] ebx +
call sub_101A0FE  +
mov eax [esi] +
push ebx  +
lea ecx [ebp-10h] +
push ecx  +
push edi  +
push esi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jz loc_101A595  +
cmp [ebp-1Ch] edi +
jnz loc_101A65D  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 1 +
call sub_101A0FE  +
lea ecx [ebp-18h] +
mov [ebp-4] bl +
call sub_101A0FE  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 8  +
cmp [ebp-1Ch] ebx +
jnz loc_101A696  +
push offset a_  +
push dword ptr [ebp+0Ch]  +
push offset aUnableToFindJo  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+0Ch] +
push eax  +
mov [ebp+0Ch] edi +
call _CxxThrowException  +
push offset a_  +
push dword ptr [ebp+0Ch]  +
mov esi offset hFile +
push offset aJobsNamed  +
push ebx  +
push dword ptr [ebp-1Ch]  +
push offset aFound  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push offset aUseTheJobIdent  +
push esi  +
jmp loc_101A680  +
***
call __EH_prolog3_GS  +
mov edi [ebp+8] +
mov ebx [ebp+0Ch] +
and dword ptr [ebp-28h] 0 +
mov [ebp-30h] edi +
call sub_10176AB  +
and dword ptr [ebp-24h] 0 +
lea eax [ebp-20h] +
xor esi esi +
push eax  +
inc esi  +
push ebx  +
mov [ebp-4] esi +
call ds:CLSIDFromString  +
test eax eax +
jge loc_101A71C  +
push ebx  +
push edi  +
call sub_101A526  +
jmp loc_101A755  +
mov eax dword_102C3B4 +
lea ecx [ebp-24h] +
mov [ebp-2Ch] eax +
call sub_101A0FE  +
mov eax [ebp-2Ch] +
mov ecx [eax] +
lea edx [ebp-24h] +
push edx  +
lea edx [ebp-20h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
test eax eax +
jge loc_101A74A  +
push ebx  +
push edi  +
call sub_101A526  +
jmp loc_101A755  +
lea eax [ebp-24h] +
push eax  +
mov ecx edi +
call sub_101A29E  +
lea ecx [ebp-24h] +
mov [ebp-28h] esi +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
mov eax edi +
call sub_1027DFF  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ecx  +
and dword ptr [ebp-4] 0 +
cmp dword ptr [ebp+0Ch] 1 +
jz loc_101A7A7  +
push offset aInvalidNumberO  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+8] +
push eax  +
mov dword ptr [ebp+8] 1 +
call _CxxThrowException  +
mov eax [ebp+10h] +
push dword ptr [eax]  +
push dword ptr [ebp+8]  +
call sub_101A6DC  +
mov eax [ebp+8] +
leave   +
retn 0Ch  +
***
push 0  +
mov eax offset byte_10285E6 +
call __EH_prolog3  +
mov esi [ebp+0Ch] +
push 3  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp+0Ch] +
push eax  +
call sub_101A6DC  +
push dword ptr [esi+8]  +
mov eax [ebp+0Ch] +
push dword ptr [esi+4]  +
mov ecx [eax] +
and dword ptr [ebp-4] 0 +
push eax  +
call dword ptr [ecx+10h]  +
push eax  +
push offset aUnableToAddFil  +
call sub_101766D  +
push offset aToJob_  +
push dword ptr [esi+8]  +
push offset asc_10091E4  +
push dword ptr [esi+4]  +
push offset aAdded  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
jnz loc_101A89E  +
push offset aUnableToAddF_1  +
push offset hFile  +
jmp loc_101A8D8  +
push dword ptr [ebp-10h]  +
mov eax [ebp+8] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
push eax  +
push offset aUnableToAddF_0  +
call sub_101766D  +
push offset aFilesToTheJob_  +
push 0  +
push dword ptr [ebp+0Ch]  +
push offset aAdded  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 0Ch  +
mov eax offset word_102863E +
call __EH_prolog3  +
mov esi [ebp+0Ch] +
push 4  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp-14h] +
push eax  +
call sub_101A6DC  +
xor ebx ebx +
mov [ebp-4] ebx +
mov [ebp+0Ch] ebx +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebp-14h] +
push eax  +
mov byte ptr [ebp-4] 1 +
call sub_101A31A  +
push eax  +
push offset aUnableToGetT_0  +
call sub_101766D  +
lea eax [ebp+8] +
push eax  +
lea eax [ebp-10h] +
push eax  +
push dword ptr [esi+0Ch]  +
mov [ebp+8] ebx +
call sub_1016FC8  +
test al al +
jnz loc_101A976  +
push offset aUnableToReadTh  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp-18h] +
push eax  +
mov [ebp-18h] ebx +
call _CxxThrowException  +
push dword ptr [ebp+8]  +
mov eax [ebp+0Ch] +
push dword ptr [ebp-10h]  +
mov ecx [eax] +
push dword ptr [esi+8]  +
push dword ptr [esi+4]  +
push eax  +
call dword ptr [ecx+0B0h]  +
push eax  +
push offset aUnableToAddFil  +
call sub_101766D  +
push offset aToJob_  +
push dword ptr [esi+4]  +
push offset aRangesOf  +
push ebx  +
push dword ptr [ebp-10h]  +
push offset aAdded  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
lea ecx [ebp+0Ch] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 0  +
mov eax offset byte_1028B20 +
call __EH_prolog3  +
mov esi [ebp+0Ch] +
push 3  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp+8] +
push eax  +
call sub_101A6DC  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp+0Ch] 0 +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebp+8] +
push eax  +
mov byte ptr [ebp-4] 1 +
call sub_101A31A  +
push eax  +
push offset aUnableToGetT_0  +
call sub_101766D  +
push dword ptr [esi+8]  +
mov eax [ebp+0Ch] +
push dword ptr [esi+4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0ACh]  +
mov esi eax +
push esi  +
push offset aUnableToReplac  +
call sub_101766D  +
test esi esi +
jnz loc_101AA68  +
push offset aSuccess_  +
jmp loc_101AA6D  +
push offset aNoFileMatchesT  +
push offset hFile  +
call sub_1018F8F  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_catch  +
xor ebx ebx +
mov [ebp-4] ebx +
mov [ebp-28h] ebx +
mov esi [ebp+8] +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 1 +
call sub_101A0FE  +
mov eax [esi] +
lea ecx [ebp-28h] +
push ecx  +
push esi  +
call dword ptr [eax+14h]  +
push eax  +
push offset aUnableToEnumFi  +
call sub_101766D  +
mov [ebp-14h] ebx +
mov byte ptr [ebp-4] 2 +
mov [ebp-30h] ebx +
mov esi offset hFile +
mov edi [ebp-28h] +
lea ecx [ebp-14h] +
call sub_101A0FE  +
mov eax [edi] +
push ebx  +
lea ecx [ebp-14h] +
push ecx  +
push 1  +
push edi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jnz loc_101AE09  +
mov [ebp-20h] ebx +
mov [ebp-1Ch] ebx +
mov [ebp-18h] ebx +
mov byte ptr [ebp-4] 4 +
cmp [ebp-14h] ebx +
jz loc_101ABCE  +
mov eax [ebp-14h] +
mov ecx [eax] +
lea edx [ebp-58h] +
push edx  +
push eax  +
mov byte ptr [ebp-4] 5 +
call dword ptr [ecx+14h]  +
push eax  +
push offset aUnableToGetF_0  +
call sub_101766D  +
push dword ptr [ebp-1Ch]  +
mov edi [ebp-14h] +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp-1Ch] +
push ecx  +
mov [ebp-1Ch] ebx +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
push eax  +
push offset aUnableToGetF_1  +
call sub_101766D  +
push dword ptr [ebp-18h]  +
mov edi [ebp-14h] +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp-18h] +
push ecx  +
mov [ebp-18h] ebx +
mov eax [edi] +
push edi  +
call dword ptr [eax+10h]  +
push eax  +
push offset aUnableToGetLoc  +
call sub_101766D  +
mov dword ptr [ebp-4] 4 +
jmp loc_101ABEF  +
push offset aAnExceptionO_0  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
mov eax [ebp-38h] +
cdq   +
push edx  +
push eax  +
push offset aCode  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
mov dword ptr [ebp-4] 4 +
mov eax offset loc_101ABC5 +
retn   +
xor ebx ebx +
mov esi offset hFile +
jmp loc_101ABEF  +
push offset aUnableToGetF_2  +
push esi  +
call sub_1018F8F  +
push offset aUnableToGetF_3  +
push esi  +
call sub_1018F8F  +
push offset aUnableToGetL_0  +
push esi  +
call sub_1018F8F  +
mov [ebp-24h] ebx +
lea eax [ebp-24h] +
push eax  +
lea eax [ebp-14h] +
push eax  +
mov byte ptr [ebp-4] 7 +
call sub_101A3C2  +
test eax eax +
jl loc_101AC9A  +
mov eax [ebp-24h] +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
lea edx [ebp-34h] +
push edx  +
push eax  +
mov byte ptr [ebp-4] 8 +
call dword ptr [ecx+18h]  +
push eax  +
mov edi offset aUnableToGetFil +
push edi  +
call sub_101766D  +
mov eax [ebp-24h] +
mov ecx [eax] +
lea edx [ebp-3Ch] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
push eax  +
push edi  +
call sub_101766D  +
mov dword ptr [ebp-4] 7 +
jmp loc_101AC9A  +
push offset aAnExceptionOcc  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
mov eax [ebp-40h] +
cdq   +
push edx  +
push eax  +
push offset aCode  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
push offset aUnableToGetF_7  +
push esi  +
call sub_1018F8F  +
mov dword ptr [ebp-4] 7 +
mov eax offset loc_101AC93 +
retn   +
xor ebx ebx +
mov esi offset hFile +
cmp [ebp+0Ch] bl +
jz loc_101ACAA  +
push offset asc_1009538  +
push esi  +
call sub_1018F8F  +
mov edi offset aCompleted +
cmp [ebp-48h] ebx +
jnz loc_101ACB9  +
mov edi offset aWorking +
push offset asc_100950C  +
push dword ptr [ebp-4Ch]  +
push dword ptr [ebp-50h]  +
push esi  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
mov eax [ebp-58h] +
and eax [ebp-54h] +
cmp eax 0FFFFFFFFh +
jz loc_101ACE9  +
push dword ptr [ebp-54h]  +
push dword ptr [ebp-58h]  +
push esi  +
call sub_1018FC7  +
jmp loc_101ACF4  +
push offset aUnknown_1  +
push esi  +
call sub_1018F8F  +
push offset asc_1002440  +
lea eax [ebp-18h] +
push eax  +
push offset asc_10091E4  +
lea eax [ebp-1Ch] +
push eax  +
mov eax offset dword_10083F8 +
push eax  +
push edi  +
push eax  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1019007  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1019007  +
push eax  +
call sub_1018F8F  +
cmp [ebp-20h] ebx +
jz loc_101ADD9  +
cmp [ebp+0Ch] bl +
jz loc_101AD51  +
push offset asc_1009538  +
push esi  +
call sub_1018F8F  +
push offset aRanges  +
push esi  +
call sub_1018F8F  +
mov [ebp-2Ch] ebx +
cmp [ebp-34h] ebx +
jbe loc_101ADD9  +
xor edi edi +
cmp [ebp+0Ch] bl +
jz loc_101AD76  +
push offset asc_1009538  +
push esi  +
call sub_1018F8F  +
mov eax [ebp-20h] +
push offset aLength  +
push dword ptr [edi+eax+4]  +
push dword ptr [edi+eax]  +
push offset aOffset  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
mov eax [ebp-20h] +
mov ecx [edi+eax+8] +
mov eax [edi+eax+0Ch] +
mov edx ecx +
and edx eax +
cmp edx 0FFFFFFFFh +
jnz loc_101ADB8  +
push offset aToEof  +
push esi  +
jmp loc_101ADC6  +
push offset asc_1002440  +
push eax  +
push ecx  +
push esi  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
inc dword ptr [ebp-2Ch]  +
mov eax [ebp-2Ch] +
add edi 10h +
cmp eax [ebp-34h] +
jb loc_101AD66  +
inc dword ptr [ebp-30h]  +
lea ecx [ebp-24h] +
mov byte ptr [ebp-4] 4 +
call sub_101A0FE  +
push dword ptr [ebp-18h]  +
call sub_1017EDF  +
push dword ptr [ebp-1Ch]  +
mov [ebp-18h] ebx +
mov byte ptr [ebp-4] 2 +
call sub_1017EDF  +
pop ecx  +
pop ecx  +
mov [ebp-1Ch] ebx +
jmp loc_101AAE3  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 1 +
call sub_101A0FE  +
lea ecx [ebp-28h] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
mov eax [ebp-30h] +
call __EH_epilog3  +
retn 8  +
***
cmp eax offset byte_102C3AD +
add [ebp+23h] dh +
push offset aFileS_  +
push 0  +
push eax  +
push offset aListed  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push eax  +
push offset aUnableToGetT_1  +
call sub_101766D  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+24h]  +
push eax  +
push offset aUnableToSetThe  +
call sub_101766D  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 1 +
call sub_101A0FE  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push offset aInvalidFileInd  +
push offset hFile  +
call sub_1018FAB  +
push offset dword_1029268  +
lea eax [ebp-18h] +
push eax  +
mov dword ptr [ebp-18h] 1 +
call _CxxThrowException  +
mov [ebp+0Ch] ebx +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebp+8] +
push eax  +
mov byte ptr [ebp-4] 2 +
call sub_101A3C2  +
push eax  +
push offset aUnableToGetT_1  +
call sub_101766D  +
mov eax [ebp+0Ch] +
lea edx [ebp-10h] +
push edx  +
mov [ebp-10h] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
push eax  +
push offset aUnableToGetT_2  +
call sub_101766D  +
push dword ptr [ebp-10h]  +
call sub_1019877  +
push eax  +
push offset aFileSValidatio  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
cmp byte_102C3AD bl +
jnz loc_101B080  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 1 +
call sub_101A0FE  +
lea ecx [ebp+8] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 10h  +
mov eax offset word_1028736 +
call __EH_prolog3  +
mov esi [ebp+0Ch] +
push 2  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp-18h] +
push eax  +
call sub_101A6DC  +
push dword ptr [esi+4]  +
xor ebx ebx +
mov [ebp-4] ebx +
call sub_1019134  +
mov edi eax +
lea eax [ebp-10h] +
push eax  +
push offset aLi  +
push dword ptr [esi+4]  +
mov [ebp-10h] ebx +
call ds:swscanf  +
xor esi esi +
inc esi  +
add esp 0Ch +
cmp eax esi +
jz loc_101B123  +
push offset aInvalidNumber_  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp-1Ch] +
push eax  +
mov [ebp-1Ch] esi +
call _CxxThrowException  +
cmp [ebp-10h] ebx +
jge loc_101B149  +
push offset a__0  +
push ebx  +
neg edi  +
push edi  +
push offset aInvalidFileI_1  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
jmp loc_101B10D  +
***
push edi  +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp+8] +
push eax  +
call near ptr dword_101A414+2  +
mov byte ptr [ebp-4] 1 +
cmp [ebp+8] ebx +
jnz loc_101B171  +
push offset aInvalidFileI_0  +
push offset hFile  +
call sub_1018FAB  +
jmp loc_101B112  +
***
mov [ebp+0Ch] ebx +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebp+8] +
push eax  +
mov byte ptr [ebp-4] 2 +
call sub_101A3C2  +
push eax  +
push offset aUnableToGetT_1  +
call sub_101766D  +
mov eax [ebp+0Ch] +
lea edx [ebp-14h] +
push edx  +
mov [ebp-14h] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
push eax  +
push offset aUnableToGetT_3  +
call sub_101766D  +
push offset a__2  +
push dword ptr [ebp-14h]  +
mov esi offset hFile +
push offset aTheTemporaryFi  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018FAB  +
cmp byte_102C3AD bl +
jnz loc_101B1E2  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 1 +
call sub_101A0FE  +
lea ecx [ebp+8] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call sub_101766D  +
push offset aJobSuspended_  +
push offset hFile  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
sbb al 50h +
push offset aUnableToResume  +
call sub_101766D  +
push offset aJobResumed_  +
push offset hFile  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push eax  +
push offset aUnableToCancel  +
call sub_101766D  +
push offset aJobCanceled_  +
push offset hFile  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push offset aUnableToComple  +
call sub_101766D  +
push offset aJobCompleted_  +
push offset hFile  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call sub_101766D  +
push dword ptr [ebp+8]  +
mov esi offset hFile +
push esi  +
call sub_1019FE7  +
cmp byte_102C3AD 0 +
jnz loc_101B3D7  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push eax  +
push offset aUnableToGetT_0  +
call sub_101766D  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp+0Ch] +
push edx  +
push eax  +
call dword ptr [ecx+0B8h]  +
push eax  +
push offset aUnableToRetr_0  +
call sub_101766D  +
test byte ptr [ebp+0Ch] 1 +
mov esi offset hFile +
jz loc_101B460  +
push offset aO  +
push esi  +
call sub_1018F8F  +
test byte ptr [ebp+0Ch] 2 +
jz loc_101B471  +
push offset aG  +
push esi  +
call sub_1018F8F  +
test byte ptr [ebp+0Ch] 4 +
jz loc_101B482  +
push offset aD  +
push esi  +
call sub_1018F8F  +
test byte ptr [ebp+0Ch] 8 +
jz loc_101B493  +
push offset aS  +
push esi  +
call sub_1018F8F  +
cmp byte_102C3AD 0 +
jnz loc_101B4A7  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_1 +
call __EH_prolog3  +
mov esi [ebp+0Ch] +
push 2  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp+8] +
push eax  +
call sub_101A6DC  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp+0Ch] 0 +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebp+8] +
push eax  +
mov byte ptr [ebp-4] 1 +
call sub_101A31A  +
push eax  +
push offset aUnableToGetT_0  +
call sub_101766D  +
mov esi [esi+4] +
xor ebx ebx +
jmp loc_101B561  +
movzx eax ax +
inc esi  +
inc esi  +
cmp eax 64h +
jg loc_101B541  +
jz loc_101B53C  +
cmp eax 44h +
jz loc_101B53C  +
cmp eax 47h +
jz loc_101B55E  +
cmp eax 4Fh +
jz loc_101B559  +
cmp eax 53h +
jmp loc_101B54E  +
or ebx 4 +
jmp loc_101B561  +
cmp eax 67h +
jz loc_101B55E  +
cmp eax 6Fh +
jz loc_101B559  +
cmp eax 73h +
jnz loc_101B605  +
or ebx 8 +
jmp loc_101B561  +
or ebx 1 +
jmp loc_101B561  +
or ebx 2 +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_101B51C  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+0B4h]  +
push eax  +
push offset aUnableToSetAcl  +
call sub_101766D  +
cmp byte_102C3AD 0 +
jnz loc_101B5E5  +
push offset aAclFlagsSetTo  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
test bl 1 +
jz loc_101B5AA  +
push offset aO  +
push esi  +
call sub_1018F8F  +
test bl 2 +
jz loc_101B5BA  +
push offset aG  +
push esi  +
call sub_1018F8F  +
test bl 4 +
jz loc_101B5CA  +
push offset aD  +
push esi  +
call sub_1018F8F  +
test bl 8 +
jz loc_101B5DA  +
push offset aS  +
push esi  +
call sub_1018F8F  +
push offset asc_1009BF4  +
push esi  +
call sub_1018F8F  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push offset aInvalidAclProp  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp-10h] +
push eax  +
mov dword ptr [ebp-10h] 1 +
call _CxxThrowException  +
push offset aUnableToGetTot  +
call sub_101766D  +
push dword ptr [ebp-20h]  +
mov esi offset hFile +
push dword ptr [ebp-24h]  +
push esi  +
call sub_1018FC7  +
cmp byte_102C3AD 0 +
jnz loc_101B68B  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push eax  +
push offset aUnableToGetByt  +
call sub_101766D  +
push dword ptr [ebp-18h]  +
mov esi offset hFile +
push dword ptr [ebp-1Ch]  +
push esi  +
call sub_1018FC7  +
cmp byte_102C3AD 0 +
jnz loc_101B700  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call sub_101766D  +
push 0  +
push dword ptr [ebp-14h]  +
mov esi offset hFile +
push esi  +
call sub_1018FC7  +
cmp byte_102C3AD 0 +
jnz loc_101B774  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call sub_101766D  +
push 0  +
push dword ptr [ebp-10h]  +
mov esi offset hFile +
push esi  +
call sub_1018FC7  +
cmp byte_102C3AD 0 +
jnz loc_101B7E8  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
xor al 50h +
push offset aUnableToGetJ_3  +
call sub_101766D  +
lea eax [ebp-24h] +
push eax  +
mov esi offset hFile +
push esi  +
call sub_10195A8  +
cmp byte_102C3AD 0 +
jnz loc_101B85B  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push eax  +
push offset aUnableToGetJ_4  +
call sub_101766D  +
lea eax [ebp-1Ch] +
push eax  +
mov esi offset hFile +
push esi  +
call sub_10195A8  +
cmp byte_102C3AD 0 +
jnz loc_101B8CE  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push offset aUnableToGetJ_5  +
call sub_101766D  +
cmp dword ptr [ebp-14h] 0 +
jnz loc_101B93B  +
cmp dword ptr [ebp-10h] 0 +
jnz loc_101B93B  +
push offset aWorking  +
push offset hFile  +
call sub_1018F8F  +
jmp loc_101B949  +
lea eax [ebp-14h] +
push eax  +
push offset hFile  +
call sub_10195A8  +
cmp byte_102C3AD 0 +
jnz loc_101B961  +
push offset asc_1002440  +
push offset hFile  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call sub_101766D  +
push dword ptr [ebp+8]  +
mov esi offset hFile +
push esi  +
call sub_101A029  +
cmp byte_102C3AD 0 +
jnz loc_101B9D3  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call sub_101766D  +
push dword ptr [ebp+0Ch]  +
mov esi offset hFile +
push esi  +
call sub_10196E1  +
cmp byte_102C3AD bl +
jnz loc_101BA56  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
push dword ptr [ebp+0Ch]  +
call sub_1017EDF  +
or dword ptr [ebp-4] 0FFFFFFFFh +
pop ecx  +
lea ecx [ebp+8] +
mov [ebp+0Ch] ebx +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
retn 0  +
***
dec eax  +
push eax  +
push offset aUnableToGetJ_8  +
call sub_101766D  +
mov eax offset asc_10023A8 +
push eax  +
lea ecx [ebp+0Ch] +
push ecx  +
push eax  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1019007  +
push eax  +
call sub_1018F8F  +
cmp byte_102C3AD bl +
jnz loc_101BAF9  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
push dword ptr [ebp+0Ch]  +
call sub_1017EDF  +
or dword ptr [ebp-4] 0FFFFFFFFh +
pop ecx  +
lea ecx [ebp+8] +
mov [ebp+0Ch] ebx +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 0  +
mov eax offset byte_10285E6 +
call __EH_prolog3  +
mov esi [ebp+0Ch] +
push 2  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp+0Ch] +
push eax  +
call sub_101A6DC  +
mov eax [ebp+0Ch] +
push dword ptr [esi+4]  +
mov ecx [eax] +
and dword ptr [ebp-4] 0 +
push eax  +
call dword ptr [ecx+44h]  +
push eax  +
push offset aUnableToSetDis  +
call sub_101766D  +
push offset a__0  +
push dword ptr [esi+4]  +
push offset aDisplayNameSet  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push eax  +
push offset aUnableToGetJ_8  +
call sub_101766D  +
lea eax [ebp+0Ch] +
push eax  +
mov esi offset hFile +
push esi  +
call sub_1019007  +
cmp byte_102C3AD bl +
jnz loc_101BC05  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
push dword ptr [ebp+0Ch]  +
call sub_1017EDF  +
or dword ptr [ebp-4] 0FFFFFFFFh +
pop ecx  +
lea ecx [ebp+8] +
mov [ebp+0Ch] ebx +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 0  +
mov eax offset byte_10285E6 +
call __EH_prolog3  +
mov esi [ebp+0Ch] +
push 2  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp+0Ch] +
push eax  +
call sub_101A6DC  +
mov eax [ebp+0Ch] +
push dword ptr [esi+4]  +
mov ecx [eax] +
and dword ptr [ebp-4] 0 +
push eax  +
call dword ptr [ecx+4Ch]  +
push eax  +
push offset aUnableToSetDes  +
call sub_101766D  +
push offset a__0  +
push dword ptr [esi+4]  +
push offset aDescriptionSet  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call sub_101766D  +
mov [ebp+0Ch] ebx +
mov esi [ebp+8] +
push ebx  +
mov byte ptr [ebp-4] 2 +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp+0Ch] +
push ecx  +
mov [ebp+0Ch] ebx +
mov eax [esi] +
push esi  +
call dword ptr [eax+20h]  +
push eax  +
push offset aUnableToGetCus  +
call sub_101766D  +
mov esi offset hFile +
cmp [ebp+0Ch] ebx +
jz loc_101BD32  +
mov eax offset asc_10023A8 +
push eax  +
lea ecx [ebp+0Ch] +
push ecx  +
push eax  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1019007  +
push eax  +
jmp loc_101BD38  +
push offset aNull_0  +
push esi  +
call sub_1018F8F  +
cmp byte_102C3AD bl +
jnz loc_101BD50  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
push dword ptr [ebp+0Ch]  +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp+8] +
mov [ebp+0Ch] ebx +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
jmp fword ptr [eax+68h]  +
***
call sub_101766D  +
push offset a__0  +
push dword ptr [ebp+0Ch]  +
push offset aCustomHttpRequ  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-18h] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call sub_101766D  +
mov eax [ebp+8] +
lea edx [ebp-18h] +
push edx  +
lea edx [ebp-14h] +
push edx  +
lea edx [ebp-10h] +
push edx  +
lea edx [ebp-20h] +
push edx  +
mov [ebp-10h] ebx +
mov [ebp-14h] ebx +
mov [ebp-18h] ebx +
mov [ebp+0Ch] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
mov esi eax +
push esi  +
push offset aUnableToGetCli  +
call sub_101766D  +
mov edi offset asc_1002440 +
cmp esi 1 +
jnz loc_101BF24  +
push offset aNoClientCertif  +
mov esi offset hFile +
push esi  +
jmp loc_101BFE9  +
mov eax [ebp-20h] +
cmp eax 7 +
ja loc_101BF64  +
jmp ds:off_101C01D[eax*4]  +
push offset aCertificateSto  +
jmp loc_101BF69  +
push offset aCertificateS_0  +
jmp loc_101BF69  +
push offset aCertificateS_1  +
jmp loc_101BF69  +
push offset aCertificateS_2  +
jmp loc_101BF69  +
push offset aCertificateS_3  +
jmp loc_101BF69  +
push offset aCertificateS_4  +
jmp loc_101BF69  +
push offset aCertificateS_7  +
jmp loc_101BF69  +
push offset aUnknownCertifi  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
push edi  +
push dword ptr [ebp-10h]  +
push offset aCertificateS_6  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
lea eax [ebp+0Ch] +
push eax  +
push 14h  +
push dword ptr [ebp-14h]  +
call sub_10180EE  +
test al al +
jz loc_101BFB9  +
push edi  +
push dword ptr [ebp+0Ch]  +
push offset aCertificateHas  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
jmp loc_101BFBF  +
push offset aFailedToConver  +
push esi  +
call sub_1018F8F  +
cmp [ebp+0Ch] ebx +
jz loc_101BFD3  +
push dword ptr [ebp+0Ch]  +
call ds:free  +
pop ecx  +
push edi  +
push dword ptr [ebp-18h]  +
push offset aCertificateSub  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
cmp byte_102C3AD bl +
jnz loc_101BFFD  +
push edi  +
push esi  +
call sub_1018F8F  +
lea ecx [ebp+8] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call sub_101766D  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov esi eax +
push esi  +
push offset aUnableToRemove  +
call sub_101766D  +
cmp esi 1 +
mov esi offset hFile +
jnz loc_101C0A8  +
push offset aNoClientCertif  +
jmp loc_101C0AD  +
push offset aRemovedTheClie  +
push esi  +
call sub_1018F8F  +
cmp byte_102C3AD 0 +
jnz loc_101C0C7  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push offset aUnableToGetT_4  +
call sub_101766D  +
push dword ptr [ebp+0Ch]  +
mov eax [ebp+8] +
mov ecx [eax] +
push ebx  +
push edi  +
push eax  +
call dword ptr [ecx+0Ch]  +
push eax  +
push offset aUnableToSetCli  +
call sub_101766D  +
push offset a__0  +
push esi  +
mov eax offset asc_100A8A8 +
push eax  +
push ebx  +
push eax  +
lea eax [edi+1] +
cdq   +
push edx  +
push eax  +
push offset aClientCertif_0  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018FAB  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018FAB  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
lea ecx [ebp+8] +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
jmp loc_101C1FD  +
push offset aToCertHashBlob  +
push esi  +
push offset aFailedToConv_0  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
cmp dword ptr [ebp+0Ch] 0 +
jz loc_101C20D  +
push dword ptr [ebp+0Ch]  +
call ds:free  +
pop ecx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 0  +
mov eax offset byte_1028B20 +
call __EH_prolog3  +
mov esi [ebp+0Ch] +
push 4  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp+8] +
push eax  +
call sub_101A6DC  +
push dword ptr [esi+4]  +
and dword ptr [ebp-4] 0 +
call sub_1019134  +
mov ebx [esi+8] +
mov esi [esi+0Ch] +
and dword ptr [ebp+0Ch] 0 +
mov edi eax +
dec edi  +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebp+8] +
push eax  +
mov byte ptr [ebp-4] 1 +
call sub_101A344  +
push eax  +
push offset aUnableToGetT_4  +
call sub_101766D  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push esi  +
push ebx  +
push edi  +
push eax  +
call dword ptr [ecx+10h]  +
push eax  +
push offset aUnableToSetC_0  +
call sub_101766D  +
push offset a__0  +
push esi  +
mov eax offset asc_100A8A8 +
push eax  +
push ebx  +
push eax  +
lea eax [edi+1] +
cdq   +
push edx  +
push eax  +
push offset aClientCertif_0  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018FAB  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018FAB  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 0  +
mov eax offset byte_1028B20 +
call __EH_prolog3  +
mov esi [ebp+0Ch] +
push 2  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp+8] +
push eax  +
call sub_101A6DC  +
push dword ptr [esi+4]  +
and dword ptr [ebp-4] 0 +
call sub_1019134  +
and dword ptr [ebp+0Ch] 0 +
mov esi eax +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebp+8] +
push eax  +
mov byte ptr [ebp-4] 1 +
call sub_101A344  +
push eax  +
push offset aUnableToGetT_4  +
call sub_101766D  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+24h]  +
push eax  +
push offset aUnableToSetT_0  +
call sub_101766D  +
push esi  +
call sub_10199A2  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call sub_101766D  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+28h]  +
push eax  +
push offset aUnableToGetT_5  +
call sub_101766D  +
push dword ptr [ebp-10h]  +
call sub_10199A2  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push offset aUnableToGetJ_0  +
call sub_101766D  +
cmp [ebp-18h] ebx +
jnz loc_101C4A1  +
push offset aThisCommandOnl  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
cmp byte_102C3AD bl +
jnz loc_101C47A  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
push offset aTheJobSpecifie  +
push esi  +
call sub_1018F8F  +
cmp byte_102C3AD bl +
jnz loc_101C5C8  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
jmp loc_101C5C8  +
mov [ebp+8] ebx +
lea eax [ebp+8] +
push eax  +
lea eax [ebp-14h] +
push eax  +
mov byte ptr [ebp-4] 1 +
call sub_101A2F0  +
push eax  +
push offset aUnableToGetT_6  +
call sub_101766D  +
mov [ebp+0Ch] ebx +
mov byte ptr [ebp-4] 2 +
cmp [ebp+8] ebx +
jz loc_101C555  +
mov esi [ebp+8] +
push ebx  +
mov byte ptr [ebp-4] 3 +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp+0Ch] +
push ecx  +
mov [ebp+0Ch] ebx +
mov eax [esi] +
push esi  +
call dword ptr [eax+0A0h]  +
push eax  +
push offset aUnableToGetR_2  +
call sub_101766D  +
mov dword ptr [ebp-4] 2 +
jmp loc_101C54E  +
push offset aAnExceptionOcc  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
mov eax [ebp-1Ch] +
cdq   +
push edx  +
push eax  +
push offset aCode  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
push offset aUnableToGetRep  +
push esi  +
call sub_1018F8F  +
mov dword ptr [ebp-4] 2 +
mov eax offset loc_101C54C +
retn   +
***
xor ebx ebx +
mov esi offset hFile +
jmp loc_101C565  +
push offset aUnableToGetRep  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
cmp [ebp+0Ch] ebx +
jz loc_101C584  +
mov eax offset asc_10023A8 +
push eax  +
lea ecx [ebp+0Ch] +
push ecx  +
push eax  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1019007  +
push eax  +
jmp loc_101C599  +
cmp byte_102C3AD bl +
jz loc_101C593  +
push offset aRawreturnShoul  +
jmp loc_101C598  +
push offset aTheReplyFilena  +
push esi  +
call sub_1018F8F  +
cmp byte_102C3AD bl +
jnz loc_101C5B1  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
push dword ptr [ebp+0Ch]  +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp+8] +
mov [ebp+0Ch] ebx +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 0  +
mov eax offset byte_1028B20 +
call __EH_prolog3  +
mov esi [ebp+0Ch] +
push 2  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp+8] +
push eax  +
call sub_101A6DC  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp+0Ch] 0 +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebp+8] +
push eax  +
mov byte ptr [ebp-4] 1 +
call sub_101A2F0  +
push eax  +
push offset aUnableToGetT_6  +
call sub_101766D  +
mov eax [ebp+0Ch] +
push dword ptr [esi+4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+9Ch]  +
push eax  +
push offset aUnableToSetRep  +
call sub_101766D  +
push offset a__0  +
push dword ptr [esi+4]  +
push offset aReplyFileNameS  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
sub al 50h +
push offset aUnableToGetJ_0  +
call sub_101766D  +
cmp [ebp-10h] ebx +
jnz loc_101C710  +
push offset aThisCommandOnl  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
mov edi offset asc_1002440 +
cmp byte_102C3AD bl +
jnz loc_101C6ED  +
push edi  +
push esi  +
call sub_1018F8F  +
push offset aTheJobSpecifie  +
push esi  +
call sub_1018F8F  +
cmp byte_102C3AD bl +
jnz loc_101C7CA  +
push edi  +
push esi  +
call sub_1018F8F  +
jmp loc_101C7CA  +
mov [ebp+8] ebx +
lea eax [ebp+8] +
push eax  +
lea eax [ebp+0Ch] +
push eax  +
mov byte ptr [ebp-4] 1 +
call sub_101A2F0  +
push eax  +
push offset aUnableToGetT_6  +
call sub_101766D  +
mov eax [ebp+8] +
cmp eax ebx +
jz loc_101C7B0  +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
push eax  +
call dword ptr [ecx+94h]  +
cmp eax ebx +
mov esi offset hFile +
jl loc_101C7A9  +
push offset asc_100950C  +
push ebx  +
push dword ptr [ebp-18h]  +
push offset aProgress  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
mov eax [ebp-20h] +
and eax [ebp-1Ch] +
cmp eax 0FFFFFFFFh +
jnz loc_101C784  +
push offset aUnknown  +
push esi  +
call sub_1018F8F  +
jmp loc_101C78E  +
push ebx  +
push dword ptr [ebp-20h]  +
push esi  +
call sub_1018FC7  +
push offset a__0  +
push esi  +
call sub_1018F8F  +
cmp byte_102C3AD bl +
jnz loc_101C7BF  +
push offset asc_1002440  +
push esi  +
jmp loc_101C7BA  +
push offset aUnableToGetR_4  +
jmp loc_101C793  +
***
push offset aUnableToGetR_3  +
push offset hFile  +
call sub_1018F8F  +
lea ecx [ebp+8] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
sub al 50h +
push offset aUnableToGetJ_0  +
call sub_101766D  +
cmp [ebp-14h] ebx +
jnz loc_101C870  +
push offset aThisCommandOnl  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
mov edi offset asc_1002440 +
cmp byte_102C3AD bl +
jnz loc_101C84D  +
push edi  +
push esi  +
call sub_1018F8F  +
push offset aTheJobSpecifie  +
push esi  +
call sub_1018F8F  +
cmp byte_102C3AD bl +
jnz loc_101C8F4  +
push edi  +
push esi  +
call sub_1018F8F  +
jmp loc_101C8F4  +
mov [ebp+8] ebx +
lea eax [ebp+8] +
push eax  +
lea eax [ebp+0Ch] +
push eax  +
mov byte ptr [ebp-4] 1 +
call sub_101A2F0  +
push eax  +
push offset aUnableToGetT_6  +
call sub_101766D  +
mov eax [ebp+8] +
cmp eax ebx +
jz loc_101C8DA  +
mov ecx [eax] +
lea edx [ebp-1Ch] +
push edx  +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+98h]  +
cmp eax ebx +
jl loc_101C8D3  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-1Ch]  +
push offset aDataLengthIs  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-10h]  +
call sub_1017174  +
jmp loc_101C8E9  +
push offset aUnableToGetR_6  +
jmp loc_101C8DF  +
push offset aUnableToGetR_5  +
push offset hFile  +
call sub_1018F8F  +
lea ecx [ebp+8] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call sub_101766D  +
mov eax [ebp+0Ch] +
lea edx [ebp+8] +
push edx  +
lea edx [ebp-10h] +
push edx  +
mov [ebp-10h] ebx +
mov [ebp+8] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+90h]  +
push eax  +
push offset aUnableToGetCal  +
call sub_101766D  +
push offset asc_10023A8  +
push dword ptr [ebp+8]  +
mov esi offset hFile +
push offset asc_100AE20  +
push dword ptr [ebp-10h]  +
push offset aTheNotificatio  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
cmp byte_102C3AD bl +
jnz loc_101C9BC  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
lea ecx [ebp+0Ch] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_3 +
call __EH_prolog3  +
mov esi [ebp+0Ch] +
push 3  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp-10h] +
push eax  +
call sub_101A6DC  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp+0Ch] 0 +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebp-10h] +
push eax  +
mov byte ptr [ebp-4] 1 +
call sub_101A2F0  +
push eax  +
push offset aUnableToGetT_6  +
call sub_101766D  +
mov edi ds:_wcsicmp +
mov ebx offset aNull +
push ebx  +
push dword ptr [esi+4]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101CA45  +
and [ebp+8] eax +
jmp loc_101CA4B  +
mov eax [esi+4] +
mov [ebp+8] eax +
push ebx  +
push dword ptr [esi+8]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101CA5B  +
xor ecx ecx +
jmp loc_101CA5E  +
mov ecx [esi+8] +
mov eax [ebp+0Ch] +
mov edx [eax] +
push ecx  +
push dword ptr [ebp+8]  +
push eax  +
call dword ptr [edx+8Ch]  +
push eax  +
push offset aUnableToSetT_1  +
call sub_101766D  +
push offset a__3  +
push dword ptr [esi+8]  +
push offset asc_100AE20  +
push dword ptr [esi+4]  +
push offset aNotification_0  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
mov [ebp-18h] eax +
mov eax [esi+0Ch] +
mov ebx offset aNull +
push ebx  +
push eax  +
mov [ebp-14h] eax +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101CB52  +
and [ebp-14h] eax +
mov esi [esi+10h] +
push ebx  +
push esi  +
mov [ebp-10h] esi +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101CB65  +
and [ebp-10h] eax +
mov eax [ebp+0Ch] +
mov ecx [eax] +
lea edx [ebp-1Ch] +
push edx  +
push eax  +
call dword ptr [ecx+0A4h]  +
push eax  +
push offset aUnableToAddCre  +
call sub_101766D  +
push offset a__0  +
push offset aOk  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call sub_101766D  +
cmp esi 1 +
jnz loc_101CC46  +
push offset aNoMatchingCred  +
push offset hFile  +
jmp loc_101CC5B  +
push offset a__0  +
push offset aOk  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
pop eax  +
push eax  +
push offset aUnableToGetJ_8  +
call sub_101766D  +
push dword ptr [ebp+8]  +
mov esi offset hFile +
push esi  +
call sub_101A0B6  +
cmp byte_102C3AD 0 +
jnz loc_101CCDE  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 0  +
mov eax offset byte_10285E6 +
call __EH_prolog3  +
mov esi [ebp+0Ch] +
push 2  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp+0Ch] +
push eax  +
call sub_101A6DC  +
push dword ptr [esi+4]  +
and dword ptr [ebp-4] 0 +
call loc_10198A4  +
mov esi eax +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+54h]  +
push eax  +
push offset aUnableToSetDes  +
call sub_101766D  +
push offset a__0  +
push esi  +
push offset aPrioritySetTo  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_101A0B6  +
push eax  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
pusha   +
push eax  +
push offset aUnableToGetNot  +
call sub_101766D  +
push 0  +
push dword ptr [ebp+8]  +
mov esi offset hFile +
push esi  +
call sub_1018FC7  +
cmp byte_102C3AD 0 +
jnz loc_101CDD4  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 0  +
mov eax offset byte_10285E6 +
call __EH_prolog3  +
mov esi [ebp+0Ch] +
push 2  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp+0Ch] +
push eax  +
call sub_101A6DC  +
push dword ptr [esi+4]  +
and dword ptr [ebp-4] 0 +
call sub_1019134  +
mov esi eax +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+5Ch]  +
push eax  +
push offset aUnableToSetDes  +
call sub_101766D  +
push offset a__0  +
push 0  +
push esi  +
push offset aNotification_1  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 0B0A46850h  +
add [ecx] al +
call sub_101766D  +
mov esi offset hFile +
cmp [ebp+0Ch] ebx +
jz loc_101CEC9  +
push offset aRegistered  +
jmp loc_101CECE  +
push offset aUnregistered  +
push esi  +
call sub_1018F8F  +
cmp byte_102C3AD bl +
jnz loc_101CEE7  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
lea ecx [ebp+0Ch] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 0  +
mov eax offset byte_10285E6 +
call __EH_prolog3  +
mov esi [ebp+0Ch] +
push 2  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp+0Ch] +
push eax  +
call sub_101A6DC  +
push dword ptr [esi+4]  +
and dword ptr [ebp-4] 0 +
call sub_1019134  +
mov esi eax +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+6Ch]  +
push eax  +
push offset aUnableToSetNew  +
call sub_101766D  +
push offset a__0  +
push 0  +
push esi  +
push offset aMinimumRetryDe  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push offset aUnableToGetMin  +
call sub_101766D  +
push 0  +
push dword ptr [ebp+8]  +
mov esi offset hFile +
push esi  +
call sub_1018FC7  +
cmp byte_102C3AD 0 +
jnz loc_101CFEA  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push offset aUnableToGetNoP  +
call sub_101766D  +
push 0  +
push dword ptr [ebp+8]  +
mov esi offset hFile +
push esi  +
call sub_1018FC7  +
cmp byte_102C3AD 0 +
jnz loc_101D05E  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 0  +
mov eax offset byte_10285E6 +
call __EH_prolog3  +
mov esi [ebp+0Ch] +
push 2  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp+0Ch] +
push eax  +
call sub_101A6DC  +
push dword ptr [esi+4]  +
and dword ptr [ebp-4] 0 +
call sub_1019134  +
mov esi eax +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+74h]  +
push eax  +
push offset aUnableToSetN_0  +
call sub_101766D  +
push offset a__0  +
push 0  +
push esi  +
push offset aNoProgressTi_0  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push offset aUnableToGetT_7  +
call sub_101766D  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+0D0h]  +
push eax  +
push offset aUnableToGetM_0  +
call sub_101766D  +
push ebx  +
push dword ptr [ebp-10h]  +
mov esi offset hFile +
push offset aMaxDownloadTim  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
cmp byte_102C3AD bl +
jnz loc_101D182  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
lea ecx [ebp+0Ch] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 8  +
mov eax offset word_1028A16 +
call __EH_prolog3_catch  +
mov esi [ebp+0Ch] +
push 2  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp+8] +
push eax  +
call sub_101A6DC  +
push dword ptr [esi+4]  +
xor edi edi +
mov [ebp-4] edi +
call sub_1019134  +
mov esi eax +
mov [ebp+0Ch] edi +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebp+8] +
push eax  +
mov byte ptr [ebp-4] 2 +
call sub_101A398  +
push eax  +
push offset aUnableToGetT_7  +
call sub_101766D  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+0CCh]  +
push eax  +
push offset aUnableToSetN_1  +
call sub_101766D  +
push offset aMaxDownloadT_0  +
push offset hFile  +
call sub_1018F8F  +
push edi  +
push esi  +
push eax  +
call sub_1018FC7  +
push offset aSeconds_  +
push eax  +
call sub_1018F8F  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 1 +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push offset aAnErrorOccured  +
push offset hFile  +
call sub_1018F8F  +
mov eax offset loc_101D23F +
retn   +
***
jl loc_101D2EA  +
push offset aUnableToGetNoP  +
call sub_101766D  +
push 0  +
push dword ptr [ebp+8]  +
mov esi offset hFile +
push esi  +
call sub_1018FC7  +
cmp byte_102C3AD 0 +
jnz loc_101D2C8  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
stos   +
call sub_101766D  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+0C0h]  +
push eax  +
push offset aUnableToGetSet  +
call sub_101766D  +
push dword ptr [ebp-10h]  +
call sub_1019AEF  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 0  +
mov eax offset byte_1028B20 +
call __EH_prolog3  +
mov esi [ebp+0Ch] +
push 2  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp+8] +
push eax  +
call sub_101A6DC  +
push dword ptr [esi+4]  +
and dword ptr [ebp-4] 0 +
call sub_1019134  +
and dword ptr [ebp+0Ch] 0 +
mov esi eax +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebp+8] +
push eax  +
mov byte ptr [ebp-4] 1 +
call sub_101A398  +
push eax  +
push offset aUnableToGetT_7  +
call sub_101766D  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+0BCh]  +
push eax  +
push offset aUnableToSet  +
call sub_101766D  +
push esi  +
call sub_1019AEF  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_GS  +
xor ebx ebx +
mov [ebp-4] ebx +
mov [ebp-24h] ebx +
xor eax eax +
lea edi [ebp-20h] +
stos   +
stos   +
stos   +
stos   +
xor eax eax +
push 6  +
lea edi [ebp-28h] +
stos   +
pop ecx  +
lea edi [ebp-40h] +
stos   +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
push eax  +
mov byte ptr [ebp-4] 1 +
call dword ptr [ecx+28h]  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-28h] +
push edx  +
push eax  +
call dword ptr [ecx+38h]  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-40h] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
push dword ptr [ebp-24h]  +
mov esi [ebp+8] +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp-24h] +
push ecx  +
mov [ebp-24h] ebx +
mov eax [esi] +
push esi  +
call dword ptr [eax+48h]  +
cmp eax ebx +
jge loc_101D47D  +
push dword ptr [ebp-24h]  +
call sub_1017EDF  +
pop ecx  +
mov [ebp-24h] ebx +
mov eax [ebp-24h] +
cmp eax ebx +
jnz loc_101D489  +
mov eax offset aNull +
push dword ptr [ebp-28h]  +
mov esi offset hFile +
push offset asc_100B4D8  +
push eax  +
push offset asc_100B4D0  +
lea eax [ebp-20h] +
push eax  +
push esi  +
call sub_1019022  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_101A029  +
push ebx  +
push dword ptr [ebp-30h]  +
mov ebx offset asc_100950C +
push ebx  +
push 0  +
push dword ptr [ebp-2Ch]  +
mov edi offset dword_10083F8 +
push edi  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push ebx  +
push dword ptr [ebp-34h]  +
push dword ptr [ebp-38h]  +
push edi  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
cmp dword ptr [ebp-40h] 0FFFFFFFFh +
jnz loc_101D51E  +
cmp dword ptr [ebp-3Ch] 0FFFFFFFFh +
jnz loc_101D51E  +
push offset aUnknown_1  +
push esi  +
call sub_1018F8F  +
jmp loc_101D52A  +
push dword ptr [ebp-3Ch]  +
push dword ptr [ebp-40h]  +
push esi  +
call sub_1018FC7  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
push dword ptr [ebp-24h]  +
call sub_1017EDF  +
and dword ptr [ebp-24h] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
pop ecx  +
lea ecx [ebp+8] +
call sub_101A0FE  +
call sub_1027DFF  +
retn 4  +
***
push offset aUnableToGetPro  +
call sub_101766D  +
push dword ptr [ebp-14h]  +
mov esi offset hFile +
push esi  +
call sub_101908E  +
cmp byte_102C3AD bl +
jnz loc_101D5DF  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
push dword ptr [ebp+8]  +
call sub_1017EDF  +
push dword ptr [ebp+0Ch]  +
mov [ebp+8] ebx +
call sub_1017EDF  +
or dword ptr [ebp-4] 0FFFFFFFFh +
pop ecx  +
pop ecx  +
lea ecx [ebp-10h] +
mov [ebp+0Ch] ebx +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push eax  +
push offset aUnableToGetP_0  +
call sub_101766D  +
mov eax [ebp+0Ch] +
cmp eax ebx +
jnz loc_101D67F  +
mov eax offset aNull +
push eax  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
cmp byte_102C3AD bl +
jnz loc_101D69E  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
push dword ptr [ebp+8]  +
call sub_1017EDF  +
push dword ptr [ebp+0Ch]  +
mov [ebp+8] ebx +
call sub_1017EDF  +
or dword ptr [ebp-4] 0FFFFFFFFh +
pop ecx  +
pop ecx  +
lea ecx [ebp-10h] +
mov [ebp+0Ch] ebx +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push offset aUnableToGetP_1  +
call sub_101766D  +
mov eax [ebp+0Ch] +
cmp eax ebx +
jnz loc_101D73E  +
mov eax offset aNull +
push eax  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
cmp byte_102C3AD bl +
jnz loc_101D75D  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
push dword ptr [ebp+0Ch]  +
call sub_1017EDF  +
push dword ptr [ebp+8]  +
mov [ebp+0Ch] ebx +
call sub_1017EDF  +
or dword ptr [ebp-4] 0FFFFFFFFh +
pop ecx  +
pop ecx  +
lea ecx [ebp-10h] +
mov [ebp+8] ebx +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 8  +
mov eax offset dword_1028AF0 +
call __EH_prolog3  +
cmp dword ptr [ebp+8] 2 +
jge loc_101D7C4  +
push offset aSetproxysett_0  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp+8] 1 +
push offset dword_1029268  +
lea eax [ebp+8] +
push eax  +
call _CxxThrowException  +
mov esi [ebp+0Ch] +
push dword ptr [esi]  +
lea eax [ebp-10h] +
push eax  +
call sub_101A6DC  +
mov edi [esi+4] +
and dword ptr [ebp-4] 0 +
push offset asc_100240C  +
push edi  +
call ds:wcsstr  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101D801  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_101D7F0  +
sub eax edx +
sar eax 1 +
lea eax [edi+eax*2] +
sub eax edi +
shr eax 1 +
mov esi eax +
xor ecx ecx +
push 2  +
pop edx  +
lea eax [esi+1] +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_1019242  +
mov ebx eax +
mov [ebp-14h] ebx +
add esi esi +
push esi  +
push edi  +
push ebx  +
mov byte ptr [ebp-4] 1 +
call memcpy  +
xor eax eax +
mov [esi+ebx] ax +
mov esi ds:_wcsicmp +
push offset aPreconfig  +
push ebx  +
call esi  +
add esp 18h +
test eax eax +
jnz loc_101D8A4  +
mov eax [ebp-10h] +
mov ecx [eax] +
xor esi esi +
push esi  +
push esi  +
push esi  +
push eax  +
call dword ptr [ecx+80h]  +
push eax  +
push offset aUnableToSetPro  +
call sub_101766D  +
push offset a__0  +
push esi  +
push offset aProxyUsageSetT  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_101908E  +
push eax  +
call sub_1018F8F  +
push ebx  +
call sub_1017EDF  +
or dword ptr [ebp-4] 0FFFFFFFFh +
pop ecx  +
lea ecx [ebp-10h] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push offset aNo_proxy  +
push ebx  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101D8D8  +
mov eax [ebp-10h] +
mov ecx [eax] +
push 0  +
push 0  +
push 1  +
push eax  +
call dword ptr [ecx+80h]  +
push eax  +
push offset aUnableToSetPro  +
call sub_101766D  +
push offset a__0  +
push 1  +
jmp loc_101D86E  +
***
push offset aAutodetect  +
push ebx  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101D90F  +
mov eax [ebp-10h] +
mov ecx [eax] +
push 0  +
push 0  +
push 3  +
push eax  +
call dword ptr [ecx+80h]  +
push eax  +
push offset aUnableToSetPro  +
call sub_101766D  +
push offset a__0  +
push 3  +
jmp loc_101D86E  +
***
push offset aOverride  +
push ebx  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101D9ED  +
cmp dword ptr [ebp+8] 4 +
jz loc_101D931  +
push offset aOverrideMustBe  +
jmp loc_101D7A5  +
***
mov eax [ebp+0Ch] +
mov ecx [eax+8] +
mov eax [eax+0Ch] +
mov edi offset aNull +
push edi  +
push ecx  +
mov [ebp+0Ch] ecx +
mov [ebp+8] eax +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101D952  +
and [ebp+0Ch] eax +
push edi  +
push dword ptr [ebp+8]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101D961  +
and [ebp+8] eax +
push dword ptr [ebp+8]  +
mov eax [ebp-10h] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push 2  +
push eax  +
call dword ptr [ecx+80h]  +
push eax  +
push offset aUnableToSetPro  +
call sub_101766D  +
mov esi offset a__0 +
push esi  +
push 2  +
push offset aProxyUsageSetT  +
mov edi offset hFile +
push edi  +
call sub_1018F8F  +
push eax  +
call sub_101908E  +
push eax  +
call sub_1018F8F  +
mov eax [ebp+0Ch] +
test eax eax +
jnz loc_101D9B0  +
mov eax offset aNull +
push esi  +
push eax  +
push offset aProxyListSetTo  +
push edi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
mov eax [ebp+8] +
test eax eax +
jnz loc_101D9D5  +
mov eax offset aNull +
push esi  +
push eax  +
push offset aProxyBypassL_0  +
push edi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
jmp loc_101D883  +
***
push offset aProxyUsageMust  +
push offset hFile  +
call sub_1018F8F  +
and dword ptr [ebp+0Ch] 0 +
push offset dword_1029268  +
lea eax [ebp+0Ch] +
jmp loc_101D7BE  +
***
and [eax+0] ch +
mov ebx 0B8680100h +
retn   +
***
push eax  +
push offset aUnableToGetT_8  +
call sub_101766D  +
mov [ebp-10h] ebx +
mov byte ptr [ebp-4] 2 +
cmp [ebp+8] edi +
jnz loc_101DC0A  +
mov esi [ebp+0Ch] +
lea ecx [ebp-10h] +
call sub_101A0FE  +
mov eax [esi] +
lea ecx [ebp-10h] +
push ecx  +
push offset dword_100BAF0  +
push esi  +
call dword ptr [eax]  +
push eax  +
push offset aUnableToGetIcl  +
call sub_101766D  +
mov eax [ebp-10h] +
mov ecx [eax] +
push 40h  +
or edi 0FFFFFFFFh +
push edi  +
push 3  +
push ebx  +
push edi  +
push edi  +
push edi  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+10h]  +
push eax  +
push offset aUnableToSetImp  +
call sub_101766D  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
push eax  +
push offset aUnableToSetT_3  +
call sub_101766D  +
push offset aTokenSetToTheC  +
push offset hFile  +
call sub_1018F8F  +
jmp loc_101DD04  +
cmp dword ptr [ebp+8] 3 +
jnz near ptr loc_101DB3C+1  +
lea eax [ebp+8] +
push eax  +
push ebx  +
push 2  +
push dword ptr [esi+8]  +
mov [ebp+8] ebx +
push ebx  +
push dword ptr [esi+4]  +
call ds:LogonUserW  +
test eax eax +
jnz loc_101DC51  +
call ds:GetLastError  +
push ebx  +
push eax  +
push offset aUnableToCreate  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
jmp near ptr dword_101DB48+4  +
***
push dword ptr [ebp+8]  +
call ds:ImpersonateLoggedOnUser  +
test eax eax +
jnz loc_101DC8B  +
call ds:GetLastError  +
push ebx  +
push eax  +
push offset aUnableToImpers  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
mov [ebp-1Ch] edi +
push offset dword_1029268  +
lea eax [ebp-1Ch] +
jmp near ptr dword_101DB54+3  +
***
mov edi [ebp+0Ch] +
lea ecx [ebp-10h] +
call sub_101A0FE  +
mov eax [edi] +
lea ecx [ebp-10h] +
push ecx  +
push offset dword_100BAF0  +
push edi  +
call dword ptr [eax]  +
push eax  +
push offset aUnableToGetIcl  +
call sub_101766D  +
mov eax [ebp-10h] +
mov ecx [eax] +
push 40h  +
or edi 0FFFFFFFFh +
push edi  +
push 3  +
push ebx  +
push edi  +
push edi  +
push edi  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [ecx+10h]  +
push eax  +
push offset aUnableToSetImp  +
call sub_101766D  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
push eax  +
push offset aUnableToSetT_3  +
call sub_101766D  +
push dword ptr [esi+4]  +
push offset aTokenSetTo  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
call ds:RevertToSelf  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 1 +
call sub_101A0FE  +
lea ecx [ebp+0Ch] +
mov [ebp-4] bl +
call sub_101A0FE  +
lea ecx [ebp-14h] +
mov [ebp-4] edi +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push offset aUnableToGetT_8  +
call sub_101766D  +
mov eax [ebp+8] +
lea edx [ebp+0Ch] +
push edx  +
mov [ebp+0Ch] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
push eax  +
push offset aUnableToGet_10  +
call sub_101766D  +
cmp [ebp+0Ch] ebx +
jnz loc_101DD9E  +
push offset aThereIsNoHelpe  +
push offset hFile  +
jmp loc_101DDB1  +
push dword ptr [ebp+0Ch]  +
push offset asc_1002434  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
lea ecx [ebp+8] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 1Ch  +
mov eax offset dword_1028B90 +
call __EH_prolog3  +
mov esi [ebp+0Ch] +
push 2  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
push dword ptr [esi]  +
lea eax [ebp-14h] +
push eax  +
call sub_101A6DC  +
push dword ptr [esi+4]  +
xor ebx ebx +
mov [ebp-4] ebx +
call sub_1019134  +
mov edi eax +
lea eax [ebp-10h] +
push eax  +
push offset aLi  +
push dword ptr [esi+4]  +
mov [ebp-10h] ebx +
call ds:swscanf  +
xor esi esi +
inc esi  +
add esp 0Ch +
cmp eax esi +
jz loc_101DE4D  +
push offset aInvalidNumber_  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp-18h] +
push eax  +
mov [ebp-18h] esi +
call _CxxThrowException  +
cmp [ebp-10h] ebx +
jge loc_101DE73  +
push offset a__0  +
push ebx  +
neg edi  +
push edi  +
push offset aInvalidFileI_1  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
jmp loc_101DE37  +
***
push edi  +
lea eax [ebp-14h] +
push eax  +
lea eax [ebp+8] +
push eax  +
call near ptr dword_101A414+2  +
mov byte ptr [ebp-4] 1 +
cmp [ebp+8] ebx +
jnz loc_101DE9B  +
push offset aInvalidFileI_0  +
push offset hFile  +
call sub_1018FAB  +
jmp loc_101DE3C  +
***
mov [ebp+0Ch] ebx +
lea eax [ebp+0Ch] +
push eax  +
lea eax [ebp+8] +
push eax  +
mov byte ptr [ebp-4] 2 +
call sub_101A3EC  +
push eax  +
push offset aUnableToGet_11  +
call sub_101766D  +
mov eax [ebp+0Ch] +
lea edx [ebp-28h] +
push edx  +
lea edx [ebp-20h] +
push edx  +
mov [ebp-28h] ebx +
mov [ebp-24h] ebx +
mov [ebp-20h] ebx +
mov [ebp-1Ch] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
push eax  +
push offset aUnableToGetSta  +
call sub_101766D  +
push offset asc_1002440  +
push dword ptr [ebp-1Ch]  +
push dword ptr [ebp-20h]  +
push offset aBytesFromOrigi  +
push dword ptr [ebp-24h]  +
push dword ptr [ebp-28h]  +
push offset aBytesFromPeers  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 1 +
call sub_101A0FE  +
lea ecx [ebp+8] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3  +
mov esi ecx +
lea eax [ebp+8] +
xor ebx ebx +
push eax  +
lea ecx [esi+8] +
mov [ebp-4] ebx +
mov dword ptr [esi] offset off_100BD3C +
mov dword ptr [esi+4] 1 +
call sub_101A29E  +
fldz   +
or dword ptr [esi+0Ch] 0FFFFFFFFh +
fstp  qword ptr [esi+38h] +
push ebx  +
mov eax 400h +
push eax  +
push eax  +
push ebx  +
lea eax [ebp-28h] +
push eax  +
mov [esi+28h] ebx +
mov [esi+2Ch] ebx +
mov [esi+30h] ebx +
mov [esi+34h] ebx +
mov [esi+40h] bl +
mov [esi+41h] bl +
mov [esi+42h] bl +
mov [esi+48h] bl +
call ds:PeekMessageW  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
mov eax esi +
call __EH_epilog3  +
retn 4  +
***
mov dword ptr [ecx] offset off_100BD3C +
add ecx 8 +
jmp sub_101A0FE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_101DFCA  +
test [ebp+arg_0] 1 +
jz loc_101DFF7  +
push esi  +
call sub_1017EDF  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
and ds:byte_1028BE0[eax] bh +
call __EH_prolog3_catch_GS  +
mov eax [ebp+8] +
mov [ebp-28h] eax +
xor esi esi +
mov [ebp-4] esi +
cmp [ebp+0Ch] esi +
jz loc_101E087  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
lea edx [ebp-24h] +
push edx  +
push eax  +
mov byte ptr [ebp-4] 1 +
call dword ptr [ecx+28h]  +
push eax  +
push offset aUnableToGetG_0  +
call sub_101766D  +
mov [ebp-4] esi +
jmp loc_101E096  +
push offset aAnExceptionOcc  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
mov eax [ebp-2Ch] +
cdq   +
push edx  +
push eax  +
push offset aCode  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
push offset aUnableToGetGui  +
push esi  +
call sub_1018F8F  +
and dword ptr [ebp-4] 0 +
mov eax offset loc_101E03E +
retn   +
***
push offset aUnableToGetGui  +
push offset hFile  +
call sub_1018F8F  +
lea eax [ebp-24h] +
push eax  +
push dword ptr [ebp-28h]  +
call sub_1019022  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
mov esi eax +
call sub_101A0FE  +
mov eax esi +
call sub_1027E13  +
retn 8  +
***
call __EH_prolog3  +
xor ebx ebx +
mov [ebp-4] ebx +
mov [ebp-24h] ebx +
mov [ebp-18h] ebx +
mov [ebp-14h] ebx +
mov edi [ebp+0Ch] +
mov byte ptr [ebp-4] 3 +
mov [ebp-0Dh] bl +
mov [ebp-0Eh] bl +
mov esi offset hFile +
cmp edi ebx +
jz loc_101E14F  +
lea ecx [ebp-24h] +
call sub_101A0FE  +
mov eax [edi] +
lea ecx [ebp-24h] +
push ecx  +
push edi  +
call dword ptr [eax+10h]  +
cmp eax ebx +
jl loc_101E15A  +
push dword ptr [ebp-14h]  +
mov edi [ebp-24h] +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp-14h] +
push ecx  +
mov [ebp-14h] ebx +
mov eax [edi] +
push edi  +
call dword ptr [eax+0Ch]  +
push eax  +
push offset aUnableToGetErr  +
call sub_101755F  +
push dword ptr [ebp-18h]  +
mov edi [ebp-24h] +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp-18h] +
push ecx  +
mov [ebp-18h] ebx +
mov eax [edi] +
push edi  +
call dword ptr [eax+10h]  +
push eax  +
push offset aUnableToGetE_0  +
call sub_101755F  +
jmp loc_101E170  +
push offset aUnableToGetE_1  +
push esi  +
call sub_1018F8F  +
push offset aUnableToGetE_2  +
push esi  +
call sub_1018F8F  +
push offset aUnableToGetE_3  +
push esi  +
call sub_1018F8F  +
cmp [ebp-18h] ebx +
jz loc_101E1CB  +
cmp [ebp-14h] ebx +
jz loc_101E1CB  +
xor eax eax +
push offset asc_1002440  +
lea edi [ebp-28h] +
stos   +
lea edi [ebp-2Ch] +
stos   +
lea eax [ebp-18h] +
push eax  +
push offset asc_10091E4  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp-28h]  +
push offset aErrorFile  +
push dword ptr [ebp-2Ch]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1019007  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1019007  +
push eax  +
call sub_1018F8F  +
mov [ebp-20h] ebx +
mov [ebp-1Ch] ebx +
mov eax [ebp+0Ch] +
mov ecx [eax] +
lea edx [ebp-34h] +
push edx  +
lea edx [ebp-38h] +
push edx  +
push eax  +
mov byte ptr [ebp-4] 5 +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
jge loc_101E1F4  +
push offset aUnableToGetE_4  +
jmp loc_101E356  +
mov edi 80070717h +
call ds:GetThreadLocale  +
mov [ebp-30h] eax +
mov dword ptr [ebp-2Ch] 400h +
mov [ebp-28h] ebx +
cmp edi 80070717h +
jz loc_101E21C  +
cmp edi 8007013Dh +
jnz loc_101E24D  +
cmp dword ptr [ebp-28h] 2 +
jnb loc_101E24D  +
push dword ptr [ebp-20h]  +
mov edi [ebp+0Ch] +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp-20h] +
push ecx  +
mov ecx [ebp-28h] +
push dword ptr [ebp+ecx*4-30h]  +
mov [ebp-20h] ebx +
mov eax [edi] +
push edi  +
call dword ptr [eax+14h]  +
mov edi eax +
cmp edi ebx +
jge loc_101E251  +
inc dword ptr [ebp-28h]  +
jmp loc_101E20C  +
cmp edi ebx +
jl loc_101E255  +
mov byte ptr [ebp-0Dh] 1 +
mov eax 80070717h +
mov [ebp-28h] ebx +
cmp eax 80070717h +
jz loc_101E26B  +
cmp eax 8007013Dh +
jnz loc_101E29A  +
cmp dword ptr [ebp-28h] 2 +
jnb loc_101E29A  +
push dword ptr [ebp-1Ch]  +
mov edi [ebp+0Ch] +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp-1Ch] +
push ecx  +
mov ecx [ebp-28h] +
push dword ptr [ebp+ecx*4-30h]  +
mov [ebp-1Ch] ebx +
mov eax [edi] +
push edi  +
call dword ptr [eax+18h]  +
cmp eax ebx +
jge loc_101E29E  +
inc dword ptr [ebp-28h]  +
jmp loc_101E25D  +
cmp eax ebx +
jl loc_101E2A2  +
mov byte ptr [ebp-0Eh] 1 +
push dword ptr [ebp-34h]  +
xor eax eax +
lea edi [ebp-2Ch] +
stos   +
lea edi [ebp-28h] +
stos   +
call sub_10186AD  +
push eax  +
push dword ptr [ebp-2Ch]  +
push offset aErrorCode  +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018F8F  +
cmp [ebp-0Dh] bl +
jz loc_101E2F4  +
lea eax [ebp-20h] +
push eax  +
push offset asc_1007DFC  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1019007  +
jmp loc_101E2FF  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
push dword ptr [ebp-38h]  +
xor eax eax +
lea edi [ebp-2Ch] +
stos   +
lea edi [ebp-28h] +
stos   +
call sub_10186AD  +
push eax  +
push dword ptr [ebp-2Ch]  +
push offset aErrorContext  +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018F8F  +
cmp [ebp-0Eh] bl +
jz loc_101E351  +
lea eax [ebp-1Ch] +
push eax  +
push offset asc_1007DFC  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1019007  +
jmp loc_101E35C  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
push dword ptr [ebp-1Ch]  +
call sub_1017EDF  +
push dword ptr [ebp-20h]  +
mov [ebp-1Ch] ebx +
call sub_1017EDF  +
push dword ptr [ebp-14h]  +
mov [ebp-20h] ebx +
call sub_1017EDF  +
push dword ptr [ebp-18h]  +
mov [ebp-14h] ebx +
call sub_1017EDF  +
add esp 10h +
lea ecx [ebp-24h] +
mov [ebp-18h] ebx +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
mov eax [ebp+8] +
call __EH_epilog3  +
retn 8  +
***
push 1Ch  +
mov eax offset word_1028C6A +
call __EH_prolog3_GS  +
mov esi [ebp+0Ch] +
xor ebx ebx +
mov [ebp-24h] ebx +
cmp [ebp+8] ebx +
mov [ebp-4] ebx +
jle loc_101E420  +
mov edi ds:_wcsicmp +
mov eax [esi] +
cmp word ptr [eax] 2Fh +
jnz loc_101E420  +
push offset aUpload_0  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101E3EF  +
xor ebx ebx +
inc ebx  +
jmp loc_101E414  +
push offset aUploadReply_0  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101E403  +
push 2  +
pop ebx  +
jmp loc_101E414  +
push offset aDownload_0  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101E47E  +
xor ebx ebx +
dec dword ptr [ebp+8]  +
add esi 4 +
cmp dword ptr [ebp+8] 0 +
jg loc_101E3D4  +
push 1  +
push esi  +
push dword ptr [ebp+8]  +
call sub_1019928  +
call sub_10176AB  +
mov edi dword_102C3B4 +
lea ecx [ebp-24h] +
call sub_101A0FE  +
mov eax [edi] +
lea ecx [ebp-24h] +
push ecx  +
lea ecx [ebp-20h] +
push ecx  +
push ebx  +
push dword ptr [esi]  +
push edi  +
call dword ptr [eax+0Ch]  +
push eax  +
push offset aUnableToCrea_0  +
call sub_101766D  +
cmp byte_102C3AD 0 +
lea eax [ebp-24h] +
jz loc_101E4A2  +
push ecx  +
mov ecx esp +
mov [ebp-28h] esp +
push eax  +
call sub_101A29E  +
push offset hFile  +
call near ptr dword_101E000+3  +
jmp loc_101E4D6  +
push offset aInvalidArgumen  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp-28h] +
push eax  +
mov dword ptr [ebp-28h] 1 +
call _CxxThrowException  +
push offset a__0  +
push ecx  +
mov ecx esp +
mov [ebp-28h] esp +
push eax  +
call sub_101A29E  +
push offset aCreatedJob  +
push offset hFile  +
mov byte ptr [ebp-4] 1 +
call sub_1018F8F  +
push eax  +
mov byte ptr [ebp-4] 0 +
call near ptr dword_101E000+3  +
push eax  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-24h] +
call sub_101A0FE  +
call sub_1027DFF  +
retn 8  +
***
push offset aUnableToGetE_6  +
call sub_101766D  +
push ecx  +
lea eax [ebp+0Ch] +
mov ecx esp +
mov [ebp-10h] esp +
push eax  +
call sub_101A29E  +
push offset hFile  +
call sub_101E0BF  +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 0 +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3_GS  +
xor ebx ebx +
mov [ebp-4] ebx +
mov [ebp-44h] ebx +
mov [ebp-4Ch] ebx +
mov [ebp-6Ch] ebx +
mov [ebp-40h] ebx +
mov [ebp-54h] ebx +
mov [ebp-58h] ebx +
mov [ebp-50h] ebx +
mov [ebp-5Ch] ebx +
mov [ebp-3Ch] ebx +
mov [ebp-34h] ebx +
mov [ebp-30h] ebx +
mov [ebp-7Ch] ebx +
mov [ebp-68h] ebx +
mov [ebp-48h] ebx +
mov [ebp-88h] ebx +
mov [ebp-94h] ebx +
mov [ebp-8Ch] ebx +
mov [ebp-84h] ebx +
mov [ebp-70h] ebx +
mov dword ptr [ebp-0A8h] 1 +
mov [ebp-60h] ebx +
xor eax eax +
lea edi [ebp-20h] +
stos   +
stos   +
stos   +
stos   +
xor eax eax +
lea edi [ebp-78h] +
stos   +
push 6  +
lea edi [ebp-0B4h] +
stos   +
pop ecx  +
lea edi [ebp-0A0h] +
stos   +
push 6  +
lea edi [ebp-0F0h] +
stos   +
pop ecx  +
lea edi [ebp-108h] +
stos   +
lea edi [ebp-9Ch] +
stos   +
lea edi [ebp-0ACh] +
stos   +
lea edi [ebp-0A4h] +
stos   +
lea edi [ebp-90h] +
stos   +
lea edi [ebp-64h] +
stos   +
lea edi [ebp-98h] +
stos   +
mov eax [ebp+8] +
lea edx [ebp-20h] +
push edx  +
mov [ebp-74h] ebx +
mov [ebp-0B0h] ebx +
mov ecx [eax] +
mov byte ptr [ebp-4] 0Fh +
mov [ebp-80h] ebx +
push eax  +
call dword ptr [ecx+28h]  +
push dword ptr [ebp-44h]  +
mov esi [ebp+8] +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp-44h] +
push ecx  +
mov [ebp-44h] ebx +
mov eax [esi] +
push esi  +
call dword ptr [eax+48h]  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-78h] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-0B4h] +
push edx  +
push eax  +
call dword ptr [ecx+38h]  +
push dword ptr [ebp-4Ch]  +
mov esi [ebp+8] +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp-4Ch] +
push ecx  +
mov [ebp-4Ch] ebx +
mov eax [esi] +
push esi  +
call dword ptr [eax+40h]  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-0A0h] +
push edx  +
push eax  +
call dword ptr [ecx+58h]  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-0F0h] +
push edx  +
push eax  +
call dword ptr [ecx+30h]  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-108h] +
push edx  +
push eax  +
call dword ptr [ecx+34h]  +
mov esi [ebp+8] +
lea ecx [ebp-6Ch] +
call sub_101A0FE  +
mov eax [esi] +
lea ecx [ebp-6Ch] +
push ecx  +
push esi  +
call dword ptr [eax+68h]  +
test eax eax +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-9Ch] +
push edx  +
push eax  +
setnl byte ptr [ebp-35h]  +
call dword ptr [ecx+60h]  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-0ACh] +
push edx  +
push eax  +
call dword ptr [ecx+70h]  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-0A4h] +
push edx  +
push eax  +
call dword ptr [ecx+78h]  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-90h] +
push edx  +
push eax  +
call dword ptr [ecx+7Ch]  +
push dword ptr [ebp-40h]  +
mov esi [ebp+8] +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp-40h] +
push ecx  +
mov [ebp-40h] ebx +
mov eax [esi] +
push esi  +
call dword ptr [eax+50h]  +
push dword ptr [ebp-50h]  +
mov esi [ebp+8] +
call sub_1017EDF  +
push dword ptr [ebp-58h]  +
mov [ebp-50h] ebx +
call sub_1017EDF  +
pop ecx  +
pop ecx  +
lea ecx [ebp-50h] +
push ecx  +
lea ecx [ebp-58h] +
push ecx  +
lea ecx [ebp-0C8h] +
push ecx  +
mov [ebp-58h] ebx +
mov eax [esi] +
push esi  +
call dword ptr [eax+84h]  +
mov esi [ebp+8] +
lea ecx [ebp-54h] +
call sub_101A0FE  +
mov eax [esi] +
lea ecx [ebp-54h] +
push ecx  +
push esi  +
call dword ptr [eax+3Ch]  +
test eax eax +
jge loc_101E798  +
lea ecx [ebp-54h] +
call sub_101A0FE  +
lea eax [ebp-5Ch] +
push eax  +
lea eax [ebp+8] +
push eax  +
call sub_101A2F0  +
test eax eax +
jl loc_101E810  +
push dword ptr [ebp-30h]  +
mov esi [ebp-5Ch] +
mov byte ptr [ebp-2Ah] 1 +
call sub_1017EDF  +
push dword ptr [ebp-34h]  +
mov [ebp-30h] ebx +
call sub_1017EDF  +
pop ecx  +
pop ecx  +
lea ecx [ebp-30h] +
push ecx  +
lea ecx [ebp-34h] +
push ecx  +
mov [ebp-34h] ebx +
mov eax [esi] +
push esi  +
call dword ptr [eax+90h]  +
cmp dword ptr [ebp-78h] 2 +
jnz loc_101E813  +
mov eax [ebp-5Ch] +
mov ecx [eax] +
lea edx [ebp-0D8h] +
push edx  +
push eax  +
call dword ptr [ecx+94h]  +
push dword ptr [ebp-3Ch]  +
mov esi [ebp-5Ch] +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp-3Ch] +
push ecx  +
mov [ebp-3Ch] ebx +
mov eax [esi] +
push esi  +
call dword ptr [eax+0A0h]  +
jmp loc_101E813  +
mov [ebp-2Ah] bl +
lea eax [ebp-7Ch] +
push eax  +
lea eax [ebp+8] +
push eax  +
call sub_101A31A  +
test eax eax +
jl loc_101E83A  +
mov eax [ebp-7Ch] +
mov ecx [eax] +
lea edx [ebp-64h] +
push edx  +
push eax  +
call dword ptr [ecx+0B8h]  +
mov byte ptr [ebp-2Ch] 1 +
jmp loc_101E83D  +
mov [ebp-2Ch] bl +
lea eax [ebp-60h] +
push eax  +
lea eax [ebp+8] +
push eax  +
call sub_101A398  +
test eax eax +
jl loc_101E8DB  +
mov eax [ebp-60h] +
mov ecx [eax] +
lea edx [ebp-98h] +
push edx  +
push eax  +
call dword ptr [ecx+0C0h]  +
mov eax [ebp-60h] +
mov ecx [eax] +
lea edx [ebp-74h] +
push edx  +
push eax  +
call dword ptr [ecx+0C4h]  +
mov eax [ebp-60h] +
mov ecx [eax] +
lea edx [ebp-0B0h] +
push edx  +
push eax  +
call dword ptr [ecx+0C8h]  +
call sub_1019BB4  +
mov esi eax +
cmp esi ebx +
jnz loc_101E8C5  +
push 2  +
call ds:ImpersonateSelf  +
test eax eax +
jnz loc_101E8BE  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_101E8B3  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push offset aUnableToCheckS  +
call sub_101766D  +
call sub_1019BB4  +
mov esi eax +
push esi  +
call sub_1019D00  +
push esi  +
mov [ebp-80h] eax +
call ds:CloseHandle  +
mov byte ptr [ebp-2Bh] 1 +
jmp loc_101E8DE  +
mov [ebp-2Bh] bl +
lea eax [ebp-68h] +
push eax  +
lea eax [ebp+8] +
push eax  +
call sub_101A344  +
test eax eax +
jl loc_101E953  +
push dword ptr [ebp-48h]  +
mov esi [ebp-68h] +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp-48h] +
push ecx  +
mov [ebp-48h] ebx +
mov eax [esi] +
push esi  +
call dword ptr [eax+20h]  +
mov eax [ebp-68h] +
mov ecx [eax] +
lea edx [ebp-84h] +
push edx  +
lea edx [ebp-94h] +
push edx  +
lea edx [ebp-88h] +
push edx  +
lea edx [ebp-0BCh] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
lea edx [ebp-0C0h] +
mov [ebp-0A8h] eax +
mov eax [ebp-68h] +
mov ecx [eax] +
push edx  +
push eax  +
mov dword ptr [ebp-8Ch] 14h +
call dword ptr [ecx+28h]  +
mov byte ptr [ebp-29h] 1 +
jmp loc_101E956  +
mov [ebp-29h] bl +
mov ecx [ebp-44h] +
cmp ecx ebx +
jnz loc_101E962  +
mov ecx offset aNull +
push offset asc_1009BF4  +
xor eax eax +
push ecx  +
lea edi [ebp-0B8h] +
stos   +
push dword ptr [ebp-0B8h]  +
lea edi [ebp-0C4h] +
stos   +
push offset aDisplay  +
push dword ptr [ebp-0C4h]  +
lea edi [ebp-28h] +
stos   +
lea edi [ebp-24h] +
stos   +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp-28h]  +
mov esi offset hFile +
push offset aGuid  +
push dword ptr [ebp-24h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1019022  +
push eax  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push dword ptr [ebp-78h]  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aType  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1019FE7  +
push dword ptr [ebp-0B4h]  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aState  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_101A029  +
mov ecx [ebp-4Ch] +
cmp ecx ebx +
jnz loc_101EA4A  +
mov ecx offset aNull +
push offset asc_1002440  +
push ecx  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aOwner  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_10196E1  +
push eax  +
call sub_1018F8F  +
push dword ptr [ebp-0A0h]  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aPriority  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_101A0B6  +
push ebx  +
push dword ptr [ebp-0E0h]  +
xor eax eax +
push offset asc_100950C  +
push ebx  +
push dword ptr [ebp-0DCh]  +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aFiles  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push offset asc_100950C  +
push dword ptr [ebp-0E4h]  +
xor eax eax +
push dword ptr [ebp-0E8h]  +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aBytes  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
cmp dword ptr [ebp-0F0h] 0FFFFFFFFh +
jnz loc_101EB65  +
cmp dword ptr [ebp-0ECh] 0FFFFFFFFh +
jnz loc_101EB65  +
push offset aUnknown_1  +
push esi  +
call sub_1018F8F  +
jmp loc_101EB77  +
push dword ptr [ebp-0ECh]  +
push dword ptr [ebp-0F0h]  +
push esi  +
call sub_1018FC7  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
lea edi [ebp-28h] +
stos   +
lea eax [ebp-108h] +
push eax  +
push dword ptr [ebp-24h]  +
push offset aCreationTime  +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_10195A8  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push offset asc_1002440  +
lea edi [ebp-28h] +
stos   +
lea eax [ebp-100h] +
push eax  +
push dword ptr [ebp-24h]  +
push offset aModificationTi  +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_10195A8  +
push eax  +
call sub_1018F8F  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
lea edi [ebp-28h] +
stos   +
lea eax [ebp-0F8h] +
push eax  +
push dword ptr [ebp-24h]  +
push offset aCompletionTime  +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_10195A8  +
cmp [ebp-2Ch] bl +
jz loc_101EC99  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aAclFlags  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
test byte ptr [ebp-64h] 1 +
jz loc_101EC66  +
push offset aO  +
push esi  +
call sub_1018F8F  +
test byte ptr [ebp-64h] 2 +
jz loc_101EC77  +
push offset aG  +
push esi  +
call sub_1018F8F  +
test byte ptr [ebp-64h] 4 +
jz loc_101EC88  +
push offset aD  +
push esi  +
call sub_1018F8F  +
test byte ptr [ebp-64h] 8 +
jz loc_101EC99  +
push offset aS  +
push esi  +
call sub_1018F8F  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aNotifyInterfac  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
cmp [ebp-35h] bl +
jz loc_101ECE3  +
cmp [ebp-6Ch] ebx +
jz loc_101ECDC  +
push offset aRegistered  +
jmp loc_101ECE8  +
push offset aUnregistered  +
jmp loc_101ECE8  +
push offset aUnavailable  +
push esi  +
call sub_1018F8F  +
push offset asc_1002440  +
push ebx  +
push dword ptr [ebp-9Ch]  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aNotificationFl  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push ebx  +
push dword ptr [ebp-0ACh]  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aRetryDelay  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018FC7  +
push ebx  +
push dword ptr [ebp-0A4h]  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aNoProgressTime  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018FC7  +
push offset asc_1002440  +
push ebx  +
push dword ptr [ebp-90h]  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aErrorCount  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
xor eax eax +
push dword ptr [ebp-0C8h]  +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aProxyUsage  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_101908E  +
push dword ptr [ebp-58h]  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aProxyList  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018F8F  +
push dword ptr [ebp-50h]  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aProxyBypassLis  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018F8F  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
cmp [ebp-54h] ebx +
jz loc_101EE8C  +
push ecx  +
lea eax [ebp-54h] +
mov ecx esp +
mov [ebp-24h] esp +
push eax  +
call sub_101A29E  +
push esi  +
call sub_101E0BF  +
mov ecx [ebp-40h] +
cmp ecx ebx +
jnz loc_101EE98  +
mov ecx offset aNull +
push offset asc_1002440  +
push ecx  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aDescription  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aJobFiles  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push 1  +
push ecx  +
lea eax [ebp+8] +
mov ecx esp +
mov [ebp-24h] esp +
push eax  +
call sub_101A29E  +
call sub_101AA9C  +
cmp [ebp-2Ah] bl +
jz loc_101F04A  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aNotificationCo  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
cmp [ebp-34h] ebx +
jz loc_101EF7E  +
mov edi offset asc_10023A8 +
push edi  +
lea eax [ebp-34h] +
push eax  +
push edi  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1019007  +
push eax  +
call sub_1018F8F  +
cmp [ebp-30h] ebx +
jz loc_101EF89  +
push edi  +
lea eax [ebp-30h] +
push eax  +
push offset asc_100B4D0  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1019007  +
push eax  +
jmp loc_101EF84  +
push offset aNone  +
push esi  +
call sub_1018F8F  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
cmp dword ptr [ebp-78h] 2 +
jnz loc_101F04A  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aReplyFile  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
cmp [ebp-3Ch] ebx +
jnz loc_101EFD1  +
push offset aNone_0  +
jmp loc_101F044  +
push offset asc_100C2AC  +
lea eax [ebp-3Ch] +
push eax  +
push offset asc_10023A8  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1019007  +
push eax  +
call sub_1018F8F  +
push offset asc_100950C  +
push dword ptr [ebp-0CCh]  +
push dword ptr [ebp-0D0h]  +
push esi  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
cmp dword ptr [ebp-0D8h] 0FFFFFFFFh +
jnz loc_101F02D  +
cmp dword ptr [ebp-0D4h] 0FFFFFFFFh +
jnz loc_101F02D  +
push offset aUnknown_1  +
push esi  +
call sub_1018F8F  +
jmp loc_101F03F  +
push dword ptr [ebp-0D4h]  +
push dword ptr [ebp-0D8h]  +
push esi  +
call sub_1018FC7  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
cmp [ebp-2Bh] bl +
jz loc_101F13D  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push offset asc_1002440  +
push dword ptr [ebp-74h]  +
lea edi [ebp-28h] +
stos   +
call sub_101A119  +
push eax  +
push dword ptr [ebp-24h]  +
push offset aOwnerMicIntegr  +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
lea edi [ebp-28h] +
stos   +
mov edi offset asc_1002440 +
push edi  +
push dword ptr [ebp-0B0h]  +
call sub_1019877  +
push eax  +
push dword ptr [ebp-24h]  +
push offset aOwnerElevated?  +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
mov eax [ebp-80h] +
cmp eax [ebp-74h] +
jnb loc_101F12B  +
push offset aThisJobIsReadO  +
push esi  +
call sub_1018F8F  +
push offset a__1  +
push dword ptr [ebp-80h]  +
call sub_101A119  +
push eax  +
push offset MultiByteStr  +
push dword ptr [ebp-74h]  +
call sub_101A119  +
push eax  +
push offset aIntegrityLevel  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018FAB  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018FAB  +
push edi  +
push esi  +
call sub_1018F8F  +
push dword ptr [ebp-98h]  +
call sub_1019AEF  +
cmp [ebp-29h] bl +
jz loc_101F2AF  +
push offset asc_1002440  +
push esi  +
call sub_1018F8F  +
push offset asc_1002440  +
push dword ptr [ebp-48h]  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push dword ptr [ebp-24h]  +
lea edi [ebp-28h] +
push offset aCustomHeaders  +
stos   +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
cmp [ebp-0A8h] ebx +
jnz loc_101F2AF  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
lea edi [ebp-28h] +
stos   +
mov edi offset asc_1002440 +
push edi  +
push dword ptr [ebp-24h]  +
push offset aClientCertific  +
push dword ptr [ebp-28h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018F8F  +
mov eax [ebp-0BCh] +
cmp eax 7 +
ja loc_101F20E  +
jmp ds:off_101F378[eax*4]  +
push offset aCertificateSto  +
jmp loc_101F213  +
push offset aCertificateS_0  +
jmp loc_101F213  +
push offset aCertificateS_1  +
jmp loc_101F213  +
push offset aCertificateS_2  +
jmp loc_101F213  +
push offset aCertificateS_3  +
jmp loc_101F213  +
push offset aCertificateS_4  +
jmp loc_101F213  +
push offset aCertificateS_5  +
jmp loc_101F213  +
push offset aUnknownCertifi  +
push esi  +
call sub_1018F8F  +
push edi  +
push dword ptr [ebp-88h]  +
push offset aCertificateS_6  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
lea eax [ebp-70h] +
push eax  +
push dword ptr [ebp-8Ch]  +
push dword ptr [ebp-94h]  +
call sub_10180EE  +
test al al +
jz loc_101F268  +
push edi  +
push dword ptr [ebp-70h]  +
push offset aCertificateHas  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
jmp loc_101F26E  +
push offset aFailedToConver  +
push esi  +
call sub_1018F8F  +
cmp [ebp-70h] ebx +
jz loc_101F282  +
push dword ptr [ebp-70h]  +
call ds:free  +
pop ecx  +
push offset asc_100C044  +
push dword ptr [ebp-84h]  +
push offset aCertificateSub  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push dword ptr [ebp-0C0h]  +
call sub_10199A2  +
lea ecx [ebp-60h] +
mov byte ptr [ebp-4] 0Eh +
call sub_101A0FE  +
push dword ptr [ebp-48h]  +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp-68h] +
mov [ebp-48h] ebx +
mov byte ptr [ebp-4] 0Ch +
call sub_101A0FE  +
lea ecx [ebp-7Ch] +
mov byte ptr [ebp-4] 0Bh +
call sub_101A0FE  +
push dword ptr [ebp-30h]  +
call sub_1017EDF  +
push dword ptr [ebp-34h]  +
mov [ebp-30h] ebx +
call sub_1017EDF  +
push dword ptr [ebp-3Ch]  +
mov [ebp-34h] ebx +
call sub_1017EDF  +
add esp 0Ch +
lea ecx [ebp-5Ch] +
mov [ebp-3Ch] ebx +
mov byte ptr [ebp-4] 7 +
call sub_101A0FE  +
push dword ptr [ebp-50h]  +
call sub_1017EDF  +
push dword ptr [ebp-58h]  +
mov [ebp-50h] ebx +
call sub_1017EDF  +
pop ecx  +
pop ecx  +
lea ecx [ebp-54h] +
mov [ebp-58h] ebx +
mov byte ptr [ebp-4] 4 +
call sub_101A0FE  +
push dword ptr [ebp-40h]  +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp-6Ch] +
mov [ebp-40h] ebx +
mov byte ptr [ebp-4] 2 +
call sub_101A0FE  +
push dword ptr [ebp-4Ch]  +
call sub_1017EDF  +
push dword ptr [ebp-44h]  +
mov [ebp-4Ch] ebx +
call sub_1017EDF  +
or dword ptr [ebp-4] 0FFFFFFFFh +
pop ecx  +
pop ecx  +
lea ecx [ebp+8] +
mov [ebp-44h] ebx +
call sub_101A0FE  +
call sub_1027DFF  +
retn 4  +
***
push 8  +
mov eax offset byte_1028D49 +
call __EH_prolog3  +
mov eax [ebp+8] +
xor ebx ebx +
inc ebx  +
cmp eax ebx +
jz loc_101F3DD  +
cmp eax 2 +
jz loc_101F3DD  +
cmp eax 3 +
jz loc_101F3DD  +
push offset aInvalidArgumen  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp+8] ebx +
push offset dword_1029268  +
lea eax [ebp+8] +
push eax  +
call _CxxThrowException  +
cmp eax ebx +
mov edi [ebp+0Ch] +
mov byte ptr [ebp-0Dh] 0 +
mov esi ebx +
jle loc_101F407  +
push offset aVerbose  +
push dword ptr [edi+esi*4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101F432  +
inc esi  +
cmp esi [ebp+8] +
mov [ebp-0Dh] bl +
jl loc_101F3EA  +
push dword ptr [edi]  +
lea eax [ebp+0Ch] +
push eax  +
call sub_101A6DC  +
and dword ptr [ebp-4] 0 +
push ecx  +
lea eax [ebp+0Ch] +
mov ecx esp +
mov [ebp+8] esp +
push eax  +
call sub_101A29E  +
cmp byte ptr [ebp-0Dh] 0 +
jz loc_101F44E  +
call sub_101E574  +
jmp loc_101F453  +
push offset aInvalidArgumen  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp-14h] ebx +
push offset dword_1029268  +
lea eax [ebp-14h] +
jmp loc_101F3D7  +
***
call sub_101D3FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3  +
xor ebx ebx +
xor edi edi +
cmp [ebp+0Ch] bl +
jz loc_101F482  +
inc edi  +
mov [ebp-14h] ebx +
mov [ebp-10h] ebx +
mov esi dword_102C3B4 +
lea ecx [ebp-10h] +
mov [ebp-4] ebx +
call sub_101A0FE  +
mov eax [esi] +
lea ecx [ebp-10h] +
push ecx  +
push edi  +
push esi  +
call dword ptr [eax+14h]  +
push eax  +
push offset aUnableToEnumJo  +
call sub_101766D  +
mov [ebp+0Ch] ebx +
mov byte ptr [ebp-4] 1 +
jmp loc_101F4EA  +
push ecx  +
lea eax [ebp+0Ch] +
mov ecx esp +
mov [ebp-18h] esp +
push eax  +
call sub_101A29E  +
cmp [ebp+8] bl +
jz loc_101F4E2  +
call sub_101E574  +
push offset asc_1002440  +
push offset hFile  +
call sub_1018F8F  +
jmp loc_101F4E7  +
call sub_101D3FE  +
inc dword ptr [ebp-14h]  +
mov esi [ebp-10h] +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
mov eax [esi] +
push ebx  +
lea ecx [ebp+0Ch] +
push ecx  +
push 1  +
push esi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jz loc_101F4B8  +
lea ecx [ebp+0Ch] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_101A0FE  +
mov eax [ebp-14h] +
call __EH_epilog3  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
cmp dword ptr [ebp+8] 3 +
ja loc_101F5F1  +
push ebx  +
xor ebx ebx +
cmp [ebp+8] ebx +
mov byte ptr [ebp-8] 0 +
mov byte ptr [ebp-4] 0 +
jle loc_101F58C  +
push esi  +
push edi  +
mov edi ds:_wcsicmp +
mov eax [ebp+0Ch] +
lea esi [eax+ebx*4] +
push offset aVerbose  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101F571  +
mov byte ptr [ebp-8] 1 +
jmp loc_101F584  +
push offset aAllusers  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101F5CD  +
mov byte ptr [ebp-4] 1 +
inc ebx  +
cmp ebx [ebp+8] +
jl loc_101F556  +
pop edi  +
pop esi  +
call sub_10176AB  +
push dword ptr [ebp-4]  +
push dword ptr [ebp-8]  +
call sub_101F46C  +
cmp byte_102C3AD 0 +
pop ebx  +
jnz locret_101F5C9  +
push offset aJobS_  +
push 0  +
push eax  +
push offset aListed  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
leave   +
retn 8  +
***
push offset aInvalidArgumen  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+8] +
push eax  +
mov dword ptr [ebp+8] 1 +
call _CxxThrowException  +
push offset aInvalidNumberO  +
jmp loc_101F5D2  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov dword ptr [ebp-4] 5 +
mov byte ptr [ebp-8] 0 +
call sub_1017F37  +
test al al +
jnz loc_101F63F  +
push offset aMonitorWillOnl  +
push offset dword_10363C8  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+8] +
push eax  +
mov dword ptr [ebp+8] 1 +
call _CxxThrowException  +
cmp byte_102C3AE 0 +
jnz loc_101F654  +
mov byte_102C058 0 +
call sub_1018A08  +
cmp dword ptr [ebp+8] 4 +
ja loc_101F713  +
xor esi esi +
cmp [ebp+8] esi +
jle loc_101F6AB  +
mov ebx [ebp+0Ch] +
mov edi ds:_wcsicmp +
push offset aAllusers  +
push dword ptr [ebx+esi*4]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101F684  +
mov byte ptr [ebp-8] 1 +
jmp loc_101F6A5  +
push offset aRefresh  +
push dword ptr [ebx+esi*4]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101F70C  +
inc esi  +
cmp esi [ebp+8] +
jge loc_101F6FD  +
push dword ptr [ebx+esi*4]  +
call sub_1019134  +
mov [ebp-4] eax +
inc esi  +
cmp esi [ebp+8] +
jl loc_101F66E  +
call sub_10176AB  +
call sub_1018B37  +
push offset aSecondRefresh  +
push 0  +
push dword ptr [ebp-4]  +
push offset aMonitoringBack  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push dword ptr [ebp-8]  +
push 0  +
call sub_101F46C  +
mov eax [ebp-4] +
imul eax eax +
push 1  +
push eax  +
call ds:SleepEx  +
call sub_1017F04  +
jmp loc_101F6B0  +
***
push offset aRefreshIsMissi  +
push offset hFile  +
jmp loc_101F625  +
***
push offset aInvalidArgumen  +
jmp loc_101F702  +
***
push offset aInvalidNumberO  +
jmp loc_101F702  +
***
push 10h  +
mov eax offset byte_1028DB1 +
call __EH_prolog3  +
xor ebx ebx +
xor esi esi +
cmp [ebp+8] ebx +
mov [ebp-0Dh] bl +
jle loc_101F758  +
mov edi [ebp+0Ch] +
push offset aAllusers  +
push dword ptr [edi+esi*4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_101F7BE  +
inc esi  +
cmp esi [ebp+8] +
mov byte ptr [ebp-0Dh] 1 +
jl loc_101F73A  +
call sub_10176AB  +
mov [ebp+8] ebx +
mov [ebp-18h] ebx +
mov [ebp-14h] ebx +
mov esi dword_102C3B4 +
lea ecx [ebp-14h] +
mov [ebp-4] ebx +
call sub_101A0FE  +
mov eax [esi] +
lea ecx [ebp-14h] +
push ecx  +
xor ecx ecx +
cmp [ebp-0Dh] bl +
setnz cl  +
push ecx  +
push esi  +
call dword ptr [eax+14h]  +
push eax  +
push offset aUnableToEnumJo  +
call sub_101766D  +
mov [ebp+0Ch] ebx +
mov esi [ebp-14h] +
lea ecx [ebp+0Ch] +
mov byte ptr [ebp-4] 1 +
call sub_101A0FE  +
mov eax [esi] +
push ebx  +
lea ecx [ebp+0Ch] +
push ecx  +
push 1  +
push esi  +
call dword ptr [eax+0Ch]  +
mov esi offset hFile +
jmp loc_101F873  +
push offset a__3  +
push dword ptr [edi+esi*4]  +
push offset aUnknownOption  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+8] +
push eax  +
mov dword ptr [ebp+8] 1 +
call _CxxThrowException  +
mov eax [ebp+0Ch] +
mov ecx [eax] +
inc dword ptr [ebp+8]  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
lea eax [ebp+0Ch] +
jl loc_101F82B  +
push offset aCanceled_  +
push ecx  +
mov ecx esp +
mov [ebp-1Ch] esp +
push eax  +
call sub_101A29E  +
push esi  +
call near ptr dword_101E000+3  +
push eax  +
call sub_1018F8F  +
inc dword ptr [ebp-18h]  +
jmp loc_101F85B  +
push offset a__0  +
push ecx  +
mov ecx esp +
mov [ebp-1Ch] esp +
push eax  +
call sub_101A29E  +
push offset aUnableToCanc_0  +
push esi  +
mov byte ptr [ebp-4] 2 +
call sub_1018F8F  +
push eax  +
mov byte ptr [ebp-4] 1 +
call near ptr dword_101E000+3  +
push eax  +
call sub_1018F8F  +
mov edi [ebp-14h] +
lea ecx [ebp+0Ch] +
call sub_101A0FE  +
mov eax [edi] +
push ebx  +
lea ecx [ebp+0Ch] +
push ecx  +
push 1  +
push edi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jz loc_101F7F6  +
push offset aJobsCanceled_  +
push ebx  +
push dword ptr [ebp+8]  +
push offset aOutOf  +
push ebx  +
push dword ptr [ebp-18h]  +
push esi  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
lea ecx [ebp+0Ch] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
jge near ptr loc_101F8FC+1  +
jmp fword ptr [eax+5Ch]  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
lea eax [esi+4] +
push eax  +
call ds:InterlockedDecrement  +
mov edi eax +
test edi edi +
jnz loc_101F976  +
test esi esi +
jz loc_101F976  +
push 1  +
mov ecx esi +
call sub_101DFDD  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
cmp byte ptr [esi+48h] 0 +
mov byte ptr [esi+42h] 0 +
jnz loc_101FE37  +
call sub_1017F37  +
mov ebx offset hFile +
test al al +
jz loc_101FC54  +
cmp byte_102C3AD 0 +
jnz loc_101FC54  +
and dword ptr [ebp-10h] 0 +
mov eax [esi+8] +
mov ecx [eax] +
and dword ptr [ebp-4] 0 +
lea edx [ebp-24h] +
push edx  +
push eax  +
call dword ptr [ecx+2Ch]  +
push eax  +
push offset aUnableToGetJ_0  +
call sub_101766D  +
mov eax [esi+8] +
mov edx [eax] +
lea ecx [esi+10h] +
push ecx  +
push eax  +
call dword ptr [edx+30h]  +
push eax  +
push offset aUnableToGetJ_1  +
call sub_101766D  +
mov eax [esi+8] +
mov ecx [eax] +
lea edx [ebp-28h] +
push edx  +
push eax  +
call dword ptr [ecx+58h]  +
push eax  +
push offset aUnableToGetJ_2  +
call sub_101766D  +
push dword ptr [ebp-10h]  +
mov edi [esi+8] +
call sub_1017EDF  +
and dword ptr [ebp-10h] 0 +
mov eax [edi] +
pop ecx  +
lea ecx [ebp-10h] +
push ecx  +
push edi  +
call dword ptr [eax+48h]  +
push eax  +
push offset aUnableToGetDis  +
call sub_101766D  +
call sub_1018B37  +
xor eax eax +
lea edi [ebp-14h] +
stos   +
push offset asc_10023A8  +
lea edi [ebp-1Ch] +
stos   +
lea eax [ebp-10h] +
push eax  +
push dword ptr [ebp-14h]  +
push offset aDisplay_0  +
push dword ptr [ebp-1Ch]  +
push ebx  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1019007  +
push eax  +
call sub_1018F8F  +
push dword ptr [ebp-24h]  +
xor eax eax +
lea edi [ebp-1Ch] +
stos   +
push dword ptr [ebp-1Ch]  +
lea edi [ebp-14h] +
push offset aType_0  +
stos   +
push dword ptr [ebp-14h]  +
push ebx  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1019FE7  +
push offset asc_1002440  +
push dword ptr [esi+0Ch]  +
xor eax eax +
lea edi [ebp-1Ch] +
stos   +
push dword ptr [ebp-1Ch]  +
lea edi [ebp-14h] +
push offset aState  +
stos   +
push dword ptr [ebp-14h]  +
push ebx  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_101A029  +
push eax  +
call sub_1018F8F  +
push dword ptr [ebp-28h]  +
xor eax eax +
lea edi [ebp-1Ch] +
stos   +
push dword ptr [ebp-1Ch]  +
lea edi [ebp-14h] +
push offset aPriority  +
stos   +
push dword ptr [ebp-14h]  +
push ebx  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_101A0B6  +
xor eax eax +
push eax  +
push dword ptr [esi+20h]  +
lea edi [ebp-1Ch] +
push offset asc_100950C  +
push eax  +
push dword ptr [esi+24h]  +
stos   +
push dword ptr [ebp-1Ch]  +
lea edi [ebp-14h] +
push offset aFiles  +
stos   +
push dword ptr [ebp-14h]  +
push ebx  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push offset asc_100950C  +
push dword ptr [esi+1Ch]  +
xor eax eax +
push dword ptr [esi+18h]  +
lea edi [ebp-1Ch] +
stos   +
push dword ptr [ebp-1Ch]  +
lea edi [ebp-14h] +
push offset aBytes  +
stos   +
push dword ptr [ebp-14h]  +
push ebx  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
mov eax [esi+10h] +
mov ecx [esi+14h] +
cmp eax 0FFFFFFFFh +
jnz loc_101FBB4  +
cmp ecx eax +
jnz loc_101FBB4  +
push offset aUnknown_1  +
push ebx  +
call sub_1018F8F  +
xor edi edi +
jmp loc_101FC36  +
push ecx  +
push eax  +
push ebx  +
call sub_1018FC7  +
mov ecx [esi+18h] +
mov eax [esi+1Ch] +
and dword ptr [ebp-20h] 0 +
mov edx [esi+14h] +
mov edi [esi+10h] +
mov [ebp-18h] ecx +
mov [ebp-1Ch] eax +
mov ecx 7FFFFFFFh +
and eax ecx +
mov [ebp-14h] eax +
fild  qword ptr [ebp-18h] +
mov eax 80000000h +
and [ebp-1Ch] eax +
fild  qword ptr [ebp-20h] +
mov [ebp-1Ch] edx +
and [ebp-1Ch] eax +
fchs   +
mov [ebp-18h] edi +
faddp st(1) st +
and edx ecx +
mov [ebp-14h] edx +
fild  qword ptr [ebp-18h] +
xor edi edi +
mov [ebp-20h] edi +
fild  qword ptr [ebp-20h] +
fchs   +
faddp st(1) st +
fdivp st(1) st +
fmul  ds:dbl_100C9A8 +
call _ftol2  +
push offset asc_100C99C  +
push edi  +
push eax  +
push offset asc_100C994  +
push ebx  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
mov ecx esi +
call sub_1019E2C  +
push edi  +
mov ecx ebx +
call loc_1018C57  +
push dword ptr [ebp-10h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call sub_1017EDF  +
pop ecx  +
jmp loc_101FC56  +
xor edi edi +
mov eax [esi+0Ch] +
sub eax 4 +
jz loc_101FD7A  +
dec eax  +
jz loc_101FD04  +
dec eax  +
jz loc_101FCC2  +
dec eax  +
dec eax  +
jnz loc_101FE37  +
cmp byte_102C3AD al +
jnz loc_101FCA5  +
call sub_1017F37  +
test al al +
jz loc_101FC9A  +
call sub_101804E  +
test ax ax +
jz loc_101FC9A  +
push offset asc_1002440  +
push ebx  +
call sub_1018F8F  +
push offset aTransferCancel  +
push ebx  +
call sub_1018F8F  +
push edi  +
push edi  +
push 401h  +
mov byte ptr [esi+48h] 1 +
call ds:GetCurrentThreadId  +
push eax  +
call ds:PostThreadMessageW  +
jmp loc_101FE37  +
mov eax [esi+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+24h]  +
push eax  +
push offset aUnableToComple  +
call sub_101766D  +
cmp byte_102C3AD 0 +
jnz loc_101FCA5  +
call sub_1017F37  +
test al al +
jz loc_101FCFD  +
call sub_101804E  +
test ax ax +
jz loc_101FCFD  +
push offset asc_1002440  +
push ebx  +
call sub_1018F8F  +
push offset aTransferComple  +
jmp loc_101FC9F  +
call sub_1017F37  +
test al al +
jz loc_101FE37  +
cmp byte_102C3AD 0 +
jnz loc_101FE37  +
mov [ebp-14h] edi +
mov esi [esi+8] +
lea ecx [ebp-14h] +
mov dword ptr [ebp-4] 2 +
call sub_101A0FE  +
mov eax [esi] +
lea ecx [ebp-14h] +
push ecx  +
push esi  +
call dword ptr [eax+3Ch]  +
push eax  +
push offset aUnableToGetJob  +
call sub_101766D  +
call sub_101804E  +
test ax ax +
jz loc_101FD5D  +
push offset asc_1002440  +
push ebx  +
call sub_1018F8F  +
push ecx  +
lea eax [ebp-14h] +
mov ecx esp +
mov [ebp-28h] esp +
push eax  +
call sub_101A29E  +
push ebx  +
call sub_101E0BF  +
lea ecx [ebp-14h] +
jmp loc_101FE2E  +
mov byte ptr [esi+48h] 1 +
mov [ebp-10h] edi +
mov edi [esi+8] +
lea ecx [ebp-10h] +
mov dword ptr [ebp-4] 1 +
call sub_101A0FE  +
mov eax [edi] +
lea ecx [ebp-10h] +
push ecx  +
push edi  +
call dword ptr [eax+3Ch]  +
push eax  +
push offset aUnableToGetJob  +
call sub_101766D  +
mov eax [ebp-10h] +
mov ecx [eax] +
lea edx [ebp-28h] +
push edx  +
lea edx [ebp-24h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
push eax  +
push offset aUnableToGetE_5  +
call sub_101766D  +
mov esi [esi+8] +
mov eax [esi] +
push esi  +
call dword ptr [eax+20h]  +
cmp byte_102C3AD 0 +
jnz loc_101FDFF  +
call sub_1017F37  +
test al al +
jz loc_101FDF4  +
call sub_101804E  +
test ax ax +
jz loc_101FDF4  +
push offset asc_1002440  +
push ebx  +
call sub_1018F8F  +
push offset aUnableToComp_0  +
push ebx  +
call sub_1018F8F  +
push ecx  +
lea eax [ebp-10h] +
mov ecx esp +
mov [ebp-1Ch] esp +
push eax  +
call sub_101A29E  +
push ebx  +
call sub_101E0BF  +
push dword ptr [ebp-28h]  +
push 1  +
push 402h  +
call ds:GetCurrentThreadId  +
push eax  +
call ds:PostThreadMessageW  +
lea ecx [ebp-10h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
call sub_101A0FE  +
call __EH_epilog3  +
retn   +
***
push eax  +
push offset aUnableToGetJ_6  +
call sub_101766D  +
cmp ebx [edi] +
jz loc_101FE8B  +
xor ebx ebx +
cmp [esi+41h] bl +
jz loc_101FE81  +
push dword ptr [esi+44h]  +
push ebx  +
call ds:KillTimer  +
mov [esi+44h] ebx +
mov [esi+42h] bl +
mov [esi+41h] bl +
pop edi  +
mov ecx esi +
pop esi  +
pop ebx  +
jmp sub_101F983  +
***
xor ebx ebx +
cmp [esi+41h] bl +
jnz loc_101FEA9  +
push ebx  +
push 3E8h  +
push ebx  +
push ebx  +
call ds:SetTimer  +
mov [esi+44h] eax +
mov byte ptr [esi+41h] 1 +
jmp loc_101FE81  +
***
pop edi  +
mov byte ptr [esi+42h] 1 +
pop esi  +
pop ebx  +
retn   +
***
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
cmp [esi+41h] bl +
jz loc_101FED6  +
push dword ptr [esi+44h]  +
push ebx  +
call ds:KillTimer  +
mov [esi+44h] ebx +
mov [esi+42h] bl +
mov [esi+41h] bl +
mov eax [esi+8] +
mov ecx [eax] +
lea edx [esi+0Ch] +
push edx  +
push eax  +
call dword ptr [ecx+38h]  +
push eax  +
push offset aUnableToGetJ_6  +
call sub_101766D  +
mov ecx esi +
pop esi  +
pop ebx  +
jmp sub_101F983  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+uIDEvent] +
push esi  +
mov esi ecx +
cmp eax [esi+44h] +
jnz loc_101FF2D  +
push ebx  +
push eax  +
xor ebx ebx +
push ebx  +
call ds:KillTimer  +
mov [esi+44h] ebx +
mov [esi+41h] bl +
cmp [esi+42h] bl +
jz loc_101FF2C  +
mov ecx esi +
mov [esi+42h] bl +
call sub_101F983  +
pop ebx  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 30h +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 0FFFFFFF6h  +
mov [ebp-0Ch] ecx +
mov [ebp-4] ebx +
mov [ebp-8] ebx +
xor edi edi +
call ds:GetStdHandle  +
mov esi eax +
cmp byte_102C3AD bl +
jnz loc_101FF7C  +
call sub_1017FA3  +
test al al +
jz loc_101FF7C  +
call sub_1018842  +
mov dword ptr [ebp-4] 1 +
mov [ebp-8] esi +
lea edi [ebp-8] +
mov esi ds:PeekMessageW +
push 2  +
push 4FFh  +
push 0FFFFFFFFh  +
push edi  +
push dword ptr [ebp-4]  +
call ds:MsgWaitForMultipleObjectsEx  +
cmp eax 0C0h +
jnz loc_101FFA3  +
call sub_1017F04  +
jmp loc_101FF82  +
***
cmp [ebp-4] eax +
jz loc_101FFEB  +
cmp eax ebx +
jnz loc_1020015  +
mov ecx [ebp-0Ch] +
call sub_101A195  +
jmp loc_101FF82  +
***
mov eax [ebp-2Ch] +
sub eax 113h +
jz loc_101FFE0  +
sub eax 2EEh +
jz loc_1020036  +
dec eax  +
jz loc_101FFFC  +
lea eax [ebp-30h] +
push eax  +
call ds:TranslateMessage  +
lea eax [ebp-30h] +
push eax  +
call ds:DispatchMessageW  +
jmp loc_101FFEB  +
push dword ptr [ebp-28h]  +
mov ecx [ebp-0Ch] +
call sub_101FEFC  +
push 1  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp-30h] +
push eax  +
call esi  +
test eax eax +
jnz loc_101FFB6  +
jmp loc_101FF82  +
***
mov eax [ebp-24h] +
cmp [ebp-28h] ebx +
jz loc_1020029  +
mov [ebp-10h] eax +
push offset dword_1029EB4  +
lea eax [ebp-10h] +
push eax  +
call _CxxThrowException  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1020029  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp-14h] eax +
push offset dword_1029268  +
lea eax [ebp-14h] +
jmp loc_102000F  +
***
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
push eax  +
call ds:PostThreadMessageW  +
mov eax offset loc_1020079 +
retn   +
***
mov eax 80004005h +
call __EH_epilog3  +
retn 8  +
***
add bh bh +
adc eax offset GetCurrentThreadId +
push eax  +
call ds:PostThreadMessageW  +
mov eax offset loc_10200C4 +
retn   +
***
mov eax 80004005h +
call __EH_epilog3  +
retn 0Ch  +
***
call ds:GetCurrentThreadId  +
push eax  +
call ds:PostThreadMessageW  +
mov eax offset loc_102010F +
retn   +
***
mov eax 80004005h +
call __EH_epilog3  +
retn 0Ch  +
***
push 5Ch  +
mov eax offset byte_1028EBB +
call __EH_prolog3_catch_GS  +
mov esi [ebp+0Ch] +
call sub_1017F37  +
test al al +
jz loc_102014E  +
cmp byte_102C3AE 0 +
jnz loc_102014E  +
mov byte_102C058 0 +
call sub_1018A08  +
mov ebx [ebp+8] +
xor edi edi +
inc edi  +
cmp ebx edi +
jge loc_1020178  +
push offset aInvalidNumberO  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp-5Ch] edi +
push offset dword_1029268  +
lea eax [ebp-5Ch] +
push eax  +
call _CxxThrowException  +
mov eax [esi] +
and dword ptr [ebp-34h] 0 +
and dword ptr [ebp-30h] 0 +
dec ebx  +
add esi 4 +
mov [ebp-38h] eax +
mov dword ptr [ebp-3Ch] 2 +
test ebx ebx +
jle loc_1020287  +
mov edi ds:_wcsicmp +
mov eax [esi] +
cmp word ptr [eax] 2Fh +
jnz loc_1020284  +
push offset aUpload_0  +
push eax  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10201C4  +
mov dword ptr [ebp-34h] 1 +
jmp loc_1020278  +
push offset aDownload_0  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10201DB  +
and [ebp-34h] eax +
jmp loc_1020278  +
push offset aPriority_0  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1020203  +
dec ebx  +
add esi 4 +
cmp ebx 1 +
jl loc_10202AF  +
push dword ptr [esi]  +
call loc_10198A4  +
mov [ebp-3Ch] eax +
jmp loc_1020278  +
push offset aAclflags  +
push dword ptr [esi]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1020318  +
dec ebx  +
add esi 4 +
cmp ebx 1 +
jl loc_10202D2  +
mov ecx [esi] +
jmp loc_1020270  +
movzx eax ax +
inc ecx  +
inc ecx  +
cmp eax 64h +
jg loc_102024D  +
jz loc_1020247  +
cmp eax 44h +
jz loc_1020247  +
cmp eax 47h +
jz loc_102026C  +
cmp eax 4Fh +
jz loc_1020266  +
cmp eax 53h +
jmp loc_102025A  +
or dword ptr [ebp-30h] 4 +
jmp loc_1020270  +
cmp eax 67h +
jz loc_102026C  +
cmp eax 6Fh +
jz loc_1020266  +
cmp eax 73h +
jnz loc_10202F5  +
or dword ptr [ebp-30h] 8 +
jmp loc_1020270  +
or dword ptr [ebp-30h] 1 +
jmp loc_1020270  +
or dword ptr [ebp-30h] 2 +
movzx eax word ptr [ecx] +
test ax ax +
jnz loc_1020227  +
dec ebx  +
add esi 4 +
test ebx ebx +
jg loc_102019E  +
xor edi edi +
inc edi  +
cmp ebx 2 +
jge loc_102033B  +
push offset aInvalidArgumen  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp-44h] edi +
push offset dword_1029268  +
lea eax [ebp-44h] +
jmp loc_1020172  +
***
push offset aInvalidNumberO  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp-40h] 1 +
push offset dword_1029268  +
lea eax [ebp-40h] +
jmp loc_1020172  +
***
push offset aInvalidNumberO  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp-48h] 1 +
push offset dword_1029268  +
lea eax [ebp-48h] +
jmp loc_1020172  +
***
push offset aInvalidAclProp  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp-58h] 1 +
push offset dword_1029268  +
lea eax [ebp-58h] +
jmp loc_1020172  +
***
push offset aInvalidArgumen  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp-50h] 1 +
push offset dword_1029268  +
lea eax [ebp-50h] +
jmp loc_1020172  +
***
mov eax ebx +
and eax 80000001h +
jns loc_1020349  +
dec eax  +
or eax 0FFFFFFFEh +
inc eax  +
test eax eax +
jle loc_102036C  +
push offset aInvalidArgumen  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp-4Ch] edi +
push offset dword_1029268  +
lea eax [ebp-4Ch] +
jmp loc_1020172  +
***
cmp [ebp-34h] edi +
jnz loc_1020395  +
cmp ebx 2 +
jz loc_1020395  +
push offset aOnlyOneFileIsP  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp-54h] edi +
push offset dword_1029268  +
lea eax [ebp-54h] +
jmp loc_1020172  +
***
call sub_10176AB  +
and dword ptr [ebp-28h] 0 +
and dword ptr [ebp-4] 0 +
mov edi dword_102C3B4 +
lea ecx [ebp-28h] +
call sub_101A0FE  +
mov eax [edi] +
lea ecx [ebp-28h] +
push ecx  +
lea ecx [ebp-24h] +
push ecx  +
push dword ptr [ebp-34h]  +
push dword ptr [ebp-38h]  +
push edi  +
call dword ptr [eax+0Ch]  +
push eax  +
push offset aUnableToCrea_1  +
call sub_101766D  +
push 50h  +
call sub_1019184  +
pop ecx  +
mov [ebp-38h] eax +
mov byte ptr [ebp-4] 1 +
test eax eax +
jz loc_10203FB  +
push ecx  +
lea eax [ebp-28h] +
mov ecx esp +
mov [ebp-34h] esp +
push eax  +
call sub_101A29E  +
mov ecx [ebp-38h] +
call near ptr dword_101DF4C+3  +
jmp loc_10203FD  +
xor eax eax +
push eax  +
lea ecx [ebp-38h] +
mov byte ptr [ebp-4] 0 +
call near ptr byte_101A2CC+1  +
mov edi [ebp-38h] +
mov eax [edi] +
push edi  +
mov byte ptr [ebp-4] 2 +
call dword ptr [eax+8]  +
mov eax [ebp-28h] +
push dword ptr [ebp-3Ch]  +
mov ecx [eax] +
push eax  +
mov byte ptr [ebp-29h] 0 +
mov byte ptr [ebp-4] 3 +
call dword ptr [ecx+54h]  +
push eax  +
push offset aUnableToSetJob  +
call sub_101766D  +
cmp ebx 1 +
jle loc_102045B  +
push dword ptr [esi+4]  +
mov eax [ebp-28h] +
push dword ptr [esi]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
push eax  +
push offset aUnableToAddF_2  +
call sub_101766D  +
add esi 8 +
dec ebx  +
dec ebx  +
jmp loc_1020436  +
***
cmp dword ptr [ebp-30h] 0 +
jz loc_10204A7  +
and dword ptr [ebp-34h] 0 +
lea eax [ebp-34h] +
push eax  +
lea eax [ebp-28h] +
push eax  +
mov byte ptr [ebp-4] 4 +
call sub_101A31A  +
push eax  +
push offset aUnableToGetT_0  +
call sub_101766D  +
mov eax [ebp-34h] +
push dword ptr [ebp-30h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0B4h]  +
push eax  +
push offset aUnableToSetAcl  +
call sub_101766D  +
lea ecx [ebp-34h] +
mov byte ptr [ebp-4] 3 +
call sub_101A0FE  +
mov eax [ebp-28h] +
mov ecx [eax] +
push 0Bh  +
push eax  +
call dword ptr [ecx+5Ch]  +
push eax  +
push offset aUnableToSetN_2  +
call sub_101766D  +
mov eax [ebp-28h] +
mov ecx [eax] +
push edi  +
push eax  +
call dword ptr [ecx+64h]  +
push eax  +
push offset aUnableToSetNot  +
call sub_101766D  +
mov eax [ebp-28h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
push eax  +
push offset aUnableToResume  +
call sub_101766D  +
mov ecx edi +
mov byte ptr [ebp-29h] 1 +
call near ptr dword_101FF34+3  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-38h] +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-28h] +
call sub_101A0FE  +
call sub_1027E13  +
retn 8  +
***
push 0  +
push 0  +
jmp loc_1020173  +
***
mov eax [ebp-28h] +
mov ecx [eax] +
mov [ebp-10h] esp +
push 0  +
push eax  +
call dword ptr [ecx+64h]  +
mov eax [ebp-28h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
cmp byte ptr [ebp-29h] 0 +
jz loc_1020511  +
cmp byte_102C3AD 0 +
jnz loc_1020511  +
push 0  +
mov ecx offset hFile +
mov byte ptr [ebp-4] 6 +
call loc_1018C57  +
mov eax [ebp-38h] +
push 0  +
push dword ptr [ebp-28h]  +
mov byte_102C3BC 0 +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
mov dword ptr [ebp-4] 5 +
jmp loc_1020511  +
***
mov dword ptr [ebp-4] 5 +
mov eax offset loc_1020511 +
retn   +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_1020599  +
cmp [esi] al +
jz loc_1020595  +
inc esi  +
dec edx  +
jnz loc_102058D  +
test edx edx +
jnz loc_102059E  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_10205AF  +
test eax eax +
jl loc_10205AC  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
mov ebx eax +
mov esi edx +
xor eax eax +
xor edi edi +
test esi esi +
jz loc_10205E5  +
cmp [ebp+arg_4] eax +
jz loc_10205E1  +
mov dl [ebx] +
test dl dl +
jz loc_10205E1  +
mov [ecx] dl +
inc ecx  +
inc ebx  +
dec esi  +
dec [ebp+arg_4]  +
inc edi  +
test esi esi +
jnz loc_10205C9  +
test esi esi +
jnz loc_10205EC  +
dec ecx  +
dec edi  +
mov eax 8007007Ah +
mov byte ptr [ecx] 0 +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10205F8  +
mov [ecx] edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+3Ch] +
test eax eax +
jnz loc_1020613  +
inc eax  +
pop esi  +
retn   +
cmp dword ptr [esi+40h] 4 +
jl loc_102061D  +
xor eax eax +
pop esi  +
retn   +
push edi  +
push 3E8h  +
xor edi edi +
push eax  +
inc edi  +
call ds:WaitForSingleObject  +
test eax eax +
jz loc_1020636  +
xor edi edi +
inc dword ptr [esi+40h]  +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov eax [ecx+3Ch] +
test eax eax +
jz locret_102064E  +
push eax  +
call ds:ReleaseMutex  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
push edi  +
push 4  +
pop esi  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
xor edi edi +
push edi  +
push offset SubKey  +
push 80000002h  +
mov [ebp+Type] esi +
mov [ebp+cbData] esi +
mov [ebp+hKey] edi +
mov dword ptr [ebp+Data] edi +
call ds:RegOpenKeyExA  +
test eax eax +
jnz loc_10206B9  +
push ebx  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push edi  +
push offset ValueName  +
push [ebp+hKey]  +
call ds:RegQueryValueExA  +
push [ebp+hKey]  +
mov ebx eax +
call ds:RegCloseKey  +
cmp ebx edi +
pop ebx  +
jz loc_10206C1  +
call ds:GetLastError  +
jmp loc_10206DE  +
cmp [ebp+Type] esi +
jz loc_10206CB  +
push 0Dh  +
pop eax  +
jmp loc_10206DE  +
cmp dword ptr [ebp+Data] edi +
jnz loc_10206DC  +
push edi  +
call ds:SetLastError  +
xor eax eax +
inc eax  +
jmp loc_10206E7  +
mov eax edi +
push eax  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+10h] +
push edi  +
xor edi edi +
mov dword ptr [esi+4] 1 +
mov [esi+20h] edi +
cmp eax edi +
jz loc_1020713  +
push eax  +
call sub_1017EF4  +
pop ecx  +
mov [esi+10h] edi +
mov eax [esi+14h] +
cmp eax edi +
jz loc_1020724  +
push eax  +
call sub_1017EF4  +
pop ecx  +
mov [esi+14h] edi +
mov eax [esi+18h] +
cmp eax edi +
jz loc_1020735  +
push eax  +
call sub_1017EF4  +
pop ecx  +
mov [esi+18h] edi +
mov eax [esi+1Ch] +
cmp eax edi +
jz loc_1020746  +
push eax  +
call sub_1017EF4  +
pop ecx  +
mov [esi+1Ch] edi +
mov eax [esi+24h] +
cmp eax edi +
jz loc_1020757  +
push eax  +
call sub_1017EF4  +
pop ecx  +
mov [esi+24h] edi +
mov eax [esi+38h] +
cmp eax edi +
jz loc_1020768  +
push eax  +
call sub_1017EF4  +
pop ecx  +
mov [esi+38h] edi +
mov [esi+34h] edi +
mov [esi+28h] edi +
lea edi [esi+2Ch] +
xor eax eax +
stos   +
stos   +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
mov eax [esi+8] +
test eax eax +
jz loc_1020794  +
push eax  +
call sub_1017EF4  +
and dword ptr [esi+8] 0 +
pop ecx  +
mov eax [esi+4] +
test eax eax +
jz loc_10207A6  +
push eax  +
call ds:LocalFree  +
and dword ptr [esi+4] 0 +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+arg_4] +
xor ebx ebx +
test edi edi +
jnz loc_10207C4  +
mov ebx 0A0h +
jmp loc_102081C  +
push esi  +
mov esi ds:_stricmp +
push offset aLocalsystem  +
push [ebp+arg_0]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10207E3  +
mov dword ptr [edi] 12h +
jmp loc_102081B  +
push offset aNetworkservice  +
push [ebp+arg_0]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10207FB  +
mov dword ptr [edi] 14h +
jmp loc_102081B  +
push offset aLocalservice  +
push [ebp+arg_0]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1020813  +
mov dword ptr [edi] 13h +
jmp loc_102081B  +
and dword ptr [edi] 0 +
mov ebx 0A0h +
pop esi  +
push ebx  +
call ds:SetLastError  +
xor eax eax +
test ebx ebx +
pop edi  +
setz al  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
push esi  +
push dword ptr [esi+8]  +
mov [ebp+dwErrCode] ebx +
mov [ebp+pSid] ebx +
mov [ebp+pIdentifierAuthority.Value] bl +
mov [ebp+pIdentifierAuthority.Value+1] bl +
mov [ebp+pIdentifierAuthority.Value+2] bl +
mov [ebp+pIdentifierAuthority.Value+3] bl +
mov [ebp+pIdentifierAuthority.Value+4] bl +
mov [ebp+pIdentifierAuthority.Value+5] 5 +
call sub_10207AD  +
test eax eax +
jnz loc_102087E  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_10208F0  +
push offset LibFileName  +
call ds:LoadLibraryA  +
mov [ebp+hLibModule] eax +
cmp eax ebx +
jnz loc_102089B  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_10208E2  +
push edi  +
push offset ProcName  +
push eax  +
call ds:GetProcAddress  +
mov edi eax +
cmp edi ebx +
jz loc_10208D8  +
lea eax [ebp+pSid] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push dword ptr [esi]  +
lea eax [ebp+pIdentifierAuthority] +
push 1  +
push eax  +
call ds:AllocateAndInitializeSid  +
test eax eax +
jz loc_10208D8  +
add esi 4 +
push esi  +
push [ebp+pSid]  +
call edi  +
test eax eax +
jnz loc_10208E1  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
pop edi  +
cmp [ebp+hLibModule] ebx +
jz loc_10208F0  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [ebp+dwErrCode] ebx +
pop esi  +
setz al  +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+arg_0] +
mov [eax+4] ecx +
xor ecx ecx +
mov dword ptr [eax+8] 1 +
mov [eax+0Ch] ecx +
mov [eax+14h] ecx +
mov [eax+10h] ecx +
mov [eax] ecx +
mov [eax+18h] ecx +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
xor edi edi +
mov esi ecx +
mov [ebp+dwDisposition] edi +
mov [ebp+var_4] edi +
cmp [esi+4] edi +
jz loc_102097C  +
mov eax [ebp+lpValueName] +
mov [esi+18h] eax +
lea eax [ebp+dwDisposition] +
push eax  +
push esi  +
push edi  +
push 2  +
push edi  +
push offset Class  +
push edi  +
push [ebp+cbData]  +
push [ebp+hKey]  +
call ds:RegCreateKeyExA  +
jmp loc_102098C  +
push esi  +
push 1  +
push edi  +
push [ebp+cbData]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExA  +
cmp eax edi +
jz loc_1020995  +
mov [ebp+var_4] eax +
jmp loc_1020A07  +
push ebx  +
lea ebx [esi+10h] +
mov dword ptr [ebx] 400h +
cmp [esi+4] edi +
jnz loc_10209B9  +
push ebx  +
push edi  +
push edi  +
push edi  +
push [ebp+lpValueName]  +
push dword ptr [esi]  +
call ds:RegQueryValueExA  +
test eax eax +
jz loc_10209B9  +
mov [ebx] edi +
mov eax [ebx] +
cmp eax edi +
jz loc_10209D8  +
push edi  +
push eax  +
call sub_1019232  +
pop ecx  +
pop ecx  +
mov [esi+14h] eax +
cmp eax edi +
jnz loc_10209D8  +
mov [ebp+var_4] 0Eh +
jmp loc_1020A06  +
cmp [esi+4] edi +
jnz loc_1020A03  +
mov ebx [ebx] +
cmp ebx edi +
jz loc_1020A03  +
lea eax [ebp+cbData] +
push eax  +
push dword ptr [esi+14h]  +
mov [ebp+cbData] ebx +
push edi  +
push edi  +
push [ebp+lpValueName]  +
push dword ptr [esi]  +
call ds:RegQueryValueExA  +
cmp eax edi +
jz loc_1020A03  +
mov [ebp+var_4] eax +
jmp loc_1020A06  +
mov [esi+0Ch] edi +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
xor eax eax +
cmp [ecx+8] eax +
jz locret_1020A41  +
cmp [ecx+4] eax +
jz locret_1020A41  +
push esi  +
mov esi [ecx+18h] +
cmp esi eax +
jz loc_1020A40  +
mov edx [ecx+14h] +
cmp edx eax +
jz loc_1020A40  +
push dword ptr [ecx+0Ch]  +
push edx  +
push 3  +
push eax  +
push esi  +
push dword ptr [ecx]  +
call ds:RegSetValueExA  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
cmp dword ptr [esi+4] 0 +
jnz loc_1020A59  +
xor eax eax +
jmp loc_1020AC6  +
mov eax [esi+10h] +
push ebx  +
mov ecx eax +
sub ecx [esi+0Ch] +
push edi  +
mov edi [ebp+arg_4] +
cmp ecx edi +
jnb loc_1020AAC  +
shr edi 0Ah +
inc edi  +
shl edi 0Ah +
add edi eax +
push 0  +
push edi  +
call sub_1019232  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jz loc_1020AC4  +
push edi  +
push 0  +
push ebx  +
call memset  +
push dword ptr [esi+10h]  +
push dword ptr [esi+14h]  +
push ebx  +
call memcpy  +
push dword ptr [esi+14h]  +
call sub_1017EF4  +
mov [esi+10h] edi +
mov edi [ebp+arg_4] +
add esp 1Ch +
mov [esi+14h] ebx +
mov eax [esi+14h] +
add eax [esi+0Ch] +
push edi  +
push [ebp+arg_0]  +
push eax  +
call memcpy  +
add esp 0Ch +
add [esi+0Ch] edi +
mov eax edi +
pop edi  +
pop ebx  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax [esi+0Ch] +
push edi  +
mov edi [esi+10h] +
sub edi eax +
cmp dword ptr [esi+4] 0 +
jz loc_1020AEB  +
xor eax eax +
jmp loc_1020B0E  +
cmp [ebp+arg_4] edi +
jnb loc_1020AF3  +
mov edi [ebp+arg_4] +
test edi edi +
jbe loc_1020B0C  +
mov ecx [esi+14h] +
push edi  +
add ecx eax +
push ecx  +
push [ebp+arg_0]  +
call memcpy  +
add esp 0Ch +
add [esi+0Ch] edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
mov eax ecx +
xor ecx ecx +
mov [eax+8] ecx +
mov [eax+0Ch] ecx +
mov [eax+4] ecx +
mov ecx [ebp+8] +
mov dword ptr [eax] offset off_100CD4C +
cmp ecx 1 +
jnb loc_1020B42  +
mov dword ptr [eax+10h] 0Ah +
jmp loc_1020B45  +
mov [eax+10h] ecx +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_100CD4C +
mov ecx [ecx+4] +
test ecx ecx +
jz locret_1020B62  +
push ecx  +
call sub_1017EF4  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ecx +
mov ecx [esi+0Ch] +
xor ebx ebx +
inc ebx  +
cmp ecx [esi+8] +
jnb loc_1020B8C  +
mov edx [ebp+arg_0] +
mov edx [edx] +
mov eax [esi+4] +
mov [eax+ecx*4] edx +
inc dword ptr [esi+0Ch]  +
jmp loc_1020BF5  +
mov eax [esi+10h] +
push edi  +
add eax ecx +
xor ecx ecx +
push 4  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_1019242  +
mov edi eax +
pop ecx  +
test edi edi +
jnz loc_1020BB9  +
push 0Eh  +
call ds:SetLastError  +
xor ebx ebx +
jmp loc_1020BF4  +
mov eax [esi+10h] +
add [esi+8] eax +
xor eax eax +
cmp [esi+0Ch] eax +
jbe loc_1020BD5  +
mov ecx [esi+4] +
mov ecx [ecx+eax*4] +
mov [edi+eax*4] ecx +
inc eax  +
cmp eax [esi+0Ch] +
jb loc_1020BC6  +
mov eax [esi+4] +
test eax eax +
jz loc_1020BE3  +
push eax  +
call sub_1017EF4  +
pop ecx  +
mov ecx [ebp+arg_0] +
mov eax [esi+0Ch] +
mov [esi+4] edi +
mov ecx [ecx] +
mov [edi+eax*4] ecx +
inc dword ptr [esi+0Ch]  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ??1type_info@@UAE@XZ_0  +
test byte ptr [ebp+8] 1 +
jz loc_1020C1C  +
push esi  +
call sub_1017EDF  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_1020C3E  +
cmp edx 7FFFFFFFh +
jbe loc_1020C43  +
mov eax 80070057h +
test eax eax +
jl loc_1020C59  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_10205B5  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_8] +
test eax eax +
jz loc_1020C84  +
mov edx [ebp+arg_4] +
cmp edx 7FFFFFFFh +
ja loc_1020C84  +
call sub_1020580  +
jmp loc_1020C89  +
mov eax 80070057h +
test eax eax +
jge loc_1020C94  +
test edi edi +
jz loc_1020C94  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
and [ebp+var_4] 0 +
test eax eax +
jz loc_1020CC6  +
mov edx [ebp+arg_4] +
cmp edx 7FFFFFFFh +
ja loc_1020CC6  +
push edi  +
lea edi [ebp+var_4] +
call sub_1020580  +
pop edi  +
jmp loc_1020CCB  +
mov eax 80070057h +
mov ecx [ebp+arg_8] +
test ecx ecx +
jz locret_1020CE0  +
test eax eax +
jl loc_1020CDD  +
mov edx [ebp+var_4] +
mov [ecx] edx +
jmp locret_1020CE0  +
and dword ptr [ecx] 0 +
leave   +
retn 0Ch  +
***
push offset aWininetproxyre  +
push 0  +
push 100000h  +
call ds:OpenMutexA  +
push 3Ch  +
push 0  +
push esi  +
mov [esi+3Ch] eax +
call memset  +
and dword ptr [esi+40h] 0 +
add esp 0Ch +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push 7FFFFFFFh  +
push [ebp+arg_0]  +
xor ebx ebx +
mov edi ecx +
mov [ebp+var_4] ebx +
call sub_1020C62  +
cmp eax ebx +
jge loc_1020D64  +
mov ecx eax +
and ecx 1FFF0000h +
cmp ecx 70000h +
jnz loc_1020D60  +
movzx ebx ax +
jmp loc_1020DB0  +
mov ebx eax +
jmp loc_1020DB0  +
mov eax [ebp+var_4] +
cmp eax ebx +
jnz loc_1020D72  +
mov ebx 0A0h +
jmp loc_1020DB0  +
push esi  +
lea esi [eax+1] +
push 0  +
push esi  +
call sub_1019232  +
pop ecx  +
pop ecx  +
mov [edi+0Ch] eax +
test eax eax +
jnz loc_1020D8C  +
push 0Eh  +
pop ebx  +
jmp loc_1020DAF  +
push [ebp+arg_0]  +
push esi  +
push eax  +
call sub_1020C28  +
test eax eax +
jge loc_1020DAF  +
mov ecx eax +
and ecx 1FFF0000h +
movzx ebx ax +
cmp ecx 70000h +
jz loc_1020DAF  +
mov ebx eax +
pop esi  +
push ebx  +
call ds:SetLastError  +
xor eax eax +
test ebx ebx +
pop edi  +
setz al  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push edi  +
mov edi ecx +
cmp [ebp+arg_0] esi +
jnz loc_1020DE0  +
mov esi 0A0h +
jmp loc_1020E05  +
push [ebp+arg_0]  +
call sub_10253BA  +
mov [ebp+arg_0] eax +
test eax eax +
jnz loc_1020DF9  +
call ds:GetLastError  +
mov esi eax +
jmp loc_1020E05  +
lea eax [ebp+arg_0] +
push eax  +
lea ecx [edi+44h] +
call sub_1020B68  +
push esi  +
call ds:SetLastError  +
xor eax eax +
test esi esi +
pop edi  +
setz al  +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+50h] edi +
jle loc_1020E3C  +
mov eax [esi+48h] +
push dword ptr [eax+edi*4]  +
call sub_102447B  +
inc edi  +
cmp edi [esi+50h] +
jl loc_1020E2B  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+50h] edi +
jle loc_1020E6F  +
mov eax [esi+48h] +
lea eax [eax+edi*4] +
push dword ptr [eax]  +
push [ebp+lpString1]  +
call sub_10244BD  +
cmp eax 2 +
jz loc_1020E77  +
inc edi  +
cmp edi [esi+50h] +
jl loc_1020E54  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
inc eax  +
jmp loc_1020E71  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi [ecx+50h] +
push edi  +
mov [ebp+var_8] ecx +
mov [ebp+var_4] esi +
mov ebx offset hFile +
test esi esi +
jnz loc_1020EA8  +
push offset aNone_1  +
push ebx  +
call sub_1018F8F  +
xor edi edi +
test esi esi +
jle loc_1020EEE  +
mov esi offset asc_100CD74 +
mov eax [ebp+var_8] +
mov eax [eax+48h] +
lea eax [eax+edi*4] +
push esi  +
push dword ptr [eax]  +
call sub_101686F  +
push eax  +
push esi  +
push ebx  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
inc edi  +
cmp edi [ebp+var_4] +
jge loc_1020EEE  +
push offset asc_100CD6C  +
push ebx  +
call sub_1018F8F  +
cmp edi [ebp+var_4] +
jl loc_1020EB3  +
push offset asc_1002440  +
push ebx  +
call sub_1018F8F  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 41Ch +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+hKey] +
push ebx  +
mov [ebp+var_418] ecx +
lea ecx [ebp+phkResult] +
push ecx  +
xor ebx ebx +
push 20019h  +
push ebx  +
push offset aSoftwareMicros  +
push eax  +
mov [ebp+dwErrCode] ebx +
mov [ebp+phkResult] ebx +
mov [ebp+cValues] ebx +
mov [ebp+cbMaxValueNameLen] ebx +
mov [ebp+cbValueName] 400h +
call ds:RegOpenKeyExA  +
cmp eax ebx +
jnz loc_1020F8A  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+cbMaxValueNameLen] +
push eax  +
lea eax [ebp+cValues] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+phkResult]  +
call ds:RegQueryInfoKeyW  +
cmp eax ebx +
jz loc_1020F95  +
mov [ebp+dwErrCode] eax +
jmp loc_1021033  +
cmp [ebp+cValues] ebx +
jz loc_1021033  +
push edi  +
xor edi edi +
cmp [ebp+cValues] ebx +
jbe loc_1021032  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+String1] +
push eax  +
push edi  +
push [ebp+phkResult]  +
mov [ebp+cbValueName] 400h +
mov [ebp+String1] bl +
call ds:RegEnumValueA  +
cmp eax ebx +
jnz loc_102102C  +
push offset aDefaultconnect  +
lea eax [ebp+String1] +
push eax  +
call sub_10244BD  +
cmp eax 2 +
jz loc_1021021  +
push offset aSavedlegacyset  +
lea eax [ebp+String1] +
push eax  +
call sub_10244BD  +
cmp eax 2 +
jz loc_1021021  +
mov ecx [ebp+var_418] +
lea eax [ebp+String1] +
push eax  +
call sub_1020DC9  +
inc edi  +
cmp edi [ebp+cValues] +
jb loc_1020FB0  +
jmp loc_1021032  +
mov [ebp+dwErrCode] eax +
pop edi  +
cmp [ebp+phkResult] ebx +
jz loc_102104D  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov [ebp+phkResult] ebx +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [ebp+dwErrCode] ebx +
pop ebx  +
setz al  +
xor ecx ebp +
call sub_1027CE5  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push 7FFFFFFFh  +
push [ebp+arg_0]  +
xor ebx ebx +
mov edi ecx +
mov [ebp+var_4] ebx +
call sub_1020C62  +
cmp eax ebx +
jge loc_10210B5  +
mov ecx eax +
and ecx 1FFF0000h +
cmp ecx 70000h +
jnz loc_10210B1  +
movzx ebx ax +
jmp loc_1021101  +
mov ebx eax +
jmp loc_1021101  +
mov eax [ebp+var_4] +
cmp eax ebx +
jnz loc_10210C3  +
mov ebx 0A0h +
jmp loc_1021101  +
push esi  +
lea esi [eax+1] +
push 0  +
push esi  +
call sub_1019232  +
pop ecx  +
pop ecx  +
mov [edi+8] eax +
test eax eax +
jnz loc_10210DD  +
push 0Eh  +
pop ebx  +
jmp loc_1021100  +
push [ebp+arg_0]  +
push esi  +
push eax  +
call sub_1020C28  +
test eax eax +
jge loc_1021100  +
mov ecx eax +
and ecx 1FFF0000h +
movzx ebx ax +
cmp ecx 70000h +
jz loc_1021100  +
mov ebx eax +
pop esi  +
push ebx  +
call ds:SetLastError  +
xor eax eax +
test ebx ebx +
pop edi  +
setz al  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
mov [ebp+var_18] ecx +
mov [ebp+dwErrCode] edi +
mov [ebp+phkResult] edi +
cmp ebx edi +
jz loc_10211FE  +
cmp esi edi +
jz loc_10211FE  +
push esi  +
mov [ebx] edi +
call sub_1021078  +
test eax eax +
jz loc_10211BC  +
call sub_1024674  +
test eax eax +
jz loc_10211B0  +
push offset aLocalsystem  +
push esi  +
call ds:_stricmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10211B0  +
mov esi offset a_default +
lea edi [ebp+var_10] +
movs   +
movs   +
push 9  +
push eax  +
movs   +
call ds:GlobalAlloc  +
mov ecx [ebp+var_18] +
mov [ecx+4] eax +
test eax eax +
jz loc_10211A5  +
lea ecx [ebp+var_10] +
push ecx  +
push 9  +
push eax  +
call sub_1020C28  +
test eax eax +
jge loc_10211C7  +
mov [ebp+dwErrCode] 0Eh +
xor edi edi +
jmp loc_1021205  +
mov ecx [ebp+var_18] +
call sub_1020835  +
test eax eax +
jnz loc_10211C9  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_1021205  +
xor edi edi +
push edi  +
lea eax [ebp+phkResult] +
push eax  +
mov eax [ebp+var_18] +
push edi  +
push [ebp+samDesired]  +
push edi  +
push edi  +
push edi  +
push dword ptr [eax+4]  +
push 80000003h  +
call ds:RegCreateKeyExA  +
test eax eax +
jz loc_10211F7  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
mov [ebx] edi +
jmp loc_1021205  +
mov eax [ebp+phkResult] +
mov [ebx] eax +
jmp loc_1021205  +
mov [ebp+dwErrCode] 0A0h +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [ebp+dwErrCode] edi +
pop edi  +
setz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi ecx +
call sub_1020A15  +
mov eax [esi] +
test eax eax +
jz loc_1021243  +
push eax  +
call ds:RegCloseKey  +
mov eax [esi+14h] +
test eax eax +
jz loc_1021255  +
push eax  +
call sub_1017EF4  +
and dword ptr [esi+14h] 0 +
pop ecx  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
and [ebp+var_4] esi +
push edi  +
mov edi ecx +
lea eax [ebp+var_4] +
cmp [ebp+arg_0] esi +
jz loc_10212B0  +
push eax  +
push 7FFFFFFFh  +
push [ebp+arg_0]  +
call sub_1020C9E  +
test eax eax +
jl loc_10212BB  +
push 4  +
lea eax [ebp+var_4] +
push eax  +
mov ecx edi +
call sub_1020A47  +
cmp [ebp+var_4] 0 +
mov esi eax +
jz loc_10212BB  +
cmp esi 4 +
jnz loc_10212BB  +
push [ebp+var_4]  +
mov ecx edi +
push [ebp+arg_0]  +
call sub_1020A47  +
mov esi eax +
jmp loc_10212BB  +
and [ebp+var_4] esi +
push 4  +
push eax  +
call sub_1020A47  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
push 4  +
lea eax [ebp+var_4] +
push eax  +
mov [ebp+var_8] ecx +
xor esi esi +
call sub_1020AD0  +
mov edi eax +
cmp edi 4 +
jnz loc_102131B  +
push ebx  +
mov ebx [ebp+var_4] +
test ebx ebx +
jz loc_102131A  +
cmp ebx 7FFFFFFFh +
jnb loc_102131A  +
lea eax [ebx+1] +
push esi  +
push eax  +
call sub_1019232  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_102131A  +
mov ecx [ebp+var_8] +
push ebx  +
push esi  +
call sub_1020AD0  +
mov edi eax +
mov byte ptr [esi+edi] 0 +
pop ebx  +
mov eax [ebp+arg_0] +
mov [eax] esi +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
call __EH_prolog3  +
xor esi esi +
mov [ebp-10h] esi +
call sub_1020654  +
test eax eax +
jz loc_10213A4  +
push offset aThereSAPolicyI  +
push offset hFile  +
call sub_1018F8F  +
mov eax 80000002h +
call __EH_epilog3  +
retn 4  +
mov [ebp-1Ch] esi +
mov [ebp-18h] esi +
mov [ebp-14h] esi +
lea eax [ebp-10h] +
push eax  +
push 3  +
push dword ptr [ebp+8]  +
lea ecx [ebp-1Ch] +
mov [ebp-4] esi +
call sub_102111A  +
test eax eax +
jnz loc_10213D1  +
lea ecx [ebp-1Ch] +
call sub_102077D  +
mov eax esi +
jmp loc_102139C  +
mov esi [ebp-10h] +
jmp loc_10213C5  +
***
push ebp  +
mov ebp esp +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ecx +
cmp [ebp+0Ch] ebx +
jz loc_1021451  +
push edi  +
push dword ptr [ebp+8]  +
call sub_102136E  +
mov edi eax +
test edi edi +
jnz loc_1021401  +
mov ebx 80070002h +
jmp loc_1021438  +
push edi  +
mov ecx esi +
call sub_1020F03  +
test eax eax +
jnz loc_1021425  +
call ds:GetLastError  +
test eax eax +
jle loc_1021421  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
jmp loc_1021438  +
push dword ptr [ebp+0Ch]  +
mov ecx esi +
call sub_1020E44  +
test eax eax +
jnz loc_1021438  +
mov ebx 8007000Dh +
test edi edi +
jz loc_1021450  +
cmp edi 0FFFFFFFFh +
jz loc_1021450  +
cmp edi 80000002h +
jz loc_1021450  +
push edi  +
call ds:RegCloseKey  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_0]  +
mov esi ecx +
xor ebx ebx +
call sub_102136E  +
mov edi eax +
test edi edi +
jnz loc_102147F  +
mov ebx 80070002h +
jmp loc_10214CD  +
push edi  +
mov ecx esi +
call sub_1020F03  +
test eax eax +
jnz loc_10214A3  +
call ds:GetLastError  +
test eax eax +
jle loc_102149F  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
jmp loc_10214B9  +
push offset aTheCurrentUser  +
push offset hFile  +
call sub_1018F8F  +
mov ecx esi +
call sub_1020E81  +
cmp edi 0FFFFFFFFh +
jz loc_10214CD  +
cmp edi 80000002h +
jz loc_10214CD  +
push edi  +
call ds:RegCloseKey  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
push 1  +
lea ecx [ebp-34h] +
call sub_1020914  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-10h] 0 +
mov ecx esi +
mov dword ptr [ebp-14h] 3Ch +
call sub_1020604  +
test eax eax +
jnz loc_1021519  +
mov dword ptr [ebp-10h] 102h +
jmp loc_1021641  +
push dword ptr [ebp+8]  +
mov ecx esi +
call sub_102136E  +
mov ebx eax +
mov [ebp-18h] ebx +
test ebx ebx +
jnz loc_1021538  +
mov dword ptr [ebp-10h] 2 +
jmp loc_1021629  +
mov eax [esi+0Ch] +
test eax eax +
jz loc_1021544  +
cmp byte ptr [eax] 0 +
jnz loc_1021549  +
mov eax offset aDefaultconnect +
push eax  +
push offset aSoftwareMicros  +
lea edi [esi+8] +
inc dword ptr [edi]  +
push ebx  +
lea ecx [ebp-34h] +
call sub_1020941  +
test eax eax +
jz loc_102156D  +
and dword ptr [ebp-2Ch] 0 +
mov [ebp-10h] eax +
jmp loc_1021629  +
push 4  +
pop ebx  +
push ebx  +
lea eax [ebp-14h] +
push eax  +
lea ecx [ebp-34h] +
call sub_1020A47  +
push ebx  +
push edi  +
lea ecx [ebp-34h] +
call sub_1020A47  +
push ebx  +
lea eax [esi+4] +
push eax  +
lea ecx [ebp-34h] +
call sub_1020A47  +
push dword ptr [esi+10h]  +
lea ecx [ebp-34h] +
call sub_102125C  +
push dword ptr [esi+14h]  +
lea ecx [ebp-34h] +
call sub_102125C  +
push dword ptr [esi+18h]  +
lea ecx [ebp-34h] +
call sub_102125C  +
push ebx  +
lea eax [esi+20h] +
push eax  +
lea ecx [ebp-34h] +
call sub_1020A47  +
push dword ptr [esi+24h]  +
lea ecx [ebp-34h] +
call sub_102125C  +
push 8  +
lea eax [esi+2Ch] +
push eax  +
lea ecx [ebp-34h] +
call sub_1020A47  +
push ebx  +
lea edi [esi+34h] +
push edi  +
lea ecx [ebp-34h] +
call sub_1020A47  +
and dword ptr [ebp+8] 0 +
cmp dword ptr [edi] 0 +
jbe loc_102160E  +
mov eax [esi+38h] +
mov ecx [ebp+8] +
lea eax [eax+ecx*4] +
push ebx  +
push eax  +
lea ecx [ebp-34h] +
call sub_1020A47  +
inc dword ptr [ebp+8]  +
mov eax [ebp+8] +
cmp eax [edi] +
jb loc_10215F1  +
push dword ptr [esi+1Ch]  +
lea ecx [ebp-34h] +
call sub_102125C  +
push ebx  +
lea eax [esi+28h] +
push eax  +
lea ecx [ebp-34h] +
call sub_1020A47  +
mov ebx [ebp-18h] +
test ebx ebx +
jz loc_1021641  +
cmp ebx 0FFFFFFFFh +
jz loc_1021641  +
cmp ebx 80000002h +
jz loc_1021641  +
push ebx  +
call ds:RegCloseKey  +
mov ecx esi +
call sub_1020640  +
push dword ptr [ebp-10h]  +
call ds:SetLastError  +
lea ecx [ebp-34h] +
call sub_102122C  +
xor eax eax +
cmp [ebp-10h] eax +
setz al  +
call __EH_epilog3  +
retn 4  +
***
call __EH_prolog3  +
mov esi ecx +
xor edi edi +
push edi  +
lea ecx [ebp-34h] +
call sub_1020914  +
mov ecx esi +
mov [ebp-4] edi +
mov [ebp-10h] edi +
mov [ebp-18h] edi +
mov [ebp-14h] edi +
call sub_1020604  +
test eax eax +
jnz loc_10216AA  +
mov dword ptr [ebp-10h] 102h +
jmp loc_1021858  +
mov eax [ebp+0Ch] +
xor ebx ebx +
inc ebx  +
cmp eax edi +
jz loc_10216BE  +
cmp byte ptr [eax] 0 +
jz loc_10216BE  +
mov [ebp+0Ch] eax +
jmp loc_10216C8  +
mov [ebp-18h] ebx +
mov dword ptr [ebp+0Ch] offset aDefaultconnect +
push dword ptr [ebp+8]  +
mov ecx esi +
call sub_102136E  +
mov [ebp+8] eax +
cmp eax edi +
jnz loc_10216E5  +
mov dword ptr [ebp-10h] 2 +
jmp loc_102183C  +
push 3Ch  +
pop edi  +
push edi  +
push 0  +
push esi  +
call memset  +
add esp 0Ch +
push dword ptr [ebp+0Ch]  +
mov [esi] edi +
lea edi [esi+4] +
mov ecx esi +
mov [edi] ebx +
call sub_1020D27  +
test eax eax +
jnz loc_1021717  +
call ds:GetLastError  +
mov [ebp-10h] eax +
jmp loc_102183C  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-34h] +
push offset aSoftwareMicros  +
push dword ptr [ebp+8]  +
call sub_1020941  +
test eax eax +
jnz loc_102170F  +
push 4  +
pop ebx  +
push ebx  +
lea eax [ebp-14h] +
push eax  +
lea ecx [ebp-34h] +
call sub_1020AD0  +
test eax eax +
jz loc_102182D  +
cmp dword ptr [ebp-14h] 3Ch +
jb loc_102182D  +
push ebx  +
lea eax [esi+8] +
push eax  +
lea ecx [ebp-34h] +
call sub_1020AD0  +
push ebx  +
push edi  +
lea ecx [ebp-34h] +
call sub_1020AD0  +
lea eax [esi+10h] +
push eax  +
lea ecx [ebp-34h] +
call sub_10212C8  +
lea eax [esi+14h] +
push eax  +
lea ecx [ebp-34h] +
call sub_10212C8  +
lea eax [esi+18h] +
push eax  +
lea ecx [ebp-34h] +
call sub_10212C8  +
push ebx  +
lea eax [esi+20h] +
push eax  +
lea ecx [ebp-34h] +
call sub_1020AD0  +
lea eax [esi+24h] +
push eax  +
lea ecx [ebp-34h] +
call sub_10212C8  +
push 8  +
lea eax [esi+2Ch] +
push eax  +
lea ecx [ebp-34h] +
call sub_1020AD0  +
push ebx  +
lea edi [esi+34h] +
push edi  +
lea ecx [ebp-34h] +
call sub_1020AD0  +
mov eax [edi] +
test eax eax +
jz loc_1021809  +
xor ecx ecx +
mov edx ebx +
mul  edx +
seto cl  +
push 0  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_1019232  +
pop ecx  +
pop ecx  +
mov [esi+38h] eax +
test eax eax +
jz loc_1021824  +
and dword ptr [ebp+0Ch] 0 +
cmp dword ptr [edi] 0 +
jbe loc_1021809  +
mov eax [esi+38h] +
mov ecx [ebp+0Ch] +
lea eax [eax+ecx*4] +
push ebx  +
push eax  +
lea ecx [ebp-34h] +
call sub_1020AD0  +
inc dword ptr [ebp+0Ch]  +
mov eax [ebp+0Ch] +
cmp eax [edi] +
jb loc_10217EC  +
lea eax [esi+1Ch] +
push eax  +
lea ecx [ebp-34h] +
call sub_10212C8  +
push ebx  +
lea eax [esi+28h] +
push eax  +
lea ecx [ebp-34h] +
call sub_1020AD0  +
jmp loc_102183C  +
mov dword ptr [ebp-10h] 0Eh +
jmp loc_102183C  +
cmp dword ptr [ebp-18h] 0 +
mov dword ptr [esi] 3Ch +
jz loc_102183C  +
or dword ptr [edi] 8 +
mov eax [ebp+8] +
xor edi edi +
cmp eax edi +
jz loc_1021858  +
cmp eax 0FFFFFFFFh +
jz loc_1021858  +
cmp eax 80000002h +
jz loc_1021858  +
push eax  +
call ds:RegCloseKey  +
mov ecx esi +
call sub_1020640  +
push dword ptr [ebp-10h]  +
call ds:SetLastError  +
lea ecx [ebp-34h] +
call sub_102122C  +
xor eax eax +
cmp [ebp-10h] edi +
setz al  +
call __EH_epilog3  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push dword ptr [ebp+0Ch]  +
mov esi ecx +
push dword ptr [ebp+8]  +
xor edi edi +
call sub_102166E  +
test eax eax +
jnz loc_10218B7  +
call ds:GetLastError  +
test eax eax +
jle loc_10218B3  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
jmp loc_1021912  +
mov eax [esi+10h] +
test eax eax +
jz loc_10218D0  +
push eax  +
push dword ptr [ebp+1Ch]  +
push dword ptr [ebp+18h]  +
call sub_1020C28  +
mov edi eax +
test edi edi +
jl loc_1021912  +
mov eax [esi+14h] +
test eax eax +
jz loc_10218E9  +
push eax  +
push dword ptr [ebp+24h]  +
push dword ptr [ebp+20h]  +
call sub_1020C28  +
mov edi eax +
test edi edi +
jl loc_1021912  +
mov eax [esi+18h] +
test eax eax +
jz loc_1021902  +
push eax  +
push dword ptr [ebp+2Ch]  +
push dword ptr [ebp+28h]  +
call sub_1020C28  +
mov edi eax +
test edi edi +
jl loc_1021912  +
mov eax [esi+4] +
mov ecx [ebp+10h] +
mov [ecx] eax +
mov eax [esi+20h] +
mov ecx [ebp+14h] +
mov [ecx] eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 28h  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
push dword ptr [ebp+0Ch]  +
mov esi ecx +
push dword ptr [ebp+8]  +
xor edi edi +
call sub_102166E  +
test eax eax +
jnz loc_1021959  +
call ds:GetLastError  +
cmp eax 2 +
jz loc_1021959  +
test eax eax +
jle loc_1021952  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
jmp loc_1021A60  +
mov ecx [ebp+10h] +
mov eax [ebp+14h] +
or [esi+20h] eax +
or [esi+4] ecx +
mov eax [esi+20h] +
push ebx  +
xor ebx ebx +
inc ebx  +
cmp ecx ebx +
jnz loc_102197F  +
mov ecx esi +
call sub_10206F0  +
or [esi+20h] ebx +
mov [esi+4] ebx +
jmp loc_102198C  +
test cl 8 +
jz loc_102198C  +
and eax 0FFFFFFFBh +
or eax ebx +
mov [esi+20h] eax +
mov eax [ebp+18h] +
xor ebx ebx +
cmp eax ebx +
jz loc_10219C8  +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_1021998  +
sub eax ecx +
lea edi [eax+1] +
push ebx  +
push edi  +
call sub_1019232  +
pop ecx  +
pop ecx  +
mov [esi+10h] eax +
cmp eax ebx +
jz loc_1021A24  +
push dword ptr [ebp+18h]  +
push edi  +
push eax  +
call sub_1020C28  +
mov edi eax +
cmp edi ebx +
jl loc_1021A5F  +
mov eax [ebp+1Ch] +
cmp eax ebx +
jz loc_10219FE  +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_10219D2  +
sub eax ecx +
lea edi [eax+1] +
push ebx  +
push edi  +
call sub_1019232  +
pop ecx  +
pop ecx  +
mov [esi+14h] eax +
cmp eax ebx +
jz loc_1021A24  +
push dword ptr [ebp+1Ch]  +
push edi  +
push eax  +
call sub_1020C28  +
mov edi eax +
cmp edi ebx +
jl loc_1021A5F  +
mov eax [ebp+20h] +
cmp eax ebx +
jz loc_1021A3B  +
lea ecx [eax+1] +
mov dl [eax] +
inc eax  +
test dl dl +
jnz loc_1021A08  +
sub eax ecx +
lea edi [eax+1] +
push ebx  +
push edi  +
call sub_1019232  +
pop ecx  +
pop ecx  +
mov [esi+18h] eax +
cmp eax ebx +
jnz loc_1021A2B  +
mov edi 8007000Eh +
jmp loc_1021A5F  +
push dword ptr [ebp+20h]  +
push edi  +
push eax  +
call sub_1020C28  +
mov edi eax +
cmp edi ebx +
jl loc_1021A5F  +
push dword ptr [ebp+8]  +
mov ecx esi +
call sub_10214DB  +
test eax eax +
jnz loc_1021A5F  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_1021A5D  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 1Ch  +
***
push offset aTheFollowingUt  +
push offset hFile  +
call sub_1018F8F  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:_wcsicmp +
push offset aLocalsystem_0  +
push [ebp+arg_0]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1021B15  +
push offset aNetworkservi_0  +
push [ebp+arg_0]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1021AE9  +
call sub_1024674  +
test eax eax +
jz loc_1021B15  +
push offset aInvalidArgum_0  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
push offset aWindows2000Sys  +
push esi  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+arg_0] +
push eax  +
mov [ebp+arg_0] 1 +
call _CxxThrowException  +
push offset aLocalservice_0  +
push [ebp+arg_0]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1021B09  +
call sub_1024674  +
test eax eax +
jz loc_1021B15  +
push offset aInvalidArgum_1  +
jmp loc_1021ABE  +
push offset aInvalidArgum_2  +
push offset hFile  +
jmp loc_1021ACF  +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
cmp ebx 1 +
jnz loc_1021B3E  +
push offset aNo_proxy  +
push offset hFile  +
call sub_1018F8F  +
jmp loc_1021B75  +
push esi  +
mov esi offset hFile +
test bl 8 +
jz loc_1021B54  +
push offset aAutodetect_0  +
push esi  +
call sub_1018F8F  +
test bl 2 +
jz loc_1021B64  +
push offset aManual_proxy  +
push esi  +
call sub_1018F8F  +
test bl 4 +
jz loc_1021B74  +
push offset aAutoscript  +
push esi  +
call sub_1018F8F  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
test eax eax +
jz loc_1021B91  +
cmp word ptr [eax] 0 +
jnz loc_1021B96  +
mov eax offset aEmpty +
pop ebp  +
retn 4  +
***
push 9Ch  +
mov eax offset byte_1028F6B +
call __EH_prolog3_catch  +
cmp dword ptr [ebp+8] 2 +
jge loc_1021BD8  +
push offset aSetieproxyMust  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp-30h] 1 +
push offset dword_1029268  +
lea eax [ebp-30h] +
push eax  +
call _CxxThrowException  +
mov esi [ebp+0Ch] +
mov edi [esi] +
mov ebx [esi+4] +
push edi  +
mov [ebp-24h] edi +
mov [ebp-2Ch] ebx +
call sub_1021A84  +
xor eax eax +
push edi  +
mov [ebp-18h] eax +
mov [ebp-20h] eax +
mov [ebp-1Ch] eax +
call sub_10168D8  +
push ebx  +
mov [ebp-14h] eax +
call sub_10168D8  +
and dword ptr [ebp+0Ch] 0 +
and dword ptr [ebp-4] 0 +
cmp dword ptr [ebp-14h] 0 +
mov [ebp-28h] eax +
jz loc_1022139  +
test eax eax +
jz loc_1022139  +
mov ebx [ebp+8] +
cmp ebx 4 +
jz loc_1021C35  +
cmp ebx 5 +
jz loc_1021C35  +
cmp ebx 6 +
jnz loc_1021C7F  +
mov edi ds:_wcsicmp +
push offset aConn  +
push dword ptr [esi+ebx*4-8]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1021C85  +
push dword ptr [esi+ebx*4-4]  +
call sub_10168D8  +
mov [ebp+0Ch] eax +
test eax eax +
jnz loc_1021C85  +
push offset aErrorConvert_1  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp-44h] 1 +
push offset dword_1029268  +
lea eax [ebp-44h] +
jmp loc_1021BD2  +
***
mov edi ds:_wcsicmp +
lea ecx [ebp-0A4h] +
call near ptr dword_1020CE4+5  +
cmp dword ptr [ebp+0Ch] 0 +
mov byte ptr [ebp-4] 1 +
jz loc_1021CD5  +
push offset aHelp_0  +
push dword ptr [ebp+0Ch]  +
call sub_10244BD  +
cmp eax 2 +
jz loc_1021CBE  +
push offset a?_0  +
push dword ptr [ebp+0Ch]  +
call sub_10244BD  +
cmp eax 2 +
jnz loc_1021CD5  +
push dword ptr [ebp-14h]  +
lea ecx [ebp-0A4h] +
call sub_102145E  +
mov byte ptr [ebp-4] 0 +
jmp loc_1022097  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-0A4h] +
push dword ptr [ebp-14h]  +
call near ptr dword_10213D8+3  +
mov ebx eax +
test ebx ebx +
jge loc_1021D27  +
push dword ptr [ebp+0Ch]  +
call sub_101686F  +
push offset aInvalidConnect  +
push offset hFile  +
mov esi eax +
call sub_1018F8F  +
push esi  +
push eax  +
call sub_1018F8F  +
push offset asc_1002440  +
push eax  +
call sub_1018F8F  +
mov [ebp-3Ch] ebx +
push offset dword_1029268  +
lea eax [ebp-3Ch] +
jmp loc_1021BD2  +
***
mov ebx [ebp-2Ch] +
push offset aNo_proxy  +
push ebx  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1021DBC  +
xor esi esi +
push esi  +
push esi  +
push esi  +
push esi  +
push 1  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-0A4h] +
push dword ptr [ebp-14h]  +
call near ptr dword_102191C+3  +
push eax  +
push offset aUnableToSetInt  +
call sub_1018811  +
push offset aInternetProxyS  +
mov edi offset hFile +
push edi  +
call sub_1018F8F  +
push dword ptr [ebp-24h]  +
push eax  +
call sub_1018F8F  +
push offset aSetToNo_proxy_  +
push eax  +
call sub_1018F8F  +
cmp [ebp+0Ch] esi +
jz loc_1021D95  +
push dword ptr [ebp+0Ch]  +
call sub_101686F  +
mov esi eax +
jmp loc_1021D9A  +
mov esi offset aDefault +
push offset aConnection  +
push edi  +
call sub_1018F8F  +
push esi  +
push eax  +
call sub_1018F8F  +
push offset asc_100EDE8  +
push eax  +
call sub_1018F8F  +
jmp loc_1021CCC  +
***
push offset aAutodetect  +
push ebx  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1021E11  +
xor esi esi +
push esi  +
push esi  +
push esi  +
push esi  +
push 9  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-0A4h] +
push dword ptr [ebp-14h]  +
call near ptr dword_102191C+3  +
push eax  +
push offset aUnableToSetInt  +
call sub_1018811  +
push offset aInternetProxyS  +
mov edi offset hFile +
push edi  +
call sub_1018F8F  +
push dword ptr [ebp-24h]  +
push eax  +
call sub_1018F8F  +
push offset aSetToAutodetec  +
jmp loc_1021D7E  +
***
push offset aManual_proxy_0  +
push ebx  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1021FAB  +
cmp dword ptr [ebp+8] 4 +
jz loc_1021E52  +
cmp dword ptr [ebp+8] 6 +
jz loc_1021E52  +
push offset aManual_proxyMu  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp-4Ch] 1 +
push offset dword_1029268  +
lea eax [ebp-4Ch] +
jmp loc_1021BD2  +
***
mov ebx [esi+8] +
mov eax [esi+0Ch] +
mov esi offset aNull +
push esi  +
push ebx  +
mov [ebp+8] eax +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1021E6C  +
xor ebx ebx +
push esi  +
push dword ptr [ebp+8]  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1021E7B  +
and [ebp+8] eax +
push ebx  +
call sub_10168D8  +
push dword ptr [ebp+8]  +
mov [ebp-18h] eax +
call sub_10168D8  +
xor esi esi +
push esi  +
push eax  +
push dword ptr [ebp-18h]  +
lea ecx [ebp-0A4h] +
push esi  +
push 3  +
push dword ptr [ebp+0Ch]  +
mov [ebp-20h] eax +
push dword ptr [ebp-14h]  +
call near ptr dword_102191C+3  +
push eax  +
push offset aUnableToSetInt  +
call sub_1018811  +
push offset aInternetProxyS  +
mov edi offset hFile +
push edi  +
call sub_1018F8F  +
push dword ptr [ebp-24h]  +
push eax  +
call sub_1018F8F  +
push offset aWereSet_  +
push eax  +
call sub_1018F8F  +
cmp [ebp+0Ch] esi +
jz loc_1021EEA  +
push dword ptr [ebp+0Ch]  +
call sub_101686F  +
mov esi eax +
jmp loc_1021EEF  +
mov esi offset aDefault +
push offset aConnection  +
push edi  +
call sub_1018F8F  +
push esi  +
push eax  +
call sub_1018F8F  +
push offset asc_100EDE8  +
push eax  +
call sub_1018F8F  +
push offset aProxyUsageSe_0  +
push edi  +
call sub_1018F8F  +
push dword ptr [ebp-2Ch]  +
push eax  +
call sub_1018F8F  +
mov esi offset asc_1002440 +
push esi  +
push eax  +
call sub_1018F8F  +
push offset aProxyListSet_0  +
push edi  +
call sub_1018F8F  +
push ebx  +
mov ecx eax +
call near ptr dword_1021B7C+3  +
push eax  +
push ecx  +
call sub_1018F8F  +
push esi  +
push eax  +
call sub_1018F8F  +
push offset aProxyBypassL_0  +
push edi  +
call sub_1018F8F  +
push dword ptr [ebp+8]  +
mov ecx eax +
call near ptr dword_1021B7C+3  +
push eax  +
push ecx  +
call sub_1018F8F  +
push esi  +
push eax  +
call sub_1018F8F  +
lea ecx [ebp-0A4h] +
mov byte ptr [ebp-4] 0 +
call near ptr dword_1021328+5  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call sub_1024674  +
test eax eax +
jz loc_10220A2  +
push offset aWindows2000S_0  +
push edi  +
call sub_1018F8F  +
push offset aThisCommandEve  +
push edi  +
call sub_1018F8F  +
jmp loc_10220A2  +
push offset aAutoscript_0  +
push ebx  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1022119  +
cmp dword ptr [ebp+8] 3 +
jz loc_1021FEC  +
cmp dword ptr [ebp+8] 5 +
jz loc_1021FEC  +
push offset aAutoscriptMust  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp-34h] 1 +
push offset dword_1029268  +
lea eax [ebp-34h] +
jmp loc_1021BD2  +
***
mov esi [esi+8] +
xor ebx ebx +
cmp [esi] bx +
jz loc_10220F6  +
push offset aNull  +
push esi  +
call edi  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10220F6  +
push esi  +
call sub_10168D8  +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push 5  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-0A4h] +
push dword ptr [ebp-14h]  +
mov [ebp-1Ch] eax +
call near ptr dword_102191C+3  +
push eax  +
push offset aUnableToSetInt  +
call sub_1018811  +
push offset aProxyAutoDisco  +
mov edi offset hFile +
push edi  +
call sub_1018F8F  +
push esi  +
mov ecx eax +
call near ptr dword_1021B7C+3  +
push eax  +
push ecx  +
call sub_1018F8F  +
push offset a__0  +
push eax  +
call sub_1018F8F  +
cmp [ebp+0Ch] ebx +
jz loc_1022072  +
push dword ptr [ebp+0Ch]  +
call sub_101686F  +
mov esi eax +
jmp loc_1022077  +
mov esi offset aDefault +
push offset aConnection  +
push edi  +
call sub_1018F8F  +
push esi  +
push eax  +
call sub_1018F8F  +
push offset asc_100EDE8  +
push eax  +
call sub_1018F8F  +
mov [ebp-4] bl +
lea ecx [ebp-0A4h] +
call near ptr dword_1021328+5  +
push dword ptr [ebp-14h]  +
call sub_1017EF4  +
push dword ptr [ebp-28h]  +
call sub_1017EF4  +
xor esi esi +
pop ecx  +
pop ecx  +
cmp [ebp-18h] esi +
jz loc_10220C4  +
push dword ptr [ebp-18h]  +
call sub_1017EF4  +
pop ecx  +
cmp [ebp-20h] esi +
jz loc_10220D2  +
push dword ptr [ebp-20h]  +
call sub_1017EF4  +
pop ecx  +
cmp [ebp-1Ch] esi +
jz loc_10220E0  +
push dword ptr [ebp-1Ch]  +
call sub_1017EF4  +
pop ecx  +
cmp [ebp+0Ch] esi +
jz loc_10220EE  +
push dword ptr [ebp+0Ch]  +
call sub_1017EF4  +
pop ecx  +
call __EH_epilog3  +
retn 8  +
***
push offset aInvalidArgum_3  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp-38h] 1 +
push offset dword_1029268  +
lea eax [ebp-38h] +
jmp loc_1021BD2  +
***
push offset aInternetProxyU  +
push offset hFile  +
call sub_1018F8F  +
and dword ptr [ebp-40h] 0 +
push offset dword_1029268  +
lea eax [ebp-40h] +
jmp loc_1021BD2  +
***
push offset aErrorConvert_0  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp-48h] 1 +
push offset dword_1029268  +
lea eax [ebp-48h] +
jmp loc_1021BD2  +
***
xor esi esi +
cmp [ebp-14h] esi +
jz loc_102216C  +
push dword ptr [ebp-14h]  +
call sub_1017EF4  +
pop ecx  +
cmp [ebp-28h] esi +
jz loc_102217A  +
push dword ptr [ebp-28h]  +
call sub_1017EF4  +
pop ecx  +
cmp [ebp-18h] esi +
jz loc_1022188  +
push dword ptr [ebp-18h]  +
call sub_1017EF4  +
pop ecx  +
cmp [ebp-20h] esi +
jz loc_1022196  +
push dword ptr [ebp-20h]  +
call sub_1017EF4  +
pop ecx  +
cmp [ebp-1Ch] esi +
jz loc_10221A4  +
push dword ptr [ebp-1Ch]  +
call sub_1017EF4  +
pop ecx  +
cmp [ebp+0Ch] esi +
jz loc_10221B2  +
push dword ptr [ebp+0Ch]  +
call sub_1017EF4  +
pop ecx  +
push esi  +
push esi  +
jmp loc_1021BD3  +
***
push 688h  +
mov eax offset byte_1028F99 +
call __EH_prolog3_catch_GS  +
mov edi [ebp+0Ch] +
xor esi esi +
inc esi  +
cmp [ebp+8] esi +
jge loc_10221FE  +
push offset aGetieproxyMust  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp-62Ch] esi +
push offset dword_1029268  +
lea eax [ebp-62Ch] +
push eax  +
call _CxxThrowException  +
mov ebx [edi] +
push ebx  +
call sub_1021A84  +
xor eax eax +
mov esi 1FFh +
push esi  +
push eax  +
mov [ebp-620h] eax +
mov [ebp-628h] eax +
mov [ebp-414h] al +
lea eax [ebp-413h] +
push eax  +
call memset  +
push esi  +
lea eax [ebp-613h] +
push 0  +
push eax  +
mov byte ptr [ebp-614h] 0 +
call memset  +
push esi  +
xor esi esi +
lea eax [ebp-213h] +
push esi  +
push eax  +
mov byte ptr [ebp-214h] 0 +
call memset  +
add esp 24h +
push ebx  +
call sub_10168D8  +
and [ebp-4] esi +
mov [ebp-61Ch] eax +
mov [ebp-618h] esi +
test eax eax +
jnz loc_102229F  +
push offset aErrorConvert_0  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp-630h] 1 +
push offset dword_1029268  +
lea eax [ebp-630h] +
jmp loc_10221F8  +
***
cmp dword ptr [ebp+8] 3 +
jnz loc_10222F6  +
push offset aConn  +
push dword ptr [edi+4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10222F6  +
push dword ptr [edi+8]  +
call sub_10168D8  +
mov [ebp-618h] eax +
test eax eax +
jnz loc_10222F4  +
push offset aErrorConvert_1  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp-638h] 1 +
push offset dword_1029268  +
lea eax [ebp-638h] +
jmp loc_10221F8  +
***
mov esi eax +
lea ecx [ebp-690h] +
call near ptr dword_1020CE4+5  +
mov byte ptr [ebp-4] 1 +
test esi esi +
jz loc_1022353  +
push offset aHelp_0  +
push esi  +
call sub_10244BD  +
cmp eax 2 +
jz loc_1022329  +
push offset a?_0  +
push esi  +
call sub_10244BD  +
cmp eax 2 +
jnz loc_1022353  +
push dword ptr [ebp-61Ch]  +
lea ecx [ebp-690h] +
call sub_102145E  +
lea ecx [ebp-690h] +
mov byte ptr [ebp-4] 0 +
call near ptr dword_1021328+5  +
mov esi offset hFile +
jmp loc_102253F  +
push esi  +
push dword ptr [ebp-61Ch]  +
lea ecx [ebp-690h] +
call near ptr dword_10213D8+3  +
mov edi eax +
test edi edi +
jge loc_10223B5  +
test esi esi +
jz loc_1022379  +
push esi  +
call sub_101686F  +
mov esi eax +
jmp loc_102237E  +
mov esi offset dword_1007F30 +
push offset aInvalidConnect  +
push offset hFile  +
call sub_1018F8F  +
push esi  +
push eax  +
call sub_1018F8F  +
push offset asc_1002440  +
push eax  +
call sub_1018F8F  +
mov [ebp-624h] edi +
push offset dword_1029268  +
lea eax [ebp-624h] +
jmp loc_10221F8  +
***
mov eax 200h +
push eax  +
lea ecx [ebp-214h] +
push ecx  +
push eax  +
lea ecx [ebp-614h] +
push ecx  +
push eax  +
lea eax [ebp-414h] +
push eax  +
lea eax [ebp-628h] +
push eax  +
lea eax [ebp-620h] +
push eax  +
push esi  +
push dword ptr [ebp-61Ch]  +
lea ecx [ebp-690h] +
call near ptr byte_1021884+1  +
push eax  +
push offset aUnableToGetInt  +
call sub_1018811  +
push offset aCurrentInterne  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
push ebx  +
push eax  +
call sub_1018F8F  +
push offset asc_100F104  +
push eax  +
call sub_1018F8F  +
cmp dword ptr [ebp-618h] 0 +
jz loc_1022437  +
push dword ptr [ebp-618h]  +
call sub_101686F  +
mov edi eax +
jmp loc_102243C  +
mov edi offset aDefault +
push offset aConnection  +
push esi  +
call sub_1018F8F  +
push edi  +
push eax  +
call sub_1018F8F  +
push offset asc_100EDE8  +
push eax  +
call sub_1018F8F  +
push offset aProxyUsage_0  +
push esi  +
call sub_1018F8F  +
push dword ptr [ebp-620h]  +
call near ptr dword_1021B1C+3  +
mov edi offset asc_1002440 +
push edi  +
push esi  +
call sub_1018F8F  +
cmp dword ptr [ebp-620h] 1 +
jz loc_1022530  +
test byte ptr [ebp-620h] 2 +
jz loc_10224EF  +
lea eax [ebp-414h] +
push eax  +
call sub_101686F  +
push offset aProxyList_0  +
push esi  +
mov ebx eax +
call sub_1018F8F  +
push ebx  +
mov ecx eax +
call near ptr dword_1021B7C+3  +
push eax  +
push ecx  +
call sub_1018F8F  +
push edi  +
push eax  +
call sub_1018F8F  +
lea eax [ebp-614h] +
push eax  +
call sub_101686F  +
push offset aProxyBypass  +
push esi  +
mov ebx eax +
call sub_1018F8F  +
push ebx  +
mov ecx eax +
call near ptr dword_1021B7C+3  +
push eax  +
push ecx  +
call sub_1018F8F  +
push edi  +
push eax  +
call sub_1018F8F  +
cmp dword ptr [ebp-620h] 1 +
jz loc_1022530  +
test byte ptr [ebp-620h] 4 +
jz loc_1022530  +
lea eax [ebp-214h] +
push eax  +
call sub_101686F  +
push offset aAutoDiscoveryS  +
push esi  +
mov ebx eax +
call sub_1018F8F  +
push ebx  +
mov ecx eax +
call near ptr dword_1021B7C+3  +
push eax  +
push ecx  +
call sub_1018F8F  +
push edi  +
push eax  +
call sub_1018F8F  +
lea ecx [ebp-690h] +
mov byte ptr [ebp-4] 0 +
call near ptr dword_1021328+5  +
push dword ptr [ebp-61Ch]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call sub_1017EF4  +
cmp dword ptr [ebp-618h] 0 +
pop ecx  +
jz loc_1022564  +
push dword ptr [ebp-618h]  +
call sub_1017EF4  +
pop ecx  +
call sub_1024674  +
test eax eax +
jz loc_1022583  +
push offset aWindows2000S_0  +
push esi  +
call sub_1018F8F  +
push offset aThisCommandEve  +
push esi  +
call sub_1018F8F  +
call sub_1027E13  +
retn 8  +
***
xor esi esi +
cmp [ebp-61Ch] esi +
jz loc_10225A1  +
push dword ptr [ebp-61Ch]  +
call sub_1017EF4  +
pop ecx  +
cmp [ebp-618h] esi +
jz loc_10225B5  +
push dword ptr [ebp-618h]  +
call sub_1017EF4  +
pop ecx  +
mov [ebp-634h] esi +
push offset dword_1029268  +
lea eax [ebp-634h] +
jmp loc_10221F8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
and dword ptr [ebp-4] 0 +
push ebx  +
push esi  +
xor esi esi +
inc esi  +
cmp dword ptr [ebp+8] 0 +
jz loc_102260C  +
cmp [ebp+8] esi +
jz loc_102260C  +
push offset aInvalidArgumen  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp+8] esi +
push offset dword_1029268  +
lea eax [ebp+8] +
push eax  +
call _CxxThrowException  +
xor bl bl +
cmp [ebp+8] esi +
jnz loc_102262B  +
mov eax [ebp+0Ch] +
push offset aVerbose  +
push dword ptr [eax]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10225EC  +
inc bl  +
lea eax [ebp-4] +
push eax  +
lea eax [ebp-34h] +
push eax  +
call sub_1025754  +
test eax eax +
jnz loc_1022664  +
push offset aErrorCheckingV  +
push offset hFile  +
call sub_1018F8F  +
call ds:GetLastError  +
test eax eax +
jle loc_102265F  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+8] eax +
jmp loc_10225FE  +
***
cmp byte_102C3AD 0 +
push edi  +
mov esi offset hFile +
jnz loc_102268D  +
xor eax eax +
lea edi [ebp+8] +
stos   +
push dword ptr [ebp+8]  +
push offset aVersionOfBitsI  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018DB4  +
push dword ptr [ebp-30h]  +
push esi  +
call sub_1018F8F  +
cmp byte_102C3AD 0 +
jnz loc_10226B9  +
xor eax eax +
push offset asc_100C044  +
lea edi [ebp+8] +
stos   +
push dword ptr [ebp+8]  +
push esi  +
call sub_1018E02  +
push eax  +
call sub_1018F8F  +
test bl bl +
jz loc_1022795  +
cmp dword ptr [ebp-34h] 0 +
jz loc_1022795  +
cmp byte_102C3AD 0 +
jnz loc_10226DF  +
push offset aFileVersionFor  +
push esi  +
call sub_1018F8F  +
lea eax [ebp-34h] +
push eax  +
call sub_1025C91  +
cmp byte_102C3AD 0 +
mov edi offset asc_1002440 +
jnz loc_10226FD  +
push edi  +
push esi  +
call sub_1018F8F  +
push dword ptr [ebp-4]  +
call sub_10258BF  +
lea eax [ebp+8] +
push eax  +
push offset loc_1025B0A  +
mov dword ptr [ebp+8] 1 +
call sub_102400E  +
test eax eax +
jz loc_1022724  +
cmp dword ptr [ebp+8] 0 +
jz loc_102272F  +
push offset aPendingFileOpe  +
push esi  +
call sub_1018F8F  +
cmp byte_102C3AD 0 +
jnz loc_102273F  +
push edi  +
push esi  +
call sub_1018F8F  +
lea eax [ebp-34h] +
push eax  +
call sub_1025E61  +
cmp byte_102C3AD 0 +
jnz loc_102275C  +
push offset aCheckingBitsMa  +
push esi  +
call sub_1018F8F  +
lea eax [ebp-34h] +
push eax  +
call sub_102739C  +
test eax eax +
jnz loc_102278A  +
call ds:GetLastError  +
test eax eax +
jle loc_102277D  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push offset aErrorBitsConfi  +
call sub_1018811  +
jmp loc_1022795  +
push offset aSuccessNoBitsC  +
push esi  +
call sub_1018F8F  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
push ebx  +
push esi  +
xor ebx ebx +
xor esi esi +
inc ebx  +
push edi  +
mov [ebp-8] esi +
cmp [ebp+8] esi +
jz loc_10227DE  +
cmp [ebp+8] ebx +
jz loc_10227DE  +
push offset aInvalidArgumen  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp+8] ebx +
push offset dword_1029268  +
lea eax [ebp+8] +
push eax  +
call _CxxThrowException  +
mov byte ptr [ebp-1] 0 +
cmp [ebp+8] ebx +
jnz loc_1022800  +
mov eax [ebp+0Ch] +
push offset aForce  +
push dword ptr [eax]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10227BE  +
mov [ebp-1] bl +
call sub_1024754  +
test eax eax +
jz loc_1022821  +
push offset aThisCommandCan  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp+8] 80070666h +
jmp loc_10227D0  +
***
lea eax [ebp-8] +
push eax  +
lea eax [ebp-38h] +
push eax  +
call sub_1025754  +
test eax eax +
jnz loc_102284B  +
call ds:GetLastError  +
cmp eax esi +
jle loc_1022846  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+8] eax +
jmp loc_10227D0  +
***
cmp [ebp-38h] esi +
jnz loc_1022857  +
push offset aCannotExecuteT  +
jmp loc_102280E  +
***
call sub_1027661  +
test eax eax +
jnz loc_10228CA  +
mov ebx ds:GetLastError +
mov edi 0FFFFh +
mov esi 80070000h +
cmp [ebp-1] al +
jnz loc_102288A  +
call ebx  +
test eax eax +
jle loc_102287F  +
and eax edi +
or eax esi +
push eax  +
push offset aErrorFailedToR  +
call sub_1018811  +
push offset aForceModeWasSp  +
push offset hFile  +
call sub_1018F8F  +
push 0  +
call sub_1026CB2  +
call sub_1026F17  +
call sub_1027024  +
call sub_1027661  +
test eax eax +
jnz loc_10228CA  +
call ebx  +
test eax eax +
jle loc_10228BD  +
and eax edi +
or eax esi +
push eax  +
push offset aErrorFailedToR  +
call sub_1018811  +
jmp loc_10228D9  +
push offset aSuccessTheBits  +
push offset hFile  +
call sub_1018F8F  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
xor ebx ebx +
inc ebx  +
push esi  +
push edi  +
cmp [ebp+8] ebx +
jz loc_1022918  +
push offset aInvalidArgumen  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp+0Ch] ebx +
push offset dword_1029268  +
lea eax [ebp+0Ch] +
push eax  +
call _CxxThrowException  +
mov edi [ebp+0Ch] +
mov esi ds:_wcsicmp +
push offset aTrue_0  +
push dword ptr [edi]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1022935  +
mov [ebp+0Ch] ebx +
jmp loc_1022947  +
push offset aFalse_0  +
push dword ptr [edi]  +
call esi  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_10228F8  +
and [ebp+0Ch] eax +
call sub_1024754  +
test eax eax +
jnz loc_1022968  +
push offset aThisCommandCan  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp+0Ch] 80070666h +
jmp loc_102290A  +
***
lea eax [ebp+8] +
push eax  +
push offset aWevtapi_dll  +
call sub_1018B44  +
test eax eax +
jge loc_1022985  +
push eax  +
push offset aUnableToLoadWe  +
call sub_1018811  +
push offset aEvtopenchannel  +
push dword ptr [ebp+8]  +
call ds:GetProcAddress  +
mov ebx ds:GetLastError +
mov [ebp-4] eax +
mov edi 0FFFFh +
mov esi 80070000h +
test eax eax +
jnz loc_10229C8  +
push dword ptr [ebp+8]  +
call ds:FreeLibrary  +
call ebx  +
test eax eax +
jle loc_10229BD  +
and eax edi +
or eax esi +
push eax  +
push offset aErrorLoadingPr  +
call sub_1018811  +
push offset aEvtgetchannelc  +
push dword ptr [ebp+8]  +
call ds:GetProcAddress  +
mov [ebp-8] eax +
test eax eax +
jnz loc_10229FB  +
push dword ptr [ebp+8]  +
call ds:FreeLibrary  +
call ebx  +
test eax eax +
jle loc_10229F0  +
and eax edi +
or eax esi +
push eax  +
push offset aErrorLoading_0  +
call sub_1018811  +
push offset aEvtsetchannelc  +
push dword ptr [ebp+8]  +
call ds:GetProcAddress  +
mov [ebp-0Ch] eax +
test eax eax +
jnz loc_1022A2E  +
push dword ptr [ebp+8]  +
call ds:FreeLibrary  +
call ebx  +
test eax eax +
jle loc_1022A23  +
and eax edi +
or eax esi +
push eax  +
push offset aErrorLoading_1  +
call sub_1018811  +
push offset aEvtsavechannel  +
push dword ptr [ebp+8]  +
call ds:GetProcAddress  +
mov [ebp-10h] eax +
test eax eax +
jnz loc_1022A61  +
push dword ptr [ebp+8]  +
call ds:FreeLibrary  +
call ebx  +
test eax eax +
jle loc_1022A56  +
and eax edi +
or eax esi +
push eax  +
push offset aErrorLoading_2  +
call sub_1018811  +
push 0  +
push offset aMicrosoftWindo  +
push 0  +
call dword ptr [ebp-4]  +
lea ecx [ebp-14h] +
push ecx  +
lea ecx [ebp-24h] +
push ecx  +
push 10h  +
push 0  +
push 0  +
push eax  +
mov [ebp-4] eax +
mov dword ptr [ebp-18h] 0Dh +
call dword ptr [ebp-8]  +
test eax eax +
jnz loc_1022AAC  +
call ebx  +
test eax eax +
jle loc_1022A97  +
and eax edi +
or eax esi +
mov esi eax +
push esi  +
push offset aUnableToGetMic  +
call sub_1018811  +
mov [ebp+0Ch] esi +
jmp loc_102290A  +
***
mov eax [ebp+0Ch] +
cmp [ebp-24h] eax +
jz loc_1022B11  +
mov [ebp-24h] eax +
lea eax [ebp-24h] +
push eax  +
push 0  +
push 0  +
push dword ptr [ebp-4]  +
call dword ptr [ebp-0Ch]  +
test eax eax +
jnz loc_1022ADD  +
call ebx  +
test eax eax +
jle loc_1022AD3  +
and eax edi +
or eax esi +
mov esi eax +
push esi  +
push offset aErrorSettingMi  +
jmp loc_1022A9F  +
***
push 0  +
push dword ptr [ebp-4]  +
call dword ptr [ebp-10h]  +
test eax eax +
jnz loc_1022AFD  +
call ebx  +
test eax eax +
jle loc_1022AF3  +
and eax edi +
or eax esi +
mov esi eax +
push esi  +
push offset aErrorSavingMic  +
jmp loc_1022A9F  +
***
cmp dword ptr [ebp+0Ch] 0 +
jz loc_1022B0A  +
push offset aMicrosoftWin_0  +
jmp loc_1022B21  +
push offset aMicrosoftWin_1  +
jmp loc_1022B21  +
test eax eax +
jz loc_1022B1C  +
push offset aMicrosoftWin_2  +
jmp loc_1022B21  +
push offset aMicrosoftWin_3  +
push offset hFile  +
call sub_1018F8F  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
push offset aPeercachingMan  +
push offset hFile  +
call sub_1018F8F  +
retn 8  +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push offset aPeercachingCon  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
mov edi offset asc_1002440 +
push edi  +
push esi  +
call sub_1018F8F  +
mov ebx [ebp+8] +
mov eax ebx +
and eax 1 +
push eax  +
call sub_1019877  +
push eax  +
push offset aEnableDownload  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push edi  +
push esi  +
call sub_1018F8F  +
shr ebx 1 +
and ebx 1 +
push ebx  +
call sub_1019877  +
push eax  +
push offset aEnableServingT  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push edi  +
push esi  +
call sub_1018F8F  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_4] +
push esi  +
mov esi [eax] +
call sub_101A0FE  +
push [ebp+arg_4]  +
mov eax [esi] +
push offset dword_10102B4  +
push esi  +
call dword ptr [eax]  +
pop esi  +
pop ebp  +
retn 8  +
***
push offset aCacheManagemen  +
push offset hFile  +
call sub_1018F8F  +
retn 8  +
***
call __EH_prolog3_GS  +
and dword ptr [ebp-4] 0 +
and dword ptr [ebp-24h] 0 +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
push eax  +
mov byte ptr [ebp-4] 1 +
call dword ptr [ecx+0Ch]  +
push eax  +
push offset aUnableToGetRec  +
call sub_101766D  +
push dword ptr [ebp-24h]  +
mov esi [ebp+8] +
call sub_1017EDF  +
and dword ptr [ebp-24h] 0 +
mov eax [esi] +
pop ecx  +
lea ecx [ebp-24h] +
push ecx  +
push esi  +
call dword ptr [eax+10h]  +
push eax  +
push offset aUnableToGetR_0  +
call sub_101766D  +
push offset asc_1002440  +
lea eax [ebp-24h] +
push eax  +
push offset dword_10083F8  +
lea eax [ebp-20h] +
push eax  +
push offset hFile  +
call sub_1019022  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1019007  +
push eax  +
call sub_1018F8F  +
push dword ptr [ebp-24h]  +
call sub_1017EDF  +
and dword ptr [ebp-24h] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
pop ecx  +
lea ecx [ebp+8] +
call sub_101A0FE  +
call sub_1027DFF  +
retn 4  +
***
call __EH_prolog3_GS  +
xor ebx ebx +
mov [ebp-4] ebx +
mov [ebp-30h] ebx +
mov eax [ebp+8] +
lea edx [ebp-20h] +
push edx  +
mov [ebp-34h] ebx +
mov [ebp-38h] ebx +
mov ecx [eax] +
push eax  +
mov byte ptr [ebp-4] 1 +
call dword ptr [ecx+0Ch]  +
push eax  +
mov esi offset aUnableToGetRec +
push esi  +
call sub_101766D  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-50h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
push eax  +
push offset aUnableToGetAcc  +
call sub_101766D  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-48h] +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
push eax  +
push offset aUnableToGetF_4  +
call sub_101766D  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-40h] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
push eax  +
push offset aUnableToGetF_5  +
call sub_101766D  +
push dword ptr [ebp-30h]  +
mov edi [ebp+8] +
call sub_1017EDF  +
pop ecx  +
lea ecx [ebp-30h] +
push ecx  +
mov [ebp-30h] ebx +
mov eax [edi] +
push edi  +
call dword ptr [eax+10h]  +
push eax  +
push offset aUnableToGetR_1  +
call sub_101766D  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-38h] +
push edx  +
lea edx [ebp-34h] +
push edx  +
push eax  +
call dword ptr [ecx+24h]  +
push eax  +
push offset aUnableToGetF_6  +
call sub_101766D  +
mov eax [ebp+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
mov edi eax +
push edi  +
push esi  +
call sub_101766D  +
xor eax eax +
cmp edi ebx +
setz al  +
mov [ebp-28h] eax +
xor eax eax +
lea edi [ebp-2Ch] +
stos   +
lea edi [ebp-24h] +
stos   +
mov ebx offset asc_1002440 +
push ebx  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [ebp-2Ch]  +
mov esi offset hFile +
push offset aId  +
push dword ptr [ebp-24h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1019022  +
push eax  +
call sub_1018F8F  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push ebx  +
lea edi [ebp-2Ch] +
stos   +
lea eax [ebp-30h] +
push eax  +
push dword ptr [ebp-24h]  +
push offset aOriginUrl  +
push dword ptr [ebp-2Ch]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1019007  +
push eax  +
call sub_1018F8F  +
xor eax eax +
lea edi [ebp-24h] +
stos   +
push ebx  +
push dword ptr [ebp-28h]  +
lea edi [ebp-2Ch] +
stos   +
call sub_1019877  +
push eax  +
push dword ptr [ebp-24h]  +
push offset aValidated  +
push dword ptr [ebp-2Ch]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
xor eax eax +
lea edi [ebp-28h] +
stos   +
push ebx  +
lea edi [ebp-24h] +
stos   +
lea eax [ebp-50h] +
push eax  +
push dword ptr [ebp-28h]  +
push offset aLastAccessTime  +
push dword ptr [ebp-24h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_10195A8  +
push eax  +
call sub_1018F8F  +
xor eax eax +
lea edi [ebp-28h] +
stos   +
push ebx  +
lea edi [ebp-24h] +
stos   +
lea eax [ebp-48h] +
push eax  +
push dword ptr [ebp-28h]  +
push offset aFileModificati  +
push dword ptr [ebp-24h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_10195A8  +
push eax  +
call sub_1018F8F  +
push ebx  +
push dword ptr [ebp-3Ch]  +
xor eax eax +
push dword ptr [ebp-40h]  +
lea edi [ebp-28h] +
stos   +
push dword ptr [ebp-28h]  +
lea edi [ebp-24h] +
push offset aFileSize  +
stos   +
push dword ptr [ebp-24h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
xor eax eax +
lea edi [ebp-28h] +
stos   +
push dword ptr [ebp-28h]  +
lea edi [ebp-24h] +
push offset aRanges_0  +
stos   +
push dword ptr [ebp-24h]  +
push esi  +
call sub_1018DB4  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018E02  +
xor edi edi +
cmp [ebp-34h] edi +
jbe loc_10230CC  +
mov [ebp-2Ch] edi +
test edi edi +
jz loc_1023098  +
push offset asc_100240C  +
push esi  +
call sub_1018F8F  +
mov eax [ebp-38h] +
mov ecx [ebp-2Ch] +
add eax ecx +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+8]  +
push offset asc_1010BB4  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
push esi  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
add dword ptr [ebp-2Ch] 10h +
inc edi  +
cmp edi [ebp-34h] +
jb loc_1023089  +
push ebx  +
push esi  +
call sub_1018F8F  +
push dword ptr [ebp-30h]  +
call sub_1017EDF  +
and dword ptr [ebp-30h] 0 +
or dword ptr [ebp-4] 0FFFFFFFFh +
pop ecx  +
lea ecx [ebp+8] +
call sub_101A0FE  +
call sub_1027DFF  +
retn 4  +
***
call __EH_prolog3  +
xor ebx ebx +
xor edi edi +
mov [ebp-14h] ebx +
mov [ebp-4] ebx +
mov [ebp-18h] ebx +
lea eax [ebp-18h] +
push eax  +
push offset dword_102C3B4  +
mov byte ptr [ebp-4] 1 +
call sub_1022BC9  +
push eax  +
push offset aUnableToGetCac  +
call sub_1018811  +
mov esi [ebp-18h] +
lea ecx [ebp-14h] +
call sub_101A0FE  +
mov eax [esi] +
lea ecx [ebp-14h] +
push ecx  +
push esi  +
call dword ptr [eax+24h]  +
push eax  +
push offset aUnableToEnumRe  +
call sub_101766D  +
mov [ebp-10h] ebx +
mov byte ptr [ebp-4] 2 +
jmp loc_1023188  +
push ecx  +
lea eax [ebp-10h] +
mov ecx esp +
mov [ebp-1Ch] esp +
push eax  +
call sub_101A29E  +
cmp [ebp+8] bl +
jz loc_1023182  +
call sub_1022E1C  +
push offset asc_1002440  +
push offset hFile  +
call sub_1018F8F  +
jmp loc_1023187  +
call sub_1022D73  +
inc edi  +
mov esi [ebp-14h] +
lea ecx [ebp-10h] +
call sub_101A0FE  +
mov eax [esi] +
push ebx  +
lea ecx [ebp-10h] +
push ecx  +
push 1  +
push esi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jz loc_1023158  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 1 +
call sub_101A0FE  +
lea ecx [ebp-18h] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_101A0FE  +
mov eax edi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp dword ptr [ebp+8] 2 +
ja loc_1023288  +
call sub_1023A04  +
test al al +
jnz loc_1023213  +
push offset aPeercachingSer  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+8] +
push eax  +
mov dword ptr [ebp+8] 1 +
call _CxxThrowException  +
push esi  +
xor esi esi +
cmp [ebp+8] esi +
mov byte ptr [ebp-4] 0 +
jle loc_1023240  +
mov eax [ebp+0Ch] +
push offset aVerbose  +
push dword ptr [eax+esi*4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_102327E  +
inc esi  +
cmp esi [ebp+8] +
mov byte ptr [ebp-4] 1 +
jl loc_102321F  +
call sub_10176AB  +
push dword ptr [ebp-4]  +
call sub_10230F9  +
cmp byte_102C3AD 0 +
pop esi  +
jnz locret_102327A  +
push offset aCacheRecordS_  +
push 0  +
push eax  +
push offset aListed  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
leave   +
retn 8  +
***
push offset aInvalidArgumen  +
jmp loc_10231F4  +
***
push offset aInvalidNumberO  +
jmp loc_10231F4  +
***
push 28h  +
mov eax offset word_1029082 +
call __EH_prolog3_GS  +
mov edi [ebp+8] +
mov esi [ebp+0Ch] +
xor ebx ebx +
lea eax [edi-1] +
inc ebx  +
cmp eax ebx +
ja loc_10233A7  +
call sub_1023998  +
test al al +
jnz loc_10232E0  +
push offset aPeercachingCli  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp-34h] ebx +
push offset dword_1029268  +
lea eax [ebp-34h] +
push eax  +
call _CxxThrowException  +
lea eax [ebp-20h] +
push eax  +
push dword ptr [esi]  +
call ds:CLSIDFromString  +
push eax  +
push offset aInvalidRecordI  +
call sub_1018811  +
xor ebx ebx +
mov [ebp-21h] bl +
cmp edi 2 +
jnz loc_1023319  +
push offset aVerbose  +
push dword ptr [esi+4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1023319  +
mov byte ptr [ebp-21h] 1 +
call sub_10176AB  +
mov [ebp-2Ch] ebx +
lea eax [ebp-2Ch] +
push eax  +
push offset dword_102C3B4  +
mov [ebp-4] ebx +
call sub_1022BC9  +
push eax  +
push offset aUnableToGetCac  +
call sub_1018811  +
mov [ebp-28h] ebx +
mov esi [ebp-2Ch] +
lea ecx [ebp-28h] +
mov byte ptr [ebp-4] 1 +
call sub_101A0FE  +
mov eax [esi] +
lea ecx [ebp-28h] +
push ecx  +
lea ecx [ebp-20h] +
push ecx  +
push esi  +
call dword ptr [eax+28h]  +
push eax  +
push offset aUnableToGetPee  +
call sub_101766D  +
push ecx  +
lea eax [ebp-28h] +
mov ecx esp +
mov [ebp-30h] esp +
push eax  +
call sub_101A29E  +
cmp [ebp-21h] bl +
jz loc_1023383  +
call sub_1022E1C  +
jmp loc_1023388  +
call sub_1022D73  +
lea ecx [ebp-28h] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-2Ch] +
call sub_101A0FE  +
call sub_1027DFF  +
retn 8  +
***
push offset aInvalidNumberO  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp-30h] ebx +
push offset dword_1029268  +
lea eax [ebp-30h] +
jmp loc_10232DA  +
***
push 20h  +
mov eax offset dword_10290BC +
call __EH_prolog3_GS  +
mov esi [ebp+0Ch] +
xor edi edi +
inc edi  +
cmp [ebp+8] edi +
jz loc_1023402  +
push offset aInvalidNumberO  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp-24h] edi +
push offset dword_1029268  +
lea eax [ebp-24h] +
push eax  +
call _CxxThrowException  +
call sub_1023998  +
test al al +
jnz loc_1023412  +
push offset aPeercachingCli  +
jmp loc_10233E7  +
***
lea eax [ebp-20h] +
push eax  +
push dword ptr [esi]  +
call ds:CLSIDFromString  +
push eax  +
push offset aInvalidRecordI  +
call sub_1018811  +
call sub_10176AB  +
xor ebx ebx +
mov [ebp-28h] ebx +
lea eax [ebp-28h] +
push eax  +
push offset dword_102C3B4  +
mov [ebp-4] ebx +
call sub_1022BC9  +
push eax  +
push offset aUnableToGetCac  +
call sub_1018811  +
mov [ebp-24h] ebx +
mov eax [ebp-28h] +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
push eax  +
mov byte ptr [ebp-4] 1 +
call dword ptr [ecx+30h]  +
cmp eax edi +
jnz loc_1023486  +
push offset aUnableToDele_0  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp-2Ch] edi +
push offset dword_1029268  +
lea eax [ebp-2Ch] +
jmp loc_10233FC  +
***
push eax  +
push offset aUnableToDelete  +
call sub_101766D  +
cmp byte_102C3AD bl +
jnz loc_10234BD  +
push offset aWasDeleted_  +
lea eax [ebp-20h] +
push eax  +
push offset aRecord  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1019022  +
push eax  +
call sub_1018F8F  +
lea ecx [ebp-24h] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-28h] +
call sub_101A0FE  +
call sub_1027DFF  +
retn 8  +
***
push 8  +
mov eax offset word_10290F6 +
call __EH_prolog3  +
xor edi edi +
inc edi  +
cmp [ebp+8] edi +
jz loc_1023515  +
push offset aInvalidNumberO  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp+0Ch] edi +
push offset dword_1029268  +
lea eax [ebp+0Ch] +
push eax  +
call _CxxThrowException  +
call sub_1023998  +
test al al +
jnz loc_102353A  +
push offset aPeercachingCli  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp-10h] edi +
push offset dword_1029268  +
lea eax [ebp-10h] +
jmp loc_102350F  +
***
call sub_10176AB  +
xor ebx ebx +
mov [ebp+8] ebx +
lea eax [ebp+8] +
push eax  +
push offset dword_102C3B4  +
mov [ebp-4] ebx +
call sub_1022BC9  +
push eax  +
push offset aUnableToGetCac  +
call sub_1018811  +
mov [ebp-14h] ebx +
mov edx [ebp+0Ch] +
mov eax [ebp+8] +
push dword ptr [edx]  +
mov ecx [eax] +
push eax  +
mov byte ptr [ebp-4] 1 +
call dword ptr [ecx+34h]  +
mov esi eax +
push esi  +
push offset aUnableToDele_1  +
call sub_101766D  +
cmp byte_102C3AD bl +
jnz loc_10235A4  +
cmp esi edi +
jnz loc_1023595  +
push offset aNoMatchingReco  +
jmp loc_102359A  +
push offset aRecordsWereDel  +
push offset hFile  +
call sub_1018F8F  +
lea ecx [ebp-14h] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z +
call __EH_prolog3  +
cmp dword ptr [ebp+8] 0 +
jz loc_10235FE  +
push offset aInvalidNumberO  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp-10h] +
push eax  +
mov dword ptr [ebp-10h] 1 +
call _CxxThrowException  +
call sub_10176AB  +
and dword ptr [ebp+8] 0 +
and dword ptr [ebp-4] 0 +
lea eax [ebp+8] +
push eax  +
push offset dword_102C3B4  +
call sub_1022BC9  +
push eax  +
push offset aUnableToGetCac  +
call sub_1018811  +
mov eax [ebp+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+2Ch]  +
push eax  +
push offset aUnableToPurgeC  +
call sub_101766D  +
cmp byte_102C3AD 0 +
jnz loc_1023650  +
push offset aTheLocalCacheW  +
push offset hFile  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 8  +
mov eax offset byte_102911E +
call __EH_prolog3  +
cmp dword ptr [ebp+8] 0 +
jz loc_102369F  +
push offset aInvalidNumberO  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp-10h] +
push eax  +
mov dword ptr [ebp-10h] 1 +
call _CxxThrowException  +
call sub_10176AB  +
and dword ptr [ebp+8] 0 +
and dword ptr [ebp-4] 0 +
lea eax [ebp+8] +
push eax  +
push offset dword_102C3B4  +
call sub_1022BC9  +
push eax  +
push offset aUnableToGetCac  +
call sub_1018811  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
push eax  +
push offset aUnableToGetC_1  +
call sub_101766D  +
push offset aOfTheSystemVol  +
push 0  +
push dword ptr [ebp-14h]  +
push offset hFile  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z +
call __EH_prolog3  +
cmp dword ptr [ebp+8] 1 +
jz loc_1023746  +
push offset aInvalidNumberO  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+0Ch] +
push eax  +
mov dword ptr [ebp+0Ch] 1 +
call _CxxThrowException  +
call sub_10176AB  +
and dword ptr [ebp+8] 0 +
and dword ptr [ebp-4] 0 +
lea eax [ebp+8] +
push eax  +
push offset dword_102C3B4  +
call sub_1022BC9  +
push eax  +
push offset aUnableToGetCac  +
call sub_1018811  +
mov eax [ebp+0Ch] +
push dword ptr [eax]  +
call sub_1019134  +
mov [ebp-10h] eax +
mov eax [ebp+8] +
push dword ptr [ebp-10h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
cmp eax 1 +
jnz loc_1023796  +
push offset aCacheLimitNotS  +
push offset hFile  +
jmp loc_10237E2  +
push eax  +
push offset aUnableToSetCac  +
call sub_101766D  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
push eax  +
push offset aUnableToGetC_1  +
call sub_101766D  +
cmp byte_102C3AD 0 +
jnz loc_10237E7  +
push offset aOfTheVolume_  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aCacheLimitSetT  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 8  +
mov eax offset byte_102911E +
call __EH_prolog3  +
cmp dword ptr [ebp+8] 0 +
jz loc_1023836  +
push offset aInvalidNumberO  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp-10h] +
push eax  +
mov dword ptr [ebp-10h] 1 +
call _CxxThrowException  +
call sub_10176AB  +
and dword ptr [ebp+8] 0 +
and dword ptr [ebp-4] 0 +
lea eax [ebp+8] +
push eax  +
push offset dword_102C3B4  +
call sub_1022BC9  +
push eax  +
push offset aUnableToGetCac  +
call sub_1018811  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
push eax  +
push offset aUnableToGetMax  +
call sub_101766D  +
push offset asc_1002440  +
push 0  +
push dword ptr [ebp-14h]  +
push offset hFile  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z +
call __EH_prolog3  +
cmp dword ptr [ebp+8] 1 +
jz loc_10238DD  +
push offset aInvalidNumberO  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+0Ch] +
push eax  +
mov dword ptr [ebp+0Ch] 1 +
call _CxxThrowException  +
call sub_10176AB  +
and dword ptr [ebp+8] 0 +
and dword ptr [ebp-4] 0 +
lea eax [ebp+8] +
push eax  +
push offset dword_102C3B4  +
call sub_1022BC9  +
push eax  +
push offset aUnableToGetCac  +
call sub_1018811  +
mov eax [ebp+0Ch] +
push dword ptr [eax]  +
call sub_1019134  +
mov ecx [ebp+8] +
mov edx [ecx] +
push eax  +
push ecx  +
call dword ptr [edx+18h]  +
push eax  +
push offset aUnableToSetC_1  +
call sub_101766D  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
push eax  +
push offset aUnableToGetC_1  +
call sub_101766D  +
cmp byte_102C3AD 0 +
jnz loc_1023968  +
push offset aSeconds_  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aCacheExpiratio  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push offset aPeerListManage  +
push offset hFile  +
call sub_1018F8F  +
retn 8  +
***
call __EH_prolog3  +
xor eax eax +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
mov [ebp-4] eax +
call sub_10176AB  +
lea eax [ebp-10h] +
push eax  +
push offset dword_102C3B4  +
call sub_1022BC9  +
push eax  +
push offset aUnableToOpenIn  +
call sub_1018811  +
mov eax [ebp-10h] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
push eax  +
push offset aUnableToRetrie  +
call sub_1018811  +
mov bl [ebp-14h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
and bl 1 +
call sub_101A0FE  +
mov al bl +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
xor eax eax +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
mov [ebp-4] eax +
call sub_10176AB  +
lea eax [ebp-10h] +
push eax  +
push offset dword_102C3B4  +
call sub_1022BC9  +
push eax  +
push offset aUnableToOpenIn  +
call sub_1018811  +
mov eax [ebp-10h] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
call dword ptr [ecx+1Ch]  +
push eax  +
push offset aUnableToRetrie  +
call sub_1018811  +
mov ebx [ebp-14h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
shr ebx 1 +
lea ecx [ebp-10h] +
and bl 1 +
call sub_101A0FE  +
mov al bl +
call __EH_epilog3  +
retn   +
***
call __EH_prolog3  +
mov eax [ebp+8] +
and dword ptr [ebp-10h] 0 +
or dword ptr [ebp-18h] 0FFFFFFFFh +
or dword ptr [ebp-14h] 0FFFFFFFFh +
mov ecx [eax] +
and dword ptr [ebp-4] 0 +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-18h] +
push edx  +
push eax  +
call dword ptr [ecx+10h]  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-14h] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
mov eax [ebp-10h] +
test eax eax +
jnz loc_1023AC1  +
mov eax offset aUnknown +
mov edi offset asc_1002440 +
push edi  +
push eax  +
push offset asc_10115F4  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push edi  +
push dword ptr [ebp-14h]  +
call sub_1019877  +
push eax  +
push offset aAvailable  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push edi  +
push dword ptr [ebp-18h]  +
call sub_1019877  +
push eax  +
push offset aAuthenticated  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push edi  +
push esi  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 4  +
***
push 8  +
mov eax offset byte_102911E +
call __EH_prolog3  +
cmp dword ptr [ebp+8] 0 +
jz loc_1023B7C  +
push offset aInvalidNumberO  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp-10h] 1 +
push offset dword_1029268  +
lea eax [ebp-10h] +
push eax  +
call _CxxThrowException  +
call sub_10176AB  +
call sub_1023998  +
test al al +
jnz loc_1023BAA  +
push offset aPeercachingCli  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp-14h] 1 +
push offset dword_1029268  +
lea eax [ebp-14h] +
jmp loc_1023B76  +
***
and dword ptr [ebp+8] 0 +
and dword ptr [ebp-4] 0 +
lea eax [ebp+8] +
push eax  +
push offset dword_102C3B4  +
call sub_1022BC9  +
push eax  +
push offset aUnableToOpenPe  +
call sub_1018811  +
mov eax [ebp+8] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+3Ch]  +
push eax  +
push offset aUnableToClear  +
call sub_101766D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
push 4  +
mov eax offset __ehhandler$?CallUnexpected@@YAXPBU_s_ESTypeList@@@Z_5 +
call __EH_prolog3  +
xor eax eax +
mov [ebp-10h] eax +
mov [ebp-4] eax +
cmp [ebp+8] eax +
jz loc_1023C35  +
push offset aInvalidNumberO  +
push offset hFile  +
call sub_1018F8F  +
push offset dword_1029268  +
lea eax [ebp+8] +
push eax  +
mov dword ptr [ebp+8] 1 +
call _CxxThrowException  +
call sub_10176AB  +
call sub_1023998  +
test al al +
jnz loc_1023C4A  +
push offset aPeercachingCli  +
jmp loc_1023C16  +
***
lea eax [ebp-10h] +
push eax  +
push offset dword_102C3B4  +
call sub_1022BC9  +
push eax  +
push offset aUnableToOpenPe  +
call sub_1018811  +
mov eax [ebp-10h] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
push eax  +
push offset aUnableToDiscov  +
call sub_101766D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call sub_101A0FE  +
call __EH_epilog3  +
retn 8  +
***
call __EH_prolog3  +
xor ebx ebx +
xor edi edi +
mov [ebp-14h] ebx +
mov [ebp-4] ebx +
mov [ebp-18h] ebx +
mov [ebp-10h] ebx +
lea eax [ebp-18h] +
push eax  +
push offset dword_102C3B4  +
mov byte ptr [ebp-4] 2 +
call sub_1022BC9  +
push eax  +
push offset aUnableToOpenPe  +
call sub_1018811  +
mov esi [ebp-18h] +
lea ecx [ebp-14h] +
call sub_101A0FE  +
mov eax [esi] +
lea ecx [ebp-14h] +
push ecx  +
push esi  +
call dword ptr [eax+38h]  +
push eax  +
push offset aUnableToEnumRe  +
call sub_101766D  +
jmp loc_1023D00  +
push ecx  +
lea eax [ebp-10h] +
mov ecx esp +
mov [ebp-1Ch] esp +
push eax  +
call sub_101A29E  +
call sub_1023A72  +
inc edi  +
mov esi [ebp-14h] +
lea ecx [ebp-10h] +
call sub_101A0FE  +
mov eax [esi] +
push ebx  +
lea ecx [ebp-10h] +
push ecx  +
push 1  +
push esi  +
call dword ptr [eax+0Ch]  +
test eax eax +
jz loc_1023CEB  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 1 +
call sub_101A0FE  +
lea ecx [ebp-18h] +
mov [ebp-4] bl +
call sub_101A0FE  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call sub_101A0FE  +
mov eax edi +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp dword ptr [ebp+8] 2 +
ja loc_1023DFD  +
push ebx  +
xor ebx ebx +
push esi  +
xor esi esi +
inc ebx  +
cmp [ebp+8] esi +
mov byte ptr [ebp-4] 0 +
jle loc_1023D8E  +
mov eax [ebp+0Ch] +
push offset aVerbose  +
push dword ptr [eax+esi*4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_1023DA3  +
inc esi  +
cmp esi [ebp+8] +
mov [ebp-4] bl +
jl loc_1023D6E  +
call sub_10176AB  +
call sub_1023998  +
test al al +
jnz loc_1023DC3  +
push offset aPeercachingCli  +
jmp loc_1023DA8  +
push offset aInvalidArgumen  +
push offset hFile  +
call sub_1018F8F  +
mov [ebp+8] ebx +
push offset dword_1029268  +
lea eax [ebp+8] +
push eax  +
call _CxxThrowException  +
push dword ptr [ebp-4]  +
call sub_1023C90  +
cmp byte_102C3AD 0 +
pop esi  +
pop ebx  +
jnz locret_1023DF9  +
push offset aPeerS_  +
push 0  +
push eax  +
push offset aListed  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
leave   +
retn 8  +
***
push offset aInvalidNumberO  +
push offset hFile  +
call sub_1018F8F  +
mov dword ptr [ebp+8] 1 +
jmp loc_1023DB5  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
push [ebp+arg_4]  +
mov ecx edx +
mov edi eax +
call sub_1017945  +
test eax eax +
jl loc_1023E3A  +
mov eax [ebp+arg_0] +
call sub_101790E  +
jmp loc_1023E3D  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jge loc_1023E68  +
mov ecx eax +
and ecx 1FFF0000h +
cmp ecx 70000h +
jnz loc_1023E68  +
and eax 0FFFFh +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push [ebp+lpFileName]  +
call ds:GetFileAttributesW  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
push 0  +
mov esi ecx +
call ds:SetLastError  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [ebp+dwErrCode] ebx +
mov [ebp+dwHandle] ebx +
mov [ebp+lpBuffer] ebx +
mov [ebp+puLen] ebx +
cmp [ebp+lpFileName] ebx +
jz loc_1023F73  +
mov esi [ebp+arg_4] +
cmp esi ebx +
jz loc_1023F73  +
push [ebp+lpFileName]  +
xor eax eax +
mov edi esi +
stos   +
stos   +
call sub_1023E71  +
test eax eax +
jnz loc_1023EE9  +
mov [ebp+dwErrCode] 2 +
jmp loc_1023F85  +
lea eax [ebp+dwHandle] +
push eax  +
push [ebp+lpFileName]  +
call GetFileVersionInfoSizeW  +
mov edi eax +
test edi edi +
jnz loc_1023F06  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_1023F85  +
push edi  +
call sub_1019242  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jnz loc_1023F1C  +
mov [ebp+dwErrCode] 8 +
jmp loc_1023F7A  +
push ebx  +
push edi  +
push [ebp+dwHandle]  +
push [ebp+lpFileName]  +
call GetFileVersionInfoW  +
test eax eax +
jz loc_1023F44  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset SubBlock  +
push ebx  +
call VerQueryValueW  +
test eax eax +
jnz loc_1023F4F  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_1023F7A  +
mov eax [ebp+lpBuffer] +
mov cx [eax+0Ah] +
mov [esi] cx +
mov cx [eax+8] +
mov [esi+2] cx +
mov cx [eax+0Eh] +
mov [esi+4] cx +
mov ax [eax+0Ch] +
mov [esi+6] ax +
jmp loc_1023F7A  +
mov [ebp+dwErrCode] 0Dh +
test ebx ebx +
jz loc_1023F85  +
push ebx  +
call sub_1017EF4  +
pop ecx  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+dwErrCode] eax +
pop edi  +
pop esi  +
setz al  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
test cx cx +
jl loc_1024003  +
mov eax [ebp+arg_8] +
test ax ax +
jl loc_1024003  +
cmp cx ax +
jz loc_1023FC4  +
sbb eax eax +
and eax 0FFFFFFFEh +
inc eax  +
jmp loc_1024005  +
shr ecx 10h +
test cx cx +
jl loc_1024003  +
shr eax 10h +
test ax ax +
jl loc_1024003  +
cmp cx ax +
jnz loc_1023FBC  +
mov ecx [ebp+arg_4] +
test cx cx +
jl loc_1024003  +
mov eax [ebp+arg_C] +
test ax ax +
jl loc_1024003  +
cmp cx ax +
jnz loc_1023FBC  +
shr ecx 10h +
test cx cx +
jl loc_1024003  +
shr eax 10h +
test ax ax +
jl loc_1024003  +
cmp cx ax +
jnz loc_1023FBC  +
xor eax eax +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push edi  +
xor eax eax +
lea ecx [ebp+hKey] +
push ecx  +
inc eax  +
xor edi edi +
push eax  +
push edi  +
push offset aSystemCurrentc  +
push 80000002h  +
mov [ebp+dwErrCode] edi +
mov [ebp+hKey] edi +
mov [ebp+cb] edi +
mov [ebp+var_10] eax +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_102411C  +
push ebx  +
push esi  +
mov esi ds:RegQueryValueExW +
lea eax [ebp+cb] +
push eax  +
push edi  +
push edi  +
push edi  +
mov ebx offset aPendingfileren +
push ebx  +
push [ebp+hKey]  +
call esi  +
test eax eax +
jnz loc_102411A  +
push eax  +
push [ebp+cb]  +
call sub_1019232  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jnz loc_1024085  +
mov [ebp+dwErrCode] 0Eh +
jmp loc_102411A  +
push [ebp+cb]  +
push 0  +
push edi  +
call memset  +
add esp 0Ch +
lea eax [ebp+cb] +
push eax  +
push edi  +
push 0  +
push 0  +
push ebx  +
push [ebp+hKey]  +
call esi  +
test eax eax +
jz loc_10240AB  +
mov [ebp+dwErrCode] eax +
jmp loc_102411A  +
mov ebx [ebp+cb] +
test ebx ebx +
jz loc_102411A  +
mov eax edi +
mov ecx edi +
lea esi [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_10240B9  +
sub eax esi +
sar eax 1 +
lea esi [edi+eax*2+2] +
add ebx edi +
cmp esi ebx +
jnb loc_102411A  +
cmp [ebp+arg_0] 0 +
jz loc_10240E3  +
push esi  +
push ecx  +
call [ebp+arg_0]  +
test eax eax +
jnz loc_10240E3  +
and [ebp+var_10] eax +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10240E8  +
sub eax edx +
sar eax 1 +
lea ecx [esi+eax*2+2] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
test si si +
jnz loc_10240FF  +
sub eax edx +
sar eax 1 +
lea esi [ecx+eax*2+2] +
mov eax [ebp+cb] +
add eax edi +
cmp esi eax +
jb loc_10240D1  +
pop esi  +
pop ebx  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_1024128  +
mov ecx [ebp+var_10] +
mov [eax] ecx +
cmp [ebp+hKey] 0 +
jz loc_1024137  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
test edi edi +
jz loc_1024142  +
push edi  +
call sub_1017EF4  +
pop ecx  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+dwErrCode] eax +
pop edi  +
setz al  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
push 4  +
pop esi  +
xor edi edi +
mov [ebp+phkResult] ebx +
mov [ebp+Type] esi +
mov [ebp+cbData] esi +
cmp [ebp+lpData] ebx +
jz loc_10241CF  +
cmp [ebp+hKey] ebx +
jz loc_10241CF  +
cmp [ebp+lpSubKey] ebx +
jz loc_10241CF  +
cmp [ebp+lpValueName] ebx +
jz loc_10241CF  +
lea eax [ebp+phkResult] +
push eax  +
push 1  +
push ebx  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
cmp eax ebx +
jnz loc_10241BF  +
lea eax [ebp+cbData] +
push eax  +
push [ebp+lpData]  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
cmp eax ebx +
jz loc_10241C3  +
mov edi eax +
jmp loc_10241D4  +
cmp [ebp+Type] esi +
jz loc_10241D4  +
mov edi 70Ch +
jmp loc_10241D4  +
mov edi 0A0h +
cmp [ebp+phkResult] ebx +
jz loc_10241E2  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
push edi  +
call ds:SetLastError  +
xor eax eax +
cmp edi ebx +
pop edi  +
pop esi  +
setz al  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+cbData] +
push esi  +
push edi  +
add eax eax +
push eax  +
xor esi esi +
push esi  +
push [ebp+lpData]  +
xor edi edi +
mov [ebp+phkResult] esi +
mov [ebp+cbData] eax +
call memset  +
add esp 0Ch +
lea eax [ebp+phkResult] +
push eax  +
push 1  +
push esi  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
cmp eax esi +
jnz loc_1024250  +
lea eax [ebp+cbData] +
push eax  +
push [ebp+lpData]  +
push esi  +
push esi  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call ds:RegQueryValueExW  +
cmp eax esi +
jz loc_1024252  +
mov edi eax +
cmp [ebp+phkResult] esi +
jz loc_1024260  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
push edi  +
call ds:SetLastError  +
xor eax eax +
cmp edi esi +
pop edi  +
setz al  +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
push edi  +
xor edi edi +
mov eax ebx +
mov [ebp+dwErrCode] edi +
mov [ebp+phkResult] edi +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx di +
jnz loc_1024293  +
sub eax ecx +
sar eax 1 +
mov esi eax +
cmp ebx edi +
jz loc_102434D  +
cmp [ebp+hKey] edi +
jz loc_102434D  +
cmp [ebp+lpSubKey] edi +
jz loc_102434D  +
cmp [ebp+lpValueName] edi +
jz loc_102434D  +
push edi  +
lea eax [ebp+phkResult] +
push eax  +
push edi  +
push 0F003Fh  +
push edi  +
push edi  +
push edi  +
push [ebp+lpSubKey]  +
push [ebp+hKey]  +
call ds:RegCreateKeyExW  +
cmp eax edi +
jnz loc_10242FD  +
lea eax [esi+esi+2] +
push eax  +
push ebx  +
push 2  +
push edi  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call ds:RegSetValueExW  +
cmp eax edi +
jz loc_1024302  +
mov [ebp+dwErrCode] eax +
jmp loc_1024354  +
push offset a__0  +
push ebx  +
push offset aTo  +
push [ebp+lpValueName]  +
push offset SubBlock  +
push [ebp+lpSubKey]  +
push offset aSettingTheValu  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
jmp loc_1024354  +
mov [ebp+dwErrCode] 0A0h +
cmp [ebp+phkResult] edi +
jz loc_1024362  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+dwErrCode] edi +
pop edi  +
pop esi  +
setz al  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax [ebp+arg_C] +
push ebx  +
push edi  +
xor edi edi +
xor ebx ebx +
mov [ebp+dwErrCode] edi +
mov [ebp+phkResult] edi +
mov [ebp+cb] edi +
cmp eax edi +
jnz loc_10243A9  +
mov [ebp+dwErrCode] 0A0h +
jmp loc_102445F  +
mov [eax] edi +
mov eax [ebp+arg_10] +
cmp eax edi +
jz loc_10243B4  +
mov [eax] edi +
push esi  +
lea eax [ebp+phkResult] +
push eax  +
push 1  +
push edi  +
push [ebp+Type]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
cmp eax edi +
jnz loc_1024424  +
mov esi ds:RegQueryValueExW +
lea eax [ebp+cb] +
push eax  +
push edi  +
lea eax [ebp+Type] +
push eax  +
push edi  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call esi  +
cmp eax edi +
jnz loc_1024424  +
push edi  +
push [ebp+cb]  +
call sub_1019232  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx edi +
jnz loc_1024402  +
mov [ebp+dwErrCode] 0Eh +
jmp loc_1024439  +
mov eax [ebp+arg_10] +
cmp eax edi +
jz loc_102440E  +
mov ecx [ebp+cb] +
mov [eax] ecx +
lea eax [ebp+cb] +
push eax  +
push ebx  +
lea eax [ebp+Type] +
push eax  +
push edi  +
push [ebp+lpValueName]  +
push [ebp+phkResult]  +
call esi  +
cmp eax edi +
jz loc_1024429  +
mov [ebp+dwErrCode] eax +
jmp loc_1024434  +
cmp [ebp+Type] 7 +
jnz loc_102444D  +
mov eax [ebp+arg_C] +
mov [eax] ebx +
cmp [ebp+dwErrCode] edi +
jz loc_102444D  +
cmp ebx edi +
jz loc_102444D  +
push ebx  +
call sub_1017EF4  +
mov eax [ebp+arg_10] +
pop ecx  +
cmp eax edi +
jz loc_102444D  +
mov [eax] edi +
pop esi  +
cmp [ebp+phkResult] edi +
jz loc_102445F  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov [ebp+phkResult] edi +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+dwErrCode] edi +
pop edi  +
setz al  +
pop ebx  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_102448F  +
push [ebp+arg_0]  +
call sub_1017EF4  +
pop ecx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push [ebp+lpString2]  +
push 0FFFFFFFFh  +
push [ebp+lpString1]  +
push 1  +
push 409h  +
call ds:CompareStringW  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push [ebp+lpString2]  +
push 0FFFFFFFFh  +
push [ebp+lpString1]  +
push 1  +
push 409h  +
call ds:CompareStringA  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_10244F0  +
jmp loc_1024532  +
push esi  +
push [ebp+arg_4]  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_102453F  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1024511  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+2] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1024528  +
sub eax edx +
sar eax 1 +
jnz loc_10244FC  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
xor eax eax +
inc eax  +
jmp loc_102453A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov eax esi +
push 2  +
lea edx [eax+2] +
pop edi  +
mov cx [eax] +
add eax edi +
test cx cx +
jnz loc_102455C  +
jmp loc_102459B  +
push esi  +
push [ebp+arg_4]  +
call sub_10244E2  +
test eax eax +
jz loc_10245B5  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax edi +
test cx cx +
jnz loc_102457A  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+2] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax edi +
test cx cx +
jnz loc_1024591  +
sub eax edx +
sar eax 1 +
jnz loc_1024568  +
mov esi [ebp+arg_4] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax edi +
test cx cx +
jnz loc_10245A9  +
jmp loc_10245EC  +
xor eax eax +
jmp loc_10245F5  +
push esi  +
push [ebp+arg_0]  +
call sub_10244E2  +
test eax eax +
jz loc_10245B5  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax edi +
test cx cx +
jnz loc_10245CB  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+2] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
add eax edi +
test cx cx +
jnz loc_10245E2  +
sub eax edx +
sar eax 1 +
jnz loc_10245B9  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax esi +
push edi  +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_102460F  +
mov edi offset hFile +
jmp loc_1024658  +
push offset dword_10083F8  +
push esi  +
push edi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1024637  +
sub eax edx +
sar eax 1 +
lea esi [esi+eax*2+2] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_102464E  +
sub eax edx +
sar eax 1 +
jnz loc_1024620  +
push offset asc_1002440  +
push edi  +
call sub_1018F8F  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 124h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+dwErrCode] 0 +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+var_120] +
push 0  +
push eax  +
call memset  +
and [ebp+var_118] 0 +
add esp 0Ch +
push 1  +
push 8  +
push 0  +
mov [ebp+var_120] esi +
mov esi ds:VerSetConditionMask +
push 0  +
mov [ebp+var_110] 2 +
mov [ebp+var_11C] 5 +
call esi  +
push 1  +
push 2  +
push edx  +
push eax  +
call esi  +
push 1  +
push 1  +
push edx  +
push eax  +
call esi  +
push edx  +
push eax  +
push 0Bh  +
lea eax [ebp+var_120] +
push eax  +
call ds:VerifyVersionInfoW  +
mov esi eax +
test esi esi +
jnz loc_1024734  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
cmp eax 47Eh +
jnz loc_102471B  +
and [ebp+dwErrCode] esi +
jmp loc_1024734  +
test eax eax +
jle loc_1024729  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push offset aVerifyversioni  +
call sub_101872F  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_1027CE5  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi 11Ch +
push esi  +
xor ebx ebx +
lea eax [ebp+var_120] +
push ebx  +
push eax  +
call memset  +
and [ebp+var_118] ebx +
add esp 0Ch +
push 3  +
push 2  +
push ebx  +
mov [ebp+var_120] esi +
mov esi ds:VerSetConditionMask +
push ebx  +
mov [ebp+var_11C] 6 +
call esi  +
push 3  +
push 1  +
push edx  +
push eax  +
call esi  +
push edx  +
push eax  +
push 3  +
lea eax [ebp+var_120] +
push eax  +
call ds:VerifyVersionInfoW  +
mov esi eax +
test esi esi +
jnz loc_10247F3  +
call ds:GetLastError  +
mov ebx eax +
cmp ebx 47Eh +
jnz loc_10247DA  +
xor ebx ebx +
jmp loc_10247F3  +
test ebx ebx +
jle loc_10247E8  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push offset aVerifyversio_0  +
call sub_101872F  +
push ebx  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 118h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea eax [ebp+VersionInformation] +
push eax  +
xor edi edi +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 114h +
call ds:GetVersionExW  +
test eax eax +
jnz loc_1024850  +
call ds:GetLastError  +
mov edi eax +
jmp loc_1024861  +
mov eax [ebp+VersionInformation.dwMajorVersion] +
imul eax eax +
add eax [ebp+VersionInformation.dwMinorVersion] +
mov [esi] eax +
push edi  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
test edi edi +
setz al  +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1027CE5  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpFileName]  +
call ds:GetFileAttributesW  +
cmp eax 0FFFFFFFFh +
jnz loc_10248B3  +
call ds:GetLastError  +
cmp eax 3 +
jz loc_10248A7  +
cmp eax 2 +
jnz loc_10248AF  +
push 0  +
call ds:SetLastError  +
xor eax eax +
jmp loc_10248B6  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
xor eax eax +
test edx edx +
jz loc_10248D5  +
cmp edx 7FFFFFFFh +
jbe loc_10248DA  +
mov eax 80070057h +
test eax eax +
jl loc_10248F0  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1017999  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
shr edx 1 +
push 0  +
pop eax  +
jz loc_1024910  +
cmp edx 7FFFFFFFh +
jbe loc_1024915  +
mov eax 80070057h +
test eax eax +
jl loc_102492B  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
push 7FFFFFFEh  +
push 0  +
call sub_1017999  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi 7FFFFFFFh +
push esi  +
push edi  +
lea eax [ebp+arg_0] +
call sub_1023E1A  +
test eax eax +
jl loc_102496A  +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_4] +
push esi  +
sub edx eax +
lea ecx [edi+eax*2] +
mov eax [ebp+arg_8] +
push 0  +
call sub_1017999  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi 7FFFFFFFh +
push edi  +
shr esi 1 +
push ebx  +
lea eax [ebp+arg_4] +
mov edx esi +
call sub_1023E1A  +
test eax eax +
jl loc_10249AF  +
mov eax [ebp+arg_4] +
push edi  +
mov edx esi +
sub edx eax +
lea ecx [ebx+eax*2] +
mov eax [ebp+arg_8] +
push 0  +
call sub_1017999  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
call __EH_prolog3_catch_GS  +
mov edi [ebp+8] +
mov esi [ebp+0Ch] +
xor eax eax +
mov [ebp-0B48h] esi +
mov [ebp-0B40h] eax +
mov [ebp-0B44h] eax +
cmp edi eax +
jz loc_10251A2  +
cmp esi eax +
jz loc_10251A2  +
mov ebx [ebp+10h] +
cmp ebx 104h +
jnb loc_1024A0E  +
mov dword ptr [ebp-0B40h] 0A0h +
jmp loc_10251C1  +
mov [ebp-4] eax +
xor ecx ecx +
push 2  +
pop edx  +
lea eax [ebx+1] +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_1019242  +
pop ecx  +
mov [ebp-0B44h] eax +
test eax eax +
jnz loc_1024A42  +
mov dword ptr [ebp-0B40h] 0Eh +
jmp loc_10251AC  +
push ebx  +
xor ecx ecx +
push eax  +
mov [esi] cx +
push edi  +
mov [eax] cx +
call ds:ExpandEnvironmentStringsW  +
test eax eax +
jnz loc_1024A68  +
call ds:GetLastError  +
mov [ebp-0B40h] eax +
jmp loc_10251AC  +
mov dword ptr [ebp-0B3Ch] 30h +
push 8  +
pop edx  +
mov ecx edx +
mov esi offset aCsidl_admintoo +
lea edi [ebp-0B38h] +
movs   +
movs   +
xor eax eax +
push 7  +
pop ebx  +
mov ecx ebx +
lea edi [ebp-0B16h] +
stos   +
stos   +
mov dword ptr [ebp-0AF8h] 1Dh +
mov ecx edx +
mov esi offset aCsidl_altstart +
lea edi [ebp-0AF4h] +
movs   +
movs   +
xor eax eax +
mov ecx ebx +
lea edi [ebp-0AD2h] +
stos   +
stos   +
mov dword ptr [ebp-0AB4h] 1Ah +
xor eax eax +
push 9  +
mov ecx ebx +
mov esi offset aCsidl_appdata +
lea edi [ebp-0AB0h] +
movs   +
pop ecx  +
lea edi [ebp-0A94h] +
stos   +
mov dword ptr [ebp-0A70h] 0Ah +
mov ecx edx +
mov esi offset aCsidl_bitbucke +
lea edi [ebp-0A6Ch] +
movs   +
push 0Ch  +
mov ecx edx +
lea edi [ebp-0A4Ch] +
stos   +
mov dword ptr [ebp-0A2Ch] 2Fh +
pop ecx  +
mov esi offset aCsidl_common_0 +
lea edi [ebp-0A28h] +
movs   +
lea edi [ebp-9F8h] +
stos   +
stos   +
stos   +
stos   +
mov dword ptr [ebp-9E8h] 1Eh +
xor eax eax +
push 0Ch  +
pop ecx  +
mov esi offset aCsidl_common_1 +
lea edi [ebp-9E4h] +
movs   +
lea edi [ebp-9B4h] +
stos   +
stos   +
stos   +
stos   +
mov dword ptr [ebp-9A4h] 23h +
push 0Ah  +
pop ecx  +
mov esi offset aCsidl_common_2 +
lea edi [ebp-9A0h] +
movs   +
movs   +
xor eax eax +
lea edi [ebp-976h] +
stos   +
stos   +
stos   +
stos   +
stos   +
stos   +
mov dword ptr [ebp-960h] 19h +
xor eax eax +
push 0Fh  +
pop ecx  +
push 0Bh  +
mov esi offset aCsidl_common_d +
lea edi [ebp-95Ch] +
movs   +
pop ecx  +
lea edi [ebp-920h] +
stos   +
mov dword ptr [ebp-91Ch] 2Eh +
mov esi offset aCsidl_common_3 +
lea edi [ebp-918h] +
movs   +
movs   +
lea edi [ebp-8EAh] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov dword ptr [ebp-8D8h] 1Fh +
push 0Bh  +
pop ecx  +
xor eax eax +
mov esi offset aCsidl_common_f +
lea edi [ebp-8D4h] +
movs   +
movs   +
lea edi [ebp-8A6h] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov dword ptr [ebp-894h] 17h +
xor eax eax +
push 0Bh  +
pop ecx  +
mov esi offset aCsidl_common_p +
lea edi [ebp-890h] +
movs   +
lea edi [ebp-864h] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov dword ptr [ebp-850h] 16h +
push 0Bh  +
pop ecx  +
mov esi offset aCsidl_common_s +
lea edi [ebp-84Ch] +
movs   +
movs   +
xor eax eax +
lea edi [ebp-81Eh] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov dword ptr [ebp-80Ch] 18h +
push 0Ah  +
pop ecx  +
mov esi offset aCsidl_common_4 +
lea edi [ebp-808h] +
movs   +
movs   +
xor eax eax +
lea edi [ebp-7DEh] +
stos   +
stos   +
stos   +
stos   +
stos   +
stos   +
mov dword ptr [ebp-7C8h] 2Dh +
push 0Bh  +
pop ecx  +
mov esi offset aCsidl_common_t +
lea edi [ebp-7C4h] +
movs   +
movs   +
xor eax eax +
lea edi [ebp-796h] +
stos   +
stos   +
stos   +
stos   +
stos   +
mov dword ptr [ebp-784h] 3 +
mov ecx ebx +
mov esi offset aCsidl_controls +
lea edi [ebp-780h] +
movs   +
movs   +
xor eax eax +
mov ecx edx +
lea edi [ebp-762h] +
stos   +
stos   +
mov dword ptr [ebp-740h] 21h +
push 9  +
xor eax eax +
mov ecx ebx +
mov esi offset aCsidl_cookies +
lea edi [ebp-73Ch] +
movs   +
pop ecx  +
push 9  +
lea edi [ebp-720h] +
stos   +
and [ebp-6FCh] eax +
mov ecx ebx +
mov esi offset aCsidl_desktop +
lea edi [ebp-6F8h] +
movs   +
pop ecx  +
push 0Bh  +
lea edi [ebp-6DCh] +
stos   +
mov dword ptr [ebp-6B8h] 10h +
pop ecx  +
mov esi offset aCsidl_desktopd +
lea edi [ebp-6B4h] +
movs   +
movs   +
lea edi [ebp-686h] +
stos   +
stos   +
stos   +
stos   +
stos   +
push 6  +
mov dword ptr [ebp-674h] 11h +
pop ecx  +
mov esi offset aCsidl_drives +
lea edi [ebp-670h] +
movs   +
movs   +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp-656h] +
stos   +
stos   +
mov dword ptr [ebp-630h] 6 +
mov ecx edx +
mov esi offset aCsidl_favorite +
lea edi [ebp-62Ch] +
movs   +
mov ecx edx +
xor eax eax +
lea edi [ebp-60Ch] +
stos   +
push 6  +
mov dword ptr [ebp-5ECh] 14h +
pop ecx  +
mov esi offset aCsidl_fonts +
push 0Ah  +
lea edi [ebp-5E8h] +
movs   +
pop ecx  +
push 9  +
lea edi [ebp-5D0h] +
stos   +
mov dword ptr [ebp-5A8h] 22h +
mov ecx ebx +
mov esi offset aCsidl_history +
lea edi [ebp-5A4h] +
movs   +
pop ecx  +
lea edi [ebp-588h] +
stos   +
mov dword ptr [ebp-564h] 1 +
mov ecx ebx +
mov esi offset aCsidl_internet +
lea edi [ebp-560h] +
movs   +
movs   +
mov ecx edx +
lea edi [ebp-542h] +
stos   +
stos   +
mov dword ptr [ebp-520h] 20h +
push 0Ah  +
pop ecx  +
mov esi offset aCsidl_intern_0 +
lea edi [ebp-51Ch] +
movs   +
movs   +
xor eax eax +
lea edi [ebp-4F2h] +
stos   +
stos   +
stos   +
stos   +
stos   +
stos   +
push 0Ah  +
mov dword ptr [ebp-4DCh] 1Ch +
pop ecx  +
push 6  +
mov esi offset aCsidl_local_ap +
lea edi [ebp-4D8h] +
movs   +
pop ecx  +
xor eax eax +
lea edi [ebp-4B0h] +
stos   +
mov dword ptr [ebp-498h] 27h +
mov ecx edx +
mov esi offset aCsidl_mypictur +
lea edi [ebp-494h] +
movs   +
movs   +
mov ecx ebx +
lea edi [ebp-472h] +
stos   +
stos   +
mov dword ptr [ebp-454h] 13h +
push 9  +
mov ecx ebx +
mov esi offset aCsidl_nethood +
lea edi [ebp-450h] +
movs   +
pop ecx  +
xor eax eax +
lea edi [ebp-434h] +
stos   +
mov dword ptr [ebp-410h] 12h +
mov ecx ebx +
mov esi offset aCsidl_network +
lea edi [ebp-40Ch] +
movs   +
push 9  +
pop ecx  +
lea edi [ebp-3F0h] +
stos   +
mov dword ptr [ebp-3CCh] 5 +
mov ecx ebx +
mov esi offset aCsidl_personal +
lea edi [ebp-3C8h] +
movs   +
movs   +
mov ecx edx +
lea edi [ebp-3AAh] +
stos   +
stos   +
mov dword ptr [ebp-388h] 4 +
mov ecx ebx +
mov esi offset aCsidl_printers +
lea edi [ebp-384h] +
movs   +
movs   +
xor eax eax +
mov ecx edx +
lea edi [ebp-366h] +
stos   +
stos   +
mov dword ptr [ebp-344h] 1Bh +
xor eax eax +
push 9  +
mov ecx edx +
mov esi offset aCsidl_printhoo +
lea edi [ebp-340h] +
movs   +
mov ecx edx +
lea edi [ebp-320h] +
stos   +
mov dword ptr [ebp-300h] 28h +
mov ecx ebx +
mov esi offset aCsidl_profile +
lea edi [ebp-2FCh] +
movs   +
pop ecx  +
push 0Ah  +
lea edi [ebp-2E0h] +
stos   +
mov dword ptr [ebp-2BCh] 26h +
pop ecx  +
push 6  +
mov esi offset aCsidl_program_ +
lea edi [ebp-2B8h] +
movs   +
pop ecx  +
push 0Dh  +
lea edi [ebp-290h] +
stos   +
mov dword ptr [ebp-278h] 2Bh +
pop ecx  +
mov esi offset aCsidl_progra_0 +
lea edi [ebp-274h] +
movs   +
movs   +
lea edi [ebp-23Eh] +
stos   +
stos   +
stos   +
mov dword ptr [ebp-234h] 2 +
mov ecx ebx +
mov esi offset aCsidl_programs +
lea edi [ebp-230h] +
movs   +
movs   +
xor eax eax +
mov ecx edx +
lea edi [ebp-212h] +
stos   +
stos   +
push 6  +
pop ecx  +
mov [ebp-1F0h] edx +
mov esi offset aCsidl_recent +
lea edi [ebp-1ECh] +
movs   +
push 9  +
movs   +
pop esi  +
mov ecx esi +
xor eax eax +
push 6  +
lea edi [ebp-1D2h] +
stos   +
stos   +
mov [ebp-1ACh] esi +
pop ecx  +
mov esi offset aCsidl_sendto +
lea edi [ebp-1A8h] +
movs   +
movs   +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp-18Eh] +
stos   +
stos   +
mov dword ptr [ebp-168h] 0Bh +
mov ecx edx +
xor eax eax +
push 9  +
mov esi offset aCsidl_startmen +
lea edi [ebp-164h] +
movs   +
mov ecx edx +
lea edi [ebp-144h] +
stos   +
mov [ebp-124h] ebx +
mov ecx ebx +
mov esi offset aCsidl_startup +
lea edi [ebp-120h] +
movs   +
pop ecx  +
push 6  +
lea edi [ebp-104h] +
stos   +
mov dword ptr [ebp-0E0h] 25h +
pop ecx  +
mov esi offset aCsidl_system +
lea edi [ebp-0DCh] +
movs   +
movs   +
push 9  +
pop ecx  +
lea edi [ebp-0C2h] +
stos   +
stos   +
mov dword ptr [ebp-9Ch] 15h +
mov ecx edx +
mov esi offset aCsidl_template +
lea edi [ebp-98h] +
movs   +
xor eax eax +
mov ecx edx +
lea edi [ebp-78h] +
stos   +
mov dword ptr [ebp-58h] 24h +
push 9  +
mov ecx ebx +
mov esi offset aCsidl_windows +
lea edi [ebp-54h] +
movs   +
pop ecx  +
lea edi [ebp-38h] +
stos   +
mov edi [ebp-0B44h] +
lea esi [edi+2] +
push 25h  +
push esi  +
call ds:wcschr  +
cmp word ptr [edi] 25h +
pop ecx  +
pop ecx  +
mov ebx eax +
jnz loc_102517F  +
test ebx ebx +
jz loc_102517F  +
mov edi [ebp-0B48h] +
sub eax esi +
sar eax 1 +
push esi  +
inc eax  +
push eax  +
push edi  +
call sub_10248BF  +
inc ebx  +
inc ebx  +
xor esi esi +
mov eax esi +
imul eax eax +
lea eax [ebp+eax-0B38h] +
push eax  +
push edi  +
call sub_1024498  +
cmp eax 2 +
jz loc_102511D  +
inc esi  +
cmp esi 2Ah +
jb loc_10250FA  +
jmp loc_10251AC  +
imul esi esi +
push edi  +
xor eax eax +
push eax  +
push eax  +
push dword ptr [ebp+esi-0B3Ch]  +
push eax  +
call ds:SHGetFolderPathW  +
test eax eax +
jge loc_1025142  +
push eax  +
call sub_1023E47  +
jmp loc_1024A5D  +
mov esi ds:lstrlenW +
push edi  +
call esi  +
push ebx  +
mov [ebp-0B48h] eax +
call esi  +
mov ecx [ebp-0B48h] +
lea eax [ecx+eax+1] +
cmp eax [ebp+10h] +
jl loc_102516F  +
mov dword ptr [ebp-0B40h] 6Fh +
jmp loc_10251AC  +
push ebx  +
push dword ptr [ebp+10h]  +
push edi  +
call sub_1024934  +
test eax eax +
jge loc_10251AC  +
jmp loc_1025137  +
push edi  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp-0B48h]  +
call sub_10248BF  +
jmp loc_1025179  +
mov dword ptr [ebp-0B40h] 0Eh +
mov eax offset loc_10251A0 +
retn   +
jmp loc_10251C1  +
mov dword ptr [ebp-0B40h] 0A0h +
cmp dword ptr [ebp-0B44h] 0 +
jz loc_10251C1  +
push dword ptr [ebp-0B44h]  +
call sub_1017EF4  +
pop ecx  +
push dword ptr [ebp-0B40h]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp-0B40h] eax +
setz al  +
call sub_1027E13  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov edi [ebp+arg_C] +
xor ebx ebx +
mov [ebp+dwErrCode] esi +
mov [ebp+phkResult] esi +
mov [ebp+var_C] esi +
mov [ebp+var_10] esi +
cmp edi esi +
jz loc_102536A  +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx si +
jnz loc_1025210  +
sub eax edx +
sar eax 1 +
jz loc_102536A  +
lea eax [ebp+phkResult] +
push eax  +
push 2001Fh  +
push esi  +
push [ebp+Type]  +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
cmp eax esi +
jz loc_1025246  +
mov [ebp+dwErrCode] eax +
jmp loc_102538C  +
lea eax [ebp+var_10] +
push eax  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+lpValueName]  +
push [ebp+Type]  +
push [ebp+hKey]  +
call sub_102437F  +
test eax eax +
jnz loc_102526B  +
call ds:GetLastError  +
jmp loc_1025326  +
mov esi [ebp+var_10] +
mov eax edi +
lea edx [eax+2] +
cmp esi 4 +
jb loc_102528C  +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1025278  +
sub eax edx +
sar eax 1 +
lea edi [esi+eax*2+2] +
jmp loc_102529E  +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_102528C  +
sub eax edx +
sar eax 1 +
lea edi [esi+eax*2+4] +
push 0  +
push edi  +
call sub_1019232  +
mov ebx eax +
pop ecx  +
pop ecx  +
test ebx ebx +
jnz loc_10252BA  +
mov [ebp+dwErrCode] 0Eh +
jmp loc_1025371  +
push edi  +
push 0  +
push ebx  +
call memset  +
add esp 0Ch +
cmp esi 4 +
jb loc_10252F0  +
push esi  +
push [ebp+var_C]  +
push ebx  +
call memcpy  +
add esp 0Ch +
push [ebp+arg_C]  +
mov eax edi +
sub eax esi +
inc eax  +
inc eax  +
push eax  +
shr esi 1 +
lea eax [ebx+esi*2-2] +
push eax  +
call sub_1024975  +
jmp loc_10252FA  +
push [ebp+arg_C]  +
push edi  +
push ebx  +
call sub_10248F9  +
test eax eax +
jge loc_1025306  +
push eax  +
call sub_1023E47  +
jmp loc_1025326  +
push edi  +
push ebx  +
push 7  +
xor ecx ecx +
push ecx  +
push [ebp+lpValueName]  +
mov eax edi +
shr eax 1 +
mov [ebx+eax*2-2] cx +
push [ebp+phkResult]  +
call ds:RegSetValueExW  +
test eax eax +
jz loc_102532B  +
mov [ebp+dwErrCode] eax +
jmp loc_1025371  +
push offset aTo  +
push [ebp+lpValueName]  +
push offset SubBlock  +
push [ebp+Type]  +
push offset aSettingTheValu  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push ebx  +
call sub_1024600  +
jmp loc_1025371  +
mov [ebp+dwErrCode] 0A0h +
xor esi esi +
cmp [ebp+var_C] esi +
jz loc_1025381  +
push [ebp+var_C]  +
call sub_1017EF4  +
pop ecx  +
cmp ebx esi +
jz loc_102538C  +
push ebx  +
call sub_1017EF4  +
pop ecx  +
cmp [ebp+phkResult] esi +
jz loc_102539D  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
mov [ebp+phkResult] esi +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+dwErrCode] esi +
pop edi  +
pop esi  +
setz al  +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
xor edi edi +
cmp [ebp+arg_0] edi +
jnz loc_10253D1  +
push 0Dh  +
call ds:SetLastError  +
jmp loc_1025409  +
mov eax [ebp+arg_0] +
lea edx [eax+1] +
mov cl [eax] +
inc eax  +
test cl cl +
jnz loc_10253D7  +
push esi  +
sub eax edx +
lea esi [eax+1] +
push 0  +
push esi  +
call sub_1019232  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jnz loc_10253FE  +
push 0Eh  +
call ds:SetLastError  +
jmp loc_1025408  +
push [ebp+arg_0]  +
push esi  +
push edi  +
call sub_1020C28  +
pop esi  +
mov eax edi +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
push 105h  +
mov esi offset unk_1040610 +
xor edi edi +
push esi  +
push offset aCsidl_common_a  +
xor ebx ebx +
mov [ebp+hMem] edi +
mov [ebp+SecurityAttributes.nLength] 0Ch +
mov [ebp+SecurityAttributes.lpSecurityDescriptor] edi +
mov [ebp+SecurityAttributes.bInheritHandle] edi +
call sub_10249BB  +
test eax eax +
jz loc_10254AA  +
push esi  +
call sub_1024884  +
test eax eax +
jnz loc_10254BF  +
push edi  +
lea eax [ebp+hMem] +
push eax  +
push 1  +
push offset aDPAGaBaAGaCo  +
call ConvertStringSecurityDescriptorToSecurityDescriptorW  +
test eax eax +
jnz loc_1025479  +
call ds:GetLastError  +
mov ebx eax +
mov [ebp+hMem] edi +
jmp loc_10254CF  +
push offset aCurrentlyMissi  +
push esi  +
push offset aCreatingDirect  +
mov edi offset hFile +
push edi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
lea eax [ebp+SecurityAttributes] +
push eax  +
push esi  +
call ds:CreateDirectoryW  +
test eax eax +
jnz loc_10254B4  +
call ds:GetLastError  +
mov ebx eax +
jmp loc_10254BF  +
push offset aDone_  +
push edi  +
call sub_1018F8F  +
xor edi edi +
cmp [ebp+hMem] edi +
jz loc_10254CF  +
push [ebp+hMem]  +
call ds:LocalFree  +
push ebx  +
call ds:SetLastError  +
xor eax eax +
cmp ebx edi +
pop edi  +
pop esi  +
setz al  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+dwErrCode] 0 +
cmp [ebp+lpFileName] 0 +
push esi  +
push edi  +
jz loc_10255BA  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_10255BA  +
push 0Ch  +
pop ecx  +
lea eax [ebp+var_C] +
push eax  +
push [ebp+lpFileName]  +
mov esi offset dword_102C110 +
movs   +
call sub_1023E9E  +
test eax eax +
jnz loc_1025532  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_10255C1  +
push ebx  +
xor esi esi +
push 30h  +
inc esi  +
mov edi offset dword_102C148 +
pop ebx  +
push dword ptr [edi+4]  +
push dword ptr [edi]  +
push [ebp+var_8]  +
push [ebp+var_C]  +
call sub_1023FA2  +
test eax eax +
jl loc_1025561  +
add ebx 30h +
inc esi  +
add edi 30h +
cmp ebx 210h +
jb loc_102553E  +
pop ebx  +
cmp esi 0Bh +
jz loc_10255B1  +
dec esi  +
imul esi esi +
push dword_102C11C[esi]  +
push dword_102C118[esi]  +
push [ebp+var_8]  +
push [ebp+var_C]  +
call sub_1023FA2  +
test eax eax +
jl loc_10255B1  +
push dword_102C14C[esi]  +
push dword_102C148[esi]  +
push [ebp+var_8]  +
push [ebp+var_C]  +
call sub_1023FA2  +
test eax eax +
jge loc_10255B1  +
mov edi [ebp+arg_4] +
push 0Ch  +
lea esi dword_102C110[esi] +
pop ecx  +
movs   +
jmp loc_10255C1  +
mov [ebp+dwErrCode] 0Dh +
jmp loc_10255C1  +
mov [ebp+dwErrCode] 0A0h +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+dwErrCode] eax +
pop edi  +
setz al  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 47Ch +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor eax eax +
mov edi 208h +
push edi  +
xor ebx ebx +
mov [ebp+FileName] ax +
lea eax [ebp-41Ah] +
push ebx  +
push eax  +
call memset  +
xor eax eax +
push edi  +
push eax  +
mov word ptr [ebp+Data] ax +
lea eax [ebp-20Eh] +
push eax  +
call memset  +
add esp 18h +
test esi esi +
jnz loc_102563E  +
mov ebx 0A0h +
jmp loc_1025730  +
and [esi] ebx +
mov edi 105h +
push edi  +
lea eax [ebp+FileName] +
push eax  +
push offset aCsidl_systemQm  +
call sub_10249BB  +
test eax eax +
jz loc_1025700  +
lea eax [ebp+FileName] +
push eax  +
call sub_1023E71  +
test eax eax +
jnz loc_1025677  +
push 2  +
pop ebx  +
jmp loc_1025730  +
lea eax [ebp+var_44C] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_10254E7  +
test eax eax +
jz loc_1025700  +
cmp [ebp+var_44C] 1 +
jz loc_10256E5  +
push offset aServicedll  +
push offset aSoftwareMicr_0  +
push 80000002h  +
push edi  +
lea eax [ebp+Data] +
push eax  +
call sub_10241FC  +
test eax eax +
jnz loc_10256CF  +
call ds:GetLastError  +
mov ebx eax +
cmp ebx 2 +
jz loc_10256C9  +
cmp ebx 3 +
jnz loc_1025730  +
xor ebx ebx +
mov [esi] ebx +
jmp loc_1025730  +
xor eax eax +
mov [ebp+var_8] ax +
lea eax [ebp+Data] +
push eax  +
call sub_1023E71  +
test eax eax +
jnz loc_10256E9  +
and [esi] ebx +
jmp loc_1025730  +
lea eax [ebp+var_47C] +
push eax  +
lea eax [ebp+Data] +
push eax  +
call sub_10254E7  +
test eax eax +
jnz loc_102570A  +
call ds:GetLastError  +
mov ebx eax +
jmp loc_1025730  +
push [ebp+var_470]  +
push [ebp+var_474]  +
push [ebp+var_440]  +
push [ebp+var_444]  +
call sub_1023FA2  +
xor ecx ecx +
test eax eax +
setl cl  +
mov [esi] ecx +
push ebx  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
test ebx ebx +
pop edi  +
setz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 454h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov [ebp+var_424] eax +
xor eax eax +
mov esi 208h +
xor edi edi +
push esi  +
mov [ebp+FileName] ax +
lea eax [ebp-41Ah] +
push edi  +
push eax  +
mov [ebp+dwErrCode] edi +
call memset  +
xor eax eax +
push esi  +
mov word ptr [ebp+Data] ax +
lea eax [ebp-20Eh] +
push edi  +
push eax  +
call memset  +
add esp 18h +
push 0Ch  +
pop ecx  +
mov esi offset dword_102C110 +
mov edi ebx +
movs   +
mov esi 105h +
push esi  +
lea eax [ebp+FileName] +
push eax  +
push offset aCsidl_systemQm  +
call sub_10249BB  +
test eax eax +
jz loc_1025862  +
lea eax [ebp+FileName] +
push eax  +
call sub_1023E71  +
test eax eax +
jz loc_1025892  +
lea eax [ebp+var_454] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_10254E7  +
test eax eax +
jz loc_1025862  +
mov edi [ebp+var_424] +
push edi  +
call sub_10255DD  +
test eax eax +
jz loc_1025862  +
test edi edi +
jz loc_1025870  +
cmp dword ptr [edi] 1 +
jnz loc_1025870  +
push offset aServicedll  +
push offset aSoftwareMicr_0  +
push 80000002h  +
push esi  +
lea eax [ebp+Data] +
push eax  +
call sub_10241FC  +
test eax eax +
jz loc_1025862  +
xor eax eax +
mov [ebp+var_8] ax +
lea eax [ebp+var_454] +
push eax  +
lea eax [ebp+Data] +
push eax  +
call sub_10254E7  +
test eax eax +
jnz loc_1025870  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_1025892  +
push 0Ch  +
mov edi ebx +
pop ecx  +
lea esi [ebp+var_454] +
movs   +
mov ebx [ebx] +
test ebx ebx +
jz loc_1025888  +
cmp ebx 0Ah +
jnz loc_1025892  +
mov [ebp+dwErrCode] 0Dh +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [ebp+dwErrCode] eax +
pop edi  +
setz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 428h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor eax eax +
mov esi 208h +
xor edi edi +
push esi  +
mov word ptr [ebp+Data] ax +
lea eax [ebp-20Eh] +
push edi  +
push eax  +
mov [ebp+dwErrCode] edi +
call memset  +
xor eax eax +
push esi  +
mov [ebp+FileName] ax +
lea eax [ebp-41Ah] +
push edi  +
push eax  +
call memset  +
add esp 18h +
push offset aIsBitsSecondar  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
cmp [ebp+arg_0] edi +
jz loc_1025931  +
push offset aYes  +
jmp loc_1025936  +
push offset aNo  +
push esi  +
call sub_1018F8F  +
push offset aBitsSecondaryS  +
push esi  +
call sub_1018F8F  +
push offset aServicedll  +
push offset aSoftwareMicr_0  +
push 80000002h  +
mov ebx 105h +
push ebx  +
lea eax [ebp+Data] +
push eax  +
call sub_10241FC  +
test eax eax +
jnz loc_1025997  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
cmp eax 2 +
jz loc_1025986  +
cmp eax 3 +
jnz loc_1025A7A  +
push offset aNA  +
mov [ebp+dwErrCode] edi +
push esi  +
jmp loc_1025A75  +
xor eax eax +
mov [ebp+var_8] ax +
lea eax [ebp+Data] +
push eax  +
push esi  +
call sub_1018F8F  +
mov edi offset asc_1002440 +
push edi  +
push esi  +
call sub_1018F8F  +
push ebx  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+Data] +
push eax  +
call sub_10249BB  +
test eax eax +
jz loc_10259E5  +
lea eax [ebp+var_428] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call sub_1023E9E  +
test eax eax +
jnz loc_10259F6  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_1025A7A  +
push offset asc_10128D8  +
lea eax [ebp+FileName] +
push eax  +
push offset aFileVersionF_0  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
movzx eax [ebp+var_422] +
push edi  +
cdq   +
push edx  +
push eax  +
movzx eax [ebp+var_424] +
cdq   +
mov ecx offset a__4 +
push ecx  +
push edx  +
push eax  +
movzx eax word ptr [ebp+var_428+2] +
push ecx  +
cdq   +
push edx  +
push eax  +
movzx eax word ptr [ebp+var_428] +
push ecx  +
cdq   +
push edx  +
push eax  +
push esi  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [ebp+dwErrCode] eax +
pop edi  +
setz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString2] 0 +
push edi  +
jz loc_1025AFE  +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_1025AFE  +
mov eax [ebp+lpString2] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_1025AC0  +
sub eax edx +
mov ecx edi +
sar eax 1 +
lea edx [ecx+2] +
push esi  +
mov si [ecx] +
inc ecx  +
inc ecx  +
test si si +
jnz loc_1025AD4  +
sub ecx edx +
sar ecx 1 +
pop esi  +
cmp ecx eax +
jb loc_1025AFE  +
push [ebp+lpString2]  +
sub ecx eax +
lea eax [edi+ecx*2] +
push eax  +
call sub_1024498  +
dec eax  +
dec eax  +
neg eax  +
sbb eax eax +
inc eax  +
jmp loc_1025B00  +
xor eax eax +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push esi  +
push edi  +
xor edi edi +
push ebx  +
lea esi off_102C320[edi] +
push dword ptr [esi]  +
call sub_1025AA7  +
test eax eax +
jnz loc_1025B47  +
push dword ptr [ebp+0Ch]  +
push dword ptr [esi]  +
call sub_1025AA7  +
test eax eax +
jnz loc_1025B47  +
add edi 4 +
cmp edi 28h +
jb loc_1025B17  +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
cmp word ptr [ebx] 0 +
jz loc_1025B93  +
mov eax [ebp+0Ch] +
cmp word ptr [eax] 0 +
push offset asc_1002440  +
jz loc_1025B86  +
push eax  +
push offset asc_1012A74  +
push ebx  +
push offset aFoundPendingRe  +
push offset hFile  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
jmp loc_1025B9D  +
push ebx  +
push offset aFoundPendingDe  +
push offset hFile  +
jmp loc_1025B78  +
***
push offset aErrorUnexpecte  +
push offset hFile  +
call sub_1018F8F  +
xor eax eax +
jmp loc_1025B40  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+lptstrFilename] +
push edi  +
mov [ebp+var_18] eax +
mov [ebp+dwErrCode] ebx +
mov [ebp+dwHandle] ebx +
mov [ebp+lpBuffer] ebx +
mov [ebp+puLen] ebx +
cmp esi ebx +
jz loc_1025C58  +
cmp eax ebx +
jz loc_1025C58  +
lea eax [ebp+dwHandle] +
push eax  +
push esi  +
call GetFileVersionInfoSizeW  +
mov edi eax +
test edi edi +
jnz loc_1025BFA  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_1025C6A  +
push edi  +
call sub_1019242  +
mov ebx eax +
pop ecx  +
test ebx ebx +
jnz loc_1025C10  +
mov [ebp+dwErrCode] 0Eh +
jmp loc_1025C5F  +
push ebx  +
push edi  +
push [ebp+dwHandle]  +
push esi  +
call GetFileVersionInfoW  +
test eax eax +
jnz loc_1025C2A  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_1025C5F  +
lea eax [ebp+puLen] +
push eax  +
lea eax [ebp+lpBuffer] +
push eax  +
push offset aVarfileinfoTra  +
push ebx  +
call VerQueryValueW  +
test eax eax +
jnz loc_1025C4A  +
mov [ebp+dwErrCode] 0Dh +
jmp loc_1025C5F  +
mov eax [ebp+lpBuffer] +
mov ax [eax] +
mov ecx [ebp+var_18] +
mov [ecx] ax +
jmp loc_1025C5F  +
mov [ebp+dwErrCode] 0A0h +
test ebx ebx +
jz loc_1025C6A  +
push ebx  +
call sub_1017EF4  +
pop ecx  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [ebp+dwErrCode] eax +
pop edi  +
setz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 634h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor eax eax +
mov edi 208h +
xor ebx ebx +
push edi  +
mov word ptr [ebp+tstrFilename] ax +
lea eax [ebp-20Eh] +
push ebx  +
push eax  +
mov [ebp+dwErrCode] ebx +
call memset  +
xor eax eax +
push 40Eh  +
mov word ptr [ebp+var_620] ax +
lea eax [ebp+var_620+2] +
push ebx  +
push eax  +
call memset  +
add esp 18h +
cmp esi ebx +
jnz loc_1025D01  +
mov [ebp+dwErrCode] 0A0h +
jmp loc_1025E32  +
mov eax [esi] +
cmp eax ebx +
jz loc_1025E32  +
cmp eax 0Ah +
jz loc_1025E32  +
push offset aLangid  +
push offset aVersion  +
push offset aFilePath  +
push offset a40s9sS  +
lea eax [ebp+var_620] +
push edi  +
push eax  +
call sub_101864E  +
add esp 18h +
test eax eax +
jl loc_1025D4D  +
lea eax [ebp+var_620] +
push eax  +
push offset hFile  +
call sub_1018F8F  +
add esi 10h +
mov [ebp+var_628] ebx +
mov edi esi +
mov ebx 105h +
cmp dword ptr [esi] 0 +
jz loc_1025E32  +
mov eax [edi] +
push ebx  +
lea ecx [ebp+tstrFilename] +
push ecx  +
push eax  +
call sub_10249BB  +
test eax eax +
jz loc_1025E26  +
lea eax [ebp+var_634] +
push eax  +
lea eax [ebp+tstrFilename] +
push eax  +
call sub_1023E9E  +
test eax eax +
jz loc_1025E26  +
lea eax [ebp+var_62C] +
push eax  +
push ebx  +
lea eax [ebp+tstrFilename] +
push eax  +
call sub_1025BAB  +
test eax eax +
jz loc_1025E26  +
movzx eax word ptr [ebp+var_62C] +
push eax  +
movzx eax [ebp+var_62E] +
push eax  +
movzx eax [ebp+var_630] +
push eax  +
movzx eax word ptr [ebp+var_634+2] +
push eax  +
movzx eax word ptr [ebp+var_634] +
push eax  +
lea eax [ebp+tstrFilename] +
push eax  +
push offset a40sD_D_D_4dD  +
lea eax [ebp+var_620] +
push 208h  +
push eax  +
call sub_101864E  +
add esp 24h +
test eax eax +
jl loc_1025E0E  +
lea eax [ebp+var_620] +
push eax  +
push offset hFile  +
call sub_1018F8F  +
inc [ebp+var_628]  +
add edi 4 +
cmp [ebp+var_628] 8 +
jb loc_1025D5D  +
jmp loc_1025E32  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [ebp+dwErrCode] eax +
pop edi  +
setz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn 4  +
***
call __EH_prolog3  +
xor eax eax +
mov [ebp-14h] eax +
mov [ebp-10h] eax +
mov [ebp-18h] eax +
mov eax [ebp+8] +
mov eax [eax] +
mov ebx 80000002h +
mov esi offset hFile +
cmp eax 2 +
jz loc_1026591  +
cmp eax 4 +
jle loc_1026601  +
cmp eax 6 +
jle loc_1026591  +
cmp eax 8 +
jle loc_10263DD  +
cmp eax 0Ah +
jg loc_1026601  +
call sub_10176AB  +
and dword ptr [ebp+8] 0 +
and dword ptr [ebp-4] 0 +
lea eax [ebp+8] +
push eax  +
push offset dword_102C3B4  +
call sub_1022BC9  +
push eax  +
push offset aUnableToGetCac  +
call sub_1018811  +
push lpValueName  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
xor edi edi +
inc edi  +
test eax eax +
jz loc_1025F7E  +
cmp [ebp-10h] edi +
jnz loc_1025F77  +
push offset aGroupPolicyCon  +
push esi  +
call sub_1018F8F  +
push off_102C0FC  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_1025F38  +
cmp [ebp-10h] edi +
jz loc_1025F31  +
push offset aGroupPolicyRet  +
jmp loc_1025F3D  +
push offset aGroupPolicyR_0  +
jmp loc_1025F3D  +
push offset aGroupPolicyR_1  +
push esi  +
call sub_1018F8F  +
push off_102C0F8  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_1025F70  +
cmp [ebp-10h] edi +
jz loc_1025F69  +
push offset aGroupPolicySer  +
jmp loc_1025F83  +
push offset aGroupPolicyS_0  +
jmp loc_1025F83  +
push offset aGroupPolicyS_1  +
jmp loc_1025F83  +
push offset aGroupPolicyC_0  +
jmp loc_1025F83  +
push offset aGroupPolicyUnd  +
push esi  +
call sub_1018F8F  +
push off_102C0D0  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_1025FB6  +
cmp [ebp-10h] edi +
jnz loc_1025FAF  +
push offset aGroupPolicyLim  +
jmp loc_1025FBB  +
push offset aGroupPolicyL_0  +
jmp loc_1025FBB  +
push offset aGroupPolicyL_1  +
push esi  +
call sub_1018F8F  +
push off_102C0C8  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
mov edi offset asc_1013A04 +
test eax eax +
jz loc_1025FFF  +
push edi  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aGroupPolicyDay  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018FAB  +
jmp loc_102600A  +
push offset aGroupPolicyD_0  +
push esi  +
call sub_1018F8F  +
push off_102C0D4  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_1026043  +
push edi  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aGroupPolicyD_1  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018FAB  +
jmp loc_102604E  +
push offset aGroupPolicyD_2  +
push esi  +
call sub_1018F8F  +
push off_102C0D8  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_1026087  +
push edi  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aGroupPolicyD_3  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018FAB  +
jmp loc_1026092  +
push offset aGroupPolicyD_4  +
push esi  +
call sub_1018F8F  +
push off_102C0CC  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_10260CB  +
push edi  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aGroupPolicyNig  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018FAB  +
jmp loc_10260D6  +
push offset aGroupPolicyN_0  +
push esi  +
call sub_1018F8F  +
push off_102C0DC  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_102610F  +
push edi  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aGroupPolicyMax  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018FAB  +
jmp loc_102611A  +
push offset aGroupPolicyM_0  +
push esi  +
call sub_1018F8F  +
push off_102C0E0  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_1026153  +
push edi  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aGroupPolicyM_1  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018FAB  +
jmp loc_102615E  +
push offset aGroupPolicyM_2  +
push esi  +
call sub_1018F8F  +
push off_102C0E4  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_1026197  +
push edi  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aGroupPolicyM_3  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018FAB  +
jmp loc_10261A2  +
push offset aGroupPolicyM_4  +
push esi  +
call sub_1018F8F  +
push off_102C0E8  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_10261DB  +
push edi  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aGroupPolicyM_5  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018FAB  +
jmp loc_10261E6  +
push offset aGroupPolicyM_6  +
push esi  +
call sub_1018F8F  +
push off_102C0EC  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_102621F  +
push edi  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aGroupPolicyM_7  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018FAB  +
jmp loc_102622A  +
push offset aGroupPolicyM_8  +
push esi  +
call sub_1018F8F  +
push off_102C0F0  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_1026263  +
push edi  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aGroupPolicyM_9  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018FAB  +
jmp loc_102626E  +
push offset aGroupPolicy_10  +
push esi  +
call sub_1018F8F  +
push off_102C0F8  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_102629C  +
cmp dword ptr [ebp-10h] 1 +
jnz loc_1026295  +
push offset aGroupPolicyPre  +
jmp loc_10262A1  +
push offset aGroupPolicyP_0  +
jmp loc_10262A1  +
push offset aGroupPolicyP_1  +
push esi  +
call sub_1018F8F  +
push off_102C0FC  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_10262D5  +
cmp dword ptr [ebp-10h] 1 +
jnz loc_10262CE  +
push offset aGroupPolicyP_2  +
jmp loc_10262DA  +
push offset aGroupPolicyP_3  +
jmp loc_10262DA  +
push offset aGroupPolicyP_4  +
push esi  +
call sub_1018F8F  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
push eax  +
push offset aUnableToGetC_1  +
call sub_101755F  +
push offset aOfTheSystemVol  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aMaxCacheSize  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
mov eax [ebp+8] +
mov ecx [eax] +
lea edx [ebp-10h] +
push edx  +
push eax  +
call dword ptr [ecx+14h]  +
push eax  +
push offset aUnableToGetMax  +
call sub_101755F  +
mov edi offset asc_1002440 +
push edi  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aMaxContentAge  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push off_102C108  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_1026387  +
push edi  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aGroupPolicy_11  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
jmp loc_102638D  +
push offset aGroupPolicy_12  +
push esi  +
call sub_1018F8F  +
push off_102C10C  +
lea eax [ebp-10h] +
push lpSubKey  +
push ebx  +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_10263C6  +
push edi  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aGroupPolicy_13  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
jmp loc_10263CC  +
push offset aGroupPolicy_14  +
push esi  +
call sub_1018F8F  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp+8] +
call sub_101A0FE  +
push offset aIsBitsSMaximum  +
push esi  +
call sub_1018F8F  +
push offset aEnablebitsmaxb  +
mov edi offset aSoftwarePolici +
push edi  +
push ebx  +
lea eax [ebp-10h] +
push eax  +
call sub_102415D  +
test eax eax +
jnz loc_1026420  +
call ds:GetLastError  +
mov [ebp-14h] eax +
cmp eax 2 +
jz loc_1026418  +
cmp eax 3 +
jnz loc_1026601  +
or dword ptr [ebp-10h] 0FFFFFFFFh +
and dword ptr [ebp-14h] 0 +
cmp dword ptr [ebp-10h] 0FFFFFFFFh +
jz loc_1026586  +
cmp dword ptr [ebp-10h] 0 +
jz loc_1026586  +
push offset aYes_0  +
push esi  +
call sub_1018F8F  +
push offset aMaxtransferrat  +
push edi  +
push ebx  +
lea eax [ebp-10h] +
push eax  +
call sub_102415D  +
test eax eax +
jnz loc_1026461  +
call ds:GetLastError  +
mov [ebp-14h] eax +
jmp loc_1026601  +
push offset aKilobitsSec_  +
xor eax eax +
lea edi [ebp-1Ch] +
stos   +
push dword ptr [ebp-1Ch]  +
lea edi [ebp-20h] +
push eax  +
push dword ptr [ebp-10h]  +
stos   +
push dword ptr [ebp-20h]  +
push offset aMaximumNetwork  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018DB4  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018E02  +
push eax  +
call sub_1018F8F  +
push offset aMaxbandwidthva  +
push offset aSoftwarePolici  +
push ebx  +
lea eax [ebp-10h] +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_1026453  +
push offset aMaxbandwidth_0  +
mov edi offset aSoftwarePolici +
push edi  +
push ebx  +
lea eax [ebp-18h] +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_1026453  +
push offset a00_TimeIsExpre  +
push 0  +
push dword ptr [ebp-18h]  +
push offset a00To  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aThisLimitIsEnf  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push offset aUsesystemmaxim  +
push edi  +
push ebx  +
lea eax [ebp-10h] +
push eax  +
call sub_102415D  +
test eax eax +
jnz loc_1026538  +
call ds:GetLastError  +
mov [ebp-14h] eax +
cmp eax 2 +
jz loc_1026530  +
cmp eax 3 +
jnz loc_1026601  +
or dword ptr [ebp-10h] 0FFFFFFFFh +
and dword ptr [ebp-14h] 0 +
cmp dword ptr [ebp-10h] 0 +
jnz loc_1026574  +
push offset aMaxtransferr_0  +
push edi  +
push ebx  +
lea eax [ebp-18h] +
push eax  +
call sub_102415D  +
test eax eax +
jz loc_1026453  +
push offset aKbps_  +
push 0  +
push dword ptr [ebp-18h]  +
push offset aAtAllOtherTime  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
jmp loc_102658C  +
push offset aAtAllOtherTi_0  +
push esi  +
call sub_1018F8F  +
push offset aBandwidthUtili  +
jmp loc_102658B  +
push offset aNo_0  +
push esi  +
call sub_1018F8F  +
push offset aIsBitsSJobInac  +
push esi  +
call sub_1018F8F  +
push offset aJobinactivityt  +
push offset aSoftwarePolici  +
push ebx  +
lea eax [ebp-10h] +
push eax  +
call sub_102415D  +
test eax eax +
jnz loc_10265DA  +
call ds:GetLastError  +
mov [ebp-14h] eax +
cmp eax 2 +
jz loc_10265C7  +
cmp eax 3 +
jnz loc_1026601  +
and dword ptr [ebp-14h] 0 +
or dword ptr [ebp-10h] 0FFFFFFFFh +
push offset aNo_0  +
push esi  +
call sub_1018F8F  +
cmp dword ptr [ebp-10h] 0FFFFFFFFh +
jz loc_1026601  +
push offset aDayS_  +
push 0  +
push dword ptr [ebp-10h]  +
push offset aYes_TimeoutVal  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push dword ptr [ebp-14h]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp-14h] eax +
setz al  +
call __EH_epilog3  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 214h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+dwErrCode] 0 +
push ebx  +
push esi  +
push edi  +
xor eax eax +
push 208h  +
push eax  +
mov [ebp+String1] ax +
lea eax [ebp-20Eh] +
push eax  +
call memset  +
add esp 0Ch +
mov ebx offset aServicedll_0 +
push ebx  +
mov edi offset aSystemCurren_0 +
push edi  +
mov esi 80000002h +
push esi  +
push 105h  +
lea eax [ebp+String1] +
push eax  +
call sub_10241FC  +
test eax eax +
jnz loc_102669A  +
call ds:GetLastError  +
cmp eax 2 +
jz loc_1026693  +
cmp eax 3 +
jnz loc_10266D2  +
and [ebp+dwErrCode] 0 +
push offset String2  +
lea eax [ebp+String1] +
push eax  +
call sub_1024498  +
cmp eax 2 +
jnz loc_10266C1  +
push offset aTheValueForPar  +
push offset hFile  +
call sub_1018F8F  +
jmp loc_10266DE  +
push offset String2  +
push ebx  +
push edi  +
push esi  +
call sub_1024279  +
test eax eax +
jnz loc_10266DE  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [ebp+dwErrCode] eax +
pop edi  +
setz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
or [ebp+dwStartType] 0FFFFFFFFh +
push edi  +
xor edi edi +
push 40000000h  +
push offset DatabaseName  +
push edi  +
mov [ebp+dwErrCode] edi +
mov [ebp+var_8] edi +
mov [ebp+lpDependencies] edi +
mov [ebp+var_18] edi +
call ds:OpenSCManagerW  +
mov [ebp+hSCObject] eax +
cmp eax edi +
jnz loc_1026763  +
call ds:GetLastError  +
cmp eax edi +
mov [ebp+dwErrCode] eax +
jle loc_1026753  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push offset aFailedToOpenSc  +
call sub_101872F  +
jmp loc_1026949  +
push esi  +
push 0C0000000h  +
push offset ServiceName  +
push eax  +
call ds:OpenServiceW  +
mov [ebp+hService] eax +
cmp eax edi +
jnz loc_10267A3  +
call ds:GetLastError  +
cmp eax edi +
mov [ebp+dwErrCode] eax +
jle loc_1026793  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push offset aFailedToFindBi  +
call sub_101872F  +
jmp loc_1026925  +
mov esi ds:QueryServiceConfigW +
lea ecx [ebp+pcbBytesNeeded] +
push ecx  +
push edi  +
push edi  +
push eax  +
mov [ebp+pcbBytesNeeded] edi +
call esi  +
test eax eax +
jnz loc_1026925  +
push ebx  +
mov ebx ds:GetLastError +
call ebx  +
cmp eax 7Ah +
jnz loc_10268E6  +
push [ebp+pcbBytesNeeded]  +
mov [ebp+dwErrCode] edi +
call sub_1019242  +
pop ecx  +
mov [ebp+var_8] eax +
cmp eax edi +
jnz loc_10267EE  +
mov [ebp+dwErrCode] 0Eh +
jmp loc_1026924  +
lea ecx [ebp+pcbBytesNeeded] +
push ecx  +
push [ebp+pcbBytesNeeded]  +
push eax  +
push [ebp+hService]  +
call esi  +
test eax eax +
jnz loc_102681D  +
call ebx  +
cmp eax edi +
mov [ebp+dwErrCode] eax +
jle loc_1026812  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push offset aFailedToQueryT  +
jmp loc_10268DF  +
mov esi offset hFile +
cmp [ebp+arg_0] edi +
jz loc_1026849  +
mov eax [ebp+var_8] +
cmp dword ptr [eax+4] 4 +
jnz loc_1026849  +
push offset aWillChangeTheS  +
push esi  +
call sub_1018F8F  +
mov [ebp+dwStartType] 3 +
mov [ebp+var_18] 1 +
mov ebx [ebp+arg_8] +
cmp ebx edi +
jz loc_1026891  +
push offset aCurrentBitsSer  +
push esi  +
call sub_1018F8F  +
mov eax [ebp+var_8] +
push dword ptr [eax+18h]  +
call sub_1024600  +
push offset aDesiredDepende  +
push esi  +
call sub_1018F8F  +
push ebx  +
call sub_1024600  +
mov eax [ebp+var_8] +
push ebx  +
push dword ptr [eax+18h]  +
call sub_1024549  +
test eax eax +
jnz loc_1026891  +
mov [ebp+lpDependencies] ebx +
mov [ebp+var_18] 1 +
cmp [ebp+var_18] edi +
jz loc_1026924  +
push offset aChangingSettin  +
push esi  +
call sub_1018F8F  +
push edi  +
push edi  +
push edi  +
push [ebp+lpDependencies]  +
push edi  +
push edi  +
push edi  +
push 0FFFFFFFFh  +
push [ebp+dwStartType]  +
push 0FFFFFFFFh  +
push [ebp+hService]  +
call ds:ChangeServiceConfigW  +
test eax eax +
jnz loc_10268EF  +
call ds:GetLastError  +
cmp eax edi +
mov [ebp+dwErrCode] eax +
jle loc_10268D9  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push offset aFailedToUpdate  +
call sub_101872F  +
jmp loc_1026924  +
mov [ebp+dwErrCode] 139Fh +
jmp loc_1026924  +
push offset asc_1002440  +
push [ebp+lpDependencies]  +
push offset aDependencies  +
push offset aStarttypeServi  +
push offset aUpdatedBitsSer  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
pop ebx  +
push [ebp+hSCObject]  +
mov esi ds:CloseServiceHandle +
call esi  +
cmp [ebp+hService] edi +
jz loc_102693A  +
push [ebp+hService]  +
call esi  +
pop esi  +
cmp [ebp+var_8] edi +
jz loc_1026949  +
push [ebp+var_8]  +
call sub_1017EF4  +
pop ecx  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+dwErrCode] edi +
pop edi  +
setz al  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push edi  +
xor edi edi +
xor ebx ebx +
mov [ebp+var_8] edi +
mov [ebp+var_C] edi +
cmp [ebp+arg_0] edi +
jnz loc_1026987  +
mov ebx 0A0h +
jmp loc_1026AA8  +
push esi  +
mov esi 80000000h +
push esi  +
push offset DatabaseName  +
push edi  +
call ds:OpenSCManagerW  +
mov [ebp+hSCObject] eax +
cmp eax edi +
jnz loc_10269C2  +
call ds:GetLastError  +
mov ebx eax +
cmp ebx edi +
jle loc_10269B7  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push offset aFailedToOpenTh  +
jmp loc_1026A5A  +
push esi  +
push offset ServiceName  +
push eax  +
call ds:OpenServiceW  +
mov [ebp+var_8] eax +
cmp eax edi +
jnz loc_10269F4  +
call ds:GetLastError  +
mov ebx eax +
cmp ebx edi +
jle loc_10269EC  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push offset aFailedToFindBi  +
jmp loc_1026A5A  +
mov esi ds:QueryServiceStatusEx +
lea ecx [ebp+var_4] +
push ecx  +
push edi  +
push edi  +
push edi  +
push eax  +
mov [ebp+var_4] edi +
call esi  +
test eax eax +
jnz loc_1026A7D  +
mov edi ds:GetLastError +
call edi  +
cmp eax 7Ah +
jnz loc_1026A78  +
push [ebp+var_4]  +
xor ebx ebx +
call sub_1019242  +
pop ecx  +
mov [ebp+var_C] eax +
test eax eax +
jnz loc_1026A2F  +
push 0Eh  +
pop ebx  +
jmp loc_1026A7D  +
lea ecx [ebp+var_4] +
push ecx  +
push [ebp+var_4]  +
push eax  +
push 0  +
push [ebp+var_8]  +
call esi  +
test eax eax +
jnz loc_1026A61  +
call edi  +
mov ebx eax +
test ebx ebx +
jle loc_1026A54  +
and eax 0FFFFh +
or eax 80070000h +
push eax  +
push offset aFailedToGetThe  +
call sub_101872F  +
jmp loc_1026A7D  +
mov ecx [ebp+var_C] +
mov eax [ecx+0Ch] +
cmp eax 42Ah +
jnz loc_1026A71  +
mov eax [ecx+10h] +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
jmp loc_1026A7D  +
mov ebx 139Fh +
mov esi ds:CloseServiceHandle +
xor edi edi +
cmp [ebp+hSCObject] edi +
jz loc_1026A8F  +
push [ebp+hSCObject]  +
call esi  +
cmp [ebp+var_8] edi +
jz loc_1026A99  +
push [ebp+var_8]  +
call esi  +
pop esi  +
cmp [ebp+var_C] edi +
jz loc_1026AA8  +
push [ebp+var_C]  +
call sub_1017EF4  +
pop ecx  +
push ebx  +
call ds:SetLastError  +
xor eax eax +
cmp ebx edi +
pop edi  +
setz al  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 244h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor eax eax +
push 208h  +
push eax  +
mov [ebp+LibFileName] ax +
lea eax [ebp-20Eh] +
xor edi edi +
and [ebp+var_214] edi +
push eax  +
call memset  +
add esp 0Ch +
test esi esi +
jnz loc_1026B0F  +
mov edi 0A0h +
jmp loc_1026BB3  +
and [esi] edi +
lea eax [ebp+var_214] +
push eax  +
lea eax [ebp+var_244] +
push eax  +
call sub_1025754  +
test eax eax +
jz loc_1026BA2  +
mov eax [ebp+var_244] +
cmp eax 2 +
jl loc_1026BB0  +
cmp eax 4 +
jle loc_1026B62  +
cmp eax 5 +
jz loc_1026B47  +
cmp eax 6 +
jz loc_1026B62  +
cmp eax 7 +
jnz loc_1026BB0  +
mov eax offset aCsidl_systemXp +
mov uID 0C351h +
mov dword_1040820 0C352h +
jmp loc_1026B7B  +
mov eax offset aCsidl_systemQm +
mov uID 65h +
mov dword_1040820 66h +
push 105h  +
lea ecx [ebp+LibFileName] +
push ecx  +
push eax  +
call sub_10249BB  +
test eax eax +
jz loc_1026BA2  +
lea eax [ebp+LibFileName] +
push eax  +
call ds:LoadLibraryW  +
test eax eax +
jnz loc_1026BAC  +
call ds:GetLastError  +
mov edi eax +
jmp loc_1026BB3  +
mov [esi] eax +
jmp loc_1026BB3  +
push 2  +
pop edi  +
push edi  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
test edi edi +
setz al  +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1027CE5  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
xor eax eax +
push eax  +
mov [ebp+dwErrCode] eax +
mov [ebp+var_4] eax +
lea eax [ebp+var_4] +
push eax  +
mov ebx offset aNetsvcs +
push ebx  +
mov edi offset aSoftwareMicr_1 +
push edi  +
mov esi 80000002h +
push esi  +
call sub_102437F  +
test eax eax +
jz loc_1026C2A  +
push offset ServiceName  +
push [ebp+var_4]  +
call sub_10244E2  +
test eax eax +
jnz loc_1026C44  +
push offset ServiceName  +
push ebx  +
push edi  +
push esi  +
call sub_10251E5  +
test eax eax +
jnz loc_1026C35  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_1026C44  +
push offset aThisChangeRequ  +
push offset hFile  +
call sub_1018F8F  +
xor esi esi +
cmp [ebp+var_4] esi +
jz loc_1026C57  +
push [ebp+var_4]  +
call sub_1017EF4  +
pop ecx  +
mov [ebp+var_4] esi +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+dwErrCode] esi +
pop edi  +
pop esi  +
setz al  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
lea eax [ebp+ServiceStatus] +
push eax  +
push [ebp+hService]  +
call ds:QueryServiceStatus  +
test eax eax +
jz locret_1026CA9  +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jz loc_1026C9D  +
push esi  +
push 7  +
pop ecx  +
lea esi [ebp+ServiceStatus] +
movs   +
pop esi  +
mov ecx [ebp+arg_4] +
xor eax eax +
cmp ecx [ebp+ServiceStatus.dwCurrentState] +
pop edi  +
setz al  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 3Ch +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov esi offset ServiceName +
lea edi [ebp+ServiceName] +
movs   +
movs   +
xor ebx ebx +
mov [ebp+var_1C] eax +
movs   +
cmp eax ebx +
jz loc_1026CE1  +
mov [eax] ebx +
push 0F003Fh  +
push ebx  +
push ebx  +
call ds:OpenSCManagerW  +
mov [ebp+hSCObject] eax +
test eax eax +
jnz loc_1026D02  +
call ds:GetLastError  +
mov ebx eax +
jmp loc_1026E13  +
push 0F01FFh  +
lea ecx [ebp+ServiceName] +
push ecx  +
push eax  +
call ds:OpenServiceW  +
mov edi eax +
test edi edi +
jnz loc_1026D25  +
call ds:GetLastError  +
mov ebx eax +
jmp loc_1026E01  +
lea eax [ebp+ServiceStatus] +
push eax  +
push 4  +
push edi  +
call sub_1026C72  +
mov [ebp+var_18] eax +
test eax eax +
jz loc_1026DF5  +
and [ebp+var_14] ebx +
push offset aService_  +
lea eax [ebp+ServiceName] +
push eax  +
push offset aServiceIsRunni  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
lea eax [ebp+ServiceStatus] +
push eax  +
push 1  +
push edi  +
xor ebx ebx +
call ds:ControlService  +
test eax eax +
jnz loc_1026DA0  +
call ds:GetLastError  +
push offset asc_1002440  +
push 0  +
push dword ptr [ebp-38h]  +
mov ebx eax +
push offset aStatusOfTheSer  +
push esi  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
lea eax [ebp+ServiceStatus] +
push eax  +
push 1  +
push edi  +
call sub_1026C72  +
test eax eax +
jnz loc_1026DC6  +
push 0BB8h  +
call ds:Sleep  +
inc [ebp+var_14]  +
cmp [ebp+var_14] 14h +
jb loc_1026D64  +
jmp loc_1026DE8  +
push offset a__0  +
lea eax [ebp+ServiceName] +
push eax  +
push offset aSuccesfullySto  +
push esi  +
xor ebx ebx +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
push eax  +
call sub_1018F8F  +
cmp [ebp+var_14] 14h +
jnz loc_1026DF5  +
mov ebx 41Dh +
jmp loc_1026E01  +
mov eax [ebp+var_1C] +
test eax eax +
jz loc_1026E01  +
mov ecx [ebp+var_18] +
mov [eax] ecx +
mov esi ds:CloseServiceHandle +
test edi edi +
jz loc_1026E0E  +
push edi  +
call esi  +
push [ebp+hSCObject]  +
call esi  +
push ebx  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
test ebx ebx +
pop edi  +
setz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
push ebx  +
xor ebx ebx +
push 0F003Fh  +
push ebx  +
push ebx  +
mov [ebp+dwErrCode] ebx +
call ds:OpenSCManagerW  +
mov [ebp+hSCObject] eax +
cmp eax ebx +
jnz loc_1026E67  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_1026EFC  +
push esi  +
push edi  +
push 0F01FFh  +
push [ebp+lpServiceName]  +
push eax  +
call ds:OpenServiceW  +
mov edi eax +
cmp edi ebx +
jnz loc_1026E89  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_1026EE8  +
push ebx  +
push ebx  +
push edi  +
call ds:StartServiceW  +
test eax eax +
jnz loc_1026EA9  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
cmp eax 420h +
jnz loc_1026EE8  +
mov [ebp+dwErrCode] ebx +
lea eax [ebp+var_24] +
push eax  +
push 4  +
push edi  +
xor esi esi +
call sub_1026C72  +
test eax eax +
jnz loc_1026EE8  +
cmp esi 2Dh +
jnb loc_1026EDF  +
push 7D0h  +
call ds:Sleep  +
lea eax [ebp+var_24] +
push eax  +
push 4  +
push edi  +
inc esi  +
call sub_1026C72  +
test eax eax +
jz loc_1026EBB  +
cmp esi 2Dh +
jnz loc_1026EE8  +
mov [ebp+dwErrCode] 41Dh +
mov esi ds:CloseServiceHandle +
cmp edi ebx +
jz loc_1026EF5  +
push edi  +
call esi  +
push [ebp+hSCObject]  +
call esi  +
pop edi  +
pop esi  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+dwErrCode] ebx +
pop ebx  +
setz al  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push 0F003Fh  +
xor ebx ebx +
push ebx  +
push ebx  +
call ds:OpenSCManagerW  +
mov [ebp+var_8] eax +
cmp eax ebx +
jnz loc_1026F4E  +
call ds:GetLastError  +
mov esi eax +
push esi  +
call ds:SetLastError  +
xor eax eax +
cmp esi ebx +
jmp loc_1027018  +
push edi  +
push 0F01FFh  +
push offset ServiceName  +
push eax  +
call ds:OpenServiceW  +
mov edi ds:CloseServiceHandle +
mov [ebp+hSCObject] eax +
cmp eax ebx +
jz loc_1026FC6  +
push offset aDeletingTheBit  +
mov esi offset hFile +
push esi  +
call sub_1018F8F  +
push [ebp+hSCObject]  +
call ds:DeleteService  +
test eax eax +
jnz loc_1026FBF  +
call ds:GetLastError  +
cmp eax 430h +
jz loc_1026FB4  +
test eax eax +
jle loc_1026FA5  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
push ebx  +
push offset aFailedToDelete  +
call sub_101872F  +
jmp loc_1026FBF  +
push offset aCouldNotDelete  +
push esi  +
call sub_1018F8F  +
push [ebp+hSCObject]  +
call edi  +
jmp loc_1026FFF  +
call ds:GetLastError  +
cmp eax 424h +
jz loc_1026FF0  +
cmp eax ebx +
jle loc_1026FE1  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
push ebx  +
push offset aCouldNotAccess  +
call sub_101872F  +
jmp loc_1026FFF  +
push offset aBitsServiceDoe  +
push offset hFile  +
call sub_1018F8F  +
push [ebp+var_8]  +
call edi  +
push ebx  +
call sub_1023E47  +
mov esi eax +
push esi  +
call ds:SetLastError  +
xor eax eax +
test esi esi +
pop edi  +
pop esi  +
setz al  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 860h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor eax eax +
xor esi esi +
push 7FEh  +
mov [ebp+Buffer] ax +
lea eax [ebp-802h] +
push esi  +
push eax  +
mov [ebp+dwErrCode] esi +
mov [ebp+var_824] esi +
call memset  +
add esp 0Ch +
push offset aRecreatingTheB  +
mov ebx offset hFile +
push ebx  +
mov [ebp+hLibModule] esi +
mov [ebp+var_81C] esi +
call sub_1018F8F  +
lea eax [ebp+var_824] +
push eax  +
call sub_102480F  +
test eax eax +
jnz loc_10270A4  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_1027372  +
push 0F003Fh  +
push esi  +
push esi  +
call ds:OpenSCManagerW  +
mov [ebp+hSCManager] eax +
cmp eax esi +
jnz loc_10270CC  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
jmp loc_102734A  +
lea eax [ebp+hLibModule] +
push eax  +
call sub_1026AC1  +
xor ecx ecx +
inc ecx  +
test eax eax +
jz loc_10270E5  +
mov [ebp+var_81C] ecx +
mov edx [ebp+var_824] +
mov eax 1F4h +
mov [ebp+lpBinaryPathName] offset aSystemrootSy_0 +
cmp edx eax +
jz loc_1027108  +
mov [ebp+lpBinaryPathName] offset aSystemrootSy_1 +
sub edx eax +
jz loc_1027128  +
dec edx  +
dec edx  +
jz loc_102711C  +
mov [ebp+lpDependencies] offset aRpcss +
jmp loc_1027132  +
mov [ebp+lpDependencies] offset aRpcss_0 +
jmp loc_1027132  +
mov [ebp+lpDependencies] offset aRpcss_1 +
push edi  +
xor eax eax +
lea edi [ebp+var_848] +
stos   +
stos   +
stos   +
stos   +
stos   +
lea eax [ebp+var_860] +
mov [ebp+var_838] eax +
mov eax 0EA60h +
mov [ebp+var_848] 258h +
mov [ebp+var_844] esi +
mov [ebp+var_840] esi +
mov [ebp+var_83C] 3 +
mov [ebp+var_860] ecx +
mov [ebp+var_85C] eax +
mov [ebp+var_858] ecx +
mov [ebp+var_854] eax +
mov [ebp+var_850] esi +
mov [ebp+var_84C] eax +
cmp [ebp+var_81C] esi +
jz loc_10271CD  +
push 400h  +
lea eax [ebp+Buffer] +
push eax  +
push uID  +
push [ebp+hLibModule]  +
call ds:LoadStringW  +
test eax eax +
jz loc_10271CD  +
lea eax [ebp+Buffer] +
mov [ebp+lpDisplayName] eax +
jmp loc_10271D7  +
mov [ebp+lpDisplayName] offset aBackgroundInte +
mov [ebp+var_820] esi +
mov edi [ebp+var_820] +
push offset aToCreateTheBit  +
push esi  +
inc edi  +
push edi  +
push offset aAttempt  +
push ebx  +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
push esi  +
push esi  +
push [ebp+lpDependencies]  +
push esi  +
push esi  +
push [ebp+lpBinaryPathName]  +
push 1  +
push 3  +
push 20h  +
push 0F01FFh  +
push [ebp+lpDisplayName]  +
push offset ServiceName  +
push [ebp+hSCManager]  +
call ds:CreateServiceW  +
mov [ebp+hSCObject] eax +
cmp eax esi +
jnz loc_1027291  +
call ds:GetLastError  +
push offset asc_1002440  +
push esi  +
push eax  +
push offset aFailedToCreate  +
push ebx  +
mov [ebp+var_834] eax +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
push eax  +
call sub_1018F8F  +
mov eax [ebp+var_834] +
cmp eax 430h +
jnz loc_102732F  +
cmp [ebp+var_820] 0Fh +
jnb loc_102732F  +
push 1388h  +
call ds:Sleep  +
mov [ebp+var_820] edi +
cmp [ebp+hSCObject] esi +
jz loc_10271DD  +
push offset aSucceeded_  +
push ebx  +
call sub_1018F8F  +
cmp [ebp+var_81C] esi +
jz loc_10272E6  +
push 400h  +
lea eax [ebp+Buffer] +
push eax  +
push dword_1040820  +
push [ebp+hLibModule]  +
call ds:LoadStringW  +
test eax eax +
jz loc_10272E6  +
lea eax [ebp+Buffer] +
mov [ebp+Info] eax +
jmp loc_10272F0  +
mov [ebp+Info] offset aTransfersFiles +
mov edi ds:ChangeServiceConfig2W +
lea eax [ebp+Info] +
push eax  +
push 1  +
push [ebp+hSCObject]  +
call edi  +
test eax eax +
jz loc_1027329  +
lea eax [ebp+var_848] +
push eax  +
push 2  +
push [ebp+hSCObject]  +
call edi  +
test eax eax +
jz loc_1027329  +
call sub_102661F  +
test eax eax +
jnz loc_1027335  +
call ds:GetLastError  +
mov [ebp+dwErrCode] eax +
pop edi  +
cmp [ebp+hSCObject] esi +
jz loc_102734A  +
push [ebp+hSCObject]  +
call ds:CloseServiceHandle  +
cmp [ebp+hSCManager] esi +
jz loc_102735E  +
push [ebp+hSCManager]  +
call ds:CloseServiceHandle  +
cmp [ebp+hLibModule] esi +
jz loc_1027372  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [ebp+dwErrCode] esi +
pop esi  +
setz al  +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 38h +
mov eax dword_102C358 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
push 2  +
push ebx  +
mov [ebp+dwErrCode] ebx +
mov [ebp+ppv] ebx +
mov [ebp+var_1C] ebx +
mov [ebp+var_2C] ebx +
mov [ebp+var_24] ebx +
mov [ebp+var_30] ebx +
mov [ebp+var_28] ebx +
mov [ebp+var_38] ebx +
call ds:CoInitializeEx  +
cmp eax ebx +
jge loc_10273FD  +
push eax  +
call sub_1023E47  +
push ebx  +
push eax  +
push offset aFailedToInitia  +
push offset hFile  +
mov [ebp+dwErrCode] eax +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
jmp loc_10275BC  +
push offset aAttemptingToIn  +
mov esi offset hFile +
push esi  +
mov [ebp+var_38] 1 +
call sub_1018F8F  +
push offset aTheBitsService  +
push esi  +
call sub_1018F8F  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 4  +
push ebx  +
push offset rclsid  +
call ds:CoCreateInstance  +
mov edi eax +
cmp edi ebx +
jge loc_1027455  +
push edi  +
call sub_1023E47  +
push edi  +
push offset aFailedToInstan  +
mov [ebp+dwErrCode] eax +
call sub_101872F  +
jmp loc_10275BC  +
push offset aSuccessIbackgr  +
push esi  +
call sub_1018F8F  +
mov edi [ebp+arg_0] +
mov eax [edi] +
cmp eax 6 +
jz loc_1027487  +
cmp eax 5 +
jz loc_1027487  +
cmp eax 7 +
jz loc_1027487  +
cmp eax 8 +
jz loc_1027487  +
cmp eax 9 +
jz loc_1027487  +
cmp eax 0Ah +
jnz loc_10275DF  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_1C] +
push edx  +
lea edx [ebp+var_14] +
push edx  +
push ebx  +
push offset dword_1007F30  +
push eax  +
call dword ptr [ecx+0Ch]  +
test eax eax +
jl loc_10275B3  +
push offset aSuccessIback_0  +
push esi  +
call sub_1018F8F  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
lea edx [ebp+var_2C] +
push edx  +
push offset dword_1008ED4  +
push eax  +
call dword ptr [ecx]  +
mov ebx eax +
test ebx ebx +
jge loc_10274D9  +
push ebx  +
call sub_1023E47  +
push ebx  +
push offset aFailedToQueryF  +
jmp loc_102759A  +
push offset aSuccessIback_1  +
push esi  +
call sub_1018F8F  +
mov eax [edi] +
cmp eax 7 +
jz loc_10274FA  +
cmp eax 8 +
jz loc_10274FA  +
cmp eax 9 +
jz loc_10274FA  +
cmp eax 0Ah +
jnz loc_102752A  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
lea edx [ebp+var_24] +
push edx  +
push offset dword_1008EE4  +
push eax  +
call dword ptr [ecx]  +
mov ebx eax +
test ebx ebx +
jge loc_102751F  +
push ebx  +
call sub_1023E47  +
push ebx  +
push offset aFailedToQuer_0  +
jmp loc_102759A  +
push offset aSuccessIback_2  +
push esi  +
call sub_1018F8F  +
mov eax [edi] +
cmp eax 8 +
jz loc_102753B  +
cmp eax 9 +
jz loc_102753B  +
cmp eax 0Ah +
jnz loc_102756B  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
lea edx [ebp+var_30] +
push edx  +
push offset dword_1008EF4  +
push eax  +
call dword ptr [ecx]  +
mov ebx eax +
test ebx ebx +
jge loc_1027560  +
push ebx  +
call sub_1023E47  +
push ebx  +
push offset aFailedToQuer_1  +
jmp loc_102759A  +
push offset aSuccessIback_3  +
push esi  +
call sub_1018F8F  +
mov edi [edi] +
cmp edi 9 +
jz loc_1027577  +
cmp edi 0Ah +
jnz loc_10275B1  +
mov eax [ebp+var_1C] +
mov ecx [eax] +
lea edx [ebp+var_28] +
push edx  +
push offset dword_1008F14  +
push eax  +
call dword ptr [ecx]  +
mov edi eax +
test edi edi +
jge loc_10275A6  +
push edi  +
call sub_1023E47  +
push edi  +
push offset aFailedToQuer_2  +
mov [ebp+dwErrCode] eax +
call sub_101872F  +
xor ebx ebx +
jmp loc_10275BC  +
push offset aSuccessIback_4  +
push esi  +
call sub_1018F8F  +
xor ebx ebx +
mov eax [ebp+var_1C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+20h]  +
cmp [ebp+dwErrCode] 80080005h +
jnz loc_10275DF  +
lea eax [ebp+var_34] +
push eax  +
mov [ebp+var_34] ebx +
call sub_1026964  +
test eax eax +
jz loc_10275DF  +
mov eax [ebp+var_34] +
cmp eax ebx +
jz loc_10275DF  +
mov [ebp+dwErrCode] eax +
mov eax [ebp+ppv] +
cmp eax ebx +
jz loc_10275EF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+ppv] ebx +
mov eax [ebp+var_2C] +
cmp eax ebx +
jz loc_10275FF  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_2C] ebx +
mov eax [ebp+var_24] +
cmp eax ebx +
jz loc_102760F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_24] ebx +
mov eax [ebp+var_30] +
cmp eax ebx +
jz loc_102761F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_30] ebx +
mov eax [ebp+var_28] +
cmp eax ebx +
jz loc_102762F  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+var_28] ebx +
cmp [ebp+var_38] ebx +
jz loc_102763A  +
call ds:CoUninitialize  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
mov ecx [ebp+var_4] +
xor eax eax +
cmp [ebp+dwErrCode] ebx +
pop edi  +
setz al  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1027CE5  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
xor ebx ebx +
push 2  +
push ebx  +
mov [ebp+var_10] ebx +
mov [ebp+ppv] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_8] ebx +
call ds:CoInitializeEx  +
cmp eax ebx +
jge loc_10276AA  +
push eax  +
call sub_1023E47  +
push ebx  +
push eax  +
push offset aFailedToInitia  +
push offset hFile  +
mov [ebp+dwErrCode] eax +
call sub_1018F8F  +
push eax  +
call sub_1018FC7  +
jmp loc_1027980  +
push esi  +
push edi  +
mov [ebp+var_14] 1 +
mov esi offset hFile +
jmp loc_10276BC  +
xor ebx ebx +
push offset aAttemptingToIn  +
push esi  +
call sub_1018F8F  +
push offset aTheBitsService  +
push esi  +
call sub_1018F8F  +
lea eax [ebp+ppv] +
push eax  +
push offset riid  +
push 4  +
push ebx  +
push offset rclsid  +
call ds:CoCreateInstance  +
mov edi eax +
cmp edi ebx +
jge loc_102792A  +
push edi  +
call sub_1023E47  +
push edi  +
xor ebx ebx +
push offset aFailedToInst_0  +
mov [ebp+dwErrCode] eax +
inc ebx  +
call sub_101872F  +
mov eax [ebp+dwErrCode] +
cmp eax [ebp+var_10] +
jz loc_1027938  +
cmp eax 422h +
jz loc_102790C  +
cmp eax 424h +
jz loc_10278E9  +
cmp eax 42Ch +
jz loc_10278AA  +
cmp eax 433h +
jz loc_10278AA  +
cmp eax 43Bh +
jz loc_102788B  +
cmp eax 80080005h +
jnz loc_10277B3  +
and [ebp+var_10] 0 +
lea eax [ebp+var_10] +
push eax  +
call sub_1026964  +
test eax eax +
jnz loc_102776C  +
push offset aFailedToGetDet  +
jmp loc_10277B8  +
push [ebp+var_10]  +
call sub_1023E47  +
mov edi eax +
push edi  +
push offset aDetailedErrorC  +
call sub_1019252  +
cmp edi 2 +
jz loc_1027876  +
cmp edi 3 +
jz loc_1027861  +
cmp edi 6A6h +
jz loc_102781A  +
cmp edi 6B5h +
jz loc_10277FF  +
cmp edi 80040154h +
jz loc_10277CC  +
cmp edi 80040206h +
jz loc_10277CC  +
push offset aAnalysisOfTheE  +
push esi  +
call sub_1018F8F  +
xor ebx ebx +
mov [ebp+var_8] 1 +
jmp loc_1027922  +
xor ebx ebx +
mov [ebp+var_8] 1 +
call sub_1024674  +
test eax eax +
jz loc_1027922  +
push offset aProbableCauseB  +
push esi  +
call sub_1018F8F  +
push offset aIfTheComCatalo  +
push esi  +
call sub_1018F8F  +
push offset aSuggestedFixSe  +
jmp loc_1027856  +
push offset aProbableCauseE  +
push esi  +
xor ebx ebx +
mov [ebp+var_8] 1 +
call sub_1018F8F  +
push offset aSuggestedFixEn  +
jmp loc_1027856  +
xor ebx ebx +
mov [ebp+var_8] 1 +
call sub_1024674  +
test eax eax +
jz loc_1027922  +
push offset aProbableCauseT  +
push esi  +
call sub_1018F8F  +
push offset aButThe  +
push esi  +
call sub_1018F8F  +
push offset aSuggestedFix_0  +
push esi  +
call sub_1018F8F  +
push offset aTheTerminalSer  +
push esi  +
call sub_1018F8F  +
jmp loc_1027922  +
push offset aTheErrorCodeEr  +
push esi  +
call sub_1018F8F  +
call sub_1025415  +
jmp loc_1027922  +
push offset aTheErrorCode_0  +
push esi  +
call sub_1018F8F  +
call sub_102661F  +
jmp loc_1027922  +
call sub_1024674  +
test eax eax +
jnz loc_1027922  +
push offset aTheErrorCode_1  +
push esi  +
call sub_1018F8F  +
call sub_1026BD6  +
jmp loc_1027922  +
push offset aTheErrorCode_2  +
push esi  +
call sub_1018F8F  +
lea eax [ebp+var_18] +
push eax  +
call sub_102480F  +
test eax eax +
jz loc_1027922  +
mov eax [ebp+var_18] +
sub eax 1F4h +
jz loc_10278E2  +
dec eax  +
dec eax  +
jz loc_10278DB  +
push offset aRpcss  +
push 0FFFFFFFFh  +
push 0  +
jmp loc_102791D  +
push offset aRpcss_0  +
jmp loc_10278D5  +
push offset aRpcss_1  +
jmp loc_10278D5  +
push offset aTheErrorCode_3  +
push esi  +
call sub_1018F8F  +
call sub_1027024  +
push offset ServiceName  +
call sub_1026E37  +
push 0  +
call sub_1026CB2  +
jmp loc_1027922  +
push offset aTheErrorCode_4  +
push esi  +
call sub_1018F8F  +
push 0  +
push 3  +
push 1  +
call sub_1026709  +
mov eax [ebp+dwErrCode] +
mov [ebp+var_10] eax +
jmp loc_102792E  +
and [ebp+dwErrCode] 0 +
test ebx ebx +
jnz loc_10276BA  +
jmp loc_102793F  +
mov [ebp+var_8] 1 +
cmp [ebp+var_8] 0 +
jz loc_102797C  +
push offset aForMoreInforma  +
push esi  +
call sub_1018F8F  +
push offset aListOfKnownIss  +
push esi  +
call sub_1018F8F  +
push offset aTheMicrosoftKn  +
push esi  +
call sub_1018F8F  +
push offset aYouCanAlsoPost  +
push esi  +
call sub_1018F8F  +
push offset aMicrosoft_publ  +
push esi  +
call sub_1018F8F  +
pop edi  +
xor ebx ebx +
pop esi  +
cmp [ebp+dwErrCode] 80080005h +
jnz loc_10279AD  +
lea eax [ebp+var_10] +
push eax  +
mov [ebp+var_10] ebx +
call sub_1026964  +
test eax eax +
jz loc_10279AD  +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_10279AD  +
jle loc_10279AA  +
movzx eax ax +
or eax 80070000h +
mov [ebp+dwErrCode] eax +
mov eax [ebp+ppv] +
cmp eax ebx +
jz loc_10279BD  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp+ppv] ebx +
cmp [ebp+var_14] ebx +
jz loc_10279C8  +
call ds:CoUninitialize  +
push [ebp+dwErrCode]  +
call ds:SetLastError  +
xor eax eax +
cmp [ebp+dwErrCode] ebx +
pop ebx  +
setz al  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1027A09  +
test eax eax +
jnz loc_1027A0E  +
mov ecx [esi] +
test ecx ecx +
jz loc_1027A06  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_10279FA  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_1040848 +
push offset dword_1040838  +
push dword_1040844  +
mov dword_1040838 eax +
push offset dword_1040828  +
push offset dword_104082C  +
push offset dword_1040824  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1040834 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1027A96  +
cmp eax esi +
jnz loc_1027A89  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1027A99  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1027A70  +
xor esi esi +
inc esi  +
mov eax dword_1040B74 +
cmp eax esi +
jnz loc_1027AAC  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1027AE7  +
mov eax dword_1040B74 +
test eax eax +
jnz loc_1027AE1  +
mov dword_1040B74 esi +
push offset dword_10012F0  +
push offset dword_10012E4  +
call sub_10279ED  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1027AE7  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1027BB1  +
mov dword_1040840 esi +
mov eax dword_1040B74 +
cmp eax esi +
jnz loc_1027B0B  +
push offset dword_10012E0  +
push offset dword_10012CC  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_1040B74 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1027B18  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1040B84 ebx +
jz loc_1027B39  +
push offset dword_1040B84  +
call sub_1028029  +
pop ecx  +
test eax eax +
jz loc_1027B39  +
push ebx  +
push 2  +
push ebx  +
call dword_1040B84  +
push dword_1040828  +
push dword_104082C  +
push dword_1040824  +
call sub_10176E8  +
add esp 0Ch +
mov dword_104083C eax +
cmp dword_1040830 ebx +
jnz loc_1027B97  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_104083C eax +
xor ebx ebx +
cmp dword_1040830 ebx +
jnz loc_1027B97  +
push eax  +
call ds:_exit  +
cmp dword_1040840 ebx +
jnz loc_1027BA5  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_104083C +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1027BCE  +
xor eax eax +
jmp loc_1027C1B  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1027BCA  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1027C08  +
cmp ecx 20Bh +
jnz loc_1027BCA  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1027BCA  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1027C16  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1027BCA  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1040830 eax +
call sub_10281C2  +
push eax  +
call ds:__set_app_type  +
or dword_1040B7C 0FFFFFFFFh +
or dword_1040B80 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1040850 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_104084C +
mov [eax] ecx +
call sub_1028154  +
cmp dword_102C368 0 +
jnz loc_1027C74  +
push offset sub_1028154  +
call ds:__setusermatherr  +
pop ecx  +
call sub_102813C  +
xor eax eax +
retn   +
***
call sub_1028201  +
jmp sub_1027A4E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call ds:??1type_info@@UAE@XZ  +
test byte ptr [ebp+8] 1 +
jz loc_1027CB6  +
push esi  +
call sub_1017EDF  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
cmp ecx dword_102C358 +
jnz loc_1027CF0  +
retn 0  +
jmp loc_1028297  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_102C358 +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_102C358 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_102C358 +
xor eax ebp +
push eax  +
mov [ebp-10h] eax +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_102C358 +
xor eax ebp +
push eax  +
mov [ebp-14h] eax +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov ecx [ebp-10h] +
xor ecx ebp +
call sub_1027CE5  +
jmp __EH_epilog3  +
***
mov ecx [ebp-14h] +
xor ecx ebp +
call sub_1027CE5  +
jmp __EH_epilog3  +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp __alloca_probe  +
***
call __SEH_prolog4  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call sub_1027E8D  +
neg eax  +
sbb eax eax +
neg eax  +
pop ecx  +
dec eax  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1027F70  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1027F70  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1027F6A  +
cmp eax 19930521h +
jz loc_1027F6A  +
cmp eax 19930522h +
jz loc_1027F6A  +
cmp eax 1994000h +
jnz loc_1027F70  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset dword_1027F30+3)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1027FB6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1027FB2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_102801D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1028015  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_102801F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1028005  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1027FA0  +
pop ecx  +
test eax eax +
jz loc_1028086  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1027FE0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1028086  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_102808F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1027CE5  +
push offset dword_102C358  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_10281B5  +
cmp ecx 0FFFFFFFFh +
jz loc_10281B5  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_10281AE  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_10281AE  +
cmp edx 10000000h +
jnb loc_10281AE  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_10281AE  +
jmp loc_10281A9  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_10281F7  +
push eax  +
call sub_102815C  +
test eax eax +
jz loc_10281F7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_10281EC  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_10281F7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_102C358 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1028233  +
test eax ebx +
jz loc_1028233  +
not eax  +
mov dword_102C35C eax +
jmp loc_102828E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_102827A  +
test dword_102C358 ebx +
jnz loc_102827F  +
mov esi 0BB40E64Fh +
mov dword_102C358 esi +
not esi  +
mov dword_102C35C esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1040958 eax +
mov dword_1040954 ecx +
mov dword_1040950 edx +
mov dword_104094C ebx +
mov dword_1040948 esi +
mov dword_1040944 edi +
mov word_1040970 ss +
mov word_1040964 cs +
mov word_1040940 ds +
mov word_104093C es +
mov word_1040938 fs +
mov word_1040934 gs +
pushf   +
pop dword_1040968  +
mov eax [ebp+0] +
mov dword_104095C eax +
mov eax [ebp+4] +
mov dword_1040960 eax +
lea eax [ebp+8] +
mov dword_104096C eax +
mov eax [ebp-320h] +
mov dword_10408A8 10001h +
mov eax dword_1040960 +
mov dword_1040864 eax +
mov dword_1040858 0C0000409h +
mov dword_104085C 1 +
mov eax dword_102C358 +
mov [ebp-328h] eax +
mov eax dword_102C35C +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
push ecx  +
lea ecx [esp+4] +
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb cs20  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp cs10  +
***
lea ecx [ebp-1Ch] +
jmp sub_102077D  +
***
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
and dword_102C3C0 0 +
mov hFile eax +
mov byte_102C3BC 1 +
retn   +
***
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
and dword_10363D0 0 +
mov dword_10363C8 eax +
mov byte_10363CC 1 +
retn   +
***
mov ecx offset dword_102C3B4 +
jmp sub_101A0FE  +
***
retn   +
***
