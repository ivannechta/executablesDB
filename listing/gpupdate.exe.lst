retf 0  +
***
retf   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 194h +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_0] +
cmp dword ptr [esi] 0 +
push edi  +
mov edi [eax] +
jz loc_100163B  +
push 0C8h  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jnz loc_1001635  +
jmp loc_100163E  +
lea ecx [ebp+Buffer] +
push ecx  +
push eax  +
call ds:_wcsicmp  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_100164F  +
add edi 4 +
mov eax [edi] +
test eax eax +
jnz loc_100161E  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002C19  +
leave   +
retn 10h  +
xor eax eax +
inc eax  +
mov [ebx] eax +
dec dword ptr [esi]  +
jmp loc_100163E  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 198h +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_C] +
push esi  +
mov esi [eax] +
push edi  +
mov edi [ebp+arg_0] +
cmp dword ptr [edi] 0 +
mov [ebp+var_198] ecx +
jz loc_10016E7  +
push 0C8h  +
lea eax [ebp+String] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_10016EA  +
cmp dword ptr [esi] 0 +
push ebx  +
jz loc_10016DD  +
mov ebx ds:lstrlenW +
lea eax [ebp+String] +
push eax  +
call ebx  +
push eax  +
lea eax [ebp+String] +
push eax  +
push dword ptr [esi]  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jz loc_10016FA  +
add esi 4 +
cmp dword ptr [esi] 0 +
jnz loc_10016B5  +
mov eax [ebp+var_198] +
and dword ptr [eax] 0 +
pop ebx  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_1002C19  +
leave   +
retn 10h  +
lea eax [ebp+String] +
push eax  +
call ebx  +
mov ecx [esi] +
lea eax [ecx+eax*2] +
mov ecx [ebp+var_198] +
mov [ecx] eax +
dec dword ptr [edi]  +
jmp loc_10016E6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 19Ch +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_C] +
push ebx  +
push esi  +
mov esi [eax] +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+var_198] ecx +
mov [ebp+var_19C] ebx +
cmp [edi] ebx +
jz loc_10017CC  +
push 0C8h  +
lea eax [ebp+String] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_10017CF  +
cmp [esi] ebx +
jz loc_10017CC  +
mov ebx ds:lstrlenW +
lea eax [ebp+String] +
push eax  +
call ebx  +
push eax  +
lea eax [ebp+String] +
push eax  +
push dword ptr [esi]  +
call ds:_wcsnicmp  +
add esp 0Ch +
test eax eax +
jz loc_10017A1  +
add esi 4 +
cmp dword ptr [esi] 0 +
jnz loc_1001777  +
jmp loc_10017CC  +
push 0Ah  +
lea eax [ebp+var_19C] +
push eax  +
lea eax [ebp+String] +
push eax  +
call ebx  +
mov ecx [esi] +
lea eax [ecx+eax*2] +
push eax  +
call ds:wcstol  +
mov ecx [ebp+var_198] +
add esp 0Ch +
mov [ecx] eax +
dec dword ptr [edi]  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002C19  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 194h +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_1001806  +
xor eax eax +
jmp loc_100183A  +
push 0C8h  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_1001802  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
call ds:_wcsicmp  +
neg eax  +
pop ecx  +
sbb eax eax +
pop ecx  +
inc eax  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1002C19  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0C8h  +
push [ebp+lpBuffer]  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
neg eax  +
sbb eax eax +
neg eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+lpBuffer] +
xor eax eax +
push eax  +
push 104h  +
push esi  +
push eax  +
push [ebp+dwMessageId]  +
mov [esi] ax +
push eax  +
push 12FFh  +
call ds:FormatMessageW  +
mov eax esi +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
push 6  +
xor eax eax +
pop ecx  +
lea edi [ebp+var_1C] +
stos   +
mov eax [ebx+8] +
xor esi esi +
inc esi  +
xor edi edi +
mov [ebx+10h] esi +
mov dword ptr [ebx+0Ch] 80004005h +
mov [ebx+14h] edi +
cmp eax 0FFFFFFFFh +
jnz loc_10018EA  +
or eax eax +
jmp loc_10018F0  +
imul eax eax +
lea ecx [ebp+var_1C] +
push ecx  +
push edi  +
push eax  +
push dword ptr [ebx+4]  +
push dword ptr [ebx]  +
call GPAPI_115  +
test eax eax +
jnz loc_1001925  +
call ds:GetLastError  +
cmp eax 5B4h +
jnz loc_100191D  +
mov dword ptr [ebx+10h] 3 +
mov [ebx+0Ch] edi +
jmp loc_100195D  +
mov [ebx+10h] esi +
mov [ebx+0Ch] eax +
jmp loc_100195D  +
cmp [ebx+8] edi +
jz loc_1001959  +
mov eax [ebp+var_8] +
mov [ebx+0Ch] edi +
lea edi [ebx+18h] +
lea esi [ebp+var_1C] +
movs   +
movs   +
movs   +
movs   +
test eax eax +
jz loc_1001947  +
mov dword ptr [ebx+10h] 1 +
jmp loc_1001920  +
cmp [ebp+var_C] 0 +
jz loc_1001959  +
xor eax eax +
cmp dword ptr [ebx+4] 1 +
setz al  +
mov [ebx+14h] eax +
and dword ptr [ebx+10h] 0 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002C19  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_1001989  +
cmp ecx 7FFFFFFFh +
jbe loc_100198E  +
mov eax 80070057h +
test eax eax +
jl loc_10019CA  +
push ebx  +
push esi  +
push edi  +
push [ebp+arg_C]  +
mov edi [ebp+arg_0] +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_10019BA  +
cmp eax esi +
ja loc_10019BA  +
jnz loc_10019C5  +
jmp loc_10019BF  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 324h +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 0C8h +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
push [ebp+uID]  +
push hInstance  +
call ds:LoadStringW  +
test eax eax +
jz loc_1001A2F  +
lea eax [ebp+arg_4] +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push esi  +
lea eax [ebp+var_324] +
push eax  +
call sub_1001973  +
lea eax [ebp+var_324] +
push eax  +
call ds:wprintf  +
pop ecx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1002C19  +
leave   +
retn   +
***
mov edi edi +
push esi  +
push 67h  +
pop esi  +
push esi  +
call sub_10019D3  +
inc esi  +
pop ecx  +
cmp esi 92h +
jbe loc_1001A47  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi ds:LoadStringW +
push 14h  +
lea eax [ebp+Buffer] +
push eax  +
push 0D2h  +
push hInstance  +
call esi  +
test eax eax +
jnz loc_1001A92  +
xor eax eax +
jmp loc_1001B0C  +
push 14h  +
lea eax [ebp+var_54] +
push eax  +
push 0D3h  +
push hInstance  +
call esi  +
test eax eax +
jz loc_1001A8E  +
mov esi ds:towupper +
push ebx  +
push edi  +
cmp [ebp+arg_0] 0 +
jz loc_1001ABE  +
push 0D0h  +
jmp loc_1001AC3  +
push 0D1h  +
call sub_10019D3  +
pop ecx  +
call ds:getwchar  +
movzx edi ax +
cmp di 0Ah +
jz loc_1001AE4  +
call ds:getwchar  +
cmp ax 0Ah +
jnz loc_1001AD8  +
push dword ptr [ebp+Buffer]  +
call esi  +
push edi  +
mov bx ax +
call esi  +
pop ecx  +
pop ecx  +
cmp ax bx +
jz loc_1001B1B  +
push dword ptr [ebp+var_54]  +
call esi  +
push edi  +
mov bx ax +
call esi  +
pop ecx  +
pop ecx  +
cmp ax bx +
jnz loc_1001AB1  +
xor eax eax +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_1002C19  +
leave   +
retn 4  +
xor eax eax +
inc eax  +
jmp loc_1001B0A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
xor edx edx +
cmp [eax] edx +
push esi  +
setz cl  +
mov esi ecx +
mov ecx [eax+10h] +
sub ecx edx +
jz loc_1001B86  +
dec ecx  +
jz loc_1001B6F  +
dec ecx  +
jz loc_1001B52  +
dec ecx  +
jnz loc_1001BA1  +
push ds:dword_100117C[esi*4]  +
jmp loc_1001B9B  +
push offset word_1004280  +
push dword ptr [eax+0Ch]  +
call sub_1001879  +
push eax  +
push ds:uID[esi*4]  +
call sub_10019D3  +
pop ecx  +
jmp loc_1001BA0  +
push offset word_1004280  +
push dword ptr [eax+0Ch]  +
call sub_1001879  +
push eax  +
push ds:dword_100116C[esi*4]  +
jmp loc_1001B67  +
cmp [eax+8] edx +
jnz loc_1001B94  +
push ds:dword_100118C[esi*4]  +
jmp loc_1001B9B  +
push ds:dword_1001184[esi*4]  +
call sub_10019D3  +
pop ecx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10Ch +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
or [ebp+var_10C] 0FFFFFFFFh +
mov esi offset a_ocp +
lea edi [ebp+var_30] +
movs   +
movs   +
xor ebx ebx +
movs   +
mov [ebp+var_CC] eax +
xor eax eax +
lea edi [ebp+var_26] +
stos   +
stos   +
push ebx  +
push ebx  +
stos   +
push 1  +
push ebx  +
mov [ebp+ReturnLength] 258h +
mov [ebp+var_D4] ebx +
mov [ebp+nCount] ebx +
mov [ebp+hObject] ebx +
mov [ebp+var_DC] ebx +
mov [ebp+var_E4] ebx +
mov [ebp+var_100] ebx +
mov [ebp+var_F4] ebx +
mov [ebp+var_EC] ebx +
mov [ebp+var_F0] ebx +
mov [ebp+var_F8] ebx +
mov [ebp+var_E8] ebx +
mov [ebp+var_FC] ebx +
mov [ebp+Handles] ebx +
mov [ebp+var_104] ebx +
stos   +
call ds:HeapSetInformation  +
call ds:GetConsoleOutputCP  +
cmp eax ebx +
jz loc_1001C6D  +
push 0Ah  +
lea ecx [ebp-2Eh] +
push ecx  +
push eax  +
call ds:_ultow  +
add esp 0Ch +
lea eax [ebp+var_30] +
push eax  +
push ebx  +
call ds:_wsetlocale  +
pop ecx  +
pop ecx  +
push ebx  +
call ds:SetThreadUILanguage  +
mov eax [ebp+var_CC] +
push dword ptr [eax]  +
call ds:GetModuleHandleW  +
mov edi 12Eh +
push edi  +
push offset Buffer  +
mov hInstance eax +
call sub_100184E  +
test eax eax +
jz loc_1002426  +
push 12Fh  +
push offset word_10040F0  +
call sub_100184E  +
test eax eax +
jz loc_1002426  +
dec [ebp+arg_0]  +
add [ebp+var_CC] 4 +
lea eax [ebp+var_DC] +
push eax  +
push 12Dh  +
lea eax [ebp+var_CC] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_100165D  +
test eax eax +
jz loc_1001D9F  +
lea eax [ebp+ReturnLength] +
push eax  +
push 131h  +
lea eax [ebp+var_CC] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_1001719  +
test eax eax +
jz loc_1001D9F  +
lea eax [ebp+var_E4] +
push eax  +
push 132h  +
lea eax [ebp+var_CC] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_10015D5  +
test eax eax +
jz loc_1001D9F  +
lea eax [ebp+var_100] +
push eax  +
push 133h  +
lea eax [ebp+var_CC] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_10015D5  +
test eax eax +
jz loc_1001D9F  +
lea eax [ebp+var_F4] +
push eax  +
push 134h  +
lea eax [ebp+var_CC] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_10015D5  +
test eax eax +
jz loc_1001D9F  +
lea eax [ebp+var_EC] +
push eax  +
push 135h  +
lea eax [ebp+var_CC] +
push eax  +
lea eax [ebp+arg_0] +
push eax  +
call sub_10015D5  +
test eax eax +
jz loc_1001D9F  +
cmp [ebp+arg_0] ebx +
jnz loc_1001D9F  +
xor esi esi +
inc esi  +
jmp loc_1001DA1  +
xor esi esi +
mov [ebp+var_CC] ebx +
cmp esi ebx +
jz loc_1001E12  +
cmp [ebp+var_DC] ebx +
jnz loc_1001DBF  +
mov [ebp+var_CC] 3 +
jmp loc_1001DFD  +
push 12Fh  +
push [ebp+var_DC]  +
call sub_10017E5  +
test eax eax +
jz loc_1001DDF  +
mov [ebp+var_CC] 1 +
jmp loc_1001DFD  +
push edi  +
push [ebp+var_DC]  +
call sub_10017E5  +
test eax eax +
jz loc_1001DFB  +
mov [ebp+var_CC] 2 +
jmp loc_1001DFD  +
xor esi esi +
cmp esi ebx +
jz loc_1001E12  +
xor eax eax +
cmp [ebp+var_E4] ebx +
setnz al  +
mov [ebp+var_D4] eax +
mov eax [ebp+ReturnLength] +
cmp eax 0FFFFFFFFh +
jnz loc_1001E25  +
or [ebp+var_DC] eax +
jmp loc_1001E2B  +
mov [ebp+var_DC] eax +
cmp esi ebx +
jnz loc_1001E39  +
call sub_1001A41  +
jmp loc_10023E4  +
cmp [ebp+var_F4] ebx +
jz loc_1001E4B  +
mov [ebp+var_100] 1 +
mov eax [ebp+var_CC] +
cmp [ebp+var_EC] ebx +
jz loc_1001F28  +
mov esi ds:ForceSyncFgPolicy +
and eax 1 +
mov [ebp+var_E4] eax +
jz loc_1001EA0  +
push ebx  +
call esi  +
cmp eax ebx +
jz loc_1001EA0  +
cmp eax 5 +
jnz loc_1001E84  +
push 0E6h  +
jmp loc_10023DE  +
push offset word_1004280  +
push eax  +
call sub_1001879  +
push eax  +
push 0DEh  +
call sub_10019D3  +
pop ecx  +
jmp loc_10023E3  +
mov eax [ebp+var_CC] +
and eax 2 +
mov [ebp+var_CC] eax +
jz loc_10021D9  +
lea eax [ebp+hObject] +
push eax  +
push 28h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_1001EDC  +
push offset word_1004280  +
call ds:GetLastError  +
jmp loc_1001E89  +
push [ebp+hObject]  +
call sub_1002504  +
mov edi eax +
cmp edi ebx +
jz loc_1001ECF  +
push edi  +
call esi  +
push edi  +
mov esi eax +
call ds:LocalFree  +
cmp esi ebx +
jz loc_1001F11  +
cmp esi 5 +
jz loc_1001E7A  +
push offset word_1004280  +
push esi  +
jmp loc_1001E8A  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov [ebp+hObject] ebx +
jmp loc_10021D9  +
mov esi ds:CreateThread +
and eax 1 +
mov [ebp+var_E4] eax +
mov edi offset StartAddress +
jz loc_1001F9A  +
mov eax [ebp+var_D4] +
push ebx  +
push ebx  +
push offset Parameter  +
push edi  +
mov dword_10046C0 eax +
mov eax [ebp+var_DC] +
push ebx  +
push ebx  +
mov Parameter 1 +
mov dword_10046C4 eax +
call esi  +
mov [ebp+Handles] eax +
cmp eax ebx +
jnz loc_1001F90  +
push offset word_1004280  +
call ds:GetLastError  +
push eax  +
call sub_1001879  +
push eax  +
push 0D4h  +
jmp loc_1001E95  +
mov [ebp+nCount] 1 +
mov eax [ebp+var_CC] +
and eax 2 +
mov [ebp+var_CC] eax +
jz loc_1001FEA  +
mov eax [ebp+var_D4] +
push ebx  +
push ebx  +
push offset dword_1004694  +
push edi  +
mov dword_1004698 eax +
mov eax [ebp+var_DC] +
push ebx  +
push ebx  +
mov dword_1004694 ebx +
mov dword_100469C eax +
call esi  +
mov ecx [ebp+nCount] +
mov [ebp+ecx*4+Handles] eax +
cmp eax ebx +
jz loc_1001F74  +
inc [ebp+nCount]  +
push 0C9h  +
call sub_10019D3  +
pop ecx  +
push 0FFFFFFFFh  +
push 1  +
lea eax [ebp+Handles] +
push eax  +
push [ebp+nCount]  +
call ds:WaitForMultipleObjects  +
cmp eax ebx +
jz loc_1002019  +
cmp eax 1 +
jnz loc_1001F74  +
cmp [ebp+var_CC] ebx +
jz loc_10020E6  +
sub esp 10h +
mov edi esp +
mov esi offset unk_10046AC +
movs   +
movs   +
movs   +
push ebx  +
lea ecx [ebp+var_C8] +
movs   +
call sub_1002546  +
lea ecx [ebp+var_C8] +
mov [ebp+ReturnLength] ebx +
mov [ebp+var_D4] ebx +
call sub_1002601  +
cmp eax ebx +
jnz loc_10020BF  +
lea eax [ebp+var_D4] +
push eax  +
lea eax [ebp+ReturnLength] +
push eax  +
lea ecx [ebp+var_C8] +
call sub_1002911  +
cmp eax ebx +
jnz loc_10020BF  +
cmp [ebp+ReturnLength] ebx +
jnz loc_10020B3  +
cmp [ebp+var_D4] ebx +
jz loc_10020BF  +
push offset dword_1004694  +
mov [ebp+var_FC] 1 +
call sub_1001B25  +
push 0DDh  +
call sub_10019D3  +
pop ecx  +
lea ecx [ebp+var_C8] +
call sub_100262F  +
jmp loc_10020C9  +
mov [ebp+var_E8] 1 +
jmp loc_10020A6  +
push offset dword_1004694  +
call sub_1001B25  +
cmp dword_10046A4 ebx +
jz loc_10020DB  +
mov [ebp+var_E8] 1 +
lea ecx [ebp+var_C8] +
call sub_100259C  +
cmp [ebp+var_E4] ebx +
jz loc_10021B4  +
sub esp 10h +
mov edi esp +
mov esi offset unk_10046D4 +
movs   +
movs   +
movs   +
push 1  +
lea ecx [ebp+var_C8] +
movs   +
call sub_1002546  +
lea ecx [ebp+var_C8] +
mov [ebp+ReturnLength] ebx +
mov [ebp+var_D4] ebx +
call sub_1002601  +
cmp eax ebx +
jnz loc_100218D  +
lea eax [ebp+var_D4] +
push eax  +
lea eax [ebp+ReturnLength] +
push eax  +
lea ecx [ebp+var_C8] +
call sub_1002911  +
cmp eax ebx +
jnz loc_100218D  +
cmp [ebp+ReturnLength] ebx +
jnz loc_1002181  +
cmp [ebp+var_D4] ebx +
jz loc_100218D  +
push offset Parameter  +
mov [ebp+var_FC] 1 +
call sub_1001B25  +
push 0DDh  +
call sub_10019D3  +
pop ecx  +
lea ecx [ebp+var_C8] +
call sub_100262F  +
jmp loc_1002197  +
mov [ebp+var_E8] 1 +
jmp loc_1002174  +
push offset Parameter  +
call sub_1001B25  +
cmp dword_10046CC ebx +
jz loc_10021A9  +
mov [ebp+var_E8] 1 +
lea ecx [ebp+var_C8] +
call sub_100259C  +
cmp [ebp+var_E8] ebx +
jz loc_10021C6  +
push 0E1h  +
jmp loc_10023DE  +
cmp [ebp+var_FC] ebx +
jz loc_10021D9  +
push 0E7h  +
call sub_10019D3  +
pop ecx  +
mov edi 0DDh +
push edi  +
call sub_10019D3  +
pop ecx  +
cmp [ebp+var_CC] ebx +
jz loc_100221A  +
cmp [ebp+var_EC] ebx +
jnz loc_1002213  +
cmp dword_10046A8 ebx +
jz loc_100221A  +
push 0CEh  +
call sub_10019D3  +
xor esi esi +
inc esi  +
pop ecx  +
mov [ebp+var_F8] esi +
jmp loc_100221D  +
push 0DFh  +
jmp loc_1002202  +
xor esi esi +
inc esi  +
cmp [ebp+var_E4] ebx +
jz loc_100224A  +
cmp [ebp+var_EC] ebx +
jnz loc_10022C3  +
cmp dword_10046D0 ebx +
jz loc_100224A  +
push 0CFh  +
call sub_10019D3  +
pop ecx  +
mov [ebp+var_F0] esi +
mov [ebp+var_10C] ebx +
cmp [ebp+var_F0] ebx +
jnz loc_1002264  +
cmp [ebp+var_F8] ebx +
jz loc_10023E4  +
push edi  +
call sub_10019D3  +
pop ecx  +
cmp [ebp+var_F0] ebx +
jz loc_100238C  +
cmp [ebp+var_F4] ebx +
jnz loc_100228D  +
push esi  +
call sub_1001A5E  +
cmp eax ebx +
jz loc_100238C  +
lea eax [ebp+hObject] +
push eax  +
push 28h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jnz loc_10022CD  +
push offset word_1004280  +
call ds:GetLastError  +
push eax  +
call sub_1001879  +
push eax  +
push 0D5h  +
jmp loc_1001E95  +
push 0E0h  +
jmp loc_100223E  +
lea eax [ebp+NewState.Privileges] +
push eax  +
push offset Name  +
push ebx  +
mov [ebp+ReturnLength] ebx +
mov [ebp+NewState.PrivilegeCount] esi +
mov [ebp+NewState.Privileges.Attributes] 2 +
call ds:LookupPrivilegeValueW  +
test eax eax +
jz loc_10022A7  +
lea eax [ebp+ReturnLength] +
push eax  +
lea eax [ebp+PreviousState] +
push eax  +
push 10h  +
lea eax [ebp+NewState] +
push eax  +
push ebx  +
push [ebp+hObject]  +
call ds:AdjustTokenPrivileges  +
test eax eax +
jz loc_10022A7  +
push 0D7h  +
call sub_10019D3  +
pop ecx  +
push 80020004h  +
push esi  +
push ebx  +
push 1Eh  +
push ebx  +
push ebx  +
call ds:InitiateSystemShutdownExW  +
mov esi ds:GetLastError +
mov edi 0D5h +
test eax eax +
jnz loc_1002355  +
push offset word_1004280  +
call esi  +
push eax  +
call sub_1001879  +
push eax  +
push edi  +
call sub_10019D3  +
pop ecx  +
jmp loc_100235F  +
push 0D9h  +
call sub_10019D3  +
pop ecx  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+PreviousState] +
push eax  +
push ebx  +
push [ebp+hObject]  +
call ds:AdjustTokenPrivileges  +
test eax eax +
jnz loc_10023E4  +
push offset word_1004280  +
call esi  +
push eax  +
call sub_1001879  +
push eax  +
push edi  +
jmp loc_1001E95  +
cmp [ebp+var_F8] ebx +
jz loc_10023E4  +
cmp [ebp+var_100] ebx +
jnz loc_10023A6  +
push ebx  +
call sub_1001A5E  +
cmp eax ebx +
jz loc_10023E4  +
push 0D8h  +
call sub_10019D3  +
pop ecx  +
push ebx  +
push ebx  +
call ds:ExitWindowsEx  +
test eax eax +
jnz loc_10023D9  +
push offset word_1004280  +
call ds:GetLastError  +
push eax  +
call sub_1001879  +
push eax  +
push 0D6h  +
jmp loc_1001E95  +
push 0DAh  +
call sub_10019D3  +
pop ecx  +
cmp [ebp+hObject] ebx +
jz loc_10023F8  +
push [ebp+hObject]  +
call ds:CloseHandle  +
mov edi [ebp+nCount] +
cmp edi ebx +
jz loc_100241E  +
lea esi [ebp+edi*4+var_10C] +
mov eax [esi] +
cmp eax ebx +
jz loc_1002416  +
push eax  +
call ds:CloseHandle  +
dec edi  +
sub esi 4 +
cmp edi ebx +
jnz loc_1002409  +
mov eax [ebp+var_10C] +
jmp loc_1002429  +
or eax 0FFFFFFFFh +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_1002C19  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx ds:LocalAlloc +
push esi  +
mov eax 0C8h +
push eax  +
push 0  +
mov [ebp+uBytes] eax +
call ebx  +
mov esi eax +
test esi esi +
jz loc_10024E8  +
push edi  +
mov edi ds:NtQueryInformationToken +
lea eax [ebp+uBytes] +
push eax  +
push [ebp+uBytes]  +
push esi  +
push 1  +
push [ebp+arg_0]  +
call edi  +
cmp eax 0C0000023h +
jnz loc_10024A0  +
push 2  +
push [ebp+uBytes]  +
push esi  +
call ds:LocalReAlloc  +
test eax eax +
jz loc_10024BA  +
lea ecx [ebp+uBytes] +
push ecx  +
push [ebp+uBytes]  +
mov esi eax +
push eax  +
push 1  +
push [ebp+arg_0]  +
call edi  +
test eax eax +
jl loc_10024BA  +
push dword ptr [esi]  +
call ds:RtlLengthSid  +
push eax  +
push 0  +
mov [ebp+uBytes] eax +
call ebx  +
mov edi eax +
test edi edi +
jnz loc_10024C5  +
push esi  +
call ds:LocalFree  +
xor eax eax +
jmp loc_10024E7  +
push dword ptr [esi]  +
push edi  +
push [ebp+uBytes]  +
call ds:RtlCopySid  +
push esi  +
mov esi ds:LocalFree +
mov ebx eax +
call esi  +
test ebx ebx +
jge loc_10024E5  +
push edi  +
call esi  +
xor edi edi +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp ds:LocalFree  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push [ebp+arg_0]  +
call sub_100243D  +
mov esi eax +
test esi esi +
jnz loc_100251E  +
xor eax eax +
jmp loc_100253C  +
push edi  +
push 1  +
push esi  +
lea eax [ebp+var_8] +
push eax  +
call ds:RtlConvertSidToUnicodeString  +
push esi  +
mov edi eax +
call sub_10024F3  +
test edi edi +
pop edi  +
jl loc_100251A  +
mov eax [ebp+var_4] +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
lea esi [ebp+arg_4] +
lea edi [ebp+var_14] +
movs   +
mov ebx ecx +
mov ecx [ebp+arg_0] +
xor eax eax +
movs   +
mov [ebx] eax +
mov [ebx+8] eax +
mov [ebx+20h] eax +
lea eax [ebx+38h] +
movs   +
push eax  +
lea eax [ebp+var_14] +
push eax  +
movs   +
mov [ebx+4] ecx +
call sub_1003095  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1002C19  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
push ebx  +
push esi  +
mov esi ecx +
cmp dword ptr [esi+8] 0 +
push edi  +
mov edi ds:LocalFree +
jbe loc_10025CC  +
lea ebx [esi+0Ch] +
push dword ptr [ebx]  +
call edi  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
add ebx 4 +
cmp eax [esi+8] +
jb loc_10025BA  +
and [ebp+var_4] 0 +
cmp dword ptr [esi+20h] 0 +
jbe loc_10025EB  +
lea ebx [esi+24h] +
push dword ptr [ebx]  +
call edi  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
add ebx 4 +
cmp eax [esi+20h] +
jb loc_10025D9  +
mov esi [esi] +
test esi esi +
jz loc_10025F7  +
push esi  +
call EvtClose  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push esi  +
push edi  +
xor edi edi +
push edi  +
push edi  +
push edi  +
push offset aMicrosoftWindo  +
push edi  +
mov esi ecx +
call EvtOpenPublisherMetadata  +
mov [esi] eax +
cmp eax edi +
jnz loc_1002625  +
call ds:GetLastError  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
xor edi edi +
cmp [esi+8] edi +
jbe loc_1002658  +
xor eax eax +
cmp [esi+4] edi +
setz al  +
lea eax [eax+eax+0E2h] +
push eax  +
call sub_10019D3  +
pop ecx  +
cmp [esi+8] edi +
mov [ebp+var_8] edi +
mov edi ds:wprintf +
mov ebx offset aS +
jbe loc_100268A  +
lea eax [esi+0Ch] +
mov [ebp+var_4] eax +
mov eax [ebp+var_4] +
push dword ptr [eax]  +
push ebx  +
call edi  +
inc [ebp+var_8]  +
mov eax [ebp+var_8] +
add [ebp+var_4] 4 +
pop ecx  +
pop ecx  +
cmp eax [esi+8] +
jb loc_1002671  +
cmp dword ptr [esi+20h] 0 +
jbe loc_10026A6  +
xor eax eax +
cmp [esi+4] eax +
setz al  +
lea eax [eax+eax+0E3h] +
push eax  +
call sub_10019D3  +
pop ecx  +
and [ebp+var_4] 0 +
cmp dword ptr [esi+20h] 0 +
jbe loc_10026CF  +
lea eax [esi+24h] +
mov [ebp+var_8] eax +
mov eax [ebp+var_8] +
push dword ptr [eax]  +
push ebx  +
call edi  +
inc [ebp+var_4]  +
mov eax [ebp+var_4] +
add [ebp+var_8] 4 +
pop ecx  +
pop ecx  +
cmp eax [esi+20h] +
jb loc_10026B6  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_10026EF  +
cmp ecx 7FFFFFFFh +
jbe loc_10026F4  +
mov eax 80070057h +
test eax eax +
jl loc_1002731  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call ds:_vsnwprintf  +
add esp 10h +
test eax eax +
jl loc_1002721  +
cmp eax esi +
ja loc_1002721  +
jnz loc_100272C  +
jmp loc_1002726  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 39Ch +
mov eax dword_1004000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax dword ptr [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
xor ebx ebx +
mov esi ecx +
mov [ebp+var_388] edi +
mov [ebp+var_398] edi +
push eax  +
cmp [ebp+arg_0] edi +
jz loc_1002794  +
push offset aQuerylistQuery  +
lea eax [ebp+var_1C4] +
push 0E0h  +
push eax  +
call sub_10026D9  +
add esp 10h +
test eax eax +
jl loc_10028F9  +
lea eax [ebp+var_1C4] +
jmp loc_10027BB  +
push offset aQuerylistQue_0  +
lea eax [ebp+var_384] +
push 0E0h  +
push eax  +
call sub_10026D9  +
add esp 10h +
test eax eax +
jl loc_10028F9  +
lea eax [ebp+var_384] +
push 1  +
push eax  +
push offset aSystem  +
push edi  +
call EvtQuery  +
mov [ebp+var_38C] eax +
cmp eax edi +
jnz loc_10027E0  +
call ds:GetLastError  +
mov ebx eax +
jmp loc_10028E6  +
lea ecx [ebp+var_398] +
push ecx  +
push edi  +
push 1388h  +
lea ecx [ebp+var_388] +
push ecx  +
push 1  +
mov [ebp+var_390] edi +
push eax  +
jmp loc_10028D7  +
cmp [ebp+var_390] 5 +
jnb loc_10028E4  +
lea eax [ebp+var_394] +
push eax  +
push edi  +
push edi  +
push 1  +
push edi  +
push edi  +
push 0FFFFFFFFh  +
push [ebp+var_388]  +
mov [ebp+var_394] edi +
push dword ptr [esi]  +
call EvtFormatMessage  +
test eax eax +
jnz loc_10028B0  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_10028B0  +
mov eax [ebp+var_394] +
mov [ebp+var_39C] eax +
add eax eax +
push eax  +
push 40h  +
call ds:LocalAlloc  +
mov ebx eax +
cmp ebx edi +
jz loc_10028B0  +
lea eax [ebp+var_394] +
push eax  +
push ebx  +
push [ebp+var_39C]  +
push 1  +
push edi  +
push edi  +
push 0FFFFFFFFh  +
push [ebp+var_388]  +
push dword ptr [esi]  +
call EvtFormatMessage  +
test eax eax +
jz loc_10028A5  +
cmp [ebp+arg_0] edi +
jz loc_1002893  +
mov eax [esi+8] +
mov [esi+eax*4+0Ch] ebx +
inc dword ptr [esi+8]  +
jmp loc_100289D  +
mov eax [esi+20h] +
mov [esi+eax*4+24h] ebx +
inc dword ptr [esi+20h]  +
xor ebx ebx +
inc [ebp+var_390]  +
cmp ebx edi +
jz loc_10028B0  +
push ebx  +
call ds:LocalFree  +
push [ebp+var_388]  +
call EvtClose  +
lea eax [ebp+var_398] +
push eax  +
push edi  +
push 1388h  +
lea eax [ebp+var_388] +
push eax  +
push 1  +
push [ebp+var_38C]  +
call EvtNext  +
test eax eax +
jnz loc_1002802  +
xor ebx ebx +
cmp [ebp+var_38C] edi +
jz loc_10028F9  +
push [ebp+var_38C]  +
call EvtClose  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_1002C19  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi ecx +
test eax eax +
jz loc_1002968  +
mov ebx [ebp+arg_4] +
test ebx ebx +
jz loc_1002968  +
and dword ptr [eax] 0 +
and dword ptr [ebx] 0 +
push edi  +
push 1388h  +
call ds:Sleep  +
lea edi [esi+38h] +
push edi  +
push 1  +
mov ecx esi +
call sub_1002738  +
test eax eax +
jnz loc_1002965  +
push edi  +
push eax  +
mov ecx esi +
call sub_1002738  +
test eax eax +
jnz loc_1002965  +
mov ecx [esi+8] +
mov edx [ebp+arg_0] +
mov [edx] ecx +
mov ecx [esi+20h] +
mov [ebx] ecx +
pop edi  +
jmp loc_100296B  +
push 57h  +
pop eax  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_1002992  +
test eax eax +
jnz loc_1002997  +
mov ecx [esi] +
test ecx ecx +
jz loc_100298F  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_1002983  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_100489C +
push offset dword_100488C  +
push dword_1004898  +
mov dword_100488C eax +
push offset dword_100487C  +
push offset dword_1004880  +
push offset dword_1004878  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1004888 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+ms_exc.disabled] ebx +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_1C] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_1002A1F  +
cmp eax esi +
jnz loc_1002A12  +
xor esi esi +
inc esi  +
mov [ebp+var_1C] esi +
jmp loc_1002A22  +
push 3E8h  +
call ds:Sleep  +
jmp loc_10029F9  +
xor esi esi +
inc esi  +
mov eax dword_1004BD4 +
cmp eax esi +
jnz loc_1002A35  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_1002A70  +
mov eax dword_1004BD4 +
test eax eax +
jnz loc_1002A6A  +
mov dword_1004BD4 esi +
push offset dword_1001140  +
push offset dword_1001134  +
call sub_1002976  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1002A70  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
jmp loc_1002B3A  +
mov dword_1004894 esi +
mov eax dword_1004BD4 +
cmp eax esi +
jnz loc_1002A94  +
push offset dword_1001130  +
push offset dword_1001128  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_1004BD4 2 +
cmp [ebp+var_1C] ebx +
jnz loc_1002AA1  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1004BDC ebx +
jz loc_1002AC2  +
push offset dword_1004BDC  +
call sub_1002D29  +
pop ecx  +
test eax eax +
jz loc_1002AC2  +
push ebx  +
push 2  +
push ebx  +
call dword_1004BDC  +
push dword_100487C  +
push dword_1004880  +
push dword_1004878  +
call sub_1001BAB  +
add esp 0Ch +
mov dword_1004890 eax +
cmp dword_1004884 ebx +
jnz loc_1002B20  +
push eax  +
call ds:exit  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-20h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-20h] +
mov dword_1004890 eax +
xor ebx ebx +
cmp dword_1004884 ebx +
jnz loc_1002B20  +
push eax  +
call ds:_exit  +
cmp dword_1004894 ebx +
jnz loc_1002B2E  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1004890 +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_1002B57  +
xor eax eax +
jmp loc_1002BA4  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_1002B53  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1002B91  +
cmp ecx 20Bh +
jnz loc_1002B53  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_1002B53  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1002B9F  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_1002B53  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 1  +
mov dword_1004884 eax +
call sub_1002EC2  +
push eax  +
call ds:__set_app_type  +
or dword_1004BCC 0FFFFFFFFh +
or dword_1004BD0 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_10048A4 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_10048A0 +
mov [eax] ecx +
call sub_1002E54  +
cmp dword_1004010 0 +
jnz loc_1002BFD  +
push offset sub_1002E54  +
call ds:__setusermatherr  +
pop ecx  +
call sub_1002E3C  +
xor eax eax +
retn   +
***
call sub_1002F01  +
jmp sub_10029D7  +
***
cmp ecx dword_1004000 +
jnz loc_1002C24  +
retn 0  +
jmp loc_1002F97  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1002C6B  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1002C6B  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_1002C65  +
cmp eax 19930521h +
jz loc_1002C65  +
cmp eax 19930522h +
jz loc_1002C65  +
cmp eax 1994000h +
jnz loc_1002C6B  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push offset unk_1002C2E  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1002CB6  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1002CB2  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_1002D1D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_1002D15  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_1002D1F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_1002D05  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1002CA0  +
pop ecx  +
test eax eax +
jz loc_1002D86  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1002CE0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1002D86  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_1002D8F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_1002C19  +
push offset dword_1004000  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1002EB5  +
cmp ecx 0FFFFFFFFh +
jz loc_1002EB5  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_1002EAE  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_1002EAE  +
cmp edx 10000000h +
jnb loc_1002EAE  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_1002EAE  +
jmp loc_1002EA9  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_1002EF7  +
push eax  +
call sub_1002E5C  +
test eax eax +
jz loc_1002EF7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_1002EEC  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_1002EF7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1004000 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_1002F33  +
test eax ebx +
jz loc_1002F33  +
not eax  +
mov dword_1004004 eax +
jmp loc_1002F8E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1002F7A  +
test dword_1004000 ebx +
jnz loc_1002F7F  +
mov esi 0BB40E64Fh +
mov dword_1004000 esi +
not esi  +
mov dword_1004004 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_10049A8 eax +
mov dword_10049A4 ecx +
mov dword_10049A0 edx +
mov dword_100499C ebx +
mov dword_1004998 esi +
mov dword_1004994 edi +
mov word_10049C0 ss +
mov word_10049B4 cs +
mov word_1004990 ds +
mov word_100498C es +
mov word_1004988 fs +
mov word_1004984 gs +
pushf   +
pop dword_10049B8  +
mov eax [ebp+0] +
mov dword_10049AC eax +
mov eax [ebp+4] +
mov dword_10049B0 eax +
lea eax [ebp+8] +
mov dword_10049BC eax +
mov eax [ebp-320h] +
mov dword_10048F8 10001h +
mov eax dword_10049B0 +
mov dword_10048B4 eax +
mov dword_10048A8 0C0000409h +
mov dword_10048AC 1 +
mov eax dword_1004000 +
mov [ebp-328h] eax +
mov eax dword_1004004 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
movzx ecx byte ptr [eax+0Fh] +
push ecx  +
movzx ecx byte ptr [eax+0Eh] +
push ecx  +
movzx ecx byte ptr [eax+0Dh] +
push ecx  +
movzx ecx byte ptr [eax+0Ch] +
push ecx  +
movzx ecx byte ptr [eax+0Bh] +
push ecx  +
movzx ecx byte ptr [eax+0Ah] +
push ecx  +
movzx ecx byte ptr [eax+9] +
push ecx  +
movzx ecx byte ptr [eax+8] +
push ecx  +
movzx ecx word ptr [eax+6] +
push ecx  +
movzx ecx word ptr [eax+4] +
push ecx  +
push dword ptr [eax]  +
push offset a08lx04x04x02x0  +
push 27h  +
push [ebp+arg_4]  +
call sub_10026D9  +
add esp 38h +
pop ebp  +
retn 8  +
***
push edi  +
push esi  +
push ebx  +
xor edi edi +
mov eax [esp+14h] +
or eax eax +
jge loc_1003151  +
inc edi  +
mov edx [esp+10h] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+14h] eax +
mov [esp+10h] edx +
mov eax [esp+1Ch] +
or eax eax +
jge loc_100316D  +
inc edi  +
mov edx [esp+18h] +
neg eax  +
neg edx  +
sbb eax 0 +
mov [esp+1Ch] eax +
mov [esp+18h] edx +
or eax eax +
jnz loc_1003189  +
mov ecx [esp+18h] +
mov eax [esp+14h] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+10h] +
div  ecx +
mov edx ebx +
jmp loc_10031CA  +
mov ebx eax +
mov ecx [esp+18h] +
mov edx [esp+14h] +
mov eax [esp+10h] +
shr ebx 1 +
rcr ecx 1 +
shr edx 1 +
rcr eax 1 +
or ebx ebx +
jnz loc_1003197  +
div  ecx +
mov esi eax +
mul  dword ptr [esp+1Ch] +
mov ecx eax +
mov eax [esp+18h] +
mul  esi +
add edx ecx +
jb loc_10031C5  +
cmp edx [esp+14h] +
ja loc_10031C5  +
jb loc_10031C6  +
cmp eax [esp+10h] +
jbe loc_10031C6  +
dec esi  +
xor edx edx +
mov eax esi +
dec edi  +
jnz loc_10031D4  +
neg edx  +
neg eax  +
sbb edx 0 +
pop ebx  +
pop esi  +
pop edi  +
retn 10h  +
***
