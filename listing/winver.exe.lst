mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_1001190  +
cmp [esi] ax +
jz loc_100118C  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_1001182  +
test edx edx +
jnz loc_1001195  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_10011A6  +
test eax eax +
jl loc_10011A3  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi eax +
xor eax eax +
test edx edx +
jz loc_10011BF  +
cmp edx [ebp+arg_4] +
jbe loc_10011C4  +
mov eax 80070057h +
test eax eax +
jl loc_10011D2  +
mov eax [ebp+arg_0] +
call sub_1001175  +
jmp loc_10011D5  +
and dword ptr [edi] 0 +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push edi  +
push [ebp+lpFileTime]  +
push [ebp+lpFileTime]  +
call ds:FileTimeToLocalFileTime  +
lea eax [ebp+Time] +
push eax  +
push [ebp+lpFileTime]  +
call ds:FileTimeToSystemTime  +
test eax eax +
jz loc_1001250  +
mov esi [ebp+cchDate] +
mov ebx [ebp+lpDateStr] +
push esi  +
push ebx  +
push 0  +
lea eax [ebp+Time] +
push eax  +
push 1  +
mov edi 400h +
push edi  +
call ds:GetDateFormatW  +
test eax eax +
jle loc_1001250  +
push 20h  +
pop edx  +
lea ecx [ebx+eax*2-2] +
mov [ecx] dx +
inc ecx  +
inc ecx  +
xor edx edx +
sub esi eax +
dec esi  +
push esi  +
push ecx  +
push edx  +
lea eax [ebp+Time] +
push eax  +
push 2  +
push edi  +
mov [ecx] dx +
call ds:GetTimeFormatW  +
xor eax eax +
inc eax  +
jmp loc_1001252  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push 7FFFFFFFh  +
push esi  +
lea eax [ebp+arg_0] +
call sub_10011AC  +
test eax eax +
jl loc_10012CB  +
mov edx [ebp+arg_0] +
mov ecx [ebp+arg_4] +
sub ecx edx +
push ebx  +
push 0  +
lea eax [esi+edx*2] +
pop ebx  +
jz loc_10012BC  +
mov esi ecx +
sub esi [ebp+arg_4] +
push edi  +
lea edi [esi+edx+7FFFFFFFh] +
mov esi [ebp+arg_8] +
sub esi eax +
test edi edi +
jz loc_10012B7  +
movzx edx word ptr [esi+eax] +
test dx dx +
jz loc_10012B7  +
mov [eax] dx +
inc eax  +
inc eax  +
dec ecx  +
dec edi  +
test ecx ecx +
jnz loc_100129F  +
pop edi  +
test ecx ecx +
jnz loc_10012C3  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
xor ecx ecx +
mov [eax] cx +
mov eax ebx +
pop ebx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24Ch +
mov eax dword_1002000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor esi esi +
push esi  +
push esi  +
push 1  +
push esi  +
call ds:HeapSetInformation  +
mov eax ds:7FFE02C8h +
mov edi ds:GetModuleHandleW +
mov [ebp+FileTime.dwLowDateTime] eax +
mov eax ds:7FFE02CCh +
push 20h  +
mov [ebp+FileTime.dwHighDateTime] eax +
lea eax [ebp+szApp] +
push eax  +
push 65h  +
push esi  +
call edi  +
mov ebx ds:LoadStringW +
push eax  +
call ebx  +
test eax eax +
jz loc_10013A0  +
mov eax [ebp+FileTime.dwLowDateTime] +
or eax [ebp+FileTime.dwHighDateTime] +
jz loc_1001393  +
mov esi 80h +
push esi  +
lea eax [ebp+DateStr] +
push eax  +
lea eax [ebp+FileTime] +
push eax  +
call sub_10011DF  +
test eax eax +
jz loc_10013A0  +
push esi  +
lea eax [ebp+var_144] +
push eax  +
push 66h  +
push 0  +
call edi  +
push eax  +
call ebx  +
test eax eax +
jz loc_10013A0  +
lea eax [ebp+DateStr] +
push eax  +
push esi  +
lea eax [ebp+var_144] +
push eax  +
call sub_100125E  +
push 0  +
lea eax [ebp+var_144] +
push eax  +
lea eax [ebp+szApp] +
push eax  +
push 0  +
jmp loc_100139A  +
push esi  +
push esi  +
lea eax [ebp+szApp] +
push eax  +
push esi  +
call ds:ShellAboutW  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
xor eax eax +
pop ebx  +
call sub_10016D0  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_10013D4  +
test eax eax +
jnz loc_10013D9  +
mov ecx [esi] +
test ecx ecx +
jz loc_10013D1  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_10013C5  +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_100203C +
push offset dword_100202C  +
push dword_1002038  +
mov dword_100202C eax +
push offset unk_100201C  +
push offset unk_1002020  +
push offset unk_1002018  +
call ds:__wgetmainargs  +
add esp 14h +
mov dword_1002028 eax +
retn   +
***
call __SEH_prolog4  +
xor ebx ebx +
mov [ebp+var_1C] ebx +
mov [ebp+ms_exc.disabled] ebx +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoW  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov [ebp+ms_exc.disabled] 1 +
mov eax large fs:18h +
mov esi [eax+4] +
mov [ebp+var_20] ebx +
mov edi offset Destination +
push ebx  +
push esi  +
push edi  +
call ds:InterlockedCompareExchange  +
cmp eax ebx +
jz loc_100147C  +
cmp eax esi +
jnz loc_100146F  +
xor esi esi +
inc esi  +
mov [ebp+var_20] esi +
jmp loc_100147F  +
push 3E8h  +
call ds:Sleep  +
jmp loc_1001456  +
xor esi esi +
inc esi  +
mov eax dword_100236C +
cmp eax esi +
jnz loc_1001492  +
push 1Fh  +
call _amsg_exit  +
pop ecx  +
jmp loc_10014C1  +
mov eax dword_100236C +
test eax eax +
jnz loc_10014BB  +
mov dword_100236C esi +
push offset dword_10010BC  +
push offset dword_10010B0  +
call sub_10013B8  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_10014C1  +
jmp loc_10015E5  +
mov dword_1002034 esi +
mov eax dword_100236C +
cmp eax esi +
jnz loc_10014E5  +
push offset dword_10010AC  +
push offset dword_10010A4  +
call _initterm  +
pop ecx  +
pop ecx  +
mov dword_100236C 2 +
cmp [ebp+var_20] ebx +
jnz loc_10014F2  +
push ebx  +
push edi  +
call ds:InterlockedExchange  +
cmp dword_1002374 ebx +
jz loc_1001513  +
push offset dword_1002374  +
call sub_10017D9  +
pop ecx  +
test eax eax +
jz loc_1001513  +
push ebx  +
push 2  +
push ebx  +
call dword_1002374  +
mov eax ds:_wcmdln +
cmp [eax] ebx +
jz loc_10015E5  +
mov eax [eax] +
mov [ebp+var_24] eax +
movzx ecx word ptr [eax] +
cmp cx 20h +
ja $LN58  +
cmp cx bx +
jz loc_1001538  +
cmp [ebp+var_1C] ebx +
jnz $LN58  +
movzx ecx word ptr [eax] +
cmp cx bx +
jz loc_100154D  +
cmp cx 20h +
ja loc_100154D  +
inc eax  +
inc eax  +
mov [ebp+var_24] eax +
jmp loc_1001538  +
test byte ptr [ebp+StartupInfo.dwFlags] 1 +
jz loc_1001559  +
movzx ecx [ebp+StartupInfo.wShowWindow] +
jmp loc_100155C  +
push 0Ah  +
pop ecx  +
push ecx  +
push eax  +
push ebx  +
push 1000000h  +
call _wWinMain@16  +
mov dword_1002030 eax +
cmp dword_1002024 ebx +
jnz $LN59  +
push eax  +
call ds:exit  +
cmp cx 22h +
jnz loc_100158E  +
xor ecx ecx +
cmp [ebp+var_1C] ebx +
setz cl  +
mov [ebp+var_1C] ecx +
inc eax  +
inc eax  +
jmp loc_1001522  +
mov eax [ebp-14h] +
mov ecx [eax] +
mov ecx [ecx] +
mov [ebp-28h] ecx +
push eax  +
push ecx  +
call _XcptFilter  +
pop ecx  +
pop ecx  +
retn   +
mov esp [ebp-18h] +
mov eax [ebp-28h] +
mov dword_1002030 eax +
xor ebx ebx +
cmp dword_1002024 ebx +
jnz $LN59  +
push eax  +
call ds:_exit  +
cmp dword_1002034 ebx +
jnz loc_10015D0  +
call ds:_cexit  +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax dword_1002030 +
jmp loc_10015F1  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
mov eax 0FFh +
call __SEH_epilog4  +
retn   +
***
mov eax 5A4Dh +
cmp ds:1000000h ax +
jz loc_100160E  +
xor eax eax +
jmp loc_100165B  +
mov eax ds:100003Ch +
lea eax [eax+1000000h] +
cmp dword ptr [eax] 4550h +
jnz loc_100160A  +
movzx ecx word ptr [eax+18h] +
cmp ecx 10Bh +
jz loc_1001648  +
cmp ecx 20Bh +
jnz loc_100160A  +
cmp dword ptr [eax+84h] 0Eh +
jbe loc_100160A  +
xor ecx ecx +
cmp [eax+0F8h] ecx +
jmp loc_1001656  +
cmp dword ptr [eax+74h] 0Eh +
jbe loc_100160A  +
xor ecx ecx +
cmp [eax+0E8h] ecx +
setnz cl  +
mov eax ecx +
push 2  +
mov dword_1002024 eax +
call sub_1001972  +
push eax  +
call ds:__set_app_type  +
or dword_1002364 0FFFFFFFFh +
or dword_1002368 0FFFFFFFFh +
pop ecx  +
pop ecx  +
call ds:__p__fmode  +
mov ecx dword_1002044 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_1002040 +
mov [eax] ecx +
call sub_1001904  +
cmp dword_1002010 0 +
jnz loc_10016B4  +
push offset sub_1001904  +
call ds:__setusermatherr  +
pop ecx  +
call sub_10018EC  +
xor eax eax +
retn   +
***
call sub_10019B1  +
jmp ___tmainCRTStartup  +
***
cmp ecx dword_1002000 +
jnz loc_10016DB  +
retn 0  +
jmp loc_1001A47  +
***
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_1001722  +
cmp dword ptr [eax+10h] 3 +
jnz loc_1001722  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_100171C  +
cmp eax 19930521h +
jz loc_100171C  +
cmp eax 19930522h +
jz loc_100171C  +
cmp eax 1994000h +
jnz loc_1001722  +
call ds:?terminate@@YAXXZ  +
xor eax eax +
pop ebp  +
retn 4  +
***
push (offset byte_10016E4+1)  +
call ds:SetUnhandledExceptionFilter  +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_1001766  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_1001762  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_10017CD  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_10017C5  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_10017CF  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_10017B5  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call __SEH_prolog4  +
and [ebp+ms_exc.disabled] 0 +
mov esi 1000000h +
push esi  +
call sub_1001750  +
pop ecx  +
test eax eax +
jz loc_1001836  +
mov eax [ebp+arg_0] +
sub eax esi +
push eax  +
push esi  +
call sub_1001790  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_1001836  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
jmp loc_100183F  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
xor eax eax +
call __SEH_epilog4  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push offset sub_10016D0  +
push offset dword_1002000  +
call _except_handler4_common  +
add esp 18h +
pop ebp  +
retn   +
***
call ds:_controlfp  +
pop ecx  +
pop ecx  +
retn   +
***
retn   +
***
call __SEH_prolog4  +
xor eax eax +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_1001965  +
cmp ecx 0FFFFFFFFh +
jz loc_1001965  +
and [ebp+ms_exc.disabled] eax +
mov edx 5A4Dh +
cmp [ecx] dx +
jnz loc_100195E  +
mov edx [ecx+3Ch] +
test edx edx +
jl loc_100195E  +
cmp edx 10000000h +
jnb loc_100195E  +
lea eax [edx+ecx] +
mov [ebp+var_1C] eax +
cmp dword ptr [eax] 4550h +
jz loc_100195E  +
jmp loc_1001959  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
xor eax eax +
mov [ebp+var_1C] eax +
mov [ebp+ms_exc.disabled] 0FFFFFFFEh +
call __SEH_epilog4  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
call ds:GetModuleHandleA  +
test eax eax +
jz loc_10019A7  +
push eax  +
call sub_100190C  +
test eax eax +
jz loc_10019A7  +
movzx eax word ptr [eax+5Ch] +
cmp ax 2 +
jnz loc_100199C  +
push 2  +
pop eax  +
pop ebp  +
retn   +
cmp ax 3 +
jnz loc_10019A7  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
mov eax [ebp+arg_0] +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_1002000 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_10019E3  +
test eax ebx +
jz loc_10019E3  +
not eax  +
mov dword_1002004 eax +
jmp loc_1001A3E  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jz loc_1001A2A  +
test dword_1002000 ebx +
jnz loc_1001A2F  +
mov esi 0BB40E64Fh +
mov dword_1002000 esi +
not esi  +
mov dword_1002004 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_1002148 eax +
mov dword_1002144 ecx +
mov dword_1002140 edx +
mov dword_100213C ebx +
mov dword_1002138 esi +
mov dword_1002134 edi +
mov word_1002160 ss +
mov word_1002154 cs +
mov word_1002130 ds +
mov word_100212C es +
mov word_1002128 fs +
mov word_1002124 gs +
pushf   +
pop dword_1002158  +
mov eax [ebp+0] +
mov dword_100214C eax +
mov eax [ebp+4] +
mov dword_1002150 eax +
lea eax [ebp+8] +
mov dword_100215C eax +
mov eax [ebp-320h] +
mov dword_1002098 10001h +
mov eax dword_1002150 +
mov dword_1002054 eax +
mov dword_1002048 0C0000409h +
mov dword_100204C 1 +
mov eax dword_1002000 +
mov [ebp-328h] eax +
mov eax dword_1002004 +
mov [ebp-324h] eax +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
