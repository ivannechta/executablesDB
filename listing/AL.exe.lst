sub esp 14h +
push ecx  +
push ecx  +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi offset dword_4010D8 +
mov ebx offset dword_4010D8 +
cmp esi ebx +
jnb loc_40A5A6  +
jmp loc_40A58D  +
***
mov eax [ebp+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
push ebx  +
cmp dword ptr [esi+1018h] 0 +
push edi  +
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_430000 +
xor eax ebp +
push eax  +
mov [ebp-10h] eax +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
push ecx  +
mov edx [esp+arg_8] +
mov ecx [esp+arg_0] +
test edx edx +
jz loc_40599F  +
jmp loc_405920  +
***
cmp dword ptr [ecx-4] 1 +
jle loc_401285  +
push esi  +
mov ecx edi +
call sub_402167  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
mov ecx [ecx-8] +
cmp ecx esi +
jl loc_40A27E  +
jmp loc_40127F  +
***
push ecx  +
sub esp 10h +
mov eax 80004003h +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
test edi edi +
jz loc_408895  +
jmp loc_408803  +
***
sub esp 0CCh +
sub esp 118h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
mov [ebp+lpSecurityAttributes] eax +
mov eax [ebp+arg_10] +
push ebx  +
mov ebx [ebp+arg_8] +
mov [ebp+dwCreationDisposition] eax +
mov eax [ebp+arg_14] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+dwFlagsAndAttributes] eax +
mov eax [ebp+arg_18] +
push edi  +
mov edi [ebp+arg_4] +
mov [ebp+hTemplateFile] eax +
call sub_4021F1  +
test eax eax +
jz loc_40A62D  +
push [ebp+hTemplateFile]  +
push [ebp+dwFlagsAndAttributes]  +
push [ebp+dwCreationDisposition]  +
push [ebp+lpSecurityAttributes]  +
push ebx  +
push edi  +
push esi  +
call ds:CreateFileW  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
leave   +
retn 1Ch  +
***
mov esi [eax] +
push eax  +
call sub_41740A  +
mov eax esi +
pop ecx  +
test esi esi +
jnz loc_4013C7  +
mov [edi+0Ch] ebx +
jmp loc_4020BC  +
***
push ecx  +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi offset dword_40140C +
mov ebx offset dword_40140C +
cmp esi ebx +
jnb loc_40A5CF  +
jmp loc_40A5B6  +
***
inc cl  +
jmp loc_4016BD  +
***
mov eax [ebp+arg_0] +
xor cl cl +
push 20h  +
pop edx  +
cmp dx ax +
jz loc_401688  +
push esi  +
mov esi 0A0h +
cmp ax si +
jnb loc_409633  +
add eax 0FFFFFFF7h +
cmp ax 4 +
jbe loc_40962C  +
pop esi  +
movsx eax cl +
pop ebp  +
retn 4  +
***
push ecx  +
push ecx  +
mov edx [ecx+4] +
xor eax eax +
push [ebp+arg_4]  +
cmp eax edx +
mov [ebp+var_4] edx +
push [ebp+arg_0]  +
sbb eax eax +
and eax [ecx] +
lea ecx [ebp+var_8] +
mov [ebp+var_8] eax +
call sub_401940  +
mov eax [ebp+arg_0] +
mov esp ebp +
pop ebp  +
retn 8  +
***
and esp 0FFFFFFF8h +
mov eax 116Ch +
call sub_40281C  +
mov eax dword_430000 +
xor eax esp +
mov [esp+1168h] eax +
push ebx  +
xor ebx ebx +
mov [esp+0Ch] ecx +
mov dword ptr [esp+3Ch] offset aSecurity_evide +
mov eax edx +
mov [esp+0Ch+var_4] eax +
mov [esp+0Ch+arg_30] ebx +
mov [esp+0Ch+arg_2C] ebx +
mov [esp+0Ch+arg_38] ebx +
mov [esp+0Ch+arg_34] ebx +
mov byte ptr [esp+0Ch+arg_18+3] bl +
push esi  +
mov esi ebx +
mov [esp+10h+var_8] esi +
push edi  +
mov edi ebx +
mov [esp+18h] edi +
test ecx ecx +
jle loc_4082AF  +
cmp [eax+esi*8] ebx +
jz loc_401804  +
mov ecx [eax+esi*8] +
test ecx ecx +
jz loc_401885  +
cmp [eax+esi*8+4] ebx +
jbe loc_405277  +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax bx +
jnz loc_401888  +
sub ecx edx +
sar ecx 1 +
jz loc_4017FC  +
mov edi [esp+14h+var_8] +
lea ecx [esp+14h+arg_8] +
mov esi [esp+14h+var_4] +
push ebx  +
mov eax [esi+edi*8] +
mov [esp+18h+arg_8] eax +
mov eax [esi+edi*8+4] +
mov [esp+18h+arg_C] eax +
call sub_411604  +
jmp loc_40700C  +
***
push 1  +
lea eax [esp+18h+arg_F4] +
push eax  +
lea ecx [esp+1Ch+arg_8] +
call sub_401940  +
mov esi [esp+14h+arg_8] +
mov edi [esp+14h+arg_C] +
test esi esi +
jz loc_40190F  +
test edi edi +
jz loc_405277  +
push 4  +
push offset aOut  +
push esi  +
call sub_416A42  +
add esp 0Ch +
test eax eax +
jnz loc_407117  +
jmp loc_4070B7  +
***
mov edx ecx +
push ecx  +
sub esp 10h +
push ebx  +
mov eax edx +
xor ebx ebx +
push esi  +
push edi  +
mov edi ecx +
mov [ebp+var_10] eax +
mov esi [eax] +
mov al bl +
push 5Ch  +
pop ecx  +
mov [ebp+var_C] edi +
mov [ebp+var_8] esi +
mov [ebp+var_1] al +
cmp [esi] cx +
jnz loc_4019D7  +
add esi 2 +
inc ebx  +
cmp [esi] cx +
jz loc_4019CB  +
mov [ebp+var_8] esi +
cmp word ptr [esi] 22h +
jz loc_409A10  +
test ebx ebx +
jz loc_4019F8  +
push ecx  +
mov ecx edi +
call sub_401974  +
push 5Ch  +
pop ecx  +
sub ebx 1 +
jnz loc_4019E5  +
mov al [ebp+var_1] +
mov ecx [ebp+var_10] +
pop edi  +
mov [ecx] esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
lea edx [ebp+var_4] +
lea ecx [ebp+arg_0] +
call sub_4019A4  +
mov esi [ebp+var_4] +
test al al +
jz loc_401A39  +
jmp loc_409AA7  +
cmp eax 22h +
jz loc_401A52  +
cmp eax 2Ch +
jz loc_401A49  +
cmp eax 5Ch +
jz loc_401A04  +
push ecx  +
lea ecx [ebp+arg_0] +
call sub_401974  +
add esi 2 +
mov [ebp+var_4] esi +
movzx ecx word ptr [esi] +
mov eax ecx +
test eax eax +
jz loc_409AB8  +
jmp loc_401A1B  +
***
mov ecx [ecx+4] +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
cmp dword ptr [edi] 0 +
jz loc_401AD9  +
mov ebx [ebp+arg_0] +
mov ecx ebx +
call sub_401A64  +
mov ecx edi +
mov esi eax +
call sub_401A64  +
cmp esi eax +
ja loc_401AD9  +
mov ecx ebx +
call sub_401A64  +
mov ecx edi +
mov esi eax +
call sub_401A64  +
mov ecx edi +
cmp eax esi +
jb loc_401AB5  +
mov ecx ebx +
call sub_401A64  +
cmp dword ptr [ebx] 0 +
jz loc_401AC5  +
cmp dword ptr [ebx+4] 0 +
jbe loc_401AD9  +
push eax  +
push dword ptr [ebx]  +
push dword ptr [edi]  +
call sub_4024B1  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
call sub_40E206  +
int 3  +
mov edx [ebp+arg_4] +
jmp loc_409BF4  +
***
push esi  +
mov esi [ecx] +
test esi esi +
jz loc_401B0F  +
mov edx [ebp+arg_0] +
cmp edx [ecx+4] +
jnb loc_401B0F  +
mov ax [ebp+arg_4] +
mov [esi+edx*2] ax +
pop esi  +
pop ebp  +
retn 8  +
call sub_40E206  +
int 3  +
movzx eax word ptr [ecx+esi*2] +
lea ecx [ebp+var_4AC] +
push eax  +
push edx  +
call sub_401AF0  +
mov edx [ebp+var_468] +
mov ecx [ebp+var_474] +
inc edx  +
mov eax [ebp+var_48C] +
mov [ebp+var_468] edx +
inc esi  +
cmp edx eax +
jnb loc_409C69  +
cmp esi edi +
jnb loc_409B99  +
jmp loc_402A6C  +
***
mov ax [edi] +
add edi 2 +
cmp ax word ptr [ebp+var_4A0] +
jnz loc_401B55  +
sub edi [ebp+var_490] +
sar edi 1 +
jnz loc_402A6C  +
jmp loc_409B99  +
***
push esi  +
push esi  +
mov esi edx +
push edi  +
mov edi ecx +
cmp esi 0FFFFFFFFh +
jz loc_4099DF  +
mov eax [ebp+arg_0] +
mov edx [eax+4] +
cmp esi edx +
jnb loc_4099F8  +
mov ecx [eax] +
test ecx ecx +
jz loc_401C43  +
test edx edx +
jz loc_409A0A  +
push esi  +
push edi  +
call sub_401B9B  +
test eax eax +
js loc_4099F8  +
mov eax esi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi ecx +
test esi esi +
jz loc_40A21B  +
cmp [ebp+arg_0] 0 +
jz loc_40A256  +
mov eax [edi] +
push ebx  +
mov ebx [ebp+arg_0] +
sub ebx eax +
mov ecx [eax-0Ch] +
sar ebx 1 +
mov [ebp+var_4] ecx +
test esi esi +
js loc_40A256  +
xor ecx ecx +
inc ecx  +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax esi +
or ecx eax +
jge loc_401D0E  +
push esi  +
mov ecx edi +
call sub_40A261  +
lea eax [esi+esi] +
mov ecx [edi] +
push eax  +
cmp ebx [ebp+var_4] +
jbe loc_40A225  +
jmp loc_40A237  +
***
pop ebx  +
***
cmp [ebp+arg_0] 0 +
call sub_401F38  +
call sub_401F38  +
mov esi ecx +
mov [ebp-10h] esi +
xor eax eax +
mov dword ptr [esi+14h] 1 +
mov [esi] eax +
mov [esi+4] eax +
mov [esi+8] eax +
mov [esi+0Ch] eax +
mov [esi+10h] eax +
mov [ebp-4] eax +
lea ecx [esi+18h] +
call sub_412448  +
jmp loc_409ACD  +
***
mov eax [esp+8+arg_4] +
call sub_401E34  +
and dword ptr [ebp-1Ch] 0 +
call sub_417DEC  +
jmp loc_40A4F1  +
***
push [ebp+arg_0]  +
call sub_401E79  +
neg eax  +
pop ecx  +
sbb eax eax +
neg eax  +
dec eax  +
pop ebp  +
retn   +
***
mov ecx offset unk_431400 +
call sub_401F38  +
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_430000 +
xor eax ebp +
push eax  +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
push 4  +
mov eax offset loc_42EC54 +
call sub_401F38  +
mov [ebp-10h] ecx +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [ecx] +
sub ecx 10h +
call sub_4128BD  +
call sub_402080  +
retn   +
***
cmp [ebp+lpMem] 0 +
jz loc_40A392  +
jmp loc_40A381  +
***
cmp [ebp+lpMem] 0 +
cmp dword ptr [esi+8] 0 +
call sub_401205  +
mov ecx [ebp-10h] +
mov ecx [ebp-0Ch] +
call sub_401F38  +
mov edi ecx +
xor ebx ebx +
cmp [edi+8] ebx +
ja loc_4020D3  +
mov eax [edi+0Ch] +
mov [edi] ebx +
mov [edi+4] ebx +
mov [edi+10h] ebx +
test eax eax +
jnz loc_4013C7  +
call sub_402080  +
retn   +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_402094  +
call sub_402080  +
retn   +
mov esi [edi] +
xor eax eax +
test esi esi +
setnz al  +
test eax eax +
jz loc_40A313  +
mov eax [esi] +
mov [edi] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [esi+8] +
call sub_401F07  +
mov eax [edi+10h] +
mov [esi] eax +
sub dword ptr [edi+8] 1 +
mov [edi+10h] esi +
jnz loc_4020A4  +
mov ecx edi +
call sub_402094  +
jmp loc_4020A4  +
***
mov edx [ebp+arg_0] +
sub esp 10h +
mov eax ecx +
push ebx  +
push esi  +
push edi  +
mov ecx [eax] +
sub ecx 10h +
mov [ebp+var_10] eax +
mov [ebp+var_8] ecx +
mov edi [ecx] +
mov eax [ecx+4] +
mov [ebp+var_4] eax +
mov eax [edi] +
mov esi [eax+10h] +
mov ecx esi +
call ds:off_43520C  +
jmp loc_40A2AA  +
***
sub esp 108h +
cmp ecx dword_430000 +
sub esp 98h +
sub esp 248h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi [ebp+arg_0] +
call sub_4021F1  +
test eax eax +
jz loc_40A6AF  +
push esi  +
push edi  +
call ds:FindFirstFileW  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_4021E3  +
leave   +
retn 8  +
***
mov edx [ecx] +
mov esi [esp+arg_4] +
mov eax [ebp+arg_4] +
xor ecx ecx +
test eax eax +
jz loc_402503  +
cmp eax 7FFFFFFFh +
ja loc_402503  +
test ecx ecx +
js loc_40250A  +
push ecx  +
push [ebp+arg_8]  +
mov edx eax +
push ecx  +
mov ecx [ebp+arg_0] +
call sub_4011B6  +
jmp loc_40999F  +
mov eax ecx +
pop ebp  +
retn 0Ch  +
mov ecx 80070057h +
jmp loc_4024E5  +
test eax eax +
jnz loc_4099A6  +
jmp loc_4024FD  +
***
call ds:GetProcessHeap  +
sub esp 14h +
mov edi ecx +
xor esi esi +
cmp [edi+10h] esi +
jnz loc_4026CA  +
mov eax [edi+14h] +
push ebx  +
push 2Ch  +
pop ebx  +
mul  ebx +
cmp edx esi +
ja loc_4026A5  +
push 0FFFFFFFFh  +
pop ecx  +
jb loc_402682  +
cmp eax ecx +
ja loc_4026A5  +
sub ecx eax +
cmp ecx 4 +
jb loc_4026A5  +
add eax 4 +
push eax  +
call sub_41760A  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_40A31F  +
mov ecx [edi+0Ch] +
mov [esi] ecx +
mov [edi+0Ch] esi +
test esi esi +
jz loc_40A31F  +
mov ecx [edi+14h] +
imul edx ecx +
add edx 0FFFFFFD8h +
add edx esi +
sub ecx 1 +
js loc_4026C9  +
mov eax [edi+10h] +
mov [edx] eax +
mov [edi+10h] edx +
sub edx ebx +
jmp loc_4026B8  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
push esi  +
mov esi [ecx] +
push edi  +
xor edi edi +
test esi esi +
jz loc_402738  +
push ebx  +
mov ebx esi +
mov esi [esi] +
push dword ptr [ebx+28h]  +
push [ebp+arg_0]  +
call sub_40A87E  +
test eax eax +
jnz loc_402740  +
lea edi [ebx+8] +
pop ebx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
test esi esi +
jz loc_402737  +
jmp loc_402721  +
***
mov eax [ebp+arg_0] +
push esi  +
push esi  +
sub ecx eax +
sub ecx eax +
sub esp 4FCh +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_4] +
xor eax eax +
mov [ebp+var_4A0] eax +
mov [ebp+var_461] al +
mov [ebp+var_475] dl +
lea esi [edi+edi] +
mov [ebp+var_474] ecx +
mov eax esi +
mov [ebp+var_48C] edi +
shr eax 1 +
cmp eax edi +
jnz loc_402AA4  +
jmp loc_409B02  +
***
jz loc_402919  +
mov esi edx +
push ebx  +
push edi  +
xor ebx ebx +
lea edi [esi+2] +
mov ax [esi] +
add esi 2 +
cmp ax bx +
jnz loc_4028F6  +
sub esi edi +
sar esi 1 +
pop edi  +
inc esi  +
pop ebx  +
xor eax eax +
mov [ecx+4] esi +
cmp eax esi +
pop esi  +
sbb eax eax +
and eax edx +
mov [ecx] eax +
mov eax ecx +
retn   +
xor esi esi +
jmp loc_402908  +
***
mov eax ebx +
shl eax 3 +
push eax  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov dword_430024 eax +
test eax eax +
jz loc_406DAF  +
mov edi lpMem +
test edi edi +
jz loc_402978  +
mov edx [edi] +
test edx edx +
jz loc_40296C  +
lea ecx [esp-4+arg_C] +
call sub_4028E8  +
mov edx dword_430024 +
mov ecx [eax] +
mov [esi+edx] ecx +
mov eax [eax+4] +
mov [esi+edx+4] eax +
add esi 8 +
mov edi [edi+4] +
test edi edi +
jnz loc_402948  +
mov eax dword_430024 +
mov ecx [ebp+arg_0] +
mov [ecx] ebx +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
xor eax eax +
mov ecx nBufferMax +
cmp [ecx] al +
setz al  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 8  +
***
lea edx [ebp+var_4] +
lea ecx [ebp+arg_0] +
call sub_4019A4  +
mov esi [ebp+var_4] +
jmp loc_4029C1  +
cmp eax 22h +
jz loc_4029BB  +
cmp eax 5Ch +
jz loc_402998  +
push ecx  +
lea ecx [ebp+arg_0] +
call sub_401974  +
add esi 2 +
mov [ebp+var_4] esi +
movzx ecx word ptr [esi] +
mov eax ecx +
test eax eax +
jz loc_409A6F  +
jmp loc_4029A8  +
***
sub esp 210h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jz loc_402A25  +
xor eax eax +
cmp ax [edi] +
jz loc_402A25  +
call sub_4021F1  +
test eax eax +
jz loc_40A700  +
push esi  +
push ebx  +
push [ebp+cchWideChar]  +
push edi  +
call ds:GetFullPathNameW  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
leave   +
retn 10h  +
xor eax eax +
jmp loc_402A14  +
***
test esi esi +
jz loc_402AA4  +
push edi  +
push ebx  +
push esi  +
push eax  +
call sub_4029D1  +
cmp [ebp+arg_0] 0 +
mov edi eax +
mov edx dword ptr [ebp+arg_4] +
jnz loc_409BCD  +
jmp loc_409BD5  +
***
test edi edi +
jz loc_402AA4  +
test ebx ebx +
jnz loc_409E61  +
jmp loc_409E6F  +
cmp [ebp+var_475] dl +
jz loc_4022F0  +
jmp loc_40A111  +
***
test esi esi +
jnz loc_401B77  +
jmp loc_401B15  +
***
push [ebp+arg_C]  +
mov dl [ebp+arg_4] +
push [ebp+arg_8]  +
mov ecx [ebp+arg_0] +
call sub_402842  +
test eax eax +
jz loc_406C5A  +
mov al 1 +
pop ebp  +
retn 10h  +
***
push 2Ch  +
pop ecx  +
cmp ax cx +
jz loc_4018E8  +
push dword ptr [esi+edi*8+4]  +
push dword ptr [esi+edi*8]  +
call sub_4012BF  +
mov edi eax +
push 7Ch  +
push edi  +
call sub_416FBF  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jnz loc_40703B  +
push ecx  +
push ecx  +
mov eax esp +
lea ecx [esp+340h] +
push ebx  +
push edi  +
mov [eax] ecx +
mov dword ptr [eax+4] 104h +
call sub_402AE1  +
test al al +
jz loc_4017F4  +
test esi esi +
jnz loc_407064  +
jmp loc_407085  +
lea esi [esp+130h] +
mov ecx esi +
jmp loc_40524B  +
***
mov eax dword_431430 +
sub esp 0Ch +
push esi  +
xor esi esi +
push edi  +
mov edi ecx +
test eax eax +
jnz loc_402B80  +
and [ebp+var_4] esi +
lea eax [ebp+var_4] +
push eax  +
mov edx offset dword_402BC4 +
mov ecx offset dword_402BD4 +
call sub_402DA8  +
mov esi eax +
test esi esi +
jns loc_409723  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
push ecx  +
push ecx  +
mov eax dword_43142C +
push esi  +
mov esi ecx +
test eax eax +
jnz loc_402D93  +
push offset LibFileName  +
call ds:LoadLibraryA  +
mov edx eax +
test edx edx +
jz loc_4096CE  +
push edi  +
mov ecx edx +
mov edi offset dword_43142C +
xor eax eax +
cmpxchg [edi] ecx +
pop edi  +
test eax eax +
jnz loc_4096E6  +
mov eax dword_43142C +
mov dword_431848 eax +
mov byte_43184C 1 +
mov [esi] eax +
xor eax eax +
pop esi  +
retn   +
***
push ecx  +
and [ebp+hModule] 0 +
push ebx  +
mov ebx ecx +
lea ecx [ebp+hModule] +
push edi  +
mov edi edx +
call sub_402D4A  +
test eax eax +
js loc_40971B  +
push esi  +
push offset aClrcreateinsta  +
push [ebp+hModule]  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jnz loc_40970B  +
jmp loc_4096F7  +
***
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_402A99  +
test ebx ebx +
jz loc_409CB4  +
test esi esi +
jnz loc_409CB4  +
jmp loc_402AA4  +
push offset dword_402E40  +
push ebx  +
call sub_414C46  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_402A99  +
cmp [ebp+var_461] al +
jz loc_409D1A  +
jmp loc_409D05  +
***
lea eax [ebp+var_470] +
mov ecx ebx +
push eax  +
push 3  +
pop edx  +
call sub_4027BD  +
mov esi eax +
test esi esi +
jz loc_402AA0  +
push 3  +
lea eax [ebp+var_49C] +
push eax  +
lea ecx [ebp+var_480] +
call sub_401940  +
push esi  +
lea eax [ebp+var_49C] +
push eax  +
lea ecx [ebp+var_470] +
call sub_401940  +
mov edi [ebp+var_47C] +
mov esi [ebp+var_480] +
cmp [ebp+arg_0] 0 +
jz loc_402EE4  +
cmp [ebp+arg_4] 0 +
jbe loc_402AA4  +
push [ebp+arg_0]  +
mov ecx offset unk_431400 +
call sub_402713  +
mov ebx eax +
mov [ebp+var_474] ebx +
test ebx ebx +
jnz loc_4023DD  +
mov edx [ebp+arg_0] +
mov ebx [ebp+arg_4] +
test edx edx +
jnz loc_409EAF  +
jmp loc_409EB7  +
test esi esi +
jz loc_402AA4  +
mov ecx ebx +
lea edx [ecx+2] +
jmp loc_409DE7  +
***
call sub_401EBC  +
pop ecx  +
retn   +
***
mov eax lpMem +
push edi  +
xor edi edi +
test eax eax +
jz loc_403197  +
push esi  +
mov ecx [eax] +
mov esi [eax+4] +
test ecx ecx +
jz loc_40317C  +
push ecx  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax lpMem +
push eax  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax esi +
mov lpMem eax +
test esi esi +
jnz loc_40315F  +
pop esi  +
mov eax dword_430024 +
test eax eax +
jz loc_4031AF  +
push eax  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov dword_430024 edi +
mov nBufferMax edi +
pop edi  +
retn   +
***
push edi  +
push ecx  +
push edi  +
call sub_402C0B  +
test al al +
jz loc_4095FC  +
sub esp 0Ch +
lea ecx [ebp+var_4] +
xor edi edi +
mov [ebp+var_4] edi +
call sub_403A20  +
jmp loc_4095D3  +
***
sub esp 24h +
and esp 0FFFFFFF8h +
sub esp 0Ch +
push ebx  +
push esi  +
push edi  +
call ds:GetCommandLineW  +
mov ecx [ebp+arg_0] +
xor esi esi +
push offset lpMem  +
push eax  +
mov [ecx] esi +
mov ecx [ebp+arg_4] +
mov [ecx] esi +
call sub_4025C6  +
mov eax nBufferMax +
cmp byte ptr [eax+1] 0 +
jnz loc_403534  +
mov eax lpMem +
test eax eax +
jz loc_40351C  +
push dword ptr [eax]  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
jmp loc_406D94  +
push eax  +
call ds:HeapFree  +
call sub_401FF3  +
mov eax nBufferMax +
cmp byte ptr [eax] 0 +
jnz loc_403534  +
mov eax lpMem +
mov ebx esi +
jmp loc_40353B  +
xor al al +
jmp loc_40298F  +
test eax eax +
jz loc_40291D  +
cmp [eax] esi +
jz loc_403548  +
inc ebx  +
mov eax [eax+4] +
jmp loc_40353B  +
***
call sub_401000  +
push 14h  +
push offset dword_403570  +
call sub_401E34  +
push 1  +
call sub_41890A  +
jmp loc_40A3C2  +
***
sub esp 1Ch +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
lea ecx [ebp+ConsoleScreenBufferInfo] +
push ecx  +
push eax  +
call ds:GetConsoleScreenBufferInfo  +
test eax eax +
jnz loc_4035FB  +
cmp byte_43003B al +
setz al  +
dec eax  +
and eax 0FFFF0050h +
add eax 10000h +
mov ecx [ebp+var_4] +
xor ecx ebp +
mov dword_430040 eax +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
movsx eax [ebp+ConsoleScreenBufferInfo.dwSize.X] +
cmp eax 0Ah +
jnb loc_4035E8  +
jmp loc_406B04  +
***
push ebp  +
mov ebp esp +
sub esp 230h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi dword_431284 +
push edi  +
mov [ebp-22Ch] esi +
call sub_412F77  +
add eax 20h +
push eax  +
call sub_412951  +
push eax  +
call sub_412C7F  +
pop ecx  +
pop ecx  +
mov edi eax +
push edi  +
call ds:GetFileType  +
and eax 0FFFF7FFFh +
xor ebx ebx +
cmp eax 2 +
jz loc_406A2D  +
push 0Ah  +
lea ecx [ebp-220h] +
mov [ebp-220h] ebx +
mov [ebp-21Ch] ebx +
mov [ebp-218h] ebx +
call sub_401147  +
mov esi [ebp-220h] +
mov edi [ebp-21Ch] +
test esi esi +
jz loc_403691  +
test edi edi +
jz loc_40372C  +
call ds:GetConsoleCP  +
push eax  +
push offset a_D  +
push 0Ah  +
push esi  +
call sub_41324D  +
add esp 10h +
test esi esi +
jz loc_4036B0  +
test edi edi +
jz loc_40372C  +
push esi  +
push 2  +
call sub_41386F  +
pop ecx  +
pop ecx  +
lea ecx [ebp-220h] +
call sub_401FCB  +
mov esi [ebp-22Ch] +
lea eax [ebp-228h] +
push eax  +
push 0FFFFFFF5h  +
call ds:GetStdHandle  +
push eax  +
call ds:GetConsoleScreenBufferInfo  +
neg eax  +
sbb al al +
inc al  +
mov byte_43003C al +
call sub_4035AD  +
mov edi offset byte_430030 +
mov ecx edi +
call sub_401196  +
mov dword_43104C (offset a9JhiFhs+10h) +
test esi esi +
jz loc_406A64  +
mov dword_430034 esi +
mov bl 1 +
mov ecx [ebp-4] +
mov al bl +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
call sub_40E206  +
int 3  +
nop   +
nop   +
call esi  +
sub esp 0Ch +
mov dword_431284 eax +
call loc_403609  +
test al al +
jz loc_408682  +
lea eax [ebp+var_14] +
push eax  +
lea eax [ebp+var_18] +
push eax  +
call sub_4034C3  +
test al al +
jz loc_40341A  +
mov edx [ebp+var_14] +
mov ecx [ebp+var_18] +
call loc_410005  +
cmp byte_430030 bl +
jnz loc_40341A  +
cmp byte_43128E bl +
jz loc_40868A  +
push ebx  +
push ebx  +
call ds:CoInitializeEx  +
mov edi eax +
mov [ebp+var_4] edi +
test edi edi +
js loc_40865A  +
cmp byte_43128D bl +
jnz loc_408694  +
mov edx [ebp+var_14] +
mov ecx [ebp+var_18] +
call sub_401812  +
mov edi eax +
mov [ebp+var_4] edi +
test edi edi +
js loc_40865A  +
cmp byte_430030 bl +
jnz loc_40341A  +
mov esi [ebp+var_20] +
lea eax [ebp+var_C] +
push eax  +
push offset dword_4037EC  +
mov ecx esi +
call ds:off_43520C  +
jmp loc_4086A1  +
***
test esi esi +
jz loc_403824  +
mov ecx [esi+4] +
push ebx  +
xor ebx ebx +
push edi  +
test ecx ecx +
jnz loc_409539  +
mov ecx [esi+8] +
test ecx ecx +
jnz loc_409563  +
jmp loc_403822  +
mov [esi+8] ebx +
pop edi  +
pop ebx  +
pop esi  +
retn   +
***
test edi edi +
js loc_405270  +
cmp byte_430031 bl +
jnz loc_405270  +
cmp byte_43128C bl +
jz loc_405266  +
cmp dword_430018 ebx +
jnz loc_405266  +
mov edi offset byte_430030 +
cmp dword_430020 ebx +
jz loc_4082F2  +
cmp dword_4313F4 ebx +
jz loc_408316  +
cmp byte_43128C bl +
jz loc_408302  +
cmp dword_431288 ebx +
jnz loc_405221  +
cmp dword_43129C ebx +
jnz loc_408326  +
test byte ptr dword_43000C 10h +
jnz loc_40833C  +
cmp dword_4313F4 ebx +
jz loc_4038BA  +
mov esi dword_430020 +
test esi esi +
jz loc_4038BA  +
cmp byte_430031 bl +
jz loc_4038DA  +
lea ecx [esp+44h] +
call sub_4037FC  +
mov ecx [esp+1Ch+arg_1150] +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
test esi esi +
jz loc_4038BA  +
cmp [esi+4] ebx +
jnz loc_40834C  +
push dword_4313F4  +
push dword ptr [esi]  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_408364  +
mov esi [esi+0Ch] +
jmp loc_4038DA  +
***
sub esp 43Ch +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_10] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
push edi  +
mov [ebp+var_42C] eax +
xor edi edi +
mov eax dword_431428 +
xor esi esi +
mov [ebp+var_420] ecx +
test eax eax +
jnz loc_403914  +
and [ebp+var_41C] esi +
lea eax [ebp+var_41C] +
push eax  +
mov edx offset dword_403A00 +
mov ecx offset dword_403A10 +
call sub_402DA8  +
mov esi eax +
test esi esi +
jns loc_409755  +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push ecx  +
push esi  +
and esp 0FFFFFFF8h +
sub esp 8BCh +
mov eax dword_430000 +
xor eax esp +
mov [esp+8BCh+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [edx] +
mov ebx ecx +
xor ecx ecx +
mov [esp+8C4h+nNumberOfBytesToWrite] eax +
push edi  +
lea eax [esp+8C8h+var_884] +
mov [esp+8C8h+var_8A0] ecx +
push eax  +
push offset dword_403B5C  +
push ecx  +
push offset dword_403B4C  +
mov [esp+8D8h+var_874] ecx +
mov [esp+8D8h+var_8BC] ecx +
mov [esp+8D8h+var_8B0] ecx +
mov [esp+8D8h+var_87C] ecx +
mov [esp+8D8h+var_894] ecx +
mov [esp+8D8h+var_898] ecx +
mov [esp+8D8h+var_888] ecx +
mov [esp+8D8h+var_8A2] cl +
mov [esp+8D8h+var_880] ecx +
mov [esp+8D8h+var_8A3] cl +
mov [esp+8D8h+var_8A1] cl +
mov [esp+8D8h+var_890] ecx +
mov [esp+8D8h+var_870] ecx +
mov [esp+8D8h+NumberOfBytesWritten] ecx +
mov [esp+8D8h+var_8AC] ecx +
mov ecx [esi+0Ch] +
push edx  +
call ds:off_43520C  +
jmp loc_4088DC  +
***
sub esp 310h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_C] +
call sub_4021F1  +
test eax eax +
jz loc_40A7AF  +
push edi  +
push [ebp+uUnique]  +
push ebx  +
push esi  +
call ds:GetTempFileNameW  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
leave   +
retn 10h  +
***
mov edi eax +
test edi edi +
js loc_408E68  +
lea eax [esp+8DCh+var_22C] +
push eax  +
push 104h  +
call sub_4021A3  +
test eax eax +
jz loc_408E9D  +
lea eax [esp+8DCh+var_84C] +
xor esi esi +
push eax  +
push esi  +
push offset aAlk  +
lea eax [esp+8E8h+var_22C] +
push eax  +
call sub_403CA5  +
test eax eax +
jz loc_408EB4  +
lea ecx [esp+8DCh+var_84C] +
call sub_403EFA  +
mov dword_4313F0 eax +
test eax eax +
jz loc_403E50  +
push esi  +
push 2000h  +
push 2  +
push esi  +
push 1  +
push 40000000h  +
lea eax [esp+8F4h+var_84C] +
push eax  +
call sub_401345  +
mov [esp+8DCh+var_8BC] eax +
cmp eax 0FFFFFFFFh +
jz loc_408ED8  +
push esi  +
lea ecx [esp+8E0h+NumberOfBytesWritten] +
mov [esp+8E0h+var_8B6] 1 +
push ecx  +
push [esp+8E4h+nNumberOfBytesToWrite]  +
push [esp+8E8h+lpBuffer]  +
push eax  +
call ds:WriteFile  +
test eax eax +
jz loc_408F16  +
mov eax [ebx] +
lea ecx [esp+8DCh+var_84C] +
push ecx  +
push [esp+8E0h+var_8CC]  +
mov esi [eax+28h] +
mov ecx esi +
call ds:off_43520C  +
jmp loc_408F3E  +
***
sub esp 108h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
call sub_4021F1  +
test eax eax +
jz loc_40A67B  +
push esi  +
call ds:DeleteFileW  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_4021E3  +
leave   +
retn 4  +
***
mov ebx ecx +
xor esi esi +
push edi  +
mov edx ebx +
push 2  +
pop edi  +
lea ecx [edx+2] +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
nop   +
mov ax [edx] +
add edx edi +
cmp ax si +
jnz loc_403F10  +
sub edx ecx +
sar edx 1 +
lea edi [edx+1] +
cmp edx edi +
jnb loc_406A10  +
push 2  +
xor ecx ecx +
mov eax edi +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_403F56  +
push ebx  +
push edi  +
push esi  +
call sub_4024D2  +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
test al al +
jnz loc_4017F4  +
push 10h  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ecx eax +
test ecx ecx +
jz loc_405255  +
mov [ecx+4] ebx +
mov [ecx] ebx +
mov [ecx+0Ch] ebx +
mov eax off_43001C +
mov [eax] ecx +
test ecx ecx +
jz loc_40525C  +
mov byte ptr [ecx+8] 1 +
lea ecx [esp+338h] +
call sub_403EFA  +
mov edx off_43001C +
mov ecx eax +
mov eax [edx] +
mov [eax] ecx +
test ecx ecx +
jz loc_40825A  +
test esi esi +
jnz loc_407091  +
mov eax [edx] +
add eax 0Ch +
mov off_43001C eax +
jmp loc_4017F4  +
***
sub esp 14h +
push ebx  +
push esi  +
mov [ebp+var_14] ecx +
mov ebx edx +
mov ecx offset dword_4041D0 +
mov [ebp+var_4] ebx +
mov eax offset word_4312B0 +
mov [ebp+var_8] ecx +
push edi  +
xor esi esi +
mov [ebp+var_C] eax +
test esi esi +
js loc_4094CD  +
movzx edx word ptr [eax] +
test dx dx +
jnz loc_409424  +
add eax 10h +
add ecx 18h +
mov [ebp+var_C] eax +
mov [ebp+var_8] ecx +
cmp eax offset dword_4313F0 +
jl loc_404197  +
jmp loc_4094CD  +
***
retf 32h  +
***
retf   +
***
push 10000h  +
mov ecx [ebp+arg_8] +
mov eax [ebp+arg_4] +
and ecx 0FFF7FFFFh +
and eax ecx +
push esi  +
mov esi [ebp+arg_0] +
test eax 0FCF0FCE0h +
jz loc_40A610  +
jmp loc_40A5EC  +
***
pop ecx  +
push [ebp+lpTopLevelExceptionFilter]  +
cmp byte ptr [ecx+8] 0 +
mov dword ptr [ecx] offset off_404DD0 +
jnz loc_40A396  +
retn   +
***
push [ebp+dwBytes]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapAlloc  +
pop ebp  +
retn 4  +
***
sub esp 10h +
push ebx  +
push esi  +
mov esi [ecx] +
xor eax eax +
push edi  +
mov [ebp+var_C] eax +
mov edi edx +
mov [ebp+var_8] eax +
mov [ebp+var_4] eax +
lea eax [ebp+var_4] +
push eax  +
push offset dword_404E5C  +
push ecx  +
mov ecx [esi] +
call ds:off_43520C  +
jmp loc_4094D6  +
***
mov ebx eax +
cmp ebx 80004002h +
jz loc_4094DD  +
test ebx ebx +
js loc_404EB2  +
mov eax [ebp+var_4] +
lea ecx [ebp+var_C] +
push ecx  +
push 1  +
lea ecx [ebp+var_10] +
mov esi [eax] +
push ecx  +
push edi  +
lea ecx [ebp+var_8] +
mov esi [esi+104h] +
push ecx  +
push eax  +
mov ecx esi +
call ds:off_43520C  +
jmp loc_4094E5  +
test ebx ebx +
js loc_404EB2  +
xor ebx ebx +
cmp [ebp+var_C] ebx +
setnz bl  +
mov ecx [ebp+var_4] +
test ecx ecx +
jz loc_409506  +
mov edx [ecx] +
push ecx  +
mov esi [edx+8] +
mov ecx esi +
call ds:off_43520C  +
jmp loc_409504  +
***
sub esp 64h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov [ebp+var_34] edx +
mov ebx ecx +
mov edx [ebp+arg_10] +
mov ecx [ebp+arg_0] +
mov [ebp+var_5C] eax +
mov eax [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_14] +
mov [ebp+var_48] eax +
xor eax eax +
and [edx] eax +
push edi  +
mov edi [ebp+arg_8] +
mov [ebp+var_50] edx +
mov edx [ebp+var_48] +
mov [ebp+var_24] ebx +
and [edi] eax +
mov [ebp+var_60] edi +
and [edx] eax +
mov [ebp+var_54] esi +
mov [ebp+var_2C] eax +
test ecx ecx +
jnz loc_4091CA  +
and [ebp+var_3C] 0 +
and [ebp+var_30] 0 +
test eax 0FFFFFFh +
jz loc_404F71  +
mov edx eax +
mov ecx ebx +
call sub_404E2C  +
test eax eax +
jnz loc_4091E5  +
mov eax [ebp+var_2C] +
mov esi [ebx] +
lea ecx [ebp+var_30] +
push ecx  +
push 4  +
lea ecx [ebp+var_20] +
push ecx  +
push [ebp+var_5C]  +
mov ecx [esi+4Ch] +
push eax  +
lea eax [ebp+var_3C] +
push eax  +
push ebx  +
call ds:off_43520C  +
jmp loc_4091F2  +
***
cmp ecx 7Fh +
ja loc_40958F  +
xor eax eax +
mov [edx] cl +
inc eax  +
retn   +
***
sub esp 5Ch +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_4C] 0 +
and [ebp+var_48] 0 +
cmp [ebp+arg_10] 0 +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov [ebp+var_58] edx +
mov ecx [ebp+arg_0] +
lea ebx [ebp+var_44] +
mov [ebp+var_50] ecx +
mov [ebp+var_54] eax +
jle loc_409395  +
jmp loc_40938E  +
***
test eax eax +
js loc_405184  +
mov eax [ebp+var_4C] +
lea ecx [ebp+var_44] +
push [ebp+var_5C]  +
shl bl 2 +
or bl 2 +
mov [eax] bl +
inc eax  +
push ecx  +
push eax  +
call sub_4024B1  +
mov eax [edi] +
lea ecx [ebp+var_48] +
add esp 0Ch +
mov esi [eax+0D4h] +
push ecx  +
push [ebp+var_4C]  +
mov ecx esi +
push [ebp+var_50]  +
call ds:off_43520C  +
jmp loc_4093D4  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn 14h  +
***
push 0Ch  +
push offset aBaseaddress  +
push esi  +
call sub_416A42  +
add esp 0Ch +
test eax eax +
jz loc_407F3D  +
test esi esi +
jz loc_4051BB  +
test edi edi +
jz loc_405277  +
push 2  +
push offset aT  +
push esi  +
call sub_416A42  +
jmp loc_407412  +
***
push 5  +
lea eax [esp+2Ch+arg_70] +
push eax  +
call sub_40175D  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_401247  +
mov ecx eax +
call sub_403EFA  +
mov dword_43129C eax +
test eax eax +
jnz loc_4017F4  +
jmp loc_40525C  +
cmp dword_43129C ebx +
jz loc_40832C  +
cmp dword_431288 ebx +
jnz loc_4038A0  +
jmp loc_403893  +
test al al +
jnz loc_402B61  +
jmp loc_4017F4  +
call sub_4102F0  +
jmp loc_403F5C  +
mov ecx ebx +
jmp loc_403F86  +
mov edi 8007000Eh +
jmp loc_4082A5  +
mov edi offset byte_430030 +
jmp loc_403863  +
mov eax edi +
jmp loc_40837C  +
call sub_40E206  +
jmp loc_408383  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_401247  +
push offset aLib  +
push eax  +
mov [esp+28h] eax +
call sub_4145B0  +
jmp loc_407EB4  +
***
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407F32  +
push offset aExe  +
push dword ptr [esp+24h]  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_407ECD  +
mov dword_431288 1 +
jmp loc_4017F4  +
***
mov edi eax +
test edi edi +
js loc_409342  +
and [ebp+var_30] 0 +
xor edi edi +
mov ebx [ebp+var_24] +
cmp [ebp+var_3C] 0 +
jz loc_404EEB  +
mov eax [ebx] +
push [ebp+var_3C]  +
push ebx  +
mov esi [eax+0Ch] +
mov ecx esi +
call ds:off_43520C  +
jmp loc_409364  +
mov eax edi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn 18h  +
***
cmp edi eax +
jb loc_405692  +
bt dword_434930 1 +
jnb loc_405345  +
movs   +
jmp near ptr dword_405658  +
cmp ecx 80h +
jb loc_40551E  +
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_40536A  +
bt dword_433748 1 +
jb loc_405824  +
bt dword_434930 0 +
jnb loc_40551E  +
test edi 3 +
jnz loc_40553A  +
test esi 3 +
jnz loc_405526  +
bt edi 2 +
jnb loc_4053A3  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_4053BA  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_405425  +
bt esi 3 +
jnb loc_40547D  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
***
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
***
push esi  +
***
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
***
jmp eax  +
***
test edi 3 +
jnz loc_40553A  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_405559  +
movs   +
jmp ds:off_405648[edx*4]  +
mov eax edi +
mov edx 3 +
sub ecx 4 +
jb loc_405552  +
and eax 3 +
add ecx eax +
jmp dword ptr ds:(loc_405559+3)[eax*4]  +
jmp ds:dword_405658[ecx*4]  +
jmp ds:off_4055D8[ecx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
add esi 3 +
add edi 3 +
cmp ecx 8 +
jb loc_405559  +
movs   +
jmp ds:off_405648[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
add esi 2 +
add edi 2 +
cmp ecx 8 +
jb loc_405559  +
movs   +
jmp ds:off_405648[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
add esi 1 +
shr ecx 2 +
add edi 1 +
cmp ecx 8 +
jb loc_405559  +
movs   +
jmp ds:off_405648[edx*4]  +
***
mov eax [esi+ecx*4-1Ch] +
mov [edi+ecx*4-1Ch] eax +
mov eax [esi+ecx*4-18h] +
mov [edi+ecx*4-18h] eax +
mov eax [esi+ecx*4-14h] +
mov [edi+ecx*4-14h] eax +
mov eax [esi+ecx*4-10h] +
mov [edi+ecx*4-10h] eax +
mov eax [esi+ecx*4-0Ch] +
mov [edi+ecx*4-0Ch] eax +
mov eax [esi+ecx*4-8] +
mov [edi+ecx*4-8] eax +
mov eax [esi+ecx*4-4] +
mov [edi+ecx*4-4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
jmp ds:off_405648[edx*4]  +
***
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+arg_0] +
pop esi  +
pop edi  +
retn   +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+arg_0] +
pop esi  +
pop edi  +
retn   +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+arg_0] +
pop esi  +
pop edi  +
retn   +
lea esi [ecx+esi-4] +
lea edi [ecx+edi-4] +
test edi 3 +
jnz loc_4056C1  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_4056B8  +
std   +
movs   +
cld   +
jmp ds:off_4057D4[edx*4]  +
neg ecx  +
jmp ds:off_405784[ecx*4]  +
mov eax edi +
mov edx 3 +
cmp ecx 4 +
jb loc_4056D9  +
and eax 3 +
sub ecx eax +
jmp dword ptr ds:(loc_4056D9+3)[eax*4]  +
jmp ds:off_4057D4[ecx*4]  +
***
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
sub esi 1 +
shr ecx 2 +
sub edi 1 +
cmp ecx 8 +
jb loc_4056B8  +
std   +
movs   +
cld   +
jmp ds:off_4057D4[edx*4]  +
***
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
sub esi 2 +
sub edi 2 +
cmp ecx 8 +
jb loc_4056B8  +
std   +
movs   +
cld   +
jmp ds:off_4057D4[edx*4]  +
***
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
sub esi 3 +
sub edi 3 +
cmp ecx 8 +
jb loc_4056B8  +
std   +
movs   +
cld   +
jmp ds:off_4057D4[edx*4]  +
***
mov eax [esi+ecx*4+1Ch] +
mov [edi+ecx*4+1Ch] eax +
mov eax [esi+ecx*4+18h] +
mov [edi+ecx*4+18h] eax +
mov eax [esi+ecx*4+14h] +
mov [edi+ecx*4+14h] eax +
mov eax [esi+ecx*4+10h] +
mov [edi+ecx*4+10h] eax +
mov eax [esi+ecx*4+0Ch] +
mov [edi+ecx*4+0Ch] eax +
mov eax [esi+ecx*4+8] +
mov [edi+ecx*4+8] eax +
mov eax [esi+ecx*4+4] +
mov [edi+ecx*4+4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
***
jmp ds:off_4057D4[edx*4]  +
***
mov eax [esp+arg_0] +
pop esi  +
pop edi  +
retn   +
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+arg_0] +
pop esi  +
pop edi  +
retn   +
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+arg_0] +
pop esi  +
pop edi  +
retn   +
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+arg_0] +
pop esi  +
pop edi  +
retn   +
push edi  +
mov eax esi +
and eax 0Fh +
test eax eax +
jnz loc_4058EC  +
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_40589D  +
lea esp [esp+4+var_4] +
nop   +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_405840  +
test ecx ecx +
jz loc_4058E8  +
mov edx ecx +
shr edx 4 +
test edx edx +
jz loc_4058BD  +
lea ebx [ebx] +
movdqa xmm0 oword ptr [esi] +
movdqa oword ptr [edi] xmm0 +
lea esi [esi+10h] +
lea edi [edi+10h] +
dec edx  +
jnz loc_4058AC  +
and ecx 0Fh +
jz loc_4058E8  +
mov eax ecx +
shr ecx 2 +
jz loc_4058D6  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec ecx  +
jnz loc_4058C9  +
mov ecx eax +
and ecx 3 +
jz loc_4058E8  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_4058DD  +
lea ebx [ebx] +
pop eax  +
pop esi  +
pop edi  +
retn   +
mov edx 10h +
sub edx eax +
sub ecx edx +
push ecx  +
mov eax edx +
mov ecx eax +
and ecx 3 +
jz loc_405908  +
mov dl [esi] +
mov [edi] dl +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_4058FF  +
shr eax 2 +
jz loc_40591A  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec eax  +
jnz loc_40590D  +
pop ecx  +
jmp loc_405832  +
***
push esi  +
mov eax [esp+8+arg_4] +
mov ecx [ebp-1Ch] +
mov eax [esp+arg_C] +
push ebx  +
xor edi edi +
mov ecx [esp+arg_0] +
mov edx [esp+arg_0] +
mov ecx [esp+arg_4] +
test edx 3 +
jnz loc_405CC6  +
mov eax [edx] +
cmp al [ecx] +
jnz loc_405CC0  +
test al al +
jz loc_405CBD  +
cmp ah [ecx+1] +
jnz loc_405CC0  +
test ah ah +
jz loc_405CBD  +
shr eax 10h +
cmp al [ecx+2] +
jnz loc_405CC0  +
test al al +
jz loc_405CBD  +
cmp ah [ecx+3] +
jnz loc_405CC0  +
add ecx 4 +
add edx 4 +
test ah ah +
jnz loc_405C8D  +
mov edi edi +
xor eax eax +
retn   +
sbb eax eax +
or eax 1 +
retn   +
test edx 1 +
jz loc_405CE6  +
mov al [edx] +
add edx 1 +
cmp al [ecx] +
jnz loc_405CC0  +
add ecx 1 +
test al al +
jz loc_405CBD  +
test edx 2 +
jz loc_405C8D  +
mov ax [edx] +
add edx 2 +
cmp al [ecx] +
jnz loc_405CC0  +
test al al +
jz loc_405CBD  +
cmp ah [ecx+1] +
jnz loc_405CC0  +
test ah ah +
jz loc_405CBD  +
add ecx 2 +
jmp loc_405C8D  +
***
push edi  +
push esi  +
mov esi [esp+10h] +
mov ecx [esp+14h] +
mov edi [esp+0Ch] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_405D22  +
cmp edi eax +
jb loc_406082  +
bt dword_434930 1 +
jnb loc_405D33  +
movs   +
jmp near ptr dword_406048  +
cmp ecx 80h +
jb loc_405F0C  +
mov eax edi +
xor eax esi +
test eax 0Fh +
jnz loc_405D58  +
bt dword_433748 1 +
jb loc_406214  +
bt dword_434930 0 +
jnb loc_405F0C  +
test edi 3 +
jnz loc_405F28  +
test esi 3 +
jnz loc_405F14  +
bt edi 2 +
jnb loc_405D91  +
mov eax [esi] +
sub ecx 4 +
lea esi [esi+4] +
mov [edi] eax +
lea edi [edi+4] +
bt edi 3 +
jnb loc_405DA8  +
movq xmm1 qword ptr [esi] +
sub ecx 8 +
lea esi [esi+8] +
movq qword ptr [edi] xmm1 +
lea edi [edi+8] +
test esi 7 +
jz loc_405E13  +
bt esi 3 +
jnb loc_405E6B  +
movdqa xmm1 oword ptr [esi-0Ch] +
lea esi [esi-0Ch] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
movdqa xmm1 oword ptr [esi-8] +
lea esi [esi-8] +
lea ecx [ecx] +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
or bl ch +
push esi  +
movdqa xmm1 oword ptr [esi-4] +
lea esi [esi-4] +
mov edi edi +
movdqa xmm3 oword ptr [esi+10h] +
sub ecx 30h +
movdqa xmm0 oword ptr [esi+20h] +
movdqa xmm5 oword ptr [esi+30h] +
lea esi [esi+30h] +
cmp ecx 30h +
movdqa xmm2 xmm3 +
jmp eax  +
***
test edi 3 +
jnz loc_405F28  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_405F47  +
movs   +
jmp ds:off_406038[edx*4]  +
mov eax edi +
mov edx 3 +
sub ecx 4 +
jb loc_405F40  +
and eax 3 +
add ecx eax +
jmp dword ptr ds:(loc_405F47+5)[eax*4]  +
***
jmp ds:dword_406048[ecx*4]  +
***
jmp ds:off_405FC8[ecx*4]  +
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
add esi 3 +
add edi 3 +
cmp ecx 8 +
jb loc_405F47  +
movs   +
jmp ds:off_406038[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
add esi 2 +
add edi 2 +
cmp ecx 8 +
jb loc_405F47  +
movs   +
jmp ds:off_406038[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
add esi 1 +
shr ecx 2 +
add edi 1 +
cmp ecx 8 +
jb loc_405F47  +
movs   +
jmp ds:off_406038[edx*4]  +
***
mov eax [esi+ecx*4-1Ch] +
mov [edi+ecx*4-1Ch] eax +
mov eax [esi+ecx*4-18h] +
mov [edi+ecx*4-18h] eax +
mov eax [esi+ecx*4-14h] +
mov [edi+ecx*4-14h] eax +
mov eax [esi+ecx*4-10h] +
mov [edi+ecx*4-10h] eax +
mov eax [esi+ecx*4-0Ch] +
mov [edi+ecx*4-0Ch] eax +
mov eax [esi+ecx*4-8] +
mov [edi+ecx*4-8] eax +
mov eax [esi+ecx*4-4] +
mov [edi+ecx*4-4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
jmp ds:off_406038[edx*4]  +
***
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
lea esi [ecx+esi-4] +
lea edi [ecx+edi-4] +
test edi 3 +
jnz loc_4060B1  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_4060A8  +
std   +
movs   +
cld   +
jmp ds:off_4061C4[edx*4]  +
neg ecx  +
jmp ds:off_406174[ecx*4]  +
mov eax edi +
mov edx 3 +
cmp ecx 4 +
jb loc_4060C9  +
and eax 3 +
sub ecx eax +
jmp dword ptr ds:(loc_4060C9+3)[eax*4]  +
***
jmp ds:off_4061C4[ecx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
sub esi 1 +
shr ecx 2 +
sub edi 1 +
cmp ecx 8 +
jb loc_4060A8  +
std   +
movs   +
cld   +
jmp ds:off_4061C4[edx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
sub esi 2 +
sub edi 2 +
cmp ecx 8 +
jb loc_4060A8  +
std   +
movs   +
cld   +
jmp ds:off_4061C4[edx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
sub esi 3 +
sub edi 3 +
cmp ecx 8 +
jb loc_4060A8  +
std   +
movs   +
cld   +
jmp ds:off_4061C4[edx*4]  +
mov eax [esi+ecx*4+1Ch] +
mov [edi+ecx*4+1Ch] eax +
mov eax [esi+ecx*4+18h] +
mov [edi+ecx*4+18h] eax +
mov eax [esi+ecx*4+14h] +
mov [edi+ecx*4+14h] eax +
mov eax [esi+ecx*4+10h] +
mov [edi+ecx*4+10h] eax +
mov eax [esi+ecx*4+0Ch] +
mov [edi+ecx*4+0Ch] eax +
mov eax [esi+ecx*4+8] +
mov [edi+ecx*4+8] eax +
mov eax [esi+ecx*4+4] +
mov [edi+ecx*4+4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
jmp ds:off_4061C4[edx*4]  +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [esp+0Ch] +
pop esi  +
pop edi  +
retn   +
***
mov edx ecx +
and ecx 7Fh +
shr edx 7 +
jz loc_40628D  +
lea esp [esp] +
nop   +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec edx  +
jnz loc_406230  +
test ecx ecx +
jz loc_4062D8  +
mov edx ecx +
shr edx 4 +
test edx edx +
jz loc_4062AD  +
lea ebx [ebx] +
movdqa xmm0 oword ptr [esi] +
movdqa oword ptr [edi] xmm0 +
lea esi [esi+10h] +
lea edi [edi+10h] +
dec edx  +
jnz loc_40629C  +
and ecx 0Fh +
jz loc_4062D8  +
mov eax ecx +
shr ecx 2 +
jz loc_4062C6  +
mov edx [esi] +
mov [edi] edx +
lea esi [esi+4] +
lea edi [edi+4] +
dec ecx  +
jnz loc_4062B9  +
mov ecx eax +
and ecx 3 +
jz loc_4062D8  +
mov al [esi] +
mov [edi] al +
inc esi  +
inc edi  +
dec ecx  +
jnz loc_4062CD  +
lea ebx [ebx] +
pop eax  +
pop esi  +
pop edi  +
retn   +
***
push edi  +
mov ecx [esp+arg_0] +
push edi  +
mov ebp edx +
push ebx  +
push edx  +
or eax eax +
mov eax [esp+arg_4] +
mov ecx [esp+arg_C] +
or ecx eax +
mov ecx [esp+arg_8] +
jnz loc_4064F4  +
mov eax [esp+arg_0] +
mul  ecx +
retn 10h  +
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+4+arg_0] +
mul  [esp+4+arg_C] +
add ebx eax +
mov eax [esp+4+arg_0] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov ecx [esp+arg_0] +
push edi  +
mov ebx offset unk_4337E0 +
mov ebx offset unk_4337E0 +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
cmp dword_43492C 1 +
jb loc_406712  +
mov edi [ebp+8] +
ja loc_406691  +
movzx edx byte ptr [ebp+0Ch] +
mov eax edx +
shl edx 8 +
or edx eax +
movd xmm3 edx +
pshuflw xmm3 xmm3 +
movlhps xmm3 xmm3 +
mov ecx 0Fh +
and ecx edi +
or eax 0FFFFFFFFh +
shl eax cl +
sub edi ecx +
xor edx edx +
movdqu xmm1 qword ptr [edi] +
pxor xmm2 xmm2 +
pcmpeqb xmm2 xmm1 +
pcmpeqb xmm1 xmm3 +
pmovmskb ecx xmm2 +
and ecx eax +
jnz loc_406671  +
pmovmskb ecx xmm1 +
and ecx eax +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovnz edx eax +
or eax 0FFFFFFFFh +
add edi 10h +
jmp loc_406641  +
***
push ebx  +
pmovmskb ebx xmm1 +
and ebx eax +
shl ecx 1 +
xor eax eax +
sub eax ecx +
and ecx eax +
dec ecx  +
and ecx ebx +
pop ebx  +
bsr eax ecx +
add eax edi +
test ecx ecx +
cmovz eax edx +
pop edi  +
leave   +
retn   +
***
movzx edx byte ptr [ebp+0Ch] +
test edx edx +
jz loc_4066D2  +
xor eax eax +
test edi 0Fh +
jz loc_4066B8  +
movzx ecx byte ptr [edi] +
cmp ecx edx +
cmovz eax edi +
test ecx ecx +
jz loc_4066CF  +
inc edi  +
test edi 0Fh +
jnz loc_4066A3  +
movd xmm0 edx +
add edi 10h +
pop edi  +
leave   +
retn   +
***
mov eax 0FFFFFFF0h +
and eax edi +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax] +
mov ecx 0Fh +
and ecx edi +
mov edx 0FFFFFFFFh +
shl edx cl +
pmovmskb edi xmm0 +
and edi edx +
jnz loc_40670B  +
pxor xmm0 xmm0 +
pcmpeqb xmm0 oword ptr [eax+10h] +
add eax 10h +
pmovmskb edi xmm0 +
test edi edi +
jz loc_4066F7  +
bsf edx edi +
add eax edx +
jmp loc_4066CF  +
***
push ebp  +
cmp cl 40h +
cmp dword_43492C 1 +
push edi  +
sub esp 4 +
push ebx  +
push ecx  +
mov eax [ebp+arg_4] +
add eax 0Ch +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebp  +
push [ebp+arg_8]  +
mov ecx [ebp+arg_8] +
mov ebp [ebp+var_4] +
call sub_4065D9  +
push esi  +
push edi  +
call eax  +
pop edi  +
pop esi  +
mov ebx ebp +
pop ebp  +
mov ecx [ebp+arg_8] +
push ebp  +
mov ebp ebx +
cmp ecx 100h +
jnz loc_406A03  +
mov ecx 2 +
push ecx  +
call sub_4065D9  +
pop ebp  +
pop ecx  +
pop ebx  +
leave   +
retn 0Ch  +
***
xor eax eax +
jmp loc_403F58  +
***
push dword ptr [esi+4]  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
jmp loc_4032C4  +
***
lea eax [ebp-230h] +
push eax  +
push edi  +
call ds:GetConsoleMode  +
test eax eax +
jz loc_40365A  +
push 10000h  +
call sub_412F77  +
add eax 20h +
push eax  +
call sub_412951  +
pop ecx  +
push eax  +
call sub_413053  +
pop ecx  +
pop ecx  +
jmp loc_4036CB  +
***
push offset aAlinkui_dll  +
push offset aUnableToFindMe  +
lea eax [ebp-210h] +
push 106h  +
push eax  +
call sub_411B96  +
add esp 10h +
lea eax [ebp-210h] +
mov ecx edi +
push eax  +
mov eax dword_43104C +
sub esp 10h +
movsx eax word ptr [eax+78h] +
push ebx  +
push ebx  +
push eax  +
call sub_40E5BE  +
jmp loc_403717  +
***
push 0Ah  +
pop eax  +
jmp loc_4035E8  +
***
push esi  +
push 3017h  +
push offset byte_430030  +
call sub_40F72D  +
add esp 8 +
mov [ebp+var_B4] 42h +
lea eax [ebp+var_B0] +
xor edx edx +
mov ecx esi +
mov [ebp+var_B8] eax +
push edi  +
call sub_411DC3  +
cmp eax 0FFFFFFFFh +
jz loc_401332  +
test eax eax +
jz loc_401332  +
push offset dword_406C4C  +
push 0  +
push eax  +
call sub_412CE6  +
pop ecx  +
pop ecx  +
push eax  +
call sub_414D1B  +
mov esi eax +
mov [ebp+var_BC] esi +
pop ecx  +
pop ecx  +
test esi esi +
jnz loc_406C25  +
jmp loc_401332  +
and [ebp+var_C0] 0 +
test edi edi +
jz loc_406BE6  +
mov esi [ebp+var_C0] +
mov bl byte ptr [ebp+esi+var_24] +
mov cl bl +
shr cl 4 +
call sub_40F713  +
movzx eax ax +
lea ecx [ebp+var_B8] +
push eax  +
push 0  +
call sub_401AF0  +
and bl 0Fh +
mov cl bl +
call sub_40F713  +
movzx eax ax +
lea ecx [ebp+var_B8] +
push eax  +
push 1  +
call sub_401AF0  +
push 2  +
lea eax [ebp+var_C8] +
push eax  +
lea ecx [ebp+var_B8] +
call sub_401940  +
inc esi  +
cmp esi edi +
jb loc_406B8D  +
mov esi [ebp+var_BC] +
push 0  +
push 0  +
lea ecx [ebp+var_B8] +
call sub_401AF0  +
lea eax [ebp+var_B0] +
push eax  +
push offset aS  +
push dword_431050  +
call sub_414CC9  +
lea eax [ebp+var_B0] +
mov [ebp+var_B4] 42h +
add esp 0Ch +
mov [ebp+var_B8] eax +
push esi  +
push 20h  +
lea eax [ebp+var_24] +
push 1  +
push eax  +
call sub_415381  +
mov edi eax +
add esp 10h +
test edi edi +
jnz loc_406B7C  +
push esi  +
call sub_415120  +
pop ecx  +
jmp loc_401332  +
***
push eax  +
lea ecx [ebp+arg_8] +
call sub_411604  +
test ax ax +
jnz loc_406CA5  +
cmp [ebp+arg_8] 0 +
mov eax [ebp+arg_C] +
jz loc_406C75  +
test eax eax +
jz loc_406CED  +
push [ebp+arg_0]  +
add eax 0FFFFFFFCh +
push eax  +
push [ebp+arg_8]  +
call sub_4024D2  +
mov ecx [ebp+arg_8] +
mov eax [ebp+arg_C] +
test ecx ecx +
jz loc_406C92  +
test eax eax +
jz loc_406CED  +
add eax 0FFFFFFFCh +
push offset a___  +
push 4  +
lea eax [ecx+eax*2] +
push eax  +
call sub_4024D2  +
call ds:GetLastError  +
cmp eax 50h +
jnz loc_406CC5  +
cmp [ebp+arg_8] 0 +
jz loc_406CBC  +
cmp [ebp+arg_C] 0 +
jbe loc_406CED  +
push [ebp+arg_8]  +
push 0  +
push 42h  +
jmp loc_406CD8  +
cmp [ebp+arg_8] 0 +
jz loc_406CD1  +
cmp [ebp+arg_C] 0 +
jbe loc_406CED  +
push [ebp+arg_8]  +
push 0  +
push 3Eh  +
push nBufferMax  +
call sub_40E86E  +
add esp 10h +
xor al al +
jmp loc_402AFF  +
call sub_40E206  +
int 3  +
***
mov ecx nBufferMax +
push edi  +
push 2  +
call sub_40E548  +
jmp loc_4025BD  +
cmp di 0Ah +
jz loc_402621  +
add esi 2 +
movzx edi word ptr [esi] +
test di di +
jz loc_402621  +
jmp loc_406D06  +
test al 1 +
jnz loc_406D29  +
inc ecx  +
mov [ebp+var_C] ecx +
mov [edi] dx +
jmp loc_40170C  +
mov eax ebx +
mov [ebp+var_10] eax +
jmp loc_40170F  +
mov ebx [ebp+var_8] +
push 22h  +
pop ecx  +
cmp [ebx] cx +
jnz loc_40252B  +
cmp [edi-2] cx +
jnz loc_40252B  +
add ebx 2 +
add edi 0FFFFFFFEh +
mov [ebp+var_4] ebx +
mov [edi] ax +
jmp loc_40252E  +
push ebx  +
movzx eax ax +
push eax  +
push 1  +
push 3Fh  +
push nBufferMax  +
call sub_40E86E  +
add esp 14h +
jmp loc_40253A  +
mov ecx nBufferMax +
push edi  +
push 2  +
call sub_40E548  +
jmp loc_4025AB  +
***
mov ecx lpMem +
push ecx  +
push esi  +
mov eax [ecx+4] +
mov lpMem eax +
call ds:GetProcessHeap  +
jmp loc_403515  +
mov ecx nBufferMax +
push esi  +
push 2  +
call sub_40E548  +
jmp loc_403534  +
***
mov ecx ebx +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax si +
jnz loc_406DC7  +
sub ecx edx +
sar ecx 1 +
cmp ecx 1 +
jnz loc_406DF2  +
push ebx  +
push ecx  +
push 8  +
push nBufferMax  +
call sub_40E86E  +
add esp 10h +
jmp loc_406FD4  +
push ecx  +
push ecx  +
mov eax esp +
lea ecx [ebp-218h] +
lea edx [ebx+2] +
mov [eax] ecx +
lea ecx [ebp-450h] +
mov dword ptr [eax+4] 104h +
call sub_4028E8  +
push esi  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_401247  +
push eax  +
call sub_402AE1  +
test al al +
jz loc_406FE5  +
lea ecx [ebp-434h] +
call sub_401FCB  +
mov [ebp-424h] esi +
mov [ebp-440h] esi +
mov [ebp-43Ch] esi +
mov [ebp-438h] esi +
mov [ebp-4] esi +
lea edx [ebp-440h] +
push ecx  +
lea ecx [ebp-218h] +
call sub_411EA9  +
mov esi eax +
test esi esi +
js loc_406E85  +
lea eax [ebp-424h] +
push eax  +
lea eax [ebp-434h] +
push eax  +
lea ecx [ebp-440h] +
call sub_411F7D  +
mov esi eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-440h] +
call sub_401FCB  +
test esi esi +
js loc_406F1D  +
cmp esi 1 +
jz loc_406F1D  +
lea eax [ebp-218h] +
push eax  +
lea eax [ebp-428h] +
push eax  +
call sub_40FCDF  +
cmp eax 8007000Eh +
jnz loc_406ED0  +
mov ecx nBufferMax +
xor esi esi +
push esi  +
push 2  +
call sub_40E548  +
jmp loc_406FD4  +
cmp eax 1 +
jnz loc_406EF3  +
lea eax [ebp-218h] +
push eax  +
push 1  +
push 6  +
push nBufferMax  +
call sub_40E86E  +
add esp 10h +
jmp loc_406FD2  +
cmp dword ptr [ebp-434h] 0 +
jz loc_406F09  +
cmp dword ptr [ebp-430h] 0 +
jbe loc_407006  +
lea eax [edi+4] +
push eax  +
push dword ptr [ebp-434h]  +
call sub_4025C6  +
jmp loc_406FD2  +
cmp esi 80070002h +
jz loc_406F2D  +
cmp esi 80070003h +
jnz loc_406F83  +
push ecx  +
push ecx  +
mov eax esp +
lea ecx [ebp-420h] +
mov edx ebx +
mov [eax] ecx +
lea ecx [ebp-448h] +
mov dword ptr [eax+4] 104h +
call sub_4028E8  +
push 0  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_401247  +
push eax  +
call sub_402AE1  +
test al al +
jz loc_406F83  +
push ecx  +
push 0  +
xor edx edx +
lea ecx [ebp-420h] +
call sub_411DC3  +
cmp eax 0FFFFFFFFh +
jz loc_406F83  +
push eax  +
call ds:CloseHandle  +
xor esi esi +
jmp loc_406FE5  +
cmp esi 8007000Eh +
jz loc_406EBB  +
test esi esi +
jns loc_406FD2  +
cmp dword ptr [ebp-424h] 5 +
jnz loc_406FAC  +
lea eax [ebp-218h] +
push eax  +
push 1  +
push 40h  +
jmp loc_406EE0  +
mov ecx nBufferMax +
push esi  +
call sub_40E95E  +
push eax  +
lea eax [ebp-218h] +
push eax  +
push 1  +
push 7  +
push nBufferMax  +
call sub_40E86E  +
add esp 14h +
xor esi esi +
push ebx  +
push esi  +
mov [edi] esi +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
push 40h  +
pop ecx  +
jmp loc_402044  +
push offset sub_40FCA0  +
mov ecx esi +
call sub_41168E  +
push ecx  +
mov ecx esi +
call sub_40FCC1  +
jmp loc_402059  +
call sub_40E206  +
int 3  +
***
push 2Dh  +
pop ecx  +
cmp ax cx +
jz loc_4018E8  +
push ebx  +
lea ecx [esp+18h+arg_8] +
call sub_411604  +
cmp ax 2Fh +
jz loc_4018E8  +
push ebx  +
lea ecx [esp+18h+arg_8] +
call sub_411604  +
jmp loc_402B03  +
xor eax eax +
mov [esi] ax +
add esi 2 +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax bx +
jnz loc_407048  +
sub ecx edx +
sar ecx 1 +
neg ecx  +
sbb ecx ecx +
and ecx esi +
mov esi ecx +
jmp loc_402B31  +
push ecx  +
push ecx  +
mov eax esp +
lea ecx [esp+138h] +
push 1  +
push esi  +
mov [eax] ecx +
mov dword ptr [eax+4] 104h +
call sub_402AE1  +
jmp loc_40523E  +
lea ecx [esp+338h] +
jmp loc_40524B  +
lea ecx [esp+130h] +
call sub_403EFA  +
mov edx off_43001C +
mov ecx eax +
mov eax [edx] +
mov [eax+4] ecx +
test ecx ecx +
jnz loc_403FC1  +
jmp loc_40825A  +
push 4  +
lea ecx [esp+18h+arg_8] +
call sub_411604  +
test ax ax +
jnz loc_40178A  +
push ebx  +
push 3  +
lea ecx [esp+1Ch+arg_8] +
call sub_401AF0  +
test esi esi +
jz loc_4070E3  +
test edi edi +
jz loc_405277  +
push esi  +
push 1  +
push 8  +
pop eax  +
push eax  +
push offset byte_430030  +
call sub_40E86E  +
add esp 10h +
xor edi edi +
inc edi  +
mov [esp+18h] edi +
jmp loc_4017F8  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
jmp loc_4017D4  +
test esi esi +
jz loc_407123  +
test edi edi +
jz loc_405277  +
push 9  +
push offset aWin32res  +
push esi  +
call sub_416A42  +
add esp 0Ch +
test eax eax +
jnz loc_4071A4  +
push 9  +
lea ecx [esp+18h+arg_8] +
call sub_411604  +
test ax ax +
jnz loc_40714E  +
push ebx  +
push 8  +
pop eax  +
push eax  +
jmp loc_4070CE  +
push ecx  +
push ecx  +
mov eax esp +
lea ecx [esp+1Ch+arg_934] +
push 9  +
mov [eax] ecx +
lea ecx [esp+20h+arg_8] +
mov dword ptr [eax+4] 104h +
lea eax [esp+20h+arg_BC] +
push eax  +
call sub_40175D  +
push ebx  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_401247  +
push eax  +
call sub_402AE1  +
test al al +
jz loc_4017F4  +
lea ecx [esp+1Ch+arg_92C] +
call sub_403EFA  +
mov dword_4313F0 eax +
jmp loc_4017F4  +
test esi esi +
jz loc_4071B0  +
test edi edi +
jz loc_405277  +
push 0Ah  +
push offset aWin32icon  +
push esi  +
call sub_416A42  +
add esp 0Ch +
test eax eax +
jnz loc_407257  +
push 0Ah  +
lea ecx [esp+18h+arg_8] +
call sub_411604  +
lea ecx [esp+14h+arg_8] +
test ax ax +
jnz loc_4071E4  +
push ebx  +
push 9  +
jmp loc_4070D2  +
push 0Ah  +
lea eax [esp+18h+arg_CC] +
push eax  +
call sub_40175D  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_401247  +
push ecx  +
push ecx  +
mov eax esp +
lea ecx [esp+24h+arg_51C] +
push 0Ah  +
mov [eax] ecx +
lea ecx [esp+28h+arg_0] +
mov dword ptr [eax+4] 104h +
lea eax [esp+28h+arg_104] +
push eax  +
call sub_40175D  +
cmp [eax] ebx +
jz loc_407231  +
cmp [eax+4] ebx +
jbe loc_405277  +
push ebx  +
push dword ptr [eax]  +
call sub_402AE1  +
test al al +
jz loc_4017F4  +
lea ecx [esp+1Ch+arg_51C] +
call sub_403EFA  +
mov dword_4312A0 eax +
jmp loc_4017F4  +
test esi esi +
jz loc_407263  +
test edi edi +
jz loc_405277  +
push 9  +
push offset aTemplate  +
push esi  +
call sub_416A42  +
add esp 0Ch +
test eax eax +
jnz loc_4072E1  +
push 9  +
lea ecx [esp+18h+arg_8] +
call sub_411604  +
test ax ax +
jz loc_407147  +
push ecx  +
push ecx  +
mov eax esp +
lea ecx [esp+1Ch+arg_72C] +
push 9  +
mov [eax] ecx +
lea ecx [esp+20h+arg_8] +
mov dword ptr [eax+4] 104h +
lea eax [esp+20h+arg_74] +
push eax  +
call sub_40175D  +
push ebx  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_401247  +
push eax  +
call sub_402AE1  +
test al al +
jz loc_4017F4  +
lea ecx [esp+1Ch+arg_724] +
call sub_403EFA  +
mov dword_431298 eax +
jmp loc_4017F4  +
test esi esi +
jz loc_4072ED  +
test edi edi +
jz loc_405277  +
push 6  +
push offset aEmbed  +
push esi  +
call sub_416A42  +
add esp 0Ch +
neg eax  +
sbb al al +
add al 1 +
mov [esp+14h+arg_0] eax +
jnz loc_40820A  +
test esi esi +
jz loc_407319  +
test edi edi +
jz loc_405277  +
push 0Eh  +
push offset aEmbedresource  +
push esi  +
call sub_416A42  +
add esp 0Ch +
test eax eax +
jz loc_408206  +
test esi esi +
jz loc_40733D  +
test edi edi +
jz loc_405277  +
push 5  +
push offset aLink  +
push esi  +
call sub_416A42  +
add esp 0Ch +
neg eax  +
sbb al al +
add al 1 +
mov [esp+14h+arg_0] eax +
jnz loc_408196  +
test esi esi +
jz loc_407369  +
test edi edi +
jz loc_405277  +
push 0Dh  +
push offset aLinkresource  +
push esi  +
call sub_416A42  +
add esp 0Ch +
test eax eax +
jz loc_408192  +
test esi esi +
jz loc_40738D  +
test edi edi +
jz loc_405277  +
push 2  +
push offset aE  +
push esi  +
call sub_416A42  +
add esp 0Ch +
neg eax  +
sbb al al +
add al 1 +
mov [esp+14h+arg_0] eax +
jnz loc_408059  +
test esi esi +
jz loc_4073B9  +
test edi edi +
jz loc_405277  +
push 9  +
push offset aEvidence  +
push esi  +
call sub_416A42  +
add esp 0Ch +
test eax eax +
jz loc_408059  +
test esi esi +
jz loc_4073DD  +
test edi edi +
jz loc_405277  +
push 5  +
push offset aBase  +
push esi  +
call sub_416A42  +
add esp 0Ch +
neg eax  +
sbb al al +
add al 1 +
mov [esp+14h+arg_0] eax +
jnz loc_407F41  +
test esi esi +
jz loc_405197  +
test edi edi +
jnz loc_405197  +
jmp loc_405277  +
add esp 0Ch +
neg eax  +
sbb al al +
add al 1 +
mov [esp+1Ch] eax +
jnz loc_407E8B  +
test esi esi +
jz loc_407431  +
test edi edi +
jz loc_405277  +
push 7  +
push offset aTarget  +
push esi  +
call sub_416A42  +
add esp 0Ch +
test eax eax +
jz loc_407E87  +
test esi esi +
jz loc_407455  +
test edi edi +
jz loc_405277  +
push 5  +
push offset aMain  +
push esi  +
call sub_416A42  +
add esp 0Ch +
test eax eax +
jnz loc_4074C5  +
push 5  +
lea eax [esp+20h+arg_DC] +
push eax  +
lea ecx [esp+24h+arg_0] +
call sub_40175D  +
mov ecx [eax] +
test ecx ecx +
jz loc_40748B  +
cmp [eax+4] ebx +
jbe loc_405277  +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax bx +
jnz loc_40748E  +
sub ecx edx +
sar ecx 1 +
lea ecx [esp+1Ch+arg_0] +
jnz loc_4051F2  +
push ebx  +
push 4  +
call sub_401AF0  +
test esi esi +
jz loc_4074BB  +
test edi edi +
jz loc_405277  +
push esi  +
push 1  +
push 0Ah  +
jmp loc_4070EA  +
test esi esi +
jz loc_4074D1  +
test edi edi +
jz loc_405277  +
push 9  +
push offset aPlatform  +
push esi  +
call sub_416A42  +
add esp 0Ch +
test eax eax +
jnz loc_407693  +
push 9  +
lea eax [esp+20h+arg_FC] +
push eax  +
lea ecx [esp+24h+arg_0] +
call sub_40175D  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_401247  +
mov [esp+24h+var_4] eax +
cmp [eax] bx +
jnz loc_40751A  +
push ebx  +
push 8  +
pop eax  +
push eax  +
lea ecx [esp+2Ch] +
jmp loc_4074AA  +
push offset aAnycpu  +
push eax  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_407553  +
xor edx edx +
inc edx  +
mov dword_430010 edx +
mov dword_43000C edx +
mov dword_433AEC 105h +
mov dword_433AE8 14Ch +
jmp loc_4017F4  +
push offset aAnycpu32bitpre  +
push [esp+28h+var_4]  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40757D  +
mov dword_430010 20003h +
mov dword_43000C 11h +
jmp loc_40753A  +
push offset aX86  +
push [esp+28h+var_4]  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_4075A0  +
push 3  +
pop eax  +
mov dword_430010 eax +
mov dword_43000C eax +
jmp loc_40753A  +
push offset aItanium  +
push [esp+28h+var_4]  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_4075E1  +
mov dword_430010 1 +
mov dword_433AEC 202h +
mov dword_43000C 5 +
mov dword_433AE8 200h +
jmp loc_4017F4  +
push offset aX64  +
push [esp+28h+var_4]  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_407622  +
mov dword_430010 1 +
mov dword_433AEC 402h +
mov dword_43000C 5 +
mov dword_433AE8 8664h +
jmp loc_4017F4  +
push offset aArm  +
push [esp+28h+var_4]  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40765E  +
xor edx edx +
mov dword_433AEC 801h +
inc edx  +
mov dword_433AE8 1C4h +
mov dword_430010 edx +
mov dword_43000C edx +
jmp loc_4017F4  +
push ebx  +
push 8  +
pop eax  +
push eax  +
lea ecx [esp+2Ch] +
call sub_401AF0  +
test esi esi +
jz loc_407678  +
test edi edi +
jz loc_405277  +
push [esp+24h+var_4]  +
push esi  +
push 1  +
push 0Ch  +
push offset byte_430030  +
call sub_40E86E  +
add esp 14h +
jmp loc_4070F7  +
test esi esi +
jz loc_40769F  +
test edi edi +
jz loc_405277  +
push 11h  +
push offset aSubsystemversi  +
push esi  +
call sub_416A42  +
add esp 0Ch +
test eax eax +
jnz loc_4077AA  +
push 11h  +
lea eax [esp+20h+arg_8C] +
push eax  +
lea ecx [esp+24h+arg_0] +
call sub_40175D  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_401247  +
mov [esp+24h+arg_0] eax +
cmp [eax] bx +
jnz loc_4076E5  +
push ebx  +
push 10h  +
jmp loc_407514  +
mov [esp+24h+var_8] ebx +
mov [esp+24h+arg_C] eax +
call sub_416890  +
mov [eax] ebx +
lea eax [esp+24h+arg_C] +
push eax  +
push [esp+28h+arg_C]  +
call sub_41068E  +
mov [esp+24h+var_4] eax +
call sub_416890  +
cmp dword ptr [eax] 22h +
mov eax [esp+24h+arg_C] +
jz loc_407730  +
cmp word ptr [eax] 2Eh +
jnz loc_407730  +
lea ecx [esp+24h+arg_C] +
add eax 2 +
push ecx  +
push eax  +
call sub_41068E  +
mov [esp+24h+var_8] eax +
mov eax [esp+24h+arg_C] +
cmp [eax] bx +
jnz loc_40775D  +
call sub_416890  +
cmp dword ptr [eax] 22h +
jz loc_40775D  +
mov ecx 0FFFFh +
cmp [esp+24h+var_4] ecx +
jg loc_40775D  +
mov eax [esp+24h+var_8] +
cmp eax ecx +
jg loc_40775D  +
mov edi [esp+24h+var_C] +
mov byte ptr [esp+24h+arg_8+3] 1 +
jmp loc_407796  +
push ebx  +
push 10h  +
lea ecx [esp+2Ch] +
call sub_401AF0  +
test esi esi +
jz loc_407775  +
test edi edi +
jz loc_405277  +
push [esp+24h+arg_0]  +
push esi  +
push 1  +
push 0Ch  +
push offset byte_430030  +
call sub_40E86E  +
mov eax [esp+38h+var_8] +
xor edi edi +
add esp 14h +
inc edi  +
mov [esp+24h+var_C] edi +
mov ecx [esp+24h+var_4] +
mov dword_4349D8 ecx +
mov dword_4349DC eax +
jmp loc_4017F8  +
test esi esi +
jz loc_4077B6  +
test edi edi +
jz loc_405277  +
mov edx esi +
lea ecx [edx+2] +
mov ax [edx] +
add edx 2 +
cmp ax bx +
jnz loc_4077BB  +
sub edx ecx +
mov [esp+1Ch+arg_C] ebx +
sar edx 1 +
mov eax offset dword_4041D4 +
mov [esp+1Ch] edx +
mov ecx ebx +
mov [esp+1Ch+arg_8] eax +
test byte ptr [eax+12h] 40h +
jnz loc_407916  +
cmp [eax] ebx +
jz loc_407853  +
mov ecx [eax] +
lea eax [ecx+2] +
mov [esp+20h] eax +
mov ax [ecx] +
add ecx 2 +
cmp ax bx +
jnz loc_4077F4  +
sub ecx [esp+20h] +
sar ecx 1 +
mov [esp+20h] ecx +
cmp edx ecx +
jb loc_40784F  +
test esi esi +
jz loc_407819  +
test edi edi +
jz loc_405277  +
mov eax [esp+1Ch+arg_8] +
push ecx  +
push esi  +
push dword ptr [eax]  +
call sub_416A42  +
add esp 0Ch +
test eax eax +
jnz loc_40784B  +
mov edi [esp+20h] +
lea ecx [esp+1Ch+arg_0] +
push edi  +
call sub_411627  +
push 40h  +
pop ecx  +
cmp ax cx +
jb loc_4078BA  +
mov edi [esp+1Ch+arg_4] +
mov esi [esp+1Ch+arg_0] +
mov edx [esp+1Ch] +
mov eax [esp+1Ch+arg_8] +
cmp [eax+4] ebx +
jz loc_407912  +
mov ecx [eax+4] +
lea eax [ecx+2] +
mov [esp+20h] eax +
mov ax [ecx] +
add ecx 2 +
cmp ax bx +
jnz loc_407866  +
sub ecx [esp+20h] +
sar ecx 1 +
mov [esp+20h] ecx +
cmp edx ecx +
jb loc_40790E  +
test esi esi +
jz loc_40788F  +
test edi edi +
jz loc_405277  +
mov eax [esp+1Ch+arg_8] +
push ecx  +
push esi  +
push dword ptr [eax+4]  +
call sub_416A42  +
add esp 0Ch +
test eax eax +
jnz loc_40790E  +
mov edi [esp+20h] +
lea ecx [esp+1Ch+arg_0] +
push edi  +
call sub_411627  +
push 40h  +
pop ecx  +
cmp ax cx +
jnb loc_407906  +
mov eax [esp+1Ch+arg_8] +
push 0Bh  +
pop edx  +
cmp [eax+10h] dx +
jnz loc_407936  +
mov ecx [esp+1Ch] +
cmp ecx edi +
jz loc_407A66  +
lea eax [edi+1] +
cmp ecx eax +
jnz loc_407906  +
push edi  +
lea ecx [esp+20h+arg_0] +
call sub_411627  +
push 2Dh  +
pop ecx  +
cmp ax cx +
jz loc_407A2B  +
push edi  +
lea ecx [esp+20h+arg_0] +
call sub_411627  +
push 2Bh  +
pop ecx  +
cmp ax cx +
jz loc_407A2B  +
mov edi [esp+1Ch+arg_4] +
mov esi [esp+1Ch+arg_0] +
mov eax [esp+1Ch+arg_8] +
mov ecx [esp+1Ch+arg_C] +
add eax 18h +
inc ecx  +
mov [esp+1Ch+arg_C] ecx +
mov [esp+1Ch+arg_8] eax +
cmp eax offset off_4043B4 +
jge loc_407BE5  +
mov edx [esp+1Ch] +
jmp loc_4077DD  +
lea eax [edi+1] +
cmp [esp+1Ch] eax +
jbe loc_407B9B  +
push edi  +
lea ecx [esp+20h+arg_0] +
call sub_411627  +
cmp ax 3Ah +
jnz loc_407906  +
imul eax [esp+1Ch+arg_C] +
mov edi [esp+1Ch+arg_4] +
mov esi [esp+1Ch+arg_0] +
push 8  +
pop ecx  +
mov [esp+1Ch] eax +
push 1  +
cmp ds:word_4041E4[eax] cx +
lea ecx [esp+20h+arg_0] +
jnz loc_407A80  +
lea eax [esp+20h+arg_54] +
push eax  +
push dword ptr [esp+28h]  +
lea eax [esp+28h+arg_9C] +
push eax  +
call sub_40175D  +
mov ecx eax +
call sub_40175D  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_401247  +
mov ecx eax +
mov eax [esp+24h+var_8] +
mov [esp+24h+var_4] ecx +
test ds:byte_4041E6[eax] 10h +
jz loc_4079DE  +
push ecx  +
push ecx  +
mov eax esp +
lea edx [esp+2Ch+arg_B2C] +
push ebx  +
push ecx  +
mov [eax] edx +
mov dword ptr [eax+4] 104h +
call sub_402AE1  +
lea ecx [esp+24h+arg_B2C] +
test al al +
jnz loc_4079DE  +
mov ecx [esp+24h+var_4] +
push 8  +
pop eax  +
push ecx  +
mov word ptr [esp+28h+arg_2C] ax +
call ds:SysAllocString  +
mov ecx [esp+24h+arg_4] +
lea edx [esp+24h+arg_2C] +
mov [esp+24h+arg_34] eax +
mov eax [esp+24h+var_8] +
shl ecx 4 +
add ecx offset word_4312B0 +
mov al ds:byte_4041E6[eax] +
shr al 2 +
and al 1 +
movzx eax al +
push eax  +
call sub_410CD4  +
test al al +
jnz loc_407B69  +
lea eax [esp+24h+arg_2C] +
jmp loc_408287  +
mov esi [esp+1Ch+arg_C] +
lea ecx [esp+1Ch+arg_0] +
push 0Bh  +
shl esi 4 +
pop edx  +
push edi  +
mov word_4312B0[esi] dx +
call sub_411627  +
push 2Bh  +
xor ecx ecx +
pop edx  +
cmp ax dx +
setnz cl  +
dec ecx  +
mov word_4312B8[esi] cx +
mov edi [esp+1Ch+arg_4] +
mov esi [esp+1Ch+arg_0] +
jmp loc_407BE5  +
mov eax [esp+1Ch+arg_C] +
shl eax 4 +
or ecx 0FFFFFFFFh +
mov word_4312B0[eax] dx +
mov word_4312B8[eax] cx +
jmp loc_407A59  +
lea eax [esp+20h+arg_D4] +
mov [esp+20h+arg_18] ebx +
push eax  +
push dword ptr [esp+28h]  +
lea eax [esp+28h+arg_AC] +
push eax  +
call sub_40175D  +
mov ecx eax +
call sub_40175D  +
push 10h  +
lea ecx [esp+20h+arg_18] +
push ecx  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_401247  +
push eax  +
call sub_416FA7  +
mov ecx eax +
add esp 0Ch +
mov eax [esp+24h+arg_10] +
cmp [eax] bx +
jz loc_407B2C  +
push ebx  +
push [esp+28h+var_4]  +
lea ecx [esp+2Ch] +
call sub_401AF0  +
push 1  +
lea eax [esp+28h+arg_DC] +
push eax  +
push [esp+2Ch+var_4]  +
lea eax [esp+30h+arg_B4] +
push eax  +
lea ecx [esp+34h] +
call sub_40175D  +
mov ecx eax +
call sub_40175D  +
cmp [eax] ebx +
jz loc_407B0A  +
cmp [eax+4] ebx +
jbe loc_405277  +
test esi esi +
jz loc_407B16  +
test edi edi +
jz loc_405277  +
push dword ptr [eax]  +
push esi  +
push 1  +
push 0Ch  +
push offset byte_430030  +
call sub_40E86E  +
add esp 14h +
jmp loc_407B69  +
push 13h  +
pop eax  +
mov word ptr [esp+24h+pvarg.anonymous_0] ax +
lea edx [esp+24h+pvarg] +
mov eax [esp+24h+var_8] +
mov dword ptr [esp+24h+pvarg.anonymous_0+8] ecx +
mov ecx [esp+24h+arg_4] +
shl ecx 4 +
mov al ds:byte_4041E6[eax] +
add ecx offset word_4312B0 +
shr al 2 +
and al 1 +
movzx eax al +
push eax  +
call sub_410CD4  +
test al al +
jz loc_408283  +
mov eax [esp+24h+var_8] +
test ds:byte_4041E6[eax] 20h +
jz loc_407BE5  +
test esi esi +
jz loc_407B82  +
test edi edi +
jz loc_405277  +
push offset aNothing  +
push esi  +
push 2  +
push 30h  +
push offset byte_430030  +
call sub_40E86E  +
add esp 14h +
jmp loc_407BE5  +
imul eax [esp+1Ch+arg_C] +
mov esi [esp+1Ch+arg_0] +
mov edi [esp+1Ch+arg_4] +
push 8  +
pop ecx  +
cmp ds:word_4041E4[eax] cx +
jnz loc_407BC7  +
test esi esi +
jz loc_407BC0  +
test edi edi +
jz loc_405277  +
push esi  +
push 1  +
push 0Ah  +
jmp loc_407BD8  +
test esi esi +
jz loc_407BD3  +
test edi edi +
jz loc_405277  +
push esi  +
push 1  +
push 3  +
push offset byte_430030  +
call sub_40E86E  +
add esp 10h +
cmp [esp+1Ch+arg_C] 14h +
jnz loc_4017F4  +
test esi esi +
jz loc_407BFC  +
test edi edi +
jz loc_405277  +
push offset aOut_0  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407E57  +
test esi esi +
jz loc_407C1D  +
test edi edi +
jz loc_405277  +
push offset aWin32res_0  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407E57  +
test esi esi +
jz loc_407C3E  +
test edi edi +
jz loc_405277  +
push offset aWin32icon_0  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407E57  +
test esi esi +
jz loc_407C5F  +
test edi edi +
jz loc_405277  +
push offset aTemplate_0  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407E57  +
test esi esi +
jz loc_407C80  +
test edi edi +
jz loc_405277  +
push offset aEmbed_0  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407E57  +
test esi esi +
jz loc_407CA1  +
test edi edi +
jz loc_405277  +
push offset aEmbedresourc_0  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407E57  +
test esi esi +
jz loc_407CC2  +
test edi edi +
jz loc_405277  +
push offset aLink_0  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407E57  +
test esi esi +
jz loc_407CE3  +
test edi edi +
jz loc_405277  +
push offset aLinkresource_0  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407E57  +
test esi esi +
jz loc_407D04  +
test edi edi +
jz loc_405277  +
push offset dword_4085E8  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407E57  +
test esi esi +
jz loc_407D25  +
test edi edi +
jz loc_405277  +
push offset aEvidence_0  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407E57  +
test esi esi +
jz loc_407D46  +
test edi edi +
jz loc_405277  +
push offset aBase_0  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407E44  +
test esi esi +
jz loc_407D67  +
test edi edi +
jz loc_405277  +
push offset aBaseaddress_0  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407E44  +
test esi esi +
jz loc_407D88  +
test edi edi +
jz loc_405277  +
push offset aT_0  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407E44  +
test esi esi +
jz loc_407DA9  +
test edi edi +
jz loc_405277  +
push offset aTarget_0  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407E44  +
test esi esi +
jz loc_407DCA  +
test edi edi +
jz loc_405277  +
push offset aMain_0  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407E44  +
test esi esi +
jz loc_407DE7  +
test edi edi +
jz loc_405277  +
push offset aSubsystemver_0  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407E44  +
push ebx  +
lea ecx [esp+20h+arg_0] +
call sub_411604  +
test ax ax +
jnz loc_407E31  +
mov esi [esp+1Ch+var_10] +
mov eax [esp+1Ch+var_C] +
cmp [eax+esi*8] ebx +
jz loc_407E1E  +
cmp [eax+esi*8+4] ebx +
jbe loc_405277  +
push dword ptr [eax+esi*8]  +
push 1  +
push 0Dh  +
push offset byte_430030  +
call sub_40E86E  +
jmp loc_407E78  +
test esi esi +
jz loc_407E3D  +
test edi edi +
jz loc_405277  +
push esi  +
push 1  +
push 0Dh  +
jmp loc_407E6A  +
test esi esi +
jz loc_407E50  +
test edi edi +
jz loc_405277  +
push esi  +
push 1  +
push 0Ah  +
jmp loc_407E6A  +
test esi esi +
jz loc_407E63  +
test edi edi +
jz loc_405277  +
push esi  +
push 1  +
push 8  +
pop eax  +
push eax  +
push offset byte_430030  +
call sub_40E86E  +
mov esi [esp+2Ch+var_10] +
xor edi edi +
add esp 10h +
inc edi  +
mov [esp+1Ch+var_4] edi +
jmp loc_4017FC  +
mov eax [esp+1Ch] +
xor ecx ecx +
test al al +
lea eax [esp+1Ch+arg_F4] +
setz cl  +
dec ecx  +
and ecx 0FFFFFFFBh +
add ecx 7 +
push ecx  +
mov [esp+20h] ecx +
lea ecx [esp+20h+arg_0] +
push eax  +
call sub_40175D  +
jmp loc_405281  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407F32  +
push offset aLibrary  +
push dword ptr [esp+24h]  +
call sub_4145B0  +
jmp loc_4052A8  +
push offset aWin  +
push dword ptr [esp+24h]  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407F23  +
push offset aWinexe  +
push dword ptr [esp+24h]  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_407F23  +
push offset aAppcontainerex  +
push dword ptr [esp+24h]  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_407F18  +
mov dword_431288 3 +
jmp loc_4017F4  +
mov eax [esp+1Ch] +
push ebx  +
dec eax  +
jmp loc_407662  +
mov dword_431288 2 +
jmp loc_4017F4  +
mov dword_431288 ebx +
jmp loc_4017F4  +
mov eax [esp+1Ch] +
xor ecx ecx +
test al al +
lea eax [esp+1Ch+arg_CC] +
setz cl  +
dec ecx  +
and ecx 0FFFFFFF9h +
add ecx 0Ch +
push ecx  +
mov [esp+20h] ecx +
lea ecx [esp+20h+arg_0] +
push eax  +
call sub_40175D  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_401247  +
lea edx [esp+24h+arg_14] +
mov ecx eax +
call sub_40FD82  +
add eax 8000h +
mov ecx edx +
adc ecx ebx +
and eax 0FFFF0000h +
mov [esp+24h+var_4] eax +
or eax 0FFFFFFFFh +
and ecx eax +
mov eax [esp+24h+arg_14] +
mov [esp+24h+arg_0] ecx +
cmp [eax] bx +
jnz loc_408003  +
push [esp+24h+var_8]  +
lea eax [esp+28h+arg_54] +
push eax  +
lea ecx [esp+2Ch] +
call sub_40175D  +
cmp [eax] ebx +
jz loc_407FC0  +
cmp [eax+4] ebx +
jbe loc_405277  +
mov ecx [esp+24h+arg_14] +
cmp ecx [eax] +
jnz loc_407FD3  +
mov eax [esp+24h+var_8] +
push ebx  +
dec eax  +
jmp loc_407513  +
cmp [ecx] bx +
jnz loc_408003  +
mov eax [esp+24h+var_4] +
or eax [esp+24h+arg_0] +
jnz loc_407FEC  +
call sub_416890  +
cmp dword ptr [eax] 22h +
jz loc_408003  +
mov eax [esp+24h+var_4] +
mov dword_431290 eax +
mov eax [esp+24h+arg_0] +
mov dword_431294 eax +
jmp loc_4017F4  +
mov eax [esp+24h+var_8] +
lea ecx [esp+24h] +
push ebx  +
dec eax  +
push eax  +
call sub_401AF0  +
push 1  +
lea eax [esp+28h+arg_5C] +
push eax  +
push [esp+2Ch+var_8]  +
lea eax [esp+30h+arg_6C] +
push eax  +
lea ecx [esp+34h] +
call sub_40175D  +
mov ecx eax +
call sub_40175D  +
cmp [eax] ebx +
jz loc_408046  +
cmp [eax+4] ebx +
jbe loc_405277  +
test esi esi +
jz loc_408052  +
test edi edi +
jz loc_405277  +
push dword ptr [eax]  +
jmp loc_40767C  +
xor eax eax +
lea ecx [esp+14h+arg_8] +
cmp byte ptr [esp+14h+arg_0] al +
setz al  +
dec eax  +
and eax 0FFFFFFF9h +
add eax 9 +
push eax  +
mov [esp+18h+arg_0] eax +
lea eax [esp+18h+arg_8C] +
push eax  +
call sub_40175D  +
mov ecx [eax] +
test ecx ecx +
jz loc_40808E  +
cmp [eax+4] ebx +
jbe loc_405277  +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax bx +
jnz loc_408091  +
sub ecx edx +
sar ecx 1 +
jnz loc_4080AD  +
mov eax [esp+14h+arg_0] +
push ebx  +
dec eax  +
jmp loc_40714B  +
push ecx  +
push ecx  +
mov eax esp +
lea ecx [esp+1Ch+arg_F4C] +
mov [eax] ecx +
lea ecx [esp+1Ch+arg_8] +
mov dword ptr [eax+4] 104h +
mov eax [esp+1Ch+arg_0] +
push eax  +
lea eax [esp+20h+arg_9C] +
push eax  +
call sub_40175D  +
push ebx  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_401247  +
push eax  +
call sub_402AE1  +
test al al +
jz loc_4017F4  +
push 10h  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_408114  +
mov [esi+0Ch] ebx +
mov [esi+4] ebx +
mov [esi] ebx +
mov [esi+8] bx +
jmp loc_408116  +
mov esi ebx +
test esi esi +
jz loc_40525C  +
lea ecx [esp+1Ch+arg_F44] +
mov byte ptr [esi+9] 1 +
mov [esi+0Ch] ebx +
call sub_403EFA  +
mov [esi+4] eax +
test eax eax +
jz loc_408298  +
mov ecx [esp+44h] +
call sub_403EFA  +
mov [esi] eax +
test eax eax +
jz loc_408298  +
push 8  +
pop eax  +
push eax  +
push ebx  +
mov [esi+8] bl +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
test eax eax +
jz loc_40816F  +
mov [eax] ebx +
mov [eax+4] ebx +
jmp loc_408171  +
mov eax ebx +
mov ecx off_430014 +
mov [ecx] eax +
test eax eax +
jz loc_408298  +
mov [eax] esi +
mov eax [ecx] +
add eax 4 +
mov off_430014 eax +
jmp loc_4017F4  +
mov eax [esp+14h+arg_0] +
xor ecx ecx +
test al al +
setz cl  +
xor dl dl +
lea ecx ds:5[ecx*8] +
push edi  +
push esi  +
call loc_410341  +
mov esi eax +
test esi esi +
jz loc_4070F7  +
push offset sub_416D70  +
push dword ptr [esi]  +
lea ecx [esp+4Ch] +
call sub_4116CB  +
mov edi eax +
mov [esp+1Ch+var_4] edi +
cmp edi 8007000Eh +
jnz loc_40821C  +
push ebx  +
push 2  +
mov ecx offset byte_430030 +
call sub_40E548  +
jmp loc_4081F9  +
push dword ptr [esi]  +
push 1  +
push 2Ch  +
pop eax  +
push eax  +
push offset byte_430030  +
call sub_40E86E  +
add esp 10h +
push ecx  +
mov ecx esi +
call sub_410624  +
jmp loc_4017F8  +
mov eax [esp+14h+arg_0] +
xor ecx ecx +
mov dl 1 +
test al al +
setz cl  +
lea ecx ds:6[ecx*8] +
jmp loc_4081A6  +
cmp edi 1 +
jz loc_4081E4  +
push 8  +
pop eax  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov ecx eax +
test ecx ecx +
jz loc_408240  +
mov [ecx] ebx +
mov [ecx+4] ebx +
jmp loc_408242  +
mov ecx ebx +
mov eax off_430014 +
mov [eax] ecx +
mov [ecx] esi +
mov eax [eax] +
add eax 4 +
mov off_430014 eax +
jmp loc_4017F8  +
mov esi [edx] +
test esi esi +
jz loc_40827C  +
mov ecx esi +
call sub_4032A1  +
push esi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov edx off_43001C +
mov [edx] ebx +
jmp loc_40525C  +
lea eax [esp+24h+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax 8007000Eh +
jmp loc_40837C  +
push ecx  +
mov ecx esi +
call sub_410624  +
jmp loc_40525C  +
cmp [esp+4+arg_2B] bl +
jnz loc_403826  +
cmp dword_433AE8 1C4h +
jz loc_4082D9  +
cmp dword_431288 3 +
jz loc_4082D9  +
mov dword_4349D8 4 +
mov dword_4349DC ebx +
jmp loc_403826  +
mov dword_4349D8 6 +
mov dword_4349DC 2 +
jmp loc_403826  +
push 1  +
push 10h  +
mov ecx edi +
call sub_40E548  +
jmp loc_403863  +
cmp dword_430018 ebx +
jnz loc_408316  +
cmp dword_430020 ebx +
jz loc_40387B  +
push 1  +
push 11h  +
mov ecx edi +
call sub_40E548  +
jmp loc_40387B  +
push 1  +
push 22h  +
jmp loc_408330  +
push 1  +
push 23h  +
mov ecx edi +
call sub_40E548  +
jmp loc_40522D  +
push 1  +
push 4Bh  +
mov ecx edi +
call sub_40E548  +
jmp loc_4038A0  +
push dword_4313F4  +
push dword ptr [esi+4]  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_4038E7  +
push dword_4313F4  +
push 1  +
push 29h  +
push edi  +
call sub_40E86E  +
add esp 10h +
jmp loc_4038BA  +
mov ebx eax +
jmp loc_4038BA  +
int 3  +
***
mov esi offset byte_430030 +
push edi  +
mov ecx esi +
call sub_40E95E  +
push eax  +
push ebx  +
push 0Eh  +
jmp loc_4086D7  +
test eax eax +
jz loc_40341A  +
mov ecx esi +
call ds:off_43520C  +
jmp loc_40373C  +
xor eax eax +
inc eax  +
jmp loc_40329A  +
call sub_40EC36  +
jmp loc_40378B  +
call sub_40FF38  +
mov [ebp+var_4] eax +
jmp loc_40341A  +
call esi  +
jmp loc_4032F3  +
call dword ptr [esi+0Ch]  +
jmp loc_40335A  +
test edi edi +
jmp loc_404E19  +
mov ecx edi +
call sub_410763  +
test eax eax +
jns loc_40341A  +
mov esi offset byte_430030 +
push edi  +
mov ecx esi +
call sub_40E95E  +
push eax  +
push ebx  +
push 4  +
push esi  +
call sub_40E86E  +
add esp 10h +
jmp loc_40341A  +
call esi  +
jmp loc_403478  +
call esi  +
jmp loc_403499  +
call esi  +
jmp loc_4031DB  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
jmp loc_40320A  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
jmp loc_403217  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
jmp loc_403224  +
mov eax [esi+4] +
mov dword_430018 eax +
mov ecx [esi] +
test ecx ecx +
jz loc_40874A  +
push ecx  +
call sub_410624  +
push esi  +
jmp loc_404E06  +
mov ecx 4000h +
cmp ax cx +
jnz loc_408793  +
mov edi [esi+8] +
test edi edi +
jz loc_408786  +
mov esi [edi+10h] +
push edi  +
mov [edi+10h] ebx +
call ds:VariantClear  +
push edi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov edi esi +
test esi esi +
jnz loc_408761  +
mov esi [ebp+pvarg] +
xor eax eax +
mov [esi+8] ebx +
mov [esi] ax +
jmp loc_403258  +
push esi  +
call ds:VariantClear  +
jmp loc_403258  +
cmp byte_431056 bl +
jz loc_4087AC  +
call sub_40FB0F  +
push dword_431050  +
call sub_415120  +
pop ecx  +
mov byte_431054 bl +
jmp loc_403284  +
***
call esi  +
jmp loc_402D17  +
mov esi offset byte_430030 +
push eax  +
mov ecx esi +
call sub_40E95E  +
push eax  +
push 0  +
push 4  +
push esi  +
call sub_40E86E  +
add esp 10h +
jmp loc_402D1F  +
push eax  +
push 0  +
push 4  +
push offset byte_430030  +
call sub_40E86E  +
add esp 10h +
xor eax eax +
jmp loc_402D22  +
***
mov esi [edi] +
lea eax [ebp+var_10] +
or [ebp+var_8] 0FFFFFFFFh +
push 13h  +
pop ebx  +
mov ecx [esi+18h] +
push eax  +
push offset dword_4088CC  +
push edi  +
mov word ptr [ebp+var_10] bx +
call ds:off_43520C  +
call dword ptr [esi+18h]  +
test eax eax +
js loc_408895  +
mov esi [edi] +
lea eax [ebp+var_10] +
and [ebp+var_8] 0 +
push eax  +
push offset dword_4088BC  +
mov ecx [esi+18h] +
push edi  +
mov word ptr [ebp+var_10] bx +
call ds:off_43520C  +
call dword ptr [esi+18h]  +
test eax eax +
js loc_408895  +
mov esi [edi] +
lea eax [ebp+var_10] +
or [ebp+var_8] 0FFFFFFFFh +
push eax  +
push offset dword_4088AC  +
mov ecx [esi+18h] +
push edi  +
mov word ptr [ebp+var_10] bx +
call ds:off_43520C  +
call dword ptr [esi+18h]  +
test eax eax +
js loc_408895  +
mov esi [edi] +
lea eax [ebp+var_10] +
push eax  +
push offset dword_40889C  +
push edi  +
mov ecx [esi+18h] +
mov word ptr [ebp+var_10] bx +
mov [ebp+var_8] 2 +
call ds:off_43520C  +
call dword ptr [esi+18h]  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
call dword ptr [esi+0Ch]  +
mov edi eax +
test edi edi +
js loc_403C94  +
mov eax [esp+8DCh+var_8C8] +
lea ecx [esp+8DCh+hObject] +
push ecx  +
xor ecx ecx +
push ecx  +
push [esp+8E4h+var_898]  +
mov esi [eax] +
push dword_4313F4  +
push eax  +
mov ecx [esi+14h] +
call ds:off_43520C  +
call dword ptr [esi+14h]  +
mov edi eax +
test edi edi +
js loc_403C94  +
push dword_433AE8  +
mov eax [esp+8F4h+var_8DC] +
push dword_43000C  +
push [esp+8F8h+var_8D8]  +
mov esi [eax] +
push [esp+8FCh+var_8D8]  +
push eax  +
mov esi [esi+0A0h] +
mov ecx esi +
call ds:off_43520C  +
call esi  +
mov edi eax +
test edi edi +
js loc_403C94  +
mov eax dword_43129C +
push 2Eh  +
pop ecx  +
push 2  +
pop esi  +
mov [esp+904h+nNumberOfBytesToWrite] esi +
test eax eax +
jnz loc_40507A  +
jmp loc_4089CA  +
mov [edx] ax +
add edx esi +
mov esi dword_43129C +
mov edi esi +
mov [esp+1Ch+arg_8] edi +
jmp loc_405094  +
mov esi dword_43129C +
mov edi eax +
mov edx esi +
mov [esp+1Ch+arg_8] eax +
jmp loc_405094  +
push esi  +
push offset aMain_0  +
push 1  +
push 0Ch  +
push offset byte_430030  +
call sub_40E86E  +
add esp 14h +
xor esi esi +
push dword_43129C  +
push esi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov dword_43129C esi +
mov [esp+1Ch] esi +
mov [esp+1Ch+arg_8] esi +
mov esi dword_431298 +
test esi esi +
jz loc_403B6C  +
mov edx [esp+1Ch+var_8] +
mov ecx [esp+1Ch+var_4] +
call sub_410DFF  +
mov edi eax +
test edi edi +
jns loc_403B6C  +
jmp loc_409152  +
call dword ptr [esi+10h]  +
jmp loc_403BD2  +
mov edi [esp+8F8h+var_8E4] +
lea eax [esp+8F8h+var_8BC] +
push eax  +
xor ecx ecx +
push ecx  +
push [esp+900h+var_8AC]  +
mov esi [edi] +
push [esp+904h+var_8E0]  +
mov [esp+908h+var_8BC] ecx +
push edi  +
mov ecx [esi+20h] +
call ds:off_43520C  +
call dword ptr [esi+20h]  +
jmp loc_403BF7  +
call dword ptr [esi+1Ch]  +
jmp loc_403C66  +
call esi  +
jmp loc_4050D4  +
cmp dword_430018 eax +
jnz loc_408AA8  +
push 1  +
push 10h  +
mov ecx offset byte_430030 +
call sub_40E548  +
jmp loc_403EE3  +
mov edi [esp+8F8h+var_8D8] +
push dword ptr [edi]  +
push 2  +
push 14h  +
push offset byte_430030  +
call sub_40E86E  +
mov ecx [esp+64h] +
add esp 10h +
test ecx ecx +
jz loc_403C9D  +
mov eax [ecx] +
push ecx  +
mov esi [eax+8] +
mov ecx esi +
call ds:off_43520C  +
call esi  +
xor eax eax +
mov [esp+8FCh+var_8A8] eax +
jmp loc_403C9D  +
mov eax [esp+910h+var_8D4] +
test eax eax +
jnz loc_403FD0  +
jmp loc_4050DD  +
call esi  +
jmp loc_4050DD  +
mov eax [ebx] +
lea ecx [esp+8DCh+var_8CC] +
push dword_433AEC  +
push ecx  +
mov esi [eax+114h] +
mov ecx esi +
call ds:off_43520C  +
mov ecx ebx +
call esi  +
mov edi eax +
test edi edi +
js loc_403C94  +
mov eax [ebx] +
lea ecx [esp+8E4h+var_888] +
push ecx  +
push [esp+8E8h+var_8D4]  +
mov esi [eax+6Ch] +
mov ecx esi +
call ds:off_43520C  +
mov ecx ebx +
call esi  +
mov edi eax +
test edi edi +
js loc_403C94  +
mov eax [ebx] +
lea ecx [esp+8ECh+var_888] +
push ecx  +
push [esp+8F0h+var_8DC]  +
mov esi [eax+70h] +
mov ecx esi +
call ds:off_43520C  +
mov ecx ebx +
call esi  +
mov edi eax +
test edi edi +
js loc_403C94  +
mov esi 104h +
lea eax [esp+8F4h+var_44C] +
push esi  +
push eax  +
push esi  +
lea eax [esp+900h+var_654] +
push eax  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push dword_4313F4  +
call sub_41706D  +
jmp loc_403FE3  +
call esi  +
jmp loc_40401F  +
mov ecx [esp-1Ch+arg_30] +
cmp ecx eax +
jz loc_408B5C  +
push 2Eh  +
pop edx  +
mov [ecx-2] dx +
cmp [esp-1Ch+arg_39] 0 +
push eax  +
push 1  +
jz loc_408B6A  +
push 27h  +
jmp loc_408B6C  +
push 24h  +
push offset byte_430030  +
call sub_40E86E  +
add esp 10h +
jmp loc_4050DD  +
call dword ptr [esi+5Ch]  +
jmp loc_404078  +
mov ecx ebx +
call esi  +
jmp loc_4050BC  +
mov esi [ebx] +
xor eax eax +
mov [esp-0Ch+arg_4C] eax +
lea eax [esp-0Ch+arg_4C] +
push eax  +
push 1  +
push [esp-4+arg_34]  +
mov ecx [esi+78h] +
push [esp+arg_60]  +
call ds:off_43520C  +
mov ecx ebx +
call dword ptr [esi+78h]  +
mov edi eax +
test edi edi +
js loc_403C94  +
push [esp+4+arg_24]  +
xor eax eax +
push eax  +
push [esp+0Ch+arg_3C]  +
call sub_40125C  +
mov eax [ebx] +
lea ecx [esp+10h+arg_28] +
add esp 0Ch +
mov esi [eax+74h] +
push ecx  +
push [esp+8+arg_50]  +
mov ecx esi +
call ds:off_43520C  +
mov ecx ebx +
call esi  +
mov edi eax +
test edi edi +
js loc_403C94  +
mov esi [ebx] +
lea eax [esp+0Ch+arg_20] +
push eax  +
mov eax [esp+10h+arg_20] +
sub eax [esp+10h+arg_1C] +
mov ecx [esi+10h] +
push eax  +
push dword ptr [esp+18h]  +
call ds:off_43520C  +
mov ecx ebx +
call dword ptr [esi+10h]  +
mov edi eax +
test edi edi +
js loc_403C94  +
push [esp+18h+nNumberOfBytesToRead]  +
mov eax [ebx] +
push [esp+1Ch+hFile]  +
push [esp+20h+var_8]  +
mov esi [eax+0FCh] +
mov ecx esi +
call ds:off_43520C  +
mov ecx ebx +
call esi  +
mov edi eax +
test edi edi +
jns loc_4040DD  +
jmp loc_403C94  +
mov edi [eax] +
push ecx  +
push dword ptr [edi+4]  +
call sub_401306  +
cmp byte ptr [edi+9] 0 +
jz loc_408D8E  +
mov eax [esp-0Ch+arg_44] +
lea edx [esp-0Ch+arg_24] +
xor ecx ecx +
add eax 7 +
push ecx  +
mov [esp-8+arg_24] ecx +
and eax 0FFFFFFF8h +
push ecx  +
mov ecx [edi+4] +
mov [edi+0Ch] eax +
call sub_411DC3  +
mov [esp-0Ch+arg_20] eax +
cmp eax 0FFFFFFFFh +
jnz loc_408CAE  +
call sub_40EB40  +
push eax  +
push dword ptr [edi+4]  +
push 1  +
push 16h  +
push offset byte_430030  +
call sub_40E86E  +
add esp 14h +
jmp loc_408DE3  +
mov eax [edi+0Ch] +
mov ecx [esp-0Ch+arg_24] +
add eax 4 +
mov esi [ebx] +
add eax ecx +
mov [esp-0Ch+arg_44] eax +
lea eax [esp-0Ch+arg_30] +
push eax  +
push 8  +
lea eax [ecx+4] +
mov ecx [esi+78h] +
push eax  +
push [esp+arg_68]  +
call ds:off_43520C  +
mov ecx ebx +
call dword ptr [esi+78h]  +
test eax eax +
jns loc_408D15  +
mov esi offset byte_430030 +
push eax  +
mov ecx esi +
call sub_40E95E  +
push eax  +
push dword ptr [edi+4]  +
push dword_4313F4  +
push 1  +
push 17h  +
push esi  +
call sub_40E8BD  +
mov esi [esp+1Ch+hFile] +
add esp 18h +
push esi  +
call ds:CloseHandle  +
jmp loc_408DE3  +
mov eax [esp+4+arg_20] +
mov ecx [esp+4+nNumberOfBytesToRead] +
mov esi [esp+4+hFile] +
mov [eax] ecx +
xor eax eax +
push eax  +
lea eax [esp+8+NumberOfBytesRead] +
push eax  +
mov eax [esp+0Ch+arg_20] +
push ecx  +
add eax 4 +
push eax  +
push esi  +
call ds:ReadFile  +
test eax eax +
jnz loc_408D5B  +
call sub_40EB40  +
push eax  +
push dword ptr [edi+4]  +
push 1  +
push 16h  +
push offset byte_430030  +
call sub_40E86E  +
add esp 14h +
jmp loc_408D09  +
push esi  +
call ds:CloseHandle  +
mov ecx [esp+4+arg_8] +
xor eax eax +
cmp [edi+8] al +
setz al  +
mov esi [ecx] +
inc eax  +
push eax  +
push dword ptr [edi+0Ch]  +
push dword ptr [edi]  +
push [esp+10h+arg_C]  +
push [esp+14h+arg_C]  +
push ecx  +
mov ecx [esi+40h] +
call ds:off_43520C  +
call dword ptr [esi+40h]  +
jmp loc_408DB7  +
mov ecx [esp-0Ch+arg_18] +
xor eax eax +
cmp [edi+8] al +
setz al  +
mov esi [ecx] +
inc eax  +
push eax  +
push dword ptr [edi]  +
push dword ptr [edi+0Ch]  +
push dword ptr [edi+4]  +
push [esp+4+arg_1C]  +
push ecx  +
mov ecx [esi+44h] +
call ds:off_43520C  +
call dword ptr [esi+44h]  +
mov esi eax +
test esi esi +
jns loc_408DE3  +
mov ecx esi +
call sub_410763  +
test eax eax +
jns loc_408DE3  +
push esi  +
mov esi offset byte_430030 +
mov ecx esi +
call sub_40E95E  +
push eax  +
push 1  +
push 13h  +
push esi  +
call sub_40E86E  +
add esp 10h +
mov eax [esp+0Ch+nNumberOfBytesToRead] +
mov eax [eax+4] +
jmp loc_4040E2  +
mov ecx ebx +
call esi  +
mov edi eax +
test edi edi +
js loc_403C94  +
mov eax [ebx] +
push dword_4313F4  +
push [esp+4+arg_8]  +
mov esi [eax+20h] +
mov ecx esi +
call ds:off_43520C  +
mov ecx ebx +
call esi  +
jmp loc_40410E  +
xor ecx ecx +
cmp [eax] cx +
jz loc_404125  +
push ecx  +
push eax  +
call sub_401306  +
mov eax [ebx] +
push dword_4313F0  +
push [esp+4+arg_8]  +
mov esi [eax+28h] +
mov ecx esi +
call ds:off_43520C  +
mov ecx ebx +
call esi  +
jmp loc_403DF3  +
push ecx  +
push eax  +
call sub_401306  +
mov eax dword_4312A0 +
jmp loc_404140  +
call dword ptr [esi+54h]  +
jmp loc_403CEE  +
mov ecx edi +
call sub_410763  +
test eax eax +
jns loc_408E94  +
mov esi offset byte_430030 +
push edi  +
mov ecx esi +
call sub_40E95E  +
push eax  +
push dword_4313F4  +
push 1  +
push 1Fh  +
push esi  +
call sub_40E86E  +
add esp 14h +
xor eax eax +
mov edi eax +
jmp loc_403DD0  +
call sub_40EB40  +
push eax  +
push dword_4313F4  +
push 1  +
push 1Fh  +
push offset byte_430030  +
jmp loc_408E8C  +
call sub_40EB40  +
push eax  +
push dword_4313F4  +
push 1  +
push 1Fh  +
push offset byte_430030  +
call sub_40E86E  +
add esp 14h +
mov edi esi +
jmp loc_403DD0  +
call sub_40EB40  +
push eax  +
push dword_4313F4  +
push dword_4313F0  +
push 1  +
push 1Fh  +
push offset byte_430030  +
call sub_40E8BD  +
mov ecx [esp+8F4h+var_8C8] +
lea edx [esp+8F4h+lpBuffer] +
add esp 18h +
mov eax [ecx] +
push edx  +
push ecx  +
mov esi [eax+58h] +
mov ecx esi +
call ds:off_43520C  +
call esi  +
jmp loc_408E96  +
call sub_40EB40  +
push eax  +
push dword_4313F4  +
push dword_4313F0  +
push 1  +
push 1Fh  +
push offset byte_430030  +
call sub_40E8BD  +
add esp 18h +
jmp loc_403DC6  +
mov ecx ebx +
call esi  +
jmp loc_403DC4  +
call esi  +
jmp loc_403DF3  +
mov ecx ebx +
call esi  +
jmp loc_403E1C  +
mov eax dword_431288 +
test eax eax +
jnz loc_40902E  +
test byte ptr dword_43000C 4 +
jz loc_408F9F  +
xor edx edx +
mov ecx 80000000h +
inc edx  +
jmp loc_403E3C  +
mov eax [ebx] +
push edx  +
push ecx  +
push [esp+8FCh+var_8E4]  +
mov esi [eax+118h] +
mov ecx esi +
call ds:off_43520C  +
mov ecx ebx +
call esi  +
mov edi eax +
test edi edi +
jns loc_408FFF  +
jmp loc_403C94  +
xor eax eax +
mov ecx 10000000h +
mov edx eax +
jmp loc_403E3E  +
cmp edx eax +
ja loc_408FCE  +
cmp ecx 0FFFFFFFFh +
ja loc_408FCE  +
mov eax [ebx] +
push ecx  +
push [esp+8F8h+var_8E4]  +
mov esi [eax+30h] +
mov ecx esi +
call ds:off_43520C  +
mov ecx ebx +
call esi  +
jmp loc_408F94  +
push edx  +
push ecx  +
push offset a0x016i64x  +
lea eax [esp+900h+var_88C] +
push 13h  +
push eax  +
call sub_411B96  +
add esp 14h +
lea eax [esp+8F4h+var_88C] +
push eax  +
push offset aBaseaddress_1  +
push 1  +
push 0Ch  +
push offset byte_430030  +
call sub_40E86E  +
add esp 14h +
mov eax dword_431288 +
test eax eax +
jnz loc_40902E  +
mov eax [ebx] +
push 1  +
push [esp+8F8h+var_8E4]  +
mov esi [eax+50h] +
mov ecx esi +
call ds:off_43520C  +
mov ecx ebx +
call esi  +
mov edi eax +
test edi edi +
js loc_403C94  +
mov eax dword_431288 +
cmp eax 1 +
jz loc_409037  +
test eax eax +
jnz loc_40903F  +
mov [esp+8FCh+var_8AC] 3 +
push dword_4349DC  +
mov eax [ebx] +
push dword_4349D8  +
push [esp+904h+var_8AC]  +
mov esi [eax+34h] +
mov ecx esi +
push [esp+908h+var_8EC]  +
call ds:off_43520C  +
mov ecx ebx +
call esi  +
mov edi eax +
test edi edi +
js loc_403C94  +
cmp dword_431288 3 +
jnz loc_4090BF  +
mov esi [ebx] +
xor eax eax +
mov [esp+90Ch+var_8BC] eax +
lea eax [esp+90Ch+var_8BC] +
push eax  +
lea eax [esp+910h+var_8AC] +
mov esi [esi+11Ch] +
mov ecx esi +
push eax  +
lea eax [esp+914h+var_8EC] +
push eax  +
push [esp+918h+var_8FC]  +
call ds:off_43520C  +
mov ecx ebx +
call esi  +
mov edi eax +
test edi edi +
js loc_403C94  +
mov eax [esp+91Ch+var_8FC] +
test eax eax +
jz loc_4090BF  +
mov ecx 1000h +
or [eax+5Eh] cx +
mov ecx [esp+91Ch+var_908] +
push [esp+91Ch+var_904]  +
push ecx  +
mov eax [ecx] +
mov esi [eax+60h] +
mov ecx esi +
call ds:off_43520C  +
call esi  +
mov edi eax +
test edi edi +
js loc_403C94  +
mov eax [ebx] +
push [esp+924h+var_8E0]  +
push [esp+928h+var_914]  +
mov esi [eax+0B4h] +
mov ecx esi +
call ds:off_43520C  +
mov ecx ebx +
call esi  +
mov edi eax +
test edi edi +
js loc_403C94  +
cmp byte_430030 0 +
jnz loc_4050DD  +
mov eax [ebx] +
push [esp+92Ch+var_91C]  +
mov esi [eax+1Ch] +
mov ecx esi +
call ds:off_43520C  +
mov ecx ebx +
call esi  +
mov edi eax +
test edi edi +
js loc_403C94  +
mov ecx [esp+930h+var_91C] +
push [esp+930h+var_918]  +
push ecx  +
mov eax [ecx] +
mov esi [eax+64h] +
mov ecx esi +
call ds:off_43520C  +
call esi  +
mov edi eax +
jmp loc_4050DD  +
mov ecx edi +
call sub_410763  +
test eax eax +
jns loc_403EAC  +
mov ebx offset byte_430030 +
push edi  +
mov ecx ebx +
call sub_40E95E  +
push eax  +
test esi esi +
jz loc_409186  +
push esi  +
push 1  +
push 2Dh  +
push ebx  +
call sub_40E86E  +
add esp 14h +
jmp loc_403EAC  +
push 1  +
push 13h  +
push ebx  +
call sub_40E86E  +
add esp 10h +
jmp loc_403EAC  +
***
mov esi [ebx] +
lea eax [ebp+var_2C] +
push eax  +
push 0  +
push ecx  +
mov ecx [esi+24h] +
push ebx  +
call ds:off_43520C  +
call dword ptr [esi+24h]  +
jmp loc_404ED0  +
cmp eax 1 +
setz cl  +
or [esi] cl +
jmp loc_405319  +
call dword ptr [esi+4Ch]  +
jmp loc_404F94  +
call dword ptr [esi+78h]  +
mov edi eax +
test edi edi +
js loc_409345  +
mov ecx [ebp+var_44] +
mov eax ecx +
and eax 410h +
cmp eax 10h +
jz loc_405005  +
jmp loc_409345  +
cmp ecx 3 +
jz loc_405017  +
cmp ecx 5 +
jz loc_405017  +
jmp loc_409345  +
lea ecx [ebp+var_28] +
call sub_4119FC  +
mov esi [ebp+var_28] +
mov ecx eax +
jmp loc_405037  +
inc esi  +
lea ecx [ebp+var_28] +
mov [ebp+var_28] esi +
call sub_4119C2  +
mov esi [ebp+var_28] +
mov ecx [ebp+var_40] +
jmp loc_40504C  +
mov ebx edx +
add ebx eax +
mov al [esi] +
mov [ebx] al +
inc ebx  +
inc esi  +
cmp byte ptr [esi] 20h +
jnz loc_409280  +
inc esi  +
lea ecx [ebp+var_28] +
mov [ebp+var_28] esi +
call sub_4119C2  +
mov esi [ebp+var_28] +
mov ecx [ebp+var_40] +
xor edx edx +
inc edx  +
cmp ecx edx +
jnz loc_4092AB  +
mov eax [ebp+var_50] +
mov [eax] edx +
cmp byte ptr [esi] 1Dh +
jnz loc_409342  +
cmp byte ptr [esi+1] 0Eh +
jnz loc_409342  +
mov word ptr [ebx] 0E1Dh +
add ebx 2 +
xor edx edx +
jmp loc_4092BA  +
test ecx ecx +
jnz loc_409342  +
mov eax [ebp+var_50] +
xor edx edx +
mov [eax] edx +
cmp [ebp+var_2C] 0 +
jz loc_4092E6  +
mov eax [ebp+var_34] +
lea ecx [ebp+var_4C] +
push ecx  +
push edx  +
push [ebp+var_2C]  +
mov esi [eax] +
push [ebp+var_24]  +
push edx  +
mov ecx [esi+34h] +
push edx  +
push edx  +
push eax  +
call ds:off_43520C  +
call dword ptr [esi+34h]  +
mov edi eax +
test edi edi +
js loc_409342  +
push [ebp+var_60]  +
mov eax [ebp+var_38] +
xor edx edx +
push [ebp+var_4C]  +
mov ecx [ebp+var_34] +
push edx  +
push [ebp+eax*4+var_20]  +
push [ebp+var_24]  +
mov esi [ecx] +
push edx  +
push edx  +
push edx  +
push ecx  +
mov ecx [esi+3Ch] +
call ds:off_43520C  +
call dword ptr [esi+3Ch]  +
mov edi eax +
test edi edi +
js loc_409342  +
push [ebp+var_48]  +
mov eax [ebp+var_34] +
lea ecx [ebp+var_10] +
push 0  +
push 0FFFFFFFFh  +
sub ebx ecx +
mov esi [eax] +
push ebx  +
push ecx  +
push 10h  +
mov ecx [esi+28h] +
push offset a__entrypoint  +
push 0  +
push eax  +
call ds:off_43520C  +
call dword ptr [esi+28h]  +
jmp loc_4052E4  +
mov ebx [ebp+var_24] +
mov ecx [ebp+var_38] +
inc ecx  +
mov [ebp+var_38] ecx +
cmp ecx [ebp+var_30] +
jb loc_404FB8  +
cmp [ebp+var_30] 0 +
ja loc_404EDE  +
jmp loc_4052F4  +
call esi  +
jmp loc_404EEB  +
xor edi edi +
inc edi  +
jmp loc_405317  +
***
mov byte ptr [ebp+var_44] 2 +
lea ebx [ebp+var_44+1] +
mov eax [ebp+arg_C] +
lea edx [ebp+var_4C] +
mov esi [edi] +
mov word ptr [ebx] 14FEh +
mov byte ptr [ebx+2] 28h +
mov [ebx+3] eax +
lea eax [ebp+var_44] +
mov byte ptr [ebx+7] 2Ah +
add ebx 8 +
sub bl al +
push edx  +
movzx eax bl +
mov [ebp+var_5C] eax +
inc eax  +
push 1  +
push eax  +
push ecx  +
mov ecx [esi+78h] +
call ds:off_43520C  +
mov ecx edi +
call dword ptr [esi+78h]  +
jmp loc_405145  +
mov ecx edi +
call esi  +
test eax eax +
js loc_405184  +
mov eax [edi] +
lea ecx [ebp+var_48] +
push ecx  +
push [ebp+var_48]  +
mov esi [eax+10h] +
mov ecx esi +
push [ebp+var_58]  +
call ds:off_43520C  +
mov ecx edi +
call esi  +
test eax eax +
js loc_405184  +
mov eax [ebp+var_54] +
push 0  +
push [ebp+var_48]  +
mov esi [eax] +
push 10h  +
push [ebp+arg_8]  +
mov ecx [esi+78h] +
push eax  +
call ds:off_43520C  +
call dword ptr [esi+78h]  +
jmp loc_405184  +
***
mov edi 4000h +
cmp dx di +
jnz loc_40947E  +
mov edx [eax+8] +
mov [ebp+var_10] edx +
test edx edx +
jz loc_4041AB  +
test esi esi +
js loc_4094C5  +
mov ebx [ebx] +
sub esp 10h +
mov edi esp +
mov esi edx +
push dword ptr [ecx]  +
mov ecx [ebx+4Ch] +
movs   +
movs   +
movs   +
movs   +
mov edi [ebp+var_14] +
push edi  +
push edi  +
push [ebp+var_4]  +
call ds:off_43520C  +
call dword ptr [ebx+4Ch]  +
mov edx [ebp+var_10] +
mov esi eax +
mov ecx [ebp+var_8] +
mov ebx [ebp+var_4] +
mov edx [edx+10h] +
mov [ebp+var_10] edx +
test edx edx +
jz loc_4094C2  +
jmp loc_40943C  +
mov ebx [ebx] +
sub esp 10h +
mov edi esp +
mov esi eax +
push dword ptr [ecx]  +
mov ecx [ebx+4Ch] +
movs   +
movs   +
movs   +
movs   +
mov edi [ebp+var_14] +
push edi  +
push edi  +
push [ebp+var_4]  +
call ds:off_43520C  +
call dword ptr [ebx+4Ch]  +
mov esi eax +
cmp esi 1 +
jnz loc_4094BF  +
mov eax [ebp+var_8] +
push dword ptr [eax+8]  +
push 2  +
push 15h  +
push offset byte_430030  +
call sub_40E86E  +
add esp 10h +
mov ebx [ebp+var_4] +
mov ecx [ebp+var_8] +
mov eax [ebp+var_C] +
jmp loc_4041AB  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
call dword ptr [esi]  +
jmp loc_404E6C  +
xor ebx ebx +
inc ebx  +
jmp loc_404EB2  +
call esi  +
push [ebp+var_8]  +
mov ebx eax +
mov eax [ebp+var_4] +
push eax  +
mov ecx [eax] +
mov esi [ecx+0Ch] +
mov ecx esi +
call ds:off_43520C  +
call esi  +
jmp loc_404EA6  +
call esi  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and dword ptr [edx+4] 0 +
and dword ptr [edx] 0 +
jmp loc_401963  +
call sub_40E206  +
int 3  +
***
xor esi esi +
xor eax eax +
mov [edi] esi +
mov [edi+8] esi +
mov [edi+4] esi +
jmp loc_401188  +
call sub_40E206  +
int 3  +
call sub_4037FC  +
mov edi [esi+4] +
test edi edi +
jz loc_40955B  +
mov ecx edi +
call sub_4037FC  +
push edi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov [esi+4] ebx +
jmp loc_403812  +
***
call sub_4037FC  +
mov edi [esi+8] +
test edi edi +
jz loc_40381F  +
mov ecx edi +
call sub_4037FC  +
push edi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
jmp loc_40381F  +
***
cmp ecx 3FFFh +
ja loc_4095A7  +
mov eax ecx +
mov [edx+1] cl +
shr eax 8 +
or al 80h +
push 2  +
mov [edx] al +
pop eax  +
retn   +
cmp ecx 1FFFFFFFh +
ja loc_4095CF  +
mov eax ecx +
mov [edx+3] cl +
shr eax 18h +
or al 0C0h +
mov [edx] al +
mov eax ecx +
shr eax 10h +
mov [edx+1] al +
mov eax ecx +
shr eax 8 +
push 4  +
mov [edx+2] al +
pop eax  +
retn   +
or eax 0FFFFFFFFh +
retn   +
***
test eax eax +
js loc_409613  +
mov ecx [ebp+var_4] +
push esi  +
push [ebp+ppv]  +
mov edi [ecx] +
push offset riid  +
push offset rclsid  +
push edi  +
mov esi [edi] +
mov ecx [esi+24h] +
call ds:off_43520C  +
call dword ptr [esi+24h]  +
pop esi  +
jmp loc_409613  +
push [ebp+ppv]  +
push offset riid  +
push 15h  +
push 0  +
push offset rclsid  +
call ds:CoCreateInstance  +
pop edi  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov cl 1 +
jmp loc_4016BC  +
push edi  +
mov edi 303Fh +
cmp ax di +
ja loc_409682  +
mov edx 200Bh +
cmp ax dx +
ja loc_409657  +
cmp si ax +
jz loc_409680  +
add edx 0FFFFFFF5h +
cmp ax dx +
jnb loc_409680  +
jmp loc_409682  +
mov edx 2028h +
cmp dx ax +
jz loc_409680  +
inc edx  +
cmp dx ax +
jz loc_409680  +
mov edx 202Fh +
cmp dx ax +
jz loc_409680  +
mov edx 3000h +
cmp dx ax +
jz loc_409680  +
cmp di ax +
jnz loc_409682  +
mov cl 1 +
pop edi  +
jmp loc_4016BC  +
***
mov ecx eax +
test ecx ecx +
js loc_409698  +
mov eax [ebp+var_4] +
mov edx [eax] +
mov [ebp+var_8] edx +
jmp loc_40969B  +
mov edx [ebp+var_8] +
test ecx ecx +
js loc_4096C5  +
mov eax [edx] +
push [ebp+arg_4]  +
push esi  +
mov esi [eax+1Ch] +
mov ecx esi +
push edx  +
call ds:off_43520C  +
call esi  +
jmp loc_4096C3  +
push [ebp+arg_4]  +
push 0  +
push 0  +
push esi  +
call ds:LoadLibraryShim  +
mov ecx eax +
mov eax ecx +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call ds:GetLastError  +
test eax eax +
jle loc_402D97  +
movzx eax ax +
or eax 80070000h +
pop esi  +
retn   +
push edx  +
call ds:FreeLibrary  +
mov eax dword_43142C +
jmp loc_402D93  +
***
call ds:GetLastError  +
test eax eax +
jle loc_40971A  +
movzx eax ax +
or eax 80070000h +
jmp loc_40971A  +
push [ebp+arg_0]  +
mov ecx esi +
push edi  +
push ebx  +
call ds:off_43520C  +
call esi  +
pop esi  +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov ecx [ebp+var_4] +
mov edx offset dword_431430 +
mov [ebp+var_8] 1 +
xor eax eax +
mov [ebp+var_C] ecx +
cmpxchg [edx] ecx +
test eax eax +
jz loc_402B6F  +
lea eax [ebp+var_C] +
push eax  +
call sub_411B30  +
mov eax dword_431430 +
jmp loc_402B80  +
***
mov ecx [ebp+var_41C] +
mov edx offset dword_431428 +
mov [ebp+var_424] 1 +
xor eax eax +
mov [ebp+var_428] ecx +
cmpxchg [edx] ecx +
test eax eax +
jz loc_403903  +
lea eax [ebp+var_428] +
push eax  +
call sub_411B30  +
mov eax dword_431428 +
jmp loc_403914  +
call dword ptr [esi+0Ch]  +
jmp loc_403956  +
mov eax 100h +
push offset aV4_0_0  +
push eax  +
mov [ebp+hModule] eax +
lea eax [ebp+var_204] +
push eax  +
call sub_4148CC  +
add esp 0Ch +
mov esi [edi] +
lea eax [ebp+var_430] +
push [ebp+var_420]  +
mov ecx [esi+0Ch] +
push offset a9JhiFhs  +
push eax  +
push [ebp+var_42C]  +
lea eax [ebp+hModule] +
push ebx  +
push eax  +
lea eax [ebp+var_204] +
push eax  +
push 0  +
push 0  +
push 48h  +
push edi  +
call ds:off_43520C  +
call dword ptr [esi+0Ch]  +
mov esi eax +
test esi esi +
jz loc_403960  +
and [ebp+hModule] 0 +
lea ecx [ebp+hModule] +
call sub_402D4A  +
test eax eax +
js loc_4039EC  +
push offset aGetrequestedru  +
push [ebp+hModule]  +
mov [ebp+var_438] 0 +
call ds:GetProcAddress  +
test eax eax +
jnz loc_409850  +
call ds:GetLastError  +
mov esi eax +
test esi esi +
jle loc_40985A  +
movzx esi si +
or esi 80070000h +
jmp loc_409858  +
mov [ebp+var_434] eax +
xor esi esi +
test esi esi +
js loc_4098B4  +
mov ecx 104h +
lea eax [ebp+var_41C] +
push eax  +
push ecx  +
lea eax [ebp+var_20C] +
mov [ebp+var_428] ecx +
push eax  +
lea eax [ebp+var_428] +
mov [ebp+var_41C] ecx +
push eax  +
push ecx  +
mov ecx [ebp+var_434] +
lea eax [ebp+var_414] +
push eax  +
push 41h  +
push 0  +
push 0  +
push 0  +
push 0  +
call ds:off_43520C  +
call [ebp+var_434]  +
mov esi eax +
test esi esi +
js loc_4098B4  +
jz loc_4098C4  +
mov esi 80131700h +
lea ecx [ebp+var_43C] +
call sub_411B4E  +
jmp loc_4039EA  +
and [ebp+hModule] 0 +
lea ecx [ebp+hModule] +
call sub_402B86  +
mov esi eax +
test esi esi +
js loc_4098B4  +
mov eax [ebp+hModule] +
lea ecx [ebp+var_20C] +
push [ebp+var_420]  +
push offset a9JhiFhs  +
mov esi [eax] +
push ecx  +
push eax  +
mov ecx [esi+0Ch] +
call ds:off_43520C  +
call dword ptr [esi+0Ch]  +
mov esi eax +
test esi esi +
jnz loc_4098AF  +
test ebx ebx +
jz loc_409933  +
push [ebp+var_41C]  +
mov edi [ebp+var_42C] +
lea eax [ebp+var_20C] +
push eax  +
push dword ptr [edi]  +
push ebx  +
call sub_41480E  +
mov eax [ebp+var_41C] +
add esp 10h +
mov [edi] eax +
lea ecx [ebp+var_43C] +
call sub_411B4E  +
jmp loc_403960  +
call esi  +
jmp loc_403987  +
***
xor eax eax +
mov dword_434A14 edi +
inc eax  +
mov ecx offset dword_431434 +
mov byte_434A18 al +
xchg eax [ecx] +
xor eax eax +
mov edx offset unk_431424 +
xchg eax [edx] +
mov [esi] edi +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
mov ecx eax +
jmp loc_4024FD  +
mov eax [ebp+arg_0] +
xor edx edx +
mov [eax] dx +
jmp loc_4024FD  +
***
mov edx ecx +
lea esi [edx+2] +
mov ax [edx] +
add edx 2 +
cmp ax di +
jnz loc_4099B8  +
sub edx esi +
sar edx 1 +
jmp loc_4027CD  +
push 0CEh  +
call ds:SetLastError  +
xor eax eax +
jmp loc_4027FD  +
***
mov esi edi +
lea ecx [esi+2] +
mov ax [esi] +
add esi 2 +
test ax ax +
jnz loc_4099E4  +
sub esi ecx +
sar esi 1 +
jmp loc_401C27  +
push 0CEh  +
call ds:SetLastError  +
xor eax eax +
jmp loc_401C54  +
call sub_40E206  +
int 3  +
***
cmp ebx 2 +
jb loc_409A35  +
mov esi [ebp+var_C] +
mov edi ebx +
shr edi 1 +
push ecx  +
mov ecx esi +
call sub_401974  +
sub ebx 2 +
push 5Ch  +
pop ecx  +
sub edi 1 +
jnz loc_409A1C  +
mov esi [ebp+var_8] +
mov edi [ebp+var_C] +
test bl 1 +
jz loc_409A4D  +
movzx eax word ptr [esi] +
mov ecx edi +
push eax  +
call sub_401974  +
add esi 2 +
jmp loc_4019F5  +
add esi 2 +
mov al 1 +
jmp loc_4019F8  +
***
xor eax eax +
jmp loc_409A7C  +
cmp [ebp+arg_4] 0 +
jbe loc_409A83  +
movzx ecx word ptr [edi] +
push esi  +
mov esi edi +
mov [ebp+var_4] esi +
jmp loc_4029C4  +
push ecx  +
push ecx  +
lea ecx [ebp+arg_0] +
call sub_401AF0  +
mov eax edi +
pop esi  +
pop edi  +
mov esp ebp +
pop ebp  +
retn 8  +
call sub_40E206  +
int 3  +
***
xor eax eax +
jmp loc_401A5D  +
cmp [ebp+arg_4] 0 +
jbe loc_409AC7  +
movzx ecx word ptr [edi] +
push ebx  +
push esi  +
mov esi edi +
xor bl bl +
mov [ebp+var_4] esi +
jmp loc_401A3C  +
test bl bl +
setz bl  +
jmp loc_401A39  +
push 7Ch  +
jmp loc_401A2B  +
push ecx  +
push ecx  +
lea ecx [ebp+arg_0] +
call sub_401AF0  +
jmp loc_401A59  +
call sub_40E206  +
int 3  +
***
mov byte ptr [ebp-4] 1 +
lea ecx [esi+20h] +
call sub_412448  +
jmp loc_401E28  +
***
mov [eax] esi +
jmp loc_401DBE  +
***
mov byte ptr [ebp-4] 0 +
lea ecx [esi+18h] +
mov [ebp-14h] ecx +
mov byte ptr [ebp-4] 0 +
mov ecx [ecx] +
sub ecx 10h +
call sub_4128BD  +
jmp loc_4020C2  +
***
mov eax esi +
call sub_402809  +
xor ecx ecx +
mov [ebp+var_484] edi +
cmp ecx edi +
mov eax esp +
sbb ebx ebx +
and ebx eax +
mov eax esi +
shr eax 1 +
mov [ebp+var_488] ebx +
cmp eax edi +
jnz loc_402AA4  +
mov eax esi +
call sub_402809  +
xor ecx ecx +
mov [ebp+var_4A8] edi +
cmp ecx edi +
mov [ebp+var_46C] edi +
mov eax esp +
mov [ebp+var_47C] edi +
sbb ecx ecx +
and ecx eax +
xor eax eax +
cmp eax edi +
mov [ebp+var_4A4] ecx +
mov [ebp+var_4AC] ecx +
sbb eax eax +
and eax [ebp+arg_0] +
mov [ebp+var_468] eax +
mov [ebp+var_470] eax +
xor eax eax +
cmp eax edi +
sbb eax eax +
and eax ebx +
mov [ebp+var_480] eax +
mov eax esi +
shr eax 1 +
cmp eax edi +
jz loc_40288F  +
jmp loc_402AA4  +
mov ecx [ebp+var_474] +
jmp loc_4028CC  +
***
xor edi edi +
lea ecx [ebp+var_4AC] +
push edi  +
push edx  +
call sub_401AF0  +
mov esi [ebp+var_48C] +
test ebx ebx +
jz loc_409BBA  +
test esi esi +
jz loc_402AA4  +
mov eax [ebp+var_4A4] +
test eax eax +
jnz loc_402A29  +
jmp loc_402A2D  +
test edx edx +
jz loc_402AA4  +
mov ecx [ebp+var_474] +
cmp ecx [ebp+arg_0] +
jnz loc_409BF4  +
xor eax eax +
lea ecx [ebp+arg_0] +
push eax  +
lea eax [edx-1] +
push eax  +
call sub_401AF0  +
jmp loc_401ADF  +
***
call sub_411604  +
test ax ax +
jz loc_40A1D6  +
mov edi [ebp-47Ch] +
mov esi [ebp-480h] +
jmp loc_4023F0  +
***
test edi edi +
jz loc_402AA4  +
sub ebx esi +
lea eax [ebp+var_4B4] +
sar ebx 1 +
lea ecx [ebp+var_470] +
push ebx  +
push eax  +
call sub_401940  +
test esi esi +
jz loc_40A1C3  +
test edi edi +
jz loc_402AA4  +
push ebx  +
lea eax [ebp+var_4B4] +
push eax  +
lea ecx [ebp+var_480] +
call sub_401940  +
mov eax [ebp+var_470] +
test eax eax +
jnz loc_402AAE  +
jmp loc_402AB7  +
call ds:SetLastError  +
jmp loc_402AA0  +
int 3  +
nop   +
nop   +
nop   +
***
xor edx edx +
jmp loc_401D54  +
***
call sub_40E206  +
int 3  +
call sub_4125A1  +
jmp loc_401D23  +
***
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi ecx +
mov ecx [edi] +
cmp [ecx-0Ch] esi +
jle loc_401271  +
mov esi [ecx-0Ch] +
jmp loc_401271  +
***
cmp ecx 40000000h +
jle loc_40A28E  +
add ecx 100000h +
jmp loc_40A297  +
mov eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
add ecx eax +
cmp ecx esi +
jge loc_40A29D  +
mov ecx esi +
push ecx  +
mov ecx edi +
call sub_41261F  +
jmp loc_40127F  +
***
mov ecx edi +
call esi  +
mov ebx [ebp+arg_0] +
mov edi eax +
push 2  +
push ebx  +
mov ecx [edi] +
mov esi [ecx] +
mov ecx esi +
call ds:off_43520C  +
mov ecx edi +
call esi  +
mov [ebp+var_C] eax +
test eax eax +
jz loc_40A30D  +
mov edi [ebp+var_4] +
cmp edi ebx +
jge loc_40A2D6  +
mov ebx edi +
lea edx ds:2[ebx*2] +
mov ebx [ebp+var_8] +
lea esi [eax+10h] +
push edx  +
lea eax [ebx+10h] +
push eax  +
push edx  +
push esi  +
call sub_41753F  +
mov eax [ebp+var_C] +
add esp 10h +
mov ecx ebx +
mov [eax+4] edi +
call sub_4128BD  +
mov eax [ebp+var_10] +
pop edi  +
mov [eax] esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
call sub_412665  +
int 3  +
push 80004005h  +
call loc_4128F1  +
***
push 8007000Eh  +
call loc_4128F1  +
int 3  +
***
mov eax 7FFFFFFFh +
sub eax edx +
cmp eax 1 +
jl loc_402142  +
inc edx  +
lea esi [edx+7] +
and esi 0FFFFFFF8h +
cmp edx esi +
jg loc_402142  +
mov eax esi +
mul  [ebp+arg_4] +
test edx edx +
ja loc_402142  +
jb loc_40A361  +
cmp eax 0FFFFFFFFh +
ja loc_402142  +
cmp eax 0FFFFFFEFh +
ja loc_402142  +
mov ecx [edi+4] +
add eax 10h +
push eax  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapAlloc  +
jmp loc_402146  +
***
push [ebp+lpMem]  +
mov eax [ecx+4] +
push 0  +
push dword ptr [eax+4]  +
call ds:HeapFree  +
pop ebp  +
retn 4  +
***
cmp dword ptr [ecx+4] 0 +
jz locret_404DCF  +
push dword ptr [ecx+4]  +
call ds:HeapDestroy  +
jmp locret_404DCF  +
***
mov esi eax +
jmp loc_401C0E  +
sub ecx 2 +
mov esi 8007007Ah +
jmp loc_401C0E  +
***
mov ecx [ebp-14h] +
mov esp [ebp-18h] +
mov esi [ebp-20h] +
mov [ebp-24h] esi +
cmp dword ptr [ebp-1Ch] 0 +
jnz loc_40A4DD  +
push esi  +
call sub_417DA0  +
call loc_417C89  +
***
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax esi +
call sub_401106  +
retn   +
***
mov esi [ebp-1Ch] +
jmp sub_41474F  +
***
mov eax [esi] +
test eax eax +
jz loc_40A524  +
call eax  +
add esi 4 +
inc ebx  +
cmp ebx edi +
jb loc_40A51C  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push edi  +
test eax eax +
jnz loc_40A54E  +
mov edi [esi] +
test edi edi +
jz loc_40A546  +
mov ecx edi +
call ds:off_43520C  +
call edi  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_40A532  +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
test eax esi +
jz loc_401027  +
not eax  +
mov dword_430004 eax +
jmp loc_401082  +
mov ecx 0BB40E64Fh +
jmp loc_401074  +
mov eax ecx +
or eax 4711h +
shl eax 10h +
or ecx eax +
jmp loc_401074  +
***
push edi  +
mov edi [esi] +
test edi edi +
jz loc_40A59E  +
mov ecx edi +
call ds:off_43520C  +
call edi  +
add esi 4 +
cmp esi ebx +
jb loc_40A58E  +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov edi [esi] +
test edi edi +
jz loc_40A5C7  +
mov ecx edi +
call ds:off_43520C  +
call edi  +
add esi 4 +
cmp esi ebx +
jb loc_40A5B7  +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
pop ebp  +
retn   +
***
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
call sub_418D2E  +
int 3  +
test esi esi +
jz loc_40A5FD  +
push 0  +
push 0  +
call sub_42A4D8  +
pop ecx  +
pop ecx  +
mov [esi] eax +
call sub_416890  +
push 16h  +
pop esi  +
mov [eax] esi +
call sub_418D1E  +
mov eax esi +
jmp loc_40A62A  +
***
push ecx  +
push [ebp+arg_4]  +
test esi esi +
jz loc_40A621  +
call sub_42A4D8  +
mov [esi] eax +
jmp loc_40A626  +
call sub_42A4D8  +
pop ecx  +
pop ecx  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
xor ecx ecx +
push ecx  +
push ecx  +
push 104h  +
lea eax [ebp+FileName] +
push eax  +
push 0FFFFFFFFh  +
push esi  +
push ecx  +
push ecx  +
call ds:WideCharToMultiByte  +
push [ebp+hTemplateFile]  +
neg eax  +
push [ebp+dwFlagsAndAttributes]  +
sbb al al +
push [ebp+dwCreationDisposition]  +
and [ebp+var_5] al +
push [ebp+lpSecurityAttributes]  +
lea eax [ebp+FileName] +
push ebx  +
push edi  +
push eax  +
call ds:CreateFileA  +
jmp loc_4013B6  +
***
xor ecx ecx +
push ecx  +
push ecx  +
push 104h  +
lea eax [ebp+FileName] +
push eax  +
push 0FFFFFFFFh  +
push esi  +
push ecx  +
push ecx  +
call ds:WideCharToMultiByte  +
neg eax  +
sbb al al +
and [ebp+var_5] al +
lea eax [ebp+FileName] +
push eax  +
call ds:DeleteFileA  +
jmp loc_403E9D  +
***
xor ecx ecx +
push ecx  +
push ecx  +
push 104h  +
lea eax [ebp+FileName] +
push eax  +
push 0FFFFFFFFh  +
push edi  +
push ecx  +
push ecx  +
call ds:WideCharToMultiByte  +
neg eax  +
sbb al al +
and [ebp+var_5] al +
lea eax [ebp+FindFileData] +
push eax  +
lea eax [ebp+FileName] +
push eax  +
call ds:FindFirstFileA  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_40A6F9  +
push esi  +
lea eax [ebp+FindFileData] +
push eax  +
call sub_42C764  +
mov eax edi +
jmp loc_40224E  +
***
xor ecx ecx +
push ecx  +
push ecx  +
push 104h  +
lea eax [ebp+FileName] +
push eax  +
push 0FFFFFFFFh  +
push edi  +
push ecx  +
push ecx  +
call ds:WideCharToMultiByte  +
neg eax  +
sbb al al +
and [ebp+var_109] al +
lea eax [ebp+FilePart] +
push eax  +
lea eax [ebp+MultiByteStr] +
push eax  +
push 104h  +
lea eax [ebp+FileName] +
push eax  +
call ds:GetFullPathNameA  +
push [ebp+cchWideChar]  +
lea eax [ebp+MultiByteStr] +
push ebx  +
push 0FFFFFFFFh  +
push eax  +
push 0  +
push 0  +
call ds:MultiByteToWideChar  +
lea edi [eax-1] +
cmp edi 0FFFFFFFFh +
setz al  +
dec al  +
and [ebp+var_5] al +
cmp [ebp+cchWideChar] 0 +
jz loc_40A7A8  +
test edi edi +
jz loc_40A7A8  +
test ebx ebx +
jz loc_40A7A8  +
test esi esi +
jz loc_40A7A8  +
mov eax [ebp+FilePart] +
test eax eax +
jz loc_40A7A5  +
xor ecx ecx +
push ecx  +
push ecx  +
push 0FFFFFFFFh  +
mov [eax] cl +
lea eax [ebp+MultiByteStr] +
push eax  +
push ecx  +
push ecx  +
call ds:MultiByteToWideChar  +
dec eax  +
lea eax [ebx+eax*2] +
mov [esi] eax +
jmp loc_40A7A8  +
and dword ptr [esi] 0 +
mov eax edi +
jmp loc_402A14  +
***
xor ecx ecx +
push ecx  +
push ecx  +
push 104h  +
lea eax [ebp+PathName] +
push eax  +
push 0FFFFFFFFh  +
push esi  +
mov esi ds:WideCharToMultiByte +
push ecx  +
push ecx  +
call esi  +
neg eax  +
sbb al al +
and [ebp+var_5] al +
xor ecx ecx +
push ecx  +
push ecx  +
push 104h  +
lea eax [ebp+PrefixString] +
push eax  +
push 0FFFFFFFFh  +
push ebx  +
push ecx  +
push ecx  +
call esi  +
neg eax  +
sbb al al +
and [ebp+var_109] al +
lea eax [ebp+MultiByteStr] +
push eax  +
push [ebp+uUnique]  +
lea eax [ebp+PrefixString] +
push eax  +
lea eax [ebp+PathName] +
push eax  +
call ds:GetTempFileNameA  +
mov esi eax +
test esi esi +
jz loc_40A83C  +
push 104h  +
push edi  +
push 0FFFFFFFFh  +
lea eax [ebp+MultiByteStr] +
push eax  +
push 0  +
push 0  +
call ds:MultiByteToWideChar  +
test eax eax +
jnz loc_40A83C  +
mov [edi+206h] ax +
mov eax esi +
jmp loc_403CDD  +
***
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax offset byte_404D58 +
test edi edi +
jnz loc_40A891  +
mov edi eax +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_4026CD  +
mov esi eax +
jmp loc_4026CD  +
***
xor eax eax +
jmp loc_402702  +
test bx bx +
jz loc_4026F7  +
push ebx  +
call sub_42C848  +
push [ebp+arg_0]  +
movzx ebx ax +
call sub_42C848  +
jmp loc_402708  +
pop ebx  +
jmp loc_402702  +
***
push eax  +
call sub_42CA50  +
jmp loc_40276A  +
***
mov eax [ebp+arg_4] +
xor ecx ecx +
mov [eax] cx +
jmp loc_4027B8  +
movzx eax word ptr [esi] +
test ax ax +
jz loc_40A906  +
sub esi edi +
push eax  +
call sub_402755  +
mov [edi] ax +
add edi 2 +
movzx eax word ptr [edi+esi] +
test ax ax +
jnz loc_40A8F1  +
xor eax eax +
mov [edi] ax +
jmp loc_4027B4  +
***
push offset loc_42ED90  +
call sub_401EBC  +
pop ecx  +
retn   +
***
push offset loc_42EDB0  +
call sub_401EBC  +
pop ecx  +
retn   +
***
push offset loc_42EDD0  +
call sub_401EBC  +
pop ecx  +
retn   +
***
push offset loc_42EDF0  +
call sub_401EBC  +
pop ecx  +
retn   +
***
call sub_412808  +
mov byte_434A19 1 +
retn   +
***
push ecx  +
mov eax [ebp+arg_0] +
cmp eax 13h +
ja loc_40E2DD  +
jmp ds:off_40E2E3[eax*4]  +
mov al byte_4349E0 +
and al 1 +
jmp loc_40E2DF  +
mov al byte_4349E0 +
shr al 1 +
jmp loc_40E231  +
mov al byte_4349E0 +
shr al 2 +
jmp loc_40E231  +
mov al byte_4349E0 +
shr al 3 +
jmp loc_40E231  +
mov al byte_4349E0 +
shr al 4 +
jmp loc_40E231  +
mov al byte_4349E0 +
shr al 5 +
jmp loc_40E231  +
mov al byte_4349E0 +
shr al 6 +
jmp loc_40E231  +
mov al byte_4349E0 +
shr al 7 +
jmp loc_40E2DF  +
mov al byte_4349E1 +
jmp loc_40E231  +
mov al byte_4349E1 +
jmp loc_40E23D  +
mov al byte_4349E1 +
jmp loc_40E246  +
mov al byte_4349E1 +
jmp loc_40E250  +
mov al byte_4349E1 +
jmp loc_40E25A  +
mov al byte_4349E1 +
jmp loc_40E264  +
mov al byte_4349E1 +
jmp loc_40E26E  +
mov al byte_4349E1 +
jmp loc_40E278  +
mov al byte_4349E2 +
jmp loc_40E231  +
mov al byte_4349E2 +
jmp loc_40E23D  +
mov al byte_4349E2 +
jmp loc_40E246  +
mov al byte_4349E2 +
jmp loc_40E250  +
xor al al +
pop ebp  +
retn 4  +
***
mov eax [ebp+arg_0] +
push ebx  +
mov bl cl +
jmp ds:off_40E4A3[eax*4]  +
mov dl byte_4349E0 +
mov al dl +
xor al bl +
and al 1 +
xor dl al +
mov byte_4349E0 dl +
jmp loc_40E49E  +
mov al byte_4349E0 +
add bl bl +
xor bl al +
and bl 2 +
xor al bl +
mov byte_4349E0 al +
jmp loc_40E49E  +
mov al byte_4349E0 +
shl bl 2 +
xor bl al +
and bl 4 +
jmp loc_40E368  +
mov al byte_4349E0 +
shl bl 3 +
xor bl al +
and bl 8 +
jmp loc_40E368  +
mov al byte_4349E0 +
shl bl 4 +
xor bl al +
and bl 10h +
jmp loc_40E368  +
mov al byte_4349E0 +
shl bl 5 +
xor bl al +
and bl 20h +
jmp loc_40E368  +
mov al byte_4349E0 +
shl bl 6 +
xor bl al +
and bl 40h +
jmp loc_40E368  +
mov al byte_4349E0 +
and al 7Fh +
shl bl 7 +
or al bl +
jmp loc_40E36A  +
mov cl byte_4349E1 +
mov al cl +
xor al bl +
and al 1 +
xor cl al +
mov byte_4349E1 cl +
jmp loc_40E49E  +
mov al byte_4349E1 +
add bl bl +
xor bl al +
and bl 2 +
xor al bl +
mov byte_4349E1 al +
jmp loc_40E49E  +
mov al byte_4349E1 +
shl bl 2 +
xor bl al +
and bl 4 +
jmp loc_40E3F2  +
mov al byte_4349E1 +
shl bl 3 +
xor bl al +
and bl 8 +
jmp loc_40E3F2  +
mov al byte_4349E1 +
shl bl 4 +
xor bl al +
and bl 10h +
jmp loc_40E3F2  +
mov al byte_4349E1 +
shl bl 5 +
xor bl al +
and bl 20h +
jmp loc_40E3F2  +
mov al byte_4349E1 +
shl bl 6 +
xor bl al +
and bl 40h +
jmp loc_40E3F2  +
mov al byte_4349E1 +
and al 7Fh +
shl bl 7 +
or al bl +
jmp loc_40E3F4  +
mov cl byte_4349E2 +
mov al cl +
xor al bl +
and al 1 +
xor cl al +
mov byte_4349E2 cl +
jmp loc_40E49E  +
mov al byte_4349E2 +
add bl bl +
xor bl al +
and bl 2 +
jmp loc_40E497  +
mov al byte_4349E2 +
shl bl 2 +
xor bl al +
and bl 4 +
jmp loc_40E497  +
mov al byte_4349E2 +
shl bl 3 +
xor bl al +
and bl 8 +
xor al bl +
mov byte_4349E2 al +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edx [ebp+arg_4] +
xor ecx ecx +
push esi  +
mov esi offset dword_40E538 +
mov eax [edx+ecx*4] +
cmp eax [esi+ecx*4] +
jnz loc_40E528  +
inc ecx  +
cmp ecx 4 +
jnz loc_40E50E  +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_0] +
mov [eax] ecx +
xor eax eax +
jmp loc_40E533  +
mov eax [ebp+arg_8] +
and dword ptr [eax] 0 +
mov eax 80004005h +
pop esi  +
pop ebp  +
retn 0Ch  +
***
sub esp 0FA8h +
sub esp 418h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
mov ebx [ebp+arg_1C] +
push esi  +
mov esi ecx +
xor ecx ecx +
push edi  +
mov edi [ebp+arg_8] +
sub eax ecx +
jz loc_40E60E  +
sub eax 1 +
jz loc_40E5FF  +
sub eax 1 +
jnz loc_40E723  +
mov [ebp+var_418] offset aWarning +
jmp loc_40E61D  +
mov byte ptr [esi] 1 +
mov [ebp+var_418] offset aError +
jmp loc_40E61D  +
mov word ptr [esi] 101h +
mov [ebp+var_418] offset aFatalError +
test edi edi +
jz loc_40E6D0  +
cmp [esi+8] cl +
jnz loc_40E6BA  +
lea eax [ebp+pszBuf] +
push eax  +
push 104h  +
call ds:GetCurrentDirectoryW  +
test eax eax +
jnz loc_40E64B  +
mov [ebp+pszBuf] ax +
lea eax [ebp+pszPath] +
push eax  +
push edi  +
lea eax [ebp+pszBuf] +
push eax  +
call ds:PathCommonPrefixW  +
test eax eax +
jz loc_40E6BA  +
lea eax [ebp+pszPath] +
push eax  +
lea eax [ebp+pszBuf] +
push eax  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40E6BA  +
push eax  +
push edi  +
push 10h  +
lea eax [ebp+pszBuf] +
push eax  +
lea eax [ebp+pszPath] +
push eax  +
call ds:PathRelativePathToW  +
test eax eax +
jz loc_40E6BA  +
lea eax [ebp+pszPath] +
push eax  +
lea eax [ebp+pszBuf] +
push eax  +
call ds:PathCanonicalizeW  +
test eax eax +
jz loc_40E6BA  +
lea eax [ebp+pszBuf] +
push eax  +
jmp loc_40E6BB  +
push edi  +
push offset aS_0  +
push esi  +
call sub_40ECB7  +
add esp 0Ch +
push offset asc_40E774  +
jmp loc_40E6D5  +
push offset aAlink  +
push esi  +
call sub_40ECB7  +
cmp [ebp+arg_0] 0FFFFFFFFh +
pop ecx  +
pop ecx  +
jz loc_40E6FF  +
push [ebp+arg_0]  +
push offset aAl  +
push [ebp+var_418]  +
push offset aSS04d  +
push esi  +
call sub_40ECB7  +
add esp 14h +
test ebx ebx +
jz loc_40E716  +
xor eax eax +
cmp [ebx] ax +
jz loc_40E716  +
push 8  +
push ebx  +
mov ecx esi +
call loc_40F177  +
jmp loc_40E723  +
push offset dword_40E044  +
push esi  +
call sub_40ECB7  +
pop ecx  +
pop ecx  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn 20h  +
***
mov eax 1778h +
push ebx  +
push ebx  +
push esi  +
push edi  +
xor eax eax +
lea esi [ecx+18h] +
push eax  +
mov edi 800h +
push edi  +
push esi  +
push eax  +
push [ebp+dwMessageId]  +
push eax  +
push 12FFh  +
call ds:FormatMessageW  +
test eax eax +
jnz loc_40E945  +
push [ebp+dwMessageId]  +
push offset a0x08x  +
push edi  +
push esi  +
call sub_411B96  +
add esp 10h +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
sub esp 40h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov [ebp+var_28] ecx +
mov [ebp+var_38] ebx +
and [ebp+pperrinfo] 0 +
mov edi ebx +
and [ebp+var_2C] 0 +
sar edi 10h +
and edi 1FFFh +
cmp edi 11h +
jz loc_40E99C  +
cmp edi 13h +
jz loc_40E99C  +
cmp edi 4 +
jnz loc_40E9E0  +
lea eax [ebp+pperrinfo] +
push eax  +
push 0  +
call ds:GetErrorInfo  +
test eax eax +
jnz loc_40E9DD  +
mov eax [ebp+pperrinfo] +
lea edx [ebp+var_2C] +
push edx  +
push eax  +
mov ecx [eax] +
mov esi [ecx+14h] +
mov ecx esi +
call ds:off_43520C  +
call esi  +
test eax eax +
js loc_40E9DD  +
push [ebp+var_2C]  +
mov edi [ebp+var_28] +
add edi 18h +
push 800h  +
push edi  +
call sub_4024D2  +
jmp loc_40EA58  +
mov ecx [ebp+var_28] +
cmp edi 13h +
jnz loc_40EA4D  +
lea edi [ecx+18h] +
call sub_402C0B  +
test al al +
jz loc_40EA38  +
and [ebp+var_40] 0 +
lea ecx [ebp+var_34] +
and [ebp+var_34] 0 +
sub esp 0Ch +
call sub_403A20  +
mov ecx eax +
test ecx ecx +
js loc_40EA11  +
mov eax [ebp+var_34] +
mov eax [eax] +
jmp loc_40EA14  +
mov eax [ebp+var_40] +
test ecx ecx +
js loc_40EA4B  +
push 0FFFFFFFFh  +
lea ecx [ebp+var_3C] +
mov [ebp+var_3C] 800h +
mov esi [eax] +
push ecx  +
push edi  +
push ebx  +
mov ecx [esi+18h] +
push eax  +
call ds:off_43520C  +
call dword ptr [esi+18h]  +
jmp loc_40EA47  +
push 0  +
push 800h  +
push edi  +
push ebx  +
call ds:?LoadStringRC@@YGJIPAGHH@Z  +
mov ecx eax +
test ecx ecx +
jz loc_40EA58  +
mov ecx [ebp+var_28] +
push ebx  +
call sub_40E90D  +
mov edi eax +
push [ebp+var_2C]  +
test edi edi +
jnz loc_40EABC  +
cmp ebx 80004005h +
jz loc_40EA98  +
mov ebx 80004005h +
call ds:SysFreeString  +
mov eax [ebp+pperrinfo] +
mov ecx [ebp+var_28] +
test eax eax +
jz loc_40E97A  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_43520C  +
call esi  +
mov ecx [ebp+var_28] +
jmp loc_40E97A  +
call ds:SysFreeString  +
mov eax [ebp+pperrinfo] +
test eax eax +
jz loc_40EAB5  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_43520C  +
call esi  +
mov eax offset aUnknownFatalEr +
jmp loc_40EB17  +
call ds:SysFreeString  +
mov eax [ebp+pperrinfo] +
test eax eax +
jz loc_40EAD9  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_43520C  +
call esi  +
mov ecx 80004005h +
cmp ebx ecx +
jnz loc_40EB15  +
cmp [ebp+var_38] ecx +
jz loc_40EB15  +
mov esi [ebp+var_28] +
add esi 18h +
cmp edi esi +
jnz loc_40EB15  +
push ecx  +
push offset a0x08x_0  +
lea eax [ebp+var_24] +
push 10h  +
push eax  +
call sub_411B96  +
add esp 10h +
lea eax [ebp+var_24] +
mov edx 800h +
mov ecx esi +
push eax  +
call sub_411ACB  +
mov eax edi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn 4  +
***
call ds:GetLastError  +
sub esp 0C10h +
sub esp 0CCh +
sub esp 0Ch +
push ecx  +
push ebx  +
sub esp 28h +
xor eax eax +
push ebx  +
mov ebx [ebp+lpWideCharStr] +
push esi  +
mov [ebp+var_14] eax +
mov esi ecx +
mov [ebp+var_28] eax +
mov [ebp+var_24] eax +
mov [ebp+var_20] eax +
lea eax [ebp+var_28] +
push eax  +
push ebx  +
call sub_40EDB9  +
test eax eax +
js loc_40EF73  +
cmp byte ptr [esi+9] 0 +
push edi  +
mov edi [ebp+var_28] +
jz loc_40EE6D  +
test edi edi +
jz loc_40EE60  +
cmp [ebp+var_24] 0 +
jbe loc_40EFB1  +
push edi  +
push offset loc_40EFB8  +
call sub_414C9D  +
jmp loc_40EE78  +
push ebx  +
push offset aS_0  +
call sub_414CB3  +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_40EE88  +
cmp [ebp+var_24] 0 +
jbe loc_40EFB1  +
push (offset loc_40EFB8+4)  +
push edi  +
call sub_414B65  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40EE9E  +
mov [ebp+var_8] eax +
jmp loc_40EEB3  +
mov [ebp+var_8] eax +
inc eax  +
push (offset loc_40EFB8+4)  +
push eax  +
call sub_414B65  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40EE9E  +
push offset asc_40E078  +
push ebx  +
call sub_414C46  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40EEC8  +
mov ecx eax +
jmp loc_40EEE2  +
mov [ebp+var_C] eax +
add eax 2 +
push offset asc_40E078  +
push eax  +
call sub_414C46  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40EEC8  +
mov ecx [ebp+var_C] +
mov eax [ebp+var_8] +
test eax eax +
jnz loc_40EEFF  +
test edi edi +
jz loc_40EEF6  +
cmp [ebp+var_24] eax +
jbe loc_40EFB1  +
mov edx ebx +
mov [ebp+var_8] ebx +
xor eax eax +
jmp loc_40EF0D  +
lea edi [eax+1] +
xor eax eax +
lea edx [ecx+2] +
mov [esi+14h] eax +
mov [ebp+var_8] edx +
mov ecx edi +
mov [ebp+var_1C] eax +
mov [ebp+var_C] eax +
mov [ebp+var_18] eax +
mov byte ptr [ebp+var_1] al +
lea eax [ecx+1] +
mov [ebp+var_10] eax +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40EF21  +
sub ecx [ebp+var_10] +
lea eax [edx+2] +
mov [ebp+var_10] eax +
mov ax [edx] +
add edx 2 +
cmp ax word ptr [ebp+var_14] +
jnz loc_40EF31  +
sub edx [ebp+var_10] +
lea eax [ebp+var_1] +
push eax  +
lea eax [ebp+var_18] +
sar edx 1 +
push eax  +
lea eax [ebp+var_C] +
push eax  +
lea eax [ebp+var_1C] +
push eax  +
push 7FFFFFFFh  +
push ecx  +
push edi  +
push edx  +
push [ebp+var_8]  +
mov ecx esi +
call sub_40F05D  +
mov eax [esi+14h] +
xor edx edx +
add eax [ebp+var_C] +
div  dword ptr [esi+10h] +
pop edi  +
mov [esi+14h] edx +
cmp byte ptr [esi+1024h] 0 +
jz loc_40EFA1  +
cmp byte ptr [esi+1025h] 0 +
jnz loc_40EF99  +
push 3012h  +
push esi  +
call sub_40F72D  +
pop ecx  +
pop ecx  +
mov byte ptr [esi+1025h] 1 +
push ebx  +
mov ecx esi +
call near ptr loc_40EFBD+2  +
lea ecx [ebp+var_28] +
call sub_401FCB  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
call sub_40E206  +
int 3  +
nop   +
and eax 0A900073h +
or eax 0EC8B5500h +
***
push ebx  +
push esi  +
mov esi [ebp+8] +
mov ebx ecx +
push edi  +
push offset asc_40E078  +
push esi  +
call sub_414C46  +
pop ecx  +
pop ecx  +
jmp loc_40F001  +
mov ecx edi +
sub ecx esi +
sar ecx 1 +
push ecx  +
push offset a_S  +
push dword ptr [ebx+1020h]  +
call sub_414CC9  +
lea esi [edi+2] +
push offset asc_40E078  +
push esi  +
call sub_414C46  +
add esp 18h +
mov edi eax +
push esi  +
test edi edi +
jnz loc_40EFD9  +
push offset aS_0  +
push dword ptr [ebx+1020h]  +
call sub_414CC9  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
cmp [ebp+lpBuffer] 0 +
sub esp 18h +
mov eax [ebp+arg_1C] +
xor edx edx +
push ebx  +
mov ebx [ebp+arg_20] +
push esi  +
mov esi [ebp+arg_14] +
push edi  +
mov edi [ebp+arg_18] +
mov [ebp+var_8] ecx +
mov [ebx] dl +
mov [esi] edx +
mov [edi] edx +
mov [eax] edx +
mov [ebp+var_C] edx +
mov [ebp+var_10] edx +
mov [ebp+var_14] edx +
mov [ebp+var_4] edx +
cmp [ebp+arg_4] edx +
jbe loc_40F16E  +
mov eax [esi] +
mov ecx [ebp+arg_0] +
movzx eax word ptr [ecx+eax*2] +
cmp eax 0Ah +
jz loc_40F16B  +
cmp eax 0Dh +
jz loc_40F16B  +
push eax  +
call sub_42AF95  +
mov ecx [ebp+var_4] +
cmp al 10h +
jnz loc_40F0C9  +
mov eax [esi] +
mov [ebp+var_C] eax +
mov eax [edi] +
mov [ebp+var_10] eax +
mov [ebp+var_14] ecx +
cmp [ebp+arg_C] ecx +
jbe loc_40F138  +
mov eax [ebp+arg_8] +
add eax ecx +
push eax  +
call sub_414CE2  +
mov edx eax +
mov eax [ebp+var_4] +
sub edx eax +
sub edx [ebp+arg_8] +
add eax edx +
mov [ebp+var_4] eax +
mov eax [ebp+var_8] +
pop ecx  +
mov ecx [esi] +
mov eax [eax+14h] +
add eax [edi] +
mov [ebp+var_18] eax +
mov eax [ebp+arg_0] +
movzx eax word ptr [eax+ecx*2] +
sub eax 7 +
jz loc_40F12D  +
sub eax 1 +
jz loc_40F128  +
sub eax 1 +
jnz loc_40F12F  +
mov eax [ebp+var_18] +
and eax 7 +
push 8  +
pop edx  +
sub edx eax +
mov eax [ebp+var_8] +
mov eax [eax+10h] +
sub eax [ebp+var_18] +
cmp edx eax +
jb loc_40F12F  +
mov edx eax +
jmp loc_40F12F  +
or edx 0FFFFFFFFh +
jmp loc_40F12F  +
xor edx edx +
mov eax [edi] +
mov ecx [ebp+var_4] +
add eax edx +
jmp loc_40F13B  +
mov eax [edi] +
inc eax  +
cmp eax [ebp+arg_10] +
ja loc_40F155  +
inc dword ptr [esi]  +
mov [edi] eax +
mov eax [ebp+arg_1C] +
mov [eax] ecx +
mov eax [ebp+arg_4] +
cmp [esi] eax +
jnb loc_40F16E  +
jmp loc_40F094  +
mov eax [ebp+var_C] +
test eax eax +
jz loc_40F16E  +
mov ecx [ebp+var_14] +
mov [esi] eax +
mov eax [ebp+var_10] +
mov [edi] eax +
mov eax [ebp+arg_1C] +
mov [eax] ecx +
mov byte ptr [ebx] 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 24h  +
***
push ebp  +
mov ebp esp +
sub esp 40h +
xor eax eax +
push esi  +
mov esi [ebp+8] +
push edi  +
mov [ebp-30h] eax +
mov edi ecx +
mov [ebp-40h] eax +
mov [ebp-3Ch] eax +
mov [ebp-38h] eax +
lea eax [ebp-40h] +
push eax  +
push esi  +
call sub_40EDB9  +
test eax eax +
js loc_40F349  +
mov ecx [ebp+0Ch] +
mov edx [edi+10h] +
push ebx  +
mov [ebp-24h] edx +
lea eax [ecx+0Ah] +
mov byte ptr [ebp-2] 1 +
cmp edx eax +
mov eax [edi+14h] +
mov [ebp-20h] eax +
sbb ebx ebx +
not ebx  +
and ebx ecx +
mov ecx esi +
mov [ebp-1Ch] ebx +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax [ebp-30h] +
jnz loc_40F1CB  +
sub ecx edx +
mov edx [ebp-40h] +
sar ecx 1 +
mov [ebp-10h] edx +
lea eax [esi+ecx*2] +
mov [ebp-30h] eax +
test edx edx +
jz loc_40F1F5  +
cmp dword ptr [ebp-3Ch] 0 +
jbe loc_40F359  +
mov ecx edx +
lea eax [ecx+1] +
mov [ebp-2Ch] eax +
mov al [ecx] +
inc ecx  +
test al al +
jnz loc_40F1FD  +
sub ecx [ebp-2Ch] +
lea eax [ecx+edx] +
mov [ebp-34h] eax +
jmp loc_40F33D  +
mov ecx [ebp-24h] +
xor ebx ebx +
sub ecx [ebp-20h] +
sub eax esi +
mov [ebp-1] bl +
mov [ebp-0Ch] ebx +
mov [ebp-14h] ebx +
mov [ebp-18h] ebx +
mov ebx [ebp-34h] +
mov [ebp-8] ebx +
lea ebx [ebp-1] +
sub [ebp-8] edx +
push ebx  +
lea ebx [ebp-18h] +
sar eax 1 +
push ebx  +
lea ebx [ebp-14h] +
mov [ebp-2Ch] ecx +
push ebx  +
lea ebx [ebp-0Ch] +
mov [ebp-28h] eax +
push ebx  +
push ecx  +
push dword ptr [ebp-8]  +
mov ecx edi +
push edx  +
push eax  +
push esi  +
call sub_40F05D  +
cmp byte ptr [ebp-1] 0 +
mov ebx [ebp-1Ch] +
jnz loc_40F2A8  +
mov eax [ebp-28h] +
cmp [ebp-0Ch] eax +
jnb loc_40F2A8  +
cmp [ebp-20h] ebx +
jbe loc_40F2A8  +
push offset dword_40E044  +
mov ecx edi +
call sub_40EE1B  +
mov eax [ebp-24h] +
xor ecx ecx +
mov [ebp-2] cl +
sub eax ebx +
lea ecx [ebp-1] +
mov [ebp-2Ch] eax +
push ecx  +
lea ecx [ebp-18h] +
push ecx  +
lea ecx [ebp-14h] +
push ecx  +
lea ecx [ebp-0Ch] +
push ecx  +
push eax  +
push dword ptr [ebp-8]  +
mov ecx edi +
push dword ptr [ebp-10h]  +
push dword ptr [ebp-28h]  +
push esi  +
call sub_40F05D  +
cmp byte ptr [ebp-2] 0 +
jnz loc_40F2DF  +
cmp ebx [edi+10h] +
sbb ebx ebx +
and ebx [ebp-1Ch] +
cmp [edi+14h] ebx +
jbe loc_40F2C8  +
push offset dword_40E044  +
push edi  +
call sub_40ECB7  +
pop ecx  +
pop ecx  +
sub ebx [edi+14h] +
push offset byte_404D58  +
push ebx  +
push offset aS_1  +
push edi  +
call sub_40ECB7  +
add esp 10h +
mov ebx [ebp-0Ch] +
push esi  +
push ebx  +
push offset a_S_0  +
push edi  +
call sub_40ECB7  +
mov eax [ebp-2Ch] +
add esp 10h +
cmp [ebp-14h] eax +
jnb loc_40F306  +
push offset dword_40E044  +
mov ecx edi +
call sub_40EE1B  +
mov edx [ebp-10h] +
lea esi [esi+ebx*2] +
add edx [ebp-18h] +
cmp byte ptr [ebp-1] 0 +
mov [ebp-10h] edx +
jz loc_40F332  +
cmp word ptr [esi] 0Dh +
push edx  +
setz bl  +
add esi 2 +
call sub_414CE2  +
mov edx eax +
pop ecx  +
test bl bl +
jnz loc_40F318  +
mov [ebp-10h] eax +
mov ebx [ebp-1Ch] +
xor eax eax +
mov [ebp-2] al +
mov [ebp-20h] ebx +
mov eax [ebp-30h] +
cmp esi eax +
jb loc_40F212  +
pop ebx  +
lea ecx [ebp-40h] +
call sub_401FCB  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_40E206  +
int 3  +
nop   +
push ebp  +
mov ebp esp +
sub esp 114h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
push esi  +
mov esi [ebp+8] +
lea ecx [ebp+0Ch] +
push edi  +
xor ebx ebx +
push ebx  +
push ebx  +
call sub_401AF0  +
mov edi 104h +
lea eax [ebp-108h] +
push edi  +
push eax  +
push esi  +
call ds:GetModuleFileNameA  +
cmp eax edi +
jnb loc_40F489  +
mov [ebp+eax-108h] bl +
lea eax [ebp-114h] +
push eax  +
lea eax [ebp-108h] +
push eax  +
call ds:GetFileVersionInfoSizeA  +
mov edi eax +
test edi edi +
jz loc_40F471  +
push edi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_40F471  +
push esi  +
push edi  +
push ebx  +
lea eax [ebp-108h] +
push eax  +
call ds:GetFileVersionInfoA  +
test eax eax +
jz loc_40F462  +
lea eax [ebp-110h] +
push eax  +
lea eax [ebp-10Ch] +
push eax  +
push offset loc_40F490  +
push esi  +
call ds:VerQueryValueA  +
test eax eax +
jz loc_40F462  +
cmp [ebp-110h] ebx +
jz loc_40F462  +
cmp [ebp+0Ch] ebx +
jz loc_40F435  +
cmp [ebp+10h] ebx +
jbe loc_40F484  +
mov ecx [ebp-10Ch] +
movzx eax word ptr [ecx+0Ch] +
push eax  +
movzx eax word ptr [ecx+0Eh] +
push eax  +
movzx eax word ptr [ecx+8] +
push eax  +
movzx eax word ptr [ecx+0Ah] +
push eax  +
push offset aD_D_04d_D  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
call sub_411B96  +
add esp 1Ch +
push esi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn 0Ch  +
***
call sub_40E206  +
call sub_414447  +
int 3  +
nop   +
pop esp  +
push ebp  +
mov ebp esp +
sub esp 220h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp-4] eax +
cmp dword ptr [ebp+8] 0 +
push esi  +
push edi  +
jz loc_40F4D5  +
cmp dword ptr [ebp+0Ch] 0 +
jbe loc_40F5EA  +
push offset asc_40F5F0  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_4024D2  +
call sub_402C0B  +
test al al +
jz loc_40F536  +
sub esp 0Ch +
lea ecx [ebp-21Ch] +
xor edi edi +
mov [ebp-21Ch] edi +
call sub_403A20  +
test eax eax +
js loc_40F5A5  +
mov ecx [ebp-21Ch] +
lea eax [ebp-218h] +
push eax  +
push offset dword_40F614  +
push offset rclsid  +
mov edi [ecx] +
push edi  +
mov esi [edi] +
mov ecx [esi+24h] +
call ds:off_43520C  +
call dword ptr [esi+24h]  +
jmp loc_40F54F  +
lea eax [ebp-218h] +
push eax  +
push offset dword_40F614  +
push offset rclsid  +
push 0  +
call ds:CorBindToCurrentRuntime  +
test eax eax +
js loc_40F5A5  +
lea eax [ebp-220h] +
push eax  +
lea ecx [ebp-210h] +
call sub_411A5D  +
mov eax [ebp-218h] +
push eax  +
mov ecx [eax] +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_43520C  +
call esi  +
cmp word ptr [ebp-210h] 76h +
jnz loc_40F5A5  +
cmp dword ptr [ebp+8] 0 +
jz loc_40F591  +
cmp dword ptr [ebp+0Ch] 0 +
jbe loc_40F5EA  +
lea eax [ebp-20Eh] +
push eax  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_4024D2  +
jmp loc_40F5D8  +
lea eax [ebp-214h] +
push eax  +
push ecx  +
mov ecx offset aMscorlib_dll +
call sub_402C25  +
test eax eax +
js loc_40F5D8  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push dword ptr [ebp-214h]  +
call loc_40F372  +
push dword ptr [ebp-214h]  +
call ds:FreeLibrary  +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_40E206  +
int 3  +
push ecx  +
push ecx  +
and esp 0FFFFFFF8h +
add esp 4 +
push ebp  +
mov ebp [ebx+4] +
mov [esp+8+var_4] ebp +
mov ebp esp +
push ecx  +
push esi  +
push ecx  +
push ecx  +
mov ecx [ebx+8] +
mov eax esp +
mov esi offset unk_431058 +
xor dl dl +
mov [eax] esi +
mov dword ptr [eax+4] 104h +
call sub_402842  +
test eax eax +
jz loc_40F6EB  +
xor eax eax +
push eax  +
push 8000000h  +
push 2  +
push eax  +
push eax  +
push 40000000h  +
push esi  +
call sub_401345  +
cmp eax 0FFFFFFFFh +
jz loc_40F69C  +
push offset byte_40F710  +
push 8000h  +
push eax  +
call sub_412CE6  +
pop ecx  +
pop ecx  +
push eax  +
call sub_414D1B  +
pop ecx  +
pop ecx  +
mov dword_431050 eax +
jmp loc_40F6A1  +
mov eax dword_431050 +
test eax eax +
jnz loc_40F6AC  +
push esi  +
push 1  +
push 9  +
jmp loc_40F6F2  +
mov byte_431056 1 +
call sub_40FBEF  +
push dword_431050  +
mov eax 0FEFFh +
push 1  +
mov word ptr [ebp+var_4] ax +
lea eax [ebp+var_4] +
push 2  +
push eax  +
call sub_41500D  +
add esp 10h +
cmp eax 1 +
jnz loc_40F6FF  +
push dword ptr [ebx+10h]  +
push dword ptr [ebx+0Ch]  +
call sub_40F7A5  +
xor eax eax +
jmp loc_40F704  +
push dword ptr [ebx+8]  +
push 0  +
push 3Eh  +
push offset byte_430030  +
call sub_40E86E  +
add esp 10h +
mov eax 80004005h +
pop esi  +
mov esp ebp +
pop ebp  +
mov esp ebx +
pop ebx  +
retn 10h  +
***
cmp cl 0Ah +
sub esp 40Ch +
sub esp 4D4h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp byte_431054 0 +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
jz loc_40F97B  +
lea eax [ebp+var_4D0] +
push eax  +
call sub_415739  +
pop ecx  +
lea eax [ebp+var_4D0] +
push eax  +
lea eax [ebp+var_42C] +
push eax  +
call sub_41578A  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_40F7FE  +
push 9  +
pop ecx  +
xor eax eax +
lea edi [ebp+var_42C] +
stos   +
lea eax [ebp+var_42C] +
mov esi 200h +
push eax  +
push offset aC  +
lea eax [ebp+var_408] +
push esi  +
push eax  +
call sub_41659D  +
lea eax [ebp+var_408] +
mov edi offset byte_430030 +
push eax  +
push 300Ch  +
push edi  +
call sub_40F72D  +
add esp 14h +
lea ecx [ebp+var_408] +
mov eax esp +
push 0  +
mov [eax] ecx +
mov [eax+4] esi +
call loc_40F372  +
lea eax [ebp+var_408] +
push eax  +
push 300Dh  +
push edi  +
call sub_40F72D  +
pop ecx  +
mov eax esp +
lea ecx [ebp+var_408] +
mov [eax] ecx +
mov [eax+4] esi +
call loc_40F4B0  +
lea eax [ebp+var_408] +
push eax  +
push 3016h  +
push edi  +
call sub_40F72D  +
add esp 0Ch +
mov dword ptr [ebp+MultiByteStr] 94h +
lea eax [ebp+MultiByteStr] +
push eax  +
call ds:GetVersionExA  +
lea esi [ebp-4B4h] +
lea ecx [esi+1] +
mov al [esi] +
inc esi  +
test al al +
jnz loc_40F8A4  +
xor edi edi +
sub esi ecx +
jz loc_40F8EC  +
lea eax ds:2[esi*2] +
push eax  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jz loc_40F8EC  +
push esi  +
push edi  +
push 0FFFFFFFFh  +
lea eax [ebp-4B4h] +
push eax  +
push 0  +
push 0  +
call ds:MultiByteToWideChar  +
xor ecx ecx +
mov [edi+eax*2] cx +
mov ecx edi +
jmp loc_40F8F1  +
mov ecx offset byte_404D58 +
cmp dword ptr [ebp-4B8h] 2 +
jnz loc_40F901  +
mov eax offset aWindowsNt +
jmp loc_40F914  +
cmp dword ptr [ebp-4B8h] 1 +
mov eax offset aWindows9x +
jz loc_40F914  +
mov eax offset aUnknown +
push ecx  +
push dword ptr [ebp-4BCh]  +
mov esi offset byte_430030 +
push dword ptr [ebp-4C0h]  +
push dword ptr [ebp-4C4h]  +
push eax  +
push 300Eh  +
push esi  +
call sub_40F72D  +
add esp 1Ch +
test edi edi +
jz loc_40F94F  +
push edi  +
push 0  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
call ds:GetConsoleCP  +
push eax  +
push 3018h  +
push esi  +
call sub_40F72D  +
add esp 0Ch +
push 3010h  +
push esi  +
call sub_40F72D  +
pop ecx  +
pop ecx  +
push ebx  +
push [ebp+arg_0]  +
push ecx  +
call loc_40F9D8  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+0Ch] esi +
jle loc_40FA2D  +
push edi  +
mov edi [ebp+10h] +
cmp dword ptr [edi+esi*8] 0 +
jz loc_40FA26  +
test esi esi +
jz loc_40FA03  +
push offset loc_40FA4C  +
push dword_431050  +
call sub_414CC9  +
pop ecx  +
pop ecx  +
cmp dword ptr [edi+esi*8] 0 +
jz loc_40FA10  +
cmp dword ptr [edi+esi*8+4] 0 +
jbe loc_40FA44  +
push dword ptr [edi+esi*8]  +
push offset aS_0  +
push dword_431050  +
call sub_414CC9  +
add esp 0Ch +
inc esi  +
cmp esi [ebp+0Ch] +
jl loc_40F9E7  +
pop edi  +
push offset asc_40E080  +
push dword_431050  +
call sub_414CC9  +
pop ecx  +
pop ecx  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
call sub_40E206  +
int 3  +
nop   +
nop   +
and [eax] al +
push ecx  +
cmp byte_431054 0 +
cmp dword_431050 0 +
mov ecx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
lea edx [ecx+2] +
xor ebx ebx +
mov ax [ecx] +
add ecx 2 +
cmp ax bx +
jnz loc_40FC0E  +
sub ecx edx +
sar ecx 1 +
lea edi [ecx+1] +
lea eax [edi+edi] +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_40FC7B  +
push [ebp+arg_0]  +
push edi  +
push esi  +
call sub_4024D2  +
push 14h  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
test eax eax +
jz loc_40FC66  +
mov [eax] esi +
mov [eax+8] ebx +
mov [eax+4] ebx +
mov [eax+10h] ebx +
mov [eax+0Ch] ebx +
jmp loc_40FC68  +
mov eax ebx +
test eax eax +
jnz loc_40FC8B  +
push esi  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov ecx nBufferMax +
push ebx  +
push 2  +
call sub_40E548  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
cmp [ebp+lpMem] 0 +
call sub_4037FC  +
push ecx  +
sub esp 2Ch +
and esp 0FFFFFFF8h +
push ecx  +
push ebx  +
push esi  +
push edi  +
or ebx 0FFFFFFFFh +
mov edi offset byte_430030 +
push ebx  +
push 1  +
push 2715h  +
push edi  +
call sub_40EB5B  +
push ebx  +
push 1  +
push 2719h  +
push edi  +
call sub_40EB5B  +
push offset dword_40E044  +
push edi  +
call sub_40ECB7  +
add esp 28h +
mov esi 271Ah +
push ebx  +
push 1  +
push esi  +
push edi  +
call sub_40EB5B  +
add esp 10h +
inc esi  +
cmp esi 279Ch +
jle loc_40FF79  +
push offset dword_40E044  +
push edi  +
call sub_40ECB7  +
push ebx  +
xor esi esi +
inc esi  +
push esi  +
push 27A6h  +
push edi  +
call sub_40EB5B  +
push ebx  +
push esi  +
push 27A7h  +
push edi  +
call sub_40EB5B  +
push ebx  +
push esi  +
push 27ABh  +
push edi  +
call sub_40EB5B  +
push ebx  +
push esi  +
push 27ACh  +
push edi  +
call sub_40EB5B  +
add esp 48h +
push ebx  +
push esi  +
push 27B0h  +
push edi  +
call sub_40EB5B  +
push ebx  +
push esi  +
push 27B1h  +
push edi  +
call sub_40EB5B  +
push offset dword_40E044  +
push edi  +
call sub_40ECB7  +
add esp 28h +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 2Ch +
push ebx  +
mov eax ecx +
mov ebx edx +
mov [esp+8] eax +
push esi  +
push edi  +
cmp eax 1 +
jge loc_41002C  +
mov byte_43128D 1 +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
xor edi edi +
mov [esp+1Ch] edi +
mov eax edi +
mov [esp+18h] eax +
push 2Dh  +
pop esi  +
test ecx ecx +
jle loc_41013D  +
mov edi ebx +
mov esi [edi] +
mov edx [edi+4] +
mov [esp+20h] esi +
mov [esp+14h] edx +
mov [esp+24h] edx +
test esi esi +
jz loc_4100F3  +
push 0  +
lea ecx [esp+24h] +
call sub_411604  +
push 2Dh  +
pop ecx  +
cmp ax cx +
jz loc_410084  +
push 0  +
lea ecx [esp+24h] +
call sub_411604  +
push 2Fh  +
pop ecx  +
cmp ax cx +
jnz loc_4100E7  +
push 1  +
lea eax [esp+2Ch] +
push eax  +
lea ecx [esp+28h] +
call sub_401940  +
mov esi [esp+20h] +
mov eax [esp+24h] +
mov [esp+14h] eax +
test esi esi +
jz loc_4100AC  +
test eax eax +
jz loc_410288  +
push 0Ah  +
push offset aBugreport  +
push esi  +
call sub_416A42  +
add esp 0Ch +
test eax eax +
jnz loc_4100E7  +
push 0Ah  +
lea eax [esp+34h] +
push eax  +
lea ecx [esp+28h] +
call sub_40175D  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_401247  +
and dword ptr [edi] 0 +
and dword ptr [edi+4] 0 +
mov [esp+18h] eax +
jmp loc_4100EB  +
mov eax [esp+18h] +
mov ecx [esp+10h] +
mov edx [esp+14h] +
inc dword ptr [esp+1Ch]  +
add edi 8 +
cmp [esp+1Ch] ecx +
jl loc_410045  +
xor edi edi +
test eax eax +
jz loc_41013A  +
cmp [eax] di +
jnz loc_41012E  +
test esi esi +
jz loc_41011B  +
test edx edx +
jz loc_410288  +
push esi  +
push edi  +
push 8  +
push offset byte_430030  +
call sub_40E86E  +
add esp 10h +
jmp loc_41013A  +
push ecx  +
push ebx  +
push dword ptr [esp+18h]  +
push eax  +
call sub_40F624  +
push 2Dh  +
pop esi  +
cmp dword ptr [esp+10h] 0 +
mov [esp+1Ch] edi +
jle loc_410025  +
mov ecx [ebx] +
mov eax [ebx+4] +
mov [esp+20h] ecx +
mov [esp+24h] eax +
test ecx ecx +
jz loc_41026A  +
push edi  +
lea ecx [esp+24h] +
call sub_411604  +
cmp ax si +
jz loc_410186  +
push edi  +
lea ecx [esp+24h] +
call sub_411604  +
push 2Fh  +
pop ecx  +
cmp ax cx +
jnz loc_41026A  +
push 1  +
lea eax [esp+34h] +
push eax  +
lea ecx [esp+28h] +
call sub_401940  +
mov esi [esp+20h] +
mov edi [esp+24h] +
test esi esi +
jz loc_4101AA  +
test edi edi +
jz loc_410288  +
push offset aNologo  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_4101C7  +
mov byte_43128E 1 +
jmp loc_41025F  +
test esi esi +
jz loc_4101D3  +
test edi edi +
jz loc_410288  +
push offset dword_4102B8  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_410201  +
test esi esi +
jz loc_4101F0  +
test edi edi +
jz loc_410288  +
push offset aHelp  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_41020A  +
mov byte_43128D 1 +
jmp loc_41025F  +
test esi esi +
jz loc_410212  +
test edi edi +
jz loc_410288  +
push offset aBugreport_0  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_41023F  +
test esi esi +
jz loc_41022B  +
test edi edi +
jz loc_410288  +
push esi  +
push 1  +
push 8  +
push offset byte_430030  +
call sub_40E86E  +
add esp 10h +
jmp loc_41025F  +
test esi esi +
jz loc_410247  +
test edi edi +
jz loc_410288  +
push offset aFullpaths  +
push esi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_410268  +
mov byte_4349E3 1 +
xor edi edi +
mov [ebx] edi +
mov [ebx+4] edi +
jmp loc_41026A  +
xor edi edi +
mov eax [esp+1Ch] +
add ebx 8 +
inc eax  +
mov [esp+1Ch] eax +
cmp eax [esp+10h] +
jge loc_410025  +
push 2Dh  +
pop esi  +
jmp loc_41014C  +
***
call sub_40E206  +
int 3  +
nop   +
nop   +
push edi  +
mov edi ecx +
jmp loc_410322  +
cmp dword ptr [esi+4] 0 +
jz loc_410311  +
push edi  +
push dword ptr [esi+4]  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_41032B  +
push edi  +
push dword ptr [esi]  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_41032B  +
mov esi [esi+0Ch] +
test esi esi +
jnz loc_4102FC  +
xor al al +
pop edi  +
pop esi  +
retn   +
push edi  +
push 2  +
push 3Ch  +
push offset byte_430030  +
call sub_40E86E  +
add esp 10h +
mov al 1 +
jmp loc_410328  +
***
push ebp  +
mov ebp esp +
sub esp 224h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx ecx +
mov [ebp-211h] dl +
push esi  +
push edi  +
cmp ebx 103h +
jl loc_41037C  +
xor eax eax +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn 8  +
***
push ebx  +
lea eax [ebp-220h] +
push eax  +
lea ecx [ebp+8] +
call sub_40175D  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_411D30  +
mov esi eax +
xor eax eax +
mov [ebp-218h] eax +
lea eax [ebp-218h] +
push eax  +
push offset loc_410610  +
push esi  +
call sub_416BF1  +
add esp 0Ch +
test esi esi +
jz loc_4105A4  +
xor edi edi +
cmp [esi] di +
jz loc_4105A4  +
push ecx  +
push ecx  +
mov ecx esp +
lea edx [ebp-210h] +
push edi  +
push eax  +
mov [ecx] edx +
mov dword ptr [ecx+4] 104h +
call sub_402AE1  +
test al al +
jz loc_410367  +
push 10h  +
push edi  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov esi eax +
test esi esi +
jz loc_41040C  +
xor eax eax +
mov [esi+0Ch] eax +
mov [esi+4] eax +
mov [esi] eax +
mov [esi+8] ax +
jmp loc_41040E  +
mov esi edi +
mov al [ebp-211h] +
lea ecx [ebp-210h] +
mov [esi+9] al +
mov [esi+0Ch] edi +
call sub_403EFA  +
mov [esi+4] eax +
test eax eax +
jnz loc_410446  +
push edi  +
push 2  +
mov ecx offset byte_430030 +
call sub_40E548  +
push ecx  +
mov ecx esi +
call sub_410624  +
jmp loc_410367  +
***
lea eax [ebp-218h] +
push eax  +
push offset loc_410610  +
push edi  +
call sub_416BF1  +
add esp 0Ch +
test eax eax +
jnz loc_4104A7  +
lea eax [ebp-210h] +
push 5Ch  +
push eax  +
call loc_416CC6  +
pop ecx  +
pop ecx  +
lea ecx [ebp-210h] +
test eax eax +
jz loc_41047C  +
lea ecx [eax+2] +
call sub_403EFA  +
xor ebx ebx +
mov [esi] eax +
cmp eax ebx +
jnz loc_41054E  +
push ecx  +
mov ecx esi +
call sub_410624  +
push ebx  +
push 2  +
mov ecx offset byte_430030 +
call sub_40E548  +
jmp loc_410367  +
***
mov ecx eax +
call sub_403EFA  +
mov [esi] eax +
test eax eax +
jnz loc_4104BF  +
push ecx  +
mov ecx esi +
call sub_410624  +
push edi  +
jmp loc_410496  +
***
lea eax [ebp-218h] +
push eax  +
push offset loc_410610  +
push edi  +
call sub_416BF1  +
add esp 0Ch +
mov edi eax +
cmp byte ptr [ebp-211h] 0 +
jnz loc_41054A  +
test edi edi +
jnz loc_410501  +
lea ecx [ebp-210h] +
call sub_403EFA  +
mov [esi+0Ch] eax +
test eax eax +
jnz loc_41054E  +
push ecx  +
mov ecx esi +
call sub_410624  +
push 0  +
jmp loc_410496  +
***
push ecx  +
push ecx  +
mov eax esp +
lea ecx [ebp-210h] +
push 1  +
push edi  +
mov [eax] ecx +
mov dword ptr [eax+4] 104h +
call sub_402AE1  +
test al al +
jz loc_4104F5  +
lea ecx [ebp-210h] +
call sub_403EFA  +
mov [esi+0Ch] eax +
test eax eax +
jz loc_4104F5  +
lea eax [ebp-218h] +
push eax  +
push offset loc_410610  +
push 0  +
call sub_416BF1  +
add esp 0Ch +
mov edi eax +
test edi edi +
jnz loc_410554  +
mov byte ptr [esi+8] 1 +
jmp loc_410568  +
push offset aPrivate  +
push edi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_41056F  +
mov [esi+8] al +
mov eax esi +
jmp loc_410369  +
***
xor eax eax +
lea ecx [ebp+8] +
push eax  +
lea eax [ebx-1] +
push eax  +
call sub_401AF0  +
cmp dword ptr [ebp+8] 0 +
jz loc_41058A  +
cmp dword ptr [ebp+0Ch] 0 +
jbe loc_410603  +
push edi  +
push dword ptr [ebp+8]  +
push 1  +
push 0Ch  +
push offset byte_430030  +
call sub_40E86E  +
add esp 10h +
jmp loc_41043A  +
***
mov ecx [ebp+8] +
test ecx ecx +
jz loc_4105B1  +
cmp dword ptr [ebp+0Ch] 0 +
jbe loc_410603  +
lea eax [ebx+1] +
push eax  +
lea eax [ecx-2] +
push eax  +
lea eax [ebp-210h] +
push 104h  +
push eax  +
call sub_41480E  +
lea ebx ds:2[ebx*2] +
add esp 10h +
cmp ebx 208h +
jnb loc_410608  +
xor eax eax +
mov [ebp+ebx-210h] ax +
lea eax [ebp-210h] +
push eax  +
push 1  +
push 8  +
push offset byte_430030  +
call sub_40E86E  +
add esp 10h +
jmp loc_410367  +
***
call sub_40E206  +
call sub_414447  +
int 3  +
nop   +
nop   +
jl $+2  +
push edi  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push 0Ah  +
push [ebp+arg_4]  +
push esi  +
call sub_416F8F  +
movzx ecx word ptr [esi] +
mov edi eax +
push ecx  +
call sub_4169EA  +
add esp 10h +
test eax eax +
jnz loc_4106BE  +
call sub_416890  +
mov dword ptr [eax] 22h +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov eax [ebp+arg_4] +
test eax eax +
jz loc_410745  +
push esi  +
cmp eax 403FDh +
jnz loc_41073D  +
mov edx [ebp+arg_8] +
imul esi edx +
mov ecx ds:dword_4041D0[esi] +
cmp ecx edx +
jnz loc_41073D  +
shl edx 4 +
cmp word_4312B0[edx] 0 +
jnz loc_410722  +
push ecx  +
call sub_40E216  +
test al al +
jnz loc_410722  +
push ds:off_4041DC[esi]  +
push 1  +
push 20h  +
push offset byte_430030  +
call sub_40E86E  +
add esp 10h +
jmp loc_410739  +
push ecx  +
call sub_40E216  +
test al al +
jz loc_410739  +
cmp ecx 13h +
ja loc_410739  +
push ecx  +
xor cl cl +
call sub_40E333  +
xor eax eax +
jmp loc_410744  +
mov ecx eax +
call sub_410763  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov eax [ebp+arg_0] +
sub esp 24h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov eax ecx +
mov [ebp+var_20] eax +
push esi  +
push edi  +
test eax eax +
jz loc_4108D2  +
mov esi offset dword_4108E4 +
lea edi [ebp+var_14] +
lea eax [ebp+perrinfo] +
xor ebx ebx +
push eax  +
push ebx  +
movs   +
mov [ebp+perrinfo] ebx +
mov [ebp+var_1C] ebx +
movs   +
movs   +
movs   +
call ds:GetErrorInfo  +
test eax eax +
jnz loc_4107CD  +
mov eax [ebp+perrinfo] +
lea edx [ebp+var_14] +
push edx  +
push eax  +
mov ecx [eax] +
mov edi [ecx+0Ch] +
mov ecx edi +
call ds:off_43520C  +
call edi  +
test eax eax +
jns loc_4107D3  +
mov esi offset dword_4108E4 +
lea edi [ebp+var_14] +
movs   +
movs   +
movs   +
movs   +
js loc_41089B  +
mov eax [ebp+perrinfo] +
test eax eax +
jz loc_4108A3  +
mov ecx [eax] +
lea edx [ebp+var_1C] +
push edx  +
push eax  +
mov esi [ecx+14h] +
mov ecx esi +
call ds:off_43520C  +
call esi  +
mov esi [ebp+var_20] +
test eax eax +
js loc_41089E  +
mov eax esi +
and eax 1FFF0000h +
cmp eax 40000h +
jnz loc_41089E  +
lea edx [ebp+var_14] +
mov edi offset dword_4108F4 +
mov ecx ebx +
mov eax [edx+ecx*4] +
cmp eax [edi+ecx*4] +
jnz loc_410829  +
inc ecx  +
cmp ecx 4 +
jz loc_410841  +
jmp loc_410819  +
lea edx [ebp+var_14] +
mov edi offset dword_4037EC +
mov ecx ebx +
mov eax [edx+ecx*4] +
cmp eax [edi+ecx*4] +
jnz loc_41089E  +
inc ecx  +
cmp ecx 4 +
jnz loc_410833  +
push offset sub_410750  +
push 8  +
push 4Ch  +
mov edi (offset a9JhiFhs+10h) +
mov word ptr [ebp+var_24] si +
lea eax [ebp+var_24] +
push edi  +
push eax  +
call sub_417338  +
mov ecx eax +
add esp 14h +
test ecx ecx +
jz loc_410896  +
push [ebp+var_1C]  +
sub ecx edi +
xor eax eax +
sar ecx 3 +
sub esp 10h +
cmp ds:word_401422[ecx*8] bx +
push ebx  +
setnle al  +
inc eax  +
push eax  +
movsx eax word ptr ds:(a9JhiFhs+10h)[ecx*8] +
mov ecx offset byte_430030 +
push eax  +
call sub_40E5BE  +
jmp loc_4108B0  +
push [ebp+perrinfo]  +
jmp loc_4108A7  +
mov esi [ebp+var_20] +
mov eax [ebp+perrinfo] +
jmp loc_4108A6  +
mov esi [ebp+var_20] +
push eax  +
push ebx  +
call ds:SetErrorInfo  +
mov ebx esi +
push [ebp+var_1C]  +
call ds:SysFreeString  +
mov ecx [ebp+perrinfo] +
test ecx ecx +
jz loc_4108D0  +
mov edx [ecx] +
push ecx  +
mov esi [edx+8] +
mov ecx esi +
call ds:off_43520C  +
call esi  +
mov eax ebx +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 41Ch +
sub esp 40h +
sub esp 1Ch +
sub esp 86Ch +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov [ebp+var_810] ecx +
push ecx  +
push dword_431298  +
mov edi edx +
mov [ebp+var_864] ebx +
mov [ebp+var_80C] edi +
mov [ebp+var_83C] ebx +
mov [ebp+var_818] ebx +
mov [ebp+var_840] 20000000h +
mov [ebp+var_868] ebx +
call sub_401306  +
mov esi [edi] +
lea eax [ebp+var_868] +
push eax  +
lea eax [ebp+var_818] +
push eax  +
mov ecx [esi+10h] +
lea eax [ebp+var_864] +
push eax  +
push ebx  +
push ebx  +
push dword_431298  +
push edi  +
call ds:off_43520C  +
call dword ptr [esi+10h]  +
mov ebx eax +
test ebx ebx +
js loc_411586  +
cmp [ebp+var_818] 0 +
jz loc_41156D  +
cmp [ebp+var_868] 0 +
jz loc_41156D  +
mov esi [edi] +
lea eax [ebp+var_83C] +
push eax  +
push 0  +
push [ebp+var_864]  +
mov ecx [esi+20h] +
push [ebp+var_810]  +
push edi  +
call ds:off_43520C  +
call dword ptr [esi+20h]  +
mov ebx eax +
test ebx ebx +
js loc_411586  +
mov eax [ebp+var_818] +
lea edx [ebp+var_840] +
push edx  +
push eax  +
mov ecx [eax] +
mov esi [ecx+30h] +
mov ecx esi +
call ds:off_43520C  +
call esi  +
mov edi eax +
test edi edi +
js loc_411588  +
cmp [ebp+var_818] 0 +
mov [ebp+var_814] 1 +
jz loc_411474  +
cmp [ebp+var_83C] 0 +
jz loc_411474  +
lea eax [ebp+pvarg] +
xor ebx ebx +
push eax  +
mov [ebp+var_824] ebx +
mov [ebp+var_820] ebx +
call ds:VariantInit  +
lea ecx [ebp+var_820] +
mov [ebp+var_858] ebx +
push ecx  +
lea ecx [ebp+var_860] +
mov [ebp+var_854] ebx +
push ecx  +
push ebx  +
push ebx  +
xor eax eax +
mov [ebp+var_850] ebx +
push ebx  +
mov [ebp+var_860] eax +
lea ecx [ebp+var_824] +
push ecx  +
mov [ebp+var_85C] eax +
mov eax [ebp+var_818] +
push ebx  +
push ebx  +
push [ebp+var_840]  +
mov [ebp+var_84C] ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_844] ebx +
mov esi [eax] +
push eax  +
mov ecx [esi+0Ch] +
call ds:off_43520C  +
call dword ptr [esi+0Ch]  +
mov edi eax +
test edi edi +
js loc_411474  +
mov eax [ebp+var_844] +
push 0Ch  +
pop edx  +
test eax eax +
jz loc_410FD9  +
xor ecx ecx +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+lpMem] eax +
test eax eax +
jz loc_41103C  +
mov eax [ebp+var_84C] +
test eax eax +
jz loc_41100A  +
push 4  +
xor ecx ecx +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_850] eax +
test eax eax +
jz loc_41103C  +
mov eax [ebp+var_854] +
test eax eax +
jz loc_411046  +
push 2  +
xor ecx ecx +
inc eax  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapAlloc  +
mov [ebp+var_858] eax +
test eax eax +
jnz loc_411046  +
mov edi 8007000Eh +
jmp loc_411588  +
mov eax [ebp+var_818] +
lea ecx [ebp+var_860] +
push ebx  +
push ecx  +
push ebx  +
mov esi [eax] +
push ebx  +
push ebx  +
push ebx  +
mov ecx [esi+0Ch] +
push ebx  +
push ebx  +
push [ebp+var_840]  +
push eax  +
call ds:off_43520C  +
call dword ptr [esi+0Ch]  +
mov edi eax +
test edi edi +
js loc_411358  +
push 8  +
pop esi  +
cmp word_4312E0 bx +
jnz loc_41116A  +
mov [ebp+var_86C] ebx +
cmp [ebp+var_844] ebx +
jbe loc_41116A  +
mov ecx ebx +
mov [ebp+var_81C] ebx +
test edi edi +
js loc_411168  +
mov eax [ebp+lpMem] +
push dword ptr [ecx+eax+8]  +
push dword ptr [ecx+eax+4]  +
push dword ptr [ecx+eax]  +
lea eax [ebp+var_808] +
push offset aD_D_D  +
push 400h  +
push eax  +
call sub_411B96  +
add esp 18h +
mov word ptr [ebp+pvarg.anonymous_0] si +
lea eax [ebp+var_808] +
push eax  +
call ds:SysAllocString  +
mov ecx [ebp+var_810] +
lea esi [ebp+pvarg] +
sub esp 10h +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
mov eax [ebp+var_80C] +
mov edi esp +
push 3  +
mov ebx [eax] +
movs   +
push ecx  +
push ecx  +
mov ecx [ebx+4Ch] +
movs   +
push eax  +
movs   +
movs   +
call ds:off_43520C  +
call dword ptr [ebx+4Ch]  +
mov edi eax +
test edi edi +
js loc_411130  +
mov cl byte ptr [ebp+var_814] +
push 3  +
call sub_40E333  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
mov eax [ebp+var_86C] +
mov ecx [ebp+var_81C] +
inc eax  +
add ecx 0Ch +
mov [ebp+var_86C] eax +
push 8  +
mov [ebp+var_81C] ecx +
pop esi  +
cmp eax [ebp+var_844] +
jb loc_4110A3  +
xor ebx ebx +
cmp word_4312F0 0 +
jnz loc_411207  +
test edi edi +
js loc_411207  +
cmp [ebp+var_84C] 0 +
mov ecx ebx +
push 13h  +
pop eax  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
mov [ebp+var_81C] ebx +
jbe loc_411207  +
test edi edi +
js loc_411205  +
mov eax [ebp+var_850] +
lea esi [ebp+pvarg] +
sub esp 10h +
mov edi esp +
mov eax [eax+ecx*4] +
mov ecx [ebp+var_810] +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
mov eax [ebp+var_80C] +
movs   +
push 4  +
mov ebx [eax] +
movs   +
movs   +
movs   +
pop esi  +
push esi  +
push ecx  +
push ecx  +
mov ecx [ebx+4Ch] +
push eax  +
call ds:off_43520C  +
call dword ptr [ebx+4Ch]  +
mov edi eax +
test edi edi +
js loc_4111F0  +
mov cl byte ptr [ebp+var_814] +
push esi  +
call sub_40E333  +
mov ecx [ebp+var_81C] +
inc ecx  +
mov [ebp+var_81C] ecx +
cmp ecx [ebp+var_84C] +
jb loc_41119B  +
xor ebx ebx +
cmp word_431300 0 +
jnz loc_411296  +
test edi edi +
js loc_411296  +
cmp [ebp+var_854] 0 +
jbe loc_411296  +
mov eax [ebp+var_858] +
test eax eax +
jz loc_411296  +
cmp [eax] bx +
jz loc_411296  +
push 8  +
pop ecx  +
push eax  +
mov word ptr [ebp+pvarg.anonymous_0] cx +
call ds:SysAllocString  +
mov ecx [ebp+var_810] +
lea esi [ebp+pvarg] +
sub esp 10h +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
mov eax [ebp+var_80C] +
mov edi esp +
push 5  +
mov ebx [eax] +
movs   +
push ecx  +
push ecx  +
mov ecx [ebx+4Ch] +
movs   +
push eax  +
movs   +
movs   +
call ds:off_43520C  +
call dword ptr [ebx+4Ch]  +
mov edi eax +
test edi edi +
js loc_411289  +
mov cl byte ptr [ebp+var_814] +
push 5  +
call sub_40E333  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
cmp word_431310 0 +
jnz loc_411358  +
test edi edi +
js loc_411358  +
movzx eax word ptr [ebp+var_85C+2] +
push eax  +
movzx eax word ptr [ebp+var_85C] +
push eax  +
movzx eax word ptr [ebp+var_860+2] +
push eax  +
movzx eax word ptr [ebp+var_860] +
push eax  +
push offset aHu_Hu_Hu_Hu  +
lea eax [ebp+var_808] +
push 400h  +
push eax  +
call sub_411B96  +
add esp 1Ch +
push 8  +
pop eax  +
mov word ptr [ebp+pvarg.anonymous_0] ax +
lea eax [ebp+var_808] +
push eax  +
call ds:SysAllocString  +
sub esp 10h +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
mov eax [ebp+var_80C] +
lea esi [ebp+pvarg] +
mov edi esp +
push 6  +
mov ebx [eax] +
mov eax [ebp+var_810] +
movs   +
push eax  +
mov ecx [ebx+4Ch] +
push eax  +
movs   +
movs   +
movs   +
mov esi [ebp+var_80C] +
push esi  +
call ds:off_43520C  +
call dword ptr [ebx+4Ch]  +
mov edi eax +
test edi edi +
js loc_411349  +
mov cl byte ptr [ebp+var_814] +
push 6  +
call sub_40E333  +
lea eax [ebp+pvarg] +
push eax  +
call ds:VariantClear  +
jmp loc_41135E  +
mov esi [ebp+var_80C] +
cmp word_431390 0 +
jnz loc_4113BF  +
mov ebx [esi] +
lea esi [ebp+pvarg] +
push 13h  +
pop eax  +
sub esp 10h +
mov word ptr [ebp+pvarg.anonymous_0] ax +
mov eax [ebp+var_824] +
mov edi esp +
mov ecx [ebx+4Ch] +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
mov eax [ebp+var_810] +
movs   +
push 0Eh  +
push eax  +
push eax  +
movs   +
movs   +
movs   +
mov esi [ebp+var_80C] +
push esi  +
call ds:off_43520C  +
call dword ptr [ebx+4Ch]  +
mov edi eax +
test edi edi +
js loc_4113BF  +
mov cl byte ptr [ebp+var_814] +
push 0Eh  +
call sub_40E333  +
cmp word_4313A0 0 +
jnz loc_411420  +
mov ebx [esi] +
lea esi [ebp+pvarg] +
push 13h  +
pop eax  +
sub esp 10h +
mov word ptr [ebp+pvarg.anonymous_0] ax +
mov eax [ebp+var_820] +
mov edi esp +
mov ecx [ebx+4Ch] +
mov dword ptr [ebp+pvarg.anonymous_0+8] eax +
mov eax [ebp+var_810] +
movs   +
push 0Fh  +
push eax  +
push eax  +
mov eax [ebp+var_80C] +
movs   +
push eax  +
movs   +
movs   +
call ds:off_43520C  +
call dword ptr [ebx+4Ch]  +
mov edi eax +
test edi edi +
js loc_411420  +
mov cl byte ptr [ebp+var_814] +
push 0Fh  +
call sub_40E333  +
xor ebx ebx +
cmp [ebp+lpMem] ebx +
jz loc_41143E  +
push [ebp+lpMem]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
cmp [ebp+var_850] 0 +
jz loc_41145B  +
push [ebp+var_850]  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
mov eax [ebp+var_858] +
test eax eax +
jz loc_411474  +
push eax  +
push ebx  +
call ds:GetProcessHeap  +
push eax  +
call ds:HeapFree  +
xor ecx ecx +
mov ebx ecx +
test edi edi +
js loc_411588  +
mov eax ebx +
shl eax 4 +
cmp word_4312B0[eax] cx +
jnz loc_411562  +
push 2  +
pop eax  +
cmp ebx eax +
jz loc_411562  +
cmp ebx 3 +
jz loc_411562  +
push 4  +
pop eax  +
cmp ebx eax +
jz loc_411562  +
cmp ebx 5 +
jz loc_411562  +
cmp ebx 6 +
jz loc_411562  +
cmp ebx 0Eh +
jz loc_411562  +
cmp ebx 0Fh +
jz loc_411562  +
mov eax [ebp+var_83C] +
mov [ebp+var_824] ecx +
mov [ebp+var_820] ecx +
lea ecx [ebp+var_820] +
push ecx  +
mov esi [eax] +
lea ecx [ebp+var_824] +
push ecx  +
imul ecx ebx +
mov esi [esi+0F0h] +
push ds:off_4041DC[ecx]  +
mov ecx esi +
push [ebp+var_840]  +
push eax  +
call ds:off_43520C  +
call esi  +
mov edi eax +
test edi edi +
jnz loc_411560  +
cmp ebx 12h +
jnz loc_411527  +
push 6  +
pop esi  +
jmp loc_411529  +
mov esi ebx +
push [ebp+var_80C]  +
mov edx [ebp+var_820] +
push [ebp+var_810]  +
mov ecx [ebp+var_824] +
push esi  +
call sub_410A52  +
mov edi eax +
test edi edi +
js loc_411560  +
push 13h  +
pop eax  +
cmp esi eax +
ja loc_411560  +
mov cl byte ptr [ebp+var_814] +
push esi  +
call sub_40E333  +
xor ecx ecx +
inc ebx  +
cmp ebx 14h +
jge loc_411588  +
jmp loc_411478  +
push dword_431298  +
xor ebx ebx +
inc ebx  +
push ebx  +
push 32h  +
push offset byte_430030  +
call sub_40E86E  +
add esp 10h +
mov edi ebx +
mov eax [ebp+var_818] +
test eax eax +
jz loc_4115A2  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_43520C  +
call esi  +
mov eax [ebp+var_83C] +
test eax eax +
jz loc_4115BC  +
mov ecx [eax] +
push eax  +
mov esi [ecx+8] +
mov ecx esi +
call ds:off_43520C  +
call esi  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ecx] +
mov edx [ecx] +
push ebx  +
push esi  +
push ecx  +
mov eax [ecx] +
mov dl [eax] +
test dl dl +
js loc_4119D2  +
inc eax  +
movzx edx dl +
mov [ecx] eax +
jmp loc_4119D9  +
call sub_4119FC  +
mov edx eax +
mov ecx edx +
shr edx 2 +
and ecx 3 +
or edx ds:dword_4119EC[ecx*4] +
mov eax edx +
retn   +
***
mov edi ecx +
push [ebp+lpMem]  +
push ecx  +
push ebx  +
mov eax [ebp+arg_0] +
cmp byte ptr [esi+4] 0 +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_4] +
push esi  +
sub esp 0Ch +
push ecx  +
sub esp 424h +
call sub_401F38  +
call sub_401F38  +
mov esi ecx +
xor ecx ecx +
mov [ebp-24h] ecx +
mov eax ecx +
mov [ebp-20h] ecx +
mov [ebp-10h] eax +
mov [ebp-1Ch] ecx +
mov [ebp-4] ecx +
xor ebx ebx +
mov edi ecx +
inc ebx  +
cmp [esi+4] edi +
jz loc_41204B  +
push ecx  +
mov ecx esi +
call sub_412575  +
cmp al 0EFh +
jz loc_412026  +
cmp al 0FEh +
jz loc_412009  +
cmp al 0FFh +
jz loc_411FE6  +
cmp al 4Dh +
jnz loc_41204B  +
cmp [esi+4] ebx +
jbe loc_41204B  +
push ebx  +
mov ecx esi +
call sub_412575  +
cmp al 5Ah +
jnz loc_41204B  +
push 5  +
pop ebx  +
mov edi 80004005h +
jmp loc_4122D3  +
cmp dword ptr [esi+4] 2 +
jb loc_41204B  +
test byte ptr [esi+4] 1 +
jnz loc_41204B  +
push ebx  +
mov ecx esi +
call sub_412575  +
cmp al 0FEh +
jnz loc_41204B  +
push 2  +
mov edx [ebp-10h] +
pop edi  +
jmp loc_41209C  +
cmp dword ptr [esi+4] 2 +
jb loc_41204B  +
test byte ptr [esi+4] 1 +
jnz loc_41204B  +
push ebx  +
mov ecx esi +
call sub_412575  +
cmp al 0FFh +
jnz loc_41204B  +
push 2  +
pop ebx  +
jmp loc_411FFE  +
cmp dword ptr [esi+4] 3 +
jb loc_41204B  +
push ebx  +
mov ecx esi +
call sub_412575  +
cmp al 0BBh +
jnz loc_41204B  +
push 2  +
mov ecx esi +
call sub_412575  +
cmp al 0BFh +
jnz loc_41204B  +
push 3  +
pop ebx  +
push ebx  +
jmp loc_412000  +
or dword ptr [ebp-14h] 0FFFFFFFFh +
and [ebp-18h] edi +
mov eax [esi+4] +
push 4  +
pop ebx  +
test eax eax +
js loc_41205F  +
mov [ebp-14h] eax +
cmp [esi] edi +
jz loc_41206C  +
test eax eax +
jnz loc_41206C  +
call sub_40E206  +
push 0  +
lea eax [ebp-18h] +
push eax  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [esi]  +
call sub_42AA77  +
mov eax [ebp-18h] +
and eax 80000001h +
cmp eax 1 +
jnz loc_412091  +
push 3  +
pop ebx  +
mov edx edi +
jmp loc_41209C  +
call ds:GetACP  +
mov edx eax +
mov [ebp-10h] edx +
mov ecx [esi+4] +
cmp ecx edi +
jb loc_412067  +
ja loc_4120AE  +
xor ecx ecx +
mov [esi+4] ecx +
mov [esi] ecx +
jmp loc_4120B7  +
add [esi] edi +
sub ecx edi +
mov [esi+4] ecx +
xor ecx ecx +
test ebx ebx +
jle loc_4122A4  +
cmp ebx 2 +
jle loc_412240  +
cmp ebx 3 +
jz loc_4121B4  +
cmp ebx 4 +
jnz loc_4122A4  +
mov eax [esi+4] +
test eax eax +
jnz loc_4120FE  +
push 1  +
lea ecx [ebp-24h] +
call sub_401147  +
mov edi eax +
test edi edi +
js loc_4122D3  +
push 0  +
push 0  +
jmp loc_41229A  +
cmp dword ptr [esi] 0 +
jz loc_41210B  +
test eax eax +
jz loc_412067  +
push ecx  +
push ecx  +
push eax  +
push dword ptr [esi]  +
push ecx  +
push edx  +
call ds:MultiByteToWideChar  +
mov edi eax +
test edi edi +
jnz loc_41214F  +
call ds:GetLastError  +
test eax eax +
jz loc_41214F  +
call ds:GetLastError  +
mov edi eax +
test edi edi +
jle loc_41213F  +
movzx edi di +
or edi 80070000h +
test edi edi +
js loc_4122D3  +
mov edi 8000FFFFh +
jmp loc_4122D3  +
lea eax [edi+1] +
push eax  +
lea ecx [ebp-24h] +
call sub_401147  +
mov edi eax +
test edi edi +
js loc_4122D3  +
mov ecx [ebp-24h] +
mov eax [ebp-20h] +
test ecx ecx +
jz loc_412177  +
test eax eax +
jz loc_412067  +
cmp dword ptr [esi] 0 +
jz loc_412186  +
cmp dword ptr [esi+4] 0 +
jbe loc_412067  +
push eax  +
mov eax [ebp-10h] +
push ecx  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
push 0  +
push eax  +
call ds:MultiByteToWideChar  +
test eax eax +
jnz loc_412293  +
call ds:GetLastError  +
test eax eax +
jnz loc_412128  +
jmp loc_412293  +
push ecx  +
call ds:SetLastError  +
cmp dword ptr [esi] 0 +
jz loc_4121CA  +
cmp dword ptr [esi+4] 0 +
jbe loc_412067  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_42ABC0  +
mov edi eax +
test edi edi +
jnz loc_4121E8  +
call ds:GetLastError  +
test eax eax +
jnz loc_412128  +
lea eax [edi+1] +
mov [ebp-18h] eax +
cmp eax edi +
jb loc_412067  +
push eax  +
lea ecx [ebp-24h] +
call sub_401147  +
mov edi eax +
test edi edi +
js loc_4122D3  +
mov eax [ebp-24h] +
test eax eax +
jz loc_41221E  +
mov eax [ebp-20h] +
test eax eax +
jz loc_412067  +
mov eax [ebp-24h] +
cmp dword ptr [esi] 0 +
jz loc_41222D  +
cmp dword ptr [esi+4] 0 +
jbe loc_412067  +
push dword ptr [ebp-18h]  +
push eax  +
push dword ptr [esi+4]  +
push dword ptr [esi]  +
call sub_42ADEF  +
jmp loc_412199  +
mov eax [esi+4] +
lea ecx [ebp-24h] +
shr eax 1 +
inc eax  +
push eax  +
call sub_401147  +
mov edi eax +
test edi edi +
js loc_4122D3  +
cmp ebx 1 +
jnz loc_412265  +
push esi  +
lea ecx [ebp-24h] +
call sub_412670  +
jmp loc_412293  +
mov eax [ebp-24h] +
test eax eax +
jz loc_412276  +
cmp dword ptr [ebp-20h] 0 +
jbe loc_412067  +
cmp dword ptr [esi] 0 +
jz loc_412285  +
cmp dword ptr [esi+4] 0 +
jbe loc_412067  +
push dword ptr [esi+4]  +
push eax  +
push dword ptr [esi]  +
call sub_417478  +
add esp 0Ch +
mov eax [ebp-20h] +
push 0  +
dec eax  +
push eax  +
lea ecx [ebp-24h] +
call sub_401AF0  +
jmp loc_4122A9  +
mov edi 80070057h +
test edi edi +
js loc_4122D3  +
mov esi [ebp+8] +
mov ecx esi +
call sub_401FCB  +
mov eax [ebp-24h] +
mov [esi] eax +
mov eax [ebp-20h] +
mov [esi+4] eax +
mov eax [ebp-1Ch] +
mov [esi+8] eax +
xor eax eax +
mov [ebp-24h] eax +
mov [ebp-20h] eax +
mov [ebp-1Ch] eax +
mov eax [ebp+0Ch] +
mov [eax] ebx +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-24h] +
call sub_401FCB  +
mov eax edi +
call sub_402080  +
retn 8  +
***
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax dword_430000 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+0Ch] +
mov [ebp-8] ecx +
push esi  +
push edi  +
lea ecx [ebx+ebx] +
mov edi edx +
mov eax ecx +
shr eax 1 +
cmp eax ebx +
jnz loc_41243D  +
mov eax ecx +
call sub_402809  +
mov esi esp +
push edi  +
call ds:PathIsURLW  +
test eax eax +
jz loc_41234F  +
cmp dword ptr [ebp+8] 0 +
jz loc_41233C  +
cmp dword ptr [ebp+0Ch] 0 +
jbe loc_41243D  +
push edi  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_4024D2  +
mov al 1 +
jmp loc_412427  +
push edi  +
call ds:PathIsUNCW  +
test eax eax +
jnz loc_41240A  +
cmp word ptr [edi+2] 3Ah +
jz loc_41240A  +
mov ecx [ebp-8] +
push 5Ch  +
pop edx  +
cmp [edi] dx +
jnz loc_4123CF  +
movzx eax word ptr [ecx] +
test ax ax +
jz loc_4123CF  +
cmp ax dx +
jnz loc_4123B7  +
push ecx  +
push ebx  +
push esi  +
call sub_4024D2  +
and dword ptr [ebp-8] 0 +
mov eax esi +
test eax eax +
jz loc_4123C3  +
add eax 2 +
push 5Ch  +
push eax  +
call sub_416FBF  +
pop ecx  +
pop ecx  +
mov ecx [ebp-8] +
inc ecx  +
mov [ebp-8] ecx +
cmp ecx 3 +
jl loc_41238F  +
test eax eax +
jz loc_4123C3  +
xor ecx ecx +
mov [eax] cx +
jmp loc_4123C3  +
push 2  +
push ecx  +
mov edx ebx +
mov ecx esi +
call sub_401B9B  +
push edi  +
mov edx ebx +
mov ecx esi +
call sub_411ACB  +
jmp loc_412412  +
push ecx  +
push ebx  +
push esi  +
call sub_4024D2  +
and dword ptr [ebp-8] 0 +
mov ecx esi +
lea edx [ecx+2] +
mov ax [ecx] +
add ecx 2 +
cmp ax [ebp-8] +
jnz loc_4123E0  +
sub ecx edx +
sar ecx 1 +
push 5Ch  +
pop eax  +
cmp [esi+ecx*2-2] ax +
jz loc_4123C3  +
push offset loc_412444  +
mov edx ebx +
mov ecx esi +
call sub_411ACB  +
jmp loc_4123C3  +
***
push edi  +
push ebx  +
push esi  +
call sub_4024D2  +
push dword ptr [ebp+0Ch]  +
xor dl dl +
mov ecx esi +
push dword ptr [ebp+8]  +
call sub_402842  +
neg eax  +
sbb eax eax +
neg eax  +
lea esp [ebp-18h] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp-4] +
xor ecx ebp +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn 8  +
***
call sub_40E206  +
int 3  +
nop   +
pop esp  +
call sub_401F38  +
push ecx  +
push ecx  +
mov edx [ecx] +
mov edi ecx +
mov edx [ebp+arg_0] +
push ebx  +
int 3  +
***
push ebx  +
mov edx [ebp+arg_4] +
push esi  +
test edx edx +
js loc_412736  +
mov eax 7FFFFFFFh +
sub eax edx +
cmp eax 1 +
jl loc_412736  +
inc edx  +
lea esi [edx+7] +
and esi 0FFFFFFF8h +
cmp edx esi +
jg loc_412736  +
mov eax esi +
mul  [ebp+arg_8] +
test edx edx +
ja loc_412736  +
jb loc_412712  +
cmp eax 0FFFFFFFFh +
ja loc_412736  +
cmp eax 0FFFFFFEFh +
ja loc_412736  +
mov ecx [ecx+4] +
add eax 10h +
push eax  +
push [ebp+dwFlags]  +
call sub_412770  +
mov ecx eax +
test ecx ecx +
jz loc_412736  +
lea eax [esi-1] +
mov [ecx+8] eax +
mov eax ecx +
jmp loc_412738  +
xor eax eax +
pop esi  +
pop ebp  +
retn 0Ch  +
***
test [ebp+arg_0] 1 +
mov eax [ebp+dwFlags] +
test eax eax +
jnz loc_412789  +
push [ebp+dwBytes]  +
push eax  +
push dword ptr [ecx+4]  +
call ds:HeapAlloc  +
jmp loc_4127AE  +
cmp [ebp+dwBytes] 0 +
jnz loc_41279F  +
push eax  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapFree  +
xor eax eax +
jmp loc_4127AE  +
push [ebp+dwBytes]  +
push eax  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapReAlloc  +
pop ebp  +
retn 8  +
***
push [ebp+lpMem]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
push esi  +
call sub_401F38  +
or eax 0FFFFFFFFh +
mov eax [ebp+arg_0] +
mov [ecx] eax +
mov eax ecx +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push dword ptr [ebp+8]  +
lea ecx [ebp-8] +
call sub_4128E3  +
push offset dword_412918  +
mov eax [eax] +
mov [ebp-4] eax +
lea eax [ebp-4] +
push eax  +
call sub_42D4E2  +
int 3  +
nop   +
nop   +
nop   +
cmp dword_4346E8 2 +
mov eax [ebp+arg_0] +
call sub_401E34  +
jmp sub_412A1C  +
***
pop ecx  +
call sub_401E34  +
mov esi [ebp-1Ch] +
mov ebx [ebp-28h] +
mov edi [ebp-20h] +
jmp sub_412B28  +
***
pop ecx  +
retn   +
***
pop ecx  +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_0] +
call sub_401E34  +
mov edi [ebp-1Ch] +
mov esi [ebp-20h] +
jmp sub_412DFC  +
***
test edi edi +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov eax ecx +
sar eax 5 +
and ecx 1Fh +
shl ecx 6 +
add ecx 0Ch +
mov eax dword_433EB0[eax*4] +
add eax ecx +
push eax  +
call ds:LeaveCriticalSection  +
pop ebp  +
retn   +
***
mov eax dword_434AE0 +
push esi  +
push 14h  +
pop esi  +
test eax eax +
jnz loc_412EE4  +
mov eax 200h +
jmp loc_412EEA  +
cmp eax esi +
jge loc_412EEF  +
mov eax esi +
mov dword_434AE0 eax +
push 4  +
push eax  +
call sub_418EFB  +
mov dword_434ADC eax +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_412F20  +
push 4  +
push esi  +
mov dword_434AE0 esi +
call sub_418EFB  +
mov dword_434ADC eax +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_412F20  +
push 1Ah  +
pop eax  +
pop esi  +
retn   +
xor edx edx +
mov ecx offset off_431858 +
mov [edx+eax] ecx +
add ecx 20h +
lea edx [edx+4] +
cmp ecx offset unk_431AD8 +
jge loc_412F3F  +
mov eax dword_434ADC +
jmp loc_412F27  +
xor eax eax +
pop esi  +
retn   +
***
call sub_41673E  +
push esi  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
mov ecx [ebp+arg_0] +
call sub_401E34  +
mov esi [ebp+8] +
mov edi [ebp-1Ch] +
jmp sub_41315C  +
***
pop ecx  +
retn   +
***
push ecx  +
lea eax [ebp+arg_C] +
push eax  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_414AD3  +
add esp 14h +
pop ebp  +
retn   +
***
xor eax eax +
retn   +
***
push 8  +
push offset dword_4132D0  +
call sub_401E34  +
mov esi offset unk_432DD0 +
cmp off_432DC8 esi +
jz loc_4132C3  +
push 0Ch  +
call sub_418D59  +
pop ecx  +
and dword ptr [ebp-4] 0 +
push esi  +
push offset off_432DC8  +
call sub_41C725  +
pop ecx  +
pop ecx  +
mov off_432DC8 eax +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_4132EC  +
call sub_401106  +
retn   +
***
pop ecx  +
cmp [ebp+arg_0] 0 +
jnz loc_413302  +
xor eax eax +
pop ebp  +
retn   +
push ebx  +
push 55h  +
push [ebp+arg_0]  +
call sub_41E6FC  +
mov ebx eax +
pop ecx  +
pop ecx  +
cmp ebx 55h +
jb loc_41331A  +
xor eax eax +
jmp loc_413330  +
lea eax ds:2[ebx*2] +
push edi  +
push eax  +
call sub_418F43  +
mov edi eax +
pop ecx  +
test edi edi +
jnz loc_413333  +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
lea eax [ebx+1] +
push eax  +
push [ebp+arg_0]  +
push eax  +
push edi  +
call sub_41480E  +
add esp 10h +
test eax eax +
jnz loc_41334C  +
mov eax edi +
jmp loc_41332F  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_418D2E  +
int 3  +
***
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+10h] +
push edi  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_4148CC  +
add esp 0Ch +
xor esi esi +
test eax eax +
jnz loc_4133BC  +
lea eax [edi+80h] +
cmp [eax] si +
jz loc_413397  +
push eax  +
push offset loc_4133C8  +
push 2  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_413830  +
add esp 14h +
add edi 100h +
cmp [edi] si +
jz loc_4133B8  +
push edi  +
push offset dword_4133CC  +
push 2  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_413830  +
add esp 14h +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
call sub_418D2E  +
int 3  +
nop   +
pop edi  +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+8] +
xor ebx ebx +
push 1CAh  +
push ebx  +
push edi  +
call sub_40125C  +
mov esi [ebp+0Ch] +
add esp 0Ch +
movzx eax word ptr [esi] +
test ax ax +
jnz loc_4133FE  +
xor eax eax +
jmp loc_4134EB  +
push 2Eh  +
pop ecx  +
cmp ax cx +
jnz loc_413433  +
lea eax [esi+2] +
cmp [eax] bx +
jz loc_413433  +
push 0Fh  +
push eax  +
lea eax [edi+100h] +
push 10h  +
push eax  +
call sub_41480E  +
add esp 10h +
test eax eax +
jnz loc_4134F2  +
mov [edi+11Eh] ax +
jmp loc_4133F7  +
***
mov [ebp-4] ebx +
push offset a__  +
push esi  +
call sub_41E695  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_4134E8  +
lea ecx [esi+eax*2] +
movzx ebx word ptr [ecx] +
mov [ebp-8] ecx +
mov ecx [ebp-4] +
push 2Ch  +
pop edx  +
test ecx ecx +
jnz loc_413476  +
cmp eax 40h +
jnb loc_4134E8  +
push 2Eh  +
pop ecx  +
cmp bx cx +
jz loc_4134E8  +
push eax  +
push esi  +
push 40h  +
push edi  +
jmp loc_4134B0  +
cmp ecx 1 +
jnz loc_413491  +
cmp eax 40h +
jnb loc_4134E8  +
cmp ebx 5Fh +
jz loc_4134E8  +
push eax  +
push esi  +
push 40h  +
lea eax [edi+80h] +
jmp loc_4134AF  +
cmp ecx 2 +
jnz loc_4134E8  +
cmp eax 10h +
jnb loc_4134E8  +
test bx bx +
jz loc_4134A5  +
cmp bx dx +
jnz loc_4134E8  +
push eax  +
push esi  +
push 10h  +
lea eax [edi+100h] +
push eax  +
call sub_41480E  +
add esp 10h +
test eax eax +
jnz loc_4134DF  +
push 2Ch  +
pop eax  +
cmp bx ax +
jz loc_4133F7  +
test bx bx +
jz loc_4133F7  +
mov esi [ebp-8] +
add esi 2 +
inc dword ptr [ebp-4]  +
jmp loc_413436  +
***
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
jmp loc_4134F7  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call sub_418D2E  +
int 3  +
nop   +
nop   +
nop   +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_413531  +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_413531  +
cmp eax esi +
jz loc_413531  +
push edi  +
push 2Eh  +
pop ecx  +
mov edi eax +
movs   +
and dword ptr [eax] 0 +
push eax  +
call sub_41C3EF  +
pop ecx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 1F0h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
push ebx  +
mov ebx [ebp+14h] +
push esi  +
mov esi [ebp+8] +
push edi  +
mov edi [ebp+1Ch] +
mov [ebp-1ECh] eax +
mov [ebp-1F0h] edi +
call sub_4179D5  +
lea ecx [eax+0B4h] +
mov [ebp-1D8h] ecx +
lea ecx [eax+0B8h] +
mov [ebp-1E0h] ecx +
lea ecx [eax+1BEh] +
mov [ebp-1D4h] ecx +
xor ecx ecx +
mov [ebp-1DCh] ecx +
test esi esi +
jnz loc_4135AA  +
xor eax eax +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
add eax 2ECh +
push 55h  +
push eax  +
push dword ptr [ebp+18h]  +
mov [ebp-1E8h] eax +
push ebx  +
call sub_41480E  +
add esp 10h +
test eax eax +
jnz loc_41381D  +
cmp word ptr [esi] 43h +
jnz loc_413601  +
cmp [esi+2] ax +
jnz loc_413601  +
mov esi [ebp-1ECh] +
push offset loc_41382C  +
push dword ptr [ebp+10h]  +
push esi  +
call sub_4148CC  +
add esp 0Ch +
test eax eax +
jnz loc_41381D  +
test edi edi +
jz loc_4135FD  +
mov [edi] eax +
mov eax esi +
jmp loc_413599  +
***
push esi  +
call sub_41E6E3  +
mov [ebp-1E4h] eax +
pop ecx  +
cmp eax 83h +
jnb loc_413641  +
push esi  +
push dword ptr [ebp-1D4h]  +
call sub_416D70  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_4137C3  +
push esi  +
push dword ptr [ebp-1E0h]  +
call sub_416D70  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_4137C3  +
mov edi dword_434A98 +
lea eax [ebp-1D0h] +
xor edi dword_430000 +
neg edi  +
push esi  +
sbb edi edi +
not edi  +
push eax  +
and edi 1 +
call loc_4133D0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_4136E0  +
lea eax [ebp-1D0h] +
test edi edi +
mov edi [ebp-1D8h] +
push eax  +
push edi  +
push eax  +
jz loc_413683  +
call sub_41F4DA  +
jmp loc_413688  +
call sub_41ECC4  +
add esp 0Ch +
test eax eax +
jz loc_4136E6  +
lea eax [ebp-1D0h] +
mov edi 83h +
push eax  +
push edi  +
push dword ptr [ebp-1D4h]  +
call loc_413359  +
add esp 0Ch +
test ebx ebx +
jz loc_413784  +
lea eax [ebp-0B0h] +
push eax  +
call sub_41E6E3  +
inc eax  +
push eax  +
lea eax [ebp-0B0h] +
push eax  +
push dword ptr [ebp+18h]  +
push ebx  +
call sub_41480E  +
add esp 14h +
test eax eax +
jnz loc_41381D  +
jmp loc_413784  +
mov edi [ebp-1D8h] +
push esi  +
call sub_4202F6  +
pop ecx  +
test eax eax +
jz loc_4137FC  +
push 2  +
lea eax [ebp-1DCh] +
push eax  +
push 20001004h  +
push esi  +
call sub_420201  +
add esp 10h +
test eax eax +
jz loc_41371A  +
mov eax [ebp-1DCh] +
test eax eax +
jnz loc_413726  +
call ds:GetACP  +
mov [ebp-1DCh] eax +
movzx eax ax +
mov [edi] eax +
mov edi [ebp-1E4h] +
inc edi  +
push edi  +
push esi  +
push 83h  +
push dword ptr [ebp-1D4h]  +
call sub_41480E  +
add esp 10h +
test eax eax +
jnz loc_41381D  +
push edi  +
push esi  +
push dword ptr [ebp+18h]  +
push ebx  +
call sub_41480E  +
add esp 10h +
test eax eax +
jnz loc_41381D  +
push edi  +
push esi  +
push 55h  +
push dword ptr [ebp-1E8h]  +
call sub_41480E  +
add esp 10h +
test eax eax +
jnz loc_41381D  +
mov edi 83h +
xor ebx ebx +
cmp [esi] bx +
jz loc_4137B2  +
mov eax [ebp-1E4h] +
cmp eax edi +
jnb loc_4137B2  +
inc eax  +
push eax  +
push esi  +
push edi  +
push dword ptr [ebp-1E0h]  +
call sub_41480E  +
add esp 10h +
test eax eax +
jz loc_4137BD  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
jmp loc_413824  +
mov eax [ebp-1E0h] +
xor ecx ecx +
mov [eax] cx +
mov edi [ebp-1F0h] +
test edi edi +
jz loc_4137D8  +
push 4  +
push dword ptr [ebp-1D8h]  +
push edi  +
call sub_4024B1  +
add esp 0Ch +
mov ebx [ebp-1D4h] +
mov esi [ebp-1ECh] +
push ebx  +
push dword ptr [ebp+10h]  +
push esi  +
call sub_4148CC  +
add esp 0Ch +
test eax eax +
jnz loc_41381D  +
mov eax ebx +
jmp loc_413599  +
***
push ebx  +
call sub_41E6E3  +
inc eax  +
push eax  +
push ebx  +
push 55h  +
push dword ptr [ebp-1E8h]  +
call sub_41480E  +
add esp 14h +
test eax eax +
jz loc_413597  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_418D2E  +
int 3  +
nop   +
nop   +
inc ebx  +
push ebx  +
call sub_401E34  +
mov edi [ebp-24h] +
mov esi [ebp-20h] +
jmp sub_4139DC  +
***
pop ecx  +
pop ecx  +
retn   +
***
sub esp 0Ch +
push ebx  +
push edi  +
xor edi edi +
inc edi  +
push 6A6h  +
mov [ebp+var_8] edi +
call sub_418F43  +
mov ebx eax +
xor eax eax +
pop ecx  +
test ebx ebx +
jz loc_413B2F  +
push esi  +
lea esi [ebx+4] +
mov [esi] ax +
mov [ebx] edi +
mov edi [ebp+arg_0] +
push dword ptr [edi+24h]  +
push offset loc_413B90  +
push ds:off_40A91C  +
push 3  +
push 351h  +
push esi  +
call sub_413830  +
mov eax offset off_40A91C +
add esp 18h +
mov [ebp+var_4] eax +
lea eax [edi+24h] +
mov [ebp+var_C] eax +
push offset asc_40A9D4  +
push 351h  +
push esi  +
call sub_41E629  +
add esp 0Ch +
test eax eax +
jnz loc_413B81  +
mov eax [ebp+var_C] +
lea esi [eax+10h] +
push dword ptr [esi]  +
push dword ptr [eax]  +
call sub_416D70  +
neg eax  +
mov ecx esi +
lea esi [ebx+4] +
mov [ebp+var_C] ecx +
sbb eax eax +
not eax  +
and [ebp+var_8] eax +
push dword ptr [ecx]  +
mov eax [ebp+var_4] +
add eax 0Ch +
push offset loc_413B90  +
mov [ebp+var_4] eax +
push dword ptr [eax]  +
push 3  +
push 351h  +
push esi  +
call sub_413830  +
mov eax [ebp+var_4] +
add esp 20h +
cmp eax offset off_40A94C +
jl loc_413A7E  +
cmp [ebp+var_8] 0 +
jnz loc_413B35  +
mov ecx [edi+1Ch] +
or esi 0FFFFFFFFh +
test ecx ecx +
jz loc_413B06  +
mov eax esi +
xadd [ecx] eax +
jnz loc_413B06  +
push dword ptr [edi+1Ch]  +
call sub_41740A  +
pop ecx  +
mov eax [edi+18h] +
test eax eax +
jz loc_413B1D  +
xadd [eax] esi +
dec esi  +
jnz loc_413B1D  +
push dword ptr [edi+18h]  +
call sub_41740A  +
pop ecx  +
xor ecx ecx +
mov [edi+1Ch] ebx +
lea eax [ebx+4] +
mov [edi+18h] ecx +
mov [edi+10h] ecx +
mov [edi+14h] eax +
pop esi  +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
push ebx  +
call sub_41740A  +
pop ecx  +
mov ecx [edi+1Ch] +
or esi 0FFFFFFFFh +
test ecx ecx +
jz loc_413B57  +
mov eax esi +
xadd [ecx] eax +
jnz loc_413B57  +
push dword ptr [edi+1Ch]  +
call sub_41740A  +
pop ecx  +
mov eax [edi+18h] +
test eax eax +
jz loc_413B6E  +
xadd [eax] esi +
dec esi  +
jnz loc_413B6E  +
push dword ptr [edi+18h]  +
call sub_41740A  +
pop ecx  +
mov eax [edi+34h] +
xor ecx ecx +
mov [edi+18h] ecx +
mov [edi+10h] ecx +
mov [edi+1Ch] ecx +
mov [edi+14h] ecx +
jmp loc_413B2E  +
xor ecx ecx +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
call sub_418D2E  +
int 3  +
nop   +
nop   +
cmp eax 55000000h +
***
mov ebp esp +
sub esp 1CCh +
mov eax dword_430000 +
xor eax ebp +
mov [ebp-4] eax +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
mov esi [ebp+10h] +
push edi  +
mov edi [ebp+8] +
mov [ebp-1CCh] edi +
test eax eax +
jz loc_413BDC  +
test esi esi +
jz loc_413BD1  +
push esi  +
push eax  +
push edi  +
call sub_413E26  +
add esp 0Ch +
jmp loc_413DFA  +
add eax eax +
mov eax [edi+eax*8+14h] +
jmp loc_413DFA  +
xor eax eax +
mov dword ptr [ebp-1C0h] 1 +
mov ebx eax +
mov [ebp-1C4h] ebx +
test esi esi +
jz loc_413DF3  +
cmp word ptr [esi] 4Ch +
jnz loc_413D60  +
cmp word ptr [esi+2] 43h +
jnz loc_413D60  +
cmp word ptr [esi+4] 5Fh +
jnz loc_413D60  +
push offset asc_413E20  +
push esi  +
call sub_414C46  +
mov [ebp-1C8h] eax +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_413D59  +
mov ecx eax +
sub ecx esi +
sar ecx 1 +
mov [ebp-1BCh] ecx +
jz loc_413D59  +
push 3Bh  +
pop ecx  +
cmp [eax] cx +
jz loc_413D59  +
mov edi [ebp-1BCh] +
mov ebx offset off_40A91C +
mov dword ptr [ebp-1C0h] 1 +
push edi  +
push esi  +
push dword ptr [ebx]  +
call sub_417442  +
add esp 0Ch +
test eax eax +
jnz loc_413C82  +
push dword ptr [ebx]  +
call sub_41E6E3  +
pop ecx  +
cmp edi eax +
jz loc_413C93  +
inc dword ptr [ebp-1C0h]  +
add ebx 0Ch +
cmp ebx offset off_40A94C +
jle loc_413C66  +
mov esi [ebp-1C8h] +
add esi 2 +
push offset asc_40A9D4  +
push esi  +
call sub_41E695  +
mov edi [ebp-1CCh] +
mov ebx [ebp-1C4h] +
mov [ebp-1BCh] eax +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_413CCB  +
push 3Bh  +
pop ecx  +
cmp [esi] cx +
jnz loc_413D59  +
cmp dword ptr [ebp-1C0h] 5 +
jg loc_413D36  +
push eax  +
push esi  +
lea eax [ebp-10Ch] +
push 83h  +
push eax  +
call sub_41480E  +
add esp 10h +
test eax eax +
jnz loc_413E10  +
mov eax [ebp-1BCh] +
add eax eax +
cmp eax 106h +
jnb loc_413E0B  +
xor ecx ecx +
mov [ebp+eax-10Ch] cx +
lea eax [ebp-10Ch] +
push eax  +
push dword ptr [ebp-1C0h]  +
push edi  +
call sub_413E26  +
add esp 0Ch +
test eax eax +
mov eax [ebp-1BCh] +
jz loc_413D36  +
inc ebx  +
mov [ebp-1C4h] ebx +
lea esi [esi+eax*2] +
xor eax eax +
cmp [esi] ax +
jz loc_413D4C  +
add esi 2 +
cmp [esi] ax +
jnz loc_413C18  +
test ebx ebx +
jz loc_413DFA  +
jmp loc_413DF3  +
xor eax eax +
jmp loc_413DFA  +
push eax  +
push 55h  +
lea eax [ebp-1B8h] +
push eax  +
push 83h  +
lea eax [ebp-10Ch] +
push eax  +
push esi  +
call loc_413534  +
add esp 18h +
test eax eax +
jz loc_413DFA  +
lea eax [edi+14h] +
xor esi esi +
mov [ebp-1BCh] eax +
test esi esi +
jz loc_413DD2  +
push dword ptr [eax]  +
lea eax [ebp-10Ch] +
push eax  +
call sub_416D70  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_413DCB  +
lea eax [ebp-10Ch] +
push eax  +
push esi  +
push edi  +
call sub_413E26  +
add esp 0Ch +
test eax eax +
mov eax [ebp-1BCh] +
jnz loc_413DD1  +
xor ecx ecx +
mov [ebp-1C0h] ecx +
jmp loc_413DD8  +
mov eax [ebp-1BCh] +
inc ebx  +
mov ecx [ebp-1C0h] +
inc esi  +
add eax 10h +
mov [ebp-1BCh] eax +
cmp esi 5 +
jle loc_413D8E  +
test ecx ecx +
jnz loc_413DF3  +
test ebx ebx +
jz loc_413D59  +
push edi  +
call sub_413A21  +
pop ecx  +
mov ecx [ebp-4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_414447  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_418D2E  +
int 3  +
nop   +
nop   +
nop   +
sub esp 2E4h +
push [ebp+arg_C]  +
sub esp 20h +
call ds:IsDebuggerPresent  +
push 1  +
mov dword_433E8C eax +
call sub_420422  +
push [ebp+ExceptionInfo]  +
call sub_4197E3  +
cmp dword_433E8C 0 +
pop ecx  +
pop ecx  +
jnz loc_41433F  +
push 1  +
call sub_420422  +
pop ecx  +
push 0C0000409h  +
call sub_4197CE  +
pop ecx  +
pop ebp  +
retn   +
***
sub esp 324h +
push 8  +
sub esp 31Ch +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
mov byte ptr [esi+0Ch] 0 +
test ecx ecx +
jnz loc_414598  +
push edi  +
call sub_4179D5  +
mov edi eax +
mov [esi+8] edi +
mov edx [edi+6Ch] +
mov [esi] edx +
mov ecx [edi+68h] +
mov [esi+4] ecx +
cmp edx off_432DC8 +
jz loc_414561  +
mov eax dword_433528 +
test [edi+70h] eax +
jnz loc_414561  +
call sub_41C681  +
mov [esi] eax +
mov eax [esi+4] +
pop edi  +
cmp eax off_433434 +
jz loc_414582  +
mov ecx [esi+8] +
mov eax dword_433528 +
test [ecx+70h] eax +
jnz loc_414582  +
call sub_41CA37  +
mov [esi+4] eax +
mov ecx [esi+8] +
mov eax [ecx+70h] +
test al 2 +
jnz loc_4145A2  +
or eax 2 +
mov [ecx+70h] eax +
mov byte ptr [esi+0Ch] 1 +
jmp loc_4145A2  +
mov eax [ecx] +
mov [esi] eax +
mov eax [ecx+4] +
mov [esi+4] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
cmp dword_433B6C 0 +
sub esp 10h +
lea ecx [ebp+var_10] +
push ebx  +
push esi  +
push [ebp+arg_8]  +
call sub_414521  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_414664  +
mov esi [ebp+arg_4] +
test esi esi +
jnz loc_41467E  +
call sub_416890  +
mov dword ptr [eax] 16h +
call sub_418D1E  +
mov edx 7FFFFFFFh +
jmp loc_414709  +
mov eax [ebp+var_10] +
push edi  +
cmp dword ptr [eax+0A8h] 0 +
jnz loc_4146CD  +
push 41h  +
pop ecx  +
push 5Ah  +
sub ebx esi +
pop edx  +
movzx eax word ptr [ebx+esi] +
cmp ax cx +
jb loc_4146A9  +
cmp ax dx +
ja loc_4146A9  +
add eax 20h +
movzx edi ax +
jmp loc_4146AB  +
mov edi eax +
movzx eax word ptr [esi] +
cmp ax cx +
jb loc_4146BE  +
cmp ax dx +
ja loc_4146BE  +
add eax 20h +
movzx eax ax +
add esi 2 +
test di di +
jz loc_414700  +
cmp di ax +
jnz loc_414700  +
jmp loc_414693  +
movzx eax word ptr [ebx] +
lea ecx [ebp+var_10] +
push ecx  +
push eax  +
call sub_42042A  +
lea ecx [ebp+var_10] +
movzx edi ax +
movzx eax word ptr [esi] +
lea ebx [ebx+2] +
push ecx  +
push eax  +
call sub_42042A  +
add esp 10h +
movzx eax ax +
lea esi [esi+2] +
test di di +
jz loc_414700  +
cmp di ax +
jz loc_4146CD  +
movzx edx di +
movzx eax ax +
sub edx eax +
pop edi  +
cmp [ebp+var_4] 0 +
pop esi  +
pop ebx  +
jz loc_414718  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
mov eax edx +
mov esp ebp +
pop ebp  +
retn   +
***
push 20h  +
push ecx  +
mov edx [ebp+arg_C] +
push esi  +
push [ebp+arg_4]  +
sub esp 24h +
sub esp 24h +
cmp [ebp+arg_8] 0 +
push [ebp+arg_C]  +
push 0  +
sub esp 14h +
mov eax [ebp+arg_0] +
mov ecx dword_430000 +
lea eax [ebp+arg_4] +
lea eax [ebp+arg_4] +
lea eax [ebp+arg_8] +
push esi  +
call sub_401E34  +
jmp sub_414EAC  +
***
pop ecx  +
push ecx  +
call sub_401E34  +
mov esi [ebp+14h] +
mov edi [ebp-1Ch] +
jmp sub_4150AC  +
***
pop ecx  +
push esi  +
call sub_401E34  +
mov esi [ebp+8] +
mov edi [ebp-1Ch] +
jmp sub_4151B4  +
***
pop ecx  +
sub esp 10h +
push [ebp+arg_C]  +
call sub_401E34  +
mov esi [ebp+18h] +
mov edi [ebp-1Ch] +
jmp sub_415444  +
***
pop ecx  +
sub esp 10h +
mov eax [ebp+arg_0] +
push [ebp+arg_C]  +
call sub_4059E3  +
mov ebx [ebp-20h] +
mov edi [ebp-24h] +
jmp sub_415714  +
***
pop ecx  +
push [ebp+arg_8]  +
push ecx  +
sub esp 14h +
push ecx  +
push ecx  +
mov ecx [ebp+arg_4] +
mov ecx [ebp+arg_8] +
sub esp 30h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov edx [ebp+arg_8] +
mov ecx [ebp+arg_14] +
mov [ebp+var_30] eax +
mov eax [ebp+arg_C] +
push ebx  +
mov ebx [ebp+arg_4] +
mov [ebp+var_20] eax +
mov eax ebx +
mov [ebp+var_2C] edx +
mov [ebp+var_24] ecx +
push esi  +
mov esi [ebp+arg_10] +
mov [ebp+var_1C] esi +
push edi  +
sub eax 0 +
jz loc_416071  +
dec eax  +
jz loc_416069  +
mov edi [ecx+15Ch] +
jmp loc_416077  +
mov edi [ecx+158h] +
jmp loc_416077  +
mov edi [ecx+154h] +
cmp dword ptr [ecx+0ACh] 1 +
jz loc_41640D  +
sub ebx 2 +
mov eax 76Ch +
neg ebx  +
sbb ebx ebx +
add ax [edx+14h] +
mov [ebp+Date.wYear] ax +
not ebx  +
mov ax [edx+10h] +
inc ax  +
mov [ebp+Date.wMonth] ax +
mov ax [edx+0Ch] +
mov [ebp+Date.wDay] ax +
mov ax [edx+8] +
mov [ebp+Date.wHour] ax +
mov ax [edx+4] +
mov [ebp+Date.wMinute] ax +
mov ax [edx] +
xor edx edx +
push edx  +
mov [ebp+Date.wSecond] ax +
xor eax eax +
mov [ebp+Date.wMilliseconds] ax +
lea eax [ebp+Date] +
push edx  +
push edi  +
push eax  +
push edx  +
push dword ptr [ecx+160h]  +
and ebx 1 +
jz loc_4160EA  +
call sub_420252  +
mov edx eax +
mov [ebp+cchDate] edx +
jmp loc_4160F4  +
call sub_420196  +
mov edx eax +
mov [ebp+cchDate] eax +
add esp 18h +
test edx edx +
jz loc_41640D  +
lea ecx [edx+edx] +
lea eax [ecx+8] +
cmp eax ecx +
jbe loc_416151  +
lea edx ds:8[edx*2] +
cmp edx 400h +
ja loc_416130  +
mov eax edx +
call sub_402809  +
mov esi esp +
mov [ebp+var_18] esp +
test esi esi +
jz loc_41614C  +
mov dword ptr [esi] 0CCCCh +
jmp loc_416146  +
push edx  +
call sub_41760A  +
mov esi eax +
mov [ebp+var_18] eax +
pop ecx  +
test esi esi +
jz loc_41614C  +
mov dword ptr [esi] 0DDDDh +
add esi 8 +
mov [ebp+var_18] esi +
mov edx [ebp+cchDate] +
jmp loc_416156  +
xor esi esi +
mov [ebp+var_18] esi +
test esi esi +
jz loc_4162DE  +
push edx  +
push esi  +
push edi  +
lea eax [ebp+Date] +
test ebx ebx +
mov ebx [ebp+var_24] +
push eax  +
push 0  +
push dword ptr [ebx+160h]  +
jz loc_41617B  +
call sub_420252  +
jmp loc_416180  +
call sub_420196  +
mov edx eax +
add esp 18h +
dec edx  +
mov edi esi +
test edx edx +
jle loc_4161AF  +
mov ebx [ebp+var_1C] +
mov esi [ebp+var_20] +
cmp dword ptr [ebx] 0 +
jbe loc_4161AC  +
mov ecx [esi] +
mov ax [edi] +
add edi 2 +
mov [ecx] ax +
add dword ptr [esi] 2 +
dec dword ptr [ebx]  +
dec edx  +
test edx edx +
jg loc_416192  +
mov esi [ebp+var_18] +
push esi  +
call sub_41657F  +
pop ecx  +
xor eax eax +
inc eax  +
lea esp [ebp-3Ch] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
cmp dword ptr [esi] 0 +
jz loc_4161B6  +
xor esi esi +
mov [ebp+var_18] edi +
xor eax eax +
movzx ecx dx +
mov ebx edi +
add ebx 2 +
inc eax  +
cmp [ebx] cx +
jz loc_4161DE  +
movzx ecx dx +
mov [ebp+var_18] ebx +
mov ebx [ebp+var_24] +
cmp ecx 64h +
jg loc_41630E  +
jz loc_4162E6  +
cmp ecx 27h +
jz loc_416295  +
cmp ecx 41h +
jz loc_416220  +
cmp ecx 48h +
jz loc_416261  +
cmp ecx 4Dh +
jz loc_416239  +
cmp ecx 61h +
jnz loc_4163D3  +
push offset aAmPm  +
push edi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_416277  +
lea ecx [edi+0Ah] +
mov [ebp+var_18] ecx +
jmp loc_41628E  +
dec eax  +
jz loc_416257  +
dec eax  +
jz loc_41625A  +
dec eax  +
jz loc_416250  +
dec eax  +
jnz loc_4163D3  +
push 42h  +
jmp loc_4163ED  +
push 62h  +
jmp loc_4163ED  +
xor esi esi +
inc esi  +
push 6Dh  +
jmp loc_4163ED  +
dec eax  +
jz loc_41626D  +
dec eax  +
jnz loc_4163D3  +
jmp loc_416270  +
xor esi esi +
inc esi  +
push 48h  +
jmp loc_4163ED  +
push offset aAP  +
push edi  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_41628E  +
lea eax [edi+6] +
mov [ebp+var_18] eax +
push 70h  +
jmp loc_4163ED  +
lea edi [edi+eax*2] +
test al 1 +
jz loc_4162DE  +
movzx ecx word ptr [edi] +
test cx cx +
jz loc_4161B6  +
mov esi [ebp+var_1C] +
mov edx [ebp+var_20] +
cmp dword ptr [esi] 0 +
jz loc_41640D  +
push 27h  +
pop eax  +
add edi 2 +
cmp cx ax +
jz loc_41640D  +
mov eax [edx] +
mov [eax] cx +
add dword ptr [edx] 2 +
dec dword ptr [esi]  +
movzx ecx word ptr [edi] +
test cx cx +
jz loc_41640D  +
jmp loc_4162AE  +
mov esi [ebp+var_1C] +
jmp loc_41640D  +
dec eax  +
jz loc_416304  +
dec eax  +
jz loc_416307  +
dec eax  +
jz loc_4162FD  +
dec eax  +
jnz loc_4163D3  +
push 41h  +
jmp loc_4163ED  +
push 61h  +
jmp loc_4163ED  +
xor esi esi +
inc esi  +
push 64h  +
jmp loc_4163ED  +
sub ecx 68h +
jz loc_4163CD  +
sub ecx 5 +
jz loc_4163BE  +
sub ecx 6 +
jz loc_4163AF  +
dec ecx  +
jz loc_41634F  +
sub ecx 5 +
jnz loc_4163D3  +
dec eax  +
dec eax  +
jz loc_416348  +
dec eax  +
dec eax  +
jnz loc_4163D3  +
push 59h  +
jmp loc_4163ED  +
push 79h  +
jmp loc_4163ED  +
mov ecx [ebp+var_2C] +
cmp dword ptr [ecx+8] 0Bh +
jg loc_416360  +
mov edx [ebx+14Ch] +
jmp loc_416366  +
mov edx [ebx+150h] +
mov esi [ebp+var_1C] +
cmp eax 1 +
jnz loc_416388  +
cmp dword ptr [esi] 0 +
jbe loc_416388  +
mov edi [ebp+var_20] +
mov ax [edx] +
mov ecx [edi] +
mov [ecx] ax +
add dword ptr [edi] 2 +
dec dword ptr [esi]  +
jmp loc_41640A  +
movzx ecx word ptr [edx] +
test cx cx +
jz loc_41640A  +
mov ebx [ebp+var_20] +
cmp dword ptr [esi] 0 +
jbe loc_41640A  +
mov eax [ebx] +
add edx 2 +
mov [eax] cx +
add dword ptr [ebx] 2 +
dec dword ptr [esi]  +
movzx ecx word ptr [edx] +
test cx cx +
jz loc_41640A  +
jmp loc_416393  +
dec eax  +
jz loc_4163B7  +
dec eax  +
jnz loc_4163D3  +
jmp loc_4163BA  +
xor esi esi +
inc esi  +
push 53h  +
jmp loc_4163ED  +
dec eax  +
jz loc_4163C6  +
dec eax  +
jnz loc_4163D3  +
jmp loc_4163C9  +
xor esi esi +
inc esi  +
push 4Dh  +
jmp loc_4163ED  +
dec eax  +
jz loc_4163E8  +
dec eax  +
jz loc_4163EB  +
mov ecx [ebp+var_20] +
add edi 2 +
mov esi [ebp+var_1C] +
mov eax [ecx] +
mov [eax] dx +
add dword ptr [ecx] 2 +
dec dword ptr [esi]  +
jmp loc_41640D  +
xor esi esi +
inc esi  +
push 49h  +
pop eax  +
push esi  +
mov esi [ebp+var_1C] +
push ebx  +
push esi  +
push [ebp+var_20]  +
push [ebp+var_2C]  +
push eax  +
push [ebp+var_30]  +
call sub_415A04  +
add esp 1Ch +
test eax eax +
jz loc_41641E  +
mov edi [ebp+var_18] +
movzx edx word ptr [edi] +
test dx dx +
jz loc_4161B6  +
jmp loc_4161CD  +
xor eax eax +
jmp loc_4161B9  +
***
sub esp 1Ch +
mov eax [ebp+arg_0] +
push 0  +
call sub_401E34  +
mov esi [ebp-1Ch] +
mov edi [ebp-20h] +
jmp sub_41668C  +
***
pop ecx  +
push esi  +
push ebx  +
pop ecx  +
call sub_401E34  +
mov ebx [ebp+8] +
mov edi [ebp-1Ch] +
mov esi [ebp-20h] +
jmp sub_416820  +
***
mov eax dword_434ADC +
push dword ptr [eax+esi*4]  +
push esi  +
call sub_413026  +
pop ecx  +
pop ecx  +
retn   +
***
pop ecx  +
call sub_4179EF  +
push esi  +
call sub_4179EF  +
mov ecx [ebp+arg_0] +
sub esp 10h +
push 0  +
push 8  +
sub esp 10h +
sub esp 10h +
cmp dword_433B6C 0 +
cmp dword_433B6C 0 +
push ecx  +
sub esp 14h +
push ecx  +
push edi  +
mov edi [ebp+arg_8] +
test edi edi +
jnz loc_416C14  +
call sub_416890  +
mov dword ptr [eax] 16h +
call sub_418D1E  +
xor eax eax +
jmp loc_416CC1  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_416BFD  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jnz loc_416C28  +
mov ecx [edi] +
test ecx ecx +
jz loc_416BFD  +
movzx edx word ptr [ecx] +
push ebx  +
xor ebx ebx +
push esi  +
test dx dx +
jz loc_416C65  +
movzx edi word ptr [eax] +
mov esi eax +
test di di +
jz loc_416C52  +
mov ebx edi +
cmp bx dx +
jz loc_416C50  +
add esi 2 +
movzx ebx word ptr [esi] +
test bx bx +
jnz loc_416C40  +
xor ebx ebx +
cmp [esi] bx +
jz loc_416C62  +
add ecx 2 +
movzx edx word ptr [ecx] +
test dx dx +
jnz loc_416C37  +
mov edi [ebp+arg_8] +
xor edx edx +
mov ebx ecx +
cmp [ecx] dx +
jz loc_416CB3  +
movzx esi word ptr [eax] +
mov edx eax +
test si si +
jz loc_416C95  +
movzx edi word ptr [ecx] +
mov [ebp+var_4] edi +
movzx esi si +
cmp si word ptr [ebp+var_4] +
jz loc_416C92  +
add edx 2 +
movzx esi word ptr [edx] +
test si si +
jnz loc_416C81  +
movzx esi word ptr [eax] +
xor edi edi +
cmp [edx] di +
mov edi [ebp+arg_8] +
jnz loc_416CAB  +
add ecx 2 +
xor edx edx +
cmp [ecx] dx +
jz loc_416CB3  +
jmp loc_416C71  +
xor eax eax +
mov [ecx] ax +
add ecx 2 +
mov eax ebx +
mov [edi] ecx +
sub eax ecx +
neg eax  +
pop esi  +
sbb eax eax +
and eax ebx +
pop ebx  +
pop edi  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp dword_43492C 2 +
jge loc_416D02  +
mov ecx [ebp+8] +
mov edx ecx +
mov ax [ecx] +
add ecx 2 +
test ax ax +
jnz loc_416CDA  +
mov ax [ebp+0Ch] +
sub ecx 2 +
cmp ecx edx +
jz loc_416CF5  +
cmp [ecx] ax +
jnz loc_416CE9  +
cmp [ecx] ax +
jnz loc_416CFE  +
mov eax ecx +
jmp loc_416D69  +
xor eax eax +
jmp loc_416D69  +
mov edx [ebp+8] +
mov cx [ebp+0Ch] +
jmp loc_416D1D  +
movzx eax word ptr [edx] +
cmp ax cx +
jnz loc_416D15  +
mov esi edx +
test ax ax +
jz loc_416D67  +
add edx 2 +
lea eax [edx+1] +
test al 0Eh +
jnz loc_416D0B  +
xor eax eax +
cmp ax cx +
jnz loc_416D4A  +
mov eax 0FFFF0001h +
movd xmm1 eax +
jmp loc_416D39  +
add edx 10h +
movdqu xmm0 qword ptr [edx] +
jmp loc_416D69  +
movzx eax cx +
movd xmm0 eax +
movdqu xmm1 qword ptr [edx] +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov edx [ebp+arg_4] +
mov eax [ebp+arg_4] +
push 0  +
push 1  +
push ecx  +
push ecx  +
mov edx [ebp+arg_C] +
sub esp 0Ch +
cmp [ebp+lpMem] 0 +
mov eax [ebp+arg_8] +
mov edx [ebp+arg_0] +
call sub_423ED8  +
pop ecx  +
retn   +
***
lea eax [ecx+9] +
push eax  +
mov eax [ebp+arg_0] +
add eax 9 +
push eax  +
call sub_405C7D  +
neg eax  +
pop ecx  +
sbb eax eax +
pop ecx  +
inc eax  +
pop ebp  +
retn 4  +
***
push esi  +
push esi  +
mov eax [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_0] +
cmp esi 0FFFFFFE0h +
ja loc_417687  +
push ebx  +
push edi  +
mov eax hHeap +
test eax eax +
jnz loc_417640  +
call sub_418579  +
push 1Eh  +
call loc_418690  +
push 0FFh  +
call sub_417C57  +
jmp $+2  +
mov eax hHeap +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_417648  +
mov ecx esi +
jmp loc_41764B  +
xor ecx ecx +
inc ecx  +
push ecx  +
push 0  +
push eax  +
call ds:HeapAlloc  +
mov edi eax +
test edi edi +
jnz loc_417681  +
push 0Ch  +
pop ebx  +
cmp dword_434940 eax +
jz loc_417673  +
push esi  +
call sub_423F65  +
pop ecx  +
test eax eax +
jz loc_41767A  +
jmp loc_417618  +
call sub_416890  +
mov [eax] ebx +
call sub_416890  +
mov [eax] ebx +
mov eax edi +
pop edi  +
pop ebx  +
jmp loc_41769B  +
push esi  +
call sub_423F65  +
pop ecx  +
call sub_416890  +
mov dword ptr [eax] 0Ch +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
push ecx  +
push ecx  +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
call sub_4179EF  +
mov esi eax +
test esi esi +
jz loc_417856  +
mov edx [esi+5Ch] +
mov ecx edx +
push edi  +
mov edi [ebp+arg_0] +
cmp [ecx] edi +
jz loc_41771A  +
add ecx 0Ch +
lea eax [edx+90h] +
cmp ecx eax +
jb loc_417709  +
push ebx  +
lea eax [edx+90h] +
xor ebx ebx +
cmp ecx eax +
jnb loc_41772B  +
cmp [ecx] edi +
jz loc_41772D  +
mov ecx ebx +
test ecx ecx +
jz loc_417852  +
mov edi [ecx+8] +
test edi edi +
jz loc_417852  +
cmp edi 5 +
jnz loc_417750  +
xor eax eax +
mov [ecx+8] ebx +
inc eax  +
jmp loc_417854  +
cmp edi 1 +
jz loc_41784D  +
mov eax [esi+60h] +
mov [ebp+var_8] eax +
mov eax [ebp+arg_4] +
mov [esi+60h] eax +
cmp dword ptr [ecx+4] 8 +
jnz loc_417836  +
push 24h  +
pop edx  +
mov eax [esi+5Ch] +
mov [edx+eax+8] ebx +
add edx 0Ch +
cmp edx 90h +
jl loc_417772  +
cmp dword ptr [ecx] 0C000008Eh +
mov ebx [esi+64h] +
jnz loc_41779B  +
mov dword ptr [esi+64h] 83h +
jmp loc_417821  +
cmp dword ptr [ecx] 0C0000090h +
jnz loc_4177AC  +
mov dword ptr [esi+64h] 81h +
jmp loc_417821  +
cmp dword ptr [ecx] 0C0000091h +
jnz loc_4177BD  +
mov dword ptr [esi+64h] 84h +
jmp loc_417821  +
cmp dword ptr [ecx] 0C0000093h +
jnz loc_4177CE  +
mov dword ptr [esi+64h] 85h +
jmp loc_417821  +
cmp dword ptr [ecx] 0C000008Dh +
jnz loc_4177DF  +
mov dword ptr [esi+64h] 82h +
jmp loc_417821  +
cmp dword ptr [ecx] 0C000008Fh +
jnz loc_4177F0  +
mov dword ptr [esi+64h] 86h +
jmp loc_417821  +
cmp dword ptr [ecx] 0C0000092h +
jnz loc_417801  +
mov dword ptr [esi+64h] 8Ah +
jmp loc_417821  +
cmp dword ptr [ecx] 0C00002B5h +
jnz loc_417812  +
mov dword ptr [esi+64h] 8Dh +
jmp loc_417821  +
cmp dword ptr [ecx] 0C00002B4h +
jnz loc_417821  +
mov dword ptr [esi+64h] 8Eh +
push dword ptr [esi+64h]  +
mov ecx edi +
push 8  +
call ds:off_43520C  +
call edi  +
pop ecx  +
mov [esi+64h] ebx +
jmp loc_417846  +
push dword ptr [ecx+4]  +
mov [ecx+8] ebx +
mov ecx edi +
call ds:off_43520C  +
call edi  +
mov eax [ebp+var_8] +
pop ecx  +
mov [esi+60h] eax +
or eax 0FFFFFFFFh +
jmp loc_417854  +
xor eax eax +
pop ebx  +
pop edi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
jz loc_41792D  +
push ecx  +
call sub_41740A  +
pop ecx  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_4179C0  +
push 0Ch  +
call sub_418D59  +
pop ecx  +
mov dword ptr [ebp-4] 1 +
mov edi [esi+6Ch] +
test edi edi +
jz loc_417972  +
push edi  +
call sub_41C5E1  +
pop ecx  +
cmp edi off_432DC8 +
jz loc_417972  +
cmp edi offset unk_432DD0 +
jz loc_417972  +
cmp dword ptr [edi] 0 +
jnz loc_417972  +
push edi  +
call sub_41C484  +
pop ecx  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_4179CC  +
push esi  +
call sub_41740A  +
pop ecx  +
call sub_401106  +
retn 4  +
***
mov esi [ebp+8] +
jmp sub_4179C0  +
***
pop ecx  +
pop ecx  +
mov esi eax +
call ds:GetLastError  +
call sub_401E34  +
xor edi edi +
inc edi  +
mov esi [ebp+8] +
jmp sub_417B30  +
***
pop ecx  +
pop ecx  +
call sub_417DB4  +
mov eax dwTlsIndex +
push ecx  +
push ecx  +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+hModule] +
push eax  +
push offset aMscoree_dll  +
push 0  +
call ds:GetModuleHandleExW  +
test eax eax +
jz loc_417C20  +
push esi  +
push offset aCorexitprocess  +
push [ebp+hModule]  +
call ds:GetProcAddress  +
mov esi eax +
test esi esi +
jz loc_417C1F  +
push [ebp+arg_0]  +
mov ecx esi +
call ds:off_43520C  +
call esi  +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
push [ebp+uExitCode]  +
call sub_418579  +
push 0  +
push ecx  +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp ds:off_417D9C 0 +
push esi  +
jz loc_417CE2  +
push offset off_417D9C  +
call sub_4240FB  +
pop ecx  +
test eax eax +
jz loc_417CE2  +
push [ebp+arg_0]  +
mov esi ds:off_417D9C +
mov ecx esi +
call ds:off_43520C  +
call esi  +
pop ecx  +
call sub_424205  +
push offset dword_417D98  +
push offset dword_417D80  +
call sub_401088  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_417D49  +
push offset sub_4013E0  +
call sub_401EBC  +
mov [esp+0Ch+var_C] offset dword_417D7C +
push offset dword_417D58  +
call sub_4010DC  +
cmp dword_434AC8 0 +
pop ecx  +
pop ecx  +
jz loc_417D47  +
push offset dword_434AC8  +
call sub_4240FB  +
pop ecx  +
test eax eax +
jz loc_417D47  +
mov esi dword_434AC8 +
mov ecx esi +
push 0  +
push 2  +
push 0  +
call ds:off_43520C  +
call esi  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
call ds:EncodePointer  +
pop ecx  +
pop ecx  +
retn   +
***
push 1Ch  +
push offset dword_417F38  +
call sub_401E34  +
push 8  +
call sub_418D59  +
pop ecx  +
and dword ptr [ebp-4] 0 +
cmp dword_433E94 1 +
jz loc_417EEC  +
mov dword_433EA4 1 +
mov al [ebp+10h] +
mov byte_433EA0 al +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_417EDB  +
push dword_434AD0  +
mov esi ds:DecodePointer +
call esi  +
mov ebx eax +
mov [ebp-2Ch] ebx +
test ebx ebx +
jz loc_417ECA  +
push dword_434ACC  +
call esi  +
mov edi eax +
mov [ebp-1Ch] ebx +
mov [ebp-20h] edi +
mov [ebp-24h] edi +
sub edi 4 +
mov [ebp-24h] edi +
cmp edi ebx +
jb loc_417ECA  +
push 0  +
call ds:EncodePointer  +
cmp [edi] eax +
jz loc_417E69  +
cmp edi ebx +
jb loc_417ECA  +
push dword ptr [edi]  +
call esi  +
mov esi eax +
push 0  +
call ds:EncodePointer  +
mov [edi] eax +
call esi  +
push dword_434AD0  +
mov esi ds:DecodePointer +
call esi  +
mov [ebp-28h] eax +
push dword_434ACC  +
call esi  +
mov ecx [ebp-28h] +
cmp [ebp-1Ch] ecx +
jnz loc_417EBB  +
cmp [ebp-20h] eax +
jz loc_417E69  +
mov [ebp-1Ch] ecx +
mov ebx ecx +
mov [ebp-2Ch] ebx +
mov [ebp-20h] eax +
mov edi eax +
jmp loc_417E66  +
***
push offset dword_417F28  +
push offset dword_417F18  +
call sub_4010DC  +
pop ecx  +
pop ecx  +
push offset dword_417F30  +
push offset dword_417F2C  +
call sub_4010DC  +
pop ecx  +
pop ecx  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_417F54  +
cmp dword ptr [ebp+10h] 0 +
jnz loc_417F63  +
mov dword_433E94 1 +
call sub_417DF5  +
push dword ptr [ebp+8]  +
call sub_417C57  +
int 3  +
nop   +
nop   +
cmp dword ptr [ebp+10h] 0 +
jz locret_417F62  +
push 8  +
call sub_418EE6  +
pop ecx  +
retn   +
***
push 0  +
call ds:GetProcessHeap  +
call sub_401E34  +
push 0Bh  +
call sub_418D59  +
pop ecx  +
xor ebx ebx +
mov [ebp-4] ebx +
push 40h  +
push 20h  +
pop edi  +
push edi  +
call sub_418EFB  +
pop ecx  +
pop ecx  +
mov ecx eax +
mov [ebp-24h] ecx +
test ecx ecx +
jnz loc_417FDC  +
push 0FFFFFFFEh  +
lea eax [ebp-10h] +
push eax  +
push offset dword_430000  +
call sub_406310  +
add esp 0Ch +
or eax 0FFFFFFFFh +
jmp loc_418237  +
mov dword_433EB0 eax +
mov dword_434AC4 edi +
add eax 800h +
cmp ecx eax +
jnb loc_418021  +
mov word ptr [ecx+4] 0A00h +
or dword ptr [ecx] 0FFFFFFFFh +
mov [ecx+8] ebx +
and byte ptr [ecx+24h] 80h +
mov al [ecx+24h] +
and al 7Fh +
mov [ecx+24h] al +
mov word ptr [ecx+25h] 0A0Ah +
mov [ecx+38h] ebx +
mov [ecx+34h] bl +
add ecx 40h +
mov [ebp-24h] ecx +
mov eax dword_433EB0 +
jmp loc_417FE7  +
lea eax [ebp-74h] +
push eax  +
call ds:GetStartupInfoW  +
cmp word ptr [ebp-42h] 0 +
jz loc_418165  +
mov eax [ebp-40h] +
test eax eax +
jz loc_418165  +
mov ecx [eax] +
mov [ebp-1Ch] ecx +
add eax 4 +
mov [ebp-28h] eax +
add eax ecx +
mov [ebp-20h] eax +
mov eax 800h +
cmp ecx eax +
jl loc_41805F  +
mov ecx eax +
mov [ebp-1Ch] ecx +
xor esi esi +
inc esi  +
mov [ebp-30h] esi +
cmp dword_434AC4 ecx +
jge loc_41808D  +
push 40h  +
push edi  +
call sub_418EFB  +
pop ecx  +
pop ecx  +
mov ecx eax +
mov [ebp-24h] ecx +
test ecx ecx +
jnz loc_418118  +
mov ecx dword_434AC4 +
mov [ebp-1Ch] ecx +
mov edi ebx +
mov [ebp-2Ch] edi +
push 0FFFFFFFEh  +
pop ebx  +
mov eax [ebp-28h] +
mov edx [ebp-20h] +
cmp edi ecx +
jge loc_418168  +
mov esi [edx] +
cmp esi 0FFFFFFFFh +
jz loc_418105  +
cmp esi ebx +
jz loc_418105  +
mov al [eax] +
test al 1 +
jz loc_418105  +
test al 8 +
jnz loc_4180C6  +
push esi  +
call ds:GetFileType  +
mov edx [ebp-20h] +
test eax eax +
jz loc_418102  +
mov eax edi +
sar eax 5 +
mov esi edi +
and esi 1Fh +
shl esi 6 +
add esi dword_433EB0[eax*4] +
mov [ebp-24h] esi +
mov eax [edx] +
mov [esi] eax +
mov eax [ebp-28h] +
mov al [eax] +
mov [esi+4] al +
push 0  +
push 0FA0h  +
lea eax [esi+0Ch] +
push eax  +
call sub_419129  +
add esp 0Ch +
inc dword ptr [esi+8]  +
mov edx [ebp-20h] +
mov ecx [ebp-1Ch] +
inc edi  +
mov [ebp-2Ch] edi +
mov eax [ebp-28h] +
inc eax  +
mov [ebp-28h] eax +
add edx 4 +
mov [ebp-20h] edx +
jmp loc_41809B  +
mov dword_433EB0[esi*4] ecx +
add dword_434AC4 edi +
mov eax dword_433EB0[esi*4] +
add eax 800h +
cmp ecx eax +
jnb loc_418159  +
mov word ptr [ecx+4] 0A00h +
or dword ptr [ecx] 0FFFFFFFFh +
mov [ecx+8] ebx +
and byte ptr [ecx+24h] 80h +
mov word ptr [ecx+25h] 0A0Ah +
mov [ecx+38h] ebx +
mov [ecx+34h] bl +
add ecx 40h +
mov [ebp-24h] ecx +
jmp loc_418125  +
inc esi  +
mov [ebp-30h] esi +
mov ecx [ebp-1Ch] +
jmp loc_418065  +
push 0FFFFFFFEh  +
pop ebx  +
xor edi edi +
mov [ebp-2Ch] edi +
cmp edi 3 +
jge loc_41822D  +
mov esi edi +
shl esi 6 +
add esi dword_433EB0 +
mov [ebp-24h] esi +
cmp dword ptr [esi] 0FFFFFFFFh +
jz loc_41819B  +
cmp [esi] ebx +
jz loc_41819B  +
movsx eax byte ptr [esi+4] +
or al 80h +
mov [esi+4] al +
jmp loc_418227  +
mov byte ptr [esi+4] 81h +
test edi edi +
jnz loc_4181A8  +
push 0FFFFFFF6h  +
pop eax  +
jmp loc_4181B2  +
lea eax [edi-1] +
neg eax  +
sbb eax eax +
add eax 0FFFFFFF5h +
push eax  +
call ds:GetStdHandle  +
mov [ebp-1Ch] eax +
cmp eax 0FFFFFFFFh +
jz loc_41820D  +
test eax eax +
jz loc_41820D  +
push eax  +
call ds:GetFileType  +
test eax eax +
jz loc_41820D  +
mov ecx [ebp-1Ch] +
mov [esi] ecx +
and eax 0FFh +
cmp eax 2 +
jnz loc_4181E7  +
movsx eax byte ptr [esi+4] +
or al 40h +
jmp loc_4181F2  +
cmp eax 3 +
jnz loc_4181F5  +
movsx eax byte ptr [esi+4] +
or al 8 +
mov [esi+4] al +
push 0  +
push 0FA0h  +
lea eax [esi+0Ch] +
push eax  +
call sub_419129  +
add esp 0Ch +
inc dword ptr [esi+8]  +
jmp loc_418227  +
movsx eax byte ptr [esi+4] +
or al 40h +
mov [esi+4] al +
mov [esi] ebx +
mov eax dword_434ADC +
test eax eax +
jz loc_418227  +
mov eax [eax+edi*4] +
mov [eax+10h] ebx +
inc edi  +
jmp loc_41816A  +
mov [ebp-4] ebx +
call sub_41825C  +
xor eax eax +
call sub_401106  +
retn   +
***
pop ecx  +
push ecx  +
push ecx  +
cmp dword_434AD4 0 +
pop ecx  +
mov ecx [ebp+arg_0] +
xor eax eax +
cmp ecx ds:dword_4185D8[eax*8] +
jz loc_4185CD  +
inc eax  +
cmp eax 17h +
jb loc_4185BA  +
xor eax eax +
pop ebp  +
retn   +
mov eax ds:off_4185DC[eax*8] +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 1FCh +
mov eax dword_430000 +
xor eax ebp +
mov [ebp-4] eax +
push esi  +
mov esi [ebp+8] +
push edi  +
push esi  +
call sub_4185B2  +
mov edi eax +
pop ecx  +
test edi edi +
jz loc_418832  +
push ebx  +
push 3  +
call sub_418917  +
pop ecx  +
cmp eax 1 +
jz loc_4187DA  +
push 3  +
call sub_418917  +
pop ecx  +
test eax eax +
jnz loc_4186E4  +
cmp dword_4340B8 1 +
jz loc_4187DA  +
cmp esi 0FCh +
jz loc_418831  +
push offset aRuntimeErrorPr  +
push 314h  +
push offset unk_4340C0  +
call sub_4148CC  +
add esp 0Ch +
xor ebx ebx +
test eax eax +
jnz loc_418842  +
push 104h  +
push offset unk_4340F2  +
push ebx  +
mov word_4342FA ax +
call ds:GetModuleFileNameW  +
mov esi 2FBh +
test eax eax +
jnz loc_41874C  +
push offset aProgramNameUnk  +
push esi  +
push offset unk_4340F2  +
call sub_4148CC  +
add esp 0Ch +
test eax eax +
jnz loc_418842  +
push offset unk_4340F2  +
call sub_41E6E3  +
inc eax  +
pop ecx  +
cmp eax 3Ch +
jbe loc_418792  +
push offset unk_4340F2  +
call sub_41E6E3  +
push 3  +
push offset a___  +
lea ecx unk_43407C[eax*2] +
mov eax ecx +
sub eax offset unk_4340F2 +
sar eax 1 +
sub esi eax +
push esi  +
push ecx  +
call sub_41480E  +
add esp 14h +
test eax eax +
jnz loc_418842  +
push offset asc_4188B4  +
push 314h  +
mov esi offset unk_4340C0 +
push esi  +
call sub_41E629  +
add esp 0Ch +
test eax eax +
jnz loc_418842  +
push edi  +
push 314h  +
push esi  +
call sub_41E629  +
add esp 0Ch +
test eax eax +
jnz loc_418842  +
push 12010h  +
push offset aMicrosoftVisua  +
push esi  +
call sub_424671  +
add esp 0Ch +
jmp loc_418831  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
mov esi eax +
test esi esi +
jz loc_418831  +
cmp esi 0FFFFFFFFh +
jz loc_418831  +
xor ebx ebx +
mov ecx ebx +
mov al [edi+ecx*2] +
mov [ebp+ecx-1F8h] al +
cmp [edi+ecx*2] bx +
jz loc_41880A  +
inc ecx  +
cmp ecx 1F4h +
jb loc_4187F1  +
push ebx  +
lea eax [ebp-1FCh] +
mov [ebp-5] bl +
push eax  +
lea eax [ebp-1F8h] +
push eax  +
call sub_405BFE  +
pop ecx  +
push eax  +
lea eax [ebp-1F8h] +
push eax  +
push esi  +
call ds:WriteFile  +
pop ebx  +
mov ecx [ebp-4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call sub_418D2E  +
int 3  +
nop   +
nop   +
nop   +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
mov edi [ebp+arg_4] +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_418A03  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_4021E3  +
mov eax [esi+8] +
mov ecx [esi+0Ch] +
add ecx edi +
xor ecx [eax+edi] +
pop edi  +
pop esi  +
pop ebp  +
jmp sub_4021E3  +
***
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
push edi  +
mov byte ptr [ebp-1] 0 +
mov edi [ebx+8] +
lea esi [ebx+10h] +
xor edi dword_430000 +
mov dword ptr [ebp-0Ch] 1 +
mov eax [edi] +
cmp eax 0FFFFFFFEh +
jz loc_418A57  +
mov ecx [edi+4] +
add ecx esi +
xor ecx [eax+esi] +
call sub_4021E3  +
mov eax [edi+8] +
mov ecx [edi+0Ch] +
add ecx esi +
xor ecx [eax+esi] +
call sub_4021E3  +
mov eax [ebp+8] +
test byte ptr [eax+4] 66h +
jnz loc_418B24  +
mov [ebp-18h] eax +
mov eax [ebp+10h] +
mov [ebp-14h] eax +
lea eax [ebp-18h] +
mov [ebx-4] eax +
mov ebx [ebx+0Ch] +
cmp ebx 0FFFFFFFEh +
jz loc_418B60  +
nop   +
lea eax [ebx+2] +
lea eax [ebx+eax*2] +
mov ecx [edi+eax*4+4] +
lea eax [edi+eax*4] +
mov [ebp-10h] eax +
mov eax [eax] +
mov [ebp-8] eax +
test ecx ecx +
jz loc_418AC0  +
mov edx esi +
call sub_4063E6  +
mov cl 1 +
mov [ebp-1] cl +
test eax eax +
js loc_418B1B  +
jg loc_418AD3  +
mov eax [ebp-8] +
jmp loc_418AC3  +
mov cl [ebp-1] +
mov ebx eax +
cmp eax 0FFFFFFFEh +
jnz loc_418A90  +
test cl cl +
jnz loc_418B3C  +
jmp loc_418B60  +
mov eax [ebp+8] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_418B06  +
cmp ds:off_418B9C 0 +
jz loc_418B06  +
push offset off_418B9C  +
call sub_4240FB  +
add esp 4 +
test eax eax +
jz loc_418B06  +
push 1  +
push dword ptr [ebp+8]  +
call ds:off_418B9C  +
add esp 8 +
mov ecx [ebp+0Ch] +
mov edx [ebp+8] +
call sub_406416  +
mov eax [ebp+0Ch] +
cmp [eax+0Ch] ebx +
jnz loc_418B6A  +
jmp loc_418B79  +
mov dword ptr [ebp-0Ch] 0 +
jmp loc_418B3C  +
cmp dword ptr [ebx+0Ch] 0FFFFFFFEh +
jz loc_418B60  +
push offset dword_430000  +
push esi  +
mov ecx ebx +
mov edx 0FFFFFFFEh +
call sub_40642F  +
mov eax [edi] +
cmp eax 0FFFFFFFEh +
jz loc_418B50  +
mov ecx [edi+4] +
add ecx esi +
xor ecx [eax+esi] +
call sub_4021E3  +
mov edx [edi+8] +
mov ecx [edi+0Ch] +
add ecx esi +
xor ecx [edx+esi] +
call sub_4021E3  +
mov eax [ebp-0Ch] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push offset dword_430000  +
push esi  +
mov edx ebx +
mov ecx eax +
call sub_40642F  +
mov ecx [ebp+0Ch] +
mov eax [ebp-8] +
push esi  +
push edi  +
mov [ecx+0Ch] eax +
call sub_4189E4  +
mov ecx [ebp-10h] +
add esp 8 +
mov edx esi +
mov ecx [ecx+8] +
call sub_4063FD  +
int 3  +
nop   +
nop   +
sub esp 328h +
mov eax [ebp+arg_0] +
push ecx  +
xor eax eax +
test eax eax +
push esi  +
mov esi [ebp+arg_0] +
cmp lpCriticalSection[esi*8] 0 +
jnz loc_418D7F  +
push esi  +
call sub_418DE3  +
pop ecx  +
test eax eax +
jnz loc_418D7F  +
push 11h  +
call sub_417C6D  +
jmp $+2  +
pop ecx  +
push lpCriticalSection[esi*8]  +
call ds:EnterCriticalSection  +
pop esi  +
pop ebp  +
retn   +
***
call sub_401E34  +
cmp hHeap 0 +
jnz loc_418E12  +
call sub_418579  +
push 1Eh  +
call loc_418690  +
push 0FFh  +
call sub_417C57  +
jmp $+2  +
pop ecx  +
pop ecx  +
mov edi [ebp+8] +
xor ebx ebx +
cmp lpCriticalSection[edi*8] ebx +
jnz loc_418E7C  +
push 18h  +
call sub_418F43  +
pop ecx  +
mov esi eax +
test esi esi +
jnz loc_418E3D  +
call sub_416890  +
mov dword ptr [eax] 0Ch +
xor eax eax +
jmp loc_418E7F  +
push 0Ah  +
call sub_418D59  +
pop ecx  +
mov [ebp-4] ebx +
cmp lpCriticalSection[edi*8] ebx +
jnz loc_418E69  +
push ebx  +
push 0FA0h  +
push esi  +
call sub_419129  +
add esp 0Ch +
mov lpCriticalSection[edi*8] esi +
jmp loc_418E70  +
push esi  +
call sub_41740A  +
pop ecx  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_418EA4  +
xor eax eax +
inc eax  +
call sub_401106  +
retn   +
***
pop ecx  +
mov esi offset lpCriticalSection +
mov eax [ebp+arg_0] +
push esi  +
push ebx  +
push esi  +
push esi  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi dword_432DC0 +
test esi esi +
jns loc_4191C3  +
push edi  +
mov edi dword_434AB4 +
xor esi esi +
xor edi dword_430000 +
mov [ebp+var_8] esi +
jz loc_4191BC  +
push esi  +
lea eax [ebp+var_8] +
mov ecx edi +
push eax  +
call ds:off_43520C  +
call edi  +
cmp eax 7Ah +
jnz loc_4191BC  +
inc esi  +
mov dword_432DC0 esi +
pop edi  +
mov ecx [ebp+var_4] +
xor eax eax +
test esi esi +
pop esi  +
setnle al  +
xor ecx ebp +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
push offset ModuleName  +
call ds:GetModuleHandleW  +
mov esi eax +
push offset aFlsalloc  +
push esi  +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aFlsfree  +
push esi  +
mov dword_434A40 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aFlsgetvalue  +
push esi  +
mov dword_434A44 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aFlssetvalue  +
push esi  +
mov dword_434A48 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aInitializecrit  +
push esi  +
mov dword_434A4C eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aCreateeventexw  +
push esi  +
mov dword_434A50 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aCreatesemaphor  +
push esi  +
mov dword_434A54 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aSetthreadstack  +
push esi  +
mov dword_434A58 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aCreatethreadpo  +
push esi  +
mov dword_434A5C eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aSetthreadpoolt  +
push esi  +
mov dword_434A60 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aWaitforthreadp  +
push esi  +
mov dword_434A64 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aClosethreadpoo  +
push esi  +
mov dword_434A68 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aCreatethread_0  +
push esi  +
mov dword_434A6C eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aSetthreadpoolw  +
push esi  +
mov dword_434A70 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aClosethreadp_0  +
push esi  +
mov dword_434A74 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aFlushprocesswr  +
mov dword_434A78 eax +
push esi  +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aFreelibrarywhe  +
push esi  +
mov dword_434A7C eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aGetcurrentproc  +
push esi  +
mov dword_434A80 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aGetlogicalproc  +
push esi  +
mov dword_434A84 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aCreatesymbolic  +
push esi  +
mov dword_434A88 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aSetdefaultdlld  +
push esi  +
mov dword_434A8C eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aEnumsystemloca  +
push esi  +
mov dword_434A90 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aComparestringe  +
push esi  +
mov dword_434A98 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aGetdateformate  +
push esi  +
mov dword_434A94 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aGetlocaleinfoe  +
push esi  +
mov dword_434A9C eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aGettimeformate  +
push esi  +
mov dword_434AA0 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aGetuserdefault  +
push esi  +
mov dword_434AA4 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aIsvalidlocalen  +
push esi  +
mov dword_434AA8 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aLcmapstringex  +
push esi  +
mov dword_434AAC eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aGetcurrentpack  +
push esi  +
mov dword_434AB0 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aGettickcount64  +
push esi  +
mov dword_434AB4 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aGetfileinforma  +
push esi  +
mov dword_434AB8 eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
push offset aSetfileinforma  +
push esi  +
mov dword_434ABC eax +
call ds:GetProcAddress  +
xor eax dword_430000 +
mov dword_434AC0 eax +
pop esi  +
retn   +
***
push [ebp+dwMilliseconds]  +
push [ebp+uExitCode]  +
push 0  +
call sub_401E34  +
jmp sub_4198AC  +
***
pop ecx  +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push esi  +
call sub_412951  +
pop ecx  +
mov ecx [esi+0Ch] +
mov edi eax +
test cl 82h +
jnz loc_4198E6  +
call sub_416890  +
mov dword ptr [eax] 9 +
or dword ptr [esi+0Ch] 20h +
or eax 0FFFFFFFFh +
jmp loc_419A01  +
test cl 40h +
jz loc_4198F8  +
call sub_416890  +
mov dword ptr [eax] 22h +
jmp loc_4198DA  +
push ebx  +
xor ebx ebx +
test cl 1 +
jz loc_419913  +
mov [esi+4] ebx +
test cl 10h +
jz loc_419985  +
mov eax [esi+8] +
and ecx 0FFFFFFFEh +
mov [esi] eax +
mov [esi+0Ch] ecx +
mov eax [esi+0Ch] +
and eax 0FFFFFFEFh +
mov [esi+4] ebx +
or eax 2 +
mov [esi+0Ch] eax +
test eax 10Ch +
jnz loc_419953  +
call sub_412F77  +
add eax 20h +
cmp esi eax +
jz loc_419941  +
call sub_412F77  +
add eax 40h +
cmp esi eax +
jnz loc_41994C  +
push edi  +
call sub_424AEB  +
pop ecx  +
test eax eax +
jnz loc_419953  +
push esi  +
call sub_424CD1  +
pop ecx  +
test dword ptr [esi+0Ch] 108h +
jz loc_4199D6  +
mov edx [esi+8] +
mov ecx [esi] +
sub ecx edx +
mov [ebp+var_4] ecx +
lea eax [edx+1] +
mov [esi] eax +
mov eax [esi+18h] +
dec eax  +
mov [esi+4] eax +
test ecx ecx +
jle loc_41998D  +
push ecx  +
push edx  +
push edi  +
call sub_42155D  +
add esp 0Ch +
mov ebx eax +
jmp loc_4199CC  +
or ecx 20h +
mov [esi+0Ch] ecx +
jmp loc_4199F5  +
cmp edi 0FFFFFFFFh +
jz loc_4199AD  +
cmp edi 0FFFFFFFEh +
jz loc_4199AD  +
mov eax edi +
mov ecx edi +
sar eax 5 +
and ecx 1Fh +
shl ecx 6 +
add ecx dword_433EB0[eax*4] +
jmp loc_4199B2  +
mov ecx offset unk_432C60 +
test byte ptr [ecx+4] 20h +
jz loc_4199CC  +
push 2  +
push ebx  +
push ebx  +
push edi  +
call sub_424B3F  +
and eax edx +
add esp 10h +
cmp eax 0FFFFFFFFh +
jz loc_4199F1  +
mov ecx [esi+8] +
mov al byte ptr [ebp+arg_0] +
mov [ecx] al +
jmp loc_4199EC  +
xor eax eax +
inc eax  +
push eax  +
mov [ebp+var_4] eax +
lea eax [ebp+arg_0] +
push eax  +
push edi  +
call sub_42155D  +
add esp 0Ch +
mov ebx eax +
cmp ebx [ebp+var_4] +
jz loc_4199FA  +
or dword ptr [esi+0Ch] 20h +
or eax 0FFFFFFFFh +
jmp loc_419A00  +
mov eax [ebp+arg_0] +
movzx eax al +
pop ebx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 488h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
lea ecx [ebp+var_450] +
push ebx  +
push esi  +
mov [ebp+var_428] eax +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_8]  +
mov edi [ebp+arg_C] +
mov [ebp+var_408] eax +
xor eax eax +
mov ebx eax +
mov [ebp+var_410] edi +
mov [ebp+var_460] eax +
mov esi eax +
mov [ebp+var_414] ebx +
mov [ebp+var_430] eax +
mov [ebp+var_418] eax +
mov [ebp+var_424] eax +
mov [ebp+var_458] eax +
mov [ebp+var_440] eax +
mov [ebp+var_42C] eax +
call sub_414521  +
call sub_416890  +
mov [ebp+var_464] eax +
cmp [ebp+var_428] ebx +
jnz loc_419AC2  +
call sub_416890  +
mov dword ptr [eax] 16h +
call sub_418D1E  +
cmp [ebp+var_444] bl +
jz loc_419ABA  +
mov eax [ebp+var_448] +
and dword ptr [eax+70h] 0FFFFFFFDh +
or eax 0FFFFFFFFh +
jmp loc_41A5E2  +
mov edx [ebp+var_408] +
test edx edx +
jz loc_419A98  +
movzx edx word ptr [edx] +
xor ecx ecx +
mov [ebp+var_40C] ecx +
mov eax ecx +
mov [ebp+var_420] eax +
mov [ebp+var_434] ecx +
mov [ebp+lpMem] ecx +
mov [ebp+var_41C] edx +
test dx dx +
jz loc_41A5CF  +
mov [ebp+var_470] 58h +
mov [ebp+var_474] 64h +
mov [ebp+var_478] 69h +
mov [ebp+var_468] 6Fh +
add [ebp+var_408] 2 +
test eax eax +
js loc_41A5CF  +
push 58h  +
lea eax [edx-20h] +
pop edi  +
cmp ax di +
ja loc_419B4B  +
movzx eax dx +
movsx eax byte ptr ds:off_41A620[eax] +
and eax 0Fh +
jmp loc_419B4D  +
xor eax eax +
mov edi [ebp+var_434] +
movsx edi ds:byte_41A640[edi+eax*8] +
mov eax edi +
mov [ebp+var_434] edi +
mov edi [ebp+var_410] +
sar eax 4 +
mov [ebp+var_434] eax +
cmp eax 7 +
ja loc_41A5B1  +
jmp ds:off_41A620[eax*4]  +
xor eax eax +
or [ebp+var_418] 0FFFFFFFFh +
mov ebx eax +
mov [ebp+var_458] eax +
mov [ebp+var_440] eax +
mov [ebp+var_430] eax +
mov [ebp+var_424] eax +
mov [ebp+var_414] ebx +
mov [ebp+var_42C] eax +
jmp loc_41A5B1  +
movzx eax dx +
push 20h  +
pop edx  +
sub eax edx +
jz loc_419C06  +
sub eax 3 +
jz loc_419BFE  +
sub eax 8 +
jz loc_419BF9  +
dec eax  +
dec eax  +
jz loc_419BEB  +
sub eax 3 +
mov eax [ebp+var_408] +
jnz loc_41A5B7  +
or ebx 8 +
mov [ebp+var_414] ebx +
jmp loc_41A5B7  +
or ebx 4 +
mov [ebp+var_414] ebx +
jmp loc_41A5B1  +
or ebx 1 +
jmp loc_419BEE  +
or ebx 80h +
jmp loc_419BEE  +
or ebx 2 +
jmp loc_419BEE  +
push 2Ah  +
pop eax  +
cmp dx ax +
jnz loc_419C42  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_410] edi +
mov [ebp+var_430] eax +
test eax eax +
jns loc_41A5B1  +
or ebx 4 +
neg eax  +
mov [ebp+var_414] ebx +
mov [ebp+var_430] eax +
jmp loc_41A5B1  +
imul ecx [ebp+var_430] +
movzx eax dx +
add ecx 0FFFFFFD0h +
add eax ecx +
mov [ebp+var_430] eax +
jmp loc_41A5AB  +
xor eax eax +
mov [ebp+var_418] eax +
jmp loc_41A5B1  +
push 2Ah  +
pop eax  +
cmp dx ax +
jnz loc_419C9C  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_418] eax +
test eax eax +
mov eax [ebp+var_408] +
mov [ebp+var_410] edi +
jns loc_41A5B7  +
or [ebp+var_418] 0FFFFFFFFh +
jmp loc_41A5B7  +
imul ecx [ebp+var_418] +
movzx eax dx +
add ecx 0FFFFFFD0h +
add eax ecx +
mov [ebp+var_418] eax +
jmp loc_41A5AB  +
movzx eax dx +
cmp eax 49h +
jz loc_419D15  +
cmp eax 68h +
jz loc_419D0B  +
push 6Ch  +
pop edx  +
cmp eax edx +
jz loc_419CE4  +
cmp eax 77h +
mov eax [ebp+var_408] +
jnz loc_41A5B7  +
or ebx 800h +
jmp loc_419BE0  +
mov eax [ebp+var_408] +
cmp [eax] dx +
jnz loc_419D03  +
add eax 2 +
or ebx 1000h +
mov [ebp+var_408] eax +
jmp loc_419BE0  +
or ebx 10h +
jmp loc_419BE0  +
push 20h  +
pop eax  +
or ebx eax +
jmp loc_419BEE  +
mov eax [ebp+var_408] +
movzx eax word ptr [eax] +
cmp eax 36h +
jnz loc_419D46  +
mov edi [ebp+var_408] +
cmp word ptr [edi+2] 34h +
jnz loc_419D46  +
mov eax edi +
add eax 4 +
or ebx 8000h +
mov [ebp+var_408] eax +
jmp loc_419BE0  +
cmp eax 33h +
jnz loc_419D6E  +
mov edi [ebp+var_408] +
cmp word ptr [edi+2] 32h +
jnz loc_419D6E  +
mov eax edi +
add eax 4 +
and ebx 0FFFF7FFFh +
mov [ebp+var_408] eax +
jmp loc_419BE0  +
cmp ax word ptr [ebp+var_474] +
jz loc_41A5B1  +
cmp ax word ptr [ebp+var_478] +
jz loc_41A5B1  +
cmp ax word ptr [ebp+var_468] +
jz loc_41A5B1  +
cmp eax 75h +
jz loc_41A5B1  +
cmp eax 78h +
jz loc_41A5B1  +
cmp ax word ptr [ebp+var_470] +
jz loc_41A5B1  +
xor eax eax +
mov [ebp+var_434] eax +
lea eax [ebp+var_420] +
mov [ebp+var_42C] 1 +
push eax  +
push [ebp+var_428]  +
push edx  +
call sub_421188  +
add esp 0Ch +
jmp loc_41A5AB  +
movzx eax dx +
cmp eax 64h +
jg loc_41A018  +
jz loc_41A0A6  +
cmp eax 53h +
jg loc_419F22  +
jz loc_419E7B  +
sub eax 41h +
jz loc_419E13  +
dec eax  +
dec eax  +
jz loc_419E5F  +
dec eax  +
dec eax  +
jz loc_419E13  +
dec eax  +
dec eax  +
jnz loc_41A3D8  +
push 20h  +
pop eax  +
add edx eax +
mov [ebp+var_458] 1 +
mov [ebp+var_41C] edx +
mov eax [ebp+var_418] +
lea esi [ebp+WideCharStr] +
or ebx 40h +
mov ecx 200h +
mov [ebp+var_414] ebx +
mov [ebp+var_40C] ecx +
test eax eax +
jns loc_41A0E0  +
mov [ebp+var_418] 6 +
jmp loc_41A140  +
test ebx 830h +
jnz loc_419F44  +
push 20h  +
pop eax  +
or ebx eax +
mov [ebp+var_414] ebx +
jmp loc_419F44  +
test ebx 830h +
jnz loc_419E8E  +
push 20h  +
pop eax  +
or ebx eax +
mov [ebp+var_414] ebx +
mov edx [ebp+var_418] +
mov edi 7FFFFFFFh +
cmp edx 0FFFFFFFFh +
jz loc_419EA0  +
mov edi edx +
mov esi [ebp+var_410] +
add esi 4 +
mov [ebp+var_410] esi +
mov esi [esi-4] +
test bl 20h +
jz loc_41A3A5  +
test esi esi +
jnz loc_419EC5  +
mov esi off_433590 +
xor ecx ecx +
mov eax esi +
mov [ebp+var_41C] eax +
mov [ebp+var_40C] ecx +
test edi edi +
jle loc_41A3D8  +
mov al [eax] +
test al al +
jz loc_41A3D8  +
lea ecx [ebp+var_450] +
movzx eax al +
push ecx  +
push eax  +
call sub_4168E4  +
pop ecx  +
test eax eax +
mov eax [ebp+var_41C] +
pop ecx  +
jz loc_419F04  +
inc eax  +
mov ecx [ebp+var_40C] +
inc eax  +
inc ecx  +
mov [ebp+var_41C] eax +
mov [ebp+var_40C] ecx +
cmp ecx edi +
jge loc_41A3D8  +
jmp loc_419EDD  +
sub eax 58h +
jz loc_41A231  +
dec eax  +
dec eax  +
jz loc_419FBF  +
sub eax 7 +
jz loc_419E28  +
dec eax  +
dec eax  +
jnz loc_41A3D8  +
mov ax [edi] +
add edi 4 +
mov [ebp+var_42C] 1 +
mov [ebp+var_410] edi +
mov word ptr [ebp+var_45C] ax +
test bl 20h +
jz loc_419FAA  +
mov byte ptr [ebp+var_43C] al +
xor eax eax +
mov byte ptr [ebp+var_43C+1] al +
lea eax [ebp+var_450] +
push eax  +
mov eax [ebp+var_450] +
push dword ptr [eax+74h]  +
lea eax [ebp+var_43C] +
push eax  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_424E9D  +
add esp 10h +
test eax eax +
jns loc_419FB1  +
mov [ebp+var_440] 1 +
jmp loc_419FB1  +
mov [ebp+WideCharStr] ax +
xor ecx ecx +
lea esi [ebp+WideCharStr] +
inc ecx  +
jmp loc_41A3D2  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_410] edi +
test eax eax +
jz loc_41A004  +
mov esi [eax+4] +
test esi esi +
jz loc_41A004  +
test ebx 800h +
jz loc_419FF4  +
movsx eax word ptr [eax] +
cdq   +
sub eax edx +
mov [ebp+var_42C] 1 +
mov ecx eax +
jmp loc_41A3D0  +
xor ecx ecx +
mov [ebp+var_42C] ecx +
movsx ecx word ptr [eax] +
jmp loc_41A3D2  +
mov esi off_433590 +
push esi  +
call sub_405BFE  +
pop ecx  +
mov ecx eax +
jmp loc_41A3D2  +
cmp eax 70h +
jg loc_41A235  +
jz loc_41A227  +
cmp eax 65h +
jl loc_41A3D8  +
cmp eax 67h +
jle loc_419E28  +
push 69h  +
pop edx  +
cmp eax edx +
jz loc_41A0A6  +
cmp eax 6Eh +
jz loc_41A06C  +
push 6Fh  +
pop edx  +
cmp eax edx +
jnz loc_41A3D8  +
mov [ebp+var_41C] 8 +
test bl bl +
jns loc_41A0B9  +
or ebx 200h +
mov [ebp+var_414] ebx +
jmp loc_41A0B9  +
add edi 4 +
mov [ebp+var_410] edi +
mov edi [edi-4] +
call sub_414C88  +
test eax eax +
jz loc_41A5F3  +
mov eax [ebp+var_420] +
test bl 20h +
jz loc_41A095  +
mov [edi] ax +
jmp loc_41A097  +
mov [edi] eax +
mov [ebp+var_440] 1 +
jmp loc_41A592  +
or ebx 40h +
mov [ebp+var_414] ebx +
mov [ebp+var_41C] 0Ah +
test ebx 8000h +
jnz loc_41A0CD  +
test ebx 1000h +
jz loc_41A28D  +
mov ecx [edi] +
add edi 8 +
mov [ebp+var_410] edi +
mov edi [edi-4] +
jmp loc_41A2B9  +
jnz loc_41A0F6  +
push 67h  +
pop eax  +
cmp dx ax +
jnz loc_41A140  +
mov [ebp+var_418] 1 +
jmp loc_41A140  +
cmp eax ecx +
jle loc_41A102  +
mov eax ecx +
mov [ebp+var_418] eax +
cmp eax 0A3h +
jle loc_41A140  +
lea edi [eax+15Dh] +
push edi  +
call sub_418F43  +
mov edx [ebp+var_41C] +
mov [ebp+lpMem] eax +
pop ecx  +
test eax eax +
jz loc_41A130  +
mov esi eax +
mov [ebp+var_40C] edi +
jmp loc_41A13A  +
mov [ebp+var_418] 0A3h +
mov edi [ebp+var_410] +
mov eax [edi] +
add edi 8 +
mov [ebp+var_488] eax +
mov [ebp+var_410] edi +
mov eax [edi-4] +
mov [ebp+var_484] eax +
lea eax [ebp+var_450] +
push eax  +
push [ebp+var_458]  +
movsx eax dl +
push [ebp+var_418]  +
push eax  +
push [ebp+var_40C]  +
lea eax [ebp+var_488] +
push esi  +
push eax  +
push off_433764  +
call ds:DecodePointer  +
mov edi eax +
mov ecx eax +
call ds:off_43520C  +
call edi  +
mov eax ebx +
add esp 1Ch +
and eax 80h +
mov [ebp+var_40C] eax +
jz loc_41A1DA  +
cmp [ebp+var_418] 0 +
jnz loc_41A1DA  +
lea eax [ebp+var_450] +
push eax  +
push esi  +
push off_433770  +
call ds:DecodePointer  +
mov edi eax +
mov ecx eax +
call ds:off_43520C  +
call edi  +
mov eax [ebp+var_40C] +
pop ecx  +
pop ecx  +
push 67h  +
pop ecx  +
cmp word ptr [ebp+var_41C] cx +
jnz loc_41A20C  +
test eax eax +
jnz loc_41A20C  +
lea eax [ebp+var_450] +
push eax  +
push esi  +
push off_43376C  +
call ds:DecodePointer  +
mov edi eax +
mov ecx eax +
call ds:off_43520C  +
call edi  +
pop ecx  +
pop ecx  +
cmp byte ptr [esi] 2Dh +
jnz loc_41A00A  +
or ebx 100h +
inc esi  +
mov [ebp+var_414] ebx +
jmp loc_41A00A  +
mov [ebp+var_418] 8 +
push 7  +
jmp loc_41A251  +
sub eax 73h +
jz loc_419E8E  +
dec eax  +
dec eax  +
jz loc_41A0AF  +
sub eax 3 +
jnz loc_41A3D8  +
push 27h  +
mov [ebp+var_41C] 10h +
pop eax  +
mov [ebp+var_460] eax +
test bl bl +
jns loc_41A0B9  +
push 30h  +
pop ecx  +
add eax 51h +
mov word ptr [ebp+var_438] cx +
mov word ptr [ebp+var_438+2] ax +
mov [ebp+var_424] 2 +
jmp loc_41A0B9  +
add edi 4 +
mov [ebp+var_410] edi +
test bl 20h +
jz loc_41A2AC  +
test bl 40h +
jz loc_41A2A6  +
movsx eax word ptr [edi-4] +
jmp loc_41A2B4  +
movzx eax word ptr [edi-4] +
jmp loc_41A2B4  +
test bl 40h +
jz loc_41A2BD  +
mov eax [edi-4] +
cdq   +
mov ecx eax +
mov edi edx +
xor eax eax +
jmp loc_41A2C4  +
mov ecx [edi-4] +
xor eax eax +
mov edi eax +
test bl 40h +
jz loc_41A2E5  +
cmp edi eax +
jg loc_41A2E5  +
jl loc_41A2D3  +
cmp ecx eax +
jnb loc_41A2E5  +
neg ecx  +
adc edi eax +
neg edi  +
or ebx 100h +
mov [ebp+var_414] ebx +
test ebx 9000h +
jnz loc_41A2EF  +
mov edi eax +
mov edx [ebp+var_418] +
test edx edx +
jns loc_41A2FE  +
xor edx edx +
inc edx  +
jmp loc_41A314  +
and ebx 0FFFFFFF7h +
mov [ebp+var_414] ebx +
cmp edx 200h +
jle loc_41A314  +
mov edx 200h +
mov eax ecx +
or eax edi +
jnz loc_41A320  +
mov [ebp+var_424] eax +
lea esi [ebp+var_205] +
mov eax edx +
dec edx  +
mov [ebp+var_418] edx +
test eax eax +
jg loc_41A339  +
mov eax ecx +
or eax edi +
jz loc_41A376  +
mov eax [ebp+var_41C] +
cdq   +
push edx  +
push eax  +
push edi  +
push ecx  +
call sub_406446  +
add ecx 30h +
mov [ebp+var_47C] ebx +
mov [ebp+var_40C] eax +
mov edi edx +
cmp ecx 39h +
jle loc_41A365  +
add ecx [ebp+var_460] +
mov edx [ebp+var_418] +
mov [esi] cl +
dec esi  +
mov ecx [ebp+var_40C] +
jmp loc_41A326  +
mov ebx [ebp+var_414] +
lea ecx [ebp+var_205] +
sub ecx esi +
inc esi  +
mov [ebp+var_40C] ecx +
test ebx 200h +
jz loc_41A3D8  +
test ecx ecx +
jz loc_41A39C  +
cmp byte ptr [esi] 30h +
jz loc_41A3D8  +
dec esi  +
inc ecx  +
push 30h  +
pop eax  +
mov [esi] al +
jmp loc_41A3D2  +
test esi esi +
jnz loc_41A3AF  +
mov esi off_433594 +
mov [ebp+var_42C] 1 +
mov ecx esi +
test edi edi +
jz loc_41A3CE  +
xor eax eax +
dec edi  +
cmp [ecx] ax +
jz loc_41A3CE  +
add ecx 2 +
test edi edi +
jnz loc_41A3C1  +
sub ecx esi +
sar ecx 1 +
mov [ebp+var_40C] ecx +
cmp [ebp+var_440] 0 +
jnz loc_41A592  +
test bl 40h +
jz loc_41A40A  +
test ebx 100h +
jz loc_41A513  +
push 2Dh  +
pop eax  +
mov word ptr [ebp+var_438] ax +
mov [ebp+var_424] 1 +
push 20h  +
pop edx  +
mov edi [ebp+var_430] +
mov eax [ebp+var_424] +
sub edi ecx +
sub edi eax +
test bl 0Ch +
jnz loc_41A43F  +
lea eax [ebp+var_420] +
push eax  +
push [ebp+var_428]  +
push edi  +
push edx  +
call sub_4211BE  +
mov eax [ebp+var_424] +
add esp 10h +
push [ebp+var_464]  +
lea ecx [ebp+var_420] +
push ecx  +
push [ebp+var_428]  +
push eax  +
lea eax [ebp+var_438] +
push eax  +
call sub_41A699  +
add esp 14h +
test bl 8 +
jz loc_41A486  +
test bl 4 +
jnz loc_41A486  +
lea eax [ebp+var_420] +
push eax  +
push [ebp+var_428]  +
push edi  +
push 30h  +
pop eax  +
push eax  +
call sub_4211BE  +
add esp 10h +
cmp [ebp+var_42C] 0 +
mov eax [ebp+var_40C] +
jnz loc_41A54C  +
test eax eax +
jle loc_41A54C  +
mov ecx esi +
mov [ebp+var_41C] esi +
dec eax  +
mov [ebp+var_47C] eax +
lea eax [ebp+var_450] +
push eax  +
mov eax [ebp+var_450] +
push dword ptr [eax+74h]  +
lea eax [ebp+var_45C] +
push ecx  +
push eax  +
call sub_424E9D  +
add esp 10h +
mov [ebp+var_46C] eax +
test eax eax +
jle loc_41A541  +
lea eax [ebp+var_420] +
push eax  +
push [ebp+var_428]  +
push [ebp+var_45C]  +
call sub_421188  +
mov ecx [ebp+var_41C] +
add esp 0Ch +
add ecx [ebp+var_46C] +
mov eax [ebp+var_47C] +
mov [ebp+var_41C] ecx +
test eax eax +
jle loc_41A569  +
jmp loc_41A4A9  +
test bl 1 +
jz loc_41A51F  +
push 2Bh  +
jmp loc_41A3F8  +
test bl 2 +
jz loc_41A40A  +
push 20h  +
pop edx  +
mov word ptr [ebp+var_438] dx +
mov [ebp+var_424] 1 +
jmp loc_41A40D  +
or eax 0FFFFFFFFh +
mov [ebp+var_420] eax +
jmp loc_41A56F  +
push [ebp+var_464]  +
lea ecx [ebp+var_420] +
push ecx  +
push [ebp+var_428]  +
push eax  +
push esi  +
call sub_41A699  +
add esp 14h +
mov eax [ebp+var_420] +
test eax eax +
js loc_41A592  +
test bl 4 +
jz loc_41A592  +
lea eax [ebp+var_420] +
push eax  +
push [ebp+var_428]  +
push edi  +
push 20h  +
pop eax  +
push eax  +
call sub_4211BE  +
add esp 10h +
mov eax [ebp+lpMem] +
test eax eax +
jz loc_41A5AB  +
push eax  +
call sub_41740A  +
xor eax eax +
pop ecx  +
mov [ebp+lpMem] eax +
mov ecx [ebp+var_40C] +
mov eax [ebp+var_408] +
movzx edx word ptr [eax] +
mov eax [ebp+var_420] +
mov [ebp+var_41C] edx +
test dx dx +
jnz loc_419B22  +
cmp [ebp+var_444] 0 +
jz loc_41A5E2  +
mov ecx [ebp+var_448] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
call sub_416890  +
mov dword ptr [eax] 16h +
call sub_418D1E  +
cmp [ebp+var_444] 0 +
jz loc_419ABA  +
mov ecx [ebp+var_448] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
jmp loc_419ABA  +
***
push ecx  +
call sub_4179D5  +
mov edx eax +
mov eax [edx+6Ch] +
cmp eax off_432DC8 +
jz loc_41A737  +
mov ecx dword_433528 +
test [edx+70h] ecx +
jnz loc_41A737  +
call sub_41C681  +
mov eax [eax+4] +
retn   +
***
sub esp 44h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
mov [ebp+lpMem] ebx +
mov [ebp+var_20] ebx +
mov [ebp+var_24] ebx +
mov eax [esi+0A8h] +
mov [ebp+var_1C] ebx +
mov [ebp+lpMultiByteStr] ebx +
mov [ebp+var_44] esi +
mov [ebp+var_40] ebx +
test eax eax +
jz loc_41AA84  +
push edi  +
lea edi [esi+4] +
cmp [edi] ebx +
jnz loc_41A79E  +
push edi  +
push 1004h  +
push eax  +
lea eax [ebp+var_44] +
push ebx  +
push eax  +
call sub_424224  +
add esp 14h +
test eax eax +
jnz loc_41AA50  +
push 4  +
call sub_418F43  +
push 2  +
push 180h  +
mov [ebp+lpMem] eax +
call sub_418EFB  +
push 1  +
push 180h  +
mov [ebp+var_20] eax +
call sub_418EFB  +
push 1  +
push 180h  +
mov [ebp+var_24] eax +
call sub_418EFB  +
push 1  +
push 101h  +
mov [ebp+var_1C] eax +
call sub_418EFB  +
mov ecx eax +
add esp 24h +
mov eax [ebp+lpMem] +
mov [ebp+lpMultiByteStr] ecx +
test eax eax +
jz loc_41AA50  +
cmp [ebp+var_20] ebx +
jz loc_41AA50  +
test ecx ecx +
jz loc_41AA50  +
cmp [ebp+var_24] ebx +
jz loc_41AA50  +
cmp [ebp+var_1C] ebx +
jz loc_41AA50  +
mov [eax] ebx +
mov eax ebx +
mov [eax+ecx] al +
inc eax  +
cmp eax 100h +
jl loc_41A81B  +
lea eax [ebp+CPInfo] +
push eax  +
push dword ptr [edi]  +
call ds:GetCPInfo  +
test eax eax +
jz loc_41AA50  +
mov eax [ebp+CPInfo.MaxCharSize] +
cmp eax 5 +
ja loc_41AA50  +
mov ecx [ebp+lpMultiByteStr] +
mov edx 0FFh +
push ebx  +
push dword ptr [edi]  +
movzx eax ax +
inc ecx  +
push edx  +
mov [ebp+var_30] eax +
mov eax [ebp+var_24] +
add eax 81h +
mov [ebp+var_34] ecx +
push eax  +
push edx  +
push ecx  +
push 100h  +
push dword ptr [esi+0A8h]  +
push ebx  +
call sub_4251AE  +
add esp 24h +
test eax eax +
jz loc_41AA50  +
mov eax [ebp+var_1C] +
mov ecx 0FFh +
push ebx  +
push dword ptr [edi]  +
add eax 81h +
push ecx  +
push eax  +
push ecx  +
push [ebp+var_34]  +
push 200h  +
push dword ptr [esi+0A8h]  +
push ebx  +
call sub_4251AE  +
add esp 24h +
test eax eax +
jz loc_41AA50  +
cmp [ebp+var_30] 1 +
jle loc_41A8EC  +
cmp [ebp+CPInfo.LeadByte] bl +
jz loc_41A8EC  +
mov edi [ebp+lpMultiByteStr] +
lea ecx [ebp+CPInfo.LeadByte+1] +
mov al [ecx] +
test al al +
jz loc_41A8E9  +
movzx edx byte ptr [ecx-1] +
movzx eax al +
jmp loc_41A8DD  +
mov byte ptr [edx+edi] 20h +
inc edx  +
movzx eax byte ptr [ecx] +
cmp edx eax +
jle loc_41A8D5  +
add ecx 2 +
cmp [ecx-1] bl +
jnz loc_41A8C6  +
lea edi [esi+4] +
mov eax [ebp+var_20] +
push ebx  +
push dword ptr [edi]  +
add eax 100h +
push eax  +
push 100h  +
push [ebp+lpMultiByteStr]  +
push 1  +
push ebx  +
call sub_41F7FC  +
add esp 1Ch +
test eax eax +
jz loc_41AA50  +
mov edi [ebp+var_20] +
xor ecx ecx +
mov eax [ebp+var_1C] +
mov [edi+0FEh] cx +
mov ecx [ebp+var_24] +
mov [ecx+7Fh] bl +
sub ecx 0FFFFFF80h +
mov [eax+7Fh] bl +
sub eax 0FFFFFF80h +
cmp [ebp+var_30] 1 +
mov [ebp+var_3C] ecx +
mov [ecx] bl +
mov [ebp+var_38] eax +
mov [eax] bl +
jle loc_41A986  +
cmp [ebp+CPInfo.LeadByte] bl +
jz loc_41A986  +
lea ecx [ebp+CPInfo.LeadByte+1] +
mov al [ecx] +
test al al +
jz loc_41A986  +
movzx edx byte ptr [ecx-1] +
movzx eax al +
cmp edx eax +
jg loc_41A97E  +
lea eax [edi+100h] +
lea eax [eax+edx*2] +
mov [ebp+var_34] eax +
mov edi eax +
mov eax 8000h +
inc edx  +
mov [edi] ax +
lea edi [edi+2] +
movzx eax byte ptr [ecx] +
cmp edx eax +
jle loc_41A968  +
mov edi [ebp+var_20] +
add ecx 2 +
cmp [ecx-1] bl +
jnz loc_41A949  +
push 0FEh  +
lea eax [edi+200h] +
push eax  +
push edi  +
call sub_4024B1  +
mov ecx [ebp+var_24] +
push 7Fh  +
lea eax [ecx+100h] +
push eax  +
push ecx  +
call sub_4024B1  +
mov ecx [ebp+var_1C] +
push 7Fh  +
lea eax [ecx+100h] +
push eax  +
push ecx  +
call sub_4024B1  +
mov ecx [esi+88h] +
add esp 24h +
test ecx ecx +
jz loc_41AA0F  +
or eax 0FFFFFFFFh +
xadd [ecx] eax +
jnz loc_41AA0F  +
mov eax [esi+8Ch] +
sub eax 0FEh +
push eax  +
call sub_41740A  +
mov eax [esi+94h] +
add eax 0FFFFFF80h +
push eax  +
call sub_41740A  +
mov eax [esi+98h] +
add eax 0FFFFFF80h +
push eax  +
call sub_41740A  +
push dword ptr [esi+88h]  +
call sub_41740A  +
add esp 10h +
mov eax [ebp+lpMem] +
mov dword ptr [eax] 1 +
mov [esi+88h] eax +
lea eax [edi+100h] +
mov [esi+90h] eax +
lea eax [edi+0FEh] +
mov [esi+8Ch] eax +
mov eax [ebp+var_3C] +
mov [esi+94h] eax +
mov eax [ebp+var_38] +
mov [esi+98h] eax +
mov eax [ebp+var_30] +
mov [esi+74h] eax +
jmp loc_41AA76  +
push [ebp+lpMem]  +
call sub_41740A  +
push [ebp+var_20]  +
call sub_41740A  +
push [ebp+var_24]  +
call sub_41740A  +
push [ebp+var_1C]  +
call sub_41740A  +
xor ebx ebx +
add esp 10h +
inc ebx  +
push [ebp+lpMultiByteStr]  +
call sub_41740A  +
pop ecx  +
mov eax ebx +
pop edi  +
jmp loc_41AAC8  +
mov ecx [esi+88h] +
test ecx ecx +
jz loc_41AA95  +
or eax 0FFFFFFFFh +
xadd [ecx] eax +
mov [esi+88h] ebx +
xor eax eax +
mov [esi+8Ch] ebx +
mov dword ptr [esi+90h] offset asc_41ABD8 +
mov dword ptr [esi+94h] offset dword_41AE58 +
mov dword ptr [esi+98h] offset dword_41AFD8 +
mov dword ptr [esi+74h] 1 +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_41B1D1  +
mov eax [esi+0Ch] +
cmp eax off_43353C +
jz loc_41B0F9  +
push eax  +
call sub_41740A  +
pop ecx  +
mov eax [esi+10h] +
cmp eax off_433540 +
jz loc_41B10B  +
push eax  +
call sub_41740A  +
pop ecx  +
mov eax [esi+14h] +
cmp eax off_433544 +
jz loc_41B11D  +
push eax  +
call sub_41740A  +
pop ecx  +
mov eax [esi+18h] +
cmp eax off_433548 +
jz loc_41B12F  +
push eax  +
call sub_41740A  +
pop ecx  +
mov eax [esi+1Ch] +
cmp eax off_43354C +
jz loc_41B141  +
push eax  +
call sub_41740A  +
pop ecx  +
mov eax [esi+20h] +
cmp eax off_433550 +
jz loc_41B153  +
push eax  +
call sub_41740A  +
pop ecx  +
mov eax [esi+24h] +
cmp eax off_433554 +
jz loc_41B165  +
push eax  +
call sub_41740A  +
pop ecx  +
mov eax [esi+38h] +
cmp eax off_433568 +
jz loc_41B177  +
push eax  +
call sub_41740A  +
pop ecx  +
mov eax [esi+3Ch] +
cmp eax off_43356C +
jz loc_41B189  +
push eax  +
call sub_41740A  +
pop ecx  +
mov eax [esi+40h] +
cmp eax off_433570 +
jz loc_41B19B  +
push eax  +
call sub_41740A  +
pop ecx  +
mov eax [esi+44h] +
cmp eax off_433574 +
jz loc_41B1AD  +
push eax  +
call sub_41740A  +
pop ecx  +
mov eax [esi+48h] +
cmp eax off_433578 +
jz loc_41B1BF  +
push eax  +
call sub_41740A  +
pop ecx  +
mov eax [esi+4Ch] +
cmp eax off_43357C +
jz loc_41B1D1  +
push eax  +
call sub_41740A  +
pop ecx  +
pop esi  +
pop ebp  +
retn   +
***
sub esp 18h +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_41B5E5  +
mov eax [esi] +
cmp eax off_433530 +
jz loc_41B59D  +
push eax  +
call sub_41740A  +
pop ecx  +
mov eax [esi+4] +
cmp eax off_433534 +
jz loc_41B5AF  +
push eax  +
call sub_41740A  +
pop ecx  +
mov eax [esi+8] +
cmp eax off_433538 +
jz loc_41B5C1  +
push eax  +
call sub_41740A  +
pop ecx  +
mov eax [esi+30h] +
cmp eax off_433560 +
jz loc_41B5D3  +
push eax  +
call sub_41740A  +
pop ecx  +
mov eax [esi+34h] +
cmp eax off_433564 +
jz loc_41B5E5  +
push eax  +
call sub_41740A  +
pop ecx  +
pop esi  +
pop ebp  +
retn   +
***
sub esp 18h +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_41BB73  +
push dword ptr [esi+4]  +
call sub_41740A  +
push dword ptr [esi+8]  +
call sub_41740A  +
push dword ptr [esi+0Ch]  +
call sub_41740A  +
push dword ptr [esi+10h]  +
call sub_41740A  +
push dword ptr [esi+14h]  +
call sub_41740A  +
push dword ptr [esi+18h]  +
call sub_41740A  +
push dword ptr [esi]  +
call sub_41740A  +
push dword ptr [esi+20h]  +
call sub_41740A  +
push dword ptr [esi+24h]  +
call sub_41740A  +
push dword ptr [esi+28h]  +
call sub_41740A  +
push dword ptr [esi+2Ch]  +
call sub_41740A  +
push dword ptr [esi+30h]  +
call sub_41740A  +
push dword ptr [esi+34h]  +
call sub_41740A  +
push dword ptr [esi+1Ch]  +
call sub_41740A  +
push dword ptr [esi+38h]  +
call sub_41740A  +
push dword ptr [esi+3Ch]  +
call sub_41740A  +
add esp 40h +
push dword ptr [esi+40h]  +
call sub_41740A  +
push dword ptr [esi+44h]  +
call sub_41740A  +
push dword ptr [esi+48h]  +
call sub_41740A  +
push dword ptr [esi+4Ch]  +
call sub_41740A  +
push dword ptr [esi+50h]  +
call sub_41740A  +
push dword ptr [esi+54h]  +
call sub_41740A  +
push dword ptr [esi+58h]  +
call sub_41740A  +
push dword ptr [esi+5Ch]  +
call sub_41740A  +
push dword ptr [esi+60h]  +
call sub_41740A  +
push dword ptr [esi+64h]  +
call sub_41740A  +
push dword ptr [esi+68h]  +
call sub_41740A  +
push dword ptr [esi+6Ch]  +
call sub_41740A  +
push dword ptr [esi+70h]  +
call sub_41740A  +
push dword ptr [esi+74h]  +
call sub_41740A  +
push dword ptr [esi+78h]  +
call sub_41740A  +
push dword ptr [esi+7Ch]  +
call sub_41740A  +
add esp 40h +
push dword ptr [esi+80h]  +
call sub_41740A  +
push dword ptr [esi+84h]  +
call sub_41740A  +
push dword ptr [esi+88h]  +
call sub_41740A  +
push dword ptr [esi+8Ch]  +
call sub_41740A  +
push dword ptr [esi+90h]  +
call sub_41740A  +
push dword ptr [esi+94h]  +
call sub_41740A  +
push dword ptr [esi+98h]  +
call sub_41740A  +
push dword ptr [esi+9Ch]  +
call sub_41740A  +
push dword ptr [esi+0A0h]  +
call sub_41740A  +
push dword ptr [esi+0A4h]  +
call sub_41740A  +
push dword ptr [esi+0A8h]  +
call sub_41740A  +
push dword ptr [esi+0B8h]  +
call sub_41740A  +
push dword ptr [esi+0BCh]  +
call sub_41740A  +
push dword ptr [esi+0C0h]  +
call sub_41740A  +
push dword ptr [esi+0C4h]  +
call sub_41740A  +
push dword ptr [esi+0C8h]  +
call sub_41740A  +
add esp 40h +
push dword ptr [esi+0CCh]  +
call sub_41740A  +
push dword ptr [esi+0B4h]  +
call sub_41740A  +
push dword ptr [esi+0D4h]  +
call sub_41740A  +
push dword ptr [esi+0D8h]  +
call sub_41740A  +
push dword ptr [esi+0DCh]  +
call sub_41740A  +
push dword ptr [esi+0E0h]  +
call sub_41740A  +
push dword ptr [esi+0E4h]  +
call sub_41740A  +
push dword ptr [esi+0E8h]  +
call sub_41740A  +
push dword ptr [esi+0D0h]  +
call sub_41740A  +
push dword ptr [esi+0ECh]  +
call sub_41740A  +
push dword ptr [esi+0F0h]  +
call sub_41740A  +
push dword ptr [esi+0F4h]  +
call sub_41740A  +
push dword ptr [esi+0F8h]  +
call sub_41740A  +
push dword ptr [esi+0FCh]  +
call sub_41740A  +
push dword ptr [esi+100h]  +
call sub_41740A  +
push dword ptr [esi+104h]  +
call sub_41740A  +
add esp 40h +
push dword ptr [esi+108h]  +
call sub_41740A  +
push dword ptr [esi+10Ch]  +
call sub_41740A  +
push dword ptr [esi+110h]  +
call sub_41740A  +
push dword ptr [esi+114h]  +
call sub_41740A  +
push dword ptr [esi+118h]  +
call sub_41740A  +
push dword ptr [esi+11Ch]  +
call sub_41740A  +
push dword ptr [esi+120h]  +
call sub_41740A  +
push dword ptr [esi+124h]  +
call sub_41740A  +
push dword ptr [esi+128h]  +
call sub_41740A  +
push dword ptr [esi+12Ch]  +
call sub_41740A  +
push dword ptr [esi+130h]  +
call sub_41740A  +
push dword ptr [esi+134h]  +
call sub_41740A  +
push dword ptr [esi+138h]  +
call sub_41740A  +
push dword ptr [esi+13Ch]  +
call sub_41740A  +
push dword ptr [esi+140h]  +
call sub_41740A  +
push dword ptr [esi+144h]  +
call sub_41740A  +
add esp 40h +
push dword ptr [esi+148h]  +
call sub_41740A  +
push dword ptr [esi+14Ch]  +
call sub_41740A  +
push dword ptr [esi+150h]  +
call sub_41740A  +
push dword ptr [esi+154h]  +
call sub_41740A  +
push dword ptr [esi+158h]  +
call sub_41740A  +
push dword ptr [esi+15Ch]  +
call sub_41740A  +
push dword ptr [esi+160h]  +
call sub_41740A  +
add esp 1Ch +
pop esi  +
pop ebp  +
retn   +
***
push ebx  +
push ecx  +
mov edx [ebp+arg_0] +
push ecx  +
mov edx [ebp+arg_0] +
call sub_401E34  +
jmp sub_41C71C  +
***
pop ecx  +
push edi  +
cmp dword_434AD4 0 +
mov eax [ebp+arg_0] +
sub eax 3A4h +
jz loc_41C7C1  +
sub eax 4 +
jz loc_41C7BA  +
sub eax 0Dh +
jz loc_41C7B3  +
dec eax  +
jz loc_41C7AC  +
xor eax eax +
pop ebp  +
retn   +
mov eax ds:off_41C7D4 +
pop ebp  +
retn   +
mov eax ds:off_41C7D0 +
pop ebp  +
retn   +
mov eax ds:off_41C7CC +
pop ebp  +
retn   +
mov eax ds:off_41C7C8 +
pop ebp  +
retn   +
***
sub esp 10h +
push ebx  +
sub esp 520h +
call sub_401E34  +
jmp sub_41CAF4  +
***
pop ecx  +
call sub_401E34  +
jmp sub_41CC94  +
***
pop ecx  +
retn   +
***
sub esp 20h +
push ebx  +
mov ebx [ebp+arg_8] +
mov eax ebx +
push esi  +
sub eax 0 +
jz loc_41E5A3  +
dec eax  +
jz loc_41E592  +
dec eax  +
jz loc_41E563  +
dec eax  +
jz loc_41E519  +
mov edx [ebp+arg_4] +
dec eax  +
jz loc_41E491  +
mov esi [ebp+arg_0] +
push edi  +
cmp ebx 20h +
jb loc_41D393  +
mov eax [esi] +
cmp eax [edx] +
jz loc_41CF7C  +
movzx edi al +
movzx eax byte ptr [edx] +
sub edi eax +
jz loc_41CF1C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi+1] +
movzx eax byte ptr [edx+1] +
sub edi eax +
jz loc_41CF3E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi+2] +
movzx eax byte ptr [edx+2] +
sub edi eax +
jz loc_41CF60  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_41CF7E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41CF7E  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi+4] +
cmp eax [edx+4] +
jz loc_41D00D  +
movzx edi al +
movzx eax byte ptr [edx+4] +
sub edi eax +
jz loc_41CFAD  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi+5] +
movzx eax byte ptr [edx+5] +
sub edi eax +
jz loc_41CFCF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi+6] +
movzx eax byte ptr [edx+6] +
sub edi eax +
jz loc_41CFF1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi+7] +
movzx eax byte ptr [edx+7] +
sub ecx eax +
jz loc_41D00F  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D00F  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi+8] +
cmp eax [edx+8] +
jz loc_41D09E  +
movzx edi al +
movzx eax byte ptr [edx+8] +
sub edi eax +
jz loc_41D03E  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi+9] +
movzx eax byte ptr [edx+9] +
sub edi eax +
jz loc_41D060  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi+0Ah] +
movzx eax byte ptr [edx+0Ah] +
sub edi eax +
jz loc_41D082  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi+0Bh] +
movzx eax byte ptr [edx+0Bh] +
sub ecx eax +
jz loc_41D0A0  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D0A0  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi+0Ch] +
cmp eax [edx+0Ch] +
jz loc_41D12F  +
movzx edi al +
movzx eax byte ptr [edx+0Ch] +
sub edi eax +
jz loc_41D0CF  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi+0Dh] +
movzx eax byte ptr [edx+0Dh] +
sub edi eax +
jz loc_41D0F1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi+0Eh] +
movzx eax byte ptr [edx+0Eh] +
sub edi eax +
jz loc_41D113  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi+0Fh] +
movzx eax byte ptr [edx+0Fh] +
sub ecx eax +
jz loc_41D131  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D131  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi+10h] +
cmp eax [edx+10h] +
jz loc_41D1C5  +
movzx eax byte ptr [edx+10h] +
movzx edi byte ptr [esi+10h] +
sub edi eax +
jz loc_41D165  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi+11h] +
movzx eax byte ptr [edx+11h] +
sub edi eax +
jz loc_41D187  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi+12h] +
movzx eax byte ptr [edx+12h] +
sub edi eax +
jz loc_41D1A9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi+13h] +
movzx eax byte ptr [edx+13h] +
sub ecx eax +
jz loc_41D1C7  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D1C7  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi+14h] +
cmp eax [edx+14h] +
jz loc_41D256  +
movzx edi al +
movzx eax byte ptr [edx+14h] +
sub edi eax +
jz loc_41D1F6  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi+15h] +
movzx eax byte ptr [edx+15h] +
sub edi eax +
jz loc_41D218  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi+16h] +
movzx eax byte ptr [edx+16h] +
sub edi eax +
jz loc_41D23A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi+17h] +
movzx eax byte ptr [edx+17h] +
sub ecx eax +
jz loc_41D258  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D258  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi+18h] +
cmp eax [edx+18h] +
jz loc_41D2E7  +
movzx edi al +
movzx eax byte ptr [edx+18h] +
sub edi eax +
jz loc_41D287  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi+19h] +
movzx eax byte ptr [edx+19h] +
sub edi eax +
jz loc_41D2A9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi+1Ah] +
movzx eax byte ptr [edx+1Ah] +
sub edi eax +
jz loc_41D2CB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi+1Bh] +
movzx eax byte ptr [edx+1Bh] +
sub ecx eax +
jz loc_41D2E9  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D2E9  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi+1Ch] +
cmp eax [edx+1Ch] +
jz loc_41D378  +
movzx edi al +
movzx eax byte ptr [edx+1Ch] +
sub edi eax +
jz loc_41D318  +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi+1Dh] +
movzx eax byte ptr [edx+1Dh] +
sub edi eax +
jz loc_41D33A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi+1Eh] +
movzx eax byte ptr [edx+1Eh] +
sub edi eax +
jz loc_41D35C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi+1Fh] +
movzx eax byte ptr [edx+1Fh] +
sub ecx eax +
jz loc_41D37A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D37A  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
push 20h  +
pop ecx  +
sub ebx ecx +
add esi ecx +
add edx ecx +
cmp ebx ecx +
jnb loc_41CEF2  +
add esi ebx +
add edx ebx +
cmp ebx 1Fh +
ja loc_41D7B5  +
jmp ds:off_41E5A9[ebx*4]  +
mov eax [esi-1Ch] +
cmp eax [edx-1Ch] +
jz loc_41D434  +
movzx edi al +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_41D3D4  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_41D3F6  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_41D418  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub ecx eax +
jz loc_41D436  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D436  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-18h] +
cmp eax [edx-18h] +
jz loc_41D4CB  +
movzx edi al +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_41D46B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_41D48D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_41D4AF  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub ecx eax +
jz loc_41D4CD  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D4CD  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-14h] +
cmp eax [edx-14h] +
jz loc_41D562  +
movzx edi al +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_41D502  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_41D524  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_41D546  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub ecx eax +
jz loc_41D564  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D564  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-10h] +
cmp eax [edx-10h] +
jz loc_41D5F9  +
movzx edi al +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_41D599  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_41D5BB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_41D5DD  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub ecx eax +
jz loc_41D5FB  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D5FB  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-0Ch] +
cmp eax [edx-0Ch] +
jz loc_41D691  +
movzx eax byte ptr [edx-0Ch] +
movzx edi byte ptr [esi-0Ch] +
sub edi eax +
jz loc_41D631  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_41D653  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_41D675  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub ecx eax +
jz loc_41D693  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D693  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-8] +
cmp eax [edx-8] +
jz loc_41D728  +
movzx edi al +
movzx eax byte ptr [edx-8] +
sub edi eax +
jz loc_41D6C8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_41D6EA  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_41D70C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub ecx eax +
jz loc_41D72A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D72A  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-4] +
cmp eax [edx-4] +
jz loc_41D7AF  +
movzx edi al +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_41D757  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_41D775  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub edi eax +
jz loc_41D793  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-1] +
movzx eax byte ptr [edx-1] +
sub ecx eax +
jz loc_41D7B1  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D7B1  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
xor ecx ecx +
mov eax ecx +
pop edi  +
jmp loc_41E5A5  +
mov eax [esi-1Dh] +
cmp eax [edx-1Dh] +
jz loc_41D83C  +
movzx edi al +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_41D7E4  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_41D802  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_41D820  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub ecx eax +
jz loc_41D83E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D83E  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-19h] +
cmp eax [edx-19h] +
jz loc_41D8D3  +
movzx edi al +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_41D873  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_41D895  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_41D8B7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub ecx eax +
jz loc_41D8D5  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D8D5  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-15h] +
cmp eax [edx-15h] +
jz loc_41D96A  +
movzx edi al +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_41D90A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_41D92C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_41D94E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub ecx eax +
jz loc_41D96C  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D96C  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-11h] +
cmp eax [edx-11h] +
jz loc_41DA01  +
movzx edi al +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_41D9A1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_41D9C3  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub edi eax +
jz loc_41D9E5  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub ecx eax +
jz loc_41DA03  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41DA03  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-0Dh] +
cmp eax [edx-0Dh] +
jz loc_41DA98  +
movzx edi al +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_41DA38  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_41DA5A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_41DA7C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub ecx eax +
jz loc_41DA9A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41DA9A  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-9] +
cmp eax [edx-9] +
jz loc_41DB30  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jz loc_41DAD0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub edi eax +
jz loc_41DAF2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-7] +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_41DB14  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub ecx eax +
jz loc_41DB32  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41DB32  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-5] +
cmp eax [edx-5] +
jz loc_41DBC7  +
movzx edi al +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_41DB67  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_41DB89  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_41DBAB  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-2] +
movzx eax byte ptr [edx-2] +
sub ecx eax +
jz loc_41DBC9  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41DBC9  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
movzx eax byte ptr [edx-1] +
movzx ecx byte ptr [esi-1] +
sub ecx eax +
jz loc_41D7B7  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41D7B7  +
mov eax [esi-1Eh] +
cmp eax [edx-1Eh] +
jz loc_41DC81  +
movzx edi al +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jz loc_41DC21  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_41DC43  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub edi eax +
jz loc_41DC65  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-1Bh] +
movzx eax byte ptr [edx-1Bh] +
sub ecx eax +
jz loc_41DC83  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41DC83  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-1Ah] +
cmp eax [edx-1Ah] +
jz loc_41DD18  +
movzx edi al +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_41DCB8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_41DCDA  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub edi eax +
jz loc_41DCFC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-17h] +
movzx eax byte ptr [edx-17h] +
sub ecx eax +
jz loc_41DD1A  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41DD1A  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-16h] +
cmp eax [edx-16h] +
jz loc_41DDAF  +
movzx edi al +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_41DD4F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_41DD71  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub edi eax +
jz loc_41DD93  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-13h] +
movzx eax byte ptr [edx-13h] +
sub ecx eax +
jz loc_41DDB1  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41DDB1  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-12h] +
cmp eax [edx-12h] +
jz loc_41DE46  +
movzx edi al +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_41DDE6  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_41DE08  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub edi eax +
jz loc_41DE2A  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-0Fh] +
movzx eax byte ptr [edx-0Fh] +
sub ecx eax +
jz loc_41DE48  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41DE48  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-0Eh] +
cmp eax [edx-0Eh] +
jz loc_41DEDD  +
movzx edi al +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_41DE7D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_41DE9F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub edi eax +
jz loc_41DEC1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-0Bh] +
movzx eax byte ptr [edx-0Bh] +
sub ecx eax +
jz loc_41DEDF  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41DEDF  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-0Ah] +
cmp eax [edx-0Ah] +
jz loc_41DF75  +
movzx eax byte ptr [edx-0Ah] +
movzx edi byte ptr [esi-0Ah] +
sub edi eax +
jz loc_41DF15  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx eax byte ptr [edx-9] +
movzx edi byte ptr [esi-9] +
sub edi eax +
jz loc_41DF37  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx eax byte ptr [edx-8] +
movzx edi byte ptr [esi-8] +
sub edi eax +
jz loc_41DF59  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx eax byte ptr [edx-7] +
movzx ecx byte ptr [esi-7] +
sub ecx eax +
jz loc_41DF77  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41DF77  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-6] +
cmp eax [edx-6] +
jz loc_41E00C  +
movzx edi al +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_41DFAC  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_41DFCE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub edi eax +
jz loc_41DFF0  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub ecx eax +
jz loc_41E00E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E00E  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov ax [esi-2] +
cmp ax [edx-2] +
jnz loc_41E46E  +
jmp loc_41D7B5  +
mov eax [esi-1Fh] +
cmp eax [edx-1Fh] +
jz loc_41E0B7  +
movzx eax byte ptr [edx-1Fh] +
movzx edi byte ptr [esi-1Fh] +
sub edi eax +
jz loc_41E057  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-1Eh] +
movzx eax byte ptr [edx-1Eh] +
sub edi eax +
jz loc_41E079  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-1Dh] +
movzx eax byte ptr [edx-1Dh] +
sub edi eax +
jz loc_41E09B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-1Ch] +
movzx eax byte ptr [edx-1Ch] +
sub ecx eax +
jz loc_41E0B9  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E0B9  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-1Bh] +
cmp eax [edx-1Bh] +
jz loc_41E14E  +
movzx edi al +
movzx eax byte ptr [edx-1Bh] +
sub edi eax +
jz loc_41E0EE  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-1Ah] +
movzx eax byte ptr [edx-1Ah] +
sub edi eax +
jz loc_41E110  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-19h] +
movzx eax byte ptr [edx-19h] +
sub edi eax +
jz loc_41E132  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-18h] +
movzx eax byte ptr [edx-18h] +
sub ecx eax +
jz loc_41E150  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E150  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-17h] +
cmp eax [edx-17h] +
jz loc_41E1E5  +
movzx edi al +
movzx eax byte ptr [edx-17h] +
sub edi eax +
jz loc_41E185  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-16h] +
movzx eax byte ptr [edx-16h] +
sub edi eax +
jz loc_41E1A7  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-15h] +
movzx eax byte ptr [edx-15h] +
sub edi eax +
jz loc_41E1C9  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-14h] +
movzx eax byte ptr [edx-14h] +
sub ecx eax +
jz loc_41E1E7  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E1E7  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-13h] +
cmp eax [edx-13h] +
jz loc_41E27C  +
movzx edi al +
movzx eax byte ptr [edx-13h] +
sub edi eax +
jz loc_41E21C  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-12h] +
movzx eax byte ptr [edx-12h] +
sub edi eax +
jz loc_41E23E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-11h] +
movzx eax byte ptr [edx-11h] +
sub edi eax +
jz loc_41E260  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-10h] +
movzx eax byte ptr [edx-10h] +
sub ecx eax +
jz loc_41E27E  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E27E  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-0Fh] +
cmp eax [edx-0Fh] +
jz loc_41E314  +
movzx eax byte ptr [edx-0Fh] +
movzx edi byte ptr [esi-0Fh] +
sub edi eax +
jz loc_41E2B4  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-0Eh] +
movzx eax byte ptr [edx-0Eh] +
sub edi eax +
jz loc_41E2D6  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-0Dh] +
movzx eax byte ptr [edx-0Dh] +
sub edi eax +
jz loc_41E2F8  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-0Ch] +
movzx eax byte ptr [edx-0Ch] +
sub ecx eax +
jz loc_41E316  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E316  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-0Bh] +
cmp eax [edx-0Bh] +
jz loc_41E3AB  +
movzx edi al +
movzx eax byte ptr [edx-0Bh] +
sub edi eax +
jz loc_41E34B  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-0Ah] +
movzx eax byte ptr [edx-0Ah] +
sub edi eax +
jz loc_41E36D  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-9] +
movzx eax byte ptr [edx-9] +
sub edi eax +
jz loc_41E38F  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-8] +
movzx eax byte ptr [edx-8] +
sub ecx eax +
jz loc_41E3AD  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E3AD  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
mov eax [esi-7] +
cmp eax [edx-7] +
jz loc_41E442  +
movzx edi al +
movzx eax byte ptr [edx-7] +
sub edi eax +
jz loc_41E3E2  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-6] +
movzx eax byte ptr [edx-6] +
sub edi eax +
jz loc_41E404  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-5] +
movzx eax byte ptr [edx-5] +
sub edi eax +
jz loc_41E426  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx ecx byte ptr [esi-4] +
movzx eax byte ptr [edx-4] +
sub ecx eax +
jz loc_41E444  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
jmp loc_41E444  +
xor ecx ecx +
test ecx ecx +
jnz loc_41D7B7  +
movzx edi byte ptr [esi-3] +
movzx eax byte ptr [edx-3] +
sub edi eax +
jz loc_41E46E  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
test ecx ecx +
jnz loc_41D7B7  +
movzx eax byte ptr [edx-2] +
movzx edi byte ptr [esi-2] +
sub edi eax +
jz loc_41DBD1  +
xor ecx ecx +
test edi edi +
setnle cl  +
lea ecx ds:0FFFFFFFFh[ecx*2] +
jmp loc_41DBC9  +
mov ecx [ebp+arg_0] +
movzx eax byte ptr [edx] +
movzx esi byte ptr [ecx] +
sub esi eax +
jz loc_41E4B4  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_41E5A5  +
movzx esi byte ptr [ecx+1] +
movzx eax byte ptr [edx+1] +
sub esi eax +
jz loc_41E4D6  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_41E5A5  +
movzx esi byte ptr [ecx+2] +
movzx eax byte ptr [edx+2] +
sub esi eax +
jz loc_41E4F8  +
xor eax eax +
test esi esi +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_41E5A5  +
movzx ecx byte ptr [ecx+3] +
movzx eax byte ptr [edx+3] +
sub ecx eax +
jz loc_41E512  +
xor eax eax +
test ecx ecx +
setnle al  +
lea ecx ds:0FFFFFFFFh[eax*2] +
mov eax ecx +
jmp loc_41E5A5  +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx ecx byte ptr [edx] +
movzx eax byte ptr [esi] +
sub ecx eax +
jz loc_41E53B  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_41E5A5  +
movzx ecx byte ptr [edx+1] +
movzx eax byte ptr [esi+1] +
sub ecx eax +
jz loc_41E559  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_41E5A5  +
movzx ecx byte ptr [edx+2] +
movzx eax byte ptr [esi+2] +
jmp loc_41E500  +
mov edx [ebp+arg_0] +
mov esi [ebp+arg_4] +
movzx ecx byte ptr [edx] +
movzx eax byte ptr [esi] +
sub ecx eax +
jz loc_41E585  +
xor eax eax +
test ecx ecx +
setnle al  +
lea eax ds:0FFFFFFFFh[eax*2] +
test eax eax +
jnz loc_41E5A5  +
movzx ecx byte ptr [edx+1] +
movzx eax byte ptr [esi+1] +
jmp loc_41E500  +
mov eax [ebp+arg_0] +
movzx ecx byte ptr [eax] +
mov eax [ebp+arg_4] +
movzx eax byte ptr [eax] +
jmp loc_41E500  +
xor eax eax +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
push esi  +
push ecx  +
mov eax [ebp+arg_0] +
xor edx edx +
sub esp 0B0h +
push esi  +
push esi  +
mov ecx [ebp+arg_0] +
xor edx edx +
test ecx ecx +
jnz loc_41E862  +
xor eax eax +
pop ebp  +
retn   +
movzx eax word ptr [ecx] +
add ecx 2 +
cmp ax 41h +
jb loc_41E874  +
cmp ax 5Ah +
jbe loc_41E87D  +
add eax 0FFFFFF9Fh +
cmp ax 19h +
ja loc_41E880  +
inc edx  +
jmp loc_41E862  +
mov eax edx +
pop ebp  +
retn   +
***
sub esp 88h +
sub esp 0F4h +
push ecx  +
sub esp 18h +
push ecx  +
push ecx  +
sub esp 0F4h +
push esi  +
push esi  +
push esi  +
mov ecx [ebp+arg_0] +
sub esp 0F4h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
call sub_4179D5  +
lea ebx [eax+9Ch] +
call sub_4179D5  +
push esi  +
mov edi [eax+3B8h] +
call sub_41F35B  +
pop ecx  +
mov ecx [ebx+14h] +
mov esi eax +
neg ecx  +
lea eax [ebp+LCData] +
push 0F0h  +
sbb ecx ecx +
and ecx 0FFFFF005h +
push eax  +
add ecx 1002h +
push ecx  +
push esi  +
call ds:GetLocaleInfoW  +
test eax eax +
jnz loc_41F0EE  +
and dword ptr [edi] 0 +
xor eax eax +
inc eax  +
jmp loc_41F262  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx+4]  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_41F1A4  +
push 0F0h  +
lea eax [ebp+LCData] +
push eax  +
mov eax [ebx+10h] +
neg eax  +
sbb eax eax +
and eax 0FFFFF002h +
add eax 1001h +
push eax  +
push esi  +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_41F0E3  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx]  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_41F14F  +
or dword ptr [edi] 304h +
mov [edi+4] esi +
jmp loc_41F1A1  +
test byte ptr [edi] 2 +
jnz loc_41F1A4  +
cmp dword ptr [ebx+0Ch] 0 +
jz loc_41F18A  +
push dword ptr [ebx+0Ch]  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx]  +
call sub_416A42  +
add esp 0Ch +
test eax eax +
jnz loc_41F18A  +
or dword ptr [edi] 2 +
mov [edi+8] esi +
push dword ptr [ebx]  +
call sub_41E6E3  +
pop ecx  +
cmp eax [ebx+0Ch] +
jnz loc_41F1A4  +
mov [edi+4] esi +
jmp loc_41F1A4  +
mov edx [edi] +
test dl 1 +
jnz loc_41F1A4  +
push esi  +
call sub_41F438  +
pop ecx  +
test eax eax +
jz loc_41F1A4  +
or edx 1 +
mov [edi] edx +
mov [edi+8] esi +
mov eax [edi] +
mov ecx 300h +
and eax ecx +
cmp eax ecx +
jz loc_41F258  +
mov ecx [ebx+10h] +
lea eax [ebp+LCData] +
neg ecx  +
push 0F0h  +
sbb ecx ecx +
and ecx 0FFFFF002h +
push eax  +
add ecx 1001h +
push ecx  +
push esi  +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_41F0E3  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx]  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_41F21A  +
or dword ptr [edi] 200h +
cmp [ebx+10h] eax +
jnz loc_41F249  +
cmp [ebx+0Ch] eax +
jz loc_41F249  +
push dword ptr [ebx]  +
call sub_41E6E3  +
pop ecx  +
cmp eax [ebx+0Ch] +
jnz loc_41F249  +
push edi  +
push 1  +
jmp loc_41F23C  +
cmp dword ptr [ebx+10h] 0 +
jnz loc_41F258  +
cmp dword ptr [ebx+0Ch] 0 +
jz loc_41F258  +
lea eax [ebp+LCData] +
push eax  +
push dword ptr [ebx]  +
call sub_4145B0  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_41F258  +
push edi  +
push eax  +
push esi  +
call sub_41F470  +
add esp 0Ch +
test eax eax +
jz loc_41F258  +
or dword ptr [edi] 100h +
cmp dword ptr [edi+4] 0 +
jnz loc_41F258  +
mov [edi+4] esi +
mov eax [edi] +
shr eax 2 +
not eax  +
and eax 1 +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn 4  +
***
sub esp 0F4h +
mov edx [ebp+arg_0] +
push ecx  +
mov ecx [ebp+arg_0] +
xor eax eax +
cmp cx ds:word_41F45C[eax] +
jz loc_41F456  +
add eax 2 +
cmp eax 14h +
jb loc_41F440  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
push ecx  +
sub esp 18h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+var_18] eax +
mov eax [ebp+arg_8] +
push edi  +
mov [ebp+var_14] eax +
call sub_4179D5  +
push 0Ch  +
lea ebx [eax+9Ch] +
xor eax eax +
push eax  +
lea eax [ebp+var_10] +
push eax  +
call sub_40125C  +
add esp 0Ch +
call sub_4179D5  +
lea ecx [ebp+var_10] +
mov [eax+3B8h] ecx +
test esi esi +
jnz loc_41F536  +
or [ebp+var_10] 104h +
jmp loc_41F5F3  +
lea eax [esi+80h] +
mov [ebx] esi +
lea edi [ebx+4] +
xor ecx ecx +
mov [edi] eax +
test eax eax +
jz loc_41F565  +
cmp [eax] cx +
jz loc_41F565  +
mov eax ds:dword_41F700 +
push edi  +
dec eax  +
push eax  +
push offset off_40C360  +
call sub_41EC57  +
add esp 0Ch +
xor ecx ecx +
mov [ebp+var_10] ecx +
mov eax [ebx] +
test eax eax +
jz loc_41F5D5  +
cmp [eax] cx +
jz loc_41F5D5  +
mov eax [edi] +
test eax eax +
jz loc_41F589  +
cmp [eax] cx +
jz loc_41F589  +
lea eax [ebp+var_10] +
push eax  +
call sub_41EF80  +
jmp loc_41F592  +
lea eax [ebp+var_10] +
push eax  +
call sub_41EFFD  +
cmp [ebp+var_10] 0 +
pop ecx  +
jnz loc_41F609  +
mov eax ds:dword_41F6FC +
push ebx  +
dec eax  +
push eax  +
push offset off_40B8A8  +
call sub_41EC57  +
add esp 0Ch +
test eax eax +
jz loc_41F5FF  +
mov eax [edi] +
test eax eax +
jz loc_41F5CA  +
xor ecx ecx +
cmp [eax] cx +
jz loc_41F5CA  +
lea eax [ebp+var_10] +
push eax  +
call sub_41EF80  +
jmp loc_41F5E9  +
lea eax [ebp+var_10] +
push eax  +
call sub_41EFFD  +
jmp loc_41F5E9  +
mov eax [edi] +
test eax eax +
jz loc_41F5EC  +
cmp [eax] cx +
jz loc_41F5EC  +
lea eax [ebp+var_10] +
push eax  +
call sub_41EF40  +
pop ecx  +
jmp loc_41F5FF  +
mov [ebp+var_10] 104h +
call ds:GetUserDefaultLCID  +
mov [ebp+Locale] eax +
mov [ebp+var_8] eax +
cmp [ebp+var_10] 0 +
jz loc_41F6E9  +
lea eax [ebp+var_10] +
push eax  +
lea eax [esi+100h] +
neg esi  +
sbb esi esi +
and esi eax +
push esi  +
call sub_41F3AA  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_41F6E9  +
cmp esi 0FDE8h +
jz loc_41F6E9  +
cmp esi 0FDE9h +
jz loc_41F6E9  +
movzx eax si +
push eax  +
call ds:IsValidCodePage  +
test eax eax +
jz loc_41F6E9  +
push 1  +
push [ebp+Locale]  +
call ds:IsValidLocale  +
test eax eax +
jz loc_41F6E9  +
mov eax [ebp+var_18] +
test eax eax +
jz loc_41F671  +
mov [eax] esi +
push 55h  +
lea eax [ebx+250h] +
push eax  +
push [ebp+Locale]  +
call sub_42004E  +
mov ebx [ebp+var_14] +
add esp 0Ch +
test ebx ebx +
jz loc_41F6E4  +
push 55h  +
lea eax [ebx+120h] +
push eax  +
push [ebp+Locale]  +
call sub_42004E  +
add esp 0Ch +
push 40h  +
push ebx  +
push 1001h  +
push [ebp+Locale]  +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_41F6E9  +
push 40h  +
lea eax [ebx+80h] +
push eax  +
push 1002h  +
push [ebp+var_8]  +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_41F6E9  +
push 0Ah  +
push 10h  +
lea ecx [ebx+100h] +
push ecx  +
push esi  +
call sub_4252B7  +
add esp 10h +
xor eax eax +
inc eax  +
jmp loc_41F6EB  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
push ecx  +
sub esp 10h +
push esi  +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov ebx 0E3h +
lea eax [ebx+edi] +
cdq   +
sub eax edx +
mov esi eax +
sar esi 1 +
push 55h  +
push ds:off_41F8C0[esi*8]  +
push [ebp+arg_0]  +
call sub_4203B1  +
add esp 0Ch +
test eax eax +
jz loc_41F8B3  +
jns loc_41F8A7  +
lea ebx [esi-1] +
jmp loc_41F8AA  +
lea edi [esi+1] +
cmp edi ebx +
jle loc_41F87E  +
or eax 0FFFFFFFFh +
jmp loc_41F8BA  +
mov eax ds:dword_41F8C4[esi*8] +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
retf 0  +
***
mov esi 0D0000000h +
fld  qword ptr [eax+0] +
retn   +
***
mov eax 0 +
fiadd  word ptr [eax+0] +
retf   +
***
retn 0  +
***
push ecx  +
mov eax [ebp+arg_0] +
cmp [ebp+arg_0] 0 +
jz loc_4200F0  +
push [ebp+arg_0]  +
call sub_41F871  +
pop ecx  +
test eax eax +
js loc_4200F0  +
cmp eax 0E4h +
jnb loc_4200F0  +
mov eax ds:dword_40C648[eax*8] +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
push ecx  +
and dword_434A20 0 +
mov eax 0FFFFh +
cmp [ebp+lpMem] 0 +
jnz loc_420508  +
call sub_416890  +
mov dword ptr [eax] 16h +
call sub_418D1E  +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
push [ebp+lpMem]  +
push 0  +
push hHeap  +
call ds:HeapSize  +
pop ebp  +
retn   +
***
sub esp 488h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
lea ecx [ebp+var_44C] +
push ebx  +
push esi  +
mov [ebp+var_428] eax +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_8]  +
mov edi [ebp+arg_C] +
mov [ebp+var_408] eax +
xor eax eax +
mov ebx eax +
mov [ebp+var_410] edi +
mov [ebp+var_458] eax +
mov esi eax +
mov [ebp+var_414] ebx +
mov [ebp+var_430] eax +
mov [ebp+var_418] eax +
mov [ebp+var_424] eax +
mov [ebp+var_45C] eax +
mov [ebp+var_450] eax +
mov [ebp+var_42C] eax +
call sub_414521  +
call sub_416890  +
mov [ebp+var_464] eax +
cmp [ebp+var_428] ebx +
jnz loc_4205D2  +
call sub_416890  +
mov dword ptr [eax] 16h +
call sub_418D1E  +
cmp [ebp+var_440] bl +
jz loc_4205CA  +
mov eax [ebp+var_444] +
and dword ptr [eax+70h] 0FFFFFFFDh +
or eax 0FFFFFFFFh +
jmp loc_42110D  +
mov edx [ebp+var_408] +
test edx edx +
jz loc_4205A8  +
movzx edx word ptr [edx] +
xor ecx ecx +
mov [ebp+var_40C] ecx +
mov eax ecx +
mov [ebp+var_420] eax +
mov [ebp+var_434] ecx +
mov [ebp+lpMem] ecx +
mov [ebp+var_41C] edx +
test dx dx +
jz loc_4210FA  +
mov [ebp+var_470] 58h +
mov [ebp+var_474] 64h +
mov [ebp+var_478] 69h +
mov [ebp+var_468] 6Fh +
add [ebp+var_408] 2 +
test eax eax +
js loc_4210EB  +
push 58h  +
lea eax [edx-20h] +
pop edi  +
cmp ax di +
ja loc_42065B  +
movzx eax dx +
movzx eax ds:byte_40DFC8[eax] +
and eax 0Fh +
jmp loc_42065D  +
xor eax eax +
mov edi [ebp+var_434] +
imul eax eax +
movzx edi ds:byte_40DFE8[eax+edi] +
mov eax edi +
mov [ebp+var_434] edi +
mov edi [ebp+var_410] +
shr eax 4 +
mov [ebp+var_434] eax +
cmp eax 8 +
jz loc_42114A  +
cmp eax 7 +
ja loc_4210CD  +
jmp ds:off_421168[eax*4]  +
xor eax eax +
or [ebp+var_418] 0FFFFFFFFh +
mov ebx eax +
mov [ebp+var_45C] eax +
mov [ebp+var_450] eax +
mov [ebp+var_430] eax +
mov [ebp+var_424] eax +
mov [ebp+var_414] ebx +
mov [ebp+var_42C] eax +
jmp loc_4210CD  +
movzx eax dx +
push 20h  +
pop edx  +
sub eax edx +
jz loc_420722  +
sub eax 3 +
jz loc_42071A  +
sub eax 8 +
jz loc_420715  +
dec eax  +
dec eax  +
jz loc_420707  +
sub eax 3 +
mov eax [ebp+var_408] +
jnz loc_4210D3  +
or ebx 8 +
mov [ebp+var_414] ebx +
jmp loc_4210D3  +
or ebx 4 +
mov [ebp+var_414] ebx +
jmp loc_4210CD  +
or ebx 1 +
jmp loc_42070A  +
or ebx 80h +
jmp loc_42070A  +
or ebx 2 +
jmp loc_42070A  +
push 2Ah  +
pop eax  +
cmp dx ax +
jnz loc_42075E  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_410] edi +
mov [ebp+var_430] eax +
test eax eax +
jns loc_4210CD  +
or ebx 4 +
neg eax  +
mov [ebp+var_414] ebx +
mov [ebp+var_430] eax +
jmp loc_4210CD  +
imul ecx [ebp+var_430] +
movzx eax dx +
add ecx 0FFFFFFD0h +
add eax ecx +
mov [ebp+var_430] eax +
jmp loc_4210C7  +
xor eax eax +
mov [ebp+var_418] eax +
jmp loc_4210CD  +
push 2Ah  +
pop eax  +
cmp dx ax +
jnz loc_4207B8  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_418] eax +
test eax eax +
mov eax [ebp+var_408] +
mov [ebp+var_410] edi +
jns loc_4210D3  +
or [ebp+var_418] 0FFFFFFFFh +
jmp loc_4210D3  +
imul ecx [ebp+var_418] +
movzx eax dx +
add ecx 0FFFFFFD0h +
add eax ecx +
mov [ebp+var_418] eax +
jmp loc_4210C7  +
movzx eax dx +
cmp eax 49h +
jz loc_420831  +
cmp eax 68h +
jz loc_420827  +
push 6Ch  +
pop edx  +
cmp eax edx +
jz loc_420800  +
cmp eax 77h +
mov eax [ebp+var_408] +
jnz loc_4210D3  +
or ebx 800h +
jmp loc_4206FC  +
mov eax [ebp+var_408] +
cmp [eax] dx +
jnz loc_42081F  +
add eax 2 +
or ebx 1000h +
mov [ebp+var_408] eax +
jmp loc_4206FC  +
or ebx 10h +
jmp loc_4206FC  +
push 20h  +
pop eax  +
or ebx eax +
jmp loc_42070A  +
mov eax [ebp+var_408] +
movzx eax word ptr [eax] +
cmp eax 36h +
jnz loc_420862  +
mov edi [ebp+var_408] +
cmp word ptr [edi+2] 34h +
jnz loc_420862  +
mov eax edi +
add eax 4 +
or ebx 8000h +
mov [ebp+var_408] eax +
jmp loc_4206FC  +
cmp eax 33h +
jnz loc_42088A  +
mov edi [ebp+var_408] +
cmp word ptr [edi+2] 32h +
jnz loc_42088A  +
mov eax edi +
add eax 4 +
and ebx 0FFFF7FFFh +
mov [ebp+var_408] eax +
jmp loc_4206FC  +
cmp ax word ptr [ebp+var_474] +
jz loc_4210CD  +
cmp ax word ptr [ebp+var_478] +
jz loc_4210CD  +
cmp ax word ptr [ebp+var_468] +
jz loc_4210CD  +
cmp eax 75h +
jz loc_4210CD  +
cmp eax 78h +
jz loc_4210CD  +
cmp ax word ptr [ebp+var_470] +
jz loc_4210CD  +
xor eax eax +
mov [ebp+var_434] eax +
lea eax [ebp+var_420] +
mov [ebp+var_42C] 1 +
push eax  +
push [ebp+var_428]  +
push edx  +
call sub_421188  +
add esp 0Ch +
jmp loc_4210C7  +
movzx eax dx +
cmp eax 64h +
jg loc_420B34  +
jz loc_420BC2  +
cmp eax 53h +
jg loc_420A3E  +
jz loc_420997  +
sub eax 41h +
jz loc_42092F  +
dec eax  +
dec eax  +
jz loc_42097B  +
dec eax  +
dec eax  +
jz loc_42092F  +
dec eax  +
dec eax  +
jnz loc_420EF4  +
push 20h  +
pop eax  +
add edx eax +
mov [ebp+var_45C] 1 +
mov [ebp+var_41C] edx +
mov eax [ebp+var_418] +
lea esi [ebp+WideCharStr] +
or ebx 40h +
mov ecx 200h +
mov [ebp+var_414] ebx +
mov [ebp+var_40C] ecx +
test eax eax +
jns loc_420BFC  +
mov [ebp+var_418] 6 +
jmp loc_420C5C  +
test ebx 830h +
jnz loc_420A60  +
push 20h  +
pop eax  +
or ebx eax +
mov [ebp+var_414] ebx +
jmp loc_420A60  +
test ebx 830h +
jnz loc_4209AA  +
push 20h  +
pop eax  +
or ebx eax +
mov [ebp+var_414] ebx +
mov edx [ebp+var_418] +
mov edi 7FFFFFFFh +
cmp edx 0FFFFFFFFh +
jz loc_4209BC  +
mov edi edx +
mov esi [ebp+var_410] +
add esi 4 +
mov [ebp+var_410] esi +
mov esi [esi-4] +
test bl 20h +
jz loc_420EC1  +
test esi esi +
jnz loc_4209E1  +
mov esi off_433590 +
xor ecx ecx +
mov eax esi +
mov [ebp+var_41C] eax +
mov [ebp+var_40C] ecx +
test edi edi +
jle loc_420EF4  +
mov al [eax] +
test al al +
jz loc_420EF4  +
lea ecx [ebp+var_44C] +
movzx eax al +
push ecx  +
push eax  +
call sub_4168E4  +
pop ecx  +
test eax eax +
mov eax [ebp+var_41C] +
pop ecx  +
jz loc_420A20  +
inc eax  +
mov ecx [ebp+var_40C] +
inc eax  +
inc ecx  +
mov [ebp+var_41C] eax +
mov [ebp+var_40C] ecx +
cmp ecx edi +
jge loc_420EF4  +
jmp loc_4209F9  +
sub eax 58h +
jz loc_420D4D  +
dec eax  +
dec eax  +
jz loc_420ADB  +
sub eax 7 +
jz loc_420944  +
dec eax  +
dec eax  +
jnz loc_420EF4  +
mov ax [edi] +
add edi 4 +
mov [ebp+var_42C] 1 +
mov [ebp+var_410] edi +
mov word ptr [ebp+var_460] ax +
test bl 20h +
jz loc_420AC6  +
mov byte ptr [ebp+var_43C] al +
xor eax eax +
mov byte ptr [ebp+var_43C+1] al +
lea eax [ebp+var_44C] +
push eax  +
mov eax [ebp+var_44C] +
push dword ptr [eax+74h]  +
lea eax [ebp+var_43C] +
push eax  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_424E9D  +
add esp 10h +
test eax eax +
jns loc_420ACD  +
mov [ebp+var_450] 1 +
jmp loc_420ACD  +
mov [ebp+WideCharStr] ax +
xor ecx ecx +
lea esi [ebp+WideCharStr] +
inc ecx  +
jmp loc_420EEE  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_410] edi +
test eax eax +
jz loc_420B20  +
mov esi [eax+4] +
test esi esi +
jz loc_420B20  +
test ebx 800h +
jz loc_420B10  +
movsx eax word ptr [eax] +
cdq   +
sub eax edx +
mov [ebp+var_42C] 1 +
mov ecx eax +
jmp loc_420EEC  +
xor ecx ecx +
mov [ebp+var_42C] ecx +
movsx ecx word ptr [eax] +
jmp loc_420EEE  +
mov esi off_433590 +
push esi  +
call sub_405BFE  +
pop ecx  +
mov ecx eax +
jmp loc_420EEE  +
cmp eax 70h +
jg loc_420D51  +
jz loc_420D43  +
cmp eax 65h +
jl loc_420EF4  +
cmp eax 67h +
jle loc_420944  +
push 69h  +
pop edx  +
cmp eax edx +
jz loc_420BC2  +
cmp eax 6Eh +
jz loc_420B88  +
push 6Fh  +
pop edx  +
cmp eax edx +
jnz loc_420EF4  +
mov [ebp+var_41C] 8 +
test bl bl +
jns loc_420BD5  +
or ebx 200h +
mov [ebp+var_414] ebx +
jmp loc_420BD5  +
add edi 4 +
mov [ebp+var_410] edi +
mov edi [edi-4] +
call sub_414C88  +
test eax eax +
jz loc_42111E  +
mov eax [ebp+var_420] +
test bl 20h +
jz loc_420BB1  +
mov [edi] ax +
jmp loc_420BB3  +
mov [edi] eax +
mov [ebp+var_450] 1 +
jmp loc_4210AE  +
or ebx 40h +
mov [ebp+var_414] ebx +
mov [ebp+var_41C] 0Ah +
test ebx 8000h +
jnz loc_420BE9  +
test ebx 1000h +
jz loc_420DA9  +
mov ecx [edi] +
add edi 8 +
mov [ebp+var_410] edi +
mov edi [edi-4] +
jmp loc_420DD5  +
jnz loc_420C12  +
push 67h  +
pop eax  +
cmp dx ax +
jnz loc_420C5C  +
mov [ebp+var_418] 1 +
jmp loc_420C5C  +
cmp eax ecx +
jle loc_420C1E  +
mov eax ecx +
mov [ebp+var_418] eax +
cmp eax 0A3h +
jle loc_420C5C  +
lea edi [eax+15Dh] +
push edi  +
call sub_418F43  +
mov edx [ebp+var_41C] +
mov [ebp+lpMem] eax +
pop ecx  +
test eax eax +
jz loc_420C4C  +
mov esi eax +
mov [ebp+var_40C] edi +
jmp loc_420C56  +
mov [ebp+var_418] 0A3h +
mov edi [ebp+var_410] +
mov eax [edi] +
add edi 8 +
mov [ebp+var_488] eax +
mov [ebp+var_410] edi +
mov eax [edi-4] +
mov [ebp+var_484] eax +
lea eax [ebp+var_44C] +
push eax  +
push [ebp+var_45C]  +
movsx eax dl +
push [ebp+var_418]  +
push eax  +
push [ebp+var_40C]  +
lea eax [ebp+var_488] +
push esi  +
push eax  +
push off_433764  +
call ds:DecodePointer  +
mov edi eax +
mov ecx eax +
call ds:off_43520C  +
call edi  +
mov eax ebx +
add esp 1Ch +
and eax 80h +
mov [ebp+var_40C] eax +
jz loc_420CF6  +
cmp [ebp+var_418] 0 +
jnz loc_420CF6  +
lea eax [ebp+var_44C] +
push eax  +
push esi  +
push off_433770  +
call ds:DecodePointer  +
mov edi eax +
mov ecx eax +
call ds:off_43520C  +
call edi  +
mov eax [ebp+var_40C] +
pop ecx  +
pop ecx  +
push 67h  +
pop ecx  +
cmp word ptr [ebp+var_41C] cx +
jnz loc_420D28  +
test eax eax +
jnz loc_420D28  +
lea eax [ebp+var_44C] +
push eax  +
push esi  +
push off_43376C  +
call ds:DecodePointer  +
mov edi eax +
mov ecx eax +
call ds:off_43520C  +
call edi  +
pop ecx  +
pop ecx  +
cmp byte ptr [esi] 2Dh +
jnz loc_420B26  +
or ebx 100h +
inc esi  +
mov [ebp+var_414] ebx +
jmp loc_420B26  +
mov [ebp+var_418] 8 +
push 7  +
jmp loc_420D6D  +
sub eax 73h +
jz loc_4209AA  +
dec eax  +
dec eax  +
jz loc_420BCB  +
sub eax 3 +
jnz loc_420EF4  +
push 27h  +
mov [ebp+var_41C] 10h +
pop eax  +
mov [ebp+var_458] eax +
test bl bl +
jns loc_420BD5  +
push 30h  +
pop ecx  +
add eax 51h +
mov word ptr [ebp+var_438] cx +
mov word ptr [ebp+var_438+2] ax +
mov [ebp+var_424] 2 +
jmp loc_420BD5  +
add edi 4 +
mov [ebp+var_410] edi +
test bl 20h +
jz loc_420DC8  +
test bl 40h +
jz loc_420DC2  +
movsx eax word ptr [edi-4] +
jmp loc_420DD0  +
movzx eax word ptr [edi-4] +
jmp loc_420DD0  +
test bl 40h +
jz loc_420DD9  +
mov eax [edi-4] +
cdq   +
mov ecx eax +
mov edi edx +
xor eax eax +
jmp loc_420DE0  +
mov ecx [edi-4] +
xor eax eax +
mov edi eax +
test bl 40h +
jz loc_420E01  +
cmp edi eax +
jg loc_420E01  +
jl loc_420DEF  +
cmp ecx eax +
jnb loc_420E01  +
neg ecx  +
adc edi eax +
neg edi  +
or ebx 100h +
mov [ebp+var_414] ebx +
test ebx 9000h +
jnz loc_420E0B  +
mov edi eax +
mov edx [ebp+var_418] +
test edx edx +
jns loc_420E1A  +
xor edx edx +
inc edx  +
jmp loc_420E30  +
and ebx 0FFFFFFF7h +
mov [ebp+var_414] ebx +
cmp edx 200h +
jle loc_420E30  +
mov edx 200h +
mov eax ecx +
or eax edi +
jnz loc_420E3C  +
mov [ebp+var_424] eax +
lea esi [ebp+var_205] +
mov eax edx +
dec edx  +
mov [ebp+var_418] edx +
test eax eax +
jg loc_420E55  +
mov eax ecx +
or eax edi +
jz loc_420E92  +
mov eax [ebp+var_41C] +
cdq   +
push edx  +
push eax  +
push edi  +
push ecx  +
call sub_406446  +
add ecx 30h +
mov [ebp+var_47C] ebx +
mov [ebp+var_40C] eax +
mov edi edx +
cmp ecx 39h +
jle loc_420E81  +
add ecx [ebp+var_458] +
mov edx [ebp+var_418] +
mov [esi] cl +
dec esi  +
mov ecx [ebp+var_40C] +
jmp loc_420E42  +
mov ebx [ebp+var_414] +
lea ecx [ebp+var_205] +
sub ecx esi +
inc esi  +
mov [ebp+var_40C] ecx +
test ebx 200h +
jz loc_420EF4  +
test ecx ecx +
jz loc_420EB8  +
cmp byte ptr [esi] 30h +
jz loc_420EF4  +
dec esi  +
inc ecx  +
push 30h  +
pop eax  +
mov [esi] al +
jmp loc_420EEE  +
test esi esi +
jnz loc_420ECB  +
mov esi off_433594 +
mov [ebp+var_42C] 1 +
mov ecx esi +
test edi edi +
jz loc_420EEA  +
xor eax eax +
dec edi  +
cmp [ecx] ax +
jz loc_420EEA  +
add ecx 2 +
test edi edi +
jnz loc_420EDD  +
sub ecx esi +
sar ecx 1 +
mov [ebp+var_40C] ecx +
cmp [ebp+var_450] 0 +
jnz loc_4210AE  +
test bl 40h +
jz loc_420F26  +
test ebx 100h +
jz loc_42102F  +
push 2Dh  +
pop eax  +
mov word ptr [ebp+var_438] ax +
mov [ebp+var_424] 1 +
push 20h  +
pop edx  +
mov edi [ebp+var_430] +
mov eax [ebp+var_424] +
sub edi ecx +
sub edi eax +
test bl 0Ch +
jnz loc_420F5B  +
lea eax [ebp+var_420] +
push eax  +
push [ebp+var_428]  +
push edi  +
push edx  +
call sub_4211BE  +
mov eax [ebp+var_424] +
add esp 10h +
push [ebp+var_464]  +
lea ecx [ebp+var_420] +
push ecx  +
push [ebp+var_428]  +
push eax  +
lea eax [ebp+var_438] +
push eax  +
call sub_41A699  +
add esp 14h +
test bl 8 +
jz loc_420FA2  +
test bl 4 +
jnz loc_420FA2  +
lea eax [ebp+var_420] +
push eax  +
push [ebp+var_428]  +
push edi  +
push 30h  +
pop eax  +
push eax  +
call sub_4211BE  +
add esp 10h +
cmp [ebp+var_42C] 0 +
mov eax [ebp+var_40C] +
jnz loc_421068  +
test eax eax +
jle loc_421068  +
mov ecx esi +
mov [ebp+var_41C] esi +
dec eax  +
mov [ebp+var_47C] eax +
lea eax [ebp+var_44C] +
push eax  +
mov eax [ebp+var_44C] +
push dword ptr [eax+74h]  +
lea eax [ebp+var_460] +
push ecx  +
push eax  +
call sub_424E9D  +
add esp 10h +
mov [ebp+var_46C] eax +
test eax eax +
jle loc_42105D  +
lea eax [ebp+var_420] +
push eax  +
push [ebp+var_428]  +
push [ebp+var_460]  +
call sub_421188  +
mov ecx [ebp+var_41C] +
add esp 0Ch +
add ecx [ebp+var_46C] +
mov eax [ebp+var_47C] +
mov [ebp+var_41C] ecx +
test eax eax +
jle loc_421085  +
jmp loc_420FC5  +
test bl 1 +
jz loc_42103B  +
push 2Bh  +
jmp loc_420F14  +
test bl 2 +
jz loc_420F26  +
push 20h  +
pop edx  +
mov word ptr [ebp+var_438] dx +
mov [ebp+var_424] 1 +
jmp loc_420F29  +
or eax 0FFFFFFFFh +
mov [ebp+var_420] eax +
jmp loc_42108B  +
push [ebp+var_464]  +
lea ecx [ebp+var_420] +
push ecx  +
push [ebp+var_428]  +
push eax  +
push esi  +
call sub_41A699  +
add esp 14h +
mov eax [ebp+var_420] +
test eax eax +
js loc_4210AE  +
test bl 4 +
jz loc_4210AE  +
lea eax [ebp+var_420] +
push eax  +
push [ebp+var_428]  +
push edi  +
push 20h  +
pop eax  +
push eax  +
call sub_4211BE  +
add esp 10h +
mov eax [ebp+lpMem] +
test eax eax +
jz loc_4210C7  +
push eax  +
call sub_41740A  +
xor eax eax +
pop ecx  +
mov [ebp+lpMem] eax +
mov ecx [ebp+var_40C] +
mov eax [ebp+var_408] +
movzx edx word ptr [eax] +
mov eax [ebp+var_420] +
mov [ebp+var_41C] edx +
test dx dx +
jnz loc_420632  +
mov ecx [ebp+var_434] +
test ecx ecx +
jz loc_4210FA  +
cmp ecx 7 +
jnz loc_42114A  +
cmp [ebp+var_440] 0 +
jz loc_42110D  +
mov ecx [ebp+var_444] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
call sub_416890  +
mov dword ptr [eax] 16h +
call sub_418D1E  +
cmp [ebp+var_440] 0 +
jz loc_4205CA  +
mov ecx [ebp+var_444] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
jmp loc_4205CA  +
call sub_416890  +
mov dword ptr [eax] 16h +
call sub_418D1E  +
cmp [ebp+var_440] 0 +
jmp loc_4205BE  +
***
mov eax [ebp+arg_4] +
push esi  +
push [ebp+arg_8]  +
cmp [ebp+arg_0] 0 +
push esi  +
push [ebp+arg_8]  +
call sub_4059E3  +
mov edi [ebp-24h] +
mov ebx [ebp-20h] +
jmp sub_4213A4  +
***
pop ecx  +
sub esp 10h +
push 4  +
call sub_401E34  +
jmp sub_421554  +
***
pop ecx  +
call sub_401E34  +
mov esi [ebp+8] +
mov edi [ebp-1Ch] +
jmp sub_42164C  +
***
pop ecx  +
retn   +
***
mov eax 1AF0h +
call sub_401E34  +
mov esi [ebp+8] +
mov edi [ebp-1Ch] +
jmp sub_421FBC  +
***
pop ecx  +
retn   +
***
push esi  +
push esi  +
push edi  +
call sub_401E34  +
mov esi [ebp+8] +
mov edi [ebp-1Ch] +
jmp sub_4222DC  +
***
pop ecx  +
retn   +
***
sub esp 28h +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
sub esp 18h +
call sub_401E34  +
cmp dword_434874 0 +
jnz loc_422D9A  +
push 6  +
call sub_418D59  +
pop ecx  +
and dword ptr [ebp-4] 0 +
cmp dword_434874 0 +
jnz loc_422D8E  +
call sub_423015  +
inc dword_434874  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_422DBC  +
call sub_401106  +
retn   +
***
pop ecx  +
call sub_401E34  +
jmp sub_422E24  +
***
pop ecx  +
retn   +
***
push ecx  +
call sub_401E34  +
xor ebx ebx +
mov eax ebx +
mov [ebp-34h] eax +
mov edi [ebp-3Ch] +
jmp sub_4232CC  +
***
pop ecx  +
retn   +
***
sub esp 10h +
push esi  +
mov eax [ebp+cchWideChar] +
sub esp 10h +
push ecx  +
call sub_401E34  +
mov edi [ebp+8] +
mov esi [ebp-1Ch] +
jmp sub_423A8C  +
***
pop ecx  +
retn   +
***
push ecx  +
sub esp 1Ch +
lea ecx [ebp+var_1C] +
push ebx  +
push [ebp+arg_8]  +
call sub_414521  +
mov ebx [ebp+arg_0] +
lea eax [ebx+1] +
cmp eax 100h +
ja loc_423B32  +
mov eax [ebp+var_1C] +
mov eax [eax+90h] +
movzx eax word ptr [eax+ebx*2] +
jmp loc_423BA0  +
mov eax ebx +
lea ecx [ebp+var_1C] +
sar eax 8 +
mov [ebp+var_C] eax +
push ecx  +
movzx eax al +
push eax  +
call sub_4168E4  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_423B5F  +
mov eax [ebp+var_C] +
push 2  +
mov [ebp+MultiByteStr] al +
mov [ebp-7] bl +
mov [ebp+var_6] 0 +
pop ecx  +
jmp loc_423B69  +
xor ecx ecx +
mov [ebp+MultiByteStr] bl +
mov byte ptr [ebp-7] 0 +
inc ecx  +
mov eax [ebp+var_1C] +
push 1  +
push dword ptr [eax+4]  +
lea eax [ebp+CharType] +
push eax  +
push ecx  +
lea eax [ebp+MultiByteStr] +
push eax  +
lea eax [ebp+var_1C] +
push 1  +
push eax  +
call sub_41F7FC  +
add esp 1Ch +
test eax eax +
jnz loc_423B9C  +
cmp [ebp+var_10] al +
jz loc_423B98  +
mov eax [ebp+var_14] +
and dword ptr [eax+70h] 0FFFFFFFDh +
xor eax eax +
jmp loc_423BB0  +
movzx eax [ebp+CharType] +
and eax [ebp+arg_4] +
cmp [ebp+var_10] 0 +
jz loc_423BB0  +
mov ecx [ebp+var_14] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
and dword_43492C 0 +
mov ax [ebp+arg_0] +
call sub_401E34  +
push 0Eh  +
call sub_418D59  +
pop ecx  +
and dword ptr [ebp-4] 0 +
mov esi [ebp+8] +
mov eax [esi+4] +
test eax eax +
jz loc_423F2A  +
mov ecx dword_434938 +
mov edx offset unk_434934 +
mov [ebp-1Ch] ecx +
test ecx ecx +
jz loc_423F1D  +
cmp [ecx] eax +
jnz loc_423F3C  +
mov eax [ecx+4] +
mov [edx+4] eax +
push ecx  +
call sub_41740A  +
pop ecx  +
push dword ptr [esi+4]  +
call sub_41740A  +
pop ecx  +
and dword ptr [esi+4] 0 +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_423F5C  +
call sub_401106  +
retn   +
mov edx ecx +
jmp loc_423F05  +
***
pop ecx  +
push ecx  +
mov eax [ebp+arg_0] +
mov dword_43493C eax +
pop ebp  +
retn   +
***
push 0Ch  +
push offset loc_424000  +
call sub_4059E3  +
push dword_434944  +
call ds:DecodePointer  +
mov esi eax +
test esi esi +
jz loc_423FF7  +
and dword ptr [ebp-4] 0 +
mov ecx esi +
call ds:off_43520C  +
call esi  +
jmp loc_423FF0  +
xor eax eax +
inc eax  +
retn   +
***
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call loc_424020  +
int 3  +
nop   +
nop   +
nop   +
in al 0FFh +
push 0Ch  +
push offset loc_424060  +
call sub_4059E3  +
call sub_4179D5  +
mov esi [eax+78h] +
test esi esi +
jz loc_424056  +
and dword ptr [ebp-4] 0 +
mov ecx esi +
call ds:off_43520C  +
call esi  +
jmp loc_42404F  +
xor eax eax +
inc eax  +
retn   +
***
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_426679  +
int 3  +
nop   +
nop   +
nop   +
nop   +
in al 0FFh +
push ecx  +
mov dword_434944 eax +
mov eax [ebp+arg_0] +
push 0FFFFFFFEh  +
push offset dword_4241B8  +
push offset loc_418A20  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_430000 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push offset __ImageBase  +
call sub_4241D4  +
add esp 4 +
test eax eax +
jz loc_42419A  +
mov eax [ebp+arg_0] +
sub eax offset __ImageBase +
push eax  +
push offset __ImageBase  +
call sub_4240B8  +
add esp 8 +
test eax eax +
jz loc_42419A  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov eax [eax] +
xor ecx ecx +
cmp dword ptr [eax] 0C0000005h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
push off_43374C[esi]  +
sub esp 94h +
mov eax [ebp+arg_0] +
retn   +
***
mov eax [ebp+arg_0] +
call sub_4059E3  +
mov esi [ebp+8] +
mov ebx [ebp-20h] +
mov edi [ebp-2Ch] +
jmp sub_4245E4  +
***
test ebx ebx +
jz locret_4245F0  +
push 0  +
call sub_418EE6  +
pop ecx  +
retn   +
***
mov edx [ebp+arg_4] +
mov ecx ds:dword_424660 +
push esi  +
mov esi [ebp+arg_0] +
cmp [edx+4] esi +
jz loc_424645  +
imul eax ecx +
add edx 0Ch +
add eax [ebp+arg_4] +
cmp edx eax +
jb loc_424633  +
imul ecx ecx +
add ecx [ebp+arg_4] +
cmp edx ecx +
jnb loc_424658  +
cmp [edx+4] esi +
jnz loc_424658  +
mov eax edx +
jmp loc_42465A  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
sub esp 20h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+lpOutputString] eax +
xor esi esi +
mov eax [ebp+arg_4] +
push esi  +
mov [ebp+var_1C] eax +
call ds:EncodePointer  +
mov ebx eax +
call sub_419179  +
mov edi eax +
mov [ebp+var_14] edi +
cmp dword_434960 esi +
jnz loc_424775  +
push 800h  +
push esi  +
push offset aUser32_dll  +
call ds:LoadLibraryExW  +
mov edi eax +
test edi edi +
jnz loc_4246EE  +
call ds:GetLastError  +
cmp eax 57h +
jnz loc_424890  +
push esi  +
push esi  +
push offset aUser32_dll  +
call ds:LoadLibraryExW  +
mov edi eax +
test edi edi +
jz loc_424890  +
push offset aMessageboxw  +
push edi  +
call ds:GetProcAddress  +
test eax eax +
jz loc_424890  +
push eax  +
call ds:EncodePointer  +
push offset aGetactivewindo  +
push edi  +
mov dword_434960 eax +
call ds:GetProcAddress  +
push eax  +
call ds:EncodePointer  +
push offset aGetlastactivep  +
push edi  +
mov dword_434964 eax +
call ds:GetProcAddress  +
push eax  +
call ds:EncodePointer  +
push offset aGetuserobjecti  +
push edi  +
mov dword_434968 eax +
call ds:GetProcAddress  +
push eax  +
call ds:EncodePointer  +
mov dword_434970 eax +
test eax eax +
jz loc_424772  +
push offset aGetprocesswind  +
push edi  +
call ds:GetProcAddress  +
push eax  +
call ds:EncodePointer  +
mov dword_43496C eax +
mov edi [ebp+var_14] +
call ds:IsDebuggerPresent  +
test eax eax +
jz loc_424799  +
mov eax [ebp+lpOutputString] +
test eax eax +
jz loc_42478D  +
push eax  +
call ds:OutputDebugStringW  +
test edi edi +
jz loc_4247AD  +
push 4  +
pop eax  +
jmp loc_424892  +
test edi edi +
jz loc_4247AD  +
push dword_434960  +
call ds:DecodePointer  +
push 3  +
jmp loc_424793  +
mov eax dword_43496C +
cmp eax ebx +
jz loc_42481E  +
cmp dword_434970 ebx +
jz loc_42481E  +
push eax  +
call ds:DecodePointer  +
push dword_434970  +
mov [ebp+var_14] eax +
call ds:DecodePointer  +
mov edi eax +
mov eax [ebp+var_14] +
test eax eax +
jz loc_42481E  +
test edi edi +
jz loc_42481E  +
mov ecx eax +
call ds:off_43520C  +
mov eax [ebp+var_14] +
call eax  +
test eax eax +
jz loc_424813  +
lea ecx [ebp+var_20] +
push ecx  +
push 0Ch  +
lea ecx [ebp+var_10] +
push ecx  +
push 1  +
push eax  +
mov ecx edi +
call ds:off_43520C  +
call edi  +
test eax eax +
jz loc_424813  +
test [ebp+var_8] 1 +
jnz loc_42481E  +
mov edi [ebp+arg_8] +
or edi 200000h +
jmp loc_42486A  +
mov eax dword_434964 +
cmp eax ebx +
jz loc_424867  +
push eax  +
call ds:DecodePointer  +
mov edi eax +
test edi edi +
jz loc_424867  +
mov ecx edi +
call ds:off_43520C  +
call edi  +
mov esi eax +
test esi esi +
jz loc_424867  +
mov eax dword_434968 +
cmp eax ebx +
jz loc_424867  +
push eax  +
call ds:DecodePointer  +
mov edi eax +
test edi edi +
jz loc_424867  +
push esi  +
mov ecx edi +
call ds:off_43520C  +
call edi  +
mov esi eax +
mov edi [ebp+arg_8] +
push dword_434960  +
call ds:DecodePointer  +
mov ebx eax +
test ebx ebx +
jz loc_424890  +
push edi  +
push [ebp+var_1C]  +
mov ecx ebx +
push [ebp+lpOutputString]  +
push esi  +
call ds:off_43520C  +
call ebx  +
jmp loc_424892  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
cmp [ebp+lpMem] 0 +
push esi  +
push esi  +
mov ecx [ebp+arg_0] +
call sub_401E34  +
mov edi [ebp+8] +
mov ebx [ebp-24h] +
mov esi [ebp-28h] +
jmp sub_424C34  +
***
pop ecx  +
retn   +
***
push ecx  +
inc dword_433B68  +
sub esp 10h +
sub esp 10h +
push 0  +
push ecx  +
sub esp 10h +
push [ebp+arg_0]  +
lea ecx [ebp+var_10] +
call sub_414521  +
push [ebp+arg_20]  +
lea eax [ebp+var_10] +
push [ebp+CodePage]  +
push [ebp+cchDest]  +
push [ebp+lpDestStr]  +
push [ebp+arg_10]  +
push [ebp+lpMultiByteStr]  +
push [ebp+dwMapFlags]  +
push [ebp+arg_4]  +
push eax  +
call sub_424FAA  +
add esp 24h +
cmp [ebp+var_4] 0 +
jz loc_4251F0  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
mov esp ebp +
pop ebp  +
retn   +
***
cmp [ebp+arg_C] 0Ah +
push ecx  +
push 0Ah  +
mov eax [ebp+arg_C] +
test eax eax +
jle loc_4253FF  +
push eax  +
push [ebp+lpSrcStr]  +
call sub_41E6FC  +
pop ecx  +
pop ecx  +
push [ebp+cchDest]  +
push [ebp+lpDestStr]  +
push eax  +
push [ebp+lpSrcStr]  +
push [ebp+dwMapFlags]  +
push [ebp+arg_0]  +
call sub_420343  +
add esp 18h +
pop ebp  +
retn   +
***
sub esp 280h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
lea ecx [ebp+var_270] +
push ebx  +
push esi  +
mov [ebp+var_230] eax +
mov eax [ebp+arg_4] +
push edi  +
push [ebp+arg_8]  +
mov edi [ebp+arg_C] +
mov [ebp+var_210] eax +
xor eax eax +
mov ebx eax +
mov [ebp+var_21C] edi +
mov [ebp+var_25C] eax +
mov esi eax +
mov [ebp+var_218] ebx +
mov [ebp+var_244] eax +
mov [ebp+var_224] eax +
mov [ebp+var_238] eax +
mov [ebp+var_254] eax +
mov [ebp+var_248] eax +
mov [ebp+var_240] eax +
call sub_414521  +
call sub_416890  +
mov [ebp+var_258] eax +
mov eax [ebp+var_230] +
test eax eax +
jz loc_425F92  +
test byte ptr [eax+0Ch] 40h +
jnz loc_425517  +
push eax  +
call sub_412951  +
pop ecx  +
mov ecx eax +
cmp ecx 0FFFFFFFFh +
jz loc_4254DB  +
cmp ecx 0FFFFFFFEh +
jz loc_4254DB  +
mov edx ecx +
sar eax 5 +
and edx 1Fh +
shl edx 6 +
add edx dword_433EB0[eax*4] +
jmp loc_4254E0  +
mov edx offset unk_432C60 +
test byte ptr [edx+24h] 7Fh +
jnz loc_425F92  +
cmp ecx 0FFFFFFFFh +
jz loc_425508  +
cmp ecx 0FFFFFFFEh +
jz loc_425508  +
mov eax ecx +
and ecx 1Fh +
sar eax 5 +
shl ecx 6 +
add ecx dword_433EB0[eax*4] +
jmp loc_42550D  +
mov ecx offset unk_432C60 +
test byte ptr [ecx+24h] 80h +
jnz loc_425F92  +
mov edx [ebp+var_210] +
test edx edx +
jz loc_425F92  +
mov dl [edx] +
xor eax eax +
mov [ebp+var_228] eax +
mov ecx eax +
mov [ebp+var_220] ecx +
mov [ebp+var_23C] eax +
mov [ebp+lpMem] eax +
mov [ebp+var_211] dl +
mov byte ptr [ebp+var_24C] dl +
test dl dl +
jz loc_425FA7  +
mov eax [ebp+var_210] +
inc eax  +
mov [ebp+var_210] eax +
test ecx ecx +
js loc_425F83  +
lea eax [edx-20h] +
cmp al 58h +
ja loc_425582  +
movsx eax dl +
movzx eax ds:byte_40DFC8[eax] +
and eax 0Fh +
jmp loc_425584  +
xor eax eax +
mov edi [ebp+var_23C] +
imul eax eax +
movzx edi ds:byte_40DFE8[eax+edi] +
mov eax edi +
mov [ebp+var_23C] edi +
mov edi [ebp+var_21C] +
shr eax 4 +
mov [ebp+var_23C] eax +
cmp eax 8 +
jz loc_425F92  +
cmp eax 7 +
ja loc_425F67  +
jmp ds:off_425FD0[eax*4]  +
xor eax eax +
or [ebp+var_224] 0FFFFFFFFh +
mov ebx eax +
mov [ebp+var_254] eax +
mov [ebp+var_248] eax +
mov [ebp+var_244] eax +
mov [ebp+var_238] eax +
mov [ebp+var_218] ebx +
mov [ebp+var_240] eax +
jmp loc_425F67  +
movsx eax dl +
sub eax 20h +
jz loc_425647  +
sub eax 3 +
jz loc_42563F  +
sub eax 8 +
jz loc_42563A  +
dec eax  +
dec eax  +
jz loc_42562C  +
sub eax 3 +
mov eax [ebp+var_210] +
jnz loc_425F6D  +
or ebx 8 +
mov [ebp+var_218] ebx +
jmp loc_425F6D  +
or ebx 4 +
mov [ebp+var_218] ebx +
jmp loc_425F67  +
or ebx 1 +
jmp loc_42562F  +
or ebx 80h +
jmp loc_42562F  +
or ebx 2 +
jmp loc_42562F  +
cmp dl 2Ah +
jnz loc_425680  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_21C] edi +
mov [ebp+var_244] eax +
test eax eax +
jns loc_425F67  +
or ebx 4 +
neg eax  +
mov [ebp+var_218] ebx +
mov [ebp+var_244] eax +
jmp loc_425F67  +
imul ecx [ebp+var_244] +
movsx eax dl +
add ecx 0FFFFFFD0h +
add eax ecx +
mov [ebp+var_244] eax +
jmp loc_425F61  +
xor eax eax +
mov [ebp+var_224] eax +
jmp loc_425F67  +
cmp dl 2Ah +
jnz loc_4256D7  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_224] eax +
test eax eax +
mov eax [ebp+var_210] +
mov [ebp+var_21C] edi +
jns loc_425F6D  +
or [ebp+var_224] 0FFFFFFFFh +
jmp loc_425F6D  +
imul ecx [ebp+var_224] +
movsx eax dl +
add ecx 0FFFFFFD0h +
add eax ecx +
mov [ebp+var_224] eax +
jmp loc_425F61  +
cmp dl 49h +
jz loc_42573B  +
cmp dl 68h +
jz loc_425733  +
mov eax [ebp+var_210] +
cmp dl 6Ch +
jz loc_42571A  +
cmp dl 77h +
jnz loc_425F6D  +
or ebx 800h +
jmp loc_425621  +
cmp byte ptr [eax] 6Ch +
jnz loc_42572B  +
inc eax  +
or ebx 1000h +
jmp loc_425621  +
or ebx 10h +
jmp loc_425621  +
or ebx 20h +
jmp loc_42562F  +
mov eax [ebp+var_210] +
mov al [eax] +
cmp al 36h +
jnz loc_425763  +
mov edi [ebp+var_210] +
cmp byte ptr [edi+1] 34h +
jnz loc_425763  +
mov eax edi +
add eax 2 +
or ebx 8000h +
jmp loc_425621  +
cmp al 33h +
jnz loc_425783  +
mov edi [ebp+var_210] +
cmp byte ptr [edi+1] 32h +
jnz loc_425783  +
mov eax edi +
add eax 2 +
and ebx 0FFFF7FFFh +
jmp loc_425621  +
cmp al 64h +
jz loc_425F67  +
cmp al 69h +
jz loc_425F67  +
cmp al 6Fh +
jz loc_425F67  +
cmp al 75h +
jz loc_425F67  +
cmp al 78h +
jz loc_425F67  +
cmp al 58h +
jz loc_425F67  +
xor eax eax +
mov [ebp+var_23C] eax +
jmp loc_4257BF  +
xor eax eax +
mov [ebp+var_240] eax +
lea eax [ebp+var_270] +
push eax  +
movzx eax dl +
push eax  +
call sub_4168E4  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_425813  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
push [ebp+var_24C]  +
call sub_425FF0  +
mov ecx [ebp+var_210] +
add esp 0Ch +
mov al [ecx] +
inc ecx  +
mov byte ptr [ebp+var_24C] al +
mov [ebp+var_210] ecx +
test al al +
jz loc_425F92  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
push [ebp+var_24C]  +
call sub_425FF0  +
add esp 0Ch +
jmp loc_425F61  +
movsx eax dl +
cmp eax 64h +
jg loc_425A15  +
jz loc_425A9F  +
cmp eax 53h +
jg loc_42593B  +
jz loc_4258CC  +
sub eax 41h +
jz loc_425865  +
dec eax  +
dec eax  +
jz loc_4258AF  +
dec eax  +
dec eax  +
jz loc_425865  +
dec eax  +
dec eax  +
jnz loc_425DAF  +
add dl 20h +
mov [ebp+var_254] 1 +
mov [ebp+var_211] dl +
mov eax [ebp+var_224] +
lea esi [ebp+var_20C] +
or ebx 40h +
mov ecx 200h +
mov [ebp+var_218] ebx +
mov [ebp+var_234] ecx +
test eax eax +
jns loc_425ADB  +
mov [ebp+var_224] 6 +
jmp loc_425B38  +
test ebx 830h +
jnz loc_425959  +
or ebx 800h +
mov [ebp+var_218] ebx +
jmp loc_425959  +
test ebx 830h +
jnz loc_4258E0  +
or ebx 800h +
mov [ebp+var_218] ebx +
mov edx [ebp+var_224] +
mov eax 7FFFFFFFh +
cmp edx 0FFFFFFFFh +
jz loc_4258F2  +
mov eax edx +
mov esi [edi] +
add edi 4 +
mov [ebp+var_21C] edi +
test ebx 810h +
jz loc_425D8E  +
test esi esi +
jnz loc_425913  +
mov esi off_433594 +
mov [ebp+var_240] 1 +
mov ecx esi +
test eax eax +
jz loc_425932  +
xor edx edx +
dec eax  +
cmp [ecx] dx +
jz loc_425932  +
add ecx 2 +
test eax eax +
jnz loc_425925  +
sub ecx esi +
sar ecx 1 +
jmp loc_425DA9  +
sub eax 58h +
jz loc_425C26  +
dec eax  +
dec eax  +
jz loc_4259B8  +
sub eax 7 +
jz loc_425878  +
dec eax  +
dec eax  +
jnz loc_425DAF  +
add edi 4 +
mov [ebp+var_21C] edi +
test ebx 810h +
jz loc_42599A  +
movzx eax word ptr [edi-4] +
push eax  +
push 200h  +
lea eax [ebp+var_20C] +
push eax  +
lea eax [ebp+var_228] +
push eax  +
call sub_426203  +
add esp 10h +
test eax eax +
jz loc_4259AD  +
mov [ebp+var_248] 1 +
jmp loc_4259AD  +
mov al [edi-4] +
mov byte ptr [ebp+var_20C] al +
mov [ebp+var_228] 1 +
lea esi [ebp+var_20C] +
jmp loc_425DAF  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_21C] edi +
test eax eax +
jz loc_4259FD  +
mov esi [eax+4] +
test esi esi +
jz loc_4259FD  +
movsx eax word ptr [eax] +
test ebx 800h +
jz loc_4259F3  +
cdq   +
sub eax edx +
mov [ebp+var_240] 1 +
sar eax 1 +
mov [ebp+var_228] eax +
jmp loc_425DAF  +
xor ecx ecx +
mov [ebp+var_240] ecx +
jmp loc_425A0A  +
mov esi off_433590 +
push esi  +
call sub_405BFE  +
pop ecx  +
mov [ebp+var_228] eax +
jmp loc_425DAF  +
cmp eax 70h +
jg loc_425C2A  +
jz loc_425C1C  +
cmp eax 65h +
jl loc_425DAF  +
cmp eax 67h +
jle loc_425878  +
cmp eax 69h +
jz loc_425A9F  +
cmp eax 6Eh +
jz loc_425A65  +
cmp eax 6Fh +
jnz loc_425DAF  +
mov [ebp+var_228] 8 +
test bl bl +
jns loc_425AB2  +
or ebx 200h +
mov [ebp+var_218] ebx +
jmp loc_425AB2  +
add edi 4 +
mov [ebp+var_21C] edi +
mov edi [edi-4] +
call sub_414C88  +
test eax eax +
jz loc_425F92  +
mov eax [ebp+var_220] +
test bl 20h +
jz loc_425A8E  +
mov [edi] ax +
jmp loc_425A90  +
mov [edi] eax +
mov [ebp+var_248] 1 +
jmp loc_425F42  +
or ebx 40h +
mov [ebp+var_218] ebx +
mov [ebp+var_228] 0Ah +
test ebx 8000h +
jnz loc_425AC6  +
test ebx 1000h +
jz loc_425C7D  +
mov ecx [edi] +
add edi 8 +
mov [ebp+var_21C] edi +
xor esi esi +
mov edi [edi-4] +
jmp loc_425CB2  +
jnz loc_425AEE  +
cmp dl 67h +
jnz loc_425B38  +
mov [ebp+var_224] 1 +
jmp loc_425B38  +
cmp eax ecx +
jle loc_425AFA  +
mov eax ecx +
mov [ebp+var_224] eax +
cmp eax 0A3h +
jle loc_425B38  +
lea edi [eax+15Dh] +
push edi  +
call sub_418F43  +
mov dl [ebp+var_211] +
mov [ebp+lpMem] eax +
pop ecx  +
test eax eax +
jz loc_425B28  +
mov esi eax +
mov [ebp+var_234] edi +
jmp loc_425B32  +
mov [ebp+var_224] 0A3h +
mov edi [ebp+var_21C] +
mov eax [edi] +
add edi 8 +
mov [ebp+var_278] eax +
mov [ebp+var_21C] edi +
mov eax [edi-4] +
mov [ebp+var_274] eax +
lea eax [ebp+var_270] +
push eax  +
push [ebp+var_254]  +
movsx eax dl +
push [ebp+var_224]  +
push eax  +
push [ebp+var_234]  +
lea eax [ebp+var_278] +
push esi  +
push eax  +
push off_433764  +
call ds:DecodePointer  +
mov edi eax +
mov ecx eax +
call ds:off_43520C  +
call edi  +
mov eax ebx +
add esp 1Ch +
and eax 80h +
mov [ebp+var_234] eax +
jz loc_425BD2  +
cmp [ebp+var_224] 0 +
jnz loc_425BD2  +
lea eax [ebp+var_270] +
push eax  +
push esi  +
push off_433770  +
call ds:DecodePointer  +
mov edi eax +
mov ecx eax +
call ds:off_43520C  +
call edi  +
mov eax [ebp+var_234] +
pop ecx  +
pop ecx  +
cmp [ebp+var_211] 67h +
jnz loc_425C01  +
test eax eax +
jnz loc_425C01  +
lea eax [ebp+var_270] +
push eax  +
push esi  +
push off_43376C  +
call ds:DecodePointer  +
mov edi eax +
mov ecx eax +
call ds:off_43520C  +
call edi  +
pop ecx  +
pop ecx  +
cmp byte ptr [esi] 2Dh +
jnz loc_425A03  +
or ebx 100h +
inc esi  +
mov [ebp+var_218] ebx +
jmp loc_425A03  +
mov [ebp+var_224] 8 +
push 7  +
jmp loc_425C46  +
sub eax 73h +
jz loc_4258E0  +
dec eax  +
dec eax  +
jz loc_425AA8  +
sub eax 3 +
jnz loc_425DAF  +
push 27h  +
mov [ebp+var_228] 10h +
pop eax  +
mov [ebp+var_25C] eax +
test bl bl +
jns loc_425AB2  +
add al 51h +
mov byte ptr [ebp+var_22C] 30h +
mov byte ptr [ebp+var_22C+1] al +
mov [ebp+var_238] 2 +
jmp loc_425AB2  +
add edi 4 +
xor esi esi +
mov [ebp+var_21C] edi +
test bl 20h +
jz loc_425C9E  +
test bl 40h +
jz loc_425C98  +
movsx eax word ptr [edi-4] +
jmp loc_425CA6  +
movzx eax word ptr [edi-4] +
jmp loc_425CA6  +
test bl 40h +
jz loc_425CAD  +
mov eax [edi-4] +
cdq   +
mov ecx eax +
mov edi edx +
jmp loc_425CB2  +
mov ecx [edi-4] +
mov edi esi +
test bl 40h +
jz loc_425CD3  +
cmp edi esi +
jg loc_425CD3  +
jl loc_425CC1  +
cmp ecx esi +
jnb loc_425CD3  +
neg ecx  +
adc edi esi +
neg edi  +
or ebx 100h +
mov [ebp+var_218] ebx +
test ebx 9000h +
jnz loc_425CDD  +
mov edi esi +
mov edx [ebp+var_224] +
test edx edx +
jns loc_425CEC  +
xor edx edx +
inc edx  +
jmp loc_425D00  +
and ebx 0FFFFFFF7h +
mov eax 200h +
mov [ebp+var_218] ebx +
cmp edx eax +
jle loc_425D00  +
mov edx eax +
mov eax ecx +
or eax edi +
jnz loc_425D0C  +
mov [ebp+var_238] esi +
lea esi [ebp+var_D] +
mov eax edx +
dec edx  +
mov [ebp+var_224] edx +
test eax eax +
jg loc_425D22  +
mov eax ecx +
or eax edi +
jz loc_425D5F  +
mov eax [ebp+var_228] +
cdq   +
push edx  +
push eax  +
push edi  +
push ecx  +
call sub_406446  +
add ecx 30h +
mov [ebp+var_27C] ebx +
mov [ebp+var_234] eax +
mov edi edx +
cmp ecx 39h +
jle loc_425D4E  +
add ecx [ebp+var_25C] +
mov edx [ebp+var_224] +
mov [esi] cl +
dec esi  +
mov ecx [ebp+var_234] +
jmp loc_425D0F  +
mov ebx [ebp+var_218] +
lea eax [ebp+var_D] +
sub eax esi +
inc esi  +
mov [ebp+var_228] eax +
test ebx 200h +
jz loc_425DAF  +
test eax eax +
jz loc_425D82  +
cmp byte ptr [esi] 30h +
jz loc_425DAF  +
dec esi  +
inc [ebp+var_228]  +
mov byte ptr [esi] 30h +
jmp loc_425DAF  +
test esi esi +
jnz loc_425D98  +
mov esi off_433590 +
mov ecx esi +
jmp loc_425DA3  +
dec eax  +
cmp byte ptr [ecx] 0 +
jz loc_425DA7  +
inc ecx  +
test eax eax +
jnz loc_425D9C  +
sub ecx esi +
mov [ebp+var_228] ecx +
cmp [ebp+var_248] 0 +
jnz loc_425F42  +
test bl 40h +
jz loc_425DF6  +
test ebx 100h +
jz loc_425DD2  +
mov byte ptr [ebp+var_22C] 2Dh +
jmp loc_425DEC  +
test bl 1 +
jz loc_425DE0  +
mov byte ptr [ebp+var_22C] 2Bh +
jmp loc_425DEC  +
test bl 2 +
jz loc_425DF6  +
mov byte ptr [ebp+var_22C] 20h +
mov [ebp+var_238] 1 +
mov edi [ebp+var_244] +
sub edi [ebp+var_228] +
mov eax [ebp+var_238] +
sub edi eax +
test bl 0Ch +
jnz loc_425E2D  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
push edi  +
push 20h  +
call sub_426038  +
mov eax [ebp+var_238] +
add esp 10h +
push [ebp+var_258]  +
lea ecx [ebp+var_220] +
push ecx  +
push [ebp+var_230]  +
push eax  +
lea eax [ebp+var_22C] +
push eax  +
call sub_426064  +
add esp 14h +
test bl 8 +
jz loc_425E72  +
test bl 4 +
jnz loc_425E72  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
push edi  +
push 30h  +
call sub_426038  +
add esp 10h +
cmp [ebp+var_240] 0 +
mov eax [ebp+var_228] +
jz loc_425EFE  +
test eax eax +
jle loc_425EFE  +
mov ecx esi +
dec eax  +
mov [ebp+var_234] eax +
movzx eax word ptr [ecx] +
add ecx 2 +
push eax  +
push 6  +
lea eax [ebp+var_D+1] +
mov [ebp+var_27C] ecx +
push eax  +
lea eax [ebp+var_260] +
push eax  +
call sub_426203  +
add esp 10h +
test eax eax +
jnz loc_425EF3  +
cmp [ebp+var_260] eax +
jz loc_425EF3  +
push [ebp+var_258]  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
lea eax [ebp+var_D+1] +
push [ebp+var_260]  +
push eax  +
call sub_426064  +
mov eax [ebp+var_234] +
add esp 14h +
mov ecx [ebp+var_27C] +
test eax eax +
jz loc_425F1B  +
jmp loc_425E87  +
or ecx 0FFFFFFFFh +
mov [ebp+var_220] ecx +
jmp loc_425F21  +
push [ebp+var_258]  +
lea ecx [ebp+var_220] +
push ecx  +
push [ebp+var_230]  +
push eax  +
push esi  +
call sub_426064  +
add esp 14h +
mov ecx [ebp+var_220] +
test ecx ecx +
js loc_425F48  +
test bl 4 +
jz loc_425F48  +
lea eax [ebp+var_220] +
push eax  +
push [ebp+var_230]  +
push edi  +
push 20h  +
call sub_426038  +
add esp 10h +
mov ecx [ebp+var_220] +
mov eax [ebp+lpMem] +
test eax eax +
jz loc_425F67  +
push eax  +
call sub_41740A  +
xor eax eax +
pop ecx  +
mov [ebp+lpMem] eax +
mov ecx [ebp+var_220] +
mov eax [ebp+var_210] +
mov dl [eax] +
mov [ebp+var_211] dl +
mov byte ptr [ebp+var_24C] dl +
test dl dl +
jnz loc_42555D  +
mov eax [ebp+var_23C] +
test eax eax +
jz loc_425FA7  +
cmp eax 7 +
jz loc_425FA7  +
call sub_416890  +
mov dword ptr [eax] 16h +
call sub_418D1E  +
or eax 0FFFFFFFFh +
jmp loc_425FA9  +
mov eax ecx +
cmp [ebp+var_264] 0 +
pop edi  +
pop esi  +
pop ebx  +
jz loc_425FBF  +
mov ecx [ebp+var_268] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edx [ebp+arg_4] +
push esi  +
push ecx  +
sub esp 14h +
push 0  +
push ecx  +
push 0Ah  +
mov edx [ebp+arg_C] +
cmp dword_434AD8 0 +
push ebx  +
call sub_401E34  +
mov esi [ebp+0Ch] +
mov edi [ebp-1Ch] +
jmp sub_426504  +
***
pop ecx  +
push ecx  +
call sub_42440A  +
push ecx  +
sub esp 10h +
push ecx  +
sub esp 24h +
cmp dword_433B6C 0 +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
jnz loc_426B90  +
push offset off_432FF4  +
jmp loc_426B92  +
push 0  +
call sub_42694C  +
add esp 14h +
pop ebp  +
retn   +
***
xor eax eax +
push eax  +
push eax  +
push 3  +
push eax  +
push 3  +
push 40000000h  +
push offset FileName  +
call ds:CreateFileW  +
mov dword_4337F0 eax +
retn   +
***
push ecx  +
push 0  +
sub esp 10h +
sub esp 2Ch +
sub esp 28h +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_426D43  +
add esp 10h +
pop ebp  +
retn   +
***
call sub_426EA7  +
mov eax offset sub_428830 +
sub esp 0Ch +
push esi  +
mov ecx dword_43126C +
sub esp 10h +
sub esp 2Ch +
mov eax [ebp+arg_4] +
sub esp 10h +
sub esp 44h +
sub esp 44h +
sub esp 7Ch +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_7C] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_64] eax +
xor eax eax +
push ebx  +
xor ebx ebx +
inc eax  +
push esi  +
mov [ebp+var_68] eax +
mov esi ebx +
mov eax ebx +
mov [ebp+var_6C] ebx +
push edi  +
lea edi [ebp+var_20] +
mov [ebp+var_48] ebx +
mov [ebp+var_5C] ebx +
mov [ebp+var_58] ebx +
mov [ebp+var_60] ebx +
mov [ebp+var_50] ebx +
cmp [ebp+arg_1C] eax +
jnz loc_4280FB  +
call sub_416890  +
mov dword ptr [eax] 16h +
call sub_418D1E  +
xor eax eax +
jmp loc_4287EA  +
mov edx [ebp+arg_8] +
mov ecx edx +
mov [ebp+var_4C] ecx +
mov cl [edx] +
cmp cl 20h +
jz loc_428119  +
cmp cl 9 +
jz loc_428119  +
cmp cl 0Ah +
jz loc_428119  +
cmp cl 0Dh +
jnz loc_42811C  +
inc edx  +
jmp loc_428103  +
mov cl [edx] +
inc edx  +
mov [ebp+var_51] cl +
cmp eax 0Bh +
ja loc_4283A5  +
jmp ds:off_4287FB[eax*4]  +
lea eax [ecx-31h] +
cmp al 8 +
ja loc_42813F  +
push 3  +
pop eax  +
dec edx  +
jmp loc_42811C  +
mov eax [ebp+arg_1C] +
mov eax [eax] +
mov eax [eax+84h] +
mov eax [eax] +
cmp cl [eax] +
jnz loc_428155  +
push 5  +
pop eax  +
jmp loc_42811C  +
movsx eax cl +
sub eax 2Bh +
jz loc_42817C  +
dec eax  +
dec eax  +
jz loc_42816F  +
sub eax 3 +
jnz loc_4283F6  +
xor eax eax +
inc eax  +
jmp loc_42811C  +
push 2  +
mov ecx 8000h +
pop eax  +
mov [ebp+var_6C] ecx +
jmp loc_42811C  +
push 2  +
pop eax  +
mov [ebp+var_6C] ebx +
jmp loc_42811C  +
xor eax eax +
inc eax  +
mov [ebp+var_5C] eax +
lea eax [ecx-31h] +
cmp al 8 +
jbe loc_428139  +
mov eax [ebp+arg_1C] +
mov eax [eax] +
mov eax [eax+84h] +
mov eax [eax] +
cmp cl [eax] +
jnz loc_4281A6  +
push 4  +
jmp loc_428152  +
cmp cl 2Bh +
jz loc_4281D6  +
cmp cl 2Dh +
jz loc_4281D6  +
cmp cl 30h +
jz loc_42816A  +
cmp cl 43h +
jle loc_4283F6  +
cmp cl 45h +
jle loc_4281CF  +
sub cl 64h +
cmp cl 1 +
ja loc_4283F6  +
push 6  +
jmp loc_428152  +
dec edx  +
push 0Bh  +
jmp loc_428152  +
lea eax [ecx-31h] +
cmp al 8 +
jbe loc_428139  +
mov eax [ebp+arg_1C] +
mov eax [eax] +
mov eax [eax+84h] +
mov eax [eax] +
cmp cl [eax] +
jz loc_428150  +
cmp cl 30h +
jz loc_42816A  +
mov edx [ebp+var_4C] +
jmp loc_4283F7  +
xor eax eax +
inc eax  +
mov [ebp+var_5C] eax +
cmp cl 30h +
jl loc_428244  +
mov eax [ebp+var_48] +
mov esi [ebp+var_50] +
cmp cl 39h +
jg loc_42823C  +
cmp eax 19h +
jnb loc_428233  +
sub cl 30h +
inc eax  +
mov [edi] cl +
inc edi  +
jmp loc_428234  +
inc esi  +
mov cl [edx] +
inc edx  +
cmp cl 30h +
jge loc_428220  +
mov [ebp+var_50] esi +
mov esi ebx +
mov [ebp+var_48] eax +
mov eax [ebp+arg_1C] +
mov eax [eax] +
mov eax [eax+84h] +
mov eax [eax] +
cmp cl [eax] +
jz loc_4281A2  +
cmp cl 2Bh +
jz loc_4281D6  +
cmp cl 2Dh +
jnz loc_4281B5  +
jmp loc_4281D6  +
xor eax eax +
inc eax  +
mov [ebp+var_5C] eax +
mov [ebp+var_58] eax +
mov eax [ebp+var_48] +
test eax eax +
jnz loc_428297  +
cmp cl 30h +
jnz loc_42829A  +
mov eax [ebp+var_50] +
mov cl [edx] +
dec eax  +
inc edx  +
cmp cl 30h +
jz loc_428288  +
mov [ebp+var_50] eax +
mov eax [ebp+var_48] +
cmp cl 30h +
jl loc_4282C1  +
mov esi [ebp+var_50] +
cmp cl 39h +
jg loc_4282B9  +
cmp eax 19h +
jnb loc_4282B1  +
sub cl 30h +
inc eax  +
mov [edi] cl +
inc edi  +
dec esi  +
mov cl [edx] +
inc edx  +
cmp cl 30h +
jge loc_42829F  +
mov [ebp+var_50] esi +
mov esi ebx +
mov [ebp+var_48] eax +
cmp cl 2Bh +
jz loc_4281D6  +
cmp cl 2Dh +
jz loc_4281D6  +
cmp cl 43h +
jle loc_4282ED  +
cmp cl 45h +
jle loc_4281CF  +
sub cl 64h +
cmp cl 1 +
jbe loc_4281CF  +
dec edx  +
jmp loc_4283FA  +
xor eax eax +
sub cl 30h +
inc eax  +
mov [ebp+var_58] eax +
cmp cl 9 +
ja loc_428207  +
push 4  +
jmp loc_42813B  +
lea eax [edx-2] +
mov [ebp+var_4C] eax +
lea eax [ecx-31h] +
cmp al 8 +
ja loc_428320  +
push 9  +
jmp loc_42813B  +
movsx eax cl +
sub eax 2Bh +
jz loc_42834A  +
dec eax  +
dec eax  +
jz loc_42833C  +
sub eax 3 +
jnz loc_428207  +
push 8  +
jmp loc_428152  +
push 7  +
or ecx 0FFFFFFFFh +
pop eax  +
mov [ebp+var_68] ecx +
jmp loc_42811C  +
push 7  +
jmp loc_428152  +
xor eax eax +
inc eax  +
mov [ebp+var_60] eax +
jmp loc_42835C  +
mov cl [edx] +
inc edx  +
cmp cl 30h +
jz loc_428359  +
sub cl 31h +
cmp cl 8 +
jbe loc_428319  +
jmp loc_4283F6  +
lea eax [ecx-31h] +
cmp al 8 +
jbe loc_428319  +
cmp cl 30h +
jmp loc_42832F  +
cmp [ebp+arg_18] ebx +
jz loc_4283A1  +
lea eax [edx-1] +
mov [ebp+var_4C] eax +
movsx eax cl +
sub eax 2Bh +
jz loc_42834A  +
dec eax  +
dec eax  +
jnz loc_428207  +
or [ebp+var_68] 0FFFFFFFFh +
push 7  +
pop eax  +
jmp loc_42811C  +
push 0Ah  +
pop eax  +
dec edx  +
cmp eax 0Ah +
jz loc_4283F7  +
jmp loc_42811C  +
xor eax eax +
mov esi ebx +
inc eax  +
mov [ebp+var_60] eax +
jmp loc_4283D8  +
cmp cl 39h +
jg loc_4283F1  +
imul ecx esi +
movsx esi [ebp+var_51] +
add esi 0FFFFFFD0h +
add esi ecx +
cmp esi 1450h +
jg loc_4283DF  +
mov cl [edx] +
inc edx  +
mov [ebp+var_51] cl +
cmp cl 30h +
jl loc_4283F1  +
jmp loc_4283B9  +
mov cl [ebp+var_51] +
mov esi 1451h +
jmp loc_4283F1  +
cmp cl 39h +
jg loc_4283F6  +
mov cl [edx] +
inc edx  +
cmp cl 30h +
jge loc_4283E9  +
dec edx  +
mov eax [ebp+var_48] +
mov ecx [ebp+var_64] +
mov [ecx] edx +
mov ecx [ebp+var_5C] +
test ecx ecx +
jz loc_4287CA  +
cmp eax 18h +
jbe loc_428428  +
mov al [ebp+var_9] +
cmp al 5 +
jl loc_42841B  +
inc al  +
mov [ebp+var_9] al +
mov ecx [ebp+var_50] +
dec edi  +
push 18h  +
inc ecx  +
pop eax  +
mov [ebp+var_50] ecx +
jmp loc_42842B  +
mov ecx [ebp+var_50] +
test eax eax +
jz loc_4287C0  +
dec edi  +
cmp [edi] bl +
jnz loc_428442  +
dec eax  +
inc ecx  +
dec edi  +
cmp [edi] bl +
jz loc_428438  +
mov [ebp+var_50] ecx +
lea ecx [ebp+var_38] +
push ecx  +
push eax  +
lea eax [ebp+var_20] +
push eax  +
call sub_4294E5  +
mov ecx [ebp+var_68] +
add esp 0Ch +
test ecx ecx +
jns loc_42845C  +
neg esi  +
add esi [ebp+var_50] +
mov eax [ebp+var_60] +
test eax eax +
jnz loc_428469  +
add esi [ebp+arg_10] +
mov eax [ebp+var_58] +
test eax eax +
jnz loc_428473  +
sub esi [ebp+arg_14] +
cmp esi 1450h +
jg loc_4287B2  +
cmp esi 0FFFFEBB0h +
jl loc_4287A3  +
mov ecx offset unk_433828 +
sub ecx 60h +
test esi esi +
jz loc_428791  +
jns loc_4284A7  +
mov ecx offset unk_433988 +
neg esi  +
sub ecx 60h +
cmp [ebp+arg_C] ebx +
jnz loc_428789  +
xor eax eax +
mov word ptr [ebp+var_38] ax +
jmp loc_428789  +
mov eax esi +
add ecx 54h +
sar esi 3 +
mov [ebp+var_50] ecx +
mov [ebp+var_48] esi +
and eax 7 +
jz loc_428789  +
imul edx eax +
mov eax 8000h +
add edx ecx +
mov [ebp+var_4C] edx +
cmp [edx] ax +
jb loc_4284F5  +
mov esi edx +
lea edi [ebp+var_44] +
lea edx [ebp+var_44] +
mov [ebp+var_4C] edx +
movs   +
movs   +
movs   +
dec [ebp+var_44+2]  +
movzx edi word ptr [edx+0Ah] +
mov esi 8000h +
mov cx [ebp+var_2E] +
mov ax di +
xor ax cx +
mov [ebp+var_78] ebx +
and ax si +
mov [ebp+var_2C] ebx +
movzx eax ax +
mov [ebp+var_5C] eax +
lea eax [esi-1] +
and cx ax +
mov [ebp+var_28] ebx +
and edi eax +
movzx ecx cx +
mov [ebp+var_24] ebx +
lea eax [edi+ecx] +
movzx esi ax +
mov eax 7FFFh +
mov [ebp+var_68] esi +
cmp cx ax +
jnb loc_428766  +
cmp di ax +
jnb loc_428766  +
mov eax 0BFFDh +
cmp si ax +
ja loc_428766  +
mov eax 3FBFh +
cmp si ax +
ja loc_428568  +
mov [ebp-30h] ebx +
jmp loc_42877D  +
test cx cx +
jnz loc_428591  +
inc esi  +
test dword ptr [ebp-30h] 7FFFFFFFh +
mov [ebp+var_68] esi +
jnz loc_428591  +
cmp [ebp+var_34] 0 +
jnz loc_428591  +
cmp [ebp+var_38] 0 +
jnz loc_428591  +
xor eax eax +
mov [ebp+var_2E] ax +
jmp loc_428783  +
test di di +
jnz loc_4285AC  +
inc esi  +
test dword ptr [edx+8] 7FFFFFFFh +
mov [ebp+var_68] esi +
jnz loc_4285AC  +
cmp [edx+4] ebx +
jnz loc_4285AC  +
cmp [edx] ebx +
jz loc_428560  +
push 5  +
mov eax ebx +
lea ecx [ebp+var_28] +
pop edi  +
mov [ebp+var_70] eax +
mov [ebp+var_64] edi +
mov [ebp+var_58] edi +
test edi edi +
jle loc_428619  +
lea esi [ebp+var_38] +
lea esi [esi+eax*2] +
lea eax [edx+8] +
mov [ebp+var_60] eax +
movzx eax word ptr [esi] +
mov [ebp+var_58] eax +
mov eax [ebp+var_60] +
mov edx [ebp+var_58] +
mov [ebp+var_74] ebx +
movzx eax word ptr [eax] +
imul edx eax +
mov [ebp+var_58] edx +
add edx [ecx-4] +
cmp edx [ecx-4] +
jb loc_4285F2  +
cmp edx [ebp+var_58] +
jnb loc_4285F7  +
xor eax eax +
inc eax  +
jmp loc_4285FA  +
mov eax [ebp+var_74] +
mov [ecx-4] edx +
test eax eax +
jz loc_428604  +
inc word ptr [ecx]  +
sub [ebp+var_60] 2 +
add esi 2 +
dec edi  +
test edi edi +
jg loc_4285CD  +
mov edx [ebp+var_4C] +
mov edi [ebp+var_64] +
mov eax [ebp+var_70] +
add ecx 2 +
inc eax  +
dec edi  +
mov [ebp+var_70] eax +
mov [ebp+var_64] edi +
test edi edi +
jg loc_4285BA  +
mov esi [ebp+var_68] +
mov edx [ebp+var_24] +
add esi 0C002h +
mov edi [ebp+var_2C] +
mov [ebp+var_4C] edx +
test si si +
jle loc_42867A  +
test edx edx +
js loc_428675  +
mov eax [ebp+var_28] +
mov edx edi +
shr edx 1Fh +
mov ecx eax +
add eax eax +
shr ecx 1Fh +
or eax edx +
add edi edi +
mov edx [ebp+var_4C] +
mov [ebp+var_28] eax +
add edx edx +
mov eax 0FFFFh +
mov [ebp+var_2C] edi +
or edx ecx +
add esi eax +
mov [ebp+var_4C] edx +
mov [ebp+var_24] edx +
test si si +
jg loc_42863F  +
test si si +
jg loc_4286E3  +
mov eax 0FFFFh +
add esi eax +
test si si +
jns loc_4286E3  +
mov ebx [ebp+var_78] +
mov eax esi +
neg eax  +
movzx eax ax +
mov [ebp+var_64] eax +
add esi eax +
test byte ptr [ebp+var_2C] 1 +
jz loc_42869C  +
inc ebx  +
mov ecx [ebp+var_28] +
mov eax edx +
shl eax 1Fh +
mov [ebp+var_4C] ecx +
shr [ebp+var_4C] 1 +
or [ebp+var_4C] eax +
mov eax [ebp+var_4C] +
shl ecx 1Fh +
shr edi 1 +
shr edx 1 +
or edi ecx +
dec [ebp+var_64]  +
mov [ebp+var_24] edx +
mov [ebp+var_28] eax +
mov [ebp+var_2C] edi +
jnz loc_428695  +
push 0  +
test ebx ebx +
mov [ebp+var_4C] edx +
pop ebx  +
jz loc_4286E3  +
mov ax di +
xor edi edi +
inc edi  +
or ax di +
mov word ptr [ebp+var_2C] ax +
mov edi [ebp+var_2C] +
jmp loc_4286E7  +
mov ax word ptr [ebp+var_2C] +
mov edx 8000h +
cmp ax dx +
ja loc_4286FF  +
and edi 1FFFFh +
cmp edi 18000h +
jnz loc_42873F  +
mov eax [ebp+var_2C+2] +
cmp eax 0FFFFFFFFh +
jnz loc_42873B  +
mov eax [ebp+var_28+2] +
mov [ebp+var_2C+2] ebx +
cmp eax 0FFFFFFFFh +
jnz loc_428732  +
mov ax word ptr [ebp+var_24+2] +
mov ecx 0FFFFh +
mov [ebp+var_28+2] ebx +
cmp ax cx +
jnz loc_42872A  +
mov word ptr [ebp+var_24+2] dx +
inc esi  +
jmp loc_428736  +
inc ax  +
mov word ptr [ebp+var_24+2] ax +
jmp loc_428736  +
inc eax  +
mov [ebp+var_28+2] eax +
mov ecx [ebp+var_24] +
jmp loc_428742  +
inc eax  +
mov [ebp+var_2C+2] eax +
mov ecx [ebp+var_4C] +
mov eax 7FFFh +
cmp si ax +
jnb loc_428766  +
mov ax word ptr [ebp+var_2C+2] +
or esi [ebp+var_5C] +
mov word ptr [ebp+var_38] ax +
mov eax [ebp+var_28] +
mov [ebp+var_38+2] eax +
mov [ebp+var_34+2] ecx +
mov [ebp+var_2E] si +
jmp loc_428783  +
xor eax eax +
cmp word ptr [ebp+var_5C] ax +
setz al  +
dec eax  +
and eax 80000000h +
add eax 7FFF8000h +
mov [ebp-30h] eax +
mov [ebp+var_38] ebx +
mov [ebp+var_34] ebx +
mov esi [ebp+var_48] +
mov ecx [ebp+var_50] +
test esi esi +
jnz loc_4284BB  +
mov eax [ebp-30h] +
movzx ecx word ptr [ebp+var_38] +
mov edx [ebp+var_38+2] +
mov esi [ebp+var_34+2] +
shr eax 10h +
jmp loc_4287D5  +
xor edi edi +
mov ecx ebx +
mov eax ebx +
mov esi ebx +
mov edx ebx +
lea ebx [edi+1] +
jmp loc_4287D5  +
mov eax 7FFFh +
mov esi 80000000h +
push 2  +
jmp loc_4287D0  +
mov ecx ebx +
mov eax ebx +
mov esi ebx +
mov edx ebx +
jmp loc_4287D5  +
mov eax ebx +
mov esi ebx +
push 4  +
mov ecx ebx +
mov edx ebx +
pop ebx  +
mov edi [ebp+var_7C] +
or eax [ebp+var_6C] +
mov [edi+0Ah] ax +
mov eax ebx +
mov [edi] cx +
mov [edi+2] edx +
mov [edi+6] esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
push [ebp+arg_14]  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_428860  +
add esp 1Ch +
pop ebp  +
retn   +
***
mov eax [ebp+arg_C] +
sub esp 30h +
push 0  +
sub esp 10h +
lea ecx [ebp+var_10] +
push ebx  +
push edi  +
push [ebp+arg_18]  +
call sub_414521  +
mov ebx [ebp+arg_0] +
test ebx ebx +
jz loc_428C80  +
cmp [ebp+arg_4] 0 +
ja loc_428C89  +
call sub_416890  +
push 16h  +
jmp loc_428CA5  +
mov edx [ebp+arg_8] +
xor edi edi +
mov eax edx +
test edx edx +
jg loc_428C96  +
mov eax edi +
add eax 9 +
cmp [ebp+arg_4] eax +
ja loc_428CB2  +
call sub_416890  +
push 22h  +
pop edi  +
mov [eax] edi +
call sub_418D1E  +
jmp loc_428D91  +
cmp [ebp+arg_14] 0 +
jz loc_428CD8  +
mov ecx [ebp+arg_10] +
xor eax eax +
test edx edx +
setnle al  +
push eax  +
xor eax eax +
cmp dword ptr [ecx] 2Dh +
setz al  +
add eax ebx +
push eax  +
call sub_42930A  +
mov edx [ebp+arg_8] +
pop ecx  +
pop ecx  +
mov eax [ebp+arg_10] +
push esi  +
mov esi ebx +
cmp dword ptr [eax] 2Dh +
jnz loc_428CE9  +
mov byte ptr [ebx] 2Dh +
lea esi [ebx+1] +
test edx edx +
jle loc_428D02  +
mov al [esi+1] +
mov [esi] al +
inc esi  +
mov eax [ebp+var_10] +
mov eax [eax+84h] +
mov eax [eax] +
mov al [eax] +
mov [esi] al +
xor eax eax +
cmp [ebp+arg_14] al +
setz al  +
add eax edx +
add esi eax +
or eax 0FFFFFFFFh +
cmp [ebp+arg_4] eax +
jz loc_428D1D  +
mov eax ebx +
sub eax esi +
add eax [ebp+arg_4] +
push offset loc_428DB4  +
push eax  +
push esi  +
call sub_423553  +
add esp 0Ch +
test eax eax +
jnz loc_428DA6  +
lea ecx [esi+2] +
cmp [ebp+arg_C] edi +
jz loc_428D3B  +
mov byte ptr [esi] 45h +
mov edx [ebp+arg_10] +
mov eax [edx+0Ch] +
cmp byte ptr [eax] 30h +
jz loc_428D73  +
mov edx [edx+4] +
dec edx  +
jns loc_428D52  +
neg edx  +
mov byte ptr [esi+1] 2Dh +
push 64h  +
pop ebx  +
cmp edx ebx +
jl loc_428D61  +
mov eax edx +
cdq   +
idiv  ebx +
add [esi+2] al +
push 0Ah  +
pop ebx  +
cmp edx ebx +
jl loc_428D70  +
mov eax edx +
cdq   +
idiv  ebx +
add [esi+3] al +
add [esi+4] dl +
test byte_434974 1 +
pop esi  +
jz loc_428D91  +
cmp byte ptr [ecx] 30h +
jnz loc_428D91  +
push 3  +
lea eax [ecx+1] +
push eax  +
push ecx  +
call loc_405D02  +
add esp 0Ch +
cmp [ebp+var_4] 0 +
jz loc_428D9E  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
mov eax edi +
pop edi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
call sub_418D2E  +
int 3  +
nop   +
nop   +
nop   +
sub esi gs:[eax] +
xor [eax] dh +
add [ebp-75h] dl +
***
call sub_416890  +
push 16h  +
pop esi  +
jmp loc_428DF8  +
***
sub esp 14h +
sub esp 2Ch +
sub esp 30h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
lea ecx [ebp+var_1C] +
push ebx  +
push edi  +
mov edi [ebp+arg_4] +
push 16h  +
pop ebx  +
push ebx  +
push ecx  +
lea ecx [ebp+var_30] +
push ecx  +
push dword ptr [eax+4]  +
push dword ptr [eax]  +
call sub_4299AD  +
add esp 14h +
test edi edi +
jnz loc_42907D  +
call sub_416890  +
mov [eax] ebx +
call sub_418D1E  +
mov eax ebx +
jmp loc_429124  +
push esi  +
mov esi [ebp+arg_8] +
test esi esi +
jnz loc_429098  +
call sub_416890  +
mov [eax] ebx +
call sub_418D1E  +
mov eax ebx +
jmp loc_429123  +
mov eax [ebp+var_2C] +
xor ecx ecx +
dec eax  +
cmp [ebp+var_30] 2Dh +
mov [ebp+var_20] eax +
setz cl  +
or eax 0FFFFFFFFh +
lea ebx [ecx+edi] +
cmp esi eax +
jz loc_4290B6  +
mov eax esi +
sub eax ecx +
lea ecx [ebp+var_30] +
push ecx  +
push [ebp+arg_C]  +
push eax  +
push ebx  +
call sub_429834  +
add esp 10h +
test eax eax +
jz loc_4290D0  +
mov byte ptr [edi] 0 +
jmp loc_429123  +
mov eax [ebp+var_2C] +
dec eax  +
cmp [ebp+var_20] eax +
setl cl  +
cmp eax 0FFFFFFFCh +
jl loc_42910A  +
cmp eax [ebp+arg_C] +
jge loc_42910A  +
test cl cl +
jz loc_4290F2  +
mov al [ebx] +
inc ebx  +
test al al +
jnz loc_4290E8  +
mov [ebx-2] al +
push [ebp+arg_14]  +
lea eax [ebp+var_30] +
push 1  +
push eax  +
push [ebp+arg_C]  +
push esi  +
push edi  +
call sub_428E88  +
add esp 18h +
jmp loc_429123  +
push [ebp+arg_14]  +
lea eax [ebp+var_30] +
push 1  +
push eax  +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push esi  +
push edi  +
call sub_428C60  +
add esp 1Ch +
pop esi  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
push [ebp+arg_0]  +
call sub_429160  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
sub esp 10h +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_429200  +
add esp 10h +
pop ebp  +
retn   +
***
sub esp 0Ch +
cmp [ebp+arg_0] 0 +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
jz loc_42922B  +
lea eax [ebp+var_C] +
push eax  +
call sub_426DE7  +
mov ecx [ebp+arg_4] +
mov eax [ebp+var_C] +
mov [ecx] eax +
mov eax [ebp+var_8] +
mov [ecx+4] eax +
jmp loc_42923C  +
lea eax [ebp+var_4] +
push eax  +
call sub_426E75  +
mov ecx [ebp+arg_4] +
mov eax [ebp+var_4] +
mov [ecx] eax +
add esp 0Ch +
mov esp ebp +
pop ebp  +
retn   +
***
push 0  +
push [ebp+arg_0]  +
call sub_429270  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
sub esp 10h +
lea ecx [ebp+var_10] +
push esi  +
push [ebp+arg_4]  +
call sub_414521  +
mov esi [ebp+arg_0] +
movsx eax byte ptr [esi] +
push eax  +
call sub_429808  +
cmp eax 65h +
jmp loc_42929F  +
inc esi  +
movzx eax byte ptr [esi] +
push eax  +
call sub_4169EA  +
test eax eax +
pop ecx  +
jnz loc_429293  +
movsx eax byte ptr [esi] +
push eax  +
call sub_429808  +
pop ecx  +
cmp eax 78h +
jnz loc_4292B4  +
add esi 2 +
mov eax [ebp+var_10] +
mov cl [esi] +
mov eax [eax+84h] +
mov eax [eax] +
mov al [eax] +
mov [esi] al +
inc esi  +
mov al [esi] +
mov [esi] cl +
mov cl al +
mov al [esi] +
inc esi  +
test al al +
jnz loc_4292C6  +
pop esi  +
cmp [ebp+var_4] al +
jz loc_4292E0  +
mov eax [ebp+var_8] +
and dword ptr [eax+70h] 0FFFFFFFDh +
mov esp ebp +
pop ebp  +
retn   +
***
mov eax [ebp+arg_0] +
push edi  +
cmp [ebp+arg_0] 0 +
push 0  +
sub esp 10h +
sub esp 10h +
sub esp 20h +
sub esp 1Ch +
cmp dword_433B6C 0 +
mov edx [ebp+arg_C] +
sub esp 0Ch +
sub esp 30h +
sub esp 84h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
mov cx [ebp+arg_8] +
xor edx edx +
push ebx  +
mov ebx [ebp+arg_14] +
mov ax cx +
push esi  +
mov esi 8000h +
mov [ebp+var_6C] ebx +
and ax si +
mov [ebp+var_64] esi +
inc edx  +
movzx eax ax +
dec esi  +
mov [ebp+var_28] 0CCCCCCCCh +
and cx si +
mov [ebp+var_58] esi +
mov [ebp+var_24] 0CCCCCCCCh +
mov [ebp+var_20] 3FFBCCCCh +
mov [ebp+var_7C] eax +
movzx esi cx +
push edi  +
test ax ax +
jz loc_429A9C  +
mov byte ptr [ebx+2] 2Dh +
jmp loc_429AA0  +
mov byte ptr [ebx+2] 20h +
mov edi [ebp+arg_4] +
test si si +
jnz loc_429AE2  +
test edi edi +
jnz loc_429B7C  +
cmp [ebp+arg_0] edi +
jnz loc_429B7C  +
xor ecx ecx +
mov [ebx+3] dl +
mov [ebx] cx +
mov ecx 8000h +
cmp ax cx +
setnz al  +
dec al  +
and al 0Dh +
add al 20h +
mov [ebx+2] al +
mov eax edx +
mov word ptr [ebx+4] 30h +
jmp loc_42A3B9  +
mov eax 7FFFh +
cmp si ax +
jnz loc_429B7C  +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_0] +
mov [ebx] dx +
mov edx 80000000h +
cmp eax edx +
jnz loc_429B06  +
test ecx ecx +
jz loc_429B14  +
test eax 40000000h +
jnz loc_429B14  +
push offset loc_42A410  +
jmp loc_429B5B  +
cmp word ptr [ebp+var_7C] 0 +
jz loc_429B2D  +
cmp eax 0C0000000h +
jnz loc_429B2D  +
test ecx ecx +
jnz loc_429B56  +
push (offset loc_42A416+2)  +
jmp loc_429B3A  +
cmp eax edx +
jnz loc_429B56  +
test ecx ecx +
jnz loc_429B56  +
push (offset loc_42A41D+3)  +
lea eax [ebx+4] +
push 16h  +
push eax  +
call sub_423553  +
add esp 0Ch +
test eax eax +
jnz loc_42A403  +
mov byte ptr [ebx+3] 5 +
jmp loc_429B75  +
push (offset loc_42A425+3)  +
lea eax [ebx+4] +
push 16h  +
push eax  +
call sub_423553  +
add esp 0Ch +
test eax eax +
jnz loc_42A403  +
mov byte ptr [ebx+3] 6 +
xor eax eax +
jmp loc_42A3B9  +
mov edx esi +
mov [ebp+var_12] si +
mov ecx edi +
mov [ebp+var_16] edi +
shr ecx 18h +
mov eax edx +
shr eax 8 +
xor ebx ebx +
mov [ebp+var_4C] 5 +
mov [ebp+var_68] 0BFFDh +
mov [ebp+var_50] 3FBFh +
lea eax [eax+ecx*2] +
imul ecx eax +
imul eax edx +
add eax 0ECBCED0Ch +
add eax ecx +
sar eax 10h +
movzx ecx ax +
mov eax [ebp+arg_0] +
mov [ebp+var_1C+2] eax +
xor eax eax +
mov word ptr [ebp+var_1C] ax +
movsx eax cx +
mov [ebp+var_3C] ecx +
neg eax  +
mov ecx offset unk_433828 +
mov [ebp+var_44] eax +
sub ecx 60h +
test eax eax +
jz loc_429F08  +
jns loc_429BF7  +
neg eax  +
mov ecx offset unk_433988 +
sub ecx 60h +
mov [ebp+var_44] eax +
test eax eax +
jz loc_429F08  +
mov esi [ebp+var_1C] +
mov edx [ebp-18h] +
mov [ebp+var_38] esi +
sar [ebp+var_44] 3 +
add ecx 54h +
mov [ebp+var_60] ecx +
and eax 7 +
jz loc_429EFC  +
imul eax eax +
add eax ecx +
mov ecx 8000h +
mov [ebp+var_74] eax +
cmp [eax] cx +
jb loc_429C3F  +
mov esi eax +
lea edi [ebp+var_34] +
lea eax [ebp+var_34] +
mov [ebp+var_74] eax +
movs   +
movs   +
movs   +
dec [ebp+var_34+2]  +
mov esi [ebp+var_38] +
movzx edi word ptr [eax+0Ah] +
mov cx [ebp+var_12] +
mov ax di +
xor ax cx +
mov [ebp+var_48] ebx +
and ax word ptr [ebp+var_64] +
movzx eax ax +
mov [ebp+var_5C] eax +
mov eax 7FFFh +
and cx ax +
mov [ebp+var_10] ebx +
and edi eax +
movzx ecx cx +
mov [ebp+var_54] edi +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
lea eax [edi+ecx] +
movzx edi ax +
mov eax 7FFFh +
mov [ebp+var_40] edi +
cmp cx ax +
jnb loc_429ED5  +
mov eax [ebp+var_54] +
cmp ax word ptr [ebp+var_58] +
jnb loc_429ED5  +
cmp di word ptr [ebp+var_68] +
ja loc_429ED5  +
cmp di word ptr [ebp+var_50] +
ja loc_429CAF  +
mov [ebp+var_16+2] ebx +
jmp loc_429EEC  +
test cx cx +
jnz loc_429CD4  +
inc edi  +
test [ebp+var_16+2] 7FFFFFFFh +
mov [ebp+var_40] edi +
jnz loc_429CD4  +
test edx edx +
jnz loc_429CD4  +
test esi esi +
jnz loc_429CD4  +
xor eax eax +
mov [ebp+var_12] ax +
jmp loc_429EF9  +
mov ecx [ebp+var_74] +
test ax ax +
jnz loc_429CF2  +
inc edi  +
test dword ptr [ecx+8] 7FFFFFFFh +
mov [ebp+var_40] edi +
jnz loc_429CF2  +
cmp [ecx+4] ebx +
jnz loc_429CF2  +
cmp [ecx] ebx +
jz loc_429CA7  +
push 5  +
mov eax ebx +
lea edx [ebp+var_C] +
pop esi  +
mov [ebp+var_84] eax +
mov [ebp+var_54] esi +
mov [ebp+var_70] esi +
test esi esi +
jle loc_429D73  +
lea esi [ebp+var_1C] +
lea eax [esi+eax*2] +
lea esi [ecx+8] +
mov [ebp+var_80] eax +
mov [ebp+var_38] esi +
mov esi [ebp+var_70] +
mov ecx [ebp+var_38] +
movzx edi word ptr [eax] +
movzx eax word ptr [ecx] +
imul edi eax +
mov eax [edx-4] +
mov [ebp+var_78] ebx +
lea ecx [eax+edi] +
cmp ecx eax +
mov [ebp+var_70] ecx +
mov eax ecx +
jb loc_429D3E  +
cmp eax edi +
jnb loc_429D43  +
xor ecx ecx +
inc ecx  +
jmp loc_429D46  +
mov ecx [ebp+var_78] +
mov [edx-4] eax +
test ecx ecx +
jz loc_429D50  +
inc word ptr [edx]  +
mov eax [ebp+var_80] +
mov ecx [ebp+var_38] +
add eax 2 +
sub ecx 2 +
mov [ebp+var_80] eax +
dec esi  +
mov [ebp+var_38] ecx +
test esi esi +
jg loc_429D1F  +
mov ecx [ebp+var_74] +
mov esi [ebp+var_54] +
mov eax [ebp+var_84] +
add edx 2 +
inc eax  +
dec esi  +
mov [ebp+var_84] eax +
mov [ebp+var_54] esi +
test esi esi +
jg loc_429D03  +
mov edi [ebp+var_40] +
mov eax [ebp+var_8] +
add edi 0C002h +
mov esi [ebp+var_10] +
mov [ebp+var_38] eax +
test di di +
jle loc_429DDB  +
test eax eax +
js loc_429DD6  +
mov eax [ebp+var_C] +
mov edx esi +
mov ecx eax +
shr edx 1Fh +
add eax eax +
shr ecx 1Fh +
or eax edx +
add esi esi +
mov [ebp+var_C] eax +
mov eax [ebp+var_38] +
add eax eax +
mov [ebp+var_10] esi +
or eax ecx +
mov ecx 0FFFFh +
add edi ecx +
mov [ebp+var_38] eax +
mov [ebp+var_8] eax +
test di di +
jg loc_429DA0  +
test di di +
jg loc_429E4C  +
mov eax 0FFFFh +
add edi eax +
test di di +
jns loc_429E4C  +
mov ebx [ebp+var_38] +
mov eax edi +
neg eax  +
xor edx edx +
movzx eax ax +
add edi eax +
mov [ebp+var_54] eax +
mov [ebp+var_40] edi +
inc edx  +
mov edi [ebp+var_48] +
test byte ptr [ebp+var_10] dl +
jz loc_429E05  +
inc edi  +
mov ecx [ebp+var_C] +
mov eax ebx +
shl eax 1Fh +
mov [ebp+var_38] ecx +
shr [ebp+var_38] 1 +
or [ebp+var_38] eax +
mov eax [ebp+var_38] +
shl ecx 1Fh +
shr esi 1 +
shr ebx 1 +
or esi ecx +
dec [ebp+var_54]  +
mov [ebp+var_8] ebx +
mov [ebp+var_C] eax +
mov [ebp+var_10] esi +
jnz loc_429DFF  +
push 0  +
mov [ebp+var_38] ebx +
test edi edi +
mov edi [ebp+var_40] +
pop ebx  +
jz loc_429E4C  +
mov ax si +
or ax dx +
mov word ptr [ebp+var_10] ax +
mov esi [ebp+var_10] +
jmp loc_429E50  +
mov ax word ptr [ebp+var_10] +
mov ecx 8000h +
cmp ax cx +
ja loc_429E68  +
and esi 1FFFFh +
cmp esi 18000h +
jnz loc_429EA8  +
mov eax [ebp+var_10+2] +
cmp eax 0FFFFFFFFh +
jnz loc_429EA4  +
mov eax [ebp+var_C+2] +
mov [ebp+var_10+2] ebx +
cmp eax 0FFFFFFFFh +
jnz loc_429E9B  +
mov ax word ptr [ebp+var_8+2] +
mov edx 0FFFFh +
mov [ebp+var_C+2] ebx +
cmp ax dx +
jnz loc_429E93  +
mov word ptr [ebp+var_8+2] cx +
inc edi  +
jmp loc_429E9F  +
inc ax  +
mov word ptr [ebp+var_8+2] ax +
jmp loc_429E9F  +
inc eax  +
mov [ebp+var_C+2] eax +
mov ecx [ebp+var_8] +
jmp loc_429EAB  +
inc eax  +
mov [ebp+var_10+2] eax +
mov ecx [ebp+var_38] +
mov eax 7FFFh +
cmp di ax +
jnb loc_429ED5  +
mov ax word ptr [ebp+var_10+2] +
or edi [ebp+var_5C] +
mov word ptr [ebp+var_1C] ax +
mov eax [ebp+var_C] +
mov [ebp+var_1C+2] eax +
mov esi [ebp+var_1C] +
mov [ebp+var_16] ecx +
mov edx [ebp-18h] +
mov [ebp+var_12] di +
jmp loc_429EF6  +
xor eax eax +
cmp word ptr [ebp+var_5C] ax +
setz al  +
dec eax  +
and eax 80000000h +
add eax 7FFF8000h +
mov [ebp+var_16+2] eax +
mov esi ebx +
mov edx ebx +
mov [ebp+var_1C] esi +
mov [ebp-18h] edx +
mov [ebp+var_38] esi +
mov ecx [ebp+var_60] +
mov eax [ebp+var_44] +
test eax eax +
jz loc_429F0E  +
jmp loc_429C06  +
mov edx [ebp-18h] +
mov esi [ebp+var_1C] +
mov eax [ebp+var_16+2] +
mov ecx 3FFFh +
shr eax 10h +
cmp ax cx +
jb loc_42A1C5  +
mov cx word ptr [ebp+var_20+2] +
mov edi eax +
inc [ebp+var_3C]  +
mov ax cx +
xor ax di +
mov [ebp+var_78] ebx +
and ax word ptr [ebp+var_64] +
movzx eax ax +
mov [ebp+var_5C] eax +
mov eax 7FFFh +
and cx ax +
mov [ebp+var_10] ebx +
and edi eax +
movzx ecx cx +
mov [ebp+var_48] edi +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
lea eax [edi+ecx] +
movzx edi ax +
mov eax [ebp+var_48] +
mov [ebp+var_40] edi +
cmp ax word ptr [ebp+var_58] +
jnb loc_42A1AA  +
cmp cx word ptr [ebp+var_58] +
jnb loc_42A1AA  +
cmp di word ptr [ebp+var_68] +
ja loc_42A1AA  +
cmp di word ptr [ebp+var_50] +
ja loc_429F8F  +
mov [ebp+var_16+2] ebx +
jmp loc_42A1C1  +
test ax ax +
jnz loc_429FB4  +
inc edi  +
test [ebp+var_16+2] 7FFFFFFFh +
mov [ebp+var_40] edi +
jnz loc_429FB4  +
test edx edx +
jnz loc_429FB4  +
test esi esi +
jnz loc_429FB4  +
xor eax eax +
mov [ebp+var_12] ax +
jmp loc_42A1C5  +
test cx cx +
jnz loc_429FD2  +
inc edi  +
test [ebp+var_20] 7FFFFFFFh +
mov [ebp+var_40] edi +
jnz loc_429FD2  +
cmp [ebp+var_24] 0 +
jnz loc_429FD2  +
cmp [ebp+var_28] 0 +
jz loc_429F87  +
mov edx ebx +
lea ecx [ebp+var_C] +
push 5  +
mov [ebp+var_64] edx +
pop eax  +
mov esi eax +
test eax eax +
jle loc_42A03B  +
lea edi [ebp+var_1C] +
lea eax [ebp+var_20] +
lea edi [edi+edx*2] +
mov [ebp+var_68] eax +
mov [ebp+var_50] edi +
movzx edx word ptr [eax] +
movzx eax word ptr [edi] +
imul edx eax +
mov eax [ecx-4] +
mov [ebp+var_48] ebx +
lea edi [eax+edx] +
cmp edi eax +
jb loc_42A00C  +
cmp edi edx +
jnb loc_42A011  +
xor eax eax +
inc eax  +
jmp loc_42A014  +
mov eax [ebp+var_48] +
mov [ecx-4] edi +
test eax eax +
jz loc_42A01E  +
inc word ptr [ecx]  +
mov edi [ebp+var_50] +
mov eax [ebp+var_68] +
add edi 2 +
sub eax 2 +
mov [ebp+var_50] edi +
dec esi  +
mov [ebp+var_68] eax +
test esi esi +
jg loc_429FF2  +
mov edx [ebp+var_64] +
mov eax [ebp+var_4C] +
add ecx 2 +
inc edx  +
dec eax  +
mov [ebp+var_64] edx +
mov [ebp+var_4C] eax +
test eax eax +
jg loc_429FDD  +
mov edi [ebp+var_40] +
mov esi [ebp+var_8] +
add edi 0C002h +
test di di +
jle loc_42A0FB  +
mov ebx [ebp+var_10] +
mov [ebp+var_58] ebx +
test esi esi +
js loc_42A095  +
mov eax [ebp+var_C] +
mov edx ebx +
mov ecx eax +
shr edx 1Fh +
add eax eax +
shr ecx 1Fh +
or eax edx +
add esi esi +
mov [ebp+var_C] eax +
add ebx ebx +
mov eax 0FFFFh +
mov [ebp+var_10] ebx +
or esi ecx +
add edi eax +
mov [ebp+var_8] esi +
test di di +
jg loc_42A065  +
mov [ebp+var_58] ebx +
mov edx [ebp+var_58] +
push 0  +
pop ebx  +
test di di +
jle loc_42A0FE  +
mov cx word ptr [ebp+var_10] +
mov eax 8000h +
cmp cx ax +
ja loc_42A0C3  +
and edx 1FFFFh +
cmp edx 18000h +
jnz loc_42A180  +
mov eax [ebp+var_10+2] +
cmp eax 0FFFFFFFFh +
jnz loc_42A17C  +
mov eax [ebp+var_C+2] +
mov [ebp+var_10+2] ebx +
cmp eax 0FFFFFFFFh +
jnz loc_42A173  +
mov ax word ptr [ebp+var_8+2] +
mov ecx 0FFFFh +
mov [ebp+var_C+2] ebx +
cmp ax cx +
jnz loc_42A16B  +
mov eax 8000h +
inc edi  +
mov word ptr [ebp+var_8+2] ax +
jmp loc_42A177  +
mov edx [ebp+var_10] +
mov eax 0FFFFh +
add edi eax +
test di di +
jns loc_42A0A3  +
mov eax edi +
neg eax  +
movzx eax ax +
add edi eax +
mov [ebp+var_4C] eax +
mov [ebp+var_40] edi +
mov edi [ebp+var_78] +
test byte ptr [ebp+var_10] 1 +
jz loc_42A123  +
inc edi  +
mov ebx [ebp+var_C] +
mov eax esi +
mov ecx ebx +
shl eax 1Fh +
shl ecx 1Fh +
shr ebx 1 +
shr edx 1 +
or ebx eax +
or edx ecx +
shr esi 1 +
dec [ebp+var_4C]  +
mov [ebp+var_C] ebx +
mov [ebp+var_10] edx +
jnz loc_42A11C  +
push 0  +
test edi edi +
mov [ebp+var_8] esi +
mov edi [ebp+var_40] +
pop ebx  +
jz loc_42A0A3  +
xor eax eax +
mov cx dx +
inc eax  +
or cx ax +
mov word ptr [ebp+var_10] cx +
mov edx [ebp+var_10] +
jmp loc_42A0A7  +
inc ax  +
mov word ptr [ebp+var_8+2] ax +
jmp loc_42A177  +
inc eax  +
mov [ebp+var_C+2] eax +
mov esi [ebp+var_8] +
jmp loc_42A180  +
inc eax  +
mov [ebp+var_10+2] eax +
mov eax 7FFFh +
cmp di ax +
jnb loc_42A1AA  +
mov ax word ptr [ebp+var_10+2] +
or edi [ebp+var_5C] +
mov word ptr [ebp+var_1C] ax +
mov eax [ebp+var_C] +
mov [ebp+var_1C+2] eax +
mov [ebp+var_16] esi +
mov edx [ebp-18h] +
mov esi [ebp+var_1C] +
mov [ebp+var_12] di +
jmp loc_42A1C5  +
xor eax eax +
cmp word ptr [ebp+var_5C] ax +
setz al  +
dec eax  +
and eax 80000000h +
add eax 7FFF8000h +
mov [ebp+var_16+2] eax +
mov esi ebx +
mov edx ebx +
test [ebp+arg_10] 1 +
mov ecx [ebp+var_6C] +
mov eax [ebp+var_3C] +
mov edi [ebp+arg_C] +
mov [ecx] ax +
jz loc_42A20D  +
cwde   +
add edi eax +
mov [ebp+var_3C] edi +
test edi edi +
jg loc_42A210  +
xor eax eax +
mov [ecx] ax +
mov eax 8000h +
cmp word ptr [ebp+var_7C] ax +
setnz al  +
dec al  +
and al 0Dh +
add al 20h +
mov [ecx+2] al +
xor eax eax +
inc eax  +
mov [ecx+3] al +
mov byte ptr [ecx+4] 30h +
mov [ecx+5] bl +
jmp loc_42A3B9  +
mov [ebp+var_3C] edi +
push 15h  +
pop eax  +
cmp edi eax +
jle loc_42A21A  +
mov [ebp+var_3C] eax +
mov edi [ebp+var_16+2] +
shr edi 10h +
sub edi 3FFEh +
xor eax eax +
push 8  +
mov [ebp+var_48] edi +
mov [ebp+var_12] ax +
mov ebx [ebp+var_16+2] +
pop edi  +
mov ecx edx +
mov eax esi +
shr eax 1Fh +
add edx edx +
shr ecx 1Fh +
add ebx ebx +
add esi esi +
or ebx ecx +
or edx eax +
mov [ebp+var_1C] esi +
mov [ebp+var_16+2] ebx +
dec edi  +
jnz loc_42A235  +
mov edi [ebp+var_48] +
mov [ebp+var_44] ebx +
mov [ebp-18h] edx +
mov [ebp+var_38] esi +
push 0  +
pop ebx  +
test edi edi +
jns loc_42A29C  +
neg edi  +
and edi 0FFh +
jle loc_42A29C  +
mov ebx [ebp+var_44] +
mov ecx edx +
shr esi 1 +
mov eax ebx +
shl ecx 1Fh +
shl eax 1Fh +
or esi ecx +
shr edx 1 +
shr ebx 1 +
or edx eax +
dec edi  +
mov [ebp+var_16+2] ebx +
mov [ebp+var_1C] esi +
test edi edi +
jg loc_42A272  +
mov [ebp+var_44] ebx +
xor ebx ebx +
mov [ebp-18h] edx +
mov [ebp+var_38] esi +
mov esi [ebp+var_6C] +
mov eax [ebp+var_3C] +
inc eax  +
mov [ebp+var_50] eax +
lea edi [esi+4] +
mov [ebp+var_48] edi +
mov ecx edi +
mov [ebp+var_4C] ecx +
test eax eax +
jle loc_42A381  +
lea esi [ebp+var_1C] +
mov ecx edx +
lea edi [ebp+var_34] +
shr ecx 1Fh +
movs   +
add edx edx +
movs   +
movs   +
mov edi [ebp+var_38] +
mov eax edi +
shr eax 1Fh +
add edi edi +
or edx eax +
mov eax [ebp+var_44] +
lea esi [eax+eax] +
mov eax edi +
or esi ecx +
shr eax 1Fh +
mov ecx edx +
add edi edi +
add edx edx +
shr ecx 1Fh +
or edx eax +
add esi esi +
mov eax [ebp+var_34] +
or esi ecx +
lea ecx [eax+edi] +
mov [ebp+var_3C] ecx +
cmp ecx edi +
jb loc_42A302  +
cmp ecx eax +
jnb loc_42A31D  +
lea eax [edx+1] +
mov ecx ebx +
cmp eax edx +
jb loc_42A310  +
cmp eax 1 +
jnb loc_42A313  +
xor ecx ecx +
inc ecx  +
test ecx ecx +
mov edx eax +
mov ecx [ebp+var_3C] +
jz loc_42A31D  +
inc esi  +
mov eax [ebp+var_30] +
lea edi [eax+edx] +
cmp edi edx +
jb loc_42A32B  +
cmp edi eax +
jnb loc_42A32C  +
inc esi  +
add esi [ebp+var_2C] +
mov eax ecx +
mov edx [ebp+var_3C] +
mov ecx edi +
add edx edx +
shr eax 1Fh +
mov [ebp+var_38] edx +
mov [ebp+var_1C] edx +
lea edx [edi+edi] +
or edx eax +
shr ecx 1Fh +
lea eax [esi+esi] +
mov [ebp-18h] edx +
or eax ecx +
mov ecx [ebp+var_4C] +
mov [ebp+var_16+2] eax +
shr eax 18h +
add al 30h +
mov byte ptr [ebp+var_12+1] bl +
mov [ecx] al +
inc ecx  +
mov eax [ebp+var_50] +
dec eax  +
mov [ebp+var_4C] ecx +
mov [ebp+var_50] eax +
test eax eax +
jle loc_42A37B  +
mov eax [ebp+var_16+2] +
mov [ebp+var_44] eax +
jmp loc_42A2B9  +
mov esi [ebp+var_6C] +
mov edi [ebp+var_48] +
mov al [ecx-1] +
sub ecx 2 +
cmp al 35h +
jge loc_42A396  +
jmp loc_42A3D0  +
cmp byte ptr [ecx] 39h +
jnz loc_42A39A  +
mov byte ptr [ecx] 30h +
dec ecx  +
cmp ecx edi +
jnb loc_42A38D  +
cmp ecx edi +
jnb loc_42A3A2  +
inc ecx  +
inc word ptr [esi]  +
inc byte ptr [ecx]  +
mov eax [ebp+var_6C] +
sub cl al +
sub cl 3 +
mov [eax+3] cl +
movsx ecx cl +
mov [ecx+eax+4] bl +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn   +
cmp byte ptr [ecx] 30h +
jnz loc_42A3D4  +
dec ecx  +
cmp ecx edi +
jnb loc_42A3CA  +
cmp ecx edi +
jnb loc_42A3A4  +
mov ecx [ebp+var_6C] +
xor eax eax +
mov [ecx] ax +
mov eax 8000h +
cmp word ptr [ebp+var_7C] ax +
setnz al  +
dec al  +
and al 0Dh +
add al 20h +
mov [ecx+2] al +
xor eax eax +
inc eax  +
mov [ecx+3] al +
mov byte ptr [edi] 30h +
jmp loc_42A205  +
xor ebx ebx +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call sub_418D2E  +
int 3  +
xor [ebx] esp +
push ebx  +
dec esi  +
inc ecx  +
dec esi  +
add [eax+4E492331h] dl +
inc esp  +
add [eax+49233190h] dl +
dec esi  +
inc esi  +
add [eax+51233190h] dl +
dec esi  +
inc ecx  +
dec esi  +
add byte ptr [ebp+var_78+3] dl +
***
or eax 8000h +
pop ebp  +
retn   +
***
or eax 40h +
pop ebp  +
retn   +
***
sub esp 10h +
mov ecx [ebp+arg_0] +
call sub_401E34  +
cmp dword_43492C 1 +
jl loc_42A8DF  +
mov eax [ebp+8] +
test al 40h +
jz loc_42A8D5  +
cmp dword_433AE4 0 +
jz loc_42A8D5  +
and dword ptr [ebp-4] 0 +
ldmxcsr dword ptr [ebp+8]  +
jmp loc_42A8CC  +
mov eax [ebp-14h] +
mov eax [eax] +
cmp dword ptr [eax] 0C0000005h +
jz loc_42A8B6  +
cmp dword ptr [eax] 0C000001Dh +
jz loc_42A8B6  +
xor eax eax +
retn   +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
and dword_433AE4 0 +
and dword ptr [ebp+8] 0FFFFFFBFh +
ldmxcsr dword ptr [ebp+8]  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_42A8DF  +
and eax 0FFFFFFBFh +
mov [ebp+8] eax +
ldmxcsr dword ptr [ebp+8]  +
call sub_401106  +
retn   +
***
call sub_42A9EA  +
mov eax offset __ImageBase +
mov dword ptr [esi] 38h +
lea ecx [esi+14h] +
mov [esi+8] eax +
mov [esi+4] eax +
mov dword ptr [esi+0Ch] 0E00h +
mov dword ptr [esi+10h] offset dword_42A958 +
call sub_411BFA  +
test eax eax +
jns loc_42A953  +
call ds:IsDebuggerPresent  +
test eax eax +
jz loc_42A94C  +
push offset OutputString  +
call ds:OutputDebugStringW  +
mov byte_4349E4 1 +
mov eax esi +
pop esi  +
retn   +
***
mov esi ecx +
xor edi edi +
push 18h  +
push edi  +
lea eax [esi+14h] +
push eax  +
call sub_40125C  +
add esp 0Ch +
mov [esi+2Ch] edi +
mov [esi+30h] edi +
mov eax esi +
mov [esi+34h] edi +
pop edi  +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
lea eax [esi+14h] +
push eax  +
call ds:DeleteCriticalSection  +
lea ecx [esi+2Ch] +
pop esi  +
push esi  +
mov esi ecx +
cmp dword ptr [esi] 0 +
jz loc_42AA31  +
push dword ptr [esi]  +
call sub_41740A  +
and dword ptr [esi] 0 +
pop ecx  +
and dword ptr [esi+4] 0 +
and dword ptr [esi+8] 0 +
pop esi  +
retn   +
***
mov eax offset GetFileVersionInfoSizeA +
jmp $+2  +
push ecx  +
push edx  +
push eax  +
push offset VERSION_dll_import_table  +
call sub_42D25D  +
pop edx  +
pop ecx  +
jmp eax  +
***
mov eax offset GetFileVersionInfoA +
jmp loc_42AA47  +
***
sub esp 10h +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
push ebx  +
mov eax [ebp+arg_4] +
mov eax [ebp+arg_4] +
sub esp 0Ch +
mov ecx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
mov eax ecx +
shr eax 8 +
movzx eax al +
push ebx  +
or bl 0FFh +
cmp eax 9Fh +
jg loc_42B44B  +
cmp eax 4Eh +
jge loc_42B444  +
cmp eax 16h +
jg loc_42B152  +
jz loc_42B148  +
cmp eax 15h +
ja loc_42B5BC  +
jmp ds:off_42B5C3[eax*4]  +
movzx eax cl +
mov bl ds:byte_42B620[eax] +
jmp loc_42B5BC  +
movzx eax cl +
mov bl ds:byte_42B720[eax] +
jmp loc_42B5BC  +
mov eax offset dword_42B820 +
jmp loc_42B5B3  +
movzx eax cl +
mov bl ds:byte_42B878[eax] +
jmp loc_42B5BC  +
mov eax offset dword_42B978 +
jmp loc_42B5B3  +
mov eax offset loc_42BA1C +
jmp loc_42B5B3  +
movzx eax cl +
mov bl ds:byte_42BA50[eax] +
jmp loc_42B5BC  +
mov eax offset dword_42BB50 +
jmp loc_42B5B3  +
movzx eax cl +
mov bl ds:byte_42BB68[eax] +
jmp loc_42B5BC  +
mov eax 0AF0h +
cmp cx ax +
jnb loc_42B5BC  +
movzx eax cl +
mov bl ds:byte_42BC68[eax] +
jmp loc_42B5BC  +
movzx eax cl +
mov bl ds:byte_42BD58[eax] +
jmp loc_42B5BC  +
mov eax 0CF0h +
cmp cx ax +
jnb loc_42B5BC  +
movzx eax cl +
mov bl ds:byte_42BE58[eax] +
jmp loc_42B5BC  +
movzx eax cl +
mov bl ds:byte_42BF48[eax] +
jmp loc_42B5BC  +
mov eax 0EDEh +
cmp cx ax +
jnb loc_42B5BC  +
movzx eax cl +
mov bl ds:byte_42C048[eax] +
jmp loc_42B5BC  +
mov eax 0FD0h +
cmp cx ax +
jnb loc_42B5BC  +
movzx eax cl +
mov bl ds:byte_42C128[eax] +
jmp loc_42B5BC  +
mov eax offset dword_42C1F8 +
jmp loc_42B5B3  +
mov eax 115Ah +
cmp cx ax +
jnb loc_42B0EF  +
mov bl 5 +
jmp loc_42B5BC  +
mov eax 115Fh +
cmp cx ax +
jb loc_42B5BC  +
add eax 44h +
cmp cx ax +
jb loc_42B0E8  +
lea eax [ecx-11A8h] +
cmp ax 51h +
jbe loc_42B0E8  +
jmp loc_42B5BC  +
movzx eax cx +
mov ecx eax +
xor edx edx +
shr eax 4 +
and ecx 0Fh +
inc edx  +
and eax 0Fh +
shl edx cl +
movzx eax ds:word_42C730[eax*2] +
test edx eax +
jnz loc_42B0E8  +
jmp loc_42B5BC  +
mov eax offset dword_42C22C +
jmp loc_42B5B3  +
test cl cl +
jmp loc_42B133  +
mov eax offset dword_42C250 +
jmp loc_42B5B3  +
cmp eax 26h +
jg loc_42B337  +
jz loc_42B314  +
cmp eax 21h +
jg loc_42B293  +
jz loc_42B204  +
sub eax 17h +
jz loc_42B1FA  +
dec eax  +
jz loc_42B1F0  +
sub eax 6 +
jz loc_42B1B5  +
dec eax  +
jz loc_42B1A7  +
dec eax  +
jnz loc_42B5BC  +
mov eax 20E4h +
cmp cx ax +
jnb loc_42B5BC  +
movzx eax cl +
mov bl ds:byte_42C3B0[eax] +
jmp loc_42B5BC  +
movzx eax cl +
mov bl ds:byte_42C2B0[eax] +
jmp loc_42B5BC  +
mov eax 1EF9h +
cmp cx ax +
ja loc_42B5BC  +
lea eax [ecx-1E96h] +
cmp ax 9 +
ja loc_42B1E4  +
mov eax 1E9Bh +
cmp cx ax +
ja loc_42B5BC  +
mov bl 2 +
jmp loc_42B5BC  +
mov bl cl +
and bl 1 +
inc bl  +
jmp loc_42B5BC  +
mov eax offset dword_42C28C +
jmp loc_42B5B3  +
mov eax offset dword_42C26C +
jmp loc_42B5B3  +
mov eax 21F4h +
cmp cx ax +
jnb loc_42B5BC  +
add eax 0FFFFFF9Ch +
cmp cx ax +
jb loc_42B249  +
movzx eax cx +
mov ecx eax +
xor ebx ebx +
add eax 70h +
inc ebx  +
sar eax 4 +
and ecx 0Fh +
shl ebx cl +
and eax 0Fh +
movzx eax ds:word_42C754[eax*2] +
and ebx eax +
neg ebx  +
sbb bl bl +
and bl 0FDh +
add bl 19h +
jmp loc_42B5BC  +
mov eax 2183h +
cmp cx ax +
ja loc_42B5BC  +
add eax 0FFFFFFDDh +
cmp cx ax +
jb loc_42B266  +
mov bl 7 +
jmp loc_42B5BC  +
mov eax 2153h +
cmp cx ax +
jb loc_42B277  +
mov bl 8 +
jmp loc_42B5BC  +
mov eax 213Bh +
cmp cx ax +
jnb loc_42B5BC  +
movzx eax cl +
mov bl ds:byte_42C494[eax] +
jmp loc_42B5BC  +
sub eax 22h +
jz loc_42B2FF  +
dec eax  +
jz loc_42B2E7  +
dec eax  +
jz loc_42B2DD  +
dec eax  +
jnz loc_42B5BC  +
mov eax 25B7h +
cmp cx ax +
jz loc_42B30D  +
add eax 0Ah +
cmp cx ax +
jz loc_42B30D  +
mov eax 25F8h +
cmp cx ax +
jnb loc_42B5BC  +
movzx eax cx +
sub eax 2596h +
cmp eax 9 +
jbe loc_42B5BC  +
mov bl 19h +
jmp loc_42B5BC  +
mov eax offset dword_42C4E4 +
jmp loc_42B5B3  +
mov eax 239Bh +
cmp cx ax +
jnb loc_42B5BC  +
mov eax offset dword_42C4D0 +
jmp loc_42B5B3  +
mov eax 22F2h +
cmp cx ax +
jnb loc_42B5BC  +
mov bl 16h +
jmp loc_42B5BC  +
mov eax 266Fh +
cmp cx ax +
jz loc_42B30D  +
add eax 3 +
cmp cx ax +
jnb loc_42B5BC  +
movzx eax cx +
sub eax 2614h +
cmp eax 4 +
jmp loc_42B2D0  +
cmp eax 30h +
jg loc_42B3B9  +
jz loc_42B3AF  +
sub eax 27h +
jz loc_42B3A5  +
dec eax  +
jz loc_42B2D6  +
sub eax 6 +
jz loc_42B381  +
dec eax  +
jnz loc_42B5BC  +
mov eax 2FD5h +
mov bl 19h +
cmp cx ax +
jbe loc_42B5BC  +
add eax 1Bh +
cmp cx ax +
jnb loc_42B372  +
or bl 0FFh +
jmp loc_42B5BC  +
mov eax 2FFCh +
cmp cx ax +
jnb loc_42B36A  +
jmp loc_42B5BC  +
movzx eax cx +
sub eax 2E80h +
cmp eax 73h +
ja loc_42B5BC  +
mov eax 2E9Ah +
cmp cx ax +
jnz loc_42B2D6  +
jmp loc_42B5BC  +
mov eax offset dword_42C4F8 +
jmp loc_42B5B3  +
mov eax offset dword_42C530 +
jmp loc_42B5B3  +
cmp eax 31h +
jz loc_42B43A  +
cmp eax 32h +
jz loc_42B430  +
cmp eax 33h +
jz loc_42B3E7  +
add eax 0FFFFFFCCh +
cmp eax 19h +
ja loc_42B5BC  +
mov eax 4DB6h +
cmp cx ax +
jb loc_42B0E8  +
jmp loc_42B5BC  +
mov eax 3376h +
mov bl 19h +
cmp cx ax +
jbe loc_42B5BC  +
add eax 5 +
cmp cx ax +
jb loc_42B36A  +
mov eax 33DEh +
cmp cx ax +
jb loc_42B5BC  +
add eax 2 +
cmp cx ax +
jb loc_42B36A  +
mov eax 33FFh +
cmp cx ax +
jz loc_42B36A  +
jmp loc_42B5BC  +
mov eax (offset loc_42C593+1) +
jmp loc_42B5B3  +
mov eax offset loc_42C57C +
jmp loc_42B5B3  +
mov eax 9FA6h +
jmp loc_42B3D9  +
cmp eax 0FAh +
jg loc_42B51A  +
cmp eax 0F9h +
jge loc_42B510  +
cmp eax 0D7h +
jg loc_42B4F0  +
cmp eax 0ACh +
jge loc_42B4E6  +
cmp eax 0A3h +
jle loc_42B0E8  +
cmp eax 0A4h +
jnz loc_42B5BC  +
mov eax 0A4C7h +
cmp cx ax +
jnb loc_42B5BC  +
add eax 0FFFFFFDDh +
cmp cx ax +
jnb loc_42B4C2  +
mov eax 0A48Dh +
cmp cx ax +
jb loc_42B0E8  +
lea eax [ecx+5B70h] +
cmp ax 11h +
jbe loc_42B2D6  +
jmp loc_42B5BC  +
mov eax 0A4B4h +
cmp cx ax +
jz loc_42B5BC  +
add eax 0Dh +
cmp cx ax +
jz loc_42B5BC  +
mov eax 0A4C5h +
jmp loc_42B397  +
mov eax 0D7A4h +
jmp loc_42B3D9  +
cmp eax 0DFh +
jle loc_42B509  +
cmp eax 0F8h +
jg loc_42B5BC  +
mov bl 1Dh +
jmp loc_42B5BC  +
mov bl 1Ch +
jmp loc_42B5BC  +
mov eax 0FA2Eh +
jmp loc_42B3D9  +
sub eax 0FBh +
jz loc_42B5AE  +
dec eax  +
jz loc_42B0E8  +
dec eax  +
jz loc_42B54B  +
dec eax  +
jz loc_42B544  +
dec eax  +
jnz loc_42B5BC  +
movzx eax cl +
mov bl ds:byte_42C630[eax] +
jmp loc_42B5BC  +
mov eax offset loc_42C5E0 +
jmp loc_42B5B3  +
mov edx 0FD3Eh +
cmp cx dx +
jb loc_42B0E8  +
lea eax [edx+12h] +
cmp cx ax +
jnb loc_42B578  +
cmp cx dx +
jnz loc_42B56A  +
mov bl 9 +
jmp loc_42B5BC  +
mov eax 0FD3Fh +
cmp cx ax +
jnz loc_42B5BC  +
mov bl 0Ah +
jmp loc_42B5BC  +
mov eax 0FDC8h +
cmp cx ax +
jnb loc_42B59E  +
add eax 0FFFFFFC8h +
cmp cx ax +
jb loc_42B0E8  +
mov eax 0FD91h +
cmp cx ax +
ja loc_42B0E8  +
jmp loc_42B5BC  +
movzx eax cx +
sub eax 0FDF0h +
cmp eax 0Bh +
jmp loc_42B10F  +
mov eax offset loc_42C5B4 +
push ecx  +
push eax  +
call sub_42C7E2  +
mov bl al +
mov al bl +
pop ebx  +
pop ebp  +
retn 4  +
***
xor dh [ecx] +
jmp dword ptr [esi]  +
***
adc al 5 +
jmp fword ptr [eax]  +
***
add eax 55EFF04h +
std   +
call fword ptr [ecx]  +
sbb [eax+ecx] eax +
or bl [ecx] +
sbb large ds:0FF48h al +
add [esi] bl +
sbb eax 0AFF0319h +
or [edx] bl +
sbb [edi+edi*8] ebx +
sbb al 19h +
add edi edi +
add [ecx] ebx +
or cl [eax] +
daa   +
sbb [edi] ecx +
dec dword ptr [ecx+ebx]  +
add al 0FFh +
das   +
sbb [ecx] eax +
inc dword ptr [eax]  +
and eax 0FF0C0207h +
add eax 0FEFF0502h +
add eax 1050A13h +
push ss  +
or eax 5FF0105h +
add eax 0FF05FFF7h +
add eax 505FF05h +
jmp fword ptr [ebp+eax+21h]  +
***
jmp large fword ptr ds:5  +
***
dec esi  +
and bh bh +
add al 13h +
or al 0FFh +
jmp loc_42C5F8  +
or eax 90E0E0Dh +
or cl [ecx] +
or cl [ecx] +
or cl [ecx] +
or cl [ecx] +
or cl [ecx] +
or cl [ecx] +
or cl [ecx] +
or al [edi+edi*8] +
add al 0Fh +
add ecx [esi] +
add ecx [edi] +
out 0FFh eax +
mov edx [ebp+arg_0] +
mov ecx [ebp+arg_0] +
push esi  +
mov ecx [ebp+arg_0] +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov eax edi +
shr eax 8 +
movzx eax al +
cmp eax 5 +
jg loc_42CC64  +
jz loc_42CC47  +
sub eax 0 +
jz loc_42CC15  +
dec eax  +
jz loc_42CB73  +
dec eax  +
jz loc_42CB47  +
dec eax  +
jz loc_42CAE6  +
dec eax  +
jnz loc_42CD4F  +
mov eax 460h +
mov si di +
cmp si ax +
jnb loc_42CABB  +
add eax 0FFFFFFD0h +
cmp si ax +
jnb loc_42CD53  +
mov eax 410h +
cmp si ax +
jnb loc_42CB26  +
add edi 50h +
jmp loc_42CD4C  +
lea eax [edi-460h] +
movzx eax ax +
mov ecx eax +
xor edx edx +
and ecx 0Fh +
inc edx  +
shr eax 4 +
shl edx cl +
movzx eax ds:word_42CDFC[eax*2] +
test edx eax +
jnz loc_42CD4B  +
jmp loc_42CD53  +
mov si word ptr [ebp+arg_0] +
mov eax 385h +
cmp si ax +
jbe loc_42CD53  +
add eax 0Ch +
cmp si ax +
jnb loc_42CB10  +
movzx eax si +
movsx ax byte ptr ds:(loc_42CA69+1)[eax] +
jmp loc_42CC0D  +
mov eax 3ACh +
cmp si ax +
jnb loc_42CB2E  +
add eax 0FFFFFFF6h +
cmp si ax +
jz loc_42CD53  +
add edi 20h +
jmp loc_42CD4C  +
lea eax [edi-3DAh] +
cmp ax 14h +
ja loc_42CD53  +
mov al byte ptr [ebp+arg_0] +
not al  +
test al 1 +
jmp loc_42CADB  +
mov si word ptr [ebp+arg_0] +
mov eax 233h +
cmp si ax +
jnb loc_42CD53  +
mov al byte ptr [ebp+arg_0] +
not al  +
test al 1 +
jz loc_42CD53  +
mov eax 220h +
cmp si ax +
jmp loc_42CADB  +
mov si word ptr [ebp+arg_0] +
mov eax 180h +
cmp si ax +
jnb loc_42CBD7  +
lea eax [edi-100h] +
movzx eax ax +
mov ecx eax +
xor edx edx +
and ecx 0Fh +
inc edx  +
shr eax 4 +
shl edx cl +
movzx eax ds:word_42CD60[eax*2] +
test edx eax +
jnz loc_42CD4B  +
mov eax 130h +
cmp si ax +
jnz loc_42CBBD  +
mov [ebp+arg_0] 69h +
jmp loc_42CD4F  +
mov eax 178h +
cmp si ax +
jnz loc_42CD53  +
mov [ebp+arg_0] 0FFh +
jmp loc_42CD4F  +
mov eax 1F6h +
cmp si ax +
jnz loc_42CBED  +
mov [ebp+arg_0] 195h +
jmp loc_42CD4F  +
mov eax 1F7h +
cmp si ax +
jnz loc_42CC03  +
mov [ebp+arg_0] 1BFh +
jmp loc_42CD4F  +
movzx eax si +
movzx eax byte ptr ds:(loc_42CBED+3)[eax] +
add si ax +
jmp loc_42CD53  +
mov si word ptr [ebp+arg_0] +
cmp si 41h +
jb loc_42CD53  +
cmp si 5Ah +
jbe loc_42CB26  +
lea eax [edi-0C0h] +
cmp ax 1Eh +
ja loc_42CD53  +
mov eax 0D7h +
jmp loc_42CB1D  +
mov si word ptr [ebp+arg_0] +
movzx eax si +
sub eax 531h +
cmp eax 25h +
ja loc_42CD53  +
add edi 30h +
jmp loc_42CD4C  +
sub eax 1Eh +
jz loc_42CD27  +
dec eax  +
jz loc_42CD13  +
dec eax  +
dec eax  +
jz loc_42CCBF  +
sub eax 3 +
jz loc_42CCA2  +
sub eax 0DBh +
jnz loc_42CD4F  +
mov si word ptr [ebp+arg_0] +
movzx eax si +
sub eax 0FF21h +
cmp eax 19h +
jbe loc_42CB26  +
jmp loc_42CD53  +
mov si word ptr [ebp+arg_0] +
movzx eax si +
sub eax 24B6h +
cmp eax 19h +
ja loc_42CD53  +
add edi 1Ah +
jmp loc_42CD4C  +
mov si word ptr [ebp+arg_0] +
mov eax 2160h +
cmp si ax +
jnb loc_42CD04  +
add eax 0FFFFFFC6h +
cmp si ax +
jnz loc_42CCDE  +
mov [ebp+arg_0] 3C9h +
jmp loc_42CD4F  +
mov eax 212Ah +
cmp si ax +
jnz loc_42CCF1  +
mov [ebp+arg_0] 6Bh +
jmp loc_42CD4F  +
mov eax 212Bh +
cmp si ax +
jnz loc_42CD53  +
mov [ebp+arg_0] 0E5h +
jmp loc_42CD4F  +
mov eax 2170h +
cmp si ax +
jnb loc_42CD53  +
add edi 10h +
jmp loc_42CD4C  +
movzx eax byte ptr [ebp+arg_0] +
mov si word ptr [ebp+arg_0] +
movzx eax ds:byte_42CE10[eax] +
sub si ax +
jmp loc_42CD53  +
mov al byte ptr [ebp+arg_0] +
not al  +
test al 1 +
jz loc_42CD4F  +
mov si word ptr [ebp+arg_0] +
mov eax 1E94h +
cmp si ax +
jbe loc_42CD4B  +
movzx eax si +
sub eax 1EA0h +
cmp eax 58h +
ja loc_42CD53  +
inc edi  +
mov [ebp+arg_0] edi +
mov si word ptr [ebp+arg_0] +
pop edi  +
mov ax si +
pop esi  +
pop ebp  +
retn 4  +
***
test ds:dword_402F80 1000h +
mov eax dword_4349B4 +
push ebx  +
xor ebx ebx +
inc ebx  +
cmp eax ebx +
jnz loc_42CF64  +
xor al al +
pop ebx  +
retn   +
test eax eax +
jz loc_42CF6C  +
mov al bl +
pop ebx  +
retn   +
push esi  +
push offset aKernel32_dll_0  +
call ds:GetModuleHandleW  +
mov esi eax +
test esi esi +
jz loc_42CFA3  +
push offset aAcquiresrwlock  +
push esi  +
call ds:GetProcAddress  +
test eax eax +
jz loc_42CFA3  +
push offset aReleasesrwlock  +
push esi  +
mov dword_4349B8 eax +
call ds:GetProcAddress  +
test eax eax +
jnz loc_42CFA7  +
mov esi ebx +
jmp loc_42CFAC  +
mov dword_4349BC eax +
mov ecx esi +
mov edx offset dword_4349B4 +
xor eax eax +
cmpxchg [edx] ecx +
test eax eax +
jnz loc_42CFC1  +
cmp esi ebx +
jz loc_42CFC5  +
cmp eax ebx +
jnz loc_42CFC9  +
xor al al +
jmp loc_42CFCB  +
mov al bl +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
mov edi edi +
sub esp 24h +
mov eax dword_430000 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
push 8  +
pop ecx  +
mov esi offset dword_42D568 +
lea edi [ebp+dwExceptionCode] +
movs   +
mov edi [ebp+arg_4] +
test edi edi +
jz loc_42D529  +
test byte ptr [edi] 10h +
jz loc_42D529  +
mov ecx [ebx] +
sub ecx 4 +
push ecx  +
mov eax [ecx] +
mov esi [eax+20h] +
mov ecx esi +
mov edi [eax+18h] +
call ds:off_43520C  +
call esi  +
mov [ebp+var_C] ebx +
mov [ebp+var_8] edi +
test edi edi +
jz loc_42D53F  +
test byte ptr [edi] 8 +
jz loc_42D53F  +
mov [ebp+Arguments] 1994000h +
lea eax [ebp+Arguments] +
push eax  +
push [ebp+nNumberOfArguments]  +
push [ebp+dwExceptionFlags]  +
push [ebp+dwExceptionCode]  +
call ds:RaiseException  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_4021E3  +
mov esp ebp +
pop ebp  +
retn 8  +
***
lea eax [esp+4+arg_0] +
sub esp [esp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov [eax] ebp +
mov ebp eax +
mov eax dword_430000 +
xor eax ebp +
push eax  +
mov [ebp-10h] esp +
push dword ptr [ebp-4]  +
mov dword ptr [ebp-4] 0FFFFFFFFh +
lea eax [ebp-0Ch] +
mov large fs:0 eax +
retn   +
***
push esi  +
cld   +
mov esi [ebp+arg_4] +
mov ecx [esi+8] +
xor ecx esi +
call sub_4021E3  +
push 0  +
push esi  +
push dword ptr [esi+14h]  +
push dword ptr [esi+0Ch]  +
push 0  +
push [ebp+arg_8]  +
push dword ptr [esi+10h]  +
push [ebp+arg_0]  +
call sub_42E762  +
add esp 20h +
pop esi  +
pop ebp  +
retn   +
***
push ecx  +
sub esp 18h +
pop eax  +
sub esp 40h +
push ecx  +
push ecx  +
push ecx  +
mov ecx [ebp+arg_4] +
push esi  +
call sub_4179D5  +
mov eax [eax+98h] +
test eax eax +
jz loc_42D997  +
mov ecx [ebp+arg_0] +
cmp [eax] ecx +
jz loc_42D99C  +
mov eax [eax+4] +
test eax eax +
jnz loc_42D98C  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
cld   +
mov [ebp-4] eax +
xor eax eax +
push eax  +
push eax  +
push eax  +
push dword ptr [ebp-4]  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+10h]  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call sub_42E762  +
add esp 20h +
mov [ebp-8] eax +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp-8] +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_401E34  +
mov eax [ebp+8] +
test eax eax +
jz loc_42DA65  +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_42DA65  +
cmp dword ptr [eax+10h] 3 +
jnz loc_42DA65  +
cmp dword ptr [eax+14h] 19930520h +
jz loc_42DA1C  +
cmp dword ptr [eax+14h] 19930521h +
jz loc_42DA1C  +
cmp dword ptr [eax+14h] 19930522h +
jnz loc_42DA65  +
mov ecx [eax+1Ch] +
test ecx ecx +
jz loc_42DA65  +
mov edx [ecx+4] +
test edx edx +
jz loc_42DA51  +
and dword ptr [ebp-4] 0 +
push edx  +
push dword ptr [eax+18h]  +
call sub_42D6FA  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
jmp loc_42DA65  +
xor eax eax +
cmp [ebp+0Ch] al +
setnz al  +
retn   +
mov esp [ebp-18h] +
call loc_424020  +
test byte ptr [ecx] 10h +
jz loc_42DA65  +
mov eax [eax+18h] +
mov ecx [eax] +
test ecx ecx +
jz loc_42DA65  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+8]  +
call sub_401106  +
retn   +
***
push esi  +
push esi  +
lea eax [ebp+arg_0] +
mov esi ecx +
push eax  +
call sub_42E8DC  +
mov dword ptr [esi] offset off_40E0B0 +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov dword ptr [ecx] offset off_40E0B0 +
jmp sub_42E933  +
***
push esi  +
call sub_401E34  +
mov edi [ebp+0Ch] +
mov esi [ebp+8] +
jmp sub_42DC78  +
***
mov eax [ebp-2Ch] +
call sub_42D588  +
cmp [ebp+arg_18] 0 +
mov eax [ebp+arg_0] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_42DDFB  +
cmp dword ptr [eax+10h] 3 +
jnz loc_42DDFB  +
cmp dword ptr [eax+14h] 19930520h +
jz loc_42DDE3  +
cmp dword ptr [eax+14h] 19930521h +
jz loc_42DDE3  +
cmp dword ptr [eax+14h] 19930522h +
jnz loc_42DDFB  +
cmp dword ptr [eax+1Ch] 0 +
jnz loc_42DDFB  +
call sub_4179D5  +
xor ecx ecx +
inc ecx  +
mov [eax+3ACh] ecx +
mov eax ecx +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 40h +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+18h] +
xor ebx ebx +
mov [ebp-28h] bl +
mov [ebp-1] bl +
cmp dword ptr [edi+4] 80h +
jg loc_42DE25  +
movsx eax byte ptr [eax+8] +
jmp loc_42DE28  +
mov eax [eax+8] +
mov [ebp-8] eax +
cmp eax 0FFFFFFFFh +
jl loc_42DE35  +
cmp eax [edi+4] +
jl loc_42DE3A  +
call loc_423FBB  +
mov esi [ebp+8] +
cmp dword ptr [esi] 0E06D7363h +
jnz loc_42E104  +
cmp dword ptr [esi+10h] 3 +
jnz loc_42DF61  +
cmp dword ptr [esi+14h] 19930520h +
jz loc_42DE72  +
cmp dword ptr [esi+14h] 19930521h +
jz loc_42DE72  +
cmp dword ptr [esi+14h] 19930522h +
jnz loc_42DF61  +
cmp [esi+1Ch] ebx +
jnz loc_42DF61  +
call sub_4179D5  +
cmp [eax+88h] ebx +
jz loc_42E13D  +
call sub_4179D5  +
mov esi [eax+88h] +
call sub_4179D5  +
push 1  +
push esi  +
mov byte ptr [ebp-28h] 1 +
mov eax [eax+8Ch] +
mov [ebp-0Ch] eax +
call sub_42E8CD  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_42DEBC  +
call loc_423FBB  +
cmp dword ptr [esi] 0E06D7363h +
jnz loc_42DEEF  +
cmp dword ptr [esi+10h] 3 +
jnz loc_42DEEF  +
cmp dword ptr [esi+14h] 19930520h +
jz loc_42DEE5  +
cmp dword ptr [esi+14h] 19930521h +
jz loc_42DEE5  +
cmp dword ptr [esi+14h] 19930522h +
jnz loc_42DEEF  +
cmp [esi+1Ch] ebx +
jnz loc_42DEEF  +
call loc_423FBB  +
call sub_4179D5  +
cmp [eax+94h] ebx +
jz loc_42DF69  +
call sub_4179D5  +
mov eax [eax+94h] +
mov [ebp-18h] eax +
call sub_4179D5  +
push dword ptr [ebp-18h]  +
push esi  +
mov [eax+94h] ebx +
call sub_42E2CC  +
pop ecx  +
pop ecx  +
test al al +
jnz loc_42DF69  +
mov edi [ebp-18h] +
cmp [edi] ebx +
jle loc_42E144  +
mov eax ebx +
mov [ebp-18h] ebx +
mov ecx [edi+4] +
push offset off_433B28  +
mov ecx [eax+ecx+4] +
call sub_4174F8  +
test al al +
jnz loc_42E149  +
mov eax [ebp-18h] +
inc ebx  +
add eax 10h +
mov [ebp-18h] eax +
cmp ebx [edi] +
jge loc_42E144  +
jmp loc_42DF34  +
***
mov eax [ebp+10h] +
mov [ebp-0Ch] eax +
jmp loc_42DF6C  +
mov eax [ebp-0Ch] +
cmp dword ptr [esi] 0E06D7363h +
jnz loc_42E107  +
cmp dword ptr [esi+10h] 3 +
jnz loc_42E107  +
cmp dword ptr [esi+14h] 19930520h +
jz loc_42DFA1  +
cmp dword ptr [esi+14h] 19930521h +
jz loc_42DFA1  +
cmp dword ptr [esi+14h] 19930522h +
jnz loc_42E107  +
cmp [edi+0Ch] ebx +
jbe loc_42E09C  +
lea eax [ebp-2Ch] +
push eax  +
lea eax [ebp-14h] +
push eax  +
push dword ptr [ebp-8]  +
push dword ptr [ebp+20h]  +
push edi  +
call sub_42D7FB  +
mov ecx [ebp-14h] +
add esp 14h +
cmp ecx [ebp-2Ch] +
jnb loc_42E09C  +
lea edx [eax+10h] +
mov eax [ebp-8] +
mov [ebp-18h] edx +
lea ebx [edx-10h] +
mov [ebp-30h] ebx +
mov ebx [ebp+0Ch] +
cmp [edx-10h] eax +
jg loc_42E087  +
cmp eax [edx-0Ch] +
jg loc_42E087  +
mov edi [edx] +
mov [ebp-10h] edi +
mov edi [edx-4] +
test edi edi +
mov [ebp-24h] edi +
mov edi [ebp+18h] +
jle loc_42E087  +
mov ecx [ebp-10h] +
mov eax [esi+1Ch] +
mov eax [eax+0Ch] +
lea edx [eax+4] +
mov eax [eax] +
jmp loc_42E03A  +
push dword ptr [esi+1Ch]  +
mov eax [edx] +
push eax  +
push ecx  +
mov [ebp-34h] eax +
call sub_42E866  +
add esp 0Ch +
test eax eax +
jnz loc_42E057  +
mov eax [ebp-1Ch] +
mov edx [ebp-20h] +
dec eax  +
mov ecx [ebp-10h] +
add edx 4 +
mov [ebp-1Ch] eax +
mov [ebp-20h] edx +
test eax eax +
jg loc_42E017  +
mov eax [ebp-24h] +
add ecx 10h +
dec eax  +
mov [ebp-10h] ecx +
mov [ebp-24h] eax +
test eax eax +
jle loc_42E07E  +
jmp loc_42E00A  +
***
push dword ptr [ebp-28h]  +
mov byte ptr [ebp-1] 1 +
push dword ptr [ebp+24h]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp-30h]  +
push dword ptr [ebp-34h]  +
push dword ptr [ebp-10h]  +
push edi  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp-0Ch]  +
push ebx  +
push esi  +
call sub_42DD37  +
add esp 2Ch +
mov edx [ebp-18h] +
mov eax [ebp-8] +
mov ecx [ebp-14h] +
inc ecx  +
add edx 14h +
mov [ebp-14h] ecx +
mov [ebp-18h] edx +
cmp ecx [ebp-2Ch] +
jb loc_42DFD6  +
xor ebx ebx +
cmp byte ptr [ebp+1Ch] 0 +
jz loc_42E0AC  +
push 1  +
push esi  +
call sub_42D9E0  +
pop ecx  +
pop ecx  +
cmp byte ptr [ebp-1] 0 +
jnz loc_42E12B  +
mov eax [edi] +
and eax 1FFFFFFFh +
cmp eax 19930521h +
jb loc_42E12B  +
cmp dword ptr [edi+1Ch] 0 +
jz loc_42E12B  +
push dword ptr [edi+1Ch]  +
push esi  +
call sub_42E2CC  +
pop ecx  +
pop ecx  +
test al al +
jnz loc_42E12B  +
call sub_4179D5  +
call sub_4179D5  +
call sub_4179D5  +
mov [eax+88h] esi +
call sub_4179D5  +
cmp dword ptr [ebp+24h] 0 +
mov ecx [ebp-0Ch] +
push esi  +
mov [eax+8Ch] ecx +
jnz loc_42E16E  +
push dword ptr [ebp+0Ch]  +
jmp loc_42E171  +
mov eax [ebp+10h] +
cmp [edi+0Ch] ebx +
jbe loc_42E12B  +
cmp [ebp+1Ch] bl +
jnz loc_42E144  +
push dword ptr [ebp+24h]  +
push dword ptr [ebp+20h]  +
push dword ptr [ebp-8]  +
push edi  +
push dword ptr [ebp+14h]  +
push eax  +
push dword ptr [ebp+0Ch]  +
push esi  +
call sub_42E1B0  +
add esp 20h +
call sub_4179D5  +
cmp [eax+94h] ebx +
jz loc_42E13D  +
call loc_423FBB  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
call loc_424020  +
push 1  +
push esi  +
call sub_42D9E0  +
pop ecx  +
pop ecx  +
push offset loc_42E190  +
lea ecx [ebp-40h] +
call sub_42DAAB  +
push (offset loc_42E19D+3)  +
lea eax [ebp-40h] +
push eax  +
call sub_42D4E2  +
push dword ptr [ebp+24h]  +
call sub_42D8A8  +
push 0FFFFFFFFh  +
push edi  +
push dword ptr [ebp+14h]  +
push dword ptr [ebp+0Ch]  +
call sub_42E65A  +
add esp 10h +
push dword ptr [edi+1Ch]  +
call sub_42DCF7  +
int 3  +
bound esp [ecx+64h] +
and [ebp+78h] ah +
arpl [ebp+70h] sp +
jz near ptr loc_42E202+2  +
outs   +
outs   +
add [eax+90h] dl +
add al dl +
fiadd  dword ptr [edx+0] +
push ecx  +
sub esp 0Ch +
mov ecx [ebp+arg_4] +
call sub_401E34  +
inc eax  +
retn   +
***
call sub_401E34  +
xor ebx ebx +
mov eax [ebp+10h] +
mov ecx [eax+4] +
test ecx ecx +
jz loc_42E5E6  +
cmp [ecx+8] bl +
jz loc_42E5E6  +
mov edx [eax+8] +
test edx edx +
jnz loc_42E464  +
test dword ptr [eax] 80000000h +
jz loc_42E5E6  +
mov ecx [eax] +
mov edi [ebp+0Ch] +
test ecx ecx +
js loc_42E472  +
add edi 0Ch +
add edi edx +
mov [ebp-4] ebx +
mov esi [ebp+14h] +
test cl cl +
jns loc_42E4CB  +
test byte ptr [esi] 10h +
jz loc_42E4CB  +
mov eax dword_434A1C +
test eax eax +
jz loc_42E4CB  +
call eax  +
mov [ebp-1Ch] eax +
push 1  +
push eax  +
call sub_42E8CD  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_42E5CA  +
push 1  +
push edi  +
call sub_42E8CD  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_42E5CA  +
mov ecx [ebp-1Ch] +
mov [edi] ecx +
lea eax [esi+8] +
push eax  +
push ecx  +
call sub_42E356  +
pop ecx  +
pop ecx  +
mov [edi] eax +
jmp loc_42E5CF  +
push 1  +
mov eax [ebp+8] +
push dword ptr [eax+18h]  +
test cl 8 +
jz loc_42E501  +
call sub_42E8CD  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_42E5CA  +
push 1  +
push edi  +
call sub_42E8CD  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_42E5CA  +
mov eax [ebp+8] +
mov ecx [eax+18h] +
jmp loc_42E4B6  +
test byte ptr [esi] 1 +
jz loc_42E557  +
call sub_42E8CD  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_42E5CA  +
push 1  +
push edi  +
call sub_42E8CD  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_42E5CA  +
push dword ptr [esi+14h]  +
mov eax [ebp+8] +
push dword ptr [eax+18h]  +
push edi  +
call loc_405D02  +
add esp 0Ch +
cmp dword ptr [esi+14h] 4 +
jnz loc_42E5CF  +
cmp dword ptr [edi] 0 +
jz loc_42E5CF  +
lea eax [esi+8] +
push eax  +
push dword ptr [edi]  +
jmp loc_42E4BD  +
cmp [esi+18h] ebx +
jnz loc_42E595  +
call sub_42E8CD  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_42E5CA  +
push 1  +
push edi  +
call sub_42E8CD  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_42E5CA  +
push dword ptr [esi+14h]  +
lea eax [esi+8] +
push eax  +
mov eax [ebp+8] +
push dword ptr [eax+18h]  +
call sub_42E356  +
pop ecx  +
pop ecx  +
push eax  +
push edi  +
call loc_405D02  +
add esp 0Ch +
jmp loc_42E5CF  +
call sub_42E8CD  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_42E5CA  +
push 1  +
push edi  +
call sub_42E8CD  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_42E5CA  +
push dword ptr [esi+18h]  +
call sub_42E8CD  +
pop ecx  +
test eax eax +
jz loc_42E5CA  +
test byte ptr [esi] 4 +
push 0  +
pop ebx  +
setnz bl  +
inc ebx  +
mov [ebp-20h] ebx +
jmp loc_42E5CF  +
call loc_423FBB  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax ebx +
jmp loc_42E5E8  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
call loc_424020  +
xor eax eax +
call sub_401106  +
retn   +
***
mov eax [ebp+arg_0] +
call sub_401E34  +
jmp sub_42E748  +
***
call sub_4179D5  +
push ecx  +
push esi  +
mov eax [ebp+arg_0] +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
and dword ptr [esi+4] 0 +
mov dword ptr [esi] offset off_40E0D0 +
mov byte ptr [esi+8] 0 +
push dword ptr [eax]  +
call sub_42E9A5  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
mov dword ptr [ecx] offset off_40E0D0 +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
mov esi ecx +
cmp esi edi +
jz loc_42E969  +
call sub_42E9E3  +
cmp byte ptr [edi+8] 0 +
jz loc_42E963  +
push dword ptr [edi+4]  +
mov ecx esi +
call sub_42E9A5  +
jmp loc_42E969  +
mov eax [edi+4] +
mov [esi+4] eax +
pop edi  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push esi  +
cmp [ebp+arg_0] 0 +
cmp byte ptr [esi+8] 0 +
jz loc_42E9F5  +
push dword ptr [esi+4]  +
call sub_41740A  +
pop ecx  +
and dword ptr [esi+4] 0 +
mov byte ptr [esi+8] 0 +
pop esi  +
retn   +
***
mov eax [ecx+4] +
test eax eax +
jnz locret_42EA0C  +
mov eax offset aUnknownExcepti +
retn   +
***
lea ecx [ebp-440h] +
jmp sub_401FCB  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-454h] +
xor ecx eax +
call sub_4021E3  +
mov ecx [edx-4] +
xor ecx eax +
call sub_4021E3  +
mov eax offset dword_42EA60 +
jmp loc_42D9A0  +
***
mov ecx [ebp-10h] +
jmp sub_402094  +
***
mov ecx [ebp-10h] +
add ecx 18h +
jmp loc_401F6B  +
***
mov ecx [ebp-10h] +
add ecx 20h +
jmp loc_401F6B  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_4021E3  +
mov eax offset dword_42EAC0 +
jmp loc_42D9A0  +
***
jmp nullsub_1  +
***
mov ecx [ebp-14h] +
add ecx 8 +
jmp sub_401F07  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_4021E3  +
mov eax offset dword_42EB10 +
jmp loc_42D9A0  +
***
mov ecx [ebp-10h] +
jmp sub_402094  +
***
mov ecx [ebp-10h] +
add ecx 18h +
jmp loc_401F6B  +
***
mov ecx [ebp-10h] +
add ecx 20h +
jmp loc_401F6B  +
***
mov ecx [ebp-14h] +
jmp loc_412597  +
***
mov ecx [ebp-14h] +
jmp loc_412597  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-18h] +
xor ecx eax +
call sub_4021E3  +
mov eax offset dword_42EB80 +
jmp loc_42D9A0  +
***
lea ecx [ebp-1Ch] +
jmp sub_401FCB  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-20h] +
xor ecx eax +
call sub_4021E3  +
mov eax offset dword_42EBD0 +
jmp loc_42D9A0  +
***
lea ecx [ebp-24h] +
jmp sub_401FCB  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-28h] +
xor ecx eax +
call sub_4021E3  +
mov eax offset dword_42EC20 +
jmp loc_42D9A0  +
***
mov ecx [ebp-10h] +
jmp loc_412597  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_4021E3  +
mov eax offset dword_42EC70 +
jmp loc_42D9A0  +
***
mov ecx [ebp-10h] +
add ecx 8 +
jmp sub_401F07  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_4021E3  +
mov eax offset dword_42ECC4 +
jmp loc_42D9A0  +
***
mov eax dword_434A04 +
and eax 0FFFFFFFEh +
mov dword_434A04 eax +
retn   +
***
mov eax dword_434A04 +
and eax 0FFFFFFFDh +
mov dword_434A04 eax +
retn   +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-10h] +
xor ecx eax +
call sub_4021E3  +
mov eax offset dword_42ED20 +
jmp loc_42D9A0  +
***
mov edx [esp+8] +
lea eax [edx+0Ch] +
mov ecx [edx-14h] +
xor ecx eax +
call sub_4021E3  +
mov eax offset dword_42ED60 +
jmp loc_42D9A0  +
***
cmp byte_431854 0 +
jz locret_42EDAA  +
push offset dword_431850  +
call sub_411B30  +
mov byte_431854 0 +
retn   +
***
cmp byte_43184C 0 +
jz locret_42EDCC  +
push dword_431848  +
call ds:FreeLibrary  +
mov byte_43184C 0 +
retn   +
***
cmp byte_431844 0 +
jz locret_42EDEA  +
push offset dword_431840  +
call sub_411B30  +
mov byte_431844 0 +
retn   +
***
cmp byte_434A18 0 +
jz locret_42EE0A  +
push offset dword_434A14  +
call sub_411B6D  +
mov byte_434A18 0 +
retn   +
***
mov dword_4349E8 offset off_40210C +
mov byte_434A19 0 +
retn   +
***
mov ecx offset dword_434A08 +
jmp sub_404DBF  +
***
mov ecx offset unk_434978 +
jmp loc_42AA0D  +
***
