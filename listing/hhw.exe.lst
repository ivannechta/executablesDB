mov ecx offset unk_443BC8 +
call HHA_35  +
push offset loc_401016  +
call _atexit  +
pop ecx  +
retn   +
***
mov ecx offset unk_443BC8 +
jmp HHA_38  +
***
mov ecx offset unk_443C78 +
call HHA_35  +
push offset loc_401036  +
call _atexit  +
pop ecx  +
retn   +
***
mov ecx offset unk_443C78 +
jmp HHA_38  +
***
mov ecx offset unk_443E50 +
call HHA_35  +
push offset loc_401056  +
call _atexit  +
pop ecx  +
retn   +
***
mov ecx offset unk_443E50 +
jmp HHA_38  +
***
mov ecx offset unk_443FD8 +
call HHA_35  +
push offset loc_401076  +
call _atexit  +
pop ecx  +
retn   +
***
mov ecx offset unk_443FD8 +
jmp HHA_38  +
***
call _atexit  +
pop ecx  +
retn   +
***
mov esi ecx +
call j_??1CWinApp@@UAE@XZ  +
call _atexit  +
pop ecx  +
retn   +
***
sub esp 28h +
mov eax offset unknown_libname_35 +
pop ecx  +
call j_??1CMultiDocTemplate@@UAE@XZ  +
push edi  +
cmp dword_443C20 0 +
mov eax offset loc_432FD4 +
push [esp+arg_0]  +
sub esp 110h +
sub esp 18h +
mov eax offset loc_433000 +
xor esi esi +
mov eax offset loc_433014 +
push ecx  +
push esi  +
mov esi ecx +
mov edx [esi] +
test edx edx +
jnz loc_402845  +
push [ebp+arg_0]  +
call HHA_23  +
mov [esi] eax +
jmp loc_4028A8  +
push edi  +
mov edi [ebp+arg_0] +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
mov edi edx +
mov eax ecx +
or ecx 0FFFFFFFFh +
mov [ebp+var_4] eax +
xor eax eax +
scas   +
mov eax [ebp+var_4] +
not ecx  +
dec ecx  +
lea eax [eax+ecx+1] +
push eax  +
push dword ptr [esi]  +
call HHA_131  +
mov edi [ebp+arg_0] +
mov edx eax +
or ecx 0FFFFFFFFh +
xor eax eax +
mov [esi] edx +
scas   +
not ecx  +
sub edi ecx +
mov eax ecx +
mov esi edi +
mov [ebp+arg_0] eax +
mov edi edx +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
mov eax [ebp+arg_0] +
dec edi  +
mov ecx eax +
shr ecx 2 +
movs   +
mov ecx eax +
and ecx 3 +
movs   +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov eax ds:?classCMDIFrameWnd@CMDIFrameWnd@@2UCRuntimeClass@@A +
retn   +
***
mov eax offset loc_43306E +
call sub_4029C2  +
mov eax offset loc_4330B8 +
call _EH_prolog  +
push ecx  +
push esi  +
mov esi ecx +
mov [ebp-10h] esi +
mov dword ptr [esi] offset off_437220 +
lea ecx [esi+32Ch] +
mov dword ptr [ebp-4] 4 +
call ??1CToolBar@@UAE@XZ  +
lea ecx [esi+28Ch] +
mov byte ptr [ebp-4] 3 +
call ??1CToolBar@@UAE@XZ  +
lea ecx [esi+1ECh] +
mov byte ptr [ebp-4] 2 +
call ??1CToolBar@@UAE@XZ  +
lea ecx [esi+14Ch] +
mov byte ptr [ebp-4] 1 +
call ??1CToolBar@@UAE@XZ  +
and byte ptr [ebp-4] 0 +
lea ecx [esi+0CCh] +
call ??1CStatusBar@@UAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call ??1CFrameWnd@@UAE@XZ  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
retn 4  +
***
cmp [ebp+arg_0] 111h +
push ebx  +
xor ebx ebx +
cmp [ebp+arg_4] ebx +
push esi  +
push edi  +
mov edi ecx +
jnz loc_402C44  +
cmp [ebp+arg_0] 0F000h +
jnb loc_402C3D  +
push offset HHA_258  +
push 8  +
push 26h  +
lea eax [ebp+arg_0] +
push offset unk_4422D8  +
push eax  +
call HHA_259  +
test eax eax +
jnz loc_402C6D  +
push ebx  +
mov ecx edi +
call ?MDIGetActive@CMDIFrameWnd@@QBEPAVCMDIChildWnd@@PAH@Z  +
cmp eax ebx +
jz loc_402C3D  +
mov ecx eax +
call ?GetActiveView@CFrameWnd@@QBEPAVCView@@XZ  +
mov esi eax +
push offset off_443928  +
mov ecx esi +
call ?IsKindOf@CObject@@QBEHPBUCRuntimeClass@@@Z  +
test eax eax +
jz loc_402C2F  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push ebx  +
jmp loc_402C9F  +
mov eax [esi] +
push ebx  +
push ebx  +
push [ebp+arg_0]  +
push 502h  +
jmp loc_402CB9  +
xor eax eax +
jmp loc_402CD6  +
cmp [ebp+arg_4] 0FFFFFFFFh +
jnz loc_402CC3  +
push offset HHA_258  +
push 8  +
push 17h  +
lea eax [ebp+arg_0] +
push offset unk_442408  +
push eax  +
call HHA_259  +
cmp eax ebx +
jz loc_402C72  +
push [ebp+arg_8]  +
mov ecx edi +
call dword ptr [eax+4]  +
push 1  +
pop eax  +
jmp loc_402CD6  +
push ebx  +
mov ecx edi +
call ?MDIGetActive@CMDIFrameWnd@@QBEPAVCMDIChildWnd@@PAH@Z  +
cmp eax ebx +
jz loc_402C6D  +
mov ecx eax +
call ?GetActiveView@CFrameWnd@@QBEPAVCView@@XZ  +
mov esi eax +
push offset off_443928  +
mov ecx esi +
call ?IsKindOf@CObject@@QBEHPBUCRuntimeClass@@@Z  +
test eax eax +
jz loc_402CAB  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push 0FFFFFFFFh  +
push [ebp+arg_0]  +
mov ecx edi +
call ?OnCmdMsg@CMDIFrameWnd@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z  +
jmp loc_402CD6  +
mov eax [esi] +
push ebx  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
push 501h  +
mov ecx esi +
call dword ptr [eax+0A0h]  +
jmp loc_402CD6  +
push [ebp+arg_C]  +
mov ecx edi +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ?OnCmdMsg@CCmdTarget@@UAEHIHPAXPAUAFX_CMDHANDLERINFO@@@Z  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
cmp dword ptr String2+4 0 +
jnz loc_402CFF  +
push offset aFlash_exe  +
call HHA_324  +
mov dword_443DE4 eax +
mov dword ptr String2+4 1 +
mov eax dword_443DE4 +
test eax eax +
jz locret_402D11  +
push 5  +
push eax  +
call ds:WinExec  +
retn   +
***
push esi  +
mov esi [esp+8] +
mov eax [esi+20h] +
cmp eax 1 +
ja loc_402D54  +
jb loc_402D54  +
cmp dword ptr String2+4 0 +
jnz loc_402D43  +
push offset aFlash_exe  +
call HHA_324  +
mov dword_443DE4 eax +
mov dword ptr String2+4 1 +
cmp dword_443DE4 0 +
jnz loc_402D54  +
mov eax [esi] +
push 0  +
mov ecx esi +
call dword ptr [eax]  +
pop esi  +
retn 4  +
***
mov ecx [esp+4] +
mov edx dword_443E30 +
mov eax [ecx] +
push dword ptr [edx]  +
call dword ptr [eax+0Ch]  +
retn 4  +
***
mov ecx [esp+4] +
mov edx dword_443E34 +
mov eax [ecx] +
push dword ptr [edx]  +
call dword ptr [eax+0Ch]  +
retn 4  +
***
mov ecx [esp+4] +
mov edx dword_443E38 +
mov eax [ecx] +
push dword ptr [edx]  +
call dword ptr [eax+0Ch]  +
retn 4  +
***
mov ecx [esp+4] +
mov edx dword_443E3C +
mov eax [ecx] +
push dword ptr [edx]  +
call dword ptr [eax+0Ch]  +
retn 4  +
***
mov ecx [esp+4] +
mov edx dword_443E40 +
mov eax [ecx] +
push dword ptr [edx]  +
call dword ptr [eax+0Ch]  +
retn 4  +
***
mov ecx [esp+4] +
mov edx dword_443E44 +
mov eax [ecx] +
push dword ptr [edx]  +
call dword ptr [eax+0Ch]  +
retn 4  +
***
mov ecx [esp+4] +
mov edx dword_443E48 +
mov eax [ecx] +
push dword ptr [edx]  +
call dword ptr [eax+0Ch]  +
retn 4  +
***
mov ecx [esp+4] +
mov edx dword_443E4C +
mov eax [ecx] +
push dword ptr [edx]  +
call dword ptr [eax+0Ch]  +
retn 4  +
***
cmp dword ptr [esp+8] 3 +
push esi  +
mov esi [esp+8] +
push edi  +
mov edi ecx +
jnb loc_402E2B  +
push 0  +
push dword ptr [esi+4]  +
call ds:GetMenuItemID  +
cmp eax 0E100h +
jnz loc_402E2B  +
push 7D1Eh  +
mov ecx offset dword_444060 +
push dword ptr [esi+4]  +
call HHA_130  +
push dword ptr [esp+14h]  +
mov ecx edi +
push dword ptr [esp+14h]  +
push esi  +
call ?OnInitMenuPopup@CFrameWnd@@IAEXPAVCMenu@@IH@Z  +
pop edi  +
pop esi  +
retn 0Ch  +
***
mov eax dword_444060 +
mov ecx offset unk_444190 +
push dword ptr [eax]  +
call sub_403BC5  +
test eax eax +
jnz locret_402E60  +
push eax  +
mov ecx offset dword_444060 +
call HHA_276  +
retn   +
***
mov eax dword_444060 +
mov ecx offset unk_444190 +
push dword ptr [eax+4]  +
call sub_403BC5  +
test eax eax +
jnz locret_402E83  +
push 1  +
mov ecx offset dword_444060 +
call HHA_276  +
retn   +
***
mov eax dword_444060 +
mov ecx offset unk_444190 +
push dword ptr [eax+8]  +
call sub_403BC5  +
test eax eax +
jnz locret_402EA6  +
push 2  +
mov ecx offset dword_444060 +
call HHA_276  +
retn   +
***
mov eax dword_444060 +
mov ecx offset unk_444190 +
push dword ptr [eax+0Ch]  +
call sub_403BC5  +
test eax eax +
jnz locret_402EC9  +
push 3  +
mov ecx offset dword_444060 +
call HHA_276  +
retn   +
***
mov eax dword_444060 +
mov ecx offset unk_444190 +
push dword ptr [eax+10h]  +
call sub_403BC5  +
test eax eax +
jnz locret_402EEC  +
push 4  +
mov ecx offset dword_444060 +
call HHA_276  +
retn   +
***
mov eax dword_444060 +
mov ecx offset unk_444190 +
push dword ptr [eax+14h]  +
call sub_403BC5  +
test eax eax +
jnz locret_402F0F  +
push 5  +
mov ecx offset dword_444060 +
call HHA_276  +
retn   +
***
mov eax dword_444060 +
mov ecx offset unk_444190 +
push dword ptr [eax+18h]  +
call sub_403BC5  +
test eax eax +
jnz locret_402F32  +
push 6  +
mov ecx offset dword_444060 +
call HHA_276  +
retn   +
***
mov eax dword_444060 +
mov ecx offset unk_444190 +
push dword ptr [eax+1Ch]  +
call sub_403BC5  +
test eax eax +
jnz locret_402F55  +
push 7  +
mov ecx offset dword_444060 +
call HHA_276  +
retn   +
***
mov eax dword_444060 +
mov ecx offset unk_444190 +
push dword ptr [eax+20h]  +
call sub_403BC5  +
test eax eax +
jnz locret_402F78  +
push 8  +
mov ecx offset dword_444060 +
call HHA_276  +
retn   +
***
push ebx  +
push esi  +
push edi  +
push 0  +
call ?MDIGetActive@CMDIFrameWnd@@QBEPAVCMDIChildWnd@@PAH@Z  +
mov edi eax +
test edi edi +
jz loc_402FDF  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0C0h]  +
mov ebx eax +
mov esi [ebx+24h] +
test esi esi +
jz loc_402FC3  +
cmp byte ptr [esi] 0 +
jz loc_402FC3  +
push 1D712h  +
call HHA_76  +
push eax  +
push esi  +
call ds:_stricmp  +
pop ecx  +
test eax eax +
pop ecx  +
jz loc_402FC3  +
mov eax [ebx] +
push esi  +
mov ecx ebx +
call dword ptr [eax+7Ch]  +
jmp loc_402FDF  +
push 0  +
push 0E104h  +
push 111h  +
mov ecx edi +
call ?GetActiveView@CFrameWnd@@QBEPAVCView@@XZ  +
push dword ptr [eax+20h]  +
call ds:SendMessageA  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
mov eax offset loc_4330D7 +
call _EH_prolog  +
sub esp 15Ch +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
push edi  +
mov [ebp-14h] esi +
mov [ebp-10h] ebx +
cmp [esi+0C8h] ebx +
mov [ebp-4] ebx +
mov edi offset asc_442548 +
jz loc_403038  +
push 1F51h  +
call HHA_76  +
push eax  +
call HHA_23  +
cmp [ebp-10h] ebx +
mov [ebp-14h] eax +
jz loc_403030  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov eax [ebp-14h] +
mov [ebp-10h] eax +
jmp loc_40308D  +
push 1FA0h  +
call HHA_76  +
push eax  +
call HHA_23  +
cmp [ebp-10h] ebx +
mov esi eax +
jz loc_403057  +
push dword ptr [ebp-10h]  +
call HHA_132  +
push edi  +
push esi  +
mov [ebp-10h] esi +
call ds:strstr  +
pop ecx  +
cmp eax ebx +
pop ecx  +
jz loc_40306A  +
mov [eax] bl +
push offset asc_442544  +
lea ecx [ebp-10h] +
call sub_40282C  +
push 1F51h  +
call HHA_76  +
push eax  +
lea ecx [ebp-10h] +
call sub_40282C  +
mov esi [ebp-14h] +
push offset asc_442544  +
lea ecx [ebp-10h] +
call sub_40282C  +
push 1F8Eh  +
call HHA_76  +
push eax  +
lea ecx [ebp-10h] +
call sub_40282C  +
push edi  +
lea ecx [ebp-10h] +
call sub_40282C  +
push dword ptr [esi+20h]  +
lea ecx [ebp-168h] +
call HHA_252  +
push dword ptr [ebp-10h]  +
lea ecx [ebp-168h] +
mov byte ptr [ebp-4] 1 +
call HHA_261  +
lea ecx [ebp-168h] +
mov dword ptr [ebp-134h] 4 +
call HHA_146  +
test eax eax +
jz loc_403151  +
lea eax [ebp-11Ch] +
push offset aIMMsdn  +
push eax  +
call HHA_1  +
test eax eax +
jz loc_40310D  +
or byte ptr dword_444038+2 8 +
jmp loc_403129  +
lea eax [ebp-11Ch] +
push offset aIMNotMsdn  +
push eax  +
call HHA_1  +
test eax eax +
jz loc_403140  +
and byte ptr dword_444038+2 0F7h +
push dword_444038  +
push offset aProfile  +
push offset aSettings  +
call HHA_235  +
jmp loc_403151  +
lea eax [ebp-11Ch] +
mov ecx offset unk_444190 +
push eax  +
call sub_403BC5  +
cmp [ebp-18h] ebx +
mov [ebp-4] bl +
jz loc_403161  +
push dword ptr [ebp-18h]  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-10h] ebx +
jz loc_403172  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
mov eax [ecx+150h] +
test eax eax +
jz locret_403191  +
push eax  +
call HHA_132  +
retn   +
***
mov eax offset loc_433100 +
call _EH_prolog  +
sub esp 18h +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
xor ebx ebx +
cmp [edi+4] ebx +
jz loc_4033E4  +
push 13Bh  +
mov dword ptr [edi+24h] offset unk_437208 +
push dword ptr [edi+10h]  +
call ds:GetDlgItem  +
push 235Ch  +
mov [ebp-14h] eax +
call HHA_76  +
mov esi ds:SendMessageA +
push eax  +
push ebx  +
push 180h  +
push dword ptr [ebp-14h]  +
call esi  +
push 0FFFFFFFFh  +
push eax  +
push 19Ah  +
push dword ptr [ebp-14h]  +
call esi  +
mov eax [edi+40h] +
mov [ebp-18h] ebx +
mov eax [eax+4] +
cmp eax ebx +
jz loc_403394  +
jmp loc_4032B1  +
mov eax [ebp-24h] +
mov ecx [eax] +
mov eax [eax+8] +
mov [ebp-24h] ecx +
lea ecx [ebp-10h] +
mov [ebp-1Ch] eax +
call ??0CString@@QAE@XZ  +
mov ecx [ebp-1Ch] +
lea edx [ebp-10h] +
push 2  +
push edx  +
mov eax [ecx] +
mov [ebp-4] ebx +
call dword ptr [eax+68h]  +
test eax eax +
jz loc_40337F  +
mov eax [ebp-10h] +
cmp [eax-8] ebx +
jz loc_40337F  +
push 1F47h  +
call HHA_76  +
push eax  +
push dword ptr [ebp-10h]  +
call ds:_mbsicmp  +
pop ecx  +
test eax eax +
pop ecx  +
jz loc_40337F  +
push 1FB4h  +
call HHA_76  +
push eax  +
push dword ptr [ebp-10h]  +
call ds:_mbsicmp  +
pop ecx  +
test eax eax +
pop ecx  +
jz loc_40337F  +
push dword ptr [ebp-10h]  +
push ebx  +
push 180h  +
push dword ptr [ebp-14h]  +
call esi  +
cmp eax 0FFFFFFFFh +
mov [ebp-20h] eax +
jz loc_403430  +
push dword ptr [ebp-1Ch]  +
push eax  +
push 19Ah  +
push dword ptr [ebp-14h]  +
call esi  +
push 203Ch  +
call HHA_76  +
push eax  +
push dword ptr [ebp-10h]  +
call ds:_mbsicmp  +
pop ecx  +
test eax eax +
pop ecx  +
jz loc_403379  +
push 203Dh  +
call HHA_76  +
push eax  +
push dword ptr [ebp-10h]  +
call ds:_mbsicmp  +
pop ecx  +
test eax eax +
pop ecx  +
jnz loc_40337F  +
mov eax [ebp-20h] +
mov [ebp-18h] eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
cmp [ebp-24h] ebx +
jnz loc_4032AE  +
push ebx  +
push ebx  +
push 18Bh  +
push dword ptr [ebp-14h]  +
call esi  +
cmp eax ebx +
jnz loc_4033A8  +
push 3  +
jmp loc_4033BE  +
cmp eax 1 +
jnz loc_4033C9  +
push ebx  +
push ebx  +
push 199h  +
push dword ptr [ebp-14h]  +
call esi  +
mov [edi+44h] eax +
push 1  +
push dword ptr [edi+10h]  +
call ds:EndDialog  +
jmp loc_40341E  +
cmp dword_4443F4 ebx +
push ebx  +
jz loc_4033D7  +
push dword ptr [ebp-18h]  +
jmp loc_4033D8  +
push ebx  +
push 186h  +
push dword ptr [ebp-14h]  +
call esi  +
jmp loc_40341E  +
push 13Bh  +
push dword ptr [edi+10h]  +
call ds:GetDlgItem  +
mov esi ds:SendMessageA +
push ebx  +
push ebx  +
push 188h  +
push eax  +
mov [ebp-24h] eax +
call esi  +
cmp eax 0FFFFFFFFh +
jnz loc_40340F  +
mov [edi+44h] ebx +
jmp loc_40341E  +
push ebx  +
push eax  +
push 199h  +
push dword ptr [ebp-24h]  +
call esi  +
mov [edi+44h] eax +
push 1  +
pop eax  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
push 3  +
push dword ptr [edi+10h]  +
call ds:EndDialog  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
xor eax eax +
jmp loc_403421  +
***
push 0  +
push 1  +
push 111h  +
push dword ptr [ecx+10h]  +
call ds:PostMessageA  +
retn   +
***
push 0  +
push 0  +
call sub_401E9C  +
retn   +
***
mov eax dword_444034 +
push esi  +
push edi  +
mov edi ecx +
xor ecx ecx +
cmp eax 1 +
setnle cl  +
xor esi esi +
mov dword_443DD8 ecx +
cmp eax esi +
mov dword_443BB8 esi +
jle loc_4034B5  +
push esi  +
mov ecx edi +
call ?MDIGetActive@CMDIFrameWnd@@QBEPAVCMDIChildWnd@@PAH@Z  +
cmp eax esi +
jz loc_4034B5  +
cmp dword_443BB8 3 +
jz loc_4034B5  +
push esi  +
push esi  +
push 10h  +
push dword ptr [eax+20h]  +
call ds:SendMessageA  +
cmp dword_444034 esi +
jg loc_40348B  +
mov ecx edi +
call sub_403B5F  +
mov dword_443DD8 esi +
pop edi  +
pop esi  +
retn   +
***
push 0  +
push 1  +
push 226h  +
push dword ptr [ecx+0C0h]  +
call ds:SendMessageA  +
retn   +
***
push 0  +
push 0  +
push 226h  +
push dword ptr [ecx+0C0h]  +
call ds:SendMessageA  +
retn   +
***
push 0  +
push 0  +
push 227h  +
push dword ptr [ecx+0C0h]  +
call ds:SendMessageA  +
retn   +
***
push 0  +
push 0  +
push 228h  +
push dword ptr [ecx+0C0h]  +
call ds:SendMessageA  +
retn   +
***
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+0CCh] +
mov ecx edi +
call ?GetStyle@CWnd@@QBEKXZ  +
mov ecx dword_444038 +
not eax  +
shr eax 1Bh +
and ecx 0FFFFFFFDh +
and eax 2 +
or ecx eax +
mov dword_444038 ecx +
shr ecx 1 +
and cl 1 +
neg cl  +
sbb ecx ecx +
and ecx 5 +
push ecx  +
mov ecx edi +
call ?ShowWindow@CWnd@@QAEHH@Z  +
push dword_444038  +
push offset aProfile  +
push offset aSettings  +
call HHA_235  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+0CCh]  +
pop edi  +
pop esi  +
retn   +
***
mov ecx [ecx+20h] +
mov ecx [ecx+20h] +
jmp $+5  +
push esi  +
mov esi ecx +
push 0  +
lea ecx [esi+32Ch] +
call ?ShowWindow@CWnd@@QAEHH@Z  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+0CCh]  +
pop esi  +
retn   +
***
mov eax offset loc_433114 +
call _EH_prolog  +
push ecx  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov eax [esi] +
call dword ptr [eax+0D8h]  +
xor ebx ebx +
mov [ebp-14h] eax +
cmp eax ebx +
jz loc_40374D  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
cmp [ebp+0Ch] ebx +
mov [ebp-4] ebx +
jz loc_4036E1  +
mov ebx [ebp+0Ch] +
mov edi [ebp+8] +
jmp loc_403736  +
mov edi [ebp+8] +
cmp edi ebx +
jz loc_403736  +
cmp edi 0EF06h +
jnz loc_4036FD  +
cmp [esi+0A0h] ebx +
jz loc_4036FD  +
mov edi 0F005h +
cmp edi 0E001h +
jnz loc_403724  +
mov eax [esi+0C8h] +
cmp eax ebx +
jz loc_40371D  +
mov eax [eax+0B0h] +
mov ebx [eax+0F8h] +
jmp loc_403736  +
mov ebx offset String2 +
jmp loc_403736  +
mov eax [esi] +
lea ecx [ebp-10h] +
push ecx  +
push edi  +
mov ecx esi +
call dword ptr [eax+0C8h]  +
mov ebx [ebp-10h] +
mov ecx [ebp-14h] +
push ebx  +
call ?SetWindowTextA@CWnd@@QAEXPBD@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
jmp loc_403750  +
mov edi [ebp+8] +
mov eax [esi+98h] +
lea ecx [esi+98h] +
mov [esi+94h] edi +
mov [ecx] edi +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn 8  +
***
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
lea eax [ebp-4] +
push edi  +
push eax  +
mov esi offset aHtmlhelp_chmHh +
mov edi ecx +
push 5  +
push esi  +
push dword ptr [edi+20h]  +
call sub_431FFE  +
cmp eax 0FFFFFFFFh +
jz loc_4037B1  +
mov eax [ebp-4] +
push 0  +
push 0  +
push esi  +
or dword ptr [eax+0Ch] 2 +
mov eax [ebp-4] +
or byte ptr [eax+11h] 4 +
push dword ptr [edi+20h]  +
call sub_431FFE  +
pop edi  +
pop esi  +
leave   +
retn   +
***
push 0  +
push 0  +
push offset aHtmlref_chm  +
push dword ptr [ecx+20h]  +
call sub_431FFE  +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 0C4h +
mov eax [ebp+8] +
push esi  +
dec eax  +
mov esi ecx +
jz loc_4037E5  +
call ?Default@CWnd@@IAEJXZ  +
xor eax eax +
jmp loc_4038BC  +
mov edx [esi+3CCh] +
push edi  +
push ebx  +
mov ebx [esi+3D0h] +
mov eax [edx+10h] +
dec eax  +
cmp ebx eax +
jle loc_40384C  +
dec dword ptr [esi+3D4h]  +
lea eax [esi+3D4h] +
mov eax [esi+3D4h] +
test eax eax +
jle loc_403820  +
mov dword ptr [esi+3D0h] 1 +
jmp loc_4038B8  +
push 1  +
push dword ptr [esi+20h]  +
call ds:KillTimer  +
mov edi [esi+3CCh] +
test edi edi +
jz loc_403843  +
mov ecx edi +
call HHA_38  +
push edi  +
call ??3@YAXPAX@Z  +
pop ecx  +
and dword ptr [esi+3CCh] 0 +
jmp loc_4038B8  +
push 31h  +
xor eax eax +
pop ecx  +
lea edi [ebp-0C4h] +
stos   +
mov dword ptr [ebp-0C4h] 0C4h +
mov dword ptr [ebp-0BCh] offset aTest +
mov eax [edx+4] +
mov eax [eax+ebx*4] +
mov [ebp-0B0h] eax +
lea eax [ebp-0C4h] +
push eax  +
push 4  +
push 0  +
push hWnd  +
call sub_431FFE  +
mov ecx [esi+3CCh] +
mov eax [esi+3D0h] +
push 0  +
push 0  +
mov ecx [ecx+4] +
push dword ptr [ecx+eax*4+4]  +
push hWnd  +
call sub_431FFE  +
add dword ptr [esi+3D0h] 2 +
pop ebx  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov eax offset loc_43313D +
call _EH_prolog  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
xor edi edi +
mov ecx [esi+0C8h] +
cmp ecx edi +
jz loc_403972  +
call sub_41D563  +
test eax eax +
jz loc_4039EF  +
mov ecx [esi+0C8h] +
cmp ecx edi +
jz loc_403966  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+4]  +
mov [esi+0C8h] edi +
mov [esi+3D8h] edi +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0D8h]  +
mov ebx eax +
cmp ebx edi +
jz loc_40398E  +
push offset unk_436E40  +
mov ecx ebx +
call ?SetWindowTextA@CWnd@@QAEXPBD@Z  +
push 0E0h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
cmp ecx edi +
mov [ebp-4] edi +
jz loc_4039AC  +
call sub_41D18F  +
jmp loc_4039AE  +
xor eax eax +
push dword ptr [ebp+8]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx eax +
mov [esi+0C8h] eax +
call sub_41D437  +
test eax eax +
jnz loc_4039F6  +
mov ecx [esi+0C8h] +
cmp ecx edi +
jz loc_4039D7  +
mov eax [ecx] +
push 1  +
call dword ptr [eax+4]  +
mov eax [esi] +
push 1  +
mov ecx esi +
mov [esi+0C8h] edi +
mov [esi+3D8h] edi +
call dword ptr [eax+0CCh]  +
xor eax eax +
jmp loc_403A86  +
push dword ptr [ebp+8]  +
push offset aLastproject  +
push offset aSettings  +
call HHA_213  +
cmp [esi+3D8h] edi +
jnz loc_403A4D  +
mov ecx [esi+0C8h] +
push 65h  +
push 1400h  +
push 0DCh  +
push esi  +
call ?Create@CDialogBar@@QAEHPAVCWnd@@PBDII@Z  +
mov ecx [esi+0C8h] +
push 5000h  +
call ?EnableDocking@CControlBar@@QAEXK@Z  +
mov ecx [esi+0C8h] +
mov dword ptr [esi+3D8h] 1 +
call sub_41D5EC  +
mov ecx [esi+0C8h] +
push 5  +
call ?ShowWindow@CWnd@@QAEHH@Z  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+0CCh]  +
cmp ebx edi +
jz loc_403A83  +
mov eax [esi+0C8h] +
mov ecx ebx +
mov eax [eax+0B0h] +
push dword ptr [eax+0F8h]  +
call ?SetWindowTextA@CWnd@@QAEXPBD@Z  +
push 1  +
pop eax  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn 4  +
***
push esi  +
mov esi [esp+8] +
push edi  +
add ecx 14Ch +
mov edi [esi] +
call ?GetStyle@CWnd@@QBEKXZ  +
and eax 10000000h +
mov ecx esi +
push eax  +
call dword ptr [edi+4]  +
pop edi  +
pop esi  +
retn 4  +
***
push esi  +
mov esi [esp+8] +
push edi  +
add ecx 0CCh +
mov edi [esi] +
call ?GetStyle@CWnd@@QBEKXZ  +
and eax 10000000h +
mov ecx esi +
push eax  +
call dword ptr [edi+4]  +
pop edi  +
pop esi  +
retn 4  +
***
mov eax ecx +
mov ecx [esp+4] +
push dword ptr [eax+0C8h]  +
mov edx [ecx] +
call dword ptr [edx]  +
retn 4  +
***
jmp sub_41D553  +
***
mov esi ecx +
mov ecx [esi+0C8h] +
mov eax offset loc_433150 +
mov edi [esp+arg_0] +
sub esp 1Ch +
mov eax offset loc_433175 +
mov eax offset loc_4331A4 +
call ??1CDocument@@UAE@XZ_0  +
mov eax offset loc_4331E2 +
mov eax [esp+arg_0] +
mov eax dword_4441B0 +
mov ecx [eax+0C4h] +
test ecx ecx +
jz loc_403FED  +
push [esp+arg_0]  +
call sub_42F2CE  +
jmp locret_403FEF  +
xor eax eax +
retn 4  +
***
cmp hFileMappingObject 0 +
jnz loc_404000  +
call sub_4026B4  +
push dword_443C28  +
mov ecx offset unk_444190 +
call sub_401E81  +
xor eax eax +
retn 8  +
***
call ds:EnableWindow  +
call ds:EnableWindow  +
retn 8  +
***
push [esp+8+arg_0]  +
mov eax offset loc_4331F4 +
test ebp ebp +
mov eax offset loc_433215 +
sub esp 104h +
push edi  +
push ebx  +
xor eax eax +
mov eax offset loc_433230 +
call HHA_281  +
neg eax  +
sbb eax eax +
and al 0FEh +
add eax 7F02h +
push eax  +
push 0  +
call ds:LoadCursorA  +
push eax  +
call ds:SetCursor  +
mov [esi] eax +
mov eax esi +
pop esi  +
retn   +
***
xor ecx ecx +
xor ecx ecx +
mov eax offset unknown_libname_2 +
sub esp 84h +
mov eax offset unknown_libname_3 +
sub esp 44h +
mov eax hModule +
mov [ebp+var_44] 34h +
mov [ebp+var_40] eax +
mov eax [ebp+arg_8] +
mov [ebp+var_3C] eax +
lea eax [ebp+Rect] +
push eax  +
push [ebp+hWnd]  +
call ds:GetWindowRect  +
mov eax [ebp+Rect.right] +
push 200Eh  +
sub eax [ebp+Rect.left] +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+Rect.left] +
mov [ebp+var_34] eax +
mov eax [ebp+Rect.top] +
mov [ebp+var_30] eax +
or eax 0FFFFFFFFh +
mov [ebp+var_2C] eax +
mov [ebp+var_28] eax +
mov [ebp+var_24] eax +
mov [ebp+var_20] eax +
mov [ebp+var_1C] eax +
mov [ebp+var_18] eax +
call HHA_76  +
mov [ebp+var_14] eax +
lea eax [ebp+var_44] +
push eax  +
push 0Eh  +
push 0  +
push [ebp+arg_0]  +
call sub_431FFE  +
leave   +
retn 0Ch  +
***
call j_??1CFrameWnd@@UAE@XZ  +
test [esp+arg_0] 1 +
jz loc_404954  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
retn 4  +
***
mov eax ds:?classCMDIChildWnd@CMDIChildWnd@@2UCRuntimeClass@@A +
retn   +
***
mov eax [esp+arg_0] +
cmp eax 0FFFFFFFFh +
jnz loc_404990  +
mov eax dword_443C38 +
push eax  +
call ??ctivateFrame@CMDIChildWnd@@UAEXH@Z  +
retn 4  +
***
push ebx  +
push esi  +
push edi  +
mov esi ecx +
call ?GetMDIFrame@CMDIChildWnd@@QAEPAVCMDIFrameWnd@@XZ  +
mov edi [ebp+arg_8] +
mov ebx eax +
test edi edi +
jnz loc_404A19  +
cmp [ebp+arg_0] edi +
jz loc_404A19  +
mov eax [esi] +
mov ecx esi +
call dword ptr [eax+0C0h]  +
test eax eax +
jz loc_404A0F  +
mov edx [eax] +
mov ecx eax +
call dword ptr [edx+0A8h]  +
mov edi eax +
test edi edi +
jnz loc_404A19  +
mov edi [esi+0C0h] +
xor eax eax +
cmp edi eax +
jnz loc_404A45  +
mov edi hMenu +
cmp edi eax +
jnz loc_404A3F  +
push 1  +
push hModule  +
call ds:LoadMenuA  +
mov edi eax +
mov hMenu edi +
xor eax eax +
cmp edi eax +
jz loc_404A75  +
cmp [ebp+arg_0] eax +
jz loc_404A59  +
mov eax [ebx] +
push edi  +
mov ecx ebx +
call dword ptr [eax+0FCh]  +
push eax  +
push edi  +
jmp loc_404A6E  +
cmp edi eax +
jz loc_404A75  +
cmp [ebp+arg_0] eax +
jnz loc_404A75  +
cmp [ebp+arg_4] eax +
jnz loc_404A75  +
push eax  +
push hMenu  +
push 230h  +
jmp loc_404A7C  +
push eax  +
push eax  +
push 234h  +
push dword ptr [ebx+0C0h]  +
call ds:SendMessageA  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
call sub_404AEE  +
mov dword ptr [ecx] offset off_437568 +
jmp loc_432630  +
***
mov eax ds:?classCRichEditCntrItem@CRichEditCntrItem@@2UCRuntimeClass@@A +
retn   +
***
retn   +
***
mov eax offset loc_433295 +
call _EH_prolog  +
push ecx  +
push 0F0h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
cmp ecx eax +
mov [ebp-4] eax +
jz loc_404B3E  +
call sub_404B66  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax ds:?classCRichEditDoc@CRichEditDoc@@2UCRuntimeClass@@A +
retn   +
***
mov eax offset loc_4332A8 +
call sub_404BCD  +
test [esp+arg_0] 1 +
jz loc_404BC2  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
retn 4  +
***
mov eax offset loc_4332BC +
push ecx  +
push hWnd  +
mov eax offset loc_4332D1 +
mov eax offset loc_4332E7 +
mov eax offset loc_4332FF +
mov eax offset loc_433314 +
call _EH_prolog  +
push ecx  +
push ecx  +
mov eax [ebp+0Ch] +
push ebx  +
push esi  +
mov esi ecx +
and dword ptr [eax] 0 +
push edi  +
mov eax [esi] +
call dword ptr [eax+58h]  +
mov edi ds:lstrcmpiA +
mov [ebp-14h] eax +
test eax eax +
jz loc_4051D5  +
mov eax [esi] +
lea ecx [ebp-14h] +
push ecx  +
mov ecx esi +
call dword ptr [eax+5Ch]  +
push dword ptr [ebp+8]  +
mov ebx eax +
push dword ptr [ebx+24h]  +
call edi  +
test eax eax +
jz loc_405253  +
cmp dword ptr [ebp-14h] 0 +
jnz loc_4051B2  +
lea ecx [ebp-10h] +
call ??0CString@@QAE@XZ  +
mov eax [esi] +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-10h] +
push 4  +
push ecx  +
mov ecx esi +
call dword ptr [eax+68h]  +
test eax eax +
jz loc_405233  +
mov eax [ebp-10h] +
cmp dword ptr [eax-8] 0 +
jz loc_405233  +
push 2Eh  +
push dword ptr [ebp+8]  +
call HHA_10  +
mov esi eax +
test esi esi +
jz loc_405217  +
push offset a_htm  +
push esi  +
call edi  +
test eax eax +
jz loc_405223  +
push offset a_html  +
push esi  +
call edi  +
test eax eax +
jnz loc_405233  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
push 4  +
jmp loc_405241  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-10h] +
call ??1CString@@QAE@XZ  +
push 2  +
mov ecx [ebp-0Ch] +
pop eax  +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn 8  +
mov eax [ebp+0Ch] +
push 5  +
mov [eax] ebx +
jmp loc_405241  +
***
mov ecx [ecx+40h] +
jmp sub_404CD0  +
***
mov eax offset loc_433329 +
call _EH_prolog  +
push ecx  +
push 188h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
cmp ecx eax +
mov [ebp-4] eax +
jz loc_40528D  +
call sub_4052AF  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax offset loc_43333C +
call sub_4053CC  +
mov eax offset loc_433363 +
call _EH_prolog  +
push ecx  +
push esi  +
mov esi ecx +
mov [ebp-10h] esi +
lea ecx [esi+8Ch] +
mov dword ptr [ebp-4] 1 +
call ??1CDWordArray@@UAE@XZ  +
and byte ptr [ebp-4] 0 +
lea ecx [esi+58h] +
call ??1CDC@@UAE@XZ  +
lea ecx [esi+44h] +
mov dword ptr [ebp-4] 2 +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call ??1CView@@UAE@XZ  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax offset loc_43338C +
sub esp 78h +
cmp [ebp+arg_0] 111h +
retn 4  +
***
mov eax offset loc_4333A3 +
call _EH_prolog  +
sub esp 294h +
push ebx  +
push esi  +
push edi  +
mov [ebp-10h] ecx +
push 0Fh  +
xor eax eax +
pop ecx  +
lea edi [ebp-4Ch] +
stos   +
mov ecx [ebp-10h] +
lea eax [ebp-4Ch] +
push eax  +
mov dword ptr [ebp-4Ch] 3Ch +
call ?GetDefaultCharFormat@CRichEditCtrl@@QBEKAAU_charformat@@@Z  +
push 0Fh  +
mov ebx ds:MulDiv +
pop ecx  +
xor eax eax +
push 5A0h  +
push 64h  +
push dword ptr [ebp-40h]  +
lea edi [ebp-88h] +
stos   +
call ebx  +
neg eax  +
mov [ebp-88h] eax +
lea edi [ebp-32h] +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
lea edx [ebp-6Ch] +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
and ecx 3 +
test byte ptr [ebp-44h] 1 +
movs   +
jz loc_405699  +
mov dword ptr [ebp-78h] 2BCh +
test byte ptr [ebp-44h] 2 +
jz loc_4056A3  +
mov byte ptr [ebp-74h] 1 +
xor esi esi +
lea eax [ebp-88h] +
push esi  +
push esi  +
push 41h  +
push eax  +
lea ecx [ebp-1A0h] +
call ??0CFontDialog@@QAE@PAUtagLOGFONTA@@KPAVCDC@@PAVCWnd@@@Z  +
lea ecx [ebp-1A0h] +
mov [ebp-4] esi +
call ?DoModal@CFontDialog@@UAEHXZ  +
push 1  +
pop ecx  +
cmp eax ecx +
jnz loc_4057F2  +
mov eax [ebp-10h] +
mov dword ptr [ebp-44h] 40000000h +
mov [eax+184h] ecx +
mov eax [ebp-88h] +
cdq   +
xor eax edx +
sub eax edx +
lea ecx [eax-8] +
cmp ecx 0Bh +
ja loc_405746  +
jmp ds:off_405810[ecx*4]  +
mov dword ptr [ebp-40h] 78h +
jmp loc_405753  +
mov dword ptr [ebp-40h] 8Ch +
jmp loc_405753  +
mov dword ptr [ebp-40h] 0A0h +
jmp loc_405753  +
mov dword ptr [ebp-40h] 0B4h +
jmp loc_405753  +
mov dword ptr [ebp-40h] 0C8h +
jmp loc_405753  +
mov dword ptr [ebp-40h] 0DCh +
jmp loc_405753  +
mov dword ptr [ebp-40h] 0F0h +
jmp loc_405753  +
mov dword ptr [ebp-40h] 118h +
jmp loc_405753  +
push 64h  +
push 5A0h  +
push eax  +
call ebx  +
mov [ebp-40h] eax +
lea edi [ebp-6Ch] +
or ecx 0FFFFFFFFh +
xor eax eax +
lea edx [ebp-32h] +
scas   +
not ecx  +
sub edi ecx +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
and ecx 3 +
movs   +
and dword ptr [ebp-44h] 0FFFFFFFCh +
cmp dword ptr [ebp-78h] 2BCh +
jl loc_405787  +
or dword ptr [ebp-44h] 1 +
cmp byte ptr [ebp-74h] 0 +
jz loc_405791  +
or dword ptr [ebp-44h] 2 +
mov al [ebp-71h] +
mov ecx [ebp-10h] +
mov [ebp-34h] al +
lea eax [ebp-4Ch] +
push eax  +
mov dword ptr [ebp-48h] 0A8000001h +
call ?SetDefaultCharFormat@CRichEditCtrl@@QAEHAAU_charformat@@@Z  +
mov ecx [ebp-10h] +
lea eax [ebp-4Ch] +
push eax  +
mov dword ptr [ebp-4Ch] 3Ch +
call ?GetDefaultCharFormat@CRichEditCtrl@@QBEKAAU_charformat@@@Z  +
lea eax [ebp-32h] +
push eax  +
lea eax [ebp-2A0h] +
push dword ptr [ebp-44h]  +
push dword ptr [ebp-40h]  +
push offset aUUS  +
push eax  +
call ds:wsprintfA  +
add esp 14h +
lea eax [ebp-2A0h] +
push eax  +
push offset aHtmlfont  +
push offset aSettings  +
call HHA_213  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1A0h] +
call ??1CDialog@@UAE@XZ  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
jmp ??1CDialog@@UAE@XZ  +
***
mov ecx [esp+4] +
mov edx dword_443E2C +
mov eax [ecx] +
push dword ptr [edx]  +
call dword ptr [eax+0Ch]  +
retn 4  +
***
mov eax offset loc_4333D0 +
call _EH_prolog  +
sub esp 70h +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
push edi  +
mov [ebp-14h] esi +
mov [ebp-10h] ebx +
lea eax [ebp-1Ch] +
mov [ebp-4] ebx +
push eax  +
lea eax [ebp-10h] +
push eax  +
call sub_4059CC  +
test eax eax +
jz loc_40594E  +
push 1  +
lea ecx [ebp-7Ch] +
push dword ptr [ebp-10h]  +
call sub_427F71  +
cmp dword ptr [ebp-20h] 4 +
mov byte ptr [ebp-4] 1 +
jnz loc_4058EB  +
lea eax [ebp-7Ch] +
push offset aNewHtmlFile  +
push eax  +
call HHA_57  +
test eax eax +
mov ecx esi +
jz loc_4058BD  +
call sub_40807C  +
jmp loc_4058C2  +
call sub_40619E  +
cmp [ebp-24h] ebx +
mov byte ptr [ebp-4] 2 +
jz loc_4058D3  +
push dword ptr [ebp-24h]  +
call HHA_132  +
and byte ptr [ebp-4] 0 +
lea ecx [ebp-7Ch] +
call HHA_38  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-10h] ebx +
jmp loc_40597D  +
mov edi [ebp-10h] +
cmp edi ebx +
jz loc_405900  +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
xor ebx ebx +
jmp loc_405902  +
xor ecx ecx +
inc ecx  +
push ecx  +
push ebx  +
call ds:LocalAlloc  +
mov edi [ebp-10h] +
mov ebx eax +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov eax ecx +
mov esi edi +
mov edi ebx +
shr ecx 2 +
movs   +
mov ecx eax +
and ecx 3 +
movs   +
cmp dword ptr [ebp-24h] 0 +
mov byte ptr [ebp-4] 3 +
jz loc_40593F  +
push dword ptr [ebp-24h]  +
call HHA_132  +
and byte ptr [ebp-4] 0 +
lea ecx [ebp-7Ch] +
call HHA_38  +
mov esi [ebp-14h] +
push dword ptr [esi+20h]  +
push ebx  +
call EditHhCtrlObject  +
mov edi eax +
test edi edi +
jz loc_405975  +
push edi  +
push 0  +
push 0C2h  +
push dword ptr [esi+20h]  +
call ds:SendMessageA  +
push edi  +
call ds:LocalFree  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-10h] 0 +
jz loc_405987  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
sub esp 0Ch +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi ds:SendMessageA +
push edi  +
xor eax eax +
push 0FFFFFFFFh  +
mov edi ecx +
push eax  +
push 436h  +
mov [ebx+4] eax +
mov [ebx] eax +
push dword ptr [edi+20h]  +
mov [ebp+var_C] edi +
call esi  +
push 0  +
push 0  +
push 0BAh  +
mov [ebp+var_4] eax +
push dword ptr [edi+20h]  +
call esi  +
push [ebp+var_4]  +
mov esi [ebp+arg_0] +
mov ecx edi +
mov [ebp+var_8] eax +
push esi  +
call sub_4079BA  +
push offset aObject  +
push dword ptr [esi]  +
call HHA_1  +
test eax eax +
mov [ebp+arg_4] eax +
jnz loc_405A87  +
cmp [ebp+var_4] eax +
jle loc_405A87  +
push offset aParam  +
push dword ptr [esi]  +
call HHA_1  +
test eax eax +
jnz loc_405A61  +
push offset aObject_0  +
push dword ptr [esi]  +
call HHA_1  +
test eax eax +
jnz loc_405A61  +
push offset aClassid  +
push dword ptr [esi]  +
call HHA_1  +
test eax eax +
jz loc_405A87  +
dec [ebp+var_4]  +
mov ecx edi +
push [ebp+var_4]  +
push esi  +
call sub_4079BA  +
push offset aObject  +
push dword ptr [esi]  +
call HHA_1  +
test eax eax +
mov [ebp+arg_4] eax +
jnz loc_405A87  +
cmp [ebp+var_4] eax +
jg loc_405A61  +
cmp [ebp+arg_4] 0 +
jz loc_405B63  +
mov eax [esi] +
cmp [ebp+arg_4] eax +
jbe loc_405AC6  +
dec [ebp+arg_4]  +
cmp [ebp+arg_4] eax +
jb loc_405ABC  +
mov eax [ebp+arg_4] +
movsx eax byte ptr [eax] +
push eax  +
call ds:isspace  +
test eax eax +
pop ecx  +
jz loc_405ABC  +
dec [ebp+arg_4]  +
mov eax [ebp+arg_4] +
cmp eax [esi] +
jnb loc_405AA0  +
mov eax [ebp+arg_4] +
cmp eax [esi] +
jnb loc_405AC6  +
inc [ebp+arg_4]  +
push [ebp+var_4]  +
mov ecx edi +
call ?LineIndex@CRichEditCtrl@@QBEHH@Z  +
mov [ebx] eax +
mov ecx [esi] +
sub ecx [ebp+arg_4] +
push offset aObject_1  +
add ecx eax +
mov [ebx] ecx +
push dword ptr [esi]  +
call HHA_1  +
test eax eax +
mov [ebp+arg_0] eax +
jnz loc_405B11  +
mov eax [ebp+var_4] +
cmp eax [ebp+var_8] +
jg loc_405B11  +
inc [ebp+var_4]  +
mov ecx edi +
push [ebp+var_4]  +
push esi  +
call sub_4079BA  +
mov eax [esi] +
push offset aObject_1  +
mov [ebp+arg_4] eax +
push eax  +
jmp loc_405AE2  +
push [ebp+var_4]  +
mov ecx edi +
call ?LineIndex@CRichEditCtrl@@QBEHH@Z  +
cmp [ebp+arg_0] 0 +
mov edx eax +
mov [ebx+4] edx +
jz loc_405B45  +
mov edi offset aObject_1 +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
mov eax [ebp+arg_0] +
mov edi [ebp+var_C] +
not ecx  +
dec ecx  +
add eax ecx +
sub eax [ebp+arg_4] +
add eax edx +
mov [ebx+4] eax +
push ebx  +
push 0  +
push 437h  +
push dword ptr [edi+20h]  +
call ds:SendMessageA  +
push esi  +
mov ecx edi +
call sub_4077DD  +
push 1  +
pop eax  +
jmp loc_405B65  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov eax offset loc_433400 +
call _EH_prolog  +
sub esp 0CCh +
push ebx  +
mov ebx ecx +
push esi  +
push edi  +
mov esi [ebx+40h] +
mov ecx esi +
mov eax [esi] +
call dword ptr [eax+5Ch]  +
test eax eax +
jz loc_405BCE  +
mov edi [esi+24h] +
test edi edi +
jz loc_405BBF  +
cmp byte ptr [edi] 0 +
jz loc_405BBF  +
push 1D712h  +
call HHA_76  +
push eax  +
push edi  +
call ds:_stricmp  +
pop ecx  +
test eax eax +
pop ecx  +
jz loc_405BBF  +
mov eax [esi] +
push dword ptr [esi+24h]  +
mov ecx esi +
call dword ptr [eax+7Ch]  +
jmp loc_405BCE  +
mov ecx esi +
call sub_404CD0  +
test eax eax +
jz loc_405C80  +
push 31h  +
xor eax eax +
pop ecx  +
lea edi [ebp-0D8h] +
stos   +
mov dword ptr [ebp-0D8h] 0C4h +
push dword ptr [esi+24h]  +
call HHA_23  +
mov edi eax +
mov [ebp-14h] edi +
or dword ptr [ebp-0C8h] 20h +
or word ptr [ebp-0CCh] 102h +
mov [ebp-0C4h] edi +
mov dword ptr [ebp-0D0h] offset aGlobal_viewHtm +
mov dword ptr [ebp-68h] 304Ch +
mov eax [esi+24h] +
mov [ebp-6Ch] eax +
and dword ptr [ebp-4] 0 +
lea eax [ebp-0D8h] +
push eax  +
push 4  +
push 0  +
push dword ptr [ebx+20h]  +
call sub_431FFE  +
push dword ptr [esi+24h]  +
call HHA_23  +
mov [ebp-10h] eax +
push offset aGlobal_viewH_0  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 1 +
call sub_40282C  +
xor esi esi +
push esi  +
push esi  +
push dword ptr [ebp-10h]  +
push dword ptr [ebx+20h]  +
call sub_431FFE  +
and byte ptr [ebp-4] 0 +
cmp [ebp-10h] esi +
jz loc_405C72  +
push dword ptr [ebp-10h]  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp edi esi +
jz loc_405C80  +
push edi  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
mov eax offset loc_433414 +
call _EH_prolog  +
push ecx  +
push esi  +
mov esi ecx +
push 1D849h  +
lea ecx [ebp-10h] +
call HHA_14  +
and dword ptr [ebp-4] 0 +
push 1F79h  +
call HHA_76  +
push eax  +
lea ecx [ebp-10h] +
call sub_40282C  +
push dword ptr [ebp-10h]  +
push 0  +
push 0C2h  +
push dword ptr [esi+20h]  +
call ds:SendMessageA  +
mov ecx esi +
call sub_40710A  +
push offset aBody  +
mov ecx esi +
call sub_407535  +
test eax eax +
jle loc_405CF7  +
add eax 8 +
mov ecx esi +
push eax  +
push eax  +
call ?SetSel@CRichEditCtrl@@QAEXJJ@Z  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-10h] 0 +
jz loc_405D09  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
xor eax eax +
mov large fs:0 ecx +
pop esi  +
leave   +
retn 8  +
***
mov eax offset __ehhandler$?ExecCommand@?$CHtmlEditCtrlBase@VCHtmlEditView@@@@QBEJPBU_GUID@@JJPAUtagVARIANT@@1@Z +
call _EH_prolog  +
sub esp 3Ch +
push ebx  +
push esi  +
lea eax [ebp-34h] +
push edi  +
mov edi ds:SendMessageA +
xor ebx ebx +
push eax  +
mov esi ecx +
push ebx  +
push 434h  +
push dword ptr [esi+20h]  +
call edi  +
push 0FFFFFFFFh  +
push ebx  +
push 436h  +
push dword ptr [esi+20h]  +
call edi  +
push ebx  +
push ebx  +
push 0BAh  +
mov [ebp-20h] eax +
push dword ptr [esi+20h]  +
call edi  +
mov [ebp-14h] ebx +
mov [ebp-4] ebx +
mov [ebp-10h] ebx +
mov [ebp-28h] ebx +
push dword ptr [ebp-20h]  +
lea eax [ebp-14h] +
mov ecx esi +
mov byte ptr [ebp-4] 2 +
push eax  +
call sub_4079BA  +
mov eax [ebp-34h] +
cmp eax [ebp-30h] +
jz loc_405E36  +
push dword ptr [ebp-30h]  +
mov ecx esi +
push eax  +
call sub_407561  +
mov [ebp-1Ch] eax +
mov [ebp-18h] ebx +
lea eax [ebp-34h] +
mov ecx esi +
push eax  +
lea eax [ebp-18h] +
push eax  +
mov byte ptr [ebp-4] 4 +
call sub_4059CC  +
test eax eax +
jz loc_405DD4  +
push offset aId  +
push dword ptr [ebp-18h]  +
call HHA_1  +
cmp eax ebx +
jz loc_405DD4  +
add eax 3 +
push eax  +
call HHA_3  +
push eax  +
lea ecx [ebp-10h] +
call HHA_52  +
push dword ptr [esi+20h]  +
mov eax [ebp-1Ch] +
push dword ptr [eax]  +
push ebx  +
push dword ptr [ebp-10h]  +
push ebx  +
call EditHhCtrlScript  +
mov [ebp-20h] eax +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_405E05  +
mov eax [eax] +
cmp eax ebx +
jz loc_405DFC  +
push eax  +
call HHA_132  +
push dword ptr [ebp-1Ch]  +
call ??3@YAXPAX@Z  +
pop ecx  +
cmp [ebp-20h] ebx +
jz loc_405E21  +
push dword ptr [ebp-20h]  +
push ebx  +
push 0C2h  +
push dword ptr [esi+20h]  +
call edi  +
push dword ptr [ebp-20h]  +
call ds:LocalFree  +
cmp [ebp-18h] ebx +
mov byte ptr [ebp-4] 2 +
jz loc_406049  +
push dword ptr [ebp-18h]  +
jmp loc_406044  +
push offset aAHref_0  +
push dword ptr [ebp-14h]  +
call HHA_1  +
cmp eax ebx +
jnz loc_405E7F  +
push offset aJavascript  +
push dword ptr [ebp-14h]  +
call HHA_1  +
cmp eax ebx +
jz loc_405E7F  +
mov eax [ebp-20h] +
mov ecx esi +
dec eax  +
mov [ebp-24h] eax +
push eax  +
lea eax [ebp-14h] +
push eax  +
call sub_4079BA  +
push offset aAHref_0  +
push dword ptr [ebp-14h]  +
call HHA_1  +
mov ecx [ebp-24h] +
cmp eax ebx +
jnz loc_405E82  +
mov ecx [ebp-20h] +
cmp eax ebx +
jz loc_405FD1  +
push ecx  +
mov ecx esi +
call ?LineIndex@CRichEditCtrl@@QBEHH@Z  +
mov [ebp-48h] eax +
or dword ptr [ebp-44h] 0FFFFFFFFh +
lea eax [ebp-48h] +
mov dword ptr [ebp-40h] offset aAHref_0 +
push eax  +
push ebx  +
push 44Fh  +
push dword ptr [esi+20h]  +
call edi  +
mov [ebp-34h] eax +
mov [ebp-48h] eax +
or dword ptr [ebp-44h] 0FFFFFFFFh +
lea eax [ebp-48h] +
push eax  +
push ebx  +
push 44Fh  +
mov dword ptr [ebp-40h] offset asc_44283C +
push dword ptr [esi+20h]  +
call edi  +
cmp eax ebx +
mov [ebp-30h] eax +
jge loc_405EE6  +
push ebx  +
push 1F77h  +
call HHA_166  +
jmp loc_406049  +
push eax  +
mov ecx esi +
push dword ptr [ebp-34h]  +
call sub_407561  +
push offset aJavascript  +
push dword ptr [ebp-14h]  +
call HHA_1  +
cmp eax ebx +
jz loc_405F0A  +
push ebx  +
push 2016h  +
jmp loc_405F5B  +
push 2Eh  +
push 0Ch  +
call HHA_8  +
mov edi eax +
cmp edi ebx +
jnz loc_405F21  +
push ebx  +
push 2017h  +
jmp loc_405F5B  +
push 0Ch  +
mov [edi] bl +
call HHA_23  +
cmp [ebp-10h] ebx +
mov [ebp-24h] eax +
jz loc_405F3A  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov eax [ebp-24h] +
inc edi  +
push 28h  +
push edi  +
mov [ebp-10h] eax +
mov [ebp-24h] edi +
call HHA_8  +
mov edi eax +
cmp edi ebx +
mov [ebp-2Ch] edi +
jnz loc_405F65  +
push ebx  +
push 2018h  +
call HHA_166  +
jmp loc_406049  +
push dword ptr [ebp-24h]  +
mov [edi] bl +
call HHA_23  +
mov edx eax +
or ecx 0FFFFFFFFh +
xor eax eax +
mov byte ptr [edi] 28h +
scas   +
mov eax [ebp-2Ch] +
mov [ebp-20h] edx +
not ecx  +
dec ecx  +
mov [ebp-28h] edx +
mov [ecx+eax-2] bl +
push dword ptr [esi+20h]  +
push ebx  +
push eax  +
push dword ptr [ebp-10h]  +
push edx  +
call EditHhCtrlScript  +
mov edi eax +
cmp edi ebx +
jz loc_405FC3  +
push dword ptr [ebp-30h]  +
mov ecx esi +
push dword ptr [ebp-34h]  +
call ?SetSel@CRichEditCtrl@@QAEXJJ@Z  +
push edi  +
push ebx  +
push 0C2h  +
push dword ptr [esi+20h]  +
call ds:SendMessageA  +
push edi  +
call ds:LocalFree  +
cmp [ebp-20h] ebx +
mov byte ptr [ebp-4] 1 +
jz loc_406049  +
push dword ptr [ebp-20h]  +
jmp loc_406044  +
mov [ebp-1Ch] ebx +
lea eax [ebp-34h] +
mov ecx esi +
push eax  +
lea eax [ebp-1Ch] +
push eax  +
mov byte ptr [ebp-4] 3 +
call sub_4059CC  +
test eax eax +
jz loc_40600E  +
push offset aId  +
push dword ptr [ebp-1Ch]  +
call HHA_1  +
cmp eax ebx +
jz loc_40600E  +
add eax 3 +
push eax  +
call HHA_3  +
push eax  +
lea ecx [ebp-10h] +
call HHA_52  +
push dword ptr [esi+20h]  +
push ebx  +
push ebx  +
push dword ptr [ebp-10h]  +
push ebx  +
call EditHhCtrlScript  +
cmp eax ebx +
mov [ebp-2Ch] eax +
jz loc_406038  +
push eax  +
push ebx  +
push 0C2h  +
push dword ptr [esi+20h]  +
call edi  +
push dword ptr [ebp-2Ch]  +
call ds:LocalFree  +
cmp [ebp-1Ch] ebx +
mov byte ptr [ebp-4] 2 +
jz loc_406049  +
push dword ptr [ebp-1Ch]  +
call HHA_132  +
cmp [ebp-10h] ebx +
mov [ebp-4] bl +
jz loc_406059  +
push dword ptr [ebp-10h]  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-14h] ebx +
jz loc_40606A  +
push dword ptr [ebp-14h]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
dec eax  +
jmp loc_4060E3  +
***
movsx eax byte ptr [edi+1] +
inc edi  +
jmp loc_406119  +
***
mov eax offset loc_4334D2 +
mov eax offset loc_4334E4 +
cmp [esp+arg_0] 439h +
mov eax offset loc_4334F8 +
mov eax offset loc_433533 +
push esi  +
mov eax offset loc_433560 +
lea eax [ecx+40h] +
push eax  +
push 4A5h  +
call HHA_248  +
push 1  +
pop eax  +
retn   +
***
mov eax offset loc_433574 +
call _EH_prolog  +
push esi  +
mov esi ecx +
mov eax [esi+40h] +
and dword ptr [ebp-4] 0 +
test eax eax +
jz loc_406CCF  +
push eax  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call HHA_297  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
push esi  +
mov eax offset loc_4335B4 +
push [esp+arg_0]  +
push 122h  +
call HHA_301  +
and dword ptr [esi+40h] 0 +
mov dword ptr [esi] offset off_437A10 +
mov eax esi +
pop esi  +
retn 4  +
***
mov eax offset loc_4335C8 +
call _EH_prolog  +
push esi  +
mov esi ecx +
mov eax [esi+40h] +
and dword ptr [ebp-4] 0 +
test eax eax +
jz loc_407032  +
push eax  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call HHA_297  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
push edi  +
push esi  +
mov eax offset loc_4335F8 +
lea eax [ecx+40h] +
mov eax offset loc_43360C +
mov eax [esi] +
test eax eax +
jz loc_407424  +
push eax  +
call HHA_132  +
test byte ptr [esp+8] 1 +
jz loc_407432  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
retn 4  +
***
lea eax [ecx+40h] +
push eax  +
push 0E5h  +
call HHA_260  +
push 1  +
pop eax  +
retn   +
***
sub esp 14h +
mov eax offset unknown_libname_4 +
call _EH_prolog  +
sub esp 0Ch +
mov eax [ebp+8] +
push esi  +
mov [ebp-18h] eax +
mov eax [ebp+0Ch] +
push edi  +
mov edi ecx +
push 8  +
mov [ebp-14h] eax +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp+8] ecx +
and dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_4075A4  +
mov eax [ebp-14h] +
sub eax [ebp-18h] +
inc eax  +
push eax  +
call HHA_27  +
mov esi eax +
jmp loc_4075A6  +
xor esi esi +
mov eax [esi+4] +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [ebp-10h] eax +
lea eax [ebp-18h] +
push eax  +
push 0  +
push 44Bh  +
push dword ptr [edi+20h]  +
call ds:SendMessageA  +
mov ecx [ebp-0Ch] +
mov eax esi +
pop edi  +
mov large fs:0 ecx +
pop esi  +
leave   +
retn 8  +
***
push ecx  +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
mov esi ds:SendMessageA +
lea ecx [ebp+lParam] +
xor eax eax +
push ecx  +
push eax  +
push 434h  +
push dword ptr [edi+20h]  +
mov [ebp+var_4] eax +
mov [ebp+lParam] eax +
call esi  +
mov ebx [ebp+arg_0] +
mov eax [ebx] +
test eax eax +
jz loc_407813  +
push eax  +
call HHA_132  +
mov eax [ebp+var_4] +
sub eax [ebp+lParam] +
test eax eax +
jg loc_40782D  +
push offset String2  +
call HHA_23  +
mov [ebx] eax +
xor eax eax +
jmp loc_40785C  +
call HHA_9  +
xor ecx ecx +
test eax eax +
mov eax [ebp+var_4] +
setnz cl  +
sub eax [ebp+lParam] +
inc ecx  +
inc eax  +
imul ecx eax +
push ecx  +
call HHA_133  +
push eax  +
push 0  +
push 43Eh  +
mov [ebx] eax +
push dword ptr [edi+20h]  +
call esi  +
push 1  +
pop eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov eax dword_444038 +
shr eax 0Dh +
test al 1 +
jz loc_40787B  +
push offset aStrong  +
push offset aStrong_0  +
jmp loc_407885  +
push offset aB  +
push offset aB_0  +
call sub_4078F3  +
retn   +
***
mov eax dword_444038 +
shr eax 0Fh +
test al 1 +
jz loc_4078A3  +
push offset aEm  +
push offset aEm_0  +
jmp loc_4078AD  +
push offset aI  +
push offset aI_0  +
call sub_4078F3  +
retn   +
***
push offset aStrong  +
push offset aStrong_0  +
call sub_4078F3  +
retn   +
***
push offset aEm  +
push offset aEm_0  +
call sub_4078F3  +
retn   +
***
push offset aStrike  +
push offset aStrike_0  +
call sub_4078F3  +
retn   +
***
mov eax offset loc_433688 +
cmp [ebp+arg_4] 0FFFFFFFFh +
push [esp+hWnd]  +
push [esp+8+Msg]  +
push dword ptr [ecx+20h]  +
call ds:SendMessageA  +
retn 0Ch  +
***
mov eax offset loc_4336AC +
call _EH_prolog  +
sub esp 5Ch +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov edi ecx +
mov [ebp-10h] ebx +
lea eax [ebp-10h] +
mov [ebp-4] ebx +
push eax  +
call sub_4077DD  +
push dword ptr [ebp-10h]  +
lea ecx [ebp-68h] +
call sub_407BBE  +
lea ecx [ebp-68h] +
mov byte ptr [ebp-4] 1 +
call HHA_238  +
test eax eax +
jz loc_407B4C  +
push offset asc_442938  +
call HHA_23  +
cmp [ebp-10h] ebx +
mov esi eax +
jz loc_407AC1  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov ecx [ebp-24h] +
lea edx [ebp-1Ch] +
mov [ebp-10h] esi +
call HHA_195  +
lea eax [ebp-1Ch] +
lea ecx [ebp-10h] +
push eax  +
call sub_40282C  +
cmp [ebp-20h] ebx +
jz loc_407AFA  +
cmp dword ptr [ebp-20h] 1 +
jnz loc_407AED  +
push offset aAlignCenter  +
jmp loc_407AF2  +
push offset aAlignRight  +
lea ecx [ebp-10h] +
call sub_40282C  +
mov esi offset asc_44283C +
lea ecx [ebp-10h] +
push esi  +
call sub_40282C  +
cmp [ebp-28h] ebx +
jz loc_407B18  +
push dword ptr [ebp-28h]  +
lea ecx [ebp-10h] +
call sub_40282C  +
push offset asc_442914  +
lea ecx [ebp-10h] +
call sub_40282C  +
lea eax [ebp-1Ch] +
lea ecx [ebp-10h] +
push eax  +
call sub_40282C  +
push esi  +
lea ecx [ebp-10h] +
call sub_40282C  +
push dword ptr [ebp-10h]  +
push ebx  +
push 0C2h  +
push dword ptr [edi+20h]  +
call ds:SendMessageA  +
cmp [ebp-28h] ebx +
mov byte ptr [ebp-4] 2 +
jz loc_407B5D  +
push dword ptr [ebp-28h]  +
call HHA_132  +
lea ecx [ebp-68h] +
mov [ebp-4] bl +
call HHA_297  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-10h] ebx +
jz loc_407B79  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
mov eax offset loc_4336DF +
push esi  +
xor ebp ebp +
push edi  +
push ebp  +
push 6  +
mov esi ecx +
push 1  +
mov edi 3F5h +
pop ebx  +
lea eax [esi+44h] +
push ebx  +
push eax  +
push edi  +
call HHA_240  +
lea eax [esi+40h] +
mov ecx esi +
push eax  +
push 0E5h  +
call HHA_260  +
cmp [esi+4] ebp +
jz loc_407DB3  +
push 6  +
push ebx  +
push edi  +
push 41Dh  +
mov ecx esi +
call sub_4070BE  +
mov eax [esi+48h] +
dec eax  +
jz loc_407D9C  +
push ebp  +
dec eax  +
push ebx  +
push 0F1h  +
jz loc_407D95  +
push 41Eh  +
jmp loc_407DA8  +
push 420h  +
jmp loc_407DA8  +
push ebp  +
push ebx  +
push 0F1h  +
push 41Fh  +
push dword ptr [esi+10h]  +
call ds:SendDlgItemMessageA  +
jmp loc_407DF5  +
mov edi ds:SendDlgItemMessageA +
push ebp  +
mov ebx 0F0h +
push ebp  +
push ebx  +
push 41Eh  +
push dword ptr [esi+10h]  +
call edi  +
cmp eax ebp +
jz loc_407DD4  +
mov [esi+48h] ebp +
jmp loc_407DF5  +
push ebp  +
push ebp  +
push ebx  +
push 420h  +
push dword ptr [esi+10h]  +
call edi  +
cmp eax ebp +
jz loc_407DEE  +
mov dword ptr [esi+48h] 2 +
jmp loc_407DF5  +
mov dword ptr [esi+48h] 1 +
push 1  +
pop eax  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
call _atexit  +
pop ecx  +
retn   +
***
mov eax offset loc_4336F4 +
mov eax offset __ehhandler$?BuildSharedMenu@COleControl@@MAEHXZ +
mov eax offset loc_433742 +
mov eax offset loc_43375F +
push esi  +
mov esi ecx +
xor ecx ecx +
cmp [esi+4] ecx +
jnz loc_40837F  +
mov eax [ebp+arg_4] +
cmp eax ecx +
jz loc_40834B  +
cmp [eax] cl +
jnz loc_40837F  +
push ecx  +
push [ebp+arg_8]  +
push dword ptr [esi+10h]  +
call HHA_74  +
push [ebp+nIDDlgItem]  +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
push eax  +
call ds:SetFocus  +
lea eax [ebp+arg_4] +
push offset unk_43C3D8  +
push eax  +
mov [ebp+arg_4] 3 +
call _CxxThrowException  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
call sub_4083E3  +
mov dword ptr [ecx] offset off_437BE8 +
jmp loc_432630  +
***
retn   +
***
mov eax offset loc_433789 +
call _EH_prolog  +
push ecx  +
push esi  +
push 0F0h  +
call ??2@YAPAXI@Z  +
mov esi eax +
pop ecx  +
mov [ebp-10h] esi +
and dword ptr [ebp-4] 0 +
test esi esi +
jz loc_408440  +
mov ecx esi +
call ??0CRichEditDoc@@IAE@XZ  +
and dword ptr [esi+0E8h] 0 +
mov dword ptr [esi] offset off_437CD0 +
mov eax esi +
jmp loc_408442  +
xor eax eax +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
call sub_40848D  +
mov dword ptr [ecx] offset off_437CD0 +
call ?OnNewDocument@COleLinkingDoc@@UAEHXZ  +
mov eax offset loc_43379D +
retn 4  +
***
jmp loc_4327BC  +
***
mov eax offset loc_4337B1 +
call _EH_prolog  +
push ecx  +
push 188h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
cmp ecx eax +
mov [ebp-4] eax +
jz loc_408529  +
call sub_408551  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax offset loc_4337C4 +
call sub_408656  +
mov eax offset loc_4337D8 +
retn 4  +
***
sub esp 40h +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_4] ecx +
call ?OnInitialUpdate@CRichEditView@@MAEXXZ  +
and [ebp+var_30] 0 +
and [ebp+var_27] 0 +
push offset String2  +
push offset aMsgfont  +
push offset aSettings  +
mov [ebp+var_40] 3Ch +
mov [ebp+var_3C] 20000001h +
mov [ebp+var_28] 1 +
call HHA_161  +
mov ebx eax +
test ebx ebx +
jz loc_408752  +
cmp byte ptr [ebx] 0 +
jz loc_408752  +
mov ecx ebx +
call HHA_196  +
mov edi ds:strchr +
push 2Ch  +
push ebx  +
mov [ebp+var_34] eax +
call edi  +
pop ecx  +
mov esi eax +
pop ecx  +
inc esi  +
mov ecx esi +
call HHA_196  +
push 2Ch  +
push esi  +
mov [ebp+var_38] eax +
call edi  +
pop ecx  +
inc eax  +
pop ecx  +
mov edi eax +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
lea edx [ebp+var_26] +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
and ecx 3 +
movs   +
or byte ptr [ebp+var_3C+3] 80h +
jmp loc_40877E  +
mov edi offset aMsSansSerif +
or ecx 0FFFFFFFFh +
xor eax eax +
lea edx [ebp+var_26] +
scas   +
not ecx  +
sub edi ecx +
mov [ebp+var_38] 40000000h +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
and ecx 3 +
movs   +
mov ecx [ebp+var_4] +
lea eax [ebp+var_40] +
push eax  +
call ?SetDefaultCharFormat@CRichEditCtrl@@QAEHAAU_charformat@@@Z  +
push ebx  +
call HHA_132  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
cmp [esp+4] ecx +
jz loc_4087A1  +
mov dword_4442D0 ecx +
call ?Default@CWnd@@IAEJXZ  +
retn 4  +
***
push 0  +
cmp [ebp+arg_0] 111h +
push esi  +
mov esi ecx +
jnz loc_408863  +
push offset HHA_258  +
push 8  +
push 5  +
lea eax [ebp+arg_4] +
push offset unk_442A00  +
push eax  +
call HHA_259  +
test eax eax +
jz loc_408863  +
mov ecx esi +
call dword ptr [eax+4]  +
mov eax [ebp+arg_C] +
push 1  +
and dword ptr [eax] 0 +
pop eax  +
jmp loc_408876  +
push [ebp+arg_C]  +
mov ecx esi +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call ?OnWndMsg@CWnd@@MAEHIIJPAJ@Z  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov eax offset loc_4337F4 +
call _EH_prolog  +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
cmp dword_4442D0 ebx +
jnz loc_40892B  +
mov eax dword_44420C +
push edi  +
push esi  +
lea ecx [ebp-14h] +
mov esi [eax+8] +
call ??0CString@@QAE@XZ  +
push 1F47h  +
lea ecx [ebp-14h] +
mov [ebp-4] ebx +
call ?LoadStringA@CString@@QAEHI@Z  +
cmp esi ebx +
jz loc_40891D  +
mov eax esi +
mov esi [esi] +
lea ecx [ebp-10h] +
mov edi [eax+8] +
call ??0CString@@QAE@XZ  +
mov eax [edi] +
lea ecx [ebp-10h] +
push 2  +
push ecx  +
mov ecx edi +
mov byte ptr [ebp-4] 1 +
call dword ptr [eax+68h]  +
test eax eax +
jz loc_4088F8  +
mov eax [ebp-10h] +
cmp [eax-8] ebx +
jz loc_4088F8  +
push dword ptr [ebp-14h]  +
push eax  +
call ds:strstr  +
pop ecx  +
test eax eax +
pop ecx  +
jnz loc_408905  +
lea ecx [ebp-10h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
jmp loc_4088B8  +
***
mov eax [edi] +
push 1  +
push ebx  +
mov ecx edi +
call dword ptr [eax+84h]  +
lea ecx [ebp-10h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
pop esi  +
pop edi  +
mov ecx [ebp-0Ch] +
pop ebx  +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax offset loc_43380B +
call _EH_prolog  +
sub esp 294h +
push ebx  +
push esi  +
push edi  +
mov [ebp-10h] ecx +
push 0Fh  +
xor eax eax +
pop ecx  +
lea edi [ebp-4Ch] +
stos   +
mov ecx [ebp-10h] +
lea eax [ebp-4Ch] +
push eax  +
mov dword ptr [ebp-4Ch] 3Ch +
call ?GetDefaultCharFormat@CRichEditCtrl@@QBEKAAU_charformat@@@Z  +
push 0Fh  +
mov ebx ds:MulDiv +
pop ecx  +
xor eax eax +
push 5A0h  +
push 64h  +
push dword ptr [ebp-40h]  +
lea edi [ebp-88h] +
stos   +
call ebx  +
neg eax  +
mov [ebp-88h] eax +
lea edi [ebp-32h] +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
lea edx [ebp-6Ch] +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
and ecx 3 +
test byte ptr [ebp-44h] 1 +
movs   +
jz loc_4089C2  +
mov dword ptr [ebp-78h] 2BCh +
test byte ptr [ebp-44h] 2 +
jz loc_4089CC  +
mov byte ptr [ebp-74h] 1 +
xor esi esi +
lea eax [ebp-88h] +
push esi  +
push esi  +
push 41h  +
push eax  +
lea ecx [ebp-1A0h] +
call ??0CFontDialog@@QAE@PAUtagLOGFONTA@@KPAVCDC@@PAVCWnd@@@Z  +
lea ecx [ebp-1A0h] +
mov [ebp-4] esi +
call ?DoModal@CFontDialog@@UAEHXZ  +
push 1  +
pop ecx  +
cmp eax ecx +
jnz loc_408B1B  +
mov eax [ebp-10h] +
mov dword ptr [ebp-44h] 40000000h +
mov [eax+184h] ecx +
mov eax [ebp-88h] +
cdq   +
xor eax edx +
sub eax edx +
lea ecx [eax-8] +
cmp ecx 0Bh +
ja loc_408A6F  +
jmp ds:off_408B39[ecx*4]  +
mov dword ptr [ebp-40h] 78h +
jmp loc_408A7C  +
mov dword ptr [ebp-40h] 8Ch +
jmp loc_408A7C  +
mov dword ptr [ebp-40h] 0A0h +
jmp loc_408A7C  +
mov dword ptr [ebp-40h] 0B4h +
jmp loc_408A7C  +
mov dword ptr [ebp-40h] 0C8h +
jmp loc_408A7C  +
mov dword ptr [ebp-40h] 0DCh +
jmp loc_408A7C  +
mov dword ptr [ebp-40h] 0F0h +
jmp loc_408A7C  +
mov dword ptr [ebp-40h] 118h +
jmp loc_408A7C  +
push 64h  +
push 5A0h  +
push eax  +
call ebx  +
mov [ebp-40h] eax +
lea edi [ebp-6Ch] +
or ecx 0FFFFFFFFh +
xor eax eax +
lea edx [ebp-32h] +
scas   +
not ecx  +
sub edi ecx +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
and ecx 3 +
movs   +
and dword ptr [ebp-44h] 0FFFFFFFCh +
cmp dword ptr [ebp-78h] 2BCh +
jl loc_408AB0  +
or dword ptr [ebp-44h] 1 +
cmp byte ptr [ebp-74h] 0 +
jz loc_408ABA  +
or dword ptr [ebp-44h] 2 +
mov al [ebp-71h] +
mov ecx [ebp-10h] +
mov [ebp-34h] al +
lea eax [ebp-4Ch] +
push eax  +
mov dword ptr [ebp-48h] 0A0000001h +
call ?SetDefaultCharFormat@CRichEditCtrl@@QAEHAAU_charformat@@@Z  +
mov ecx [ebp-10h] +
lea eax [ebp-4Ch] +
push eax  +
mov dword ptr [ebp-4Ch] 3Ch +
call ?GetDefaultCharFormat@CRichEditCtrl@@QBEKAAU_charformat@@@Z  +
lea eax [ebp-32h] +
push eax  +
lea eax [ebp-2A0h] +
push dword ptr [ebp-44h]  +
push dword ptr [ebp-40h]  +
push offset aUUS  +
push eax  +
call ds:wsprintfA  +
add esp 14h +
lea eax [ebp-2A0h] +
push eax  +
push offset aMsgfont  +
push offset aSettings  +
call HHA_213  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1A0h] +
call ??1CDialog@@UAE@XZ  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
mov eax offset loc_433871 +
mov eax offset loc_4338A5 +
mov eax offset unknown_libname_39 +
call _EH_prolog  +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea eax [esi+48h] +
push eax  +
push 139h  +
call HHA_247  +
lea edi [esi+44h] +
mov ecx esi +
push edi  +
push 136h  +
call sub_4095A6  +
lea eax [esi+4Ch] +
mov ebx 134h +
push eax  +
push ebx  +
mov ecx esi +
call HHA_247  +
lea eax [esi+40h] +
mov ecx esi +
push eax  +
push 137h  +
call HHA_247  +
cmp dword ptr [esi+4] 0 +
jz loc_409007  +
lea ecx [ebp-18h] +
call sub_40462F  +
xor edx edx +
xor ecx ecx +
cmp off_442BB0 edx +
mov [ebp-4] edx +
jz loc_408E4F  +
mov edi [edi] +
mov eax offset off_442BB0 +
cmp [eax+4] edi +
jz loc_408E4C  +
add eax 8 +
inc ecx  +
cmp [eax] edx +
jnz loc_408E3D  +
jmp loc_408E4F  +
mov [esi+44h] ecx +
mov edi ds:GetDlgItem +
push ebx  +
push dword ptr [esi+10h]  +
call edi  +
mov ecx dword_443DE0 +
mov [ebp-10h] eax +
test ecx ecx +
jnz loc_408E99  +
push 68h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-14h] eax +
test eax eax +
mov byte ptr [ebp-4] 1 +
jz loc_408E8B  +
push 9  +
push offset aCompiledFiles  +
mov ecx eax +
call HHA_127  +
jmp loc_408E8D  +
xor eax eax +
and byte ptr [ebp-4] 0 +
mov ecx eax +
mov dword_443DE0 ecx +
lea eax [ebp-10h] +
push eax  +
call HHA_125  +
mov eax [esi+4Ch] +
test eax eax +
jz loc_408EB4  +
xor ecx ecx +
cmp [eax] cl +
setz cl  +
mov eax ecx +
jmp loc_408EB7  +
push 1  +
pop eax  +
mov ebx ds:SetWindowTextA +
test eax eax +
jz loc_408ED5  +
push 0  +
push 0  +
push 14Eh  +
push dword ptr [ebp-10h]  +
call ds:SendMessageA  +
jmp loc_408EEB  +
mov eax [esi+4Ch] +
push 134h  +
push dword ptr [esi+10h]  +
mov [ebp-14h] eax +
call edi  +
push dword ptr [ebp-14h]  +
push eax  +
call ebx  +
push 136h  +
push dword ptr [ebp-10h]  +
call ds:GetParent  +
push eax  +
call edi  +
mov [ebp-10h] eax +
mov eax off_442BB0 +
test eax eax +
jz loc_408F2D  +
mov dword ptr [ebp-14h] offset off_442BB0 +
push eax  +
push 0  +
push 143h  +
push dword ptr [ebp-10h]  +
call ds:SendMessageA  +
add dword ptr [ebp-14h] 8 +
mov eax [ebp-14h] +
mov eax [eax] +
test eax eax +
jnz loc_408F0F  +
push 0  +
push dword ptr [esi+44h]  +
push 14Eh  +
push dword ptr [ebp-10h]  +
call ds:SendMessageA  +
mov eax [esi+48h] +
push 139h  +
push dword ptr [esi+10h]  +
mov [ebp-14h] eax +
call edi  +
push dword ptr [ebp-14h]  +
push eax  +
call ebx  +
mov ecx esi +
call sub_4090FD  +
cmp dword_444268 0 +
jnz loc_408F94  +
push 68h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-14h] eax +
test eax eax +
mov byte ptr [ebp-4] 2 +
jz loc_408F89  +
push 9  +
push offset aChmWindows  +
mov ecx eax +
call HHA_127  +
jmp loc_408F8B  +
xor eax eax +
and byte ptr [ebp-4] 0 +
mov dword_444268 eax +
push 137h  +
push dword ptr [ebp-10h]  +
call ds:GetParent  +
push eax  +
call edi  +
mov ecx dword_444268 +
mov [ebp-10h] eax +
lea eax [ebp-10h] +
push eax  +
call HHA_125  +
mov eax [esi+4Ch] +
test eax eax +
jz loc_408FC9  +
xor ecx ecx +
cmp [eax] cl +
setz cl  +
mov eax ecx +
jmp loc_408FCC  +
push 1  +
pop eax  +
test eax eax +
jz loc_408FE4  +
push 0  +
push 0  +
push 14Eh  +
push dword ptr [ebp-10h]  +
call ds:SendMessageA  +
jmp loc_408FFA  +
mov eax [esi+4Ch] +
push 137h  +
push dword ptr [esi+10h]  +
mov [ebp-14h] eax +
call edi  +
push dword ptr [ebp-14h]  +
push eax  +
call ebx  +
push dword ptr [ebp-18h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call ds:SetCursor  +
mov ecx [ebp-0Ch] +
push 1  +
pop eax  +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
push edi  +
push 0  +
mov esi ecx +
push 147h  +
push 136h  +
push dword ptr [esi+10h]  +
call ds:SendDlgItemMessageA  +
cmp eax 0FFFFFFFFh +
jz loc_409183  +
mov eax dword_442BB4[eax*8] +
test eax eax +
jz loc_409161  +
cmp eax 0Fh +
jz loc_40914A  +
cmp eax 1000h +
jz loc_409161  +
push 138h  +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
mov esi eax +
push 1F42h  +
jmp loc_409176  +
push 138h  +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
mov esi eax +
push 2019h  +
jmp loc_409176  +
push 138h  +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
mov esi eax +
push 1F43h  +
call HHA_76  +
push eax  +
push esi  +
call ds:SetWindowTextA  +
pop esi  +
retn   +
***
mov eax 1000h +
mov edx [ecx+4] +
push esi  +
mov esi [esp+4+arg_4] +
test edx edx +
jz loc_4095CF  +
mov eax [esi] +
test eax eax +
jl loc_4095CF  +
push 0  +
push eax  +
push 14Eh  +
push [esp+10h+nIDDlgItem]  +
push dword ptr [ecx+10h]  +
call ds:SendDlgItemMessageA  +
jmp loc_4095E9  +
test edx edx +
jnz loc_4095E9  +
push edx  +
push edx  +
push 147h  +
push [esp+10h+nIDDlgItem]  +
push dword ptr [ecx+10h]  +
call ds:SendDlgItemMessageA  +
mov [esi] eax +
pop esi  +
retn 8  +
***
mov eax offset loc_433928 +
call _EH_prolog  +
sub esp 15Ch +
push ebx  +
xor ebx ebx +
cmp [ecx+4] ebx +
mov [ebp-1Ch] ecx +
jnz loc_40965B  +
push 1  +
pop eax  +
jmp loc_4098F5  +
push edi  +
push esi  +
mov [ebp-18h] ebx +
lea eax [ebp-10h] +
mov [ebp-4] ebx +
push eax  +
push offset aClsid5d02926a2  +
push 80000000h  +
call ds:RegOpenKeyA  +
mov esi ds:RegQueryValueExA +
mov edi offset String2 +
test eax eax +
jnz loc_4096C4  +
lea eax [ebp-14h] +
mov dword ptr [ebp-14h] 104h +
push eax  +
lea eax [ebp-168h] +
push eax  +
push ebx  +
push ebx  +
push edi  +
push dword ptr [ebp-10h]  +
call esi  +
test eax eax +
jnz loc_4096C4  +
mov eax dword_442C08 +
cmp eax ebx +
jz loc_4096B3  +
push eax  +
call HHA_132  +
lea eax [ebp-168h] +
push eax  +
call HHA_23  +
mov dword_442C08 eax +
push dword ptr [ebp-10h]  +
call ds:RegCloseKey  +
cmp dword_442C08 ebx +
jnz loc_4096E4  +
push offset aItss_dll  +
call HHA_23  +
mov dword_442C08 eax +
lea eax [ebp-10h] +
push eax  +
push offset aClsid8fa0d5a8D  +
push 80000000h  +
call ds:RegOpenKeyA  +
test eax eax +
jnz loc_40973A  +
lea eax [ebp-14h] +
mov dword ptr [ebp-14h] 104h +
push eax  +
lea eax [ebp-168h] +
push eax  +
push ebx  +
push ebx  +
push edi  +
push dword ptr [ebp-10h]  +
call esi  +
test eax eax +
jnz loc_40973A  +
mov eax dword_442C10 +
cmp eax ebx +
jz loc_409729  +
push eax  +
call HHA_132  +
lea eax [ebp-168h] +
push eax  +
call HHA_23  +
mov dword_442C10 eax +
push dword ptr [ebp-10h]  +
call ds:RegCloseKey  +
cmp dword_442C10 ebx +
jnz loc_40975A  +
push offset aItircl_dll  +
call HHA_23  +
mov dword_442C10 eax +
lea eax [ebp-10h] +
push eax  +
push offset aClsid8fa0d5a9D  +
push 80000000h  +
call ds:RegOpenKeyA  +
test eax eax +
jnz loc_4097B0  +
lea eax [ebp-14h] +
mov dword ptr [ebp-14h] 104h +
push eax  +
lea eax [ebp-168h] +
push eax  +
push ebx  +
push ebx  +
push edi  +
push dword ptr [ebp-10h]  +
call esi  +
test eax eax +
jnz loc_4097B0  +
mov eax dword_442C18 +
cmp eax ebx +
jz loc_40979F  +
push eax  +
call HHA_132  +
lea eax [ebp-168h] +
push eax  +
call HHA_23  +
mov dword_442C18 eax +
push dword ptr [ebp-10h]  +
call ds:RegCloseKey  +
cmp dword_442C18 ebx +
jnz loc_4097D0  +
push offset aItcc_dll  +
call HHA_23  +
mov dword_442C18 eax +
lea eax [ebp-10h] +
push eax  +
push offset aClsid13a18670C  +
push 80000000h  +
call ds:RegOpenKeyA  +
test eax eax +
jnz loc_409826  +
lea eax [ebp-14h] +
mov dword ptr [ebp-14h] 104h +
push eax  +
lea eax [ebp-168h] +
push eax  +
push ebx  +
push ebx  +
push edi  +
push dword ptr [ebp-10h]  +
call esi  +
test eax eax +
jnz loc_409826  +
mov eax dword_442C20 +
cmp eax ebx +
jz loc_409815  +
push eax  +
call HHA_132  +
lea eax [ebp-168h] +
push eax  +
call HHA_23  +
mov dword_442C20 eax +
push dword ptr [ebp-10h]  +
call ds:RegCloseKey  +
cmp dword_442C20 ebx +
jnz loc_409846  +
push offset aRtfdoc_dll  +
call HHA_23  +
mov dword_442C20 eax +
cmp dword_442C08 ebx +
jz loc_4098DF  +
mov esi offset dword_442C08 +
mov eax esi +
push dword ptr [eax]  +
call HHA_324  +
cmp eax ebx +
mov [ebp-20h] eax +
jz loc_4098D2  +
cmp [eax] bl +
jz loc_4098D2  +
lea ecx [ebp-30h] +
push ecx  +
push eax  +
call HHA_128  +
push dword ptr [esi+4]  +
mov eax [ebp-1Ch] +
lea ecx [ebp-18h] +
push dword ptr [eax+10h]  +
call HHA_164  +
push dword ptr [ebp-24h]  +
lea eax [ebp-64h] +
push dword ptr [ebp-28h]  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-30h]  +
push offset aU_02u_04u_U  +
push eax  +
call ds:wsprintfA  +
add esp 18h +
lea eax [ebp-64h] +
lea ecx [ebp-18h] +
push eax  +
call sub_40282C  +
push dword ptr [esi+4]  +
mov eax [ebp-1Ch] +
mov edi [ebp-18h] +
push dword ptr [eax+10h]  +
call ds:GetDlgItem  +
push edi  +
push eax  +
call ds:SetWindowTextA  +
push dword ptr [ebp-20h]  +
call HHA_132  +
add esi 8 +
mov eax esi +
cmp [esi] ebx +
jnz loc_409859  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-18h] ebx +
jz loc_4098F0  +
push dword ptr [ebp-18h]  +
call HHA_132  +
push 1  +
pop eax  +
pop esi  +
pop edi  +
mov ecx [ebp-0Ch] +
pop ebx  +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax offset loc_43393D +
call _EH_prolog  +
push ecx  +
push 148h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
cmp ecx eax +
mov [ebp-4] eax +
jz loc_40992B  +
call sub_409953  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax ds:?classCDocument@CDocument@@2UCRuntimeClass@@A +
retn   +
***
mov eax offset loc_433963 +
mov eax [ecx+144h] +
call sub_409A30  +
test [esp+arg_0] 1 +
jz loc_4099CE  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
retn 4  +
***
mov eax offset loc_433978 +
call _EH_prolog  +
push esi  +
mov esi ecx +
and dword ptr [ebp-4] 0 +
lea ecx [esi+4] +
call sub_40CB20  +
mov esi [esi] +
or dword ptr [ebp-4] 0FFFFFFFFh +
test esi esi +
jz loc_4099FD  +
push esi  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
call ?OnNewDocument@CDocument@@UAEHXZ  +
mov eax offset loc_4339A8 +
call sub_4236A3  +
push 0  +
mov eax [esp+arg_0] +
mov [ecx+48h] eax +
retn 4  +
***
mov eax large fs:0 +
push eax  +
mov large fs:0 esp +
sub esp 100h +
push ebx  +
push ebp  +
push esi  +
push edi  +
mov ebp ecx +
or edi 0FFFFFFFFh +
mov [esp+11Ch+var_100] ebp +
mov [esp+11Ch+var_B8] edi +
mov esi [esp+11Ch+arg_0] +
xor ebx ebx +
push esi  +
lea ecx [esp+120h+var_B8] +
mov [esp+120h+var_4] ebx +
call HHA_320  +
test eax eax +
jnz loc_409B8D  +
push ebx  +
push esi  +
push 1D805h  +
call HHA_253  +
mov eax [esp+12Ch+var_C8] +
mov [esp+12Ch+var_14] edi +
cmp eax ebx +
jl loc_40AACE  +
lea ecx [esp+12Ch+var_C8] +
call HHA_321  +
cmp [esp+12Ch+var_C8] ebx +
jge loc_409B79  +
jmp loc_40AACE  +
cmp [ebp+88h] ebx +
jnz loc_409BDD  +
cmp esi ebx +
jz loc_409BDD  +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
lea eax [ebp+4] +
push ecx  +
push eax  +
call HHA_108  +
mov edx eax +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov [esp+128h+var_104] edx +
mov eax [esp+128h+var_104] +
mov edx ecx +
mov esi edi +
mov edi eax +
shr ecx 2 +
movs   +
mov ecx edx +
and ecx 3 +
movs   +
mov [ebp+88h] eax +
mov ecx [esp+128h+var_4] +
mov [esp+128h+var_D8] ebx +
mov [ebp+94h] ecx +
mov ecx 8 +
xor eax eax +
lea edi [esp+128h+var_100] +
mov [esp+128h+var_D0] ebp +
stos   +
push 0C8h  +
mov byte ptr [esp+12Ch+var_10] 1 +
mov [esp+12Ch+var_D4] ebx +
mov [esp+12Ch+var_DC] 32h +
call HHA_135  +
push 0Ch  +
mov [esp+130h+var_E4] eax +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [esp+12Ch+var_118] eax +
cmp eax ebx +
mov byte ptr [esp+12Ch+var_14] 2 +
jz loc_409C4B  +
mov edx [ebp+74h] +
mov ecx eax +
shl edx 2 +
push edx  +
call sub_40AB13  +
jmp loc_409C4D  +
xor eax eax +
mov [esp+12Ch+var_D0] eax +
mov [esp+12Ch+var_10C] ebx +
mov [esp+12Ch+var_11C] ebx +
mov [esp+12Ch+var_108] ebx +
mov [esp+12Ch+var_CC] ebx +
mov [esp+12Ch+var_114] ebx +
mov byte ptr [esp+12Ch+var_14] 5 +
cmp [esp+12Ch+var_CC] ebx +
jz loc_409C85  +
mov eax [esp+12Ch+var_114] +
lea ecx [esp+12Ch+var_C8] +
push eax  +
call HHA_320  +
mov [esp+130h+var_D0] ebx +
mov edx [esp+130h+var_CC] +
lea ecx [esp+130h+var_120] +
push ecx  +
mov ecx [esp+edx*8+134h+var_C8] +
call HHA_33  +
cmp eax ebx +
jnz loc_409CBB  +
lea ecx [esp+134h+var_D0] +
call HHA_321  +
test eax eax +
jz loc_40A860  +
mov ecx 8 +
xor eax eax +
lea edi [esp+134h+var_10C] +
stos   +
jmp loc_409C6D  +
mov eax [esp+134h+var_124] +
push eax  +
call HHA_3  +
mov ebp eax +
cmp ebp ebx +
jz loc_409C6D  +
mov al [ebp+0] +
test al al +
jz loc_409C6D  +
cmp al 3Ch +
jnz loc_40A808  +
mov edi offset aParamName +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
mov esi ecx +
push esi  +
push offset aParamName  +
push ebp  +
call HHA_310  +
neg eax  +
sbb eax eax +
and eax esi +
cmp eax ebx +
jz loc_409F78  +
add eax ebp +
push 22h  +
push eax  +
call HHA_8  +
cmp eax ebx +
jnz loc_409D3D  +
mov edx [esp+14Ch+var_E8] +
lea ecx [esp+14Ch+var_13C] +
push ecx  +
mov ecx [esp+edx*8+150h+var_E4] +
call HHA_33  +
cmp eax ebx +
jz loc_40AAEB  +
mov eax [esp+150h+var_140] +
push 22h  +
push eax  +
call HHA_8  +
cmp eax ebx +
jz loc_409D13  +
inc eax  +
push eax  +
call HHA_3  +
cmp eax ebx +
jz loc_40AA30  +
lea ecx [esp+15Ch+var_10C] +
mov esi eax +
push ecx  +
push eax  +
lea edx [esp+164h+var_14C] +
lea eax [esp+164h+var_F8] +
push edx  +
push eax  +
call sub_40C310  +
mov ebp eax +
cmp ebp ebx +
jz loc_40AA30  +
push ebx  +
lea ecx [esp+160h+var_134] +
push esi  +
push ecx  +
mov ecx [esp+168h+var_140] +
call sub_40ABE0  +
test eax eax +
jnz loc_40A853  +
mov edi offset aHhi +
or ecx 0FFFFFFFFh +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aHhi  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+15Ch+var_148] eax +
jz loc_409E02  +
mov edi [esp+15Ch+var_10C] +
or ecx 0FFFFFFFFh +
xor eax eax +
mov esi edi +
mov edx [esp+15Ch+var_140] +
scas   +
not ecx  +
add edx 4 +
push ecx  +
push edx  +
call HHA_108  +
mov edx eax +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov [esp+164h+var_150] edx +
mov eax [esp+164h+var_150] +
mov edx ecx +
mov esi edi +
mov edi eax +
shr ecx 2 +
movs   +
mov ecx edx +
and ecx 3 +
movs   +
mov ecx [esp+164h+var_148] +
mov [ecx+0E0h] eax +
jmp loc_40A853  +
mov edi offset aMerge +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aMerge  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+15Ch+var_148] eax +
jz loc_409F44  +
push 1D72Bh  +
call HHA_76  +
push eax  +
call HHA_23  +
mov esi eax +
mov eax [esp+164h+var_14C] +
cmp eax ebx +
jz loc_409E50  +
push eax  +
call HHA_132  +
mov edx [esp+168h+var_118] +
mov [esp+168h+var_150] esi +
test esi esi +
mov ebx edx +
jnz loc_409E6A  +
push edx  +
call HHA_23  +
mov [esp+16Ch+var_154] eax +
jmp loc_409EC4  +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
mov edi edx +
mov eax ecx +
or ecx 0FFFFFFFFh +
mov [esp+168h+var_154] eax +
xor eax eax +
scas   +
mov edx [esp+168h+var_154] +
not ecx  +
dec ecx  +
lea eax [edx+ecx+1] +
push eax  +
push esi  +
call HHA_131  +
mov edx eax +
mov edi ebx +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov [esp+170h+var_158] edx +
mov esi edi +
mov ebx ecx +
mov edi edx +
or ecx 0FFFFFFFFh +
scas   +
mov ecx ebx +
dec edi  +
shr ecx 2 +
movs   +
mov ecx ebx +
and ecx 3 +
movs   +
mov ecx [esp+170h+var_154] +
mov esi [esp+170h+var_158] +
mov edi esi +
xor eax eax +
lea ebx [ecx+4] +
or ecx 0FFFFFFFFh +
scas   +
not ecx  +
push ecx  +
push ebx  +
call HHA_108  +
mov edx eax +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov [esp+178h+var_164] edx +
mov eax [esp+178h+var_164] +
mov edx ecx +
mov esi edi +
mov edi eax +
shr ecx 2 +
movs   +
mov ecx edx +
and ecx 3 +
movs   +
lea ecx [esp+178h+var_150] +
mov [esp+178h+var_14C] eax +
push ecx  +
push 20h  +
push ebx  +
mov byte ptr [esp+184h+var_136] 1 +
mov [esp+184h+var_138] 5 +
call HHA_47  +
test eax eax +
jz loc_409F35  +
mov ecx [esp+184h+var_168] +
mov edx [ecx+8] +
mov eax [edx+eax*4] +
mov [eax] ecx +
mov [esp+184h+var_130] 1 +
xor ebx ebx +
jmp loc_40A853  +
mov ecx [esp+15Ch+var_140] +
cmp [ecx+94h] ebx +
jnz loc_40A808  +
mov edi offset aFavorites +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aFavorites  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
jmp loc_40A808  +
mov edi offset aUl +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
mov esi ecx +
push esi  +
push offset aUl  +
push ebp  +
call HHA_310  +
neg eax  +
sbb eax eax +
and eax esi +
cmp eax ebx +
jz loc_409FB7  +
mov edx [esp+150h+var_130] +
add eax ebp +
inc edx  +
push eax  +
mov [esp+154h+var_130] edx +
call HHA_3  +
mov ebp eax +
jmp loc_40A853  +
mov edi offset aUl_0 +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
mov esi ecx +
push esi  +
push offset aUl_0  +
push ebp  +
call HHA_310  +
neg eax  +
sbb eax eax +
and eax esi +
cmp eax ebx +
jz loc_409FF6  +
mov edx [esp+15Ch+var_13C] +
add eax ebp +
dec edx  +
push eax  +
mov [esp+160h+var_13C] edx +
call HHA_3  +
mov ebp eax +
jmp loc_40A853  +
mov edi offset aLi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
mov esi ecx +
push esi  +
push offset aLi  +
push ebp  +
call HHA_310  +
neg eax  +
sbb eax eax +
and eax esi +
cmp eax ebx +
jz loc_40A17E  +
add eax ebp +
push 3Eh  +
push eax  +
call HHA_8  +
cmp eax ebx +
jnz loc_40A063  +
lea edx [esp+170h+var_10C] +
test edx edx +
jz loc_40A05F  +
mov ecx [esp+170h+var_10C] +
lea eax [esp+170h+var_160] +
push eax  +
mov ecx [esp+ecx*8+174h+var_108] +
call HHA_33  +
cmp eax ebx +
jz loc_40A05F  +
mov edx [esp+174h+var_164] +
push 3Eh  +
push edx  +
call HHA_8  +
cmp eax ebx +
jz loc_40A02F  +
jmp loc_40A063  +
xor ebp ebp +
jmp loc_40A06C  +
inc eax  +
push eax  +
call HHA_3  +
mov ebp eax +
cmp ebp ebx +
jz loc_40AA30  +
mov edi offset aObject_2 +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
mov esi ecx +
push esi  +
push offset aObject_2  +
push ebp  +
call HHA_310  +
neg eax  +
sbb eax eax +
and eax esi +
cmp eax ebx +
jz loc_40A808  +
lea ecx [esp+180h+var_130] +
add eax ebp +
push ecx  +
push eax  +
lea edx [esp+188h+var_170] +
lea eax [esp+188h+var_11C] +
push edx  +
push eax  +
call sub_40C530  +
mov ebp eax +
cmp ebp ebx +
jnz loc_40A0F9  +
mov edx [esp+180h+var_11C] +
lea ecx [esp+180h+var_170] +
push ecx  +
mov ecx [esp+edx*8+184h+var_118] +
call HHA_33  +
cmp eax ebx +
jz loc_40AA30  +
mov ecx [esp+184h+var_174] +
lea eax [esp+184h+var_134] +
push eax  +
lea edx [esp+188h+var_174] +
push ecx  +
lea eax [esp+18Ch+var_120] +
push edx  +
push eax  +
call sub_40C530  +
mov ebp eax +
cmp ebp ebx +
jz loc_40AA30  +
mov edi offset aTextSitemap +
or ecx 0FFFFFFFFh +
xor eax eax +
mov esi ds:_strnicmp +
scas   +
not ecx  +
dec ecx  +
push ecx  +
mov ecx [esp+188h+var_134] +
push offset aTextSitemap  +
push ecx  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+184h+var_170] eax +
jz loc_40A143  +
mov dl byte ptr [esp+184h+var_164] +
mov ecx 8 +
xor eax eax +
lea edi [esp+184h+var_15C] +
stos   +
mov [esp+184h+var_143] dl +
jmp loc_40A853  +
mov edi offset aTextSiteProper +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
mov eax [esp+184h+var_134] +
not ecx  +
dec ecx  +
push ecx  +
push offset aTextSiteProper  +
push eax  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+184h+var_170] eax +
jz loc_40A808  +
mov [esp+184h+var_130] 1 +
jmp loc_40A808  +
mov edi offset aObject_3 +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
mov edi ecx +
push edi  +
push offset aObject_3  +
push ebp  +
call HHA_310  +
mov esi eax +
neg esi  +
sbb esi esi +
and esi edi +
cmp esi ebx +
jz loc_40A2AF  +
cmp [esp+174h+var_120] ebx +
jnz loc_40A25F  +
mov edi [esp+174h+var_158] +
mov ecx [esp+174h+var_118] +
mov eax [edi+94h] +
cmp eax ebx +
mov eax [ecx+8] +
jz loc_40A229  +
cmp eax ebx +
jnz loc_40A1D5  +
add ebp esi +
jmp loc_40A853  +
mov eax [esp+174h+var_11C] +
lea edx [esp+174h+var_14C] +
push edx  +
push eax  +
call sub_40C050  +
cmp [esp+174h+var_148] ebx +
jz loc_40A20D  +
cmp [esp+174h+var_136] bx +
jz loc_40A20D  +
lea ecx [esp+174h+var_14C] +
lea edx [edi+4] +
push ecx  +
push 20h  +
push edx  +
call HHA_47  +
cmp eax ebx +
jz loc_40A20D  +
mov ecx [edi+8] +
mov edx [ecx+eax*4] +
mov [edx] edi +
mov ecx 8 +
xor eax eax +
lea edi [esp+180h+var_158] +
add ebp esi +
stos   +
mov al byte ptr [esp+180h+var_160] +
mov byte ptr [esp+180h+var_140+1] al +
jmp loc_40A853  +
cmp eax ebx +
jz loc_40A23C  +
mov eax [esp+174h+var_11C] +
lea edx [esp+174h+var_14C] +
push edx  +
push eax  +
call sub_40C050  +
lea ecx [esp+174h+var_14C] +
lea edx [edi+4] +
push ecx  +
push 20h  +
push edx  +
call HHA_47  +
cmp eax ebx +
jz loc_40A2A8  +
mov ecx [edi+8] +
add ebp esi +
mov edx [ecx+eax*4] +
mov [edx] edi +
jmp loc_40A853  +
mov eax [esp+174h+var_158] +
mov [esp+174h+var_120] ebx +
mov eax [eax+0E0h] +
cmp eax ebx +
jz loc_40A2A8  +
cmp byte ptr [eax] 0 +
jz loc_40A2A8  +
mov ecx [esp+174h+var_124] +
push ecx  +
call HHA_23  +
mov edi eax +
mov eax [esp+178h+var_160] +
cmp eax ebx +
jz loc_40A292  +
mov edx eax +
push edx  +
call HHA_132  +
mov eax [esp+17Ch+var_160] +
mov [esp+17Ch+var_164] edi +
mov [esp+17Ch+var_11C] 1 +
mov [eax+0E0h] ebx +
add ebp esi +
jmp loc_40A853  +
mov edi offset aSitemap +
or ecx 0FFFFFFFFh +
xor eax eax +
mov esi ds:_strnicmp +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aSitemap  +
push ebp  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+174h+var_160] eax +
jnz loc_40A7A5  +
mov edi offset aSitemap_0 +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aSitemap_0  +
push ebp  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+174h+var_160] eax +
jnz loc_40A7A5  +
mov edi offset aSitemap_1 +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aSitemap_1  +
push ebp  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+174h+var_160] eax +
jnz loc_40A7A5  +
mov edi offset aObject_2 +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
mov edi ecx +
push edi  +
push offset aObject_2  +
push ebp  +
call HHA_310  +
mov esi eax +
neg esi  +
sbb esi esi +
and esi edi +
cmp esi ebx +
jz loc_40A665  +
lea ecx [esp+180h+var_130] +
lea edx [esi+ebp] +
push ecx  +
lea eax [esp+184h+var_170] +
push edx  +
lea ecx [esp+188h+var_11C] +
push eax  +
push ecx  +
call sub_40C530  +
mov ebp eax +
cmp ebp ebx +
jnz loc_40A3B9  +
mov eax [esp+180h+var_11C] +
lea edx [esp+180h+var_170] +
push edx  +
mov ecx [esp+eax*8+184h+var_118] +
call HHA_33  +
cmp eax ebx +
jz loc_40AA30  +
lea ecx [esp+184h+var_134] +
add esi ebp +
push ecx  +
lea edx [esp+188h+var_174] +
push esi  +
lea eax [esp+18Ch+var_120] +
push edx  +
push eax  +
call sub_40C530  +
mov ebp eax +
cmp ebp ebx +
jz loc_40AA30  +
mov edi offset aTextSiteProper +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
mov ecx [esp+188h+var_134] +
push offset aTextSiteProper  +
push ecx  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+184h+var_170] eax +
jz loc_40A3F4  +
mov [esp+184h+var_130] 1 +
jmp loc_40A853  +
push offset asc_4382F0  +
push ebp  +
call ds:strstr  +
mov ebp eax +
add esp 8 +
cmp ebp ebx +
jz loc_40A412  +
inc ebp  +
push ebp  +
call HHA_3  +
mov ebp eax +
test ebp ebp +
jnz loc_40A444  +
mov eax [esp+188h+var_124] +
lea edx [esp+188h+var_178] +
push edx  +
mov ecx [esp+eax*8+18Ch+var_120] +
call HHA_33  +
test eax eax +
jz loc_40AA30  +
mov ecx [esp+18Ch+var_17C] +
push ecx  +
call HHA_3  +
mov ebp eax +
test ebp ebp +
jz loc_40A655  +
mov al [ebp+0] +
test al al +
jz loc_40A655  +
cmp al 3Ch +
jnz loc_40A412  +
mov edi offset aObject_3 +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
mov esi ecx +
push esi  +
push offset aObject_3  +
push ebp  +
call HHA_310  +
neg eax  +
sbb eax eax +
and eax esi +
test eax eax +
jnz loc_40A65C  +
mov edi offset aParamName +
or ecx 0FFFFFFFFh +
scas   +
not ecx  +
dec ecx  +
mov esi ecx +
push esi  +
push offset aParamName  +
push ebp  +
call HHA_310  +
neg eax  +
sbb eax eax +
and eax esi +
test eax eax +
jz loc_40A412  +
add eax ebp +
push 22h  +
push eax  +
call HHA_8  +
test eax eax +
jnz loc_40A4E1  +
mov eax [esp+1B0h+var_14C] +
lea edx [esp+1B0h+var_1A0] +
push edx  +
mov ecx [esp+eax*8+1B4h+var_148] +
call HHA_33  +
test eax eax +
jz loc_40A4DD  +
mov ecx [esp+1B4h+var_1A4] +
push 22h  +
push ecx  +
call HHA_8  +
test eax eax +
jz loc_40A4B5  +
jmp loc_40A4E1  +
xor eax eax +
jmp loc_40A4E8  +
inc eax  +
push eax  +
call HHA_3  +
test eax eax +
jz loc_40AA30  +
lea edx [esp+1B4h+var_164] +
mov esi eax +
push edx  +
push eax  +
lea eax [esp+1BCh+var_1A4] +
lea ecx [esp+1BCh+var_150] +
push eax  +
push ecx  +
call sub_40C310  +
mov ebp eax +
test ebp ebp +
jz loc_40AA30  +
mov edi offset aMerge +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aMerge  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1B4h+var_1A0] eax +
jz loc_40A412  +
push 1D72Bh  +
call HHA_76  +
push eax  +
call HHA_23  +
mov esi eax +
mov eax [esp+1BCh+var_1A4] +
test eax eax +
jz loc_40A55F  +
push eax  +
call HHA_132  +
mov edx [esp+1C0h+var_170] +
mov [esp+1C0h+var_1A8] esi +
test esi esi +
mov ebx edx +
jnz loc_40A579  +
push edx  +
call HHA_23  +
mov [esp+1C4h+var_1AC] eax +
jmp loc_40A5D3  +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
mov edi edx +
mov eax ecx +
or ecx 0FFFFFFFFh +
mov [esp+1C0h+var_1AC] eax +
xor eax eax +
scas   +
mov edx [esp+1C0h+var_1AC] +
not ecx  +
dec ecx  +
lea eax [edx+ecx+1] +
push eax  +
push esi  +
call HHA_131  +
mov edx eax +
mov edi ebx +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov [esp+1C8h+var_1B0] edx +
mov esi edi +
mov ebx ecx +
mov edi edx +
or ecx 0FFFFFFFFh +
scas   +
mov ecx ebx +
dec edi  +
shr ecx 2 +
movs   +
mov ecx ebx +
and ecx 3 +
movs   +
mov ecx [esp+1C8h+var_1AC] +
mov esi [esp+1C8h+var_1B0] +
mov edi esi +
xor eax eax +
lea ebx [ecx+4] +
or ecx 0FFFFFFFFh +
scas   +
not ecx  +
push ecx  +
push ebx  +
call HHA_108  +
mov edx eax +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov [esp+1D0h+var_1BC] edx +
mov eax [esp+1D0h+var_1BC] +
mov edx ecx +
mov esi edi +
mov edi eax +
shr ecx 2 +
movs   +
mov ecx edx +
lea edx [esp+1D0h+var_1A8] +
and ecx 3 +
push edx  +
movs   +
mov cl byte ptr [esp+1D4h+var_1B0] +
push 20h  +
push ebx  +
mov [esp+1DCh+var_1A4] eax +
mov [esp+1DCh+var_18E] 1 +
mov [esp+1DCh+var_190] 5 +
mov [esp+1DCh+var_18F] cl +
call HHA_47  +
test eax eax +
jz loc_40A412  +
mov ecx [esp+1DCh+var_1C0] +
mov edx [ecx+8] +
mov eax [edx+eax*4] +
mov [eax] ecx +
jmp loc_40A412  +
xor ebp ebp +
jmp loc_40A412  +
add ebp eax +
xor ebx ebx +
jmp loc_40A853  +
mov edi offset aAHref +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aAHref  +
push ebp  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+180h+var_16C] eax +
jz loc_40A748  +
push offset asc_4382F0  +
push ebp  +
call ds:strstr  +
mov esi eax +
add esp 8 +
cmp esi ebx +
jz loc_40A6DC  +
mov edi offset aA +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aA  +
push esi  +
call ds:strncmp  +
add esp 0Ch +
test eax eax +
jz loc_40A6FC  +
push offset aA  +
push esi  +
call HHA_1  +
mov esi eax +
cmp esi ebx +
jnz loc_40A6FC  +
mov edx [esp+188h+var_124] +
lea ecx [esp+188h+var_178] +
push ecx  +
mov ecx [esp+edx*8+18Ch+var_120] +
call HHA_33  +
cmp eax ebx +
jz loc_40AA30  +
mov ebp [esp+18Ch+var_17C] +
jmp loc_40A693  +
push 3Eh  +
push esi  +
call HHA_8  +
cmp eax ebx +
jnz loc_40A797  +
lea eax [esp+188h+var_124] +
test eax eax +
jz loc_40A790  +
mov edx [esp+188h+var_124] +
lea ecx [esp+188h+var_178] +
push ecx  +
mov ecx [esp+edx*8+18Ch+var_120] +
call HHA_33  +
cmp eax ebx +
jz loc_40A790  +
mov eax [esp+18Ch+var_17C] +
push 3Eh  +
push eax  +
call HHA_8  +
cmp eax ebx +
jz loc_40A70C  +
inc eax  +
push eax  +
call HHA_3  +
mov ebp eax +
jmp loc_40A853  +
push 3Eh  +
push ebp  +
call HHA_8  +
cmp eax ebx +
jnz loc_40A797  +
lea ecx [esp+188h+var_124] +
test ecx ecx +
jz loc_40A790  +
mov eax [esp+188h+var_124] +
lea edx [esp+188h+var_178] +
push edx  +
mov ecx [esp+eax*8+18Ch+var_120] +
call HHA_33  +
cmp eax ebx +
jz loc_40A790  +
mov ecx [esp+18Ch+var_17C] +
push 3Eh  +
push ecx  +
call HHA_8  +
cmp eax ebx +
jz loc_40A754  +
inc eax  +
push eax  +
call HHA_3  +
mov ebp eax +
jmp loc_40A853  +
xor ebp ebp +
jmp loc_40A853  +
inc eax  +
push eax  +
call HHA_3  +
mov ebp eax +
jmp loc_40A853  +
push 3Eh  +
push ebp  +
mov [esp+17Ch+var_150] 1 +
call HHA_8  +
cmp eax ebx +
jnz loc_40A7ED  +
lea edx [esp+17Ch+var_118] +
test edx edx +
jz loc_40A7E9  +
mov ecx [esp+17Ch+var_118] +
lea eax [esp+17Ch+var_16C] +
push eax  +
mov ecx [esp+ecx*8+180h+var_114] +
call HHA_33  +
cmp eax ebx +
jz loc_40A7E9  +
mov edx [esp+180h+var_170] +
push 3Eh  +
push edx  +
call HHA_8  +
cmp eax ebx +
jz loc_40A7B9  +
jmp loc_40A7ED  +
xor ebp ebp +
jmp loc_40A7F6  +
inc eax  +
push eax  +
call HHA_3  +
mov ebp eax +
cmp ebp ebx +
jz loc_40AA30  +
cmp byte ptr [ebp+0] 0 +
jz loc_409C6D  +
cmp [esp+180h+var_15C] ebx +
jz loc_409C6D  +
push 3Ch  +
push ebp  +
call HHA_8  +
mov ebp eax +
cmp ebp ebx +
jnz loc_409CCB  +
mov ecx [esp+188h+var_124] +
lea eax [esp+188h+var_178] +
push eax  +
mov ecx [esp+ecx*8+18Ch+var_120] +
call HHA_33  +
cmp eax ebx +
jz loc_40A84E  +
mov edx [esp+18Ch+var_17C] +
push 3Ch  +
push edx  +
call HHA_8  +
mov ebp eax +
cmp ebp ebx +
jz loc_40A824  +
jmp loc_40A853  +
mov ebp offset String2 +
cmp ebp ebx +
jnz loc_409CCB  +
jmp loc_409C6D  +
mov edi [esp+134h+var_118] +
cmp [edi+94h] ebx +
jz loc_40A90C  +
mov eax [esp+134h+var_11C] +
mov [esp+134h+var_1C] 4 +
cmp eax ebx +
jz loc_40A886  +
push eax  +
call HHA_132  +
mov eax [esp+138h+var_128] +
mov [esp+138h+var_20] 3 +
cmp eax ebx +
jz loc_40A89C  +
push eax  +
call HHA_132  +
mov eax [esp+13Ch+var_F4] +
mov [esp+13Ch+var_24] 6 +
push eax  +
call HHA_132  +
mov ecx [esp+140h+var_E4] +
cmp ecx ebx +
mov esi ecx +
jz loc_40A8C6  +
call sub_40AB3F  +
push esi  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [esp+140h+var_F0] +
mov [esp+140h+var_28] 0 +
cmp eax ebx +
jz loc_40A8DC  +
push eax  +
call HHA_132  +
mov eax [esp+144h+var_E0] +
mov [esp+144h+var_2C] 0FFFFFFFFh +
cmp eax ebx +
jl loc_40AA26  +
lea ecx [esp+144h+var_E0] +
call HHA_321  +
cmp [esp+144h+var_E0] ebx +
jge loc_40A8F3  +
mov eax 1 +
jmp loc_40AAD0  +
cmp [esp+134h+var_10] ebx +
jnz loc_40A98A  +
mov edx [edi+14h] +
xor ecx ecx +
mov esi 1 +
dec edx  +
cmp edx esi +
jle loc_40A971  +
mov eax [edi+8] +
xor edx edx +
lea edi [ecx+1] +
mov eax [eax+esi*4] +
mov dl [eax+19h] +
cmp edx edi +
jle loc_40A93B  +
inc cl  +
mov [eax+19h] cl +
mov dl [eax+19h] +
mov edi [esp+134h+var_118] +
mov ecx edx +
and ecx 0FFh +
cmp [eax+16h] bx +
jz loc_40A968  +
mov ebp [edi+8] +
mov ebp [ebp+esi*4+4] +
cmp dl [ebp+19h] +
jb loc_40A968  +
mov dl [eax+1Bh] +
and dl 0FEh +
xor dl 1 +
mov [eax+1Bh] dl +
mov eax [edi+14h] +
inc esi  +
dec eax  +
cmp esi eax +
jl loc_40A924  +
mov eax [edi+14h] +
cmp eax 1 +
jle loc_40A98A  +
mov ecx [edi+8] +
mov ecx [ecx+eax*4-4] +
mov al [ecx+1Bh] +
and al 0FEh +
xor al 1 +
mov [ecx+1Bh] al +
mov eax [esp+134h+var_11C] +
mov [esp+134h+var_1C] 4 +
cmp eax ebx +
jz loc_40A9A0  +
push eax  +
call HHA_132  +
mov eax [esp+138h+var_128] +
mov [esp+138h+var_20] 3 +
cmp eax ebx +
jz loc_40A9B6  +
push eax  +
call HHA_132  +
mov edx [esp+13Ch+var_F4] +
mov [esp+13Ch+var_24] 7 +
push edx  +
call HHA_132  +
mov eax [esp+140h+var_E4] +
cmp eax ebx +
mov esi eax +
jz loc_40A9EE  +
mov eax [eax] +
mov ecx [eax+0Ch] +
push ecx  +
call HHA_132  +
mov edx [esi] +
push edx  +
call HHA_132  +
push esi  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [esp+148h+var_F8] +
mov [esp+148h+var_30] 0 +
cmp eax ebx +
jz loc_40AA04  +
push eax  +
call HHA_132  +
mov eax [esp+14Ch+var_E8] +
mov [esp+14Ch+var_34] 0FFFFFFFFh +
cmp eax ebx +
jl loc_40AA26  +
lea ecx [esp+14Ch+var_E8] +
call HHA_321  +
cmp [esp+14Ch+var_E8] ebx +
jge loc_40AA17  +
mov eax 1 +
jmp loc_40AAD0  +
mov eax [esp+18h] +
mov [esp+15Ch+var_44] 4 +
test eax eax +
jz loc_40AA46  +
push eax  +
call HHA_132  +
mov eax [esp+160h+var_150] +
mov [esp+160h+var_48] 3 +
test eax eax +
jz loc_40AA5C  +
push eax  +
call HHA_132  +
mov eax [esp+164h+var_11C] +
mov [esp+164h+var_4C] 8 +
push eax  +
call HHA_132  +
mov eax [esp+168h+var_10C] +
test eax eax +
mov esi eax +
jz loc_40AA94  +
mov ecx [eax] +
mov edx [ecx+0Ch] +
push edx  +
call HHA_132  +
mov eax [esi] +
push eax  +
call HHA_132  +
push esi  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [esp+170h+var_120] +
mov [esp+170h+var_58] 0 +
test eax eax +
jz loc_40AAAA  +
push eax  +
call HHA_132  +
mov eax [esp+174h+var_110] +
mov [esp+174h+var_5C] 0FFFFFFFFh +
test eax eax +
jl loc_40AACE  +
lea ecx [esp+174h+var_110] +
call HHA_321  +
mov eax [esp+174h+var_110] +
test eax eax +
jge loc_40AABD  +
xor eax eax +
mov ecx [esp+174h+var_64] +
pop edi  +
pop esi  +
pop ebp  +
mov large fs:0 ecx +
pop ebx  +
add esp 10Ch +
retn 0Ch  +
xor eax eax +
jmp loc_409D44  +
***
push 10h  +
mov eax [esi] +
push dword ptr [eax+0Ch]  +
call HHA_132  +
push dword ptr [esi]  +
call HHA_132  +
pop esi  +
retn   +
***
push 0FFFFFFFFh  +
push offset loc_433A3B  +
mov eax large fs:0 +
push eax  +
mov large fs:0 esp +
push ecx  +
push esi  +
mov esi ecx +
push edi  +
mov [esp+18h+var_10] esi +
mov eax [esi+20h] +
mov [esp+18h+var_4] 0 +
push eax  +
call HHA_132  +
mov edi [esi+34h] +
test edi edi +
jz loc_40ABB2  +
mov ecx [edi] +
mov edx [ecx+0Ch] +
push edx  +
call HHA_132  +
mov eax [edi] +
push eax  +
call HHA_132  +
push edi  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov esi [esi+28h] +
mov [esp+24h+var_10] 0FFFFFFFFh +
test esi esi +
jz loc_40ABC7  +
push esi  +
call HHA_132  +
mov ecx [esp+28h+var_1C] +
pop edi  +
mov large fs:0 ecx +
pop esi  +
add esp 10h +
retn   +
***
mov eax large fs:0 +
push 0FFFFFFFFh  +
push offset loc_433A7C  +
push eax  +
mov large fs:0 esp +
push ebx  +
push ebp  +
mov ebp [esp+14h+arg_0] +
push esi  +
push edi  +
mov eax [ebp+28h] +
push 1  +
push eax  +
mov ebx ecx +
push eax  +
call sub_40D1D0  +
mov eax [ebp+2Ch] +
test eax eax +
jz loc_40B60C  +
mov edi offset aTypeexclusive +
or ecx 0FFFFFFFFh +
xor eax eax +
mov esi [esp+1Ch+arg_4] +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aTypeexclusive  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_4] eax +
jnz loc_40B57D  +
mov edi offset aSaveexclusive +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aSaveexclusive  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_4] eax +
jnz loc_40B57D  +
mov edi offset aTypehidden +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aTypehidden  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_4] eax +
jnz loc_40B4EE  +
mov edi offset aSavehidden +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aSavehidden  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_4] eax +
jnz loc_40B4EE  +
mov edi offset aTypedesc +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
mov edi ecx +
push edi  +
push offset aTypedesc  +
push esi  +
call HHA_310  +
neg eax  +
sbb eax eax +
and eax edi +
test eax eax +
jnz loc_40B489  +
mov edi offset aSavetypedesc +
or ecx 0FFFFFFFFh +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aSavetypedesc  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+28h+var_4] eax +
jnz loc_40B489  +
mov edi offset aType +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aType  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+28h+var_4] eax +
jnz loc_40B42F  +
mov edi offset aSavetype +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aSavetype  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+28h+var_4] eax +
jnz loc_40B42F  +
mov edi offset aCategorydesc +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
mov edi ecx +
push edi  +
push offset aCategorydesc  +
push esi  +
call HHA_310  +
neg eax  +
sbb eax eax +
and eax edi +
test eax eax +
jz loc_40ADFE  +
mov eax [ebx+6Ch] +
test eax eax +
jnz loc_40ADBD  +
mov eax 1 +
jmp loc_40BF92  +
mov ecx [ebx+68h] +
mov edx [ecx+10h] +
mov ecx [eax+10h] +
dec edx  +
cmp edx ecx +
jle loc_40ADE7  +
push offset String2  +
push eax  +
call HHA_46  +
mov ecx [ebx+68h] +
mov eax [ebx+6Ch] +
mov edx [ecx+10h] +
mov ecx [eax+10h] +
dec edx  +
cmp edx ecx +
jg loc_40ADCB  +
mov eax [ebp+28h] +
mov ecx [ebx+6Ch] +
push eax  +
push ecx  +
call HHA_46  +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aCategory +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aCategory  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+34h+var_10] eax +
jz loc_40AECE  +
mov eax [ebx+68h] +
test eax eax +
jz loc_40AE4B  +
mov edx [ebp+28h] +
push edx  +
push eax  +
call HHA_50  +
test eax eax +
jz loc_40AE4B  +
mov eax 1 +
jmp loc_40BF92  +
mov eax [ebx+68h] +
test eax eax +
jnz loc_40AEB7  +
push 58h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [esp+34h+var_10] eax +
test eax eax +
mov [esp+34h+var_1C] 0 +
jz loc_40AE7A  +
push 4000h  +
mov ecx eax +
call HHA_216  +
jmp loc_40AE7C  +
xor eax eax +
or esi 0FFFFFFFFh +
push 58h  +
mov [esp+38h+var_1C] esi +
mov [ebx+68h] eax +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [esp+34h+var_10] eax +
test eax eax +
mov [esp+34h+var_1C] 1 +
jz loc_40AEAE  +
push 4000h  +
mov ecx eax +
call HHA_216  +
jmp loc_40AEB0  +
xor eax eax +
mov [esp+34h+var_1C] esi +
mov [ebx+6Ch] eax +
mov eax [ebp+28h] +
mov ecx [ebx+68h] +
push eax  +
push ecx  +
call HHA_46  +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aFramename +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aFramename  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+34h+var_10] eax +
jz loc_40AF6D  +
mov eax [ebx+0D8h] +
test eax eax +
jnz loc_40BF7D  +
mov ebp [ebp+28h] +
test ebp ebp +
jz loc_40AF13  +
cmp byte ptr [ebp+0] 0 +
jnz loc_40AF25  +
xor eax eax +
mov [ebx+0D8h] eax +
mov eax 1 +
jmp loc_40BF92  +
mov edi ebp +
or ecx 0FFFFFFFFh +
xor eax eax +
lea edx [ebx+4] +
scas   +
not ecx  +
push ecx  +
push edx  +
call HHA_108  +
mov edx eax +
mov edi ebp +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov ebp ecx +
mov edi edx +
mov eax edi +
shr ecx 2 +
movs   +
mov ecx ebp +
and ecx 3 +
movs   +
mov [ebx+0D8h] eax +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aWindowname +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aWindowname  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+34h+var_10] eax +
jz loc_40B00C  +
mov eax [ebx+0DCh] +
test eax eax +
jnz loc_40BF7D  +
mov ebp [ebp+28h] +
test ebp ebp +
jz loc_40AFB2  +
cmp byte ptr [ebp+0] 0 +
jnz loc_40AFC4  +
xor eax eax +
mov [ebx+0DCh] eax +
mov eax 1 +
jmp loc_40BF92  +
mov edi ebp +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
lea eax [ebx+4] +
push ecx  +
push eax  +
call HHA_108  +
mov edx eax +
mov edi ebp +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov ebp ecx +
mov edi edx +
mov eax edi +
shr ecx 2 +
movs   +
mov ecx ebp +
and ecx 3 +
movs   +
mov [ebx+0DCh] eax +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aImagetype +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aImagetype  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+34h+var_10] eax +
jz loc_40B078  +
mov edi offset aFolder +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
mov eax [ebp+28h] +
not ecx  +
dec ecx  +
push ecx  +
push offset aFolder  +
push eax  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+34h+var_10] eax +
jz loc_40BEAA  +
mov dword ptr [ebx+0B8h] 1 +
xor eax eax +
jmp loc_40BF92  +
mov edi offset aImagelist +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aImagelist  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+34h+var_10] eax +
jz loc_40B0ED  +
mov ebp [ebp+28h] +
or ecx 0FFFFFFFFh +
mov edi ebp +
xor eax eax +
scas   +
not ecx  +
push ecx  +
lea ecx [ebx+4] +
push ecx  +
call HHA_108  +
mov edx eax +
mov edi ebp +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov ebp ecx +
mov edi edx +
mov eax edi +
shr ecx 2 +
movs   +
mov ecx ebp +
and ecx 3 +
movs   +
mov [ebx+9Ch] eax +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aQuerytype +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aQuerytype  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+34h+var_10] eax +
jz loc_40B127  +
mov eax 1 +
mov [ebx+0BCh] eax +
jmp loc_40BF92  +
mov edi offset aBackground +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aBackground  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+34h+var_10] eax +
jz loc_40B169  +
mov ecx [ebp+28h] +
call HHA_196  +
mov [ebx+0ACh] eax +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aBackgroundImag +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aBackgroundImag  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+34h+var_10] eax +
jz loc_40B1DE  +
mov ebp [ebp+28h] +
or ecx 0FFFFFFFFh +
mov edi ebp +
xor eax eax +
scas   +
not ecx  +
lea eax [ebx+4] +
push ecx  +
push eax  +
call HHA_108  +
mov edx eax +
mov edi ebp +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov ebp ecx +
mov edi edx +
mov eax edi +
shr ecx 2 +
movs   +
mov ecx ebp +
and ecx 3 +
movs   +
mov [ebx+0C8h] eax +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aForeground +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aForeground  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+34h+var_10] eax +
jz loc_40B220  +
mov ecx [ebp+28h] +
call HHA_196  +
mov [ebx+0B0h] eax +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aFont +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aFont  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+34h+var_10] eax +
jz loc_40B295  +
mov ebp [ebp+28h] +
or ecx 0FFFFFFFFh +
mov edi ebp +
xor eax eax +
scas   +
not ecx  +
lea eax [ebx+4] +
push ecx  +
push eax  +
call HHA_108  +
mov edx eax +
mov edi ebp +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov ebp ecx +
mov edi edx +
mov eax edi +
shr ecx 2 +
movs   +
mov ecx ebp +
and ecx 3 +
movs   +
mov [ebx+0B4h] eax +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aNumberimages +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aNumberimages  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+34h+var_10] eax +
jz loc_40B2D7  +
mov ecx [ebp+28h] +
call HHA_196  +
mov [ebx+0A4h] eax +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aColorMask +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aColorMask  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+34h+var_10] eax +
jz loc_40B319  +
mov ecx [ebp+28h] +
call HHA_196  +
mov [ebx+0A8h] eax +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aImageWidth +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aImageWidth  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+34h+var_10] eax +
jz loc_40B35B  +
mov ecx [ebp+28h] +
call HHA_196  +
mov [ebx+0A0h] eax +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aWindowStyles +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aWindowStyles  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+34h+var_10] eax +
jz loc_40B3A6  +
cmp dword ptr [ebx+0C0h] 0FFFFFFFFh +
jnz loc_40B3A6  +
mov ecx [ebp+28h] +
call HHA_196  +
mov [ebx+0C0h] eax +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aExwindowStyles +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aExwindowStyles  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+34h+var_10] eax +
jz loc_40B3E8  +
mov ecx [ebp+28h] +
call HHA_196  +
mov [ebx+0C4h] eax +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aAutoGenerated +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aAutoGenerated  +
push esi  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+34h+var_10] eax +
jz loc_40BEAA  +
mov eax [ebp+28h] +
push eax  +
call HHA_314  +
mov [ebx+0D0h] eax +
mov eax 1 +
jmp loc_40BF92  +
mov eax [ebx+60h] +
test eax eax +
jz loc_40B453  +
mov ecx [ebp+28h] +
push ecx  +
push eax  +
call HHA_50  +
test eax eax +
jz loc_40B453  +
mov edx [ebp+28h] +
mov eax [ebx+60h] +
push edx  +
push eax  +
call HHA_50  +
jmp loc_40B45E  +
mov ecx [ebp+28h] +
push ecx  +
mov ecx ebx +
call sub_40C6F0  +
mov ecx [ebx+68h] +
test ecx ecx +
jz loc_40BF7D  +
mov ecx [ecx+10h] +
dec ecx  +
test ecx ecx +
jle loc_40BF7D  +
dec ecx  +
push eax  +
push ecx  +
mov ecx ebx +
call sub_430B0B  +
mov eax 1 +
jmp loc_40BF92  +
mov eax [ebx+64h] +
test eax eax +
jnz loc_40B49A  +
mov eax 1 +
jmp loc_40BF92  +
mov edx [ebx+60h] +
mov ecx [edx+10h] +
mov edx [eax+10h] +
dec ecx  +
cmp ecx edx +
jle loc_40B4C4  +
push offset String2  +
push eax  +
call HHA_46  +
mov edx [ebx+60h] +
mov eax [ebx+64h] +
mov ecx [edx+10h] +
mov edx [eax+10h] +
dec ecx  +
cmp ecx edx +
jg loc_40B4A8  +
mov eax [ebx+64h] +
mov ecx [ebx+60h] +
mov edx [eax+10h] +
mov ecx [ecx+10h] +
dec edx  +
dec ecx  +
cmp ecx edx +
jz loc_40BF7D  +
mov edx [ebp+28h] +
push edx  +
push eax  +
call HHA_46  +
mov eax 1 +
jmp loc_40BF92  +
mov eax [ebx+60h] +
test eax eax +
jz loc_40B53B  +
mov ecx [ebp+28h] +
push ecx  +
push eax  +
call HHA_50  +
test eax eax +
jz loc_40B53B  +
mov edx [ebp+28h] +
mov eax [ebx+60h] +
push edx  +
push eax  +
call HHA_50  +
mov ecx [ebx+68h] +
test ecx ecx +
jz loc_40BF7D  +
mov ecx [ecx+10h] +
dec ecx  +
test ecx ecx +
jle loc_40BF7D  +
dec ecx  +
push eax  +
push ecx  +
mov ecx ebx +
call sub_430B0B  +
mov eax 1 +
jmp loc_40BF92  +
mov ecx [ebp+28h] +
push ecx  +
mov ecx ebx +
call sub_40C6F0  +
mov edx [ebx+7Ch] +
mov esi eax +
push edx  +
push esi  +
call sub_430E0B  +
mov eax [ebx+68h] +
test eax eax +
jz loc_40BF7D  +
mov eax [eax+10h] +
dec eax  +
test eax eax +
jle loc_40BF7D  +
dec eax  +
push esi  +
push eax  +
mov ecx ebx +
call sub_430B0B  +
mov eax 1 +
jmp loc_40BF92  +
mov eax [ebx+60h] +
test eax eax +
jz loc_40B5CA  +
mov ecx [ebp+28h] +
push ecx  +
push eax  +
call HHA_50  +
test eax eax +
jz loc_40B5CA  +
mov edx [ebp+28h] +
mov eax [ebx+60h] +
push edx  +
push eax  +
call HHA_50  +
mov ecx [ebx+68h] +
test ecx ecx +
jz loc_40BF7D  +
mov ecx [ecx+10h] +
dec ecx  +
test ecx ecx +
jle loc_40BF7D  +
dec ecx  +
push eax  +
push ecx  +
mov ecx ebx +
call sub_430B0B  +
mov eax 1 +
jmp loc_40BF92  +
mov ecx [ebp+28h] +
push ecx  +
mov ecx ebx +
call sub_40C6F0  +
mov edx [ebx+78h] +
mov esi eax +
push edx  +
push esi  +
call sub_430E0B  +
mov eax [ebx+68h] +
test eax eax +
jz loc_40BF7D  +
mov eax [eax+10h] +
dec eax  +
test eax eax +
jle loc_40BF7D  +
dec eax  +
push esi  +
push eax  +
mov ecx ebx +
call sub_430B0B  +
mov eax 1 +
jmp loc_40BF92  +
mov eax [ebx+94h] +
test eax eax +
jz loc_40B786  +
mov edi offset aSectionTitle +
or ecx 0FFFFFFFFh +
xor eax eax +
mov esi ds:_strnicmp +
scas   +
mov eax [esp+1Ch+arg_4] +
not ecx  +
dec ecx  +
push ecx  +
push offset aSectionTitle  +
push eax  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jnz loc_40B6A7  +
mov edi offset aName +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
mov ecx [esp+20h+arg_4] +
push offset aName  +
push ecx  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jnz loc_40B6A7  +
mov edi offset aKeyword +
or ecx 0FFFFFFFFh +
xor eax eax +
mov edx [esp+1Ch+arg_4] +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aKeyword  +
push edx  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jz loc_40B812  +
jmp loc_40B7CA  +
mov eax [ebp+4] +
test eax eax +
jnz loc_40B6F4  +
mov esi [ebp+28h] +
or ecx 0FFFFFFFFh +
mov edi esi +
add ebx 4 +
scas   +
not ecx  +
push ecx  +
push ebx  +
call HHA_108  +
mov edx eax +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov ebx ecx +
mov edi edx +
mov eax edi +
shr ecx 2 +
movs   +
mov ecx ebx +
and ecx 3 +
movs   +
mov [ebp+4] eax +
mov eax 1 +
jmp loc_40BF92  +
mov ecx [ebp+34h] +
mov edx [ecx] +
cmp dword ptr [edx] 0 +
jz loc_40B71D  +
mov edx [ecx+8] +
test edx edx +
jz loc_40B711  +
mov eax [ebp+30h] +
push ebp  +
push eax  +
call sub_40C050  +
jmp loc_40B71D  +
push 0FFFFFFFFh  +
add ebx 4 +
push eax  +
push ebx  +
call HHA_139  +
mov ecx [ebp+34h] +
mov esi [ebp+28h] +
mov edx [ecx] +
mov eax [edx] +
test eax eax +
jz loc_40B73A  +
push 0FFFFFFFFh  +
push eax  +
mov eax [ebp+30h] +
add eax 4 +
push eax  +
call HHA_139  +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
push ecx  +
mov ecx [ebp+30h] +
add ecx 4 +
push ecx  +
call HHA_108  +
mov edx eax +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov ebx ecx +
mov edi edx +
mov eax edi +
shr ecx 2 +
movs   +
mov ecx ebx +
and ecx 3 +
movs   +
mov ecx [ebp+34h] +
mov edx [ecx] +
mov [edx] eax +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aName +
or ecx 0FFFFFFFFh +
xor eax eax +
mov esi ds:_strnicmp +
scas   +
mov eax [esp+1Ch+arg_4] +
not ecx  +
dec ecx  +
push ecx  +
push offset aName  +
push eax  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jz loc_40B812  +
mov ecx [ebp+34h] +
mov eax [ecx+8] +
test eax eax +
jz loc_40B7CA  +
mov edx [ebp+30h] +
push ebp  +
push edx  +
call sub_40C050  +
mov esi [ebp+28h] +
or ecx 0FFFFFFFFh +
mov edi esi +
xor eax eax +
scas   +
not ecx  +
add ebx 4 +
push ecx  +
push ebx  +
call HHA_108  +
mov edx eax +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov ebx ecx +
mov edi edx +
mov eax edi +
shr ecx 2 +
movs   +
mov ecx ebx +
and ecx 3 +
movs   +
mov [ebp+4] eax +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aLocal +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
mov eax [esp+1Ch+arg_4] +
not ecx  +
dec ecx  +
push ecx  +
push offset aLocal  +
push eax  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jz loc_40B8C9  +
mov ecx [ebp+34h] +
mov eax [ecx+8] +
test eax eax +
jz loc_40B854  +
mov edx [ebp+30h] +
push ebp  +
push edx  +
call sub_40C050  +
mov eax [ebp+28h] +
test eax eax +
jz loc_40B860  +
cmp byte ptr [eax] 0 +
jnz loc_40B864  +
xor eax eax +
jmp loc_40B8AD  +
push eax  +
call HHA_3  +
test eax eax +
mov esi eax +
jnz loc_40B875  +
mov esi offset String2 +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
add ebx 4 +
scas   +
not ecx  +
push ecx  +
push ebx  +
call HHA_108  +
mov edx eax +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov ebx ecx +
mov edi edx +
mov eax edi +
shr ecx 2 +
movs   +
mov ecx ebx +
and ecx 3 +
movs   +
mov ecx [ebp+34h] +
mov ecx [ecx] +
cmp [ecx+8] eax +
jnz loc_40B8C1  +
mov eax 1 +
jmp loc_40BF92  +
mov [ecx+4] eax +
jmp loc_40BF87  +
mov edi offset aUrl +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
mov eax [esp+1Ch+arg_4] +
not ecx  +
dec ecx  +
push ecx  +
push offset aUrl  +
push eax  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jnz loc_40BEFD  +
mov edi offset aSecondary +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
mov ecx [esp+20h+arg_4] +
push offset aSecondary  +
push ecx  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jnz loc_40BEFD  +
mov edi offset aType +
or ecx 0FFFFFFFFh +
xor eax eax +
mov edx [esp+1Ch+arg_4] +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aType  +
push edx  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jnz loc_40BEB1  +
mov edi offset aTypeexclusive +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
mov eax [esp+1Ch+arg_4] +
not ecx  +
dec ecx  +
push ecx  +
push offset aTypeexclusive  +
push eax  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jnz loc_40BEB1  +
mov edi offset aTypehidden +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
mov ecx [esp+20h+arg_4] +
push offset aTypehidden  +
push ecx  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jnz loc_40BEB1  +
mov edi offset aNew +
or ecx 0FFFFFFFFh +
xor eax eax +
mov edx [esp+1Ch+arg_4] +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aNew  +
push edx  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jz loc_40B9EB  +
mov al [ebp+1Bh] +
or al 2 +
mov [ebp+1Bh] al +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aImagenumber +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
mov eax [esp+1Ch+arg_4] +
not ecx  +
dec ecx  +
push ecx  +
push offset aImagenumber  +
push eax  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jz loc_40BA2A  +
mov ecx [ebp+28h] +
call HHA_196  +
mov [ebp+18h] al +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aDisplay_0 +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
mov ecx [esp+20h+arg_4] +
push offset aDisplay_0  +
push ecx  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jz loc_40BA93  +
mov edi offset aNo +
or ecx 0FFFFFFFFh +
xor eax eax +
mov edx [ebp+28h] +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aNo  +
push edx  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_4] eax +
jz loc_40BF7D  +
mov al [ebp+1Bh] +
or al 4 +
mov [ebp+1Bh] al +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aFramename +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
mov eax [esp+1Ch+arg_4] +
not ecx  +
dec ecx  +
push ecx  +
push offset aFramename  +
push eax  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jz loc_40BB66  +
mov eax [ebp+28h] +
test eax eax +
jz loc_40BACD  +
cmp byte ptr [eax] 0 +
jnz loc_40BADD  +
xor eax eax +
mov [ebp+12h] ax +
mov eax 1 +
jmp loc_40BF92  +
push eax  +
call HHA_3  +
mov edi eax +
push edi  +
call sub_40C160  +
mov esi eax +
mov eax [ebx+0D4h] +
test eax eax +
jnz loc_40BB2F  +
push 58h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [esp+20h+arg_0] eax +
test eax eax +
mov [esp+20h+var_8] 2 +
jz loc_40BB1F  +
push 4000h  +
mov ecx eax +
call HHA_216  +
jmp loc_40BB21  +
xor eax eax +
mov [esp+20h+var_8] 0FFFFFFFFh +
mov [ebx+0D4h] eax +
mov ecx [ebx+0D4h] +
push esi  +
push ecx  +
call HHA_53  +
test eax eax +
jg loc_40BB58  +
mov eax [ebx+0D4h] +
push edi  +
push esi  +
push eax  +
call HHA_48  +
mov edx [ebx+0D4h] +
mov eax [edx+10h] +
dec eax  +
mov [ebp+12h] ax +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aWindowname +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
mov eax [esp+1Ch+arg_4] +
not ecx  +
dec ecx  +
push ecx  +
push offset aWindowname  +
push eax  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jz loc_40BC39  +
mov eax [ebp+28h] +
test eax eax +
jz loc_40BBA0  +
cmp byte ptr [eax] 0 +
jnz loc_40BBB0  +
xor eax eax +
mov [ebp+10h] ax +
mov eax 1 +
jmp loc_40BF92  +
push eax  +
call HHA_3  +
mov edi eax +
push edi  +
call sub_40C160  +
mov esi eax +
mov eax [ebx+0D4h] +
test eax eax +
jnz loc_40BC02  +
push 58h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [esp+20h+arg_0] eax +
test eax eax +
mov [esp+20h+var_8] 3 +
jz loc_40BBF2  +
push 4000h  +
mov ecx eax +
call HHA_216  +
jmp loc_40BBF4  +
xor eax eax +
mov [esp+20h+var_8] 0FFFFFFFFh +
mov [ebx+0D4h] eax +
mov ecx [ebx+0D4h] +
push esi  +
push ecx  +
call HHA_53  +
test eax eax +
jg loc_40BC2B  +
mov eax [ebx+0D4h] +
push edi  +
push esi  +
push eax  +
call HHA_48  +
mov edx [ebx+0D4h] +
mov eax [edx+10h] +
dec eax  +
mov [ebp+10h] ax +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aSeeAlso +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
mov eax [esp+1Ch+arg_4] +
not ecx  +
dec ecx  +
push ecx  +
push offset aSeeAlso  +
push eax  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jz loc_40BCDC  +
mov eax [ebp+28h] +
test eax eax +
jz loc_40BC6F  +
cmp byte ptr [eax] 0 +
jnz loc_40BC73  +
xor eax eax +
jmp loc_40BCBC  +
push eax  +
call HHA_3  +
test eax eax +
mov esi eax +
jnz loc_40BC84  +
mov esi offset String2 +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
add ebx 4 +
scas   +
not ecx  +
push ecx  +
push ebx  +
call HHA_108  +
mov edx eax +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov ebx ecx +
mov edi edx +
mov eax edi +
shr ecx 2 +
movs   +
mov ecx ebx +
and ecx 3 +
movs   +
mov ecx [ebp+34h] +
mov edx [ecx] +
mov [edx+4] eax +
mov al [ebp+1Bh] +
mov ecx [ebp+34h] +
or al 8 +
mov [ebp+1Bh] al +
mov eax 1 +
mov [ecx+8] eax +
jmp loc_40BF92  +
mov edi offset aSendevent +
or ecx 0FFFFFFFFh +
xor eax eax +
mov edx [esp+1Ch+arg_4] +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aSendevent  +
push edx  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jz loc_40BD8A  +
mov eax [ebp+28h] +
test eax eax +
jz loc_40BD16  +
cmp byte ptr [eax] 0 +
jnz loc_40BD1A  +
xor eax eax +
jmp loc_40BD63  +
push eax  +
call HHA_3  +
test eax eax +
mov esi eax +
jnz loc_40BD2B  +
mov esi offset String2 +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
add ebx 4 +
scas   +
not ecx  +
push ecx  +
push ebx  +
call HHA_108  +
mov edx eax +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov ebx ecx +
mov edi edx +
mov eax edi +
shr ecx 2 +
movs   +
mov ecx ebx +
and ecx 3 +
movs   +
mov ecx [ebp+34h] +
push ebp  +
mov edx [ecx] +
mov [edx+4] eax +
mov eax [ebp+30h] +
mov ecx [ebp+34h] +
push eax  +
call sub_40C050  +
mov al [ebp+1Bh] +
or al 20h +
mov [ebp+1Bh] al +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aSendmessage +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
mov ecx [esp+20h+arg_4] +
push offset aSendmessage  +
push ecx  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_0] eax +
jz loc_40BE38  +
mov eax [ebp+28h] +
test eax eax +
jz loc_40BDC4  +
cmp byte ptr [eax] 0 +
jnz loc_40BDC8  +
xor eax eax +
jmp loc_40BE11  +
push eax  +
call HHA_3  +
test eax eax +
mov esi eax +
jnz loc_40BDD9  +
mov esi offset String2 +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
add ebx 4 +
scas   +
not ecx  +
push ecx  +
push ebx  +
call HHA_108  +
mov edx eax +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov ebx ecx +
mov edi edx +
mov eax edi +
shr ecx 2 +
movs   +
mov ecx ebx +
and ecx 3 +
movs   +
mov ecx [ebp+34h] +
push ebp  +
mov edx [ecx] +
mov [edx+4] eax +
mov eax [ebp+30h] +
mov ecx [ebp+34h] +
push eax  +
call sub_40C050  +
mov al [ebp+1Bh] +
or al 40h +
mov [ebp+1Bh] al +
mov eax 1 +
jmp loc_40BF92  +
mov edi offset aComment +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
mov ecx [esp+20h+arg_4] +
push offset aComment  +
push ecx  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch+arg_4] eax +
jz loc_40BEAA  +
mov esi [ebp+28h] +
or ecx 0FFFFFFFFh +
mov edi esi +
xor eax eax +
scas   +
not ecx  +
add ebx 4 +
push ecx  +
push ebx  +
call HHA_108  +
mov edx eax +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov ebx ecx +
mov edi edx +
mov eax edi +
shr ecx 2 +
movs   +
mov ecx ebx +
and ecx 3 +
movs   +
mov [ebp+8] eax +
mov eax 1 +
jmp loc_40BF92  +
xor eax eax +
jmp loc_40BF92  +
mov ecx [ebp+34h] +
mov eax [ecx+8] +
test eax eax +
jz loc_40BEC5  +
mov eax [ebp+30h] +
push ebp  +
push eax  +
call sub_40C050  +
mov eax [ebx+60h] +
test eax eax +
jz loc_40BF7D  +
mov ecx [ebp+28h] +
push ecx  +
mov ecx ebx +
call sub_40D020  +
cmp eax 0FFFFFFFFh +
jz loc_40BF7D  +
mov edx [ebp+34h] +
mov ecx [edx] +
mov edx [ecx+0Ch] +
push edx  +
push eax  +
call sub_430E0B  +
mov eax 1 +
jmp loc_40BF92  +
mov ecx [ebp+34h] +
mov eax [ecx+8] +
test eax eax +
jz loc_40BF1A  +
mov eax [ecx] +
mov edx [eax+8] +
test edx edx +
jz loc_40BF1A  +
mov edx [ebp+30h] +
push ebp  +
push edx  +
call sub_40C050  +
mov eax [ebp+28h] +
test eax eax +
jz loc_40BF26  +
cmp byte ptr [eax] 0 +
jnz loc_40BF2A  +
xor eax eax +
jmp loc_40BF73  +
push eax  +
call HHA_3  +
test eax eax +
mov esi eax +
jnz loc_40BF3B  +
mov esi offset String2 +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
add ebx 4 +
scas   +
not ecx  +
push ecx  +
push ebx  +
call HHA_108  +
mov edx eax +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov ebx ecx +
mov edi edx +
mov eax edi +
shr ecx 2 +
movs   +
mov ecx ebx +
and ecx 3 +
movs   +
mov ecx [ebp+34h] +
mov ecx [ecx] +
cmp [ecx+4] eax +
jnz loc_40BF84  +
mov eax 1 +
jmp loc_40BF92  +
mov [ecx+8] eax +
mov edx [ebp+34h] +
mov eax 1 +
mov [edx+8] eax +
mov ecx [esp+28h+var_18] +
pop edi  +
pop esi  +
pop ebp  +
mov large fs:0 ecx +
pop ebx  +
add esp 0Ch +
retn 0Ch  +
***
mov eax [esp+arg_0] +
push ebx  +
push esi  +
push edi  +
test eax eax +
mov ebx ecx +
jz loc_40BFC2  +
cmp byte ptr [eax] 0 +
jnz loc_40BFCA  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
push eax  +
call HHA_3  +
test eax eax +
mov esi eax +
jnz loc_40BFDB  +
mov esi offset String2 +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
add ebx 4 +
scas   +
not ecx  +
push ecx  +
push ebx  +
call HHA_108  +
mov edx eax +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov ebx ecx +
mov edi edx +
mov eax edi +
shr ecx 2 +
movs   +
mov ecx ebx +
and ecx 3 +
movs   +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
mov edx [esp+arg_4] +
push esi  +
push edi  +
mov edi edx +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
mov eax [esp+8+arg_0] +
not ecx  +
dec ecx  +
mov esi ecx +
push esi  +
push edx  +
push eax  +
call HHA_310  +
neg eax  +
sbb eax eax +
pop edi  +
and eax esi +
pop esi  +
retn 8  +
***
push ebx  +
push ebp  +
mov ebp [esp+0Ch+arg_4] +
mov [esp+0Ch+var_4] ecx +
add eax 4 +
movsx ecx word ptr [ebp+16h] +
inc ecx  +
push esi  +
shl ecx 4 +
push edi  +
push ecx  +
push eax  +
mov [esp+1Ch+arg_4] eax +
call HHA_108  +
mov ebx eax +
mov ax [ebp+16h] +
test ax ax +
jz loc_40C0B1  +
movsx ecx ax +
mov esi [ebp+1Ch] +
mov edi ebx +
shl ecx 4 +
mov edx ecx +
shr ecx 2 +
movs   +
mov ecx edx +
mov edx [esp+1Ch] +
and ecx 3 +
movs   +
movsx eax word ptr [ebp+16h] +
mov ecx [ebp+1Ch] +
shl eax 4 +
push eax  +
push ecx  +
push edx  +
call HHA_139  +
movsx eax word ptr [ebp+16h] +
mov ecx [esp+28h+var_18] +
xor esi esi +
shl eax 4 +
mov edx [ecx] +
add eax ebx +
mov ecx [edx] +
mov [eax] ecx +
mov ecx [edx+4] +
mov [eax+4] ecx +
mov ecx [edx+8] +
mov [eax+8] ecx +
mov edx [edx+0Ch] +
mov [eax+0Ch] edx +
inc word ptr [ebp+16h]  +
mov ax [ebp+16h] +
mov [ebp+1Ch] ebx +
movsx edi ax +
test edi edi +
jle loc_40C11D  +
mov eax [esp+28h+var_10] +
mov eax [eax+74h] +
shl eax 2 +
cdq   +
and edx 3 +
add eax edx +
sar eax 2 +
add ebx 0Ch +
mov edx [ebx] +
xor ecx ecx +
test eax eax +
jle loc_40C115  +
cmp dword ptr [edx] 0 +
jnz loc_40C121  +
add edx 4 +
inc ecx  +
cmp ecx eax +
jl loc_40C108  +
add ebx 10h +
inc esi  +
cmp esi edi +
jl loc_40C100  +
or byte ptr [ebp+1Bh] 10h +
mov esi [esp+28h+var_18] +
xor ecx ecx +
mov eax [esp+28h+var_10] +
mov edx [esi] +
mov [edx] ecx +
mov [edx+4] ecx +
mov [edx+8] ecx +
mov [edx+0Ch] ecx +
mov ecx [eax+74h] +
shl ecx 2 +
push ecx  +
call HHA_135  +
mov edx [esi] +
pop edi  +
mov [edx+0Ch] eax +
mov dword ptr [esi+8] 0 +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn 8  +
***
mov ebp [esp+arg_0] +
push esi  +
push edi  +
mov edi ebp +
or ecx 0FFFFFFFFh +
xor eax eax +
xor edx edx +
xor esi esi +
scas   +
not ecx  +
dec ecx  +
test ecx ecx +
jle loc_40C1C6  +
mov bl [esi+ebp] +
cmp bl 2Fh +
jnz loc_40C194  +
mov eax edx +
shl eax 3 +
sub eax edx +
lea eax [eax+eax*2] +
lea edx [edx+eax*2+2Ch] +
jmp loc_40C1C1  +
cmp bl 5Ah +
mov eax edx +
jg loc_40C1AF  +
shl eax 3 +
sub eax edx +
lea eax [eax+eax*2] +
lea edx [edx+eax*2] +
movsx eax bl +
lea edx [edx+eax-30h] +
jmp loc_40C1C1  +
shl eax 3 +
sub eax edx +
lea eax [eax+eax*2] +
lea edx [edx+eax*2] +
movsx eax bl +
lea edx [edx+eax-50h] +
inc esi  +
cmp esi ecx +
jl loc_40C17C  +
test edx edx +
mov eax 1 +
jz loc_40C1D1  +
mov eax edx +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 4  +
***
mov eax large fs:0 +
push eax  +
mov large fs:0 esp +
push ecx  +
mov eax [esp+10h+arg_0] +
push ebx  +
push ebp  +
mov ebx ecx +
push esi  +
push edi  +
test eax eax +
mov [esp+20h+var_10] ebx +
jz loc_40C20D  +
cmp byte ptr [eax] 0 +
jnz loc_40C214  +
xor eax eax +
jmp loc_40C2F4  +
push eax  +
call HHA_3  +
mov ebp eax +
or ecx 0FFFFFFFFh +
mov edi ebp +
xor eax eax +
xor edx edx +
xor esi esi +
scas   +
not ecx  +
dec ecx  +
test ecx ecx +
jle loc_40C27E  +
mov bl [esi+ebp] +
cmp bl 2Fh +
jnz loc_40C248  +
mov eax edx +
shl eax 3 +
sub eax edx +
lea eax [eax+eax*2] +
lea edx [edx+eax*2+2Ch] +
jmp loc_40C275  +
cmp bl 5Ah +
mov eax edx +
jg loc_40C263  +
shl eax 3 +
sub eax edx +
lea eax [eax+eax*2] +
lea edx [edx+eax*2] +
movsx eax bl +
lea edx [edx+eax-30h] +
jmp loc_40C275  +
shl eax 3 +
sub eax edx +
lea eax [eax+eax*2] +
lea edx [edx+eax*2] +
movsx eax bl +
lea edx [edx+eax-50h] +
inc esi  +
cmp esi ecx +
jl loc_40C230  +
mov ebx [esp+24h+var_14] +
test edx edx +
mov esi 1 +
jz loc_40C289  +
mov esi edx +
mov eax [ebx+0D4h] +
test eax eax +
jnz loc_40C2CB  +
push 58h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [esp+24h] eax +
test eax eax +
mov [esp+24h+var_8] 0 +
jz loc_40C2BB  +
push 4000h  +
mov ecx eax +
call HHA_216  +
jmp loc_40C2BD  +
xor eax eax +
mov [esp+24h+var_8] 0FFFFFFFFh +
mov [ebx+0D4h] eax +
mov ecx [ebx+0D4h] +
push esi  +
push ecx  +
call HHA_53  +
test eax eax +
jg loc_40C2F4  +
mov eax [ebx+0D4h] +
push ebp  +
push esi  +
push eax  +
call HHA_48  +
mov edx [ebx+0D4h] +
mov eax [edx+10h] +
dec eax  +
mov ecx [esp+38h+var_24] +
pop edi  +
pop esi  +
pop ebp  +
mov large fs:0 ecx +
pop ebx  +
add esp 10h +
retn 4  +
***
mov eax [esp+arg_8] +
push ebx  +
push ebp  +
push esi  +
push edi  +
push 22h  +
push eax  +
call HHA_8  +
test eax eax +
mov ebp [esp+18h] +
jnz loc_40C351  +
mov esi [esp+18h+var_4] +
push ebp  +
mov ecx [esi] +
mov ecx [esi+ecx*8+4] +
call HHA_33  +
test eax eax +
jz loc_40C34D  +
mov edx [ebp+0] +
push 22h  +
push edx  +
call HHA_8  +
test eax eax +
jz loc_40C328  +
jmp loc_40C355  +
xor ebx ebx +
jmp loc_40C35E  +
mov esi [esp+18h+var_4] +
inc eax  +
push eax  +
call HHA_3  +
mov ebx eax +
test ebx ebx +
jnz loc_40C36B  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 10h  +
mov edi offset aValue +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push offset aValue  +
push ebx  +
call ds:_strnicmp  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [esp+1Ch] eax +
jnz loc_40C3D8  +
push offset aValue  +
push ebx  +
call HHA_1  +
mov ebx eax +
test ebx ebx +
jnz loc_40C3D8  +
mov eax [esi] +
push ebp  +
mov ecx [esi+eax*8+4] +
call HHA_33  +
test eax eax +
jnz loc_40C3BD  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 10h  +
mov ecx [ebp+0] +
push offset aValue  +
push ecx  +
call HHA_1  +
mov ebx eax +
test ebx ebx +
jnz loc_40C3D8  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 10h  +
push 22h  +
push ebx  +
call HHA_8  +
test eax eax +
jnz loc_40C407  +
mov edx [esi] +
push ebp  +
mov ecx [esi+edx*8+4] +
call HHA_33  +
test eax eax +
jz loc_40C51F  +
mov eax [ebp+0] +
push 22h  +
push eax  +
call HHA_8  +
test eax eax +
jz loc_40C3E4  +
inc eax  +
push eax  +
call HHA_3  +
mov [esp+34h+var_18] eax +
mov eax [esp+34h+var_18] +
test eax eax +
jnz loc_40C423  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 10h  +
mov ebx [esp+34h+var_14] +
cmp dword ptr [ebx] 0 +
jnz loc_40C438  +
push 100h  +
call HHA_133  +
mov [ebx] eax +
mov edi [ebx] +
push edi  +
call HHA_22  +
mov esi eax +
mov ecx [esp+3Ch+var_20] +
add esi edi +
mov al [ecx] +
cmp al 22h +
jz loc_40C4C4  +
test al al +
jnz loc_40C46F  +
mov eax [esp+3Ch+var_28] +
push ebp  +
mov ecx [eax] +
mov ecx [eax+ecx*8+4] +
call HHA_33  +
test eax eax +
jz loc_40C4BB  +
mov edx [ebp+0] +
mov [esp+40h+var_24] edx +
jmp loc_40C4AF  +
mov [edi] al +
inc edi  +
inc ecx  +
cmp edi esi +
mov [esp+3Ch+var_20] ecx +
jb loc_40C4AF  +
mov eax [ebx] +
sub esi eax +
sub edi eax +
add esi 80h +
test eax eax +
push esi  +
jnz loc_40C493  +
call HHA_133  +
jmp loc_40C499  +
push eax  +
call HHA_131  +
add edi eax +
mov [ebx] eax +
test eax eax +
jz loc_40C4A9  +
push eax  +
call HHA_22  +
jmp loc_40C4AB  +
xor eax eax +
mov esi [ebx] +
add esi eax +
mov ecx [esp+44h+var_28] +
mov al [ecx] +
cmp al 22h +
jnz loc_40C44E  +
jmp loc_40C4C4  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 10h  +
push 3Eh  +
push ecx  +
mov byte ptr [edi] 0 +
call HHA_8  +
test eax eax +
jnz loc_40C511  +
mov eax [esp+44h+var_30] +
test eax eax +
jz loc_40C508  +
mov ecx [eax] +
push ebp  +
mov ecx [eax+ecx*8+4] +
call HHA_33  +
test eax eax +
jz loc_40C508  +
mov edx [ebp+0] +
push 3Eh  +
push edx  +
call HHA_8  +
test eax eax +
jz loc_40C4D3  +
inc eax  +
push eax  +
call HHA_3  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 10h  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 10h  +
inc eax  +
push eax  +
call HHA_3  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 10h  +
mov [esp+28h+var_C] 0 +
jmp loc_40C412  +
***
mov eax [esp+arg_8] +
push ebx  +
push ebp  +
push esi  +
push edi  +
push eax  +
call HHA_3  +
mov esi eax +
push 4  +
push offset aType_0  +
push esi  +
call HHA_310  +
test eax eax +
mov ebx [esp+20h+var_8] +
mov ebp [esp+20h+var_C] +
jz loc_40C59C  +
push offset aType_0  +
push esi  +
call HHA_1  +
mov esi eax +
test esi esi +
jnz loc_40C59C  +
mov ecx [ebp+0] +
push ebx  +
mov ecx [ebp+ecx*8+4] +
call HHA_33  +
test eax eax +
jnz loc_40C582  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 10h  +
mov edx [ebx] +
push offset aType_0  +
push edx  +
call HHA_1  +
mov esi eax +
test esi esi +
jnz loc_40C59C  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 10h  +
push 22h  +
push esi  +
call HHA_8  +
test eax eax +
jnz loc_40C5CB  +
mov eax [ebp+0] +
push ebx  +
mov ecx [ebp+eax*8+4] +
call HHA_33  +
test eax eax +
jz loc_40C6DB  +
mov eax [ebx] +
push 22h  +
push eax  +
call HHA_8  +
test eax eax +
jz loc_40C5A8  +
inc eax  +
push eax  +
call HHA_3  +
mov [esp+38h+var_1C] eax +
mov eax [esp+38h+var_1C] +
test eax eax +
jnz loc_40C5E7  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 10h  +
mov esi [esp+38h+var_18] +
cmp dword ptr [esi] 0 +
jnz loc_40C5FC  +
push 100h  +
call HHA_133  +
mov [esi] eax +
mov edi [esi] +
push edi  +
call HHA_22  +
mov esi eax +
mov ecx [esp+40h+var_24] +
add esi edi +
mov al [ecx] +
cmp al 22h +
jz loc_40C684  +
test al al +
jnz loc_40C62F  +
mov ecx [ebp+0] +
push ebx  +
mov ecx [ebp+ecx*8+4] +
call HHA_33  +
test eax eax +
jz loc_40C67B  +
mov edx [ebx] +
mov [esp+44h+var_28] edx +
jmp loc_40C66F  +
mov [edi] al +
inc edi  +
inc ecx  +
cmp edi esi +
mov [esp+40h+var_24] ecx +
jb loc_40C66F  +
mov eax [ebx] +
sub esi eax +
sub edi eax +
add esi 80h +
test eax eax +
push esi  +
jnz loc_40C653  +
call HHA_133  +
jmp loc_40C659  +
push eax  +
call HHA_131  +
add edi eax +
mov [ebx] eax +
test eax eax +
jz loc_40C669  +
push eax  +
call HHA_22  +
jmp loc_40C66B  +
xor eax eax +
mov esi [ebx] +
add esi eax +
mov ecx [esp+48h+var_2C] +
mov al [ecx] +
cmp al 22h +
jnz loc_40C612  +
jmp loc_40C684  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 10h  +
push 3Eh  +
push ecx  +
mov byte ptr [edi] 0 +
call HHA_8  +
test eax eax +
jnz loc_40C6CD  +
test ebp ebp +
jz loc_40C6C4  +
mov eax [ebp+0] +
push ebx  +
mov ecx [ebp+eax*8+4] +
call HHA_33  +
test eax eax +
jz loc_40C6C4  +
mov eax [ebx] +
push 3Eh  +
push eax  +
call HHA_8  +
test eax eax +
jz loc_40C693  +
inc eax  +
push eax  +
call HHA_3  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 10h  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 10h  +
inc eax  +
push eax  +
call HHA_3  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 10h  +
mov [esp+2Ch+var_10] 0 +
jmp loc_40C5D6  +
***
mov eax large fs:0 +
push 0FFFFFFFFh  +
push offset loc_433AE1  +
push eax  +
mov large fs:0 esp +
sub esp 0Ch +
push ebx  +
push ebp  +
push esi  +
mov esi ecx +
xor ebx ebx +
push edi  +
cmp [esi+60h] ebx +
jnz loc_40C776  +
push 58h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [esp+28h+var_10] eax +
cmp eax ebx +
mov [esp+28h+var_4] ebx +
jz loc_40C739  +
push 4000h  +
mov ecx eax +
call HHA_216  +
jmp loc_40C73B  +
xor eax eax +
or edi 0FFFFFFFFh +
push 58h  +
mov [esp+2Ch+var_4] edi +
mov [esi+60h] eax +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [esp+28h+var_10] eax +
cmp eax ebx +
mov [esp+28h+var_4] 1 +
jz loc_40C76D  +
push 10000h  +
mov ecx eax +
call HHA_216  +
jmp loc_40C76F  +
xor eax eax +
mov [esp+28h+var_4] edi +
mov [esi+64h] eax +
mov eax [esi+64h] +
mov edx [esi+60h] +
mov ecx [eax+10h] +
mov edx [edx+10h] +
dec ecx  +
dec edx  +
cmp edx ecx +
jle loc_40C7A5  +
push offset String2  +
push eax  +
call HHA_46  +
mov eax [esi+64h] +
mov edx [esi+60h] +
mov ecx [eax+10h] +
mov edx [edx+10h] +
dec ecx  +
dec edx  +
cmp edx ecx +
jg loc_40C788  +
mov [esp+30h+var_1C] ebx +
mov [esp+30h+var_C] 2 +
mov [esp+30h+var_20] ebx +
mov edi [esp+30h+var_4] +
push offset asc_442594  +
push edi  +
mov byte ptr [esp+38h+var_C] 3 +
call ds:strstr  +
mov ebp eax +
add esp 8 +
test ebp ebp +
jz loc_40C85A  +
lea eax [ebp+2] +
push eax  +
call HHA_23  +
push edi  +
mov [esp+38h+var_1C] eax +
mov [esp+38h+var_24] eax +
call HHA_23  +
mov ebx eax +
mov [esp+38h+var_24] ebx +
lea ecx [ebx+ebp] +
sub ecx edi +
mov byte ptr [ecx] 0 +
mov eax [esi+68h] +
test eax eax +
jnz loc_40C832  +
push 58h  +
call ??2@YAPAXI@Z  +
add esp 4 +
mov [esp+38h+var_C] eax +
test eax eax +
mov byte ptr [esp+38h+var_14] 4 +
jz loc_40C828  +
push 4000h  +
mov ecx eax +
call HHA_216  +
jmp loc_40C82A  +
xor eax eax +
mov byte ptr [esp+38h+var_14] 3 +
mov [esi+68h] eax +
mov edx [esi+68h] +
push ebx  +
push edx  +
call HHA_50  +
test eax eax +
mov [esp+40h+var_14] eax +
jnz loc_40C852  +
mov eax [esi+68h] +
push ebx  +
push eax  +
call HHA_46  +
mov [esp+48h+var_1C] eax +
mov edi [esp+48h+var_30] +
mov ebx [esp+48h+var_1C] +
mov ecx [esi+60h] +
push edi  +
push ecx  +
call HHA_50  +
mov ebp eax +
test ebp ebp +
jg loc_40C8D2  +
mov eax [esi+70h] +
test eax eax +
jle loc_40C896  +
inc eax  +
cdq   +
xor eax edx +
sub eax edx +
and eax 1Fh +
xor eax edx +
sub eax edx +
jnz loc_40C896  +
mov eax [esi+74h] +
lea ecx ds:0[eax*4] +
inc eax  +
push ecx  +
mov ecx esi +
mov [esi+74h] eax +
call sub_40CD80  +
mov edx [esi+60h] +
push edi  +
push edx  +
call HHA_46  +
mov ecx [esi+70h] +
mov ebp eax +
inc ecx  +
xor edx edx +
mov [esi+70h] ecx +
cmp ebp 20h +
mov ecx ebp +
jle loc_40C8C0  +
lea eax [ebp-1] +
shr eax 5 +
mov edx eax +
sub ecx 20h +
dec eax  +
jnz loc_40C8BA  +
mov eax [esi+8Ch] +
lea eax [eax+edx*4] +
mov edx 1 +
shl edx cl +
or [eax] edx +
dec ebx  +
js loc_40C8DE  +
push ebp  +
push ebx  +
mov ecx esi +
call sub_430B0B  +
mov eax [esp+58h+var_48] +
mov [esp+58h+var_34] 2 +
test eax eax +
jz loc_40C8F1  +
push eax  +
call HHA_132  +
mov eax [esp+5Ch+var_48] +
mov [esp+5Ch+var_38] 0FFFFFFFFh +
test eax eax +
jz loc_40C907  +
push eax  +
call HHA_132  +
mov ecx [esp+60h+var_44] +
pop edi  +
mov eax ebp +
pop esi  +
pop ebp  +
mov large fs:0 ecx +
pop ebx  +
add esp 18h +
retn 4  +
***
mov edx [esp+arg_0] +
push ebx  +
push esi  +
mov eax [edx+1Ch] +
push edi  +
test eax eax +
jz loc_40C953  +
movsx edx word ptr [edx+16h] +
xor ecx ecx +
test edx edx +
jle loc_40C953  +
mov esi [esp+0Ch+arg_8] +
mov edi [esp+0Ch+arg_4] +
shl esi 2 +
mov ebx [eax+0Ch] +
test [ebx+esi] edi +
jnz loc_40C955  +
add eax 10h +
inc ecx  +
cmp ecx edx +
jl loc_40C943  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
retn 0Ch  +
***
mov eax large fs:0 +
push eax  +
mov large fs:0 esp +
push ecx  +
mov eax [esp+10h+arg_0] +
push ebx  +
push ebp  +
push esi  +
xor ebp ebp +
mov esi ecx +
cmp eax ebp +
push edi  +
mov [esp+20h+var_10] esi +
jz loc_40C98F  +
shl eax 8 +
jmp loc_40C994  +
mov eax 18FF000h +
push eax  +
lea ecx [esi+4] +
call HHA_216  +
mov ebx 1 +
mov ecx 0Ah +
xor eax eax +
lea edi [esi+60h] +
mov dword ptr [esi] offset off_4388B0 +
mov [esi+5Ch] ebp +
mov [esi+0E4h] ebx +
mov [esi+88h] ebp +
mov [esi+90h] ebp +
mov [esi+94h] ebp +
mov [esi+98h] ebp +
mov [esi+9Ch] ebp +
mov [esi+0A4h] ebp +
mov [esi+0B4h] ebp +
mov [esi+0B8h] ebp +
mov [esi+0BCh] ebp +
mov [esi+0C8h] ebp +
mov [esi+0D0h] ebp +
mov [esi+0D4h] ebp +
mov [esi+0D8h] ebp +
mov [esi+0DCh] ebp +
mov [esi+0E0h] ebp +
stos   +
push 50h  +
mov [esp+28h+var_8] ebp +
mov dword ptr [esi+80h] 0Ah +
call HHA_133  +
mov [esi+74h] ebx +
mov [esi+84h] eax +
mov [esi+70h] ebp +
xor ebx ebx +
push 4  +
call HHA_135  +
mov ecx [esi+84h] +
add ebx 8 +
mov [ebx+ecx-4] eax +
mov ecx [esi+74h] +
mov edx [esi+84h] +
xor eax eax +
shl ecx 2 +
mov edi [ebx+edx-4] +
mov edx ecx +
shr ecx 2 +
stos   +
mov ecx edx +
and ecx 3 +
cmp ebx 50h +
stos   +
mov eax [esi+84h] +
mov [ebx+eax-8] ebp +
jl loc_40CA3A  +
push 4  +
call HHA_135  +
push 4  +
mov [esi+78h] eax +
call HHA_135  +
or edi 0FFFFFFFFh +
push 4  +
mov [esi+7Ch] eax +
mov [esi+0ACh] edi +
mov [esi+0B0h] edi +
mov [esi+0C4h] edi +
mov [esi+0C0h] edi +
mov dword ptr [esi+0A8h] 0FFFFFFh +
mov dword ptr [esi+0A0h] 14h +
call HHA_135  +
push 4  +
mov [esi+8Ch] eax +
call HHA_135  +
mov ecx [esi+8Ch] +
mov [esi+90h] eax +
mov eax esi +
mov [ecx] edi +
mov ecx [esp+3Ch+var_28] +
pop edi  +
pop esi  +
pop ebp  +
mov large fs:0 ecx +
pop ebx  +
add esp 10h +
retn 4  +
***
call sub_40CB20  +
test [esp+arg_0] 1 +
jz loc_40CB18  +
push esi  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax esi +
pop esi  +
retn 4  +
***
mov eax large fs:0 +
push eax  +
mov large fs:0 esp +
sub esp 8 +
push esi  +
mov esi ecx +
push edi  +
mov [esp+1Ch+var_10] esi +
mov dword ptr [esi] offset off_4388B0 +
mov eax [esi+14h] +
mov edi 1 +
dec eax  +
mov [esp+1Ch+var_4] 0 +
cmp eax edi +
jle loc_40CB82  +
mov ecx [esi+8] +
mov eax [ecx+edi*4] +
test eax eax +
jz loc_40CB79  +
mov eax [eax+1Ch] +
test eax eax +
jz loc_40CB79  +
mov eax [eax+0Ch] +
test eax eax +
jz loc_40CB79  +
push eax  +
call HHA_132  +
mov edx [esi+14h] +
inc edi  +
dec edx  +
cmp edi edx +
jl loc_40CB5B  +
mov edi [esi+0D4h] +
test edi edi +
jz loc_40CB9C  +
mov ecx edi +
call HHA_38  +
push edi  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [esi+5Ch] +
test eax eax +
jnz loc_40CBFF  +
mov edi [esi+60h] +
test edi edi +
jz loc_40CBBA  +
mov ecx edi +
call HHA_38  +
push edi  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov edi [esi+64h] +
test edi edi +
jz loc_40CBD1  +
mov ecx edi +
call HHA_38  +
push edi  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov edi [esi+68h] +
test edi edi +
jz loc_40CBE8  +
mov ecx edi +
call HHA_38  +
push edi  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov edi [esi+6Ch] +
test edi edi +
jz loc_40CBFF  +
mov ecx edi +
call HHA_38  +
push edi  +
call ??3@YAXPAX@Z  +
add esp 4 +
mov eax [esi+80h] +
xor edi edi +
test eax eax +
jle loc_40CC26  +
mov eax [esi+84h] +
mov ecx [eax+edi*8+4] +
push ecx  +
call HHA_132  +
mov eax [esi+80h] +
inc edi  +
cmp edi eax +
jl loc_40CC0B  +
mov edx [esi+84h] +
push edx  +
call HHA_132  +
mov eax [esi+7Ch] +
push eax  +
call HHA_132  +
mov ecx [esi+78h] +
push ecx  +
call HHA_132  +
mov edx [esi+8Ch] +
push edx  +
call HHA_132  +
mov eax [esi+90h] +
push eax  +
call HHA_132  +
test esi esi +
mov [esp+38h+var_20] 0FFFFFFFFh +
jz loc_40CC6D  +
lea ecx [esi+4] +
jmp loc_40CC6F  +
xor ecx ecx +
call HHA_38  +
mov ecx [esp+38h+var_28] +
pop edi  +
mov large fs:0 ecx +
pop esi  +
add esp 14h +
retn   +
***
sub esp 18h +
mov eax [ecx+74h] +
push ebx  +
push ebp  +
push esi  +
lea edx ds:0[eax*4] +
push edi  +
mov [esp+28h+var_C] edx +
mov edx [esp+28h+arg_0] +
xor edi edi +
mov [esp+28h+var_14] ecx +
cmp edx edi +
jnz loc_40CCB9  +
inc eax  +
mov [ecx+74h] eax +
jmp loc_40CCBC  +
mov [ecx+74h] edx +
mov esi [ecx+14h] +
mov edx 1 +
dec esi  +
mov [esp+28h+var_10] edx +
cmp esi edx +
mov [esp+28h+var_4] esi +
jl loc_40CD62  +
mov eax [ecx+8] +
mov [esp+28h+var_18] edi +
mov eax [eax+edx*4] +
mov [esp+28h+var_8] eax +
cmp [eax+16h] di +
mov ebx [eax+1Ch] +
jle loc_40CD55  +
mov [esp+28h+arg_0] edi +
mov ecx [ecx+74h] +
mov edi [esp+28h+arg_0] +
shl ecx 2 +
push ecx  +
add ebx edi +
call HHA_135  +
mov ecx [esp+2Ch+var_10] +
mov esi [ebx+0Ch] +
mov ebp eax +
mov edx ecx +
mov edi ebp +
shr ecx 2 +
movs   +
mov ecx edx +
and ecx 3 +
movs   +
mov eax [ebx+0Ch] +
push eax  +
call HHA_132  +
mov edx [esp+30h+var_4] +
mov ecx [esp+30h+var_10] +
mov eax [esp+30h+var_20] +
add edx 10h +
mov [ebx+0Ch] ebp +
mov [esp+30h+var_4] edx +
movsx edx word ptr [ecx+16h] +
mov ecx [esp+30h+var_1C] +
inc eax  +
cmp eax edx +
mov [esp+30h+var_20] eax +
jl loc_40CCF0  +
mov edx [esp+30h+var_18] +
mov esi [esp+30h+var_C] +
xor edi edi +
inc edx  +
cmp edx esi +
mov [esp+30h+var_18] edx +
jle loc_40CCD5  +
mov eax [esp+30h+var_14] +
push eax  +
call sub_40CD80  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 18h +
retn 4  +
***
mov ebx ecx +
push ebp  +
xor ebp ebp +
mov eax [ebx+80h] +
push esi  +
test eax eax +
push edi  +
jle loc_40CDEA  +
mov eax [ebx+74h] +
shl eax 2 +
push eax  +
call HHA_135  +
mov ecx [esp+18h] +
mov edx [ebx+84h] +
mov [esp+14h+var_4] eax +
mov edi eax +
mov esi [edx+ebp*8+4] +
mov eax ecx +
shr ecx 2 +
movs   +
mov ecx eax +
and ecx 3 +
movs   +
mov ecx [ebx+84h] +
mov edx [ecx+ebp*8+4] +
push edx  +
call HHA_132  +
mov eax [ebx+84h] +
mov ecx [esp+18h+var_8] +
mov [eax+ebp*8+4] ecx +
mov eax [ebx+80h] +
inc ebp  +
cmp ebp eax +
jl loc_40CD93  +
mov edx [ebx+74h] +
shl edx 2 +
push edx  +
call HHA_135  +
mov ebp [esp+1Ch+var_4] +
mov esi [ebx+78h] +
mov ecx ebp +
mov [esp+1Ch+var_C] eax +
mov edi eax +
mov eax ecx +
shr ecx 2 +
movs   +
mov ecx eax +
and ecx 3 +
movs   +
mov ecx [ebx+78h] +
push ecx  +
call HHA_132  +
mov eax [ebx+74h] +
mov edx [esp+20h+var_10] +
shl eax 2 +
push eax  +
mov [ebx+78h] edx +
call HHA_135  +
mov esi [ebx+7Ch] +
mov ecx ebp +
mov edx ecx +
mov edi eax +
shr ecx 2 +
movs   +
mov ecx edx +
mov [esp+24h+var_14] eax +
and ecx 3 +
movs   +
mov eax [ebx+7Ch] +
push eax  +
call HHA_132  +
mov edx [ebx+74h] +
mov ecx [esp+28h+var_18] +
shl edx 2 +
push edx  +
mov [ebx+7Ch] ecx +
call HHA_135  +
mov esi [ebx+8Ch] +
mov ecx ebp +
mov [esp+2Ch+var_1C] eax +
mov edi eax +
mov eax ecx +
shr ecx 2 +
movs   +
mov ecx eax +
and ecx 3 +
movs   +
mov ecx [ebx+8Ch] +
push ecx  +
call HHA_132  +
mov eax [ebx+74h] +
mov edx [esp+30h+var_20] +
shl eax 2 +
push eax  +
mov [ebx+8Ch] edx +
call HHA_135  +
mov esi [ebx+90h] +
mov ecx ebp +
mov edx ecx +
mov edi eax +
shr ecx 2 +
movs   +
mov ecx edx +
mov [esp+34h+var_24] eax +
and ecx 3 +
movs   +
mov eax [ebx+90h] +
push eax  +
call HHA_132  +
mov ecx [esp+38h+var_28] +
pop edi  +
pop esi  +
mov [ebx+90h] ecx +
pop ebp  +
pop ebx  +
pop ecx  +
retn 4  +
***
mov eax [esp+arg_4] +
push ebx  +
mov ebx [esp+4+arg_0] +
push ebp  +
mov eax [eax+20h] +
push esi  +
cmp eax 0Ah +
push edi  +
mov ebp ecx +
mov [ebx+20h] eax +
jle loc_40CF0D  +
mov edx [ebx+24h] +
lea ecx ds:0[eax*8] +
push ecx  +
push edx  +
call HHA_131  +
mov [ebx+24h] eax +
mov eax [ebx+20h] +
xor edi edi +
test eax eax +
mov [esp+18h+var_4] edi +
jle loc_40CFA3  +
mov eax [ebx+24h] +
mov eax [eax+edi*8+4] +
test eax eax +
jz loc_40CF2F  +
push eax  +
call HHA_132  +
mov ecx [ebp+74h] +
shl ecx 2 +
push ecx  +
call HHA_135  +
mov edx [ebx+24h] +
mov [edx+edi*8+4] eax +
mov eax [esp+20h+var_8] +
mov ecx [eax+24h] +
lea eax [ecx+edi*8] +
mov ecx [ecx+edi*8] +
test ecx ecx +
jle loc_40CF89  +
mov ecx [ebp+74h] +
mov esi [eax+4] +
mov edx [ebx+24h] +
shl ecx 2 +
mov edi [edx+edi*8+4] +
mov eax ecx +
shr ecx 2 +
movs   +
mov ecx eax +
mov eax [esp+20h+var_C] +
and ecx 3 +
movs   +
mov ecx [esp+20h+var_8] +
mov edi eax +
mov edx [ecx+24h] +
mov ecx [ebx+24h] +
mov edx [edx+eax*8] +
mov [ecx+eax*8] edx +
jmp loc_40CF93  +
mov eax [ebx+24h] +
mov dword ptr [eax+edi*8] 0 +
mov eax [ebx+20h] +
inc edi  +
cmp edi eax +
mov [esp+20h+var_C] edi +
jl loc_40CF1E  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 8  +
***
mov ebx ecx +
push esi  +
mov esi [esp+4+arg_0] +
push edi  +
mov ebp [ebx+68h] +
xor edi edi +
test ebp ebp +
jz loc_40CFC9  +
mov eax [ebp+10h] +
dec eax  +
jmp loc_40CFCB  +
xor eax eax +
cmp edi eax +
jge loc_40D00A  +
mov eax esi +
cdq   +
and edx 1Fh +
add eax edx +
sar eax 5 +
mov ecx eax +
shl ecx 5 +
mov edx ecx +
mov ecx esi +
sub ecx edx +
mov edx 1 +
shl edx cl +
mov ecx [ebx+84h] +
mov ecx [ecx+edi*8+4] +
test [ecx+eax*4] edx +
jnz loc_40CFFE  +
inc edi  +
jmp loc_40CFBF  +
mov eax 1 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 4  +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
retn 4  +
***
mov eax large fs:0 +
push 0FFFFFFFFh  +
push offset loc_433B58  +
push eax  +
mov large fs:0 esp +
push ebx  +
push ebp  +
push esi  +
mov esi [esp+18h+arg_0] +
push edi  +
mov ebp ecx +
push esi  +
call HHA_23  +
mov edi eax +
mov [esp+20h] edi +
push offset asc_442594  +
push edi  +
mov [esp+28h+var_8] 0 +
call ds:strstr  +
mov ebx eax +
add esp 8 +
test ebx ebx +
jnz loc_40D07C  +
push 3Ah  +
push edi  +
call HHA_8  +
mov ebx eax +
test ebx ebx +
jz loc_40D086  +
mov byte ptr [ebx] 0 +
inc ebx  +
jmp loc_40D082  +
mov byte ptr [ebx] 0 +
add ebx 2 +
test ebx ebx +
jnz loc_40D0AB  +
mov eax [ebp+60h] +
push esi  +
push eax  +
call HHA_50  +
test edi edi +
mov esi eax +
mov [esp+28h+var_10] 0FFFFFFFFh +
jz loc_40D0A4  +
push edi  +
call HHA_132  +
mov eax esi +
jmp loc_40D137  +
mov ecx [ebp+68h] +
push edi  +
push ecx  +
call HHA_50  +
test eax eax +
jg loc_40D0C8  +
test edi edi +
mov [esp+28h+var_10] 0FFFFFFFFh +
jz loc_40D134  +
push edi  +
jmp loc_40D12F  +
dec eax  +
mov ecx ebp +
push eax  +
call sub_430BEA  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_40D11E  +
mov edx [ebp+60h] +
mov eax [edx+4] +
mov esi [eax+edi*4] +
mov eax ebx +
mov dl [eax] +
mov cl dl +
cmp dl [esi] +
jnz loc_40D107  +
test cl cl +
jz loc_40D103  +
mov dl [eax+1] +
mov cl dl +
cmp dl [esi+1] +
jnz loc_40D107  +
add eax 2 +
add esi 2 +
test cl cl +
jnz loc_40D0E3  +
xor eax eax +
jmp loc_40D10C  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_40D14C  +
mov ecx ebp +
call sub_430C4E  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jnz loc_40D0D8  +
mov eax [esp+28h+var_8] +
mov [esp+28h+var_10] 0FFFFFFFFh +
test eax eax +
jz loc_40D134  +
push eax  +
call HHA_132  +
or eax 0FFFFFFFFh +
mov ecx [esp+2Ch+var_1C] +
pop edi  +
pop esi  +
pop ebp  +
mov large fs:0 ecx +
pop ebx  +
add esp 0Ch +
retn 4  +
mov eax [esp+28h+var_8] +
mov [esp+28h+var_10] 0FFFFFFFFh +
test eax eax +
jz loc_40D162  +
push eax  +
call HHA_132  +
mov eax edi +
jmp loc_40D137  +
***
mov edx [esp+arg_0] +
xor eax eax +
mov al [edx+18h] +
test eax eax +
jnz loc_40D1B7  +
mov al [edx+1Bh] +
test al 1 +
jz loc_40D19E  +
mov edx [ecx+0B8h] +
and al 2 +
neg al  +
sbb eax eax +
neg eax  +
add eax 9 +
test edx edx +
jz loc_40D1B7  +
add eax 2 +
jmp loc_40D1B7  +
mov edx [ecx+0B8h] +
and al 2 +
neg al  +
sbb eax eax +
and eax 2 +
add eax 2 +
test edx edx +
jz loc_40D1B7  +
add eax 4 +
mov ecx [ecx+0A4h] +
test ecx ecx +
jz locret_40D1CA  +
cmp eax ecx +
jle locret_40D1CA  +
mov eax 1 +
retn 4  +
***
sub esp 10Ch +
push ebx  +
push ebp  +
push esi  +
push edi  +
mov edi [esp+11Ch+arg_0] +
test edi edi +
jz loc_40D2CC  +
cmp byte ptr [edi] 0 +
jz loc_40D2CC  +
mov ebx [esp+11Ch+arg_8] +
mov eax ebx +
and eax 2 +
mov [esp+11Ch+var_104] eax +
jz loc_40D210  +
push 25h  +
push edi  +
call HHA_8  +
test eax eax +
jnz loc_40D232  +
test bl 4 +
jz loc_40D221  +
push 5Ch  +
push edi  +
call HHA_8  +
test eax eax +
jnz loc_40D232  +
test bl 1 +
jz loc_40D2A4  +
push 26h  +
push edi  +
call HHA_8  +
test eax eax +
jz loc_40D2A4  +
mov al [edi] +
mov ebp [esp+134h+var_10] +
test al al +
jz loc_40D28E  +
mov ebx [esp+134h+var_124] +
push eax  +
call ds:IsDBCSLeadByte  +
test eax eax +
jz loc_40D2DB  +
mov al [edi+1] +
test al al +
jz loc_40D289  +
mov al [edi] +
mov [ebp+0] al +
inc ebp  +
inc edi  +
mov cl [edi] +
mov [ebp+0] cl +
inc ebp  +
inc edi  +
mov [esp+134h+var_10] ebp +
mov al [edi] +
test al al +
jnz loc_40D243  +
mov [ebp+0] al +
mov eax 1 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 10Ch +
retn 0Ch  +
mov byte ptr [ebp+0] 3Fh +
inc ebp  +
mov byte ptr [ebp+0] 0 +
mov eax 1 +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 10Ch +
retn 0Ch  +
mov edx [esp+12Ch+var_8] +
cmp edx edi +
jz loc_40D2CC  +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
and ecx 3 +
movs   +
pop edi  +
pop esi  +
pop ebp  +
xor eax eax +
pop ebx  +
add esp 10Ch +
retn 0Ch  +
mov eax [esp+134h+var_11C] +
test eax eax +
jz loc_40D2EC  +
cmp byte ptr [edi] 25h +
jz loc_40D38F  +
mov al [esp+134h+var_C] +
test al 4 +
jz loc_40D428  +
cmp byte ptr [edi] 5Ch +
jnz loc_40D428  +
mov al [edi+1] +
inc edi  +
movsx ecx al +
cmp ecx 78h +
ja loc_40D420  +
xor edx edx +
mov dl ds:byte_40D5A0[ecx] +
jmp ds:off_40D580[edx*4]  +
mov byte ptr [ebp+0] 0Ah +
jmp loc_40D265  +
mov byte ptr [ebp+0] 0Dh +
jmp loc_40D265  +
mov byte ptr [ebp+0] 9 +
jmp loc_40D265  +
cmp al 30h +
jl loc_40D350  +
cmp al 37h +
jg loc_40D350  +
add ecx 0FFFFFFD0h +
inc edi  +
mov [esp+134h+var_120] ecx +
jmp loc_40D354  +
mov ecx [esp+134h+var_120] +
mov al [edi] +
cmp al 30h +
jl loc_40D36A  +
cmp al 37h +
jg loc_40D36A  +
movsx eax al +
inc edi  +
lea ecx [eax+ecx*8-30h] +
mov [esp+134h+var_120] ecx +
mov al [edi] +
cmp al 30h +
jl loc_40D494  +
cmp al 37h +
jg loc_40D494  +
movsx edx al +
inc edi  +
lea eax [edx+ecx*8-30h] +
mov [esp+134h+var_120] eax +
mov ecx eax +
jmp loc_40D494  +
mov al [edi+1] +
inc edi  +
cmp al 30h +
jl loc_40D3A3  +
cmp al 39h +
jg loc_40D3A3  +
movsx ebx al +
sub ebx 30h +
jmp loc_40D3C1  +
cmp al 61h +
jl loc_40D3B3  +
cmp al 66h +
jg loc_40D3B3  +
movsx ebx al +
sub ebx 57h +
jmp loc_40D3C1  +
cmp al 41h +
jl loc_40D3C6  +
cmp al 46h +
jg loc_40D3C6  +
movsx ebx al +
sub ebx 37h +
mov [esp+134h+var_124] ebx +
inc edi  +
mov al [edi] +
cmp al 30h +
jl loc_40D3DD  +
cmp al 39h +
jg loc_40D3DD  +
add ebx 0FFFFFFFDh +
movsx ecx al +
shl ebx 4 +
add ebx ecx +
jmp loc_40D403  +
cmp al 61h +
jl loc_40D3F1  +
cmp al 66h +
jg loc_40D3F1  +
movsx edx al +
shl ebx 4 +
lea ebx [ebx+edx-57h] +
jmp loc_40D403  +
cmp al 41h +
jl loc_40D408  +
cmp al 46h +
jg loc_40D408  +
movsx eax al +
shl ebx 4 +
lea ebx [ebx+eax-37h] +
mov [esp+134h+var_124] ebx +
inc edi  +
test ebx ebx +
jz loc_40D26E  +
mov [ebp+0] bl +
inc ebp  +
mov [esp+134h+var_10] ebp +
jmp loc_40D26E  +
mov [ebp+0] al +
jmp loc_40D265  +
test al 1 +
jz loc_40D260  +
cmp byte ptr [edi] 26h +
jnz loc_40D260  +
cmp byte ptr [edi+1] 20h +
jz loc_40D260  +
mov al [edi+1] +
inc edi  +
cmp al 23h +
jnz loc_40D4AC  +
mov al [edi+1] +
inc edi  +
xor ecx ecx +
test al al +
jz loc_40D48E  +
cmp al 3Bh +
jz loc_40D48E  +
cmp al 20h +
jz loc_40D48E  +
cmp al 30h +
jl loc_40D478  +
cmp al 39h +
jg loc_40D478  +
inc edi  +
lea ecx [ecx+ecx*4] +
movsx edx al +
mov al [edi] +
test al al +
lea ecx [edx+ecx*2-30h] +
jnz loc_40D455  +
jmp loc_40D48E  +
mov al [edi] +
test al al +
jz loc_40D48E  +
cmp al 3Bh +
jz loc_40D48E  +
cmp al 20h +
jz loc_40D48E  +
mov al [edi+1] +
inc edi  +
test al al +
jnz loc_40D47E  +
cmp byte ptr [edi] 3Bh +
jnz loc_40D494  +
inc edi  +
test ecx ecx +
jz loc_40D26E  +
mov [ebp+0] cl +
inc ebp  +
mov [esp+134h+var_10] ebp +
jmp loc_40D26E  +
test al al +
jz loc_40D26E  +
xor edx edx +
lea ecx [esp+134h+var_118] +
cmp al 3Bh +
jz loc_40D4D6  +
cmp al 20h +
jz loc_40D4D6  +
cmp edx 100h +
jnb loc_40D4D6  +
mov [ecx] al +
mov al [edi+1] +
inc ecx  +
inc edi  +
inc edx  +
test al al +
jnz loc_40D4BA  +
mov al [edi] +
mov byte ptr [ecx] 0 +
cmp al 3Bh +
jnz loc_40D4E0  +
inc edi  +
mov esi ds:off_4384E0 +
xor edx edx +
test esi esi +
jz loc_40D538  +
mov ebp offset off_4384E0 +
lea eax [esp+134h+var_118] +
mov bl [eax] +
mov cl bl +
cmp bl [esi] +
jnz loc_40D519  +
test cl cl +
jz loc_40D515  +
mov bl [eax+1] +
mov cl bl +
cmp bl [esi+1] +
jnz loc_40D519  +
add eax 2 +
add esi 2 +
test cl cl +
jnz loc_40D4F5  +
xor eax eax +
jmp loc_40D51E  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jz loc_40D558  +
mov esi [ebp+8] +
add ebp 8 +
inc edx  +
test esi esi +
jnz loc_40D4F1  +
mov ebp [esp+134h+var_10] +
mov ebx [esp+134h+var_124] +
mov eax ds:off_4384E0[edx*8] +
test eax eax +
jnz loc_40D26E  +
mov byte ptr [ebp+0] 3Fh +
inc ebp  +
mov [esp+134h+var_10] ebp +
jmp loc_40D26E  +
mov eax ds:dword_4384E4[edx*8] +
test eax eax +
jz loc_40D52D  +
mov ebp [esp+134h+var_10] +
mov al byte ptr ds:dword_4384E4[edx*8] +
mov [ebp+0] al +
inc ebp  +
mov [esp+134h+var_10] ebp +
jmp loc_40D534  +
***
push ebp  +
mov ebp [esp+0Ch+arg_4] +
xor ebx ebx +
push esi  +
push edi  +
mov eax [ebp+0] +
cmp eax ebx +
jz loc_40D640  +
push eax  +
call HHA_22  +
mov edi eax +
mov [esp+18h+arg_0] edi +
jmp loc_40D646  +
mov [esp+14h+arg_4] ebx +
mov edi ebx +
mov esi [esp+14h+arg_0] +
cmp edi ebx +
jnz loc_40D67C  +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
mov eax [ebp+0] +
not ecx  +
add ecx 7Fh +
cmp eax ebx +
mov [esp+14h+arg_4] ecx +
push ecx  +
jnz loc_40D66F  +
call HHA_133  +
jmp loc_40D675  +
push eax  +
call HHA_131  +
mov edi [esp+1Ch] +
mov [ebp+0] eax +
test esi esi +
jnz loc_40D6A4  +
push offset String2  +
call HHA_23  +
mov esi eax +
mov eax [ebp+0] +
test eax eax +
jz loc_40D699  +
push eax  +
call HHA_132  +
mov [ebp+0] esi +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn 8  +
mov al [esi] +
test al al +
jz loc_40D835  +
push eax  +
call ds:IsDBCSLeadByte  +
test eax eax +
jz loc_40D6E0  +
mov eax [ebp+0] +
mov cl [esi] +
mov [ebx+eax] cl +
inc ebx  +
inc esi  +
mov [esp+1Ch+var_4] esi +
jz loc_40D805  +
mov edx [ebp+0] +
mov al [esi] +
mov [ebx+edx] al +
inc ebx  +
inc esi  +
mov [esp+1Ch+var_4] esi +
jmp loc_40D805  +
mov eax ds:off_4384E0 +
xor esi esi +
test eax eax +
mov [esp+1Ch+var_C] esi +
jz loc_40D7E3  +
mov ecx [esp+1Ch+var_4] +
mov eax offset off_4384E0 +
movsx ecx byte ptr [ecx] +
cmp ecx [eax+4] +
jz loc_40D718  +
mov edx [eax+8] +
add eax 8 +
inc esi  +
test edx edx +
jnz loc_40D6FF  +
mov [esp+1Ch+var_C] esi +
jmp loc_40D7E3  +
mov edi ds:off_4384E0[esi*8] +
or ecx 0FFFFFFFFh +
xor eax eax +
mov [esp+1Ch+var_C] esi +
scas   +
mov eax [esp+1Ch] +
not ecx  +
mov edx eax +
inc ecx  +
sub edx ebx +
cmp edx ecx +
ja loc_40D75A  +
mov ecx [ebp+0] +
add eax 80h +
test ecx ecx +
mov [esp+1Ch] eax +
push eax  +
jnz loc_40D751  +
call HHA_133  +
jmp loc_40D757  +
push ecx  +
call HHA_131  +
mov [ebp+0] eax +
mov eax [ebp+0] +
inc ebx  +
mov edx ebx +
mov byte ptr [ebx+eax-1] 26h +
mov ecx [ebp+0] +
mov edi ds:off_4384E0[esi*8] +
add edx ecx +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
xor eax eax +
and ecx 3 +
movs   +
mov edi offset asc_4430D8 +
or ecx 0FFFFFFFFh +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov edi [ebp+0] +
mov edx ecx +
or ecx 0FFFFFFFFh +
scas   +
mov ecx edx +
dec edi  +
shr ecx 2 +
movs   +
mov ecx edx +
mov eax [esp+24h+var_14] +
and ecx 3 +
movs   +
mov edi ds:off_4384E0[eax*8] +
or ecx 0FFFFFFFFh +
xor eax eax +
mov esi [esp+24h+var_14] +
scas   +
mov eax [esp+24h+var_C] +
mov edi [esp+24h+var_8] +
not ecx  +
dec ecx  +
inc eax  +
mov [esp+24h+var_C] eax +
lea ebx [ebx+ecx+1] +
mov eax ds:off_4384E0[esi*8] +
test eax eax +
jnz loc_40D801  +
mov eax [esp+24h+var_C] +
mov ecx [ebp+0] +
inc ebx  +
mov dl [eax] +
inc eax  +
mov [ebx+ecx-1] dl +
mov [esp+24h+var_C] eax +
mov esi [esp+24h+var_C] +
cmp edi ebx +
jg loc_40D82B  +
mov eax [ebp+0] +
add edi 80h +
test eax eax +
mov [esp+24h+var_8] edi +
push edi  +
jnz loc_40D822  +
call HHA_133  +
jmp loc_40D828  +
push eax  +
call HHA_131  +
mov [ebp+0] eax +
mov al [esi] +
test al al +
jnz loc_40D6AE  +
mov eax [ebp+0] +
pop edi  +
pop esi  +
pop ebp  +
mov byte ptr [ebx+eax] 0 +
pop ebx  +
pop ecx  +
retn 8  +
***
mov eax large fs:0 +
mov eax large fs:0 +
push eax  +
mov large fs:0 esp +
sub esp 50h +
push ebx  +
push ebp  +
push esi  +
mov esi ecx +
push edi  +
push 2000h  +
lea ecx [esp+70h+var_34] +
mov [esp+70h+var_54] esi +
call HHA_27  +
mov ecx [esp+70h+arg_0] +
mov eax [esi+60h] +
mov ebx [esp+70h+var_34] +
xor edx edx +
mov ebp [ecx+1Ch] +
cmp eax edx +
mov [esp+70h+var_8] edx +
mov [esp+70h+var_40] ebx +
mov [esp+70h+var_48] ebp +
jz loc_40E6FA  +
mov eax [eax+10h] +
dec eax  +
mov [esp+70h+var_50] eax +
jmp loc_40E6FE  +
mov [esp+70h+var_50] edx +
cmp [ecx+16h] dx +
mov esi [esp+70h] +
mov [esp+70h+var_3C] edx +
jle loc_40EAAE  +
mov eax [ebp+0] +
test eax eax +
jz loc_40E751  +
cmp byte ptr [eax] 0 +
jz loc_40E751  +
push eax  +
push offset aName  +
push offset aParamNameSValu  +
push ebx  +
call ds:wsprintfA  +
mov eax [esp+80h+arg_4] +
add esp 10h +
inc eax  +
test eax eax +
jle loc_40E74A  +
mov edi eax +
push 9  +
push esi  +
call HHA_66  +
dec edi  +
jnz loc_40E73F  +
push ebx  +
push esi  +
call HHA_67  +
mov eax [esp+80h+var_60] +
test eax eax +
jz loc_40E9CA  +
mov ecx 8 +
xor eax eax +
lea edi [esp+80h+var_40] +
mov edx 2 +
stos   +
mov ecx [esp+80h+var_60] +
mov eax 1 +
cmp ecx eax +
mov [esp+80h+var_64] edx +
mov [esp+80h+var_6C] eax +
jl loc_40E9CA  +
xor esi esi +
mov [esp+80h+var_5C] esi +
jmp loc_40E79C  +
mov edx [esp+80h+var_64] +
mov ebp [esp+80h+var_58] +
mov esi [esp+80h+var_5C] +
test ebp ebp +
mov eax ebp +
jz loc_40E7B5  +
xor ecx ecx +
mov edi [eax+0Ch] +
test [edi+esi] edx +
jnz loc_40E7B7  +
add eax 10h +
inc ecx  +
cmp ecx 1 +
jl loc_40E7A4  +
xor eax eax +
test eax eax +
jz loc_40E98A  +
xor ebp ebp +
mov [esp+80h+var_70] ebp +
mov ecx [esp+80h+var_68] +
mov [esp+80h+var_18] 1 +
xor ebx ebx +
mov eax [ecx+68h] +
mov [esp+80h+var_54] eax +
test eax eax +
jz loc_40E7E1  +
mov eax [eax+10h] +
dec eax  +
jmp loc_40E7E3  +
xor eax eax +
cmp ebx eax +
jge loc_40E8C5  +
mov edx [esp+80h+var_68] +
mov eax [edx+84h] +
mov ecx [eax+ebx*8] +
lea eax [eax+ebx*8] +
test ecx ecx +
jle loc_40E8C5  +
mov edi [eax+4] +
test edi edi +
jz loc_40E835  +
mov eax [esp+80h+var_6C] +
mov esi 1 +
cdq   +
xor eax edx +
sub eax edx +
and eax 1Fh +
xor eax edx +
mov ecx eax +
mov eax [esp+80h+var_6C] +
sub ecx edx +
cdq   +
and edx 1Fh +
add eax edx +
shl esi cl +
sar eax 5 +
and esi [edi+eax*4] +
jmp loc_40E837  +
xor esi esi +
test esi esi +
jnz loc_40E842  +
mov eax [esp+80h+var_54] +
inc ebx  +
jmp loc_40E7D7  +
mov ecx [esp+80h+var_54] +
mov edx [ecx+4] +
mov eax [edx+ebx*4+4] +
push eax  +
call HHA_23  +
mov edx eax +
test edx edx +
mov [esp+84h+var_74] edx +
jnz loc_40E86F  +
push offset asc_442594  +
call HHA_23  +
mov ebp eax +
mov [esp+88h+var_78] ebp +
jmp loc_40E8C5  +
mov edi edx +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
mov edi offset asc_442594 +
mov esi ecx +
or ecx 0FFFFFFFFh +
scas   +
not ecx  +
dec ecx  +
lea eax [esi+ecx+1] +
push eax  +
push edx  +
call HHA_131  +
mov ebp eax +
mov edi offset asc_442594 +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov [esp+8Ch+var_7C] ebp +
mov esi edi +
mov edx ecx +
mov edi ebp +
or ecx 0FFFFFFFFh +
scas   +
mov ecx edx +
dec edi  +
shr ecx 2 +
movs   +
mov ecx edx +
and ecx 3 +
movs   +
mov eax [esp+8Ch+var_74] +
test ebp ebp +
mov ecx [eax+60h] +
mov eax [esp+8Ch+var_78] +
mov edx [ecx+4] +
mov esi [edx+eax*4] +
jnz loc_40E8E8  +
push esi  +
call HHA_23  +
mov ebp eax +
mov [esp+90h+var_80] ebp +
jmp loc_40E938  +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
mov edi ebp +
mov edx ecx +
or ecx 0FFFFFFFFh +
scas   +
not ecx  +
dec ecx  +
lea eax [edx+ecx+1] +
push eax  +
push ebp  +
call HHA_131  +
mov ebp eax +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov [esp+94h+var_84] ebp +
mov esi edi +
mov edx ecx +
mov edi ebp +
or ecx 0FFFFFFFFh +
scas   +
mov ecx edx +
dec edi  +
shr ecx 2 +
movs   +
mov ecx edx +
and ecx 3 +
movs   +
mov ebx [esp+94h+var_64] +
push ebp  +
push offset aType  +
push offset aParamNameSValu  +
push ebx  +
call ds:wsprintfA  +
mov eax [esp+0A4h+var_1C] +
add esp 10h +
inc eax  +
test eax eax +
jle loc_40E970  +
mov edi [esp+94h+var_24] +
mov esi eax +
push 9  +
push edi  +
call HHA_66  +
dec esi  +
jnz loc_40E963  +
jmp loc_40E974  +
mov edi [esp+94h+var_24] +
push ebx  +
push edi  +
call HHA_67  +
test ebp ebp +
mov byte ptr [esp+9Ch+var_34] 0 +
jz loc_40E98A  +
push ebp  +
call HHA_132  +
mov eax [esp+0A0h+var_84] +
shl eax 1 +
mov [esp+0A0h+var_84] eax +
jnz loc_40E9A9  +
mov eax [esp+0A0h+var_7C] +
mov [esp+0A0h+var_84] 1 +
add eax 4 +
mov [esp+0A0h+var_7C] eax +
mov eax [esp+0A0h+var_8C] +
mov ecx [esp+0A0h+var_80] +
inc eax  +
cmp eax ecx +
mov [esp+0A0h+var_8C] eax +
jle loc_40E790  +
mov esi [esp+0A0h+var_30] +
mov ebp [esp+0A0h+var_78] +
mov ebx [esp+0A0h+var_70] +
mov eax [ebp+4] +
test eax eax +
jz loc_40EA16  +
mov ecx [esp+0A0h+var_2C] +
test byte ptr [ecx+1Bh] 8 +
jnz loc_40EA74  +
push eax  +
push offset aLocal  +
push offset aParamNameSValu  +
push ebx  +
call ds:wsprintfA  +
mov edx [esp+0B0h+var_28] +
add esp 10h +
lea eax [edx+1] +
test eax eax +
jle loc_40EA0F  +
mov edi eax +
push 9  +
push esi  +
call HHA_66  +
dec edi  +
jnz loc_40EA04  +
push ebx  +
push esi  +
call HHA_67  +
mov eax [ebp+8] +
test eax eax +
jz loc_40EA52  +
push eax  +
push offset aUrl  +
push offset aParamNameSValu  +
push ebx  +
call ds:wsprintfA  +
mov eax [esp+0C0h+var_38] +
add esp 10h +
inc eax  +
test eax eax +
jle loc_40EA4B  +
mov edi eax +
push 9  +
push esi  +
call HHA_66  +
dec edi  +
jnz loc_40EA40  +
push ebx  +
push esi  +
call HHA_67  +
mov ecx [esp+0C0h+var_4C] +
mov eax [esp+0C0h+var_8C] +
add ebp 10h +
inc eax  +
movsx edx word ptr [ecx+16h] +
cmp eax edx +
mov [esp+0C0h+var_98] ebp +
mov [esp+0C0h+var_8C] eax +
jl loc_40E710  +
jmp loc_40EAAE  +
mov eax [ebp+4] +
push eax  +
push offset aSeeAlso  +
push offset aParamNameSValu  +
push ebx  +
call ds:wsprintfA  +
mov ecx [esp+0B0h+var_28] +
add esp 10h +
lea eax [ecx+1] +
test eax eax +
jle loc_40EAA7  +
mov edi eax +
push 9  +
push esi  +
call HHA_66  +
dec edi  +
jnz loc_40EA9C  +
push ebx  +
push esi  +
call HHA_67  +
mov edx [esp+0B0h+var_3C] +
mov ax [edx+12h] +
test ax ax +
jz loc_40EB15  +
movsx ecx ax +
mov eax [esp+0B0h+var_98] +
mov eax [eax+0D4h] +
test eax eax +
jz loc_40EADB  +
test ecx ecx +
jle loc_40EADB  +
mov edx [eax+4] +
mov eax [edx+ecx*4] +
add eax 4 +
jmp loc_40EAE0  +
mov eax offset String2 +
push eax  +
push offset aFramename  +
push offset aParamNameSValu  +
push ebx  +
call ds:wsprintfA  +
mov eax [esp+0C0h+var_38] +
add esp 10h +
inc eax  +
test eax eax +
jle loc_40EB0E  +
mov edi eax +
push 9  +
push esi  +
call HHA_66  +
dec edi  +
jnz loc_40EB03  +
push ebx  +
push esi  +
call HHA_67  +
mov ecx [esp+0C0h+var_4C] +
mov ax [ecx+10h] +
test ax ax +
jz loc_40EB7E  +
mov edx [esp+0C0h+var_A8] +
movsx ecx ax +
mov eax [edx+0D4h] +
test eax eax +
jz loc_40EB42  +
test ecx ecx +
jle loc_40EB42  +
mov eax [eax+4] +
mov eax [eax+ecx*4] +
add eax 4 +
jmp loc_40EB47  +
mov eax offset String2 +
push eax  +
push offset aWindowname  +
push offset aParamNameSValu  +
push ebx  +
call ds:wsprintfA  +
mov ecx [esp+0D0h+var_48] +
add esp 10h +
lea eax [ecx+1] +
test eax eax +
jle loc_40EB77  +
mov edi eax +
push 9  +
push esi  +
call HHA_66  +
dec edi  +
jnz loc_40EB6C  +
push ebx  +
push esi  +
call HHA_67  +
mov edx [esp+0D0h+var_5C] +
mov eax [edx+8] +
test eax eax +
jz loc_40EBBE  +
push eax  +
push offset aComment  +
push offset aParamNameSValu  +
push ebx  +
call ds:wsprintfA  +
mov eax [esp+0E0h+var_58] +
add esp 10h +
inc eax  +
test eax eax +
jle loc_40EBB7  +
mov edi eax +
push 9  +
push esi  +
call HHA_66  +
dec edi  +
jnz loc_40EBAC  +
push ebx  +
push esi  +
call HHA_67  +
mov ecx [esp+0E0h+var_6C] +
test byte ptr [ecx+1Bh] 2 +
jz loc_40EC00  +
push 1  +
push offset aNew  +
push offset aParamNameSVa_0  +
push ebx  +
call ds:wsprintfA  +
mov edx [esp+0F0h+var_68] +
add esp 10h +
lea eax [edx+1] +
test eax eax +
jle loc_40EBF9  +
mov edi eax +
push 9  +
push esi  +
call HHA_66  +
dec edi  +
jnz loc_40EBEE  +
push ebx  +
push esi  +
call HHA_67  +
mov eax [esp+0F0h+var_7C] +
mov al [eax+18h] +
test al al +
jz loc_40EC47  +
and eax 0FFh +
push eax  +
push offset aImagenumber  +
push offset aParamNameSVa_0  +
push ebx  +
call ds:wsprintfA  +
mov ecx [esp+100h+var_78] +
add esp 10h +
lea eax [ecx+1] +
test eax eax +
jle loc_40EC40  +
mov edi eax +
push 9  +
push esi  +
call HHA_66  +
dec edi  +
jnz loc_40EC35  +
push ebx  +
push esi  +
call HHA_67  +
mov edx [esp+100h+var_8C] +
test byte ptr [edx+1Bh] 4 +
jz loc_40EC8A  +
push offset aNo  +
push offset aDisplay_0  +
push offset aParamNameSValu  +
push ebx  +
call ds:wsprintfA  +
mov eax [esp+110h+var_88] +
add esp 10h +
lea edi [eax+1] +
test edi edi +
jle loc_40EC83  +
push 9  +
push esi  +
call HHA_66  +
dec edi  +
jnz loc_40EC78  +
push ebx  +
push esi  +
call HHA_67  +
mov eax [esp+110h+var_D8] +
mov [esp+110h+var_A8] 0FFFFFFFFh +
test eax eax +
jz loc_40ECA0  +
push eax  +
call HHA_132  +
mov ecx [esp+114h+var_B4] +
pop edi  +
pop esi  +
pop ebp  +
mov large fs:0 ecx +
pop ebx  +
add esp 5Ch +
retn 10h  +
***
mov edx ecx +
mov eax offset loc_433BF2 +
mov eax [esi] +
push ebx  +
mov eax offset unknown_libname_6 +
mov eax offset loc_433CA1 +
push 0EBh  +
push 16Eh  +
call HHA_245  +
mov eax [esp+8] +
mov dword ptr [esi] offset off_438910 +
mov [esi+70h] eax +
mov al [eax+177h] +
shr eax 3 +
and eax 1 +
mov [esi+74h] eax +
mov eax esi +
pop esi  +
retn 4  +
***
mov eax offset loc_433CC8 +
retn   +
***
mov eax offset loc_433D39 +
push [esp+nIDDlgItem]  +
push esi  +
push ecx  +
push edi  +
push esi  +
mov eax offset loc_433D4C +
call _EH_prolog  +
sub esp 48h +
push ebx  +
push esi  +
push edi  +
push 0Fh  +
pop ecx  +
xor eax eax +
push dword ptr [ebp+8]  +
lea edi [ebp-54h] +
xor ebx ebx +
stos   +
mov dword ptr [ebp-44h] 190h +
mov [ebp-39h] bl +
call HHA_23  +
mov [ebp+8] eax +
push 2Ch  +
push eax  +
mov [ebp-4] ebx +
call HHA_8  +
mov edx offset aSymbol +
mov [ebp-18h] eax +
mov edi edx +
or ecx 0FFFFFFFFh +
xor eax eax +
mov esi ds:_strnicmp +
scas   +
not ecx  +
dec ecx  +
mov dword ptr [ebp-10h] 8 +
push ecx  +
push edx  +
push dword ptr [ebp+8]  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [ebp-14h] eax +
jnz loc_410002  +
mov edx offset aWingdings +
or ecx 0FFFFFFFFh +
mov edi edx +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
push ecx  +
push edx  +
push dword ptr [ebp+8]  +
call esi  +
add esp 0Ch +
neg eax  +
sbb eax eax +
inc eax  +
mov [ebp-14h] eax +
mov [ebp-14h] ebx +
jz loc_410009  +
mov dword ptr [ebp-14h] 2 +
mov eax [ebp-18h] +
cmp eax ebx +
jz loc_4100C4  +
mov [eax] bl +
inc eax  +
push eax  +
call HHA_3  +
mov esi eax +
mov al [esi] +
cmp al 30h +
jl loc_410033  +
cmp al 39h +
jg loc_410033  +
mov ecx esi +
call HHA_196  +
mov [ebp-10h] eax +
mov eax [ebp+0Ch] +
cmp [ebp-10h] eax +
jle loc_41003E  +
mov [ebp-10h] eax +
push 2Ch  +
push esi  +
call HHA_8  +
cmp eax ebx +
jz loc_4100C4  +
inc eax  +
push eax  +
call HHA_3  +
mov esi eax +
mov al [esi] +
cmp al 30h +
jl loc_410067  +
cmp al 39h +
jg loc_410067  +
mov ecx esi +
call HHA_196  +
mov [ebp-14h] eax +
push 2Ch  +
push esi  +
call HHA_8  +
cmp eax ebx +
jz loc_4100C4  +
push 2Ch  +
push eax  +
call HHA_8  +
cmp eax ebx +
jz loc_4100C4  +
inc eax  +
push eax  +
call HHA_3  +
mov esi eax +
push offset aBold  +
push esi  +
call HHA_1  +
test eax eax +
jz loc_41009E  +
mov dword ptr [ebp-44h] 2BCh +
push offset aItalic  +
push esi  +
call HHA_1  +
test eax eax +
jz loc_4100B1  +
mov byte ptr [ebp-40h] 1 +
push offset aUnderline  +
push esi  +
call HHA_1  +
test eax eax +
jz loc_4100C4  +
mov byte ptr [ebp-3Fh] 1 +
push 20h  +
lea eax [ebp-38h] +
push dword ptr [ebp+8]  +
push eax  +
call ds:lstrcpynA  +
mov al [ebp-14h] +
push ebx  +
push ebx  +
push ebx  +
push offset aDisplay  +
mov [ebp-3Dh] al +
mov [ebp-3Ch] bl +
mov [ebp-3Bh] bl +
mov [ebp-3Ah] bl +
call ds:CreateICA  +
mov esi eax +
mov eax [ebp-10h] +
add eax eax +
push 90h  +
push eax  +
push 5Ah  +
push esi  +
call ds:GetDeviceCaps  +
push eax  +
call ds:MulDiv  +
neg eax  +
push esi  +
mov [ebp-54h] eax +
call ds:DeleteDC  +
lea eax [ebp-54h] +
push eax  +
call ds:CreateFontIndirectA  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp+8] ebx +
mov esi eax +
jz loc_410136  +
push dword ptr [ebp+8]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
mov eax esi +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn 8  +
***
push offset aCommdlg_findre  +
call ds:RegisterWindowMessageA  +
mov dword_4442EC eax +
retn   +
***
mov eax offset loc_433D61 +
call _EH_prolog  +
push ecx  +
push 1A4h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
cmp ecx eax +
mov [ebp-4] eax +
jz loc_410183  +
call sub_410459  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax ds:?classCFormView@CFormView@@2UCRuntimeClass@@A +
retn   +
***
retn   +
***
jmp $+5  +
mov edx offset sub_40F6EA +
push esi  +
mov ecx edx +
mov esi offset sub_413C98 +
mov dword_4431EC ecx +
mov ecx offset sub_410F34 +
mov dword_4431F8 ecx +
mov ecx offset sub_410DFA +
mov dword_443204 ecx +
mov ecx offset sub_410E9C +
mov dword_443210 ecx +
mov ecx offset sub_40FDD6 +
mov dword_44321C ecx +
mov ecx offset sub_40FC3C +
mov dword_443228 ecx +
mov ecx offset sub_410FD3 +
mov dword_443234 ecx +
mov ecx offset sub_41118D +
mov dword_443240 ecx +
mov ecx offset sub_40FECF +
mov dword_443258 esi +
mov dword_44324C ecx +
mov esi offset sub_410D16 +
mov dword_443294 ecx +
mov eax 80h +
mov ecx offset nullsub_3 +
mov dword_443264 esi +
mov dword_4431F0 eax +
mov dword_4431FC eax +
mov dword_443208 eax +
mov dword_443214 eax +
mov dword_443220 eax +
mov dword_44322C eax +
mov dword_443238 eax +
mov dword_443244 eax +
mov dword_443250 eax +
mov dword_44325C eax +
mov dword_443268 eax +
mov esi offset ?Abort@CHtmlStream@@UAEXXZ +
mov dword_443274 eax +
mov dword_44327C edx +
mov dword_443280 eax +
mov dword_44328C eax +
mov dword_443298 eax +
mov dword_4432A0 ecx +
mov dword_4432A4 eax +
mov edx offset nullsub_3 +
mov eax offset loc_41090E +
xor ecx ecx +
mov dword_443270 esi +
mov dword_4431F4 168h +
mov dword_443200 169h +
mov dword_44320C 7D4Ah +
mov dword_443218 0D9h +
mov dword_443224 0D8h +
mov dword_443230 0DAh +
mov dword_44323C 0DBh +
mov dword_443248 0D5h +
mov dword_443254 419h +
mov dword_443260 445h +
mov dword_44326C 446h +
mov dword_443278 7D29h +
mov dword_443284 7D28h +
mov dword_443288 edx +
mov dword_443290 7D2Ah +
mov dword_44329C 7D30h +
mov dword_4432A8 7D34h +
mov dword_4432AC eax +
mov dword_4432B0 ecx +
pop esi  +
retn   +
***
jmp $+5  +
mov eax offset loc_410808 +
xor ecx ecx +
mov dword_4432BC eax +
mov eax offset sub_41084F +
mov dword_4432C8 eax +
mov eax offset sub_429C0F +
mov dword_4432C0 ecx +
mov dword_4432C4 5 +
mov dword_4432CC ecx +
mov dword_4432D0 53h +
mov dword_4432D4 eax +
mov dword_4432D8 ecx +
retn   +
***
mov eax offset loc_433D90 +
mov ecx [ecx+0BCh] +
call sub_4105E5  +
test [esp+arg_0] 1 +
jz loc_410527  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
retn 4  +
***
mov eax offset loc_433DA4 +
call sub_4109E2  +
call sub_4105A3  +
mov dword ptr [ecx] offset off_438AC8 +
jmp ??1CDragListBox@@UAE@XZ  +
***
mov eax offset loc_433DF8 +
cmp [esp+arg_4] 5 +
cmp [ebp+arg_0] 111h +
mov eax [ecx+20h] +
mov edx [esp+arg_0] +
mov [ecx+0A4h] eax +
cmp dword ptr [edx] 0 +
jnz locret_410805  +
cmp dword ptr [ecx+13Ch] 0 +
jz locret_410805  +
push esi  +
lea esi [ecx+80h] +
push eax  +
mov ecx esi +
call sub_40FBDD  +
mov ecx esi +
call sub_410B4E  +
pop esi  +
retn 4  +
***
push esi  +
mov esi ecx +
push 0D3h  +
push dword ptr [esi+0A4h]  +
call ds:GetDlgItem  +
cmp [esp+8] eax +
jnz loc_41082D  +
lea ecx [esi+80h] +
call sub_41136F  +
xor eax eax +
pop esi  +
retn 8  +
***
add ecx 80h +
jmp sub_40F6EA  +
***
sub esp 24h +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
movzx ebx ax +
mov edi 0D3h +
mov esi ecx +
shr eax 10h +
push edi  +
mov [ebp+var_4] ebx +
mov [ebp+arg_4] eax +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
test eax eax +
jz loc_4108F7  +
cmp [ebp+arg_0] 1 +
jz loc_4108F7  +
test ebx ebx +
jz loc_4108F7  +
mov eax [ebp+arg_4] +
test eax eax +
jz loc_4108F7  +
cmp [esi+140h] ebx +
jnz loc_410899  +
cmp [esi+144h] eax +
jz loc_4108F7  +
push edi  +
mov ecx esi +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
mov ebx ds:GetWindowRect +
lea ecx [ebp+Rect] +
push ecx  +
push dword ptr [eax+20h]  +
call ebx  +
lea eax [ebp+var_24] +
push eax  +
push dword ptr [esi+20h]  +
call ebx  +
mov eax [ebp+var_1C] +
push 1  +
mov [ebp+Rect.right] eax +
mov eax [ebp+var_18] +
mov [ebp+Rect.bottom] eax +
lea eax [ebp+Rect] +
push eax  +
push edi  +
mov ecx esi +
call ?GetDlgItem@CWnd@@QBEPAV1@H@Z  +
push dword ptr [eax+20h]  +
push dword ptr [esi+20h]  +
call HHA_79  +
mov eax ds:?sizeDefault@CScrollView@@2UtagSIZE@@B +
mov ecx esi +
push eax  +
push eax  +
push [ebp+arg_4]  +
push [ebp+var_4]  +
push 1  +
call ?SetScrollSizes@CScrollView@@QAEXHUtagSIZE@@ABU2@1@Z  +
mov ebx [ebp+var_4] +
push [ebp+arg_4]  +
mov ecx esi +
push ebx  +
push [ebp+arg_0]  +
call ?OnSize@CScrollView@@QAEXIHH@Z  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
leave   +
retn 8  +
***
mov ecx [ecx+0BCh] +
jmp dword ptr [eax+4]  +
***
call _atexit  +
pop ecx  +
retn   +
***
push ecx  +
push 0FFFFFFFFh  +
push ebp  +
mov esi ecx +
push esi  +
xor edi edi +
mov eax ecx +
xor eax eax +
sub esp 20h +
push esi  +
push esi  +
push esi  +
push 0DAh  +
mov eax offset loc_433E2C +
push 0DBh  +
mov eax offset loc_433E40 +
mov eax offset loc_433E5C +
call _EH_prolog  +
sub esp 10h +
push ebx  +
push edi  +
xor edi edi +
mov ebx ecx +
mov dword ptr [ebp-14h] offset off_438BB0 +
mov [ebp-10h] edi +
mov [ebp-4] edi +
call ds:CreatePopupMenu  +
push eax  +
lea ecx [ebp-14h] +
call ?Attach@CMenu@@QAEHPAUHMENU__@@@Z  +
cmp eax edi +
jnz loc_4113B5  +
push edi  +
push 1D71Ah  +
push dword ptr [ebx+24h]  +
call HHA_74  +
jmp loc_411483  +
push esi  +
push 201Dh  +
call HHA_76  +
mov esi ds:AppendMenuA +
push eax  +
push 169h  +
push edi  +
push dword ptr [ebp-10h]  +
call esi  +
push 201Eh  +
call HHA_76  +
push eax  +
push 168h  +
push edi  +
push dword ptr [ebp-10h]  +
call esi  +
push 201Fh  +
call HHA_76  +
push eax  +
push 7D4Ah  +
push edi  +
push dword ptr [ebp-10h]  +
call esi  +
push edi  +
push edi  +
push 800h  +
push dword ptr [ebp-10h]  +
call esi  +
push 2020h  +
call HHA_76  +
push eax  +
push 0D9h  +
push edi  +
push dword ptr [ebp-10h]  +
call esi  +
push 2021h  +
call HHA_76  +
push eax  +
push 0D8h  +
push edi  +
push dword ptr [ebp-10h]  +
call esi  +
push 2022h  +
call HHA_76  +
push eax  +
push 0DAh  +
push edi  +
push dword ptr [ebp-10h]  +
call esi  +
push 2023h  +
call HHA_76  +
push eax  +
push 0DBh  +
push edi  +
push dword ptr [ebp-10h]  +
call esi  +
lea eax [ebp-1Ch] +
push eax  +
call ds:GetCursorPos  +
push edi  +
push dword ptr [ebx+24h]  +
push edi  +
push dword ptr [ebp-18h]  +
push dword ptr [ebp-1Ch]  +
push 2  +
push dword ptr [ebp-10h]  +
call ds:TrackPopupMenu  +
pop esi  +
mov dword ptr [ebp-14h] offset off_438BB0 +
lea ecx [ebp-14h] +
mov dword ptr [ebp-4] 1 +
call ?DestroyMenu@CMenu@@QAEHXZ  +
mov ecx [ebp-0Ch] +
pop edi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
test [esp+arg_0] 1 +
mov eax [esp+arg_0] +
call sub_41153E  +
mov eax offset loc_433E70 +
mov eax offset __ehhandler$?FillVariant@CDaoFieldExchange@@SGXPAXKPAPAVCOleVariant@@@Z +
call sub_40F6B0  +
mov esi ecx +
push ebp  +
mov eax offset loc_433ED7 +
mov eax offset loc_433F02 +
mov eax offset loc_433F1C +
mov eax offset loc_433F38 +
mov eax offset loc_433F54 +
mov eax offset loc_433F68 +
cmp [esp+arg_0] 3Dh +
mov eax offset loc_433FAA +
sub esp 118h +
mov eax offset loc_433FDD +
mov eax offset __ehhandler$?CreateInstance@?$CMFCComObject@VCAccessibleProxy@ATL@@@@SGJPAPAV1@@Z +
push ebp  +
mov eax offset __ehhandler$?CreateStream@COleStreamFile@@QAEHPAUIStorage@@PBDKPAVCFileException@@@Z_0 +
mov eax offset loc_434024 +
mov eax offset loc_434038 +
mov eax offset loc_43404C +
cmp [esp+arg_0] 3ECh +
mov eax offset loc_434060 +
mov eax offset loc_43407F +
mov eax offset loc_43409F +
sub esp 0C8h +
push [esp+nIDDlgItem]  +
mov eax offset loc_4340EF +
mov eax offset loc_43411A +
mov eax offset loc_43412C +
push esi  +
push esi  +
mov eax offset loc_43415B +
sub esp 0Ch +
push ebx  +
push ebp  +
push esi  +
push edi  +
mov edi ds:GetDlgItem +
mov esi ecx +
push 6Dh  +
push dword ptr [esi+10h]  +
call edi  +
xor ebx ebx +
mov [esp+1Ch+var_C] eax +
cmp [esi+4] ebx +
jz loc_414855  +
push 4CEh  +
push dword ptr [esi+10h]  +
call edi  +
mov ebp ds:GetWindowRect +
lea ebx [esi+7Ch] +
push ebx  +
push eax  +
call ebp  +
push ebx  +
push dword ptr [esi+10h]  +
call HHA_136  +
push 4CEh  +
push dword ptr [esi+10h]  +
call edi  +
mov ebx ds:ShowWindow +
push 0  +
push eax  +
call ebx  +
push 42Bh  +
push dword ptr [esi+10h]  +
call edi  +
lea ecx [esi+8Ch] +
push ecx  +
push eax  +
call ebp  +
lea eax [esi+8Ch] +
push eax  +
push dword ptr [esi+10h]  +
call HHA_136  +
push 42Bh  +
push dword ptr [esi+10h]  +
call edi  +
push 0  +
push eax  +
call ebx  +
mov eax [esi+70h] +
or ebp 0FFFFFFFFh +
add eax 0C4h +
cmp [eax] ebp +
jnz loc_414768  +
mov dword ptr [eax] 200h +
mov eax [esi+70h] +
add eax 0C0h +
cmp [eax] ebp +
jnz loc_41477A  +
mov dword ptr [eax] 800035h +
mov eax [esi+70h] +
mov edi ds:GetSysColor +
mov eax [eax+0B0h] +
cmp eax ebp +
jnz loc_414791  +
push 8  +
call edi  +
mov [esi+78h] eax +
mov eax [esi+70h] +
cmp [eax+0ACh] ebp +
jz loc_4147A7  +
mov eax [eax+0B0h] +
jmp loc_4147AB  +
push 5  +
call edi  +
mov edi ds:SendMessageA +
mov [esi+74h] eax +
cmp ds:dword_438C80 0 +
mov ebp 19Ah +
jz loc_4147FC  +
mov ebx offset dword_438C80 +
mov eax [esi+70h] +
mov ecx [ebx+4] +
test [eax+0C4h] ecx +
jz loc_4147F4  +
push dword ptr [ebx]  +
call HHA_194  +
push eax  +
push 0  +
push 180h  +
push [esp+3Ch+hWnd]  +
call edi  +
push dword ptr [ebx]  +
push eax  +
push ebp  +
push [esp+3Ch+hWnd]  +
call edi  +
add ebx 8 +
cmp dword ptr [ebx] 0 +
jnz loc_4147C7  +
cmp ds:dword_438CA8 0 +
jz loc_41483F  +
mov ebx offset dword_438CA8 +
mov eax [esi+70h] +
mov ecx [ebx+4] +
test [eax+0C0h] ecx +
jz loc_414837  +
push dword ptr [ebx]  +
call HHA_194  +
push eax  +
push 0  +
push 180h  +
push [esp+40h+var_24]  +
call edi  +
push dword ptr [ebx]  +
push eax  +
push ebp  +
push [esp+40h+var_24]  +
call edi  +
add ebx 8 +
cmp dword ptr [ebx] 0 +
jnz loc_41480A  +
push offset aCntcust_htm  +
mov dword ptr [esi+24h] offset unk_438CF8 +
call sub_403FAB  +
jmp loc_41495C  +
mov edi ds:SendMessageA +
push ebx  +
push ebx  +
push 18Bh  +
push eax  +
call edi  +
mov ecx [esi+70h] +
xor ebp ebp +
cmp eax ebx +
mov [esp+1Ch+var_4] eax +
mov [ecx+0C0h] ebx +
mov ecx [esi+70h] +
mov [ecx+0C4h] ebx +
jle loc_4148F1  +
push ebx  +
push ebp  +
push 199h  +
push [esp+28h+var_C]  +
call edi  +
cmp ds:dword_438C80 ebx +
mov [esp+1Ch+var_8] eax +
jz loc_4148BE  +
mov ecx offset dword_438C80 +
mov edx ecx +
mov eax [esp+1Ch+var_8] +
cmp [edx] eax +
jnz loc_4148B5  +
mov edx [esi+70h] +
mov eax [ecx+4] +
or [edx+0C4h] eax +
add ecx 8 +
mov edx ecx +
cmp [ecx] ebx +
jnz loc_4148A1  +
cmp ds:dword_438CA8 ebx +
jz loc_4148EA  +
mov ecx offset dword_438CA8 +
mov edx ecx +
mov eax [esp+1Ch+var_8] +
cmp [edx] eax +
jnz loc_4148E1  +
mov edx [esi+70h] +
mov eax [ecx+4] +
or [edx+0C0h] eax +
add ecx 8 +
mov edx ecx +
cmp [ecx] ebx +
jnz loc_4148CD  +
inc ebp  +
cmp ebp [esp+1Ch+var_4] +
jl loc_414881  +
mov eax [esi+70h] +
or ebp 0FFFFFFFFh +
add eax 0C4h +
mov ecx [eax] +
cmp ecx ebx +
jz loc_41490A  +
cmp ecx 200h +
jnz loc_41490C  +
mov [eax] ebp +
mov eax [esi+70h] +
add eax 0C0h +
mov ecx [eax] +
cmp ecx ebx +
jz loc_414922  +
cmp ecx 800035h +
jnz loc_414924  +
mov [eax] ebp +
mov ebx ds:GetSysColor +
mov edi [esi+78h] +
push 8  +
call ebx  +
cmp edi eax +
jz loc_414940  +
mov eax [esi+70h] +
mov [eax+0B0h] edi +
jmp loc_414943  +
mov [esi+78h] ebp +
mov edi [esi+74h] +
push 5  +
call ebx  +
cmp edi eax +
jz loc_414959  +
mov eax [esi+70h] +
mov [eax+0ACh] edi +
jmp loc_41495C  +
mov [esi+74h] ebp +
push 1  +
pop eax  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
add esp 0Ch +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
mov esi ecx +
lea ecx [ebp-24h] +
push dword ptr [esi+78h]  +
push dword ptr [esi+10h]  +
call HHA_255  +
lea eax [ebp-24h] +
push eax  +
call ChooseColorA  +
test eax eax +
jz loc_4149A5  +
mov eax [ebp-18h] +
cmp eax [esi+78h] +
jz loc_4149A5  +
mov [esi+78h] eax +
lea eax [esi+7Ch] +
push 0  +
push eax  +
push dword ptr [esi+10h]  +
call ds:InvalidateRect  +
pop esi  +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
sub esp 24h +
push esi  +
mov esi ecx +
lea ecx [ebp-24h] +
push dword ptr [esi+74h]  +
push dword ptr [esi+10h]  +
call HHA_255  +
lea eax [ebp-24h] +
push eax  +
call ChooseColorA  +
test eax eax +
jz loc_4149E9  +
mov eax [ebp-18h] +
cmp eax [esi+74h] +
jz loc_4149E9  +
mov [esi+74h] eax +
lea eax [esi+8Ch] +
push 0  +
push eax  +
push dword ptr [esi+10h]  +
call ds:InvalidateRect  +
pop esi  +
leave   +
retn   +
***
mov eax offset loc_434170 +
call _EH_prolog  +
sub esp 5Ch +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
push 6Dh  +
push dword ptr [edi+10h]  +
call ds:GetDlgItem  +
mov esi ds:SendMessageA +
xor ebx ebx +
push ebx  +
push ebx  +
push 18Bh  +
push eax  +
mov [ebp-10h] eax +
call esi  +
mov ecx [edi+70h] +
cmp eax ebx +
mov [ebp-1Ch] eax +
mov [ebp-14h] ebx +
mov [ecx+0C0h] ebx +
mov ecx [edi+70h] +
mov [ecx+0C4h] ebx +
jle loc_414AAC  +
push ebx  +
push dword ptr [ebp-14h]  +
push 199h  +
push dword ptr [ebp-10h]  +
call esi  +
cmp ds:dword_438C80 ebx +
mov [ebp-18h] eax +
jz loc_414A76  +
mov ecx offset dword_438C80 +
mov eax ecx +
mov edx [ebp-18h] +
cmp [eax] edx +
jnz loc_414A6D  +
mov eax [edi+70h] +
mov edx [ecx+4] +
or [eax+0C4h] edx +
add ecx 8 +
mov eax ecx +
cmp [ecx] ebx +
jnz loc_414A5A  +
cmp ds:dword_438CA8 ebx +
jz loc_414AA1  +
mov ecx offset dword_438CA8 +
mov eax ecx +
mov edx [ebp-18h] +
cmp [eax] edx +
jnz loc_414A98  +
mov eax [edi+70h] +
mov edx [ecx+4] +
or [eax+0C0h] edx +
add ecx 8 +
mov eax ecx +
cmp [ecx] ebx +
jnz loc_414A85  +
inc dword ptr [ebp-14h]  +
mov eax [ebp-14h] +
cmp eax [ebp-1Ch] +
jl loc_414A3A  +
push dword ptr [edi+10h]  +
mov eax [edi+70h] +
lea ecx [ebp-68h] +
mov [ebp-1Ch] eax +
push 16h  +
call HHA_301  +
mov eax [ebp-1Ch] +
mov dword ptr [ebp-68h] offset off_438D98 +
mov [ebp-20h] eax +
lea ecx [ebp-68h] +
mov [ebp-4] ebx +
call HHA_238  +
test eax eax +
jz loc_414C11  +
mov edx [ebp-28h] +
cmp edx ebx +
jz loc_414BAB  +
xor eax eax +
cmp ds:dword_438C80 ebx +
jz loc_414C11  +
mov ecx offset dword_438C80 +
test [ecx+4] edx +
jnz loc_414B0F  +
add ecx 8 +
inc eax  +
cmp [ecx] ebx +
jnz loc_414AFD  +
jmp loc_414C11  +
push ds:dword_438C80[eax*8]  +
lea ebx ds:438C80h[eax*8] +
call HHA_194  +
push eax  +
mov edi 18Fh +
push 0FFFFFFFFh  +
push edi  +
push dword ptr [ebp-10h]  +
call esi  +
cmp eax 0FFFFFFFFh +
jnz loc_414C11  +
cmp dword ptr [ebp-28h] 200h +
jnz loc_414B66  +
push 1D901h  +
call HHA_194  +
push eax  +
push 0FFFFFFFFh  +
push edi  +
push dword ptr [ebp-10h]  +
call esi  +
test eax eax +
jz loc_414B93  +
push 0  +
push eax  +
push 182h  +
push dword ptr [ebp-10h]  +
jmp loc_414B91  +
cmp dword ptr [ebp-28h] 100h +
jnz loc_414B93  +
push 1D900h  +
call HHA_194  +
push eax  +
push 0FFFFFFFFh  +
push edi  +
push dword ptr [ebp-10h]  +
call esi  +
test eax eax +
jz loc_414B93  +
push 0  +
push eax  +
push 182h  +
push dword ptr [ebp-10h]  +
call esi  +
push dword ptr [ebx]  +
call HHA_194  +
push eax  +
push 0  +
push 180h  +
push dword ptr [ebp-10h]  +
call esi  +
push dword ptr [ebx]  +
jmp loc_414C06  +
xor ecx ecx +
cmp ds:dword_438CA8 ebx +
jz loc_414C11  +
mov eax offset dword_438CA8 +
mov edx [ebp-24h] +
cmp edx [eax+4] +
jz loc_414BCC  +
add eax 8 +
inc ecx  +
cmp [eax] ebx +
jnz loc_414BBA  +
jmp loc_414C11  +
push ds:dword_438CA8[ecx*8]  +
lea edi ds:438CA8h[ecx*8] +
call HHA_194  +
push eax  +
push 0FFFFFFFFh  +
push 18Fh  +
push dword ptr [ebp-10h]  +
call esi  +
cmp eax 0FFFFFFFFh +
jnz loc_414C11  +
push dword ptr [edi]  +
call HHA_194  +
push eax  +
push ebx  +
push 180h  +
push dword ptr [ebp-10h]  +
call esi  +
push dword ptr [edi]  +
push eax  +
push 19Ah  +
push dword ptr [ebp-10h]  +
call esi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-68h] +
call HHA_297  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
mov eax offset loc_434184 +
push esi  +
mov eax offset loc_4341A3 +
call sub_415197  +
mov eax offset loc_4341C3 +
sub esp 10Ch +
call ds:GetDC  +
mov eax ds:lParam +
xor ecx ecx +
push esi  +
mov eax offset loc_4341E0 +
mov eax offset loc_43420A +
call ??1CDragListBox@@UAE@XZ  +
mov eax offset unknown_libname_7 +
cmp dword ptr [esi+4] 0 +
mov dword ptr [esi+24h] offset unk_438E58 +
jz loc_415554  +
call sub_415C55  +
push 439h  +
mov ecx esi +
call HHA_302  +
push offset aInfocat_htm  +
call sub_403FAB  +
push 1  +
pop eax  +
pop esi  +
retn   +
***
mov eax offset loc_434258 +
call _EH_prolog  +
sub esp 54h +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov eax [esi+70h] +
cmp byte ptr [eax] 20h +
jz loc_415598  +
mov ecx eax +
test ecx ecx +
jz loc_415584  +
xor edx edx +
cmp [ecx] dl +
setz dl  +
mov ecx edx +
jmp loc_415587  +
push 1  +
pop ecx  +
test ecx ecx +
jnz loc_415598  +
mov ecx [esi+78h] +
push eax  +
call sub_40D020  +
mov ebx eax +
jmp loc_41559A  +
xor ebx ebx +
push dword ptr [esi+10h]  +
mov edi [esi+78h] +
lea ecx [ebp-60h] +
push 0D3h  +
call HHA_301  +
and dword ptr [ebp-20h] 0 +
mov dword ptr [ebp-60h] offset off_438FD0 +
mov [ebp-1Ch] edi +
mov eax [esi+74h] +
and dword ptr [ebp-4] 0 +
mov [ebp-18h] ebx +
cmp byte ptr [eax] 20h +
jz loc_4155F3  +
mov ecx eax +
test ecx ecx +
jz loc_4155DB  +
xor edx edx +
cmp [ecx] dl +
setz dl  +
mov ecx edx +
jmp loc_4155DE  +
push 1  +
pop ecx  +
test ecx ecx +
jnz loc_4155F3  +
push eax  +
mov eax [esi+78h] +
push dword ptr [eax+68h]  +
call HHA_50  +
mov [ebp-14h] eax +
jmp loc_4155F7  +
or dword ptr [ebp-14h] 0FFFFFFFFh +
push 1  +
lea ecx [ebp-60h] +
pop ebx  +
mov [ebp-10h] ebx +
call HHA_238  +
test eax eax +
jz loc_415664  +
mov eax [ebp-18h] +
test eax eax +
jle loc_415633  +
mov ecx [esi+78h] +
mov ecx [ecx+60h] +
mov ecx [ecx+4] +
push dword ptr [ecx+eax*4]  +
call HHA_23  +
mov edi eax +
mov eax [esi+70h] +
test eax eax +
jz loc_415630  +
push eax  +
call HHA_132  +
mov [esi+70h] edi +
mov eax [ebp-14h] +
test eax eax +
jle loc_41565D  +
mov ecx [esi+78h] +
mov ecx [ecx+68h] +
mov ecx [ecx+4] +
push dword ptr [ecx+eax*4]  +
call HHA_23  +
mov edi eax +
mov eax [esi+74h] +
test eax eax +
jz loc_41565A  +
push eax  +
call HHA_132  +
mov [esi+74h] edi +
mov ecx esi +
call sub_415C55  +
cmp dword ptr [ebp-20h] 0 +
mov [ebp-4] ebx +
jz loc_415675  +
push dword ptr [ebp-20h]  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-60h] +
call HHA_297  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
mov eax offset loc_43426C +
call _EH_prolog  +
push esi  +
mov esi ecx +
mov eax [esi+40h] +
and dword ptr [ebp-4] 0 +
test eax eax +
jz loc_4156AE  +
push eax  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call HHA_297  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax offset loc_4342B0 +
call _EH_prolog  +
sub esp 58h +
push ebx  +
push esi  +
push edi  +
mov esi ecx +
push 439h  +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
push dword ptr [esi+10h]  +
mov edi [esi+78h] +
lea ecx [ebp-64h] +
push 0D3h  +
call HHA_301  +
xor ebx ebx +
mov dword ptr [ebp-64h] offset off_438FD0 +
mov [ebp-24h] ebx +
mov [ebp-20h] edi +
mov [ebp-1Ch] ebx +
mov eax [esi+78h] +
mov [ebp-4] ebx +
mov edi 4000h +
cmp [eax+60h] ebx +
jnz loc_41576F  +
push 58h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
cmp ecx ebx +
mov byte ptr [ebp-4] 1 +
jz loc_415738  +
push edi  +
call HHA_216  +
jmp loc_41573A  +
xor eax eax +
mov ecx [esi+78h] +
push 58h  +
mov [ebp-4] bl +
mov [ecx+60h] eax +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
cmp ecx ebx +
mov byte ptr [ebp-4] 2 +
jz loc_415764  +
push 10000h  +
call HHA_216  +
jmp loc_415766  +
xor eax eax +
mov ecx [esi+78h] +
mov [ebp-4] bl +
mov [ecx+64h] eax +
mov eax [esi+78h] +
cmp [eax+68h] ebx +
jnz loc_41579F  +
push 58h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
cmp ecx ebx +
mov byte ptr [ebp-4] 3 +
jz loc_415794  +
push edi  +
call HHA_216  +
jmp loc_415796  +
xor eax eax +
mov ecx [esi+78h] +
mov [ebp-4] bl +
mov [ecx+68h] eax +
mov eax [esi+78h] +
cmp [eax+6Ch] ebx +
jnz loc_4157CF  +
push 58h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
cmp ecx ebx +
mov byte ptr [ebp-4] 4 +
jz loc_4157C4  +
push edi  +
call HHA_216  +
jmp loc_4157C6  +
xor eax eax +
mov ecx [esi+78h] +
mov [ebp-4] bl +
mov [ecx+6Ch] eax +
lea ecx [ebp-64h] +
mov [ebp-14h] ebx +
mov [ebp-1Ch] ebx +
mov [ebp-18h] ebx +
call HHA_238  +
test eax eax +
jz loc_4157EB  +
mov ecx esi +
call sub_415C55  +
cmp [ebp-24h] ebx +
mov dword ptr [ebp-4] 5 +
jz loc_4157FF  +
push dword ptr [ebp-24h]  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-64h] +
call HHA_297  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
push edi  +
push ebx  +
call sub_4158F7  +
test eax eax +
jz loc_4158AC  +
mov ecx [esi+78h] +
push edi  +
push ebx  +
call sub_430BAA  +
inc ebx  +
jmp loc_415881  +
***
mov eax [ecx+84h] +
mov ecx [esp+arg_0] +
push esi  +
push edi  +
mov edi [eax+ecx*8+4] +
test edi edi +
jz loc_41592B  +
mov eax [esp+8+arg_4] +
push 20h  +
cdq   +
pop ecx  +
idiv  ecx +
mov eax [esp+8+arg_4] +
push 1  +
pop esi  +
push 20h  +
mov ecx edx +
shl esi cl +
cdq   +
pop ecx  +
idiv  ecx +
and esi [edi+eax*4] +
jmp loc_41592D  +
xor esi esi +
mov eax esi +
pop edi  +
pop esi  +
retn 8  +
***
push ebx  +
push esi  +
push edi  +
mov esi ecx +
push 520h  +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
cmp dword ptr [esi+74h] 0 +
jz loc_4159F5  +
mov eax [esi+74h] +
test eax eax +
jz loc_415963  +
xor ecx ecx +
cmp [eax] cl +
setz cl  +
mov eax ecx +
jmp loc_415966  +
push 1  +
pop eax  +
test eax eax +
jnz loc_4159F5  +
push 4  +
push offset aRemoveCategory  +
push offset aAreYouSureYo_0  +
push dword ptr [esi+10h]  +
call ds:MessageBoxA  +
cmp eax 7 +
jz loc_4159F5  +
push dword ptr [esi+74h]  +
mov eax [esi+78h] +
push dword ptr [eax+68h]  +
call HHA_50  +
mov ebx eax +
mov eax [esi+78h] +
push ebx  +
mov eax [eax+84h] +
and dword ptr [eax+ebx*8-8] 0 +
mov edx [esi+78h] +
xor eax eax +
mov ecx [edx+74h] +
mov edx [edx+84h] +
shl ecx 2 +
mov edi [edx+ebx*8-4] +
mov edx ecx +
shr ecx 2 +
stos   +
mov ecx edx +
and ecx 3 +
stos   +
mov eax [esi+78h] +
mov edi offset String +
push edi  +
push dword ptr [eax+68h]  +
call HHA_54  +
mov eax [esi+78h] +
push ebx  +
push edi  +
push dword ptr [eax+6Ch]  +
call HHA_54  +
mov eax [esi+74h] +
mov ecx esi +
and byte ptr [eax] 0 +
call sub_415C55  +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
push ecx  +
push ebx  +
mov ebx ds:GetDlgItem +
push ebp  +
push esi  +
push edi  +
mov esi ecx +
push 520h  +
push dword ptr [esi+10h]  +
call ebx  +
push 521h  +
mov ebp eax +
push dword ptr [esi+10h]  +
call ebx  +
mov edi ds:SendMessageA +
push 0  +
push 0  +
push 147h  +
push ebp  +
call edi  +
cmp eax 0FFFFFFFFh +
mov [esp+10h] eax +
jnz loc_415A4F  +
push 522h  +
push dword ptr [esi+10h]  +
call ebx  +
push offset String2  +
push eax  +
call ds:SetWindowTextA  +
jmp loc_415AC6  +
cmp dword ptr [esi+74h] 0 +
jnz loc_415A71  +
mov eax [esi+74h] +
push 104h  +
test eax eax +
jnz loc_415A68  +
call HHA_133  +
jmp loc_415A6E  +
push eax  +
call HHA_131  +
mov [esi+74h] eax +
push dword ptr [esi+74h]  +
push dword ptr [esp+14h]  +
push 148h  +
push ebp  +
call edi  +
push 0  +
push dword ptr [esp+14h]  +
push 150h  +
push ebp  +
call edi  +
mov edi eax +
mov eax [esi+78h] +
mov eax [eax+6Ch] +
test eax eax +
jz loc_415AA2  +
mov eax [eax+4] +
mov ebp [eax+edi*4] +
jmp loc_415AA4  +
xor ebp ebp +
push 522h  +
push dword ptr [esi+10h]  +
call ebx  +
push ebp  +
push eax  +
call ds:SetWindowTextA  +
mov ecx esi +
call sub_415EB5  +
dec edi  +
mov ecx esi +
push edi  +
call sub_415C9B  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
call sub_415D87  +
push ebp  +
push esi  +
push esi  +
mov ebp ecx +
push esi  +
mov eax offset loc_4342DC +
mov eax offset unknown_libname_9 +
call sub_416704  +
mov eax offset loc_43435B +
push edi  +
mov eax offset loc_434378 +
mov eax offset __ehhandler$?CreateInstance@?$CMFCComObject@VCAccessibleProxy@ATL@@@@SGJPAPAV1@@Z_0 +
push ebp  +
mov eax offset loc_4343F0 +
push [esp+8+Msg]  +
push dword ptr [ecx]  +
call ds:SendMessageA  +
retn 0Ch  +
***
push 1  +
call sub_416FE8  +
retn   +
***
push 2  +
call sub_416FE8  +
retn   +
***
push 3  +
call sub_416FE8  +
retn   +
***
push 4  +
call sub_416FE8  +
retn   +
***
push 5  +
call sub_416FE8  +
retn   +
***
push 6  +
call sub_416FE8  +
retn   +
***
push 7  +
call sub_416FE8  +
retn   +
***
push 8  +
call sub_416FE8  +
retn   +
***
mov eax offset unknown_libname_10 +
mov eax offset loc_434437 +
push ebp  +
push esi  +
mov esi ecx +
push edi  +
cmp dword ptr [esi+4] 0 +
mov dword ptr [esi+1Ch] offset unk_439068 +
mov dword ptr [esi+20h] offset aHtmlhelp_chm_1 +
jz loc_417289  +
mov eax [esi+48h] +
mov edi ds:SetWindowTextA +
mov ebp ds:GetDlgItem +
mov eax dword_443B90[eax*4] +
test eax eax +
jz loc_41723D  +
mov ebx [eax] +
push 0E5h  +
push dword ptr [esi+10h]  +
call ebp  +
push ebx  +
push eax  +
call edi  +
mov eax [esi+48h] +
mov eax dword_443E28[eax*4] +
test eax eax +
jz loc_41737E  +
push dword ptr [eax]  +
push 1F4Fh  +
call HHA_76  +
push eax  +
call ds:lstrcmpA  +
test eax eax +
jz loc_41737E  +
mov eax [esi+48h] +
push 3EBh  +
push dword ptr [esi+10h]  +
mov eax dword_443E28[eax*4] +
mov ebx [eax] +
call ebp  +
push ebx  +
push eax  +
call edi  +
jmp loc_41737E  +
mov edi 0E5h +
push 0FFFh  +
push edi  +
mov ecx esi +
call HHA_249  +
lea ebx [esi+40h] +
mov ecx esi +
push ebx  +
push edi  +
call HHA_260  +
mov eax [ebx] +
test eax eax +
jz loc_4172B8  +
xor ecx ecx +
cmp [eax] cl +
setz cl  +
mov eax ecx +
jmp loc_4172BB  +
push 1  +
pop eax  +
mov ebx ds:GetDlgItem +
test eax eax +
jz loc_4172FD  +
push 4  +
push 1F4Bh  +
push dword ptr [esi+10h]  +
call HHA_74  +
cmp eax 7 +
jnz loc_4172FD  +
push edi  +
push dword ptr [esi+10h]  +
call ebx  +
push eax  +
call ds:SetFocus  +
lea eax [esp+20h+var_10] +
push offset unk_43C3D8  +
push eax  +
mov [esp+28h+var_10] 3 +
call _CxxThrowException  +
mov edi 3EBh +
push 100h  +
push edi  +
mov ecx esi +
call HHA_249  +
lea ebp [esi+44h] +
mov ecx esi +
push ebp  +
push edi  +
call HHA_260  +
mov ebp [ebp+0] +
test ebp ebp +
jz loc_41732C  +
xor eax eax +
cmp [ebp+0] al +
setz al  +
jmp loc_41732F  +
push 1  +
pop eax  +
test eax eax +
jz loc_41737E  +
mov eax [esi+40h] +
test eax eax +
jz loc_417345  +
xor ecx ecx +
cmp [eax] cl +
setz cl  +
mov eax ecx +
jmp loc_417348  +
push 1  +
pop eax  +
test eax eax +
jnz loc_41737E  +
push eax  +
push 1F4Eh  +
push dword ptr [esi+10h]  +
call HHA_74  +
push edi  +
push dword ptr [esi+10h]  +
call ebx  +
push eax  +
call ds:SetFocus  +
lea eax [esp+44h+var_34] +
push offset unk_43C3D8  +
push eax  +
mov [esp+4Ch+var_34] 3 +
call _CxxThrowException  +
push 1  +
pop eax  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
pop ecx  +
retn   +
***
push 1  +
call sub_4173CF  +
retn   +
***
push 2  +
call sub_4173CF  +
retn   +
***
push 3  +
call sub_4173CF  +
retn   +
***
push 4  +
call sub_4173CF  +
retn   +
***
push 5  +
call sub_4173CF  +
retn   +
***
push 6  +
call sub_4173CF  +
retn   +
***
push 7  +
call sub_4173CF  +
retn   +
***
push 8  +
call sub_4173CF  +
retn   +
***
sub esp 100h +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
mov eax dword_443B90[ebx*4] +
lea esi ds:443B90h[ebx*4] +
test eax eax +
mov edi ecx +
jnz loc_417440  +
push ebx  +
push 1F4Ch  +
call HHA_76  +
push eax  +
lea eax [ebp+var_100] +
push eax  +
call ds:wsprintfA  +
add esp 0Ch +
lea eax [ebp+var_100] +
push 4  +
push eax  +
call HHA_75  +
cmp eax 6 +
jnz loc_417452  +
push ebx  +
mov ecx edi +
call sub_416FE8  +
test eax eax +
jz loc_417452  +
push 4  +
push 1F4Dh  +
call HHA_166  +
cmp eax 6 +
jnz loc_417452  +
mov eax [esi] +
push dword ptr [eax]  +
push 0  +
push 0C2h  +
push dword ptr [edi+20h]  +
call ds:SendMessageA  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov eax offset loc_43444D +
call _EH_prolog  +
push ecx  +
push 148h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
cmp ecx eax +
mov [ebp-4] eax +
jz loc_417482  +
call sub_4174A4  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax offset loc_434473 +
call sub_417554  +
test [esp+arg_0] 1 +
jz loc_417518  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax esi +
pop esi  +
retn 4  +
***
mov eax offset loc_4344B8 +
call ?OnNewDocument@CDocument@@UAEHXZ  +
call sub_42579D  +
push 0  +
push 5  +
mov esi ecx +
push 0  +
call ?UpdateAllViews@CDocument@@QAEXPAVCView@@JPAVCObject@@@Z  +
push dword ptr [esp+0Ch]  +
lea edi [esi+54h] +
mov ecx edi +
call sub_425884  +
test eax eax +
jz loc_41762B  +
mov eax [esi] +
push 0  +
mov ecx esi +
call dword ptr [eax+60h]  +
push dword ptr [edi]  +
mov ecx offset dword_444060 +
call HHA_277  +
push 1  +
pop eax  +
pop edi  +
pop esi  +
retn 4  +
***
mov eax offset loc_434510 +
mov eax offset loc_43452C +
call _EH_prolog  +
sub esp 15Ch +
cmp dword ptr [ebp+8] 4B9h +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
jnz loc_417BCA  +
and byte ptr [ebp+0Bh] 0 +
push 4ACh  +
push dword ptr [ebx+10h]  +
lea ecx [ebp-10h] +
mov dword ptr [ebp-14h] 8 +
call HHA_163  +
mov edi [ebp-10h] +
and dword ptr [ebp-4] 0 +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
lea edx [ebp-168h] +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
lea eax [ebp-168h] +
and ecx 3 +
push eax  +
movs   +
call HHA_116  +
cmp byte ptr [ebp-168h] 0 +
jz loc_417B45  +
lea eax [ebp-168h] +
push 2Ch  +
push eax  +
call HHA_8  +
mov esi eax +
test esi esi +
jz loc_417B45  +
and byte ptr [esi] 0 +
lea eax [ebp-168h] +
push eax  +
call HHA_116  +
inc esi  +
push esi  +
call HHA_116  +
mov esi eax +
mov ecx esi +
call HHA_196  +
push 2Ch  +
push esi  +
mov [ebp-14h] eax +
call HHA_8  +
test eax eax +
jz loc_417B45  +
inc eax  +
push eax  +
call HHA_116  +
mov ecx eax +
call HHA_196  +
mov [ebp+0Bh] al +
push dword ptr [ebx+10h]  +
lea eax [ebp+0Bh] +
lea ecx [ebp-68h] +
push eax  +
lea eax [ebp-14h] +
push eax  +
lea eax [ebp-168h] +
push eax  +
call sub_414E36  +
lea ecx [ebp-68h] +
mov byte ptr [ebp-4] 1 +
call HHA_238  +
cmp eax 1 +
jnz loc_417BAC  +
movzx eax byte ptr [ebp+0Bh] +
push eax  +
lea eax [ebp-168h] +
push dword ptr [ebp-14h]  +
push dword ptr [ebp-28h]  +
push offset aSUU  +
push eax  +
call ds:wsprintfA  +
add esp 14h +
push 4ACh  +
push dword ptr [ebx+10h]  +
call ds:GetDlgItem  +
lea ecx [ebp-168h] +
push ecx  +
push eax  +
call ds:SetWindowTextA  +
and byte ptr [ebp-4] 0 +
lea ecx [ebp-68h] +
call sub_414EC0  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-10h] 0 +
jz loc_417BCA  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn 4  +
***
push offset aCommdlg_find_0  +
call ds:RegisterWindowMessageA  +
mov dword_4443EC eax +
retn   +
***
mov eax offset loc_434541 +
call _EH_prolog  +
push ecx  +
push 14Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
cmp ecx eax +
mov [ebp-4] eax +
jz loc_417C15  +
call sub_417E5C  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
leave   +
retn   +
***
retn   +
***
jmp $+5  +
push ebx  +
push ebp  +
mov ebp offset sub_40FECF +
mov eax 80h +
mov dword_44358C ebp +
mov ebp eax +
mov dword_443590 ebp +
mov ebp offset loc_417630 +
mov dword_443598 ebp +
mov ebp eax +
mov dword_44359C ebp +
mov ebp offset ?Abort@CHtmlStream@@UAEXXZ +
mov dword_4435A4 ebp +
mov ebp eax +
mov ecx offset sub_4185D8 +
mov dword_4435A8 ebp +
mov ebp offset sub_418AA8 +
mov dword_443574 ecx +
push esi  +
mov ecx offset sub_41878E +
mov dword_4435B0 ebp +
push edi  +
mov ebp eax +
mov ebx offset sub_40F6EA +
mov edi offset sub_418524 +
mov dword_443580 ecx +
mov esi offset sub_40FDD6 +
mov ecx offset sub_40FECF +
mov dword_4435B4 ebp +
mov dword_443544 ebx +
mov dword_443550 edi +
mov dword_4435BC ebx +
xor ebp ebp +
mov dword_4435E0 edi +
mov dword_443548 eax +
mov dword_443554 eax +
mov dword_44355C esi +
mov dword_443560 eax +
mov dword_44356C eax +
mov dword_443578 eax +
mov dword_443584 eax +
mov dword_4435C0 eax +
mov ebx offset nullsub_3 +
mov dword_4435D4 ecx +
mov dword_4435D8 eax +
mov dword_4435E4 eax +
mov dword_4435F0 eax +
mov dword_4435F8 esi +
mov dword_4435FC eax +
pop edi  +
mov edx offset sub_40FC3C +
mov dword_4435CC ebp +
mov eax offset nullsub_3 +
xor ecx ecx +
pop esi  +
mov dword_4435C8 ebx +
pop ebp  +
mov dword_44354C 0D7h +
mov dword_443558 0D9h +
mov dword_443564 0D8h +
mov dword_443568 edx +
mov dword_443570 0DAh +
mov dword_44357C 0DBh +
mov dword_443588 0D5h +
mov dword_443594 419h +
mov dword_4435A0 446h +
mov dword_4435AC 447h +
mov dword_4435B8 7D29h +
mov dword_4435C4 7D28h +
mov dword_4435D0 7D2Ah +
mov dword_4435DC 7D2Ch +
mov dword_4435E8 7D2Dh +
mov dword_4435EC edx +
mov dword_4435F4 7D2Eh +
mov dword_443600 7D30h +
mov dword_443604 eax +
mov dword_443608 ecx +
pop ebx  +
retn   +
***
jmp $+5  +
mov eax offset loc_4181E9 +
xor ecx ecx +
mov dword_443614 eax +
mov eax offset sub_429C0F +
mov dword_443620 eax +
mov eax offset sub_418232 +
mov dword_443618 ecx +
mov dword_44361C 53h +
mov dword_443624 ecx +
mov dword_443628 5 +
mov dword_44362C eax +
mov dword_443630 ecx +
retn   +
***
mov eax offset loc_434562 +
mov ecx [ecx+0C0h] +
call sub_417FD9  +
mov eax offset loc_434574 +
call sub_418346  +
call sub_417F97  +
mov dword ptr [ecx] offset off_439318 +
jmp ??1CDragListBox@@UAE@XZ  +
***
mov eax offset loc_4345BA +
cmp [esp+arg_4] 5 +
cmp [ebp+arg_0] 111h +
mov eax [ecx+20h] +
mov edx [esp+arg_0] +
mov [ecx+0A4h] eax +
cmp dword ptr [edx] 0 +
jnz locret_4181E6  +
cmp dword ptr [ecx+140h] 0 +
jz locret_4181E6  +
push esi  +
lea esi [ecx+80h] +
push eax  +
mov ecx esi +
call sub_40FBDD  +
mov ecx esi +
call sub_418418  +
pop esi  +
retn 4  +
***
push esi  +
mov esi ecx +
push 0D3h  +
push dword ptr [esi+0A4h]  +
call ds:GetDlgItem  +
cmp [esp+8] eax +
jnz loc_41820E  +
lea ecx [esi+80h] +
call sub_41899C  +
xor eax eax +
pop esi  +
retn 8  +
***
add ecx 80h +
jmp sub_40F6EA  +
***
sub esp 24h +
call HHA_251  +
mov ecx [ecx+0C0h] +
push ebp  +
push esi  +
push esi  +
push esi  +
mov eax offset loc_4345CC +
mov eax offset loc_4345E0 +
push 0FFFFFFFFh  +
mov eax offset loc_4345FC +
mov eax offset loc_434628 +
call _EH_prolog  +
sub esp 70h +
push edi  +
mov edi ecx +
call ds:GetUserDefaultLCID  +
mov Locale eax +
mov eax [edi+8] +
mov eax [eax+8] +
mov eax [eax+4] +
cmp byte ptr [eax+19h] 1 +
jbe loc_418AE6  +
push 0  +
push 1FE8h  +
push dword ptr [edi+24h]  +
call HHA_74  +
jmp loc_418C4B  +
lea ecx [ebp-24h] +
call sub_40462F  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-7Ch] +
call HHA_35  +
mov eax [edi+8] +
push 1  +
pop edx  +
mov byte ptr [ebp-4] 1 +
mov ecx [eax+14h] +
mov [ebp-20h] edx +
dec ecx  +
cmp ecx edx +
jl loc_418C02  +
push esi  +
push ebx  +
mov ecx [eax+8] +
mov ebx [ecx+edx*4] +
mov cl [ebx+19h] +
cmp cl 1 +
jbe loc_418BE4  +
mov eax [eax+8] +
dec edx  +
mov [ebp-1Ch] edx +
mov esi [eax+edx*4] +
lea eax [eax+edx*4] +
cmp [esi+19h] cl +
jb loc_418B48  +
mov esi [eax-4] +
sub eax 4 +
dec edx  +
cmp [esi+19h] cl +
jnb loc_418B39  +
mov [ebp-1Ch] edx +
push dword ptr [esi+4]  +
call HHA_23  +
mov [ebp-10h] eax +
push dword ptr [ebx+4]  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 2 +
call sub_40282C  +
mov eax [ebp-10h] +
mov [ebp-18h] eax +
movzx eax byte ptr [esi+19h] +
cmp eax 1 +
jle loc_418BBB  +
movzx ecx byte ptr [esi+19h] +
cmp ecx eax +
jle loc_418B93  +
mov ecx [edi+8] +
mov edx [ebp-1Ch] +
mov ecx [ecx+8] +
lea ecx [ecx+edx*4] +
mov esi [ecx-4] +
sub ecx 4 +
movzx edx byte ptr [esi+19h] +
cmp edx eax +
jg loc_418B85  +
push dword ptr [esi+4]  +
call HHA_23  +
mov [ebp-14h] eax +
push dword ptr [ebp-18h]  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 3 +
call sub_40282C  +
mov eax [ebp-14h] +
and dword ptr [ebp-14h] 0 +
mov [ebp-18h] eax +
mov byte ptr [ebp-4] 2 +
push dword ptr [ebp-18h]  +
lea eax [ebp-7Ch] +
push eax  +
call HHA_46  +
mov ecx [ebp-78h] +
cmp dword ptr [ebp-10h] 0 +
mov byte ptr [ebp-4] 1 +
mov eax [ecx+eax*4] +
mov [ebx+0Ch] eax +
jz loc_418BEA  +
push dword ptr [ebp-10h]  +
call HHA_132  +
jmp loc_418BEA  +
mov eax [ebx+4] +
mov [ebx+0Ch] eax +
mov eax [edi+8] +
mov edx [ebp-20h] +
inc edx  +
mov ecx [eax+14h] +
mov [ebp-20h] edx +
dec ecx  +
cmp edx ecx +
jle loc_418B15  +
pop ebx  +
pop esi  +
mov eax [edi+8] +
push offset loc_418C58  +
push 4  +
mov ecx [eax+14h] +
mov eax [eax+8] +
dec ecx  +
add eax 4 +
push ecx  +
push eax  +
call HHA_257  +
mov eax [edi] +
push 1  +
mov ecx edi +
call dword ptr [eax]  +
push 1  +
push 0  +
push dword ptr [edi+60h]  +
call ds:InvalidateRect  +
and byte ptr [ebp-4] 0 +
lea ecx [ebp-7Ch] +
call HHA_38  +
push dword ptr [ebp-24h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
call ds:SetCursor  +
mov ecx [ebp-0Ch] +
pop edi  +
mov large fs:0 ecx +
leave   +
retn   +
mov eax [edx] +
push 0FFFFFFFFh  +
push dword ptr [eax+0Ch]  +
mov eax [ecx] +
push 0FFFFFFFFh  +
push dword ptr [eax+0Ch]  +
push 1  +
push Locale  +
call ds:CompareStringA  +
dec eax  +
dec eax  +
retn   +
***
mov eax offset unknown_libname_45 +
mov eax offset loc_43468A +
mov eax offset __ehhandler$?_Init@locale@std@@CAPAV_Locimp@12@XZ +
push ebx  +
mov eax offset loc_4346C8 +
mov eax offset loc_4346EC +
mov eax offset loc_434710 +
mov eax offset loc_434724 +
mov eax offset loc_434750 +
push ebp  +
mov eax offset unknown_libname_11 +
mov eax offset unknown_libname_12 +
mov eax offset unknown_libname_13 +
mov eax offset unknown_libname_14 +
mov eax offset unknown_libname_15 +
mov eax offset unknown_libname_16 +
mov eax offset __ehhandler$?BuildSharedMenu@COleControl@@MAEHXZ_0 +
mov eax offset unknown_libname_17 +
mov ebp [esp+arg_0] +
mov eax offset unknown_libname_18 +
push edi  +
mov eax offset unknown_libname_46 +
push edi  +
mov eax offset loc_43488E +
mov eax offset unknown_libname_47 +
mov eax offset loc_4348C6 +
mov edx [esp+arg_8] +
push ecx  +
mov eax [esp+arg_0] +
mov eax offset loc_4348D8 +
mov ebp [esp+arg_0] +
xor edi edi +
call HHA_12  +
mov esi ecx +
mov eax offset loc_4348EC +
mov eax offset loc_434901 +
call _EH_prolog  +
push ecx  +
push 0E0h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
cmp ecx eax +
mov [ebp-4] eax +
jz loc_41D167  +
call sub_41D18F  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax ds:?classCDialogBar@CDialogBar@@2UCRuntimeClass@@A +
retn   +
***
mov esi ecx +
call sub_41D21C  +
mov eax offset loc_434914 +
push ebp  +
mov eax offset loc_434928 +
mov eax offset loc_434944 +
mov eax offset loc_434960 +
mov eax offset loc_434981 +
mov ecx [ecx+0B0h] +
push edi  +
mov eax offset unknown_libname_20 +
call _EH_prolog  +
push ecx  +
push ebx  +
push esi  +
push edi  +
push 4  +
pop edi  +
mov esi ecx +
push edi  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-10h] eax +
and dword ptr [ebp-4] 0 +
test eax eax +
jz loc_41D622  +
push 440h  +
mov ecx eax +
push dword ptr [esi+20h]  +
call sub_413C7C  +
jmp loc_41D624  +
xor eax eax +
or ebx 0FFFFFFFFh +
cmp dword ptr [esi+0B0h] 0 +
mov [ebp-4] ebx +
mov [esi+0C4h] eax +
jz loc_41D82F  +
push edi  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-10h] eax +
test eax eax +
mov dword ptr [ebp-4] 1 +
jz loc_41D660  +
push 235Ch  +
mov ecx eax +
call HHA_14  +
jmp loc_41D662  +
xor eax eax +
push 4Ch  +
mov [ebp-4] ebx +
mov [esi+98h] eax +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-10h] eax +
test eax eax +
mov dword ptr [ebp-4] 2 +
jz loc_41D693  +
push dword ptr [esi+20h]  +
mov ecx eax +
push dword ptr [esi+0B0h]  +
call sub_41DB27  +
jmp loc_41D695  +
xor eax eax +
push edi  +
mov [ebp-4] ebx +
mov [esi+0B4h] eax +
mov [esi+0A4h] eax +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-10h] eax +
test eax eax +
mov dword ptr [ebp-4] 3 +
jz loc_41D6C7  +
push 235Ah  +
mov ecx eax +
call HHA_14  +
jmp loc_41D6C9  +
xor eax eax +
push 110h  +
mov [ebp-4] ebx +
mov [esi+9Ch] eax +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-10h] eax +
test eax eax +
mov [ebp-4] edi +
jz loc_41D705  +
push dword ptr [esi+0B4h]  +
mov ecx eax +
push dword ptr [esi+0C4h]  +
push dword ptr [esi+20h]  +
push dword ptr [esi+0B0h]  +
call sub_422E98  +
jmp loc_41D707  +
xor eax eax +
push edi  +
mov [ebp-4] ebx +
mov [esi+0B8h] eax +
mov [esi+0A8h] eax +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-10h] eax +
test eax eax +
mov dword ptr [ebp-4] 5 +
jz loc_41D739  +
push 235Bh  +
mov ecx eax +
call HHA_14  +
jmp loc_41D73B  +
xor eax eax +
push 114h  +
mov [ebp-4] ebx +
mov [esi+0A0h] eax +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-10h] eax +
test eax eax +
mov dword ptr [ebp-4] 6 +
jz loc_41D77B  +
push dword ptr [esi+0B4h]  +
mov ecx eax +
push dword ptr [esi+0C4h]  +
push dword ptr [esi+20h]  +
push dword ptr [esi+0B0h]  +
call sub_424EED  +
jmp loc_41D77D  +
xor eax eax +
and dword ptr [ebp-10h] 0 +
mov [ebp-4] ebx +
mov [esi+0BCh] eax +
mov [esi+0ACh] eax +
lea ebx [esi+8Ch] +
push 1Ch  +
call ??2@YAPAXI@Z  +
mov [ebx] eax +
mov dword ptr [eax] 1 +
mov eax [ebx+0Ch] +
pop ecx  +
mov ecx [ebx] +
mov eax [eax] +
mov [ecx+0Ch] eax +
mov eax [ebx+0Ch] +
mov eax [eax] +
test eax eax +
jz loc_41D7CA  +
mov edi eax +
or ecx 0FFFFFFFFh +
xor eax eax +
push 4  +
scas   +
not ecx  +
dec ecx  +
pop edi  +
jmp loc_41D7CC  +
xor ecx ecx +
mov eax [ebx] +
mov [eax+10h] ecx +
push dword ptr [ebx]  +
mov eax [esi+0C4h] +
push dword ptr [ebp-10h]  +
push 1307h  +
push dword ptr [eax]  +
call ds:SendMessageA  +
mov eax [ebx+18h] +
add ebx edi +
and dword ptr [eax+8] 0 +
inc dword ptr [ebp-10h]  +
cmp dword ptr [ebp-10h] 3 +
jb loc_41D796  +
mov ecx [esi+0B4h] +
call HHA_239  +
mov eax [esi+0B4h] +
mov dword ptr [esi+0C8h] 1 +
push 5  +
mov eax [eax+10h] +
push eax  +
call ds:ShowWindow  +
mov ecx esi +
call sub_41DA97  +
push eax  +
call sub_403FAB  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
mov eax offset unknown_libname_48 +
mov eax [ecx+0C4h] +
sub esp 20h +
push [esp+4+arg_4]  +
sub esp 108h +
push esi  +
push edi  +
mov edi ecx +
push 0D3h  +
push dword ptr [edi+44h]  +
lea esi [edi+44h] +
call ds:GetParent  +
push eax  +
call ds:GetDlgItem  +
mov ebx ds:SendMessageA +
mov [esi] eax +
xor eax eax +
cmp [esp+wParam] eax +
jz loc_41DE51  +
mov eax [edi+40h] +
push esi  +
mov dword ptr [eax+108h] 1 +
mov ecx [edi+40h] +
call sub_41CAE2  +
mov eax [edi+40h] +
mov ecx [esp+arg_4] +
mov ebp [eax+ecx*8+114h] +
test ebp ebp +
jge loc_41DE4B  +
xor ebp ebp +
mov [esp+wParam] ebp +
jmp loc_41DE78  +
push eax  +
push eax  +
push 18Eh  +
push dword ptr [esi]  +
call ebx  +
push 0  +
push 0  +
push 188h  +
mov ebp eax +
push dword ptr [esi]  +
call ebx  +
mov ecx [edi+40h] +
push esi  +
mov [esp+4+wParam] eax +
call sub_41CAE2  +
push 0  +
push ebp  +
push 197h  +
push dword ptr [esi]  +
call ebx  +
push 0  +
push [esp+4+wParam]  +
push 186h  +
push dword ptr [esi]  +
call ebx  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn 8  +
***
mov eax offset loc_434A0F +
sub esp 20h +
mov eax offset loc_434A24 +
call _EH_prolog  +
sub esp 18h +
and dword ptr [ebp-10h] 0 +
push ebx  +
push esi  +
push edi  +
mov [ebp-14h] ecx +
mov esi [ebp+8] +
and dword ptr [ebp-4] 0 +
mov ebx [esi+8] +
cmp ebx 0FFFFFFFFh +
mov [ebp-24h] ebx +
jz loc_41E1E0  +
test byte ptr [esi+10h] 1 +
jz loc_41E05B  +
mov edi ds:GetSysColor +
push 0Eh  +
call edi  +
push eax  +
push dword ptr [esi+18h]  +
call ds:SetTextColor  +
mov [ebp-1Ch] eax +
push 0Dh  +
jmp loc_41E074  +
mov edi ds:GetSysColor +
push 8  +
call edi  +
push eax  +
push dword ptr [esi+18h]  +
call ds:SetTextColor  +
mov [ebp-1Ch] eax +
push 5  +
call edi  +
push eax  +
push dword ptr [esi+18h]  +
call ds:SetBkColor  +
mov [ebp-20h] eax +
mov eax [ebp-14h] +
and dword ptr [ebp-18h] 0 +
mov ecx [eax+40h] +
mov eax [ecx+0C8h] +
test eax eax +
jz loc_41E0A8  +
mov edx [eax+10h] +
dec edx  +
cmp ebx edx +
jge loc_41E0A8  +
mov eax [eax+4] +
push dword ptr [eax+ebx*4+4]  +
jmp loc_41E11F  +
or edi 0FFFFFFFFh +
and dword ptr [ebp+8] 0 +
mov eax [ebp+8] +
lea edx [ecx+114h] +
mov ebx [edx] +
mov [ebp-14h] ebx +
mov ebx [ebp-24h] +
cmp [ebp-14h] ebx +
jg loc_41E0DF  +
cmp dword ptr [ebp-14h] 0FFFFFFFFh +
jz loc_41E0D3  +
mov edi [ebp+8] +
mov eax ebx +
sub eax [ebp-14h] +
inc dword ptr [ebp+8]  +
add edx 8 +
cmp dword ptr [ebp+8] 0Ah +
jl loc_41E0B8  +
cmp edi 0FFFFFFFFh +
jz loc_41E137  +
test eax eax +
jnz loc_41E106  +
lea eax [ebp-10h] +
push eax  +
push edi  +
call sub_41CBFC  +
push dword_443C24  +
push dword ptr [esi+18h]  +
call ds:SelectObject  +
mov [ebp-18h] eax +
jmp loc_41E137  +
mov ecx [ecx+edi*8+118h] +
test ecx ecx +
jz loc_41E137  +
mov edx [ecx+10h] +
dec edx  +
cmp eax edx +
jg loc_41E137  +
mov ecx [ecx+4] +
push dword ptr [ecx+eax*4]  +
call HHA_23  +
cmp dword ptr [ebp-10h] 0 +
mov edi eax +
jz loc_41E134  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov [ebp-10h] edi +
mov edx [ebp-10h] +
xor ebx ebx +
cmp edx ebx +
jz loc_41E149  +
xor eax eax +
cmp [edx] al +
setnz al  +
jmp loc_41E14B  +
xor eax eax +
cmp eax ebx +
jz loc_41E15D  +
mov edi edx +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
jmp loc_41E17D  +
push offset String2  +
call HHA_23  +
cmp [ebp-10h] ebx +
mov edi eax +
jz loc_41E176  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov edx edi +
xor ecx ecx +
mov [ebp-10h] edx +
mov eax [esi+1Ch] +
lea edi [esi+1Ch] +
push ebx  +
push ecx  +
push edx  +
push edi  +
push 2  +
inc eax  +
push dword ptr [esi+20h]  +
inc eax  +
push eax  +
push dword ptr [esi+18h]  +
call ds:ExtTextOutA  +
test byte ptr [esi+10h] 10h +
jz loc_41E1A8  +
push edi  +
push dword ptr [esi+18h]  +
call ds:DrawFocusRect  +
push dword ptr [ebp-1Ch]  +
mov edi ds:SetTextColor +
push dword ptr [esi+18h]  +
call edi  +
push dword ptr [ebp-20h]  +
push dword ptr [esi+18h]  +
call edi  +
cmp [ebp-18h] ebx +
jz loc_41E1CF  +
push dword ptr [ebp-18h]  +
push dword ptr [esi+18h]  +
call ds:SelectObject  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-10h] ebx +
jz loc_41E1E0  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn 4  +
***
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
push 0D3h  +
push dword ptr [edi+44h]  +
lea esi [edi+44h] +
call ds:GetParent  +
push eax  +
call ds:GetDlgItem  +
mov ebx ds:SendMessageA +
push 0  +
push 0  +
push 188h  +
push eax  +
mov [esi] eax +
call ebx  +
or dword ptr [ebp-0Ch] 0FFFFFFFFh +
and dword ptr [ebp-4] 0 +
mov [ebp-8] eax +
mov eax [edi+40h] +
add eax 114h +
mov ecx [eax] +
cmp ecx [ebp-8] +
jg loc_41E25C  +
cmp ecx 0FFFFFFFFh +
jz loc_41E250  +
mov [ebp-10h] ecx +
mov ecx [ebp-4] +
mov [ebp-0Ch] ecx +
inc dword ptr [ebp-4]  +
add eax 8 +
cmp dword ptr [ebp-4] 0Ah +
jl loc_41E23B  +
cmp dword ptr [ebp-0Ch] 0FFFFFFFFh +
jz loc_41E485  +
xor eax eax +
push eax  +
push eax  +
push 18Eh  +
mov [ebp-4] eax +
push dword ptr [esi]  +
call ebx  +
mov ecx [ebp-10h] +
xor ebx ebx +
cmp [ebp-8] ecx +
mov [ebp-14h] eax +
jle loc_41E29F  +
mov eax [edi+40h] +
mov edx [ebp-0Ch] +
mov eax [eax+edx*8+118h] +
test eax eax +
jz loc_41E29F  +
mov edx [ebp-8] +
mov eax [eax+4] +
sub edx ecx +
mov ebx [eax+edx*4] +
mov eax [ebp-0Ch] +
xor edx edx +
sub eax edx +
jz loc_41E315  +
dec eax  +
jz loc_41E2E3  +
dec eax  +
dec eax  +
jz loc_41E2D7  +
dec eax  +
jz loc_41E2CB  +
dec eax  +
jz loc_41E2CB  +
dec eax  +
dec eax  +
jnz loc_41E3FB  +
push 3  +
mov ecx edi +
call sub_41E4A0  +
jmp loc_41E3FB  +
mov ecx edi +
call sub_4221A5  +
jmp loc_41E3FB  +
mov ecx edi +
call sub_41E84E  +
jmp loc_41E3FB  +
cmp [ebp-8] ecx +
jz loc_41E308  +
mov eax [edi+40h] +
mov eax [eax+0CCh] +
cmp eax edx +
jz loc_41E308  +
mov eax [eax+10h] +
add eax ecx +
cmp [ebp-8] eax +
jge loc_41E308  +
cmp byte ptr [ebx] 23h +
jz loc_41E3FB  +
push edx  +
mov ecx edi +
call sub_41EB05  +
jmp loc_41E3F8  +
push offset dword_418EF0  +
push ebx  +
call HHA_12  +
test eax eax +
jnz loc_41E3EF  +
push offset dword_418FC0  +
push ebx  +
call HHA_12  +
test eax eax +
jnz loc_41E3EF  +
push offset dword_418FB0  +
push ebx  +
call HHA_12  +
test eax eax +
jnz loc_41E3EF  +
push offset aSampleListFi_0  +
push ebx  +
call HHA_12  +
test eax eax +
jnz loc_41E3EF  +
push offset dword_418FD0  +
push ebx  +
call HHA_12  +
test eax eax +
jnz loc_41E3EF  +
push offset dword_418E20  +
push ebx  +
call HHA_12  +
test eax eax +
jnz loc_41E3EF  +
push offset dword_418E30  +
push ebx  +
call HHA_12  +
test eax eax +
jnz loc_41E3EF  +
push offset aFlat_0  +
push ebx  +
call HHA_12  +
test eax eax +
jnz loc_41E3EB  +
push offset aFullTextSear_1  +
push ebx  +
call HHA_12  +
test eax eax +
jnz loc_41E3EB  +
push offset aDisplayCompi_1  +
push ebx  +
call HHA_12  +
test eax eax +
jnz loc_41E3EB  +
push offset aDisplayCompi_2  +
push ebx  +
call HHA_12  +
test eax eax +
jnz loc_41E3EB  +
push offset aCreateChiFil_0  +
push ebx  +
call HHA_12  +
test eax eax +
jnz loc_41E3EB  +
push offset aSampleStagin_0  +
push ebx  +
call HHA_12  +
test eax eax +
jnz loc_41E3EB  +
push eax  +
jmp loc_41E3F1  +
push 2  +
jmp loc_41E3F1  +
push 1  +
mov ecx edi +
call sub_41E4A0  +
mov [ebp-4] eax +
xor eax eax +
cmp [ebp-4] eax +
jz loc_41E47C  +
mov eax [edi+40h] +
push 0D3h  +
mov dword ptr [eax+108h] 1 +
push dword ptr [esi]  +
call ds:GetParent  +
push eax  +
call ds:GetDlgItem  +
mov [esi] eax +
mov ecx [edi+40h] +
push esi  +
call sub_41CAE2  +
mov eax [edi+40h] +
mov ecx [ebp-0Ch] +
mov eax [eax+ecx*8+114h] +
cmp eax 0FFFFFFFFh +
jnz loc_41E446  +
xor ecx ecx +
xor ebx ebx +
jmp loc_41E45C  +
mov ecx [ebp-14h] +
mov ebx eax +
sub ecx [ebp-10h] +
add ecx eax +
jns loc_41E456  +
xor ecx ecx +
jmp loc_41E45C  +
cmp ecx ebx +
jle loc_41E45C  +
mov ecx ebx +
mov edi ds:SendMessageA +
push 0  +
push ecx  +
push 197h  +
push dword ptr [esi]  +
call edi  +
push 0  +
push ebx  +
push 186h  +
push dword ptr [esi]  +
call edi  +
jmp loc_41E485  +
push eax  +
push eax  +
mov ecx edi +
call sub_41DDF3  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov eax offset loc_434A82 +
mov eax offset loc_434A9F +
mov eax offset loc_434AD8 +
mov eax offset loc_434B37 +
call _EH_prolog  +
push ecx  +
push esi  +
mov esi ecx +
mov [ebp-10h] esi +
mov eax [esi+8Ch] +
mov dword ptr [ebp-4] 6 +
test eax eax +
jz loc_41E791  +
push eax  +
call HHA_132  +
mov eax [esi+88h] +
mov byte ptr [ebp-4] 5 +
test eax eax +
jz loc_41E7A5  +
push eax  +
call HHA_132  +
mov eax [esi+84h] +
mov byte ptr [ebp-4] 4 +
test eax eax +
jz loc_41E7B9  +
push eax  +
call HHA_132  +
mov eax [esi+80h] +
mov byte ptr [ebp-4] 3 +
test eax eax +
jz loc_41E7CD  +
push eax  +
call HHA_132  +
mov eax [esi+7Ch] +
mov byte ptr [ebp-4] 2 +
test eax eax +
jz loc_41E7DE  +
push eax  +
call HHA_132  +
mov eax [esi+78h] +
mov byte ptr [ebp-4] 1 +
test eax eax +
jz loc_41E7EF  +
push eax  +
call HHA_132  +
mov eax [esi+74h] +
and byte ptr [ebp-4] 0 +
test eax eax +
jz loc_41E800  +
push eax  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_4068C0  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
sub esp 10Ch +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
push 0D3h  +
push dword ptr [ebx+44h]  +
call ds:GetParent  +
push eax  +
call ds:GetDlgItem  +
xor esi esi +
mov [ebx+44h] eax +
push esi  +
push esi  +
push 188h  +
push eax  +
call ds:SendMessageA  +
mov ecx [ebx+40h] +
or [ebp+var_8] 0FFFFFFFFh +
lea edx [ecx+114h] +
mov edi [edx] +
cmp edi eax +
jg loc_41E8AB  +
cmp edi 0FFFFFFFFh +
jz loc_41E8A2  +
mov [ebp+var_4] edi +
mov [ebp+var_8] esi +
inc esi  +
add edx 8 +
cmp esi 0Ah +
jl loc_41E891  +
cmp [ebp+var_8] 3 +
jnz loc_41E9CC  +
xor edi edi +
cmp eax [ebp+var_4] +
jle loc_41E8CF  +
mov ecx [ecx+130h] +
test ecx ecx +
jz loc_41E8CF  +
sub eax [ebp+var_4] +
mov ecx [ecx+4] +
mov edi [ecx+eax*4] +
test edi edi +
jz loc_41E9CC  +
cmp byte ptr [edi] 0 +
jz loc_41E9CC  +
push edi  +
call HHA_3  +
cmp byte ptr [eax] 3Bh +
jz loc_41E9CC  +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
lea edx [ebp+var_10C] +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
lea eax [ebp+var_10C] +
and ecx 3 +
movs   +
or esi 0FFFFFFFFh +
mov edi offset aInclude_0 +
push esi  +
push edi  +
push eax  +
call HHA_310  +
test eax eax +
jz loc_41E9A7  +
mov ecx esi +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
lea eax [ebp+ecx+var_10C] +
push eax  +
call HHA_3  +
cmp byte ptr [eax] 22h +
jnz loc_41E983  +
lea edi [eax+1] +
mov ecx esi +
xor eax eax +
lea edx [ebp+var_10C] +
scas   +
not ecx  +
sub edi ecx +
push 22h  +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
lea eax [ebp+var_10C] +
and ecx 3 +
push eax  +
movs   +
call HHA_8  +
test eax eax +
jz loc_41E9A7  +
and byte ptr [eax] 0 +
jmp loc_41E9A7  +
mov edi eax +
mov ecx esi +
xor eax eax +
lea edx [ebp+var_10C] +
scas   +
not ecx  +
sub edi ecx +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
and ecx 3 +
movs   +
lea eax [ebp+var_10C] +
push 0  +
push eax  +
mov eax [ebx+40h] +
push dword ptr [eax+0F8h]  +
call HHA_315  +
lea eax [ebp+var_10C] +
push eax  +
call sub_41CE0F  +
jmp loc_41E9DB  +
push 0  +
push 1F7Eh  +
push dword ptr [ebx+10h]  +
call HHA_74  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov ecx [ecx+40h] +
jmp sub_41CE40  +
***
mov eax offset loc_434B72 +
call _EH_prolog  +
sub esp 70h +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
push 2362h  +
lea ecx [ebp-10h] +
call HHA_14  +
mov eax [esi+40h] +
and dword ptr [ebp-4] 0 +
cmp dword ptr [eax+0B0h] 0 +
jnz loc_41EA8A  +
push 4Ch  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
test ecx ecx +
mov byte ptr [ebp-4] 1 +
jz loc_41EA46  +
mov eax [esi+40h] +
push 1  +
mov eax [eax+0ACh] +
push eax  +
mov eax [eax+18h] +
shl eax 2 +
push eax  +
call HHA_369  +
jmp loc_41EA48  +
xor eax eax +
mov ecx [esi+40h] +
and byte ptr [ebp-4] 0 +
mov [ecx+0B0h] eax +
mov eax [esi+40h] +
mov ecx [eax+0B0h] +
call HHA_360  +
mov eax [esi+40h] +
push dword ptr [ebp-10h]  +
mov eax [eax+0B0h] +
mov edi [eax+48h] +
add edi 8 +
call HHA_23  +
mov ebx eax +
mov eax [edi] +
test eax eax +
jz loc_41EA88  +
push eax  +
call HHA_132  +
mov [edi] ebx +
mov eax [esi+40h] +
push 1  +
pop edi  +
lea ecx [ebp-7Ch] +
push edi  +
push dword ptr [eax+0ACh]  +
push dword ptr [eax+0B0h]  +
push dword ptr [esi+10h]  +
call sub_430E77  +
lea ecx [ebp-7Ch] +
mov byte ptr [ebp-4] 2 +
call HHA_238  +
cmp [ebp-38h] edi +
jnz loc_41EAC2  +
mov eax [esi+40h] +
mov [eax+108h] edi +
and byte ptr [ebp-4] 0 +
lea ecx [ebp-7Ch] +
call sub_430F6D  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-10h] 0 +
jz loc_41EAE0  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
mov eax offset loc_434BEB +
call _EH_prolog  +
sub esp 39Ch +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
lea ecx [ebp-2Ch] +
mov eax [esi+40h] +
push dword ptr [esi+10h]  +
push dword ptr [eax+0FCh]  +
push dword ptr [eax+100h]  +
push eax  +
call sub_41F034  +
xor ebx ebx +
cmp [ebp-1Ch] ebx +
mov [ebp-4] ebx +
jz loc_41F010  +
mov eax [ebp+8] +
cmp eax ebx +
jz loc_41EB84  +
cmp [eax] bl +
jz loc_41EB84  +
push eax  +
lea ecx [ebp-2Ch] +
call sub_41F273  +
cmp eax ebx +
mov [ebp-2Ch] eax +
jnz loc_41EB84  +
mov edi [ebp-20h] +
xor eax eax +
xor edx edx +
cmp [ebp-24h] ebx +
jbe loc_41EB7E  +
mov ecx edi +
cmp [ecx] ebx +
jz loc_41EB75  +
cmp edx ebx +
jz loc_41EB7E  +
inc edx  +
inc eax  +
add ecx 4 +
cmp eax [ebp-24h] +
jb loc_41EB6C  +
mov eax [edi+eax*4] +
mov [ebp-2Ch] eax +
push dword ptr [esi+10h]  +
push 80h  +
push 2008h  +
call HHA_76  +
push eax  +
lea ecx [ebp-60h] +
call HHA_241  +
lea eax [ebp-2Ch] +
lea ecx [ebp-3A8h] +
push eax  +
mov byte ptr [ebp-4] 1 +
push dword ptr [esi+40h]  +
call sub_41F5C8  +
lea eax [ebp-2Ch] +
lea ecx [ebp-2B8h] +
push eax  +
mov byte ptr [ebp-4] 2 +
push dword ptr [esi+40h]  +
call sub_4213BB  +
lea eax [ebp-2Ch] +
lea ecx [ebp-1C8h] +
push eax  +
mov byte ptr [ebp-4] 3 +
push dword ptr [esi+40h]  +
call sub_41F7BC  +
lea eax [ebp-2Ch] +
lea ecx [ebp-150h] +
push eax  +
mov byte ptr [ebp-4] 4 +
push dword ptr [esi+40h]  +
call sub_4203B2  +
lea eax [ebp-2Ch] +
lea ecx [ebp-240h] +
push eax  +
mov byte ptr [ebp-4] 5 +
push dword ptr [esi+40h]  +
call sub_42084D  +
lea eax [ebp-2Ch] +
lea ecx [ebp-330h] +
push eax  +
mov byte ptr [ebp-4] 6 +
push dword ptr [esi+40h]  +
call sub_41FB06  +
lea eax [ebp-2Ch] +
lea ecx [ebp-0D8h] +
push eax  +
mov byte ptr [ebp-4] 7 +
push dword ptr [esi+40h]  +
call sub_420090  +
lea eax [ebp-3A8h] +
lea ecx [ebp-60h] +
push eax  +
mov byte ptr [ebp-4] 8 +
call HHA_243  +
lea eax [ebp-2B8h] +
lea ecx [ebp-60h] +
push eax  +
call HHA_243  +
lea eax [ebp-1C8h] +
lea ecx [ebp-60h] +
push eax  +
call HHA_243  +
lea eax [ebp-150h] +
lea ecx [ebp-60h] +
push eax  +
call HHA_243  +
lea eax [ebp-240h] +
lea ecx [ebp-60h] +
push eax  +
call HHA_243  +
lea eax [ebp-330h] +
lea ecx [ebp-60h] +
push eax  +
call HHA_243  +
lea eax [ebp-0D8h] +
lea ecx [ebp-60h] +
push eax  +
call HHA_243  +
lea ecx [ebp-60h] +
call HHA_244  +
test eax eax +
jz loc_41EF9B  +
mov eax [esi+40h] +
lea ecx [ebp-34h] +
mov [ebp-34h] eax +
lea eax [ebp-2Ch] +
mov [ebp-30h] eax +
call sub_421CAC  +
cmp eax ebx +
jz loc_41ECD7  +
push eax  +
lea ecx [ebp-34h] +
call sub_421CFF  +
mov eax [esi+40h] +
add eax 100h +
cmp [eax] ebx +
jz loc_41ECE9  +
push eax  +
call HHA_134  +
mov edx [ebp-24h] +
xor ecx ecx +
cmp edx ebx +
jbe loc_41ED00  +
mov eax [ebp-20h] +
cmp [eax] ebx +
jz loc_41ECFA  +
inc ecx  +
add eax 4 +
dec edx  +
jnz loc_41ECF5  +
mov eax [esi+40h] +
mov [eax+0FCh] ecx +
mov eax [esi+40h] +
cmp [eax+0FCh] ebx +
lea ecx [eax+0FCh] +
jz loc_41EEF0  +
mov eax [ecx] +
imul eax eax +
push eax  +
call HHA_133  +
mov ecx [esi+40h] +
mov [ecx+100h] eax +
mov eax [esi+40h] +
lea ecx [ebp-2Ch] +
push dword ptr [eax+100h]  +
call sub_41F393  +
mov eax [esi+40h] +
cmp [eax+0CCh] ebx +
jnz loc_41ED7C  +
push 58h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-10h] eax +
cmp eax ebx +
mov byte ptr [ebp-4] 9 +
jz loc_41ED6D  +
mov ecx eax +
call HHA_35  +
jmp loc_41ED6F  +
xor eax eax +
mov ecx [esi+40h] +
mov byte ptr [ebp-4] 8 +
mov [ecx+0CCh] eax +
mov eax [esi+40h] +
push dword ptr [eax+0CCh]  +
call HHA_39  +
mov [ebp+8] ebx +
mov edi [esi+40h] +
mov byte ptr [ebp-4] 0Ah +
mov eax [edi+90h] +
cmp eax ebx +
jz loc_41EDA9  +
xor ecx ecx +
cmp [eax] cl +
setz cl  +
mov eax ecx +
jmp loc_41EDAC  +
push 1  +
pop eax  +
cmp eax ebx +
jz loc_41EDD8  +
mov eax [edi+100h] +
push dword ptr [eax+8]  +
call HHA_23  +
mov ebx eax +
mov eax [edi+90h] +
test eax eax +
jz loc_41EDD0  +
push eax  +
call HHA_132  +
mov [edi+90h] ebx +
xor ebx ebx +
mov eax [esi+40h] +
mov [ebp-10h] ebx +
mov [ebp-14h] ebx +
cmp [eax+0FCh] ebx +
jbe loc_41EEB1  +
mov eax [eax+100h] +
push dword ptr [eax+ebx+8]  +
call HHA_23  +
cmp dword ptr [ebp+8] 0 +
mov edi eax +
jz loc_41EE0C  +
push dword ptr [ebp+8]  +
call HHA_132  +
mov eax [esi+40h] +
mov [ebp+8] edi +
mov eax [eax+90h] +
mov dl [edi] +
mov cl dl +
cmp dl [eax] +
jnz loc_41EE3A  +
test cl cl +
jz loc_41EE36  +
mov dl [edi+1] +
mov cl dl +
cmp dl [eax+1] +
jnz loc_41EE3A  +
inc edi  +
inc edi  +
inc eax  +
inc eax  +
test cl cl +
jnz loc_41EE18  +
xor eax eax +
jmp loc_41EE3F  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_41EE4A  +
mov dword ptr [ebp-10h] 1 +
push offset asc_4436B4  +
lea ecx [ebp+8] +
call sub_40282C  +
mov eax [esi+40h] +
mov eax [eax+100h] +
mov eax [eax+ebx+14h] +
test eax eax +
jnz loc_41EE6D  +
mov eax offset String2 +
push eax  +
lea ecx [ebp+8] +
call sub_40282C  +
push offset asc_442294  +
lea ecx [ebp+8] +
call sub_40282C  +
push dword ptr [ebp+8]  +
mov eax [esi+40h] +
push dword ptr [eax+0CCh]  +
call HHA_46  +
inc dword ptr [ebp-14h]  +
mov eax [esi+40h] +
mov ecx [ebp-14h] +
add ebx 0C4h +
cmp ecx [eax+0FCh] +
jb loc_41EDED  +
xor ebx ebx +
cmp [ebp-10h] ebx +
jnz loc_41EEDD  +
mov esi [esi+40h] +
mov eax [esi+100h] +
lea edi [esi+90h] +
push dword ptr [eax+8]  +
call HHA_23  +
mov esi eax +
mov eax [edi] +
cmp eax ebx +
jz loc_41EEDB  +
push eax  +
call HHA_132  +
mov [edi] esi +
cmp [ebp+8] ebx +
mov byte ptr [ebp-4] 8 +
jz loc_41EF12  +
push dword ptr [ebp+8]  +
call HHA_132  +
jmp loc_41EF12  +
add eax 0CCh +
cmp [eax] ebx +
jnz loc_41EEFB  +
mov [eax] ebx +
mov esi [esi+40h] +
add esi 90h +
mov eax [esi] +
cmp eax ebx +
jz loc_41EF12  +
push eax  +
call HHA_132  +
mov [esi] ebx +
lea ecx [ebp-0D8h] +
mov byte ptr [ebp-4] 7 +
call sub_4068C0  +
lea ecx [ebp-330h] +
mov byte ptr [ebp-4] 6 +
call sub_4068C0  +
lea ecx [ebp-240h] +
mov byte ptr [ebp-4] 5 +
call sub_4068C0  +
lea ecx [ebp-150h] +
mov byte ptr [ebp-4] 4 +
call sub_4068C0  +
lea ecx [ebp-1C8h] +
mov byte ptr [ebp-4] 3 +
call sub_4068C0  +
lea ecx [ebp-2B8h] +
mov byte ptr [ebp-4] 2 +
call sub_4068C0  +
lea ecx [ebp-3A8h] +
mov byte ptr [ebp-4] 1 +
call sub_4068C0  +
and byte ptr [ebp-4] 0 +
lea ecx [ebp-60h] +
call HHA_242  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-2Ch] +
call sub_41F23A  +
push 1  +
pop eax  +
jmp loc_41F01E  +
lea ecx [ebp-0D8h] +
mov byte ptr [ebp-4] 7 +
call sub_4068C0  +
lea ecx [ebp-330h] +
mov byte ptr [ebp-4] 6 +
call sub_4068C0  +
lea ecx [ebp-240h] +
mov byte ptr [ebp-4] 5 +
call sub_4068C0  +
lea ecx [ebp-150h] +
mov byte ptr [ebp-4] 4 +
call sub_4068C0  +
lea ecx [ebp-1C8h] +
mov byte ptr [ebp-4] 3 +
call sub_4068C0  +
lea ecx [ebp-2B8h] +
mov byte ptr [ebp-4] 2 +
call sub_4068C0  +
lea ecx [ebp-3A8h] +
mov byte ptr [ebp-4] 1 +
call sub_4068C0  +
and byte ptr [ebp-4] 0 +
lea ecx [ebp-60h] +
call HHA_242  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-2Ch] +
call sub_41F23A  +
xor eax eax +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn 4  +
***
mov eax offset loc_434C2D +
call _EH_prolog  +
sub esp 10Ch +
mov eax [ebp+8] +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+10h] +
mov esi ecx +
test edi edi +
mov [esi+14h] eax +
jz loc_41F0E9  +
mov eax edi +
mov [esi+4] edi +
shl eax 2 +
push eax  +
mov [esi+8] edi +
call HHA_135  +
and dword ptr [ebp+8] 0 +
mov [esi+0Ch] eax +
test edi edi +
jbe loc_41F0B9  +
mov eax [ebp+0Ch] +
mov ebx 0C4h +
mov [ebp+10h] eax +
push ebx  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+0Ch] eax +
and dword ptr [ebp-4] 0 +
test eax eax +
jz loc_41F09F  +
push dword ptr [ebp+10h]  +
mov ecx eax +
call sub_41F421  +
jmp loc_41F0A1  +
xor eax eax +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx [esi+0Ch] +
mov edx [ebp+8] +
inc dword ptr [ebp+8]  +
add [ebp+10h] ebx +
cmp [ebp+8] edi +
mov [ecx+edx*4] eax +
jb loc_41F081  +
mov eax [esi+8] +
xor edx edx +
xor edi edi +
test eax eax +
jbe loc_41F0D9  +
mov ecx [esi+0Ch] +
cmp dword ptr [ecx] 0 +
jz loc_41F0D1  +
test edi edi +
jz loc_41F0D9  +
inc edi  +
inc edx  +
add ecx 4 +
cmp edx eax +
jb loc_41F0C7  +
mov eax [esi+0Ch] +
push 1  +
pop ebx  +
mov eax [eax+edx*4] +
mov [esi] eax +
jmp loc_41F1EB  +
push 14h  +
mov dword ptr [esi+8] 5 +
call HHA_135  +
push dword ptr [ebp+14h]  +
mov edi [esi+14h] +
lea ecx [ebp-118h] +
mov [esi+0Ch] eax +
push 11Fh  +
call HHA_301  +
and dword ptr [ebp-10h] 0 +
mov dword ptr [ebp-118h] offset off_439A38 +
mov [ebp-14h] edi +
push 1  +
lea ecx [ebp-118h] +
pop ebx  +
mov [ebp-4] ebx +
call HHA_238  +
test eax eax +
jnz loc_41F161  +
and [esi+10h] eax +
cmp [ebp-10h] eax +
mov dword ptr [ebp-4] 2 +
jz loc_41F14D  +
push dword ptr [ebp-10h]  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-118h] +
call HHA_297  +
jmp loc_41F1EE  +
mov eax [esi+4] +
cmp eax [esi+8] +
jnz loc_41F170  +
mov ecx esi +
call sub_41F3F3  +
mov eax [esi+8] +
xor edi edi +
test eax eax +
jbe loc_41F189  +
mov ecx [esi+0Ch] +
cmp dword ptr [ecx] 0 +
jz loc_41F189  +
inc edi  +
add ecx 4 +
cmp edi eax +
jb loc_41F17C  +
push 0C4h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp+8] eax +
test eax eax +
mov byte ptr [ebp-4] 3 +
jz loc_41F1AF  +
lea ecx [ebp-0D8h] +
push ecx  +
mov ecx eax +
call sub_41F421  +
jmp loc_41F1B1  +
xor eax eax +
mov edx [esi+0Ch] +
mov ecx edi +
shl ecx 2 +
mov [ecx+edx] eax +
mov eax [esi+0Ch] +
mov eax [ecx+eax] +
mov [esi+4] ebx +
mov [esi] eax +
cmp dword ptr [ebp-10h] 0 +
mov dword ptr [ebp-4] 4 +
jz loc_41F1DC  +
push dword ptr [ebp-10h]  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-118h] +
call HHA_297  +
mov [esi+10h] ebx +
mov ecx [ebp-0Ch] +
mov eax esi +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn 10h  +
***
mov esi ecx +
push edi  +
mov esi ecx +
mov edx [ecx+8] +
mov esi ecx +
mov eax [ecx+8] +
push edi  +
push ebp  +
mov edi [esp+arg_0] +
mov eax [esi+8] +
push 120h  +
mov eax offset loc_434C6D +
cmp [esp+arg_0] 0FFFFFF37h +
push 11Bh  +
sub esp 18h +
sub esp 20h +
mov eax offset loc_434C80 +
cmp [esp+arg_0] 1 +
push 11Ch  +
cmp dword ptr [ecx+4] 0 +
mov eax [esp+arg_0] +
sub esp 3Ch +
push 11Dh  +
sub esp 24h +
push 173h  +
sub esp 124h +
push 174h  +
cmp dword ptr [ecx+4] 0 +
mov eax offset loc_434C94 +
cmp [esp+arg_0] 538h +
mov eax offset loc_434CA8 +
mov eax offset loc_434CC4 +
push esi  +
push 175h  +
cmp [esp+arg_0] 0FFFFFF37h +
push esi  +
cmp [esp+arg_0] 0FFFFFF38h +
cmp [esp+arg_0] 0FFFFFF38h +
cmp [esp+arg_0] 0FFFFFF31h +
cmp [esp+arg_0] 0FFFFFF31h +
cmp [esp+arg_0] 0FFFFFF31h +
mov edx [ecx+4] +
mov eax offset loc_434D0F +
push [esp+arg_8]  +
mov eax offset loc_434D24 +
mov eax offset loc_434D38 +
push esi  +
mov esi ecx +
push [esp+8+Msg]  +
mov eax offset loc_434DAC +
call _EH_prolog  +
sub esp 294h +
push esi  +
mov esi ecx +
push dword ptr [esi+10h]  +
push 80h  +
push 2010h  +
call HHA_76  +
push eax  +
lea ecx [ebp-3Ch] +
call HHA_241  +
push dword ptr [esi+40h]  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-2A0h] +
call sub_4227EA  +
push dword ptr [esi+40h]  +
lea ecx [ebp-1D4h] +
mov byte ptr [ebp-4] 1 +
call sub_42248F  +
push dword ptr [esi+40h]  +
lea ecx [ebp-108h] +
mov byte ptr [ebp-4] 2 +
call sub_422BCB  +
lea eax [ebp-2A0h] +
lea ecx [ebp-3Ch] +
push eax  +
mov byte ptr [ebp-4] 3 +
call HHA_243  +
lea eax [ebp-1D4h] +
lea ecx [ebp-3Ch] +
push eax  +
call HHA_243  +
lea eax [ebp-108h] +
lea ecx [ebp-3Ch] +
push eax  +
call HHA_243  +
lea ecx [ebp-3Ch] +
call HHA_244  +
test eax eax +
jz loc_422389  +
mov eax [esi+40h] +
push edi  +
mov edi [eax+0C4h] +
test edi edi +
jz loc_422266  +
mov ecx edi +
call HHA_38  +
push edi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax [ebp-220h] +
dec eax  +
test eax eax +
jz loc_4222B1  +
push 58h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
test ecx ecx +
mov byte ptr [ebp-4] 4 +
jz loc_42228D  +
call HHA_35  +
jmp loc_42228F  +
xor eax eax +
mov ecx [esi+40h] +
mov byte ptr [ebp-4] 3 +
mov [ecx+0C4h] eax +
lea eax [ebp-230h] +
push eax  +
mov eax [esi+40h] +
push dword ptr [eax+0C4h]  +
call HHA_145  +
mov eax [esi+40h] +
mov edi [eax+0BCh] +
test edi edi +
jz loc_4222CC  +
mov ecx edi +
call HHA_38  +
push edi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax [ebp-154h] +
dec eax  +
test eax eax +
jz loc_422317  +
push 58h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
test ecx ecx +
mov byte ptr [ebp-4] 5 +
jz loc_4222F3  +
call HHA_35  +
jmp loc_4222F5  +
xor eax eax +
mov ecx [esi+40h] +
mov byte ptr [ebp-4] 3 +
mov [ecx+0BCh] eax +
lea eax [ebp-164h] +
push eax  +
mov eax [esi+40h] +
push dword ptr [eax+0BCh]  +
call HHA_145  +
mov eax [esi+40h] +
mov edi [eax+0D8h] +
test edi edi +
jz loc_422332  +
mov ecx edi +
call HHA_38  +
push edi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax [ebp-88h] +
dec eax  +
test eax eax +
jz loc_42237D  +
push 58h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
test ecx ecx +
mov byte ptr [ebp-4] 6 +
jz loc_422359  +
call HHA_35  +
jmp loc_42235B  +
xor eax eax +
mov ecx [esi+40h] +
mov byte ptr [ebp-4] 3 +
mov [ecx+0D8h] eax +
lea eax [ebp-98h] +
push eax  +
mov eax [esi+40h] +
push dword ptr [eax+0D8h]  +
call HHA_145  +
push 5  +
push 1  +
mov ecx esi +
call sub_41DDF3  +
pop edi  +
lea ecx [ebp-98h] +
mov byte ptr [ebp-4] 7 +
call HHA_38  +
lea ecx [ebp-108h] +
mov byte ptr [ebp-4] 2 +
call sub_4068C0  +
lea ecx [ebp-164h] +
mov byte ptr [ebp-4] 8 +
call HHA_38  +
lea ecx [ebp-1D4h] +
mov byte ptr [ebp-4] 1 +
call sub_4068C0  +
lea ecx [ebp-230h] +
mov byte ptr [ebp-4] 9 +
call HHA_38  +
and byte ptr [ebp-4] 0 +
lea ecx [ebp-2A0h] +
call sub_4068C0  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-3Ch] +
call HHA_242  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax offset loc_434DC0 +
call _EH_prolog  +
push esi  +
mov esi ecx +
and dword ptr [ebp-4] 0 +
lea ecx [esi+70h] +
call HHA_38  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_4068C0  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax offset loc_434DD4 +
call _EH_prolog  +
push esi  +
mov esi ecx +
and dword ptr [ebp-4] 0 +
lea ecx [esi+70h] +
call HHA_38  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call sub_4068C0  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax offset loc_434E07 +
mov eax offset loc_434E54 +
mov eax offset loc_434E89 +
mov eax offset loc_434EA7 +
cmp [esp+arg_0] 0FFFFFF37h +
mov eax offset loc_434ECC +
mov eax offset loc_434F14 +
mov esi ecx +
mov esi ecx +
mov eax offset loc_434F33 +
mov eax offset loc_434F60 +
call _EH_prolog  +
sub esp 5Ch +
push esi  +
push edi  +
mov esi ecx +
push 4D3h  +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
mov [ebp-10h] eax +
mov eax [ebp+8] +
sub eax 412h +
jz loc_422D30  +
sub eax 0C4h +
jz loc_422CC8  +
dec eax  +
jnz loc_422D38  +
push dword ptr [esi+10h]  +
mov eax [esi+0C8h] +
xor edi edi +
lea ecx [ebp-68h] +
push edi  +
push dword ptr [eax+0F8h]  +
call sub_428E20  +
lea ecx [ebp-68h] +
mov [ebp-4] edi +
mov dword ptr [ebp-14h] 2011h +
call HHA_238  +
test eax eax +
jz loc_422CAB  +
push dword ptr [ebp-24h]  +
push edi  +
push 180h  +
push dword ptr [ebp-10h]  +
call ds:SendMessageA  +
cmp [ebp-24h] edi +
mov dword ptr [ebp-4] 1 +
jz loc_422CBF  +
push dword ptr [ebp-24h]  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-68h] +
jmp loc_422D29  +
push dword ptr [esi+10h]  +
mov eax [esi+0C8h] +
xor edi edi +
lea ecx [ebp-68h] +
push edi  +
push dword ptr [eax+0F8h]  +
call sub_428E20  +
lea ecx [ebp-68h] +
mov dword ptr [ebp-4] 2 +
mov dword ptr [ebp-14h] 2012h +
call HHA_238  +
test eax eax +
jz loc_422D0E  +
push dword ptr [ebp-24h]  +
push edi  +
push 180h  +
push dword ptr [ebp-10h]  +
call ds:SendMessageA  +
cmp [ebp-24h] edi +
mov dword ptr [ebp-4] 3 +
jz loc_422D22  +
push dword ptr [ebp-24h]  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-68h] +
call HHA_297  +
jmp loc_422D38  +
lea ecx [ebp-10h] +
call HHA_118  +
mov ecx [ebp-0Ch] +
pop edi  +
mov large fs:0 ecx +
pop esi  +
leave   +
retn 4  +
***
mov eax offset loc_434F7F +
mov eax offset loc_434FC3 +
xor eax eax +
mov eax [ecx+0C4h] +
sub esp 30h +
push 0Ch  +
mov al byte ptr dword_444038 +
mov eax [ecx+104h] +
mov eax [esp+arg_0] +
mov ecx [esi+0BCh] +
mov eax [ecx] +
push dword ptr [ecx+54h]  +
call dword ptr [eax+7Ch]  +
mov eax [esi+0C4h] +
pop esi  +
and dword ptr [eax+10Ch] 0 +
retn   +
***
push ecx  +
mov eax offset loc_434FD8 +
sub esp 104h +
mov eax offset __ehhandler$?CreateStream@COleStreamFile@@QAEHPAUIStorage@@PBDKPAVCFileException@@@Z_1 +
mov eax offset loc_43500C +
mov eax offset loc_435020 +
mov eax offset loc_435034 +
mov eax offset unknown_libname_21 +
mov eax offset unknown_libname_22 +
sub esp 104h +
and [esp+8+var_8] 0 +
mov eax offset loc_43508C +
push [esp+arg_0]  +
mov edx [ebp+arg_0] +
push ecx  +
push ecx  +
mov eax [esp+arg_0] +
push ebp  +
push esi  +
cmp dword ptr [ebx+88h] 0 +
jnz loc_424DB6  +
mov esi [esp+4+arg_0] +
test esi esi +
jz loc_424DB6  +
push edi  +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
push ebp  +
lea eax [ebx+4] +
push ecx  +
push eax  +
call HHA_108  +
mov edx eax +
mov edi esi +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov ebp ecx +
mov edi edx +
mov eax edi +
shr ecx 2 +
movs   +
mov ecx ebp +
pop ebp  +
and ecx 3 +
movs   +
mov [ebx+88h] eax +
pop edi  +
pop esi  +
pop ebx  +
retn 4  +
***
push 0  +
push 1  +
push 111h  +
push dword ptr [ecx+10h]  +
call ds:PostMessageA  +
retn   +
***
mov eax offset loc_4350AB +
mov eax offset loc_4350EF +
sub esp 20h +
push 0Ch  +
mov eax [ecx+0C4h] +
mov al byte ptr dword_444038 +
mov eax offset loc_435104 +
push ebp  +
mov ecx [esi+0C0h] +
push ecx  +
mov eax offset loc_435118 +
mov eax offset loc_43515E +
mov eax offset loc_435173 +
mov eax offset loc_4351B8 +
lea eax [esi+40h] +
mov eax offset loc_4351D7 +
sub esp 100h +
push ebp  +
mov eax offset loc_4351EC +
mov eax 52Ch +
mov esi ecx +
mov eax offset unknown_libname_53 +
mov eax offset loc_43521C +
lea eax [ecx+40h] +
push eax  +
push 487h  +
call HHA_248  +
push 1  +
pop eax  +
retn   +
***
mov eax offset __ehhandler$?CreateStream@COleStreamFile@@QAEHPAUIStorage@@PBDKPAVCFileException@@@Z_2 +
mov eax offset loc_4352B5 +
sub esp 10Ch +
mov eax offset __ehhandler$?CreateStream@COleStreamFile@@QAEHPAUIStorage@@PBDKPAVCFileException@@@Z_3 +
push [esp+4+arg_4]  +
push esi  +
mov ebx 14Fh +
push edi  +
mov edi ds:GetDlgItem +
mov esi ecx +
push ebx  +
push dword ptr [esi+10h]  +
call edi  +
cmp dword ptr [esi+4] 0 +
mov ebp eax +
jz loc_427632  +
mov eax [esi+40h] +
mov ebx ds:SendMessageA +
mov eax [eax+0ECh] +
test eax eax +
jz loc_42760C  +
push ebp  +
push eax  +
call HHA_267  +
push 0  +
push 0  +
push 186h  +
push ebp  +
call ebx  +
push 0  +
push 0  +
push 18Bh  +
push ebp  +
call ebx  +
push 151h  +
mov ebx eax +
push dword ptr [esi+10h]  +
call edi  +
push ebx  +
push eax  +
call ds:EnableWindow  +
and dword ptr [esi+44h] 0 +
jmp loc_42764D  +
cmp dword ptr [esi+44h] 0 +
jz loc_42764D  +
push ebx  +
push dword ptr [esi+10h]  +
call edi  +
push eax  +
mov eax [esi+40h] +
push dword ptr [eax+0ECh]  +
call HHA_265  +
push 1  +
pop eax  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
mov eax offset loc_4352E0 +
call _EH_prolog  +
sub esp 10Ch +
push ebx  +
push esi  +
push edi  +
mov edi ecx +
push 1F99h  +
lea ecx [ebp-14h] +
call HHA_14  +
push 14Fh  +
xor ebx ebx +
push dword ptr [edi+10h]  +
mov [ebp-4] ebx +
call ds:GetDlgItem  +
push 1  +
push 1F9Bh  +
push dword ptr [ebp-14h]  +
mov [ebp-10h] eax +
mov eax [edi+40h] +
push dword ptr [eax+0F8h]  +
lea eax [ebp-118h] +
push dword ptr [edi+10h]  +
push eax  +
push 1  +
push 1F9Ah  +
call sub_40418E  +
mov esi ds:SendMessageA +
test eax eax +
jz loc_4276FE  +
push ebx  +
push ebx  +
push 188h  +
push dword ptr [ebp-10h]  +
call esi  +
push ebx  +
push 0FFFFFFFFh  +
push 186h  +
push dword ptr [ebp-10h]  +
call esi  +
lea eax [ebp-118h] +
push eax  +
push ebx  +
push 180h  +
push dword ptr [ebp-10h]  +
call esi  +
push ebx  +
push eax  +
push 186h  +
push dword ptr [ebp-10h]  +
call esi  +
mov dword ptr [edi+44h] 1 +
push ebx  +
push ebx  +
push 18Bh  +
push dword ptr [ebp-10h]  +
call esi  +
push 151h  +
mov esi eax +
push dword ptr [edi+10h]  +
call ds:GetDlgItem  +
push esi  +
push eax  +
call ds:EnableWindow  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-14h] ebx +
jz loc_427733  +
push dword ptr [ebp-14h]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
mov edi ds:GetDlgItem +
mov esi ecx +
push 14Fh  +
push dword ptr [esi+10h]  +
call edi  +
lea ecx [ebp-4] +
mov [ebp-4] eax +
call HHA_118  +
push 0  +
push 0  +
push 18Bh  +
push dword ptr [ebp-4]  +
call ds:SendMessageA  +
push 151h  +
mov ebx eax +
push dword ptr [esi+10h]  +
call edi  +
push ebx  +
push eax  +
call ds:EnableWindow  +
mov dword ptr [esi+44h] 1 +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov eax offset loc_43531E +
call _EH_prolog  +
sub esp 174h +
push ebx  +
push esi  +
mov esi ecx +
lea ecx [ebp-7Ch] +
call sub_427BD1  +
xor ebx ebx +
lea ecx [ebp-7Ch] +
mov [ebp-4] ebx +
call HHA_238  +
test eax eax +
jz loc_427987  +
mov eax dword_444038 +
shr eax 14h +
test al 1 +
jz loc_4277E2  +
mov ecx dword_444264 +
call sub_403B00  +
jmp loc_42785C  +
mov eax [esi+0C8h] +
cmp eax ebx +
jz loc_42785C  +
mov eax [eax+0B0h] +
push dword ptr [eax+0F8h]  +
push dword ptr [ebp-3Ch]  +
call ds:lstrcmpiA  +
test eax eax +
jnz loc_42785C  +
mov eax [esi+0C8h] +
mov eax [eax+0B0h] +
cmp [eax+10Ch] ebx +
jnz loc_427829  +
cmp [eax+110h] ebx +
jnz loc_427829  +
cmp [eax+108h] ebx +
jz loc_42785C  +
push 33h  +
push 2014h  +
call HHA_166  +
cmp eax 2 +
jnz loc_427846  +
mov dword ptr [ebp-4] 1 +
jmp loc_42798E  +
cmp eax 6 +
jnz loc_42785C  +
mov eax [esi+0C8h] +
mov ecx [eax+0B0h] +
call sub_41CE40  +
push offset a_hhm  +
push dword ptr [ebp-3Ch]  +
call HHA_1  +
push dword ptr [ebp-3Ch]  +
test eax eax +
jz loc_427935  +
lea ecx [ebp-28h] +
call HHA_30  +
cmp dword ptr [ebp-28h] 0FFFFFFFFh +
mov byte ptr [ebp-4] 2 +
jz loc_427928  +
mov ecx dword_444400 +
cmp ecx ebx +
jz loc_4278A2  +
mov esi ecx +
call sub_4281CC  +
push esi  +
call ??3@YAXPAX@Z  +
pop ecx  +
push 40h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
cmp ecx ebx +
mov byte ptr [ebp-4] 3 +
jz loc_4278BE  +
call sub_4281BC  +
jmp loc_4278C0  +
xor eax eax +
push hWnd  +
mov ecx eax +
mov byte ptr [ebp-4] 2 +
mov dword_444400 eax +
push ebx  +
call sub_42821F  +
mov eax dword_444400 +
cmp [eax+24h] ebx +
jnz loc_42791D  +
lea eax [ebp-180h] +
lea ecx [ebp-28h] +
push eax  +
call HHA_32  +
test eax eax +
jz loc_42791D  +
lea eax [ebp-180h] +
push ebx  +
push eax  +
push dword ptr [ebp-3Ch]  +
call HHA_315  +
push ebx  +
push offset loc_427A45  +
lea eax [ebp-180h] +
push offset loc_427A2B  +
push eax  +
call HHA_CompileHHP  +
jmp loc_4278D7  +
***
mov ecx dword_444400 +
call sub_4286E9  +
lea ecx [ebp-28h] +
mov [ebp-4] bl +
call HHA_31  +
jmp loc_427987  +
call sub_427A74  +
mov esi eax +
cmp esi ebx +
jz loc_427987  +
mov eax dword_444038 +
shr eax 12h +
test al 1 +
jz loc_427981  +
push offset aHh  +
call HHA_23  +
mov [ebp-10h] eax +
push esi  +
lea ecx [ebp-10h] +
mov byte ptr [ebp-4] 4 +
call sub_40282C  +
push 5  +
push dword ptr [ebp-10h]  +
call ds:WinExec  +
cmp [ebp-10h] ebx +
mov [ebp-4] bl +
jz loc_427981  +
push dword ptr [ebp-10h]  +
call HHA_132  +
push esi  +
call HHA_132  +
mov dword ptr [ebp-4] 5 +
cmp [ebp-3Ch] ebx +
jz loc_42799B  +
push dword ptr [ebp-3Ch]  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-7Ch] +
call HHA_297  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
mov eax offset loc_435330 +
call _EH_prolog  +
push esi  +
mov esi ecx +
mov eax [esi+40h] +
and dword ptr [ebp-4] 0 +
test eax eax +
jz loc_4279D3  +
push eax  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call HHA_297  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
push esi  +
mov esi ecx +
mov ecx [esi+40h] +
call sub_41CE40  +
test eax eax +
jnz loc_427A0A  +
push eax  +
push 1FACh  +
push dword ptr [esi+10h]  +
call HHA_74  +
pop esi  +
retn   +
***
mov ecx dword_444264 +
call sub_403B00  +
mov eax [esi+40h] +
push dword ptr [eax+0F8h]  +
call sub_427A74  +
push eax  +
call HHA_132  +
pop esi  +
retn   +
***
push 0  +
push dword ptr [esp+8]  +
push 511h  +
push hWnd  +
call ds:SendMessageA  +
retn 4  +
***
mov eax offset unknown_libname_23 +
push hWnd  +
mov eax offset unknown_libname_24 +
mov eax offset __ehhandler$?CreateStream@COleStreamFile@@QAEHPAUIStorage@@PBDKPAVCFileException@@@Z_4 +
mov eax offset loc_4353A3 +
push 10h  +
mov esi ecx +
mov eax [esp+arg_0] +
sub esp 64h +
mov eax offset loc_4353B8 +
mov eax [esi+4] +
push ecx  +
mov eax [esi+4] +
sub esp 0Ch +
sub esp 10h +
push [esp+4+arg_4]  +
push esi  +
mov esi ecx +
xor ebp ebp +
push edi  +
cmp [esi+4] ebp +
push 15Bh  +
jz loc_4289AE  +
push dword ptr [esi+10h]  +
mov edi ds:GetDlgItem +
call edi  +
mov ecx [esi+40h] +
mov ebx ds:SendMessageA +
mov [esi+44h] eax +
mov ecx [ecx+0A4h] +
cmp ecx ebp +
jz loc_428979  +
push eax  +
push ecx  +
call HHA_267  +
push ebp  +
push ebp  +
push 186h  +
push dword ptr [esi+44h]  +
call ebx  +
push ebp  +
push ebp  +
push 18Bh  +
push dword ptr [esi+44h]  +
call ebx  +
cmp eax 1 +
jge loc_4289C6  +
push 15Eh  +
push dword ptr [esi+10h]  +
call edi  +
mov ebx ds:EnableWindow +
push ebp  +
push eax  +
call ebx  +
push 0D5h  +
push dword ptr [esi+10h]  +
call edi  +
push ebp  +
push eax  +
call ebx  +
jmp loc_4289C6  +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
push eax  +
mov eax [esi+40h] +
push dword ptr [eax+0A4h]  +
call HHA_265  +
push 1  +
pop eax  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
push [esp+arg_0]  +
mov eax offset loc_4353EB +
call _EH_prolog  +
push ecx  +
push esi  +
mov esi ecx +
mov [ebp-10h] esi +
mov eax [esi+44h] +
mov dword ptr [ebp-4] 1 +
test eax eax +
jz loc_428B08  +
push eax  +
call HHA_132  +
mov eax [esi+40h] +
and byte ptr [ebp-4] 0 +
test eax eax +
jz loc_428B19  +
push eax  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call HHA_297  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+44h] +
mov ecx edi +
call HHA_118  +
push 0  +
push 0  +
push 18Bh  +
push dword ptr [edi]  +
call ds:SendMessageA  +
cmp eax 1 +
jge loc_428B81  +
mov edi ds:GetDlgItem +
push ebx  +
push 15Eh  +
push dword ptr [esi+10h]  +
call edi  +
mov ebx ds:EnableWindow +
push 0  +
push eax  +
call ebx  +
push 0D5h  +
push dword ptr [esi+10h]  +
call edi  +
push 0  +
push eax  +
call ebx  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
***
mov eax offset loc_435416 +
call _EH_prolog  +
sub esp 1E8h +
push ebx  +
push esi  +
mov esi ds:SendMessageA +
xor ebx ebx +
push edi  +
push ebx  +
lea edi [ecx+44h] +
push ebx  +
push 188h  +
mov [ebp-10h] ecx +
push dword ptr [edi]  +
call esi  +
cmp eax 0FFFFFFFFh +
mov [ebp-14h] eax +
jz loc_428D9D  +
push ebx  +
push ebx  +
push 188h  +
mov ecx edi +
call sub_416F89  +
lea ecx [ebp-1F4h] +
push ecx  +
push eax  +
push 189h  +
push dword ptr [edi]  +
call esi  +
mov eax [ebp-10h] +
lea ecx [ebp-64h] +
push dword ptr [eax+10h]  +
call sub_428ABE  +
lea eax [ebp-1F4h] +
push offset aInclude_0  +
push eax  +
mov [ebp-4] ebx +
call HHA_12  +
test eax eax +
jz loc_428C8A  +
mov eax [ebp-10h] +
push dword ptr [eax+10h]  +
lea eax [ebp-1F4h] +
push eax  +
call HHA_2  +
push eax  +
push offset unk_443EB8  +
lea ecx [ebp-0BCh] +
call sub_428E20  +
lea ecx [ebp-0BCh] +
mov byte ptr [ebp-4] 1 +
call HHA_238  +
cmp eax 1 +
jnz loc_428C66  +
push ebx  +
push dword ptr [ebp-14h]  +
push 182h  +
push dword ptr [edi]  +
call esi  +
push dword ptr [ebp-78h]  +
push ebx  +
push 180h  +
push dword ptr [edi]  +
call esi  +
cmp eax 0FFFFFFFFh +
jz loc_428C66  +
push ebx  +
push eax  +
push 186h  +
push dword ptr [edi]  +
call esi  +
cmp [ebp-78h] ebx +
mov byte ptr [ebp-4] 2 +
jz loc_428C77  +
push dword ptr [ebp-78h]  +
call HHA_132  +
lea ecx [ebp-0BCh] +
mov [ebp-4] bl +
call HHA_297  +
jmp loc_428D91  +
lea eax [ebp-1F4h] +
push eax  +
call HHA_23  +
cmp [ebp-24h] ebx +
mov [ebp-10h] eax +
jz loc_428CA6  +
push dword ptr [ebp-24h]  +
call HHA_132  +
mov eax [ebp-10h] +
push 3Bh  +
push eax  +
mov [ebp-24h] eax +
call HHA_8  +
cmp eax ebx +
mov [ebp-10h] eax +
jz loc_428D10  +
push dword ptr [ebp-24h]  +
call HHA_3  +
cmp eax [ebp-10h] +
jnz loc_428D10  +
mov eax [ebp-10h] +
inc eax  +
push eax  +
call HHA_3  +
push eax  +
call HHA_23  +
cmp [ebp-20h] ebx +
mov [ebp-10h] eax +
jz loc_428CE8  +
push dword ptr [ebp-20h]  +
call HHA_132  +
mov eax [ebp-10h] +
push offset unk_436E40  +
mov [ebp-20h] eax +
call HHA_23  +
cmp [ebp-24h] ebx +
mov [ebp-10h] eax +
jz loc_428D08  +
push dword ptr [ebp-24h]  +
call HHA_132  +
mov eax [ebp-10h] +
mov [ebp-24h] eax +
jmp loc_428D3F  +
mov eax [ebp-10h] +
cmp eax ebx +
jz loc_428D3F  +
inc eax  +
push eax  +
call HHA_3  +
push eax  +
call HHA_23  +
cmp [ebp-20h] ebx +
mov [ebp-18h] eax +
jz loc_428D34  +
push dword ptr [ebp-20h]  +
call HHA_132  +
mov eax [ebp-18h] +
mov [ebp-20h] eax +
mov eax [ebp-10h] +
mov [eax] bl +
lea ecx [ebp-64h] +
call HHA_238  +
cmp eax 1 +
jnz loc_428D91  +
push ebx  +
push dword ptr [ebp-14h]  +
push 182h  +
push dword ptr [edi]  +
call esi  +
mov eax [ebp-20h] +
cmp [eax] bl +
jz loc_428D74  +
mov ecx [ebp-24h] +
call sub_404405  +
lea eax [ebp-20h] +
lea ecx [ebp-24h] +
push eax  +
call sub_42ED40  +
push dword ptr [ebp-24h]  +
push ebx  +
push 180h  +
push dword ptr [edi]  +
call esi  +
cmp eax 0FFFFFFFFh +
jz loc_428D91  +
push ebx  +
push eax  +
push 186h  +
push dword ptr [edi]  +
call esi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-64h] +
call sub_428AE3  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
mov eax offset loc_43544F +
mov eax offset loc_43546C +
mov eax offset __ehhandler$?CreateStream@COleStreamFile@@QAEHPAUIStorage@@PBDKPAVCFileException@@@Z_5 +
mov eax offset loc_435498 +
mov eax offset loc_4354B7 +
mov eax offset unknown_libname_25 +
call _EH_prolog  +
push ecx  +
push ebx  +
push esi  +
mov esi ecx +
xor ebx ebx +
push edi  +
cmp [esi+4] ebx +
jz loc_429321  +
mov ebx ds:GetDlgItem +
push 152h  +
push dword ptr [esi+10h]  +
call ebx  +
lea edi [esi+98h] +
mov [esi+9Ch] eax +
mov eax [edi] +
push dword ptr [eax+0F8h]  +
call HHA_107  +
mov eax [edi] +
xor edi edi +
mov eax [eax+0C0h] +
cmp eax edi +
jz loc_42930A  +
push dword ptr [esi+9Ch]  +
push eax  +
call HHA_267  +
push edi  +
push edi  +
push 186h  +
push dword ptr [esi+9Ch]  +
call ds:SendMessageA  +
jmp loc_4293CB  +
push 154h  +
push dword ptr [esi+10h]  +
call ebx  +
push edi  +
push eax  +
call ds:EnableWindow  +
jmp loc_4293CB  +
mov eax [esi+98h] +
mov ecx [esi+0A0h] +
mov [eax+0Ch] ecx +
mov eax [esi+98h] +
cmp [eax+0C0h] ebx +
jnz loc_42936B  +
push 58h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov [ebp-10h] eax +
cmp eax ebx +
mov [ebp-4] ebx +
jz loc_429359  +
mov ecx eax +
call HHA_35  +
jmp loc_42935B  +
xor eax eax +
mov ecx [esi+98h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [ecx+0C0h] eax +
push 152h  +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
push eax  +
mov eax [esi+98h] +
push dword ptr [eax+0C0h]  +
call HHA_265  +
cmp [esi+0A8h] ebx +
jz loc_4293CB  +
mov eax [esi+98h] +
mov edi [eax+0ECh] +
cmp edi ebx +
jz loc_4293B1  +
mov ecx edi +
call HHA_38  +
push edi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov ecx [esi+98h] +
mov edx [esi+0A4h] +
lea eax [esi+0A4h] +
mov [ecx+0ECh] edx +
mov [eax] ebx +
mov ecx [ebp-0Ch] +
push 1  +
pop eax  +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
mov eax offset loc_4354F3 +
call _EH_prolog  +
sub esp 26Ch +
push ebx  +
push esi  +
mov ebx ecx +
push edi  +
lea ecx [ebp-278h] +
push dword ptr [ebx+10h]  +
call HHA_252  +
xor esi esi +
push 1F51h  +
lea ecx [ebp-278h] +
mov [ebp-4] esi +
call sub_4090A1  +
mov edi 0FC00h +
lea ecx [ebp-20h] +
push edi  +
mov dword ptr [ebp-244h] 8020Ch +
call HHA_27  +
mov eax [ebp-1Ch] +
mov [ebp-258h] edi +
mov [ebp-25Ch] eax +
lea ecx [ebp-278h] +
and byte ptr [eax] 0 +
mov byte ptr [ebp-4] 1 +
call HHA_146  +
test eax eax +
jz loc_42972B  +
push dword ptr [ebp-25Ch]  +
call HHA_23  +
mov [ebp-14h] eax +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 2 +
call HHA_280  +
mov edx [ebp-25Ch] +
or ecx 0FFFFFFFFh +
mov edi edx +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
cmp [ecx+edx+1] al +
lea edx [ecx+edx+1] +
mov [ebp-18h] edx +
jnz loc_42950A  +
mov eax [ebx+98h] +
push esi  +
push esi  +
push dword ptr [ebp-25Ch]  +
push dword ptr [eax+0F8h]  +
call HHA_316  +
push dword ptr [ebp-25Ch]  +
push esi  +
push 180h  +
push dword ptr [ebx+9Ch]  +
call ds:SendMessageA  +
push esi  +
mov edi eax +
push dword ptr [ebp-25Ch]  +
mov eax [ebx+98h] +
push dword ptr [eax+0F8h]  +
call HHA_315  +
push dword ptr [ebp-25Ch]  +
lea eax [ebx+40h] +
push eax  +
call HHA_46  +
cmp edi 0FFFFFFFFh +
jz loc_4296E8  +
push esi  +
push edi  +
push 186h  +
push dword ptr [ebx+9Ch]  +
call ds:SendMessageA  +
jmp loc_4296E8  +
mov edi [ebp-14h] +
or ecx 0FFFFFFFFh +
xor eax eax +
lea esi [ebp-124h] +
scas   +
not ecx  +
sub edi ecx +
mov [ebp-10h] esi +
mov eax ecx +
mov esi edi +
mov edi [ebp-10h] +
shr ecx 2 +
movs   +
mov ecx eax +
xor eax eax +
and ecx 3 +
movs   +
mov edi edx +
or ecx 0FFFFFFFFh +
scas   +
lea esi [ebp-124h] +
not ecx  +
mov [ebp-10h] esi +
sub edi ecx +
mov eax [ebp-10h] +
mov esi edi +
mov edx ecx +
mov edi eax +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
mov ecx edx +
dec edi  +
shr ecx 2 +
movs   +
mov ecx edx +
lea eax [ebp-124h] +
and ecx 3 +
movs   +
xor edi edi +
push edi  +
push edi  +
push eax  +
mov eax [ebx+98h] +
push dword ptr [eax+0F8h]  +
call HHA_316  +
mov esi ds:SendMessageA +
lea eax [ebp-124h] +
push eax  +
push edi  +
push 180h  +
push dword ptr [ebx+9Ch]  +
call esi  +
mov [ebp-10h] eax +
lea eax [ebp-124h] +
push edi  +
push eax  +
mov eax [ebx+98h] +
push dword ptr [eax+0F8h]  +
call HHA_315  +
lea ecx [ebp-124h] +
lea eax [ebx+40h] +
push ecx  +
push eax  +
call HHA_46  +
cmp dword ptr [ebp-10h] 0FFFFFFFFh +
jz loc_4295E3  +
push edi  +
push dword ptr [ebp-10h]  +
push 186h  +
push dword ptr [ebx+9Ch]  +
call esi  +
mov edx [ebp-18h] +
or ecx 0FFFFFFFFh +
mov edi edx +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
cmp [edx+ecx+1] al +
lea edx [edx+ecx+1] +
mov [ebp-18h] edx +
jz loc_4296E6  +
jmp loc_429608  +
mov edx [ebp-18h] +
mov edi [ebp-14h] +
or ecx 0FFFFFFFFh +
xor eax eax +
lea esi [ebp-124h] +
scas   +
not ecx  +
sub edi ecx +
mov [ebp-10h] esi +
mov eax ecx +
mov esi edi +
mov edi [ebp-10h] +
shr ecx 2 +
movs   +
mov ecx eax +
xor eax eax +
and ecx 3 +
movs   +
mov edi edx +
or ecx 0FFFFFFFFh +
scas   +
lea esi [ebp-124h] +
not ecx  +
mov [ebp-10h] esi +
sub edi ecx +
mov eax [ebp-10h] +
mov esi edi +
mov edx ecx +
mov edi eax +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
mov ecx edx +
dec edi  +
shr ecx 2 +
movs   +
mov ecx edx +
lea eax [ebp-124h] +
and ecx 3 +
movs   +
xor esi esi +
push esi  +
push esi  +
push eax  +
mov eax [ebx+98h] +
push dword ptr [eax+0F8h]  +
call HHA_316  +
lea eax [ebp-124h] +
push eax  +
push esi  +
push 180h  +
push dword ptr [ebx+9Ch]  +
call ds:SendMessageA  +
lea eax [ebp-124h] +
push esi  +
push eax  +
mov eax [ebx+98h] +
push dword ptr [eax+0F8h]  +
call HHA_315  +
lea eax [ebp-124h] +
push eax  +
lea eax [ebx+40h] +
push eax  +
call HHA_46  +
mov edx [ebp-18h] +
or ecx 0FFFFFFFFh +
mov edi edx +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
cmp byte ptr [edx+ecx+1] 0 +
lea eax [edx+ecx+1] +
mov [ebp-18h] eax +
jnz loc_429605  +
xor esi esi +
push esi  +
push esi  +
push 18Bh  +
push dword ptr [ebx+9Ch]  +
call ds:SendMessageA  +
push 154h  +
mov edi eax +
push dword ptr [ebx+10h]  +
call ds:GetDlgItem  +
xor ecx ecx +
cmp edi esi +
setnz cl  +
push ecx  +
push eax  +
call ds:EnableWindow  +
cmp [ebp-14h] esi +
mov byte ptr [ebp-4] 1 +
jz loc_42972B  +
push dword ptr [ebp-14h]  +
call HHA_132  +
and byte ptr [ebp-4] 0 +
cmp [ebp-20h] esi +
jz loc_42973C  +
push dword ptr [ebp-20h]  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-128h] esi +
jz loc_429753  +
push dword ptr [ebp-128h]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
push esi  +
mov esi ecx +
push edi  +
lea edi [esi+9Ch] +
mov ecx edi +
call HHA_118  +
push 0  +
push 0  +
push 18Bh  +
push dword ptr [edi]  +
call ds:SendMessageA  +
push 154h  +
mov edi eax +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
xor ecx ecx +
test edi edi +
setnz cl  +
push ecx  +
push eax  +
call ds:EnableWindow  +
pop edi  +
pop esi  +
retn   +
***
mov eax offset loc_435510 +
call _EH_prolog  +
sub esp 58h +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
xor ebx ebx +
lea ecx [ebp-64h] +
push dword ptr [esi+10h]  +
mov eax [esi+98h] +
push ebx  +
push dword ptr [eax+0F8h]  +
call sub_428E20  +
lea ecx [ebp-64h] +
mov [ebp-4] ebx +
call HHA_238  +
mov edi ds:SendMessageA +
cmp eax 1 +
jnz loc_4297F9  +
push dword ptr [ebp-20h]  +
push ebx  +
push 180h  +
push dword ptr [esi+9Ch]  +
call edi  +
push ebx  +
push ebx  +
push 18Bh  +
push dword ptr [esi+9Ch]  +
call edi  +
push 154h  +
mov edi eax +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
xor ecx ecx +
cmp edi ebx +
setnz cl  +
push ecx  +
push eax  +
call ds:EnableWindow  +
cmp [ebp-20h] ebx +
mov dword ptr [ebp-4] 1 +
jz loc_42983B  +
push dword ptr [ebp-20h]  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-64h] +
call HHA_297  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
mov eax offset loc_435538 +
call _EH_prolog  +
sub esp 50h +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
xor ebx ebx +
mov eax [esi+98h] +
cmp [esi+0A8h] ebx +
mov edi [eax+0ECh] +
mov [ebp-10h] edi +
jz loc_4298C6  +
cmp [esi+0A4h] ebx +
jz loc_4298BE  +
push 58h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
cmp ecx ebx +
mov [ebp-4] ebx +
jz loc_4298A4  +
call HHA_35  +
jmp loc_4298A6  +
xor eax eax +
mov ecx [esi+98h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [ecx+0ECh] eax +
push dword ptr [esi+0A4h]  +
jmp loc_4298FC  +
mov [eax+0ECh] ebx +
jmp loc_42990D  +
cmp edi ebx +
jz loc_42990D  +
push 58h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-14h] ecx +
cmp ecx ebx +
mov dword ptr [ebp-4] 1 +
jz loc_4298E9  +
call HHA_35  +
jmp loc_4298EB  +
xor eax eax +
mov ecx [esi+98h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
push edi  +
mov [ecx+0ECh] eax +
mov eax [esi+98h] +
mov ecx [eax+0ECh] +
call HHA_36  +
push dword ptr [esi+10h]  +
lea ecx [ebp-5Ch] +
push dword ptr [esi+98h]  +
call sub_42759F  +
lea ecx [ebp-5Ch] +
mov dword ptr [ebp-4] 2 +
call HHA_238  +
cmp eax 1 +
jnz loc_42996D  +
cmp [ebp-18h] ebx +
jz loc_42996D  +
mov edi [esi+0A4h] +
cmp edi ebx +
jz loc_42994F  +
mov ecx edi +
call HHA_38  +
push edi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax [esi+98h] +
mov eax [eax+0ECh] +
mov dword ptr [esi+0A8h] 1 +
mov [esi+0A4h] eax +
jmp loc_42998B  +
mov eax [esi+98h] +
mov edi [eax+0ECh] +
cmp edi ebx +
jz loc_42998B  +
mov ecx edi +
call HHA_38  +
push edi  +
call ??3@YAXPAX@Z  +
pop ecx  +
mov eax [esi+98h] +
mov ecx [ebp-10h] +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov [eax+0ECh] ecx +
lea ecx [ebp-5Ch] +
call HHA_297  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
mov eax offset loc_43554D +
call _EH_prolog  +
push ecx  +
push esi  +
push 54h  +
call ??2@YAPAXI@Z  +
mov esi eax +
pop ecx  +
mov [ebp-10h] esi +
xor eax eax +
cmp esi eax +
mov [ebp-4] eax +
jz loc_4299E6  +
mov ecx esi +
call ??0CDocument@@QAE@XZ  +
mov dword ptr [esi] offset off_43A4B8 +
mov eax esi +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
call sub_429A31  +
mov dword ptr [ecx] offset off_43A4B8 +
call ?OnNewDocument@CDocument@@UAEHXZ  +
neg eax  +
sbb eax eax +
neg eax  +
retn   +
***
mov eax offset loc_435561 +
call _EH_prolog  +
push ecx  +
push 64h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
cmp ecx eax +
mov [ebp-4] eax +
jz loc_429A6E  +
call sub_429AA2  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax ds:?classCView@CView@@2UCRuntimeClass@@A +
retn   +
***
call ??0CView@@IAE@XZ  +
call sub_429B01  +
mov dword ptr [ecx] offset off_43A690 +
mov eax [ebp+arg_8] +
mov eax [esp+arg_0] +
mov eax [esp+arg_0] +
mov eax [esp+arg_0] +
cmp [esp+lpRect] 0 +
mov eax [esi+1Ch] +
mov eax offset loc_435574 +
cmp [esp+arg_4] 0 +
mov eax offset loc_435590 +
mov eax offset unknown_libname_26 +
push ecx  +
mov eax [ecx+5Ch] +
test eax eax +
jz locret_429EB3  +
mov eax [eax+20h] +
test eax eax +
jz locret_429EB3  +
mov ecx [eax] +
push 0  +
push 0  +
push 2  +
push [esp+0Ch+arg_0]  +
push offset unk_43B558  +
push eax  +
call dword ptr [ecx+10h]  +
retn 4  +
***
push esi  +
push edi  +
mov edi ecx +
mov esi [edi+5Ch] +
test esi esi +
jz loc_429ED8  +
and dword ptr [edi+5Ch] 0 +
push 0  +
mov ecx esi +
call sub_42A533  +
test esi esi +
jz loc_429ED8  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
mov ecx edi +
call ?OnDestroy@CView@@IAEXXZ  +
pop edi  +
pop esi  +
retn   +
***
push esi  +
mov esi ecx +
call ?Default@CWnd@@IAEJXZ  +
mov ecx [esi+5Ch] +
test ecx ecx +
jz loc_429EF6  +
call sub_42A62C  +
pop esi  +
retn 0Ch  +
***
push esi  +
mov esi ecx +
call ?Default@CWnd@@IAEJXZ  +
mov esi [esi+58h] +
test esi esi +
jz loc_429F10  +
push esi  +
call ds:SetFocus  +
pop esi  +
retn 4  +
***
mov eax [esi+60h] +
mov eax [eax+10h] +
mov eax offset loc_4355B9 +
call _EH_prolog  +
cmp dword ptr [ebp+8] 33h +
push ebx  +
push esi  +
mov ebx ecx +
jz loc_429F82  +
push dword ptr [ebp+8]  +
call sub_429E90  +
jmp loc_429FD5  +
push 84h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp+8] ecx +
and dword ptr [ebp-4] 0 +
test ecx ecx +
jz loc_429FA9  +
push 0  +
push 0  +
push 0  +
call ??0CColorDialog@@QAE@KKPAVCWnd@@@Z  +
mov esi eax +
jmp loc_429FAB  +
xor esi esi +
mov eax [esi] +
or dword ptr [ebp-4] 0FFFFFFFFh +
mov ecx esi +
call dword ptr [eax+0BCh]  +
cmp eax 1 +
jnz loc_429FC8  +
push dword ptr [esi+6Ch]  +
mov ecx ebx +
call sub_429F46  +
test esi esi +
jz loc_429FD5  +
mov eax [esi] +
push 1  +
mov ecx esi +
call dword ptr [eax+4]  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn 4  +
***
call ?OnInitialUpdate@CView@@UAEXXZ  +
mov eax [esi+40h] +
mov ecx esi +
push dword ptr [eax+24h]  +
call sub_429DE9  +
test eax eax +
jnz loc_42A0E1  +
push dword ptr [esi+20h]  +
call ds:GetParent  +
push eax  +
call ?FromHandle@CWnd@@SGPAV1@PAUHWND__@@@Z  +
push 0  +
push 0  +
push 10h  +
push dword ptr [eax+20h]  +
call ds:PostMessageA  +
pop esi  +
retn   +
push 84Fh  +
mov ecx esi +
call sub_429F64  +
pop esi  +
retn   +
***
sub [esp+arg_0] 4 +
sub [esp+arg_0] 4 +
sub [esp+arg_0] 4 +
mov edx [esp+arg_0] +
mov esi ecx +
mov eax [ebp+arg_8] +
mov eax [esp+arg_0] +
dec dword ptr [esi+4]  +
mov eax offset unknown_libname_28 +
push ecx  +
push edi  +
mov eax offset unknown_libname_29 +
sub esp 10h +
sub esp 208h +
mov eax ecx +
mov dword ptr [ecx] offset off_43A9B8 +
mov eax ecx +
mov dword ptr [ecx] offset off_43A9D8 +
mov eax ecx +
mov dword ptr [ecx] offset off_43AA00 +
mov eax ecx +
mov dword ptr [ecx] offset off_43AA18 +
mov eax [esp+arg_0] +
mov eax [esp+arg_4] +
push 1  +
mov eax 80004001h +
mov eax 80004001h +
mov eax 80004001h +
mov eax offset loc_43563C +
mov eax ecx +
mov dword ptr [ecx] offset off_43AA58 +
mov eax [esp+arg_0] +
mov eax [esp+arg_0] +
sub esp 10h +
mov eax ecx +
mov dword ptr [ecx] offset off_43AA68 +
mov eax [esp+arg_0] +
push esi  +
push 0FFFFFFFAh  +
mov eax [esp+arg_0] +
mov eax 80004001h +
mov eax [ebp+arg_8] +
mov eax 80004001h +
retn   +
***
call sub_42ABBD  +
mov dword ptr [ecx] offset off_43AB30 +
jmp loc_432630  +
***
retn   +
***
mov eax offset loc_435665 +
call _EH_prolog  +
push ecx  +
push esi  +
push 0F0h  +
call ??2@YAPAXI@Z  +
mov esi eax +
pop ecx  +
mov [ebp-10h] esi +
and dword ptr [ebp-4] 0 +
test esi esi +
jz loc_42AC1A  +
mov ecx esi +
call ??0CRichEditDoc@@IAE@XZ  +
and dword ptr [esi+0E8h] 0 +
mov dword ptr [esi] offset off_43AC18 +
mov eax esi +
jmp loc_42AC1C  +
xor eax eax +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
call sub_42AC61  +
mov dword ptr [ecx] offset off_43AC18 +
mov eax offset loc_435679 +
call _EH_prolog  +
push ecx  +
push esi  +
push edi  +
mov edi ecx +
push 84h  +
call ??2@YAPAXI@Z  +
mov esi eax +
pop ecx  +
mov [ebp-10h] esi +
xor eax eax +
cmp esi eax +
mov [ebp-4] eax +
jz loc_42ACA7  +
push edi  +
mov ecx esi +
push dword ptr [ebp+8]  +
call ??0CRichEditCntrItem@@QAE@PAU_reobject@@PAVCRichEditDoc@@@Z  +
mov dword ptr [esi] offset off_43AB30 +
mov eax esi +
mov ecx [ebp-0Ch] +
pop edi  +
mov large fs:0 ecx +
pop esi  +
leave   +
retn 4  +
***
jmp loc_4327B6  +
***
mov eax offset loc_43568D +
call _EH_prolog  +
push ecx  +
push 188h  +
call ??2@YAPAXI@Z  +
pop ecx  +
mov ecx eax +
mov [ebp-10h] ecx +
xor eax eax +
cmp ecx eax +
mov [ebp-4] eax +
jz loc_42ACE5  +
call sub_42AD19  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax ds:?classCRichEditView@CRichEditView@@2UCRuntimeClass@@A +
retn   +
***
mov eax offset loc_4356A0 +
call sub_42AD8A  +
mov eax offset loc_4356B4 +
sub esp 40h +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_4] ecx +
call ?OnInitialUpdate@CRichEditView@@MAEXXZ  +
and [ebp+var_30] 0 +
and [ebp+var_27] 0 +
push offset String2  +
push offset aLogfont  +
push offset aSettings  +
mov [ebp+var_40] 3Ch +
mov [ebp+var_3C] 20000001h +
mov [ebp+var_28] 1 +
call HHA_161  +
mov ebx eax +
test ebx ebx +
jz loc_42AE7A  +
cmp byte ptr [ebx] 0 +
jz loc_42AE7A  +
mov ecx ebx +
call HHA_196  +
mov edi ds:strchr +
push 2Ch  +
push ebx  +
mov [ebp+var_34] eax +
call edi  +
pop ecx  +
mov esi eax +
pop ecx  +
inc esi  +
mov ecx esi +
call HHA_196  +
push 2Ch  +
push esi  +
mov [ebp+var_38] eax +
call edi  +
pop ecx  +
inc eax  +
pop ecx  +
mov edi eax +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
lea edx [ebp+var_26] +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
and ecx 3 +
movs   +
or byte ptr [ebp+var_3C+3] 80h +
jmp loc_42AEA6  +
mov edi offset aMsSansSerif +
or ecx 0FFFFFFFFh +
xor eax eax +
lea edx [ebp+var_26] +
scas   +
not ecx  +
sub edi ecx +
mov [ebp+var_38] 40000000h +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
and ecx 3 +
movs   +
mov ecx [ebp+var_4] +
lea eax [ebp+var_40] +
push eax  +
call ?SetDefaultCharFormat@CRichEditCtrl@@QAEHAAU_charformat@@@Z  +
push ebx  +
call HHA_132  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
cmp [esp+4] ecx +
jz loc_42AEC9  +
mov dword_44441C ecx +
call ?Default@CWnd@@IAEJXZ  +
retn 4  +
***
cmp dword_44441C 0 +
push esi  +
mov esi ecx +
jnz loc_42AEE2  +
call sub_42AFC8  +
mov ecx dword_44441C +
push 0  +
call ?EnableWindow@CWnd@@QAEHH@Z  +
mov ecx dword_44441C +
push 0FFFFFFFFh  +
push 0FFFFFFFFh  +
call ?SetSel@CRichEditCtrl@@QAEXJJ@Z  +
push dword ptr [esp+8]  +
mov eax dword_44441C +
push 0  +
push 0C2h  +
push dword ptr [eax+20h]  +
call ds:SendMessageA  +
mov eax dword_44441C +
push 0  +
mov ecx [eax+40h] +
mov eax [ecx] +
call dword ptr [eax+60h]  +
mov ecx dword_44441C +
push 1  +
call ?EnableWindow@CWnd@@QAEHH@Z  +
push dword ptr [esi+20h]  +
call ds:UpdateWindow  +
push 1  +
pop eax  +
pop esi  +
retn 8  +
***
cmp [ebp+arg_0] 111h +
mov eax offset loc_4356D0 +
call _EH_prolog  +
push ecx  +
push ecx  +
push ebx  +
xor ebx ebx +
cmp dword_44441C ebx +
jnz loc_42B078  +
mov eax dword_44420C +
push edi  +
push esi  +
lea ecx [ebp-14h] +
mov esi [eax+8] +
call ??0CString@@QAE@XZ  +
push 1FB4h  +
lea ecx [ebp-14h] +
mov [ebp-4] ebx +
call ?LoadStringA@CString@@QAEHI@Z  +
cmp esi ebx +
jz loc_42B06A  +
mov eax esi +
mov esi [esi] +
lea ecx [ebp-10h] +
mov edi [eax+8] +
call ??0CString@@QAE@XZ  +
mov eax [edi] +
lea ecx [ebp-10h] +
push 2  +
push ecx  +
mov ecx edi +
mov byte ptr [ebp-4] 1 +
call dword ptr [eax+68h]  +
test eax eax +
jz loc_42B045  +
mov eax [ebp-10h] +
cmp [eax-8] ebx +
jz loc_42B045  +
push dword ptr [ebp-14h]  +
push eax  +
call ds:strstr  +
pop ecx  +
test eax eax +
pop ecx  +
jnz loc_42B052  +
lea ecx [ebp-10h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
jmp loc_42B005  +
mov eax [edi] +
push 1  +
push ebx  +
mov ecx edi +
call dword ptr [eax+84h]  +
lea ecx [ebp-10h] +
mov [ebp-4] bl +
call ??1CString@@QAE@XZ  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-14h] +
call ??1CString@@QAE@XZ  +
pop esi  +
pop edi  +
mov ecx [ebp-0Ch] +
pop ebx  +
mov large fs:0 ecx +
leave   +
retn   +
***
push esi  +
push 0FFFFFFFFh  +
mov esi ecx +
push 0  +
call ?SetSel@CRichEditCtrl@@QAEXJJ@Z  +
push 0  +
push 0  +
push 303h  +
push dword ptr [esi+20h]  +
call ds:SendMessageA  +
mov ecx [esi+40h] +
push 0  +
mov eax [ecx] +
call dword ptr [eax+60h]  +
pop esi  +
retn   +
***
mov eax offset loc_4356E7 +
call _EH_prolog  +
sub esp 294h +
push ebx  +
push esi  +
push edi  +
mov [ebp-10h] ecx +
push 0Fh  +
xor eax eax +
pop ecx  +
lea edi [ebp-4Ch] +
stos   +
mov ecx [ebp-10h] +
lea eax [ebp-4Ch] +
push eax  +
mov dword ptr [ebp-4Ch] 3Ch +
call ?GetDefaultCharFormat@CRichEditCtrl@@QBEKAAU_charformat@@@Z  +
push 0Fh  +
mov ebx ds:MulDiv +
pop ecx  +
xor eax eax +
push 5A0h  +
push 64h  +
push dword ptr [ebp-40h]  +
lea edi [ebp-88h] +
stos   +
call ebx  +
neg eax  +
mov [ebp-88h] eax +
lea edi [ebp-32h] +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
lea edx [ebp-6Ch] +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
and ecx 3 +
test byte ptr [ebp-44h] 1 +
movs   +
jz loc_42B139  +
mov dword ptr [ebp-78h] 2BCh +
test byte ptr [ebp-44h] 2 +
jz loc_42B143  +
mov byte ptr [ebp-74h] 1 +
xor esi esi +
lea eax [ebp-88h] +
push esi  +
push esi  +
push 41h  +
push eax  +
lea ecx [ebp-1A0h] +
call ??0CFontDialog@@QAE@PAUtagLOGFONTA@@KPAVCDC@@PAVCWnd@@@Z  +
lea ecx [ebp-1A0h] +
mov [ebp-4] esi +
call ?DoModal@CFontDialog@@UAEHXZ  +
push 1  +
pop ecx  +
cmp eax ecx +
jnz loc_42B292  +
mov eax [ebp-10h] +
mov dword ptr [ebp-44h] 40000000h +
mov [eax+184h] ecx +
mov eax [ebp-88h] +
cdq   +
xor eax edx +
sub eax edx +
lea ecx [eax-8] +
cmp ecx 0Bh +
ja loc_42B1E6  +
jmp ds:off_42B2B0[ecx*4]  +
mov dword ptr [ebp-40h] 78h +
jmp loc_42B1F3  +
mov dword ptr [ebp-40h] 8Ch +
jmp loc_42B1F3  +
mov dword ptr [ebp-40h] 0A0h +
jmp loc_42B1F3  +
mov dword ptr [ebp-40h] 0B4h +
jmp loc_42B1F3  +
mov dword ptr [ebp-40h] 0C8h +
jmp loc_42B1F3  +
mov dword ptr [ebp-40h] 0DCh +
jmp loc_42B1F3  +
mov dword ptr [ebp-40h] 0F0h +
jmp loc_42B1F3  +
mov dword ptr [ebp-40h] 118h +
jmp loc_42B1F3  +
push 64h  +
push 5A0h  +
push eax  +
call ebx  +
mov [ebp-40h] eax +
lea edi [ebp-6Ch] +
or ecx 0FFFFFFFFh +
xor eax eax +
lea edx [ebp-32h] +
scas   +
not ecx  +
sub edi ecx +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
and ecx 3 +
movs   +
and dword ptr [ebp-44h] 0FFFFFFFCh +
cmp dword ptr [ebp-78h] 2BCh +
jl loc_42B227  +
or dword ptr [ebp-44h] 1 +
cmp byte ptr [ebp-74h] 0 +
jz loc_42B231  +
or dword ptr [ebp-44h] 2 +
mov al [ebp-71h] +
mov ecx [ebp-10h] +
mov [ebp-34h] al +
lea eax [ebp-4Ch] +
push eax  +
mov dword ptr [ebp-48h] 0A0000001h +
call ?SetDefaultCharFormat@CRichEditCtrl@@QAEHAAU_charformat@@@Z  +
mov ecx [ebp-10h] +
lea eax [ebp-4Ch] +
push eax  +
mov dword ptr [ebp-4Ch] 3Ch +
call ?GetDefaultCharFormat@CRichEditCtrl@@QBEKAAU_charformat@@@Z  +
lea eax [ebp-32h] +
push eax  +
lea eax [ebp-2A0h] +
push dword ptr [ebp-44h]  +
push dword ptr [ebp-40h]  +
push offset aUUS  +
push eax  +
call ds:wsprintfA  +
add esp 14h +
lea eax [ebp-2A0h] +
push eax  +
push offset aLogfont  +
push offset aSettings  +
call HHA_213  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-1A0h] +
call ??1CDialog@@UAE@XZ  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
push esi  +
push esi  +
push esi  +
mov eax offset loc_4357CC +
cmp [esp+arg_0] 2 +
push esi  +
mov eax offset __ehhandler$??1CDatabase@@UAE@XZ +
mov eax offset __ehhandler$??1CDatabase@@UAE@XZ_0 +
mov esi ecx +
mov eax [esp+arg_0] +
cmp [esp+arg_0] 0FFFFFF31h +
mov eax [esp+arg_0] +
mov eax [esp+arg_0] +
mov eax [esp+arg_0] +
mov eax [esp+lpString] +
cmp [esp+arg_0] 0FFFFFF32h +
jz loc_42CA6C  +
cmp [esp+arg_0] 0FFFFFF38h +
jnz loc_42CA68  +
push 5  +
push 0  +
push 470h  +
push dword ptr [ecx+10h]  +
call ds:GetParent  +
push eax  +
call ds:PostMessageA  +
xor eax eax +
jmp locret_42CAA3  +
mov eax [ecx+70h] +
xor edx edx +
cmp [eax] edx +
jz loc_42CA79  +
push 2Bh  +
jmp loc_42CA96  +
cmp [eax+0Ch] edx +
jz loc_42CA82  +
push 2Ah  +
jmp loc_42CA96  +
cmp [eax+8] edx +
jz loc_42CA8B  +
push 29h  +
jmp loc_42CA96  +
cmp [eax+4] edx +
jz loc_42CA94  +
push 1Eh  +
jmp loc_42CA96  +
push 27h  +
push edx  +
push dword ptr [ecx+10h]  +
call ds:SetWindowLongA  +
push 1  +
pop eax  +
retn 4  +
***
mov eax offset __ehhandler$?CreateStream@COleStreamFile@@QAEHPAUIStorage@@PBDKPAVCFileException@@@Z_6 +
call _EH_prolog  +
sub esp 154h +
push esi  +
mov esi ecx +
push 0  +
lea ecx [ebp-160h] +
call HHA_252  +
and dword ptr [ebp-4] 0 +
push 1FA0h  +
lea ecx [ebp-160h] +
call sub_4090A1  +
lea ecx [ebp-160h] +
mov dword ptr [ebp-12Ch] 804h +
call HHA_146  +
test eax eax +
jz loc_42CB0F  +
push 3EBh  +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
lea ecx [ebp-114h] +
push ecx  +
push eax  +
call ds:SetWindowTextA  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-10h] 0 +
jz loc_42CB21  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax offset __ehhandler$?CreateStream@COleStreamFile@@QAEHPAUIStorage@@PBDKPAVCFileException@@@Z_7 +
call _EH_prolog  +
sub esp 154h +
push esi  +
mov esi ecx +
push 0  +
lea ecx [ebp-160h] +
call HHA_252  +
and dword ptr [ebp-4] 0 +
push 1FB7h  +
lea ecx [ebp-160h] +
call sub_4090A1  +
lea ecx [ebp-160h] +
mov dword ptr [ebp-12Ch] 1804h +
call HHA_146  +
test eax eax +
jz loc_42CB97  +
push 47Dh  +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
lea ecx [ebp-114h] +
push ecx  +
push eax  +
call ds:SetWindowTextA  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-10h] 0 +
jz loc_42CBA9  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax offset __ehhandler$?CreateStream@COleStreamFile@@QAEHPAUIStorage@@PBDKPAVCFileException@@@Z_8 +
call _EH_prolog  +
sub esp 154h +
push esi  +
mov esi ecx +
push 0  +
lea ecx [ebp-160h] +
call HHA_252  +
and dword ptr [ebp-4] 0 +
push 1F66h  +
lea ecx [ebp-160h] +
call sub_4090A1  +
lea ecx [ebp-160h] +
mov dword ptr [ebp-12Ch] 1804h +
call HHA_146  +
test eax eax +
jz loc_42CC1F  +
push 3EBh  +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
lea ecx [ebp-114h] +
push ecx  +
push eax  +
call ds:SetWindowTextA  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-10h] 0 +
jz loc_42CC31  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax offset __ehhandler$?CreateStream@COleStreamFile@@QAEHPAUIStorage@@PBDKPAVCFileException@@@Z_9 +
call _EH_prolog  +
sub esp 154h +
push esi  +
mov esi ecx +
push 0  +
lea ecx [ebp-160h] +
call HHA_252  +
and dword ptr [ebp-4] 0 +
push 1F68h  +
lea ecx [ebp-160h] +
call sub_4090A1  +
lea ecx [ebp-160h] +
mov dword ptr [ebp-12Ch] 1804h +
call HHA_146  +
test eax eax +
jz loc_42CCA7  +
push 3EBh  +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
lea ecx [ebp-114h] +
push ecx  +
push eax  +
call ds:SetWindowTextA  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-10h] 0 +
jz loc_42CCB9  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax offset __ehhandler$?CreateStream@COleStreamFile@@QAEHPAUIStorage@@PBDKPAVCFileException@@@Z_10 +
call _EH_prolog  +
sub esp 154h +
push esi  +
mov esi ecx +
push 0  +
lea ecx [ebp-160h] +
call HHA_252  +
and dword ptr [ebp-4] 0 +
push 1FA0h  +
lea ecx [ebp-160h] +
call sub_4090A1  +
lea ecx [ebp-160h] +
mov dword ptr [ebp-12Ch] 804h +
call HHA_146  +
test eax eax +
jz loc_42CD2F  +
push 3EBh  +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
lea ecx [ebp-114h] +
push ecx  +
push eax  +
call ds:SetWindowTextA  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-10h] 0 +
jz loc_42CD41  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop esi  +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax offset loc_4358EB +
call _EH_prolog  +
sub esp 170h +
push ebx  +
push esi  +
push edi  +
mov ebx ecx +
push 152h  +
push dword ptr [ebx+10h]  +
call ds:GetDlgItem  +
push dword ptr [ebx+10h]  +
lea ecx [ebp-17Ch] +
mov [ebp-10h] eax +
call HHA_252  +
xor esi esi +
push 1F51h  +
lea ecx [ebp-17Ch] +
mov [ebp-4] esi +
call sub_4090A1  +
mov edi 8000h +
lea ecx [ebp-28h] +
push edi  +
mov dword ptr [ebp-148h] 81A0Ch +
call HHA_27  +
mov eax [ebp-24h] +
mov [ebp-15Ch] edi +
mov [ebp-160h] eax +
mov byte ptr [ebp-4] 1 +
and byte ptr [eax] 0 +
lea eax [ebp-17Ch] +
push eax  +
call GetOpenFileNameA  +
test eax eax +
jz loc_42CF76  +
push dword ptr [ebp-160h]  +
call HHA_23  +
mov [ebp-18h] eax +
lea ecx [ebp-18h] +
mov byte ptr [ebp-4] 2 +
call HHA_280  +
mov edx [ebp-160h] +
or ecx 0FFFFFFFFh +
mov edi edx +
xor eax eax +
scas   +
not ecx  +
dec ecx  +
cmp [ecx+edx+1] al +
lea edi [ecx+edx+1] +
mov [ebp-20h] edi +
jnz loc_42CE52  +
mov eax [ebx+70h] +
push esi  +
push esi  +
push edx  +
push dword ptr [eax+10h]  +
call HHA_316  +
push dword ptr [ebp-160h]  +
push esi  +
mov esi ds:SendMessageA +
push 180h  +
push dword ptr [ebp-10h]  +
call esi  +
cmp eax 0FFFFFFFFh +
jz loc_42CF36  +
push 0  +
push eax  +
push 186h  +
push dword ptr [ebp-10h]  +
call esi  +
jmp loc_42CF36  +
push dword ptr [ebp-18h]  +
call HHA_23  +
mov [ebp-14h] eax +
push edi  +
lea ecx [ebp-14h] +
mov byte ptr [ebp-4] 3 +
call sub_40282C  +
mov eax [ebx+70h] +
push esi  +
push esi  +
push dword ptr [ebp-14h]  +
push dword ptr [eax+10h]  +
call HHA_316  +
push dword ptr [ebp-14h]  +
push esi  +
mov esi ds:SendMessageA +
push 180h  +
push dword ptr [ebp-10h]  +
call esi  +
cmp eax 0FFFFFFFFh +
jz loc_42CEA0  +
push 0  +
push eax  +
push 186h  +
push dword ptr [ebp-10h]  +
call esi  +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
mov eax [ebp-20h] +
not ecx  +
dec ecx  +
cmp byte ptr [eax+ecx+1] 0 +
lea edi [eax+ecx+1] +
mov [ebp-20h] edi +
jz loc_42CF24  +
jmp loc_42CEC0  +
mov edi [ebp-20h] +
push dword ptr [ebp-18h]  +
call HHA_23  +
mov [ebp-1Ch] eax +
push edi  +
lea ecx [ebp-1Ch] +
mov byte ptr [ebp-4] 4 +
call sub_40282C  +
mov eax [ebx+70h] +
push 0  +
push 0  +
push dword ptr [ebp-1Ch]  +
push dword ptr [eax+10h]  +
call HHA_316  +
push dword ptr [ebp-1Ch]  +
push 0  +
push 180h  +
push dword ptr [ebp-10h]  +
call esi  +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
mov eax [ebp-20h] +
mov byte ptr [ebp-4] 3 +
not ecx  +
dec ecx  +
cmp dword ptr [ebp-1Ch] 0 +
lea edi [eax+ecx+1] +
mov [ebp-20h] edi +
jz loc_42CF1F  +
push dword ptr [ebp-1Ch]  +
call HHA_132  +
cmp byte ptr [edi] 0 +
jnz loc_42CEBD  +
cmp dword ptr [ebp-14h] 0 +
mov byte ptr [ebp-4] 2 +
jz loc_42CF36  +
push dword ptr [ebp-14h]  +
call HHA_132  +
xor edi edi +
push edi  +
push edi  +
push 18Bh  +
push dword ptr [ebp-10h]  +
call esi  +
push 154h  +
mov esi eax +
push dword ptr [ebx+10h]  +
call ds:GetDlgItem  +
xor ecx ecx +
cmp esi edi +
setnz cl  +
push ecx  +
push eax  +
call ds:EnableWindow  +
cmp [ebp-18h] edi +
mov byte ptr [ebp-4] 1 +
jz loc_42CF74  +
push dword ptr [ebp-18h]  +
call HHA_132  +
xor esi esi +
and byte ptr [ebp-4] 0 +
cmp [ebp-28h] esi +
jz loc_42CF87  +
push dword ptr [ebp-28h]  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-2Ch] esi +
jz loc_42CF98  +
push dword ptr [ebp-2Ch]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn   +
***
push esi  +
mov eax [esp+arg_0] +
push edi  +
mov eax offset loc_435900 +
call _EH_prolog  +
push ecx  +
and dword ptr [ebp-10h] 0 +
push esi  +
push dword ptr [ebp+18h]  +
lea ecx [ebp-10h] +
call HHA_58  +
push dword ptr [ebp-10h]  +
and dword ptr [ebp-4] 0 +
call HHA_318  +
mov esi eax +
mov eax [ebp+8] +
push 47Ah  +
mov eax [eax+8] +
push dword ptr [eax+10h]  +
call ds:GetDlgItem  +
push esi  +
push eax  +
call ds:SetWindowTextA  +
call sub_403D19  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-10h] 0 +
jz loc_42D0E2  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
xor eax eax +
mov large fs:0 ecx +
pop esi  +
leave   +
retn 14h  +
***
push edi  +
mov eax dword_443C34 +
mov eax offset loc_435914 +
push 0FFFFFFFFh  +
sub esp 208h +
movzx eax [esp+arg_0] +
push 2  +
pop edx  +
sub eax edx +
jz loc_42D3B2  +
sub eax 4 +
jz loc_42D3AE  +
dec eax  +
jz loc_42D3A0  +
sub eax 1Bh +
jz loc_42D3A4  +
dec eax  +
jz loc_42D39A  +
push 1  +
pop eax  +
jmp locret_42D3CF  +
mov dword_443BB8 edx +
push 7  +
jmp loc_42D3C4  +
mov dword_443BB8 1 +
push 6  +
jmp loc_42D3C4  +
and dword_443DD8 0 +
mov dword_443BB8 3 +
push edx  +
push dword ptr [ecx+10h]  +
call ds:EndDialog  +
xor eax eax +
retn 8  +
***
mov eax offset __ehhandler$?UpdateDialogControls@CWnd@@QAEXPAVCCmdTarget@@H@Z +
call _EH_prolog  +
sub esp 7Ch +
push hWnd  +
lea ecx [ebp-88h] +
call sub_42D465  +
and dword ptr [ebp-4] 0 +
lea ecx [ebp-88h] +
call HHA_238  +
cmp dword ptr [ebp-48h] 0 +
mov dword ptr [ebp-4] 1 +
jz loc_42D414  +
push dword ptr [ebp-48h]  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-88h] +
call HHA_297  +
mov ecx [ebp-0Ch] +
mov large fs:0 ecx +
leave   +
retn   +
***
mov eax offset loc_435967 +
push esi  +
mov eax offset loc_435984 +
mov eax offset loc_435998 +
call _EH_prolog  +
sub esp 6Ch +
cmp dword ptr [ebp+8] 0Fh +
push edi  +
mov edi ecx +
jz loc_42D892  +
xor eax eax +
jmp loc_42D91A  +
push esi  +
lea eax [ebp-78h] +
push ebx  +
push eax  +
push dword ptr [edi+10h]  +
lea ecx [ebp-38h] +
call HHA_137  +
mov ebx ds:DrawEdge +
and dword ptr [ebp-4] 0 +
lea esi [edi+54h] +
push 0Fh  +
push 0Ah  +
push esi  +
push dword ptr [ebp-38h]  +
call ebx  +
push 0FFFFFFFEh  +
push 0FFFFFFFEh  +
push esi  +
mov esi ds:InflateRect +
call esi  +
push dword ptr [edi+74h]  +
lea eax [edi+54h] +
lea ecx [ebp-38h] +
push eax  +
call HHA_94  +
push 2  +
lea eax [edi+54h] +
push 2  +
push eax  +
call esi  +
lea eax [edi+64h] +
push 0Fh  +
push 0Ah  +
push eax  +
push dword ptr [ebp-38h]  +
call ebx  +
push 0FFFFFFFEh  +
lea ebx [edi+64h] +
push 0FFFFFFFEh  +
push ebx  +
call esi  +
push dword ptr [edi+78h]  +
lea ecx [ebp-38h] +
push ebx  +
call HHA_94  +
push 2  +
push 2  +
push ebx  +
call esi  +
or dword ptr [ebp-4] 0FFFFFFFFh +
lea ecx [ebp-38h] +
call HHA_85  +
pop ebx  +
xor eax eax +
pop esi  +
mov ecx [ebp-0Ch] +
pop edi  +
mov large fs:0 ecx +
leave   +
retn 0Ch  +
***
mov edx ecx +
push edi  +
mov eax offset loc_4359EA +
mov eax offset loc_435A04 +
mov eax offset loc_435A40 +
mov eax [ecx+218h] +
push 1  +
push ecx  +
mov eax offset loc_435A54 +
mov eax offset loc_435A90 +
mov eax offset loc_435AA4 +
mov eax offset loc_435AB8 +
call _EH_prolog  +
push esi  +
mov esi ecx +
push dword ptr [ebp+8]  +
lea ecx [ebp+8] +
call sub_42D0FA  +
mov eax [esi+218h] +
add esi 268h +
push esi  +
push 0  +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
and dword ptr [ebp-4] 0 +
push 0  +
push dword ptr [ebp+8]  +
push eax  +
call dword ptr [ecx+10h]  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp+8] 0 +
mov esi eax +
jz loc_42E54C  +
push dword ptr [ebp+8]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
mov eax esi +
mov large fs:0 ecx +
pop esi  +
leave   +
retn 8  +
***
mov eax offset loc_435B1F +
mov eax offset loc_435B94 +
mov eax [ecx+268h] +
push esi  +
lea esi [ecx+268h] +
test eax eax +
jz loc_42ED08  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi] 0 +
pop esi  +
retn   +
***
push ebx  +
mov ebx ecx +
mov edx [ebx] +
test edx edx +
jnz loc_42ED5A  +
mov eax [ebp+arg_0] +
push dword ptr [eax]  +
call HHA_23  +
mov [ebx] eax +
jmp loc_42EDB8  +
push edi  +
push esi  +
mov esi [ebp+arg_0] +
or ecx 0FFFFFFFFh +
xor eax eax +
mov edi [esi] +
scas   +
not ecx  +
dec ecx  +
mov edi edx +
mov eax ecx +
or ecx 0FFFFFFFFh +
mov [ebp+arg_0] eax +
xor eax eax +
scas   +
mov eax [ebp+arg_0] +
not ecx  +
dec ecx  +
lea eax [eax+ecx+1] +
push eax  +
push dword ptr [ebx]  +
call HHA_131  +
mov edx eax +
or ecx 0FFFFFFFFh +
mov [ebx] edx +
mov edi [esi] +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov ebx ecx +
mov edi edx +
or ecx 0FFFFFFFFh +
scas   +
mov ecx ebx +
dec edi  +
shr ecx 2 +
movs   +
mov ecx ebx +
and ecx 3 +
movs   +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
push ebx  +
push ebp  +
push esi  +
xor ebp ebp +
push edi  +
mov edi ds:SendDlgItemMessageA +
push ebp  +
mov ebx 0F1h +
push 1  +
mov esi ecx +
push ebx  +
push 46Bh  +
push dword ptr [esi+10h]  +
call edi  +
push ebp  +
push ebp  +
push ebx  +
push 46Ah  +
push dword ptr [esi+10h]  +
call edi  +
mov eax [esi+74h] +
cmp [eax+20h] ebp +
jnz loc_42EE26  +
mov eax [eax] +
cmp eax ebp +
jz loc_42EE02  +
cmp eax 1 +
jz loc_42EE02  +
xor eax eax +
jmp loc_42EE05  +
push 1  +
pop eax  +
xor ecx ecx +
cmp eax ebp +
setnz cl  +
or ecx 4 +
push ecx  +
push ebp  +
push 470h  +
push dword ptr [esi+10h]  +
call ds:GetParent  +
push eax  +
call ds:PostMessageA  +
pop edi  +
pop esi  +
pop ebp  +
pop ebx  +
retn   +
***
mov eax ds:?classCControlBar@CControlBar@@2UCRuntimeClass@@A +
retn   +
***
sub esp 114h +
cmp [ebp+arg_4] 0 +
sub esp 10h +
retn   +
***
mov eax offset loc_435BBC +
cmp [esp+arg_0] 0 +
push esi  +
mov esi ecx +
jnz loc_42F2E0  +
mov eax [esi+90h] +
jmp loc_42F306  +
push edi  +
lea edi [esi+94h] +
lea eax [esi+8Ch] +
mov ecx edi +
push eax  +
call ??4CString@@QAEABV0@ABV0@@Z  +
add esi 90h +
mov ecx edi +
push esi  +
call ??YCString@@QAEABV0@ABV0@@Z  +
mov eax [edi] +
pop edi  +
pop esi  +
retn 4  +
***
push dword ptr [esp+8]  +
mov eax [ecx+98h] +
push dword ptr [esp+8]  +
push 52h  +
push dword ptr [eax+20h]  +
call ds:SendMessageA  +
retn 8  +
***
mov eax [esp+4] +
push ebx  +
push esi  +
sub eax 46h +
push edi  +
mov esi ecx +
jz loc_42F359  +
dec eax  +
jnz loc_42F37D  +
xor edi edi +
push 1  +
push edi  +
push edi  +
push edi  +
call sub_42B7A5  +
push edi  +
push 7D41h  +
push 111h  +
push dword ptr [esi+20h]  +
call ds:PostMessageA  +
jmp loc_42F37D  +
push 0  +
mov edi ds:PostMessageA +
push dword ptr [esp+18h]  +
mov ebx 111h +
push ebx  +
push dword ptr [esi+20h]  +
call edi  +
push 0  +
push 7D41h  +
push ebx  +
push dword ptr [esi+20h]  +
call edi  +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
retn 8  +
***
cmp dword ptr [esi+4] 0 +
mov eax offset __ehhandler$?CreateStream@COleStreamFile@@QAEHPAUIStorage@@PBDKPAVCFileException@@@Z_11 +
call _EH_prolog  +
sub esp 154h +
cmp dword ptr [ebp+8] 48Ch +
push esi  +
push edi  +
mov esi ecx +
jnz loc_42F592  +
xor edi edi +
lea eax [ebp-110h] +
push edi  +
push edi  +
push edi  +
push edi  +
push dword ptr [esi+10h]  +
push eax  +
push 1  +
push 1FFEh  +
call sub_40418E  +
test eax eax +
jz loc_42F602  +
push 48Ah  +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
lea ecx [ebp-110h] +
push ecx  +
push eax  +
call ds:SetWindowTextA  +
jmp loc_42F602  +
cmp dword ptr [ebp+8] 48Dh +
jnz loc_42F602  +
xor edi edi +
lea ecx [ebp-160h] +
push edi  +
call HHA_252  +
push 1FC0h  +
lea ecx [ebp-160h] +
mov [ebp-4] edi +
call sub_4090A1  +
lea ecx [ebp-160h] +
mov dword ptr [ebp-12Ch] 804h +
call HHA_146  +
test eax eax +
jz loc_42F5F1  +
push 487h  +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
lea ecx [ebp-114h] +
push ecx  +
push eax  +
call ds:SetWindowTextA  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-10h] edi +
jz loc_42F602  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop edi  +
mov large fs:0 ecx +
pop esi  +
leave   +
retn 4  +
***
mov eax offset loc_435C47 +
mov eax offset loc_435C6C +
call _EH_prolog  +
sub esp 37Ch +
mov eax [ebp+10h] +
push ebx  +
push esi  +
xor ebx ebx +
cmp [eax+24h] ebx +
mov esi ecx +
push edi  +
mov [ebp-14h] esi +
jnz loc_42FB9C  +
mov edi [ebp+0Ch] +
mov eax [esi+218h] +
cmp edi ebx +
jnz loc_42F806  +
mov [ebp-20h] eax +
jmp loc_42F820  +
mov ecx [eax] +
lea edx [ebp-20h] +
push edx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push edi  +
push eax  +
call dword ptr [ecx+18h]  +
cmp eax ebx +
jl loc_42FB9C  +
mov eax [ebp-20h] +
mov ecx [eax] +
lea edx [ebp-1Ch] +
push edx  +
push ebx  +
push ebx  +
push ebx  +
push eax  +
call dword ptr [ecx+2Ch]  +
cmp eax ebx +
jl loc_42FB9C  +
push dword ptr [ebp+8]  +
call ds:GetFileAttributesA  +
cmp eax 0FFFFFFFFh +
jnz loc_42F85B  +
xor eax eax +
cmp edi ebx +
setz al  +
push eax  +
push dword ptr [ebp+8]  +
call HHA_143  +
test eax eax +
jz loc_42FB9C  +
cmp edi ebx +
jnz loc_42F86E  +
push hWnd  +
mov ecx [ebp+10h] +
push ebx  +
call sub_42821F  +
lea eax [ebp-7Ch] +
mov ecx esi +
push eax  +
push dword ptr [ebp-1Ch]  +
call sub_42E148  +
test eax eax +
jz loc_42FB77  +
push dword ptr [ebp-7Ch]  +
lea ecx [ebp-10h] +
mov [ebp-10h] ebx +
call HHA_58  +
push dword ptr [esi+21Ch]  +
mov [ebp-4] ebx +
call ds:CoTaskMemFree  +
mov ecx [ebp-10h] +
mov al [ecx] +
cmp al 23h +
jz loc_42FB60  +
cmp al 24h +
jz loc_42FB60  +
cmp dword ptr [ebp-78h] 1 +
mov edi [ebp+8] +
lea edx [ebp-180h] +
jnz loc_42F97C  +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
lea eax [ebp-180h] +
and ecx 3 +
push eax  +
movs   +
call HHA_80  +
mov edi [ebp-10h] +
or ecx 0FFFFFFFFh +
xor eax eax +
lea edx [ebp-180h] +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov edi edx +
mov edx ecx +
or ecx 0FFFFFFFFh +
scas   +
mov ecx edx +
dec edi  +
shr ecx 2 +
movs   +
mov ecx edx +
and ecx 3 +
cmp [ebp+0Ch] ebx +
movs   +
mov [ebp-388h] bx +
jz loc_42F94E  +
push dword ptr [ebp+0Ch]  +
lea eax [ebp-388h] +
push eax  +
call ds:lstrcpyW  +
lea eax [ebp-388h] +
push offset asc_443B1C  +
push eax  +
call ds:lstrcatW  +
push dword ptr [ebp-7Ch]  +
lea eax [ebp-388h] +
push eax  +
call ds:lstrcatW  +
push dword ptr [ebp+10h]  +
mov ecx [ebp-14h] +
lea eax [ebp-388h] +
push eax  +
lea eax [ebp-180h] +
push eax  +
call sub_42F7CE  +
jmp loc_42FB47  +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
not ecx  +
sub edi ecx +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
lea eax [ebp-180h] +
and ecx 3 +
push eax  +
movs   +
call HHA_80  +
mov edi [ebp-10h] +
or ecx 0FFFFFFFFh +
xor eax eax +
lea edx [ebp-180h] +
scas   +
not ecx  +
sub edi ecx +
push ebx  +
mov esi edi +
mov edi edx +
mov edx ecx +
or ecx 0FFFFFFFFh +
scas   +
mov ecx edx +
dec edi  +
shr ecx 2 +
movs   +
push 8000000h  +
mov ecx edx +
push 2  +
push ebx  +
and ecx 3 +
push ebx  +
lea eax [ebp-180h] +
push 40000000h  +
movs   +
push eax  +
call ds:CreateFileA  +
cmp eax 0FFFFFFFFh +
mov [ebp-24h] eax +
jz loc_42FB47  +
lea eax [ebp-180h] +
push eax  +
call HHA_318  +
mov ecx [ebp+10h] +
push eax  +
call sub_42866F  +
call sub_403D19  +
push dword ptr [ebp-74h]  +
lea ecx [ebp-2Ch] +
call HHA_27  +
cmp [ebp+0Ch] ebx +
mov byte ptr [ebp-4] 1 +
jz loc_42FACE  +
push dword ptr [ebp+0Ch]  +
lea ecx [ebp-18h] +
mov [ebp-18h] ebx +
call HHA_58  +
mov edi [ebp-18h] +
or ecx 0FFFFFFFFh +
xor eax eax +
lea edx [ebp-180h] +
scas   +
not ecx  +
sub edi ecx +
mov byte ptr [ebp-4] 2 +
mov eax ecx +
mov esi edi +
mov edi edx +
shr ecx 2 +
movs   +
mov ecx eax +
lea eax [ebp-180h] +
and ecx 3 +
push eax  +
movs   +
call HHA_80  +
mov edi [ebp-10h] +
or ecx 0FFFFFFFFh +
xor eax eax +
lea edx [ebp-180h] +
scas   +
not ecx  +
sub edi ecx +
mov esi edi +
mov edi edx +
mov edx ecx +
or ecx 0FFFFFFFFh +
scas   +
mov ecx edx +
dec edi  +
shr ecx 2 +
movs   +
mov ecx edx +
lea eax [ebp-180h] +
and ecx 3 +
push eax  +
movs   +
call HHA_23  +
cmp [ebp-10h] ebx +
mov esi eax +
jz loc_42FABA  +
push dword ptr [ebp-10h]  +
call HHA_132  +
cmp [ebp-18h] ebx +
mov [ebp-10h] esi +
mov byte ptr [ebp-4] 1 +
jz loc_42FACE  +
push dword ptr [ebp-18h]  +
call HHA_132  +
mov esi [ebp-14h] +
push ebx  +
push dword ptr [ebp-10h]  +
mov ecx esi +
call sub_42E4FF  +
mov edi eax +
cmp edi ebx +
jl loc_42FB19  +
mov eax [esi+268h] +
lea edx [ebp-30h] +
push edx  +
push dword ptr [ebp-74h]  +
mov ecx [eax] +
push dword ptr [ebp-2Ch]  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov edi eax +
cmp edi ebx +
jl loc_42FB12  +
lea eax [ebp-34h] +
push ebx  +
push eax  +
push dword ptr [ebp-30h]  +
push dword ptr [ebp-2Ch]  +
push dword ptr [ebp-24h]  +
call ds:WriteFile  +
mov ecx esi +
call sub_42ECEE  +
push dword ptr [ebp-24h]  +
call ds:CloseHandle  +
cmp edi ebx +
jge loc_42FB35  +
lea eax [ebp-180h] +
push eax  +
call ds:DeleteFileA  +
jmp loc_42FB37  +
inc dword ptr [esi]  +
cmp [ebp-2Ch] ebx +
mov [ebp-4] bl +
jz loc_42FB47  +
push dword ptr [ebp-2Ch]  +
call HHA_132  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp [ebp-10h] ebx +
jz loc_42FB58  +
push dword ptr [ebp-10h]  +
call HHA_132  +
mov esi [ebp-14h] +
jmp loc_42F86E  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp ecx ebx +
jz loc_42F86E  +
push ecx  +
call HHA_132  +
jmp loc_42F86E  +
mov eax [ebp-1Ch] +
cmp eax ebx +
jz loc_42FB87  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [ebp-1Ch] ebx +
mov eax [ebp-20h] +
cmp eax [esi+218h] +
jz loc_42FB9C  +
cmp eax ebx +
jz loc_42FB9C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn 0Ch  +
***
mov eax offset loc_435CAF +
call _EH_prolog  +
push ecx  +
push esi  +
mov esi ecx +
push hWnd  +
mov [ebp-10h] esi +
push 0CFh  +
call HHA_301  +
and dword ptr [ebp-4] 0 +
and dword ptr [esi+40h] 0 +
mov eax [ebp+8] +
mov byte ptr [ebp-4] 1 +
test eax eax +
mov dword ptr [esi] offset off_43B440 +
jz loc_42FCAB  +
cmp byte ptr [eax] 0 +
jz loc_42FCAB  +
push edi  +
push eax  +
call HHA_23  +
mov edi eax +
mov eax [esi+40h] +
test eax eax +
jz loc_42FCA7  +
push eax  +
call HHA_132  +
mov [esi+40h] edi +
pop edi  +
mov ecx [ebp-0Ch] +
mov eax esi +
mov large fs:0 ecx +
pop esi  +
leave   +
retn 4  +
***
mov eax offset unknown_libname_61 +
mov eax offset __ehhandler$?CreateStream@COleStreamFile@@QAEHPAUIStorage@@PBDKPAVCFileException@@@Z_12 +
mov eax offset unknown_libname_31 +
mov eax offset __ehhandler$?CreateStream@COleStreamFile@@QAEHPAUIStorage@@PBDKPAVCFileException@@@Z_13 +
call _EH_prolog  +
sub esp 154h +
push ebx  +
push esi  +
mov esi ecx +
push edi  +
mov ecx [ebp+8] +
mov edi 10Ah +
mov eax ecx +
shr eax 10h +
cmp ax 5 +
jnz loc_430202  +
cmp cx di +
jnz loc_430202  +
push edi  +
mov edi ds:GetDlgItem +
push dword ptr [esi+10h]  +
call edi  +
push eax  +
call ds:GetWindowTextLengthA  +
push 1  +
mov ebx eax +
push dword ptr [esi+10h]  +
call edi  +
push ebx  +
push eax  +
call ds:EnableWindow  +
jmp loc_43022F  +
cmp ax 8 +
jnz loc_430236  +
cmp cx di +
jnz loc_430236  +
push edi  +
push dword ptr [esi+10h]  +
call ds:GetDlgItem  +
movzx eax ax +
or eax 50000h +
push eax  +
push edi  +
push 111h  +
push dword ptr [esi+10h]  +
call ds:PostMessageA  +
xor eax eax +
jmp loc_4302D1  +
test ax ax +
jnz loc_4302CE  +
cmp cx 453h +
jnz loc_4302CE  +
push 0  +
lea ecx [ebp-160h] +
call HHA_252  +
and dword ptr [ebp-4] 0 +
push 2030h  +
lea ecx [ebp-160h] +
mov dword ptr [ebp-12Ch] 804h +
call sub_4090A1  +
lea ecx [ebp-160h] +
call HHA_146  +
test eax eax +
jz loc_4302BC  +
mov ebx ds:GetDlgItem +
push edi  +
push dword ptr [esi+10h]  +
call ebx  +
lea ecx [ebp-114h] +
push ecx  +
push eax  +
call ds:SetWindowTextA  +
push edi  +
push dword ptr [esi+10h]  +
call ebx  +
push eax  +
call ds:GetWindowTextLengthA  +
push 1  +
mov edi eax +
push dword ptr [esi+10h]  +
call ebx  +
push edi  +
push eax  +
call ds:EnableWindow  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp-10h] 0 +
jz loc_4302CE  +
push dword ptr [ebp-10h]  +
call HHA_132  +
push 1  +
pop eax  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn 8  +
***
mov eax offset unknown_libname_62 +
mov eax offset loc_435DD3 +
mov eax offset loc_435DF3 +
push [esp+arg_0]  +
push 0CEh  +
call HHA_301  +
and dword ptr [esi+40h] 0 +
mov dword ptr [esi] offset off_4379E8 +
mov eax esi +
pop esi  +
retn 4  +
***
push esi  +
push edi  +
push edi  +
mov edx [esp+arg_0] +
mov eax [esp+arg_0] +
mov eax dword_44443C +
push ecx  +
push ecx  +
cmp [esp+arg_0] 0 +
cmp [esp+arg_0] 0 +
push esi  +
mov eax offset unknown_libname_32 +
mov eax offset loc_435E38 +
mov eax offset loc_435E5C +
mov edi [ecx+50h] +
push ecx  +
push esi  +
mov eax offset loc_435E88 +
mov eax offset loc_435E9C +
mov eax offset loc_435EB0 +
mov eax offset loc_435EC4 +
push esi  +
cmp [esp+arg_0] 4Eh +
mov eax offset loc_435ED8 +
call _EH_prolog  +
sub esp 38h +
mov eax [ebp+8] +
push ebx  +
push esi  +
push edi  +
mov eax [eax+8] +
mov esi ecx +
cmp eax 0FFFFFE6Eh +
jz loc_431B58  +
cmp eax 0FFFFFE6Fh +
jz loc_431B58  +
cmp eax 0FFFFFFFCh +
jz loc_431AA2  +
cmp eax 0FFFFFFFEh +
jnz loc_431B58  +
lea eax [ebp-1Ch] +
push eax  +
call ds:GetCursorPos  +
lea eax [ebp-1Ch] +
push eax  +
push dword ptr [esi+40h]  +
call ds:ScreenToClient  +
mov edi ds:SendMessageA +
lea eax [ebp-1Ch] +
xor ebx ebx +
push eax  +
push ebx  +
push 1111h  +
push dword ptr [esi+40h]  +
call edi  +
mov eax [ebp-10h] +
cmp eax ebx +
mov [ebp-40h] eax +
jz loc_431B58  +
lea eax [ebp-44h] +
mov dword ptr [esi+48h] 1 +
push eax  +
push ebx  +
push 110Ch  +
mov dword ptr [ebp-44h] 6 +
push dword ptr [esi+40h]  +
call edi  +
push dword ptr [ebp-20h]  +
mov ecx esi +
call sub_4312D3  +
mov [ebp-2Ch] eax +
mov [ebp-28h] eax +
lea eax [ebp-44h] +
mov dword ptr [ebp-44h] 22h +
push eax  +
push ebx  +
push 110Dh  +
push dword ptr [esi+40h]  +
call edi  +
jmp loc_431B58  +
mov ebx ds:SendMessageA +
xor edi edi +
push edi  +
push 9  +
push 110Ah  +
push dword ptr [esi+40h]  +
call ebx  +
cmp eax edi +
mov [ebp-40h] eax +
jz loc_431B58  +
lea eax [ebp-44h] +
mov dword ptr [ebp-44h] 4 +
push eax  +
push edi  +
push 110Ch  +
push dword ptr [esi+40h]  +
call ebx  +
cmp [ebp-20h] edi +
jnz loc_431AF8  +
test byte ptr [ebp-3Ch] 20h +
push dword ptr [ebp-40h]  +
jz loc_431AEA  +
push 1  +
jmp loc_431AEC  +
push 2  +
push 1102h  +
push dword ptr [esi+40h]  +
call ebx  +
jmp loc_431B58  +
push dword ptr [ebp-20h]  +
mov ecx esi +
call sub_431291  +
mov ecx [ebp-20h] +
mov [ebp-2Ch] eax +
mov eax [esi+54h] +
mov dword ptr [ebp-44h] 3 +
mov eax [eax+4] +
mov eax [eax+4] +
push dword ptr [eax+ecx*4]  +
call HHA_23  +
mov [ebp+8] eax +
mov [ebp-4] edi +
push dword ptr [ebp-40h]  +
mov [ebp-34h] eax +
mov edi eax +
or ecx 0FFFFFFFFh +
xor eax eax +
scas   +
push eax  +
push 110Dh  +
push dword ptr [esi+40h]  +
not ecx  +
dec ecx  +
mov [ebp-30h] ecx +
call ebx  +
or dword ptr [ebp-4] 0FFFFFFFFh +
cmp dword ptr [ebp+8] 0 +
jz loc_431B58  +
push dword ptr [ebp+8]  +
call HHA_132  +
mov ecx [ebp-0Ch] +
pop edi  +
pop esi  +
xor eax eax +
mov large fs:0 ecx +
pop ebx  +
leave   +
retn 4  +
***
sub esp 104h +
push ecx  +
jmp ds:?OnFilePrintPreview@CView@@IAEXXZ  +
***
jmp ds:?OnUpdateObjectVerbMenu@COleDocument@@IAEXPAVCCmdUI@@@Z  +
***
jmp ds:?OnEditLinks@COleDocument@@IAEXXZ  +
***
test ecx ecx +
jnz loc_432BAF  +
call ds:GetVersion  +
mov ecx eax +
and ecx 0FFh +
cmp ecx 3 +
mov ecx dword_443B3C +
jnz loc_432BAE  +
test eax 80000000h +
jz loc_432BAE  +
inc ecx  +
jmp loc_432BAF  +
dec ecx  +
mov dword_443B3C ecx +
test ecx ecx +
jle loc_432BDB  +
mov eax dword_443B40 +
test eax eax +
jle loc_432BD5  +
mov esi ds:Sleep +
push 0  +
call esi  +
mov eax dword_443B40 +
test eax eax +
jg loc_432BC8  +
inc eax  +
mov dword_443B40 eax +
cmp dword_444474 0FFFFFFFFh +
jnz loc_432BF4  +
mov eax [esp+arg_0] +
push eax  +
call ds:_onexit  +
add esp 4 +
jmp loc_432C0B  +
mov eax [esp+arg_0] +
push offset dword_444470  +
push offset dword_444474  +
push eax  +
call __dllonexit  +
add esp 0Ch +
cmp dword_443B3C 0 +
jle loc_432C1A  +
dec dword_443B40  +
pop esi  +
retn   +
***
mov eax [esp+arg_0] +
push eax  +
call __onexit  +
add esp 4 +
cmp eax 1 +
sbb eax eax +
retn   +
***
jmp ds:__CxxFrameHandler  +
***
call ??1type_info@@UAE@XZ  +
lea ecx [esp+arg_0] +
jb loc_432CA0  +
sub ecx 1000h +
sub eax 1000h +
test [ecx] eax +
cmp eax 1000h +
jnb loc_432C8C  +
sub ecx eax +
mov eax esp +
test [ecx] eax +
mov esp ecx +
mov ecx [eax] +
mov eax [eax+4] +
push eax  +
retn   +
***
mov eax large fs:0 +
push ebp  +
mov ebp esp +
push 0FFFFFFFFh  +
push offset unk_43B6A0  +
push offset loc_432EB2  +
push eax  +
mov large fs:0 esp +
sub esp 78h +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 2  +
call ds:__set_app_type  +
add esp 4 +
mov dword_444470 0FFFFFFFFh +
mov eax dword_444470 +
mov dword_444474 eax +
call ds:__p__fmode  +
mov ecx dword_443B80 +
mov [eax] ecx +
call ds:__p__commode  +
mov ecx dword_443B7C +
mov [eax] ecx +
mov eax ds:_adjust_fdiv +
mov eax [eax] +
mov dword_44446C eax +
call nullsub_1  +
cmp dword_443B78 0 +
jnz loc_432D50  +
push offset loc_432EA0  +
call ds:__setusermatherr  +
add esp 4 +
call __setdefaultprecision  +
push offset unk_4420A4  +
push offset unk_4420A0  +
call _initterm  +
add esp 8 +
mov eax dword_443B74 +
mov [ebp+var_28] eax +
lea eax [ebp+var_28] +
push eax  +
mov eax dword_443B70 +
push eax  +
lea eax [ebp+var_34] +
push eax  +
lea eax [ebp+var_38] +
push eax  +
lea eax [ebp+var_3C] +
push eax  +
call ds:__getmainargs  +
add esp 14h +
push offset unk_44209C  +
push offset unk_442000  +
call _initterm  +
add esp 8 +
call ds:__p__acmdln  +
mov esi [eax] +
mov al [esi] +
cmp al 22h +
jnz loc_432DC4  +
mov al [ebp+var_40] +
inc esi  +
mov al [esi] +
test al al +
jz loc_432DBC  +
cmp al 22h +
jnz loc_432DB1  +
cmp byte ptr [esi] 22h +
jnz loc_432DCE  +
inc esi  +
jmp loc_432DCE  +
cmp al 20h +
jbe loc_432DCE  +
inc esi  +
cmp byte ptr [esi] 20h +
ja loc_432DC8  +
cmp byte ptr [esi] 0 +
jz loc_432DDE  +
cmp byte ptr [esi] 20h +
ja loc_432DDE  +
inc esi  +
cmp byte ptr [esi] 0 +
jnz loc_432DD3  +
mov [ebp+StartupInfo.dwFlags] 0 +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoA  +
test byte ptr [ebp+StartupInfo.dwFlags] 1 +
mov eax 0Ah +
jz loc_432E05  +
mov eax dword ptr [ebp+StartupInfo.wShowWindow] +
and eax 0FFFFh +
push eax  +
push esi  +
push 0  +
push 0  +
call ds:GetModuleHandleA  +
push eax  +
call _WinMain@16  +
push eax  +
call ds:exit  +
***
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-20h] eax +
mov eax [ebp-14h] +
push eax  +
mov eax [ebp-20h] +
push eax  +
call _XcptFilter  +
add esp 8 +
retn   +
***
mov esp [ebp-18h] +
mov eax [ebp-20h] +
push eax  +
call ds:_exit  +
***
call _controlfp  +
add esp 8 +
retn   +
***
xor eax eax +
retn   +
***
push [esp+nShowCmd]  +
call ?AfxGetModuleState@@YGPAVAFX_MODULE_STATE@@XZ  +
mov edx [esp-4+arg_4] +
mov ecx [esp-4+arg_8] +
mov [eax+14h] dl +
test edx edx +
mov [eax+1040h] ecx +
jnz loc_432F0E  +
push 0FFFFFFFDh  +
call ds:_setmbcp  +
add esp 4 +
mov eax 1 +
retn 8  +
***
push esi  +
push 410h  +
mov esi ecx +
push 0  +
call ?AfxInitialize@@YGHHK@Z  +
mov eax esi +
pop esi  +
retn   +
***
lea ecx [ebp-10h] +
retn   +
***
retn   +
***
retn   +
***
retn   +
***
retn   +
***
retn   +
***
retn   +
***
lea ecx [ebp-14h] +
lea ecx [ebp-94h] +
pop ecx  +
pop ecx  +
pop ecx  +
pop ecx  +
retn   +
***
lea ecx [ebp-1Ch] +
jmp ??1CDC@@UAE@XZ  +
***
mov eax offset stru_43B798 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-20h] +
lea ecx [ebp-14h] +
lea ecx [ebp-18h] +
jmp ??1CString@@QAE@XZ  +
***
mov eax offset stru_43B7C0 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43B800 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 32Ch +
jmp ??1CToolBar@@UAE@XZ  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 28Ch +
jmp ??1CToolBar@@UAE@XZ  +
***
mov eax offset stru_43B878 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-168h] +
jmp loc_403181  +
***
mov eax offset stru_43B8C0 +
jmp loc_432C34  +
***
lea ecx [ebp-58h] +
jmp j_HHA_297  +
***
mov eax offset stru_43B8F0 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
mov eax offset stru_43B918 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
mov eax offset stru_43B940 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43B968 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43B990 +
jmp loc_432C34  +
***
lea ecx [ebp-24h] +
jmp HHA_31  +
***
mov eax offset stru_43B9B8 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
retn   +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43B9E0 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 90h +
jmp ??1CString@@QAE@XZ  +
***
mov eax offset stru_43BA18 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 94h +
jmp ??1CString@@QAE@XZ  +
***
lea ecx [ebp-38h] +
jmp HHA_85  +
***
mov eax offset stru_43BA90 +
jmp loc_432C34  +
***
lea ecx [ebp-160h] +
pop ecx  +
retn   +
***
mov eax offset stru_43BAB8 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
lea ecx [ebp+0Ch] +
jmp loc_409A0A  +
***
mov eax offset stru_43BAE8 +
jmp loc_432C34  +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
retn   +
***
mov eax offset stru_43BB68 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43BB90 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43BBB8 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp loc_404BC8  +
***
mov eax offset stru_43BBE0 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp loc_404BC8  +
***
mov eax offset stru_43BC08 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43BC30 +
jmp loc_432C34  +
***
lea ecx [ebp-260h] +
jmp loc_403181  +
***
mov eax offset stru_43BC58 +
jmp loc_432C34  +
***
lea ecx [ebp-158h] +
jmp j_HHA_297  +
***
mov eax offset stru_43BC80 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
mov eax offset stru_43BCA8 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43BCD0 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp sub_405345  +
***
mov eax offset stru_43BCF8 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
jmp ??1CView@@UAE@XZ  +
***
mov eax offset stru_43BD20 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp ??1CView@@UAE@XZ  +
***
mov eax offset stru_43BD58 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp sub_405345  +
***
mov eax offset stru_43BD80 +
jmp loc_432C34  +
***
lea ecx [ebp-1A0h] +
jmp loc_405840  +
***
mov eax offset stru_43BDA8 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-7Ch] +
lea ecx [ebp-7Ch] +
lea ecx [ebp-7Ch] +
jmp HHA_38  +
***
mov eax offset stru_43BDD0 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp HHA_38  +
***
mov eax offset stru_43BE10 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43BE38 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43BE68 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
lea ecx [ebp-28h] +
lea ecx [ebp-18h] +
lea ecx [ebp-1Ch] +
jmp loc_409A0A  +
***
mov eax offset stru_43BE90 +
jmp loc_432C34  +
***
lea ecx [ebp+8] +
jmp loc_409A0A  +
***
mov eax offset stru_43BED8 +
jmp loc_432C34  +
***
lea ecx [ebp-0ECh] +
lea ecx [ebp-10h] +
pop ecx  +
lea ecx [ebp-130h] +
lea ecx [ebp-348h] +
lea ecx [ebp-3BCh] +
lea ecx [ebp-104h] +
lea ecx [ebp-1A8h] +
lea ecx [ebp-1D4h] +
lea ecx [ebp-15Ch] +
jmp HHA_85  +
***
mov ecx [ebp-10h] +
jmp HHA_297  +
***
mov eax offset stru_43BF70 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp HHA_38  +
***
mov eax offset stru_43BF98 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 0B4h +
jmp loc_409A0A  +
***
mov eax offset stru_43BFC0 +
jmp loc_432C34  +
***
lea ecx [ebp-58h] +
lea ecx [ebp-58h] +
lea ecx [ebp-58h] +
lea ecx [ebp-58h] +
jmp HHA_297  +
***
mov eax offset stru_43C000 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp HHA_297  +
***
mov eax offset stru_43C040 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp HHA_297  +
***
mov eax offset stru_43C068 +
jmp loc_432C34  +
***
lea ecx [ebp-58h] +
lea ecx [ebp-58h] +
lea ecx [ebp-58h] +
lea ecx [ebp-58h] +
jmp HHA_297  +
***
mov eax offset stru_43C090 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp HHA_297  +
***
mov eax offset stru_43C0D0 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp HHA_297  +
***
mov eax offset stru_43C0F8 +
jmp loc_432C34  +
***
lea ecx [ebp-78h] +
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43C120 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp HHA_297  +
***
mov eax offset stru_43C150 +
jmp loc_432C34  +
***
lea ecx [ebp-54h] +
lea ecx [ebp-10h] +
lea ecx [ebp-54h] +
jmp HHA_297  +
***
mov eax offset stru_43C178 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp HHA_297  +
***
mov eax offset stru_43C1B0 +
jmp loc_432C34  +
***
pop ecx  +
retn   +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43C200 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43C228 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-68h] +
lea ecx [ebp-68h] +
jmp HHA_297  +
***
mov eax offset stru_43C258 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp HHA_297  +
***
mov eax offset stru_43C290 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 40h +
jmp loc_409A0A  +
***
mov eax offset stru_43C2B8 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43C2E8 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-60h] +
pop ecx  +
retn   +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 44h +
jmp loc_409A0A  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 40h +
jmp loc_409A0A  +
***
mov eax offset stru_43C380 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43C3E8 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43C410 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43C438 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43C460 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp sub_405345  +
***
mov eax offset stru_43C488 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp sub_405345  +
***
mov eax offset stru_43C4B0 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
mov eax offset stru_43C4D8 +
jmp loc_432C34  +
***
lea ecx [ebp-1A0h] +
jmp loc_405840  +
***
mov eax offset stru_43C508 +
jmp loc_432C34  +
***
pop ecx  +
pop ecx  +
pop ecx  +
lea ecx [ebp-60h] +
jmp sub_408D35  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 4Ch +
jmp loc_409A0A  +
***
mov eax offset stru_43C570 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 4Ch +
jmp loc_409A0A  +
***
mov eax offset stru_43C5B0 +
jmp loc_432C34  +
***
lea ecx [ebp-18h] +
pop ecx  +
pop ecx  +
retn   +
***
mov eax offset stru_43C5F0 +
jmp loc_432C34  +
***
lea ecx [ebp-160h] +
jmp loc_403181  +
***
mov eax offset stru_43C628 +
jmp loc_432C34  +
***
lea ecx [ebp-18h] +
lea ecx [ebp-14h] +
jmp loc_404658  +
***
mov eax offset stru_43C650 +
jmp loc_432C34  +
***
lea ecx [ebp-4Ch] +
jmp j_HHA_297  +
***
mov eax offset stru_43C680 +
jmp loc_432C34  +
***
lea ecx [ebp-18h] +
jmp loc_409A0A  +
***
mov eax offset stru_43C6A8 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43C6D0 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-10h] +
add ecx 54h +
jmp loc_4099D4  +
***
mov eax offset stru_43C6F8 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43C730 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-4] +
jmp loc_409A0A  +
***
mov eax offset stru_43C758 +
jmp loc_432C34  +
***
lea ecx [ebp-0B8h] +
lea ecx [ebp-0CCh] +
mov eax [ebp-108h] +
lea ecx [ebp-0F4h] +
lea ecx [ebp-10Ch] +
lea ecx [ebp-104h] +
lea ecx [ebp-0CCh] +
lea ecx [ebp-0CCh] +
lea ecx [ebp-0CCh] +
jmp loc_409A0A  +
***
mov ecx [ebp-10h] +
add ecx 28h +
jmp loc_409A0A  +
***
mov eax offset stru_43C7F8 +
jmp loc_432C34  +
***
mov eax [ebp+8] +
mov eax [ebp+8] +
mov eax [ebp+8] +
mov eax [ebp+8] +
push eax  +
call ??3@YAXPAX@Z  +
pop ecx  +
retn   +
***
mov eax offset stru_43C820 +
jmp loc_432C34  +
***
mov eax [ebp+4] +
push eax  +
call ??3@YAXPAX@Z  +
pop ecx  +
retn   +
***
mov eax offset stru_43C860 +
jmp loc_432C34  +
***
mov eax [ebp-10h] +
mov eax [ebp-10h] +
lea ecx [ebp-14h] +
lea ecx [ebp-18h] +
mov eax [ebp+4] +
push eax  +
call ??3@YAXPAX@Z  +
pop ecx  +
retn   +
***
mov eax offset stru_43C888 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
add ecx 4 +
jmp HHA_38  +
***
mov eax offset stru_43C8D0 +
jmp loc_432C34  +
***
cmp dword ptr [ebp-10h] 0 +
jz loc_433B28  +
mov eax [ebp-10h] +
add eax 4 +
mov [ebp-14h] eax +
jmp loc_433B2F  +
mov dword ptr [ebp-14h] 0 +
mov ecx [ebp-14h] +
jmp HHA_38  +
***
mov eax offset stru_43C8F8 +
jmp loc_432C34  +
***
lea ecx [ebp+4] +
jmp loc_409A0A  +
***
mov eax offset stru_43C920 +
jmp loc_432C34  +
***
lea ecx [ebp-24h] +
lea ecx [ebp+8] +
lea ecx [ebp+4] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-30h] +
lea ecx [ebp-30h] +
lea ecx [ebp-30h] +
jmp loc_409A0A  +
***
mov eax offset stru_43C948 +
jmp loc_432C34  +
***
lea ecx [ebp-34h] +
lea ecx [ebp-5Ch] +
jmp loc_409A0A  +
***
mov eax offset stru_43C9A0 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 14h +
jmp HHA_297  +
***
pop ecx  +
retn   +
***
lea ecx [ebp-9Ch] +
lea ecx [ebp-9Ch] +
lea ecx [ebp-534h] +
lea ecx [ebp-534h] +
lea ecx [ebp-9Ch] +
lea ecx [ebp-44h] +
lea ecx [ebp-230h] +
lea ecx [ebp-324h] +
lea ecx [ebp-2A8h] +
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
lea ecx [ebp-3A0h] +
lea ecx [ebp-230h] +
lea ecx [ebp-230h] +
jmp sub_40CB20  +
***
mov eax offset stru_43CA28 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp HHA_297  +
***
mov eax offset stru_43CAB8 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp sub_40CB20  +
***
mov eax offset stru_43CAE0 +
jmp loc_432C34  +
***
lea ecx [ebp-0A4h] +
lea ecx [ebp-0A4h] +
lea ecx [ebp-4Ch] +
lea ecx [ebp-2B4h] +
lea ecx [ebp-120h] +
lea ecx [ebp-32Ch] +
lea ecx [ebp-14h] +
lea ecx [ebp+8] +
lea ecx [ebp-3A8h] +
lea ecx [ebp-2B4h] +
jmp sub_40CB20  +
***
mov eax offset stru_43CB08 +
jmp loc_432C34  +
***
lea ecx [ebp+8] +
jmp loc_409A0A  +
***
mov eax offset stru_43CB78 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43CBA0 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 148h +
jmp ??1CToolTipCtrl@@UAE@XZ  +
***
mov eax offset stru_43CBC8 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp sub_40ED06  +
***
mov eax offset stru_43CC00 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp sub_40ED06  +
***
mov eax offset stru_43CC28 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-8] +
jmp sub_40ED06  +
***
mov eax offset stru_43CC50 +
jmp loc_432C34  +
***
pop ecx  +
lea ecx [ebp-148h] +
jmp sub_416704  +
***
mov eax offset stru_43CC90 +
jmp loc_432C34  +
***
lea ecx [ebp-24h] +
jmp loc_409A0A  +
***
mov eax offset stru_43CCC0 +
jmp loc_432C34  +
***
lea ecx [ebp-28h] +
jmp loc_409A0A  +
***
mov eax offset stru_43CCE8 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
jmp loc_4114A7  +
***
mov eax offset stru_43CD10 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp loc_4114A7  +
***
mov eax offset stru_43CD40 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
pop ecx  +
pop ecx  +
pop ecx  +
pop ecx  +
retn   +
***
lea ecx [ebp-0CCh] +
lea ecx [ebp-18h] +
jmp sub_40AB3F  +
***
mov eax offset stru_43CDB8 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 48h +
jmp loc_409A0A  +
***
lea ecx [ebp+8] +
lea ecx [ebp+0Ch] +
jmp loc_409A0A  +
***
mov eax offset stru_43CE20 +
jmp loc_432C34  +
***
lea ecx [ebp-40h] +
lea ecx [ebp-2Ch] +
jmp loc_409A0A  +
***
mov eax offset stru_43CE50 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43CE80 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43CEB0 +
jmp loc_432C34  +
***
lea ecx [ebp+8] +
lea ecx [ebp-0D4h] +
lea ecx [ebp+8] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-14h] +
lea ecx [ebp-0D4h] +
jmp sub_411A70  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 4Ch +
jmp HHA_38  +
***
mov eax offset stru_43CF28 +
jmp loc_432C34  +
***
pop ecx  +
retn   +
***
lea ecx [ebp-160h] +
jmp loc_403181  +
***
mov eax offset stru_43CF90 +
jmp loc_432C34  +
***
lea ecx [ebp+8] +
lea ecx [ebp+8] +
jmp loc_409A0A  +
***
mov eax offset stru_43CFB8 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
jmp loc_409A0A  +
***
mov eax offset stru_43CFE8 +
jmp loc_432C34  +
***
lea ecx [ebp+8] +
jmp loc_409A0A  +
***
mov eax offset stru_43D010 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43D038 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 74h +
jmp loc_409A0A  +
***
mov eax offset stru_43D060 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 74h +
jmp loc_409A0A  +
***
mov eax offset stru_43D090 +
jmp loc_432C34  +
***
pop ecx  +
lea ecx [ebp-44h] +
lea ecx [ebp-0B8h] +
lea ecx [ebp-154h] +
lea ecx [ebp-214h] +
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
jmp loc_409A0A  +
***
mov eax offset stru_43D0C0 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 74h +
jmp loc_409A0A  +
***
lea ecx [ebp-14h] +
jmp loc_409A0A  +
***
mov eax offset stru_43D150 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-68h] +
lea ecx [ebp-1BCh] +
lea ecx [ebp+8] +
jmp loc_409A0A  +
***
mov eax offset stru_43D178 +
jmp loc_432C34  +
***
lea ecx [ebp-68h] +
jmp j_HHA_297  +
***
mov eax offset stru_43D1B8 +
jmp loc_432C34  +
***
lea ecx [ebp-38h] +
jmp HHA_85  +
***
mov eax offset stru_43D1E0 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 40h +
jmp loc_409A0A  +
***
mov eax offset stru_43D208 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 40h +
jmp loc_409A0A  +
***
mov eax offset stru_43D238 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43D268 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 74h +
jmp loc_409A0A  +
***
pop ecx  +
pop ecx  +
pop ecx  +
pop ecx  +
retn   +
***
mov eax offset stru_43D2D0 +
jmp loc_432C34  +
***
lea ecx [ebp-60h] +
lea ecx [ebp-60h] +
jmp HHA_297  +
***
mov eax offset stru_43D310 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp HHA_297  +
***
mov eax offset stru_43D340 +
jmp loc_432C34  +
***
lea ecx [ebp-64h] +
pop ecx  +
pop ecx  +
pop ecx  +
pop ecx  +
lea ecx [ebp-64h] +
jmp HHA_297  +
***
mov eax offset stru_43D368 +
jmp loc_432C34  +
***
lea ecx [ebp-1Ch] +
lea ecx [ebp-18h] +
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43D3B8 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
pop ecx  +
pop ecx  +
pop ecx  +
pop ecx  +
retn   +
***
mov eax offset stru_43D3F8 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
sub ecx 40h +
mov eax [ebp-10h] +
neg ecx  +
sbb ecx ecx +
and ecx eax +
jmp sub_40CB20  +
***
mov eax offset stru_43D450 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-20h] +
jmp loc_409A0A  +
***
mov eax offset stru_43D480 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
pop ecx  +
pop ecx  +
pop ecx  +
pop ecx  +
retn   +
***
mov eax offset stru_43D4B0 +
jmp loc_432C34  +
***
lea ecx [ebp-68h] +
lea ecx [ebp-68h] +
lea ecx [ebp-68h] +
lea ecx [ebp+8] +
lea ecx [ebp-68h] +
jmp HHA_297  +
***
mov eax offset stru_43D500 +
jmp loc_432C34  +
***
lea ecx [ebp-58h] +
pop ecx  +
pop ecx  +
retn   +
***
mov eax offset stru_43D548 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 40h +
jmp loc_409A0A  +
***
mov eax offset stru_43D580 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43D5B0 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-14h] +
mov ecx [ebp-10h] +
add ecx 54h +
jmp loc_41751E  +
***
mov eax offset stru_43D5D8 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43D610 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-4] +
jmp loc_409A0A  +
***
mov eax offset stru_43D638 +
jmp loc_432C34  +
***
pop ecx  +
lea ecx [ebp-40h] +
lea ecx [ebp-0B4h] +
lea ecx [ebp-174h] +
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
jmp loc_409A0A  +
***
mov eax offset stru_43D670 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43D6C0 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-68h] +
jmp sub_414EC0  +
***
mov eax offset stru_43D6E8 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43D718 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 80h +
jmp loc_417FA2  +
***
mov ecx [ebp-10h] +
jmp sub_40ED06  +
***
mov eax offset stru_43D770 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp sub_40ED06  +
***
mov eax offset stru_43D798 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-8] +
jmp sub_40ED06  +
***
lea ecx [ebp-34h] +
jmp loc_409A0A  +
***
mov eax offset stru_43D7F8 +
jmp loc_432C34  +
***
lea ecx [ebp-2Ch] +
jmp loc_409A0A  +
***
mov eax offset stru_43D820 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-14h] +
jmp loc_4114A7  +
***
mov eax offset stru_43D848 +
jmp loc_432C34  +
***
lea ecx [ebp-24h] +
lea ecx [ebp-7Ch] +
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
jmp loc_409A0A  +
***
mov eax offset stru_43D878 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
pop ecx  +
pop ecx  +
pop ecx  +
retn   +
***
mov eax offset stru_43D8B8 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 0F8h +
jmp loc_409A0A  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-10h] +
pop ecx  +
retn   +
***
lea ecx [ebp-1Ch] +
lea ecx [ebp-14h] +
jmp loc_409A0A  +
***
mov eax offset stru_43D968 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
lea ecx [ebp+8] +
lea ecx [ebp+8] +
jmp loc_409A0A  +
***
mov eax offset stru_43D998 +
jmp loc_432C34  +
***
lea ecx [ebp-28h] +
lea ecx [ebp-10h] +
lea ecx [ebp-20h] +
jmp loc_409A0A  +
***
mov eax offset stru_43D9D0 +
jmp loc_432C34  +
***
lea ecx [ebp-20h] +
jmp loc_409A0A  +
***
mov eax offset stru_43DA08 +
jmp loc_432C34  +
***
lea ecx [ebp-34h] +
lea ecx [ebp+8] +
lea ecx [ebp-10h] +
lea ecx [ebp-1Ch] +
jmp loc_409A0A  +
***
mov eax offset stru_43DA30 +
jmp loc_432C34  +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
lea ecx [ebp-10h] +
lea ecx [ebp-10h] +
pop ecx  +
retn   +
***
mov eax offset stru_43DB60 +
jmp loc_432C34  +
***
pop ecx  +
retn   +
***
lea ecx [ebp+8] +
pop ecx  +
retn   +
***
lea ecx [ebp-1Ch] +
lea ecx [ebp-18h] +
pop ecx  +
pop ecx  +
pop ecx  +
retn   +
***
pop ecx  +
lea ecx [ebp-10h] +
lea ecx [ebp-10h] +
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
lea ecx [ebp-1Ch] +
pop ecx  +
retn   +
***
pop ecx  +
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
lea ecx [ebp-14h] +
jmp loc_409A0A  +
***
mov eax offset stru_43DCE0 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43DD08 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43DD30 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp ??1CDialogBar@@UAE@XZ  +
***
mov eax offset stru_43DD58 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp HHA_297  +
***
mov eax offset stru_43DD80 +
jmp loc_432C34  +
***
mov ecx [ebp-18h] +
mov ecx [ebp-8] +
jmp sub_40ED06  +
***
mov eax offset stru_43DDA8 +
jmp loc_432C34  +
***
mov ecx [ebp-18h] +
mov ecx [ebp-8] +
jmp sub_40ED06  +
***
mov eax offset stru_43DDD8 +
jmp loc_432C34  +
***
pop ecx  +
lea ecx [ebp-164h] +
jmp loc_403181  +
***
mov eax offset stru_43DE08 +
jmp loc_432C34  +
***
pop ecx  +
pop ecx  +
pop ecx  +
pop ecx  +
pop ecx  +
pop ecx  +
pop ecx  +
retn   +
***
pop ecx  +
pop ecx  +
retn   +
***
mov eax offset stru_43DE90 +
jmp loc_432C34  +
***
lea ecx [ebp-0C0h] +
lea ecx [ebp-14h] +
jmp loc_404658  +
***
mov eax offset stru_43DEC0 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43DEF0 +
jmp loc_432C34  +
***
lea ecx [ebp-1DCh] +
lea ecx [ebp-38h] +
lea ecx [ebp-26Ch] +
lea ecx [ebp-308h] +
lea ecx [ebp-128h] +
lea ecx [ebp-0ACh] +
lea ecx [ebp+8] +
lea ecx [ebp-128h] +
jmp sub_4068C0  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 78h +
jmp loc_409A0A  +
***
mov eax offset stru_43DF78 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 80h +
jmp loc_409A0A  +
***
mov eax offset stru_43DFA8 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 88h +
jmp loc_409A0A  +
***
mov eax offset stru_43DFE8 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp sub_4068C0  +
***
mov eax offset stru_43E040 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
pop ecx  +
lea ecx [ebp-7Ch] +
jmp sub_430F6D  +
***
lea ecx [ebp-2Ch] +
lea ecx [ebp-60h] +
lea ecx [ebp-3A8h] +
lea ecx [ebp-2B8h] +
lea ecx [ebp-1C8h] +
lea ecx [ebp-150h] +
lea ecx [ebp-240h] +
lea ecx [ebp-330h] +
lea ecx [ebp-0D8h] +
pop ecx  +
lea ecx [ebp+8] +
jmp loc_409A0A  +
***
mov eax offset stru_43E0A0 +
jmp loc_432C34  +
***
pop ecx  +
lea ecx [ebp-118h] +
lea ecx [ebp-118h] +
pop ecx  +
lea ecx [ebp-118h] +
jmp HHA_297  +
***
mov eax offset stru_43E118 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp HHA_297  +
***
mov eax offset stru_43E160 +
jmp loc_432C34  +
***
lea ecx [ebp-118h] +
lea ecx [ebp-118h] +
lea ecx [ebp-118h] +
jmp HHA_297  +
***
mov eax offset stru_43E188 +
jmp loc_432C34  +
***
lea ecx [ebp-5Ch] +
jmp j_HHA_297  +
***
mov eax offset stru_43E1C0 +
jmp loc_432C34  +
***
lea ecx [ebp+8] +
jmp loc_409A0A  +
***
mov eax offset stru_43E1E8 +
jmp loc_432C34  +
***
lea ecx [ebp-18h] +
jmp loc_409A0A  +
***
mov eax offset stru_43E210 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
jmp loc_409A0A  +
***
mov eax offset stru_43E238 +
jmp loc_432C34  +
***
lea ecx [ebp-38h] +
lea ecx [ebp-128h] +
lea ecx [ebp-0B0h] +
lea ecx [ebp-1A0h] +
lea ecx [ebp-290h] +
lea ecx [ebp-218h] +
jmp loc_41F02F  +
***
mov eax offset stru_43E268 +
jmp loc_432C34  +
***
lea ecx [ebp+8] +
jmp loc_409A0A  +
***
mov eax offset stru_43E2B8 +
jmp loc_432C34  +
***
lea ecx [ebp+8] +
jmp loc_409A0A  +
***
mov eax offset stru_43E2E0 +
jmp loc_432C34  +
***
lea ecx [ebp-3Ch] +
lea ecx [ebp-2A0h] +
lea ecx [ebp-1D4h] +
lea ecx [ebp-108h] +
pop ecx  +
pop ecx  +
pop ecx  +
lea ecx [ebp-108h] +
lea ecx [ebp-1D4h] +
lea ecx [ebp-2A0h] +
jmp sub_4068C0  +
***
mov eax offset stru_43E308 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp sub_4068C0  +
***
mov eax offset stru_43E378 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp sub_4068C0  +
***
mov eax offset stru_43E3A0 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp sub_4068C0  +
***
mov eax offset stru_43E3C8 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 70h +
jmp HHA_38  +
***
mov eax offset stru_43E3F0 +
jmp loc_432C34  +
***
lea ecx [ebp-68h] +
lea ecx [ebp+8] +
lea ecx [ebp-68h] +
lea ecx [ebp-64h] +
lea ecx [ebp+8] +
lea ecx [ebp-68h] +
lea ecx [ebp-68h] +
lea ecx [ebp-64h] +
jmp sub_42277A  +
***
mov eax offset stru_43E420 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 4Ch +
jmp loc_409A0A  +
***
mov eax offset stru_43E480 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 70h +
jmp HHA_38  +
***
mov eax offset stru_43E4C0 +
jmp loc_432C34  +
***
lea ecx [ebp-68h] +
lea ecx [ebp+8] +
lea ecx [ebp-68h] +
jmp HHA_297  +
***
mov eax offset stru_43E4F0 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
lea ecx [ebp+10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43E528 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 70h +
jmp HHA_38  +
***
mov eax offset stru_43E578 +
jmp loc_432C34  +
***
lea ecx [ebp-68h] +
lea ecx [ebp-68h] +
lea ecx [ebp-68h] +
lea ecx [ebp-68h] +
jmp HHA_297  +
***
mov eax offset stru_43E5A8 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 40h +
jmp loc_4105AE  +
***
mov eax offset stru_43E5E8 +
jmp loc_432C34  +
***
retn   +
***
lea ecx [ebp-4] +
lea ecx [ebp-58h] +
lea ecx [ebp-1ACh] +
lea ecx [ebp-10h] +
lea ecx [ebp-3ACh] +
jmp loc_423696  +
***
mov eax offset stru_43E618 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43E668 +
jmp loc_432C34  +
***
lea ecx [ebp+10h] +
lea ecx [ebp-160h] +
jmp loc_403181  +
***
mov eax offset stru_43E690 +
jmp loc_432C34  +
***
lea ecx [ebp-24h] +
jmp sub_40AB3F  +
***
mov eax offset stru_43E6C0 +
jmp loc_432C34  +
***
lea ecx [ebp-24h] +
jmp sub_40AB3F  +
***
mov eax offset stru_43E6E8 +
jmp loc_432C34  +
***
lea ecx [ebp-18h] +
jmp loc_409A0A  +
***
mov eax offset stru_43E710 +
jmp loc_432C34  +
***
pop ecx  +
retn   +
***
pop ecx  +
pop ecx  +
pop ecx  +
retn   +
***
lea ecx [ebp-28h] +
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43E798 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 40h +
jmp loc_417FA2  +
***
mov eax offset stru_43E7C8 +
jmp loc_432C34  +
***
retn   +
***
lea ecx [ebp-4] +
lea ecx [ebp-58h] +
lea ecx [ebp-1ACh] +
lea ecx [ebp-10h] +
lea ecx [ebp-3ACh] +
jmp loc_423696  +
***
mov eax offset stru_43E7F8 +
jmp loc_432C34  +
***
lea ecx [ebp-58h] +
jmp j_HHA_297  +
***
mov eax offset stru_43E848 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43E870 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 84h +
jmp loc_409A0A  +
***
lea ecx [ebp-11Ch] +
jmp loc_409A0A  +
***
mov eax offset stru_43E8E0 +
jmp loc_432C34  +
***
lea ecx [ebp-5Ch] +
lea ecx [ebp-14h] +
lea ecx [ebp-6Ch] +
lea ecx [ebp-14h] +
lea ecx [ebp-60h] +
lea ecx [ebp-10h] +
lea ecx [ebp-60h] +
jmp sub_426721  +
***
mov eax offset stru_43E908 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 40h +
jmp loc_409A0A  +
***
mov eax offset stru_43E960 +
jmp loc_432C34  +
***
lea ecx [ebp-54h] +
jmp j_HHA_297  +
***
mov eax offset stru_43E990 +
jmp loc_432C34  +
***
pop ecx  +
retn   +
***
lea ecx [ebp-54h] +
lea ecx [ebp-54h] +
jmp HHA_297  +
***
mov eax offset stru_43E9E0 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp HHA_297  +
***
mov eax offset stru_43EA10 +
jmp loc_432C34  +
***
lea ecx [ebp-160h] +
jmp loc_403181  +
***
mov eax offset stru_43EA38 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 8Ch +
jmp loc_409A0A  +
***
mov eax offset stru_43EA60 +
jmp loc_432C34  +
***
lea ecx [ebp-160h] +
jmp loc_403181  +
***
mov eax offset stru_43EAC0 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
jmp loc_409A0A  +
***
mov eax offset stru_43EAE8 +
jmp loc_432C34  +
***
lea ecx [ebp-7Ch] +
lea ecx [ebp-7Ch] +
lea ecx [ebp-28h] +
pop ecx  +
lea ecx [ebp-10h] +
lea ecx [ebp-7Ch] +
jmp HHA_297  +
***
mov ecx [ebp-14h] +
jmp HHA_297  +
***
mov eax offset stru_43EB60 +
jmp loc_432C34  +
***
pop ecx  +
pop ecx  +
retn   +
***
mov eax offset stru_43EB88 +
jmp loc_432C34  +
***
pop ecx  +
retn   +
***
lea ecx [ebp-160h] +
jmp loc_403181  +
***
mov eax offset stru_43EBE0 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
mov ecx [ebp-14h] +
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43EC08 +
jmp loc_432C34  +
***
lea ecx [ebp+10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43EC40 +
jmp loc_432C34  +
***
lea ecx [ebp-5Ch] +
jmp sub_428AE3  +
***
mov eax offset stru_43EC68 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 40h +
jmp loc_409A0A  +
***
mov eax offset stru_43EC90 +
jmp loc_432C34  +
***
lea ecx [ebp-64h] +
lea ecx [ebp-0BCh] +
lea ecx [ebp-0BCh] +
jmp HHA_297  +
***
lea ecx [ebp-64h] +
lea ecx [ebp-64h] +
jmp HHA_297  +
***
mov eax offset stru_43ECF8 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 44h +
jmp loc_409A0A  +
***
mov eax offset stru_43ED28 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43ED58 +
jmp loc_432C34  +
***
lea ecx [ebp-160h] +
jmp loc_403181  +
***
mov eax offset stru_43ED88 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp HHA_297  +
***
mov eax offset stru_43EDB0 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 40h +
jmp HHA_38  +
***
mov eax offset stru_43EDD8 +
jmp loc_432C34  +
***
pop ecx  +
retn   +
***
lea ecx [ebp-278h] +
lea ecx [ebp-20h] +
lea ecx [ebp-14h] +
jmp loc_409A0A  +
***
mov eax offset stru_43EE30 +
jmp loc_432C34  +
***
lea ecx [ebp-64h] +
lea ecx [ebp-64h] +
jmp HHA_297  +
***
mov eax offset stru_43EE68 +
jmp loc_432C34  +
***
pop ecx  +
pop ecx  +
lea ecx [ebp-5Ch] +
jmp j_HHA_297  +
***
mov eax offset stru_43EE98 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43EED0 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43EEF8 +
jmp loc_432C34  +
***
lea ecx [ebp+8] +
jmp loc_409A0A  +
***
mov eax offset stru_43EF20 +
jmp loc_432C34  +
***
lea ecx [ebp+18h] +
lea ecx [ebp+18h] +
jmp loc_409A0A  +
***
mov eax offset stru_43EF48 +
jmp loc_432C34  +
***
pop ecx  +
retn   +
***
retn   +
***
mov eax offset stru_43EFA0 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
jmp ??1CString@@QAE@XZ  +
***
mov eax offset stru_43EFC8 +
jmp loc_432C34  +
***
pop ecx  +
pop ecx  +
pop ecx  +
pop ecx  +
pop ecx  +
pop ecx  +
retn   +
***
mov eax offset stru_43EFF0 +
jmp loc_432C34  +
***
pop ecx  +
retn   +
***
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
mov eax offset stru_43F068 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43F090 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43F0B8 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43F0E0 +
jmp loc_432C34  +
***
retn   +
***
mov eax offset stru_43F108 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp sub_405345  +
***
mov eax offset stru_43F130 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
jmp sub_405345  +
***
mov eax offset stru_43F158 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
jmp ??1CString@@QAE@XZ  +
***
mov eax offset stru_43F180 +
jmp loc_432C34  +
***
lea ecx [ebp-1A0h] +
jmp loc_405840  +
***
mov eax offset stru_43F1B0 +
jmp loc_432C34  +
***
lea ecx [ebp-3Ch] +
lea ecx [ebp-198h] +
lea ecx [ebp-124h] +
lea ecx [ebp-0B0h] +
jmp loc_41F02F  +
***
mov eax offset stru_43F1D8 +
jmp loc_432C34  +
***
lea ecx [ebp-0B4h] +
lea ecx [ebp-0E0h] +
lea ecx [ebp-2A8h] +
lea ecx [ebp-390h] +
lea ecx [ebp-478h] +
lea ecx [ebp-560h] +
lea ecx [ebp-5D4h] +
lea ecx [ebp-4ECh] +
lea ecx [ebp-404h] +
lea ecx [ebp-31Ch] +
lea ecx [ebp+8] +
lea ecx [ebp+10h] +
lea ecx [ebp-128h] +
lea ecx [ebp-38h] +
lea ecx [ebp-12Ch] +
lea ecx [ebp-2Ch] +
jmp HHA_64  +
***
mov eax offset stru_43F218 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 1Ch +
jmp loc_409A0A  +
***
mov eax offset stru_43F2B8 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 1Ch +
jmp loc_409A0A  +
***
mov eax offset stru_43F2F8 +
jmp loc_432C34  +
***
lea ecx [ebp-160h] +
jmp loc_403181  +
***
mov eax offset stru_43F338 +
jmp loc_432C34  +
***
lea ecx [ebp-160h] +
jmp loc_403181  +
***
mov eax offset stru_43F360 +
jmp loc_432C34  +
***
lea ecx [ebp-160h] +
jmp loc_403181  +
***
mov eax offset stru_43F388 +
jmp loc_432C34  +
***
lea ecx [ebp-160h] +
jmp loc_403181  +
***
mov eax offset stru_43F3B0 +
jmp loc_432C34  +
***
lea ecx [ebp-160h] +
jmp loc_403181  +
***
mov eax offset stru_43F3D8 +
jmp loc_432C34  +
***
lea ecx [ebp-17Ch] +
lea ecx [ebp-28h] +
lea ecx [ebp-18h] +
lea ecx [ebp-14h] +
lea ecx [ebp-1Ch] +
jmp loc_409A0A  +
***
mov eax offset stru_43F400 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43F448 +
jmp loc_432C34  +
***
lea ecx [ebp+8] +
jmp loc_404658  +
***
mov eax offset stru_43F470 +
jmp loc_432C34  +
***
lea ecx [ebp-88h] +
lea ecx [ebp-88h] +
jmp HHA_297  +
***
mov ecx [ebp-14h] +
jmp HHA_297  +
***
mov eax offset stru_43F4C8 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 40h +
jmp loc_409A0A  +
***
mov eax offset stru_43F4F0 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-78h] +
jmp sub_414EC0  +
***
mov eax offset stru_43F520 +
jmp loc_432C34  +
***
lea ecx [ebp-38h] +
jmp HHA_85  +
***
mov eax offset stru_43F550 +
jmp loc_432C34  +
***
lea ecx [ebp-1ACh] +
lea ecx [ebp-58h] +
pop ecx  +
lea ecx [ebp-4DCh] +
jmp sub_42DAD8  +
***
mov eax offset stru_43F578 +
jmp loc_432C34  +
***
pop ecx  +
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
lea ecx [ebp-14h] +
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43F5E8 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
lea ecx [ebp+0Ch] +
lea ecx [ebp+0Ch] +
lea ecx [ebp-10h] +
lea ecx [ebp-18h] +
lea ecx [ebp-24h] +
jmp loc_409A0A  +
***
mov eax offset stru_43F618 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43F668 +
jmp loc_432C34  +
***
lea ecx [ebp+8] +
lea ecx [ebp+8] +
lea ecx [ebp-14h] +
lea ecx [ebp+8] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43F690 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43F6E0 +
jmp loc_432C34  +
***
lea ecx [ebp+8] +
jmp loc_409A0A  +
***
mov eax offset stru_43F708 +
jmp loc_432C34  +
***
lea ecx [ebp-78h] +
lea ecx [ebp-78h] +
lea ecx [ebp-28h] +
lea ecx [ebp-10h] +
lea ecx [ebp-2E4h] +
lea ecx [ebp-2E4h] +
lea ecx [ebp-78h] +
jmp HHA_297  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 4Ch +
jmp loc_409A0A  +
***
mov eax offset stru_43F788 +
jmp loc_432C34  +
***
lea ecx [ebp-68h] +
lea ecx [ebp-44h] +
lea ecx [ebp-1Ch] +
lea ecx [ebp-34h] +
lea ecx [ebp-28h] +
lea ecx [ebp-3Ch] +
lea ecx [ebp-24h] +
lea ecx [ebp-4Ch] +
lea ecx [ebp-18h] +
lea ecx [ebp-5Ch] +
lea ecx [ebp-20h] +
lea ecx [ebp-54h] +
lea ecx [ebp-14h] +
jmp loc_409A0A  +
***
mov eax offset stru_43F7B8 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp HHA_297  +
***
mov eax offset stru_43F840 +
jmp loc_432C34  +
***
lea ecx [ebp+8] +
jmp ??1CString@@QAE@XZ  +
***
mov eax offset stru_43F868 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
retn   +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43F890 +
jmp loc_432C34  +
***
lea ecx [ebp-160h] +
jmp loc_403181  +
***
mov eax offset stru_43F8C8 +
jmp loc_432C34  +
***
lea ecx [ebp-58h] +
lea ecx [ebp-304h] +
lea ecx [ebp-98h] +
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 40h +
jmp loc_409A0A  +
***
mov eax offset stru_43F930 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-18h] +
jmp loc_409A0A  +
***
mov eax offset stru_43F960 +
jmp loc_432C34  +
***
lea ecx [ebp-54h] +
lea ecx [ebp-10h] +
lea ecx [ebp-54h] +
jmp HHA_297  +
***
mov eax offset stru_43F998 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 40h +
jmp loc_409A0A  +
***
mov eax offset stru_43F9D0 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp HHA_297  +
***
mov eax offset stru_43FA00 +
jmp loc_432C34  +
***
pop ecx  +
retn   +
***
lea ecx [ebp-160h] +
jmp loc_403181  +
***
mov eax offset stru_43FA50 +
jmp loc_432C34  +
***
pop ecx  +
retn   +
***
lea ecx [ebp-160h] +
jmp loc_403181  +
***
mov eax offset stru_43FAA0 +
jmp loc_432C34  +
***
lea ecx [ebp-4Ch] +
jmp j_HHA_297  +
***
mov eax offset stru_43FAC8 +
jmp loc_432C34  +
***
pop ecx  +
retn   +
***
lea ecx [ebp-1ECh] +
lea ecx [ebp+8] +
lea ecx [ebp-20h] +
lea ecx [ebp-14h] +
lea ecx [ebp-18h] +
lea ecx [ebp-24h] +
lea ecx [ebp-2Ch] +
lea ecx [ebp-74h] +
lea ecx [ebp-74h] +
lea ecx [ebp-78h] +
lea ecx [ebp-78h] +
lea ecx [ebp-74h] +
lea ecx [ebp-74h] +
lea ecx [ebp+8] +
lea ecx [ebp-78h] +
lea ecx [ebp-78h] +
jmp HHA_297  +
***
mov eax offset stru_43FB18 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
mov ecx [ebp-10h] +
add ecx 40h +
jmp loc_409A0A  +
***
mov eax offset stru_43FBB8 +
jmp loc_432C34  +
***
mov ecx [ebp-14h] +
jmp HHA_297  +
***
mov eax offset stru_43FBE8 +
jmp loc_432C34  +
***
mov ecx [ebp-10h] +
pop ecx  +
retn   +
***
mov ecx [ebp-10h] +
jmp HHA_297  +
***
mov eax offset stru_43FC40 +
jmp loc_432C34  +
***
lea ecx [ebp-24h] +
lea ecx [ebp-20h] +
lea ecx [ebp-24h] +
jmp loc_409A0A  +
***
mov eax offset stru_43FC68 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
lea ecx [ebp-14h] +
lea ecx [ebp-18h] +
lea ecx [ebp-60h] +
jmp j_HHA_297  +
***
mov eax offset stru_43FCA0 +
jmp loc_432C34  +
***
lea ecx [ebp-10h] +
jmp loc_409A0A  +
***
mov eax offset stru_43FCE0 +
jmp loc_432C34  +
***
lea ecx [ebp+8] +
jmp loc_409A0A  +
***
mov eax offset stru_43FD08 +
jmp loc_432C34  +
***
lea ecx [ebp-14h] +
jmp loc_409A0A  +
***
mov eax offset stru_43FD30 +
jmp loc_432C34  +
***
lea ecx [ebp+8] +
jmp loc_409A0A  +
***
mov eax offset stru_43FD58 +
jmp loc_432C34  +
***
