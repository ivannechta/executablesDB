retf   +
***
retn 0  +
***
retn   +
***
retf 0  +
***
mov edi edi +
push ebx  +
mov ebx ds:CreateEventW +
push edi  +
xor edi edi +
mov dword ptr [esi] offset off_4054E0 +
mov [esi+18h] edi +
mov [esi+20h] edi +
mov eax 825h +
mov [esi+1Ch] eax +
mov [esi+2Ch] eax +
mov [esi+28h] edi +
mov [esi+30h] edi +
push edi  +
xor eax eax +
inc eax  +
push edi  +
push eax  +
push edi  +
mov [esi+44h] edi +
mov [esi+4] edi +
mov [esi+8] edi +
mov [esi+34h] edi +
mov [esi+38h] edi +
mov [esi+3Ch] edi +
mov [esi+24h] edi +
mov [esi+40h] edi +
mov [esi+48h] eax +
call ebx  +
push edi  +
push edi  +
push 1  +
push edi  +
mov [esi+0Ch] eax +
call ebx  +
mov [esi+10h] eax +
mov eax dword_41FAB0 +
push dword ptr [eax+90h]  +
call ds:ResetEvent  +
mov [esi+14h] edi +
pop edi  +
mov eax esi +
pop ebx  +
retn   +
***
mov eax [edi+0Ch] +
push ebx  +
xor ebx ebx +
push esi  +
mov esi ds:CloseHandle +
mov dword ptr [edi] offset off_4054E0 +
cmp eax ebx +
jz loc_406DFA  +
push eax  +
call esi  +
mov [edi+0Ch] ebx +
mov eax [edi+10h] +
cmp eax ebx +
jz loc_406E07  +
push eax  +
call esi  +
mov [edi+10h] ebx +
mov eax [edi+4] +
cmp eax ebx +
jz loc_406E17  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [edi+4] ebx +
mov eax [edi+8] +
cmp eax ebx +
jz loc_406E27  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [edi+8] ebx +
mov eax [edi+40h] +
cmp eax ebx +
jz loc_406E37  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [edi+40h] ebx +
lea esi [edi+28h] +
call sub_40E92D  +
lea esi [edi+18h] +
call sub_40E92D  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+10h] +
and dword ptr [edx] 0 +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_402620 +
xor ebx ebx +
cmps   +
mov eax 80004002h +
jz loc_406E84  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_402650 +
xor ebx ebx +
cmps   +
jnz loc_406E95  +
mov ecx [ebp+8] +
mov [edx] ecx +
test ecx ecx +
jz loc_406E95  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
inc dword ptr [eax+44h]  +
mov eax [eax+44h] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+8] +
dec dword ptr [edi+44h]  +
mov eax [edi+44h] +
jnz loc_406ED7  +
call sub_406DDD  +
push edi  +
call sub_40FFB3  +
pop ecx  +
xor eax eax +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
push esi  +
xor esi esi +
test eax eax +
jnz loc_406EFC  +
call sub_40EF13  +
mov esi 80070057h +
jmp loc_406F08  +
mov ecx [ebp+8] +
mov [ecx+40h] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
mov eax esi +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov eax 80004001h +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push 5  +
call sub_407287  +
mov esi [ebp+18h] +
test eax eax +
jz loc_406F41  +
push dword ptr [ebp+14h]  +
mov ecx esi +
call sub_40ECA1  +
mov eax [ebp+14h] +
sub eax 4 +
jz loc_406F89  +
sub eax 9 +
jz loc_406F66  +
dec eax  +
jnz loc_406F92  +
mov ebx [ebp+8] +
push esi  +
lea edi [ebx+18h] +
call sub_40E868  +
mov ecx esi +
call sub_40720B  +
jmp loc_406F92  +
mov ebx [ebp+8] +
push esi  +
lea edi [ebx+28h] +
call sub_40E868  +
call sub_40CC56  +
mov [ebx+24h] eax +
test eax eax +
jz loc_406F92  +
push dword ptr [ebx+0Ch]  +
call ds:SetEvent  +
jmp loc_406F92  +
mov eax [ebp+8] +
mov ecx [ebp+10h] +
mov [eax+34h] ecx +
pop edi  +
pop esi  +
xor eax eax +
pop ebx  +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebp+8] +
push edi  +
push 5  +
mov [esi+48h] ebx +
call sub_407287  +
test eax eax +
jz loc_406FC6  +
push ebx  +
push 36h  +
push 5  +
call sub_40EBD4  +
cmp dword ptr [esi+24h] 1 +
jnz loc_406FD4  +
push ebx  +
mov eax esi +
call sub_4071CE  +
mov eax [esi+40h] +
test eax eax +
jz loc_406FE5  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [esi+40h] 0 +
push dword ptr [esi+0Ch]  +
mov edi ds:SetEvent +
call edi  +
push dword ptr [esi+10h]  +
call edi  +
mov eax dword_41FAB0 +
push dword ptr [eax+90h]  +
call sub_40E6B8  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+0Ch] +
xor eax eax +
cmp edx eax +
jz loc_407028  +
mov ecx [ebp+10h] +
cmp ecx eax +
jnz loc_407034  +
call sub_40EF13  +
mov eax 80070057h +
jmp loc_40705F  +
mov dword ptr [edx] 3 +
push 0Ch  +
mov dword ptr [ecx] 54h +
mov [ecx+4] eax +
mov [ecx+14h] eax +
mov dword ptr [ecx+24h] 20000h +
mov [ecx+18h] eax +
mov [ecx+1Ch] eax +
pop edx  +
add ecx 8 +
mov [ecx] al +
inc ecx  +
dec edx  +
jnz loc_407059  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1010h +
call sub_419880  +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
xor ebx ebx +
push esi  +
mov esi [ebp+8] +
mov [ebp-1008h] ebx +
cmp [ebp+14h] ebx +
jz loc_40709A  +
mov eax [ebp+18h] +
cmp eax ebx +
jnz loc_4070AE  +
call sub_40EF13  +
mov dword ptr [ebp-1008h] 80070057h +
jmp loc_407194  +
cmp dword ptr [esi+24h] 1 +
jnz loc_407194  +
test byte ptr [ebp+0Ch] 1 +
jz loc_4070D3  +
cmp dword ptr [eax] 4 +
jnz loc_4070D3  +
mov eax [eax+4] +
cmp eax ebx +
jz loc_4070D3  +
mov [esi+4] eax +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
cmp [esi+4] ebx +
jz loc_40717B  +
mov eax [esi+34h] +
cmp eax [esi+38h] +
jbe loc_40717B  +
push edi  +
mov edi 8000000Ah +
mov eax [esi+4] +
lea edx [ebp-100Ch] +
push edx  +
push 1000h  +
lea edx [ebp-1004h] +
push edx  +
mov [ebp-1010h] ebx +
mov [ebp-100Ch] ebx +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
cmp eax ebx +
mov [ebp-1008h] eax +
jge loc_407124  +
cmp eax edi +
jnz loc_40717A  +
mov ecx [ebp-100Ch] +
cmp ecx ebx +
jbe loc_40714B  +
add [esi+38h] ecx +
mov eax [esi+8] +
mov edx [eax] +
lea ebx [ebp-1010h] +
push ebx  +
push ecx  +
lea ecx [ebp-1004h] +
push ecx  +
push eax  +
call dword ptr [edx+0Ch]  +
xor ebx ebx +
mov eax [esi+34h] +
cmp eax [esi+38h] +
jnz loc_40715F  +
push 80004005h  +
mov eax esi +
call sub_4071CE  +
cmp dword ptr [ebp-1008h] 1 +
jz loc_407174  +
cmp [ebp-1008h] edi +
jnz loc_4070EE  +
mov [ebp-1008h] ebx +
pop edi  +
test byte ptr [ebp+0Ch] 4 +
jz loc_407194  +
mov eax [esi+4] +
cmp eax ebx +
jz loc_407191  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [esi+4] ebx +
mov [esi+4] ebx +
mov ecx [ebp-4] +
mov eax [ebp-1008h] +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+10h] eax +
jnz loc_4071C5  +
call sub_40EF13  +
mov eax 80070057h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [eax+3Ch] 0 +
jnz loc_4071F2  +
xor edx edx +
cmp [ebp+arg_0] edx +
mov dword ptr [eax+3Ch] 1 +
mov eax [eax+8] +
mov ecx [eax] +
setnl dl  +
push edx  +
push eax  +
call dword ptr [ecx+18h]  +
mov eax dword_41FAB0 +
push dword ptr [eax+90h]  +
call sub_40E6B8  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
xor eax eax +
cmp [ebx+24h] eax +
jnz loc_407276  +
lea edx [ebp+pclsid] +
push edx  +
push eax  +
push eax  +
push eax  +
push eax  +
push ecx  +
push eax  +
call GetClassFileOrMime  +
test eax eax +
jl loc_40726D  +
push esi  +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_40550C +
lea esi [ebp+pclsid] +
xor eax eax +
cmps   +
jnz loc_407253  +
mov dword ptr [ebx+24h] 2 +
jmp loc_40726B  +
push 4  +
pop ecx  +
mov edi offset dword_40551C +
lea esi [ebp+pclsid] +
xor eax eax +
cmps   +
jnz loc_40726B  +
mov dword ptr [ebx+24h] 3 +
pop edi  +
pop esi  +
push dword ptr [ebx+0Ch]  +
call ds:SetEvent  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_41FA18 +
or eax dword_41FA1C +
jz loc_4072A9  +
mov al [ebp+arg_0] +
cmp al byte_41EEF8 +
ja loc_4072A9  +
xor eax eax +
inc eax  +
jmp loc_4072AB  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
push edi  +
push 0Ch  +
call sub_40FC22  +
pop ecx  +
mov edi offset off_40552C +
test eax eax +
jz loc_4072D8  +
and dword ptr [eax+8] 0 +
mov [eax] edi +
mov dword ptr [eax+4] offset dword_40551C +
jmp loc_4072DA  +
xor eax eax +
test eax eax +
jnz loc_4072EA  +
call sub_40EF13  +
mov esi 8007000Eh +
jmp loc_407334  +
mov esi offset dword_41FAA4 +
call sub_40736F  +
mov esi eax +
test esi esi +
jl loc_40732B  +
push 0Ch  +
call sub_40FC22  +
pop ecx  +
test eax eax +
jz loc_407315  +
and dword ptr [eax+8] 0 +
mov [eax] edi +
mov dword ptr [eax+4] offset dword_40550C +
jmp loc_407317  +
xor eax eax +
test eax eax +
jz loc_4072DE  +
mov esi offset unk_41FAA8 +
call sub_40736F  +
mov esi eax +
test esi esi +
jge loc_407332  +
call sub_40EF13  +
test esi esi +
jz loc_407339  +
call sub_407343  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
xor edi edi +
lea esi dword_41FAA4[edi] +
mov eax [esi] +
test eax eax +
jz loc_40735F  +
push eax  +
call ds:CoRevokeClassObject  +
and dword ptr [esi] 0 +
add edi 4 +
cmp edi 8 +
jb loc_407349  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push edi  +
push esi  +
push 0  +
push 4  +
push eax  +
push dword ptr [eax+4]  +
call ds:CoRegisterClassObject  +
mov edi eax +
test edi edi +
jge loc_40738E  +
call sub_40EF13  +
test edi edi +
jz loc_4073A0  +
mov eax [esi] +
test eax eax +
jz loc_4073A0  +
push eax  +
call ds:CoRevokeClassObject  +
and dword ptr [esi] 0 +
mov eax edi +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+10h] +
xor eax eax +
test edx edx +
jnz loc_4073C3  +
call sub_40EF13  +
mov eax 80070057h +
jmp loc_4073FC  +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_402620 +
xor ebx ebx +
cmps   +
jz loc_4073E8  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_402630 +
xor ebx ebx +
cmps   +
jnz loc_4073F2  +
mov ecx [ebp+8] +
mov [edx] ecx +
inc dword ptr [ecx+8]  +
jmp loc_4073F9  +
and [edx] eax +
mov eax 80004002h +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
inc dword ptr [eax+8]  +
mov eax [eax+8] +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+8] +
dec dword ptr [ecx+8]  +
mov eax [ecx+8] +
jnz loc_40743B  +
push ecx  +
mov dword ptr [ecx] offset off_40552C +
call sub_40FFB3  +
pop ecx  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 5  +
call sub_407287  +
test eax eax +
jz loc_40745D  +
push 23h  +
push 5  +
call sub_40EB49  +
push ebx  +
mov ebx [ebp+14h] +
push esi  +
push edi  +
xor edi edi +
cmp ebx edi +
jnz loc_407475  +
call sub_40EF13  +
mov esi 80070057h +
jmp loc_4074DC  +
mov [ebx] edi +
cmp [ebp+0Ch] edi +
jz loc_407483  +
mov esi 80040110h +
jmp loc_4074DC  +
push 0A4h  +
call sub_40FC22  +
pop ecx  +
cmp eax edi +
jz loc_40749B  +
mov esi eax +
call sub_4075F1  +
mov edi eax +
test edi edi +
jnz loc_4074AB  +
call sub_40EF13  +
mov esi 8007000Eh +
jmp loc_4074DC  +
mov eax [edi] +
push ebx  +
push dword ptr [ebp+10h]  +
push edi  +
call dword ptr [eax]  +
mov esi eax +
test esi esi +
jge loc_4074C1  +
call sub_40EF13  +
jmp loc_4074CC  +
mov eax [ebp+8] +
mov eax [eax+4] +
mov dword_41FAAC eax +
test esi esi +
jge loc_4074DC  +
call sub_407708  +
push edi  +
call sub_40FFB3  +
pop ecx  +
call sub_407343  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
push offset dword_41FA10  +
jz loc_407507  +
call ds:InterlockedIncrement  +
jmp loc_40751E  +
call ds:InterlockedDecrement  +
cmp dword_41FA10 0 +
jg loc_40751E  +
push 0  +
call ds:PostQuitMessage  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
push [ebp+arg_0]  +
mov edi eax +
add edi 58h +
call sub_40E868  +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
lea esi [edi+3Ch] +
mov dword ptr [edi] offset off_40586C +
mov dword ptr [edi+4] offset off_4058A4 +
call sub_40E92D  +
lea esi [edi+30h] +
call sub_40E92D  +
lea esi [edi+24h] +
call sub_40E92D  +
lea esi [edi+18h] +
call sub_40E92D  +
lea esi [edi+0Ch] +
call sub_40E92D  +
pop esi  +
retn   +
***
retn 4  +
***
retn 8  +
***
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi eax +
lea eax [esi+2Ch] +
mov dword ptr [esi] offset off_4058D0 +
call sub_4086B8  +
lea eax [esi+24h] +
call sub_4086B8  +
lea eax [esi+1Ch] +
call sub_4086B8  +
lea eax [esi+14h] +
call sub_4086B8  +
add esi 4 +
call sub_40E92D  +
pop esi  +
retn   +
***
retn 1Ch  +
***
retn 14h  +
***
mov dword ptr [esi] offset off_4057C8 +
mov dword ptr [esi+4] offset off_405828 +
mov dword ptr [esi+8] offset off_405838 +
mov dword ptr [esi+0Ch] offset off_40584C +
mov eax 825h +
mov [esi+38h] eax +
push ebx  +
xor ebx ebx +
mov [esi+34h] ebx +
mov [esi+3Ch] ebx +
mov [esi+44h] eax +
mov [esi+40h] ebx +
mov [esi+48h] ebx +
mov [esi+50h] eax +
mov [esi+4Ch] ebx +
mov [esi+54h] ebx +
mov [esi+5Ch] eax +
mov [esi+58h] ebx +
mov [esi+60h] ebx +
mov [esi+68h] eax +
mov [esi+64h] ebx +
mov [esi+6Ch] ebx +
mov dword ptr [esi+74h] 5DC0h +
mov [esi+70h] ebx +
mov [esi+78h] ebx +
push 8  +
mov [esi+10h] ebx +
mov dword_41FAB0 esi +
mov [esi+18h] ebx +
mov [esi+14h] ebx +
mov [esi+1Ch] ebx +
call sub_40FC22  +
pop ecx  +
cmp eax ebx +
jz loc_407677  +
mov dword ptr [eax] offset off_406350 +
mov [eax+4] esi +
jmp loc_407679  +
xor eax eax +
push 8  +
mov [esi+20h] eax +
call sub_40FC22  +
pop ecx  +
cmp eax ebx +
jz loc_407693  +
mov dword ptr [eax] offset off_406300 +
mov [eax+4] esi +
jmp loc_407695  +
xor eax eax +
push 8  +
mov [esi+24h] eax +
call sub_40FC22  +
pop ecx  +
cmp eax ebx +
jz loc_4076AF  +
mov dword ptr [eax] offset off_406324 +
mov [eax+4] esi +
jmp loc_4076B1  +
xor eax eax +
push ebx  +
push 1  +
push 1  +
push ebx  +
mov [esi+28h] eax +
mov [esi+9Ch] ebx +
mov [esi+0A0h] ebx +
mov [esi+2Ch] ebx +
mov [esi+30h] ebx +
mov [esi+80h] ebx +
mov [esi+7Ch] ebx +
mov [esi+84h] ebx +
mov [esi+8Ch] ebx +
mov [esi+88h] ebx +
mov [esi+94h] ebx +
mov [esi+98h] bl +
call ds:CreateEventW  +
mov [esi+90h] eax +
mov eax esi +
pop ebx  +
retn   +
***
mov eax [edi+1Ch] +
push esi  +
xor esi esi +
mov dword ptr [edi] offset off_4057C8 +
mov dword ptr [edi+4] offset off_405828 +
mov dword ptr [edi+8] offset off_405838 +
mov dword ptr [edi+0Ch] offset off_40584C +
cmp eax esi +
jz loc_407735  +
cmp [eax+2Ch] esi +
jz loc_407735  +
call dword ptr [eax+34h]  +
mov eax [edi+20h] +
mov dword_41FAB0 esi +
cmp eax esi +
jz loc_40774F  +
push eax  +
mov dword ptr [eax] offset off_406350 +
call sub_40FFB3  +
pop ecx  +
mov eax [edi+24h] +
cmp eax esi +
jz loc_407763  +
push eax  +
mov dword ptr [eax] offset off_406300 +
call sub_40FFB3  +
pop ecx  +
mov eax [edi+28h] +
cmp eax esi +
jz loc_407777  +
push eax  +
mov dword ptr [eax] offset off_406324 +
call sub_40FFB3  +
pop ecx  +
mov eax [edi+14h] +
cmp eax esi +
jz loc_407787  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov [edi+14h] esi +
push esi  +
mov dword_41FAB0 esi +
mov [edi+18h] esi +
mov [edi+24h] esi +
mov [edi+28h] esi +
mov [edi+20h] esi +
mov [edi+9Ch] esi +
mov [edi+0A0h] esi +
call ds:PostQuitMessage  +
lea esi [edi+70h] +
call sub_40E92D  +
lea esi [edi+64h] +
call sub_40E92D  +
lea esi [edi+58h] +
call sub_40E92D  +
lea esi [edi+4Ch] +
call sub_40E92D  +
lea esi [edi+40h] +
call sub_40E92D  +
lea esi [edi+34h] +
call sub_40E92D  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+10h] +
push ebx  +
push esi  +
push edi  +
mov dword ptr [ebp-4] 80004002h +
test eax eax +
jnz loc_407810  +
call sub_40EF13  +
mov dword ptr [ebp-4] 80004005h +
mov eax [ebp-4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
and dword ptr [eax] 0 +
mov esi [ebp+0Ch] +
mov ebx [ebp+8] +
push 4  +
pop ecx  +
mov edi offset dword_402620 +
xor edx edx +
cmps   +
jz loc_40794D  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_402670 +
xor edx edx +
cmps   +
jnz loc_40784F  +
test ebx ebx +
jz loc_407848  +
lea ecx [ebx+4] +
jmp loc_40792B  +
xor ecx ecx +
jmp loc_40792B  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_402680 +
xor edx edx +
cmps   +
jnz loc_407868  +
mov ecx [ebx+20h] +
jmp loc_40792B  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_4026A0 +
xor edx edx +
cmps   +
jnz loc_407881  +
mov ecx [ebx+24h] +
jmp loc_40792B  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_402640 +
xor edx edx +
cmps   +
jnz loc_4078FC  +
mov ecx [ebx+20h] +
mov [eax] ecx +
cmp byte_41FAF4 dl +
jnz loc_4078E4  +
and [ebp+8] edx +
lea eax [ebp+8] +
push eax  +
push dword ptr [ebx+20h]  +
mov byte_41FAF4 1 +
push offset dword_402640  +
call ds:CoMarshalInterThreadInterfaceInStream  +
test eax eax +
jge loc_4078CB  +
push offset aIpersistmonike  +
call sub_40F8BF  +
jmp loc_4078D4  +
push dword ptr [ebp+8]  +
call ds:CoReleaseMarshalData  +
mov eax [ebp+8] +
test eax eax +
jz loc_4078E1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+10h] +
cmp dword ptr [eax] 0 +
jz loc_40796F  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4]  +
and dword ptr [ebp-4] 0 +
jmp loc_407806  +
***
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_4026B0 +
xor edx edx +
cmps   +
jnz loc_407912  +
mov ecx [ebx+28h] +
jmp loc_40792B  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_4026E0 +
xor edx edx +
cmps   +
jnz loc_40792F  +
cmp [ebx+1Ch] edx +
jnz loc_40796F  +
lea ecx [ebx+0Ch] +
mov [eax] ecx +
jmp loc_4078E4  +
***
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_402730 +
xor edx edx +
cmps   +
jnz loc_407951  +
cmp [ebx+98h] dl +
jnz loc_40794D  +
cmp [ebx+1Ch] edx +
jnz loc_40796F  +
mov [eax] ebx +
jmp loc_4078E4  +
***
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_402740 +
xor edx edx +
cmps   +
jnz loc_40796F  +
test ebx ebx +
jz loc_407848  +
lea ecx [ebx+8] +
jmp loc_40792B  +
***
cmp dword ptr [ebx+18h] 0 +
jz loc_407806  +
mov ebx [ebx+18h] +
mov ecx [ebx] +
push eax  +
push dword ptr [ebp+0Ch]  +
push ebx  +
call dword ptr [ecx]  +
jmp loc_407809  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
lea eax [edi+10h] +
push eax  +
call ds:InterlockedDecrement  +
test eax eax +
jnz loc_4079B8  +
test edi edi +
jz loc_4079B6  +
call sub_407708  +
push edi  +
call sub_40FFB3  +
pop ecx  +
xor eax eax +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+0Ch] 0 +
jnz loc_4079E1  +
push esi  +
push edi  +
mov edi [ebp+14h] +
mov esi offset dword_405908 +
movs   +
movs   +
movs   +
movs   +
pop edi  +
xor eax eax +
pop esi  +
jmp loc_4079E6  +
mov eax 80004005h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
mov eax [esi+0Ch] +
test eax eax +
jz loc_407A05  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+0Ch] +
mov [esi+0Ch] eax +
pop esi  +
test eax eax +
jz loc_407A16  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+10h] +
mov eax [ebp+8] +
and dword ptr [ecx] 0 +
cmp dword ptr [eax+0Ch] 0 +
jnz loc_407A3C  +
mov eax 80004005h +
jmp loc_407A48  +
mov eax [eax+0Ch] +
mov edx [eax] +
push ecx  +
push dword ptr [ebp+0Ch]  +
push eax  +
call dword ptr [edx]  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push esi  +
mov esi dword_41FAAC +
push edi  +
mov edi eax +
movs   +
movs   +
movs   +
movs   +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0FACh +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push edi  +
mov edi ecx +
call sub_407B38  +
test eax eax +
jge loc_407B26  +
mov eax [edi+0A0h] +
push esi  +
xor esi esi +
mov [ebp+hwnd] esi +
mov [ebp+var_FA8] esi +
cmp eax esi +
jz loc_407AD1  +
mov ecx [eax] +
lea edx [ebp+var_FA8] +
push edx  +
push offset dword_405928  +
push eax  +
call dword ptr [ecx]  +
mov eax [ebp+var_FA8] +
cmp eax esi +
jz loc_407AD1  +
mov ecx [eax] +
lea edx [ebp+hwnd] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
lea ecx [ebp+Text] +
call sub_40CBCA  +
test eax eax +
jz loc_407B15  +
push 21h  +
push offset Caption  +
lea eax [ebp+Text] +
push eax  +
push [ebp+hwnd]  +
call ds:MessageBoxW  +
cmp eax 1 +
jnz loc_407B15  +
push 5  +
push esi  +
push esi  +
push offset File  +
push esi  +
push [ebp+hwnd]  +
call ds:ShellExecuteW  +
mov eax [ebp+var_FA8] +
cmp eax esi +
pop esi  +
jz loc_407B26  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
mov eax [edi+0A0h] +
push ebx  +
xor ebx ebx +
push esi  +
mov [ebp+var_4] ebx +
mov [ebp+ppbc] ebx +
mov [ebp+var_14] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_1C] ebx +
cmp eax ebx +
jnz loc_407B6F  +
call sub_40EF13  +
mov esi 80070057h +
jmp loc_407BB2  +
mov ecx [eax] +
lea edx [ebp+var_10] +
push edx  +
push offset dword_4027C0  +
push eax  +
call dword ptr [ecx]  +
mov esi eax +
cmp esi ebx +
jl loc_407BA0  +
mov eax [ebp+var_10] +
mov ecx [eax] +
lea edx [ebp+var_1C] +
push edx  +
push offset dword_402760  +
push offset dword_402750  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov esi eax +
cmp esi ebx +
jge loc_407BA5  +
call sub_40EF13  +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_407BB2  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ebx esi +
test esi esi +
jl loc_407CA5  +
lea esi [ebp+var_4] +
call sub_40866E  +
mov ebx eax +
xor esi esi +
cmp ebx esi +
jl loc_407CA5  +
mov eax [ebp+var_4] +
push dword ptr [edi+0A0h]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov eax [edi+34h] +
push 1  +
lea ecx [ebp+var_14] +
push ecx  +
push eax  +
push esi  +
call CreateURLMonikerEx  +
mov ebx eax +
cmp ebx esi +
jl loc_407CA5  +
mov eax [ebp+var_4] +
cmp [ebp+var_8] eax +
jz loc_407C1A  +
push offset dword_405948  +
lea esi [ebp+var_8] +
call sub_4087D8  +
xor esi esi +
cmp [ebp+var_8] esi +
jnz loc_407C26  +
mov ebx 80004002h +
jmp loc_407CA5  +
lea eax [ebp+ppbc] +
push eax  +
push esi  +
call ds:CreateBindCtx  +
mov ebx eax +
cmp ebx esi +
jl loc_407CA5  +
mov eax [ebp+var_8] +
mov ecx [eax] +
push esi  +
push [ebp+ppbc]  +
push [ebp+var_14]  +
push esi  +
push eax  +
call dword ptr [ecx+14h]  +
mov ebx eax +
cmp ebx esi +
jz loc_407C8B  +
cmp ebx 1 +
jnz loc_407C58  +
mov ebx 80004005h +
mov eax [ebp+var_4] +
cmp [ebp+var_C] eax +
jz loc_407C6F  +
push offset dword_405938  +
lea esi [ebp+var_C] +
call sub_4087D8  +
xor esi esi +
mov ecx [ebp+var_C] +
cmp ecx esi +
jz loc_407C87  +
mov eax [edi+34h] +
mov edx [ecx] +
push esi  +
push eax  +
push ecx  +
call dword ptr [edx+14h]  +
test eax eax +
jnz loc_407C87  +
xor ebx ebx +
cmp ebx esi +
jl loc_407CA5  +
mov eax [ebp+var_4] +
mov ecx [eax] +
push esi  +
push esi  +
push esi  +
push dword ptr [edi+0A0h]  +
push esi  +
push esi  +
push eax  +
call dword ptr [ecx+2Ch]  +
mov ebx eax +
cmp ebx esi +
jge loc_407CAA  +
call sub_40EF13  +
mov eax [ebp+var_1C] +
test eax eax +
jz loc_407CB7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_C] +
test eax eax +
jz loc_407CC4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_8] +
test eax eax +
jz loc_407CD1  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_14] +
test eax eax +
jz loc_407CDE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+ppbc] +
test eax eax +
jz loc_407CEB  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp+var_4] +
test eax eax +
jz loc_407CF8  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 74h +
push ebx  +
push esi  +
xor ebx ebx +
mov esi eax +
push edi  +
mov [esp+80h+var_74] ebx +
cmp [esi+1Ch] ebx +
jnz loc_407D49  +
cmp [esi+58h] ebx +
jnz loc_407D3B  +
push esi  +
call sub_407F8A  +
cmp eax ebx +
mov [esp+80h+var_74] eax +
jge loc_407D3B  +
call sub_40EF13  +
jmp loc_407ECC  +
mov eax [esi+58h] +
push 1  +
push eax  +
call sub_40D3F3  +
mov [esi+1Ch] eax +
mov eax [esi+1Ch] +
cmp eax ebx +
jnz loc_407D5C  +
mov byte ptr [esi+98h] 1 +
jmp loc_407ECC  +
cmp [eax+2Ch] ebx +
jnz loc_407ECC  +
cmp [esi+70h] ebx +
jz loc_407DD9  +
cmp dword ptr [eax] 3 +
jnz loc_407DD9  +
mov eax [eax+1Ch] +
lea ecx [esp+80h+FileInformation] +
push ecx  +
push ebx  +
push eax  +
call ds:GetFileAttributesExW  +
test eax eax +
jz loc_407DD9  +
lea eax [esp+80h+SystemTime] +
push eax  +
lea eax [esp+84h+FileTime] +
push eax  +
call ds:FileTimeToSystemTime  +
test eax eax +
jz loc_407DD9  +
mov eax 7D9h +
cmp [esp+80h+SystemTime.wYear] ax +
jnb loc_407DD9  +
push 0FFFFFFFFh  +
call ds:MessageBeep  +
call sub_40882C  +
mov edi eax +
cmp edi ebx +
jnz loc_407DC0  +
push 8007000Eh  +
call loc_4088A7  +
push 10h  +
push edi  +
push dword ptr [esi+70h]  +
push ebx  +
call ds:MessageBoxW  +
push edi  +
call ds:SysFreeString  +
jmp loc_407ED5  +
mov edi [esi+1Ch] +
call sub_40D08F  +
cmp eax ebx +
mov [esp+80h+var_74] eax +
jl loc_407D31  +
mov eax [esi+34h] +
mov [esp+80h+var_34] eax +
mov eax dword_41FA08 +
mov [esp+80h+var_14] eax +
mov eax [esi+64h] +
mov [esp+80h+var_30] eax +
mov eax [esi+84h] +
mov [esp+80h+var_28] eax +
mov eax [esi+7Ch] +
mov [esp+80h+var_24] eax +
mov eax [esi+80h] +
mov [esp+80h+var_20] eax +
mov eax [esi+90h] +
mov [esp+80h+var_1C] eax +
mov eax dword_41FA0C +
and eax 2 +
mov [esp+80h+var_18] eax +
mov eax [esi+28h] +
mov [esp+80h+var_10] eax +
mov eax dword_41FAB8 +
mov [esp+80h+var_C] eax +
mov eax [esi+70h] +
mov [esp+80h+var_4] eax +
lea edi [esi+18h] +
push edi  +
lea eax [esp+84h+var_38] +
push eax  +
push dword ptr [esi+1Ch]  +
mov [esp+8Ch+var_38] 38h +
mov [esp+8Ch+var_8] esi +
call sub_40D274  +
mov eax [esi+94h] +
cmp eax 1 +
jz loc_407ECC  +
cmp eax 2 +
jz loc_407ECC  +
mov edi [edi] +
lea ecx [esp+80h+var_70] +
push ecx  +
push offset dword_402730  +
mov [esp+88h+var_70] ebx +
mov eax [edi] +
push edi  +
call dword ptr [eax]  +
cmp eax ebx +
mov [esp+8Ch+var_80] eax +
jl loc_407D31  +
mov eax [esp+8Ch+var_7C] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [esp+90h+var_80] +
mov [esi+9Ch] eax +
add esi 0A0h +
mov ecx [esi] +
cmp ecx ebx +
jz loc_407ECC  +
mov edx [eax] +
push ecx  +
push eax  +
call dword ptr [edx+0Ch]  +
mov esi [esi] +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
push [esp+9Ch+var_90]  +
call sub_40880E  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
test eax eax +
jz loc_407EF0  +
and dword ptr [eax] 0 +
mov eax 80004001h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
push edi  +
push dword ptr [ebp+10h]  +
lea edi [esi+34h] +
xor ebx ebx +
call sub_40E868  +
cmp [esi+10h] ebx +
jnz loc_407F42  +
mov ebx [esi+28h] +
call sub_40DE46  +
mov esi ds:PostQuitMessage +
mov ebx eax +
test ebx ebx +
jge loc_407F36  +
call sub_40EF13  +
jmp loc_407F3A  +
push 0  +
call esi  +
test ebx ebx +
jge loc_407F42  +
push 4  +
call esi  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+14h] +
test eax eax +
jz loc_407F5F  +
and dword ptr [eax] 0 +
mov eax 80004001h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
test eax eax +
jz loc_407F7C  +
and dword ptr [eax] 0 +
mov eax 80004001h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 148h +
push ebx  +
mov ebx [ebp+arg_0] +
cmp dword ptr [ebx+70h] 0 +
push esi  +
push edi  +
jz loc_407FB5  +
push offset a0_0_0  +
lea edi [ebx+58h] +
call sub_40E868  +
xor eax eax +
jmp loc_408247  +
push 4  +
mov [ebp+var_5] 1 +
call sub_407287  +
test eax eax +
jz loc_407FDB  +
push offset aDisablesinglev  +
xor eax eax +
lea esi [ebp+var_C] +
call sub_40DF4D  +
cmp [ebp+var_C] 0 +
setz [ebp+var_5]  +
mov eax [ebx+84h] +
cmp eax 2 +
jnz loc_408166  +
push dword ptr [ebx+4Ch]  +
lea esi [ebp+var_64] +
push dword ptr [ebx+34h]  +
call sub_40F41E  +
mov edx [ebp+var_4C] +
mov ecx [ebp+var_64] +
lea eax [ebp+var_1C] +
push eax  +
lea eax [ebp+var_28] +
push eax  +
lea eax [ebp+var_34] +
push eax  +
lea eax [ebp+var_40] +
push eax  +
call sub_40E277  +
test eax eax +
jge loc_40801E  +
call sub_40EF13  +
jmp loc_408039  +
push [ebp+var_40]  +
lea edi [ebx+64h] +
call sub_40E868  +
cmp [ebp+var_5] 0 +
jz loc_40808E  +
call sub_40D2BA  +
cmp eax 1 +
jnz loc_40808E  +
push offset a0_0_0  +
lea edi [ebx+58h] +
call sub_40E868  +
mov ebx eax +
test ebx ebx +
jge loc_408051  +
call sub_40EF13  +
lea esi [ebp+var_1C] +
call sub_40E92D  +
lea esi [ebp+var_28] +
call sub_40E92D  +
lea esi [ebp+var_34] +
call sub_40E92D  +
lea esi [ebp+var_40] +
call sub_40E92D  +
lea esi [ebp+var_4C] +
call sub_40E92D  +
lea esi [ebp+var_58] +
call sub_40E92D  +
lea esi [ebp+var_64] +
call sub_40E92D  +
jmp loc_408245  +
push [ebp+var_28]  +
lea esi [ebp+var_144] +
push dword ptr [ebx+34h]  +
call sub_40EF37  +
mov eax esi +
push eax  +
call sub_40F023  +
mov ebx esi +
call sub_40F1D8  +
mov ebx eax +
test ebx ebx +
jl loc_40814B  +
push [ebp+var_114]  +
lea eax [ebp+var_F4] +
call sub_40D001  +
push [ebp+var_108]  +
lea eax [ebp+var_AC] +
call sub_40D001  +
mov eax [ebp+var_F4] +
sub eax [ebp+var_AC] +
lea ecx [ebp+var_F4] +
jnz loc_408108  +
mov eax [ebp+var_F0] +
sub eax [ebp+var_A8] +
jnz loc_408108  +
mov eax [ebp+var_EC] +
sub eax [ebp+var_A4] +
test eax eax +
jge loc_408112  +
lea ecx [ebp+var_AC] +
push dword ptr [ecx+10h]  +
mov eax [ebp+arg_0] +
call sub_407529  +
lea esi [ebp+var_90] +
mov ebx eax +
call sub_40E92D  +
lea esi [ebp+var_9C] +
call sub_40E92D  +
lea esi [ebp+var_D8] +
call sub_40E92D  +
lea esi [ebp+var_E4] +
call sub_40E92D  +
lea edi [ebp+var_144] +
call sub_407546  +
test ebx ebx +
jge loc_408051  +
mov ebx [ebp+arg_0] +
jmp loc_408039  +
cmp eax 3 +
jnz loc_40823B  +
cmp [ebp+var_5] 0 +
jz loc_40819B  +
call sub_40D2BA  +
cmp eax 1 +
jnz loc_40819B  +
push offset a0_0_0  +
lea edi [ebx+58h] +
call sub_40E868  +
mov ebx eax +
test ebx ebx +
jge loc_408245  +
jmp loc_408240  +
push dword ptr [ebx+4Ch]  +
lea esi [ebp+var_9C] +
call sub_40F489  +
mov eax esi +
push eax  +
call sub_40F529  +
mov eax esi +
call sub_40F711  +
mov edi [ebp+var_78] +
xor esi esi +
test edi edi +
jz loc_40822C  +
mov eax [edi+0Ch] +
mov eax [eax] +
and [ebp+arg_0] 0 +
lea ecx [ebp+arg_0] +
push ecx  +
push eax  +
lea eax [ebp+var_80] +
call sub_4086DF  +
test eax eax +
jl loc_4081FF  +
mov eax [ebp+arg_0] +
mov eax [eax] +
push 0  +
push eax  +
call sub_40D3F3  +
mov ecx eax +
test ecx ecx +
jz loc_4081FF  +
test esi esi +
jz loc_4081FD  +
mov edx esi +
call sub_40D075  +
test eax eax +
jge loc_4081FF  +
mov esi ecx +
mov edi [edi+10h] +
test edi edi +
jnz loc_4081C1  +
test esi esi +
jz loc_40822C  +
push dword ptr [esi+10h]  +
mov eax ebx +
call sub_407529  +
mov ebx eax +
test ebx ebx +
jge loc_40821F  +
call sub_40EF13  +
lea eax [ebp+var_9C] +
call sub_4075A3  +
jmp loc_408245  +
push offset a0_0_0  +
lea edi [ebx+58h] +
call sub_40E868  +
jmp loc_408214  +
mov ebx 80004005h +
call sub_40EF13  +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+arg_0] +
mov eax [edi+9Ch] +
test eax eax +
jz loc_408271  +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+0Ch]  +
jmp loc_4082B3  +
push ebx  +
push esi  +
lea esi [edi+0A0h] +
mov eax [esi] +
test eax eax +
jz loc_408285  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ebx [ebp+arg_4] +
mov [esi] ebx +
test ebx ebx +
jz loc_408294  +
mov eax [ebx] +
push ebx  +
call dword ptr [eax+4]  +
cmp byte ptr [edi+98h] 0 +
jz loc_4082AF  +
test ebx ebx +
jz loc_4082AF  +
mov ecx edi +
call sub_407A6B  +
mov eax 80004005h +
jmp loc_4082B1  +
xor eax eax +
pop esi  +
pop ebx  +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_4082DF  +
push [ebp+arg_8]  +
mov eax [eax] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4Ch]  +
jmp loc_4082E4  +
mov eax 80004001h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_40830F  +
push [ebp+arg_8]  +
mov eax [eax] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+14h]  +
jmp loc_408314  +
mov eax 80004001h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_40834B  +
push [ebp+arg_18]  +
mov eax [eax] +
push [ebp+arg_14]  +
mov ecx [eax] +
push [ebp+arg_10]  +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+2Ch]  +
jmp loc_408350  +
mov eax 80004001h +
pop ebp  +
retn 1Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_40837B  +
push [ebp+arg_8]  +
mov eax [eax] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+48h]  +
jmp loc_408380  +
mov eax 80004001h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_4083A5  +
mov eax [eax] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
jmp loc_4083AA  +
mov eax 80004001h +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_4083D2  +
mov eax [eax] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+18h]  +
jmp loc_4083D7  +
mov eax 80004001h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_4083FF  +
mov eax [eax] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+50h]  +
jmp loc_408404  +
mov eax 80004001h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_40842C  +
mov eax [eax] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+30h]  +
jmp loc_408431  +
mov eax 80004001h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_408459  +
mov eax [eax] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+10h]  +
jmp loc_40845E  +
mov eax 80004001h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_408489  +
push [ebp+arg_8]  +
mov eax [eax] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+1Ch]  +
jmp loc_40848E  +
mov eax 80004001h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_4084BC  +
push [ebp+arg_C]  +
mov eax [eax] +
push [ebp+arg_8]  +
mov ecx [eax] +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+20h]  +
jmp loc_4084C1  +
mov eax 80004001h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_4084EF  +
push [ebp+arg_C]  +
mov eax [eax] +
push [ebp+arg_8]  +
mov ecx [eax] +
push [ebp+arg_4]  +
push eax  +
call dword ptr [ecx+24h]  +
jmp loc_4084F4  +
mov eax 80004001h +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_40851F  +
push [ebp+arg_8]  +
mov eax [eax] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+28h]  +
jmp loc_408524  +
mov eax 80004001h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_408549  +
mov eax [eax] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+38h]  +
jmp loc_40854B  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_408573  +
mov eax [eax] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+3Ch]  +
jmp loc_408578  +
mov eax 80004001h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_4085A3  +
push [ebp+arg_8]  +
mov eax [eax] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+40h]  +
jmp loc_4085A8  +
mov eax 80004001h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_4085D3  +
push [ebp+arg_8]  +
mov eax [eax] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+44h]  +
jmp loc_4085D8  +
mov eax 80004001h +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_408600  +
mov eax [eax] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+54h]  +
jmp loc_408605  +
mov eax 80004001h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_408630  +
push [ebp+arg_8]  +
mov eax [eax] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+58h]  +
jmp loc_40863B  +
mov eax [ebp+arg_8] +
mov dword ptr [eax] 20000h +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 9Ch +
cmp dword ptr [eax] 0 +
jz loc_408663  +
mov eax [eax] +
push [ebp+arg_4]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+5Ch]  +
jmp loc_408665  +
xor eax eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
lea eax [ebp+rclsid] +
push eax  +
push offset szProgID  +
call ds:CLSIDFromProgID  +
test eax eax +
jl loc_4086A7  +
push esi  +
push offset riid  +
push 17h  +
push 0  +
lea eax [ebp+rclsid] +
push eax  +
call ds:CoCreateInstance  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi [eax] +
test esi esi +
jz loc_4086D8  +
push edi  +
mov edi [esi+10h] +
call sub_40E92D  +
push esi  +
call sub_40FFB3  +
pop ecx  +
mov esi edi +
test edi edi +
jnz loc_4086C2  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [eax] +
push edi  +
xor edi edi +
jmp loc_4086FF  +
push dword ptr [esi]  +
push [ebp+arg_0]  +
call sub_41020C  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_408715  +
mov esi [esi+10h] +
test esi esi +
jnz loc_4086EC  +
mov edi 80004005h +
call sub_40EF13  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
mov eax [esi+0Ch] +
mov ecx [ebp+arg_4] +
mov [ecx] eax +
jmp loc_40870D  +
***
sub dword ptr [esp+4] 0Ch +
jmp sub_40798F  +
***
sub dword ptr [esp+4] 4 +
jmp sub_40F529  +
***
sub dword ptr [esp+4] 4 +
jmp loc_40EFAD  +
***
sub dword ptr [esp+4] 8 +
jmp sub_40F529  +
***
sub dword ptr [esp+4] 4 +
jmp loc_4077E3  +
***
sub dword ptr [esp+4] 0Ch +
jmp sub_40F529  +
***
sub dword ptr [esp+4] 8 +
jmp loc_4077E3  +
***
sub dword ptr [esp+4] 0Ch +
jmp loc_4077E3  +
***
sub dword ptr [esp+4] 4 +
jmp sub_40F03E  +
***
sub dword ptr [esp+4] 4 +
jmp sub_40798F  +
***
sub dword ptr [esp+4] 4 +
jmp sub_40F023  +
***
sub dword ptr [esp+4] 8 +
jmp sub_40798F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test esi esi +
jnz loc_4087E5  +
xor eax eax +
jmp loc_408805  +
push edi  +
mov edi [esi] +
and dword ptr [esi] 0 +
test eax eax +
jz loc_4087F8  +
mov ecx [eax] +
push esi  +
push [ebp+arg_0]  +
push eax  +
call dword ptr [ecx]  +
test edi edi +
jz loc_408802  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
mov eax [esi] +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jge loc_408823  +
push 2Bh  +
push [ebp+arg_0]  +
call sub_40EEB9  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov esi ds:MultiByteToWideChar +
push edi  +
xor eax eax +
push eax  +
push eax  +
push 0FFFFFFFFh  +
mov edi offset MultiByteStr +
push edi  +
push eax  +
push 3  +
call esi  +
mov ebx eax +
lea eax [ebx-1] +
push eax  +
push 0  +
call ds:SysAllocStringLen  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_40887D  +
push ebx  +
push eax  +
push 0FFFFFFFFh  +
push edi  +
push 0  +
push 3  +
call esi  +
cmp eax ebx +
jz loc_40887D  +
push [ebp+var_4]  +
call ds:SysFreeString  +
xor eax eax +
jmp loc_408880  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push 1  +
push [ebp+dwExceptionCode]  +
call ds:RaiseException  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp dword ptr [ebp+8] 8007000Eh +
setz al  +
dec eax  +
and eax 6 +
add eax 0C0000017h +
push eax  +
call sub_40888A  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
cmp [ebp+arg_0] esi +
jbe loc_4088E9  +
push dword ptr [edi+esi*8]  +
call sub_4102A4  +
inc esi  +
pop ecx  +
cmp esi [ebp+arg_0] +
jb loc_4088DA  +
push edi  +
call sub_4102A4  +
pop ecx  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
xor esi esi +
push 4  +
mov [ebp+DisableSidCount] esi +
mov [ebp+var_8] esi +
call sub_407287  +
test eax eax +
jz loc_40891E  +
push 21h  +
push 4  +
call sub_40EB49  +
lea eax [ebp+DisableSidCount] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call sub_408E99  +
test eax eax +
jnz loc_408953  +
push edi  +
push [ebp+DeletePrivilegeCount]  +
mov edi [ebp+var_8] +
push [ebp+arg_0]  +
mov ecx edi +
push [ebp+DisableSidCount]  +
call sub_408BB5  +
test eax eax +
jnz loc_40894A  +
xor esi esi +
inc esi  +
push [ebp+DisableSidCount]  +
call sub_4088CD  +
pop edi  +
mov eax esi +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 12Ch +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
lea eax [ebp+VersionInformation] +
xor esi esi +
xor edi edi +
push eax  +
inc edi  +
mov [ebp+hKey] esi +
mov dword ptr [ebp+Data] esi +
mov [ebp+cbData] 4 +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 11Ch +
call ds:GetVersionExW  +
test eax eax +
jz loc_4089CB  +
cmp [ebp+VersionInformation.dwMajorVersion] 5 +
jnz loc_4089CB  +
cmp [ebp+VersionInformation.dwMinorVersion] edi +
jnz loc_4089CB  +
cmp [ebp+var_C] 2 +
jnb loc_4089CB  +
push edi  +
call ds:ExitProcess  +
lea eax [ebp+hKey] +
push eax  +
push edi  +
push esi  +
push offset SubKey  +
push 80000002h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_408A23  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push esi  +
push esi  +
push offset ValueName  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_408A17  +
cmp dword ptr [ebp+Data] edi +
jnz loc_408A17  +
xor edi edi +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
cmp dword_41FF38 0 +
jnz loc_408A9D  +
call sub_40895F  +
test eax eax +
jz loc_408A9D  +
and [ebp+var_4] 0 +
and [ebp+var_8] 0 +
lea eax [ebp+var_4] +
push eax  +
lea eax [ebp+var_8] +
push eax  +
call sub_408E99  +
test eax eax +
jnz loc_408A93  +
push ebx  +
push edi  +
push [ebp+arg_4]  +
mov edi [ebp+var_8] +
push [ebp+arg_0]  +
mov ebx edi +
push [ebp+var_4]  +
call sub_408AAB  +
test eax eax +
jnz loc_408A89  +
and dword_41EEF4 eax +
push [ebp+var_4]  +
call sub_4088CD  +
pop edi  +
pop ebx  +
mov dword_41FF38 1 +
mov eax dword_41EEF4 +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 58h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
mov [ebp+var_58] eax +
lea eax [ebp+TokenHandle] +
push eax  +
push 8  +
mov [ebp+var_54] 1 +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jz loc_408B9F  +
push edi  +
mov edi ds:GetTokenInformation +
xor eax eax +
lea ecx [ebp+ReturnLength] +
push ecx  +
push eax  +
push eax  +
push 0Dh  +
push [ebp+TokenHandle]  +
mov [ebp+ReturnLength] eax +
call edi  +
test eax eax +
jnz loc_408B95  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_408B95  +
push esi  +
push [ebp+ReturnLength]  +
call sub_40FC50  +
mov esi eax +
pop ecx  +
test esi esi +
jnz loc_408B2A  +
and [ebp+var_54] eax +
jmp loc_408B94  +
lea eax [ebp+ReturnLength] +
push eax  +
push [ebp+ReturnLength]  +
push esi  +
push 0Dh  +
push [ebp+TokenHandle]  +
call edi  +
test eax eax +
jz loc_408B8D  +
push [ebp+TokenHandle]  +
lea edi [ebp+var_48] +
call sub_40902D  +
test eax eax +
jnz loc_408B8D  +
push [ebp+arg_0]  +
mov eax [esi] +
mov ecx [esi+8] +
push ebx  +
call sub_408D60  +
test eax eax +
jz loc_408B89  +
mov eax edi +
push eax  +
push [ebp+arg_0]  +
push ebx  +
push dword ptr [esi+0Ch]  +
push dword ptr [esi+14h]  +
call sub_408DB8  +
test eax eax +
jz loc_408B89  +
push [ebp+arg_8]  +
mov eax [esi+18h] +
push [ebp+var_58]  +
mov ecx [esi+20h] +
call sub_408E35  +
test eax eax +
jnz loc_408B8D  +
and [ebp+var_54] 0 +
push esi  +
call sub_4102A4  +
pop ecx  +
pop esi  +
push [ebp+TokenHandle]  +
call ds:CloseHandle  +
pop edi  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_54] +
xor ecx ebp +
call sub_40FFC3  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2B0h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
push edi  +
mov [ebp+TokenInformation] eax +
lea eax [ebp+TokenHandle] +
push eax  +
xor esi esi +
push 200EBh  +
mov ebx ecx +
mov [ebp+TokenHandle] esi +
mov [ebp+hToken] esi +
call ds:GetCurrentProcess  +
push eax  +
call ds:OpenProcessToken  +
test eax eax +
jz loc_408D40  +
push [ebp+TokenHandle]  +
lea edi [ebp+var_48] +
call sub_40902D  +
mov edi eax +
cmp edi esi +
jnz loc_408D32  +
lea eax [ebp+hToken] +
push eax  +
push esi  +
push esi  +
push [ebp+TokenInformation]  +
push [ebp+DeletePrivilegeCount]  +
push ebx  +
push [ebp+DisableSidCount]  +
push esi  +
push [ebp+TokenHandle]  +
call ds:CreateRestrictedToken  +
test eax eax +
jz loc_408D2A  +
push 40h  +
lea eax [ebp+StartupInfo.lpReserved] +
push esi  +
push eax  +
mov [ebp+StartupInfo.cb] 44h +
call sub_413F70  +
add esp 0Ch +
lea eax [ebp+StartupInfo] +
push eax  +
call ds:GetStartupInfoW  +
xor eax eax +
lea edi [ebp+hObject] +
stos   +
stos   +
stos   +
stos   +
call ds:GetCommandLineW  +
mov ebx eax +
push 104h  +
lea eax [ebp+ApplicationName] +
push eax  +
push esi  +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_408D14  +
lea eax [ebp+var_48] +
mov [ebp+TokenInformation] eax +
lea eax [ebp+TokenInformation] +
push eax  +
push [ebp+hToken]  +
call sub_40908B  +
mov edi eax +
cmp edi esi +
jnz loc_408D1C  +
lea eax [ebp+hObject] +
push eax  +
lea eax [ebp+StartupInfo] +
push eax  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
push ebx  +
lea eax [ebp+ApplicationName] +
push eax  +
push [ebp+hToken]  +
call ds:CreateProcessAsUserW  +
test eax eax +
jz loc_408D14  +
push 1388h  +
push [ebp+hObject]  +
call ds:WaitForInputIdle  +
push [ebp+hObject]  +
mov esi ds:CloseHandle +
call esi  +
push dword ptr [ebp-268h]  +
call esi  +
jmp loc_408D1C  +
call ds:GetLastError  +
mov edi eax +
push [ebp+hToken]  +
call ds:CloseHandle  +
jmp loc_408D32  +
call ds:GetLastError  +
mov edi eax +
push [ebp+TokenHandle]  +
call ds:CloseHandle  +
jmp loc_408D48  +
call ds:GetLastError  +
mov edi eax +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
mov ebx eax +
mov [ebp+var_4] 1 +
test ebx ebx +
jbe loc_408DAB  +
push esi  +
push edi  +
mov edi ecx +
xor esi esi +
cmp [ebp+arg_4] esi +
jbe loc_408DA3  +
mov eax [ebp+arg_0] +
push dword ptr [eax+esi*8]  +
push dword ptr [edi]  +
call ds:EqualSid  +
test eax eax +
jz loc_408D97  +
test byte ptr [edi+4] 10h +
jz loc_408D9F  +
inc esi  +
cmp esi [ebp+arg_4] +
jb loc_408D7F  +
jmp loc_408DA3  +
and [ebp+var_4] 0 +
add edi 8 +
dec ebx  +
jnz loc_408D78  +
pop edi  +
pop esi  +
mov eax [ebp+var_4] +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
xor esi esi +
push edi  +
mov edi ds:EqualSid +
mov [ebp+var_4] 1 +
cmp [ebp+arg_C] esi +
jbe loc_408DE9  +
mov eax [ebp+arg_8] +
push dword ptr [eax+esi*8]  +
push [ebp+pSid1]  +
call edi  +
test eax eax +
jnz loc_408E14  +
inc esi  +
cmp esi [ebp+arg_C] +
jb loc_408DD4  +
mov eax [ebp+arg_4] +
test eax eax +
jbe loc_408E27  +
push ebx  +
mov ebx [ebp+arg_0] +
mov [ebp+pSid1] eax +
xor esi esi +
cmp [ebp+arg_C] esi +
jbe loc_408E1E  +
mov eax [ebp+arg_8] +
push dword ptr [eax+esi*8]  +
push dword ptr [ebx]  +
call edi  +
test eax eax +
jnz loc_408E1A  +
inc esi  +
cmp esi [ebp+arg_C] +
jb loc_408DFE  +
jmp loc_408E1E  +
and [ebp+var_4] 0 +
jmp loc_408E27  +
and [ebp+var_4] 0 +
add ebx 8 +
dec [ebp+pSid1]  +
jnz loc_408DF7  +
pop ebx  +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov [ebp+var_C] 1 +
test eax eax +
jbe loc_408E8D  +
push ebx  +
push esi  +
mov [ebp+var_4] ecx +
mov [ebp+var_8] eax +
push edi  +
xor eax eax +
cmp [ebp+arg_4] eax +
jbe loc_408E81  +
mov ebx [ebp+arg_0] +
mov esi [ebp+var_4] +
push 8  +
pop ecx  +
mov edi ebx +
xor edx edx +
cmps   +
jz loc_408E6E  +
sbb edx edx +
sbb edx 0FFFFFFFFh +
test edx edx +
jz loc_408E7D  +
inc eax  +
add ebx 0Ch +
cmp eax [ebp+arg_4] +
jb loc_408E5B  +
jmp loc_408E81  +
and [ebp+var_C] 0 +
add [ebp+var_4] 0Ch +
dec [ebp+var_8]  +
jnz loc_408E51  +
pop edi  +
pop esi  +
pop ebx  +
mov eax [ebp+var_C] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
and [ebp+var_4] 0 +
push esi  +
push edi  +
push 10h  +
call sub_40FC50  +
mov esi eax +
pop ecx  +
mov [ebp+var_8] esi +
test esi esi +
jz loc_408F33  +
xor eax eax +
mov edi esi +
stos   +
stos   +
stos   +
stos   +
xor edi edi +
push 44h  +
call sub_40FC50  +
pop ecx  +
mov [esi] eax +
test eax eax +
jz loc_408F07  +
lea eax [ebp+var_C] +
push eax  +
mov [ebp+var_C] 44h +
push dword ptr [esi]  +
push 0  +
push ds:dword_4055B0[edi]  +
call ds:CreateWellKnownSid  +
test eax eax +
jz loc_408EFC  +
add edi 4 +
add esi 8 +
cmp edi 8 +
jb loc_408EC2  +
jmp loc_408F14  +
call ds:GetLastError  +
mov [ebp+var_4] eax +
jmp loc_408F0E  +
mov [ebp+var_4] 8 +
cmp [ebp+var_4] 0 +
jnz loc_408F27  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_8] +
mov [eax] ecx +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 2 +
jmp loc_408F3A  +
mov edi [ebp+var_8] +
push 2  +
call sub_4088CD  +
jmp loc_408F3A  +
mov [ebp+var_4] 8 +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 2Ch +
mov eax [ebp+arg_0] +
push ebx  +
push edi  +
xor edi edi +
mov [eax] edi +
mov eax [ebp+arg_4] +
push 0D8h  +
mov [ebp+var_4] edi +
mov [eax] edi +
call sub_40FC50  +
mov ebx eax +
pop ecx  +
mov [ebp+var_C] ebx +
cmp ebx edi +
jz loc_409018  +
lea eax [ebp+ObjectHandle] +
push eax  +
push 800h  +
lea eax [ebp+ObjectAttributes] +
push eax  +
push edi  +
mov [ebp+ObjectAttributes.Length] 18h +
mov [ebp+ObjectAttributes.RootDirectory] edi +
mov [ebp+ObjectAttributes.Attributes] edi +
mov [ebp+ObjectAttributes.ObjectName] edi +
mov [ebp+ObjectAttributes.SecurityDescriptor] edi +
mov [ebp+ObjectAttributes.SecurityQualityOfService] edi +
call LsaOpenPolicy  +
cmp eax edi +
jnz loc_408FEC  +
push esi  +
xor esi esi +
push ds:off_4055B8[esi]  +
lea eax [ebp+var_14] +
push eax  +
call RtlInitUnicodeString  +
push ebx  +
lea eax [ebp+var_14] +
push eax  +
push [ebp+ObjectHandle]  +
call LsaLookupPrivilegeValue  +
cmp eax edi +
jnz loc_408FD6  +
add esi 4 +
add ebx 0Ch +
cmp esi 48h +
jb loc_408FA9  +
jmp loc_408FDF  +
push eax  +
call LsaNtStatusToWinError  +
mov [ebp+var_4] eax +
push [ebp+ObjectHandle]  +
call LsaClose  +
pop esi  +
cmp eax edi +
jz loc_408FF5  +
push eax  +
call LsaNtStatusToWinError  +
mov [ebp+var_4] eax +
cmp [ebp+var_4] edi +
jnz loc_40900D  +
mov eax [ebp+var_C] +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
mov eax [ebp+arg_4] +
mov dword ptr [eax] 12h +
jmp loc_40901F  +
push [ebp+var_C]  +
call sub_4102A4  +
pop ecx  +
jmp loc_40901F  +
mov [ebp+var_4] 8 +
mov eax [ebp+var_4] +
pop edi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 54h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+TokenHandle] +
push esi  +
lea ecx [ebp+ReturnLength] +
push ecx  +
push 4Ch  +
lea ecx [ebp+pSourceSid] +
push ecx  +
push 1  +
xor esi esi +
push eax  +
mov [ebp+ReturnLength] esi +
call ds:GetTokenInformation  +
test eax eax +
jz loc_40906D  +
push [ebp+pSourceSid]  +
push edi  +
push 44h  +
call ds:CopySid  +
jmp loc_409075  +
call ds:GetLastError  +
mov esi eax +
mov ecx [ebp+var_4] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_40FFC3  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
mov esi ds:GetKernelObjectSecurity +
push edi  +
xor ebx ebx +
lea eax [ebp+nLengthNeeded] +
push eax  +
push ebx  +
push ebx  +
push 4  +
push [ebp+TokenHandle]  +
mov [ebp+pAcl] ebx +
mov [ebp+var_C] ebx +
mov [ebp+nLengthNeeded] ebx +
xor edi edi +
call esi  +
test eax eax +
jnz loc_409171  +
call ds:GetLastError  +
mov edi eax +
cmp edi 7Ah +
jnz loc_409171  +
push [ebp+nLengthNeeded]  +
call sub_40FC50  +
mov edi eax +
pop ecx  +
mov [ebp+var_14] edi +
cmp edi ebx +
jz loc_40916E  +
lea eax [ebp+nLengthNeeded] +
push eax  +
push [ebp+nLengthNeeded]  +
push edi  +
push 4  +
push [ebp+TokenHandle]  +
call esi  +
test eax eax +
jz loc_40915B  +
lea eax [ebp+bDaclDefaulted] +
push eax  +
lea eax [ebp+pAcl] +
push eax  +
lea eax [ebp+bDaclPresent] +
push eax  +
push edi  +
call ds:GetSecurityDescriptorDacl  +
test eax eax +
jz loc_40915B  +
lea eax [ebp+pAce] +
push eax  +
push [ebp+pAcl]  +
lea edi [ebp+var_C] +
push [ebp+TokenInformation]  +
mov [ebp+pAce] ebx +
call sub_40917F  +
mov edi eax +
cmp edi ebx +
jnz loc_409163  +
mov eax [ebp+pAce] +
mov esi [ebp+var_C] +
add eax 4 +
push eax  +
lea eax [ebp+TokenInformation] +
push eax  +
push 6  +
push [ebp+TokenHandle]  +
mov [ebp+TokenInformation] esi +
call ds:SetTokenInformation  +
test eax eax +
jnz loc_409152  +
call ds:GetLastError  +
mov edi eax +
push esi  +
call sub_40FFB3  +
pop ecx  +
jmp loc_409163  +
call ds:GetLastError  +
mov edi eax +
push [ebp+var_14]  +
call sub_4102A4  +
pop ecx  +
jmp loc_409171  +
push 8  +
pop edi  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
xor ebx ebx +
push esi  +
mov [ebp+var_4] ebx +
cmp [ebp+pAcl] ebx +
jz loc_40929E  +
push 2  +
push 0Ch  +
lea eax [ebp+pAclInformation] +
push eax  +
push [ebp+pAcl]  +
call ds:GetAclInformation  +
test eax eax +
jz loc_409293  +
mov esi [ebp+var_10] +
mov eax [ebp+arg_0] +
push dword ptr [eax+ebx*4]  +
call ds:GetLengthSid  +
lea ecx [eax+8] +
cmp ecx eax +
jb loc_40923E  +
lea eax [ecx+esi] +
cmp eax esi +
jb loc_40923E  +
inc ebx  +
mov esi eax +
cmp ebx 1 +
jb loc_4091B3  +
push esi  +
call sub_40FC50  +
pop ecx  +
mov [edi] eax +
test eax eax +
jz loc_40928A  +
mov ecx [ebp+pAce] +
push 2  +
push esi  +
push eax  +
mov [ecx] esi +
call ds:InitializeAcl  +
test eax eax +
jz loc_409293  +
xor esi esi +
mov eax [ebp+arg_0] +
push dword ptr [eax+esi*4]  +
push 10000000h  +
push 2  +
push dword ptr [edi]  +
call ds:AddAccessAllowedAce  +
mov ebx ds:GetLastError +
test eax eax +
jz loc_409243  +
lea eax [ebp+pAce] +
push eax  +
push esi  +
push dword ptr [edi]  +
call ds:GetAce  +
test eax eax +
jz loc_409243  +
mov eax [ebp+pAce] +
inc esi  +
mov byte ptr [eax+1] 0 +
cmp esi 1 +
jb loc_4091FF  +
jmp loc_40924C  +
push 0Dh  +
pop eax  +
jmp loc_4092BE  +
call ebx  +
mov [ebp+var_4] eax +
test eax eax +
jnz loc_4092AB  +
xor esi esi +
cmp [ebp+pAclInformation] esi +
jbe loc_4092BB  +
lea eax [ebp+pAceList] +
push eax  +
push esi  +
push [ebp+pAcl]  +
call ds:GetAce  +
test eax eax +
jz loc_409286  +
mov eax [ebp+pAceList] +
movzx ecx word ptr [eax+2] +
push ecx  +
push eax  +
push 0FFFFFFFFh  +
push 2  +
push dword ptr [edi]  +
call ds:AddAce  +
test eax eax +
jz loc_409286  +
inc esi  +
cmp esi [ebp+pAclInformation] +
jb loc_409253  +
jmp loc_4092BB  +
call ebx  +
jmp loc_409299  +
mov [ebp+var_4] 8 +
jmp loc_4092A5  +
call ds:GetLastError  +
mov [ebp+var_4] eax +
jmp loc_4092A5  +
mov eax [ebp+pAce] +
mov [edi] ebx +
mov [eax] ebx +
cmp [ebp+var_4] 0 +
jz loc_4092BB  +
mov eax [edi] +
test eax eax +
jz loc_4092BB  +
push eax  +
call sub_40FFB3  +
and dword ptr [edi] 0 +
pop ecx  +
mov eax [ebp+var_4] +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ds:InterlockedExchange +
push edi  +
mov edi [ebp+arg_0] +
jmp loc_4092E1  +
call ds:SwitchToThread  +
push 1  +
push dword ptr [edi]  +
call esi  +
cmp eax 1 +
jz loc_4092DB  +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push 0  +
push dword ptr [eax]  +
call ds:InterlockedExchange  +
pop ebp  +
retn 4  +
***
cmp Destination 0 +
push esi  +
jnz loc_40936F  +
push offset LibFileName  +
call ds:LoadLibraryW  +
mov esi eax +
test esi esi +
jnz loc_409343  +
call ds:GetLastError  +
test eax eax +
jle loc_409378  +
and eax 0FFFFh +
or eax 80070000h +
pop esi  +
retn   +
push 0  +
push esi  +
push offset Destination  +
call ds:InterlockedCompareExchange  +
test eax eax +
jnz loc_409368  +
mov eax Destination +
mov dword_41FAF8 eax +
mov byte_41FAFC 1 +
jmp loc_40936F  +
push esi  +
call ds:FreeLibrary  +
mov eax Destination +
mov [edi] eax +
xor eax eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+hModule] 0 +
push edi  +
lea edi [ebp+hModule] +
call sub_409312  +
pop edi  +
test eax eax +
jl locret_4093CA  +
push offset ProcName  +
push [ebp+hModule]  +
call ds:GetProcAddress  +
test eax eax +
jnz loc_4093BF  +
call ds:GetLastError  +
test eax eax +
jle locret_4093CA  +
and eax 0FFFFh +
or eax 80070000h +
jmp locret_4093CA  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call eax  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push edi  +
xor edi edi +
cmp dword_41FF2C edi +
jnz loc_409430  +
and [ebp+Exchange] edi +
lea eax [ebp+Exchange] +
push eax  +
push offset dword_405C98  +
push offset dword_405CA8  +
call sub_40937F  +
mov edi eax +
test edi edi +
jl loc_409439  +
push esi  +
mov esi [ebp+Exchange] +
push 0  +
push esi  +
push offset dword_41FF2C  +
call ds:InterlockedCompareExchange  +
test eax eax +
jnz loc_409429  +
mov eax dword_41FF2C +
mov dword_41FB00 eax +
mov byte_41FB04 1 +
jmp loc_40942F  +
mov eax [esi] +
push esi  +
call dword ptr [eax+8]  +
pop esi  +
mov eax dword_41FF2C +
mov [ebx] eax +
mov eax edi +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
cmp dword_41EEF0 0FFFFFFFFh +
jnz loc_409473  +
and [ebp+var_4] 0 +
push ebx  +
lea ebx [ebp+var_4] +
call sub_4093D3  +
xor ecx ecx +
test eax eax +
setnl cl  +
push 0FFFFFFFFh  +
push ecx  +
push offset dword_41EEF0  +
call ds:InterlockedCompareExchange  +
pop ebx  +
xor eax eax +
cmp dword_41EEF0 eax +
setnz al  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 43Ch +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
xor esi esi +
push edi  +
mov [ebp+var_42C] eax +
mov eax [ebp+arg_4] +
mov ebx ecx +
xor edi edi +
mov [ebp+var_434] ebx +
mov [ebp+var_438] eax +
mov [ebp+hModule] esi +
cmp dword_41FF30 esi +
jnz loc_40951F  +
lea eax [ebp+Exchange] +
push eax  +
push offset dword_405CB8  +
push offset dword_405CC8  +
mov [ebp+Exchange] esi +
call sub_40937F  +
cmp eax esi +
mov [ebp+hModule] eax +
jl loc_409525  +
mov edi [ebp+Exchange] +
push esi  +
push edi  +
push offset dword_41FF30  +
call ds:InterlockedCompareExchange  +
test eax eax +
jnz loc_409519  +
mov eax dword_41FF30 +
mov dword_41FB08 eax +
mov byte_41FB0C 1 +
jmp loc_40951F  +
mov eax [edi] +
push edi  +
call dword ptr [eax+8]  +
mov edi dword_41FF30 +
mov eax [ebp+hModule] +
cmp eax esi +
jl loc_40970E  +
push ebx  +
mov ebx offset dword_405CD8 +
push ebx  +
lea ecx [ebp+var_430] +
push ecx  +
push [ebp+var_438]  +
mov [ebp+var_430] esi +
push [ebp+var_42C]  +
mov eax [edi] +
push esi  +
push esi  +
push esi  +
push esi  +
push 40h  +
push edi  +
call dword ptr [eax+0Ch]  +
mov [ebp+hModule] eax +
cmp eax esi +
jz loc_4096E4  +
mov eax 100h +
push offset aV4_0_0  +
push eax  +
mov [ebp+Exchange] eax +
lea eax [ebp+var_204] +
push eax  +
call sub_4102B4  +
add esp 0Ch +
push [ebp+var_434]  +
mov eax [edi] +
push ebx  +
lea ecx [ebp+var_430] +
push ecx  +
push [ebp+var_438]  +
lea ecx [ebp+Exchange] +
push [ebp+var_42C]  +
push ecx  +
lea ecx [ebp+var_204] +
push ecx  +
push esi  +
push esi  +
push 48h  +
push edi  +
call dword ptr [eax+0Ch]  +
mov [ebp+hModule] eax +
cmp eax esi +
jz loc_4096E4  +
lea edi [ebp+hModule] +
mov [ebp+hModule] esi +
call sub_409312  +
cmp eax esi +
jl loc_40970E  +
push offset aGetrequestedru  +
push [ebp+hModule]  +
call ds:GetProcAddress  +
cmp eax esi +
jnz loc_409611  +
call ds:GetLastError  +
cmp eax esi +
jle loc_40961B  +
and eax 0FFFFh +
or eax 80070000h +
jmp loc_409619  +
mov [ebp+var_418] eax +
xor eax eax +
cmp eax esi +
jl loc_40970E  +
mov eax 104h +
lea ecx [ebp+Exchange] +
push ecx  +
push eax  +
lea ecx [ebp+var_20C] +
push ecx  +
lea ecx [ebp+var_43C] +
push ecx  +
push eax  +
mov [ebp+var_43C] eax +
mov [ebp+Exchange] eax +
lea eax [ebp+var_414] +
push eax  +
push 41h  +
push esi  +
push esi  +
push esi  +
push esi  +
call [ebp+var_418]  +
cmp eax esi +
jl loc_40970E  +
jz loc_409670  +
mov eax 80131700h +
jmp loc_40970E  +
lea ebx [ebp+hModule] +
mov [ebp+hModule] esi +
call sub_4093D3  +
cmp eax esi +
jl loc_40970E  +
push [ebp+var_434]  +
mov eax [ebp+hModule] +
mov ecx [eax] +
push offset dword_405CD8  +
lea edx [ebp+var_20C] +
push edx  +
push eax  +
call dword ptr [ecx+0Ch]  +
mov [ebp+hModule] eax +
cmp eax esi +
jnz loc_409666  +
cmp [ebp+var_42C] esi +
jz loc_4096E4  +
push [ebp+Exchange]  +
mov edi [ebp+var_438] +
lea eax [ebp+var_20C] +
push eax  +
push dword ptr [edi]  +
push [ebp+var_42C]  +
call sub_410328  +
mov eax [ebp+Exchange] +
add esp 10h +
mov [edi] eax +
mov eax [ebp+var_430] +
and al 3 +
cmp al 1 +
jnz loc_409708  +
mov eax [ebp+var_434] +
mov eax [eax] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+34h]  +
cmp eax esi +
mov [ebp+hModule] eax +
jl loc_40970E  +
mov eax [ebp+hModule] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_10] eax +
mov esi offset dword_41FB18 +
cmp Target edi +
jnz loc_4097CA  +
lea eax [ebp+var_C] +
push eax  +
mov [ebp+var_7] 0 +
mov [ebp+var_C] offset unk_41FB10 +
mov [ebp+var_8] 1 +
call sub_4092C9  +
cmp Target edi +
jnz loc_4097C1  +
and dword_41FB18 edi +
push offset dword_41FB1C  +
xor eax eax +
push offset word_41FB20  +
mov ecx esi +
mov dword_41FB1C 200h +
mov word_41FB20 ax +
call sub_409485  +
mov edi eax +
test edi edi +
jge loc_4097A7  +
lea eax [ebp+var_C] +
push eax  +
call sub_4092F7  +
jmp loc_4097CF  +
push 1  +
push offset Target  +
mov dword_41FF20 esi +
mov byte_41FF24 1 +
call ds:InterlockedExchange  +
lea eax [ebp+var_C] +
push eax  +
call sub_4092F7  +
mov eax [ebp+var_10] +
mov [eax] esi +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_40FFC3  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
call sub_409724  +
test eax eax +
jl locret_409807  +
mov ecx [ebp+var_4] +
mov ecx [ecx] +
mov edx [ebp+arg_0] +
mov [edx] ecx +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
call sub_409441  +
test al al +
jz loc_40984C  +
and [ebp+var_4] 0 +
lea eax [ebp+var_4] +
push eax  +
call sub_4097E6  +
test eax eax +
jl locret_409851  +
mov eax [ebp+var_4] +
mov ecx [eax] +
lea edx [ebp+var_8] +
push edx  +
push offset aCoeeshutdownco  +
push eax  +
call dword ptr [ecx+20h]  +
test eax eax +
jl locret_409851  +
call [ebp+var_8]  +
leave   +
retn   +
call CoEEShutDownCOM  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1618h +
call sub_419880  +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
xor edi edi +
push edi  +
push edi  +
push 1  +
push edi  +
call ds:HeapSetInformation  +
push offset ModuleName  +
call ds:GetModuleHandleW  +
push offset aSetprocessdepp  +
push eax  +
call ds:GetProcAddress  +
cmp eax edi +
jz loc_4098A6  +
push 1  +
call eax  +
call sub_40EA4A  +
push 4  +
call sub_407287  +
test eax eax +
jz loc_4098BF  +
push 1Eh  +
push 4  +
call sub_40EB49  +
lea eax [ebp+var_15E8] +
push eax  +
lea eax [ebp+var_5A0] +
push eax  +
lea eax [ebp+Name] +
push eax  +
lea eax [ebp+var_314] +
push eax  +
mov [ebp+var_15F8] edi +
mov [ebp+var_15F4] edi +
mov [ebp+DeletePrivilegeCount] edi +
mov dword_41FA0C edi +
call sub_40C8EC  +
cmp eax edi +
mov [ebp+var_15FC] eax +
jl loc_409955  +
test byte ptr dword_41FA0C 60h +
jz loc_409955  +
push edi  +
call ds:CoInitialize  +
cmp eax edi +
mov [ebp+var_15EC] eax +
jl loc_409C44  +
mov [ebp+var_15F8] 1 +
call sub_40A290  +
cmp eax edi +
mov [ebp+var_15EC] eax +
jl loc_409C44  +
mov eax dword_41FA0C +
shr eax 5 +
and al 1 +
movzx eax al +
push eax  +
call sub_409D43  +
jmp loc_409B69  +
lea eax [ebp+var_15EC] +
push eax  +
mov [ebp+var_15EC] edi +
call sub_40D963  +
push eax  +
call sub_40880E  +
cmp [ebp+var_15EC] edi +
jz loc_409985  +
push [ebp+arg_C]  +
push esi  +
push ebx  +
call [ebp+var_15EC]  +
jmp loc_409D2D  +
mov eax [ebp+var_15FC] +
cmp eax edi +
mov [ebp+var_15EC] eax +
jl loc_409C44  +
mov eax dword_41FA0C +
cmp word ptr [ebp+var_15E8] di +
jz loc_4099DA  +
test al 10h +
jz loc_4099DA  +
push edi  +
call ds:CoInitialize  +
cmp eax edi +
mov [ebp+var_15EC] eax +
jl loc_409C44  +
lea ebx [ebp+var_15E8] +
mov [ebp+var_15F8] 1 +
call sub_40CD4B  +
jmp loc_409CBA  +
cmp word ptr [ebp+var_314] di +
jz loc_409A0B  +
cmp eax edi +
jnz loc_409A0B  +
lea ebx [ebp+var_314] +
call sub_40DE46  +
cmp eax edi +
mov [ebp+var_15EC] eax +
jl loc_409C44  +
mov dword_41FAB4 edi +
jmp loc_409CBA  +
cmp word ptr [ebp+var_5A0] di +
jz loc_409A24  +
test al 8 +
jz loc_409A24  +
lea ecx [ebp+var_5A0] +
mov dword_41FA08 ecx +
mov ebx eax +
and ebx 1 +
test al 2 +
jnz loc_409A3B  +
call ds:IsDebuggerPresent  +
test eax eax +
jnz loc_409A3B  +
xor esi esi +
jmp loc_409A3E  +
xor esi esi +
inc esi  +
cmp ebx edi +
jz loc_409ACE  +
cmp esi edi +
jnz loc_409ACE  +
call ds:GetCurrentProcessId  +
push eax  +
call sub_40E6DD  +
cmp eax 3000h +
jge loc_409ACE  +
lea eax [ebp+DeletePrivilegeCount] +
push eax  +
lea eax [ebp+var_15F4] +
push eax  +
call sub_408F48  +
test eax eax +
jz loc_409A87  +
mov dword_41FAB4 2 +
jmp loc_409CBA  +
push [ebp+DeletePrivilegeCount]  +
mov ebx [ebp+var_15F4] +
push ebx  +
call sub_408A38  +
test eax eax +
jnz loc_409ABD  +
push [ebp+DeletePrivilegeCount]  +
push ebx  +
call sub_4088FA  +
test eax eax +
jnz loc_409A00  +
push 2Bh  +
push 81030002h  +
call sub_40EEB9  +
cmp ebx edi +
jz loc_409ACE  +
push ebx  +
call sub_4102A4  +
pop ecx  +
mov [ebp+var_15F4] edi +
call sub_40F7C2  +
call sub_40F81E  +
cmp esi edi +
jnz loc_409B7A  +
push offset aNohosttimeouts  +
mov eax 258h +
lea esi [ebp+DeletePrivilegeCount] +
mov dword_41FAB4 9 +
mov [ebp+DeletePrivilegeCount] edi +
call sub_40DF4D  +
cmp eax edi +
mov [ebp+var_15EC] eax +
jl loc_409C44  +
mov eax [ebp+DeletePrivilegeCount] +
imul eax eax +
push 8  +
push edi  +
push eax  +
push edi  +
push offset loc_40DF2C  +
push edi  +
lea eax [ebp+var_15EC] +
push eax  +
mov [ebp+var_15EC] edi +
call ds:CreateTimerQueueTimer  +
neg eax  +
sbb eax eax +
and eax [ebp+var_15EC] +
mov dword_41FAB8 eax +
cmp eax edi +
jnz loc_409B74  +
call sub_40EF13  +
call ds:GetLastError  +
cmp eax edi +
jle loc_409B69  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_15EC] eax +
jmp loc_409CBA  +
mov dword_41FAB4 edi +
push edi  +
call ds:CoInitialize  +
cmp eax edi +
mov [ebp+var_15EC] eax +
jl loc_409C44  +
xor esi esi +
inc esi  +
mov [ebp+var_15F8] esi +
call sub_40A290  +
cmp eax edi +
mov [ebp+var_15EC] eax +
jl loc_409C44  +
test byte ptr dword_41FA0C 1 +
jnz loc_409BBF  +
mov dword_41FAB4 esi +
jmp loc_409CBA  +
call sub_4072B4  +
cmp eax edi +
mov [ebp+var_15EC] eax +
jl loc_409C44  +
test byte ptr dword_41FA0C 4 +
jz loc_409C1D  +
lea eax [ebp+Name] +
push eax  +
push edi  +
push 2  +
call ds:OpenEventW  +
mov ebx eax +
cmp ebx edi +
jz loc_409BFD  +
push ebx  +
call ds:SetEvent  +
test eax eax +
jz loc_409BFD  +
xor esi esi +
inc esi  +
jmp loc_409BFF  +
xor esi esi +
cmp ebx edi +
jz loc_409C0A  +
push ebx  +
call ds:CloseHandle  +
cmp esi edi +
jnz loc_409C1D  +
mov dword_41FAB4 5 +
jmp loc_409CBA  +
cmp word ptr [ebp+var_314] di +
jz loc_409C4B  +
test byte ptr dword_41FA0C 2 +
jz loc_409C4B  +
lea ebx [ebp+var_314] +
call sub_40DE46  +
cmp eax edi +
mov [ebp+var_15EC] eax +
jge loc_409C4B  +
call sub_40EF13  +
jmp loc_409CBA  +
push 5  +
call sub_407287  +
test eax eax +
jz loc_409C5F  +
push 22h  +
push 5  +
call sub_40EB49  +
mov esi ds:GetMessageW +
jmp loc_409CAA  +
mov eax dword_41FAB0 +
cmp eax edi +
jz loc_409C90  +
mov eax [eax+1Ch] +
cmp eax edi +
jz loc_409C90  +
cmp [eax+28h] edi +
jz loc_409C90  +
cmp [eax+2Ch] edi +
jz loc_409C90  +
push edi  +
lea ecx [ebp+Msg] +
push ecx  +
call dword ptr [eax+38h]  +
test eax eax +
jz loc_409CAA  +
lea eax [ebp+Msg] +
push eax  +
call ds:TranslateMessage  +
lea eax [ebp+Msg] +
push eax  +
call ds:DispatchMessageW  +
push edi  +
push edi  +
push edi  +
lea eax [ebp+Msg] +
push eax  +
call esi  +
test eax eax +
jnz loc_409C67  +
call sub_407343  +
cmp [ebp+var_15F4] edi +
jz loc_409CD3  +
push [ebp+var_15F4]  +
call sub_4102A4  +
pop ecx  +
cmp [ebp+var_15F8] edi +
jz loc_409D02  +
mov ebx ds:GetModuleHandleW +
push offset aClr_dll  +
call ebx  +
test eax eax +
jnz loc_409CF7  +
push offset aMscorwks_dll  +
call ebx  +
test eax eax +
jz loc_409CFC  +
call sub_409810  +
call ds:CoUninitialize  +
cmp [ebp+var_15EC] edi +
mov esi [ebp+var_15EC] +
jl loc_409D16  +
mov esi dword_41FAB4 +
push 4  +
call sub_407287  +
test eax eax +
jz loc_409D2B  +
push esi  +
push 1Fh  +
push 4  +
call sub_40EBD4  +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0CCh +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp [ebp+arg_0] 0 +
push esi  +
jz loc_409D66  +
call sub_40A1F9  +
jmp loc_409D6B  +
call sub_409E25  +
mov esi eax +
test esi esi +
jl loc_409D8D  +
movzx eax [ebp+arg_0] +
push eax  +
push offset aRegistrysetup  +
xor edx edx +
mov ecx offset dword_41FAC4 +
call sub_40C025  +
mov esi eax +
test esi esi +
jge loc_409DB9  +
push edi  +
push esi  +
push offset aRegistrationFa  +
mov ecx 0C8h +
lea edi [ebp+var_CC] +
call sub_409DCF  +
pop ecx  +
pop ecx  +
push 10h  +
push offset MultiByteStr  +
mov eax edi +
push eax  +
push 0  +
call ds:MessageBoxA  +
pop edi  +
mov ecx [ebp+var_4] +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_40FFC3  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test ecx ecx +
jz loc_409DE2  +
cmp ecx 7FFFFFFFh +
jbe loc_409DE7  +
mov eax 80070057h +
test eax eax +
jl loc_409E1E  +
push ebx  +
push esi  +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call sub_4107F4  +
add esp 10h +
test eax eax +
jl loc_409E12  +
cmp eax esi +
ja loc_409E12  +
jnz loc_409E1A  +
mov [esi+edi] bl +
jmp loc_409E1A  +
mov [esi+edi] bl +
mov ebx 8007007Ah +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
push ecx  +
push ebx  +
push esi  +
mov esi dword_41FAF0 +
xor ebx ebx +
push edi  +
cmp esi ebx +
jz loc_409E65  +
cmp [esi] ebx +
jz loc_409E65  +
push ebx  +
call dword ptr [esi+1Ch]  +
mov ecx [esi] +
mov edx eax +
call sub_409ED7  +
cmp eax ebx +
jl loc_409EA8  +
push ebx  +
call dword ptr [esi+4]  +
cmp eax ebx +
jl loc_409EA8  +
add esi 24h +
cmp [esi] ebx +
jnz loc_409E41  +
cmp eax ebx +
jl loc_409EA8  +
mov eax dword_41FF48 +
cmp eax ebx +
jz loc_409E74  +
call eax  +
cmp eax ebx +
jl loc_409EA8  +
mov edi dword_41F9B8 +
xor eax eax +
jmp loc_409EA0  +
mov esi [edi] +
cmp esi ebx +
jz loc_409E9D  +
push ebx  +
call dword ptr [esi+1Ch]  +
mov ecx [esi] +
mov edx eax +
call sub_409ED7  +
cmp eax ebx +
jl loc_409EA8  +
push ebx  +
call dword ptr [esi+4]  +
cmp eax ebx +
jl loc_409EA8  +
add edi 4 +
cmp edi dword_41F9BC +
jb loc_409E7E  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
push 80h  +
push [ebp+arg_0]  +
call sub_4106BA  +
add esp 0Ch +
pop ebp  +
jmp sub_40B240  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1B8h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_8] eax +
push ebx  +
push esi  +
push edi  +
xor ebx ebx +
mov edi edx +
mov esi ecx +
mov [ebp+var_1A0] esi +
mov [ebp+ppv] ebx +
cmp edi ebx +
jz loc_40A158  +
mov eax [esi] +
cmp eax ds:dword_402770 +
jnz loc_409F38  +
mov eax [esi+4] +
cmp eax ds:dword_402774 +
jnz loc_409F38  +
mov eax [esi+8] +
cmp eax ds:dword_402778 +
jnz loc_409F38  +
mov eax [esi+0Ch] +
cmp eax ds:dword_40277C +
jz loc_40A158  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_4062E0  +
push 1  +
push ebx  +
push offset rclsid  +
call ds:CoCreateInstance  +
test eax eax +
jl loc_40A148  +
mov eax edi +
mov [ebp+cSubKeys] eax +
cmp [edi] ebx +
jnz loc_40A171  +
cmp [ebp+arg_0] ebx +
jnz loc_40A148  +
push 40h  +
lea eax [ebp+sz] +
push eax  +
push esi  +
call ds:StringFromGUID2  +
push offset aClsid  +
mov edi 80h +
lea eax [ebp+SubKey] +
push edi  +
push eax  +
call sub_4102B4  +
add esp 0Ch +
call sub_40B240  +
lea eax [ebp+sz] +
push eax  +
lea eax [ebp+SubKey] +
push eax  +
call sub_409EB4  +
push offset aRequiredCatego  +
lea eax [ebp+SubKey] +
push edi  +
push eax  +
call sub_4106BA  +
add esp 14h +
call sub_40B240  +
lea ecx [ebp+SubKey] +
mov eax 80000000h +
push ecx  +
mov [ebp+var_1B4] eax +
push eax  +
mov eax 20019h +
lea ecx [ebp+hKey] +
mov [ebp+var_1B0] ebx +
mov [ebp+hKey] ebx +
mov [ebp+var_1A0] ebx +
mov [ebp+cSubKeys] ebx +
call sub_40B310  +
test eax eax +
jnz loc_40A06B  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+cSubKeys] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+hKey]  +
call ds:RegQueryInfoKeyW  +
mov esi eax +
cmp [ebp+hKey] ebx +
jz loc_40A047  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov [ebp+hKey] ebx +
mov [ebp+var_1A0] ebx +
cmp esi ebx +
jnz loc_40A06B  +
cmp [ebp+cSubKeys] ebx +
jnz loc_40A06B  +
lea eax [ebp+SubKey] +
push eax  +
lea esi [ebp+var_1B4] +
call sub_40B4DF  +
push offset aClsid  +
lea eax [ebp+SubKey] +
push edi  +
push eax  +
call sub_4102B4  +
add esp 0Ch +
call sub_40B240  +
lea eax [ebp+sz] +
push eax  +
lea eax [ebp+SubKey] +
push eax  +
call sub_409EB4  +
push offset aImplementedCat  +
lea eax [ebp+SubKey] +
push edi  +
push eax  +
call sub_4106BA  +
add esp 14h +
call sub_40B240  +
lea eax [ebp+SubKey] +
push eax  +
push 80000000h  +
mov eax 20019h +
lea ecx [ebp+hKey] +
call sub_40B310  +
test eax eax +
jnz loc_40A129  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+cSubKeys] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push [ebp+hKey]  +
call ds:RegQueryInfoKeyW  +
mov esi eax +
cmp [ebp+hKey] ebx +
jz loc_40A10B  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov [ebp+hKey] ebx +
cmp esi ebx +
jnz loc_40A129  +
cmp [ebp+cSubKeys] ebx +
jnz loc_40A129  +
lea eax [ebp+SubKey] +
push eax  +
lea esi [ebp+var_1B4] +
call sub_40B4DF  +
cmp [ebp+hKey] ebx +
jz loc_40A13D  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
push 80000000h  +
call ds:RegCloseKey  +
mov eax [ebp+ppv] +
cmp eax ebx +
jz loc_40A158  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
xor eax eax +
mov ecx [ebp+var_8] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn 4  +
mov eax [ebp+cSubKeys] +
mov esi [eax+4] +
lea edi [ebp+var_19C] +
movs   +
movs   +
lea edx [ebp+var_19C] +
movs   +
push edx  +
push 1  +
push [ebp+var_1A0]  +
movs   +
cmp [ebp+arg_0] ebx +
jz loc_40A1C2  +
cmp dword ptr [eax] 1 +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
jnz loc_40A1A5  +
call dword ptr [ecx+14h]  +
jmp loc_40A1A8  +
call dword ptr [ecx+1Ch]  +
mov esi eax +
cmp esi ebx +
jge loc_40A1D8  +
mov eax [ebp+ppv] +
cmp eax ebx +
jz loc_40A1BE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax esi +
jmp loc_40A15A  +
cmp dword ptr [eax] 1 +
mov eax [ebp+ppv] +
mov ecx [eax] +
push eax  +
jnz loc_40A1D5  +
call dword ptr [ecx+18h]  +
jmp loc_40A1D8  +
call dword ptr [ecx+20h]  +
add [ebp+cSubKeys] 8 +
mov eax [ebp+cSubKeys] +
cmp [eax] ebx +
jnz loc_40A16B  +
mov esi [ebp+var_1A0] +
jmp loc_409F6A  +
***
mov edi edi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
push esi  +
mov esi dword_41FAF0 +
push edi  +
test esi esi +
jz loc_40A239  +
cmp dword ptr [esi] 0 +
jz loc_40A239  +
push 1  +
call dword ptr [esi+4]  +
test eax eax +
jl loc_40A285  +
push 1  +
call dword ptr [esi+1Ch]  +
mov ecx [esi] +
mov edx eax +
call sub_409ED7  +
test eax eax +
jl loc_40A285  +
add esi 24h +
cmp dword ptr [esi] 0 +
jnz loc_40A212  +
test eax eax +
jl loc_40A285  +
mov edi dword_41F9B8 +
xor eax eax +
jmp loc_40A267  +
mov esi [edi] +
test esi esi +
jz loc_40A264  +
push 1  +
call dword ptr [esi+4]  +
test eax eax +
jl loc_40A285  +
push 1  +
call dword ptr [esi+1Ch]  +
mov ecx [esi] +
mov edx eax +
call sub_409ED7  +
test eax eax +
jl loc_40A285  +
add edi 4 +
cmp edi dword_41F9BC +
jb loc_40A243  +
test eax eax +
jl loc_40A285  +
mov ecx dword_41FF44 +
test ecx ecx +
jz loc_40A285  +
push hModule  +
call ecx  +
pop edi  +
pop esi  +
mov esp ebp +
pop ebp  +
retn   +
***
and dword_41FAF0 0 +
push esi  +
mov esi dword_41F9B8 +
jmp loc_40A2AE  +
mov eax [esi] +
test eax eax +
jz loc_40A2AB  +
push 1  +
call dword ptr [eax+20h]  +
add esi 4 +
cmp esi dword_41F9BC +
jb loc_40A2A0  +
xor eax eax +
pop esi  +
retn   +
***
push offset dword_41BFD0  +
call sub_412220  +
and dword ptr [ebp-4] 0 +
push ecx  +
call ds:InitializeCriticalSection  +
and dword ptr [ebp-1Ch] 0 +
jmp loc_40A311  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
xor ecx ecx +
cmp eax 0C0000017h +
setz cl  +
mov eax ecx +
retn   +
***
mov esp [ebp-18h] +
mov dword ptr [ebp-1Ch] 8007000Eh +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-1Ch] +
call sub_412265  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
mov ebx eax +
push edi  +
lea edi [ebx+4] +
xor esi esi +
cmp [edi] esi +
jz loc_40A38F  +
cmp [ebx+0Ch] esi +
jz loc_40A376  +
cmp edi esi +
jnz loc_40A352  +
push esi  +
push esi  +
push 1  +
push 0C0000005h  +
call ds:RaiseException  +
mov esi [edi+8] +
jmp loc_40A36C  +
push dword ptr [esi+4]  +
call dword ptr [esi]  +
mov eax [esi+8] +
push esi  +
mov [ebp+var_4] eax +
call sub_40FFB3  +
mov esi [ebp+var_4] +
pop ecx  +
test esi esi +
jnz loc_40A357  +
and [edi+8] esi +
and [ebx+0Ch] esi +
mov eax [ebx+28h] +
cmp eax esi +
jz loc_40A383  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
add ebx 10h +
push ebx  +
call ds:DeleteCriticalSection  +
mov [edi] esi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
mov eax esi +
mov dword ptr [esi] offset off_4062A0 +
call sub_40A326  +
test byte ptr [ebp+8] 1 +
jz loc_40A3BB  +
push esi  +
call sub_40FFB3  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
add ecx 8 +
push ecx  +
call ds:InterlockedIncrement  +
retn   +
***
add ecx 8 +
push ecx  +
call ds:InterlockedDecrement  +
retn   +
***
mov eax [ecx+8] +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
mov ebx [ebp+8] +
push edi  +
xor edi edi +
cmp ebx edi +
jnz loc_40A407  +
mov eax 80004003h +
jmp loc_40A438  +
push esi  +
lea esi [ecx+28h] +
cmp [esi] edi +
jnz loc_40A429  +
push esi  +
push offset dword_4062F0  +
push 1  +
push edi  +
push offset dword_402780  +
call ds:CoCreateInstance  +
mov edi eax +
test edi edi +
jl loc_40A435  +
mov eax [esi] +
mov [ebx] eax +
mov esi [esi] +
mov eax [esi] +
push esi  +
call dword ptr [eax+4]  +
mov eax edi +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [eax] +
push offset dword_4060AC  +
push offset aAppid  +
push eax  +
call dword ptr [ecx+0Ch]  +
pop ebp  +
retn 4  +
***
mov eax 80004005h +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A48h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
xor ebx ebx +
push esi  +
mov esi edx +
push edi  +
mov edi ecx +
mov [ebp+var_A48] offset off_4062C8 +
mov [ebp+var_A44] ebx +
mov [ebp+var_A40] ebx +
mov [ebp+var_A3C] ebx +
cmp esi ebx +
jz loc_40A4CA  +
jmp loc_40A4C4  +
push dword ptr [esi+4]  +
push eax  +
lea eax [ebp+var_A48] +
push eax  +
call sub_40A8F7  +
add esi 8 +
mov eax [esi] +
cmp eax ebx +
jnz loc_40A4B1  +
mov eax [edi] +
lea ecx [ebp+var_A48] +
push ecx  +
mov ecx edi +
call dword ptr [eax+14h]  +
cmp eax ebx +
jge loc_40A4FC  +
mov esi eax +
lea ecx [ebp+var_A48] +
call sub_40A70A  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn 8  +
mov edi hModule +
mov esi 104h +
push esi  +
lea eax [ebp+LibFileName] +
push eax  +
push edi  +
call ds:GetModuleFileNameW  +
cmp eax ebx +
jnz loc_40A521  +
call sub_40A938  +
jmp loc_40A4DC  +
cmp eax esi +
jnz loc_40A52C  +
mov esi 8007007Ah +
jmp loc_40A4DE  +
lea edx [ebp+LibFileName] +
mov eax 208h +
lea ecx [ebp+var_A34] +
call sub_40A731  +
cmp edi ebx +
jz loc_40A559  +
push ebx  +
call ds:GetModuleHandleW  +
cmp edi eax +
jz loc_40A559  +
lea eax [ebp+var_A34] +
jmp loc_40A5AE  +
push 22h  +
pop eax  +
mov word ptr [ebp+String] ax +
lea eax [ebp+var_A34] +
push eax  +
lea eax [ebp+String+2] +
push eax  +
call sub_40A770  +
test al al +
jnz loc_40A584  +
mov esi 80004005h +
jmp loc_40A4DE  +
lea eax [ebp+String] +
push eax  +
call ds:lstrlenW  +
add eax eax +
push 22h  +
pop ecx  +
mov word ptr [ebp+eax+String] cx +
xor ecx ecx +
mov word ptr [ebp+eax+String+2] cx +
lea eax [ebp+String] +
push eax  +
push offset String  +
lea eax [ebp+var_A48] +
push eax  +
call sub_40A8F7  +
cmp eax ebx +
jl loc_40A4DC  +
lea eax [ebp+var_A34] +
push eax  +
push offset aModule_raw  +
lea eax [ebp+var_A48] +
push eax  +
call sub_40A8F7  +
cmp eax ebx +
jl loc_40A4DC  +
cmp [ebp+arg_4] ebx +
jz loc_40A60F  +
push 1  +
movzx edx [ebp+arg_0] +
push offset aRegistry  +
lea eax [ebp+LibFileName] +
push eax  +
lea ecx [ebp+var_A48] +
call sub_40BEBB  +
jmp loc_40A4DC  +
push ebx  +
jmp loc_40A5EF  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov edx [ebp+14h] +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
call sub_40A471  +
pop ebp  +
retn 10h  +
***
mov eax 80004001h +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_40A70A  +
test [ebp+arg_0] 1 +
jz loc_40A65D  +
push esi  +
call sub_40FFB3  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [esi] +
test eax eax +
jz loc_40A679  +
push eax  +
call sub_40FFD7  +
and dword ptr [esi] 0 +
pop ecx  +
mov eax [esi+4] +
test eax eax +
jz loc_40A68B  +
push eax  +
call sub_40FFD7  +
and dword ptr [esi+4] 0 +
pop ecx  +
and dword ptr [esi+8] 0 +
retn   +
***
mov edi edi +
push esi  +
mov esi eax +
mov eax [esi+8] +
push edi  +
xor edi edi +
test eax eax +
jle loc_40A6D0  +
test edi edi +
jl loc_40A6DA  +
cmp edi eax +
jge loc_40A6DA  +
mov eax [esi] +
push dword ptr [eax+edi*4]  +
call sub_4102A4  +
pop ecx  +
mov eax edi +
mov ecx esi +
call loc_40A952  +
push dword ptr [eax]  +
call sub_4102A4  +
mov eax [esi+8] +
inc edi  +
cmp edi eax +
pop ecx  +
jl loc_40A6A4  +
call sub_40A669  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
push 0  +
push 0  +
push 1  +
push 0C000008Ch  +
call ds:RaiseException  +
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 4 +
call loc_40A695  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi ecx +
push esi  +
mov dword ptr [esi] offset off_4062C8 +
call sub_40A6F1  +
add esi 4 +
mov eax esi +
call loc_40A695  +
call sub_40A669  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi eax +
xor edi edi +
dec esi  +
jz loc_40A763  +
movzx eax word ptr [edx] +
test ax ax +
jz loc_40A763  +
mov [ecx] ax +
inc ecx  +
inc ecx  +
cmp word ptr [edx] 27h +
jnz loc_40A75C  +
inc edi  +
cmp edi esi +
jnb loc_40A75C  +
push 27h  +
pop eax  +
mov [ecx] ax +
inc ecx  +
inc ecx  +
inc edx  +
inc edx  +
inc edi  +
cmp edi esi +
jb loc_40A73C  +
xor eax eax +
pop edi  +
mov [ecx] ax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+lpString]  +
call ds:lstrlenW  +
lea eax [eax+eax+2] +
push eax  +
push [ebp+lpString]  +
push 416h  +
push [ebp+arg_0]  +
call sub_410400  +
add esp 10h +
neg eax  +
sbb eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [esi+8] +
push 4  +
inc eax  +
push eax  +
push dword ptr [esi]  +
call sub_4104E8  +
add esp 0Ch +
test eax eax +
jnz loc_40A7C2  +
xor eax eax +
jmp loc_40A806  +
mov [esi] eax +
mov eax [esi+8] +
push 4  +
inc eax  +
push eax  +
push dword ptr [esi+4]  +
call sub_4104E8  +
add esp 0Ch +
test eax eax +
jz loc_40A7BE  +
mov [esi+4] eax +
mov eax [esi+8] +
mov ecx eax +
mov eax [esi] +
shl ecx 2 +
add eax ecx +
jz loc_40A7F2  +
mov edx [ebp+arg_0] +
mov edx [edx] +
mov [eax] edx +
mov eax [esi+4] +
add eax ecx +
jz loc_40A800  +
mov ecx [ebp+arg_4] +
mov ecx [ecx] +
mov [eax] ecx +
inc dword ptr [esi+8]  +
xor eax eax +
inc eax  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
sub esp 14h +
cmp [ebp+lpString] eax +
jz loc_40A8EC  +
cmp [ebp+arg_8] eax +
jz loc_40A8EC  +
push ebx  +
push esi  +
mov esi ds:lstrlenW +
push edi  +
push [ebp+lpString]  +
mov [ebp+var_4] eax +
call esi  +
lea edi [eax+eax+2] +
xor ecx ecx +
push 2  +
pop edx  +
mov eax edi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_40FC50  +
pop ecx  +
push [ebp+arg_8]  +
mov ebx eax +
mov [ebp+var_14] ebx +
mov [ebp+var_10] ebx +
call esi  +
lea esi [eax+eax+2] +
xor ecx ecx +
push 2  +
pop edx  +
mov eax esi +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_40FC50  +
pop ecx  +
mov [ebp+var_8] eax +
mov [ebp+var_C] eax +
test ebx ebx +
jz loc_40A8BC  +
test eax eax +
jz loc_40A8BC  +
push edi  +
push [ebp+lpString]  +
push edi  +
push ebx  +
call sub_40AA20  +
push esi  +
push [ebp+arg_8]  +
push esi  +
push [ebp+var_8]  +
call sub_40AA20  +
mov esi [ebp+arg_0] +
add esp 20h +
lea eax [ebp+var_8] +
push eax  +
lea eax [ebp+var_14] +
push eax  +
call sub_40A7A4  +
test eax eax +
jnz loc_40A8C5  +
mov [ebp+var_4] 8007000Eh +
jmp loc_40A8CD  +
and [ebp+var_10] 0 +
and [ebp+var_C] 0 +
push [ebp+var_C]  +
call sub_4102A4  +
push [ebp+var_10]  +
call sub_4102A4  +
pop ecx  +
pop ecx  +
xor eax eax +
cmp [ebp+var_4] eax +
pop edi  +
pop esi  +
setnl al  +
pop ebx  +
jmp locret_40A8EE  +
xor eax eax +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jz loc_40A92A  +
cmp [ebp+arg_8] 0 +
jz loc_40A92A  +
push [ebp+arg_8]  +
mov eax [ebp+arg_0] +
push [ebp+lpString]  +
add eax 4 +
push eax  +
call sub_40A80F  +
neg eax  +
sbb eax eax +
and eax 7FF8FFF2h +
add eax 8007000Eh +
jmp loc_40A92F  +
mov eax 80070057h +
pop ebp  +
retn 0Ch  +
***
call ds:GetLastError  +
test eax eax +
jle locret_40A94C  +
and eax 0FFFFh +
or eax 80070000h +
retn   +
***
test eax eax +
jl loc_40A962  +
cmp eax [ecx+8] +
jge loc_40A962  +
mov ecx [ecx+4] +
lea eax [ecx+eax*4] +
retn   +
***
push 0  +
push 0  +
push 1  +
push 0C000008Ch  +
call ds:RaiseException  +
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi eax +
push edi  +
add esi 4 +
xor edi edi +
cmp [esi+8] edi +
jle loc_40A9A5  +
mov eax [esi] +
push [ebp+lpString2]  +
mov eax [eax+edi*4] +
push eax  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_40A9B1  +
inc edi  +
cmp edi [esi+8] +
jl loc_40A98C  +
or eax 0FFFFFFFFh +
cmp eax 0FFFFFFFFh +
jnz loc_40A9B5  +
xor eax eax +
jmp loc_40A9BE  +
mov eax edi +
jmp loc_40A9A8  +
mov ecx esi +
call loc_40A952  +
mov eax [eax] +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpString] 0 +
jnz loc_40A9D8  +
xor eax eax +
jmp loc_40A9ED  +
push edi  +
push [ebp+lpString]  +
call ds:lstrlenW  +
push [ebp+lpString]  +
mov edi eax +
call sub_40AA44  +
pop edi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 2  +
pop ecx  +
mul  ecx +
test edx edx +
ja loc_40AA09  +
cmp eax 0FFFFFFFFh +
jbe loc_40AA10  +
mov eax 80070057h +
jmp loc_40AA17  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_410400  +
add esp 10h +
pop ebp  +
jmp sub_40B240  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [esi] +
lea ecx [eax+edi+1] +
cmp ecx eax +
push ebx  +
jle loc_40AADA  +
cmp ecx edi +
jle loc_40AADA  +
cmp ecx [esi+4] +
jl loc_40AA9A  +
mov eax [esi+4] +
cmp eax 3FFFFFFFh +
jg loc_40AADA  +
add eax eax +
cmp ecx eax +
mov [esi+4] eax +
jge loc_40AA62  +
mov ebx [esi+8] +
and [ebp+cb] 0 +
lea ecx [ebp+cb] +
push ecx  +
call sub_40A9F6  +
test eax eax +
jl loc_40AADA  +
push [ebp+cb]  +
push ebx  +
call ds:CoTaskMemRealloc  +
test eax eax +
jz loc_40AADA  +
mov [esi+8] eax +
mov eax [esi] +
test eax eax +
jl loc_40AADA  +
mov edx [esi+4] +
cmp eax edx +
jge loc_40AADA  +
mov ecx edx +
sub ecx eax +
cmp ecx edx +
jg loc_40AADA  +
lea edx [edi+edi] +
push edx  +
push [ebp+arg_0]  +
add ecx ecx +
push ecx  +
mov ecx [esi+8] +
lea eax [ecx+eax*2] +
push eax  +
call sub_40AA20  +
add [esi] edi +
mov eax [esi] +
mov ecx [esi+8] +
xor edx edx +
mov [ecx+eax*2] dx +
xor eax eax +
add esp 10h +
inc eax  +
jmp loc_40AADC  +
xor eax eax +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 64h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov esi ecx +
mov edi edx +
mov [ebp+var_64] edi +
test esi esi +
jz loc_40AD4B  +
test edi edi +
jz loc_40AD4B  +
and dword ptr [edi] 0 +
push esi  +
call ds:lstrlenW  +
add eax eax +
cmp eax 64h +
jge loc_40AB27  +
mov eax 3E8h +
and [ebp+var_60] 0 +
and [ebp+cb] 0 +
lea ecx [ebp+cb] +
push ecx  +
mov [ebp+var_5C] eax +
call sub_40A9F6  +
test eax eax +
jge loc_40AB43  +
xor eax eax +
jmp loc_40AB4C  +
push [ebp+cb]  +
call ds:CoTaskMemAlloc  +
xor ecx ecx +
mov [ebp+pv] eax +
cmp eax ecx +
jz loc_40ABEF  +
xor edx edx +
mov [eax] dx +
mov al byte_41FF4C +
mov [ebx] esi +
mov [ebp+var_51] al +
mov [ebp+var_4C] ecx +
mov [ebp+cb] ecx +
mov [ebp+var_46] cl +
mov [ebp+var_45] cl +
cmp [esi] cx +
jz loc_40ACAF  +
cmp [ebp+var_51] 1 +
jnz loc_40AC6D  +
cmp [ebp+cb] 0 +
jnz loc_40ABD9  +
mov eax [ebx] +
push offset aHkcr  +
push eax  +
call sub_410482  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_40ABD9  +
mov ecx [ebx] +
cmp eax ecx +
jnz loc_40ABD9  +
mov esi ds:CharNextW +
push ecx  +
call esi  +
push eax  +
mov [ebx] eax +
call esi  +
push eax  +
mov [ebx] eax +
call esi  +
push eax  +
mov [ebx] eax +
call esi  +
push offset aHkcuSoftwareCl  +
lea esi [ebp+var_60] +
mov [ebx] eax +
call sub_40A9C9  +
test eax eax +
jz loc_40AD3F  +
mov [ebp+var_46] 1 +
mov eax [ebx] +
push 27h  +
pop ecx  +
cmp cx [eax] +
jnz loc_40AC2F  +
cmp [ebp+var_45] 0 +
jnz loc_40AC00  +
mov [ebp+var_45] 1 +
jmp loc_40AC6D  +
push ecx  +
call ds:CoTaskMemFree  +
mov eax 8007000Eh +
jmp loc_40AD50  +
mov eax ebx +
call sub_40B553  +
test eax eax +
jz loc_40AC11  +
mov [ebp+var_45] 0 +
jmp loc_40AC35  +
push dword ptr [ebx]  +
call ds:CharNextW  +
xor edi edi +
push eax  +
inc edi  +
lea esi [ebp+var_60] +
mov [ebx] eax +
call sub_40AA44  +
test eax eax +
jz loc_40AD3F  +
cmp [ebp+var_45] 0 +
jnz loc_40AC6D  +
mov eax [ebx] +
movzx eax word ptr [eax] +
cmp ax 7Bh +
jnz loc_40AC43  +
inc [ebp+cb]  +
cmp ax 7Dh +
jnz loc_40AC6D  +
dec [ebp+cb]  +
jnz loc_40AC6D  +
cmp [ebp+var_46] 1 +
jnz loc_40AC6D  +
push offset asc_4061D8  +
lea esi [ebp+var_60] +
call sub_40A9C9  +
test eax eax +
jz loc_40AD3F  +
mov [ebp+var_46] 0 +
mov eax [ebx] +
cmp word ptr [eax] 25h +
push eax  +
jnz loc_40AC85  +
call ds:CharNextW  +
mov [ebx] eax +
cmp word ptr [eax] 25h +
jnz loc_40ACC9  +
push eax  +
xor edi edi +
inc edi  +
lea esi [ebp+var_60] +
call sub_40AA44  +
test eax eax +
jz loc_40AD3F  +
push dword ptr [ebx]  +
call ds:CharNextW  +
mov [ebx] eax +
cmp word ptr [eax] 0 +
jnz loc_40AB7D  +
mov edi [ebp+var_64] +
mov eax [ebp+pv] +
and [ebp+pv] 0 +
mov [edi] eax +
push [ebp+pv]  +
call ds:CoTaskMemFree  +
mov eax [ebp+var_4C] +
jmp loc_40AD50  +
push 25h  +
call sub_40AD63  +
mov edi eax +
test edi edi +
jz loc_40AD2A  +
mov ecx [ebx] +
sub eax ecx +
sar eax 1 +
cmp eax 1Fh +
jg loc_40AD33  +
push eax  +
push ecx  +
lea eax [ebp+String2] +
push 20h  +
push eax  +
call sub_410328  +
add esp 10h +
call sub_40B240  +
lea eax [ebp+String2] +
push eax  +
mov eax [ebx+4] +
call sub_40A979  +
test eax eax +
jz loc_40AD2A  +
push eax  +
lea esi [ebp+var_60] +
call sub_40A9C9  +
test eax eax +
jz loc_40AD3F  +
cmp [ebx] edi +
jz loc_40AC98  +
push dword ptr [ebx]  +
call ds:CharNextW  +
mov [ebx] eax +
cmp eax edi +
jnz loc_40AD17  +
jmp loc_40AC98  +
mov [ebp+var_4C] 80020009h +
jmp loc_40ACB8  +
mov [ebp+var_4C] 80004005h +
jmp loc_40ACB8  +
mov [ebp+var_4C] 8007000Eh +
jmp loc_40ACB8  +
mov eax 80004003h +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
test eax eax +
jnz loc_40AD7E  +
jmp loc_40AD8C  +
cmp cx [ebp+arg_0] +
jz loc_40AD88  +
push eax  +
call ds:CharNextW  +
movzx ecx word ptr [eax] +
test cx cx +
jnz loc_40AD71  +
jmp loc_40AD8A  +
mov esi eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr dword_41FF3C 1 +
jnz loc_40ADF9  +
or dword_41FF3C 1 +
push 8  +
pop eax  +
mov word_41FF64 ax +
mov eax 4008h +
push 13h  +
mov word_41FF6C ax +
pop eax  +
push 11h  +
mov word_41FF74 ax +
pop eax  +
mov lpString2 offset aS +
mov dword_41FF68 offset aM +
mov dword_41FF70 offset aD +
mov dword_41FF78 offset aB +
mov word_41FF7C ax +
push esi  +
xor esi esi +
push lpString2[esi*8]  +
push [ebp+lpString1]  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_40AE1D  +
inc esi  +
cmp esi 4 +
jb loc_40ADFC  +
xor eax eax +
pop esi  +
pop ebp  +
retn 8  +
mov ax word_41FF64[esi*8] +
mov ecx [ebp+arg_4] +
mov [ecx] ax +
xor eax eax +
inc eax  +
jmp loc_40AE18  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_4]  +
call sub_40FEA3  +
pop ecx  +
test eax eax +
jnz loc_40AE51  +
push 8007000Eh  +
call loc_4088A7  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+lpData] 0 +
jnz loc_40AE6F  +
push 0Dh  +
pop eax  +
jmp loc_40AEA2  +
push esi  +
mov esi [ebp+lpData] +
push edi  +
xor edi edi +
push esi  +
call ds:lstrlenW  +
inc eax  +
lea ecx [eax+eax] +
add esi ecx +
add edi ecx +
cmp eax 1 +
jnz loc_40AE76  +
mov eax [ebp+arg_0] +
push edi  +
push [ebp+lpData]  +
push 7  +
push 0  +
push [ebp+lpValueName]  +
push dword ptr [eax]  +
call ds:RegSetValueExW  +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mul  [ebp+arg_0] +
test edx edx +
ja loc_40AECA  +
cmp eax 0FFFFFFFFh +
jbe loc_40AED4  +
push 80070057h  +
call loc_4088A7  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 211Ch +
call sub_419880  +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov [ebp+lpValueName] eax +
mov eax [ebp+arg_4] +
push edi  +
mov edi ecx +
mov ebx edx +
mov [ebp+var_211C] eax +
xor esi esi +
lea eax [ebp+String1] +
mov [ebp+var_2118] edi +
mov [ebp+pulOut] ebx +
mov [ebp+var_210C] esi +
call sub_40B578  +
cmp eax esi +
jl loc_40B22A  +
lea eax [ebp+var_210C] +
push eax  +
lea eax [ebp+String1] +
push eax  +
call sub_40AD96  +
test eax eax +
jnz loc_40AF57  +
mov eax 80020009h +
jmp loc_40B22A  +
call sub_40BD40  +
lea eax [ebp+String1] +
mov ecx edi +
call sub_40B578  +
cmp eax esi +
jl loc_40B22A  +
movzx eax word ptr [ebp+var_210C] +
sub eax 8 +
jz loc_40B1D6  +
sub eax 9 +
jz loc_40B0A8  +
dec eax  +
dec eax  +
jz loc_40B076  +
sub eax 3FF5h +
jnz loc_40B217  +
lea eax [ebp+String1] +
push eax  +
call ds:lstrlenW  +
inc eax  +
inc eax  +
push 2  +
mov [ebp+lpData] esi +
call sub_40AEB9  +
cmp eax 100h +
jbe loc_40AFCF  +
push eax  +
lea eax [ebp+lpData] +
push eax  +
call sub_40AE35  +
jmp loc_40AFDB  +
lea eax [ebp+var_2104] +
mov [ebp+lpData] eax +
cmp [ebp+lpData] esi +
jz loc_40B051  +
cmp [ebp+String1] 0 +
mov esi [ebp+lpData] +
lea edi [ebp+String1] +
jz loc_40B032  +
mov ebx ds:CharNextW +
push edi  +
call ebx  +
movzx ecx word ptr [edi] +
cmp cx 5Ch +
jnz loc_40B01F  +
cmp word ptr [eax] 30h +
jnz loc_40B01F  +
xor ecx ecx +
mov [esi] cx +
inc esi  +
push eax  +
inc esi  +
call ebx  +
mov edi eax +
jmp loc_40B026  +
mov [esi] cx +
inc esi  +
inc esi  +
inc edi  +
inc edi  +
cmp word ptr [edi] 0 +
jnz loc_40AFFF  +
mov ebx [ebp+pulOut] +
xor eax eax +
mov [esi] ax +
mov [esi+2] ax +
push [ebp+lpData]  +
push [ebp+lpValueName]  +
push ebx  +
call sub_40AE5F  +
mov esi eax +
jmp loc_40B054  +
push 0Eh  +
pop esi  +
lea eax [ebp+var_2104] +
cmp [ebp+lpData] eax +
jz loc_40B202  +
lea eax [ebp+lpData] +
call sub_40AEAB  +
jmp loc_40B202  +
lea eax [ebp+pulOut] +
push eax  +
push esi  +
push esi  +
lea eax [ebp+String1] +
push eax  +
call ds:VarUI4FromStr  +
mov eax [ebp+pulOut] +
mov [ebp+var_210C] eax +
push 4  +
lea eax [ebp+var_210C] +
push eax  +
push 4  +
jmp loc_40B1F1  +
lea eax [ebp+String1] +
push eax  +
call ds:lstrlenW  +
mov [ebp+var_210C] eax +
test al 1 +
jz loc_40B0C9  +
mov eax 80004005h +
jmp loc_40B22A  +
cdq   +
sub eax edx +
mov edi eax +
sar edi 1 +
push 1  +
mov eax edi +
mov [ebp+lpData] esi +
call sub_40AEB9  +
cmp eax 100h +
jbe loc_40B0F5  +
push eax  +
lea eax [ebp+lpData] +
push eax  +
call sub_40AE35  +
jmp loc_40B101  +
lea eax [ebp+var_2104] +
mov [ebp+lpData] eax +
cmp [ebp+lpData] esi +
jnz loc_40B120  +
lea eax [ebp+var_2104] +
test eax eax +
jz loc_40B0BF  +
lea eax [ebp+lpData] +
call sub_40AEAB  +
jmp loc_40B0BF  +
push edi  +
push esi  +
push [ebp+lpData]  +
call sub_413F70  +
add esp 0Ch +
cmp [ebp+var_210C] esi +
jle loc_40B19F  +
movzx ecx [ebp+esi*2+String1] +
mov eax esi +
cdq   +
sub eax edx +
sar eax 1 +
add eax [ebp+lpData] +
movzx edx cx +
cmp edx 30h +
jl loc_40B17D  +
cmp edx 39h +
jle loc_40B176  +
cmp edx 40h +
jle loc_40B17D  +
cmp edx 46h +
jle loc_40B171  +
add edx 0FFFFFF9Fh +
cmp edx 5 +
ja loc_40B17D  +
sub cl 57h +
jmp loc_40B179  +
sub cl 37h +
jmp loc_40B179  +
sub cl 30h +
mov dl cl +
jmp loc_40B17F  +
xor dl dl +
mov ebx esi +
and ebx 1 +
shl ebx 2 +
push 4  +
pop ecx  +
sub ecx ebx +
shl dl cl +
or [eax] dl +
inc esi  +
cmp esi [ebp+var_210C] +
jl loc_40B138  +
mov ebx [ebp+pulOut] +
mov eax [ebx] +
push edi  +
push [ebp+lpData]  +
push 3  +
push 0  +
push [ebp+lpValueName]  +
push eax  +
call ds:RegSetValueExW  +
mov esi eax +
lea eax [ebp+var_2104] +
cmp [ebp+lpData] eax +
jz loc_40B202  +
lea eax [ebp+lpData] +
call sub_40AEAB  +
jmp loc_40B202  +
lea eax [ebp+String1] +
push eax  +
call ds:lstrlenW  +
lea eax [eax+eax+2] +
push eax  +
lea eax [ebp+String1] +
push eax  +
push 1  +
push esi  +
push [ebp+lpValueName]  +
push dword ptr [ebx]  +
call ds:RegSetValueExW  +
mov esi eax +
test esi esi +
jz loc_40B20F  +
mov eax esi +
call sub_40B53F  +
jmp loc_40B22A  +
mov edi [ebp+var_2118] +
xor esi esi +
mov eax [ebp+var_211C] +
mov ecx edi +
call sub_40B578  +
cmp eax esi +
jl loc_40B22A  +
xor eax eax +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn 8  +
***
test eax eax +
jz locret_40B270  +
cmp eax 0Ch +
jz loc_40B269  +
cmp eax 16h +
jz loc_40B262  +
cmp eax 22h +
jz loc_40B262  +
cmp eax 50h +
jz locret_40B270  +
push 80004005h  +
call loc_4088A7  +
push 80070057h  +
jmp loc_40B25D  +
push 8007000Eh  +
jmp loc_40B25D  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 2004h +
call sub_419880  +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
cmp word ptr [esi] 3Dh +
push edi  +
mov edi ecx +
jnz loc_40B2C6  +
mov eax esi +
call sub_40B578  +
test eax eax +
jl loc_40B2C8  +
call sub_40BD40  +
lea eax [ebp+var_2004] +
mov ecx edi +
call sub_40B578  +
test eax eax +
jl loc_40B2C8  +
mov eax esi +
mov ecx edi +
call sub_40B578  +
test eax eax +
jl loc_40B2C8  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop edi  +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi offset off_4060F4 +
push dword ptr [esi]  +
push [ebp+lpString1]  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_40B307  +
add esi 4 +
cmp esi offset dword_406124 +
jl loc_40B2E5  +
xor eax eax +
inc eax  +
pop esi  +
pop ebp  +
retn 4  +
xor eax eax +
jmp loc_40B302  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+phkResult] 0 +
push esi  +
push edi  +
mov edi eax +
lea eax [ebp+phkResult] +
push eax  +
push edi  +
push 0  +
push [ebp+lpSubKey]  +
mov esi ecx +
push [ebp+hKey]  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_40B34A  +
call sub_40B4C3  +
mov ecx [ebp+phkResult] +
and edi 300h +
mov [esi] ecx +
mov [esi+4] edi +
pop edi  +
pop esi  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 228h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_8] eax +
push ebx  +
push esi  +
mov esi ecx +
mov ecx [ebp+arg_0] +
mov eax [esi+4] +
push edi  +
push ecx  +
push dword ptr [esi]  +
mov [ebp+lpSubKey] ecx +
xor edi edi +
or eax 2001Fh +
lea ecx [ebp+hKey] +
mov [ebp+hKey] edi +
mov [ebp+var_210] edi +
call sub_40B310  +
mov ebx eax +
cmp ebx edi +
jz loc_40B3BD  +
cmp [ebp+hKey] edi +
jz loc_40B3B6  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax ebx +
jmp loc_40B455  +
mov ebx ds:RegEnumKeyExW +
jmp loc_40B3E5  +
lea eax [ebp+var_20C] +
push eax  +
lea ecx [ebp+hKey] +
call sub_40B355  +
mov [ebp+var_220] eax +
cmp eax edi +
jnz loc_40B466  +
lea eax [ebp+var_228] +
push eax  +
push edi  +
push edi  +
push edi  +
lea eax [ebp+var_218] +
push eax  +
lea eax [ebp+var_20C] +
push eax  +
push edi  +
push [ebp+hKey]  +
mov [ebp+var_218] 100h +
call ebx  +
test eax eax +
jz loc_40B3C5  +
mov ebx ds:RegCloseKey +
cmp [ebp+hKey] edi +
jz loc_40B430  +
push [ebp+hKey]  +
call ebx  +
mov [ebp+hKey] edi +
push [ebp+lpSubKey]  +
mov [ebp+var_210] edi +
call sub_40B4DF  +
mov esi eax +
cmp [ebp+hKey] edi +
jz loc_40B453  +
push [ebp+hKey]  +
call ebx  +
mov eax esi +
mov ecx [ebp+var_8] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn 4  +
cmp [ebp+hKey] edi +
jz loc_40B47A  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov eax [ebp+var_220] +
jmp loc_40B455  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
lea ecx [ebp+cSubKeys] +
push ecx  +
push eax  +
push eax  +
push eax  +
push [ebp+hKey]  +
mov [ebp+cSubKeys] eax +
call ds:RegQueryInfoKeyW  +
test eax eax +
jz loc_40B4B1  +
xor eax eax +
jmp locret_40B4BA  +
xor eax eax +
cmp eax [ebp+cSubKeys] +
sbb eax eax +
neg eax  +
leave   +
retn 4  +
***
mov ecx [esi] +
xor eax eax +
test ecx ecx +
jz loc_40B4D5  +
push ecx  +
call ds:RegCloseKey  +
and dword ptr [esi] 0 +
and dword ptr [esi+4] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp byte_41FF58 0 +
jnz loc_40B514  +
push offset aAdvapi32_dll  +
call ds:GetModuleHandleW  +
test eax eax +
jz loc_40B50D  +
push offset aRegdeletekeyex  +
push eax  +
call ds:GetProcAddress  +
mov dword_41FF5C eax +
mov byte_41FF58 1 +
mov eax dword_41FF5C +
test eax eax +
jz loc_40B52B  +
push 0  +
push dword ptr [esi+4]  +
push [ebp+lpSubKey]  +
push dword ptr [esi]  +
call eax  +
jmp loc_40B536  +
push [ebp+lpSubKey]  +
push dword ptr [esi]  +
call ds:RegDeleteKeyW  +
pop ebp  +
retn 4  +
***
test eax eax +
jle locret_40B54D  +
and eax 0FFFFh +
or eax 80070000h +
retn   +
***
mov eax [eax] +
push 27h  +
pop ecx  +
cmp cx [eax] +
jnz loc_40B570  +
push eax  +
call ds:CharNextW  +
push 27h  +
pop ecx  +
cmp cx [eax] +
jz loc_40B570  +
xor eax eax +
inc eax  +
retn   +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
push edi  +
mov edi ecx +
mov esi eax +
call sub_40BD40  +
mov eax [edi] +
movzx ecx word ptr [eax] +
xor edx edx +
cmp dx cx +
jnz loc_40B5A0  +
mov eax 80020009h +
jmp loc_40B682  +
push ebx  +
push 27h  +
pop edx  +
mov [ebp+var_8] esi +
cmp dx cx +
jnz loc_40B62A  +
mov ebx ds:CharNextW +
push eax  +
call ebx  +
mov [edi] eax +
jmp loc_40B60D  +
mov eax edi +
call sub_40B553  +
test eax eax +
jnz loc_40B614  +
mov eax [edi] +
push 27h  +
pop ecx  +
cmp cx [eax] +
jnz loc_40B5D3  +
push eax  +
call ebx  +
mov [edi] eax +
mov eax [edi] +
push eax  +
mov [ebp+var_4] eax +
call ebx  +
mov edx [ebp+var_8] +
mov [edi] eax +
sub eax [ebp+var_4] +
add edx 2000h +
sar eax 1 +
lea ecx [esi+eax*2+2] +
cmp ecx edx +
jnb loc_40B686  +
test eax eax +
jle loc_40B60B  +
mov ecx [ebp+var_4] +
mov dx [ecx] +
mov [esi] dx +
inc esi  +
inc esi  +
inc ecx  +
inc ecx  +
dec eax  +
jnz loc_40B5FE  +
mov eax [edi] +
xor ecx ecx +
cmp cx [eax] +
jnz loc_40B5B9  +
mov eax [edi] +
xor ecx ecx +
cmp cx [eax] +
jz loc_40B686  +
xor eax eax +
mov [esi] ax +
push dword ptr [edi]  +
call ebx  +
mov [edi] eax +
jmp loc_40B67F  +
mov ebx [edi] +
movzx eax word ptr [ebx] +
cmp eax 9 +
jl loc_40B63C  +
push eax  +
call sub_40BD19  +
jmp loc_40B63E  +
xor eax eax +
test eax eax +
jnz loc_40B67A  +
push ebx  +
call ds:CharNextW  +
mov edx [ebp+var_8] +
mov [edi] eax +
sub eax ebx +
sar eax 1 +
lea ecx [esi+eax*2+2] +
add edx 2000h +
cmp ecx edx +
jnb loc_40B686  +
test eax eax +
jle loc_40B671  +
mov cx [ebx] +
mov [esi] cx +
inc esi  +
inc esi  +
inc ebx  +
inc ebx  +
dec eax  +
jnz loc_40B664  +
mov eax [edi] +
xor ecx ecx +
cmp cx [eax] +
jnz loc_40B62A  +
xor eax eax +
mov [esi] ax +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn   +
mov eax 80020009h +
jmp loc_40B681  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 2254h +
call sub_419880  +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
and [ebp+var_221C] 0 +
and [ebp+var_2218] 0 +
push ebx  +
mov ebx [ebp+arg_0] +
mov [ebp+var_2220] eax +
mov eax [ebp+arg_C] +
push esi  +
mov [ebp+var_223C] eax +
push edi  +
mov eax ebx +
mov [ebp+var_2214] ecx +
call sub_40B578  +
mov edi eax +
test edi edi +
jl loc_40BB45  +
cmp word ptr [ebx] 7Dh +
jz loc_40BB43  +
mov edi ds:lstrcmpiW +
push offset String2  +
push ebx  +
mov [ebp+phkResult] 1 +
call edi  +
mov esi eax +
neg esi  +
push offset aForceremove  +
sbb esi esi +
push ebx  +
inc esi  +
call edi  +
test eax eax +
jz loc_40B727  +
xor edi edi +
cmp esi edi +
jz loc_40B7E0  +
mov ecx [ebp+var_2214] +
mov eax ebx +
call sub_40B578  +
mov edi eax +
test edi edi +
jl loc_40BB2E  +
xor edi edi +
cmp [ebp+arg_8] edi +
jz loc_40B7DE  +
push 5Ch  +
mov eax ebx +
mov [ebp+var_2238] edi +
mov [ebp+var_2234] edi +
call sub_40AD63  +
test eax eax +
jnz loc_40BC96  +
push ebx  +
call sub_40B2DA  +
test eax eax +
jz loc_40B79A  +
mov eax [ebp+var_2220] +
push ebx  +
lea ecx [ebp+var_2238] +
mov [ebp+var_2238] eax +
mov [ebp+var_2234] edi +
call sub_40B355  +
mov [ebp+var_2238] edi +
mov [ebp+var_2234] edi +
cmp esi edi +
jz loc_40B7D8  +
mov ecx [ebp+var_2214] +
mov eax ebx +
call sub_40B578  +
mov edi eax +
test edi edi +
jl loc_40BB2E  +
mov ecx [ebp+var_2214] +
mov esi ebx +
call sub_40B276  +
mov edi eax +
test edi edi +
jl loc_40BB2E  +
and [ebp+var_2234] 0 +
jmp loc_40BC37  +
mov [ebp+var_2234] edi +
xor edi edi +
push offset aNoremove  +
push ebx  +
call ds:lstrcmpiW  +
test eax eax +
jnz loc_40B80F  +
and [ebp+phkResult] eax +
mov ecx [ebp+var_2214] +
mov eax ebx +
call sub_40B578  +
mov edi eax +
test edi edi +
jl loc_40BB2E  +
xor edi edi +
push offset aVal  +
push ebx  +
call ds:lstrcmpiW  +
test eax eax +
jnz loc_40B93C  +
mov ecx [ebp+var_2214] +
lea eax [ebp+ValueName] +
call sub_40B578  +
mov edi eax +
xor esi esi +
cmp edi esi +
jl loc_40BB2E  +
mov ecx [ebp+var_2214] +
mov eax ebx +
call sub_40B578  +
mov edi eax +
cmp edi esi +
jl loc_40BB2E  +
cmp word ptr [ebx] 3Dh +
jnz loc_40BCB4  +
cmp [ebp+arg_8] esi +
jz loc_40B8B2  +
mov eax [ebp+var_2220] +
mov ecx [ebp+var_2214] +
mov [ebp+var_224C] eax +
push ebx  +
lea eax [ebp+ValueName] +
push eax  +
lea edx [ebp+var_224C] +
mov [ebp+var_2248] esi +
call sub_40AEDD  +
mov edi eax +
cmp edi esi +
mov [ebp+var_224C] esi +
mov [ebp+var_2248] esi +
jl loc_40BD09  +
mov [ebp+var_2248] esi +
jmp loc_40BC37  +
cmp [ebp+arg_C] esi +
jnz loc_40B92A  +
cmp [ebp+phkResult] esi +
jz loc_40B92A  +
push esi  +
push [ebp+var_2220]  +
mov eax 20006h +
lea ecx [ebp+hKey] +
mov [ebp+hKey] esi +
mov [ebp+var_222C] esi +
call sub_40B310  +
cmp eax esi +
jnz loc_40BCBC  +
lea eax [ebp+ValueName] +
push eax  +
push [ebp+hKey]  +
call ds:RegDeleteValueW  +
cmp eax esi +
jz loc_40B90A  +
cmp eax 2 +
jnz loc_40BCBC  +
cmp [ebp+hKey] esi +
jz loc_40B924  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov [ebp+hKey] esi +
mov [ebp+var_222C] esi +
mov ecx [ebp+var_2214] +
mov esi ebx +
call sub_40B276  +
jmp loc_40BC7D  +
push 5Ch  +
mov eax ebx +
call sub_40AD63  +
test eax eax +
jnz loc_40BC96  +
cmp [ebp+arg_8] edi +
jz loc_40BA2E  +
push ebx  +
push [ebp+var_2220]  +
mov esi 2001Fh +
mov eax esi +
lea ecx [ebp+var_221C] +
call sub_40B310  +
test eax eax +
jz loc_40B9EA  +
push ebx  +
push [ebp+var_2220]  +
lea eax [esi-6] +
lea ecx [ebp+var_221C] +
call sub_40B310  +
test eax eax +
jz loc_40B9EA  +
lea eax [ebp+dwDisposition] +
push eax  +
lea eax [ebp+phkResult] +
push eax  +
push edi  +
push esi  +
push edi  +
push edi  +
push edi  +
push ebx  +
push [ebp+var_2220]  +
mov [ebp+phkResult] edi +
call ds:RegCreateKeyExW  +
cmp eax edi +
jnz loc_40BCE0  +
xor eax eax +
cmp [ebp+var_221C] edi +
jz loc_40B9D0  +
push [ebp+var_221C]  +
call ds:RegCloseKey  +
mov ecx [ebp+phkResult] +
mov [ebp+var_221C] ecx +
mov [ebp+var_2218] edi +
cmp eax edi +
jnz loc_40BCE0  +
mov ecx [ebp+var_2214] +
mov eax ebx +
call sub_40B578  +
mov edi eax +
test edi edi +
jl loc_40BB2E  +
cmp word ptr [ebx] 3Dh +
jnz loc_40BC37  +
mov ecx [ebp+var_2214] +
push ebx  +
push 0  +
lea edx [ebp+var_221C] +
call sub_40AEDD  +
mov edi eax +
test edi edi +
jl loc_40BB2E  +
jmp loc_40BC37  +
cmp [ebp+arg_C] edi +
jnz loc_40BA52  +
push ebx  +
push [ebp+var_2220]  +
mov eax 20019h +
lea ecx [ebp+var_221C] +
call sub_40B310  +
mov [ebp+var_2228] eax +
jmp loc_40BA5C  +
mov [ebp+var_2228] 2 +
cmp [ebp+var_2228] edi +
jz loc_40BA6B  +
mov [ebp+arg_C] 1 +
push 0FFFFFFFFh  +
push ebx  +
lea eax [ebp+SubKey] +
push 104h  +
push eax  +
call sub_410328  +
add esp 10h +
call sub_40B240  +
mov ecx [ebp+var_2214] +
mov eax ebx +
call sub_40B578  +
mov edi eax +
test edi edi +
jl loc_40BB2E  +
mov ecx [ebp+var_2214] +
mov esi ebx +
call sub_40B276  +
mov edi eax +
test edi edi +
jl loc_40BB2E  +
cmp word ptr [ebx] 7Bh +
jnz loc_40BAF9  +
push ebx  +
call ds:lstrlenW  +
cmp eax 1 +
jnz loc_40BAF9  +
push [ebp+arg_C]  +
mov ecx [ebp+var_2214] +
push 0  +
push [ebp+var_221C]  +
push ebx  +
call sub_40B692  +
mov edi eax +
test edi edi +
jge loc_40BAE6  +
cmp [ebp+arg_C] 0 +
jz loc_40BB2E  +
mov ecx [ebp+var_2214] +
mov eax ebx +
call sub_40B578  +
mov edi eax +
test edi edi +
jl loc_40BB2E  +
cmp [ebp+var_2228] 2 +
mov eax [ebp+var_223C] +
mov [ebp+arg_C] eax +
jz loc_40BC87  +
mov eax [ebp+var_2228] +
xor esi esi +
cmp eax esi +
jz loc_40BB56  +
cmp [ebp+var_223C] esi +
jnz loc_40BC87  +
call sub_40B53F  +
mov edi eax +
cmp [ebp+var_221C] 0 +
jz loc_40BB43  +
push [ebp+var_221C]  +
call ds:RegCloseKey  +
mov eax edi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn 10h  +
cmp [ebp+var_223C] esi +
jz loc_40BBA4  +
push [ebp+var_221C]  +
call sub_40B487  +
test eax eax +
jz loc_40BBA4  +
lea eax [ebp+SubKey] +
push eax  +
call sub_40B2DA  +
test eax eax +
jz loc_40BC87  +
cmp [ebp+phkResult] esi +
jz loc_40BC87  +
lea eax [ebp+SubKey] +
push eax  +
lea ecx [ebp+var_221C] +
call sub_40B355  +
jmp loc_40BC87  +
push [ebp+var_221C]  +
call sub_40B487  +
mov [ebp+var_2228] eax +
xor eax eax +
cmp [ebp+var_221C] esi +
jz loc_40BBD1  +
push [ebp+var_221C]  +
call ds:RegCloseKey  +
mov [ebp+var_221C] esi +
mov [ebp+var_2218] esi +
cmp eax esi +
jnz loc_40BD02  +
cmp [ebp+phkResult] esi +
jz loc_40BC87  +
cmp [ebp+var_2228] esi +
jnz loc_40BC87  +
mov eax [ebp+var_2220] +
and [ebp+var_2240] esi +
mov [ebp+var_2244] eax +
lea eax [ebp+SubKey] +
push eax  +
lea esi [ebp+var_2244] +
call sub_40B4DF  +
and [ebp+var_2244] 0 +
and [ebp+var_2240] 0 +
test eax eax +
jnz loc_40BB27  +
and [ebp+var_2240] eax +
cmp [ebp+arg_8] 0 +
jz loc_40BC87  +
cmp word ptr [ebx] 7Bh +
jnz loc_40BC87  +
push ebx  +
call ds:lstrlenW  +
cmp eax 1 +
jnz loc_40BC87  +
mov ecx [ebp+var_2214] +
push 0  +
push [ebp+arg_8]  +
push [ebp+var_221C]  +
push ebx  +
call sub_40B692  +
mov edi eax +
test edi edi +
jl loc_40BB2E  +
mov ecx [ebp+var_2214] +
mov eax ebx +
call sub_40B578  +
mov edi eax +
test edi edi +
jl loc_40BB2E  +
cmp word ptr [ebx] 7Dh +
jnz loc_40B6F2  +
jmp loc_40BB2E  +
cmp [ebp+var_221C] edi +
jz loc_40BCAA  +
push [ebp+var_221C]  +
call ds:RegCloseKey  +
mov eax 80020009h +
jmp loc_40BB45  +
cmp [ebp+var_221C] esi +
jmp loc_40BC9C  +
call sub_40B53F  +
mov edi eax +
cmp [ebp+hKey] esi +
jz loc_40BB2E  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
jmp loc_40BB2E  +
call sub_40B53F  +
mov esi eax +
cmp [ebp+var_221C] edi +
jz loc_40BCFB  +
push [ebp+var_221C]  +
call ds:RegCloseKey  +
mov eax esi +
jmp loc_40BB45  +
call sub_40B53F  +
mov edi eax +
cmp [ebp+var_221C] esi +
jmp loc_40BB35  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0Ah +
jle loc_40BD34  +
cmp [ebp+arg_0] 0Dh +
jz loc_40BD34  +
cmp [ebp+arg_0] 20h +
jz loc_40BD34  +
xor eax eax +
jmp loc_40BD37  +
xor eax eax +
inc eax  +
pop ebp  +
retn 4  +
***
mov edi edi +
push esi  +
mov esi [edi] +
movzx eax word ptr [esi] +
cmp eax 9 +
jl loc_40BD55  +
push eax  +
call sub_40BD19  +
jmp loc_40BD57  +
xor eax eax +
test eax eax +
jz loc_40BD66  +
push esi  +
call ds:CharNextW  +
mov [edi] eax +
jmp loc_40BD43  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
mov eax 2014h +
call sub_419880  +
mov eax dword_41E3B0 +
xor eax esp +
mov [esp+arg_2008] eax +
and [esp+pv] 0 +
push ebx  +
push esi  +
push edi  +
mov edi edx +
lea edx [esp+0Ch+pv] +
mov ebx edi +
call sub_40AAE6  +
mov ebx eax +
test ebx ebx +
jl loc_40BE62  +
mov eax [esp+0Ch+pv] +
mov [edi] eax +
jmp loc_40BEA2  +
lea eax [esp+0Ch+String1] +
mov ecx edi +
call sub_40B578  +
mov ebx eax +
test ebx ebx +
jl loc_40BE56  +
xor esi esi +
push ds:off_406128[esi*8]  +
lea eax [esp+10h+String1] +
push eax  +
call ds:lstrcmpiW  +
test eax eax +
jz loc_40BE79  +
inc esi  +
cmp esi 0Eh +
jb loc_40BDCE  +
and dword ptr [esp+10h] 0 +
xor esi esi +
cmp [esp+10h] esi +
jz loc_40BEAF  +
lea eax [esp+0Ch+String1] +
mov ecx edi +
call sub_40B578  +
mov ebx eax +
cmp ebx esi +
jl loc_40BE56  +
push 7Bh  +
pop eax  +
cmp ax [esp+0Ch+String1] +
jnz loc_40BEAF  +
lea eax [esp+0Ch+String1] +
mov ecx edi +
cmp [ebp+pv] esi +
jz loc_40BE89  +
mov esi [edi] +
push 0  +
push [ebp+pv]  +
push dword ptr [esp+18h]  +
push eax  +
call sub_40B692  +
mov ebx eax +
test ebx ebx +
jge loc_40BE9B  +
push 0  +
push 0  +
push dword ptr [esp+18h]  +
lea eax [esp+18h+String1] +
push eax  +
mov ecx edi +
mov [edi] esi +
call sub_40B692  +
push [esp+0Ch+pv]  +
call ds:CoTaskMemFree  +
mov eax ebx +
mov ecx [esp+0Ch+arg_2008] +
pop edi  +
pop esi  +
pop ebx  +
xor ecx esp +
call sub_40FFC3  +
mov esp ebp +
pop ebp  +
retn 4  +
mov eax ds:dword_40612C[esi*8] +
mov [esp+10h] eax +
jmp loc_40BDF3  +
push esi  +
push esi  +
push dword ptr [esp+18h]  +
push eax  +
call sub_40B692  +
mov ebx eax +
cmp ebx esi +
jl loc_40BE56  +
call sub_40BD40  +
mov eax [edi] +
xor ecx ecx +
cmp cx [eax] +
jnz loc_40BDB7  +
jmp loc_40BE56  +
mov ebx 80020009h +
jmp loc_40BE56  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 414h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpLibFileName] +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
push edi  +
xor esi esi +
push 2  +
push esi  +
push eax  +
mov edi edx +
mov [ebp+var_410] ecx +
mov [ebp+var_414] esi +
mov [ebp+lpWideCharStr] esi +
call ds:LoadLibraryExW  +
mov [ebp+hLibModule] eax +
cmp eax esi +
jnz loc_40BF0F  +
call sub_40A938  +
mov esi eax +
jmp loc_40BFF4  +
push ebx  +
push edi  +
push eax  +
call ds:FindResourceW  +
mov edi eax +
cmp edi esi +
jnz loc_40BF28  +
call sub_40A938  +
jmp loc_40BFE6  +
push edi  +
push [ebp+hLibModule]  +
call ds:LoadResource  +
mov ebx eax +
cmp ebx esi +
jz loc_40BF1E  +
push edi  +
push [ebp+hLibModule]  +
call ds:SizeofResource  +
mov edi eax +
lea eax [edi+1] +
cmp eax edi +
jnb loc_40BF74  +
lea eax [ebp+var_404] +
cmp [ebp+lpWideCharStr] eax +
jz loc_40BF6A  +
lea eax [ebp+lpWideCharStr] +
call sub_40AEAB  +
mov eax 8007000Eh +
jmp loc_40C00F  +
push 2  +
call sub_40AEB9  +
cmp eax 400h +
jbe loc_40BF91  +
push eax  +
lea eax [ebp+lpWideCharStr] +
push eax  +
call sub_40AE35  +
jmp loc_40BF9D  +
lea eax [ebp+var_404] +
mov [ebp+lpWideCharStr] eax +
cmp [ebp+lpWideCharStr] esi +
jnz loc_40BFAC  +
mov esi 8007000Eh +
jmp loc_40BFE8  +
push edi  +
push [ebp+lpWideCharStr]  +
push edi  +
push ebx  +
push esi  +
push 3  +
call ds:MultiByteToWideChar  +
cmp eax esi +
jz loc_40BF1E  +
mov edx [ebp+lpWideCharStr] +
push [ebp+pv]  +
xor ecx ecx +
mov [edx+eax*2] cx +
mov ecx [ebp+lpWideCharStr] +
lea edx [ebp+var_414] +
call sub_40BD6D  +
mov esi eax +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
lea eax [ebp+var_404] +
cmp [ebp+lpWideCharStr] eax +
jz loc_40C00D  +
lea eax [ebp+lpWideCharStr] +
call sub_40AEAB  +
mov eax esi +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0A4Ch +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+lpString] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov esi edx +
mov ebx ecx +
mov [ebp+var_A38] eax +
mov [ebp+var_A4C] offset off_4062C8 +
mov [ebp+var_A48] edi +
mov [ebp+var_A44] edi +
mov [ebp+var_A40] edi +
cmp esi edi +
jz loc_40C087  +
jmp loc_40C081  +
push dword ptr [esi+4]  +
push eax  +
lea eax [ebp+var_A4C] +
push eax  +
call sub_40A8F7  +
add esi 8 +
mov eax [esi] +
cmp eax edi +
jnz loc_40C06E  +
mov eax [ebx] +
lea ecx [ebp+var_A4C] +
push ecx  +
mov ecx ebx +
call dword ptr [eax+14h]  +
cmp eax edi +
jge loc_40C0B9  +
mov esi eax +
lea ecx [ebp+var_A4C] +
call sub_40A70A  +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn 8  +
mov ebx hModule +
mov esi 104h +
push esi  +
lea eax [ebp+LibFileName] +
push eax  +
push ebx  +
call ds:GetModuleFileNameW  +
cmp eax edi +
jnz loc_40C0DE  +
call sub_40A938  +
jmp loc_40C099  +
cmp eax esi +
jnz loc_40C0E9  +
mov esi 8007007Ah +
jmp loc_40C09B  +
lea edx [ebp+LibFileName] +
mov eax 208h +
lea ecx [ebp+var_A34] +
call sub_40A731  +
cmp ebx edi +
jz loc_40C116  +
push edi  +
call ds:GetModuleHandleW  +
cmp ebx eax +
jz loc_40C116  +
lea eax [ebp+var_A34] +
jmp loc_40C16B  +
push 22h  +
pop eax  +
mov word ptr [ebp+String] ax +
lea eax [ebp+var_A34] +
push eax  +
lea eax [ebp+String+2] +
push eax  +
call sub_40A770  +
test al al +
jnz loc_40C141  +
mov esi 80004005h +
jmp loc_40C09B  +
lea eax [ebp+String] +
push eax  +
call ds:lstrlenW  +
add eax eax +
push 22h  +
pop ecx  +
mov word ptr [ebp+eax+String] cx +
xor ecx ecx +
mov word ptr [ebp+eax+String+2] cx +
lea eax [ebp+String] +
push eax  +
push offset String  +
lea eax [ebp+var_A4C] +
push eax  +
call sub_40A8F7  +
cmp eax edi +
jl loc_40C099  +
lea eax [ebp+var_A34] +
push eax  +
push offset aModule_raw  +
lea eax [ebp+var_A4C] +
push eax  +
call sub_40A8F7  +
cmp eax edi +
jl loc_40C099  +
mov edx [ebp+var_A38] +
cmp [ebp+arg_4] edi +
jz loc_40C1C2  +
cmp edx edi +
jz loc_40C1B8  +
push 1  +
jmp loc_40C1C7  +
mov eax 80070057h +
jmp loc_40C099  +
cmp edx edi +
jz loc_40C1B8  +
push edi  +
push offset aRegistry  +
lea eax [ebp+LibFileName] +
push eax  +
lea ecx [ebp+var_A4C] +
call sub_40BEBB  +
jmp loc_40C099  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov edx [ebp+14h] +
push dword ptr [ebp+0Ch]  +
mov ecx [ebp+8] +
call sub_40C025  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+8] +
mov ecx [eax] +
push esi  +
push edi  +
lea edx [ebp-4] +
push edx  +
push offset nullsub_1  +
xor esi esi +
push eax  +
mov [ebp-4] esi +
call dword ptr [ecx]  +
mov edi eax +
cmp edi esi +
jl loc_40C25A  +
mov eax [ebp-4] +
mov ecx [eax] +
push esi  +
push esi  +
push esi  +
push 3  +
push esi  +
push eax  +
call dword ptr [ecx+10h]  +
mov edi eax +
cmp edi esi +
jge loc_40C25F  +
call sub_40EF13  +
mov eax [ebp-4] +
cmp eax esi +
jz loc_40C26C  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 118h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
xor edi edi +
push 4  +
mov dword ptr [ebp-114h] 825h +
mov [ebp-118h] edi +
mov [ebp-110h] edi +
call sub_407287  +
test eax eax +
jz loc_40C2C3  +
push 32h  +
mov ecx esi +
call sub_40EC10  +
mov eax [ebx+4] +
mov dword ptr [eax+94h] 1 +
mov eax [ebx+4] +
cmp [eax+88h] edi +
jnz loc_40C306  +
cmp [eax+8Ch] edi +
jz loc_40C306  +
mov edi 80004005h +
lea esi [ebp-118h] +
call sub_40E92D  +
mov ecx [ebp-4] +
mov eax edi +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn 0Ch  +
***
cmp esi edi +
jnz loc_40C319  +
call sub_40EF13  +
mov edx 80070057h +
jmp loc_40C3A5  +
cmp [esi] di +
jnz loc_40C325  +
mov edi 80070057h +
jmp loc_40C2E8  +
***
mov edi [ebx+4] +
push esi  +
add edi 34h +
call sub_40E868  +
mov edi [ebx+4] +
push esi  +
add edi 4Ch +
call sub_40E868  +
lea eax [ebp-10Ch] +
push eax  +
lea eax [ebp-108h] +
push eax  +
push 0  +
push esi  +
mov dword ptr [ebp-10Ch] 80h +
call ds:PathFindExtensionW  +
push eax  +
push 0Eh  +
push 0  +
call ds:AssocQueryStringW  +
mov edx eax +
test edx edx +
jge loc_40C376  +
call sub_40EF13  +
jmp loc_40C3A5  +
lea esi [ebp-108h] +
call sub_40CC56  +
mov ecx [ebx+4] +
mov [ecx+84h] eax +
cmp eax 2 +
jz loc_40C39B  +
cmp eax 3 +
jz loc_40C39B  +
mov edx 80004005h +
jmp loc_40C36F  +
***
mov eax [ebx+4] +
call sub_407D03  +
xor edx edx +
mov edi edx +
jmp loc_40C2E8  +
***
xor eax eax +
inc eax  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov eax [eax+4] +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+4]  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
cmp ecx eax +
jnz loc_40C3F0  +
call sub_40EF13  +
mov eax 80070057h +
jmp loc_40C3F2  +
mov [ecx] eax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
mov edi [ebp+8] +
mov ebx [edi+4] +
add ebx 58h +
call sub_40E947  +
mov edx eax +
test edx edx +
jl loc_40C497  +
mov eax [edi+4] +
mov eax [eax+84h] +
and dword ptr [ebp+8] 0 +
lea ecx [ebp+8] +
push ecx  +
push 4  +
lea ecx [ebp+0Ch] +
push ecx  +
mov [ebp+0Ch] eax +
mov eax [esi] +
push esi  +
call dword ptr [eax+10h]  +
mov edx eax +
test edx edx +
jge loc_40C449  +
call sub_40EF13  +
test edx edx +
jl loc_40C497  +
mov ebx [edi+4] +
add ebx 34h +
call sub_40E947  +
mov edx eax +
test edx edx +
jl loc_40C497  +
mov ebx [edi+4] +
add ebx 40h +
call sub_40E947  +
mov edx eax +
test edx edx +
jl loc_40C497  +
mov ebx [edi+4] +
add ebx 64h +
call sub_40E947  +
mov edx eax +
test edx edx +
jl loc_40C497  +
mov eax [edi+4] +
mov eax [eax+1Ch] +
test eax eax +
jnz loc_40C48D  +
mov edx 8000FFFFh +
jmp loc_40C497  +
push esi  +
call dword ptr [eax+3Ch]  +
mov edx eax +
test edx edx +
jge loc_40C49C  +
call sub_40EF13  +
pop edi  +
pop esi  +
mov eax edx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+8] +
mov eax [esi+4] +
cmp dword ptr [eax+1Ch] 0 +
push edi  +
mov edi [ebp+0Ch] +
jnz loc_40C551  +
lea ebx [eax+58h] +
push edi  +
call sub_40E993  +
mov edx eax +
test edx edx +
jl loc_40C564  +
mov eax [edi] +
and dword ptr [ebp+8] 0 +
lea ecx [ebp+8] +
push ecx  +
push 4  +
lea ecx [ebp+0Ch] +
push ecx  +
push edi  +
call dword ptr [eax+0Ch]  +
mov edx eax +
test edx edx +
jge loc_40C4FB  +
call sub_40EF13  +
test edx edx +
jl loc_40C564  +
mov eax [esi+4] +
mov ecx [ebp+0Ch] +
mov [eax+84h] ecx +
mov ebx [esi+4] +
add ebx 34h +
push edi  +
call sub_40E993  +
mov edx eax +
test edx edx +
jl loc_40C564  +
mov ebx [esi+4] +
add ebx 40h +
push edi  +
call sub_40E993  +
mov edx eax +
test edx edx +
jl loc_40C564  +
mov ebx [esi+4] +
add ebx 64h +
push edi  +
call sub_40E993  +
mov edx eax +
test edx edx +
jl loc_40C564  +
mov eax [edi] +
push edi  +
call dword ptr [eax+4]  +
mov eax [esi+4] +
mov [eax+7Ch] edi +
mov eax [esi+4] +
call sub_407D03  +
push dword ptr [ebp+10h]  +
mov eax [esi+4] +
mov eax [eax+1Ch] +
push edi  +
call dword ptr [eax+40h]  +
mov edx eax +
test edx edx +
jge loc_40C569  +
call sub_40EF13  +
pop edi  +
pop esi  +
mov eax edx +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+10h]  +
mov eax [ebp+8] +
mov eax [eax+4] +
push dword ptr [ebp+0Ch]  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx]  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
test eax eax +
jnz loc_40C5AE  +
call sub_40EF13  +
mov eax 80070057h +
jmp loc_40C5B3  +
call sub_407A51  +
pop ebp  +
retn 8  +
***
xor eax eax +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1068h +
call sub_419880  +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp-4] eax +
push ebx  +
mov ebx [ebp+8] +
push esi  +
mov esi [ebp+10h] +
push edi  +
mov edi [ebp+14h] +
push 4  +
call sub_407287  +
test eax eax +
jz loc_40C5FF  +
push 33h  +
push 4  +
call sub_40EB49  +
mov eax [ebx+4] +
mov dword ptr [eax+94h] 2 +
mov eax [ebx+4] +
xor ecx ecx +
mov [ebp-1054h] ecx +
mov [ebp-1064h] ecx +
mov [ebp-1058h] ecx +
mov [ebp-105Ch] ecx +
mov [eax+88h] ecx +
mov dword ptr [eax+8Ch] 1 +
cmp esi ecx +
jnz loc_40C64C  +
call sub_40EF13  +
mov esi 80070057h +
jmp loc_40C819  +
mov eax [esi] +
lea ecx [ebp-1054h] +
push ecx  +
push esi  +
push edi  +
push esi  +
call dword ptr [eax+50h]  +
mov esi eax +
test esi esi +
jge loc_40C66B  +
call sub_40EF13  +
jmp loc_40C819  +
cmp dword ptr [ebp-1054h] 0 +
jnz loc_40C683  +
call sub_40EF13  +
mov esi 8007000Eh +
jmp loc_40C819  +
mov edi [ebx+4] +
push dword ptr [ebp-1054h]  +
add edi 34h +
call sub_40E868  +
xor edi edi +
push edi  +
lea eax [ebp-1068h] +
push eax  +
push 825h  +
lea eax [ebp-1050h] +
push eax  +
push edi  +
push 0Dh  +
push dword ptr [ebp-1054h]  +
call CoInternetParseUrl  +
mov esi eax +
cmp esi edi +
jl loc_40C661  +
cmp dword ptr [ebp-1068h] 4 +
jnz loc_40C704  +
push 4  +
lea eax [ebp-1050h] +
push offset aFile  +
push eax  +
call sub_410905  +
add esp 0Ch +
test eax eax +
jnz loc_40C704  +
mov esi [ebp+0Ch] +
mov ecx [ebx+4] +
neg esi  +
sbb esi esi +
and esi 80004004h +
inc esi  +
inc eax  +
mov [ecx+88h] eax +
mov [ecx+8Ch] eax +
jmp loc_40C819  +
push 4Ch  +
call sub_40FC22  +
pop ecx  +
cmp eax edi +
jz loc_40C719  +
mov esi eax +
call sub_406D65  +
mov edi eax +
test edi edi +
jz loc_40C674  +
mov eax [edi] +
push edi  +
call dword ptr [eax+4]  +
push 1  +
lea eax [ebp-1064h] +
push eax  +
push dword ptr [ebp-1054h]  +
mov [ebp-105Ch] edi +
push 0  +
call CreateURLMonikerEx  +
mov esi eax +
test esi esi +
jl loc_40C661  +
lea eax [ebp-1058h] +
push eax  +
push 0  +
call ds:CreateBindCtx  +
mov esi eax +
test esi esi +
jl loc_40C661  +
push 0  +
push 0  +
push edi  +
push dword ptr [ebp-1058h]  +
call RegisterBindStatusCallback  +
mov esi eax +
test esi esi +
jl loc_40C661  +
mov eax [ebp-1064h] +
mov ecx [eax] +
lea edx [edi+4] +
push edx  +
push offset dword_402690  +
push 0  +
push dword ptr [ebp-1058h]  +
push eax  +
call dword ptr [ecx+24h]  +
mov esi eax +
test esi esi +
jl loc_40C661  +
lea eax [ebp-1060h] +
push eax  +
push dword ptr [edi+0Ch]  +
call sub_40CB58  +
mov eax [ebx+4] +
mov ecx [edi+24h] +
mov [eax+84h] ecx +
mov eax [ebx+4] +
cmp dword ptr [eax+84h] 2 +
jz loc_40C7E1  +
cmp dword ptr [eax+84h] 3 +
jz loc_40C7E1  +
mov esi 80070057h +
jmp loc_40C661  +
***
lea eax [ebp-1060h] +
push eax  +
push dword ptr [edi+10h]  +
call sub_40CB58  +
cmp dword ptr [edi+20h] 0 +
jz loc_40C7FB  +
mov edi [edi+18h] +
jmp loc_40C7FD  +
xor edi edi +
push edi  +
mov edi [ebx+4] +
add edi 4Ch +
call sub_40E868  +
mov eax [ebx+4] +
push dword ptr [eax+90h]  +
call sub_40E6B8  +
xor esi esi +
mov eax [ebx+4] +
cmp dword ptr [eax+88h] 0 +
jnz loc_40C87A  +
test esi esi +
jge loc_40C86A  +
mov eax [ebp-105Ch] +
test eax eax +
jz loc_40C866  +
mov eax [eax+48h] +
test eax eax +
jge loc_40C866  +
push eax  +
mov esi eax +
call sub_40CCE1  +
mov [ebp-1060h] eax +
test eax eax +
jz loc_40C866  +
mov edi [ebx+4] +
push eax  +
add edi 70h +
call sub_40E868  +
push dword ptr [ebp-1060h]  +
call ds:LocalFree  +
xor esi esi +
test esi esi +
jl loc_40C874  +
mov eax [ebx+4] +
call sub_407D03  +
jmp loc_40C87A  +
push esi  +
call sub_40880E  +
cmp dword ptr [ebp-1054h] 0 +
jz loc_40C88F  +
push dword ptr [ebp-1054h]  +
call ds:CoTaskMemFree  +
push 4  +
call sub_407287  +
test eax eax +
jz loc_40C8A4  +
push esi  +
push 34h  +
push 4  +
call sub_40EBD4  +
mov eax [ebp-1058h] +
test eax eax +
jz loc_40C8B4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-1064h] +
test eax eax +
jz loc_40C8C4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax [ebp-105Ch] +
test eax eax +
jz loc_40C8D4  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov ecx [ebp-4] +
pop edi  +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
and dword_41FA0C 0 +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
test esi esi +
jz loc_40C90A  +
xor eax eax +
mov [esi] ax +
mov ecx [ebp+arg_4] +
test ecx ecx +
jz loc_40C916  +
xor eax eax +
mov [ecx] ax +
mov edx [ebp+arg_8] +
test edx edx +
jz loc_40C922  +
xor eax eax +
mov [edx] ax +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_40C92E  +
xor edi edi +
mov [eax] di +
test ecx ecx +
jnz loc_40C941  +
call sub_40EF13  +
mov ebx 80070057h +
jmp loc_40CB4A  +
test esi esi +
jz loc_40C932  +
test edx edx +
jz loc_40C932  +
lea eax [ebp+pNumArgs] +
push eax  +
call ds:GetCommandLineW  +
push eax  +
call ds:CommandLineToArgvW  +
mov [ebp+hMem] eax +
mov eax [ebp+pNumArgs] +
test eax eax +
jl loc_40C96B  +
mov [ebp+var_8] eax +
xor ebx ebx +
jmp loc_40C974  +
or [ebp+var_8] 0FFFFFFFFh +
mov ebx 80070216h +
test ebx ebx +
jl loc_40CB36  +
xor esi esi +
inc esi  +
cmp [ebp+var_8] esi +
jbe loc_40CB3B  +
mov [ebp+var_4] 2 +
mov eax [ebp+hMem] +
mov edi [eax+esi*4] +
movzx eax word ptr [edi] +
cmp ax 2Dh +
jz loc_40C9DE  +
cmp ax 2Fh +
jz loc_40C9DE  +
mov eax dword_41FA0C +
test eax eax +
jz loc_40C9B5  +
test al 2 +
jz loc_40CB31  +
mov eax [ebp+arg_0] +
cmp word ptr [eax] 0 +
jnz loc_40CB31  +
push edi  +
push 144h  +
mov edi eax +
call sub_40CE99  +
mov ebx eax +
test ebx ebx +
jl loc_40CB36  +
jmp loc_40CB22  +
inc edi  +
inc edi  +
push offset aEmbedding  +
push edi  +
call sub_41020C  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40C9FD  +
or dword_41FA0C 1 +
jmp loc_40CB22  +
push offset aDebug  +
push edi  +
call sub_41020C  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40CA1A  +
or dword_41FA0C 3 +
jmp loc_40CB22  +
push offset aDebugsecurityz  +
push edi  +
call sub_41020C  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40CA66  +
mov eax [ebp+var_4] +
or dword_41FA0C 8 +
cmp eax [ebp+var_8] +
jnb loc_40CB22  +
mov eax [ebp+hMem] +
mov edi [ebp+arg_8] +
inc esi  +
push dword ptr [eax+esi*4]  +
mov ecx 144h +
inc [ebp+var_4]  +
mov edx edi +
call sub_40CF73  +
mov ebx eax +
test ebx ebx +
jl loc_40CB36  +
movzx eax word ptr [edi] +
jmp loc_40CAE0  +
push offset aEvent  +
push edi  +
call sub_41020C  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40CA99  +
mov eax [ebp+var_8] +
or dword_41FA0C 5 +
cmp [ebp+var_4] eax +
jnb loc_40CB22  +
mov eax [ebp+hMem] +
mov edi [ebp+arg_4] +
inc esi  +
push dword ptr [eax+esi*4]  +
push 40h  +
pop ecx  +
jmp loc_40CA4D  +
push offset aLaunchapplicat  +
push edi  +
call sub_41020C  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40CAF0  +
mov edx [ebp+arg_C] +
test edx edx +
jz loc_40CAF0  +
mov eax [ebp+var_8] +
or dword_41FA0C 10h +
cmp [ebp+var_4] eax +
jnb loc_40CB22  +
mov eax [ebp+hMem] +
inc esi  +
push dword ptr [eax+esi*4]  +
inc [ebp+var_4]  +
mov ecx 824h +
call sub_40CF73  +
mov ebx eax +
test ebx ebx +
jl loc_40CB36  +
mov eax [ebp+arg_C] +
movzx eax word ptr [eax] +
cmp ax 2Dh +
jz loc_40CB31  +
cmp ax 2Fh +
jz loc_40CB31  +
xor ebx ebx +
jmp loc_40CB22  +
push offset aRegserver  +
push edi  +
call sub_41020C  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40CB0A  +
or dword_41FA0C 20h +
jmp loc_40CB22  +
push offset aUnregserver  +
push edi  +
call sub_41020C  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40CB31  +
or dword_41FA0C 40h +
inc esi  +
inc [ebp+var_4]  +
cmp esi [ebp+var_8] +
jb loc_40C98F  +
jmp loc_40CB3B  +
mov ebx 80070057h +
call sub_40EF13  +
cmp [ebp+hMem] 0 +
jz loc_40CB4A  +
push [ebp+hMem]  +
call ds:LocalFree  +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
leave   +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 1Ch +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov edi ds:PeekMessageW +
inc ebx  +
xor esi esi +
jmp loc_40CB80  +
cmp dword ptr [ebp-18h] 12h +
jz loc_40CBB3  +
lea eax [ebp+nExitCode] +
push eax  +
call ds:DispatchMessageW  +
push ebx  +
push esi  +
push esi  +
push esi  +
lea eax [ebp+nExitCode] +
push eax  +
call edi  +
test eax eax +
jnz loc_40CB70  +
push 4FFh  +
push 0FFFFFFFFh  +
push esi  +
lea eax [ebp+pHandles] +
push eax  +
push ebx  +
call ds:MsgWaitForMultipleObjects  +
cmp eax ebx +
jz loc_40CB80  +
mov eax [ebp+arg_4] +
mov [eax] esi +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 8  +
mov eax [ebp+arg_4] +
push dword ptr [ebp-14h]  +
mov [eax] ebx +
call ds:PostQuitMessage  +
xor eax eax +
jmp loc_40CBAC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
push offset aPresentation_0  +
mov edi ecx +
call ds:GetModuleHandleW  +
test eax eax +
jz loc_40CC1D  +
push 104h  +
lea ecx [ebp+Filename] +
push ecx  +
push eax  +
call ds:GetModuleFileNameW  +
test eax eax +
jz loc_40CC1D  +
push 0  +
push 8  +
lea eax [ebp+Filename] +
push eax  +
call sub_41AE45  +
mov esi eax +
jmp loc_40CC1F  +
xor esi esi +
test esi esi +
jnz loc_40CC27  +
xor eax eax +
jmp loc_40CC43  +
push 7D0h  +
push edi  +
push 0CF8h  +
push esi  +
call ds:LoadStringW  +
push esi  +
mov edi eax +
call sub_41AA13  +
mov eax edi +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_40FFC3  +
leave   +
retn   +
***
call sub_41020C  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40CC6B  +
xor eax eax +
inc eax  +
retn   +
push offset aApplicationXZi  +
push esi  +
call sub_41020C  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_40CC67  +
push offset aApplicationXMs  +
push esi  +
call sub_41020C  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_40CC91  +
push 2  +
pop eax  +
retn   +
push offset aApplicationXam  +
push esi  +
call sub_41020C  +
neg eax  +
sbb eax eax +
pop ecx  +
and eax 0FFFFFFFDh +
pop ecx  +
add eax 3 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
xor eax eax +
push eax  +
push eax  +
lea ecx [ebp+Buffer] +
push ecx  +
push eax  +
push [ebp+dwMessageId]  +
mov dword ptr [ebp+Buffer] eax +
push [ebp+lpSource]  +
push 1900h  +
call ds:FormatMessageW  +
neg eax  +
sbb eax eax +
and eax dword ptr [ebp+Buffer] +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ds:GetModuleHandleW +
push edi  +
push offset aUrlmon_dll  +
xor edi edi +
call esi  +
mov ebx eax +
test ebx ebx +
jz loc_40CD27  +
push [ebp+dwMessageId]  +
push ebx  +
call sub_40CCAE  +
mov edi eax +
test edi edi +
jnz loc_40CD3D  +
cmp [ebp+dwMessageId] 800C0019h +
jnz loc_40CD23  +
push 800C0011h  +
push ebx  +
call sub_40CCAE  +
mov edi eax +
test edi edi +
jnz loc_40CD3D  +
push offset aWininet_dll  +
call esi  +
test eax eax +
jz loc_40CD3D  +
push [ebp+dwMessageId]  +
push eax  +
call sub_40CCAE  +
mov edi eax +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push esi  +
push edi  +
xor esi esi +
push esi  +
lea eax [ebp+ppSM] +
push eax  +
push esi  +
mov [ebp+ppSM] esi +
mov [ebp+hLibModule] esi +
call CoInternetCreateSecurityManager  +
mov edi eax +
cmp edi esi +
jl loc_40CE6E  +
mov eax [ebp+ppSM] +
mov ecx [eax] +
push esi  +
push 1  +
push esi  +
push esi  +
push 4  +
lea edx [ebp+var_18] +
push edx  +
push 2004h  +
push ebx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
cmp edi esi +
jl loc_40CE6E  +
mov eax [ebp+ppSM] +
mov ecx [eax] +
push esi  +
push 1  +
push esi  +
push esi  +
push 4  +
lea edx [ebp+var_10] +
push edx  +
push 2001h  +
push ebx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
cmp edi esi +
jl loc_40CE6E  +
mov eax [ebp+ppSM] +
mov ecx [eax] +
push esi  +
push 5  +
push esi  +
push esi  +
push 4  +
lea edx [ebp+var_14] +
push edx  +
push 1803h  +
push ebx  +
push eax  +
call dword ptr [ecx+1Ch]  +
mov edi eax +
cmp edi esi +
jl loc_40CE6E  +
cmp [ebp+var_14] esi +
jz loc_40CDED  +
mov edi 80004021h +
jmp loc_40CE6E  +
call sub_409441  +
test al al +
jz loc_40CE1A  +
lea eax [ebp+var_C] +
push eax  +
mov [ebp+var_C] esi +
call sub_4097E6  +
cmp eax esi +
jl loc_40CE2A  +
mov eax [ebp+var_C] +
mov ecx [eax] +
lea edx [ebp+hLibModule] +
push edx  +
push offset aDfdll_dll  +
push eax  +
call dword ptr [ecx+1Ch]  +
jmp loc_40CE2A  +
lea eax [ebp+hLibModule] +
push eax  +
push esi  +
push esi  +
push offset aDfdll_dll  +
call LoadLibraryShim  +
cmp eax esi +
mov edi eax +
jl loc_40CE6E  +
push offset aActivatedeploy  +
push [ebp+hLibModule]  +
call ds:GetProcAddress  +
cmp eax esi +
jnz loc_40CE5F  +
call sub_40EF13  +
call ds:GetLastError  +
cmp eax esi +
jle loc_40CE5B  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
jmp loc_40CE73  +
push [ebp+var_10]  +
push [ebp+var_18]  +
push ebx  +
call eax  +
mov edi eax +
cmp edi esi +
jge loc_40CE73  +
call sub_40EF13  +
cmp [ebp+hLibModule] esi +
jz loc_40CE81  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
mov eax [ebp+ppSM] +
cmp eax esi +
jz loc_40CE8E  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_0] +
push esi  +
push edi  +
lea esi [ebp+var_4] +
call sub_40CED2  +
pop esi  +
test eax eax +
jl locret_40CEC9  +
mov eax [ebp+var_4] +
mov ecx [ebp+arg_0] +
sub ecx eax +
lea edx [edi+eax*2] +
mov eax [ebp+arg_4] +
push 7FFFFFFFh  +
call sub_40CF2B  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test ecx ecx +
jz loc_40CEE5  +
cmp ecx 7FFFFFFFh +
jbe loc_40CEEA  +
mov eax 80070057h +
test esi esi +
jz loc_40CF22  +
test eax eax +
jl loc_40CF1F  +
mov eax [ebp+arg_0] +
push edi  +
xor edi edi +
mov edx ecx +
test ecx ecx +
jz loc_40CF0C  +
cmp [eax] di +
jz loc_40CF08  +
inc eax  +
inc eax  +
dec edx  +
jnz loc_40CEFE  +
test edx edx +
jnz loc_40CF19  +
and dword ptr [esi] 0 +
mov edi 80070057h +
mov eax edi +
pop edi  +
jmp loc_40CF22  +
sub ecx edx +
mov [esi] ecx +
jmp loc_40CF14  +
and dword ptr [esi] 0 +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi eax +
mov esi ecx +
xor eax eax +
cmp esi eax +
jz loc_40CF5C  +
cmp [ebp+arg_0] eax +
jz loc_40CF58  +
movzx ecx word ptr [edi] +
cmp cx ax +
jz loc_40CF58  +
mov [edx] cx +
inc edx  +
inc edx  +
inc edi  +
inc edi  +
dec esi  +
dec [ebp+arg_0]  +
cmp esi eax +
jnz loc_40CF3C  +
cmp esi eax +
jnz loc_40CF63  +
dec edx  +
dec edx  +
mov eax 8007007Ah +
xor ecx ecx +
pop edi  +
mov [edx] cx +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test ecx ecx +
jz loc_40CF86  +
cmp ecx 7FFFFFFFh +
jbe loc_40CF8B  +
mov eax 80070057h +
test eax eax +
jl loc_40CF9C  +
mov eax [ebp+arg_0] +
push 7FFFFFFEh  +
call sub_40CF2B  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 24h +
cmp dword ptr [esi] 0FFFFFFFFh +
push edi  +
jnz loc_40CFF7  +
test edx edx +
jz loc_40CFF7  +
cmp word ptr [edx] 0 +
jz loc_40CFF7  +
push 7  +
pop ecx  +
xor eax eax +
mov [ebp+var_20] 20h +
lea edi [ebp+var_1C] +
stos   +
lea eax [ebp+var_20] +
push eax  +
mov [ebp+var_18] edx +
mov [ebp+var_C] 2 +
mov [ebp+var_1C] 8 +
call ds:CreateActCtxW  +
xor ecx ecx +
cmp eax 0FFFFFFFFh +
setnz cl  +
mov [esi] eax +
mov al cl +
jmp loc_40CFF9  +
xor al al +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
xor ebx ebx +
push esi  +
mov esi eax +
mov [esi] ebx +
mov [esi+4] ebx +
mov [esi+8] ebx +
mov [esi+0Ch] ebx +
push edi  +
push [ebp+arg_0]  +
lea edi [esi+10h] +
mov [edi] ebx +
mov [edi+8] ebx +
mov eax 825h +
mov [edi+4] eax +
mov [esi+20h] eax +
mov [esi+1Ch] ebx +
mov [esi+24h] ebx +
mov [esi+28h] ebx +
mov [esi+2Ch] ebx +
mov [esi+30h] ebx +
mov [esi+34h] ebx +
mov [esi+38h] ebx +
mov [esi+3Ch] ebx +
mov [esi+40h] ebx +
call sub_40E868  +
push offset aPresentation_1  +
lea edi [esi+1Ch] +
call sub_40E868  +
mov eax [ebp+arg_0] +
cmp eax ebx +
jz loc_40D067  +
call sub_40D1B1  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
pop ebp  +
retn 4  +
***
mov eax [edx] +
sub eax [ecx] +
jnz locret_40D089  +
mov eax [edx+4] +
sub eax [ecx+4] +
jnz locret_40D089  +
mov eax [edx+8] +
sub eax [ecx+8] +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push 4  +
call sub_407287  +
test eax eax +
jz loc_40D0AD  +
push 3Ch  +
push 4  +
call sub_40EB49  +
xor ebx ebx +
cmp [edi+28h] ebx +
jz loc_40D197  +
mov eax [edi+1Ch] +
cmp eax ebx +
jz loc_40D197  +
push eax  +
call ds:LoadLibraryW  +
mov [edi+0Ch] eax +
cmp eax ebx +
jz loc_40D197  +
mov esi ds:GetProcAddress +
push offset aActivate  +
push eax  +
call esi  +
push offset aDeactivate  +
push dword ptr [edi+0Ch]  +
mov [edi+30h] eax +
call esi  +
push offset aForwardtransla  +
push dword ptr [edi+0Ch]  +
mov [edi+34h] eax +
call esi  +
push offset aSavetohistory  +
push dword ptr [edi+0Ch]  +
mov [edi+38h] eax +
call esi  +
push offset aLoadfromhistor  +
push dword ptr [edi+0Ch]  +
mov [edi+3Ch] eax +
call esi  +
mov [edi+40h] eax +
cmp [edi+30h] ebx +
jz loc_40D137  +
cmp [edi+34h] ebx +
jz loc_40D137  +
cmp [edi+38h] ebx +
jz loc_40D137  +
cmp [edi+3Ch] ebx +
jz loc_40D137  +
cmp eax ebx +
jz loc_40D137  +
xor eax eax +
inc eax  +
jmp loc_40D139  +
xor eax eax +
cmp dword ptr [edi] 3 +
mov [edi+2Ch] eax +
jnz loc_40D197  +
mov edx [edi+1Ch] +
or [ebp+var_C] 0FFFFFFFFh +
lea esi [ebp+var_C] +
mov [ebp+var_8] ebx +
mov [ebp+var_4] 1 +
call sub_40CFA5  +
test al al +
jz loc_40D171  +
cmp [ebp+var_C] 0FFFFFFFFh +
jz loc_40D197  +
lea eax [ebp+var_8] +
push eax  +
push [ebp+var_C]  +
mov [ebp+var_4] bl +
call ds:ActivateActCtx  +
cmp [ebp+var_C] 0FFFFFFFFh +
jz loc_40D197  +
cmp [ebp+var_4] bl +
jz loc_40D197  +
mov eax [ebp+var_8] +
cmp eax ebx +
jz loc_40D18E  +
push eax  +
push ebx  +
mov [ebp+var_8] ebx +
call ds:DeactivateActCtx  +
push [ebp+var_C]  +
call ds:ReleaseActCtx  +
mov eax [edi+2Ch] +
neg eax  +
sbb eax eax +
and eax 7FFFBFFBh +
pop esi  +
add eax 80004005h +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push edi  +
mov edi eax +
xor eax eax +
xor ebx ebx +
inc eax  +
mov [esi+28h] eax +
cmp word ptr [edi] 22h +
mov [ebp+var_10] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_8] ebx +
mov [ebp+var_4] ebx +
jnz loc_40D1DD  +
add edi 2 +
mov [ebp+var_4] eax +
movzx eax word ptr [edi] +
cmp ax 76h +
jz loc_40D1EC  +
cmp ax 56h +
jnz loc_40D1EE  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
cmp ax bx +
jz loc_40D24C  +
cmp ebx 3 +
jnb loc_40D24C  +
cmp ax 2Eh +
jnz loc_40D204  +
inc ebx  +
jmp loc_40D237  +
push eax  +
call sub_410A05  +
pop ecx  +
test eax eax +
jz loc_40D223  +
movzx edx word ptr [edi] +
lea eax [ebp+ebx*4+var_10] +
mov ecx [eax] +
imul ecx ecx +
lea ecx [ecx+edx-30h] +
mov [eax] ecx +
jmp loc_40D237  +
xor eax eax +
cmp [ebp+var_4] eax +
jz loc_40D249  +
cmp word ptr [edi] 22h +
jnz loc_40D249  +
inc edi  +
inc edi  +
cmp [edi] ax +
jnz loc_40D243  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
test ax ax +
jnz loc_40D1F6  +
jmp loc_40D24C  +
and dword ptr [esi+28h] 0 +
jmp loc_40D24C  +
mov [esi+28h] eax +
xor eax eax +
pop edi  +
pop ebx  +
cmp [esi+28h] eax +
jz loc_40D265  +
mov eax [ebp+var_10] +
mov [esi] eax +
mov eax [ebp+var_C] +
mov [esi+4] eax +
mov eax [ebp+var_8] +
jmp loc_40D26A  +
mov [esi] eax +
mov [esi+4] eax +
mov [esi+8] eax +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push 4  +
call sub_407287  +
test eax eax +
jz loc_40D28E  +
push 3Dh  +
push 4  +
call sub_40EB49  +
push [ebp+arg_8]  +
mov eax [ebp+arg_0] +
push [ebp+arg_4]  +
call dword ptr [eax+30h]  +
push 4  +
call sub_407287  +
test eax eax +
jz loc_40D2B0  +
push 0  +
push 3Eh  +
push 4  +
call sub_40EBD4  +
pop ecx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ecx  +
call sub_40D2D9  +
mov eax dword_41FABC +
test eax eax +
jz loc_40D2D0  +
mov eax [eax+4] +
pop ecx  +
retn   +
xor eax eax +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
xor edi edi +
mov [ebp+var_C] edi +
cmp dword_41FABC edi +
jnz loc_40D3E6  +
push 8  +
call sub_40FC22  +
pop ecx  +
cmp eax edi +
jz loc_40D30D  +
mov [eax] edi +
mov [eax+4] edi +
mov dword_41FABC eax +
jmp loc_40D313  +
mov dword_41FABC edi +
lea eax [ebp+var_14] +
push eax  +
mov [ebp+var_14] edi +
mov [ebp+var_10] edi +
call sub_40D56B  +
cmp eax edi +
mov [ebp+var_C] eax +
jge loc_40D333  +
call sub_40EF13  +
jmp loc_40D3DE  +
mov esi [ebp+var_14] +
mov [ebp+var_8] esi +
mov dword_41FAC0 edi +
cmp esi edi +
jz loc_40D3DE  +
jmp loc_40D34E  +
mov esi [ebp+var_8] +
xor edi edi +
push 44h  +
call sub_40FC22  +
pop ecx  +
cmp eax edi +
jz loc_40D365  +
push dword ptr [esi]  +
call sub_40D001  +
mov ebx eax +
jmp loc_40D367  +
xor ebx ebx +
mov [ebp+var_4] ebx +
cmp ebx edi +
jz loc_40D3D2  +
cmp [ebx+28h] edi +
jz loc_40D3A8  +
push dword ptr [esi+0Ch]  +
lea edi [ebx+1Ch] +
call sub_40E868  +
lea eax [ebp+var_4] +
push eax  +
push dword ptr [ebx+10h]  +
call sub_40D46C  +
mov edx dword_41FAC0 +
mov ecx [ebp+var_4] +
test edx edx +
jz loc_40D3A0  +
call sub_40D075  +
test eax eax +
jge loc_40D3C2  +
mov dword_41FAC0 ecx +
jmp loc_40D3C2  +
lea esi [ebx+1Ch] +
call sub_40E92D  +
lea esi [ebx+10h] +
call sub_40E92D  +
push ebx  +
call sub_40FFB3  +
mov esi [ebp+var_8] +
pop ecx  +
mov esi [esi+14h] +
mov [ebp+var_8] esi +
test esi esi +
jnz loc_40D349  +
jmp loc_40D3DE  +
call sub_40EF13  +
mov [ebp+var_C] 8007000Eh +
lea eax [ebp+var_14] +
call sub_40D4E3  +
mov eax [ebp+var_C] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 48h +
push esi  +
push edi  +
call sub_40D2D9  +
test eax eax +
jge loc_40D40E  +
xor eax eax +
pop edi  +
pop esi  +
leave   +
retn 8  +
push [ebp+arg_0]  +
lea eax [ebp+var_48] +
call sub_40D001  +
xor edi edi +
cmp [ebp+var_20] edi +
jz loc_40D43F  +
mov eax dword_41FABC +
mov esi [eax] +
jmp loc_40D43B  +
mov ecx [esi+0Ch] +
lea edx [ebp+var_48] +
call sub_40D075  +
test eax eax +
jz loc_40D451  +
mov esi [esi+10h] +
cmp esi edi +
jnz loc_40D429  +
cmp [ebp+arg_4] edi +
jz loc_40D453  +
call sub_40D2D9  +
mov edi dword_41FAC0 +
jmp loc_40D453  +
mov edi ecx +
lea esi [ebp+var_2C] +
call sub_40E92D  +
lea esi [ebp+var_38] +
call sub_40E92D  +
mov eax edi +
jmp loc_40D408  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
xor ebx ebx +
push esi  +
mov esi dword_41FABC +
cmp [ebp+arg_0] ebx +
jnz loc_40D48C  +
mov ebx 80070057h +
call sub_40EF13  +
jmp loc_40D4D6  +
push edi  +
push 14h  +
call sub_40FC22  +
mov edi eax +
pop ecx  +
cmp edi ebx +
jz loc_40D4BE  +
mov eax [esi] +
push [ebp+arg_0]  +
mov dword ptr [edi+4] 825h +
mov [edi] ebx +
mov [edi+8] ebx +
mov [edi+10h] eax +
call sub_40E868  +
mov eax [ebp+arg_4] +
mov eax [eax] +
mov [edi+0Ch] eax +
jmp loc_40D4C0  +
xor edi edi +
mov [esi] edi +
test edi edi +
pop edi  +
jnz loc_40D4D3  +
call sub_40EF13  +
mov ebx 8007000Eh +
jmp loc_40D4D6  +
inc dword ptr [esi+4]  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push esi  +
mov esi [eax] +
test esi esi +
jz loc_40D519  +
push edi  +
mov eax [esi+10h] +
mov edi [esi+14h] +
sub eax 10h +
call sub_40D520  +
mov eax [esi+0Ch] +
sub eax 10h +
call sub_40D520  +
call sub_40E92D  +
push esi  +
call sub_40FFB3  +
pop ecx  +
mov esi edi +
test edi edi +
jnz loc_40D4ED  +
pop edi  +
pop esi  +
retn   +
***
lea ecx [eax+0Ch] +
or edx 0FFFFFFFFh +
xadd [ecx] edx +
dec edx  +
test edx edx +
jg locret_40D537  +
mov ecx [eax] +
mov edx [ecx] +
push eax  +
call dword ptr [edx+4]  +
retn   +
***
mov eax dword_41F9E4 +
push esi  +
mov esi offset dword_41F9E4 +
mov ecx esi +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [edi] eax +
mov eax dword_41F9E4 +
mov ecx esi +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [edi+4] eax +
mov eax edi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 440h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_8] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
mov [ebp+var_43C] eax +
lea eax [ebp+hKey] +
push eax  +
xor ebx ebx +
push 20019h  +
push ebx  +
push offset aSoftwareMicr_0  +
push 80000002h  +
mov [ebp+var_428] ebx +
mov [ebp+hKey] ebx +
mov [ebp+cbData] ebx +
call ds:RegOpenKeyExW  +
mov edx eax +
cmp edx ebx +
jz loc_40D5E3  +
call sub_40EF13  +
cmp edx ebx +
jle loc_40D5D8  +
and edx 0FFFFh +
or edx 80070000h +
mov [ebp+var_428] edx +
jmp loc_40D86F  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
mov edi offset aV3_0 +
push edi  +
push [ebp+hKey]  +
mov [ebp+cbData] 208h +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_40D6A0  +
cmp [ebp+Type] 1 +
jnz loc_40D6A0  +
mov eax dword_41F9E4 +
mov esi offset dword_41F9E4 +
mov ecx esi +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [ebp+var_424] eax +
mov eax dword_41F9E4 +
mov ecx esi +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [ebp+var_420] eax +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+var_424] +
push eax  +
call sub_40DAB5  +
push ebx  +
lea eax [ebp+var_420] +
push eax  +
call sub_40DAB5  +
lea eax [ebp+var_424] +
push eax  +
push edi  +
mov edi [ebp+var_43C] +
call sub_40DAF3  +
mov eax [ebp+var_420] +
add eax 0FFFFFFF0h +
call sub_40D520  +
mov eax [ebp+var_424] +
add eax 0FFFFFFF0h +
call sub_40D520  +
xor esi esi +
push 104h  +
lea eax [ebp+SubKey] +
push eax  +
push esi  +
push [ebp+hKey]  +
call ds:RegEnumKeyW  +
inc esi  +
cmp eax ebx +
jnz loc_40D849  +
movzx eax [ebp+SubKey] +
push eax  +
call sub_410B37  +
pop ecx  +
cmp eax 76h +
jnz loc_40D6E9  +
movzx eax word ptr [ebp-41Ah] +
push eax  +
call sub_410BBE  +
pop ecx  +
test eax eax +
jnz loc_40D6FB  +
movzx eax [ebp+SubKey] +
push eax  +
call sub_410BBE  +
pop ecx  +
test eax eax +
jz loc_40D6A2  +
lea eax [ebp+phkResult] +
push eax  +
push 20019h  +
push ebx  +
lea eax [ebp+SubKey] +
push eax  +
push [ebp+hKey]  +
mov [ebp+phkResult] ebx +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_40D6A2  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push ebx  +
push [ebp+phkResult]  +
mov [ebp+cbData] 208h +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_40D815  +
cmp [ebp+Type] 1 +
jnz loc_40D815  +
lea edi [ebp+var_424] +
call sub_40D53D  +
lea eax [ebp+Data] +
push eax  +
mov eax edi +
push eax  +
call sub_40DAB5  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push ebx  +
push offset aCrt  +
push [ebp+phkResult]  +
mov [ebp+cbData] 208h +
call ds:RegQueryValueExW  +
test eax eax +
jnz loc_40D7D6  +
cmp [ebp+Type] 1 +
jnz loc_40D7D6  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+var_420] +
push eax  +
call sub_40DAB5  +
mov edi [ebp+var_43C] +
lea eax [ebp+var_424] +
push eax  +
lea eax [ebp+SubKey] +
push eax  +
call sub_40DAF3  +
cmp eax ebx +
mov [ebp+var_428] eax +
jl loc_40D826  +
mov eax [ebp+var_420] +
add eax 0FFFFFFF0h +
call sub_40D520  +
mov eax [ebp+var_424] +
add eax 0FFFFFFF0h +
call sub_40D520  +
push [ebp+phkResult]  +
call ds:RegCloseKey  +
jmp loc_40D6A2  +
call sub_40EF13  +
mov eax [ebp+var_420] +
add eax 0FFFFFFF0h +
call sub_40D520  +
mov eax [ebp+var_424] +
add eax 0FFFFFFF0h +
call sub_40D520  +
jmp loc_40D86F  +
cmp eax 103h +
jz loc_40D86F  +
call sub_40EF13  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_40D869  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_428] eax +
cmp [ebp+hKey] ebx +
jz loc_40D883  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_8] +
mov eax [ebp+var_428] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
mov esi eax +
xor ebx ebx +
xor eax eax +
push edi  +
inc eax  +
xor edi edi +
cmp word ptr [esi] 22h +
mov [ebp+var_14] ebx +
mov [ebp+var_10] ebx +
mov [ebp+var_C] ebx +
mov [ebp+var_4] eax +
mov [ebp+var_8] ebx +
jnz loc_40D8CE  +
add esi 2 +
mov [ebp+var_8] eax +
movzx eax word ptr [esi] +
cmp ax 76h +
jz loc_40D91E  +
cmp ax 56h +
jnz loc_40D920  +
jmp loc_40D91E  +
cmp edi 3 +
jnb loc_40D928  +
cmp ax 2Eh +
jnz loc_40D8ED  +
inc edi  +
jmp loc_40D91E  +
push eax  +
call sub_410A05  +
pop ecx  +
test eax eax +
jz loc_40D90C  +
movzx edx word ptr [esi] +
lea eax [ebp+edi*4+var_14] +
mov ecx [eax] +
imul ecx ecx +
lea ecx [ecx+edx-30h] +
mov [eax] ecx +
jmp loc_40D91E  +
cmp [ebp+var_8] ebx +
jz loc_40D942  +
cmp word ptr [esi] 22h +
jnz loc_40D942  +
inc esi  +
inc esi  +
cmp [esi] bx +
jnz loc_40D942  +
inc esi  +
inc esi  +
movzx eax word ptr [esi] +
cmp ax bx +
jnz loc_40D8DF  +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_14] +
mov [eax] ecx +
mov eax [ebp+arg_4] +
mov ecx [ebp+var_10] +
mov [eax] ecx +
mov eax [ebp+arg_8] +
mov ecx [ebp+var_C] +
mov [eax] ecx +
jmp loc_40D954  +
mov eax [ebp+arg_0] +
mov [eax] ebx +
mov eax [ebp+arg_4] +
mov [eax] ebx +
mov eax [ebp+arg_8] +
mov [ebp+var_4] ebx +
mov [eax] ebx +
mov eax [ebp+var_4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 1Ch +
mov eax dword_41EEFC +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
mov [esp+28h+var_8] ebx +
mov [esp+28h+var_4] ebx +
cmp eax 0FFFFFFFFh +
jnz loc_40DA52  +
lea eax [esp+28h+var_8] +
push eax  +
call sub_40D56B  +
mov esi eax +
cmp esi ebx +
jge loc_40D9A3  +
call sub_40EF13  +
jmp loc_40DA9C  +
mov edi [esp+28h+var_8] +
xor esi esi +
mov [esp+28h+var_18] esi +
mov [esp+28h+var_14] esi +
cmp edi esi +
jz loc_40DA10  +
mov eax [edi] +
lea ecx [esp+28h+var_10] +
push ecx  +
lea ecx [esp+2Ch+var_C] +
push ecx  +
lea ecx [esp+30h+var_1C] +
push ecx  +
call sub_40D89F  +
test eax eax +
jz loc_40DA05  +
mov eax [esp+28h+var_1C] +
cmp eax 4 +
jb loc_40DA05  +
sub eax ebx +
mov ecx [esp+28h+var_10] +
mov edx [esp+28h+var_C] +
jnz loc_40D9F2  +
mov eax edx +
sub eax [esp+28h+var_18] +
jnz loc_40D9F2  +
mov eax ecx +
sub eax [esp+28h+var_14] +
test eax eax +
jle loc_40DA05  +
mov ebx [esp+28h+var_1C] +
mov [esp+28h+var_18] edx +
mov [esp+28h+var_14] ecx +
lea esi [edi+0Ch] +
mov edi [edi+14h] +
test edi edi +
jnz loc_40D9B5  +
test esi esi +
jnz loc_40DA1C  +
mov dword_41EEFC 0 +
jmp loc_40DA52  +
mov eax [esi+4] +
cmp dword ptr [eax-0Ch] 0 +
mov edi ds:LoadLibraryW +
jz loc_40DA2E  +
push eax  +
call edi  +
push dword ptr [esi]  +
call edi  +
mov esi eax +
test esi esi +
jz loc_40DA8E  +
push 0FFFFFFFFh  +
push esi  +
push offset dword_41EEFC  +
call ds:InterlockedCompareExchange  +
cmp eax 0FFFFFFFFh +
jz loc_40DA52  +
push esi  +
call ds:FreeLibrary  +
mov eax dword_41EEFC +
test eax eax +
jnz loc_40DA74  +
mov eax [ebp+arg_0] +
and dword ptr [eax] 0 +
xor esi esi +
inc esi  +
jmp loc_40DA9C  +
and eax 0FFFFh +
or eax 80070000h +
mov esi eax +
jmp loc_40DA9C  +
push offset aProcesscommand  +
push dword_41EEFC  +
call ds:GetProcAddress  +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
test eax eax +
jnz loc_40DA9A  +
call ds:GetLastError  +
test eax eax +
jg loc_40DA66  +
jmp loc_40DA70  +
xor esi esi +
lea eax [esp+28h+var_8] +
call sub_40D4E3  +
pop edi  +
mov eax esi +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_4] 0 +
jnz loc_40DAC4  +
xor eax eax +
jmp loc_40DAD8  +
mov eax [ebp+arg_4] +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_40DACA  +
sub eax edx +
sar eax 1 +
push ebx  +
push [ebp+arg_4]  +
mov ebx eax +
mov eax [ebp+arg_0] +
call sub_40DBE8  +
mov eax [ebp+arg_0] +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
xor ebx ebx +
cmp [ebp+arg_0] ebx +
jnz loc_40DB0C  +
mov ebx 80070057h +
call sub_40EF13  +
jmp loc_40DB42  +
push 18h  +
call sub_40FC22  +
pop ecx  +
cmp eax ebx +
jz loc_40DB2B  +
push esi  +
push [ebp+arg_4]  +
mov esi eax +
push [ebp+arg_0]  +
push dword ptr [edi]  +
call sub_40DB4E  +
pop esi  +
jmp loc_40DB2D  +
xor eax eax +
mov [edi] eax +
cmp eax ebx +
jnz loc_40DB3F  +
call sub_40EF13  +
mov ebx 8007000Eh +
jmp loc_40DB42  +
inc dword ptr [edi+4]  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
and dword ptr [esi] 0 +
and dword ptr [esi+8] 0 +
push ebx  +
push edi  +
lea ebx [esi+0Ch] +
mov edi ebx +
mov dword ptr [esi+4] 825h +
call sub_40D53D  +
mov eax [ebp+arg_0] +
push [ebp+arg_4]  +
mov edi esi +
mov [esi+14h] eax +
call sub_40E868  +
mov eax [ebp+arg_8] +
mov edi ebx +
call sub_40DBA2  +
mov eax [ebp+arg_8] +
add eax 4 +
lea edi [ebx+4] +
call sub_40DBA2  +
pop edi  +
mov eax esi +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov ecx [eax] +
push esi  +
mov esi [edi] +
lea eax [ecx-10h] +
sub esi 10h +
cmp eax esi +
jz loc_40DBDF  +
cmp dword ptr [esi+0Ch] 0 +
push ebx  +
jl loc_40DBD3  +
mov edx [eax] +
cmp edx [esi] +
jnz loc_40DBD3  +
call sub_40DC75  +
mov ebx eax +
mov eax esi +
call sub_40D520  +
add ebx 10h +
mov [edi] ebx +
jmp loc_40DBDE  +
mov ebx [ecx-0Ch] +
push ecx  +
mov eax edi +
call sub_40DBE8  +
pop ebx  +
mov eax edi +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi eax +
test ebx ebx +
jnz loc_40DBFC  +
call sub_40DDFF  +
jmp loc_40DC6B  +
push edi  +
mov edi [ebp+arg_0] +
test edi edi +
jnz loc_40DC0E  +
push 80070057h  +
call loc_4088A7  +
mov eax [esi] +
mov ecx [eax-0Ch] +
mov [ebp+var_4] ecx +
xor ecx ecx +
sub edi eax +
inc ecx  +
sub ecx [eax-4] +
mov eax [eax-8] +
sub eax ebx +
sar edi 1 +
or ecx eax +
jge loc_40DC32  +
mov eax ebx +
mov ecx esi +
call sub_40DD88  +
mov eax [esi] +
lea ecx [ebx+ebx] +
push ecx  +
cmp edi [ebp+var_4] +
ja loc_40DC4F  +
lea ecx [eax+edi*2] +
push ecx  +
mov ecx [eax-8] +
add ecx ecx +
push ecx  +
push eax  +
call sub_410BF1  +
jmp loc_40DC5E  +
mov ecx [eax-8] +
push [ebp+arg_0]  +
add ecx ecx +
push ecx  +
push eax  +
call sub_410400  +
add esp 10h +
mov eax ebx +
mov edx esi +
call loc_40DDD8  +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push esi  +
mov esi eax +
mov ecx [esi] +
mov eax [ecx] +
push edi  +
call dword ptr [eax+10h]  +
lea edx [esi+0Ch] +
cmp dword ptr [edx] 0 +
jl loc_40DC99  +
cmp eax [esi] +
jnz loc_40DC99  +
xor eax eax +
mov edi esi +
inc eax  +
xadd [edx] eax +
jmp loc_40DCCE  +
mov edx [eax] +
push 2  +
push dword ptr [esi+4]  +
mov ecx eax +
call dword ptr [edx]  +
mov edi eax +
test edi edi +
jnz loc_40DCAF  +
call loc_40DD49  +
mov eax [esi+4] +
mov [edi+4] eax +
mov eax [esi+4] +
lea eax [eax+eax+2] +
push eax  +
add esi 10h +
push esi  +
push eax  +
lea eax [edi+10h] +
push eax  +
call sub_410400  +
add esp 10h +
mov eax edi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
mov esi [eax] +
mov ebx [esi-0Ch] +
sub esi 10h +
mov ecx [esi] +
mov eax [ecx] +
push edi  +
mov [ebp+var_4] ebx +
call dword ptr [eax+10h]  +
mov edx [eax] +
push 2  +
push [ebp+arg_4]  +
mov ecx eax +
call dword ptr [edx]  +
mov edi eax +
test edi edi +
jnz loc_40DD0C  +
call loc_40DD49  +
mov eax [ebp+arg_4] +
cmp ebx eax +
jge loc_40DD15  +
mov eax ebx +
lea eax [eax+eax+2] +
push eax  +
lea ecx [esi+10h] +
push ecx  +
push eax  +
lea ebx [edi+10h] +
push ebx  +
call sub_410400  +
mov eax [ebp+var_4] +
mov [edi+4] eax +
add esp 10h +
mov eax esi +
call sub_40D520  +
mov eax [ebp+arg_0] +
pop edi  +
pop esi  +
mov [eax] ebx +
pop ebx  +
leave   +
retn 8  +
***
push 8007000Eh  +
call loc_4088A7  +
mov eax [esi] +
sub eax 10h +
cmp [eax+8] edx +
mov ecx [eax] +
jge loc_40DD78  +
test edx edx +
jle loc_40DD78  +
push edi  +
mov edi [ecx] +
push 2  +
push edx  +
push eax  +
call dword ptr [edi+8]  +
pop edi  +
test eax eax +
jnz loc_40DD7D  +
call loc_40DD49  +
add eax 10h +
mov [esi] eax +
retn   +
***
mov edi edi +
push esi  +
mov esi ecx +
push edi  +
mov edi eax +
mov eax [esi] +
mov ecx [eax-0Ch] +
sub eax 10h +
cmp ecx edi +
jle loc_40DD9E  +
mov edi ecx +
cmp dword ptr [eax+0Ch] 1 +
jle loc_40DDAD  +
push edi  +
push esi  +
call sub_40DCD8  +
jmp loc_40DDD0  +
mov eax [eax+8] +
cmp eax edi +
jge loc_40DDD0  +
mov edx eax +
mov eax 400h +
cmp edx eax +
jle loc_40DDC3  +
add edx eax +
jmp loc_40DDC5  +
add edx edx +
cmp edx edi +
jge loc_40DDCB  +
mov edx edi +
call sub_40DD59  +
pop edi  +
pop esi  +
retn   +
***
test eax eax +
jl loc_40DDEF  +
mov ecx [edx] +
cmp eax [ecx-8] +
jg loc_40DDEF  +
mov [ecx-0Ch] eax +
mov ecx [edx] +
xor edx edx +
mov [ecx+eax*2] dx +
retn   +
***
push 80070057h  +
call loc_4088A7  +
mov ecx [esi] +
lea eax [ecx-10h] +
xor edx edx +
push edi  +
mov edi [eax] +
cmp [eax+4] edx +
jz loc_40DE3F  +
cmp [eax+0Ch] edx +
jge loc_40DE2E  +
cmp [ecx-8] edx +
jge loc_40DE22  +
push 80070057h  +
call loc_4088A7  +
mov [ecx-0Ch] edx +
mov eax [esi] +
xor ecx ecx +
mov [eax] cx +
pop edi  +
retn   +
call sub_40D520  +
mov eax [edi] +
mov ecx edi +
call dword ptr [eax+0Ch]  +
add eax 10h +
mov [esi] eax +
pop edi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 454h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push 4  +
call sub_407287  +
test eax eax +
jz loc_40DE6F  +
push 20h  +
mov ecx ebx +
call sub_40EC10  +
push esi  +
push edi  +
xor edi edi +
push 38h  +
lea eax [ebp+ExecInfo.fMask] +
push edi  +
push eax  +
mov [ebp+ExecInfo.cbSize] edi +
call sub_413F70  +
add esp 0Ch +
lea eax [ebp+var_418] +
push eax  +
lea eax [ebp+var_414] +
push eax  +
push offset aOpen  +
mov esi offset a_htm +
push esi  +
push 1  +
push edi  +
mov [ebp+var_418] 208h +
call ds:AssocQueryStringW  +
mov edi eax +
test edi edi +
jl loc_40DF12  +
lea eax [ebp+ExecInfo] +
push eax  +
mov [ebp+ExecInfo.cbSize] 3Ch +
mov [ebp+ExecInfo.fMask] 101h +
mov [ebp+ExecInfo.lpFile] ebx +
mov [ebp+ExecInfo.lpClass] esi +
mov [ebp+ExecInfo.nShow] 0Ah +
call ds:ShellExecuteExW  +
test eax eax +
jnz loc_40DF17  +
call ds:GetLastError  +
test eax eax +
jle loc_40DF0C  +
and eax 0FFFFh +
or eax 80070000h +
mov edi eax +
test edi edi +
jge loc_40DF17  +
call sub_40EF13  +
mov ecx [ebp+var_4] +
mov eax edi +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_40FFC3  +
leave   +
retn   +
***
call ds:IsDebuggerPresent  +
test eax eax +
jnz locret_40DF45  +
push 8  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
push edi  +
xor edi edi +
xor ebx ebx +
mov [ebp+hKey] edi +
mov [esi] eax +
cmp [ebp+lpValueName] edi +
jnz loc_40DF71  +
call sub_40EF13  +
mov ebx 80070057h +
jmp loc_40DFEA  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push edi  +
push offset SubKey  +
push 80000002h  +
call ds:RegOpenKeyExW  +
cmp eax 2 +
jz loc_40DFB8  +
cmp eax edi +
jnz loc_40DFC1  +
push 4  +
pop eax  +
mov [ebp+cbData] eax +
mov [ebp+Type] eax +
lea eax [ebp+cbData] +
push eax  +
push esi  +
lea eax [ebp+Type] +
push eax  +
push edi  +
push [ebp+lpValueName]  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
cmp eax 2 +
jnz loc_40DFBD  +
xor ebx ebx +
inc ebx  +
jmp loc_40DFDC  +
cmp eax edi +
jz loc_40DFDC  +
call sub_40EF13  +
call ds:GetLastError  +
cmp eax edi +
jle loc_40DFDA  +
and eax 0FFFFh +
or eax 80070000h +
mov ebx eax +
cmp [ebp+hKey] edi +
jz loc_40DFEA  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
pop edi  +
mov eax ebx +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1054h +
call sub_419880  +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
mov edi ecx +
mov esi edi +
mov [ebp+pcchResult] 824h +
call sub_40E92D  +
test ebx ebx +
jnz loc_40E035  +
call sub_40EF13  +
mov esi 80070057h +
jmp loc_40E070  +
push 0  +
lea eax [ebp+pcchResult] +
push eax  +
push 825h  +
lea eax [ebp+pszResult] +
push eax  +
push 0  +
push 0Ah  +
push ebx  +
call CoInternetParseUrl  +
mov esi eax +
test esi esi +
jnz loc_40E068  +
lea eax [ebp+pszResult] +
push eax  +
call sub_40E868  +
jmp loc_40E070  +
push ebx  +
call sub_40E868  +
xor esi esi +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 34F0h +
call sub_419880  +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi edx +
mov ebx ecx +
mov [ebp+var_34B0] esi +
call sub_40E92D  +
or [ebp+UrlComponents.nScheme] 0FFFFFFFFh +
lea eax [ebp+var_48] +
mov [ebp+UrlComponents.lpszScheme] eax +
lea eax [ebp+var_454] +
mov [ebp+UrlComponents.lpszHostName] eax +
xor eax eax +
mov [ebp+UrlComponents.nPort] ax +
lea eax [ebp+var_14C] +
mov [ebp+UrlComponents.lpszUserName] eax +
mov eax 80h +
mov [ebp+UrlComponents.dwUserNameLength] eax +
mov [ebp+UrlComponents.dwPasswordLength] eax +
lea ecx [ebp+var_250] +
lea eax [ebp+var_24A4] +
mov [ebp+UrlComponents.lpszPassword] ecx +
mov [ebp+UrlComponents.lpszUrlPath] eax +
mov eax 800h +
lea ecx [ebp+var_34A8] +
mov [ebp+UrlComponents.dwStructSize] 3Ch +
mov [ebp+UrlComponents.dwSchemeLength] 20h +
mov [ebp+UrlComponents.dwHostNameLength] 100h +
mov [ebp+UrlComponents.dwUrlPathLength] eax +
mov [ebp+UrlComponents.lpszExtraInfo] ecx +
mov [ebp+UrlComponents.dwExtraInfoLength] eax +
test ebx ebx +
jnz loc_40E157  +
call sub_40EF13  +
mov esi 80070057h +
jmp loc_40E262  +
lea esi [ebp+dwUrlLength] +
mov eax 824h +
mov ecx ebx +
call sub_40E815  +
mov esi eax +
test esi esi +
jge loc_40E179  +
call sub_40EF13  +
jmp loc_40E262  +
push edi  +
lea eax [ebp+UrlComponents] +
push eax  +
push 0  +
push [ebp+dwUrlLength]  +
push ebx  +
call ds:InternetCrackUrlW  +
mov edi 0FFFFh +
mov ebx 80070000h +
test eax eax +
jnz loc_40E1B9  +
call ds:GetLastError  +
xor ecx ecx +
cmp eax ecx +
jle loc_40E1AE  +
and eax edi +
or eax ebx +
mov esi eax +
cmp esi ecx +
jge loc_40E1BB  +
jmp loc_40E248  +
xor ecx ecx +
cmp [ebp+UrlComponents.nScheme] 5 +
mov [ebp+pcchResult] 824h +
lea eax [ebp+pcchResult] +
jnz loc_40E1F2  +
push ecx  +
push eax  +
push 825h  +
lea eax [ebp+szUrl] +
push eax  +
push ecx  +
push 0Ah  +
push [ebp+UrlComponents.lpszUrlPath]  +
call CoInternetParseUrl  +
jmp loc_40E242  +
push eax  +
lea eax [ebp+szUrl] +
push eax  +
push 80000000h  +
lea eax [ebp+UrlComponents] +
push eax  +
mov [ebp+UrlComponents.dwExtraInfoLength] ecx +
mov [ebp+UrlComponents.lpszExtraInfo] ecx +
mov [ebp+UrlComponents.dwUserNameLength] ecx +
mov [ebp+UrlComponents.lpszUserName] ecx +
mov [ebp+UrlComponents.dwPasswordLength] ecx +
mov [ebp+UrlComponents.lpszPassword] ecx +
call ds:InternetCreateUrlW  +
test eax eax +
jnz loc_40E24F  +
call ds:GetLastError  +
test eax eax +
jle loc_40E242  +
and eax edi +
or eax ebx +
mov esi eax +
test esi esi +
jge loc_40E24F  +
call sub_40EF13  +
jmp loc_40E261  +
mov edi [ebp+var_34B0] +
lea eax [ebp+szUrl] +
push eax  +
call sub_40E868  +
pop edi  +
mov ecx [ebp+var_4] +
mov eax esi +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 3414h +
call sub_419880  +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
mov [ebp+var_33E0] eax +
mov eax [ebp+arg_4] +
push ebx  +
push esi  +
mov [ebp+var_33DC] eax +
mov eax [ebp+arg_8] +
push edi  +
mov [ebp+var_33D8] eax +
mov eax [ebp+arg_C] +
mov esi edx +
push 4  +
mov ebx ecx +
mov [ebp+hLibModule] esi +
mov [ebp+var_33D4] eax +
call sub_407287  +
xor edi edi +
test eax eax +
jz loc_40E2DD  +
mov ecx esi +
cmp esi edi +
jnz loc_40E2D6  +
mov ecx ebx +
push 28h  +
call sub_40EC10  +
mov esi [ebp+var_33E0] +
call sub_40E92D  +
mov esi [ebp+var_33DC] +
call sub_40E92D  +
mov esi [ebp+var_33D8] +
call sub_40E92D  +
mov esi [ebp+var_33D4] +
call sub_40E92D  +
mov esi 825h +
mov [ebp+var_33E8] esi +
mov [ebp+lpFileName] edi +
mov [ebp+var_33E4] edi +
mov [ebp+var_3410] esi +
mov [ebp+var_3414] edi +
mov [ebp+var_340C] edi +
mov [ebp+var_3400] esi +
mov [ebp+var_3404] edi +
mov [ebp+var_33FC] edi +
cmp ebx edi +
jnz loc_40E357  +
call sub_40EF13  +
mov ebx 80070057h +
jmp loc_40E519  +
lea ecx [ebp+var_3404] +
call sub_40DFF7  +
mov ebx eax +
cmp ebx edi +
jge loc_40E372  +
call sub_40EF13  +
jmp loc_40E519  +
mov ecx [ebp+var_3404] +
lea edx [ebp+var_3414] +
call sub_40E085  +
mov ebx eax +
cmp ebx edi +
jl loc_40E368  +
cmp [ebp+hLibModule] edi +
jnz loc_40E398  +
mov ebx 80070057h +
jmp loc_40E368  +
push [ebp+hLibModule]  +
lea edi [ebp+lpFileName] +
call sub_40E868  +
lea eax [ebp+FindFileData] +
push eax  +
push [ebp+lpFileName]  +
call ds:FindFirstFileW  +
mov [ebp+hFindFile] eax +
cmp eax 0FFFFFFFFh +
jz loc_40E3D9  +
cmp [ebp+FindFileData.nFileSizeHigh] 0 +
jnz loc_40E3E8  +
cmp [ebp+FindFileData.nFileSizeLow] 0 +
jnz loc_40E3E8  +
mov ebx 80004005h +
call sub_40EF13  +
jmp loc_40E504  +
push offset aDfshim_dll  +
call ds:LoadLibraryW  +
mov [ebp+hLibModule] eax +
test eax eax +
jz loc_40E54D  +
push offset aGetdeploymentd  +
push eax  +
call ds:GetProcAddress  +
test eax eax +
jnz loc_40E420  +
call sub_40EF13  +
mov ebx 80004005h +
jmp loc_40E4EF  +
lea ecx [ebp+var_33F8] +
push ecx  +
lea ecx [ebp+var_2128] +
push ecx  +
lea ecx [ebp+var_33F4] +
push ecx  +
lea ecx [ebp+var_10D8] +
push ecx  +
lea ecx [ebp+var_33F0] +
push ecx  +
lea ecx [ebp+var_88] +
push ecx  +
lea ecx [ebp+var_3408] +
push ecx  +
lea ecx [ebp+var_3178] +
push ecx  +
push [ebp+lpFileName]  +
mov [ebp+var_3408] esi +
push [ebp+var_3414]  +
mov [ebp+var_33F0] 40h +
mov [ebp+var_33F4] esi +
mov [ebp+var_33F8] esi +
call eax  +
mov ebx eax +
test ebx ebx +
jge loc_40E48F  +
call sub_40EF13  +
jmp loc_40E4EF  +
mov edi [ebp+var_33E0] +
lea eax [ebp+var_3178] +
push eax  +
call sub_40E868  +
mov edi [ebp+var_33DC] +
lea eax [ebp+var_88] +
push eax  +
call sub_40E868  +
mov edi [ebp+var_33D8] +
lea eax [ebp+var_10D8] +
push eax  +
call sub_40E868  +
mov edi [ebp+var_33D4] +
lea eax [ebp+var_2128] +
push eax  +
call sub_40E868  +
push 4  +
call sub_407287  +
test eax eax +
jz loc_40E4EF  +
mov ecx [ebp+lpFileName] +
push 29h  +
call sub_40EC10  +
cmp [ebp+hLibModule] 0 +
jz loc_40E504  +
push [ebp+hLibModule]  +
call ds:FreeLibrary  +
cmp [ebp+hFindFile] 0FFFFFFFFh +
jz loc_40E519  +
push [ebp+hFindFile]  +
call ds:FindClose  +
lea esi [ebp+var_3404] +
call sub_40E92D  +
lea esi [ebp+var_3414] +
call sub_40E92D  +
lea esi [ebp+lpFileName] +
call sub_40E92D  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
mov eax ebx +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn 10h  +
mov ebx 80004005h +
jmp loc_40E488  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 42Ch +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push edi  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
xor edi edi +
push edi  +
push offset aSoftwareMicr_1  +
push 80000002h  +
mov esi ecx +
mov [ebp+var_418] edi +
mov [ebp+hKey] edi +
call ds:RegOpenKeyExW  +
cmp eax 2 +
jnz loc_40E5B4  +
mov [ebp+var_418] 1 +
jmp loc_40E68A  +
cmp eax edi +
jz loc_40E5CA  +
call sub_40EF13  +
call ds:GetLastError  +
cmp eax edi +
jmp loc_40E678  +
mov [ebp+Type] 1 +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
lea eax [ebp+Type] +
push eax  +
push 0  +
lea eax [ebp+cbValueName] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
push edi  +
push [ebp+hKey]  +
mov [ebp+cbValueName] 104h +
mov [ebp+cbData] 208h +
call ds:RegEnumValueW  +
inc edi  +
test eax eax +
jnz loc_40E664  +
cmp [ebp+Type] 1 +
jnz loc_40E5D4  +
lea eax [ebp+Data] +
push eax  +
call sub_40E8D9  +
mov [ebp+var_42C] eax +
test eax eax +
jz loc_40E653  +
lea eax [ebp+var_42C] +
push eax  +
lea eax [ebp+ValueName] +
push eax  +
call sub_40E7A6  +
jmp loc_40E5D4  +
call sub_40EF13  +
mov [ebp+var_418] 8007000Eh +
jmp loc_40E68A  +
cmp eax 103h +
jz loc_40E68A  +
call sub_40EF13  +
call ds:GetLastError  +
test eax eax +
jle loc_40E684  +
and eax 0FFFFh +
or eax 80070000h +
mov [ebp+var_418] eax +
cmp [ebp+hKey] 0 +
pop edi  +
pop esi  +
jz loc_40E6A1  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
mov ecx [ebp+var_4] +
mov eax [ebp+var_418] +
xor ecx ebp +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+hEvent]  +
call ds:SetEvent  +
push 0  +
push 1  +
push 4Eh  +
push 0  +
call ds:PostMessageW  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
or [ebp+var_8] 0FFFFFFFFh +
push ebx  +
push [ebp+hObject]  +
xor ebx ebx +
push ebx  +
push 400h  +
call ds:OpenProcess  +
mov [ebp+var_C] eax +
cmp eax ebx +
jz loc_40E799  +
lea ecx [ebp+hObject] +
push ecx  +
push 18h  +
push eax  +
mov [ebp+hObject] ebx +
call ds:OpenProcessToken  +
test eax eax +
jz loc_40E790  +
push edi  +
mov edi ds:GetTokenInformation +
lea eax [ebp+ReturnLength] +
push eax  +
push ebx  +
push ebx  +
push 19h  +
push [ebp+hObject]  +
call edi  +
test eax eax +
jnz loc_40E786  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_40E786  +
push esi  +
push [ebp+ReturnLength]  +
push ebx  +
call ds:LocalAlloc  +
mov esi eax +
cmp esi ebx +
jz loc_40E785  +
lea eax [ebp+ReturnLength] +
push eax  +
push [ebp+ReturnLength]  +
push esi  +
push 19h  +
push [ebp+hObject]  +
call edi  +
test eax eax +
jz loc_40E77E  +
push dword ptr [esi]  +
call ds:GetSidSubAuthorityCount  +
mov al [eax] +
dec al  +
movzx eax al +
push eax  +
push dword ptr [esi]  +
call ds:GetSidSubAuthority  +
mov eax [eax] +
mov [ebp+var_8] eax +
push esi  +
call ds:LocalFree  +
pop esi  +
push [ebp+hObject]  +
call ds:CloseHandle  +
pop edi  +
push [ebp+var_C]  +
call ds:CloseHandle  +
mov eax [ebp+var_8] +
pop ebx  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
xor ebx ebx +
cmp [ebp+arg_0] ebx +
jnz loc_40E7BF  +
mov ebx 80070057h +
call sub_40EF13  +
jmp loc_40E809  +
push edi  +
push 14h  +
call sub_40FC22  +
mov edi eax +
pop ecx  +
cmp edi ebx +
jz loc_40E7F1  +
mov eax [esi] +
push [ebp+arg_0]  +
mov dword ptr [edi+4] 825h +
mov [edi] ebx +
mov [edi+8] ebx +
mov [edi+10h] eax +
call sub_40E868  +
mov eax [ebp+arg_4] +
mov eax [eax] +
mov [edi+0Ch] eax +
jmp loc_40E7F3  +
xor edi edi +
mov [esi] edi +
test edi edi +
pop edi  +
jnz loc_40E806  +
call sub_40EF13  +
mov ebx 8007000Eh +
jmp loc_40E809  +
inc dword ptr [esi+4]  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 8  +
***
test ecx ecx +
jz loc_40E852  +
cmp eax 7FFFFFFFh +
ja loc_40E852  +
push edi  +
xor edi edi +
mov edx eax +
test eax eax +
jz loc_40E837  +
cmp [ecx] di +
jz loc_40E833  +
inc ecx  +
inc ecx  +
dec edx  +
jnz loc_40E829  +
test edx edx +
jnz loc_40E83C  +
mov edi 80070057h +
test esi esi +
jz loc_40E84D  +
test edi edi +
jl loc_40E84A  +
sub eax edx +
mov [esi] eax +
jmp loc_40E84D  +
and dword ptr [esi] 0 +
mov eax edi +
pop edi  +
jmp loc_40E857  +
mov eax 80070057h +
test eax eax +
jge locret_40E862  +
test esi esi +
jz locret_40E862  +
and dword ptr [esi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi edi +
xor ebx ebx +
call sub_40E92D  +
mov ecx [ebp+arg_0] +
test ecx ecx +
jz loc_40E8CC  +
mov eax [edi+4] +
lea esi [edi+8] +
call sub_40E815  +
mov ebx eax +
test ebx ebx +
jl loc_40E8B5  +
mov eax [esi] +
xor ecx ecx +
push 2  +
inc eax  +
pop edx  +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_40FC50  +
pop ecx  +
mov [edi] eax +
test eax eax +
jnz loc_40E8BC  +
and [esi] eax +
mov ebx 8007000Eh +
call sub_40EF13  +
jmp loc_40E8CC  +
mov ecx [esi] +
push [ebp+arg_0]  +
inc ecx  +
push ecx  +
push eax  +
call sub_4102B4  +
add esp 0Ch +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push 0Ch  +
call sub_40FC22  +
pop ecx  +
test eax eax +
jz loc_40E8FD  +
and dword ptr [eax] 0 +
and dword ptr [eax+8] 0 +
mov dword ptr [eax+4] 825h +
mov esi eax +
jmp loc_40E8FF  +
xor esi esi +
test esi esi +
jz loc_40E921  +
push edi  +
push [ebp+arg_0]  +
mov edi esi +
call sub_40E868  +
pop edi  +
test eax eax +
jge loc_40E921  +
call sub_40E92D  +
push esi  +
call sub_40FFB3  +
pop ecx  +
xor esi esi +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov eax [esi] +
test eax eax +
jz loc_40E93D  +
push eax  +
call sub_4102A4  +
and dword ptr [esi] 0 +
pop ecx  +
and dword ptr [esi+8] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax [esi] +
and [ebp+var_4] 0 +
push edi  +
lea ecx [ebp+var_4] +
push ecx  +
push 4  +
lea edi [ebx+8] +
push edi  +
push esi  +
call dword ptr [eax+10h]  +
mov edx eax +
test edx edx +
jl loc_40E984  +
mov edi [edi] +
test edi edi +
jz loc_40E989  +
mov eax [esi] +
lea ecx [ebp+var_4] +
push ecx  +
lea ecx [edi+edi] +
push ecx  +
push dword ptr [ebx]  +
push esi  +
call dword ptr [eax+10h]  +
mov edx eax +
test edx edx +
jge loc_40E989  +
call sub_40EF13  +
mov eax edx +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push esi  +
push edi  +
mov esi ebx +
call sub_40E92D  +
mov eax [ebp+arg_0] +
mov ecx [eax] +
lea edx [ebp+var_C] +
push edx  +
push 4  +
lea edx [ebp+var_4] +
push edx  +
xor esi esi +
push eax  +
mov [ebp+var_4] esi +
mov [ebp+var_C] esi +
call dword ptr [ecx+0Ch]  +
cmp eax esi +
mov [ebp+var_8] eax +
jl loc_40EA1D  +
cmp [ebp+var_4] esi +
jz loc_40EA2F  +
mov edi [ebx+4] +
cmp [ebp+var_4] edi +
ja loc_40E9D6  +
mov edi [ebp+var_4] +
xor ecx ecx +
push 2  +
pop edx  +
lea eax [edi+1] +
mul  edx +
seto cl  +
neg ecx  +
or ecx eax +
push ecx  +
call sub_40FC50  +
pop ecx  +
mov [ebx] eax +
test eax eax +
jnz loc_40EA02  +
call sub_40EF13  +
mov [ebp+var_8] 8007000Eh +
jmp loc_40EA35  +
mov ecx [ebp+arg_0] +
mov ecx [ecx] +
lea edx [ebp+var_C] +
push edx  +
lea esi [edi+edi] +
push esi  +
push eax  +
push [ebp+arg_0]  +
call dword ptr [ecx+0Ch]  +
mov [ebp+var_8] eax +
test eax eax +
jge loc_40EA24  +
call sub_40EF13  +
jmp loc_40EA2F  +
mov eax [ebx] +
xor ecx ecx +
mov [esi+eax] cx +
mov [ebx+8] edi +
cmp [ebp+var_8] 0 +
jge loc_40EA3C  +
mov esi ebx +
call sub_40E92D  +
mov eax [ebp+var_8] +
pop edi  +
pop esi  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0DCh +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax dword_41FA18 +
or eax dword_41FA1C +
jz loc_40EA71  +
xor eax eax +
inc eax  +
jmp loc_40EAE5  +
and [ebp+var_D0] 0 +
push esi  +
lea eax [ebp+var_DC] +
push eax  +
push 0  +
push 0  +
lea eax [ebp+var_D4] +
push eax  +
push 1  +
push offset dword_406704  +
push 0  +
push offset loc_40EAF6  +
mov [ebp+var_D4] offset dword_406714 +
call ds:RegisterTraceGuidsW  +
mov esi eax +
test esi esi +
jz loc_40EAE4  +
push edi  +
push esi  +
push offset aPresentation_2  +
mov eax 0C8h +
lea edi [ebp+var_CC] +
call sub_40EE05  +
pop ecx  +
pop ecx  +
mov eax edi +
push eax  +
call ds:OutputDebugStringW  +
pop edi  +
test esi esi +
jle loc_40EAE2  +
and esi 0FFFFh +
or esi 80070000h +
mov eax esi +
pop esi  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
push esi  +
xor esi esi +
sub eax 4 +
jz loc_40EB1C  +
dec eax  +
jz loc_40EB0E  +
push 57h  +
pop esi  +
jmp loc_40EB3D  +
mov dword_41FA18 esi +
mov dword_41FA1C esi +
jmp loc_40EB3D  +
push dword ptr [ebp+14h]  +
call ds:GetTraceLoggerHandle  +
push edx  +
push eax  +
mov dword_41FA18 eax +
mov dword_41FA1C edx +
call ds:GetTraceEnableLevel  +
mov byte_41EEF8 al +
mov eax esi +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 30h +
push 30h  +
lea eax [ebp+var_30] +
push 0  +
push eax  +
call sub_413F70  +
add esp 0Ch +
push 30h  +
pop eax  +
push [ebp+arg_4]  +
lea ecx [ebp+var_30] +
push [ebp+arg_0]  +
mov word ptr [ebp+var_30] ax +
call sub_40EB7F  +
leave   +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax offset dword_406714 +
cdq   +
mov [ecx+18h] eax +
mov al [ebp+arg_4] +
mov [ecx+4] al +
mov al [ebp+arg_0] +
push 2  +
mov [ecx+5] al +
pop eax  +
push ecx  +
push dword_41FA1C  +
mov [ecx+1Ch] edx +
push dword_41FA18  +
mov dword ptr [ecx+2Ch] 80000h +
mov [ecx+6] ax +
call ds:TraceEvent  +
test eax eax +
jle loc_40EBCB  +
and eax 0FFFFh +
or eax 80070000h +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
push 34h  +
lea eax [ebp+var_34] +
push 0  +
push eax  +
call sub_413F70  +
add esp 0Ch +
push 34h  +
pop eax  +
push [ebp+arg_4]  +
mov word ptr [ebp+var_34] ax +
mov eax [ebp+arg_8] +
push [ebp+arg_0]  +
lea ecx [ebp+var_34] +
mov [ebp+var_4] eax +
call sub_40EB7F  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
mov eax 1084h +
call sub_419880  +
mov eax dword_41E3B0 +
xor eax esp +
mov [esp+arg_1078] eax +
push esi  +
push 30h  +
lea eax [esp+0Ch] +
push 0  +
push eax  +
mov esi ecx +
call sub_413F70  +
add esp 0Ch +
push 30h  +
pop eax  +
mov [esp+8] ax +
test esi esi +
jnz loc_40EC55  +
mov esi offset dword_4060AC +
mov edx esi +
lea ecx [esp+4+arg_2C] +
call sub_40ED8C  +
lea esi [esp+4] +
lea eax [esp+4+arg_2C] +
call sub_40ED4D  +
push [ebp+arg_0]  +
mov eax [esp+8] +
add eax 2 +
add [esp+0Ch] ax +
push 4  +
lea ecx [esp+10h] +
call sub_40EB7F  +
mov ecx [esp+4+arg_1078] +
pop esi  +
xor ecx esp +
call sub_40FFC3  +
mov esp ebp +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1084h +
call sub_419880  +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 34h  +
lea eax [ebp+var_1080] +
push 0  +
push eax  +
mov esi ecx +
call sub_413F70  +
push 34h  +
lea eax [ebp+var_1080] +
push 0  +
push eax  +
call sub_413F70  +
add esp 18h +
push 34h  +
pop eax  +
mov word ptr [ebp+var_1080] ax +
test esi esi +
jnz loc_40ECF3  +
mov esi offset dword_4060AC +
mov edx esi +
lea ecx [ebp+var_104C] +
call sub_40ED8C  +
lea esi [ebp+var_1084] +
lea eax [ebp+var_104C] +
call sub_40ED4D  +
mov eax [ebp+var_1084] +
add eax 2 +
add word ptr [ebp+var_1080] ax +
mov eax [ebp+arg_0] +
push 35h  +
push 5  +
lea ecx [ebp+var_1080] +
mov [ebp+var_1050] eax +
call sub_40EB7F  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_40FFC3  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
and [ebp+var_4] 0 +
test eax eax +
jz loc_40ED6C  +
push edi  +
lea edi [ebp+var_4] +
mov edx 824h +
call sub_40EDCE  +
pop edi  +
jmp loc_40ED71  +
mov eax 80070057h +
test esi esi +
jz locret_40ED85  +
test eax eax +
jl loc_40ED82  +
mov ecx [ebp+var_4] +
add ecx ecx +
mov [esi] ecx +
leave   +
retn   +
and dword ptr [esi] 0 +
leave   +
retn   +
***
mov edi edi +
push esi  +
mov esi edx +
push edi  +
xor eax eax +
mov edi 824h +
sub esi ecx +
lea edx [edi+7FFFF7DAh] +
test edx edx +
jz loc_40EDB6  +
movzx edx word ptr [esi+ecx] +
test dx dx +
jz loc_40EDB6  +
mov [ecx] dx +
inc ecx  +
inc ecx  +
dec edi  +
jnz loc_40ED9B  +
test edi edi +
pop edi  +
pop esi  +
jnz loc_40EDC3  +
dec ecx  +
dec ecx  +
mov eax 8007007Ah +
xor edx edx +
mov [ecx] dx +
retn   +
***
mov edi edi +
push esi  +
mov esi eax +
xor eax eax +
mov ecx edx +
test edx edx +
jz loc_40EDE9  +
cmp [esi] ax +
jz loc_40EDE5  +
inc esi  +
inc esi  +
dec edx  +
jnz loc_40EDDB  +
test edx edx +
jnz loc_40EDEE  +
mov eax 80070057h +
pop esi  +
test edi edi +
jz locret_40EDFF  +
test eax eax +
jl loc_40EDFC  +
sub ecx edx +
mov [edi] ecx +
retn   +
and dword ptr [edi] 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
shr eax 1 +
push 0  +
pop ecx  +
jz loc_40EE18  +
cmp eax 7FFFFFFFh +
jbe loc_40EE1D  +
mov ecx 80070057h +
test ecx ecx +
jl loc_40EE54  +
push ebx  +
push esi  +
lea esi [eax-1] +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
xor ebx ebx +
push esi  +
push edi  +
call sub_410D2C  +
add esp 10h +
test eax eax +
jl loc_40EE45  +
cmp eax esi +
ja loc_40EE45  +
jnz loc_40EE50  +
jmp loc_40EE4A  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop esi  +
mov ecx ebx +
pop ebx  +
mov eax ecx +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push offset aFaultrep_dll  +
call ds:LoadLibraryW  +
test eax eax +
jz loc_40EEAE  +
push offset aReportfault  +
push eax  +
call ds:GetProcAddress  +
test eax eax +
jz loc_40EEAE  +
push 0  +
push dword ptr [ebp+8]  +
call eax  +
cmp eax 3 +
jz loc_40EEA9  +
cmp eax 4 +
jz loc_40EEA9  +
test eax eax +
jz loc_40EEA9  +
cmp eax 7 +
jz loc_40EEA9  +
cmp eax 1 +
jz loc_40EEA9  +
cmp eax 2 +
jz loc_40EEA9  +
xor eax eax +
jmp loc_40EEB0  +
xor eax eax +
inc eax  +
jmp loc_40EEB0  +
xor al al +
pop ebp  +
retn 4  +
***
call sub_412220  +
and dword ptr [ebp-4] 0 +
mov eax [ebp+8] +
mov [ebp-1Ch] eax +
lea eax [ebp-1Ch] +
push eax  +
push 1  +
push 0  +
push dword ptr [ebp+0Ch]  +
call ds:RaiseException  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_412265  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_41FA14 +
mov ecx [ebp+4] +
inc eax  +
and eax 1Fh +
mov dword_41FA14 eax +
mov dword_41FA20[eax*4] ecx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov dword ptr [esi] offset off_40586C +
mov dword ptr [esi+4] offset off_4058A4 +
xor ecx ecx +
push ebx  +
mov eax 825h +
push edi  +
push [ebp+arg_0]  +
lea edi [esi+0Ch] +
mov [edi+4] eax +
mov [edi] ecx +
mov [edi+8] ecx +
lea ebx [esi+18h] +
mov [ebx+4] eax +
mov [ebx] ecx +
mov [ebx+8] ecx +
mov [esi+28h] eax +
mov [esi+24h] ecx +
mov [esi+2Ch] ecx +
mov [esi+34h] eax +
mov [esi+30h] ecx +
mov [esi+38h] ecx +
mov [esi+40h] eax +
mov [esi+3Ch] ecx +
mov [esi+44h] ecx +
call sub_40E868  +
push [ebp+arg_4]  +
mov edi ebx +
call sub_40E868  +
xor eax eax +
pop edi  +
mov [esi+8] eax +
mov [esi+4Ch] eax +
mov [esi+48h] eax +
mov eax esi +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
and dword ptr [eax] 0 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_402620 +
xor edx edx +
cmps   +
jz loc_40EFDC  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_406870 +
xor edx edx +
cmps   +
jnz loc_40EFE3  +
mov ecx [ebp+8] +
mov [eax] ecx +
jmp loc_40F004  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_4068A0 +
xor edx edx +
cmps   +
jnz loc_40F013  +
mov ecx [ebp+8] +
test ecx ecx +
jz loc_40F000  +
lea edx [ecx+4] +
jmp loc_40F002  +
xor edx edx +
mov [eax] edx +
cmp dword ptr [eax] 0 +
jz loc_40F013  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
xor eax eax +
jmp loc_40F018  +
mov eax 80004002h +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 8 +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea esi [edi+8] +
push esi  +
call ds:InterlockedDecrement  +
mov eax [esi] +
test eax eax +
jnz loc_40F066  +
call sub_407546  +
push edi  +
call sub_40FFB3  +
pop ecx  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+var_4] 0 +
mov eax [ebp+arg_C] +
push ebx  +
push 4  +
mov ecx offset aAssemblyidenti +
pop ebx  +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_40F0AC  +
test dx dx +
jz loc_40F0A8  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_40F0AC  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_40F088  +
xor eax eax +
jmp loc_40F0B1  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_40F1CB  +
push esi  +
mov esi [ebp+arg_1C] +
mov eax [esi] +
push edi  +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [ebp+arg_C] +
push ecx  +
push ebx  +
push offset aName  +
push 0  +
mov edi offset dword_4060AC +
push edi  +
push esi  +
mov [ebp+var_8] 400h +
call dword ptr [eax+38h]  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_40F1C4  +
mov eax [ebp+arg_C] +
mov ecx offset aWindowsbase +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_40F118  +
test dx dx +
jz loc_40F114  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_40F118  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_40F0F4  +
xor eax eax +
jmp loc_40F11D  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_40F14C  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [ebp+arg_C] +
push ecx  +
push 7  +
push offset aVersion  +
push 0  +
push edi  +
push esi  +
call dword ptr [eax+38h]  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_40F1C4  +
mov edi [ebp+arg_0] +
add edi 30h +
jmp loc_40F1A6  +
mov eax [ebp+arg_C] +
mov ecx offset aMicrosoft_wind +
mov dx [eax] +
cmp dx [ecx] +
jnz loc_40F178  +
test dx dx +
jz loc_40F174  +
mov dx [eax+2] +
cmp dx [ecx+2] +
jnz loc_40F178  +
add eax ebx +
add ecx ebx +
test dx dx +
jnz loc_40F154  +
xor eax eax +
jmp loc_40F17D  +
sbb eax eax +
sbb eax 0FFFFFFFFh +
test eax eax +
jnz loc_40F1AE  +
mov eax [esi] +
lea ecx [ebp+var_8] +
push ecx  +
lea ecx [ebp+arg_C] +
push ecx  +
push 7  +
push offset aVersion  +
push 0  +
push edi  +
push esi  +
call dword ptr [eax+38h]  +
mov [ebp+var_4] eax +
test eax eax +
jl loc_40F1C4  +
mov edi [ebp+arg_0] +
add edi 3Ch +
push [ebp+arg_C]  +
call sub_40E868  +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+30h] 0 +
jz loc_40F1C9  +
cmp dword ptr [eax+3Ch] 0 +
jz loc_40F1C9  +
mov [ebp+var_4] 80004005h +
call sub_40EF13  +
pop edi  +
pop esi  +
mov eax [ebp+var_4] +
pop ebx  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1270h +
call sub_419880  +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebx+18h] +
mov ecx [ebx+0Ch] +
push esi  +
push edi  +
xor edi edi +
push edi  +
lea edx [ebp+pcchResult] +
push edx  +
push 824h  +
lea edx [ebp+pszResult] +
push edx  +
push edi  +
push eax  +
push ecx  +
mov [ebp+ppv] edi +
mov [ebp+pcchResult] edi +
call CoInternetCombineUrl  +
mov esi eax +
cmp esi edi +
jl loc_40F32E  +
lea eax [ebp+pszResult] +
lea edi [ebx+24h] +
push eax  +
call sub_40E868  +
mov esi eax +
test esi esi +
jl loc_40F32E  +
push 4  +
call sub_407287  +
test eax eax +
jz loc_40F25E  +
push 2Ah  +
lea ecx [ebp+pszResult] +
call sub_40EC10  +
lea edi [ebx+4Ch] +
push edi  +
push offset stru_402660  +
push 1  +
push 0  +
push offset stru_4027A0  +
call ds:CoCreateInstance  +
mov esi eax +
test esi esi +
jl loc_40F32E  +
mov edx [ebx+0Ch] +
mov ecx [edi] +
push 0  +
lea eax [ebx+48h] +
and dword ptr [eax] 0 +
mov esi [ecx] +
push eax  +
push edx  +
push ecx  +
call dword ptr [esi+14h]  +
mov esi eax +
test esi esi +
jl loc_40F32E  +
mov eax [ebx+24h] +
mov edi [edi] +
and [ebp+var_1268] 0 +
mov ecx [edi] +
push 0  +
lea edx [ebp+var_1268] +
push edx  +
push eax  +
push edi  +
call dword ptr [ecx+14h]  +
mov esi eax +
test esi esi +
jl loc_40F32E  +
mov esi [ebx+48h] +
sub esi [ebp+var_1268] +
mov edi 80004005h +
neg esi  +
sbb esi esi +
and esi edi +
jl loc_40F32E  +
mov ecx [ebx+24h] +
lea eax [ebx+4] +
push eax  +
push 0  +
push 104h  +
lea eax [ebp+var_210] +
push eax  +
push ecx  +
push 0  +
call URLDownloadToCacheFileW  +
mov esi eax +
test esi esi +
jl loc_40F32E  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_406890  +
push 1  +
push 0  +
push offset stru_406880  +
call ds:CoCreateInstance  +
mov esi eax +
test esi esi +
jl loc_40F32E  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push ebx  +
push eax  +
call dword ptr [ecx+28h]  +
mov esi eax +
test esi esi +
jge loc_40F335  +
call sub_40EF13  +
jmp loc_40F36A  +
mov eax [ebp+ppv] +
mov ecx [eax] +
lea edx [ebp+var_210] +
push edx  +
push eax  +
call dword ptr [ecx+50h]  +
mov esi eax +
cmp esi edi +
jnz loc_40F356  +
cmp dword ptr [ebx+30h] 0 +
jz loc_40F356  +
xor esi esi +
push 4  +
call sub_407287  +
test eax eax +
jz loc_40F36A  +
push 2Bh  +
push 4  +
call sub_40EB49  +
mov eax [ebp+ppv] +
test eax eax +
jz loc_40F381  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and [ebp+ppv] 0 +
mov eax [ebx+4Ch] +
test eax eax +
jz loc_40F392  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
and dword ptr [ebx+4Ch] 0 +
mov ecx [ebp+var_4] +
pop edi  +
mov eax esi +
xor ecx ebp +
pop esi  +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
mov dword ptr [eax+24h] 20000h +
xor eax eax +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor edx edx +
cmp [ebp+arg_C] 3 +
jnz loc_40F413  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push [ebp+arg_10]  +
lea edi [esi+20h] +
call sub_40E868  +
mov edi [edi] +
mov eax [esi+48h] +
and [ebp+arg_C] 0 +
mov ecx [eax] +
push 0  +
lea edx [ebp+arg_C] +
push edx  +
push edi  +
push eax  +
call dword ptr [ecx+14h]  +
mov edx eax +
test edx edx +
jl loc_40F40C  +
mov edx [esi+44h] +
sub edx [ebp+arg_C] +
neg edx  +
sbb edx edx +
and edx 80004005h +
jge loc_40F411  +
call sub_40EF13  +
pop edi  +
pop esi  +
mov eax edx +
pop ebp  +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor ecx ecx +
mov [esi] ecx +
mov [esi+8] ecx +
mov eax 825h +
mov [esi+4] eax +
mov [esi+10h] eax +
mov [esi+0Ch] ecx +
mov [esi+14h] ecx +
push edi  +
push [ebp+arg_4]  +
lea edi [esi+18h] +
mov [edi+4] eax +
mov [edi] ecx +
mov [edi+8] ecx +
mov [esi+28h] eax +
mov [esi+24h] ecx +
mov [esi+2Ch] ecx +
mov [esi+34h] eax +
mov [esi+30h] ecx +
mov [esi+38h] ecx +
mov [esi+40h] eax +
mov [esi+3Ch] ecx +
mov [esi+44h] ecx +
mov [esi+4Ch] eax +
mov [esi+48h] ecx +
mov [esi+50h] ecx +
call sub_40E868  +
push [ebp+arg_0]  +
mov edi esi +
call sub_40E868  +
mov eax esi +
pop edi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov dword ptr [esi] offset off_4058D0 +
push ebx  +
xor ebx ebx +
push edi  +
push [ebp+arg_0]  +
lea edi [esi+4] +
mov dword ptr [edi+4] 825h +
mov [edi] ebx +
mov [edi+8] ebx +
mov [esi+14h] ebx +
mov [esi+18h] ebx +
mov [esi+1Ch] ebx +
mov [esi+20h] ebx +
mov [esi+24h] ebx +
mov [esi+28h] ebx +
mov [esi+2Ch] ebx +
mov [esi+30h] ebx +
call sub_40E868  +
pop edi  +
mov [esi+10h] ebx +
mov eax esi +
pop ebx  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+10h] +
and dword ptr [eax] 0 +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push 4  +
pop ecx  +
mov edi offset dword_402620 +
xor edx edx +
cmps   +
jz loc_40F506  +
mov esi [ebp+0Ch] +
push 4  +
pop ecx  +
mov edi offset dword_406870 +
xor edx edx +
cmps   +
jnz loc_40F519  +
mov ecx [ebp+8] +
mov [eax] ecx +
test ecx ecx +
jz loc_40F519  +
mov eax [ecx] +
push ecx  +
call dword ptr [eax+4]  +
xor eax eax +
jmp loc_40F51E  +
mov eax 80004002h +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
add eax 10h +
push eax  +
call ds:InterlockedIncrement  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea esi [edi+10h] +
push esi  +
call ds:InterlockedDecrement  +
mov eax [esi] +
test eax eax +
jnz loc_40F56E  +
mov eax edi +
call sub_4075A3  +
push edi  +
call sub_40FFB3  +
pop ecx  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_C]  +
xor edi edi +
and [ebp+var_4] edi +
lea eax [esi+1Ch] +
call sub_4086DF  +
test eax eax +
jl loc_40F5D1  +
push [ebp+arg_C]  +
call sub_40E8D9  +
mov [ebp+arg_C] eax +
test eax eax +
jnz loc_40F5B7  +
call sub_40EF13  +
mov edi 8007000Eh +
jmp loc_40F5D1  +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_4]  +
add esi 24h +
call sub_40E7A6  +
mov edi eax +
test edi edi +
jge loc_40F5D1  +
call sub_40EF13  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn 14h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 114h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_1C] +
mov ecx [eax] +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
lea edx [ebp+var_110] +
push edx  +
lea edx [ebp+var_114] +
push edx  +
push 9  +
push offset aIgnorable  +
push 3Fh  +
push offset aHttpSchemas_op  +
push eax  +
mov [ebp+var_110] 400h +
call dword ptr [ecx+38h]  +
mov edx eax +
xor esi esi +
cmp edx esi +
jge loc_40F639  +
call sub_40EF13  +
jmp loc_40F6FA  +
push edi  +
mov edi [ebp+var_114] +
jmp loc_40F6E6  +
cmp ax 20h +
jnz loc_40F655  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
cmp ax si +
jnz loc_40F645  +
xor ecx ecx +
jmp loc_40F66F  +
cmp ax 20h +
jz loc_40F677  +
cmp ecx 7Fh +
jnb loc_40F677  +
mov word ptr [ebp+ecx*2+var_104] ax +
inc ecx  +
inc edi  +
inc edi  +
movzx eax word ptr [edi] +
cmp ax si +
jnz loc_40F659  +
xor eax eax +
mov word ptr [ebp+ecx*2+var_104] ax +
cmp word ptr [ebp+var_104] si +
jz loc_40F6E6  +
lea eax [ebp+var_10C] +
push eax  +
lea eax [ebp+var_104] +
push eax  +
lea eax [ebx+24h] +
mov [ebp+var_10C] esi +
call sub_4086DF  +
test eax eax +
jl loc_40F6E6  +
mov [ebp+var_108] esi +
mov esi [ebp+var_10C] +
mov eax [esi] +
lea ecx [ebp+var_108] +
push ecx  +
push eax  +
lea eax [ebx+1Ch] +
call sub_4086DF  +
test eax eax +
jl loc_40F6E4  +
mov esi [esi] +
lea eax [ebp+var_108] +
push eax  +
push esi  +
lea esi [ebx+2Ch] +
call sub_40E7A6  +
mov edx eax +
test edx edx +
jl loc_40F6F4  +
xor esi esi +
cmp [edi] si +
jnz loc_40F64D  +
mov edx 80004005h +
call sub_40EF13  +
pop edi  +
mov ecx [ebp+var_4] +
pop esi  +
xor ecx ebp +
mov eax edx +
pop ebx  +
call sub_40FFC3  +
leave   +
retn 20h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
and [ebp+ppv] 0 +
push esi  +
push edi  +
push 4  +
mov esi eax +
call sub_407287  +
test eax eax +
jz loc_40F734  +
push 2Ch  +
push 4  +
call sub_40EB49  +
lea ecx [esi+1Ch] +
call sub_40E55C  +
mov edi eax +
test edi edi +
jl loc_40F776  +
cmp dword ptr [esi+20h] 0 +
jbe loc_40F796  +
lea eax [ebp+ppv] +
push eax  +
push offset stru_406890  +
push 1  +
push 0  +
push offset stru_406880  +
call ds:CoCreateInstance  +
mov edi eax +
test edi edi +
jl loc_40F776  +
mov eax [ebp+ppv] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+28h]  +
mov edi eax +
test edi edi +
jge loc_40F77D  +
call sub_40EF13  +
jmp loc_40F7AA  +
mov esi [esi+4] +
mov eax [ebp+ppv] +
mov ecx [eax] +
push esi  +
push eax  +
call dword ptr [ecx+50h]  +
mov edi eax +
cmp edi 80004005h +
jnz loc_40F796  +
xor edi edi +
push 4  +
call sub_407287  +
test eax eax +
jz loc_40F7AA  +
push 2Dh  +
push 4  +
call sub_40EB49  +
mov eax [ebp+ppv] +
test eax eax +
jz loc_40F7B7  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
mov eax edi +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
lea eax [ebp+hKey] +
push eax  +
push 20019h  +
push 0  +
push offset aSoftwareClasse  +
push 80000001h  +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_40F7F4  +
push [ebp+hKey]  +
call ds:RegCloseKey  +
xor eax eax +
leave   +
retn   +
cmp eax 2 +
jz loc_40F7F0  +
push esi  +
test eax eax +
jle loc_40F808  +
and eax 0FFFFh +
or eax 80070000h +
push offset aHkcuClassesAcc  +
mov esi eax +
call sub_40F8BF  +
mov eax esi +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
and esp 0FFFFFFF8h +
sub esp 460h +
mov eax dword_41E3B0 +
xor eax esp +
mov [esp+460h+var_4] eax +
push ebx  +
push edi  +
lea eax [esp+468h+var_210] +
push eax  +
push 0  +
push 0  +
push 1Ch  +
push 0  +
call ds:SHGetFolderPathW  +
mov ebx eax +
test ebx ebx +
jnz loc_40F8A4  +
push offset asc_406A70  +
push 104h  +
lea edi [esp+484h+var_224] +
call sub_40CE99  +
lea eax [esp+47Ch+FindFileData] +
push eax  +
mov eax edi +
push eax  +
call ds:FindFirstFileW  +
cmp eax 0FFFFFFFFh +
jz loc_40F88A  +
push eax  +
call ds:FindClose  +
jmp loc_40F8A4  +
call ds:GetLastError  +
cmp eax 5 +
jnz loc_40F8A4  +
push offset aAppdataFolderA  +
call sub_40F8BF  +
mov ebx 80070005h +
mov ecx [esp+47Ch+var_18] +
pop edi  +
mov eax ebx +
pop ebx  +
xor ecx esp +
call sub_40FFC3  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0E0Ch +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
push 5Eh  +
pop ecx  +
mov esi offset aVersion131072R +
lea edi [ebp+Buffer] +
movs   +
push 118h  +
mov [ebp+lpBuffer] eax +
xor ebx ebx +
lea eax [ebp+VersionInformation.dwMajorVersion] +
push ebx  +
push eax  +
movs   +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 11Ch +
call sub_413F70  +
push 40h  +
lea eax [ebp+StartupInfo.lpReserved] +
push ebx  +
push eax  +
mov [ebp+StartupInfo.cb] 44h +
call sub_413F70  +
xor eax eax +
push 206h  +
mov [ebp+FileName] ax +
lea eax [ebp-2CAh] +
push ebx  +
push eax  +
call sub_413F70  +
add esp 24h +
lea eax [ebp+FileName] +
push eax  +
push 104h  +
call ds:GetTempPathW  +
lea eax [ebp+FileName] +
push eax  +
push ebx  +
push offset PrefixString  +
push eax  +
call ds:GetTempFileNameW  +
test eax eax +
jnz loc_40F991  +
call sub_40EF13  +
call ds:GetLastError  +
cmp eax ebx +
jle loc_40F98A  +
and eax 0FFFFh +
or eax 80070000h +
mov edx eax +
jmp loc_40FBAA  +
push ebx  +
push ebx  +
push 2  +
push ebx  +
push ebx  +
push 40000000h  +
lea eax [ebp+FileName] +
push eax  +
call ds:CreateFileW  +
mov edi eax +
mov [ebp+hFile] edi +
cmp edi ebx +
jz loc_40F971  +
cmp edi 0FFFFFFFFh +
jz loc_40F971  +
mov esi ds:WriteFile +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 178h  +
lea eax [ebp+Buffer] +
push eax  +
push edi  +
call esi  +
test eax eax +
jz loc_40F971  +
lea eax [ebp+VersionInformation] +
push eax  +
call ds:GetVersionExW  +
test eax eax +
jz loc_40FA7D  +
lea eax [ebp+var_DC8] +
push eax  +
call ds:GetNativeSystemInfo  +
cmp word ptr [ebp+var_DC8] 9 +
mov eax offset aX64 +
jz loc_40FA11  +
mov eax offset dword_4060AC +
push eax  +
movzx eax [ebp+var_C6E] +
push eax  +
movzx eax [ebp+var_C70] +
push eax  +
push [ebp+VersionInformation.dwBuildNumber]  +
lea edi [ebp+var_C4] +
push [ebp+VersionInformation.dwMinorVersion]  +
push [ebp+VersionInformation.dwMajorVersion]  +
push offset aP3D_D_D_D_DS  +
push 60h  +
pop ecx  +
call sub_40FBCC  +
mov eax edi +
add esp 1Ch +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
cmp cx bx +
jnz loc_40FA4F  +
sub eax edx +
push ebx  +
sar eax 1 +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
add eax eax +
push eax  +
lea eax [ebp+var_C4] +
push eax  +
push [ebp+hFile]  +
call esi  +
mov edi [ebp+hFile] +
cmp [ebp+lpBuffer] ebx +
jz loc_40FAD4  +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 6  +
push offset Buffer  +
push edi  +
call esi  +
mov eax [ebp+lpBuffer] +
lea ecx [eax+2] +
mov dx [eax] +
inc eax  +
inc eax  +
cmp dx bx +
jnz loc_40FAA0  +
sub eax ecx +
push ebx  +
sar eax 1 +
lea ecx [ebp+NumberOfBytesWritten] +
push ecx  +
add eax eax +
push eax  +
push [ebp+lpBuffer]  +
push edi  +
call esi  +
push ebx  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 4  +
push offset asc_406C40  +
push edi  +
call esi  +
push edi  +
call ds:CloseHandle  +
mov esi 104h +
push esi  +
lea eax [ebp+ApplicationName] +
push eax  +
push offset Name  +
call ds:GetEnvironmentVariableW  +
mov ecx esi +
push offset aMicrosoftShare  +
sub ecx eax +
lea edx [ebp+eax*2+ApplicationName] +
call sub_40CF73  +
mov edx eax +
cmp edx ebx +
jl loc_40FB3A  +
lea eax [ebp+FileName] +
push eax  +
lea eax [ebp+ApplicationName] +
push eax  +
push offset aSDS  +
mov ecx 30Ch +
lea edi [ebp+CommandLine] +
call sub_40FBCC  +
mov edx eax +
add esp 0Ch +
cmp edx ebx +
jge loc_40FB41  +
call sub_40EF13  +
jmp loc_40FBAA  +
lea eax [ebp+hProcess] +
push eax  +
lea eax [ebp+StartupInfo] +
push eax  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
lea eax [ebp+CommandLine] +
push eax  +
lea eax [ebp+ApplicationName] +
push eax  +
call ds:CreateProcessW  +
test eax eax +
jz loc_40F971  +
push 0FFFFFFFFh  +
push [ebp+hProcess]  +
call ds:WaitForSingleObject  +
lea eax [ebp+ExitCode] +
push eax  +
push [ebp+hProcess]  +
call ds:GetExitCodeProcess  +
test eax eax +
jz loc_40F971  +
mov edx [ebp+ExitCode] +
neg edx  +
sbb edx edx +
and edx 80004005h +
pop edi  +
pop esi  +
cmp edx ebx +
pop ebx  +
jge loc_40FBB9  +
push 2Ah  +
push edx  +
call sub_40EEB9  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_40FFC3  +
leave   +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
test ecx ecx +
jz loc_40FBDF  +
cmp ecx 7FFFFFFFh +
jbe loc_40FBE4  +
mov eax 80070057h +
test eax eax +
jl loc_40FC1B  +
push ebx  +
push esi  +
lea eax [ebp+arg_4] +
push eax  +
push [ebp+arg_0]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call sub_410D2C  +
add esp 10h +
test eax eax +
jl loc_40FC0C  +
cmp eax esi +
ja loc_40FC0C  +
jnz loc_40FC17  +
jmp loc_40FC11  +
mov ebx 8007007Ah +
xor eax eax +
mov [edi+esi*2] ax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
jmp loc_40FC37  +
push [ebp+arg_0]  +
call sub_40FF86  +
pop ecx  +
test eax eax +
jz loc_40FC46  +
push [ebp+arg_0]  +
call sub_40FEA3  +
mov esi eax +
pop ecx  +
test esi esi +
jz loc_40FC2A  +
mov eax esi +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_40FC22  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_41EF28 1 +
jnz loc_40FCA2  +
call sub_4112DB  +
push [ebp+arg_0]  +
call sub_41112B  +
push 0FFh  +
call loc_410E3B  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov eax [ebp-14h] +
mov esp [ebp-18h] +
mov eax [ebp-24h] +
mov [ebp-20h] eax +
cmp dword ptr [ebp-1Ch] 0 +
jnz loc_40FE11  +
push eax  +
call sub_411095  +
call sub_4110C4  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
***
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax 0FFh +
***
call sub_412265  +
retn   +
***
call sub_412411  +
jmp loc_40FCBD  +
***
call sub_412220  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
cmp esi 0FFFFFFE0h +
ja loc_40FF56  +
push ebx  +
push edi  +
mov edi ds:HeapAlloc +
cmp hHeap 0 +
jnz loc_40FEDE  +
call sub_4112DB  +
push 1Eh  +
call sub_41112B  +
push 0FFh  +
call loc_410E3B  +
pop ecx  +
pop ecx  +
mov eax dword_420FC8 +
cmp eax 1 +
jnz loc_40FEF6  +
test esi esi +
jz loc_40FEF0  +
mov eax esi +
jmp loc_40FEF3  +
xor eax eax +
inc eax  +
push eax  +
jmp loc_40FF12  +
cmp eax 3 +
jnz loc_40FF06  +
push esi  +
call sub_40FE4F  +
pop ecx  +
test eax eax +
jnz loc_40FF1C  +
test esi esi +
jnz loc_40FF0B  +
inc esi  +
add esi 0Fh +
and esi 0FFFFFFF0h +
push esi  +
push 0  +
push hHeap  +
call edi  +
mov ebx eax +
test ebx ebx +
jnz loc_40FF50  +
push 0Ch  +
pop esi  +
cmp dword_41F4F4 eax +
jz loc_40FF42  +
push [ebp+arg_0]  +
call sub_40FF86  +
pop ecx  +
test eax eax +
jz loc_40FF49  +
mov esi [ebp+arg_0] +
jmp loc_40FEBD  +
call sub_41319D  +
mov [eax] esi +
call sub_41319D  +
mov [eax] esi +
pop edi  +
mov eax ebx +
pop ebx  +
jmp loc_40FF6A  +
push esi  +
call sub_40FF86  +
pop ecx  +
call sub_41319D  +
mov dword ptr [eax] 0Ch +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov dword_41EF2C eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword_41EF2C  +
call sub_411C9A  +
pop ecx  +
test eax eax +
jz loc_40FFAA  +
push [ebp+arg_0]  +
call eax  +
pop ecx  +
test eax eax +
jz loc_40FFAA  +
xor eax eax +
inc eax  +
pop ebp  +
retn   +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_40FFD7  +
***
cmp ecx dword_41E3B0 +
jnz loc_40FFCD  +
retn   +
jmp loc_4131F5  +
***
call sub_412220  +
pop ecx  +
retn   +
***
push esi  +
push 0  +
push hHeap  +
call ds:HeapFree  +
test eax eax +
jnz loc_41005F  +
call sub_41319D  +
mov esi eax +
call ds:GetLastError  +
push eax  +
call sub_413156  +
mov [esi] eax +
pop ecx  +
call sub_412265  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
mov byte ptr [esi+0Ch] 0 +
test eax eax +
jnz loc_4100E0  +
call sub_411F04  +
mov [esi+8] eax +
mov ecx [eax+6Ch] +
mov [esi] ecx +
mov ecx [eax+68h] +
mov [esi+4] ecx +
mov ecx [esi] +
cmp ecx off_41E9C0 +
jz loc_4100AC  +
mov ecx dword_41E8DC +
test [eax+70h] ecx +
jnz loc_4100AC  +
call sub_413CCE  +
mov [esi] eax +
mov eax [esi+4] +
cmp eax lpAddend +
jz loc_4100CD  +
mov eax [esi+8] +
mov ecx dword_41E8DC +
test [eax+70h] ecx +
jnz loc_4100CD  +
call sub_413535  +
mov [esi+4] eax +
mov eax [esi+8] +
test byte ptr [eax+70h] 2 +
jnz loc_4100EA  +
or dword ptr [eax+70h] 2 +
mov byte ptr [esi+0Ch] 1 +
jmp loc_4100EA  +
mov ecx [eax] +
mov [esi] ecx +
mov eax [eax+4] +
mov [esi+4] eax +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
push [ebp+arg_8]  +
lea ecx [ebp+var_10] +
call sub_41006A  +
mov ebx [ebp+arg_0] +
xor esi esi +
cmp ebx esi +
jnz loc_410143  +
call sub_41319D  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov dword ptr [eax] 16h +
call sub_413F44  +
add esp 14h +
cmp [ebp+var_4] 0 +
jz loc_410139  +
mov eax [ebp+var_8] +
and dword ptr [eax+70h] 0FFFFFFFDh +
mov eax 7FFFFFFFh +
jmp loc_410203  +
push edi  +
mov edi [ebp+arg_4] +
cmp edi esi +
jnz loc_41017A  +
call sub_41319D  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov dword ptr [eax] 16h +
call sub_413F44  +
add esp 14h +
cmp [ebp+var_4] 0 +
jz loc_410170  +
mov eax [ebp+var_8] +
and dword ptr [eax+70h] 0FFFFFFFDh +
mov eax 7FFFFFFFh +
jmp loc_410202  +
mov eax [ebp+var_10] +
cmp [eax+14h] esi +
jnz loc_4101BC  +
movzx eax word ptr [ebx] +
cmp ax 41h +
jb loc_410194  +
cmp ax 5Ah +
ja loc_410194  +
add eax 20h +
movzx esi ax +
movzx eax word ptr [edi] +
cmp ax 41h +
jb loc_4101A9  +
cmp ax 5Ah +
ja loc_4101A9  +
add eax 20h +
inc ebx  +
inc ebx  +
inc edi  +
inc edi  +
movzx eax ax +
test si si +
jz loc_4101ED  +
cmp si ax +
jz loc_410182  +
jmp loc_4101ED  +
movzx eax word ptr [ebx] +
lea ecx [ebp+var_10] +
push ecx  +
push eax  +
call sub_413D49  +
movzx esi ax +
movzx eax word ptr [edi] +
lea ecx [ebp+var_10] +
push ecx  +
inc ebx  +
push eax  +
inc ebx  +
call sub_413D49  +
add esp 10h +
inc edi  +
inc edi  +
movzx eax ax +
test si si +
jz loc_4101ED  +
cmp si ax +
jz loc_4101BC  +
movzx ecx ax +
movzx eax si +
sub eax ecx +
cmp [ebp+var_4] 0 +
jz loc_410202  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push edi  +
cmp dword_41F838 esi +
jnz loc_41028C  +
mov edi [ebp+arg_0] +
cmp edi esi +
jnz loc_410243  +
call sub_41319D  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov dword ptr [eax] 16h +
call sub_413F44  +
add esp 14h +
mov eax 7FFFFFFFh +
jmp loc_41029B  +
mov edx [ebp+arg_4] +
cmp edx esi +
jz loc_410224  +
movzx eax word ptr [edi] +
cmp ax 41h +
jb loc_41025C  +
cmp ax 5Ah +
ja loc_41025C  +
add eax 20h +
movzx ecx ax +
movzx eax word ptr [edx] +
cmp ax 41h +
jb loc_410271  +
cmp ax 5Ah +
ja loc_410271  +
add eax 20h +
inc edi  +
inc edi  +
inc edx  +
inc edx  +
movzx eax ax +
cmp cx si +
jz loc_410282  +
cmp cx ax +
jz loc_41024A  +
movzx edx ax +
movzx eax cx +
sub eax edx +
jmp loc_41029B  +
push esi  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_4100F6  +
add esp 0Ch +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp sub_40FFB3  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
cmp edx edi +
jz loc_4102CC  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
ja loc_4102EA  +
call sub_41319D  +
push 16h  +
pop esi  +
mov [eax] esi +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
call sub_413F44  +
add esp 14h +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
mov esi [ebp+arg_8] +
cmp esi edi +
jnz loc_4102F8  +
xor eax eax +
mov [edx] ax +
jmp loc_4102CC  +
mov ecx edx +
movzx eax word ptr [esi] +
mov [ecx] ax +
inc ecx  +
inc ecx  +
inc esi  +
inc esi  +
cmp ax di +
jz loc_41030C  +
dec ebx  +
jnz loc_4102FA  +
xor eax eax +
cmp ebx edi +
jnz loc_4102E5  +
mov [edx] ax +
call sub_41319D  +
push 22h  +
pop ecx  +
mov [eax] ecx +
mov esi ecx +
jmp loc_4102D6  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp [ebp+arg_C] edi +
jnz loc_41034A  +
cmp esi edi +
jnz loc_41034E  +
cmp [ebp+arg_4] edi +
jnz loc_410355  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
cmp esi edi +
jz loc_410355  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
ja loc_410370  +
call sub_41319D  +
push 16h  +
pop esi  +
mov [eax] esi +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
call sub_413F44  +
add esp 14h +
mov eax esi +
jmp loc_410345  +
cmp [ebp+arg_C] edi +
jnz loc_41037C  +
xor eax eax +
mov [esi] ax +
jmp loc_410343  +
mov edx [ebp+arg_8] +
cmp edx edi +
jnz loc_41038A  +
xor eax eax +
mov [esi] ax +
jmp loc_410355  +
cmp [ebp+arg_C] 0FFFFFFFFh +
mov eax esi +
jnz loc_4103A6  +
movzx ecx word ptr [edx] +
mov [eax] cx +
inc eax  +
inc eax  +
inc edx  +
inc edx  +
cmp cx di +
jz loc_4103C7  +
dec ebx  +
jnz loc_410392  +
jmp loc_4103C7  +
movzx ecx word ptr [edx] +
mov [eax] cx +
inc eax  +
inc eax  +
inc edx  +
inc edx  +
cmp cx di +
jz loc_4103BD  +
dec ebx  +
jz loc_4103BD  +
dec [ebp+arg_C]  +
jnz loc_4103A6  +
cmp [ebp+arg_C] edi +
jnz loc_4103C7  +
xor ecx ecx +
mov [eax] cx +
cmp ebx edi +
jnz loc_410343  +
xor eax eax +
cmp [ebp+arg_C] 0FFFFFFFFh +
jnz loc_4103E7  +
mov ecx [ebp+arg_4] +
push 50h  +
mov [esi+ecx*2-2] ax +
pop eax  +
jmp loc_410345  +
mov [esi] ax +
call sub_41319D  +
push 22h  +
pop ecx  +
mov [eax] ecx +
mov esi ecx +
jmp loc_41035F  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_C] +
push edi  +
xor edi edi +
cmp esi edi +
jnz loc_410414  +
xor eax eax +
jmp loc_410479  +
cmp [ebp+arg_0] edi +
jnz loc_410434  +
call sub_41319D  +
push 16h  +
pop esi  +
mov [eax] esi +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
call sub_413F44  +
add esp 14h +
mov eax esi +
jmp loc_410479  +
cmp [ebp+arg_8] edi +
jz loc_41044F  +
cmp [ebp+arg_4] esi +
jb loc_41044F  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call loc_413FF0  +
add esp 0Ch +
jmp loc_410410  +
push [ebp+arg_4]  +
push edi  +
push [ebp+arg_0]  +
call sub_413F70  +
add esp 0Ch +
cmp [ebp+arg_8] edi +
jz loc_410419  +
cmp [ebp+arg_4] esi +
jnb loc_410476  +
call sub_41319D  +
push 22h  +
pop ecx  +
mov [eax] ecx +
mov esi ecx +
jmp loc_410423  +
push 16h  +
pop eax  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_4] +
cmp word ptr [ebx] 0 +
push edi  +
mov edi eax +
jz loc_4104DB  +
movzx ecx word ptr [eax] +
test cx cx +
jz loc_4104D9  +
movzx edx cx +
sub eax ebx +
mov ecx [ebp+arg_4] +
test dx dx +
jz loc_4104C7  +
movzx edx word ptr [ecx] +
test dx dx +
jz loc_4104DF  +
movzx ebx word ptr [eax+ecx] +
movzx edx dx +
sub ebx edx +
jnz loc_4104C7  +
inc ecx  +
inc ecx  +
cmp [eax+ecx] bx +
jnz loc_4104AC  +
cmp word ptr [ecx] 0 +
jz loc_4104DF  +
inc edi  +
inc edi  +
movzx edx word ptr [edi] +
inc eax  +
inc eax  +
test dx dx +
jnz loc_4104A4  +
xor eax eax +
pop edi  +
pop ebx  +
pop ebp  +
retn   +
mov eax edi +
jmp loc_4104DB  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
push ebx  +
xor ebx ebx +
cmp ecx ebx +
jbe loc_41051F  +
push 0FFFFFFE0h  +
xor edx edx +
pop eax  +
div  ecx +
cmp eax [ebp+arg_8] +
jnb loc_41051F  +
call sub_41319D  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
mov dword ptr [eax] 0Ch +
call sub_413F44  +
add esp 14h +
xor eax eax +
jmp loc_410560  +
imul ecx [ebp+arg_8] +
push esi  +
push edi  +
mov esi ecx +
cmp [ebp+arg_0] ebx +
jz loc_410537  +
push [ebp+arg_0]  +
call sub_41457A  +
pop ecx  +
mov ebx eax +
push esi  +
push [ebp+arg_0]  +
call sub_41435A  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jz loc_41055C  +
cmp ebx esi +
jnb loc_41055C  +
sub esi ebx +
push esi  +
push 0  +
add ebx edi +
push ebx  +
call sub_413F70  +
add esp 0Ch +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ebx  +
push esi  +
push edi  +
push dword_4210E8  +
call sub_411C9A  +
push dword_4210E4  +
mov edi eax +
mov [ebp+var_4] edi +
call sub_411C9A  +
mov esi eax +
pop ecx  +
pop ecx  +
cmp esi edi +
jb loc_41061B  +
mov ebx esi +
sub ebx edi +
lea eax [ebx+4] +
cmp eax 4 +
jb loc_41061B  +
push edi  +
call sub_41457A  +
mov edi eax +
lea eax [ebx+4] +
pop ecx  +
cmp edi eax +
jnb loc_4105FC  +
mov eax 800h +
cmp edi eax +
jnb loc_4105BF  +
mov eax edi +
add eax edi +
cmp eax edi +
jb loc_4105D4  +
push eax  +
push [ebp+var_4]  +
call sub_4146BD  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_4105EA  +
lea eax [edi+10h] +
cmp eax edi +
jb loc_41061B  +
push eax  +
push [ebp+var_4]  +
call sub_4146BD  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_41061B  +
sar ebx 2 +
push eax  +
lea esi [eax+ebx*4] +
call sub_411C15  +
pop ecx  +
mov dword_4210E8 eax +
push [ebp+arg_0]  +
call sub_411C15  +
mov [esi] eax +
add esi 4 +
push esi  +
call sub_411C15  +
pop ecx  +
mov dword_4210E4 eax +
mov eax [ebp+arg_0] +
pop ecx  +
jmp loc_41061D  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push esi  +
push 4  +
push 20h  +
call sub_41466C  +
mov esi eax +
push esi  +
call sub_411C15  +
add esp 0Ch +
mov dword_4210E8 eax +
mov dword_4210E4 eax +
test esi esi +
jnz loc_410651  +
push 18h  +
pop eax  +
pop esi  +
retn   +
***
and dword ptr [esi] 0 +
xor eax eax +
pop esi  +
retn   +
***
call sub_412220  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_0]  +
call sub_41065D  +
neg eax  +
sbb eax eax +
neg eax  +
pop ecx  +
dec eax  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov edx [ebp+arg_0] +
push ebx  +
push esi  +
push edi  +
xor edi edi +
cmp edx edi +
jz loc_4106D2  +
mov ebx [ebp+arg_4] +
cmp ebx edi +
ja loc_4106F0  +
call sub_41319D  +
push 16h  +
pop esi  +
mov [eax] esi +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
call sub_413F44  +
add esp 14h +
mov eax esi +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
mov esi [ebp+arg_8] +
cmp esi edi +
jnz loc_4106FE  +
xor eax eax +
mov [edx] ax +
jmp loc_4106D2  +
mov ecx edx +
cmp [ecx] di +
jz loc_41070A  +
inc ecx  +
inc ecx  +
dec ebx  +
jnz loc_410700  +
cmp ebx edi +
jz loc_4106F7  +
movzx eax word ptr [esi] +
mov [ecx] ax +
inc ecx  +
inc ecx  +
inc esi  +
inc esi  +
cmp ax di +
jz loc_410720  +
dec ebx  +
jnz loc_41070E  +
xor eax eax +
cmp ebx edi +
jnz loc_4106EB  +
mov [edx] ax +
call sub_41319D  +
push 22h  +
pop ecx  +
mov [eax] ecx +
mov esi ecx +
jmp loc_4106DC  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
xor ebx ebx +
cmp [ebp+arg_8] ebx +
jnz loc_41076C  +
call sub_41319D  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
mov dword ptr [eax] 16h +
call sub_413F44  +
add esp 14h +
or eax 0FFFFFFFFh +
jmp loc_4107EC  +
mov ecx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
cmp ecx ebx +
jz loc_410798  +
cmp esi ebx +
jnz loc_410798  +
call sub_41319D  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
mov dword ptr [eax] 16h +
call sub_413F44  +
add esp 14h +
or eax 0FFFFFFFFh +
jmp loc_4107EB  +
mov eax 7FFFFFFFh +
mov [ebp+var_1C] eax +
cmp ecx eax +
ja loc_4107A7  +
mov [ebp+var_1C] ecx +
push edi  +
push [ebp+arg_10]  +
lea eax [ebp+var_20] +
push [ebp+arg_C]  +
mov [ebp+var_14] 42h +
push [ebp+arg_8]  +
mov [ebp+var_18] esi +
push eax  +
mov [ebp+var_20] esi +
call sub_41492E  +
add esp 10h +
mov edi eax +
cmp esi ebx +
jz loc_4107EA  +
dec [ebp+var_1C]  +
js loc_4107DC  +
mov eax [ebp+var_20] +
mov [eax] bl +
jmp loc_4107E8  +
lea eax [ebp+var_20] +
push eax  +
push ebx  +
call sub_414710  +
pop ecx  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_41073C  +
add esp 14h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
xor esi esi +
xor eax eax +
push edi  +
cmp [ebp+arg_8] esi +
jz loc_4108FB  +
mov ebx [ebp+arg_0] +
cmp ebx esi +
jnz loc_410857  +
call sub_41319D  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov dword ptr [eax] 16h +
call sub_413F44  +
add esp 14h +
mov eax 7FFFFFFFh +
jmp loc_4108FB  +
mov edi [ebp+arg_4] +
cmp edi esi +
jz loc_410835  +
push [ebp+arg_C]  +
lea ecx [ebp+var_10] +
call sub_41006A  +
mov eax [ebp+var_10] +
cmp [eax+14h] esi +
jnz loc_4108B0  +
movzx eax word ptr [ebx] +
cmp ax 41h +
jb loc_410883  +
cmp ax 5Ah +
ja loc_410883  +
add eax 20h +
movzx esi ax +
movzx eax word ptr [edi] +
cmp ax 41h +
jb loc_410898  +
cmp ax 5Ah +
ja loc_410898  +
add eax 20h +
inc ebx  +
inc ebx  +
inc edi  +
inc edi  +
dec [ebp+arg_8]  +
movzx eax ax +
jz loc_4108E6  +
test si si +
jz loc_4108E6  +
cmp si ax +
jz loc_410871  +
jmp loc_4108E6  +
lea eax [ebp+var_10] +
push eax  +
movzx eax word ptr [ebx] +
push eax  +
call sub_413D49  +
movzx esi ax +
lea eax [ebp+var_10] +
push eax  +
movzx eax word ptr [edi] +
push eax  +
call sub_413D49  +
add esp 10h +
inc ebx  +
inc ebx  +
inc edi  +
inc edi  +
dec [ebp+arg_8]  +
movzx eax ax +
jz loc_4108E6  +
test si si +
jz loc_4108E6  +
cmp si ax +
jz loc_4108B0  +
movzx ecx ax +
movzx eax si +
sub eax ecx +
cmp [ebp+var_4] 0 +
jz loc_4108FB  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
xor esi esi +
push edi  +
cmp dword_41F838 esi +
jnz loc_410995  +
xor eax eax +
cmp [ebp+arg_8] esi +
jz loc_4109A7  +
mov edi [ebp+arg_0] +
cmp edi esi +
jnz loc_410947  +
call sub_41319D  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov dword ptr [eax] 16h +
call sub_413F44  +
add esp 14h +
mov eax 7FFFFFFFh +
jmp loc_4109A7  +
mov edx [ebp+arg_4] +
cmp edx esi +
jz loc_410928  +
movzx eax word ptr [edi] +
cmp ax 41h +
jb loc_410960  +
cmp ax 5Ah +
ja loc_410960  +
add eax 20h +
movzx ecx ax +
movzx eax word ptr [edx] +
cmp ax 41h +
jb loc_410975  +
cmp ax 5Ah +
ja loc_410975  +
add eax 20h +
inc edi  +
inc edi  +
inc edx  +
inc edx  +
dec [ebp+arg_8]  +
movzx eax ax +
jz loc_41098B  +
cmp cx si +
jz loc_41098B  +
cmp cx ax +
jz loc_41094E  +
movzx edx ax +
movzx eax cx +
sub eax edx +
jmp loc_4109A7  +
push esi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_410816  +
add esp 10h +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push [ebp+arg_4]  +
lea ecx [ebp+var_10] +
call sub_41006A  +
movzx eax [ebp+arg_0] +
mov ecx [ebp+var_10] +
mov ecx [ecx+0C8h] +
movzx eax word ptr [ecx+eax*2] +
and eax 8000h +
cmp [ebp+var_4] 0 +
jz locret_4109E6  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_0]  +
call sub_4109B0  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 4  +
push [ebp+arg_0]  +
call sub_41555A  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push esi  +
push [ebp+arg_4]  +
lea ecx [ebp+var_18] +
call sub_41006A  +
mov ebx [ebp+arg_0] +
mov esi 100h +
cmp ebx esi +
jnb loc_410A92  +
mov ecx [ebp+var_18] +
cmp dword ptr [ecx+0ACh] 1 +
jle loc_410A5E  +
lea eax [ebp+var_18] +
push eax  +
push 1  +
push ebx  +
call sub_4159EE  +
mov ecx [ebp+var_18] +
add esp 0Ch +
jmp loc_410A6B  +
mov eax [ecx+0C8h] +
movzx eax word ptr [eax+ebx*2] +
and eax 1 +
test eax eax +
jz loc_410A7E  +
mov eax [ecx+0CCh] +
movzx eax byte ptr [eax+ebx] +
jmp loc_410B21  +
cmp [ebp+var_C] 0 +
jz loc_410A8B  +
mov eax [ebp+var_10] +
and dword ptr [eax+70h] 0FFFFFFFDh +
mov eax ebx +
jmp loc_410B2E  +
mov eax [ebp+var_18] +
cmp dword ptr [eax+0ACh] 1 +
jle loc_410ACF  +
mov [ebp+arg_0] ebx +
sar [ebp+arg_0] 8 +
lea eax [ebp+var_18] +
push eax  +
mov eax [ebp+arg_0] +
and eax 0FFh +
push eax  +
call sub_4109B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_410ACF  +
mov al byte ptr [ebp+arg_0] +
push 2  +
mov [ebp+MultiByteStr] al +
mov [ebp-3] bl +
mov [ebp+var_2] 0 +
pop ecx  +
jmp loc_410AE4  +
call sub_41319D  +
mov dword ptr [eax] 2Ah +
xor ecx ecx +
mov [ebp+MultiByteStr] bl +
mov byte ptr [ebp-3] 0 +
inc ecx  +
mov eax [ebp+var_18] +
push 1  +
push dword ptr [eax+4]  +
lea edx [ebp+DestStr] +
push 3  +
push edx  +
push ecx  +
lea ecx [ebp+MultiByteStr] +
push ecx  +
push esi  +
push dword ptr [eax+14h]  +
lea eax [ebp+var_18] +
push eax  +
call sub_4159A4  +
add esp 24h +
test eax eax +
jz loc_410A7E  +
cmp eax 1 +
movzx eax [ebp+DestStr] +
jz loc_410B21  +
movzx ecx byte ptr [ebp-7] +
shl eax 8 +
or eax ecx +
cmp [ebp+var_C] 0 +
jz loc_410B2E  +
mov ecx [ebp+var_10] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_41F838 0 +
jnz loc_410B55  +
mov eax [ebp+arg_0] +
lea ecx [eax-41h] +
cmp ecx 19h +
ja loc_410B61  +
add eax 20h +
pop ebp  +
retn   +
push 0  +
push [ebp+arg_0]  +
call sub_410A1D  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push [ebp+arg_4]  +
lea ecx [ebp+var_10] +
call sub_41006A  +
mov eax [ebp+var_10] +
cmp dword ptr [eax+0ACh] 1 +
jle loc_410B9A  +
lea eax [ebp+var_10] +
push eax  +
push 4  +
push [ebp+arg_0]  +
call sub_4159EE  +
add esp 0Ch +
jmp loc_410BAA  +
mov eax [eax+0C8h] +
mov ecx [ebp+arg_0] +
movzx eax word ptr [eax+ecx*2] +
and eax 4 +
cmp [ebp+var_4] 0 +
jz locret_410BB7  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_41F838 0 +
jnz loc_410BDE  +
mov eax [ebp+arg_0] +
mov ecx off_41E9B0 +
movzx eax word ptr [ecx+eax*2] +
and eax 4 +
pop ebp  +
retn   +
push 0  +
push [ebp+arg_0]  +
call sub_410B68  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_C] +
push esi  +
push edi  +
xor edi edi +
cmp eax edi +
jz loc_410C48  +
cmp [ebp+arg_0] edi +
jnz loc_410C21  +
call sub_41319D  +
push 16h  +
pop esi  +
mov [eax] esi +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
call sub_413F44  +
add esp 14h +
mov eax esi +
jmp loc_410C4A  +
cmp [ebp+arg_8] edi +
jz loc_410C06  +
cmp [ebp+arg_4] eax +
jnb loc_410C39  +
call sub_41319D  +
push 22h  +
pop ecx  +
mov [eax] ecx +
mov esi ecx +
jmp loc_410C10  +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_0]  +
call loc_415AB0  +
add esp 0Ch +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
push ebx  +
xor ebx ebx +
cmp [ebp+arg_8] ebx +
jnz loc_410C83  +
call sub_41319D  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
mov dword ptr [eax] 16h +
call sub_413F44  +
add esp 14h +
or eax 0FFFFFFFFh +
jmp loc_410D24  +
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
cmp eax ebx +
jz loc_410CAF  +
cmp esi ebx +
jnz loc_410CAF  +
call sub_41319D  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
mov dword ptr [eax] 16h +
call sub_413F44  +
add esp 14h +
or eax 0FFFFFFFFh +
jmp loc_410D23  +
mov [ebp+var_14] 42h +
mov [ebp+var_18] esi +
mov [ebp+var_20] esi +
cmp eax 3FFFFFFFh +
jbe loc_410CCC  +
mov [ebp+var_1C] 7FFFFFFFh +
jmp loc_410CD1  +
add eax eax +
mov [ebp+var_1C] eax +
push edi  +
push [ebp+arg_10]  +
lea eax [ebp+var_20] +
push [ebp+arg_C]  +
push [ebp+arg_8]  +
push eax  +
call sub_415ED1  +
add esp 10h +
mov edi eax +
cmp esi ebx +
jz loc_410D22  +
dec [ebp+var_1C]  +
js loc_410CFC  +
mov eax [ebp+var_20] +
mov [eax] bl +
inc [ebp+var_20]  +
jmp loc_410D08  +
lea eax [ebp+var_20] +
push eax  +
push ebx  +
call sub_414710  +
pop ecx  +
pop ecx  +
dec [ebp+var_1C]  +
js loc_410D14  +
mov eax [ebp+var_20] +
mov [eax] bl +
jmp loc_410D20  +
lea eax [ebp+var_20] +
push eax  +
push ebx  +
call sub_414710  +
pop ecx  +
pop ecx  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push [ebp+arg_C]  +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_410C53  +
add esp 14h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov eax [eax] +
cmp dword ptr [eax] 0E06D7363h +
jnz loc_410D8A  +
cmp dword ptr [eax+10h] 3 +
jnz loc_410D8A  +
mov eax [eax+14h] +
cmp eax 19930520h +
jz loc_410D85  +
cmp eax 19930521h +
jz loc_410D85  +
cmp eax 19930522h +
jz loc_410D85  +
cmp eax 1994000h +
jnz loc_410D8A  +
call sub_416A6E  +
xor eax eax +
pop ebp  +
retn 4  +
***
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi 3E8h +
push edi  +
call ds:Sleep  +
push [ebp+lpModuleName]  +
call ds:GetModuleHandleW  +
add edi 3E8h +
cmp edi 0EA60h +
ja loc_410DD5  +
test eax eax +
jz loc_410DB3  +
pop edi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
call sub_4112DB  +
push [ebp+arg_0]  +
call sub_41112B  +
push off_41E004  +
call sub_411C9A  +
push 0FFh  +
call eax  +
add esp 0Ch +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push offset LibFileName  +
call ds:GetModuleHandleW  +
test eax eax +
jz loc_410E34  +
push offset aCorexitprocess  +
push eax  +
call ds:GetProcAddress  +
test eax eax +
jz loc_410E34  +
push [ebp+arg_0]  +
call eax  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
call sub_410E0B  +
pop ecx  +
push dword ptr [ebp+8]  +
call ds:ExitProcess  +
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi eax +
jmp loc_410E89  +
mov eax [esi] +
test eax eax +
jz loc_410E86  +
call eax  +
add esi 4 +
cmp esi [ebp+arg_0] +
jb loc_410E7E  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
jmp loc_410EB2  +
test eax eax +
jnz loc_410EB7  +
mov ecx [esi] +
test ecx ecx +
jz loc_410EAF  +
call ecx  +
add esi 4 +
cmp esi [ebp+arg_4] +
jb loc_410EA3  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword_4210F0 0 +
jz loc_410EE6  +
push offset dword_4210F0  +
call sub_416B80  +
pop ecx  +
test eax eax +
jz loc_410EE6  +
push [ebp+arg_0]  +
call dword_4210F0  +
pop ecx  +
call sub_416AC2  +
push offset dword_401394  +
push offset dword_40137C  +
call sub_410E96  +
pop ecx  +
pop ecx  +
test eax eax +
jnz loc_410F42  +
push offset loc_411BEA  +
call sub_41069E  +
mov eax offset dword_401360 +
mov dword ptr [esp+0] offset dword_401378 +
call sub_410E74  +
cmp dword_4210F4 0 +
pop ecx  +
jz loc_410F40  +
push offset dword_4210F4  +
call sub_416B80  +
pop ecx  +
test eax eax +
jz loc_410F40  +
push 0  +
push 2  +
push 0  +
call dword_4210F4  +
xor eax eax +
pop ebp  +
retn   +
***
call sub_412220  +
cmp dword ptr [ebp+10h] 0 +
jz locret_41106E  +
push 8  +
call sub_412558  +
pop ecx  +
retn   +
***
call sub_412265  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_410F49  +
add esp 0Ch +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push 1  +
push [ebp+arg_0]  +
call sub_410F49  +
add esp 0Ch +
pop ebp  +
retn   +
***
push 0  +
call sub_410F49  +
add esp 0Ch +
retn   +
***
push 0  +
call sub_410F49  +
add esp 0Ch +
retn   +
***
mov edi edi +
push esi  +
call sub_411C8C  +
mov esi eax +
push esi  +
call sub_40FF72  +
push esi  +
call sub_416E90  +
push esi  +
call sub_413E03  +
push esi  +
call sub_416E7C  +
push esi  +
call sub_416E68  +
push esi  +
call sub_416C42  +
push esi  +
call nullsub_2  +
push esi  +
call sub_416AAC  +
push offset sub_411095  +
call sub_411C15  +
add esp 24h +
mov off_41E004 eax +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push ebx  +
mov ebx [ebp+arg_0] +
push esi  +
push edi  +
xor esi esi +
xor edi edi +
mov [ebp+var_4] edi +
cmp ebx dword_41E008[edi*8] +
jz loc_411151  +
inc edi  +
mov [ebp+var_4] edi +
cmp edi 17h +
jb loc_41113F  +
cmp edi 17h +
jnb loc_4112D1  +
push 3  +
call sub_4172AD  +
pop ecx  +
cmp eax 1 +
jz loc_41129F  +
push 3  +
call sub_4172AD  +
pop ecx  +
test eax eax +
jnz loc_411184  +
cmp dword_41E000 1 +
jz loc_41129F  +
cmp ebx 0FCh +
jz loc_4112D1  +
push offset aRuntimeErrorPr  +
mov ebx 314h +
push ebx  +
mov edi offset unk_41EF68 +
push edi  +
call sub_417240  +
add esp 0Ch +
test eax eax +
jz loc_4111BA  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
call sub_413E17  +
add esp 14h +
push 104h  +
mov esi offset Filename +
push esi  +
push 0  +
mov byte_41F085 0 +
call ds:GetModuleFileNameA  +
test eax eax +
jnz loc_4111FE  +
push offset aProgramNameUnk  +
push 2FBh  +
push esi  +
call sub_417240  +
add esp 0Ch +
test eax eax +
jz loc_4111FE  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_413E17  +
add esp 14h +
push esi  +
call sub_4171B0  +
inc eax  +
pop ecx  +
cmp eax 3Ch +
jbe loc_411243  +
push esi  +
call sub_4171B0  +
sub esi 3Bh +
add eax esi +
push 3  +
mov ecx offset unk_41F27C +
push offset a___  +
sub ecx eax +
push ecx  +
push eax  +
call sub_4170F0  +
add esp 14h +
test eax eax +
jz loc_411243  +
xor esi esi +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
call sub_413E17  +
add esp 14h +
jmp loc_411245  +
xor esi esi +
push offset asc_401960  +
push ebx  +
push edi  +
call sub_417077  +
add esp 0Ch +
test eax eax +
jz loc_411265  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
call sub_413E17  +
add esp 14h +
mov eax [ebp+var_4] +
push off_41E00C[eax*8]  +
push ebx  +
push edi  +
call sub_417077  +
add esp 0Ch +
test eax eax +
jz loc_41128A  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
call sub_413E17  +
add esp 14h +
push 12010h  +
push offset aMicrosoftVisua  +
push edi  +
call sub_416F09  +
add esp 0Ch +
jmp loc_4112D1  +
push 0FFFFFFF4h  +
call ds:GetStdHandle  +
mov ebx eax +
cmp ebx esi +
jz loc_4112D1  +
cmp ebx 0FFFFFFFFh +
jz loc_4112D1  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
lea esi off_41E00C[edi*8] +
push dword ptr [esi]  +
call sub_4171B0  +
pop ecx  +
push eax  +
push dword ptr [esi]  +
push ebx  +
call ds:WriteFile  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
pop ecx  +
cmp eax 1 +
jz loc_4112FD  +
push 3  +
call sub_4172AD  +
pop ecx  +
test eax eax +
jnz locret_411313  +
cmp dword_41E000 1 +
jnz locret_411313  +
push 0FCh  +
call sub_41112B  +
push 0FFh  +
call sub_41112B  +
pop ecx  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
push esi  +
call sub_411E86  +
mov esi eax +
test esi esi +
jz loc_41147C  +
mov edx [esi+5Ch] +
mov eax dword_41E0CC +
push edi  +
mov edi [ebp+arg_0] +
mov ecx edx +
push ebx  +
cmp [ecx] edi +
jz loc_411357  +
mov ebx eax +
imul ebx ebx +
add ecx 0Ch +
add ebx edx +
cmp ecx ebx +
jb loc_411345  +
imul eax eax +
add eax edx +
cmp ecx eax +
jnb loc_411368  +
cmp [ecx] edi +
jnz loc_411368  +
mov eax ecx +
jmp loc_41136A  +
xor eax eax +
test eax eax +
jz loc_411378  +
mov ebx [eax+8] +
mov [ebp+var_4] ebx +
test ebx ebx +
jnz loc_41137F  +
xor eax eax +
jmp loc_41147A  +
cmp ebx 5 +
jnz loc_411390  +
and dword ptr [eax+8] 0 +
xor eax eax +
inc eax  +
jmp loc_41147A  +
cmp ebx 1 +
jz loc_411477  +
mov ecx [esi+60h] +
mov [ebp+var_8] ecx +
mov ecx [ebp+arg_4] +
mov [esi+60h] ecx +
mov ecx [eax+4] +
cmp ecx 8 +
jnz loc_411469  +
mov ecx dword_41E0C0 +
mov edi dword_41E0C4 +
mov edx ecx +
add edi ecx +
cmp edx edi +
jge loc_4113E9  +
imul ecx ecx +
mov edi [esi+5Ch] +
and dword ptr [ecx+edi+8] 0 +
mov edi dword_41E0C0 +
mov ebx dword_41E0C4 +
inc edx  +
add ebx edi +
add ecx 0Ch +
cmp edx ebx +
jl loc_4113C8  +
mov ebx [ebp+var_4] +
mov eax [eax] +
mov edi [esi+64h] +
cmp eax 0C000008Eh +
jnz loc_4113FE  +
mov dword ptr [esi+64h] 83h +
jmp loc_41145C  +
cmp eax 0C0000090h +
jnz loc_41140E  +
mov dword ptr [esi+64h] 81h +
jmp loc_41145C  +
cmp eax 0C0000091h +
jnz loc_41141E  +
mov dword ptr [esi+64h] 84h +
jmp loc_41145C  +
cmp eax 0C0000093h +
jnz loc_41142E  +
mov dword ptr [esi+64h] 85h +
jmp loc_41145C  +
cmp eax 0C000008Dh +
jnz loc_41143E  +
mov dword ptr [esi+64h] 82h +
jmp loc_41145C  +
cmp eax 0C000008Fh +
jnz loc_41144E  +
mov dword ptr [esi+64h] 86h +
jmp loc_41145C  +
cmp eax 0C0000092h +
jnz loc_41145C  +
mov dword ptr [esi+64h] 8Ah +
push dword ptr [esi+64h]  +
push 8  +
call ebx  +
pop ecx  +
mov [esi+64h] edi +
jmp loc_411470  +
and dword ptr [eax+8] 0 +
push ecx  +
call ebx  +
mov eax [ebp+var_8] +
pop ecx  +
mov [esi+60h] eax +
or eax 0FFFFFFFFh +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push esi  +
push edi  +
xor edi edi +
cmp dword_4210EC edi +
jnz loc_411497  +
call sub_4139E8  +
mov esi dword_4210F8 +
test esi esi +
jnz loc_4114A6  +
mov esi offset dword_401A18 +
mov al [esi] +
cmp al 20h +
ja loc_4114B4  +
test al al +
jz loc_4114DE  +
test edi edi +
jz loc_4114D8  +
cmp al 22h +
jnz loc_4114C1  +
xor ecx ecx +
test edi edi +
setz cl  +
mov edi ecx +
movzx eax al +
push eax  +
call sub_417355  +
pop ecx  +
test eax eax +
jz loc_4114D0  +
inc esi  +
inc esi  +
jmp loc_4114A6  +
cmp al 20h +
ja loc_4114DE  +
inc esi  +
mov al [esi] +
test al al +
jnz loc_4114D3  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
cmp dword_4210EC 0 +
jnz loc_4114F6  +
call sub_4139E8  +
push esi  +
mov esi dword_41EF20 +
push edi  +
xor edi edi +
test esi esi +
jnz loc_41151C  +
or eax 0FFFFFFFFh +
jmp loc_4115AC  +
cmp al 3Dh +
jz loc_411511  +
inc edi  +
push esi  +
call sub_4171B0  +
pop ecx  +
lea esi [esi+eax+1] +
mov al [esi] +
test al al +
jnz loc_41150C  +
push 4  +
inc edi  +
push edi  +
call sub_41466C  +
mov edi eax +
pop ecx  +
pop ecx  +
mov dword_41EF40 edi +
test edi edi +
jz loc_411504  +
mov esi dword_41EF20 +
push ebx  +
jmp loc_411584  +
push esi  +
call sub_4171B0  +
mov ebx eax +
inc ebx  +
cmp byte ptr [esi] 3Dh +
pop ecx  +
jz loc_411582  +
push 1  +
push ebx  +
call sub_41466C  +
pop ecx  +
pop ecx  +
mov [edi] eax +
test eax eax +
jz loc_4115AF  +
push esi  +
push ebx  +
push eax  +
call sub_417240  +
add esp 0Ch +
test eax eax +
jz loc_41157F  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_413E17  +
add esp 14h +
add edi 4 +
add esi ebx +
cmp byte ptr [esi] 0 +
jnz loc_411542  +
push dword_41EF20  +
call sub_40FFD7  +
and dword_41EF20 0 +
and dword ptr [edi] 0 +
mov dword_4210E0 1 +
xor eax eax +
pop ecx  +
pop ebx  +
pop edi  +
pop esi  +
retn   +
push dword_41EF40  +
call sub_40FFD7  +
and dword_41EF40 0 +
or eax 0FFFFFFFFh +
jmp loc_4115AA  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov ecx [ebp+arg_8] +
push ebx  +
xor eax eax +
push esi  +
mov [edi] eax +
mov esi edx +
mov edx [ebp+arg_4] +
mov dword ptr [ecx] 1 +
cmp [ebp+arg_0] eax +
jz loc_4115F3  +
mov ebx [ebp+arg_0] +
add [ebp+arg_0] 4 +
mov [ebx] edx +
mov [ebp+var_4] eax +
cmp byte ptr [esi] 22h +
jnz loc_41160B  +
xor eax eax +
cmp [ebp+var_4] eax +
mov bl 22h +
setz al  +
inc esi  +
mov [ebp+var_4] eax +
jmp loc_411647  +
inc dword ptr [edi]  +
test edx edx +
jz loc_411619  +
mov al [esi] +
mov [edx] al +
inc edx  +
mov [ebp+arg_4] edx +
mov bl [esi] +
movzx eax bl +
push eax  +
inc esi  +
call sub_417355  +
pop ecx  +
test eax eax +
jz loc_41163D  +
inc dword ptr [edi]  +
cmp [ebp+arg_4] 0 +
jz loc_41163C  +
mov ecx [ebp+arg_4] +
mov al [esi] +
inc [ebp+arg_4]  +
mov [ecx] al +
inc esi  +
mov edx [ebp+arg_4] +
mov ecx [ebp+arg_8] +
test bl bl +
jz loc_411679  +
cmp [ebp+var_4] 0 +
jnz loc_4115F6  +
cmp bl 20h +
jz loc_411657  +
cmp bl 9 +
jnz loc_4115F6  +
test edx edx +
jz loc_41165F  +
mov byte ptr [edx-1] 0 +
and [ebp+var_4] 0 +
cmp byte ptr [esi] 0 +
jz loc_411755  +
mov al [esi] +
cmp al 20h +
jz loc_411676  +
cmp al 9 +
jnz loc_41167C  +
inc esi  +
jmp loc_41166C  +
dec esi  +
jmp loc_41165F  +
cmp byte ptr [esi] 0 +
jz loc_411755  +
cmp [ebp+arg_0] 0 +
jz loc_411694  +
mov eax [ebp+arg_0] +
add [ebp+arg_0] 4 +
mov [eax] edx +
inc dword ptr [ecx]  +
xor ebx ebx +
inc ebx  +
xor ecx ecx +
jmp loc_41169F  +
inc esi  +
inc ecx  +
cmp byte ptr [esi] 5Ch +
jz loc_41169D  +
cmp byte ptr [esi] 22h +
jnz loc_4116CF  +
test cl 1 +
jnz loc_4116CD  +
cmp [ebp+var_4] 0 +
jz loc_4116C0  +
lea eax [esi+1] +
cmp byte ptr [eax] 22h +
jnz loc_4116C0  +
mov esi eax +
jmp loc_4116CD  +
xor eax eax +
xor ebx ebx +
cmp [ebp+var_4] eax +
setz al  +
mov [ebp+var_4] eax +
shr ecx 1 +
test ecx ecx +
jz loc_4116E5  +
dec ecx  +
test edx edx +
jz loc_4116DC  +
mov byte ptr [edx] 5Ch +
inc edx  +
inc dword ptr [edi]  +
test ecx ecx +
jnz loc_4116D3  +
mov [ebp+arg_4] edx +
mov al [esi] +
test al al +
jz loc_411740  +
cmp [ebp+var_4] 0 +
jnz loc_4116F9  +
cmp al 20h +
jz loc_411740  +
cmp al 9 +
jz loc_411740  +
test ebx ebx +
jz loc_41173A  +
movsx eax al +
push eax  +
test edx edx +
jz loc_411728  +
call sub_417355  +
pop ecx  +
test eax eax +
jz loc_41171C  +
mov al [esi] +
mov ecx [ebp+arg_4] +
inc [ebp+arg_4]  +
mov [ecx] al +
inc esi  +
inc dword ptr [edi]  +
mov ecx [ebp+arg_4] +
mov al [esi] +
inc [ebp+arg_4]  +
mov [ecx] al +
jmp loc_411735  +
call sub_417355  +
pop ecx  +
test eax eax +
jz loc_411735  +
inc esi  +
inc dword ptr [edi]  +
inc dword ptr [edi]  +
mov edx [ebp+arg_4] +
inc esi  +
jmp loc_411696  +
test edx edx +
jz loc_41174B  +
mov byte ptr [edx] 0 +
inc edx  +
mov [ebp+arg_4] edx +
inc dword ptr [edi]  +
mov ecx [ebp+arg_8] +
jmp loc_411663  +
mov eax [ebp+arg_0] +
pop esi  +
pop ebx  +
test eax eax +
jz loc_411761  +
and dword ptr [eax] 0 +
inc dword ptr [ecx]  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp dword_4210EC ebx +
jnz loc_411784  +
call sub_4139E8  +
push 104h  +
mov esi offset byte_41F280 +
push esi  +
push ebx  +
mov byte_41F384 bl +
call ds:GetModuleFileNameA  +
mov eax dword_4210F8 +
mov dword_41EF50 esi +
cmp eax ebx +
jz loc_4117B2  +
mov [ebp+var_4] eax +
cmp [eax] bl +
jnz loc_4117B5  +
mov [ebp+var_4] esi +
mov edx [ebp+var_4] +
lea eax [ebp+var_8] +
push eax  +
push ebx  +
push ebx  +
lea edi [ebp+var_C] +
call sub_4115CB  +
mov eax [ebp+var_8] +
add esp 0Ch +
cmp eax 3FFFFFFFh +
jnb loc_41181D  +
mov ecx [ebp+var_C] +
cmp ecx 0FFFFFFFFh +
jnb loc_41181D  +
mov edi eax +
shl edi 2 +
lea eax [edi+ecx] +
cmp eax ecx +
jb loc_41181D  +
push eax  +
call sub_414622  +
mov esi eax +
pop ecx  +
cmp esi ebx +
jz loc_41181D  +
mov edx [ebp+var_4] +
lea eax [ebp+var_8] +
push eax  +
add edi esi +
push edi  +
push esi  +
lea edi [ebp+var_C] +
call sub_4115CB  +
mov eax [ebp+var_8] +
add esp 0Ch +
dec eax  +
mov dword_41EF34 eax +
mov dword_41EF38 esi +
xor eax eax +
jmp loc_411820  +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax dword_41F388 +
sub esp 0Ch +
push ebx  +
push esi  +
mov esi ds:GetEnvironmentStringsW +
push edi  +
xor ebx ebx +
xor edi edi +
cmp eax ebx +
jnz loc_411876  +
call esi  +
mov edi eax +
cmp edi ebx +
jz loc_41185C  +
mov dword_41F388 1 +
jmp loc_41187F  +
call ds:GetLastError  +
cmp eax 78h +
jnz loc_411871  +
push 2  +
pop eax  +
mov dword_41F388 eax +
jmp loc_411876  +
mov eax dword_41F388 +
cmp eax 1 +
jnz loc_411900  +
cmp edi ebx +
jnz loc_411892  +
call esi  +
mov edi eax +
cmp edi ebx +
jnz loc_411892  +
xor eax eax +
jmp loc_41195C  +
mov eax edi +
cmp [edi] bx +
jz loc_4118A7  +
inc eax  +
inc eax  +
cmp [eax] bx +
jnz loc_411899  +
inc eax  +
inc eax  +
cmp [eax] bx +
jnz loc_411899  +
mov esi ds:WideCharToMultiByte +
push ebx  +
push ebx  +
push ebx  +
sub eax edi +
push ebx  +
sar eax 1 +
inc eax  +
push eax  +
push edi  +
push ebx  +
push ebx  +
mov [ebp+cchWideChar] eax +
call esi  +
mov [ebp+cchMultiByte] eax +
cmp eax ebx +
jz loc_4118F5  +
push eax  +
call sub_414622  +
pop ecx  +
mov [ebp+var_4] eax +
cmp eax ebx +
jz loc_4118F5  +
push ebx  +
push ebx  +
push [ebp+cchMultiByte]  +
push eax  +
push [ebp+cchWideChar]  +
push edi  +
push ebx  +
push ebx  +
call esi  +
test eax eax +
jnz loc_4118F2  +
push [ebp+var_4]  +
call sub_40FFD7  +
pop ecx  +
mov [ebp+var_4] ebx +
mov ebx [ebp+var_4] +
push edi  +
call ds:FreeEnvironmentStringsW  +
mov eax ebx +
jmp loc_41195C  +
cmp eax 2 +
jz loc_411909  +
cmp eax ebx +
jnz loc_41188B  +
call ds:GetEnvironmentStrings  +
mov esi eax +
cmp esi ebx +
jz loc_41188B  +
cmp [esi] bl +
jz loc_411927  +
inc eax  +
cmp [eax] bl +
jnz loc_41191D  +
inc eax  +
cmp [eax] bl +
jnz loc_41191D  +
sub eax esi +
inc eax  +
push eax  +
mov [ebp+cchMultiByte] eax +
call sub_414622  +
mov edi eax +
pop ecx  +
cmp edi ebx +
jnz loc_411946  +
push esi  +
call ds:FreeEnvironmentStringsA  +
jmp loc_41188B  +
push [ebp+cchMultiByte]  +
push esi  +
push edi  +
call loc_413FF0  +
add esp 0Ch +
push esi  +
call ds:FreeEnvironmentStringsA  +
mov eax edi +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
call sub_412220  +
xor edi edi +
mov [ebp-4] edi +
lea eax [ebp-64h] +
push eax  +
call ds:GetStartupInfoA  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
push 40h  +
push 20h  +
pop esi  +
push esi  +
call sub_41466C  +
pop ecx  +
pop ecx  +
cmp eax edi +
jz loc_411BB1  +
mov dword_420FE0 eax +
mov uNumber esi +
lea ecx [eax+800h] +
jmp loc_4119E0  +
mov byte ptr [eax+4] 0 +
or dword ptr [eax] 0FFFFFFFFh +
mov byte ptr [eax+5] 0Ah +
mov [eax+8] edi +
mov byte ptr [eax+24h] 0 +
mov byte ptr [eax+25h] 0Ah +
mov byte ptr [eax+26h] 0Ah +
mov [eax+38h] edi +
mov byte ptr [eax+34h] 0 +
add eax 40h +
mov ecx dword_420FE0 +
add ecx 800h +
cmp eax ecx +
jb loc_4119B0  +
cmp [ebp-32h] di +
jz loc_411AF8  +
mov eax [ebp-30h] +
cmp eax edi +
jz loc_411AF8  +
mov edi [eax] +
lea ebx [eax+4] +
lea eax [ebx+edi] +
mov [ebp-1Ch] eax +
mov esi 800h +
cmp edi esi +
jl loc_411A0F  +
mov edi esi +
mov dword ptr [ebp-20h] 1 +
jmp loc_411A73  +
push 40h  +
push 20h  +
call sub_41466C  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_411A7D  +
mov ecx [ebp-20h] +
lea ecx dword_420FE0[ecx*4] +
mov [ecx] eax +
add uNumber 20h +
lea edx [eax+800h] +
jmp loc_411A6C  +
mov byte ptr [eax+4] 0 +
or dword ptr [eax] 0FFFFFFFFh +
mov byte ptr [eax+5] 0Ah +
and dword ptr [eax+8] 0 +
and byte ptr [eax+24h] 80h +
mov byte ptr [eax+25h] 0Ah +
mov byte ptr [eax+26h] 0Ah +
and dword ptr [eax+38h] 0 +
mov byte ptr [eax+34h] 0 +
add eax 40h +
mov edx [ecx] +
add edx esi +
cmp eax edx +
jb loc_411A42  +
inc dword ptr [ebp-20h]  +
cmp uNumber edi +
jl loc_411A18  +
jmp loc_411A83  +
mov edi uNumber +
and dword ptr [ebp-20h] 0 +
test edi edi +
jle loc_411AF8  +
mov eax [ebp-1Ch] +
mov ecx [eax] +
cmp ecx 0FFFFFFFFh +
jz loc_411AEB  +
cmp ecx 0FFFFFFFEh +
jz loc_411AEB  +
mov al [ebx] +
test al 1 +
jz loc_411AEB  +
test al 8 +
jnz loc_411AAF  +
push ecx  +
call ds:GetFileType  +
test eax eax +
jz loc_411AEB  +
mov esi [ebp-20h] +
mov eax esi +
sar eax 5 +
and esi 1Fh +
shl esi 6 +
add esi dword_420FE0[eax*4] +
mov eax [ebp-1Ch] +
mov eax [eax] +
mov [esi] eax +
mov al [ebx] +
mov [esi+4] al +
push 0FA0h  +
lea eax [esi+0Ch] +
push eax  +
call sub_416EA4  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_411BB1  +
inc dword ptr [esi+8]  +
inc dword ptr [ebp-20h]  +
inc ebx  +
add dword ptr [ebp-1Ch] 4 +
cmp [ebp-20h] edi +
jl loc_411A8B  +
xor ebx ebx +
mov esi ebx +
shl esi 6 +
add esi dword_420FE0 +
mov eax [esi] +
cmp eax 0FFFFFFFFh +
jz loc_411B17  +
cmp eax 0FFFFFFFEh +
jz loc_411B17  +
or byte ptr [esi+4] 80h +
jmp loc_411B89  +
mov byte ptr [esi+4] 81h +
test ebx ebx +
jnz loc_411B24  +
push 0FFFFFFF6h  +
pop eax  +
jmp loc_411B2E  +
mov eax ebx +
dec eax  +
neg eax  +
sbb eax eax +
add eax 0FFFFFFF5h +
push eax  +
call ds:GetStdHandle  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_411B7F  +
test edi edi +
jz loc_411B7F  +
push edi  +
call ds:GetFileType  +
test eax eax +
jz loc_411B7F  +
mov [esi] edi +
and eax 0FFh +
cmp eax 2 +
jnz loc_411B5D  +
or byte ptr [esi+4] 40h +
jmp loc_411B66  +
cmp eax 3 +
jnz loc_411B66  +
or byte ptr [esi+4] 8 +
push 0FA0h  +
lea eax [esi+0Ch] +
push eax  +
call sub_416EA4  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_411BB1  +
inc dword ptr [esi+8]  +
jmp loc_411B89  +
or byte ptr [esi+4] 40h +
mov dword ptr [esi] 0FFFFFFFEh +
inc ebx  +
cmp ebx 3 +
jl loc_411AFA  +
push uNumber  +
call ds:SetHandleCount  +
xor eax eax +
jmp loc_411BB4  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
or eax 0FFFFFFFFh +
call sub_412265  +
retn   +
***
mov edi edi +
push esi  +
mov eax offset dword_406D50 +
mov esi offset dword_406D50 +
push edi  +
mov edi eax +
cmp eax esi +
jnb loc_411BE2  +
mov eax [edi] +
test eax eax +
jz loc_411BDB  +
call eax  +
add edi 4 +
cmp edi esi +
jb loc_411BD3  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
mov eax (offset dword_406D50+8) +
mov esi (offset dword_406D50+8) +
push edi  +
mov edi eax +
cmp eax esi +
jnb loc_411C0D  +
mov eax [edi] +
test eax eax +
jz loc_411C06  +
call eax  +
add edi 4 +
cmp edi esi +
jb loc_411BFE  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dwTlsIndex  +
mov esi ds:TlsGetValue +
call esi  +
test eax eax +
jz loc_411C4E  +
mov eax dword_41E110 +
cmp eax 0FFFFFFFFh +
jz loc_411C4E  +
push eax  +
push dwTlsIndex  +
call esi  +
call eax  +
test eax eax +
jz loc_411C4E  +
mov eax [eax+1F8h] +
jmp loc_411C75  +
mov esi offset aKernel32_dll_0 +
push esi  +
call ds:GetModuleHandleW  +
test eax eax +
jnz loc_411C69  +
push esi  +
call sub_410DA8  +
pop ecx  +
test eax eax +
jz loc_411C81  +
push offset aEncodepointer  +
push eax  +
call ds:GetProcAddress  +
test eax eax +
jz loc_411C81  +
push [ebp+arg_0]  +
call eax  +
mov [ebp+arg_0] eax +
mov eax [ebp+arg_0] +
pop esi  +
pop ebp  +
retn   +
***
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push dwTlsIndex  +
mov esi ds:TlsGetValue +
call esi  +
test eax eax +
jz loc_411CD3  +
mov eax dword_41E110 +
cmp eax 0FFFFFFFFh +
jz loc_411CD3  +
push eax  +
push dwTlsIndex  +
call esi  +
call eax  +
test eax eax +
jz loc_411CD3  +
mov eax [eax+1FCh] +
jmp loc_411CFA  +
mov esi offset aKernel32_dll_0 +
push esi  +
call ds:GetModuleHandleW  +
test eax eax +
jnz loc_411CEE  +
push esi  +
call sub_410DA8  +
pop ecx  +
test eax eax +
jz loc_411D06  +
push offset aDecodepointer  +
push eax  +
call ds:GetProcAddress  +
test eax eax +
jz loc_411D06  +
push [ebp+arg_0]  +
call eax  +
mov [ebp+arg_0] eax +
mov eax [ebp+arg_0] +
pop esi  +
pop ebp  +
retn   +
***
call ds:TlsAlloc  +
retn 4  +
***
mov edi edi +
push esi  +
push dwTlsIndex  +
call ds:TlsGetValue  +
mov esi eax +
test esi esi +
jnz loc_411D4F  +
push lpTlsValue  +
call sub_411C9A  +
pop ecx  +
mov esi eax +
push esi  +
push dwTlsIndex  +
call ds:TlsSetValue  +
mov eax esi +
pop esi  +
retn   +
***
mov eax dword_41E110 +
cmp eax 0FFFFFFFFh +
jz loc_411D78  +
push eax  +
push dword_41F398  +
call sub_411C9A  +
pop ecx  +
call eax  +
or dword_41E110 0FFFFFFFFh +
mov eax dwTlsIndex +
cmp eax 0FFFFFFFFh +
jz loc_411D90  +
push eax  +
call ds:TlsFree  +
or dwTlsIndex 0FFFFFFFFh +
jmp loc_4124FC  +
***
call sub_412220  +
pop ecx  +
pop ecx  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
call ds:GetLastError  +
push dword_41E110  +
mov edi eax +
call sub_411D1F  +
call eax  +
mov esi eax +
test esi esi +
jnz loc_411EF3  +
push 214h  +
push 1  +
call sub_41466C  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_411EF3  +
push esi  +
push dword_41E110  +
push dword_41F394  +
call sub_411C9A  +
pop ecx  +
call eax  +
test eax eax +
jz loc_411EEA  +
push 0  +
push esi  +
call sub_411D9A  +
pop ecx  +
pop ecx  +
call ds:GetCurrentThreadId  +
or dword ptr [esi+4] 0FFFFFFFFh +
mov [esi] eax +
jmp loc_411EF3  +
push esi  +
call sub_40FFD7  +
pop ecx  +
xor esi esi +
push edi  +
call ds:SetLastError  +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
mov edi edi +
push esi  +
call sub_411E86  +
mov esi eax +
test esi esi +
jnz loc_411F1A  +
push 10h  +
call sub_410DDD  +
pop ecx  +
mov eax esi +
pop esi  +
retn   +
***
push 8  +
push offset dword_41BD20  +
call sub_412220  +
mov esi [ebp+8] +
test esi esi +
jz loc_412032  +
mov eax [esi+24h] +
test eax eax +
jz loc_411F48  +
push eax  +
call sub_40FFD7  +
pop ecx  +
mov eax [esi+2Ch] +
test eax eax +
jz loc_411F56  +
push eax  +
call sub_40FFD7  +
pop ecx  +
mov eax [esi+34h] +
test eax eax +
jz loc_411F64  +
push eax  +
call sub_40FFD7  +
pop ecx  +
mov eax [esi+3Ch] +
test eax eax +
jz loc_411F72  +
push eax  +
call sub_40FFD7  +
pop ecx  +
mov eax [esi+40h] +
test eax eax +
jz loc_411F80  +
push eax  +
call sub_40FFD7  +
pop ecx  +
mov eax [esi+44h] +
test eax eax +
jz loc_411F8E  +
push eax  +
call sub_40FFD7  +
pop ecx  +
mov eax [esi+48h] +
test eax eax +
jz loc_411F9C  +
push eax  +
call sub_40FFD7  +
pop ecx  +
mov eax [esi+5Ch] +
cmp eax offset dword_4019A0 +
jz loc_411FAD  +
push eax  +
call sub_40FFD7  +
pop ecx  +
push 0Dh  +
call sub_41263C  +
pop ecx  +
and dword ptr [ebp-4] 0 +
mov edi [esi+68h] +
test edi edi +
jz loc_411FDA  +
push edi  +
call ds:InterlockedDecrement  +
test eax eax +
jnz loc_411FDA  +
cmp edi offset unk_41E3B8 +
jz loc_411FDA  +
push edi  +
call sub_40FFD7  +
pop ecx  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_41203D  +
push 0Ch  +
call sub_41263C  +
pop ecx  +
mov dword ptr [ebp-4] 1 +
mov edi [esi+6Ch] +
test edi edi +
jz loc_41201F  +
push edi  +
call sub_413BED  +
pop ecx  +
cmp edi off_41E9C0 +
jz loc_41201F  +
cmp edi offset unk_41E8E8 +
jz loc_41201F  +
cmp dword ptr [edi] 0 +
jnz loc_41201F  +
push edi  +
call sub_413A0B  +
pop ecx  +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call sub_412049  +
push esi  +
call sub_40FFD7  +
pop ecx  +
call sub_412265  +
retn 4  +
***
pop ecx  +
pop ecx  +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi offset aKernel32_dll_0 +
push esi  +
call ds:GetModuleHandleW  +
test eax eax +
jnz loc_412072  +
push esi  +
call sub_410DA8  +
pop ecx  +
mov edi eax +
test edi edi +
jz loc_4121DA  +
mov esi ds:GetProcAddress +
push offset aFlsalloc  +
push edi  +
call esi  +
push offset aFlsgetvalue  +
push edi  +
mov dword_41F38C eax +
call esi  +
push offset aFlssetvalue  +
push edi  +
mov lpTlsValue eax +
call esi  +
push offset aFlsfree  +
push edi  +
mov dword_41F394 eax +
call esi  +
cmp dword_41F38C 0 +
mov esi ds:TlsSetValue +
mov dword_41F398 eax +
jz loc_4120DB  +
cmp lpTlsValue 0 +
jz loc_4120DB  +
cmp dword_41F394 0 +
jz loc_4120DB  +
test eax eax +
jnz loc_4120FF  +
mov eax ds:TlsGetValue +
mov lpTlsValue eax +
mov eax ds:TlsFree +
mov dword_41F38C offset loc_411D11 +
mov dword_41F394 esi +
mov dword_41F398 eax +
call ds:TlsAlloc  +
mov dwTlsIndex eax +
cmp eax 0FFFFFFFFh +
jz loc_4121DF  +
push lpTlsValue  +
push eax  +
call esi  +
test eax eax +
jz loc_4121DF  +
call sub_4110D8  +
push dword_41F38C  +
call sub_411C15  +
push lpTlsValue  +
mov dword_41F38C eax +
call sub_411C15  +
push dword_41F394  +
mov lpTlsValue eax +
call sub_411C15  +
push dword_41F398  +
mov dword_41F394 eax +
call sub_411C15  +
add esp 10h +
mov dword_41F398 eax +
call sub_4124AC  +
test eax eax +
jz loc_4121DA  +
push offset loc_411F23  +
push dword_41F38C  +
call sub_411C9A  +
pop ecx  +
call eax  +
mov dword_41E110 eax +
cmp eax 0FFFFFFFFh +
jz loc_4121DA  +
push 214h  +
push 1  +
call sub_41466C  +
mov esi eax +
pop ecx  +
pop ecx  +
test esi esi +
jz loc_4121DA  +
push esi  +
push dword_41E110  +
push dword_41F394  +
call sub_411C9A  +
pop ecx  +
call eax  +
test eax eax +
jz loc_4121DA  +
push 0  +
push esi  +
call sub_411D9A  +
pop ecx  +
pop ecx  +
call ds:GetCurrentThreadId  +
or dword ptr [esi+4] 0FFFFFFFFh +
mov [esi] eax +
xor eax eax +
inc eax  +
jmp loc_4121E1  +
call sub_411D58  +
xor eax eax +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+arg_0] eax +
push 0  +
setz al  +
push 1000h  +
push eax  +
call ds:HeapCreate  +
mov hHeap eax +
test eax eax +
jnz loc_41220F  +
pop ebp  +
retn   +
xor eax eax +
inc eax  +
mov dword_420FC8 eax +
pop ebp  +
retn   +
***
mov eax [esp+8+arg_4] +
mov ecx [ebp-10h] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
push ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
mov ebx [ebp+0Ch] +
push esi  +
mov esi [ebx+8] +
xor esi dword_41E3B0 +
push edi  +
mov eax [esi] +
mov byte ptr [ebp-1] 0 +
mov dword ptr [ebp-0Ch] 1 +
lea edi [ebx+10h] +
cmp eax 0FFFFFFFEh +
jz loc_4122B9  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_40FFC3  +
mov ecx [esi+0Ch] +
mov eax [esi+8] +
add ecx edi +
xor ecx [eax+edi] +
call sub_40FFC3  +
mov eax [ebp+8] +
test byte ptr [eax+4] 66h +
jnz loc_4123EC  +
mov ecx [ebp+10h] +
lea edx [ebp-18h] +
mov [ebx-4] edx +
mov ebx [ebx+0Ch] +
mov [ebp-18h] eax +
mov [ebp-14h] ecx +
cmp ebx 0FFFFFFFEh +
jz loc_41234C  +
lea ecx [ecx+0] +
lea eax [ebx+ebx*2] +
mov ecx [esi+eax*4+14h] +
lea eax [esi+eax*4+10h] +
mov [ebp-10h] eax +
mov eax [eax] +
mov [ebp-8] eax +
test ecx ecx +
jz loc_41231B  +
mov edx edi +
call sub_417466  +
mov byte ptr [ebp-1] 1 +
test eax eax +
jl loc_412356  +
jg loc_41235F  +
mov eax [ebp-8] +
mov ebx eax +
cmp eax 0FFFFFFFEh +
jnz loc_4122F0  +
cmp byte ptr [ebp-1] 0 +
jz loc_41234C  +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_41233C  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_40FFC3  +
mov ecx [esi+0Ch] +
mov edx [esi+8] +
add ecx edi +
xor ecx [edx+edi] +
call sub_40FFC3  +
mov eax [ebp-0Ch] +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov dword ptr [ebp-0Ch] 0 +
jmp loc_412328  +
***
mov ecx [ebp+8] +
cmp dword ptr [ecx] 0E06D7363h +
jnz loc_412393  +
cmp dword_420FC4 0 +
jz loc_412393  +
push offset dword_420FC4  +
call sub_416B80  +
add esp 4 +
test eax eax +
jz loc_412393  +
mov edx [ebp+8] +
push 1  +
push edx  +
call dword_420FC4  +
add esp 8 +
mov ecx [ebp+0Ch] +
call sub_417496  +
mov eax [ebp+0Ch] +
cmp [eax+0Ch] ebx +
jz loc_4123B5  +
push offset dword_41E3B0  +
push edi  +
mov edx ebx +
mov ecx eax +
call sub_4174B0  +
mov eax [ebp+0Ch] +
mov ecx [ebp-8] +
mov [eax+0Ch] ecx +
mov eax [esi] +
cmp eax 0FFFFFFFEh +
jz loc_4123CF  +
mov ecx [esi+4] +
add ecx edi +
xor ecx [eax+edi] +
call sub_40FFC3  +
mov ecx [esi+0Ch] +
mov edx [esi+8] +
add ecx edi +
xor ecx [edx+edi] +
call sub_40FFC3  +
mov eax [ebp-10h] +
mov ecx [eax+8] +
mov edx edi +
call sub_41747D  +
mov edx 0FFFFFFFEh +
cmp [ebx+0Ch] edx +
jz loc_41234C  +
push offset dword_41E3B0  +
push edi  +
mov ecx ebx +
call sub_4174B0  +
jmp loc_412328  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_41E3B0 +
and [ebp+SystemTimeAsFileTime.dwLowDateTime] 0 +
and [ebp+SystemTimeAsFileTime.dwHighDateTime] 0 +
push ebx  +
push edi  +
mov edi 0BB40E64Eh +
mov ebx 0FFFF0000h +
cmp eax edi +
jz loc_412443  +
test eax ebx +
jz loc_412443  +
not eax  +
mov dword_41E3B4 eax +
jmp loc_4124A3  +
push esi  +
lea eax [ebp+SystemTimeAsFileTime] +
push eax  +
call ds:GetSystemTimeAsFileTime  +
mov esi [ebp+SystemTimeAsFileTime.dwHighDateTime] +
xor esi [ebp+SystemTimeAsFileTime.dwLowDateTime] +
call ds:GetCurrentProcessId  +
xor esi eax +
call ds:GetCurrentThreadId  +
xor esi eax +
call ds:GetTickCount  +
xor esi eax +
lea eax [ebp+PerformanceCount] +
push eax  +
call ds:QueryPerformanceCounter  +
mov eax dword ptr [ebp+PerformanceCount+4] +
xor eax dword ptr [ebp+PerformanceCount] +
xor esi eax +
cmp esi edi +
jnz loc_412489  +
mov esi 0BB40E64Fh +
jmp loc_412494  +
test esi ebx +
jnz loc_412494  +
mov eax esi +
shl eax 10h +
or esi eax +
mov dword_41E3B0 esi +
not esi  +
mov dword_41E3B4 esi +
pop esi  +
pop edi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push esi  +
push edi  +
xor esi esi +
mov edi offset unk_41F3A0 +
cmp dword_41E124[esi*8] 1 +
jnz loc_4124DF  +
lea eax lpCriticalSection[esi*8] +
mov [eax] edi +
push 0FA0h  +
push dword ptr [eax]  +
add edi 18h +
call sub_416EA4  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_4124EB  +
inc esi  +
cmp esi 24h +
jl loc_4124B7  +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
retn   +
and lpCriticalSection[esi*8] 0 +
xor eax eax +
jmp loc_4124E8  +
***
mov edi edi +
push ebx  +
mov ebx ds:DeleteCriticalSection +
push esi  +
mov esi offset lpCriticalSection +
push edi  +
mov edi [esi] +
test edi edi +
jz loc_412525  +
cmp dword ptr [esi+4] 1 +
jz loc_412525  +
push edi  +
call ebx  +
push edi  +
call sub_40FFD7  +
and dword ptr [esi] 0 +
pop ecx  +
add esi 8 +
cmp esi offset dword_41E240 +
jl loc_41250C  +
mov esi offset lpCriticalSection +
pop edi  +
mov eax [esi] +
test eax eax +
jz loc_412545  +
cmp dword ptr [esi+4] 1 +
jnz loc_412545  +
push eax  +
call ebx  +
add esi 8 +
cmp esi offset dword_41E240 +
jl loc_412536  +
pop esi  +
pop ebx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push lpCriticalSection[eax*8]  +
call ds:LeaveCriticalSection  +
pop ebp  +
retn   +
***
call sub_412220  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
lea esi lpCriticalSection[eax*8] +
cmp dword ptr [esi] 0 +
jnz loc_412664  +
push eax  +
call sub_412574  +
pop ecx  +
test eax eax +
jnz loc_412664  +
push 11h  +
call sub_410DDD  +
pop ecx  +
push dword ptr [esi]  +
call ds:EnterCriticalSection  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx dword_420FAC +
mov eax lpMem +
imul ecx ecx +
add ecx eax +
jmp loc_41269C  +
mov edx [ebp+arg_0] +
sub edx [eax+0Ch] +
cmp edx 100000h +
jb loc_4126A2  +
add eax 14h +
cmp eax ecx +
jb loc_41268B  +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov ecx [ebp+arg_0] +
mov eax [ecx+10h] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
mov edi esi +
sub edi [ecx+0Ch] +
add esi 0FFFFFFFCh +
shr edi 0Fh +
mov ecx edi +
imul ecx ecx +
lea ecx [ecx+eax+144h] +
mov [ebp+var_10] ecx +
mov ecx [esi] +
dec ecx  +
mov [ebp+var_4] ecx +
test cl 1 +
jnz loc_4129BB  +
push ebx  +
lea ebx [ecx+esi] +
mov edx [ebx] +
mov [ebp+var_C] edx +
mov edx [esi-4] +
mov [ebp+var_8] edx +
mov edx [ebp+var_C] +
mov [ebp+arg_4] ebx +
test dl 1 +
jnz loc_412776  +
sar edx 4 +
dec edx  +
cmp edx 3Fh +
jbe loc_41270E  +
push 3Fh  +
pop edx  +
mov ecx [ebx+4] +
cmp ecx [ebx+8] +
jnz loc_412758  +
mov ebx 80000000h +
cmp edx 20h +
jnb loc_412739  +
mov ecx edx +
shr ebx cl +
lea ecx [edx+eax+4] +
not ebx  +
and [eax+edi*4+44h] ebx +
dec byte ptr [ecx]  +
jnz loc_412755  +
mov ecx [ebp+arg_0] +
and [ecx] ebx +
jmp loc_412755  +
lea ecx [edx-20h] +
shr ebx cl +
lea ecx [edx+eax+4] +
not ebx  +
and [eax+edi*4+0C4h] ebx +
dec byte ptr [ecx]  +
jnz loc_412755  +
mov ecx [ebp+arg_0] +
and [ecx+4] ebx +
mov ebx [ebp+arg_4] +
mov edx [ebx+8] +
mov ebx [ebx+4] +
mov ecx [ebp+var_4] +
add ecx [ebp+var_C] +
mov [edx+4] ebx +
mov edx [ebp+arg_4] +
mov ebx [edx+4] +
mov edx [edx+8] +
mov [ebx+8] edx +
mov [ebp+var_4] ecx +
mov edx ecx +
sar edx 4 +
dec edx  +
cmp edx 3Fh +
jbe loc_412784  +
push 3Fh  +
pop edx  +
mov ebx [ebp+var_8] +
and ebx 1 +
mov [ebp+var_C] ebx +
jnz loc_412822  +
sub esi [ebp+var_8] +
mov ebx [ebp+var_8] +
sar ebx 4 +
push 3Fh  +
mov [ebp+arg_4] esi +
dec ebx  +
pop esi  +
cmp ebx esi +
jbe loc_4127A9  +
mov ebx esi +
add ecx [ebp+var_8] +
mov edx ecx +
sar edx 4 +
dec edx  +
mov [ebp+var_4] ecx +
cmp edx esi +
jbe loc_4127BB  +
mov edx esi +
cmp ebx edx +
jz loc_41281D  +
mov ecx [ebp+arg_4] +
mov esi [ecx+4] +
cmp esi [ecx+8] +
jnz loc_412805  +
mov esi 80000000h +
cmp ebx 20h +
jnb loc_4127EB  +
mov ecx ebx +
shr esi cl +
not esi  +
and [eax+edi*4+44h] esi +
dec byte ptr [ebx+eax+4]  +
jnz loc_412805  +
mov ecx [ebp+arg_0] +
and [ecx] esi +
jmp loc_412805  +
lea ecx [ebx-20h] +
shr esi cl +
not esi  +
and [eax+edi*4+0C4h] esi +
dec byte ptr [ebx+eax+4]  +
jnz loc_412805  +
mov ecx [ebp+arg_0] +
and [ecx+4] esi +
mov ecx [ebp+arg_4] +
mov esi [ecx+8] +
mov ecx [ecx+4] +
mov [esi+4] ecx +
mov ecx [ebp+arg_4] +
mov esi [ecx+4] +
mov ecx [ecx+8] +
mov [esi+8] ecx +
mov esi [ebp+arg_4] +
jmp loc_412825  +
mov ebx [ebp+arg_0] +
cmp [ebp+var_C] 0 +
jnz loc_412833  +
cmp ebx edx +
jz loc_4128B3  +
mov ecx [ebp+var_10] +
lea ecx [ecx+edx*8] +
mov ebx [ecx+4] +
mov [esi+8] ecx +
mov [esi+4] ebx +
mov [ecx+4] esi +
mov ecx [esi+4] +
mov [ecx+8] esi +
mov ecx [esi+4] +
cmp ecx [esi+8] +
jnz loc_4128B3  +
mov cl [edx+eax+4] +
mov byte ptr [ebp+arg_4+3] cl +
inc cl  +
mov [edx+eax+4] cl +
cmp edx 20h +
jnb loc_41288A  +
cmp byte ptr [ebp+arg_4+3] 0 +
jnz loc_412879  +
mov ecx edx +
mov ebx 80000000h +
shr ebx cl +
mov ecx [ebp+arg_0] +
or [ecx] ebx +
mov ebx 80000000h +
mov ecx edx +
shr ebx cl +
lea eax [eax+edi*4+44h] +
or [eax] ebx +
jmp loc_4128B3  +
cmp byte ptr [ebp+arg_4+3] 0 +
jnz loc_4128A0  +
lea ecx [edx-20h] +
mov ebx 80000000h +
shr ebx cl +
mov ecx [ebp+arg_0] +
or [ecx+4] ebx +
lea ecx [edx-20h] +
mov edx 80000000h +
shr edx cl +
lea eax [eax+edi*4+0C4h] +
or [eax] edx +
mov eax [ebp+var_4] +
mov [esi] eax +
mov [eax+esi-4] eax +
mov eax [ebp+var_10] +
dec dword ptr [eax]  +
jnz loc_4129BA  +
mov eax dword_41F4F0 +
test eax eax +
jz loc_4129AC  +
mov ecx dword_420FC0 +
mov esi ds:VirtualFree +
push 4000h  +
shl ecx 0Fh +
add ecx [eax+0Ch] +
mov ebx 8000h +
push ebx  +
push ecx  +
call esi  +
mov ecx dword_420FC0 +
mov eax dword_41F4F0 +
mov edx 80000000h +
shr edx cl +
or [eax+8] edx +
mov eax dword_41F4F0 +
mov eax [eax+10h] +
mov ecx dword_420FC0 +
and dword ptr [eax+ecx*4+0C4h] 0 +
mov eax dword_41F4F0 +
mov eax [eax+10h] +
dec byte ptr [eax+43h]  +
mov eax dword_41F4F0 +
mov ecx [eax+10h] +
cmp byte ptr [ecx+43h] 0 +
jnz loc_412941  +
and dword ptr [eax+4] 0FFFFFFFEh +
mov eax dword_41F4F0 +
cmp dword ptr [eax+8] 0FFFFFFFFh +
jnz loc_4129AC  +
push ebx  +
push 0  +
push dword ptr [eax+0Ch]  +
call esi  +
mov eax dword_41F4F0 +
push dword ptr [eax+10h]  +
push 0  +
push hHeap  +
call ds:HeapFree  +
mov ecx dword_420FAC +
mov eax dword_41F4F0 +
imul ecx ecx +
mov edx lpMem +
sub ecx eax +
lea ecx [ecx+edx-14h] +
push ecx  +
lea ecx [eax+14h] +
push ecx  +
push eax  +
call loc_415AB0  +
mov eax [ebp+arg_0] +
add esp 0Ch +
dec dword_420FAC  +
cmp eax dword_41F4F0 +
jbe loc_4129A2  +
sub [ebp+arg_0] 14h +
mov eax lpMem +
mov dword_420FB8 eax +
mov eax [ebp+arg_0] +
mov dword_41F4F0 eax +
mov dword_420FC0 edi +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov eax dword_420FBC +
push esi  +
mov esi dword_420FAC +
push edi  +
xor edi edi +
cmp esi eax +
jnz loc_412A0B  +
add eax 10h +
imul eax eax +
push eax  +
push lpMem  +
push edi  +
push hHeap  +
call ds:HeapReAlloc  +
cmp eax edi +
jnz loc_4129F9  +
xor eax eax +
jmp loc_412A71  +
add dword_420FBC 10h +
mov esi dword_420FAC +
mov lpMem eax +
imul esi esi +
add esi lpMem +
push 41C4h  +
push 8  +
push hHeap  +
call ds:HeapAlloc  +
mov [esi+10h] eax +
cmp eax edi +
jz loc_4129F5  +
push 4  +
push 2000h  +
push 100000h  +
push edi  +
call ds:VirtualAlloc  +
mov [esi+0Ch] eax +
cmp eax edi +
jnz loc_412A5A  +
push dword ptr [esi+10h]  +
push edi  +
push hHeap  +
call ds:HeapFree  +
jmp loc_4129F5  +
or dword ptr [esi+8] 0FFFFFFFFh +
mov [esi] edi +
mov [esi+4] edi +
inc dword_420FAC  +
mov eax [esi+10h] +
or dword ptr [eax] 0FFFFFFFFh +
mov eax esi +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov ecx [ebp+arg_0] +
mov eax [ecx+8] +
push ebx  +
push esi  +
mov esi [ecx+10h] +
push edi  +
xor ebx ebx +
jmp loc_412A93  +
add eax eax +
inc ebx  +
test eax eax +
jge loc_412A90  +
mov eax ebx +
imul eax eax +
lea eax [eax+esi+144h] +
push 3Fh  +
mov [ebp+var_8] eax +
pop edx  +
mov [eax+8] eax +
mov [eax+4] eax +
add eax 8 +
dec edx  +
jnz loc_412AAC  +
push 4  +
mov edi ebx +
push 1000h  +
shl edi 0Fh +
add edi [ecx+0Ch] +
push 8000h  +
push edi  +
call ds:VirtualAlloc  +
test eax eax +
jnz loc_412ADF  +
or eax 0FFFFFFFFh +
jmp loc_412B7C  +
lea edx [edi+7000h] +
mov [ebp+var_4] edx +
cmp edi edx +
ja loc_412B2F  +
mov ecx edx +
sub ecx edi +
shr ecx 0Ch +
lea eax [edi+10h] +
inc ecx  +
or dword ptr [eax-8] 0FFFFFFFFh +
or dword ptr [eax+0FECh] 0FFFFFFFFh +
lea edx [eax+0FFCh] +
mov [eax] edx +
lea edx [eax-1004h] +
mov dword ptr [eax-4] 0FF0h +
mov [eax+4] edx +
mov dword ptr [eax+0FE8h] 0FF0h +
add eax 1000h +
dec ecx  +
jnz loc_412AF7  +
mov edx [ebp+var_4] +
mov eax [ebp+var_8] +
add eax 1F8h +
lea ecx [edi+0Ch] +
mov [eax+4] ecx +
mov [ecx+8] eax +
lea ecx [edx+0Ch] +
mov [eax+8] ecx +
mov [ecx+4] eax +
and dword ptr [esi+ebx*4+44h] 0 +
xor edi edi +
inc edi  +
mov [esi+ebx*4+0C4h] edi +
mov al [esi+43h] +
mov cl al +
inc cl  +
test al al +
mov eax [ebp+arg_0] +
mov [esi+43h] cl +
jnz loc_412B6C  +
or [eax+4] edi +
mov edx 80000000h +
mov ecx ebx +
shr edx cl +
not edx  +
and [eax+8] edx +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov ecx [ebp+arg_0] +
mov eax [ecx+10h] +
push ebx  +
push esi  +
mov esi [ebp+arg_8] +
push edi  +
mov edi [ebp+arg_4] +
mov edx edi +
sub edx [ecx+0Ch] +
add esi 17h +
shr edx 0Fh +
mov ecx edx +
imul ecx ecx +
lea ecx [ecx+eax+144h] +
mov [ebp+var_C] ecx +
mov ecx [edi-4] +
and esi 0FFFFFFF0h +
dec ecx  +
cmp esi ecx +
lea edi [ecx+edi-4] +
mov ebx [edi] +
mov [ebp+arg_8] ecx +
mov [ebp+var_4] ebx +
jle loc_412D2A  +
test bl 1 +
jnz loc_412D23  +
add ebx ecx +
cmp esi ebx +
jg loc_412D23  +
mov ecx [ebp+var_4] +
sar ecx 4 +
dec ecx  +
mov [ebp+var_8] ecx +
cmp ecx 3Fh +
jbe loc_412BFD  +
push 3Fh  +
pop ecx  +
mov [ebp+var_8] ecx +
mov ebx [edi+4] +
cmp ebx [edi+8] +
jnz loc_412C48  +
mov ebx 80000000h +
cmp ecx 20h +
jnb loc_412C29  +
shr ebx cl +
mov ecx [ebp+var_8] +
lea ecx [ecx+eax+4] +
not ebx  +
and [eax+edx*4+44h] ebx +
dec byte ptr [ecx]  +
jnz loc_412C48  +
mov ecx [ebp+arg_0] +
and [ecx] ebx +
jmp loc_412C48  +
add ecx 0FFFFFFE0h +
shr ebx cl +
mov ecx [ebp+var_8] +
lea ecx [ecx+eax+4] +
not ebx  +
and [eax+edx*4+0C4h] ebx +
dec byte ptr [ecx]  +
jnz loc_412C48  +
mov ecx [ebp+arg_0] +
and [ecx+4] ebx +
mov ecx [edi+8] +
mov ebx [edi+4] +
mov [ecx+4] ebx +
mov ecx [edi+4] +
mov edi [edi+8] +
mov [ecx+8] edi +
mov ecx [ebp+arg_8] +
sub ecx esi +
add [ebp+var_4] ecx +
cmp [ebp+var_4] 0 +
jle loc_412D11  +
mov edi [ebp+var_4] +
mov ecx [ebp+arg_4] +
sar edi 4 +
dec edi  +
lea ecx [ecx+esi-4] +
cmp edi 3Fh +
jbe loc_412C82  +
push 3Fh  +
pop edi  +
mov ebx [ebp+var_C] +
lea ebx [ebx+edi*8] +
mov [ebp+arg_8] ebx +
mov ebx [ebx+4] +
mov [ecx+4] ebx +
mov ebx [ebp+arg_8] +
mov [ecx+8] ebx +
mov [ebx+4] ecx +
mov ebx [ecx+4] +
mov [ebx+8] ecx +
mov ebx [ecx+4] +
cmp ebx [ecx+8] +
jnz loc_412CFF  +
mov cl [edi+eax+4] +
mov byte ptr [ebp+arg_8+3] cl +
inc cl  +
mov [edi+eax+4] cl +
cmp edi 20h +
jnb loc_412CD6  +
cmp byte ptr [ebp+arg_8+3] 0 +
jnz loc_412CCE  +
mov ecx edi +
mov ebx 80000000h +
shr ebx cl +
mov ecx [ebp+arg_0] +
or [ecx] ebx +
lea eax [eax+edx*4+44h] +
mov ecx edi +
jmp loc_412CF6  +
cmp byte ptr [ebp+arg_8+3] 0 +
jnz loc_412CEC  +
lea ecx [edi-20h] +
mov ebx 80000000h +
shr ebx cl +
mov ecx [ebp+arg_0] +
or [ecx+4] ebx +
lea eax [eax+edx*4+0C4h] +
lea ecx [edi-20h] +
mov edx 80000000h +
shr edx cl +
or [eax] edx +
mov edx [ebp+arg_4] +
mov ecx [ebp+var_4] +
lea eax [edx+esi-4] +
mov [eax] ecx +
mov [ecx+eax-4] ecx +
jmp loc_412D14  +
mov edx [ebp+arg_4] +
lea eax [esi+1] +
mov [edx-4] eax +
mov [edx+esi-8] eax +
jmp loc_412E5F  +
xor eax eax +
jmp loc_412E62  +
jge loc_412E5F  +
mov ebx [ebp+arg_4] +
sub [ebp+arg_8] esi +
lea ecx [esi+1] +
mov [ebx-4] ecx +
lea ebx [ebx+esi-4] +
mov esi [ebp+arg_8] +
sar esi 4 +
dec esi  +
mov [ebp+arg_4] ebx +
mov [ebx-4] ecx +
cmp esi 3Fh +
jbe loc_412D55  +
push 3Fh  +
pop esi  +
test byte ptr [ebp+var_4] 1 +
jnz loc_412DDF  +
mov esi [ebp+var_4] +
sar esi 4 +
dec esi  +
cmp esi 3Fh +
jbe loc_412D6E  +
push 3Fh  +
pop esi  +
mov ecx [edi+4] +
cmp ecx [edi+8] +
jnz loc_412DB8  +
mov ebx 80000000h +
cmp esi 20h +
jnb loc_412D99  +
mov ecx esi +
shr ebx cl +
lea esi [esi+eax+4] +
not ebx  +
and [eax+edx*4+44h] ebx +
dec byte ptr [esi]  +
jnz loc_412DB5  +
mov ecx [ebp+arg_0] +
and [ecx] ebx +
jmp loc_412DB5  +
lea ecx [esi-20h] +
shr ebx cl +
lea ecx [esi+eax+4] +
not ebx  +
and [eax+edx*4+0C4h] ebx +
dec byte ptr [ecx]  +
jnz loc_412DB5  +
mov ecx [ebp+arg_0] +
and [ecx+4] ebx +
mov ebx [ebp+arg_4] +
mov ecx [edi+8] +
mov esi [edi+4] +
mov [ecx+4] esi +
mov esi [edi+8] +
mov ecx [edi+4] +
mov [ecx+8] esi +
mov esi [ebp+arg_8] +
add esi [ebp+var_4] +
mov [ebp+arg_8] esi +
sar esi 4 +
dec esi  +
cmp esi 3Fh +
jbe loc_412DDF  +
push 3Fh  +
pop esi  +
mov ecx [ebp+var_C] +
lea ecx [ecx+esi*8] +
mov edi [ecx+4] +
mov [ebx+8] ecx +
mov [ebx+4] edi +
mov [ecx+4] ebx +
mov ecx [ebx+4] +
mov [ecx+8] ebx +
mov ecx [ebx+4] +
cmp ecx [ebx+8] +
jnz loc_412E56  +
mov cl [esi+eax+4] +
mov byte ptr [ebp+arg_4+3] cl +
inc cl  +
mov [esi+eax+4] cl +
cmp esi 20h +
jnb loc_412E2D  +
cmp byte ptr [ebp+arg_4+3] 0 +
jnz loc_412E25  +
mov ecx esi +
mov edi 80000000h +
shr edi cl +
mov ecx [ebp+arg_0] +
or [ecx] edi +
lea eax [eax+edx*4+44h] +
mov ecx esi +
jmp loc_412E4D  +
cmp byte ptr [ebp+arg_4+3] 0 +
jnz loc_412E43  +
lea ecx [esi-20h] +
mov edi 80000000h +
shr edi cl +
mov ecx [ebp+arg_0] +
or [ecx+4] edi +
lea eax [eax+edx*4+0C4h] +
lea ecx [esi-20h] +
mov edx 80000000h +
shr edx cl +
or [eax] edx +
mov eax [ebp+arg_8] +
mov [ebx] eax +
mov [eax+ebx-4] eax +
xor eax eax +
inc eax  +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_420FAC +
mov ecx [ebp+arg_0] +
imul eax eax +
add eax lpMem +
add ecx 17h +
and ecx 0FFFFFFF0h +
mov [ebp+var_10] ecx +
sar ecx 4 +
push ebx  +
dec ecx  +
cmp ecx 20h +
push esi  +
push edi  +
jge loc_412EA5  +
or esi 0FFFFFFFFh +
shr esi cl +
or [ebp+var_8] 0FFFFFFFFh +
jmp loc_412EB2  +
add ecx 0FFFFFFE0h +
or edx 0FFFFFFFFh +
xor esi esi +
shr edx cl +
mov [ebp+var_8] edx +
mov ecx dword_420FB8 +
mov ebx ecx +
jmp loc_412ECD  +
mov edx [ebx+4] +
mov edi [ebx] +
and edx [ebp+var_8] +
and edi esi +
or edx edi +
jnz loc_412ED4  +
add ebx 14h +
mov [ebp+arg_0] ebx +
cmp ebx eax +
jb loc_412EBC  +
cmp ebx eax +
jnz loc_412F57  +
mov ebx lpMem +
jmp loc_412EF1  +
mov edx [ebx+4] +
mov edi [ebx] +
and edx [ebp+var_8] +
and edi esi +
or edx edi +
jnz loc_412EF8  +
add ebx 14h +
mov [ebp+arg_0] ebx +
cmp ebx ecx +
jb loc_412EE0  +
cmp ebx ecx +
jnz loc_412F57  +
jmp loc_412F0A  +
cmp dword ptr [ebx+8] 0 +
jnz loc_412F0E  +
add ebx 14h +
mov [ebp+arg_0] ebx +
cmp ebx eax +
jb loc_412EFE  +
cmp ebx eax +
jnz loc_412F43  +
mov ebx lpMem +
jmp loc_412F23  +
cmp dword ptr [ebx+8] 0 +
jnz loc_412F2A  +
add ebx 14h +
mov [ebp+arg_0] ebx +
cmp ebx ecx +
jb loc_412F1A  +
cmp ebx ecx +
jnz loc_412F43  +
call sub_4129C4  +
mov ebx eax +
mov [ebp+arg_0] ebx +
test ebx ebx +
jnz loc_412F43  +
xor eax eax +
jmp loc_41314C  +
push ebx  +
call sub_412A79  +
pop ecx  +
mov ecx [ebx+10h] +
mov [ecx] eax +
mov eax [ebx+10h] +
cmp dword ptr [eax] 0FFFFFFFFh +
jz loc_412F3C  +
mov dword_420FB8 ebx +
mov eax [ebx+10h] +
mov edx [eax] +
mov [ebp+var_4] edx +
cmp edx 0FFFFFFFFh +
jz loc_412F7E  +
mov ecx [eax+edx*4+0C4h] +
mov edi [eax+edx*4+44h] +
and ecx [ebp+var_8] +
and edi esi +
or ecx edi +
jnz loc_412FA7  +
and [ebp+var_4] 0 +
mov edx [eax+0C4h] +
lea ecx [eax+44h] +
mov edi [ecx] +
and edx [ebp+var_8] +
and edi esi +
or edx edi +
jnz loc_412FA4  +
inc [ebp+var_4]  +
mov edx [ecx+84h] +
add ecx 4 +
jmp loc_412F8B  +
mov edx [ebp+var_4] +
mov ecx edx +
imul ecx ecx +
lea ecx [ecx+eax+144h] +
mov [ebp+var_C] ecx +
mov ecx [eax+edx*4+44h] +
xor edi edi +
and ecx esi +
jnz loc_412FD5  +
mov ecx [eax+edx*4+0C4h] +
and ecx [ebp+var_8] +
push 20h  +
pop edi  +
jmp loc_412FD5  +
add ecx ecx +
inc edi  +
test ecx ecx +
jge loc_412FD2  +
mov ecx [ebp+var_C] +
mov edx [ecx+edi*8+4] +
mov ecx [edx] +
sub ecx [ebp+var_10] +
mov esi ecx +
sar esi 4 +
dec esi  +
cmp esi 3Fh +
mov [ebp+var_8] ecx +
jle loc_412FF6  +
push 3Fh  +
pop esi  +
cmp esi edi +
jz loc_4130FF  +
mov ecx [edx+4] +
cmp ecx [edx+8] +
jnz loc_413062  +
cmp edi 20h +
mov ebx 80000000h +
jge loc_413036  +
mov ecx edi +
shr ebx cl +
mov ecx [ebp+var_4] +
lea edi [eax+edi+4] +
not ebx  +
mov [ebp+var_14] ebx +
and ebx [eax+ecx*4+44h] +
mov [eax+ecx*4+44h] ebx +
dec byte ptr [edi]  +
jnz loc_41305F  +
mov ecx [ebp+var_14] +
mov ebx [ebp+arg_0] +
and [ebx] ecx +
jmp loc_413062  +
lea ecx [edi-20h] +
shr ebx cl +
mov ecx [ebp+var_4] +
lea ecx [eax+ecx*4+0C4h] +
lea edi [eax+edi+4] +
not ebx  +
and [ecx] ebx +
dec byte ptr [edi]  +
mov [ebp+var_14] ebx +
jnz loc_41305F  +
mov ebx [ebp+arg_0] +
mov ecx [ebp+var_14] +
and [ebx+4] ecx +
jmp loc_413062  +
mov ebx [ebp+arg_0] +
cmp [ebp+var_8] 0 +
mov ecx [edx+8] +
mov edi [edx+4] +
mov [ecx+4] edi +
mov ecx [edx+4] +
mov edi [edx+8] +
mov [ecx+8] edi +
jz loc_41310B  +
mov ecx [ebp+var_C] +
lea ecx [ecx+esi*8] +
mov edi [ecx+4] +
mov [edx+8] ecx +
mov [edx+4] edi +
mov [ecx+4] edx +
mov ecx [edx+4] +
mov [ecx+8] edx +
mov ecx [edx+4] +
cmp ecx [edx+8] +
jnz loc_4130FC  +
mov cl [esi+eax+4] +
mov byte ptr [ebp+arg_0+3] cl +
inc cl  +
cmp esi 20h +
mov [esi+eax+4] cl +
jge loc_4130D3  +
cmp byte ptr [ebp+arg_0+3] 0 +
jnz loc_4130C1  +
mov edi 80000000h +
mov ecx esi +
shr edi cl +
or [ebx] edi +
mov ecx esi +
mov edi 80000000h +
shr edi cl +
mov ecx [ebp+var_4] +
or [eax+ecx*4+44h] edi +
jmp loc_4130FC  +
cmp byte ptr [ebp+arg_0+3] 0 +
jnz loc_4130E6  +
lea ecx [esi-20h] +
mov edi 80000000h +
shr edi cl +
or [ebx+4] edi +
mov ecx [ebp+var_4] +
lea edi [eax+ecx*4+0C4h] +
lea ecx [esi-20h] +
mov esi 80000000h +
shr esi cl +
or [edi] esi +
mov ecx [ebp+var_8] +
test ecx ecx +
jz loc_41310E  +
mov [edx] ecx +
mov [ecx+edx-4] ecx +
jmp loc_41310E  +
mov ecx [ebp+var_8] +
mov esi [ebp+var_10] +
add edx ecx +
lea ecx [esi+1] +
mov [edx] ecx +
mov [edx+esi-4] ecx +
mov esi [ebp+var_C] +
mov ecx [esi] +
lea edi [ecx+1] +
mov [esi] edi +
test ecx ecx +
jnz loc_413144  +
cmp ebx dword_41F4F0 +
jnz loc_413144  +
mov ecx [ebp+var_4] +
cmp ecx dword_420FC0 +
jnz loc_413144  +
and dword_41F4F0 0 +
mov ecx [ebp+var_4] +
mov [eax] ecx +
lea eax [edx+4] +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
xor ecx ecx +
cmp eax dword_41E240[ecx*8] +
jz loc_41317C  +
inc ecx  +
cmp ecx 2Dh +
jb loc_413160  +
lea ecx [eax-13h] +
cmp ecx 11h +
ja loc_413185  +
push 0Dh  +
pop eax  +
pop ebp  +
retn   +
mov eax dword_41E244[ecx*8] +
pop ebp  +
retn   +
add eax 0FFFFFF44h +
push 0Eh  +
pop ecx  +
cmp ecx eax +
sbb eax eax +
and eax ecx +
add eax 8 +
pop ebp  +
retn   +
***
call sub_411E86  +
test eax eax +
jnz loc_4131AC  +
mov eax offset unk_41E3A8 +
retn   +
add eax 8 +
retn   +
***
call sub_411E86  +
test eax eax +
jnz loc_4131C4  +
mov eax offset unk_41E3AC +
retn   +
add eax 0Ch +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
call sub_4131B5  +
mov ecx [ebp+arg_0] +
push ecx  +
mov [eax] ecx +
call sub_413156  +
pop ecx  +
mov esi eax +
call sub_41319D  +
mov [eax] esi +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov dword_41F600 eax +
mov dword_41F5FC ecx +
mov dword_41F5F8 edx +
mov dword_41F5F4 ebx +
mov dword_41F5F0 esi +
mov dword_41F5EC edi +
mov word_41F618 ss +
mov word_41F60C cs +
mov word_41F5E8 ds +
mov word_41F5E4 es +
mov word_41F5E0 fs +
mov word_41F5DC gs +
pushf   +
pop dword_41F610  +
mov eax [ebp+0] +
mov dword_41F604 eax +
mov eax [ebp+4] +
mov dword_41F608 eax +
lea eax [ebp+8] +
mov dword_41F614 eax +
mov eax [ebp-320h] +
mov dword_41F550 10001h +
mov eax dword_41F608 +
mov dword_41F504 eax +
mov dword_41F4F8 0C0000409h +
mov dword_41F4FC 1 +
mov eax dword_41E3B0 +
mov [ebp-328h] eax +
mov eax dword_41E3B4 +
mov [ebp-324h] eax +
call ds:IsDebuggerPresent  +
mov dword_41F548 eax +
push 1  +
call sub_4174CC  +
pop ecx  +
push 0  +
call ds:SetUnhandledExceptionFilter  +
push offset ExceptionInfo  +
call ds:UnhandledExceptionFilter  +
cmp dword_41F548 0 +
jnz loc_4132E7  +
push 1  +
call sub_4174CC  +
pop ecx  +
push 0C0000409h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
leave   +
retn   +
***
sub eax 3A4h +
jz loc_413329  +
sub eax 4 +
jz loc_413323  +
sub eax 0Dh +
jz loc_41331D  +
dec eax  +
jz loc_413317  +
xor eax eax +
retn   +
mov eax 404h +
retn   +
mov eax 412h +
retn   +
mov eax 804h +
retn   +
mov eax 411h +
retn   +
***
mov edi edi +
push esi  +
push edi  +
mov esi eax +
push 101h  +
xor edi edi +
lea eax [esi+1Ch] +
push edi  +
push eax  +
call sub_413F70  +
xor eax eax +
movzx ecx ax +
mov eax ecx +
mov [esi+4] edi +
mov [esi+8] edi +
mov [esi+0Ch] edi +
shl ecx 10h +
or eax ecx +
lea edi [esi+10h] +
stos   +
stos   +
stos   +
mov ecx offset unk_41E3B8 +
add esp 0Ch +
lea eax [esi+1Ch] +
sub ecx esi +
mov edi 101h +
mov dl [ecx+eax] +
mov [eax] dl +
inc eax  +
dec edi  +
jnz loc_413378  +
lea eax [esi+11Dh] +
mov esi 100h +
mov dl [eax+ecx] +
mov [eax] dl +
inc eax  +
dec esi  +
jnz loc_41338C  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 51Ch +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push edi  +
lea eax [ebp+CPInfo] +
push eax  +
push dword ptr [esi+4]  +
call ds:GetCPInfo  +
mov edi 100h +
test eax eax +
jz loc_4134CC  +
xor eax eax +
mov [ebp+eax+MultiByteStr] al +
inc eax  +
cmp eax edi +
jb loc_4133D3  +
mov al [ebp+CPInfo.LeadByte] +
mov [ebp+MultiByteStr] 20h +
test al al +
jz loc_41341E  +
lea ebx [ebp+CPInfo.LeadByte+1] +
movzx ecx al +
movzx eax byte ptr [ebx] +
cmp ecx eax +
ja loc_413416  +
sub eax ecx +
inc eax  +
push eax  +
lea edx [ebp+ecx+MultiByteStr] +
push 20h  +
push edx  +
call sub_413F70  +
add esp 0Ch +
inc ebx  +
mov al [ebx] +
inc ebx  +
test al al +
jnz loc_4133F6  +
push 0  +
push dword ptr [esi+0Ch]  +
lea eax [ebp+CharType] +
push dword ptr [esi+4]  +
push eax  +
push edi  +
lea eax [ebp+MultiByteStr] +
push eax  +
push 1  +
push 0  +
call sub_417698  +
xor ebx ebx +
push ebx  +
push dword ptr [esi+4]  +
lea eax [ebp+DestStr] +
push edi  +
push eax  +
push edi  +
lea eax [ebp+MultiByteStr] +
push eax  +
push edi  +
push dword ptr [esi+0Ch]  +
push ebx  +
call sub_4159A4  +
add esp 44h +
push ebx  +
push dword ptr [esi+4]  +
lea eax [ebp+var_304] +
push edi  +
push eax  +
push edi  +
lea eax [ebp+MultiByteStr] +
push eax  +
push 200h  +
push dword ptr [esi+0Ch]  +
push ebx  +
call sub_4159A4  +
add esp 24h +
xor eax eax +
movzx ecx [ebp+eax*2+CharType] +
test cl 1 +
jz loc_4134A3  +
or byte ptr [esi+eax+1Dh] 10h +
mov cl [ebp+eax+DestStr] +
jmp loc_4134B4  +
test cl 2 +
jz loc_4134BD  +
or byte ptr [esi+eax+1Dh] 20h +
mov cl byte ptr [ebp+eax+var_304] +
mov [esi+eax+11Dh] cl +
jmp loc_4134C5  +
mov byte ptr [esi+eax+11Dh] 0 +
inc eax  +
cmp eax edi +
jb loc_413488  +
jmp loc_413522  +
lea eax [esi+11Dh] +
mov [ebp+var_51C] 0FFFFFF9Fh +
xor ecx ecx +
sub [ebp+var_51C] eax +
mov edx [ebp+var_51C] +
lea eax [esi+ecx+11Dh] +
add edx eax +
lea ebx [edx+20h] +
cmp ebx 19h +
ja loc_413507  +
or byte ptr [esi+ecx+1Dh] 10h +
mov dl cl +
add dl 20h +
jmp loc_413516  +
cmp edx 19h +
ja loc_41351A  +
or byte ptr [esi+ecx+1Dh] 20h +
mov dl cl +
sub dl 20h +
mov [eax] dl +
jmp loc_41351D  +
mov byte ptr [eax] 0 +
inc ecx  +
cmp ecx edi +
jb loc_4134E4  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn   +
***
call sub_412220  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
xor ebx ebx +
push ebx  +
lea ecx [ebp+var_10] +
call sub_41006A  +
mov dword_41F81C ebx +
cmp esi 0FFFFFFFEh +
jnz loc_41361B  +
mov dword_41F81C 1 +
call ds:GetOEMCP  +
cmp [ebp+var_4] bl +
jz loc_413657  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
jmp loc_413657  +
cmp esi 0FFFFFFFDh +
jnz loc_413632  +
mov dword_41F81C 1 +
call ds:GetACP  +
jmp loc_41360D  +
cmp esi 0FFFFFFFCh +
jnz loc_413649  +
mov eax [ebp+var_10] +
mov eax [eax+4] +
mov dword_41F81C 1 +
jmp loc_41360D  +
cmp [ebp+var_4] bl +
jz loc_413655  +
mov eax [ebp+var_8] +
and dword ptr [eax+70h] 0FFFFFFFDh +
mov eax esi +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
call sub_4135DE  +
mov edi eax +
xor esi esi +
mov [ebp+arg_0] edi +
cmp edi esi +
jnz loc_413698  +
mov eax ebx +
call sub_413334  +
xor eax eax +
jmp loc_413835  +
mov [ebp+var_1C] esi +
xor eax eax +
cmp dword_41E7E8[eax] edi +
jz loc_41373A  +
inc [ebp+var_1C]  +
add eax 30h +
cmp eax 0F0h +
jb loc_41369D  +
cmp edi 0FDE8h +
jz loc_413832  +
cmp edi 0FDE9h +
jz loc_413832  +
movzx eax di +
push eax  +
call ds:IsValidCodePage  +
test eax eax +
jz loc_413832  +
lea eax [ebp+CPInfo] +
push eax  +
push edi  +
call ds:GetCPInfo  +
test eax eax +
jz loc_413826  +
push 101h  +
lea eax [ebx+1Ch] +
push esi  +
push eax  +
call sub_413F70  +
xor edx edx +
inc edx  +
add esp 0Ch +
mov [ebx+4] edi +
mov [ebx+0Ch] esi +
cmp [ebp+CPInfo.MaxCharSize] edx +
jbe loc_41380F  +
cmp [ebp+CPInfo.LeadByte] 0 +
jz loc_4137F0  +
lea esi [ebp+CPInfo.LeadByte+1] +
mov cl [esi] +
test cl cl +
jz loc_4137F0  +
movzx eax byte ptr [esi-1] +
movzx ecx cl +
jmp loc_4137E0  +
push 101h  +
lea eax [ebx+1Ch] +
push esi  +
push eax  +
call sub_413F70  +
mov ecx [ebp+var_1C] +
add esp 0Ch +
imul ecx ecx +
mov [ebp+var_20] esi +
lea esi dword_41E7F8[ecx] +
mov [ebp+var_1C] esi +
jmp loc_41378A  +
mov al [esi+1] +
test al al +
jz loc_41378F  +
movzx edi byte ptr [esi] +
movzx eax al +
jmp loc_413781  +
mov eax [ebp+var_20] +
mov al byte_41E7E4[eax] +
or [ebx+edi+1Dh] al +
movzx eax byte ptr [esi+1] +
inc edi  +
cmp edi eax +
jbe loc_41376F  +
mov edi [ebp+arg_0] +
inc esi  +
inc esi  +
cmp byte ptr [esi] 0 +
jnz loc_413760  +
mov esi [ebp+var_1C] +
inc [ebp+var_20]  +
add esi 8 +
cmp [ebp+var_20] 4 +
mov [ebp+var_1C] esi +
jb loc_41378A  +
mov eax edi +
mov [ebx+4] edi +
mov dword ptr [ebx+8] 1 +
call sub_413300  +
push 6  +
mov [ebx+0Ch] eax +
lea eax [ebx+10h] +
lea ecx dword_41E7EC[ecx] +
pop edx  +
mov si [ecx] +
inc ecx  +
mov [eax] si +
inc ecx  +
inc eax  +
inc eax  +
dec edx  +
jnz loc_4137C1  +
mov esi ebx +
call sub_41339D  +
jmp loc_413691  +
or byte ptr [ebx+eax+1Dh] 4 +
inc eax  +
cmp eax ecx +
jbe loc_4137DA  +
inc esi  +
inc esi  +
cmp byte ptr [esi-1] 0 +
jnz loc_413724  +
lea eax [ebx+1Eh] +
mov ecx 0FEh +
or byte ptr [eax] 8 +
inc eax  +
dec ecx  +
jnz loc_4137F8  +
mov eax [ebx+4] +
call sub_413300  +
mov [ebx+0Ch] eax +
mov [ebx+8] edx +
jmp loc_413812  +
mov [ebx+8] esi +
xor eax eax +
movzx ecx ax +
mov eax ecx +
shl ecx 10h +
or eax ecx +
lea edi [ebx+10h] +
stos   +
stos   +
stos   +
jmp loc_4137CE  +
cmp dword_41F81C esi +
jnz loc_41368A  +
or eax 0FFFFFFFFh +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn   +
***
call sub_412220  +
pop ecx  +
retn   +
***
jmp loc_4139DA  +
***
cmp eax 0FFFFFFFFh +
jnz loc_4139DA  +
cmp ebx offset unk_41E3B8 +
jz loc_4139C9  +
push ebx  +
call sub_40FFD7  +
pop ecx  +
call sub_41319D  +
mov dword ptr [eax] 16h +
jmp loc_4139DA  +
and dword ptr [ebp-20h] 0 +
mov eax [ebp-20h] +
call sub_412265  +
retn   +
***
cmp dword_4210EC 0 +
jnz loc_413A03  +
push 0FFFFFFFDh  +
call sub_413849  +
pop ecx  +
mov dword_4210EC 1 +
xor eax eax +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+0BCh] +
xor ebx ebx +
push edi  +
cmp eax ebx +
jz loc_413A91  +
cmp eax offset off_41EAD8 +
jz loc_413A91  +
mov eax [esi+0B0h] +
cmp eax ebx +
jz loc_413A91  +
cmp [eax] ebx +
jnz loc_413A91  +
mov eax [esi+0B8h] +
cmp eax ebx +
jz loc_413A58  +
cmp [eax] ebx +
jnz loc_413A58  +
push eax  +
call sub_40FFD7  +
push dword ptr [esi+0BCh]  +
call sub_4178C3  +
pop ecx  +
pop ecx  +
mov eax [esi+0B4h] +
cmp eax ebx +
jz loc_413A79  +
cmp [eax] ebx +
jnz loc_413A79  +
push eax  +
call sub_40FFD7  +
push dword ptr [esi+0BCh]  +
call sub_417879  +
pop ecx  +
pop ecx  +
push dword ptr [esi+0B0h]  +
call sub_40FFD7  +
push dword ptr [esi+0BCh]  +
call sub_40FFD7  +
pop ecx  +
pop ecx  +
mov eax [esi+0C0h] +
cmp eax ebx +
jz loc_413ADF  +
cmp [eax] ebx +
jnz loc_413ADF  +
mov eax [esi+0C4h] +
sub eax 0FEh +
push eax  +
call sub_40FFD7  +
mov eax [esi+0CCh] +
mov edi 80h +
sub eax edi +
push eax  +
call sub_40FFD7  +
mov eax [esi+0D0h] +
sub eax edi +
push eax  +
call sub_40FFD7  +
push dword ptr [esi+0C0h]  +
call sub_40FFD7  +
add esp 10h +
lea edi [esi+0D4h] +
mov eax [edi] +
cmp eax offset off_41EA18 +
jz loc_413B05  +
cmp [eax+0B4h] ebx +
jnz loc_413B05  +
push eax  +
call sub_4176DF  +
push dword ptr [edi]  +
call sub_40FFD7  +
pop ecx  +
pop ecx  +
lea edi [esi+50h] +
mov [ebp+arg_0] 6 +
cmp dword ptr [edi-8] offset unk_41E8E0 +
jz loc_413B29  +
mov eax [edi] +
cmp eax ebx +
jz loc_413B29  +
cmp [eax] ebx +
jnz loc_413B29  +
push eax  +
call sub_40FFD7  +
pop ecx  +
cmp [edi-4] ebx +
jz loc_413B40  +
mov eax [edi+4] +
cmp eax ebx +
jz loc_413B40  +
cmp [eax] ebx +
jnz loc_413B40  +
push eax  +
call sub_40FFD7  +
pop ecx  +
add edi 10h +
dec [ebp+arg_0]  +
jnz loc_413B0F  +
push esi  +
call sub_40FFD7  +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi ds:InterlockedIncrement +
push edi  +
mov edi [ebp+lpAddend] +
push edi  +
call esi  +
mov eax [edi+0B0h] +
test eax eax +
jz loc_413B7A  +
push eax  +
call esi  +
mov eax [edi+0B8h] +
test eax eax +
jz loc_413B87  +
push eax  +
call esi  +
mov eax [edi+0B4h] +
test eax eax +
jz loc_413B94  +
push eax  +
call esi  +
mov eax [edi+0C0h] +
test eax eax +
jz loc_413BA1  +
push eax  +
call esi  +
lea ebx [edi+50h] +
mov [ebp+lpAddend] 6 +
cmp dword ptr [ebx-8] offset unk_41E8E0 +
jz loc_413BBD  +
mov eax [ebx] +
test eax eax +
jz loc_413BBD  +
push eax  +
call esi  +
cmp dword ptr [ebx-4] 0 +
jz loc_413BCD  +
mov eax [ebx+4] +
test eax eax +
jz loc_413BCD  +
push eax  +
call esi  +
add ebx 10h +
dec [ebp+lpAddend]  +
jnz loc_413BAB  +
mov eax [edi+0D4h] +
add eax 0B4h +
push eax  +
call esi  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push edi  +
mov edi [ebp+lpAddend] +
test edi edi +
jz loc_413C81  +
push ebx  +
push esi  +
mov esi ds:InterlockedDecrement +
push edi  +
call esi  +
mov eax [edi+0B0h] +
test eax eax +
jz loc_413C16  +
push eax  +
call esi  +
mov eax [edi+0B8h] +
test eax eax +
jz loc_413C23  +
push eax  +
call esi  +
mov eax [edi+0B4h] +
test eax eax +
jz loc_413C30  +
push eax  +
call esi  +
mov eax [edi+0C0h] +
test eax eax +
jz loc_413C3D  +
push eax  +
call esi  +
lea ebx [edi+50h] +
mov [ebp+lpAddend] 6 +
cmp dword ptr [ebx-8] offset unk_41E8E0 +
jz loc_413C59  +
mov eax [ebx] +
test eax eax +
jz loc_413C59  +
push eax  +
call esi  +
cmp dword ptr [ebx-4] 0 +
jz loc_413C69  +
mov eax [ebx+4] +
test eax eax +
jz loc_413C69  +
push eax  +
call esi  +
add ebx 10h +
dec [ebp+lpAddend]  +
jnz loc_413C47  +
mov eax [edi+0D4h] +
add eax 0B4h +
push eax  +
call esi  +
pop esi  +
pop ebx  +
mov eax edi +
pop edi  +
pop ebp  +
retn   +
***
test edi edi +
jz loc_413CC6  +
test eax eax +
jz loc_413CC6  +
push esi  +
mov esi [eax] +
cmp esi edi +
jz loc_413CC2  +
push edi  +
mov [eax] edi +
call sub_413B59  +
pop ecx  +
test esi esi +
jz loc_413CC2  +
push esi  +
call sub_413BED  +
cmp dword ptr [esi] 0 +
pop ecx  +
jnz loc_413CC2  +
cmp esi offset unk_41E8E8 +
jz loc_413CC2  +
push esi  +
call sub_413A0B  +
pop ecx  +
mov eax edi +
pop esi  +
retn   +
xor eax eax +
retn   +
***
call sub_412220  +
pop ecx  +
mov esi [ebp-1Ch] +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 0FFFFh +
mov ecx eax +
sub esp 14h +
cmp [ebp+SrcStr] cx +
jz locret_413DFC  +
push ebx  +
push [ebp+arg_4]  +
lea ecx [ebp+var_14] +
call sub_41006A  +
mov ecx [ebp+var_14] +
mov edx [ecx+14h] +
xor ebx ebx +
cmp edx ebx +
jnz loc_413D8E  +
mov eax dword ptr [ebp+SrcStr] +
lea ecx [eax-41h] +
cmp cx 19h +
ja loc_413D89  +
add eax 20h +
movzx eax ax +
jmp loc_413DEF  +
push esi  +
mov eax 100h +
mov esi eax +
cmp [ebp+SrcStr] si +
pop esi  +
jnb loc_413DC6  +
lea eax [ebp+var_14] +
push eax  +
push 1  +
push dword ptr [ebp+SrcStr]  +
call sub_4154CB  +
add esp 0Ch +
test eax eax +
movzx eax [ebp+SrcStr] +
jz loc_413DEF  +
mov ecx [ebp+var_14] +
mov ecx [ecx+0CCh] +
movzx ax byte ptr [ecx+eax] +
jmp loc_413D89  +
push dword ptr [ecx+4]  +
lea ecx [ebp+DestStr] +
push 1  +
push ecx  +
push 1  +
lea ecx [ebp+SrcStr] +
push ecx  +
push eax  +
push edx  +
lea eax [ebp+var_14] +
push eax  +
call sub_417A85  +
add esp 20h +
test eax eax +
movzx eax [ebp+SrcStr] +
jz loc_413DEF  +
movzx eax [ebp+DestStr] +
cmp [ebp+var_8] bl +
jz loc_413DFB  +
mov ecx [ebp+var_C] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov dword_41F85C eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
and [ebp+var_328] 0 +
push ebx  +
push 4Ch  +
lea eax [ebp+var_324] +
push 0  +
push eax  +
call sub_413F70  +
lea eax [ebp+var_328] +
mov [ebp+ExceptionInfo.ExceptionRecord] eax +
lea eax [ebp+var_2D0] +
add esp 0Ch +
mov [ebp+ExceptionInfo.ContextRecord] eax +
mov [ebp+var_220] eax +
mov [ebp+var_224] ecx +
mov [ebp+var_228] edx +
mov [ebp+var_22C] ebx +
mov [ebp+var_230] esi +
mov [ebp+var_234] edi +
mov [ebp+var_208] ss +
mov [ebp+var_214] cs +
mov [ebp+var_238] ds +
mov [ebp+var_23C] es +
mov [ebp+var_240] fs +
mov [ebp+var_244] gs +
pushf   +
pop [ebp+var_210]  +
mov eax [ebp+4] +
lea ecx [ebp+4] +
mov [ebp+var_2D0] 10001h +
mov [ebp+var_218] eax +
mov [ebp+var_20C] ecx +
mov ecx [ecx-4] +
mov [ebp+var_21C] ecx +
mov [ebp+var_328] 0C0000417h +
mov [ebp+var_324] 1 +
mov [ebp+var_31C] eax +
call ds:IsDebuggerPresent  +
push 0  +
mov ebx eax +
call ds:SetUnhandledExceptionFilter  +
lea eax [ebp+ExceptionInfo] +
push eax  +
call ds:UnhandledExceptionFilter  +
test eax eax +
jnz loc_413F20  +
test ebx ebx +
jnz loc_413F20  +
push 2  +
call sub_4174CC  +
pop ecx  +
push 0C0000417h  +
call ds:GetCurrentProcess  +
push eax  +
call ds:TerminateProcess  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword_41F85C  +
call sub_411C9A  +
pop ecx  +
test eax eax +
jz loc_413F5C  +
pop ebp  +
jmp eax  +
push 2  +
call sub_4174CC  +
pop ecx  +
pop ebp  +
jmp sub_413E17  +
***
mov edx [esp+arg_8] +
mov ecx [esp+arg_0] +
test edx edx +
jz loc_413FE5  +
xor eax eax +
mov al [esp+arg_4] +
test al al +
jnz loc_413F9C  +
cmp edx 100h +
jb loc_413F9C  +
cmp dword_420FA4 0 +
jz loc_413F9C  +
jmp sub_417B3D  +
push edi  +
mov edi ecx +
cmp edx 4 +
jb loc_413FD5  +
neg ecx  +
and ecx 3 +
jz loc_413FB7  +
sub edx ecx +
mov [edi] al +
add edi 1 +
sub ecx 1 +
jnz loc_413FAD  +
mov ecx eax +
shl eax 8 +
add eax ecx +
mov ecx eax +
shl eax 10h +
add eax ecx +
mov ecx edx +
and edx 3 +
shr ecx 2 +
jz loc_413FD5  +
stos   +
test edx edx +
jz loc_413FDF  +
mov [edi] al +
add edi 1 +
sub edx 1 +
jnz loc_413FD5  +
mov eax [esp+4+arg_0] +
pop edi  +
retn   +
mov eax [esp+arg_0] +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
mov esi [ebp+0Ch] +
mov ecx [ebp+10h] +
mov edi [ebp+8] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_414010  +
cmp edi eax +
jb loc_4141B4  +
cmp ecx 100h +
jb loc_414037  +
cmp dword_420FA4 0 +
jz loc_414037  +
push edi  +
push esi  +
and edi 0Fh +
and esi 0Fh +
cmp edi esi +
pop esi  +
pop edi  +
jnz loc_414037  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_417D2B  +
***
test edi 3 +
jnz loc_414054  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_414074  +
movs   +
jmp ds:off_414164[edx*4]  +
mov eax edi +
mov edx 3 +
sub ecx 4 +
jb loc_41406C  +
and eax 3 +
add ecx eax +
jmp dword ptr ds:(loc_414074+4)[eax*4]  +
***
jmp ds:dword_414174[ecx*4]  +
***
jmp ds:off_4140F8[ecx*4]  +
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
add esi 3 +
add edi 3 +
cmp ecx 8 +
jb loc_414074  +
movs   +
jmp ds:off_414164[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
add esi 2 +
add edi 2 +
cmp ecx 8 +
jb loc_414074  +
movs   +
jmp ds:off_414164[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
add esi 1 +
shr ecx 2 +
add edi 1 +
cmp ecx 8 +
jb loc_414074  +
movs   +
jmp ds:off_414164[edx*4]  +
***
mov eax [esi+ecx*4-1Ch] +
mov [edi+ecx*4-1Ch] eax +
mov eax [esi+ecx*4-18h] +
mov [edi+ecx*4-18h] eax +
mov eax [esi+ecx*4-14h] +
mov [edi+ecx*4-14h] eax +
mov eax [esi+ecx*4-10h] +
mov [edi+ecx*4-10h] eax +
mov eax [esi+ecx*4-0Ch] +
mov [edi+ecx*4-0Ch] eax +
mov eax [esi+ecx*4-8] +
mov [edi+ecx*4-8] eax +
mov eax [esi+ecx*4-4] +
mov [edi+ecx*4-4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
jmp ds:off_414164[edx*4]  +
***
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
lea esi [ecx+esi-4] +
lea edi [ecx+edi-4] +
test edi 3 +
jnz loc_4141E8  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_4141DC  +
std   +
movs   +
cld   +
jmp ds:off_414300[edx*4]  +
neg ecx  +
jmp ds:off_4142B0[ecx*4]  +
mov eax edi +
mov edx 3 +
cmp ecx 4 +
jb loc_414200  +
and eax 3 +
sub ecx eax +
jmp dword ptr ds:(loc_414200+4)[eax*4]  +
***
jmp ds:off_414300[ecx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
sub esi 1 +
shr ecx 2 +
sub edi 1 +
cmp ecx 8 +
jb loc_4141DC  +
std   +
movs   +
cld   +
jmp ds:off_414300[edx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
sub esi 2 +
sub edi 2 +
cmp ecx 8 +
jb loc_4141DC  +
std   +
movs   +
cld   +
jmp ds:off_414300[edx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
sub esi 3 +
sub edi 3 +
cmp ecx 8 +
jb loc_4141DC  +
std   +
movs   +
cld   +
jmp ds:off_414300[edx*4]  +
mov eax [esi+ecx*4+1Ch] +
mov [edi+ecx*4+1Ch] eax +
mov eax [esi+ecx*4+18h] +
mov [edi+ecx*4+18h] eax +
mov eax [esi+ecx*4+14h] +
mov [edi+ecx*4+14h] eax +
mov eax [esi+ecx*4+10h] +
mov [edi+ecx*4+10h] eax +
mov eax [esi+ecx*4+0Ch] +
mov [edi+ecx*4+0Ch] eax +
mov eax [esi+ecx*4+8] +
mov [edi+ecx*4+8] eax +
mov eax [esi+ecx*4+4] +
mov [edi+ecx*4+4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
jmp ds:off_414300[edx*4]  +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
call sub_412220  +
pop ecx  +
retn   +
***
mov edi [ebp-1Ch] +
test edi edi +
jnz loc_414571  +
cmp dword_41F4F4 edi +
jz loc_4144E6  +
push esi  +
call sub_40FF86  +
pop ecx  +
test eax eax +
jnz loc_41439B  +
call sub_41319D  +
cmp [ebp-20h] edi +
jnz loc_41453F  +
mov esi eax +
call ds:GetLastError  +
push eax  +
call sub_413156  +
pop ecx  +
mov [esi] eax +
jmp loc_414545  +
test edi edi +
jnz loc_414571  +
call sub_41319D  +
cmp [ebp-20h] edi +
jz loc_414560  +
mov dword ptr [eax] 0Ch +
jmp loc_414571  +
test esi esi +
jnz loc_414505  +
inc esi  +
push esi  +
push ebx  +
push 0  +
push hHeap  +
call ds:HeapReAlloc  +
mov edi eax +
test edi edi +
jnz loc_414571  +
cmp dword_41F4F4 eax +
jz loc_414557  +
push esi  +
call sub_40FF86  +
pop ecx  +
test eax eax +
jz loc_41454D  +
cmp esi 0FFFFFFE0h +
jbe loc_414500  +
push esi  +
call sub_40FF86  +
pop ecx  +
call sub_41319D  +
mov dword ptr [eax] 0Ch +
xor eax eax +
call sub_412265  +
retn   +
call sub_41319D  +
jmp loc_4144D3  +
test edi edi +
jnz loc_414571  +
call sub_41319D  +
mov esi eax +
call ds:GetLastError  +
push eax  +
call sub_413156  +
mov [esi] eax +
pop ecx  +
mov eax edi +
jmp loc_414547  +
***
call sub_412220  +
xor edi edi +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor esi esi +
push [ebp+arg_0]  +
call sub_40FEA3  +
mov edi eax +
pop ecx  +
test edi edi +
jnz loc_414661  +
cmp dword_41F860 eax +
jbe loc_414661  +
push esi  +
call ds:Sleep  +
lea eax [esi+3E8h] +
cmp eax dword_41F860 +
jbe loc_41465A  +
or eax 0FFFFFFFFh +
mov esi eax +
cmp eax 0FFFFFFFFh +
jnz loc_41462B  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor esi esi +
push 0  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_417E13  +
mov edi eax +
add esp 0Ch +
test edi edi +
jnz loc_4146B2  +
cmp dword_41F860 eax +
jbe loc_4146B2  +
push esi  +
call ds:Sleep  +
lea eax [esi+3E8h] +
cmp eax dword_41F860 +
jbe loc_4146AB  +
or eax 0FFFFFFFFh +
mov esi eax +
cmp eax 0FFFFFFFFh +
jnz loc_414675  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor esi esi +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call sub_41435A  +
mov edi eax +
pop ecx  +
pop ecx  +
test edi edi +
jnz loc_414705  +
cmp [ebp+arg_4] eax +
jz loc_414705  +
cmp dword_41F860 eax +
jbe loc_414705  +
push esi  +
call ds:Sleep  +
lea eax [esi+3E8h] +
cmp eax dword_41F860 +
jbe loc_4146FE  +
or eax 0FFFFFFFFh +
mov esi eax +
cmp eax 0FFFFFFFFh +
jnz loc_4146C6  +
mov eax edi +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
push esi  +
call sub_418B86  +
mov [ebp+arg_4] eax +
mov eax [esi+0Ch] +
pop ecx  +
test al 82h +
jnz loc_414742  +
call sub_41319D  +
mov dword ptr [eax] 9 +
or dword ptr [esi+0Ch] 20h +
or eax 0FFFFFFFFh +
jmp loc_414871  +
test al 40h +
jz loc_414753  +
call sub_41319D  +
mov dword ptr [eax] 22h +
jmp loc_414736  +
push ebx  +
xor ebx ebx +
test al 1 +
jz loc_414770  +
mov [esi+4] ebx +
test al 10h +
jz loc_4147EC  +
mov ecx [esi+8] +
and eax 0FFFFFFFEh +
mov [esi] ecx +
mov [esi+0Ch] eax +
mov eax [esi+0Ch] +
and eax 0FFFFFFEFh +
or eax 2 +
mov [esi+0Ch] eax +
mov [esi+4] ebx +
mov [ebp+var_4] ebx +
test eax 10Ch +
jnz loc_4147B5  +
call sub_4189AE  +
add eax 20h +
cmp esi eax +
jz loc_4147A1  +
call sub_4189AE  +
add eax 40h +
cmp esi eax +
jnz loc_4147AE  +
push [ebp+arg_4]  +
call sub_418945  +
pop ecx  +
test eax eax +
jnz loc_4147B5  +
push esi  +
call sub_4188F7  +
pop ecx  +
test dword ptr [esi+0Ch] 108h +
push edi  +
jz loc_414843  +
mov eax [esi+8] +
mov edi [esi] +
lea ecx [eax+1] +
mov [esi] ecx +
mov ecx [esi+18h] +
sub edi eax +
dec ecx  +
cmp edi ebx +
mov [esi+4] ecx +
jle loc_4147F7  +
push edi  +
push eax  +
push [ebp+arg_4]  +
call sub_418816  +
add esp 0Ch +
mov [ebp+var_4] eax +
jmp loc_414839  +
or eax 20h +
mov [esi+0Ch] eax +
or eax 0FFFFFFFFh +
jmp loc_414870  +
mov ecx [ebp+arg_4] +
cmp ecx 0FFFFFFFFh +
jz loc_41481A  +
cmp ecx 0FFFFFFFEh +
jz loc_41481A  +
mov eax ecx +
and eax 1Fh +
mov edx ecx +
sar edx 5 +
shl eax 6 +
add eax dword_420FE0[edx*4] +
jmp loc_41481F  +
mov eax offset unk_41E0D0 +
test byte ptr [eax+4] 20h +
jz loc_414839  +
push 2  +
push ebx  +
push ebx  +
push ecx  +
call sub_417FC0  +
and eax edx +
add esp 10h +
cmp eax 0FFFFFFFFh +
jz loc_41485E  +
mov eax [esi+8] +
mov cl byte ptr [ebp+arg_0] +
mov [eax] cl +
jmp loc_414859  +
xor edi edi +
inc edi  +
push edi  +
lea eax [ebp+arg_0] +
push eax  +
push [ebp+arg_4]  +
call sub_418816  +
add esp 0Ch +
mov [ebp+var_4] eax +
cmp [ebp+var_4] edi +
jz loc_414867  +
or dword ptr [esi+0Ch] 20h +
or eax 0FFFFFFFFh +
jmp loc_41486F  +
mov eax [ebp+arg_0] +
and eax 0FFh +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn   +
***
test byte ptr [ecx+0Ch] 40h +
jz loc_414885  +
cmp dword ptr [ecx+8] 0 +
jz loc_4148A9  +
dec dword ptr [ecx+4]  +
js loc_414895  +
mov edx [ecx] +
mov [edx] al +
inc dword ptr [ecx]  +
movzx eax al +
jmp loc_4148A1  +
movsx eax al +
push ecx  +
push eax  +
call sub_414710  +
pop ecx  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jnz loc_4148A9  +
or [esi] eax +
retn   +
inc dword ptr [esi]  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi eax +
jmp loc_4148CE  +
mov ecx [ebp+arg_8] +
mov al [ebp+arg_0] +
dec [ebp+arg_4]  +
call sub_414879  +
cmp dword ptr [esi] 0FFFFFFFFh +
jz loc_4148D4  +
cmp [ebp+arg_4] 0 +
jg loc_4148BB  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [edi+0Ch] 40h +
push ebx  +
push esi  +
mov esi eax +
mov ebx ecx +
jz loc_41491F  +
cmp dword ptr [edi+8] 0 +
jnz loc_41491F  +
mov eax [ebp+arg_0] +
add [esi] eax +
jmp loc_414925  +
mov al [ebx] +
dec [ebp+arg_0]  +
mov ecx edi +
call sub_414879  +
inc ebx  +
cmp dword ptr [esi] 0FFFFFFFFh +
jnz loc_41491F  +
call sub_41319D  +
cmp dword ptr [eax] 2Ah +
jnz loc_414925  +
mov ecx edi +
mov al 3Fh +
call sub_414879  +
cmp [ebp+arg_0] 0 +
jg loc_4148FA  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 278h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
mov ebx [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
xor eax eax +
push edi  +
mov edi [ebp+arg_C] +
push [ebp+arg_8]  +
lea ecx [ebp+var_25C] +
mov [ebp+var_24C] esi +
mov [ebp+var_224] edi +
mov [ebp+var_248] eax +
mov [ebp+var_210] eax +
mov [ebp+var_234] eax +
mov [ebp+var_218] eax +
mov [ebp+var_230] eax +
mov [ebp+var_240] eax +
mov [ebp+var_238] eax +
call sub_41006A  +
test esi esi +
jnz loc_4149CE  +
call sub_41319D  +
mov dword ptr [eax] 16h +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
call sub_413F44  +
add esp 14h +
cmp [ebp+var_250] 0 +
jz loc_4149C6  +
mov eax [ebp+var_254] +
and dword ptr [eax+70h] 0FFFFFFFDh +
or eax 0FFFFFFFFh +
jmp loc_415496  +
test byte ptr [esi+0Ch] 40h +
jnz loc_414A32  +
push esi  +
call sub_418B86  +
pop ecx  +
mov edx offset unk_41E0D0 +
cmp eax 0FFFFFFFFh +
jz loc_414A00  +
cmp eax 0FFFFFFFEh +
jz loc_414A00  +
mov ecx eax +
and ecx 1Fh +
mov esi eax +
sar esi 5 +
shl ecx 6 +
add ecx dword_420FE0[esi*4] +
jmp loc_414A02  +
mov ecx edx +
test byte ptr [ecx+24h] 7Fh +
jnz loc_414999  +
cmp eax 0FFFFFFFFh +
jz loc_414A26  +
cmp eax 0FFFFFFFEh +
jz loc_414A26  +
mov ecx eax +
and eax 1Fh +
sar ecx 5 +
shl eax 6 +
add eax dword_420FE0[ecx*4] +
jmp loc_414A28  +
mov eax edx +
test byte ptr [eax+24h] 80h +
jnz loc_414999  +
xor ecx ecx +
cmp ebx ecx +
jz loc_414999  +
mov dl [ebx] +
mov [ebp+var_228] ecx +
mov [ebp+var_220] ecx +
mov [ebp+var_244] ecx +
mov [ebp+var_211] dl +
test dl dl +
jz loc_41547D  +
inc ebx  +
cmp [ebp+var_228] 0 +
mov [ebp+var_23C] ebx +
jl loc_41547D  +
mov al dl +
sub al 20h +
cmp al 58h +
ja loc_414A8B  +
movsx eax dl +
movsx eax ds:byte_401B08[eax] +
and eax 0Fh +
xor esi esi +
jmp loc_414A8F  +
xor esi esi +
xor eax eax +
movsx eax ds:byte_401B28[ecx+eax*8] +
push 7  +
sar eax 4 +
pop ecx  +
mov [ebp+var_26C] eax +
cmp eax ecx +
ja loc_415458  +
jmp ds:off_4154A6[eax*4]  +
or [ebp+var_218] 0FFFFFFFFh +
mov [ebp+var_270] esi +
mov [ebp+var_240] esi +
mov [ebp+var_234] esi +
mov [ebp+var_230] esi +
mov [ebp+var_210] esi +
mov [ebp+var_238] esi +
jmp loc_415458  +
movsx eax dl +
sub eax 20h +
jz loc_414B34  +
sub eax 3 +
jz loc_414B25  +
sub eax 8 +
jz loc_414B19  +
dec eax  +
dec eax  +
jz loc_414B0D  +
sub eax 3 +
jnz loc_415458  +
or [ebp+var_210] 8 +
jmp loc_415458  +
or [ebp+var_210] 4 +
jmp loc_415458  +
or [ebp+var_210] 1 +
jmp loc_415458  +
or [ebp+var_210] 80h +
jmp loc_415458  +
or [ebp+var_210] 2 +
jmp loc_415458  +
cmp dl 2Ah +
jnz loc_414B71  +
add edi 4 +
mov [ebp+var_224] edi +
mov edi [edi-4] +
cmp edi esi +
mov [ebp+var_234] edi +
jge loc_415458  +
or [ebp+var_210] 4 +
neg [ebp+var_234]  +
jmp loc_415458  +
mov eax [ebp+var_234] +
imul eax eax +
movsx ecx dl +
lea eax [eax+ecx-30h] +
mov [ebp+var_234] eax +
jmp loc_415458  +
mov [ebp+var_218] esi +
jmp loc_415458  +
cmp dl 2Ah +
jnz loc_414BC2  +
add edi 4 +
mov [ebp+var_224] edi +
mov edi [edi-4] +
cmp edi esi +
mov [ebp+var_218] edi +
jge loc_415458  +
or [ebp+var_218] 0FFFFFFFFh +
jmp loc_415458  +
mov eax [ebp+var_218] +
imul eax eax +
movsx ecx dl +
lea eax [eax+ecx-30h] +
mov [ebp+var_218] eax +
jmp loc_415458  +
cmp dl 49h +
jz loc_414C37  +
cmp dl 68h +
jz loc_414C2B  +
cmp dl 6Ch +
jz loc_414C04  +
cmp dl 77h +
jnz loc_415458  +
or [ebp+var_210] 800h +
jmp loc_415458  +
cmp byte ptr [ebx] 6Ch +
jnz loc_414C1F  +
inc ebx  +
or [ebp+var_210] 1000h +
mov [ebp+var_23C] ebx +
jmp loc_415458  +
or [ebp+var_210] 10h +
jmp loc_415458  +
or [ebp+var_210] 20h +
jmp loc_415458  +
mov al [ebx] +
cmp al 36h +
jnz loc_414C5A  +
cmp byte ptr [ebx+1] 34h +
jnz loc_414C5A  +
inc ebx  +
inc ebx  +
or [ebp+var_210] 8000h +
mov [ebp+var_23C] ebx +
jmp loc_415458  +
cmp al 33h +
jnz loc_414C7B  +
cmp byte ptr [ebx+1] 32h +
jnz loc_414C7B  +
inc ebx  +
inc ebx  +
and [ebp+var_210] 0FFFF7FFFh +
mov [ebp+var_23C] ebx +
jmp loc_415458  +
cmp al 64h +
jz loc_415458  +
cmp al 69h +
jz loc_415458  +
cmp al 6Fh +
jz loc_415458  +
cmp al 75h +
jz loc_415458  +
cmp al 78h +
jz loc_415458  +
cmp al 58h +
jz loc_415458  +
mov [ebp+var_26C] esi +
lea eax [ebp+var_25C] +
push eax  +
movzx eax dl +
push eax  +
mov [ebp+var_238] esi +
call sub_4109B0  +
pop ecx  +
test eax eax +
mov al [ebp+var_211] +
pop ecx  +
jz loc_414CF5  +
mov ecx [ebp+var_24C] +
lea esi [ebp+var_228] +
call sub_414879  +
mov al [ebx] +
inc ebx  +
mov [ebp+var_23C] ebx +
test al al +
jz loc_414999  +
mov ecx [ebp+var_24C] +
lea esi [ebp+var_228] +
call sub_414879  +
jmp loc_415458  +
movsx eax dl +
cmp eax 64h +
jg loc_414EFF  +
jz loc_414F96  +
cmp eax 53h +
jg loc_414E18  +
jz loc_414DAC  +
sub eax 41h +
jz loc_414D41  +
dec eax  +
dec eax  +
jz loc_414D8D  +
dec eax  +
dec eax  +
jz loc_414D41  +
dec eax  +
dec eax  +
jnz loc_4152D3  +
add dl 20h +
mov [ebp+var_270] 1 +
mov [ebp+var_211] dl +
or [ebp+var_210] 40h +
cmp [ebp+var_218] esi +
lea ebx [ebp+UsedDefaultChar] +
mov eax 200h +
mov [ebp+var_21C] ebx +
mov [ebp+var_260] eax +
jge loc_414FC6  +
mov [ebp+var_218] 6 +
jmp loc_415032  +
test [ebp+var_210] 830h +
jnz loc_414E35  +
or [ebp+var_210] 800h +
jmp loc_414E35  +
test [ebp+var_210] 830h +
jnz loc_414DC2  +
or [ebp+var_210] 800h +
mov ecx [ebp+var_218] +
cmp ecx 0FFFFFFFFh +
jnz loc_414DD2  +
mov ecx 7FFFFFFFh +
add edi 4 +
test [ebp+var_210] 810h +
mov [ebp+var_224] edi +
mov edi [edi-4] +
mov [ebp+var_21C] edi +
jz loc_4152A5  +
cmp edi esi +
jnz loc_414E03  +
mov eax off_41E9D4 +
mov [ebp+var_21C] eax +
mov eax [ebp+var_21C] +
mov [ebp+var_238] 1 +
jmp loc_415297  +
sub eax 58h +
jz loc_4150FB  +
dec eax  +
dec eax  +
jz loc_414E9E  +
sub eax ecx +
jz loc_414D54  +
dec eax  +
dec eax  +
jnz loc_4152D3  +
add edi 4 +
test [ebp+var_210] 810h +
mov [ebp+var_224] edi +
jz loc_414E7A  +
movzx eax word ptr [edi-4] +
push eax  +
push 200h  +
lea eax [ebp+UsedDefaultChar] +
push eax  +
lea eax [ebp+var_220] +
push eax  +
call sub_418D49  +
add esp 10h +
test eax eax +
jz loc_414E8D  +
mov [ebp+var_240] 1 +
jmp loc_414E8D  +
mov al [edi-4] +
mov byte ptr [ebp+UsedDefaultChar] al +
mov [ebp+var_220] 1 +
lea eax [ebp+UsedDefaultChar] +
mov [ebp+var_21C] eax +
jmp loc_4152D3  +
mov eax [edi] +
add edi 4 +
mov [ebp+var_224] edi +
cmp eax esi +
jz loc_414EE8  +
mov ecx [eax+4] +
cmp ecx esi +
jz loc_414EE8  +
test [ebp+var_210] 800h +
movsx eax word ptr [eax] +
mov [ebp+var_21C] ecx +
jz loc_414EDD  +
cdq   +
sub eax edx +
sar eax 1 +
mov [ebp+var_238] 1 +
jmp loc_4152CD  +
mov [ebp+var_238] esi +
jmp loc_4152CD  +
mov eax off_41E9D0 +
mov [ebp+var_21C] eax +
push eax  +
call sub_4171B0  +
pop ecx  +
jmp loc_4152CD  +
cmp eax 70h +
jg loc_415103  +
jz loc_4150F1  +
cmp eax 65h +
jl loc_4152D3  +
cmp eax 67h +
jle loc_414D54  +
cmp eax 69h +
jz loc_414F96  +
cmp eax 6Eh +
jz loc_414F52  +
cmp eax 6Fh +
jnz loc_4152D3  +
test byte ptr [ebp+var_210] 80h +
mov [ebp+var_220] 8 +
jz loc_414FA7  +
or [ebp+var_210] 200h +
jmp loc_414FA7  +
mov esi [edi] +
add edi 4 +
mov [ebp+var_224] edi +
call sub_418BBD  +
test eax eax +
jz loc_414999  +
test byte ptr [ebp+var_210] 20h +
jz loc_414F7F  +
mov ax word ptr [ebp+var_228] +
mov [esi] ax +
jmp loc_414F87  +
mov eax [ebp+var_228] +
mov [esi] eax +
mov [ebp+var_240] 1 +
jmp loc_41543C  +
or [ebp+var_210] 40h +
mov [ebp+var_220] 0Ah +
mov ecx [ebp+var_210] +
test ecx 8000h +
jz loc_415162  +
mov eax [edi] +
mov edx [edi+4] +
add edi 8 +
jmp loc_41519B  +
jnz loc_414FD9  +
cmp dl 67h +
jnz loc_415032  +
mov [ebp+var_218] 1 +
jmp loc_415032  +
cmp [ebp+var_218] eax +
jle loc_414FE7  +
mov [ebp+var_218] eax +
cmp [ebp+var_218] 0A3h +
jle loc_415032  +
mov esi [ebp+var_218] +
add esi 15Dh +
push esi  +
call sub_414622  +
mov dl [ebp+var_211] +
pop ecx  +
mov [ebp+var_244] eax +
test eax eax +
jz loc_415026  +
mov [ebp+var_21C] eax +
mov [ebp+var_260] esi +
mov ebx eax +
jmp loc_415030  +
mov [ebp+var_218] 0A3h +
xor esi esi +
mov eax [edi] +
add edi 8 +
mov [ebp+var_278] eax +
mov eax [edi-4] +
mov [ebp+var_274] eax +
lea eax [ebp+var_25C] +
push eax  +
push [ebp+var_270]  +
movsx eax dl +
push [ebp+var_218]  +
mov [ebp+var_224] edi +
push eax  +
push [ebp+var_260]  +
lea eax [ebp+var_278] +
push ebx  +
push eax  +
push off_41E9F8  +
call sub_411C9A  +
pop ecx  +
call eax  +
mov edi [ebp+var_210] +
add esp 1Ch +
and edi 80h +
jz loc_4150B0  +
cmp [ebp+var_218] esi +
jnz loc_4150B0  +
lea eax [ebp+var_25C] +
push eax  +
push ebx  +
push off_41EA04  +
call sub_411C9A  +
pop ecx  +
call eax  +
pop ecx  +
pop ecx  +
cmp [ebp+var_211] 67h +
jnz loc_4150D5  +
cmp edi esi +
jnz loc_4150D5  +
lea eax [ebp+var_25C] +
push eax  +
push ebx  +
push off_41EA00  +
call sub_411C9A  +
pop ecx  +
call eax  +
pop ecx  +
pop ecx  +
cmp byte ptr [ebx] 2Dh +
jnz loc_4150EB  +
or [ebp+var_210] 100h +
inc ebx  +
mov [ebp+var_21C] ebx +
push ebx  +
jmp loc_414EF4  +
mov [ebp+var_218] 8 +
mov [ebp+var_248] ecx +
jmp loc_415127  +
sub eax 73h +
jz loc_414DC2  +
dec eax  +
dec eax  +
jz loc_414F9D  +
sub eax 3 +
jnz loc_4152D3  +
mov [ebp+var_248] 27h +
test byte ptr [ebp+var_210] 80h +
mov [ebp+var_220] 10h +
jz loc_414FA7  +
mov al byte ptr [ebp+var_248] +
add al 51h +
mov byte ptr [ebp+var_22C] 30h +
mov byte ptr [ebp+var_22C+1] al +
mov [ebp+var_230] 2 +
jmp loc_414FA7  +
test ecx 1000h +
jnz loc_414FB9  +
add edi 4 +
test cl 20h +
jz loc_41518E  +
mov [ebp+var_224] edi +
test cl 40h +
jz loc_415187  +
movsx eax word ptr [edi-4] +
jmp loc_41518B  +
movzx eax word ptr [edi-4] +
cdq   +
jmp loc_4151A1  +
mov eax [edi-4] +
test cl 40h +
jz loc_415199  +
cdq   +
jmp loc_41519B  +
xor edx edx +
mov [ebp+var_224] edi +
test cl 40h +
jz loc_4151C1  +
cmp edx esi +
jg loc_4151C1  +
jl loc_4151B0  +
cmp eax esi +
jnb loc_4151C1  +
neg eax  +
adc edx 0 +
neg edx  +
or [ebp+var_210] 100h +
test [ebp+var_210] 9000h +
mov ebx edx +
mov edi eax +
jnz loc_4151D3  +
xor ebx ebx +
cmp [ebp+var_218] 0 +
jge loc_4151E8  +
mov [ebp+var_218] 1 +
jmp loc_415202  +
and [ebp+var_210] 0FFFFFFF7h +
mov eax 200h +
cmp [ebp+var_218] eax +
jle loc_415202  +
mov [ebp+var_218] eax +
mov eax edi +
or eax ebx +
jnz loc_41520E  +
and [ebp+var_230] eax +
lea esi [ebp+var_D] +
mov eax [ebp+var_218] +
dec [ebp+var_218]  +
test eax eax +
jg loc_415227  +
mov eax edi +
or eax ebx +
jz loc_415254  +
mov eax [ebp+var_220] +
cdq   +
push edx  +
push eax  +
push ebx  +
push edi  +
call sub_418D70  +
add ecx 30h +
cmp ecx 39h +
mov [ebp+var_260] ebx +
mov edi eax +
mov ebx edx +
jle loc_41524F  +
add ecx [ebp+var_248] +
mov [esi] cl +
dec esi  +
jmp loc_415211  +
lea eax [ebp+var_D] +
sub eax esi +
inc esi  +
test [ebp+var_210] 200h +
mov [ebp+var_220] eax +
mov [ebp+var_21C] esi +
jz loc_4152D3  +
test eax eax +
jz loc_41527D  +
mov ecx esi +
cmp byte ptr [ecx] 30h +
jz loc_4152D3  +
dec [ebp+var_21C]  +
mov ecx [ebp+var_21C] +
mov byte ptr [ecx] 30h +
inc eax  +
jmp loc_4152CD  +
dec ecx  +
cmp [eax] si +
jz loc_41529B  +
inc eax  +
inc eax  +
cmp ecx esi +
jnz loc_41528F  +
sub eax [ebp+var_21C] +
sar eax 1 +
jmp loc_4152CD  +
cmp edi esi +
jnz loc_4152B4  +
mov eax off_41E9D0 +
mov [ebp+var_21C] eax +
mov eax [ebp+var_21C] +
jmp loc_4152C3  +
dec ecx  +
cmp byte ptr [eax] 0 +
jz loc_4152C7  +
inc eax  +
cmp ecx esi +
jnz loc_4152BC  +
sub eax [ebp+var_21C] +
mov [ebp+var_220] eax +
cmp [ebp+var_240] 0 +
jnz loc_41543C  +
mov eax [ebp+var_210] +
test al 40h +
jz loc_41531C  +
test eax 100h +
jz loc_4152FA  +
mov byte ptr [ebp+var_22C] 2Dh +
jmp loc_415312  +
test al 1 +
jz loc_415307  +
mov byte ptr [ebp+var_22C] 2Bh +
jmp loc_415312  +
test al 2 +
jz loc_41531C  +
mov byte ptr [ebp+var_22C] 20h +
mov [ebp+var_230] 1 +
mov ebx [ebp+var_234] +
sub ebx [ebp+var_220] +
sub ebx [ebp+var_230] +
test byte ptr [ebp+var_210] 0Ch +
jnz loc_41534E  +
push [ebp+var_24C]  +
lea eax [ebp+var_228] +
push ebx  +
push 20h  +
call sub_4148B1  +
add esp 0Ch +
push [ebp+var_230]  +
mov edi [ebp+var_24C] +
lea eax [ebp+var_228] +
lea ecx [ebp+var_22C] +
call sub_4148DC  +
test byte ptr [ebp+var_210] 8 +
pop ecx  +
jz loc_415390  +
test byte ptr [ebp+var_210] 4 +
jnz loc_415390  +
push edi  +
push ebx  +
push 30h  +
lea eax [ebp+var_228] +
call sub_4148B1  +
add esp 0Ch +
cmp [ebp+var_238] 0 +
mov eax [ebp+var_220] +
jz loc_415405  +
test eax eax +
jle loc_415405  +
mov esi [ebp+var_21C] +
mov [ebp+var_260] eax +
movzx eax word ptr [esi] +
dec [ebp+var_260]  +
push eax  +
push 6  +
lea eax [ebp+var_D+1] +
push eax  +
lea eax [ebp+var_268] +
inc esi  +
push eax  +
inc esi  +
call sub_418D49  +
add esp 10h +
test eax eax +
jnz loc_4153FC  +
cmp [ebp+var_268] eax +
jz loc_4153FC  +
push [ebp+var_268]  +
lea eax [ebp+var_228] +
lea ecx [ebp+var_D+1] +
call sub_4148DC  +
cmp [ebp+var_260] 0 +
pop ecx  +
jnz loc_4153AF  +
jmp loc_415418  +
or [ebp+var_228] 0FFFFFFFFh +
jmp loc_415418  +
mov ecx [ebp+var_21C] +
push eax  +
lea eax [ebp+var_228] +
call sub_4148DC  +
pop ecx  +
cmp [ebp+var_228] 0 +
jl loc_41543C  +
test byte ptr [ebp+var_210] 4 +
jz loc_41543C  +
push edi  +
push ebx  +
push 20h  +
lea eax [ebp+var_228] +
call sub_4148B1  +
add esp 0Ch +
cmp [ebp+var_244] 0 +
jz loc_415458  +
push [ebp+var_244]  +
call sub_40FFD7  +
and [ebp+var_244] 0 +
pop ecx  +
mov ebx [ebp+var_23C] +
mov al [ebx] +
mov [ebp+var_211] al +
test al al +
jz loc_41547D  +
mov ecx [ebp+var_26C] +
mov edi [ebp+var_224] +
mov dl al +
jmp loc_414A5E  +
cmp [ebp+var_250] 0 +
jz loc_415490  +
mov eax [ebp+var_254] +
and dword ptr [eax+70h] 0FFFFFFFDh +
mov eax [ebp+var_228] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 0FFFFh +
sub esp 14h +
cmp [ebp+SrcStr] ax +
jnz loc_4154E4  +
and dword ptr [ebp+CharType] 0 +
jmp loc_415549  +
mov eax 100h +
cmp [ebp+SrcStr] ax +
jnb loc_415509  +
movzx eax [ebp+SrcStr] +
mov ecx off_41EA14 +
mov ax [ecx+eax*2] +
and ax [ebp+arg_4] +
movzx eax ax +
mov dword ptr [ebp+CharType] eax +
jmp loc_415549  +
push [ebp+arg_8]  +
lea ecx [ebp+var_14] +
call sub_41006A  +
mov eax [ebp+var_14] +
push dword ptr [eax+14h]  +
push dword ptr [eax+4]  +
lea eax [ebp+CharType] +
push eax  +
push 1  +
lea eax [ebp+SrcStr] +
push eax  +
lea eax [ebp+var_14] +
push 1  +
push eax  +
call sub_418E0A  +
add esp 1Ch +
test eax eax +
jnz loc_41553C  +
and dword ptr [ebp+CharType] eax +
cmp [ebp+var_8] 0 +
jz loc_415549  +
mov eax [ebp+var_C] +
and dword ptr [eax+70h] 0FFFFFFFDh +
movzx eax [ebp+CharType] +
movzx ecx [ebp+arg_4] +
and eax ecx +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
mov eax 0FFFFh +
cmp [ebp+SrcStr] ax +
jnz loc_41556F  +
xor eax eax +
leave   +
retn   +
mov eax 100h +
cmp [ebp+SrcStr] ax +
jnb loc_415590  +
movzx eax [ebp+SrcStr] +
mov ecx off_41EA14 +
movzx eax word ptr [ecx+eax*2] +
movzx ecx [ebp+arg_4] +
and eax ecx +
leave   +
retn   +
cmp dword_41F838 0 +
jnz loc_4155BE  +
push dword_41E8FC  +
lea eax [ebp+CharType] +
push dword_41E8EC  +
push eax  +
push 1  +
lea eax [ebp+SrcStr] +
push eax  +
push 1  +
push offset off_41E9C8  +
call sub_418E0A  +
add esp 1Ch +
push 0  +
push dword ptr [ebp+arg_4]  +
push dword ptr [ebp+SrcStr]  +
call sub_4154CB  +
add esp 0Ch +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
test eax eax +
jz loc_4155F3  +
sub eax 8 +
cmp dword ptr [eax] 0DDDDh +
jnz loc_4155F3  +
push eax  +
call sub_40FFD7  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov esi ecx +
cmp dword_41F864 ebx +
jnz loc_415653  +
push ebx  +
push ebx  +
xor edi edi +
inc edi  +
push edi  +
push offset SrcStr  +
push 100h  +
push ebx  +
call ds:LCMapStringW  +
test eax eax +
jz loc_41563E  +
mov dword_41F864 edi +
jmp loc_415653  +
call ds:GetLastError  +
cmp eax 78h +
jnz loc_415653  +
mov dword_41F864 2 +
cmp [ebp+cchSrc] ebx +
jle loc_41567A  +
mov ecx [ebp+cchSrc] +
mov eax [ebp+lpMultiByteStr] +
dec ecx  +
cmp [eax] bl +
jz loc_41566B  +
inc eax  +
cmp ecx ebx +
jnz loc_41565E  +
or ecx 0FFFFFFFFh +
mov eax [ebp+cchSrc] +
sub eax ecx +
dec eax  +
cmp eax [ebp+cchSrc] +
jge loc_415677  +
inc eax  +
mov [ebp+cchSrc] eax +
mov eax dword_41F864 +
cmp eax 2 +
jz loc_415834  +
cmp eax ebx +
jz loc_415834  +
cmp eax 1 +
jnz loc_415865  +
mov [ebp+cchWideChar] ebx +
cmp [ebp+CodePage] ebx +
jnz loc_4156A9  +
mov eax [esi] +
mov eax [eax+4] +
mov [ebp+CodePage] eax +
mov esi ds:MultiByteToWideChar +
xor eax eax +
cmp [ebp+arg_1C] ebx +
push ebx  +
push ebx  +
push [ebp+cchSrc]  +
setnz al  +
push [ebp+lpMultiByteStr]  +
lea eax ds:1[eax*8] +
push eax  +
push [ebp+CodePage]  +
call esi  +
mov edi eax +
cmp edi ebx +
jz loc_415865  +
jle loc_41571B  +
push 0FFFFFFE0h  +
xor edx edx +
pop eax  +
div  edi +
cmp eax 2 +
jb loc_41571B  +
lea eax [edi+edi+8] +
cmp eax 400h +
ja loc_415702  +
call sub_419060  +
mov eax esp +
cmp eax ebx +
jz loc_415716  +
mov dword ptr [eax] 0CCCCh +
jmp loc_415713  +
push eax  +
call sub_40FEA3  +
pop ecx  +
cmp eax ebx +
jz loc_415716  +
mov dword ptr [eax] 0DDDDh +
add eax 8 +
mov [ebp+lpSrcStr] eax +
jmp loc_41571E  +
mov [ebp+lpSrcStr] ebx +
cmp [ebp+lpSrcStr] ebx +
jz loc_415865  +
push edi  +
push [ebp+lpSrcStr]  +
push [ebp+cchSrc]  +
push [ebp+lpMultiByteStr]  +
push 1  +
push [ebp+CodePage]  +
call esi  +
test eax eax +
jz loc_415823  +
mov esi ds:LCMapStringW +
push ebx  +
push ebx  +
push edi  +
push [ebp+lpSrcStr]  +
push [ebp+dwMapFlags]  +
push [ebp+Locale]  +
call esi  +
mov ecx eax +
mov [ebp+cchWideChar] ecx +
cmp ecx ebx +
jz loc_415823  +
test [ebp+dwMapFlags] 400h +
jz loc_415793  +
cmp [ebp+cchDest] ebx +
jz loc_415823  +
cmp ecx [ebp+cchDest] +
jg loc_415823  +
push [ebp+cchDest]  +
push [ebp+lpDestStr]  +
push edi  +
push [ebp+lpSrcStr]  +
push [ebp+dwMapFlags]  +
push [ebp+Locale]  +
call esi  +
jmp loc_415823  +
cmp ecx ebx +
jle loc_4157DC  +
push 0FFFFFFE0h  +
xor edx edx +
pop eax  +
div  ecx +
cmp eax 2 +
jb loc_4157DC  +
lea eax [ecx+ecx+8] +
cmp eax 400h +
ja loc_4157C4  +
call sub_419060  +
mov esi esp +
cmp esi ebx +
jz loc_415823  +
mov dword ptr [esi] 0CCCCh +
add esi 8 +
jmp loc_4157DE  +
push eax  +
call sub_40FEA3  +
pop ecx  +
cmp eax ebx +
jz loc_4157D8  +
mov dword ptr [eax] 0DDDDh +
add eax 8 +
mov esi eax +
jmp loc_4157DE  +
xor esi esi +
cmp esi ebx +
jz loc_415823  +
push [ebp+cchWideChar]  +
push esi  +
push edi  +
push [ebp+lpSrcStr]  +
push [ebp+dwMapFlags]  +
push [ebp+Locale]  +
call ds:LCMapStringW  +
test eax eax +
jz loc_41581C  +
push ebx  +
push ebx  +
cmp [ebp+cchDest] ebx +
jnz loc_415805  +
push ebx  +
push ebx  +
jmp loc_41580B  +
push [ebp+cchDest]  +
push [ebp+lpDestStr]  +
push [ebp+cchWideChar]  +
push esi  +
push ebx  +
push [ebp+CodePage]  +
call ds:WideCharToMultiByte  +
mov [ebp+cchWideChar] eax +
push esi  +
call sub_4155D5  +
pop ecx  +
push [ebp+lpSrcStr]  +
call sub_4155D5  +
mov eax [ebp+cchWideChar] +
pop ecx  +
jmp loc_41598D  +
mov [ebp+lpSrcStr] ebx +
mov [ebp+var_10] ebx +
cmp [ebp+Locale] ebx +
jnz loc_415847  +
mov eax [esi] +
mov eax [eax+14h] +
mov [ebp+Locale] eax +
cmp [ebp+CodePage] ebx +
jnz loc_415854  +
mov eax [esi] +
mov eax [eax+4] +
mov [ebp+CodePage] eax +
push [ebp+Locale]  +
call sub_418E4D  +
pop ecx  +
mov [ebp+var_14] eax +
cmp eax 0FFFFFFFFh +
jnz loc_41586C  +
xor eax eax +
jmp loc_41598D  +
cmp eax [ebp+CodePage] +
jz loc_415950  +
push ebx  +
push ebx  +
lea ecx [ebp+cchSrc] +
push ecx  +
push [ebp+lpMultiByteStr]  +
push eax  +
push [ebp+CodePage]  +
call sub_418E9B  +
add esp 18h +
mov [ebp+lpSrcStr] eax +
cmp eax ebx +
jz loc_415865  +
mov esi ds:LCMapStringA +
push ebx  +
push ebx  +
push [ebp+cchSrc]  +
push eax  +
push [ebp+dwMapFlags]  +
push [ebp+Locale]  +
call esi  +
mov [ebp+cchWideChar] eax +
cmp eax ebx +
jnz loc_4158B3  +
xor esi esi +
jmp loc_41596A  +
jle loc_4158F2  +
cmp eax 0FFFFFFE0h +
ja loc_4158F2  +
add eax 8 +
cmp eax 400h +
ja loc_4158DA  +
call sub_419060  +
mov edi esp +
cmp edi ebx +
jz loc_4158AC  +
mov dword ptr [edi] 0CCCCh +
add edi 8 +
jmp loc_4158F4  +
push eax  +
call sub_40FEA3  +
pop ecx  +
cmp eax ebx +
jz loc_4158EE  +
mov dword ptr [eax] 0DDDDh +
add eax 8 +
mov edi eax +
jmp loc_4158F4  +
xor edi edi +
cmp edi ebx +
jz loc_4158AC  +
push [ebp+cchWideChar]  +
push ebx  +
push edi  +
call sub_413F70  +
add esp 0Ch +
push [ebp+cchWideChar]  +
push edi  +
push [ebp+cchSrc]  +
push [ebp+lpSrcStr]  +
push [ebp+dwMapFlags]  +
push [ebp+Locale]  +
call esi  +
mov [ebp+cchWideChar] eax +
cmp eax ebx +
jnz loc_415922  +
xor esi esi +
jmp loc_415947  +
push [ebp+cchDest]  +
lea eax [ebp+cchWideChar] +
push [ebp+lpDestStr]  +
push eax  +
push edi  +
push [ebp+CodePage]  +
push [ebp+var_14]  +
call sub_418E9B  +
mov esi eax +
mov [ebp+var_10] esi +
add esp 18h +
neg esi  +
sbb esi esi +
and esi [ebp+cchWideChar] +
push edi  +
call sub_4155D5  +
pop ecx  +
jmp loc_41596A  +
push [ebp+cchDest]  +
push [ebp+lpDestStr]  +
push [ebp+cchSrc]  +
push [ebp+lpMultiByteStr]  +
push [ebp+dwMapFlags]  +
push [ebp+Locale]  +
call ds:LCMapStringA  +
mov esi eax +
cmp [ebp+lpSrcStr] ebx +
jz loc_415978  +
push [ebp+lpSrcStr]  +
call sub_40FFD7  +
pop ecx  +
mov eax [ebp+var_10] +
cmp eax ebx +
jz loc_41598B  +
cmp [ebp+lpDestStr] eax +
jz loc_41598B  +
push eax  +
call sub_40FFD7  +
pop ecx  +
mov eax esi +
lea esp [ebp-20h] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push [ebp+arg_0]  +
lea ecx [ebp+var_10] +
call sub_41006A  +
push [ebp+arg_20]  +
lea ecx [ebp+var_10] +
push [ebp+CodePage]  +
push [ebp+cchDest]  +
push [ebp+lpDestStr]  +
push [ebp+cchSrc]  +
push [ebp+lpMultiByteStr]  +
push [ebp+dwMapFlags]  +
push [ebp+Locale]  +
call sub_4155FA  +
add esp 20h +
cmp [ebp+var_4] 0 +
jz locret_4159E7  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
push ebx  +
push [ebp+arg_8]  +
lea ecx [ebp+var_18] +
call sub_41006A  +
mov ebx [ebp+arg_0] +
lea eax [ebx+1] +
cmp eax 100h +
ja loc_415A1E  +
mov eax [ebp+var_18] +
mov eax [eax+0C8h] +
movzx eax word ptr [eax+ebx*2] +
jmp loc_415A93  +
mov [ebp+arg_0] ebx +
sar [ebp+arg_0] 8 +
lea eax [ebp+var_18] +
push eax  +
mov eax [ebp+arg_0] +
and eax 0FFh +
push eax  +
call sub_4109B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_415A4F  +
mov al byte ptr [ebp+arg_0] +
push 2  +
mov [ebp+SrcStr] al +
mov [ebp-7] bl +
mov [ebp+var_6] 0 +
pop ecx  +
jmp loc_415A59  +
xor ecx ecx +
mov [ebp+SrcStr] bl +
mov byte ptr [ebp-7] 0 +
inc ecx  +
mov eax [ebp+var_18] +
push 1  +
push dword ptr [eax+14h]  +
push dword ptr [eax+4]  +
lea eax [ebp+CharType] +
push eax  +
push ecx  +
lea eax [ebp+SrcStr] +
push eax  +
lea eax [ebp+var_18] +
push 1  +
push eax  +
call sub_417698  +
add esp 20h +
test eax eax +
jnz loc_415A8F  +
cmp [ebp+var_C] al +
jz loc_415A8B  +
mov eax [ebp+var_10] +
and dword ptr [eax+70h] 0FFFFFFFDh +
xor eax eax +
jmp loc_415AA3  +
movzx eax [ebp+CharType] +
and eax [ebp+arg_4] +
cmp [ebp+var_C] 0 +
jz loc_415AA3  +
mov ecx [ebp+var_10] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
pop ebx  +
leave   +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
mov esi [ebp+0Ch] +
mov ecx [ebp+10h] +
mov edi [ebp+8] +
mov eax ecx +
mov edx ecx +
add eax esi +
cmp edi esi +
jbe loc_415AD0  +
cmp edi eax +
jb loc_415C74  +
cmp ecx 100h +
jb loc_415AF7  +
cmp dword_420FA4 0 +
jz loc_415AF7  +
push edi  +
push esi  +
and edi 0Fh +
and esi 0Fh +
cmp edi esi +
pop esi  +
pop edi  +
jnz loc_415AF7  +
pop esi  +
pop edi  +
pop ebp  +
jmp sub_417D2B  +
***
test edi 3 +
jnz loc_415B14  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_415B34  +
movs   +
jmp ds:off_415C24[edx*4]  +
mov eax edi +
mov edx 3 +
sub ecx 4 +
jb loc_415B2C  +
and eax 3 +
add ecx eax +
jmp dword ptr ds:(loc_415B34+4)[eax*4]  +
***
jmp ds:dword_415C34[ecx*4]  +
***
jmp ds:off_415BB8[ecx*4]  +
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
add esi 3 +
add edi 3 +
cmp ecx 8 +
jb loc_415B34  +
movs   +
jmp ds:off_415C24[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
add esi 2 +
add edi 2 +
cmp ecx 8 +
jb loc_415B34  +
movs   +
jmp ds:off_415C24[edx*4]  +
***
and edx ecx +
mov al [esi] +
mov [edi] al +
add esi 1 +
shr ecx 2 +
add edi 1 +
cmp ecx 8 +
jb loc_415B34  +
movs   +
jmp ds:off_415C24[edx*4]  +
***
mov eax [esi+ecx*4-1Ch] +
mov [edi+ecx*4-1Ch] eax +
mov eax [esi+ecx*4-18h] +
mov [edi+ecx*4-18h] eax +
mov eax [esi+ecx*4-14h] +
mov [edi+ecx*4-14h] eax +
mov eax [esi+ecx*4-10h] +
mov [edi+ecx*4-10h] eax +
mov eax [esi+ecx*4-0Ch] +
mov [edi+ecx*4-0Ch] eax +
mov eax [esi+ecx*4-8] +
mov [edi+ecx*4-8] eax +
mov eax [esi+ecx*4-4] +
mov [edi+ecx*4-4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
jmp ds:off_415C24[edx*4]  +
***
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi] +
mov [edi] al +
mov al [esi+1] +
mov [edi+1] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
lea esi [ecx+esi-4] +
lea edi [ecx+edi-4] +
test edi 3 +
jnz loc_415CA8  +
shr ecx 2 +
and edx 3 +
cmp ecx 8 +
jb loc_415C9C  +
std   +
movs   +
cld   +
jmp ds:off_415DC0[edx*4]  +
neg ecx  +
jmp ds:off_415D70[ecx*4]  +
mov eax edi +
mov edx 3 +
cmp ecx 4 +
jb loc_415CC0  +
and eax 3 +
sub ecx eax +
jmp dword ptr ds:(loc_415CC0+4)[eax*4]  +
***
jmp ds:off_415DC0[ecx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
sub esi 1 +
shr ecx 2 +
sub edi 1 +
cmp ecx 8 +
jb loc_415C9C  +
std   +
movs   +
cld   +
jmp ds:off_415DC0[edx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
mov al [esi+2] +
shr ecx 2 +
mov [edi+2] al +
sub esi 2 +
sub edi 2 +
cmp ecx 8 +
jb loc_415C9C  +
std   +
movs   +
cld   +
jmp ds:off_415DC0[edx*4]  +
mov al [esi+3] +
and edx ecx +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
shr ecx 2 +
mov [edi+1] al +
sub esi 3 +
sub edi 3 +
cmp ecx 8 +
jb loc_415C9C  +
std   +
movs   +
cld   +
jmp ds:off_415DC0[edx*4]  +
mov eax [esi+ecx*4+1Ch] +
mov [edi+ecx*4+1Ch] eax +
mov eax [esi+ecx*4+18h] +
mov [edi+ecx*4+18h] eax +
mov eax [esi+ecx*4+14h] +
mov [edi+ecx*4+14h] eax +
mov eax [esi+ecx*4+10h] +
mov [edi+ecx*4+10h] eax +
mov eax [esi+ecx*4+0Ch] +
mov [edi+ecx*4+0Ch] eax +
mov eax [esi+ecx*4+8] +
mov [edi+ecx*4+8] eax +
mov eax [esi+ecx*4+4] +
mov [edi+ecx*4+4] eax +
lea eax ds:0[ecx*4] +
add esi eax +
add edi eax +
jmp ds:off_415DC0[edx*4]  +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov al [esi+3] +
mov [edi+3] al +
mov al [esi+2] +
mov [edi+2] al +
mov al [esi+1] +
mov [edi+1] al +
mov eax [ebp+8] +
pop esi  +
pop edi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [eax+0Ch] 40h +
jz loc_415E2B  +
cmp dword ptr [eax+8] 0 +
jz loc_415E45  +
push eax  +
push dword ptr [ebp+WideCharStr]  +
call sub_419091  +
pop ecx  +
pop ecx  +
mov ecx 0FFFFh +
cmp ax cx +
jnz loc_415E45  +
or dword ptr [esi] 0FFFFFFFFh +
pop ebp  +
retn   +
inc dword ptr [esi]  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi eax +
jmp loc_415E6C  +
push [ebp+arg_0]  +
mov eax [ebp+arg_8] +
dec [ebp+arg_4]  +
call sub_415E1A  +
cmp dword ptr [esi] 0FFFFFFFFh +
pop ecx  +
jz loc_415E72  +
cmp [ebp+arg_4] 0 +
jg loc_415E58  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [edi+0Ch] 40h +
push ebx  +
push esi  +
mov esi eax +
mov ebx ecx +
jz loc_415EC2  +
cmp dword ptr [edi+8] 0 +
jnz loc_415EC2  +
mov eax [ebp+arg_0] +
add [esi] eax +
jmp loc_415EC8  +
movzx eax word ptr [ebx] +
dec [ebp+arg_0]  +
push eax  +
mov eax edi +
call sub_415E1A  +
inc ebx  +
inc ebx  +
cmp dword ptr [esi] 0FFFFFFFFh +
pop ecx  +
jnz loc_415EC2  +
call sub_41319D  +
cmp dword ptr [eax] 2Ah +
jnz loc_415EC8  +
push 3Fh  +
mov eax edi +
call sub_415E1A  +
pop ecx  +
cmp [ebp+arg_0] 0 +
jg loc_415E98  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 474h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_0] +
push ebx  +
mov ebx [ebp+arg_C] +
push esi  +
mov esi [ebp+arg_4] +
push edi  +
push [ebp+arg_8]  +
xor edi edi +
lea ecx [ebp+var_458] +
mov [ebp+var_430] eax +
mov [ebp+var_41C] ebx +
mov [ebp+var_448] edi +
mov [ebp+var_408] edi +
mov [ebp+var_42C] edi +
mov [ebp+var_40C] edi +
mov [ebp+var_424] edi +
mov [ebp+var_43C] edi +
mov [ebp+var_428] edi +
call sub_41006A  +
cmp [ebp+var_430] edi +
jnz loc_415F73  +
call sub_41319D  +
push edi  +
push edi  +
push edi  +
push edi  +
mov dword ptr [eax] 16h +
push edi  +
call sub_413F44  +
add esp 14h +
cmp [ebp+var_44C] 0 +
jz loc_415F6B  +
mov eax [ebp+var_450] +
and dword ptr [eax+70h] 0FFFFFFFDh +
or eax 0FFFFFFFFh +
jmp loc_416A37  +
cmp esi edi +
jz loc_415F40  +
movzx edx word ptr [esi] +
xor ecx ecx +
mov [ebp+var_420] edi +
mov [ebp+var_414] edi +
mov [ebp+var_444] edi +
mov [ebp+var_418] edx +
cmp dx di +
jz loc_416A1E  +
push 2  +
pop edi  +
add esi edi +
cmp [ebp+var_420] 0 +
mov [ebp+var_440] esi +
jl loc_416A1E  +
lea eax [edx-20h] +
cmp ax 58h +
ja loc_415FCD  +
movzx eax dx +
movsx eax ds:byte_401B08[eax] +
and eax 0Fh +
jmp loc_415FCF  +
xor eax eax +
movsx eax ds:byte_401B28[ecx+eax*8] +
push 7  +
sar eax 4 +
pop ecx  +
mov [ebp+var_45C] eax +
cmp eax ecx +
ja loc_4169E0  +
jmp ds:off_416A49[eax*4]  +
xor eax eax +
or [ebp+var_40C] 0FFFFFFFFh +
mov [ebp+var_460] eax +
mov [ebp+var_43C] eax +
mov [ebp+var_42C] eax +
mov [ebp+var_424] eax +
mov [ebp+var_408] eax +
mov [ebp+var_428] eax +
jmp loc_4169E0  +
movzx eax dx +
sub eax 20h +
jz loc_416076  +
sub eax 3 +
jz loc_416067  +
sub eax 8 +
jz loc_41605B  +
sub eax edi +
jz loc_41604F  +
sub eax 3 +
jnz loc_4169E0  +
or [ebp+var_408] 8 +
jmp loc_4169E0  +
or [ebp+var_408] 4 +
jmp loc_4169E0  +
or [ebp+var_408] 1 +
jmp loc_4169E0  +
or [ebp+var_408] 80h +
jmp loc_4169E0  +
or [ebp+var_408] edi +
jmp loc_4169E0  +
cmp dx 2Ah +
jnz loc_4160B3  +
add ebx 4 +
mov [ebp+var_41C] ebx +
mov ebx [ebx-4] +
mov [ebp+var_42C] ebx +
test ebx ebx +
jge loc_4169E0  +
or [ebp+var_408] 4 +
neg [ebp+var_42C]  +
jmp loc_4169E0  +
mov eax [ebp+var_42C] +
imul eax eax +
movzx ecx dx +
lea eax [eax+ecx-30h] +
mov [ebp+var_42C] eax +
jmp loc_4169E0  +
and [ebp+var_40C] 0 +
jmp loc_4169E0  +
cmp dx 2Ah +
jnz loc_416106  +
add ebx 4 +
mov [ebp+var_41C] ebx +
mov ebx [ebx-4] +
mov [ebp+var_40C] ebx +
test ebx ebx +
jge loc_4169E0  +
or [ebp+var_40C] 0FFFFFFFFh +
jmp loc_4169E0  +
mov eax [ebp+var_40C] +
imul eax eax +
movzx ecx dx +
lea eax [eax+ecx-30h] +
mov [ebp+var_40C] eax +
jmp loc_4169E0  +
movzx eax dx +
cmp eax 49h +
jz loc_416180  +
cmp eax 68h +
jz loc_416174  +
cmp eax 6Ch +
jz loc_41614B  +
cmp eax 77h +
jnz loc_4169E0  +
or [ebp+var_408] 800h +
jmp loc_4169E0  +
cmp word ptr [esi] 6Ch +
jnz loc_416168  +
add esi edi +
or [ebp+var_408] 1000h +
mov [ebp+var_440] esi +
jmp loc_4169E0  +
or [ebp+var_408] 10h +
jmp loc_4169E0  +
or [ebp+var_408] 20h +
jmp loc_4169E0  +
movzx eax word ptr [esi] +
cmp ax 36h +
jnz loc_4161A8  +
cmp word ptr [esi+2] 34h +
jnz loc_4161A8  +
add esi 4 +
or [ebp+var_408] 8000h +
mov [ebp+var_440] esi +
jmp loc_4169E0  +
cmp ax 33h +
jnz loc_4161CD  +
cmp word ptr [esi+2] 32h +
jnz loc_4161CD  +
add esi 4 +
and [ebp+var_408] 0FFFF7FFFh +
mov [ebp+var_440] esi +
jmp loc_4169E0  +
cmp ax 64h +
jz loc_4169E0  +
cmp ax 69h +
jz loc_4169E0  +
cmp ax 6Fh +
jz loc_4169E0  +
cmp ax 75h +
jz loc_4169E0  +
cmp ax 78h +
jz loc_4169E0  +
cmp ax 58h +
jz loc_4169E0  +
and [ebp+var_45C] 0 +
mov eax [ebp+var_430] +
push edx  +
lea esi [ebp+var_420] +
mov [ebp+var_428] 1 +
call sub_415E1A  +
jmp loc_4169DF  +
movzx eax dx +
cmp eax 64h +
jg loc_41646C  +
jz loc_416503  +
cmp eax 53h +
jg loc_416367  +
jz loc_4162CC  +
sub eax 41h +
jz loc_416263  +
sub eax edi +
jz loc_4162B0  +
sub eax edi +
jz loc_416263  +
sub eax edi +
jnz loc_416852  +
add edx 20h +
mov [ebp+var_460] 1 +
mov [ebp+var_418] edx +
or [ebp+var_408] 40h +
cmp [ebp+var_40C] 0 +
lea esi [ebp+WideCharStr] +
mov eax 200h +
mov [ebp+var_410] esi +
mov [ebp+var_414] eax +
jge loc_416531  +
mov [ebp+var_40C] 6 +
jmp loc_41659C  +
test [ebp+var_408] 830h +
jnz loc_416388  +
or [ebp+var_408] 20h +
jmp loc_416388  +
test [ebp+var_408] 830h +
jnz loc_4162DF  +
or [ebp+var_408] 20h +
mov edi [ebp+var_40C] +
cmp edi 0FFFFFFFFh +
jnz loc_4162EF  +
mov edi 7FFFFFFFh +
add ebx 4 +
test byte ptr [ebp+var_408] 20h +
mov [ebp+var_41C] ebx +
mov ebx [ebx-4] +
mov [ebp+var_410] ebx +
jz loc_416816  +
test ebx ebx +
jnz loc_41631D  +
mov eax off_41E9D0 +
mov [ebp+var_410] eax +
and [ebp+var_414] 0 +
mov esi [ebp+var_410] +
test edi edi +
jle loc_416852  +
mov al [esi] +
test al al +
jz loc_416852  +
lea ecx [ebp+var_458] +
movzx eax al +
push ecx  +
push eax  +
call sub_4109B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_416353  +
inc esi  +
inc esi  +
inc [ebp+var_414]  +
cmp [ebp+var_414] edi +
jl loc_416332  +
jmp loc_416852  +
sub eax 58h +
jz loc_416667  +
sub eax edi +
jz loc_41640C  +
sub eax ecx +
jz loc_416276  +
sub eax edi +
jnz loc_416852  +
movzx eax word ptr [ebx] +
add ebx 4 +
xor esi esi +
inc esi  +
test byte ptr [ebp+var_408] 20h +
mov [ebp+var_428] esi +
mov [ebp+var_41C] ebx +
mov [ebp+var_464] eax +
jz loc_4163EE  +
mov byte ptr [ebp+var_434] al +
lea eax [ebp+var_458] +
push eax  +
mov eax [ebp+var_458] +
mov byte ptr [ebp+var_434+1] 0 +
push dword ptr [eax+0ACh]  +
lea eax [ebp+var_434] +
push eax  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_41921D  +
add esp 10h +
test eax eax +
jge loc_4163F5  +
mov [ebp+var_43C] esi +
jmp loc_4163F5  +
mov [ebp+WideCharStr] ax +
lea eax [ebp+WideCharStr] +
mov [ebp+var_410] eax +
mov [ebp+var_414] esi +
jmp loc_416852  +
mov eax [ebx] +
add ebx 4 +
mov [ebp+var_41C] ebx +
test eax eax +
jz loc_416455  +
mov ecx [eax+4] +
test ecx ecx +
jz loc_416455  +
test [ebp+var_408] 800h +
movsx eax word ptr [eax] +
mov [ebp+var_410] ecx +
jz loc_416449  +
cdq   +
sub eax edx +
mov [ebp+var_428] 1 +
jmp loc_41684A  +
and [ebp+var_428] 0 +
jmp loc_41684C  +
mov eax off_41E9D0 +
mov [ebp+var_410] eax +
push eax  +
call sub_4171B0  +
pop ecx  +
jmp loc_41684C  +
cmp eax 70h +
jg loc_41666F  +
jz loc_41665D  +
cmp eax 65h +
jl loc_416852  +
cmp eax 67h +
jle loc_416276  +
cmp eax 69h +
jz loc_416503  +
cmp eax 6Eh +
jz loc_4164BF  +
cmp eax 6Fh +
jnz loc_416852  +
test byte ptr [ebp+var_408] 80h +
mov [ebp+var_418] 8 +
jz loc_416514  +
or [ebp+var_408] 200h +
jmp loc_416514  +
mov esi [ebx] +
add ebx 4 +
mov [ebp+var_41C] ebx +
call sub_418BBD  +
test eax eax +
jz loc_416A07  +
test byte ptr [ebp+var_408] 20h +
jz loc_4164EC  +
mov ax word ptr [ebp+var_420] +
mov [esi] ax +
jmp loc_4164F4  +
mov eax [ebp+var_420] +
mov [esi] eax +
mov [ebp+var_43C] 1 +
jmp loc_4169C4  +
or [ebp+var_408] 40h +
mov [ebp+var_418] 0Ah +
test [ebp+var_408] 8000h +
jz loc_4166CF  +
mov eax [ebx] +
mov edx [ebx+4] +
add ebx 8 +
jmp loc_416718  +
jnz loc_416545  +
cmp dx 67h +
jnz loc_41659C  +
mov [ebp+var_40C] 1 +
jmp loc_41659C  +
cmp [ebp+var_40C] eax +
jle loc_416553  +
mov [ebp+var_40C] eax +
cmp [ebp+var_40C] 0A3h +
jle loc_41659C  +
mov edi [ebp+var_40C] +
add edi 15Dh +
push edi  +
call sub_414622  +
mov edx [ebp+var_418] +
pop ecx  +
mov [ebp+var_444] eax +
test eax eax +
jz loc_416592  +
mov [ebp+var_410] eax +
mov [ebp+var_414] edi +
mov esi eax +
jmp loc_41659C  +
mov [ebp+var_40C] 0A3h +
mov eax [ebx] +
add ebx 8 +
mov [ebp+var_46C] eax +
mov eax [ebx-4] +
mov [ebp+var_468] eax +
lea eax [ebp+var_458] +
push eax  +
push [ebp+var_460]  +
movsx eax dl +
push [ebp+var_40C]  +
mov [ebp+var_41C] ebx +
push eax  +
push [ebp+var_414]  +
lea eax [ebp+var_46C] +
push esi  +
push eax  +
push off_41E9F8  +
call sub_411C9A  +
pop ecx  +
call eax  +
mov ebx [ebp+var_408] +
add esp 1Ch +
and ebx 80h +
jz loc_41661B  +
cmp [ebp+var_40C] 0 +
jnz loc_41661B  +
lea eax [ebp+var_458] +
push eax  +
push esi  +
push off_41EA04  +
call sub_411C9A  +
pop ecx  +
call eax  +
pop ecx  +
pop ecx  +
cmp word ptr [ebp+var_418] 67h +
jnz loc_416641  +
test ebx ebx +
jnz loc_416641  +
lea eax [ebp+var_458] +
push eax  +
push esi  +
push off_41EA00  +
call sub_411C9A  +
pop ecx  +
call eax  +
pop ecx  +
pop ecx  +
cmp byte ptr [esi] 2Dh +
jnz loc_416657  +
or [ebp+var_408] 100h +
inc esi  +
mov [ebp+var_410] esi +
push esi  +
jmp loc_416461  +
mov [ebp+var_40C] 8 +
mov [ebp+var_448] ecx +
jmp loc_416693  +
sub eax 73h +
jz loc_4162DF  +
sub eax edi +
jz loc_41650A  +
sub eax 3 +
jnz loc_416852  +
mov [ebp+var_448] 27h +
test byte ptr [ebp+var_408] 80h +
mov [ebp+var_418] 10h +
jz loc_416514  +
push 30h  +
pop eax  +
mov word ptr [ebp+var_438] ax +
mov eax [ebp+var_448] +
add eax 51h +
mov word ptr [ebp+var_438+2] ax +
mov [ebp+var_424] edi +
jmp loc_416514  +
test [ebp+var_408] 1000h +
jnz loc_416524  +
add ebx 4 +
test byte ptr [ebp+var_408] 20h +
jz loc_416707  +
test byte ptr [ebp+var_408] 40h +
mov [ebp+var_41C] ebx +
jz loc_416700  +
movsx eax word ptr [ebx-4] +
jmp loc_416704  +
movzx eax word ptr [ebx-4] +
cdq   +
jmp loc_41671E  +
test byte ptr [ebp+var_408] 40h +
mov eax [ebx-4] +
jz loc_416716  +
cdq   +
jmp loc_416718  +
xor edx edx +
mov [ebp+var_41C] ebx +
test byte ptr [ebp+var_408] 40h +
jz loc_416742  +
test edx edx +
jg loc_416742  +
jl loc_416731  +
test eax eax +
jnb loc_416742  +
neg eax  +
adc edx 0 +
neg edx  +
or [ebp+var_408] 100h +
test [ebp+var_408] 9000h +
mov ebx edx +
mov edi eax +
jnz loc_416754  +
xor ebx ebx +
cmp [ebp+var_40C] 0 +
jge loc_416769  +
mov [ebp+var_40C] 1 +
jmp loc_416783  +
and [ebp+var_408] 0FFFFFFF7h +
mov eax 200h +
cmp [ebp+var_40C] eax +
jle loc_416783  +
mov [ebp+var_40C] eax +
mov eax edi +
or eax ebx +
jnz loc_41678F  +
and [ebp+var_424] eax +
lea esi [ebp+var_205] +
mov eax [ebp+var_40C] +
dec [ebp+var_40C]  +
test eax eax +
jg loc_4167AB  +
mov eax edi +
or eax ebx +
jz loc_4167D8  +
mov eax [ebp+var_418] +
cdq   +
push edx  +
push eax  +
push ebx  +
push edi  +
call sub_418D70  +
add ecx 30h +
cmp ecx 39h +
mov [ebp+var_470] ebx +
mov edi eax +
mov ebx edx +
jle loc_4167D3  +
add ecx [ebp+var_448] +
mov [esi] cl +
dec esi  +
jmp loc_416795  +
lea eax [ebp+var_205] +
sub eax esi +
inc esi  +
test [ebp+var_408] 200h +
mov [ebp+var_414] eax +
mov [ebp+var_410] esi +
jz loc_416852  +
test eax eax +
jz loc_416804  +
mov ecx esi +
cmp byte ptr [ecx] 30h +
jz loc_416852  +
dec [ebp+var_410]  +
mov ecx [ebp+var_410] +
mov byte ptr [ecx] 30h +
inc eax  +
jmp loc_41684C  +
test ebx ebx +
jnz loc_416825  +
mov eax off_41E9D4 +
mov [ebp+var_410] eax +
mov eax [ebp+var_410] +
mov [ebp+var_428] 1 +
jmp loc_416840  +
dec edi  +
cmp word ptr [eax] 0 +
jz loc_416844  +
inc eax  +
inc eax  +
test edi edi +
jnz loc_416837  +
sub eax [ebp+var_410] +
sar eax 1 +
mov [ebp+var_414] eax +
cmp [ebp+var_43C] 0 +
jnz loc_4169C4  +
mov eax [ebp+var_408] +
test al 40h +
jz loc_416894  +
test eax 100h +
jz loc_416874  +
push 2Dh  +
jmp loc_416882  +
test al 1 +
jz loc_41687C  +
push 2Bh  +
jmp loc_416882  +
test al 2 +
jz loc_416894  +
push 20h  +
pop eax  +
mov word ptr [ebp+var_438] ax +
mov [ebp+var_424] 1 +
mov ebx [ebp+var_42C] +
mov esi [ebp+var_414] +
sub ebx esi +
sub ebx [ebp+var_424] +
test byte ptr [ebp+var_408] 0Ch +
jnz loc_4168C8  +
push [ebp+var_430]  +
lea eax [ebp+var_420] +
push ebx  +
push 20h  +
call sub_415E4E  +
add esp 0Ch +
push [ebp+var_424]  +
mov edi [ebp+var_430] +
lea eax [ebp+var_420] +
lea ecx [ebp+var_438] +
call sub_415E7A  +
test byte ptr [ebp+var_408] 8 +
pop ecx  +
jz loc_41690A  +
test byte ptr [ebp+var_408] 4 +
jnz loc_41690A  +
push edi  +
push ebx  +
push 30h  +
lea eax [ebp+var_420] +
call sub_415E4E  +
add esp 0Ch +
cmp [ebp+var_428] 0 +
jnz loc_416988  +
test esi esi +
jle loc_416988  +
mov edi [ebp+var_410] +
mov [ebp+var_418] esi +
dec [ebp+var_418]  +
lea eax [ebp+var_458] +
push eax  +
mov eax [ebp+var_458] +
push dword ptr [eax+0ACh]  +
lea eax [ebp+var_464] +
push edi  +
push eax  +
call sub_41921D  +
add esp 10h +
mov [ebp+var_470] eax +
test eax eax +
jle loc_41697F  +
push [ebp+var_464]  +
mov eax [ebp+var_430] +
lea esi [ebp+var_420] +
call sub_415E1A  +
add edi [ebp+var_470] +
cmp [ebp+var_418] 0 +
pop ecx  +
jg loc_416923  +
jmp loc_41699B  +
or [ebp+var_420] 0FFFFFFFFh +
jmp loc_41699B  +
mov ecx [ebp+var_410] +
push esi  +
lea eax [ebp+var_420] +
call sub_415E7A  +
pop ecx  +
cmp [ebp+var_420] 0 +
jl loc_4169C4  +
test byte ptr [ebp+var_408] 4 +
jz loc_4169C4  +
push [ebp+var_430]  +
lea eax [ebp+var_420] +
push ebx  +
push 20h  +
call sub_415E4E  +
add esp 0Ch +
cmp [ebp+var_444] 0 +
jz loc_4169E0  +
push [ebp+var_444]  +
call sub_40FFD7  +
and [ebp+var_444] 0 +
pop ecx  +
mov esi [ebp+var_440] +
movzx eax word ptr [esi] +
mov [ebp+var_418] eax +
test ax ax +
jz loc_416A1E  +
mov ecx [ebp+var_45C] +
mov ebx [ebp+var_41C] +
mov edx eax +
jmp loc_415F9D  +
call sub_41319D  +
mov dword ptr [eax] 16h +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
jmp loc_415F50  +
cmp [ebp+var_44C] 0 +
jz loc_416A31  +
mov eax [ebp+var_450] +
and dword ptr [eax+70h] 0FFFFFFFDh +
mov eax [ebp+var_420] +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn   +
***
call sub_412220  +
call sub_411F04  +
mov eax [eax+78h] +
test eax eax +
jz loc_416A9C  +
and dword ptr [ebp-4] 0 +
call eax  +
jmp loc_416A95  +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
mov dword ptr [ebp-4] 0FFFFFFFEh +
call loc_419358  +
call sub_412265  +
retn   +
***
pop ecx  +
mov dword_41F868 eax +
retn   +
***
mov edi edi +
push esi  +
push edi  +
xor edi edi +
lea esi off_41E9E0[edi] +
push dword ptr [esi]  +
call sub_411C15  +
add edi 4 +
pop ecx  +
mov [esi] eax +
cmp edi 28h +
jb loc_416AC8  +
pop edi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
mov eax 5A4Dh +
cmp [ecx] ax +
jz loc_416B06  +
xor eax eax +
pop ebp  +
retn   +
mov eax [ecx+3Ch] +
add eax ecx +
cmp dword ptr [eax] 4550h +
jnz loc_416B02  +
xor edx edx +
mov ecx 10Bh +
cmp [eax+18h] cx +
setz dl  +
mov eax edx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx [eax+3Ch] +
add ecx eax +
movzx eax word ptr [ecx+14h] +
push ebx  +
push esi  +
movzx esi word ptr [ecx+6] +
xor edx edx +
push edi  +
lea eax [eax+ecx+18h] +
test esi esi +
jbe loc_416B6D  +
mov edi [ebp+arg_4] +
mov ecx [eax+0Ch] +
cmp edi ecx +
jb loc_416B65  +
mov ebx [eax+8] +
add ebx ecx +
cmp edi ebx +
jb loc_416B6F  +
inc edx  +
add eax 28h +
cmp edx esi +
jb loc_416B55  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0FFFFFFFEh  +
push offset dword_41BE28  +
push offset loc_412280  +
mov eax large fs:0 +
push eax  +
sub esp 8 +
push ebx  +
push esi  +
push edi  +
mov eax dword_41E3B0 +
xor [ebp+var_8] eax +
xor eax ebp +
push eax  +
lea eax [ebp+var_10] +
mov large fs:0 eax +
mov [ebp+var_18] esp +
mov [ebp+var_4] 0 +
push 400000h  +
call sub_416AF0  +
add esp 4 +
test eax eax +
jz loc_416C22  +
mov eax [ebp+arg_0] +
sub eax 400000h +
push eax  +
push 400000h  +
call sub_416B30  +
add esp 8 +
test eax eax +
jz loc_416C22  +
mov eax [eax+24h] +
shr eax 1Fh +
not eax  +
and eax 1 +
mov [ebp+var_4] 0FFFFFFFEh +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
mov eax [ebp-14h] +
mov ecx [eax] +
mov eax [ecx] +
xor edx edx +
cmp eax 0C0000005h +
setz dl  +
mov eax edx +
retn   +
mov esp [ebp-18h] +
mov [ebp+var_4] 0FFFFFFFEh +
xor eax eax +
mov ecx [ebp+var_10] +
mov large fs:0 ecx +
pop ecx  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov dword_41F86C eax +
mov dword_41F870 eax +
mov dword_41F874 eax +
mov dword_41F878 eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx dword_41E0CC +
push esi  +
cmp [eax+4] edx +
jz loc_416C88  +
mov esi ecx +
imul esi esi +
add esi [ebp+arg_0] +
add eax 0Ch +
cmp eax esi +
jb loc_416C74  +
imul ecx ecx +
add ecx [ebp+arg_0] +
pop esi  +
cmp eax ecx +
jnb loc_416C98  +
cmp [eax+4] edx +
jz loc_416C9A  +
xor eax eax +
pop ebp  +
retn   +
***
pop ecx  +
retn   +
***
call sub_412220  +
cmp dword ptr [ebp-1Ch] 0 +
pop ecx  +
cmp ebx 8 +
jz loc_416E4A  +
cmp ebx 0Bh +
jz loc_416E4A  +
cmp ebx 4 +
jnz loc_416E5B  +
mov eax [ebp-2Ch] +
mov [edi+60h] eax +
cmp ebx 8 +
jnz loc_416E5B  +
mov eax [ebp-30h] +
mov [edi+64h] eax +
xor eax eax +
***
call sub_412265  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov dword_41F880 eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov dword_41F88C eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov dword_41F890 eax +
pop ebp  +
retn   +
***
call sub_412220  +
and dword ptr [ebp-4] 0 +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
call ds:InitializeCriticalSectionAndSpinCount  +
mov [ebp-1Ch] eax +
jmp loc_416EF4  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
mov [ebp-20h] eax +
xor ecx ecx +
cmp eax 0C0000017h +
setz cl  +
mov eax ecx +
retn   +
mov esp [ebp-18h] +
cmp dword ptr [ebp-20h] 0C0000017h +
jnz loc_416EF0  +
push 8  +
call ds:SetLastError  +
and dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-1Ch] +
call sub_412265  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push ebx  +
push esi  +
push edi  +
call sub_411C8C  +
and [ebp+var_4] 0 +
cmp dword_41F894 0 +
mov ebx eax +
jnz loc_416FBA  +
push offset aUser32_dll  +
call ds:LoadLibraryA  +
mov edi eax +
test edi edi +
jz loc_41706B  +
mov esi ds:GetProcAddress +
push offset aMessageboxa  +
push edi  +
call esi  +
test eax eax +
jz loc_41706B  +
push eax  +
call sub_411C15  +
mov [esp+24h+var_24] offset aGetactivewindo +
push edi  +
mov dword_41F894 eax +
call esi  +
push eax  +
call sub_411C15  +
mov [esp+24h+var_24] offset aGetlastactivep +
push edi  +
mov dword_41F898 eax +
call esi  +
push eax  +
call sub_411C15  +
mov [esp+24h+var_24] offset aGetuserobjecti +
push edi  +
mov dword_41F89C eax +
call esi  +
push eax  +
call sub_411C15  +
pop ecx  +
mov dword_41F8A4 eax +
test eax eax +
jz loc_416FBA  +
push offset aGetprocesswind  +
push edi  +
call esi  +
push eax  +
call sub_411C15  +
pop ecx  +
mov dword_41F8A0 eax +
mov eax dword_41F8A0 +
cmp eax ebx +
jz loc_417012  +
cmp dword_41F8A4 ebx +
jz loc_417012  +
push eax  +
call sub_411C9A  +
push dword_41F8A4  +
mov esi eax +
call sub_411C9A  +
pop ecx  +
pop ecx  +
mov edi eax +
test esi esi +
jz loc_417012  +
test edi edi +
jz loc_417012  +
call esi  +
test eax eax +
jz loc_417009  +
lea ecx [ebp+var_8] +
push ecx  +
push 0Ch  +
lea ecx [ebp+var_14] +
push ecx  +
push 1  +
push eax  +
call edi  +
test eax eax +
jz loc_417009  +
test [ebp+var_C] 1 +
jnz loc_417012  +
or [ebp+arg_8] 200000h +
jmp loc_41704B  +
mov eax dword_41F898 +
cmp eax ebx +
jz loc_41704B  +
push eax  +
call sub_411C9A  +
pop ecx  +
test eax eax +
jz loc_41704B  +
call eax  +
mov [ebp+var_4] eax +
test eax eax +
jz loc_41704B  +
mov eax dword_41F89C +
cmp eax ebx +
jz loc_41704B  +
push eax  +
call sub_411C9A  +
pop ecx  +
test eax eax +
jz loc_41704B  +
push [ebp+var_4]  +
call eax  +
mov [ebp+var_4] eax +
push dword_41F894  +
call sub_411C9A  +
pop ecx  +
test eax eax +
jz loc_41706B  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
push [ebp+var_4]  +
call eax  +
jmp loc_41706D  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp eax ebx +
jz loc_41708F  +
mov edi [ebp+arg_4] +
cmp edi ebx +
ja loc_4170AA  +
call sub_41319D  +
push 16h  +
pop esi  +
mov [eax] esi +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call sub_413F44  +
add esp 14h +
mov eax esi +
jmp loc_4170E6  +
mov esi [ebp+arg_8] +
cmp esi ebx +
jnz loc_4170B5  +
mov [eax] bl +
jmp loc_41708F  +
mov edx eax +
cmp [edx] bl +
jz loc_4170BF  +
inc edx  +
dec edi  +
jnz loc_4170B7  +
cmp edi ebx +
jz loc_4170B1  +
mov cl [esi] +
mov [edx] cl +
inc edx  +
inc esi  +
cmp cl bl +
jz loc_4170D0  +
dec edi  +
jnz loc_4170C3  +
cmp edi ebx +
jnz loc_4170E4  +
mov [eax] bl +
call sub_41319D  +
push 22h  +
pop ecx  +
mov [eax] ecx +
mov esi ecx +
jmp loc_417099  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
xor ebx ebx +
push edi  +
cmp [ebp+arg_C] ebx +
jnz loc_417112  +
cmp esi ebx +
jnz loc_417116  +
cmp [ebp+arg_4] ebx +
jnz loc_41711D  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
cmp esi ebx +
jz loc_41711D  +
mov edi [ebp+arg_4] +
cmp edi ebx +
ja loc_417138  +
call sub_41319D  +
push 16h  +
pop esi  +
mov [eax] esi +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call sub_413F44  +
add esp 14h +
mov eax esi +
jmp loc_41710D  +
cmp [ebp+arg_C] ebx +
jnz loc_417141  +
mov [esi] bl +
jmp loc_41710B  +
mov edx [ebp+arg_8] +
cmp edx ebx +
jnz loc_41714C  +
mov [esi] bl +
jmp loc_41711D  +
cmp [ebp+arg_C] 0FFFFFFFFh +
mov eax esi +
jnz loc_417163  +
mov cl [edx] +
mov [eax] cl +
inc eax  +
inc edx  +
cmp cl bl +
jz loc_41717C  +
dec edi  +
jnz loc_417154  +
jmp loc_41717C  +
mov cl [edx] +
mov [eax] cl +
inc eax  +
inc edx  +
cmp cl bl +
jz loc_417175  +
dec edi  +
jz loc_417175  +
dec [ebp+arg_C]  +
jnz loc_417163  +
cmp [ebp+arg_C] ebx +
jnz loc_41717C  +
mov [eax] bl +
cmp edi ebx +
jnz loc_41710B  +
cmp [ebp+arg_C] 0FFFFFFFFh +
jnz loc_417195  +
mov eax [ebp+arg_4] +
push 50h  +
mov [esi+eax-1] bl +
pop eax  +
jmp loc_41710D  +
mov [esi] bl +
call sub_41319D  +
push 22h  +
pop ecx  +
mov [eax] ecx +
mov esi ecx +
jmp loc_417127  +
***
mov ecx [esp+arg_0] +
test ecx 3 +
jz loc_4171E0  +
mov al [ecx] +
add ecx 1 +
test al al +
jz loc_417213  +
test ecx 3 +
jnz loc_4171BC  +
add eax 0 +
lea esp [esp+0] +
lea esp [esp+0] +
mov eax [ecx] +
mov edx 7EFEFEFFh +
add edx eax +
xor eax 0FFFFFFFFh +
xor eax edx +
add ecx 4 +
test eax 81010100h +
jz loc_4171E0  +
mov eax [ecx-4] +
test al al +
jz loc_417231  +
test ah ah +
jz loc_417227  +
test eax 0FF0000h +
jz loc_41721D  +
test eax 0FF000000h +
jz loc_417213  +
jmp loc_4171E0  +
lea eax [ecx-1] +
mov ecx [esp+arg_0] +
sub eax ecx +
retn   +
lea eax [ecx-2] +
mov ecx [esp+arg_0] +
sub eax ecx +
retn   +
lea eax [ecx-3] +
mov ecx [esp+arg_0] +
sub eax ecx +
retn   +
lea eax [ecx-4] +
mov ecx [esp+arg_0] +
sub eax ecx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ebx  +
xor ebx ebx +
push esi  +
push edi  +
cmp ecx ebx +
jz loc_417258  +
mov edi [ebp+arg_4] +
cmp edi ebx +
ja loc_417273  +
call sub_41319D  +
push 16h  +
pop esi  +
mov [eax] esi +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
call sub_413F44  +
add esp 14h +
mov eax esi +
jmp loc_4172A3  +
mov esi [ebp+arg_8] +
cmp esi ebx +
jnz loc_41727E  +
mov [ecx] bl +
jmp loc_417258  +
mov edx ecx +
mov al [esi] +
mov [edx] al +
inc edx  +
inc esi  +
cmp al bl +
jz loc_41728D  +
dec edi  +
jnz loc_417280  +
cmp edi ebx +
jnz loc_4172A1  +
mov [ecx] bl +
call sub_41319D  +
push 22h  +
pop ecx  +
mov [eax] ecx +
mov esi ecx +
jmp loc_417262  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push esi  +
xor esi esi +
cmp ecx esi +
jl loc_4172DA  +
cmp ecx 2 +
jle loc_4172CD  +
cmp ecx 3 +
jnz loc_4172DA  +
mov eax dword_41EF28 +
jmp loc_4172F5  +
mov eax dword_41EF28 +
mov dword_41EF28 ecx +
jmp loc_4172F5  +
call sub_41319D  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov dword ptr [eax] 16h +
call sub_413F44  +
add esp 14h +
or eax 0FFFFFFFFh +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push [ebp+arg_0]  +
lea ecx [ebp+var_10] +
call sub_41006A  +
movzx eax [ebp+arg_4] +
mov ecx [ebp+var_C] +
mov dl [ebp+arg_C] +
test [ecx+eax+1Dh] dl +
jnz loc_41733E  +
cmp [ebp+arg_8] 0 +
jz loc_417338  +
mov ecx [ebp+var_10] +
mov ecx [ecx+0C8h] +
movzx eax word ptr [ecx+eax*2] +
and eax [ebp+arg_8] +
jmp loc_41733A  +
xor eax eax +
test eax eax +
jz loc_417341  +
xor eax eax +
inc eax  +
cmp [ebp+var_4] 0 +
jz locret_41734E  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 4  +
push 0  +
push [ebp+arg_0]  +
push 0  +
call sub_4172FD  +
add esp 10h +
pop ebp  +
retn   +
***
push edi  +
mov ecx [esp+arg_0] +
test dword ptr [ecx+4] 6 +
mov eax 1 +
jz locret_417449  +
mov eax [esp+arg_4] +
mov ecx [eax+8] +
xor ecx eax +
call sub_40FFC3  +
push ebp  +
mov ebp [eax+18h] +
push dword ptr [eax+0Ch]  +
push dword ptr [eax+10h]  +
push dword ptr [eax+14h]  +
call sub_417374  +
add esp 0Ch +
pop ebp  +
mov eax [esp+arg_4] +
mov edx [esp+arg_C] +
mov [edx] eax +
mov eax 3 +
retn   +
***
push edi  +
mov ebp edx +
push ebx  +
push edx  +
push ecx  +
push [esp+8+arg_4]  +
call sub_417374  +
add esp 0Ch +
pop ebp  +
retn 8  +
***
and dword_420FA8 0 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax dword_41F8A8 +
push ebx  +
push esi  +
xor ebx ebx +
push edi  +
mov edi ecx +
cmp eax ebx +
jnz loc_417534  +
lea eax [ebp+CharType] +
push eax  +
xor esi esi +
inc esi  +
push esi  +
push offset SrcStr  +
push esi  +
call ds:GetStringTypeW  +
test eax eax +
jz loc_41751A  +
mov dword_41F8A8 esi +
jmp loc_41754E  +
call ds:GetLastError  +
cmp eax 78h +
jnz loc_41752F  +
push 2  +
pop eax  +
mov dword_41F8A8 eax +
jmp loc_417534  +
mov eax dword_41F8A8 +
cmp eax 2 +
jz loc_41760C  +
cmp eax ebx +
jz loc_41760C  +
cmp eax 1 +
jnz loc_417636  +
mov dword ptr [ebp+CharType] ebx +
cmp [ebp+CodePage] ebx +
jnz loc_41755E  +
mov eax [edi] +
mov eax [eax+4] +
mov [ebp+CodePage] eax +
mov esi ds:MultiByteToWideChar +
xor eax eax +
cmp [ebp+arg_18] ebx +
push ebx  +
push ebx  +
push [ebp+cchSrc]  +
setnz al  +
push [ebp+lpSrcStr]  +
lea eax ds:1[eax*8] +
push eax  +
push [ebp+CodePage]  +
call esi  +
mov edi eax +
cmp edi ebx +
jz loc_417636  +
jle loc_4175C9  +
cmp edi 7FFFFFF0h +
ja loc_4175C9  +
lea eax [edi+edi+8] +
cmp eax 400h +
ja loc_4175B3  +
call sub_419060  +
mov eax esp +
cmp eax ebx +
jz loc_4175C7  +
mov dword ptr [eax] 0CCCCh +
jmp loc_4175C4  +
push eax  +
call sub_40FEA3  +
pop ecx  +
cmp eax ebx +
jz loc_4175C7  +
mov dword ptr [eax] 0DDDDh +
add eax 8 +
mov ebx eax +
test ebx ebx +
jz loc_417636  +
lea eax [edi+edi] +
push eax  +
push 0  +
push ebx  +
call sub_413F70  +
add esp 0Ch +
push edi  +
push ebx  +
push [ebp+cchSrc]  +
push [ebp+lpSrcStr]  +
push 1  +
push [ebp+CodePage]  +
call esi  +
test eax eax +
jz loc_417600  +
push [ebp+lpCharType]  +
push eax  +
push ebx  +
push [ebp+dwInfoType]  +
call ds:GetStringTypeW  +
mov dword ptr [ebp+CharType] eax +
push ebx  +
call sub_4155D5  +
mov eax dword ptr [ebp+CharType] +
pop ecx  +
jmp loc_417681  +
xor esi esi +
cmp [ebp+Locale] ebx +
jnz loc_41761B  +
mov eax [edi] +
mov eax [eax+14h] +
mov [ebp+Locale] eax +
cmp [ebp+CodePage] ebx +
jnz loc_417628  +
mov eax [edi] +
mov eax [eax+4] +
mov [ebp+CodePage] eax +
push [ebp+Locale]  +
call sub_418E4D  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jnz loc_41763A  +
xor eax eax +
jmp loc_417681  +
cmp eax [ebp+CodePage] +
jz loc_41765D  +
push ebx  +
push ebx  +
lea ecx [ebp+cchSrc] +
push ecx  +
push [ebp+lpSrcStr]  +
push eax  +
push [ebp+CodePage]  +
call sub_418E9B  +
mov esi eax +
add esp 18h +
cmp esi ebx +
jz loc_417636  +
mov [ebp+lpSrcStr] esi +
push [ebp+lpCharType]  +
push [ebp+cchSrc]  +
push [ebp+lpSrcStr]  +
push [ebp+dwInfoType]  +
push [ebp+Locale]  +
call ds:GetStringTypeA  +
mov edi eax +
cmp esi ebx +
jz loc_41767F  +
push esi  +
call sub_40FFD7  +
pop ecx  +
mov eax edi +
lea esp [ebp-14h] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push [ebp+arg_0]  +
lea ecx [ebp+var_10] +
call sub_41006A  +
push [ebp+arg_1C]  +
lea ecx [ebp+var_10] +
push [ebp+Locale]  +
push [ebp+CodePage]  +
push [ebp+lpCharType]  +
push [ebp+cchSrc]  +
push [ebp+lpSrcStr]  +
push [ebp+dwInfoType]  +
call sub_4174D9  +
add esp 1Ch +
cmp [ebp+var_4] 0 +
jz locret_4176D8  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_417871  +
push dword ptr [esi+4]  +
call sub_40FFD7  +
push dword ptr [esi+8]  +
call sub_40FFD7  +
push dword ptr [esi+0Ch]  +
call sub_40FFD7  +
push dword ptr [esi+10h]  +
call sub_40FFD7  +
push dword ptr [esi+14h]  +
call sub_40FFD7  +
push dword ptr [esi+18h]  +
call sub_40FFD7  +
push dword ptr [esi]  +
call sub_40FFD7  +
push dword ptr [esi+20h]  +
call sub_40FFD7  +
push dword ptr [esi+24h]  +
call sub_40FFD7  +
push dword ptr [esi+28h]  +
call sub_40FFD7  +
push dword ptr [esi+2Ch]  +
call sub_40FFD7  +
push dword ptr [esi+30h]  +
call sub_40FFD7  +
push dword ptr [esi+34h]  +
call sub_40FFD7  +
push dword ptr [esi+1Ch]  +
call sub_40FFD7  +
push dword ptr [esi+38h]  +
call sub_40FFD7  +
push dword ptr [esi+3Ch]  +
call sub_40FFD7  +
add esp 40h +
push dword ptr [esi+40h]  +
call sub_40FFD7  +
push dword ptr [esi+44h]  +
call sub_40FFD7  +
push dword ptr [esi+48h]  +
call sub_40FFD7  +
push dword ptr [esi+4Ch]  +
call sub_40FFD7  +
push dword ptr [esi+50h]  +
call sub_40FFD7  +
push dword ptr [esi+54h]  +
call sub_40FFD7  +
push dword ptr [esi+58h]  +
call sub_40FFD7  +
push dword ptr [esi+5Ch]  +
call sub_40FFD7  +
push dword ptr [esi+60h]  +
call sub_40FFD7  +
push dword ptr [esi+64h]  +
call sub_40FFD7  +
push dword ptr [esi+68h]  +
call sub_40FFD7  +
push dword ptr [esi+6Ch]  +
call sub_40FFD7  +
push dword ptr [esi+70h]  +
call sub_40FFD7  +
push dword ptr [esi+74h]  +
call sub_40FFD7  +
push dword ptr [esi+78h]  +
call sub_40FFD7  +
push dword ptr [esi+7Ch]  +
call sub_40FFD7  +
add esp 40h +
push dword ptr [esi+80h]  +
call sub_40FFD7  +
push dword ptr [esi+84h]  +
call sub_40FFD7  +
push dword ptr [esi+88h]  +
call sub_40FFD7  +
push dword ptr [esi+8Ch]  +
call sub_40FFD7  +
push dword ptr [esi+90h]  +
call sub_40FFD7  +
push dword ptr [esi+94h]  +
call sub_40FFD7  +
push dword ptr [esi+98h]  +
call sub_40FFD7  +
push dword ptr [esi+9Ch]  +
call sub_40FFD7  +
push dword ptr [esi+0A0h]  +
call sub_40FFD7  +
push dword ptr [esi+0A4h]  +
call sub_40FFD7  +
push dword ptr [esi+0A8h]  +
call sub_40FFD7  +
add esp 2Ch +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_4178BB  +
mov eax [esi] +
cmp eax off_41EAD8 +
jz loc_417897  +
push eax  +
call sub_40FFD7  +
pop ecx  +
mov eax [esi+4] +
cmp eax off_41EADC +
jz loc_4178A9  +
push eax  +
call sub_40FFD7  +
pop ecx  +
mov esi [esi+8] +
cmp esi off_41EAE0 +
jz loc_4178BB  +
push esi  +
call sub_40FFD7  +
pop ecx  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jz loc_41794E  +
mov eax [esi+0Ch] +
cmp eax off_41EAE4 +
jz loc_4178E2  +
push eax  +
call sub_40FFD7  +
pop ecx  +
mov eax [esi+10h] +
cmp eax off_41EAE8 +
jz loc_4178F4  +
push eax  +
call sub_40FFD7  +
pop ecx  +
mov eax [esi+14h] +
cmp eax off_41EAEC +
jz loc_417906  +
push eax  +
call sub_40FFD7  +
pop ecx  +
mov eax [esi+18h] +
cmp eax off_41EAF0 +
jz loc_417918  +
push eax  +
call sub_40FFD7  +
pop ecx  +
mov eax [esi+1Ch] +
cmp eax off_41EAF4 +
jz loc_41792A  +
push eax  +
call sub_40FFD7  +
pop ecx  +
mov eax [esi+20h] +
cmp eax off_41EAF8 +
jz loc_41793C  +
push eax  +
call sub_40FFD7  +
pop ecx  +
mov esi [esi+24h] +
cmp esi off_41EAFC +
jz loc_41794E  +
push esi  +
call sub_40FFD7  +
pop ecx  +
pop esi  +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push esi  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
mov edx [ebp+0Ch] +
lea ecx [ecx+0] +
mov al [edx] +
or al al +
jz loc_417983  +
add edx 1 +
bts [esp] eax +
jmp loc_417974  +
***
mov esi [ebp+8] +
or ecx 0FFFFFFFFh +
lea ecx [ecx+0] +
add ecx 1 +
mov al [esi] +
or al al +
jz loc_41799E  +
add esi 1 +
bt [esp] eax +
jnb loc_41798C  +
mov eax ecx +
add esp 20h +
pop esi  +
leave   +
retn   +
***
mov edx [esp+4] +
mov ecx [esp+8] +
test edx 3 +
jnz loc_4179FC  +
mov eax [edx] +
cmp al [ecx] +
jnz loc_4179F4  +
or al al +
jz loc_4179F0  +
cmp ah [ecx+1] +
jnz loc_4179F4  +
or ah ah +
jz loc_4179F0  +
shr eax 10h +
cmp al [ecx+2] +
jnz loc_4179F4  +
or al al +
jz loc_4179F0  +
cmp ah [ecx+3] +
jnz loc_4179F4  +
add ecx 4 +
add edx 4 +
or ah ah +
jnz loc_4179C0  +
mov edi edi +
xor eax eax +
retn   +
***
sbb eax eax +
shl eax 1 +
add eax 1 +
retn   +
***
test edx 1 +
jz loc_417A1C  +
mov al [edx] +
add edx 1 +
cmp al [ecx] +
jnz loc_4179F4  +
add ecx 1 +
or al al +
jz loc_4179F0  +
test edx 2 +
jz loc_4179C0  +
mov ax [edx] +
add edx 2 +
cmp al [ecx] +
jnz loc_4179F4  +
or al al +
jz loc_4179F0  +
cmp ah [ecx+1] +
jnz loc_4179F4  +
or ah ah +
jz loc_4179F0  +
add ecx 2 +
jmp loc_4179C0  +
***
push ebp  +
mov ebp esp +
push esi  +
xor eax eax +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
push eax  +
mov edx [ebp+0Ch] +
lea ecx [ecx+0] +
mov al [edx] +
or al al +
jz loc_417A63  +
add edx 1 +
bts [esp] eax +
jmp loc_417A54  +
***
mov esi [ebp+8] +
mov edi edi +
mov al [esi] +
or al al +
jz loc_417A7A  +
add esi 1 +
bt [esp] eax +
jnb loc_417A68  +
lea eax [esi-1] +
add esp 20h +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push [ebp+arg_0]  +
lea ecx [ebp+var_10] +
call sub_41006A  +
mov eax [ebp+arg_10] +
test eax eax +
jle loc_417AB7  +
mov ecx [ebp+lpSrcStr] +
mov edx eax +
dec edx  +
cmp word ptr [ecx] 0 +
jz loc_417AB4  +
inc ecx  +
inc ecx  +
test edx edx +
jnz loc_417AA4  +
or edx 0FFFFFFFFh +
sub eax edx +
dec eax  +
push [ebp+cchDest]  +
push [ebp+lpDestStr]  +
push eax  +
push [ebp+lpSrcStr]  +
push [ebp+dwMapFlags]  +
push [ebp+Locale]  +
call ds:LCMapStringW  +
cmp [ebp+var_4] 0 +
jz locret_417ADA  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
leave   +
retn   +
***
sub esp 4 +
mov [ebp+var_4] edi +
mov edi [ebp+arg_0] +
mov ecx [ebp+arg_4] +
shr ecx 7 +
pxor xmm0 xmm0 +
jmp loc_417B01  +
lea esp [esp+0] +
nop   +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm0 +
movdqa oword ptr [edi+20h] xmm0 +
movdqa oword ptr [edi+30h] xmm0 +
movdqa oword ptr [edi+40h] xmm0 +
movdqa oword ptr [edi+50h] xmm0 +
movdqa oword ptr [edi+60h] xmm0 +
movdqa oword ptr [edi+70h] xmm0 +
lea edi [edi+80h] +
dec ecx  +
jnz loc_417B01  +
mov edi [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 10h +
mov [ebp+var_4] edi +
mov eax [ebp+arg_0] +
cdq   +
mov edi eax +
xor edi edx +
sub edi edx +
and edi 0Fh +
xor edi edx +
sub edi edx +
test edi edi +
jnz loc_417B97  +
mov ecx [ebp+arg_8] +
mov edx ecx +
and edx 7Fh +
mov [ebp+var_C] edx +
cmp ecx edx +
jz loc_417B7C  +
sub ecx edx +
push ecx  +
push eax  +
call sub_417AE1  +
add esp 8 +
mov eax [ebp+arg_0] +
mov edx [ebp+var_C] +
test edx edx +
jz loc_417BC5  +
add eax [ebp+arg_8] +
sub eax edx +
mov [ebp+var_8] eax +
xor eax eax +
mov edi [ebp+var_8] +
mov ecx [ebp+var_C] +
stos   +
mov eax [ebp+arg_0] +
jmp loc_417BC5  +
neg edi  +
add edi 10h +
mov [ebp+var_10] edi +
xor eax eax +
mov edi [ebp+arg_0] +
mov ecx [ebp+var_10] +
stos   +
mov eax [ebp+var_10] +
mov ecx [ebp+arg_0] +
mov edx [ebp+arg_8] +
add ecx eax +
sub edx eax +
push edx  +
push 0  +
push ecx  +
call sub_417B3D  +
add esp 0Ch +
mov eax [ebp+arg_0] +
mov edi [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_412220  +
and dword ptr [ebp-4] 0 +
movapd xmm0 xmm1 +
mov dword ptr [ebp-1Ch] 1 +
jmp loc_417C11  +
mov eax [ebp-14h] +
mov eax [eax] +
mov eax [eax] +
cmp eax 0C0000005h +
jz loc_417C06  +
cmp eax 0C000001Dh +
jz loc_417C06  +
xor eax eax +
retn   +
xor eax eax +
inc eax  +
retn   +
mov esp [ebp-18h] +
and dword ptr [ebp-1Ch] 0 +
mov dword ptr [ebp-4] 0FFFFFFFEh +
mov eax [ebp-1Ch] +
call sub_412265  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 18h +
xor eax eax +
push ebx  +
mov [ebp+var_4] eax +
mov [ebp+var_C] eax +
mov [ebp+var_8] eax +
push ebx  +
pushf   +
pop eax  +
mov ecx eax +
xor eax 200000h +
push eax  +
popf   +
pushf   +
pop edx  +
sub edx ecx +
jz loc_417C6B  +
push ecx  +
popf   +
xor eax eax +
cpuid   +
mov [ebp+var_C] eax +
mov [ebp+var_18] ebx +
mov [ebp+var_14] edx +
mov [ebp+var_10] ecx +
mov eax 1 +
cpuid   +
mov [ebp+var_4] edx +
mov [ebp+var_8] eax +
pop ebx  +
test [ebp+var_4] 4000000h +
jz loc_417C83  +
call sub_417BD1  +
test eax eax +
jz loc_417C83  +
xor eax eax +
inc eax  +
jmp loc_417C85  +
xor eax eax +
pop ebx  +
leave   +
retn   +
***
call sub_417C26  +
mov dword_420FA4 eax +
xor eax eax +
retn   +
***
sub esp 8 +
mov [ebp+var_4] edi +
mov [ebp+var_8] esi +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_0] +
mov ecx [ebp+arg_8] +
shr ecx 7 +
jmp loc_417CBF  +
lea ebx [ebx+0] +
movdqa xmm0 oword ptr [esi] +
movdqa xmm1 oword ptr [esi+10h] +
movdqa xmm2 oword ptr [esi+20h] +
movdqa xmm3 oword ptr [esi+30h] +
movdqa oword ptr [edi] xmm0 +
movdqa oword ptr [edi+10h] xmm1 +
movdqa oword ptr [edi+20h] xmm2 +
movdqa oword ptr [edi+30h] xmm3 +
movdqa xmm4 oword ptr [esi+40h] +
movdqa xmm5 oword ptr [esi+50h] +
movdqa xmm6 oword ptr [esi+60h] +
movdqa xmm7 oword ptr [esi+70h] +
movdqa oword ptr [edi+40h] xmm4 +
movdqa oword ptr [edi+50h] xmm5 +
movdqa oword ptr [edi+60h] xmm6 +
movdqa oword ptr [edi+70h] xmm7 +
lea esi [esi+80h] +
lea edi [edi+80h] +
dec ecx  +
jnz loc_417CBF  +
mov esi [ebp+var_8] +
mov edi [ebp+var_4] +
mov esp ebp +
pop ebp  +
retn   +
***
sub esp 1Ch +
mov [ebp+var_C] edi +
mov [ebp+var_8] esi +
mov [ebp+var_4] ebx +
mov ebx [ebp+arg_4] +
mov eax ebx +
cdq   +
mov ecx eax +
mov eax [ebp+arg_0] +
xor ecx edx +
sub ecx edx +
and ecx 0Fh +
xor ecx edx +
sub ecx edx +
cdq   +
mov edi eax +
xor edi edx +
sub edi edx +
and edi 0Fh +
xor edi edx +
sub edi edx +
mov edx ecx +
or edx edi +
jnz loc_417DAE  +
mov esi [ebp+arg_8] +
mov ecx esi +
and ecx 7Fh +
mov [ebp+var_18] ecx +
cmp esi ecx +
jz loc_417D86  +
sub esi ecx +
push esi  +
push ebx  +
push eax  +
call sub_417C9F  +
add esp 0Ch +
mov eax [ebp+arg_0] +
mov ecx [ebp+var_18] +
test ecx ecx +
jz loc_417E01  +
mov ebx [ebp+arg_8] +
mov edx [ebp+arg_4] +
add edx ebx +
sub edx ecx +
mov [ebp+var_14] edx +
add ebx eax +
sub ebx ecx +
mov [ebp+var_10] ebx +
mov esi [ebp+var_14] +
mov edi [ebp+var_10] +
mov ecx [ebp+var_18] +
movs   +
mov eax [ebp+arg_0] +
jmp loc_417E01  +
cmp ecx edi +
jnz loc_417DE7  +
neg ecx  +
add ecx 10h +
mov [ebp+var_1C] ecx +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_0] +
mov ecx [ebp+var_1C] +
movs   +
mov ecx [ebp+arg_0] +
add ecx [ebp+var_1C] +
mov edx [ebp+arg_4] +
add edx [ebp+var_1C] +
mov eax [ebp+arg_8] +
sub eax [ebp+var_1C] +
push eax  +
push edx  +
push ecx  +
call sub_417D2B  +
add esp 0Ch +
mov eax [ebp+arg_0] +
jmp loc_417E01  +
mov esi [ebp+arg_4] +
mov edi [ebp+arg_0] +
mov ecx [ebp+arg_8] +
mov edx ecx +
shr ecx 2 +
movs   +
mov ecx edx +
and ecx 3 +
movs   +
mov eax [ebp+arg_0] +
mov ebx [ebp+var_4] +
mov esi [ebp+var_8] +
mov edi [ebp+var_C] +
mov esp ebp +
pop ebp  +
retn   +
***
call sub_412220  +
pop ecx  +
retn   +
***
cmp ebx edi +
jnz loc_417F29  +
mov eax [ebp+10h] +
cmp eax edi +
jz loc_417F29  +
mov dword ptr [eax] 0Ch +
mov eax ebx +
call sub_412265  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push ecx  +
mov eax [ebp+arg_4] +
push esi  +
mov esi [ebp+arg_0] +
mov [ebp+lDistanceToMove] eax +
mov eax [ebp+arg_8] +
push edi  +
push esi  +
mov [ebp+DistanceToMoveHigh] eax +
call sub_419666  +
or edi 0FFFFFFFFh +
pop ecx  +
cmp eax edi +
jnz loc_417F6D  +
call sub_41319D  +
mov dword ptr [eax] 9 +
mov eax edi +
mov edx edi +
jmp loc_417FB7  +
push [ebp+dwMoveMethod]  +
lea ecx [ebp+DistanceToMoveHigh] +
push ecx  +
push [ebp+lDistanceToMove]  +
push eax  +
call ds:SetFilePointer  +
mov [ebp+lDistanceToMove] eax +
cmp eax edi +
jnz loc_417F98  +
call ds:GetLastError  +
test eax eax +
jz loc_417F98  +
push eax  +
call sub_4131CD  +
pop ecx  +
jmp loc_417F67  +
mov eax esi +
sar eax 5 +
mov eax dword_420FE0[eax*4] +
and esi 1Fh +
shl esi 6 +
lea eax [eax+esi+4] +
and byte ptr [eax] 0FDh +
mov eax [ebp+lDistanceToMove] +
mov edx [ebp+DistanceToMoveHigh] +
pop edi  +
pop esi  +
leave   +
retn   +
***
call sub_412220  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax 1AE4h +
call sub_419880  +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_4] +
push esi  +
xor esi esi +
mov [ebp+lpBuffer] eax +
mov [ebp+var_1AC8] esi +
mov [ebp+var_1AD0] esi +
cmp [ebp+nNumberOfBytesToWrite] esi +
jnz loc_41811B  +
xor eax eax +
jmp loc_418804  +
cmp eax esi +
jnz loc_418146  +
call sub_4131B5  +
mov [eax] esi +
call sub_41319D  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov dword ptr [eax] 16h +
call sub_413F44  +
add esp 14h +
or eax 0FFFFFFFFh +
jmp loc_418804  +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
mov eax edi +
sar eax 5 +
lea esi dword_420FE0[eax*4] +
mov eax [esi] +
and edi 1Fh +
shl edi 6 +
add eax edi +
mov bl [eax+24h] +
add bl bl +
sar bl 1 +
mov [ebp+var_1AD8] esi +
mov [ebp+var_1AD9] bl +
cmp bl 2 +
jz loc_41817E  +
cmp bl 1 +
jnz loc_4181AE  +
mov ecx [ebp+nNumberOfBytesToWrite] +
not ecx  +
test cl 1 +
jnz loc_4181AE  +
call sub_4131B5  +
xor esi esi +
mov [eax] esi +
call sub_41319D  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov dword ptr [eax] 16h +
call sub_413F44  +
add esp 14h +
jmp loc_4187F1  +
test byte ptr [eax+4] 20h +
jz loc_4181C5  +
push 2  +
push 0  +
push 0  +
push [ebp+arg_0]  +
call sub_417F36  +
add esp 10h +
push [ebp+arg_0]  +
call sub_418945  +
pop ecx  +
test eax eax +
jz loc_418473  +
mov eax [esi] +
test byte ptr [edi+eax+4] 80h +
jz loc_418473  +
call sub_411F04  +
mov eax [eax+6Ch] +
xor ecx ecx +
cmp [eax+14h] ecx +
lea eax [ebp+CodePage] +
setz cl  +
push eax  +
mov eax [esi] +
push dword ptr [edi+eax]  +
mov [ebp+var_1AE0] ecx +
call ds:GetConsoleMode  +
test eax eax +
jz loc_418473  +
xor ecx ecx +
cmp [ebp+var_1AE0] ecx +
jz loc_418225  +
test bl bl +
jz loc_418475  +
call ds:GetConsoleCP  +
mov ebx [ebp+lpBuffer] +
mov [ebp+CodePage] eax +
xor eax eax +
mov [ebp+NumberOfBytesWritten] eax +
cmp [ebp+nNumberOfBytesToWrite] eax +
jbe loc_41878A  +
mov [ebp+var_1ABC] eax +
mov al [ebp+var_1AD9] +
test al al +
jnz loc_4183C3  +
mov cl [ebx] +
mov esi [ebp+var_1AD8] +
xor eax eax +
cmp cl 0Ah +
setz al  +
mov [ebp+var_1AE0] eax +
mov eax [esi] +
add eax edi +
cmp dword ptr [eax+38h] 0 +
jz loc_418291  +
mov dl [eax+34h] +
mov [ebp+Buffer] dl +
mov [ebp-0Bh] cl +
and dword ptr [eax+38h] 0 +
push 2  +
lea eax [ebp+Buffer] +
push eax  +
jmp loc_4182DC  +
movsx eax cl +
push eax  +
call sub_4109ED  +
pop ecx  +
test eax eax +
jz loc_4182D9  +
mov ecx [ebp+lpBuffer] +
sub ecx ebx +
add ecx [ebp+nNumberOfBytesToWrite] +
xor eax eax +
inc eax  +
cmp ecx eax +
jbe loc_41845A  +
push 2  +
lea eax [ebp+WideCharStr] +
push ebx  +
push eax  +
call sub_419339  +
add esp 0Ch +
cmp eax 0FFFFFFFFh +
jz loc_418781  +
inc ebx  +
inc [ebp+var_1ABC]  +
jmp loc_4182F4  +
push 1  +
push ebx  +
lea eax [ebp+WideCharStr] +
push eax  +
call sub_419339  +
add esp 0Ch +
cmp eax 0FFFFFFFFh +
jz loc_418781  +
xor eax eax +
push eax  +
push eax  +
push 5  +
lea ecx [ebp+Buffer] +
push ecx  +
push 1  +
lea ecx [ebp+WideCharStr] +
push ecx  +
push eax  +
push [ebp+CodePage]  +
inc ebx  +
inc [ebp+var_1ABC]  +
call ds:WideCharToMultiByte  +
mov esi eax +
test esi esi +
jz loc_418781  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push esi  +
lea eax [ebp+Buffer] +
push eax  +
mov eax [ebp+var_1AD8] +
mov eax [eax] +
push dword ptr [edi+eax]  +
call ds:WriteFile  +
test eax eax +
jz loc_418775  +
mov eax [ebp+var_1ABC] +
mov ecx [ebp+var_1AD0] +
add eax ecx +
cmp [ebp+NumberOfBytesWritten] esi +
mov [ebp+var_1AC8] eax +
jl loc_418781  +
cmp [ebp+var_1AE0] 0 +
jz loc_418446  +
push 0  +
lea eax [ebp+NumberOfBytesWritten] +
push eax  +
push 1  +
lea eax [ebp+Buffer] +
push eax  +
mov eax [ebp+var_1AD8] +
mov eax [eax] +
mov [ebp+Buffer] 0Dh +
push dword ptr [edi+eax]  +
call ds:WriteFile  +
test eax eax +
jz loc_418775  +
cmp [ebp+NumberOfBytesWritten] 1 +
jl loc_418781  +
inc [ebp+var_1AD0]  +
inc [ebp+var_1AC8]  +
jmp loc_418446  +
cmp al 1 +
jz loc_4183CB  +
cmp al 2 +
jnz loc_4183EC  +
movzx esi word ptr [ebx] +
xor ecx ecx +
cmp si 0Ah +
setz cl  +
inc ebx  +
inc ebx  +
add [ebp+var_1ABC] 2 +
mov dword ptr [ebp+WideCharStr] esi +
mov [ebp+var_1AE0] ecx +
cmp al 1 +
jz loc_4183F4  +
cmp al 2 +
jnz loc_418446  +
push dword ptr [ebp+WideCharStr]  +
call sub_4197B3  +
pop ecx  +
cmp ax [ebp+WideCharStr] +
jnz loc_418775  +
add [ebp+var_1AC8] 2 +
cmp [ebp+var_1AE0] 0 +
jz loc_418446  +
push 0Dh  +
pop eax  +
push eax  +
mov dword ptr [ebp+WideCharStr] eax +
call sub_4197B3  +
pop ecx  +
cmp ax [ebp+WideCharStr] +
jnz loc_418775  +
inc [ebp+var_1AC8]  +
inc [ebp+var_1AD0]  +
mov eax [ebp+nNumberOfBytesToWrite] +
cmp [ebp+var_1ABC] eax +
jb loc_41824E  +
jmp loc_418781  +
mov ecx [esi] +
mov dl [ebx] +
inc [ebp+var_1AC8]  +
mov [edi+ecx+34h] dl +
mov ecx [esi] +
mov [edi+ecx+38h] eax +
jmp loc_418781  +
xor ecx ecx +
mov eax [esi] +
add eax edi +
test byte ptr [eax+4] 80h +
jz loc_418742  +
mov eax [ebp+lpBuffer] +
mov dword ptr [ebp+WideCharStr] ecx +
test bl bl +
jnz loc_418561  +
mov [ebp+NumberOfBytesWritten] eax +
cmp [ebp+nNumberOfBytesToWrite] ecx +
jbe loc_4187C6  +
jmp loc_4184AE  +
mov esi [ebp+var_1AD8] +
mov ecx [ebp+NumberOfBytesWritten] +
and [ebp+var_1ABC] 0 +
sub ecx [ebp+lpBuffer] +
lea eax [ebp+var_1AB8] +
cmp ecx [ebp+nNumberOfBytesToWrite] +
jnb loc_418505  +
mov edx [ebp+NumberOfBytesWritten] +
inc [ebp+NumberOfBytesWritten]  +
mov dl [edx] +
inc ecx  +
cmp dl 0Ah +
jnz loc_4184F0  +
inc [ebp+var_1AD0]  +
mov byte ptr [eax] 0Dh +
inc eax  +
inc [ebp+var_1ABC]  +
mov [eax] dl +
inc eax  +
inc [ebp+var_1ABC]  +
cmp [ebp+var_1ABC] 13FFh +
jb loc_4184C7  +
mov ebx eax +
lea eax [ebp+var_1AB8] +
sub ebx eax +
push 0  +
lea eax [ebp+var_1AD4] +
push eax  +
push ebx  +
lea eax [ebp+var_1AB8] +
push eax  +
mov eax [esi] +
push dword ptr [edi+eax]  +
call ds:WriteFile  +
test eax eax +
jz loc_418775  +
mov eax [ebp+var_1AD4] +
add [ebp+var_1AC8] eax +
cmp eax ebx +
jl loc_418781  +
mov eax [ebp+NumberOfBytesWritten] +
sub eax [ebp+lpBuffer] +
cmp eax [ebp+nNumberOfBytesToWrite] +
jb loc_4184A8  +
jmp loc_418781  +
mov [ebp+var_1ABC] eax +
cmp bl 2 +
jnz loc_418641  +
cmp [ebp+nNumberOfBytesToWrite] ecx +
jbe loc_4187C6  +
jmp loc_418581  +
mov esi [ebp+var_1AD8] +
mov ecx [ebp+var_1ABC] +
and [ebp+NumberOfBytesWritten] 0 +
sub ecx [ebp+lpBuffer] +
lea eax [ebp+var_1AB8] +
cmp ecx [ebp+nNumberOfBytesToWrite] +
jnb loc_4185E5  +
mov edx [ebp+var_1ABC] +
add [ebp+var_1ABC] 2 +
movzx edx word ptr [edx] +
inc ecx  +
inc ecx  +
cmp dx 0Ah +
jnz loc_4185CD  +
add [ebp+var_1AD0] 2 +
push 0Dh  +
pop ebx  +
mov [eax] bx +
inc eax  +
inc eax  +
add [ebp+NumberOfBytesWritten] 2 +
add [ebp+NumberOfBytesWritten] 2 +
mov [eax] dx +
inc eax  +
inc eax  +
cmp [ebp+NumberOfBytesWritten] 13FEh +
jb loc_41859A  +
mov ebx eax +
lea eax [ebp+var_1AB8] +
sub ebx eax +
push 0  +
lea eax [ebp+var_1AD4] +
push eax  +
push ebx  +
lea eax [ebp+var_1AB8] +
push eax  +
mov eax [esi] +
push dword ptr [edi+eax]  +
call ds:WriteFile  +
test eax eax +
jz loc_418775  +
mov eax [ebp+var_1AD4] +
add [ebp+var_1AC8] eax +
cmp eax ebx +
jl loc_418781  +
mov eax [ebp+var_1ABC] +
sub eax [ebp+lpBuffer] +
cmp eax [ebp+nNumberOfBytesToWrite] +
jb loc_41857B  +
jmp loc_418781  +
cmp [ebp+nNumberOfBytesToWrite] ecx +
jbe loc_4187C6  +
mov ecx [ebp+var_1ABC] +
and [ebp+NumberOfBytesWritten] 0 +
sub ecx [ebp+lpBuffer] +
push 2  +
lea eax [ebp+var_6B8] +
pop esi  +
cmp ecx [ebp+nNumberOfBytesToWrite] +
jnb loc_4186A7  +
mov edx [ebp+var_1ABC] +
movzx edx word ptr [edx] +
add [ebp+var_1ABC] esi +
add ecx esi +
cmp dx 0Ah +
jnz loc_418690  +
push 0Dh  +
pop ebx  +
mov [eax] bx +
add eax esi +
add [ebp+NumberOfBytesWritten] esi +
add [ebp+NumberOfBytesWritten] esi +
mov [eax] dx +
add eax esi +
cmp [ebp+NumberOfBytesWritten] 6A8h +
jb loc_418666  +
xor esi esi +
push esi  +
push esi  +
push 0D55h  +
lea ecx [ebp+MultiByteStr] +
push ecx  +
lea ecx [ebp+var_6B8] +
sub eax ecx +
cdq   +
sub eax edx +
sar eax 1 +
push eax  +
mov eax ecx +
push eax  +
push esi  +
push 0FDE9h  +
call ds:WideCharToMultiByte  +
mov ebx eax +
cmp ebx esi +
jz loc_418775  +
push 0  +
lea eax [ebp+var_1AD4] +
push eax  +
mov eax ebx +
sub eax esi +
push eax  +
lea eax [ebp+esi+MultiByteStr] +
push eax  +
mov eax [ebp+var_1AD8] +
mov eax [eax] +
push dword ptr [edi+eax]  +
call ds:WriteFile  +
test eax eax +
jz loc_418715  +
add esi [ebp+var_1AD4] +
cmp ebx esi +
jg loc_4186DE  +
jmp loc_418721  +
call ds:GetLastError  +
mov dword ptr [ebp+WideCharStr] eax +
cmp ebx esi +
jg loc_418781  +
mov eax [ebp+var_1ABC] +
sub eax [ebp+lpBuffer] +
mov [ebp+var_1AC8] eax +
cmp eax [ebp+nNumberOfBytesToWrite] +
jb loc_41864A  +
jmp loc_418781  +
push 0  +
lea ecx [ebp+var_1AD4] +
push ecx  +
push [ebp+nNumberOfBytesToWrite]  +
push [ebp+lpBuffer]  +
push dword ptr [eax]  +
call ds:WriteFile  +
test eax eax +
jz loc_418775  +
mov eax [ebp+var_1AD4] +
and dword ptr [ebp+WideCharStr] 0 +
mov [ebp+var_1AC8] eax +
jmp loc_418781  +
call ds:GetLastError  +
mov dword ptr [ebp+WideCharStr] eax +
cmp [ebp+var_1AC8] 0 +
jnz loc_4187F6  +
cmp dword ptr [ebp+WideCharStr] 0 +
jz loc_4187C0  +
push 5  +
pop esi  +
cmp dword ptr [ebp+WideCharStr] esi +
jnz loc_4187B2  +
call sub_41319D  +
mov dword ptr [eax] 9 +
call sub_4131B5  +
mov [eax] esi +
jmp loc_4187F1  +
push dword ptr [ebp+WideCharStr]  +
call sub_4131CD  +
pop ecx  +
jmp loc_4187F1  +
mov esi [ebp+var_1AD8] +
mov eax [esi] +
test byte ptr [edi+eax+4] 40h +
jz loc_4187DE  +
mov eax [ebp+lpBuffer] +
cmp byte ptr [eax] 1Ah +
jnz loc_4187DE  +
xor eax eax +
jmp loc_418802  +
call sub_41319D  +
mov dword ptr [eax] 1Ch +
call sub_4131B5  +
and dword ptr [eax] 0 +
or eax 0FFFFFFFFh +
jmp loc_418802  +
mov eax [ebp+var_1AC8] +
sub eax [ebp+var_1AD0] +
pop edi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_40FFC3  +
leave   +
retn   +
***
call sub_412220  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
inc dword_41F8B0  +
push 1000h  +
call sub_414622  +
pop ecx  +
mov ecx [ebp+arg_0] +
mov [ecx+8] eax +
test eax eax +
jz loc_418924  +
or dword ptr [ecx+0Ch] 8 +
mov dword ptr [ecx+18h] 1000h +
jmp loc_418935  +
or dword ptr [ecx+0Ch] 4 +
lea eax [ecx+14h] +
mov [ecx+8] eax +
mov dword ptr [ecx+18h] 2 +
mov eax [ecx+8] +
and dword ptr [ecx+4] 0 +
mov [ecx] eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0FFFFFFFEh +
jnz loc_418961  +
call sub_41319D  +
mov dword ptr [eax] 9 +
xor eax eax +
pop ebp  +
retn   +
push esi  +
xor esi esi +
cmp eax esi +
jl loc_418970  +
cmp eax uNumber +
jb loc_41898C  +
call sub_41319D  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov dword ptr [eax] 9 +
call sub_413F44  +
add esp 14h +
xor eax eax +
jmp loc_4189A6  +
mov ecx eax +
and eax 1Fh +
sar ecx 5 +
mov ecx dword_420FE0[ecx*4] +
shl eax 6 +
movsx eax byte ptr [ecx+eax+4] +
and eax 40h +
pop esi  +
pop ebp  +
retn   +
***
retn   +
***
mov eax dword_420FA0 +
push esi  +
push 14h  +
pop esi  +
test eax eax +
jnz loc_4189CD  +
mov eax 200h +
jmp loc_4189D3  +
cmp eax esi +
jge loc_4189D8  +
mov eax esi +
mov dword_420FA0 eax +
push 4  +
push eax  +
call sub_41466C  +
pop ecx  +
pop ecx  +
mov dword_41FF80 eax +
test eax eax +
jnz loc_418A09  +
push 4  +
push esi  +
mov dword_420FA0 esi +
call sub_41466C  +
pop ecx  +
pop ecx  +
mov dword_41FF80 eax +
test eax eax +
jnz loc_418A09  +
push 1Ah  +
pop eax  +
pop esi  +
retn   +
xor edx edx +
mov ecx offset off_41EB20 +
jmp loc_418A17  +
mov eax dword_41FF80 +
mov [edx+eax] ecx +
add ecx 20h +
add edx 4 +
cmp ecx offset byte_41EDA0 +
jl loc_418A12  +
push 0FFFFFFFEh  +
pop esi  +
xor edx edx +
mov ecx offset unk_41EB30 +
push edi  +
mov eax edx +
sar eax 5 +
mov eax dword_420FE0[eax*4] +
mov edi edx +
and edi 1Fh +
shl edi 6 +
mov eax [edi+eax] +
cmp eax 0FFFFFFFFh +
jz loc_418A57  +
cmp eax esi +
jz loc_418A57  +
test eax eax +
jnz loc_418A59  +
mov [ecx] esi +
add ecx 20h +
inc edx  +
cmp ecx offset unk_41EB90 +
jl loc_418A33  +
pop edi  +
xor eax eax +
pop esi  +
retn   +
***
call sub_419AED  +
cmp byte_41EF58 0 +
jz loc_418A82  +
call sub_4198B0  +
push dword_41FF80  +
call sub_40FFD7  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax offset off_41EB20 +
cmp esi eax +
jb loc_418AC8  +
cmp esi offset unk_41ED80 +
ja loc_418AC8  +
mov ecx esi +
sub ecx eax +
sar ecx 5 +
add ecx 10h +
push ecx  +
call sub_41263C  +
or dword ptr [esi+0Ch] 8000h +
pop ecx  +
jmp loc_418AD2  +
add esi 20h +
push esi  +
call ds:EnterCriticalSection  +
pop esi  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 14h +
jge loc_418AFD  +
add eax 10h +
push eax  +
call sub_41263C  +
mov eax [ebp+arg_4] +
or dword ptr [eax+0Ch] 8000h +
pop ecx  +
pop ebp  +
retn   +
mov eax [ebp+arg_4] +
add eax 20h +
push eax  +
call ds:EnterCriticalSection  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx offset off_41EB20 +
cmp eax ecx +
jb loc_418B41  +
cmp eax offset unk_41ED80 +
ja loc_418B41  +
and dword ptr [eax+0Ch] 0FFFF7FFFh +
sub eax ecx +
sar eax 5 +
add eax 10h +
push eax  +
call sub_412558  +
pop ecx  +
pop ebp  +
retn   +
add eax 20h +
push eax  +
call ds:LeaveCriticalSection  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
cmp ecx 14h +
mov eax [ebp+arg_4] +
jge loc_418B75  +
and dword ptr [eax+0Ch] 0FFFF7FFFh +
add ecx 10h +
push ecx  +
call sub_412558  +
pop ecx  +
pop ebp  +
retn   +
add eax 20h +
push eax  +
call ds:LeaveCriticalSection  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
push esi  +
xor esi esi +
cmp eax esi +
jnz loc_418BB2  +
call sub_41319D  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov dword ptr [eax] 16h +
call sub_413F44  +
add esp 14h +
or eax 0FFFFFFFFh +
jmp loc_418BB5  +
mov eax [eax+10h] +
pop esi  +
pop ebp  +
retn   +
***
mov eax dword_41E3B0 +
or eax 1 +
xor ecx ecx +
cmp dword_41F8B4 eax +
setz cl  +
mov eax ecx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+UsedDefaultChar] +
xor ebx ebx +
push edi  +
mov edi [ebp+arg_8] +
cmp esi ebx +
jnz loc_418C03  +
cmp edi ebx +
jbe loc_418C03  +
mov eax [ebp+arg_0] +
cmp eax ebx +
jz loc_418BFC  +
mov [eax] ebx +
xor eax eax +
jmp loc_418C86  +
mov eax [ebp+arg_0] +
cmp eax ebx +
jz loc_418C0D  +
or dword ptr [eax] 0FFFFFFFFh +
cmp edi 7FFFFFFFh +
jbe loc_418C30  +
call sub_41319D  +
push 16h  +
pop esi  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
mov [eax] esi +
call sub_413F44  +
add esp 14h +
mov eax esi +
jmp loc_418C86  +
push [ebp+arg_10]  +
lea ecx [ebp+var_10] +
call sub_41006A  +
mov eax [ebp+var_10] +
cmp [eax+14h] ebx +
jnz loc_418CE3  +
mov ax [ebp+WideCharStr] +
mov ecx 0FFh +
cmp ax cx +
jbe loc_418C8B  +
cmp esi ebx +
jz loc_418C68  +
cmp edi ebx +
jbe loc_418C68  +
push edi  +
push ebx  +
push esi  +
call sub_413F70  +
add esp 0Ch +
call sub_41319D  +
mov dword ptr [eax] 2Ah +
call sub_41319D  +
mov eax [eax] +
cmp [ebp+var_4] bl +
jz loc_418C86  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
pop edi  +
pop esi  +
pop ebx  +
leave   +
retn   +
cmp esi ebx +
jz loc_418CC1  +
cmp edi ebx +
ja loc_418CBF  +
call sub_41319D  +
push 22h  +
pop esi  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
push ebx  +
mov [eax] esi +
call sub_413F44  +
add esp 14h +
cmp [ebp+var_4] bl +
jz loc_418C2C  +
mov eax [ebp+var_8] +
and dword ptr [eax+70h] 0FFFFFFFDh +
jmp loc_418C2C  +
mov [esi] al +
mov eax [ebp+arg_0] +
cmp eax ebx +
jz loc_418CCE  +
mov dword ptr [eax] 1 +
cmp [ebp+var_4] bl +
jz loc_418BFC  +
mov eax [ebp+var_8] +
and dword ptr [eax+70h] 0FFFFFFFDh +
jmp loc_418BFC  +
lea ecx [ebp+UsedDefaultChar] +
push ecx  +
push ebx  +
push edi  +
push esi  +
push 1  +
lea ecx [ebp+WideCharStr] +
push ecx  +
push ebx  +
mov [ebp+UsedDefaultChar] ebx +
push dword ptr [eax+4]  +
call ds:WideCharToMultiByte  +
cmp eax ebx +
jz loc_418D15  +
cmp [ebp+UsedDefaultChar] ebx +
jnz loc_418C68  +
mov ecx [ebp+arg_0] +
cmp ecx ebx +
jz loc_418CCE  +
mov [ecx] eax +
jmp loc_418CCE  +
call ds:GetLastError  +
cmp eax 7Ah +
jnz loc_418C68  +
cmp esi ebx +
jz loc_418C93  +
cmp edi ebx +
jbe loc_418C93  +
push edi  +
push ebx  +
push esi  +
call sub_413F70  +
add esp 0Ch +
jmp loc_418C93  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push dword ptr [ebp+WideCharStr]  +
push [ebp+arg_8]  +
push [ebp+UsedDefaultChar]  +
push [ebp+arg_0]  +
call sub_418BD8  +
add esp 14h +
pop ebp  +
retn   +
***
or eax eax +
jnz loc_418DA1  +
mov ecx [esp+arg_8] +
mov eax [esp+arg_4] +
xor edx edx +
div  ecx +
mov ebx eax +
mov eax [esp+arg_0] +
div  ecx +
mov esi eax +
mov eax ebx +
mul  [esp+arg_8] +
mov ecx eax +
mov eax esi +
mul  [esp+arg_8] +
add edx ecx +
jmp loc_418DE8  +
mov ecx eax +
mov ebx [esp+arg_8] +
mov edx [esp+arg_4] +
mov eax [esp+arg_0] +
shr ecx 1 +
rcr ebx 1 +
shr edx 1 +
rcr eax 1 +
or ecx ecx +
jnz loc_418DAF  +
div  ebx +
mov esi eax +
mul  [esp+arg_C] +
mov ecx eax +
mov eax [esp+arg_8] +
mul  esi +
add edx ecx +
jb loc_418DDD  +
cmp edx [esp+arg_4] +
ja loc_418DDD  +
jb loc_418DE6  +
cmp eax [esp+arg_0] +
jbe loc_418DE6  +
dec esi  +
sub eax [esp+arg_8] +
sbb edx [esp+arg_C] +
xor ebx ebx +
sub eax [esp+arg_0] +
sbb edx [esp+arg_4] +
neg edx  +
neg eax  +
sbb edx 0 +
mov ecx edx +
mov edx ebx +
mov ebx ecx +
mov ecx eax +
mov eax esi +
pop esi  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push [ebp+arg_0]  +
lea ecx [ebp+var_10] +
call sub_41006A  +
cmp [ebp+cchSrc] 0FFFFFFFFh +
jge loc_418E27  +
xor eax eax +
jmp loc_418E39  +
push [ebp+lpCharType]  +
push [ebp+cchSrc]  +
push [ebp+lpSrcStr]  +
push [ebp+dwInfoType]  +
call ds:GetStringTypeW  +
cmp [ebp+var_4] 0 +
jz locret_418E46  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 0Ch +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push 6  +
lea eax [ebp+LCData] +
push eax  +
push 1004h  +
push [ebp+Locale]  +
mov [ebp+var_6] 0 +
call ds:GetLocaleInfoA  +
test eax eax +
jnz loc_418E80  +
or eax 0FFFFFFFFh +
jmp loc_418E8A  +
lea eax [ebp+LCData] +
push eax  +
call sub_4195C0  +
pop ecx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 34h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_10] +
mov [ebp+lpMultiByteStr] eax +
mov eax [ebp+arg_C] +
push ebx  +
mov [ebp+var_30] eax +
mov eax [eax] +
push esi  +
mov [ebp+cchMultiByte] eax +
mov eax [ebp+CodePage] +
push edi  +
xor edi edi +
mov [ebp+var_34] ecx +
mov [ebp+var_20] edi +
mov [ebp+var_2C] edi +
cmp eax [ebp+arg_4] +
jz loc_41903A  +
mov esi ds:GetCPInfo +
lea ecx [ebp+CPInfo] +
push ecx  +
push eax  +
call esi  +
mov ebx ds:MultiByteToWideChar +
test eax eax +
jz loc_418F50  +
cmp [ebp+CPInfo.MaxCharSize] 1 +
jnz loc_418F50  +
lea eax [ebp+CPInfo] +
push eax  +
push [ebp+arg_4]  +
call esi  +
test eax eax +
jz loc_418F50  +
cmp [ebp+CPInfo.MaxCharSize] 1 +
jnz loc_418F50  +
mov esi [ebp+cchMultiByte] +
mov [ebp+var_2C] 1 +
cmp esi 0FFFFFFFFh +
jnz loc_418F26  +
push [ebp+lpMultiByteStr]  +
call sub_4171B0  +
mov esi eax +
pop ecx  +
inc esi  +
cmp esi edi +
jle loc_418F85  +
cmp esi 7FFFFFF0h +
ja loc_418F85  +
lea eax [esi+esi+8] +
cmp eax 400h +
ja loc_418F6C  +
call sub_419060  +
mov eax esp +
cmp eax edi +
jz loc_418F80  +
mov dword ptr [eax] 0CCCCh +
jmp loc_418F7D  +
push edi  +
push edi  +
push [ebp+cchMultiByte]  +
push [ebp+lpMultiByteStr]  +
push 1  +
push [ebp+CodePage]  +
call ebx  +
mov esi eax +
cmp esi edi +
jnz loc_418F28  +
xor eax eax +
jmp loc_41903D  +
push eax  +
call sub_40FEA3  +
pop ecx  +
cmp eax edi +
jz loc_418F80  +
mov dword ptr [eax] 0DDDDh +
add eax 8 +
mov [ebp+lpWideCharStr] eax +
jmp loc_418F88  +
mov [ebp+lpWideCharStr] edi +
cmp [ebp+lpWideCharStr] edi +
jz loc_418F65  +
lea eax [esi+esi] +
push eax  +
push edi  +
push [ebp+lpWideCharStr]  +
call sub_413F70  +
add esp 0Ch +
push esi  +
push [ebp+lpWideCharStr]  +
push [ebp+cchMultiByte]  +
push [ebp+lpMultiByteStr]  +
push 1  +
push [ebp+CodePage]  +
call ebx  +
test eax eax +
jz loc_419031  +
mov ebx [ebp+var_34] +
cmp ebx edi +
jz loc_418FD6  +
push edi  +
push edi  +
push [ebp+arg_14]  +
push ebx  +
push esi  +
push [ebp+lpWideCharStr]  +
push edi  +
push [ebp+arg_4]  +
call ds:WideCharToMultiByte  +
test eax eax +
jz loc_419031  +
mov [ebp+var_20] ebx +
jmp loc_419031  +
mov ebx ds:WideCharToMultiByte +
cmp [ebp+var_2C] edi +
jnz loc_418FF5  +
push edi  +
push edi  +
push edi  +
push edi  +
push esi  +
push [ebp+lpWideCharStr]  +
push edi  +
push [ebp+arg_4]  +
call ebx  +
mov esi eax +
cmp esi edi +
jz loc_419031  +
push esi  +
push 1  +
call sub_41466C  +
pop ecx  +
pop ecx  +
mov [ebp+var_20] eax +
cmp eax edi +
jz loc_419031  +
push edi  +
push edi  +
push esi  +
push eax  +
push esi  +
push [ebp+lpWideCharStr]  +
push edi  +
push [ebp+arg_4]  +
call ebx  +
cmp eax edi +
jnz loc_419026  +
push [ebp+var_20]  +
call sub_40FFD7  +
pop ecx  +
mov [ebp+var_20] edi +
jmp loc_419031  +
cmp [ebp+cchMultiByte] 0FFFFFFFFh +
jz loc_419031  +
mov ecx [ebp+var_30] +
mov [ecx] eax +
push [ebp+lpWideCharStr]  +
call sub_4155D5  +
pop ecx  +
mov eax [ebp+var_20] +
lea esp [ebp-40h] +
pop edi  +
pop esi  +
pop ebx  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_40FFC3  +
leave   +
retn   +
***
sub ecx eax +
and ecx 0Fh +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_419880  +
***
push ecx  +
lea ecx [esp+8] +
sub ecx eax +
and ecx 7 +
add eax ecx +
sbb ecx ecx +
or eax ecx +
pop ecx  +
jmp sub_419880  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
test byte ptr [esi+0Ch] 40h +
push edi  +
jnz loc_4191E9  +
push esi  +
call sub_418B86  +
pop ecx  +
mov ebx offset unk_41E0D0 +
cmp eax 0FFFFFFFFh +
jz loc_4190F2  +
push esi  +
call sub_418B86  +
pop ecx  +
cmp eax 0FFFFFFFEh +
jz loc_4190F2  +
push esi  +
call sub_418B86  +
sar eax 5 +
push esi  +
lea edi dword_420FE0[eax*4] +
call sub_418B86  +
and eax 1Fh +
pop ecx  +
shl eax 6 +
add eax [edi] +
pop ecx  +
jmp loc_4190F4  +
mov eax ebx +
mov al [eax+24h] +
and al 7Fh +
cmp al 2 +
jz loc_4191E9  +
push esi  +
call sub_418B86  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_41913B  +
push esi  +
call sub_418B86  +
pop ecx  +
cmp eax 0FFFFFFFEh +
jz loc_41913B  +
push esi  +
call sub_418B86  +
sar eax 5 +
push esi  +
lea edi dword_420FE0[eax*4] +
call sub_418B86  +
and eax 1Fh +
pop ecx  +
shl eax 6 +
add eax [edi] +
pop ecx  +
jmp loc_41913D  +
mov eax ebx +
mov al [eax+24h] +
and al 7Fh +
cmp al 1 +
jz loc_4191E9  +
push esi  +
call sub_418B86  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_419184  +
push esi  +
call sub_418B86  +
pop ecx  +
cmp eax 0FFFFFFFEh +
jz loc_419184  +
push esi  +
call sub_418B86  +
sar eax 5 +
push esi  +
lea edi dword_420FE0[eax*4] +
call sub_418B86  +
and eax 1Fh +
pop ecx  +
shl eax 6 +
add eax [edi] +
pop ecx  +
jmp loc_419186  +
mov eax ebx +
test byte ptr [eax+4] 80h +
jz loc_4191E9  +
push dword ptr [ebp+WideCharStr]  +
lea eax [ebp+UsedDefaultChar] +
push 5  +
push eax  +
lea eax [ebp+var_10] +
push eax  +
call sub_418D49  +
add esp 10h +
test eax eax +
jz loc_4191AC  +
mov eax 0FFFFh +
jmp loc_419209  +
xor edi edi +
cmp [ebp+var_10] edi +
jle loc_4191E3  +
dec dword ptr [esi+4]  +
js loc_4191CA  +
mov eax [esi] +
mov cl byte ptr [ebp+edi+UsedDefaultChar] +
mov [eax] cl +
mov ecx [esi] +
movzx eax byte ptr [ecx] +
inc ecx  +
mov [esi] ecx +
jmp loc_4191D8  +
movsx eax byte ptr [ebp+edi+UsedDefaultChar] +
push esi  +
push eax  +
call sub_414710  +
pop ecx  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_4191A5  +
inc edi  +
cmp edi [ebp+var_10] +
jl loc_4191B3  +
mov ax [ebp+WideCharStr] +
jmp loc_419209  +
add dword ptr [esi+4] 0FFFFFFFEh +
js loc_4191FC  +
mov ecx [esi] +
mov eax dword ptr [ebp+WideCharStr] +
mov [ecx] ax +
add dword ptr [esi] 2 +
jmp loc_419209  +
movzx eax [ebp+WideCharStr] +
push esi  +
push eax  +
call sub_419AFB  +
pop ecx  +
pop ecx  +
mov ecx [ebp+var_4] +
pop edi  +
pop esi  +
xor ecx ebp +
pop ebx  +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
push ebx  +
push esi  +
mov esi [ebp+arg_4] +
xor ebx ebx +
cmp esi ebx +
jz loc_419245  +
cmp [ebp+arg_8] ebx +
jz loc_419245  +
cmp [esi] bl +
jnz loc_41924B  +
mov eax [ebp+lpWideCharStr] +
cmp eax ebx +
jz loc_419245  +
xor ecx ecx +
mov [eax] cx +
xor eax eax +
pop esi  +
pop ebx  +
leave   +
retn   +
push [ebp+arg_C]  +
lea ecx [ebp+var_10] +
call sub_41006A  +
mov eax [ebp+var_10] +
cmp [eax+14h] ebx +
jnz loc_41927D  +
mov eax [ebp+lpWideCharStr] +
cmp eax ebx +
jz loc_41926C  +
movzx cx byte ptr [esi] +
mov [eax] cx +
cmp [ebp+var_4] bl +
jz loc_419278  +
mov eax [ebp+var_8] +
and dword ptr [eax+70h] 0FFFFFFFDh +
xor eax eax +
inc eax  +
jmp loc_419247  +
lea eax [ebp+var_10] +
push eax  +
movzx eax byte ptr [esi] +
push eax  +
call sub_4109B0  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_41930D  +
mov eax [ebp+var_10] +
mov ecx [eax+0ACh] +
cmp ecx 1 +
jle loc_4192C3  +
cmp [ebp+arg_8] ecx +
jl loc_4192C3  +
xor edx edx +
cmp [ebp+lpWideCharStr] ebx +
setnz dl  +
push edx  +
push [ebp+lpWideCharStr]  +
push ecx  +
push esi  +
push 9  +
push dword ptr [eax+4]  +
call ds:MultiByteToWideChar  +
test eax eax +
mov eax [ebp+var_10] +
jnz loc_4192D3  +
mov ecx [ebp+arg_8] +
cmp ecx [eax+0ACh] +
jb loc_4192EE  +
cmp [esi+1] bl +
jz loc_4192EE  +
mov eax [eax+0ACh] +
cmp [ebp+var_4] bl +
jz loc_419247  +
mov ecx [ebp+var_8] +
and dword ptr [ecx+70h] 0FFFFFFFDh +
jmp loc_419247  +
call sub_41319D  +
mov dword ptr [eax] 2Ah +
cmp [ebp+var_4] bl +
jz loc_419305  +
mov eax [ebp+var_8] +
and dword ptr [eax+70h] 0FFFFFFFDh +
or eax 0FFFFFFFFh +
jmp loc_419247  +
xor eax eax +
cmp [ebp+lpWideCharStr] ebx +
setnz al  +
push eax  +
push [ebp+lpWideCharStr]  +
mov eax [ebp+var_10] +
push 1  +
push esi  +
push 9  +
push dword ptr [eax+4]  +
call ds:MultiByteToWideChar  +
test eax eax +
jnz loc_41926C  +
jmp loc_4192EE  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+lpWideCharStr]  +
call sub_41921D  +
add esp 10h +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 328h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp-4] eax +
test byte_41EDA0 1 +
push esi  +
jz loc_41937F  +
push 0Ah  +
call sub_41112B  +
pop ecx  +
call sub_416CA1  +
test eax eax +
jz loc_419390  +
push 16h  +
call sub_416CB3  +
pop ecx  +
test byte_41EDA0 2 +
jz loc_419467  +
mov [ebp-220h] eax +
mov [ebp-224h] ecx +
mov [ebp-228h] edx +
mov [ebp-22Ch] ebx +
mov [ebp-230h] esi +
mov [ebp-234h] edi +
mov word ptr [ebp-208h] ss +
mov word ptr [ebp-214h] cs +
mov word ptr [ebp-238h] ds +
mov word ptr [ebp-23Ch] es +
mov word ptr [ebp-240h] fs +
mov [ebp-244h] gs +
pushf   +
pop dword ptr [ebp-210h]  +
mov esi [ebp+4] +
lea eax [ebp+4] +
mov [ebp-20Ch] eax +
mov dword ptr [ebp-2D0h] 10001h +
mov [ebp-218h] esi +
mov eax [eax-4] +
push 50h  +
mov [ebp-21Ch] eax +
lea eax [ebp-328h] +
push 0  +
push eax  +
call sub_413F70  +
lea eax [ebp-328h] +
add esp 0Ch +
mov [ebp-2D8h] eax +
lea eax [ebp-2D0h] +
push 0  +
mov dword ptr [ebp-328h] 40000015h +
mov [ebp-31Ch] esi +
mov [ebp-2D4h] eax +
call ds:SetUnhandledExceptionFilter  +
lea eax [ebp-2D8h] +
push eax  +
call ds:UnhandledExceptionFilter  +
push 3  +
call sub_411095  +
pop ecx  +
retn   +
***
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
push edi  +
push ebp  +
push 0  +
push 0  +
push offset loc_41949C  +
push dword ptr [ebp+8]  +
call RtlUnwind  +
pop ebp  +
pop edi  +
pop esi  +
pop ebx  +
mov esp ebp +
pop ebp  +
retn   +
***
push edi  +
mov eax [esp+arg_0] +
push ebp  +
push eax  +
push 0FFFFFFFEh  +
push offset loc_4194A4  +
push large dword ptr fs:0  +
mov eax dword_41E3B0 +
xor eax esp +
push eax  +
lea eax [esp+18h+var_14] +
mov large fs:0 eax +
mov eax [esp+18h+arg_0] +
mov ebx [eax+8] +
mov esi [eax+0Ch] +
cmp esi 0FFFFFFFFh +
jz loc_41955B  +
cmp [esp+18h+arg_4] 0FFFFFFFFh +
jz loc_41952E  +
cmp esi [esp+18h+arg_4] +
jbe loc_41955B  +
lea esi [esi+esi*2] +
mov ecx [ebx+esi*4] +
mov [esp+18h+var_C] ecx +
mov [eax+0Ch] ecx +
cmp dword ptr [ebx+esi*4+4] 0 +
jnz loc_419559  +
push 101h  +
mov eax [ebx+esi*4+8] +
call sub_419599  +
mov eax [ebx+esi*4+8] +
call sub_4195B8  +
jmp loc_419512  +
mov ecx [esp+18h+var_14] +
mov large fs:0 ecx +
add esp 18h +
pop edi  +
pop esi  +
pop ebx  +
retn   +
***
xor eax eax +
mov ecx large fs:0 +
cmp dword ptr [ecx+4] offset loc_4194A4 +
jnz locret_41958F  +
mov edx [ecx+0Ch] +
mov edx [edx+0Ch] +
cmp [ecx+8] edx +
jnz locret_41958F  +
mov eax 1 +
retn   +
***
mov ebx offset unk_41EDA4 +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push 0Ah  +
push 0  +
push [ebp+arg_0]  +
call sub_419EA8  +
add esp 0Ch +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_0] +
push ebx  +
xor ebx ebx +
cmp ecx ebx +
push esi  +
push edi  +
jl loc_419647  +
cmp ecx uNumber +
jnb loc_419647  +
mov eax ecx +
sar eax 5 +
mov esi ecx +
lea edi dword_420FE0[eax*4] +
mov eax [edi] +
and esi 1Fh +
shl esi 6 +
add eax esi +
test byte ptr [eax+4] 1 +
jz loc_419647  +
cmp dword ptr [eax] 0FFFFFFFFh +
jz loc_419647  +
cmp dword_41E000 1 +
jnz loc_41963D  +
sub ecx ebx +
jz loc_419634  +
dec ecx  +
jz loc_41962F  +
dec ecx  +
jnz loc_41963D  +
push ebx  +
push 0FFFFFFF4h  +
jmp loc_419637  +
push ebx  +
push 0FFFFFFF5h  +
jmp loc_419637  +
push ebx  +
push 0FFFFFFF6h  +
call ds:SetStdHandle  +
mov eax [edi] +
or dword ptr [esi+eax] 0FFFFFFFFh +
xor eax eax +
jmp loc_41965C  +
call sub_41319D  +
mov dword ptr [eax] 9 +
call sub_4131B5  +
mov [eax] ebx +
or eax 0FFFFFFFFh +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp eax 0FFFFFFFEh +
jnz loc_41968B  +
call sub_4131B5  +
and dword ptr [eax] 0 +
call sub_41319D  +
mov dword ptr [eax] 9 +
or eax 0FFFFFFFFh +
pop ebp  +
retn   +
push esi  +
xor esi esi +
cmp eax esi +
jl loc_4196B4  +
cmp eax uNumber +
jnb loc_4196B4  +
mov ecx eax +
and eax 1Fh +
sar ecx 5 +
mov ecx dword_420FE0[ecx*4] +
shl eax 6 +
add eax ecx +
test byte ptr [eax+4] 1 +
jnz loc_4196D8  +
call sub_4131B5  +
mov [eax] esi +
call sub_41319D  +
push esi  +
push esi  +
push esi  +
push esi  +
push esi  +
mov dword ptr [eax] 9 +
call sub_413F44  +
add esp 14h +
or eax 0FFFFFFFFh +
jmp loc_4196DA  +
mov eax [eax] +
pop esi  +
pop ebp  +
retn   +
***
call sub_412220  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
mov ecx eax +
and eax 1Fh +
sar ecx 5 +
mov ecx dword_420FE0[ecx*4] +
shl eax 6 +
lea eax [ecx+eax+0Ch] +
push eax  +
call ds:LeaveCriticalSection  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 10h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
xor esi esi +
cmp dword_41EE68 esi +
jz loc_41981F  +
cmp hConsoleOutput 0FFFFFFFEh +
jnz loc_4197DE  +
call sub_419F46  +
mov eax hConsoleOutput +
cmp eax 0FFFFFFFFh +
jnz loc_4197EF  +
mov eax 0FFFFh +
jmp loc_41985F  +
push esi  +
lea ecx [ebp+NumberOfCharsWritten] +
push ecx  +
push 1  +
lea ecx [ebp+WideCharStr] +
push ecx  +
push eax  +
call ds:WriteConsoleW  +
test eax eax +
jnz loc_41986C  +
cmp dword_41EE68 2 +
jnz loc_4197E8  +
call ds:GetLastError  +
cmp eax 78h +
jnz loc_4197E8  +
mov dword_41EE68 esi +
push esi  +
push esi  +
push 5  +
lea eax [ebp+Buffer] +
push eax  +
push 1  +
lea eax [ebp+WideCharStr] +
push eax  +
push esi  +
call ds:GetConsoleOutputCP  +
push eax  +
call ds:WideCharToMultiByte  +
mov ecx hConsoleOutput +
cmp ecx 0FFFFFFFFh +
jz loc_4197E8  +
push esi  +
lea edx [ebp+NumberOfCharsWritten] +
push edx  +
push eax  +
lea eax [ebp+Buffer] +
push eax  +
push ecx  +
call ds:WriteConsoleA  +
test eax eax +
jz loc_4197E8  +
mov ax [ebp+WideCharStr] +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_40FFC3  +
leave   +
retn   +
mov dword_41EE68 1 +
jmp loc_41985B  +
***
sub ecx eax +
sbb eax eax +
not eax  +
and ecx eax +
mov eax esp +
and eax 0FFFFF000h +
cmp ecx eax +
jb loc_4198A2  +
mov eax ecx +
pop ecx  +
xchg eax esp +
mov eax [eax] +
mov [esp+0] eax +
retn   +
sub eax 1000h +
test [eax] eax +
jmp loc_419894  +
***
call sub_412220  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+0Ch] +
mov ecx eax +
and cl 3 +
xor ebx ebx +
cmp cl 2 +
jnz loc_4199AD  +
test eax 108h +
jz loc_4199AD  +
mov eax [esi+8] +
push edi  +
mov edi [esi] +
sub edi eax +
test edi edi +
jle loc_4199AC  +
push edi  +
push eax  +
push esi  +
call sub_418B86  +
pop ecx  +
push eax  +
call sub_418816  +
add esp 0Ch +
cmp eax edi +
jnz loc_4199A5  +
mov eax [esi+0Ch] +
test al al +
jns loc_4199AC  +
and eax 0FFFFFFFDh +
mov [esi+0Ch] eax +
jmp loc_4199AC  +
or dword ptr [esi+0Ch] 20h +
or ebx 0FFFFFFFFh +
pop edi  +
mov eax [esi+8] +
and dword ptr [esi+4] 0 +
mov [esi] eax +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
test esi esi +
jnz loc_4199D7  +
push esi  +
call sub_419A0E  +
pop ecx  +
jmp loc_419A06  +
push esi  +
call sub_419954  +
pop ecx  +
test eax eax +
jz loc_4199E7  +
or eax 0FFFFFFFFh +
jmp loc_419A06  +
test dword ptr [esi+0Ch] 4000h +
jz loc_419A04  +
push esi  +
call sub_418B86  +
push eax  +
call sub_41A099  +
pop ecx  +
neg eax  +
pop ecx  +
sbb eax eax +
jmp loc_419A06  +
xor eax eax +
pop esi  +
pop ebp  +
retn   +
***
call sub_412220  +
mov eax dword_41FF80 +
push dword ptr [eax+esi*4]  +
push esi  +
call sub_418B52  +
pop ecx  +
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ecx  +
push esi  +
mov esi [ebp+arg_4] +
push esi  +
call sub_418B86  +
mov [ebp+arg_4] eax +
mov eax [esi+0Ch] +
pop ecx  +
test al 82h +
jnz loc_419B2F  +
call sub_41319D  +
mov dword ptr [eax] 9 +
or dword ptr [esi+0Ch] 20h +
mov eax 0FFFFh +
jmp loc_419C6C  +
test al 40h +
jz loc_419B40  +
call sub_41319D  +
mov dword ptr [eax] 22h +
jmp loc_419B21  +
test al 1 +
jz loc_419B5B  +
and dword ptr [esi+4] 0 +
test al 10h +
jz loc_419BDD  +
mov ecx [esi+8] +
and eax 0FFFFFFFEh +
mov [esi] ecx +
mov [esi+0Ch] eax +
mov eax [esi+0Ch] +
and dword ptr [esi+4] 0 +
and [ebp+var_4] 0 +
push ebx  +
push 2  +
and eax 0FFFFFFEFh +
pop ebx  +
or eax ebx +
mov [esi+0Ch] eax +
test eax 10Ch +
jnz loc_419BA5  +
call sub_4189AE  +
add eax 20h +
cmp esi eax +
jz loc_419B91  +
call sub_4189AE  +
add eax 40h +
cmp esi eax +
jnz loc_419B9E  +
push [ebp+arg_4]  +
call sub_418945  +
pop ecx  +
test eax eax +
jnz loc_419BA5  +
push esi  +
call sub_4188F7  +
pop ecx  +
test dword ptr [esi+0Ch] 108h +
push edi  +
jz loc_419C36  +
mov eax [esi+8] +
mov edi [esi] +
lea ecx [eax+2] +
mov [esi] ecx +
mov ecx [esi+18h] +
sub edi eax +
sub ecx ebx +
mov [esi+4] ecx +
test edi edi +
jle loc_419BE8  +
push edi  +
push eax  +
push [ebp+arg_4]  +
call sub_418816  +
add esp 0Ch +
mov [ebp+var_4] eax +
jmp loc_419C2B  +
or eax 20h +
mov [esi+0Ch] eax +
jmp loc_419B25  +
mov ecx [ebp+arg_4] +
cmp ecx 0FFFFFFFFh +
jz loc_419C0B  +
cmp ecx 0FFFFFFFEh +
jz loc_419C0B  +
mov eax ecx +
and eax 1Fh +
mov edx ecx +
sar edx 5 +
shl eax 6 +
add eax dword_420FE0[edx*4] +
jmp loc_419C10  +
mov eax offset unk_41E0D0 +
test byte ptr [eax+4] 20h +
jz loc_419C2B  +
push ebx  +
push 0  +
push 0  +
push ecx  +
call sub_417FC0  +
and eax edx +
add esp 10h +
cmp eax 0FFFFFFFFh +
jz loc_419C58  +
mov eax [esi+8] +
mov ebx [ebp+arg_0] +
mov [eax] bx +
jmp loc_419C53  +
push 2  +
lea eax [ebp+var_4] +
push eax  +
push [ebp+arg_4]  +
mov edi ebx +
mov ebx [ebp+arg_0] +
mov word ptr [ebp+var_4] bx +
call sub_418816  +
add esp 0Ch +
mov [ebp+var_4] eax +
cmp [ebp+var_4] edi +
jz loc_419C63  +
or dword ptr [esi+0Ch] 20h +
mov eax 0FFFFh +
jmp loc_419C6A  +
mov eax ebx +
and eax 0FFFFh +
pop edi  +
pop ebx  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
push esi  +
push edi  +
push [ebp+arg_0]  +
lea ecx [ebp+var_14] +
call sub_41006A  +
mov eax [ebp+arg_8] +
mov esi [ebp+arg_4] +
xor edi edi +
cmp eax edi +
jz loc_419C97  +
mov [eax] esi +
cmp esi edi +
jnz loc_419CC7  +
call sub_41319D  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
mov dword ptr [eax] 16h +
call sub_413F44  +
add esp 14h +
cmp [ebp+var_8] 0 +
jz loc_419CC0  +
mov eax [ebp+var_C] +
and dword ptr [eax+70h] 0FFFFFFFDh +
xor eax eax +
jmp loc_419E9F  +
cmp [ebp+arg_C] edi +
jz loc_419CD8  +
cmp [ebp+arg_C] 2 +
jl loc_419C9B  +
cmp [ebp+arg_C] 24h +
jg loc_419C9B  +
mov ecx [ebp+var_14] +
push ebx  +
mov bl [esi] +
mov [ebp+var_4] edi +
lea edi [esi+1] +
cmp dword ptr [ecx+0ACh] 1 +
jle loc_419D04  +
lea eax [ebp+var_14] +
push eax  +
movzx eax bl +
push 8  +
push eax  +
call sub_4159EE  +
mov ecx [ebp+var_14] +
add esp 0Ch +
jmp loc_419D14  +
mov edx [ecx+0C8h] +
movzx eax bl +
movzx eax word ptr [edx+eax*2] +
and eax 8 +
test eax eax +
jz loc_419D1D  +
mov bl [edi] +
inc edi  +
jmp loc_419CE4  +
cmp bl 2Dh +
jnz loc_419D28  +
or [ebp+arg_10] 2 +
jmp loc_419D2D  +
cmp bl 2Bh +
jnz loc_419D30  +
mov bl [edi] +
inc edi  +
mov eax [ebp+arg_C] +
test eax eax +
jl loc_419E86  +
cmp eax 1 +
jz loc_419E86  +
cmp eax 24h +
jg loc_419E86  +
test eax eax +
jnz loc_419D7B  +
cmp bl 30h +
jz loc_419D5F  +
mov [ebp+arg_C] 0Ah +
jmp loc_419D93  +
mov al [edi] +
cmp al 78h +
jz loc_419D72  +
cmp al 58h +
jz loc_419D72  +
mov [ebp+arg_C] 8 +
jmp loc_419D93  +
mov [ebp+arg_C] 10h +
jmp loc_419D85  +
cmp eax 10h +
jnz loc_419D93  +
cmp bl 30h +
jnz loc_419D93  +
mov al [edi] +
cmp al 78h +
jz loc_419D8F  +
cmp al 58h +
jnz loc_419D93  +
inc edi  +
mov bl [edi] +
inc edi  +
mov esi [ecx+0C8h] +
mov eax 0FFFFFFFFh +
xor edx edx +
div  [ebp+arg_C] +
movzx ecx bl +
movzx ecx word ptr [esi+ecx*2] +
test cl 4 +
jz loc_419DB7  +
movsx ecx bl +
sub ecx 30h +
jmp loc_419DD2  +
test ecx 103h +
jz loc_419DF0  +
mov cl bl +
sub cl 61h +
cmp cl 19h +
movsx ecx bl +
ja loc_419DCF  +
sub ecx 20h +
add ecx 0FFFFFFC9h +
cmp ecx [ebp+arg_C] +
jnb loc_419DF0  +
or [ebp+arg_10] 8 +
cmp [ebp+var_4] eax +
jb loc_419E07  +
jnz loc_419DE6  +
cmp ecx edx +
jbe loc_419E07  +
or [ebp+arg_10] 4 +
cmp [ebp+arg_8] 0 +
jnz loc_419E13  +
mov eax [ebp+arg_10] +
dec edi  +
test al 8 +
jnz loc_419E18  +
cmp [ebp+arg_8] 0 +
jz loc_419E01  +
mov edi [ebp+arg_4] +
and [ebp+var_4] 0 +
jmp loc_419E62  +
mov ebx [ebp+var_4] +
imul ebx [ebp+arg_C] +
add ebx ecx +
mov [ebp+var_4] ebx +
mov bl [edi] +
inc edi  +
jmp loc_419DA3  +
mov esi 7FFFFFFFh +
test al 4 +
jnz loc_419E3C  +
test al 1 +
jnz loc_419E62  +
and eax 2 +
jz loc_419E33  +
cmp [ebp+var_4] 80000000h +
ja loc_419E3C  +
test eax eax +
jnz loc_419E62  +
cmp [ebp+var_4] esi +
jbe loc_419E62  +
call sub_41319D  +
test byte ptr [ebp+arg_10] 1 +
mov dword ptr [eax] 22h +
jz loc_419E53  +
or [ebp+var_4] 0FFFFFFFFh +
jmp loc_419E62  +
test byte ptr [ebp+arg_10] 2 +
push 0  +
pop eax  +
setnz al  +
add eax esi +
mov [ebp+var_4] eax +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_419E6B  +
mov [eax] edi +
test byte ptr [ebp+arg_10] 2 +
jz loc_419E74  +
neg [ebp+var_4]  +
cmp [ebp+var_8] 0 +
jz loc_419E81  +
mov eax [ebp+var_C] +
and dword ptr [eax+70h] 0FFFFFFFDh +
mov eax [ebp+var_4] +
jmp loc_419E9E  +
mov eax [ebp+arg_8] +
test eax eax +
jz loc_419E8F  +
mov [eax] esi +
cmp [ebp+var_8] 0 +
jz loc_419E9C  +
mov eax [ebp+var_C] +
and dword ptr [eax+70h] 0FFFFFFFDh +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
push eax  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
cmp dword_41F838 eax +
jnz loc_419EC8  +
push offset off_41E9C8  +
jmp loc_419EC9  +
push eax  +
call sub_419C74  +
add esp 14h +
pop ebp  +
retn   +
***
push ebp  +
mov ebp esp +
push edi  +
push esi  +
push ebx  +
mov ecx [ebp+10h] +
or ecx ecx +
jz loc_419F3A  +
mov esi [ebp+8] +
mov edi [ebp+0Ch] +
mov bh 41h +
mov bl 5Ah +
mov dh 20h +
lea ecx [ecx+0] +
mov ah [esi] +
or ah ah +
mov al [edi] +
jz loc_419F2B  +
or al al +
jz loc_419F2B  +
add esi 1 +
add edi 1 +
cmp ah bh +
jb loc_419F18  +
cmp ah bl +
ja loc_419F18  +
add ah dh +
cmp al bh +
jb loc_419F22  +
cmp al bl +
ja loc_419F22  +
add al dh +
cmp ah al +
jnz loc_419F31  +
sub ecx 1 +
jnz loc_419EFC  +
xor ecx ecx +
cmp ah al +
jz loc_419F3A  +
mov ecx 0FFFFFFFFh +
jb loc_419F3A  +
neg ecx  +
mov eax ecx +
pop ebx  +
pop esi  +
pop edi  +
leave   +
retn   +
***
xor eax eax +
push eax  +
push eax  +
push 3  +
push eax  +
push 3  +
push 40000000h  +
push offset FileName  +
call ds:CreateFileA  +
mov hConsoleOutput eax +
retn   +
***
mov eax hConsoleOutput +
push esi  +
mov esi ds:CloseHandle +
cmp eax 0FFFFFFFFh +
jz loc_419F83  +
cmp eax 0FFFFFFFEh +
jz loc_419F83  +
push eax  +
call esi  +
mov eax dword_41EEE0 +
cmp eax 0FFFFFFFFh +
jz loc_419F95  +
cmp eax 0FFFFFFFEh +
jz loc_419F95  +
push eax  +
call esi  +
pop esi  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
or ebx 0FFFFFFFFh +
cmp esi edi +
jnz loc_419FCC  +
call sub_41319D  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
mov dword ptr [eax] 16h +
call sub_413F44  +
add esp 14h +
or eax ebx +
jmp loc_41A00E  +
test byte ptr [esi+0Ch] 83h +
jz loc_41A009  +
push esi  +
call sub_419954  +
push esi  +
mov ebx eax +
call sub_41A32C  +
push esi  +
call sub_418B86  +
push eax  +
call sub_41A25A  +
add esp 10h +
test eax eax +
jge loc_419FF8  +
or ebx 0FFFFFFFFh +
jmp loc_41A009  +
mov eax [esi+1Ch] +
cmp eax edi +
jz loc_41A009  +
push eax  +
call sub_40FFD7  +
pop ecx  +
mov [esi+1Ch] edi +
mov [esi+0Ch] edi +
mov eax ebx +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn   +
***
call sub_412220  +
pop ecx  +
retn   +
***
call sub_412220  +
pop ecx  +
retn   +
***
mov eax [esp+8] +
mov ecx [esp+10h] +
or ecx eax +
mov ecx [esp+0Ch] +
jnz loc_41A199  +
mov eax [esp+4] +
mul  ecx +
retn 10h  +
***
push ebx  +
mul  ecx +
mov ebx eax +
mov eax [esp+8] +
mul  dword ptr [esp+14h] +
add ebx eax +
mov eax [esp+8] +
mul  ecx +
add edx ebx +
pop ebx  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
push esi  +
call sub_419666  +
pop ecx  +
cmp eax 0FFFFFFFFh +
jz loc_41A21F  +
mov eax dword_420FE0 +
cmp esi 1 +
jnz loc_41A1E2  +
test byte ptr [eax+84h] 1 +
jnz loc_41A1ED  +
cmp esi 2 +
jnz loc_41A203  +
test byte ptr [eax+44h] 1 +
jz loc_41A203  +
push 2  +
call sub_419666  +
push 1  +
mov edi eax +
call sub_419666  +
pop ecx  +
pop ecx  +
cmp eax edi +
jz loc_41A21F  +
push esi  +
call sub_419666  +
pop ecx  +
push eax  +
call ds:CloseHandle  +
test eax eax +
jnz loc_41A21F  +
call ds:GetLastError  +
mov edi eax +
jmp loc_41A221  +
xor edi edi +
push esi  +
call sub_4195DB  +
mov eax esi +
sar eax 5 +
mov eax dword_420FE0[eax*4] +
and esi 1Fh +
shl esi 6 +
pop ecx  +
mov byte ptr [eax+esi+4] 0 +
test edi edi +
jz loc_41A24F  +
push edi  +
call sub_4131CD  +
pop ecx  +
or eax 0FFFFFFFFh +
jmp loc_41A251  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn   +
***
call sub_412220  +
pop ecx  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_0] +
mov eax [esi+0Ch] +
test al 83h +
jz loc_41A35A  +
test al 8 +
jz loc_41A35A  +
push dword ptr [esi+8]  +
call sub_40FFD7  +
and dword ptr [esi+0Ch] 0FFFFFBF7h +
xor eax eax +
pop ecx  +
mov [esi] eax +
mov [esi+8] eax +
mov [esi+4] eax +
pop esi  +
pop ebp  +
retn   +
***
lea eax [edx-1] +
pop ebx  +
retn   +
***
xor eax eax +
mov al [esp+8] +
push ebx  +
mov ebx eax +
shl eax 8 +
mov edx [esp+8] +
test edx 3 +
jz loc_41A39D  +
mov cl [edx] +
add edx 1 +
cmp cl bl +
jz loc_41A360  +
test cl cl +
jz loc_41A3E6  +
test edx 3 +
jnz loc_41A388  +
or ebx eax +
push edi  +
mov eax ebx +
shl ebx 10h +
push esi  +
or ebx eax +
mov ecx [edx] +
mov edi 7EFEFEFFh +
mov eax ecx +
mov esi edi +
xor ecx ebx +
add esi eax +
add edi ecx +
xor ecx 0FFFFFFFFh +
xor eax 0FFFFFFFFh +
xor ecx edi +
xor eax esi +
add edx 4 +
and ecx 81010100h +
jnz loc_41A3EA  +
and eax 81010100h +
jz loc_41A3A8  +
and eax 1010100h +
jnz loc_41A3E4  +
and esi 80000000h +
jnz loc_41A3A8  +
pop esi  +
pop edi  +
pop ebx  +
xor eax eax +
retn   +
***
mov eax [edx-4] +
cmp al bl +
jz loc_41A427  +
test al al +
jz loc_41A3E4  +
cmp ah bl +
jz loc_41A420  +
test ah ah +
jz loc_41A3E4  +
shr eax 10h +
cmp al bl +
jz loc_41A419  +
test al al +
jz loc_41A3E4  +
cmp ah bl +
jz loc_41A412  +
test ah ah +
jz loc_41A3E4  +
jmp loc_41A3A8  +
***
pop esi  +
pop edi  +
lea eax [edx-1] +
pop ebx  +
retn   +
***
lea eax [edx-2] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
lea eax [edx-3] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
lea eax [edx-4] +
pop esi  +
pop edi  +
pop ebx  +
retn   +
***
and dword ptr [esi] 0 +
pop ebx  +
pop esi  +
retn   +
***
add ebx ebp +
push es  +
mov dword ptr [esi] 28h +
pop edi  +
mov eax esi +
pop esi  +
retn   +
***
cmp byte ptr [ecx+8] 0 +
mov dword ptr [ecx] offset off_4025F4 +
jz locret_41A589  +
mov ecx [ecx+4] +
test ecx ecx +
jz locret_41A589  +
push ecx  +
call ds:HeapDestroy  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapAlloc  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp dword ptr [ebp+8] 0 +
jz loc_41A5C4  +
push dword ptr [ebp+8]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapFree  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
xor eax eax +
cmp [ebp+8] eax +
jnz loc_41A5E2  +
push dword ptr [ebp+0Ch]  +
mov eax [ecx] +
call dword ptr [eax]  +
jmp loc_41A603  +
cmp [ebp+0Ch] eax +
jnz loc_41A5F3  +
push dword ptr [ebp+8]  +
mov eax [ecx] +
call dword ptr [eax+4]  +
xor eax eax +
jmp loc_41A603  +
push dword ptr [ebp+0Ch]  +
push dword ptr [ebp+8]  +
push eax  +
push dword ptr [ecx+4]  +
call ds:HeapReAlloc  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push dword ptr [ebp+8]  +
push 0  +
push dword ptr [ecx+4]  +
call ds:HeapSize  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi ecx +
call sub_41A56F  +
test byte ptr [ebp+8] 1 +
jz loc_41A642  +
push esi  +
call sub_40FFB3  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
push ebp  +
mov ebp esp +
mov eax ecx +
mov ecx [ebp+8] +
mov [eax+4] ecx +
mov dword ptr [eax] offset off_402608 +
xor ecx ecx +
mov dword ptr [eax+14h] 2 +
mov [eax+0Ch] ecx +
mov [eax+10h] ecx +
mov [eax+18h] cx +
mov [eax+1Ah] cx +
mov [eax+8] eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mul  [ebp+arg_8] +
test edx edx +
ja loc_41A698  +
cmp eax 0FFFFFFFFh +
jbe loc_41A69F  +
mov eax 80070057h +
pop ebp  +
retn   +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ecx+4] +
mov eax [ecx] +
pop ebp  +
jmp dword ptr [eax+4]  +
***
mov eax ecx +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
test byte ptr [ebp+8] 1 +
push esi  +
mov esi ecx +
mov dword ptr [esi] offset off_402608 +
jz loc_41A6F6  +
push esi  +
call sub_40FFB3  +
pop ecx  +
mov eax esi +
pop esi  +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_4] +
mov ecx [ebp+arg_8] +
or edx 0FFFFFFFFh +
sub edx eax +
cmp edx ecx +
jnb loc_41A71D  +
mov eax 80070057h +
pop ebp  +
retn   +
add eax ecx +
mov ecx [ebp+arg_0] +
mov [ecx] eax +
xor eax eax +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+8] +
push edi  +
push dword ptr [ebp+0Ch]  +
add esi 8 +
and esi 0FFFFFFF8h +
lea eax [ebp+8] +
push esi  +
push eax  +
mov edi ecx +
call sub_41A684  +
add esp 0Ch +
test eax eax +
jl loc_41A789  +
push dword ptr [ebp+8]  +
lea eax [ebp+8] +
push 10h  +
push eax  +
call sub_41A702  +
add esp 0Ch +
test eax eax +
jl loc_41A789  +
mov ecx [edi+4] +
push dword ptr [ebp+8]  +
mov eax [ecx] +
call dword ptr [eax]  +
test eax eax +
jz loc_41A789  +
dec esi  +
and dword ptr [eax+4] 0 +
mov [eax] edi +
mov dword ptr [eax+0Ch] 1 +
mov [eax+8] esi +
jmp loc_41A78B  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+0Ch] +
push edi  +
push dword ptr [ebp+10h]  +
add esi 8 +
and esi 0FFFFFFF8h +
lea eax [ebp+0Ch] +
push esi  +
push eax  +
mov edi ecx +
call sub_41A684  +
add esp 0Ch +
test eax eax +
jl loc_41A7E9  +
push dword ptr [ebp+0Ch]  +
lea eax [ebp+0Ch] +
push 10h  +
push eax  +
call sub_41A702  +
add esp 0Ch +
test eax eax +
jl loc_41A7E9  +
push dword ptr [ebp+0Ch]  +
mov ecx [edi+4] +
push dword ptr [ebp+8]  +
mov eax [ecx] +
call dword ptr [eax+8]  +
test eax eax +
jz loc_41A7E9  +
dec esi  +
mov [eax+8] esi +
jmp loc_41A7EB  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
xor ebx ebx +
cmp [ebp+hModule] ebx +
push esi  +
push edi  +
jz loc_41A90F  +
cmp [ebp+arg_4] ebx +
jz loc_41A90F  +
mov esi ds:FindResourceExW +
push ebx  +
push 1  +
mov edi offset Type +
push edi  +
push [ebp+hModule]  +
call esi  +
cmp eax ebx +
jz loc_41A907  +
mov ebx ds:LoadResource +
push eax  +
push [ebp+hModule]  +
call ebx  +
test eax eax +
mov [ebp+hModule] eax +
jz loc_41A907  +
push 0  +
push 1  +
push edi  +
push [ebp+arg_4]  +
call esi  +
test eax eax +
jz loc_41A907  +
push eax  +
push [ebp+arg_4]  +
call ebx  +
test eax eax +
jz loc_41A907  +
mov edx [ebp+hModule] +
mov ecx 0FECDFECDh +
cmp [edx] ecx +
jnz loc_41A90F  +
cmp [eax] ecx +
jnz loc_41A90F  +
push 4  +
pop ecx  +
lea edi [eax+1Ch] +
lea esi [edx+1Ch] +
xor ebx ebx +
cmps   +
jz loc_41A902  +
push 4  +
lea edi [eax+2Ch] +
pop ecx  +
lea esi [edx+2Ch] +
xor eax eax +
cmps   +
jnz loc_41A90F  +
xor eax eax +
inc eax  +
jmp loc_41A911  +
push 0Dh  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push esi  +
xor esi esi +
cmp [ebp+lpLibFileName] esi +
push edi  +
jnz loc_41A930  +
xor eax eax +
jmp loc_41A99E  +
cmp [ebp+arg_4] esi +
jz loc_41A98B  +
push esi  +
push esi  +
push 3  +
push esi  +
push 5  +
push 80000000h  +
push [ebp+lpLibFileName]  +
call ds:CreateFileW  +
mov edi eax +
cmp edi 0FFFFFFFFh +
jz loc_41A92C  +
push esi  +
push esi  +
push esi  +
push 8  +
push esi  +
push edi  +
call ds:CreateFileMappingW  +
push edi  +
mov edi ds:CloseHandle +
mov ebx eax +
call edi  +
cmp ebx esi +
jz loc_41A92C  +
push esi  +
push esi  +
push esi  +
push 1  +
push ebx  +
call ds:MapViewOfFile  +
push ebx  +
mov [ebp+lpLibFileName] eax +
call edi  +
mov eax [ebp+lpLibFileName] +
cmp eax esi +
jz loc_41A92C  +
or eax 1 +
jmp loc_41A99E  +
xor eax eax +
cmp [ebp+arg_8] esi +
setnz al  +
push eax  +
push esi  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryExW  +
pop edi  +
pop esi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 44h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
push 20h  +
lea eax [ebp+LCData] +
push eax  +
push 8  +
push 404h  +
mov esi 0C04h +
call ds:GetLocaleInfoW  +
test eax eax +
jz loc_41A9FE  +
push 3  +
lea eax [ebp+LCData] +
push offset dword_402CC0  +
push eax  +
call sub_41B9BC  +
add esp 0Ch +
mov esi eax +
neg esi  +
sbb esi esi +
and esi 0FFFFF800h +
add esi 0C04h +
mov ecx [ebp+var_4] +
mov ax si +
xor ecx ebp +
pop esi  +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
pop ebp  +
jmp ds:FreeLibrary  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 120h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi 11Ch +
push esi  +
lea eax [ebp+VersionInformation] +
push 0  +
push eax  +
call sub_413F70  +
add esp 0Ch +
lea eax [ebp+VersionInformation] +
mov [ebp+VersionInformation.dwOSVersionInfoSize] esi +
mov esi ds:GetVersionExW +
push eax  +
call esi  +
test eax eax +
jnz loc_41AA7D  +
lea eax [ebp+VersionInformation] +
push eax  +
mov [ebp+VersionInformation.dwOSVersionInfoSize] 114h +
call esi  +
mov ecx [ebp+VersionInformation.dwPlatformId] +
mov edx [ebp+VersionInformation.dwMajorVersion] +
xor eax eax +
dec ecx  +
pop esi  +
jz loc_41AAD1  +
dec ecx  +
jnz loc_41AAF4  +
cmp edx 5 +
jnz loc_41AAC9  +
mov ecx [ebp+VersionInformation.dwMinorVersion] +
sub ecx eax +
jz loc_41AAC5  +
dec ecx  +
jz loc_41AABA  +
dec ecx  +
jz loc_41AAAB  +
push 14h  +
jmp loc_41AB1C  +
cmp [ebp+var_C] 1 +
jb loc_41AAB5  +
push 10h  +
pop eax  +
or eax 4 +
jmp loc_41AAF4  +
cmp [ebp+var_C] 2 +
jb loc_41AAB5  +
push 8  +
jmp loc_41AAB4  +
push 4  +
jmp loc_41AB1C  +
cmp edx 4 +
ja loc_41AB00  +
push 2  +
pop eax  +
cmp edx 4 +
jnz loc_41AAF4  +
cmp [ebp+VersionInformation.dwMinorVersion] 0 +
jz loc_41AAF1  +
cmp [ebp+VersionInformation.dwMinorVersion] 0Ah +
jz loc_41AAF1  +
cmp [ebp+VersionInformation.dwMinorVersion] 5Ah +
jnz loc_41AAF4  +
xor eax eax +
inc eax  +
mov ecx [ebp+var_4] +
xor ecx ebp +
call sub_40FFC3  +
leave   +
retn   +
cmp edx 6 +
jnz loc_41AB1F  +
cmp [ebp+VersionInformation.dwMinorVersion] 0 +
jnz loc_41AB1F  +
cmp [ebp+VersionInformation.dwBuildNumber] 1554h +
jnb loc_41AB1F  +
push 40h  +
pop eax  +
jmp loc_41AAF4  +
push 20h  +
jmp loc_41AB1C  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push ebx  +
push edi  +
mov edi [ebp+arg_0] +
xor ebx ebx +
cmp edi ebx +
jz loc_41ABED  +
cmp [ebp+arg_4] ebx +
jz loc_41ABED  +
cmp [ebp+arg_8] ebx +
jz loc_41ABED  +
push esi  +
movzx eax word ptr [edi] +
cmp ax 61h +
jnb loc_41AB72  +
cmp ax 7Ah +
jbe loc_41AB72  +
cmp ax 41h +
jnb loc_41AB6A  +
cmp ax 5Ah +
ja loc_41ABA2  +
movzx eax ax +
sub eax 41h +
jmp loc_41AB78  +
movzx eax ax +
sub eax 61h +
cmp eax 1Ah +
jnb loc_41ABA2  +
mov esi ds:dword_402B88[eax*4] +
test esi esi +
jz loc_41ABA2  +
jmp loc_41AB9A  +
push eax  +
push edi  +
call sub_41020C  +
test eax eax +
pop ecx  +
pop ecx  +
jz loc_41ABAD  +
add esi 8 +
mov eax [esi] +
cmp word ptr [eax] 0 +
jnz loc_41AB8A  +
mov edi [ebp+arg_4] +
inc ebx  +
cmp ebx 2 +
jl loc_41AB4F  +
jmp loc_41ABEC  +
mov esi [esi+4] +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_41ABB5  +
sub eax edx +
sar eax 1 +
cmp eax 55h +
jnb loc_41ABEC  +
mov eax esi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_41ABCD  +
sub eax edx +
sar eax 1 +
lea eax [eax+eax+2] +
push eax  +
push esi  +
push [ebp+arg_8]  +
call loc_413FF0  +
add esp 0Ch +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
mov esi [ebp+arg_4] +
test esi esi +
jz loc_41AC43  +
cmp [ebp+arg_8] 0 +
jz loc_41AC43  +
push 2  +
push 55h  +
push esi  +
push [ebp+arg_0]  +
call sub_41B857  +
test eax eax +
jz loc_41AC43  +
push 2  +
push 55h  +
push [ebp+arg_8]  +
push esi  +
call sub_41B8FD  +
mov eax [ebp+arg_C] +
test eax eax +
jz loc_41AC3E  +
and word ptr [eax] 0 +
push eax  +
push [ebp+arg_8]  +
push esi  +
call sub_41AB28  +
xor eax eax +
inc eax  +
jmp loc_41AC45  +
xor eax eax +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 14h +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
xor esi esi +
cmp word_41FA00 si +
jnz loc_41ACE7  +
lea eax [ebp+hKey] +
push eax  +
push 1  +
push esi  +
push offset aSoftwareMicr_2  +
push 80000002h  +
mov [ebp+cbData] 6 +
call ds:RegOpenKeyExW  +
test eax eax +
jnz loc_41ACE7  +
push edi  +
lea eax [ebp+cbData] +
push eax  +
lea eax [ebp+Data] +
push eax  +
push esi  +
push esi  +
push offset aLocale  +
push [ebp+hKey]  +
call ds:RegQueryValueExW  +
push [ebp+hKey]  +
mov edi eax +
call ds:RegCloseKey  +
cmp edi esi +
pop edi  +
jnz loc_41ACE7  +
push 3  +
push ds:off_402A40[esi*8]  +
lea eax [ebp+Data] +
push eax  +
call sub_410905  +
add esp 0Ch +
test eax eax +
jz loc_41ACD9  +
inc esi  +
cmp esi 1Ch +
jb loc_41ACB8  +
jmp loc_41ACE7  +
mov ax ds:word_402A44[esi*8] +
mov word_41FA00 ax +
mov ecx [ebp+var_4] +
mov ax word_41FA00 +
xor ecx ebp +
pop esi  +
call sub_40FFC3  +
leave   +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
xor eax eax +
test ecx ecx +
jz loc_41AD15  +
cmp ecx 7FFFFFFFh +
jbe loc_41AD1A  +
mov eax 80070057h +
test eax eax +
jl loc_41AD58  +
push ebx  +
push esi  +
push edi  +
mov edi [ebp+arg_0] +
lea eax [ebp+arg_C] +
push eax  +
push [ebp+arg_8]  +
lea esi [ecx-1] +
push esi  +
push edi  +
xor ebx ebx +
call sub_410D2C  +
add esp 10h +
test eax eax +
jl loc_41AD4A  +
cmp eax esi +
ja loc_41AD4A  +
jnz loc_41AD53  +
and [edi+esi*2] bx +
jmp loc_41AD53  +
and [edi+esi*2] bx +
mov ebx 8007007Ah +
pop edi  +
pop esi  +
mov eax ebx +
pop ebx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 20Ch +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
mov eax [ebp+arg_C] +
test eax eax +
mov edx [ebp+arg_4] +
mov ecx [ebp+arg_8] +
push esi  +
mov esi [ebp+arg_0] +
jz loc_41AE2F  +
test esi esi +
jz loc_41AE2F  +
test edx edx +
push eax  +
lea eax [ebp+LibFileName] +
jz loc_41ADBF  +
test ecx ecx +
jz loc_41ADB7  +
push ecx  +
push edx  +
push offset aSSS_mui  +
push 104h  +
push eax  +
call sub_41ACFF  +
add esp 18h +
jmp loc_41ADEC  +
push edx  +
push offset aSS_mui  +
jmp loc_41ADC9  +
test ecx ecx +
jz loc_41ADD9  +
push ecx  +
push offset a_SS_mui  +
push 104h  +
push eax  +
call sub_41ACFF  +
add esp 14h +
jmp loc_41ADEC  +
push offset a_S_mui  +
push 104h  +
push eax  +
call sub_41ACFF  +
add esp 10h +
test eax eax +
jl loc_41AE2F  +
push ebx  +
push [ebp+arg_14]  +
lea eax [ebp+LibFileName] +
push [ebp+arg_10]  +
push eax  +
call sub_41A91D  +
mov ebx eax +
test ebx ebx +
jz loc_41AE2A  +
push ebx  +
push esi  +
call sub_41A879  +
test eax eax +
jnz loc_41AE2A  +
test bl 1 +
push ebx  +
jz loc_41AE22  +
call ds:UnmapViewOfFile  +
jmp loc_41AE28  +
call ds:FreeLibrary  +
xor ebx ebx +
mov eax ebx +
pop ebx  +
jmp loc_41AE31  +
xor eax eax +
mov ecx [ebp+var_4] +
xor ecx ebp +
pop esi  +
call sub_40FFC3  +
leave   +
retn 18h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
sub esp 42Ch +
mov eax dword_41E3B0 +
xor eax ebp +
mov [ebp+var_4] eax +
push esi  +
mov esi [ebp+arg_0] +
push edi  +
xor edi edi +
cmp esi edi +
mov [ebp+lpLibFileName] esi +
mov [ebp+FilePart] edi +
jnz loc_41AE78  +
xor eax eax +
jmp loc_41B6F3  +
test [ebp+arg_4] 0FFFFFFF3h +
jnz loc_41AE71  +
push ebx  +
call sub_41AA24  +
mov dword_41FA04 eax +
and al 20h +
neg al  +
sbb eax eax +
and eax 1Eh +
inc eax  +
inc eax  +
push eax  +
push edi  +
push esi  +
call ds:LoadLibraryExW  +
mov ebx eax +
cmp ebx edi +
jz loc_41AEF9  +
mov eax dword_41FA04 +
xor esi esi +
test al 60h +
jnz loc_41B6F0  +
mov ecx eax +
and cl 78h +
neg cl  +
sbb ecx ecx +
and al 66h +
neg ecx  +
neg al  +
mov [ebp+var_420] ecx +
sbb eax eax +
neg eax  +
mov [ebp+var_41C] eax +
lea eax [ebp+FilePart] +
push eax  +
lea eax [ebp+LibFileName] +
push eax  +
push 104h  +
push edi  +
push [ebp+lpLibFileName]  +
push edi  +
call ds:SearchPathW  +
test eax eax +
jnz loc_41AF00  +
xor eax eax +
jmp loc_41B6F2  +
mov eax [ebp+FilePart] +
cmp eax edi +
jnz loc_41AF1E  +
lea eax [ebp+LibFileName] +
mov [ebp+FilePart] eax +
mov [ebp+var_418] edi +
jmp loc_41AF2E  +
lea ecx [ebp+LibFileName] +
mov [ebp+var_418] ecx +
mov [eax-2] di +
push offset Type  +
push 1  +
push ebx  +
call ds:FindResourceW  +
test eax eax +
jz loc_41B68B  +
cmp [ebp+arg_8] di +
jnz loc_41B616  +
mov al byte ptr dword_41FA04 +
test al 4 +
jz loc_41B3B7  +
call ds:GetUserDefaultUILanguage  +
movzx eax ax +
cmp ax 404h +
mov [ebp+var_424] eax +
jnz loc_41AF7E  +
call sub_41A9AA  +
movzx eax ax +
mov [ebp+var_424] eax +
mov eax [ebp+arg_4] +
and eax 8 +
mov [ebp+var_428] eax +
mov edi offset aMui04hx +
cmp [ebp+var_428] 0 +
jz loc_41B078  +
lea eax [ebp+var_208] +
push eax  +
lea eax [ebp+var_15C] +
push eax  +
lea eax [ebp+var_B0] +
push eax  +
push [ebp+var_424]  +
call sub_41ABF8  +
test eax eax +
jz loc_41B285  +
push [ebp+var_41C]  +
lea eax [ebp+var_B0] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
test esi esi +
jnz loc_41B28F  +
push [ebp+var_41C]  +
lea eax [ebp+var_15C] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
test esi esi +
jnz loc_41B28F  +
cmp word ptr [ebp+var_208] ax +
jz loc_41B05A  +
push [ebp+var_41C]  +
lea eax [ebp+var_208] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
test esi esi +
jnz loc_41B28F  +
cmp word ptr [ebp+var_424] 0C04h +
jnz loc_41B29D  +
mov [ebp+var_424] 404h +
jmp loc_41AF8F  +
movzx eax word ptr [ebp+var_424] +
push eax  +
push edi  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_41ACFF  +
add esp 10h +
push [ebp+var_41C]  +
lea eax [ebp+var_B0] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
test esi esi +
jnz loc_41B28F  +
push eax  +
lea eax [ebp+var_15C] +
push eax  +
lea eax [ebp+var_B0] +
push eax  +
push [ebp+var_424]  +
call sub_41ABF8  +
test eax eax +
jz loc_41B13A  +
push 2  +
lea eax [ebp+var_15C] +
push eax  +
call sub_41B76E  +
movzx eax ax +
test ax ax +
jz loc_41B13A  +
movzx eax ax +
push eax  +
push edi  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_41ACFF  +
add esp 10h +
push [ebp+var_41C]  +
lea eax [ebp+var_B0] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
test esi esi +
jnz loc_41B28F  +
cmp word ptr [ebp+var_424] 0C04h +
jz loc_41B069  +
call ds:GetSystemDefaultUILanguage  +
movzx eax ax +
cmp ax word ptr [ebp+var_424] +
mov [ebp+var_428] eax +
jz loc_41B21F  +
movzx eax ax +
push eax  +
push edi  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_41ACFF  +
add esp 10h +
push [ebp+var_41C]  +
lea eax [ebp+var_B0] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
test esi esi +
jnz loc_41B28F  +
push eax  +
lea eax [ebp+var_15C] +
push eax  +
lea eax [ebp+var_B0] +
push eax  +
push [ebp+var_428]  +
call sub_41ABF8  +
test eax eax +
jz loc_41B21F  +
push 2  +
lea eax [ebp+var_15C] +
push eax  +
call sub_41B76E  +
movzx eax ax +
test ax ax +
jz loc_41B21F  +
movzx eax ax +
push eax  +
push edi  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_41ACFF  +
add esp 10h +
push [ebp+var_41C]  +
lea eax [ebp+var_B0] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
test esi esi +
jnz loc_41B28F  +
mov eax 409h +
cmp word ptr [ebp+var_424] ax +
jz loc_41B25F  +
cmp word ptr [ebp+var_428] ax +
jz loc_41B25F  +
push [ebp+var_41C]  +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push offset aMui0409  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
test esi esi +
jnz loc_41B28F  +
push [ebp+var_41C]  +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push 0  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
test esi esi +
jnz loc_41B28F  +
xor edi edi +
cmp esi edi +
jz loc_41B68B  +
push ebx  +
call ds:FreeLibrary  +
mov eax esi +
jmp loc_41B6F2  +
call ds:GetSystemDefaultUILanguage  +
movzx edi ax +
cmp di word ptr [ebp+var_424] +
jz loc_41B368  +
lea eax [ebp+var_208] +
push eax  +
lea eax [ebp+var_15C] +
push eax  +
lea eax [ebp+var_B0] +
push eax  +
push edi  +
call sub_41ABF8  +
test eax eax +
jz loc_41B689  +
push [ebp+var_41C]  +
lea eax [ebp+var_B0] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
test esi esi +
jnz loc_41B28F  +
push [ebp+var_41C]  +
lea eax [ebp+var_15C] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
test esi esi +
jnz loc_41B28F  +
cmp word ptr [ebp+var_208] ax +
jz loc_41B368  +
push [ebp+var_41C]  +
lea eax [ebp+var_208] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
test esi esi +
jnz loc_41B28F  +
mov eax 409h +
cmp word ptr [ebp+var_424] ax +
jz loc_41B25F  +
cmp di ax +
jz loc_41B25F  +
push 0  +
lea ecx [ebp+var_15C] +
push ecx  +
lea ecx [ebp+var_B0] +
push ecx  +
push eax  +
call sub_41ABF8  +
push [ebp+var_41C]  +
lea eax [ebp+var_B0] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
jmp loc_41B24D  +
test al 3 +
jz loc_41B68B  +
call sub_41AC4F  +
test byte ptr [ebp+arg_4] 8 +
movzx eax ax +
mov [ebp+var_428] eax +
jz loc_41B4EB  +
lea ecx [ebp+var_208] +
push ecx  +
lea ecx [ebp+var_15C] +
push ecx  +
lea ecx [ebp+var_B0] +
push ecx  +
push eax  +
call sub_41ABF8  +
test eax eax +
jz loc_41B68B  +
push [ebp+var_41C]  +
lea eax [ebp+var_B0] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
cmp esi edi +
jnz loc_41B28F  +
push [ebp+var_41C]  +
lea eax [ebp+var_15C] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
cmp esi edi +
jnz loc_41B28F  +
cmp word ptr [ebp+var_208] di +
jz loc_41B490  +
push [ebp+var_41C]  +
lea eax [ebp+var_208] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
cmp esi edi +
jnz loc_41B28F  +
mov eax 409h +
cmp word ptr [ebp+var_428] ax +
jz loc_41B5E8  +
push edi  +
lea ecx [ebp+var_15C] +
push ecx  +
lea ecx [ebp+var_B0] +
push ecx  +
push eax  +
call sub_41ABF8  +
push [ebp+var_41C]  +
lea eax [ebp+var_B0] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
cmp esi edi +
jnz loc_41B28F  +
jmp loc_41B5E8  +
movzx eax ax +
push eax  +
mov edi offset aMui04hx +
push edi  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_41ACFF  +
add esp 10h +
push [ebp+var_41C]  +
lea eax [ebp+var_B0] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
test esi esi +
jnz loc_41B28F  +
push eax  +
lea eax [ebp+var_15C] +
push eax  +
lea eax [ebp+var_B0] +
push eax  +
push [ebp+var_428]  +
call sub_41ABF8  +
test eax eax +
jz loc_41B5AE  +
push 2  +
lea eax [ebp+var_15C] +
push eax  +
call sub_41B76E  +
movzx eax ax +
test ax ax +
jz loc_41B5AE  +
movzx eax ax +
push eax  +
push edi  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_41ACFF  +
add esp 10h +
push [ebp+var_41C]  +
lea eax [ebp+var_B0] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
test esi esi +
jnz loc_41B28F  +
cmp word ptr [ebp+var_428] 409h +
jz loc_41B5E6  +
push [ebp+var_41C]  +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push offset aMui0409  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
test esi esi +
jnz loc_41B28F  +
xor edi edi +
push [ebp+var_41C]  +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push edi  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
cmp esi edi +
jnz loc_41B28F  +
jmp loc_41B287  +
test byte ptr dword_41FA04 7 +
jz loc_41B68B  +
test byte ptr [ebp+arg_4] 8 +
jz loc_41B66C  +
push edi  +
lea eax [ebp+var_15C] +
push eax  +
lea eax [ebp+var_B0] +
push eax  +
push dword ptr [ebp+arg_8]  +
call sub_41ABF8  +
test eax eax +
jz loc_41B68B  +
push [ebp+var_41C]  +
lea eax [ebp+var_B0] +
push [ebp+var_420]  +
push [ebp+FilePart]  +
push eax  +
push [ebp+var_418]  +
push ebx  +
call sub_41AD5F  +
mov esi eax +
jmp loc_41B287  +
movzx eax [ebp+arg_8] +
push eax  +
push offset aMui04hx  +
lea eax [ebp+var_B0] +
push 55h  +
push eax  +
call sub_41ACFF  +
add esp 10h +
jmp loc_41B640  +
xor edi edi +
test bl 1 +
jz loc_41B6F0  +
push ebx  +
call ds:FreeLibrary  +
cmp [ebp+var_420] edi +
jz loc_41B6D5  +
push [ebp+FilePart]  +
lea eax [ebp+LibFileName] +
push [ebp+var_418]  +
push offset aSS  +
push 104h  +
push eax  +
call sub_41ACFF  +
add esp 14h +
push edi  +
push 1  +
lea eax [ebp+LibFileName] +
push eax  +
call sub_41A91D  +
jmp loc_41B6EE  +
xor eax eax +
cmp [ebp+var_41C] edi +
setnz al  +
push eax  +
push edi  +
push [ebp+lpLibFileName]  +
call ds:LoadLibraryExW  +
mov ebx eax +
mov eax ebx +
pop ebx  +
mov ecx [ebp+var_4] +
pop edi  +
xor ecx ebp +
pop esi  +
call sub_40FFC3  +
leave   +
retn 0Ch  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+8] +
mov ecx [ebp+0Ch] +
movzx eax word ptr [eax] +
movzx ecx word ptr [ecx] +
cmp cx ax +
jnz loc_41B722  +
xor eax eax +
pop ebp  +
retn   +
***
sbb eax eax +
and eax 2 +
dec eax  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+0Ch] +
push dword ptr [eax]  +
push dword ptr [ebp+8]  +
call sub_41020C  +
pop ecx  +
pop ecx  +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_0] +
cmp dword ptr [eax+8] 68h +
jnz loc_41B763  +
cmp word ptr [eax] 7Fh +
jz loc_41B763  +
xor eax eax +
inc eax  +
jmp loc_41B765  +
xor eax eax +
pop ebp  +
retn 4  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_0] 0 +
jz loc_41B7C3  +
test [ebp+arg_4] 0FFFFFFFDh +
jnz loc_41B7C3  +
push offset loc_41B72F  +
push 8  +
push 146h  +
push offset off_404AB0  +
push [ebp+arg_0]  +
call sub_41B9F8  +
add esp 14h +
test eax eax +
jz loc_41B7C3  +
mov ecx [eax+4] +
imul ecx ecx +
add ecx offset dword_403B58 +
test byte ptr [ebp+arg_4] 2 +
jnz loc_41B7BE  +
push ecx  +
call sub_41B74A  +
test eax eax +
jnz loc_41B7C3  +
mov ax [ecx] +
jmp loc_41B7CE  +
push 57h  +
call ds:SetLastError  +
xor ax ax +
pop ebp  +
retn 8  +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov ecx [ebp+arg_4] +
push ebx  +
xor ebx ebx +
xor eax eax +
cmp ecx ebx +
mov edx 80070057h +
jz loc_41B7F5  +
cmp ecx 7FFFFFFFh +
jbe loc_41B7F7  +
mov eax edx +
cmp eax ebx +
jl loc_41B84D  +
push edi  +
mov edi [ebp+arg_C] +
cmp edi 7FFFFFFEh +
jbe loc_41B811  +
mov ecx [ebp+arg_0] +
mov eax edx +
mov [ecx] bx +
jmp loc_41B84C  +
test ecx ecx +
mov eax [ebp+arg_0] +
push esi  +
mov esi ecx +
jz loc_41B83E  +
mov edx [ebp+arg_8] +
sub edi ecx +
sub edx eax +
lea ecx [edi+esi] +
test ecx ecx +
jz loc_41B83A  +
movzx ecx word ptr [edx+eax] +
test cx cx +
jz loc_41B83A  +
mov [eax] cx +
inc eax  +
inc eax  +
dec esi  +
jnz loc_41B822  +
test esi esi +
jnz loc_41B845  +
dec eax  +
dec eax  +
mov ebx 8007007Ah +
and word ptr [eax] 0 +
mov eax ebx +
pop esi  +
pop edi  +
pop ebx  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
push esi  +
push edi  +
jl loc_41B8E8  +
cmp [ebp+arg_4] 0 +
jnz loc_41B874  +
cmp [ebp+arg_8] 0 +
jnz loc_41B8E8  +
test [ebp+arg_C] 0FFFFFFFDh +
jnz loc_41B8E8  +
push offset loc_41B708  +
push 0Ch  +
push 147h  +
lea eax [ebp+arg_0] +
push offset dword_403B58  +
push eax  +
call sub_41B9F8  +
mov ecx eax +
add esp 14h +
test ecx ecx +
jz loc_41B8E8  +
test byte ptr [ebp+arg_C] 2 +
jnz loc_41B8B0  +
push ecx  +
call sub_41B74A  +
test eax eax +
jnz loc_41B8E8  +
mov edi [ecx+4] +
mov eax edi +
lea edx [eax+2] +
mov cx [eax] +
inc eax  +
inc eax  +
test cx cx +
jnz loc_41B8B8  +
sub eax edx +
sar eax 1 +
cmp [ebp+arg_4] 0 +
lea esi [eax+1] +
jz loc_41B8E4  +
push esi  +
push edi  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_41B7D7  +
test eax eax +
jge loc_41B8E4  +
push 7Ah  +
jmp loc_41B8EA  +
mov eax esi +
jmp loc_41B8F2  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
push esi  +
push edi  +
xor edi edi +
cmp [ebp+arg_0] edi +
jz loc_41B9A7  +
cmp [ebp+arg_8] edi +
jle loc_41B920  +
cmp [ebp+arg_4] edi +
jz loc_41B9A7  +
cmp [ebp+arg_8] edi +
jl loc_41B9A7  +
test [ebp+arg_C] 0FFFFFFFDh +
jnz loc_41B9A7  +
push offset loc_41B72F  +
push 8  +
push 146h  +
push offset off_404AB0  +
push [ebp+arg_0]  +
call sub_41B9F8  +
mov ecx [eax+4] +
imul ecx ecx +
mov edx offset dword_403B58 +
add esp 14h +
add ecx edx +
test byte ptr [ebp+arg_C] 2 +
jnz loc_41B968  +
push ecx  +
call sub_41B74A  +
test eax eax +
jnz loc_41B9A7  +
mov ecx [ecx+8] +
imul ecx ecx +
add ecx edx +
mov ecx [ecx+4] +
mov eax ecx +
lea edx [eax+2] +
mov si [eax] +
inc eax  +
inc eax  +
cmp si di +
jnz loc_41B978  +
sub eax edx +
sar eax 1 +
cmp [ebp+arg_4] edi +
lea esi [eax+1] +
jz loc_41B9A3  +
push esi  +
push ecx  +
push [ebp+arg_8]  +
push [ebp+arg_4]  +
call sub_41B7D7  +
test eax eax +
jge loc_41B9A3  +
push 7Ah  +
jmp loc_41B9A9  +
mov eax esi +
jmp loc_41B9B1  +
push 57h  +
call ds:SetLastError  +
xor eax eax +
pop edi  +
pop esi  +
pop ebp  +
retn 10h  +
***
mov edi edi +
push ebp  +
mov ebp esp +
cmp [ebp+arg_8] 0 +
jnz loc_41B9CB  +
xor eax eax +
pop ebp  +
retn   +
mov edx [ebp+arg_4] +
mov ecx [ebp+arg_0] +
dec [ebp+arg_8]  +
jz loc_41B9E9  +
movzx eax word ptr [ecx] +
test ax ax +
jz loc_41B9E9  +
cmp ax [edx] +
jnz loc_41B9E9  +
inc ecx  +
inc ecx  +
inc edx  +
inc edx  +
jmp loc_41B9D1  +
movzx eax word ptr [ecx] +
movzx ecx word ptr [edx] +
sub eax ecx +
pop ebp  +
retn   +
***
mov edi edi +
push ebp  +
mov ebp esp +
mov eax [ebp+arg_8] +
mov ecx [ebp+arg_4] +
push esi  +
lea esi [eax-1] +
imul esi [ebp+arg_C] +
push edi  +
xor edi edi +
add esi ecx +
mov [ebp+arg_4] ecx +
cmp ecx edi +
jnz loc_41BA37  +
cmp eax edi +
jz loc_41BA37  +
call sub_41319D  +
push edi  +
push edi  +
push edi  +
push edi  +
push edi  +
mov dword ptr [eax] 16h +
call sub_413F44  +
add esp 14h +
xor eax eax +
jmp loc_41BA49  +
cmp [ebp+arg_C] edi +
jbe loc_41BA1B  +
cmp [ebp+arg_10] edi +
jz loc_41BA1B  +
push ebx  +
cmp ecx esi +
jbe loc_41BA4F  +
xor eax eax +
pop ebx  +
pop edi  +
pop esi  +
pop ebp  +
retn   +
xor edi edi +
mov ebx eax +
shr ebx 1 +
jz loc_41BAA0  +
mov [ebp+arg_8] eax +
and [ebp+arg_8] 1 +
mov eax ebx +
jnz loc_41BA63  +
lea eax [ebx-1] +
imul eax [ebp+arg_C] +
add eax [ebp+arg_4] +
mov edi eax +
push edi  +
push [ebp+arg_0]  +
call [ebp+arg_10]  +
pop ecx  +
pop ecx  +
test eax eax +
jz loc_41BA9C  +
jge loc_41BA8B  +
sub edi [ebp+arg_C] +
cmp [ebp+arg_8] 0 +
mov esi edi +
jnz loc_41BA93  +
lea eax [ebx-1] +
jmp loc_41BA95  +
mov eax [ebp+arg_C] +
add edi eax +
mov [ebp+arg_4] edi +
mov eax ebx +
cmp [ebp+arg_4] esi +
jbe loc_41BA4D  +
jmp loc_41BA46  +
mov eax edi +
jmp loc_41BA48  +
cmp eax edi +
jz loc_41BA46  +
push [ebp+arg_4]  +
push [ebp+arg_0]  +
call [ebp+arg_10]  +
neg eax  +
sbb eax eax +
pop ecx  +
not eax  +
and eax [ebp+arg_4] +
pop ecx  +
jmp loc_41BA48  +
***
mov dword_41FAC8 24h +
push offset loc_41BB93  +
mov dword_41FAC4 offset off_4062A0 +
mov dword_41FF54 esi +
call sub_41069E  +
pop ecx  +
pop esi  +
retn   +
***
call sub_41069E  +
pop ecx  +
retn   +
***
jmp fword ptr [eax+5]  +
***
call ds:GetProcessHeap  +
push offset loc_41BC14  +
mov dword_41F9D8 offset off_4025F4 +
mov dword_41F9DC eax +
mov byte_41F9E0 0 +
call sub_41069E  +
pop ecx  +
retn   +
***
call sub_41069E  +
pop ecx  +
retn   +
***
cmp dword_41FAC8 0 +
mov dword_41FAC4 offset off_4062A0 +
jz locret_41BBF0  +
push esi  +
mov esi dword_41FAD0 +
test esi esi +
jz loc_41BBCE  +
push edi  +
push dword ptr [esi+4]  +
call dword ptr [esi]  +
mov edi [esi+8] +
push esi  +
call sub_40FFB3  +
pop ecx  +
mov esi edi +
test edi edi +
jnz loc_41BBB2  +
and dword_41FAD0 esi +
pop edi  +
mov eax dword_41FAEC +
pop esi  +
test eax eax +
jz loc_41BBDE  +
mov ecx [eax] +
push eax  +
call dword ptr [ecx+8]  +
push offset unk_41FAD4  +
call ds:DeleteCriticalSection  +
and dword_41FAC8 0 +
retn   +
***
mov ecx offset dword_41F9D8 +
jmp sub_41A56F  +
***
mov dword_41F9E4 offset off_402608 +
retn   +
***
pop esp  +
retf   +
***
cwde   +
int 1  +
add [edx+edx+0] bh +
add ah dh +
retn   +
***
retf 1CDh  +
***
add dh cl +
add [eax] eax +
mov al ds:0E8000012h +
retn   +
***
retf   +
***
retn   +
***
